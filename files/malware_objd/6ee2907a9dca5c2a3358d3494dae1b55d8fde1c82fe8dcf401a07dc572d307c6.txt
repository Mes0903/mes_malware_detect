
6ee2907a9dca5c2a3358d3494dae1b55d8fde1c82fe8dcf401a07dc572d307c6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	pop    edx
  402ab5:	jmp    0x402af4
  402ab7:	inc    eax
  402ab8:	jl     0x402b36
  402aba:	jl     0x402b38
  402abc:	xor    al,0x5f
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	sub    eax,0x6d6c6c64
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi+0x731644f2]
  402b65:	push   ebx
  402b66:	mov    gs,WORD PTR [eax]
  402b68:	daa    
  402b69:	sbb    eax,0x5b32d7c1
  402b6e:	push   edx
  402b6f:	(bad)  
  402b70:	call   0x46aa:0x33713d99
  402b77:	jbe    0x402b63
  402b79:	loope  0x402b8a
  402b7b:	gs mov ch,0x34
  402b7e:	imul   ebp,DWORD PTR gs:[ebp-0x59],0x4a
  402b83:	pop    es
  402b84:	shl    BYTE PTR [esi-0x6e],0x25
  402b88:	mov    bh,0x21
  402b8a:	inc    ecx
  402b8b:	pop    es
  402b8c:	fs or  eax,0xffb725d1
  402b92:	rcr    al,1
  402b94:	mov    dl,0x87
  402b96:	fs mov edx,0x84b27843
  402b9c:	mov    ebp,0xe063397b
  402ba1:	emms   
  402ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ba4:	lds    ebx,FWORD PTR [ecx]
  402ba6:	jg     0x402bf0
  402ba8:	or     eax,eax
  402baa:	pop    edx
  402bab:	or     eax,0xfbdbcd4e
  402bb0:	sub    DWORD PTR ds:0xade2a5a5,esp
  402bb6:	add    edi,DWORD PTR [esi]
  402bb8:	xlat   BYTE PTR ds:[ebx]
  402bb9:	cmc    
  402bba:	rol    BYTE PTR [ebx],1
  402bbc:	xchg   ebx,eax
  402bbd:	mov    eax,0xd8ce2181
  402bc2:	mov    ds:0xc7fa50bc,al
  402bc7:	add    ch,BYTE PTR [ebp+ecx*4+0x7561f668]
  402bce:	cmp    BYTE PTR [edx],cl
  402bd0:	xor    DWORD PTR ds:0xefa3240d,esi
  402bd6:	stos   BYTE PTR es:[edi],al
  402bd7:	pop    ebp
  402bd8:	dec    edx
  402bd9:	mov    ds:0x9c8682d6,al
  402bde:	mov    edx,0x5aa3e00a
  402be3:	jle    0x402c1b
  402be5:	daa    
  402be6:	mov    edx,0xdc7fbce1
  402beb:	mov    ebx,0xaee66afb
  402bf0:	mov    cl,0xa4
  402bf2:	dec    ebx
  402bf3:	fist   DWORD PTR [edi]
  402bf5:	sub    eax,0x4da0c808
  402bfa:	rcr    BYTE PTR [ebp-0x2600e8b7],cl
  402c00:	and    BYTE PTR [ecx+0x640c7fc8],cl
  402c06:	rol    BYTE PTR [eax],cl
  402c08:	fisttp DWORD PTR [esi+0x58]
  402c0b:	aas    
  402c0c:	arpl   WORD PTR [ebp+0x20cba40b],si
  402c12:	mov    edx,0xe62de4b6
  402c17:	cmp    edx,esi
  402c19:	clc    
  402c1a:	mov    al,ds:0x12092f
  402c1f:	mov    al,ds:0xebb70da5
  402c24:	and    DWORD PTR [ecx+0x7],esi
  402c27:	loope  0x402c6e
  402c29:	jnp    0x402c10
  402c2b:	nop
  402c2c:	out    dx,al
  402c2d:	mov    ss,WORD PTR [edx+0x2c]
  402c30:	lea    esp,[ecx+0xbda6948]
  402c36:	inc    ebp
  402c37:	(bad)
  402c3a:	ins    DWORD PTR es:[edi],dx
  402c3b:	ss mov ebp,0xb8641c14
  402c41:	push   edx
  402c42:	push   esi
  402c43:	mov    ds:0xe6fe221f,al
  402c48:	repnz or bh,BYTE PTR [edx+0x52df2ea4]
  402c4f:	mov    cl,cl
  402c51:	cmp    cl,BYTE PTR ds:0x6adafac5
  402c57:	xor    ah,bh
  402c59:	cli    
  402c5a:	mov    eax,ds:0x215d8bdb
  402c5f:	in     al,0x18
  402c61:	inc    ecx
  402c62:	ret    0x6d62
  402c65:	jmp    0x3689770c
  402c6a:	pop    eax
  402c6b:	push   esi
  402c6c:	les    edx,FWORD PTR [ecx]
  402c6e:	jge    0x402c64
  402c70:	fstp   TBYTE PTR [ebp-0x50]
  402c73:	test   eax,0x37891dc0
  402c78:	repz dec eax
  402c7a:	pop    ebx
  402c7b:	mov    cl,dl
  402c7d:	adc    al,0x53
  402c7f:	int3   
  402c80:	imul   edi,edi,0x3a
  402c83:	sbb    eax,0x48a1556e
  402c88:	clc    
  402c89:	jb     0x402cea
  402c8b:	and    DWORD PTR [ebx],edi
  402c8d:	shl    edx,0xc2
  402c90:	cmp    ebp,DWORD PTR [edi-0x5afd73e]
  402c96:	je     0x402cdc
  402c98:	inc    edx
  402c99:	add    DWORD PTR [ecx],ebp
  402c9b:	in     eax,dx
  402c9c:	cdq    
  402c9d:	pop    esp
  402c9f:	cmp    eax,0x495e8e83
  402ca4:	in     eax,dx
  402ca5:	data16 (bad) 
  402ca7:	jnp    0x402c33
  402ca9:	lahf   
  402caa:	aaa    
  402cab:	inc    esi
  402cac:	daa    
  402cad:	pop    eax
  402cae:	dec    edi
  402caf:	std    
  402cb0:	jns    0x402ce3
  402cb2:	pop    edx
  402cb3:	add    BYTE PTR [eax*1+0x212bb62d],bl
  402cba:	outs   dx,BYTE PTR ds:[esi]
  402cbb:	mov    DWORD PTR [ecx-0x1258e72],esp
  402cc1:	pushf  
  402cc2:	mov    esp,DWORD PTR [eax-0x105b50d6]
  402cc8:	test   DWORD PTR [ebx],0xbf145f08
  402cce:	pop    ss
  402ccf:	mov    edx,0xb5765219
  402cd4:	jecxz  0x402cef
  402cd6:	out    0x20,eax
  402cd8:	sbb    DWORD PTR [ebx-0x6fe197cc],0x25701ac4
  402ce2:	fisubr WORD PTR [ebx+0x5fd8ce2d]
  402ce8:	das    
  402ce9:	ficom  DWORD PTR [ecx+0x13a3f436]
  402cef:	sub    BYTE PTR [edx+ebp*8-0xd],al
  402cf3:	call   0x9fc0:0xa11e5858
  402cfa:	sar    esi,0xfb
  402cfd:	rep ins BYTE PTR es:[edi],dx
  402cff:	cmp    al,dl
  402d01:	(bad)
  402d04:	pop    esp
  402d05:	xchg   edi,eax
  402d06:	jmp    0x402cf8
  402d08:	sub    BYTE PTR [edx+edi*8+0x63e7ed18],dl
  402d0f:	and    ebp,DWORD PTR [edx+0x7d8e3b74]
  402d15:	(bad)
  402d19:	pop    edi
  402d1a:	retf   
  402d1b:	(bad)  
  402d1c:	mov    ds:0x7930ae4a,eax
  402d21:	ins    BYTE PTR es:[edi],dx
  402d22:	addr16 iret 
  402d24:	mov    edx,0x49e24cad
  402d29:	jbe    0x402d5b
  402d2b:	mov    DWORD PTR [esi+edx*2+0x7c],ebp
  402d2f:	mov    dl,0x9d
  402d31:	dec    esi
  402d32:	fwait
  402d33:	xlat   BYTE PTR ds:[ebx]
  402d34:	pushf  
  402d35:	xchg   ecx,eax
  402d36:	call   0x42a53104
  402d3b:	mov    dl,0x19
  402d3d:	jle    0x402d9b
  402d3f:	pusha  
  402d40:	mov    dl,0xf
  402d42:	mov    WORD PTR [ecx+0x5d6dc7b5],gs
  402d48:	sub    al,0xe3
  402d4a:	cmp    eax,0xfb47978
  402d4f:	loop   0x402d82
  402d51:	out    0xc9,al
  402d53:	mov    al,0x97
  402d55:	push   ds
  402d56:	sahf   
  402d57:	(bad)  
  402d59:	call   0x4979:0x3d747112
  402d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d61:	sbb    ch,0xe2
  402d64:	jge    0x402cf7
  402d66:	mov    esp,0xcf152749
  402d6b:	and    eax,0xeff6b103
  402d70:	xchg   BYTE PTR [edx+eiz*8-0x1f],ch
  402d74:	inc    ebx
  402d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d76:	loope  0x402d7a
  402d78:	es jg  0x402df1
  402d7b:	xor    al,0x7f
  402d7d:	jb     0x402dd7
  402d7f:	(bad)  
  402d80:	cli    
  402d81:	and    al,0x4e
  402d83:	dec    edx
  402d84:	and    BYTE PTR [esi],bh
  402d86:	loop   0x402d0d
  402d88:	ror    DWORD PTR [edx-0x4e],1
  402d8b:	or     esp,DWORD PTR [edx]
  402d8d:	idiv   BYTE PTR [edx+ecx*4-0x19733e8d]
  402d94:	and    eax,0x1305dd95
  402d99:	cmp    ecx,DWORD PTR [esp+ebx*1-0x37]
  402d9d:	or     BYTE PTR [esi+0x14cc658b],0x82
  402da4:	jg     0x402e1f
  402da6:	addr16 jo 0x402d32
  402da9:	loop   0x402e09
  402dab:	sub    eax,0x50a64da2
  402db0:	ja     0x402d87
  402db2:	out    0x9f,eax
  402db4:	cwde   
  402db5:	adc    ah,BYTE PTR [eax]
  402db7:	cs inc ebp
  402db9:	out    dx,eax
  402dba:	add    al,0xad
  402dbc:	(bad)  
  402dbd:	mov    dh,0x93
  402dbf:	xlat   BYTE PTR ds:[ebx]
  402dc0:	lock add eax,0xbe17e8af
  402dc6:	(bad)  
  402dc7:	shl    DWORD PTR [edx-0x728f3f94],cl
  402dcd:	retf   0x181d
  402dd0:	and    DWORD PTR [ecx-0x1],0x0
  402dd4:	cmp    eax,0xb1424b77
  402dd9:	imul   ecx,DWORD PTR [eax-0x51],0xffffffc9
  402ddd:	aas    
  402dde:	arpl   WORD PTR [ebp-0x13de7bc],sp
  402de4:	fidiv  WORD PTR [bp+si]
  402de7:	cdq    
  402de8:	jge    0x402e03
  402dea:	adc    dl,BYTE PTR [ecx+eiz*8-0xe5a7812]
  402df1:	stc    
  402df2:	daa    
  402df3:	adc    bl,BYTE PTR [ebx]
  402df5:	dec    ebx
  402df6:	es jle 0x402ddb
  402df9:	inc    ebx
  402dfa:	jne    0x402df5
  402dfc:	and    al,0x7c
  402dfe:	mov    edx,0x25458c55
  402e03:	jbe    0x402e25
  402e05:	pushf  
  402e06:	jge    0x402def
  402e08:	xchg   BYTE PTR [edx-0x4b6b2fb4],cl
  402e0e:	fdivr  DWORD PTR [ebx]
  402e10:	fild   DWORD PTR [edx]
  402e12:	data16 ror ah,1
  402e15:	add    DWORD PTR [ebx],ecx
  402e17:	(bad)  
  402e18:	pop    ebx
  402e19:	icebp  
  402e1a:	inc    eax
  402e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e1c:	aad    0xee
  402e1e:	dec    ebp
  402e1f:	ds jg  0x402de4
  402e22:	mov    ah,BYTE PTR [ebx]
  402e24:	mov    esp,0x5339b26
  402e29:	jb     0x402e52
  402e2b:	iret   
  402e2c:	loope  0x402e1d
  402e2e:	sub    ebp,DWORD PTR [edi-0x13]
  402e31:	xchg   ecx,eax
  402e32:	sub    eax,0x99a851f
  402e37:	test   BYTE PTR [ecx+0x6d8f13fd],0xc9
  402e3e:	mov    dh,0x2a
  402e40:	fisttp WORD PTR [edi-0x391bce6f]
  402e46:	es in  eax,0x7e
  402e49:	add    esi,DWORD PTR gs:[ecx-0x41]
  402e4d:	or     bl,BYTE PTR ss:0x12d9452b
  402e54:	add    BYTE PTR [eax],bh
  402e56:	fucom  st(1)
  402e58:	(bad)  
  402e59:	bound  esp,QWORD PTR [edx+0x34b4cbf8]
  402e5f:	or     al,0xa9
  402e61:	mov    dh,0x74
  402e63:	outs   dx,DWORD PTR ds:[esi]
  402e64:	scas   al,BYTE PTR es:[edi]
  402e65:	leave  
  402e66:	fcom   st(0)
  402e68:	xchg   esi,eax
  402e69:	into   
  402e6a:	sbb    eax,0x1f83c704
  402e6f:	add    ebp,edi
  402e71:	mov    al,ds:0x7c8d016c
  402e76:	leave  
  402e77:	push   edi
  402e78:	sbb    ch,dl
  402e7a:	sbb    DWORD PTR [ebx],edi
  402e7c:	hlt    
  402e7d:	repnz mov eax,0x6a408b34
  402e83:	repz shr DWORD PTR [edi-0x69aa3c75],1
  402e8a:	xlat   BYTE PTR ds:[ebx]
  402e8b:	xor    DWORD PTR [ecx+0x7832b7d],edx
  402e91:	in     eax,0x5b
  402e93:	cmp    dl,dl
  402e95:	xchg   ebx,eax
  402e96:	xor    DWORD PTR [edi],esp
  402e98:	ror    BYTE PTR [edi-0x31],0xe1
  402e9c:	sub    ecx,eax
  402e9e:	xor    ebp,DWORD PTR [edx-0x5c63321]
  402ea4:	xor    ecx,DWORD PTR [ebx-0x7c25be45]
  402eaa:	sbb    ch,dl
  402eac:	das    
  402ead:	je     0x402e89
  402eaf:	pop    edi
  402eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eb2:	sbb    eax,0xbabbfd92
  402eb7:	shr    edx,1
  402eb9:	adc    bh,al
  402ebb:	out    dx,al
  402ebc:	xchg   ebp,eax
  402ebd:	std    
  402ebe:	dec    ebp
  402ebf:	in     al,dx
  402ec0:	leave  
  402ec1:	mov    al,0x22
  402ec3:	adc    edi,ebp
  402ec5:	and    DWORD PTR [ecx-0x664caa50],edi
  402ecb:	das    
  402ecc:	mov    BYTE PTR [esi],ah
  402ece:	inc    esi
  402ecf:	cwde   
  402ed0:	push   0x3a7e9765
  402ed5:	fadd   QWORD PTR [eax+0x2a54d73b]
  402edb:	inc    edx
  402edc:	or     edi,ebp
  402ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402edf:	loope  0x402e90
  402ee1:	cmp    DWORD PTR [esi],edi
  402ee3:	sub    BYTE PTR [ecx+esi*8+0x3e60bba2],al
  402eea:	cld    
  402eeb:	xchg   ebp,eax
  402eec:	mov    bh,0x32
  402eee:	popf   
  402eef:	pop    eax
  402ef0:	push   edx
  402ef1:	daa    
  402ef2:	push   esi
  402ef3:	mov    dh,0x6a
  402ef5:	xchg   edx,eax
  402ef6:	imul   esp,DWORD PTR [edi],0x7b8bee9f
  402efc:	fcmovne st,st(5)
  402efe:	xchg   BYTE PTR [esi+0x5cf64fc9],cl
  402f04:	dec    BYTE PTR [ebp+edx*8-0x60f24493]
  402f0b:	add    ch,BYTE PTR [edi]
  402f0d:	retf   
  402f0e:	clc    
  402f0f:	iret   
  402f10:	xchg   ecx,eax
  402f11:	std    
  402f12:	xchg   ecx,eax
  402f13:	mov    edi,0xfc43b856
  402f18:	cmc    
  402f19:	loop   0x402f78
  402f1b:	lods   eax,DWORD PTR ds:[esi]
  402f1c:	faddp  st(2),st
  402f1e:	clc    
  402f1f:	fistp  WORD PTR [edx]
  402f21:	cmp    BYTE PTR [edx-0x486e0481],ch
  402f27:	mov    ebp,0xceac45da
  402f2c:	dec    edx
  402f2d:	iret   
  402f2e:	jae    0x402f7e
  402f30:	aam    0x17
  402f32:	ficomp DWORD PTR [ebp+0x25]
  402f35:	cmp    ah,BYTE PTR [esi+0x64f06601]
  402f3b:	sub    bh,BYTE PTR [ebx+0x41]
  402f3e:	(bad)  [edx]
  402f40:	dec    edx
  402f41:	psrld  mm5,QWORD PTR [edx-0x1c]
  402f45:	mov    al,ds:0x1b8d6370
  402f4a:	dec    ebx
  402f4b:	mov    BYTE PTR [eax-0x3b],dl
  402f4e:	dec    esp
  402f4f:	mov    ds,WORD PTR ds:0xee3b407
  402f55:	sub    DWORD PTR [ebx-0x2],ecx
  402f58:	ret    
  402f59:	mov    ds:0xaa48a00b,eax
  402f5e:	mov    ebx,0x7f436b3d
  402f63:	push   0x7d57a73a
  402f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f69:	sar    BYTE PTR [esi+0x676a0bfc],0x95
  402f70:	mov    DWORD PTR [edi+0x3bc7841b],esp
  402f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f77:	xchg   edi,ebx
  402f79:	adc    al,0x82
  402f7b:	clc    
  402f7c:	push   edi
  402f7d:	ja     0x402f4b
  402f7f:	sbb    esi,DWORD PTR [eax+ecx*1+0x72239b64]
  402f86:	std    
  402f87:	push   esp
  402f88:	cmp    eax,0x946366a1
  402f8d:	jg     0x402fad
  402f8f:	mov    al,ds:0xa904316
  402f94:	cmp    ebp,DWORD PTR [ecx]
  402f96:	popf   
  402f97:	adc    BYTE PTR [edx+0x6e41cddb],bh
  402f9d:	(bad)  
  402f9e:	test   BYTE PTR [eax-0x1b],ah
  402fa1:	dec    esp
  402fa2:	iret   
  402fa3:	inc    esp
  402fa4:	sbb    esp,DWORD PTR fs:[eax+0x4c]
  402fa8:	fld    TBYTE PTR [ebx+0x32]
  402fab:	mov    eax,ds:0xd26a27b8
  402fb0:	popf   
  402fb1:	xor    ch,BYTE PTR [eax+edx*4+0x483cdb89]
  402fb8:	and    BYTE PTR [ebx+0x5f],al
  402fbb:	jge    0x402f49
  402fbd:	retf   
  402fbe:	pop    es
  402fbf:	repz hlt 
  402fc1:	retf   0x5129
  402fc4:	sti    
  402fc5:	fsubr  QWORD PTR [ecx+0x4f]
  402fc8:	(bad)  
  402fc9:	jmp    0x9b41:0x77c71318
  402fd0:	adc    dh,BYTE PTR [ebx+0x33]
  402fd3:	mov    ecx,0x73eb7659
  402fd8:	loop   0x402fd9
  402fda:	mov    ebx,0x4b626394
  402fdf:	int    0x7f
  402fe1:	int    0x12
  402fe3:	push   cs
  402fe4:	xor    BYTE PTR [edx+0x317d34d],al
  402fea:	ret    0x7d5f
  402fed:	je     0x402fd4
  402fef:	xlat   BYTE PTR ds:[ebx]
  402ff0:	outs   dx,BYTE PTR ds:[esi]
  402ff1:	xchg   ebx,eax
  402ff2:	jno    0x402fa8
  402ff4:	outs   dx,DWORD PTR ds:[esi]
  402ff5:	fs cmp al,0x98
  402ff8:	call   0xbb6baeb9
  402ffd:	xor    al,0xe5
  402fff:	add    al,0x37
  403001:	out    dx,eax
  403002:	mov    bl,0x94
  403004:	mov    WORD PTR [eax],?
  403006:	push   ecx
  403007:	dec    ecx
  403008:	ins    BYTE PTR es:[edi],dx
  403009:	sub    edi,esi
  40300b:	jge    0x40303d
  40300d:	shr    BYTE PTR [esi+0x26],1
  403010:	push   ecx
  403011:	xlat   BYTE PTR ds:[ebx]
  403012:	xchg   DWORD PTR [esi-0x54],edx
  403015:	mov    cl,BYTE PTR [ecx+ecx*8+0x1a]
  403019:	xor    eax,0x5feab17
  40301e:	lods   al,BYTE PTR ds:[esi]
  40301f:	mov    esp,0xc059654d
  403024:	fisub  DWORD PTR [esi+0x29a66436]
  40302a:	mov    esi,0xed032d7c
  40302f:	add    DWORD PTR [edi+0x77837da9],0xd0e45f08
  403039:	pushf  
  40303a:	mov    ch,0x9a
  40303c:	xchg   ah,ch
  40303e:	retf   0xeb61
  403041:	and    DWORD PTR [eax-0x51],ebp
  403044:	dec    ebx
  403045:	push   esi
  403046:	mov    esi,0xd949e910
  40304b:	lahf   
  40304c:	xchg   DWORD PTR [esi],edi
  40304e:	sub    eax,0xc6e21f89
  403053:	and    eax,eax
  403055:	retf   0xcffe
  403058:	mov    al,0x65
  40305a:	mov    ebp,0x99b1ddc8
  40305f:	add    eax,DWORD PTR [ebx]
  403061:	dec    esi
  403062:	outs   dx,BYTE PTR ds:[esi]
  403063:	aam    0xb3
  403065:	lahf   
  403066:	outs   dx,BYTE PTR ds:[esi]
  403067:	scas   al,BYTE PTR es:[edi]
  403068:	retf   
  403069:	loopne 0x403060
  40306b:	push   cs
  40306c:	or     al,0x9d
  40306e:	lock xlat BYTE PTR ds:[ebx]
  403070:	cmp    BYTE PTR [edi],bh
  403072:	es out dx,eax
  403074:	and    eax,0x426942af
  403079:	xchg   esi,eax
  40307a:	fisub  WORD PTR [esi-0x12]
  40307d:	xchg   edi,eax
  40307e:	(bad)  
  40307f:	push   esp
  403080:	push   eax
  403081:	push   0x5a0ad0c3
  403086:	retf   0xac1a
  403089:	adc    BYTE PTR ds:0x56afdc51,al
  40308f:	mov    ah,0xe4
  403091:	cmp    edx,DWORD PTR es:[esi+0xf]
  403095:	aad    0x3
  403097:	push   es
  403098:	push   eax
  403099:	mov    ds:0x457c8330,al
  40309e:	rcr    BYTE PTR [eax],1
  4030a0:	mov    ebx,0x6dd387b9
  4030a5:	dec    ebp
  4030a6:	pop    eax
  4030a7:	push   esp
  4030a8:	pop    eax
  4030a9:	sbb    esi,DWORD PTR [eax+0x55]
  4030ac:	rcr    DWORD PTR [eax+0x65],1
  4030af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030b0:	pop    ecx
  4030b1:	mov    eax,ds:0x7b2b392c
  4030b7:	loope  0x40306f
  4030b9:	inc    ebx
  4030ba:	jbe    0x4030dc
  4030bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030bd:	push   ds
  4030be:	ins    DWORD PTR es:[edi],dx
  4030bf:	(bad)  
  4030c0:	pop    eax
  4030c1:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030c3:	and    edx,ebp
  4030c5:	mov    edx,0xbac22aa9
  4030ca:	call   0x7110:0x48dc80ad
  4030d1:	sar    DWORD PTR ds:0x28f2e4c4,1
  4030d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030d8:	mov    cl,0x76
  4030da:	outs   dx,BYTE PTR ds:[esi]
  4030db:	push   0xbc433933
  4030e0:	lods   eax,DWORD PTR ds:[si]
  4030e2:	adc    DWORD PTR [edx+0x5f],0xb55c6030
  4030e9:	mov    eax,0x18d14b84
  4030ee:	pop    edi
  4030ef:	jb     0x403152
  4030f1:	addr16 sub eax,0xcbf629b6
  4030f7:	mov    bh,0xaf
  4030f9:	iret   
  4030fa:	adc    al,bl
  4030fc:	ss inc esp
  4030fe:	sub    BYTE PTR [eax-0x18e79ff6],dl
  403104:	add    DWORD PTR ds:0xb2d23f91,0x6a72ba2d
  40310e:	and    DWORD PTR [edi+0xb7e3366],0x62
  403115:	int3   
  403116:	not    BYTE PTR ds:0x10412e9f
  40311c:	loopne 0x4030dd
  40311e:	push   0x2de8d202
  403123:	stos   BYTE PTR es:[edi],al
  403124:	ins    DWORD PTR es:[edi],dx
  403125:	mov    edi,DWORD PTR ds:0x2d28797c
  40312b:	mov    ah,0x70
  40312d:	nop
  40312e:	repz mov ds:0xca01f978,al
  403134:	mov    ch,0x95
  403136:	lea    esi,[edi]
  403138:	push   cs
  403139:	dec    ebp
  40313a:	mov    BYTE PTR [ebx+0x79],al
  40313d:	ss inc ebp
  40313f:	xchg   ebp,eax
  403140:	pusha  
  403141:	test   BYTE PTR [esi-0x13],ah
  403144:	sar    DWORD PTR [edi+ebp*4+0x1bc59082],cl
  40314b:	sub    BYTE PTR [ebp-0xc1a0247],ah
  403151:	cmp    BYTE PTR [edi-0x1b42bac6],ch
  403157:	push   esi
  403158:	dec    esp
  403159:	jg     0x403170
  40315b:	cmp    al,0x2b
  40315d:	mov    eax,0x1d295ba4
  403162:	rcr    edi,1
  403164:	js     0x403137
  403166:	push   ds
  403167:	jno    0x403181
  403169:	rcl    DWORD PTR [ebp-0x4dbc26d6],1
  40316f:	addr16 inc ebp
  403172:	(bad)  
  403174:	adc    al,0xc5
  403176:	call   0x122e25d7
  40317b:	ds pop ebp
  40317d:	or     edi,ecx
  40317f:	jne    0x403168
  403181:	retf   0xee7f
  403184:	inc    eax
  403185:	je     0x403107
  403187:	push   eax
  403188:	std    
  403189:	fnsave [edi+0x0]
  40318c:	arpl   si,bp
  40318e:	mov    bl,0x52
  403190:	jb     0x4031b1
  403192:	cdq    
  403193:	cmp    al,0xa3
  403195:	jmp    0x403120
  403197:	and    BYTE PTR [edx+eax*8],al
  40319a:	nop
  40319b:	mov    esi,0x98a99808
  4031a0:	xchg   ecx,eax
  4031a1:	lea    esp,[ebx-0xbc7d124]
  4031a7:	dec    ebx
  4031a8:	(bad)  
  4031a9:	adc    al,0x1c
  4031ab:	jl     0x4031b3
  4031ad:	adc    BYTE PTR [edx],cl
  4031af:	and    al,0x4c
  4031b1:	pushf  
  4031b2:	xchg   ebx,eax
  4031b3:	or     ch,dl
  4031b5:	fcom   QWORD PTR [ebp+0x4e35d3f]
  4031bb:	mov    eax,0x673760e9
  4031c0:	retf   0xa786
  4031c3:	fxch   st(4)
  4031c5:	mov    edi,0x7fec6cad
  4031ca:	hlt    
  4031cb:	ror    al,cl
  4031cd:	fisttp QWORD PTR [eax+eiz*4]
  4031d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031d1:	cmp    BYTE PTR [ebp-0x7],bl
  4031d4:	pusha  
  4031d5:	sub    cl,BYTE PTR [edi+0x6c]
  4031d8:	ss pop ebp
  4031da:	jl     0x4031bf
  4031dc:	xor    DWORD PTR [edi+edx*4+0x39],0x7e2c3b53
  4031e4:	cwde   
  4031e5:	outs   dx,DWORD PTR ds:[esi]
  4031e6:	or     eax,0xee0e33b
  4031eb:	outs   dx,DWORD PTR ds:[esi]
  4031ec:	sub    esp,DWORD PTR [esp+edi*2+0xff348ec]
  4031f3:	call   0x15a4:0xff13dded
  4031fa:	adc    esp,DWORD PTR [edi-0x4c]
  4031fd:	daa    
  4031fe:	fsubr  QWORD PTR [edi+0x55]
  403201:	mov    eax,ds:0x6b31bc55
  403206:	cld    
  403207:	mov    ebx,0x4d6c3b75
  40320c:	dec    ebx
  40320d:	mov    ebx,0x6365824c
  403212:	icebp  
  403213:	and    ecx,DWORD PTR [edi]
  403215:	push   eax
  403216:	fidivr WORD PTR cs:[edx+0x516fecee]
  40321d:	jns    0x403276
  40321f:	fldenv [ebp+0x145b7d5c]
  403225:	pop    ebp
  403226:	sub    esi,DWORD PTR ds:0x837390e7
  40322c:	out    0x5a,eax
  40322e:	pushf  
  40322f:	dec    eax
  403230:	lea    esp,[edi+0x370592e2]
  403236:	mov    ah,0xb4
  403238:	push   ebx
  403239:	xchg   esi,eax
  40323a:	inc    ebx
  40323b:	sbb    eax,0xf7065ffa
  403240:	pop    edi
  403241:	mov    ebp,0x9bc37b6d
  403246:	ja     0x403296
  403248:	aad    0x10
  40324a:	pop    esi
  40324b:	fsub   QWORD PTR [esi+0x255cb12f]
  403251:	xchg   esi,eax
  403252:	pusha  
  403253:	fld    DWORD PTR [ebp+0x7b]
  403256:	dec    esp
  403257:	dec    eax
  403258:	sbb    al,0x62
  40325a:	xchg   edx,eax
  40325b:	ds jge 0x40329a
  40325e:	pop    edx
  40325f:	xor    BYTE PTR [esi+0x3f],al
  403262:	mov    edi,0xe5e02a51
  403267:	inc    ecx
  403268:	inc    ecx
  403269:	dec    ebp
  40326a:	mov    ebp,0x13ae4dc8
  40326f:	and    ecx,DWORD PTR [esi-0x2f]
  403272:	xchg   edx,eax
  403273:	push   cs
  403274:	xchg   esp,eax
  403275:	xchg   edi,eax
  403276:	retf   0x73a2
  403279:	cmp    bh,dl
  40327b:	mov    al,0x76
  40327d:	sbb    DWORD PTR [ecx],esp
  40327f:	push   esi
  403280:	retf   
  403281:	or     eax,0x2e7a4db7
  403286:	fnsave [ebx-0xd]
  403289:	mov    dh,0x72
  40328b:	into   
  40328c:	push   edi
  40328d:	jnp    0x4032af
  40328f:	imul   esi,DWORD PTR ds:0xcbc4422,0x2f969dac
  403299:	(bad)  [ebp+0x23]
  40329c:	jp     0x403312
  40329e:	mov    ebx,0x8d374f96
  4032a3:	or     al,0x6a
  4032a5:	repnz inc esp
  4032a7:	pop    ds
  4032a8:	dec    eax
  4032a9:	xchg   ebx,eax
  4032aa:	xchg   DWORD PTR [ebx-0x78c945e0],ecx
  4032b0:	or     DWORD PTR ss:[edi],edx
  4032b3:	mov    edx,0xf3279c77
  4032b8:	mul    BYTE PTR [edi]
  4032ba:	mov    esi,DWORD PTR [edi-0x7e0daee1]
  4032c0:	pop    ss
  4032c1:	cmp    ecx,esp
  4032c3:	push   esi
  4032c4:	push   cs
  4032c5:	pop    edi
  4032c6:	dec    eax
  4032c7:	push   edx
  4032c8:	cmc    
  4032c9:	ret    
  4032ca:	shr    BYTE PTR [esi],0x8a
  4032cd:	jl     0x403262
  4032cf:	sar    BYTE PTR [ebx+0x616f0b05],1
  4032d5:	das    
  4032d6:	(bad)  
  4032d7:	mul    ah
  4032d9:	psllq  mm6,mm2
  4032dc:	jmp    0xb3ee7733
  4032e1:	push   0xffffffbd
  4032e3:	push   DWORD PTR [ebx]
  4032e5:	fs mov ebx,0x9b8fe4ff
  4032eb:	and    cl,BYTE PTR [edx+0x2a]
  4032ee:	push   esi
  4032ef:	mov    ch,0x9a
  4032f1:	loopne 0x403319
  4032f3:	push   0x2667eac4
  4032f8:	lock test cl,cl
  4032fb:	popa   
  4032fc:	dec    esp
  4032fd:	rcr    DWORD PTR [ebx+0x17237c35],0x5a
  403304:	push   ebx
  403305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403306:	cmpxchg DWORD PTR [edi-0x2b],eax
  40330a:	mov    bh,0xa7
  40330c:	sbb    DWORD PTR [ebp-0x12],esp
  40330f:	addr16 sbb eax,0xb5b4e6d2
  403315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403316:	ja     0x403301
  403318:	ficomp WORD PTR [esi+0x514b5b24]
  40331e:	in     eax,dx
  40331f:	add    ch,al
  403321:	mov    edx,0x619b0add
  403326:	inc    edx
  403327:	mov    edi,0xce8dc5c0
  40332c:	fistp  DWORD PTR ds:0xa0c943f7
  403332:	popa   
  403333:	outs   dx,BYTE PTR ds:[esi]
  403334:	mov    edi,0x4f7f65dd
  403339:	fisttp WORD PTR [esi+0x64634bd2]
  40333f:	nop
  403340:	mov    ebp,0x65d62144
  403345:	push   cs
  403346:	jg     0x4033a1
  403348:	rol    DWORD PTR [eax-0x20],1
  40334b:	sub    BYTE PTR [edx+0x75],ah
  40334e:	fwait
  40334f:	lods   al,BYTE PTR ds:[esi]
  403350:	daa    
  403351:	fcmovnbe st,st(4)
  403353:	(bad)  [ecx+0x50]
  403356:	call   0x6a8c:0xe4d4be12
  40335d:	and    eax,0xa836c0c0
  403362:	jne    0x4033a1
  403364:	push   esp
  403365:	repz jbe 0x403378
  403368:	jl     0x403325
  40336a:	ds jnp 0x403324
  40336d:	cmp    DWORD PTR [ebp+0x42],0x53
  403371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403372:	cmp    al,0xbe
  403374:	fwait
  403375:	test   bl,dl
  403377:	adc    eax,0xcdf94c08
  40337c:	cmp    eax,0xdcdc3692
  403381:	(bad)  
  403382:	jg     0x403322
  403384:	xchg   esp,eax
  403385:	aaa    
  403386:	jp     0x403366
  403388:	jbe    0x4033f5
  40338a:	jne    0x403377
  40338c:	jg     0x4033c0
  40338e:	mov    ecx,DWORD PTR [edi+0x1d]
  403391:	fiadd  DWORD PTR [edi-0x7b]
  403394:	pop    ds
  403395:	sub    eax,0xe6f13af6
  40339a:	or     DWORD PTR [ecx-0x50b32a3a],eax
  4033a0:	pop    ecx
  4033a1:	dec    esp
  4033a2:	mov    al,ds:0xb4016cd
  4033a7:	pop    esi
  4033a8:	jmp    0x4033d2
  4033aa:	popa   
  4033ab:	aas    
  4033ac:	les    esp,FWORD PTR [ebx+eiz*4]
  4033af:	jo     0x4033b9
  4033b1:	stc    
  4033b2:	mov    bl,0x2f
  4033b4:	xor    ebp,DWORD PTR [esi-0x77]
  4033b7:	fsubr  DWORD PTR [ebx+0x445dd577]
  4033bd:	jg     0x403401
  4033bf:	imul   esi,DWORD PTR [edx],0xde76e467
  4033c5:	ret    
  4033c6:	xchg   ebp,eax
  4033c7:	jbe    0x403412
  4033c9:	lds    edx,FWORD PTR [ebx]
  4033cb:	cmp    edx,DWORD PTR [eax+ebp*8+0x52ba5986]
  4033d2:	les    esi,FWORD PTR [ebp-0x10b583f3]
  4033d8:	xchg   ecx,eax
  4033d9:	lea    esp,[ebp+ebp*8-0x2ec1bec9]
  4033e0:	fmul   QWORD PTR [ecx+ecx*2+0x46]
  4033e4:	jp     0x4033e8
  4033e6:	adc    dl,BYTE PTR [esi]
  4033e8:	or     DWORD PTR [edi-0x3fbe9963],edx
  4033ee:	popf   
  4033ef:	and    BYTE PTR [edi+0x278cea56],al
  4033f5:	in     eax,dx
  4033f6:	jns    0x4033f7
  4033f8:	jae    0x40337a
  4033fa:	jge    0x40337c
  4033fc:	sbb    ebx,edi
  4033fe:	sbb    al,0x98
  403400:	adc    DWORD PTR [edx-0x78],edi
  403403:	popa   
  403404:	xor    eax,DWORD PTR ds:0xf712417b
  40340a:	dec    ebp
  40340b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40340c:	jno    0x403485
  40340e:	into   
  40340f:	ins    DWORD PTR es:[edi],dx
  403410:	mov    WORD PTR [edi],fs
  403412:	je     0x4033d4
  403414:	adc    al,0x13
  403416:	push   ds
  403417:	call   0x558b:0x1a2e6a9e
  40341e:	scas   al,BYTE PTR es:[edi]
  40341f:	stc    
  403420:	dec    ecx
  403421:	push   ss
  403422:	adc    bl,dl
  403424:	mov    ch,0x9e
  403426:	pop    ss
  403427:	cmp    BYTE PTR [esi-0x6c],0x25
  40342b:	push   ss
  40342c:	movq   QWORD PTR [ebp+0x2a7139fe],mm2
  403433:	cs push ebx
  403435:	je     0x403477
  403437:	fwait
  403438:	sub    eax,0x29954d7d
  40343d:	jbe    0x4033cf
  40343f:	pop    edx
  403440:	mov    dh,0x8f
  403442:	xor    DWORD PTR [edx+0x13d358ba],esp
  403448:	mov    edi,0xf9404403
  40344d:	ds nop
  40344f:	jae    0x4033f0
  403451:	push   cs
  403452:	lock pop ss
  403454:	out    0x14,eax
  403456:	cmp    BYTE PTR [ebp-0x60],ch
  403459:	out    dx,eax
  40345a:	cmp    al,0x53
  40345c:	cmp    ebx,ebx
  40345e:	pushf  
  40345f:	cmp    eax,0xddc95767
  403464:	pop    ss
  403465:	jmp    0xb21ca1f0
  40346a:	push   eax
  40346b:	fild   WORD PTR [ebp-0x23b0c8c3]
  403471:	or     DWORD PTR [edi+esi*4+0x2aef2937],eax
  403478:	sbb    DWORD PTR [eax+0x3775da90],eax
  40347e:	jns    0x403448
  403480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403481:	std    
  403482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403483:	xchg   edx,eax
  403484:	cmp    al,BYTE PTR [esi]
  403486:	inc    edi
  403487:	fcmovnb st,st(4)
  403489:	loop   0x4034e2
  40348b:	out    0xd1,al
  40348d:	in     eax,dx
  40348e:	cmp    al,BYTE PTR [eax-0x5fde7fb4]
  403494:	fstp   QWORD PTR [edx+eax*1]
  403497:	xacquire xchg DWORD PTR [ebx],esi
  40349a:	bound  ebp,QWORD PTR [edx+edx*4-0x15]
  40349e:	adc    esi,esp
  4034a0:	mov    bh,0x45
  4034a2:	and    dh,dl
  4034a4:	mov    ebx,0xa915703f
  4034a9:	xor    eax,0xa18dbe29
  4034ae:	adc    bl,bh
  4034b0:	bound  esp,QWORD PTR [esi]
  4034b2:	jl     0x4034ab
  4034b4:	leave  
  4034b5:	icebp  
  4034b6:	and    eax,0x95f139e2
  4034bb:	(bad)  
  4034bc:	out    dx,eax
  4034bd:	push   DWORD PTR [esi-0x30]
  4034c0:	mov    ah,BYTE PTR [eax-0x17]
  4034c3:	dec    edi
  4034c4:	mov    ch,0xc5
  4034c6:	outs   dx,BYTE PTR ds:[esi]
  4034c7:	test   eax,0x3e91b78a
  4034cc:	ret    0xf7c7
  4034cf:	ret    0x3d0b
  4034d2:	push   0x71b0b5
  4034d7:	loopne 0x40345f
  4034d9:	dec    esp
  4034da:	adc    al,0x6
  4034dc:	xchg   DWORD PTR [edi+0x57],esp
  4034df:	sbb    al,bl
  4034e1:	ins    DWORD PTR es:[edi],dx
  4034e2:	push   esp
  4034e3:	pop    ss
  4034e4:	add    al,0x8c
  4034e6:	xchg   esp,eax
  4034e7:	dec    ebp
  4034e8:	out    dx,al
  4034e9:	test   BYTE PTR [edi],bh
  4034eb:	inc    eax
  4034ec:	or     DWORD PTR [edi+0x71],esi
  4034ef:	lods   al,BYTE PTR ds:[esi]
  4034f0:	popa   
  4034f1:	jl     0x4034f8
  4034f3:	sub    BYTE PTR [eax-0x5c],dh
  4034f6:	bound  ebp,QWORD PTR [ebp-0x3858cb01]
  4034fc:	add    DWORD PTR [eax-0x5cccfb3f],ecx
  403502:	push   bx
  403504:	stc    
  403505:	sti    
  403506:	inc    esi
  403507:	ror    BYTE PTR [eax+0x71a930a2],1
  40350d:	ins    BYTE PTR es:[edi],dx
  40350e:	sbb    ebp,eax
  403510:	mov    ds:0x7e2a8ff4,eax
  403515:	or     DWORD PTR [edi+0x35462a67],edx
  40351b:	outs   dx,BYTE PTR ds:[esi]
  40351c:	pop    es
  40351d:	push   es
  40351e:	pop    esi
  40351f:	arpl   WORD PTR [esi],cx
  403521:	mov    dh,0x1f
  403523:	sbb    DWORD PTR [edi],esp
  403525:	mov    edx,0xadb2627b
  40352a:	mov    eax,0x5f5b3162
  40352f:	hlt    
  403530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403531:	dec    edi
  403532:	inc    ebp
  403533:	mul    eax
  403535:	inc    edi
  403536:	iret   
  403537:	jmp    0xd2580dc1
  40353c:	test   DWORD PTR [eax],esi
  40353e:	and    al,BYTE PTR [ebp+0x7b]
  403541:	iret   
  403542:	mov    dh,0x2a
  403544:	add    DWORD PTR [edx+ebp*8+0x2f],esp
  403548:	cld    
  403549:	sbb    bh,dl
  40354b:	push   0x3711444e
  403550:	mov    bh,0xcf
  403552:	les    esp,FWORD PTR [ecx-0x3cae46ea]
  403558:	sub    DWORD PTR [esi-0x62],esp
  40355b:	sar    DWORD PTR [ecx],cl
  40355d:	movq   QWORD PTR [edx+ecx*4+0x7813f42b],mm4
  403565:	push   edi
  403566:	lahf   
  403567:	and    BYTE PTR [eax],cl
  403569:	mov    bh,0x97
  40356b:	jl     0x40350f
  40356d:	aaa    
  40356e:	out    dx,eax
  40356f:	inc    edi
  403570:	push   edi
  403571:	scas   eax,DWORD PTR es:[edi]
  403572:	add    DWORD PTR [eax+0x60c5a973],ecx
  403578:	xor    BYTE PTR [ecx-0x7f],ch
  40357b:	jl     0x40352d
  40357d:	in     al,0xe4
  40357f:	pop    esp
  403580:	or     bl,al
  403582:	xchg   BYTE PTR [eax-0x4f],ch
  403585:	stc    
  403586:	(bad)  [ecx]
  403588:	mov    dh,0x9b
  40358a:	adc    esp,DWORD PTR ds:0x7f2e7c34
  403590:	mov    bh,0xc3
  403592:	pop    edi
  403593:	and    ecx,eax
  403595:	fwait
  403596:	lods   al,BYTE PTR ds:[esi]
  403597:	cld    
  403598:	mov    bl,0x1e
  40359a:	mov    ds:0xac2e3d77,eax
  40359f:	mov    al,al
  4035a1:	xchg   esi,esi
  4035a3:	push   ds
  4035a4:	gs push 0xea5e42c0
  4035aa:	push   ebp
  4035ab:	retf   
  4035ac:	inc    esp
  4035ad:	sbb    esi,DWORD PTR [ecx+0x42a6d825]
  4035b3:	leave  
  4035b4:	jg     0x403561
  4035b6:	cli    
  4035b7:	call   0x863ca0d0
  4035bc:	push   ds
  4035bd:	adc    eax,0xa5ab182f
  4035c2:	ret    0xe42f
  4035c5:	mov    esi,0x6c9c3f1e
  4035ca:	daa    
  4035cb:	out    0xd9,al
  4035cd:	ja     0x403620
  4035cf:	dec    esp
  4035d0:	loope  0x4035e9
  4035d2:	mov    dl,0x1d
  4035d4:	or     BYTE PTR [eax+0x4c0f4612],ah
  4035da:	sti    
  4035db:	out    dx,al
  4035dc:	js     0x403630
  4035de:	xor    BYTE PTR [edx-0x3e],bl
  4035e1:	aad    0x57
  4035e3:	repz rol BYTE PTR [ecx-0x19],cl
  4035e7:	ins    BYTE PTR es:[edi],dx
  4035e8:	xchg   si,ax
  4035ea:	call   0x18df:0x1a398aa1
  4035f1:	clts   
  4035f3:	lea    eax,[ebx]
  4035f5:	repz add al,0x28
  4035f8:	arpl   sp,di
  4035fa:	call   0x9bf033
  4035ff:	std    
  403600:	(bad)  
  403601:	xor    al,0xb1
  403603:	(bad)  
  403605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403606:	div    DWORD PTR [eax-0x50]
  403609:	cwde   
  40360a:	(bad)  
  40360c:	xchg   DWORD PTR [esi+0x35cd3d32],eax
  403612:	cmp    eax,0x6faa4469
  403617:	call   0x5753:0x6dc950b3
  40361e:	xchg   ecx,eax
  40361f:	cmp    eax,0x38d2ad
  403624:	jge    0x4035f3
  403626:	push   ebp
  403627:	lahf   
  403628:	push   0xffffffe5
  40362a:	jle    0x403632
  40362c:	dec    esp
  40362d:	mov    bh,0xee
  40362f:	pop    edi
  403630:	retf   0xc178
  403633:	stos   BYTE PTR es:[edi],al
  403634:	outs   dx,BYTE PTR ds:[esi]
  403635:	inc    esi
  403636:	ds push esi
  403638:	push   ds
  403639:	std    
  40363a:	retf   
  40363b:	shr    DWORD PTR ds:0xfd78ae7c,0x2f
  403642:	mov    esi,0x5d67ed0c
  403647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403648:	dec    edi
  403649:	cdq    
  40364a:	not    DWORD PTR [esi]
  40364c:	pop    esi
  40364d:	fucomi st,st(6)
  40364f:	imul   ecx,DWORD PTR [esi-0x3af11a1c],0x79483fa9
  403659:	push   eax
  40365a:	test   DWORD PTR [ecx+0xebe4cf7],esp
  403660:	das    
  403661:	sbb    al,0x89
  403663:	push   0xf2ae52d6
  403668:	dec    esi
  403669:	mov    ds:0x3d43b91b,al
  40366e:	dec    esi
  40366f:	and    al,ah
  403671:	retf   
  403672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403673:	aad    0xdd
  403675:	scas   al,BYTE PTR es:[edi]
  403676:	ins    DWORD PTR es:[edi],dx
  403677:	sub    cl,BYTE PTR [eax-0x2b716343]
  40367d:	mov    eax,ds:0x9519d989
  403682:	xchg   esi,eax
  403683:	pop    ecx
  403684:	push   0x22
  403686:	repnz sbb BYTE PTR [ebp-0x76],0x9d
  40368b:	pop    edi
  40368c:	jb     0x40368d
  40368e:	test   BYTE PTR [edx],ch
  403690:	mov    ecx,0x7c812dae
  403695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403696:	jle    0x40365a
  403698:	mov    bh,0xb3
  40369a:	adc    BYTE PTR [edi-0x11148ab1],dl
  4036a0:	pop    esi
  4036a1:	or     DWORD PTR [ecx+0x309eb056],edi
  4036a7:	push   edx
  4036a8:	mov    dh,0xeb
  4036aa:	call   DWORD PTR [edi+0x5c]
  4036ad:	add    ebx,edx
  4036af:	sub    DWORD PTR [ebx+0x6a],0x40824b06
  4036b6:	inc    edx
  4036b7:	and    DWORD PTR [esi+0x333f6dfd],edx
  4036bd:	mov    ecx,0xd76c56e4
  4036c2:	jb     0x403705
  4036c4:	jecxz  0x403695
  4036c6:	push   eax
  4036c7:	sub    esi,DWORD PTR [edx]
  4036c9:	dec    ebp
  4036ca:	shl    esi,cl
  4036cc:	mul    BYTE PTR [eax+0x57132ba4]
  4036d2:	mov    edi,0xbe4f5b0d
  4036d7:	in     al,dx
  4036d8:	and    esp,DWORD PTR [ebx]
  4036da:	(bad)
  4036dd:	imul   eax,DWORD PTR [ecx],0x3b
  4036e0:	aad    0x86
  4036e2:	in     al,0xb0
  4036e4:	hlt    
  4036e5:	push   edx
  4036e6:	sub    dh,ch
  4036e8:	jne    0x40374c
  4036ea:	xor    BYTE PTR [eax+ecx*4+0x71],ch
  4036ee:	jmp    0x4036ec
  4036f0:	dec    esi
  4036f1:	add    BYTE PTR [edi-0x3a59f951],cl
  4036f7:	movups xmm0,xmm1
  4036fa:	adc    eax,0x7e3aec96
  4036ff:	mov    bl,0x22
  403701:	rcr    BYTE PTR [ecx],0x1e
  403704:	mov    ebp,0x11a34b5
  403709:	dec    eax
  40370a:	push   es
  40370b:	daa    
  40370c:	pop    esp
  40370d:	mov    ebx,0xa8680f63
  403712:	mov    ds:0x7f9a3ca4,al
  403717:	inc    edx
  403718:	aam    0xbe
  40371a:	loope  0x40371c
  40371c:	int3   
  40371d:	and    BYTE PTR [esi],0xdc
  403720:	out    dx,eax
  403721:	pop    ecx
  403722:	sub    ch,BYTE PTR [eax+ebp*1-0x64c80613]
  403729:	retf   0xd2f
  40372c:	rcr    BYTE PTR [edx-0x7cafa56e],1
  403732:	xchg   edi,eax
  403733:	shl    DWORD PTR [esi+0x518430ad],cl
  403739:	add    al,0x4f
  40373b:	lds    edi,FWORD PTR [ebx]
  40373d:	not    DWORD PTR [ebx-0x28]
  403740:	pop    ebx
  403741:	push   es
  403742:	sbb    esp,ebp
  403744:	dec    ebx
  403745:	jp     0x403780
  403747:	rol    DWORD PTR [eax],1
  403749:	add    dh,BYTE PTR [edi]
  40374b:	retf   0xa56
  40374e:	xchg   ebx,eax
  40374f:	xlat   BYTE PTR ds:[ebx]
  403750:	adc    bh,0xc3
  403753:	shl    BYTE PTR [ebp-0x117f1c46],0x18
  40375a:	jne    0x4037a4
  40375c:	pop    ebx
  40375d:	xor    edx,eax
  40375f:	mov    bl,0x8a
  403761:	jne    0x4037b2
  403763:	inc    esp
  403764:	mov    esi,DWORD PTR [edi-0x56]
  403767:	mov    BYTE PTR [esi],cl
  403769:	loop   0x4036f2
  40376b:	dec    edi
  40376c:	mov    al,0x16
  40376e:	ficom  DWORD PTR [edi+eiz*2+0x3]
  403772:	pop    ebp
  403773:	and    eax,0xfe30b357
  403778:	mov    esi,0x91a901b0
  40377d:	fcomi  st,st(0)
  40377f:	jmp    0x2e8f:0xfc12c2fa
  403786:	ins    BYTE PTR es:[edi],dx
  403787:	and    ah,BYTE PTR [edx]
  403789:	dec    ecx
  40378a:	mov    cl,0xda
  40378c:	xchg   ebx,eax
  40378d:	jo     0x4037e0
  40378f:	mov    esi,ebp
  403791:	nop
  403792:	loopne 0x4037d2
  403794:	inc    eax
  403795:	mov    DWORD PTR [ebx-0x43],esi
  403798:	dec    ecx
  403799:	pop    ebp
  40379a:	(bad)  
  40379b:	in     al,0x93
  40379d:	fcmovnu st,st(2)
  40379f:	push   edx
  4037a0:	fdiv   QWORD PTR [eax-0x5da0032b]
  4037a6:	lea    ebx,[ecx+0xb9578ca]
  4037ac:	lea    esp,[ebp+0x45a8c9a9]
  4037b2:	fdiv   DWORD PTR [esi-0x43]
  4037b5:	push   0xad3ebef1
  4037ba:	pop    ebp
  4037bb:	popa   
  4037bc:	popf   
  4037bd:	loop   0x4037d4
  4037bf:	sahf   
  4037c0:	push   edi
  4037c1:	popf   
  4037c2:	loopne 0x40374a
  4037c4:	mov    BYTE PTR [ebp-0x168d265],dh
  4037ca:	add    DWORD PTR [ebp+0x733924e],ebx
  4037d0:	sub    DWORD PTR [esi-0x4a624263],0xb7d470f
  4037da:	retf   0xee5e
  4037dd:	rol    BYTE PTR [edi+0x43a009b1],1
  4037e3:	push   eax
  4037e4:	bound  eax,QWORD PTR [esi+0x31]
  4037e7:	push   ss
  4037e8:	pop    edx
  4037e9:	(bad)  
  4037ea:	out    0x2f,eax
  4037ec:	loope  0x403812
  4037ee:	jnp    0x40386c
  4037f0:	and    DWORD PTR [esi+0x7f9b1e21],esi
  4037f6:	pop    ss
  4037f7:	retf   
  4037f8:	call   0x541ff85d
  4037fd:	(bad)  
  4037ff:	into   
  403800:	mov    ebp,0xea4c4a08
  403805:	or     eax,0x6146f58c
  40380a:	fimul  WORD PTR [edx-0x3c8c2fba]
  403810:	sub    al,0x1b
  403812:	outs   dx,DWORD PTR cs:[esi]
  403814:	retf   
  403815:	jl     0x4037c1
  403817:	repz xchg edx,eax
  403819:	mov    bl,0x61
  40381b:	add    eax,DWORD PTR [edx]
  40381d:	push   ebp
  40381e:	xor    DWORD PTR fs:[esi+0x7d4ea978],ebp
  403825:	mov    eax,ds:0xbd646b3b
  40382a:	test   al,0x9e
  40382c:	mov    eax,ds:0x8a259860
  403831:	dec    edi
  403832:	dec    eax
  403833:	ffree  st(5)
  403835:	imul   esp,DWORD PTR [eax-0xc4680d7],0x76dda6a6
  40383f:	(bad)  
  403840:	imul   BYTE PTR [ebx+edi*1+0x5a]
  403844:	jl     0x4037e2
  403846:	mov    BYTE PTR [ecx],dh
  403848:	xlat   BYTE PTR ds:[ebx]
  403849:	or     DWORD PTR [edx+edx*4],0x7b3940e7
  403850:	stos   DWORD PTR es:[edi],eax
  403851:	cmp    edx,ecx
  403853:	int3   
  403854:	fdivr  QWORD PTR [edx]
  403856:	xor    eax,0xf2660d24
  40385b:	xchg   edi,eax
  40385c:	jmp    0x403871
  40385e:	dec    edi
  40385f:	lahf   
  403860:	lds    ebx,FWORD PTR [esi]
  403862:	push   eax
  403863:	cs sbb eax,0x1569d11a
  403869:	and    bh,bh
  40386b:	or     ch,bl
  40386d:	nop
  40386e:	mov    eax,ds:0x1fa23de3
  403873:	and    cl,BYTE PTR [ebp+eax*2-0x50]
  403877:	mov    cl,0x1
  403879:	retf   
  40387a:	xchg   edi,eax
  40387b:	sub    al,BYTE PTR [eax]
  40387d:	mov    al,ds:0x2d773d89
  403882:	in     eax,0xf6
  403884:	xchg   edx,eax
  403885:	cs repz inc edi
  403888:	out    dx,eax
  403889:	clc    
  40388a:	out    0xbf,eax
  40388c:	xor    ah,al
  40388e:	mov    eax,0x4fc706e1
  403893:	jecxz  0x40382f
  403895:	push   ecx
  403896:	outs   dx,BYTE PTR ds:[si]
  403898:	dec    eax
  403899:	rol    BYTE PTR [ebp-0x5a],cl
  40389c:	and    ch,cl
  40389e:	xchg   ebp,eax
  40389f:	mov    ecx,0xd38a8cb0
  4038a4:	dec    ebx
  4038a5:	pop    eax
  4038a6:	fst    QWORD PTR [esi+0x5e72425c]
  4038ac:	adc    ebp,DWORD PTR [edx+ebp*1+0x14]
  4038b0:	or     ecx,DWORD PTR [ecx+esi*8-0x169e571]
  4038b7:	mov    WORD PTR [edx+0x561fa9ab],ds
  4038bd:	mov    ebp,0x5850618b
  4038c2:	inc    esp
  4038c3:	mov    bl,0x3e
  4038c5:	ret    0xb6a8
  4038c8:	inc    edx
  4038c9:	xor    esp,edi
  4038cb:	mov    ebx,0xeb5036cb
  4038d0:	std    
  4038d1:	pop    ds
  4038d2:	lea    bx,[edx+0x5]
  4038d6:	add    dl,ch
  4038d8:	jge    0x403920
  4038da:	frstor [esi]
  4038dc:	xchg   ecx,eax
  4038dd:	(bad)
  4038e1:	mov    ah,0xda
  4038e3:	fisttp DWORD PTR [esi*2+0x4bb2523d]
  4038ea:	or     DWORD PTR [edi+eiz*2],0xef8d8592
  4038f1:	scas   eax,DWORD PTR es:[edi]
  4038f2:	or     eax,0xa3f8a308
  4038f7:	inc    ecx
  4038f8:	stos   BYTE PTR es:[edi],al
  4038f9:	mov    ebp,0x9d5997a4
  4038fe:	jecxz  0x4038b1
  403900:	retf   
  403901:	js     0x40390d
  403903:	xor    bl,BYTE PTR [ebx-0x6]
  403906:	dec    esi
  403907:	or     al,0x85
  403909:	add    BYTE PTR [ebp+0x34209ca5],0x4d
  403910:	xor    al,BYTE PTR [edx]
  403912:	cmp    eax,DWORD PTR [esi+0x37]
  403915:	jg     0x403945
  403917:	jne    0x40395a
  403919:	xchg   DWORD PTR ds:0x820fc57a,ecx
  40391f:	iretw  
  403921:	dec    eax
  403922:	sub    BYTE PTR [ebx+0x76],bh
  403925:	inc    ebx
  403926:	(bad)  
  403927:	xchg   ecx,eax
  403928:	xchg   ebx,eax
  403929:	lahf   
  40392a:	mov    ecx,0x1dd05585
  40392f:	(bad)  
  403930:	retf   
  403931:	ins    DWORD PTR es:[edi],dx
  403932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403933:	cmp    al,0x65
  403935:	or     DWORD PTR [ebx+ecx*1+0x6177bde2],ebx
  40393c:	popf   
  40393d:	jb     0x403945
  40393f:	dec    edi
  403940:	scas   eax,DWORD PTR es:[edi]
  403941:	ret    
  403942:	jae    0x40391e
  403944:	std    
  403945:	jmp    0x39b279fc
  40394a:	pop    eax
  40394b:	jecxz  0x403962
  40394d:	sar    BYTE PTR [edi+0x41567a1],1
  403953:	pop    ebp
  403954:	or     eax,0x592097c
  403959:	aam    0x97
  40395b:	aas    
  40395c:	add    edi,DWORD PTR [esi+0x2c]
  40395f:	rcl    DWORD PTR [ebp+0x44185c9f],cl
  403965:	(bad)  
  403966:	cmp    eax,0x97c75e1b
  40396b:	mov    ch,0x77
  40396d:	sub    ah,BYTE PTR [edi+0x6f]
  403970:	xor    bh,BYTE PTR [eax+0x3a]
  403973:	xchg   esi,eax
  403974:	retf   0xa46a
  403977:	loopne 0x403921
  403979:	nop
  40397a:	inc    ecx
  40397b:	xor    ch,BYTE PTR [ecx+ebx*1]
  40397e:	and    dl,bh
  403980:	lea    cx,[edx]
  403983:	push   ebp
  403984:	mov    cl,0xa2
  403986:	es loop 0x40398c
  403989:	jp     0x403948
  40398b:	pop    ebx
  40398c:	push   cs
  40398d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40398e:	mov    dl,0xff
  403990:	jg     0x403993
  403992:	test   DWORD PTR [ecx],edi
  403994:	pushf  
  403995:	ins    DWORD PTR es:[edi],dx
  403996:	fldcw  WORD PTR [edx-0x5e104310]
  40399c:	or     cl,0xbd
  40399f:	in     eax,dx
  4039a0:	nop
  4039a1:	(bad)  
  4039a2:	push   ecx
  4039a3:	ret    0xe386
  4039a6:	loope  0x4039f7
  4039a8:	push   edi
  4039a9:	test   al,0x46
  4039ab:	(bad)  
  4039ac:	cmp    esp,esp
  4039ae:	stos   DWORD PTR es:[edi],eax
  4039af:	push   edx
  4039b0:	loope  0x403963
  4039b2:	repz pop edx
  4039b4:	sbb    BYTE PTR [esi],0x3b
  4039b7:	ins    DWORD PTR es:[edi],dx
  4039b8:	in     al,0x6d
  4039ba:	xor    bl,BYTE PTR [edi]
  4039bc:	lock popa 
  4039be:	mov    ds:0x2be95ba2,eax
  4039c3:	inc    esi
  4039c4:	repz mov WORD PTR [edi-0x19],ss
  4039c8:	fidiv  WORD PTR [ecx]
  4039ca:	cmp    DWORD PTR [ebp+0x78d3776d],ecx
  4039d0:	xchg   ebx,eax
  4039d1:	jle    0x4039d0
  4039d3:	add    BYTE PTR [edi-0x62],ch
  4039d6:	clc    
  4039d7:	js     0x4039bb
  4039d9:	xor    edx,DWORD PTR [esi-0x10]
  4039dc:	pop    edx
  4039dd:	test   BYTE PTR [eax+ebp*4-0x7d],dh
  4039e1:	imul   ebx,DWORD PTR [edi],0x4e66ee90
  4039e7:	push   eax
  4039e8:	jo     0x4039ce
  4039ea:	mov    esp,ss
  4039ec:	dec    ebp
  4039ed:	sbb    bl,BYTE PTR [eax]
  4039ef:	cli    
  4039f0:	das    
  4039f1:	lea    esp,[ebp+0x62]
  4039f4:	test   esi,ebx
  4039f6:	sbb    al,0x17
  4039f8:	jbe    0x4039d0
  4039fa:	jp     0x403a43
  4039fc:	adc    DWORD PTR [ecx+0x25],eax
  4039ff:	mov    esp,0x22687902
  403a04:	xchg   ebp,eax
  403a05:	jns    0x4039e3
  403a07:	xor    BYTE PTR [ebx+0x5f],0x74
  403a0b:	mov    BYTE PTR [esi+0x3f4df8a9],ch
  403a11:	cmp    al,0x31
  403a13:	mov    edi,0x6bd0e16
  403a18:	add    DWORD PTR [esp+edi*4+0x2a],eax
  403a1c:	cmp    DWORD PTR [ebx+0x35],eax
  403a1f:	fs mov edx,0x6edea0eb
  403a25:	and    al,0x67
  403a27:	lock push cs
  403a29:	and    DWORD PTR [edx],edi
  403a2b:	cwde   
  403a2c:	mov    al,ds:0xbe1ecbee
  403a31:	xchg   BYTE PTR [edx],ch
  403a33:	lahf   
  403a34:	push   esi
  403a35:	push   esi
  403a36:	pop    esp
  403a37:	cmp    edx,DWORD PTR [ebp+0x21]
  403a3a:	and    al,0xfa
  403a3c:	xchg   edi,eax
  403a3d:	jg     0x403a7f
  403a3f:	cmp    al,0xae
  403a41:	or     ah,BYTE PTR [eax+eax*2-0x68]
  403a45:	adc    ah,BYTE PTR [edx+0x63]
  403a48:	and    edx,DWORD PTR [ecx+0x46a22c86]
  403a4e:	add    WORD PTR [ecx+0x367e83f3],sp
  403a55:	popf   
  403a56:	in     al,dx
  403a57:	mov    ah,0x4e
  403a59:	xchg   ebp,eax
  403a5a:	xchg   edx,eax
  403a5b:	mov    ds,WORD PTR [esi+ecx*1+0x39]
  403a5f:	fwait
  403a60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a61:	push   ecx
  403a62:	ins    BYTE PTR es:[edi],dx
  403a63:	repz sbb eax,0xa7304866
  403a69:	(bad)  
  403a6a:	iret   
  403a6b:	in     eax,0x4e
  403a6d:	call   0xcb318a50
  403a72:	or     DWORD PTR [ecx-0x4d942393],0xffffff82
  403a79:	add    eax,0x61e3ca64
  403a7e:	jecxz  0x403af1
  403a80:	mov    DWORD PTR [edx+0x69],ecx
  403a83:	jecxz  0x403af7
  403a85:	popa   
  403a86:	mov    ecx,0x9baad15e
  403a8b:	icebp  
  403a8c:	shr    DWORD PTR [eax-0x47],1
  403a8f:	mov    bl,0x56
  403a91:	ficomp WORD PTR [eax]
  403a93:	mov    ch,0x13
  403a95:	sbb    eax,0x29d15907
  403a9a:	fs mov eax,0x9dc3cce2
  403aa0:	pop    ebp
  403aa1:	(bad)  
  403aa2:	jbe    0x403ac9
  403aa4:	inc    esi
  403aa5:	jae    0x403a29
  403aa7:	inc    eax
  403aa8:	imul   BYTE PTR [edx+0x7d]
  403aab:	cmp    DWORD PTR [eax+0x632b62cb],edi
  403ab1:	xchg   ecx,eax
  403ab2:	or     ebx,DWORD PTR [ebp+0x1a]
  403ab5:	adc    DWORD PTR [edi-0x78fd6b2f],esi
  403abb:	stos   DWORD PTR es:[edi],eax
  403abc:	std    
  403abd:	cld    
  403abe:	xor    BYTE PTR [ebp+eax*1-0xe9e7bca],0x4e
  403ac6:	popa   
  403ac7:	sub    DWORD PTR [esi],esp
  403ac9:	pop    ecx
  403aca:	loop   0x403abb
  403acc:	jmp    0x403ad0
  403ace:	push   0xffffffc6
  403ad0:	jle    0x403ad7
  403ad2:	adc    DWORD PTR [eax-0x27dc636c],edx
  403ad8:	cs xchg esp,eax
  403ada:	jmp    0x20efa9bb
  403adf:	or     ecx,ecx
  403ae1:	and    eax,0x483f105d
  403ae6:	xchg   esp,eax
  403ae7:	addr16 inc edx
  403ae9:	loope  0x403a95
  403aeb:	fnstenv [ebx-0x20]
  403aee:	cdq    
  403aef:	push   0x2c
  403af1:	pop    ecx
  403af2:	xchg   DWORD PTR [eax],ecx
  403af4:	add    BYTE PTR [esi],bh
  403af6:	(bad)  
  403af7:	mov    dh,0x59
  403af9:	inc    ebp
  403afa:	mov    esi,DWORD PTR ds:[edi-0x3]
  403afe:	ret    
  403aff:	ret    0xfc85
  403b02:	or     al,0x2c
  403b04:	in     al,0x7a
  403b06:	pusha  
  403b07:	xchg   BYTE PTR [esi],bh
  403b09:	(bad)
  403b0c:	cmp    eax,0xa7bdaa5f
  403b11:	test   DWORD PTR [ecx-0x72],edi
  403b14:	cli    
  403b15:	jb     0x403b72
  403b17:	pop    esp
  403b18:	adc    eax,0xa0545f6
  403b1d:	and    bh,BYTE PTR [eax]
  403b1f:	shl    DWORD PTR [ebp+0x38e15a90],cl
  403b25:	mov    esp,0xc948d74e
  403b2a:	jge    0x403aff
  403b2c:	mov    esi,0x1ca98ba1
  403b32:	mov    WORD PTR es:[ebx],es
  403b35:	out    dx,eax
  403b36:	call   0x9f09:0xc85ea8d
  403b3d:	pusha  
  403b3e:	adc    dh,dl
  403b40:	jno    0x403ac4
  403b42:	push   ebp
  403b43:	sub    BYTE PTR [edx],cl
  403b45:	shl    BYTE PTR [esi-0x4e495a17],0xfa
  403b4c:	jnp    0x403b9a
  403b4e:	cwde   
  403b4f:	shl    DWORD PTR [eax],1
  403b51:	push   ecx
  403b52:	inc    esp
  403b53:	mov    bl,0x6f
  403b55:	fbstp  TBYTE PTR [esi]
  403b57:	push   ds
  403b58:	shl    al,cl
  403b5a:	mov    ecx,0xf915508c
  403b5f:	push   ebp
  403b60:	adc    eax,DWORD PTR [edx+0x3ff3023d]
  403b66:	mov    eax,DWORD PTR [esi]
  403b68:	cmp    dh,BYTE PTR [ebp+0x7b861c8b]
  403b6e:	int3   
  403b6f:	jge    0x403be7
  403b71:	mov    dh,0x9
  403b73:	mov    ?,WORD PTR [eax]
  403b75:	jle    0x403bce
  403b77:	ds es sahf 
  403b7a:	arpl   WORD PTR [edi-0x43],bp
  403b7d:	cmp    esp,DWORD PTR [ebp+eiz*8+0xc]
  403b81:	cli    
  403b82:	or     DWORD PTR [eax-0x3af1b4e6],ebx
  403b88:	add    DWORD PTR [edx],ecx
  403b8a:	call   0xde04:0x257fe795
  403b91:	mov    edx,DWORD PTR [eax]
  403b93:	mov    al,0x3e
  403b95:	std    
  403b96:	push   ebx
  403b97:	lods   eax,DWORD PTR ds:[esi]
  403b98:	rol    BYTE PTR [ebx+edi*2+0x5c434a7a],0x8e
  403ba0:	out    0x48,al
  403ba2:	and    eax,0x135a0939
  403ba7:	cmp    al,0x86
  403ba9:	mov    eax,ds:0xc5fea5b
  403bae:	stos   BYTE PTR es:[edi],al
  403baf:	push   eax
  403bb0:	push   ds
  403bb1:	and    al,0x84
  403bb3:	pop    ebp
  403bb4:	xchg   ebx,eax
  403bb5:	mov    dl,0xfa
  403bb7:	jmp    0x61cf2e5d
  403bbc:	jge    0x403b7d
  403bbe:	xchg   edi,eax
  403bbf:	lods   al,BYTE PTR ds:[esi]
  403bc0:	sbb    al,0x35
  403bc2:	adc    BYTE PTR [ecx+eiz*1+0x7f4d090c],ah
  403bc9:	mov    dh,0x52
  403bcb:	jp     0x403c4a
  403bcd:	maskmovq mm1,mm6
  403bd0:	mov    cl,0x40
  403bd2:	cwde   
  403bd3:	jmp    0x66e7:0x39307d2c
  403bda:	push   0x75414b49
  403bdf:	mov    edx,0xb8e03de1
  403be4:	sub    ch,al
  403be6:	mov    edi,0x66045c85
  403beb:	push   esi
  403bec:	mov    edx,0xfd1ae906
  403bf1:	push   cs
  403bf2:	cwde   
  403bf3:	add    al,0xda
  403bf5:	cdq    
  403bf6:	mov    dl,ch
  403bf8:	sub    bh,0x8b
  403bfb:	call   0x48e3:0xc2a996b
  403c02:	dec    eax
  403c03:	fstp   TBYTE PTR [edx+0x71]
  403c06:	mov    ch,BYTE PTR [edi-0x41]
  403c09:	iret   
  403c0a:	jmp    0x403ba1
  403c0c:	sbb    ah,ah
  403c0e:	or     DWORD PTR [ebp+edx*2+0x7e3b3cfb],ebx
  403c15:	shl    ah,0xb7
  403c18:	fidivr DWORD PTR [edx+0x5ec77cbc]
  403c1e:	mov    fs,edi
  403c20:	adc    ebx,DWORD PTR [ebx+edx*1]
  403c23:	retf   0x6b10
  403c26:	and    ebp,ebp
  403c28:	and    eax,0xbf501857
  403c2d:	fwait
  403c2e:	jnp    0x403ca7
  403c30:	or     BYTE PTR [ebx],0x9e
  403c33:	jp     0x403c47
  403c35:	xchg   ebx,eax
  403c36:	sbb    BYTE PTR [esi],bh
  403c38:	xchg   ebp,eax
  403c39:	repnz pop ds
  403c3b:	xor    al,dh
  403c3d:	call   0xcf24:0xaef67529
  403c44:	arpl   WORD PTR [ecx],bx
  403c46:	sub    dl,BYTE PTR [edx+ecx*1-0x73]
  403c4a:	dec    edi
  403c4b:	jmp    0xb26e:0x3647e255
  403c52:	lock jl 0x403c73
  403c55:	jmp    0xa942f233
  403c5a:	out    dx,al
  403c5b:	scas   eax,DWORD PTR es:[edi]
  403c5c:	rol    DWORD PTR [edx+0x1db2004f],0xd4
  403c63:	pop    esp
  403c64:	out    0x29,al
  403c66:	mov    cl,0x0
  403c68:	cmc    
  403c69:	lock jnp 0x403bfd
  403c6c:	push   cs
  403c6d:	jnp    0x403c0f
  403c6f:	hlt    
  403c70:	and    BYTE PTR [edx-0x8],dl
  403c73:	jl     0x403cdd
  403c75:	jno    0x403c73
  403c77:	cmc    
  403c78:	pushf  
  403c79:	iret   
  403c7a:	dec    ebx
  403c7b:	or     BYTE PTR [ebx-0x7dc96e99],ch
  403c81:	or     eax,0x3f843305
  403c86:	adc    esi,DWORD PTR [edi-0x5db866b3]
  403c8c:	jne    0x403c1f
  403c8e:	push   0xffe88757
  403c93:	jmp    0x853d:0x8dcd20d0
  403c9a:	mov    al,0x4c
  403c9c:	and    DWORD PTR cs:0x246d0793,eax
  403ca3:	xchg   DWORD PTR ds:0x45ad025d,ebp
  403ca9:	sbb    al,bl
  403cab:	push   edi
  403cac:	add    bl,bh
  403cae:	xchg   ebp,eax
  403caf:	add    DWORD PTR [ecx],eax
  403cb1:	mov    bh,dh
  403cb3:	inc    esp
  403cb4:	ins    DWORD PTR es:[edi],dx
  403cb5:	jns    0x403c7f
  403cb7:	(bad)  
  403cb8:	jg     0x403d11
  403cba:	dec    edx
  403cbb:	daa    
  403cbc:	dec    esi
  403cbd:	pop    edx
  403cbe:	hlt    
  403cbf:	pop    esp
  403cc0:	lfs    ebp,FWORD PTR [ecx]
  403cc3:	mov    eax,0x74a1ad54
  403cc8:	xchg   DWORD PTR [esi+0x510f9321],ecx
  403cce:	mov    esp,0xb12d9c83
  403cd3:	js     0x403d22
  403cd5:	rcl    dl,0xfe
  403cd8:	push   ss
  403cd9:	push   cs
  403cda:	shl    BYTE PTR [eax],1
  403cdc:	sbb    BYTE PTR [edi+ecx*1],bh
  403cdf:	xchg   ecx,eax
  403ce0:	jecxz  0x403cea
  403ce2:	div    BYTE PTR [ecx-0x85294f7]
  403ce8:	add    DWORD PTR [ebx],edi
  403cea:	pop    edx
  403ceb:	shl    BYTE PTR [edx],1
  403ced:	call   0x3ac9:0x9b729ec3
  403cf4:	push   esi
  403cf5:	das    
  403cf6:	pop    edi
  403cf7:	mov    eax,DWORD PTR [ebx+0x42]
  403cfa:	out    0x13,al
  403cfc:	push   0xdd4923b9
  403d01:	pop    edi
  403d02:	repnz sbb esi,ecx
  403d05:	inc    ebp
  403d06:	stos   DWORD PTR es:[edi],eax
  403d07:	and    esi,DWORD PTR cs:[ebp+0x26f2123d]
  403d0e:	bound  edx,QWORD PTR [eax+ebx*4+0x320846a1]
  403d15:	mov    esi,0xfe54062
  403d1a:	and    bh,0x10
  403d1d:	sub    eax,0xa860dbe8
  403d22:	mov    al,0x18
  403d24:	lock cmp BYTE PTR [edx-0x5a507cc7],ch
  403d2b:	icebp  
  403d2c:	sub    DWORD PTR [edx+0x28332231],esp
  403d32:	(bad)  
  403d33:	pop    ds
  403d34:	sbb    al,0x90
  403d36:	sti    
  403d37:	and    DWORD PTR [ecx+edx*8-0x78],edx
  403d3b:	aad    0x74
  403d3d:	jl     0x403d04
  403d3f:	lods   al,BYTE PTR ds:[esi]
  403d40:	mov    ah,0x17
  403d42:	fsubr  DWORD PTR [edx]
  403d44:	loopne 0x403d5c
  403d46:	jmp    0x403d21
  403d48:	mov    cl,0xab
  403d4a:	sub    eax,0xf6ab08cf
  403d4f:	jg     0x403d3b
  403d51:	arpl   ax,sp
  403d53:	sbb    al,0x2d
  403d55:	cmp    esp,0xe6e40aaa
  403d5b:	(bad)  
  403d5c:	outs   dx,DWORD PTR ds:[esi]
  403d5d:	(bad)  
  403d5e:	(bad)  
  403d5f:	adc    esi,DWORD PTR [edi+edi*4+0x5d]
  403d63:	xchg   al,ch
  403d65:	retf   0x6a62
  403d68:	push   ds
  403d69:	add    al,0x50
  403d6b:	leave  
  403d6c:	add    al,0xa8
  403d6e:	cmp    edi,DWORD PTR [edi+0x38ba9446]
  403d74:	outs   dx,DWORD PTR ds:[esi]
  403d75:	pusha  
  403d76:	or     eax,DWORD PTR [ecx-0x1f2775bb]
  403d7c:	pusha  
  403d7d:	pop    ebp
  403d7e:	jl     0x403d04
  403d80:	add    esp,DWORD PTR [edx+edi*4]
  403d83:	mov    ebx,0x37af65fb
  403d88:	add    al,bl
  403d8a:	push   0xd9e687c
  403d8f:	je     0x403d96
  403d91:	adc    bh,cl
  403d93:	je     0x403d7b
  403d95:	sub    DWORD PTR [ebp-0x62f7b366],esi
  403d9b:	and    bl,BYTE PTR [eax+0x27]
  403d9e:	or     edi,ebx
  403da0:	retf   0x5a46
  403da3:	mov    DWORD PTR [ecx],edx
  403da5:	pop    edx
  403da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403da7:	jl     0x403d7e
  403da9:	xchg   ecx,eax
  403daa:	add    bl,BYTE PTR [edx+0x1f609836]
  403db0:	pop    edx
  403db1:	pop    es
  403db2:	jge    0x403d92
  403db4:	sbb    esi,DWORD PTR [edi+edx*4+0x75]
  403db8:	xor    eax,0x680ac8b5
  403dbd:	and    DWORD PTR [edx],0xffffffd2
  403dc0:	sub    eax,0x43781aba
  403dc5:	sbb    ah,dl
  403dc7:	loope  0x403e40
  403dc9:	test   BYTE PTR [ebx],al
  403dcb:	pop    ss
  403dcc:	fcomp  QWORD PTR [edx]
  403dce:	aam    0x72
  403dd0:	test   al,0x2e
  403dd2:	push   esi
  403dd3:	sbb    BYTE PTR [ebx+0xf],dh
  403dd6:	sub    dl,BYTE PTR [esi-0xb]
  403dd9:	mov    cl,0x61
  403ddb:	jle    0x403e0e
  403ddd:	adc    eax,DWORD PTR ds:0xb586e57b
  403de3:	adc    cl,BYTE PTR [edx-0x6e]
  403de6:	je     0x403e04
  403de8:	add    al,0x6a
  403dea:	ins    BYTE PTR es:[edi],dx
  403deb:	fcomp  DWORD PTR fs:[edx+ebx*8+0xc]
  403df0:	xchg   ecx,eax
  403df1:	arpl   dx,di
  403df3:	push   ss
  403df4:	mov    al,ds:0x71a30321
  403df9:	push   0x39c216bb
  403dfe:	rcl    bh,1
  403e00:	jp     0x403e3f
  403e02:	cli    
  403e03:	(bad)  
  403e04:	hlt    
  403e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e06:	inc    esi
  403e07:	leave  
  403e08:	add    ebx,DWORD PTR [edi+0x16]
  403e0b:	push   eax
  403e0c:	jne    0x403d94
  403e0e:	(bad)  
  403e0f:	imul   BYTE PTR [eax+0x4dfb25d1]
  403e15:	inc    edi
  403e16:	add    bl,BYTE PTR [ecx+0x1f]
  403e19:	mov    eax,0x25bfa90f
  403e1e:	(bad)  
  403e20:	call   0xed29f222
  403e25:	jnp    0x403e0f
  403e27:	pushf  
  403e28:	ja     0x403e83
  403e2a:	dec    esi
  403e2b:	cli    
  403e2c:	cmp    al,0x5f
  403e2e:	mov    edi,0x6a5029cb
  403e33:	fistp  QWORD PTR [eax-0x6db0b6cd]
  403e39:	test   BYTE PTR [ecx+0x60],bh
  403e3c:	imul   edi,DWORD PTR [edi],0x4f
  403e3f:	xlat   BYTE PTR ds:[ebx]
  403e40:	cmp    al,BYTE PTR [ecx-0x423be73d]
  403e46:	cmp    al,0xcf
  403e48:	fild   DWORD PTR [eax-0x55a3ca2f]
  403e4e:	pop    esp
  403e4f:	lods   eax,DWORD PTR ds:[esi]
  403e50:	ret    
  403e51:	xor    al,BYTE PTR [ebx]
  403e53:	push   ebp
  403e54:	or     edi,ebx
  403e56:	add    ecx,DWORD PTR [edi+0x1e]
  403e59:	sbb    bh,BYTE PTR [edi+0x7b]
  403e5c:	dec    ebx
  403e5d:	cwde   
  403e5e:	mov    al,ds:0x6585d582
  403e63:	cli    
  403e64:	ins    BYTE PTR es:[edi],dx
  403e65:	sti    
  403e66:	jmp    0x403ee4
  403e68:	jg     0x403ee4
  403e6a:	das    
  403e6b:	or     BYTE PTR [edi-0x4d570a2e],cl
  403e71:	mov    ebp,0xec1cd49b
  403e76:	push   ebp
  403e78:	(bad)  
  403e79:	push   cs
  403e7a:	ins    BYTE PTR es:[edi],dx
  403e7b:	(bad)  [esi]
  403e7d:	pop    ebp
  403e7e:	sti    
  403e7f:	dec    edx
  403e80:	dec    edx
  403e81:	nop
  403e82:	and    al,0x29
  403e84:	aas    
  403e85:	sub    edx,DWORD PTR [ebp+0x3f]
  403e88:	jg     0x403ec2
  403e8a:	pop    eax
  403e8b:	clc    
  403e8c:	lods   eax,DWORD PTR ds:[esi]
  403e8d:	push   eax
  403e8e:	xchg   esp,eax
  403e8f:	xor    al,0x94
  403e91:	popf   
  403e92:	mov    edi,0xba84a407
  403e97:	xor    eax,0x5306ea10
  403e9c:	js     0x403eb2
  403e9e:	loopne 0x403e92
  403ea0:	ret    
  403ea1:	stc    
  403ea2:	hlt    
  403ea3:	pop    edi
  403ea4:	dec    esp
  403ea5:	ins    BYTE PTR es:[edi],dx
  403ea6:	push   edi
  403ea7:	fsubr  st(1),st
  403ea9:	add    al,0xe0
  403eab:	push   esp
  403eac:	or     dh,ah
  403eae:	jge    0x403f08
  403eb0:	lock mov eax,ds:0x9b579200
  403eb6:	xchg   esi,eax
  403eb7:	xlat   BYTE PTR ds:[ebx]
  403eb8:	mov    ds:0xc818b599,al
  403ebd:	add    al,0x0
  403ebf:	jmp    0x2e87:0x582d404
  403ec6:	mov    ah,0xbd
  403ec8:	call   0x895c8ad4
  403ecd:	cmp    bh,0xe8
  403ed0:	fs int 0x3b
  403ed3:	cwde   
  403ed4:	arpl   WORD PTR [ebx+edi*8+0x0],bx
  403ed8:	jae    0x403ecf
  403eda:	sub    eax,0x7c78c31f
  403edf:	mov    BYTE PTR [esi-0x4cfaa900],ah
  403ee5:	(bad)  
  403ee6:	cld    
  403ee7:	ret    0x11e8
  403eea:	(bad)  
  403eeb:	mul    BYTE PTR [ebx-0x16c97f27]
  403ef1:	sub    DWORD PTR [esp+edx*2],edx
  403ef4:	ja     0x403f65
  403ef6:	sub    eax,DWORD PTR [ebx+0xa]
  403ef9:	push   eax
  403efa:	mov    eax,?
  403efc:	push   ebx
  403efd:	js     0x403ebb
  403eff:	iret   
  403f00:	cmp    al,0xff
  403f02:	stos   BYTE PTR es:[edi],al
  403f03:	mov    ebx,0x9b56e22d
  403f08:	int3   
  403f09:	pop    ss
  403f0a:	loopne 0x403eb1
  403f0c:	arpl   WORD PTR [ebx],si
  403f0e:	mov    ah,ch
  403f10:	jl     0x403e9a
  403f12:	je     0x403f22
  403f14:	fcmovnu st,st(2)
  403f16:	ins    DWORD PTR es:[edi],dx
  403f17:	(bad)  
  403f18:	mov    dl,0x7e
  403f1a:	dec    edx
  403f1b:	pop    ds
  403f1c:	retf   
  403f1d:	mov    bh,0x15
  403f1f:	fxch   st(3)
  403f21:	jmp    0xfaac:0xe8434dbe
  403f28:	iret   
  403f29:	fbld   TBYTE PTR [ebx+0x73fd7be5]
  403f2f:	stos   DWORD PTR es:[edi],eax
  403f30:	cdq    
  403f31:	jns    0x403fa2
  403f33:	inc    esp
  403f34:	adc    DWORD PTR [edx],edi
  403f36:	in     al,0x52
  403f38:	mov    dh,0xd6
  403f3a:	dec    DWORD PTR [ecx]
  403f3c:	pop    ds
  403f3d:	adc    DWORD PTR [ebp+0x48],0x8a7f801e
  403f44:	cmovbe ebx,DWORD PTR [edi]
  403f47:	outs   dx,BYTE PTR ds:[esi]
  403f48:	xchg   ecx,esp
  403f4a:	jmp    0xcd2f8985
  403f4f:	or     edi,DWORD PTR [esi-0x21525ff1]
  403f55:	jmp    0x403eeb
  403f57:	div    BYTE PTR [eax]
  403f59:	xchg   edi,eax
  403f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f5b:	shr    DWORD PTR [ecx],0x45
  403f5e:	and    eax,0x48df4529
  403f63:	push   esp
  403f64:	sbb    esp,DWORD PTR [edx]
  403f66:	nop
  403f67:	(bad)  
  403f68:	in     eax,0x4c
  403f6a:	retf   
  403f6b:	jo     0x403f4f
  403f6d:	loope  0x403f85
  403f6f:	mov    dh,0x86
  403f71:	and    BYTE PTR [edx],ch
  403f73:	pop    eax
  403f74:	aas    
  403f75:	in     al,0x5b
  403f77:	mov    eax,0xc24af88a
  403f7c:	dec    ebp
  403f7d:	xchg   ebp,eax
  403f7e:	dec    ebp
  403f7f:	les    edi,FWORD PTR [eax-0x59]
  403f82:	(bad)  
  403f83:	test   eax,0x9be4d47f
  403f88:	aam    0x9b
  403f8a:	add    esp,DWORD PTR [ebp+ebx*1-0x45]
  403f8e:	adc    dl,BYTE PTR [esi+0x34bc544a]
  403f94:	sbb    al,0x72
  403f96:	sbb    ch,BYTE PTR [eax+0x7e]
  403f99:	adc    bh,BYTE PTR [ebp-0x26]
  403f9c:	mov    eax,0x23a61ae6
  403fa1:	pop    edx
  403fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fa3:	inc    ebx
  403fa4:	test   BYTE PTR [edx-0x66e7efd9],0xf7
  403fab:	(bad)  
  403fac:	cwde   
  403fad:	pop    edi
  403fae:	cmp    bl,BYTE PTR [edx-0x1c]
  403fb1:	mov    ebp,0x83e46134
  403fb6:	and    DWORD PTR [esi],eax
  403fb8:	mov    edx,0xb1f153c6
  403fbd:	cdq    
  403fbe:	jg     0x403fc2
  403fc0:	call   0xc0fcc868
  403fc5:	pop    esp
  403fc6:	jae    0x403f9e
  403fc8:	cmp    eax,ebp
  403fca:	rcl    BYTE PTR [esi+ebp*8],1
  403fcd:	push   cs
  403fce:	pop    ebx
  403fcf:	clc    
  403fd0:	scas   al,BYTE PTR es:[edi]
  403fd1:	fmul   DWORD PTR [eax]
  403fd3:	cmp    ch,ch
  403fd5:	xchg   edi,eax
  403fd6:	add    al,0x73
  403fd8:	aaa    
  403fd9:	es pusha 
  403fdb:	jg     0x403f9a
  403fdd:	sub    al,0x93
  403fdf:	dec    ebx
  403fe0:	push   0xffffff86
  403fe2:	pop    ss
  403fe3:	xchg   DWORD PTR [ebx-0x59deb29d],eax
  403fe9:	or     ecx,edx
  403feb:	lock test eax,0x7e3e954f
  403ff1:	or     DWORD PTR ds:0x249a1fce,esp
  403ff7:	fwait
  403ff8:	inc    esp
  403ff9:	mov    al,ds:0x41bf28d9
  403ffe:	jo     0x40407b
  404000:	ds xchg ebp,eax
  404002:	and    eax,0x289306fd
  404007:	mov    ch,0x65
  404009:	mov    edi,DWORD PTR ds:0x24b99248
  40400f:	sbb    BYTE PTR [ecx],dh
  404011:	xlat   BYTE PTR ds:[ebx]
  404012:	and    BYTE PTR [edx+0x2f13b400],al
  404018:	shr    DWORD PTR ss:[eax+0x24],cl
  40401c:	sbb    eax,0x2dc4b9de
  404021:	jge    0x403fe3
  404023:	mov    al,0x78
  404025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404026:	std    
  404027:	call   0x2c05:0xc5c07075
  40402e:	add    ebp,DWORD PTR [esi]
  404030:	(bad)  
  404031:	(bad)  
  404032:	mov    edi,0x6cfefa84
  404037:	lods   eax,DWORD PTR ds:[esi]
  404038:	loope  0x40404d
  40403a:	aad    0x78
  40403c:	sub    bh,BYTE PTR [edx]
  40403e:	jo     0x404041
  404040:	jmp    0xf853:0x1688b888
  404047:	test   ebx,edx
  404049:	dec    esp
  40404a:	into   
  40404b:	pop    ecx
  40404c:	or     BYTE PTR [ebx],cl
  40404e:	or     al,0xb5
  404050:	cmc    
  404051:	repz inc edi
  404053:	mov    ds,WORD PTR [eax+ebx*1-0x62]
  404057:	mov    ebx,0xae1f98e7
  40405c:	lahf   
  40405d:	cmc    
  40405e:	mov    edx,0x636ec257
  404063:	dec    ebp
  404064:	jg     0x404081
  404066:	lahf   
  404067:	inc    ecx
  404068:	stos   BYTE PTR es:[edi],al
  404069:	cmp    edi,DWORD PTR [ecx+0x15]
  40406c:	xor    ecx,esi
  40406e:	mov    eax,ds:0x256ae99
  404073:	inc    edi
  404074:	xchg   ebp,eax
  404075:	xchg   ebx,eax
  404076:	aad    0xdb
  404078:	pop    eax
  404079:	xchg   edi,eax
  40407a:	sub    eax,0x88668cd0
  40407f:	dec    edi
  404080:	loope  0x404010
  404082:	or     ah,bh
  404084:	dec    ebp
  404085:	cdq    
  404086:	call   0x41014ea
  40408b:	mov    edi,0x49d255d4
  404090:	and    DWORD PTR [edi-0x5d],0x43
  404094:	or     ebx,0x2c6e3a2d
  40409a:	add    BYTE PTR cs:[eax-0x50],0xb9
  40409f:	mov    bh,0xce
  4040a1:	mov    ebx,0x15e3cdc0
  4040a6:	dec    esp
  4040a7:	xor    cl,0x1f
  4040aa:	xchg   edx,eax
  4040ab:	in     eax,dx
  4040ac:	or     eax,0x16c13ff9
  4040b1:	inc    eax
  4040b2:	sbb    al,0x4f
  4040b4:	popa   
  4040b5:	xor    DWORD PTR [eax+0x64],0x1ed1df9b
  4040bc:	repnz xor ebx,DWORD PTR ds:0x3bcc1ff8
  4040c3:	and    ebp,eax
  4040c5:	out    dx,al
  4040c6:	(bad)  
  4040c7:	xchg   edx,eax
  4040c8:	xchg   DWORD PTR [edi-0x2aaebb9d],eax
  4040ce:	adc    al,0xef
  4040d0:	jb     0x404100
  4040d2:	clc    
  4040d3:	pop    esp
  4040d4:	jecxz  0x404117
  4040d6:	xchg   ecx,eax
  4040d7:	jae    0x4040cd
  4040d9:	mov    ebx,0xc0a70000
  4040de:	test   al,0x62
  4040e0:	iret   
  4040e1:	aaa    
  4040e2:	rcr    DWORD PTR [ebx-0x6f706f9b],1
  4040e8:	sub    al,0x33
  4040ea:	out    0xa4,eax
  4040ec:	xchg   DWORD PTR [edx+ebx*8+0x69],edi
  4040f0:	sar    DWORD PTR [ebx],0xc
  4040f3:	imul   esp,esp,0x34ef424d
  4040f9:	sbb    edi,edx
  4040fb:	xor    edx,DWORD PTR [ebp-0x53]
  4040fe:	jmp    0xb2db:0x6369a7df
  404105:	sub    BYTE PTR [ecx],bh
  404107:	fsubr  st(5),st
  404109:	test   al,0xcd
  40410b:	jmp    0xde1662fd
  404110:	xchg   esp,eax
  404111:	es int3 
  404113:	or     dl,BYTE PTR [edx+0x618f36df]
  404119:	push   0x53
  40411b:	sbb    edx,DWORD PTR [esi+esi*1]
  40411e:	lods   al,BYTE PTR ds:[esi]
  40411f:	(bad)  
  404120:	sti    
  404121:	aam    0x7f
  404123:	ja     0x40415b
  404125:	dec    esp
  404126:	inc    ebp
  404127:	stos   BYTE PTR es:[edi],al
  404128:	in     eax,dx
  404129:	xor    bh,BYTE PTR [ecx-0x467e1ecc]
  40412f:	sub    eax,eax
  404131:	das    
  404132:	rcl    DWORD PTR [ebx-0x58],cl
  404135:	fstp   QWORD PTR [ebp-0x73]
  404138:	pop    ebp
  404139:	xor    eax,0x2b5a6f8e
  40413e:	loop   0x4040f6
  404140:	push   ecx
  404141:	pop    ebp
  404142:	mov    eax,ds:0x9108461b
  404147:	push   edx
  404148:	adc    DWORD PTR [eax-0x2d627d6f],ebp
  40414e:	call   0xfc0236e5
  404153:	pop    ebx
  404154:	mov    ch,0xc2
  404156:	loope  0x404117
  404158:	les    ebp,FWORD PTR ds:0x29a9d609
  40415e:	popf   
  40415f:	mov    dl,0xcb
  404161:	fadd   DWORD PTR [ecx-0x57]
  404164:	push   es
  404165:	lods   eax,DWORD PTR ds:[esi]
  404166:	shl    BYTE PTR [eax+0xf],1
  404169:	jae    0x404142
  40416b:	inc    esi
  40416c:	dec    ecx
  40416d:	inc    edi
  40416e:	dec    edx
  40416f:	cmp    ch,ah
  404171:	mov    bh,0x9
  404173:	out    0x9e,al
  404175:	adc    ah,BYTE PTR ds:0x250cf215
  40417b:	fmulp  st(7),st
  40417d:	or     al,0x76
  40417f:	in     al,0x6b
  404181:	sbb    dh,0xfd
  404184:	pop    esi
  404185:	mov    al,ds:0xccfa4b73
  40418a:	in     eax,0xf0
  40418c:	dec    ebx
  40418d:	loope  0x4041a5
  40418f:	shl    ecx,1
  404191:	jle    0x404205
  404193:	sub    al,0x1
  404195:	clc    
  404196:	mov    edx,0x81976e2
  40419b:	jno    0x4041e2
  40419d:	jmp    0x4041b0
  40419f:	xor    eax,0x53d20161
  4041a4:	(bad)  
  4041a5:	sti    
  4041a6:	imul   ebx,ebp,0x8a3f7f29
  4041ac:	jae    0x404161
  4041ae:	outs   dx,BYTE PTR ds:[esi]
  4041af:	fmul   QWORD PTR [ecx+0x11469f02]
  4041b5:	ja     0x404139
  4041b7:	(bad)  
  4041b8:	fldenv [edx+0xb]
  4041bb:	dec    ecx
  4041bc:	xor    eax,0x61c13417
  4041c1:	mov    esi,0xc5800d2d
  4041c6:	xor    ebp,DWORD PTR [esi+0x526af201]
  4041cc:	pusha  
  4041cd:	xlat   BYTE PTR ds:[ebx]
  4041ce:	pop    ds
  4041cf:	mov    ebx,0xe4e42276
  4041d4:	ret    0x3151
  4041d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041d8:	mov    esp,DWORD PTR [eax]
  4041da:	ror    DWORD PTR [ecx-0x7],0x16
  4041de:	pop    esp
  4041df:	int3   
  4041e0:	cmp    esp,DWORD PTR [ebp-0x1e46f7cb]
  4041e6:	xor    eax,0x2aee0335
  4041eb:	inc    ecx
  4041ec:	in     al,dx
  4041ed:	(bad)  
  4041ee:	in     eax,0xf0
  4041f0:	cmp    BYTE PTR [edi],0x2d
  4041f3:	inc    edx
  4041f4:	jecxz  0x404270
  4041f6:	jnp    0x404196
  4041f8:	add    BYTE PTR [eax],ah
  4041fa:	sbb    eax,0x729a3168
  4041ff:	int    0x7f
  404201:	into   
  404202:	jecxz  0x404283
  404204:	sahf   
  404205:	and    al,0x37
  404207:	lods   al,BYTE PTR ds:[esi]
  404208:	and    eax,0xb
  40420b:	scas   al,BYTE PTR es:[edi]
  40420c:	push   edi
  40420d:	inc    ebp
  40420e:	mov    ?,WORD PTR [edx]
  404210:	xchg   esp,eax
  404211:	sahf   
  404212:	in     al,dx
  404213:	push   ecx
  404214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404215:	sbb    DWORD PTR [edi-0x329e05b6],0x50
  40421c:	cmp    DWORD PTR [eax+0x1b],edi
  40421f:	inc    esp
  404220:	xor    ebx,DWORD PTR [ebx+0x2d]
  404223:	inc    ecx
  404224:	adc    eax,0xdc69aed5
  404229:	cmp    BYTE PTR [ebp-0x542bcd8],ch
  40422f:	bound  esp,QWORD PTR [esi]
  404231:	cmp    eax,DWORD PTR ss:[edi+0x2dafc8f4]
  404238:	out    0x6a,eax
  40423a:	pop    edx
  40423b:	or     al,0x8c
  40423d:	jge    0x4042a3
  40423f:	leave  
  404240:	cmp    dh,BYTE PTR [ecx]
  404242:	clc    
  404243:	into   
  404244:	test   BYTE PTR [ecx+0x0],al
  404247:	out    dx,eax
  404248:	mov    eax,ds:0x4c767a44
  40424d:	mov    ds:0x304c1d92,al
  404252:	add    al,0xaf
  404254:	ja     0x4042bd
  404256:	xor    al,0x4e
  404258:	jo     0x404221
  40425a:	hlt    
  40425b:	(bad)  
  40425c:	jmp    0x87ae:0x380b1bf5
  404263:	jecxz  0x40422e
  404265:	sahf   
  404266:	loope  0x4042e5
  404268:	adc    BYTE PTR [esi],bh
  40426a:	(bad)  
  40426b:	call   0x71a5c106
  404270:	pop    ebx
  404271:	outs   dx,DWORD PTR ds:[esi]
  404272:	push   cs
  404273:	push   ss
  404274:	mov    bl,0x1a
  404276:	out    dx,eax
  404277:	push   esp
  404278:	sbb    edx,DWORD PTR [esi]
  40427a:	rcr    DWORD PTR [ebp-0x41],0x31
  40427e:	or     eax,0xfd2b8164
  404283:	inc    ebp
  404284:	jns    0x4042ea
  404286:	sbb    al,0xfc
  404288:	add    dl,BYTE PTR [ebx]
  40428a:	or     al,BYTE PTR [ecx]
  40428c:	out    dx,eax
  40428d:	pusha  
  40428e:	jnp    0x40421b
  404290:	push   ss
  404291:	pop    ecx
  404292:	pop    es
  404293:	xchg   edi,eax
  404294:	arpl   bx,ax
  404296:	iret   
  404297:	sub    BYTE PTR [edi+0x1f11354d],ch
  40429d:	imul   esp,ebx,0xfffffff9
  4042a0:	sub    DWORD PTR [ebx],0x40606d15
  4042a6:	cwde   
  4042a7:	push   ecx
  4042a8:	xchg   esi,eax
  4042a9:	add    edi,edi
  4042ab:	cli    
  4042ac:	inc    esp
  4042ad:	pushf  
  4042ae:	out    0x7c,al
  4042b0:	mov    bh,0x55
  4042b2:	push   edi
  4042b3:	out    0x25,al
  4042b5:	xor    cl,dl
  4042b7:	xor    DWORD PTR [ebx+ecx*2],eax
  4042ba:	xor    ch,al
  4042bc:	repnz and DWORD PTR [ecx-0x5f57d0d6],esp
  4042c3:	mov    al,ds:0xabafc0ac
  4042c8:	sbb    BYTE PTR [edi+0x3f],bl
  4042cb:	test   DWORD PTR [ebp-0x47],esp
  4042ce:	test   eax,0x987abe02
  4042d3:	jge    0x40434e
  4042d5:	enter  0xfabf,0xa3
  4042d9:	cli    
  4042da:	sti    
  4042db:	inc    edi
  4042dc:	mov    eax,ds:0xff00aa36
  4042e1:	sub    DWORD PTR [ebx-0x23dd5c2],ebx
  4042e7:	push   cs
  4042e8:	into   
  4042e9:	ds jecxz 0x40434d
  4042ec:	jbe    0x4042da
  4042ee:	dec    ebp
  4042ef:	mov    edx,0x674d2e31
  4042f4:	mov    dh,BYTE PTR [edx]
  4042f6:	pop    ebx
  4042f7:	fs jbe 0x404375
  4042fa:	scas   al,BYTE PTR es:[edi]
  4042fb:	rcl    BYTE PTR [esi],1
  4042fd:	pop    ss
  4042fe:	add    eax,0x51359128
  404303:	jge    0x4042bf
  404305:	mov    edi,0x1b0989c0
  40430a:	push   edi
  40430b:	ds es aaa 
  40430e:	sbb    edi,esp
  404310:	push   cs
  404311:	xor    eax,DWORD PTR [edx-0x342c8224]
  404317:	push   eax
  404318:	rcr    esp,cl
  40431a:	in     al,dx
  40431b:	mov    BYTE PTR [edi-0x588f5623],dh
  404321:	aaa    
  404322:	(bad)  [esi+edi*8]
  404325:	jne    0x404346
  404327:	push   ss
  404328:	inc    esi
  404329:	add    BYTE PTR [edi+eax*2],0xa3
  40432d:	clc    
  40432e:	sbb    al,0x14
  404330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404331:	dec    ebx
  404332:	aaa    
  404333:	dec    eax
  404334:	pusha  
  404335:	mov    eax,ds:0x1158e074
  40433a:	mov    esp,0x6a0ec98d
  40433f:	jns    0x4043a4
  404341:	popf   
  404342:	in     al,0xa5
  404344:	(bad)  
  404346:	ins    BYTE PTR es:[edi],dx
  404347:	ret    
  404348:	adc    eax,0xcd4f3ee4
  40434d:	test   ax,0x2594
  404351:	xor    edx,DWORD PTR [edi]
  404353:	push   es
  404354:	adc    BYTE PTR [eax+0x241f9290],ch
  40435a:	iret   
  40435b:	sti    
  40435c:	jo     0x4042fd
  40435e:	fnstcw WORD PTR ds:0x151ef5db
  404364:	push   cs
  404365:	in     al,0x16
  404367:	pop    esi
  404368:	iret   
  404369:	out    0x41,eax
  40436b:	daa    
  40436c:	mov    edx,0x5d2d488e
  404371:	and    eax,0x8dc6bc0f
  404376:	imul   esp,DWORD PTR [ebp+0x46],0xf2d8b5ea
  40437d:	and    BYTE PTR [esi+0x33938d34],cl
  404383:	and    BYTE PTR [esi-0x64],bh
  404386:	inc    esp
  404387:	cdq    
  404388:	push   esp
  404389:	mov    al,0xeb
  40438b:	sub    DWORD PTR [ecx],edi
  40438d:	icebp  
  40438e:	cmp    dl,BYTE PTR [edi]
  404390:	js     0x404388
  404392:	neg    cl
  404394:	es adc eax,0x2af77003
  40439a:	sbb    dl,BYTE PTR [edi]
  40439c:	je     0x4043a7
  40439e:	or     eax,0x80c90df5
  4043a3:	dec    ebx
  4043a4:	data16 mov ah,ch
  4043a7:	sub    DWORD PTR [ebx+0xdab6e0c],esp
  4043ad:	ja     0x4043cf
  4043af:	cmp    al,0x2
  4043b1:	cmp    DWORD PTR [esi+ebx*4-0x44],esi
  4043b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043b6:	cs add al,0x22
  4043b9:	and    al,0xff
  4043bb:	shr    dl,1
  4043bd:	cmp    DWORD PTR [esi+0x7d0f9153],0x7411a7ee
  4043c7:	cmp    al,0xe3
  4043c9:	jns    0x4043ce
  4043cb:	fcom   QWORD PTR [ebx]
  4043cd:	fldenv [ebx+0x79f2cc17]
  4043d3:	jecxz  0x4043fc
  4043d5:	adc    al,0xfd
  4043d7:	stc    
  4043d8:	mov    eax,ds:0xd0fde3d3
  4043dd:	loope  0x4043f8
  4043df:	xchg   ebx,eax
  4043e0:	enter  0x2441,0xda
  4043e4:	xchg   esi,eax
  4043e5:	bound  ebx,QWORD PTR [edi]
  4043e7:	mov    ebp,0x51022840
  4043ec:	enter  0xe227,0xe3
  4043f0:	xlat   BYTE PTR ds:[ebx]
  4043f1:	pop    esp
  4043f2:	int3   
  4043f3:	daa    
  4043f4:	lock jae 0x404384
  4043f7:	and    ecx,DWORD PTR cs:[ecx+0x34e79c36]
  4043fe:	cmp    al,0x40
  404400:	pop    edi
  404401:	out    0x7c,eax
  404403:	sub    eax,0x783d5ab
  404408:	int3   
  404409:	pop    eax
  40440a:	mov    cl,0xa6
  40440c:	jo     0x4043db
  40440e:	repnz cmp BYTE PTR [esi+0x3b],bl
  404412:	inc    ebp
  404413:	cmp    esi,DWORD PTR [edx+0x2c1e9a75]
  404419:	adc    edi,DWORD PTR [edi]
  40441b:	xor    eax,0x41a2d06
  404420:	pop    edi
  404421:	or     ebp,ecx
  404423:	adc    BYTE PTR [eax],0x3c
  404426:	loop   0x404496
  404428:	lds    ecx,FWORD PTR [ebp+0x6a]
  40442b:	ret    
  40442c:	mov    eax,DWORD PTR [eax+0x1804dd42]
  404432:	loope  0x4043f1
  404434:	mov    dh,0xb7
  404436:	lock pop ebp
  404438:	in     al,dx
  404439:	repz inc ebp
  40443b:	in     eax,dx
  40443c:	pop    ebx
  40443d:	xchg   ebx,eax
  40443e:	push   edx
  40443f:	ins    DWORD PTR es:[edi],dx
  404440:	scas   eax,DWORD PTR es:[edi]
  404441:	sub    eax,0xb70d7bd8
  404446:	add    esp,DWORD PTR [ecx+0x4b]
  404449:	mov    dh,0x55
  40444b:	xchg   ebx,eax
  40444c:	inc    edi
  40444d:	pusha  
  40444e:	jl     0x40443b
  404450:	push   es
  404451:	icebp  
  404452:	adc    DWORD PTR [eax+0x2],ebp
  404455:	adc    esi,DWORD PTR [edx+0x5f]
  404458:	aam    0xbf
  40445a:	mov    eax,ds:0x6d9b8675
  40445f:	shl    eax,1
  404461:	shr    DWORD PTR [ecx+0x17c4741f],1
  404467:	cli    
  404468:	mov    DWORD PTR [edx],ecx
  40446a:	sbb    al,0xa7
  40446c:	adc    ecx,DWORD PTR [ecx+0x6b]
  40446f:	xchg   BYTE PTR [edx+0x2],ch
  404472:	pop    ebp
  404473:	scas   eax,DWORD PTR es:[edi]
  404474:	lea    ecx,[esi+0x10]
  404477:	mov    cl,0xf1
  404479:	call   0x444f554b
  40447e:	or     al,BYTE PTR [edx-0xc960e94]
  404484:	xor    DWORD PTR cs:[ecx],0xffffffb0
  404488:	inc    edx
  404489:	add    ebx,DWORD PTR [edx-0x4d]
  40448c:	xor    bh,ah
  40448e:	(bad)  
  40448f:	pop    esi
  404490:	pop    edx
  404491:	cmp    BYTE PTR [ebp-0x70edcffe],bl
  404497:	js     0x40446b
  404499:	addr16 sbb edx,ecx
  40449c:	mov    cl,BYTE PTR [ecx]
  40449e:	adc    DWORD PTR [ebp-0x4f],0xaf1d58e6
  4044a5:	or     al,BYTE PTR [eax+0x2b9a186e]
  4044ab:	or     bh,BYTE PTR gs:[eax]
  4044ae:	lock sub eax,0xece0ebee
  4044b4:	and    al,0x97
  4044b6:	pop    ds
  4044b7:	mov    eax,0x6c0bf052
  4044bc:	or     dh,BYTE PTR [eax-0x1b3ea302]
  4044c2:	cmp    BYTE PTR [esi+eiz*2],al
  4044c5:	sbb    ah,BYTE PTR [edi-0x5f039982]
  4044cb:	icebp  
  4044cc:	push   ss
  4044cd:	loop   0x4044f2
  4044cf:	loopne 0x40452b
  4044d1:	sub    eax,0xb8c9f2fd
  4044d6:	gs out dx,al
  4044d8:	cdq    
  4044d9:	rol    DWORD PTR [esi-0x46],1
  4044dc:	mov    eax,ds:0xbdd61887
  4044e1:	mov    WORD PTR [edx],?
  4044e3:	sub    al,0x70
  4044e5:	sbb    al,0x3b
  4044e7:	std    
  4044e8:	jbe    0x404534
  4044ea:	mov    BYTE PTR [eax-0x73],ch
  4044ed:	nop
  4044ee:	scas   eax,DWORD PTR es:[edi]
  4044ef:	(bad)  [ecx+0x2b121efa]
  4044f5:	out    0x9e,eax
  4044f7:	ins    BYTE PTR es:[edi],dx
  4044f8:	push   edi
  4044f9:	and    edx,DWORD PTR [ebp+0x5f686f1b]
  4044ff:	cwde   
  404500:	jmp    0xeeb4ca0a
  404505:	rol    edx,0x92
  404508:	jecxz  0x404494
  40450a:	outs   dx,DWORD PTR ds:[esi]
  40450b:	jno    0x4044cb
  40450d:	add    DWORD PTR [ebx-0x3419a3f6],0xffffff93
  404514:	ins    DWORD PTR es:[edi],dx
  404515:	pop    ss
  404516:	cmp    BYTE PTR [esi+ecx*4-0x24],al
  40451a:	(bad)  
  40451b:	stos   BYTE PTR es:[edi],al
  40451c:	jne    0x4044ca
  40451e:	pop    ds
  40451f:	sahf   
  404520:	or     BYTE PTR [esi],0x8b
  404523:	(bad)  
  404524:	lock mov esp,0x639ed639
  40452a:	add    ebp,DWORD PTR [ecx]
  40452c:	or     bh,cl
  40452e:	(bad)  
  40452f:	nop
  404530:	adc    dl,dl
  404532:	aas    
  404533:	sub    al,BYTE PTR [edx+0x3f0beed1]
  404539:	fnstsw WORD PTR [edx+ecx*8]
  40453c:	aas    
  40453d:	or     ah,cl
  40453f:	xor    eax,0xd802f8c8
  404544:	jg     0x4044d1
  404546:	mov    ebx,0xc11c5ce2
  40454b:	icebp  
  40454c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40454d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40454e:	push   edx
  40454f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  404551:	mov    ds:0x9dfdfc45,eax
  404556:	ss daa 
  404558:	adc    DWORD PTR [ecx+ecx*1],esi
  40455b:	mov    ds:0x2ad1c04c,al
  404560:	sahf   
  404561:	mov    ds:0xc3a3ad63,eax
  404566:	loope  0x4044fc
  404568:	push   es
  404569:	xor    DWORD PTR [esi],edx
  40456b:	into   
  40456c:	xor    dl,BYTE PTR [esi]
  40456e:	cld    
  40456f:	jb     0x4044f8
  404571:	stos   BYTE PTR es:[edi],al
  404572:	mov    bh,0x82
  404574:	out    dx,eax
  404575:	cmp    dh,BYTE PTR [edx+0x3004583f]
  40457b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40457c:	cmp    ecx,eax
  40457e:	adc    eax,esi
  404580:	and    ch,dh
  404582:	mov    ss,WORD PTR [edi+0x28]
  404585:	push   edi
  404586:	sahf   
  404587:	sbb    ah,BYTE PTR [esi-0x7d]
  40458a:	daa    
  40458b:	sub    BYTE PTR [eax+0x3a],dl
  40458e:	test   BYTE PTR [ecx+0x4c],0x71
  404592:	mov    DWORD PTR [esi],ebx
  404594:	test   ebx,0x60fdd1e3
  40459a:	out    0xcb,al
  40459c:	ins    BYTE PTR es:[edi],dx
  40459d:	add    DWORD PTR [ebx],esp
  40459f:	in     al,dx
  4045a0:	popf   
  4045a1:	clc    
  4045a2:	dec    esp
  4045a3:	push   ds
  4045a4:	push   0x87c90531
  4045a9:	mov    ?,WORD PTR ds:0x58e87eb2
  4045af:	mov    bl,0x51
  4045b1:	jg     0x40461b
  4045b3:	mov    bh,0x63
  4045b5:	sub    eax,0xafe33e31
  4045ba:	imul   eax,DWORD PTR [esi-0x29],0x9e8beda0
  4045c1:	push   eax
  4045c2:	mov    fs,WORD PTR [edx]
  4045c4:	lahf   
  4045c5:	cld    
  4045c6:	pop    ds
  4045c7:	(bad)  
  4045c8:	popf   
  4045c9:	jmp    0x6b53:0x94b57b96
  4045d0:	test   eax,0xf1900f6b
  4045d5:	jb     0x40461b
  4045d7:	xlat   BYTE PTR ds:[ebx]
  4045d8:	or     dh,cl
  4045da:	jecxz  0x404569
  4045dc:	sahf   
  4045dd:	mov    al,ds:0x6d450a93
  4045e2:	js     0x404602
  4045e4:	call   0x79674285
  4045e9:	adc    eax,0x7bf233e8
  4045ee:	xchg   ebx,eax
  4045ef:	fnstenv [ebx+edx*8+0x11]
  4045f3:	shl    BYTE PTR [edi-0x6c],1
  4045f6:	cwde   
  4045f7:	fs push ebx
  4045f9:	das    
  4045fa:	pop    ecx
  4045fc:	arpl   WORD PTR ds:0x35bcf9c9,si
  404602:	jle    0x404585
  404604:	lods   al,BYTE PTR ds:[esi]
  404605:	loopne 0x4045af
  404607:	ds (bad) 
  404609:	push   cs
  40460a:	ja     0x40463f
  40460c:	sub    al,0x4f
  40460e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40460f:	lea    ebx,[ecx-0x3e]
  404612:	cli    
  404613:	and    edi,0xffffffaf
  404616:	retf   
  404617:	int    0x12
  404619:	pop    es
  40461a:	sbb    dl,BYTE PTR [edi+0x4f]
  40461d:	mov    ebp,0xa2c84f8f
  404622:	cwde   
  404623:	or     eax,0x963c48a8
  404628:	sub    ecx,DWORD PTR [eax+0x5b]
  40462b:	mov    bl,0x9
  40462d:	arpl   WORD PTR [eax-0x43f3b6a6],dx
  404633:	pop    edi
  404634:	push   edi
  404635:	add    al,0x8a
  404637:	sti    
  404638:	leave  
  404639:	(bad)  [ebx+0x7aba0c35]
  40463f:	push   ss
  404640:	jp     0x404691
  404642:	sar    edi,1
  404644:	inc    eax
  404645:	mov    ds:0x50b9fc28,al
  40464a:	or     DWORD PTR [ecx-0x50b82688],0xffffffe3
  404651:	pop    ebp
  404652:	cmp    al,0xf4
  404654:	jmp    0xc370:0x9aae769b
  40465b:	imul   ecx,DWORD PTR [ecx],0xfffffff3
  40465e:	push   eax
  40465f:	ret    
  404660:	pusha  
  404661:	fmul   DWORD PTR [ebx+0x68]
  404664:	out    dx,al
  404665:	out    0x78,eax
  404667:	out    dx,al
  404668:	add    DWORD PTR [edi-0x5],edx
  40466b:	push   eax
  40466c:	call   0xef42:0x874a9d6f
  404673:	pop    es
  404674:	and    BYTE PTR [edx-0x4796d135],ch
  40467a:	mov    ebp,ds
  40467c:	inc    ebx
  40467d:	push   edx
  40467e:	shr    ch,0xb5
  404681:	out    0x2e,eax
  404683:	jecxz  0x40466e
  404685:	mov    esi,0x48535154
  40468a:	add    bh,bl
  40468c:	xor    al,0x3b
  40468e:	jle    0x404686
  404690:	dec    edi
  404691:	mov    bl,0x40
  404693:	in     al,0x2
  404695:	test   eax,0x9d28dfc9
  40469a:	retf   0x1c73
  40469d:	mov    esi,0x349737d2
  4046a2:	adc    al,BYTE PTR [edi+0x10a8ba89]
  4046a8:	ror    dh,0xbe
  4046ab:	inc    esp
  4046ac:	repz fdiv DWORD PTR [esi]
  4046af:	add    dl,BYTE PTR [edi+0x18]
  4046b2:	push   ebp
  4046b3:	sbb    al,0xe4
  4046b5:	das    
  4046b6:	out    dx,al
  4046b7:	and    ah,0xe9
  4046ba:	retf   
  4046bb:	ror    DWORD PTR [edx-0x24],0xfe
  4046bf:	mov    cs,WORD PTR [edi]
  4046c1:	push   0x54
  4046c3:	xchg   esp,eax
  4046c4:	in     eax,dx
  4046c5:	push   ebx
  4046c6:	sub    ecx,DWORD PTR [edi+0x1a]
  4046c9:	popf   
  4046ca:	into   
  4046cb:	stos   BYTE PTR es:[edi],al
  4046cc:	sti    
  4046cd:	jo     0x40467c
  4046cf:	sbb    al,0xcf
  4046d1:	mov    eax,0x4dcd2634
  4046d6:	test   al,0x31
  4046d8:	cdq    
  4046d9:	and    DWORD PTR [eax+0xffb2924],esp
  4046df:	aam    0x55
  4046e1:	mov    edx,DWORD PTR [eax+0x3b39031]
  4046e7:	push   edx
  4046e8:	(bad)  
  4046e9:	retf   
  4046ea:	xchg   esp,edx
  4046ec:	pop    ss
  4046ed:	push   edi
  4046ee:	fwait
  4046ef:	popf   
  4046f0:	scas   al,BYTE PTR es:[edi]
  4046f1:	aad    0x45
  4046f3:	pop    ds
  4046f4:	sbb    esi,0x48802094
  4046fa:	jns    0x404756
  4046fc:	xchg   edx,eax
  4046fd:	lods   al,BYTE PTR ds:[esi]
  4046fe:	js     0x404765
  404700:	fistp  DWORD PTR [edi+edx*2]
  404703:	sbb    DWORD PTR [edi],ebx
  404705:	pop    ebx
  404706:	test   eax,0xc9179378
  40470b:	rol    bh,cl
  40470d:	ss or  bh,bh
  404710:	inc    eax
  404711:	lea    esi,[ecx+0x4189a8c9]
  404717:	pop    esi
  404718:	cmp    BYTE PTR [edx-0x4],dh
  40471b:	or     eax,0xa533d6a
  404720:	pushf  
  404721:	pushf  
  404722:	xchg   ebx,eax
  404723:	xor    edi,DWORD PTR ss:[ebp+ecx*4-0xf1bbcee]
  40472b:	mov    al,dl
  40472d:	xchg   edi,eax
  40472e:	lahf   
  40472f:	jp     0x40472e
  404731:	mov    ds:0xe7b6bd89,al
  404736:	or     eax,0x7c8e22c3
  40473b:	bound  eax,QWORD PTR [eax-0x6c23fdfc]
  404741:	sbb    eax,0xa019e063
  404746:	lds    esp,FWORD PTR [ebp+0x42]
  404749:	jp     0x4046ed
  40474b:	das    
  40474c:	(bad)  
  40474d:	(bad)  
  40474e:	ret    0xabc1
  404751:	popa   
  404752:	mov    ds:0xa4bdb605,eax
  404757:	xor    eax,0xe079d586
  40475c:	mov    eax,ds:0x76e3380f
  404761:	fwait
  404762:	enter  0x2a43,0x89
  404766:	xor    cl,BYTE PTR [esi]
  404768:	cmp    edi,DWORD PTR [edx-0xe82e9b4]
  40476e:	test   DWORD PTR [edi-0x5d],edx
  404771:	mov    ds:0x234693d8,al
  404776:	je     0x4047a9
  404778:	add    ebp,DWORD PTR [ebx]
  40477a:	jecxz  0x4047ed
  40477c:	sub    al,0x71
  40477e:	into   
  40477f:	aad    0xfa
  404781:	sub    DWORD PTR [eax],ecx
  404783:	jae    0x4047d1
  404785:	add    eax,0xd94479e2
  40478a:	or     eax,0xcdd1ce00
  40478f:	aaa    
  404790:	popa   
  404791:	or     ebx,DWORD PTR [edx+0x7456a84c]
  404797:	xchg   edi,eax
  404798:	mov    ebp,0xb99a410d
  40479d:	call   0xf3026d11
  4047a2:	ss js  0x40476a
  4047a5:	jp     0x404752
  4047a7:	shr    esp,cl
  4047a9:	out    dx,eax
  4047aa:	inc    esi
  4047ab:	mov    ebx,0x57cfd89f
  4047b0:	xchg   ebx,eax
  4047b1:	xor    al,0xdc
  4047b3:	hlt    
  4047b4:	jo     0x40479a
  4047b6:	add    BYTE PTR ds:0x3973415a,0xdc
  4047bd:	daa    
  4047be:	xchg   esi,eax
  4047bf:	fwait
  4047c0:	cdq    
  4047c1:	out    dx,eax
  4047c2:	ror    DWORD PTR [ebx+edx*1+0x4187d938],0xb4
  4047ca:	ins    BYTE PTR es:[edi],dx
  4047cb:	in     eax,0x77
  4047cd:	aad    0x90
  4047cf:	adc    esi,ebp
  4047d1:	xchg   dl,dh
  4047d3:	xor    BYTE PTR [edi+0x9],0x99
  4047d7:	sub    BYTE PTR [esi-0x15],dl
  4047da:	jae    0x4047cf
  4047dc:	scas   al,BYTE PTR es:[edi]
  4047dd:	xor    ebx,eax
  4047df:	jl     0x404812
  4047e1:	adc    ch,BYTE PTR [ecx+eax*8+0x71d68b9]
  4047e8:	sub    eax,0x7712fc00
  4047ed:	mov    tr4,esp
  4047f0:	pop    ecx
  4047f1:	js     0x4047ce
  4047f3:	sub    ch,BYTE PTR [ecx-0x57069730]
  4047f9:	push   ds
  4047fa:	not    DWORD PTR [eax+0x1579785f]
  404800:	sub    ebp,DWORD PTR [edx-0x16]
  404803:	adc    bh,ch
  404805:	and    ebp,DWORD PTR ds:0xc1c5034b
  40480b:	test   BYTE PTR ds:0x7f469aa0,bl
  404811:	mov    ebp,0x77fbd489
  404816:	addr16 adc eax,0x21263ac7
  40481c:	and    DWORD PTR [edi-0x4fec38ad],edi
  404822:	into   
  404823:	jmp    0x4047b3
  404825:	pop    esi
  404826:	test   ch,al
  404828:	jns    0x4047af
  40482a:	adc    DWORD PTR [edi+0x1a],edx
  40482d:	ss daa 
  40482f:	out    dx,al
  404830:	push   es
  404831:	push   ebx
  404832:	jmp    0x404889
  404834:	gs (bad) 
  404836:	fwait
  404837:	push   ds
  404838:	xchg   ebp,eax
  404839:	or     ebp,DWORD PTR [edx+0x49]
  40483c:	or     BYTE PTR [eax+0x44a97d35],bl
  404842:	or     al,0xbc
  404844:	add    eax,0x4ea5bb92
  404849:	dec    ecx
  40484a:	mov    al,0x4b
  40484c:	and    eax,DWORD PTR [eax-0x7cbc7eb1]
  404852:	sub    esi,DWORD PTR [esi-0xc]
  404855:	loope  0x404856
  404857:	cmp    BYTE PTR [ebx+0x51],0xba
  40485b:	mov    edx,0x69f5bb65
  404860:	cmc    
  404861:	mov    ebp,0x578f56ad
  404866:	cmp    edi,DWORD PTR [esi+0x1f]
  404869:	inc    esp
  40486a:	loope  0x4048db
  40486c:	mov    edi,0x8df3ec41
  404871:	jle    0x4048a4
  404873:	mov    al,0x4
  404875:	pop    edi
  404876:	fs mov dl,0xdc
  404879:	jp     0x404851
  40487b:	hlt    
  40487c:	fistp  DWORD PTR [ecx+0x55]
  40487f:	xchg   ecx,eax
  404880:	pop    edx
  404881:	cmp    esi,DWORD PTR [edi+edx*2+0x73805d47]
  404888:	leave  
  404889:	cmp    bl,ch
  40488b:	mov    esp,0x629a0a9
  404890:	dec    esi
  404891:	xor    eax,0x5a21e089
  404896:	js     0x404835
  404898:	arpl   WORD PTR [eax-0x5f94b3d8],ax
  40489e:	and    al,0x9d
  4048a0:	mov    dh,0xd6
  4048a2:	inc    eax
  4048a3:	mov    DWORD PTR ds:0xe445580a,edi
  4048a9:	pop    DWORD PTR [ecx+0x4e]
  4048ac:	push   ss
  4048ad:	adc    DWORD PTR [edi-0x73c68f56],0xd88badac
  4048b7:	mov    eax,ds:0x10e9f7c2
  4048bc:	mov    esp,0xd1d9c9e
  4048c1:	sbb    BYTE PTR [edi-0x44],0x34
  4048c5:	ins    BYTE PTR es:[edi],dx
  4048c6:	iret   
  4048c7:	loope  0x404891
  4048c9:	dec    ebx
  4048ca:	ror    DWORD PTR [ebx+edx*4-0x6b4ce776],0x12
  4048d2:	inc    ecx
  4048d3:	in     eax,dx
  4048d4:	xchg   ebp,eax
  4048d5:	add    edx,DWORD PTR [ebp+0x2c]
  4048d8:	inc    edi
  4048d9:	scas   eax,DWORD PTR es:[edi]
  4048da:	scas   al,BYTE PTR es:[edi]
  4048db:	cmp    BYTE PTR [edx+0x1fc3ce3f],dh
  4048e1:	bound  eax,QWORD PTR [edi+0x66]
  4048e4:	mov    ds:0xece5304c,al
  4048e9:	mov    ebx,0xacd25298
  4048ee:	repnz adc eax,0x42738347
  4048f4:	jp     0x404951
  4048f6:	adc    DWORD PTR [eax+0x354ebcc5],ecx
  4048fc:	scas   eax,DWORD PTR es:[edi]
  4048fd:	mov    al,ds:0x3f885286
  404902:	(bad)  
  404903:	xor    eax,DWORD PTR [edi+eiz*2+0x3930bda5]
  40490a:	popa   
  40490b:	les    ebp,FWORD PTR [edx+0x1f]
  40490e:	xchg   ebp,eax
  40490f:	mov    edx,0x4cc4f5
  404914:	sub    BYTE PTR [esp+edx*4+0x658cf7aa],ch
  40491b:	sti    
  40491c:	aaa    
  40491d:	dec    ebp
  40491e:	adc    eax,0xda651aa9
  404923:	pusha  
  404924:	push   ss
  404925:	aam    0xe9
  404927:	ret    
  404928:	push   eax
  404929:	push   ecx
  40492a:	cdq    
  40492b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40492c:	add    bl,al
  40492e:	and    eax,0x27d83859
  404933:	mov    cl,0x70
  404935:	call   0x2d5d:0xe58077c0
  40493c:	dec    edx
  40493d:	add    cl,BYTE PTR [ebp-0x1c5bd694]
  404943:	adc    al,dh
  404945:	pop    ebp
  404946:	mov    cs,ebp
  404948:	mov    dl,BYTE PTR [ebx]
  40494a:	repnz out dx,al
  40494c:	mov    dl,BYTE PTR [ebp+0x4719d58b]
  404952:	fist   DWORD PTR [ecx]
  404954:	jmp    0x40494c
  404956:	nop
  404957:	into   
  404958:	into   
  404959:	or     edi,DWORD PTR [eax+esi*1-0x39ccc808]
  404960:	(bad)  
  404961:	in     al,0xfe
  404963:	adc    DWORD PTR [ebp+0x43],0x646e639e
  40496a:	popa   
  40496b:	nop
  40496c:	or     BYTE PTR [esi+0x7e7d75c6],0xb3
  404973:	mov    ecx,0x5bb81044
  404978:	pop    bx
  40497a:	mov    al,0x38
  40497c:	popa   
  40497d:	or     al,0x79
  40497f:	xor    dl,bh
  404981:	cli    
  404982:	loope  0x4049a9
  404984:	or     BYTE PTR [esp+ebx*4+0x17],bl
  404988:	push   0xfffffff0
  40498a:	inc    edi
  40498b:	add    eax,0xc24e340d
  404990:	lods   al,BYTE PTR ds:[esi]
  404991:	dec    esp
  404992:	pop    esi
  404993:	pop    edx
  404994:	fmul   QWORD PTR [edx-0x482b5d6d]
  40499a:	pop    ebp
  40499b:	mov    DWORD PTR [ebx+0x2cc68a8f],edi
  4049a1:	jle    0x404959
  4049a3:	cmp    eax,0x17a089e2
  4049a8:	or     DWORD PTR [edx-0x3f],edx
  4049ab:	dec    esi
  4049ac:	mov    al,ah
  4049ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049af:	add    BYTE PTR [eax],bh
  4049b1:	mov    ebx,0xbbd1e389
  4049b6:	rol    DWORD PTR [edi+0x7c],cl
  4049b9:	pop    ds
  4049ba:	sub    DWORD PTR [ecx-0x4e],ecx
  4049bd:	fistp  WORD PTR ds:0xfca40021
  4049c3:	cdq    
  4049c4:	dec    esp
  4049c5:	xchg   BYTE PTR ds:0x776541b6,bl
  4049cb:	pop    edi
  4049cc:	in     eax,0x84
  4049ce:	push   ebp
  4049cf:	imul   BYTE PTR [edx]
  4049d1:	scas   al,BYTE PTR es:[edi]
  4049d2:	jae    0x404a27
  4049d4:	scas   al,BYTE PTR es:[edi]
  4049d5:	push   cs
  4049d6:	push   cs
  4049d7:	popf   
  4049d8:	adc    DWORD PTR [ebp-0x1658d0ca],ecx
  4049de:	push   edx
  4049df:	fst    DWORD PTR [eax-0x60f30124]
  4049e5:	inc    esp
  4049e6:	add    DWORD PTR [ecx-0x65],edx
  4049e9:	call   0x486a:0xffa11e40
  4049f0:	call   0xf21d:0x28765ed
  4049f7:	stos   DWORD PTR es:[edi],eax
  4049f8:	push   ds
  4049f9:	dec    esi
  4049fa:	(bad)  
  4049fc:	and    eax,0x99488cc7
  404a01:	mov    ds:0x9573c5c9,eax
  404a06:	clc    
  404a07:	cmp    dl,BYTE PTR [edi-0x52b3c8b0]
  404a0d:	mov    al,0x76
  404a0f:	sub    BYTE PTR [eax+0x5b7124b5],ch
  404a15:	sub    ecx,esi
  404a17:	in     eax,0x3c
  404a19:	dec    ebp
  404a1a:	jae    0x4049cb
  404a1c:	adc    edx,DWORD PTR [edx-0x30]
  404a1f:	rep outs dx,BYTE PTR ds:[esi]
  404a21:	in     eax,0xc4
  404a23:	call   0x81f1:0x3f34e385
  404a2a:	mov    al,ds:0x85fe2568
  404a2f:	sub    al,0x68
  404a31:	sub    BYTE PTR [ebx*1+0x69260cb2],bl
  404a38:	(bad)  
  404a3a:	rcr    BYTE PTR [ecx],cl
  404a3c:	pop    es
  404a3d:	js     0x404a7e
  404a3f:	and    al,0xdd
  404a41:	push   ecx
  404a42:	js     0x4049e1
  404a44:	fsub   st,st(6)
  404a46:	or     DWORD PTR [edx-0xb],ecx
  404a49:	loop   0x404abf
  404a4b:	push   esi
  404a4c:	(bad)  
  404a4d:	in     al,dx
  404a4e:	cmp    dl,BYTE PTR [edx-0x727fc1d2]
  404a54:	jmp    0x404a4f
  404a56:	bound  ecx,QWORD PTR [ecx]
  404a58:	xor    al,0x4f
  404a5a:	or     bh,BYTE PTR ds:0x863266a3
  404a60:	or     esp,ebx
  404a62:	or     eax,0xf1efa3b7
  404a67:	mov    al,0xb2
  404a69:	push   ebp
  404a6a:	cmp    bh,BYTE PTR [ebx+0x62]
  404a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a6e:	xor    BYTE PTR [edi-0x4d],cl
  404a71:	mov    bh,0x29
  404a73:	icebp  
  404a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a75:	fwait
  404a76:	cli    
  404a77:	mov    WORD PTR [esi],cs
  404a79:	xor    bl,BYTE PTR [esp+edi*1+0x4a56a801]
  404a80:	jl     0x404a51
  404a82:	sub    BYTE PTR [eax],bl
  404a84:	sub    eax,0xe6c7dda9
  404a89:	add    esp,DWORD PTR [esi+0xa8bb8f8]
  404a8f:	cld    
  404a90:	sub    ecx,DWORD PTR ds:0x992fe61
  404a96:	ds ret 
  404a98:	aam    0x20
  404a9a:	stos   DWORD PTR es:[edi],eax
  404a9b:	call   0xf0d7cdf4
  404aa0:	retf   
  404aa1:	xlat   BYTE PTR ds:[ebx]
  404aa2:	add    al,0x3e
  404aa4:	cmc    
  404aa5:	cli    
  404aa6:	mov    ebx,0xe9672aee
  404aab:	fstp   DWORD PTR [edi-0x23]
  404aae:	dec    esi
  404aaf:	or     dh,BYTE PTR [ebx]
  404ab1:	outs   dx,BYTE PTR ds:[esi]
  404ab2:	adc    ch,al
  404ab4:	mov    ch,0xe8
  404ab6:	xor    BYTE PTR [ebx-0x43],ch
  404ab9:	cli    
  404aba:	push   ecx
  404abb:	mov    eax,0x3defc4c9
  404ac0:	cmp    dl,BYTE PTR [edx]
  404ac2:	xchg   edx,eax
  404ac3:	jle    0x404af8
  404ac5:	loopne 0x404aa4
  404ac7:	xchg   ebx,eax
  404ac8:	in     al,dx
  404ac9:	cwde   
  404aca:	push   ebp
  404acb:	dec    edx
  404acc:	out    dx,al
  404acd:	ja     0x404a9e
  404acf:	pop    ebx
  404ad0:	inc    ecx
  404ad1:	les    eax,FWORD PTR [edx+0x14d5a77c]
  404ad7:	aaa    
  404ad8:	dec    eax
  404ad9:	pop    ds
  404ada:	arpl   WORD PTR [esi+0x77],bx
  404add:	(bad)  
  404ade:	jno    0x404b08
  404ae0:	neg    dl
  404ae2:	cmp    BYTE PTR [esi+0x62ec29d5],dl
  404ae8:	add    esp,DWORD PTR [ebp-0x39]
  404aeb:	mov    eax,0x3f6fd5c4
  404af0:	ins    DWORD PTR es:[edi],dx
  404af1:	jmp    0xe352094c
  404af6:	lds    eax,FWORD PTR [esi-0x571471d1]
  404afc:	push   ecx
  404afd:	adc    ch,BYTE PTR [esi+0x6b]
  404b00:	shl    BYTE PTR [ebp+ebp*4+0x51bed99b],0xab
  404b08:	sbb    eax,DWORD PTR [esi]
  404b0a:	mov    ebp,DWORD PTR [esi]
  404b0c:	push   ecx
  404b0d:	mov    ds:0x4c5fe447,al
  404b12:	inc    DWORD PTR [ebp+0x66]
  404b15:	mov    ch,0x4b
  404b17:	xor    edx,DWORD PTR [edx+0x1ca3b741]
  404b1d:	in     al,dx
  404b1e:	fild   DWORD PTR [edx-0x2d]
  404b21:	pop    esp
  404b22:	mov    ecx,0x4c6a7467
  404b27:	(bad)  
  404b28:	ins    DWORD PTR es:[edi],dx
  404b29:	add    ebp,ebx
  404b2b:	cmp    al,0x73
  404b2d:	sub    BYTE PTR [ebx+0x6b4026e9],ch
  404b33:	test   eax,0x4627b0ff
  404b38:	daa    
  404b39:	cmp    ah,BYTE PTR [edx-0x2466b4b2]
  404b3f:	sub    BYTE PTR [esi-0x8146c8f],ah
  404b45:	sbb    al,0xd
  404b47:	jle    0x404afe
  404b49:	inc    ebp
  404b4a:	daa    
  404b4b:	sub    esp,DWORD PTR [edi-0x36]
  404b4e:	pop    edx
  404b4f:	cmp    al,0xdb
  404b51:	ja     0x404b1d
  404b53:	jne    0x404ae0
  404b55:	jmp    DWORD PTR [ebx]
  404b57:	mov    WORD PTR [eax+0x61],?
  404b5a:	or     dh,bl
  404b5c:	das    
  404b5d:	adc    eax,0x33e6fdcd
  404b62:	in     eax,dx
  404b63:	mov    ds:0x5a3ce821,al
  404b68:	ds cmp eax,0xba5fe45a
  404b6e:	push   edx
  404b6f:	push   esp
  404b70:	aas    
  404b71:	and    eax,0xec37d7a5
  404b76:	daa    
  404b77:	push   0xffffffd4
  404b79:	xchg   edx,eax
  404b7a:	ja     0x404b78
  404b7c:	push   eax
  404b7d:	call   0xc350ae30
  404b82:	or     al,0x6b
  404b84:	std    
  404b85:	lds    esi,FWORD PTR [edx-0x4f0beb0]
  404b8b:	sbb    BYTE PTR [edx-0x3a6459b4],0x45
  404b92:	adc    eax,0x374ee3d4
  404b97:	fs jmp 0x5ff8:0x897ceecb
  404b9f:	lods   al,BYTE PTR ds:[esi]
  404ba0:	shl    BYTE PTR [ebx+0x6bab6482],0xda
  404ba7:	cmp    eax,0x1f7458c5
  404bac:	mov    ebx,0xa2594bba
  404bb1:	mov    esp,edx
  404bb3:	dec    ebx
  404bb4:	aaa    
  404bb5:	mov    bh,0x7f
  404bb7:	rcl    DWORD PTR [ecx-0x3834bdf3],1
  404bbd:	jle    0x404be9
  404bbf:	loopne 0x404b49
  404bc1:	das    
  404bc2:	js     0x404b8d
  404bc4:	in     al,dx
  404bc5:	nop
  404bc6:	ror    eax,1
  404bc8:	iret   
  404bc9:	stc    
  404bca:	stos   DWORD PTR es:[edi],eax
  404bcb:	push   ebx
  404bcc:	cwde   
  404bcd:	pop    ss
  404bce:	sub    eax,esp
  404bd0:	xor    al,0xc7
  404bd2:	out    0x12,al
  404bd4:	and    edi,ebx
  404bd6:	sub    bh,BYTE PTR [edx]
  404bd8:	cli    
  404bd9:	adc    DWORD PTR [edi],ebx
  404bdb:	scas   eax,DWORD PTR es:[edi]
  404bdc:	mov    eax,ds:0xee63f529
  404be1:	shl    eax,1
  404be3:	cli    
  404be4:	or     eax,edi
  404be6:	adc    ebp,0x1cee3bfc
  404bec:	imul   edi,DWORD PTR [ebx-0x33],0x991931ab
  404bf3:	stc    
  404bf4:	or     eax,0xee17ab81
  404bf9:	popa   
  404bfa:	sbb    al,0x2d
  404bfc:	xchg   ebx,eax
  404bfd:	and    bh,BYTE PTR [ebp+0x71be7bfc]
  404c03:	int3   
  404c04:	shl    BYTE PTR [eax],0xed
  404c07:	xchg   esp,eax
  404c08:	repz adc dl,BYTE PTR [esi+0x2adfcae]
  404c0f:	leave  
  404c10:	es jno 0x404be2
  404c13:	int    0xad
  404c15:	mov    ebx,0x5fa9c0fa
  404c1a:	jge    0x404c1d
  404c1c:	sahf   
  404c1d:	sub    ebx,esp
  404c1f:	test   al,0x13
  404c21:	icebp  
  404c22:	xor    DWORD PTR [ebp+0x7a],0x39
  404c26:	dec    BYTE PTR [ebp+0x11]
  404c29:	mov    esi,0x4fcfd2a7
  404c2e:	imul   edi,esp,0x47
  404c31:	in     al,0x15
  404c33:	scas   al,BYTE PTR es:[edi]
  404c34:	imul   eax,DWORD PTR [esi+0x6cb480cd],0x3682ab83
  404c3e:	test   al,0xe
  404c40:	dec    ebx
  404c41:	mov    edx,0xce66f5b7
  404c46:	pop    eax
  404c47:	xchg   esp,eax
  404c48:	cmp    eax,DWORD PTR [eax+0x5a90af49]
  404c4e:	sti    
  404c4f:	mov    ebp,0x18158aff
  404c54:	das    
  404c55:	or     al,0x5e
  404c57:	out    dx,al
  404c58:	cmp    ecx,DWORD PTR [ecx-0x1a]
  404c5b:	inc    esp
  404c5c:	push   ebp
  404c5d:	dec    ebp
  404c5e:	xchg   BYTE PTR [esi+0x5df7a5c9],bh
  404c64:	lods   al,BYTE PTR ds:[esi]
  404c65:	or     DWORD PTR [ecx-0x5a],esi
  404c68:	outs   dx,DWORD PTR ds:[esi]
  404c69:	add    edi,ebp
  404c6b:	int    0xc7
  404c6d:	bound  ebx,QWORD PTR [edx]
  404c6f:	mov    eax,0xc060bae1
  404c74:	(bad)  
  404c75:	rcl    DWORD PTR [ecx+0x6285785b],1
  404c7b:	adc    DWORD PTR [ebx-0x46],eax
  404c7e:	fimul  DWORD PTR [edx-0x49]
  404c81:	hlt    
  404c82:	and    ebp,eax
  404c84:	into   
  404c85:	mov    esi,0x4752bda7
  404c8a:	dec    ebx
  404c8b:	imul   esi,DWORD PTR ds:0x4c50a8b7,0x20b1413f
  404c95:	pop    esp
  404c96:	(bad)  
  404c97:	pop    ecx
  404c98:	pop    ecx
  404c99:	loope  0x404cd3
  404c9b:	cwde   
  404c9c:	gs sub eax,0xb5ba5c26
  404ca2:	aas    
  404ca3:	jge    0x404c79
  404ca5:	push   0xfffffff8
  404ca7:	adc    DWORD PTR [edi+0x62845493],esi
  404cad:	leave  
  404cae:	loopne 0x404d1f
  404cb0:	inc    esi
  404cb1:	dec    esi
  404cb2:	push   esp
  404cb3:	inc    eax
  404cb4:	aam    0xa5
  404cb6:	inc    eax
  404cb7:	in     eax,dx
  404cb8:	repz push ss
  404cba:	pop    edi
  404cbb:	xor    al,ah
  404cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cbe:	int    0xaf
  404cc0:	pop    ebp
  404cc1:	mov    ebp,0x396d0f66
  404cc6:	adc    BYTE PTR [ecx-0x7964d054],ah
  404ccc:	retf   
  404ccd:	or     DWORD PTR [ecx-0x1c4730bf],0xffffffaf
  404cd4:	mov    eax,ds:0x8244d79f
  404cd9:	mov    bl,0xf8
  404cdb:	shr    DWORD PTR [ebx-0x21],0x36
  404cdf:	in     al,0xe2
  404ce1:	repnz inc esi
  404ce3:	imul   esi,DWORD PTR [eax],0x8ff17a7a
  404ce9:	(bad)  
  404cea:	xchg   edi,eax
  404ceb:	or     BYTE PTR [eax+0x50285c2e],0x74
  404cf2:	sbb    DWORD PTR [ecx],esp
  404cf4:	jbe    0x404d07
  404cf6:	imul   ebp,DWORD PTR [esi+0x103f2cbd],0x4db3be1a
  404d00:	push   ebp
  404d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d02:	iret   
  404d03:	mov    edx,0x94fb1649
  404d08:	ret    
  404d09:	mov    ebx,0x3987a259
  404d0e:	lods   eax,DWORD PTR ds:[esi]
  404d0f:	jle    0x404d86
  404d11:	jo     0x404d2d
  404d13:	push   ebx
  404d14:	ds js  0x404d79
  404d17:	cmp    cl,dl
  404d19:	or     eax,0x86ea0955
  404d1e:	(bad)  
  404d1f:	mov    bl,0xaa
  404d21:	and    eax,0x241cb44f
  404d26:	(bad)  
  404d27:	cmp    ebx,edx
  404d29:	mov    ss,WORD PTR ds:0x1fabcb48
  404d2f:	dec    esi
  404d30:	es fcom st(5)
  404d33:	jp     0x404d7e
  404d35:	out    dx,al
  404d36:	xor    al,0x46
  404d38:	sbb    DWORD PTR [ebx+ecx*4-0x9534bbf],esp
  404d3f:	out    0x93,al
  404d41:	adc    al,0xba
  404d43:	in     eax,0x4e
  404d45:	xchg   edx,eax
  404d46:	push   ebx
  404d47:	cmp    BYTE PTR [ebx+0x132e2737],cl
  404d4d:	inc    ebx
  404d4e:	maxps  xmm4,XMMWORD PTR [esi-0x46]
  404d52:	aaa    
  404d53:	pop    es
  404d54:	add    al,0xee
  404d56:	shl    BYTE PTR [eax+0x103a85dc],cl
  404d5c:	or     eax,0x81db7cb1
  404d61:	popf   
  404d62:	add    eax,0xbc5a8f2c
  404d67:	test   ebx,ebx
  404d69:	stos   BYTE PTR es:[edi],al
  404d6a:	into   
  404d6b:	js     0x404cf4
  404d6d:	push   ds
  404d6e:	jae    0x404d99
  404d70:	cli    
  404d71:	mov    ?,WORD PTR [edx+0x1af5cd90]
  404d77:	and    DWORD PTR ds:0x9e3ffc6b,0x3e
  404d7e:	and    eax,0x68d780b1
  404d83:	sbb    BYTE PTR [edx+eax*2+0x17],0xe3
  404d88:	push   esi
  404d89:	pop    ebp
  404d8a:	neg    DWORD PTR [ebx-0x46]
  404d8d:	and    ebx,DWORD PTR [edi-0x64]
  404d90:	sbb    bl,cl
  404d92:	enter  0xed5c,0x5c
  404d96:	rol    BYTE PTR [edi+0x1f],0x7d
  404d9a:	fld    st(0)
  404d9c:	adc    ah,0xa4
  404d9f:	inc    edi
  404da0:	(bad)  
  404da1:	leave  
  404da2:	into   
  404da3:	rcr    bh,1
  404da5:	jne    0x404dde
  404da7:	ss mov bh,0xc0
  404daa:	fnstenv [edx]
  404dac:	fldenv [esi+0xf6ba1ac]
  404db2:	dec    ecx
  404db3:	call   0x1c9e32c6
  404db8:	dec    eax
  404db9:	cmp    esi,DWORD PTR [esi+0x6c]
  404dbc:	stos   DWORD PTR es:[edi],eax
  404dbd:	ins    BYTE PTR es:[edi],dx
  404dbe:	scas   eax,DWORD PTR es:[edi]
  404dbf:	jns    0x404dc1
  404dc1:	sbb    al,0x3
  404dc3:	jmp    0x404de9
  404dc5:	add    dl,BYTE PTR [edi+ecx*2+0x52]
  404dc9:	aam    0xb2
  404dcb:	mov    esp,0xa778553c
  404dd0:	sub    BYTE PTR [eax+0x962f8e4],al
  404dd6:	xchg   ebx,eax
  404dd7:	js     0x404e07
  404dd9:	xchg   edx,eax
  404dda:	(bad)
  404ddd:	mov    esi,0xc47396b9
  404de2:	ret    0x43bf
  404de5:	lahf   
  404de6:	add    BYTE PTR [eax-0x56],0xac
  404dea:	pop    bp
  404dec:	ficom  DWORD PTR [ebp-0x1564cd4c]
  404df2:	mul    al
  404df4:	aas    
  404df5:	jno    0x404dcf
  404df7:	daa    
  404df8:	je     0x404ed6
  404dfe:	and    eax,DWORD PTR ds:0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    DWORD PTR [ebp-0x3b],ebp
  4058f0:	cli    
  4058f1:	scas   al,BYTE PTR es:[edi]
  4058f2:	xor    al,0x5f
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	scas   al,BYTE PTR es:[edi]
  4058fb:	sub    BYTE PTR [ecx],dh
  4058fd:	xchg   esp,eax
  4058fe:	add    al,0xf6
  405900:	cmp    dh,al
  405902:	sti    
  405903:	add    DWORD PTR [eax],esp
  405905:	call   0x5bb4:0x66927011
  40590c:	inc    ecx
  40590d:	test   eax,0xa3dec54e
  405912:	popa   
  405913:	cmp    DWORD PTR [esi+0x21666ce3],ebx
  405919:	push   0x75
  40591b:	ins    DWORD PTR es:[edi],dx
  40591c:	add    eax,0x81ffa16f
  405921:	mov    eax,0xf30a0aa3
  405926:	add    BYTE PTR [ebx-0x76],dl
  405929:	call   0xe82557a2
  40592e:	stos   DWORD PTR es:[edi],eax
  40592f:	ret    0xc6b6
  405932:	jno    0x4058d4
  405934:	sbb    al,0x45
  405936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405937:	repnz sub BYTE PTR [eax],dl
  40593a:	sbb    BYTE PTR [ebx],0xc3
  40593d:	ja     0x40590e
  40593f:	jmp    FWORD PTR [ecx-0x60]
  405942:	and    dl,bh
  405944:	mov    edi,0x266b20fe
  405949:	sbb    al,0x4e
  40594b:	jmp    0x405931
  40594d:	pop    edx
  40594e:	rcl    BYTE PTR [ebx+0x6d66c26f],0x70
  405955:	loope  0x405947
  405957:	cmp    eax,0x49ef6322
  40595c:	inc    esi
  40595d:	pop    edi
  40595e:	and    al,0xd1
  405960:	push   ebx
  405961:	sub    dl,BYTE PTR [ebp+ebp*2-0x10fab333]
  405968:	fucomi st,st(6)
  40596a:	ret    
  40596b:	mov    eax,ds:0x385ecac6
  405970:	outs   dx,BYTE PTR ds:[esi]
  405971:	dec    esp
  405972:	jno    0x4059cb
  405974:	mov    eax,ds:0x623b8d7a
  405979:	fs jl  0x40597e
  40597c:	mov    WORD PTR [ebp+ecx*8+0xd0b2e8c],gs
  405983:	inc    ecx
  405984:	push   esp
  405985:	jo     0x405915
  405987:	add    al,0xd0
  405989:	and    esp,DWORD PTR [ecx+0x29]
  40598c:	stos   DWORD PTR es:[edi],eax
  40598d:	and    ch,cl
  40598f:	test   al,0x6e
  405991:	in     eax,dx
  405992:	jb     0x405980
  405994:	mov    eax,0xee7088c2
  405999:	inc    edi
  40599a:	jmp    0x798364de
  40599f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059a0:	or     eax,0x49a85a2c
  4059a5:	retf   
  4059a6:	mov    ebp,0x6e7daef5
  4059ab:	in     al,dx
  4059ac:	ins    DWORD PTR es:[edi],dx
  4059ad:	enter  0x53d2,0x41
  4059b1:	arpl   WORD PTR [edx+0x72a10b14],bp
  4059b7:	icebp  
  4059b8:	fwait
  4059b9:	test   BYTE PTR ds:0xe534503,dh
  4059bf:	push   edi
  4059c0:	or     BYTE PTR [edi-0xec96d12],0xbc
  4059c7:	dec    esi
  4059c8:	test   eax,0x7dcc5d25
  4059cd:	ss adc eax,0x26bd700a
  4059d3:	je     0x405991
  4059d5:	js     0x4059a3
  4059d7:	push   0x78252ff5
  4059dc:	or     al,0x4d
  4059de:	daa    
  4059df:	loop   0x405a32
  4059e1:	hlt    
  4059e2:	cs in  al,0x67
  4059e5:	sub    dl,BYTE PTR [edx-0x32c8033c]
  4059eb:	jnp    0x405a15
  4059ed:	lea    ebp,[eax+edi*1-0x3c2bc66d]
  4059f4:	add    al,0xcd
  4059f6:	adc    DWORD PTR [eax+0x197eb749],esi
  4059fc:	(bad)  
  4059fd:	mov    edx,0xd9243716
  405a02:	pushf  
  405a03:	lods   eax,DWORD PTR ds:[esi]
  405a04:	dec    eax
  405a05:	jge    0x405a28
  405a07:	jo     0x405a09
  405a09:	(bad)  
  405a0a:	inc    BYTE PTR [eax-0x18b3f6f0]
  405a10:	pop    edx
  405a11:	ja     0x405a21
  405a13:	and    BYTE PTR [edi-0x4d01fb6f],dl
  405a19:	repz or BYTE PTR [edi-0x4d34b500],dl
  405a20:	add    BYTE PTR [ebx-0x5],ah
  405a23:	adc    al,0x8b
  405a25:	loopne 0x4059dc
  405a27:	xor    eax,0x44c29129
  405a2c:	clc    
  405a2d:	popf   
  405a2e:	add    BYTE PTR [esi-0x7c6de017],0xa0
  405a35:	mov    DWORD PTR [eax-0x603f7f6b],ecx
  405a3b:	or     bl,ah
  405a3d:	add    ebx,DWORD PTR [edi-0x73]
  405a40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a41:	mov    esi,0xa725b71d
  405a46:	dec    ebp
  405a47:	inc    edx
  405a48:	inc    ecx
  405a49:	data16 rcr BYTE PTR [edi],0x89
  405a4d:	jmp    0x3a7a:0x2caba7f3
  405a54:	push   edi
  405a55:	nop
  405a56:	xchg   dl,bh
  405a58:	push   ecx
  405a59:	jns    0x405a24
  405a5b:	mov    ebx,0xe721123e
  405a60:	xchg   edi,eax
  405a61:	push   0x30
  405a63:	mov    ebx,0x5cd7ac94
  405a68:	ror    BYTE PTR [esi+0x457e8fbe],1
  405a6e:	push   ss
  405a6f:	pop    ebp
  405a70:	ss sbb al,0x3d
  405a73:	pop    ds
  405a74:	ror    DWORD PTR [edi+0x4f],0x17
  405a78:	fwait
  405a79:	mov    ds:0xa31cb4cb,eax
  405a7e:	es adc al,0xde
  405a81:	stos   DWORD PTR es:[edi],eax
  405a82:	jne    0x405aef
  405a84:	jmp    0x15ed:0x109ba32b
  405a8b:	fnstsw WORD PTR [esi-0x13d9af27]
  405a91:	sahf   
  405a92:	adc    esi,DWORD PTR [edi+0x8505136]
  405a98:	mov    dl,0x8a
  405a9a:	std    
  405a9b:	idiv   BYTE PTR [ebx+eiz*8+0xbd816d2]
  405aa2:	mov    ecx,0xd3f4408e
  405aa7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  405aa9:	mov    ds:0x4c6fd5a8,eax
  405aae:	fwait
  405aaf:	popf   
  405ab0:	sar    DWORD PTR [ebx-0xb],1
  405ab3:	clc    
  405ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ab5:	js     0x405a7d
  405ab7:	out    dx,al
  405ab8:	xchg   DWORD PTR [eax-0x48],esi
  405abb:	pop    ebp
  405abc:	and    al,BYTE PTR [eax+0x4e]
  405abf:	frstor [esi+ebx*2]
  405ac2:	je     0x405a95
  405ac4:	das    
  405ac5:	mov    DWORD PTR [edx-0x18],esp
  405ac8:	mov    BYTE PTR [edi+0x52],0x53
  405acc:	mov    ch,0xfd
  405ace:	mov    dl,0x20
  405ad0:	push   eax
  405ad1:	out    0xd6,eax
  405ad3:	dec    ebp
  405ad4:	adc    BYTE PTR [eax],0x1e
  405ad7:	imul   esp,ebp,0xa7b71485
  405add:	fisub  DWORD PTR [eax+ebp*8]
  405ae0:	sbb    DWORD PTR [edx+0x59],esi
  405ae3:	dec    edi
  405ae4:	jmp    0x405a9c
  405ae6:	sbb    eax,0x292ed885
  405aeb:	lea    ebx,ds:0x40d0cd03
  405af1:	or     DWORD PTR [ebp+eax*4-0x32af2243],0x9a82d396
  405afc:	push   eax
  405afd:	dec    ebp
  405afe:	std    
  405aff:	xchg   ebx,eax
  405b00:	lods   eax,DWORD PTR ds:[esi]
  405b01:	push   cs
  405b02:	es pop edi
  405b04:	fldenv [ebp+0x8bd4a89]
  405b0a:	cli    
  405b0b:	nop
  405b0c:	push   cs
  405b0d:	lods   al,BYTE PTR ds:[esi]
  405b0e:	adc    eax,0xb7e5bf93
  405b13:	fidivr WORD PTR [ebx+eax*4]
  405b16:	jmp    0x6744:0xf27a513b
  405b1d:	arpl   dx,bp
  405b1f:	mov    dh,0xb0
  405b21:	mov    eax,0x58f36a00
  405b26:	mov    dh,0x4a
  405b28:	popf   
  405b29:	sub    al,ch
  405b2b:	cwde   
  405b2c:	in     eax,dx
  405b2d:	adc    ah,bh
  405b2f:	push   0x4b24a8c1
  405b34:	and    al,0x89
  405b36:	inc    eax
  405b37:	sub    esi,ebx
  405b39:	ret    
  405b3a:	mov    bl,0xac
  405b3c:	mov    al,BYTE PTR [edi+0x4f]
  405b3f:	int    0x4
  405b41:	pop    esp
  405b42:	push   esp
  405b43:	jo     0x405b5e
  405b45:	jge    0x405b46
  405b47:	inc    edx
  405b48:	lods   eax,DWORD PTR ds:[esi]
  405b49:	pop    ds
  405b4a:	fsubr  DWORD PTR [esi-0x8acd750]
  405b50:	pop    edi
  405b51:	popa   
  405b52:	mov    edi,0x1ee1131e
  405b58:	jg     0x405bb0
  405b5a:	pop    ebp
  405b5b:	bound  edi,QWORD PTR [edi+0x4b]
  405b5e:	jb     0x405ae1
  405b60:	add    bh,bh
  405b62:	repz or DWORD PTR [ecx-0x75b0ef1e],0xffffffa1
  405b6a:	sub    BYTE PTR [ecx],cl
  405b6c:	and    edi,DWORD PTR [edi-0x66]
  405b6f:	in     al,0x4d
  405b71:	pop    edi
  405b72:	xchg   edi,eax
  405b73:	adc    eax,0x96f61abc
  405b78:	int    0x10
  405b7a:	xchg   edi,eax
  405b7b:	mov    ah,0x37
  405b7d:	inc    esp
  405b7e:	cs mov esp,0xa704aab5
  405b84:	adc    al,0x73
  405b86:	sbb    al,0x87
  405b88:	mov    al,0xf6
  405b8a:	jle    0x405bfe
  405b8c:	in     al,dx
  405b8d:	ja     0x405bf5
  405b8f:	(bad)  
  405b90:	jge    0x405bfa
  405b92:	call   0xeae8:0x3c8ee4f8
  405b99:	inc    esp
  405b9a:	int    0xc3
  405b9c:	pop    edi
  405b9d:	ins    BYTE PTR es:[edi],dx
  405b9e:	push   eax
  405b9f:	das    
  405ba0:	xchg   esi,eax
  405ba1:	or     BYTE PTR [ecx-0x77],bh
  405ba4:	or     BYTE PTR [ecx-0x1724a1da],dl
  405baa:	jns    0x405be4
  405bac:	sti    
  405bad:	xchg   ecx,eax
  405bae:	dec    esi
  405baf:	fs test eax,0x8a9945a7
  405bb5:	push   edx
  405bb6:	test   ecx,edx
  405bb8:	push   cs
  405bb9:	in     al,0x42
  405bbb:	mov    eax,ds:0x1a30da62
  405bc0:	lock loop 0x405b95
  405bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bc4:	cdq    
  405bc5:	push   ebx
  405bc6:	or     al,0x30
  405bc8:	(bad)  ds:0xe3f2cbbd
  405bce:	pop    ds
  405bcf:	cld    
  405bd0:	scas   eax,DWORD PTR es:[edi]
  405bd1:	dec    ebp
  405bd2:	xchg   DWORD PTR [ecx+0x5dedaa65],edi
  405bd8:	push   es
  405bd9:	xchg   BYTE PTR [edi-0x65bebbe7],ah
  405bdf:	ret    
  405be0:	push   ebx
  405be1:	jle    0x405ba5
  405be3:	mov    esp,0xebb3c92e
  405be8:	mov    al,ds:0x955b1b92
  405bed:	sahf   
  405bee:	fwait
  405bef:	ins    DWORD PTR es:[edi],dx
  405bf0:	adc    al,0x60
  405bf2:	adc    al,0x3
  405bf4:	push   edx
  405bf5:	or     al,0x1c
  405bf7:	mov    ch,0x12
  405bf9:	lods   al,BYTE PTR ds:[esi]
  405bfa:	inc    edx
  405bfb:	dec    ebx
  405bfc:	xchg   edx,eax
  405bfd:	mov    esi,0xafc78eba
  405c02:	(bad)
  405c06:	leave  
  405c07:	mov    dl,0x5d
  405c09:	or     al,0xff
  405c0b:	shr    DWORD PTR [esi+0x79],0xf0
  405c0f:	in     al,dx
  405c10:	add    al,0xc6
  405c12:	push   edx
  405c13:	test   DWORD PTR [esi-0x75],esp
  405c16:	jge    0x405c01
  405c18:	push   ds
  405c19:	scas   eax,DWORD PTR es:[edi]
  405c1a:	jbe    0x405c59
  405c1c:	fldcw  WORD PTR [esi+0x5e]
  405c1f:	imul   edx,esi,0xae8d86a1
  405c25:	mov    db7,eax
  405c28:	mov    ah,0xc
  405c2a:	sbb    DWORD PTR [ebx+0x5e],esp
  405c2d:	dec    edx
  405c2e:	scas   al,BYTE PTR es:[edi]
  405c2f:	xchg   esi,eax
  405c30:	stos   DWORD PTR es:[edi],eax
  405c31:	add    DWORD PTR [ebp-0x6d],ebx
  405c34:	and    BYTE PTR [eax+0x68e9c762],cl
  405c3a:	fs fwait
  405c3c:	lods   eax,DWORD PTR ds:[esi]
  405c3d:	jo     0x405cb9
  405c3f:	cmc    
  405c40:	xor    eax,0x66fcec7a
  405c45:	cmp    eax,0x418335e
  405c4a:	arpl   WORD PTR [edi+0x21],bx
  405c4d:	(bad)  
  405c4e:	gs pop edx
  405c50:	mov    BYTE PTR [edx+0x37],al
  405c53:	adc    dl,ah
  405c55:	jo     0x405cd6
  405c57:	arpl   WORD PTR [edi+edx*2+0x3cdb2689],bx
  405c5e:	out    dx,al
  405c5f:	xlat   BYTE PTR ds:[ebx]
  405c60:	mov    esp,0x6ff38de4
  405c65:	not    BYTE PTR [ebx+0xca994ac]
  405c6b:	(bad)  
  405c6d:	lds    ebx,FWORD PTR [esi]
  405c6f:	sbb    al,0xe4
  405c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c72:	out    dx,eax
  405c73:	pop    eax
  405c74:	xor    BYTE PTR [esi-0x2bcef9fe],ch
  405c7a:	sahf   
  405c7b:	and    edi,DWORD PTR [ecx]
  405c7d:	xchg   esi,eax
  405c7e:	loope  0x405c5b
  405c80:	fcmove st,st(3)
  405c82:	or     al,0xcd
  405c84:	sbb    DWORD PTR [edi-0x57],eax
  405c87:	ins    DWORD PTR es:[edi],dx
  405c88:	xor    eax,0x4f5aef88
  405c8d:	cmp    BYTE PTR [eax+0x186c4fb3],bl
  405c93:	jecxz  0x405d02
  405c95:	fwait
  405c96:	scas   al,BYTE PTR es:[edi]
  405c97:	je     0x405c5c
  405c99:	cld    
  405c9a:	xchg   BYTE PTR [ecx-0x72],dl
  405c9d:	pop    ss
  405c9e:	jbe    0x405c75
  405ca0:	jae    0x405c23
  405ca2:	mov    bh,BYTE PTR [ebx+0x6cfc28f2]
  405ca8:	lods   al,BYTE PTR ds:[esi]
  405ca9:	(bad)  
  405caa:	mov    esi,0x6afaa9a3
  405caf:	adc    eax,esi
  405cb1:	scas   al,BYTE PTR es:[edi]
  405cb2:	repnz dec edx
  405cb4:	xor    DWORD PTR [esi],esi
  405cb6:	add    DWORD PTR [esi],ecx
  405cb8:	loop   0x405d21
  405cba:	in     eax,dx
  405cbb:	push   cs
  405cbc:	out    dx,eax
  405cbd:	jbe    0x405d27
  405cbf:	fimul  WORD PTR [eax+0x58]
  405cc2:	call   0xcfa0df73
  405cc7:	repnz stc 
  405cc9:	cmp    ch,BYTE PTR [edi+0x2a]
  405ccc:	out    dx,al
  405ccd:	xor    ebp,DWORD PTR [ebp+0x86af52]
  405cd3:	cmp    eax,0x92f8615f
  405cd8:	in     al,dx
  405cd9:	hlt    
  405cda:	mov    dh,0x9b
  405cdc:	xor    cl,BYTE PTR [ebx+0x67]
  405cdf:	jns    0x405c77
  405ce1:	xchg   edi,eax
  405ce2:	leave  
  405ce3:	lea    edx,[eax-0x3e1ad133]
  405ce9:	push   edx
  405cea:	xchg   ecx,eax
  405ceb:	mov    esi,fs
  405ced:	xchg   DWORD PTR [edi+eiz*2-0x31],esp
  405cf1:	sbb    dl,BYTE PTR [edi-0x380e8820]
  405cf7:	sti    
  405cf8:	loope  0x405d38
  405cfa:	cdq    
  405cfb:	test   DWORD PTR [ebp+0x42],ecx
  405cfe:	mov    BYTE PTR [edi-0x3a5b3e3c],dl
  405d04:	lods   al,BYTE PTR ds:[esi]
  405d05:	jmp    0xf460:0x59612f81
  405d0c:	push   0x6f
  405d0e:	xchg   esi,eax
  405d0f:	lods   al,BYTE PTR ds:[esi]
  405d10:	pushf  
  405d11:	loopne 0x405cbf
  405d13:	push   es
  405d14:	int    0xfd
  405d16:	dec    ecx
  405d17:	sbb    DWORD PTR [edi],eax
  405d19:	clc    
  405d1a:	adc    al,0x8e
  405d1c:	or     al,0xdc
  405d1e:	inc    ebp
  405d1f:	adc    al,0x9e
  405d21:	mov    ebx,0xa6a2eb6d
  405d26:	fild   DWORD PTR [edx+0x72]
  405d29:	or     al,0x93
  405d2b:	push   ds
  405d2c:	adc    ebx,DWORD PTR [ecx+0x62]
  405d2f:	stos   DWORD PTR es:[edi],eax
  405d30:	mov    bl,0x56
  405d32:	lds    esp,FWORD PTR [edx-0x16dd3084]
  405d38:	sbb    al,0x62
  405d3a:	into   
  405d3b:	or     BYTE PTR [edx+0x5379fe9b],dl
  405d41:	dec    esi
  405d42:	pop    esi
  405d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d44:	or     DWORD PTR [ebp-0x58],ebp
  405d47:	out    0x49,al
  405d49:	shl    DWORD PTR [eax],cl
  405d4b:	inc    esp
  405d4c:	dec    edi
  405d4d:	sti    
  405d4e:	jo     0x405cde
  405d50:	into   
  405d51:	pop    esi
  405d52:	das    
  405d53:	jl     0x405cfa
  405d55:	and    eax,0xdd3d8052
  405d5a:	or     eax,0x1ade1966
  405d5f:	add    ch,BYTE PTR [ebp-0x14]
  405d62:	inc    ecx
  405d63:	ds push es
  405d65:	bound  ecx,QWORD PTR [edx-0x281ed7b9]
  405d6b:	shl    BYTE PTR [eax],1
  405d6d:	dec    esp
  405d6e:	sbb    BYTE PTR [ebp+0x76],al
  405d71:	lea    ebp,[eax]
  405d73:	jb     0x405d3e
  405d75:	pop    edx
  405d76:	cwde   
  405d77:	push   edx
  405d78:	cld    
  405d79:	push   esp
  405d7a:	fcom   st(1)
  405d7c:	aam    0xf9
  405d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d7f:	aam    0x74
  405d81:	push   0x9b6545aa
  405d86:	retf   0x4bfb
  405d89:	outs   dx,BYTE PTR ds:[esi]
  405d8a:	xchg   DWORD PTR [eax],ecx
  405d8c:	in     eax,dx
  405d8d:	pop    ebx
  405d8e:	or     eax,0x46102c9
  405d93:	fwait
  405d94:	clc    
  405d95:	sti    
  405d96:	(bad)  
  405d98:	cs add edi,esp
  405d9b:	lahf   
  405d9c:	fadd   st,st(6)
  405d9e:	out    0x7d,ax
  405da1:	jecxz  0x405e04
  405da3:	cdq    
  405da4:	lds    eax,FWORD PTR ss:[ebp-0x533160ef]
  405dab:	xchg   esp,eax
  405dac:	aam    0xc3
  405dae:	out    dx,eax
  405daf:	cmp    esp,DWORD PTR [edi+0x68]
  405db2:	jg     0x405da9
  405db4:	mov    ds:0xdcd1b914,al
  405db9:	loopne 0x405dbd
  405dbb:	and    DWORD PTR [ebp+esi*2+0x76],0x92f411b6
  405dc3:	mov    BYTE PTR [edi+0x26c068be],bh
  405dc9:	jecxz  0x405e16
  405dcb:	mov    ebp,0xc71910f2
  405dd0:	add    BYTE PTR [edx+eax*2],ah
  405dd3:	sub    edi,DWORD PTR [esi-0x39bda8f6]
  405dd9:	adc    dl,BYTE PTR [ebx-0x16]
  405ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ddd:	pop    ecx
  405dde:	mov    ebp,0x16148f7e
  405de3:	int3   
  405de4:	call   0x35ec222
  405de9:	jne    0x405e55
  405deb:	pushf  
  405dec:	xor    DWORD PTR [ebp+0x33bbf63e],ebp
  405df2:	stos   BYTE PTR es:[edi],al
  405df3:	mov    al,0xe2
  405df5:	in     eax,0x4f
  405df7:	dec    ebx
  405df8:	out    dx,eax
  405df9:	outs   dx,BYTE PTR ds:[esi]
  405dfa:	adc    al,0x53
  405dfc:	dec    ecx
  405dfd:	xchg   edx,eax
  405dfe:	ret    0x2d3f
  405e01:	jbe    0x405e52
  405e03:	scas   al,BYTE PTR es:[edi]
  405e04:	xchg   ecx,eax
  405e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e06:	icebp  
  405e07:	dec    esp
  405e08:	imul   ebx,DWORD PTR ds:0x39fb90c8,0xffffffae
  405e0f:	xor    eax,0x3e87b912
  405e14:	adc    BYTE PTR [esp+eiz*2-0xb],bh
  405e18:	or     DWORD PTR ds:0x2a892db7,edx
  405e1e:	sub    dl,bh
  405e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e21:	sbb    ebp,DWORD PTR [ebx+eax*8-0x46]
  405e25:	push   edx
  405e26:	int    0x39
  405e28:	je     0x405dee
  405e2a:	cmp    dl,0x93
  405e2d:	push   ebp
  405e2e:	ds cs mov bl,0x32
  405e32:	xor    bh,ah
  405e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e35:	je     0x405e56
  405e37:	rcl    cl,cl
  405e39:	sub    BYTE PTR [ecx+ebx*1-0x3b],0xcd
  405e3e:	sub    BYTE PTR [eax],ah
  405e40:	mov    ecx,0xc55cf077
  405e45:	xchg   BYTE PTR [edx],cl
  405e47:	add    eax,0x1a88fdf1
  405e4c:	add    esi,eax
  405e4e:	jecxz  0x405eaf
  405e50:	or     eax,0x85224175
  405e55:	cld    
  405e56:	mov    al,ds:0xcf9326b0
  405e5b:	xor    eax,0xa3b92c35
  405e60:	pop    edi
  405e61:	xchg   ecx,eax
  405e62:	pop    ebx
  405e63:	lods   al,BYTE PTR ds:[esi]
  405e64:	fwait
  405e65:	daa    
  405e66:	daa    
  405e67:	retf   0x4a19
  405e6a:	push   edx
  405e6b:	and    dh,bh
  405e6d:	shl    BYTE PTR [edx],cl
  405e6f:	jns    0x405e69
  405e71:	mov    bh,0x93
  405e73:	mov    edi,0x7dfc13d3
  405e78:	hlt    
  405e79:	int3   
  405e7a:	add    al,0xfb
  405e7c:	jb     0x405ebe
  405e7e:	mov    ch,cl
  405e80:	arpl   WORD PTR [esi-0x34],di
  405e83:	jno    0x405e1b
  405e85:	inc    ebp
  405e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e87:	adc    BYTE PTR [edi-0xc],cl
  405e8a:	cmp    DWORD PTR [esi+0x321a6ad5],ebx
  405e90:	push   ecx
  405e91:	sub    eax,0xde9cead2
  405e96:	fdivrp st(7),st
  405e98:	cmp    eax,0xff930435
  405e9d:	and    eax,0x82f36d3a
  405ea2:	sub    ecx,DWORD PTR [ebp+0x76a69f45]
  405ea8:	loope  0x405ebf
  405eaa:	repz es ja 0x405ec7
  405eae:	pop    ecx
  405eaf:	aam    0x83
  405eb1:	push   eax
  405eb2:	mov    edx,0xa3781dc3
  405eb7:	popa   
  405eb8:	fcmovu st,st(7)
  405eba:	mov    bh,0x8f
  405ebc:	xor    DWORD PTR [edi+0x7ef6b0d7],0x5d514e0e
  405ec6:	fdiv   DWORD PTR [edi+0x1c]
  405ec9:	inc    ecx
  405eca:	rol    edx,1
  405ecc:	test   eax,0x82b713de
  405ed1:	pop    edx
  405ed2:	cwde   
  405ed3:	dec    esi
  405ed4:	adc    al,0x38
  405ed6:	std    
  405ed7:	jae    0x405f54
  405ed9:	push   ebp
  405eda:	xchg   ebp,eax
  405edb:	or     edx,ebx
  405edd:	shr    DWORD PTR [edi-0xb41aa5],1
  405ee3:	inc    edx
  405ee4:	jns    0x405f5f
  405ee6:	sbb    BYTE PTR [edx+0x36be2a79],dl
  405eec:	(bad)  
  405eed:	cmp    al,0x8c
  405eef:	sbb    ah,dl
  405ef1:	inc    esp
  405ef2:	jae    0x405edc
  405ef4:	pusha  
  405ef5:	cmp    eax,0x73710313
  405efa:	push   es
  405efb:	xlat   BYTE PTR ds:[ebx]
  405efc:	xchg   esi,eax
  405efd:	fcom   QWORD PTR [esi]
  405eff:	xor    DWORD PTR [esi],ebp
  405f01:	inc    esp
  405f02:	or     al,BYTE PTR [eax]
  405f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f05:	ins    DWORD PTR es:[edi],dx
  405f06:	(bad)  
  405f07:	(bad)  
  405f09:	fistp  WORD PTR [eax+0x75b9ab4e]
  405f0f:	shl    DWORD PTR [ebp+eiz*1-0x43],cl
  405f13:	dec    esi
  405f14:	test   BYTE PTR [ebx],bl
  405f16:	out    dx,al
  405f17:	popf   
  405f18:	push   esi
  405f19:	pop    esp
  405f1a:	mov    cl,0xc6
  405f1c:	push   ebp
  405f1d:	dec    ebx
  405f1e:	inc    ecx
  405f1f:	jb     0x405f3e
  405f21:	cmp    bh,ah
  405f23:	adc    BYTE PTR [esi+esi*1],ah
  405f26:	fwait
  405f27:	pop    ds
  405f28:	mov    ecx,0xffdf53b4
  405f2d:	pop    edx
  405f2e:	sbb    ebx,DWORD PTR [esi+edi*1+0x7c9a428d]
  405f35:	int    0x33
  405f37:	fdivp  st(5),st
  405f39:	xor    edi,DWORD PTR [ecx-0x5cb8bc3d]
  405f3f:	jnp    0x405f0d
  405f41:	out    0x26,eax
  405f43:	iret   
  405f44:	sahf   
  405f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f46:	add    edx,DWORD PTR [esi-0x5c]
  405f49:	out    0xb2,eax
  405f4b:	inc    esp
  405f4c:	leave  
  405f4d:	mov    ds:0xa7bbe4b,eax
  405f52:	mov    BYTE PTR [ebx-0x26],dh
  405f55:	add    al,0xb1
  405f57:	dec    ebx
  405f58:	xchg   eax,ebx
  405f5a:	dec    BYTE PTR [ecx+0x3c]
  405f5d:	(bad)  
  405f5e:	dec    edi
  405f5f:	scas   eax,DWORD PTR es:[edi]
  405f60:	(bad)  
  405f61:	or     al,0xda
  405f63:	inc    ecx
  405f64:	popa   
  405f65:	dec    eax
  405f66:	xchg   bl,al
  405f68:	mov    bl,0x21
  405f6a:	or     BYTE PTR ds:0x523e741e,ch
  405f70:	les    edx,FWORD PTR ds:0x6dc64b76
  405f76:	imul   ebp,DWORD PTR [eax],0x206d482e
  405f7c:	mov    ch,0x9b
  405f7e:	test   BYTE PTR [ecx+0x38ae73e0],dh
  405f84:	push   ebp
  405f85:	add    eax,0xcf2cbd61
  405f8a:	push   edx
  405f8b:	sub    ch,BYTE PTR [edi+0x52db9eba]
  405f91:	push   es
  405f92:	adc    DWORD PTR [esi+0x7ff0fb54],0xebebbf04
  405f9c:	aad    0x4
  405f9e:	repz mov bh,0x93
  405fa1:	push   ds
  405fa2:	or     ebp,DWORD PTR [eax]
  405fa4:	jno    0x405fbd
  405fa6:	adc    bl,BYTE PTR [esi]
  405fa8:	mov    ah,0x6d
  405faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fab:	ja     0x405f95
  405fad:	ins    DWORD PTR es:[edi],dx
  405fae:	stos   DWORD PTR es:[edi],eax
  405faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fb0:	pop    ss
  405fb1:	xor    cl,BYTE PTR [esi]
  405fb3:	inc    edx
  405fb4:	cmp    BYTE PTR [ecx+esi*4+0x4a691746],0x6a
  405fbc:	das    
  405fbd:	jo     0x405ff2
  405fbf:	adc    ebp,eax
  405fc1:	adc    ebp,DWORD PTR [ebx+0x35]
  405fc4:	lahf   
  405fc5:	jns    0x405fef
  405fc7:	fstp   QWORD PTR [esi+0x53]
  405fca:	clc    
  405fcb:	fcmovnb st,st(6)
  405fcd:	test   DWORD PTR [eax],edx
  405fcf:	xor    ah,cl
  405fd1:	les    edx,FWORD PTR [ebp+0x4a9409d4]
  405fd7:	and    dh,BYTE PTR [ecx]
  405fd9:	fstp   st(3)
  405fdb:	sbb    eax,0xefdb5398
  405fe0:	fldcw  WORD PTR [edx-0x54]
  405fe3:	jo     0x405f77
  405fe5:	cld    
  405fe6:	xchg   BYTE PTR [edx+0x28a9e381],bh
  405fec:	imul   edi,DWORD PTR [ecx-0x8],0x2ab664ae
  405ff3:	(bad)  
  405ff4:	pop    esp
  405ff5:	mov    al,ds:0xb51cdd47
  405ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ffb:	ror    BYTE PTR [ecx-0x10],cl
  405ffe:	mov    ebx,0x92aeadcd
  406003:	mov    DWORD PTR [ebp+0x45],esi
  406006:	into   
  406007:	mov    al,ds:0xfcbadcd9
  40600c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40600d:	dec    eax
  40600e:	or     al,0x5c
  406010:	rol    DWORD PTR [esi+0x2f],cl
  406013:	xor    DWORD PTR [edx+0xe079708],eax
  406019:	inc    esp
  40601a:	push   ss
  40601b:	cmp    eax,0xcb986843
  406020:	sub    eax,0x2b8d0fa4
  406025:	or     DWORD PTR [edx],edi
  406027:	(bad)  [esi-0x50]
  40602a:	int3   
  40602b:	jno    0x405fde
  40602d:	mov    WORD PTR [edi],ss
  40602f:	int    0xfa
  406031:	fiadd  WORD PTR [eax-0x685e1677]
  406037:	clc    
  406038:	adc    DWORD PTR [ebx],ebx
  40603a:	das    
  40603b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40603c:	in     eax,dx
  40603d:	into   
  40603e:	push   eax
  40603f:	call   0xe8f8f52e
  406044:	pop    es
  406045:	and    eax,0xf7de90e6
  40604a:	and    edi,ecx
  40604c:	dec    ebx
  40604d:	and    DWORD PTR [bp+0x56],ebp
  406051:	dec    ebx
  406052:	div    DWORD PTR [edx+0x41]
  406055:	sbb    al,0xa2
  406057:	jmp    0xb969aeea
  40605c:	xchg   esi,eax
  40605d:	mov    ah,0x60
  40605f:	mov    esp,0x1d7459a5
  406064:	mov    cl,0x43
  406066:	int3   
  406067:	scas   al,BYTE PTR es:[edi]
  406068:	sbb    eax,0x63223912
  40606d:	sbb    al,0xa0
  40606f:	outs   dx,DWORD PTR ds:[esi]
  406070:	xor    edx,DWORD PTR [esi]
  406072:	inc    ebx
  406074:	mov    ch,0x4a
  406076:	jg     0x4060e2
  406078:	pop    edx
  406079:	jnp    0x4060fa
  40607b:	loopne 0x4060c8
  40607d:	cdq    
  40607e:	out    0xbb,eax
  406080:	jnp    0x40602e
  406082:	ret    
  406083:	cvtdq2ps xmm0,XMMWORD PTR ds:0x802d9c17
  40608a:	push   ecx
  40608b:	lods   eax,DWORD PTR ds:[esi]
  40608c:	lahf   
  40608d:	mov    ecx,0x8158c8d4
  406092:	pop    esi
  406093:	in     eax,0xa5
  406095:	jo     0x406053
  406097:	hlt    
  406098:	xchg   esp,eax
  406099:	ror    DWORD PTR [eax],1
  40609b:	(bad)  
  40609c:	push   ds
  40609d:	sub    esp,ecx
  40609f:	popa   
  4060a0:	sti    
  4060a1:	ja     0x4060c0
  4060a3:	aas    
  4060a4:	push   eax
  4060a5:	out    dx,al
  4060a6:	pop    esi
  4060a7:	xor    eax,DWORD PTR ss:0x1bb4bf24
  4060ae:	and    ch,ch
  4060b0:	retf   0x2319
  4060b3:	outs   dx,BYTE PTR ds:[esi]
  4060b4:	xchg   ah,ch
  4060b6:	xor    BYTE PTR [esi],ah
  4060b8:	sar    ebx,1
  4060ba:	xchg   esi,eax
  4060bb:	outs   dx,BYTE PTR ds:[esi]
  4060bc:	mov    ebx,0x90955703
  4060c1:	mov    DWORD PTR [esi-0x27],edi
  4060c4:	int    0x3e
  4060c6:	and    ebp,DWORD PTR [edx-0x57]
  4060c9:	sar    DWORD PTR [edx],0xae
  4060cc:	and    eax,0x34b0f5a0
  4060d1:	shl    DWORD PTR [edi],cl
  4060d3:	in     al,dx
  4060d4:	sbb    cl,cl
  4060d6:	hlt    
  4060d7:	or     edx,DWORD PTR [edx+0x11]
  4060da:	sub    eax,0x956832b8
  4060df:	fs aaa 
  4060e1:	into   
  4060e2:	jecxz  0x4060ce
  4060e4:	fdivr  DWORD PTR [esi+ebp*1-0x4b64c756]
  4060eb:	ss std 
  4060ed:	xor    DWORD PTR [edi-0x3d49b3f8],esi
  4060f3:	fwait
  4060f4:	pop    ds
  4060f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060f6:	aam    0x24
  4060f8:	add    ebp,DWORD PTR [ebx-0xc]
  4060fb:	adc    edx,ebp
  4060fd:	adc    BYTE PTR [edx],ch
  4060ff:	pop    edi
  406100:	pop    edx
  406101:	mov    esi,0xcf95b45f
  406106:	out    0x8e,al
  406108:	in     al,0x45
  40610a:	xor    ebp,DWORD PTR ds:0xd6bc742d
  406110:	outs   dx,DWORD PTR ds:[esi]
  406111:	popf   
  406112:	retf   0x4e7e
  406115:	mov    dh,0xa7
  406117:	xor    edx,DWORD PTR [esi-0x327ec16a]
  40611d:	scas   eax,DWORD PTR es:[edi]
  40611e:	push   esp
  40611f:	leave  
  406120:	push   ds
  406121:	jbe    0x40613f
  406123:	(bad)  
  406124:	xchg   esi,eax
  406125:	mov    eax,ds:0x97ad9bff
  40612a:	xor    BYTE PTR [ebx-0x69],ch
  40612d:	mov    bl,0x1f
  40612f:	stc    
  406130:	lods   al,BYTE PTR ds:[esi]
  406131:	dec    ecx
  406132:	fwait
  406133:	(bad)  
  406134:	add    BYTE PTR ds:[eax-0x3601bd50],cl
  40613b:	push   0x609a68a6
  406140:	outs   dx,DWORD PTR ds:[esi]
  406141:	inc    esi
  406142:	ror    DWORD PTR [ecx+ebp*8-0x54],0xb6
  406147:	fild   QWORD PTR ds:0xbc49d9a5
  40614d:	test   DWORD PTR [esp+edx*1+0x31bde05e],edx
  406154:	inc    ebp
  406155:	lods   al,BYTE PTR ds:[esi]
  406156:	push   edi
  406157:	(bad)  
  406158:	scas   al,BYTE PTR es:[edi]
  406159:	psubsw mm5,QWORD PTR [ebp-0x578ab1a4]
  406160:	out    dx,eax
  406161:	sub    cl,dh
  406163:	xchg   edx,eax
  406164:	or     al,0x22
  406166:	test   BYTE PTR [ecx+0x5],bh
  406169:	das    
  40616a:	or     DWORD PTR [edx],0x25
  40616d:	sub    esi,DWORD PTR [ebx+edx*2]
  406170:	xlat   BYTE PTR ds:[ebx]
  406171:	inc    eax
  406172:	push   eax
  406173:	xchg   ecx,eax
  406174:	jge    0x406179
  406176:	fisubr WORD PTR [ebp+0x3]
  406179:	add    cl,dh
  40617b:	out    0xc2,al
  40617d:	or     bl,BYTE PTR ds:0x6af9c534
  406183:	inc    edx
  406184:	jne    0x406188
  406186:	repz imul ebp,DWORD PTR [eax],0x5d
  40618a:	in     al,0xed
  40618c:	scas   eax,DWORD PTR es:[edi]
  40618d:	aam    0x62
  40618f:	mov    WORD PTR [esi+0x16],fs
  406192:	out    dx,al
  406193:	loopne 0x406139
  406195:	inc    edi
  406196:	shl    BYTE PTR [esi+0xf],cl
  406199:	mov    ds:0x3c6a5c85,al
  40619e:	(bad)  
  40619f:	mov    DWORD PTR [ebx-0x69f81f1b],ebp
  4061a5:	mov    al,0x39
  4061a7:	dec    esi
  4061a8:	ficom  WORD PTR [edi+ecx*2+0x2f]
  4061ac:	cmc    
  4061ad:	xchg   edi,eax
  4061ae:	xchg   edx,eax
  4061af:	mov    edx,0x5b376d25
  4061b4:	mov    al,0x9a
  4061b6:	push   ds
  4061b7:	xor    eax,DWORD PTR [edx-0x3c7c58de]
  4061bd:	outs   dx,BYTE PTR ds:[esi]
  4061be:	push   ecx
  4061bf:	repz push ebx
  4061c1:	in     eax,0x4d
  4061c3:	pop    esi
  4061c4:	or     eax,0x1eafb1b
  4061c9:	sar    BYTE PTR [ebp+0x6d],1
  4061cc:	cmc    
  4061cd:	adc    esp,esp
  4061cf:	mov    dl,0x38
  4061d1:	nop
  4061d2:	imul   edi,DWORD PTR [eax+esi*1],0x2ee33fef
  4061d9:	inc    ecx
  4061da:	retf   
  4061db:	repnz adc ebx,DWORD PTR [ebx+edx*4]
  4061df:	cmp    DWORD PTR cs:[ebx+ebx*4+0x1b43dab1],0x7c
  4061e8:	pop    esi
  4061e9:	dec    edi
  4061ea:	add    DWORD PTR [ecx-0x4],0x5370ea33
  4061f1:	mov    edx,0xa4b149fa
  4061f6:	adc    al,0x64
  4061f8:	sbb    al,0x64
  4061fa:	popf   
  4061fb:	dec    ebp
  4061fc:	sti    
  4061fd:	xor    BYTE PTR [ecx+eax*4],bh
  406200:	icebp  
  406201:	dec    ebx
  406202:	sbb    al,0xb5
  406204:	rcl    DWORD PTR ds:0xdd7e6710,cl
  40620a:	enter  0xac10,0xa7
  40620e:	pop    ebp
  40620f:	xor    DWORD PTR [eax+0x2b8b737c],0xb9820d20
  406219:	sbb    al,0xdd
  40621b:	push   cs
  40621c:	rcl    bh,1
  40621e:	fs fsubr st,st(0)
  406221:	out    0x2e,al
  406223:	jp     0x4061d7
  406225:	dec    edi
  406226:	ins    BYTE PTR es:[edi],dx
  406227:	jns    0x40624c
  406229:	add    ebx,eax
  40622b:	mov    bh,0x19
  40622d:	and    al,0x14
  40622f:	push   cs
  406230:	retf   0x3562
  406233:	inc    ecx
  406234:	and    cl,ah
  406236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406237:	rcl    ecx,0xd3
  40623a:	addr16 xchg ebp,eax
  40623c:	push   0x18
  40623e:	int3   
  40623f:	push   esi
  406240:	aad    0x0
  406242:	dec    ebx
  406243:	dec    esp
  406244:	(bad)  
  406245:	xchg   esp,eax
  406246:	adc    BYTE PTR [edi],dl
  406248:	xor    eax,0x668209cf
  40624d:	les    eax,FWORD PTR [eax]
  40624f:	cs inc ebp
  406251:	mov    eax,0x4c7080cc
  406256:	inc    ecx
  406257:	loope  0x406261
  406259:	or     edx,esp
  40625b:	push   0x6d
  40625d:	ret    
  40625e:	mov    ecx,0x844557a0
  406263:	add    eax,0x3e415910
  406268:	mov    eax,ds:0x28b3499c
  40626d:	push   esi
  40626e:	out    0xe5,eax
  406270:	repnz daa 
  406272:	sti    
  406273:	jge    0x4062c5
  406275:	jmp    0x40621a
  406277:	sub    esp,DWORD PTR [ebp-0x5e]
  40627a:	push   edi
  40627b:	cmp    ah,BYTE PTR [edi-0x27575954]
  406281:	clc    
  406282:	push   ss
  406283:	pop    esi
  406284:	xor    DWORD PTR [edx-0x2c],ecx
  406287:	mov    edi,0x5eca5054
  40628c:	sub    esp,DWORD PTR [edx+0x2]
  40628f:	vorps  xmm0,xmm5,xmm7
  406294:	leave  
  406295:	das    
  406296:	rol    DWORD PTR [ecx],cl
  406298:	ret    
  406299:	ret    
  40629a:	mov    WORD PTR [ecx-0x35557fc3],es
  4062a0:	lds    ecx,FWORD PTR [edi+0x1d]
  4062a3:	cmp    DWORD PTR [edx+0x10],esi
  4062a6:	into   
  4062a7:	mov    DWORD PTR [ebx-0x4a19829e],esi
  4062ad:	call   0xdcc66aff
  4062b2:	push   ss
  4062b3:	es hlt 
  4062b5:	int    0x48
  4062b7:	call   0x64956ef1
  4062bc:	push   esp
  4062bd:	push   ebp
  4062be:	shl    BYTE PTR [edx-0x1],1
  4062c1:	mov    bl,0x2c
  4062c3:	and    dl,BYTE PTR [eax]
  4062c5:	sub    eax,0xbd15d4fd
  4062ca:	xchg   ebx,eax
  4062cb:	loopne 0x4062fc
  4062cd:	xor    BYTE PTR [ebp-0x7f],bl
  4062d0:	fild   WORD PTR [ebp-0x42e39d0f]
  4062d6:	cmp    eax,0xc7f290a9
  4062db:	sub    eax,0x46466b75
  4062e0:	mov    esp,0x23d451fe
  4062e5:	popa   
  4062e6:	and    dh,0xd4
  4062e9:	mov    WORD PTR [ecx],?
  4062eb:	mov    al,0x53
  4062ed:	lock lods eax,DWORD PTR ds:[esi]
  4062ef:	dec    edx
  4062f0:	and    edx,ecx
  4062f2:	imul   ecx,DWORD PTR [edx],0xffffffb7
  4062f5:	lea    ebp,[edi-0x739e961]
  4062fb:	cmp    ecx,DWORD PTR ds:0x82b9f080
  406301:	test   al,0x24
  406303:	out    dx,al
  406304:	lahf   
  406305:	push   0x2780a8ab
  40630a:	or     eax,0xeb3eaf2e
  40630f:	pop    esi
  406310:	xchg   edx,eax
  406311:	sbb    cl,dl
  406313:	xor    eax,0xc7014c9e
  406318:	rcr    BYTE PTR [ecx+0x7d9186b8],0xc4
  40631f:	mov    esi,0x3d546234
  406324:	outs   dx,DWORD PTR ds:[esi]
  406325:	jae    0x406390
  406327:	(bad)  
  406328:	leave  
  406329:	sar    dl,0x9c
  40632c:	out    dx,al
  40632d:	xlat   BYTE PTR ds:[ebx]
  40632e:	fdivr  QWORD PTR [ecx-0x1146100a]
  406334:	and    BYTE PTR [ecx-0x197a09d8],0x86
  40633b:	mov    cl,BYTE PTR [eax-0x69]
  40633e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40633f:	jl     0x406348
  406341:	ss jmp 0xd80:0xb648c9cf
  406349:	js     0x40634d
  40634b:	mov    BYTE PTR [edi+0x74],bl
  40634e:	(bad)  
  40634f:	(bad)  
  406351:	sti    
  406352:	push   edi
  406353:	and    eax,0x16863d21
  406358:	ret    0xff13
  40635b:	sbb    dh,BYTE PTR [esi-0x6287827]
  406361:	mov    dh,0xd3
  406363:	sbb    ah,bh
  406365:	push   ds
  406366:	shr    BYTE PTR [eax+0x1a],0xf2
  40636a:	inc    ebx
  40636b:	outs   dx,DWORD PTR ds:[esi]
  40636c:	shr    ah,1
  40636e:	mov    dh,0x31
  406370:	mov    edi,0xe2693009
  406375:	pop    ss
  406376:	iret   
  406377:	push   edx
  406378:	adc    ecx,DWORD PTR [ecx-0x6cc091d9]
  40637e:	clc    
  40637f:	sub    ch,BYTE PTR [eax+0x64aa8841]
  406385:	paddsb mm6,QWORD PTR [esp+ebx*1-0x247b97de]
  40638d:	jmp    0x6685022e
  406392:	xor    ch,BYTE PTR [edx-0x5cd1aad0]
  406398:	jmp    0x148bb92e
  40639d:	enter  0xe63e,0x6b
  4063a1:	mov    edx,0xecb0e01a
  4063a6:	lock jmp 0xea86:0xa32fd8e5
  4063ae:	ss inc ecx
  4063b0:	pop    edi
  4063b1:	fnstenv [ebx+ecx*1]
  4063b4:	pop    ss
  4063b5:	xchg   ebx,eax
  4063b6:	and    al,0xa5
  4063b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063b9:	mov    esp,0x6b9e204e
  4063be:	std    
  4063bf:	push   ss
  4063c0:	push   eax
  4063c1:	dec    edx
  4063c2:	jmp    0x406422
  4063c4:	mov    bh,0x19
  4063c6:	cmp    DWORD PTR [edi+0x61],0x1dd3b262
  4063cd:	pop    ds
  4063ce:	ss das 
  4063d0:	dec    ebx
  4063d1:	pop    ebx
  4063d2:	ja     0x4063cb
  4063d4:	fst    QWORD PTR [edi-0x8]
  4063d7:	inc    edx
  4063d8:	addr16 pop edi
  4063da:	js     0x406395
  4063dc:	loopne 0x406427
  4063de:	mov    esp,0xc03fe6e6
  4063e3:	mov    bh,BYTE PTR ds:0x570cd97b
  4063e9:	(bad)  
  4063ea:	int3   
  4063eb:	loop   0x40643f
  4063ed:	inc    esi
  4063ee:	bound  ecx,QWORD PTR [ebp+0x2e2bede4]
  4063f4:	in     eax,0x66
  4063f6:	jmp    0x980d0c67
  4063fb:	nop
  4063fc:	call   0xb5f6:0x4013f0de
  406403:	pusha  
  406404:	hlt    
  406405:	mov    dh,0xb8
  406407:	cli    
  406408:	fidiv  DWORD PTR [edx+0x6]
  40640b:	test   DWORD PTR [eax],ebx
  40640d:	lea    edi,[edx]
  40640f:	xchg   edx,eax
  406410:	push   edx
  406411:	pop    ecx
  406412:	jae    0x4063cd
  406414:	fmul   QWORD PTR gs:[edi+0x3361865b]
  40641b:	pop    es
  40641c:	pop    ebp
  40641d:	int    0x70
  40641f:	pusha  
  406420:	ret    
  406421:	stos   DWORD PTR es:[edi],eax
  406422:	mov    ds:0xcc2d208f,eax
  406427:	idiv   bh
  406429:	xor    di,WORD PTR ds:0x8b7243d1
  406431:	adc    eax,DWORD PTR [ecx-0x68a72df4]
  406437:	fcomp  QWORD PTR [ebp+0x3a]
  40643a:	sar    ah,1
  40643c:	dec    eax
  40643d:	adc    eax,0xd4797297
  406442:	mov    ebx,0x39676c92
  406447:	(bad)  ds:0x984b4ac1
  40644d:	xchg   edx,eax
  40644e:	imul   esp,DWORD PTR [ecx+0x16],0x380beddf
  406455:	push   ebp
  406456:	jnp    0x4063eb
  406458:	dec    esp
  406459:	dec    ebp
  40645a:	inc    ecx
  40645b:	inc    ebp
  40645c:	push   edx
  40645d:	adc    DWORD PTR [edi-0x6eb20fd],eax
  406463:	pushf  
  406464:	jne    0x4064be
  406466:	jo     0x4064b6
  406468:	call   0xeb961da5
  40646d:	dec    esp
  40646e:	sbb    ch,BYTE PTR [esi]
  406470:	ins    DWORD PTR es:[edi],dx
  406471:	sbb    DWORD PTR [ebx-0x1022f37a],0x49edb278
  40647b:	sbb    esi,edi
  40647d:	cmp    al,0x44
  40647f:	test   al,0x4f
  406481:	in     al,dx
  406482:	jmp    0x4064b9
  406484:	jnp    0x40649a
  406486:	repz sub esi,DWORD PTR [esi-0x20]
  40648a:	cmp    edx,ebx
  40648c:	pop    ebx
  40648d:	jns    0x40642e
  40648f:	xchg   dl,al
  406491:	push   0xf46d5ad4
  406496:	add    dh,BYTE PTR [eax+0x5b05fee5]
  40649c:	clc    
  40649d:	outs   dx,DWORD PTR ds:[esi]
  40649e:	inc    eax
  40649f:	jp     0x406425
  4064a1:	push   0xffffffb6
  4064a3:	or     dl,bl
  4064a5:	daa    
  4064a6:	push   esi
  4064a7:	aad    0xbc
  4064a9:	pop    eax
  4064aa:	pop    ebp
  4064ab:	cmp    eax,edi
  4064ad:	mov    bl,0xec
  4064af:	int3   
  4064b0:	ficom  WORD PTR [esi-0x64fb4c9f]
  4064b6:	js     0x406499
  4064b8:	in     al,0xbe
  4064ba:	call   0xbdd424fc
  4064bf:	mov    eax,ds:0x4bfc1bef
  4064c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064c5:	fstp   DWORD PTR [edx-0x761adfc8]
  4064cb:	sar    BYTE PTR [edx],1
  4064cd:	int    0x27
  4064cf:	dec    esp
  4064d0:	pop    es
  4064d1:	add    DWORD PTR [edx+0xefcc4c9],eax
  4064d7:	jp     0x4064fa
  4064d9:	mov    al,ds:0x342d6263
  4064de:	out    0x8,al
  4064e0:	bound  ecx,QWORD PTR [eax+0x74]
  4064e3:	xor    al,0x12
  4064e5:	dec    ebx
  4064e6:	in     al,0x5d
  4064e8:	jo     0x406537
  4064ea:	xchg   ebx,eax
  4064eb:	or     ecx,edx
  4064ed:	dec    edi
  4064ee:	jge    0x406474
  4064f0:	xor    DWORD PTR [ecx],eax
  4064f2:	pop    ebx
  4064f3:	popa   
  4064f4:	in     eax,dx
  4064f5:	test   eax,0xe8d16dcd
  4064fa:	and    DWORD PTR [edi+0x3d80d2ce],0x6e
  406501:	mov    ah,0x6c
  406503:	pop    ecx
  406504:	es inc edi
  406506:	fwait
  406507:	lahf   
  406508:	mov    edx,0xd6f387d7
  40650d:	jo     0x4064ee
  40650f:	in     eax,dx
  406510:	jbe    0x406505
  406512:	pop    esp
  406513:	sub    dl,BYTE PTR [edi+0x76]
  406516:	pop    ebx
  406517:	xchg   esi,eax
  406518:	push   0x77
  40651a:	inc    esi
  40651b:	cmp    BYTE PTR [ebx-0x26ddc69],dl
  406521:	dec    esp
  406522:	nop
  406523:	dec    ebx
  406524:	neg    BYTE PTR [esi+eiz*8-0xf]
  406528:	loope  0x40650a
  40652a:	dec    edx
  40652b:	fst    DWORD PTR [esi-0x3abee35e]
  406531:	pop    ss
  406532:	data16 adc BYTE PTR [esi],0x6c
  406536:	push   0x667cd9de
  40653b:	aas    
  40653c:	pushf  
  40653d:	sbb    esp,edx
  40653f:	les    edx,FWORD PTR [edx+0x1b]
  406542:	push   esp
  406543:	retf   0x827c
  406546:	push   eax
  406547:	popf   
  406548:	xor    cl,BYTE PTR [esi]
  40654a:	mov    cl,0xcd
  40654c:	inc    dx
  40654e:	sub    BYTE PTR [ebx],dl
  406550:	cmp    al,0x4
  406552:	sub    BYTE PTR [ecx+0x1],cl
  406555:	inc    esp
  406556:	adc    cl,bl
  406558:	push   eax
  406559:	inc    eax
  40655a:	hlt    
  40655b:	jl     0x4064df
  40655d:	cwde   
  40655e:	mov    eax,0x753a5a8d
  406563:	push   edx
  406564:	stos   DWORD PTR es:[edi],eax
  406565:	cld    
  406566:	cmp    DWORD PTR [ecx-0x3331cb47],edi
  40656c:	add    BYTE PTR [ebp+0x15],bl
  40656f:	out    0x64,al
  406571:	xor    esi,DWORD PTR [edx+0x404eee9b]
  406577:	mov    dl,BYTE PTR [ebx-0x80]
  40657a:	pop    ebx
  40657b:	push   ds
  40657c:	jbe    0x40652b
  40657e:	pop    ss
  40657f:	jmp    0xd646:0x7fb78311
  406586:	jmp    0x56e3:0x3b1ce041
  40658d:	aas    
  40658e:	mov    es,edi
  406590:	(bad)  
  406591:	xlat   BYTE PTR ds:[ebx]
  406592:	std    
  406593:	pop    edi
  406594:	mov    DWORD PTR [eax+0x6],esp
  406597:	dec    ebp
  406598:	dec    ebp
  406599:	fwait
  40659a:	jmp    0xb88e64b8
  40659f:	bound  edx,QWORD PTR [edi+0x66]
  4065a2:	fs mov bh,0xc2
  4065a5:	(bad)  
  4065a6:	test   al,0xd9
  4065a8:	mov    ebx,0xb37ffd6d
  4065ad:	sahf   
  4065ae:	in     eax,0xee
  4065b0:	sbb    esi,esp
  4065b2:	mov    cl,cl
  4065b4:	and    DWORD PTR [ecx+0x57],edx
  4065b7:	imul   esp,DWORD PTR [edi-0x12bd5ec7],0xffffff88
  4065be:	mov    edi,0x443c0bdb
  4065c3:	jo     0x4065e5
  4065c5:	loop   0x40657e
  4065c7:	inc    esi
  4065c8:	push   ecx
  4065c9:	fidivr DWORD PTR [ebx-0x660564f2]
  4065cf:	cmp    esp,ebp
  4065d1:	fnstenv [eax+0x117c054e]
  4065d7:	dec    esp
  4065d8:	xchg   BYTE PTR [edi],bh
  4065da:	mov    DWORD PTR [edi-0x24],ebx
  4065dd:	sub    BYTE PTR [ebx],0x10
  4065e0:	sub    BYTE PTR [edi+eax*4-0x104f76e2],bh
  4065e7:	repnz (bad) 
  4065e9:	and    DWORD PTR [edi+0x7a04c0e],ebp
  4065ef:	mov    ch,ch
  4065f1:	fst    QWORD PTR ds:0xc0e3857b
  4065f7:	cmp    al,0x58
  4065f9:	push   0x57a3b82f
  4065fe:	inc    ecx
  4065ff:	fidivr DWORD PTR [eax+0x6e]
  406602:	cld    
  406603:	push   ds
  406604:	test   al,0x1e
  406606:	adc    DWORD PTR [edi+0x7e9b216],edx
  40660c:	rcl    BYTE PTR [ebp+esi*2+0x66],cl
  406610:	xlat   BYTE PTR ds:[ebx]
  406611:	ror    DWORD PTR [eax+ebx*4],cl
  406614:	jbe    0x406655
  406616:	add    eax,0xb9578961
  40661b:	dec    ecx
  40661c:	ins    DWORD PTR es:[edi],dx
  40661d:	add    esi,edx
  40661f:	call   0x698b4db1
  406624:	sub    dl,BYTE PTR [ecx+eiz*4+0x66]
  406628:	xchg   BYTE PTR [ebx+0x63],al
  40662b:	rcr    BYTE PTR [esi+0x5e603043],1
  406631:	push   esp
  406632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406633:	push   edi
  406634:	add    BYTE PTR [ebp-0x3dd4664b],bl
  40663a:	lea    esi,[ebp+0x21ac2d1c]
  406640:	je     0x40661f
  406642:	cwde   
  406643:	push   eax
  406644:	idiv   DWORD PTR [ebx]
  406646:	and    eax,DWORD PTR [ebx-0x48]
  406649:	std    
  40664a:	cmp    BYTE PTR [ebx+esi*4+0x18560c65],bl
  406651:	pop    edx
  406652:	mov    ch,0xcb
  406654:	pop    edi
  406655:	sub    DWORD PTR [esp+ebx*8-0x4a],ecx
  406659:	cwde   
  40665a:	retf   
  40665b:	or     eax,DWORD PTR [eax-0x61fbc143]
  406661:	cwde   
  406662:	dec    eax
  406663:	sub    DWORD PTR [ebx+0x1a],0x41
  406667:	pushf  
  406668:	cmp    BYTE PTR [edx],dl
  40666a:	xor    dl,dl
  40666c:	ds (bad) 
  40666e:	mov    edx,0x4b450820
  406673:	fwait
  406674:	pushf  
  406675:	cdq    
  406676:	pop    esi
  406677:	dec    ecx
  406678:	rol    BYTE PTR [ebx+0x6baa27b0],cl
  40667e:	mov    BYTE PTR [ebp+eiz*2-0x2b],bl
  406682:	inc    ebx
  406683:	push   esi
  406684:	outs   dx,DWORD PTR ds:[esi]
  406685:	leave  
  406686:	and    ch,al
  406688:	or     al,0x5c
  40668a:	mov    dh,0x18
  40668c:	jg     0x4066f1
  40668e:	out    dx,eax
  40668f:	addr16 mov edx,fs
  406692:	or     eax,0x82eda6a7
  406697:	inc    edx
  406698:	xchg   BYTE PTR [edi],ch
  40669a:	and    eax,0x353c1b7b
  40669f:	xchg   ebp,eax
  4066a0:	and    eax,0x7a7ac7ef
  4066a5:	sbb    ah,dh
  4066a7:	dec    eax
  4066a8:	fisub  WORD PTR [ebp-0x66]
  4066ab:	jmp    0xde5a:0x9d56da88
  4066b2:	repnz push ss
  4066b4:	ret    
  4066b5:	not    BYTE PTR [esp+eax*1-0x5e]
  4066b9:	jecxz  0x4066a2
  4066bb:	add    DWORD PTR [edx-0x6ee49f8c],edx
  4066c1:	stos   DWORD PTR es:[edi],eax
  4066c2:	dec    eax
  4066c3:	call   0xf2e8fb80
  4066c8:	cs push esp
  4066ca:	push   ss
  4066cb:	enter  0x6c20,0x6c
  4066cf:	mov    esi,0x2ba4b676
  4066d4:	int3   
  4066d5:	in     al,dx
  4066d6:	and    al,0x1e
  4066d8:	popf   
  4066d9:	call   0xab6c:0x566f26d9
  4066e0:	mov    ds:0xb6dab4b7,al
  4066e5:	gs cmp eax,0x1dfb3f14
  4066eb:	sahf   
  4066ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066ed:	mov    cl,0x31
  4066ef:	add    DWORD PTR [edi-0x111bb6b],0xae75ddc1
  4066f9:	pop    ebp
  4066fa:	lahf   
  4066fb:	xor    al,0xac
  4066fd:	hlt    
  4066fe:	sub    DWORD PTR [ebx+ecx*1-0x12cd708f],0x40d8c4da
  406709:	fadd   DWORD PTR [esi+0x6]
  40670c:	pop    eax
  40670d:	push   edi
  40670e:	clc    
  40670f:	jae    0x4066fd
  406711:	std    
  406712:	xchg   ebp,eax
  406713:	dec    eax
  406714:	lods   eax,DWORD PTR ds:[esi]
  406715:	ds push dx
  406718:	add    BYTE PTR ds:0x80f72eb3,cl
  40671e:	jmp    0x91b0d58e
  406723:	ret    0x9a6d
  406726:	in     al,dx
  406727:	stos   BYTE PTR es:[edi],al
  406728:	mov    dh,0x44
  40672a:	in     eax,dx
  40672b:	pusha  
  40672c:	push   edi
  40672d:	cs pop edi
  40672f:	cmp    al,BYTE PTR [ecx-0x1b44f390]
  406735:	repnz dec edx
  406737:	mov    al,ds:0xfffd5fd4
  40673c:	xor    ebp,DWORD PTR [eax]
  40673e:	pop    ebx
  40673f:	pop    eax
  406740:	pop    ss
  406741:	arpl   WORD PTR [ebp+0x6d0b44ca],bp
  406747:	pop    esi
  406748:	ins    DWORD PTR es:[edi],dx
  406749:	out    dx,al
  40674a:	mov    dh,0x79
  40674c:	or     BYTE PTR [esi],cl
  40674e:	loop   0x406714
  406750:	add    BYTE PTR [edx-0x45],ch
  406753:	nop
  406754:	pop    esp
  406755:	(bad)  
  406756:	pop    ds
  406757:	aam    0xf
  406759:	mov    bl,0x3d
  40675b:	add    al,0x30
  40675d:	pminub mm0,mm6
  406760:	push   esi
  406761:	cli    
  406762:	ja     0x4066fa
  406764:	sub    ecx,DWORD PTR [edx+0x43]
  406767:	fsubr  DWORD PTR [edx]
  406769:	inc    esi
  40676a:	mov    bl,0x5
  40676c:	add    DWORD PTR [esi],edx
  40676e:	mov    ch,BYTE PTR [eax+0x65]
  406771:	repz and DWORD PTR [ebx+ecx*4+0x6e6d5d8],0xffffffac
  40677a:	jle    0x406710
  40677c:	clc    
  40677d:	sub    DWORD PTR [ebp-0x4b16b141],eax
  406783:	add    eax,0x5ceb9108
  406788:	stos   DWORD PTR es:[edi],eax
  406789:	cwde   
  40678a:	mov    ch,0xd8
  40678c:	fucom  st(2)
  40678e:	add    cl,BYTE PTR [bx+si+0x7273]
  406793:	popf   
  406794:	ret    0x678a
  406797:	iret   
  406798:	jp     0x40680d
  40679a:	das    
  40679b:	jo     0x40675a
  40679d:	lds    ecx,FWORD PTR [ecx]
  40679f:	jne    0x40680b
  4067a1:	add    BYTE PTR [ecx+0x249116a7],ch
  4067a7:	ret    0xbd8e
  4067aa:	jno    0x406818
  4067ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067ad:	(bad)  
  4067af:	mov    ds:0xf08b43ee,eax
  4067b4:	mov    bl,0xcd
  4067b6:	and    DWORD PTR [ebp+0x787e75f7],ecx
  4067bc:	jo     0x4067ca
  4067be:	fistp  WORD PTR [edi-0x216254f0]
  4067c4:	sub    al,0xfe
  4067c6:	xchg   esi,eax
  4067c7:	cmp    eax,0x50306f89
  4067cc:	cmp    BYTE PTR [eax+0x66d3899f],bl
  4067d2:	dec    edx
  4067d3:	rcl    DWORD PTR [ebx+0x35a92468],0x34
  4067da:	dec    dh
  4067dc:	mov    dl,BYTE PTR [eax]
  4067de:	ret    
  4067df:	ror    cl,1
  4067e1:	pop    edx
  4067e2:	loop   0x4067bc
  4067e4:	inc    edi
  4067e5:	lock shr DWORD PTR [esi],cl
  4067e8:	pop    ds
  4067e9:	cmp    DWORD PTR [esi],eax
  4067eb:	loopne 0x4067d7
  4067ed:	mov    edx,DWORD PTR [edx+0x23e6466d]
  4067f3:	xchg   edi,ebx
  4067f5:	shr    esi,cl
  4067f7:	pop    ecx
  4067f8:	or     bh,BYTE PTR [ebx+0x79523ada]
  4067fe:	in     al,dx
  4067ff:	in     eax,0xd0
  406801:	dec    ebx
  406802:	adc    eax,0xd62847cc
  406807:	jecxz  0x406882
  406809:	add    ch,BYTE PTR [ebx+0x6708731f]
  40680f:	in     eax,0x11
  406811:	mov    bl,BYTE PTR [esi-0x6c044b46]
  406817:	out    0xad,eax
  406819:	pop    ds
  40681a:	and    dl,BYTE PTR [esi-0x7b]
  40681d:	fistp  DWORD PTR [esi+0x433a1abe]
  406823:	jg     0x406864
  406825:	push   edi
  406826:	mov    ?,WORD PTR [edi+0x62bcd432]
  40682c:	out    0xc8,al
  40682e:	jno    0x406878
  406830:	sub    dl,ah
  406832:	mov    ebp,ecx
  406834:	js     0x40683c
  406836:	cmp    al,0x1e
  406838:	stos   DWORD PTR es:[edi],eax
  406839:	into   
  40683a:	mov    cl,0x8d
  40683c:	lods   eax,DWORD PTR ds:[esi]
  40683d:	xor    dh,cl
  40683f:	pop    esp
  406840:	xchg   ebx,eax
  406841:	sahf   
  406842:	add    DWORD PTR [ecx],ebx
  406844:	add    DWORD PTR [esi+0x580da9b3],ebp
  40684a:	bound  esi,QWORD PTR [edi-0x7af92466]
  406850:	pop    ecx
  406851:	push   cs
  406852:	or     eax,0x2018c901
  406857:	lds    edi,FWORD PTR [edx-0x4468852b]
  40685d:	rol    DWORD PTR [edi+edx*2-0x543c6356],cl
  406864:	inc    ebp
  406865:	jnp    0x40688d
  406867:	or     DWORD PTR [esp+0x64],eax
  40686b:	mov    al,0x28
  40686d:	sbb    ah,bl
  40686f:	inc    esi
  406870:	mov    cl,0x2a
  406872:	scas   al,BYTE PTR es:[edi]
  406873:	sbb    BYTE PTR [edx],bl
  406875:	push   ebx
  406876:	scas   eax,DWORD PTR es:[edi]
  406877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406878:	nop
  406879:	lea    ecx,[eax+0x51]
  40687c:	dec    ebp
  40687d:	ins    BYTE PTR es:[edi],dx
  40687e:	cmp    edx,ecx
  406880:	mov    bl,0x27
  406882:	mov    al,ds:0xd66c05e5
  406887:	nop
  406888:	jno    0x406871
  40688a:	ins    WORD PTR es:[edi],dx
  40688c:	sub    al,0x56
  40688e:	push   esi
  40688f:	call   0x780e:0xb93196f6
  406896:	retf   0xb021
  406899:	icebp  
  40689a:	icebp  
  40689b:	add    esi,eax
  40689d:	test   BYTE PTR [ecx+0x794ae94a],ah
  4068a3:	sub    DWORD PTR [edx+edi*8-0x2372a285],edi
  4068aa:	je     0x40688d
  4068ac:	in     eax,0x3
  4068ae:	mov    esp,0x669bf17e
  4068b3:	enter  0xc24c,0x13
  4068b7:	sub    edi,esi
  4068b9:	sub    al,0x2e
  4068bb:	repz dec edi
  4068bd:	lock pop ecx
  4068bf:	out    dx,al
  4068c0:	das    
  4068c1:	push   cs
  4068c2:	pmuludq mm4,QWORD PTR [esi+0x57]
  4068c6:	scas   al,BYTE PTR es:[edi]
  4068c7:	mov    ebx,edi
  4068c9:	cs xchg edx,eax
  4068cb:	sti    
  4068cc:	or     BYTE PTR [ecx+0x29],cl
  4068cf:	pop    edx
  4068d0:	pusha  
  4068d1:	push   0x7281e996
  4068d6:	jg     0x406948
  4068d8:	mov    ch,0x55
  4068da:	push   ds
  4068db:	sbb    BYTE PTR [ebx+0x5d],dl
  4068de:	fld    DWORD PTR [esi-0x7d27997]
  4068e4:	jno    0x40692f
  4068e6:	cmp    bh,BYTE PTR [eax+0x7f]
  4068e9:	(bad)  [ebx-0x750a6fd]
  4068ef:	ret    
  4068f0:	fs inc ebx
  4068f2:	in     eax,dx
  4068f3:	test   WORD PTR [eax+ebx*1-0x2a],sp
  4068f8:	xchg   ecx,eax
  4068f9:	jbe    0x4068d1
  4068fb:	fmul   QWORD PTR [ebx+0x46]
  4068fe:	jl     0x40688c
  406900:	imul   edi,DWORD PTR [edx-0x23],0xe7313a47
  406907:	(bad)  
  406908:	fdiv   QWORD PTR fs:[eax]
  40690b:	pop    esi
  40690c:	cdq    
  40690d:	jno    0x4068a8
  40690f:	pop    ebp
  406910:	inc    ebp
  406911:	test   BYTE PTR [edx-0x17],ch
  406914:	jmp    0x406934
  406916:	mov    al,0x9
  406918:	xor    esi,DWORD PTR [eax+0x1c]
  40691b:	xor    edi,DWORD PTR [eax-0x3b1d3a36]
  406921:	sbb    al,0x26
  406923:	lods   al,BYTE PTR ds:[esi]
  406924:	jmp    0x70a48923
  406929:	add    bh,ah
  40692b:	mov    al,ds:0x72dbd531
  406930:	enter  0x98d5,0x8e
  406934:	mov    bh,0x38
  406936:	push   edx
  406937:	pmaddwd xmm5,XMMWORD PTR [edi-0x6de2cf2b]
  40693f:	mov    esi,0x48a32833
  406944:	rcl    BYTE PTR ds:0x5d1f8de5,0xc4
  40694b:	xor    edx,esp
  40694d:	pop    edx
  40694e:	aas    
  40694f:	mov    ebx,DWORD PTR [ecx-0x6b5210ec]
  406955:	push   ebp
  406956:	in     al,dx
  406957:	add    BYTE PTR [eax],bh
  406959:	lds    eax,FWORD PTR ds:0x67c082dc
  40695f:	xor    al,0x28
  406961:	dec    edx
  406962:	imul   BYTE PTR [edi-0x6b]
  406965:	test   edi,0xee9433a2
  40696b:	push   0xde174bbc
  406970:	pop    esp
  406971:	cdq    
  406972:	xchg   esp,eax
  406973:	jb     0x406915
  406975:	pop    ebx
  406976:	or     DWORD PTR ds:0xa0e71a78,0xffffff80
  40697d:	mov    bh,0xa5
  40697f:	add    al,0x8c
  406981:	das    
  406982:	mov    ds:0xff784a31,eax
  406987:	inc    esi
  406988:	out    dx,eax
  406989:	or     esi,DWORD PTR [ebx+ebx*4+0x54]
  40698d:	cmp    BYTE PTR [eax+0x6892b79e],dl
  406993:	sub    DWORD PTR [esi],esi
  406995:	test   al,0x26
  406997:	mov    esp,0xc0be016
  40699c:	inc    esi
  40699d:	popa   
  40699e:	loop   0x406a1c
  4069a0:	sub    DWORD PTR [eax-0x5f],ebx
  4069a3:	mov    dh,0x17
  4069a5:	sbb    BYTE PTR [edi-0x178ce3c8],dh
  4069ab:	jmp    0x3f36:0xf1998349
  4069b2:	pop    ebx
  4069b3:	xor    DWORD PTR [esi+0x30],esi
  4069b6:	pop    ebp
  4069b7:	sbb    ebx,DWORD PTR [edi]
  4069b9:	ins    BYTE PTR es:[edi],dx
  4069ba:	js     0x4069c7
  4069bc:	out    0x22,al
  4069be:	daa    
  4069bf:	mov    ecx,0x2023208d
  4069c4:	sub    BYTE PTR [edi],bl
  4069c6:	xor    al,0x63
  4069c8:	jmp    0x406a1a
  4069ca:	retf   
  4069cb:	sbb    dh,bh
  4069cd:	and    BYTE PTR [edx],dl
  4069cf:	es dec ebp
  4069d1:	sar    eax,0x74
  4069d4:	mov    al,ds:0x9fd8bd69
  4069d9:	jnp    0x406961
  4069db:	imul   esp,DWORD PTR [ecx-0x79],0xffffffdb
  4069df:	retf   0xc8e4
  4069e2:	inc    ebx
  4069e3:	jnp    0x406a1c
  4069e5:	jo     0x406994
  4069e7:	out    0xa9,eax
  4069e9:	add    BYTE PTR [esi],bl
  4069eb:	in     eax,0xce
  4069ed:	pop    edi
  4069ee:	aam    0x5f
  4069f0:	xchg   DWORD PTR [ebx],esi
  4069f2:	sbb    DWORD PTR [esi+0x22],esp
  4069f5:	and    al,BYTE PTR [esi+0x4d]
  4069f8:	sub    eax,0xaaee1b85
  4069fd:	in     al,dx
  4069fe:	pop    edx
  4069ff:	scas   eax,DWORD PTR es:[edi]
  406a00:	mov    esi,0xc69a90a
  406a05:	(bad)  
  406a06:	in     eax,dx
  406a07:	lods   al,BYTE PTR ds:[esi]
  406a08:	mov    ecx,0xd1290f4f
  406a0d:	fdiv   QWORD PTR [ecx+0x29c6d910]
  406a13:	scas   eax,DWORD PTR es:[edi]
  406a14:	ffree  st(0)
  406a16:	lahf   
  406a17:	in     al,0x33
  406a19:	mov    edx,0xac7da117
  406a1e:	mov    al,0x53
  406a20:	sub    eax,0xf896135b
  406a25:	clc    
  406a26:	mov    ecx,0x9dbe6908
  406a2b:	sub    esp,DWORD PTR [esi-0x2a06c771]
  406a31:	lock sbb eax,0xaf374be6
  406a37:	inc    ebp
  406a38:	mov    eax,0x851487e8
  406a3d:	loope  0x406a12
  406a3f:	hlt    
  406a40:	mov    ebx,0xea8ef888
  406a45:	fucompp 
  406a47:	pop    esp
  406a48:	ins    BYTE PTR es:[edi],dx
  406a49:	pop    ss
  406a4a:	sub    ebx,DWORD PTR [edi+0x39ac5b96]
  406a50:	into   
  406a51:	and    bh,BYTE PTR [ebx+edx*1]
  406a54:	sbb    cl,BYTE PTR [ebp-0x2dfb358f]
  406a5a:	mov    ecx,0x261d49a7
  406a5f:	add    BYTE PTR [ebx-0x5a21d9a3],dl
  406a65:	movq   mm6,QWORD PTR [ebx-0x4a]
  406a69:	mov    ah,0xef
  406a6b:	mov    bl,0x81
  406a6d:	sbb    BYTE PTR [esi+esi*4],dh
  406a70:	adc    eax,0xc1f141db
  406a75:	add    ah,al
  406a77:	rcr    DWORD PTR [esi-0x50e1c883],1
  406a7d:	stc    
  406a7e:	lahf   
  406a7f:	pop    ecx
  406a80:	push   ebp
  406a81:	fwait
  406a82:	jns    0x406a8c
  406a84:	test   BYTE PTR [ecx-0xde4deaf],dh
  406a8a:	mov    eax,0xdb95b740
  406a8f:	int    0x14
  406a91:	imul   esi,DWORD PTR [ebp+0x11],0xcc71e3a7
  406a98:	arpl   WORD PTR [edi],cx
  406a9a:	ds retf 0x713d
  406a9e:	ins    BYTE PTR es:[edi],dx
  406a9f:	jnp    0x406a32
  406aa1:	loopne 0x406a96
  406aa3:	xchg   DWORD PTR [ecx-0x3bc882ec],edx
  406aa9:	das    
  406aaa:	inc    edx
  406aab:	dec    ebp
  406aac:	add    eax,0x78a4315
  406ab1:	jge    0x406b0c
  406ab3:	lahf   
  406ab4:	mov    eax,ds:0x250c1bc7
  406ab9:	or     ecx,ebx
  406abb:	lock std 
  406abd:	sub    dl,BYTE PTR [edi]
  406abf:	in     eax,dx
  406ac0:	lods   al,BYTE PTR ds:[esi]
  406ac1:	jp     0x406a9e
  406ac3:	pushf  
  406ac4:	ins    BYTE PTR es:[edi],dx
  406ac5:	adc    DWORD PTR [bx+di+0x156e],0xf
  406acb:	mov    ah,0xc7
  406acd:	fisubr DWORD PTR [edi-0x7c69f5ca]
  406ad3:	dec    esp
  406ad4:	xor    al,dl
  406ad6:	in     eax,0x6c
  406ad8:	add    ebp,DWORD PTR [eax]
  406ada:	xchg   ecx,eax
  406adb:	fst    st(0)
  406add:	shr    DWORD PTR [ebx],1
  406adf:	lock or DWORD PTR [edx+ebp*1-0x23001cbb],edi
  406ae7:	fsub   st(1),st
  406ae9:	repnz mov esp,0x9a1791d6
  406aef:	mov    al,cl
  406af1:	mov    ch,0xd2
  406af3:	fiadd  DWORD PTR [ebx+0x2f]
  406af6:	call   0x1041ee03
  406afb:	lods   eax,DWORD PTR ds:[esi]
  406afc:	sub    DWORD PTR [eax+0x70b631de],esp
  406b02:	inc    edx
  406b03:	xor    eax,0x4d04d7a
  406b08:	popa   
  406b09:	pusha  
  406b0a:	gs xchg ecx,eax
  406b0c:	xchg   ecx,eax
  406b0d:	mov    ebp,0xb53a7e72
  406b12:	int3   
  406b13:	fld    QWORD PTR [edx]
  406b15:	test   al,0xcd
  406b17:	pop    eax
  406b18:	test   eax,0x9c1f0bb0
  406b1d:	iret   
  406b1e:	repz aas 
  406b20:	xchg   esp,eax
  406b21:	sub    eax,0x7c7a26cc
  406b26:	hlt    
  406b27:	ins    BYTE PTR es:[edi],dx
  406b28:	int3   
  406b29:	and    DWORD PTR [esi-0x26c6ec04],ebp
  406b2f:	std    
  406b30:	mov    ecx,0x56148e79
  406b35:	aam    0x74
  406b37:	pusha  
  406b38:	sbb    al,0x15
  406b3a:	and    cl,cl
  406b3c:	retf   
  406b3d:	push   edx
  406b3e:	xchg   ebp,eax
  406b3f:	lods   al,BYTE PTR ds:[esi]
  406b40:	xchg   ebx,eax
  406b41:	jmp    0x5992675e
  406b46:	and    al,0xca
  406b48:	scas   al,BYTE PTR es:[edi]
  406b49:	pop    ecx
  406b4a:	imul   esp,DWORD PTR [ebx],0xb824c15a
  406b50:	sti    
  406b51:	popf   
  406b52:	rcl    DWORD PTR [edi-0x2c],1
  406b55:	cld    
  406b56:	lahf   
  406b57:	mov    edi,0x4c2ec4ed
  406b5c:	fistp  DWORD PTR [ecx+0x5c]
  406b5f:	fisubr DWORD PTR [esi]
  406b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b62:	mov    ds:0xcffaeb6d,eax
  406b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b68:	xor    al,ah
  406b6a:	pushf  
  406b6b:	and    edi,edx
  406b6d:	xlat   BYTE PTR ds:[ebx]
  406b6e:	push   ds
  406b6f:	hlt    
  406b70:	mov    edi,0x9dc5802e
  406b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b76:	inc    edx
  406b77:	popf   
  406b78:	outs   dx,DWORD PTR ds:[esi]
  406b79:	rcl    DWORD PTR [ecx+0x7d39fc12],cl
  406b7f:	pop    esi
  406b81:	push   ebx
  406b82:	fwait
  406b83:	ins    DWORD PTR es:[edi],dx
  406b84:	inc    ecx
  406b85:	(bad)  
  406b86:	add    cl,BYTE PTR [edi+ebp*8]
  406b89:	mov    ah,0xd
  406b8b:	fidiv  WORD PTR [eax+eax*2+0x31654896]
  406b92:	sub    BYTE PTR [ecx+0x20],bl
  406b95:	sbb    eax,0x8ec5c9c5
  406b9a:	push   esi
  406b9b:	push   0x2c
  406b9d:	mov    ah,0xa
  406b9f:	push   0xffffff97
  406ba1:	test   ah,0x70
  406ba4:	mov    DWORD PTR [ecx+0x48],esi
  406ba7:	push   es
  406ba8:	cmp    bh,BYTE PTR [esp+ebp*2+0x52ddfea0]
  406baf:	adc    ch,BYTE PTR ds:0xeefe1c9
  406bb5:	or     eax,0x1a10c871
  406bba:	inc    ebx
  406bbb:	push   ss
  406bbc:	sub    ebx,DWORD PTR [ebp-0x44]
  406bbf:	out    dx,al
  406bc0:	inc    edi
  406bc1:	dec    cx
  406bc3:	xchg   DWORD PTR [esi+0x2964186f],eax
  406bc9:	out    0xd6,al
  406bcb:	add    al,0xb2
  406bcd:	pop    ss
  406bce:	ret    0xf59e
  406bd1:	int    0x6b
  406bd3:	push   esp
  406bd4:	and    eax,0xd11471b1
  406bd9:	jg     0x406bae
  406bdb:	aaa    
  406bdc:	xchg   esp,eax
  406bdd:	add    DWORD PTR [ecx+0x1a],edx
  406be0:	test   DWORD PTR [edi],0xba9f250f
  406be6:	pushf  
  406be7:	das    
  406be8:	cdq    
  406be9:	js     0x406b81
  406beb:	sbb    DWORD PTR [edi],ebx
  406bed:	imul   esi,DWORD PTR [edx],0xffffffb0
  406bf0:	mov    eax,ds:0xf6927ee1
  406bf5:	cmp    DWORD PTR [ebp+0x5cfa2688],edi
  406bfb:	stos   DWORD PTR es:[edi],eax
  406bfc:	push   edi
  406bfd:	pushf  
  406bfe:	inc    ecx
  406bff:	(bad)  
  406c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c01:	retf   
  406c02:	and    ah,BYTE PTR ds:0x2d75b681
  406c08:	lock xchg ebp,eax
  406c0a:	push   0xffffff90
  406c0c:	leave  
  406c0d:	ror    cl,0x7b
  406c10:	(bad)  
  406c12:	repz hlt 
  406c14:	ins    DWORD PTR es:[edi],dx
  406c15:	sub    bh,BYTE PTR [edi-0x55d18bc9]
  406c1b:	dec    DWORD PTR [edi+0x6fb14d15]
  406c21:	sub    bh,ah
  406c23:	int    0xcf
  406c25:	sbb    al,0x8c
  406c27:	loope  0x406c92
  406c29:	fs mov eax,0x961bac4e
  406c2f:	adc    DWORD PTR [ebp+0x7d5a813c],edi
  406c35:	in     eax,0xad
  406c37:	xchg   esi,eax
  406c38:	sub    dl,BYTE PTR [ecx]
  406c3a:	cmp    DWORD PTR [edi-0x2080d425],eax
  406c40:	mov    cs:0x9d139c0e,al
  406c46:	pop    esi
  406c47:	(bad)  
  406c48:	ds adc eax,0x6696343b
  406c4e:	in     al,dx
  406c4f:	pop    edi
  406c50:	dec    esi
  406c51:	aam    0x5a
  406c53:	sbb    DWORD PTR [ebp-0x7f1f4f86],ecx
  406c59:	imul   edi,esi,0xffffffab
  406c5c:	dec    ebp
  406c5d:	xlat   BYTE PTR ds:[ebx]
  406c5e:	test   DWORD PTR [edi-0x3fdea760],0xf0766ef1
  406c68:	lods   eax,DWORD PTR ds:[esi]
  406c69:	mov    bh,0x9b
  406c6b:	pusha  
  406c6c:	loop   0x406c85
  406c6e:	enter  0xa95e,0x8a
  406c72:	das    
  406c73:	pop    ebp
  406c74:	mov    esp,0x534d3d8e
  406c79:	rcl    BYTE PTR [edi],1
  406c7b:	test   al,0x77
  406c7d:	xchg   esp,eax
  406c7e:	(bad)  
  406c7f:	retf   
  406c80:	cmp    eax,0x6df0bf6c
  406c85:	nop
  406c86:	lds    esi,FWORD PTR [ecx-0x230b54a9]
  406c8c:	pop    ss
  406c8d:	jns    0x406c22
  406c8f:	test   ebx,edx
  406c91:	mov    ecx,0x3455e4cf
  406c96:	or     eax,0x8d6f417a
  406c9b:	nop
  406c9c:	adc    bl,BYTE PTR [edi]
  406c9e:	dec    esp
  406c9f:	inc    edi
  406ca0:	stc    
  406ca1:	pop    ecx
  406ca2:	pop    ebx
  406ca3:	cmp    al,0xb0
  406ca5:	and    DWORD PTR [eax],edi
  406ca7:	int    0x8a
  406ca9:	jmpw   0xeedc
  406cad:	stos   DWORD PTR es:[edi],eax
  406cae:	addr16 jb 0x406c4d
  406cb1:	out    dx,eax
  406cb2:	in     al,0xc1
  406cb4:	jmp    0xb6b0:0x543e91c7
  406cbb:	fs das 
  406cbd:	je     0x406c4a
  406cbf:	mov    ch,0xef
  406cc1:	sbb    DWORD PTR [esp+esi*4+0x22a8253b],esi
  406cc8:	adc    BYTE PTR [edi+0x65cfde81],0x3f
  406ccf:	sbb    ebx,DWORD PTR [eax-0x1b]
  406cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cd3:	fs mov al,0xc0
  406cd6:	cwde   
  406cd7:	pop    esi
  406cd8:	cs jns 0x406c91
  406cdb:	jge    0x406d3e
  406cdd:	sti    
  406cde:	sbb    edi,esp
  406ce0:	inc    ebx
  406ce1:	rcl    DWORD PTR [ebx],1
  406ce3:	xchg   edx,eax
  406ce4:	inc    DWORD PTR [ecx-0x292d4180]
  406cea:	scas   eax,DWORD PTR es:[edi]
  406ceb:	fimul  WORD PTR [esi-0x2706b246]
  406cf1:	add    BYTE PTR [ebx+0x55],dh
  406cf4:	mov    bl,0x77
  406cf6:	mov    edx,0x9a9fad00
  406cfb:	push   ebp
  406cfc:	paddusb mm7,mm4
  406cff:	loopne 0x406ccd
  406d01:	ror    BYTE PTR [edi-0x352d3b28],cl
  406d07:	push   ds
  406d08:	cmp    DWORD PTR [ecx-0x28],eax
  406d0b:	addr16 push esp
  406d0d:	(bad)  
  406d10:	aam    0x7f
  406d12:	icebp  
  406d13:	fisub  WORD PTR [edx+0x49]
  406d16:	sub    eax,0xec197cc
  406d1b:	dec    edi
  406d1c:	pop    esp
  406d1d:	push   es
  406d1e:	push   edi
  406d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d20:	shr    DWORD PTR [eax+0x1ed537a],1
  406d26:	cmp    eax,0x4be3db3d
  406d2b:	push   edx
  406d2c:	loop   0x406d3e
  406d2e:	test   eax,0xf20be999
  406d33:	jae    0x406d47
  406d35:	xchg   bl,bl
  406d37:	mov    al,0xb3
  406d39:	adc    dl,BYTE PTR [ebp+0x2d]
  406d3c:	add    edx,edi
  406d3e:	dec    ebp
  406d3f:	iret   
  406d40:	nop
  406d41:	into   
  406d42:	(bad)  
  406d43:	jp     0x406cf4
  406d45:	sbb    al,0x54
  406d47:	ss iret 
  406d49:	fimul  WORD PTR [ecx]
  406d4b:	mov    ch,0x68
  406d4d:	pop    es
  406d4e:	xchg   esp,eax
  406d4f:	imul   esp,DWORD PTR [edx-0x19],0xffffff80
  406d53:	add    al,0x10
  406d55:	or     eax,0xc083e254
  406d5a:	fwait
  406d5b:	or     ch,BYTE PTR [edx]
  406d5d:	loope  0x406da6
  406d5f:	push   ebx
  406d60:	jmp    0x406d7d
  406d62:	sub    bl,al
  406d64:	add    eax,0x62
  406d67:	fstp   st(2)
  406d69:	push   eax
  406d6a:	jbe    0x406d84
  406d6c:	fisubr DWORD PTR [edx+ebp*4-0x20]
  406d70:	sub    eax,0x6344ba29
  406d75:	in     al,dx
  406d76:	dec    ecx
  406d77:	hlt    
  406d78:	xor    al,0x33
  406d7a:	xchg   esi,eax
  406d7b:	add    eax,0xf672c8a2
  406d80:	addr16 aas 
  406d82:	sbb    ebx,DWORD PTR [edx+0x3d]
  406d85:	fs popf 
  406d87:	adc    DWORD PTR [esi],ecx
  406d89:	and    BYTE PTR [edi],ch
  406d8b:	test   eax,0xf5371c40
  406d90:	or     eax,0xa312d9e5
  406d95:	das    
  406d96:	sub    eax,0xcb7fe9a2
  406d9b:	jo     0x406db3
  406d9d:	test   al,0x21
  406d9f:	ja     0x406da5
  406da1:	nop
  406da2:	ret    
  406da3:	leave  
  406da4:	out    0xa,eax
  406da6:	mov    eax,0x4d2444b2
  406dab:	and    esp,ebp
  406dad:	adc    ebp,edx
  406daf:	xchg   BYTE PTR [esi+ecx*1],ch
  406db2:	daa    
  406db3:	into   
  406db4:	dec    edx
  406db5:	jle    0x406dca
  406db7:	gs push ss
  406db9:	(bad)  
  406dba:	add    esp,DWORD PTR [edx]
  406dbc:	enter  0x501,0xe5
  406dc0:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dc2:	and    eax,0x3a7fde71
  406dc7:	jo     0x406de5
  406dc9:	shr    DWORD PTR [edi],1
  406dcb:	xchg   DWORD PTR [ebx+0x73cd2389],ecx
  406dd1:	mov    ecx,0x328bf199
  406dd6:	sub    al,0xbf
  406dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd9:	cmp    ecx,DWORD PTR [edi+0x33b4d407]
  406ddf:	icebp  
  406de0:	sbb    DWORD PTR [ecx+0xcaf6ed4],esi
  406de6:	sar    DWORD PTR [esi],cl
  406de8:	pop    edx
  406de9:	in     al,dx
  406dea:	adc    BYTE PTR [esi-0x20],bh
  406ded:	lods   al,BYTE PTR ds:[esi]
  406dee:	inc    edi
  406def:	loopne 0x406e1c
  406df1:	or     eax,0x60c53953
  406df6:	and    esp,esi
  406df8:	sar    ah,0xd5
  406dfb:	(bad)  
  406dfc:	adc    al,0xd7
  406dfe:	dec    ebp
  406dff:	imul   esp,ebx,0x198b8269
  406e05:	frstor [ebx]
  406e07:	gs push edi
  406e09:	lods   eax,DWORD PTR ds:[esi]
  406e0a:	mov    cl,0x64
  406e0c:	adc    ch,BYTE PTR [ecx+ebp*2]
  406e0f:	dec    edi
  406e10:	shl    DWORD PTR [edx+0x6ac7db6f],0x36
  406e17:	mov    edi,0xe659f5a8
  406e1c:	bound  ecx,QWORD PTR [edx]
  406e1e:	mov    ch,BYTE PTR [esi+0x69]
  406e21:	jp     0x406dac
  406e23:	sub    DWORD PTR [eax],ebp
  406e25:	fdivr  st(0),st
  406e27:	mov    esp,0x2f22f95a
  406e2c:	mov    dh,BYTE PTR [ebp+0x28]
  406e2f:	or     BYTE PTR [edx],0xf
  406e32:	into   
  406e33:	sahf   
  406e34:	dec    eax
  406e35:	pop    esi
  406e36:	rcl    BYTE PTR [ebx+ebx*4],1
  406e39:	mov    edi,0xfd7caefa
  406e3e:	cmp    BYTE PTR [edx],ch
  406e40:	das    
  406e41:	pop    esp
  406e42:	stos   BYTE PTR es:[edi],al
  406e43:	mov    edx,0x8d92c36a
  406e48:	data16 scas al,BYTE PTR es:[edi]
  406e4a:	sbb    dl,ch
  406e4c:	arpl   WORD PTR ds:0x76d017f,bp
  406e52:	(bad)  
  406e53:	xor    al,0x8
  406e55:	(bad)
  406e5a:	mov    eax,ds:0xd4e14d73
  406e5f:	test   edi,0x6801029b
  406e65:	loop   0x406eb7
  406e67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e68:	test   al,0xcc
  406e6a:	add    DWORD PTR [ebx],ecx
  406e6c:	fld    TBYTE PTR [eax+0x6f237347]
  406e72:	pushf  
  406e73:	inc    ecx
  406e74:	imul   ecx,ecx,0xffffffda
  406e77:	sbb    bh,BYTE PTR [edx+0x6e]
  406e7a:	and    ah,BYTE PTR [ecx+ebx*2]
  406e7d:	std    
  406e7e:	push   0x456ed79f
  406e83:	inc    esi
  406e84:	push   es
  406e85:	lods   eax,DWORD PTR ds:[esi]
  406e86:	xchg   esi,eax
  406e87:	xor    al,0x14
  406e89:	stos   BYTE PTR es:[edi],al
  406e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e8b:	mov    edi,0x5ecef1b5
  406e90:	fsub   QWORD PTR [ebx]
  406e92:	mov    DWORD PTR [ebx-0x7d],edx
  406e95:	nop
  406e96:	sub    bh,BYTE PTR ds:[ecx]
  406e99:	sub    DWORD PTR [edi-0x10],esp
  406e9c:	xchg   dh,cl
  406e9e:	fwait
  406e9f:	jno    0x406e9e
  406ea1:	jb     0x406eab
  406ea3:	retf   0xac9d
  406ea6:	add    DWORD PTR [ebx-0x294d348],esp
  406eac:	loope  0x406eff
  406eae:	outs   dx,DWORD PTR ds:[esi]
  406eaf:	hlt    
  406eb0:	jnp    0x406e7e
  406eb2:	push   esp
  406eb3:	sbb    al,0xb9
  406eb5:	push   ecx
  406eb6:	xor    al,0x3e
  406eb8:	add    eax,0x709fc2c6
  406ebd:	out    0xcc,al
  406ebf:	jae    0x406e65
  406ec1:	ret    0x830a
  406ec4:	dec    esi
  406ec5:	fist   WORD PTR [esi]
  406ec7:	and    cl,0x7c
  406eca:	shr    DWORD PTR [ebp-0x4e],0x58
  406ece:	shl    DWORD PTR [ebp+edx*8-0x3f],0xd4
  406ed3:	mov    edx,0x7b272f54
  406ed8:	outs   dx,BYTE PTR ds:[esi]
  406ed9:	nop
  406eda:	sar    eax,1
  406edc:	sbb    al,BYTE PTR [edi-0x36]
  406edf:	jb     0x406ea4
  406ee1:	ret    0x95cb
  406ee4:	jp     0x406ecc
  406ee6:	mov    ch,0x70
  406ee8:	imul   esi,DWORD PTR [edx],0x14
  406eeb:	cli    
  406eec:	add    BYTE PTR [edi-0x65],dl
  406eef:	das    
  406ef0:	(bad)  
  406ef1:	sbb    ebx,esp
  406ef3:	(bad)  
  406ef4:	fs or  esi,ebp
  406ef7:	adc    eax,0x5
  406efa:	arpl   dx,dx
  406efc:	lea    esi,[edi]
  406efe:	aam    0x83
  406f00:	(bad)  
  406f01:	jno    0x406f2b
  406f03:	push   edx
  406f04:	add    eax,0xa7b2abcb
  406f09:	and    eax,0x647840d2
  406f0e:	out    0xe7,eax
  406f10:	inc    esi
  406f11:	test   al,0x13
  406f13:	in     eax,dx
  406f14:	adc    al,0xb0
  406f16:	jne    0x406f0b
  406f18:	mov    esp,0x265c0c44
  406f1d:	mov    WORD PTR [eax],cs
  406f1f:	lods   al,BYTE PTR ds:[esi]
  406f20:	retf   0x2b6d
  406f23:	and    BYTE PTR [eax],bh
  406f25:	mov    bl,0xfe
  406f27:	fdiv   QWORD PTR [edi*2+0x62737157]
  406f2e:	lods   al,BYTE PTR ds:[esi]
  406f2f:	dec    ebx
  406f30:	push   0x1f
  406f32:	rol    DWORD PTR [esp+ecx*8-0x1a],0x8a
  406f37:	(bad)  
  406f38:	mov    eax,ds:0x9214b9ee
  406f3d:	fisub  DWORD PTR [ebp-0x26]
  406f40:	xchg   ecx,eax
  406f41:	js     0x406fa1
  406f43:	sub    esp,eax
  406f45:	in     al,0x67
  406f47:	adc    al,0x4
  406f49:	cld    
  406f4a:	pop    ebp
  406f4b:	add    BYTE PTR [esp+edi*8],cl
  406f4e:	mov    edi,0xdf4dcab5
  406f53:	pop    ecx
  406f54:	mov    ch,0x19
  406f56:	push   edx
  406f57:	aam    0xbd
  406f59:	in     al,0x13
  406f5b:	inc    edx
  406f5c:	cmp    esp,DWORD PTR [ebp+0x4e]
  406f5f:	and    al,0xc5
  406f61:	popf   
  406f62:	xchg   ebp,eax
  406f63:	inc    ecx
  406f64:	test   eax,0xacae117b
  406f69:	aaa    
  406f6a:	pop    esi
  406f6b:	jp     0x406f0e
  406f6d:	xor    eax,0x73b8a9b3
  406f72:	rcr    ah,0x7c
  406f75:	sub    edi,DWORD PTR [ebp+0x46]
  406f78:	cmp    DWORD PTR [eax+0x5d],0xffffff98
  406f7c:	mov    eax,0x8a75ad55
  406f81:	or     edx,DWORD PTR [edx+0x4e]
  406f84:	or     eax,DWORD PTR ds:0xb3199bac
  406f8a:	jbe    0x406fda
  406f8c:	test   BYTE PTR [ebx+ecx*8-0x1b],dh
  406f90:	ins    BYTE PTR es:[edi],dx
  406f91:	outs   dx,BYTE PTR ds:[esi]
  406f92:	mov    ebx,0xb19898e5
  406f97:	and    DWORD PTR [ebx-0x7a],eax
  406f9a:	cs ja  0x406fca
  406f9d:	lods   al,BYTE PTR ds:[esi]
  406f9e:	adc    al,BYTE PTR [edi-0x5e8c480f]
  406fa4:	lods   al,BYTE PTR ds:[esi]
  406fa5:	test   eax,0x8a08ac3f
  406faa:	repnz scas eax,DWORD PTR es:[edi]
  406fac:	mov    esp,0x23964667
  406fb1:	bound  ax,DWORD PTR [esi]
  406fb4:	fsub   DWORD PTR ds:0xb90a3891
  406fba:	add    ebp,DWORD PTR [ebx+0x3cbc4e10]
  406fc0:	call   0xd51d:0xd431b561
  406fc7:	xchg   esp,eax
  406fc8:	xchg   eax,esi
  406fca:	int    0x9d
  406fcc:	inc    ebx
  406fcd:	push   es
  406fce:	xchg   edi,ebx
  406fd0:	pop    ecx
  406fd1:	addr16 ret 
  406fd3:	scas   eax,DWORD PTR es:[edi]
  406fd4:	and    edi,ecx
  406fd6:	push   0x1b
  406fd8:	nop
  406fd9:	sbb    al,0x85
  406fdb:	adc    DWORD PTR [ebp+0x6774b6f8],ecx
  406fe1:	add    esi,DWORD PTR [edi+0x23883ab1]
  406fe7:	push   esi
  406fe8:	stos   DWORD PTR es:[edi],eax
  406fe9:	in     eax,dx
  406fea:	or     eax,0x41c0a822
  406fef:	xchg   edx,eax
  406ff0:	dec    edi
  406ff1:	stos   BYTE PTR es:[edi],al
  406ff2:	leave  
  406ff3:	int    0xff
  406ff5:	xchg   BYTE PTR [ecx-0x3c],ah
  406ff8:	repnz icebp 
  406ffa:	mov    dl,BYTE PTR [esi]
  406ffc:	call   0x66229f6b
  407001:	add    edx,edi
  407003:	sub    al,0x5f
  407005:	fwait
  407006:	mov    esp,0xc736690
  40700b:	lock jbe 0x406f8f
  40700e:	clc    
  40700f:	adc    bh,BYTE PTR [esi]
  407011:	sub    DWORD PTR [eax+0xb],edi
  407014:	and    al,0xbf
  407016:	jmp    0xd247:0x1fcefdc6
  40701d:	xlat   BYTE PTR ds:[ebx]
  40701e:	cmp    DWORD PTR [edi+0x2abf148f],ebx
  407024:	mov    ebx,0xce3a79fe
  407029:	jbe    0x406fc2
  40702b:	pop    ss
  40702c:	cmp    al,0x6
  40702e:	mov    ds:0x4cf2535b,al
  407033:	mov    ch,0xfb
  407035:	xor    al,0x2c
  407037:	mov    ebp,0xc1c9b85a
  40703c:	or     DWORD PTR [eax+0x39c0bf8],esi
  407042:	aad    0x17
  407044:	es inc edi
  407046:	and    DWORD PTR [edi-0x261c12ca],esp
  40704c:	xor    eax,0x95174aee
  407051:	lods   al,BYTE PTR ds:[esi]
  407052:	hlt    
  407053:	into   
  407054:	mov    cl,0x4e
  407056:	mov    eax,0x88f1ad43
  40705b:	test   ah,0x2d
  40705e:	sti    
  40705f:	out    dx,al
  407060:	icebp  
  407061:	jne    0x407059
  407063:	pusha  
  407064:	jno    0x407015
  407066:	jle    0x407005
  407068:	out    dx,al
  407069:	rcl    edx,1
  40706b:	jne    0x4070cb
  40706d:	das    
  40706e:	(bad)  [eax+0x22]
  407071:	cs inc edx
  407073:	in     eax,dx
  407074:	imul   eax,DWORD PTR [ebx+0x21],0xffffffee
  407078:	xchg   ebp,eax
  407079:	jmp    0xf881516
  40707e:	cmp    dh,BYTE PTR [ecx]
  407080:	arpl   di,ax
  407082:	fstp   DWORD PTR [ecx]
  407084:	push   cs
  407085:	and    eax,0x60201836
  40708a:	dec    edx
  40708b:	lods   al,BYTE PTR ds:[esi]
  40708c:	add    esp,DWORD PTR [eax]
  40708e:	das    
  40708f:	dec    eax
  407090:	nop
  407091:	test   DWORD PTR [eax],eax
  407093:	imul   edi,DWORD PTR [ebp-0x6d494bc4],0x7ffcd0d0
  40709d:	jl     0x4070ff
  40709f:	dec    ebx
  4070a0:	push   cs
  4070a1:	(bad)  [ecx]
  4070a3:	and    BYTE PTR [edx+0x76],0x99
  4070a7:	jl     0x407064
  4070a9:	add    DWORD PTR [esi],edx
  4070ab:	sbb    eax,DWORD PTR [edx+0x60b094a0]
  4070b1:	adc    al,0x2f
  4070b3:	jne    0x4070b4
  4070b5:	das    
  4070b6:	ja     0x407126
  4070b8:	xchg   ecx,eax
  4070b9:	adc    BYTE PTR [ebx],dl
  4070bb:	cld    
  4070bc:	push   esi
  4070bd:	xchg   edi,eax
  4070be:	or     ecx,DWORD PTR [ebx+0x10]
  4070c1:	jl     0x4070b1
  4070c3:	sub    BYTE PTR [eax*2+0x4bea1992],0xb3
  4070cb:	fimul  WORD PTR [esi]
  4070cd:	cli    
  4070ce:	ja     0x4070de
  4070d0:	add    BYTE PTR [eax],al
  4070d2:	mov    bl,0x75
  4070d4:	push   ecx
  4070d5:	scas   al,BYTE PTR es:[edi]
  4070d6:	(bad)  
  4070d7:	call   FWORD PTR [ecx+0x61b26f2a]
  4070dd:	push   cs
  4070de:	int3   
  4070df:	imul   ebx,DWORD PTR [ebp+0x562c7ef3],0xc
  4070e6:	or     dl,al
  4070e8:	(bad)  
  4070e9:	jnp    0x407146
  4070eb:	loop   0x40709f
  4070ed:	popf   
  4070ee:	mov    ah,0x12
  4070f0:	mov    ebp,0x59b50761
  4070f5:	fistp  QWORD PTR [ebx-0x13]
  4070f8:	cwde   
  4070f9:	mov    dh,0x22
  4070fb:	jg     0x4070ae
  4070fd:	ror    eax,cl
  4070ff:	cmc    
  407100:	(bad)  
  407101:	fdiv   st(7),st
  407103:	fisttp DWORD PTR [eax]
  407105:	out    0xf1,eax
  407107:	cld    
  407108:	sub    eax,0x950aa6a0
  40710d:	mov    edx,0xbe03784c
  407112:	loope  0x4070d4
  407114:	fnstenv [ebx+0xeb959c1]
  40711a:	jbe    0x407174
  40711c:	out    dx,al
  40711d:	ret    
  40711e:	nop
  40711f:	cmp    al,0x4b
  407121:	xor    BYTE PTR [ebx-0x7f6024c2],ch
  407127:	fwait
  407128:	mov    ds:0xc977231f,eax
  40712d:	es in  eax,0xbc
  407130:	movlhps xmm6,xmm5
  407133:	neg    DWORD PTR [eax-0x36]
  407136:	pop    ecx
  407137:	fbld   TBYTE PTR [ebp+eax*4-0x73dd94de]
  40713e:	push   esi
  40713f:	adc    edx,DWORD PTR [ebx-0x3c]
  407142:	pop    ebp
  407143:	cmp    edx,DWORD PTR [ecx-0x4c]
  407146:	push   ebp
  407147:	xchg   ebx,eax
  407148:	icebp  
  407149:	sbb    esp,DWORD PTR [esi+edx*4-0x42272f2]
  407150:	jl     0x407149
  407152:	pop    esp
  407153:	lock lods al,BYTE PTR ds:[esi]
  407155:	pop    ebx
  407156:	add    DWORD PTR [esi-0x2c983f54],edx
  40715c:	dec    esi
  40715d:	sub    DWORD PTR [edx+esi*1],0x39746e50
  407164:	je     0x407163
  407166:	cmp    DWORD PTR ds:[ebp+0x3d],ecx
  40716a:	test   DWORD PTR [edi+ebx*8+0x1a],eax
  40716e:	(bad)  
  40716f:	cs cs je 0x4070f6
  407173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407174:	jmp    0x3022:0xad77ecbf
  40717b:	aam    0x52
  40717d:	push   esi
  40717e:	(bad)  [ecx+0x7a323b7c]
  407184:	mov    esp,0x552eb8ec
  407189:	aam    0xcd
  40718b:	mov    cl,0xa
  40718d:	mov    dh,dl
  40718f:	mov    dh,0xfe
  407191:	scas   al,BYTE PTR es:[edi]
  407192:	je     0x40720a
  407194:	and    al,0x84
  407196:	clc    
  407197:	inc    edi
  407198:	push   edi
  407199:	mov    eax,0xed0039dd
  40719e:	sahf   
  40719f:	test   ebx,ebp
  4071a1:	ficomp DWORD PTR [edi]
  4071a3:	lea    edi,[eax+ecx*2+0x3]
  4071a7:	loop   0x407209
  4071a9:	loop   0x4071ca
  4071ab:	mov    ecx,0xb9ab94c9
  4071b0:	sbb    BYTE PTR [ecx+0x21983603],bl
  4071b6:	enter  0x5c41,0xa9
  4071ba:	jo     0x407164
  4071bc:	pop    ebx
  4071bd:	jae    0x407143
  4071bf:	push   cs
  4071c0:	mov    ds:0x5b08846c,eax
  4071c5:	adc    al,0x3
  4071c7:	jbe    0x4071c6
  4071c9:	in     eax,0x1b
  4071cb:	jb     0x4071e0
  4071cd:	fsub   QWORD PTR [edx]
  4071cf:	test   al,0x5f
  4071d1:	mov    bl,BYTE PTR [ebx+0x63]
  4071d4:	xchg   BYTE PTR [ebp-0x7f],al
  4071d7:	lea    ebx,[edi+0x6d51d4fd]
  4071dd:	scas   eax,DWORD PTR es:[edi]
  4071de:	cli    
  4071df:	mov    al,ds:0xdb2a1656
  4071e4:	mov    ebp,0xdde7d1ae
  4071e9:	jecxz  0x40725e
  4071eb:	pushf  
  4071ec:	shl    bh,0xd8
  4071ef:	mov    edx,0xc36ea02b
  4071f4:	(bad)  
  4071f5:	mov    BYTE PTR [eax],dh
  4071f7:	or     edx,DWORD PTR [edx+0x1d]
  4071fa:	pusha  
  4071fb:	or     eax,0x69c20b08
  407200:	fwait
  407201:	xchg   edi,eax
  407202:	repnz dec esp
  407204:	add    DWORD PTR [ecx+ecx*2+0x27],eax
  407208:	data16 ror bh,cl
  40720b:	in     eax,0xe7
  40720d:	dec    ebp
  40720e:	and    al,0xe8
  407210:	or     DWORD PTR [ecx-0x3c],esi
  407213:	push   esp
  407214:	xchg   esi,eax
  407215:	add    al,0xcf
  407217:	pop    eax
  407218:	add    DWORD PTR [esi+0x66416a81],0xffffffc1
  40721f:	jbe    0x40729d
  407221:	lock iret 
  407223:	pop    edx
  407224:	xchg   edx,eax
  407225:	mov    eax,0x7b51f49
  40722a:	fdivr  QWORD PTR [esi+eiz*2-0x6693bceb]
  407231:	mov    DWORD PTR [ecx+edi*1-0x63],ecx
  407235:	loope  0x407239
  407237:	push   esi
  407238:	fild   QWORD PTR [ebp+0x575a0692]
  40723e:	sub    BYTE PTR [eax+ebx*4-0x8],cl
  407242:	(bad)  
  407243:	adc    al,0x3a
  407245:	call   0xfe7e20f1
  40724a:	imul   esi,DWORD PTR [ebx+0xda57012],0x3263c430
  407254:	mov    dl,0xef
  407256:	int    0xc8
  407258:	jbe    0x407229
  40725a:	or     al,BYTE PTR [ecx+0x78]
  40725d:	test   al,0x62
  40725f:	and    al,ch
  407261:	daa    
  407262:	push   ebx
  407263:	stos   BYTE PTR es:[edi],al
  407264:	add    edx,ebp
  407266:	jae    0x4072b6
  407268:	cmp    ecx,DWORD PTR [edx-0x75]
  40726b:	fwait
  40726c:	pop    esi
  40726d:	out    0x74,al
  40726f:	aaa    
  407270:	out    0x92,al
  407272:	xlat   BYTE PTR ds:[ebx]
  407273:	ror    DWORD PTR [ebp-0x1c],0x7
  407277:	cs dec esi
  407279:	xchg   esp,eax
  40727a:	mov    ebx,0x75851afb
  40727f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407280:	jp     0x4072cf
  407282:	sar    BYTE PTR [edi-0x15],0x7
  407286:	and    BYTE PTR [eax-0x32ea3db1],bl
  40728c:	rcr    edx,1
  40728e:	jns    0x40729f
  407290:	data16 (bad) 
  407293:	inc    esp
  407294:	imul   ecx,DWORD PTR [eax-0x46],0x1ebff712
  40729b:	scas   al,BYTE PTR es:[edi]
  40729c:	mov    esp,0x12e2ee28
  4072a1:	inc    eax
  4072a2:	outs   dx,BYTE PTR ds:[esi]
  4072a3:	pop    ebx
  4072a4:	jae    0x407272
  4072a6:	pop    ss
  4072a7:	cdq    
  4072a8:	push   ebp
  4072a9:	jle    0x407233
  4072ab:	cmp    DWORD PTR [edx-0x1b],ebx
  4072ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072af:	inc    DWORD PTR [edi+0x158bccc0]
  4072b5:	shr    esp,cl
  4072b7:	bound  ebx,QWORD PTR [edi]
  4072b9:	xchg   esi,eax
  4072ba:	in     eax,dx
  4072bb:	or     BYTE PTR [esi],bl
  4072bd:	neg    BYTE PTR [ebx-0x556537ed]
  4072c3:	mov    ch,0x99
  4072c5:	test   al,0xfe
  4072c7:	push   cs
  4072c8:	xor    BYTE PTR [ecx+0x66a7d03f],cl
  4072ce:	push   edi
  4072cf:	stos   DWORD PTR es:[edi],eax
  4072d0:	ror    edx,cl
  4072d2:	outs   dx,DWORD PTR ds:[esi]
  4072d3:	or     bl,bh
  4072d5:	jmp    0x1a4a1c18
  4072da:	clc    
  4072db:	fimul  WORD PTR [eax+eiz*4-0x3bde3bca]
  4072e2:	mov    ds:0x93abba4c,al
  4072e7:	pop    es
  4072e8:	shr    BYTE PTR [ecx+0x64],1
  4072eb:	mov    bl,0x48
  4072ed:	xchg   ebx,eax
  4072ee:	ja     0x40733d
  4072f0:	in     eax,0x7e
  4072f2:	jb     0x407303
  4072f4:	mov    WORD PTR [ecx-0x10],ds
  4072f7:	rcl    BYTE PTR [edi+0x10],cl
  4072fa:	iret   
  4072fb:	aad    0xe
  4072fd:	call   0x68cf357f
  407302:	int3   
  407303:	retf   
  407304:	dec    esp
  407305:	mov    al,0x64
  407307:	cmp    bl,ah
  407309:	dec    ebp
  40730a:	xchg   DWORD PTR [ebx+0xb],ecx
  40730d:	bound  ebx,QWORD PTR [esi]
  40730f:	dec    edx
  407310:	iret   
  407311:	or     eax,edx
  407313:	or     eax,0xc705d8df
  407318:	je     0x40731a
  40731a:	xchg   BYTE PTR [ebp+0x5890e817],cl
  407320:	iret   
  407321:	adc    BYTE PTR [edx-0x467a489a],0xfa
  407328:	jae    0x407318
  40732a:	(bad)  
  40732b:	ds fcmove st,st(6)
  40732e:	push   cs
  40732f:	rol    BYTE PTR [esi],0x6c
  407332:	cld    
  407333:	lds    ecx,FWORD PTR fs:[esi+0x5241a6a0]
  40733a:	inc    ebx
  40733b:	add    cl,BYTE PTR [edx-0x5f]
  40733e:	nop
  40733f:	add    BYTE PTR [ecx],bl
  407341:	pop    esi
  407342:	mov    ecx,DWORD PTR [esi-0x2bd276ae]
  407348:	add    BYTE PTR [ecx*2-0x32fc0d7e],0x47
  407350:	int3   
  407351:	sub    esi,DWORD PTR [eax]
  407353:	mov    BYTE PTR [esi],bh
  407355:	xchg   esp,eax
  407356:	mov    dh,0x3a
  407358:	sbb    al,0xaa
  40735a:	mov    ebp,0xcf06a77e
  40735f:	arpl   WORD PTR [edi-0x74],sp
  407362:	sahf   
  407363:	test   BYTE PTR [ebp+edi*4+0x6952eff2],cl
  40736a:	sub    DWORD PTR [eax+0x5f17e699],edi
  407370:	or     eax,0x413db5f9
  407375:	jmp    0xccc97053
  40737a:	mov    dh,0x80
  40737c:	fmul   st,st(4)
  40737e:	out    dx,eax
  40737f:	rcr    edx,cl
  407381:	dec    ebp
  407382:	mov    ch,0xa7
  407384:	(bad)  
  407385:	ja     0x407398
  407387:	adc    DWORD PTR [ebp+0x6edc03b5],ebx
  40738d:	xor    al,dh
  40738f:	pop    ebp
  407390:	add    BYTE PTR [edi],dh
  407392:	mov    ecx,0x8b0e6efc
  407397:	call   0xdf71:0x46f30743
  40739e:	and    eax,0xafda3c65
  4073a3:	mov    cl,0xcc
  4073a5:	push   cs
  4073a6:	push   0x5a4750f0
  4073ab:	inc    esi
  4073ac:	inc    ebx
  4073ad:	mov    bp,0x75b1
  4073b1:	sub    esp,DWORD PTR [ebx]
  4073b3:	sub    BYTE PTR [eax+ebp*8+0x9],bl
  4073b7:	hlt    
  4073b8:	aad    0x49
  4073ba:	sbb    BYTE PTR [ecx+0x4e],0xe1
  4073be:	add    ah,BYTE PTR [ebx-0x70]
  4073c1:	and    eax,0xa09f1db2
  4073c6:	mov    ebx,0xb1a19fe
  4073cb:	mov    dl,0xf1
  4073cd:	mov    edi,0xecee3484
  4073d2:	imul   edx,DWORD PTR [eax-0x39],0x8fd01346
  4073d9:	out    dx,eax
  4073da:	loop   0x4073a4
  4073dc:	(bad)  
  4073dd:	fcomp  st(7)
  4073df:	mov    ebx,0x83ee48f0
  4073e4:	ins    BYTE PTR es:[edi],dx
  4073e5:	(bad)  
  4073e6:	fld    DWORD PTR [edx+0xffeba7f]
  4073ec:	jno    0x407382
  4073ee:	(bad)
  4073f2:	pusha  
  4073f3:	mov    eax,0xe095afc9
  4073f8:	pop    eax
  4073f9:	push   ebp
  4073fa:	daa    
  4073fb:	inc    ecx
  4073fc:	outs   dx,DWORD PTR ds:[esi]
  4073fd:	fiadd  DWORD PTR [ebp+0x2188e003]
  407403:	stos   BYTE PTR es:[edi],al
  407404:	sar    DWORD PTR ds:0x82628683,1
  40740a:	jne    0x4073c6
  40740c:	data16 loopne 0x407458
  40740f:	or     BYTE PTR [esi-0x780252af],0x62
  407416:	test   eax,0x4c6f1e7d
  40741b:	push   esp
  40741c:	iret   
  40741d:	xor    DWORD PTR [ecx-0x167fa32b],0x8fbba43e
  407427:	fimul  DWORD PTR [eax]
  407429:	scas   eax,DWORD PTR es:[edi]
  40742a:	rcl    DWORD PTR [eax],0xb5
  40742d:	mov    WORD PTR ds:0x247c212b,ss
  407433:	jb     0x40745c
  407435:	mov    eax,ds:0xbd480cb2
  40743a:	ds jecxz 0x407460
  40743d:	push   cs
  40743e:	mov    dl,0xe7
  407440:	adc    edi,DWORD PTR [ebx+0xf]
  407443:	mov    esp,ebp
  407445:	jae    0x4073f6
  407447:	adc    al,0x77
  407449:	jmp    0x40745f
  40744b:	jns    0x40749a
  40744d:	or     bl,BYTE PTR ds:0xdb066f2a
  407453:	xchg   esi,eax
  407454:	inc    ebp
  407455:	hlt    
  407456:	mov    eax,ds:0x8dad5e74
  40745b:	(bad)  [esi+0x5e377d57]
  407461:	xchg   ebx,eax
  407462:	mov    DWORD PTR [esi],ebx
  407464:	jo     0x4073f1
  407466:	out    dx,al
  407467:	outs   dx,DWORD PTR ds:[esi]
  407468:	imul   esp,ebx,0xffffff85
  40746b:	push   ebx
  40746c:	out    0x42,al
  40746e:	loope  0x4074e8
  407470:	xor    ch,bh
  407472:	mov    esi,DWORD PTR [ecx+0x70beed49]
  407478:	push   0xffffff92
  40747a:	cmp    eax,0xea3fd171
  40747f:	sti    
  407480:	scas   eax,DWORD PTR es:[edi]
  407481:	dec    edi
  407482:	cmc    
  407483:	sub    cl,0x5c
  407486:	test   BYTE PTR [ecx+eiz*2+0x30e27b90],dl
  40748d:	pop    ebp
  40748e:	jns    0x40743b
  407490:	in     al,dx
  407491:	jle    0x4074f0
  407493:	arpl   WORD PTR [ebp-0x56c93af1],di
  407499:	ficomp WORD PTR [esi-0x1b65d543]
  40749f:	cmp    eax,0xbaaca5dd
  4074a4:	imul   eax,edx,0xbd073d8
  4074aa:	call   0xb047:0xcf819ed9
  4074b1:	pop    ebp
  4074b2:	aam    0xd9
  4074b4:	mov    DWORD PTR [ebp-0x2de690d],edx
  4074ba:	daa    
  4074bb:	mov    ch,0xd9
  4074bd:	or     al,0x71
  4074bf:	scas   al,BYTE PTR es:[edi]
  4074c0:	add    DWORD PTR [ecx+0x2d56e0f2],esi
  4074c6:	inc    esi
  4074c7:	xchg   ecx,eax
  4074c8:	mov    BYTE PTR ds:0xc6d46213,dl
  4074ce:	pop    esi
  4074cf:	dec    edx
  4074d0:	mov    bl,0xee
  4074d2:	dec    eax
  4074d3:	xor    al,0x6b
  4074d5:	outs   dx,DWORD PTR ds:[esi]
  4074d6:	sub    DWORD PTR [edi-0x50],esp
  4074d9:	cdq    
  4074da:	jbe    0x407493
  4074dc:	adc    eax,DWORD PTR [ecx-0x19]
  4074df:	mov    ch,ah
  4074e1:	or     DWORD PTR [ebx-0xfd1b7aa],edi
  4074e7:	mov    ecx,0x723814a8
  4074ec:	nop
  4074ed:	mov    ch,0x1f
  4074ef:	sub    esi,DWORD PTR [edx]
  4074f1:	push   ds
  4074f2:	outs   dx,DWORD PTR ds:[esi]
  4074f3:	aam    0x6a
  4074f5:	jne    0x407501
  4074f7:	(bad)  [esi+0x415a5d5c]
  4074fd:	cmp    BYTE PTR [esi],al
  4074ff:	bound  ebx,QWORD PTR [edi-0x39]
  407502:	add    al,0x26
  407504:	(bad)  
  407505:	xor    BYTE PTR [ebx-0x77],bl
  407508:	test   BYTE PTR [ebp+0x900252a],dh
  40750e:	imul   esp,DWORD PTR [eax+edx*8],0xe
  407512:	mov    bl,0x99
  407514:	mov    bh,0xa7
  407517:	xchg   esp,eax
  407518:	mov    al,ds:0x21b3a3c0
  40751d:	pusha  
  40751e:	mov    bh,0xd3
  407520:	popf   
  407521:	xchg   edi,eax
  407522:	mov    ebp,0x238ad648
  407527:	inc    esp
  407528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407529:	sub    ebp,edx
  40752b:	pop    ebp
  40752c:	cmp    al,0xfd
  40752e:	push   ds
  40752f:	repnz push 0xffffffca
  407532:	imul   esp,DWORD PTR [bp+di+0x69],0x9246b096
  40753a:	js     0x4074dd
  40753c:	mov    eax,ds:0x10b3dc80
  407541:	push   ebx
  407542:	adc    eax,0xd0641416
  407547:	cmp    ch,BYTE PTR [edi]
  407549:	adc    esi,DWORD PTR [eax]
  40754b:	push   eax
  40754c:	mov    ebp,0x7442a5ff
  407551:	outs   dx,DWORD PTR ds:[esi]
  407552:	and    esi,DWORD PTR [eax]
  407554:	jns    0x407574
  407556:	adc    dl,0x17
  407559:	sbb    BYTE PTR [edi],bl
  40755b:	jb     0x4074e0
  40755d:	mov    esp,0x608e7d59
  407562:	scas   al,BYTE PTR es:[edi]
  407563:	sbb    ch,BYTE PTR [ecx-0x7d]
  407566:	pop    esp
  407567:	mov    al,ds:0x62e8127f
  40756c:	lods   al,BYTE PTR ds:[esi]
  40756d:	pop    ebx
  40756e:	mov    ecx,DWORD PTR [edi]
  407570:	mov    dl,0x7a
  407572:	lods   eax,DWORD PTR ds:[esi]
  407573:	aaa    
  407574:	xchg   BYTE PTR [ebx],ch
  407576:	jns    0x4075f7
  407578:	stos   DWORD PTR es:[edi],eax
  407579:	call   0x2751:0x40d545e8
  407580:	dec    esi
  407581:	add    al,0x9a
  407583:	lahf   
  407584:	sbb    eax,0x6affdd78
  407589:	repz mov eax,ds:0xe5f03ec6
  40758f:	jle    0x407520
  407591:	fcomp  QWORD PTR [esi+0x6f]
  407594:	mov    BYTE PTR [ecx-0x4f4b095a],dl
  40759a:	data16 lods al,BYTE PTR ds:[esi]
  40759c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40759d:	xchg   edi,eax
  40759e:	mov    dl,0x19
  4075a0:	pushf  
  4075a1:	je     0x4075e7
  4075a3:	mov    ds:0xc6ccefe4,eax
  4075a8:	(bad)  
  4075a9:	dec    esi
  4075aa:	add    eax,0x96246045
  4075af:	aaa    
  4075b0:	and    eax,0x4340ea7c
  4075b5:	hlt    
  4075b6:	ss inc edi
  4075b8:	jae    0x4075cc
  4075ba:	sub    al,BYTE PTR [edx-0x35dcf050]
  4075c0:	inc    ecx
  4075c1:	jnp    0x407576
  4075c3:	rcr    DWORD PTR [eax-0x48],cl
  4075c6:	clc    
  4075c7:	movhps QWORD PTR [edi+0x52],xmm6
  4075cb:	adc    DWORD PTR [esi-0xb344444],eax
  4075d1:	call   0xc1c7:0x22e770cc
  4075d8:	xor    cl,BYTE PTR [ecx+eiz*8-0x27ecfe37]
  4075df:	cwde   
  4075e0:	mov    eax,0x517b07ae
  4075e5:	mov    BYTE PTR [ecx],ah
  4075e7:	inc    edi
  4075e8:	sbb    BYTE PTR [ebx],dl
  4075ea:	adc    al,0xd8
  4075ec:	into   
  4075ed:	cmp    BYTE PTR [edi+0x1722b479],bl
  4075f3:	lds    eax,FWORD PTR [ebx-0x2befb64c]
  4075f9:	xchg   ebx,eax
  4075fa:	push   eax
  4075fb:	test   BYTE PTR [edi+esi*2],al
  4075fe:	(bad)  
  4075ff:	xchg   edx,eax
  407600:	je     0x4075d3
  407602:	and    al,bh
  407604:	fmul   DWORD PTR [ecx]
  407606:	mov    cl,0x78
  407608:	loope  0x4075f9
  40760a:	ficomp WORD PTR [ebp+0x67f63947]
  407610:	jle    0x4075e8
  407612:	test   BYTE PTR [ebx-0x18346a89],ah
  407618:	xchg   edx,eax
  407619:	xor    eax,0x4ffc5c76
  40761e:	mov    esi,0x38e282c
  407623:	jae    0x407692
  407625:	add    eax,0x56d9d787
  40762a:	in     al,dx
  40762b:	xor    BYTE PTR [eax+0x6b6019ec],ch
  407631:	mov    eax,ds:0xb23759d2
  407636:	sub    al,0x8d
  407638:	leave  
  407639:	shl    DWORD PTR [edx],cl
  40763b:	out    dx,eax
  40763c:	pop    esi
  40763d:	ret    0xae83
  407640:	(bad)  
  407641:	in     al,dx
  407642:	adc    al,0x89
  407644:	push   ebx
  407645:	and    eax,0x2f5044ac
  40764a:	mov    BYTE PTR ds:0x8ca8a029,dl
  407650:	xchg   edi,eax
  407651:	xchg   DWORD PTR [ecx-0xff66d3e],edi
  407657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407658:	mov    eax,0x3b01220b
  40765d:	xchg   ebp,eax
  40765e:	jb     0x4076ab
  407660:	pop    es
  407661:	hlt    
  407662:	pusha  
  407663:	out    0xcf,al
  407665:	xor    al,0xd7
  407667:	mov    edx,ds
  407669:	mov    ah,0xe5
  40766b:	mov    eax,ds:0x63e5f268
  407670:	cmp    ch,0x66
  407673:	std    
  407674:	mov    bh,0x40
  407676:	je     0x4076f0
  407678:	adc    ecx,DWORD PTR [ebx]
  40767a:	xor    DWORD PTR [ebx-0x16],edx
  40767d:	sub    DWORD PTR [edx-0x41],ebx
  407680:	sbb    ch,BYTE PTR [ecx-0x6b4811b9]
  407686:	push   ebx
  407687:	xor    eax,0x381b27be
  40768c:	(bad)
  40768f:	rcl    DWORD PTR [esi-0x16437a67],0xfb
  407696:	ficomp DWORD PTR [ebp-0x57]
  407699:	data16 fild WORD PTR [ebp-0x18]
  40769d:	clc    
  40769e:	dec    edi
  40769f:	in     eax,dx
  4076a0:	pop    ecx
  4076a1:	mov    bl,0x1
  4076a3:	(bad)  
  4076a4:	lahf   
  4076a5:	arpl   dx,bx
  4076a7:	(bad)  
  4076a9:	xchg   eax,esi
  4076ab:	repz lahf 
  4076ad:	or     dl,dl
  4076af:	push   0xd7d3e645
  4076b4:	test   al,0xc6
  4076b6:	pop    ebx
  4076b7:	and    edi,edi
  4076b9:	rcr    cl,0x7b
  4076bc:	iret   
  4076bd:	push   eax
  4076be:	stc    
  4076bf:	test   BYTE PTR [esi],cl
  4076c1:	inc    edx
  4076c2:	mov    esp,DWORD PTR [edx+0x37]
  4076c5:	ss push edx
  4076c7:	cmp    bh,cl
  4076c9:	in     eax,dx
  4076ca:	imul   ebx,DWORD PTR [edx+0x4],0x10b03635
  4076d1:	sti    
  4076d2:	pop    esi
  4076d3:	js     0x407704
  4076d5:	push   edi
  4076d6:	std    
  4076d7:	rol    BYTE PTR [ecx],1
  4076d9:	ins    BYTE PTR es:[edi],dx
  4076da:	mov    gs,WORD PTR [esi]
  4076dc:	push   es
  4076dd:	mov    ebx,eax
  4076df:	cmp    DWORD PTR ds:0x86469be4,ebp
  4076e5:	mov    bh,0xf
  4076e7:	xor    BYTE PTR [eax+0x9],0xde
  4076eb:	adc    BYTE PTR [ecx+0x57577451],cl
  4076f1:	xor    ebx,ebp
  4076f3:	repnz out dx,eax
  4076f5:	and    bh,ah
  4076f7:	sub    ebx,DWORD PTR [ecx+ebx*8]
  4076fa:	dec    esp
  4076fb:	push   ds
  4076fc:	jle    0x407712
  4076fe:	sbb    eax,0xca03b382
  407703:	dec    eax
  407704:	adc    BYTE PTR [esi],0xfa
  407707:	cli    
  407708:	push   es
  407709:	push   cs
  40770a:	ins    BYTE PTR es:[edi],dx
  40770b:	ja     0x407746
  40770d:	adc    al,0xf3
  40770f:	dec    ebp
  407710:	push   0xffffff99
  407712:	mov    esi,?
  407714:	je     0x407772
  407716:	push   ss
  407717:	pop    eax
  407718:	data16 ins BYTE PTR es:[edi],dx
  40771a:	sar    BYTE PTR [ecx+0x3d802e3c],0xa4
  407721:	rcl    DWORD PTR [ebx-0x7dc83b1c],1
  407727:	xor    dh,BYTE PTR [ecx-0x4a]
  40772a:	xchg   esp,eax
  40772b:	mov    BYTE PTR [eax+0x7],dl
  40772e:	stos   BYTE PTR es:[edi],al
  40772f:	aam    0xb0
  407731:	sbb    eax,0xa8139ccf
  407736:	xchg   esi,eax
  407737:	enter  0x46fb,0xfb
  40773b:	add    eax,0xc5dba7d3
  407740:	sub    BYTE PTR [esi+0x7e999dc3],bl
  407746:	dec    edx
  407747:	add    DWORD PTR [eax-0x2a049820],ebx
  40774d:	push   0x21
  40774f:	push   0x833dc0fc
  407754:	cld    
  407755:	scas   eax,DWORD PTR es:[edi]
  407756:	outs   dx,DWORD PTR ds:[esi]
  407757:	sbb    cl,BYTE PTR ds:0xaa8cdf2d
  40775d:	or     edi,0xffffffda
  407760:	(bad)  
  407761:	cld    
  407762:	and    ebx,eax
  407764:	loop   0x4077d8
  407766:	mov    edx,0xfcd647c9
  40776b:	and    al,0xc9
  40776d:	push   0x3a
  40776f:	(bad)  
  407771:	mov    ?,WORD PTR [ecx+0x76744c06]
  407777:	sbb    DWORD PTR [edi],0x13
  40777a:	outs   dx,DWORD PTR ds:[esi]
  40777b:	mov    bl,0x60
  40777d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40777e:	test   ah,ah
  407780:	arpl   WORD PTR [eax+0x69],bx
  407783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407784:	stc    
  407785:	mov    dh,0x9d
  407787:	lahf   
  407788:	xchg   edi,eax
  407789:	pop    es
  40778a:	or     al,0x11
  40778c:	(bad)  
  40778d:	pop    edx
  40778e:	(bad)  
  40778f:	or     al,0xb0
  407791:	pop    esi
  407792:	lods   eax,DWORD PTR ds:[esi]
  407793:	push   esi
  407794:	dec    ebp
  407795:	push   ecx
  407796:	add    al,0x8f
  407798:	std    
  407799:	sbb    eax,0x1a811cf0
  40779e:	scas   al,BYTE PTR es:[edi]
  40779f:	inc    eax
  4077a0:	push   eax
  4077a1:	int3   
  4077a2:	jge    0x407753
  4077a4:	dec    esp
  4077a5:	(bad)  
  4077a6:	imul   ebp,eax,0xffffffa6
  4077a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077aa:	push   esp
  4077ab:	push   esp
  4077ac:	out    0xa6,al
  4077ae:	sbb    al,0x6c
  4077b0:	fild   WORD PTR [ebp+0x8]
  4077b3:	jle    0x4077cc
  4077b5:	inc    esi
  4077b6:	inc    ebx
  4077b7:	test   DWORD PTR [ebx-0x13],0x8b241bef
  4077be:	xchg   ecx,eax
  4077bf:	xchg   edi,eax
  4077c0:	jp     0x4077a3
  4077c2:	cli    
  4077c3:	loope  0x4077ed
  4077c5:	pop    eax
  4077c6:	pop    ecx
  4077c7:	pop    ebx
  4077c8:	nop
  4077c9:	loope  0x40779c
  4077cb:	xchg   esi,eax
  4077cc:	lds    ecx,FWORD PTR [eax-0x626f2e1c]
  4077d2:	dec    esi
  4077d3:	lock jmp 0x4161:0x3e34f0e2
  4077db:	(bad)  
  4077dc:	in     al,dx
  4077dd:	(bad)  
  4077de:	fucomp st(6)
  4077e0:	test   al,0x5
  4077e2:	xor    dh,BYTE PTR [ecx]
  4077e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077e5:	lods   eax,DWORD PTR ds:[esi]
  4077e6:	pop    es
  4077e7:	xchg   BYTE PTR [esi-0x67467667],ch
  4077ed:	sub    eax,0x44e6303f
  4077f2:	or     dh,BYTE PTR [edi-0x61]
  4077f5:	xor    eax,0x4c681ff7
  4077fa:	icebp  
  4077fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077fd:	pop    edx
  4077fe:	rcr    DWORD PTR ds:0x15a92871,1
  407804:	add    dl,BYTE PTR [eax-0x3c]
  407807:	adc    bh,BYTE PTR [esi-0x7c84dc5c]
  40780d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40780e:	push   edi
  40780f:	xchg   edi,eax
  407810:	addr16 mov ch,0x94
  407813:	div    BYTE PTR [ecx+0x37cd6fd8]
  407819:	mov    ds:0x8585c2b8,al
  40781e:	dec    esi
  40781f:	packssdw mm6,QWORD PTR [edx+0x7a00ae94]
  407826:	push   edi
  407827:	in     al,dx
  407828:	lahf   
  407829:	or     eax,0x2f2837e
  40782e:	xchg   esi,eax
  40782f:	xor    al,0x89
  407831:	fneni(8087 only) 
  407833:	cdq    
  407834:	daa    
  407835:	dec    esp
  407836:	arpl   WORD PTR [ebx+0x7e],di
  407839:	(bad)
  40783d:	scas   eax,DWORD PTR es:[edi]
  40783e:	test   eax,0x9f80a669
  407843:	sar    BYTE PTR [ebx-0x37],0x6a
  407847:	jmp    0x40785b
  407849:	jge    0x407806
  40784b:	lock or dh,BYTE PTR [esi]
  40784e:	jbe    0x407845
  407850:	jmp    0x49d9:0x4e5b442a
  407857:	dec    esi
  407858:	inc    ebp
  407859:	mov    esi,0xeb8cc9b1
  40785e:	call   0x3e7b34d3
  407863:	jo     0x4077e7
  407865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407866:	add    dh,dh
  407868:	mov    cl,0x55
  40786a:	pop    ds
  40786b:	adc    dh,ah
  40786d:	ret    0x74cf
  407870:	test   eax,0x74912a6b
  407875:	adc    edx,DWORD PTR [ecx]
  407877:	loopne 0x407835
  407879:	xor    eax,edx
  40787b:	push   0xce7ec524
  407880:	add    bl,BYTE PTR [edi+0x1c]
  407883:	fisttp QWORD PTR [esp+ecx*1]
  407886:	dec    eax
  407887:	mov    ch,0x16
  407889:	and    dh,BYTE PTR [edx+0x1f]
  40788c:	lea    edi,[esi-0x79bea670]
  407892:	cmp    ah,BYTE PTR [edi-0x1f]
  407895:	or     BYTE PTR [ebp+eiz*2-0x1d],0xea
  40789a:	scas   eax,DWORD PTR es:[edi]
  40789b:	sbb    BYTE PTR [eax],dh
  40789d:	je     0x407908
  40789f:	bound  edx,QWORD PTR [esi-0x57eb9b37]
  4078a5:	imul   BYTE PTR [ebx+0x11]
  4078a8:	(bad)  [eax+0x6a0333aa]
  4078ae:	mov    ch,0xf0
  4078b0:	(bad)  
  4078b1:	out    0xbc,al
  4078b3:	icebp  
  4078b4:	jmp    0xc945:0xb8c071df
  4078bb:	and    esp,eax
  4078bd:	mov    cl,0xe8
  4078bf:	jg     0x4078b4
  4078c1:	mov    dl,0x75
  4078c3:	or     ecx,edx
  4078c5:	mov    BYTE PTR ds:0x12601d8c,dh
  4078cb:	xor    ah,BYTE PTR [edx+0x4fc1bff7]
  4078d1:	and    DWORD PTR [edi-0x6d],esp
  4078d4:	cli    
  4078d5:	aaa    
  4078d6:	fstp   TBYTE PTR [edx+0x3ec7d06a]
  4078dc:	or     BYTE PTR [eax-0xe],dh
  4078df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078e0:	fwait
  4078e1:	in     al,dx
  4078e2:	jmp    0x861d:0x3cd7c5e7
  4078e9:	addps  xmm3,XMMWORD PTR ds:0xe1d9589e
  4078f0:	jb     0x4078c5
  4078f2:	cmc    
  4078f3:	bswap  esp
  4078f5:	fbstp  TBYTE PTR [edi]
  4078f7:	ins    BYTE PTR es:[edi],dx
  4078f8:	jge    0x4078bf
  4078fa:	pop    ebp
  4078fb:	jns    0x407903
  4078fd:	or     DWORD PTR [eax],eax
  4078ff:	fidivr DWORD PTR [eax+ebx*4]
  407902:	in     eax,dx
  407903:	sbb    edi,ebp
  407905:	pop    ds
  407906:	int3   
  407907:	push   esp
  407908:	inc    ecx
  407909:	mov    eax,0xcc0012ba
  40790e:	dec    edi
  40790f:	hlt    
  407910:	jo     0x4078f0
  407912:	jecxz  0x4078f4
  407914:	mov    al,0x20
  407916:	in     eax,dx
  407917:	inc    esi
  407918:	push   cs
  407919:	pop    ds
  40791a:	adc    ebx,edi
  40791c:	lds    edx,FWORD PTR [esp+edx*8]
  40791f:	push   esp
  407920:	xchg   ebx,eax
  407921:	and    eax,0x5d9ed02a
  407926:	fs loopne 0x40792a
  407929:	ret    0x1392
  40792c:	add    ah,bl
  40792e:	daa    
  40792f:	mov    dh,0x7
  407931:	xchg   edx,eax
  407932:	(bad)  
  407934:	sub    BYTE PTR [esi-0x563ef682],dh
  40793a:	jb     0x407932
  40793c:	sub    BYTE PTR [eax],0xdf
  40793f:	loopne 0x407977
  407941:	sbb    dl,dh
  407943:	or     ah,bl
  407945:	bound  ebx,QWORD PTR [edx]
  407947:	sub    edx,ebp
  407949:	jno    0x4079bf
  40794b:	aas    
  40794c:	push   ds
  40794d:	lods   eax,DWORD PTR ds:[esi]
  40794e:	lock aas 
  407950:	dec    esi
  407951:	js     0x4079b0
  407953:	loop   0x407990
  407955:	rcl    al,0x9e
  407958:	and    DWORD PTR [ecx-0x61],esp
  40795b:	int3   
  40795c:	gs iret 
  40795e:	hlt    
  40795f:	and    bh,BYTE PTR [edx+0x50]
  407962:	pop    esp
  407963:	pusha  
  407964:	cmp    BYTE PTR [edi],ah
  407966:	cs push ebx
  407968:	js     0x407986
  40796a:	lods   eax,DWORD PTR ds:[esi]
  40796b:	mov    edi,gs
  40796d:	loopne 0x4079ea
  40796f:	dec    edx
  407970:	aaa    
  407971:	mov    dl,0x7b
  407973:	xchg   BYTE PTR ds:0xcf3e00c4,dl
  407979:	pop    ebp
  40797a:	jns    0x4079b0
  40797c:	xor    esp,DWORD PTR [esi-0x49]
  40797f:	cdq    
  407980:	nop
  407981:	scas   eax,DWORD PTR es:[edi]
  407982:	data16 idiv BYTE PTR [esi-0x17]
  407986:	stos   DWORD PTR es:[edi],eax
  407987:	loope  0x4079dc
  407989:	scas   al,BYTE PTR es:[edi]
  40798a:	aam    0x7c
  40798c:	pop    esi
  40798d:	mov    BYTE PTR [edx+0x4],dl
  407990:	and    al,0x4c
  407992:	packssdw mm7,mm3
  407995:	xor    eax,0x34aeb00c
  40799a:	retf   
  40799b:	(bad)  [esi-0x73]
  40799e:	cvttps2pi mm3,QWORD PTR [edx]
  4079a1:	loope  0x407974
  4079a3:	cmp    al,0xa0
  4079a5:	pop    edx
  4079a6:	add    eax,0x14f0e3b
  4079ab:	pop    edx
  4079ac:	sbb    bl,BYTE PTR [eax-0x1b]
  4079af:	cmovge esp,DWORD PTR [esi]
  4079b2:	jmp    0xd22b825
  4079b7:	add    al,0x8c
  4079b9:	shl    DWORD PTR [ebx-0x798c70fc],cl
  4079bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079c0:	daa    
  4079c1:	inc    ebx
  4079c2:	cdq    
  4079c3:	xchg   esi,eax
  4079c4:	inc    esi
  4079c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079c6:	jnp    0x40794d
  4079c8:	(bad)  
  4079c9:	xlat   BYTE PTR ds:[ebx]
  4079ca:	ret    
  4079cb:	push   ss
  4079cc:	fcmovnbe st,st(4)
  4079ce:	cmc    
  4079cf:	sar    DWORD PTR es:[esi+0x7a],0x63
  4079d4:	push   ds
  4079d5:	dec    ecx
  4079d6:	fs mov ch,bl
  4079d9:	(bad)  
  4079da:	push   ecx
  4079db:	jmp    0x407a0a
  4079dd:	push   ebp
  4079de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079df:	cmp    DWORD PTR [ebx-0x150d497f],0x65e246e5
  4079e9:	loopne 0x4079cf
  4079eb:	jmp    0xf853:0x1a82762b
  4079f2:	pop    edx
  4079f3:	mov    al,ds:0x1a40dabe
  4079f8:	xlat   BYTE PTR ds:[ebx]
  4079f9:	add    DWORD PTR [ebx-0x390df95b],esi
  4079ff:	pop    ebp
  407a00:	fiadd  DWORD PTR [edx]
  407a02:	mov    eax,ds:0x695cbb14
  407a07:	dec    ebp
  407a08:	into   
  407a09:	(bad)  
  407a0a:	push   cs
  407a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a0c:	xchg   esi,eax
  407a0d:	aad    0x93
  407a0f:	jnp    0x407996
  407a11:	enter  0x5a0b,0x42
  407a15:	jbe    0x4079e1
  407a17:	add    eax,0xee9fc06f
  407a1c:	repnz and DWORD PTR [ebp-0x6c90d752],esp
  407a23:	xor    dl,BYTE PTR [edi]
  407a25:	sub    ecx,DWORD PTR [edi-0x4db387d]
  407a2b:	jno    0x407aa9
  407a2d:	ds fdivr st,st(2)
  407a30:	sbb    ecx,DWORD PTR [edx-0x68]
  407a33:	adc    DWORD PTR [edi-0x3f6bb1bb],ecx
  407a39:	jmp    0x4e99:0x7d7f43d4
  407a40:	les    edx,FWORD PTR [edi]
  407a42:	mov    ds:0x1e94758d,al
  407a47:	fdiv   DWORD PTR [ebx+0x6e66b2f2]
  407a4d:	outs   dx,BYTE PTR ds:[esi]
  407a4e:	scas   al,BYTE PTR es:[edi]
  407a4f:	(bad)  
  407a50:	cmp    eax,0xf11e4490
  407a55:	cdq    
  407a56:	in     al,dx
  407a57:	sub    DWORD PTR [ecx+esi*2-0x777b4659],ebx
  407a5e:	daa    
  407a5f:	retf   0x928b
  407a62:	cmp    al,BYTE PTR [edi+0x6425538e]
  407a68:	cmp    cl,BYTE PTR [edi-0x1579da34]
  407a6e:	test   BYTE PTR [eax-0x50ed974d],ch
  407a74:	jo     0x407a82
  407a76:	fwait
  407a77:	xchg   BYTE PTR [ecx],dl
  407a79:	xchg   edx,eax
  407a7a:	cmp    edx,DWORD PTR [ebp-0x5a]
  407a7d:	cmc    
  407a7e:	sbb    DWORD PTR [eax-0x4f6cdf8c],eax
  407a84:	dec    ch
  407a86:	daa    
  407a87:	call   0x93b0:0x2d60182
  407a8e:	data16 (bad) 
  407a91:	lea    eax,[edi]
  407a93:	gs jo  0x407a3f
  407a96:	adc    al,ah
  407a98:	dec    edi
  407a99:	inc    ebp
  407a9a:	mov    ebp,DWORD PTR [edx-0x10]
  407a9d:	pop    edi
  407a9e:	dec    eax
  407a9f:	add    edi,esp
  407aa1:	mov    cl,0x41
  407aa3:	ins    DWORD PTR es:[edi],dx
  407aa4:	mov    esp,0x49d0496f
  407aa9:	stos   DWORD PTR es:[edi],eax
  407aaa:	jle    0x407a31
  407aac:	lahf   
  407aad:	xchg   edx,eax
  407aae:	outs   dx,DWORD PTR ds:[esi]
  407aaf:	arpl   WORD PTR [ebx],dx
  407ab1:	and    eax,0xa023b91c
  407ab6:	sbb    eax,0x434bfd3c
  407abb:	jmp    0xb12a:0xc40f2bb3
  407ac2:	and    eax,0xdd6247c6
  407ac7:	aaa    
  407ac8:	iret   
  407ac9:	in     al,dx
  407aca:	(bad)  [esi-0xf]
  407acd:	push   0x3f295e1b
  407ad2:	cmp    al,0xd6
  407ad4:	mov    esp,0x7f9e7743
  407ad9:	adc    BYTE PTR [ebp+eax*2+0x16e91ad8],dh
  407ae0:	call   0x3aa2:0x610f8b57
  407ae7:	push   ecx
  407ae8:	push   ds
  407ae9:	jmp    0x407b56
  407aeb:	ins    DWORD PTR es:[edi],dx
  407aec:	sbb    al,BYTE PTR [ebp-0x15]
  407aef:	fild   WORD PTR [edi+edx*2+0x1af7c37b]
  407af6:	daa    
  407af7:	fild   DWORD PTR [eax-0x1912a784]
  407afd:	or     al,BYTE PTR [edx-0x16]
  407b00:	xor    bl,BYTE PTR [eax+edx*2-0x42]
  407b04:	adc    ebx,edi
  407b06:	jno    0x407b42
  407b08:	mov    al,dh
  407b0a:	cdq    
  407b0b:	sub    eax,0xc992505b
  407b10:	fild   DWORD PTR [ecx-0x321a6318]
  407b16:	mov    bh,0xa
  407b18:	or     al,0x5f
  407b1a:	xchg   DWORD PTR [edx-0x66],esi
  407b1d:	mov    ebp,0xf4649e51
  407b22:	outs   dx,DWORD PTR ds:[esi]
  407b23:	js     0x407b89
  407b25:	mov    esp,0xd1fb626e
  407b2a:	adc    al,0xca
  407b2c:	pop    edx
  407b2d:	(bad)  
  407b2e:	clc    
  407b2f:	pop    ecx
  407b30:	mov    al,ds:0xec21b0f1
  407b35:	mov    dh,0x76
  407b37:	(bad)  [edi+ebx*1-0x9]
  407b3b:	cdq    
  407b3c:	inc    edx
  407b3d:	mov    ebp,0xe9d707e7
  407b42:	(bad)  
  407b43:	and    eax,0x5fde853
  407b48:	cdq    
  407b49:	sbb    ch,BYTE PTR [edx+edx*1]
  407b4c:	outs   dx,DWORD PTR ds:[esi]
  407b4d:	pushf  
  407b4e:	cwde   
  407b4f:	xor    al,0x8d
  407b51:	std    
  407b52:	retf   
  407b53:	scas   eax,DWORD PTR es:[edi]
  407b54:	(bad)  
  407b55:	retf   0x9b17
  407b58:	lods   al,BYTE PTR ds:[esi]
  407b59:	push   cs
  407b5a:	shl    cl,0x36
  407b5d:	mov    ds:0xee6b95c6,al
  407b62:	push   ebp
  407b63:	xchg   ecx,eax
  407b64:	test   eax,0xe7ecf131
  407b69:	push   ds
  407b6a:	addr16 push cs
  407b6c:	xor    esp,DWORD PTR [edx-0x6]
  407b6f:	lahf   
  407b70:	popf   
  407b71:	(bad)  
  407b72:	ds scas al,BYTE PTR es:[edi]
  407b74:	in     al,dx
  407b75:	pop    edx
  407b76:	inc    ebp
  407b77:	push   ss
  407b78:	sbb    al,0xa2
  407b7a:	mov    esp,0xdb45c03
  407b7f:	fisttp QWORD PTR [ebx+0x5ddc84f6]
  407b85:	mov    bh,0x2d
  407b87:	cmc    
  407b88:	jnp    0x407bde
  407b8a:	lds    edi,FWORD PTR [ebx+edi*8-0x6b]
  407b8e:	adc    DWORD PTR [ebx-0x22f530f4],esi
  407b94:	cmc    
  407b95:	ret    0x5fc5
  407b98:	cwde   
  407b99:	jg     0x407b70
  407b9b:	aaa    
  407b9c:	fdivr  DWORD PTR [esi+0x5d]
  407b9f:	daa    
  407ba0:	imul   ecx,DWORD PTR [eax+0x2667c97c],0x4d
  407ba7:	and    eax,0x9cb67a6b
  407bac:	outs   dx,DWORD PTR ds:[esi]
  407bad:	or     DWORD PTR [ecx-0x62],ecx
  407bb0:	and    BYTE PTR [edi],0x6
  407bb3:	inc    ebp
  407bb4:	mov    al,0xa1
  407bb6:	jno    0x407bac
  407bb8:	lahf   
  407bb9:	out    0xa1,eax
  407bbb:	rcl    BYTE PTR [edx],cl
  407bbd:	inc    eax
  407bbe:	test   esi,edi
  407bc0:	sub    eax,0x6cbd40d7
  407bc5:	sub    eax,0x2cc39b78
  407bca:	xchg   edx,eax
  407bcb:	jmp    0x9de2:0x9a8b6b5e
  407bd2:	cmp    eax,0xbfba6b00
  407bd7:	js     0x407c04
  407bd9:	(bad)  
  407bda:	test   ebp,0xaccecad6
  407be0:	shl    DWORD PTR [ecx-0x4d],0x85
  407be4:	mov    esp,0xeb57f267
  407be9:	test   eax,0xfcf8b8c9
  407bee:	jno    0x407c47
  407bf0:	adc    al,0x92
  407bf2:	in     al,dx
  407bf3:	in     al,dx
  407bf4:	mov    esi,0x914087fe
  407bf9:	fst    DWORD PTR [ecx]
  407bfb:	dec    ecx
  407bfc:	imul   ebx,DWORD PTR [esp+eax*1+0x258c4782],0xbc9f7ddc
  407c07:	adc    esp,edi
  407c09:	shl    DWORD PTR ds:[edx+0x26879235],cl
  407c10:	push   edi
  407c11:	imul   esi,DWORD PTR [ebx],0x19
  407c14:	into   
  407c15:	aaa    
  407c16:	xchg   edi,eax
  407c17:	scas   al,BYTE PTR es:[edi]
  407c18:	sbb    DWORD PTR [ecx],ebp
  407c1a:	inc    eax
  407c1b:	fistp  WORD PTR [ebp+0x4a]
  407c1e:	int3   
  407c1f:	pop    ecx
  407c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c21:	inc    ebp
  407c22:	inc    ebx
  407c23:	hlt    
  407c24:	mov    ebp,0x4b84253
  407c29:	pushf  
  407c2a:	in     eax,0xfb
  407c2c:	mov    eax,ds:0x42e2b7
  407c31:	dec    edx
  407c32:	jmp    0x409f81
  407c37:	mov    al,0x4e
  407c39:	cmp    bh,ch
  407c3b:	mov    ds:0xc733738b,al
  407c40:	sbb    BYTE PTR ds:0xfcd226e6,cl
  407c46:	sahf   
  407c47:	push   es
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	lock mov ds:0x4b00666c,al
  407c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c56:	sbb    BYTE PTR [ebx+0x51abf0db],ah
  407c5c:	scas   al,BYTE PTR es:[edi]
  407c5d:	test   DWORD PTR [edi+0x51223096],ebp
  407c63:	pop    ecx
  407c64:	mov    dl,0x43
  407c66:	and    al,0x9b
  407c68:	jo     0x407cde
  407c6a:	enter  0x5f8c,0x4c
  407c6e:	(bad)  
  407c70:	mov    edi,0x8187f013
  407c75:	dec    eax
  407c76:	sub    al,0x1c
  407c78:	jl     0x407c49
  407c7a:	jge    0x407cf3
  407c7c:	(bad)  
  407c7d:	xor    BYTE PTR ds:0x31495ede,bh
  407c83:	mov    DWORD PTR [edi+ebp*1+0x5b],ebp
  407c87:	pop    ss
  407c88:	fistp  DWORD PTR [esi+0x39cf691d]
  407c8e:	xchg   eax,ebx
  407c90:	and    eax,DWORD PTR [ebx]
  407c92:	mov    ecx,0x4dd1172f
  407c97:	jmp    0x407c6c
  407c99:	adc    DWORD PTR [edi],eax
  407c9b:	xchg   ecx,eax
  407c9c:	dec    ebp
  407c9d:	std    
  407c9e:	pop    eax
  407c9f:	test   eax,0xa1fd9d0
  407ca4:	jno    0x407c92
  407ca6:	xor    eax,0xbd6f1c20
  407cab:	addr16 cmc 
  407cad:	dec    ecx
  407cae:	push   ebp
  407caf:	inc    ebp
  407cb0:	(bad)  
  407cb1:	repz cdq 
  407cb3:	loopne 0x407c47
  407cb5:	out    0x61,al
  407cb7:	iret   
  407cb8:	retf   0x84a8
  407cbb:	mov    ebx,0x67e9ac88
  407cc0:	xchg   edx,eax
  407cc1:	jmp    0xf315a7e
  407cc6:	pushf  
  407cc7:	mov    eax,ds:0xfe595c0
  407ccc:	(bad)  
  407cce:	jp     0x407cea
  407cd0:	das    
  407cd1:	stc    
  407cd2:	jle    0x407d4f
  407cd4:	cwde   
  407cd5:	lods   eax,DWORD PTR ds:[esi]
  407cd6:	push   ss
  407cd7:	ret    
  407cd8:	mov    dh,0xfe
  407cda:	out    dx,al
  407cdb:	push   es
  407cdc:	jae    0x407c93
  407cde:	dec    eax
  407cdf:	xchg   DWORD PTR [ebp-0x53],esi
  407ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ce3:	sti    
  407ce4:	(bad)  
  407ce6:	push   0xfffffff8
  407ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ce9:	dec    ebx
  407cea:	pop    ecx
  407ceb:	int3   
  407cec:	(bad)  
  407ced:	ins    DWORD PTR es:[edi],dx
  407cee:	and    al,BYTE PTR [edi+0xae5b467]
  407cf4:	add    DWORD PTR [esi*4+0x2b588e9c],edx
  407cfb:	int3   
  407cfc:	inc    esi
  407cfd:	jmp    0xd8e3df52
  407d02:	ja     0x407d7e
  407d04:	je     0x407d45
  407d06:	or     eax,0xd5cd62e3
  407d0b:	adc    DWORD PTR [ebx-0x13dfe978],esp
  407d11:	pop    DWORD PTR [eax+0x4dea1163]
  407d17:	add    eax,0x24c05e16
  407d1c:	sub    edx,0xbb68d6cb
  407d22:	xchg   ebx,eax
  407d23:	xlat   BYTE PTR ds:[ebx]
  407d24:	es mov cl,0x71
  407d27:	std    
  407d28:	mov    cl,BYTE PTR [eax+0x26]
  407d2b:	and    BYTE PTR [edi+edi*4+0x72e554e3],cl
  407d32:	imul   ah
  407d34:	and    ecx,DWORD PTR [edi]
  407d36:	mov    esp,DWORD PTR [ebx+0x49]
  407d39:	das    
  407d3a:	aam    0x70
  407d3c:	sti    
  407d3d:	cmp    dh,BYTE PTR [edx+0x6f]
  407d40:	xchg   bh,ch
  407d42:	jnp    0x407d29
  407d44:	sar    BYTE PTR [edx-0x4d],cl
  407d47:	xor    eax,0xd08d8288
  407d4c:	inc    esp
  407d4d:	pop    ecx
  407d4e:	inc    edi
  407d4f:	ret    
  407d50:	dec    edi
  407d51:	mov    edx,0xa4e1a4ab
  407d56:	or     BYTE PTR [edi-0x1a],0x6a
  407d5a:	int    0x37
  407d5c:	or     al,0x2e
  407d5e:	xchg   edx,eax
  407d5f:	pop    esi
  407d60:	sbb    DWORD PTR [eax+0x566bbec3],0x4a2f93fe
  407d6a:	loop   0x407d74
  407d6c:	and    eax,0x5e2b2d0d
  407d71:	mov    ebx,DWORD PTR [edi+ebp*8+0xd]
  407d75:	setp   BYTE PTR [eax]
  407d78:	jbe    0x407d09
  407d7a:	push   edi
  407d7b:	jmp    0xcd48:0x55c824ec
  407d82:	icebp  
  407d83:	xchg   edx,eax
  407d84:	adc    DWORD PTR [eax-0x54],edx
  407d87:	jae    0x407d79
  407d89:	xchg   BYTE PTR [eax+0x70a096fa],ch
  407d8f:	mul    BYTE PTR gs:0x432ba2a5
  407d96:	or     al,BYTE PTR [eax-0x6095239d]
  407d9c:	xchg   ecx,esp
  407d9e:	cld    
  407d9f:	je     0x407d4f
  407da1:	mov    ah,0x6a
  407da3:	add    al,0xdb
  407da5:	xchg   DWORD PTR [ebx+0x2f961475],edx
  407dab:	jl     0x407dee
  407dad:	add    DWORD PTR [edi],ecx
  407daf:	push   ebx
  407db0:	xor    esp,DWORD PTR [eax]
  407db2:	dec    edx
  407db3:	add    bh,BYTE PTR [eax-0x4a]
  407db6:	or     eax,0x429e4056
  407dbb:	pop    es
  407dbc:	sub    eax,0x2e554863
  407dc1:	mov    dh,0x9f
  407dc3:	ins    DWORD PTR es:[edi],dx
  407dc4:	cmp    eax,0x48bf7004
  407dc9:	jmp    0x407de3
  407dcb:	aaa    
  407dcc:	pop    eax
  407dcd:	mov    ah,bh
  407dcf:	jne    0x407d74
  407dd1:	mov    edi,0xabd50851
  407dd6:	iret   
  407dd7:	gs inc ecx
  407dd9:	je     0x407daa
  407ddb:	std    
  407ddc:	push   eax
  407ddd:	mov    eax,DWORD PTR [edx+ecx*8+0x689e219e]
  407de4:	add    ah,bl
  407de6:	xor    cl,BYTE PTR fs:[edx]
  407de9:	push   eax
  407dea:	mov    bl,0xdd
  407dec:	xchg   ebx,eax
  407ded:	xor    dh,BYTE PTR [esi+0xefc0d25]
  407df3:	outs   dx,DWORD PTR ds:[esi]
  407df4:	gs out 0xee,al
  407df7:	sub    eax,0x4c680641
  407dfc:	xchg   ebx,eax
  407dfd:	pop    ds
  407dfe:	aad    0x4
  407e00:	(bad)  
  407e01:	ret    0xd1ee
  407e04:	rcl    edi,cl
  407e06:	mov    ss,ecx
  407e08:	in     eax,dx
  407e09:	push   cs
  407e0a:	popa   
  407e0b:	jle    0x407e63
  407e0d:	shl    DWORD PTR [ebx],cl
  407e0f:	hlt    
  407e10:	rcl    edi,cl
  407e12:	sahf   
  407e13:	outs   dx,BYTE PTR ds:[esi]
  407e14:	mov    al,0xa5
  407e16:	scas   eax,DWORD PTR es:[edi]
  407e17:	pushf  
  407e18:	popf   
  407e19:	mov    al,ds:0x81f6a592
  407e1e:	sbb    BYTE PTR [edi],cl
  407e20:	int    0x4f
  407e22:	jmp    0x407db7
  407e24:	dec    edx
  407e25:	scas   eax,DWORD PTR es:[edi]
  407e26:	call   0xab40:0x15023b73
  407e2d:	inc    esi
  407e2e:	jno    0x407e6e
  407e30:	jo     0x407e1a
  407e32:	ret    0x863
  407e35:	cdq    
  407e36:	aam    0xb5
  407e38:	sbb    BYTE PTR [ebx+0x48e5198a],dh
  407e3e:	ds ins BYTE PTR es:[edi],dx
  407e40:	cmp    eax,0xaa3ee6bd
  407e45:	ss shl cl,0x1a
  407e49:	ror    dh,0xfb
  407e4c:	pushf  
  407e4d:	adc    dl,BYTE PTR [edx]
  407e4f:	pop    ds
  407e50:	push   esp
  407e51:	mov    bl,0xf2
  407e53:	fidiv  WORD PTR [eax-0x79]
  407e56:	stos   BYTE PTR es:[edi],al
  407e57:	scas   al,BYTE PTR es:[edi]
  407e58:	jae    0x407de8
  407e5a:	xor    ebx,DWORD PTR [edx-0x37c8b90a]
  407e60:	mov    bl,0xb8
  407e62:	pop    eax
  407e63:	pop    ebp
  407e64:	inc    eax
  407e65:	dec    ecx
  407e66:	cmp    DWORD PTR [edx-0x3c41bff9],esi
  407e6c:	enter  0xbc06,0x81
  407e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e71:	(bad)  
  407e72:	pop    esi
  407e73:	mov    bh,0x1
  407e75:	mov    bh,0xa4
  407e77:	or     al,0xd6
  407e79:	jno    0x407e19
  407e7b:	(bad)  
  407e7c:	hlt    
  407e7d:	icebp  
  407e7e:	jo     0x407ebb
  407e80:	jne    0x407e52
  407e82:	ins    BYTE PTR es:[edi],dx
  407e83:	push   ds
  407e84:	jbe    0x407ef0
  407e86:	push   esp
  407e87:	adc    al,dl
  407e89:	stos   DWORD PTR es:[edi],eax
  407e8a:	cmc    
  407e8b:	sar    BYTE PTR [eax+0x69],0xc7
  407e8f:	lahf   
  407e90:	fld    st(4)
  407e92:	and    al,0xfd
  407e94:	sbb    DWORD PTR [esi],0xfd99f43f
  407e9a:	pushf  
  407e9b:	out    0xd4,al
  407e9d:	retf   0x37e4
  407ea0:	mov    cl,0xe
  407ea2:	addr16 pop es
  407ea4:	icebp  
  407ea5:	or     al,0xd7
  407ea7:	aaa    
  407ea8:	in     al,dx
  407ea9:	pop    esp
  407eaa:	xchg   BYTE PTR [ecx+ecx*2],cl
  407ead:	fidiv  DWORD PTR [ecx+esi*4]
  407eb0:	xchg   ebx,eax
  407eb1:	inc    edx
  407eb2:	jnp    0x407e36
  407eb4:	push   eax
  407eb5:	sub    DWORD PTR [edi+0x37],0x45
  407eb9:	sbb    BYTE PTR [edx],bl
  407ebb:	pop    ecx
  407ebc:	outs   dx,DWORD PTR ds:[esi]
  407ebd:	pop    es
  407ebe:	out    dx,eax
  407ebf:	lds    edi,FWORD PTR [edx-0x28c694a]
  407ec5:	shl    DWORD PTR [eax*8-0x6b24ad3],0x35
  407ecd:	(bad)  
  407ece:	sub    esp,DWORD PTR [ebx+esi*1+0x3d]
  407ed2:	ret    
  407ed3:	imul   ebp,DWORD PTR [ebp+0x56a516b5],0xa8015497
  407edd:	dec    esi
  407ede:	div    BYTE PTR [eax+ebx*1]
  407ee1:	and    esi,esp
  407ee3:	mov    cl,0xb1
  407ee5:	xchg   edx,eax
  407ee6:	es jns 0x407ef8
  407ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eea:	cs mov esi,0x680e4fae
  407ef0:	pop    edi
  407ef1:	leave  
  407ef2:	xchg   esp,eax
  407ef3:	in     al,0x5a
  407ef5:	popa   
  407ef6:	sbb    al,0xee
  407ef8:	inc    ecx
  407ef9:	xor    edi,esi
  407efb:	cmp    al,0xf7
  407efd:	mov    esp,0x5bfc3478
  407f02:	mov    edx,0x56c6cbc7
  407f07:	jns    0x407f7b
  407f09:	out    0x79,eax
  407f0b:	das    
  407f0c:	fisttp WORD PTR [eax+eiz*1-0x17]
  407f10:	sbb    esi,edi
  407f12:	pop    edi
  407f13:	fidivr WORD PTR [eax]
  407f15:	inc    edx
  407f16:	push   esp
  407f17:	or     al,BYTE PTR [ebp-0xb89e4e5]
  407f1d:	inc    eax
  407f1e:	add    eax,0xabbb760b
  407f23:	popf   
  407f24:	cmp    eax,0x190cda11
  407f29:	and    BYTE PTR [edi+0x68],0xad
  407f2d:	or     eax,0xb9c6c706
  407f32:	sub    al,0x19
  407f34:	dec    edi
  407f35:	ror    eax,cl
  407f37:	push   edi
  407f38:	or     ebx,DWORD PTR [eax-0x1c18a982]
  407f3e:	inc    eax
  407f3f:	sbb    BYTE PTR [esi-0x80],0xc9
  407f43:	(bad)  
  407f44:	icebp  
  407f45:	inc    esp
  407f46:	sbb    BYTE PTR [ebp+0x4cac73d5],ah
  407f4c:	and    BYTE PTR [ebp+0x13],al
  407f4f:	dec    edi
  407f50:	(bad)  
  407f51:	sub    ebp,DWORD PTR [edi+0x1e317b33]
  407f57:	fmul   DWORD PTR ds:0x15a1058a
  407f5d:	fist   WORD PTR [edi+0x12]
  407f60:	xor    BYTE PTR [eax+esi*1],0x39
  407f64:	cmp    al,0x21
  407f66:	iret   
  407f67:	xor    BYTE PTR [eax],bh
  407f69:	and    edx,DWORD PTR [eax+0xd65b50f]
  407f6f:	cdq    
  407f70:	jmp    0xc77d48f3
  407f75:	push   es
  407f76:	cmp    eax,0x10210f6b
  407f7b:	pushf  
  407f7c:	daa    
  407f7d:	push   0xffffffcd
  407f7f:	jg     0x407f69
  407f81:	mov    dh,0xe9
  407f83:	fstp   QWORD PTR [ebx-0x4]
  407f86:	ret    0x5c87
  407f89:	or     eax,0xaa5606c1
  407f8e:	repnz retf 
  407f90:	leave  
  407f91:	fdiv   QWORD PTR ds:[ecx-0x77e11be7]
  407f98:	mov    ds:0xc111eb00,eax
  407f9d:	(bad)  
  407f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f9f:	int3   
  407fa0:	fisttp DWORD PTR [ebx+esi*4+0x78]
  407fa4:	jle    0x407fb7
  407fa6:	jae    0x2d1cfcda
  407fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fad:	enter  0x650a,0xf4
  407fb1:	arpl   WORD PTR [ebx-0x556d39ee],dx
  407fb7:	bt     DWORD PTR [eax+0x65],edx
  407fbb:	xor    cl,BYTE PTR [ebx+0x1e]
  407fbe:	ja     0x407fb4
  407fc0:	mov    ah,0x7a
  407fc2:	xchg   BYTE PTR [eax],ch
  407fc4:	and    al,0xe6
  407fc6:	pop    ss
  407fc7:	popa   
  407fc8:	mov    esi,DWORD PTR [ebp+ebp*4-0x357ef498]
  407fcf:	popf   
  407fd0:	jmp    0x6baef8eb
  407fd5:	adc    BYTE PTR [ebx+0x30271314],ch
  407fdb:	jmp    0x407f7c
  407fdd:	mov    ds:0xd56924c1,al
  407fe2:	jno    0x407fce
  407fe4:	mov    dh,0x29
  407fe6:	and    edi,DWORD PTR [edx]
  407fe8:	inc    esi
  407fe9:	dec    eax
  407fea:	ins    DWORD PTR es:[edi],dx
  407feb:	test   al,0x61
  407fed:	or     al,0xd
  407fef:	bound  ecx,QWORD PTR ds:0x231132c1
  407ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ff6:	fbstp  TBYTE PTR [esi]
  407ff8:	push   ds
  407ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ffa:	(bad)  
  407ffb:	xlat   BYTE PTR ds:[ebx]
  407ffc:	xor    DWORD PTR [eax+0x7e1cbda7],ebx
  408002:	and    ecx,DWORD PTR [edx+0x5584db5a]
  408008:	in     eax,dx
  408009:	neg    BYTE PTR [esi-0x1e182879]
  40800f:	jmp    0x408002
  408011:	(bad)  
  408012:	cs inc edi
  408014:	clc    
  408015:	sub    ebx,DWORD PTR ds:0x98a002c4
  40801b:	add    eax,0xa34ecc60
  408020:	int3   
  408021:	cdq    
  408022:	push   edi
  408023:	hlt    
  408024:	push   edx
  408025:	outs   dx,BYTE PTR ds:[esi]
  408026:	repnz jmp 0x67c8:0x7892b06f
  40802e:	enter  0xda00,0x90
  408032:	test   eax,0xfa9f2682
  408037:	push   ecx
  408038:	stc    
  408039:	add    ch,BYTE PTR [edi]
  40803b:	xchg   ecx,eax
  40803c:	xor    DWORD PTR [ebp+0x69],esp
  40803f:	ins    DWORD PTR es:[edi],dx
  408040:	lods   al,BYTE PTR ds:[esi]
  408041:	pop    ebx
  408042:	add    DWORD PTR [eax+0x5e],0x58e34bb8
  408049:	mov    cl,0x33
  40804b:	push   ebp
  40804c:	mov    ebx,0xc1743d9a
  408051:	xor    BYTE PTR [ebp+0x43be490b],cl
  408057:	push   0x6f
  408059:	jge    0x40803d
  40805b:	and    al,0x12
  40805d:	jns    0x40801b
  40805f:	xlat   BYTE PTR ds:[ebx]
  408060:	in     eax,dx
  408061:	mov    BYTE PTR [ebx+0x37],bh
  408064:	or     al,0x5b
  408066:	dec    ebp
  408067:	fcomp  QWORD PTR [ebx]
  408069:	shl    DWORD PTR [eax-0x3d2bf92e],0x80
  408070:	or     DWORD PTR [edx+0x38dbcd3a],ebx
  408076:	cmp    BYTE PTR [edi-0x61],dh
  408079:	fld    QWORD PTR [ecx+0x42]
  40807c:	sar    DWORD PTR [edi],1
  40807e:	pop    esp
  40807f:	leave  
  408080:	mov    ch,bl
  408082:	push   0x50093314
  408087:	aad    0x2e
  408089:	mov    esi,0x54c570d
  40808e:	jge    0x408013
  408090:	loope  0x4080e8
  408092:	sti    
  408093:	sub    eax,0x75fc5967
  408098:	push   ecx
  408099:	shl    BYTE PTR [edi],cl
  40809b:	pusha  
  40809c:	mov    al,0xcb
  40809e:	test   BYTE PTR [eax-0x1e],0xf1
  4080a2:	xchg   edx,eax
  4080a3:	dec    esp
  4080a4:	sbb    al,0xdd
  4080a6:	sub    DWORD PTR [eax],esi
  4080a8:	add    esi,0x7f
  4080ab:	jle    0x408127
  4080ad:	add    BYTE PTR [edi+0x44],bl
  4080b0:	leave  
  4080b1:	mov    cl,0x9c
  4080b3:	mov    dh,0x42
  4080b5:	or     DWORD PTR [ecx],esp
  4080b7:	aad    0x41
  4080b9:	jnp    0x4080a7
  4080bb:	dec    ebp
  4080bc:	mov    eax,0x518b8d50
  4080c1:	sub    al,0x8b
  4080c3:	test   bl,bl
  4080c5:	jno    0x408092
  4080c7:	daa    
  4080c8:	sub    al,0x2d
  4080ca:	rcl    BYTE PTR [ecx+0x54],1
  4080cd:	enter  0x373c,0x62
  4080d1:	jmp    0x346d2c7
  4080d6:	ret    
  4080d7:	fstp   DWORD PTR [esi+0x63f5ca2f]
  4080dd:	ror    DWORD PTR [esi+0x4ddf321],1
  4080e3:	jnp    0x4080ec
  4080e5:	jp     0x408115
  4080e7:	inc    ebx
  4080e8:	push   ss
  4080e9:	push   ds
  4080ea:	jbe    0x408098
  4080ec:	mov    bh,0x1d
  4080ee:	jbe    0x408153
  4080f0:	inc    eax
  4080f2:	jmp    0x4080c1
  4080f4:	fucomi st,st(4)
  4080f6:	pop    ds
  4080f7:	leave  
  4080f8:	xchg   BYTE PTR [ebx+0x1fbadb3],dh
  4080fe:	sbb    ebx,DWORD PTR [edx+0x38]
  408101:	adc    BYTE PTR [ebx-0x72a6668b],0x34
  408108:	adc    DWORD PTR [esi],0xe626be9
  40810e:	push   ss
  40810f:	xchg   esi,eax
  408110:	aam    0x65
  408112:	push   edx
  408113:	jecxz  0x4080db
  408115:	ss xor al,0x33
  408118:	ja     0x4080dc
  40811a:	outs   dx,DWORD PTR ds:[esi]
  40811b:	cwde   
  40811c:	sub    eax,0x675e4829
  408121:	adc    DWORD PTR fs:[edi],eax
  408124:	jge    0x40812f
  408126:	clc    
  408127:	ins    BYTE PTR es:[edi],dx
  408128:	pop    ebp
  408129:	popf   
  40812a:	adc    DWORD PTR [esi-0x8],ecx
  40812d:	test   eax,0xe43e90b2
  408132:	(bad)  
  408133:	inc    ebx
  408134:	outs   dx,DWORD PTR ds:[esi]
  408135:	retf   
  408136:	fnstsw WORD PTR [esi+0x3d]
  408139:	pop    eax
  40813a:	jnp    0x40811e
  40813c:	or     eax,0x81f7d4ff
  408141:	xchg   ecx,eax
  408142:	add    ah,al
  408144:	in     al,dx
  408145:	or     eax,0xee10674
  40814a:	xchg   edx,eax
  40814b:	fwait
  40814c:	inc    ebx
  40814d:	xor    DWORD PTR [ecx],ebp
  40814f:	adc    DWORD PTR [eax+0x7a8f5fff],esi
  408155:	add    ah,BYTE PTR [ebx+0x1]
  408158:	imul   esp,eax,0x17
  40815b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40815c:	nop
  40815d:	mov    bh,0xc3
  40815f:	aad    0x5b
  408161:	push   eax
  408162:	inc    esp
  408163:	adc    BYTE PTR [eax+edi*8+0x2a8541e7],cl
  40816a:	ficomp DWORD PTR [edx]
  40816c:	jge    0x408141
  40816e:	mov    ecx,0x8cb9a752
  408173:	dec    ebx
  408174:	mov    ds:0xb71c0576,eax
  408179:	xor    al,0x18
  40817b:	and    dl,bh
  40817d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40817e:	jge    0x4081b4
  408180:	scas   al,BYTE PTR es:[edi]
  408181:	je     0x408161
  408183:	add    BYTE PTR ds:0x5eae7c08,0x79
  40818a:	fstp   QWORD PTR [edi+0x1f]
  40818d:	push   ds
  40818e:	mov    al,ds:0x5df433f1
  408193:	fsub   st,st(6)
  408195:	jbe    0x408150
  408197:	aaa    
  408198:	mov    edx,DWORD PTR [esi]
  40819a:	popa   
  40819b:	xchg   edi,eax
  40819c:	ja     0x4081b8
  40819e:	jno    0x408202
  4081a0:	in     eax,0xd4
  4081a2:	rol    BYTE PTR [eax-0x74],1
  4081a5:	ret    0xeb9e
  4081a8:	inc    edx
  4081a9:	xchg   ecx,eax
  4081aa:	hlt    
  4081ab:	(bad)  
  4081ac:	mov    al,0xf6
  4081ae:	mov    ah,0xd2
  4081b0:	(bad)  
  4081b1:	fcmovbe st,st(7)
  4081b3:	pop    es
  4081b4:	pop    ebx
  4081b5:	or     BYTE PTR [ebx-0x10],dh
  4081b8:	test   eax,0x2eea9622
  4081be:	ror    DWORD PTR [edi-0x2],cl
  4081c1:	jne    0x40821b
  4081c3:	pop    ebp
  4081c4:	adc    BYTE PTR [eax-0x6f0c689],ah
  4081ca:	lds    eax,FWORD PTR [ecx-0x1573cad6]
  4081d0:	mov    WORD PTR [edi],ss
  4081d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081d3:	xor    BYTE PTR [ecx+0x2de5c7fb],dh
  4081d9:	push   esi
  4081da:	enter  0x1d06,0xa0
  4081de:	or     eax,0x5253180b
  4081e3:	ds dec eax
  4081e5:	adc    DWORD PTR [edi-0x62],ebx
  4081e8:	ds ds inc edi
  4081eb:	or     eax,0x8d7334cf
  4081f0:	push   edx
  4081f1:	sahf   
  4081f2:	add    al,0xf2
  4081f4:	sbb    bh,al
  4081f6:	fsubr  st(7),st
  4081f8:	xchg   ecx,eax
  4081f9:	lea    eax,[eax]
  4081fb:	or     eax,0x4a0a1d61
  408200:	dec    ebp
  408201:	mov    WORD PTR [ecx],gs
  408203:	push   ebx
  408204:	xchg   DWORD PTR [ecx-0x72e802ec],eax
  40820a:	cmp    BYTE PTR [ebx-0x71],bl
  40820d:	jns    0x4081d4
  40820f:	mov    eax,0x78bce554
  408214:	aad    0x40
  408216:	inc    ebp
  408217:	in     eax,dx
  408218:	xchg   edx,eax
  408219:	enter  0x653,0x4d
  40821d:	adc    eax,0xcf50b684
  408222:	xchg   esp,eax
  408223:	outs   dx,BYTE PTR ds:[esi]
  408224:	jmp    0xcc2f178
  408229:	push   0x4
  40822b:	jb     0x4081c6
  40822d:	aad    0xd2
  40822f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408230:	(bad)  
  408231:	out    0xd4,eax
  408233:	jae    0x408214
  408235:	test   al,0xa8
  408237:	lods   al,BYTE PTR ds:[esi]
  408238:	sbb    al,0x83
  40823a:	sbb    bl,dh
  40823c:	dec    edi
  40823d:	jmp    0x4081d0
  40823f:	imul   edi,DWORD PTR [edi-0x2a],0x25
  408243:	in     eax,0x15
  408245:	sub    eax,0xdac952d8
  40824a:	popf   
  40824b:	mov    ch,0x4a
  40824d:	loop   0x40826d
  40824f:	lahf   
  408250:	fadd   st,st(0)
  408252:	dec    ebp
  408253:	cld    
  408254:	in     al,dx
  408255:	sti    
  408256:	aaa    
  408257:	fxch   st(1)
  408259:	in     al,0x63
  40825b:	shr    BYTE PTR [edx-0x2cdf8a16],1
  408261:	clc    
  408262:	push   es
  408263:	clc    
  408264:	xchg   dl,al
  408266:	ins    BYTE PTR es:[edi],dx
  408267:	adc    DWORD PTR [ecx-0x734e112b],0x3b18b375
  408271:	mov    eax,0xa52fe0ee
  408276:	and    dl,BYTE PTR [ebx+esi*8]
  408279:	js     0x40826e
  40827b:	jg     0x408202
  40827d:	repnz (bad) 
  40827f:	imul   DWORD PTR [ecx+ecx*4]
  408282:	cmp    ch,BYTE PTR [ebp-0x14]
  408285:	xor    al,0x51
  408287:	adc    al,BYTE PTR [ecx+edx*2-0x2b]
  40828b:	pop    ss
  40828c:	xor    esp,0xce3b8470
  408292:	outs   dx,BYTE PTR ds:[esi]
  408293:	jne    0x4082d2
  408295:	inc    edx
  408296:	call   0xd34b:0x73b951be
  40829d:	dec    eax
  40829e:	gs loope 0x408314
  4082a1:	pop    es
  4082a2:	(bad)  
  4082a3:	cld    
  4082a4:	pop    ebx
  4082a5:	sub    cl,ch
  4082a7:	cmp    ebx,ebx
  4082a9:	xchg   esp,eax
  4082aa:	repnz mul DWORD PTR [edx+0x3e932c23]
  4082b1:	popf   
  4082b2:	mov    esp,0xb7453c64
  4082b7:	gs xchg esi,eax
  4082b9:	fisttp DWORD PTR [edi+eiz*1-0x2be82db1]
  4082c0:	dec    eax
  4082c1:	cmp    eax,0xd2587efc
  4082c6:	sub    BYTE PTR [esi],ch
  4082c8:	sbb    eax,0xa7d0fa86
  4082cd:	fld    TBYTE PTR [ecx+0x5]
  4082d0:	mov    ?,eax
  4082d2:	lods   eax,DWORD PTR ds:[esi]
  4082d3:	push   esp
  4082d4:	xor    bl,BYTE PTR [si+0x6a55]
  4082d9:	mov    eax,ds:0xf138d447
  4082de:	inc    ebp
  4082df:	add    eax,0x12ffbf34
  4082e4:	mov    WORD PTR [ecx+ecx*2],ss
  4082e7:	pop    esp
  4082e8:	mov    ch,0xec
  4082ea:	int    0x36
  4082ec:	jbe    0x4082e5
  4082ee:	push   esp
  4082f0:	enter  0xfeb0,0x6f
  4082f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082f5:	inc    esp
  4082f6:	add    DWORD PTR [ecx-0x770c6d2d],ebp
  4082fc:	cmp    ebp,edx
  4082fe:	mov    dl,0x69
  408300:	std    
  408301:	out    0x50,al
  408303:	push   cs
  408304:	pop    es
  408305:	sub    eax,0xbf162aea
  40830a:	cld    
  40830b:	pop    eax
  40830c:	mov    dl,0xd7
  40830e:	ret    
  40830f:	lahf   
  408310:	cs jae 0x408375
  408313:	mov    bl,ch
  408315:	pop    edx
  408316:	dec    ebp
  408317:	in     eax,0x51
  408319:	and    edx,DWORD PTR [edi+0x44847dd4]
  40831f:	cld    
  408320:	(bad)  
  408321:	xor    al,0x13
  408323:	adc    BYTE PTR ds:[edi+0x63],ah
  408327:	jecxz  0x4082cb
  408329:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40832b:	icebp  
  40832c:	outs   dx,BYTE PTR ds:[esi]
  40832d:	mov    ?,edi
  40832f:	inc    edx
  408330:	mov    ?,esi
  408332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408333:	nop
  408334:	cmp    DWORD PTR [ebx+0x62],0x65
  408338:	jl     0x4083a2
  40833a:	add    cx,dx
  40833d:	mov    dh,0xc8
  40833f:	or     DWORD PTR [ecx],edi
  408341:	bound  ebx,QWORD PTR [ebp+edi*8-0x3e]
  408345:	jmp    0x4227cf3b
  40834a:	inc    esp
  40834c:	pop    eax
  40834d:	sub    DWORD PTR [edx],ebx
  40834f:	mov    ah,BYTE PTR [ecx]
  408351:	mov    edi,0xd5f68852
  408356:	xchg   esi,eax
  408357:	call   0x6dee:0xc58480f2
  40835e:	stc    
  40835f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408360:	mov    dh,0xca
  408362:	sub    bl,dh
  408364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408365:	mov    bh,0xce
  408367:	mov    ch,0x60
  408369:	je     0x408351
  40836b:	(bad)  
  40836c:	adc    ch,BYTE PTR [ebp+ecx*1-0x49]
  408370:	es push eax
  408372:	jg     0x408336
  408374:	push   ebp
  408375:	xor    ebx,DWORD PTR [ecx-0x20ba14a2]
  40837b:	mov    edi,0x4d30b0cb
  408380:	fstp   TBYTE PTR [esi-0x718c1fee]
  408386:	dec    edi
  408387:	sub    BYTE PTR [eax-0x28],bh
  40838a:	stos   BYTE PTR es:[edi],al
  40838b:	sti    
  40838c:	fwait
  40838d:	and    BYTE PTR [edi+0x60fed2c1],0x8c
  408394:	cdq    
  408395:	rcl    BYTE PTR [ebx],0x62
  408398:	(bad)
  40839b:	test   al,0xcb
  40839d:	inc    ebx
  40839e:	ja     0x408355
  4083a0:	mov    edx,0xccde766c
  4083a5:	dec    esp
  4083a6:	dec    ebx
  4083a7:	enter  0x507b,0xa3
  4083ab:	xchg   ebp,eax
  4083ac:	out    0x3f,al
  4083ae:	dec    edi
  4083af:	loope  0x408355
  4083b1:	jmp    0x2e429c9
  4083b6:	(bad)  
  4083b7:	xchg   BYTE PTR [ecx+ebx*8],al
  4083ba:	jnp    0x408377
  4083bc:	add    dl,BYTE PTR [edx+0x5e]
  4083bf:	addr16 or al,0xc9
  4083c2:	repnz mov dh,0x26
  4083c5:	push   0x2d
  4083c7:	sbb    BYTE PTR [ebp-0x26],dl
  4083ca:	add    ebp,ebp
  4083cc:	int3   
  4083cd:	das    
  4083ce:	jne    0x4083c0
  4083d0:	inc    ecx
  4083d1:	out    dx,al
  4083d2:	test   ebp,ecx
  4083d4:	or     ch,bl
  4083d6:	ficom  DWORD PTR [edi*2-0x25565722]
  4083dd:	cmp    al,0x7e
  4083df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083e0:	jecxz  0x4083b4
  4083e2:	mov    ?,WORD PTR [edi+0x495ff89c]
  4083e8:	cld    
  4083e9:	inc    edx
  4083ea:	stc    
  4083eb:	jecxz  0x40845c
  4083ed:	mov    eax,ds:0x8af12229
  4083f2:	out    0x6d,eax
  4083f4:	jb     0x4083c4
  4083f6:	mov    ch,0x30
  4083f8:	je     0x4083c1
  4083fa:	push   ss
  4083fb:	mov    ecx,0x379aff30
  408400:	push   ds
  408401:	xchg   ebp,eax
  408402:	repnz pop eax
  408404:	pushf  
  408405:	iret   
  408406:	and    al,0x7a
  408408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408409:	xchg   ecx,eax
  40840a:	inc    eax
  40840b:	jo     0x408471
  40840d:	sub    bh,BYTE PTR [ecx-0x56d416e1]
  408413:	pop    ss
  408414:	icebp  
  408415:	jge    0x408487
  408417:	inc    esi
  408418:	push   eax
  408419:	xor    al,0xf9
  40841b:	dec    edx
  40841c:	cmp    BYTE PTR [ebp+0xb],al
  40841f:	sbb    al,0x79
  408421:	(bad)
  408425:	in     al,dx
  408426:	fsub   QWORD PTR [edx+edx*1+0x26]
  40842a:	pop    ebx
  40842b:	sti    
  40842c:	cmp    al,0x11
  40842e:	call   0x6500:0x1983b5c0
  408435:	or     DWORD PTR [edi-0x711cc636],0xffffffa4
  40843c:	jg     0x4084ad
  40843e:	inc    edi
  40843f:	lea    ebp,[esi]
  408441:	and    al,0x47
  408443:	sbb    DWORD PTR [esi],edi
  408445:	cmc    
  408446:	outs   dx,DWORD PTR ds:[esi]
  408447:	pop    esp
  408448:	sti    
  408449:	out    0xb,al
  40844b:	push   cs
  40844c:	stos   DWORD PTR es:[edi],eax
  40844d:	dec    ecx
  40844e:	dec    edx
  40844f:	scas   ax,WORD PTR es:[edi]
  408451:	dec    ecx
  408452:	or     DWORD PTR [edi],ebx
  408454:	pop    ebx
  408455:	cdq    
  408456:	sub    eax,0x409e079b
  40845b:	or     eax,0x89b6fe79
  408460:	jno    0x4083f6
  408462:	hlt    
  408463:	mov    ds:0x2786b5d1,al
  408468:	imul   eax,DWORD PTR [esi-0x2f],0xfca6852c
  40846f:	mov    ds:0xdae22757,eax
  408474:	add    BYTE PTR [ebx-0x648b03c6],al
  40847a:	inc    ebx
  40847b:	jae    0x408486
  40847d:	sbb    eax,0x93dbd05f
  408482:	mov    esp,0xf21607a8
  408487:	repz push 0x554701d9
  40848d:	ja     0x4084c8
  40848f:	sar    BYTE PTR [ecx+0x0],cl
  408492:	dec    ebx
  408493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408494:	retf   0xbb51
  408497:	add    eax,0x1abe27e3
  40849c:	xlat   BYTE PTR ds:[ebx]
  40849d:	pusha  
  40849e:	fwait
  40849f:	push   ss
  4084a0:	(bad)  
  4084a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084a2:	push   eax
  4084a3:	pop    ebp
  4084a4:	or     ch,BYTE PTR [ebp+ebx*4-0x625dadcd]
  4084ab:	(bad)  
  4084ac:	(bad)  
  4084ad:	adc    cl,BYTE PTR [edx]
  4084af:	mov    ecx,0x7d82e716
  4084b4:	pop    es
  4084b5:	mov    ecx,0x6c8aa470
  4084ba:	mov    ds:0xce5a0cec,eax
  4084bf:	scas   eax,DWORD PTR es:[edi]
  4084c0:	rcl    DWORD PTR [ecx-0x5],cl
  4084c3:	mov    al,0xd5
  4084c5:	jle    0x408458
  4084c7:	cmp    al,0x39
  4084c9:	loop   0x40848d
  4084cb:	aas    
  4084cc:	adc    ebp,DWORD PTR [ecx-0x76]
  4084cf:	adc    ch,BYTE PTR [edi+edx*4]
  4084d2:	xor    DWORD PTR [ecx+0x39],ebx
  4084d5:	jp     0x4084c0
  4084d7:	and    BYTE PTR [ecx],dl
  4084d9:	push   edx
  4084da:	jne    0x4084e7
  4084dc:	aam    0x61
  4084de:	push   esi
  4084df:	aaa    
  4084e0:	cmp    DWORD PTR [edx],0xc5d892ab
  4084e6:	push   ebp
  4084e7:	xor    cl,BYTE PTR [esi-0x65d92995]
  4084ed:	pusha  
  4084ee:	xor    eax,0x9f5afd3e
  4084f3:	jne    0x4084e1
  4084f5:	and    ah,ah
  4084f7:	adc    bh,dl
  4084f9:	or     ch,BYTE PTR [ecx]
  4084fb:	out    0x6a,eax
  4084fd:	pop    eax
  4084fe:	ja     0x4084c5
  408500:	fwait
  408501:	pop    edi
  408502:	adc    BYTE PTR [esi],cl
  408504:	push   es
  408505:	xor    BYTE PTR [eax+0x4b],al
  408508:	adc    ebx,ecx
  40850a:	mul    DWORD PTR [edi]
  40850c:	mov    edi,0xff2b5c28
  408511:	leave  
  408512:	popf   
  408513:	xchg   DWORD PTR [esi+0x2ec67f0c],eax
  408519:	dec    ebx
  40851a:	nop
  40851b:	xor    edi,DWORD PTR [esi+0x17]
  40851e:	stc    
  40851f:	mov    WORD PTR [eax-0x72],gs
  408522:	jl     0x4084d4
  408524:	test   al,0x94
  408526:	rcr    esp,1
  408528:	xchg   ebp,esp
  40852a:	pusha  
  40852b:	test   al,0x5d
  40852d:	fst    QWORD PTR [ebx-0xb]
  408530:	add    dl,bh
  408532:	test   al,0x40
  408535:	inc    esp
  408536:	and    bl,dl
  408538:	xlat   BYTE PTR ds:[ebx]
  408539:	ins    BYTE PTR es:[edi],dx
  40853a:	xor    BYTE PTR [ecx],cl
  40853c:	sbb    eax,0xcab29a4d
  408541:	or     eax,DWORD PTR [edi+ecx*8-0x772fc46c]
  408548:	or     bl,cl
  40854a:	adc    BYTE PTR [eax+0x6c733e5],dl
  408550:	mov    ebx,0x876b982
  408555:	pop    edi
  408556:	push   edi
  408557:	js     0x40850a
  408559:	aad    0x49
  40855b:	mov    fs,WORD PTR [edx-0x765c232e]
  408561:	sbb    bh,BYTE PTR [ebx-0x67b70f2c]
  408567:	add    ebx,esi
  408569:	mov    al,ds:0x5d784fde
  40856e:	mov    ebp,DWORD PTR [eax+0x7a682d5c]
  408574:	xor    DWORD PTR ds:0x61483f8a,edx
  40857a:	xor    ebx,DWORD PTR [ebx]
  40857c:	(bad)
  40857f:	pop    eax
  408580:	cdq    
  408581:	nop
  408582:	ins    BYTE PTR es:[edi],dx
  408583:	call   0x4328be1e
  408588:	addr16 dec esi
  40858a:	pop    ss
  40858b:	mov    cl,0x99
  40858d:	pmulhw mm5,QWORD PTR [esi-0x29]
  408591:	ja     0x408555
  408593:	dec    ecx
  408594:	shl    DWORD PTR [edx],0xbf
  408597:	inc    esp
  408598:	mov    WORD PTR [ecx+esi*2+0x5df3e98c],ss
  40859f:	xchg   ebp,eax
  4085a0:	mov    bh,dl
  4085a2:	add    esi,eax
  4085a4:	in     al,dx
  4085a5:	test   al,0xd
  4085a7:	cdq    
  4085a8:	in     eax,0x73
  4085aa:	cmovbe edi,DWORD PTR ds:0xb6774bf6
  4085b1:	xchg   ecx,ebp
  4085b3:	cmp    ah,BYTE PTR ds:0xc5826281
  4085b9:	call   FWORD PTR [edx-0x95dd861]
  4085bf:	fmul   st(6),st
  4085c1:	repz fistp WORD PTR [esi-0x28c7e5ad]
  4085c8:	jle    0x4085cc
  4085ca:	xchg   esp,eax
  4085cb:	mov    dl,0x4f
  4085cd:	outs   dx,DWORD PTR ds:[esi]
  4085ce:	xchg   ebp,eax
  4085cf:	leave  
  4085d0:	in     al,dx
  4085d1:	shl    al,cl
  4085d3:	sub    bh,BYTE PTR [esi+0x46a26220]
  4085d9:	jmp    0x12bbe6ad
  4085de:	mov    WORD PTR [ebp-0xcd57760],fs
  4085e4:	cmp    ah,BYTE PTR [edx]
  4085e6:	das    
  4085e7:	aam    0x85
  4085e9:	fsub   st,st(6)
  4085eb:	cmc    
  4085ec:	mov    dh,0x37
  4085ee:	add    ebx,DWORD PTR [ecx]
  4085f0:	mov    dl,0xad
  4085f2:	lahf   
  4085f3:	retf   
  4085f4:	lods   eax,DWORD PTR ds:[esi]
  4085f5:	rcl    BYTE PTR [eax+0x69],cl
  4085f8:	(bad)  
  4085f9:	(bad)  
  4085fa:	cdq    
  4085fb:	int    0x3a
  4085fd:	cs xor al,0x6e
  408600:	mov    ah,0x66
  408602:	aam    0xc7
  408604:	sbb    eax,0xe4a2b2ef
  408609:	test   eax,0x5e13ceda
  40860e:	mov    esi,0xf429fbc6
  408613:	jmp    0x6107cd87
  408618:	adc    BYTE PTR ds:0xa35c5fc7,cl
  40861e:	out    0x48,al
  408620:	les    edx,FWORD PTR [edx-0x8]
  408623:	push   ecx
  408624:	shr    DWORD PTR [edx+ebp*2],cl
  408627:	sbb    al,0x4c
  408629:	scas   al,BYTE PTR es:[edi]
  40862a:	imul   eax,DWORD PTR [eax-0x22a5d8dd],0x646361b6
  408634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408635:	pop    ecx
  408636:	mov    eax,0x6083b431
  40863b:	fwait
  40863c:	lds    ebx,FWORD PTR [ecx+0x79]
  40863f:	sbb    al,0xab
  408641:	add    al,0xd6
  408643:	mov    eax,ds:0x8d5ac7b1
  408648:	sbb    ebx,DWORD PTR [edx+0x64]
  40864b:	xchg   DWORD PTR [edi-0xf],edi
  40864e:	ret    
  40864f:	pop    ds
  408650:	sub    al,0x66
  408652:	push   ebp
  408653:	shl    BYTE PTR [eax-0x40c698ce],cl
  408659:	pop    eax
  40865a:	call   0x7efae368
  40865f:	les    edi,FWORD PTR [edi+0x4055335f]
  408665:	push   0xa
  408667:	jecxz  0x40862d
  408669:	and    dh,al
  40866b:	pop    esp
  40866c:	mov    WORD PTR [ebp+0x70],?
  40866f:	and    al,0x77
  408671:	out    dx,eax
  408672:	add    al,0xf3
  408674:	push   edx
  408675:	lods   eax,DWORD PTR ds:[esi]
  408676:	inc    eax
  408677:	jecxz  0x4086b5
  408679:	hlt    
  40867a:	scas   al,BYTE PTR es:[edi]
  40867b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40867c:	sbb    DWORD PTR [ecx-0x23],eax
  40867f:	mov    bl,0xaf
  408681:	inc    ebp
  408682:	mov    ah,0xf6
  408684:	pop    edi
  408685:	(bad)  
  408686:	je     0x40864a
  408688:	sub    DWORD PTR [esi],eax
  40868a:	stc    
  40868b:	dec    ebx
  40868c:	das    
  40868d:	loopne 0x4086de
  40868f:	outs   dx,DWORD PTR ds:[esi]
  408690:	outs   dx,DWORD PTR ds:[esi]
  408691:	pop    ss
  408692:	ret    
  408693:	xor    BYTE PTR [esp+ecx*4+0x7f15d8c8],ch
  40869a:	test   DWORD PTR [ecx-0x23],0x77fc0546
  4086a1:	div    BYTE PTR [ebx]
  4086a3:	adc    bh,BYTE PTR [edx]
  4086a5:	xchg   ecx,eax
  4086a6:	js     0x408685
  4086a8:	cmp    eax,0xf55adf68
  4086ad:	fbld   TBYTE PTR fs:[ecx]
  4086b0:	jns    0x4086f3
  4086b2:	jmp    0xd4960f2a
  4086b7:	mov    ebp,0xf9c179fa
  4086bc:	fild   DWORD PTR [ecx+0x71e4864e]
  4086c2:	push   ds
  4086c3:	sar    BYTE PTR [esi-0x74],0xac
  4086c7:	mov    bl,0xd1
  4086c9:	jb     0x40865d
  4086cb:	dec    edx
  4086cc:	cmp    eax,0x4b04eeca
  4086d1:	inc    eax
  4086d2:	xor    al,0x43
  4086d4:	call   DWORD PTR [edi-0x6c51ec24]
  4086da:	xlat   BYTE PTR ds:[ebx]
  4086db:	(bad)  [esi+0x324203f3]
  4086e1:	xor    al,0xf5
  4086e3:	mov    eax,ds:0x44875262
  4086e8:	call   0xf2af:0xec06f727
  4086ef:	push   ss
  4086f0:	call   0x6a79cad6
  4086f5:	or     BYTE PTR [edx],cl
  4086f7:	test   al,0x52
  4086f9:	sub    al,0xc4
  4086fb:	test   BYTE PTR [ecx+0x70],cl
  4086fe:	pop    eax
  4086ff:	add    DWORD PTR [ecx],0x2810fb35
  408705:	dec    esp
  408706:	or     al,BYTE PTR [ecx+0x74]
  408709:	cmp    eax,0x81d4031b
  40870e:	inc    ebp
  40870f:	fdiv   st(6),st
  408711:	aad    0xbb
  408713:	pop    es
  408714:	mov    ebp,0xfdbd9ef7
  408719:	out    dx,eax
  40871a:	adc    al,0x43
  40871c:	mov    ch,0xba
  40871e:	outs   dx,DWORD PTR ds:[esi]
  40871f:	pop    esp
  408720:	and    ebp,edx
  408722:	push   0x5
  408724:	sub    DWORD PTR [ebp+0x23901c3c],ecx
  40872a:	mov    eax,DWORD PTR [edx-0x641a718c]
  408730:	mov    ch,0xce
  408732:	push   esp
  408733:	aaa    
  408734:	fidivr WORD PTR [ebp-0x7]
  408737:	rcl    BYTE PTR [eax+0x5d],cl
  40873a:	xor    al,0x62
  40873c:	xchg   esi,eax
  40873d:	or     al,0x2f
  40873f:	jnp    0x4086e2
  408741:	push   es
  408742:	out    0xd9,eax
  408744:	xor    dh,cl
  408746:	and    esp,edx
  408748:	mov    ds:0x7fc939a2,eax
  40874d:	aam    0x20
  40874f:	sub    DWORD PTR [edx],eax
  408751:	sti    
  408752:	mov    DWORD PTR [ebp+0x7aead53d],esi
  408758:	jnp    0x408706
  40875a:	imul   ecx,DWORD PTR [edi],0x6e883b3b
  408760:	mov    dl,0xa6
  408762:	jecxz  0x40876e
  408764:	mov    ch,0xa1
  408766:	mov    edi,0x12eb5d29
  40876b:	push   0xfffffff5
  40876d:	jno    0x408769
  40876f:	jl     0x408700
  408771:	jne    0x4087cb
  408773:	outs   dx,DWORD PTR ds:[esi]
  408774:	push   esp
  408775:	lods   eax,DWORD PTR gs:[esi]
  408777:	sub    bl,ch
  408779:	(bad)  [ebx]
  40877b:	xchg   esp,eax
  40877c:	in     al,dx
  40877d:	fs sub eax,0x7a46be1b
  408783:	shl    DWORD PTR [edx-0x15],cl
  408786:	mov    ah,BYTE PTR [ebx]
  408788:	cs xchg ecx,eax
  40878a:	sahf   
  40878b:	imul   edi,DWORD PTR [eax],0xffffffb4
  40878e:	push   es
  40878f:	mov    ch,ah
  408791:	std    
  408792:	retf   0x9a5c
  408795:	or     eax,0xd028a9ff
  40879a:	jge    0x40878d
  40879c:	xchg   esi,eax
  40879d:	inc    esi
  40879e:	push   ebp
  40879f:	mov    esi,0x8a1166b4
  4087a4:	add    BYTE PTR [edi],ah
  4087a6:	hlt    
  4087a7:	push   ebp
  4087a8:	hlt    
  4087a9:	bnd jge 0x408751
  4087ac:	outs   dx,DWORD PTR ds:[esi]
  4087ad:	hlt    
  4087ae:	aas    
  4087af:	retf   
  4087b0:	out    dx,eax
  4087b1:	pop    ecx
  4087b2:	aas    
  4087b3:	mov    bh,0xa7
  4087b5:	in     eax,0x10
  4087b7:	mov    edi,0x413bcb87
  4087bc:	or     al,0xa5
  4087be:	lods   eax,DWORD PTR ds:[esi]
  4087bf:	sbb    al,BYTE PTR [edx+0x38]
  4087c2:	cmp    edi,esp
  4087c4:	cmp    cl,BYTE PTR [ebp-0x500b8e3]
  4087ca:	cmc    
  4087cb:	test   DWORD PTR [edi-0x5b56f2e9],eax
  4087d1:	ss inc ecx
  4087d3:	sbb    al,0x6a
  4087d5:	pop    eax
  4087d6:	out    0x50,eax
  4087d8:	fwait
  4087d9:	ja     0x4087fd
  4087db:	push   0x56
  4087dd:	(bad)  
  4087de:	dec    DWORD PTR [eax-0x74ed34a8]
  4087e4:	inc    DWORD PTR [esi-0x13]
  4087e7:	push   ds
  4087e8:	cld    
  4087e9:	jl     0x408835
  4087eb:	ins    BYTE PTR es:[edi],dx
  4087ec:	dec    esi
  4087ed:	lock push ebx
  4087ef:	and    eax,0x819ab12e
  4087f4:	and    al,0x6a
  4087f6:	sub    esp,eax
  4087f8:	sti    
  4087f9:	jo     0x408804
  4087fb:	scas   al,BYTE PTR es:[edi]
  4087fc:	fs aad 0x16
  4087ff:	inc    ecx
  408800:	pop    ss
  408801:	hlt    
  408802:	sbb    al,0xf5
  408804:	xchg   esi,eax
  408805:	inc    edx
  408806:	je     0x4087d8
  408808:	xor    BYTE PTR [edi-0x3f],dh
  40880b:	jmp    0x562e8bf9
  408810:	xor    BYTE PTR [edi+0xf],cl
  408813:	js     0x408863
  408815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408816:	ja     0x408798
  408818:	test   bl,0x7d
  40881b:	fcomp  st(4)
  40881d:	pop    ecx
  40881e:	adc    cl,dh
  408820:	stos   BYTE PTR es:[edi],al
  408821:	mov    eax,0x3ebb154c
  408826:	mov    esi,0xf0ef279e
  40882c:	xor    eax,0xbcd548e0
  408831:	mov    eax,0x2235cde7
  408836:	or     bh,dh
  408838:	dec    ecx
  408839:	imul   edi,DWORD PTR [eax+ebp*1],0x411654b3
  408840:	adc    edx,DWORD PTR [edi]
  408842:	mov    ds:0x4c59b836,al
  408847:	sub    eax,ecx
  408849:	rcr    BYTE PTR [edx+0x2bed5ab7],1
  40884f:	sub    al,0x22
  408851:	scas   al,BYTE PTR es:[edi]
  408852:	repz xor eax,0x56fde887
  408858:	xor    BYTE PTR [ecx+0x7b],ah
  40885b:	enter  0x4887,0x58
  40885f:	pop    edi
  408860:	pop    ebx
  408861:	call   0x9bbebece
  408866:	lods   eax,DWORD PTR ds:[esi]
  408867:	aas    
  408868:	jl     0x408874
  40886a:	sbb    al,0x19
  40886c:	hlt    
  40886d:	ror    BYTE PTR [ecx-0x16],0x8e
  408871:	outs   dx,DWORD PTR ds:[esi]
  408872:	int    0x3d
  408874:	push   0xc703c264
  408879:	or     DWORD PTR [ecx+edi*1+0x1e],esp
  40887d:	les    edx,FWORD PTR [ecx+0x3c7f7fe5]
  408883:	and    DWORD PTR [ebp-0x57],ebx
  408886:	sti    
  408887:	pop    esi
  408888:	test   BYTE PTR [edi],ch
  40888a:	adc    ebp,DWORD PTR [ebx-0x34]
  40888d:	lods   eax,DWORD PTR ds:[esi]
  40888e:	mov    al,ds:0x271002c1
  408893:	push   ss
  408894:	dec    esi
  408895:	mov    ah,0xb1
  408897:	cmp    BYTE PTR [ebx+0x54fb1f35],bl
  40889d:	lods   eax,DWORD PTR ds:[esi]
  40889e:	pop    eax
  40889f:	mov    WORD PTR [edx+0x3d],cs
  4088a2:	sbb    edi,DWORD PTR [edx-0x606d08a4]
  4088a8:	scas   eax,DWORD PTR es:[edi]
  4088a9:	dec    eax
  4088aa:	lea    eax,[ecx]
  4088ac:	jbe    0x4088bf
  4088ae:	adc    BYTE PTR [ebx-0x58],bl
  4088b1:	sub    al,0x9b
  4088b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088b4:	adc    eax,0xde9b4089
  4088b9:	push   ss
  4088ba:	fwait
  4088bb:	inc    esp
  4088bc:	mov    eax,ds:0xc62bfa5e
  4088c1:	mov    esp,0xaae73c02
  4088c6:	stos   DWORD PTR es:[edi],eax
  4088c7:	out    dx,eax
  4088c8:	pop    ebx
  4088c9:	(bad)  
  4088ca:	popa   
  4088cb:	xchg   DWORD PTR [ebp-0xa],ebp
  4088ce:	(bad)  
  4088cf:	xchg   ebx,eax
  4088d0:	xor    eax,0x55148451
  4088d5:	adc    BYTE PTR [eax-0x38],al
  4088d8:	sub    dl,BYTE PTR [ecx]
  4088da:	mov    dl,0x1d
  4088dc:	sbb    eax,0x634bad30
  4088e1:	mov    cs,WORD PTR [ecx+0x8c508fa]
  4088e7:	jnp    0x4088a3
  4088e9:	mov    eax,0x648528a5
  4088ee:	fistp  DWORD PTR [ecx]
  4088f0:	mov    esp,0xa6368945
  4088f5:	cs stos BYTE PTR es:[edi],al
  4088f7:	xor    cl,BYTE PTR [eax-0x26]
  4088fa:	shl    DWORD PTR [esi-0x6d],cl
  4088fd:	xor    edi,DWORD PTR [esi+0x4e2a58a2]
  408903:	imul   edx,DWORD PTR [edx-0x6867f274],0xcd812f61
  40890d:	arpl   WORD PTR [eax-0x24d14e7e],di
  408913:	in     al,0xa3
  408915:	popa   
  408916:	mov    gs,edi
  408918:	pop    ebp
  408919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40891a:	dec    ebp
  40891b:	sub    esi,DWORD PTR [edi+0xa9de2ef]
  408921:	sbb    eax,0x2cd7ae50
  408926:	or     al,BYTE PTR [ecx+edx*1-0x439add8c]
  40892d:	inc    edi
  40892e:	adc    al,0x65
  408930:	mov    esi,DWORD PTR [edx+esi*2-0x18cd43ae]
  408937:	cwde   
  408938:	test   DWORD PTR [esi],ebp
  40893a:	test   DWORD PTR [edi-0x64],ebx
  40893d:	dec    ebx
  40893e:	cmp    DWORD PTR [esi],esi
  408940:	idiv   DWORD PTR [edi-0x62713eaf]
  408946:	jge    0x4088cc
  408948:	rcr    dl,cl
  40894a:	mov    eax,cs
  40894c:	adc    bl,dl
  40894e:	inc    esi
  40894f:	inc    esp
  408950:	mov    esp,0xb72264ca
  408955:	mov    ah,0x3a
  408957:	(bad)  
  408958:	cld    
  408959:	cs lahf 
  40895b:	jecxz  0x40898c
  40895d:	xor    eax,0x4c1bac35
  408962:	jbe    0x4088e6
  408964:	push   ebp
  408965:	mov    ah,0x11
  408968:	in     al,0x45
  40896a:	jl     0x40898d
  40896c:	fisub  DWORD PTR [eax-0xdd336d]
  408972:	sub    dh,BYTE PTR [ecx]
  408974:	push   0xffffffec
  408976:	cld    
  408977:	out    dx,al
  408978:	push   ebp
  408979:	mov    bh,0xf
  40897b:	pop    es
  40897c:	and    eax,0x49ccf003
  408981:	and    esp,0xd9b2a166
  408987:	inc    ecx
  408988:	cmp    bh,dh
  40898a:	fistp  DWORD PTR [eax-0x2a]
  40898d:	jmp    0xe4f128ce
  408992:	dec    esi
  408993:	pop    ss
  408994:	pushf  
  408995:	or     dl,bl
  408997:	(bad)  
  408998:	sub    ah,bl
  40899a:	sbb    ebp,DWORD PTR [esp+ecx*8]
  40899d:	inc    ebp
  40899e:	jae    0x4089a6
  4089a0:	fcomp  QWORD PTR [edi]
  4089a2:	jnp    0x4089a2
  4089a4:	int3   
  4089a5:	or     al,bl
  4089a7:	mov    ds:0xbb0ffa2c,eax
  4089ac:	(bad)  
  4089ad:	loop   0x408a22
  4089af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089b0:	stc    
  4089b1:	arpl   WORD PTR [edx-0x4a49b78a],si
  4089b7:	add    BYTE PTR [edi-0x78],ch
  4089ba:	dec    edi
  4089bb:	sub    BYTE PTR [ebx+0x11ae2ce8],dl
  4089c1:	mov    ebp,0xcf43c594
  4089c6:	xchg   ebp,eax
  4089c7:	pop    ebp
  4089c8:	mov    ebp,DWORD PTR [ebx+eax*1+0x4c]
  4089cc:	jno    0x40897c
  4089ce:	scas   eax,DWORD PTR es:[edi]
  4089cf:	fistp  DWORD PTR [esi-0x6f]
  4089d2:	addr16 sahf 
  4089d4:	jle    0x4089ad
  4089d6:	jo     0x408a37
  4089d8:	lahf   
  4089d9:	stos   BYTE PTR es:[edi],al
  4089da:	loope  0x4089fb
  4089dc:	xor    dh,BYTE PTR [edi]
  4089de:	jne    0x4089ab
  4089e0:	add    al,0x2d
  4089e2:	mov    DWORD PTR [eax-0x50e0d5d2],ebx
  4089e8:	imul   ch
  4089ea:	call   0x101080a9
  4089ef:	in     al,0x33
  4089f1:	std    
  4089f2:	cld    
  4089f3:	test   eax,0xa053b198
  4089f8:	imul   edx,DWORD PTR [ebx],0xf335b904
  4089fe:	pop    ss
  4089ff:	and    al,0x82
  408a01:	arpl   WORD PTR ds:0xcc53bb7c,cx
  408a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a08:	jns    0x408a60
  408a0a:	sbb    ch,ch
  408a0c:	cmc    
  408a0d:	retf   0xbf45
  408a10:	or     al,0x64
  408a12:	in     eax,0x96
  408a14:	outs   dx,DWORD PTR ds:[esi]
  408a15:	ja     0x4089b6
  408a17:	retf   
  408a18:	dec    ebp
  408a19:	xor    al,0xc6
  408a1b:	jb     0x408a85
  408a1d:	jns    0x408a89
  408a1f:	xor    ax,0xd892
  408a23:	push   cs
  408a24:	daa    
  408a25:	setl   dh
  408a28:	mov    BYTE PTR [edi-0x1686e370],al
  408a2e:	ss inc esi
  408a30:	cmp    al,0x22
  408a32:	ins    BYTE PTR es:[edi],dx
  408a33:	xor    eax,0x411c9bde
  408a38:	pop    edx
  408a39:	sub    BYTE PTR [esi-0xa],dl
  408a3c:	int    0xb4
  408a3e:	ret    0xf5b3
  408a41:	cmp    ecx,DWORD PTR [ebp-0x66]
  408a44:	pop    es
  408a45:	add    al,0xbf
  408a47:	retf   0x41ab
  408a4a:	jo     0x408a1c
  408a4c:	or     BYTE PTR [edx],bh
  408a4e:	or     BYTE PTR [ebx+0x4a],al
  408a51:	sbb    DWORD PTR [eax],0x55
  408a54:	mov    eax,DWORD PTR [edx]
  408a56:	dec    ch
  408a58:	jg     0x408ac7
  408a5a:	dec    ebp
  408a5b:	nop
  408a5c:	shr    esi,1
  408a5e:	jb     0x4089f1
  408a60:	into   
  408a61:	jl     0x408a99
  408a63:	cdq    
  408a64:	jecxz  0x408aa2
  408a66:	pop    esi
  408a67:	or     ebx,DWORD PTR [esi+0x49e72664]
  408a6d:	dec    ebp
  408a6e:	xchg   esp,eax
  408a6f:	sbb    BYTE PTR [ecx],0xbc
  408a72:	fimul  DWORD PTR [eax]
  408a74:	jae    0x408abb
  408a76:	or     dh,BYTE PTR [eax+esi*8]
  408a79:	push   ebp
  408a7a:	mov    es,WORD PTR [eax+eax*2]
  408a7d:	xor    ebp,ebp
  408a7f:	test   BYTE PTR [ebx+0x76],bl
  408a82:	cvtps2pi mm1,xmm3
  408a85:	sbb    eax,0xfa0074f1
  408a8a:	jns    0x408a99
  408a8c:	mov    bh,0xee
  408a8e:	dec    ebx
  408a8f:	gs icebp 
  408a91:	jo     0x408ae7
  408a93:	xor    ebx,DWORD PTR [ebp-0x5bf22b96]
  408a99:	(bad)  
  408a9a:	scas   eax,DWORD PTR es:[edi]
  408a9b:	ffreep st(5)
  408a9d:	pusha  
  408a9e:	sbb    DWORD PTR [ebp-0xf27874b],esp
  408aa4:	pop    ss
  408aa5:	iret   
  408aa6:	push   ecx
  408aa7:	inc    edx
  408aa8:	sbb    ecx,DWORD PTR [eax]
  408aaa:	stc    
  408aab:	sbb    al,0xa8
  408aad:	sub    ecx,DWORD PTR [ebp-0x21b4db12]
  408ab3:	stos   BYTE PTR es:[edi],al
  408ab4:	inc    ecx
  408ab5:	in     eax,dx
  408ab6:	sub    DWORD PTR [ecx],eax
  408ab8:	jmp    0xb9ebcc65
  408abd:	push   es
  408abe:	push   edx
  408abf:	in     al,dx
  408ac0:	out    0x7c,eax
  408ac2:	jg     0x408ac4
  408ac4:	push   esp
  408ac5:	nop
  408ac6:	bound  esi,QWORD PTR [ebx+0x73]
  408ac9:	fst    DWORD PTR [ebx*1-0x53cc283a]
  408ad0:	mov    esi,0xcb81825d
  408ad5:	add    ecx,DWORD PTR [eax-0x1a1c835c]
  408adb:	mov    ebx,0x83bf2f9a
  408ae0:	sub    DWORD PTR [esi+eax*4+0x53151d61],esi
  408ae7:	mov    ch,0x59
  408ae9:	div    esi
  408aeb:	stc    
  408aec:	push   0x35
  408aee:	add    dh,BYTE PTR [ebx]
  408af0:	sti    
  408af1:	or     al,BYTE PTR ds:0xdefcff19
  408af7:	in     eax,dx
  408af8:	jle    0x408b4b
  408afa:	or     al,0xad
  408afc:	add    al,0x7f
  408afe:	jno    0x408ae6
  408b00:	repz sbb BYTE PTR [ebx+0x4fdafb83],al
  408b07:	mov    ds:0x9a0ae95d,al
  408b0c:	cli    
  408b0d:	push   edx
  408b0e:	out    dx,al
  408b0f:	jo     0x408b25
  408b11:	xor    al,BYTE PTR [ecx+eiz*4]
  408b14:	mov    ds:0xae5a720,eax
  408b19:	adc    edi,0x4157729d
  408b1f:	cmp    ebp,esi
  408b21:	out    dx,al
  408b22:	or     DWORD PTR [eax-0x23a960c1],ecx
  408b28:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408b2a:	pop    esi
  408b2b:	bound  ebp,QWORD PTR [ebx-0x209f232f]
  408b31:	sub    eax,0x59a4fc5e
  408b36:	out    0xef,al
  408b38:	rcl    dl,0xe3
  408b3b:	fidivr DWORD PTR [eax+0x2c8448d3]
  408b41:	in     al,0x36
  408b43:	mov    ds:0x5ffadc8f,al
  408b48:	mov    ah,0x6f
  408b4a:	fcomip st,st(7)
  408b4c:	stos   BYTE PTR es:[edi],al
  408b4d:	or     DWORD PTR [eax],esi
  408b4f:	dec    ebx
  408b50:	shl    BYTE PTR [ebp+0x58a48dba],cl
  408b56:	mov    al,ds:0xa7968e1d
  408b5b:	popf   
  408b5c:	and    eax,DWORD PTR [ebp-0x2fc85bf4]
  408b62:	xchg   ebx,eax
  408b63:	arpl   si,bx
  408b65:	inc    esi
  408b66:	enter  0xec0d,0x80
  408b6a:	fdiv   DWORD PTR ds:0x841154a5
  408b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b71:	fidiv  WORD PTR [eax+0x68]
  408b74:	sub    al,0xad
  408b76:	jecxz  0x408b39
  408b78:	mov    eax,ds:0x40612a4a
  408b7d:	pop    esi
  408b7e:	ds dec ebx
  408b80:	outs   dx,DWORD PTR ds:[esi]
  408b81:	(bad)  
  408b82:	dec    ebx
  408b83:	sbb    dl,ch
  408b85:	push   esi
  408b86:	dec    ebx
  408b87:	mov    ecx,0x99d62dc4
  408b8c:	push   esi
  408b8d:	sbb    DWORD PTR [ecx+0x15],edi
  408b90:	add    eax,DWORD PTR [eax-0x51]
  408b93:	jne    0x408b1c
  408b95:	or     eax,0x1f64de99
  408b9a:	cmp    al,0xd6
  408b9c:	arpl   WORD PTR [bx+si-0x1e],ax
  408ba0:	jmp    0xc31a9913
  408ba5:	sbb    dh,BYTE PTR [ecx+eax*2]
  408ba8:	mov    bl,ah
  408baa:	pop    ebx
  408bab:	test   bl,dh
  408bad:	lods   al,BYTE PTR ds:[esi]
  408bae:	mov    al,0xd2
  408bb0:	cdq    
  408bb1:	pop    ebp
  408bb2:	call   0x8606e4f6
  408bb7:	mov    ebx,0x30abf2d1
  408bbc:	and    esp,DWORD PTR [edi+0xe10973f]
  408bc2:	xor    al,0x7c
  408bc4:	int    0x18
  408bc6:	mov    ah,0xa6
  408bc8:	push   ds
  408bc9:	dec    ebx
  408bca:	aaa    
  408bcb:	repnz mov bh,0x74
  408bce:	inc    esp
  408bcf:	popf   
  408bd0:	leave  
  408bd1:	scas   eax,DWORD PTR es:[edi]
  408bd2:	inc    edx
  408bd3:	and    DWORD PTR [ebx],eax
  408bd5:	and    dl,BYTE PTR [ebp+0x20]
  408bd8:	out    dx,al
  408bd9:	xchg   ebp,eax
  408bda:	es xchg edi,eax
  408bdc:	cmp    ch,BYTE PTR [esi-0x2d0dfc3d]
  408be2:	mov    BYTE PTR [edx-0xb],bh
  408be5:	mov    DWORD PTR [ebx+ecx*4],edx
  408be8:	jbe    0x408ba6
  408bea:	add    edx,esi
  408bec:	or     al,0x4e
  408bee:	test   al,0xf0
  408bf0:	sub    eax,0x389eb2e3
  408bf5:	adc    BYTE PTR [ecx],cl
  408bf7:	js     0x408be1
  408bf9:	(bad)  
  408bfa:	aam    0x8a
  408bfc:	out    dx,eax
  408bfd:	test   eax,0xee77c4ca
  408c02:	xor    DWORD PTR [ecx+0x282b15c2],ebx
  408c08:	mov    ebx,0xac670067
  408c0d:	ins    DWORD PTR es:[edi],dx
  408c0e:	cmp    dh,BYTE PTR [ebx-0x6e]
  408c11:	loopne 0x408c03
  408c13:	add    BYTE PTR [edi-0x14],dh
  408c16:	daa    
  408c17:	int    0xd6
  408c19:	cmc    
  408c1a:	inc    edi
  408c1b:	fstp   DWORD PTR [edx+0x34]
  408c1e:	adc    ebp,DWORD PTR [eax-0x24fe828c]
  408c24:	add    BYTE PTR [eax],bl
  408c26:	inc    esi
  408c27:	mov    esp,0x6b5ec635
  408c2c:	push   ds
  408c2d:	(bad)  
  408c2e:	push   0xffffffd5
  408c30:	xor    DWORD PTR ds:0x35527fc4,0xa95ec6df
  408c3a:	daa    
  408c3b:	outs   dx,DWORD PTR ds:[esi]
  408c3c:	dec    ecx
  408c3d:	enter  0xc39f,0x4d
  408c41:	add    al,0x94
  408c43:	mov    al,ds:0xd1559f6e
  408c48:	add    DWORD PTR [edi+0x2f099f3],edx
  408c4e:	jne    0x408cc7
  408c50:	scas   al,BYTE PTR es:[edi]
  408c51:	sar    BYTE PTR [ecx],0xdb
  408c54:	sub    al,0xd9
  408c56:	inc    esi
  408c57:	and    edi,DWORD PTR [edi+0x62a92eb7]
  408c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c5e:	add    eax,0xdc4f63f9
  408c63:	jg     0x408bec
  408c65:	mov    ds:0x952584ba,eax
  408c6a:	mov    ah,ch
  408c6c:	inc    edi
  408c6d:	dec    ebx
  408c6e:	mov    ss,WORD PTR [esi+0x3f]
  408c71:	jno    0x408c71
  408c73:	shl    BYTE PTR [ebx+0x6a],cl
  408c76:	or     edx,0x2a7bd3f3
  408c7c:	or     al,0x1b
  408c7e:	push   es
  408c7f:	test   al,0x66
  408c81:	push   cs
  408c82:	inc    ebp
  408c83:	or     eax,0x24877538
  408c88:	push   cs
  408c89:	sar    BYTE PTR [eax],cl
  408c8b:	lods   eax,DWORD PTR ds:[esi]
  408c8c:	out    0xf4,al
  408c8e:	push   ebx
  408c8f:	mov    bh,0x41
  408c91:	repnz ficom WORD PTR [edx-0x74fb74b7]
  408c98:	ins    DWORD PTR es:[edi],dx
  408c99:	stc    
  408c9a:	dec    ecx
  408c9b:	std    
  408c9c:	xchg   esi,eax
  408c9d:	lds    edx,FWORD PTR [edi+0x73]
  408ca0:	(bad)  
  408ca2:	cmp    edx,DWORD PTR [ebx]
  408ca4:	js     0x408c81
  408ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ca7:	adc    DWORD PTR [edx-0x20549a1c],0x628529d9
  408cb1:	(bad)  
  408cb3:	push   eax
  408cb4:	mov    DWORD PTR [esi+esi*2+0x7],ebp
  408cb8:	push   ebp
  408cb9:	pop    ebp
  408cba:	in     al,dx
  408cbb:	das    
  408cbc:	lea    esi,[edi-0x31]
  408cbf:	xor    DWORD PTR ds:0x3ce8012e,ebp
  408cc5:	cmp    al,0xb4
  408cc7:	add    eax,0xe5819eba
  408ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ccd:	xchg   ecx,eax
  408cce:	(bad)  [esi-0x41]
  408cd1:	jl     0x408c76
  408cd3:	fild   QWORD PTR [edi+eax*4]
  408cd6:	fwait
  408cd7:	adc    edx,DWORD PTR [ecx+ebx*8-0x14001c2e]
  408cde:	jmp    0x408d4a
  408ce0:	js     0x408c7e
  408ce2:	xor    al,BYTE PTR [ebx]
  408ce4:	cmp    BYTE PTR [eax+0x6a],cl
  408ce7:	fwait
  408ce8:	adc    BYTE PTR [edx-0x5c],dl
  408ceb:	fmul   st(0),st
  408ced:	mov    WORD PTR [edx-0x7f],?
  408cf0:	pop    ds
  408cf1:	(bad)  [ebp-0x2cd12c24]
  408cf7:	xchg   ebx,eax
  408cf8:	shl    DWORD PTR [ecx*1+0x23787eaa],1
  408cff:	mov    ds:0x8c987288,al
  408d04:	(bad)  
  408d05:	out    dx,al
  408d06:	inc    ecx
  408d07:	or     al,ch
  408d09:	xchg   edi,eax
  408d0a:	popf   
  408d0b:	push   esp
  408d0c:	popa   
  408d0d:	mov    esi,0x27f70eda
  408d12:	out    dx,al
  408d13:	mov    ebx,ecx
  408d15:	test   DWORD PTR [edi],ebx
  408d17:	mov    dl,0xbd
  408d19:	mov    ebp,0x45f5f8ba
  408d1e:	pusha  
  408d1f:	(bad)  
  408d20:	int3   
  408d21:	pop    es
  408d22:	pop    es
  408d23:	push   eax
  408d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d25:	pop    esi
  408d26:	idiv   DWORD PTR [ecx-0x1273f366]
  408d2c:	inc    edi
  408d2d:	cdq    
  408d2e:	pop    edi
  408d2f:	ja     0x408d1e
  408d31:	add    al,0xda
  408d33:	test   DWORD PTR [edi-0x22fdd185],ebx
  408d39:	mov    bl,0x22
  408d3b:	out    dx,al
  408d3c:	add    bl,BYTE PTR [esi+0x61]
  408d3f:	mov    al,0xc9
  408d41:	cmp    al,0x43
  408d43:	das    
  408d44:	out    0xc1,eax
  408d46:	cli    
  408d47:	mov    ss,WORD PTR [ebp+0x3b]
  408d4a:	mov    ?,esp
  408d4c:	loop   0x408d21
  408d4e:	lea    esi,[eax+0x1e]
  408d51:	add    eax,0x2d4c173d
  408d56:	xchg   edx,eax
  408d57:	inc    edx
  408d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d59:	es lock sub al,0x8
  408d5d:	mov    ds:0xbc9b98e2,eax
  408d62:	(bad)  
  408d63:	dec    edx
  408d64:	sar    ecx,1
  408d66:	push   ss
  408d67:	adc    BYTE PTR [eax+edx*4-0x9],cl
  408d6b:	sbb    al,0x70
  408d6d:	jle    0x408d30
  408d6f:	out    dx,eax
  408d70:	leave  
  408d71:	jo     0x408d62
  408d73:	xchg   edi,eax
  408d74:	sti    
  408d75:	out    dx,eax
  408d76:	sbb    DWORD PTR [ecx+0x3c],ecx
  408d79:	sti    
  408d7a:	adc    al,0x23
  408d7c:	pop    ebx
  408d7d:	shr    dl,cl
  408d7f:	leave  
  408d80:	push   0x6c7cb8bc
  408d85:	xlat   BYTE PTR ds:[ebx]
  408d86:	or     BYTE PTR [ecx],dl
  408d88:	pop    ebp
  408d89:	push   ecx
  408d8a:	into   
  408d8b:	dec    eax
  408d8c:	xor    BYTE PTR ss:[edi],al
  408d8f:	sub    dh,BYTE PTR [eax]
  408d91:	mov    ch,0x6
  408d93:	stc    
  408d94:	push   eax
  408d95:	jo     0x408df9
  408d97:	int    0xec
  408d99:	mov    bl,0xef
  408d9b:	(bad)  [esi]
  408d9d:	jle    0x408d98
  408d9f:	jne    0x408d43
  408da1:	mov    edi,0x2c03a5bb
  408da6:	xor    edi,DWORD PTR [ebp-0x34]
  408da9:	imul   edx,DWORD PTR [edx],0x71a1998e
  408daf:	icebp  
  408db0:	out    0x98,eax
  408db2:	mov    ds:0xc83c3993,eax
  408db7:	daa    
  408db8:	ror    ah,cl
  408dba:	neg    DWORD PTR [edx-0x55c8403a]
  408dc0:	arpl   bx,cx
  408dc2:	mov    al,BYTE PTR [edx+0xb]
  408dc5:	stos   DWORD PTR es:[edi],eax
  408dc6:	pop    es
  408dc7:	push   ebp
  408dc8:	add    BYTE PTR [edx+esi*2+0x5],bl
  408dcc:	jp     0x408e0a
  408dce:	or     eax,0x63412692
  408dd3:	(bad)
  408dd6:	dec    eax
  408dd7:	imul   ecx,ecx,0xdb203122
  408ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dde:	add    ebp,DWORD PTR [ebp+0x5590d56a]
  408de4:	jmp    0x408d7a
  408de6:	ret    
  408de7:	or     DWORD PTR [edi],edx
  408de9:	mov    cs,WORD PTR [edx]
  408deb:	add    eax,0x42c85517
  408df0:	rcr    ebx,cl
  408df2:	pushf  
  408df3:	add    eax,0x3e0621a7
  408df8:	push   ss
  408df9:	repz cld 
  408dfb:	js     0x408da8
  408dfd:	mov    eax,0x51eb284
  408e02:	sbb    DWORD PTR [eax+0x54],ebx
  408e05:	push   0x70
  408e07:	sbb    BYTE PTR [ebx-0x36],0xc
  408e0b:	pop    ds
  408e0c:	clc    
  408e0d:	fs aam 0x86
  408e10:	aad    0x28
  408e12:	push   edx
  408e13:	outs   dx,BYTE PTR ds:[esi]
  408e14:	xchg   BYTE PTR [ebx+0x38],dl
  408e17:	cmp    BYTE PTR [esi-0x8d55d0f],ch
  408e1d:	stos   BYTE PTR es:[edi],al
  408e1e:	idiv   DWORD PTR [esi-0x6565ae4]
  408e24:	mov    eax,ds:0xf462def6
  408e29:	xchg   ebp,eax
  408e2a:	sbb    DWORD PTR [esi-0x6be6250b],esi
  408e30:	sub    BYTE PTR [ecx+0x74],bh
  408e33:	icebp  
  408e34:	daa    
  408e35:	sbb    al,0xdc
  408e37:	leave  
  408e38:	loop   0x408e2b
  408e3a:	add    ecx,DWORD PTR [ebx+0x278d5bd1]
  408e40:	pop    edi
  408e41:	fmul   st,st(3)
  408e43:	cdq    
  408e44:	inc    ebx
  408e45:	cwde   
  408e46:	out    dx,eax
  408e47:	les    ebp,FWORD PTR [edx+0x15]
  408e4a:	adc    ah,BYTE PTR [edx-0x7b]
  408e4d:	jno    0x408e83
  408e4f:	fldenv [ebx+0x77]
  408e52:	nop
  408e53:	outs   dx,BYTE PTR ds:[esi]
  408e54:	cmp    dl,BYTE PTR [ecx+edx*2+0x3c07ae64]
  408e5b:	lds    esi,FWORD PTR [edi+edx*2+0x7f9f0e60]
  408e62:	add    eax,0xb58a96ab
  408e67:	aam    0xcf
  408e69:	pop    esi
  408e6a:	hlt    
  408e6b:	ins    DWORD PTR es:[edi],dx
  408e6c:	ret    
  408e6d:	loopne 0x408df8
  408e6f:	pop    esp
  408e70:	imul   ecx,DWORD PTR [ebx],0xffffffe4
  408e73:	ror    esp,1
  408e75:	lods   eax,DWORD PTR ds:[esi]
  408e76:	xchg   ecx,eax
  408e77:	dec    ecx
  408e78:	and    bh,bh
  408e7a:	or     eax,0x714e7c5c
  408e7f:	sbb    bh,al
  408e81:	mov    al,BYTE PTR [edi]
  408e83:	fcmovnbe st,st(7)
  408e85:	push   0x37
  408e87:	je     0x408e2d
  408e89:	(bad)  
  408e8a:	cmp    DWORD PTR [edi-0x7a],esi
  408e8d:	bound  eax,QWORD PTR [esi-0x10]
  408e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e91:	mov    eax,0xf9bcfbd0
  408e96:	or     ebx,0x1ec3963c
  408e9c:	sar    BYTE PTR ds:0x62ab3148,1
  408ea2:	and    DWORD PTR [ecx+0x10],esi
  408ea5:	mov    dh,0x18
  408ea7:	jns    0x408ed8
  408ea9:	mov    dh,0xed
  408eab:	mov    ds:0x227014e3,eax
  408eb0:	repz xor dl,BYTE PTR [esi-0x3db603e4]
  408eb7:	mov    dh,0x5f
  408eb9:	imul   BYTE PTR [edx+0x5d]
  408ebc:	jge    0x408ec0
  408ebe:	popa   
  408ebf:	jnp    0x408f29
  408ec1:	cmp    BYTE PTR [esi+edx*1-0x3e],bl
  408ec5:	or     esp,DWORD PTR [ebx+0x49]
  408ec8:	pusha  
  408ec9:	pop    esp
  408eca:	cmc    
  408ecb:	sub    BYTE PTR ds:0x198a0e0c,ah
  408ed1:	(bad)  [edx-0x7a]
  408ed4:	shl    DWORD PTR [edx+0x57],0xe0
  408ed8:	out    0x76,eax
  408eda:	cdq    
  408edb:	cmp    BYTE PTR [ebp-0x3f],dl
  408ede:	fbstp  TBYTE PTR [eax-0x5f]
  408ee1:	add    ebx,0x15751480
  408ee7:	pusha  
  408ee8:	xlat   BYTE PTR ds:[ebx]
  408ee9:	js     0x408f0b
  408eeb:	pusha  
  408eec:	mov    ch,0xee
  408eee:	aam    0xc2
  408ef0:	jb     0x408f03
  408ef2:	sub    bl,ah
  408ef4:	mov    eax,ds:0x6e71ff66
  408ef9:	add    dh,BYTE PTR [edi]
  408efb:	test   eax,0xd71f0b37
  408f00:	or     eax,0x483058c6
  408f05:	push   esp
  408f06:	outs   dx,BYTE PTR ds:[esi]
  408f07:	mov    al,ds:0xb18c812d
  408f0c:	or     eax,0xab79d4d5
  408f11:	sub    BYTE PTR [edx-0x2b41be30],cl
  408f17:	xchg   edi,eax
  408f18:	sti    
  408f19:	fbld   TBYTE PTR [ebx-0x5b7df6e1]
  408f1f:	movsx  edi,BYTE PTR [esi]
  408f22:	into   
  408f23:	ss mov edi,0xf294a3fa
  408f29:	cmc    
  408f2a:	mov    bl,0xa4
  408f2c:	stos   DWORD PTR es:[edi],eax
  408f2d:	aad    0x9d
  408f2f:	and    DWORD PTR [esi+eiz*2-0x44],esp
  408f33:	add    dh,0x67
  408f36:	outs   dx,BYTE PTR ds:[esi]
  408f37:	inc    ebx
  408f38:	sub    eax,0xeae4b6ca
  408f3d:	inc    edi
  408f3e:	push   ss
  408f3f:	lea    ebx,[esi+0x10e38ec5]
  408f45:	ja     0x408fba
  408f47:	outs   dx,DWORD PTR ds:[esi]
  408f48:	mov    dh,0x93
  408f4a:	ss xchg ecx,eax
  408f4c:	cwde   
  408f4d:	scas   eax,DWORD PTR es:[edi]
  408f4e:	sbb    DWORD PTR ds:0x3be31dd5,ecx
  408f54:	(bad)  
  408f55:	jmp    0xf4a27c5d
  408f5a:	sub    eax,0xba50e45e
  408f5f:	sub    BYTE PTR [ebx],cl
  408f61:	lock lahf 
  408f63:	hlt    
  408f64:	xor    DWORD PTR [ebp-0x570af90c],0x2
  408f6b:	mov    dl,BYTE PTR [edx-0x1e]
  408f6e:	fldcw  WORD PTR [ebx]
  408f70:	mov    ecx,0x51c99937
  408f75:	pop    esp
  408f76:	adc    al,0xd6
  408f78:	repz xchg esp,eax
  408f7a:	scas   al,BYTE PTR es:[edi]
  408f7b:	hlt    
  408f7c:	adc    BYTE PTR fs:[edx+0x66d491db],cl
  408f83:	push   edi
  408f84:	ret    0x2575
  408f87:	cld    
  408f88:	xor    BYTE PTR [ebx-0x5707c0f],bh
  408f8e:	scas   eax,DWORD PTR es:[edi]
  408f8f:	push   ebx
  408f90:	xchg   DWORD PTR [edx+ecx*2+0x4edaaae8],edx
  408f97:	dec    ecx
  408f98:	in     eax,0x22
  408f9a:	inc    ebp
  408f9b:	mov    edi,0xc687a92
  408fa0:	jb     0x409014
  408fa2:	push   es
  408fa3:	mov    ah,0x33
  408fa5:	adc    eax,0x8b2eca8b
  408faa:	imul   edi,ebp,0x171b5ac9
  408fb0:	mov    ds:0x2af588d1,eax
  408fb5:	sbb    al,0xd4
  408fb7:	sbb    eax,0x29b85180
  408fbc:	dec    DWORD PTR [ecx-0x74]
  408fbf:	retf   0xcd7
  408fc2:	adc    DWORD PTR [esi-0x3aa5782f],edi
  408fc8:	stos   BYTE PTR es:[edi],al
  408fc9:	mov    DWORD PTR [edx],ebx
  408fcb:	dec    ecx
  408fcc:	sti    
  408fcd:	mov    edi,0xc37f4208
  408fd2:	ss push 0x9b075d2d
  408fd8:	mov    ebx,0x480b39f6
  408fdd:	fld    TBYTE PTR [eax+ecx*4-0x7c]
  408fe1:	and    ebx,esi
  408fe3:	aaa    
  408fe4:	js     0x40901f
  408fe6:	jo     0x409017
  408fe8:	stos   BYTE PTR es:[edi],al
  408fe9:	jl     0x40901a
  408feb:	mov    dh,0x4f
  408fed:	shl    DWORD PTR [esi+0x7004be32],cl
  408ff3:	sahf   
  408ff4:	mov    ah,0x8
  408ff6:	jbe    0x408f8d
  408ff8:	in     eax,0xb7
  408ffa:	mov    cl,0x2e
  408ffc:	inc    ebp
  408ffd:	xor    al,0x89
  408fff:	mov    ebx,0x9c81ecc4
  409004:	int3   
  409005:	add    al,0x7
  409007:	(bad)  
  409008:	mov    BYTE PTR [ebx],0x8b
  40900b:	cs iret 
  40900d:	pop    eax
  40900e:	int3   
  40900f:	adc    eax,DWORD PTR [ebx-0x27e51b53]
  409015:	xchg   edi,eax
  409016:	jbe    0x40901f
  409018:	inc    ebx
  409019:	push   ds
  40901a:	xor    BYTE PTR [eax-0x55],0x9
  40901e:	pop    ebx
  40901f:	aaa    
  409020:	jmp    DWORD PTR [esi+0x35]
  409023:	fdiv   DWORD PTR [ebx+edi*4+0x7daff498]
  40902a:	mov    cl,0x9a
  40902c:	sub    eax,0x58518e82
  409031:	inc    esi
  409032:	retf   
  409033:	rcr    DWORD PTR [eax-0x4dc4f520],0xec
  40903a:	das    
  40903b:	pusha  
  40903c:	jp     0x409091
  40903e:	or     dl,BYTE PTR [ecx+0x34]
  409041:	sbb    eax,0x1c5e8c76
  409046:	retf   
  409047:	and    BYTE PTR [ecx+0x650ce3e9],cl
  40904d:	xor    BYTE PTR ds:[edx-0x51],al
  409051:	cdq    
  409052:	and    bh,ch
  409054:	or     edi,DWORD PTR [ecx]
  409056:	mov    eax,ds:0x77cb3846
  40905b:	retf   0x3028
  40905e:	aad    0x30
  409060:	cmp    BYTE PTR [ebp+0x78ef37a7],bl
  409066:	stos   BYTE PTR es:[edi],al
  409067:	jg     0x40903a
  409069:	xchg   edx,eax
  40906a:	sar    BYTE PTR [ebp+0x37b2d702],0x24
  409071:	cmp    al,0x1a
  409073:	push   ecx
  409074:	mov    eax,ds:0x860ec6f7
  409079:	xchg   edi,eax
  40907a:	xor    ebx,esi
  40907c:	mov    edx,0x5a260246
  409081:	sbb    DWORD PTR [ebx-0x37ca3648],edx
  409087:	inc    eax
  409088:	sar    eax,0xb3
  40908b:	pop    ecx
  40908c:	pop    esp
  40908d:	fsubrp st(5),st
  40908f:	ja     0x40901d
  409091:	cmp    BYTE PTR [edi+0x76cca695],cl
  409097:	fcomp  QWORD PTR [esi+esi*2-0x21b0152d]
  40909e:	lods   al,BYTE PTR ds:[esi]
  40909f:	jae    0x409027
  4090a1:	mov    ebp,0xb5bb3b1f
  4090a6:	sub    eax,0xabba66d8
  4090ab:	shl    DWORD PTR [esi],0x52
  4090ae:	mov    esi,0x77bea095
  4090b3:	inc    ebx
  4090b4:	out    dx,al
  4090b5:	cwde   
  4090b6:	out    0xb5,eax
  4090b8:	pop    ds
  4090b9:	outs   dx,BYTE PTR ss:[esi]
  4090bb:	cmp    BYTE PTR [edx+eiz*1],al
  4090be:	in     al,dx
  4090bf:	lds    ebp,FWORD PTR [ebp+0x263cc5b2]
  4090c5:	(bad)  
  4090c6:	sbb    edi,edi
  4090c8:	jo     0x409109
  4090ca:	or     BYTE PTR cs:[edi+eax*4+0x39f06047],dh
  4090d2:	call   0x94fdebc2
  4090d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090d8:	call   0xc34050d1
  4090dd:	arpl   WORD PTR [edx-0x78],ax
  4090e0:	mov    eax,ds:0x60a494d8
  4090e6:	dec    edx
  4090e7:	mov    ah,0x3
  4090e9:	mov    eax,0x6cf25311
  4090ee:	pusha  
  4090ef:	xchg   ecx,eax
  4090f0:	pop    edx
  4090f1:	js     0x409096
  4090f3:	jns    0x409160
  4090f5:	push   eax
  4090f6:	rol    esp,cl
  4090f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090f9:	push   cs
  4090fa:	and    ah,BYTE PTR [ebx+0x8e57a09]
  409100:	clc    
  409101:	inc    edx
  409102:	xor    al,0x6d
  409104:	mov    ch,0xf6
  409106:	mov    edi,0xf2deaaea
  40910c:	mov    eax,ds:0x7dd27c2d
  409111:	mov    BYTE PTR [ebp-0x3c],ch
  409114:	out    0x83,eax
  409116:	daa    
  409117:	cwde   
  409118:	jmp    0x4090bf
  40911a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40911b:	ror    bh,0x41
  40911e:	lods   eax,DWORD PTR ds:[esi]
  40911f:	xor    esp,ebx
  409121:	push   eax
  409122:	and    edx,DWORD PTR [ebp-0x5f]
  409125:	stos   DWORD PTR es:[edi],eax
  409126:	fwait
  409127:	or     al,0xf
  409129:	sub    cl,dh
  40912b:	dec    eax
  40912c:	iret   
  40912d:	es mov ebx,0x6424b6f
  409133:	dec    edi
  409134:	jle    0x40918c
  409136:	les    ebp,FWORD PTR [esi-0x80]
  409139:	sbb    eax,0xadf23b85
  40913e:	push   esp
  40913f:	adc    ebp,DWORD PTR ds:0x7ed19105
  409145:	xor    DWORD PTR [edi+0x63],ecx
  409148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40914a:	mov    esi,0x64a70862
  40914f:	aaa    
  409150:	stos   BYTE PTR es:[edi],al
  409151:	out    0x56,al
  409153:	or     ah,BYTE PTR [edi+0x24]
  409156:	and    dh,dl
  409158:	dec    ecx
  409159:	or     ebx,DWORD PTR [eax]
  40915b:	shl    BYTE PTR [eax-0x169c4976],0x71
  409162:	(bad)  
  409163:	mov    ds:0x9074c15a,eax
  409168:	dec    edi
  409169:	lds    ebx,FWORD PTR [ebx+ebx*4]
  40916c:	xchg   ch,cl
  40916e:	xor    bl,BYTE PTR [edx-0x59]
  409171:	int    0xed
  409173:	mov    WORD PTR [esp+ecx*4+0x69],cs
  409177:	(bad)  
  409178:	test   eax,0x6450c5cf
  40917d:	ins    DWORD PTR es:[edi],dx
  40917e:	int3   
  40917f:	dec    ch
  409181:	pop    esi
  409182:	iret   
  409183:	scas   al,BYTE PTR es:[edi]
  409184:	(bad)  
  409186:	add    ebx,0xffffffcc
  409189:	enter  0xf0d7,0x64
  40918d:	js     0x40920c
  40918f:	(bad)  
  409190:	sub    BYTE PTR [ebx+ebx*8],bl
  409193:	es push 0xb
  409196:	xchg   esi,eax
  409197:	test   BYTE PTR [ebx],dl
  409199:	inc    esp
  40919a:	mov    ah,0x57
  40919c:	add    ebx,ecx
  40919e:	int    0x61
  4091a0:	scas   eax,DWORD PTR es:[edi]
  4091a1:	mov    ebp,0xcae5976f
  4091a6:	push   ebp
  4091a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091a8:	push   ebx
  4091a9:	out    0x2f,al
  4091ab:	mov    eax,0x497f5cbe
  4091b0:	outs   dx,BYTE PTR ds:[esi]
  4091b1:	daa    
  4091b2:	fcom   QWORD PTR [esi]
  4091b4:	push   esi
  4091b5:	loope  0x40918b
  4091b7:	mov    es,WORD PTR ds:0x34550244
  4091bd:	aaa    
  4091be:	jle    0x4091e8
  4091c0:	inc    esp
  4091c1:	jle    0x409152
  4091c3:	lods   eax,DWORD PTR ds:[esi]
  4091c4:	mov    dh,0xf0
  4091c6:	jae    0x4091e8
  4091c8:	dec    ebx
  4091c9:	js     0x4091ee
  4091cb:	xchg   esp,eax
  4091cc:	mov    WORD PTR [ecx],gs
  4091ce:	fidiv  WORD PTR [ebx+eiz*1+0x73]
  4091d2:	mul    BYTE PTR [ebx+edx*4+0x5]
  4091d6:	adc    BYTE PTR [edx+ebx*4],bl
  4091d9:	pinsrw mm1,WORD PTR [edx+edi*4-0x5d012ab0],0x2a
  4091e2:	test   bl,bl
  4091e4:	retf   0xbeb8
  4091e7:	push   ds
  4091e8:	jb     0x409251
  4091ea:	push   ebx
  4091eb:	call   0x6402:0x3c49d9fb
  4091f2:	fsubr  DWORD PTR [ecx-0x1057fb65]
  4091f8:	add    eax,0xd5f4b45d
  4091fd:	dec    edx
  4091fe:	retf   
  4091ff:	jnp    0x409280
  409201:	popf   
  409202:	call   0x9676:0xd70e6df4
  409209:	mov    esi,0x70322b64
  40920e:	lods   al,BYTE PTR ds:[esi]
  40920f:	inc    edx
  409210:	inc    ebx
  409211:	dec    esi
  409212:	dec    ebp
  409213:	mov    ch,0x35
  409215:	retf   
  409216:	push   ds
  409217:	cld    
  409218:	xchg   esi,eax
  409219:	mov    dh,0xd4
  40921b:	add    edx,DWORD PTR [edx+0x7b]
  40921e:	or     eax,DWORD PTR [esi-0x2d753869]
  409224:	stc    
  409225:	or     DWORD PTR [ebp+ebx*2+0xb],eax
  409229:	sbb    eax,0xbe9509c0
  40922e:	sbb    edx,edi
  409230:	mov    bh,0xac
  409232:	out    0x62,eax
  409234:	xchg   edx,eax
  409235:	fcomp  QWORD PTR [ecx+ecx*2]
  409238:	sbb    eax,0x7cbe569e
  40923d:	pop    edi
  40923e:	xchg   edx,eax
  40923f:	pop    ds
  409240:	sub    al,0x1b
  409242:	daa    
  409243:	outs   dx,BYTE PTR ds:[esi]
  409244:	inc    ecx
  409245:	jg     0x4091fd
  409247:	pop    edi
  409248:	push   es
  409249:	stos   DWORD PTR es:[edi],eax
  40924a:	in     al,0x7b
  40924c:	hlt    
  40924d:	rol    bl,1
  40924f:	dec    esp
  409250:	sub    al,0x9a
  409252:	dec    edi
  409253:	out    0xc3,eax
  409255:	sub    eax,0xd55ee06e
  40925a:	cwde   
  40925b:	ret    
  40925c:	jb     0x409237
  40925e:	xor    ah,dh
  409260:	push   esp
  409261:	cmp    DWORD PTR [edi],ebx
  409263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409264:	push   ss
  409265:	jo     0x409286
  409267:	ret    
  409268:	lahf   
  409269:	fnsave [eax+0x7693a02e]
  40926f:	push   es
  409270:	mov    ecx,0x9b78f449
  409275:	call   0x99c7cf9e
  40927a:	mov    ds:0x153537cd,eax
  40927f:	sub    ebx,DWORD PTR [ecx]
  409281:	sbb    ecx,edx
  409283:	in     al,0xd4
  409285:	mov    BYTE PTR [ebx+0x4c],bl
  409288:	cwde   
  409289:	hlt    
  40928a:	repz sbb eax,0xea940732
  409290:	pusha  
  409291:	dec    esp
  409292:	add    ecx,DWORD PTR [edi+0x65]
  409295:	gs call 0xd4d2:0x56c44efd
  40929d:	adc    edi,DWORD PTR ds:0x2044fd7f
  4092a3:	or     ecx,DWORD PTR [ebx-0x6651fd51]
  4092a9:	fstp   st(4)
  4092ab:	xchg   esp,eax
  4092ac:	aam    0xcb
  4092ae:	push   esp
  4092af:	dec    edx
  4092b0:	xor    BYTE PTR [ebx-0x7969d0e5],cl
  4092b6:	addps  xmm1,XMMWORD PTR [edi+ebp*1+0x9]
  4092bb:	push   0x7476265e
  4092c0:	sar    BYTE PTR ds:0xa643b5b6,1
  4092c6:	mov    dl,0xde
  4092c8:	xor    eax,DWORD PTR [edx+0x13]
  4092cb:	sbb    ah,BYTE PTR [ebp-0x58]
  4092ce:	mov    eax,0xc6f4e87b
  4092d3:	inc    edi
  4092d4:	jb     0x40925d
  4092d6:	inc    ecx
  4092d7:	cmp    al,0xfe
  4092d9:	push   edi
  4092da:	cmp    BYTE PTR [edx],0xca
  4092dd:	inc    edi
  4092de:	rcr    edx,0x9c
  4092e1:	out    0xda,eax
  4092e3:	jnp    0x4092b2
  4092e5:	jmp    0x40933c
  4092e7:	into   
  4092e8:	add    ebx,DWORD PTR [edx+0x41]
  4092eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092ec:	retf   
  4092ed:	cmp    bl,al
  4092ef:	out    0xce,eax
  4092f1:	jg     0x40928b
  4092f3:	push   cs
  4092f4:	or     cl,0xb5
  4092f7:	xchg   esi,eax
  4092f8:	jo     0x40935d
  4092fa:	sub    BYTE PTR [ebx],ch
  4092fc:	fwait
  4092fd:	push   0xee3f5b8d
  409302:	jge    0x4092d0
  409304:	icebp  
  409305:	xchg   ebx,eax
  409306:	push   cs
  409307:	aam    0x7b
  409309:	pop    ecx
  40930a:	add    BYTE PTR [edi+0x767e8cf1],cl
  409310:	mov    al,0x84
  409312:	inc    ebp
  409313:	pop    ebp
  409314:	cmp    ecx,esi
  409316:	cli    
  409317:	in     al,0xa0
  409319:	sahf   
  40931a:	imul   esp,DWORD PTR [edi+0x4b],0x4e
  40931e:	je     0x409309
  409320:	and    al,0x1e
  409322:	test   BYTE PTR [ebx],bh
  409324:	fild   WORD PTR [eax+0x1ed572b5]
  40932a:	and    eax,0xbf370c5a
  40932f:	dec    ebx
  409330:	xor    bl,BYTE PTR [edi]
  409332:	push   ebx
  409333:	add    BYTE PTR [eax],bh
  409335:	jl     0x4092cc
  409337:	push   ss
  409338:	ins    DWORD PTR es:[edi],dx
  409339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40933a:	xchg   DWORD PTR [esi],eax
  40933c:	cmp    esi,esi
  40933e:	push   0x1d
  409340:	cwde   
  409341:	pop    es
  409342:	dec    esp
  409343:	sub    dh,ch
  409345:	popa   
  409346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409347:	inc    edi
  409348:	push   ebp
  409349:	add    BYTE PTR [edx-0x681d32e5],ch
  40934f:	push   ebp
  409350:	add    eax,0xa82957f3
  409355:	loopne 0x409300
  409357:	jbe    0x4093d6
  409359:	sub    esi,edi
  40935b:	aad    0x2a
  40935d:	arpl   WORD PTR [edx-0x75],sp
  409360:	loopne 0x409303
  409362:	in     eax,dx
  409363:	mov    eax,ds:0xfd1d7eba
  409368:	sti    
  409369:	xchg   edi,eax
  40936a:	sub    DWORD PTR [ebp+0x1a],edi
  40936d:	cmc    
  40936e:	sbb    eax,edx
  409370:	test   DWORD PTR [ebx],edi
  409372:	xchg   esi,eax
  409373:	adc    al,0xf
  409375:	cld    
  409376:	or     ebp,DWORD PTR [edx]
  409378:	sub    esp,DWORD PTR [eax]
  40937a:	mov    ch,BYTE PTR [edx]
  40937c:	xchg   ecx,eax
  40937d:	jno    0x409327
  40937f:	fwait
  409380:	test   eax,0x2d1874de
  409385:	xchg   edi,eax
  409386:	push   ds
  409387:	and    bl,BYTE PTR [esi+0x5d]
  40938a:	inc    eax
  40938b:	pop    ebx
  40938c:	test   cl,cl
  40938e:	(bad)  
  40938f:	mov    cl,0xa8
  409391:	inc    esp
  409392:	xor    edx,DWORD PTR [ecx+eax*4+0x6511c913]
  409399:	aam    0x1c
  40939b:	cmp    BYTE PTR [edx-0x31524819],al
  4093a1:	mov    ah,0x7d
  4093a3:	ja     0x409384
  4093a5:	inc    esp
  4093a6:	xchg   edi,eax
  4093a7:	out    0xd1,eax
  4093a9:	fbld   TBYTE PTR [eax+0x9]
  4093ac:	fdivr  QWORD PTR [edi]
  4093ae:	leave  
  4093af:	jo     0x409353
  4093b1:	div    ebx
  4093b3:	test   eax,0xe5a4cebf
  4093b8:	push   ebp
  4093b9:	ins    DWORD PTR es:[edi],dx
  4093ba:	xchg   DWORD PTR [esi+0x20],esp
  4093bd:	and    al,0x62
  4093bf:	xor    BYTE PTR [ebx-0x2b8e6317],0xfd
  4093c6:	repnz arpl bx,di
  4093c9:	test   eax,0x90a1bd49
  4093ce:	mov    ebp,DWORD PTR [ebp-0x46f0197a]
  4093d4:	xor    BYTE PTR ds:0x33dfe47,al
  4093da:	sbb    al,0x18
  4093dc:	and    BYTE PTR [edi-0x29de92e],bh
  4093e2:	add    BYTE PTR [eax-0x22],ch
  4093e5:	cmp    ecx,DWORD PTR [edx+0x7a]
  4093e8:	adc    eax,0x50147367
  4093ed:	sbb    al,0xd3
  4093ef:	push   eax
  4093f0:	popa   
  4093f1:	mov    ebp,0xe44a3c4d
  4093f6:	ins    BYTE PTR es:[edi],dx
  4093f7:	daa    
  4093f8:	xor    DWORD PTR [ecx+0x8],eax
  4093fb:	xchg   ebp,eax
  4093fc:	cdq    
  4093fd:	stos   DWORD PTR es:[edi],eax
  4093fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093ff:	adc    eax,0x25b346d8
  409404:	inc    edx
  409405:	cs inc ecx
  409407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409408:	rcr    BYTE PTR [ebx-0x2c42129d],1
  40940e:	add    eax,0x8f6929d7
  409413:	adc    eax,0xb489138c
  409418:	xchg   ecx,eax
  409419:	inc    esp
  40941a:	push   0x6c
  40941c:	jle    0x40946d
  40941e:	inc    ebx
  40941f:	mov    al,ds:0x55d342a2
  409424:	icebp  
  409425:	(bad)  
  409428:	outs   dx,BYTE PTR ds:[esi]
  409429:	int3   
  40942a:	and    al,0x84
  40942c:	in     al,0x8f
  40942e:	fadd   st(5),st
  409430:	or     eax,0x78ea5aec
  409435:	mov    ?,WORD PTR [esi-0x42]
  409438:	mov    dh,0x79
  40943a:	(bad)  
  40943c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40943d:	adc    edx,DWORD PTR [eax]
  40943f:	dec    ecx
  409440:	ret    0xc209
  409443:	clc    
  409444:	dec    esp
  409445:	adc    esi,DWORD PTR [eax]
  409447:	outs   dx,DWORD PTR ds:[esi]
  409448:	leave  
  409449:	mov    dl,0x7d
  40944c:	inc    edi
  40944d:	mov    ah,0xb8
  40944f:	mov    ebx,ebx
  409451:	jmp    0x8c3e:0xe1ad39ff
  409458:	or     BYTE PTR [ebp+0x4e410929],0x5f
  40945f:	inc    DWORD PTR [esi]
  409461:	shl    BYTE PTR [ebp+0x3005f400],cl
  409467:	test   al,0x63
  409469:	add    ebp,eax
  40946b:	jbe    0x4093f7
  40946d:	jne    0x4094ab
  40946f:	cmovae ebp,ebp
  409472:	clc    
  409473:	dec    edx
  409474:	sar    bl,1
  409476:	pop    ds
  409477:	mov    ch,BYTE PTR [ebx-0x63168c80]
  40947d:	rcr    WORD PTR [ebp+0x65],0x11
  409482:	inc    edx
  409483:	icebp  
  409484:	dec    eax
  409485:	fnstsw WORD PTR [eax+0x1fbb07ce]
  40948b:	test   BYTE PTR [eax+esi*2],0x67
  40948f:	mov    BYTE PTR [edi-0x3f64043d],ah
  409495:	loopne 0x409468
  409497:	xor    al,0xcb
  409499:	lahf   
  40949a:	mov    BYTE PTR [eax],al
  40949c:	retf   0x3407
  40949f:	int3   
  4094a0:	xchg   edi,eax
  4094a1:	sbb    BYTE PTR [ecx-0x11629a05],bh
  4094a7:	jle    0x409481
  4094a9:	adc    eax,0x552a7b24
  4094ae:	xor    DWORD PTR ds:0xb658f12c,edi
  4094b4:	repnz sub BYTE PTR [eax-0x64],ch
  4094b8:	mov    ch,0x37
  4094ba:	cdq    
  4094bb:	(bad)  
  4094bc:	sbb    DWORD PTR [eax-0x68989806],edi
  4094c2:	mov    ch,0x74
  4094c4:	out    0x88,eax
  4094c6:	push   eax
  4094c7:	scas   al,BYTE PTR es:[edi]
  4094c8:	in     eax,0xfe
  4094ca:	pop    esi
  4094cb:	iret   
  4094cc:	clc    
  4094cd:	push   eax
  4094ce:	or     BYTE PTR [ebp+ebx*2+0x1b6f0ed8],cl
  4094d5:	jnp    0x409469
  4094d7:	aaa    
  4094d8:	or     BYTE PTR [eax+ebp*4+0x56],al
  4094dc:	mov    BYTE PTR [edx+0x477ee712],ah
  4094e2:	stc    
  4094e3:	pop    eax
  4094e4:	xchg   edi,eax
  4094e5:	mov    esi,0x681eb8f
  4094ea:	data16 xor dl,al
  4094ed:	mul    ebp
  4094ef:	jne    0x409519
  4094f1:	mov    ebx,0x37d1ab50
  4094f6:	jbe    0x4094f2
  4094f8:	jmp    0x409563
  4094fa:	mov    esp,0xee5f4376
  4094ff:	test   BYTE PTR [ecx+0x26],cl
  409502:	jo     0x409533
  409504:	(bad)  
  409505:	mov    bh,0x8e
  409507:	cmc    
  409508:	mov    ds:0x92cc2cce,al
  40950d:	outs   dx,BYTE PTR ds:[esi]
  40950e:	outs   dx,BYTE PTR ds:[esi]
  40950f:	retf   0x2cfd
  409512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409513:	jbe    0x409516
  409515:	leave  
  409516:	xchg   esp,eax
  409517:	push   0x35
  409519:	inc    esp
  40951a:	call   0xa81a:0x74e30d96
  409521:	sub    edx,DWORD PTR [ecx+0x6904327]
  409527:	(bad)  
  409528:	jo     0x40951a
  40952a:	mov    dh,0xc2
  40952c:	adc    DWORD PTR ds:0xa219df6,0x25
  409533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409535:	loope  0x409526
  409537:	pop    ebx
  409538:	and    cl,BYTE PTR [ebp+eax*4-0x1387aa97]
  40953f:	enter  0x6ef2,0x6a
  409543:	lahf   
  409544:	fcmove st,st(6)
  409546:	repz dec eax
  409548:	and    ah,BYTE PTR [edx-0x12406b6a]
  40954e:	ja     0x4094ee
  409550:	ins    BYTE PTR es:[edi],dx
  409551:	mov    cl,BYTE PTR [ebx]
  409553:	shr    DWORD PTR [ebx+eax*4-0x39],0x99
  409558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409559:	push   ebx
  40955a:	mov    edx,0x8d71263c
  40955f:	adc    al,0xa7
  409561:	sbb    DWORD PTR [eax+edx*4+0x5b],ebp
  409565:	pusha  
  409566:	or     ch,BYTE PTR [ebx+eax*2+0x77]
  40956a:	sub    cl,BYTE PTR es:[ecx]
  40956d:	add    eax,0xbda313b5
  409572:	out    dx,eax
  409573:	mov    ds:0x2465e6e,eax
  409578:	sub    DWORD PTR [edx*4+0xd8dfe82],0x971f3ac3
  409583:	jmp    0xd94a:0x95266033
  40958a:	or     dh,dh
  40958c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40958d:	xor    BYTE PTR [eax+0x5f42ce63],bh
  409593:	sub    eax,0x2bac31f4
  409598:	lahf   
  409599:	std    
  40959a:	pop    edi
  40959b:	std    
  40959c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40959e:	sar    ah,1
  4095a0:	outs   dx,BYTE PTR ds:[esi]
  4095a1:	ins    BYTE PTR es:[edi],dx
  4095a2:	or     DWORD PTR [edx-0x2c17f6fc],0xa7f7eb3f
  4095ac:	mov    edx,0x4e1adf39
  4095b1:	ins    BYTE PTR es:[edi],dx
  4095b2:	mov    ds:0x994f3dd5,al
  4095b7:	lods   eax,DWORD PTR ds:[esi]
  4095b8:	cwde   
  4095b9:	push   ds
  4095ba:	push   ss
  4095bb:	mov    cl,0x8e
  4095bd:	jmp    0xacc7:0xd1db8c23
  4095c4:	mov    ecx,0x514290a4
  4095c9:	dec    esi
  4095ca:	cmp    DWORD PTR [edi+0x6da891c9],ebx
  4095d0:	jno    0x4095d6
  4095d2:	push   eax
  4095d3:	stc    
  4095d4:	mov    ds:0xc54bd99b,al
  4095d9:	jecxz  0x4095c3
  4095db:	inc    eax
  4095dc:	lds    esp,FWORD PTR [edx+0x2a21e7d2]
  4095e2:	call   FWORD PTR [edi-0x4c]
  4095e5:	add    eax,0x34245adf
  4095ea:	sub    DWORD PTR [edi-0x1db30bf8],ebp
  4095f0:	ficom  WORD PTR [ecx]
  4095f2:	dec    ebx
  4095f3:	ret    0x2ee3
  4095f6:	outs   dx,DWORD PTR ds:[esi]
  4095f7:	stos   BYTE PTR es:[edi],al
  4095f8:	jns    0x4095ca
  4095fa:	daa    
  4095fb:	mov    edx,0xa80b62e6
  409600:	mov    gs,WORD PTR [esp+eiz*4-0x216884b9]
  409607:	popa   
  409608:	outs   dx,BYTE PTR ds:[esi]
  409609:	fldcw  WORD PTR [esi]
  40960b:	jns    0x40967e
  40960d:	mov    edx,0x8a381c9e
  409612:	inc    edi
  409613:	mov    dh,0x74
  409615:	mov    cl,0x57
  409617:	aaa    
  409618:	sub    eax,0x14823a9a
  40961d:	xchg   ebp,eax
  40961e:	xor    edi,DWORD PTR [ecx+0x53]
  409621:	call   0x981cf1e1
  409626:	out    0x79,al
  409628:	xor    BYTE PTR [edx],bl
  40962a:	inc    ebx
  40962b:	addr16 inc ebx
  40962d:	add    ax,0x1565
  409631:	in     eax,dx
  409632:	mov    edi,0x818cdb7d
  409637:	shl    DWORD PTR [eax+0x7f],1
  40963a:	scas   eax,DWORD PTR es:[edi]
  40963b:	mov    edx,0x94263b92
  409640:	lods   eax,DWORD PTR ds:[esi]
  409641:	xor    BYTE PTR [edi-0x5ab296fc],dl
  409647:	call   0xc384f8ec
  40964c:	mov    ebp,0x959fe5ff
  409651:	add    ebp,DWORD PTR [edi]
  409653:	mov    ?,WORD PTR [edx]
  409655:	rcr    esp,cl
  409657:	cdq    
  409658:	fcomi  st,st(1)
  40965a:	(bad)  
  40965b:	jmp    0x1f3a694f
  409660:	retf   0x56ff
  409663:	or     al,BYTE PTR [ebx+0x41805e7e]
  409669:	mov    eax,0xd94c6ba9
  40966e:	mov    dh,0x14
  409670:	mov    dl,0x75
  409672:	ror    DWORD PTR [edi-0x52b6afb3],0x72
  409679:	add    ah,BYTE PTR [ebp-0x5e]
  40967c:	jb     0x409638
  40967e:	jae    0x4096fa
  409680:	fidiv  DWORD PTR ds:0x4d372c7d
  409686:	and    DWORD PTR [ebp+0x2045bdd2],0x8cfbfcc
  409690:	mov    bl,0x4a
  409692:	jae    0x409700
  409694:	xchg   ebp,eax
  409695:	mov    cl,BYTE PTR [eax-0x10b232c6]
  40969b:	mov    ecx,0x100a0b04
  4096a0:	add    eax,0xfb2f647d
  4096a5:	cmp    ch,ah
  4096a7:	out    0x71,al
  4096a9:	cmp    al,0xcf
  4096ab:	hlt    
  4096ac:	sub    al,0x25
  4096ae:	sbb    al,0x1d
  4096b0:	out    0x69,al
  4096b2:	xor    al,0x2e
  4096b4:	push   0x40000581
  4096b9:	pop    esi
  4096ba:	fisub  WORD PTR [ebx+0x38]
  4096bd:	mov    ah,0xac
  4096bf:	ins    BYTE PTR es:[edi],dx
  4096c0:	sar    ebx,cl
  4096c2:	(bad)  
  4096c3:	fmul   QWORD PTR [esp+eax*8+0x4]
  4096c7:	jle    0x40965d
  4096c9:	xor    edi,esi
  4096cb:	loopne 0x409692
  4096cd:	xchg   esp,eax
  4096ce:	mul    DWORD PTR [ebx+0x33b8c9cc]
  4096d4:	add    bl,BYTE PTR [ebp+0x20]
  4096d7:	cdq    
  4096d8:	cmp    BYTE PTR [ebx-0x7508529f],ch
  4096de:	and    edi,DWORD PTR [ebx]
  4096e0:	shl    BYTE PTR [edi+0x4d52a364],cl
  4096e6:	cdq    
  4096e7:	push   0x45
  4096e9:	(bad)  
  4096ea:	xor    eax,0x6b253f58
  4096ef:	xchg   ebp,eax
  4096f0:	stos   BYTE PTR es:[edi],al
  4096f1:	mov    ch,0xe6
  4096f3:	add    eax,0xb588fc61
  4096f8:	add    eax,0xc044f4ba
  4096fd:	add    dh,BYTE PTR [eax-0x7e]
  409700:	adc    bl,cl
  409702:	mov    ds:0x15b0eca1,eax
  409707:	xlat   BYTE PTR ds:[ebx]
  409708:	sahf   
  409709:	xor    eax,0x9aa29475
  40970e:	push   edi
  40970f:	sbb    BYTE PTR ds:0xdc76212d,ah
  409715:	fmul   QWORD PTR [edi-0x68]
  409718:	dec    edx
  409719:	push   esp
  40971a:	push   eax
  40971b:	jp     0x4096ff
  40971d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40971e:	push   edi
  40971f:	lds    ebp,FWORD PTR [ebp+0x4b]
  409722:	(bad)  
  409723:	(bad)  [esi+0x3f]
  409726:	or     al,0x1d
  409728:	sub    bh,BYTE PTR [ecx+0x14]
  40972b:	or     eax,0x6271bbcf
  409730:	xor    al,BYTE PTR [eax+0x54]
  409733:	leave  
  409734:	dec    ebp
  409735:	cwde   
  409736:	lock gs scas al,BYTE PTR es:[edi]
  409739:	in     eax,0x62
  40973b:	lea    ecx,[eax]
  40973d:	push   0xe25dc690
  409742:	mov    ebx,0xb72cb1d2
  409747:	mov    al,BYTE PTR [edi-0x53]
  40974a:	inc    ebp
  40974b:	inc    eax
  40974c:	pop    esi
  40974d:	push   ds
  40974e:	and    DWORD PTR [ebp-0x763fa9ca],ecx
  409754:	mov    eax,0x75d87f65
  409759:	mov    ah,0xdc
  40975b:	loopne 0x409790
  40975d:	sbb    DWORD PTR [edi],ecx
  40975f:	dec    esi
  409760:	fldcw  WORD PTR [edx]
  409762:	or     bl,al
  409764:	xor    al,0xa
  409766:	repnz fs add ecx,edi
  40976a:	jmp    0x7378:0xe25319ff
  409771:	jae    0x40970b
  409773:	mov    ds:0x8fe058f0,eax
  409778:	xchg   esi,eax
  409779:	mov    esi,0x5472fa34
  40977e:	and    BYTE PTR [esp+edi*8-0x67],cl
  409782:	xor    BYTE PTR [esi],0xab
  409785:	jbe    0x40971e
  409787:	les    ebp,FWORD PTR [ecx+edi*1+0x4d]
  40978b:	xchg   edi,ebx
  40978d:	mov    ah,0x68
  40978f:	xchg   esi,eax
  409790:	mov    cl,0x56
  409792:	out    0xbd,al
  409794:	sub    eax,0x57d4d57b
  409799:	cld    
  40979a:	sahf   
  40979b:	mul    BYTE PTR [ebx+0x6dbd540]
  4097a1:	arpl   WORD PTR [ecx+0x2a],sp
  4097a4:	clc    
  4097a5:	mov    ah,0x21
  4097a7:	sti    
  4097a8:	mov    DWORD PTR [edx-0x51],esi
  4097ab:	test   eax,0x179664da
  4097b0:	add    al,0x9c
  4097b2:	inc    eax
  4097b4:	mul    BYTE PTR [esi-0x68]
  4097b7:	pop    ebp
  4097b8:	mov    BYTE PTR [ebp-0x8],bh
  4097bb:	test   al,0xf0
  4097bd:	xchg   ebx,eax
  4097be:	(bad)  
  4097bf:	jns    0x40982a
  4097c1:	pop    ss
  4097c2:	ins    DWORD PTR es:[edi],dx
  4097c3:	mov    DWORD PTR [esi+0xc],0x33d40731
  4097ca:	lods   eax,DWORD PTR ds:[esi]
  4097cb:	repnz fwait
  4097cd:	loop   0x40981f
  4097cf:	xchg   edi,eax
  4097d0:	aaa    
  4097d1:	inc    eax
  4097d2:	call   0x6131:0x8271c68f
  4097d9:	and    ebx,DWORD PTR [ebx]
  4097db:	or     al,0x5e
  4097dd:	inc    eax
  4097de:	adc    eax,0x5337c012
  4097e3:	dec    ebp
  4097e4:	pop    edi
  4097e5:	push   ss
  4097e6:	call   0xecd27aa6
  4097eb:	xchg   DWORD PTR [ecx],esi
  4097ed:	out    dx,al
  4097ee:	sbb    bh,cl
  4097f0:	dec    esi
  4097f1:	aad    0x5c
  4097f3:	pop    ecx
  4097f4:	mov    esp,0x5c02eda0
  4097f9:	jg     0x40983f
  4097fb:	mov    ch,0x61
  4097fd:	cmp    ecx,DWORD PTR [ebx+0x1d]
  409800:	cwde   
  409801:	leave  
  409802:	sbb    DWORD PTR [ebp+0x70],ebp
  409805:	jb     0x4097f2
  409807:	dec    BYTE PTR [edi-0x512e7f49]
  40980d:	jmp    0x8932:0x516000e9
  409814:	fadd   DWORD PTR [edi]
  409816:	sub    DWORD PTR [ebx-0x737a6492],edx
  40981c:	jge    0x4097a9
  40981e:	mov    ecx,0xd285dc3a
  409823:	je     0x40981d
  409825:	pop    ss
  409826:	jge    0x40980f
  409828:	scas   eax,DWORD PTR es:[edi]
  409829:	xor    dl,BYTE PTR [esi]
  40982b:	test   BYTE PTR cs:[esp+esi*1+0x503bb045],ah
  409833:	in     eax,0x3
  409835:	dec    ebp
  409836:	mov    esi,0x3dde934a
  40983b:	mov    bh,0xc5
  40983d:	loope  0x4098bc
  40983f:	out    dx,eax
  409840:	add    al,0x5b
  409842:	rcr    BYTE PTR [esi-0x65],1
  409845:	cld    
  409846:	ret    
  409847:	js     0x40986c
  409849:	ins    BYTE PTR es:[edi],dx
  40984a:	and    ah,al
  40984c:	outs   dx,BYTE PTR ds:[esi]
  40984d:	ds mov al,0x90
  409850:	inc    ebx
  409851:	ins    DWORD PTR es:[edi],dx
  409852:	inc    eax
  409853:	mov    dh,0xb
  409855:	nop
  409856:	outs   dx,DWORD PTR ds:[esi]
  409857:	call   0x8f7d381a
  40985c:	mov    al,0xa5
  40985e:	mov    ecx,DWORD PTR [esi]
  409860:	ret    0x485
  409863:	nop
  409864:	xchg   esp,eax
  409865:	push   ebx
  409866:	jmp    0x40980f
  409868:	fisub  DWORD PTR [edx+0x27]
  40986b:	in     eax,dx
  40986c:	push   ebp
  40986d:	aam    0xb2
  40986f:	test   DWORD PTR [esi-0x25],ecx
  409872:	xchg   edx,eax
  409873:	mov    WORD PTR [eax+0x5a25bd58],cs
  409879:	outs   dx,BYTE PTR ds:[esi]
  40987a:	aam    0x87
  40987c:	mov    ah,0xfc
  40987e:	ins    BYTE PTR es:[edi],dx
  40987f:	outs   dx,BYTE PTR ds:[esi]
  409880:	inc    ebp
  409881:	cld    
  409882:	clc    
  409883:	lods   eax,DWORD PTR ds:[esi]
  409884:	sbb    bh,BYTE PTR [ebx+0x76b6f9d5]
  40988a:	add    eax,0xd2b2bfc7
  40988f:	(bad)  
  409890:	loopne 0x40985b
  409892:	stos   BYTE PTR es:[edi],al
  409893:	cmc    
  409894:	out    dx,al
  409895:	into   
  409896:	inc    esp
  409897:	push   esp
  409898:	je     0x40990c
  40989a:	retf   0x6d58
  40989d:	pop    ds
  40989e:	mov    ch,0xb7
  4098a0:	cs mov dh,0x82
  4098a3:	loopne 0x4098ca
  4098a5:	rol    eax,cl
  4098a7:	enter  0x4712,0xbe
  4098ab:	sbb    edx,esp
  4098ad:	push   es
  4098ae:	int    0xaf
  4098b0:	jl     0x409852
  4098b2:	mov    al,ds:0x387047a1
  4098b7:	cli    
  4098b8:	aam    0x65
  4098ba:	mov    WORD PTR [ebx+0x24df918d],?
  4098c0:	stos   DWORD PTR es:[edi],eax
  4098c1:	mov    edi,0xea48be40
  4098c6:	and    eax,0x67acb08c
  4098cb:	ret    0x56fa
  4098ce:	add    DWORD PTR [eax-0x4ee5d7e],esp
  4098d4:	sti    
  4098d5:	ss scas al,BYTE PTR es:[edi]
  4098d7:	dec    edi
  4098d8:	fadd   st(4),st
  4098da:	arpl   WORD PTR [edi+0x52],dx
  4098dd:	stc    
  4098de:	leave  
  4098df:	inc    ebp
  4098e0:	inc    esp
  4098e1:	int    0x1d
  4098e3:	jmp    0x2e7c:0x858f070b
  4098ea:	cmp    bh,cl
  4098ec:	enter  0x9b69,0xea
  4098f0:	add    DWORD PTR [ebp+edi*8-0xccb81d8],edx
  4098f7:	pop    edi
  4098f8:	ror    DWORD PTR [ebx+0x78bc8eca],1
  4098fe:	(bad)  
  4098ff:	lds    eax,FWORD PTR [eax]
  409901:	into   
  409902:	sub    al,0xa8
  409904:	sahf   
  409905:	fmul   QWORD PTR [edx+0x65]
  409908:	xchg   DWORD PTR [ebx],esi
  40990a:	test   eax,0xdcedbaf7
  40990f:	popf   
  409910:	cmp    DWORD PTR [eax],ebp
  409912:	push   cs
  409913:	mov    WORD PTR ds:0xf0d618a2,es
  409919:	dec    ebx
  40991a:	sub    edx,DWORD PTR [ecx*2-0x4f7fa86c]
  409921:	fst    QWORD PTR [eax]
  409923:	sbb    al,0xb9
  409925:	in     al,dx
  409926:	mov    edi,0xea4bc73f
  40992b:	leave  
  40992c:	xor    DWORD PTR [ebx-0x619f51b7],esp
  409932:	xor    bl,BYTE PTR [ebx+0x2d]
  409935:	and    bl,BYTE PTR [esp+edx*8+0x608e0777]
  40993c:	cmp    al,0x45
  40993e:	rcr    eax,0x83
  409941:	inc    eax
  409942:	push   esp
  409943:	aaa    
  409944:	pushf  
  409945:	xchg   ecx,eax
  409946:	inc    edi
  409947:	and    edi,esp
  409949:	inc    esp
  40994a:	dec    esi
  40994b:	push   edi
  40994c:	sbb    DWORD PTR [ecx+esi*2-0x29],edi
  409950:	jmp    0x9c93:0x8ec2
  409956:	test   al,0x67
  409958:	out    0x34,al
  40995a:	xor    eax,0x839b1afd
  40995f:	cmp    ch,BYTE PTR [edi*1+0xe3d91c6]
  409966:	xchg   BYTE PTR [edx+ebx*1+0x8],al
  40996a:	shr    BYTE PTR [ecx],1
  40996c:	and    eax,0x20c23267
  409971:	jmp    0x40991a
  409973:	shl    DWORD PTR [edi-0x6a470344],cl
  409979:	pushf  
  40997a:	sub    bh,BYTE PTR [ebx-0x9]
  40997d:	adc    eax,0x63e5db97
  409982:	pop    ds
  409983:	lods   eax,DWORD PTR ds:[esi]
  409984:	or     BYTE PTR [eax],dl
  409986:	sbb    al,0xc0
  409988:	xchg   edi,eax
  409989:	adc    DWORD PTR gs:[eax-0x35],edi
  40998d:	jmp    0xeff270f6
  409992:	sub    ah,BYTE PTR [eax+eiz*1]
  409995:	pushf  
  409996:	retf   
  409997:	inc    esi
  409998:	cmp    bh,dh
  40999a:	push   es
  40999b:	push   0x4c
  40999d:	sub    eax,0xcf98eac3
  4099a2:	jmp    0xa82a:0x9a2820fb
  4099a9:	ret    0x8643
  4099ac:	jge    0x409948
  4099ae:	cs pusha 
  4099b0:	pop    edi
  4099b1:	std    
  4099b2:	mov    edi,ebx
  4099b4:	jmp    0x4099de
  4099b6:	xor    eax,0x66a9e380
  4099bb:	(bad)  [ecx]
  4099bd:	ror    DWORD PTR [ecx+0x137671e1],1
  4099c3:	add    eax,0x17c59b95
  4099c8:	mov    DWORD PTR [ebx],edi
  4099ca:	(bad)  
  4099cb:	jne    0x409a2d
  4099cd:	add    esp,DWORD PTR [edx-0x5f8187f0]
  4099d3:	call   0x570f:0xdaa882fb
  4099da:	ds int3 
  4099dc:	std    
  4099dd:	pop    es
  4099de:	mov    ds,WORD PTR [ebx]
  4099e0:	push   ebx
  4099e1:	cmp    DWORD PTR [edx-0x5b],edx
  4099e4:	(bad)  
  4099e5:	clc    
  4099e6:	cmp    ch,BYTE PTR [edx-0x67c03122]
  4099ec:	or     eax,0xc2aa30da
  4099f1:	lea    ebp,[ebp+0x66b8d94b]
  4099f7:	cs inc esi
  4099f9:	popa   
  4099fa:	fst    QWORD PTR [ecx-0x36d9582a]
  409a00:	and    ecx,DWORD PTR [eax-0x3f]
  409a03:	sbb    al,0x71
  409a05:	push   ebp
  409a06:	xor    ecx,ebp
  409a08:	jnp    0x409a00
  409a0a:	dec    edx
  409a0b:	cmp    al,0x72
  409a0d:	push   0xa446ed2e
  409a12:	addr16 mov eax,0x13a0f206
  409a18:	icebp  
  409a19:	jae    0x4099b7
  409a1b:	push   ds
  409a1c:	pop    esp
  409a1d:	lods   al,BYTE PTR ds:[esi]
  409a1e:	xchg   edi,eax
  409a1f:	sbb    eax,0x4f01ab2e
  409a24:	adc    eax,0x140a7628
  409a29:	ror    BYTE PTR [eax+ebx*1+0x22e18654],0xe4
  409a31:	xlat   BYTE PTR ds:[ebx]
  409a32:	sti    
  409a33:	adc    al,0x5f
  409a35:	sbb    eax,0xf1bc5076
  409a3a:	xchg   esp,eax
  409a3b:	pop    ecx
  409a3c:	retf   
  409a3d:	lods   al,BYTE PTR ds:[esi]
  409a3e:	ds xchg esi,eax
  409a40:	fnstenv [edx+0x51d4eaab]
  409a46:	sbb    BYTE PTR [edi],ch
  409a48:	sbb    al,0xd2
  409a4a:	not    DWORD PTR fs:[ebx]
  409a4d:	and    ah,BYTE PTR [eax+0x1b183ad7]
  409a53:	pop    eax
  409a54:	in     al,0xf9
  409a56:	enter  0x4d46,0x2
  409a5a:	mov    eax,0x7ee745c5
  409a5f:	ss js  0x409ac4
  409a62:	xor    al,0xff
  409a64:	mov    eax,ds:0xbda039cb
  409a69:	cmpps  xmm3,XMMWORD PTR [eax+0x334c6226],0x17
  409a71:	xchg   esp,eax
  409a72:	bound  eax,QWORD PTR [edi]
  409a74:	sbb    eax,DWORD PTR [edx]
  409a76:	push   edi
  409a77:	dec    ebx
  409a78:	std    
  409a79:	push   ss
  409a7a:	loope  0x409aaf
  409a7c:	aaa    
  409a7d:	punpckldq mm0,mm2
  409a80:	push   ds
  409a81:	cmp    esp,edx
  409a83:	imul   esi,DWORD PTR ds:0xd0d826a2,0x2f66478f
  409a8d:	retf   0xaf28
  409a90:	mov    eax,ds:0x6460cdde
  409a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a96:	sbb    ebx,DWORD PTR ds:[ebp-0x58a28875]
  409a9d:	jnp    0x409a53
  409a9f:	pop    ds
  409aa0:	mov    ebp,esp
  409aa2:	jmp    0x409a6a
  409aa4:	mov    ds:0xbd9cf8be,eax
  409aa9:	stc    
  409aaa:	(bad)  ds:0x3455a1b6
  409ab0:	mov    edi,0x3704bbb6
  409ab5:	loope  0x409a97
  409ab7:	pop    DWORD PTR [edx+0x44]
  409aba:	or     eax,0x3404b5ce
  409abf:	ret    
  409ac0:	fucomip st,st(5)
  409ac2:	mov    edx,0xd12ad928
  409ac7:	sub    DWORD PTR [edi+0x5a],ecx
  409aca:	fimul  DWORD PTR [edi]
  409acc:	(bad)  
  409acd:	add    DWORD PTR [eax+0x72],0xe7d10c35
  409ad4:	out    dx,eax
  409ad5:	rcr    BYTE PTR [ecx],1
  409ad7:	mov    dh,0x11
  409ad9:	(bad)  
  409ada:	jecxz  0x409aee
  409adc:	or     ecx,DWORD PTR [esi]
  409ade:	adc    cl,BYTE PTR [eax-0x1a]
  409ae1:	sbb    esp,DWORD PTR [ebp+0x4a0f5f6d]
  409ae7:	les    edx,FWORD PTR [edi+0x3c]
  409aea:	sub    BYTE PTR [edx+0x7300527],dh
  409af0:	retf   
  409af1:	shr    BYTE PTR [ecx+0x4f],0xb5
  409af5:	addr16 popf 
  409af7:	call   DWORD PTR [edx+ebp*1]
  409afa:	cli    
  409afb:	retf   
  409afc:	pop    ds
  409afd:	add    BYTE PTR [ebp+0x36],dh
  409b00:	xchg   cl,al
  409b02:	mov    al,es:0xb436fd3b
  409b08:	adc    ch,BYTE PTR [edx-0x2]
  409b0b:	jo     0x409b0d
  409b0d:	inc    edi
  409b0e:	int3   
  409b0f:	scas   eax,DWORD PTR es:[edi]
  409b10:	pusha  
  409b11:	daa    
  409b12:	sub    DWORD PTR [edx-0x3b],ebx
  409b15:	int3   
  409b16:	push   esp
  409b17:	arpl   WORD PTR [eax-0x54],ax
  409b1a:	jle    0x409b4a
  409b1c:	add    DWORD PTR [eax+edi*8],edi
  409b1f:	pop    eax
  409b20:	and    BYTE PTR [ecx],ah
  409b22:	pop    esp
  409b23:	mov    edi,0xd60ab1a1
  409b28:	mov    ecx,0x926d93d3
  409b2d:	call   FWORD PTR [eax-0x2d652311]
  409b33:	cmp    DWORD PTR [edi+0x23],0xffffff9b
  409b37:	sbb    BYTE PTR [esp+ebx*1],dl
  409b3a:	loop   0x409ad3
  409b3c:	dec    edi
  409b3d:	out    dx,al
  409b3e:	xchg   DWORD PTR [ebx],esp
  409b40:	enter  0x31c1,0xdd
  409b44:	xchg   edx,eax
  409b45:	test   BYTE PTR [ecx+0x21],ch
  409b48:	dec    ebp
  409b49:	test   ch,bl
  409b4b:	sbb    BYTE PTR [eax],bl
  409b4d:	mov    ds:0x12f371df,al
  409b52:	call   0x11ab:0xa39b67b0
  409b59:	daa    
  409b5a:	icebp  
  409b5b:	sub    al,0x48
  409b5d:	clc    
  409b5e:	add    eax,0x8bafce36
  409b63:	jb     0x409af4
  409b65:	mov    edi,0x8906ae2f
  409b6a:	sbb    BYTE PTR [ecx+0x35],ah
  409b6d:	sub    eax,0x177c4f7d
  409b72:	ins    BYTE PTR es:[edi],dx
  409b73:	popf   
  409b74:	or     ebx,DWORD PTR [ebp-0x54]
  409b77:	into   
  409b78:	add    al,0xe6
  409b7a:	sub    DWORD PTR [ebx+0x5c9f2219],ecx
  409b80:	in     al,dx
  409b81:	call   0x32f76012
  409b86:	mov    ecx,0x85b7e6fd
  409b8b:	fldl2e 
  409b8d:	pop    esi
  409b8e:	rol    BYTE PTR [eax],1
  409b90:	push   eax
  409b91:	or     al,0x5a
  409b93:	jp     0x409c0d
  409b95:	je     0x409b3c
  409b97:	mov    WORD PTR [edx-0x49954c39],fs
  409b9d:	rcl    BYTE PTR [edx-0x24],cl
  409ba0:	and    eax,0x248c38b0
  409ba5:	aas    
  409ba6:	and    DWORD PTR [edi+0x60],ecx
  409ba9:	pusha  
  409baa:	xlat   BYTE PTR ds:[ebx]
  409bab:	sub    edi,DWORD PTR [ecx-0x59]
  409bae:	lock jae 0x409bb3
  409bb1:	call   0x363fd74a
  409bb6:	imul   ebp,edi,0xfa1aff5d
  409bbc:	jbe    0x409b89
  409bbe:	push   ebp
  409bbf:	ret    
  409bc0:	xchg   BYTE PTR [ebp-0x288f8a06],dh
  409bc6:	push   esi
  409bc7:	pop    esi
  409bc8:	xchg   DWORD PTR [ecx+0x4626ecbb],ebx
  409bce:	arpl   dx,si
  409bd0:	clc    
  409bd1:	ret    
  409bd2:	adc    al,0x99
  409bd4:	push   cs
  409bd5:	or     DWORD PTR [edi],ebx
  409bd7:	cld    
  409bd8:	lahf   
  409bd9:	js     0x409c12
  409bdb:	cmc    
  409bdc:	fcom   QWORD PTR [edx+eiz*2-0x4b]
  409be0:	repz cmp DWORD PTR [ebx-0x35],esi
  409be4:	or     al,0x84
  409be6:	loope  0x409c02
  409be8:	ffreep st(4)
  409bea:	arpl   dx,bp
  409bec:	fisttp DWORD PTR [edi+0x28]
  409bef:	sbb    al,0xc4
  409bf1:	daa    
  409bf2:	fistp  WORD PTR [ecx+0x7fe38e1d]
  409bf8:	hlt    
  409bf9:	sbb    eax,0xce3d40f6
  409bfe:	mov    ds:0xb68bcf75,eax
  409c03:	cwde   
  409c04:	rcr    DWORD PTR [eax],1
  409c06:	sub    al,0x4d
  409c08:	xor    al,0xfd
  409c0a:	jno    0x409bb1
  409c0c:	add    BYTE PTR [edi-0x689b60aa],ah
  409c12:	xor    DWORD PTR [edi+0x2fb59f7],esi
  409c18:	mov    cl,0xf5
  409c1a:	mov    ebp,0x59819c79
  409c1f:	add    DWORD PTR [edx],ebx
  409c21:	pop    edx
  409c22:	js     0x409c9d
  409c24:	sahf   
  409c25:	stos   DWORD PTR es:[edi],eax
  409c26:	xor    eax,0xeb8ca065
  409c2b:	shl    BYTE PTR [edx],1
  409c2d:	(bad)  
  409c2e:	out    0x28,al
  409c30:	mov    DWORD PTR [edi+0x4dd7ca17],edx
  409c36:	jo     0x409be8
  409c38:	mov    WORD PTR [eax+0x454fdf2e],ss
  409c3e:	inc    ebp
  409c3f:	aam    0x1a
  409c41:	xlat   BYTE PTR ds:[ebx]
  409c42:	and    ebp,ebp
  409c44:	pop    edi
  409c45:	add    BYTE PTR [edx+0x5d513c53],ah
  409c4b:	rcr    DWORD PTR [ebp+0x3],1
  409c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c4f:	xchg   ebp,eax
  409c50:	sbb    esp,DWORD PTR [eax]
  409c52:	xchg   DWORD PTR [esi+esi*1],eax
  409c55:	sub    DWORD PTR fs:[edi+ecx*4],edi
  409c59:	sub    bh,dh
  409c5b:	sub    esi,DWORD PTR [eax]
  409c5d:	enter  0x4de6,0x91
  409c61:	and    ch,BYTE PTR [eax]
  409c63:	dec    esp
  409c64:	pop    dx
  409c66:	fstp   QWORD PTR [ecx-0x1e]
  409c69:	lahf   
  409c6a:	in     eax,dx
  409c6b:	cmp    al,BYTE PTR [edi-0x1a]
  409c6e:	adc    DWORD PTR [ebp+0x39],edi
  409c71:	mov    dl,bh
  409c73:	xor    BYTE PTR [ebp-0x9],cl
  409c76:	scas   eax,DWORD PTR es:[edi]
  409c77:	mov    ds:0x315752a9,al
  409c7c:	leave  
  409c7d:	ins    BYTE PTR es:[edi],dx
  409c7e:	and    ebx,DWORD PTR [edi+0x6b]
  409c81:	pop    esp
  409c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c83:	js     0x409cd9
  409c85:	mov    BYTE PTR [edx+0x78ce2053],dl
  409c8b:	pop    esi
  409c8c:	jnp    0x409c91
  409c8e:	shl    BYTE PTR [edx],1
  409c90:	loop   0x409ccc
  409c92:	data16 js 0x409c9a
  409c95:	(bad)
  409c98:	(bad)  
  409c99:	sbb    al,0xca
  409c9b:	inc    edi
  409c9c:	test   dl,cl
  409c9e:	and    ebp,ecx
  409ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ca1:	jg     0x409cf8
  409ca3:	ret    0x3541
  409ca6:	imul   ecx,ebp,0x2b01e67
  409cac:	hlt    
  409cad:	dec    eax
  409cae:	adc    BYTE PTR [eax],ch
  409cb0:	data16 fistp QWORD PTR [bx+di]
  409cb4:	cmp    bl,ch
  409cb6:	push   cs
  409cb7:	fild   QWORD PTR [eax]
  409cb9:	mov    WORD PTR [edi-0x3118f90b],gs
  409cbf:	(bad)  
  409cc0:	ror    DWORD PTR ds:0xa530711a,cl
  409cc6:	mov    ebp,0xb898b86b
  409ccb:	mov    eax,ds:0x4a8c4d10
  409cd0:	loop   0x409c58
  409cd2:	aaa    
  409cd3:	jge    0x409c6c
  409cd5:	ficom  DWORD PTR [esi]
  409cd7:	jg     0x409c9b
  409cd9:	loope  0x409c75
  409cdb:	cmp    ch,dl
  409cdd:	(bad)  
  409cde:	lock aam 0x30
  409ce1:	adc    BYTE PTR [eax+0x43],dl
  409ce4:	push   0xba3d2779
  409ce9:	inc    esi
  409cea:	push   ds
  409ceb:	push   0x24
  409ced:	mov    ebp,0xf41ed978
  409cf2:	hlt    
  409cf3:	ins    BYTE PTR es:[edi],dx
  409cf4:	cld    
  409cf5:	das    
  409cf6:	and    ebx,DWORD PTR [ebp+0x10]
  409cf9:	mov    bh,0xec
  409cfb:	mov    ss,WORD PTR [ebx]
  409cfd:	mov    esi,0xa4829c97
  409d02:	xchg   dh,dh
  409d04:	(bad)  
  409d05:	add    ecx,DWORD PTR [ecx]
  409d07:	aad    0x30
  409d09:	adc    edx,ebp
  409d0b:	push   0x67e6edbe
  409d10:	stos   DWORD PTR es:[edi],eax
  409d11:	loopne 0x409cd8
  409d13:	iret   
  409d14:	(bad)  
  409d15:	fsubr  st(6),st
  409d17:	aad    0xf2
  409d19:	xor    BYTE PTR [ecx+esi*8-0x43],ch
  409d1d:	in     eax,0xa5
  409d1f:	push   0x593f708e
  409d24:	icebp  
  409d25:	or     ebp,edx
  409d27:	mov    ds:0x8f026d43,eax
  409d2c:	icebp  
  409d2d:	int    0x4
  409d2f:	shr    ah,1
  409d31:	fbld   TBYTE PTR [eax-0x315a705a]
  409d37:	(bad)  
  409d38:	sar    DWORD PTR [edx],1
  409d3a:	mov    dl,0x24
  409d3c:	in     al,dx
  409d3d:	cs cs pop es
  409d40:	cmp    eax,0x9b96577c
  409d45:	es jmp 0x6149:0xb84f4126
  409d4d:	repz mov bh,0x20
  409d50:	mov    bh,bh
  409d52:	pop    edx
  409d53:	aas    
  409d54:	mov    ds:0xf87f5f11,al
  409d59:	shr    BYTE PTR [ecx-0x2a],cl
  409d5c:	outs   dx,BYTE PTR ds:[esi]
  409d5d:	mov    al,ds:0xc1c8bc03
  409d62:	mov    edx,0x31c91e9c
  409d67:	mov    WORD PTR [edi+edi*2],cs
  409d6a:	push   ebx
  409d6b:	adc    DWORD PTR [ebp+0x2d],esp
  409d6e:	in     al,dx
  409d6f:	pop    ds
  409d70:	and    ebp,DWORD PTR [ecx]
  409d72:	cmp    bh,BYTE PTR ds:0x31d29b60
  409d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d79:	pop    esp
  409d7a:	sbb    al,0x9f
  409d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d7d:	(bad)  ds:0xc300110
  409d83:	xor    DWORD PTR [ebx-0x60],esi
  409d86:	or     al,0x33
  409d88:	cmp    BYTE PTR [ebx],dl
  409d8a:	push   ecx
  409d8b:	in     eax,0x1f
  409d8d:	xchg   BYTE PTR [ecx],cl
  409d8f:	add    al,0xc1
  409d91:	jne    0x409d8d
  409d93:	clc    
  409d94:	or     BYTE PTR [ebp+ebp*8+0x54],al
  409d98:	mov    ch,dh
  409d9a:	imul   ebp,DWORD PTR [eax],0x9aaac3af
  409da0:	(bad)  
  409da1:	mov    esp,0xc70ef0cc
  409da6:	lea    ecx,[ecx+0x117184ac]
  409dac:	cwde   
  409dad:	lahf   
  409dae:	(bad)  
  409daf:	sub    BYTE PTR [edi+ebp*1+0x5bb85c1e],dl
  409db6:	xchg   ecx,eax
  409db7:	sub    ch,BYTE PTR [eax]
  409db9:	adc    eax,DWORD PTR [edi]
  409dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dbc:	mov    dl,0x22
  409dbe:	cs pop eax
  409dc0:	cs inc esi
  409dc2:	jnp    0x409dfb
  409dc4:	lods   eax,DWORD PTR ds:[esi]
  409dc5:	int    0x1
  409dc7:	cmp    al,BYTE PTR [ecx+esi*1]
  409dca:	mul    DWORD PTR [ebp+0x4698596a]
  409dd0:	adc    dh,BYTE PTR [ebx+0x24]
  409dd3:	pop    ds
  409dd4:	fucomp st(1)
  409dd6:	xchg   edx,eax
  409dd7:	jge    0x409d62
  409dd9:	(bad)  
  409dda:	aad    0x8a
  409ddc:	xchg   edi,eax
  409ddd:	lea    edi,[ebx+0x76]
  409de0:	mov    ebx,0x2354cd11
  409de5:	or     dl,BYTE PTR [eax-0x4a]
  409de8:	sub    ebp,DWORD PTR [edx+0x1758c7b7]
  409dee:	sub    al,0xea
  409df0:	cmp    edx,edx
  409df2:	dec    edi
  409df3:	dec    edx
  409df4:	add    eax,edi
  409df6:	ds dec edi
  409df8:	push   esp
  409df9:	std    
  409dfa:	icebp  
  409dfb:	outs   dx,BYTE PTR ds:[esi]
  409dfc:	mov    edx,0xdff10e65
  409e01:	mov    al,0x5d
  409e03:	aad    0x33
  409e05:	push   es
  409e06:	call   0x39475823
  409e0b:	xchg   edi,eax
  409e0c:	fsub   QWORD PTR [ebx-0x328c7f34]
  409e12:	xor    al,0x45
  409e14:	mov    ah,0x2a
  409e16:	lds    ecx,FWORD PTR [eax-0x4ad3461]
  409e1c:	mov    edx,0xd1151068
  409e21:	add    ah,BYTE PTR [ebx]
  409e23:	stos   DWORD PTR es:[edi],eax
  409e24:	jb     0x409e2a
  409e26:	call   0xb7e:0xdab886fd
  409e2d:	add    al,0x76
  409e2f:	ret    0x2a43
  409e32:	inc    ebx
  409e33:	sbb    dh,BYTE PTR [ecx-0x17]
  409e36:	int3   
  409e37:	push   ds
  409e38:	mov    cl,0x64
  409e3a:	daa    
  409e3b:	jmp    0x843e09f5
  409e40:	rcr    BYTE PTR [edx+0x2a98d3ea],1
  409e46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e47:	push   edx
  409e48:	nop
  409e49:	adc    eax,0x15c361ec
  409e4e:	fimul  WORD PTR [edx]
  409e50:	or     ah,dh
  409e52:	or     BYTE PTR [ecx*1+0x68aa8e97],bl
  409e59:	rol    BYTE PTR [eax],1
  409e5b:	pop    edx
  409e5c:	sub    ecx,DWORD PTR [edi]
  409e5e:	cmp    BYTE PTR ds:0x516702c5,0xe2
  409e65:	cwde   
  409e66:	arpl   WORD PTR [eax+0x6c],bp
  409e69:	dec    ebp
  409e6a:	bound  ebx,QWORD PTR [ebx+0x48]
  409e6d:	or     DWORD PTR [ebx+0x16455068],0x19710aa5
  409e77:	mov    ecx,0xf1fd5e7c
  409e7c:	fiadd  WORD PTR [edi+0x52]
  409e7f:	jge    0x409ecc
  409e81:	jl     0x409ec3
  409e83:	(bad)  
  409e84:	ds push edi
  409e86:	adc    eax,edi
  409e88:	fistp  WORD PTR [ebp+ecx*4-0x6c707fde]
  409e8f:	lods   al,BYTE PTR ds:[esi]
  409e90:	les    edi,FWORD PTR [ebp-0x1eadc125]
  409e96:	jmp    0x409e50
  409e98:	and    BYTE PTR ds:0x1ed73629,cl
  409e9e:	aam    0xe6
  409ea0:	dec    edi
  409ea1:	push   edi
  409ea2:	push   cs
  409ea3:	pop    eax
  409ea4:	mov    DWORD PTR [ebp-0x42365a2a],esi
  409eaa:	jae    0x409f2a
  409eac:	dec    BYTE PTR [ebx]
  409eae:	cmp    esp,DWORD PTR [ecx]
  409eb0:	(bad)  
  409eb1:	sub    al,0x6c
  409eb3:	push   edi
  409eb4:	ss scas eax,DWORD PTR es:[edi]
  409eb6:	jecxz  0x409e5b
  409eb8:	loope  0x409ef5
  409eba:	jb     0x409e56
  409ebc:	sub    al,0x96
  409ebe:	repz ds popf 
  409ec1:	repnz push eax
  409ec3:	xor    DWORD PTR ss:[ebp+0x59],ebp
  409ec7:	cmp    esi,DWORD PTR [ecx]
  409ec9:	xlat   BYTE PTR ds:[ebx]
  409eca:	mov    ecx,0x74acc3dc
  409ecf:	fcomip st,st(6)
  409ed1:	je     0x409e85
  409ed3:	nop
  409ed4:	mov    edx,0x7d1ced49
  409ed9:	mov    edi,0xd245bd0
  409ede:	or     ecx,edi
  409ee0:	cdq    
  409ee1:	push   ebx
  409ee2:	addr16 inc edi
  409ee4:	push   edx
  409ee5:	cmp    al,0x7e
  409ee7:	dec    ebx
  409ee8:	push   0x6
  409eea:	push   ecx
  409eeb:	mov    edx,0x3d548503
  409ef0:	and    ah,BYTE PTR [ecx-0x5fad5e05]
  409ef6:	or     ebx,ecx
  409ef8:	(bad)  
  409ef9:	in     al,0x25
  409efb:	fwait
  409efc:	in     al,dx
  409efd:	loop   0x409ea1
  409eff:	xlat   BYTE PTR ds:[ebx]
  409f00:	mov    eax,0xceb7e3b
  409f05:	add    cl,cl
  409f07:	(bad)  
  409f09:	mov    al,ds:0x7153186a
  409f0e:	add    BYTE PTR ds:0x91e6e277,ah
  409f14:	jb     0x409f65
  409f16:	inc    edi
  409f17:	nop
  409f18:	mov    edx,0x46721a3d
  409f1d:	sti    
  409f1e:	sahf   
  409f1f:	and    eax,0x7b507100
  409f24:	mov    bh,0x82
  409f26:	out    dx,eax
  409f27:	or     eax,0x98d0672c
  409f2c:	je     0x409f8a
  409f2e:	aaa    
  409f2f:	arpl   WORD PTR [ebp+0x1],bx
  409f32:	loopne 0x409f5f
  409f34:	and    ah,BYTE PTR [edi+0x6e]
  409f37:	push   es
  409f38:	mov    dh,0x48
  409f3a:	push   0xcc81d5ed
  409f3f:	outs   dx,DWORD PTR ds:[esi]
  409f40:	sbb    ecx,DWORD PTR [esi-0x60]
  409f43:	xor    ebx,eax
  409f45:	xor    ecx,DWORD PTR [ecx+0x12]
  409f48:	sub    DWORD PTR [ebp-0x66],0xffffff90
  409f4c:	shr    BYTE PTR [ecx-0x448ad78],cl
  409f52:	inc    edx
  409f53:	in     eax,0x6c
  409f55:	test   BYTE PTR [eax],dl
  409f57:	out    0xce,al
  409f59:	push   0xffffff9a
  409f5b:	jne    0x409ee5
  409f5d:	xchg   edx,eax
  409f5e:	sti    
  409f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f60:	push   ebp
  409f61:	dec    esp
  409f62:	test   al,0x86
  409f64:	add    eax,0xec1bdc94
  409f69:	add    DWORD PTR [eax],ebp
  409f6b:	js     0x409fc5
  409f6d:	inc    ecx
  409f6e:	or     DWORD PTR [ecx+0x29],ebx
  409f71:	cmp    eax,0x8b7bd209
  409f76:	loop   0x409ff5
  409f78:	out    0x0,al
  409f7a:	ds dec ecx
  409f7c:	lods   eax,DWORD PTR ds:[esi]
  409f7d:	cwde   
  409f7e:	push   esp
  409f7f:	inc    ebx
  409f80:	push   0x198808b
  409f85:	add    BYTE PTR [eax],al
  409f87:	and    DWORD PTR ds:0x429008,0x0
  409f91:	xor    edx,edx
  409f93:	add    edx,DWORD PTR ds:0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a271
  40a251:	cmp    eax,0x5d0cc69
  40a256:	jl     0x40a2d4
  40a258:	dec    esi
  40a259:	pop    edi
  40a25a:	jl     0x40a2d8
  40a25c:	adc    DWORD PTR [ebp-0x31],0x6bff110a
  40a263:	jbe    0x40a2ca
  40a265:	cmp    DWORD PTR [ebx-0xc0154a6],esi
  40a26b:	out    0xfc,al
  40a26d:	add    dl,BYTE PTR [edi]
  40a26f:	repz add dh,BYTE PTR [ebp+0x1]
  40a273:	mov    al,ds:0x3d0a29a7
  40a278:	dec    esp
  40a279:	mov    ecx,0xea07cd3f
  40a27e:	jp     0x40a256
  40a280:	pop    esi
  40a281:	(bad)  
  40a282:	(bad)  
  40a284:	pop    es
  40a285:	mov    esp,DWORD PTR [edi-0xcd18239]
  40a28b:	les    edx,FWORD PTR [edx+0x3a]
  40a28e:	xchg   ebp,eax
  40a28f:	or     eax,0x75
  40a292:	adc    al,0x59
  40a294:	push   ebx
  40a295:	inc    esp
  40a296:	pop    ebx
  40a297:	std    
  40a298:	std    
  40a299:	icebp  
  40a29a:	sti    
  40a29b:	xchg   edi,eax
  40a29c:	mov    edx,0x9c5f6ee5
  40a2a1:	neg    DWORD PTR [edx+eiz*8]
  40a2a4:	xchg   edx,eax
  40a2a5:	push   ebp
  40a2a6:	loope  0x40a250
  40a2a8:	adc    dh,BYTE PTR [eax]
  40a2aa:	xchg   edx,eax
  40a2ab:	jae    0x40a312
  40a2ad:	add    eax,0xc674a856
  40a2b2:	dec    ebp
  40a2b3:	jns    0x40a2c4
  40a2b5:	fadd   QWORD PTR [edi-0x4282349]
  40a2bb:	shl    BYTE PTR [ebx+ebp*2-0x1d],0x68
  40a2c0:	js     0x40a2d7
  40a2c2:	jle    0x40a270
  40a2c4:	push   ds
  40a2c5:	push   cs
  40a2c6:	dec    eax
  40a2c7:	mov    ah,0xf1
  40a2c9:	clc    
  40a2ca:	repz dec ebp
  40a2cc:	inc    edi
  40a2cd:	shr    DWORD PTR [eax],cl
  40a2cf:	clc    
  40a2d0:	fstp   TBYTE PTR [ebx-0x2e]
  40a2d3:	xchg   edi,eax
  40a2d4:	fwait
  40a2d5:	(bad)  
  40a2d6:	js     0x40a292
  40a2d8:	mov    al,0x9c
  40a2da:	cmp    cl,BYTE PTR [esi-0x72]
  40a2dd:	pcmpeqw mm1,QWORD PTR [edi-0x4d3042f2]
  40a2e4:	pop    eax
  40a2e5:	add    al,0xd
  40a2e7:	addr16 inc esp
  40a2e9:	icebp  
  40a2ea:	bound  ecx,QWORD PTR [ebp+0x79]
  40a2ed:	(bad)  
  40a2ee:	aad    0xc9
  40a2f0:	out    dx,eax
  40a2f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2f2:	imul   ecx,DWORD PTR [ebp+0x6d],0xffffff9f
  40a2f6:	mov    ds:0x44830be5,eax
  40a2fb:	mov    bh,0xf
  40a2fd:	inc    esi
  40a2fe:	pop    ebx
  40a2ff:	mov    DWORD PTR [ebx],esi
  40a301:	pop    esp
  40a302:	ins    BYTE PTR es:[edi],dx
  40a303:	(bad)  
  40a304:	push   cs
  40a305:	mov    ebp,ss
  40a307:	cs cld 
  40a309:	adc    ebx,edx
  40a30b:	aas    
  40a30c:	outs   dx,BYTE PTR ds:[esi]
  40a30d:	adc    bh,bl
  40a30f:	shr    edx,cl
  40a311:	add    edi,DWORD PTR [esi+0x733710a6]
  40a317:	cmp    ebx,DWORD PTR [ebp+0x18]
  40a31a:	mov    ah,0x1a
  40a31c:	dec    edx
  40a31d:	rcl    DWORD PTR [esi],1
  40a31f:	ficom  DWORD PTR [ebx]
  40a321:	mov    ebx,0xa78f44a1
  40a326:	dec    esp
  40a327:	jmp    0x40a2d5
  40a329:	jg     0x40a354
  40a32b:	push   ebp
  40a32c:	test   BYTE PTR [esi-0x5a100c21],dl
  40a332:	cwde   
  40a333:	jge    0x40a2e7
  40a335:	lds    eax,FWORD PTR [ebp+0x54]
  40a338:	leave  
  40a339:	adc    ebx,ebp
  40a33b:	imul   edi,DWORD PTR [ecx],0xffffffc8
  40a33e:	push   ebx
  40a33f:	cli    
  40a340:	jo     0x40a368
  40a342:	push   edi
  40a343:	dec    eax
  40a344:	pop    ebp
  40a345:	cmc    
  40a346:	rol    DWORD PTR [ebx+0x340219a6],0x7f
  40a34d:	mov    bl,bh
  40a34f:	jle    0x40a391
  40a351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a352:	push   edi
  40a353:	cmp    bh,cl
  40a355:	(bad)  
  40a356:	jl     0x40a3ae
  40a358:	ins    BYTE PTR es:[edi],dx
  40a359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a35a:	push   esi
  40a35b:	adc    BYTE PTR [ebp-0x3e],bh
  40a35e:	sbb    esp,DWORD PTR [edi-0x4e]
  40a361:	sahf   
  40a362:	and    eax,0xf2f9f6e0
  40a367:	or     ah,dl
  40a369:	hlt    
  40a36a:	and    DWORD PTR [ecx+ecx*8],esp
  40a36d:	xchg   ebx,eax
  40a36e:	add    BYTE PTR [ecx],ah
  40a370:	cwde   
  40a371:	cmp    BYTE PTR [edi],0x1b
  40a374:	xor    DWORD PTR [ecx+0x76fb595e],0x5d7f43aa
  40a37e:	push   ds
  40a37f:	jmp    0x40a308
  40a381:	push   ecx
  40a382:	in     al,0xaa
  40a384:	ror    DWORD PTR [ecx-0x52bf2a19],1
  40a38a:	cmc    
  40a38b:	mov    al,dh
  40a38d:	pusha  
  40a38e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a38f:	jmp    0x40a325
  40a391:	retf   0x7975
  40a394:	mov    BYTE PTR [edi-0x3a],dh
  40a397:	push   ebx
  40a398:	arpl   WORD PTR [ebp+0x40b7c82d],bp
  40a39e:	call   0xbd18ec0c
  40a3a3:	mov    ebx,0xf92641c7
  40a3a8:	hlt    
  40a3a9:	jb     0x40a346
  40a3ab:	in     eax,0x75
  40a3ad:	xor    eax,0xf4a92619
  40a3b2:	int    0xdb
  40a3b4:	shl    BYTE PTR [esi-0x1e],0xfe
  40a3b8:	retf   
  40a3b9:	sbb    eax,0x2854525
  40a3be:	outs   dx,DWORD PTR ds:[esi]
  40a3bf:	out    0xdd,eax
  40a3c1:	pop    esp
  40a3c2:	mov    WORD PTR [ebp-0x40],cs
  40a3c5:	js     0x40a3e7
  40a3c7:	sbb    DWORD PTR [esi+eiz*4-0x5913c58c],0xffffffc3
  40a3cf:	iret   
  40a3d0:	push   esi
  40a3d1:	pop    edi
  40a3d2:	dec    edx
  40a3d3:	or     ebp,DWORD PTR [ebp+0x67e74acb]
  40a3d9:	(bad)
  40a3dd:	call   0x18e6:0xe07efcd6
  40a3e4:	dec    esp
  40a3e5:	jg     0x40a40d
  40a3e7:	das    
  40a3e8:	sbb    dl,dl
  40a3ea:	and    esi,ebx
  40a3ec:	sbb    DWORD PTR [esi+0x53cd6b6c],edx
  40a3f2:	pop    edx
  40a3f3:	enter  0x7999,0x8c
  40a3f7:	xor    ch,BYTE PTR [eax+0x23]
  40a3fa:	stos   BYTE PTR es:[edi],al
  40a3fb:	ja     0x40a3f0
  40a3fd:	inc    ebp
  40a3fe:	inc    ecx
  40a3ff:	sbb    eax,0xbf0af2e0
  40a404:	xor    al,0x4
  40a406:	sub    dh,bl
  40a408:	sbb    ch,bl
  40a40a:	sub    DWORD PTR [ebp+0x74],ebp
  40a40d:	loop   0x40a3d3
  40a40f:	cs (bad) 
  40a411:	inc    eax
  40a412:	call   0xbdad:0x3ac0d3e7
  40a419:	rol    DWORD PTR [ebx+eax*1+0x172e0976],0x98
  40a421:	or     eax,0x731c9fce
  40a426:	arpl   sp,si
  40a428:	lods   eax,DWORD PTR ds:[esi]
  40a429:	and    ebx,DWORD PTR [edi]
  40a42b:	cmp    eax,0x561b45d1
  40a430:	sbb    al,0xfb
  40a432:	or     eax,0x778ebf1d
  40a437:	or     esi,edi
  40a439:	add    ch,BYTE PTR [edi+ecx*2+0x17ec4340]
  40a440:	outs   dx,BYTE PTR ds:[esi]
  40a441:	out    dx,al
  40a442:	mov    edx,0x963e83b2
  40a447:	inc    esi
  40a448:	xchg   ebx,eax
  40a449:	push   ds
  40a44a:	in     eax,dx
  40a44b:	push   esi
  40a44c:	es out dx,eax
  40a44e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a44f:	enter  0x7863,0x10
  40a453:	jae    0x40a454
  40a455:	ficom  DWORD PTR [esi]
  40a457:	cwde   
  40a458:	inc    eax
  40a459:	add    eax,0x452e3c14
  40a45e:	neg    BYTE PTR [esi+0x7c512d32]
  40a464:	enter  0x43a2,0x2a
  40a468:	mov    edx,0xa38ae9c5
  40a46d:	mov    eax,0x4b902859
  40a472:	imul   eax,DWORD PTR [eax+ebx*2],0xa207a98
  40a479:	push   ds
  40a47a:	fwait
  40a47b:	cmp    BYTE PTR ds:[ecx+edi*2+0x5722934f],cl
  40a483:	int3   
  40a484:	mov    ah,0x53
  40a486:	jb     0x40a43b
  40a488:	loopne 0x40a488
  40a48a:	pop    ebp
  40a48b:	in     eax,dx
  40a48c:	mov    ds:0xc7e4fb59,eax
  40a491:	sbb    ebx,DWORD PTR [edx-0x3c6c0780]
  40a497:	and    ch,0xd4
  40a49a:	mov    ebx,DWORD PTR [edi+0x6bff9d72]
  40a4a0:	sbb    edi,DWORD PTR [edx+ebp*8-0x675a620c]
  40a4a7:	jo     0x40a485
  40a4a9:	(bad)  [edi-0x42957b9c]
  40a4af:	or     bl,BYTE PTR [esi+0x1a87cdbf]
  40a4b5:	test   BYTE PTR [edx+0x78b7cde8],bh
  40a4bb:	sub    al,BYTE PTR [ecx]
  40a4bd:	cmp    edx,DWORD PTR [ebx+0x47]
  40a4c0:	inc    ebx
  40a4c1:	icebp  
  40a4c2:	(bad)  
  40a4c3:	in     al,dx
  40a4c4:	icebp  
  40a4c5:	add    eax,0x39c2ee34
  40a4ca:	inc    eax
  40a4cb:	mov    bh,0x5a
  40a4cd:	pop    eax
  40a4ce:	jns    0x40a4e2
  40a4d0:	inc    esp
  40a4d1:	push   0x243b9713
  40a4d6:	lea    ebp,ds:0x11ea34d7
  40a4dc:	stos   DWORD PTR es:[edi],eax
  40a4dd:	aaa    
  40a4de:	test   eax,0x8298b3f8
  40a4e3:	out    0xcb,eax
  40a4e5:	mov    bh,0x75
  40a4e7:	popf   
  40a4e8:	int3   
  40a4e9:	out    0xc5,eax
  40a4eb:	mov    al,ds:0x4d37adb5
  40a4f0:	int3   
  40a4f1:	inc    edx
  40a4f2:	add    ebp,esp
  40a4f4:	dec    edi
  40a4f5:	jp     0x40a527
  40a4f7:	nop
  40a4f8:	dec    eax
  40a4f9:	adc    ebx,DWORD PTR [ecx+0x3864f023]
  40a4ff:	test   eax,0xca165a23
  40a504:	xlat   BYTE PTR ds:[ebx]
  40a505:	inc    esi
  40a506:	mov    eax,ds:0xdc622f77
  40a50b:	sar    BYTE PTR [eax-0x6e26ee40],1
  40a511:	mov    dl,0xee
  40a513:	add    eax,0x32d669ce
  40a518:	test   BYTE PTR [ecx+0x72],al
  40a51b:	mov    WORD PTR [eax+0x3b5e455b],ds
  40a521:	sub    al,0x9d
  40a523:	lods   al,BYTE PTR ds:[esi]
  40a524:	stc    
  40a525:	retf   
  40a526:	mov    bl,0x97
  40a528:	sbb    eax,0xc1320463
  40a52d:	mov    bl,0x3
  40a52f:	sub    DWORD PTR [ebx-0x7f9e64b2],esp
  40a535:	adc    dh,BYTE PTR ds:0x99db1405
  40a53b:	adc    eax,0xe3718e1f
  40a540:	jno    0x40a531
  40a542:	retf   0x610
  40a545:	aam    0x1
  40a547:	push   esi
  40a548:	mov    bl,0xf5
  40a54a:	and    ecx,edi
  40a54c:	ins    BYTE PTR es:[edi],dx
  40a54d:	sti    
  40a54e:	pop    edx
  40a54f:	(bad)  
  40a550:	cmp    dl,BYTE PTR [ecx-0x6158cf6]
  40a556:	addr16 int3 
  40a558:	dec    esi
  40a559:	xor    ebx,DWORD PTR [edi+0x69]
  40a55c:	dec    ebx
  40a55d:	push   ss
  40a55e:	sub    esp,DWORD PTR [edi+eiz*2+0x41338923]
  40a565:	cmp    BYTE PTR [ecx-0x50ab5192],al
  40a56b:	fcmovnbe st,st(2)
  40a56d:	icebp  
  40a56e:	cmp    eax,0x2d
  40a571:	fdivr  DWORD PTR [ebp+ebp*8-0x30]
  40a575:	test   eax,0x8855ab1a
  40a57a:	or     dl,bl
  40a57c:	pop    esp
  40a57d:	and    BYTE PTR [edi-0x78bebe0a],cl
  40a583:	es call 0x35761048
  40a589:	push   es
  40a58a:	(bad)  
  40a58b:	fs cmp eax,ebx
  40a58e:	hlt    
  40a58f:	out    dx,al
  40a590:	ds inc esi
  40a592:	aam    0xad
  40a594:	lea    edi,[ebx]
  40a596:	cs push ecx
  40a598:	dec    esi
  40a599:	xchg   esi,eax
  40a59a:	clc    
  40a59b:	mov    al,0xe7
  40a59d:	cld    
  40a59e:	cmp    cl,ah
  40a5a0:	stos   BYTE PTR es:[edi],al
  40a5a1:	pop    ecx
  40a5a2:	jns    0x40a57b
  40a5a4:	pop    ds
  40a5a5:	lock push cs
  40a5a7:	mov    ah,bl
  40a5a9:	aas    
  40a5aa:	and    BYTE PTR [eax-0x4ae854e6],dl
  40a5b0:	ret    
  40a5b1:	mul    DWORD PTR [ebx-0x14e4324d]
  40a5b7:	into   
  40a5b8:	addr16 jno 0x40a540
  40a5bb:	mov    ds:0xde84da28,eax
  40a5c0:	adc    DWORD PTR [ebp-0x60],ebx
  40a5c3:	sbb    BYTE PTR [ebp-0x730f971e],0xbb
  40a5ca:	jne    0x40a5d4
  40a5cc:	test   BYTE PTR [bx+si-0x5019],0xba
  40a5d2:	int    0xc4
  40a5d4:	stos   DWORD PTR es:[edi],eax
  40a5d5:	push   es
  40a5d6:	cli    
  40a5d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5d8:	fbld   TBYTE PTR [ecx+0x37]
  40a5db:	or     bh,BYTE PTR [ebp-0xf]
  40a5de:	xlat   BYTE PTR ds:[ebx]
  40a5df:	retf   0x263c
  40a5e2:	aam    0x2a
  40a5e4:	fwait
  40a5e5:	mov    edx,0x5ee91187
  40a5ea:	pusha  
  40a5eb:	lds    esi,FWORD PTR [ebp+0x25]
  40a5ee:	mov    esp,0x9744ce5e
  40a5f3:	pop    esi
  40a5f4:	push   ss
  40a5f5:	(bad)  
  40a5f6:	mov    al,ds:0x6f1eb20c
  40a5fb:	dec    edi
  40a5fc:	js     0x40a618
  40a5fe:	pop    edx
  40a5ff:	imul   eax,edi,0xffffffb3
  40a602:	mov    bh,0xa9
  40a604:	cmp    ebp,esp
  40a606:	mov    ch,0x27
  40a608:	fcmovne st,st(4)
  40a60a:	cdq    
  40a60b:	xchg   ebp,eax
  40a60c:	sub    ah,BYTE PTR [ebx]
  40a60e:	push   ds
  40a60f:	fcmovb st,st(7)
  40a611:	pop    ebp
  40a612:	xchg   BYTE PTR [edx+eax*2+0x22dcf9b7],al
  40a619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a61a:	in     eax,0xd4
  40a61c:	test   dh,0x87
  40a61f:	sub    eax,0xfbbd303
  40a624:	dec    edi
  40a625:	ins    BYTE PTR es:[edi],dx
  40a626:	pop    eax
  40a627:	psubq  mm0,QWORD PTR [ecx+0x6b]
  40a62b:	inc    ebx
  40a62c:	sub    ebx,eax
  40a62e:	pop    esi
  40a62f:	hlt    
  40a630:	sub    DWORD PTR [esp+eax*1],esp
  40a633:	popa   
  40a634:	add    BYTE PTR [ebp-0x3c7e347e],ah
  40a63a:	inc    esp
  40a63b:	sbb    ebp,DWORD PTR [edi]
  40a63d:	and    al,ah
  40a63f:	rcl    BYTE PTR [ecx],cl
  40a641:	arpl   WORD PTR [edx+0x51],sp
  40a644:	(bad)  
  40a645:	dec    edx
  40a646:	mov    dl,0x9
  40a648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a649:	pop    ebp
  40a64a:	arpl   WORD PTR [ebp+eiz*2+0x41],ax
  40a64e:	push   0xffffff9d
  40a650:	dec    ecx
  40a651:	int    0xf2
  40a653:	and    eax,0x73712da5
  40a658:	add    bl,BYTE PTR [ecx-0x7ac8e95]
  40a65e:	sbb    BYTE PTR [ebp-0x4998ac86],bh
  40a664:	push   0xffffffb8
  40a666:	mov    ds:0x4e45fa38,eax
  40a66b:	scas   eax,DWORD PTR es:[edi]
  40a66c:	lds    ecx,FWORD PTR [edx]
  40a66e:	jmp    0xa63f:0xdfc0b8e7
  40a675:	lea    edx,[eax]
  40a677:	dec    edx
  40a678:	mov    WORD PTR [ecx],fs
  40a67a:	sbb    cl,BYTE PTR [edx]
  40a67c:	lea    eax,[edx-0x3a]
  40a67f:	cmc    
  40a680:	push   edx
  40a681:	es cdq 
  40a683:	inc    esi
  40a684:	mov    ebx,0x8b8c7820
  40a689:	dec    ebp
  40a68a:	add    dl,BYTE PTR [eax]
  40a68c:	inc    esi
  40a68d:	sti    
  40a68e:	ja     0x40a70d
  40a690:	or     eax,0xaa1fc707
  40a695:	sub    bh,BYTE PTR [edi]
  40a697:	and    eax,edi
  40a699:	aam    0x7a
  40a69b:	mov    ah,BYTE PTR [esi]
  40a69d:	pop    ds
  40a69e:	rcr    DWORD PTR [edx-0x553a90e0],0xbb
  40a6a5:	fdiv   DWORD PTR [eax]
  40a6a7:	cmp    ah,BYTE PTR [eax]
  40a6a9:	xchg   DWORD PTR [edi],esi
  40a6ab:	(bad)  
  40a6ac:	imul   eax,DWORD PTR [edi-0x59],0x13
  40a6b0:	pop    eax
  40a6b1:	or     eax,0x20956e0a
  40a6b6:	add    BYTE PTR [edi-0x48509fe9],bl
  40a6bc:	mov    bl,0xa3
  40a6be:	mov    eax,ds:0x9f4b83d3
  40a6c3:	pop    ss
  40a6c4:	inc    ebp
  40a6c5:	xchg   esp,eax
  40a6c6:	shl    BYTE PTR ds:0x9eb619da,cl
  40a6cc:	mov    ebp,0x89d76eb4
  40a6d1:	inc    edx
  40a6d2:	mov    ebx,0x85bff9c5
  40a6d7:	ins    BYTE PTR es:[edi],dx
  40a6d8:	or     BYTE PTR [edx-0x3d889e8d],0xd9
  40a6df:	mov    bh,0xcb
  40a6e1:	sub    al,0xf8
  40a6e3:	xchg   edx,eax
  40a6e4:	(bad)  
  40a6e5:	dec    edx
  40a6e6:	sub    bh,ah
  40a6e8:	push   ds
  40a6e9:	cmp    BYTE PTR [edx+ebx*4],bl
  40a6ec:	(bad)  
  40a6ed:	clc    
  40a6ee:	mov    ecx,DWORD PTR [esi-0x4d]
  40a6f1:	mov    al,ds:0x17b0bdfd
  40a6f6:	inc    esi
  40a6f7:	outs   dx,DWORD PTR ds:[esi]
  40a6f8:	retf   0xb354
  40a6fb:	mov    esp,0xcef17fcb
  40a700:	jp     0x40a68f
  40a702:	push   ds
  40a703:	sbb    BYTE PTR [edx-0x2c],bh
  40a706:	outs   dx,DWORD PTR ds:[esi]
  40a707:	mov    BYTE PTR fs:[edx],cl
  40a70a:	push   0x9fdf5231
  40a70f:	pop    ds
  40a710:	scas   eax,DWORD PTR es:[edi]
  40a711:	and    BYTE PTR [ecx-0x5c264506],dh
  40a717:	ds sbb bh,dl
  40a71a:	and    ch,BYTE PTR [ebp+eiz*4+0x4a16327a]
  40a721:	pop    edi
  40a722:	jbe    0x40a6c4
  40a724:	xor    eax,0x427f5268
  40a729:	fisub  WORD PTR [edx]
  40a72b:	out    dx,al
  40a72c:	(bad)  
  40a72e:	aad    0x50
  40a730:	arpl   dx,sp
  40a732:	cld    
  40a733:	fcmovbe st,st(3)
  40a735:	dec    esi
  40a736:	(bad)  
  40a738:	shl    DWORD PTR [edx],1
  40a73a:	xor    DWORD PTR [edi+ebp*1],ecx
  40a73d:	(bad)  
  40a73e:	mov    esi,0xf5794c27
  40a743:	jmp    0x58099098
  40a748:	sbb    esi,DWORD PTR ds:0xea1fc90d
  40a74e:	sbb    BYTE PTR [esi-0x31],0x4b
  40a752:	shrd   DWORD PTR [ebp+0x2ba160f],edi,cl
  40a759:	mov    ch,0xde
  40a75b:	pop    esi
  40a75c:	jno    0x40a769
  40a75e:	jb     0x40a770
  40a760:	jb     0x40a6f5
  40a762:	repnz shl BYTE PTR [ebp-0x28],cl
  40a766:	or     eax,0xa53c427b
  40a76b:	push   edx
  40a76c:	int3   
  40a76d:	add    edi,DWORD PTR [eax]
  40a76f:	cld    
  40a770:	or     BYTE PTR [edx],0xe4
  40a773:	verr   WORD PTR [ebp+0x77]
  40a777:	mov    bl,0x41
  40a779:	push   edx
  40a77a:	sahf   
  40a77b:	jb     0x40a7a0
  40a77d:	das    
  40a77e:	std    
  40a77f:	push   eax
  40a780:	cs into 
  40a782:	loop   0x40a756
  40a784:	jns    0x40a752
  40a786:	das    
  40a787:	xchg   ebx,eax
  40a788:	cmc    
  40a789:	test   DWORD PTR [esi+0x600b04ca],eax
  40a78f:	cmp    edi,DWORD PTR [ebp-0x20]
  40a792:	sub    DWORD PTR [edi-0x2e12a67c],edx
  40a798:	sar    DWORD PTR [ebx+ebp*8],0xe9
  40a79c:	add    eax,0x75f3107c
  40a7a1:	or     al,bl
  40a7a3:	push   es
  40a7a4:	xor    eax,0xc5a97c5
  40a7a9:	xchg   ecx,eax
  40a7aa:	mov    al,ds:0xd1e48276
  40a7af:	xlat   BYTE PTR ds:[ebx]
  40a7b0:	inc    esp
  40a7b1:	in     eax,dx
  40a7b2:	inc    edi
  40a7b3:	pusha  
  40a7b4:	out    dx,eax
  40a7b5:	mov    esp,0xcf145f27
  40a7ba:	fptan  
  40a7bc:	(bad)  
  40a7bd:	mov    dl,0xf4
  40a7bf:	mov    edi,0x961c301d
  40a7c4:	cmp    bh,BYTE PTR [eax-0x32]
  40a7c7:	(bad)  
  40a7c8:	aas    
  40a7c9:	pop    esi
  40a7ca:	lods   al,BYTE PTR ds:[esi]
  40a7cb:	cli    
  40a7cc:	fld    DWORD PTR [edx-0x7df2f090]
  40a7d2:	xor    BYTE PTR [edx],al
  40a7d4:	outs   dx,BYTE PTR ds:[esi]
  40a7d5:	mov    al,ds:0x511c75bd
  40a7da:	jno    0x40a7ae
  40a7dc:	in     al,0x8c
  40a7de:	jmp    0x9131:0x23ef8fca
  40a7e5:	mov    edx,0xf629a6de
  40a7ea:	jge    0x40a81b
  40a7ec:	mov    eax,0xcd2511db
  40a7f1:	punpckhdq mm6,QWORD PTR [ebx+edx*4]
  40a7f5:	and    eax,0xac9b30b4
  40a7fa:	hlt    
  40a7fb:	mov    ds:0xfb5bb647,eax
  40a800:	push   0x35
  40a802:	jmp    0x40a850
  40a804:	call   0xf2e2b46d
  40a809:	test   DWORD PTR [ecx-0x73],0xc916bbaf
  40a810:	xor    BYTE PTR [ecx+edx*4-0x2d0fbf32],al
  40a817:	and    DWORD PTR fs:[ebp+0x6b74764d],eax
  40a81e:	retf   
  40a81f:	ins    DWORD PTR es:[edi],dx
  40a820:	mov    eax,0x67691fff
  40a825:	in     eax,dx
  40a826:	mov    ds:0x9f0c4759,eax
  40a82b:	adc    dl,BYTE PTR [ebp-0x4f59564d]
  40a831:	inc    ebp
  40a832:	adc    DWORD PTR [edx],ebp
  40a834:	and    edi,esi
  40a836:	adc    al,0x1d
  40a838:	jge    0x40a7f4
  40a83a:	sub    al,0x49
  40a83c:	leave  
  40a83d:	in     al,dx
  40a83e:	pop    ecx
  40a83f:	add    ah,BYTE PTR [edi]
  40a841:	leave  
  40a842:	or     ebp,edx
  40a844:	repz push eax
  40a846:	push   edi
  40a847:	xchg   edi,eax
  40a848:	mov    esp,0xb373e930
  40a84d:	pop    ecx
  40a84e:	aas    
  40a84f:	xchg   esi,eax
  40a850:	dec    ebx
  40a851:	xor    cl,BYTE PTR [esi+0x39d52e9f]
  40a857:	arpl   WORD PTR [edi],cx
  40a859:	dec    si
  40a85b:	(bad)  
  40a85c:	sub    ebp,DWORD PTR [ebx-0x1f]
  40a85f:	mul    DWORD PTR [ebp-0x49087ff4]
  40a865:	or     DWORD PTR [edi+0x5f56f78b],0x5876a6d5
  40a86f:	add    BYTE PTR [esi],bl
  40a871:	pop    ebp
  40a872:	inc    esp
  40a873:	pop    ebx
  40a874:	in     eax,0x9b
  40a876:	push   esi
  40a877:	dec    ebp
  40a878:	adc    DWORD PTR [ebx],ebx
  40a87a:	adc    al,0x82
  40a87c:	or     esi,DWORD PTR [esi-0x4149fcaa]
  40a882:	bound  ebx,QWORD PTR [ebp-0x47]
  40a885:	xlat   BYTE PTR ds:[ebx]
  40a886:	out    0xa8,al
  40a888:	mov    ebx,0xcecf7d9d
  40a88d:	mov    ecx,0x4b00e5b3
  40a892:	cmc    
  40a893:	out    0xc5,eax
  40a895:	test   BYTE PTR [eax-0x52],0xb1
  40a899:	iret   
  40a89a:	les    ebx,FWORD PTR [esi+0x76ca2bb6]
  40a8a0:	mov    ds:0x79bbb486,al
  40a8a5:	mov    esi,0x4f2d6b1c
  40a8aa:	adc    DWORD PTR [ebx+0x51],esp
  40a8ad:	stos   DWORD PTR es:[edi],eax
  40a8ae:	lock mov bh,0x64
  40a8b1:	xor    edx,ebx
  40a8b3:	mov    ah,0xec
  40a8b5:	xchg   esi,eax
  40a8b6:	cdq    
  40a8b7:	pop    ss
  40a8b8:	(bad)
  40a8bc:	imul   ebp,DWORD PTR [edi+eax*8-0x15],0x382ec216
  40a8c4:	and    BYTE PTR [ebp-0x46138b8a],0x9b
  40a8cb:	into   
  40a8cc:	cmp    esp,DWORD PTR [edx]
  40a8ce:	popf   
  40a8cf:	clc    
  40a8d0:	mov    ds:0x30264e26,eax
  40a8d5:	test   BYTE PTR [ecx],ch
  40a8d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8d8:	and    dh,BYTE PTR [edi]
  40a8da:	imul   edi,DWORD PTR [ebx],0x3b316fea
  40a8e0:	out    dx,eax
  40a8e1:	jae    0x40a8e9
  40a8e3:	add    ecx,ebx
  40a8e5:	out    0xba,eax
  40a8e7:	out    0xdf,eax
  40a8e9:	sti    
  40a8ea:	sbb    DWORD PTR [ebp-0x66],esp
  40a8ed:	cmp    eax,0x237c3e7e
  40a8f2:	mov    edi,0xee3e9486
  40a8f7:	pop    esp
  40a8f8:	adc    al,0xed
  40a8fa:	addr16 and al,0x4b
  40a8fd:	push   edx
  40a8fe:	repnz test eax,0x6497cdbf
  40a904:	and    al,0x85
  40a906:	inc    ebx
  40a907:	imul   ecx,DWORD PTR [ebp-0x656ee6b2],0x94702ec8
  40a911:	xchg   bh,dh
  40a913:	mov    bl,0x30
  40a915:	loop   0x40a98f
  40a917:	fdivr  st(6),st
  40a919:	pop    esi
  40a91a:	add    DWORD PTR [edx],ebx
  40a91c:	inc    ecx
  40a91d:	cmp    ecx,edi
  40a91f:	lahf   
  40a920:	or     eax,0x946a68a8
  40a925:	outs   dx,BYTE PTR ds:[esi]
  40a926:	into   
  40a927:	jnp    0x40a975
  40a929:	arpl   WORD PTR [ecx-0x3698eb72],si
  40a92f:	test   eax,0x8626c91
  40a934:	enter  0x5767,0x4
  40a938:	jp     0x40a990
  40a93a:	clc    
  40a93b:	sbb    BYTE PTR [ebp+0xb],ch
  40a93e:	jg     0x40a8fe
  40a940:	out    dx,al
  40a941:	das    
  40a942:	imul   esp,DWORD PTR [ecx+0xe],0x3b
  40a946:	popa   
  40a947:	leave  
  40a948:	mov    ch,0x10
  40a94a:	xchg   ebx,eax
  40a94b:	jl     0x40a92c
  40a94d:	adc    eax,0xa8b2091e
  40a952:	(bad)  
  40a953:	cmp    al,0x39
  40a955:	aaa    
  40a956:	xchg   ecx,eax
  40a957:	push   0xffffffb0
  40a959:	stos   BYTE PTR es:[edi],al
  40a95a:	pushf  
  40a95b:	pop    esp
  40a95c:	mov    al,0x78
  40a95e:	mov    WORD PTR [eax+eiz*1],ss
  40a961:	mov    al,0x59
  40a963:	out    0x82,eax
  40a965:	in     eax,dx
  40a966:	cs clc 
  40a968:	jmp    0x64c5ea3a
  40a96d:	xchg   ebp,eax
  40a96e:	cdq    
  40a96f:	jg     0x40a9ca
  40a971:	ins    BYTE PTR es:[edi],dx
  40a972:	and    al,0x57
  40a974:	add    dl,BYTE PTR [esi]
  40a976:	daa    
  40a977:	loopne 0x40a991
  40a979:	mov    al,ds:0x63b63879
  40a97e:	mov    edi,DWORD PTR [edx]
  40a980:	pop    esi
  40a981:	retf   0xd63f
  40a984:	scas   al,BYTE PTR es:[edi]
  40a985:	adc    edx,DWORD PTR [ecx-0x53f8aaac]
  40a98b:	mov    eax,0xf9df7468
  40a990:	aad    0xa6
  40a992:	popa   
  40a993:	sahf   
  40a994:	push   0x2c66f6d8
  40a999:	adc    al,0x7f
  40a99b:	stos   DWORD PTR es:[edi],eax
  40a99c:	mov    WORD PTR [esi],ss
  40a99e:	ror    dh,1
  40a9a0:	pop    ss
  40a9a1:	add    DWORD PTR [ebp+0x9b9d44e],esi
  40a9a7:	daa    
  40a9a8:	les    ecx,FWORD PTR [ebx]
  40a9aa:	adc    BYTE PTR [edx-0x2a],cl
  40a9ad:	sub    ecx,DWORD PTR [esi+0x67]
  40a9b0:	add    DWORD PTR [ebx],0x7ae3ace3
  40a9b6:	scas   al,BYTE PTR es:[edi]
  40a9b7:	adc    edi,DWORD PTR [ebp+0x7bab16a0]
  40a9bd:	outs   dx,BYTE PTR ds:[esi]
  40a9be:	gs jns 0x40a9ac
  40a9c1:	cmp    DWORD PTR ds:0x8824e37b,ecx
  40a9c7:	push   es
  40a9c8:	cmp    esi,DWORD PTR [esi+0x30b2c097]
  40a9ce:	out    0x5f,eax
  40a9d0:	jle    0x40a98f
  40a9d2:	out    0x9f,eax
  40a9d4:	push   edx
  40a9d5:	push   ebx
  40a9d6:	fldcw  WORD PTR [ebp+0x66]
  40a9d9:	jbe    0x40aa3f
  40a9db:	out    0xc6,eax
  40a9dd:	xchg   dh,dh
  40a9df:	sbb    edi,esi
  40a9e1:	idiv   BYTE PTR [esi]
  40a9e3:	aam    0x30
  40a9e5:	loopne 0x40a9f1
  40a9e7:	ret    0x3db4
  40a9ea:	lahf   
  40a9eb:	sbb    eax,0xc8c6f4cb
  40a9f0:	mov    dh,0xde
  40a9f2:	jno    0x40a9dc
  40a9f4:	and    DWORD PTR [edi+0x7d6f9b01],esi
  40a9fa:	adc    ah,BYTE PTR [edx]
  40a9fc:	mov    esi,DWORD PTR [esi]
  40a9fe:	xor    DWORD PTR [edx],esp
  40aa00:	ror    BYTE PTR [edx],0xfa
  40aa03:	mov    bl,0xd9
  40aa05:	shr    BYTE PTR [esi+0x3f],1
  40aa08:	loope  0x40aa26
  40aa0a:	stc    
  40aa0b:	jmp    0xc3a1:0xc555f6eb
  40aa12:	mov    ds:0xf6640eef,al
  40aa17:	psubusw mm4,QWORD PTR [eax+0x6]
  40aa1b:	mov    ch,0xde
  40aa1d:	sbb    eax,0xff187326
  40aa22:	int    0x7c
  40aa24:	push   ebp
  40aa25:	jno    0x40a9bf
  40aa27:	xchg   edi,eax
  40aa28:	in     eax,0x10
  40aa2a:	and    eax,0x93e100a7
  40aa2f:	pop    esp
  40aa30:	or     eax,0xa1a78551
  40aa35:	sub    eax,0x8f7ce76e
  40aa3a:	add    bl,BYTE PTR [ecx+eiz*2-0x4511fdf5]
  40aa41:	scas   al,BYTE PTR es:[edi]
  40aa42:	and    DWORD PTR [ebp+0x7f107458],edx
  40aa48:	mov    cl,0xf6
  40aa4a:	xlat   BYTE PTR ds:[ebx]
  40aa4b:	ins    BYTE PTR es:[edi],dx
  40aa4c:	xor    al,0x15
  40aa4e:	pop    ds
  40aa4f:	mov    ds:0x185902cb,al
  40aa54:	loopne 0x40aa32
  40aa56:	rcr    BYTE PTR [ebx+0x415a1487],1
  40aa5c:	pop    eax
  40aa5d:	nop
  40aa5e:	test   BYTE PTR [eax+0x6d537f86],dl
  40aa64:	xchg   DWORD PTR [edx+0x7e],esi
  40aa67:	sar    ebx,0x3
  40aa6a:	cmp    al,0xf8
  40aa6c:	mov    eax,0x2ba05598
  40aa71:	mov    dl,0x2f
  40aa73:	lods   al,BYTE PTR ds:[esi]
  40aa74:	imul   edi,DWORD PTR [ecx-0x16],0x63067ed3
  40aa7b:	adc    ah,al
  40aa7d:	sbb    eax,0xeea775f7
  40aa82:	imul   ebx,esi,0xa8c4243d
  40aa88:	adc    BYTE PTR [ebx-0x674a3d30],cl
  40aa8e:	jp     0x40aad7
  40aa90:	repz sub DWORD PTR [ebx],ecx
  40aa93:	test   BYTE PTR [ecx],cl
  40aa95:	repz jmp 0x40aa29
  40aa98:	mov    cl,0x8
  40aa9a:	adc    esp,DWORD PTR [esi+0x46]
  40aa9d:	cld    
  40aa9e:	out    dx,al
  40aa9f:	es xchg esp,eax
  40aaa1:	cmp    bh,BYTE PTR [ecx-0x7f322e5]
  40aaa7:	xchg   ebp,eax
  40aaa8:	inc    ebx
  40aaa9:	pop    ecx
  40aaaa:	mov    ss,WORD PTR [edx]
  40aaac:	xor    al,0xae
  40aaae:	adc    BYTE PTR [esi],0x95
  40aab1:	sti    
  40aab2:	aad    0x1a
  40aab4:	xchg   ebp,eax
  40aab5:	lahf   
  40aab6:	jns    0x40aae6
  40aab8:	dec    edx
  40aab9:	sub    DWORD PTR [esi+eax*1+0x6dd03a96],ebx
  40aac0:	imul   ebp,DWORD PTR [esi-0x3224f35],0x45
  40aac7:	add    ebp,eax
  40aac9:	cmp    BYTE PTR [eax-0x5d],0x5
  40aacd:	outs   dx,BYTE PTR ds:[esi]
  40aace:	push   ecx
  40aacf:	dec    edi
  40aad0:	nop
  40aad1:	fild   WORD PTR [eax+0x47]
  40aad4:	outs   dx,DWORD PTR ds:[esi]
  40aad5:	sub    al,0xe2
  40aad7:	loop   0x40aaad
  40aad9:	xchg   BYTE PTR [edx+0x49],dh
  40aadc:	xlat   BYTE PTR ds:[ebx]
  40aadd:	js     0x40aaf3
  40aadf:	cmc    
  40aae0:	(bad)  
  40aae1:	imul   ecx,DWORD PTR [edx+0xc8997f3],0xfffffff9
  40aae8:	in     al,dx
  40aae9:	inc    edi
  40aaea:	adc    bh,BYTE PTR [edx+ebp*2-0x29a272f8]
  40aaf1:	mov    esi,0x654ebd33
  40aaf6:	repz cmp BYTE PTR [edi+0x2c884a1f],0xf
  40aafe:	dec    ebx
  40aaff:	mov    bl,0xbd
  40ab01:	ins    BYTE PTR es:[edi],dx
  40ab02:	jmp    0x737debf5
  40ab07:	test   eax,0xd9fd124f
  40ab0c:	inc    esp
  40ab0d:	pop    esp
  40ab0e:	add    BYTE PTR [eax+0x40],ch
  40ab11:	es out dx,al
  40ab13:	mov    ch,0x81
  40ab15:	dec    edi
  40ab16:	pusha  
  40ab17:	fidivr DWORD PTR [edx-0x4c8c0710]
  40ab1d:	mov    dh,0x74
  40ab1f:	add    esi,DWORD PTR [esi]
  40ab21:	sub    al,0x95
  40ab23:	and    esp,DWORD PTR [ecx+0x77]
  40ab26:	fnstenv [esi-0x7d46845d]
  40ab2c:	add    esp,DWORD PTR [esp+edi*1-0x8a1ba13]
  40ab33:	jnp    0x40ab65
  40ab35:	and    BYTE PTR [edx],ch
  40ab37:	in     al,0x3
  40ab39:	ja     0x40ab97
  40ab3b:	(bad)  
  40ab3c:	outs   dx,BYTE PTR ds:[esi]
  40ab3d:	or     edx,0x4f1a4e8a
  40ab43:	or     ch,al
  40ab45:	mov    edi,0x1c347b0c
  40ab4a:	dec    ecx
  40ab4b:	nop
  40ab4c:	sub    DWORD PTR [ecx-0x292b162b],edi
  40ab52:	rol    BYTE PTR [ecx+eax*1-0x423b5c80],cl
  40ab59:	sbb    DWORD PTR [ecx-0x1e5bf022],0xfffffff6
  40ab60:	or     DWORD PTR [esi+eiz*8],ebp
  40ab63:	pop    eax
  40ab64:	add    bh,ah
  40ab66:	push   0xb2411465
  40ab6b:	pop    eax
  40ab6c:	add    BYTE PTR [ebx],ch
  40ab6e:	xchg   ebx,eax
  40ab6f:	inc    esi
  40ab70:	jmp    0x40ab74
  40ab72:	xchg   edx,eax
  40ab73:	dec    ecx
  40ab74:	mov    esi,0x4c110f26
  40ab79:	add    BYTE PTR [esi+edx*4+0x30da622b],0xbf
  40ab81:	add    DWORD PTR [edx],edx
  40ab83:	cwde   
  40ab84:	stc    
  40ab85:	push   edx
  40ab86:	sub    ebp,DWORD PTR [ebx]
  40ab88:	add    eax,0x5cf217a5
  40ab8d:	push   esi
  40ab8e:	sbb    ch,al
  40ab90:	repnz lahf 
  40ab92:	dec    edi
  40ab93:	ret    0xa0d8
  40ab96:	mov    ebx,0x58f0e87d
  40ab9b:	fstp   QWORD PTR [esi+0x65d40095]
  40aba1:	mov    al,0x83
  40aba3:	inc    edi
  40aba4:	or     ah,bl
  40aba6:	sbb    esi,DWORD PTR ds:0x6ec0de9c
  40abac:	out    0xb6,eax
  40abae:	xchg   edi,eax
  40abaf:	rcl    DWORD PTR [eax-0x72684659],1
  40abb5:	jle    0x40ab9b
  40abb7:	(bad)  
  40abb9:	gs retf 0x3eba
  40abbd:	mov    bl,dl
  40abbf:	shl    ebx,cl
  40abc1:	xchg   ebx,eax
  40abc2:	dec    ebp
  40abc4:	mov    ah,0x44
  40abc6:	mov    WORD PTR [ebp-0x548171a8],?
  40abcc:	mov    ds,WORD PTR [ebx]
  40abce:	and    eax,0xd1cc063b
  40abd3:	fadd   st(6),st
  40abd5:	test   al,0x84
  40abd7:	mov    edx,ecx
  40abd9:	dec    esi
  40abda:	shl    DWORD PTR [eax],1
  40abdc:	dec    ecx
  40abdd:	data16 adc al,0x56
  40abe0:	inc    ecx
  40abe1:	outs   dx,DWORD PTR ds:[esi]
  40abe2:	out    dx,al
  40abe3:	push   ds
  40abe4:	ins    BYTE PTR es:[edi],dx
  40abe5:	lea    ebp,[esi+0x43]
  40abe8:	ins    BYTE PTR es:[edi],dx
  40abe9:	adc    al,0xb2
  40abeb:	mov    DWORD PTR [ecx],0x224b8b4b
  40abf1:	and    edi,ecx
  40abf3:	mov    ebp,0xcd719fa2
  40abf8:	fstp   DWORD PTR [ebp+0x28eccee2]
  40abfe:	fstp   TBYTE PTR [esi+eiz*2+0x25]
  40ac02:	sar    BYTE PTR [ebp+ecx*2-0x17fe2253],cl
  40ac09:	fmul   QWORD PTR [edi-0x5aa0e968]
  40ac0f:	sub    ch,dl
  40ac11:	pop    ds
  40ac12:	or     dh,BYTE PTR [esi+0x704af58c]
  40ac18:	sti    
  40ac19:	and    esi,DWORD PTR [esi]
  40ac1b:	in     al,0x81
  40ac1d:	daa    
  40ac1e:	jmp    0x57d:0x3e66e5a4
  40ac25:	das    
  40ac26:	cli    
  40ac27:	or     dl,BYTE PTR [ebx-0x38]
  40ac2a:	cmp    ecx,DWORD PTR [ecx-0x30]
  40ac2d:	cwde   
  40ac2e:	xor    esp,DWORD PTR [ecx]
  40ac30:	ret    
  40ac31:	fadd   QWORD PTR [esi-0x56]
  40ac34:	nop
  40ac35:	jp     0x40ac1f
  40ac37:	sub    bh,BYTE PTR [eax+0x11]
  40ac3a:	pop    ecx
  40ac3b:	shr    BYTE PTR cs:0xeeb67ec0,cl
  40ac42:	inc    esp
  40ac43:	ret    0x5ca0
  40ac46:	fisub  DWORD PTR [ecx+edi*1]
  40ac49:	out    0x57,al
  40ac4b:	enter  0xe927,0xe7
  40ac4f:	cmp    BYTE PTR [esi+0x7b],dh
  40ac52:	add    ebp,ebp
  40ac54:	sbb    al,0xee
  40ac56:	push   esp
  40ac57:	sti    
  40ac58:	nop
  40ac59:	pop    ecx
  40ac5a:	stos   BYTE PTR es:[edi],al
  40ac5b:	mov    esp,0xa9dab29a
  40ac60:	and    BYTE PTR [esi+eiz*1],cl
  40ac63:	scas   eax,DWORD PTR es:[edi]
  40ac64:	dec    ecx
  40ac65:	(bad)
  40ac69:	bnd js 0x40ac94
  40ac6c:	sahf   
  40ac6d:	xchg   DWORD PTR [eax-0x5c61445d],ecx
  40ac73:	arpl   WORD PTR [ebx],bp
  40ac75:	adc    al,0xe8
  40ac77:	cmp    al,0x9b
  40ac79:	(bad)  
  40ac7a:	outs   dx,DWORD PTR ss:[esi]
  40ac7c:	dec    ebp
  40ac7d:	push   ss
  40ac7e:	sub    eax,0x2dfa9cd6
  40ac83:	xor    esp,0x56441fcb
  40ac89:	xchg   esi,eax
  40ac8a:	lods   al,BYTE PTR ds:[esi]
  40ac8b:	add    eax,0xe7dc619
  40ac90:	out    dx,al
  40ac91:	sbb    eax,0xe5c099ae
  40ac96:	push   edx
  40ac97:	push   ds
  40ac98:	push   esp
  40ac99:	xchg   esp,eax
  40ac9a:	les    esp,FWORD PTR [ebx-0x371a8de8]
  40aca0:	push   esi
  40aca1:	shl    BYTE PTR [ebx],0xd1
  40aca4:	mov    dl,0xc4
  40aca6:	jo     0x40ac77
  40aca8:	stos   DWORD PTR es:[edi],eax
  40aca9:	popf   
  40acaa:	leave  
  40acab:	push   eax
  40acac:	add    dh,bh
  40acae:	push   eax
  40acaf:	push   ebp
  40acb0:	enter  0x3223,0x19
  40acb4:	pop    ecx
  40acb5:	div    DWORD PTR [esi-0x25]
  40acb8:	sub    eax,0x1f57c31d
  40acbd:	popa   
  40acbe:	aad    0xb1
  40acc0:	xchg   edi,eax
  40acc1:	pop    esi
  40acc2:	cmp    ch,BYTE PTR [edi+ebp*2-0x32bd6d51]
  40acc9:	or     BYTE PTR [ebx],0xf4
  40accc:	dec    edx
  40accd:	(bad)  
  40acce:	(bad)  
  40accf:	gs push ebp
  40acd1:	(bad)  
  40acd2:	retf   0xe192
  40acd5:	das    
  40acd6:	push   ebp
  40acd7:	icebp  
  40acd8:	add    dl,BYTE PTR [esi]
  40acda:	sub    al,0x11
  40acdc:	iret   
  40acdd:	push   esp
  40acde:	dec    ebx
  40acdf:	jmp    0x40ac78
  40ace1:	ja     0x40ac65
  40ace3:	fcom   QWORD PTR [edi-0x71]
  40ace6:	xchg   esi,eax
  40ace7:	mov    ah,0xc5
  40ace9:	gs sti 
  40aceb:	stos   BYTE PTR es:[edi],al
  40acec:	shl    DWORD PTR [ebp+0x561f1316],0xe2
  40acf3:	sbb    DWORD PTR [esi-0x74],esi
  40acf6:	jg     0x40ad23
  40acf8:	lea    ecx,[ebp-0x14751b89]
  40acfe:	lds    edi,FWORD PTR [ecx+0x3d]
  40ad01:	aad    0xbd
  40ad03:	fcmovnbe st,st(1)
  40ad05:	call   0x5bdd:0x43acb281
  40ad0c:	retf   0x138b
  40ad0f:	daa    
  40ad10:	sbb    ebx,DWORD PTR [ebx-0x42bf78fd]
  40ad16:	adc    edx,DWORD PTR [ebp-0xe]
  40ad19:	fwait
  40ad1a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40ad1c:	jle    0x40ad25
  40ad1e:	xor    edx,DWORD PTR [esi]
  40ad20:	adc    eax,0x67a60112
  40ad25:	cmc    
  40ad26:	lock fadd DWORD PTR [eax+eiz*8+0x4ffc9700]
  40ad2e:	mov    al,ds:0x7cd46604
  40ad33:	stos   DWORD PTR es:[edi],eax
  40ad34:	lods   al,BYTE PTR ds:[esi]
  40ad35:	bound  edi,QWORD PTR [ebx+0x33]
  40ad38:	push   esi
  40ad39:	sbb    ecx,DWORD PTR [ebp+0x59d60702]
  40ad3f:	aad    0xa5
  40ad41:	mov    ah,0xe9
  40ad43:	scas   al,BYTE PTR es:[edi]
  40ad44:	xchg   ebp,eax
  40ad45:	test   esp,0xb83b70a9
  40ad4b:	push   eax
  40ad4c:	pop    ebp
  40ad4d:	mov    ds:0x7c151e9,al
  40ad52:	mov    edx,ebp
  40ad54:	(bad)  
  40ad55:	cld    
  40ad56:	nop
  40ad57:	mov    WORD PTR [edi+0x155c324f],cs
  40ad5d:	sbb    cl,BYTE PTR [eax+0x2c]
  40ad60:	and    al,BYTE PTR [ebx-0x6a2bf3fc]
  40ad66:	adc    ah,bl
  40ad68:	pop    ebp
  40ad69:	popa   
  40ad6a:	(bad)  
  40ad6b:	add    eax,0x3ba85b45
  40ad70:	mov    BYTE PTR [edi],dl
  40ad72:	fcom   QWORD PTR [ecx+esi*2-0x7c]
  40ad76:	mov    BYTE PTR [ebx+0x5f],bl
  40ad79:	or     ecx,ecx
  40ad7b:	sbb    ebp,ebp
  40ad7d:	lods   al,BYTE PTR ds:[esi]
  40ad7e:	pop    ebx
  40ad7f:	shl    ebp,0xf5
  40ad82:	mov    ds:0x7e6d8240,al
  40ad87:	dec    esp
  40ad88:	xor    esi,esi
  40ad8a:	aaa    
  40ad8b:	sbb    ah,BYTE PTR [edx+0x32]
  40ad8e:	pmaxsw mm3,QWORD PTR [esi+esi*1]
  40ad92:	ucomiss xmm5,DWORD PTR [esi]
  40ad95:	jns    0x40adea
  40ad97:	adc    BYTE PTR [ebx],ah
  40ad99:	dec    esi
  40ad9a:	shl    DWORD PTR [edi-0x582b267c],1
  40ada0:	jmp    FWORD PTR [ebp-0x2b8d750d]
  40ada6:	push   edx
  40ada7:	outs   dx,DWORD PTR ds:[esi]
  40ada8:	and    eax,0x60b4e5af
  40adad:	mov    ds:0x617d7db6,al
  40adb2:	repnz push cs
  40adb4:	fmul   QWORD PTR [eax-0x63]
  40adb7:	test   eax,0xe227189
  40adbc:	outs   dx,DWORD PTR ds:[esi]
  40adbd:	arpl   WORD PTR [ecx+0x2ef39d8f],di
  40adc3:	xchg   esi,eax
  40adc4:	push   eax
  40adc5:	cs jno 0x40ae3b
  40adc8:	push   ecx
  40adc9:	or     DWORD PTR [edi-0x665658e6],esi
  40adcf:	xchg   esi,eax
  40add0:	pop    es
  40add1:	pop    ss
  40add2:	into   
  40add3:	lods   al,BYTE PTR ds:[esi]
  40add4:	int3   
  40add5:	push   edi
  40add6:	xor    BYTE PTR ds:[ecx+0x5a8e2ba4],cl
  40addd:	mov    dl,0xa1
  40addf:	mov    al,ds:0x33cdf70f
  40ade4:	cmp    dh,BYTE PTR [ebp+0x1f]
  40ade7:	pop    ds
  40ade8:	xor    DWORD PTR [ecx],edx
  40adea:	sbb    ah,BYTE PTR [edx-0x251b4aaa]
  40adf0:	fwait
  40adf1:	loope  0x40adef
  40adf3:	mov    dx,0x6bd0
  40adf8:	iret   
  40adf9:	push   ebp
  40adfa:	retf   0x7cf9
  40adfd:	cld    
  40adfe:	push   esp
  40adff:	mov    eax,0x7e1744c4
  40ae04:	dec    ebp
  40ae05:	xchg   ecx,eax
  40ae06:	and    BYTE PTR [ebx],cl
  40ae08:	adc    al,0xaf
  40ae0a:	stc    
  40ae0b:	test   eax,0x70ad727e
  40ae10:	push   ebx
  40ae11:	int    0x51
  40ae13:	dec    esp
  40ae14:	jg     0x40ade9
  40ae16:	mov    bh,0x4b
  40ae18:	add    BYTE PTR [ecx-0x3ea4665b],bh
  40ae1e:	shl    DWORD PTR [esp+eax*4+0x6d],cl
  40ae22:	jmp    0x2a95:0x9b61d5a3
  40ae29:	and    edi,DWORD PTR [ebp+0x735c4282]
  40ae2f:	mov    bl,0xfe
  40ae31:	mov    dh,BYTE PTR [edx-0x5f]
  40ae34:	xor    DWORD PTR [ebx+esi*2+0x12a55273],ecx
  40ae3b:	cmp    BYTE PTR [edx],bh
  40ae3d:	or     eax,0xdb36cc05
  40ae42:	sub    BYTE PTR ds:0xec315ccc,bl
  40ae48:	push   ecx
  40ae49:	add    edi,DWORD PTR [edx-0x8]
  40ae4c:	maskmovq mm1,(bad)
  40ae4d:	test   DWORD PTR [edx],0xed1824ce
  40ae53:	loopne 0x40ae24
  40ae55:	sbb    BYTE PTR [edx-0x71e12bbd],al
  40ae5b:	outs   dx,DWORD PTR ds:[esi]
  40ae5c:	test   eax,0x994bdd
  40ae61:	dec    esi
  40ae62:	int    0xca
  40ae64:	mov    WORD PTR [ebp-0x3f],?
  40ae67:	xchg   BYTE PTR [ebx],cl
  40ae69:	jp     0x40ae38
  40ae6b:	(bad)  
  40ae6c:	mov    ds:0xd3f5a89e,eax
  40ae71:	jl     0x40ae90
  40ae73:	imul   ebp,esi,0xffffff8d
  40ae76:	jg     0x40ae6b
  40ae78:	sbb    al,0x10
  40ae7a:	add    eax,0x65b0db1d
  40ae7f:	(bad)  
  40ae80:	sbb    BYTE PTR [ebx],dl
  40ae82:	xor    edx,DWORD PTR [ebp-0x15d262e5]
  40ae88:	out    dx,al
  40ae89:	push   edx
  40ae8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae8b:	icebp  
  40ae8c:	ins    DWORD PTR es:[edi],dx
  40ae8d:	pop    esi
  40ae8e:	push   0xdbb5e745
  40ae93:	inc    edx
  40ae94:	jmp    0xadbf:0xb7ea9d5e
  40ae9b:	add    esp,edx
  40ae9d:	and    al,BYTE PTR [edi]
  40ae9f:	stc    
  40aea0:	popf   
  40aea1:	mov    bl,0xf7
  40aea3:	pop    ebx
  40aea4:	cmp    ch,bl
  40aea6:	push   ss
  40aea7:	sbb    BYTE PTR [eax-0x10],dl
  40aeaa:	and    ebx,DWORD PTR [ecx+0x7e24c39a]
  40aeb0:	daa    
  40aeb1:	out    dx,eax
  40aeb2:	xor    ebp,DWORD PTR [edx]
  40aeb4:	mov    al,0xd1
  40aeb6:	test   al,0xbc
  40aeb8:	nop    DWORD PTR [ebp-0x33]
  40aebc:	fmul   st(2),st
  40aebe:	cs xor ebp,ebp
  40aec1:	jecxz  0x40af30
  40aec3:	popf   
  40aec4:	push   ebx
  40aec5:	jo     0x40af20
  40aec7:	(bad)  
  40aec9:	push   eax
  40aeca:	scas   al,BYTE PTR es:[edi]
  40aecb:	cmp    DWORD PTR [ebp+0x1b],0xc8736aaf
  40aed2:	pop    ebx
  40aed3:	test   DWORD PTR [eax+0x28bb596],eax
  40aed9:	xchg   ebp,eax
  40aeda:	loopne 0x40af35
  40aedc:	sub    al,0x6f
  40aede:	add    al,0xa3
  40aee0:	dec    ecx
  40aee1:	loop   0x40aef8
  40aee3:	add    ah,bh
  40aee5:	arpl   bx,sp
  40aee7:	jne    0x40aef3
  40aee9:	(bad)  
  40aeea:	and    esi,DWORD PTR [edx+0x3563e8f]
  40aef0:	pop    eax
  40aef1:	inc    ebp
  40aef2:	inc    ebx
  40aef3:	mov    eax,0xac63481
  40aef8:	inc    esp
  40aef9:	mov    ds:0x99836305,eax
  40aefe:	imul   dh
  40af00:	test   DWORD PTR [ebx],ecx
  40af02:	and    al,0x9e
  40af04:	aas    
  40af05:	xchg   BYTE PTR [ecx],cl
  40af07:	cmc    
  40af08:	xlat   BYTE PTR ds:[ebx]
  40af09:	je     0x40af4b
  40af0b:	and    BYTE PTR [eax-0x67],ah
  40af0e:	ds inc esi
  40af10:	pop    esp
  40af11:	test   BYTE PTR [eax],0xfb
  40af14:	popf   
  40af15:	mov    al,ds:0x98c4ca5c
  40af1a:	push   edi
  40af1b:	cli    
  40af1c:	mov    al,ds:0x9030c532
  40af21:	mov    ah,0x91
  40af23:	ins    DWORD PTR es:[edi],dx
  40af24:	out    dx,eax
  40af25:	fs inc esi
  40af27:	in     al,dx
  40af28:	inc    edx
  40af29:	sbb    al,BYTE PTR [edx+0x5b]
  40af2c:	pop    esi
  40af2d:	aad    0x7d
  40af2f:	imul   ebp,DWORD PTR [ecx],0xbe1065db
  40af35:	(bad)  
  40af36:	mov    cl,0x2a
  40af38:	mov    esi,DWORD PTR [edi+0x6461ab9f]
  40af3e:	jecxz  0x40af00
  40af40:	adc    DWORD PTR [edx],eax
  40af42:	or     BYTE PTR [ecx],al
  40af44:	retf   
  40af45:	test   ch,bh
  40af47:	push   ss
  40af48:	xchg   ecx,eax
  40af49:	lds    eax,FWORD PTR [ebx]
  40af4b:	outs   dx,DWORD PTR ds:[esi]
  40af4c:	(bad)  
  40af4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af4e:	jae    0x40aefe
  40af50:	aad    0x74
  40af52:	mov    ebp,0xcb8a66aa
  40af57:	psubusb mm2,QWORD PTR [edi+0x76]
  40af5b:	sub    bl,BYTE PTR [ebp-0x75]
  40af5e:	mov    esp,0xd103e0e3
  40af63:	xchg   edx,eax
  40af64:	ja     0x40afdf
  40af66:	nop
  40af67:	jb     0x40afb2
  40af69:	and    eax,0x8ed69f41
  40af6e:	(bad)  
  40af6f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40af71:	jae    0x40af27
  40af73:	and    ch,BYTE PTR [eax+ebp*2]
  40af76:	sub    DWORD PTR [edx-0x5e194a1c],ecx
  40af7c:	dec    ebx
  40af7d:	xor    DWORD PTR [ebx+0x2],0xffffff82
  40af81:	cmp    ebx,edi
  40af83:	out    dx,al
  40af84:	push   esi
  40af85:	pop    eax
  40af86:	ret    0xaa9d
  40af89:	xchg   esi,eax
  40af8a:	int    0x67
  40af8c:	mov    BYTE PTR [ecx],bl
  40af8e:	fsub   DWORD PTR [ecx-0x1b]
  40af91:	scas   al,BYTE PTR es:[edi]
  40af92:	out    dx,al
  40af93:	jbe    0x40af59
  40af95:	fcomi  st,st(1)
  40af97:	lods   al,BYTE PTR ds:[esi]
  40af98:	xchg   BYTE PTR [edi+eax*1-0x226015aa],bh
  40af9f:	popa   
  40afa0:	mov    ebp,0x99abfa1f
  40afa5:	push   ebx
  40afa6:	(bad)  
  40afa7:	scas   eax,DWORD PTR es:[edi]
  40afa8:	(bad)  
  40afa9:	icebp  
  40afaa:	sbb    ah,BYTE PTR [edx+0x1b]
  40afad:	je     0x40afa9
  40afaf:	cmc    
  40afb0:	test   BYTE PTR [edx-0x10],0xf5
  40afb4:	(bad)  
  40afb6:	mov    ebx,0xc30aa132
  40afbb:	dec    esi
  40afbc:	or     edi,edi
  40afbe:	repnz mov ebp,0xf8b98d1c
  40afc4:	adc    bh,BYTE PTR [esi]
  40afc6:	or     dl,bl
  40afc8:	es sahf 
  40afca:	cmp    al,0xa6
  40afcc:	jns    0x40af8a
  40afce:	(bad)  ds:[ebp-0x5f]
  40afd2:	std    
  40afd3:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40afd5:	lds    ecx,FWORD PTR [ecx+0x12897255]
  40afdb:	mov    ah,0x91
  40afdd:	pop    ss
  40afde:	into   
  40afdf:	jb     0x40afbc
  40afe1:	xchg   BYTE PTR [edx-0x62],ch
  40afe4:	outs   dx,BYTE PTR ds:[esi]
  40afe5:	add    dl,BYTE PTR [eax]
  40afe7:	lock add al,0x18
  40afea:	sbb    eax,0xb64327cf
  40afef:	shl    BYTE PTR [esi],cl
  40aff1:	pop    edx
  40aff2:	rcl    BYTE PTR [edx-0x73],1
  40aff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aff6:	mov    esi,0x18c586e0
  40affb:	loopne 0x40afe9
  40affd:	xchg   ecx,eax
  40affe:	(bad)  
  40afff:	(bad)  
  40b000:	scas   eax,DWORD PTR es:[edi]
  40b001:	or     ch,ah
  40b003:	xchg   ebp,eax
  40b004:	ror    BYTE PTR [ebp+0x6e856c01],1
  40b00a:	aad    0xe7
  40b00c:	and    eax,0x50c3642f
  40b011:	in     eax,0x2b
  40b013:	adc    cl,BYTE PTR [edx]
  40b015:	lods   al,BYTE PTR ds:[esi]
  40b016:	aad    0x51
  40b018:	fldcw  WORD PTR [ebx-0x42]
  40b01b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b01c:	pop    ecx
  40b01d:	je     0x40b053
  40b01f:	xor    eax,0x6c1e26cf
  40b024:	pushf  
  40b025:	sbb    eax,ecx
  40b027:	rcl    BYTE PTR [ebp-0x68ab166f],0x3
  40b02e:	mov    ah,0x9c
  40b030:	jno    0x40afc1
  40b032:	scas   al,BYTE PTR es:[edi]
  40b033:	fist   WORD PTR [edi+0x5300949b]
  40b039:	inc    ecx
  40b03a:	(bad)  [edi]
  40b03c:	dec    eax
  40b03d:	xchg   ebp,eax
  40b03e:	xor    al,0x44
  40b040:	lods   eax,DWORD PTR ds:[esi]
  40b041:	pop    esp
  40b042:	adc    BYTE PTR [esp+esi*2-0x6aaca89a],al
  40b049:	jmp    0x9ffe0b8b
  40b04e:	das    
  40b04f:	sbb    eax,edi
  40b051:	pop    ecx
  40b052:	das    
  40b053:	mov    al,ds:0x8adbeaa8
  40b058:	clc    
  40b059:	xchg   dh,ah
  40b05b:	cs pushf 
  40b05d:	and    edi,DWORD PTR [edi+0x52d10250]
  40b063:	imul   ah
  40b065:	sub    edi,ecx
  40b067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b068:	call   DWORD PTR [edx+0x50]
  40b06b:	adc    dl,bh
  40b06d:	fist   WORD PTR [eax]
  40b06f:	xlat   BYTE PTR ds:[ebx]
  40b070:	test   BYTE PTR [eax+0x78],dl
  40b073:	test   eax,0xfc5ae044
  40b078:	loope  0x40b0cc
  40b07a:	scas   al,BYTE PTR es:[edi]
  40b07b:	jnp    0x40b0fc
  40b07d:	push   esi
  40b07e:	cmp    BYTE PTR [ebx+0x1f],bh
  40b081:	sar    BYTE PTR [edi],0x23
  40b084:	stos   BYTE PTR es:[edi],al
  40b085:	sub    ch,0xc
  40b088:	dec    eax
  40b089:	inc    ebx
  40b08a:	xor    ch,bh
  40b08c:	test   eax,0x7ad2f290
  40b091:	mov    bh,0xa0
  40b093:	retf   
  40b094:	retf   
  40b095:	xchg   esi,eax
  40b096:	xchg   ebp,eax
  40b097:	data16 neg dl
  40b09a:	push   esi
  40b09b:	loope  0x40b0f8
  40b09d:	es (bad) 
  40b09f:	mov    edi,0x2d9c2ef0
  40b0a4:	push   ds
  40b0a5:	pushf  
  40b0a6:	loopne 0x40b067
  40b0a8:	inc    ecx
  40b0a9:	in     al,dx
  40b0aa:	jmp    0xf4ff:0xaa0fcb93
  40b0b1:	mov    es,WORD PTR [eax-0x3b9aeb3c]
  40b0b7:	or     edi,DWORD PTR [esi+0x4c175722]
  40b0bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0be:	test   ecx,ebx
  40b0c0:	sbb    DWORD PTR [ebp-0x62e75a58],edi
  40b0c6:	in     eax,dx
  40b0c7:	mov    BYTE PTR [esi+eiz*4+0x7d7a984a],ch
  40b0ce:	fsubr  QWORD PTR [edx]
  40b0d0:	mov    ebp,0x38ae8469
  40b0d5:	mov    esp,0x7bf37114
  40b0da:	call   0xc43e80af
  40b0df:	cmp    DWORD PTR [esi-0x7dd3799c],0xffffffbf
  40b0e6:	or     BYTE PTR [ecx],dl
  40b0e8:	jmp    0xacc9:0xa66707c1
  40b0ef:	repnz push edi
  40b0f1:	mov    cl,0xe7
  40b0f3:	mov    dl,0x35
  40b0f5:	xchg   ebp,eax
  40b0f6:	mov    DWORD PTR [ebx],0xfd1cc18e
  40b0fc:	jmp    0x3d44:0x5de53d23
  40b103:	outs   dx,DWORD PTR ds:[esi]
  40b104:	cs in  eax,0x49
  40b107:	js     0x40b174
  40b109:	cwde   
  40b10a:	jl     0x40b0e1
  40b10c:	mov    ebp,0xa8a32aa
  40b111:	xchg   edi,eax
  40b112:	mov    edx,0x5bd20df5
  40b117:	mov    ds:0x642edce3,eax
  40b11c:	arpl   WORD PTR [edx+0x5fd05de6],sp
  40b122:	pop    esp
  40b123:	jl     0x40b110
  40b125:	pop    DWORD PTR [eax-0x4]
  40b128:	das    
  40b129:	xor    DWORD PTR [esp+edi*2+0x2],ebp
  40b12d:	mov    esi,eax
  40b12f:	cmp    bh,BYTE PTR ds:0xce274b62
  40b135:	aaa    
  40b136:	xor    eax,0x5929d221
  40b13b:	inc    esi
  40b13c:	sub    ecx,DWORD PTR [eax+ecx*1+0x20]
  40b140:	sbb    al,0x77
  40b142:	adc    ch,BYTE PTR [eax+0x2da05b79]
  40b148:	stc    
  40b149:	xlat   BYTE PTR ds:[ebx]
  40b14a:	das    
  40b14b:	leave  
  40b14c:	daa    
  40b14d:	pop    edx
  40b14e:	in     al,dx
  40b14f:	sub    eax,0x7a9dc472
  40b154:	lods   al,BYTE PTR ds:[esi]
  40b155:	pop    ecx
  40b156:	je     0x40b0e4
  40b158:	mov    eax,ds:0xcaf2a34
  40b15d:	jl     0x40b1ab
  40b15f:	stos   BYTE PTR es:[edi],al
  40b160:	adc    edi,ebp
  40b162:	stos   BYTE PTR es:[edi],al
  40b163:	or     ch,BYTE PTR [edx+ebx*1]
  40b166:	ret    0xc4cc
  40b169:	add    DWORD PTR [ecx+0x7bb7669c],0x73b00c11
  40b173:	retf   
  40b174:	pop    esp
  40b175:	das    
  40b176:	sub    edi,DWORD PTR [edi+0x3d161ff0]
  40b17c:	div    DWORD PTR [edi+esi*1-0x18ab7005]
  40b183:	or     BYTE PTR [ebp+0x39],bl
  40b186:	mov    ds,WORD PTR [ebp+0x70]
  40b189:	jno    0x40b157
  40b18b:	jmp    0x40b1ce
  40b18d:	mov    ecx,0x30ad42a8
  40b192:	jmp    0x335d7a6d
  40b197:	and    bl,BYTE PTR [ebx+0x7d]
  40b19a:	lods   al,BYTE PTR ds:[esi]
  40b19b:	pushf  
  40b19c:	mov    al,0x51
  40b19e:	(bad)  
  40b19f:	lods   eax,DWORD PTR ds:[esi]
  40b1a0:	jge    0x40b175
  40b1a2:	hlt    
  40b1a3:	adc    BYTE PTR [ecx+0x280a1406],bl
  40b1a9:	rcl    DWORD PTR [edi],1
  40b1ab:	mov    dh,0x6d
  40b1ad:	jle    0x40b1cc
  40b1af:	and    bl,BYTE PTR [edx+ebp*2+0x54]
  40b1b3:	jg     0x40b1e4
  40b1b5:	jb     0x40b142
  40b1b7:	cli    
  40b1b8:	ja     0x40b227
  40b1ba:	cmp    DWORD PTR [edi+0x7],0xd7b7e3a6
  40b1c1:	and    al,0x69
  40b1c3:	jmp    0x40b206
  40b1c5:	xchg   edx,eax
  40b1c6:	in     al,dx
  40b1c7:	jecxz  0x40b1ce
  40b1c9:	cld    
  40b1ca:	jle    0x40b19e
  40b1cc:	push   cs
  40b1cd:	test   al,0x3
  40b1cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1d0:	sar    al,cl
  40b1d2:	pop    ebx
  40b1d3:	jns    0x40b178
  40b1d5:	mov    ebx,0xaa11e2c6
  40b1da:	mov    ecx,0x15671432
  40b1df:	mov    ?,esp
  40b1e1:	pop    ds
  40b1e2:	mov    dx,0xdea4
  40b1e6:	jno    0x40b1b5
  40b1e8:	jb     0x40b21b
  40b1ea:	pop    edi
  40b1eb:	mov    ebx,0x870d97c5
  40b1f1:	retf   
  40b1f2:	jns    0x40b1af
  40b1f4:	aas    
  40b1f5:	sbb    ebp,ebp
  40b1f7:	out    dx,al
  40b1f8:	sub    al,0x9c
  40b1fa:	dec    edi
  40b1fb:	xchg   al,al
  40b1fd:	jle    0x40b1e2
  40b1ff:	cmp    eax,0xa63bfed5
  40b204:	ins    BYTE PTR es:[edi],dx
  40b205:	jno    0x40b25a
  40b207:	dec    ebx
  40b208:	cli    
  40b209:	in     al,dx
  40b20a:	cwde   
  40b20b:	loop   0x40b27c
  40b20d:	xchg   ecx,eax
  40b20e:	aam    0x86
  40b210:	jl     0x40b1c6
  40b212:	sbb    esp,DWORD PTR [ecx+eax*1-0x7a6d2628]
  40b219:	xchg   edi,eax
  40b21a:	jae    0x40b1e3
  40b21c:	call   0xdc74:0x6f50bb0
  40b223:	pop    ebp
  40b224:	in     eax,0x7d
  40b226:	pop    ebp
  40b227:	into   
  40b228:	mov    eax,ds:0x9134dcae
  40b22d:	lock cld 
  40b22f:	adc    eax,0x7fdd2463
  40b234:	hlt    
  40b235:	pop    esi
  40b236:	mov    ebx,0xa0240e6c
  40b23b:	xor    dl,bh
  40b23d:	xchg   esi,eax
  40b23e:	fld    DWORD PTR [ebx-0x4c]
  40b241:	aad    0xdb
  40b243:	inc    ebx
  40b244:	icebp  
  40b245:	aam    0x11
  40b247:	std    
  40b248:	push   edx
  40b249:	stc    
  40b24a:	adc    edx,edi
  40b24c:	test   al,0xb5
  40b24e:	push   0x1a
  40b250:	es ret 
  40b252:	popf   
  40b253:	mov    bl,0x4c
  40b255:	adc    edi,eax
  40b257:	jae    0x40b243
  40b259:	(bad)  
  40b25a:	sub    DWORD PTR [eax+0x29],ebx
  40b25d:	ss sahf 
  40b25f:	enter  0x9995,0x89
  40b263:	push   ebx
  40b264:	ja     0x40b255
  40b266:	mov    ah,0x56
  40b268:	and    eax,DWORD PTR [eax+0x4acdfc4a]
  40b26e:	lea    ebx,[esi]
  40b270:	pop    ebp
  40b271:	loop   0x40b285
  40b273:	or     al,dh
  40b275:	outs   dx,DWORD PTR ds:[esi]
  40b276:	scas   eax,DWORD PTR es:[edi]
  40b277:	adc    al,ah
  40b279:	test   BYTE PTR [edx],dl
  40b27b:	inc    DWORD PTR [ebx+0x3d12b811]
  40b281:	in     eax,0x28
  40b283:	sbb    esp,DWORD PTR [eax]
  40b285:	ret    
  40b286:	lods   eax,DWORD PTR ds:[esi]
  40b287:	dec    esi
  40b288:	dec    esi
  40b289:	fnstsw WORD PTR [esi+0x486eac03]
  40b28f:	addr16 aaa 
  40b291:	adc    BYTE PTR [ebx],ch
  40b293:	and    eax,0x144ed9cc
  40b298:	arpl   bx,di
  40b29a:	jnp    0x40b21c
  40b29c:	mov    ds:0xe13197e3,al
  40b2a1:	pop    ds
  40b2a2:	shl    BYTE PTR [ebx+0x34d6c810],1
  40b2a8:	pop    edi
  40b2a9:	jo     0x40b285
  40b2ab:	fadd   st,st(5)
  40b2ad:	sar    DWORD PTR [edi],0xc2
  40b2b0:	arpl   WORD PTR [edi+0x14],si
  40b2b3:	mov    bl,0xba
  40b2b5:	dec    BYTE PTR [edi+0x22fb8a6e]
  40b2bb:	push   ds
  40b2bc:	dec    esp
  40b2bd:	dec    eax
  40b2be:	div    DWORD PTR [esi]
  40b2c0:	mov    ebx,0xc08270a
  40b2c5:	jecxz  0x40b269
  40b2c7:	je     0x40b2f0
  40b2c9:	push   cs
  40b2ca:	or     al,0x59
  40b2cc:	test   BYTE PTR [ecx],ch
  40b2ce:	ja     0x40b309
  40b2d0:	inc    esp
  40b2d1:	xor    bh,BYTE PTR [edx-0x9]
  40b2d4:	jno    0x40b34b
  40b2d6:	dec    ecx
  40b2d7:	xchg   esi,eax
  40b2d8:	cmc    
  40b2d9:	ins    DWORD PTR es:[edi],dx
  40b2da:	pop    es
  40b2db:	mov    eax,ds:0xf315e39b
  40b2e0:	fs push edi
  40b2e2:	adc    al,dl
  40b2e4:	sbb    edi,ecx
  40b2e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2e7:	rcr    DWORD PTR [eax],cl
  40b2e9:	pop    es
  40b2ea:	mov    ah,0xc0
  40b2ec:	add    DWORD PTR ds:[eax],ebx
  40b2ef:	in     al,dx
  40b2f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2f1:	pop    ebp
  40b2f2:	dec    ecx
  40b2f3:	jp     0x40b300
  40b2f5:	cmp    ecx,DWORD PTR ds:0x3ccce286
  40b2fb:	jns    0x2c914066
  40b301:	dec    edx
  40b302:	xor    dl,BYTE PTR [ecx+0x45]
  40b305:	cmp    al,0x2a
  40b307:	stc    
  40b308:	jbe    0x40b296
  40b30a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b30b:	shr    ebx,1
  40b30d:	popf   
  40b30e:	clc    
  40b30f:	pop    esp
  40b310:	outs   dx,DWORD PTR ds:[esi]
  40b311:	dec    eax
  40b312:	fstp   TBYTE PTR [edi]
  40b314:	out    0x57,al
  40b316:	cmp    DWORD PTR [ebx],esp
  40b318:	enter  0x3abc,0xed
  40b31c:	stc    
  40b31d:	ja     0x40b369
  40b31f:	fist   DWORD PTR [esi+0x2b]
  40b322:	mov    ah,0x64
  40b324:	jb     0x40b385
  40b326:	addr16 into 
  40b328:	test   BYTE PTR [edi-0x23],0x72
  40b32c:	call   0xca0:0xd410d6b3
  40b333:	int3   
  40b334:	xor    bh,BYTE PTR [edx]
  40b336:	mov    ebp,0x60a66156
  40b33b:	add    eax,esp
  40b33d:	adc    bh,BYTE PTR [edx+0x7645b617]
  40b343:	dec    edi
  40b344:	sub    esp,DWORD PTR [ecx]
  40b346:	pushf  
  40b347:	mov    ecx,0xd832f751
  40b34c:	nop
  40b34d:	push   ebp
  40b34e:	mov    ds:0xdb8dc7e7,eax
  40b353:	sbb    ecx,DWORD PTR [ebp-0x4fd30a8a]
  40b359:	leave  
  40b35a:	inc    ecx
  40b35b:	cdq    
  40b35c:	jmp    0xc14e:0x9513e63e
  40b363:	aas    
  40b364:	jecxz  0x40b2fc
  40b366:	xchg   BYTE PTR [ebp-0x37853e5b],cl
  40b36c:	aas    
  40b36d:	mov    ah,0x12
  40b36f:	mov    ds:0xad3621d5,al
  40b374:	loope  0x40b3e7
  40b376:	or     DWORD PTR ds:0xaf597a16,esi
  40b37c:	leave  
  40b37d:	ins    BYTE PTR es:[edi],dx
  40b37e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b37f:	out    0x35,eax
  40b381:	repnz sub edi,esi
  40b384:	test   eax,esi
  40b386:	rcr    BYTE PTR [ecx],cl
  40b388:	mov    esp,0xf902bd9e
  40b38d:	sar    BYTE PTR ds:0x363b4c93,0x97
  40b394:	or     BYTE PTR ds:0xcc141ca,cl
  40b39a:	xor    eax,DWORD PTR [edi]
  40b39c:	mov    ebp,0x677c8d41
  40b3a1:	push   ss
  40b3a2:	or     al,0x4b
  40b3a4:	es out 0x16,al
  40b3a7:	dec    ecx
  40b3a8:	adc    esp,DWORD PTR ds:0x963c81fb
  40b3ae:	xchg   BYTE PTR [edx-0x235e047a],ah
  40b3b4:	(bad)  
  40b3b5:	add    edx,DWORD PTR ds:0x64c2e422
  40b3bb:	xor    ebp,DWORD PTR [ecx]
  40b3bd:	xchg   BYTE PTR [edi+0x6c],al
  40b3c0:	cmp    BYTE PTR [edx+0x57],ch
  40b3c3:	jae    0x40b3e9
  40b3c5:	test   dh,cl
  40b3c7:	xlat   BYTE PTR ds:[ebx]
  40b3c8:	inc    esp
  40b3c9:	cmp    ecx,DWORD PTR [esi-0x2780cc09]
  40b3cf:	ss xchg edx,eax
  40b3d1:	push   cs
  40b3d2:	mov    cx,0xb044
  40b3d6:	call   0x373:0x7d52a00c
  40b3dd:	test   eax,0xb5f12c32
  40b3e2:	fld    TBYTE PTR [esp+edx*4+0x61025bcb]
  40b3e9:	ins    DWORD PTR es:[edi],dx
  40b3ea:	das    
  40b3eb:	aaa    
  40b3ec:	mov    BYTE PTR [edi],ch
  40b3ee:	dec    esi
  40b3ef:	sahf   
  40b3f0:	aaa    
  40b3f1:	pop    esp
  40b3f2:	adc    al,0x88
  40b3f4:	push   ecx
  40b3f5:	out    0x9,eax
  40b3f7:	nop
  40b3f8:	fld    QWORD PTR [esi+0x60c8578e]
  40b3fe:	push   ebp
  40b3ff:	jb     0x40b39f
  40b401:	mov    ebp,DWORD PTR [edi]
  40b403:	sbb    edi,DWORD PTR [edi]
  40b405:	inc    ebp
  40b406:	in     eax,0xb3
  40b408:	xor    esi,DWORD PTR [ebx]
  40b40a:	loopne 0x40b417
  40b40c:	add    al,0xa8
  40b40e:	aaa    
  40b40f:	rcl    BYTE PTR [edi+0x5b],1
  40b412:	cmp    ch,cl
  40b414:	sar    DWORD PTR [esi-0x16],0x14
  40b418:	sbb    eax,0xe6daa9dc
  40b41d:	sbb    DWORD PTR [eax+0x18e59a37],ecx
  40b423:	int3   
  40b424:	add    dl,al
  40b426:	out    0xbc,al
  40b428:	inc    esp
  40b429:	loop   0x40b48a
  40b42b:	ret    0x87c5
  40b42e:	lahf   
  40b42f:	call   0xa5cf:0xd63e6fc8
  40b436:	ror    DWORD PTR [edx-0x72],1
  40b439:	inc    edi
  40b43a:	adc    BYTE PTR [ebx],0xc7
  40b43d:	push   esi
  40b43e:	jns    0x40b44c
  40b440:	aas    
  40b441:	test   al,0x62
  40b443:	call   0x19eb92f7
  40b448:	mov    ebx,gs
  40b44a:	jns    0x40b46c
  40b44c:	push   ds
  40b44d:	data16 je 0x40b4b4
  40b450:	xchg   esp,eax
  40b451:	or     ecx,DWORD PTR [ebx-0x72743a7a]
  40b457:	dec    ecx
  40b458:	cld    
  40b459:	fldenv [ebx+ecx*1+0x4eeaf4e5]
  40b460:	jmp    0x20820bf4
  40b465:	pop    esp
  40b466:	repz mov eax,0x73045370
  40b46c:	jne    0x40b3f9
  40b46e:	dec    edx
  40b46f:	(bad)  
  40b470:	call   edx
  40b472:	adc    DWORD PTR [esp+eiz*2-0x1a71aeee],edi
  40b479:	jns    0x40b4c4
  40b47b:	mov    ch,0x9d
  40b47d:	sub    DWORD PTR [edi+0x31],0xa31d3dd3
  40b484:	lds    esp,FWORD PTR [ebp-0x5]
  40b487:	jbe    0x40b49a
  40b489:	cmp    ah,BYTE PTR [ebx-0x50cde256]
  40b48f:	sar    DWORD PTR [esi+eax*2-0x43],cl
  40b493:	mov    bl,0xd3
  40b495:	retf   0x981d
  40b498:	or     DWORD PTR [ebx+0x717b631],esi
  40b49e:	nop
  40b49f:	iret   
  40b4a0:	clc    
  40b4a1:	imul   esp,DWORD PTR [esi-0x27],0x672d1b73
  40b4a8:	mov    cs,WORD PTR [eax-0x4101e91a]
  40b4ae:	test   BYTE PTR [edx-0x36f0b738],0x1d
  40b4b5:	ss jmp 0x40b4e4
  40b4b8:	or     DWORD PTR [edi],esi
  40b4ba:	mov    dl,0xc0
  40b4bc:	test   BYTE PTR [eax+esi*8],bh
  40b4bf:	xor    DWORD PTR [edx+0x67],0x372bc038
  40b4c6:	mov    esi,0x9973e673
  40b4cb:	js     0x40b51f
  40b4cd:	inc    esp
  40b4ce:	bound  eax,QWORD PTR [edx-0x7a17a9d2]
  40b4d4:	clc    
  40b4d5:	mov    ebp,ss
  40b4d7:	stos   DWORD PTR es:[edi],eax
  40b4d8:	cli    
  40b4d9:	jmp    0x4869c52f
  40b4de:	cmp    dl,BYTE PTR [edx-0x47]
  40b4e1:	sub    al,0x6b
  40b4e3:	mov    edx,0x4b16f0c2
  40b4e8:	inc    ebp
  40b4e9:	scas   al,BYTE PTR es:[edi]
  40b4ea:	clc    
  40b4eb:	popf   
  40b4ec:	mov    bl,0x8
  40b4ee:	pop    esi
  40b4ef:	ret    0x521d
  40b4f2:	enter  0xe088,0x31
  40b4f6:	int3   
  40b4f7:	cmp    DWORD PTR [eax],ebp
  40b4f9:	or     DWORD PTR [esi-0x4a0ef6bc],ecx
  40b4ff:	cwde   
  40b500:	hlt    
  40b501:	xor    edi,DWORD PTR [edi-0x78]
  40b504:	fst    st(6)
  40b506:	pop    ecx
  40b507:	cwde   
  40b508:	xchg   esp,eax
  40b509:	jo     0x40b575
  40b50b:	fdiv   QWORD PTR [eax+0x71d30643]
  40b511:	shr    ebp,cl
  40b513:	ins    BYTE PTR es:[edi],dx
  40b514:	sbb    eax,0xa9526483
  40b519:	mov    BYTE PTR [edi+0x0],dh
  40b51c:	add    eax,0x8cc49e6
  40b521:	add    al,0xc6
  40b523:	inc    eax
  40b524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b525:	int    0x87
  40b527:	or     DWORD PTR [ebp+0x203b567a],esp
  40b52d:	es adc DWORD PTR gs:[ebx-0x916f98c],0x16
  40b536:	in     al,0xde
  40b538:	dec    ebx
  40b539:	xor    ebp,edi
  40b53b:	inc    ebp
  40b53c:	inc    ebp
  40b53d:	sti    
  40b53e:	fnstsw WORD PTR [eax-0x67c41b54]
  40b544:	into   
  40b545:	xchg   esi,eax
  40b546:	mov    ds,WORD PTR [ebp+esi*8+0x67]
  40b54a:	(bad)  
  40b54c:	jbe    0x40b561
  40b54e:	and    eax,0xb8a69886
  40b553:	fdiv   QWORD PTR [eax]
  40b555:	xchg   BYTE PTR [ebp+0x7f2670e0],bh
  40b55b:	(bad)  
  40b55c:	mov    ebx,0xface1421
  40b561:	fimul  WORD PTR ds:0x1fa18a62
  40b567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b568:	mov    al,cl
  40b56a:	adc    cl,cl
  40b56c:	les    edi,FWORD PTR [ecx+0x51]
  40b56f:	xchg   esi,eax
  40b570:	out    dx,eax
  40b571:	shl    edi,1
  40b573:	sahf   
  40b574:	jne    0x40b54b
  40b576:	mov    ds:0xb7a4866c,eax
  40b57b:	mov    dl,0x93
  40b57d:	add    eax,0xb85f5dc6
  40b582:	stc    
  40b583:	dec    edi
  40b584:	daa    
  40b585:	lock lock mov ebx,0x2c3fd2d4
  40b58c:	xchg   ecx,eax
  40b58d:	arpl   WORD PTR [eax+eiz*1-0x1b],di
  40b591:	pop    esp
  40b592:	sub    bl,BYTE PTR [ebp+eiz*4+0x33]
  40b596:	add    DWORD PTR [ebp+0x45],0xffffffc2
  40b59a:	and    DWORD PTR [ebp-0x3c00986f],edx
  40b5a0:	jne    0x40b54e
  40b5a2:	sbb    ebx,DWORD PTR ds:0x73e23c16
  40b5a8:	cmp    eax,0x85eec37e
  40b5ad:	(bad)  
  40b5af:	adc    ch,dl
  40b5b1:	sub    edi,ecx
  40b5b3:	outs   dx,BYTE PTR ds:[esi]
  40b5b4:	pop    esi
  40b5b5:	adc    BYTE PTR [ebp-0x15],dl
  40b5b8:	jecxz  0x40b566
  40b5ba:	or     eax,0xab70e5b6
  40b5bf:	ret    0x1d07
  40b5c2:	fist   WORD PTR [eax+ecx*1]
  40b5c5:	adc    al,0xe5
  40b5c7:	sub    al,0x16
  40b5c9:	inc    edx
  40b5ca:	in     eax,dx
  40b5cb:	jb     0x40b56c
  40b5cd:	inc    ecx
  40b5ce:	ins    BYTE PTR es:[edi],dx
  40b5cf:	fs mov ecx,0x9dc7ddd0
  40b5d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5d6:	jmp    0x40b5bf
  40b5d8:	addr16 dec esp
  40b5da:	mov    bh,0xb5
  40b5dc:	jg     0x40b5a5
  40b5de:	jmp    0x3be7:0x5b73f834
  40b5e5:	xchg   ebx,eax
  40b5e6:	inc    ebp
  40b5e7:	dec    ebx
  40b5e8:	jmp    0x1942:0x8b8bf4bc
  40b5ef:	xor    eax,0xbfb167a0
  40b5f4:	sahf   
  40b5f5:	nop
  40b5f6:	pop    ebp
  40b5f7:	jae    0x40b5da
  40b5f9:	lods   eax,DWORD PTR ds:[esi]
  40b5fa:	jne    0x40b582
  40b5fc:	and    BYTE PTR [ebx+0x6b],0xfd
  40b600:	pop    ebx
  40b601:	jno    0x40b5f6
  40b603:	cs ret 
  40b605:	leave  
  40b606:	jns    0x40b67e
  40b608:	loop   0x40b681
  40b60a:	cmp    ebp,DWORD PTR [ebx-0x1f]
  40b60d:	push   ds
  40b60e:	das    
  40b60f:	ret    
  40b610:	in     al,dx
  40b611:	into   
  40b612:	pop    edx
  40b613:	daa    
  40b614:	pop    ecx
  40b615:	pop    edx
  40b616:	mov    ecx,0xb3e741c5
  40b61b:	xor    eax,0xe351b8cb
  40b620:	repz (bad) 
  40b622:	into   
  40b623:	int3   
  40b624:	adc    esp,DWORD PTR [edx]
  40b626:	out    0xd6,eax
  40b628:	add    BYTE PTR [eax-0x2a],dl
  40b62b:	mov    eax,0x7fadd97e
  40b630:	loop   0x40b662
  40b632:	popf   
  40b633:	je     0x40b5f8
  40b635:	dec    ebx
  40b636:	adc    eax,0x745e8ce0
  40b63b:	cmp    DWORD PTR [si],0xffffffaf
  40b63f:	pop    edi
  40b640:	mov    al,0xe8
  40b642:	and    ecx,eax
  40b644:	mov    bh,bh
  40b646:	idiv   DWORD PTR [edi]
  40b648:	pop    ds
  40b649:	imul   ebx,DWORD PTR [esi],0x176013f0
  40b64f:	sub    BYTE PTR [di],al
  40b652:	push   edi
  40b653:	aad    0xd7
  40b655:	or     al,0x28
  40b657:	push   ebp
  40b658:	test   BYTE PTR [esi-0x5f875c19],ah
  40b65e:	pop    eax
  40b65f:	mov    esp,DWORD PTR [ebx-0x44110e43]
  40b665:	in     al,dx
  40b666:	mov    fs,WORD PTR [ecx]
  40b668:	mov    al,0x52
  40b66a:	adc    esp,ecx
  40b66c:	xchg   ecx,eax
  40b66d:	jmp    0x158813ec
  40b672:	dec    esi
  40b673:	inc    edx
  40b674:	inc    esi
  40b675:	pop    ebx
  40b676:	jmp    edx
  40b678:	add    eax,edi
  40b67a:	iret   
  40b67b:	sub    edx,ebx
  40b67d:	loope  0x40b664
  40b67f:	dec    edx
  40b680:	test   DWORD PTR [eax-0x2],0xe310eef0
  40b687:	aaa    
  40b688:	popa   
  40b689:	push   eax
  40b68a:	(bad)  
  40b68b:	push   ds
  40b68c:	sub    edx,DWORD PTR [edi]
  40b68e:	imul   eax,DWORD PTR [eax+0x59df640f],0x74
  40b695:	cmp    al,0xf0
  40b697:	and    BYTE PTR [edx-0x77],0xf
  40b69b:	add    bl,BYTE PTR [edi]
  40b69d:	push   ss
  40b69e:	das    
  40b69f:	cmp    bl,ah
  40b6a1:	mul    DWORD PTR ds:[ecx+0x3ec4dcfa]
  40b6a8:	lods   al,BYTE PTR ds:[esi]
  40b6a9:	lds    eax,FWORD PTR [edx-0x54]
  40b6ac:	(bad)  
  40b6ad:	push   ds
  40b6ae:	dec    edx
  40b6af:	jnp    0x40b67b
  40b6b1:	xor    eax,DWORD PTR [bx+di]
  40b6b4:	xchg   DWORD PTR [edi+0x2e],eax
  40b6b7:	jne    0x40b6fe
  40b6b9:	sbb    BYTE PTR [eax],dh
  40b6bb:	ds dec ebp
  40b6bd:	test   eax,0x79bd4e35
  40b6c2:	sbb    al,BYTE PTR [ebx-0x28]
  40b6c5:	lds    esi,FWORD PTR [edi]
  40b6c7:	or     al,0xcf
  40b6c9:	add    bl,BYTE PTR [eax]
  40b6cb:	adc    ch,BYTE PTR [esi-0x1128bf33]
  40b6d1:	jo     0x40b6c9
  40b6d3:	pop    edi
  40b6d4:	test   eax,0x15d4d430
  40b6d9:	idiv   DWORD PTR [ecx]
  40b6db:	jmp    0x40b751
  40b6dd:	hlt    
  40b6de:	mov    eax,0x3558c7f0
  40b6e3:	push   cs
  40b6e4:	mov    WORD PTR [ecx+0x12747d8d],es
  40b6ea:	ja     0x40b711
  40b6ec:	cmp    DWORD PTR ds:0xa686385f,esi
  40b6f2:	or     ebp,edi
  40b6f4:	jmp    0x40b6a7
  40b6f6:	aas    
  40b6f7:	lods   al,BYTE PTR ds:[esi]
  40b6f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6f9:	push   ebx
  40b6fa:	sub    BYTE PTR [esp+edx*4],ah
  40b6fd:	(bad)  
  40b6fe:	xchg   DWORD PTR [esi-0x2a],eax
  40b701:	xchg   ebp,eax
  40b702:	sub    eax,esi
  40b704:	mov    eax,0xb82d72d8
  40b709:	dec    edx
  40b70a:	push   eax
  40b70c:	fild   WORD PTR [ecx]
  40b70e:	outs   dx,DWORD PTR ds:[esi]
  40b70f:	inc    edi
  40b710:	push   eax
  40b711:	mov    dl,0xc3
  40b713:	(bad)  
  40b714:	aas    
  40b715:	fist   WORD PTR [edx]
  40b717:	mov    BYTE PTR [edi+0x1b],ah
  40b71a:	fidiv  WORD PTR [esi]
  40b71c:	mov    ds:0x45c0d823,al
  40b721:	in     eax,dx
  40b722:	sar    DWORD PTR [ebp+0x144eeab4],cl
  40b728:	aad    0xca
  40b72a:	xchg   esp,eax
  40b72b:	sbb    eax,0xc3d6556
  40b730:	fisttp DWORD PTR [bx+di]
  40b733:	int3   
  40b734:	aaa    
  40b735:	cli    
  40b736:	icebp  
  40b737:	xor    ebp,esp
  40b739:	mov    ah,0xe4
  40b73b:	aaa    
  40b73c:	aad    0x41
  40b73e:	inc    esp
  40b73f:	jmp    0x40b79d
  40b741:	into   
  40b742:	cmp    DWORD PTR ds:0x51b00ad2,edx
  40b748:	pop    esi
  40b749:	retf   
  40b74a:	rcl    DWORD PTR [eax+0x67],1
  40b74d:	sub    DWORD PTR [ecx+eiz*2-0x41],edi
  40b751:	fmul   QWORD PTR [edx+0x22]
  40b754:	adc    ah,BYTE PTR [ebx+0x6932dee1]
  40b75a:	stc    
  40b75b:	pop    ss
  40b75c:	jl     0x40b740
  40b75e:	mov    esp,0x862e14e6
  40b763:	jns    0x40b786
  40b765:	mov    dh,0x83
  40b767:	scas   eax,DWORD PTR es:[edi]
  40b768:	sub    eax,0x2b53d8b0
  40b76d:	xchg   bx,ax
  40b76f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b770:	loop   0x40b7e1
  40b772:	in     eax,dx
  40b773:	popf   
  40b774:	cli    
  40b775:	call   0xae4d:0x6c19881e
  40b77c:	adc    al,0x35
  40b77e:	mov    al,ds:0x3e0dc174
  40b783:	xor    DWORD PTR [esi+0x55fc432],eax
  40b789:	ss adc eax,0x4663067b
  40b78f:	jnp    0x40b7a5
  40b791:	retf   
  40b792:	push   edx
  40b793:	rol    BYTE PTR [edx-0x42],0x8a
  40b797:	xor    bh,BYTE PTR [edx]
  40b799:	(bad)  
  40b79a:	hlt    
  40b79b:	dec    ebx
  40b79c:	or     DWORD PTR [ebx-0x1],edx
  40b79f:	push   ecx
  40b7a0:	or     DWORD PTR [ebx-0x7e],eax
  40b7a3:	mov    ss,edx
  40b7a5:	jno    0x40b80e
  40b7a7:	xor    BYTE PTR [esi-0x32],cl
  40b7aa:	sub    ebx,DWORD PTR ds:0xbd31fee3
  40b7b0:	es mov bl,0xef
  40b7b3:	fbstp  TBYTE PTR ds:0xc4e16085
  40b7b9:	mov    ecx,0x2d408932
  40b7be:	aad    0xac
  40b7c0:	dec    edx
  40b7c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7c2:	out    dx,eax
  40b7c3:	shl    DWORD PTR [edx+0x369131e7],cl
  40b7c9:	(bad)  
  40b7ca:	repnz aaa 
  40b7cc:	inc    esp
  40b7cd:	mov    cl,0xe4
  40b7cf:	push   0x872de1be
  40b7d4:	out    dx,al
  40b7d5:	lea    esp,[edi-0x5d]
  40b7d8:	aaa    
  40b7d9:	inc    ecx
  40b7da:	ret    
  40b7db:	mov    edi,0xf666ef5c
  40b7e0:	jne    0x40b767
  40b7e2:	std    
  40b7e3:	enter  0xe85f,0xa4
  40b7e7:	mov    dl,0x39
  40b7e9:	imul   ecx,ecx,0xffffffdd
  40b7ec:	je     0x40b7a8
  40b7ee:	jecxz  0x40b818
  40b7f0:	je     0x40b86d
  40b7f2:	fld    TBYTE PTR [ecx+edi*8+0x2bda6969]
  40b7f9:	ins    DWORD PTR es:[edi],dx
  40b7fa:	pop    ss
  40b7fb:	or     al,0x77
  40b7fd:	or     BYTE PTR ds:0x30c540a0,bl
  40b803:	(bad)  
  40b804:	sbb    edx,0x8c25c66f
  40b80a:	rcl    dh,0xba
  40b80d:	leave  
  40b80e:	mov    eax,ds:0x276e53a8
  40b813:	add    BYTE PTR [esi+eax*2],dl
  40b816:	xor    eax,0x5fb42705
  40b81b:	inc    esp
  40b81c:	retfw  
  40b81e:	fdivr  DWORD PTR [edx]
  40b820:	pop    edx
  40b821:	in     eax,0xa0
  40b823:	sysret 
  40b825:	inc    edi
  40b826:	inc    esp
  40b827:	in     al,dx
  40b828:	aas    
  40b829:	mov    esp,0x2802f4cd
  40b82e:	inc    edx
  40b82f:	cmc    
  40b830:	(bad)  
  40b831:	jns    0x40b7ca
  40b833:	or     al,0x31
  40b835:	or     eax,0xb5308557
  40b83a:	scas   al,BYTE PTR es:[edi]
  40b83b:	outs   dx,BYTE PTR ds:[esi]
  40b83c:	sahf   
  40b83d:	sar    ch,cl
  40b83f:	push   ecx
  40b840:	out    dx,eax
  40b841:	(bad)  
  40b843:	and    DWORD PTR [ebp+0x6],esp
  40b846:	or     al,0xe1
  40b848:	les    edi,FWORD PTR [esi+ebp*2]
  40b84b:	cli    
  40b84c:	int3   
  40b84d:	inc    edx
  40b84e:	pop    eax
  40b84f:	sbb    eax,0x674a8d3e
  40b854:	jmp    0xac2c:0x75150e7c
  40b85b:	loop   0x40b7e6
  40b85d:	adc    DWORD PTR [ebx],ebp
  40b85f:	je     0x40b7e5
  40b861:	cdq    
  40b862:	iret   
  40b863:	inc    ecx
  40b864:	call   0x8f816f08
  40b869:	add    al,BYTE PTR [eax]
  40b86b:	mov    DWORD PTR [ecx],0xc2da721c
  40b871:	cmp    BYTE PTR [ebp-0x3b],bh
  40b874:	bound  ebp,QWORD PTR ds:0x45b39ac8
  40b87a:	add    eax,0x70555c74
  40b87f:	push   0x999ef6c4
  40b884:	jno    0x40b8f7
  40b886:	xor    bh,bl
  40b888:	or     dl,BYTE PTR [ebx-0x6]
  40b88b:	std    
  40b88c:	cmp    edi,DWORD PTR [esi+ecx*8+0x6c]
  40b890:	xchg   ebx,eax
  40b891:	fcomip st,st(4)
  40b893:	xor    eax,DWORD PTR [edi+0x57955c03]
  40b899:	dec    edi
  40b89a:	lods   eax,DWORD PTR ds:[esi]
  40b89b:	rep outs dx,DWORD PTR ds:[esi]
  40b89d:	inc    ebp
  40b89e:	pop    ecx
  40b89f:	and    al,0x2c
  40b8a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8a2:	xor    BYTE PTR [esi-0x45ad70c7],ch
  40b8a8:	cmp    DWORD PTR [eax+0x24],0xd29918fd
  40b8af:	int3   
  40b8b0:	mov    esi,0xb2507e17
  40b8b5:	add    al,0xb5
  40b8b7:	xor    cl,0x23
  40b8ba:	ins    DWORD PTR es:[edi],dx
  40b8bb:	ret    
  40b8bc:	jno    0x40b8b8
  40b8be:	rcl    eax,1
  40b8c0:	ins    BYTE PTR es:[edi],dx
  40b8c1:	repnz outs dx,DWORD PTR ds:[esi]
  40b8c3:	xchg   edi,eax
  40b8c4:	cmp    al,0xf0
  40b8c6:	xor    ebp,edi
  40b8c8:	dec    eax
  40b8c9:	hlt    
  40b8ca:	push   esi
  40b8cb:	and    al,0x11
  40b8cd:	jl     0x40b8e8
  40b8cf:	aaa    
  40b8d0:	pop    ebp
  40b8d1:	(bad)  
  40b8d2:	pop    eax
  40b8d3:	mov    bl,0xcf
  40b8d5:	dec    esi
  40b8d6:	adc    BYTE PTR [ebx+0x3bdcdf77],bl
  40b8dc:	(bad)  
  40b8dd:	ret    
  40b8de:	scas   al,BYTE PTR es:[edi]
  40b8df:	loopne 0x40b90c
  40b8e1:	push   eax
  40b8e2:	mov    bl,0xd9
  40b8e4:	inc    esi
  40b8e5:	ja     0x40b882
  40b8e7:	ret    0x719e
  40b8ea:	pop    ecx
  40b8eb:	and    DWORD PTR [esi-0x570fcc7e],esp
  40b8f1:	inc    eax
  40b8f2:	dec    esp
  40b8f3:	xlat   BYTE PTR ds:[ebx]
  40b8f4:	ret    
  40b8f5:	sub    bh,dl
  40b8f7:	push   0xc2e8806d
  40b8fc:	fs and eax,0xac722547
  40b902:	adc    DWORD PTR [ecx+0x8a1f917],esi
  40b908:	push   ebx
  40b909:	inc    eax
  40b90a:	and    edi,esi
  40b90c:	xor    esp,DWORD PTR [ebx+ebp*1+0x11da8780]
  40b913:	aas    
  40b914:	daa    
  40b915:	add    eax,0xdb4a7c14
  40b91a:	jecxz  0x40b91b
  40b91c:	inc    eax
  40b91d:	cwde   
  40b91e:	jno    0x40b8ed
  40b920:	add    ah,BYTE PTR [eax-0x18]
  40b923:	stos   DWORD PTR es:[edi],eax
  40b924:	idiv   BYTE PTR [edi-0x2c]
  40b927:	inc    esp
  40b928:	pop    ebx
  40b929:	popa   
  40b92a:	scas   eax,DWORD PTR es:[edi]
  40b92b:	into   
  40b92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b92d:	(bad)  
  40b92e:	jb     0x40b937
  40b930:	mov    eax,0x60fdcd91
  40b935:	lds    eax,FWORD PTR [edx+ebx*2-0x62]
  40b939:	jbe    0x40b8f2
  40b93b:	add    ebp,DWORD PTR [edx]
  40b93d:	push   ebx
  40b93e:	mov    dl,dl
  40b940:	lods   al,BYTE PTR ds:[esi]
  40b941:	enter  0x6784,0x43
  40b945:	stc    
  40b946:	add    esp,ebp
  40b948:	pop    ds
  40b949:	rcr    BYTE PTR [ecx+0x54776012],1
  40b94f:	aaa    
  40b950:	sub    al,0xd5
  40b952:	inc    edx
  40b953:	fistp  DWORD PTR [edx-0x66ab38bf]
  40b959:	data16 outs dx,BYTE PTR ds:[esi]
  40b95b:	mov    bh,0x9c
  40b95d:	hlt    
  40b95e:	pop    esp
  40b95f:	inc    BYTE PTR [edi-0x2073c268]
  40b965:	adc    eax,0x28918fa6
  40b96a:	dec    edx
  40b96b:	jmp    0xd4ec:0x6ce3c9c8
  40b972:	push   esi
  40b973:	imul   BYTE PTR [ebp-0x9]
  40b976:	push   eax
  40b977:	dec    ebp
  40b978:	icebp  
  40b979:	mov    ecx,0xaf1ce0b1
  40b97e:	ins    BYTE PTR es:[edi],dx
  40b97f:	jns    0x40b996
  40b981:	mov    esp,0x2490f076
  40b986:	jo     0x40b9e5
  40b988:	push   edx
  40b989:	cld    
  40b98a:	cld    
  40b98b:	jbe    0x40b9e1
  40b98d:	adc    ah,cl
  40b98f:	xchg   ecx,eax
  40b990:	jnp    0x40b916
  40b992:	shl    BYTE PTR [ebp-0x31],0x4c
  40b996:	cmc    
  40b997:	cld    
  40b998:	leave  
  40b999:	mov    DWORD PTR [ebp-0x2d9038de],esi
  40b99f:	xchg   BYTE PTR ds:0x11e21ed3,ch
  40b9a5:	neg    DWORD PTR [edi]
  40b9a7:	pop    edx
  40b9a8:	cmp    al,0x32
  40b9aa:	jg     0x40b9b2
  40b9ac:	cmp    ebp,esi
  40b9ae:	pushf  
  40b9af:	ins    DWORD PTR es:[edi],dx
  40b9b0:	aam    0x59
  40b9b2:	xchg   esi,eax
  40b9b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9b4:	sbb    dh,BYTE PTR [ebx+0x6]
  40b9b7:	cs js  0x40b95c
  40b9ba:	shr    DWORD PTR [ebp+edi*1+0x13ceb0e0],0xd8
  40b9c2:	aas    
  40b9c3:	jae    0x40b997
  40b9c5:	xchg   ebx,eax
  40b9c6:	ins    DWORD PTR es:[edi],dx
  40b9c7:	jb     0x40ba0a
  40b9c9:	popf   
  40b9ca:	ret    
  40b9cb:	out    0x91,al
  40b9cd:	sub    esi,DWORD PTR [edi]
  40b9cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9d0:	pop    edx
  40b9d1:	dec    eax
  40b9d2:	fdivp  st(6),st
  40b9d4:	int    0xcd
  40b9d6:	mov    ebx,0xdd7cd85
  40b9db:	add    eax,0x66cf7cd5
  40b9e0:	mov    edx,0x96c3959f
  40b9e5:	ins    DWORD PTR es:[edi],dx
  40b9e6:	cwde   
  40b9e7:	(bad)  [esi-0x762d217]
  40b9ed:	push   ds
  40b9ee:	int    0x5d
  40b9f0:	jp     0x40ba03
  40b9f2:	add    al,0x68
  40b9f4:	push   cs
  40b9f5:	cs xchg ebx,eax
  40b9f7:	cmp    eax,0x8cb0e93b
  40b9fc:	loop   0x40b9e7
  40b9fe:	add    edi,ebx
  40ba00:	cmp    DWORD PTR [edi-0x22],0x73
  40ba04:	nop
  40ba05:	xchg   DWORD PTR [edi-0x38b633fd],ebx
  40ba0b:	mov    BYTE PTR [ebx+0x5e],al
  40ba0e:	outs   dx,BYTE PTR ds:[esi]
  40ba0f:	int3   
  40ba10:	dec    ecx
  40ba11:	and    ebx,esp
  40ba13:	cmp    esp,ebp
  40ba15:	loop   0x40b9f8
  40ba17:	and    ebp,DWORD PTR [eax+0xa5fec1]
  40ba1d:	fmul   QWORD PTR [esi]
  40ba1f:	lods   al,BYTE PTR ds:[esi]
  40ba20:	adc    edx,edi
  40ba22:	cmp    DWORD PTR [esi-0x39],ecx
  40ba25:	push   esi
  40ba26:	pop    ecx
  40ba27:	loop   0x40b9be
  40ba29:	int    0xa1
  40ba2b:	adc    al,BYTE PTR [ebp-0x5dd35ee]
  40ba31:	aam    0x2d
  40ba33:	adc    cl,BYTE PTR gs:[eax+0x71]
  40ba37:	push   ds
  40ba38:	shr    BYTE PTR [ebx+0x69],cl
  40ba3b:	sbb    eax,0x105de5d0
  40ba40:	xor    al,0x73
  40ba42:	fnstcw WORD PTR [esi-0x2b]
  40ba45:	inc    dx
  40ba47:	pop    eax
  40ba48:	inc    ebp
  40ba49:	lahf   
  40ba4a:	call   0x26c4:0x93a90ba7
  40ba51:	mov    al,0x71
  40ba53:	jecxz  0x40ba71
  40ba55:	pop    edx
  40ba56:	push   esp
  40ba57:	fst    st(4)
  40ba59:	push   es
  40ba5a:	mov    ecx,0x82a79cf1
  40ba5f:	out    0x84,eax
  40ba61:	jmp    0xb07e2336
  40ba66:	mov    ch,cl
  40ba68:	sub    bl,BYTE PTR [ecx]
  40ba6a:	jp     0x40ba4a
  40ba6c:	or     dl,BYTE PTR [ebx]
  40ba6e:	jbe    0x40ba6d
  40ba70:	dec    eax
  40ba71:	mul    DWORD PTR [eax-0x4]
  40ba74:	inc    ecx
  40ba75:	std    
  40ba76:	mov    ds:0x5f250c19,eax
  40ba7b:	scas   eax,DWORD PTR es:[edi]
  40ba7c:	sbb    edi,DWORD PTR [ebx]
  40ba7e:	ret    
  40ba7f:	jmp    0x8ae92d75
  40ba84:	add    al,0xec
  40ba86:	sbb    dl,ah
  40ba88:	mov    esi,0x30a6a203
  40ba8d:	sbb    al,0x8
  40ba8f:	bnd ret 
  40ba91:	fcmovb st,st(6)
  40ba93:	cdq    
  40ba94:	js     0x40ba42
  40ba96:	adc    ch,BYTE PTR [edi+0x1c07b2c3]
  40ba9c:	pushf  
  40ba9d:	out    0x38,al
  40ba9f:	push   ss
  40baa0:	iret   
  40baa1:	mov    DWORD PTR [edx],0x7bb2a51b
  40baa7:	fnstcw WORD PTR [ebp-0x33]
  40baaa:	test   eax,0x4d1e7854
  40baaf:	cmp    eax,0x282adec8
  40bab4:	push   0xe052ccc
  40bab9:	add    eax,0x4d810d6c
  40babe:	lock jge 0x40bb2f
  40bac1:	ins    DWORD PTR es:[edi],dx
  40bac2:	xor    BYTE PTR [ebp+0x64],ch
  40bac5:	repnz call FWORD PTR [esi]
  40bac8:	mov    esi,0xa181e127
  40bacd:	es mov ch,0xa8
  40bad0:	mov    edx,0x2051deb
  40bad5:	out    0x4d,eax
  40bad7:	aad    0xf6
  40bad9:	mov    dl,0xc2
  40badb:	rol    al,0x1b
  40bade:	jp     0x40baeb
  40bae0:	adc    BYTE PTR [ebp+0x7f307dda],dl
  40bae6:	dec    edx
  40bae7:	cld    
  40bae8:	inc    eax
  40bae9:	jle    0x40bb68
  40baeb:	int    0xd5
  40baed:	std    
  40baee:	sbb    DWORD PTR [edx-0x31],esp
  40baf1:	xchg   dl,cl
  40baf3:	loop   0x40bb50
  40baf5:	mov    esi,0x48fc5475
  40bafa:	imul   eax,DWORD PTR [edx],0xffffffbb
  40bafd:	(bad)  
  40bafe:	mov    bl,0xa5
  40bb00:	pushf  
  40bb01:	pop    eax
  40bb02:	pop    ss
  40bb03:	sti    
  40bb04:	popf   
  40bb05:	xchg   DWORD PTR [ebx-0x17],edx
  40bb08:	xlat   BYTE PTR ds:[ebx]
  40bb09:	cmp    al,BYTE PTR [edi+edi*1-0x60bc3ba9]
  40bb10:	fld    st(4)
  40bb12:	jecxz  0x40bb59
  40bb14:	imul   edi,DWORD PTR [ecx+0x9],0x14876e6f
  40bb1b:	mov    esi,0xce0bac6b
  40bb20:	push   edx
  40bb21:	(bad)  
  40bb22:	je     0x40bad9
  40bb24:	retf   
  40bb25:	pop    edi
  40bb26:	ds loopne 0x40bb4f
  40bb29:	or     esp,edx
  40bb2b:	or     ah,BYTE PTR [edi+0x6f]
  40bb2e:	les    ebp,FWORD PTR [ebp-0x1ed9f095]
  40bb34:	add    eax,0xb04e4eab
  40bb39:	xor    DWORD PTR [ebx+0x5e059c9c],eax
  40bb3f:	mov    esi,0x2457a7a0
  40bb44:	test   al,0x36
  40bb46:	xor    al,0x4a
  40bb48:	jle    0x40bbc9
  40bb4a:	inc    ebp
  40bb4b:	arpl   WORD PTR ds:0xae2f8ed7,dx
  40bb51:	call   0x177f424
  40bb56:	ret    
  40bb57:	fdivr  QWORD PTR [ebp+eiz*2-0x4c]
  40bb5b:	jne    0x40bb14
  40bb5d:	xchg   esp,eax
  40bb5e:	aam    0xa7
  40bb60:	jecxz  0x40bb02
  40bb62:	in     eax,dx
  40bb63:	fcomp  QWORD PTR ds:0x9268d073
  40bb69:	dec    esi
  40bb6a:	inc    ebx
  40bb6b:	mov    ah,0x71
  40bb6d:	adc    bh,0xf0
  40bb70:	call   0xaca6:0x99995be9
  40bb77:	stos   DWORD PTR es:[edi],eax
  40bb78:	mov    eax,0xbc74dbc8
  40bb7d:	pop    ebp
  40bb7e:	test   eax,0xe91b7a40
  40bb83:	outs   dx,DWORD PTR ds:[esi]
  40bb84:	inc    esp
  40bb85:	push   ebp
  40bb86:	jb     0x40bbe2
  40bb88:	adc    eax,0x7d57e957
  40bb8d:	scas   eax,DWORD PTR es:[edi]
  40bb8e:	and    edx,eax
  40bb90:	aam    0x6e
  40bb92:	push   esi
  40bb93:	mov    ah,0xa4
  40bb95:	xchg   ecx,eax
  40bb96:	sub    ebp,DWORD PTR [edi-0x3e56fd7e]
  40bb9c:	pop    esi
  40bb9d:	and    BYTE PTR [edi],0x55
  40bba0:	mov    fs,WORD PTR [edi+0x71e907d5]
  40bba6:	jge    0x40bbc8
  40bba8:	xchg   esp,eax
  40bba9:	imul   DWORD PTR [edi]
  40bbab:	push   esi
  40bbac:	xchg   edi,eax
  40bbad:	loopne 0x40bc18
  40bbaf:	and    al,0x2f
  40bbb1:	lods   eax,DWORD PTR ds:[esi]
  40bbb2:	test   DWORD PTR [ecx+0x27],ebx
  40bbb5:	push   ds
  40bbb6:	xchg   esi,eax
  40bbb7:	ins    DWORD PTR es:[edi],dx
  40bbb8:	aaa    
  40bbb9:	cmp    ah,BYTE PTR [eax]
  40bbbb:	mov    edx,0xe3bad1a9
  40bbc0:	js     0x40bba7
  40bbc2:	(bad)  
  40bbc3:	xchg   esi,eax
  40bbc4:	cmp    al,0x86
  40bbc6:	mov    ds:0xe89bc81e,al
  40bbcb:	aam    0x17
  40bbcd:	cdq    
  40bbce:	test   DWORD PTR [ebp-0x5b12e0cd],0x72234ff6
  40bbd8:	mov    ch,0x53
  40bbda:	(bad)  
  40bbdb:	test   DWORD PTR [edx-0x80],esi
  40bbde:	ins    DWORD PTR es:[edi],dx
  40bbdf:	in     al,0xf1
  40bbe1:	adc    al,0x48
  40bbe3:	lods   al,BYTE PTR ds:[esi]
  40bbe4:	inc    ecx
  40bbe5:	or     esp,DWORD PTR [ebx]
  40bbe7:	mov    ebp,0xfafed583
  40bbec:	cmp    esi,ecx
  40bbee:	sbb    al,0xef
  40bbf0:	mov    edx,0x125899c
  40bbf5:	mov    cl,dh
  40bbf7:	loope  0x40bc1e
  40bbf9:	push   0x7530f579
  40bbfe:	nop
  40bbff:	jle    0x40bc80
  40bc01:	xchg   ebp,eax
  40bc02:	jo     0x40bbdc
  40bc04:	inc    esi
  40bc05:	xor    eax,0x5300640d
  40bc0a:	push   cs
  40bc0b:	retf   
  40bc0c:	sti    
  40bc0d:	mov    cs,ebx
  40bc0f:	repnz pop edx
  40bc11:	xchg   ebx,eax
  40bc12:	and    BYTE PTR [ecx-0x2],0x41
  40bc16:	or     al,0x53
  40bc18:	test   cl,bh
  40bc1a:	lods   al,BYTE PTR ds:[esi]
  40bc1b:	test   eax,0x70848750
  40bc20:	jp     0x40bbb7
  40bc22:	test   eax,0x3522fba3
  40bc27:	add    cl,BYTE PTR [edx]
  40bc29:	mov    ah,0x37
  40bc2b:	rdtsc  
  40bc2d:	push   ecx
  40bc2e:	loope  0x40bbd7
  40bc30:	cmp    DWORD PTR [edx],eax
  40bc32:	lods   eax,DWORD PTR ds:[esi]
  40bc33:	or     edx,eax
  40bc35:	xchg   ecx,eax
  40bc36:	xor    al,0x1d
  40bc38:	xchg   edx,eax
  40bc39:	adc    BYTE PTR [eax],0x1c
  40bc3c:	sbb    DWORD PTR [eax-0x5d],ecx
  40bc3f:	int3   
  40bc40:	aam    0x35
  40bc42:	jns    0x40bc2e
  40bc44:	mov    cl,0x9b
  40bc46:	jno    0x40bbe2
  40bc48:	cmp    esi,ebp
  40bc4a:	xor    DWORD PTR [esi+0x7],edi
  40bc4d:	rcr    DWORD PTR [esi+0x2f3cfcf5],cl
  40bc53:	jno    0x40bbf7
  40bc55:	enter  0x2783,0x8b
  40bc59:	or     ebx,DWORD PTR [eax+ebp*1-0x4ba2de7c]
  40bc60:	sub    BYTE PTR [esi-0x1965fb5],ah
  40bc66:	test   BYTE PTR [ebx],0xb4
  40bc69:	(bad)  
  40bc6a:	ss iret 
  40bc6c:	or     DWORD PTR [edi+0x489ee34f],edi
  40bc72:	in     al,dx
  40bc73:	mov    ebx,0xa0dd9935
  40bc78:	ret    0xb5b6
  40bc7b:	loope  0x40bc49
  40bc7d:	aam    0x3c
  40bc7f:	inc    edx
  40bc80:	popa   
  40bc81:	xchg   ecx,eax
  40bc82:	sub    esi,ebp
  40bc84:	or     eax,0x60f7557c
  40bc89:	hlt    
  40bc8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc8b:	rcl    ch,0x40
  40bc8e:	push   eax
  40bc8f:	and    DWORD PTR [esi-0x52],0xf44f84fc
  40bc96:	jmp    0x40bc24
  40bc98:	(bad)  
  40bc99:	sub    BYTE PTR [ebx],al
  40bc9b:	loope  0x40bcce
  40bc9d:	push   0xe8ba3462
  40bca2:	cmc    
  40bca3:	or     BYTE PTR [ebx],0x3a
  40bca6:	lea    esi,[ecx-0x206a9c15]
  40bcac:	pop    ebp
  40bcad:	cld    
  40bcae:	mov    dh,0x70
  40bcb0:	dec    ebx
  40bcb1:	popf   
  40bcb2:	mov    ebx,0x1b470ba2
  40bcb7:	fbld   TBYTE PTR [eax-0xb622ade]
  40bcbd:	mov    ebp,0xdfdac19d
  40bcc2:	push   ecx
  40bcc3:	cdq    
  40bcc4:	ins    DWORD PTR es:[edi],dx
  40bcc5:	jb     0x40bcd8
  40bcc7:	mov    ebp,0xe5e2a64
  40bccc:	fidivr WORD PTR [edi]
  40bcce:	pusha  
  40bccf:	dec    esp
  40bcd1:	(bad)  
  40bcd2:	cmp    DWORD PTR [edi-0x47],ebx
  40bcd5:	xchg   esi,eax
  40bcd6:	lahf   
  40bcd7:	mov    edi,0x53ac408e
  40bcdc:	call   0xd9b7:0x786f771d
  40bce3:	jmp    0x288a:0xe1df00d1
  40bcea:	out    0xdd,al
  40bcec:	out    dx,eax
  40bced:	data16 ffree st(5)
  40bcf0:	cmc    
  40bcf1:	mov    cl,0x65
  40bcf3:	loopne 0x40bcb5
  40bcf5:	and    DWORD PTR [esi+0x31],esi
  40bcf8:	mov    edi,0x13769841
  40bcfd:	inc    esi
  40bcfe:	adc    eax,0x5f9ffb5d
  40bd03:	cdq    
  40bd04:	js     0x40bd69
  40bd06:	(bad)  
  40bd08:	cmp    eax,0xc48391a0
  40bd0d:	fs push edi
  40bd0f:	adc    BYTE PTR [ebx+0x5],cl
  40bd12:	js     0x40bc95
  40bd14:	inc    eax
  40bd15:	imul   esp,DWORD PTR [edx],0x73
  40bd18:	adc    DWORD PTR [edi-0x35c09b29],0xf4f2b1d1
  40bd22:	or     eax,0xaa5c25f4
  40bd27:	xchg   bh,bh
  40bd29:	or     DWORD PTR [ebx-0x4],ebp
  40bd2c:	rcl    BYTE PTR [ebx-0x64],cl
  40bd2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd30:	mov    ebp,DWORD PTR [ecx+0x60]
  40bd33:	gs pusha 
  40bd35:	call   0xa150:0x202787fa
  40bd3c:	sub    al,0x4c
  40bd3e:	repnz xor BYTE PTR [esp+eax*4+0x2bb857d1],ch
  40bd46:	sbb    ah,0xdc
  40bd49:	mov    edx,0x12d0ee18
  40bd4e:	mov    ecx,0x7eee389e
  40bd53:	mov    al,ds:0xa52c637e
  40bd58:	and    eax,0x1decce12
  40bd5d:	adc    ch,BYTE PTR [edi-0x5ccca3b6]
  40bd63:	jo     0x40bdd1
  40bd65:	hlt    
  40bd66:	aas    
  40bd67:	mov    al,ds:0xd4e2137b
  40bd6c:	sub    eax,0x4f244178
  40bd71:	int3   
  40bd72:	xchg   ebx,eax
  40bd73:	push   esi
  40bd74:	retf   
  40bd75:	or     al,0xd9
  40bd77:	fsubr  st,st(3)
  40bd79:	outs   dx,BYTE PTR ds:[esi]
  40bd7a:	repz hlt 
  40bd7c:	stos   BYTE PTR es:[edi],al
  40bd7d:	push   ebx
  40bd7e:	and    DWORD PTR [ebp+0x69],0xffffffbd
  40bd82:	cmc    
  40bd83:	das    
  40bd84:	jmp    0xd5e8:0x2182d1f1
  40bd8b:	xchg   edx,eax
  40bd8c:	call   DWORD PTR [edi]
  40bd8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd8f:	stos   BYTE PTR es:[edi],al
  40bd90:	fwait
  40bd91:	mov    ah,0x1d
  40bd93:	dec    esp
  40bd94:	scas   al,BYTE PTR es:[edi]
  40bd95:	stos   DWORD PTR es:[edi],eax
  40bd96:	inc    ecx
  40bd97:	xor    ebx,DWORD PTR [edi*2-0x5dbddb54]
  40bd9e:	cli    
  40bd9f:	imul   edx,DWORD PTR ss:[edx+0x5e],0xb7af63e2
  40bda7:	shr    ch,0x8f
  40bdaa:	lds    edi,FWORD PTR [ebx+0x52]
  40bdad:	in     al,dx
  40bdae:	fstp   QWORD PTR [esi]
  40bdb0:	lea    esi,[esi+0x11]
  40bdb3:	push   es
  40bdb4:	inc    esi
  40bdb5:	jecxz  0x40be05
  40bdb7:	loope  0x40bd73
  40bdb9:	pop    ecx
  40bdba:	test   BYTE PTR ds:0x1109c094,0x91
  40bdc1:	outs   dx,BYTE PTR ds:[esi]
  40bdc2:	push   ebx
  40bdc3:	add    edx,edi
  40bdc5:	and    ebp,ebx
  40bdc7:	aad    0x3f
  40bdc9:	(bad)
  40bdcd:	cmp    BYTE PTR [esi-0x678654b5],cl
  40bdd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdd4:	outs   dx,DWORD PTR ds:[esi]
  40bdd5:	fwait
  40bdd6:	jmp    0xd92f610
  40bddb:	popf   
  40bddc:	cwde   
  40bddd:	std    
  40bdde:	inc    ebp
  40bddf:	xchg   esi,eax
  40bde0:	or     al,0x5
  40bde2:	cli    
  40bde3:	inc    ebp
  40bde4:	fiadd  DWORD PTR [ebx]
  40bde6:	adc    dh,0x2f
  40bde9:	nop
  40bdea:	test   eax,0x8efa1887
  40bdef:	mov    edi,0x3bdf9ef2
  40bdf4:	add    ch,BYTE PTR [ebx]
  40bdf6:	stos   BYTE PTR es:[edi],al
  40bdf7:	cmp    bh,BYTE PTR [ecx]
  40bdf9:	test   BYTE PTR [eax+0x7b7fb29f],ch
  40bdff:	pop    esi
  40be00:	les    esi,FWORD PTR [ebx+0xa]
  40be03:	test   eax,0xfed3bea9
  40be08:	dec    ebp
  40be09:	in     al,dx
  40be0a:	add    ebx,edi
  40be0c:	sbb    eax,0xc7357cc6
  40be11:	xchg   ebx,eax
  40be12:	fisubr WORD PTR [edx+0x51]
  40be15:	pop    edx
  40be16:	out    dx,eax
  40be17:	outs   dx,BYTE PTR ds:[esi]
  40be18:	jnp    0x40be7a
  40be1a:	xchg   edi,eax
  40be1b:	push   ebx
  40be1c:	je     0x40bda4
  40be1e:	cmp    al,0xeb
  40be20:	add    eax,0xf83ba827
  40be25:	leave  
  40be26:	jb     0x40be30
  40be28:	inc    eax
  40be29:	outs   dx,BYTE PTR ds:[esi]
  40be2a:	iret   
  40be2b:	into   
  40be2c:	(bad)
  40be2f:	push   ebx
  40be30:	lahf   
  40be31:	dec    eax
  40be32:	rcr    ch,0x6a
  40be35:	daa    
  40be36:	sub    dh,BYTE PTR [esi+0x3056f13]
  40be3c:	push   edx
  40be3d:	popf   
  40be3e:	dec    esp
  40be3f:	adc    al,0x9d
  40be41:	fnsave [eax-0x4]
  40be44:	aas    
  40be45:	test   DWORD PTR [esi-0x7f],ecx
  40be48:	fs jno 0x40be48
  40be4b:	mov    eax,0x2bb24a4f
  40be50:	push   0x699f2ea1
  40be55:	repz shl BYTE PTR [ebx],cl
  40be58:	add    ah,BYTE PTR [ecx]
  40be5a:	push   ds
  40be5b:	cmp    BYTE PTR [ebp+0x2a51dba5],dl
  40be61:	mov    eax,0xddb02aab
  40be66:	pop    ds
  40be67:	jne    0x40be82
  40be69:	sar    bh,0xe2
  40be6c:	push   cs
  40be6d:	sub    eax,0x9557ea08
  40be72:	jne    0x40be74
  40be74:	adc    dl,BYTE PTR [edx]
  40be76:	jg     0x40be99
  40be78:	or     eax,0x8759751b
  40be7d:	daa    
  40be7e:	jg     0x40beeb
  40be80:	lock test BYTE PTR [ebp-0x25890f98],0x9
  40be88:	cmc    
  40be89:	outs   dx,DWORD PTR ds:[esi]
  40be8a:	dec    edx
  40be8b:	sbb    BYTE PTR [edx],dl
  40be8d:	mov    cl,0x4d
  40be8f:	shl    DWORD PTR [edx],cl
  40be91:	loope  0x40be61
  40be93:	lahf   
  40be94:	adc    al,0x8b
  40be96:	jle    0x40be31
  40be98:	push   ss
  40be99:	scas   eax,DWORD PTR es:[edi]
  40be9a:	sbb    al,0x81
  40be9c:	popa   
  40be9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be9e:	out    dx,eax
  40be9f:	xchg   esp,eax
  40bea0:	xor    al,0xdf
  40bea2:	jp     0x40be7e
  40bea4:	pop    ds
  40bea5:	xchg   DWORD PTR [ebp-0x3216b4e2],eax
  40beab:	mov    DWORD PTR [ebx-0x7b],esp
  40beae:	add    edx,DWORD PTR [esi-0x122e9580]
  40beb4:	add    ah,BYTE PTR [edx+0x6ebb93f2]
  40beba:	(bad)
  40bebe:	sub    bl,dh
  40bec0:	sub    eax,0x1ce24dd2
  40bec5:	add    eax,DWORD PTR [eax]
  40bec7:	mov    ch,0xa3
  40bec9:	mov    ch,0xd2
  40becb:	mov    ebx,DWORD PTR [edi-0x3a]
  40bece:	add    cl,dh
  40bed0:	out    dx,eax
  40bed1:	sub    dl,ah
  40bed3:	ja     0x40bef9
  40bed5:	pop    ss
  40bed6:	nop
  40bed7:	and    ebp,DWORD PTR [esi+0x1c8443d3]
  40bedd:	and    esi,DWORD PTR [esi+0x42]
  40bee0:	jmp    0x40bf41
  40bee2:	pop    ebx
  40bee3:	xchg   BYTE PTR [esi],ah
  40bee5:	(bad)
  40bee8:	dec    edx
  40bee9:	(bad)  
  40beea:	inc    DWORD PTR [eax+ebp*4+0x5b469954]
  40bef1:	sub    eax,0x9f04bac6
  40bef6:	arpl   WORD PTR [edx],si
  40bef8:	ret    
  40bef9:	ins    BYTE PTR es:[edi],dx
  40befa:	scas   al,BYTE PTR es:[edi]
  40befb:	outs   dx,DWORD PTR ds:[esi]
  40befc:	mov    cl,0x94
  40befe:	lods   eax,DWORD PTR ds:[esi]
  40beff:	outs   dx,DWORD PTR ds:[esi]
  40bf00:	shl    BYTE PTR [edi],1
  40bf02:	in     eax,dx
  40bf03:	sbb    eax,DWORD PTR [ebx+0x43e641ac]
  40bf09:	ja     0x40bf6f
  40bf0b:	gs test ecx,eax
  40bf0e:	aaa    
  40bf0f:	cmp    eax,0xbf42686a
  40bf14:	jmp    0xecbc:0xb1834f8d
  40bf1b:	inc    ecx
  40bf1c:	or     BYTE PTR [eax-0x17],0x25
  40bf20:	in     eax,0x9
  40bf22:	jge    0x40bf09
  40bf24:	inc    ebp
  40bf25:	inc    ebx
  40bf26:	scas   eax,DWORD PTR es:[edi]
  40bf27:	cwde   
  40bf28:	std    
  40bf29:	(bad)  
  40bf2a:	pop    ecx
  40bf2b:	jnp    0x40bf33
  40bf2d:	(bad)  
  40bf2e:	jp     0x40befa
  40bf30:	idiv   DWORD PTR [ecx+0x60]
  40bf33:	pop    ebx
  40bf34:	sub    DWORD PTR [ebp-0x4d],edx
  40bf37:	adc    bh,bh
  40bf39:	ja     0x40bf67
  40bf3b:	sbb    eax,0xaa260818
  40bf40:	cmp    DWORD PTR ds:0xa0858710,eax
  40bf46:	mov    al,ds:0x86442a71
  40bf4b:	mov    esp,?
  40bf4d:	inc    esi
  40bf4e:	and    al,ah
  40bf50:	mov    esi,0x9a564c3a
  40bf55:	lods   al,BYTE PTR ds:[esi]
  40bf56:	cmp    al,0x6f
  40bf58:	call   0xe7f4884d
  40bf5d:	jge    0x40bf29
  40bf5f:	js     0xdd9d2c2
  40bf65:	pop    ebx
  40bf66:	das    
  40bf67:	gs push ebx
  40bf69:	nop
  40bf6a:	aad    0xaa
  40bf6c:	jmp    0x40beee
  40bf6e:	pop    esi
  40bf6f:	test   DWORD PTR ss:[esi+0x53],edi
  40bf73:	push   eax
  40bf74:	test   DWORD PTR [esi-0x64],0xdd3f9ff0
  40bf7b:	push   edi
  40bf7c:	iret   
  40bf7d:	aas    
  40bf7e:	push   ecx
  40bf7f:	mov    eax,0x4ef18cf
  40bf84:	test   DWORD PTR [eax-0x681c7373],ecx
  40bf8a:	adc    eax,0x1a25206e
  40bf8f:	sub    eax,0xcc170249
  40bf94:	xor    BYTE PTR [ecx-0x5a],ah
  40bf97:	rol    DWORD PTR [edi+0x44730ec9],1
  40bf9d:	mov    ebp,0x8f90d65c
  40bfa2:	push   ebp
  40bfa3:	push   edx
  40bfa4:	sbb    al,0xc
  40bfa6:	out    dx,eax
  40bfa7:	pop    edx
  40bfa8:	mov    al,0xd3
  40bfaa:	mov    esp,0x43736db2
  40bfaf:	dec    edi
  40bfb0:	lods   eax,DWORD PTR ds:[esi]
  40bfb1:	sbb    BYTE PTR [edx-0x49e3efc7],bl
  40bfb7:	fisttp QWORD PTR [eax]
  40bfb9:	jmp    0x915e3d92
  40bfbe:	add    eax,0x5077d779
  40bfc3:	ror    DWORD PTR [ebp*4-0x117538df],0xe7
  40bfcb:	iret   
  40bfcc:	sub    ah,BYTE PTR [edx]
  40bfce:	and    BYTE PTR [esi-0x2f],ah
  40bfd1:	pop    esp
  40bfd2:	punpcklwd mm0,DWORD PTR [edi-0x5ca13b09]
  40bfd9:	test   dl,bl
  40bfdb:	ins    DWORD PTR es:[edi],dx
  40bfdc:	inc    esp
  40bfdd:	dec    ebx
  40bfde:	inc    ebp
  40bfdf:	loope  0x40bf96
  40bfe1:	mov    ebx,0x6b8a089d
  40bfe6:	imul   esi,DWORD PTR [ecx+ecx*8+0x2e],0xe2d8d092
  40bfee:	fisubr WORD PTR [esi-0x7d826848]
  40bff4:	jge    0x40bffa
  40bff6:	adc    dl,al
  40bff8:	sub    BYTE PTR [edx-0x6c36cb1d],al
  40bffe:	out    0x38,al
  40c000:	gs push eax
  40c002:	popf   
  40c003:	pop    edx
  40c004:	das    
  40c005:	cdq    
  40c006:	xor    al,0xfb
  40c008:	(bad)  
  40c009:	lahf   
  40c00a:	das    
  40c00b:	in     eax,0x91
  40c00d:	pop    eax
  40c00e:	xor    BYTE PTR [edi-0x339184f6],al
  40c014:	mov    ebx,0x9d06f0cb
  40c019:	mov    dl,0x68
  40c01b:	into   
  40c01c:	(bad)  [esi-0x40be77d]
  40c022:	mov    dh,0x2
  40c024:	cdq    
  40c025:	mov    ds:0xe5122dd9,al
  40c02a:	inc    BYTE PTR [ecx]
  40c02c:	nop
  40c02d:	neg    BYTE PTR [eax-0x64]
  40c030:	sbb    eax,0xf47b6734
  40c035:	aad    0xd1
  40c037:	and    cl,BYTE PTR [ebx-0x4]
  40c03a:	seta   dh
  40c03d:	push   ebx
  40c03e:	lahf   
  40c03f:	ret    0x178c
  40c042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c043:	mov    dl,0xb
  40c045:	cmp    eax,DWORD PTR [esi-0x4c46c4ac]
  40c04b:	aad    0x12
  40c04d:	mov    esp,0x84220731
  40c052:	lahf   
  40c053:	imul   edi,DWORD PTR [eax],0xfb60a0ad
  40c059:	mov    cl,0x68
  40c05b:	aad    0x9b
  40c05d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c05e:	repz inc ecx
  40c060:	inc    edi
  40c061:	pop    ebx
  40c062:	cmp    BYTE PTR es:[ecx+0x3e],ah
  40c066:	or     eax,0xa199e950
  40c06b:	out    dx,eax
  40c06c:	xchg   esp,eax
  40c06d:	ja     0x40c040
  40c06f:	nop
  40c070:	icebp  
  40c071:	xor    eax,0xefd97a3a
  40c076:	and    bl,al
  40c078:	rol    esi,cl
  40c07a:	dec    esp
  40c07b:	pusha  
  40c07c:	dec    ebp
  40c07d:	sbb    ecx,DWORD PTR [ebx-0x21]
  40c080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c081:	fldcw  WORD PTR [edi+0x1e]
  40c084:	jge    0x40c0b3
  40c086:	sub    DWORD PTR [edi],esi
  40c088:	jecxz  0x40c03b
  40c08a:	xor    ebp,DWORD PTR [edi]
  40c08c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40c08e:	sbb    ebp,DWORD PTR [edx+0x692540a8]
  40c094:	dec    esp
  40c095:	and    esi,DWORD PTR [ebx]
  40c097:	lea    eax,[esi+0x75]
  40c09a:	lods   al,BYTE PTR ds:[esi]
  40c09b:	enter  0xb797,0x7e
  40c09f:	mov    ds:0x8f80fd57,eax
  40c0a4:	or     esp,ebx
  40c0a6:	push   esp
  40c0a7:	mov    al,cl
  40c0a9:	adc    eax,0x96ce21a6
  40c0ae:	ret    0xfd43
  40c0b1:	ds stos BYTE PTR es:[edi],al
  40c0b3:	lds    ebp,FWORD PTR [ecx+0x25]
  40c0b6:	inc    ecx
  40c0b7:	mov    esp,0xcdfc4af7
  40c0bc:	ins    DWORD PTR es:[edi],dx
  40c0bd:	adc    BYTE PTR [edx-0xf],al
  40c0c0:	xchg   ebx,eax
  40c0c1:	pop    es
  40c0c2:	jno    0x40c085
  40c0c4:	cwde   
  40c0c5:	fldlg2 
  40c0c7:	mov    ebx,0xcc5b3cf2
  40c0cc:	mov    al,ds:0xb565147c
  40c0d1:	repz lds edx,FWORD PTR [eax-0x22]
  40c0d5:	fdiv   DWORD PTR [ebx-0x67dc44ad]
  40c0db:	aad    0x9d
  40c0dd:	and    edi,DWORD PTR [ebx+0x3]
  40c0e0:	xor    ebp,ebp
  40c0e2:	or     ebp,esi
  40c0e4:	add    al,BYTE PTR [ebx]
  40c0e6:	or     al,0x4e
  40c0e8:	and    dh,BYTE PTR [ebp+0x16b248ed]
  40c0ee:	gs cmp ebx,ebx
  40c0f1:	out    0xe2,eax
  40c0f3:	stos   DWORD PTR es:[edi],eax
  40c0f4:	je     0x40c16c
  40c0f6:	in     al,dx
  40c0f7:	sbb    esi,0x97ba0cc8
  40c0fd:	inc    edx
  40c0fe:	pop    ecx
  40c0ff:	aad    0x65
  40c101:	loop   0x40c106
  40c103:	rol    BYTE PTR [edi],0x25
  40c106:	cmp    DWORD PTR [ebp-0xf],ebx
  40c109:	out    0xe2,al
  40c10b:	test   al,0x1
  40c10d:	jo     0x40c18e
  40c10f:	pop    eax
  40c110:	cmc    
  40c111:	es test ecx,0x43791a52
  40c118:	cmp    bh,BYTE PTR [ebp-0x6dd3ff72]
  40c11e:	mov    WORD PTR [edi+ebp*2],ds
  40c121:	jmp    0x79eba562
  40c126:	mov    esp,0xb626e40b
  40c12b:	pop    esi
  40c12c:	sbb    BYTE PTR ds:0xc6d4b2d8,0xa9
  40c133:	(bad)  
  40c134:	xor    eax,0x36efacce
  40c139:	in     eax,0x78
  40c13b:	ds scas eax,DWORD PTR es:[edi]
  40c13d:	add    BYTE PTR [ecx+0x40],dl
  40c140:	pusha  
  40c141:	(bad)  
  40c142:	inc    ecx
  40c143:	inc    edi
  40c144:	stos   DWORD PTR es:[edi],eax
  40c145:	sbb    ch,0x8c
  40c148:	mov    esp,0x7dfa731b
  40c14d:	ja     0x40c132
  40c14f:	xchg   ebp,eax
  40c150:	inc    edi
  40c151:	stos   BYTE PTR es:[edi],al
  40c152:	mov    bl,0xf0
  40c154:	add    ch,al
  40c156:	sub    al,0xb4
  40c158:	pop    edx
  40c159:	xor    eax,0xaa1609e1
  40c15e:	adc    esi,DWORD PTR [ebx+eax*4+0x2a]
  40c162:	arpl   WORD PTR [edi],bp
  40c164:	or     al,0xf
  40c166:	ret    
  40c167:	mov    ds:0x1279a3bb,eax
  40c16c:	jb     0x40c158
  40c16e:	jo     0x40c1ec
  40c170:	aas    
  40c171:	sbb    dl,0xd5
  40c174:	jne    0x40c1b4
  40c176:	inc    eax
  40c177:	cmp    eax,0x7e339b20
  40c17c:	fisubr DWORD PTR [ebp-0x36]
  40c17f:	enter  0xad02,0x55
  40c183:	int    0x2f
  40c185:	mov    al,BYTE PTR [eax]
  40c187:	jmp    0x4683ac95
  40c18c:	mov    dl,0x14
  40c18e:	pop    es
  40c18f:	add    al,0xec
  40c191:	jbe    0x40c14c
  40c193:	mov    dh,dl
  40c195:	icebp  
  40c196:	call   0x7d2238e4
  40c19b:	mov    esi,0x4e324d87
  40c1a0:	les    ebp,FWORD PTR [ecx+0x1df7a3eb]
  40c1a6:	mov    edi,0xa6ef6490
  40c1ab:	cs xchg edx,eax
  40c1ad:	aam    0x95
  40c1af:	(bad)
  40c1b3:	aas    
  40c1b4:	mov    edx,0x94998acb
  40c1b9:	jmp    0x860c46dd
  40c1be:	mov    cl,0xc9
  40c1c0:	mov    ah,cl
  40c1c2:	sub    al,0x2d
  40c1c4:	mov    ah,0xb
  40c1c6:	mov    bh,BYTE PTR [eax+0x6d0eab69]
  40c1cc:	dec    eax
  40c1cd:	mov    edx,0x7a8d7ff0
  40c1d2:	add    BYTE PTR [esi-0x1a],dh
  40c1d5:	cmp    eax,0x5986bb6b
  40c1da:	stc    
  40c1db:	imul   ebp
  40c1dd:	les    ebp,FWORD PTR [ebx+ebp*2+0x1cc5cb3d]
  40c1e4:	xchg   edx,eax
  40c1e5:	in     al,dx
  40c1e6:	retf   0x774f
  40c1e9:	push   ebx
  40c1ea:	sbb    BYTE PTR [ecx],0x8
  40c1ed:	lods   al,BYTE PTR ds:[esi]
  40c1ee:	test   eax,0xcd4d3b34
  40c1f3:	shl    DWORD PTR ds:0x21b5918,0xc9
  40c1fa:	sbb    eax,0x51a2aa91
  40c1ff:	push   ebx
  40c200:	inc    ebx
  40c201:	ret    
  40c202:	ret    0x69a2
  40c205:	ror    BYTE PTR [edx],cl
  40c207:	loop   0x40c1a7
  40c209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c20a:	dec    esp
  40c20b:	push   ecx
  40c20c:	jl     0x40c1f9
  40c20e:	or     ebp,0x41
  40c211:	clc    
  40c212:	or     al,BYTE PTR [ebx]
  40c214:	and    edi,DWORD PTR [ebx+edi*2+0x49b82e22]
  40c21b:	inc    edx
  40c21c:	xor    al,0xc5
  40c21e:	stos   BYTE PTR es:[edi],al
  40c21f:	call   0xa129:0xae2bc91c
  40c226:	pop    edi
  40c227:	gs ins DWORD PTR es:[edi],dx
  40c229:	mov    edx,0xc1883b64
  40c22e:	dec    esp
  40c22f:	cmp    eax,0xa1dd9382
  40c234:	xor    al,0x4b
  40c236:	mov    ch,0x9f
  40c238:	sub    DWORD PTR [ebx],ecx
  40c23a:	mov    cl,0xf8
  40c23c:	jle    0x40c1f2
  40c23e:	das    
  40c23f:	sub    edi,DWORD PTR [esi+0x21]
  40c242:	jb     0x40c1c9
  40c244:	pop    edi
  40c245:	(bad)  [ebx]
  40c247:	and    dl,BYTE PTR [edi+0x7ebce793]
  40c24d:	mov    WORD PTR [ebp-0x5ad8cc3f],ds
  40c253:	sbb    eax,0x28c18de5
  40c258:	outs   dx,BYTE PTR ds:[esi]
  40c259:	nop
  40c25a:	outs   dx,DWORD PTR ds:[esi]
  40c25b:	or     dl,BYTE PTR [ecx]
  40c25d:	or     esp,DWORD PTR [ecx]
  40c25f:	clc    
  40c260:	mov    ecx,0xc3bec5d0
  40c265:	test   BYTE PTR [ebx],dl
  40c267:	enter  0x706,0xea
  40c26b:	adc    BYTE PTR ds:0xf488748a,dl
  40c271:	popa   
  40c272:	push   edi
  40c273:	cmp    ecx,esi
  40c275:	fsubr  QWORD PTR [edx+0x62]
  40c278:	bswap  ebp
  40c27a:	imul   edx,esi,0x5a
  40c27d:	cmp    BYTE PTR [edx-0x43],cl
  40c280:	dec    esi
  40c281:	sub    BYTE PTR [edx+edi*1+0x6a],al
  40c285:	jecxz  0x40c2c2
  40c287:	aaa    
  40c288:	dec    ebp
  40c289:	push   ds
  40c28a:	add    DWORD PTR [ebp-0x510684d4],edi
  40c290:	imul   edx,DWORD PTR [ebx+0x73],0xffffffc8
  40c294:	add    bl,BYTE PTR [esi+0x58]
  40c297:	cmp    bh,ch
  40c299:	sahf   
  40c29a:	jae    0x40c2a1
  40c29c:	jmp    0xe83d3020
  40c2a1:	mov    ah,0xca
  40c2a3:	xor    dh,dl
  40c2a5:	test   al,0xbc
  40c2a7:	cli    
  40c2a8:	daa    
  40c2a9:	jnp    0x40c2a3
  40c2ab:	push   0x4268b627
  40c2b0:	ja     0x40c2a2
  40c2b2:	enter  0x7573,0x25
  40c2b6:	jns    0x40c289
  40c2b8:	jno    0x40c264
  40c2ba:	dec    ecx
  40c2bb:	hlt    
  40c2bc:	jmp    0x9a0443b4
  40c2c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2c2:	mov    DWORD PTR [ecx+0x3b],edi
  40c2c5:	jbe    0x40c2f9
  40c2c7:	mov    cl,ah
  40c2c9:	cli    
  40c2ca:	clc    
  40c2cb:	shl    DWORD PTR [edx],0xa8
  40c2ce:	adc    ch,BYTE PTR [ebp-0x43131c7]
  40c2d4:	xchg   ebx,eax
  40c2d5:	mov    ds:0xd3f3498f,eax
  40c2da:	out    dx,al
  40c2db:	mov    ah,bl
  40c2dd:	push   0x2e
  40c2df:	cmp    eax,0x4c09e790
  40c2e4:	int    0x16
  40c2e6:	cmp    al,0x58
  40c2e8:	pusha  
  40c2e9:	push   edx
  40c2ea:	pop    edi
  40c2eb:	popf   
  40c2ec:	pop    ebx
  40c2ed:	iret   
  40c2ee:	nop
  40c2ef:	xchg   edx,eax
  40c2f0:	pop    edi
  40c2f1:	gs mov bh,0x6d
  40c2f4:	sti    
  40c2f5:	fsub   DWORD PTR [ecx]
  40c2f7:	js     0x40c2d0
  40c2f9:	inc    edi
  40c2fa:	rcl    DWORD PTR [eax+0xc],1
  40c2fd:	cmp    DWORD PTR [ecx+edx*2-0x3e],edx
  40c301:	xor    eax,DWORD PTR [ebx+0x47713ec]
  40c307:	and    ch,BYTE PTR [ebx]
  40c309:	adc    eax,0x7b23c5f6
  40c30e:	jge    0x40c33b
  40c310:	cli    
  40c311:	aaa    
  40c312:	sub    DWORD PTR [edx-0x2a],eax
  40c315:	sar    BYTE PTR [edx+eax*4-0x6ab230c8],0x4d
  40c31d:	dec    eax
  40c31e:	ins    DWORD PTR es:[edi],dx
  40c31f:	or     eax,0x646f2df7
  40c324:	lods   al,BYTE PTR ds:[esi]
  40c325:	dec    ebx
  40c326:	sbb    edi,0x464a49aa
  40c32c:	rcr    DWORD PTR [ebx],0x8c
  40c32f:	mov    dh,0xb4
  40c331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c332:	faddp  st(2),st
  40c334:	or     edx,eax
  40c336:	lds    edx,FWORD PTR [edi-0x6a]
  40c339:	sti    
  40c33a:	mov    ecx,0x5aae6106
  40c33f:	inc    eax
  40c340:	push   ebx
  40c341:	inc    esi
  40c342:	out    0x76,al
  40c344:	mov    ah,0xa8
  40c346:	jno    0x40c2ce
  40c348:	pop    edi
  40c349:	sti    
  40c34a:	bound  edx,QWORD PTR [ebx-0x72]
  40c34d:	test   BYTE PTR [ebp+0x2b6f32b9],al
  40c353:	loope  0x40c374
  40c355:	into   
  40c356:	(bad)  
  40c357:	sbb    BYTE PTR [ecx-0x37],bh
  40c35a:	in     al,dx
  40c35b:	arpl   WORD PTR [eax-0xa],cx
  40c35e:	push   ebx
  40c35f:	sbb    DWORD PTR [esi],edi
  40c361:	pop    edx
  40c362:	retf   0x3b5d
  40c365:	add    DWORD PTR [ebx+0x7e],eax
  40c368:	mov    al,BYTE PTR [ecx]
  40c36a:	sub    ebp,edi
  40c36c:	mov    al,0x61
  40c36e:	dec    esp
  40c36f:	scas   eax,DWORD PTR es:[edi]
  40c370:	dec    ecx
  40c371:	ins    BYTE PTR es:[edi],dx
  40c372:	repz (bad) 
  40c374:	in     eax,dx
  40c375:	inc    eax
  40c376:	mov    esp,0xec740729
  40c37b:	mov    ch,0xc
  40c37d:	xchg   ebx,eax
  40c37e:	or     eax,0xbf20a0f9
  40c383:	lods   eax,DWORD PTR ds:[esi]
  40c384:	jnp    0x40c341
  40c386:	shl    DWORD PTR [ebp-0x39046c59],1
  40c38c:	std    
  40c38d:	inc    eax
  40c38e:	cmp    DWORD PTR [esi+0x5a],0xe995dc10
  40c395:	inc    esp
  40c396:	push   ss
  40c397:	in     eax,dx
  40c398:	sub    eax,0xb3a488b8
  40c39d:	ror    DWORD PTR gs:[eax+ecx*2-0x5e],0x5c
  40c3a3:	or     eax,0xdca8fae2
  40c3a8:	push   edx
  40c3a9:	mov    edi,0x16d95bc5
  40c3ae:	xlat   BYTE PTR ds:[ebx]
  40c3af:	enter  0xc398,0xb4
  40c3b3:	dec    esp
  40c3b4:	mov    esp,0x52459bfe
  40c3b9:	cs loope 0x40c342
  40c3bc:	stos   DWORD PTR es:[edi],eax
  40c3bd:	icebp  
  40c3be:	daa    
  40c3bf:	add    DWORD PTR [esi+0x4d8cec72],ecx
  40c3c5:	mov    ch,0x1f
  40c3c7:	mov    al,ds:0xcf123bbd
  40c3cc:	rcl    BYTE PTR [eax+eiz*2+0x1a],cl
  40c3d0:	das    
  40c3d1:	popa   
  40c3d2:	into   
  40c3d3:	inc    ebx
  40c3d4:	add    ebp,DWORD PTR [edx+0x1832122a]
  40c3da:	mov    gs,WORD PTR [ebp-0x3f47aa8e]
  40c3e0:	icebp  
  40c3e1:	sub    esp,edi
  40c3e3:	enter  0x33f6,0x40
  40c3e7:	mov    dh,0x69
  40c3e9:	out    dx,al
  40c3ea:	fadd   DWORD PTR [edx]
  40c3ec:	cmp    DWORD PTR ds:[eax+0xffa3649],ecx
  40c3f3:	idiv   BYTE PTR [edx+0x4baa76de]
  40c3f9:	xchg   edx,eax
  40c3fa:	sub    BYTE PTR [esi],ch
  40c3fc:	rol    BYTE PTR [ecx-0x1c5cf45f],1
  40c402:	or     al,0xa0
  40c404:	mov    dh,0x4
  40c406:	mov    dh,bl
  40c408:	je     0x40c435
  40c40a:	nop
  40c40b:	js     0x40c3ff
  40c40d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c40e:	mov    WORD PTR [ecx+0x29edbb77],?
  40c414:	inc    ecx
  40c415:	push   esi
  40c416:	jo     0x40c3d9
  40c418:	jbe    0x40c3d2
  40c41a:	push   0xffffff8a
  40c41c:	ror    BYTE PTR [edx-0x7a],0x53
  40c420:	xor    eax,0xa12ca1eb
  40c425:	ja     0x40c445
  40c427:	dec    ecx
  40c428:	pop    esp
  40c429:	push   cs
  40c42a:	fistp  WORD PTR [eax+0x37db6291]
  40c430:	xchg   BYTE PTR [esi-0x1f47bc61],ah
  40c436:	or     DWORD PTR [edi+0x30],ebx
  40c439:	cli    
  40c43a:	push   edx
  40c43b:	sbb    BYTE PTR [ecx-0x32a58588],bh
  40c441:	mov    ebp,0xd80204c3
  40c446:	fadd   QWORD PTR [esi+0x14]
  40c449:	mov    bh,0x80
  40c44b:	int    0x66
  40c44d:	jmp    0x34a2b47f
  40c452:	jle    0x40c471
  40c454:	cdq    
  40c455:	pop    ecx
  40c456:	stos   BYTE PTR es:[edi],al
  40c457:	inc    eax
  40c458:	cmc    
  40c459:	add    ch,BYTE PTR [esi+0x1d]
  40c45c:	mov    ch,0x4
  40c45e:	mov    dh,0xf2
  40c460:	ds mov ecx,0x200975ed
  40c466:	repnz in eax,0x29
  40c469:	out    dx,eax
  40c46a:	jb     0x40c46a
  40c46c:	mov    eax,ds:0x27ba2810
  40c471:	stos   BYTE PTR es:[edi],al
  40c472:	xchg   ebx,eax
  40c473:	mov    ebp,eax
  40c475:	mov    gs,WORD PTR [esi]
  40c477:	dec    edi
  40c478:	push   ebp
  40c479:	es popf 
  40c47b:	test   al,cl
  40c47d:	enter  0x7149,0x89
  40c481:	pushf  
  40c482:	enter  0xdfbf,0xc1
  40c486:	adc    al,0x78
  40c488:	int    0xea
  40c48a:	and    DWORD PTR [ebx],edx
  40c48c:	jecxz  0x40c46e
  40c48e:	and    ecx,edi
  40c490:	mov    esp,0x920c563d
  40c495:	mov    al,0xe4
  40c497:	inc    edi
  40c498:	jmp    0x592af4b3
  40c49d:	xor    DWORD PTR [ebx],ebx
  40c49f:	sub    eax,0x1d00e7df
  40c4a4:	das    
  40c4a5:	test   ebx,ebp
  40c4a7:	ror    DWORD PTR [edx-0x12],cl
  40c4aa:	mov    edx,0x3b36e20f
  40c4af:	inc    esp
  40c4b0:	dec    ebx
  40c4b1:	xor    al,0xfd
  40c4b3:	inc    esi
  40c4b4:	mov    bl,0xe0
  40c4b6:	mov    ds:0xaea8e136,al
  40c4bb:	inc    edi
  40c4bc:	mov    eax,ds:0xf13b92da
  40c4c1:	daa    
  40c4c2:	and    edx,DWORD PTR [edi]
  40c4c4:	inc    edi
  40c4c5:	imul   edx,DWORD PTR [ebp+eiz*4+0x77135bf0],0xcb6d3c19
  40c4d0:	or     BYTE PTR [edi],dl
  40c4d2:	test   DWORD PTR [edx+0x55],ecx
  40c4d5:	push   cs
  40c4d6:	scas   al,BYTE PTR es:[edi]
  40c4d7:	or     DWORD PTR [edi+0x1eb2563c],edi
  40c4dd:	jecxz  0x40c50d
  40c4df:	hlt    
  40c4e0:	daa    
  40c4e1:	pusha  
  40c4e2:	inc    esp
  40c4e3:	push   edi
  40c4e4:	xchg   DWORD PTR [edi],edx
  40c4e6:	loope  0x40c565
  40c4e8:	inc    edx
  40c4e9:	sbb    eax,0xbd7fb94e
  40c4ee:	retf   
  40c4ef:	hlt    
  40c4f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4f1:	sbb    esp,edi
  40c4f3:	or     eax,0x60988eb6
  40c4f8:	lods   al,BYTE PTR ds:[esi]
  40c4f9:	inc    ecx
  40c4fa:	(bad)  
  40c4fb:	in     al,dx
  40c4fc:	(bad)  
  40c4fd:	mov    bh,0xf5
  40c4ff:	jns    0x40c555
  40c501:	or     dh,BYTE PTR [ebx]
  40c503:	xchg   esp,eax
  40c504:	adc    esi,DWORD PTR [ebx]
  40c506:	scas   al,BYTE PTR es:[edi]
  40c507:	out    dx,al
  40c508:	lds    ebp,FWORD PTR [esi]
  40c50a:	push   eax
  40c50b:	sbb    esi,DWORD PTR [esi]
  40c50d:	fld    TBYTE PTR [edx]
  40c50f:	hlt    
  40c510:	mov    ebx,0x6d09d7a1
  40c515:	outs   dx,BYTE PTR ds:[esi]
  40c516:	pop    ds
  40c517:	sbb    eax,0xd5c9f885
  40c51c:	sahf   
  40c51d:	cmp    ch,bl
  40c51f:	pop    ss
  40c520:	enter  0x8a54,0xe9
  40c524:	ret    
  40c525:	push   edx
  40c526:	cld    
  40c527:	adc    al,0x8
  40c529:	or     cl,BYTE PTR [eax+0x2f4284d6]
  40c52f:	sbb    al,0x3a
  40c531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c532:	adc    dh,BYTE PTR [ecx]
  40c534:	lds    edx,FWORD PTR cs:[ebx]
  40c537:	mov    al,0xb2
  40c539:	push   es
  40c53a:	fcmovnu st,st(5)
  40c53c:	das    
  40c53d:	mov    eax,ds:0x8479e0de
  40c542:	cli    
  40c543:	lods   eax,DWORD PTR ds:[esi]
  40c544:	jo     0x40c555
  40c546:	rcr    BYTE PTR [eax+0x9],0x38
  40c54a:	pop    ds
  40c54b:	add    DWORD PTR [ebp+0x222b0c2],eax
  40c551:	lock mov ebx,edi
  40c554:	out    0x97,al
  40c556:	sahf   
  40c557:	pop    ecx
  40c558:	mov    WORD PTR ds:0xa820f268,es
  40c55e:	scas   al,BYTE PTR es:[edi]
  40c55f:	mov    BYTE PTR [edi-0x75e0b039],ch
  40c565:	cld    
  40c566:	push   ecx
  40c567:	and    al,0x99
  40c569:	mov    bl,0xa7
  40c56b:	test   eax,0x428b2eee
  40c570:	sub    eax,0xb5d3b7f3
  40c575:	sbb    eax,0x5d5c6fcd
  40c57a:	xchg   ebp,eax
  40c57b:	test   BYTE PTR [esi],al
  40c57d:	cdq    
  40c57e:	mov    ecx,?
  40c580:	ret    0xa5df
  40c583:	xchg   BYTE PTR [edi],cl
  40c585:	test   al,0xa9
  40c587:	pop    esp
  40c588:	adc    al,0x61
  40c58a:	add    dl,BYTE PTR [esi+0x3803d30c]
  40c590:	mov    DWORD PTR [ebp-0x8],edi
  40c593:	mov    eax,DWORD PTR [ebp+0xc]
  40c596:	mov    edi,DWORD PTR [ebp+0xc]
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0xb54b873c
  40c65b:	cmp    ch,BYTE PTR [eax+0x5b]
  40c65e:	mov    ds:0x4e7c7ce0,al
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	mov    dl,0x1b
  40c668:	stos   DWORD PTR es:[edi],eax
  40c669:	xor    esp,DWORD PTR [edx-0x6d]
  40c66c:	out    0x11,al
  40c66e:	ret    
  40c66f:	cli    
  40c670:	push   ecx
  40c671:	outs   dx,BYTE PTR ds:[esi]
  40c672:	dec    esp
  40c673:	xchg   ebp,eax
  40c674:	pusha  
  40c675:	jge    0x40c614
  40c677:	dec    ecx
  40c678:	add    al,0xa7
  40c67a:	ret    0x7dc9
  40c67d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c67e:	push   ds
  40c67f:	push   cs
  40c680:	lea    esi,ds:0x43fb5c2
  40c686:	outs   dx,BYTE PTR ds:[esi]
  40c687:	stos   BYTE PTR es:[edi],al
  40c688:	push   edx
  40c689:	call   0x11ea:0x6cf6d30e
  40c690:	test   eax,0x57fdc67
  40c695:	(bad)  
  40c696:	(bad)  
  40c697:	mov    esi,0x6f31eb3f
  40c69c:	push   edx
  40c69d:	mov    ecx,0x91476a1
  40c6a2:	xor    ah,BYTE PTR [ebx+0x45335aa5]
  40c6a8:	std    
  40c6a9:	xchg   dh,dh
  40c6ab:	sub    DWORD PTR [edx+0x66184c30],ebx
  40c6b1:	mov    bl,0x33
  40c6b3:	xchg   esi,eax
  40c6b4:	aam    0x17
  40c6b6:	xor    DWORD PTR [esi],esp
  40c6b8:	mov    cs,WORD PTR ds:0x8695e304
  40c6be:	ror    ebp,0x2c
  40c6c1:	and    BYTE PTR [ecx+0x32],bl
  40c6c4:	(bad)  
  40c6c5:	arpl   WORD PTR [ebx],bp
  40c6c7:	fist   WORD PTR [ebx+0x62]
  40c6ca:	test   eax,0x9948aa3f
  40c6cf:	sub    BYTE PTR [ebp+0x6a19fa12],ch
  40c6d5:	mov    eax,ds:0x63b3936d
  40c6da:	pop    edx
  40c6db:	mov    eax,0x970c65b4
  40c6e0:	sub    BYTE PTR [esp+eax*2],al
  40c6e3:	cmp    DWORD PTR ds:0xd0e41427,ebx
  40c6e9:	lea    eax,[ebp-0x5b851e1b]
  40c6ef:	push   ds
  40c6f0:	scas   eax,DWORD PTR es:[edi]
  40c6f1:	sub    esp,esi
  40c6f3:	jp     0x40c71b
  40c6f5:	xor    al,0x31
  40c6f7:	scas   eax,DWORD PTR es:[edi]
  40c6f8:	pop    esi
  40c6f9:	adc    cl,BYTE PTR [ecx+0x68]
  40c6fc:	sti    
  40c6fd:	icebp  
  40c6fe:	xor    bh,BYTE PTR [ecx-0x3]
  40c701:	jp     0x40c711
  40c703:	mov    bh,0x24
  40c705:	cli    
  40c706:	sti    
  40c707:	cld    
  40c708:	inc    esi
  40c709:	mov    edi,0x9b6c4c8e
  40c70e:	fisttp WORD PTR [ebp+0x68]
  40c711:	mov    ah,0xf1
  40c713:	xchg   ebp,eax
  40c714:	ret    
  40c715:	and    eax,0x3164765e
  40c71a:	stc    
  40c71b:	sub    al,0x87
  40c71d:	sub    dl,BYTE PTR ds:0x75c23fc2
  40c723:	rcr    bl,cl
  40c725:	pop    ecx
  40c726:	or     esp,DWORD PTR [edi]
  40c728:	fisttp WORD PTR [ebx]
  40c72a:	mov    ebp,0xda6d8f6a
  40c72f:	sbb    ebp,ecx
  40c731:	sbb    ebp,DWORD PTR [edx+0x65e94c2b]
  40c737:	aam    0x1f
  40c739:	mov    bl,0x7f
  40c73b:	sahf   
  40c73c:	jl     0x40c6c6
  40c73e:	cmp    al,0x65
  40c740:	xor    al,0x98
  40c742:	inc    eax
  40c743:	mov    eax,0x3a4a4226
  40c748:	shl    DWORD PTR [edi-0x720f9e50],1
  40c74e:	mov    ebp,0xc2a2e6a4
  40c753:	cmp    bh,ch
  40c755:	shl    DWORD PTR [ebx+0x1c97eb0e],0x3e
  40c75c:	push   es
  40c75d:	and    eax,0x7adc60ca
  40c762:	pop    ebp
  40c763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c764:	mov    ebx,0x74ea3927
  40c769:	mov    dh,0xfe
  40c76b:	cmc    
  40c76c:	push   edi
  40c76d:	pop    edi
  40c76e:	xchg   ecx,eax
  40c76f:	and    DWORD PTR [ecx],ecx
  40c771:	cdq    
  40c772:	xchg   ebx,eax
  40c773:	loope  0x40c7b0
  40c775:	push   ebp
  40c776:	dec    ecx
  40c777:	jge    0x40c78b
  40c779:	add    eax,0xba5392b3
  40c77e:	pop    ss
  40c77f:	cmp    esi,DWORD PTR ds:0x5a53a87f
  40c785:	mov    BYTE PTR [ecx+eax*4],ah
  40c788:	shl    eax,1
  40c78a:	pop    ss
  40c78b:	ret    
  40c78c:	pop    ebx
  40c78d:	ins    BYTE PTR es:[edi],dx
  40c78e:	xchg   edx,eax
  40c78f:	ja     0x40c77f
  40c791:	mov    eax,0x6a089bfd
  40c796:	cmp    BYTE PTR [eax+edx*1],al
  40c799:	or     ebx,DWORD PTR [esi]
  40c79b:	mov    al,ds:0x922191e2
  40c7a0:	mov    edx,0x3942338d
  40c7a5:	icebp  
  40c7a6:	adc    eax,0x4a89f5d5
  40c7ab:	cli    
  40c7ac:	(bad)  
  40c7ad:	sub    al,0xf7
  40c7af:	nop
  40c7b0:	cmp    ch,bh
  40c7b2:	inc    ebp
  40c7b3:	xchg   ebx,eax
  40c7b4:	hlt    
  40c7b5:	sar    DWORD PTR [ebx+eiz*8-0x1b592e9f],0x3f
  40c7bd:	leave  
  40c7be:	es mov esi,0x67fc963f
  40c7c4:	and    eax,0x2565a030
  40c7c9:	mov    dl,0x6a
  40c7cb:	mov    eax,ds:0xdee9f080
  40c7d0:	repnz cmp cl,BYTE PTR [esi+0x2222adf1]
  40c7d7:	out    dx,eax
  40c7d8:	mov    bh,0xa3
  40c7da:	mov    esp,fs
  40c7dc:	jo     0x40c796
  40c7de:	push   esp
  40c7df:	and    edi,ebp
  40c7e1:	aam    0x47
  40c7e3:	pop    eax
  40c7e4:	and    eax,0xa071c0d8
  40c7e9:	xchg   ebp,eax
  40c7ea:	jbe    0x40c7b6
  40c7ec:	lods   al,BYTE PTR ds:[esi]
  40c7ed:	and    ch,bl
  40c7ef:	sti    
  40c7f0:	adc    al,0x5a
  40c7f2:	jnp    0x40c78b
  40c7f4:	hlt    
  40c7f5:	imul   edi,DWORD PTR [edi+0x6f],0x4e
  40c7f9:	pop    edi
  40c7fa:	mov    edi,0x4b94aa5d
  40c7ff:	mov    esi,ss
  40c801:	push   cs
  40c802:	(bad)  
  40c803:	inc    eax
  40c804:	sub    edi,eax
  40c806:	and    eax,0x2be7cf56
  40c80b:	mov    ecx,0xf1380ec2
  40c810:	mov    dl,0xb7
  40c812:	push   esi
  40c813:	(bad)  
  40c814:	lods   eax,DWORD PTR ds:[esi]
  40c815:	adc    DWORD PTR [esi+0x3ecf2a92],eax
  40c81b:	adc    al,0x50
  40c81d:	jp     0x40c817
  40c81f:	sbb    BYTE PTR [esi+eiz*8-0x4f55a346],0xaf
  40c827:	les    ebx,FWORD PTR [esi]
  40c829:	xlat   BYTE PTR ds:[ebx]
  40c82a:	dec    edi
  40c82b:	or     BYTE PTR [eax],0x2
  40c82e:	sbb    dh,dh
  40c830:	pop    es
  40c831:	call   0x9ae5:0xa0a405a7
  40c838:	jbe    0x40c845
  40c83a:	aaa    
  40c83b:	push   ecx
  40c83c:	and    esi,edx
  40c83e:	pop    edi
  40c83f:	mov    edx,0x9ea541de
  40c844:	sub    edx,DWORD PTR [esi+0x70]
  40c847:	in     eax,dx
  40c848:	imul   DWORD PTR [edi]
  40c84a:	sbb    esi,eax
  40c84c:	mov    bl,0x3d
  40c84e:	mov    WORD PTR [edi],es
  40c850:	stos   DWORD PTR es:[edi],eax
  40c851:	ficomp DWORD PTR [esp+edx*2-0x254a6ad6]
  40c858:	push   ebx
  40c859:	(bad)  [ebp+ebp*1-0x44d4a9b9]
  40c860:	pushf  
  40c861:	jmp    0x40c7e9
  40c863:	pop    esi
  40c864:	jnp    0x40c8aa
  40c866:	push   ebp
  40c867:	lods   eax,DWORD PTR ds:[esi]
  40c868:	std    
  40c869:	gs mov ah,0xb2
  40c86c:	push   eax
  40c86d:	push   ebx
  40c86e:	add    DWORD PTR [ebp+0x6],esp
  40c871:	sbb    al,0xd4
  40c873:	cmp    edi,edx
  40c875:	(bad)  
  40c876:	clc    
  40c877:	fwait
  40c878:	cmc    
  40c879:	adc    al,0xff
  40c87b:	mov    cl,0x92
  40c87d:	sub    ah,BYTE PTR [eax+0x6c9e12a0]
  40c883:	mov    bl,0x4a
  40c885:	repz (bad) 
  40c887:	or     ch,BYTE PTR [ebp-0x9]
  40c88a:	outs   dx,DWORD PTR ds:[esi]
  40c88b:	adc    esp,esi
  40c88d:	test   BYTE PTR [ecx-0x3d],ah
  40c890:	ss dec ebp
  40c892:	xchg   edi,eax
  40c893:	and    edx,DWORD PTR [esi-0x3efcee01]
  40c899:	add    edx,DWORD PTR [ebp+ecx*1+0x60]
  40c89d:	(bad)  
  40c89e:	outs   dx,BYTE PTR ds:[esi]
  40c89f:	push   ebp
  40c8a0:	(bad)  
  40c8a1:	sub    BYTE PTR [ecx],dh
  40c8a3:	push   ss
  40c8a4:	data16 fwait
  40c8a6:	sub    eax,0xc299d2
  40c8ab:	nop
  40c8ac:	(bad)  
  40c8ad:	sub    edx,DWORD PTR [esi+0x22]
  40c8b0:	fcomp  QWORD PTR [ecx]
  40c8b2:	cmc    
  40c8b3:	mov    bl,0xe1
  40c8b5:	jle    0x40c840
  40c8b7:	pop    edi
  40c8b8:	mov    ?,WORD PTR [bx+di-0x6507]
  40c8bd:	stc    
  40c8be:	cld    
  40c8bf:	ss mov edx,0xa0c7a888
  40c8c5:	mov    ebp,DWORD PTR [esp+ebx*1-0x3f]
  40c8c9:	lods   eax,DWORD PTR ds:[esi]
  40c8ca:	dec    eax
  40c8cb:	clc    
  40c8cc:	inc    esi
  40c8cd:	push   ebp
  40c8ce:	or     ebp,edx
  40c8d0:	adc    esp,0x6c
  40c8d3:	sahf   
  40c8d4:	loope  0x40c865
  40c8d6:	mov    al,0xb1
  40c8d8:	ss pop ebx
  40c8da:	jecxz  0x40c8ae
  40c8dc:	stos   DWORD PTR es:[edi],eax
  40c8dd:	jbe    0x40c8f1
  40c8df:	push   ecx
  40c8e0:	push   esp
  40c8e1:	mov    bl,0xc1
  40c8e3:	shl    BYTE PTR [ebx+esi*1],1
  40c8e6:	dec    ecx
  40c8e7:	sub    eax,0x519844ad
  40c8ec:	mov    edx,0xc0d088d3
  40c8f1:	fisubr WORD PTR [ebp-0x2fd4f1ac]
  40c8f7:	pop    edx
  40c8f8:	mov    esi,0xf3c4e3b3
  40c8fd:	psadbw mm1,mm0
  40c900:	out    0xc,eax
  40c902:	cmp    DWORD PTR [ebx],eax
  40c904:	ror    BYTE PTR [ebp+0x7d],1
  40c907:	and    dl,dh
  40c909:	push   ebp
  40c90a:	imul   edx,DWORD PTR [edi-0x77b0935e],0x639c8cea
  40c914:	ror    DWORD PTR [eax],1
  40c916:	ret    
  40c917:	std    
  40c918:	enter  0x74d7,0xa3
  40c91c:	push   eax
  40c91d:	inc    edx
  40c91e:	xchg   esp,eax
  40c91f:	dec    esi
  40c920:	fcom   QWORD PTR [esi]
  40c922:	push   esp
  40c923:	test   ecx,0x94bbae26
  40c929:	adc    al,0x59
  40c92b:	inc    esi
  40c92c:	adc    eax,0x5ec3316c
  40c931:	into   
  40c932:	out    0x6a,al
  40c934:	cli    
  40c935:	ror    BYTE PTR [edx+0x45be546e],cl
  40c93b:	add    al,0x19
  40c93d:	xchg   esp,eax
  40c93e:	sahf   
  40c93f:	cmp    edi,DWORD PTR [ebp-0x1244c362]
  40c945:	out    0x89,eax
  40c947:	sbb    DWORD PTR [edx-0x75b8f036],edx
  40c94d:	sub    dl,al
  40c94f:	or     eax,0xa1769d2e
  40c954:	int    0x5b
  40c956:	inc    ebp
  40c957:	stc    
  40c958:	add    al,BYTE PTR [esi+0x4f]
  40c95b:	and    esi,ebx
  40c95d:	cmp    cl,bl
  40c95f:	push   0x49
  40c961:	dec    ecx
  40c962:	cmp    al,0x4d
  40c964:	ins    DWORD PTR es:[edi],dx
  40c965:	dec    esp
  40c966:	pop    edx
  40c967:	cmp    BYTE PTR [eax-0x7ffa5fd1],dl
  40c96d:	xchg   BYTE PTR [ebp+0x160c82c9],bh
  40c973:	xor    ebx,DWORD PTR ds:0x3811693b
  40c979:	(bad)  
  40c97a:	cli    
  40c97b:	push   esp
  40c97c:	scas   al,BYTE PTR es:[edi]
  40c97d:	sti    
  40c97e:	jns    0x40c9a4
  40c980:	dec    ebp
  40c981:	cwde   
  40c982:	add    edx,DWORD PTR [ebx+0x59a8c4e9]
  40c988:	sbb    dl,BYTE PTR fs:[edi-0x74]
  40c98c:	mov    esp,0x6939a03d
  40c991:	cmp    bh,BYTE PTR [eax+0x3d09d30d]
  40c997:	and    dh,bh
  40c999:	ins    BYTE PTR es:[edi],dx
  40c99a:	mov    ebx,0xdd2b5cdb
  40c99f:	cwde   
  40c9a0:	adc    eax,0x1c85fd2c
  40c9a5:	repz das 
  40c9a7:	mov    ch,dl
  40c9a9:	pop    ebp
  40c9aa:	arpl   di,dx
  40c9ac:	push   es
  40c9ad:	aad    0xd1
  40c9af:	inc    esi
  40c9b0:	inc    esp
  40c9b1:	mov    edi,0xd2fee11f
  40c9b6:	es add ah,dl
  40c9b9:	inc    ecx
  40c9ba:	out    0x58,al
  40c9bc:	lock adc DWORD PTR [edi-0x7e],ebx
  40c9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c1:	leave  
  40c9c2:	in     al,0xbe
  40c9c4:	pop    edx
  40c9c5:	pop    eax
  40c9c6:	xchg   BYTE PTR [edi+0x17],ch
  40c9c9:	icebp  
  40c9ca:	inc    ebp
  40c9cb:	jne    0x40c9c1
  40c9cd:	mov    al,0xb0
  40c9cf:	and    al,0xa4
  40c9d1:	shl    dl,cl
  40c9d3:	add    eax,0xc94c2b19
  40c9d8:	xor    bh,cl
  40c9da:	aas    
  40c9db:	jno    0x40c9ef
  40c9dd:	fld    TBYTE PTR [ecx]
  40c9df:	idiv   BYTE PTR [edi+0x16]
  40c9e2:	push   0x822c8f1f
  40c9e7:	shl    ecx,1
  40c9e9:	jle    0x40ca3a
  40c9eb:	mov    ch,0xc2
  40c9ed:	xlat   BYTE PTR ds:[ebx]
  40c9ee:	ret    
  40c9ef:	mov    esi,0x6a95a8b4
  40c9f4:	jb     0x40c9bc
  40c9f6:	mov    ebx,0xf0a602ec
  40c9fb:	ror    BYTE PTR [edx+0x235c52b4],cl
  40ca01:	push   es
  40ca02:	and    ecx,edi
  40ca04:	adc    DWORD PTR [edx+0x37],esi
  40ca07:	sub    BYTE PTR ds:0x437de5f9,ch
  40ca0d:	js     0x40ca0c
  40ca0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca10:	ss sbb ch,dh
  40ca13:	dec    ebp
  40ca14:	or     al,0x4a
  40ca16:	dec    esp
  40ca17:	cli    
  40ca18:	push   esp
  40ca19:	icebp  
  40ca1a:	sbb    cl,dl
  40ca1c:	mov    esp,0x3bb063a2
  40ca21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca22:	sub    eax,0x539c0246
  40ca27:	cmp    edx,esp
  40ca29:	sub    BYTE PTR [ebp-0x3],bl
  40ca2c:	xchg   DWORD PTR [ebx+edx*4+0x7],esi
  40ca30:	outs   dx,BYTE PTR ds:[esi]
  40ca31:	lods   eax,DWORD PTR ds:[esi]
  40ca32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca33:	jmp    0x51aa:0x621d0c9
  40ca3a:	add    eax,0x103c0492
  40ca3f:	mov    bh,0x5
  40ca41:	add    bh,BYTE PTR [ebp+eax*1-0x34]
  40ca45:	gs jbe 0x40caaf
  40ca48:	retf   
  40ca49:	popa   
  40ca4a:	push   edi
  40ca4b:	mov    dl,0x24
  40ca4d:	sti    
  40ca4e:	enter  0x5ff6,0xbc
  40ca52:	mov    ch,0x23
  40ca54:	adc    eax,0x4fe118d0
  40ca59:	cmc    
  40ca5a:	mov    BYTE PTR [ecx],bh
  40ca5c:	call   0xf763db8b
  40ca61:	jbe    0x40c9ee
  40ca63:	cld    
  40ca64:	sub    ebx,edx
  40ca66:	sbb    DWORD PTR [eax+0x4c],esp
  40ca69:	cmp    bl,BYTE PTR [edi+eiz*4+0x13]
  40ca6d:	and    bh,0xfb
  40ca70:	(bad)  
  40ca71:	sub    esi,DWORD PTR [ecx+0x77]
  40ca74:	and    BYTE PTR [ebx+0x16],al
  40ca77:	push   eax
  40ca78:	inc    ecx
  40ca79:	push   esp
  40ca7a:	xor    bh,cl
  40ca7c:	push   esi
  40ca7d:	or     ch,BYTE PTR [edi-0x6b]
  40ca80:	rcr    bl,cl
  40ca82:	cmp    DWORD PTR [ebx+0x2c],0xffffffc4
  40ca86:	in     eax,0xfa
  40ca88:	sub    DWORD PTR [ebx+0x5f28d224],eax
  40ca8e:	jge    0x40ca1e
  40ca90:	stos   BYTE PTR es:[edi],al
  40ca91:	addr16 enter 0xb3a2,0x66
  40ca96:	push   eax
  40ca97:	pop    ebx
  40ca98:	into   
  40ca99:	mov    edx,0xef4d305c
  40ca9e:	imul   esi,DWORD PTR [esi+0xa728be9],0x23
  40caa5:	sbb    BYTE PTR [edi],bl
  40caa7:	mov    al,ds:0x9ab7b911
  40caac:	pop    ebp
  40caad:	(bad)  
  40caae:	or     ecx,0x2c3631ee
  40cab4:	mov    esi,0x419f8ec2
  40cab9:	dec    edi
  40caba:	mov    esp,0x21fc4589
  40cabf:	mov    esp,0x86839587
  40cac4:	xor    DWORD PTR [eax-0x76],esi
  40cac7:	inc    esp
  40cac8:	adc    eax,0xac036533
  40cacd:	(bad)  
  40cace:	mov    ebp,0xfcf2f593
  40cad3:	test   al,0x4d
  40cad5:	dec    ecx
  40cad6:	daa    
  40cad7:	ins    BYTE PTR es:[edi],dx
  40cad8:	es jle 0x40cacd
  40cadb:	shl    DWORD PTR [edx],0x29
  40cade:	mov    eax,ds:0x4e35a7d2
  40cae3:	inc    ecx
  40cae4:	inc    esi
  40cae5:	mov    bl,0x26
  40cae7:	mov    ebx,DWORD PTR [esp+ebx*4-0x37]
  40caeb:	mov    ah,0xde
  40caed:	push   cs
  40caee:	mov    al,ds:0x593fe8e4
  40caf3:	xor    eax,0x1edc8d33
  40caf8:	inc    edx
  40caf9:	aas    
  40cafa:	retf   0xc92
  40cafd:	mov    bh,0x1
  40caff:	je     0x40ca9c
  40cb01:	popf   
  40cb02:	dec    eax
  40cb03:	adc    al,BYTE PTR ds:0x454feb5b
  40cb09:	stc    
  40cb0a:	and    BYTE PTR [eax+edx*1],bl
  40cb0d:	ins    BYTE PTR es:[edi],dx
  40cb0e:	mov    edx,0x57e2e5b5
  40cb13:	jp     0x40cb38
  40cb15:	shr    DWORD PTR [edx+0x37],1
  40cb18:	inc    edx
  40cb19:	int3   
  40cb1a:	bound  ebp,QWORD PTR [ecx-0x41]
  40cb1d:	jo     0x40cb6d
  40cb1f:	repz xchg ecx,eax
  40cb21:	or     al,0x8a
  40cb23:	pop    ecx
  40cb24:	fs call 0x3af2:0x5b6b1c0f
  40cb2c:	mov    edx,0xc2018135
  40cb31:	mov    cl,0x5d
  40cb33:	dec    ebx
  40cb34:	cwde   
  40cb35:	nop
  40cb36:	mov    ecx,?
  40cb38:	jbe    0x40cb6d
  40cb3a:	aas    
  40cb3b:	mov    esp,0x8feadf11
  40cb40:	xchg   esi,eax
  40cb41:	cmp    BYTE PTR [esi],bl
  40cb43:	xor    ebp,DWORD PTR [eax]
  40cb45:	les    esi,FWORD PTR [ecx]
  40cb47:	dec    eax
  40cb48:	cwde   
  40cb49:	(bad)  
  40cb4a:	mov    bh,0x91
  40cb4c:	pop    eax
  40cb4d:	inc    esp
  40cb4e:	and    BYTE PTR [ecx+0x5d],dl
  40cb51:	(bad)  
  40cb52:	je     0x40cb35
  40cb54:	sub    al,0x9e
  40cb56:	mov    al,ds:0xc267606b
  40cb5b:	fdivr  st(3),st
  40cb5d:	mov    DWORD PTR [esp+ecx*4+0x59],esi
  40cb61:	mov    DWORD PTR [edx+0x4566b5d7],esi
  40cb67:	or     BYTE PTR [ecx+edi*8],0x3e
  40cb6b:	lds    eax,FWORD PTR [ebp-0x5413fe80]
  40cb71:	rcl    ecx,cl
  40cb73:	shl    DWORD PTR [ebx+0x3ac96c2],cl
  40cb79:	fwait
  40cb7a:	cmp    eax,0xcaf89168
  40cb7f:	mov    ds:0x8db5a419,al
  40cb84:	xlat   BYTE PTR ds:[ebx]
  40cb85:	retf   
  40cb86:	pop    edi
  40cb87:	xlat   BYTE PTR ds:[ebx]
  40cb88:	add    edx,ebp
  40cb8a:	mov    ds,WORD PTR [ebx-0x72]
  40cb8d:	push   0x88aa32a4
  40cb92:	or     edi,DWORD PTR [edx-0x47]
  40cb95:	sbb    al,0xf4
  40cb97:	lods   eax,DWORD PTR ds:[esi]
  40cb98:	fisub  DWORD PTR [ecx-0x855a36b]
  40cb9e:	(bad)  [ecx+0x424b73f0]
  40cba4:	cmp    DWORD PTR [ebp-0x16],0xffffff8d
  40cba8:	in     al,0xc8
  40cbaa:	into   
  40cbab:	out    dx,al
  40cbac:	add    eax,0x6c133d07
  40cbb1:	mov    bl,0xc9
  40cbb3:	cmc    
  40cbb4:	push   ebx
  40cbb5:	fcmovnb st,st(6)
  40cbb7:	push   0x5273820f
  40cbbc:	inc    esi
  40cbbd:	adc    bl,BYTE PTR [edi]
  40cbbf:	jns    0x40cba1
  40cbc1:	out    0xfe,eax
  40cbc3:	test   al,0xe1
  40cbc5:	adc    ebp,DWORD PTR [edx-0x788ec402]
  40cbcb:	and    cl,dl
  40cbcd:	xor    ah,BYTE PTR [edx+eax*4]
  40cbd0:	jbe    0x40cbd8
  40cbd2:	ss ja  0x40cc32
  40cbd5:	nop
  40cbd6:	std    
  40cbd7:	call   0x8e61:0x1fca49d5
  40cbde:	dec    edx
  40cbdf:	inc    esi
  40cbe0:	sbb    al,0x8d
  40cbe2:	inc    edx
  40cbe3:	dec    eax
  40cbe4:	push   esp
  40cbe5:	xchg   esp,eax
  40cbe6:	dec    edi
  40cbe7:	mov    ds:0xc3d56092,al
  40cbec:	dec    ebx
  40cbed:	rcl    DWORD PTR [edi],cl
  40cbef:	shl    BYTE PTR [ebp+0x25],cl
  40cbf2:	stc    
  40cbf3:	xchg   edi,eax
  40cbf4:	mov    edi,0x336ea0e5
  40cbf9:	je     0x40cc2e
  40cbfb:	pop    ebx
  40cbfc:	ss std 
  40cbfe:	jne    0x40cbc8
  40cc00:	or     DWORD PTR [ecx-0x6cc74ed1],0x22
  40cc07:	mov    ecx,0x643f34e7
  40cc0c:	lds    ecx,FWORD PTR [ebx-0x20]
  40cc0f:	popa   
  40cc10:	sbb    eax,0xa7a4928f
  40cc15:	dec    eax
  40cc16:	loopne 0x40cba4
  40cc18:	inc    ecx
  40cc19:	cdq    
  40cc1a:	(bad)  
  40cc1b:	jnp    0x40cbc3
  40cc1d:	fisub  WORD PTR [edi-0x44]
  40cc20:	cli    
  40cc21:	xor    eax,eax
  40cc23:	push   cs
  40cc24:	imul   eax,DWORD PTR [edx],0x64c9e25d
  40cc2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc2b:	in     al,0x7c
  40cc2d:	mov    al,ds:0xb9aded1a
  40cc32:	sub    al,0x3f
  40cc34:	outs   dx,DWORD PTR ds:[esi]
  40cc35:	jge    0x40cc09
  40cc37:	jg     0x40cc28
  40cc39:	pop    edx
  40cc3a:	cld    
  40cc3b:	bnd jmp 0x40cc57
  40cc3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc3f:	cmp    dh,dl
  40cc41:	scas   eax,DWORD PTR es:[edi]
  40cc42:	cmc    
  40cc43:	fwait
  40cc44:	dec    ebp
  40cc45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc46:	mov    ecx,0x581234d3
  40cc4b:	push   edx
  40cc4c:	add    ch,cl
  40cc4e:	adc    BYTE PTR [ecx],0x89
  40cc51:	enter  0x1b4,0x1
  40cc55:	cld    
  40cc56:	fs jp  0x40cc3b
  40cc59:	test   eax,0x675af5a1
  40cc5e:	jo     0x40cc36
  40cc60:	fidivr WORD PTR fs:[ebp+0x45]
  40cc64:	mov    bh,0xbc
  40cc66:	mov    ah,0x43
  40cc68:	les    edi,FWORD PTR [edi+0x68]
  40cc6b:	call   0x275d6dee
  40cc70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc71:	sub    al,0x1c
  40cc73:	icebp  
  40cc74:	sbb    BYTE PTR [ebp-0x5ed29e65],ah
  40cc7a:	sbb    DWORD PTR [ecx+0x26],esi
  40cc7d:	ss jge 0x40cc0e
  40cc80:	(bad)  
  40cc81:	out    0x54,al
  40cc83:	adc    al,0xb4
  40cc85:	lock call 0x56d2939a
  40cc8b:	sub    BYTE PTR [eax],al
  40cc8d:	test   ebp,0x793b7e96
  40cc93:	sub    bl,bl
  40cc95:	mov    ecx,0xc8f0a210
  40cc9a:	jbe    0x40cd1a
  40cc9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc9d:	iret   
  40cc9e:	fistp  WORD PTR [esi-0xfd8c426]
  40cca4:	push   esp
  40cca5:	fcmovnbe st,st(5)
  40cca7:	dec    esp
  40cca8:	aam    0x19
  40ccaa:	rcr    DWORD PTR [ebx-0x7e],cl
  40ccad:	stos   DWORD PTR es:[edi],eax
  40ccae:	sbb    al,0x26
  40ccb0:	mov    ecx,0x305914ea
  40ccb5:	rol    ch,cl
  40ccb7:	dec    ebx
  40ccb8:	and    eax,0x64c10b42
  40ccbd:	pop    esp
  40ccbe:	xlat   BYTE PTR ds:[ebx]
  40ccbf:	xchg   edi,eax
  40ccc0:	push   cs
  40ccc1:	stos   DWORD PTR es:[edi],eax
  40ccc2:	out    dx,al
  40ccc3:	mov    al,0x2e
  40ccc5:	scas   al,BYTE PTR es:[edi]
  40ccc6:	je     0x40cd0c
  40ccc8:	sbb    DWORD PTR [esi*4-0x74b15dbc],ebp
  40cccf:	push   esi
  40ccd0:	cmp    DWORD PTR [esi-0x30],edi
  40ccd3:	push   edi
  40ccd4:	xchg   ecx,eax
  40ccd5:	(bad)  
  40ccd6:	cmp    esi,DWORD PTR [edx]
  40ccd8:	in     eax,dx
  40ccd9:	inc    esi
  40ccda:	int    0xa1
  40ccdc:	xchg   ecx,eax
  40ccdd:	imul   esi,DWORD PTR ss:[edx],0xecacbf3d
  40cce4:	outs   dx,BYTE PTR ds:[esi]
  40cce5:	fwait
  40cce6:	jo     0x40cc9d
  40cce8:	jp     0x40cc9a
  40ccea:	pop    ds
  40cceb:	pop    ebp
  40ccec:	mov    ah,0x1c
  40ccee:	or     DWORD PTR [ebx-0x9],ebp
  40ccf1:	mov    DWORD PTR [esi-0x7f],0xfbf6023b
  40ccf8:	mov    ds:0x6a2487c9,al
  40ccfd:	and    edi,edi
  40ccff:	sub    BYTE PTR [edi],bl
  40cd01:	fisttp QWORD PTR [ebx]
  40cd03:	dec    ecx
  40cd04:	nop
  40cd05:	pop    eax
  40cd06:	inc    ebp
  40cd07:	xchg   esi,eax
  40cd08:	aad    0x91
  40cd0a:	lods   eax,DWORD PTR ds:[esi]
  40cd0b:	dec    eax
  40cd0c:	mov    dh,0x16
  40cd0e:	aas    
  40cd0f:	jle    0x40cd25
  40cd11:	(bad)  
  40cd12:	rcr    DWORD PTR [ecx-0x596bb926],cl
  40cd18:	dec    esi
  40cd19:	xchg   ecx,eax
  40cd1a:	(bad)  
  40cd1b:	fcom   QWORD PTR [ebp-0x42]
  40cd1e:	ins    DWORD PTR es:[edi],dx
  40cd1f:	mov    DWORD PTR [edi+0x7870ac84],ecx
  40cd25:	lahf   
  40cd26:	jmp    0x2f59b6b9
  40cd2b:	fdiv   st,st(4)
  40cd2d:	retf   0xfb71
  40cd30:	and    ebp,DWORD PTR [ebp-0x59]
  40cd33:	stos   BYTE PTR es:[edi],al
  40cd34:	int    0x3e
  40cd36:	into   
  40cd37:	sbb    eax,0xdf30254d
  40cd3c:	shl    DWORD PTR ds:0x26fd838c,0xca
  40cd43:	jnp    0x40cdae
  40cd45:	push   esi
  40cd46:	(bad)  
  40cd47:	jae    0x40cdb8
  40cd49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd4a:	xor    ch,bl
  40cd4c:	es icebp 
  40cd4e:	stos   BYTE PTR es:[edi],al
  40cd4f:	ret    0x6376
  40cd52:	repz add al,BYTE PTR [ecx-0x258a2544]
  40cd59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd5a:	ja     0x40cdaf
  40cd5c:	outs   dx,DWORD PTR ds:[esi]
  40cd5d:	jge    0x40cd94
  40cd5f:	in     al,0x5
  40cd61:	mov    dl,0x6a
  40cd63:	mov    al,ds:0xd058dd07
  40cd68:	push   ds
  40cd69:	mov    dh,0x96
  40cd6b:	daa    
  40cd6c:	mov    BYTE PTR [ebx-0x7c],dl
  40cd6f:	or     DWORD PTR [bx+di+0x998],ecx
  40cd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd75:	and    BYTE PTR ds:0x2f77e1fa,cl
  40cd7b:	enter  0xfb76,0xe0
  40cd7f:	mov    al,0xa0
  40cd81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd82:	xchg   edi,eax
  40cd83:	adc    BYTE PTR [ecx+0x6a2697f3],dl
  40cd89:	pop    esp
  40cd8a:	mov    ecx,0x2243cc4e
  40cd8f:	dec    esi
  40cd90:	sbb    eax,0xfb997538
  40cd95:	imul   ebx,esp,0x5525dfa8
  40cd9b:	pop    edx
  40cd9c:	push   ebx
  40cd9d:	rcr    BYTE PTR [esi-0x37],1
  40cda0:	xor    bl,BYTE PTR [eax-0x729f24c1]
  40cda6:	xchg   edi,eax
  40cda7:	rol    DWORD PTR [edi+ecx*1+0x192ffa65],cl
  40cdae:	out    0x69,al
  40cdb0:	cmp    BYTE PTR [esi-0x3f],al
  40cdb3:	ins    DWORD PTR es:[edi],dx
  40cdb4:	push   edx
  40cdb5:	lahf   
  40cdb6:	fcom   DWORD PTR [esi+0x216d1df5]
  40cdbc:	sbb    al,0x6b
  40cdbe:	int3   
  40cdbf:	scas   al,BYTE PTR es:[edi]
  40cdc0:	ret    
  40cdc1:	out    dx,eax
  40cdc2:	scas   al,BYTE PTR es:[edi]
  40cdc3:	cs call 0xd606:0x9949833d
  40cdcb:	mov    dl,bl
  40cdcd:	mov    ebx,0xd06a4e4d
  40cdd2:	cmp    eax,0x66f3956f
  40cdd7:	and    eax,0x5017c38d
  40cddc:	outs   dx,BYTE PTR ds:[esi]
  40cddd:	sti    
  40cdde:	aam    0xc3
  40cde0:	cmc    
  40cde1:	les    eax,FWORD PTR [esp+edi*4-0x56]
  40cde5:	fs jb  0x40cdd6
  40cde8:	shl    esi,0xed
  40cdeb:	adc    ch,BYTE PTR [ebx-0x3]
  40cdee:	pushw  ds
  40cdf0:	popa   
  40cdf1:	in     al,0x3d
  40cdf3:	xor    BYTE PTR [eax],bh
  40cdf5:	xor    DWORD PTR ds:0x536d7914,esp
  40cdfb:	pop    edx
  40cdfc:	pushf  
  40cdfd:	adc    eax,0x9007439f
  40ce02:	fcmovnbe st,st(1)
  40ce04:	paddsw mm6,QWORD PTR [eax-0x79]
  40ce08:	in     al,0xff
  40ce0a:	or     BYTE PTR [ebx-0x53],dl
  40ce0d:	dec    eax
  40ce0e:	imul   esp,DWORD PTR [ebp+0x5894b845],0xa8d3554f
  40ce18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce19:	int3   
  40ce1a:	sar    BYTE PTR [ebp+0x1a],cl
  40ce1d:	imul   edi,eax,0xd
  40ce20:	mov    al,ds:0x253c4ad1
  40ce25:	clc    
  40ce26:	jl     0x40cde4
  40ce28:	mov    al,ds:0xc198c17d
  40ce2d:	int3   
  40ce2e:	cmp    eax,0x828c9697
  40ce33:	pop    ebp
  40ce34:	pusha  
  40ce35:	cs sahf 
  40ce37:	shl    DWORD PTR [ebx],cl
  40ce39:	outs   dx,BYTE PTR ds:[esi]
  40ce3a:	add    DWORD PTR [esi],ecx
  40ce3c:	fwait
  40ce3d:	and    al,0xe8
  40ce3f:	rcl    BYTE PTR [ebx],0xe7
  40ce42:	jmp    0x1cb9:0xd227f963
  40ce49:	ins    BYTE PTR es:[edi],dx
  40ce4a:	daa    
  40ce4b:	in     eax,dx
  40ce4c:	dec    DWORD PTR ds:0x33afc8bd
  40ce52:	dec    ebp
  40ce53:	aam    0x11
  40ce55:	loopne 0x40cdf6
  40ce57:	xor    DWORD PTR [ebp+0x410cf46],0x71
  40ce5e:	in     eax,0xb1
  40ce60:	jns    0x40ce87
  40ce62:	dec    ecx
  40ce63:	cli    
  40ce64:	in     al,dx
  40ce65:	cmp    BYTE PTR [ecx],bl
  40ce67:	shl    BYTE PTR ds:0x700497ce,cl
  40ce6d:	or     al,0xe4
  40ce6f:	dec    ebx
  40ce70:	adc    al,ch
  40ce72:	xor    bl,bl
  40ce74:	push   esi
  40ce75:	jl     0x40cede
  40ce77:	inc    edx
  40ce78:	inc    edi
  40ce79:	scas   eax,DWORD PTR es:[edi]
  40ce7a:	popa   
  40ce7b:	adc    eax,0x9acd1cc9
  40ce80:	cmp    al,0x62
  40ce82:	aam    0x51
  40ce84:	fldcw  WORD PTR [edi-0x2fd74158]
  40ce8a:	bswap  edi
  40ce8c:	shl    DWORD PTR [ecx],0xa5
  40ce8f:	ins    DWORD PTR es:[edi],dx
  40ce90:	jae    0x40cefb
  40ce92:	adc    eax,0x767c8df6
  40ce97:	or     BYTE PTR [edi+0x21b912f5],dl
  40ce9d:	cld    
  40ce9e:	xlat   BYTE PTR ds:[ebx]
  40ce9f:	aaa    
  40cea0:	cli    
  40cea1:	sbb    DWORD PTR [edi+0x766ff024],esp
  40cea7:	inc    ecx
  40cea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cea9:	les    ebp,FWORD PTR [ebx]
  40ceab:	loopne 0x40ce3d
  40cead:	fbstp  TBYTE PTR [edx]
  40ceaf:	gs jmp 0x40ce33
  40ceb2:	xchg   edi,eax
  40ceb3:	inc    esi
  40ceb4:	cmp    BYTE PTR [ebp-0x241d7c8d],bl
  40ceba:	sahf   
  40cebb:	outs   dx,BYTE PTR ds:[esi]
  40cebc:	jecxz  0x40cedf
  40cebe:	ins    DWORD PTR es:[edi],dx
  40cebf:	daa    
  40cec0:	sar    edx,cl
  40cec2:	jae    0x40ce88
  40cec4:	cmp    BYTE PTR [eax-0x17],al
  40cec7:	(bad)  
  40cec8:	jns    0x40cf0b
  40ceca:	aaa    
  40cecb:	bound  esi,QWORD PTR [ebp-0x72c794b4]
  40ced1:	and    eax,0xabe4df33
  40ced6:	adc    ecx,DWORD PTR [edx]
  40ced8:	push   ss
  40ced9:	cdq    
  40ceda:	adc    eax,0x2e80eb05
  40cedf:	or     eax,0x507c5edc
  40cee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cee5:	aaa    
  40cee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cee7:	das    
  40cee8:	fst    QWORD PTR [edx-0x4d]
  40ceeb:	xor    ebp,DWORD PTR [esi+edx*4-0x2f14939e]
  40cef2:	ret    0xb8cd
  40cef5:	jl     0x40ce7e
  40cef7:	addr16 push esi
  40cef9:	dec    ebx
  40cefa:	add    BYTE PTR [ecx-0x4c954352],ah
  40cf00:	jp     0x40ceef
  40cf02:	call   FWORD PTR [esi]
  40cf04:	shl    BYTE PTR [ebp-0x35],1
  40cf07:	stos   BYTE PTR es:[edi],al
  40cf08:	pop    edi
  40cf09:	and    al,0x72
  40cf0b:	dec    esi
  40cf0c:	pop    esp
  40cf0d:	leave  
  40cf0e:	mov    ah,0x3c
  40cf10:	lds    edi,FWORD PTR ds:0x9260ad42
  40cf16:	pop    DWORD PTR [edi]
  40cf18:	in     al,dx
  40cf19:	add    al,0xf3
  40cf1b:	loope  0x40cece
  40cf1d:	mov    edx,0x2005271c
  40cf22:	mov    ds:0x357fd78f,eax
  40cf27:	lds    esi,FWORD PTR [ecx]
  40cf29:	or     DWORD PTR [edx-0x59],ecx
  40cf2c:	xor    dh,BYTE PTR [edx]
  40cf2e:	ror    DWORD PTR [ebx-0x2a],cl
  40cf31:	pop    es
  40cf32:	fadd   DWORD PTR [ecx-0x341edac6]
  40cf38:	push   ss
  40cf39:	mov    edi,0xae3fa77b
  40cf3e:	sbb    dl,BYTE PTR [ebx+edi*8-0x1b]
  40cf42:	call   0xaf54:0xd44d8df0
  40cf49:	in     al,dx
  40cf4a:	pop    esp
  40cf4b:	stos   BYTE PTR es:[edi],al
  40cf4c:	jecxz  0x40cefb
  40cf4e:	mov    DWORD PTR [esi+0x3da676f5],ebp
  40cf54:	pop    ebp
  40cf55:	sbb    BYTE PTR [esi-0x65],ah
  40cf58:	into   
  40cf59:	add    al,0xb1
  40cf5b:	call   0x4967a8d4
  40cf60:	aad    0xc1
  40cf62:	mov    al,0x78
  40cf64:	pop    DWORD PTR [ebp-0x6d7cb60c]
  40cf6a:	mov    al,ds:0x67910a9f
  40cf6f:	jp     0x40cfde
  40cf71:	pop    edx
  40cf72:	jbe    0x40cf20
  40cf74:	popa   
  40cf75:	sub    eax,0x481e27a9
  40cf7a:	dec    edx
  40cf7b:	daa    
  40cf7c:	(bad)  
  40cf7d:	cmp    al,0x41
  40cf7f:	scas   al,BYTE PTR es:[edi]
  40cf80:	adc    ch,al
  40cf82:	fild   QWORD PTR [esi-0x19]
  40cf85:	sub    eax,0x415374dc
  40cf8a:	or     edi,0x8069b274
  40cf90:	ficom  DWORD PTR [esi+0x5b019d1]
  40cf96:	and    DWORD PTR [ebx+ebx*8-0x46],esp
  40cf9a:	iret   
  40cf9b:	push   ebx
  40cf9c:	cmp    ecx,DWORD PTR [ebx]
  40cf9e:	mov    eax,ds:0xabfaaff7
  40cfa3:	mov    ch,0xf0
  40cfa5:	shr    BYTE PTR [ecx],0x9e
  40cfa8:	nop
  40cfa9:	add    DWORD PTR [edi],ebp
  40cfab:	test   eax,0x3628174d
  40cfb0:	fs iret 
  40cfb2:	cdq    
  40cfb3:	inc    edi
  40cfb4:	sti    
  40cfb5:	jnp    0x40cf79
  40cfb7:	in     al,0x9b
  40cfb9:	(bad)  
  40cfba:	fisttp WORD PTR [edi+0xe88ed1e]
  40cfc0:	int3   
  40cfc1:	xchg   ecx,eax
  40cfc2:	ins    BYTE PTR es:[edi],dx
  40cfc3:	push   ebp
  40cfc4:	fcomp  QWORD PTR [esi-0x4c8506]
  40cfca:	scas   al,BYTE PTR es:[edi]
  40cfcb:	pop    es
  40cfcc:	icebp  
  40cfcd:	adc    ecx,esi
  40cfcf:	ja     0x40cfe7
  40cfd1:	outs   dx,DWORD PTR ds:[esi]
  40cfd2:	xchg   esi,eax
  40cfd3:	shl    BYTE PTR [edi+esi*2+0x2f8cb2d0],1
  40cfda:	cmp    edi,ebp
  40cfdc:	sbb    ch,BYTE PTR [esi]
  40cfde:	mov    ecx,0x22e24d6f
  40cfe3:	cmc    
  40cfe4:	enter  0x95b0,0x9a
  40cfe8:	adc    eax,0x8ff68813
  40cfed:	(bad)  
  40cfee:	sti    
  40cfef:	sahf   
  40cff0:	mov    eax,ds:0x3fc3c66a
  40cff5:	mov    ch,0x66
  40cff7:	cmp    esp,ebx
  40cff9:	and    ah,dl
  40cffb:	jecxz  0x40d025
  40cffd:	mov    DWORD PTR [ebx-0x4a],esp
  40d000:	lea    edx,[edx-0x21734989]
  40d006:	lods   eax,DWORD PTR ds:[esi]
  40d007:	icebp  
  40d008:	pop    esi
  40d009:	or     cl,dh
  40d00b:	xchg   DWORD PTR [esi-0x20],edx
  40d00e:	fimul  DWORD PTR [eax+0x29f43bb9]
  40d014:	fs jno 0x40d045
  40d017:	or     BYTE PTR [eax],bl
  40d019:	adc    esp,DWORD PTR [ebp+eiz*8-0x619d1ee2]
  40d020:	dec    edx
  40d021:	jnp    0x40cfc3
  40d023:	mov    esi,0xb4dd2185
  40d028:	dec    ebx
  40d029:	lds    ecx,FWORD PTR [esi-0x48079603]
  40d02f:	pop    ss
  40d030:	sbb    DWORD PTR [esi+esi*2+0x10],0xbbc267da
  40d038:	fwait
  40d039:	popf   
  40d03a:	dec    esi
  40d03b:	lods   al,BYTE PTR ds:[esi]
  40d03c:	or     eax,0x196a12d1
  40d041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d042:	and    ebx,DWORD PTR [ecx]
  40d044:	ret    0xa489
  40d047:	aad    0x8c
  40d049:	shl    DWORD PTR [edi+0x34],1
  40d04c:	xor    eax,0xe9f90a1e
  40d051:	inc    eax
  40d052:	mov    al,ds:0x98753a35
  40d057:	nop
  40d058:	push   ecx
  40d059:	and    eax,0x6bd04ec4
  40d05e:	xor    bl,BYTE PTR [eax+ebp*2+0x6a]
  40d062:	jns    0x40cff6
  40d064:	pop    es
  40d065:	inc    ebx
  40d066:	rcl    al,0x9d
  40d069:	retf   0xa96e
  40d06c:	push   edi
  40d06d:	inc    ebp
  40d06e:	das    
  40d06f:	inc    eax
  40d070:	out    dx,al
  40d071:	aaa    
  40d072:	adc    DWORD PTR [edx],edi
  40d074:	push   ebx
  40d075:	mov    ch,0x7d
  40d077:	pop    ecx
  40d078:	sbb    bh,BYTE PTR [ebx+0x1e]
  40d07b:	(bad)  
  40d07c:	mov    dl,0x3f
  40d07e:	add    BYTE PTR [edi],bh
  40d080:	push   es
  40d081:	add    ecx,DWORD PTR [edx-0x68]
  40d084:	shr    BYTE PTR [eax+0x3c],1
  40d087:	popa   
  40d088:	stos   BYTE PTR es:[edi],al
  40d089:	jnp    0x40d0b5
  40d08b:	push   0xffffffe7
  40d08d:	mov    ds:0x42e3d296,eax
  40d092:	jle    0x40d098
  40d094:	mov    bl,0x4c
  40d096:	add    bh,BYTE PTR [eax+0x65a1faf7]
  40d09c:	int    0x11
  40d09e:	jno    0x40d07b
  40d0a0:	jns    0x40d05b
  40d0a2:	call   0x623e50fe
  40d0a7:	pop    esp
  40d0a8:	sti    
  40d0a9:	fldz   
  40d0ab:	xor    DWORD PTR [ecx-0x48],eax
  40d0ae:	repz xor eax,0xa5409a6a
  40d0b4:	(bad)
  40d0b7:	mov    esp,0x5fd4c50f
  40d0bc:	add    ebp,esp
  40d0be:	lock cs retf 
  40d0c1:	sub    DWORD PTR [eax+ebx*2],eax
  40d0c4:	in     eax,0x1b
  40d0c6:	adc    BYTE PTR [edx-0xc],ah
  40d0c9:	xchg   ecx,eax
  40d0ca:	call   0x9ea6:0xf8d0c550
  40d0d1:	and    eax,0x75e93e85
  40d0d6:	mov    ds:0xe70b0353,eax
  40d0db:	scas   al,BYTE PTR es:[edi]
  40d0dc:	cdq    
  40d0dd:	inc    eax
  40d0de:	cwde   
  40d0df:	jae    0x40d115
  40d0e1:	xor    DWORD PTR [esp+ebp*8],edi
  40d0e4:	jl     0x40d0a7
  40d0e6:	call   0x4e15a561
  40d0eb:	rcr    dh,cl
  40d0ed:	cmp    eax,0xdc252ed8
  40d0f2:	inc    ecx
  40d0f3:	inc    esi
  40d0f4:	js     0x40d0d5
  40d0f6:	add    esp,eax
  40d0f8:	aaa    
  40d0f9:	cmp    al,0xa6
  40d0fb:	scas   eax,DWORD PTR es:[edi]
  40d0fc:	mov    bh,0xe6
  40d0fe:	pushf  
  40d0ff:	and    al,0x3a
  40d101:	sub    ebx,ecx
  40d103:	xor    ch,cl
  40d105:	dec    edx
  40d106:	jnp    0x40d164
  40d108:	out    dx,al
  40d109:	imul   ecx,DWORD PTR [edx+0x11],0x28994ddb
  40d110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d111:	xlat   BYTE PTR ds:[ebx]
  40d112:	rol    BYTE PTR [ecx],0x56
  40d115:	pop    es
  40d116:	pop    ax
  40d118:	or     BYTE PTR [ebp+0x7f],0xdd
  40d11c:	sub    ch,BYTE PTR [edx+0x1be655e3]
  40d122:	inc    esp
  40d123:	add    eax,0xef0c5bd4
  40d128:	retf   0x7941
  40d12b:	repz sti 
  40d12d:	add    DWORD PTR [ebp+0xf8af97e],esi
  40d133:	(bad)  
  40d134:	dec    edx
  40d135:	int3   
  40d136:	(bad)  
  40d137:	test   eax,0x7e82539
  40d13c:	in     eax,0xdb
  40d13e:	xor    edi,DWORD PTR [edi-0x151c8e48]
  40d144:	sbb    esp,DWORD PTR [edx+0x5e]
  40d147:	retf   0xb347
  40d14a:	jecxz  0x40d106
  40d14c:	cmp    ebp,eax
  40d14e:	sbb    al,0xbc
  40d150:	mul    cl
  40d152:	mov    DWORD PTR [ebx+0x7a],ecx
  40d155:	push   0x3f7a8469
  40d15a:	sar    BYTE PTR [edi],0x9c
  40d15d:	mov    eax,ds:0x8d9a6fdc
  40d162:	ja     0x40d156
  40d164:	xor    al,cl
  40d166:	call   0x68ef:0xf473bc64
  40d16d:	mov    BYTE PTR [ebx],ah
  40d16f:	das    
  40d170:	push   ecx
  40d171:	cmp    BYTE PTR [ebx],dl
  40d173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d174:	fild   WORD PTR es:[ebp-0x7ae3ede0]
  40d17b:	push   ss
  40d17c:	daa    
  40d17d:	out    0x4c,eax
  40d17f:	pop    esi
  40d180:	inc    eax
  40d181:	jae    0x40d1bc
  40d183:	call   ebx
  40d185:	gs pop ds
  40d187:	xchg   esi,eax
  40d188:	rcr    BYTE PTR [eax+0x4c],0xd9
  40d18c:	dec    esp
  40d18d:	or     eax,0x58bb0d29
  40d192:	and    BYTE PTR [ebp-0x637d4f07],0x6c
  40d199:	add    edi,ebp
  40d19b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d19c:	mov    ebp,0x3b2e104f
  40d1a1:	xor    DWORD PTR [ecx-0x13d39b94],esi
  40d1a7:	pop    edx
  40d1a8:	lds    esp,FWORD PTR [edi]
  40d1aa:	scas   eax,DWORD PTR es:[edi]
  40d1ab:	mov    bl,0x3b
  40d1ad:	mov    al,ds:0x7f4ebcf6
  40d1b2:	mov    edx,DWORD PTR [ebp+0x5420558b]
  40d1b8:	mov    es,WORD PTR [ebx+0x67]
  40d1bb:	sbb    al,BYTE PTR [ecx+0x20ea6728]
  40d1c1:	xchg   DWORD PTR ss:[ebp-0x29fdc6aa],eax
  40d1c8:	icebp  
  40d1c9:	gs ss mov dh,0xe7
  40d1cd:	out    0x49,al
  40d1cf:	retf   
  40d1d0:	mov    al,es:0xa34e7caf
  40d1d6:	xor    DWORD PTR [eax],ebx
  40d1d8:	leave  
  40d1d9:	mov    DWORD PTR [edx+0x76809561],ebx
  40d1df:	add    BYTE PTR [esi+0x8],0xb0
  40d1e3:	add    al,0xa6
  40d1e5:	add    DWORD PTR [ecx-0x70b9c164],ebp
  40d1eb:	dec    ebx
  40d1ec:	sbb    DWORD PTR [eax+0x370737a8],esp
  40d1f2:	xchg   edi,eax
  40d1f3:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40d1f5:	or     al,BYTE PTR [ecx]
  40d1f7:	sar    esp,cl
  40d1f9:	jnp    0x40d1a8
  40d1fb:	out    0x99,al
  40d1fd:	data16 xor BYTE PTR [eax],ah
  40d200:	adc    DWORD PTR [edx-0x65],ecx
  40d203:	cmp    BYTE PTR fs:[edx-0x39359763],bl
  40d20a:	sbb    DWORD PTR ds:0xc0449f7,edi
  40d210:	pop    edx
  40d211:	adc    ch,BYTE PTR [edx+0x2c421b09]
  40d217:	mov    eax,ds:0xeecc6056
  40d21c:	push   0xf6c372ef
  40d221:	int    0xa6
  40d223:	or     eax,0x60854e85
  40d228:	and    bl,ah
  40d22a:	iret   
  40d22b:	clc    
  40d22c:	mov    ebx,0xce9615dd
  40d231:	inc    eax
  40d232:	shr    ebx,0x17
  40d235:	ret    
  40d236:	inc    ebp
  40d237:	mov    ss,WORD PTR [eax]
  40d239:	sbb    BYTE PTR [edx+0x5fe27aff],cl
  40d23f:	jno    0x40d1dc
  40d241:	sub    BYTE PTR [ebp+0x2f],cl
  40d244:	push   edi
  40d245:	jecxz  0x40d2b4
  40d247:	mov    BYTE PTR fs:[ecx+0x70e938f2],ah
  40d24e:	lods   al,BYTE PTR ds:[esi]
  40d24f:	out    dx,eax
  40d250:	or     al,cl
  40d252:	ins    BYTE PTR es:[edi],dx
  40d253:	and    eax,DWORD PTR [esi-0x1a]
  40d256:	jmp    0x40d212
  40d258:	jmp    0xcfc4:0xe8aca8a4
  40d25f:	adc    ah,BYTE PTR [ecx+0x4]
  40d262:	shl    ebp,0x40
  40d265:	dec    edx
  40d266:	jnp    0x40d2c9
  40d268:	nop    DWORD PTR [esi+ebx*1+0x3f]
  40d26d:	and    esp,esi
  40d26f:	call   0xd7a6:0x157fc65c
  40d276:	ret    
  40d277:	dec    esi
  40d278:	nop
  40d279:	jns    0x40d2d7
  40d27b:	pop    ebp
  40d27c:	ds push esp
  40d27e:	loop   0x40d276
  40d280:	je     0x40d250
  40d282:	loope  0x40d23e
  40d284:	pop    ss
  40d285:	sbb    BYTE PTR ds:0xdb29f704,al
  40d28b:	cmp    DWORD PTR [eax],esp
  40d28d:	(bad)  
  40d28e:	mov    ecx,DWORD PTR [ebp-0x43]
  40d291:	mov    al,ds:0x5ccc4544
  40d296:	loope  0x40d28e
  40d298:	inc    ebx
  40d299:	aad    0x76
  40d29b:	hlt    
  40d29c:	dec    esi
  40d29d:	stos   BYTE PTR es:[edi],al
  40d29e:	sub    al,ch
  40d2a0:	xor    BYTE PTR [esi+0x4fc2f329],ch
  40d2a6:	retf   0x88d1
  40d2a9:	xchg   edx,eax
  40d2aa:	(bad)  
  40d2ab:	loopne 0x40d327
  40d2ad:	test   al,0xff
  40d2af:	rep ins DWORD PTR es:[edi],dx
  40d2b1:	cld    
  40d2b2:	repz sub dl,0x6c
  40d2b6:	test   eax,0x9a6b9570
  40d2bb:	sub    al,0x91
  40d2bd:	popf   
  40d2be:	ss pop esp
  40d2c0:	sub    DWORD PTR [ebx-0x6ec3d056],esi
  40d2c6:	sbb    eax,0xb3b27fd6
  40d2cb:	ret    0xa43b
  40d2ce:	pop    ebx
  40d2cf:	add    dl,al
  40d2d1:	sub    ebp,ebx
  40d2d3:	jmp    0x40d306
  40d2d5:	sahf   
  40d2d6:	sub    ecx,DWORD PTR [esi-0x437b6fb1]
  40d2dc:	mov    edi,0xd87f8427
  40d2e1:	retf   
  40d2e2:	pusha  
  40d2e3:	pop    esi
  40d2e4:	and    dl,al
  40d2e6:	jb     0x40d2ab
  40d2e8:	sub    ebp,DWORD PTR [ebp-0x4f]
  40d2eb:	(bad)  
  40d2ec:	and    ah,BYTE PTR [edx]
  40d2ee:	sub    ch,BYTE PTR [ecx+0x4c]
  40d2f1:	add    DWORD PTR ds:0x912e2b7c,esi
  40d2f7:	loop   0x40d2fb
  40d2f9:	dec    ecx
  40d2fa:	popf   
  40d2fb:	sbb    BYTE PTR [edi],al
  40d2fd:	sar    BYTE PTR [ebp+0x42],0x43
  40d301:	fwait
  40d302:	std    
  40d303:	xchg   ebp,eax
  40d304:	lds    esp,FWORD PTR [edx]
  40d306:	fwait
  40d307:	les    edx,FWORD PTR [ecx]
  40d309:	cmc    
  40d30a:	fidiv  DWORD PTR [ecx+0x1fe98ac7]
  40d310:	inc    ebp
  40d311:	nop
  40d312:	inc    edi
  40d313:	sub    DWORD PTR [esp+edi*1-0x45d7cfb9],ebp
  40d31a:	mov    esp,0x9ac8185d
  40d31f:	jle    0x40d30b
  40d321:	ss shr ecx,1
  40d324:	dec    esp
  40d325:	arpl   WORD PTR [edx],dx
  40d327:	jnp    0x40d368
  40d329:	jle    0x40d386
  40d32b:	enter  0x1e40,0x10
  40d32f:	jbe    0x40d2c9
  40d331:	mov    edi,0x6206d87e
  40d336:	add    al,0x66
  40d338:	or     cl,BYTE PTR [edi+eax*8+0xe914004]
  40d33f:	(bad)  
  40d340:	into   
  40d341:	jl     0x40d389
  40d343:	pop    edi
  40d344:	and    ebp,DWORD PTR ds:0x17eb6ff1
  40d34a:	pop    edi
  40d34b:	dec    esp
  40d34c:	xor    eax,0xbaa8c9cf
  40d351:	mov    ch,BYTE PTR [eax+ebx*2]
  40d354:	pop    ss
  40d355:	dec    eax
  40d356:	jle    0x40d3c0
  40d358:	jmp    0x5b6b44dc
  40d35d:	popa   
  40d35e:	dec    ebp
  40d35f:	push   esi
  40d360:	xor    al,0x31
  40d362:	jo     0x7d1955e7
  40d368:	add    eax,0x8a0ab3fc
  40d36d:	adc    eax,DWORD PTR [edx+0x45]
  40d370:	add    al,0x14
  40d372:	in     al,dx
  40d373:	and    ah,bl
  40d375:	jns    0x40d317
  40d377:	xchg   esp,eax
  40d378:	jmp    0x290:0xb3d887b5
  40d37f:	cmp    bh,BYTE PTR [edx+0x0]
  40d382:	add    ch,ch
  40d384:	adc    edi,DWORD PTR [eax-0x589dbb57]
  40d38a:	gs sbb eax,0xdb551987
  40d390:	gs pop eax
  40d392:	mov    bh,0xb6
  40d394:	loope  0x40d317
  40d396:	cmp    dh,al
  40d398:	sub    eax,0x56d38981
  40d39d:	inc    DWORD PTR [eax]
  40d39f:	cld    
  40d3a0:	xchg   esp,eax
  40d3a1:	lods   al,BYTE PTR ds:[esi]
  40d3a2:	mov    ah,0xe8
  40d3a4:	push   edx
  40d3a5:	test   DWORD PTR [edi-0x3e],edi
  40d3a8:	adc    edi,DWORD PTR gs:[ecx+esi*2]
  40d3ac:	add    al,0xe0
  40d3ae:	inc    esi
  40d3af:	pop    edx
  40d3b0:	lahf   
  40d3b1:	jmp    0x40d368
  40d3b3:	imul   ebx,DWORD PTR [eax-0x33417692],0xffffffde
  40d3ba:	push   es
  40d3bb:	jmp    0x40d3b5
  40d3bd:	pop    edi
  40d3be:	sbb    eax,0x176f9abb
  40d3c3:	inc    esp
  40d3c4:	dec    edx
  40d3c5:	pushf  
  40d3c6:	adc    BYTE PTR [ecx],al
  40d3c8:	dec    edi
  40d3c9:	sbb    ebp,edx
  40d3cb:	sub    BYTE PTR [esi],dh
  40d3cd:	pop    esp
  40d3ce:	pop    edi
  40d3cf:	stos   DWORD PTR es:[edi],eax
  40d3d0:	addr16 add al,0xc8
  40d3d3:	jp     0x40d3ab
  40d3d5:	cmp    DWORD PTR [ebx+0x57],ecx
  40d3d8:	sub    al,0x96
  40d3da:	in     eax,0x18
  40d3dc:	jg     0x40d37a
  40d3de:	mov    es,edx
  40d3e0:	or     eax,DWORD PTR [ebp+0x6e613cdc]
  40d3e6:	push   ebp
  40d3e7:	push   edx
  40d3e8:	dec    esi
  40d3e9:	xor    DWORD PTR [eax-0x6df75826],esp
  40d3ef:	mov    bl,0x81
  40d3f1:	add    al,0x38
  40d3f3:	xlat   BYTE PTR ds:[ebx]
  40d3f4:	dec    esi
  40d3f5:	mov    cl,0x5f
  40d3f7:	xor    ebp,esp
  40d3f9:	pop    es
  40d3fa:	shl    DWORD PTR [ebp+0x79],cl
  40d3fd:	pushf  
  40d3fe:	shl    esi,1
  40d400:	inc    edx
  40d401:	mov    esi,0x4c12d1b9
  40d406:	in     al,0xea
  40d408:	add    DWORD PTR [esi+0x66042b76],ebx
  40d40e:	(bad)  
  40d40f:	jmp    0xa88d:0xeb7994aa
  40d416:	mov    edx,esi
  40d418:	(bad)  
  40d419:	scas   eax,DWORD PTR es:[edi]
  40d41a:	push   cs
  40d41b:	bswap  ebx
  40d41d:	mov    WORD PTR [edi+0xf3eba2b],?
  40d423:	pop    esp
  40d424:	fnstenv [edx+0x2995af64]
  40d42a:	mov    bl,0x8c
  40d42c:	imul   ebp,DWORD PTR [esi-0x2e37b30],0x7423d5c8
  40d436:	mov    ebx,0x2ac4bcc0
  40d43b:	(bad)  
  40d43c:	xor    DWORD PTR [ebx-0x4000f951],ebp
  40d442:	imul   edx,eax,0x47
  40d445:	sub    al,ah
  40d447:	add    ebp,DWORD PTR [ecx+0x40fa1289]
  40d44d:	ja     0x40d4cc
  40d44f:	pop    ss
  40d450:	call   0x1197d4a
  40d455:	push   eax
  40d456:	daa    
  40d457:	push   ds
  40d458:	addr16 mov esp,0xd555ad32
  40d45e:	pop    ds
  40d45f:	rcl    BYTE PTR [edi-0x3c],cl
  40d462:	cmp    al,0x47
  40d464:	mov    bl,0x46
  40d466:	and    eax,DWORD PTR [edi-0x26ab05ad]
  40d46c:	adc    DWORD PTR [eax],esp
  40d46e:	repnz inc ebx
  40d470:	jecxz  0x40d4e2
  40d472:	es test dh,bl
  40d475:	sbb    BYTE PTR [eax-0x3b29c308],ah
  40d47b:	push   esi
  40d47c:	cmp    BYTE PTR [eax-0x5f8e7f8],0x46
  40d483:	push   0xffffffe4
  40d485:	ins    DWORD PTR es:[edi],dx
  40d486:	xor    DWORD PTR [esi+0x7ed3c477],ecx
  40d48c:	or     DWORD PTR [esi-0x1821d017],edx
  40d492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d493:	push   ebp
  40d494:	outs   dx,BYTE PTR ds:[esi]
  40d495:	push   esp
  40d496:	fidivr DWORD PTR [eax]
  40d498:	inc    eax
  40d499:	mov    WORD PTR [ecx],es
  40d49b:	push   ds
  40d49c:	cmp    BYTE PTR [edi],al
  40d49e:	mov    DWORD PTR [edi+ebx*1],esi
  40d4a1:	cld    
  40d4a2:	in     al,dx
  40d4a3:	cmp    DWORD PTR [ebx+ebp*2],ebx
  40d4a6:	push   cx
  40d4a8:	out    0xd8,al
  40d4aa:	mov    bl,0x53
  40d4ac:	dec    esi
  40d4ad:	push   0xffffff8c
  40d4af:	data16 (bad) 
  40d4b1:	push   esi
  40d4b2:	fisub  WORD PTR [ebp-0x7d3d0e6c]
  40d4b8:	xor    BYTE PTR [ebx+0x4e2b46a9],0x10
  40d4bf:	in     eax,0x40
  40d4c1:	mov    gs,WORD PTR [eax+0x6d40544a]
  40d4c7:	in     eax,dx
  40d4c8:	sbb    eax,DWORD PTR [edi-0x55947896]
  40d4ce:	pop    ss
  40d4cf:	mov    ch,0x90
  40d4d1:	xchg   esi,eax
  40d4d2:	outs   dx,DWORD PTR ds:[esi]
  40d4d3:	stos   DWORD PTR es:[edi],eax
  40d4d4:	push   cs
  40d4d5:	ins    BYTE PTR es:[edi],dx
  40d4d6:	sbb    al,0xda
  40d4d8:	push   ds
  40d4d9:	sbb    al,0x4a
  40d4db:	das    
  40d4dc:	fistp  QWORD PTR [edx]
  40d4de:	adc    DWORD PTR [edx+edx*2],ebx
  40d4e1:	cld    
  40d4e2:	mov    ds:0x9656f2c3,eax
  40d4e7:	popf   
  40d4e8:	aas    
  40d4e9:	pop    esi
  40d4ea:	xchg   edx,eax
  40d4eb:	bound  edi,QWORD PTR ds:0x1c381431
  40d4f1:	inc    DWORD PTR [edi+0x4784a120]
  40d4f7:	jl     0x40d4ff
  40d4f9:	scas   al,BYTE PTR es:[edi]
  40d4fa:	and    al,0x5a
  40d4fc:	push   ecx
  40d4fd:	dec    BYTE PTR [ecx+edx*2]
  40d500:	ror    DWORD PTR [eax],1
  40d502:	mov    bl,0x41
  40d504:	push   0xbecd7a29
  40d509:	inc    ebp
  40d50a:	sbb    cl,BYTE PTR [ebx]
  40d50c:	and    edi,DWORD PTR [eax]
  40d50e:	(bad)  
  40d50f:	mov    eax,ds:0xf419b316
  40d514:	add    esp,DWORD PTR [ecx-0x31]
  40d517:	push   0x6b
  40d519:	dec    eax
  40d51a:	enter  0xce5f,0x57
  40d51e:	es clc 
  40d520:	outs   dx,DWORD PTR ds:[esi]
  40d521:	aaa    
  40d522:	mov    edi,DWORD PTR [eax-0x64da15bd]
  40d528:	out    dx,al
  40d529:	mov    dl,0x5e
  40d52b:	mov    BYTE PTR [esi+0x74],dh
  40d52e:	cdq    
  40d52f:	jbe    0x40d586
  40d531:	mov    eax,0x70b5f582
  40d536:	fbld   TBYTE PTR [esi]
  40d538:	sub    bh,BYTE PTR [ecx-0x57]
  40d53b:	(bad)
  40d53f:	xor    edx,DWORD PTR [ebx+0x24f92281]
  40d545:	inc    esi
  40d546:	and    DWORD PTR [eax-0x51],ebp
  40d549:	mov    ah,dh
  40d54b:	es push eax
  40d54d:	outs   dx,DWORD PTR ds:[esi]
  40d54e:	inc    eax
  40d54f:	iret   
  40d550:	jecxz  0x40d51f
  40d552:	xor    al,0xd7
  40d554:	stos   DWORD PTR es:[edi],eax
  40d555:	leave  
  40d556:	test   bl,dh
  40d558:	lds    ecx,FWORD PTR [ecx]
  40d55a:	scas   al,BYTE PTR es:[edi]
  40d55b:	mov    ch,BYTE PTR [ebp+edx*1-0x3d33c3d4]
  40d562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d563:	cmp    al,0xb4
  40d565:	mov    ds:0x246c6a30,eax
  40d56a:	inc    edx
  40d56b:	push   esi
  40d56c:	pusha  
  40d56d:	adc    DWORD PTR [edi+0x19ac4e7e],ecx
  40d573:	cmp    BYTE PTR [ecx-0x6d],0xdc
  40d577:	and    al,0x3d
  40d579:	mul    BYTE PTR [esi+0x477c5376]
  40d57f:	or     DWORD PTR [ecx-0x15ddc1a5],eax
  40d585:	push   eax
  40d586:	push   ds
  40d587:	sub    BYTE PTR [esi],al
  40d589:	mul    ch
  40d58b:	dec    esi
  40d58c:	rol    eax,cl
  40d58e:	or     eax,0xaed45b5
  40d593:	and    ch,BYTE PTR [esi+0x23]
  40d596:	dec    edi
  40d597:	adc    dl,0xba
  40d59a:	cmp    cl,ch
  40d59c:	jecxz  0x40d60b
  40d59e:	pop    ebp
  40d59f:	push   ebp
  40d5a0:	fild   QWORD PTR [edx]
  40d5a2:	dec    BYTE PTR [edi]
  40d5a4:	mov    dh,0xf0
  40d5a6:	lea    esi,[edi+ecx*8+0x1c]
  40d5aa:	jns    0x40d5da
  40d5ac:	and    dl,BYTE PTR [ebp-0x31aa5d70]
  40d5b2:	loopne 0x40d5a6
  40d5b4:	out    dx,eax
  40d5b5:	aad    0x15
  40d5b7:	daa    
  40d5b8:	scas   eax,DWORD PTR es:[edi]
  40d5b9:	fst    DWORD PTR [ebx+0x406b93e8]
  40d5bf:	inc    ebx
  40d5c0:	xor    al,0xd9
  40d5c2:	ds xchg ebx,eax
  40d5c4:	jbe    0x40d5d6
  40d5c6:	pop    ebp
  40d5c7:	lahf   
  40d5c8:	shl    ebp,0x98
  40d5cb:	jp     0x40d559
  40d5cd:	mov    cl,0x14
  40d5cf:	push   edi
  40d5d0:	push   eax
  40d5d1:	lea    edx,[ebx-0x5701e2df]
  40d5d7:	loop   0x40d5bf
  40d5d9:	add    esp,DWORD PTR [edx+0x13]
  40d5dc:	out    0x51,al
  40d5de:	pop    ebx
  40d5df:	push   edi
  40d5e0:	idiv   BYTE PTR [edi+eax*2-0x8]
  40d5e4:	fwait
  40d5e5:	mov    eax,ds:0x1c28bdbd
  40d5ea:	pop    ecx
  40d5eb:	mov    ah,bh
  40d5ed:	xor    DWORD PTR [ecx],edx
  40d5ef:	xor    DWORD PTR [eax],eax
  40d5f1:	pusha  
  40d5f2:	arpl   WORD PTR [ebp+0x36],dx
  40d5f5:	or     eax,0x76ccf996
  40d5fa:	mov    ecx,0x66a4761f
  40d5ff:	xor    ebp,esp
  40d601:	arpl   WORD PTR [ecx+0x55b9160b],bx
  40d607:	add    ah,BYTE PTR [edx]
  40d609:	fldenv ds:[ebx+0x35]
  40d60d:	jnp    0x40d5e8
  40d60f:	adc    bh,BYTE PTR [edi-0x23]
  40d612:	sub    BYTE PTR [eax+eiz*8],dl
  40d615:	into   
  40d616:	pop    edx
  40d617:	and    ebx,DWORD PTR [ebp+0x41]
  40d61a:	jg     0x40d60f
  40d61c:	shl    BYTE PTR [eax-0x4d],cl
  40d61f:	sahf   
  40d620:	popf   
  40d621:	mov    cl,0xe0
  40d623:	push   cs
  40d624:	pushf  
  40d625:	or     al,0x98
  40d627:	push   es
  40d628:	xchg   ebx,eax
  40d629:	pop    esi
  40d62a:	dec    esi
  40d62b:	jns    0x40d5b3
  40d62d:	mov    dl,0xd2
  40d62f:	ins    DWORD PTR es:[edi],dx
  40d630:	(bad)  
  40d631:	push   eax
  40d632:	ja     0x40d615
  40d634:	(bad)  
  40d635:	mov    cl,0x4d
  40d637:	sub    eax,0x9be30fe2
  40d63c:	shr    DWORD PTR [esi+0x20],cl
  40d63f:	lods   eax,DWORD PTR ds:[esi]
  40d640:	or     eax,0xb2d79397
  40d645:	xchg   edx,eax
  40d646:	and    DWORD PTR [ecx+0x4a],0xffffffb9
  40d64a:	sub    DWORD PTR [edi],esp
  40d64c:	out    dx,eax
  40d64d:	fiadd  WORD PTR [esi]
  40d64f:	pop    ds
  40d650:	test   dh,dh
  40d652:	cmp    DWORD PTR [ecx-0x3799db25],eax
  40d658:	sub    ah,0xe0
  40d65b:	out    0x0,eax
  40d65d:	pop    edx
  40d65e:	cdq    
  40d65f:	out    0xf5,eax
  40d661:	cwde   
  40d662:	aam    0xa5
  40d664:	inc    ecx
  40d665:	mov    ebp,0x4104f077
  40d66a:	push   es
  40d66b:	sbb    ecx,DWORD PTR [ebp-0x59]
  40d66e:	inc    edx
  40d66f:	mov    esi,0x5fe619ee
  40d674:	sar    DWORD PTR [ebx+edx*2-0x3cb14cdb],cl
  40d67b:	jns    0x40d6eb
  40d67d:	mov    esi,0x757ef232
  40d682:	sbb    BYTE PTR [edx+0x71],dh
  40d685:	dec    ebp
  40d686:	jl     0x40d702
  40d688:	mov    ebx,DWORD PTR ds:0x1a625e29
  40d68e:	xor    esi,DWORD PTR ds:0x1fd13a89
  40d694:	rol    DWORD PTR [ebx],1
  40d696:	arpl   cx,bp
  40d698:	sbb    eax,0xefefda49
  40d69d:	(bad)  
  40d69e:	(bad)  
  40d69f:	sbb    al,BYTE PTR [ecx-0x22]
  40d6a2:	sti    
  40d6a3:	cdq    
  40d6a4:	push   ss
  40d6a5:	imul   cl
  40d6a7:	xchg   DWORD PTR [esi+0x66176356],esp
  40d6ad:	adc    al,0x1
  40d6af:	popa   
  40d6b0:	inc    edx
  40d6b1:	fwait
  40d6b2:	pushf  
  40d6b3:	mov    cl,0xfa
  40d6b5:	outs   dx,BYTE PTR ds:[esi]
  40d6b6:	loop   0x40d71d
  40d6b8:	cld    
  40d6b9:	retf   
  40d6ba:	aad    0x1b
  40d6bc:	lods   eax,DWORD PTR ds:[esi]
  40d6bd:	inc    edi
  40d6be:	sar    BYTE PTR [edx+0x4ab4aba7],0x4e
  40d6c5:	mov    BYTE PTR [ecx+0x71],al
  40d6c8:	imul   eax,DWORD PTR [ecx],0x79ac3ce8
  40d6ce:	push   eax
  40d6cf:	xor    ch,bh
  40d6d1:	fiadd  DWORD PTR [edi]
  40d6d3:	mov    ecx,0x8cc55702
  40d6d8:	sbb    eax,DWORD PTR [eax]
  40d6da:	fidivr DWORD PTR [edx-0x6b]
  40d6dd:	pop    edx
  40d6de:	div    edx
  40d6e0:	ret    
  40d6e1:	(bad)  
  40d6e2:	sub    al,0x8
  40d6e4:	lahf   
  40d6e5:	imul   BYTE PTR [edx+esi*1+0x53d49206]
  40d6ec:	jb     0x40d6ed
  40d6ee:	add    al,0xa5
  40d6f0:	(bad)  
  40d6f1:	jae    0x40d682
  40d6f3:	(bad)  
  40d6f4:	js     0x40d6a1
  40d6f6:	cmc    
  40d6f7:	outs   dx,BYTE PTR ds:[esi]
  40d6f8:	mov    bh,0xa9
  40d6fa:	outs   dx,DWORD PTR ds:[esi]
  40d6fb:	mov    bh,0x8
  40d6fd:	push   edi
  40d6fe:	fist   WORD PTR [edi+0x7d]
  40d701:	xlat   BYTE PTR ds:[ebx]
  40d702:	call   0x5fd6:0xf09b89
  40d709:	push   ss
  40d70a:	sub    BYTE PTR [edx-0x78],0xe4
  40d70e:	repz cmp BYTE PTR [esi+0x35],al
  40d712:	add    BYTE PTR [edx+0x596aacec],0x6b
  40d719:	gs loop 0x40d6b0
  40d71c:	inc    eax
  40d71d:	fistp  DWORD PTR [ebp+edi*2+0x5f4ba501]
  40d724:	or     dh,dh
  40d726:	adc    eax,0xc02fe4d7
  40d72b:	adc    esp,eax
  40d72d:	rep ins BYTE PTR es:[edi],dx
  40d72f:	mov    ebp,0x22933e78
  40d734:	cmc    
  40d735:	mov    al,ds:0x2b9b3e69
  40d73a:	sar    DWORD PTR [ebx-0x1e4ccad2],1
  40d740:	shl    BYTE PTR [edx+0x61],0x7
  40d744:	mov    esp,0x315aec19
  40d749:	stc    
  40d74a:	test   DWORD PTR [eax],ebp
  40d74c:	jns    0x40d6e2
  40d74e:	in     eax,0xab
  40d750:	jge    0x40d762
  40d752:	inc    ebx
  40d753:	xlat   BYTE PTR ds:[ebx]
  40d754:	sqrtps xmm2,XMMWORD PTR [edx-0x35]
  40d758:	xor    edi,edi
  40d75a:	sub    BYTE PTR [ebp+ebp*8-0x29],al
  40d75e:	loope  0x40d748
  40d760:	sbb    ebp,ebx
  40d762:	pcmpgtb mm1,QWORD PTR [ecx-0x567292c1]
  40d769:	mov    dh,0xf3
  40d76b:	test   DWORD PTR [eax],eax
  40d76d:	test   DWORD PTR ds:[ebx+0x1d],0x4beb2f97
  40d775:	ja     0x40d793
  40d777:	lods   al,BYTE PTR ds:[esi]
  40d778:	cmp    ebx,DWORD PTR [ecx-0x5e46c047]
  40d77e:	cmp    DWORD PTR [ebx],edi
  40d780:	mov    ebx,0x7e5ada54
  40d785:	mov    ds:0x5785a0c,eax
  40d78a:	in     eax,0x2b
  40d78c:	dec    ebx
  40d78d:	aaa    
  40d78e:	sub    al,0x74
  40d790:	and    BYTE PTR [edi+0x6acb2441],ch
  40d796:	xchg   ecx,eax
  40d797:	mov    ebx,DWORD PTR [edi]
  40d799:	jae    0x40d7ec
  40d79b:	pop    ss
  40d79c:	pop    esi
  40d79d:	ftst   
  40d79f:	xlat   BYTE PTR ds:[ebx]
  40d7a0:	rcr    BYTE PTR [ebp+ebx*8-0x47],cl
  40d7a4:	shl    ah,cl
  40d7a6:	sub    ebp,esi
  40d7a8:	mov    al,ds:0x12c4d416
  40d7ad:	jb     0x40d73a
  40d7af:	test   eax,0xb8a37fd7
  40d7b4:	jle    0x40d74b
  40d7b6:	pop    ebp
  40d7b7:	fadd   QWORD PTR [ecx]
  40d7b9:	cmp    BYTE PTR [esi-0x2c],bl
  40d7bc:	sub    bh,BYTE PTR [edx+edx*1]
  40d7bf:	or     BYTE PTR [edx],bh
  40d7c1:	hlt    
  40d7c2:	inc    eax
  40d7c3:	or     dl,ah
  40d7c5:	mov    esi,0x71bd7b41
  40d7ca:	pop    edi
  40d7cb:	std    
  40d7cc:	xchg   ebp,eax
  40d7cd:	lock or bl,BYTE PTR [ebx-0x55]
  40d7d1:	xchg   BYTE PTR [edx],bl
  40d7d3:	in     al,dx
  40d7d4:	sub    BYTE PTR [ebp-0x50],al
  40d7d7:	stos   DWORD PTR es:[edi],eax
  40d7d8:	mov    cl,0xde
  40d7da:	lahf   
  40d7db:	jmp    0x40d792
  40d7dd:	arpl   WORD PTR [ebp-0x6db662c4],bx
  40d7e3:	push   ebx
  40d7e4:	fnstenv [ecx+0xd]
  40d7e7:	(bad)  
  40d7e8:	mov    eax,0x24c5da79
  40d7ed:	mov    ds:0x2b7d79c6,eax
  40d7f2:	je     0x40d801
  40d7f4:	addr16 xor eax,0xf43a73d
  40d7fa:	shl    edi,cl
  40d7fc:	int    0x10
  40d7fe:	xchg   ebp,eax
  40d7ff:	retf   0x85af
  40d802:	jmp    0xd85a7c71
  40d807:	dec    esi
  40d808:	mov    eax,0xe0ab6b7b
  40d80d:	jmp    0x3d16:0x7e427892
  40d814:	(bad)  
  40d815:	(bad)  
  40d816:	jp     0x40d892
  40d818:	adc    DWORD PTR [ebp+0x5e],ebx
  40d81b:	cs push esi
  40d81d:	sub    bl,BYTE PTR [edx-0x2c]
  40d820:	mov    esi,0xb99a5a82
  40d825:	push   ebx
  40d826:	mov    esi,0x6066f634
  40d82b:	dec    ebp
  40d82c:	lea    eax,[esi]
  40d82e:	push   ebp
  40d82f:	test   edi,esp
  40d831:	lea    esi,[edi]
  40d833:	and    DWORD PTR [edx+0x7e1e4d41],edi
  40d839:	out    dx,eax
  40d83a:	rcr    DWORD PTR [edx+ecx*1+0x77],cl
  40d83e:	sub    eax,edi
  40d840:	push   ds
  40d841:	ror    BYTE PTR [edx+0x5],0xf0
  40d845:	in     al,0x9b
  40d847:	jbe    0x40d881
  40d849:	push   ebx
  40d84a:	(bad)  
  40d84b:	cs shl edx,cl
  40d84e:	push   ecx
  40d84f:	test   al,0x8c
  40d851:	mov    ah,0xbc
  40d853:	scas   al,BYTE PTR es:[edi]
  40d854:	mov    WORD PTR [ebp+edi*4-0x60],ds
  40d858:	sbb    BYTE PTR [ecx+0x7db01773],cl
  40d85e:	aam    0xaf
  40d860:	add    DWORD PTR [edi+edx*1-0x31b2f87b],0xa1190afb
  40d86b:	inc    eax
  40d86c:	mov    ecx,0x80f530f9
  40d871:	enter  0x1fda,0xd3
  40d875:	mov    esi,0x21cc2994
  40d87a:	rcr    DWORD PTR [edx-0x7d],0x87
  40d87e:	cmc    
  40d87f:	das    
  40d880:	mov    ds,WORD PTR [edi+0x47407bf5]
  40d886:	imul   edi,DWORD PTR [esi+0x7fdc47e3],0x7f4a8aeb
  40d890:	aaa    
  40d891:	push   edx
  40d892:	mov    bl,0x54
  40d894:	call   0x1f3:0xe6c9f564
  40d89b:	lods   eax,DWORD PTR ds:[esi]
  40d89c:	pusha  
  40d89d:	jb     0x40d85a
  40d89f:	and    esp,DWORD PTR [ebx-0xc]
  40d8a2:	add    DWORD PTR [ecx-0x1011df7d],edx
  40d8a8:	mov    DWORD PTR [edi+0x1ab82c3f],edx
  40d8ae:	jno    0x40d860
  40d8b0:	lea    edi,[ecx]
  40d8b2:	stc    
  40d8b3:	add    dh,BYTE PTR [edi-0x18]
  40d8b6:	mov    eax,0x83ee9ced
  40d8bb:	push   ds
  40d8bc:	jb     0x40d8fe
  40d8be:	aad    0xaa
  40d8c0:	or     DWORD PTR [edi+eax*8+0x21be9188],edi
  40d8c7:	or     dl,BYTE PTR [ebx]
  40d8c9:	or     eax,0x38702805
  40d8ce:	in     al,dx
  40d8cf:	jne    0x40d8d0
  40d8d1:	mov    ch,0xa3
  40d8d3:	sbb    al,0x7c
  40d8d5:	not    DWORD PTR [eax+0x72f69c1f]
  40d8db:	and    BYTE PTR [esp+ebp*2+0x18],dh
  40d8df:	js     0x40d8eb
  40d8e1:	jl     0x40d8e1
  40d8e3:	jmp    0xbf0c0ea6
  40d8e8:	dec    edi
  40d8e9:	sbb    eax,0xd7add0d6
  40d8ee:	sub    BYTE PTR [eax-0x2f],al
  40d8f1:	mov    edi,DWORD PTR [edi+0x3b]
  40d8f4:	data16 add BYTE PTR [eax],dh
  40d8f7:	shl    DWORD PTR [edx],1
  40d8f9:	xlat   BYTE PTR ds:[ebx]
  40d8fa:	xchg   DWORD PTR [edx-0x6958d358],ebp
  40d900:	ss test eax,0x982f73a1
  40d906:	iret   
  40d907:	fsubr  QWORD PTR [bx+si-0x73]
  40d90b:	mov    edi,0x31e05785
  40d910:	scas   eax,DWORD PTR es:[edi]
  40d911:	pop    eax
  40d912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d913:	shl    DWORD PTR [edi-0x2c279312],0x1f
  40d91a:	mov    BYTE PTR [edx+0x6e],0x75
  40d91e:	or     al,0x67
  40d920:	xor    DWORD PTR [ebx-0x12],edi
  40d923:	nop
  40d924:	gs scas al,BYTE PTR es:[edi]
  40d926:	cmp    al,0x85
  40d928:	jb     0x40d8d5
  40d92a:	mov    al,ds:0x519570fc
  40d92f:	jo     0x40d8f2
  40d931:	cmp    ebx,edi
  40d933:	aas    
  40d934:	sbb    ecx,DWORD PTR [esi+ebp*1]
  40d937:	hlt    
  40d938:	jmp    0x40d8e6
  40d93a:	adc    ecx,DWORD PTR [ebp+0x79]
  40d93d:	mov    esi,0xe86be221
  40d942:	inc    ebx
  40d943:	xor    esp,ecx
  40d945:	pop    edi
  40d946:	test   bl,0x74
  40d949:	cli    
  40d94a:	pushf  
  40d94b:	sbb    DWORD PTR [ecx],edi
  40d94d:	xchg   BYTE PTR [edx+eax*1+0x48a06efb],dl
  40d954:	lock jge 0x40d974
  40d957:	and    esi,esp
  40d959:	(bad)  
  40d95a:	mov    al,0xb
  40d95c:	retf   0xbe2a
  40d95f:	out    dx,al
  40d960:	ror    DWORD PTR [esp+edx*4+0x58],0x22
  40d965:	sbb    BYTE PTR [ebx-0x5e],dh
  40d968:	inc    ecx
  40d969:	scas   eax,DWORD PTR es:[edi]
  40d96a:	in     al,dx
  40d96b:	in     al,0x36
  40d96d:	adc    BYTE PTR [edi],0x19
  40d970:	in     eax,dx
  40d971:	test   eax,0xee9a4ae9
  40d976:	mov    edx,0xc0284267
  40d97b:	or     DWORD PTR [bp+si],eax
  40d97e:	xchg   ebx,eax
  40d97f:	mov    ebp,0xe9ba3ae3
  40d984:	dec    esp
  40d985:	sbb    esi,0xffffff84
  40d988:	cdq    
  40d989:	add    edi,DWORD PTR [ecx]
  40d98b:	fdiv   DWORD PTR [ebp+0x7c38bfe8]
  40d991:	test   eax,0x2c577390
  40d996:	arpl   WORD PTR [eax],bp
  40d998:	mov    bh,0xb6
  40d99a:	inc    edi
  40d99b:	scas   ax,WORD PTR es:[edi]
  40d99d:	ja     0x40d932
  40d99f:	dec    edx
  40d9a0:	add    ecx,DWORD PTR [ebx+0x51]
  40d9a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9a4:	xor    eax,0x3e17c653
  40d9a9:	cmp    BYTE PTR [ebx+esi*8+0x11],0x7f
  40d9ae:	jle    0x40d9c7
  40d9b0:	test   BYTE PTR [ebp-0x341806d0],al
  40d9b6:	in     al,0x62
  40d9b8:	sub    bl,dh
  40d9ba:	inc    edx
  40d9bb:	xchg   edx,eax
  40d9bc:	js     0x40da21
  40d9be:	inc    esp
  40d9bf:	adc    ch,bl
  40d9c1:	mov    al,ds:0x12c0c60c
  40d9c6:	push   edx
  40d9c7:	ror    dh,1
  40d9c9:	jg     0x40d99e
  40d9cb:	sbb    ebp,esp
  40d9cd:	jbe    0x40d9f1
  40d9cf:	std    
  40d9d0:	mov    ecx,0xad773a8a
  40d9d5:	div    BYTE PTR [ebx-0x4d]
  40d9d8:	mov    BYTE PTR [edi-0x33],ch
  40d9db:	cmc    
  40d9dc:	add    eax,0xa6fae748
  40d9e1:	xor    DWORD PTR [edi+0x8],esi
  40d9e4:	adc    eax,0xd51c7e2d
  40d9e9:	dec    ecx
  40d9ea:	fldenv [edx-0x7807f62e]
  40d9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9f1:	retf   
  40d9f2:	cmp    esi,DWORD PTR [ecx+0x34bfbed5]
  40d9f8:	pop    ebx
  40d9f9:	mov    ds:0x31acb796,eax
  40d9fe:	and    BYTE PTR [ecx+edi*8-0x59],dl
  40da02:	int3   
  40da03:	xchg   ebp,eax
  40da04:	mov    dh,0xdb
  40da06:	shl    BYTE PTR [esi+0x3b8ad1c9],0xff
  40da0d:	xchg   ah,ch
  40da0f:	xchg   DWORD PTR [ecx],edx
  40da11:	not    BYTE PTR [esi+0x2c69c1bc]
  40da17:	or     BYTE PTR [ecx+edx*2],bl
  40da1a:	sbb    al,0xad
  40da1c:	call   0xcfd81e88
  40da21:	inc    edi
  40da22:	icebp  
  40da23:	mov    al,ds:0x3bf6cfb8
  40da28:	pop    ebx
  40da29:	push   ebx
  40da2a:	push   es
  40da2b:	inc    esp
  40da2c:	push   esi
  40da2d:	jb     0x40da77
  40da2f:	mov    bl,0x30
  40da31:	daa    
  40da32:	mov    dh,0xf
  40da34:	inc    ebp
  40da35:	cmp    BYTE PTR [ecx+0x19],bl
  40da38:	shl    DWORD PTR [esi+0x34bdd315],cl
  40da3e:	and    al,0x67
  40da40:	int3   
  40da41:	js     0x40dab0
  40da43:	scas   al,BYTE PTR es:[edi]
  40da44:	into   
  40da45:	daa    
  40da46:	fild   WORD PTR [ebx-0x659560d7]
  40da4c:	(bad)
  40da50:	cmc    
  40da51:	in     eax,0x21
  40da53:	push   ss
  40da54:	mov    ds:0x6ccd71c2,al
  40da59:	mov    ?,WORD PTR [ebx-0x6ada51ca]
  40da5f:	push   0x25
  40da61:	ficom  DWORD PTR [edx-0x573b2b59]
  40da67:	jns    0x40daa4
  40da69:	(bad)  cs:[ebx]
  40da6c:	hlt    
  40da6d:	inc    ebx
  40da6f:	out    dx,eax
  40da70:	daa    
  40da71:	aaa    
  40da72:	pop    ebp
  40da73:	cwde   
  40da74:	xchg   ecx,eax
  40da75:	out    dx,al
  40da76:	jmp    0x37f9776b
  40da7b:	mov    edx,0x3639766f
  40da80:	(bad)  
  40da81:	out    dx,al
  40da82:	push   cs
  40da83:	scas   eax,DWORD PTR es:[di]
  40da85:	cmp    BYTE PTR [eax+0x3c],bl
  40da88:	push   cs
  40da89:	test   edx,edx
  40da8b:	push   esp
  40da8c:	fsubr  QWORD PTR [ebx+0x35]
  40da8f:	js     0x40da9d
  40da91:	push   eax
  40da92:	fcomp  QWORD PTR [ebp+0x78]
  40da95:	stc    
  40da96:	loopne 0x40dad9
  40da98:	ja     0x40da3d
  40da9a:	data16 neg dh
  40da9d:	pop    edi
  40da9e:	stc    
  40da9f:	out    0xde,al
  40daa1:	jg     0x40da7c
  40daa3:	push   esi
  40daa4:	xchg   ebx,eax
  40daa5:	ins    DWORD PTR es:[edi],dx
  40daa6:	dec    eax
  40daa7:	add    eax,0xfe8a3db9
  40daac:	pop    eax
  40daad:	jo     0x40dada
  40daaf:	fs mov dl,0xa6
  40dab2:	xchg   esi,eax
  40dab3:	inc    eax
  40dab4:	sbb    eax,0x24386008
  40dab9:	xor    al,BYTE PTR [ecx-0x62]
  40dabc:	mov    edx,0x4358e7d0
  40dac1:	jmp    0x40da6a
  40dac3:	mov    esi,0x730cc970
  40dac8:	fidiv  WORD PTR [esi+ecx*2]
  40dacb:	ins    BYTE PTR es:[edi],dx
  40dacc:	dec    eax
  40dacd:	push   bx
  40dacf:	push   ss
  40dad0:	mov    ecx,0x5b036964
  40dad5:	jge    0x40daf7
  40dad7:	jne    0x40daf4
  40dad9:	xor    esi,esi
  40dadb:	pop    es
  40dadc:	push   0xffffffd8
  40dade:	mov    eax,ds:0xe7e84d81
  40dae3:	sbb    al,0x1d
  40dae5:	aam    0x3a
  40dae7:	or     eax,0x8f4a03b
  40daec:	popa   
  40daed:	sub    BYTE PTR [ecx+0x42],0xd3
  40daf1:	lea    edx,[ebp+0x16]
  40daf4:	pop    eax
  40daf5:	aam    0x60
  40daf7:	aas    
  40daf8:	inc    esp
  40daf9:	xlat   BYTE PTR ds:[ebx]
  40dafa:	push   ebp
  40dafb:	popf   
  40dafc:	ror    DWORD PTR [ebx],0x3f
  40daff:	ds pop ss
  40db01:	mov    esi,0x42ff1e3c
  40db06:	ret    
  40db07:	inc    edi
  40db08:	dec    eax
  40db09:	cld    
  40db0a:	sub    eax,0xb7a3e7c3
  40db0f:	int    0x73
  40db11:	lahf   
  40db12:	or     al,0x39
  40db14:	loop   0x40daa1
  40db16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db17:	out    dx,eax
  40db18:	je     0x40dafc
  40db1a:	jnp    0x40db7b
  40db1c:	sbb    edx,DWORD PTR [ecx]
  40db1e:	out    dx,eax
  40db1f:	enter  0x28d,0x73
  40db23:	test   edx,edi
  40db25:	pop    edi
  40db26:	pop    edi
  40db27:	adc    eax,0x3aebcd9c
  40db2c:	xchg   esi,eax
  40db2d:	(bad)  ds:0x15e6140
  40db33:	inc    esp
  40db34:	lock ret 0xc798
  40db38:	outs   dx,DWORD PTR ds:[esi]
  40db39:	lods   al,BYTE PTR ds:[esi]
  40db3a:	test   ebx,edi
  40db3c:	adc    BYTE PTR [esi],dl
  40db3e:	lock ins DWORD PTR es:[edi],dx
  40db40:	fxtract 
  40db42:	iret   
  40db43:	sub    cl,ah
  40db45:	rcl    DWORD PTR [ebx-0x3e],cl
  40db48:	sbb    dh,BYTE PTR [edx+0x279baa3d]
  40db4e:	dec    edx
  40db4f:	xlat   BYTE PTR ds:[ebx]
  40db50:	xchg   ebx,eax
  40db51:	imul   ebx,DWORD PTR [ebp+0x5491d8db],0x47254deb
  40db5b:	int    0x89
  40db5d:	cld    
  40db5e:	popf   
  40db5f:	inc    eax
  40db60:	imul   ebx,DWORD PTR [edi-0x1b24da93],0x8810dc58
  40db6a:	dec    ecx
  40db6b:	pop    esp
  40db6c:	xor    DWORD PTR [ebx+0x46],esp
  40db6f:	sbb    edi,DWORD PTR [edx+ebx*4-0x330024b]
  40db76:	inc    eax
  40db77:	mov    WORD PTR [ebp+esi*1-0x45],?
  40db7b:	fisttp QWORD PTR [eax+0x44]
  40db7e:	pop    ebx
  40db7f:	mov    DWORD PTR [edx],0x451ea543
  40db85:	mov    esi,ebx
  40db87:	adc    DWORD PTR [edi],ebp
  40db89:	mov    DWORD PTR [ecx],esp
  40db8b:	pop    ss
  40db8c:	repz jl 0x40db54
  40db8f:	mov    ecx,DWORD PTR [eax]
  40db91:	add    BYTE PTR [edx],cl
  40db93:	jnp    0x40db93
  40db95:	cmp    cl,dh
  40db97:	ds pop es
  40db99:	fiadd  WORD PTR es:[esi-0x3a]
  40db9d:	outs   dx,BYTE PTR ds:[esi]
  40db9e:	mov    ds:0x16108dfd,al
  40dba3:	jno    0x40db51
  40dba5:	mov    bl,0x9f
  40dba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dba8:	(bad)  
  40dba9:	test   BYTE PTR [eax],al
  40dbab:	dec    esi
  40dbac:	lock in al,0x8b
  40dbaf:	dec    esi
  40dbb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbb1:	mov    al,0x26
  40dbb3:	out    dx,al
  40dbb4:	ror    DWORD PTR [edi-0x695cd146],1
  40dbba:	lahf   
  40dbbb:	sub    al,0xb0
  40dbbd:	repnz xchg edx,eax
  40dbbf:	mov    ss,WORD PTR [eax-0x46]
  40dbc2:	mov    al,0x80
  40dbc4:	mov    ?,ebp
  40dbc6:	mov    ch,BYTE PTR [edi+0x3099d085]
  40dbcc:	sar    DWORD PTR [ecx+0x13dd8c48],1
  40dbd2:	xchg   edx,eax
  40dbd3:	dec    esi
  40dbd4:	cmp    eax,0xffffffe1
  40dbd7:	mov    eax,0x1d127280
  40dbdc:	xchg   edx,eax
  40dbdd:	dec    esp
  40dbde:	loope  0x40dbdb
  40dbe0:	push   ds
  40dbe1:	sbb    eax,0x68f25211
  40dbe6:	stos   BYTE PTR es:[edi],al
  40dbe7:	stos   BYTE PTR es:[edi],al
  40dbe8:	nop
  40dbe9:	mov    al,ds:0xa11015cb
  40dbee:	mov    ah,0xea
  40dbf0:	sqrtps xmm7,xmm3
  40dbf3:	sub    BYTE PTR [edx+eiz*2],ch
  40dbf6:	jg     0x40db85
  40dbf8:	fsubr  st(1),st
  40dbfa:	pop    es
  40dbfb:	xor    edx,DWORD PTR [edx]
  40dbfd:	cmc    
  40dbfe:	fimul  WORD PTR [esp+edx*1]
  40dc01:	add    al,0x7d
  40dc03:	or     al,0x31
  40dc05:	xor    ebx,DWORD PTR [eax+ecx*2]
  40dc08:	pop    edi
  40dc09:	mov    eax,ds:0x911b19f4
  40dc0e:	daa    
  40dc0f:	sahf   
  40dc10:	fsub   DWORD PTR [eax+edi*1-0x4b]
  40dc14:	mov    esp,0x4608b9bf
  40dc19:	mov    bl,al
  40dc1b:	inc    esp
  40dc1c:	out    dx,al
  40dc1d:	data16 sbb ah,BYTE PTR [edx+edi*1+0x33]
  40dc22:	cld    
  40dc23:	nop
  40dc24:	fsub   QWORD PTR [esi+0x3cc07c48]
  40dc2a:	mov    cl,0xc8
  40dc2c:	in     eax,0x61
  40dc2e:	adc    BYTE PTR [edx+0x65],ch
  40dc31:	or     eax,0x865fcd5a
  40dc36:	mov    esi,0xbdd2867b
  40dc3b:	mov    eax,0xf884de4a
  40dc40:	nop
  40dc41:	push   edx
  40dc42:	push   0x1
  40dc44:	xchg   ebx,eax
  40dc45:	add    ecx,DWORD PTR [eax+0x1a0a984c]
  40dc4b:	sahf   
  40dc4c:	ds xor ch,ah
  40dc4f:	or     al,0xde
  40dc51:	xchg   esp,eax
  40dc52:	lods   eax,DWORD PTR ds:[esi]
  40dc53:	xor    esp,eax
  40dc55:	lahf   
  40dc56:	sub    eax,0xeca2eae0
  40dc5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc5c:	pop    ss
  40dc5d:	and    dl,BYTE PTR [edx+0x57018696]
  40dc63:	ins    DWORD PTR es:[edi],dx
  40dc64:	imul   esi,DWORD PTR [edi-0x7d],0xffffffc8
  40dc68:	fcom   st(3)
  40dc6a:	jl     0x40dcad
  40dc6c:	es pop edx
  40dc6e:	jp     0x40dc57
  40dc70:	mov    BYTE PTR es:[ebx+0x40b8e5ff],dh
  40dc77:	and    ah,ah
  40dc79:	push   ecx
  40dc7a:	mov    esp,0xd33441e3
  40dc7f:	mov    cs,WORD PTR [ecx]
  40dc81:	pop    ebp
  40dc82:	push   ss
  40dc83:	lea    edx,[edi+0x746df002]
  40dc89:	nop
  40dc8a:	out    dx,eax
  40dc8b:	mov    edi,0x1048c66f
  40dc90:	fcomp  DWORD PTR ds:0x4c164294
  40dc96:	jecxz  0x40dca4
  40dc98:	adc    ebx,DWORD PTR ds:0x451109c1
  40dc9e:	push   esp
  40dc9f:	fmul   QWORD PTR [ecx]
  40dca1:	mov    dl,0x8c
  40dca3:	or     ebx,DWORD PTR [esi-0x52]
  40dca6:	(bad)  
  40dca7:	rcr    ch,cl
  40dca9:	xchg   esi,eax
  40dcaa:	mov    bh,0x27
  40dcac:	les    ebp,FWORD PTR [ecx+esi*8-0x69cef2f9]
  40dcb3:	lods   al,BYTE PTR ds:[esi]
  40dcb4:	xchg   edx,eax
  40dcb5:	shl    BYTE PTR [esi-0xe519d9d],1
  40dcbb:	jae    0x40dc4c
  40dcbd:	mov    edx,0x87356012
  40dcc2:	call   0xeb6a478e
  40dcc7:	push   edx
  40dcc8:	cmp    eax,0xc1833ff4
  40dccd:	test   DWORD PTR [eax+0x7555ba3a],ebp
  40dcd3:	out    0x38,al
  40dcd5:	mov    eax,0xf7bf0739
  40dcda:	jnp    0x40dcd1
  40dcdc:	repz xlat BYTE PTR ds:[ebx]
  40dcde:	jle    0x40dd20
  40dce0:	nop
  40dce1:	sub    ah,BYTE PTR [edi-0x7e00dc69]
  40dce7:	inc    ebx
  40dce8:	mov    edi,0xf77555b0
  40dced:	repz jne 0x40dd63
  40dcf0:	std    
  40dcf1:	(bad)  
  40dcf2:	push   esi
  40dcf3:	xchg   ebp,ebp
  40dcf5:	(bad)  
  40dcf6:	jp     0x40dd42
  40dcf8:	inc    esp
  40dcf9:	sahf   
  40dcfa:	pop    ds
  40dcfb:	js     0x40dce9
  40dcfd:	jne    0x40dc9c
  40dcff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd00:	mov    edx,0xf71340b0
  40dd05:	aad    0x50
  40dd07:	xchg   esi,esp
  40dd09:	cwde   
  40dd0a:	std    
  40dd0b:	mov    dl,0xc7
  40dd0d:	or     DWORD PTR [ebx],0xffffff9d
  40dd10:	(bad)  
  40dd11:	ins    BYTE PTR es:[edi],dx
  40dd12:	pop    ss
  40dd13:	mov    eax,ds:0x9c7b1662
  40dd18:	fadd   st(3),st
  40dd1a:	fisttp WORD PTR [edi-0x2]
  40dd1d:	pop    esi
  40dd1e:	arpl   ax,dx
  40dd20:	and    ebp,ebp
  40dd22:	lds    edi,FWORD PTR [edi]
  40dd24:	jne    0x40dd13
  40dd26:	gs push ebp
  40dd28:	add    eax,edx
  40dd2a:	fdiv   st(3),st
  40dd2c:	push   eax
  40dd2d:	ret    
  40dd2e:	out    dx,al
  40dd2f:	push   cs
  40dd30:	data16 aad 0xf5
  40dd33:	pop    esp
  40dd34:	ror    BYTE PTR [edx-0x62f5aa3f],cl
  40dd3a:	out    0x70,eax
  40dd3c:	push   eax
  40dd3d:	gs call 0xc000:0x4e34bd0d
  40dd45:	pop    ebp
  40dd46:	or     ch,dl
  40dd48:	adc    BYTE PTR [ebx],0xfb
  40dd4b:	add    eax,0xac18c73a
  40dd50:	adc    DWORD PTR [eax+0x0],edx
  40dd53:	mov    eax,DWORD PTR [ebx-0x34]
  40dd56:	or     al,0x85
  40dd58:	and    ebp,DWORD PTR [ebx-0x73]
  40dd5b:	into   
  40dd5c:	mov    edi,0xd8829f07
  40dd61:	adc    al,0xe
  40dd63:	sub    BYTE PTR gs:0xccb15dce,cl
  40dd6a:	xor    bl,cl
  40dd6c:	imul   edx,DWORD PTR [edx],0xb69da637
  40dd72:	xlat   BYTE PTR ds:[ebx]
  40dd73:	push   0xffffffb4
  40dd75:	das    
  40dd76:	jno    0x40dd38
  40dd78:	push   es
  40dd79:	mov    al,ds:0x4febbc38
  40dd7e:	and    eax,0x98f021f5
  40dd83:	dec    edx
  40dd84:	push   ds
  40dd85:	jl     0x40dda4
  40dd87:	mov    ah,BYTE PTR [ebp+0x18]
  40dd8a:	sbb    al,dh
  40dd8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd8d:	test   eax,0x3b29f4fe
  40dd92:	call   0xdbe90b4b
  40dd97:	lods   eax,DWORD PTR ds:[esi]
  40dd98:	mov    al,0x9
  40dd9a:	outs   dx,BYTE PTR ds:[esi]
  40dd9b:	cmc    
  40dd9c:	jecxz  0x40ddff
  40dd9e:	mov    ah,0xa7
  40dda0:	xchg   esp,eax
  40dda1:	pop    esp
  40dda2:	adc    dl,dl
  40dda4:	add    dh,BYTE PTR [ecx]
  40dda6:	xlat   BYTE PTR fs:[ebx]
  40dda8:	jne    0x40dd87
  40ddaa:	xor    DWORD PTR [ebx-0x57b04e59],edx
  40ddb0:	test   eax,0x8cd0f522
  40ddb5:	inc    esi
  40ddb6:	adc    BYTE PTR [ecx-0x7b34e5df],bl
  40ddbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddbd:	iret   
  40ddbe:	cmp    al,0x47
  40ddc0:	push   edi
  40ddc1:	jge    0x40de12
  40ddc3:	and    DWORD PTR [ebx-0x47],esi
  40ddc6:	mov    cl,0xd3
  40ddc8:	bound  edx,QWORD PTR [ecx-0x42dcfcab]
  40ddce:	popf   
  40ddcf:	lds    esp,FWORD PTR [ecx+0x3a51c3a6]
  40ddd5:	ret    
  40ddd6:	or     BYTE PTR [ebx+0x52],ch
  40ddd9:	stos   BYTE PTR es:[edi],al
  40ddda:	or     ebx,DWORD PTR [edx+0x621db023]
  40dde0:	cmp    al,0xb3
  40dde2:	daa    
  40dde3:	pushf  
  40dde4:	leave  
  40dde5:	adc    bl,ah
  40dde7:	adc    al,0xc9
  40dde9:	cmp    BYTE PTR [ecx+0x50],bl
  40ddec:	ins    BYTE PTR es:[edi],dx
  40dded:	stos   BYTE PTR es:[edi],al
  40ddee:	(bad)  
  40ddef:	xchg   ebx,eax
  40ddf0:	mov    ch,0xb5
  40ddf2:	gs call 0x99f7a405
  40ddf8:	out    dx,al
  40ddf9:	sub    al,0x99
  40ddfb:	andnps xmm1,XMMWORD PTR [ebx-0x63]
  40ddff:	dec    esi
  40de00:	dec    esp
  40de01:	int3   
  40de02:	mov    edi,0x38c366d2
  40de07:	xor    edx,DWORD PTR [ecx+eax*4]
  40de0a:	xchg   esi,eax
  40de0b:	push   ecx
  40de0c:	int3   
  40de0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de0e:	pushf  
  40de0f:	test   al,0xc3
  40de11:	icebp  
  40de12:	std    
  40de13:	loopne 0x40de5a
  40de15:	inc    eax
  40de16:	les    edx,FWORD PTR [eax]
  40de18:	sbb    ah,al
  40de1a:	pusha  
  40de1b:	mov    ch,0x80
  40de1d:	xor    DWORD PTR [eax-0x4db7b62f],0x3a
  40de24:	sbb    al,0x6f
  40de26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de27:	int    0x1
  40de29:	or     dl,BYTE PTR [eax+0x3]
  40de2c:	cwde   
  40de2d:	push   ss
  40de2e:	dec    ecx
  40de2f:	fsub   QWORD PTR [ebp-0xf]
  40de32:	and    eax,0x14e003b7
  40de37:	fisttp WORD PTR [edx+0x75]
  40de3a:	fiadd  DWORD PTR [edi+0x1d9e37cc]
  40de40:	je     0x40ddc3
  40de42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de43:	jp     0x40de1a
  40de45:	pop    ebx
  40de46:	pop    ebp
  40de47:	lods   al,BYTE PTR ds:[esi]
  40de48:	jecxz  0x40ddea
  40de4a:	iret   
  40de4b:	ss call 0xca:0xe60f516c
  40de53:	out    dx,al
  40de54:	adc    ebx,ebx
  40de56:	je     0x40dea3
  40de58:	fwait
  40de59:	add    DWORD PTR [edx+0x203c26f6],0xffffff94
  40de60:	cmp    BYTE PTR [ebp+0x44b1ffa0],dl
  40de66:	sar    BYTE PTR [ecx+0x5ae655de],cl
  40de6c:	cli    
  40de6d:	sbb    al,0x4d
  40de6f:	or     edx,eax
  40de71:	fwait
  40de72:	mov    ds:0xd84e2ff3,al
  40de77:	popf   
  40de78:	std    
  40de79:	mov    edx,0xa87e1038
  40de7e:	push   cs
  40de7f:	push   esp
  40de80:	adc    esi,DWORD PTR ds:0xa48ee547
  40de86:	arpl   WORD PTR [ebx],si
  40de88:	mov    BYTE PTR [edx-0x56],0x39
  40de8c:	push   ebx
  40de8d:	out    0xeb,eax
  40de8f:	pop    ds
  40de90:	cwde   
  40de91:	imul   ebp,DWORD PTR [ebp+0x4332ae87],0x45
  40de98:	adc    DWORD PTR [edx],0x2251c5d7
  40de9e:	fiadd  DWORD PTR [edx+0x77d22d1f]
  40dea4:	inc    edi
  40dea5:	mov    BYTE PTR [ebx-0x20],cl
  40dea8:	arpl   di,cx
  40deaa:	ror    DWORD PTR [eax],1
  40deac:	push   esi
  40dead:	out    0x2c,eax
  40deaf:	fbstp  TBYTE PTR [edx]
  40deb1:	faddp  st(3),st
  40deb3:	mov    al,0xfe
  40deb5:	pop    es
  40deb6:	xor    ebp,ebp
  40deb8:	imul   eax,ebx,0xffffff88
  40debb:	add    ah,BYTE PTR [edx]
  40debd:	dec    esi
  40debe:	scas   eax,DWORD PTR es:[edi]
  40debf:	inc    ebx
  40dec0:	xchg   ecx,eax
  40dec1:	aaa    
  40dec2:	aad    0xfb
  40dec4:	retf   0xbd82
  40dec7:	adc    BYTE PTR [esi-0x34],ah
  40deca:	retf   0xa9de
  40decd:	jle    0x40df2a
  40decf:	fidivr WORD PTR [edx+0x67]
  40ded2:	inc    eax
  40ded3:	push   cs
  40ded4:	sbb    esi,DWORD PTR [edx]
  40ded6:	nop
  40ded7:	pop    edi
  40ded8:	mov    edx,0x56655493
  40dedd:	cmp    DWORD PTR [ecx+0x564b2ce],ebp
  40dee3:	ret    
  40dee4:	mov    edx,0x7719476d
  40dee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deea:	call   0x198ecd43
  40deef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40def0:	push   cs
  40def1:	fimul  DWORD PTR [ebp-0x3]
  40def4:	sub    eax,DWORD PTR [ecx]
  40def6:	xchg   DWORD PTR [ecx],ecx
  40def8:	adc    BYTE PTR [esi],al
  40defa:	(bad)  
  40defb:	ds xor ah,cl
  40defe:	das    
  40deff:	retf   0x7c1
  40df02:	sbb    bh,BYTE PTR [ebp-0x3]
  40df05:	js     0x40df05
  40df07:	and    al,0x12
  40df09:	loop   0x40def3
  40df0b:	leave  
  40df0c:	xchg   ecx,eax
  40df0d:	add    ch,dh
  40df0f:	out    0xe2,al
  40df11:	jecxz  0x40deb5
  40df13:	sub    eax,0x5472bb71
  40df18:	cdq    
  40df19:	pop    ss
  40df1a:	jno    0x40df41
  40df1c:	xchg   esp,eax
  40df1d:	pop    ss
  40df1e:	hlt    
  40df1f:	adc    dh,BYTE PTR [ebp-0x21cc7d86]
  40df25:	push   ecx
  40df26:	xor    eax,0x6fe1cdb6
  40df2b:	lock fs loope 0x40df5e
  40df2f:	add    DWORD PTR [esi+0x41babaf1],eax
  40df35:	leave  
  40df36:	out    dx,al
  40df37:	push   cs
  40df38:	std    
  40df39:	(bad)  
  40df3a:	jns    0x40defc
  40df3c:	leave  
  40df3d:	xchg   ebp,eax
  40df3e:	mov    ecx,0x4fae1ebf
  40df43:	imul   edx,DWORD PTR [edx-0x46852dcd],0xfe20b140
  40df4d:	jbe    0x40df5f
  40df4f:	aaa    
  40df50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df51:	test   eax,0x9afa2e7c
  40df56:	pop    esp
  40df57:	push   ebp
  40df58:	add    dh,bl
  40df5a:	shl    BYTE PTR [edx],1
  40df5c:	xor    edi,ecx
  40df5e:	push   edx
  40df5f:	sti    
  40df60:	and    al,BYTE PTR [eax+0x421ad10a]
  40df66:	jnp    0x40dfe5
  40df68:	imul   eax,ecx,0x2d
  40df6b:	les    esp,FWORD PTR [esi]
  40df6d:	jnp    0x40df8a
  40df6f:	cmp    esi,DWORD PTR [edx]
  40df71:	push   es
  40df72:	or     edi,DWORD PTR [ecx]
  40df74:	pushf  
  40df75:	rcl    DWORD PTR [ecx+0x2fe9b982],0x4b
  40df7c:	add    al,0xc6
  40df7e:	add    BYTE PTR [ebx],al
  40df80:	pop    ebp
  40df81:	scas   al,BYTE PTR es:[edi]
  40df82:	ror    BYTE PTR [esi+0x496b1ef5],cl
  40df88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df89:	sar    BYTE PTR [edx+0x71],0x8
  40df8d:	fld    DWORD PTR [edx]
  40df8f:	adc    BYTE PTR [ecx],ch
  40df91:	ret    
  40df92:	push   eax
  40df93:	mov    BYTE PTR [ebx],bh
  40df95:	(bad)  
  40df96:	and    eax,0x11958da0
  40df9b:	in     al,0x7d
  40df9d:	and    eax,0x8f4596f1
  40dfa2:	jno    0x40df69
  40dfa4:	into   
  40dfa5:	sbb    DWORD PTR [edi],ebp
  40dfa7:	jbe    0x40dffe
  40dfa9:	and    BYTE PTR [edx+edi*1],dh
  40dfac:	sbb    dl,ah
  40dfae:	aas    
  40dfaf:	mov    bh,ah
  40dfb1:	(bad)  
  40dfb2:	pop    eax
  40dfb3:	xchg   esi,eax
  40dfb4:	nop
  40dfb5:	fwait
  40dfb6:	daa    
  40dfb7:	cdq    
  40dfb8:	add    esi,DWORD PTR [ecx-0x9642d28]
  40dfbe:	lods   eax,DWORD PTR ds:[esi]
  40dfbf:	cmp    bl,ah
  40dfc1:	dec    eax
  40dfc2:	icebp  
  40dfc3:	sbb    bl,bh
  40dfc5:	int3   
  40dfc6:	adc    esi,DWORD PTR [eax+edi*1+0x10]
  40dfca:	mov    ah,BYTE PTR [ecx]
  40dfcc:	aaa    
  40dfcd:	jg     0x40e029
  40dfcf:	dec    esi
  40dfd0:	inc    eax
  40dfd1:	lods   al,BYTE PTR ds:[esi]
  40dfd2:	and    eax,0x1652a3bd
  40dfd7:	mov    cl,0x7d
  40dfd9:	leave  
  40dfda:	aaa    
  40dfdb:	or     ebx,ecx
  40dfdd:	loope  0x40dfa0
  40dfdf:	loopne 0x40df92
  40dfe1:	rol    BYTE PTR [edx+0xb],1
  40dfe4:	adc    eax,0xdccbbd45
  40dfe9:	aad    0x38
  40dfeb:	sub    ch,BYTE PTR [edi]
  40dfed:	loope  0x40e055
  40dfef:	pop    esp
  40dff0:	iret   
  40dff1:	or     al,BYTE PTR [edi-0x68]
  40dff4:	pop    ebp
  40dff5:	addr16 das 
  40dff7:	imul   eax,DWORD PTR [ebx-0x1],0xaa7f380a
  40dffe:	xchg   ebp,eax
  40dfff:	mov    ds:0xd41a06e7,eax
  40e004:	call   0xac2e:0xd443c5ef
  40e00b:	mov    bl,0xf
  40e00d:	ss stos BYTE PTR es:[edi],al
  40e00f:	adc    ecx,DWORD PTR [ebx-0x71]
  40e012:	jno    0x40e049
  40e014:	fdiv   st(1),st
  40e016:	lods   eax,DWORD PTR ds:[esi]
  40e017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e018:	push   ebp
  40e019:	test   al,0x5f
  40e01b:	int3   
  40e01c:	pop    es
  40e01d:	cmp    cl,BYTE PTR [ebx-0x3c]
  40e020:	cmp    al,BYTE PTR ds:[edi+0x24]
  40e024:	sub    al,0x5d
  40e026:	inc    ebx
  40e027:	xchg   edi,eax
  40e028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e029:	dec    ebx
  40e02a:	pop    esi
  40e02b:	into   
  40e02c:	in     eax,dx
  40e02d:	mov    dh,0x5f
  40e02f:	dec    edi
  40e030:	cmp    al,0x43
  40e032:	jbe    0x40e02e
  40e034:	aas    
  40e035:	inc    BYTE PTR [edx-0x32]
  40e038:	fcomi  st,st(4)
  40e03a:	sub    bl,BYTE PTR [ecx]
  40e03c:	lea    esp,[edi+0x24b3aed6]
  40e042:	mov    cl,dh
  40e044:	and    BYTE PTR [edi+0x59a9e84f],dl
  40e04a:	jl     0x40dfe0
  40e04c:	sbb    edx,edx
  40e04e:	outs   dx,DWORD PTR ds:[esi]
  40e04f:	xchg   BYTE PTR [ebx-0x5b],al
  40e052:	and    al,0xe
  40e054:	hlt    
  40e055:	es sahf 
  40e057:	add    BYTE PTR [edi+edx*4],dh
  40e05a:	pop    ebp
  40e05b:	push   0xe5028a75
  40e060:	inc    ecx
  40e061:	dec    eax
  40e062:	adc    ebx,DWORD PTR [ebx-0x6f]
  40e065:	push   ds
  40e066:	dec    ebx
  40e067:	xchg   edi,eax
  40e068:	fisubr WORD PTR [ecx+0x43]
  40e06b:	popa   
  40e06c:	push   0xeb29f3f8
  40e071:	jbe    0x40e06b
  40e073:	or     dh,BYTE PTR [edx-0x7b]
  40e076:	cmp    eax,0x68e8a2c3
  40e07b:	add    eax,0x3b943ed7
  40e080:	push   cs
  40e081:	mov    al,0x54
  40e083:	add    BYTE PTR [ebx],0x69
  40e086:	loop   0x40e0ba
  40e088:	jne    0x40e079
  40e08a:	retf   0x1d6f
  40e08d:	dec    eax
  40e08e:	and    al,0xb5
  40e090:	xchg   ecx,eax
  40e091:	js     0x40e0a6
  40e093:	into   
  40e094:	idiv   DWORD PTR [ecx+ebx*4]
  40e097:	pop    ds
  40e098:	push   ss
  40e099:	cmp    DWORD PTR [edx+ebx*8-0x79154a85],ebx
  40e0a0:	mov    ebp,0x9019bd4e
  40e0a5:	mov    ds:0x67eec8f3,al
  40e0aa:	aad    0xd5
  40e0ac:	mov    edi,0x39d27f3c
  40e0b1:	sub    dl,dl
  40e0b3:	std    
  40e0b4:	nop
  40e0b5:	push   0x46
  40e0b7:	call   0x9eba:0x36fce88b
  40e0be:	add    ecx,0x9c1d2154
  40e0c4:	pop    edx
  40e0c5:	jne    0x40e143
  40e0c7:	mov    dh,0x1b
  40e0c9:	stc    
  40e0ca:	mov    dh,0xae
  40e0cc:	int    0x22
  40e0ce:	inc    eax
  40e0cf:	popa   
  40e0d0:	push   edx
  40e0d1:	push   edx
  40e0d2:	pusha  
  40e0d3:	adc    al,0x8d
  40e0d5:	aam    0xe4
  40e0d7:	jnp    0x40e087
  40e0d9:	xchg   DWORD PTR [ebx],ecx
  40e0db:	hlt    
  40e0dc:	jno    0x40e135
  40e0de:	nop
  40e0df:	mov    esi,0xe876db84
  40e0e4:	pop    ss
  40e0e5:	mov    bh,0xd6
  40e0e7:	mov    DWORD PTR [eax],eax
  40e0e9:	test   BYTE PTR [eax+0x99cef59],ch
  40e0ef:	xor    eax,0xf70e82b8
  40e0f4:	sub    bl,bl
  40e0f6:	call   DWORD PTR [edx-0x75ecc4b2]
  40e0fc:	mov    cl,0xb6
  40e0fe:	xchg   ecx,eax
  40e0ff:	ficomp DWORD PTR [edx-0x4ad0244e]
  40e105:	fs pop eax
  40e107:	(bad)  
  40e108:	push   edi
  40e109:	daa    
  40e10a:	push   0xd8ef1a99
  40e10f:	mov    gs,WORD PTR [esi-0x56a1ff33]
  40e115:	ins    DWORD PTR es:[edi],dx
  40e116:	stos   BYTE PTR es:[edi],al
  40e117:	idiv   BYTE PTR [edi+ecx*1]
  40e11a:	lock mov bh,BYTE PTR ds:0x4d2ab16
  40e121:	mov    eax,0xf76f86ef
  40e126:	inc    edx
  40e127:	jmp    0x16c7:0xf50670fa
  40e12e:	xchg   esi,eax
  40e12f:	push   esp
  40e130:	xor    BYTE PTR [edx+0x423f6aee],dl
  40e136:	clc    
  40e137:	xor    eax,0x156c2bc5
  40e13c:	cld    
  40e13d:	lds    edx,FWORD PTR gs:[edx+ebx*4-0x376cc814]
  40e145:	mov    edi,DWORD PTR [edi]
  40e147:	div    esi
  40e149:	or     ch,ch
  40e14b:	shl    DWORD PTR [edi],cl
  40e14d:	push   ebx
  40e14e:	js     0x40e1b2
  40e150:	das    
  40e151:	mov    dh,0x54
  40e153:	mov    eax,ds:0x5daf456d
  40e158:	xor    bl,BYTE PTR [eax]
  40e15a:	in     al,dx
  40e15b:	push   eax
  40e15c:	int    0x66
  40e15e:	ret    0x2715
  40e161:	jmp    ecx
  40e163:	mov    eax,0x668ab905
  40e168:	push   esp
  40e169:	lock mov cs,WORD PTR [esi+0x3d52ad00]
  40e170:	sahf   
  40e171:	shl    BYTE PTR [edi+ecx*4+0x5b2e0473],cl
  40e178:	jecxz  0x40e1ee
  40e17a:	and    al,0x33
  40e17c:	mov    edi,0x2590b6c6
  40e181:	dec    edx
  40e182:	mov    cl,0xec
  40e184:	aam    0x25
  40e186:	and    ebx,DWORD PTR [eax-0x2ce11622]
  40e18c:	(bad)  
  40e18d:	and    BYTE PTR ds:[ebp-0xb],bl
  40e191:	jg     0x40e1c4
  40e193:	arpl   WORD PTR [ecx-0x386a80cd],bp
  40e199:	iret   
  40e19a:	or     ebp,DWORD PTR [eax+0x5ad8108d]
  40e1a0:	(bad)  
  40e1a1:	sub    DWORD PTR [edi-0x4],edx
  40e1a4:	xchg   esi,eax
  40e1a5:	and    al,0xca
  40e1a7:	fdivr  QWORD PTR [eax]
  40e1a9:	pop    edx
  40e1aa:	dec    esp
  40e1ab:	xlat   BYTE PTR ds:[ebx]
  40e1ac:	scas   eax,DWORD PTR es:[edi]
  40e1ad:	ror    DWORD PTR [eax+eax*1],cl
  40e1b0:	aad    0x1a
  40e1b2:	scas   al,BYTE PTR es:[edi]
  40e1b3:	mov    eax,0x65b2eb8b
  40e1b8:	ins    BYTE PTR es:[edi],dx
  40e1b9:	jge    0x40e189
  40e1bb:	push   cs
  40e1bc:	push   ss
  40e1bd:	dec    edx
  40e1be:	stos   BYTE PTR es:[edi],al
  40e1bf:	in     eax,dx
  40e1c0:	stc    
  40e1c1:	inc    edi
  40e1c2:	pop    DWORD PTR [eax-0x6077c6c4]
  40e1c8:	jp     0x40e157
  40e1ca:	push   ecx
  40e1cb:	cmp    ebp,eax
  40e1cd:	inc    esi
  40e1ce:	dec    ebp
  40e1cf:	ret    0x5f4c
  40e1d2:	adc    bh,al
  40e1d4:	xor    eax,ebp
  40e1d6:	inc    eax
  40e1d7:	mov    ecx,0x9c308075
  40e1dc:	imul   ebx,edx,0x9106a013
  40e1e2:	jo     0x40e17a
  40e1e4:	adc    bl,BYTE PTR [esi-0x2c1edd7b]
  40e1ea:	cmp    edi,DWORD PTR [ebx+ecx*8-0x6ef1d1e]
  40e1f1:	add    BYTE PTR [esi],0xe5
  40e1f4:	neg    DWORD PTR [esi+0x78f4a2a6]
  40e1fa:	jns    0x40e265
  40e1fc:	inc    eax
  40e1fd:	cdq    
  40e1fe:	jge    0x40e215
  40e200:	sub    al,0x54
  40e202:	mov    ebx,0x3fb8de9f
  40e207:	cmp    dl,0x33
  40e20a:	jmp    0xff94635f
  40e20f:	mov    cl,ah
  40e211:	psubusb mm3,QWORD PTR [eax+ebp*8]
  40e215:	fwait
  40e216:	jmp    0x40e19e
  40e218:	shr    BYTE PTR [edi+0xb],1
  40e21b:	mov    bh,bh
  40e21d:	bound  esi,QWORD PTR [ecx+0x4127cf78]
  40e223:	sub    DWORD PTR [ebp-0x79],eax
  40e226:	adc    BYTE PTR ds:0x204fe26c,cl
  40e22c:	add    BYTE PTR [ebx+0x26],dh
  40e22f:	std    
  40e230:	jno    0x40e25f
  40e232:	inc    edx
  40e233:	jecxz  0x40e295
  40e235:	lds    eax,FWORD PTR [esi]
  40e237:	data16 test ch,dl
  40e23a:	ja     0x40e1c1
  40e23c:	xchg   bh,dl
  40e23e:	shl    ch,cl
  40e240:	and    DWORD PTR [edx],eax
  40e242:	cmp    ecx,DWORD PTR [edi+0x1b42f686]
  40e248:	push   esi
  40e249:	call   0xb4394408
  40e24e:	xor    al,0x16
  40e250:	call   0x3493:0x3e716841
  40e257:	add    al,0x81
  40e259:	pause  
  40e25b:	jno    0x40e2a1
  40e25d:	mov    al,0x1d
  40e25f:	sahf   
  40e260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e261:	int    0x2f
  40e263:	or     ebp,0xd7c1892c
  40e269:	not    dl
  40e26b:	fwait
  40e26c:	int    0x2
  40e26e:	sahf   
  40e26f:	enter  0x790,0x65
  40e273:	sbb    DWORD PTR [ebp-0x2f],esp
  40e276:	jp     0x40e2aa
  40e278:	pop    esi
  40e279:	rol    BYTE PTR [eax-0x7f],0x8a
  40e27d:	pop    esi
  40e27e:	fimul  DWORD PTR [edi+0x79]
  40e281:	lock in eax,dx
  40e283:	push   edi
  40e284:	or     BYTE PTR [esp+ebp*4],dh
  40e287:	dec    edx
  40e288:	pop    edx
  40e289:	push   ecx
  40e28a:	sahf   
  40e28b:	or     al,0xad
  40e28d:	out    0xfe,eax
  40e28f:	push   edx
  40e290:	xchg   ebp,esi
  40e292:	xor    dl,BYTE PTR [edx+0x4f]
  40e295:	outs   dx,DWORD PTR ds:[esi]
  40e296:	or     al,0x6e
  40e298:	out    dx,al
  40e299:	sahf   
  40e29a:	inc    esi
  40e29b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e29c:	jnp    0x40e272
  40e29e:	jmp    0x560a:0x744c7952
  40e2a5:	(bad)  
  40e2a6:	in     al,0x80
  40e2a8:	lods   al,BYTE PTR ds:[esi]
  40e2a9:	mov    esi,0x615710d5
  40e2ae:	call   0x50e9dbb2
  40e2b3:	add    BYTE PTR [edx+eax*4-0x643beae2],dl
  40e2ba:	lahf   
  40e2bb:	icebp  
  40e2bc:	push   0x865bb115
  40e2c1:	pop    ds
  40e2c2:	lods   al,BYTE PTR ds:[esi]
  40e2c3:	ins    BYTE PTR es:[edi],dx
  40e2c4:	xor    BYTE PTR fs:[eax+eiz*2],cl
  40e2c8:	retf   0x6ae7
  40e2cb:	daa    
  40e2cc:	pop    edi
  40e2cd:	das    
  40e2ce:	sub    ah,BYTE PTR [edi-0x1]
  40e2d1:	xchg   ebp,eax
  40e2d2:	sbb    DWORD PTR [ecx+0x33],ebx
  40e2d5:	dec    ebx
  40e2d6:	pusha  
  40e2d7:	or     dh,BYTE PTR [edx+0x79ef9cd1]
  40e2dd:	call   0xc59e:0x2c89d647
  40e2e4:	pushf  
  40e2e5:	das    
  40e2e6:	scas   eax,DWORD PTR es:[edi]
  40e2e7:	addr16 pusha 
  40e2e9:	mov    ds:0x31ab5dd,eax
  40e2ee:	scas   ax,WORD PTR es:[edi]
  40e2f0:	retf   0x1f4c
  40e2f3:	sub    eax,0xe8463127
  40e2f8:	out    dx,eax
  40e2f9:	ins    DWORD PTR es:[edi],dx
  40e2fa:	pop    esi
  40e2fb:	out    dx,eax
  40e2fc:	not    DWORD PTR [eax-0x6e]
  40e2ff:	stos   BYTE PTR es:[edi],al
  40e300:	mov    edi,0x580d56da
  40e305:	ror    DWORD PTR [ecx-0x54],0xf0
  40e309:	inc    edi
  40e30a:	pop    ds
  40e30b:	xlat   BYTE PTR ds:[ebx]
  40e30c:	push   cs
  40e30d:	outs   dx,BYTE PTR ds:[esi]
  40e30e:	lahf   
  40e30f:	cli    
  40e310:	push   ebp
  40e311:	out    dx,al
  40e312:	adc    bl,bh
  40e314:	sub    eax,0x89b09d0f
  40e319:	outs   dx,BYTE PTR ds:[esi]
  40e31a:	cli    
  40e31b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e31c:	je     0x40e390
  40e31e:	xchg   edx,eax
  40e31f:	xchg   ebp,eax
  40e320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e321:	jne    0x40e385
  40e323:	stc    
  40e324:	sbb    esp,esi
  40e326:	ja     0x40e2d5
  40e328:	add    al,0x9c
  40e32a:	add    ch,cl
  40e32c:	js     0x40e2f3
  40e32e:	(bad)  
  40e32f:	push   eax
  40e330:	jns    0x40e369
  40e332:	jmp    0x40e3ad
  40e334:	mov    ds:0xfe486c22,al
  40e339:	or     edx,0xb
  40e33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e33d:	mov    al,ds:0x22c72b56
  40e342:	jge    0x40e398
  40e344:	pop    esi
  40e345:	mov    WORD PTR [esi-0xdac1fc6],fs
  40e34b:	jg     0x40e347
  40e34d:	push   ds
  40e34e:	or     eax,0x3ed7b1e6
  40e353:	add    eax,0x9f352a38
  40e358:	xor    bl,BYTE PTR [eax+eiz*4+0x7d3d0d31]
  40e35f:	dec    eax
  40e360:	repnz loopne 0x40e3a5
  40e363:	push   ecx
  40e364:	jp     0x40e358
  40e366:	xor    bl,dl
  40e368:	cmp    esi,DWORD PTR [ebx]
  40e36a:	xchg   ebp,eax
  40e36b:	xchg   BYTE PTR ds:[esi+0x1d702506],ah
  40e372:	addr16 push ecx
  40e374:	aas    
  40e375:	mov    cl,0xe9
  40e377:	jge    0x40e35e
  40e379:	adc    eax,0xd5427500
  40e37e:	rcr    eax,1
  40e380:	frstor [esi-0x4c7e2a53]
  40e386:	adc    dh,ah
  40e388:	xlat   BYTE PTR ds:[ebx]
  40e389:	jl     0x40e377
  40e38b:	mov    esi,0xdd7897d8
  40e390:	dec    edi
  40e391:	lea    esi,gs:[edi-0x7b]
  40e395:	in     al,dx
  40e396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e398:	dec    esi
  40e399:	cwde   
  40e39a:	pop    edx
  40e39b:	pop    esi
  40e39c:	imul   ecx,DWORD PTR [esi+0x5e],0x9f3756d2
  40e3a3:	cmp    edi,DWORD PTR [eax+0x2aba12e8]
  40e3a9:	dec    edx
  40e3aa:	js     0x40e38c
  40e3ac:	dec    ecx
  40e3ad:	adc    cl,BYTE PTR [esi]
  40e3af:	pop    ebp
  40e3b0:	popf   
  40e3b1:	jecxz  0x40e3f0
  40e3b3:	into   
  40e3b4:	mov    esi,0x1e235821
  40e3b9:	sub    DWORD PTR [eax-0x6d796193],eax
  40e3bf:	xor    ah,BYTE PTR [esi+0x40]
  40e3c2:	mov    dh,0xaa
  40e3c4:	(bad)  
  40e3c5:	lds    ebp,FWORD PTR [eax-0x7f886d3]
  40e3cb:	mov    ah,0x31
  40e3cd:	add    BYTE PTR [ecx-0x645c417b],cl
  40e3d3:	push   esp
  40e3d4:	(bad)  
  40e3d5:	xor    dh,BYTE PTR [ebx-0x30]
  40e3d8:	cmp    al,0x10
  40e3da:	mov    edi,0xc1ddf35
  40e3df:	sub    al,BYTE PTR [eax]
  40e3e1:	test   DWORD PTR [ebx],esi
  40e3e3:	mov    ebx,0x93bef7ad
  40e3e8:	adc    dh,BYTE PTR [ebx+eiz*4+0x50]
  40e3ec:	sub    edi,DWORD PTR [eax-0x406e4600]
  40e3f2:	pop    ecx
  40e3f3:	or     DWORD PTR [edi],esp
  40e3f5:	imul   esp,DWORD PTR [edi-0x19],0xffffff9f
  40e3f9:	scas   eax,DWORD PTR es:[edi]
  40e3fa:	sub    dh,bl
  40e3fc:	cmp    eax,0x4ecf645a
  40e401:	enter  0xa230,0x2e
  40e405:	stos   DWORD PTR es:[edi],eax
  40e406:	mov    cl,0x86
  40e408:	dec    esi
  40e409:	ret    
  40e40a:	add    eax,0x837d8aa7
  40e40f:	and    DWORD PTR [edx],edx
  40e411:	call   0x4d6e9d35
  40e416:	or     esp,ecx
  40e418:	pop    DWORD PTR [esi-0x2e30961d]
  40e41e:	js     0x40e482
  40e420:	and    ebp,DWORD PTR [esi-0x49]
  40e423:	js     0x40e483
  40e425:	std    
  40e426:	sbb    al,0xda
  40e428:	lahf   
  40e429:	ins    DWORD PTR es:[edi],dx
  40e42a:	(bad)  
  40e42c:	or     BYTE PTR [eax],dh
  40e42e:	ds gs test eax,0x25aa220b
  40e435:	xor    BYTE PTR [ebx+0x2e],0x2
  40e439:	out    dx,al
  40e43a:	in     al,dx
  40e43b:	leave  
  40e43c:	push   ebx
  40e43d:	dec    ebx
  40e43e:	inc    ebx
  40e43f:	repnz sbb eax,0x2be9a3ec
  40e445:	ins    DWORD PTR es:[edi],dx
  40e446:	pop    esi
  40e447:	dec    edi
  40e448:	daa    
  40e449:	mov    bh,0xe3
  40e44b:	rcl    ebx,cl
  40e44d:	cmp    al,0x25
  40e44f:	das    
  40e450:	pusha  
  40e451:	repz lock jb 0x40e497
  40e455:	lea    edi,[esi+0x50c098b5]
  40e45b:	pop    edx
  40e45c:	or     eax,ebp
  40e45e:	and    edx,DWORD PTR [edi-0x79]
  40e461:	sbb    DWORD PTR [ebx],eax
  40e463:	pushf  
  40e464:	outs   dx,BYTE PTR ds:[esi]
  40e465:	lahf   
  40e466:	inc    eax
  40e467:	pop    ebx
  40e468:	loopne 0x40e44d
  40e46a:	cli    
  40e46b:	or     al,0x1b
  40e46d:	xchg   ebx,eax
  40e46e:	cli    
  40e46f:	(bad)  
  40e470:	ror    esi,0xba
  40e473:	pop    ds
  40e474:	mov    ebx,0xb0302cf
  40e479:	fstp   DWORD PTR [ebp-0x3146b47c]
  40e47f:	mov    ss,WORD PTR [ebx+edi*4+0x3c]
  40e483:	pop    esp
  40e484:	inc    ecx
  40e485:	jae    0x40e49e
  40e487:	scas   eax,DWORD PTR es:[edi]
  40e488:	dec    eax
  40e489:	sbb    DWORD PTR ds:0xcec97d67,esi
  40e48f:	out    dx,eax
  40e490:	aaa    
  40e491:	aad    0xa7
  40e493:	out    dx,al
  40e494:	ins    BYTE PTR es:[edi],dx
  40e495:	cli    
  40e496:	fcomp  QWORD PTR [ebx]
  40e498:	lahf   
  40e499:	gs jne 0x40e471
  40e49c:	mov    bh,0x71
  40e49e:	cld    
  40e49f:	repz sbb dh,BYTE PTR [ebp+0x66]
  40e4a3:	ins    BYTE PTR es:[edi],dx
  40e4a4:	rcl    edi,cl
  40e4a6:	lock daa 
  40e4a8:	push   ebp
  40e4a9:	addr16 test al,0xa
  40e4ac:	ss push es
  40e4ae:	jne    0x40e46c
  40e4b0:	xchg   ebx,eax
  40e4b1:	mov    BYTE PTR [edx-0x55],al
  40e4b4:	add    ebx,esi
  40e4b6:	bound  eax,QWORD PTR [eiz*2-0x4c56adb7]
  40e4bd:	icebp  
  40e4be:	add    DWORD PTR [edx],ebx
  40e4c0:	jb     0x40e52b
  40e4c2:	dec    ebp
  40e4c3:	push   ds
  40e4c4:	dec    esi
  40e4c5:	out    dx,al
  40e4c6:	push   ss
  40e4c7:	mov    eax,0x496835aa
  40e4cc:	(bad)  
  40e4cd:	or     eax,DWORD PTR [ebx*8+0x7c4acd77]
  40e4d4:	xchg   esi,eax
  40e4d5:	inc    esi
  40e4d6:	or     DWORD PTR [ebx-0x66f2330c],edx
  40e4dc:	push   edi
  40e4dd:	cli    
  40e4de:	fsub   QWORD PTR [esi-0x7ec142be]
  40e4e4:	mov    edi,DWORD PTR [esi]
  40e4e6:	or     eax,0x7c001cf9
  40e4eb:	push   ecx
  40e4ec:	(bad)  
  40e4ed:	lods   al,BYTE PTR ds:[esi]
  40e4ee:	das    
  40e4ef:	mov    eax,0xa191e3e4
  40e4f4:	xchg   ecx,eax
  40e4f5:	rcr    al,cl
  40e4f7:	pop    ds
  40e4f8:	ficomp WORD PTR [ecx+0x73]
  40e4fb:	cmp    eax,0xcaf39523
  40e500:	mov    al,0x48
  40e502:	push   esp
  40e503:	je     0x40e4c4
  40e505:	ins    BYTE PTR es:[edi],dx
  40e506:	loopne 0x40e4ab
  40e508:	dec    esi
  40e509:	retf   0xeea6
  40e50c:	mov    BYTE PTR [ebx+0x17],bh
  40e50f:	jecxz  0x40e522
  40e511:	add    BYTE PTR [eax],ch
  40e513:	popa   
  40e514:	or     BYTE PTR [ecx-0x4a],cl
  40e517:	xor    BYTE PTR [edi-0x14652ac9],bl
  40e51d:	mov    ebp,esp
  40e51f:	scas   eax,DWORD PTR es:[edi]
  40e520:	cmp    al,0x54
  40e522:	cmp    edi,DWORD PTR [ecx]
  40e524:	adc    BYTE PTR [ecx+0x15fa7879],0x9b
  40e52b:	aad    0xde
  40e52d:	add    al,0xb2
  40e52f:	pop    ebp
  40e530:	jg     0x40e4e2
  40e532:	push   edi
  40e533:	xor    ecx,DWORD PTR [eax]
  40e535:	cs neg bl
  40e538:	add    BYTE PTR [eax],cl
  40e53a:	fisubr DWORD PTR [eax+0x72]
  40e53d:	xor    eax,0x7dd31cd6
  40e542:	xchg   esp,edi
  40e544:	jle    0x40e51e
  40e546:	mov    al,0xca
  40e548:	jge    0x40e599
  40e54a:	test   bh,ah
  40e54c:	std    
  40e54d:	shl    DWORD PTR ds:0x54e08157,cl
  40e553:	test   BYTE PTR [ebp+0x4d],bh
  40e556:	nop
  40e557:	sub    edx,DWORD PTR [esi-0x23]
  40e55a:	jle    0x40e505
  40e55c:	scas   al,BYTE PTR es:[edi]
  40e55d:	shl    DWORD PTR [edi+0x58],1
  40e560:	mov    ecx,0xdd238b37
  40e565:	mov    al,ds:0xcfb07953
  40e56a:	out    dx,eax
  40e56b:	sbb    DWORD PTR [ecx],ecx
  40e56d:	imul   ebp,DWORD PTR [eax-0x33],0xd1adfdf7
  40e574:	cmp    BYTE PTR [ebp+edi*4-0x54],bh
  40e578:	mov    ch,0x93
  40e57a:	ins    BYTE PTR es:[edi],dx
  40e57b:	cld    
  40e57c:	sub    ebp,0x6242919f
  40e582:	pop    esi
  40e583:	push   es
  40e584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e585:	mov    ds:0xb9d743ba,eax
  40e58a:	mov    bl,0x9f
  40e58c:	push   edi
  40e58d:	jecxz  0x40e5c2
  40e58f:	das    
  40e590:	jns    0x40e577
  40e592:	mov    dl,BYTE PTR [edx-0x4ef4b7c9]
  40e598:	sub    BYTE PTR [ecx-0x7a],ch
  40e59b:	xor    BYTE PTR [edi],ah
  40e59d:	pop    ecx
  40e59e:	pop    ecx
  40e59f:	fs dec edx
  40e5a1:	test   esp,ecx
  40e5a3:	pop    ebx
  40e5a4:	sub    esi,DWORD PTR gs:[edi]
  40e5a7:	fwait
  40e5a8:	repz test BYTE PTR [eax+0x6ec09a2e],0xe
  40e5b0:	mov    bl,0x4f
  40e5b2:	dec    edi
  40e5b3:	(bad)  
  40e5b4:	cwde   
  40e5b5:	sbb    BYTE PTR [edi-0x14],0xb0
  40e5b9:	mov    edi,0x197fbca
  40e5be:	in     al,0xbd
  40e5c0:	mov    edi,0xaa33edf1
  40e5c5:	xchg   esp,eax
  40e5c6:	mov    WORD PTR [eax-0x72547289],cs
  40e5cc:	test   DWORD PTR [eax+0x6b],ebp
  40e5cf:	jb     0x40e561
  40e5d1:	enter  0xbd16,0xbb
  40e5d5:	shr    dl,1
  40e5d7:	mov    eax,0x969b9b8
  40e5dc:	sahf   
  40e5dd:	enter  0xfcae,0x2a
  40e5e1:	push   0x35
  40e5e3:	jmp    DWORD PTR [esi]
  40e5e5:	or     BYTE PTR [ebx-0x5bc018a7],ch
  40e5eb:	mov    ch,0xc
  40e5ed:	movq   mm7,mm4
  40e5f0:	fs aam 0x82
  40e5f3:	xor    esp,DWORD PTR [edx+0x67544ceb]
  40e5f9:	das    
  40e5fa:	inc    ecx
  40e5fb:	add    al,0xaf
  40e5fd:	or     bh,ah
  40e5ff:	push   ebx
  40e600:	or     eax,0x5d8ebb52
  40e605:	push   edi
  40e606:	jge    0x40e629
  40e608:	je     0x40e639
  40e60a:	mov    bh,0x4f
  40e60c:	or     eax,0x8946a142
  40e611:	addr16 je 0x40e64f
  40e614:	xor    eax,0x8f6c0f50
  40e619:	sbb    eax,0xdec636c9
  40e61e:	call   0x3c09:0x58fca798
  40e625:	int3   
  40e626:	(bad)  
  40e627:	cmp    DWORD PTR [ebx+0x20],edi
  40e62a:	popf   
  40e62b:	retf   
  40e62c:	dec    eax
  40e62d:	push   eax
  40e62e:	cmp    BYTE PTR ds:0x941012af,dl
  40e634:	out    dx,eax
  40e635:	leave  
  40e636:	lods   al,BYTE PTR ds:[esi]
  40e637:	(bad)  
  40e638:	sbb    cl,BYTE PTR [ebp+0xb]
  40e63b:	pop    esi
  40e63c:	pop    ebp
  40e63d:	xor    ch,ah
  40e63f:	stc    
  40e640:	int3   
  40e641:	jns    0x40e684
  40e643:	ins    DWORD PTR es:[edi],dx
  40e644:	jg     0x40e62c
  40e646:	repz and BYTE PTR [eax+0xe],0xb0
  40e64b:	mov    ?,WORD PTR [esi+eiz*2-0x3]
  40e64f:	popf   
  40e650:	cwde   
  40e651:	add    esp,ebp
  40e653:	dec    edx
  40e654:	cli    
  40e655:	mov    esi,ebp
  40e657:	aam    0xab
  40e659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e65a:	inc    ebp
  40e65b:	pop    ss
  40e65c:	jno    0x40e68e
  40e65e:	xchg   BYTE PTR [edx],cl
  40e660:	cmp    ebp,DWORD PTR [esi+0x20]
  40e663:	loope  0x40e6a2
  40e665:	add    al,bh
  40e667:	add    ah,BYTE PTR [esp+ecx*2]
  40e66a:	icebp  
  40e66b:	push   ecx
  40e66c:	ret    0x21e2
  40e66f:	out    0x26,eax
  40e671:	dec    ebp
  40e672:	push   0x80ae5da3
  40e677:	sub    ebp,esi
  40e679:	xlat   BYTE PTR ds:[ebx]
  40e67a:	cmp    eax,esi
  40e67c:	jbe    0x40e67b
  40e67e:	popf   
  40e67f:	mov    ecx,?
  40e681:	adc    BYTE PTR [esi],cl
  40e683:	sbb    ebp,eax
  40e685:	mov    es,eax
  40e687:	popf   
  40e688:	mov    esp,0xfd2d5580
  40e68d:	cmp    BYTE PTR [ebp+0x69],cl
  40e690:	retf   
  40e691:	cmp    BYTE PTR [ebp-0x2f242984],0x67
  40e698:	(bad)  
  40e69a:	outs   dx,DWORD PTR ds:[esi]
  40e69b:	jecxz  0x40e6f2
  40e69d:	shr    cl,0xa
  40e6a0:	aam    0xfe
  40e6a2:	lods   al,BYTE PTR ds:[esi]
  40e6a3:	jb     0x40e650
  40e6a5:	mov    ds:0xbe10c179,eax
  40e6aa:	stc    
  40e6ab:	inc    esi
  40e6ac:	jae    0x40e67f
  40e6ae:	dec    esp
  40e6af:	lods   eax,DWORD PTR ds:[esi]
  40e6b0:	cld    
  40e6b1:	jnp    0x40e687
  40e6b3:	ins    BYTE PTR es:[edi],dx
  40e6b4:	push   ebx
  40e6b5:	ret    0xbc15
  40e6b8:	imul   BYTE PTR [esi+edi*2-0x18f9fbc4]
  40e6bf:	adc    eax,0xd5dac453
  40e6c4:	and    bl,0xa6
  40e6c7:	repnz xchg ecx,eax
  40e6c9:	push   es
  40e6ca:	test   DWORD PTR [edx+0x13],edx
  40e6cd:	lahf   
  40e6ce:	xchg   edi,eax
  40e6cf:	ds stos BYTE PTR es:[edi],al
  40e6d1:	pop    ebp
  40e6d2:	mov    dh,0x7b
  40e6d4:	aaa    
  40e6d5:	dec    esi
  40e6d6:	imul   ebp,DWORD PTR [edx+0x107844d0],0xffffffbc
  40e6dd:	fiadd  WORD PTR [edx+0x10]
  40e6e0:	inc    esi
  40e6e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6e2:	or     eax,0x4e603a05
  40e6e7:	jns    0x40e6a6
  40e6e9:	leave  
  40e6ea:	push   ds
  40e6eb:	jne    0x40e6fe
  40e6ed:	std    
  40e6ee:	sub    edx,edi
  40e6f0:	test   eax,0x783b5b8f
  40e6f5:	push   edx
  40e6f6:	iret   
  40e6f7:	mov    esi,0x46f0966f
  40e6fc:	addr16 jg 0x40e685
  40e6ff:	mov    ds:0xec39bb7,al
  40e704:	mov    DWORD PTR [ebx],0xed9bc690
  40e70a:	mov    dh,0xdf
  40e70c:	loopne 0x40e6b8
  40e70e:	and    eax,0xf2472611
  40e713:	push   esp
  40e714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e715:	mov    ah,0x6c
  40e717:	into   
  40e718:	sbb    eax,0x72f23d1f
  40e71d:	sub    DWORD PTR [ebx+0x38207ffb],0x7dc619d
  40e727:	fcomp  QWORD PTR [ebx-0x772667f3]
  40e72d:	bound  ecx,QWORD PTR ds:0xf3998ca5
  40e733:	sbb    eax,0x77bf8f0
  40e738:	leave  
  40e739:	je     0x40e753
  40e73b:	sbb    al,0xed
  40e73d:	out    0x4c,eax
  40e73f:	(bad)  
  40e740:	(bad)  
  40e741:	outs   dx,BYTE PTR ds:[esi]
  40e742:	scas   eax,DWORD PTR es:[edi]
  40e743:	aaa    
  40e744:	outs   dx,DWORD PTR ds:[esi]
  40e745:	xor    eax,0x6280a0e9
  40e74a:	jg     0x40e788
  40e74c:	pop    ebx
  40e74d:	adc    eax,0xeba7d0a1
  40e752:	cdq    
  40e753:	ret    
  40e754:	jne    0x40e797
  40e756:	in     eax,0xaa
  40e758:	pop    ds
  40e759:	ja     0x40e74d
  40e75b:	push   ebx
  40e75c:	lods   eax,DWORD PTR ds:[esi]
  40e75d:	push   edx
  40e75e:	fldcw  WORD PTR [ebp+0xd7d9356]
  40e764:	sub    BYTE PTR [edi+eiz*1],0xc6
  40e768:	in     eax,dx
  40e769:	xchg   esp,eax
  40e76a:	push   eax
  40e76b:	aam    0xf0
  40e76d:	sub    esi,DWORD PTR [ebp+eiz*8-0x18]
  40e771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e772:	jmp    0x40e702
  40e774:	pop    edi
  40e775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e776:	mov    esp,DWORD PTR [edx+0x635a9f71]
  40e77c:	fcmovu st,st(4)
  40e77e:	aas    
  40e77f:	mov    bh,0x51
  40e781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e782:	std    
  40e783:	or     BYTE PTR ds:0x70ca5c86,bh
  40e78a:	jbe    0x40e7d2
  40e78c:	nop
  40e78d:	popa   
  40e78e:	pop    ax
  40e790:	xchg   BYTE PTR [ebp+0x9c06ad4],al
  40e796:	out    dx,al
  40e797:	dec    esp
  40e798:	sbb    BYTE PTR [ebp+0x2ffd2fc4],cl
  40e79e:	(bad)  
  40e79f:	ds dec ebx
  40e7a1:	call   0x39a7:0x27be49c0
  40e7a8:	ja     0x40e7b3
  40e7aa:	addr16 dec ecx
  40e7ac:	in     eax,0x60
  40e7ae:	stc    
  40e7af:	mov    dh,0xa4
  40e7b1:	cld    
  40e7b2:	out    0x83,al
  40e7b4:	jle    0x40e81d
  40e7b6:	sbb    al,0xa5
  40e7b8:	and    al,0x15
  40e7ba:	add    ah,al
  40e7bc:	inc    DWORD PTR [ebx]
  40e7be:	jb     0x40e75e
  40e7c0:	dec    esi
  40e7c1:	mov    BYTE PTR [edi+0x2],dl
  40e7c4:	(bad)  
  40e7c5:	adc    edi,DWORD PTR [ebx+eiz*8]
  40e7c8:	in     eax,0x45
  40e7ca:	jb     0x40e7ce
  40e7cc:	pop    esp
  40e7cd:	or     al,0x4b
  40e7cf:	inc    eax
  40e7d0:	xor    BYTE PTR [ebp+0x44824a48],ah
  40e7d6:	sti    
  40e7d7:	dec    ebp
  40e7d8:	add    edi,DWORD PTR [eax+0x46]
  40e7db:	shr    eax,1
  40e7dd:	lea    ebx,[eax-0x17ad176e]
  40e7e3:	out    dx,al
  40e7e4:	push   esp
  40e7e5:	lahf   
  40e7e6:	test   al,0x62
  40e7e8:	mov    al,ds:0xab12ec6e
  40e7ed:	data16 jle 0x40e7b2
  40e7f0:	mov    bh,0x49
  40e7f2:	mov    ds:0xedecddaf,al
  40e7f7:	lock test eax,0x2db2d054
  40e7fd:	xchg   ebp,eax
  40e7fe:	jo     0xb56ed0e4
  40e804:	test   esi,ecx
  40e806:	add    al,0xf3
  40e808:	mov    DWORD PTR [ebx+eiz*4-0x21014076],ebx
  40e80f:	inc    ebp
  40e810:	jmp    DWORD PTR [ecx]
  40e812:	ss mov ch,0x58
  40e815:	fimul  DWORD PTR [edi]
  40e817:	out    0xc,al
  40e819:	pusha  
  40e81a:	sub    eax,0x2e856e02
  40e81f:	inc    ecx
  40e820:	push   ss
  40e821:	sbb    ecx,DWORD PTR [ebp-0x50]
  40e824:	adc    ecx,DWORD PTR [eax+0x79]
  40e827:	sub    ebx,DWORD PTR [eax]
  40e829:	aam    0x5e
  40e82b:	push   ecx
  40e82c:	dec    edi
  40e82d:	mov    ah,0x63
  40e82f:	xchg   ecx,eax
  40e830:	push   eax
  40e831:	inc    ebx
  40e832:	push   es
  40e833:	(bad)  
  40e834:	sub    dh,bh
  40e836:	xchg   edi,eax
  40e837:	ins    DWORD PTR es:[edi],dx
  40e838:	jae    0x40e8a9
  40e83a:	adc    BYTE PTR [ebx-0x62],dh
  40e83d:	(bad)  
  40e83f:	jno    0x40e886
  40e841:	cmp    ecx,ebp
  40e843:	push   eax
  40e844:	adc    BYTE PTR [ebx-0x7be5595b],bh
  40e84a:	sahf   
  40e84b:	dec    edx
  40e84c:	inc    esi
  40e84d:	xchg   esi,eax
  40e84e:	and    BYTE PTR [ebp+0x1a020328],ah
  40e854:	sub    eax,0xf8ef4482
  40e859:	aaa    
  40e85a:	add    DWORD PTR [ebp+0x41],ebp
  40e85d:	mov    edi,0xf43bc19c
  40e862:	jne    0x40e874
  40e864:	add    eax,0x39a61e08
  40e869:	push   esp
  40e86a:	dec    DWORD PTR [edx+0x1b]
  40e86d:	fs retf 
  40e86f:	das    
  40e870:	lock test eax,0xe86a168c
  40e876:	push   0xe0d66cd2
  40e87b:	ins    BYTE PTR es:[edi],dx
  40e87c:	loope  0x40e88b
  40e87e:	push   esp
  40e87f:	sub    ebx,DWORD PTR [ecx]
  40e881:	mov    ds:0xcbbc81da,al
  40e886:	xchg   esp,eax
  40e887:	jns    0x40e8d0
  40e889:	or     bl,bl
  40e88b:	push   ds
  40e88c:	imul   esp,esi,0xf1f11d00
  40e892:	js     0x40e81d
  40e894:	clts   
  40e896:	dec    edx
  40e897:	dec    eax
  40e898:	or     BYTE PTR [eax+0x18],ch
  40e89b:	or     ecx,DWORD PTR [ecx+edx*2+0x15038db4]
  40e8a2:	cdq    
  40e8a3:	or     esp,DWORD PTR [esi-0x10703671]
  40e8a9:	push   esi
  40e8aa:	aad    0xb0
  40e8ac:	jle    0x40e845
  40e8ae:	test   al,0x94
  40e8b0:	pop    ecx
  40e8b1:	push   cs
  40e8b2:	cmp    BYTE PTR [edx-0x13],bl
  40e8b5:	loopne 0x40e848
  40e8b7:	jmp    0x40e871
  40e8b9:	shl    BYTE PTR [edx-0x20d2c98e],0xd2
  40e8c0:	out    0x47,eax
  40e8c2:	imul   esi,DWORD PTR [edx-0x13],0xffffffa7
  40e8c6:	test   DWORD PTR [esp+edi*4+0x46],eax
  40e8ca:	fst    QWORD PTR [esi+edx*4]
  40e8cd:	mov    cl,al
  40e8cf:	cli    
  40e8d0:	(bad)  
  40e8d1:	mov    bh,0xf2
  40e8d3:	lock ins DWORD PTR es:[edi],dx
  40e8d5:	(bad)  
  40e8d6:	inc    ebp
  40e8d7:	jmp    DWORD PTR [esi+0x1838674]
  40e8dd:	xor    eax,0xeea654f6
  40e8e2:	and    DWORD PTR [edx],0x6f30350c
  40e8e8:	(bad)  
  40e8e9:	jl     0x40e8ac
  40e8eb:	sbb    eax,0xfe18caf6
  40e8f0:	ror    edi,0x65
  40e8f3:	test   eax,0x25c045e2
  40e8f8:	retf   0x65e
  40e8fb:	popa   
  40e8fc:	lds    ebx,FWORD PTR [edi-0x7b536939]
  40e902:	stos   DWORD PTR es:[edi],eax
  40e903:	shl    bh,1
  40e905:	or     al,0x7e
  40e907:	in     eax,0xe2
  40e909:	jmp    0x40e8ff
  40e90b:	loopne 0x40e94c
  40e90d:	rol    DWORD PTR [edx+ebp*2],1
  40e910:	hlt    
  40e911:	push   es
  40e912:	leave  
  40e913:	lods   eax,DWORD PTR ds:[esi]
  40e914:	outs   dx,DWORD PTR ds:[esi]
  40e915:	int    0x4d
  40e917:	clc    
  40e918:	inc    esp
  40e919:	out    0x4d,al
  40e91b:	and    eax,0x2b2a3875
  40e920:	fwait
  40e921:	xchg   esp,eax
  40e922:	xor    BYTE PTR [ebx],dh
  40e924:	inc    edx
  40e925:	xor    BYTE PTR [esi+ecx*2],dl
  40e928:	les    esp,FWORD PTR ds:0x131b4cd2
  40e92e:	call   0xc4a8c5b9
  40e933:	jmp    0x81be44ba
  40e938:	mov    dl,0x56
  40e93a:	mov    ch,0x87
  40e93c:	nop
  40e93d:	loope  0x40e98a
  40e93f:	mov    DWORD PTR [edi-0x5ce4c210],edx
  40e945:	xor    eax,0x34fe69c1
  40e94a:	xchg   ebx,eax
  40e94b:	mov    esi,0xff7aed0e
  40e950:	mov    ah,0x31
  40e952:	cli    
  40e953:	jnp    0x40e9d2
  40e955:	push   esp
  40e956:	xchg   esp,eax
  40e957:	(bad)  [edx+0xaa7805b]
  40e95d:	adc    DWORD PTR ds:0xd6b69385,ebx
  40e963:	mov    ds:0xff5c016f,eax
  40e968:	data16 jp 0x40e96f
  40e96b:	daa    
  40e96c:	cmp    eax,0xdd22fb43
  40e971:	inc    edi
  40e972:	fcomp  st(3)
  40e974:	dec    ebp
  40e975:	mov    dh,0x31
  40e977:	xchg   BYTE PTR [esi+0x54db0360],bl
  40e97d:	and    DWORD PTR [esp+ebp*4+0x18],0xaa2cb2eb
  40e985:	and    BYTE PTR [edx-0x2c3c8195],0x70
  40e98c:	mov    bh,0xdc
  40e98e:	jno    0x40e97c
  40e990:	enter  0xbe,0x5d
  40e994:	rol    dl,cl
  40e996:	jb     0x40e9d5
  40e998:	mov    edi,DWORD PTR [eax+0x3c]
  40e99b:	lea    esi,[edi+esi*8+0x78]
  40e99f:	mov    esi,DWORD PTR [esi+eax*1]
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	xor    BYTE PTR [esi],dl
  40ecee:	arpl   WORD PTR [ebx+0x7c7ccc7c],si
  40ecf4:	inc    eax
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	cmp    al,0x34
  40ecfa:	jg     0x40ec93
  40ecfc:	test   dh,0x79
  40ecff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed00:	xlat   BYTE PTR ds:[ebx]
  40ed01:	jbe    0x40ecbd
  40ed03:	adc    eax,0xa442dd2e
  40ed08:	int    0xae
  40ed0a:	jp     0x40ecbf
  40ed0c:	fucom  st(5)
  40ed0e:	mov    ecx,0x4672bfb1
  40ed13:	test   BYTE PTR [ecx],0xc8
  40ed16:	pop    ds
  40ed17:	gs sti 
  40ed19:	mov    eax,0xeae75794
  40ed1e:	ins    WORD PTR es:[edi],dx
  40ed20:	jmp    0x40ecd4
  40ed22:	ja     0x40ed78
  40ed24:	dec    esi
  40ed25:	les    ebp,FWORD PTR cs:[edi+0x1c]
  40ed29:	xchg   edx,eax
  40ed2a:	sub    bl,0x89
  40ed2d:	icebp  
  40ed2e:	sbb    eax,0xdc046941
  40ed33:	les    edi,FWORD PTR [edx]
  40ed35:	sub    DWORD PTR [ecx],0x0
  40ed38:	xor    eax,0xb8e29ac3
  40ed3d:	mov    esp,0x350b49ba
  40ed42:	arpl   WORD PTR [edx],di
  40ed44:	ja     0x40ed33
  40ed46:	ret    0x3d71
  40ed49:	out    dx,eax
  40ed4a:	xor    eax,0xf644eb14
  40ed4f:	shl    cl,cl
  40ed51:	popf   
  40ed52:	nop
  40ed53:	inc    eax
  40ed54:	retf   
  40ed55:	xlat   BYTE PTR ds:[ebx]
  40ed56:	cdq    
  40ed57:	mov    ebx,0xc809c639
  40ed5c:	xor    BYTE PTR [edi-0x17],cl
  40ed5f:	xchg   esi,eax
  40ed60:	sbb    al,0x49
  40ed62:	dec    esp
  40ed63:	mov    dh,0xc
  40ed65:	mov    ?,ebp
  40ed67:	ret    
  40ed68:	es mov ebp,0x894485f1
  40ed6e:	cmc    
  40ed6f:	xchg   edi,eax
  40ed70:	js     0x40edb8
  40ed72:	jns    0x40ecfa
  40ed74:	add    DWORD PTR [esi+0xd141130],ebx
  40ed7a:	xchg   edx,eax
  40ed7b:	sbb    al,0xa1
  40ed7d:	inc    edx
  40ed7e:	adc    DWORD PTR [eax],0xcf6b20d1
  40ed84:	mov    WORD PTR [eax],es
  40ed86:	in     eax,0x1f
  40ed88:	leave  
  40ed89:	pop    ebp
  40ed8a:	shr    edi,1
  40ed8c:	cli    
  40ed8d:	cmc    
  40ed8e:	lods   al,BYTE PTR ds:[esi]
  40ed8f:	push   ecx
  40ed90:	mov    ah,0xb1
  40ed92:	aaa    
  40ed93:	jge    0x40edad
  40ed95:	shl    esp,1
  40ed97:	jae    0xe6c763a5
  40ed9d:	xchg   DWORD PTR [ebx-0x61],eax
  40eda0:	pop    ss
  40eda1:	jg     0x40eda2
  40eda3:	aas    
  40eda4:	dec    esi
  40eda5:	mov    ebp,0xdf5138
  40edaa:	jne    0x40ed92
  40edac:	sub    edx,eax
  40edae:	jl     0x40edb3
  40edb0:	mov    bh,0x89
  40edb2:	lock mov edx,edx
  40edb5:	xlat   BYTE PTR ds:[ebx]
  40edb6:	push   ebp
  40edb7:	jb     0x40edf2
  40edb9:	xor    DWORD PTR ds:0x73795f42,ebx
  40edbf:	sub    esi,DWORD PTR [eax]
  40edc1:	xor    dh,BYTE PTR [edi]
  40edc3:	stos   DWORD PTR es:[edi],eax
  40edc4:	ret    
  40edc5:	xchg   edx,eax
  40edc6:	loopne 0x40ede5
  40edc8:	inc    esi
  40edc9:	and    cl,BYTE PTR [eax-0xeee56d0]
  40edcf:	in     eax,dx
  40edd0:	cmp    ah,BYTE PTR [esi+0x7e65ed5e]
  40edd6:	jnp    0x40ee24
  40edd8:	mov    esp,esp
  40edda:	bound  ecx,QWORD PTR [edx]
  40eddc:	into   
  40eddd:	(bad)  
  40eddf:	mov    BYTE PTR cs:[edx-0x1d],al
  40ede3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ede4:	out    dx,al
  40ede5:	mov    edx,0x8d56ca12
  40edea:	dec    eax
  40edeb:	imul   esp,DWORD PTR [esi+0x5bdf9f62],0x1b74a408
  40edf5:	cmc    
  40edf6:	cdq    
  40edf7:	sbb    eax,0xf765a0d5
  40edfc:	inc    esp
  40edfd:	scas   eax,DWORD PTR es:[edi]
  40edfe:	lods   eax,DWORD PTR ds:[esi]
  40edff:	xchg   BYTE PTR [esi],ah
  40ee01:	mov    esi,0xf281ca29
  40ee06:	div    DWORD PTR [edx+0x79853902]
  40ee0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee0d:	push   eax
  40ee0e:	dec    edi
  40ee0f:	stos   DWORD PTR es:[edi],eax
  40ee10:	xchg   DWORD PTR [ebx-0x324115d1],ebp
  40ee16:	pop    ebp
  40ee17:	popf   
  40ee18:	mov    edx,0x2cee4354
  40ee1d:	push   ecx
  40ee1e:	xor    ah,BYTE PTR [edx-0x2163a5bc]
  40ee24:	inc    ebp
  40ee25:	sub    BYTE PTR [eax],bh
  40ee27:	push   esp
  40ee28:	fist   DWORD PTR [esi-0x3a]
  40ee2b:	xchg   esp,eax
  40ee2c:	xor    BYTE PTR [eax+edx*8+0x77c59fe6],ah
  40ee33:	and    dl,dh
  40ee35:	mov    BYTE PTR [eax+0xa],bl
  40ee38:	shl    ecx,1
  40ee3a:	or     bl,al
  40ee3c:	dec    ebp
  40ee3d:	sti    
  40ee3e:	scas   eax,DWORD PTR es:[edi]
  40ee3f:	pop    ds
  40ee40:	rcr    DWORD PTR [ebx-0x3b1f585a],0xc
  40ee47:	or     eax,0xbaffc4e
  40ee4c:	mov    esi,0x70181023
  40ee51:	jne    0x40ee96
  40ee53:	outs   dx,DWORD PTR ds:[esi]
  40ee54:	push   edi
  40ee55:	std    
  40ee56:	inc    edx
  40ee57:	sub    eax,0x1b836e4d
  40ee5c:	sbb    ecx,ebx
  40ee5e:	(bad)  
  40ee5f:	or     al,0xca
  40ee61:	sub    al,0xfe
  40ee63:	mov    ebx,0x7e4b02de
  40ee68:	mov    esi,0xa7277e1d
  40ee6d:	int3   
  40ee6e:	repnz xchg edi,eax
  40ee70:	test   DWORD PTR [esp+eax*1+0x40],0xf9ff1270
  40ee78:	mov    BYTE PTR [eax],0x75
  40ee7b:	push   es
  40ee7c:	shl    BYTE PTR [ebx+0x65],cl
  40ee7f:	call   0x3dfe665
  40ee84:	imul   ebp,DWORD PTR [ebp-0x471b83c6],0x1e
  40ee8b:	pop    eax
  40ee8c:	mov    es,WORD PTR [ebx+esi*2-0x21]
  40ee90:	enter  0x2164,0xb3
  40ee94:	dec    edi
  40ee95:	popf   
  40ee96:	jne    0x40ef01
  40ee98:	push   esi
  40ee99:	add    ah,dl
  40ee9b:	xchg   DWORD PTR [ebx],esp
  40ee9d:	pop    ds
  40ee9e:	jle    0x40eef4
  40eea0:	fs ja  0x40eef0
  40eea3:	mov    esp,0xcd1270ac
  40eea8:	add    al,0x2
  40eeaa:	or     dh,BYTE PTR [ecx+0x6b]
  40eead:	pop    esp
  40eeae:	xchg   edx,eax
  40eeaf:	pop    ebp
  40eeb0:	pop    ebp
  40eeb1:	fistp  WORD PTR [esp+ebp*2]
  40eeb4:	iret   
  40eeb5:	pop    ebp
  40eeb6:	aaa    
  40eeb7:	mov    dl,0x36
  40eeb9:	mov    bh,0x74
  40eebb:	push   es
  40eebc:	sub    esi,eax
  40eebe:	aam    0x77
  40eec0:	sahf   
  40eec1:	lahf   
  40eec2:	mov    ebp,0x25660f08
  40eec7:	pop    eax
  40eec8:	sti    
  40eec9:	jno    0x40ef27
  40eecb:	outs   dx,DWORD PTR ds:[esi]
  40eecc:	aad    0x4c
  40eece:	pushf  
  40eecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eed0:	aas    
  40eed1:	cs inc edx
  40eed3:	jb     0x40eec6
  40eed5:	sbb    BYTE PTR [esi+0x3e],0x1a
  40eed9:	pop    edi
  40eeda:	call   0xd085:0xfca4e028
  40eee1:	dec    ecx
  40eee2:	imul   esp,DWORD PTR [eax+ebx*2-0x8],0x1f0e9e6c
  40eeea:	mov    edi,DWORD PTR [ebx]
  40eeec:	lahf   
  40eeed:	push   esp
  40eeee:	push   0x61
  40eef0:	cmp    ebp,DWORD PTR [ecx]
  40eef2:	imul   eax,DWORD PTR [ebx],0xffffff98
  40eef5:	jge    0x40ef0d
  40eef7:	mov    ch,0xac
  40eef9:	and    dl,bh
  40eefb:	in     eax,0x2c
  40eefd:	xchg   esp,eax
  40eefe:	jl     0x40ef48
  40ef00:	jns    0x40eefa
  40ef02:	and    al,0x94
  40ef04:	or     al,dl
  40ef06:	xor    BYTE PTR ss:[esi],bh
  40ef09:	out    0x73,al
  40ef0b:	mov    BYTE PTR ds:0x4186258b,bh
  40ef11:	(bad)  
  40ef12:	lds    ecx,FWORD PTR [eax+0x1e9cd6f5]
  40ef18:	(bad)  
  40ef19:	pushw  ss
  40ef1b:	ins    BYTE PTR es:[edi],dx
  40ef1c:	inc    eax
  40ef1d:	mov    al,ds:0x5685cd02
  40ef22:	pop    ebp
  40ef23:	arpl   si,si
  40ef25:	push   eax
  40ef26:	inc    ecx
  40ef27:	mov    edi,0x2d9816c4
  40ef2c:	mov    bl,0xd7
  40ef2e:	xor    BYTE PTR [ebx+0x7e],bl
  40ef31:	xor    dh,BYTE PTR [edx+0x6a]
  40ef34:	xchg   BYTE PTR [esi+0x15],bl
  40ef37:	ss mov esp,0x6f809aaf
  40ef3d:	scas   al,BYTE PTR es:[edi]
  40ef3e:	ins    DWORD PTR es:[edi],dx
  40ef3f:	rol    ah,1
  40ef41:	adc    DWORD PTR [esi],esi
  40ef43:	push   esp
  40ef44:	cli    
  40ef45:	jne    0x40ef74
  40ef47:	add    BYTE PTR [esi],ch
  40ef49:	fbstp  TBYTE PTR [ecx]
  40ef4b:	loopne 0x40ef39
  40ef4d:	push   esi
  40ef4e:	xor    edx,ebp
  40ef50:	pop    esi
  40ef51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef52:	imul   BYTE PTR [edi+edx*2-0x10]
  40ef56:	sahf   
  40ef57:	pop    ebx
  40ef58:	cmc    
  40ef59:	sub    BYTE PTR [edi+0x630a2d96],bh
  40ef5f:	cmp    DWORD PTR [ebx],eax
  40ef61:	sbb    esp,DWORD PTR [eax-0x30dfbb0b]
  40ef67:	dec    edi
  40ef68:	lds    edi,FWORD PTR ds:0x9bc7f7b4
  40ef6e:	aad    0x85
  40ef70:	inc    esi
  40ef71:	sub    dl,BYTE PTR [edx+0x70]
  40ef74:	jae    0x40ef18
  40ef76:	fistp  QWORD PTR [edx+0x7e]
  40ef79:	adc    al,0xe5
  40ef7b:	inc    ebp
  40ef7c:	sub    dl,BYTE PTR [ebp+ecx*4+0x34]
  40ef80:	loop   0x40ef53
  40ef82:	(bad)  
  40ef83:	mov    esp,DWORD PTR [edx+0x69]
  40ef86:	pop    es
  40ef87:	push   ds
  40ef88:	arpl   WORD PTR [esi-0x41],di
  40ef8b:	push   eax
  40ef8c:	xlat   BYTE PTR ds:[ebx]
  40ef8d:	jbe    0x40ef72
  40ef8f:	nop
  40ef90:	push   ss
  40ef91:	or     al,0xdb
  40ef93:	std    
  40ef94:	out    0x44,eax
  40ef96:	fwait
  40ef97:	or     DWORD PTR [ebp+eax*4-0x6b],ebp
  40ef9b:	and    ebx,ebx
  40ef9d:	and    eax,0xe1d25638
  40efa2:	outs   dx,BYTE PTR ds:[esi]
  40efa3:	jl     0x40ef8c
  40efa5:	push   esp
  40efa6:	pop    ebp
  40efa7:	neg    edi
  40efa9:	xchg   esi,eax
  40efaa:	push   ebp
  40efab:	es daa 
  40efad:	cmp    BYTE PTR [edi-0x2e],bh
  40efb0:	push   ebx
  40efb1:	mov    dh,0xd5
  40efb4:	fwait
  40efb5:	je     0x40ef40
  40efb7:	fisttp QWORD PTR [edi+edi*8]
  40efba:	psubusw mm7,QWORD PTR [ecx]
  40efbd:	out    dx,eax
  40efbe:	shl    BYTE PTR [esi-0x5e],cl
  40efc1:	sbb    al,dh
  40efc3:	jl     0x40ef8c
  40efc5:	es adc al,0xc1
  40efc8:	arpl   WORD PTR [esi+0x191ecb11],si
  40efce:	dec    edx
  40efcf:	dec    ebx
  40efd0:	lea    esi,[esi-0x619aea12]
  40efd6:	retf   0xb88b
  40efd9:	or     al,0x17
  40efdb:	leave  
  40efdc:	push   ss
  40efdd:	and    al,0xef
  40efdf:	jne    0x40efc2
  40efe1:	repz mov edi,0x15543188
  40efe7:	push   ebx
  40efe8:	daa    
  40efe9:	and    bh,BYTE PTR [ebx+eiz*4-0x2d]
  40efed:	ds dec esp
  40efef:	xor    DWORD PTR [eax],eax
  40eff1:	pop    ebp
  40eff2:	mov    WORD PTR [ebx-0x21062504],ds
  40eff8:	retf   0x6d48
  40effb:	pop    ebp
  40effc:	cmp    ebp,eax
  40effe:	jno    0x40effe
  40f000:	enter  0x4e1d,0x32
  40f004:	cli    
  40f005:	into   
  40f006:	push   ss
  40f007:	cmp    edx,ebx
  40f009:	xchg   edi,eax
  40f00a:	pop    edi
  40f00b:	add    al,0x57
  40f00d:	fldenv [esi-0x30]
  40f010:	sub    DWORD PTR [eax],0x5a
  40f013:	inc    ebp
  40f014:	repz sbb dl,al
  40f017:	or     DWORD PTR [ebp-0x25fd4776],ebx
  40f01d:	mov    al,ds:0x6873835
  40f022:	jb     0x40efd6
  40f024:	cmp    al,0x6e
  40f026:	adc    esp,DWORD PTR [edx-0xb]
  40f029:	cwde   
  40f02a:	adc    al,0x81
  40f02c:	add    eax,0x75962c36
  40f031:	ror    DWORD PTR [eax+0x150e6a70],1
  40f037:	enter  0xfc30,0x1f
  40f03b:	mov    cl,0xfd
  40f03d:	xchg   edx,eax
  40f03e:	je     0x40eff3
  40f040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f041:	fisub  WORD PTR [edi]
  40f043:	jge    0x40f09f
  40f045:	xchg   ebx,eax
  40f046:	inc    esp
  40f047:	call   0x9cf68c7f
  40f04c:	mov    cs,WORD PTR [eax]
  40f04e:	(bad)  
  40f04f:	fidivr DWORD PTR [edi+esi*4+0x76]
  40f053:	dec    ebp
  40f054:	mov    eax,0xe734e2f9
  40f059:	nop
  40f05a:	fsubr  DWORD PTR [esi+0x4c8a8519]
  40f060:	mov    al,ds:0xb80ba2d2
  40f065:	add    bl,BYTE PTR [edi-0x77]
  40f068:	call   0xe17ed408
  40f06d:	and    BYTE PTR [ecx+ecx*1],ah
  40f070:	mov    eax,DWORD PTR [esi+0x1f]
  40f073:	shl    BYTE PTR [edi-0x37],cl
  40f076:	sub    al,0x90
  40f078:	imul   esi,DWORD PTR ds:0x2922d397,0xffffffdb
  40f07f:	mov    eax,ds:0x44a03ad8
  40f084:	outs   dx,BYTE PTR ds:[esi]
  40f085:	ds aaa 
  40f087:	push   esp
  40f088:	loopne 0x40f096
  40f08a:	sar    BYTE PTR [edx],1
  40f08c:	jge    0x40f109
  40f08e:	rol    BYTE PTR [ebx+0x33],cl
  40f091:	leave  
  40f092:	pop    ebx
  40f093:	shr    BYTE PTR [edx],1
  40f095:	pop    edx
  40f096:	test   DWORD PTR [ebp+eiz*8+0x1f],ebx
  40f09a:	pop    esp
  40f09b:	mov    edx,0x9a0d3c00
  40f0a0:	js     0x40f06b
  40f0a2:	in     eax,0xb1
  40f0a4:	fstp   TBYTE PTR ds:0x65e842d0
  40f0aa:	sub    BYTE PTR [edi+0x48fb57f9],bl
  40f0b0:	inc    esi
  40f0b1:	jnp    0x40f075
  40f0b3:	add    DWORD PTR [ebx],edi
  40f0b5:	xchg   ebp,eax
  40f0b6:	mov    edi,0xa256c8eb
  40f0bb:	pop    ecx
  40f0bc:	mov    ah,BYTE PTR [ecx+0x68]
  40f0bf:	out    0xb,al
  40f0c1:	dec    ebx
  40f0c2:	jg     0x40f0dc
  40f0c4:	or     BYTE PTR [edx+0x3e],0xa0
  40f0c8:	push   edx
  40f0c9:	ja     0x40f071
  40f0cb:	push   esp
  40f0cc:	cs jl  0x40f12b
  40f0cf:	add    BYTE PTR [esi],bh
  40f0d1:	mov    ecx,0x9961f68e
  40f0d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0d7:	imul   ecx,DWORD PTR [eax+0x63c948b],0xf56be516
  40f0e1:	outs   dx,BYTE PTR ds:[esi]
  40f0e2:	jo     0x40f0a7
  40f0e4:	mov    cl,0xee
  40f0e6:	retf   0x4c4f
  40f0e9:	mov    di,0x3733
  40f0ed:	aaa    
  40f0ee:	xor    DWORD PTR [edi+ebp*1],0xffffff88
  40f0f2:	push   0x68fb0ad8
  40f0f7:	jg     0x40f0bc
  40f0f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0fa:	and    al,0x2a
  40f0fc:	fcom   QWORD PTR [ebp+0x68cf9914]
  40f102:	mov    ch,0xfb
  40f104:	je     0x40f0f9
  40f106:	mov    ds:0xcd9f287c,al
  40f10b:	push   esp
  40f10c:	pop    ebp
  40f10d:	arpl   WORD PTR [edi-0x2f],cx
  40f110:	xor    eax,0xd0f2cfb
  40f115:	or     bl,BYTE PTR [eax]
  40f117:	nop
  40f118:	dec    ax
  40f11a:	cld    
  40f11b:	ja     0x40f191
  40f11d:	xor    dh,dh
  40f11f:	cmc    
  40f120:	xchg   edx,eax
  40f121:	jecxz  0x40f0d2
  40f123:	mov    bh,cl
  40f125:	hlt    
  40f126:	or     ebp,DWORD PTR [eax-0x1c]
  40f129:	pop    eax
  40f12a:	stos   DWORD PTR es:[edi],eax
  40f12b:	sbb    edi,edx
  40f12d:	mov    esp,0x7656b470
  40f132:	pop    ecx
  40f133:	cmp    al,0x8
  40f135:	push   edx
  40f136:	adc    esi,ebp
  40f138:	call   0x327af6c8
  40f13d:	ret    0x5a01
  40f140:	sti    
  40f141:	push   cs
  40f142:	dec    edi
  40f143:	int    0x95
  40f145:	xchg   esi,eax
  40f146:	add    DWORD PTR [esi+0x45],ecx
  40f149:	out    0xd,eax
  40f14b:	mov    edi,0x8883f893
  40f150:	add    dl,BYTE PTR [ebx+0x2b1f723]
  40f156:	mov    edi,0x58fe8f89
  40f15b:	call   0x618a:0xc212e50f
  40f162:	sub    eax,0x5f834b0e
  40f167:	in     eax,dx
  40f168:	xor    edi,edi
  40f16a:	push   ebp
  40f16b:	add    al,0xa3
  40f16d:	cmp    DWORD PTR [esi+0x794cffef],ebx
  40f173:	jle    0x40f10f
  40f175:	in     eax,0xfd
  40f177:	or     eax,0x60e1f17d
  40f17c:	ja     0x40f177
  40f17e:	leave  
  40f17f:	push   ss
  40f180:	or     DWORD PTR [esi],ebp
  40f182:	aam    0xe8
  40f184:	push   cs
  40f185:	out    0x60,eax
  40f187:	pushf  
  40f188:	sahf   
  40f189:	xchg   DWORD PTR ds:0xdcd6a96b,ecx
  40f18f:	xor    BYTE PTR [edi-0x78],bh
  40f192:	add    ebx,DWORD PTR [eax+0x2e94783f]
  40f198:	popa   
  40f199:	popf   
  40f19a:	test   DWORD PTR [edx-0x49],0xb6b3d7df
  40f1a1:	pop    ebp
  40f1a2:	mov    edx,DWORD PTR [ebx+edi*2-0x39]
  40f1a6:	imul   edi,edx,0x49
  40f1a9:	das    
  40f1aa:	daa    
  40f1ab:	add    eax,0x250db4f
  40f1b0:	jl     0x40f1b3
  40f1b2:	xor    al,0xef
  40f1b4:	pop    ss
  40f1b5:	mov    cl,0x64
  40f1b7:	sbb    ch,BYTE PTR [esi]
  40f1b9:	imul   esi,DWORD PTR [ebp-0x1dd01ccf],0x4f
  40f1c0:	or     eax,0xfdf5062a
  40f1c5:	inc    edi
  40f1c6:	mov    ah,0x63
  40f1c8:	(bad)  
  40f1c9:	out    0x2e,eax
  40f1cb:	mov    edx,0xcddb28e9
  40f1d0:	mov    ds:0x8e1744b2,eax
  40f1d5:	std    
  40f1d6:	(bad)  
  40f1d7:	jp     0x40f23c
  40f1d9:	sti    
  40f1da:	pop    ecx
  40f1db:	mov    ebp,0x8509d027
  40f1e0:	pop    edi
  40f1e1:	xchg   ecx,eax
  40f1e2:	mov    ds:0x91bb348,al
  40f1e7:	ja     0x40f255
  40f1e9:	cmp    ebp,DWORD PTR [edx]
  40f1eb:	push   0x16
  40f1ed:	add    cl,ah
  40f1ef:	ja     0x40f243
  40f1f1:	xchg   edi,eax
  40f1f2:	dec    edi
  40f1f3:	into   
  40f1f4:	scas   eax,DWORD PTR es:[edi]
  40f1f5:	jg     0x40f233
  40f1f7:	frstor [ecx]
  40f1f9:	mov    dh,0x55
  40f1fb:	test   BYTE PTR [ebx*8+0x12cf99da],cl
  40f202:	sub    DWORD PTR [eax+eiz*2],edx
  40f205:	and    al,0x4f
  40f207:	push   eax
  40f208:	rcl    ecx,1
  40f20a:	sub    DWORD PTR [esi+0x290473a5],0x4e847e9e
  40f214:	jno    0x40f25f
  40f216:	and    eax,0x90449a7f
  40f21b:	in     al,dx
  40f21c:	pop    eax
  40f21d:	call   FWORD PTR [edi+0x17bc2998]
  40f223:	jl     0x40f26b
  40f225:	jmp    0x85c4ecff
  40f22a:	mov    bl,BYTE PTR [ebp-0x3a]
  40f22d:	out    0x61,al
  40f22f:	mov    ecx,0xee5f9d7d
  40f234:	stos   DWORD PTR es:[edi],eax
  40f235:	shr    DWORD PTR [ecx+0x13],1
  40f238:	dec    edx
  40f239:	mov    ebp,eax
  40f23b:	idiv   ch
  40f23d:	mov    edx,0x31021dfa
  40f242:	add    DWORD PTR [edx+ebx*2-0x75a33f82],eax
  40f249:	outs   dx,DWORD PTR ds:[esi]
  40f24a:	enter  0x78fd,0x6c
  40f24e:	sub    ebp,DWORD PTR [ecx]
  40f250:	jg     0x40f1e4
  40f252:	gs call 0xc930:0x1bdb8387
  40f25a:	sbb    dh,BYTE PTR [ecx-0x2a99fd78]
  40f260:	push   edi
  40f261:	adc    eax,0x13f2f765
  40f266:	xchg   esp,eax
  40f267:	xchg   edx,eax
  40f268:	xchg   esi,eax
  40f269:	in     eax,dx
  40f26a:	dec    edx
  40f26b:	push   edi
  40f26c:	jbe    0x40f2b1
  40f26e:	es pop eax
  40f270:	inc    bx
  40f272:	push   ss
  40f273:	(bad)  
  40f274:	xchg   ebx,eax
  40f275:	jle    0x40f2a5
  40f277:	shr    DWORD PTR [ecx],cl
  40f279:	out    0x5b,eax
  40f27b:	stos   DWORD PTR es:[edi],eax
  40f27c:	ret    
  40f27d:	nop
  40f27e:	mov    ebx,0x34e4b95c
  40f283:	shl    BYTE PTR [esi],1
  40f285:	int    0x38
  40f287:	or     eax,0xb3e194e7
  40f28c:	pop    ds
  40f28d:	adc    esp,DWORD PTR [eax+0x2a]
  40f290:	pop    esp
  40f291:	ss push edi
  40f293:	test   edx,ebx
  40f295:	lods   eax,DWORD PTR ds:[esi]
  40f296:	and    ah,BYTE PTR [ebx+0xb]
  40f299:	es dec ecx
  40f29b:	pop    ds
  40f29c:	adc    dh,BYTE PTR [ecx-0x6405848b]
  40f2a2:	sbb    al,0x36
  40f2a4:	je     0x40f257
  40f2a6:	scas   eax,DWORD PTR es:[edi]
  40f2a7:	retf   0xe7fe
  40f2aa:	push   es
  40f2ab:	shl    DWORD PTR [ebp+0x5a],cl
  40f2ae:	xor    eax,0xd95be2cc
  40f2b3:	pop    ebx
  40f2b4:	out    dx,eax
  40f2b5:	jns    0x9a57c5cb
  40f2bb:	add    al,0x65
  40f2bd:	adc    DWORD PTR [edi],edi
  40f2bf:	mov    ds:0x7e49b7ef,al
  40f2c4:	icebp  
  40f2c5:	fucom  st(0)
  40f2c7:	stc    
  40f2c8:	sbb    DWORD PTR [ecx-0x2c],esp
  40f2cb:	push   ebp
  40f2cc:	iret   
  40f2cd:	inc    eax
  40f2ce:	or     BYTE PTR [esi+0x18204cd1],ah
  40f2d4:	enter  0xaeb2,0xe9
  40f2d8:	jnp    0x40f30a
  40f2da:	xchg   DWORD PTR [ebx+ebp*8+0x2d],edi
  40f2de:	sub    DWORD PTR [edi-0x2420d22a],0x12
  40f2e5:	dec    edi
  40f2e6:	jae    0x40f2e7
  40f2e8:	shl    BYTE PTR ds:0xe8865faf,1
  40f2ee:	mov    ch,0x45
  40f2f0:	push   esp
  40f2f1:	sub    al,0x87
  40f2f3:	jmp    0x391b:0xfd573053
  40f2fa:	sub    dh,BYTE PTR [edx+0x5bbd9ac5]
  40f300:	sbb    eax,0xd1d676e3
  40f305:	xchg   ebp,eax
  40f306:	mov    es,esp
  40f308:	push   esi
  40f309:	pop    esi
  40f30a:	fcom   DWORD PTR [esp+ebx*8-0x7c0aaf0b]
  40f311:	sbb    eax,DWORD PTR [edi+0x62]
  40f314:	imul   eax,DWORD PTR [eax],0xffffff8b
  40f317:	mov    bl,0x99
  40f319:	or     eax,0xefa48dc1
  40f31e:	xchg   edi,eax
  40f31f:	xchg   ebx,eax
  40f320:	cmp    cl,BYTE PTR [ecx+0x3b7fee13]
  40f326:	mov    esp,0x4a66b6d1
  40f32b:	ds mov eax,0x62f9296d
  40f331:	xlat   BYTE PTR ds:[ebx]
  40f332:	cmp    al,BYTE PTR [ecx+0x5817c2a9]
  40f338:	leave  
  40f339:	add    DWORD PTR [ecx+esi*8-0x3f],ebx
  40f33d:	in     al,0xb1
  40f33f:	dec    eax
  40f340:	pushf  
  40f341:	repz and ebp,edx
  40f344:	push   ebp
  40f345:	mov    bh,0xc7
  40f347:	xchg   eax,eax
  40f349:	cld    
  40f34a:	pop    esi
  40f34b:	leave  
  40f34c:	mov    al,0xf
  40f34e:	call   0xd1a3:0x4be354d7
  40f355:	push   es
  40f356:	pop    esp
  40f357:	test   al,ch
  40f359:	jb     0x40f350
  40f35b:	and    DWORD PTR [esi],eax
  40f35d:	and    eax,0xc1f989d7
  40f362:	dec    edx
  40f363:	vpsubsb xmm3,xmm5,XMMWORD PTR [ebp-0x56c405d4]
  40f36b:	adc    bl,BYTE PTR [edi]
  40f36d:	(bad)  [esp+edx*1+0x297324a1]
  40f374:	push   es
  40f375:	xor    DWORD PTR [edi],ecx
  40f377:	inc    ebp
  40f378:	pop    ebx
  40f379:	loope  0x40f349
  40f37b:	arpl   WORD PTR [edx-0x4c52028],di
  40f381:	cmp    edi,esp
  40f383:	sahf   
  40f384:	dec    esp
  40f385:	neg    BYTE PTR [eax+0x5e87f755]
  40f38b:	pop    edi
  40f38c:	retf   
  40f38d:	jbe    0x40f3dd
  40f38f:	inc    ecx
  40f390:	mov    dl,0xe0
  40f392:	imul   BYTE PTR [esi-0x66]
  40f395:	mov    ds:0x325a64ee,eax
  40f39a:	fs ins DWORD PTR es:[edi],dx
  40f39c:	lods   eax,DWORD PTR ds:[esi]
  40f39d:	fld    TBYTE PTR [ecx]
  40f39f:	arpl   WORD PTR [esi-0xf553c84],bx
  40f3a5:	cmp    DWORD PTR [edi],ebx
  40f3a7:	sub    al,0x9d
  40f3a9:	jno    0x40f3e2
  40f3ab:	mov    BYTE PTR [esi+edx*8-0x63dea18f],al
  40f3b2:	inc    edx
  40f3b3:	push   edi
  40f3b4:	or     BYTE PTR [ecx+ecx*1+0x3181c48e],ch
  40f3bb:	ret    0xa2c8
  40f3be:	test   DWORD PTR [ecx-0x248a7984],edi
  40f3c4:	xchg   esi,eax
  40f3c5:	enter  0xaa9b,0x10
  40f3c9:	and    BYTE PTR [ebx],ch
  40f3cb:	lods   al,BYTE PTR ds:[esi]
  40f3cc:	cli    
  40f3cd:	in     al,dx
  40f3ce:	inc    edi
  40f3cf:	les    edi,FWORD PTR [edi+0xabb1a29]
  40f3d5:	inc    eax
  40f3d6:	mov    esi,0x68b84d5a
  40f3db:	mov    ecx,0x6acda1cb
  40f3e0:	add    eax,DWORD PTR [ebp+esi*8+0xa06b8ad]
  40f3e7:	pop    edx
  40f3e8:	test   DWORD PTR ds:0xd0e423ea,esp
  40f3ee:	jbe    0x40f465
  40f3f0:	(bad)  
  40f3f1:	stc    
  40f3f2:	(bad)  
  40f3f3:	add    al,0x3b
  40f3f5:	sub    eax,0x604e0b03
  40f3fa:	bound  esi,QWORD PTR [esi+0x18]
  40f3fd:	and    al,BYTE PTR [ebp-0x7be5993d]
  40f403:	and    ebx,DWORD PTR [edx-0x36]
  40f406:	or     DWORD PTR [ecx-0x4d9eaa3],eax
  40f40c:	pop    esp
  40f40d:	rcr    DWORD PTR [eax+0x76],cl
  40f410:	dec    esi
  40f411:	push   ecx
  40f412:	sub    cl,cl
  40f414:	dec    esp
  40f415:	outs   dx,BYTE PTR ds:[esi]
  40f416:	jle    0x40f427
  40f418:	jl     0x40f42c
  40f41a:	cmp    DWORD PTR [ecx],eax
  40f41c:	pop    edx
  40f41d:	ja     0x40f49c
  40f41f:	shl    DWORD PTR [esi],cl
  40f421:	(bad)  
  40f422:	jmp    0x40f3cc
  40f424:	and    DWORD PTR [edx],esi
  40f426:	and    BYTE PTR [ebx],bh
  40f428:	add    DWORD PTR [esi+edi*4-0x7fac6bbe],ebp
  40f42f:	retf   
  40f430:	aad    0xca
  40f432:	xchg   ebp,eax
  40f433:	sub    BYTE PTR [eax-0x53fb924a],0x11
  40f43a:	pop    eax
  40f43b:	jl     0x40f456
  40f43d:	mov    ebx,0x17c65992
  40f442:	rol    BYTE PTR [esi],0x49
  40f445:	jo     0x40f497
  40f447:	(bad)  
  40f448:	(bad)  
  40f44a:	outs   dx,BYTE PTR ds:[esi]
  40f44b:	inc    ecx
  40f44c:	and    BYTE PTR [eax-0x2c],dh
  40f44f:	or     esi,DWORD PTR [eax]
  40f451:	sub    BYTE PTR [ecx-0x60],dh
  40f454:	xlat   BYTE PTR ds:[ebx]
  40f455:	and    dh,ch
  40f457:	xchg   ebx,eax
  40f458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f459:	pop    edi
  40f45a:	pop    edx
  40f45b:	push   ss
  40f45c:	push   esi
  40f45d:	(bad)  
  40f45e:	jg     0x40f426
  40f460:	dec    esi
  40f461:	inc    edi
  40f462:	and    dh,ah
  40f464:	adc    al,0xfe
  40f466:	push   edx
  40f467:	nop
  40f468:	sbb    dl,al
  40f46a:	popf   
  40f46b:	test   al,0xc3
  40f46d:	inc    edi
  40f46e:	mov    ds:0xed510f85,eax
  40f473:	push   ecx
  40f474:	xchg   edx,edi
  40f476:	add    al,0x70
  40f478:	loopne 0x40f4e9
  40f47a:	aam    0x90
  40f47c:	add    al,ch
  40f47e:	mov    al,es:0x6ef69003
  40f484:	and    DWORD PTR [edi-0x6],esp
  40f487:	mov    ah,0xe8
  40f489:	adc    al,BYTE PTR [edi]
  40f48b:	and    al,0xff
  40f48d:	sub    cl,bh
  40f48f:	sbb    ch,BYTE PTR [ebx+0x2e673d1e]
  40f495:	bound  ecx,QWORD PTR ds:[esi-0x17]
  40f499:	pop    esi
  40f49a:	mov    edi,0xaec03801
  40f49f:	sti    
  40f4a0:	and    BYTE PTR [ebx-0x66ee71b9],cl
  40f4a6:	and    bl,BYTE PTR [ebp-0x595d8e8d]
  40f4ac:	pop    edx
  40f4ad:	imul   edi,eax,0x76cbf173
  40f4b3:	inc    edi
  40f4b4:	jbe    0x40f437
  40f4b6:	pop    esp
  40f4b7:	repz or dh,BYTE PTR [ecx]
  40f4ba:	pop    esp
  40f4bb:	add    DWORD PTR [edi+ecx*2+0x77],ebx
  40f4bf:	dec    ebp
  40f4c0:	inc    eax
  40f4c1:	inc    edx
  40f4c2:	js     0x40f4c3
  40f4c4:	ja     0x40f4bc
  40f4c6:	imul   edx,DWORD PTR [esi+0xee6d080],0xc
  40f4cd:	and    al,0x42
  40f4d0:	repz or BYTE PTR [ecx],0x55
  40f4d4:	into   
  40f4d5:	fwait
  40f4d6:	xor    ebp,ebx
  40f4d8:	mov    esp,0xabc91890
  40f4dd:	cmp    eax,0x4ddbb81c
  40f4e2:	hlt    
  40f4e3:	sub    DWORD PTR [ecx+0x4f],esi
  40f4e6:	repz jns 0x40f52c
  40f4e9:	sub    eax,DWORD PTR [ecx+0xe11cbd4]
  40f4ef:	push   DWORD PTR [edx-0x4515794f]
  40f4f5:	push   ss
  40f4f6:	inc    ecx
  40f4f7:	icebp  
  40f4f8:	aam    0x7f
  40f4fa:	in     eax,0x9f
  40f4fc:	cld    
  40f4fd:	and    BYTE PTR [ebp+ebp*8+0x11],dl
  40f501:	jmp    FWORD PTR [esi+0x26]
  40f504:	dec    esi
  40f505:	ins    DWORD PTR es:[edi],dx
  40f506:	scas   eax,DWORD PTR es:[edi]
  40f507:	mov    ch,0xc1
  40f509:	push   es
  40f50a:	out    0x5c,al
  40f50c:	cmp    DWORD PTR [ebx],0x6e68c10
  40f512:	push   ds
  40f513:	jnp    0x40f4d4
  40f515:	mov    bh,0xae
  40f517:	js     0x40f4c6
  40f519:	push   es
  40f51a:	scas   eax,DWORD PTR es:[edi]
  40f51b:	lods   eax,DWORD PTR ds:[esi]
  40f51c:	xor    eax,0x42ed39b9
  40f521:	xlat   BYTE PTR ds:[ebx]
  40f522:	inc    esp
  40f523:	repz pop ss
  40f525:	test   eax,0x9a4aad86
  40f52a:	xchg   edx,eax
  40f52b:	cmp    DWORD PTR [ebp+0x0],0x6edfd9e2
  40f532:	mov    ch,BYTE PTR [ebx]
  40f534:	and    eax,0x464719ea
  40f539:	test   DWORD PTR [ebp+0x5939f0b1],0x8d3bf8b8
  40f543:	mov    esp,0x69b8d9ba
  40f548:	xchg   edi,eax
  40f549:	jle    0x40f587
  40f54b:	pop    edx
  40f54c:	aad    0x96
  40f54e:	ds (bad) 
  40f550:	mov    ebp,0xbff8eff8
  40f555:	pop    eax
  40f556:	and    eax,0x2194ca57
  40f55b:	jecxz  0x40f500
  40f55d:	push   eax
  40f55e:	pop    ebp
  40f55f:	sbb    al,0xae
  40f561:	lock push ecx
  40f563:	or     DWORD PTR [esi+esi*1-0x6e],eax
  40f567:	mov    edx,DWORD PTR [ecx+0x76942516]
  40f56d:	or     DWORD PTR [edi-0x620aa787],ebp
  40f573:	fidiv  WORD PTR ds:0x213d5933
  40f579:	rcl    BYTE PTR [edi+ebx*1+0x6f],0x59
  40f57e:	push   ebx
  40f57f:	jnp    0x40f540
  40f581:	cmp    ch,0xb0
  40f584:	popa   
  40f585:	lods   al,BYTE PTR ds:[esi]
  40f586:	hlt    
  40f587:	cmovle esp,DWORD PTR [esi-0x18]
  40f58b:	pop    esp
  40f58c:	es clc 
  40f58e:	inc    edi
  40f58f:	hlt    
  40f590:	iret   
  40f591:	loop   0x40f5fb
  40f593:	or     al,0xb6
  40f595:	jne    0x40f5db
  40f597:	xchg   ebp,ecx
  40f599:	inc    edx
  40f59a:	icebp  
  40f59b:	lods   eax,DWORD PTR ds:[esi]
  40f59c:	mov    ecx,0x94a3c347
  40f5a1:	add    BYTE PTR [edi-0x27],bl
  40f5a4:	jmp    0x5a93:0xe460ffe8
  40f5ab:	mov    al,0x32
  40f5ad:	call   0x1864:0xdcc4f008
  40f5b4:	add    dl,BYTE PTR [edi+0xf]
  40f5b7:	mov    dh,0x97
  40f5b9:	js     0x40f61a
  40f5bb:	and    ebx,DWORD PTR [ebx+eiz*8+0x33]
  40f5bf:	jne    0x40f54b
  40f5c1:	imul   edx,DWORD PTR [ebp-0x1650e1b4],0x25
  40f5c8:	mov    ebx,0x95104018
  40f5cd:	xor    esi,eax
  40f5cf:	pop    ss
  40f5d0:	push   ecx
  40f5d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5d2:	adc    al,0xb0
  40f5d4:	cdq    
  40f5d5:	cmp    eax,0xaa987e4e
  40f5da:	pop    ebp
  40f5db:	sahf   
  40f5dc:	xchg   dh,bh
  40f5de:	adc    edx,DWORD PTR [esi-0x7b]
  40f5e1:	push   ecx
  40f5e2:	ins    BYTE PTR es:[edi],dx
  40f5e3:	shr    ebx,0xd7
  40f5e6:	and    bl,ch
  40f5e8:	cmp    DWORD PTR [esi-0x74],edi
  40f5eb:	pop    ecx
  40f5ec:	mov    bh,0xd
  40f5ee:	popa   
  40f5ef:	adc    eax,0x3c0e24f9
  40f5f4:	call   0xf1e:0x1d26c1fb
  40f5fb:	sub    eax,0xb5f82feb
  40f600:	lea    esp,[edi+0x115640e3]
  40f606:	repz sbb esp,0x49
  40f60a:	mov    dh,0xf6
  40f60c:	cmp    al,0x4e
  40f60e:	ja     0x40f603
  40f610:	ds dec esp
  40f612:	jg     0x40f63f
  40f614:	push   0x27
  40f616:	and    edi,0xffffffdc
  40f619:	pop    ds
  40f61a:	push   esp
  40f61b:	push   edi
  40f61c:	xchg   ebp,eax
  40f61d:	in     al,dx
  40f61e:	or     eax,0xb30006a5
  40f623:	out    0x8b,al
  40f625:	push   es
  40f626:	xchg   ebp,eax
  40f627:	jbe    0x40f672
  40f629:	or     ebp,DWORD PTR [ebp+0x14]
  40f62c:	pop    esp
  40f62d:	cmp    eax,0x5fccb850
  40f632:	inc    ecx
  40f633:	cmp    eax,0xcb4d5de2
  40f638:	or     BYTE PTR ds:0xdd40b1e5,bh
  40f63e:	cmp    BYTE PTR [ebx+esi*1+0x2df10fe],cl
  40f645:	cld    
  40f646:	xor    eax,0xa8ae1ca3
  40f64b:	push   eax
  40f64c:	sahf   
  40f64d:	mov    esp,0x280264a5
  40f652:	repz pop esi
  40f654:	dec    ebx
  40f655:	lods   eax,DWORD PTR ds:[esi]
  40f656:	fucomi st,st(0)
  40f658:	sub    al,0x33
  40f65a:	add    esp,DWORD PTR [ebp-0x5]
  40f65d:	pop    ds
  40f65e:	jp     0x40f5fd
  40f660:	lods   al,BYTE PTR ds:[si]
  40f662:	fsub   DWORD PTR ds:0xcfa302e5
  40f668:	cmp    DWORD PTR [ebp-0x44],ecx
  40f66b:	sub    BYTE PTR [edi],cl
  40f66d:	sbb    al,0x89
  40f66f:	jnp    0x40f66b
  40f671:	(bad)  
  40f672:	and    dl,BYTE PTR [ecx-0x73]
  40f675:	sub    eax,0x3c4b7307
  40f67a:	test   BYTE PTR [eax-0xb],ah
  40f67d:	xor    ax,0x97fd
  40f681:	mov    al,0xfa
  40f683:	in     al,0xf2
  40f685:	jne    0x40f689
  40f687:	popf   
  40f688:	jge    0x40f61a
  40f68a:	jb     0x40f6fa
  40f68c:	iret   
  40f68d:	ins    DWORD PTR es:[edi],dx
  40f68e:	push   ecx
  40f68f:	jae    0x40f6c6
  40f691:	imul   esi,DWORD PTR [eax-0x49],0x1bfe07a6
  40f698:	rol    BYTE PTR [esp+edi*8],cl
  40f69b:	imul   ecx,esp,0x90df4d69
  40f6a1:	inc    ebp
  40f6a2:	jmp    0xca4b7ac6
  40f6a7:	icebp  
  40f6a8:	pop    ebx
  40f6a9:	pusha  
  40f6aa:	(bad)  
  40f6ab:	and    BYTE PTR [edi-0x6657cb6e],ah
  40f6b1:	and    edi,DWORD PTR [ebp-0x69]
  40f6b4:	xchg   esi,eax
  40f6b5:	loope  0x40f6e4
  40f6b7:	mov    ds,eax
  40f6b9:	retf   
  40f6ba:	and    ebx,0x36e4cb57
  40f6c0:	jo     0x40f717
  40f6c2:	xor    al,0xa2
  40f6c4:	xchg   esp,eax
  40f6c5:	add    eax,0x2c136c13
  40f6ca:	cmp    al,0xc0
  40f6cc:	into   
  40f6cd:	mov    ds:0x7b364397,eax
  40f6d2:	mov    al,BYTE PTR [ebx]
  40f6d4:	mov    ch,0xda
  40f6d6:	sti    
  40f6d7:	push   ss
  40f6d8:	shl    BYTE PTR [ecx-0x7f014a7],1
  40f6de:	fimul  DWORD PTR [ebp+ebx*8-0x2a3e9b22]
  40f6e5:	xor    eax,0x8295279e
  40f6ea:	aaa    
  40f6eb:	neg    esp
  40f6ed:	inc    ebx
  40f6ee:	aad    0x90
  40f6f0:	retf   0xa59f
  40f6f3:	xchg   edi,eax
  40f6f4:	test   al,0xdb
  40f6f6:	(bad)  
  40f6f7:	pop    ebx
  40f6f8:	push   ebp
  40f6f9:	loopne 0x40f739
  40f6fb:	cs scas al,BYTE PTR es:[edi]
  40f6fd:	push   eax
  40f6fe:	xchg   bl,dl
  40f700:	sub    ecx,DWORD PTR [eax]
  40f702:	popf   
  40f703:	out    dx,al
  40f704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f705:	mov    cl,0xbd
  40f707:	in     al,0x99
  40f709:	jl     0x40f77b
  40f70b:	xchg   ebp,eax
  40f70c:	jns    0x40f70d
  40f70e:	and    bh,dh
  40f710:	nop
  40f711:	pusha  
  40f712:	sbb    BYTE PTR [eax+eiz*2],bl
  40f715:	dec    esi
  40f716:	and    BYTE PTR [ecx+0x55e36083],cl
  40f71c:	mov    fs,WORD PTR [edi+0xc]
  40f71f:	sub    DWORD PTR [esi],edi
  40f721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f722:	mov    al,0x92
  40f724:	cmp    DWORD PTR [ecx-0x6b682f68],edx
  40f72a:	mov    al,ds:0x2d4a724e
  40f72f:	sbb    BYTE PTR [esi-0x78],bh
  40f732:	out    0xd5,al
  40f734:	jp     0x40f78c
  40f736:	cwde   
  40f737:	xchg   ecx,eax
  40f738:	shr    al,cl
  40f73a:	jnp    0x40f77e
  40f73c:	call   0x414b9b21
  40f741:	arpl   WORD PTR [eax],si
  40f743:	xor    DWORD PTR [ebp-0x2d],edx
  40f746:	pop    edx
  40f747:	mov    ebp,DWORD PTR [eax+edi*2-0x2b]
  40f74b:	ins    DWORD PTR es:[edi],dx
  40f74c:	ficomp DWORD PTR [eax+edx*2-0xa5c4731]
  40f753:	push   ecx
  40f754:	jg     0x40f79c
  40f756:	mov    esi,eax
  40f758:	add    eax,0xf85cc2de
  40f75d:	je     0x40f6f7
  40f75f:	cmp    DWORD PTR [ebx+0x43658ea0],edi
  40f765:	push   0xd1f5a71e
  40f76a:	push   esi
  40f76b:	mov    cl,0xcc
  40f76d:	jb     0x40f744
  40f76f:	outs   dx,BYTE PTR ds:[esi]
  40f770:	jge    0x40f71b
  40f772:	aam    0xa7
  40f774:	mov    cl,0x2e
  40f776:	clc    
  40f777:	cdq    
  40f778:	inc    DWORD PTR [edi]
  40f77a:	push   ecx
  40f77b:	mov    ebx,DWORD PTR [edi+ebp*4]
  40f77e:	out    dx,eax
  40f77f:	das    
  40f780:	mov    WORD PTR [ebx-0xa],?
  40f783:	rcl    ebx,1
  40f785:	inc    edi
  40f786:	stos   BYTE PTR es:[edi],al
  40f787:	loop   0x40f763
  40f789:	clc    
  40f78a:	leave  
  40f78b:	xchg   ecx,eax
  40f78c:	sbb    ah,al
  40f78e:	lea    ebp,[edi+edx*4+0x4709eb73]
  40f795:	dec    ebx
  40f796:	adc    al,0xd6
  40f798:	add    BYTE PTR [ebp-0x69],ch
  40f79b:	div    DWORD PTR [ebx-0x8]
  40f79e:	xor    BYTE PTR [eax],0x52
  40f7a1:	mov    eax,0x382c15fd
  40f7a6:	dec    edi
  40f7a7:	(bad)  
  40f7a8:	adc    eax,0xb470810d
  40f7ad:	mov    edi,0xb1f7f4e
  40f7b2:	push   esi
  40f7b3:	push   ebx
  40f7b4:	arpl   WORD PTR ds:0x8aa054da,dx
  40f7ba:	js     0x40f7f1
  40f7bc:	fnstsw WORD PTR [ecx-0x6]
  40f7bf:	out    0xb2,eax
  40f7c1:	lods   eax,DWORD PTR ds:[esi]
  40f7c2:	cld    
  40f7c3:	xchg   esi,eax
  40f7c4:	push   ebx
  40f7c5:	(bad)  
  40f7c6:	and    edi,ecx
  40f7c8:	cwde   
  40f7c9:	daa    
  40f7ca:	(bad)  
  40f7cb:	inc    ecx
  40f7cc:	cmovge edx,DWORD PTR [ecx]
  40f7cf:	std    
  40f7d0:	pop    ebp
  40f7d1:	push   ss
  40f7d2:	xchg   esp,eax
  40f7d3:	cmp    al,0xfa
  40f7d5:	cs inc edx
  40f7d7:	push   0xd9821c06
  40f7dc:	xor    BYTE PTR [edx],bl
  40f7de:	cmp    esi,DWORD PTR [eax+esi*4+0x2d1f02d3]
  40f7e5:	mov    ebp,0x3dd3da1f
  40f7ea:	pop    edi
  40f7eb:	(bad)  
  40f7ec:	in     eax,dx
  40f7ed:	and    edi,DWORD PTR [ecx-0x68a50d15]
  40f7f3:	adc    BYTE PTR [ebp+0x49],cl
  40f7f6:	pop    ds
  40f7f7:	rcl    DWORD PTR [ebp+0x21],1
  40f7fa:	mov    dh,BYTE PTR [eiz*4-0x5de352d8]
  40f801:	nop
  40f802:	mov    al,ch
  40f804:	shr    DWORD PTR [eax+0x54e2707d],1
  40f80a:	aas    
  40f80b:	in     al,0xee
  40f80d:	add    esp,DWORD PTR [ecx+esi*8]
  40f810:	or     bl,BYTE PTR [eax+0x5eb84d1]
  40f816:	ret    0x9178
  40f819:	lahf   
  40f81a:	call   0x106360fa
  40f81f:	dec    edi
  40f820:	add    bl,al
  40f822:	push   ss
  40f823:	or     ebx,edx
  40f825:	cmc    
  40f826:	out    0x4a,ax
  40f829:	cmp    BYTE PTR [eax],0x5b
  40f82c:	mov    ch,ah
  40f82e:	push   0xa4acc97c
  40f833:	sbb    eax,0x4d7314d0
  40f838:	jge    0x40f7d1
  40f83a:	push   eax
  40f83b:	aam    0x32
  40f83d:	sbb    al,0x75
  40f83f:	cmp    al,0xf
  40f841:	jp     0x40f840
  40f843:	repz retf 0xa75
  40f847:	and    BYTE PTR [esi],dh
  40f849:	loope  0x40f800
  40f84b:	add    BYTE PTR [esi],al
  40f84d:	xor    eax,0x94ec3253
  40f852:	rol    edx,cl
  40f854:	fsubp  st(1),st
  40f856:	mov    DWORD PTR [edx+0x30],0xaebb3f4f
  40f85d:	mov    WORD PTR [esi],?
  40f85f:	dec    esp
  40f860:	dec    edx
  40f861:	data16 mov ch,0x2c
  40f864:	mov    ecx,eax
  40f866:	mov    ds:0x6925cae5,al
  40f86b:	mov    DWORD PTR [eax+0x70e8eeb3],ebp
  40f871:	loope  0x40f870
  40f873:	div    ah
  40f875:	test   eax,0x45cbd9e1
  40f87a:	xchg   edi,eax
  40f87b:	in     eax,0x7c
  40f87d:	jle    0x40f80a
  40f87f:	sbb    al,0x7e
  40f881:	stos   DWORD PTR es:[edi],eax
  40f882:	cmp    eax,0x5b9a06b6
  40f887:	ins    DWORD PTR es:[edi],dx
  40f888:	dec    ebp
  40f889:	lahf   
  40f88a:	xchg   DWORD PTR [edi-0x68],ebx
  40f88d:	aaa    
  40f88e:	pusha  
  40f88f:	xchg   edi,eax
  40f890:	repz jns 0x40f89d
  40f893:	or     eax,0x12fac028
  40f898:	mov    ah,0x0
  40f89a:	cmc    
  40f89b:	jae    0x40f8b4
  40f89d:	std    
  40f89e:	sbb    al,0xa3
  40f8a0:	mov    bh,0xcd
  40f8a2:	in     eax,0x7
  40f8a4:	jno    0x40f853
  40f8a6:	and    cl,ah
  40f8a8:	add    ebp,DWORD PTR [esi]
  40f8aa:	test   al,0x9f
  40f8ac:	mov    eax,ds:0xe35820db
  40f8b1:	mov    esi,0xa29036a9
  40f8b6:	fidiv  DWORD PTR [edi]
  40f8b8:	rcl    DWORD PTR [edi-0x2b],1
  40f8bb:	adc    eax,0x3777cb69
  40f8c0:	or     al,0x56
  40f8c2:	les    edi,FWORD PTR [ebx-0x59ad6a19]
  40f8c8:	out    0x65,al
  40f8ca:	jp     0x40f869
  40f8cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8cd:	xchg   esi,eax
  40f8ce:	sub    DWORD PTR [ecx+ebp*4+0x1e],eax
  40f8d2:	cdq    
  40f8d3:	push   es
  40f8d4:	dec    ecx
  40f8d5:	xor    cl,bl
  40f8d7:	and    DWORD PTR [edi-0x55],0x60
  40f8db:	mov    ds,edx
  40f8dd:	xor    BYTE PTR [esi-0x3b],al
  40f8e0:	ja     0x40f8e3
  40f8e2:	iret   
  40f8e3:	call   0xa6d8:0x4b68ba0d
  40f8ea:	out    0x9e,al
  40f8ec:	into   
  40f8ed:	xor    dh,BYTE PTR [edx-0x20]
  40f8f0:	cmp    eax,0x7cb36c65
  40f8f5:	out    dx,al
  40f8f6:	xchg   ebp,eax
  40f8f7:	mov    fs,WORD PTR [esp+ecx*8+0x5c]
  40f8fb:	(bad)  
  40f8fc:	pop    esp
  40f8fd:	sysret 
  40f8ff:	jmp    0x40f97e
  40f901:	push   es
  40f902:	pop    edi
  40f903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f904:	shl    al,1
  40f906:	stos   DWORD PTR es:[edi],eax
  40f907:	cs sbb eax,0x3aa10b25
  40f90d:	xor    ebp,DWORD PTR [ebp-0x6c6e2d16]
  40f913:	(bad)  
  40f915:	sti    
  40f916:	out    0x32,al
  40f918:	loopne 0x40f8a7
  40f91a:	dec    edi
  40f91b:	xchg   edx,eax
  40f91c:	xor    DWORD PTR [ecx+eax*2],0xffffff88
  40f920:	xchg   ecx,eax
  40f921:	xchg   ebp,ebx
  40f923:	xchg   esp,eax
  40f924:	stos   DWORD PTR es:[edi],eax
  40f925:	pushf  
  40f926:	idiv   DWORD PTR [ecx+0x49]
  40f929:	(bad)  
  40f92a:	retf   
  40f92b:	mov    esi,0x5becc545
  40f930:	call   0x6286:0x2fb31db6
  40f937:	call   0x3ffc5562
  40f93c:	xor    eax,0x52fe1dde
  40f941:	std    
  40f942:	push   eax
  40f943:	jmp    0xe5cc:0xe18eac67
  40f94a:	adc    eax,DWORD PTR [edx+0x45]
  40f94d:	mov    dh,0x66
  40f94f:	stos   DWORD PTR es:[edi],eax
  40f950:	les    eax,FWORD PTR [ecx]
  40f952:	pop    edx
  40f953:	pop    ebx
  40f954:	fsubr  QWORD PTR [edx]
  40f956:	les    ebp,FWORD PTR [edx+0x6c]
  40f959:	inc    ebx
  40f95a:	mov    cl,0x4c
  40f95c:	or     eax,0x23a5e3e2
  40f961:	div    BYTE PTR [edx+eiz*8-0x5b]
  40f965:	pop    edi
  40f966:	jno    0x40f976
  40f968:	rcr    BYTE PTR [edx-0x62029214],1
  40f96e:	adc    edx,0x4f
  40f971:	inc    eax
  40f972:	and    al,0x45
  40f974:	and    eax,0x1850f474
  40f979:	jb     0x40f9c1
  40f97b:	pop    ss
  40f97c:	add    DWORD PTR [esi],ebx
  40f97e:	mov    dh,0x47
  40f980:	sahf   
  40f981:	mov    WORD PTR [eax],ss
  40f983:	cmc    
  40f984:	cmp    al,0xaf
  40f986:	adc    eax,0x1a6f987a
  40f98b:	push   ebx
  40f98c:	and    BYTE PTR [ecx+edx*2],al
  40f98f:	into   
  40f990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f991:	xor    ch,BYTE PTR [ebx+0x682d018d]
  40f997:	int    0xa
  40f999:	adc    ch,dl
  40f99b:	stos   BYTE PTR es:[edi],al
  40f99c:	out    dx,al
  40f99d:	into   
  40f99e:	mov    al,ds:0xc8b4f274
  40f9a3:	(bad)  
  40f9a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9a5:	cmp    DWORD PTR [ebx+0x7],ebx
  40f9a8:	(bad)  
  40f9a9:	and    DWORD PTR [eax+edx*1+0x14],eax
  40f9ad:	(bad)  
  40f9ae:	adc    eax,0x502a7d98
  40f9b3:	jecxz  0x40f999
  40f9b5:	or     ebx,DWORD PTR [eax]
  40f9b7:	mov    eax,DWORD PTR [ebp+0x2bf32ddb]
  40f9bd:	repz pop esp
  40f9bf:	push   edi
  40f9c0:	out    dx,al
  40f9c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9c2:	inc    ebx
  40f9c3:	xor    eax,0xdba1cd16
  40f9c8:	cmp    BYTE PTR [ebp-0x63],ch
  40f9cb:	pusha  
  40f9cc:	ret    0x4b3b
  40f9cf:	add    eax,0x9deee6af
  40f9d4:	and    dl,ch
  40f9d6:	mov    edi,esp
  40f9d8:	loope  0x40f9eb
  40f9da:	sbb    edx,DWORD PTR [ecx]
  40f9dc:	sub    ch,0xf7
  40f9df:	mov    bx,0x86d8
  40f9e3:	les    esp,FWORD PTR [ecx-0x4b]
  40f9e6:	xchg   edi,eax
  40f9e7:	and    al,al
  40f9e9:	mov    ah,0x51
  40f9eb:	sbb    ebp,DWORD PTR [esi-0x4e]
  40f9ee:	mov    ch,0x9
  40f9f0:	jae    0x40fa35
  40f9f2:	pop    edi
  40f9f3:	lods   eax,DWORD PTR ds:[esi]
  40f9f4:	add    bl,BYTE PTR [edx+ebx*8+0x37f4f369]
  40f9fb:	inc    ecx
  40f9fc:	jmp    0x40fa17
  40f9fe:	in     eax,dx
  40f9ff:	test   eax,0x9b449d9c
  40fa04:	xchg   ebp,eax
  40fa05:	mov    ch,0xb5
  40fa07:	mov    ebp,DWORD PTR [esi+0x5ba13d9f]
  40fa0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa0e:	xchg   DWORD PTR [edi],edx
  40fa10:	or     esp,DWORD PTR [ebx+0x40]
  40fa13:	xor    eax,0x2f1d252b
  40fa18:	add    esi,DWORD PTR [ebp-0x339c71a9]
  40fa1e:	cmp    edi,DWORD PTR [ebx+0x23]
  40fa21:	lods   al,BYTE PTR ds:[esi]
  40fa22:	fimul  WORD PTR [eax-0x46]
  40fa25:	fcom   DWORD PTR [edx+0x8]
  40fa28:	mov    al,0x38
  40fa2a:	cdq    
  40fa2b:	popa   
  40fa2c:	ret    
  40fa2d:	adc    BYTE PTR [edx+edx*4-0x61],al
  40fa31:	xchg   edx,eax
  40fa32:	add    BYTE PTR [eax],ch
  40fa34:	push   cs
  40fa35:	mov    esp,0x60736c6c
  40fa3a:	das    
  40fa3b:	push   0x6d9b4161
  40fa40:	pop    ss
  40fa41:	jns    0x40fa7c
  40fa43:	scas   eax,DWORD PTR es:[edi]
  40fa44:	mov    cl,0xb9
  40fa46:	mov    edi,DWORD PTR [ebx]
  40fa48:	loopne 0x40fa2c
  40fa4a:	(bad)  
  40fa4b:	push   edi
  40fa4c:	mov    DWORD PTR [ecx+edx*4],edi
  40fa4f:	in     eax,0x60
  40fa51:	mov    es,WORD PTR [ecx+0x8f59067]
  40fa57:	shr    cl,cl
  40fa59:	and    al,BYTE PTR [esi-0x29]
  40fa5c:	mov    eax,0x9bcbf575
  40fa61:	int3   
  40fa62:	jecxz  0x40fa16
  40fa64:	aas    
  40fa65:	stc    
  40fa66:	add    dh,al
  40fa68:	mov    DWORD PTR [edx],ebx
  40fa6a:	(bad)  
  40fa6b:	test   BYTE PTR [ebp-0x379cf183],0x37
  40fa72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa73:	push   esi
  40fa74:	or     BYTE PTR [ebx-0x5b],cl
  40fa77:	icebp  
  40fa78:	ins    BYTE PTR es:[edi],dx
  40fa79:	xchg   esp,eax
  40fa7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa7b:	mov    eax,0x4899b60d
  40fa80:	xor    al,BYTE PTR [ebp-0x45]
  40fa83:	loop   0x40fa42
  40fa85:	test   BYTE PTR [ecx-0x70],bl
  40fa88:	inc    edi
  40fa89:	cmp    DWORD PTR ds:0x735e8123,eax
  40fa8f:	sub    bl,bh
  40fa91:	(bad)  
  40fa92:	push   esi
  40fa93:	and    cl,BYTE PTR ds:0x6c56ea03
  40fa99:	icebp  
  40fa9a:	add    cl,BYTE PTR [edi-0xc]
  40fa9d:	push   cs
  40fa9e:	lods   eax,DWORD PTR ds:[esi]
  40fa9f:	sbb    edx,ebp
  40faa1:	stc    
  40faa2:	cwde   
  40faa3:	ja     0x40fb05
  40faa5:	ret    0x66bf
  40faa8:	cmp    BYTE PTR [ebp-0x60],al
  40faab:	push   edx
  40faac:	jp     0x40fac6
  40faae:	cmp    al,BYTE PTR [ebp-0x52]
  40fab1:	inc    ecx
  40fab2:	push   ecx
  40fab3:	shl    ebx,0x79
  40fab6:	das    
  40fab7:	in     al,dx
  40fab8:	mov    esp,0xa45afb15
  40fabd:	test   BYTE PTR [edx-0x76],0xa3
  40fac1:	addr16 dec eax
  40fac3:	or     eax,edi
  40fac5:	push   0x45bef1ee
  40faca:	xor    DWORD PTR [edi-0x3bc9a338],edi
  40fad0:	outs   dx,BYTE PTR ds:[esi]
  40fad1:	stc    
  40fad2:	lds    esi,FWORD PTR [ecx-0x6fa790df]
  40fad8:	scas   eax,DWORD PTR es:[edi]
  40fad9:	bound  ebx,QWORD PTR [ebx+0x5d]
  40fadc:	push   ss
  40fadd:	inc    ebx
  40fade:	adc    BYTE PTR [ecx],bl
  40fae0:	test   BYTE PTR [ebx-0x5125eaf2],ah
  40fae6:	out    0x86,al
  40fae8:	cmp    eax,0x5ac7718c
  40faed:	and    esp,DWORD PTR [ecx]
  40faef:	mov    ds:0x27a2e9b6,al
  40faf4:	push   esi
  40faf5:	pop    ss
  40faf6:	daa    
  40faf7:	add    eax,0x8c015ecc
  40fafc:	data16 cmp al,BYTE PTR [edx+0x5b41801e]
  40fb03:	call   0x4316ffe8
  40fb08:	push   ecx
  40fb09:	push   ss
  40fb0a:	and    eax,0x9ffa3573
  40fb0f:	cmp    BYTE PTR [esi],ah
  40fb11:	xchg   edx,eax
  40fb12:	nop
  40fb13:	push   cs
  40fb14:	mov    ecx,0x9809348d
  40fb19:	and    al,0xd7
  40fb1b:	xor    BYTE PTR [ebx+0x71],ah
  40fb1e:	hlt    
  40fb1f:	repnz add ebp,edx
  40fb22:	xchg   edi,eax
  40fb23:	and    eax,DWORD PTR [ecx+0x32c1702c]
  40fb29:	les    edx,FWORD PTR [ebp+0x48]
  40fb2c:	fwait
  40fb2d:	jmp    0x40fb8e
  40fb2f:	dec    ebp
  40fb30:	add    al,0xb8
  40fb32:	dec    ecx
  40fb33:	mov    eax,ds:0xb9a1831d
  40fb38:	rcl    DWORD PTR [edx+0x4],cl
  40fb3b:	(bad)  
  40fb3c:	sub    eax,0xf292078a
  40fb41:	jg     0x40fb97
  40fb43:	fbld   TBYTE PTR [esi-0x6c]
  40fb46:	clc    
  40fb47:	push   edx
  40fb48:	cmc    
  40fb49:	add    al,0x8f
  40fb4b:	xor    BYTE PTR [esi+0x44],bh
  40fb4e:	cmc    
  40fb4f:	fs pop ebx
  40fb51:	adc    BYTE PTR [ebp-0x33],ah
  40fb54:	outs   dx,BYTE PTR ds:[esi]
  40fb55:	fsub   DWORD PTR [eax+eiz*4]
  40fb58:	inc    edx
  40fb59:	(bad)  
  40fb5b:	popa   
  40fb5c:	outs   dx,DWORD PTR ds:[esi]
  40fb5d:	or     edx,DWORD PTR [ebx-0x1bea1790]
  40fb63:	mov    ebp,0xefc8e91
  40fb68:	aas    
  40fb69:	scas   al,BYTE PTR es:[edi]
  40fb6a:	scas   eax,DWORD PTR es:[edi]
  40fb6b:	sub    edx,ebx
  40fb6d:	xor    edi,DWORD PTR [eax+eax*1+0x22fac112]
  40fb74:	mov    ebx,0x71728cfb
  40fb79:	xchg   DWORD PTR [edi-0x5d],esi
  40fb7c:	out    dx,eax
  40fb7d:	jmp    0xf928b99a
  40fb82:	or     BYTE PTR [ebx],dl
  40fb84:	xchg   BYTE PTR [ecx],dh
  40fb86:	pop    eax
  40fb87:	xlat   BYTE PTR ds:[ebx]
  40fb88:	adc    eax,DWORD PTR [edx-0x683d1cbf]
  40fb8e:	pop    esi
  40fb8f:	out    dx,al
  40fb90:	fidivr DWORD PTR [edi-0x1fc2a9a]
  40fb96:	retf   
  40fb97:	xor    al,0x3d
  40fb99:	dec    eax
  40fb9a:	or     BYTE PTR [eax+0x6c],0x1f
  40fb9e:	sahf   
  40fb9f:	and    esp,DWORD PTR [ebx+0x3b8f424c]
  40fba5:	sti    
  40fba6:	mov    esp,0xb9175fe1
  40fbab:	cmp    bh,BYTE PTR [ebp-0x5071fc08]
  40fbb1:	clc    
  40fbb2:	push   0xffffffa0
  40fbb4:	dec    edx
  40fbb5:	nop
  40fbb6:	adc    al,dl
  40fbb8:	fst    DWORD PTR [ebx+0x50]
  40fbbb:	iret   
  40fbbc:	ret    0x41a0
  40fbbf:	mov    al,0xb
  40fbc1:	leave  
  40fbc2:	int    0xa6
  40fbc4:	xlat   BYTE PTR ds:[ebx]
  40fbc5:	mov    edi,0x7a243af4
  40fbca:	pop    eax
  40fbcb:	inc    eax
  40fbcc:	into   
  40fbcd:	ss push esp
  40fbcf:	mov    WORD PTR [ecx+0x29318c97],?
  40fbd5:	xchg   ebx,esi
  40fbd7:	pop    edx
  40fbd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbd9:	and    DWORD PTR [edi-0xa],eax
  40fbdc:	ss lahf 
  40fbde:	add    edx,DWORD PTR [ecx+0x6c]
  40fbe1:	rcr    BYTE PTR [edx-0x14f5e0b4],0x2
  40fbe8:	xor    eax,0x175c9dea
  40fbed:	or     al,BYTE PTR [eax-0x40]
  40fbf0:	dec    eax
  40fbf1:	add    al,0x3
  40fbf3:	ds xchg edx,eax
  40fbf5:	pop    ds
  40fbf6:	dec    esp
  40fbf7:	mov    esi,0xa5265ab5
  40fbfc:	jno    0x40fbfc
  40fbfe:	(bad)  
  40fbff:	inc    edi
  40fc00:	inc    ebp
  40fc01:	dec    edi
  40fc02:	les    esp,FWORD PTR [eax-0x36]
  40fc05:	addr16 push 0xffffffbe
  40fc08:	pop    ss
  40fc09:	(bad)  
  40fc0a:	push   ds
  40fc0b:	mov    edx,0xb6e481f5
  40fc10:	add    DWORD PTR [eax+0x14959595],edi
  40fc16:	scas   al,BYTE PTR es:[edi]
  40fc17:	sub    eax,0xf654b0f8
  40fc1c:	mov    eax,ebp
  40fc1e:	dec    esi
  40fc1f:	icebp  
  40fc20:	push   es
  40fc21:	mov    ebx,0xd8f6f350
  40fc26:	pop    eax
  40fc27:	cmp    bl,ah
  40fc29:	adc    eax,0x2c49ffe9
  40fc2e:	aaa    
  40fc2f:	add    DWORD PTR [esp+edx*4],0xf5a9497e
  40fc36:	sbb    eax,0x79a82213
  40fc3b:	mov    al,0x88
  40fc3d:	mov    ecx,0xfaa34d34
  40fc42:	mov    edi,0xac59e70d
  40fc47:	es in  al,0x1a
  40fc4a:	xchg   edi,eax
  40fc4b:	cmc    
  40fc4c:	stc    
  40fc4d:	push   0x485f8736
  40fc52:	mov    edi,0xa3533ff5
  40fc57:	cs sbb eax,0x68aace2d
  40fc5d:	sub    BYTE PTR [esi-0x1561fc53],0xd1
  40fc64:	mov    bl,0x69
  40fc66:	push   0x95a4acf0
  40fc6b:	(bad)  
  40fc6c:	in     eax,dx
  40fc6d:	cwde   
  40fc6e:	das    
  40fc6f:	jns    0x40fcc7
  40fc71:	mov    bl,0x5a
  40fc73:	cli    
  40fc74:	in     al,dx
  40fc75:	aam    0x16
  40fc77:	adc    BYTE PTR [esp+edi*2],bh
  40fc7a:	push   ebx
  40fc7b:	dec    eax
  40fc7c:	dec    eax
  40fc7d:	ins    DWORD PTR es:[edi],dx
  40fc7e:	mov    ecx,0xb85ee333
  40fc83:	loope  0x40fc19
  40fc85:	iret   
  40fc86:	or     BYTE PTR [edx+0x28d5fcf9],0x7
  40fc8d:	jne    0x40fcc0
  40fc8f:	and    al,0x24
  40fc91:	fldcw  WORD PTR [esi-0x3816d33e]
  40fc97:	dec    ecx
  40fc98:	adc    bl,BYTE PTR [ebp-0xd798c3e]
  40fc9e:	iret   
  40fc9f:	push   esi
  40fca0:	jecxz  0x40fc2a
  40fca2:	sahf   
  40fca3:	cmp    cl,bh
  40fca5:	xor    ebp,eax
  40fca7:	jns    0x40fca7
  40fca9:	push   edx
  40fcaa:	sub    ecx,DWORD PTR [ebx-0x1c]
  40fcad:	call   0xcaed:0x569006d
  40fcb4:	call   0x3af3:0x1108094c
  40fcbb:	pop    edi
  40fcbc:	mov    ebp,0x8a47e885
  40fcc1:	fsubp  st(6),st
  40fcc3:	mov    dh,0x59
  40fcc5:	ucomiss xmm4,xmm0
  40fcc8:	add    bl,BYTE PTR [edi-0x20ff22c4]
  40fcce:	dec    eax
  40fccf:	lods   al,BYTE PTR ds:[esi]
  40fcd0:	mov    ebx,0x5ac8aa97
  40fcd5:	jnp    0x40fcaa
  40fcd7:	cld    
  40fcd8:	fnstenv [ebp-0x3f]
  40fcdb:	out    dx,eax
  40fcdc:	sbb    eax,0xa9c176b2
  40fce1:	dec    eax
  40fce2:	aaa    
  40fce3:	mov    edi,DWORD PTR [ebp+0x40187583]
  40fce9:	mov    esp,0x76767f5e
  40fcee:	and    esi,DWORD PTR [esi+0x18]
  40fcf1:	push   ds
  40fcf2:	inc    eax
  40fcf3:	stc    
  40fcf4:	(bad)  [ebp-0x63]
  40fcf7:	ds pop esp
  40fcf9:	mov    esp,0x89991782
  40fcfe:	jp     0x40fcbd
  40fd00:	cwde   
  40fd01:	mov    WORD PTR ds:0xc282d0e8,cs
  40fd07:	and    edi,esp
  40fd09:	xchg   edx,eax
  40fd0a:	jne    0x40fc9a
  40fd0c:	add    BYTE PTR ds:[eax+eax*8+0x63c4a609],dl
  40fd14:	call   0x7921:0x8c9c4b81
  40fd1b:	mov    al,0xe9
  40fd1d:	enter  0x8041,0xf4
  40fd21:	mov    esp,0x5d74a98f
  40fd26:	add    eax,0x596c711c
  40fd2b:	ror    ah,1
  40fd2d:	sbb    ch,0x39
  40fd30:	inc    edx
  40fd31:	leave  
  40fd32:	pushf  
  40fd33:	adc    ebx,DWORD PTR [esp+ebx*2-0x25]
  40fd37:	test   DWORD PTR [esi],edx
  40fd39:	fidivr DWORD PTR [ebp-0x66]
  40fd3c:	mov    ebx,ss
  40fd3e:	lea    ecx,ds:0x6e8df8ee
  40fd44:	call   0x5369f507
  40fd49:	push   edx
  40fd4a:	jno    0x40fd35
  40fd4c:	out    0xc1,eax
  40fd4e:	scas   eax,DWORD PTR es:[edi]
  40fd4f:	xchg   edi,eax
  40fd50:	dec    eax
  40fd51:	icebp  
  40fd52:	jmp    0xe3803eb2
  40fd57:	push   ebp
  40fd58:	adc    ebx,DWORD PTR [eax-0x434450ea]
  40fd5e:	sbb    eax,0x3190e88b
  40fd63:	pop    edi
  40fd64:	add    eax,0xef8134d
  40fd69:	push   esp
  40fd6a:	jb     0x40fd45
  40fd6c:	out    dx,al
  40fd6d:	xor    dl,BYTE PTR ds:0x589287d7
  40fd73:	mov    ecx,0xf9e2faa9
  40fd78:	mov    ebx,0x11dbb669
  40fd7d:	add    al,BYTE PTR [edi+0x46]
  40fd80:	daa    
  40fd81:	in     al,0x24
  40fd83:	push   0xa96204d5
  40fd88:	ins    BYTE PTR es:[edi],dx
  40fd89:	sub    DWORD PTR [edx+0x10],ebp
  40fd8c:	push   0xbd4895d7
  40fd91:	retf   0xa679
  40fd94:	mov    edx,0xa710fe90
  40fd99:	les    edi,FWORD PTR [eax-0x5a831b70]
  40fd9f:	push   0xa0581974
  40fda4:	cmc    
  40fda5:	aaa    
  40fda6:	xor    eax,0x1841d69a
  40fdab:	icebp  
  40fdac:	mov    edi,0xba15dfbe
  40fdb1:	nop
  40fdb2:	mov    cl,BYTE PTR [ebx]
  40fdb4:	push   0x288771cd
  40fdb9:	fs pop ebp
  40fdbb:	aad    0xd8
  40fdbd:	inc    ecx
  40fdbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdbf:	into   
  40fdc0:	mov    eax,ds:0xb5e5a7e8
  40fdc5:	sti    
  40fdc6:	fisubr WORD PTR [esi+0x474e3107]
  40fdcc:	dec    edx
  40fdcd:	ror    BYTE PTR [edi-0x46],cl
  40fdd0:	xor    al,0xe0
  40fdd2:	push   edi
  40fdd3:	cld    
  40fdd4:	jns    0x40fdb5
  40fdd6:	xor    eax,0xad4de522
  40fddb:	mov    ds:0x8a2d8676,eax
  40fde0:	pop    eax
  40fde1:	push   0xffffffc1
  40fde3:	xchg   edi,edi
  40fde5:	add    DWORD PTR [ebx+0x59],esp
  40fde8:	(bad)  
  40fde9:	(bad)  es:[ebp+eax*4-0x25]
  40fdee:	mov    ch,0xdc
  40fdf0:	mov    dh,dh
  40fdf2:	pop    esi
  40fdf3:	cli    
  40fdf4:	xchg   ecx,eax
  40fdf5:	add    DWORD PTR [esi+0x5a9bab15],0xffffffed
  40fdfc:	push   ebx
  40fdfd:	cmp    al,0xb2
  40fdff:	fsub   DWORD PTR [ebx-0x46e48cf]
  40fe05:	mov    edi,esi
  40fe07:	jno    0x40fdcf
  40fe09:	fstp   st(5)
  40fe0b:	add    eax,0x553b9b15
  40fe10:	mov    ebx,0xf99e2b33
  40fe15:	jo     0x40fe08
  40fe17:	div    ebp
  40fe19:	mov    al,0xd4
  40fe1b:	mov    eax,ds:0x914dfe92
  40fe20:	cmp    eax,0xb23a4d6f
  40fe25:	cmp    cl,BYTE PTR [bp+si]
  40fe28:	add    BYTE PTR [edx-0x22dd327a],0x58
  40fe2f:	out    0xe1,eax
  40fe31:	(bad)  
  40fe33:	aaa    
  40fe34:	(bad)  
  40fe35:	pop    eax
  40fe36:	pusha  
  40fe37:	xlat   BYTE PTR ds:[ebx]
  40fe38:	call   FWORD PTR [ecx+edi*2]
  40fe3b:	sbb    al,0xc
  40fe3d:	fwait
  40fe3e:	adc    BYTE PTR [esi-0x1f36f4eb],dh
  40fe44:	gs and ax,0xacdd
  40fe49:	inc    esi
  40fe4a:	std    
  40fe4b:	mov    bl,0xda
  40fe4d:	sub    DWORD PTR [eax+eiz*2+0x79548a14],esp
  40fe54:	jne    0x40fe99
  40fe56:	xchg   edx,eax
  40fe57:	sbb    BYTE PTR [ecx-0x11eefb95],0xf3
  40fe5e:	lods   eax,DWORD PTR ds:[esi]
  40fe5f:	in     al,0xcc
  40fe61:	and    BYTE PTR [ebx-0x6e],bl
  40fe64:	lock push ecx
  40fe66:	in     al,dx
  40fe67:	xchg   esi,eax
  40fe68:	mov    esp,0x57a7906f
  40fe6d:	test   al,0xdb
  40fe6f:	test   BYTE PTR [edi],al
  40fe71:	repnz clc 
  40fe73:	and    BYTE PTR [esi+0x2825c9ec],dh
  40fe79:	mov    WORD PTR [ecx],cs
  40fe7b:	push   0x66f2df2
  40fe80:	retf   0xdaf
  40fe83:	or     BYTE PTR [ecx-0x4ceecc0f],0x8f
  40fe8a:	not    edx
  40fe8c:	sbb    eax,0x56429094
  40fe91:	pop    ss
  40fe92:	xchg   esi,eax
  40fe93:	xchg   ebx,eax
  40fe94:	icebp  
  40fe95:	loope  0x40feb7
  40fe97:	push   cs
  40fe98:	push   cs
  40fe99:	jbe    0x40feaa
  40fe9b:	cwde   
  40fe9c:	adc    DWORD PTR [esi],0x94b0bb14
  40fea2:	mov    eax,ds:0x3cba6f54
  40fea7:	das    
  40fea8:	or     BYTE PTR [ebx+0x7f],0x76
  40feac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fead:	pop    esp
  40feae:	imul   eax,esi,0x27
  40feb1:	sahf   
  40feb2:	clc    
  40feb3:	pmaddwd mm0,QWORD PTR [edi+0x160716ea]
  40feba:	mov    cl,0x74
  40febc:	xchg   ebp,eax
  40febd:	lock imul edx,DWORD PTR [edx+0x73],0x5f
  40fec2:	jne    0x40ff1b
  40fec4:	push   cs
  40fec5:	ss in  al,dx
  40fec7:	aam    0x1d
  40fec9:	sub    BYTE PTR [eax-0x7b7434ef],cl
  40fecf:	hlt    
  40fed0:	aam    0x25
  40fed2:	iret   
  40fed3:	add    cl,BYTE PTR [edx+0x7b]
  40fed6:	cmp    DWORD PTR [edx+0x216c23a7],esp
  40fedc:	add    DWORD PTR [edx-0x16],esp
  40fedf:	in     eax,0x77
  40fee1:	mov    WORD PTR [ebp-0xa],gs
  40fee4:	mov    bh,0x73
  40fee6:	push   edi
  40fee7:	inc    edi
  40fee8:	call   0x9d9408f8
  40feed:	pop    ebx
  40feee:	hlt    
  40feef:	(bad)  
  40fef0:	rcl    DWORD PTR [ebx+0x71],1
  40fef3:	aad    0x83
  40fef5:	or     BYTE PTR [edi+0x43],cl
  40fef8:	iret   
  40fef9:	cli    
  40fefa:	ret    0x9b32
  40fefd:	mov    ?,WORD PTR [eax-0x5ab28a25]
  40ff03:	add    al,0x93
  40ff05:	jno    0x40ff63
  40ff07:	cmc    
  40ff08:	shl    DWORD PTR [ebp+0x1b],0x3a
  40ff0c:	or     eax,0x41f70097
  40ff11:	pop    edi
  40ff12:	test   esp,esp
  40ff14:	int    0xfd
  40ff16:	in     al,dx
  40ff17:	sub    eax,0xf8af11a9
  40ff1c:	fisub  DWORD PTR [ecx]
  40ff1e:	and    DWORD PTR [esi+0x71],eax
  40ff21:	fxch   st(4)
  40ff23:	push   0xfffffff4
  40ff25:	fst    DWORD PTR [edi+0x3a]
  40ff28:	jb     0x40ff24
  40ff2a:	popf   
  40ff2b:	push   edi
  40ff2c:	jp     0x40ff90
  40ff2e:	call   0xd241:0x550eed24
  40ff35:	add    BYTE PTR [ebp+eax*8-0x6d],bh
  40ff39:	scas   al,BYTE PTR es:[edi]
  40ff3a:	jg     0x40ff03
  40ff3c:	ret    0x4718
  40ff3f:	or     eax,0x6b79c87e
  40ff44:	icebp  
  40ff45:	adc    bh,BYTE PTR [ebx+ebp*4+0x3]
  40ff49:	fistp  DWORD PTR gs:[edx+0x4d791e20]
  40ff50:	sub    al,0xa3
  40ff52:	not    ebx
  40ff54:	int    0x35
  40ff56:	ja     0x40ffc9
  40ff58:	mov    al,0x83
  40ff5a:	xchg   edi,eax
  40ff5b:	jns    0x40ffb6
  40ff5d:	aas    
  40ff5e:	shr    BYTE PTR [edx],1
  40ff60:	dec    eax
  40ff61:	in     al,0xe4
  40ff63:	repz inc edi
  40ff65:	xchg   edi,eax
  40ff66:	or     DWORD PTR [esi],edi
  40ff68:	pop    ds
  40ff69:	rcr    BYTE PTR ds:0xc24b8cc8,0xcf
  40ff70:	jns    0x40ffdd
  40ff72:	fnsave [ebx]
  40ff74:	sub    ebx,esi
  40ff76:	ss pop edi
  40ff78:	sbb    al,0x98
  40ff7a:	je     0x40ff70
  40ff7c:	push   es
  40ff7d:	(bad)  
  40ff7f:	mov    ebp,0xab3743d0
  40ff84:	xchg   edi,eax
  40ff85:	enter  0x7d13,0x2d
  40ff89:	jl     0x40ff1d
  40ff8b:	jg     0x40ff59
  40ff8d:	push   ss
  40ff8e:	lock (bad) 
  40ff90:	pusha  
  40ff91:	mov    cl,BYTE PTR [ebp-0x24]
  40ff94:	cli    
  40ff95:	in     al,dx
  40ff96:	pop    ebx
  40ff97:	imul   ecx,DWORD PTR [ecx+0x63],0xffffffde
  40ff9b:	add    ecx,DWORD PTR [esi-0x3b809c74]
  40ffa1:	into   
  40ffa2:	mov    edi,0x944ba888
  40ffa7:	or     esi,DWORD PTR [esi]
  40ffa9:	cdq    
  40ffaa:	sub    eax,0x792aabe1
  40ffaf:	scas   eax,DWORD PTR es:[edi]
  40ffb0:	leave  
  40ffb1:	icebp  
  40ffb2:	sahf   
  40ffb3:	adc    edi,esi
  40ffb5:	cmp    eax,0xe96ba6c0
  40ffba:	mov    al,0x6e
  40ffbc:	sar    DWORD PTR [eax+esi*2-0x4ffe548b],1
  40ffc3:	sbb    DWORD PTR [ecx],esi
  40ffc5:	(bad)  
  40ffc6:	jle    0x41001a
  40ffc8:	das    
  40ffc9:	jns    0x40ffdb
  40ffcb:	push   edi
  40ffcc:	adc    cl,bl
  40ffce:	jo     0x40ffd2
  40ffd0:	out    dx,eax
  40ffd1:	cmp    esp,DWORD PTR [ebp+0x6f]
  40ffd4:	test   ebp,0xea6ba246
  40ffda:	leave  
  40ffdb:	test   eax,0x42e6dd80
  40ffe0:	jae    0x40ff7a
  40ffe2:	or     DWORD PTR [edi],edi
  40ffe4:	push   ecx
  40ffe5:	fistp  DWORD PTR [ecx]
  40ffe7:	lahf   
  40ffe8:	mov    esp,0xe45daaa7
  40ffed:	xchg   esp,eax
  40ffee:	repnz lds edx,FWORD PTR [esi+edi*8+0x4b]
  40fff3:	invlpg BYTE PTR [edx+ebp*4]
  40fff7:	rol    DWORD PTR [edx+0x27],1
  40fffa:	loope  0x41003e
  40fffc:	fdiv   QWORD PTR [edi]
  40fffe:	mov    ecx,gs
  410000:	frstor [ecx+0x4b]
  410003:	cs dec ecx
  410005:	adc    al,0xc0
  410007:	and    eax,0x3b2505b5
  41000c:	mov    esp,0x48de8c57
  410011:	push   esp
  410012:	inc    esi
  410013:	imul   ecx,DWORD PTR [eax],0x0
  410016:	ja     0x410078
  410018:	sysexit 
  41001a:	mov    ds:0x804cdce8,eax
  41001f:	cmp    esp,DWORD PTR [edx+0x2f]
  410022:	pop    eax
  410023:	mov    eax,0x9f94e73d
  410028:	je     0x410068
  41002a:	adc    BYTE PTR [edi],0x76
  41002d:	(bad)  [esp+eax*2-0x1d]
  410031:	inc    edx
  410032:	add    al,0x83
  410034:	push   0xffffffc1
  410036:	dec    ebx
  410037:	dec    esi
  410038:	dec    ebp
  410039:	repnz push ds
  41003b:	cmc    
  41003c:	(bad)  [edx]
  41003e:	jns    0x40ffcb
  410040:	mov    al,0x99
  410042:	mov    al,ds:0x3c372fdf
  410047:	jo     0x410067
  410049:	sub    DWORD PTR [edx+0x5a],ecx
  41004c:	xor    BYTE PTR [eax-0x6b8e72eb],bh
  410052:	mov    al,0x8e
  410054:	in     al,0x8d
  410056:	or     bl,ah
  410058:	jae    0x410049
  41005a:	jg     0x4100c7
  41005c:	push   es
  41005d:	cmc    
  41005e:	(bad)  
  41005f:	xchg   ecx,eax
  410060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410061:	mov    bh,0x77
  410063:	out    0xb0,al
  410065:	pop    DWORD PTR [esi-0x56]
  410068:	xchg   ebp,eax
  410069:	aaa    
  41006a:	push   cs
  41006b:	fs dec edi
  41006d:	sbb    al,0xec
  41006f:	sahf   
  410070:	adc    bh,dl
  410072:	mov    dl,0xd3
  410074:	add    esi,DWORD PTR [ecx-0x6ab9a5a0]
  41007a:	inc    BYTE PTR [ebx+ecx*4+0x3d9c20e8]
  410081:	cmp    al,0xe3
  410083:	clc    
  410084:	fdiv   QWORD PTR [ebp+edx*8+0x5e]
  410088:	pop    ebp
  410089:	jmp    DWORD PTR [edx+ecx*2+0xd]
  41008d:	retf   0xc380
  410090:	pop    ebp
  410091:	push   edi
  410092:	repz retf 
  410094:	pop    esp
  410095:	dec    ebp
  410096:	and    esp,eax
  410098:	fnstenv [ebx]
  41009a:	adc    dl,ah
  41009c:	jg     0x4100ad
  41009e:	cmp    al,BYTE PTR [edi+0x10d696cb]
  4100a4:	fnstsw WORD PTR [ecx-0x32446385]
  4100aa:	repz pop edx
  4100ac:	(bad)  
  4100ad:	xor    ch,BYTE PTR [ecx+ebp*1-0x46]
  4100b1:	imul   esi,DWORD PTR [ecx+0x1b],0xa3bc88b5
  4100b8:	xchg   esi,eax
  4100b9:	pop    esi
  4100ba:	popf   
  4100bb:	jmp    0x41011d
  4100bd:	mov    al,0x96
  4100bf:	pop    ss
  4100c0:	add    eax,0xb11f706d
  4100c5:	ins    DWORD PTR es:[edi],dx
  4100c6:	jmp    FWORD PTR [esi-0x55]
  4100c9:	(bad)  
  4100cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100cc:	(bad)  [edi]
  4100ce:	test   ah,al
  4100d0:	cwde   
  4100d1:	push   ss
  4100d2:	dec    esi
  4100d3:	cs xchg ecx,eax
  4100d5:	mov    al,ds:0x67a12508
  4100da:	adc    eax,0x6a081903
  4100df:	add    edi,DWORD PTR [ebx+0x7a]
  4100e2:	int    0xb6
  4100e4:	shr    BYTE PTR [esi-0x79],1
  4100e7:	mov    ebp,0xe0669909
  4100ec:	ins    BYTE PTR es:[edi],dx
  4100ed:	xchg   esi,eax
  4100ee:	jnp    0x4100ca
  4100f0:	xchg   edi,eax
  4100f1:	sub    DWORD PTR [edx+0x30],0x49e93351
  4100f8:	mov    BYTE PTR [ebp+ebx*1-0x2b],bl
  4100fc:	xlat   BYTE PTR ds:[ebx]
  4100fd:	ret    0xdb07
  410100:	fst    QWORD PTR [esi]
  410102:	repz shr ebx,1
  410105:	or     al,al
  410107:	fimul  WORD PTR [ecx-0x11d7290a]
  41010d:	dec    BYTE PTR [ebx+0x238a4b9d]
  410113:	adc    DWORD PTR [ecx],esi
  410115:	mov    ebx,0x64819f9a
  41011a:	(bad)  
  41011b:	jl     0x41016f
  41011d:	arpl   WORD PTR [esi-0x11507c8d],si
  410123:	mov    esi,0x75603e9b
  410128:	(bad)  
  410129:	push   edi
  41012a:	ja     0x41013f
  41012c:	rcr    DWORD PTR [eax],0x53
  41012f:	jbe    0x41011c
  410131:	xor    BYTE PTR [edx-0xf],0xd0
  410135:	or     al,0xea
  410137:	mov    bh,BYTE PTR [edi-0x3e7c0c1f]
  41013d:	fidivr DWORD PTR [edx+ebx*2-0x6]
  410141:	xor    al,0x52
  410143:	test   cl,ch
  410145:	(bad)  [eax-0x29a592c]
  41014b:	mov    cl,0xdd
  41014d:	out    0xa0,eax
  41014f:	je     0x4100dd
  410151:	inc    eax
  410152:	fst    DWORD PTR [edx]
  410154:	mov    ecx,0xe0c21fe4
  410159:	cmp    eax,0x82a15a48
  41015e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41015f:	dec    eax
  410160:	iret   
  410161:	popa   
  410162:	adc    bh,BYTE PTR [ecx-0x2afea0e9]
  410168:	popa   
  410169:	std    
  41016a:	and    eax,0x402bf65b
  41016f:	pop    ebp
  410170:	or     DWORD PTR [eax-0x13],edi
  410173:	mov    ah,0x8c
  410175:	or     esp,edi
  410177:	out    dx,al
  410178:	and    al,0xb
  41017a:	pop    eax
  41017b:	mov    dh,0xea
  41017d:	aaa    
  41017e:	in     eax,dx
  41017f:	fdivrp st(4),st
  410181:	(bad)  
  410182:	stos   DWORD PTR es:[edi],eax
  410183:	inc    ebx
  410184:	sahf   
  410185:	mov    ah,0xbf
  410187:	sbb    al,0x10
  410189:	imul   eax,DWORD PTR [edi-0xd7d6407],0xffffffd4
  410190:	inc    ebx
  410191:	shl    BYTE PTR [eax-0x33],cl
  410194:	ss in  al,dx
  410196:	popa   
  410197:	pop    ebp
  410198:	aam    0x57
  41019a:	and    ah,BYTE PTR [esi+edx*2+0x70]
  41019e:	enter  0xb18a,0x9
  4101a2:	pop    fs
  4101a4:	call   0x4f4a:0x45744a51
  4101ab:	out    dx,al
  4101ac:	es mov dh,0x13
  4101af:	std    
  4101b0:	div    DWORD PTR [esi+0x3dcf4f3e]
  4101b6:	dec    ebp
  4101b7:	hlt    
  4101b8:	push   esp
  4101b9:	cmp    DWORD PTR [esp+ecx*2],esp
  4101bc:	sbb    eax,0xc733aea6
  4101c1:	pushf  
  4101c2:	xor    eax,esp
  4101c4:	pop    ebp
  4101c5:	xchg   esi,eax
  4101c6:	enter  0x7598,0x45
  4101ca:	sbb    DWORD PTR [ecx+0x3e],0x6f
  4101ce:	aam    0x8
  4101d0:	pop    edx
  4101d1:	aas    
  4101d2:	aad    0xe2
  4101d4:	jnp    0x4101f8
  4101d6:	lock mov ah,0xa1
  4101d9:	sub    eax,edi
  4101db:	mov    ds:0x859bbafd,eax
  4101e0:	adc    BYTE PTR [ebx-0x638b54a0],0xd5
  4101e7:	push   ebx
  4101e8:	(bad)  
  4101e9:	adc    dh,dh
  4101eb:	push   eax
  4101ec:	pop    DWORD PTR [ecx+edx*1]
  4101ef:	imul   eax,DWORD PTR [ebp+ecx*1-0x26],0xffffffec
  4101f4:	adc    al,0xb2
  4101f6:	cmc    
  4101f7:	sub    eax,0xf986f6b9
  4101fc:	push   0x18e3851d
  410201:	xchg   esi,eax
  410202:	scas   al,BYTE PTR es:[edi]
  410203:	pusha  
  410204:	and    DWORD PTR [ebx],eax
  410206:	out    0xb2,al
  410208:	cdq    
  410209:	js     0x410263
  41020b:	jp     0x410275
  41020d:	cmp    bl,al
  41020f:	(bad)
  410214:	xor    al,0xc3
  410216:	and    bl,bl
  410218:	(bad)  
  410219:	js     0x410267
  41021b:	not    BYTE PTR [edx]
  41021d:	ror    BYTE PTR [esi],1
  41021f:	sbb    DWORD PTR [esi],0x51
  410222:	mov    dh,BYTE PTR [ebp-0x77d0b548]
  410228:	imul   esi,DWORD PTR [ebx+0x15],0xeba2fb73
  41022f:	mov    ds:0xf4858e94,eax
  410234:	mov    bh,0x4b
  410236:	(bad)  
  410237:	sub    al,0x90
  410239:	xor    bl,BYTE PTR [ebx+0x63]
  41023c:	dec    esp
  41023d:	pushf  
  41023e:	jmp    0x522e:0xe61e5c22
  410245:	dec    esp
  410246:	sbb    BYTE PTR fs:[ecx-0x7],ch
  41024a:	(bad)  
  41024b:	mov    esp,0x6660aebc
  410250:	test   BYTE PTR [eax+esi*1],bl
  410253:	stos   BYTE PTR es:[edi],al
  410254:	sub    al,0xc4
  410256:	into   
  410257:	sbb    dh,dl
  410259:	jne    0x4102c1
  41025b:	push   esi
  41025c:	dec    esp
  41025d:	bound  eax,QWORD PTR [eax]
  41025f:	cdq    
  410260:	lods   al,BYTE PTR ds:[esi]
  410261:	popa   
  410262:	call   0xc836:0x599ce1ad
  410269:	mov    DWORD PTR [esi+ebx*4],ebp
  41026c:	das    
  41026d:	lock sti 
  41026f:	(bad)  
  410270:	lahf   
  410271:	inc    BYTE PTR [esi+0x547c7b64]
  410277:	imul   eax,esi,0xdb25ffea
  41027d:	push   ebx
  41027e:	in     eax,dx
  41027f:	inc    edx
  410280:	and    ah,BYTE PTR ds:0xe3eee518
  410286:	test   DWORD PTR [edi],esp
  410288:	fucomi st,st(5)
  41028a:	jecxz  0x410228
  41028c:	fidiv  DWORD PTR [ecx]
  41028e:	fld    DWORD PTR [esi+esi*8]
  410291:	cld    
  410292:	shl    dh,cl
  410294:	mov    edx,0x36f08063
  410299:	xchg   edi,eax
  41029a:	mov    ecx,0x3b0c0ddc
  41029f:	stos   DWORD PTR es:[edi],eax
  4102a0:	xor    al,0x64
  4102a2:	ret    0x3a77
  4102a5:	or     edi,DWORD PTR [edx+0x7b]
  4102a8:	dec    edi
  4102a9:	ins    BYTE PTR es:[edi],dx
  4102aa:	(bad)  
  4102ab:	adc    al,0x60
  4102ad:	jmp    0xfdd3:0xc21bfe8c
  4102b4:	mov    bh,0xd9
  4102b6:	sar    BYTE PTR [ebp-0x7a1abd38],1
  4102bc:	ds mov bl,0xc3
  4102bf:	push   ss
  4102c0:	cwde   
  4102c1:	jae    0x4102cd
  4102c3:	outs   dx,DWORD PTR ds:[esi]
  4102c4:	jecxz  0x4102d0
  4102c6:	mov    eax,ds:0x666f82f6
  4102cb:	ins    BYTE PTR es:[edi],dx
  4102cc:	cld    
  4102cd:	fisub  DWORD PTR [esp+eiz*4-0x59]
  4102d1:	sbb    ebx,DWORD PTR [ebx+0x40492f3f]
  4102d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102d8:	ss int 0xd3
  4102db:	or     eax,DWORD PTR [ebp-0xfd53251]
  4102e1:	mov    ds:0x6e36159b,al
  4102e6:	lods   eax,DWORD PTR ds:[esi]
  4102e7:	cld    
  4102e8:	call   0xe5af:0xbcf85f43
  4102ef:	nop
  4102f0:	ins    DWORD PTR es:[edi],dx
  4102f1:	in     al,dx
  4102f2:	dec    ebx
  4102f3:	(bad)  
  4102f4:	imul   edx,DWORD PTR [esi+esi*1-0x26],0xffffffc4
  4102f9:	dec    ebp
  4102fa:	mov    cl,bl
  4102fc:	cmp    eax,0x3fd7e981
  410301:	leave  
  410302:	ret    0xf612
  410305:	pop    ecx
  410306:	sub    bl,BYTE PTR [eax+ebp*1+0x625a4785]
  41030d:	mov    BYTE PTR [edi-0x77],al
  410310:	dec    esp
  410311:	mov    ecx,0xed4a155e
  410316:	into   
  410317:	fist   WORD PTR [ebx+0x21]
  41031a:	push   ss
  41031b:	and    DWORD PTR [ebp-0x4dfdf091],esp
  410321:	fdivr  DWORD PTR [ebx]
  410323:	jmp    0x4102b4
  410325:	in     eax,dx
  410326:	in     eax,0x88
  410328:	xor    al,0xd6
  41032a:	clc    
  41032b:	xlat   BYTE PTR ds:[ebx]
  41032c:	loopne 0x4102c1
  41032e:	sub    DWORD PTR ds:0xd692a4fb,edx
  410334:	sub    eax,DWORD PTR [ebp+0x2]
  410337:	xor    BYTE PTR [ebx-0x6d],dl
  41033a:	mov    DWORD PTR [ebx+eax*1],edx
  41033d:	retf   
  41033e:	icebp  
  41033f:	loop   0x41032c
  410341:	mov    edx,DWORD PTR [ecx-0x5c881fa6]
  410347:	ins    DWORD PTR es:[edi],dx
  410348:	jecxz  0x4102de
  41034a:	(bad)  
  41034c:	sbb    DWORD PTR [ebp+0x1a],ecx
  41034f:	xor    DWORD PTR [edx+0x3e],0xffffff84
  410353:	aaa    
  410354:	fldcw  WORD PTR [edi-0x34791653]
  41035a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41035b:	mov    esp,0xf72d10b1
  410360:	push   edi
  410361:	mov    al,0x32
  410363:	sahf   
  410364:	pop    es
  410365:	sub    ah,BYTE PTR [edx-0x10200dc5]
  41036b:	outs   dx,DWORD PTR ds:[esi]
  41036c:	out    0xb8,eax
  41036e:	pop    ebx
  41036f:	dec    edx
  410370:	into   
  410371:	fdivr  QWORD PTR [eax+0x3c335040]
  410377:	inc    ebp
  410378:	fnclex 
  41037a:	jne    0x410360
  41037c:	(bad)  
  41037d:	mov    esi,0xb97db4f9
  410382:	rol    BYTE PTR [esi],cl
  410384:	push   esp
  410385:	mul    BYTE PTR ds:0xa27a1680
  41038b:	lahf   
  41038c:	push   ecx
  41038d:	jge    0x410321
  41038f:	mov    ch,0x86
  410391:	xor    eax,DWORD PTR [esp+ebp*2+0x72]
  410395:	cmc    
  410396:	repz jb 0x4103f2
  410399:	adc    DWORD PTR [eax+0x5d71d23c],eax
  41039f:	in     eax,dx
  4103a0:	cmp    al,0x0
  4103a2:	add    eax,0xd06d6306
  4103a7:	sub    cl,BYTE PTR [esi+eiz*1-0x4ef91645]
  4103ae:	das    
  4103af:	pop    ecx
  4103b0:	iret   
  4103b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103b2:	pop    ss
  4103b3:	dec    ecx
  4103b4:	imul   esi,DWORD PTR [ebp-0x295e9f90],0xffffffb6
  4103bb:	sbb    eax,DWORD PTR [esi+0x7c8d4ddf]
  4103c1:	enter  0x5605,0x42
  4103c5:	dec    ebp
  4103c6:	cmc    
  4103c7:	pop    eax
  4103c8:	mov    ds:0x7ee4dba8,al
  4103cd:	jne    0x4103be
  4103cf:	iret   
  4103d0:	and    dl,dh
  4103d2:	push   0xc07b8dd2
  4103d7:	mov    ds:0x1d00d72a,eax
  4103dc:	stc    
  4103dd:	outs   dx,BYTE PTR ds:[esi]
  4103de:	xor    DWORD PTR [esi+0x36],ecx
  4103e1:	xchg   edi,eax
  4103e2:	retf   
  4103e3:	xchg   esp,eax
  4103e4:	outs   dx,DWORD PTR ds:[esi]
  4103e5:	cmp    BYTE PTR [edx+0x13617d01],al
  4103eb:	ins    BYTE PTR es:[edi],dx
  4103ec:	rcr    DWORD PTR [edi+0x6264dbba],cl
  4103f2:	out    dx,al
  4103f3:	aas    
  4103f4:	stc    
  4103f5:	push   ebx
  4103f6:	inc    edi
  4103f7:	fsubrp st(3),st
  4103f9:	sbb    ch,BYTE PTR [ecx-0x30f9d47e]
  4103ff:	loope  0x410410
  410401:	xchg   edi,eax
  410402:	and    esp,DWORD PTR [eax-0x30]
  410405:	xor    ebx,ebx
  410407:	or     BYTE PTR [esi],ch
  410409:	call   0xa7d5:0xd82099cd
  410410:	push   cs
  410411:	xor    BYTE PTR [edi+0x5511ab88],0xc2
  410418:	dec    ecx
  410419:	or     cl,BYTE PTR [ecx+0x184f4ed0]
  41041f:	lahf   
  410420:	pop    es
  410421:	sub    al,BYTE PTR [edi-0x1ef713fe]
  410427:	push   ebp
  410428:	fsubr  QWORD PTR [ecx-0x7b]
  41042b:	loope  0x4104a8
  41042d:	ins    BYTE PTR es:[edi],dx
  41042e:	loop   0x410470
  410430:	not    DWORD PTR [ebp+0xa]
  410433:	adc    al,0x22
  410435:	sub    DWORD PTR [ebp+0x4d71ac31],eax
  41043b:	add    bl,BYTE PTR [ebx]
  41043d:	or     eax,0xca5d39b2
  410442:	and    BYTE PTR [ebx+0x6f],al
  410445:	jg     0x410445
  410447:	in     al,0x71
  410449:	ins    DWORD PTR es:[edi],dx
  41044a:	jae    0x4103f7
  41044c:	adc    DWORD PTR [ebp+0x4f2a9133],eax
  410452:	dec    esp
  410453:	into   
  410454:	pop    ebx
  410455:	xor    al,0x55
  410457:	scas   eax,DWORD PTR es:[edi]
  410458:	jge    0x410452
  41045a:	js     0x4104ba
  41045c:	push   edx
  41045d:	outs   dx,BYTE PTR ds:[esi]
  41045e:	(bad)  
  41045f:	sbb    al,0xcd
  410461:	xor    DWORD PTR [ecx-0x37dc48a6],ebx
  410467:	outs   dx,BYTE PTR ds:[esi]
  410468:	out    dx,al
  410469:	mov    ecx,0xb5422f4b
  41046e:	aad    0x4f
  410470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410471:	cmp    bh,BYTE PTR [edi+0x57]
  410474:	sbb    BYTE PTR ds:0xd18d2466,ch
  41047a:	sub    edi,DWORD PTR [edx+ebx*2-0x6a]
  41047e:	inc    esp
  410480:	cld    
  410481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410482:	test   eax,0xdc767625
  410487:	sahf   
  410488:	cmc    
  410489:	sub    eax,0x48b26adc
  41048e:	cmp    eax,0x1c1b48d2
  410493:	lods   eax,DWORD PTR ds:[esi]
  410494:	push   esp
  410495:	mov    edx,0x93c457ee
  41049a:	bound  ebp,QWORD PTR [eax+0x32]
  41049d:	xlat   BYTE PTR ds:[ebx]
  41049e:	mov    ecx,0x56a02508
  4104a3:	dec    edi
  4104a4:	adc    BYTE PTR [esi-0x48],ah
  4104a7:	or     eax,0xdb93719e
  4104ac:	aam    0x41
  4104ae:	fs jecxz 0x4104b5
  4104b1:	xchg   ebp,eax
  4104b2:	inc    esi
  4104b3:	ffreep st(6)
  4104b5:	xchg   edi,eax
  4104b6:	mov    ds:0x81a506c0,eax
  4104bb:	add    dh,ah
  4104bd:	pop    ecx
  4104be:	jge    0x410529
  4104c0:	xchg   esp,eax
  4104c1:	cwde   
  4104c2:	nop
  4104c3:	out    0xd7,eax
  4104c5:	test   eax,0xb0371197
  4104ca:	retf   
  4104cb:	mov    bh,0x8c
  4104cd:	cmp    eax,DWORD PTR [eax]
  4104cf:	jmp    0x410491
  4104d1:	jle    0x2ae7f8f2
  4104d7:	xor    al,0x96
  4104d9:	mov    es,WORD PTR [ebx-0x11]
  4104dc:	scas   eax,DWORD PTR es:[edi]
  4104dd:	outs   dx,DWORD PTR ds:[esi]
  4104de:	mov    esi,0x801b707e
  4104e3:	ds pop ss
  4104e5:	cmp    ecx,DWORD PTR ds:0x8e84
  4104ea:	xor    eax,0x58763f18
  4104ef:	cmp    eax,0x66cbc5dc
  4104f4:	fistp  DWORD PTR [eax]
  4104f6:	xchg   ecx,eax
  4104f7:	and    DWORD PTR [ebx-0x16],eax
  4104fa:	int3   
  4104fb:	jo     0x4104e0
  4104fd:	add    bl,BYTE PTR [eax+eiz*1]
  410500:	cmc    
  410501:	push   esp
  410502:	mov    edi,0xccb674a8
  410507:	cmp    eax,0x28793a8c
  41050c:	cmp    BYTE PTR [ebx-0x66a4be74],al
  410512:	add    esi,DWORD PTR [edi+0x72]
  410515:	dec    esi
  410516:	jno    0x41056a
  410518:	and    BYTE PTR [ebx+0x2582844],dh
  41051e:	out    dx,eax
  41051f:	jb     0x4104dd
  410521:	retf   0x7b52
  410524:	push   ds
  410525:	loope  0x41054d
  410527:	fidivr DWORD PTR [eax-0x52]
  41052a:	arpl   bx,di
  41052c:	cmp    ebp,ebx
  41052e:	jmp    0x4104e3
  410530:	test   eax,0xe8af6a0b
  410535:	out    0xd6,eax
  410537:	push   edx
  410538:	fstp   DWORD PTR ss:0x131b9d2a
  41053f:	retf   
  410540:	sbb    eax,0x7fb0ab33
  410545:	push   eax
  410546:	jmp    0x410545
  410548:	adc    ebp,DWORD PTR [ebp-0x5f]
  41054b:	jg     0x410531
  41054d:	hlt    
  41054e:	addr16 mov edx,0xacb14725
  410554:	mov    BYTE PTR [esi+0x5e],bh
  410557:	or     dl,BYTE PTR [ebp-0x2368c69a]
  41055d:	js     0x410545
  41055f:	retf   
  410560:	fld    DWORD PTR [ecx]
  410562:	std    
  410563:	sbb    cl,BYTE PTR [ecx-0x28]
  410566:	cmp    al,cl
  410568:	or     al,0xb7
  41056a:	jnp    0x41052c
  41056c:	mov    bh,0xd0
  41056e:	jns    0x410551
  410570:	jecxz  0x410520
  410572:	mov    eax,ds:0x1a8f57c9
  410577:	xchg   esi,eax
  410578:	adc    eax,0xdf126fa5
  41057d:	cld    
  41057e:	outs   dx,DWORD PTR ds:[esi]
  41057f:	in     eax,0x1b
  410581:	sub    al,0xb8
  410583:	fcomp  DWORD PTR [ecx-0x2cffb469]
  410589:	mov    ss,WORD PTR [edi+ebx*4-0x46]
  41058d:	imul   esi,DWORD PTR ds:0x152a637b,0xffffffad
  410594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410595:	fistp  DWORD PTR [ebx-0x751bd4d5]
  41059b:	cwde   
  41059c:	stos   DWORD PTR es:[edi],eax
  41059d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41059e:	mov    bh,0x5b
  4105a0:	(bad)  
  4105a1:	jmp    0xe4a777b7
  4105a6:	stos   DWORD PTR es:[edi],eax
  4105a7:	(bad)  
  4105a9:	xor    DWORD PTR [eax-0x3],esp
  4105ac:	pop    ebx
  4105ad:	inc    ecx
  4105ae:	xchg   edx,eax
  4105af:	xchg   ebp,eax
  4105b0:	data16 stos BYTE PTR es:[edi],al
  4105b2:	xor    edx,DWORD PTR [ebp+0x28b2d39c]
  4105b8:	xor    eax,0x1ba827e5
  4105bd:	xchg   DWORD PTR gs:[ebx+0x288513fe],esp
  4105c4:	retf   
  4105c5:	retf   
  4105c6:	in     al,dx
  4105c7:	lock add eax,0x422de229
  4105cd:	std    
  4105ce:	mov    ebx,0x917624e0
  4105d3:	sub    DWORD PTR gs:[esi-0x613a9dd1],0x739c4f20
  4105de:	(bad)  
  4105df:	jo     0x41065d
  4105e1:	dec    esi
  4105e2:	or     ch,BYTE PTR [eax+0xd]
  4105e5:	cld    
  4105e6:	dec    esi
  4105e7:	adc    esi,DWORD PTR [esi+esi*8-0x78404556]
  4105ee:	popa   
  4105ef:	sti    
  4105f0:	shl    DWORD PTR [edi],1
  4105f2:	shl    BYTE PTR [esi+0x29c87c35],1
  4105f8:	in     eax,dx
  4105f9:	pushf  
  4105fa:	test   DWORD PTR [ebp+ebx*1-0x2c6fc517],edx
  410601:	push   ecx
  410602:	in     eax,0x70
  410604:	pop    edx
  410605:	add    BYTE PTR [ebx+eax*2],bh
  410608:	xchg   edi,eax
  410609:	fnsave [eax]
  41060b:	cmc    
  41060c:	int3   
  41060d:	mov    ah,0xe1
  41060f:	or     ecx,DWORD PTR [edi+eax*2+0x28b55d3f]
  410616:	inc    eax
  410617:	mov    ?,edi
  410619:	sbb    bh,ch
  41061b:	mov    dh,0x18
  41061d:	lahf   
  41061e:	adc    BYTE PTR [ebp+0x1a00ae4a],ah
  410624:	sahf   
  410625:	jecxz  0x41067d
  410627:	sub    BYTE PTR [edi],dl
  410629:	(bad)  
  41062b:	pushf  
  41062c:	xor    dl,0x9a
  41062f:	popf   
  410630:	dec    ebx
  410631:	repnz inc esp
  410633:	lahf   
  410634:	push   edi
  410635:	dec    esi
  410636:	sbb    al,0x8c
  410638:	inc    edi
  410639:	mov    eax,ds:0x34ae6cd
  41063e:	mov    bh,0x1e
  410640:	mov    al,ds:0x9a2a0f69
  410645:	xor    eax,DWORD PTR [esi-0x54]
  410648:	pop    ebx
  410649:	jl     0x410689
  41064b:	pop    ebp
  41064c:	call   0x8ab:0xad1bace9
  410653:	in     eax,dx
  410654:	mul    DWORD PTR [edi+0x207efe68]
  41065a:	sahf   
  41065b:	scas   al,BYTE PTR es:[edi]
  41065c:	int3   
  41065d:	inc    edx
  41065e:	(bad)  
  41065f:	retf   0x78bc
  410662:	ror    DWORD PTR ds:0x9d6e92dc,0xa1
  410669:	mov    WORD PTR [edx+0x597e24b9],ss
  41066f:	retf   0xa04a
  410672:	stc    
  410673:	lahf   
  410674:	cwde   
  410675:	xchg   ebx,eax
  410676:	lea    edi,[ebx-0x5cc383d5]
  41067c:	fisubr WORD PTR [edx]
  41067e:	jecxz  0x4106ed
  410680:	push   ebp
  410681:	pslld  mm7,QWORD PTR [ecx]
  410684:	xchg   DWORD PTR [edx+0x20],ebx
  410687:	or     esp,esp
  410689:	out    dx,eax
  41068a:	enter  0xc6b8,0x25
  41068e:	adc    ebx,DWORD PTR [ebx+0x201b2b24]
  410694:	jae    0x4106d2
  410696:	add    ah,0xd1
  410699:	and    dl,BYTE PTR [esi+0x38]
  41069c:	jno    0x410655
  41069e:	add    DWORD PTR [eax+ebp*1+0x4],0x69
  4106a3:	mov    ecx,0xca7a801c
  4106a8:	add    BYTE PTR [eax],dh
  4106aa:	pushf  
  4106ab:	mov    ds:0xb7a77d95,eax
  4106b0:	fsub   QWORD PTR [ebx]
  4106b2:	dec    esi
  4106b3:	sub    DWORD PTR [ebx],ebp
  4106b5:	mov    ah,0xe2
  4106b7:	outs   dx,BYTE PTR ds:[esi]
  4106b8:	inc    ebp
  4106b9:	mov    dl,0x68
  4106bb:	fs out dx,eax
  4106bd:	sub    esp,edi
  4106bf:	or     esi,DWORD PTR [edx+0x4612d2d1]
  4106c5:	xchg   ch,bh
  4106c7:	ja     0x410747
  4106c9:	xor    al,0x40
  4106cb:	packuswb mm6,QWORD PTR ds:0xa20ca3b6
  4106d2:	or     DWORD PTR [ebp-0x1c],ebx
  4106d5:	inc    ebx
  4106d6:	inc    esi
  4106d7:	cwde   
  4106d8:	inc    ebp
  4106d9:	xchg   esp,eax
  4106da:	mov    bh,0xbc
  4106dc:	sar    DWORD PTR [eax+0x51],cl
  4106df:	push   ds
  4106e0:	dec    ecx
  4106e1:	nop
  4106e2:	ins    BYTE PTR es:[edi],dx
  4106e3:	and    eax,0x7bafb4d
  4106e8:	mov    esp,0x50f4059
  4106ed:	and    BYTE PTR [edi-0x6f],al
  4106f0:	xor    bl,dl
  4106f2:	(bad)  
  4106f3:	lods   al,BYTE PTR ds:[esi]
  4106f4:	int    0x70
  4106f6:	addr16 iret 
  4106f8:	and    DWORD PTR [edx+eax*4-0x17f3a62d],esp
  4106ff:	sbb    BYTE PTR [edi-0x75e3b480],dl
  410705:	outs   dx,BYTE PTR ds:[esi]
  410706:	loop   0x4106a0
  410708:	cmc    
  410709:	add    DWORD PTR [ecx-0x7a],ebp
  41070c:	rol    bl,1
  41070e:	shl    ecx,cl
  410710:	and    BYTE PTR [edi-0x5413594a],0x73
  410717:	cmp    esp,edi
  410719:	jnp    0x41071a
  41071b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41071c:	sub    al,0xca
  41071e:	ror    BYTE PTR [edx+eiz*1],cl
  410721:	retf   0xa941
  410724:	arpl   WORD PTR [edi+0x46c2401c],di
  41072a:	xchg   ebx,eax
  41072b:	xchg   BYTE PTR [edi],dl
  41072d:	leave  
  41072e:	mov    esp,0xd4bc7437
  410733:	icebp  
  410734:	push   esi
  410735:	imul   edi,DWORD PTR [ebp+0x9aa026c],0xfffffffb
  41073c:	jnp    0x410748
  41073e:	or     BYTE PTR [ebp+esi*4+0x42],dl
  410742:	imul   ecx,DWORD PTR [edx-0x7d],0xffffffd0
  410746:	cmp    eax,0xdbe25688
  41074b:	scas   eax,DWORD PTR es:[edi]
  41074c:	gs cmp eax,0x61578b65
  410752:	jmp    0x410749
  410754:	mov    al,0x3b
  410756:	push   ecx
  410757:	popa   
  410758:	push   ecx
  410759:	mov    bl,BYTE PTR [edi]
  41075b:	hlt    
  41075c:	jg     0x410705
  41075e:	frstor [ebx+0x1521575c]
  410764:	sbb    edi,edx
  410766:	inc    esp
  410767:	outs   dx,BYTE PTR ds:[esi]
  410768:	sbb    eax,0x1d023b35
  41076d:	inc    ebx
  41076e:	xor    ebx,ecx
  410770:	xor    BYTE PTR [edi+0x725a9124],ch
  410776:	cmp    DWORD PTR [ebx],eax
  410778:	std    
  410779:	stc    
  41077a:	sbb    esp,ecx
  41077c:	shr    BYTE PTR [ecx+0x34edb3b8],1
  410782:	cwde   
  410783:	jne    0x4107fe
  410785:	repz jno 0x410749
  410788:	add    BYTE PTR [ecx+0x5a2f194],ch
  41078e:	out    dx,al
  41078f:	dec    ebp
  410790:	mov    DWORD PTR [edx-0x67],esp
  410793:	popa   
  410794:	inc    ebp
  410795:	fcomp  st(6)
  410797:	and    al,0xc8
  410799:	inc    ecx
  41079a:	xchg   ebx,eax
  41079b:	adc    DWORD PTR [edi-0x1d],esi
  41079e:	pop    esp
  41079f:	inc    edx
  4107a0:	lds    esp,FWORD PTR [ecx+eiz*2]
  4107a3:	push   ecx
  4107a4:	(bad)  
  4107a5:	lahf   
  4107a6:	jl     0x4107c7
  4107a8:	sbb    BYTE PTR [ebx-0x60e27b47],dh
  4107ae:	mov    BYTE PTR [edi+0xa],dh
  4107b1:	mov    esp,0x15acb6b1
  4107b6:	adc    BYTE PTR [edi-0x16],ch
  4107b9:	or     eax,0x1c74b1bc
  4107be:	sub    DWORD PTR [edx],0xab0ad349
  4107c4:	inc    ecx
  4107c5:	outs   dx,BYTE PTR ds:[esi]
  4107c6:	retf   0x4787
  4107c9:	(bad)  
  4107cb:	sub    al,0xd9
  4107cd:	add    al,0x90
  4107cf:	pop    esp
  4107d0:	sub    al,0xf7
  4107d2:	mov    dl,0x37
  4107d4:	pop    esi
  4107d5:	dec    ebp
  4107d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107d7:	jno    0x41083a
  4107d9:	jmp    0x1a4e:0x7357e629
  4107e0:	je     0x410768
  4107e2:	ret    
  4107e3:	in     eax,0xdc
  4107e5:	aaa    
  4107e6:	xchg   esi,eax
  4107e7:	or     eax,0x665fe043
  4107ec:	les    esi,FWORD PTR [esp+esi*1-0x30]
  4107f0:	mov    edx,0xc828f507
  4107f5:	mov    esi,0x79af1b9a
  4107fa:	das    
  4107fb:	call   DWORD PTR [edi-0x37]
  4107fe:	jbe    0x4107b5
  410800:	imul   eax,DWORD PTR [ebx-0x2da0a7af],0xee727de0
  41080a:	xchg   edx,eax
  41080b:	pop    edx
  41080c:	out    0x38,eax
  41080e:	retf   
  41080f:	adc    al,0x66
  410811:	mov    BYTE PTR [ebx-0x76fe6d7f],bh
  410817:	mov    ss,WORD PTR [ebx+0x72]
  41081a:	and    bh,BYTE PTR [di+0x612]
  41081f:	jp     0x4107b4
  410821:	in     eax,dx
  410822:	push   eax
  410823:	lods   al,BYTE PTR ds:[esi]
  410824:	fcmovnb st,st(4)
  410826:	gs adc al,0xa5
  410829:	pop    edx
  41082a:	inc    esi
  41082b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41082c:	jmp    0xac19d4e0
  410831:	stc    
  410832:	xor    bh,BYTE PTR [eax+0x31d32568]
  410838:	or     DWORD PTR ds:0x5a07d477,esi
  41083e:	je     0x4107d9
  410840:	es cmp al,0x97
  410843:	test   eax,0xba4a4720
  410848:	mov    eax,0x39437035
  41084d:	or     BYTE PTR [ecx+0x30],0xc3
  410851:	xchg   ecx,eax
  410852:	mov    esi,0x69e7b907
  410857:	cmp    ah,ch
  410859:	or     dl,ah
  41085b:	mov    esp,0x769866f7
  410860:	mov    eax,ds:0xc25bf428
  410865:	lock adc BYTE PTR [ebx],dh
  410868:	icebp  
  410869:	mov    al,ds:0x709afaff
  41086e:	ja     0x410811
  410870:	fist   WORD PTR [edi+0x6f]
  410873:	(bad)  
  410874:	mov    bl,0x8a
  410876:	or     BYTE PTR [esi],ch
  410878:	mov    cl,0x92
  41087a:	fld    TBYTE PTR [esp+ebp*2-0x23]
  41087e:	and    ecx,DWORD PTR [edx-0x48]
  410881:	in     eax,dx
  410882:	mov    esi,0x133b3de1
  410887:	int    0xb6
  410889:	mov    al,0xb7
  41088b:	icebp  
  41088c:	and    BYTE PTR [edx],ch
  41088e:	rcl    BYTE PTR es:0xb2d8b5c2,cl
  410895:	mov    WORD PTR [ebx-0x3b],gs
  410898:	not    bh
  41089a:	mov    ah,0x94
  41089c:	mov    eax,ds:0x1c166428
  4108a1:	pop    ebx
  4108a2:	inc    esi
  4108a3:	adc    BYTE PTR [edi-0x56],al
  4108a6:	adc    bh,BYTE PTR [ebx]
  4108a8:	mov    eax,0x8e3aceb7
  4108ad:	pop    esp
  4108ae:	push   ss
  4108af:	(bad)  ds:0x1e56a8be
  4108b5:	ja     0x41090c
  4108b7:	call   0x4dee:0xb0519086
  4108be:	test   al,0x2e
  4108c0:	mov    cl,0xbf
  4108c2:	das    
  4108c3:	rcl    dl,1
  4108c5:	cmp    DWORD PTR [eax-0x4caa71a5],ebp
  4108cb:	mov    esi,es
  4108cd:	in     eax,dx
  4108ce:	das    
  4108cf:	push   es
  4108d0:	fwait
  4108d1:	inc    edx
  4108d2:	push   es
  4108d3:	fs mov ebx,0x9c56cc20
  4108d9:	cwde   
  4108da:	and    al,0xd6
  4108dc:	push   0x110017e1
  4108e1:	add    al,0x60
  4108e3:	test   DWORD PTR [ebx+0x4f],eax
  4108e6:	sbb    BYTE PTR [esi+0x4be2a722],dh
  4108ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108ed:	adc    bh,bl
  4108ef:	aaa    
  4108f0:	add    BYTE PTR [esi+0x7a],dl
  4108f3:	push   es
  4108f4:	mov    bl,0xf9
  4108f6:	sahf   
  4108f7:	xchg   edi,eax
  4108f8:	sub    eax,0x4d1ae09a
  4108fd:	arpl   WORD PTR [esi+0x45],cx
  410900:	imul   eax,DWORD PTR [ebx-0xea10436],0x15
  410907:	addr16 dec esp
  410909:	push   cs
  41090a:	sub    bl,BYTE PTR [eax+0x30]
  41090d:	mov    ds:0x394c4d80,al
  410912:	and    BYTE PTR [edi-0x24d05474],ah
  410918:	xchg   DWORD PTR [edx],ebx
  41091a:	in     eax,dx
  41091b:	and    cl,BYTE PTR [esi-0x48cf3b32]
  410921:	fdiv   QWORD PTR [edi-0x26]
  410924:	adc    DWORD PTR [eax],ebx
  410926:	sti    
  410927:	mov    eax,0x2291446b
  41092c:	fisubr DWORD PTR [ebp+edx*8+0x425a10c]
  410933:	call   0x1c705d4f
  410938:	call   0x5988:0xc4be9c7
  41093f:	mov    WORD PTR [ecx-0x21],es
  410942:	in     eax,0x5
  410944:	jecxz  0x4108c8
  410946:	cmp    dh,bh
  410948:	inc    edi
  410949:	sbb    eax,0xb5244fd2
  41094e:	mov    ds:0x96ca6e8b,al
  410953:	dec    ecx
  410954:	lahf   
  410955:	into   
  410956:	jle    0x4108e3
  410958:	xchg   esi,eax
  410959:	in     eax,0x38
  41095b:	mov    ds:0x7abc4b72,al
  410960:	pop    edx
  410961:	jecxz  0x4109d8
  410963:	cmp    al,BYTE PTR [esp+ebx*4+0x5e88b2e]
  41096a:	or     cl,dh
  41096c:	jne    0x41097f
  41096e:	sub    edi,DWORD PTR [ecx-0x7c]
  410971:	das    
  410972:	adc    al,0xe2
  410974:	jno    0x410903
  410976:	jg     0x41096b
  410978:	pop    edx
  410979:	dec    esi
  41097a:	inc    edx
  41097b:	(bad)  
  41097c:	dec    edx
  41097d:	ret    
  41097e:	xchg   edi,eax
  41097f:	pop    ecx
  410980:	dec    edi
  410981:	imul   DWORD PTR [ebx-0x76]
  410984:	test   eax,0x34caba03
  410989:	dec    edx
  41098a:	ja     0x410a02
  41098c:	mov    BYTE PTR [ebp+ebp*8-0x4875166d],bh
  410993:	and    BYTE PTR [ebp+0x6b75490b],dh
  410999:	pop    es
  41099a:	call   0x207a:0x6109ba70
  4109a1:	sahf   
  4109a2:	sub    cl,ch
  4109a4:	imul   ebp,esi,0x9479407b
  4109aa:	std    
  4109ab:	sahf   
  4109ac:	mov    dl,BYTE PTR [eax]
  4109ae:	inc    ebx
  4109af:	ins    BYTE PTR es:[edi],dx
  4109b0:	mov    dl,0xc3
  4109b2:	cmp    dl,BYTE PTR [ebp-0x60831ab8]
  4109b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109b9:	sub    edi,ebp
  4109bb:	les    ebx,FWORD PTR [eax+0x79b30ed7]
  4109c1:	ss mov gs:0xfe2a54,eax
  4109c8:	inc    eax
  4109c9:	jno    0x410a48
  4109cb:	imul   esi,ecx,0xa6669742
  4109d1:	lahf   
  4109d2:	dec    ecx
  4109d3:	cmp    al,0x23
  4109d5:	pusha  
  4109d6:	(bad)  [edx+0x55]
  4109d9:	adc    dh,ch
  4109db:	jl     0x4109f3
  4109dd:	lock call 0xe10c:0xaa6d6f79
  4109e5:	loope  0x410a3f
  4109e7:	int3   
  4109e8:	lock ror DWORD PTR [edx+0x64],cl
  4109ec:	mov    eax,0x9604f024
  4109f1:	jns    0x410977
  4109f3:	inc    edi
  4109f4:	(bad)  
  4109f5:	fidiv  WORD PTR [esi-0x5d]
  4109f8:	xchg   edi,eax
  4109f9:	ins    DWORD PTR es:[edi],dx
  4109fa:	fidivr DWORD PTR [esi-0x8]
  4109fd:	cmp    eax,ecx
  4109ff:	jmp    0xc69a74fa
  410a04:	or     ch,cl
  410a06:	clc    
  410a07:	fnstcw WORD PTR [ebx+edx*4+0x44dee839]
  410a0e:	ficom  WORD PTR [ebx+0x65]
  410a11:	xchg   edi,eax
  410a12:	lds    esp,FWORD PTR [edi-0x252b2841]
  410a18:	sbb    DWORD PTR [esp+eax*4+0x69cf36d6],esp
  410a1f:	pop    ebx
  410a20:	leave  
  410a21:	xchg   BYTE PTR ds:0x629b277f,ah
  410a28:	mov    ebp,0xdf8f0d59
  410a2d:	js     0x4109b4
  410a2f:	pop    es
  410a30:	add    eax,0x2c696767
  410a35:	pop    ds
  410a36:	or     BYTE PTR [ebp-0x51a8ccf3],bh
  410a3c:	or     eax,0x1c6bb1e9
  410a41:	(bad)  
  410a42:	cmp    edi,DWORD PTR [edx]
  410a44:	adc    eax,0x6dc48d4d
  410a49:	inc    ebx
  410a4a:	xchg   esi,eax
  410a4b:	sbb    al,ah
  410a4d:	sbb    eax,DWORD PTR [edx-0x12]
  410a50:	xchg   edi,eax
  410a51:	add    dh,BYTE PTR [edx-0x7f]
  410a54:	adc    BYTE PTR [esi],0xd2
  410a57:	inc    ebp
  410a58:	xor    ah,dh
  410a5a:	mov    ch,0xc1
  410a5c:	jecxz  0x4109f3
  410a5e:	lods   eax,DWORD PTR ds:[esi]
  410a5f:	sub    DWORD PTR [ebx],esp
  410a61:	je     0x4109e9
  410a63:	into   
  410a64:	and    al,0x40
  410a66:	adc    ecx,esp
  410a68:	out    0x54,al
  410a6a:	adc    eax,0xcefbc161
  410a6f:	jmp    0x6ae1:0x1d205628
  410a76:	push   esi
  410a77:	ins    BYTE PTR es:[edi],dx
  410a78:	xchg   esi,eax
  410a79:	sub    esp,DWORD PTR ds:0x63e6ce80
  410a7f:	inc    ebx
  410a80:	push   0x33
  410a82:	push   esp
  410a83:	or     eax,0x1ebaf9ef
  410a88:	adc    DWORD PTR [edx],ecx
  410a8a:	aam    0xd4
  410a8c:	xor    eax,0x2a64ca66
  410a91:	cmp    eax,0xc0a144a6
  410a96:	adc    eax,0x53a3b6ea
  410a9b:	out    0xe0,eax
  410a9d:	int3   
  410a9e:	add    esi,DWORD PTR [ebp-0x4d]
  410aa1:	fsub   st(6),st
  410aa3:	jb     0x410ab9
  410aa5:	in     al,dx
  410aa6:	push   edi
  410aa7:	ins    BYTE PTR es:[edi],dx
  410aa8:	add    BYTE PTR [eax+0x2c],bl
  410aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aac:	test   BYTE PTR [ebp+eax*4-0x47714bb6],al
  410ab3:	cmp    eax,0xcf06932e
  410ab8:	aaa    
  410ab9:	dec    ecx
  410aba:	adc    edi,esi
  410abc:	daa    
  410abd:	jl     0x410b03
  410abf:	sbb    BYTE PTR [ecx+esi*8+0x60],ch
  410ac3:	adc    al,0x41
  410ac5:	add    al,0xe0
  410ac7:	push   0x40
  410ac9:	and    eax,0x7c1f7eaa
  410ace:	push   edi
  410acf:	mov    eax,0x9f93b8db
  410ad4:	xchg   ebp,eax
  410ad5:	not    BYTE PTR [ebx]
  410ad7:	adc    eax,0xeafe12af
  410adc:	pop    esi
  410add:	(bad)  
  410ade:	loop   0x410aea
  410ae0:	mov    edi,0x5fd8983c
  410ae5:	cdq    
  410ae6:	or     eax,0x801cb53c
  410aeb:	mov    dh,0x2f
  410aed:	push   edi
  410aee:	(bad)  
  410af0:	and    BYTE PTR [ebx+0x2b],ch
  410af3:	cmp    eax,0x326857a2
  410af8:	mov    bl,0xda
  410afa:	xchg   edx,eax
  410afb:	xchg   ecx,eax
  410afc:	or     al,0x9c
  410afe:	lds    eax,FWORD PTR [esi-0x31]
  410b01:	(bad)  
  410b02:	std    
  410b03:	icebp  
  410b04:	ficomp DWORD PTR [eax+eiz*4+0x75b6b95a]
  410b0b:	aas    
  410b0c:	or     DWORD PTR ds:0x41f6643b,ebp
  410b12:	sub    eax,0x2090a3de
  410b17:	inc    ebx
  410b18:	(bad)  
  410b19:	and    al,0xcb
  410b1b:	cmp    eax,DWORD PTR [ebx+0xc20d01f]
  410b21:	mov    dh,0xfa
  410b23:	xchg   ebp,eax
  410b24:	ds xchg esi,eax
  410b26:	fstp   QWORD PTR [ecx+0x18]
  410b29:	push   esi
  410b2a:	int3   
  410b2b:	(bad)  
  410b2d:	adc    BYTE PTR [esi-0x55],ah
  410b30:	pop    ss
  410b31:	lods   al,BYTE PTR ds:[esi]
  410b32:	ret    
  410b33:	pop    esp
  410b34:	aas    
  410b35:	(bad)  
  410b36:	retf   
  410b37:	push   0xdc7566fe
  410b3c:	pop    ebx
  410b3d:	sbb    ch,BYTE PTR [edx-0x6d]
  410b40:	cmp    bh,BYTE PTR [edx+eiz*8]
  410b43:	lods   al,BYTE PTR ds:[esi]
  410b44:	xchg   esp,eax
  410b45:	lds    esi,FWORD PTR [ebp-0x23acd617]
  410b4b:	mov    dh,0xb7
  410b4d:	dec    eax
  410b4e:	add    al,0xe2
  410b50:	push   ds
  410b51:	int3   
  410b52:	jb     0x410ae1
  410b54:	ret    0xc57b
  410b57:	rol    BYTE PTR ss:[ebx+0x108232b3],0x88
  410b5f:	xor    al,0xee
  410b61:	dec    esp
  410b62:	cmp    BYTE PTR [edi+edx*2],al
  410b65:	pop    ecx
  410b66:	out    dx,eax
  410b67:	cdq    
  410b68:	xchg   BYTE PTR [eax],ch
  410b6a:	pop    ebp
  410b6b:	ins    BYTE PTR es:[edi],dx
  410b6c:	aas    
  410b6d:	mov    cl,bl
  410b6f:	push   edi
  410b70:	add    BYTE PTR [edi-0x7e8e35f],dl
  410b76:	leave  
  410b77:	fdivr  DWORD PTR [edi]
  410b79:	push   cs
  410b7a:	or     al,0x26
  410b7c:	enter  0xde50,0x99
  410b80:	pop    ds
  410b81:	lahf   
  410b82:	les    edi,FWORD PTR [edx+eax*2-0x50]
  410b86:	lahf   
  410b87:	mov    ebx,0x20086798
  410b8c:	mov    esp,0x5eab4d17
  410b91:	mov    dl,0xbf
  410b93:	(bad)  
  410b94:	adc    cl,BYTE PTR [edi*8-0x6b2e0ada]
  410b9b:	adc    DWORD PTR [esi-0x4b],0x48826746
  410ba2:	dec    ecx
  410ba3:	sar    BYTE PTR ds:0xe4128ae8,cl
  410ba9:	sbb    esi,DWORD PTR ss:[esi-0xbe0deaf]
  410bb0:	pushf  
  410bb1:	jne    0x410b7c
  410bb3:	xchg   DWORD PTR [ecx],esp
  410bb5:	mov    al,0xa
  410bb7:	adc    esp,DWORD PTR [ecx+ebx*2-0x286c8f87]
  410bbe:	or     eax,0x9a56768b
  410bc3:	data16 stos BYTE PTR es:[edi],al
  410bc5:	jecxz  0x410c1e
  410bc7:	inc    eax
  410bc8:	clc    
  410bc9:	add    ebp,DWORD PTR [ebx-0x58bb8d90]
  410bcf:	pusha  
  410bd0:	inc    ebx
  410bd1:	jecxz  0x410bec
  410bd3:	and    al,0x77
  410bd5:	xchg   esp,eax
  410bd6:	and    DWORD PTR [ecx+0x34759398],0x99f09e37
  410be0:	adc    ecx,0x2059a4
  410be6:	sbb    eax,0x34c8e649
  410beb:	jp     0x410c1a
  410bed:	inc    ebx
  410bee:	gs loope 0x410bee
  410bf1:	pop    ebp
  410bf2:	mov    bh,dl
  410bf4:	leave  
  410bf5:	xor    eax,0xf0f4f679
  410bfa:	mov    ebp,0x6bc6333
  410bff:	cmp    BYTE PTR [ebx],ah
  410c01:	add    BYTE PTR [eax],dh
  410c03:	cld    
  410c04:	(bad)  
  410c05:	test   eax,eax
  410c07:	lea    ebx,[eax-0x55]
  410c0a:	neg    DWORD PTR [esi-0x67ac5754]
  410c10:	jp     0x410bdc
  410c12:	fbld   TBYTE PTR [edx-0x1ce74df7]
  410c18:	bound  ecx,QWORD PTR [edi+0x56253e25]
  410c1e:	mov    dh,0x70
  410c20:	jno    0x410bb6
  410c22:	outs   dx,DWORD PTR ds:[esi]
  410c23:	adc    DWORD PTR [eax+0x10644c86],esp
  410c29:	cmp    al,0xa3
  410c2b:	scas   al,BYTE PTR es:[edi]
  410c2c:	retf   
  410c2d:	cmp    eax,0x6ee4b6cc
  410c32:	mov    esi,gs
  410c34:	mov    eax,ds:0x7c76a71e
  410c39:	je     0x410c72
  410c3b:	push   edi
  410c3c:	int    0x95
  410c3e:	mov    esi,0xa965f01f
  410c43:	add    DWORD PTR [ebp+0x788afe7c],edx
  410c49:	fsub   DWORD PTR [ebp+0x5a4e2c33]
  410c4f:	fldcw  WORD PTR [esi-0x3c165d1f]
  410c55:	xchg   ebp,eax
  410c56:	das    
  410c57:	mov    eax,ds:0xe1342365
  410c5c:	adc    edi,DWORD PTR [edi+0x743135c2]
  410c62:	dec    edi
  410c63:	dec    DWORD PTR [ebp+0x3d]
  410c66:	test   eax,0x12b55fe5
  410c6b:	fdiv   DWORD PTR [edx+0x4e738c0b]
  410c71:	ins    BYTE PTR es:[edi],dx
  410c72:	(bad)  
  410c73:	mov    ch,0x17
  410c75:	sbb    BYTE PTR [ebx],bh
  410c77:	jno    0x410c37
  410c79:	mov    al,0x30
  410c7b:	push   es
  410c7c:	leave  
  410c7d:	mov    al,ds:0xdf6a468e
  410c82:	push   eax
  410c83:	ss fwait
  410c85:	pop    ds
  410c86:	pusha  
  410c87:	mov    BYTE PTR [edx+0x14],bl
  410c8a:	std    
  410c8b:	or     BYTE PTR [edx+ebx*8],bl
  410c8e:	in     eax,0xcc
  410c90:	xor    ch,BYTE PTR [ebx]
  410c92:	adc    BYTE PTR [edi+0x64],al
  410c95:	and    BYTE PTR [ebx+eiz*4],cl
  410c98:	mov    DWORD PTR [ebp-0x29],ebp
  410c9b:	scas   al,BYTE PTR es:[edi]
  410c9c:	aas    
  410c9d:	idiv   BYTE PTR [edi+0xc]
  410ca0:	hlt    
  410ca1:	lds    eax,FWORD PTR [eax+0x66a3995]
  410ca7:	sub    eax,0x3e375fa8
  410cac:	(bad)  
  410cad:	retf   
  410cae:	mov    esi,0x14183600
  410cb3:	jle    0x410c83
  410cb5:	repnz outs dx,DWORD PTR ds:[esi]
  410cb7:	add    eax,0x6a113ce8
  410cbc:	sbb    dh,dl
  410cbe:	jo     0x410d22
  410cc0:	mov    ah,0x69
  410cc2:	pop    ds
  410cc3:	mov    ecx,esp
  410cc5:	ins    BYTE PTR es:[edi],dx
  410cc6:	cld    
  410cc7:	and    BYTE PTR [esi-0x15efdc95],dh
  410ccd:	arpl   WORD PTR [ecx+ebp*8+0x5c],bp
  410cd1:	sbb    esp,DWORD PTR [eax]
  410cd3:	into   
  410cd4:	push   eax
  410cd5:	aas    
  410cd6:	stos   BYTE PTR es:[edi],al
  410cd7:	jno    0x410ca8
  410cd9:	aad    0xe
  410cdb:	aaa    
  410cdc:	aaa    
  410cdd:	jge    0x410ce8
  410cdf:	je     0x410c87
  410ce1:	cmp    DWORD PTR [eax],esp
  410ce3:	iret   
  410ce4:	mov    bl,BYTE PTR [esi-0x70]
  410ce7:	jno    0x410d2a
  410ce9:	pop    edx
  410cea:	add    dl,0xd3
  410ced:	pop    ss
  410cee:	cmp    DWORD PTR [esi-0x6f95dc7],esi
  410cf4:	jg     0x410cb7
  410cf6:	pop    ebp
  410cf7:	outs   dx,DWORD PTR ds:[esi]
  410cf8:	pop    ebx
  410cfa:	mov    esi,0x4851c1d7
  410cff:	cwd    
  410d01:	sub    al,0x86
  410d03:	mov    ds:0x8472f197,al
  410d08:	loope  0x410d15
  410d0a:	iret   
  410d0b:	fild   QWORD PTR [ecx-0x34b78f91]
  410d11:	push   ebx
  410d12:	repz adc edx,DWORD PTR [esp+ebp*4+0x60]
  410d17:	xor    edi,DWORD PTR [edi+0x1a]
  410d1a:	add    eax,0x55bd8b52
  410d1f:	dec    esp
  410d20:	push   edx
  410d21:	cmp    al,0xe4
  410d23:	adc    eax,0x7ac2ad3e
  410d28:	jmp    0x58c9:0xa870bac2
  410d2f:	cmp    BYTE PTR [ebp-0x44],ah
  410d32:	dec    edx
  410d33:	push   edx
  410d34:	inc    ebp
  410d35:	js     0x410d57
  410d37:	arpl   WORD PTR [esi],dx
  410d39:	adc    BYTE PTR [edi+0x65],dl
  410d3c:	shl    ecx,1
  410d3e:	outs   dx,DWORD PTR ds:[esi]
  410d3f:	push   ss
  410d40:	jo     0x410d7c
  410d42:	sbb    ah,ah
  410d44:	scas   eax,DWORD PTR es:[edi]
  410d45:	fwait
  410d46:	aaa    
  410d47:	jae    0x410d67
  410d49:	xor    BYTE PTR [esi+0x33],cl
  410d4c:	sbb    edx,DWORD PTR [esi+0x50a6a5cb]
  410d52:	ret    0x8e9d
  410d55:	inc    esp
  410d56:	ins    BYTE PTR es:[edi],dx
  410d57:	dec    edx
  410d58:	mov    ah,0xa
  410d5a:	shld   esp,ecx,0x48
  410d5e:	test   BYTE PTR [ebx],0xc
  410d61:	fldenv [edi]
  410d63:	push   esp
  410d64:	pusha  
  410d65:	mov    cl,0x1
  410d67:	ffreep st(2)
  410d69:	push   0x14b408f2
  410d6e:	adc    al,0xa
  410d70:	das    
  410d71:	mov    ds:0x3b6396cf,al
  410d76:	aad    0x80
  410d78:	cld    
  410d79:	rol    DWORD PTR [ecx+0x6dba3535],1
  410d7f:	int3   
  410d80:	xchg   edx,eax
  410d81:	test   DWORD PTR [eax+0x16],0x90644eff
  410d88:	dec    ebx
  410d89:	outs   dx,DWORD PTR cs:[esi]
  410d8b:	push   ds
  410d8c:	stos   BYTE PTR es:[edi],al
  410d8d:	bound  edi,QWORD PTR [edx-0x656c646]
  410d93:	out    dx,eax
  410d94:	or     eax,0x2613ad04
  410d99:	mov    ebp,0xc6a0e45c
  410d9e:	lods   eax,DWORD PTR ds:[esi]
  410d9f:	or     DWORD PTR [edi+ebp*1+0x618c345a],0x3231c079
  410daa:	pop    ds
  410dab:	outs   dx,BYTE PTR ds:[esi]
  410dac:	imul   esi,esi,0x1c303fc1
  410db2:	repnz cmp esp,DWORD PTR [ebx+0x280bf9d0]
  410db9:	pop    ebx
  410dba:	or     bh,BYTE PTR ds:0x6032dfc6
  410dc0:	add    eax,0x8bfde7fa
  410dc5:	sub    ecx,DWORD PTR [esp+edi*8+0x3d]
  410dc9:	cmp    eax,0x19eadcd9
  410dce:	adc    al,0xa9
  410dd0:	pop    ss
  410dd1:	jge    0x410e4c
  410dd3:	xor    BYTE PTR [esi+ecx*4],al
  410dd6:	dec    ecx
  410dd7:	jno    0x410daf
  410dd9:	sub    DWORD PTR [edi+0x22],esp
  410ddc:	neg    DWORD PTR [ebx]
  410dde:	rcl    DWORD PTR [edi],cl
  410de0:	fidiv  DWORD PTR [eax+0x2d]
  410de3:	and    DWORD PTR [ebp+0x41],edx
  410de6:	loop   0x410e1b
  410de8:	addr16 rcr cl,cl
  410deb:	pop    ebp
  410dec:	cmp    eax,0x983870a3
  410df1:	mov    edi,0x38933225
  410df6:	mov    dh,0x5d
  410df8:	mov    edi,0xab77e2e8
  410dfd:	fwait
  410dfe:	dec    cx
  410e00:	mov    BYTE PTR [ecx+0x13],dh
  410e03:	clc    
  410e04:	into   
  410e05:	jl     0x410e15
  410e07:	sti    
  410e08:	rcl    BYTE PTR [edx],1
  410e0a:	sub    al,ah
  410e0c:	pop    ss
  410e0d:	mov    dl,0x1
  410e0f:	mov    al,0x8b
  410e11:	pop    edx
  410e12:	(bad)  
  410e13:	aas    
  410e14:	rcl    BYTE PTR [edx],cl
  410e16:	jmp    0x855c855f
  410e1b:	jnp    0x410e96
  410e1d:	inc    edx
  410e1e:	mov    edx,DWORD PTR [eax]
  410e20:	mov    ecx,0xfb913134
  410e25:	pop    ebp
  410e26:	in     al,dx
  410e27:	pop    eax
  410e28:	packssdw mm5,QWORD PTR cs:[ebx+0x7066a3c3]
  410e30:	adc    bl,al
  410e32:	mov    ebp,0xa858129c
  410e37:	dec    ecx
  410e38:	in     eax,0x83
  410e3a:	stc    
  410e3b:	cmp    BYTE PTR [ecx],bl
  410e3d:	pop    ebx
  410e3e:	push   edx
  410e3f:	adc    BYTE PTR [edx+0x3b25500f],dh
  410e45:	jno    0x410e3e
  410e47:	mov    BYTE PTR [ebp+0x2a],cl
  410e4a:	xchg   ebp,eax
  410e4b:	in     al,0xba
  410e4d:	arpl   WORD PTR [ecx+0x1c26435a],sp
  410e53:	(bad)  
  410e54:	pop    ds
  410e55:	or     cl,bl
  410e57:	cmp    cl,ah
  410e59:	pop    ebp
  410e5a:	(bad)  
  410e5b:	mov    ?,edi
  410e5d:	or     al,BYTE PTR [ebp-0x56]
  410e60:	jmp    0xb26514c9
  410e65:	adc    al,0x94
  410e67:	dec    ecx
  410e68:	add    DWORD PTR [edx+0xa],eax
  410e6b:	rcr    BYTE PTR [eax+0x656f937b],0xe4
  410e72:	inc    ecx
  410e73:	lods   eax,DWORD PTR ds:[esi]
  410e74:	jo     0x410e59
  410e76:	mov    bl,0x29
  410e78:	or     eax,edi
  410e7a:	mov    dh,0xd1
  410e7c:	into   
  410e7d:	je     0x410e37
  410e7f:	ja     0x410e0e
  410e81:	retf   
  410e82:	and    BYTE PTR [esi+eax*4],dl
  410e85:	xchg   ecx,eax
  410e86:	retf   0x54da
  410e89:	movups XMMWORD PTR [edi-0x19],xmm7
  410e8d:	ror    BYTE PTR gs:[ecx+0x731dfcdb],cl
  410e94:	dec    esi
  410e95:	adc    al,BYTE PTR [eax]
  410e97:	loopne 0x410ee8
  410e99:	repnz out dx,al
  410e9b:	xchg   edx,eax
  410e9c:	push   cs
  410e9d:	dec    edi
  410e9e:	add    eax,0xc4add7f
  410ea3:	dec    esi
  410ea4:	cmp    ch,bh
  410ea6:	push   ebp
  410ea7:	mov    cl,0x2e
  410ea9:	jl     0x410f1b
  410eab:	and    eax,0x8ac92227
  410eb0:	adc    al,0xae
  410eb2:	xor    al,0x2e
  410eb4:	out    dx,al
  410eb5:	xchg   edi,eax
  410eb6:	mov    cl,0x2a
  410eb8:	mov    bh,0x44
  410eba:	pop    edx
  410ebb:	inc    eax
  410ebc:	sub    DWORD PTR ds:0x9a8ab5ef,esi
  410ec2:	(bad)  
  410ec3:	pop    ebp
  410ec4:	lock mov ds:0x959bf030,eax
  410eca:	ficom  WORD PTR [esi+0x7a]
  410ecd:	add    dl,BYTE PTR [eax-0x6faf15ee]
  410ed3:	xchg   ebp,eax
  410ed4:	(bad)  
  410ed6:	push   eax
  410ed7:	imul   edx,DWORD PTR [edx-0x660d1ec1],0xc75c04d6
  410ee1:	adc    ah,cl
  410ee3:	fucomi st,st(4)
  410ee5:	mov    ah,0x51
  410ee7:	cmp    BYTE PTR [eax+0x7011a5ae],dh
  410eed:	push   ebx
  410eee:	shr    BYTE PTR [edx+0x4ad968d0],cl
  410ef4:	retf   
  410ef5:	aam    0x85
  410ef7:	clc    
  410ef8:	push   0xffffffe5
  410efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410efb:	dec    edx
  410efc:	imul   DWORD PTR [ebp-0x43]
  410eff:	or     al,BYTE PTR [esi]
  410f01:	sub    edx,DWORD PTR [esi+0x7e8e2f24]
  410f07:	outs   dx,DWORD PTR ds:[esi]
  410f08:	outs   dx,DWORD PTR ds:[esi]
  410f09:	pusha  
  410f0a:	sbb    ebx,eax
  410f0c:	or     ch,0xc8
  410f0f:	arpl   si,dx
  410f11:	inc    esi
  410f12:	mov    ah,BYTE PTR [edx]
  410f14:	test   eax,0x7c253599
  410f19:	lock adc eax,0xd98a55ec
  410f1f:	jne    0x410ee4
  410f21:	mov    eax,ds:0x4275449c
  410f26:	xchg   ebx,eax
  410f27:	das    
  410f28:	push   ds
  410f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f2a:	out    dx,eax
  410f2b:	push   ecx
  410f2c:	cmp    al,0xb4
  410f2e:	xchg   BYTE PTR [edi+eax*2],dh
  410f31:	mov    eax,ds:0xc5de0a2a
  410f36:	aaa    
  410f37:	xor    al,0xf3
  410f39:	pusha  
  410f3a:	mov    ds:0xbac56762,eax
  410f3f:	in     eax,dx
  410f40:	fnstsw WORD PTR [ebx]
  410f42:	mov    ebp,0xa1f14131
  410f47:	lds    ebx,FWORD PTR [edx+eax*1-0x11b4ffdf]
  410f4e:	sbb    DWORD PTR [edx-0x5467db48],0xd1367d6a
  410f58:	push   ds
  410f59:	adc    DWORD PTR [ecx],edx
  410f5b:	ret    
  410f5c:	dec    ecx
  410f5d:	mov    dl,ch
  410f5f:	push   esi
  410f60:	xor    eax,0xe8d55042
  410f65:	jb     0x410fe6
  410f67:	shl    DWORD PTR [edx-0x1b],0xe8
  410f6b:	or     eax,DWORD PTR [eax-0xd]
  410f6e:	out    0x86,al
  410f70:	jge    0x410f90
  410f72:	mov    cl,BYTE PTR [edi]
  410f74:	mov    BYTE PTR [ebp-0x44036c6c],bh
  410f7a:	js     0x410efc
  410f7c:	lods   eax,DWORD PTR ds:[esi]
  410f7d:	adc    esp,DWORD PTR [esi-0x419d4c02]
  410f83:	aas    
  410f84:	addr16 mov dh,0x81
  410f87:	adc    al,0x1a
  410f89:	imul   esp,DWORD PTR [esi-0x36b5acac],0xae573639
  410f93:	jnp    0x410f99
  410f95:	clc    
  410f96:	or     BYTE PTR [ebx-0x754a0b71],bh
  410f9c:	jmp    0xf307:0xcd72fefe
  410fa3:	das    
  410fa4:	ficomp DWORD PTR [ebp-0x5f6ef732]
  410faa:	adc    eax,0x7f6c8a9
  410faf:	add    DWORD PTR [esi-0x5b],esp
  410fb2:	jno    0x410fc9
  410fb4:	ja     0x410fd2
  410fb6:	inc    eax
  410fb7:	or     al,dh
  410fb9:	loop   0x410f63
  410fbb:	sub    al,0x4a
  410fbd:	or     esi,ebp
  410fbf:	mov    bh,0x27
  410fc1:	xchg   ebp,eax
  410fc2:	cmp    BYTE PTR ds:[edx-0x6faeba5b],dh
  410fc9:	sti    
  410fca:	(bad)
  410fcd:	sar    BYTE PTR [esi-0xc],1
  410fd0:	arpl   WORD PTR [esi],cx
  410fd2:	push   edx
  410fd3:	push   ecx
  410fd4:	out    dx,al
  410fd5:	cmp    DWORD PTR [ebp+0x3c],ecx
  410fd8:	iret   
  410fd9:	test   DWORD PTR [edx],0xe9d747e2
  410fdf:	mov    dl,BYTE PTR [edx]
  410fe1:	xlat   BYTE PTR ds:[ebx]
  410fe2:	mov    edi,0x6c1cdb79
  410fe7:	mov    bh,0x80
  410fe9:	pushf  
  410fea:	stos   DWORD PTR es:[edi],eax
  410feb:	pop    ebx
  410fec:	scas   eax,DWORD PTR es:[edi]
  410fed:	mov    al,ds:0x8d98d6d8
  410ff2:	(bad)  
  410ff3:	push   eax
  410ff4:	sbb    edi,edx
  410ff6:	popf   
  410ff7:	inc    ecx
  410ff8:	retf   
  410ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ffa:	int    0x66
  410ffc:	cli    
  410ffd:	cmovae ecx,DWORD PTR [ebx]
  411000:	cmp    bl,ch
  411002:	cld    
  411003:	xchg   DWORD PTR [eax-0x50],ecx
  411006:	aaa    
  411007:	rol    BYTE PTR [ebp-0x37],1
  41100a:	pop    esp
  41100b:	ret    
  41100c:	retf   
  41100d:	xchg   BYTE PTR [ebx-0x1e691032],dh
  411013:	inc    edx
  411014:	pop    ecx
  411015:	out    0x10,al
  411017:	or     eax,0x794b68a2
  41101c:	loopne 0x410faf
  41101e:	cmp    DWORD PTR [edx-0x56],esi
  411021:	xlat   BYTE PTR ds:[ebx]
  411022:	fimul  WORD PTR [ecx-0x75]
  411025:	dec    ebp
  411026:	or     BYTE PTR [eax+0x8a8d],bh
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	into   
  4115ac:	in     eax,dx
  4115ad:	adc    BYTE PTR [eax],bh
  4115af:	inc    eax
  4115b0:	scas   eax,DWORD PTR es:[edi]
  4115b1:	jl     0x41162f
  4115b3:	inc    eax
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	loop   0x411565
  4115b9:	mov    eax,0x4f018fe2
  4115be:	inc    edi
  4115bf:	dec    esi
  4115c0:	clc    
  4115c1:	cmp    bh,BYTE PTR [eax]
  4115c3:	and    ebx,DWORD PTR [ebx+0x79]
  4115c6:	add    ecx,DWORD PTR [ecx+0x2235c903]
  4115cc:	sbb    eax,DWORD PTR [ebx+0x3d]
  4115cf:	popf   
  4115d0:	jno    0x4115bf
  4115d2:	dec    esp
  4115d3:	cdq    
  4115d4:	xchg   esi,eax
  4115d5:	hlt    
  4115d6:	adc    ebp,DWORD PTR [eax]
  4115d8:	lock shr DWORD PTR [edx-0x3e],cl
  4115dc:	cmp    dh,BYTE PTR [ebx-0x5667913]
  4115e2:	out    dx,eax
  4115e3:	xchg   DWORD PTR [edx],edx
  4115e5:	dec    esp
  4115e6:	je     0x411666
  4115e8:	fwait
  4115e9:	jb     0x411612
  4115eb:	inc    esp
  4115ec:	jnp    0x4115d3
  4115ee:	sub    ebx,DWORD PTR [edx+0x1f97497]
  4115f4:	cmp    ah,bl
  4115f6:	pop    esi
  4115f7:	or     al,ah
  4115f9:	inc    ebx
  4115fa:	xchg   ebp,eax
  4115fb:	lods   eax,DWORD PTR ds:[esi]
  4115fc:	scas   eax,DWORD PTR es:[edi]
  4115fd:	inc    edx
  4115fe:	fsub   DWORD PTR [edx-0x24]
  411601:	sahf   
  411602:	cmc    
  411603:	jg     0x411588
  411605:	shl    DWORD PTR [edi-0x781080c0],0x4b
  41160c:	mov    ecx,0xb5b5920f
  411611:	and    edi,DWORD PTR [ebx-0x5b5dcc16]
  411617:	ds scas eax,DWORD PTR es:[edi]
  411619:	retf   0x310d
  41161c:	jbe    0x411628
  41161e:	neg    eax
  411620:	stos   DWORD PTR es:[edi],eax
  411621:	xchg   edi,eax
  411622:	push   ebx
  411623:	shl    ch,cl
  411625:	cwde   
  411626:	sbb    eax,0xb44fb8af
  41162b:	jb     0x411634
  41162d:	mov    esp,0xb5763c18
  411632:	je     0x4115e2
  411634:	imul   edi,ecx,0x39
  411637:	xor    BYTE PTR [esi+edx*2+0x4d0d2879],0x1f
  41163f:	cdq    
  411640:	mov    DWORD PTR [ebx+0x11ce80c],ecx
  411646:	and    esi,edx
  411648:	daa    
  411649:	(bad)  
  41164a:	scas   al,BYTE PTR es:[edi]
  41164b:	lods   eax,DWORD PTR ds:[esi]
  41164c:	stc    
  41164d:	scas   al,BYTE PTR es:[edi]
  41164e:	cmovo  ebx,DWORD PTR [ebx+0x3fb7b370]
  411655:	mov    DWORD PTR [edx-0x55745e95],ebx
  41165b:	adc    al,0xaf
  41165d:	ret    0x2635
  411660:	and    DWORD PTR [eax+ecx*4],ebx
  411663:	mov    edi,DWORD PTR [edi-0xe2189f0]
  411669:	sub    al,0xc2
  41166b:	pause  
  41166d:	icebp  
  41166e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411670:	shr    DWORD PTR [edi+0x1ed6da29],1
  411676:	adc    ch,al
  411678:	or     eax,0x765f36d4
  41167d:	mov    edi,0xff1b7394
  411682:	scas   eax,DWORD PTR es:[edi]
  411683:	dec    ebx
  411684:	popa   
  411685:	scas   al,BYTE PTR es:[edi]
  411686:	xlat   BYTE PTR ds:[ebx]
  411687:	mov    dl,0x46
  411689:	test   DWORD PTR [ebx],0x6e2192b4
  41168f:	ror    BYTE PTR [ebx],cl
  411691:	jp     0x4116b7
  411693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411694:	out    dx,al
  411695:	pop    edi
  411696:	jo     0x41163a
  411698:	xor    ch,BYTE PTR [edi]
  41169a:	sahf   
  41169b:	push   edx
  41169c:	adc    DWORD PTR [ebx+0x61],0x1054db50
  4116a3:	rol    BYTE PTR [edi],1
  4116a5:	inc    esp
  4116a6:	xor    al,0xd7
  4116a8:	stos   DWORD PTR es:[edi],eax
  4116a9:	cmp    DWORD PTR [ebx-0x650d34d3],ebx
  4116af:	pop    ss
  4116b0:	sti    
  4116b1:	mov    esi,0xaf3fdf20
  4116b6:	retf   0x89d5
  4116b9:	sbb    DWORD PTR [edi+0x76168289],edx
  4116bf:	push   ss
  4116c0:	mov    al,fs:0x98d8c8c3
  4116c6:	popa   
  4116c7:	mov    ah,0xaa
  4116c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ca:	js     0x4116f0
  4116cc:	fadd   QWORD PTR [eax-0x1]
  4116cf:	xchg   ebp,eax
  4116d0:	fisubr WORD PTR [esp+esi*2]
  4116d3:	mov    esp,0x75a7f3e0
  4116d8:	cld    
  4116d9:	sti    
  4116da:	push   eax
  4116db:	addr16 in eax,dx
  4116dd:	cmp    al,0x7d
  4116df:	sub    eax,0x148bbf
  4116e4:	xor    al,0x67
  4116e6:	add    al,0x0
  4116e8:	cwde   
  4116e9:	xchg   esi,eax
  4116ea:	sub    ax,0x36a5
  4116ee:	xchg   BYTE PTR [esi-0x3b],bl
  4116f1:	repnz add bh,BYTE PTR [ebx+0x686cb8ed]
  4116f8:	push   esi
  4116f9:	add    BYTE PTR [ebx+0x1f],0x2a
  4116fd:	and    cl,BYTE PTR [eax-0x20]
  411700:	xor    eax,eax
  411702:	mov    ch,0x5f
  411704:	or     BYTE PTR [ebx-0xa],al
  411707:	mov    cl,0x5b
  411709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41170a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41170b:	jge    0x41170e
  41170d:	add    esi,DWORD PTR [ebx-0xa]
  411710:	mov    cl,0x77
  411712:	fiadd  DWORD PTR [eax+0x12]
  411715:	pop    ebp
  411716:	es punpckhbw mm4,mm0
  41171a:	mov    eax,0x74822c61
  41171f:	mov    DWORD PTR [esi+0x6e],ecx
  411722:	pop    esi
  411723:	leave  
  411724:	jno    0x4116e4
  411726:	pop    ecx
  411727:	push   esp
  411728:	daa    
  411729:	jno    0x4116ff
  41172b:	adc    al,0xd5
  41172d:	mov    fs,WORD PTR [ebp+0x31]
  411730:	pop    edi
  411731:	div    DWORD PTR [esi]
  411733:	lahf   
  411734:	fidivr WORD PTR [ebx-0x67]
  411737:	nop
  411738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411739:	lds    ebp,FWORD PTR [esi+0x4201c14c]
  41173f:	(bad)  
  411740:	(bad)  
  411741:	pop    eax
  411742:	inc    esp
  411743:	add    BYTE PTR [edi],ch
  411745:	ror    BYTE PTR [ebx+ebp*2],0x6
  411749:	loopne 0x411780
  41174b:	dec    edx
  41174c:	daa    
  41174d:	(bad)  
  41174e:	dec    ebx
  41174f:	push   esi
  411750:	or     eax,0x61252581
  411755:	out    dx,al
  411756:	fadd   st,st(6)
  411758:	stc    
  411759:	inc    ebp
  41175a:	out    0xc2,eax
  41175c:	rol    DWORD PTR [edi],1
  41175e:	push   0x67
  411760:	stc    
  411761:	rcr    BYTE PTR [ebp+0x74dcd912],cl
  411767:	das    
  411768:	pop    esi
  411769:	loopne 0x411725
  41176b:	pop    ecx
  41176c:	dec    edi
  41176d:	sub    ebp,edx
  41176f:	stos   BYTE PTR es:[edi],al
  411770:	jp     0x4117a3
  411772:	xchg   ebx,eax
  411773:	scas   al,BYTE PTR es:[edi]
  411774:	push   esi
  411775:	jae    0x4117a3
  411777:	mov    ah,0xa2
  411779:	popf   
  41177a:	dec    esi
  41177b:	xchg   edi,eax
  41177c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41177d:	and    BYTE PTR [ecx+0xf],al
  411780:	cmc    
  411781:	dec    ebp
  411782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411783:	push   esi
  411784:	test   DWORD PTR [eax-0x74ef3001],0x46c7b537
  41178e:	out    dx,al
  41178f:	ret    0x9688
  411792:	cmovle ecx,DWORD PTR [ecx+0x7134cab2]
  411799:	push   0x679a5c3
  41179e:	push   ebx
  41179f:	stos   DWORD PTR es:[edi],eax
  4117a0:	jo     0x4117a5
  4117a2:	mov    bh,0x16
  4117a4:	pop    edi
  4117a5:	add    BYTE PTR [eax-0x2dcc52aa],al
  4117ab:	mov    ds:0x729a5031,al
  4117b0:	xchg   ebx,eax
  4117b1:	sub    al,cl
  4117b3:	adc    al,0x54
  4117b5:	not    ecx
  4117b7:	ret    
  4117b8:	call   0x4796:0x957b36a5
  4117bf:	mov    bh,0x52
  4117c1:	aam    0x77
  4117c3:	pop    esi
  4117c4:	(bad)  
  4117c5:	mov    ah,0x3c
  4117c7:	dec    eax
  4117c8:	inc    esp
  4117c9:	jecxz  0x41175a
  4117cb:	xor    DWORD PTR [esi-0x58],ebp
  4117ce:	or     dh,BYTE PTR [ebx-0x17]
  4117d1:	loop   0x411833
  4117d3:	pop    eax
  4117d4:	cld    
  4117d5:	out    0x69,eax
  4117d7:	xchg   esi,eax
  4117d8:	test   eax,0x1835e5a3
  4117dd:	vmread DWORD PTR [edx],esi
  4117e0:	fwait
  4117e1:	mov    ecx,DWORD PTR [eax+edi*8]
  4117e4:	add    eax,0x2f5be980
  4117e9:	dec    esi
  4117ea:	in     eax,dx
  4117eb:	jle    0x4117df
  4117ed:	xchg   ebx,eax
  4117ee:	pop    es
  4117ef:	jp     0x4117dc
  4117f1:	jae    0x41182c
  4117f3:	ja     0x41180a
  4117f5:	not    BYTE PTR [ecx]
  4117f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117f8:	jb     0x411857
  4117fa:	mov    eax,ebx
  4117fc:	jmp    0x99f3:0x57b8e510
  411803:	adc    DWORD PTR [edi+0x35f1d9b2],esp
  411809:	dec    ebp
  41180a:	sub    cl,BYTE PTR [eax-0x2a]
  41180d:	(bad)  
  41180e:	aad    0xb6
  411810:	sbb    eax,0x18b13484
  411815:	xor    cl,bh
  411817:	sti    
  411818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411819:	les    esi,FWORD PTR [ecx-0x4b246ab]
  41181f:	adc    dh,bh
  411821:	outs   dx,BYTE PTR ds:[esi]
  411822:	mov    ds:0xdf103105,eax
  411827:	inc    ebp
  411828:	fxch   st(2)
  41182a:	and    dl,dl
  41182c:	pop    edi
  41182d:	jg     0x41184d
  41182f:	loop   0x411808
  411831:	icebp  
  411832:	push   ecx
  411833:	pop    esp
  411834:	retf   
  411835:	xchg   ebx,eax
  411836:	xor    al,0x54
  411838:	dec    esi
  411839:	inc    ecx
  41183a:	pop    ds
  41183b:	jne    0x4117d7
  41183d:	in     al,dx
  41183e:	(bad)  
  41183f:	out    dx,eax
  411840:	push   edx
  411841:	xchg   ch,al
  411843:	pop    esi
  411844:	pop    ebp
  411845:	sub    al,0xef
  411847:	in     eax,dx
  411848:	inc    edi
  411849:	scas   al,BYTE PTR es:[edi]
  41184a:	dec    ebx
  41184b:	adc    al,0x12
  41184d:	neg    BYTE PTR [bx+si+0x55]
  411851:	retf   
  411852:	sub    al,0x88
  411854:	mov    bh,BYTE PTR [eax-0x5f014558]
  41185a:	loopne 0x411833
  41185c:	stc    
  41185d:	daa    
  41185e:	or     al,0x70
  411860:	jmp    0x39411287
  411865:	out    0x91,al
  411867:	lahf   
  411868:	lock int 0xb
  41186b:	pop    ebp
  41186c:	fisub  WORD PTR [ebp+0x3d9083d6]
  411872:	jne    0x4117fa
  411874:	test   al,0x6f
  411876:	cmc    
  411877:	pushf  
  411878:	aaa    
  411879:	ss adc esi,ecx
  41187c:	je     0x4118a5
  41187e:	ror    ecx,cl
  411880:	push   esi
  411881:	sbb    eax,0xd20c760e
  411886:	inc    ebx
  411887:	mov    dl,0xba
  411889:	and    dl,BYTE PTR [esi]
  41188b:	outs   dx,BYTE PTR ds:[esi]
  41188c:	jno    0x41180f
  41188e:	call   0xe08:0xcddea52
  411895:	jle    0x411907
  411897:	cwde   
  411898:	rcl    DWORD PTR [ebx],cl
  41189a:	pop    esp
  41189b:	inc    ecx
  41189c:	mov    eax,ds:0x56a116c6
  4118a1:	popf   
  4118a2:	sbb    ah,al
  4118a4:	mov    eax,0xeb3f2235
  4118a9:	hlt    
  4118aa:	das    
  4118ab:	inc    bl
  4118ad:	jge    0x41190f
  4118af:	or     edi,eax
  4118b1:	or     DWORD PTR [esi+0x2bf42220],eax
  4118b7:	in     eax,dx
  4118b8:	or     bl,BYTE PTR [ebx+ebp*4-0x569976e6]
  4118bf:	fstp   st(4)
  4118c1:	pop    ebp
  4118c2:	jp     0x4118ab
  4118c4:	dec    esp
  4118c5:	sahf   
  4118c6:	xlat   BYTE PTR ds:[ebx]
  4118c7:	int    0x48
  4118c9:	push   ebp
  4118ca:	mov    ecx,0xc399d333
  4118cf:	xor    DWORD PTR [ebp+0x2c],edx
  4118d2:	cld    
  4118d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d4:	repnz pusha 
  4118d6:	inc    ebp
  4118d7:	lgs    ebx,FWORD PTR [edi+0x61]
  4118db:	mov    dh,0x26
  4118dd:	mov    al,0xf3
  4118df:	add    DWORD PTR [esi],ebp
  4118e1:	fs lahf 
  4118e3:	ret    
  4118e4:	cmp    dl,BYTE PTR [ecx-0x21757cd5]
  4118ea:	push   es
  4118eb:	aam    0x5
  4118ed:	addr16 pop ecx
  4118ef:	dec    ecx
  4118f0:	retf   0x6003
  4118f3:	mov    edx,0x28028a1c
  4118f8:	icebp  
  4118f9:	fwait
  4118fa:	jg     0x41194e
  4118fc:	mov    bh,BYTE PTR [edx]
  4118fe:	mov    edi,0x28410d
  411903:	jmp    0x798d:0xd200ab6a
  41190a:	ror    edx,1
  41190c:	adc    al,0x66
  41190e:	pop    eax
  41190f:	jecxz  0x4118aa
  411911:	lods   al,BYTE PTR ds:[esi]
  411912:	pop    ebx
  411913:	jb     0x4118a3
  411915:	xlat   BYTE PTR ds:[ebx]
  411916:	pop    ds
  411917:	int3   
  411918:	retf   
  411919:	int3   
  41191a:	call   0x9ff64a29
  41191f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411920:	adc    BYTE PTR [edx],0x23
  411923:	xchg   DWORD PTR [esi],ecx
  411925:	sbb    BYTE PTR [edi-0x42],ch
  411928:	mov    WORD PTR [edx+0x2aa219a6],cs
  41192e:	ins    BYTE PTR es:[edi],dx
  41192f:	gs iret 
  411931:	leave  
  411932:	push   ebx
  411933:	loopne 0x4119b2
  411935:	xchg   BYTE PTR [eax+0x1e],dh
  411938:	mov    eax,ebx
  41193a:	mov    esi,0xfdc9dc85
  41193f:	mov    fs,WORD PTR [edi+0x30df9dc6]
  411945:	bnd js 0x4119b0
  411948:	addr16 jne 0x41194e
  41194b:	mov    esi,0xc0530697
  411950:	(bad)  
  411951:	push   esp
  411952:	nop
  411953:	cld    
  411954:	sub    ch,BYTE PTR [ebx-0xa02c0b1]
  41195a:	daa    
  41195b:	iret   
  41195c:	and    edx,DWORD PTR [ecx-0x78490fff]
  411962:	shl    ebp,1
  411964:	cmp    DWORD PTR [eax-0x78f5676d],0xbec63f8a
  41196e:	adc    DWORD PTR [edx],ebp
  411970:	xchg   esi,eax
  411971:	cmp    eax,0x69a102ab
  411976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411977:	mov    eax,ds:0xf91a7bf
  41197c:	cmp    DWORD PTR [edx+0x7b],ebp
  41197f:	imul   edx,DWORD PTR [eax],0xa15c0e27
  411985:	mov    esp,0x79f6b19
  41198a:	xor    BYTE PTR [edi-0xd0913c4],al
  411990:	dec    ecx
  411991:	adc    eax,0x9df7819c
  411996:	(bad)  
  411997:	cli    
  411998:	cwde   
  411999:	mov    al,ds:0x8a7c804b
  41199e:	fdiv   QWORD PTR [edi]
  4119a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119a2:	pop    ss
  4119a3:	enter  0x9ab8,0xe7
  4119a7:	or     esi,DWORD PTR [ebp-0x71570a7a]
  4119ad:	inc    edx
  4119ae:	shl    BYTE PTR [edi-0x25],0xef
  4119b2:	xchg   ebp,eax
  4119b3:	xchg   BYTE PTR [eax-0x4427ff48],al
  4119b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119ba:	loop   0x41198a
  4119bc:	call   0x5dde:0xa6eef8f6
  4119c3:	clc    
  4119c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119c5:	imul   edi,DWORD PTR [ecx],0xffffffff
  4119c8:	imul   ecx,DWORD PTR [ebp+ebp*8-0x2edee347],0x90e5bced
  4119d3:	out    0xf6,al
  4119d5:	cmc    
  4119d6:	lock cmp ecx,esi
  4119d9:	mov    dh,0xfa
  4119db:	jne    0x41198a
  4119dd:	icebp  
  4119de:	sub    dh,BYTE PTR [ebx-0x5c27807f]
  4119e4:	xchg   edi,esp
  4119e6:	mov    ds:0x43349f79,al
  4119eb:	ja     0x411986
  4119ed:	not    WORD PTR [ecx+0x65da23e7]
  4119f4:	loope  0x411990
  4119f6:	fcomp  st(0)
  4119f8:	fisub  DWORD PTR [esp+ecx*8-0x63]
  4119fc:	not    DWORD PTR [eax+eax*4]
  4119ff:	lods   eax,DWORD PTR ds:[esi]
  411a00:	sub    bl,0xa3
  411a03:	inc    ebx
  411a04:	or     al,0x8f
  411a06:	(bad)  
  411a07:	retf   
  411a08:	daa    
  411a09:	cwde   
  411a0a:	cwde   
  411a0b:	(bad)  
  411a0d:	(bad)  
  411a0e:	aaa    
  411a0f:	icebp  
  411a10:	stos   BYTE PTR es:[edi],al
  411a11:	and    DWORD PTR [edi],edx
  411a13:	jl     0x411a60
  411a15:	aas    
  411a16:	loopne 0x4119f7
  411a18:	or     al,0x3e
  411a1a:	or     al,0x80
  411a1c:	mov    ah,0xe7
  411a1e:	rol    DWORD PTR [ecx-0x5],1
  411a21:	test   DWORD PTR [ecx-0x71],esi
  411a24:	sbb    al,0xe7
  411a26:	ins    DWORD PTR es:[edi],dx
  411a27:	push   edi
  411a28:	rcl    BYTE PTR [ebx],0x78
  411a2b:	and    ebp,DWORD PTR [esi]
  411a2d:	test   bh,ah
  411a2f:	mov    edi,0x6fa00a57
  411a34:	test   al,0xb2
  411a36:	dec    ecx
  411a37:	and    eax,0x389d707a
  411a3c:	mov    ebx,0x90f110e0
  411a41:	cmp    bl,BYTE PTR [ebp-0x77]
  411a44:	xor    al,0x78
  411a46:	femms  
  411a48:	cmp    BYTE PTR [eax+0x1a],bh
  411a4b:	shl    BYTE PTR [eax+ebp*1-0x4e64bbd],cl
  411a52:	mov    gs,WORD PTR [esp+ebx*2+0x45a114cd]
  411a59:	sub    edi,DWORD PTR [ebx]
  411a5b:	add    dh,BYTE PTR [eax-0x58a820e9]
  411a61:	xchg   edx,eax
  411a62:	sbb    DWORD PTR [ecx-0x7a],0x19
  411a66:	mov    edx,0xde60c8db
  411a6b:	mov    BYTE PTR [eax+0x64b73cc7],ch
  411a71:	and    al,0x6b
  411a73:	je     0x411aa2
  411a75:	stos   BYTE PTR es:[edi],al
  411a76:	adc    al,0xbf
  411a78:	mov    ah,0x60
  411a7a:	sahf   
  411a7b:	test   eax,0xc2b9e70
  411a80:	pop    edx
  411a81:	(bad)  
  411a82:	sbb    ecx,DWORD PTR [esi-0x2b308047]
  411a88:	jl     0x411a90
  411a8a:	jb     0x411a52
  411a8c:	mov    ds:0xb06409e6,al
  411a91:	call   0xc8e9a067
  411a96:	(bad)  
  411a97:	rcr    DWORD PTR [eax+0x24b96917],cl
  411a9d:	iret   
  411a9e:	add    ah,ah
  411aa0:	fistp  WORD PTR [ebx]
  411aa2:	mov    al,ds:0x1e89790b
  411aa7:	push   ds
  411aa8:	pop    esi
  411aa9:	fst    DWORD PTR [eax+0x1e9ffc72]
  411aaf:	cwde   
  411ab0:	pop    es
  411ab1:	ror    BYTE PTR [edi-0x3100d696],cl
  411ab7:	cli    
  411ab8:	call   0xbc762b7a
  411abd:	inc    ebp
  411abe:	cmp    DWORD PTR [ebx],esp
  411ac0:	adc    al,0xdc
  411ac2:	shl    BYTE PTR cs:[eax],0xc2
  411ac6:	shr    BYTE PTR [edi+0x6f],1
  411ac9:	mov    dh,0xbc
  411acb:	ret    0xef4b
  411ace:	add    DWORD PTR [eax+0x59],eax
  411ad1:	stc    
  411ad2:	call   0x9a37:0x881c28df
  411ad9:	xchg   edi,eax
  411ada:	fmulp  st(0),st
  411adc:	adc    bl,BYTE PTR [eax-0x73]
  411adf:	cmp    bl,BYTE PTR [edi-0x39]
  411ae2:	add    DWORD PTR [edx-0x1e],ecx
  411ae5:	fwait
  411ae6:	add    ebp,ebp
  411ae8:	loope  0x411ac0
  411aea:	push   cs
  411aeb:	pop    ebx
  411aec:	sub    edi,DWORD PTR [ebp+0x49]
  411aef:	les    esp,FWORD PTR [ecx]
  411af1:	mov    al,0xaa
  411af3:	addr16 xor al,0x2
  411af6:	mov    dl,0xc4
  411af8:	inc    esp
  411af9:	lds    ebp,FWORD PTR [esi+0x12]
  411afc:	sbb    al,0x40
  411afe:	xor    DWORD PTR [esi-0x5da8044b],eax
  411b04:	dec    ebp
  411b05:	add    al,0xe
  411b07:	aaa    
  411b08:	test   al,0x7c
  411b0a:	out    dx,eax
  411b0b:	pop    edi
  411b0c:	ja     0x411b60
  411b0e:	push   0x26
  411b10:	xchg   DWORD PTR [edi-0x1a97cc78],ebp
  411b16:	ss ins DWORD PTR es:[edi],dx
  411b18:	push   ebp
  411b19:	mov    eax,0xd9231444
  411b1e:	cdq    
  411b1f:	sbb    eax,0x6d6f81e1
  411b24:	sti    
  411b25:	retf   0xfbea
  411b28:	lock adc eax,0x52a385e2
  411b2e:	pop    edx
  411b2f:	or     al,0x4
  411b31:	ds and al,0xc9
  411b34:	mov    al,ds:0xff56d9e2
  411b39:	mov    bh,0x80
  411b3b:	ret    
  411b3c:	add    al,0xd3
  411b3e:	cmp    dl,0xf2
  411b41:	idiv   BYTE PTR [eiz*1+0x15a128f6]
  411b48:	adc    ah,0xd2
  411b4b:	(bad)  
  411b4c:	or     eax,0xfbcb600b
  411b51:	push   ecx
  411b52:	std    
  411b53:	sub    ecx,DWORD PTR ds:0x10cfdfab
  411b59:	and    eax,0xf3cb24b8
  411b5e:	lods   eax,DWORD PTR ds:[esi]
  411b5f:	pop    edi
  411b60:	ficom  DWORD PTR [esi-0x18]
  411b63:	scas   al,BYTE PTR es:[edi]
  411b64:	js     0x411b89
  411b66:	jl     0x6e2fe8eb
  411b6c:	jb     0x411b0b
  411b6e:	jecxz  0x411b7b
  411b70:	mov    esp,0xe9248dc9
  411b75:	cmp    DWORD PTR [eax-0x38a595e5],ebp
  411b7b:	and    eax,0xc21ef884
  411b80:	pop    eax
  411b81:	int3   
  411b82:	stos   DWORD PTR es:[edi],eax
  411b83:	ret    0x3d6
  411b86:	lahf   
  411b87:	sub    al,0xc5
  411b8a:	into   
  411b8b:	test   eax,0x8e48c1ed
  411b90:	es ja  0x411bd9
  411b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b94:	mov    edi,0x1b789af4
  411b99:	inc    eax
  411b9a:	retf   0x4a44
  411b9d:	retf   
  411b9e:	xchg   DWORD PTR [edi+edx*2-0x76],ebp
  411ba2:	nop
  411ba3:	retf   
  411ba4:	repz jbe 0x411bda
  411ba7:	xor    eax,0x797cff1
  411bac:	in     eax,0x62
  411bae:	addr16 xchg ebx,eax
  411bb0:	sar    DWORD PTR [edx-0x4c],cl
  411bb3:	mov    bh,0x38
  411bb5:	mov    eax,0xa66f1e9b
  411bba:	ret    0x9910
  411bbd:	cld    
  411bbe:	daa    
  411bbf:	sbb    al,0xb2
  411bc1:	test   DWORD PTR [ecx],ecx
  411bc3:	jecxz  0x411c43
  411bc5:	xor    BYTE PTR [edx],ch
  411bc7:	sti    
  411bc8:	or     esi,esi
  411bca:	xor    eax,0xc4e1e762
  411bcf:	xchg   edx,eax
  411bd0:	adc    eax,0xf20ce5b6
  411bd5:	pop    eax
  411bd6:	pop    es
  411bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bd8:	push   0x4c015393
  411bdd:	add    al,0xb7
  411bdf:	inc    eax
  411be0:	sub    eax,0x5938d77
  411be5:	int    0x6e
  411be7:	push   0x66
  411be9:	int    0x30
  411beb:	mov    esp,0x54971749
  411bf0:	inc    ebp
  411bf1:	mov    ebp,0x3e47a69c
  411bf6:	xchg   DWORD PTR [ebp-0x4e],eax
  411bf9:	je     0x411c3b
  411bfb:	cmp    DWORD PTR [ebx+0x27],ebp
  411bfe:	nop
  411bff:	sbb    BYTE PTR [eax],dl
  411c01:	cmc    
  411c02:	stos   DWORD PTR es:[edi],eax
  411c03:	jmp    0xa9a:0x61150f8
  411c0a:	fiadd  DWORD PTR [edx+0x3e]
  411c0d:	pop    esp
  411c0e:	cdq    
  411c0f:	repnz add al,BYTE PTR [ebp+0x33]
  411c13:	and    esp,DWORD PTR [eax-0x41]
  411c16:	loop   0x411c45
  411c18:	fld    TBYTE PTR [edx]
  411c1a:	sbb    bl,bl
  411c1c:	add    BYTE PTR [edx+0x6eddb812],al
  411c22:	push   ebp
  411c23:	(bad)  
  411c24:	sahf   
  411c25:	add    al,0x49
  411c27:	ja     0x411ca3
  411c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c2a:	call   0x7cca:0xd56b070e
  411c31:	xor    eax,0x8ae2429d
  411c36:	add    cl,0xb3
  411c39:	mov    bh,bh
  411c3b:	jae    0x411be3
  411c3d:	js     0x411c0d
  411c3f:	dec    edi
  411c40:	lds    ecx,FWORD PTR [ebp+0x2878262a]
  411c46:	loope  0x411c20
  411c48:	shr    BYTE PTR ds:0x21ce2c9c,cl
  411c4e:	sub    eax,0x90f5986
  411c53:	aas    
  411c54:	loope  0x411c40
  411c56:	pop    esp
  411c57:	xor    al,0x2b
  411c59:	inc    esi
  411c5a:	mov    al,0xa7
  411c5c:	outs   dx,BYTE PTR ds:[esi]
  411c5d:	ins    BYTE PTR es:[edi],dx
  411c5e:	aam    0xc6
  411c60:	lock aaa 
  411c62:	dec    ebp
  411c63:	xor    BYTE PTR ds:0x2662092f,al
  411c69:	sbb    ecx,DWORD PTR [ebp-0x4c]
  411c6c:	shr    DWORD PTR [edi],0x9d
  411c6f:	rcr    edi,0xfb
  411c72:	ret    
  411c73:	xchg   esp,eax
  411c74:	in     al,0x97
  411c76:	test   edi,esi
  411c78:	rol    DWORD PTR [edi],1
  411c7a:	std    
  411c7b:	push   cs
  411c7c:	cmp    DWORD PTR [esi+0x7fbf2d47],eax
  411c82:	in     eax,dx
  411c83:	pop    eax
  411c84:	lods   eax,DWORD PTR ds:[esi]
  411c85:	adc    DWORD PTR [eax+0x5bb31357],ebx
  411c8b:	ret    0xf93
  411c8e:	sub    eax,0x5589916c
  411c93:	popa   
  411c94:	mov    ax,0xfc8f
  411c98:	test   eax,0xe3e0c770
  411c9d:	or     edi,DWORD PTR [ebp-0x58]
  411ca0:	scas   eax,DWORD PTR es:[edi]
  411ca1:	rol    BYTE PTR [eax],0xf1
  411ca4:	dec    esi
  411ca5:	mov    ah,0x69
  411ca7:	xor    edx,ebx
  411ca9:	adc    DWORD PTR [ecx-0x6f],eax
  411cac:	pop    ecx
  411cad:	outs   dx,DWORD PTR ds:[esi]
  411cae:	push   0xde049fb4
  411cb3:	ins    DWORD PTR es:[edi],dx
  411cb4:	popa   
  411cb5:	jg     0x411cf7
  411cb7:	int3   
  411cb8:	xor    eax,0xcf3407f6
  411cbd:	mov    DWORD PTR [ebx+0x4e64ffae],eax
  411cc3:	mov    fs,WORD PTR [edx+eiz*1-0x4bd78548]
  411cca:	test   DWORD PTR [ebp-0x6ef5861f],ecx
  411cd0:	das    
  411cd1:	dec    edx
  411cd2:	retf   0xc2ff
  411cd5:	neg    DWORD PTR [ecx]
  411cd7:	inc    ecx
  411cd8:	in     al,dx
  411cd9:	mov    ecx,0x3bf6494b
  411cde:	lea    eax,[ecx+0x51]
  411ce1:	push   ebp
  411ce2:	neg    DWORD PTR [edx]
  411ce4:	shl    DWORD PTR [ebx+0x63],0x5
  411ce8:	jb     0x411ca3
  411cea:	fwait
  411ceb:	sar    cl,1
  411ced:	sub    eax,0x6ea9d7de
  411cf2:	loop   0x411d65
  411cf4:	pop    esp
  411cf5:	xor    dl,BYTE PTR [esi-0xb]
  411cf8:	mov    ds:0x9406334c,eax
  411cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cfe:	or     al,0xbf
  411d00:	cmp    esp,DWORD PTR [edx-0x23]
  411d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d04:	pop    ebx
  411d05:	cmp    ah,BYTE PTR [edi]
  411d07:	adc    bh,ch
  411d09:	fidiv  DWORD PTR [edi]
  411d0b:	mov    esp,0xbf03f0b0
  411d10:	jbe    0x411c9b
  411d12:	mov    BYTE PTR [ecx+edx*2-0x2300957a],bl
  411d19:	cmp    bl,ch
  411d1b:	inc    esi
  411d1c:	mov    eax,0xba11be25
  411d21:	(bad)  
  411d23:	fsubr  QWORD PTR es:[edx]
  411d26:	in     eax,0xed
  411d28:	ret    0x2c31
  411d2b:	mov    ds:0xac229ab9,al
  411d30:	lds    ebx,FWORD PTR [ebp+0x28]
  411d33:	fsincos 
  411d35:	jne    0x411d98
  411d37:	(bad)  
  411d38:	mov    ebp,0x7deef072
  411d3d:	dec    esi
  411d3e:	fimul  WORD PTR [esi-0x1a]
  411d41:	imul   esi,edx,0xffffffd4
  411d44:	test   al,0x34
  411d46:	push   0xf5905d5e
  411d4b:	push   0x58c559b2
  411d50:	mov    bl,0xd0
  411d52:	mov    ebp,0xb09773e1
  411d57:	mov    edx,0xf2f25744
  411d5c:	jp     0x411da5
  411d5e:	jo     0x411d7f
  411d60:	mul    DWORD PTR [eax-0x220512b3]
  411d66:	data16 aas 
  411d68:	mov    eax,0xe54d0e42
  411d6d:	xchg   esi,eax
  411d6e:	int    0xf7
  411d70:	cli    
  411d71:	fwait
  411d72:	inc    eax
  411d73:	jecxz  0x411d80
  411d75:	aam    0x89
  411d77:	enter  0x4f27,0x4
  411d7b:	xor    al,dh
  411d7d:	push   ecx
  411d7e:	daa    
  411d7f:	jb     0x411d9b
  411d81:	add    ch,BYTE PTR [ecx+0x6ea3246a]
  411d87:	dec    eax
  411d88:	mov    esp,0x7e62b71b
  411d8d:	pop    edi
  411d8e:	jno    0x411d94
  411d90:	popf   
  411d91:	les    esp,FWORD PTR [ecx+0x25]
  411d94:	js     0x411d1b
  411d96:	mov    edx,0x12c30d08
  411d9b:	xor    eax,0x22fda146
  411da0:	int3   
  411da1:	je     0x411e16
  411da3:	test   al,0xbf
  411da5:	mov    ds:0x98f17ae7,al
  411daa:	iret   
  411dab:	pop    ebx
  411dac:	dec    ebp
  411dad:	add    ebx,DWORD PTR [edi+0x7a]
  411db0:	adc    ecx,0x1e6ae8ba
  411db6:	xlat   BYTE PTR ds:[ebx]
  411db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db8:	mov    edx,0xd8fe3082
  411dbd:	xchg   edi,eax
  411dbe:	jae    0x411d7a
  411dc0:	mov    dh,0x98
  411dc2:	sub    DWORD PTR [edi-0xe],0x7e472d87
  411dc9:	repnz les eax,FWORD PTR [ecx-0x28]
  411dcd:	lods   eax,DWORD PTR ds:[esi]
  411dce:	sub    eax,0xe1b90c86
  411dd3:	xor    eax,0x3248ef26
  411dd8:	or     eax,0x798a72e
  411ddd:	test   BYTE PTR [edx+0x595b1277],dh
  411de3:	or     al,0xfc
  411de5:	add    dl,dl
  411de7:	mov    edx,DWORD PTR [ebp+0x72b8830b]
  411ded:	popa   
  411dee:	inc    ebx
  411def:	out    0xb3,eax
  411df1:	inc    ebp
  411df2:	or     BYTE PTR [ecx],al
  411df4:	stos   DWORD PTR es:[edi],eax
  411df5:	dec    ecx
  411df6:	jne    0x411e20
  411df8:	mov    bh,0xab
  411dfa:	shl    BYTE PTR [eax-0x4373f4b7],cl
  411e00:	(bad)  
  411e01:	push   ds
  411e02:	mov    dl,0x9a
  411e04:	fs pusha 
  411e06:	mov    eax,edx
  411e08:	sub    al,0x3a
  411e0a:	daa    
  411e0b:	push   ebx
  411e0c:	sub    eax,0x2e7729b7
  411e11:	mov    al,ds:0x7b5ce21a
  411e16:	icebp  
  411e17:	(bad)  
  411e18:	std    
  411e19:	and    eax,0x533f7c89
  411e1e:	sbb    dl,ch
  411e20:	ins    BYTE PTR es:[edi],dx
  411e21:	pop    eax
  411e22:	gs xor cl,ch
  411e25:	and    eax,DWORD PTR [ecx-0x62]
  411e28:	mov    ebp,0x9c9ac887
  411e2d:	jge    0x411dec
  411e2f:	jmp    0xccf6dd61
  411e34:	and    ecx,DWORD PTR [esi]
  411e36:	retf   
  411e37:	and    bl,BYTE PTR [esi+ebp*2+0x44]
  411e3b:	std    
  411e3c:	xor    bh,al
  411e3e:	xor    al,0xbf
  411e40:	mov    ebx,0x8dc2f079
  411e45:	fnsave [edx+0x51bbb51d]
  411e4b:	and    DWORD PTR [ecx],edi
  411e4d:	mul    ebx
  411e4f:	out    dx,eax
  411e50:	jno    0x411e15
  411e52:	sub    DWORD PTR [eax+0x51],esp
  411e55:	pop    edx
  411e56:	retf   0xb9b4
  411e59:	adc    DWORD PTR [ecx-0x5],ecx
  411e5c:	rol    BYTE PTR [ebx+0x1e],cl
  411e5f:	cs loop 0x411e20
  411e62:	lods   eax,DWORD PTR ds:[esi]
  411e63:	aaa    
  411e64:	stos   BYTE PTR es:[edi],al
  411e65:	(bad)  
  411e66:	repnz jecxz 0x411eac
  411e69:	lods   eax,DWORD PTR ds:[esi]
  411e6a:	fmul   DWORD PTR [edi-0x27d3f273]
  411e70:	jae    0x411e2f
  411e72:	jmp    0x803e:0xdf8cb577
  411e79:	jmp    0x1878:0xa1b7300d
  411e80:	pushf  
  411e81:	ja     0x411e53
  411e83:	xor    BYTE PTR [edx+0x5],al
  411e86:	pop    esi
  411e87:	sar    BYTE PTR [ecx+0x5],0xea
  411e8b:	cmp    al,0xac
  411e8d:	adc    edx,ebp
  411e8f:	test   DWORD PTR [edi+0x7efac9f4],esp
  411e95:	mov    edx,DWORD PTR es:[edx+0x43]
  411e99:	js     0x411e78
  411e9b:	mov    cl,0x61
  411e9d:	dec    ebx
  411e9e:	push   eax
  411e9f:	out    0x51,al
  411ea1:	push   0xc168ba8c
  411ea6:	das    
  411ea7:	aaa    
  411ea8:	sub    eax,0x1a512f3
  411ead:	enter  0x71f2,0x7e
  411eb1:	push   DWORD PTR [ecx-0x1d5b6d9f]
  411eb7:	pop    eax
  411eb8:	in     al,0x91
  411eba:	aas    
  411ebb:	fcmovnu st,st(7)
  411ebd:	repnz daa 
  411ebf:	and    dh,BYTE PTR [esi]
  411ec1:	fdivr  DWORD PTR [eax-0x36]
  411ec4:	imul   ecx,DWORD PTR [eax-0x56],0xffffffb7
  411ec8:	fs sub al,0x33
  411ecb:	xor    edi,DWORD PTR [ebp-0x1a]
  411ece:	push   cs
  411ecf:	sbb    eax,DWORD PTR [edx-0x37]
  411ed2:	fistp  WORD PTR [ebp-0x3d9bc6ce]
  411ed8:	sub    eax,0xe2fa213e
  411edd:	push   es
  411ede:	arpl   WORD PTR [ecx-0x16],sp
  411ee1:	xchg   ecx,eax
  411ee2:	add    edx,DWORD PTR [esi+0x7f]
  411ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ee6:	rcl    cl,0x7c
  411ee9:	add    al,0x7b
  411eeb:	dec    edx
  411eec:	mov    edi,DWORD PTR [esi+0x3b]
  411eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ef0:	xchg   DWORD PTR [ebx+0x39],eax
  411ef3:	push   edi
  411ef4:	call   0x4652:0x9dd8f77
  411efb:	push   ss
  411efc:	call   DWORD PTR [ebx]
  411efe:	xor    dh,BYTE PTR [edx+esi*4+0x49a77732]
  411f05:	jmp    0x2b81:0xc9fe9f71
  411f0c:	add    dh,BYTE PTR [ecx-0x62]
  411f0f:	xor    eax,0x79a93c49
  411f14:	pcmpgtd mm7,QWORD PTR [edi+0x79]
  411f18:	sub    edx,eax
  411f1a:	es ins BYTE PTR es:[edi],dx
  411f1c:	pushf  
  411f1d:	out    dx,al
  411f1e:	hlt    
  411f1f:	pop    ss
  411f20:	or     ebp,edx
  411f22:	inc    ebx
  411f23:	push   0xa9e1a8c5
  411f28:	out    dx,eax
  411f29:	scas   eax,DWORD PTR es:[edi]
  411f2a:	jo     0x411f0d
  411f2c:	lock adc eax,0x18bb9b27
  411f32:	ret    
  411f33:	ja     0x411f15
  411f35:	ficom  DWORD PTR [ebx]
  411f37:	xchg   ebp,eax
  411f38:	cdq    
  411f39:	aaa    
  411f3a:	push   ss
  411f3b:	inc    edx
  411f3c:	pop    edi
  411f3d:	xchg   BYTE PTR ds:0xecb49719,ah
  411f43:	mov    eax,ds:0x8d9e165e
  411f48:	and    BYTE PTR [ecx+0x4ccde335],ch
  411f4e:	sbb    bh,dl
  411f50:	sahf   
  411f51:	push   es
  411f52:	push   ecx
  411f53:	ja     0x411fa5
  411f55:	in     al,dx
  411f56:	mov    edx,cs
  411f58:	cmp    BYTE PTR [ecx],dh
  411f5a:	data16 mov bl,0x1c
  411f5d:	jmp    0xc2f2:0x1a2beef5
  411f64:	js     0x411fc2
  411f66:	and    ch,BYTE PTR [eax-0x148373ff]
  411f6c:	(bad)  [ecx+0x66]
  411f6f:	addr16 jno 0x411fc4
  411f72:	jl     0x411f45
  411f74:	jno    0x411f8c
  411f76:	jnp    0x411f87
  411f78:	mov    esp,0xd4ceceef
  411f7d:	adc    al,0xc6
  411f7f:	mov    eax,ds:0xc3d98fc8
  411f84:	sbb    DWORD PTR [eax-0x50],eax
  411f87:	scas   eax,DWORD PTR es:[edi]
  411f88:	push   edi
  411f89:	mov    esi,0x7032e558
  411f8e:	xchg   esp,eax
  411f8f:	stos   BYTE PTR es:[edi],al
  411f90:	out    dx,al
  411f91:	adc    DWORD PTR [esi+0x74cb9c81],0x4
  411f98:	push   es
  411f99:	cdq    
  411f9a:	mov    eax,ds:0x63dcddfb
  411f9f:	inc    ebp
  411fa0:	push   esi
  411fa1:	add    al,0x16
  411fa3:	or     cl,0xec
  411fa6:	add    ch,BYTE PTR [ebx]
  411fa8:	lods   al,BYTE PTR ds:[esi]
  411fa9:	add    ch,BYTE PTR [esi-0x1c42874e]
  411faf:	sbb    edx,DWORD PTR [ecx+0x33]
  411fb2:	data16 aad 0x81
  411fb5:	into   
  411fb6:	scas   eax,DWORD PTR es:[edi]
  411fb7:	jl     0x411fdc
  411fb9:	pop    es
  411fba:	fldcw  WORD PTR [eax+0x7]
  411fbd:	js     0x411f7f
  411fbf:	push   ds
  411fc0:	pop    es
  411fc1:	jle    0x41203d
  411fc3:	sti    
  411fc4:	push   cs
  411fc5:	cdq    
  411fc6:	mov    ch,0xfa
  411fc8:	mov    eax,0xcdc1e230
  411fcd:	ds push ds
  411fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fd0:	fiadd  DWORD PTR [edi]
  411fd2:	adc    al,0x73
  411fd4:	xlat   BYTE PTR ds:[ebx]
  411fd5:	sbb    al,0x29
  411fd7:	dec    edx
  411fd8:	push   edi
  411fd9:	in     eax,0xe1
  411fdb:	hlt    
  411fdc:	add    ecx,esp
  411fde:	(bad)  
  411fdf:	fidiv  WORD PTR [esi]
  411fe1:	sar    esp,1
  411fe3:	scas   eax,DWORD PTR es:[edi]
  411fe4:	jl     0x411fe8
  411fe6:	loope  0x411f9a
  411fe8:	fldcw  WORD PTR [ebp-0x6e4e0022]
  411fee:	sbb    eax,0x74c46ac2
  411ff3:	xchg   edx,eax
  411ff4:	pop    esi
  411ff5:	jo     0x411fd1
  411ff7:	sahf   
  411ff8:	retf   0x6d0f
  411ffb:	and    esp,DWORD PTR ds:0x26e2539b
  412001:	repz mov dl,0x4d
  412004:	sti    
  412005:	inc    edi
  412006:	add    BYTE PTR [eax],0x92
  412009:	push   ss
  41200a:	inc    esi
  41200b:	and    cl,BYTE PTR [esi-0x26f107d4]
  412011:	call   0x19a99b4
  412016:	xchg   si,ax
  412018:	int3   
  412019:	jmp    0x73597369
  41201e:	ror    BYTE PTR [edx-0x22],1
  412021:	dec    ecx
  412022:	push   ebp
  412023:	lahf   
  412024:	cdq    
  412025:	mov    edx,edi
  412027:	add    DWORD PTR [ecx],esi
  412029:	xchg   BYTE PTR [ecx+0x33],ch
  41202c:	jmp    0x5590:0xcf9b83b6
  412033:	fidivr WORD PTR [edi]
  412035:	(bad)  
  412036:	add    dh,BYTE PTR es:[ecx+0x5e93d3b8]
  41203d:	or     BYTE PTR [ebp-0x71d13d08],0x92
  412044:	test   eax,0x7067b3fa
  412049:	test   al,0x92
  41204b:	addr16 mov ebp,0xd862572b
  412051:	aas    
  412052:	adc    BYTE PTR [esi],dl
  412054:	xlat   BYTE PTR ds:[ebx]
  412055:	in     al,dx
  412056:	jns    0x412084
  412058:	or     BYTE PTR [ebx-0x77],cl
  41205b:	test   al,0x17
  41205d:	fld    QWORD PTR ds:0xd1c406ab
  412063:	cmp    BYTE PTR [eax+eiz*1-0x27],0xee
  412068:	or     eax,0x76209a52
  41206d:	xchg   ebp,eax
  41206e:	repz mov al,ds:0x31469902
  412074:	cwde   
  412075:	lea    ebx,[edi]
  412077:	mov    al,ds:0x869c6b82
  41207c:	lods   eax,DWORD PTR ds:[esi]
  41207d:	pop    ebp
  41207e:	stos   BYTE PTR es:[edi],al
  41207f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412080:	adc    dh,BYTE PTR [ecx-0x15affb47]
  412086:	dec    edi
  412087:	add    al,0x9e
  412089:	inc    esp
  41208a:	in     eax,0x39
  41208c:	aam    0x10
  41208e:	outs   dx,BYTE PTR ds:[esi]
  41208f:	lahf   
  412090:	xchg   edi,eax
  412091:	cmp    DWORD PTR [ecx+0x4ed4f725],eax
  412097:	ins    DWORD PTR es:[edi],dx
  412098:	ror    BYTE PTR [ebx],0x23
  41209b:	(bad)  
  41209d:	xchg   esp,eax
  41209e:	arpl   dx,dx
  4120a0:	mov    ah,0xcb
  4120a2:	xchg   esi,eax
  4120a3:	jl     0x4120fd
  4120a5:	inc    esi
  4120a6:	push   ebx
  4120a7:	dec    ebp
  4120a8:	push   cs
  4120a9:	mov    WORD PTR [ecx],cs
  4120ab:	xchg   esi,eax
  4120ac:	out    0xa1,al
  4120ae:	jmp    0x68803295
  4120b3:	adc    bl,BYTE PTR [edx-0x6eb68e4d]
  4120b9:	xor    eax,0xb7787ddb
  4120be:	inc    ebx
  4120bf:	push   cs
  4120c0:	push   esi
  4120c1:	std    
  4120c2:	jb     0x412130
  4120c4:	stos   DWORD PTR es:[edi],eax
  4120c5:	repnz push 0xffffffeb
  4120c8:	fwait
  4120c9:	push   ebx
  4120ca:	jl     0x412078
  4120cc:	mov    eax,ds:0xd27fcf27
  4120d1:	sub    bh,bl
  4120d3:	cdq    
  4120d4:	fwait
  4120d5:	sahf   
  4120d6:	add    DWORD PTR [esi],esi
  4120d8:	push   edx
  4120d9:	xchg   ecx,eax
  4120da:	push   0x9516f3e7
  4120df:	test   BYTE PTR [ecx+0x3710179],dl
  4120e5:	(bad)  
  4120e6:	test   al,0xfa
  4120e8:	adc    eax,eax
  4120ea:	les    ebp,FWORD PTR [ebx-0x6c]
  4120ed:	sbb    al,0x26
  4120ef:	(bad)  
  4120f0:	pop    esp
  4120f1:	call   0xf14:0x39a05426
  4120f8:	bound  edx,QWORD PTR [edx-0x61]
  4120fb:	hlt    
  4120fc:	jle    0x41217c
  4120fe:	add    al,0x27
  412100:	dec    edx
  412101:	stos   DWORD PTR es:[edi],eax
  412102:	popa   
  412103:	add    eax,0x9ca7ff53
  412108:	imul   DWORD PTR [ebx-0x1b44a031]
  41210e:	rcl    dh,cl
  412110:	mov    dl,0xa8
  412112:	cwde   
  412113:	mov    esp,DWORD PTR [esi+0x7f]
  412116:	aaa    
  412117:	mov    ch,0x7c
  412119:	sub    al,bh
  41211b:	pop    es
  41211c:	mov    BYTE PTR [edx+0x30bc486f],ch
  412122:	mov    ebp,0xeeaf01bc
  412127:	jge    0x4120c3
  412129:	sahf   
  41212a:	dec    eax
  41212b:	call   0x99b9:0x4cb1709c
  412132:	fwait
  412133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412134:	int    0x39
  412136:	add    eax,0x39834a0b
  41213b:	repz add edi,DWORD PTR [esi]
  41213e:	addr16 jns 0x41212d
  412141:	(bad)  
  412142:	es push cs
  412144:	mov    eax,gs
  412146:	(bad)
  412149:	sar    DWORD PTR [ecx+0x3],1
  41214c:	lahf   
  41214d:	pop    edx
  41214e:	mov    dl,cl
  412150:	arpl   WORD PTR [edi+0x5c59a994],ax
  412156:	inc    ebx
  412157:	mov    ebp,0xe02f0a47
  41215c:	xchg   ebx,eax
  41215d:	(bad)  
  41215e:	cs (bad) 
  412160:	pop    ebp
  412161:	mov    bh,0x87
  412163:	fneni(8087 only) 
  412165:	leave  
  412166:	jo     0x412195
  412168:	pop    ebx
  412169:	and    DWORD PTR [edx],ebp
  41216b:	mov    edx,0x547417d
  412170:	iret   
  412171:	jae    0x4121bf
  412173:	retf   0xedb9
  412176:	mov    ecx,DWORD PTR [edi]
  412178:	xor    eax,0x8e1436fe
  41217d:	jmp    FWORD PTR ds:0x9b9f4be2
  412183:	dec    eax
  412184:	clc    
  412185:	(bad)  
  412187:	sbb    BYTE PTR [esi-0x1f],bh
  41218a:	daa    
  41218b:	and    ch,bl
  41218d:	hlt    
  41218e:	add    edi,DWORD PTR [ecx+ebp*4]
  412191:	sub    BYTE PTR [eax-0x62],bh
  412194:	mov    eax,ds:0xd1dd01f1
  412199:	push   ds
  41219a:	jae    0x412189
  41219c:	push   esi
  41219d:	jae    0x412140
  41219f:	sub    DWORD PTR [ebx+eax*1-0x252ec1fc],0x8790ff6d
  4121aa:	mov    ebp,ebx
  4121ac:	mov    ds:0x50e93ea6,eax
  4121b1:	adc    ah,cl
  4121b3:	popa   
  4121b4:	sti    
  4121b5:	fxch   st(1)
  4121b7:	and    DWORD PTR [eax+0x10],ecx
  4121ba:	jne    0x412151
  4121bc:	shr    BYTE PTR [edx],1
  4121be:	and    BYTE PTR [esi+ebx*1-0x1b],0xb7
  4121c3:	xchg   edi,eax
  4121c4:	jge    0x41219f
  4121c6:	call   0x6d25:0xb14107cc
  4121cd:	aad    0x69
  4121cf:	pminub mm5,QWORD PTR [ebp*2-0x1b4e3f6e]
  4121d7:	lea    eax,[ebx+edx*1-0x2abc5b68]
  4121de:	jge    0x41216b
  4121e0:	jle    0x41218e
  4121e2:	leave  
  4121e3:	sahf   
  4121e4:	adc    DWORD PTR [ebp+0x70],eax
  4121e7:	and    ebp,esp
  4121e9:	inc    esp
  4121ea:	mov    edx,ebx
  4121ec:	pop    edx
  4121ed:	retf   0xd4b4
  4121f0:	jbe    0x4121a2
  4121f2:	and    cl,ah
  4121f4:	addr16 fwait
  4121f6:	push   ebp
  4121f7:	out    0x31,eax
  4121f9:	adc    esp,edi
  4121fb:	std    
  4121fc:	pop    ss
  4121fd:	popf   
  4121fe:	mov    dl,0x80
  412200:	stos   DWORD PTR es:[edi],eax
  412201:	cmp    eax,0x77c9aa0
  412206:	push   sp
  412208:	in     eax,0x27
  41220a:	pusha  
  41220b:	adc    eax,0x87e40368
  412210:	outs   dx,DWORD PTR ds:[si]
  412212:	add    cl,BYTE PTR [edx]
  412214:	push   0x92ead1bb
  412219:	adc    DWORD PTR [edx+0x67],ebx
  41221c:	sub    DWORD PTR [ebp-0x1f97ec04],edi
  412222:	mov    eax,0x947b49c3
  412227:	std    
  412228:	in     eax,dx
  412229:	inc    ebp
  41222a:	loop   0x412252
  41222c:	or     edi,DWORD PTR [ebx+edi*1-0x6307d35e]
  412233:	jmp    0x68cca9de
  412238:	addr16 nop
  41223a:	adc    edi,eax
  41223c:	dec    ebp
  41223d:	adc    eax,0x1e309d27
  412242:	popa   
  412243:	aam    0xde
  412245:	inc    edx
  412246:	jb     0x412298
  412248:	clc    
  412249:	outs   dx,DWORD PTR ds:[esi]
  41224a:	test   DWORD PTR [eax],ebx
  41224c:	paddq  mm6,QWORD PTR [ebx+0x46]
  412250:	push   ebx
  412251:	sub    ebx,esp
  412253:	push   ecx
  412254:	cmp    edi,ebx
  412256:	call   FWORD PTR [esi]
  412258:	iret   
  412259:	mov    bl,0xef
  41225b:	dec    ecx
  41225c:	xor    DWORD PTR [esp+esi*8-0x61],eax
  412260:	das    
  412261:	fisttp DWORD PTR [ecx+ecx*8]
  412264:	ss ins BYTE PTR es:[edi],dx
  412266:	jmp    0x9f5d2c07
  41226b:	fisttp DWORD PTR [ebx+ebx*8+0x3688985e]
  412272:	mov    edx,0xb4b6c861
  412277:	ins    BYTE PTR es:[edi],dx
  412278:	mov    ecx,0xc255ca1d
  41227d:	xor    DWORD PTR [eax-0x11],ecx
  412280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412281:	xchg   esp,eax
  412282:	jp     0x4122e4
  412284:	test   DWORD PTR [edi],esp
  412286:	mov    cl,0x5c
  412288:	or     esp,0x830f0962
  41228e:	xchg   DWORD PTR ds:0x44d0904e,edx
  412294:	sbb    edi,DWORD PTR [ecx+0x30]
  412297:	out    dx,al
  412298:	mov    edx,DWORD PTR [ebp-0x70421fb9]
  41229e:	mov    bl,0x7d
  4122a0:	lahf   
  4122a1:	and    DWORD PTR [eax+0x19578d59],esp
  4122a7:	push   ss
  4122a8:	sahf   
  4122a9:	test   al,0x79
  4122ab:	or     al,al
  4122ad:	pop    edi
  4122ae:	jle    0x412264
  4122b0:	(bad)  
  4122b1:	in     al,dx
  4122b2:	jmp    0x4122db
  4122b4:	inc    esp
  4122b5:	cdq    
  4122b6:	push   0x7065c604
  4122bb:	mov    al,ds:0x76d866a7
  4122c0:	stos   DWORD PTR es:[edi],eax
  4122c1:	sub    DWORD PTR [eax-0x38],ebx
  4122c4:	int3   
  4122c5:	jae    0x4122a9
  4122c7:	xchg   edx,eax
  4122c8:	cmp    bh,BYTE PTR [esi-0x71]
  4122cb:	scas   al,BYTE PTR es:[edi]
  4122cc:	cmp    BYTE PTR [edx],bl
  4122ce:	ss popa 
  4122d0:	add    BYTE PTR [edi+0x79],ah
  4122d3:	daa    
  4122d4:	adc    eax,0x6b712e9c
  4122d9:	sub    BYTE PTR [edi-0x60f9f734],ch
  4122df:	mov    ss,WORD PTR gs:[ecx-0xe6790e1]
  4122e6:	fisub  WORD PTR [ecx-0x24]
  4122e9:	lods   al,BYTE PTR ds:[esi]
  4122ea:	inc    ebx
  4122eb:	sbb    BYTE PTR [ebx-0x35],dh
  4122ee:	ret    
  4122ef:	sub    eax,DWORD PTR [ecx+0xa]
  4122f2:	and    ebx,ebx
  4122f4:	popf   
  4122f5:	(bad)  
  4122f6:	rcl    DWORD PTR [ebp+edi*2-0x4186da1b],1
  4122fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122fe:	ror    BYTE PTR [ebp+0x37],1
  412301:	mov    ?,WORD PTR [esi+esi*4-0x72]
  412305:	pop    eax
  412306:	push   ebx
  412307:	xchg   BYTE PTR [edx-0x7acfbab3],ch
  41230d:	and    al,0x4e
  41230f:	popa   
  412310:	test   DWORD PTR [edx+0x18a49dba],edi
  412316:	cmp    BYTE PTR [ebx],0xc0
  412319:	adc    eax,0x77607e51
  41231e:	out    dx,al
  41231f:	xor    DWORD PTR [ebp+0x42],edx
  412322:	outs   dx,DWORD PTR ds:[esi]
  412323:	jns    0x41232b
  412325:	hlt    
  412326:	ret    
  412327:	mov    eax,0xa03accec
  41232c:	xor    DWORD PTR [edx+0x11],ecx
  41232f:	push   cs
  412330:	jg     0x4122b4
  412332:	aas    
  412333:	inc    esp
  412334:	(bad)  
  412335:	fs push cs
  412337:	in     eax,dx
  412338:	pop    es
  412339:	outs   dx,DWORD PTR ds:[esi]
  41233a:	mov    BYTE PTR [ebx+esi*2-0x3e],bh
  41233e:	or     dh,BYTE PTR [edi+0x35a1c3fe]
  412344:	bswap  ebp
  412346:	ror    DWORD PTR [ecx-0x21],cl
  412349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41234a:	ds add eax,0xaf8cc90a
  412350:	cwde   
  412351:	cmp    al,0xa7
  412353:	fst    QWORD PTR [eiz*8+0x4a6bedf7]
  41235a:	xor    ah,cl
  41235c:	pop    eax
  41235d:	rcr    eax,0x8a
  412360:	lods   al,BYTE PTR ds:[esi]
  412361:	inc    edx
  412362:	inc    edx
  412363:	cwde   
  412364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412365:	cmp    dh,BYTE PTR [eax+0x19837424]
  41236b:	pop    eax
  41236c:	mov    ebx,0x40a20706
  412371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412373:	push   ds
  412374:	xor    eax,0xa90f2c6b
  412379:	(bad)  
  41237a:	stc    
  41237b:	not    dl
  41237d:	je     0x4123f7
  41237f:	dec    esi
  412380:	pop    esi
  412381:	out    0xa9,al
  412383:	loopne 0x412332
  412385:	imul   ebx,DWORD PTR gs:[ebp+0x67],0x30
  41238a:	dec    ebp
  41238b:	fs enter 0x2c74,0x18
  412390:	sbb    al,0x3d
  412392:	mov    ecx,0x798c4cad
  412397:	scas   eax,DWORD PTR es:[edi]
  412398:	add    ecx,DWORD PTR [ebx+0x18]
  41239b:	pop    ebp
  41239c:	retf   
  41239d:	xlat   BYTE PTR ds:[ebx]
  41239e:	mov    eax,ds:0x8f68b3a0
  4123a3:	sbb    BYTE PTR [edx+0x48],ah
  4123a6:	jg     0x4123ed
  4123a8:	loope  0x41240e
  4123aa:	(bad)  
  4123ab:	cli    
  4123ac:	out    0x8c,eax
  4123ae:	mov    esi,0xfb370269
  4123b3:	ror    ah,cl
  4123b5:	mov    BYTE PTR [esi],cl
  4123b7:	repnz leave 
  4123b9:	adc    al,0x64
  4123bb:	js     0x4123fb
  4123bd:	lea    esi,ds:0x8e685bb3
  4123c3:	(bad)
  4123c7:	setb   dl
  4123ca:	das    
  4123cb:	mov    ebx,DWORD PTR [esi+0x4c]
  4123ce:	int3   
  4123cf:	or     eax,DWORD PTR [ebp-0x842bd66]
  4123d5:	add    DWORD PTR [ebx-0x1d0722b5],0xd
  4123dc:	in     eax,0xd3
  4123de:	sahf   
  4123df:	test   al,0xf6
  4123e1:	sar    DWORD PTR [eax],0x4b
  4123e4:	popf   
  4123e5:	inc    ebp
  4123e6:	mov    bh,0x61
  4123e8:	pushf  
  4123e9:	mov    ch,0x86
  4123eb:	fbstp  TBYTE PTR [edi-0x5c50bdf6]
  4123f1:	inc    ebx
  4123f2:	xchg   esp,eax
  4123f3:	sub    DWORD PTR [ebp-0x76bcdf54],0x25
  4123fa:	mov    ebx,edx
  4123fc:	jle    0x412422
  4123fe:	mov    esp,0x434cf8e0
  412403:	sbb    eax,esi
  412405:	rol    BYTE PTR [ebp-0x7f],cl
  412408:	jle    0x4123df
  41240a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41240b:	je     0x412480
  41240d:	jl     0x412449
  41240f:	jo     0x4123e9
  412411:	test   eax,0xf4c406a4
  412416:	pop    esi
  412417:	dec    esp
  412418:	and    al,0xa7
  41241a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41241b:	fdiv   QWORD PTR [ecx-0xe]
  41241e:	mov    ss,ecx
  412420:	add    cl,dl
  412422:	push   edi
  412423:	ror    DWORD PTR [edi+ebx*8],cl
  412426:	cs inc ebp
  412428:	bound  ecx,QWORD PTR [edi]
  41242a:	lock pop es
  41242c:	cmp    ebx,DWORD PTR [edi]
  41242e:	mov    ah,0x0
  412430:	sbb    DWORD PTR ds:0xeb278527,esi
  412436:	(bad)  
  412437:	outs   dx,BYTE PTR ds:[esi]
  412438:	inc    edi
  412439:	ficomp DWORD PTR [eax+esi*2]
  41243c:	and    BYTE PTR [edi],bh
  41243e:	imul   esi,DWORD PTR [eax],0xffffffb4
  412441:	scas   al,BYTE PTR es:[edi]
  412442:	test   al,0xd0
  412444:	add    BYTE PTR [edx],ah
  412446:	inc    ebp
  412447:	je     0x4124aa
  412449:	sbb    DWORD PTR [ebx+esi*8-0x68546e6e],ebp
  412450:	data16 jae 0x412452
  412453:	pop    edi
  412454:	popa   
  412455:	jmp    0x60f3:0xb068cdbc
  41245c:	inc    sp
  41245e:	xlat   BYTE PTR ds:[ebx]
  41245f:	shl    DWORD PTR [ecx+0x36400044],0xb0
  412466:	outs   dx,BYTE PTR ds:[esi]
  412467:	icebp  
  412468:	jbe    0x412468
  41246a:	inc    edx
  41246b:	(bad)  
  41246c:	jg     0x4124ad
  41246e:	sub    al,0x22
  412470:	xchg   edi,eax
  412471:	das    
  412472:	xchg   esi,eax
  412473:	aad    0x73
  412475:	or     al,0x16
  412477:	in     eax,dx
  412478:	xchg   esp,eax
  412479:	retf   0xa48d
  41247c:	jo     0x412448
  41247e:	pusha  
  41247f:	add    al,dl
  412481:	pop    ecx
  412482:	lock mov al,0xc8
  412485:	aas    
  412486:	imul   esp,DWORD PTR [ebx-0x55],0x74
  41248a:	aad    0xe2
  41248c:	push   esp
  41248d:	sbb    al,0xd4
  41248f:	in     al,dx
  412490:	fdivr  DWORD PTR [ecx-0x5b87c08f]
  412496:	arpl   WORD PTR [ebx-0x6accd3d2],bx
  41249c:	jmp    0x4124b9
  41249e:	add    DWORD PTR [ebx],esp
  4124a0:	add    edx,DWORD PTR [edi-0x75a9952f]
  4124a6:	arpl   dx,bp
  4124a8:	xchg   BYTE PTR [esi],bl
  4124aa:	out    dx,eax
  4124ab:	pushf  
  4124ac:	cld    
  4124ad:	outs   dx,BYTE PTR ds:[esi]
  4124ae:	mov    al,ds:0x120600a3
  4124b3:	es pop ds
  4124b5:	hlt    
  4124b6:	fiadd  DWORD PTR [edx-0x33701fc4]
  4124bc:	pop    eax
  4124bd:	adc    ecx,esi
  4124bf:	fdivr  DWORD PTR [ebx+edx*2-0x60891b58]
  4124c6:	sbb    ah,al
  4124c8:	inc    ebx
  4124c9:	mov    DWORD PTR [eax],0x184b4a1a
  4124cf:	and    DWORD PTR [esi+esi*8],eax
  4124d2:	arpl   WORD PTR [edi+0x30],cx
  4124d5:	jne    0x412550
  4124d7:	mov    ebx,DWORD PTR [ebp-0x1d]
  4124da:	iret   
  4124db:	mov    edi,0xb477ee5c
  4124e0:	rcr    BYTE PTR [ecx+0x13],0xe1
  4124e4:	adc    al,0xc3
  4124e6:	inc    edx
  4124e7:	out    dx,al
  4124e8:	jle    0x4124e4
  4124ea:	mov    dl,0x19
  4124ec:	push   ss
  4124ed:	push   edi
  4124ee:	or     al,0x74
  4124f0:	sbb    eax,0x52c4fae
  4124f5:	hlt    
  4124f6:	cmp    DWORD PTR [edx],ebp
  4124f8:	pushf  
  4124f9:	inc    ebx
  4124fa:	mov    bh,0x7b
  4124fc:	mov    esp,0xb856870d
  412501:	xchg   ecx,eax
  412502:	sbb    cl,BYTE PTR [esp+ecx*1-0x5ac4a642]
  412509:	outs   dx,BYTE PTR ds:[esi]
  41250a:	in     al,0xe4
  41250c:	pop    eax
  41250d:	retf   
  41250e:	inc    edi
  41250f:	mov    dh,0xf0
  412511:	lea    ebp,[ebp+0x70]
  412514:	xor    cl,BYTE PTR [ebx-0x2f]
  412517:	or     eax,0x567c3efe
  41251c:	fisttp QWORD PTR es:[ecx]
  41251f:	pusha  
  412520:	loopne 0x4124f3
  412522:	sub    DWORD PTR [edi+0xca0d84],0x17b7c174
  41252c:	cli    
  41252d:	jb     0x41251b
  41252f:	imul   edx,esp,0xc68bd9a7
  412535:	(bad)  
  412536:	rcl    BYTE PTR [eax],0x47
  412539:	push   edx
  41253a:	jnp    0x4124da
  41253c:	add    DWORD PTR [ebp+0x3c42ded7],ecx
  412542:	hlt    
  412543:	je     0x4125a7
  412545:	mov    edi,0xd3568939
  41254a:	nop
  41254b:	xlat   BYTE PTR ds:[ebx]
  41254c:	test   al,0x0
  41254e:	retf   0x8fac
  412551:	jge    0x4124dc
  412553:	aam    0x26
  412555:	lods   eax,DWORD PTR ds:[esi]
  412556:	jns    0x4124e0
  412558:	adc    bh,BYTE PTR [edx]
  41255a:	pop    esp
  41255b:	pop    ebp
  41255c:	mov    ebp,0xf7c3463f
  412561:	adc    eax,0x7eca5627
  412566:	rcl    DWORD PTR [edi+eiz*4-0x12],0xa
  41256b:	xchg   edx,eax
  41256c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41256d:	or     eax,0x1fcc7a55
  412572:	xor    DWORD PTR [ebp-0x7a],0x3c
  412576:	jle    0x412597
  412578:	push   cs
  412579:	dec    ebp
  41257a:	test   eax,0x7e1d1159
  41257f:	sti    
  412580:	mov    DWORD PTR [esi+0x4953a751],edx
  412586:	addr16 dec esp
  412588:	int3   
  412589:	pushf  
  41258a:	inc    edi
  41258b:	and    eax,0x1677d683
  412590:	sub    al,0x36
  412592:	mov    ds:0xf72aa840,eax
  412597:	and    al,0x58
  412599:	and    ch,BYTE PTR [eax]
  41259b:	pop    ss
  41259c:	sti    
  41259d:	dec    eax
  41259e:	mov    eax,ebp
  4125a0:	addr16 data16 cmp al,0x5c
  4125a4:	aad    0x8d
  4125a6:	outs   dx,DWORD PTR ds:[esi]
  4125a7:	adc    DWORD PTR [eax+0x3e4f4b53],esp
  4125ad:	xchg   ecx,eax
  4125ae:	jl     0x4125a2
  4125b0:	fwait
  4125b1:	push   0x78a32477
  4125b6:	es (bad) 
  4125b8:	fild   QWORD PTR [ebp-0x2d1f1ce0]
  4125be:	pop    ecx
  4125bf:	dec    ecx
  4125c0:	div    DWORD PTR [edi-0x740e69a8]
  4125c6:	int3   
  4125c7:	fistp  QWORD PTR ds:0x7a582c0f
  4125cd:	xchg   BYTE PTR [eax*4-0x699736d0],ah
  4125d4:	pop    ds
  4125d5:	jne    0x412607
  4125d7:	sar    dl,cl
  4125d9:	(bad)  
  4125da:	sar    ch,0x4e
  4125dd:	inc    ecx
  4125de:	mov    edx,0xd98776d6
  4125e3:	sub    eax,0x6f84e0f2
  4125e8:	fsub   DWORD PTR [esp+edx*8-0x736f1d76]
  4125ef:	(bad)  
  4125f1:	pop    edx
  4125f2:	stc    
  4125f3:	fnstcw WORD PTR [edx+0x50]
  4125f6:	mov    dl,0x23
  4125f8:	xor    dl,BYTE PTR ds:0xf54ed603
  4125fe:	xchg   ecx,eax
  4125ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412600:	adc    al,0xe6
  412602:	pop    ss
  412603:	xor    BYTE PTR [esi-0x4327f091],0x31
  41260a:	sbb    DWORD PTR [esi-0x46],eax
  41260d:	cmp    esi,ecx
  41260f:	push   edx
  412610:	xchg   esp,eax
  412611:	and    al,0xf1
  412613:	cmp    eax,0x215eed75
  412618:	dec    ecx
  412619:	icebp  
  41261a:	loopne 0x4125e1
  41261c:	pop    edx
  41261d:	xchg   ebx,eax
  41261e:	sbb    ah,BYTE PTR [ebx]
  412620:	cmp    BYTE PTR [ebp+ebx*1-0x4a041c89],0x5d
  412628:	repz jle 0x4125df
  41262b:	int3   
  41262c:	data16 xchg BYTE PTR [edi+0x87af7f2],bl
  412633:	out    0x3a,al
  412635:	outs   dx,DWORD PTR ds:[esi]
  412636:	data16 mov dh,0x19
  412639:	sbb    DWORD PTR [ecx+0x5b],ebx
  41263c:	cmp    DWORD PTR [edi-0x25c6cd2f],ebp
  412642:	in     eax,dx
  412643:	cld    
  412644:	leave  
  412645:	jp     0x412656
  412647:	shr    dl,cl
  412649:	xor    al,0x60
  41264c:	or     al,0x25
  41264e:	sub    ebp,ebx
  412650:	into   
  412651:	pushf  
  412652:	mov    sp,ds
  412655:	pop    ebx
  412656:	cs mov bh,0xee
  412659:	and    ecx,DWORD PTR [eax+0x56]
  41265c:	pop    ss
  41265d:	and    ebx,ebp
  41265f:	fcom   st(5)
  412661:	dec    edx
  412662:	(bad)  
  412664:	lods   al,BYTE PTR ds:[esi]
  412665:	call   DWORD PTR [eax-0x6fbc263e]
  41266b:	jbe    0x41263f
  41266d:	fist   WORD PTR [edx]
  41266f:	jne    0x4126a6
  412671:	fsubr  QWORD PTR [eax+0x7ad57ccf]
  412677:	add    DWORD PTR [ebx+edi*4],eax
  41267a:	fsubr  DWORD PTR [ecx]
  41267c:	push   cs
  41267d:	jge    0x4126d7
  41267f:	jg     0x41268b
  412681:	jl     0x412634
  412683:	pop    esp
  412684:	sbb    cl,dl
  412686:	cld    
  412687:	cli    
  412688:	mov    BYTE PTR [eax-0x4799d1de],dh
  41268e:	cld    
  41268f:	jno    0x41263f
  412691:	clc    
  412692:	outs   dx,DWORD PTR ds:[esi]
  412693:	shl    BYTE PTR [ebx],0xa1
  412696:	leave  
  412697:	stc    
  412698:	test   eax,0x1710f9e2
  41269d:	xchg   esi,eax
  41269e:	fdiv   DWORD PTR [esi+ebx*8]
  4126a1:	or     ch,bh
  4126a3:	mov    esp,0x58c740e0
  4126a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126a9:	sti    
  4126aa:	sti    
  4126ab:	pop    ds
  4126ac:	jp     0x412638
  4126ae:	push   ecx
  4126af:	out    dx,eax
  4126b0:	ds ja  0x4126c3
  4126b3:	jns    0x4126b3
  4126b5:	push   esp
  4126b6:	cmp    esp,DWORD PTR [edx]
  4126b8:	repnz mov al,0x74
  4126bb:	dec    ebx
  4126bc:	popf   
  4126bd:	int3   
  4126be:	shl    BYTE PTR [edx],1
  4126c0:	pop    edi
  4126c1:	pop    ds
  4126c2:	or     DWORD PTR ds:0x3abbe24b,esi
  4126c8:	cmc    
  4126c9:	fbstp  TBYTE PTR [esi]
  4126cb:	ins    BYTE PTR es:[edi],dx
  4126cc:	push   edx
  4126cd:	fst    DWORD PTR [eax]
  4126cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d0:	mov    DWORD PTR [ebp+0xd],esi
  4126d3:	sub    eax,0x242a5bfc
  4126d8:	mov    ah,0x3
  4126da:	into   
  4126db:	cmp    BYTE PTR [ecx],al
  4126dd:	loop   0x412686
  4126df:	nop
  4126e0:	add    edi,DWORD PTR [ebp+edx*8-0x7d]
  4126e4:	mov    esi,0x851889de
  4126e9:	mov    cs,WORD PTR [edx]
  4126eb:	mov    eax,ds:0x4ba4ac77
  4126f0:	mov    cl,0xc5
  4126f2:	stc    
  4126f3:	mov    bl,0x30
  4126f5:	mov    ah,cl
  4126f7:	pop    esi
  4126f8:	sbb    eax,0x39e1d5ca
  4126fd:	rol    ah,1
  4126ff:	sub    esp,DWORD PTR [ecx]
  412701:	cmp    edx,ecx
  412703:	add    cl,BYTE PTR ds:0x63ce8e22
  412709:	sbb    ebx,DWORD PTR [ebp+ebx*2-0x62]
  41270d:	push   cs
  41270e:	lahf   
  41270f:	lahf   
  412710:	push   ecx
  412711:	push   ecx
  412712:	cwde   
  412713:	add    eax,0x7bf35a25
  412718:	test   al,0xbf
  41271a:	cmp    eax,0xa9328a98
  41271f:	mov    eax,ds:0x30c195aa
  412724:	xchg   edi,eax
  412725:	ds pop ds
  412727:	call   0xaa77:0x89a6d031
  41272e:	push   edi
  41272f:	out    0x3b,al
  412731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412732:	(bad)  
  412733:	(bad)  
  412734:	mov    al,0xb7
  412736:	mov    ebx,0x61f2cb7c
  41273b:	idiv   BYTE PTR [ebx]
  41273d:	div    BYTE PTR ds:0x365f7c51
  412743:	pop    ebx
  412744:	mov    ebx,DWORD PTR [ecx+0x4d]
  412747:	leave  
  412748:	test   DWORD PTR [ebx+0x1b3ca8bd],esp
  41274e:	repz sbb eax,0x8861a37
  412754:	cmp    ah,BYTE PTR [ebx]
  412756:	cmp    edi,DWORD PTR [ecx]
  412758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412759:	(bad)  
  41275a:	xchg   edi,eax
  41275b:	stos   BYTE PTR es:[edi],al
  41275c:	push   esp
  41275d:	cmp    ecx,DWORD PTR [di]
  412760:	jg     0x4127a0
  412762:	aaa    
  412763:	mov    edi,0xc9adfeed
  412768:	sub    ax,0xf33c
  41276c:	bound  ecx,QWORD PTR [esp+ebx*4]
  41276f:	cmc    
  412770:	scas   al,BYTE PTR es:[edi]
  412771:	sbb    ch,BYTE PTR [ebx]
  412773:	mov    esi,0xc011b8ab
  412778:	leavew 
  41277a:	stc    
  41277b:	int    0xbf
  41277d:	jo     0x412787
  41277f:	push   ebx
  412780:	pop    esi
  412781:	lahf   
  412782:	call   0x43dcd69
  412787:	jb     0x4127eb
  412789:	scas   eax,DWORD PTR es:[edi]
  41278a:	mov    ch,0x19
  41278c:	mov    ds:0xc4773e7a,eax
  412791:	sbb    eax,0xffe8a8b2
  412796:	mov    ah,BYTE PTR [ebx+0x21]
  412799:	mov    esi,0xdf33ab5e
  41279e:	jne    0x41273b
  4127a0:	loope  0x4127b1
  4127a2:	lods   eax,DWORD PTR ds:[esi]
  4127a3:	(bad)  
  4127a5:	std    
  4127a6:	ins    BYTE PTR es:[edi],dx
  4127a7:	call   0x1c5f:0x32950152
  4127ae:	push   edx
  4127af:	dec    ecx
  4127b0:	xchg   esi,eax
  4127b1:	xlat   BYTE PTR ds:[ebx]
  4127b2:	mov    eax,ds:0xa1926a42
  4127b7:	sbb    BYTE PTR [ebx],ch
  4127b9:	mov    ebx,0xf0e4ed4e
  4127be:	sbb    edx,esp
  4127c0:	bound  eax,QWORD PTR [esp+ecx*8+0x40]
  4127c4:	mov    ds:0xb54cafd4,eax
  4127c9:	cld    
  4127ca:	adc    ah,BYTE PTR [edx+ebx*8]
  4127cd:	in     eax,0x1b
  4127cf:	aam    0xd1
  4127d1:	rcl    BYTE PTR [edi+0x3a410a50],1
  4127d7:	add    cl,BYTE PTR [ecx-0x5a]
  4127da:	sub    BYTE PTR [ecx],dh
  4127dc:	aaa    
  4127dd:	inc    esp
  4127de:	sahf   
  4127df:	push   es
  4127e0:	mov    ecx,0x59865afc
  4127e5:	lods   al,BYTE PTR ds:[esi]
  4127e6:	and    al,0x2d
  4127e8:	adc    BYTE PTR [esp+esi*8+0x3bce1ead],0x36
  4127f0:	xor    ah,BYTE PTR [edi-0x3a302e2c]
  4127f6:	or     ch,BYTE PTR [edi+0x64]
  4127f9:	(bad)  ds:0xcabaaa1a
  4127ff:	leave  
  412800:	test   BYTE PTR [ecx-0x7fdd5134],bl
  412806:	cmp    dl,BYTE PTR [ebx-0x70be3877]
  41280c:	les    ebp,FWORD PTR [ebp-0x6e7cc074]
  412812:	adc    DWORD PTR [edi+ebp*1],eax
  412815:	and    eax,0x6f06b531
  41281a:	dec    edi
  41281b:	push   esp
  41281c:	retf   0x76d1
  41281f:	jecxz  0x412870
  412821:	jge    0x41285a
  412823:	sub    DWORD PTR [ebp-0xe],ebp
  412826:	hlt    
  412827:	ja     0x41280f
  412829:	hlt    
  41282a:	(bad)  
  41282b:	sbb    DWORD PTR [ebp-0x6b],ebp
  41282e:	ret    0x4622
  412831:	shl    BYTE PTR [esi],1
  412833:	pop    ebp
  412834:	adc    BYTE PTR [eax+ebp*8+0xd],0x1b
  412839:	mov    al,ds:0x2557b5ea
  41283e:	cmp    ebp,ecx
  412840:	or     al,0xca
  412842:	jp     0x412899
  412844:	fs test al,0xef
  412847:	out    0x65,al
  412849:	fldpi  
  41284b:	mov    dl,0x8a
  41284d:	rcl    eax,cl
  41284f:	jge    0x412844
  412851:	pop    eax
  412852:	jmp    0x41285e
  412854:	adc    DWORD PTR [ebx-0x5a],0xa1745da3
  41285b:	mov    WORD PTR [edx+0x239561b9],cs
  412861:	mov    dl,0x36
  412863:	call   0xb3f:0x8255eb36
  41286a:	add    dl,ah
  41286c:	mov    edi,?
  41286e:	aas    
  41286f:	mov    ah,0x63
  412871:	mov    esi,0xec6f9f3b
  412876:	std    
  412877:	out    dx,al
  412878:	dec    eax
  412879:	repnz push edx
  41287b:	adc    eax,0x331aa99b
  412880:	loop   0x4128c7
  412882:	pop    es
  412883:	pop    esp
  412884:	aaa    
  412885:	pop    eax
  412886:	push   0x24922ce2
  41288b:	pop    esp
  41288c:	sti    
  41288d:	pop    eax
  41288e:	cdq    
  41288f:	xor    BYTE PTR [eax-0x74d7ca19],al
  412895:	push   esp
  412896:	and    BYTE PTR [ebx-0x2c],dl
  412899:	iret   
  41289a:	daa    
  41289b:	or     al,0x31
  41289d:	mov    ds:0x501847d7,eax
  4128a2:	shufps xmm5,XMMWORD PTR [ecx+0x590b1bfe],0x34
  4128aa:	pop    ds
  4128ab:	bound  edi,QWORD PTR [esi+ebp*4+0xbfd0003]
  4128b2:	sbb    al,0xb9
  4128b4:	sbb    al,0x38
  4128b6:	iret   
  4128b7:	aam    0xd2
  4128b9:	sbb    DWORD PTR [edi-0x14286667],0x57
  4128c0:	pop    es
  4128c1:	sbb    BYTE PTR [esi-0x5],al
  4128c4:	xchg   DWORD PTR [edi],edi
  4128c6:	mov    ch,0xce
  4128c8:	sub    BYTE PTR [edi+0x61fce6eb],bl
  4128ce:	fst    QWORD PTR [esp+ebx*4]
  4128d1:	sbb    al,0x21
  4128d3:	or     DWORD PTR [esi],0xffffffd0
  4128d6:	adc    ah,BYTE PTR ds:0xfc52a5df
  4128dc:	int3   
  4128dd:	cdq    
  4128de:	ret    0x7fd6
  4128e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128e2:	pushf  
  4128e3:	inc    edx
  4128e4:	xchg   edi,eax
  4128e5:	jg     0x412886
  4128e7:	xor    eax,0x7df5fc7f
  4128ec:	ja     0x4128a4
  4128ee:	mov    ah,0xd0
  4128f0:	lahf   
  4128f1:	push   es
  4128f2:	cmp    al,BYTE PTR [edi-0x6e]
  4128f5:	adc    DWORD PTR [esi+esi*1],0x1d3b1a26
  4128fc:	xchg   esi,eax
  4128fd:	mov    esi,0xf9b0acad
  412902:	cmp    eax,0xb0f41000
  412907:	nop
  412908:	and    eax,0xc51d4b6a
  41290d:	test   ebx,esp
  41290f:	jmp    0xc670:0x42e4b9a4
  412916:	dec    esi
  412917:	mov    bh,0xe7
  412919:	jnp    0x412955
  41291b:	rcr    BYTE PTR [ebx-0x68d367f4],1
  412921:	sbb    BYTE PTR [edi+0x65a67dd7],ah
  412927:	stc    
  412928:	mov    al,ds:0x4d9a4f3f
  41292d:	(bad)  
  41292f:	(bad)  
  412930:	pop    eax
  412931:	in     al,dx
  412932:	das    
  412933:	push   esp
  412934:	dec    ecx
  412935:	fistp  DWORD PTR [edx]
  412937:	jb     0x412982
  412939:	push   eax
  41293a:	or     BYTE PTR [esi+0xa699a05],dl
  412940:	cwde   
  412941:	outs   dx,BYTE PTR ds:[esi]
  412942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412943:	js     0x41298e
  412945:	sub    esi,DWORD PTR [ebx]
  412947:	(bad)  
  412949:	(bad)  
  41294a:	ins    BYTE PTR es:[edi],dx
  41294b:	mov    al,ds:0x245fd84e
  412950:	ja     0x412959
  412952:	scas   al,BYTE PTR es:[edi]
  412953:	(bad)  
  412954:	jns    0x412984
  412956:	and    dh,BYTE PTR [ebx]
  412958:	xchg   ebx,eax
  412959:	mov    ebx,0xb3fc8dc6
  41295e:	mov    eax,ds:0xeda69539
  412963:	lds    esp,FWORD PTR [esi+ebx*4+0x42]
  412967:	mov    ds:0xb0584d9d,al
  41296c:	fisttp QWORD PTR [ecx-0x8]
  41296f:	pop    ecx
  412970:	push   esp
  412971:	mov    ds:0x89ae2411,eax
  412976:	push   edi
  412977:	cmp    ch,BYTE PTR [ebx-0x620c4cbf]
  41297d:	adc    al,0xc5
  41297f:	(bad)  ds:0x529f3329
  412985:	mov    WORD PTR [edi+0x3a9eb3c8],?
  41298b:	mov    ds:0x701afd5b,eax
  412990:	or     BYTE PTR [eax+0x68],0xf3
  412994:	(bad)
  412998:	or     al,0x99
  41299a:	sub    eax,0xcaa12920
  41299f:	daa    
  4129a0:	inc    edx
  4129a1:	loop   0x4129c2
  4129a3:	je     0x4129a8
  4129a5:	or     edi,DWORD PTR [ebx]
  4129a7:	mov    ecx,eax
  4129a9:	sub    eax,0x7a94165a
  4129ae:	push   ss
  4129af:	adc    BYTE PTR [eax+0x3],dh
  4129b2:	out    dx,al
  4129b3:	xchg   edx,eax
  4129b4:	aad    0xef
  4129b6:	cmp    edx,edi
  4129b8:	push   ss
  4129b9:	push   eax
  4129ba:	add    esi,DWORD PTR [ebp-0x5a]
  4129bd:	pop    eax
  4129be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129bf:	imul   edi,DWORD PTR [edx],0x87920613
  4129c5:	push   0xffffffd1
  4129c7:	fmul   DWORD PTR [edi+0x59]
  4129ca:	in     al,dx
  4129cb:	xchg   eax,esi
  4129cd:	lods   al,BYTE PTR ds:[esi]
  4129ce:	xor    al,0xc9
  4129d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129d1:	and    al,0x7b
  4129d3:	pushf  
  4129d4:	stos   BYTE PTR es:[edi],al
  4129d5:	ret    
  4129d6:	(bad)  
  4129d7:	cmp    eax,ebp
  4129d9:	and    BYTE PTR [ebp-0x33],bl
  4129dc:	cdq    
  4129dd:	(bad)  
  4129de:	fdivp  st(3),st
  4129e0:	xchg   ecx,eax
  4129e1:	lea    esp,[esi]
  4129e3:	enter  0x6e09,0xea
  4129e7:	lea    esi,[ebx-0x66c90d69]
  4129ed:	pop    ebx
  4129ee:	lods   eax,DWORD PTR ds:[esi]
  4129ef:	ret    
  4129f0:	inc    esi
  4129f1:	je     0x412a4a
  4129f3:	add    al,0xe9
  4129f5:	vpslld ymm6,ymm4,XMMWORD PTR [ecx+ecx*1+0x12]
  4129fb:	pop    ds
  4129fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129fd:	mov    cs,WORD PTR [esi+0x4e]
  412a00:	cmc    
  412a01:	pusha  
  412a02:	test   ecx,ebx
  412a04:	repnz mov edi,0x95ccb4b4
  412a0a:	dec    edi
  412a0b:	adc    BYTE PTR [edx+0x53],bl
  412a0e:	add    eax,0xd828e3ef
  412a13:	jmp    0x3737bfb2
  412a18:	es call 0x380e:0x9d7f0901
  412a20:	mov    edx,0xeaef54ad
  412a25:	lds    ebp,FWORD PTR [esi+ebp*1+0x4bc06890]
  412a2c:	mul    DWORD PTR ds:0x32e22bea
  412a32:	aad    0xe2
  412a34:	jl     0x412ab4
  412a36:	std    
  412a37:	or     esi,DWORD PTR ds:0xd2bd7c8a
  412a3d:	in     al,0x92
  412a3f:	loope  0x412a24
  412a41:	add    esi,DWORD PTR [ecx-0x25]
  412a44:	jmp    0x8bd72267
  412a49:	mov    esi,0x23bf0cf5
  412a4e:	mov    dl,0xa8
  412a50:	repnz pop ecx
  412a52:	pop    es
  412a53:	inc    esi
  412a54:	push   0xe55d8a8f
  412a59:	push   ss
  412a5a:	jo     0x412a4f
  412a5c:	adc    eax,0xe9238a48
  412a61:	mov    dl,0xe
  412a63:	in     eax,dx
  412a64:	inc    esi
  412a65:	sbb    eax,0xc3e102f9
  412a6a:	leave  
  412a6b:	lea    eax,[edi-0x10]
  412a6e:	test   BYTE PTR [ecx+0x2cd6e9b4],cl
  412a74:	jno    0x412a4c
  412a76:	sbb    ah,BYTE PTR [esi-0x2a]
  412a79:	(bad)  
  412a7a:	cld    
  412a7b:	cmc    
  412a7c:	cmp    al,0xd4
  412a7e:	cmp    al,BYTE PTR [ebx]
  412a80:	jnp    0x412a36
  412a82:	out    dx,eax
  412a83:	mov    al,0xf1
  412a85:	call   0x9c68:0x17989ab3
  412a8c:	mov    edi,0xab4c01e1
  412a91:	inc    eax
  412a92:	jae    0x412a3e
  412a94:	push   ss
  412a95:	pop    es
  412a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a97:	push   edx
  412a98:	sbb    bl,bh
  412a9a:	fcmovu st,st(0)
  412a9c:	pop    ecx
  412a9d:	add    eax,0xed886e8a
  412aa2:	fs push eax
  412aa4:	or     al,0x80
  412aa6:	test   bh,bl
  412aa8:	mov    bl,0xb3
  412aaa:	sbb    al,0xff
  412aac:	sub    DWORD PTR [esi-0x68],edx
  412aaf:	push   ds
  412ab0:	sub    cl,BYTE PTR [ebx]
  412ab2:	repz cld 
  412ab4:	sub    edi,DWORD PTR [edx+0x29c9ff0d]
  412aba:	out    dx,al
  412abb:	mov    eax,DWORD PTR [edx]
  412abd:	out    0x46,eax
  412abf:	fwait
  412ac0:	outs   dx,DWORD PTR ds:[esi]
  412ac1:	push   esi
  412ac2:	je     0x412b31
  412ac4:	cmc    
  412ac5:	sar    bh,cl
  412ac7:	jmp    0x412af2
  412ac9:	pop    ebp
  412aca:	dec    eax
  412acb:	mov    bh,BYTE PTR [esi-0x4c5571f7]
  412ad1:	inc    edx
  412ad2:	aaa    
  412ad3:	jne    0x412b03
  412ad5:	or     eax,0xabfefa6
  412ada:	adc    edx,DWORD PTR [eax-0x1c]
  412add:	jecxz  0x412ae4
  412adf:	les    ebx,FWORD PTR [edx]
  412ae1:	sahf   
  412ae2:	jns    0x412b33
  412ae4:	or     al,0xa2
  412ae6:	xchg   edx,eax
  412ae7:	mov    ds:0xb082c8b1,al
  412aec:	adc    cl,BYTE PTR [edx+0x68b1b53d]
  412af2:	jmp    0x9c8e6190
  412af7:	jnp    0x412ac6
  412af9:	int    0xa2
  412afb:	sbb    eax,0x6ba17ceb
  412b00:	stos   DWORD PTR es:[edi],eax
  412b01:	cmp    dh,BYTE PTR [esi-0x3b]
  412b04:	and    DWORD PTR [ecx],esp
  412b06:	jge    0x412b70
  412b08:	adc    eax,0xa00102ae
  412b0d:	push   edx
  412b0e:	cmp    bl,BYTE PTR [esi-0x4132cbe1]
  412b14:	sub    bh,cl
  412b16:	add    BYTE PTR [ebx+0x11],0x88
  412b1a:	sti    
  412b1b:	jae    0x412b5b
  412b1d:	jne    0x412b48
  412b1f:	mov    ebp,0x47cbfa47
  412b24:	sbb    ebx,DWORD PTR [ebx]
  412b26:	pushf  
  412b27:	or     dh,al
  412b29:	push   ebp
  412b2a:	ds dec ebp
  412b2c:	xchg   ecx,eax
  412b2d:	in     eax,0x11
  412b2f:	xchg   esp,eax
  412b30:	sub    eax,0xe1bab875
  412b35:	shl    DWORD PTR [edx+0x6aa420fe],1
  412b3b:	dec    esp
  412b3c:	(bad)  
  412b3d:	in     al,0xfe
  412b3f:	ins    DWORD PTR es:[edi],dx
  412b40:	sbb    eax,0x6fb14f97
  412b45:	dec    edi
  412b46:	and    BYTE PTR [ebp-0x7a1e96fe],bh
  412b4c:	mov    ebp,0xa7a4146f
  412b51:	xchg   ebp,eax
  412b52:	in     eax,0x51
  412b54:	mov    ah,0x5f
  412b56:	(bad)  [esi]
  412b58:	in     al,0x3c
  412b5a:	sbb    edi,DWORD PTR [edx-0x65e95d39]
  412b60:	xchg   DWORD PTR [eax-0x69],eax
  412b63:	mov    dl,0x96
  412b65:	cdq    
  412b66:	inc    ebp
  412b67:	paddusw mm0,QWORD PTR [ecx-0x2101924a]
  412b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b6f:	sub    eax,DWORD PTR [edi+0x18c2abfd]
  412b75:	push   edx
  412b76:	push   cs
  412b77:	std    
  412b78:	in     eax,0xdb
  412b7a:	pop    eax
  412b7b:	sbb    eax,0xc3b52f37
  412b80:	adc    dl,al
  412b82:	jge    0x412bf5
  412b84:	into   
  412b85:	je     0x412b6a
  412b87:	jge    0x412bb9
  412b89:	pop    esi
  412b8a:	bswap  esi
  412b8c:	add    ebx,esi
  412b8e:	loop   0x412be8
  412b90:	push   esi
  412b91:	sbb    ecx,esp
  412b93:	sbb    BYTE PTR [eax+0x5bcebce1],dh
  412b99:	jbe    0x412be9
  412b9b:	aaa    
  412b9c:	push   ebp
  412b9d:	mov    ebp,DWORD PTR [edx]
  412b9f:	mov    bl,0xe1
  412ba1:	or     DWORD PTR [ecx-0x6b],edi
  412ba4:	push   esi
  412ba5:	leave  
  412ba6:	aad    0x0
  412ba8:	mov    esp,0x8f08da39
  412bad:	or     DWORD PTR [edx-0x41d0b2f9],edx
  412bb3:	neg    DWORD PTR [esi+0xe]
  412bb6:	aam    0xc
  412bb8:	das    
  412bb9:	sub    DWORD PTR [ebp+ebp*4+0x52],ecx
  412bbd:	dec    ebx
  412bbe:	je     0x412c2e
  412bc0:	mov    ch,0x26
  412bc2:	sbb    DWORD PTR [edi+0x1c959e51],0x636343c0
  412bcc:	xor    eax,ebx
  412bce:	pop    es
  412bcf:	imul   esi,DWORD PTR [ecx+0x25],0xc95eeea4
  412bd6:	mov    eax,0x43e57c10
  412bdb:	add    al,0x1a
  412bdd:	add    al,0xb7
  412bdf:	or     BYTE PTR [edi-0x3dc5970],ah
  412be5:	retf   0x5e6d
  412be8:	adc    al,0xc7
  412bea:	pop    ds
  412beb:	dec    ebx
  412bec:	icebp  
  412bed:	fstp   TBYTE PTR [esi-0x26]
  412bf0:	jb     0x412bda
  412bf2:	scas   al,BYTE PTR es:[edi]
  412bf3:	jb     0x412bc4
  412bf5:	mov    dh,BYTE PTR [ebx]
  412bf7:	push   cs
  412bf8:	xlat   BYTE PTR ds:[ebx]
  412bf9:	iret   
  412bfa:	stos   DWORD PTR es:[edi],eax
  412bfb:	dec    edi
  412bfc:	adc    ch,BYTE PTR [edx+eax*8]
  412bff:	jno    0x412be7
  412c01:	lea    esp,[ecx*4-0xec80c8d]
  412c08:	add    eax,0xaa8d1d1b
  412c0d:	pop    ds
  412c0e:	mov    ecx,0xfe03358e
  412c13:	jbe    0x412bba
  412c15:	pop    esi
  412c16:	xchg   ecx,eax
  412c17:	pop    ss
  412c18:	or     DWORD PTR [ebp-0xfa98198],edx
  412c1e:	xor    edx,ebp
  412c20:	xor    eax,0x753c042d
  412c25:	fnstcw WORD PTR [edx+0x45]
  412c28:	sub    edx,DWORD PTR [edi]
  412c2a:	fucom  st(0)
  412c2c:	fadd   QWORD PTR [ecx+ebp*4-0x1f]
  412c30:	mov    dl,0x84
  412c32:	mov    ebp,0x211a6f3b
  412c37:	leave  
  412c38:	xor    bl,BYTE PTR [esi+0xdcf0bfe]
  412c3e:	loope  0x412c95
  412c40:	jae    0x412cb8
  412c42:	imul   esi,ecx,0x2b
  412c45:	lahf   
  412c46:	aad    0xc0
  412c48:	out    0x93,eax
  412c4a:	sub    al,0x4a
  412c4c:	mov    DWORD PTR [edi],edx
  412c4e:	in     al,dx
  412c4f:	push   es
  412c50:	xor    ecx,DWORD PTR [edi+0x1c052035]
  412c56:	test   eax,0x50a3ee29
  412c5b:	fisubr DWORD PTR [eax-0x115411f]
  412c61:	adc    al,0x6a
  412c63:	mov    ds:0x43cd6667,eax
  412c68:	popf   
  412c69:	push   0x33
  412c6b:	pop    esi
  412c6c:	pop    ebp
  412c6d:	adc    DWORD PTR [edi],esi
  412c6f:	or     ah,BYTE PTR [eax]
  412c71:	pop    DWORD PTR [edx+0x7c]
  412c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c75:	inc    edx
  412c76:	inc    ebp
  412c77:	rol    DWORD PTR [eax+0x6d9478fd],1
  412c7d:	shl    edx,1
  412c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c80:	xor    eax,0xda3df1c4
  412c85:	aas    
  412c86:	add    ebp,DWORD PTR [esi+0x34]
  412c89:	and    eax,0xbf454e72
  412c8e:	dec    esi
  412c8f:	xor    eax,0x5ac34f21
  412c95:	or     DWORD PTR [eax-0x526e9286],eax
  412c9b:	sub    esi,0xffffffe9
  412c9e:	rol    DWORD PTR [ebx+0x69],1
  412ca1:	adc    DWORD PTR [ecx+0x48],ebx
  412ca4:	es in  eax,0x5f
  412ca7:	outs   dx,BYTE PTR ds:[esi]
  412ca8:	ds jge 0x412ca0
  412cab:	(bad)  
  412cac:	push   0x4e886f9e
  412cb1:	hlt    
  412cb2:	pop    ebp
  412cb3:	ins    BYTE PTR es:[edi],dx
  412cb4:	jp     0x412d33
  412cb6:	imul   esp
  412cb8:	sub    eax,0xf11d245a
  412cbd:	les    edi,FWORD PTR [ebx]
  412cbf:	mov    eax,0x8335c7e6
  412cc4:	xchg   ebx,eax
  412cc5:	sbb    BYTE PTR [edx],cl
  412cc7:	out    0xa6,al
  412cc9:	stos   DWORD PTR es:[edi],eax
  412cca:	shl    BYTE PTR [esi+0x4c],cl
  412ccd:	fld    QWORD PTR [ebx]
  412ccf:	lea    edi,[ebx-0x24]
  412cd2:	daa    
  412cd3:	stos   BYTE PTR es:[edi],al
  412cd4:	imul   ecx,DWORD PTR [edi],0x7c
  412cd7:	mov    cl,0xcd
  412cd9:	push   edi
  412cda:	ficomp WORD PTR [edx+0x77]
  412cdd:	xchg   edx,eax
  412cde:	or     al,BYTE PTR [ebp+eiz*8+0xd]
  412ce2:	add    edx,ebp
  412ce4:	push   eax
  412ce5:	mov    ah,0xe4
  412ce7:	loope  0x412d2a
  412ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cea:	popf   
  412ceb:	inc    esi
  412cec:	loopne 0x412c7a
  412cee:	sbb    al,0x1e
  412cf0:	into   
  412cf1:	loopne 0x412ca8
  412cf3:	sbb    al,0xc8
  412cf5:	cmp    DWORD PTR [ecx+ebx*2+0x22],edx
  412cf9:	push   esi
  412cfa:	retf   
  412cfb:	mov    edi,0xe39e3f94
  412d00:	cs leave 
  412d02:	in     eax,0xe0
  412d04:	pusha  
  412d05:	mov    cs,WORD PTR [edx]
  412d07:	fild   WORD PTR [edi+0x19]
  412d0a:	mov    ebp,ecx
  412d0c:	icebp  
  412d0d:	dec    edi
  412d0e:	adc    al,0xd5
  412d10:	mov    dh,0x89
  412d12:	test   al,0x64
  412d14:	add    edi,DWORD PTR [edx+0x18]
  412d17:	mov    ch,0xb8
  412d19:	(bad)  
  412d1a:	shr    BYTE PTR [eax-0x6b2565cc],1
  412d20:	adc    eax,0xec66bf01
  412d25:	sbb    ecx,DWORD PTR [ebx+0x57cfe5fb]
  412d2b:	xor    BYTE PTR [edi+0x7f],0xa7
  412d2f:	cmp    DWORD PTR [esi+ecx*8],ecx
  412d32:	mov    eax,0x78d73865
  412d37:	int3   
  412d38:	push   esi
  412d39:	imul   esp,DWORD PTR [esi+0x3f09d2a4],0xffffff84
  412d40:	fdivr  DWORD PTR [eax-0x18]
  412d43:	stos   BYTE PTR es:[edi],al
  412d44:	sti    
  412d45:	ss jge 0x412d73
  412d48:	repz mov ecx,0xbc52584d
  412d4e:	sub    al,0xe2
  412d50:	retf   0x967b
  412d53:	hlt    
  412d54:	mov    ebp,0x5105261b
  412d59:	into   
  412d5a:	scas   al,BYTE PTR es:[edi]
  412d5b:	adc    DWORD PTR [ecx+edi*1],ecx
  412d5e:	iret   
  412d5f:	mov    ds:0xa1e7f751,al
  412d64:	std    
  412d65:	(bad)  
  412d66:	cli    
  412d67:	and    DWORD PTR [eax-0x5b],0xd4388056
  412d6e:	ret    
  412d6f:	xchg   esi,eax
  412d70:	mov    esi,0x5b7c9e0c
  412d75:	mov    ah,0xf9
  412d77:	or     bh,BYTE PTR ds:0x2dcdd40e
  412d7d:	in     al,dx
  412d7e:	rcl    BYTE PTR [edi+0x2e],0x22
  412d82:	retf   
  412d83:	out    dx,eax
  412d84:	mov    ah,0xb4
  412d86:	popf   
  412d87:	or     edx,ebp
  412d89:	push   esi
  412d8a:	(bad)  
  412d8b:	in     eax,dx
  412d8c:	dec    esi
  412d8d:	cmp    eax,0x65a718cc
  412d92:	lock packsswb mm6,QWORD PTR [edx+0x13]
  412d97:	push   ss
  412d98:	loope  0x412e19
  412d9a:	and    bh,cl
  412d9c:	aad    0xa6
  412d9e:	xor    al,0x58
  412da0:	das    
  412da1:	out    0x12,eax
  412da3:	test   eax,0xe66eb5aa
  412da8:	sbb    cl,BYTE PTR [edx+eiz*4]
  412dab:	inc    DWORD PTR [ebp-0x7f82e700]
  412db1:	jmp    0x6ab3:0xcac969e9
  412db8:	mov    edi,0x5268d0f5
  412dbd:	and    DWORD PTR [ebx],edx
  412dbf:	outs   dx,BYTE PTR ds:[esi]
  412dc0:	shr    DWORD PTR [esi+0x745c7417],cl
  412dc6:	mov    al,BYTE PTR [ebp-0x73]
  412dc9:	xchg   BYTE PTR [ebx-0x4e],cl
  412dcc:	sbb    BYTE PTR ds:0x8f924f2d,bl
  412dd2:	loopne 0x412d9d
  412dd4:	mov    ah,0xde
  412dd6:	hlt    
  412dd7:	dec    ecx
  412dd8:	pop    eax
  412dd9:	inc    eax
  412dda:	repz mov ecx,0xd0e33d7b
  412de0:	push   ss
  412de1:	popa   
  412de2:	adc    bh,al
  412de4:	icebp  
  412de5:	mov    cl,0xbd
  412de7:	xor    bl,al
  412de9:	push   ecx
  412dea:	or     esp,DWORD PTR [ebx-0x3]
  412ded:	test   eax,0xb094e9b7
  412df2:	xor    BYTE PTR [ebx-0x12],ah
  412df5:	(bad)  
  412df8:	into   
  412df9:	push   edi
  412dfa:	add    eax,0x14a02221
  412dff:	mov    WORD PTR [esp+edi*1],ds
  412e02:	fdiv   DWORD PTR [ebx]
  412e04:	cli    
  412e05:	add    al,0xbd
  412e07:	iret   
  412e08:	push   ss
  412e09:	imul   ebp,DWORD PTR [edx-0x526bdcdb],0xffffffbb
  412e10:	loopne 0x412db4
  412e12:	add    DWORD PTR [edx+edx*8],edx
  412e15:	cdq    
  412e16:	gs xor eax,ecx
  412e19:	and    edi,DWORD PTR [ebp+0x17]
  412e1c:	add    al,0x80
  412e1e:	ret    0xeb52
  412e21:	pop    ecx
  412e22:	add    edi,DWORD PTR ds:0x39af567e
  412e28:	pop    esp
  412e29:	mov    al,0xbb
  412e2b:	fsub   st,st(0)
  412e2d:	scas   eax,DWORD PTR es:[edi]
  412e2e:	ja     0x412e17
  412e30:	and    edx,DWORD PTR [ecx+eiz*4-0x1f]
  412e34:	sbb    DWORD PTR [edx],0xffffffe5
  412e37:	ret    
  412e38:	xchg   edx,eax
  412e39:	mov    edx,0xe0ce4b
  412e3e:	cmp    eax,0x747447c8
  412e43:	add    ebp,ecx
  412e45:	out    0xad,eax
  412e47:	push   edx
  412e48:	inc    ecx
  412e49:	fld    st(0)
  412e4b:	lds    edx,FWORD PTR [esi]
  412e4d:	cli    
  412e4e:	push   ebx
  412e4f:	jae    0x412eba
  412e51:	adc    cl,BYTE PTR [edi-0x2949fd3d]
  412e57:	push   ds
  412e58:	push   0x37c7aa43
  412e5d:	das    
  412e5e:	(bad)  
  412e5f:	cld    
  412e60:	sub    DWORD PTR [eax-0x25],ebp
  412e63:	lds    edx,FWORD PTR [eax]
  412e65:	push   ecx
  412e66:	push   ecx
  412e67:	jmp    0x2a82:0x5d65e82a
  412e6e:	shl    DWORD PTR ds:0x73f6d85a,0x66
  412e75:	xor    ch,0xa9
  412e78:	inc    ebp
  412e79:	lods   eax,DWORD PTR ds:[esi]
  412e7a:	ror    ch,1
  412e7c:	mov    ebx,0xb74b5e93
  412e81:	fs pop esi
  412e83:	xor    bh,BYTE PTR [edi+eiz*2]
  412e86:	cmp    BYTE PTR [ecx],ah
  412e88:	pop    esi
  412e89:	mov    al,ds:0x8a90ead
  412e8e:	stc    
  412e8f:	pop    es
  412e90:	inc    esi
  412e91:	push   es
  412e92:	out    0x4b,al
  412e94:	daa    
  412e95:	sti    
  412e96:	loop   0x412ef4
  412e98:	mov    ds:0xc80750ea,eax
  412e9d:	push   ds
  412e9e:	stos   BYTE PTR es:[edi],al
  412e9f:	call   0x28a72ef9
  412ea4:	pop    ss
  412ea5:	(bad)  
  412ea6:	cwde   
  412ea7:	mov    dl,0x1a
  412ea9:	das    
  412eaa:	mov    ebp,0x79532f0c
  412eaf:	jmp    0xe0a76a92
  412eb4:	ja     0x412ea9
  412eb6:	pop    ss
  412eb7:	test   esp,0xcc3bc2a8
  412ebd:	test   eax,0x26b42a63
  412ec2:	sbb    al,0x81
  412ec4:	push   ds
  412ec5:	xchg   ecx,eax
  412ec6:	adc    DWORD PTR [eax-0x40],ebp
  412ec9:	push   ds
  412eca:	pop    ebp
  412ecb:	xchg   esp,eax
  412ecc:	scas   al,BYTE PTR es:[edi]
  412ecd:	outs   dx,DWORD PTR ds:[esi]
  412ece:	sub    dh,BYTE PTR [ecx+0x2]
  412ed1:	cvttps2pi mm7,QWORD PTR [eax+0x1691fed5]
  412ed8:	dec    edi
  412ed9:	jnp    0x412e5b
  412edb:	out    0xb2,al
  412edd:	inc    ebp
  412ede:	jecxz  0x412ef0
  412ee0:	fdiv   QWORD PTR [edi-0x2c]
  412ee3:	jmp    0x570:0x38bdd9de
  412eea:	aas    
  412eeb:	bound  ebp,QWORD PTR [ecx+0x68]
  412eee:	cmp    eax,0xf28484f2
  412ef3:	push   edx
  412ef4:	jl     0x412f49
  412ef6:	cmp    DWORD PTR [ecx-0x42aac69b],esi
  412efc:	into   
  412efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412efe:	cmc    
  412eff:	push   ebx
  412f00:	test   bl,0xe3
  412f03:	out    0x48,eax
  412f05:	(bad)  
  412f06:	loop   0x412e8e
  412f08:	mov    bl,bl
  412f0a:	aaa    
  412f0b:	mov    ds:0xfe1b8b8a,eax
  412f10:	add    BYTE PTR [esi-0x3a],bl
  412f13:	mov    ds:0x7ea25af5,al
  412f18:	(bad)  [eax-0x2b74dd9c]
  412f1e:	dec    edi
  412f1f:	ds dec ebp
  412f21:	mov    edi,0xc2bfb01d
  412f26:	ins    DWORD PTR es:[edi],dx
  412f27:	repz test eax,0x559fdb11
  412f2d:	idiv   BYTE PTR [ebx+0x76]
  412f30:	aaa    
  412f31:	adc    edx,esi
  412f33:	sbb    DWORD PTR [edi],ebp
  412f35:	mov    ebp,0x529f1181
  412f3a:	cmp    al,0xf9
  412f3c:	or     eax,0x6eb921ca
  412f41:	lahf   
  412f42:	and    eax,0x8e205e17
  412f47:	out    dx,al
  412f48:	popa   
  412f49:	gs data16 mov bl,0xcc
  412f4d:	dec    eax
  412f4e:	loopne 0x412fb2
  412f50:	mov    dl,0x42
  412f52:	lahf   
  412f53:	jb     0x412ed7
  412f55:	outs   dx,BYTE PTR gs:[esi]
  412f57:	pop    es
  412f58:	not    DWORD PTR [ecx-0x38efdd2a]
  412f5e:	push   ebp
  412f5f:	pop    esi
  412f60:	inc    edx
  412f61:	and    eax,0x787b3c76
  412f66:	and    DWORD PTR [esp+ebx*2+0x6ef9d700],0x8b94fe7f
  412f71:	push   ecx
  412f72:	mov    ah,0xf4
  412f74:	or     ah,BYTE PTR [ebx-0x3f]
  412f77:	mov    eax,0xbbc751e5
  412f7c:	fcom   QWORD PTR [esi]
  412f7e:	sbb    eax,0xf8c79f22
  412f83:	lods   eax,DWORD PTR ds:[esi]
  412f84:	hlt    
  412f85:	lods   al,BYTE PTR ds:[esi]
  412f86:	ja     0x412f1c
  412f88:	pop    esi
  412f89:	les    edi,FWORD PTR [ecx+0x982a99]
  412f8f:	jae    0x413006
  412f91:	sub    BYTE PTR [edi+0x4b],dh
  412f94:	mov    ecx,0xa8b3b99b
  412f99:	cmp    DWORD PTR [edx],eax
  412f9b:	xor    BYTE PTR [ecx-0x1e],dh
  412f9e:	mov    edi,0xe0085e6a
  412fa3:	(bad)  
  412fa4:	popa   
  412fa5:	jnp    0x41301f
  412fa7:	imul   eax,ebx,0x23
  412faa:	mov    ch,0x91
  412fac:	pop    ecx
  412fad:	cmp    dl,al
  412faf:	dec    ecx
  412fb0:	mov    bh,dh
  412fb2:	cdq    
  412fb3:	stos   BYTE PTR es:[edi],al
  412fb4:	fwait
  412fb5:	jb     0x412fd6
  412fb7:	das    
  412fb8:	ins    DWORD PTR es:[edi],dx
  412fb9:	inc    ebp
  412fba:	cs adc al,0xc3
  412fbd:	add    eax,0x486baadb
  412fc2:	sub    ecx,esi
  412fc4:	adc    ebx,DWORD PTR [edx+0x370997e0]
  412fca:	xchg   edx,eax
  412fcb:	xor    eax,DWORD PTR [esi+eiz*4+0x623c318a]
  412fd2:	fcmovnu st,st(4)
  412fd4:	add    al,0xd0
  412fd6:	xor    eax,0x1b7e929e
  412fdb:	call   FWORD PTR [eax]
  412fdd:	mov    ah,0xc2
  412fdf:	mov    fs,ecx
  412fe1:	xor    ebx,DWORD PTR [edx+eax*8-0x36]
  412fe5:	je     0x412fa0
  412fe7:	ins    BYTE PTR es:[edi],dx
  412fe8:	rcl    BYTE PTR [edx+ebp*4+0x12299dd4],cl
  412fef:	retf   
  412ff0:	popf   
  412ff1:	sub    dh,BYTE PTR [esi-0x27d04195]
  412ff7:	mov    dl,0x2e
  412ff9:	mov    esi,0x2668917e
  412ffe:	cmp    al,0xec
  413000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413001:	push   ss
  413002:	sbb    bh,al
  413004:	inc    esi
  413005:	mov    bh,0x9d
  413007:	push   ds
  413008:	dec    edi
  413009:	push   eax
  41300a:	dec    edi
  41300b:	mov    DWORD PTR [ebp+0xa],edx
  41300e:	add    DWORD PTR [esp+ecx*4-0x11],esi
  413012:	aas    
  413013:	lock aas 
  413015:	cmp    al,0x74
  413017:	ins    BYTE PTR es:[edi],dx
  413018:	popa   
  413019:	jno    0x412ff4
  41301b:	push   ecx
  41301c:	out    dx,eax
  41301d:	xor    bh,bl
  41301f:	mov    WORD PTR [ebx+eiz*1],?
  413022:	ja     0x41308a
  413024:	in     eax,dx
  413025:	retf   0x45e5
  413028:	test   DWORD PTR [eax+eiz*2-0x34901283],ecx
  41302f:	xchg   esp,eax
  413030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413031:	retf   0xf84a
  413034:	mov    eax,ds:0xb00cec82
  413039:	mov    fs,WORD PTR ds:0x9f8e989d
  41303f:	lods   al,BYTE PTR ds:[si]
  413041:	or     esp,ebx
  413043:	stc    
  413044:	into   
  413045:	aaa    
  413046:	sub    DWORD PTR [ecx],esp
  413048:	inc    esp
  413049:	dec    esi
  41304a:	cmc    
  41304b:	mov    BYTE PTR [ecx-0x9f7ea04],dh
  413051:	jne    0x41302f
  413053:	sbb    eax,ebp
  413055:	(bad)  
  413056:	and    eax,0x24768dd7
  41305b:	jb     0x4130db
  41305d:	enter  0x487b,0xe0
  413061:	stos   BYTE PTR es:[edi],al
  413062:	xchg   edx,eax
  413063:	adc    al,0xfb
  413065:	and    ch,BYTE PTR [esi-0x4959798]
  41306b:	test   BYTE PTR [edx+0xc5a7ccf],dl
  413071:	pop    edx
  413072:	jmp    0x2c42:0xe173052f
  413079:	pop    esp
  41307a:	and    eax,DWORD PTR [eax-0x62]
  41307d:	dec    edi
  41307e:	sti    
  41307f:	fmul   QWORD PTR ds:0xd0f82b39
  413085:	inc    edx
  413086:	in     eax,dx
  413087:	mov    ebp,0xe45a476b
  41308c:	hlt    
  41308d:	pop    ecx
  41308e:	repz dec ecx
  413090:	jl     0x41306a
  413092:	mov    ah,0xa0
  413094:	jecxz  0x413075
  413096:	mov    ebp,0x3e43438d
  41309b:	ins    BYTE PTR es:[edi],dx
  41309c:	aam    0xe4
  41309e:	xchg   edx,eax
  41309f:	mov    WORD PTR [edi],cs
  4130a1:	mov    WORD PTR cs:[edx],?
  4130a4:	mov    bl,0xd2
  4130a6:	mov    eax,ds:0xfc77ad9
  4130ab:	sub    esp,edi
  4130ad:	push   ss
  4130ae:	add    eax,0x351892c8
  4130b3:	pop    edx
  4130b4:	sub    cl,BYTE PTR [esi+0x9]
  4130b7:	test   eax,0xe797c555
  4130bc:	xor    al,0x81
  4130be:	sub    BYTE PTR ds:0xa32e967a,ah
  4130c4:	pusha  
  4130c5:	sbb    eax,0x217a4157
  4130ca:	sub    ebp,DWORD PTR [ebx+0x1867566c]
  4130d0:	daa    
  4130d1:	sub    DWORD PTR [ebx+0x5e],0xffffff84
  4130d5:	loop   0x413147
  4130d7:	xor    BYTE PTR [ecx+0x63],0x3b
  4130db:	mov    eax,ds:0xd4bc3770
  4130e0:	sbb    dl,BYTE PTR [edi]
  4130e2:	fsub   QWORD PTR [ebp+0x1c]
  4130e5:	dec    edx
  4130e6:	ins    BYTE PTR es:[edi],dx
  4130e7:	jmp    0xc81ff6a3
  4130ec:	jge    0x4130d6
  4130ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130ef:	dec    ebp
  4130f0:	and    BYTE PTR [edx+0x2f24777c],dl
  4130f6:	xchg   ebx,eax
  4130f7:	bnd jmp 0x204b1626
  4130fd:	inc    esp
  4130fe:	or     BYTE PTR [ecx+0x3],bl
  413101:	test   BYTE PTR [ecx],0xc5
  413104:	stos   DWORD PTR es:[edi],eax
  413105:	jl     0x413140
  413107:	ja     0x41308c
  413109:	repz into 
  41310b:	push   edx
  41310c:	test   edx,esp
  41310e:	jae    0x413167
  413110:	sbb    edx,eax
  413112:	add    edi,DWORD PTR [edx-0x6]
  413115:	inc    esp
  413116:	xor    BYTE PTR [edi],bh
  413118:	fwait
  413119:	mov    esi,0x289a9279
  41311e:	adc    al,0x94
  413120:	test   eax,0xc8b57ec3
  413125:	sbb    ebx,ecx
  413127:	adc    dh,al
  413129:	ret    
  41312a:	sbb    bl,BYTE PTR [eax+0x20f91882]
  413130:	add    al,0xef
  413132:	jnp    0x413142
  413134:	or     edi,esi
  413136:	cmc    
  413137:	pop    esp
  413138:	pop    es
  413139:	ins    DWORD PTR es:[edi],dx
  41313a:	mov    WORD PTR [edx+0x3500912],ds
  413140:	push   0xffffffe1
  413142:	out    0x35,al
  413144:	adc    al,0x2c
  413146:	in     al,dx
  413147:	jmp    0x413140
  413149:	lahf   
  41314a:	es loopne 0x413129
  41314d:	pop    ebp
  41314e:	retf   
  41314f:	mov    esi,0x2f83502a
  413154:	inc    esi
  413155:	outs   dx,DWORD PTR ds:[esi]
  413156:	dec    esp
  413157:	je     0x413185
  413159:	jmp    0x4130de
  41315b:	jns    0x41313c
  41315d:	push   eax
  41315e:	mov    al,ds:0xafb6efd9
  413163:	mov    cl,ah
  413165:	mov    bl,0xfb
  413167:	pusha  
  413168:	ror    BYTE PTR [ecx],0x56
  41316b:	sbb    ah,BYTE PTR [edi+0x54]
  41316e:	hlt    
  41316f:	lods   al,BYTE PTR ds:[esi]
  413170:	jo     0x41313d
  413172:	adc    DWORD PTR [ebx],ecx
  413174:	jle    0x413155
  413176:	mov    ebp,0xeea23826
  41317b:	mov    eax,0x4ad61c10
  413180:	xor    al,0x28
  413182:	iret   
  413183:	call   0x9d9a:0x2170d3e2
  41318a:	dec    esi
  41318c:	movd   DWORD PTR [ecx],mm2
  41318f:	inc    ecx
  413190:	jns    0x4131b9
  413192:	xor    ebx,DWORD PTR [edi+ebx*1+0x2bfd13bc]
  413199:	pop    ecx
  41319a:	loop   0x413185
  41319c:	dec    ebx
  41319d:	call   0x86f2:0x49c2603c
  4131a4:	(bad)
  4131a9:	cdq    
  4131aa:	pushf  
  4131ab:	jnp    0x4131f6
  4131ad:	fmul   QWORD PTR [edi+0x19c2fb76]
  4131b3:	test   eax,0x9caf1e36
  4131b8:	dec    ecx
  4131b9:	jns    0x4131e4
  4131bb:	js     0x4131b0
  4131bd:	fadd   QWORD PTR ds:0x77075b91
  4131c3:	stos   DWORD PTR es:[edi],eax
  4131c4:	dec    esi
  4131c5:	ja     0x41314b
  4131c7:	mov    eax,0x6d15727e
  4131cc:	xor    eax,0xed0a003f
  4131d1:	push   ss
  4131d2:	(bad)  
  4131d3:	les    ecx,FWORD PTR [ebx]
  4131d5:	ja     0x41321b
  4131d7:	jmp    0xb5c94c47
  4131dc:	mov    eax,0x2b017abc
  4131e1:	cli    
  4131e2:	mov    ebp,esi
  4131e4:	pop    eax
  4131e5:	rcr    esi,1
  4131e7:	xor    edi,ecx
  4131e9:	and    cl,bl
  4131eb:	xchg   edi,eax
  4131ec:	test   BYTE PTR [edi+0x57d399a6],bl
  4131f2:	jnp    0x4131b9
  4131f4:	cs leave 
  4131f6:	jb     0x4131cf
  4131f8:	jmp    0x631aa4e
  4131fd:	cs inc ebx
  4131ff:	xchg   esp,eax
  413200:	sub    dl,bh
  413202:	addr16 repz iret 
  413205:	dec    edx
  413206:	pushf  
  413207:	and    edi,DWORD PTR [eiz*1+0xc57f984]
  41320e:	les    eax,FWORD PTR [ebx]
  413210:	stos   BYTE PTR es:[edi],al
  413211:	and    edx,DWORD PTR [ebx]
  413213:	xor    BYTE PTR [ebp+0x5cc5fe64],ah
  413219:	and    ebp,ebx
  41321b:	sub    BYTE PTR [esp+eax*8-0x11],0x99
  413220:	lds    ebx,FWORD PTR gs:[si-0x70]
  413225:	mov    ds:0xc194f26c,al
  41322a:	scas   eax,DWORD PTR es:[edi]
  41322b:	sub    BYTE PTR [eax+edi*8-0x2ef3951a],cl
  413232:	pop    ds
  413233:	pusha  
  413234:	in     al,dx
  413235:	popf   
  413236:	and    BYTE PTR [ebx],ah
  413238:	cmp    ebx,DWORD PTR [edi-0x4b]
  41323b:	aam    0x2a
  41323d:	adc    bl,ah
  41323f:	sub    al,0x2e
  413241:	mov    bl,0xe5
  413243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413244:	popa   
  413245:	sbb    eax,0xb31e759
  41324a:	and    esi,DWORD PTR [edi-0x4489928]
  413250:	push   0x69
  413252:	jmp    0x727e:0x15daf7cd
  413259:	and    BYTE PTR [edi-0x3cbcfb6b],0x38
  413260:	retf   0xc704
  413263:	xor    ah,BYTE PTR [esi-0x15a39393]
  413269:	and    DWORD PTR [ecx],edi
  41326b:	mov    ah,0x9b
  41326d:	fucomi st,st(7)
  41326f:	mov    BYTE PTR [ebp+edx*8+0x39],bl
  413273:	sub    dh,bh
  413275:	and    BYTE PTR ds:0xdbd902d6,ah
  41327b:	fdivr  DWORD PTR [eax+eiz*4+0xd201d38]
  413282:	bound  esp,QWORD PTR [edi-0x2b]
  413285:	mov    ecx,0xa0c7cd3a
  41328a:	es add al,0xa2
  41328d:	adc    al,0x14
  41328f:	sub    DWORD PTR [esi+0x23],esi
  413292:	xor    BYTE PTR [edi+0x7af9bff7],ah
  413298:	out    dx,eax
  413299:	fisubr WORD PTR [ecx]
  41329b:	dec    ecx
  41329c:	push   edx
  41329d:	aaa    
  41329e:	loope  0x4132aa
  4132a0:	mov    ebp,0x28850a4f
  4132a5:	pushf  
  4132a6:	pop    esp
  4132a7:	or     al,0xaf
  4132a9:	rol    BYTE PTR [esi+0x551e4386],1
  4132af:	or     DWORD PTR ds:0x7ad54f12,esp
  4132b5:	add    esi,DWORD PTR [ebx-0x2a]
  4132b8:	push   cs
  4132b9:	adc    esi,DWORD PTR [edx-0x1bc11de0]
  4132bf:	mov    al,0xc8
  4132c1:	scas   eax,DWORD PTR es:[edi]
  4132c2:	or     eax,0xe9ba39bd
  4132c7:	out    dx,al
  4132c8:	sub    ecx,DWORD PTR [esi-0x6a]
  4132cb:	mov    DWORD PTR ss:[ecx*8-0x6e3415da],edx
  4132d3:	adc    esp,ebx
  4132d5:	jno    0x413286
  4132d7:	dec    ebx
  4132d8:	adc    ebx,DWORD PTR [esi+0x6c671494]
  4132de:	xchg   edx,eax
  4132df:	test   DWORD PTR [eax+0x11],esi
  4132e2:	out    dx,eax
  4132e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132e4:	inc    esp
  4132e5:	sub    bh,cl
  4132e7:	or     DWORD PTR [ebp+0x64],ecx
  4132ea:	aas    
  4132eb:	adc    BYTE PTR [edx],0xaf
  4132ee:	inc    ebp
  4132ef:	ds icebp 
  4132f1:	sbb    eax,0xea4d343d
  4132f6:	xchg   DWORD PTR [ecx+0x4b3324fc],eax
  4132fc:	or     BYTE PTR ds:0x2265da5d,bl
  413302:	ins    BYTE PTR es:[edi],dx
  413303:	pop    ebx
  413304:	xchg   BYTE PTR [esi+0x52],cl
  413307:	fcom   DWORD PTR [ebp+0x16a30e1]
  41330d:	sub    ch,BYTE PTR [ebp-0x7c08c874]
  413313:	and    eax,0x9b3d7068
  413318:	retf   0x724e
  41331b:	adc    dl,dh
  41331d:	jmp    0x772b:0x88b2996c
  413324:	push   ecx
  413325:	jae    0x4132e4
  413327:	cmp    BYTE PTR ds:0xf58ff2f0,al
  41332d:	and    BYTE PTR [edi+0x4],0x5c
  413331:	pop    ebp
  413332:	jl     0x41337d
  413334:	pop    ss
  413335:	push   ds
  413336:	dec    ecx
  413337:	xor    bl,BYTE PTR [esi-0x2721bdd2]
  41333d:	(bad)  
  41333e:	scas   al,BYTE PTR es:[edi]
  41333f:	loope  0x413396
  413341:	paddusw mm3,mm3
  413344:	out    0x58,eax
  413346:	aaa    
  413347:	mov    dl,0x9f
  413349:	sub    DWORD PTR [ecx+0x70697664],0x13eb130b
  413353:	jmp    0xd408:0x66f076e0
  41335a:	(bad)  [eax+0xe0245da]
  413360:	(bad)  
  413361:	repnz mov BYTE PTR [edx],al
  413364:	or     al,0x28
  413366:	jb     0x413391
  413368:	loope  0x41333d
  41336a:	pop    ss
  41336b:	adc    al,BYTE PTR [edx+0x49]
  41336e:	or     DWORD PTR [edi-0x61c3aa47],eax
  413374:	(bad)  
  413375:	aaa    
  413376:	mov    DWORD PTR [esi-0x63],esi
  413379:	setp   BYTE PTR [edx+0x738de1fc]
  413380:	ss in  eax,0xd6
  413383:	stos   BYTE PTR es:[edi],al
  413384:	add    ah,BYTE PTR [ebx-0x5772e8cb]
  41338a:	and    al,0x6a
  41338c:	cmp    al,0x3e
  41338e:	mov    ch,0xef
  413390:	mov    edx,0xea35a990
  413395:	fwait
  413396:	and    DWORD PTR [ebx-0xbf015b],eax
  41339c:	jl     0x4133f2
  41339e:	add    dl,ch
  4133a0:	sub    cl,BYTE PTR es:[ecx-0xb]
  4133a4:	mov    ebx,0x69446d2d
  4133a9:	add    ch,cl
  4133ab:	fwait
  4133ac:	mov    dh,0x8e
  4133ae:	xor    esi,DWORD PTR [edx]
  4133b0:	pop    ecx
  4133b1:	popa   
  4133b2:	mov    ebp,0xb589dab2
  4133b7:	fs ret 0x37e1
  4133bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133bc:	xchg   ecx,eax
  4133bd:	out    0x5f,al
  4133bf:	mov    dh,0x37
  4133c1:	call   0xb018a057
  4133c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133c7:	data16 out dx,al
  4133c9:	popf   
  4133ca:	xor    bl,ch
  4133cc:	add    dh,BYTE PTR [ebx+ebp*2-0x2d52aef6]
  4133d3:	imul   esi,DWORD PTR [eax+0x71],0xfffffff6
  4133d7:	test   ecx,esi
  4133d9:	and    dh,cl
  4133db:	cmp    DWORD PTR [ecx+0x1e3160c3],ecx
  4133e1:	scas   eax,DWORD PTR es:[edi]
  4133e2:	jge    0x413452
  4133e4:	ficom  DWORD PTR [ecx-0x8]
  4133e7:	leave  
  4133e8:	scas   al,BYTE PTR es:[edi]
  4133e9:	jmp    DWORD PTR ds:0xea07c936
  4133ef:	inc    ecx
  4133f0:	push   ebx
  4133f1:	out    0x5c,eax
  4133f3:	xor    eax,0xa07faec4
  4133f8:	push   ebx
  4133f9:	test   eax,0xf84ec4f4
  4133fe:	ror    DWORD PTR [eax],1
  413400:	adc    ebx,esp
  413402:	stc    
  413403:	mov    ebp,0x5bac07f7
  413408:	stc    
  413409:	mov    BYTE PTR [ebx+0x2473964b],0x66
  413410:	hlt    
  413411:	cmc    
  413412:	out    dx,eax
  413413:	pop    edi
  413414:	mov    cl,0xb6
  413416:	or     BYTE PTR [esi-0x482efde8],bl
  41341c:	mov    esp,0x2b41a2bc
  413421:	fidivr DWORD PTR ds:0x68b3acb1
  413427:	sti    
  413428:	daa    
  413429:	out    dx,al
  41342a:	ror    BYTE PTR [edi],cl
  41342c:	lods   al,BYTE PTR ds:[esi]
  41342d:	pop    es
  41342e:	inc    esi
  41342f:	leave  
  413430:	xor    BYTE PTR [edx],bh
  413432:	outs   dx,DWORD PTR ds:[esi]
  413433:	sbb    cl,BYTE PTR [ecx+0x11cea3f9]
  413439:	dec    ebp
  41343a:	loopne 0x413473
  41343c:	cs in  eax,0x16
  41343f:	inc    ebx
  413440:	lds    ebx,FWORD PTR es:[esi+0x2aa61fc7]
  413447:	dec    edi
  413448:	fnsave [eax-0x5b]
  41344b:	enter  0x6b02,0x85
  41344f:	xchg   BYTE PTR [esi-0x29],bl
  413452:	sbb    bl,BYTE PTR [ebp+0x6b]
  413455:	jmp    0xa284d289
  41345a:	fmulp  st(1),st
  41345c:	shl    DWORD PTR [edi],0x6c
  41345f:	imul   ebx,DWORD PTR [edi],0xc73abe80
  413465:	cmp    eax,0x98a0147b
  41346a:	sub    dh,dh
  41346c:	jns    0x4134c0
  41346e:	adc    eax,0x9c00431f
  413473:	fimul  DWORD PTR [eax+0x7f]
  413476:	lods   al,BYTE PTR ds:[esi]
  413477:	scas   al,BYTE PTR es:[edi]
  413478:	push   0x6d
  41347a:	enter  0xcb90,0xcd
  41347e:	(bad)  
  41347f:	call   0x6bbeeb36
  413484:	pop    eax
  413485:	(bad)  
  413486:	mov    ds:0x137f64b2,eax
  41348b:	add    al,0x5e
  41348d:	mov    al,0xae
  41348f:	mov    esi,0xd02f3ec0
  413494:	jmp    0x5617:0x9beeb96
  41349b:	(bad)  
  41349c:	or     esp,ecx
  41349e:	jo     0x41350a
  4134a0:	leave  
  4134a1:	jno    0x41350d
  4134a3:	in     al,dx
  4134a4:	loope  0x413438
  4134a6:	(bad)  
  4134a7:	clc    
  4134a8:	sub    al,0x13
  4134aa:	xchg   BYTE PTR [ecx+0x60],dl
  4134ad:	and    DWORD PTR [esi],ecx
  4134af:	sub    al,BYTE PTR [eax]
  4134b1:	mov    ecx,0x8fe2b82e
  4134b6:	retf   0xe422
  4134b9:	cmp    al,0xb0
  4134bb:	inc    esp
  4134bc:	xchg   ebp,eax
  4134be:	enter  0xe180,0xb
  4134c2:	push   ss
  4134c3:	jmp    0x7d548a7d
  4134c8:	cld    
  4134c9:	add    eax,0xf1134eb8
  4134ce:	xchg   esp,eax
  4134cf:	sahf   
  4134d0:	jmp    0xb896:0xd096ad00
  4134d7:	enter  0x781,0x1c
  4134db:	xchg   edi,eax
  4134dc:	inc    BYTE PTR [edx+0x4e]
  4134df:	mov    esi,eax
  4134e1:	(bad)  [ebp-0x4d]
  4134e4:	(bad)  
  4134e6:	jnp    0x413508
  4134e8:	rol    DWORD PTR [ebx],cl
  4134ea:	lock (bad) 
  4134ec:	push   edi
  4134ed:	std    
  4134ee:	lods   eax,DWORD PTR ds:[esi]
  4134ef:	jecxz  0x413548
  4134f1:	retf   0xa3e3
  4134f4:	push   ecx
  4134f5:	lock sti 
  4134f7:	mov    DWORD PTR [edi-0x4e101f3f],ebx
  4134fd:	std    
  4134fe:	cmc    
  4134ff:	pushf  
  413500:	jg     0x413486
  413502:	lock cs mov ch,0x25
  413506:	xor    dh,BYTE PTR [edx+0x43]
  413509:	dec    ebx
  41350a:	popa   
  41350b:	das    
  41350c:	enter  0xdcef,0xe1
  413510:	or     DWORD PTR ds:0x9a7a4ac7,esp
  413516:	into   
  413517:	retf   0x89d3
  41351a:	int    0x67
  41351c:	cmp    al,0x82
  41351e:	fst    DWORD PTR [edi]
  413520:	lods   eax,DWORD PTR ds:[esi]
  413521:	and    al,0xed
  413523:	mov    ebp,0xb8bd2e91
  413528:	cmp    al,0x85
  41352a:	mov    dl,0xd5
  41352c:	sub    BYTE PTR [esi-0x72],dl
  41352f:	cmp    BYTE PTR [esi],0xe1
  413532:	cmp    edx,DWORD PTR [esi+0x6af1f2ec]
  413538:	xor    esp,DWORD PTR [edi+0x71]
  41353b:	stos   BYTE PTR es:[edi],al
  41353c:	clc    
  41353d:	sub    bl,dl
  41353f:	shr    DWORD PTR [esi],0x4f
  413542:	out    dx,al
  413543:	aam    0xe9
  413545:	jae    0x4135bc
  413547:	pop    ebx
  413548:	or     esi,edi
  41354a:	mov    dh,0x51
  41354c:	or     al,0xbd
  41354e:	mov    edx,DWORD PTR [edx-0x2e]
  413551:	push   ebx
  413552:	or     eax,0xcc27bb38
  413557:	call   0xe76e:0x1828d2a8
  41355e:	fwait
  41355f:	ror    BYTE PTR [ecx-0x29],1
  413562:	(bad)  
  413563:	jge    0x4135e2
  413565:	mov    ch,0x92
  413567:	mov    ebx,0xd245c50c
  41356c:	lea    ebx,[edx]
  41356e:	push   ss
  41356f:	pop    ss
  413570:	pop    ds
  413571:	cwde   
  413572:	jp     0x413523
  413574:	jecxz  0x4135e3
  413576:	int    0xb3
  413578:	and    eax,0xf27200d9
  41357d:	inc    edi
  41357e:	jle    0x41357c
  413580:	out    0x58,eax
  413582:	lahf   
  413583:	xor    bl,dh
  413585:	jl     0x4135f2
  413587:	ret    
  413588:	fcom   QWORD PTR [ebx]
  41358a:	push   edx
  41358b:	and    DWORD PTR [ecx+0x3a],edi
  41358e:	adc    edx,ebp
  413590:	xchg   BYTE PTR [eax],bl
  413592:	push   ds
  413593:	sub    ebp,DWORD PTR [edx+0xeec9feb]
  413599:	jae    0x41354e
  41359b:	dec    esi
  41359c:	ins    DWORD PTR es:[edi],dx
  41359d:	dec    esi
  41359e:	imul   ecx
  4135a0:	call   0x7724:0x363c908b
  4135a7:	cmp    DWORD PTR [ecx-0x51],0x4a
  4135ab:	sub    bh,bl
  4135ad:	jmp    0xdcdc:0xa97fee21
  4135b4:	and    BYTE PTR [ebp+0x22499713],dh
  4135ba:	push   ds
  4135bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135bc:	push   ds
  4135bd:	xchg   DWORD PTR ds:0x6f5c22e7,eax
  4135c3:	fld    DWORD PTR [ecx]
  4135c5:	hlt    
  4135c6:	stc    
  4135c7:	pop    edi
  4135c8:	inc    esi
  4135c9:	iret   
  4135ca:	mov    edx,0x1ee3b075
  4135cf:	popf   
  4135d0:	lods   al,BYTE PTR ds:[esi]
  4135d1:	sbb    al,0xd4
  4135d3:	not    DWORD PTR [ebx]
  4135d5:	lea    edx,[ebx]
  4135d7:	and    ecx,ebp
  4135d9:	sub    ecx,DWORD PTR [ebp+0xe68f731]
  4135df:	in     eax,0x72
  4135e1:	cmp    ch,bl
  4135e3:	sub    eax,0xbf21b95
  4135e8:	adc    al,0x87
  4135ea:	mov    ds,eax
  4135ec:	sti    
  4135ed:	in     eax,dx
  4135ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ef:	test   eax,0x7b59afe3
  4135f4:	in     eax,0x4f
  4135f6:	pop    edi
  4135f7:	cli    
  4135f8:	jne    0x4135d6
  4135fa:	push   eax
  4135fb:	int    0xcd
  4135fd:	jl     0x413626
  4135ff:	inc    esi
  413600:	xchg   edx,eax
  413601:	push   esp
  413602:	push   esp
  413603:	sbb    BYTE PTR [esi+ebp*2-0x58],dh
  413607:	test   DWORD PTR [ecx+0x235c3ffb],esp
  41360d:	lahf   
  41360e:	sub    BYTE PTR [edx-0x8604f15],ch
  413614:	gs sub eax,0xea7d6087
  41361a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41361b:	dec    edx
  41361c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41361d:	xor    BYTE PTR [ecx+0x21e1f824],bh
  413623:	jmp    0x4135ab
  413625:	repnz in eax,dx
  413627:	xor    eax,0x7c8f3fb5
  41362c:	push   ecx
  41362d:	push   edx
  41362e:	lock movzx ebx,BYTE PTR [ecx+eax*1]
  413633:	jno    0x413620
  413635:	pop    edx
  413636:	pusha  
  413637:	jle    0x4135d6
  413639:	jnp    0x413657
  41363b:	repz mov bh,0x30
  41363e:	add    ebx,DWORD PTR [ecx-0x4e6795df]
  413644:	lahf   
  413645:	mov    esi,0x9ace8dc5
  41364a:	jecxz  0x413666
  41364c:	popa   
  41364d:	add    ebx,DWORD PTR [ebx-0x71]
  413650:	scas   al,BYTE PTR es:[edi]
  413651:	fwait
  413652:	hlt    
  413653:	xor    al,0xa8
  413655:	sbb    eax,0x3f4767de
  41365a:	inc    eax
  41365b:	and    BYTE PTR [edi],0x41
  41365e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41365f:	loopne 0x41365b
  413661:	mov    bh,0xdc
  413663:	or     eax,0xa942faf8
  413668:	add    eax,0xbb5c1cb8
  41366d:	cmp    al,0xfd
  41366f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413670:	jnp    0x4136a7
  413672:	xor    BYTE PTR [edi-0x6dd02147],bh
  413678:	sub    DWORD PTR [esi-0x6c15abf9],edx
  41367e:	mov    ch,0x95
  413680:	mov    dl,0xa8
  413682:	sub    edi,DWORD PTR [ebp-0x45348fd3]
  413688:	add    DWORD PTR [ecx-0x7cb495cc],ebp
  41368e:	add    eax,0x5394eeab
  413693:	jmp    0x55b5:0xa4186587
  41369a:	pop    ds
  41369b:	ins    BYTE PTR es:[edi],dx
  41369c:	inc    esp
  41369d:	mov    ebp,0x1dd1c201
  4136a2:	mov    ds:0x2373b301,al
  4136a7:	jmp    0x87cf:0x7316e4f4
  4136ae:	dec    edi
  4136af:	sbb    BYTE PTR [edi-0x4bc3f5ee],bl
  4136b5:	cmovno ebx,DWORD PTR es:[edi+ebx*8-0x31a9c701]
  4136be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136bf:	sbb    dl,BYTE PTR ds:0x912fd33
  4136c5:	pop    ebp
  4136c6:	fisubr DWORD PTR [ebp-0x4d52ac6]
  4136cc:	iret   
  4136cd:	inc    eax
  4136ce:	pop    esi
  4136cf:	push   ds
  4136d0:	sar    DWORD PTR [eax],cl
  4136d2:	mov    edx,0x8863f38a
  4136d7:	scas   eax,DWORD PTR es:[edi]
  4136d8:	in     ax,dx
  4136da:	retf   0x8733
  4136dd:	js     0x4136c9
  4136df:	sbb    al,dl
  4136e1:	inc    ecx
  4136e2:	mov    bl,0x2a
  4136e4:	inc    esp
  4136e5:	scas   al,BYTE PTR es:[edi]
  4136e6:	sbb    bl,dl
  4136e8:	sub    ebx,DWORD PTR [ebx]
  4136ea:	sbb    bh,BYTE PTR [ebx-0x15]
  4136ed:	(bad)  
  4136ee:	cmc    
  4136ef:	arpl   sp,ax
  4136f1:	dec    ebp
  4136f2:	sar    dh,0xbc
  4136f5:	lds    esp,FWORD PTR [ebx]
  4136f7:	cmp    al,0xad
  4136f9:	xor    eax,DWORD PTR [ebx-0x7a]
  4136fc:	cmp    eax,DWORD PTR [ebp-0x50]
  4136ff:	iret   
  413700:	in     eax,0xe0
  413702:	cmp    eax,0xaab9c6fa
  413707:	mov    ecx,0x359609fa
  41370c:	mov    bh,0x50
  41370e:	jge    0x4136ff
  413710:	pop    es
  413711:	push   ebx
  413712:	stos   DWORD PTR es:[edi],eax
  413713:	mov    al,0xd0
  413715:	out    dx,eax
  413716:	push   ds
  413717:	xor    esp,esi
  413719:	cli    
  41371a:	out    0xac,al
  41371c:	push   ecx
  41371d:	test   bl,al
  41371f:	dec    edx
  413720:	xchg   esi,eax
  413721:	popa   
  413722:	imul   eax,DWORD PTR [eax+edx*4+0x52],0x7579642c
  41372a:	push   0xffffffee
  41372c:	repz cmc 
  41372e:	cs iret 
  413730:	mov    edi,0x6984f085
  413735:	into   
  413736:	jns    0x4136fc
  413738:	pop    edx
  413739:	mov    ebp,0x19e8f58
  41373e:	(bad)  
  41373f:	pop    ss
  413740:	cmp    bh,bh
  413742:	xor    esi,ebx
  413744:	add    BYTE PTR [eax-0x13],0xf7
  413748:	add    eax,0x8b89cf8
  41374d:	jb     0x4137a8
  41374f:	std    
  413750:	(bad)  
  413751:	cmp    DWORD PTR [edx-0x21],edx
  413754:	and    al,0xf4
  413756:	outs   dx,DWORD PTR ds:[esi]
  413757:	loopne 0x4137ad
  413759:	xchg   DWORD PTR [ebx+0x4f7805dd],esi
  41375f:	or     cl,BYTE PTR [edx]
  413761:	mov    al,0x82
  413763:	pop    ds
  413764:	mov    ah,0x33
  413766:	xchg   ecx,eax
  413767:	cmc    
  413768:	stc    
  413769:	mov    ds:0x9090322b,eax
  41376e:	sub    DWORD PTR [eax-0x6],edi
  413771:	mov    esp,0xd0f93709
  413776:	outs   dx,BYTE PTR ds:[esi]
  413777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413778:	sbb    ecx,DWORD PTR [edi+0x3dbf6f6c]
  41377e:	sub    al,0x2f
  413780:	(bad)  
  413782:	cli    
  413783:	xor    ebx,edx
  413785:	cdq    
  413786:	jo     0x41370f
  413788:	mov    ebp,esi
  41378a:	xor    cl,al
  41378c:	jmp    0x7669:0xa6eccd7f
  413793:	rcl    BYTE PTR [edx+eax*2],0xcb
  413797:	mov    edx,DWORD PTR [ebx-0x29]
  41379a:	xchg   esp,eax
  41379b:	cli    
  41379c:	imul   edx,DWORD PTR [edi+ebp*2-0x2c],0xff52bb06
  4137a4:	jb     0x413811
  4137a6:	je     0x413731
  4137a8:	and    bl,BYTE PTR [ecx-0x1504fb7d]
  4137ae:	ins    DWORD PTR es:[edi],dx
  4137af:	lock jns 0x4137db
  4137b2:	add    DWORD PTR [esi],esi
  4137b4:	adc    BYTE PTR [edi-0x154e912b],ch
  4137ba:	test   DWORD PTR [ecx],0x3474ae0b
  4137c0:	lods   al,BYTE PTR ds:[esi]
  4137c1:	popf   
  4137c2:	clc    
  4137c3:	sahf   
  4137c4:	inc    esi
  4137c5:	add    eax,0x92b0941e
  4137ca:	fdiv   QWORD PTR [ecx]
  4137cc:	sbb    DWORD PTR [esi+0x41db1020],edi
  4137d2:	jo     0x413781
  4137d4:	mov    ebp,0xf27a46c4
  4137d9:	mov    gs,WORD PTR [esi-0x33]
  4137dc:	inc    esp
  4137dd:	mov    ds:0x4b2142c0,al
  4137e2:	shl    BYTE PTR [ebp-0x48cc83b0],0xf
  4137e9:	inc    esi
  4137ea:	mov    al,0x3a
  4137ec:	mov    edi,0x98f2c840
  4137f1:	pop    ebp
  4137f2:	jnp    0x41384a
  4137f4:	imul   ecx,DWORD PTR [edi],0x43
  4137f7:	push   ebp
  4137f8:	inc    edx
  4137f9:	push   esi
  4137fa:	mov    BYTE PTR [ecx],bh
  4137fc:	sahf   
  4137fd:	pop    esi
  4137fe:	repnz xor al,0x7b
  413801:	mov    ebx,0x8eb3793a
  413806:	imul   eax,DWORD PTR [esp+eax*4-0x327d724b],0xe4a39152
  413811:	mov    eax,0xda0db0f4
  413816:	out    0xd,al
  413818:	fidiv  WORD PTR [esi-0x2c]
  41381b:	pop    edi
  41381c:	jge    0x4137f9
  41381e:	and    al,0x5d
  413820:	test   BYTE PTR [edi-0x6b],ah
  413823:	(bad)  
  413824:	ss cmp al,0x1e
  413827:	mov    DWORD PTR [eax+ecx*4+0x5a68f0db],ebx
  41382e:	int3   
  41382f:	xlat   BYTE PTR ds:[ebx]
  413830:	xor    DWORD PTR ds:0xbba0d45b,0x31
  413837:	sub    DWORD PTR [edi],esp
  413839:	mov    ah,BYTE PTR ds:0x574e41d8
  41383f:	aas    
  413840:	lock adc DWORD PTR [ecx],edi
  413843:	sbb    al,0x3b
  413845:	scas   eax,DWORD PTR es:[edi]
  413846:	popa   
  413847:	pop    esi
  413848:	and    ebp,DWORD PTR [esi+0x2a]
  41384b:	pop    ebx
  41384c:	jl     0x413802
  41384e:	mov    eax,es
  413850:	xchg   esp,eax
  413851:	push   0xffffffe8
  413853:	cmp    DWORD PTR es:0x3f5607f0,ebp
  41385a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41385b:	fbld   TBYTE PTR [edx-0x333789eb]
  413861:	mov    ah,0x37
  413863:	and    dl,BYTE PTR [edx+0x4192ef13]
  413869:	mov    eax,ds:0x5e03f4a6
  41386e:	retf   0x5efc
  413871:	scas   al,BYTE PTR es:[edi]
  413872:	xor    al,0xc8
  413874:	pop    esp
  413875:	inc    edi
  413876:	push   es
  413877:	cmp    ah,BYTE PTR [ecx-0x4e768dfb]
  41387d:	sbb    ebp,DWORD PTR [eax-0x23f83f55]
  413883:	adc    eax,0x5a22d7fd
  413888:	push   ss
  413889:	jo     0x4138cb
  41388b:	loop   0x4138f8
  41388d:	call   0x1ff8:0x6dbf9863
  413894:	cmp    ecx,DWORD PTR [esi-0x46]
  413897:	loop   0x413880
  413899:	js     0x413841
  41389b:	dec    eax
  41389c:	out    dx,al
  41389d:	es push 0x56f9cfc7
  4138a3:	mov    ch,0xe3
  4138a5:	ins    BYTE PTR es:[edi],dx
  4138a6:	lds    edx,FWORD PTR [ebx]
  4138a8:	loopne 0x41383c
  4138aa:	ja     0x413923
  4138ac:	int    0xe6
  4138ae:	(bad)  
  4138b1:	inc    esp
  4138b2:	scas   al,BYTE PTR es:[edi]
  4138b3:	push   0x7162f9aa
  4138b8:	mov    cl,0xf3
  4138ba:	ja     0x4138d2
  4138bc:	xor    BYTE PTR [esp-0x7429510],0xd5
  4138c4:	adc    DWORD PTR [eax+edi*4-0x23],ecx
  4138c8:	loope  0x41393a
  4138ca:	mov    esp,DWORD PTR [eax-0x18]
  4138cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138ce:	sub    DWORD PTR [ebx],ecx
  4138d0:	push   0x8d531bde
  4138d5:	jae    0x413861
  4138d7:	mov    ah,0x2
  4138d9:	out    dx,eax
  4138da:	inc    edi
  4138db:	jmp    0x25c9:0x8f559bc0
  4138e2:	scas   eax,DWORD PTR es:[edi]
  4138e3:	xor    ebx,eax
  4138e5:	and    DWORD PTR ds:0x42b01c,0x4e66
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413cbc
  413cce:	mov    edi,0x8a144bdd
  413cd3:	jl     0x413d51
  413cd5:	inc    eax
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	jp     0x413d39
  413cdb:	(bad)  
  413cdd:	test   al,0x7b
  413cdf:	push   eax
  413ce0:	mov    ch,0xb6
  413ce2:	outs   dx,BYTE PTR ds:[esi]
  413ce3:	or     eax,0xd28f6495
  413ce8:	dec    ebp
  413ce9:	cmp    ebp,ecx
  413ceb:	or     BYTE PTR [edi],ch
  413ced:	adc    esp,DWORD PTR [eax+0x36e937cf]
  413cf3:	ss mov esp,0xfe343487
  413cf9:	jg     0x413d38
  413cfb:	add    DWORD PTR [ebx-0x746c8483],0xcae76219
  413d05:	ror    BYTE PTR [edi+0x43],0xd1
  413d09:	or     DWORD PTR [ecx],ebx
  413d0b:	loope  0x413cfd
  413d0d:	in     eax,dx
  413d0e:	inc    edx
  413d0f:	xor    BYTE PTR [ecx+eiz*4],ah
  413d12:	test   DWORD PTR [ebp+0x7a5e549d],esi
  413d18:	mov    WORD PTR [eax],ds
  413d1a:	(bad)  
  413d1b:	mov    ecx,0xe439e55b
  413d20:	sub    BYTE PTR [ecx-0x5f],dh
  413d23:	push   0x47
  413d25:	xchg   ecx,eax
  413d26:	sbb    bl,BYTE PTR ds:0xd0ca42c2
  413d2c:	(bad)  
  413d2d:	lock pop esp
  413d2f:	mov    ecx,0x8b3b3e2c
  413d34:	in     al,dx
  413d35:	mov    ch,BYTE PTR [edx+0x68dadbc1]
  413d3b:	rol    BYTE PTR [ebx+0x5d],1
  413d3e:	(bad)  
  413d3f:	loopne 0x413d4e
  413d41:	mov    cl,0x9
  413d43:	aas    
  413d44:	mov    al,ds:0xcda2b158
  413d49:	add    DWORD PTR [edi+0x33b3c0f1],ecx
  413d4f:	(bad)  
  413d50:	xchg   ebx,eax
  413d51:	jb     0x413cd9
  413d53:	clc    
  413d54:	mov    eax,0x5e912b02
  413d59:	jp     0x413d99
  413d5b:	std    
  413d5c:	mov    BYTE PTR [ecx-0x11ac130f],bl
  413d62:	call   0x71f3:0x42b56737
  413d69:	add    eax,DWORD PTR [eax+esi*1+0x79b65174]
  413d70:	dec    eax
  413d71:	cdq    
  413d72:	push   ebx
  413d73:	int3   
  413d74:	popa   
  413d75:	xchg   ebx,eax
  413d76:	and    edi,esi
  413d78:	add    eax,0x4b6a1a5e
  413d7d:	in     al,0x91
  413d7f:	call   0x4fa4:0x8638b5d4
  413d86:	push   0x2838eef7
  413d8b:	fisubr DWORD PTR [ebp-0x33]
  413d8e:	in     al,0x20
  413d90:	push   edi
  413d91:	cmp    ah,dl
  413d93:	dec    edi
  413d94:	sub    DWORD PTR [ecx-0x1c],0xffffffaf
  413d98:	dec    edi
  413d99:	push   esp
  413d9a:	jnp    0x413e0a
  413d9c:	nop
  413d9d:	imul   edi,DWORD PTR [edx],0xffffffdd
  413da0:	stc    
  413da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413da2:	and    al,0x63
  413da4:	xchg   ecx,eax
  413da5:	dec    esi
  413da6:	pop    esp
  413da7:	int    0x16
  413da9:	dec    ecx
  413daa:	pop    edx
  413dab:	rol    dl,1
  413dad:	rcl    edi,1
  413daf:	pop    edi
  413db0:	aas    
  413db1:	mov    ecx,0xf7b0917c
  413db6:	dec    edx
  413db7:	(bad)  
  413db8:	sbb    eax,0xa501e063
  413dbd:	cmp    dl,BYTE PTR [eax+0x428e0a34]
  413dc3:	arpl   WORD PTR [ecx+0x61],bp
  413dc6:	pop    edi
  413dc7:	das    
  413dc8:	mov    ds:0x48039838,al
  413dcd:	loope  0x413dfd
  413dcf:	mov    dl,0xa
  413dd1:	sub    eax,0xd030a123
  413dd6:	mov    esi,0xc747cfbb
  413ddb:	repnz cli 
  413ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dde:	dec    ecx
  413ddf:	loope  0x413e0f
  413de1:	(bad)
  413de4:	or     ebx,DWORD PTR [edi+0x71]
  413de7:	xor    esi,DWORD PTR [eax+0x3cafc03e]
  413ded:	aas    
  413dee:	push   esp
  413def:	mov    bh,0xf0
  413df1:	call   0x25e84753
  413df6:	imul   esi,DWORD PTR [esi+0x24],0x77585be8
  413dfd:	or     cl,BYTE PTR [edx+0x44]
  413e00:	lods   al,BYTE PTR ds:[esi]
  413e01:	jp     0x413e36
  413e03:	ins    DWORD PTR es:[edi],dx
  413e04:	mov    eax,ds:0x4f4abf29
  413e09:	outs   dx,DWORD PTR ds:[esi]
  413e0a:	out    0xa0,al
  413e0c:	dec    ebp
  413e0d:	mov    al,0xf1
  413e0f:	adc    eax,0x2e548e94
  413e14:	imul   esp,DWORD PTR [esi-0x4b],0x67264646
  413e1b:	mov    ch,0x70
  413e1d:	es xchg ecx,eax
  413e1f:	xor    BYTE PTR [esi-0x1c1aa1c7],0x5b
  413e26:	into   
  413e27:	fisttp DWORD PTR [esi]
  413e29:	imul   edi,DWORD PTR [ecx-0x56d6cc43],0x4584f93e
  413e33:	sbb    ecx,DWORD PTR [esi+0x21]
  413e36:	mov    dh,BYTE PTR [ebx+0x3d]
  413e39:	(bad)  
  413e3a:	xor    bl,bh
  413e3c:	jae    0x413e25
  413e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e3f:	test   eax,0x4a83417
  413e44:	rcl    ebx,0xe8
  413e47:	leave  
  413e48:	cs retf 0xba35
  413e4c:	mov    edi,0xae7cb532
  413e51:	jmp    0x548ba05
  413e56:	xor    ebp,0x31bdc7bb
  413e5c:	rol    BYTE PTR [ecx],0x8d
  413e5f:	sbb    eax,0xdac079e5
  413e64:	dec    ebp
  413e65:	jg     0x413e72
  413e67:	push   cs
  413e68:	mov    ecx,0x9719edec
  413e6d:	sar    BYTE PTR [ecx],0xb3
  413e70:	pop    DWORD PTR [eax]
  413e72:	jns    0x413eda
  413e74:	adc    DWORD PTR [ebp-0x3f],edi
  413e77:	lea    esi,[ecx+0x13]
  413e7a:	ins    BYTE PTR es:[edi],dx
  413e7b:	sar    dh,0x7
  413e7e:	scas   eax,DWORD PTR es:[edi]
  413e7f:	xlat   BYTE PTR ds:[ebx]
  413e80:	and    DWORD PTR [edi+esi*1+0x570190d4],eax
  413e87:	xchg   edx,eax
  413e88:	mov    WORD PTR [ecx],ss
  413e8a:	sub    eax,edi
  413e8c:	in     al,0xdb
  413e8e:	movntps XMMWORD PTR [edi-0x67861229],xmm2
  413e95:	xor    al,0x5f
  413e97:	test   BYTE PTR [esi-0x12e3a34f],ch
  413e9d:	call   DWORD PTR [eax]
  413e9f:	inc    ebp
  413ea0:	lods   al,BYTE PTR ds:[esi]
  413ea1:	fisttp QWORD PTR [ecx]
  413ea3:	mov    ch,0x11
  413ea5:	les    edx,FWORD PTR [edx*2-0x18956f92]
  413eac:	xor    BYTE PTR [edi+0x68],bl
  413eaf:	(bad)  
  413eb1:	aam    0x7c
  413eb3:	xchg   ebp,eax
  413eb4:	ds test al,0x61
  413eb7:	loopne 0x413f35
  413eb9:	lock push 0x5
  413ebc:	push   ecx
  413ebd:	out    0xb3,al
  413ebf:	sbb    eax,0x4541bff6
  413ec4:	sbb    al,0xe
  413ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec7:	add    BYTE PTR [edx+eiz*4+0x4],0x34
  413ecc:	add    DWORD PTR [ecx],ecx
  413ece:	sub    ah,ch
  413ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ed1:	lea    ebx,[ebp+0x45]
  413ed4:	adc    dh,dl
  413ed6:	dec    DWORD PTR [ebx-0x737b0511]
  413edc:	jns    0x413f0c
  413ede:	pop    ebx
  413edf:	lea    ecx,[edi-0x25e11d92]
  413ee5:	popf   
  413ee6:	popf   
  413ee7:	push   ebp
  413ee8:	xlat   BYTE PTR ds:[ebx]
  413ee9:	daa    
  413eea:	push   0xaeb683a1
  413eef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ef0:	push   DWORD PTR [ebx-0x44]
  413ef3:	xchg   DWORD PTR [ebx-0x10],esp
  413ef6:	lods   eax,DWORD PTR ds:[esi]
  413ef7:	enter  0xeca3,0x88
  413efb:	mov    ch,0x81
  413efd:	fmul   QWORD PTR [esi-0x1f31c4e9]
  413f03:	test   eax,0x50837ef6
  413f08:	or     bl,BYTE PTR [ebx-0x31]
  413f0b:	push   ecx
  413f0c:	jo     0x413f7e
  413f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f0f:	dec    ebx
  413f10:	in     eax,dx
  413f11:	outs   dx,BYTE PTR ds:[esi]
  413f12:	bound  ebx,QWORD PTR [ebp+ebx*8-0x1cc72594]
  413f19:	cmp    eax,0xa1ce6009
  413f1e:	mov    al,0x11
  413f20:	and    BYTE PTR [ecx],cl
  413f22:	xor    al,0xa1
  413f24:	outs   dx,DWORD PTR ds:[esi]
  413f25:	ins    DWORD PTR es:[edi],dx
  413f26:	mov    bh,0x3e
  413f28:	mov    cl,0x99
  413f2a:	add    al,0xa3
  413f2c:	sub    BYTE PTR [esi-0x58],bl
  413f2f:	test   DWORD PTR [ecx+0xe],edi
  413f32:	mov    esi,0x8cfecd47
  413f37:	mov    al,0x6
  413f39:	jl     0x413efd
  413f3b:	cwde   
  413f3c:	lods   eax,DWORD PTR ds:[esi]
  413f3d:	jne    0x413f34
  413f3f:	pop    edi
  413f40:	mov    ebx,0x3ae0073f
  413f45:	push   0xffffff91
  413f47:	into   
  413f48:	test   BYTE PTR [eax-0x66562190],cl
  413f4e:	addr16 jo 0x413ed9
  413f51:	iret   
  413f52:	xchg   ecx,eax
  413f53:	(bad)  
  413f55:	xchg   edx,eax
  413f56:	mov    bh,0x1f
  413f58:	sar    DWORD PTR [ecx+0x6b],1
  413f5b:	sbb    BYTE PTR [esi],dh
  413f5d:	sbb    ecx,eax
  413f5f:	xchg   esp,eax
  413f60:	outs   dx,BYTE PTR ds:[esi]
  413f61:	(bad)  
  413f62:	sub    BYTE PTR [edi+0x45],al
  413f65:	stc    
  413f66:	mov    cl,0x74
  413f68:	ja     0x413f74
  413f6a:	xor    BYTE PTR [ebx],cl
  413f6c:	push   cs
  413f6d:	add    BYTE PTR [edi-0x4517fab2],ah
  413f73:	adc    eax,0x352fed6f
  413f78:	add    dh,al
  413f7a:	sub    BYTE PTR [edx-0x611a2186],0xb6
  413f81:	sub    ch,dl
  413f83:	outs   dx,BYTE PTR ds:[esi]
  413f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f85:	stc    
  413f86:	and    al,dh
  413f88:	je     0x413f87
  413f8a:	mov    esi,0x55c0b85f
  413f8f:	jmp    0xb453:0x532dafe8
  413f96:	(bad)  
  413f97:	out    dx,al
  413f98:	sub    DWORD PTR [ebp+0x71cdf547],ebp
  413f9e:	clc    
  413f9f:	cld    
  413fa0:	jle    0x413fed
  413fa2:	jl     0x413fb5
  413fa4:	daa    
  413fa5:	popf   
  413fa6:	je     0x413ffb
  413fa8:	mov    ds:0x4eeca527,eax
  413fad:	popa   
  413fae:	cs jge 0x413f6a
  413fb1:	pop    esp
  413fb2:	test   DWORD PTR [esi],edi
  413fb4:	dec    BYTE PTR [edx-0x1b5c450a]
  413fba:	std    
  413fbb:	push   0x7f
  413fbd:	xor    bl,BYTE PTR [ebp-0x29]
  413fc0:	push   0xc7d3d420
  413fc5:	(bad)  
  413fc6:	xchg   esp,eax
  413fc7:	lods   eax,DWORD PTR ds:[esi]
  413fc8:	in     al,0xb3
  413fca:	cmp    eax,0x28049550
  413fcf:	xchg   ebx,eax
  413fd0:	ins    BYTE PTR es:[edi],dx
  413fd1:	and    ah,ah
  413fd3:	in     eax,0xa7
  413fd5:	sub    bh,BYTE PTR [esi]
  413fd7:	xchg   bl,bh
  413fd9:	mov    esp,0x99016d5e
  413fde:	fcom   DWORD PTR [ecx-0x4a]
  413fe1:	ins    BYTE PTR es:[edi],dx
  413fe2:	push   esp
  413fe3:	sbb    DWORD PTR [ebx+0x47],ebp
  413fe6:	dec    esp
  413fe7:	(bad)  
  413fe8:	enterw 0x8201,0x31
  413fed:	fcmovnbe st,st(0)
  413fef:	sahf   
  413ff0:	or     edx,DWORD PTR [esi]
  413ff2:	sub    ch,BYTE PTR ds:0x12cb545c
  413ff8:	sub    ecx,edx
  413ffa:	inc    esp
  413ffb:	jnp    0x414016
  413ffd:	rcl    dh,1
  413fff:	mov    dh,0xcc
  414001:	scas   eax,DWORD PTR es:[edi]
  414002:	fstp   DWORD PTR [edi+0x1b]
  414005:	stos   BYTE PTR es:[edi],al
  414006:	lods   al,BYTE PTR ds:[esi]
  414007:	xchg   BYTE PTR [eax+0x76b2e17c],ah
  41400d:	fist   DWORD PTR [edi-0x1c]
  414010:	ret    
  414011:	sbb    eax,0x47c1d524
  414016:	addr16 xchg ecx,eax
  414018:	ja     0x413fe7
  41401a:	clc    
  41401b:	jns    0x41406e
  41401d:	lods   eax,DWORD PTR ds:[esi]
  41401e:	cmp    esp,DWORD PTR [ebx-0x5261651e]
  414024:	mov    dl,0x4a
  414026:	or     esp,edx
  414028:	dec    ebp
  414029:	arpl   WORD PTR [ebx+eiz*4-0x2a29fa0d],ax
  414030:	adc    eax,0xa7768d39
  414035:	xchg   BYTE PTR ds:0x2c3e3de4,al
  41403b:	adc    al,0x28
  41403d:	or     al,0x78
  41403f:	mov    ch,0xf7
  414041:	inc    edi
  414042:	out    dx,eax
  414043:	jno    0x413ff9
  414045:	test   DWORD PTR [edx-0x1464bb70],ecx
  41404b:	pop    ebx
  41404c:	pop    esp
  41404d:	xor    edi,DWORD PTR [eax+0x5]
  414050:	out    0xfe,eax
  414052:	jmp    0xdeac:0xbfac2d7b
  414059:	jp     0x414047
  41405b:	in     eax,0xcd
  41405d:	adc    DWORD PTR [ecx+0x1b603e78],esi
  414063:	imul   dl
  414065:	aaa    
  414066:	call   0x8fa9:0xc35be0ea
  41406d:	mov    ah,0xa4
  41406f:	or     DWORD PTR [eax],0x41
  414072:	pop    edi
  414073:	(bad)  
  414074:	out    0xcf,eax
  414076:	sbb    dl,BYTE PTR [ebp-0xdd3f70c]
  41407c:	es out 0xcb,al
  41407f:	int    0x81
  414081:	mov    dl,BYTE PTR ds:0xed76112e
  414087:	sbb    ch,BYTE PTR [edx+ebp*2]
  41408a:	add    eax,0x3edc8353
  41408f:	jb     0x414106
  414091:	sbb    DWORD PTR [ebx-0x32],0x32
  414095:	leave  
  414096:	push   ecx
  414097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414098:	out    dx,al
  414099:	cs dec ecx
  41409b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41409c:	int    0x19
  41409e:	jmp    0x41404a
  4140a0:	xor    ch,0x26
  4140a3:	fild   WORD PTR cs:[eax-0x3]
  4140a7:	sub    BYTE PTR [edx],al
  4140a9:	rol    DWORD PTR [esi],1
  4140ab:	jbe    0x414107
  4140ad:	cmp    ch,BYTE PTR [ebp-0x56]
  4140b0:	scas   eax,DWORD PTR es:[edi]
  4140b1:	mov    esi,0x5b3cbed
  4140b6:	(bad)  
  4140b7:	repz add BYTE PTR [esi],0x39
  4140bb:	jne    0x414126
  4140bd:	cmp    BYTE PTR [ebp+eax*1-0x42],0x71
  4140c2:	jne    0x414084
  4140c4:	dec    ecx
  4140c5:	std    
  4140c6:	hlt    
  4140c7:	xchg   edx,eax
  4140c8:	push   es
  4140c9:	scas   eax,DWORD PTR es:[edi]
  4140ca:	mov    ah,0x7c
  4140cc:	test   BYTE PTR [edx],bl
  4140ce:	mov    edx,0xe2aa01ff
  4140d3:	fcmovb st,st(4)
  4140d5:	or     DWORD PTR [eax],ebx
  4140d7:	inc    esp
  4140d8:	outs   dx,DWORD PTR ds:[esi]
  4140d9:	fisttp DWORD PTR [eax]
  4140db:	jnp    0x4140d0
  4140dd:	mov    dl,0x4e
  4140df:	push   0x757b9fdb
  4140e4:	popf   
  4140e5:	push   esp
  4140e6:	mov    al,ds:0xdf13d140
  4140eb:	jb     0x4140a9
  4140ed:	cmp    dh,BYTE PTR [ecx+0x1c]
  4140f0:	inc    eax
  4140f1:	mov    ebx,esi
  4140f3:	lock push ds
  4140f5:	fsubr  DWORD PTR [edi]
  4140f7:	jp     0x41416a
  4140f9:	and    edx,esp
  4140fb:	sbb    edx,DWORD PTR ds:0xaa64453d
  414101:	add    eax,0xe946846d
  414106:	retf   0xd997
  414109:	ins    DWORD PTR es:[edi],dx
  41410a:	hlt    
  41410b:	mov    ?,WORD PTR [ebx+ebp*8]
  41410e:	mov    bl,ch
  414110:	loopne 0x41415a
  414112:	xchg   BYTE PTR [ebp-0x1e],bh
  414115:	(bad)  
  414116:	mov    ecx,0xfd292db0
  41411b:	mov    ch,0x68
  41411d:	push   edx
  41411e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41411f:	and    ecx,DWORD PTR [edi]
  414121:	int3   
  414122:	mov    edx,0x90b1cb51
  414127:	out    dx,al
  414128:	std    
  414129:	add    eax,0x687301ec
  41412e:	inc    ebp
  41412f:	inc    esp
  414130:	nop
  414131:	pop    edi
  414132:	(bad)  
  414133:	cld    
  414134:	xor    eax,0xd9d24746
  414139:	inc    ebx
  41413a:	mov    ebp,0x3996a200
  41413f:	sar    DWORD PTR [ebp+0x4bbd2fc2],1
  414145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414146:	mov    ?,WORD PTR [eax]
  414148:	retf   0xec14
  41414b:	adc    cl,BYTE PTR [eax+0xb]
  41414e:	das    
  41414f:	frstor [edi+ebx*4]
  414152:	jge    0x414118
  414154:	jae    0x4140ea
  414156:	jnp    0x41410c
  414158:	dec    ecx
  414159:	xchg   edi,eax
  41415a:	pop    edx
  41415b:	aas    
  41415c:	add    DWORD PTR [edx+ebp*1],edi
  41415f:	sub    edx,DWORD PTR [edx+0x7c]
  414162:	pop    edi
  414163:	(bad)  
  414165:	stos   BYTE PTR es:[edi],al
  414166:	pop    eax
  414167:	clc    
  414168:	inc    ebp
  414169:	sbb    bh,dl
  41416b:	add    ah,BYTE PTR [eax-0x4fba6d27]
  414171:	pusha  
  414172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414173:	adc    dh,BYTE PTR [esi-0x80]
  414176:	repnz xor al,bl
  414179:	sbb    al,0xb
  41417b:	push   ds
  41417c:	push   ss
  41417d:	pop    esp
  41417e:	push   ss
  41417f:	pop    ecx
  414180:	nop
  414181:	and    dh,BYTE PTR [edx+0x7a]
  414184:	fcomip st,st(4)
  414186:	inc    ebx
  414187:	mov    al,ds:0x48b28836
  41418c:	in     al,dx
  41418d:	xlat   BYTE PTR ds:[ebx]
  41418e:	mov    edx,0xb62070d
  414193:	cmp    bl,al
  414195:	daa    
  414196:	cmp    ebp,DWORD PTR [esi+0x78]
  414199:	mov    bh,dl
  41419b:	test   eax,0x4a93aab9
  4141a0:	daa    
  4141a1:	das    
  4141a2:	cmc    
  4141a3:	test   BYTE PTR [eax],bl
  4141a5:	test   BYTE PTR ds:0xa9ba7e7a,0x3b
  4141ac:	mov    esp,0x3696ac45
  4141b1:	cmp    al,0xdc
  4141b3:	in     al,dx
  4141b4:	retf   
  4141b5:	xor    eax,eax
  4141b7:	jne    0x414185
  4141b9:	add    edx,esi
  4141bb:	retf   0x5f23
  4141be:	das    
  4141bf:	cmp    al,0x60
  4141c1:	ins    BYTE PTR es:[edi],dx
  4141c2:	shr    DWORD PTR [edx],0x94
  4141c5:	sbb    BYTE PTR [ebp-0x5626cdf1],0x36
  4141cc:	and    eax,esi
  4141ce:	sar    DWORD PTR [ecx+0x4831299],1
  4141d4:	in     eax,0x31
  4141d6:	popf   
  4141d7:	ds jmp 0x414172
  4141da:	adc    al,0xb
  4141dc:	cdq    
  4141dd:	ins    BYTE PTR es:[edi],dx
  4141de:	mov    dl,0xab
  4141e0:	stos   BYTE PTR es:[edi],al
  4141e1:	add    DWORD PTR [ecx+0x8c1567c],ebx
  4141e7:	and    ebp,DWORD PTR ds:0x755d1ba3
  4141ed:	and    BYTE PTR [esi+0x60],bh
  4141f0:	je     0x4141b7
  4141f2:	lock out dx,al
  4141f4:	lods   eax,DWORD PTR ds:[esi]
  4141f5:	mov    al,0xaf
  4141f7:	xchg   ebp,eax
  4141f8:	stos   BYTE PTR es:[edi],al
  4141f9:	push   cs
  4141fa:	leave  
  4141fb:	cmc    
  4141fc:	and    dh,BYTE PTR [ecx-0x217a3b98]
  414202:	inc    ebp
  414203:	dec    ebp
  414204:	jle    0x4141d1
  414206:	jo     0x4141d8
  414208:	retw   0x63d
  41420c:	add    ch,0x47
  41420f:	fisub  DWORD PTR [ecx-0xd46ebaf]
  414215:	loopne 0x41427d
  414217:	retf   0x83e
  41421a:	outs   dx,BYTE PTR ds:[esi]
  41421b:	iret   
  41421c:	adc    ebp,DWORD PTR [edx-0x24]
  41421f:	add    cl,ah
  414221:	int3   
  414222:	ins    DWORD PTR es:[edi],dx
  414223:	sbb    eax,0xbb42a19e
  414228:	aaa    
  414229:	or     eax,0x5f8e3f9a
  41422e:	repz pop esi
  414230:	jmp    0x414268
  414232:	xchg   ebx,eax
  414233:	xchg   esp,eax
  414234:	clc    
  414235:	stc    
  414236:	aaa    
  414237:	dec    edx
  414238:	cmp    ebp,esi
  41423a:	rcl    bh,1
  41423c:	and    al,0x11
  41423e:	das    
  41423f:	lods   eax,DWORD PTR ds:[esi]
  414240:	push   ds
  414241:	cmp    al,0xa7
  414243:	aam    0x34
  414245:	(bad)  
  414246:	cmp    DWORD PTR [ecx-0x7c5aba4c],edx
  41424c:	mov    esp,DWORD PTR [ebp+0x4d3f1278]
  414252:	wrmsr  
  414254:	arpl   cx,bp
  414256:	mov    dl,0x19
  414258:	mov    bh,0xe3
  41425a:	lea    ecx,[ecx-0x66]
  41425d:	push   esi
  41425e:	add    BYTE PTR [eax],ch
  414260:	mov    ch,0x45
  414262:	fxch   st(1)
  414264:	jns    0x4142af
  414266:	sbb    ch,BYTE PTR [ecx+0x6c28d6b4]
  41426c:	add    bl,bl
  41426e:	and    DWORD PTR [eax-0x766e1427],esi
  414274:	jle    0x4141fb
  414276:	mov    ebp,0x72910a37
  41427b:	dec    edi
  41427c:	and    BYTE PTR [ebx-0x6141f952],ch
  414282:	std    
  414283:	dec    ebp
  414284:	pop    esi
  414285:	adc    DWORD PTR [ebx],0xe7d1fcbd
  41428b:	mov    ecx,0x9b93f529
  414290:	xor    BYTE PTR [edi],ah
  414292:	cli    
  414293:	and    eax,0x839d5307
  414298:	bound  ecx,QWORD PTR [edi-0x39]
  41429b:	test   al,0x88
  41429d:	leave  
  41429e:	ficom  WORD PTR [edi]
  4142a0:	(bad)  
  4142a1:	lods   eax,DWORD PTR ds:[esi]
  4142a2:	arpl   si,sp
  4142a4:	dec    edx
  4142a5:	sti    
  4142a6:	sahf   
  4142a7:	dec    eax
  4142a8:	lods   al,BYTE PTR ds:[esi]
  4142a9:	xor    edi,DWORD PTR [ebp+0x56]
  4142ac:	pusha  
  4142ad:	mov    eax,DWORD PTR [ecx+0x42]
  4142b0:	xchg   esi,eax
  4142b1:	pop    esi
  4142b2:	int3   
  4142b3:	aas    
  4142b4:	xchg   ebp,eax
  4142b5:	xchg   esp,eax
  4142b6:	xchg   ebx,eax
  4142b7:	rcl    BYTE PTR [ebx],cl
  4142b9:	pop    ss
  4142ba:	mov    esi,edx
  4142bc:	and    ecx,DWORD PTR [edi+0x38]
  4142bf:	aaa    
  4142c0:	fcompp 
  4142c2:	and    al,0xb9
  4142c4:	mov    eax,0x7af7c737
  4142c9:	inc    ebx
  4142ca:	adc    eax,0xfa011057
  4142cf:	push   edi
  4142d0:	(bad)  
  4142d2:	jle    0x414273
  4142d4:	ffreep st(0)
  4142d6:	test   BYTE PTR [eax+ebx*8+0x23ee67],cl
  4142dd:	shr    BYTE PTR [edi-0x9],1
  4142e0:	cmp    DWORD PTR [edi],0xffffffdc
  4142e3:	cwde   
  4142e4:	add    eax,0xddc60ea
  4142e9:	inc    edx
  4142ea:	add    eax,0x992c622b
  4142ef:	mov    cl,0xad
  4142f1:	dec    ebp
  4142f2:	sub    dh,BYTE PTR [ebp+0x5aaa9e07]
  4142f8:	ds std 
  4142fa:	(bad)  
  4142fb:	(bad)  
  4142fc:	cld    
  4142fd:	inc    edx
  4142fe:	fwait
  4142ff:	inc    esi
  414300:	sbb    DWORD PTR [eax+0x54],ebx
  414303:	cmp    BYTE PTR [ebp-0x436820c7],dh
  414309:	retf   0x95c0
  41430c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41430d:	adc    DWORD PTR [ebp-0x20],esi
  414310:	mov    al,ds:0x6b15b8cb
  414315:	and    DWORD PTR [esi+0x7d827974],ebx
  41431b:	sbb    DWORD PTR [eax],eax
  41431d:	jno    0x4142d4
  41431f:	xchg   BYTE PTR [eax],ch
  414321:	retf   
  414322:	mov    edx,0xdf323633
  414327:	fstp   QWORD PTR [edx-0xc]
  41432a:	sub    cl,BYTE PTR [ecx-0x52db358]
  414330:	sub    dl,BYTE PTR ds:0x48d31227
  414336:	fstp   QWORD PTR [ecx+ecx*2+0x1114c38c]
  41433d:	and    ecx,ecx
  41433f:	jecxz  0x41434a
  414341:	call   0x550c18f9
  414346:	aad    0x59
  414348:	push   esi
  414349:	jno    0x41439f
  41434b:	sbb    ebp,edx
  41434d:	fcom   QWORD PTR [eax-0x7]
  414350:	sbb    BYTE PTR fs:0x3113416a,al
  414357:	pop    edi
  414358:	or     al,0x94
  41435a:	aaa    
  41435b:	lds    ebx,FWORD PTR [esi+0x26]
  41435e:	lock cld 
  414360:	mov    dl,BYTE PTR [ecx-0x3a]
  414363:	fist   WORD PTR [ebx]
  414365:	fisubr DWORD PTR [esi-0x3a13cafa]
  41436b:	adc    DWORD PTR [ecx+0x6bb4df83],esi
  414371:	jbe    0x4143bf
  414373:	pop    edx
  414374:	fpatan 
  414376:	cld    
  414377:	push   0x5a2bc87c
  41437c:	cmp    BYTE PTR [esi+0x33],dh
  41437f:	xlat   BYTE PTR ds:[ebx]
  414380:	outs   dx,BYTE PTR ds:[esi]
  414381:	jmp    0x41434b
  414383:	std    
  414384:	inc    ebp
  414385:	mov    ebx,0xda8e41c
  41438a:	mov    bh,0x20
  41438c:	dec    edx
  41438d:	retf   
  41438e:	jae    0x414363
  414390:	rcr    BYTE PTR [ebx],cl
  414392:	fidivr WORD PTR [esi]
  414394:	mov    BYTE PTR [edi+edx*8],0xf
  414398:	xor    esi,DWORD PTR [esi-0x56933103]
  41439e:	jno    0x41438c
  4143a0:	ins    DWORD PTR es:[edi],dx
  4143a1:	or     DWORD PTR [ebx],0x94a9fb4e
  4143a7:	fnstenv [ebx-0x443324a7]
  4143ad:	fscale 
  4143af:	dec    cl
  4143b1:	inc    ecx
  4143b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143b3:	ja     0x414422
  4143b5:	mov    ch,0x82
  4143b7:	xchg   ebx,eax
  4143b8:	sub    BYTE PTR [edx-0x1],bl
  4143bb:	jae    0x41438f
  4143bd:	jmp    DWORD PTR [edi-0x50]
  4143c0:	int3   
  4143c1:	repnz call 0x823b:0x66397d26
  4143c9:	xor    bh,dh
  4143cb:	sbb    DWORD PTR [ecx+0x6766ce45],esp
  4143d1:	lods   eax,DWORD PTR ds:[esi]
  4143d2:	clc    
  4143d3:	ss sti 
  4143d5:	pusha  
  4143d6:	cld    
  4143d7:	fcom   QWORD PTR [edx+0x22325d90]
  4143dd:	cdq    
  4143de:	adc    eax,0x38948bc7
  4143e3:	aaa    
  4143e4:	loop   0x4143c6
  4143e6:	lods   al,BYTE PTR ds:[esi]
  4143e7:	ffreep st(3)
  4143e9:	test   DWORD PTR [eax],edi
  4143eb:	mov    ss,WORD PTR [eax+0x38]
  4143ee:	inc    ebx
  4143ef:	pop    eax
  4143f0:	push   ss
  4143f1:	jmp    0xff0e:0x97e7ac23
  4143f8:	mov    bh,0xe8
  4143fa:	fld    TBYTE PTR [edx]
  4143fc:	mov    esi,ss
  4143fe:	add    cl,dl
  414400:	mov    ecx,0xc3c7064c
  414405:	pop    esp
  414406:	push   edx
  414407:	pushf  
  414408:	inc    ebx
  414409:	jno    0x414414
  41440b:	dec    esp
  41440c:	mov    cl,0xee
  41440e:	mov    esi,0x52573bae
  414413:	test   DWORD PTR [eax-0x1a972526],esi
  414419:	xor    cl,BYTE PTR [ebx+0x66]
  41441c:	sbb    cl,bl
  41441e:	stos   DWORD PTR es:[edi],eax
  41441f:	sbb    ebp,0x607fe612
  414425:	add    ch,BYTE PTR [edi+0x4704b1d8]
  41442b:	daa    
  41442c:	lock xchg ebx,eax
  41442e:	out    0xc,al
  414430:	pop    ebp
  414431:	stos   BYTE PTR es:[edi],al
  414432:	imul   ebx,DWORD PTR [eax],0xffffffdc
  414435:	(bad)  
  414436:	into   
  414437:	mov    dh,0xda
  414439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41443a:	xchg   BYTE PTR [ecx],ah
  41443c:	inc    esi
  41443d:	retf   
  41443e:	xor    esp,eax
  414440:	mov    ebx,DWORD PTR [ebx-0x69255419]
  414446:	pop    ds
  414447:	cmp    BYTE PTR [eax-0x4a810bb6],bl
  41444d:	aam    0xd2
  41444f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414450:	(bad)  
  414451:	(bad)  
  414453:	sbb    edi,DWORD PTR [ecx+eiz*1-0x22]
  414457:	cmp    DWORD PTR ds:0x3d4dabc6,esi
  41445d:	mov    ch,0x8e
  41445f:	jns    0x414481
  414461:	xlat   BYTE PTR ds:[ebx]
  414462:	rcl    DWORD PTR [eax+ebp*1],cl
  414465:	xchg   DWORD PTR [ebp-0x36],esp
  414468:	popa   
  414469:	iret   
  41446a:	mov    ah,0x52
  41446c:	lods   al,BYTE PTR ds:[esi]
  41446d:	adc    edx,DWORD PTR [edx-0x308f3701]
  414473:	fild   QWORD PTR [ebx+0x7691edbb]
  414479:	stc    
  41447a:	adc    al,0x72
  41447c:	loopne 0x4144e4
  41447e:	or     eax,0xd83b419
  414483:	sti    
  414484:	shl    ebx,cl
  414486:	add    eax,0x1a2b3b65
  41448b:	or     DWORD PTR [edi-0x540ef810],edi
  414491:	adc    ch,dh
  414493:	jmp    0x8757:0x3897539d
  41449a:	push   ss
  41449b:	out    0x20,al
  41449d:	in     al,dx
  41449e:	fucomi st,st(3)
  4144a0:	fisubr DWORD PTR [eax+eiz*2+0x70]
  4144a4:	jmp    0x4144a8
  4144a6:	sub    al,0xc8
  4144a8:	xchg   edi,eax
  4144a9:	adc    edx,DWORD PTR [eax+edx*1]
  4144ac:	mov    al,ds:0x163b5a1a
  4144b1:	das    
  4144b2:	aaa    
  4144b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144b4:	pop    es
  4144b5:	cmp    BYTE PTR [ebx+ebx*8+0x61784028],bh
  4144bc:	mov    dh,0xfb
  4144be:	xchg   edi,eax
  4144bf:	sar    al,0x45
  4144c2:	loope  0x414465
  4144c4:	push   ds
  4144c5:	lahf   
  4144c6:	aad    0xad
  4144c8:	mov    esi,0xac46bec4
  4144cd:	scas   al,BYTE PTR es:[edi]
  4144ce:	inc    esi
  4144cf:	rcr    BYTE PTR [edx-0x14],1
  4144d2:	(bad)  
  4144d3:	jb     0x414491
  4144d5:	das    
  4144d6:	popa   
  4144d7:	mov    bl,0x98
  4144d9:	pop    ebp
  4144da:	add    DWORD PTR [edi-0x31],esi
  4144dd:	adc    ch,0x6c
  4144e0:	sbb    edi,esi
  4144e2:	enter  0x103f,0xd1
  4144e6:	mov    eax,0x7cf328b1
  4144eb:	xor    esi,DWORD PTR cs:[ebx-0x48df653d]
  4144f2:	out    0xa0,eax
  4144f4:	test   DWORD PTR [ecx+ecx*1+0x59],esi
  4144f8:	repnz stos DWORD PTR es:[edi],eax
  4144fa:	xor    DWORD PTR [eax+ecx*4],esi
  4144fd:	pop    ebx
  4144fe:	push   ecx
  4144ff:	lods   al,BYTE PTR ds:[si]
  414501:	sub    dh,BYTE PTR [ecx+0x2e386a37]
  414507:	(bad)  
  414508:	pop    edi
  414509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41450a:	xchg   ebx,eax
  41450b:	in     al,dx
  41450c:	imul   ebp,ecx,0x1308eec2
  414512:	mov    edx,0x11146974
  414517:	xchg   esi,eax
  414518:	push   ebx
  414519:	rcl    BYTE PTR [esi+0x30],0xb7
  41451d:	stos   BYTE PTR es:[edi],al
  41451e:	pusha  
  41451f:	out    0x45,eax
  414521:	jo     0x414531
  414523:	sub    BYTE PTR [ebx-0x3513da57],ah
  414529:	out    dx,al
  41452a:	xor    esp,DWORD PTR [esi-0x34709c1]
  414530:	fsub   DWORD PTR [eax-0x71]
  414533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414534:	aaa    
  414535:	retf   0x2d19
  414538:	ror    al,0x2e
  41453b:	mov    cl,0x8f
  41453d:	pop    ds
  41453e:	sahf   
  41453f:	pop    eax
  414540:	(bad)  
  414541:	sub    cl,BYTE PTR [edi+0x59c40104]
  414547:	out    dx,al
  414548:	jmp    0x52f40177
  41454d:	loope  0x41451e
  41454f:	iret   
  414550:	dec    edi
  414551:	xchg   edx,eax
  414552:	mov    esp,0x694d7b74
  414557:	popf   
  414558:	jl     0x414583
  41455a:	in     eax,0xc3
  41455c:	out    dx,al
  41455d:	adc    dl,cl
  41455f:	xchg   edi,eax
  414560:	hlt    
  414561:	jo     0x4145d6
  414563:	test   eax,0x2a08b139
  414568:	sbb    ah,BYTE PTR [esi-0x56]
  41456b:	adc    BYTE PTR [ebx-0x1005ec52],al
  414571:	fcom   st(3)
  414573:	ja     0x414543
  414575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414576:	pop    edx
  414577:	loope  0x4144fd
  414579:	fisub  WORD PTR [ecx-0x6faecfde]
  41457f:	or     BYTE PTR [esi],ah
  414581:	call   0xaa4c:0xccf4b876
  414588:	push   ebp
  414589:	adc    bh,BYTE PTR [esi]
  41458b:	call   0x5d8ab5b5
  414590:	(bad)  
  414591:	fmul   DWORD PTR [esp+edi*8]
  414594:	test   BYTE PTR [ecx-0x2b9f7346],dl
  41459a:	(bad)  
  41459b:	(bad)  
  41459c:	jae    0x414616
  41459e:	pop    eax
  41459f:	in     al,dx
  4145a0:	cmp    al,0xff
  4145a2:	pop    ebp
  4145a3:	pop    ecx
  4145a4:	xor    ebp,DWORD PTR [edi-0x39]
  4145a7:	pop    es
  4145a8:	loopne 0x414603
  4145aa:	dec    edx
  4145ab:	add    eax,0xb32f87e5
  4145b0:	lock std 
  4145b2:	rcr    BYTE PTR [ebx],1
  4145b4:	stos   BYTE PTR es:[edi],al
  4145b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b6:	jmp    0x326c255b
  4145bb:	int3   
  4145bc:	xor    esi,ebp
  4145be:	push   esp
  4145bf:	data16 lods al,BYTE PTR ds:[esi]
  4145c1:	mov    ecx,0x1f14f245
  4145c6:	jo     0x4145b6
  4145c8:	jmp    0xb4f5:0x40f0ee7c
  4145cf:	pop    ecx
  4145d0:	xchg   BYTE PTR [ebx],cl
  4145d2:	cmp    DWORD PTR [ecx-0x2d],ecx
  4145d5:	call   ebx
  4145d7:	pop    esi
  4145d8:	pop    edx
  4145d9:	pop    edx
  4145da:	pop    ebp
  4145db:	fnstcw WORD PTR [eax-0x6053f430]
  4145e1:	jnp    0x41461b
  4145e3:	test   DWORD PTR ds:0xf41e2e4c,0x5284e34
  4145ed:	push   cs
  4145ee:	add    DWORD PTR [ebx-0x710b27f7],esp
  4145f4:	fs je  0x41458e
  4145f7:	pushf  
  4145f8:	dec    eax
  4145f9:	ror    bl,cl
  4145fb:	cmp    BYTE PTR [ebp+0x1a257dac],ah
  414601:	mov    dl,0x7d
  414603:	stos   BYTE PTR es:[edi],al
  414604:	inc    esp
  414605:	iret   
  414606:	cmp    DWORD PTR [ebp-0x29],0xffffffc1
  41460a:	pop    ebp
  41460b:	jne    0x414670
  41460d:	into   
  41460e:	stc    
  41460f:	xchg   esp,eax
  414610:	adc    esp,esi
  414612:	jmp    0x4145e1
  414614:	stc    
  414615:	sbb    eax,0xd451c12c
  41461a:	inc    edi
  41461b:	mov    cl,0x67
  41461d:	pop    ebx
  41461e:	mov    ah,0xe
  414620:	add    eax,0xed0ebbb0
  414625:	vpinsrw xmm6,xmm2,WORD PTR [edi-0x360e0888],0x7c
  41462e:	xlat   BYTE PTR ds:[ebx]
  41462f:	aaa    
  414630:	pop    ecx
  414631:	mov    eax,ds:0xdca29935
  414636:	mov    esp,0x53529cd4
  41463b:	test   eax,0x73d48226
  414640:	mov    bl,0x63
  414642:	stos   DWORD PTR es:[edi],eax
  414643:	int3   
  414644:	stos   DWORD PTR es:[edi],eax
  414645:	xchg   BYTE PTR ds:0xbeb5b2ae,bh
  41464b:	mov    ?,ecx
  41464d:	retf   
  41464e:	outs   dx,BYTE PTR ds:[esi]
  41464f:	jns    0x4145fb
  414651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414652:	loope  0x414606
  414654:	push   ss
  414655:	jmp    0x4c26cb54
  41465a:	ret    
  41465b:	sbb    BYTE PTR [ebx],ah
  41465d:	mov    cs,esp
  41465f:	jns    0x414605
  414661:	cld    
  414662:	out    0x36,al
  414664:	mov    WORD PTR [ecx+edi*1],ss
  414667:	cwde   
  414668:	pop    esi
  414669:	adc    eax,0x1356a521
  41466e:	pop    esi
  41466f:	lahf   
  414670:	(bad)  
  414671:	pop    eax
  414672:	je     0x41462e
  414674:	loop   0x41465f
  414676:	clc    
  414677:	popa   
  414678:	cmp    eax,0x935d9ab4
  41467d:	push   edx
  41467e:	nop
  41467f:	pop    ecx
  414680:	popf   
  414681:	mov    ebx,ecx
  414683:	jl     0x414685
  414685:	cmp    ecx,DWORD PTR [ebp-0x48d9407b]
  41468b:	sbb    al,0xc3
  41468d:	dec    eax
  41468e:	push   ds
  41468f:	jecxz  0x4146f7
  414691:	pop    ebx
  414693:	sbb    DWORD PTR [ebp+0x7ea61956],ecx
  414699:	jnp    0x41461d
  41469b:	xor    dh,ah
  41469d:	adc    eax,0xcdc6dc36
  4146a2:	ins    DWORD PTR es:[edi],dx
  4146a3:	sbb    DWORD PTR [edx],ebx
  4146a5:	inc    edi
  4146a6:	sbb    eax,0x4ccecfda
  4146ab:	inc    edx
  4146ac:	div    edi
  4146ae:	pusha  
  4146af:	pop    ss
  4146b0:	dec    esi
  4146b1:	sar    BYTE PTR [eax+0xedb731e],cl
  4146b7:	push   esp
  4146b8:	pop    ecx
  4146b9:	out    0x89,eax
  4146bb:	mov    eax,ds:0xe555e573
  4146c0:	xor    BYTE PTR [eax-0x5a],bh
  4146c3:	sar    BYTE PTR [edi+0x28b6f928],1
  4146c9:	cmp    eax,0xb4d75b03
  4146ce:	push   ebp
  4146cf:	jge    0x4146cc
  4146d1:	in     al,dx
  4146d2:	sub    eax,0x591a3d7e
  4146d7:	mov    eax,fs:0xb281c0b9
  4146dd:	hlt    
  4146de:	fstp   TBYTE PTR [esi]
  4146e0:	out    dx,eax
  4146e1:	outs   dx,BYTE PTR ds:[esi]
  4146e2:	arpl   WORD PTR [eax-0x631b2562],bx
  4146e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146e9:	fistp  DWORD PTR [ebx+0x26ff0e06]
  4146ef:	mov    bh,0x6d
  4146f1:	je     0x41475c
  4146f3:	or     ebp,DWORD PTR [ebp-0x49]
  4146f6:	imul   esp,DWORD PTR [esi-0x6b],0xfaa227ce
  4146fd:	sbb    DWORD PTR [ebp-0x5f731231],ebx
  414703:	sbb    cl,dl
  414705:	sar    bl,0x25
  414708:	mov    ?,WORD PTR [edx]
  41470a:	lahf   
  41470b:	cli    
  41470c:	cmp    ebp,DWORD PTR [ecx-0x58]
  41470f:	dec    esp
  414710:	aaa    
  414711:	sbb    edi,DWORD PTR [esi+edx*1]
  414714:	jp     0x414696
  414716:	mov    ebp,0x7faf7602
  41471b:	dec    ebp
  41471c:	in     al,dx
  41471d:	shr    DWORD PTR [esi],1
  41471f:	pop    edi
  414720:	out    0xf6,eax
  414722:	dec    edx
  414723:	xchg   ebx,eax
  414724:	cli    
  414725:	add    BYTE PTR [esi-0x2d1122b1],dl
  41472b:	cli    
  41472c:	adc    eax,esp
  41472e:	xchg   ebx,eax
  41472f:	fldcw  WORD PTR [ecx]
  414731:	add    eax,0xa689c474
  414736:	int    0xcf
  414738:	xchg   DWORD PTR [ebx+edi*1+0x38cf11f],ebx
  41473f:	xchg   ecx,eax
  414740:	(bad)  
  414741:	jo     0x414740
  414743:	jmp    0x8f9b:0xf836e78f
  41474a:	sbb    al,dl
  41474c:	fnsave [edi]
  41474e:	sub    al,0x48
  414750:	pop    es
  414751:	jae    0x41473d
  414753:	and    eax,0xf16f9941
  414758:	mul    ebp
  41475a:	push   edi
  41475b:	or     edx,DWORD PTR [ebx]
  41475d:	les    esp,FWORD PTR [ecx]
  41475f:	pop    esp
  414760:	add    BYTE PTR [ebx],ah
  414762:	push   edi
  414763:	lahf   
  414764:	nop
  414765:	js     0x4147bb
  414767:	add    BYTE PTR [eax],al
  414769:	sub    DWORD PTR [ebp-0xcbdf870],esi
  41476f:	mov    al,ds:0xc0bcac71
  414774:	push   cs
  414775:	mov    ch,0x99
  414777:	leave  
  414778:	inc    edx
  414779:	add    DWORD PTR [ebx-0x73],edi
  41477c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41477d:	jl     0x414785
  41477f:	arpl   WORD PTR [eax-0x3bc19994],di
  414785:	and    edi,esp
  414787:	cmp    BYTE PTR [ecx-0x60],dl
  41478a:	dec    DWORD PTR [edi]
  41478c:	xor    eax,0x1533deab
  414791:	cld    
  414792:	mov    ebx,esp
  414794:	test   al,0xe9
  414796:	push   0x567dd992
  41479b:	sub    al,BYTE PTR [edi]
  41479d:	add    BYTE PTR [edx-0x1ba5ffee],al
  4147a3:	pop    ebx
  4147a4:	push   esi
  4147a5:	push   esi
  4147a6:	jb     0x4147ba
  4147a8:	fmulp  st(2),st
  4147aa:	jmp    0x804be318
  4147af:	xor    bh,al
  4147b1:	ins    BYTE PTR es:[edi],dx
  4147b2:	ret    0x7ec9
  4147b5:	imul   dh
  4147b7:	pop    esi
  4147b8:	test   eax,0xb234a35a
  4147bd:	mov    esp,0x3a75b90b
  4147c2:	push   edi
  4147c3:	cmp    dh,BYTE PTR [esi-0x2235e5a2]
  4147c9:	in     al,0x86
  4147cb:	mov    edi,0x6c53781c
  4147d0:	(bad)  [ebx]
  4147d2:	inc    esp
  4147d3:	and    eax,0x6d7faa8f
  4147d8:	mov    ecx,ecx
  4147da:	into   
  4147db:	lods   al,BYTE PTR ds:[esi]
  4147dc:	pop    ebp
  4147dd:	xchg   esi,eax
  4147de:	mov    al,ds:0x1a399cc1
  4147e4:	jmp    0x4147cf
  4147e6:	cs jns 0x4147f7
  4147e9:	enter  0xde32,0x77
  4147ed:	dec    ebp
  4147ee:	xchg   DWORD PTR [edi+0x5eac5e21],ecx
  4147f4:	retf   0xfbb2
  4147f7:	adc    BYTE PTR [eax-0x462e8640],0x6e
  4147fe:	push   ebp
  4147ff:	fisubr WORD PTR [edx]
  414801:	icebp  
  414802:	stc    
  414803:	add    eax,0x1149e160
  414808:	adc    eax,0xfd3c6117
  41480d:	xchg   edx,eax
  41480e:	shl    DWORD PTR [edi+0x54],0xd5
  414812:	push   edi
  414813:	inc    edi
  414814:	call   0xd6a0:0x50a7151
  41481b:	repz cmp eax,0x19b9b0a3
  414821:	mov    edi,0xcaf515b8
  414826:	stos   DWORD PTR es:[edi],eax
  414827:	pop    ebp
  414828:	loopne 0x414843
  41482a:	fld    QWORD PTR [esi-0x2da4c5ec]
  414830:	jo     0x414886
  414832:	push   ds
  414833:	dec    ebp
  414834:	cmp    DWORD PTR [edx-0x7fffd9ab],ecx
  41483a:	or     DWORD PTR [edx+0xf],edi
  41483d:	add    al,0x19
  41483f:	pop    eax
  414840:	or     eax,0x24dfd354
  414845:	je     0x41487d
  414847:	and    al,0x5
  414849:	loopne 0x414844
  41484b:	call   0x66fb:0x6153f4ac
  414852:	dec    edi
  414853:	jno    0x4148be
  414855:	inc    ebx
  414856:	mov    dl,0x42
  414858:	repnz test BYTE PTR [ecx+0x2e],0x63
  41485d:	mov    al,0x35
  41485f:	mov    ebx,0x9eb19594
  414864:	daa    
  414865:	sti    
  414866:	jae    0x41482f
  414868:	loope  0x4148bd
  41486a:	jno    0x414893
  41486c:	xchg   edx,eax
  41486d:	das    
  41486e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414870:	ret    
  414871:	push   ds
  414872:	inc    edi
  414873:	mov    ebp,db3
  414876:	fnop   
  414878:	jb     0x41485e
  41487a:	cmp    ah,dh
  41487c:	ins    DWORD PTR es:[edi],dx
  41487d:	adc    cl,BYTE PTR [ebx+eax*2+0x309ed6ac]
  414884:	(bad)  
  414885:	pop    ss
  414886:	rcr    DWORD PTR [ebx+0x54],cl
  414889:	shl    DWORD PTR [ebp-0x61],0xe2
  41488d:	js     0x4148b1
  41488f:	in     al,dx
  414890:	rol    BYTE PTR [esi-0x29],0x8e
  414894:	scas   eax,DWORD PTR es:[edi]
  414895:	jl     0x41482e
  414897:	pop    edx
  414898:	fnstcw WORD PTR [ecx+0x5264313b]
  41489e:	sar    BYTE PTR [edi-0x9],1
  4148a1:	cmc    
  4148a2:	sbb    dl,cl
  4148a4:	cli    
  4148a5:	mov    esp,es
  4148a7:	adc    BYTE PTR [ecx+0x12297a8f],ch
  4148ad:	push   es
  4148ae:	pop    ss
  4148af:	cdq    
  4148b0:	xor    ebx,esi
  4148b2:	xchg   BYTE PTR [ebp+0x6c],bh
  4148b5:	push   ss
  4148b6:	into   
  4148b7:	pop    edx
  4148b8:	nop
  4148b9:	sub    ah,cl
  4148bb:	rol    DWORD PTR [edx-0x6f],1
  4148be:	repz or DWORD PTR ds:0x32e2d4a5,0xffffffb0
  4148c6:	outs   dx,DWORD PTR ds:[esi]
  4148c7:	xchg   ecx,eax
  4148c8:	xor    al,BYTE PTR [eax+0x13f55daf]
  4148ce:	into   
  4148cf:	repnz cmp esi,ebp
  4148d2:	jo     0x41488f
  4148d4:	or     al,0xb6
  4148d6:	xchg   BYTE PTR [edi-0x51],bh
  4148d9:	cmp    ah,BYTE PTR [edi+0x30]
  4148dc:	out    0x56,al
  4148de:	mov    cl,0x5a
  4148e0:	lahf   
  4148e1:	or     BYTE PTR [ebx],0xe2
  4148e4:	out    dx,eax
  4148e5:	cmp    edi,DWORD PTR [esi+0x3ff8d0d5]
  4148eb:	popa   
  4148ec:	or     DWORD PTR [ebp-0x61137db9],ebx
  4148f2:	test   ah,ah
  4148f4:	push   ebp
  4148f5:	cmp    eax,0xa17d8d92
  4148fa:	dec    eax
  4148fb:	out    dx,al
  4148fc:	cmp    esi,ebx
  4148fe:	nop
  4148ff:	ss cs xchg ebx,eax
  414902:	rol    DWORD PTR [eax],cl
  414904:	xor    BYTE PTR ds:0x42d0d64a,ch
  41490a:	pop    ecx
  41490b:	add    ebp,ecx
  41490d:	mov    eax,esp
  41490f:	(bad)  
  414911:	mov    ds,WORD PTR [edx+0x3e]
  414914:	(bad)  
  414915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414916:	aam    0x7b
  414918:	xlat   BYTE PTR ds:[ebx]
  414919:	mov    esp,DWORD PTR [edx]
  41491b:	add    eax,0xb92568e0
  414920:	or     eax,0xdf95ff07
  414925:	sti    
  414926:	mov    bl,0x41
  414928:	div    BYTE PTR [esi-0x21]
  41492b:	rcr    BYTE PTR [ebx],1
  41492d:	add    DWORD PTR [ebx-0x62d6ae21],ebx
  414933:	in     eax,dx
  414934:	mov    esi,0xd4603573
  414939:	out    0xf6,al
  41493b:	(bad)  [esi+0x56335e81]
  414941:	les    ecx,FWORD PTR [ecx+0x5800763e]
  414947:	or     DWORD PTR [esi+0x6c7bd6e9],0x70
  41494e:	pop    es
  41494f:	in     al,dx
  414950:	sub    BYTE PTR [ecx+edx*8],ah
  414953:	and    esp,DWORD PTR [edi+0x49]
  414956:	pop    edx
  414957:	outs   dx,DWORD PTR ds:[esi]
  414958:	fbld   TBYTE PTR [eax-0x5d]
  41495b:	mov    eax,ds:0x3b9ce72e
  414960:	shr    DWORD PTR [ebp-0x5851b49b],0x16
  414967:	pop    ebp
  414968:	inc    esp
  414969:	test   eax,0x19a8da6
  41496e:	inc    edx
  41496f:	cmp    edx,DWORD PTR [ecx-0x10]
  414972:	jmp    0x4149e3
  414974:	out    dx,eax
  414975:	not    dl
  414977:	aas    
  414978:	push   esi
  414979:	xor    dl,BYTE PTR [edi-0x43da0789]
  41497f:	(bad)  
  414980:	fadd   st(3),st
  414982:	sbb    al,0x5d
  414984:	xor    BYTE PTR [ebp-0xb],dl
  414987:	aas    
  414988:	clc    
  414989:	mov    eax,0x730ec2a2
  41498e:	sbb    DWORD PTR [eax+0x5bd62f4],edx
  414994:	leave  
  414995:	adc    ah,dh
  414997:	cmp    eax,0x221308b
  41499c:	push   es
  41499d:	div    ebx
  41499f:	repz in al,0xd2
  4149a2:	mov    bh,0xbd
  4149a4:	sbb    DWORD PTR [ebx-0x23],ebx
  4149a7:	lock push cs
  4149a9:	or     bh,BYTE PTR [eax+0x440e053a]
  4149af:	data16 clc 
  4149b1:	or     DWORD PTR ds:0xe5093ff6,esp
  4149b7:	neg    ah
  4149b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149ba:	push   0xaa473df
  4149bf:	xor    DWORD PTR [edi-0x1cba64a9],edx
  4149c5:	test   edx,0x15e69a31
  4149cb:	jae    0x4149da
  4149cd:	dec    ecx
  4149ce:	add    bh,BYTE PTR [edx-0x57]
  4149d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149d2:	sub    dl,BYTE PTR [ebp-0x14721e11]
  4149d8:	adc    BYTE PTR ds:0x61ac00f0,ch
  4149de:	daa    
  4149df:	in     al,0xf8
  4149e1:	pop    esi
  4149e2:	mov    ds:0x93cfb8b3,al
  4149e8:	dec    edx
  4149e9:	es inc ebx
  4149eb:	xchg   ebp,eax
  4149ec:	cmp    eax,0x4583594e
  4149f1:	dec    ebx
  4149f2:	push   edx
  4149f3:	lahf   
  4149f4:	xchg   ebp,eax
  4149f5:	cli    
  4149f6:	or     ch,ah
  4149f8:	mov    al,ds:0x948afb3e
  4149fd:	cli    
  4149fe:	sbb    ch,BYTE PTR [ebp-0x4]
  414a01:	mov    eax,ds:0xb7941c59
  414a06:	jmp    0x55b4431f
  414a0b:	inc    eax
  414a0c:	push   cs
  414a0d:	rol    DWORD PTR [esi],cl
  414a0f:	nop
  414a10:	push   esp
  414a11:	arpl   WORD PTR [esi-0x2],bp
  414a14:	aaa    
  414a15:	cmp    ebx,ecx
  414a17:	jnp    0x4149b2
  414a19:	clc    
  414a1a:	in     eax,dx
  414a1b:	ss pop ss
  414a1d:	rcl    BYTE PTR [ecx+0x40b703a],0xc2
  414a24:	fwait
  414a25:	imul   esp,DWORD PTR [edi-0xe04f5c9],0xffffffad
  414a2c:	and    al,0xc5
  414a2e:	cmp    BYTE PTR [ecx-0x4b],ah
  414a31:	mov    dl,0x59
  414a33:	adc    BYTE PTR [edi+eiz*8-0x67516337],bl
  414a3a:	add    eax,0x1b8b7f1c
  414a3f:	jbe    0x414ab4
  414a41:	hlt    
  414a42:	jle    0x414a52
  414a44:	ror    DWORD PTR [ebp+0x49],0x3f
  414a48:	xchg   ebx,eax
  414a49:	(bad)  
  414a4a:	fwait
  414a4b:	sub    BYTE PTR [esp+edi*2+0x1ea6a6b6],dh
  414a52:	pop    esi
  414a53:	cmp    eax,0x5a6b842f
  414a58:	sahf   
  414a59:	adc    BYTE PTR [edx-0x2f4d7233],cl
  414a5f:	outs   dx,BYTE PTR ds:[esi]
  414a60:	push   cs
  414a61:	int    0x2e
  414a63:	ret    
  414a64:	sub    eax,0xf14fbd7a
  414a69:	loopne 0x414a33
  414a6b:	or     BYTE PTR [edi-0x11],0xc8
  414a6f:	sub    BYTE PTR [edx],dh
  414a71:	fwait
  414a72:	and    cl,BYTE PTR [edi-0x1a]
  414a75:	xor    al,0x35
  414a77:	out    0x38,eax
  414a79:	cmc    
  414a7a:	pushf  
  414a7b:	cs addr16 xchg esi,eax
  414a7e:	rcr    BYTE PTR [esi+eiz*8-0x49217012],1
  414a85:	or     eax,0xfd846a66
  414a8a:	div    BYTE PTR [edi-0x11]
  414a8d:	int    0xdd
  414a8f:	dec    esi
  414a90:	call   0xa5074d28
  414a95:	imul   esi,DWORD PTR [edx+0x71],0xffffff84
  414a99:	adc    al,0xf3
  414a9b:	sbb    BYTE PTR [edi],bl
  414a9d:	std    
  414a9e:	push   edi
  414a9f:	mov    eax,ds:0xaefa6215
  414aa4:	sbb    bl,BYTE PTR [ebx+ecx*1-0x5e5f408d]
  414aab:	popa   
  414aac:	mov    es,edi
  414aae:	inc    esi
  414aaf:	fld    DWORD PTR [ebx-0x4f]
  414ab2:	fwait
  414ab3:	sub    BYTE PTR [ebx],ah
  414ab5:	adc    edx,esp
  414ab7:	jns    0x414a71
  414ab9:	(bad)  
  414aba:	jo     0x414a52
  414abc:	out    0x40,eax
  414abe:	test   ecx,ebp
  414ac0:	sar    DWORD PTR [eax],cl
  414ac2:	sbb    DWORD PTR [esi+0x3b],0x58b67e14
  414ac9:	(bad)  
  414aca:	push   0x4cad0c
  414acf:	pop    ss
  414ad0:	int    0x1f
  414ad2:	lock ins DWORD PTR es:[edi],dx
  414ad4:	mov    ebp,0x54abbb5c
  414ad9:	mov    ch,0xca
  414adb:	jg     0x414afa
  414add:	xor    ebp,0xffffffdb
  414ae0:	mov    ds:0xd96dd364,eax
  414ae5:	dec    ebx
  414ae6:	jl     0x414b16
  414ae8:	aad    0xa0
  414aea:	mov    cl,0x95
  414aec:	xor    al,BYTE PTR [esi-0x5e]
  414aef:	add    cl,dl
  414af1:	and    ecx,DWORD PTR [ebp-0x3b]
  414af4:	cmp    BYTE PTR [ebx+0x3cd30e92],bh
  414afa:	sub    DWORD PTR [ecx+eax*1],ebx
  414afd:	sub    esi,0x72
  414b00:	(bad)  
  414b01:	cmp    DWORD PTR [esi+eiz*2],0x7d92ab18
  414b08:	cmc    
  414b09:	sbb    bl,BYTE PTR [esi]
  414b0b:	dec    BYTE PTR [ecx]
  414b0d:	stos   DWORD PTR es:[edi],eax
  414b0e:	and    ecx,DWORD PTR [edx+0x5f]
  414b11:	aad    0x16
  414b13:	(bad)  
  414b14:	jecxz  0x414b8f
  414b16:	out    dx,al
  414b17:	ror    BYTE PTR [eax],0x56
  414b1a:	sub    ch,BYTE PTR [eax]
  414b1c:	adc    DWORD PTR [edx-0x46],edx
  414b1f:	fnstsw WORD PTR [ecx+0x49]
  414b22:	lds    edi,FWORD PTR [ebp+eiz*4-0xc08a967]
  414b29:	mov    eax,0x2631e1a6
  414b2e:	fild   QWORD PTR [ebx+ecx*1]
  414b31:	scas   al,BYTE PTR es:[edi]
  414b32:	and    al,0xdf
  414b34:	xchg   ecx,eax
  414b35:	(bad)  
  414b36:	sub    al,0x6d
  414b38:	iret   
  414b39:	loopne 0x414bb7
  414b3b:	or     ebx,edi
  414b3d:	pop    ds
  414b3e:	ror    dl,1
  414b40:	mov    ah,0x8f
  414b42:	in     eax,dx
  414b43:	xor    ebx,ecx
  414b45:	jle    0x414afb
  414b47:	sar    DWORD PTR [ecx],0xf8
  414b4a:	jnp    0x414bb9
  414b4c:	in     eax,dx
  414b4d:	mov    ecx,0x4b945590
  414b52:	dec    ebx
  414b53:	xchg   DWORD PTR [ecx],esi
  414b55:	pop    ebp
  414b56:	aad    0xf8
  414b58:	mov    ch,0x6a
  414b5a:	xchg   DWORD PTR [edx],esi
  414b5c:	mov    ah,0x5a
  414b5e:	mov    bl,0x9e
  414b60:	mov    cl,0xa9
  414b62:	pop    esi
  414b63:	or     ah,BYTE PTR [esi-0x6cfbd376]
  414b69:	out    dx,al
  414b6a:	cmp    cl,BYTE PTR ds:0xaffff5de
  414b70:	adc    ch,ch
  414b72:	inc    ebp
  414b73:	dec    ecx
  414b74:	adc    eax,0x8dd4dcaf
  414b79:	retf   0x4641
  414b7c:	push   ecx
  414b7d:	sahf   
  414b7e:	inc    ecx
  414b7f:	repz xchg ecx,eax
  414b81:	or     DWORD PTR [eax],esp
  414b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b84:	cmp    esp,edi
  414b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b87:	or     al,0x5f
  414b89:	xchg   ebp,eax
  414b8a:	jno    0x414c04
  414b8c:	imul   ecx,DWORD PTR [ecx-0x62ab5a35],0x29183ff
  414b96:	sti    
  414b97:	or     dl,BYTE PTR ds:0x826405bc
  414b9d:	mov    edi,0xfc525a41
  414ba2:	mov    ds:0x5a54a698,eax
  414ba7:	test   DWORD PTR [ebp-0x7590e2d0],ebx
  414bad:	(bad)  
  414bae:	aad    0x11
  414bb0:	jb     0x414b80
  414bb2:	pop    es
  414bb3:	push   esp
  414bb4:	test   BYTE PTR [ecx+0x8],0x32
  414bb8:	dec    ebx
  414bb9:	std    
  414bba:	std    
  414bbb:	add    DWORD PTR [eax-0x11],edi
  414bbe:	div    DWORD PTR [edx+0x5beedc50]
  414bc4:	jle    0x414c12
  414bc6:	setl   BYTE PTR [edi-0x11e5781c]
  414bcd:	or     eax,0xd5e3c0b6
  414bd2:	shl    DWORD PTR [esi+0x77ba6a4a],0xe2
  414bd9:	cmp    al,0xf0
  414bdb:	or     al,0xc5
  414bdd:	frndint 
  414bdf:	xor    bl,ah
  414be1:	and    ch,BYTE PTR [edx]
  414be3:	stos   DWORD PTR es:[edi],eax
  414be4:	push   ss
  414be5:	dec    esi
  414be6:	jg     0x414b79
  414be8:	jbe    0x414bec
  414bea:	and    eax,0xf35330aa
  414bef:	lock rol BYTE PTR [edi+0x2],cl
  414bf3:	ret    0x3ce0
  414bf6:	dec    esp
  414bf7:	or     BYTE PTR ds:0xa19963fb,ah
  414bfd:	push   esi
  414bfe:	cmp    DWORD PTR [ebx-0x38],ebp
  414c01:	js     0x414bf7
  414c03:	pusha  
  414c04:	xor    edx,esi
  414c06:	int3   
  414c07:	cmp    al,0x82
  414c0a:	cdq    
  414c0b:	call   0xdc46:0x7b0275ec
  414c12:	mov    esi,0x5fcb11c7
  414c17:	dec    DWORD PTR [ebx]
  414c19:	popa   
  414c1a:	mov    eax,ds:0x998e99ee
  414c1f:	mov    ch,0xfa
  414c21:	xchg   bl,cl
  414c23:	icebp  
  414c24:	mov    dh,0x2d
  414c26:	mov    ebx,0x3c54e727
  414c2b:	aas    
  414c2c:	pop    ds
  414c2d:	aaa    
  414c2e:	shr    eax,1
  414c30:	pop    esi
  414c31:	jp     0x414c5d
  414c33:	or     BYTE PTR [eax+0x66],dl
  414c36:	(bad)  
  414c37:	jl     0x414cb7
  414c39:	dec    ebx
  414c3a:	xlat   BYTE PTR ds:[ebx]
  414c3b:	mov    dh,0x1d
  414c3d:	leave  
  414c3e:	pop    ebx
  414c3f:	ja     0x414c69
  414c41:	inc    esi
  414c42:	shr    BYTE PTR [esi-0x55fa4806],1
  414c48:	push   ds
  414c49:	inc    edi
  414c4a:	and    ecx,0xffffffef
  414c4d:	pop    ss
  414c4e:	stos   DWORD PTR es:[edi],eax
  414c4f:	scas   al,BYTE PTR es:[edi]
  414c50:	dec    esi
  414c51:	out    dx,eax
  414c52:	jne    0x414cd2
  414c54:	jo     0x414bf3
  414c56:	addr16 int3 
  414c58:	inc    edx
  414c59:	mov    al,0x7f
  414c5b:	sbb    ebp,eax
  414c5d:	mov    edx,0x7283c761
  414c62:	push   edx
  414c63:	inc    ebp
  414c64:	test   BYTE PTR [edx-0x68],0x6c
  414c68:	loop   0x414c2e
  414c6a:	adc    edx,DWORD PTR [ebx+0x52a2560e]
  414c70:	sbb    al,0xe4
  414c72:	mov    ch,0x1e
  414c74:	mov    ch,0x92
  414c76:	enter  0x2385,0x75
  414c7a:	mov    cl,0xcc
  414c7c:	(bad)  
  414c7d:	xor    eax,0xc6838188
  414c82:	fistp  QWORD PTR [edi+0x1acd05e9]
  414c88:	mov    es,WORD PTR [esi+0x3bf34f52]
  414c8e:	inc    edx
  414c8f:	push   ebp
  414c90:	mov    ebp,0x65c707af
  414c95:	jecxz  0x414ce8
  414c97:	(bad)  
  414c98:	(bad)  
  414c99:	lds    esi,FWORD PTR [ebx-0x60dd1601]
  414c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ca0:	aad    0x18
  414ca2:	mov    ch,0xcd
  414ca4:	adc    eax,0x52dd598d
  414ca9:	sub    ecx,DWORD PTR [edx+ebp*2-0x7e501321]
  414cb0:	sub    al,BYTE PTR [ebp+eax*4+0x7d9df876]
  414cb7:	add    eax,0x711ac4bf
  414cbc:	jle    0x414c91
  414cbe:	push   es
  414cbf:	push   edi
  414cc0:	push   ecx
  414cc1:	fs ins DWORD PTR es:[edi],dx
  414cc3:	fistp  QWORD PTR [eax+0x3be0b76e]
  414cc9:	cmp    BYTE PTR [edx-0x43ebf4c7],0x74
  414cd0:	xchg   ebp,eax
  414cd1:	inc    esi
  414cd2:	cli    
  414cd3:	inc    esi
  414cd4:	pop    ebp
  414cd5:	xchg   ebx,eax
  414cd6:	je     0x414c6e
  414cd8:	add    al,0x2c
  414cda:	outs   dx,DWORD PTR ds:[esi]
  414cdb:	aam    0xda
  414cdd:	mov    ds:0x884d5d0,al
  414ce2:	push   ds
  414ce3:	mov    ah,0x26
  414ce5:	and    esp,DWORD PTR [edi-0x1e]
  414ce8:	mov    bl,0xa3
  414cea:	fmul   DWORD PTR [edx-0x1c]
  414ced:	mov    eax,ds:0xed97e374
  414cf2:	push   0x414aff28
  414cf7:	loopne 0x414d21
  414cf9:	rcr    BYTE PTR [eax],0x9
  414cfc:	push   esp
  414cfd:	inc    esi
  414cfe:	push   edx
  414cff:	xchg   ah,bh
  414d01:	cwde   
  414d02:	icebp  
  414d03:	repz call 0xd31:0xd40b2e8c
  414d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d0c:	adc    esi,ebp
  414d0e:	out    dx,al
  414d0f:	push   cs
  414d10:	std    
  414d11:	mov    edx,0x22569d5b
  414d16:	fwait
  414d17:	xchg   DWORD PTR [eax+0x1e2bb7dd],edx
  414d1d:	stos   BYTE PTR es:[edi],al
  414d1e:	push   ebx
  414d1f:	inc    esp
  414d20:	push   cs
  414d21:	mov    al,ds:0x393b51eb
  414d26:	pop    ds
  414d27:	dec    ebx
  414d28:	mov    edi,0xa061152b
  414d2d:	add    dh,ch
  414d2f:	push   es
  414d30:	jge    0x414ccd
  414d32:	mov    eax,ds:0x41e261e9
  414d37:	jl     0x414d7a
  414d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d3a:	pop    esp
  414d3b:	sbb    eax,0x97a5ad81
  414d40:	bnd jnp 0x414d2a
  414d43:	mov    bh,0x41
  414d45:	scas   al,BYTE PTR es:[edi]
  414d46:	or     DWORD PTR [ebx],esi
  414d48:	mov    dh,0xf
  414d4a:	pop    edx
  414d4b:	imul   DWORD PTR [esi-0x16]
  414d4e:	aam    0xc7
  414d50:	or     al,0xdb
  414d52:	dec    ecx
  414d53:	cwde   
  414d54:	pop    edx
  414d55:	inc    eax
  414d56:	sub    bl,0x67
  414d59:	adc    ebp,ebp
  414d5b:	hlt    
  414d5c:	(bad)  [ebx]
  414d5e:	pop    ss
  414d5f:	popf   
  414d60:	outs   dx,DWORD PTR ds:[esi]
  414d61:	add    dl,0xee
  414d64:	jecxz  0x414d03
  414d66:	addr16 or ch,ch
  414d69:	add    eax,0xb382e83f
  414d6e:	dec    esp
  414d6f:	or     al,0x13
  414d71:	lods   eax,DWORD PTR ds:[esi]
  414d72:	ret    
  414d73:	push   cs
  414d74:	js     0x414d9e
  414d76:	iret   
  414d77:	mov    al,0x4c
  414d79:	or     DWORD PTR [ebx+eax*2+0x3f87fed3],eax
  414d80:	mov    ch,0xd1
  414d82:	cmp    dh,ch
  414d84:	pop    ds
  414d85:	test   al,0xc5
  414d87:	in     eax,dx
  414d88:	or     edx,DWORD PTR [esi-0x4bbee073]
  414d8e:	dec    eax
  414d8f:	aad    0x33
  414d91:	xchg   edi,eax
  414d92:	push   esp
  414d93:	and    edi,ecx
  414d95:	daa    
  414d96:	jmp    0x18866cad
  414d9b:	mov    WORD PTR [eax],?
  414d9d:	mov    ebx,0x6e1832d8
  414da2:	sahf   
  414da3:	or     DWORD PTR [ecx],edx
  414da5:	pop    ecx
  414da6:	mov    al,0xb8
  414da8:	iret   
  414da9:	nop
  414daa:	imul   eax,DWORD PTR [edx+0x7],0xe7cd1f30
  414db1:	xchg   edx,eax
  414db2:	add    DWORD PTR [ecx-0x1b56ce43],esp
  414db8:	sbb    eax,0x290bc7ec
  414dbd:	repz retf 0x4a32
  414dc1:	sub    eax,0xb024340a
  414dc6:	int3   
  414dc7:	pusha  
  414dc8:	mov    ds:0x1d65cf8a,eax
  414dcd:	mov    ss,WORD PTR [edx+ebx*4-0x73]
  414dd1:	mov    bl,0x36
  414dd3:	lds    ecx,FWORD PTR [eax+0x36638f9c]
  414dd9:	ja     0x414e27
  414ddb:	pushf  
  414ddc:	adc    BYTE PTR [edx],ch
  414dde:	and    BYTE PTR [ecx+eax*2],cl
  414de1:	sbb    eax,0x7f196bc6
  414de6:	in     eax,0x9d
  414de8:	rol    BYTE PTR [esi+0x7a],0xb8
  414dec:	cmp    cl,BYTE PTR [ebp-0x1]
  414def:	mov    ds:0x8549756d,al
  414df4:	addr16 addr16 nop
  414df7:	cld    
  414df8:	xor    al,0x30
  414dfa:	jmp    0x9278:0x6b58ae78
  414e01:	mov    esp,0xdfb66c6f
  414e06:	inc    ecx
  414e07:	mov    edi,ebp
  414e09:	push   ebx
  414e0a:	cdq    
  414e0b:	xor    al,0x99
  414e0d:	gs daa 
  414e0f:	push   ss
  414e10:	dec    ebp
  414e11:	out    dx,eax
  414e12:	or     DWORD PTR [edx],0xffffffc7
  414e15:	push   ebp
  414e16:	fwait
  414e17:	sbb    al,0x3d
  414e19:	push   ebp
  414e1a:	sbb    DWORD PTR [ebx],eax
  414e1c:	mov    eax,ds:0xba01d452
  414e21:	sar    DWORD PTR [ecx+0x3cfcc974],0x95
  414e28:	fidiv  DWORD PTR [eax-0x49]
  414e2b:	in     al,dx
  414e2c:	int3   
  414e2d:	xor    dh,BYTE PTR [esi]
  414e2f:	data16 add BYTE PTR ss:[eax+0x6ccac3e6],dh
  414e37:	cmp    bl,BYTE PTR [esi-0x42]
  414e3a:	test   al,0xaf
  414e3c:	inc    edi
  414e3d:	push   0x152566de
  414e42:	jnp    0x414e4b
  414e44:	push   ebx
  414e45:	fcmovbe st,st(1)
  414e47:	push   ebp
  414e48:	or     BYTE PTR [ebx],ah
  414e4a:	imul   BYTE PTR [edi]
  414e4c:	mov    al,ds:0xefa79c0c
  414e51:	(bad)  
  414e53:	jne    0x414e97
  414e55:	stc    
  414e56:	mov    edi,0x627acaa3
  414e5b:	test   ah,cl
  414e5d:	push   0x9dc2cd4
  414e62:	enter  0x246e,0x69
  414e66:	mov    ds:0xf86b22f5,eax
  414e6b:	vpmullw xmm1,xmm2,XMMWORD PTR [edi]
  414e6f:	add    ebp,DWORD PTR [ecx-0x60b4f32e]
  414e75:	stos   BYTE PTR es:[edi],al
  414e76:	fidiv  WORD PTR [ecx+0x6f]
  414e79:	sbb    eax,0x8a8babb9
  414e7e:	scas   eax,DWORD PTR es:[edi]
  414e7f:	jae    0x414e63
  414e81:	js     0x414ea5
  414e83:	mov    edx,0xe2057456
  414e88:	xchg   edx,eax
  414e89:	push   0x4678d034
  414e8e:	leave  
  414e8f:	aaa    
  414e90:	mov    ebx,0xc9c85bf5
  414e95:	ss pop es
  414e97:	pop    ecx
  414e98:	mov    ecx,0x451314be
  414e9d:	das    
  414e9e:	stos   BYTE PTR es:[edi],al
  414e9f:	mov    es,edi
  414ea1:	cmp    al,0x3c
  414ea3:	repz adc BYTE PTR [ebx+0x465c6eee],bh
  414eaa:	loopne 0x414f09
  414eac:	jmp    0x414e5e
  414eae:	and    al,0x5b
  414eb0:	mov    eax,DWORD PTR [ebx-0x4f6e210a]
  414eb6:	ins    DWORD PTR es:[edi],dx
  414eb7:	lahf   
  414eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eb9:	mov    ebx,db2
  414ebc:	mov    eax,ds:0xf79b7331
  414ec1:	pop    ebp
  414ec2:	dec    edx
  414ec3:	and    eax,0xf0869ea9
  414ec8:	pop    ecx
  414ec9:	outs   dx,BYTE PTR ds:[esi]
  414eca:	push   0xffffffc5
  414ecc:	mov    ebx,0x21ff6c31
  414ed1:	or     eax,0x4580c045
  414ed6:	cmp    ch,dh
  414ed8:	(bad)  
  414eda:	pop    ebx
  414edb:	vmread DWORD PTR [ecx+0x5d],esi
  414edf:	xchg   ebx,eax
  414ee0:	aam    0xe3
  414ee2:	or     DWORD PTR [edi+0x55],ebx
  414ee5:	out    dx,eax
  414ee6:	push   cs
  414ee7:	stos   DWORD PTR es:[edi],eax
  414ee8:	sub    al,0x7d
  414eea:	fsubrp st(4),st
  414eec:	sub    DWORD PTR [edx+0x65],edx
  414eef:	loope  0x414ef2
  414ef1:	jne    0x414f08
  414ef3:	inc    esp
  414ef4:	lods   al,BYTE PTR ds:[esi]
  414ef5:	sub    al,0x5d
  414ef7:	pop    edi
  414ef8:	fs inc ebx
  414efa:	sti    
  414efb:	cmp    ah,ch
  414efd:	repnz mov esp,0xe2d62fc0
  414f03:	stos   DWORD PTR es:[edi],eax
  414f04:	sti    
  414f05:	push   0x2d
  414f07:	pop    eax
  414f08:	add    al,0xc1
  414f0a:	aaa    
  414f0b:	clc    
  414f0c:	data16 stos BYTE PTR es:[edi],al
  414f0e:	mov    esi,0xbf77157
  414f13:	gs xchg ebp,eax
  414f15:	sub    ah,BYTE PTR ds:0x7ef541b9
  414f1b:	sbb    esp,DWORD PTR [ebp+0x49]
  414f1e:	add    dh,ch
  414f20:	cmp    BYTE PTR [ebp-0x7c380d35],bh
  414f26:	pushf  
  414f27:	sbb    esi,DWORD PTR [eax-0x14c8df09]
  414f2d:	sub    ecx,eax
  414f2f:	popa   
  414f30:	fwait
  414f31:	jmp    0x4292:0x224b2774
  414f38:	xchg   ebx,eax
  414f39:	adc    al,0x3e
  414f3b:	push   esi
  414f3c:	add    cl,bl
  414f3e:	(bad)  
  414f3f:	repz mov ?,WORD PTR [eax+edx*4-0x80]
  414f44:	lds    esp,FWORD PTR [ecx+0x41]
  414f47:	dec    edx
  414f48:	fldenv [esi+ecx*4+0x12a1724c]
  414f4f:	mov    ebx,0xf66cdb1f
  414f54:	ins    BYTE PTR es:[edi],dx
  414f55:	mov    dh,0xb0
  414f57:	out    dx,eax
  414f58:	cmp    DWORD PTR [esi],esi
  414f5a:	fwait
  414f5b:	lea    eax,[esi+0x28]
  414f5e:	fsubr  QWORD PTR [eax]
  414f60:	mov    ds:0x1be69eb,al
  414f65:	out    dx,al
  414f66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f67:	pop    ebx
  414f68:	mul    esp
  414f6a:	jmp    0xa72551dd
  414f6f:	dec    eax
  414f70:	gs inc esp
  414f72:	mov    gs,edi
  414f74:	add    eax,0x202e30dc
  414f79:	mov    ds:0x34b524c7,eax
  414f7e:	neg    BYTE PTR [ecx+0x47]
  414f81:	pop    ebp
  414f82:	push   eax
  414f83:	sahf   
  414f84:	jge    0x414fce
  414f86:	in     eax,dx
  414f87:	add    dh,BYTE PTR [ecx-0x5c]
  414f8a:	fnstsw WORD PTR [esi*2+0x594e9840]
  414f91:	cmc    
  414f92:	mov    bh,0x39
  414f94:	icebp  
  414f95:	inc    BYTE PTR [edx-0x255bdb21]
  414f9b:	push   0x33
  414f9d:	stos   BYTE PTR es:[edi],al
  414f9e:	ins    BYTE PTR es:[edi],dx
  414f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fa0:	out    0x94,eax
  414fa2:	mov    bh,cl
  414fa4:	lods   eax,DWORD PTR ds:[esi]
  414fa5:	cmp    al,0x93
  414fa7:	retf   
  414fa8:	js     0x414f84
  414faa:	in     al,dx
  414fab:	dec    ecx
  414fac:	addr16 ds push ecx
  414faf:	lea    edx,[edx]
  414fb1:	pop    eax
  414fb2:	rcr    DWORD PTR [edx+0x3d],1
  414fb5:	es es dec edx
  414fb8:	call   FWORD PTR [eax]
  414fba:	out    dx,al
  414fbb:	outs   dx,DWORD PTR ds:[esi]
  414fbc:	jnp    0x414fbe
  414fbe:	repnz int3 
  414fc0:	add    BYTE PTR [edx-0x27],dl
  414fc3:	(bad)  
  414fc5:	clc    
  414fc6:	dec    edi
  414fc7:	into   
  414fc8:	lods   al,BYTE PTR ds:[esi]
  414fc9:	jg     0x414ffa
  414fcb:	or     eax,0x372c77a6
  414fd0:	xchg   ecx,eax
  414fd1:	pusha  
  414fd2:	jmp    0x414f80
  414fd4:	ror    BYTE PTR [edx+0x7a],0x45
  414fd8:	scas   eax,DWORD PTR es:[edi]
  414fd9:	clc    
  414fda:	mov    edi,0xa350a6cc
  414fdf:	push   ebp
  414fe0:	or     al,0xe4
  414fe2:	adc    cl,dl
  414fe4:	adc    BYTE PTR [ebp-0x35],cl
  414fe7:	mov    edx,0xfcf24b35
  414fec:	pop    ebx
  414fed:	shl    ch,1
  414fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ff0:	mov    ebx,DWORD PTR [esi+ebp*8+0x782e31fe]
  414ff7:	sbb    eax,0x25feb78a
  414ffc:	mov    ds:0xd2988eb,al
  415001:	sub    bl,BYTE PTR [edx-0x15e72c66]
  415007:	sub    eax,0x24bb1bc3
  41500c:	sbb    esi,DWORD PTR [edx-0x80261f5]
  415012:	sub    BYTE PTR [edx],0x59
  415015:	or     BYTE PTR [ecx+0x3d],dl
  415018:	lods   al,BYTE PTR ds:[esi]
  415019:	and    al,0xb0
  41501b:	mov    dh,0x66
  41501d:	mov    edi,0x12e180d2
  415022:	or     eax,0x118f11ea
  415027:	leave  
  415028:	inc    eax
  415029:	in     eax,0x47
  41502b:	call   0x7ed:0xa831f8de
  415032:	call   0x172b0d29
  415037:	mov    edx,0x1c68a200
  41503c:	(bad)  
  41503d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41503f:	jmp    0x414fd4
  415041:	out    0x16,eax
  415043:	and    DWORD PTR [esi-0x1],esp
  415046:	call   FWORD PTR [ebp+0x540ed521]
  41504c:	mov    esi,0x6d53258
  415051:	and    ah,BYTE PTR [ecx+eiz*8-0x74]
  415055:	out    0x3c,al
  415057:	pusha  
  415058:	ficomp WORD PTR [edi+0x17]
  41505b:	mov    edi,0xdcb03bb4
  415060:	pop    ss
  415061:	cmp    ebp,DWORD PTR [ebx-0x3a8cc01f]
  415067:	mov    cs,WORD PTR [edx]
  415069:	jmp    0x41508c
  41506b:	push   ecx
  41506c:	imul   ecx,DWORD PTR [ecx-0x38],0x43
  415070:	mov    eax,ds:0xe57987c2
  415075:	stos   DWORD PTR es:[edi],eax
  415076:	shl    BYTE PTR [eax-0x23],1
  415079:	shl    BYTE PTR [edi+0x5f014c06],cl
  41507f:	pop    ss
  415080:	or     eax,0x88dd219f
  415085:	and    DWORD PTR [esi],ebx
  415087:	mov    cl,0xd2
  415089:	sub    DWORD PTR [esi-0x22dc4ec],ebx
  41508f:	mov    ebx,0x8a162f8
  415094:	ds hlt 
  415096:	and    dh,dh
  415098:	(bad)
  41509b:	push   edx
  41509c:	shl    DWORD PTR [edi+0x14],0x28
  4150a0:	xor    BYTE PTR [esi-0x202d4d24],ah
  4150a6:	xor    al,0x7b
  4150a8:	call   0xae61:0x7cff949
  4150af:	clc    
  4150b0:	push   edi
  4150b1:	inc    esi
  4150b2:	sub    al,0x37
  4150b4:	and    bl,ch
  4150b6:	fwait
  4150b7:	dec    ebp
  4150b8:	pushf  
  4150b9:	cmp    DWORD PTR [ecx-0x797ed665],edx
  4150bf:	fld    TBYTE PTR [esi]
  4150c1:	fild   DWORD PTR [edx-0x2c]
  4150c5:	jge    0x415079
  4150c7:	mov    ch,0x30
  4150c9:	dec    edx
  4150ca:	xchg   ebp,eax
  4150cb:	mov    dl,0xca
  4150cd:	lahf   
  4150ce:	jnp    0x41511a
  4150d0:	add    BYTE PTR [ecx],0xfb
  4150d3:	ds adc dh,al
  4150d6:	xor    al,0xe6
  4150d8:	mov    ebx,DWORD PTR [edi-0x19429eb2]
  4150de:	jmp    0x4150a3
  4150e0:	sbb    eax,0x576075a9
  4150e5:	test   BYTE PTR [edx+ebx*4],cl
  4150e8:	and    BYTE PTR [ecx],bl
  4150ea:	inc    esp
  4150eb:	arpl   WORD PTR [edi-0x24],bx
  4150ee:	mov    bl,0xa
  4150f0:	pushf  
  4150f1:	pop    eax
  4150f2:	mov    bh,0x59
  4150f4:	es push esi
  4150f6:	add    DWORD PTR ds:0x802ed431,ebx
  4150fc:	inc    BYTE PTR [edx-0x58282e46]
  415102:	jmp    0xa573:0x77b1df7d
  415109:	mov    dl,0xdb
  41510b:	call   0x5c63:0x243a8463
  415112:	add    DWORD PTR [eax+0x5e],ebx
  415115:	mov    esi,0xd2738502
  41511a:	fdiv   QWORD PTR [edx+0x2af638f8]
  415120:	jns    0x41515b
  415122:	repnz or eax,0xbe7a8b30
  415128:	jns    0x4151a8
  41512a:	dec    edx
  41512b:	ja     0x4150ca
  41512d:	mov    bh,BYTE PTR [ecx+0x7a]
  415130:	jb     0x415102
  415132:	cwde   
  415133:	pop    edi
  415134:	(bad)  {k6}
  415139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41513a:	pushf  
  41513b:	call   0xf0b6:0x48f4af00
  415142:	hlt    
  415143:	dec    edi
  415144:	mov    ds:0xa98b39b6,eax
  415149:	inc    esp
  41514a:	lods   eax,DWORD PTR ds:[esi]
  41514b:	sbb    eax,0xe48cfb2c
  415150:	mov    edi,0xf2b0ff1b
  415155:	jp     0x415151
  415157:	scas   eax,DWORD PTR es:[edi]
  415158:	pusha  
  415159:	call   0xfba755a4
  41515e:	or     eax,edx
  415160:	fwait
  415161:	pop    edx
  415162:	add    dh,BYTE PTR [edx-0x32]
  415165:	ja     0x4151bc
  415167:	ret    
  415168:	mov    ebx,0x9e985f07
  41516d:	and    DWORD PTR [ecx+0x20],ecx
  415170:	shl    ebx,0x7a
  415173:	jmp    0x3eb7:0x76d6078a
  41517a:	and    esp,0x3cb6a7aa
  415180:	je     0x415119
  415182:	cwde   
  415183:	adc    BYTE PTR [ebx+0x60d10922],cl
  415189:	dec    eax
  41518a:	das    
  41518b:	and    esp,DWORD PTR [ecx+edx*8]
  41518e:	adc    eax,0xced44e49
  415193:	fmul   st,st(2)
  415195:	or     al,0x38
  415197:	cli    
  415198:	call   0xdaac:0x5369cb7f
  41519f:	push   esp
  4151a0:	outs   dx,DWORD PTR ds:[esi]
  4151a1:	jl     0x415154
  4151a3:	jbe    0x415138
  4151a5:	jno    0x415199
  4151a7:	popf   
  4151a8:	ins    DWORD PTR es:[edi],dx
  4151a9:	shl    DWORD PTR [edi],0xb
  4151ac:	mov    esi,0x15f21557
  4151b1:	sti    
  4151b2:	out    0x7a,eax
  4151b4:	inc    esi
  4151b5:	adc    al,0x35
  4151b7:	sbb    BYTE PTR ds:0x96c8f9ac,ch
  4151bd:	push   esp
  4151be:	and    al,0xe7
  4151c0:	push   0xffffff87
  4151c2:	inc    eax
  4151c3:	out    0xd0,eax
  4151c5:	and    DWORD PTR [edx+0x27c28033],0x1a8e03e2
  4151cf:	push   es
  4151d0:	fstp   DWORD PTR [edx-0x4a]
  4151d3:	mov    al,0x66
  4151d5:	fidiv  DWORD PTR [esi+0x59]
  4151d8:	mov    ecx,0x7f8d2f81
  4151dd:	mov    edx,0xe3d4530f
  4151e2:	icebp  
  4151e3:	call   0xf903:0x9137a7e3
  4151ea:	aaa    
  4151eb:	in     eax,dx
  4151ec:	hlt    
  4151ed:	dec    ebx
  4151ee:	mov    cl,0xe5
  4151f0:	mov    eax,0x7614c098
  4151f5:	mov    ebx,es
  4151f7:	out    dx,eax
  4151f8:	jmp    0xc9:0x6fbd2432
  4151ff:	jp     0x41522d
  415201:	hlt    
  415202:	ins    DWORD PTR es:[edi],dx
  415203:	inc    ebp
  415204:	xor    BYTE PTR ds:[edi+ebx*2+0x123bcd10],ch
  41520c:	mov    ch,0x83
  41520e:	lea    eax,[esi]
  415210:	dec    ebx
  415211:	outs   dx,BYTE PTR ds:[esi]
  415212:	add    DWORD PTR [edx],eax
  415214:	push   ecx
  415215:	and    edi,DWORD PTR [edi]
  415217:	push   edx
  415218:	pop    ds
  415219:	inc    ecx
  41521a:	jl     0x4151a1
  41521c:	aad    0xb6
  41521e:	in     eax,0x52
  415220:	sbb    DWORD PTR [eax-0x46],edx
  415223:	push   ecx
  415224:	add    al,0x5c
  415226:	inc    edx
  415227:	cdq    
  415228:	leave  
  415229:	jmp    0x415287
  41522b:	and    ebp,ecx
  41522d:	adc    DWORD PTR [ebp-0x25],esp
  415230:	pop    es
  415231:	mov    al,ds:0x2db5e198
  415236:	xor    dl,0x68
  415239:	lods   al,BYTE PTR ds:[esi]
  41523a:	cmc    
  41523b:	cmp    BYTE PTR [eax+0x73],ah
  41523e:	jmp    0xe9d3:0xc2fbc8d8
  415245:	(bad)  [ebx-0x2840a69e]
  41524b:	mov    al,0x2a
  41524d:	arpl   WORD PTR [ecx],dx
  41524f:	lahf   
  415250:	je     0x4152cd
  415252:	xchg   DWORD PTR [eax-0x11ff02f],esi
  415258:	push   esp
  415259:	pop    ebp
  41525a:	push   esp
  41525b:	mov    edi,0xb1a4922a
  415260:	push   ecx
  415261:	sar    ebp,1
  415263:	mov    esi,0xf59079c8
  415268:	sub    DWORD PTR [ebp+ebx*2-0x54],edi
  41526c:	dec    edx
  41526d:	fmul   DWORD PTR [esi+0x52]
  415270:	pop    ecx
  415271:	std    
  415272:	mov    ecx,0x215c461c
  415277:	dec    edi
  415278:	repnz mov cl,0x3e
  41527b:	mov    bl,0xa2
  41527d:	xchg   esp,eax
  41527e:	ins    DWORD PTR es:[edi],dx
  41527f:	sub    eax,0x3a76a47b
  415284:	xchg   edx,eax
  415285:	xchg   esi,eax
  415286:	adc    al,BYTE PTR [ebp-0x71]
  415289:	aad    0xa7
  41528b:	fst    DWORD PTR ds:0xda1bae15
  415291:	jo     0x41523b
  415293:	xchg   BYTE PTR [edx],al
  415295:	jne    0x415289
  415297:	sahf   
  415298:	xor    ch,BYTE PTR [eax]
  41529a:	add    al,0x3f
  41529c:	fbld   TBYTE PTR [ecx+edi*2+0x3bff7d2a]
  4152a3:	sahf   
  4152a4:	(bad)  
  4152a5:	dec    eax
  4152a6:	mov    ah,0x7b
  4152a8:	shr    BYTE PTR [ecx+0x40],cl
  4152ab:	stos   BYTE PTR es:[edi],al
  4152ac:	aas    
  4152ad:	icebp  
  4152ae:	jecxz  0x415317
  4152b0:	imul   dx,WORD PTR ds:0x55e01edb,0x4b9f
  4152b9:	add    al,dl
  4152bb:	lods   al,BYTE PTR ds:[esi]
  4152bc:	add    dh,bh
  4152be:	and    eax,0x40871a00
  4152c3:	adc    al,0xc8
  4152c5:	fdivrp st(2),st
  4152c7:	and    dl,BYTE PTR [ebx+0x71]
  4152ca:	out    0xb8,al
  4152cc:	dec    esp
  4152cd:	push   ecx
  4152ce:	cmp    DWORD PTR [edi-0x67bce894],0xe
  4152d5:	adc    eax,0xd642c6ea
  4152da:	push   0xffffff96
  4152dc:	pop    ds
  4152dd:	jp     0x4152a2
  4152df:	in     eax,0x33
  4152e1:	adc    BYTE PTR [ebx],ah
  4152e3:	sar    DWORD PTR [ecx+0x35],0xc7
  4152e7:	dec    eax
  4152e8:	mov    BYTE PTR [edi],0x48
  4152eb:	enter  0x5530,0x7a
  4152ef:	jmp    0x74a6:0x1cf06aa9
  4152f6:	jnp    0x4152f7
  4152f8:	add    edx,DWORD PTR [esi+0x31]
  4152fb:	and    ecx,edi
  4152fd:	mov    esi,0x84974987
  415302:	dec    ebp
  415303:	aad    0x30
  415305:	add    dl,bl
  415307:	ja     0x41533c
  415309:	test   al,0xbc
  41530b:	xor    al,0xfc
  41530d:	leave  
  41530e:	xor    esp,DWORD PTR [edx-0x6bcdb282]
  415314:	inc    ebp
  415315:	pop    ebx
  415316:	adc    al,0x60
  415318:	popf   
  415319:	data16 mov al,ds:0x4d62c8e3
  41531f:	stc    
  415320:	and    BYTE PTR [edi+esi*8],al
  415323:	mov    al,BYTE PTR [ecx]
  415325:	popf   
  415326:	sbb    al,0x29
  415328:	and    al,BYTE PTR ds:0xdb9452a9
  41532e:	mov    es,WORD PTR [eax]
  415330:	mov    dl,0x12
  415332:	cs dec eax
  415334:	cmp    eax,0xf021510c
  415339:	mov    esp,0x73c98dcb
  41533e:	mov    ?,WORD PTR [ecx]
  415340:	lea    ecx,[eax+0x4a]
  415343:	xor    eax,0xb80e301c
  415348:	dec    ecx
  415349:	loop   0x415323
  41534b:	and    ah,al
  41534d:	outs   dx,BYTE PTR ds:[esi]
  41534e:	dec    edx
  41534f:	les    ebp,FWORD PTR [ebp-0x2f]
  415352:	ror    esi,0x2d
  415355:	aas    
  415356:	js     0x4153c2
  415358:	xor    dl,BYTE PTR [edi-0x4a346b2f]
  41535e:	cs mov edi,0xeca7314c
  415364:	mov    dl,0xc4
  415366:	add    BYTE PTR [ecx],cl
  415368:	fist   WORD PTR [ebp+esi*2-0x39]
  41536c:	dec    ebp
  41536d:	les    ebp,FWORD PTR [eax+0x7ebf0158]
  415373:	lods   eax,DWORD PTR ds:[esi]
  415374:	mov    DWORD PTR [esi+0x6cacfa54],edi
  41537a:	fwait
  41537b:	data16 mov dl,0x55
  41537e:	out    dx,al
  41537f:	imul   esi,edx,0x4abf988a
  415385:	cld    
  415386:	mov    ebx,DWORD PTR [ecx-0x1d7fbc95]
  41538c:	test   BYTE PTR [edx-0x7c],cl
  41538f:	popf   
  415390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415391:	mov    edx,DWORD PTR [ebp-0x503bec51]
  415397:	aam    0xd3
  415399:	and    eax,0x427afcad
  41539e:	add    al,0xad
  4153a0:	sbb    ah,al
  4153a2:	cmp    ch,0x9e
  4153a5:	loope  0x4153ba
  4153a7:	or     BYTE PTR [ebp-0x3f0b4586],al
  4153ad:	dec    esi
  4153ae:	jbe    0x41536b
  4153b0:	adc    ebx,esp
  4153b2:	push   edi
  4153b3:	mov    cl,0x4c
  4153b5:	out    0xb2,eax
  4153b7:	or     eax,0x17302ac6
  4153bc:	mov    esp,0xd98f9ba8
  4153c1:	imul   ebp,DWORD PTR [ebx+ebx*1-0x61],0x1d43d90c
  4153c9:	loopne 0x41536e
  4153cb:	xor    DWORD PTR [ebx],0xffffffdf
  4153ce:	lock repnz cwde 
  4153d1:	and    BYTE PTR [edi+0x62],ch
  4153d4:	push   ss
  4153d5:	cmp    DWORD PTR [ebx-0x1b],esp
  4153d8:	rcl    BYTE PTR [edi-0x4f55a746],0x55
  4153df:	cdq    
  4153e0:	add    al,0xb2
  4153e2:	xchg   ebp,eax
  4153e3:	xor    edi,DWORD PTR [ecx+0x65]
  4153e6:	aas    
  4153e7:	jge    0x415401
  4153e9:	or     dl,BYTE PTR [esi*1-0x37d747f9]
  4153f0:	cdq    
  4153f1:	out    0x51,al
  4153f3:	dec    ebx
  4153f4:	xchg   ecx,eax
  4153f5:	pop    es
  4153f6:	sahf   
  4153f7:	(bad)  
  4153f8:	xor    bh,BYTE PTR [ebp-0x735bd39e]
  4153fe:	ins    BYTE PTR es:[edi],dx
  4153ff:	icebp  
  415400:	daa    
  415401:	push   es
  415402:	push   ss
  415403:	cmp    al,0x5f
  415405:	in     al,dx
  415406:	sub    al,0xcd
  415408:	push   es
  415409:	push   ss
  41540a:	hlt    
  41540b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41540c:	stos   DWORD PTR es:[edi],eax
  41540d:	std    
  41540e:	sub    ebp,DWORD PTR [eax-0x72c375f7]
  415414:	pop    si
  415416:	lds    edx,FWORD PTR [ebx-0x6f73a83]
  41541c:	inc    esi
  41541d:	mov    edi,0x4c8a23dc
  415422:	test   ebp,ecx
  415424:	sub    ch,BYTE PTR [ecx-0x6303b65]
  41542a:	stc    
  41542b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41542c:	xor    eax,0xbcbd8596
  415431:	and    esi,ecx
  415433:	bound  eax,QWORD PTR [ecx+edi*1]
  415436:	add    eax,DWORD PTR [edi-0x62bebb4]
  41543c:	mov    edi,0xa99bdd2c
  415441:	daa    
  415442:	xor    cl,bh
  415444:	je     0x4154c3
  415446:	addr16 retf 0x4c94
  41544a:	mov    dh,0xa6
  41544c:	popf   
  41544d:	pop    ds
  41544e:	xchg   bh,al
  415450:	xchg   edi,eax
  415451:	loopne 0x41549f
  415453:	adc    BYTE PTR [ebx],bl
  415455:	adc    esi,DWORD PTR [ebp+0x4a]
  415458:	pop    esi
  415459:	div    DWORD PTR [eax-0x5ce6ee2e]
  41545f:	clc    
  415460:	test   DWORD PTR [edi],ecx
  415462:	popa   
  415463:	adc    BYTE PTR [ecx+0x2ac82497],cl
  415469:	cs in  al,0x57
  41546c:	retf   0x341c
  41546f:	pop    edi
  415470:	sub    eax,0x9e5a0241
  415475:	dec    bp
  415477:	scas   eax,DWORD PTR es:[edi]
  415478:	popa   
  415479:	fadd   DWORD PTR ds:0x5881e1b4
  41547f:	pop    ecx
  415480:	lods   al,BYTE PTR ds:[esi]
  415481:	inc    esp
  415482:	cmp    DWORD PTR [eax+edi*1-0x87fbf40],esi
  415489:	mov    al,ds:0xa51f4495
  41548e:	sbb    ebp,DWORD PTR [esi]
  415490:	jmp    0x3ee1:0x54743a2
  415497:	inc    esp
  415498:	mov    ecx,edx
  41549a:	ins    DWORD PTR es:[edi],dx
  41549b:	jmp    0xf3ff:0xda19b512
  4154a2:	add    dh,BYTE PTR [ebp-0x7909bae5]
  4154a8:	mov    eax,ds:0x3b7df123
  4154ad:	sti    
  4154ae:	mov    ecx,0xa77eef3b
  4154b3:	in     eax,0x43
  4154b5:	jno    0x41545b
  4154b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154b8:	inc    edi
  4154b9:	repnz outs dx,DWORD PTR ds:[esi]
  4154bb:	in     al,0x92
  4154bd:	jbe    0x415523
  4154bf:	mov    ebx,0xdf6d530f
  4154c4:	pop    edi
  4154c5:	adc    al,0x8e
  4154c7:	inc    eax
  4154c8:	sub    eax,0x9af81434
  4154cd:	xchg   esp,eax
  4154ce:	pop    ebx
  4154cf:	repz test DWORD PTR [esi],ebx
  4154d2:	pop    ss
  4154d3:	enter  0xaa50,0xe3
  4154d7:	sbb    dl,BYTE PTR [ecx-0x62a63f9c]
  4154dd:	popw   ds
  4154df:	gs push ebp
  4154e1:	repnz repnz fistp QWORD PTR [ebp+0x36]
  4154e6:	pushf  
  4154e7:	iret   
  4154e8:	mov    ecx,0xd6d3740c
  4154ed:	daa    
  4154ee:	retf   
  4154ef:	fmul   DWORD PTR [edi-0x7f79ec1e]
  4154f5:	push   es
  4154f6:	or     esp,DWORD PTR [ebp-0x49452b1a]
  4154fc:	loopne 0x415512
  4154fe:	cmc    
  4154ff:	push   esi
  415500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415501:	mov    DWORD PTR [esi-0x63],esp
  415504:	mov    esp,0xc8a016ba
  415509:	jle    0x41551d
  41550b:	inc    ecx
  41550c:	loope  0x415578
  41550e:	jno    0x4154e2
  415510:	hlt    
  415511:	div    eax
  415513:	(bad)  
  415514:	sar    BYTE PTR [esi-0xf],cl
  415517:	stos   BYTE PTR es:[edi],al
  415518:	mov    cl,0xe1
  41551a:	and    BYTE PTR [eax+0x5f0a0cbf],bh
  415520:	cs pop ds
  415522:	fwait
  415523:	adc    al,0x83
  415525:	arpl   WORD PTR [eax],di
  415527:	test   al,0x92
  415529:	add    eax,0xc2786226
  41552e:	mov    ds:0x465883f0,eax
  415533:	pop    ss
  415534:	dec    eax
  415535:	scas   eax,DWORD PTR es:[edi]
  415536:	int3   
  415537:	push   es
  415538:	adc    al,0xfc
  41553a:	or     al,0xaf
  41553c:	scas   al,BYTE PTR es:[edi]
  41553d:	add    DWORD PTR cs:[edx+ecx*1],edx
  415541:	rcl    ecx,0xe3
  415544:	lds    esp,FWORD PTR [ebx+0x78bf3168]
  41554a:	cmp    BYTE PTR [ecx+0x54664c],cl
  415550:	lahf   
  415551:	ss popf 
  415553:	and    al,0x51
  415555:	cmp    DWORD PTR [edi],ebp
  415557:	test   al,0x13
  415559:	bound  eax,QWORD PTR [edi-0x7d3d07b1]
  41555f:	mov    eax,0x8343a9a9
  415564:	lea    ebx,[eax-0x51]
  415567:	test   BYTE PTR [esi],cl
  415569:	pop    eax
  41556a:	inc    edi
  41556b:	add    DWORD PTR [ebp-0x2f],esp
  41556e:	mov    edi,0xb171b3e9
  415573:	inc    ecx
  415574:	sub    al,0x7a
  415576:	push   0xffffffa6
  415578:	inc    edx
  415579:	inc    edi
  41557a:	sbb    al,0xaa
  41557c:	jnp    0x41550d
  41557e:	mov    esi,0xf684d873
  415583:	sbb    bl,BYTE PTR [edx]
  415585:	inc    eax
  415586:	(bad)  
  415587:	dec    BYTE PTR [ebx-0x5134c355]
  41558d:	mov    dh,0xa
  41558f:	loop   0x415569
  415591:	dec    ebx
  415592:	jns    0x4155a2
  415594:	or     al,0xcc
  415596:	mov    edx,0x9c9de1aa
  41559b:	mov    al,0x8e
  41559d:	sbb    eax,0x9976c326
  4155a2:	push   es
  4155a3:	jecxz  0x415590
  4155a5:	addr16 mov ecx,0x234d8637
  4155ab:	pop    edx
  4155ac:	lods   eax,DWORD PTR ds:[esi]
  4155ad:	ins    DWORD PTR es:[edi],dx
  4155ae:	and    eax,0x1258b388
  4155b3:	lahf   
  4155b4:	fwait
  4155b5:	lods   al,BYTE PTR ds:[esi]
  4155b6:	and    DWORD PTR [ecx+0x59],edx
  4155b9:	das    
  4155ba:	or     ecx,edx
  4155bc:	xchg   ecx,edx
  4155be:	hlt    
  4155bf:	push   ebx
  4155c0:	sar    BYTE PTR [edx+0x1e],0xad
  4155c4:	push   ds
  4155c5:	cmp    al,0x2f
  4155c7:	pusha  
  4155c8:	pop    ebx
  4155c9:	daa    
  4155ca:	mov    al,0x8b
  4155cc:	retf   
  4155cd:	fs inc ecx
  4155cf:	aaa    
  4155d0:	inc    esp
  4155d1:	sbb    edi,ecx
  4155d3:	stos   BYTE PTR es:[edi],al
  4155d4:	fldenv [ebx+0x4a36a5a7]
  4155da:	dec    ebx
  4155db:	sahf   
  4155dc:	mov    ebx,0x441b38d4
  4155e1:	aas    
  4155e2:	mov    edi,DWORD PTR [edx]
  4155e4:	(bad)
  4155e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155e9:	pop    ecx
  4155ea:	les    eax,FWORD PTR [esi]
  4155ec:	sub    edx,DWORD PTR [ebp-0x1b]
  4155ef:	test   eax,0x1097c9c7
  4155f4:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155f6:	dec    edx
  4155f7:	or     ecx,0xffffff86
  4155fa:	cs out 0x8f,eax
  4155fd:	jb     0x415625
  4155ff:	lock dec edx
  415601:	add    al,0x41
  415603:	mov    al,0x32
  415605:	popf   
  415606:	aaa    
  415607:	xor    eax,0xf3a8eff2
  41560c:	iret   
  41560d:	cmp    al,0xa4
  41560f:	cmp    cl,BYTE PTR [ebx+edi*4]
  415612:	jge    0x4155c4
  415614:	mov    esi,0x28676ee4
  415619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41561a:	or     bh,BYTE PTR [edx+ebp*2-0x2f]
  41561e:	jnp    0x415641
  415620:	add    DWORD PTR [edi],edx
  415622:	ja     0x41560a
  415624:	loope  0x415621
  415626:	outs   dx,DWORD PTR ds:[esi]
  415627:	clc    
  415628:	xchg   ecx,eax
  415629:	cmp    al,0xc3
  41562b:	dec    eax
  41562c:	pop    esi
  41562d:	stc    
  41562e:	add    DWORD PTR [eax+0x54],0xffffff95
  415632:	sbb    ebx,DWORD PTR [ebx-0x5f]
  415635:	mov    fs,WORD PTR [edx-0x54]
  415638:	jecxz  0x415638
  41563a:	adc    eax,0x4b963623
  41563f:	mul    BYTE PTR [esp+ebx*1-0x2d]
  415643:	push   edx
  415644:	xchg   ebp,eax
  415645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415646:	adc    BYTE PTR [ebp-0x68],0xa8
  41564a:	mov    ds:0x3f66043f,eax
  41564f:	or     DWORD PTR [edi],0xffffffcf
  415652:	in     al,dx
  415653:	sbb    BYTE PTR [esi+ebx*4+0x41],0x78
  415658:	repz (bad) 
  41565a:	ins    BYTE PTR es:[edi],dx
  41565b:	ret    0x455c
  41565e:	out    0x5b,al
  415660:	jle    0x41566d
  415662:	nop
  415663:	mov    dl,0x4c
  415665:	imul   edi,DWORD PTR [eax],0x11783450
  41566b:	retf   
  41566c:	popa   
  41566d:	bound  ebp,QWORD PTR [eax]
  41566f:	out    dx,eax
  415670:	std    
  415671:	es dec edi
  415673:	push   0xffffff9b
  415675:	(bad)  
  415677:	fimul  DWORD PTR [ecx-0x47151701]
  41567d:	aas    
  41567e:	outs   dx,BYTE PTR ds:[esi]
  41567f:	sub    al,0x0
  415681:	sub    eax,DWORD PTR [edi+eiz*2]
  415684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415685:	ds adc dl,dl
  415688:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41568a:	lea    edi,[ebp+0x4703b561]
  415690:	shr    esi,1
  415692:	xor    cl,cl
  415694:	shl    DWORD PTR [edi],0xdb
  415697:	aaa    
  415698:	jp     0x4156d6
  41569a:	ret    
  41569b:	ins    BYTE PTR es:[edi],dx
  41569c:	loop   0x41562b
  41569e:	popf   
  41569f:	cs inc esi
  4156a1:	dec    ecx
  4156a2:	hlt    
  4156a3:	pop    edx
  4156a4:	or     BYTE PTR [esi+0x21],bl
  4156a7:	dec    edx
  4156a8:	mov    ds:0x728ade6e,al
  4156ad:	aad    0x7a
  4156af:	add    eax,0xd368f0c1
  4156b4:	ds push ebx
  4156b6:	pop    es
  4156b7:	mov    dl,0xef
  4156b9:	nop
  4156ba:	lahf   
  4156bb:	mov    ch,0x1b
  4156bd:	cmp    BYTE PTR [ecx],dh
  4156bf:	and    al,0x6d
  4156c1:	mov    ds:0xa838b1c5,eax
  4156c6:	or     dl,bh
  4156c8:	mov    gs,WORD PTR [ecx+0x4ff7d737]
  4156ce:	jnp    0x41570b
  4156d0:	push   esi
  4156d1:	push   eax
  4156d2:	loop   0x4156a3
  4156d4:	test   DWORD PTR [esi-0x1e],0xad24d0e3
  4156db:	pop    ds
  4156dc:	jge    0x415756
  4156de:	pop    esi
  4156df:	jle    0x4156d9
  4156e1:	enter  0x4dce,0xc
  4156e5:	xor    eax,esi
  4156e7:	cmc    
  4156e8:	in     eax,0x7a
  4156ea:	mov    edi,?
  4156ec:	in     al,dx
  4156ed:	sbb    DWORD PTR [eax-0x1fdfe97e],0x31
  4156f4:	jnp    0x41576b
  4156f6:	test   BYTE PTR [eax],0x9a
  4156f9:	jmp    0x987d:0xb4197c3b
  415700:	aad    0x52
  415702:	out    0xe9,al
  415704:	jne    0x415778
  415706:	ins    BYTE PTR es:[edi],dx
  415707:	mov    DWORD PTR [edx+esi*8-0x18],edi
  41570b:	mov    eax,0xbd600635
  415710:	fisttp QWORD PTR [edi-0x43]
  415713:	sar    BYTE PTR [ecx*1+0x8c6f292],cl
  41571a:	inc    ebp
  41571b:	ret    0x2fc1
  41571e:	test   DWORD PTR [esi+0x2941542d],eax
  415724:	or     ebx,ecx
  415726:	mov    WORD PTR [ebp-0x2f],gs
  415729:	or     al,0xf5
  41572b:	out    dx,eax
  41572c:	out    dx,eax
  41572d:	mov    ah,0x80
  41572f:	mov    eax,ds:0xa485b17c
  415734:	cmp    eax,DWORD PTR [edx-0x3f73940]
  41573a:	inc    ebx
  41573b:	aam    0xc9
  41573d:	sbb    al,0x9f
  41573f:	shl    BYTE PTR ds:0x6bafbeaf,cl
  415745:	in     al,dx
  415746:	inc    ebx
  415747:	mov    DWORD PTR [ebx+ecx*2-0x6f3334e],eax
  41574e:	(bad)  [eax-0x727922a0]
  415754:	data16 cmp dh,bh
  415757:	dec    eax
  415758:	(bad)  
  415759:	pop    ecx
  41575a:	aaa    
  41575b:	repz scas eax,DWORD PTR es:[edi]
  41575d:	sahf   
  41575e:	push   ebx
  41575f:	js     0x415727
  415761:	push   edi
  415762:	fcom   st(1)
  415764:	pop    es
  415765:	les    esp,FWORD PTR [edi+eiz*1]
  415768:	or     dl,BYTE PTR [esi]
  41576a:	mov    eax,0xe54c0e9e
  41576f:	in     al,0x1b
  415771:	retf   0xde38
  415774:	js     0x4157dd
  415776:	(bad)  
  415777:	js     0x4156fb
  415779:	out    dx,eax
  41577a:	add    BYTE PTR [ecx-0x17087d4e],cl
  415780:	popa   
  415781:	pop    ecx
  415782:	mov    ebx,0xdd72bb05
  415787:	lea    esi,[ebp+esi*2+0x57]
  41578b:	push   ebx
  41578c:	inc    edx
  41578d:	cld    
  41578e:	or     bl,BYTE PTR [eax+ebx*4-0x73112615]
  415795:	dec    esi
  415796:	das    
  415797:	jl     0x415750
  415799:	idiv   BYTE PTR [ecx+0x62bd5d46]
  41579f:	cmp    dl,ah
  4157a1:	stos   BYTE PTR es:[edi],al
  4157a2:	lods   eax,DWORD PTR ds:[esi]
  4157a3:	mov    al,ss:0x17a9a2f
  4157a9:	mov    ecx,ecx
  4157ab:	scas   eax,DWORD PTR es:[edi]
  4157ac:	jmp    0xa492cf5c
  4157b1:	shl    DWORD PTR [esi-0x2e],cl
  4157b4:	adc    esi,DWORD PTR [ebx]
  4157b6:	and    eax,0x3420f581
  4157bb:	mov    ecx,DWORD PTR [eax]
  4157bd:	xchg   DWORD PTR [eax-0x7],ebp
  4157c0:	call   0xa95d:0x779ec3c2
  4157c7:	or     eax,0x8a12bf15
  4157cc:	iret   
  4157cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157ce:	fstp   QWORD PTR [edi+0x79b3bf01]
  4157d4:	fist   DWORD PTR [esi]
  4157d6:	push   0x8
  4157d8:	in     al,0x62
  4157da:	leave  
  4157db:	jmp    0x41581c
  4157dd:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4157df:	sbb    eax,0x9b6accce
  4157e4:	retf   0x374e
  4157e7:	test   eax,0x68ef888a
  4157ec:	add    ecx,ecx
  4157ee:	mov    ss,WORD PTR [eax-0x5a3b9eeb]
  4157f4:	mov    WORD PTR [ecx-0x42],?
  4157f7:	(bad)  
  4157f8:	ror    ch,cl
  4157fa:	fsubr  QWORD PTR [ebx+0x59]
  4157fd:	cld    
  4157fe:	cmp    DWORD PTR [eax],0x5343151d
  415804:	push   ecx
  415805:	mov    esp,0xfeeea8ff
  41580a:	sbb    eax,0xb676f505
  41580f:	and    DWORD PTR [ecx-0x4cdbcd19],ebx
  415815:	lds    esi,FWORD PTR [esi+0x5d9b4bad]
  41581b:	mov    ebp,0x7a0fa777
  415820:	xor    DWORD PTR [edi-0x75],ebx
  415823:	retf   0x60dc
  415826:	sbb    al,0xf9
  415828:	dec    eax
  415829:	das    
  41582a:	ins    DWORD PTR es:[edi],dx
  41582b:	push   ss
  41582c:	add    DWORD PTR [edx-0x1002a7fc],edi
  415832:	cs pop esp
  415834:	mov    esp,0xa6ffb7e0
  415839:	or     ah,BYTE PTR [eax+0x1ac7a7c3]
  41583f:	push   es
  415840:	or     eax,0xd45f1f28
  415845:	push   esp
  415846:	(bad)  
  415847:	pop    ebx
  415848:	loope  0x4157f5
  41584a:	mov    bl,0x57
  41584c:	xchg   esi,eax
  41584d:	add    eax,0x3abddb3b
  415852:	xor    al,0xa9
  415854:	stos   BYTE PTR es:[edi],al
  415855:	push   0x7a
  415857:	dec    eax
  415858:	pop    eax
  415859:	adc    ecx,DWORD PTR [ecx]
  41585b:	or     BYTE PTR [esi+esi*2+0x526e460d],bl
  415862:	sahf   
  415863:	xchg   esp,eax
  415864:	addr16 mov ebx,0x8f98de2a
  41586a:	(bad)  
  41586b:	iret   
  41586c:	xchg   DWORD PTR [esi],edi
  41586e:	outs   dx,DWORD PTR ds:[esi]
  41586f:	mov    ebx,0xb6ce62ef
  415874:	and    eax,0x9120f161
  415879:	push   ebx
  41587a:	scas   eax,DWORD PTR es:[edi]
  41587b:	add    BYTE PTR [eax-0x78c9f5ed],bl
  415881:	lods   eax,DWORD PTR ds:[esi]
  415882:	ja     0x415863
  415884:	mov    ebp,?
  415886:	retf   0x7f25
  415889:	dec    ecx
  41588a:	sbb    eax,DWORD PTR [ecx+0x56]
  41588d:	shl    DWORD PTR [edi-0x74],cl
  415890:	lahf   
  415891:	icebp  
  415892:	fld    QWORD PTR [edx-0x5a]
  415895:	fwait
  415896:	mov    ah,0x60
  415898:	push   ebp
  415899:	pop    ss
  41589a:	cdq    
  41589b:	fwait
  41589c:	adc    BYTE PTR [eax],ah
  41589e:	out    0xd,eax
  4158a0:	sbb    cl,BYTE PTR [esi]
  4158a2:	push   edx
  4158a3:	in     eax,0x3e
  4158a5:	and    ch,BYTE PTR [esi+0x70c35070]
  4158ab:	addr16 retf 
  4158ad:	pop    ebx
  4158ae:	jne    0x41585c
  4158b0:	inc    ebp
  4158b1:	cmp    dh,BYTE PTR [ebp-0x5e]
  4158b4:	in     eax,0xa5
  4158b6:	int3   
  4158b7:	clc    
  4158b8:	inc    eax
  4158b9:	jne    0x41583d
  4158bb:	or     BYTE PTR [edi+0x3313c037],bh
  4158c1:	push   0x57062412
  4158c6:	ret    
  4158c7:	jns    0x41592c
  4158c9:	add    bh,BYTE PTR [ecx]
  4158cb:	sbb    DWORD PTR [ebx+0x5f],edx
  4158ce:	leave  
  4158cf:	and    ebx,DWORD PTR [edx]
  4158d1:	lods   al,BYTE PTR ds:[esi]
  4158d2:	imul   ebp,esp,0x74
  4158d5:	sti    
  4158d6:	nop
  4158d7:	add    ecx,ebx
  4158d9:	je     0x415918
  4158db:	fisttp WORD PTR [edi+0x2ce73869]
  4158e1:	cmp    bh,ah
  4158e3:	xchg   edi,eax
  4158e4:	inc    edi
  4158e5:	mov    eax,ds:0x1c1e4b8c
  4158ea:	scas   eax,DWORD PTR es:[edi]
  4158eb:	xor    eax,0x90959292
  4158f0:	pop    esi
  4158f1:	sub    eax,0x2ca10911
  4158f6:	repnz push esi
  4158f8:	lahf   
  4158f9:	stos   BYTE PTR es:[edi],al
  4158fa:	and    cl,BYTE PTR [edi+0x94db4ea]
  415900:	push   0xffffffcc
  415902:	pop    ss
  415903:	sbb    bh,BYTE PTR [ecx+0x71b656a6]
  415909:	pop    ebp
  41590a:	fld    st(2)
  41590c:	imul   ebp,eax,0x6a
  41590f:	addr16 es and ecx,0x7ff9c41d
  415917:	inc    eax
  415918:	jg     0x415927
  41591a:	add    esp,ecx
  41591c:	dec    ebx
  41591d:	shl    esi,cl
  41591f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415920:	jnp    0x415934
  415922:	pop    esp
  415923:	fstp   st(1)
  415925:	in     eax,0x3b
  415927:	fidiv  WORD PTR [edi-0x176c2f5c]
  41592d:	loop   0x41590f
  41592f:	inc    ebx
  415930:	or     DWORD PTR [ebp-0x68a01687],ecx
  415936:	sti    
  415937:	iret   
  415938:	pavgb  mm1,QWORD PTR [edx-0x34]
  41593c:	les    ecx,FWORD PTR [ecx]
  41593e:	sub    ch,dl
  415940:	mov    eax,ds:0x44201ada
  415945:	rcr    dh,cl
  415947:	mov    ecx,0xa215d9ff
  41594c:	ins    DWORD PTR es:[edi],dx
  41594d:	jmp    0xa0d3b90a
  415952:	push   esi
  415953:	xor    al,0xee
  415955:	mov    dh,0x1f
  415957:	xchg   DWORD PTR [ebp+0x17],esp
  41595a:	fld    DWORD PTR [ebx+ebp*2-0x541f23ee]
  415961:	or     al,0x22
  415963:	in     eax,dx
  415964:	out    0x9e,eax
  415966:	or     DWORD PTR [ecx],0xffffffbe
  415969:	add    al,al
  41596b:	repnz and dl,BYTE PTR [eax+0x5f8691bf]
  415972:	xchg   DWORD PTR [ecx],edx
  415974:	fidiv  DWORD PTR [ecx-0x3a]
  415977:	fldenv ds:[eax]
  41597a:	(bad)  
  41597b:	daa    
  41597c:	add    edx,DWORD PTR [ebx+0x2d8ff1e3]
  415982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415983:	inc    ebx
  415984:	sub    dh,0xa3
  415987:	iret   
  415988:	cs mov esi,0xc1ecb99e
  41598e:	dec    ebp
  41598f:	add    eax,0x5ca6fcbb
  415994:	sbb    esi,DWORD PTR [edi-0x4d]
  415997:	dec    eax
  415998:	add    al,0xdd
  41599a:	repz pop eax
  41599c:	or     BYTE PTR [edi+0x5],ch
  41599f:	mov    ebp,0x2060a564
  4159a4:	outs   dx,BYTE PTR ds:[esi]
  4159a5:	xlat   BYTE PTR ds:[ebx]
  4159a6:	push   ebx
  4159a7:	mov    ds,WORD PTR [ecx]
  4159a9:	jo     0x415a04
  4159ab:	fwait
  4159ac:	les    eax,FWORD PTR [esp+ebx*2+0x76284be8]
  4159b3:	adc    bl,BYTE PTR [esi+ebx*1+0x46]
  4159b7:	hlt    
  4159b8:	mov    BYTE PTR [ebx-0x4a],ah
  4159bb:	inc    ebp
  4159bc:	mov    DWORD PTR [ecx+0x609b6750],edi
  4159c2:	or     al,0x74
  4159c4:	scas   eax,DWORD PTR es:[edi]
  4159c5:	xor    bl,0x57
  4159c8:	dec    ebx
  4159c9:	adc    DWORD PTR [ecx+0x6f8e22c1],ebx
  4159cf:	mov    al,0xcb
  4159d1:	sub    DWORD PTR [ebp+ebp*8+0x6a375e05],ebp
  4159d8:	jmp    0xf9c2:0x70dac5ef
  4159df:	lods   eax,DWORD PTR ds:[esi]
  4159e0:	dec    ebp
  4159e1:	or     esi,DWORD PTR [edx-0x4a38b0d6]
  4159e7:	push   esp
  4159e8:	jl     0x415a3e
  4159ea:	push   0x6c
  4159ec:	pop    es
  4159ed:	or     edx,esp
  4159ef:	dec    ebx
  4159f0:	clc    
  4159f1:	mov    dl,0x9b
  4159f3:	out    dx,eax
  4159f4:	jo     0x4159f8
  4159f6:	cmp    BYTE PTR [ebx-0x7e4bd1ad],cl
  4159fc:	mov    ds,WORD PTR [ebp+ecx*4-0x69]
  415a00:	rcl    BYTE PTR ds:[eax+0x5afc1619],1
  415a07:	push   ebx
  415a08:	push   edx
  415a09:	or     esp,ebx
  415a0b:	stos   DWORD PTR es:[edi],eax
  415a0c:	fcom   QWORD PTR [edi]
  415a0e:	push   ecx
  415a0f:	mov    DWORD PTR [edi],ecx
  415a11:	xor    BYTE PTR [ecx],bh
  415a13:	es cmp al,0x7
  415a16:	shl    edx,0x78
  415a19:	sub    DWORD PTR [eax-0x4add40b8],esi
  415a1f:	dec    eax
  415a20:	push   es
  415a21:	push   esp
  415a22:	popa   
  415a23:	fstp   QWORD PTR [edx+0x67848f8c]
  415a29:	ins    BYTE PTR es:[edi],dx
  415a2a:	xlat   BYTE PTR ds:[ebx]
  415a2b:	jl     0x415a6a
  415a2d:	dec    ebp
  415a2e:	mov    dh,0xfd
  415a30:	inc    ebx
  415a31:	imul   ecx,DWORD PTR [ecx],0xffffffa2
  415a34:	xlat   BYTE PTR ds:[ebx]
  415a35:	xchg   esi,eax
  415a36:	push   ebx
  415a37:	adc    DWORD PTR [ebp-0x21719c04],ebp
  415a3d:	das    
  415a3e:	lds    esi,FWORD PTR [eax+0x7a]
  415a41:	fisubr WORD PTR [edi+0x7b707864]
  415a47:	je     0x415a57
  415a49:	mov    dh,0x70
  415a4b:	push   esp
  415a4c:	loopne 0x415a68
  415a4e:	(bad)  
  415a4f:	xlat   BYTE PTR ds:[ebx]
  415a50:	inc    ecx
  415a51:	fst    st(3)
  415a53:	call   0x1a202d7
  415a58:	dec    eax
  415a59:	loope  0x415a7f
  415a5b:	stc    
  415a5c:	xor    al,0xeb
  415a5e:	shr    DWORD PTR [edx+0x8],0xd0
  415a62:	add    eax,0x6bdf367a
  415a67:	popf   
  415a68:	xor    eax,0x86026319
  415a6d:	push   ds
  415a6e:	mov    dl,0x38
  415a70:	retf   
  415a71:	or     ebp,DWORD PTR [ebp+0xbc3a5cc]
  415a77:	cdq    
  415a78:	adc    BYTE PTR [edi],ch
  415a7a:	jmp    0xf590:0x40dcfe12
  415a81:	xchg   eax,edx
  415a83:	mov    ebp,0xef540acd
  415a88:	pop    esp
  415a89:	call   0xba88fbe
  415a8e:	repz bound edi,QWORD PTR [edi]
  415a91:	xor    edi,edi
  415a93:	sbb    DWORD PTR [edx],edx
  415a95:	and    ebx,DWORD PTR [ecx+0xb]
  415a98:	mov    ebp,0x7b647fd6
  415a9d:	je     0x415a51
  415a9f:	fild   WORD PTR [ebp-0x1a]
  415aa2:	add    DWORD PTR [eax+0x38],0x5c421e0c
  415aa9:	bound  esi,QWORD PTR [ebp+0x70]
  415aac:	cmp    eax,0x4630a8aa
  415ab1:	xchg   BYTE PTR [ebp+0x38],cl
  415ab4:	mov    esp,fs
  415ab6:	pop    ebx
  415ab7:	imul   edx,DWORD PTR [esi+0x3cbd7951],0xc08ddb82
  415ac1:	dec    ebp
  415ac2:	mov    bl,0xc4
  415ac4:	enter  0xc136,0x55
  415ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ac9:	rcr    DWORD PTR [edi-0x2a],1
  415acc:	sub    BYTE PTR [ebx],0x2e
  415acf:	pop    ds
  415ad0:	addr16 sbb eax,0xaf775ef5
  415ad6:	inc    esp
  415ad7:	dec    ebp
  415ad8:	out    dx,eax
  415ad9:	mov    ebx,0x135a5284
  415ade:	aam    0xb7
  415ae0:	cld    
  415ae1:	out    0x1d,al
  415ae3:	pop    es
  415ae4:	xor    eax,0x76952ea7
  415ae9:	aam    0xa6
  415aeb:	push   0x6ea4ef27
  415af0:	test   BYTE PTR [eax+0x60e9122e],ah
  415af6:	mov    DWORD PTR ds:0xe663a892,0x97214a18
  415b00:	jnp    0x415aae
  415b02:	(bad)  
  415b03:	cwde   
  415b04:	test   ch,bh
  415b06:	cdq    
  415b07:	cli    
  415b08:	imul   eax,DWORD PTR [edx+edi*1],0x56
  415b0c:	popa   
  415b0d:	or     DWORD PTR [esi],0xf7c19943
  415b13:	xor    DWORD PTR ss:[ebp+0x6d],esp
  415b17:	xor    bl,BYTE PTR [ebx+0x68]
  415b1a:	(bad)  
  415b1b:	test   al,0x5a
  415b1d:	mov    DWORD PTR [esi],esp
  415b1f:	fdiv   DWORD PTR [edi-0x5ced7f00]
  415b25:	add    dh,BYTE PTR [edi]
  415b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b28:	cs inc edi
  415b2a:	mov    ds:0xbb931fbb,eax
  415b2f:	out    dx,eax
  415b30:	out    dx,al
  415b31:	ror    DWORD PTR [eax-0x26],1
  415b34:	jmp    0x2ff16004
  415b39:	unpckhps xmm2,XMMWORD PTR [edi]
  415b3c:	out    dx,al
  415b3d:	and    DWORD PTR [edx],eax
  415b3f:	ret    
  415b40:	and    cl,BYTE PTR [ecx-0x2f]
  415b43:	popf   
  415b44:	sub    al,0x3a
  415b46:	cmp    DWORD PTR [ebx],ebx
  415b48:	bound  eax,QWORD PTR [esp+edi*4]
  415b4b:	xor    bl,0xb0
  415b4e:	push   ebx
  415b4f:	js     0x415bbe
  415b51:	jns    0x415b76
  415b53:	out    dx,al
  415b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b55:	loop   0x415b8f
  415b57:	idiv   BYTE PTR [ecx]
  415b59:	push   0xdfbdfae5
  415b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b5f:	(bad)  
  415b60:	pushf  
  415b61:	ja     0x415b73
  415b63:	cmp    eax,0x2d116469
  415b68:	frstor [ecx]
  415b6a:	adc    al,0x5d
  415b6c:	lods   ax,WORD PTR ds:[esi]
  415b6e:	scas   eax,DWORD PTR es:[edi]
  415b6f:	ja     0x415bbf
  415b71:	fisub  DWORD PTR [bp+si]
  415b74:	lods   eax,DWORD PTR ds:[esi]
  415b75:	add    cl,0x2
  415b78:	cli    
  415b79:	in     eax,dx
  415b7a:	push   esi
  415b7b:	adc    al,0x80
  415b7d:	(bad)  
  415b7e:	mov    ah,0xc2
  415b80:	push   edi
  415b81:	jmp    0x37cde911
  415b86:	outs   dx,BYTE PTR ds:[esi]
  415b87:	pop    eax
  415b88:	pop    ss
  415b89:	icebp  
  415b8a:	xor    edi,edi
  415b8c:	or     edi,esp
  415b8e:	data16 loope 0x415b3e
  415b91:	pop    esi
  415b92:	jmp    0x415bcf
  415b94:	clc    
  415b95:	into   
  415b96:	aam    0x1f
  415b98:	(bad)  
  415b99:	retf   
  415b9a:	shl    BYTE PTR [eax-0x1ed8dd23],cl
  415ba0:	shl    DWORD PTR [eax],cl
  415ba2:	jmp    0xb131:0xdb39d2b9
  415ba9:	sub    cl,BYTE PTR [edi]
  415bab:	sbb    ecx,esi
  415bad:	mov    DWORD PTR [ecx+esi*1+0x5e3d95bc],eax
  415bb4:	daa    
  415bb5:	push   ecx
  415bb6:	mov    ebx,0xef739c9c
  415bbb:	dec    edi
  415bbc:	mov    al,ds:0xa8f86ce6
  415bc1:	lock mov ah,0xa9
  415bc4:	jns    0x415ba4
  415bc6:	sbb    DWORD PTR [ebp+0x68],0xffffffb3
  415bca:	mov    dl,0xfd
  415bcc:	sub    bl,BYTE PTR gs:[eax-0x39ebec8b]
  415bd3:	into   
  415bd4:	cmc    
  415bd5:	mov    ds:0x5cb79bbd,eax
  415bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bdb:	mov    dl,0x81
  415bdd:	xor    DWORD PTR [edi+0x2bb9dd20],edi
  415be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415be4:	cmp    BYTE PTR [ecx+0x72],0x10
  415be8:	jge    0x415b76
  415bea:	push   ebp
  415beb:	stc    
  415bec:	sub    al,BYTE PTR [edx+ebx*1-0x614094af]
  415bf3:	dec    edi
  415bf4:	cmp    al,0xcf
  415bf6:	and    ecx,DWORD PTR [eax-0x32]
  415bf9:	ror    ebx,0xb1
  415bfc:	sbb    eax,0x93890db7
  415c01:	xchg   ebx,eax
  415c02:	fcomp  QWORD PTR [ebx]
  415c04:	sar    al,0x34
  415c07:	add    DWORD PTR [eax+0x5885b1cc],ecx
  415c0d:	jb     0x415bb9
  415c0f:	pop    ss
  415c10:	push   ebx
  415c11:	aad    0xd3
  415c13:	mov    ah,0x3
  415c15:	add    DWORD PTR [edi+esi*1+0xc9ccf68],esp
  415c1c:	call   0x1c7b:0x1d071e73
  415c23:	cli    
  415c24:	cmp    esi,edx
  415c26:	(bad)  
  415c28:	or     eax,0xe831f3e7
  415c2d:	inc    esp
  415c2e:	outs   dx,DWORD PTR ds:[esi]
  415c2f:	jnp    0x415ca9
  415c31:	mov    eax,0xbc85d1df
  415c36:	cdq    
  415c37:	(bad)  
  415c38:	pop    es
  415c39:	stos   DWORD PTR es:[edi],eax
  415c3a:	xlat   BYTE PTR ds:[ebx]
  415c3b:	mov    ?,WORD PTR [edx+0x29b6ff05]
  415c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c42:	icebp  
  415c43:	inc    bx
  415c45:	pop    edi
  415c46:	sar    DWORD PTR [eax+0x52051229],cl
  415c4c:	shl    DWORD PTR fs:[edx],1
  415c4f:	xor    eax,0x32e28abb
  415c54:	pop    ebx
  415c55:	scas   eax,DWORD PTR es:[edi]
  415c56:	dec    esi
  415c57:	push   eax
  415c58:	xlat   BYTE PTR ds:[ebx]
  415c59:	lods   eax,DWORD PTR ds:[esi]
  415c5a:	xor    esi,DWORD PTR [edi-0x531de3fe]
  415c60:	(bad)  
  415c62:	ret    0x2bca
  415c65:	mov    bh,0x82
  415c67:	js     0x415c58
  415c69:	cmp    bl,BYTE PTR [esp+ebp*4+0x6d]
  415c6d:	cmp    esi,edx
  415c6f:	cwde   
  415c70:	mov    ebp,0xb7b6af46
  415c75:	retf   0x93f
  415c78:	and    cl,BYTE PTR [ebp+0x26551ffa]
  415c7e:	into   
  415c7f:	std    
  415c80:	inc    ebx
  415c81:	cld    
  415c82:	dec    ecx
  415c83:	das    
  415c84:	mov    ds,WORD PTR [edx]
  415c86:	inc    edi
  415c87:	inc    eax
  415c88:	push   eax
  415c89:	pop    esi
  415c8a:	jno    0x415ca6
  415c8c:	out    dx,eax
  415c8d:	in     al,dx
  415c8e:	ins    DWORD PTR es:[edi],dx
  415c8f:	push   ds
  415c90:	jns    0x415c9f
  415c92:	gs mov cl,0x72
  415c95:	enter  0xe7ee,0x2b
  415c99:	in     eax,dx
  415c9a:	sbb    BYTE PTR [ecx+0x7f],ah
  415c9d:	div    DWORD PTR [edi+0x7e]
  415ca0:	fs mov bl,0xdb
  415ca3:	mov    eax,0x690365fc
  415ca8:	xor    DWORD PTR [eax-0x4d],0xffffff83
  415cac:	inc    esi
  415cad:	fld    TBYTE PTR [eax-0x11615ca8]
  415cb3:	or     edi,eax
  415cb5:	loopne 0x415cb6
  415cb7:	xchg   ebx,ebx
  415cb9:	jo     0x415d2b
  415cbb:	inc    edx
  415cbc:	jmp    0x3d850c5b
  415cc1:	sahf   
  415cc2:	(bad)  
  415cc3:	imul   edi,DWORD PTR [eax],0x69
  415cc6:	rol    ebx,1
  415cc8:	aaa    
  415cc9:	fisub  DWORD PTR ds:0xc8b1a2ab
  415ccf:	add    ch,BYTE PTR ds:0xecead6ca
  415cd5:	adc    BYTE PTR [ebp+0x0],ch
  415cd8:	push   ebp
  415cd9:	mov    esi,0x8f71460a
  415cde:	ret    0x9c45
  415ce1:	aad    0x32
  415ce3:	jno    0x415c91
  415ce5:	mov    ecx,0xe58e2d17
  415cea:	in     al,dx
  415ceb:	scas   al,BYTE PTR es:[edi]
  415cec:	xor    eax,0x8c0c4faf
  415cf1:	ins    DWORD PTR es:[edi],dx
  415cf2:	add    eax,0x5e677720
  415cf7:	arpl   WORD PTR [edi],sp
  415cf9:	aas    
  415cfa:	xchg   edi,eax
  415cfb:	sub    cl,BYTE PTR ds:0xbd0dc40a
  415d01:	jno    0x415d03
  415d03:	pop    ebx
  415d04:	inc    esp
  415d05:	sbb    eax,0x3e9094cf
  415d0a:	clc    
  415d0b:	or     DWORD PTR [edi+0x37066828],eax
  415d11:	lods   al,BYTE PTR ds:[esi]
  415d12:	inc    edi
  415d13:	push   0x88053fca
  415d18:	jno    0x415d5b
  415d1a:	push   esp
  415d1b:	or     al,0x54
  415d1d:	adc    eax,0xbfe1e83a
  415d22:	es jb  0x415d54
  415d25:	sbb    DWORD PTR [ebp+0x1],esi
  415d28:	adc    WORD PTR [edx],sp
  415d2b:	(bad)  [edx+ebx*2+0x682d31de]
  415d32:	in     eax,dx
  415d33:	push   ebx
  415d34:	retf   
  415d35:	int    0xc2
  415d37:	pop    ds
  415d38:	mov    bl,0xa2
  415d3a:	and    DWORD PTR [ebp-0x1ce5085c],ebp
  415d40:	jo     0x415d6a
  415d42:	push   ecx
  415d43:	retf   
  415d44:	push   edi
  415d45:	sub    edx,DWORD PTR [ebx-0x15]
  415d48:	call   0xb34e:0x7dd73b52
  415d4f:	das    
  415d50:	pusha  
  415d51:	push   esp
  415d52:	mov    al,0x3f
  415d54:	lock push 0xffffff9c
  415d57:	inc    edi
  415d58:	or     eax,0x686cc36e
  415d5d:	call   0x5c0e5a5e
  415d62:	frstor [edx+0x7ecd2640]
  415d68:	mov    ds:0xa804885d,eax
  415d6d:	add    al,0x8b
  415d6f:	mov    esp,0xdb2089c3
  415d74:	in     eax,dx
  415d75:	pop    edx
  415d77:	shl    BYTE PTR [ecx-0x7f],cl
  415d7a:	les    ecx,FWORD PTR [edi+0x2ed9b0b2]
  415d80:	add    DWORD PTR cs:[eax+0x73],0x412106c9
  415d88:	jns    0x415db7
  415d8a:	std    
  415d8b:	shr    DWORD PTR [ebx+0x29fcb02f],1
  415d91:	jo     0x415da3
  415d93:	inc    ebx
  415d94:	jmp    0x99799843
  415d99:	std    
  415d9a:	and    edi,edi
  415d9c:	jnp    0x415d29
  415d9e:	sbb    bh,dh
  415da0:	xor    eax,ebp
  415da2:	call   DWORD PTR [edx+0x4]
  415da5:	call   0xe90e5fbc
  415daa:	xchg   edi,eax
  415dab:	mov    ds:0x6c2a40ca,al
  415db0:	inc    ebx
  415db1:	mov    esp,0x6204051b
  415db6:	mov    ebx,0xe87ca5d6
  415dbb:	mov    eax,ds:0xcf2a2b5f
  415dc0:	icebp  
  415dc1:	call   0x1456:0x3184a193
  415dc8:	and    al,0x2d
  415dca:	mov    edi,0xe2a9a9d0
  415dcf:	sub    esi,DWORD PTR [ebx-0xb]
  415dd2:	push   0xed75ca4c
  415dd7:	and    al,0x4a
  415dd9:	arpl   WORD PTR ds:0xd6c21730,bx
  415ddf:	mov    edx,0xda503358
  415de4:	clc    
  415de5:	lds    edx,FWORD PTR [edx-0x6c]
  415de8:	dec    esp
  415de9:	mov    bl,BYTE PTR [esi]
  415deb:	and    BYTE PTR [ebx-0x61],ch
  415dee:	xchg   ebp,eax
  415def:	rol    BYTE PTR [eax],cl
  415df1:	sub    BYTE PTR [edi+0x57],cl
  415df4:	ds inc esp
  415df6:	aam    0x84
  415df8:	es retf 
  415dfa:	mov    bh,0x17
  415dfc:	sub    DWORD PTR [ecx-0x3b],0x5
  415e00:	sti    
  415e01:	into   
  415e02:	icebp  
  415e03:	cwde   
  415e04:	jge    0x415e68
  415e06:	arpl   WORD PTR [ebp-0x15b7b7ea],dx
  415e0c:	xchg   DWORD PTR [edx],edi
  415e0e:	fcom   DWORD PTR [edx-0x642dc936]
  415e14:	jb     0x415e57
  415e16:	xchg   ecx,eax
  415e17:	pop    es
  415e18:	pusha  
  415e19:	and    dl,dl
  415e1b:	in     al,0x6
  415e1d:	sbb    BYTE PTR [eax-0x4e3b9f84],bl
  415e23:	inc    edx
  415e24:	inc    esp
  415e25:	add    esp,DWORD PTR [esi]
  415e27:	dec    DWORD PTR [edi+0x6d5db49]
  415e2d:	in     al,dx
  415e2e:	clc    
  415e2f:	xchg   edi,eax
  415e30:	push   es
  415e31:	jle    0x415e0e
  415e33:	xchg   esi,eax
  415e34:	jecxz  0x415dcc
  415e36:	dec    edi
  415e37:	push   ss
  415e38:	pop    ebp
  415e39:	cmp    eax,0xed42a543
  415e3e:	pop    edi
  415e3f:	fcomp  DWORD PTR [esi]
  415e41:	jb     0xbe63cc01
  415e47:	mov    cl,0xf4
  415e49:	(bad)
  415e4c:	jbe    0x415de4
  415e4e:	sub    ecx,ebx
  415e50:	push   esi
  415e51:	cs sahf 
  415e53:	ins    BYTE PTR es:[edi],dx
  415e54:	das    
  415e55:	adc    BYTE PTR [edi-0x5569165],ah
  415e5b:	mov    ecx,0xae461bb9
  415e60:	push   esi
  415e61:	jno    0x415e1d
  415e63:	shl    DWORD PTR [ebx-0x5e04b5a3],0x1c
  415e6a:	xlat   BYTE PTR ds:[ebx]
  415e6b:	shl    BYTE PTR [edi+0x8b23eb7],0x65
  415e72:	loope  0x415e7d
  415e74:	inc    eax
  415e75:	cld    
  415e76:	pop    ebx
  415e77:	xchg   ebx,eax
  415e78:	or     dl,BYTE PTR [edi+0x1da6450e]
  415e7e:	adc    DWORD PTR [ecx-0x4d65ae0e],ecx
  415e84:	dec    esp
  415e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e86:	sbb    BYTE PTR [ebp+0x365dad39],0xf9
  415e8d:	mov    eax,ds:0x90d6efa
  415e92:	out    dx,al
  415e93:	inc    edx
  415e94:	dec    ebp
  415e95:	out    0x6b,al
  415e97:	(bad)  
  415e98:	dec    ebp
  415e99:	xchg   esp,eax
  415e9a:	out    0xbc,al
  415e9c:	cld    
  415e9d:	push   esp
  415e9e:	ret    
  415e9f:	push   es
  415ea0:	mov    ss,WORD PTR [ebx+0x3dd7f8ea]
  415ea6:	or     esi,DWORD PTR [eax+0x6662c6d6]
  415eac:	mov    ch,0xef
  415eae:	aas    
  415eaf:	push   ecx
  415eb0:	loope  0x415e65
  415eb2:	cmp    BYTE PTR [edi+0x56bdcfb6],bl
  415eb8:	or     eax,0x6f175ae1
  415ebd:	into   
  415ebe:	jmp    0x415f08
  415ec0:	ret    0x1651
  415ec3:	bound  edx,QWORD PTR [edx+edi*2-0x67]
  415ec7:	mov    WORD PTR [ebp-0x1cf2f639],ds
  415ecd:	dec    edi
  415ece:	cmc    
  415ecf:	lods   eax,DWORD PTR ds:[esi]
  415ed0:	out    0x1a,al
  415ed2:	and    edi,ebx
  415ed4:	adc    BYTE PTR [eax-0xb2d5ce7],0x2e
  415edb:	dec    eax
  415edc:	and    dh,al
  415ede:	fsubp  st(5),st
  415ee0:	arpl   WORD PTR [eax+0xd72f128],ax
  415ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ee7:	pop    ebp
  415ee8:	mov    BYTE PTR ds:0x3a8c8f4c,dh
  415eee:	mov    ebp,0x578134df
  415ef3:	fistp  QWORD PTR [ecx-0x4f]
  415ef6:	dec    ebp
  415ef7:	scas   al,BYTE PTR es:[edi]
  415ef8:	mov    DWORD PTR [ebp+0x77],ecx
  415efb:	aam    0xcc
  415efd:	bound  ecx,QWORD PTR [esi-0xbf769fc]
  415f03:	mov    edx,DWORD PTR ds:0xe4c2118
  415f09:	repz shr BYTE PTR [eax+ebx*8+0x3f2061b5],1
  415f11:	scas   al,BYTE PTR es:[edi]
  415f12:	out    dx,al
  415f13:	int3   
  415f14:	ins    BYTE PTR es:[edi],dx
  415f15:	xchg   ebx,eax
  415f16:	jle    0x415f5c
  415f18:	mov    ds:0xc9be00c9,eax
  415f1d:	mov    eax,0xb9a1f5ba
  415f22:	in     eax,dx
  415f23:	push   ecx
  415f24:	je     0x415f93
  415f26:	(bad)  
  415f27:	ds sub al,0x22
  415f2a:	les    ebp,FWORD PTR [ebx+ebx*4-0x60]
  415f2e:	std    
  415f2f:	mov    eax,0xe8aebe5a
  415f34:	pop    es
  415f35:	xchg   ebp,eax
  415f36:	sbb    esi,edi
  415f38:	xlat   BYTE PTR ds:[ebx]
  415f39:	std    
  415f3a:	cld    
  415f3b:	pop    eax
  415f3c:	xchg   edi,eax
  415f3d:	in     eax,0x5f
  415f3f:	and    al,0xfc
  415f41:	int    0x75
  415f43:	xchg   edx,eax
  415f44:	addr16 aas 
  415f46:	fisubr WORD PTR ds:0xfa228c5f
  415f4c:	dec    ecx
  415f4d:	sub    esi,DWORD PTR [ebp+esi*1-0x3]
  415f51:	outs   dx,BYTE PTR ds:[esi]
  415f52:	aad    0x84
  415f54:	cs bswap ebp
  415f57:	push   edx
  415f58:	in     al,dx
  415f59:	mov    esp,0x8c8e695e
  415f5e:	outs   dx,BYTE PTR ds:[esi]
  415f5f:	bound  ecx,QWORD PTR [ebp+0xb09e00f]
  415f65:	popa   
  415f66:	(bad)  
  415f67:	cmp    BYTE PTR [edi+0x50],bh
  415f6a:	fisub  DWORD PTR [ecx+esi*8]
  415f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f6e:	pusha  
  415f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f70:	fdivr  st(6),st
  415f72:	push   ds
  415f73:	add    BYTE PTR ds:0x8ae62d86,ch
  415f79:	test   al,0xee
  415f7b:	sbb    BYTE PTR [ecx+0x74],dh
  415f7e:	stc    
  415f7f:	in     eax,dx
  415f80:	mov    ebp,ecx
  415f82:	repz jl 0x415f25
  415f85:	lock mov esp,0x5dcfcc82
  415f8b:	dec    edx
  415f8c:	into   
  415f8d:	push   edx
  415f8e:	dec    ecx
  415f8f:	icebp  
  415f90:	adc    BYTE PTR [edi],bh
  415f92:	jnp    0x415f39
  415f94:	leave  
  415f95:	dec    ecx
  415f96:	xlat   BYTE PTR ds:[ebx]
  415f97:	sbb    eax,0x12de651f
  415f9c:	inc    eax
  415f9d:	bsr    edx,DWORD PTR [ecx-0x456f1b01]
  415fa4:	push   0x971a0132
  415fa9:	push   ebp
  415faa:	push   0xffffff83
  415fac:	adc    esp,DWORD PTR es:[ecx-0x3c]
  415fb0:	imul   esi,edi,0x68883a5a
  415fb6:	into   
  415fb7:	not    esp
  415fb9:	pop    es
  415fba:	gs loopne 0x415f97
  415fbd:	fstp   QWORD PTR [edx]
  415fbf:	in     eax,dx
  415fc0:	jmp    0x7f77:0x51632934
  415fc7:	ret    
  415fc8:	lock popa 
  415fca:	addr16 in eax,dx
  415fcc:	ja     0x415f5d
  415fce:	in     eax,0x1
  415fd0:	push   edi
  415fd1:	cs fmulp st(4),st
  415fd4:	aaa    
  415fd5:	retw   
  415fd7:	ins    DWORD PTR es:[edi],dx
  415fd8:	es ret 0x20cd
  415fdc:	ror    BYTE PTR [eax],cl
  415fde:	jl     0x416025
  415fe0:	or     al,BYTE PTR [edi+0x42f93b8e]
  415fe6:	shl    DWORD PTR [edx],cl
  415fe8:	hlt    
  415fe9:	jmp    0x7df131e3
  415fee:	scas   al,BYTE PTR es:[edi]
  415fef:	jns    0x41601e
  415ff1:	out    dx,al
  415ff2:	cmp    BYTE PTR [eax-0x78],cl
  415ff5:	pop    esp
  415ff6:	push   ebx
  415ff7:	ret    0xed0
  415ffa:	add    esi,esp
  415ffc:	rcr    BYTE PTR ds:0xeeee8f7c,0xc0
  416003:	call   0x8a14937f
  416008:	push   ebp
  416009:	mov    al,0x8b
  41600b:	push   ebp
  41600c:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0xbee4889b
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	rcr    BYTE PTR [ebx-0x29295aa8],cl
  416061:	and    BYTE PTR [esi],cl
  416063:	pop    esi
  416064:	push   cs
  416065:	xchg   edx,eax
  416066:	xor    DWORD PTR [esi-0x47b441ac],0xffffffcd
  41606d:	stos   DWORD PTR es:[edi],eax
  41606e:	pop    ebp
  41606f:	cmp    eax,0xaae978d3
  416074:	inc    ebx
  416075:	sbb    BYTE PTR [esi+0x17d635a3],ah
  41607b:	sub    eax,0xac629445
  416080:	fwait
  416081:	imul   ebp,DWORD PTR [edi],0xffffff8b
  416084:	enter  0xa9c7,0xaf
  416088:	icebp  
  416089:	lods   eax,DWORD PTR ds:[esi]
  41608a:	pop    ss
  41608b:	add    al,0x18
  41608d:	cli    
  41608e:	rol    eax,1
  416090:	shl    DWORD PTR [edx-0x2541c829],0xe6
  416097:	and    eax,0xb678119f
  41609c:	not    BYTE PTR [ebx+esi*4]
  41609f:	inc    ebp
  4160a0:	fs in  eax,0xa4
  4160a3:	pop    ebp
  4160a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160a5:	mov    bl,0x36
  4160a7:	mov    bl,0xe1
  4160a9:	shl    BYTE PTR es:[eax+0x5918ec29],1
  4160b0:	rol    BYTE PTR [eax-0x216c6cdf],0x3c
  4160b7:	retf   
  4160b8:	aaa    
  4160b9:	clc    
  4160ba:	stos   BYTE PTR es:[edi],al
  4160bb:	cli    
  4160bc:	mov    cl,0x5e
  4160be:	cmp    al,0xdd
  4160c0:	mov    dl,0xc7
  4160c2:	dec    ebp
  4160c3:	sub    BYTE PTR [ebx-0x4c],ch
  4160c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160c7:	bound  eax,QWORD PTR [eax+0x11]
  4160ca:	sbb    ebp,DWORD PTR [esi+0x750122c2]
  4160d0:	leave  
  4160d1:	sbb    al,0x35
  4160d3:	push   cs
  4160d4:	int    0xbc
  4160d6:	add    edx,DWORD PTR [edi+edx*4]
  4160d9:	je     0x416104
  4160db:	(bad)  
  4160dc:	mov    ecx,0xb7b13264
  4160e1:	jne    0x416105
  4160e3:	outs   dx,BYTE PTR ds:[esi]
  4160e4:	fs jb  0x4160f8
  4160e7:	call   0x5ff6:0x452ba5ac
  4160ee:	push   cs
  4160ef:	and    al,0xc7
  4160f1:	jge    0x41616c
  4160f3:	dec    edi
  4160f4:	pusha  
  4160f5:	sbb    cl,bl
  4160f7:	xchg   ebx,eax
  4160f8:	pop    esi
  4160f9:	ret    0xfba0
  4160fc:	call   0x869d:0x741efa8a
  416103:	push   cs
  416104:	loope  0x41615b
  416106:	cmp    BYTE PTR [ebx+0x4515609d],dh
  41610c:	scas   eax,DWORD PTR es:[edi]
  41610d:	aad    0xb1
  41610f:	(bad)  
  416110:	fdiv   QWORD PTR [eax+0x14]
  416113:	inc    ebx
  416114:	hlt    
  416115:	adc    DWORD PTR [esi+0x24],0x1c
  416119:	adc    eax,0x4e076b24
  41611e:	test   BYTE PTR [ebx-0x32],dh
  416121:	add    ecx,ebx
  416123:	retf   0x4697
  416126:	mov    ds:0xe1fab423,al
  41612b:	sbb    edi,DWORD PTR [edx+0x5e]
  41612e:	sub    bl,bh
  416130:	sahf   
  416131:	test   BYTE PTR [eax+ebp*2],cl
  416134:	(bad)  
  416135:	fdiv   st,st(1)
  416137:	test   al,0x49
  416139:	test   ecx,esi
  41613b:	jmp    0x4160ed
  41613d:	pop    ecx
  41613e:	pop    ebx
  41613f:	mov    ds:0xf700fee,al
  416144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416145:	mov    ecx,0x6037927
  41614a:	gs cli 
  41614c:	rol    edi,0x11
  41614f:	(bad)  
  416150:	cli    
  416151:	int    0x3b
  416153:	shl    DWORD PTR [edi-0x5f],1
  416156:	mov    BYTE PTR [eax],ch
  416158:	or     eax,0x9b4b7210
  41615d:	shl    al,0xb5
  416160:	add    ecx,0x13
  416163:	das    
  416164:	int    0xb2
  416166:	cs mov eax,ebp
  416169:	int3   
  41616a:	inc    edi
  41616b:	mov    esi,ebx
  41616d:	add    al,BYTE PTR [ebp+0x3]
  416170:	in     al,0xed
  416172:	in     eax,dx
  416173:	mov    esp,0x70dda0f6
  416178:	cli    
  416179:	jae    0x416103
  41617b:	call   0xa35c:0x272e5734
  416182:	push   ebp
  416183:	mov    cl,0x21
  416185:	cmc    
  416186:	jge    0x4161cf
  416188:	push   es
  416189:	loope  0x416168
  41618b:	push   es
  41618c:	xor    eax,0x5bcd7ce
  416191:	daa    
  416192:	sbb    eax,0xdb1d9ab0
  416197:	sbb    DWORD PTR [ecx-0x25f8c614],edx
  41619d:	in     eax,0x1d
  41619f:	dec    esi
  4161a0:	mov    al,ds:0x8349f8af
  4161a5:	repnz xor ch,BYTE PTR [edx+0x2d]
  4161a9:	add    ch,BYTE PTR [eax]
  4161ab:	jbe    0x41612f
  4161ad:	jo     0x41617b
  4161af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b0:	fld    DWORD PTR [esi-0x35]
  4161b3:	push   ebp
  4161b4:	aam    0x77
  4161b6:	inc    ebx
  4161b7:	fcomp  QWORD PTR [esp+eax*1+0x388fc05b]
  4161be:	retf   
  4161bf:	or     edx,DWORD PTR [edi]
  4161c1:	mov    ah,0xb5
  4161c3:	inc    ebx
  4161c4:	mov    al,ds:0x35e6f9dc
  4161c9:	xchg   BYTE PTR [edx],ah
  4161cb:	xchg   ebx,eax
  4161cc:	shl    BYTE PTR [ecx],cl
  4161ce:	mov    bh,0x56
  4161d0:	xchg   esi,eax
  4161d1:	mov    bh,0x82
  4161d3:	rcl    DWORD PTR [esi],1
  4161d5:	pop    eax
  4161d6:	lea    eax,[edi]
  4161d8:	xlat   BYTE PTR ds:[ebx]
  4161d9:	mov    bl,0xa6
  4161db:	cmc    
  4161dc:	ret    0xb122
  4161df:	imul   edx,DWORD PTR [ecx-0x510c952e],0x47
  4161e6:	add    al,0x22
  4161e8:	mov    al,ds:0x4508a46b
  4161ed:	inc    BYTE PTR [di]
  4161f0:	hlt    
  4161f1:	cmp    al,al
  4161f3:	inc    edi
  4161f4:	xor    bh,dh
  4161f6:	hlt    
  4161f7:	outs   dx,DWORD PTR ds:[esi]
  4161f8:	aaa    
  4161f9:	jno    0x41622d
  4161fb:	popf   
  4161fc:	cmp    dl,BYTE PTR [edi]
  4161fe:	pop    ecx
  4161ff:	imul   DWORD PTR [edx+edx*8]
  416202:	lods   al,BYTE PTR ds:[esi]
  416203:	pop    edx
  416204:	cmp    al,0x94
  416206:	xchg   ebp,eax
  416207:	sbb    eax,ecx
  416209:	pop    eax
  41620a:	inc    edx
  41620b:	bound  edi,QWORD PTR [ebx+0x39c39222]
  416211:	hlt    
  416212:	inc    eax
  416213:	cld    
  416214:	mov    cl,0xa8
  416216:	mov    al,0x6
  416218:	repnz loope 0x416269
  41621b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41621c:	adc    BYTE PTR [ecx-0x7f],al
  41621f:	ror    BYTE PTR [esi-0x76],cl
  416222:	add    eax,DWORD PTR [edx]
  416224:	sahf   
  416225:	add    dl,BYTE PTR [edx-0x22]
  416228:	xor    ch,BYTE PTR [edx+ecx*4-0x6d]
  41622c:	sub    ch,BYTE PTR [edx]
  41622e:	pop    edi
  41622f:	stos   DWORD PTR es:[edi],eax
  416230:	mov    al,0x56
  416232:	and    DWORD PTR [ecx+0x17],0x73a6115
  416239:	rcl    esp,1
  41623b:	pop    ebx
  41623c:	(bad)  
  41623d:	fstp   DWORD PTR [eax]
  41623f:	pop    eax
  416240:	adc    BYTE PTR [esi],0xde
  416243:	adc    bh,ch
  416245:	inc    edi
  416246:	mov    bl,0x59
  416248:	int    0x2a
  41624a:	sahf   
  41624b:	or     ah,BYTE PTR [edx+0x4f]
  41624e:	test   DWORD PTR [esi-0x11],ebp
  416251:	mov    eax,0x711a5d61
  416256:	jae    0x4161fd
  416258:	pop    ss
  416259:	mov    ebp,0xaebf1885
  41625e:	push   0xffffffa9
  416260:	mov    BYTE PTR [ebx+0x3dc228aa],ch
  416266:	mov    WORD PTR [edi],ds
  416268:	jb     0x416258
  41626a:	mov    ch,0x99
  41626c:	xchg   esp,eax
  41626d:	fimul  WORD PTR [ebp-0x43fcbe75]
  416273:	repnz cld 
  416275:	test   DWORD PTR [eax-0x341ad88e],0xcf2a575d
  41627f:	aaa    
  416280:	add    al,0x70
  416282:	out    dx,eax
  416283:	push   ss
  416284:	sub    DWORD PTR [ebx+0x5c],ebp
  416287:	add    eax,0xf5916f4f
  41628c:	hlt    
  41628d:	iret   
  41628e:	sahf   
  41628f:	(bad)  
  416291:	push   eax
  416292:	mov    ?,WORD PTR [esp+edx*2+0x2d00db8c]
  416299:	jbe    0x416264
  41629b:	test   eax,0x414394fa
  4162a0:	shl    BYTE PTR [ecx],0x6f
  4162a3:	xor    BYTE PTR [edx-0x5b],bh
  4162a6:	fidiv  WORD PTR [ecx+esi*8]
  4162a9:	stos   DWORD PTR es:[edi],eax
  4162aa:	push   es
  4162ab:	sbb    al,0x10
  4162ad:	mov    al,ds:0x552cc24b
  4162b2:	xchg   edi,eax
  4162b3:	add    bh,0x77
  4162b6:	aas    
  4162b7:	mov    ecx,0xca087c3a
  4162bc:	(bad)  
  4162bd:	loope  0x4162f7
  4162bf:	repz adc DWORD PTR [esp+eax*1],0xea98d718
  4162c7:	iret   
  4162c8:	icebp  
  4162c9:	fild   QWORD PTR ds:0xedc1e0c3
  4162cf:	fsubr  QWORD PTR [ecx-0x5d]
  4162d2:	jnp    0x4162f6
  4162d4:	in     al,0xc8
  4162d6:	push   ebx
  4162d7:	clc    
  4162d8:	or     al,0xe4
  4162da:	frstor [edx-0x6819dfa9]
  4162e0:	test   eax,0xf7be92a4
  4162e5:	mov    ds:0x93386a79,al
  4162ea:	cmp    ebp,DWORD PTR [esi-0x56]
  4162ed:	push   ebp
  4162ee:	add    al,0xa8
  4162f0:	leave  
  4162f1:	xchg   DWORD PTR [eax-0x72],esi
  4162f4:	dec    ecx
  4162f5:	scas   al,BYTE PTR es:[edi]
  4162f6:	lods   al,BYTE PTR ds:[esi]
  4162f7:	dec    edx
  4162f8:	mov    bh,0x6
  4162fa:	mov    ebp,0x8bf1ae02
  4162ff:	push   ss
  416300:	or     BYTE PTR [ebp-0x67998069],0xa9
  416307:	sbb    al,0x5a
  416309:	adc    eax,DWORD PTR [edi-0x62]
  41630c:	adc    ch,ah
  41630e:	jecxz  0x4162c9
  416310:	mov    esp,0x4d60a299
  416315:	data16 sbb BYTE PTR [edx+0x60a70604],cl
  41631c:	inc    ebp
  41631d:	dec    edx
  41631e:	aaa    
  41631f:	adc    esi,DWORD PTR [edi+0x77919e26]
  416325:	mov    ds:0xaaf6190e,eax
  41632a:	loop   0x416325
  41632c:	jo     0x4162d1
  41632e:	push   ecx
  41632f:	or     DWORD PTR [ebx+0x73],eax
  416332:	adc    eax,0x577af39d
  416337:	push   0xcced6cfb
  41633c:	xchg   BYTE PTR [edi+ebp*4],cl
  41633f:	addr16 ds paddb mm1,mm4
  416344:	xchg   ecx,eax
  416345:	not    esi
  416347:	ret    
  416348:	or     BYTE PTR [esi],dh
  41634a:	rol    BYTE PTR [ecx],0xfe
  41634d:	icebp  
  41634e:	out    0x15,eax
  416350:	stos   BYTE PTR es:[edi],al
  416351:	popa   
  416352:	nop
  416353:	adc    BYTE PTR [edi],ch
  416355:	test   al,0x8d
  416357:	mov    edi,0x13588a89
  41635c:	cmc    
  41635d:	pop    eax
  41635e:	outs   dx,BYTE PTR ds:[esi]
  41635f:	sub    al,0x32
  416361:	xchg   ebx,eax
  416362:	mov    al,ds:0xfe699a6b
  416367:	rcr    ah,1
  416369:	and    al,ch
  41636b:	or     BYTE PTR [eax+esi*1],cl
  41636e:	cli    
  41636f:	adc    ecx,edi
  416371:	dec    esp
  416372:	test   BYTE PTR [edx],cl
  416374:	sti    
  416375:	or     ebp,0x4f0ce19e
  41637b:	pusha  
  41637c:	xchg   ebx,eax
  41637d:	jle    0x416334
  41637f:	in     eax,dx
  416380:	xchg   esi,eax
  416381:	or     BYTE PTR [edi],dl
  416383:	(bad)  
  416384:	(bad)  
  416385:	mov    ch,0xbd
  416387:	in     eax,dx
  416388:	push   0x4f
  41638a:	mov    ds:0xcbcfe19a,eax
  41638f:	shl    DWORD PTR [ebx-0x4b],0x8f
  416393:	mov    cl,0xdd
  416395:	ficom  DWORD PTR [ebx]
  416397:	jbe    0x416409
  416399:	mov    ebx,0xded9702d
  41639e:	mov    eax,ds:0xf9607ab6
  4163a3:	retf   
  4163a4:	loop   0x416352
  4163a6:	adc    edi,edi
  4163a8:	stos   BYTE PTR es:[edi],al
  4163a9:	mov    ebx,0xb7291e04
  4163ae:	das    
  4163af:	enter  0x9aa5,0x7e
  4163b3:	dec    esp
  4163b4:	retf   0xb936
  4163b7:	and    edx,DWORD PTR [ecx-0x24aff05c]
  4163bd:	cmc    
  4163be:	xchg   esp,eax
  4163bf:	pop    edi
  4163c0:	je     0x416424
  4163c2:	pop    ebp
  4163c3:	pop    edx
  4163c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163c5:	and    ebp,DWORD PTR [edx+0x6eb61a45]
  4163cb:	stc    
  4163cc:	cmp    DWORD PTR [ecx+0x4e36542c],0x38
  4163d3:	(bad)  
  4163d4:	pop    eax
  4163d5:	mov    dl,0x29
  4163d7:	fnstsw WORD PTR [edx]
  4163d9:	ud1    eax,DWORD PTR [edi+0x6f]
  4163dd:	into   
  4163de:	into   
  4163df:	jp     0x41644e
  4163e1:	out    dx,al
  4163e2:	mov    ebp,es
  4163e4:	pusha  
  4163e5:	cli    
  4163e6:	fst    QWORD PTR [ebp+0x1c]
  4163e9:	dec    ecx
  4163ea:	and    BYTE PTR [ebx+0x70],dh
  4163ed:	outs   dx,DWORD PTR ds:[esi]
  4163ee:	fadd   st(7),st
  4163f0:	popf   
  4163f1:	mov    eax,0x2b1b70ce
  4163f6:	add    DWORD PTR [ebp+0x448f7dc6],esp
  4163fc:	inc    edx
  4163fd:	gs mov ch,0x40
  416400:	pusha  
  416401:	in     al,0x2a
  416403:	or     cl,0x3a
  416406:	xchg   BYTE PTR [ebx],al
  416408:	jg     0x416473
  41640a:	jmp    0xf88fc86
  41640f:	sub    bl,ah
  416411:	add    BYTE PTR [eax-0x5a],ch
  416414:	or     ebp,DWORD PTR [ebp-0x12c098e3]
  41641a:	mov    edi,0x1f1c25cd
  41641f:	scas   eax,DWORD PTR es:[edi]
  416420:	dec    edx
  416421:	sti    
  416422:	sub    eax,0x2b2527fc
  416427:	cs push eax
  416429:	fsubr  QWORD PTR [ecx]
  41642b:	out    0x45,al
  41642d:	test   BYTE PTR [ecx+0x34],dl
  416430:	popf   
  416431:	(bad)  [esi]
  416433:	test   eax,0x4790dc92
  416438:	push   ebp
  416439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41643a:	inc    ebp
  41643b:	in     al,dx
  41643c:	and    al,0x15
  41643e:	dec    eax
  41643f:	xor    edx,esi
  416441:	push   0xffffffeb
  416443:	ffreep st(1)
  416445:	mov    edx,0xd6b57430
  41644a:	rcr    BYTE PTR [esi+0x12],0xad
  41644e:	mov    dh,0xaa
  416450:	js     0x41642f
  416452:	pop    edi
  416453:	inc    esp
  416454:	loopne 0x4164a7
  416456:	sub    dl,bl
  416458:	mov    esi,0x97bba579
  41645d:	sbb    dh,bh
  41645f:	fs dec edi
  416461:	test   DWORD PTR [edi],ebp
  416463:	jmp    0x416470
  416465:	jno    0x416447
  416467:	xor    BYTE PTR [esi-0x5094998b],al
  41646d:	xor    al,0xf8
  41646f:	jmp    0x195a:0xdcd8237b
  416476:	js     0x41643c
  416478:	mov    dl,0x2f
  41647a:	xchg   ebx,eax
  41647b:	mov    ch,0x46
  41647d:	mov    ds:0x106e5f1d,eax
  416482:	aaa    
  416483:	jnp    0x41640b
  416485:	jle    0x416465
  416487:	mov    ah,BYTE PTR [ecx+0x73]
  41648a:	or     dl,BYTE PTR [eax]
  41648c:	hlt    
  41648d:	sub    al,0x28
  41648f:	addr16 mov esp,0xfa597d0c
  416495:	adc    BYTE PTR [ecx+0x4f],ah
  416498:	iret   
  416499:	push   edx
  41649a:	mov    edi,0xe430ed05
  41649f:	pushf  
  4164a0:	sub    eax,0xa32a8873
  4164a5:	hlt    
  4164a6:	int3   
  4164a7:	aad    0x9d
  4164a9:	icebp  
  4164aa:	idiv   esp
  4164ac:	test   DWORD PTR [ecx+eax*4+0x3a0a49ac],ebx
  4164b3:	dec    ebx
  4164b4:	push   ecx
  4164b5:	mov    dh,0x9c
  4164b7:	pushf  
  4164b8:	cs cdq 
  4164ba:	ror    BYTE PTR [ebp-0xa23ff44],cl
  4164c0:	repnz daa 
  4164c2:	push   ds
  4164c3:	(bad)  
  4164c4:	fld    QWORD PTR [eax+0x5e]
  4164c7:	inc    ecx
  4164c8:	mov    ebx,0x5b28c735
  4164cd:	stos   BYTE PTR es:[edi],al
  4164ce:	je     0x416532
  4164d0:	lods   al,BYTE PTR ds:[esi]
  4164d1:	or     ecx,edi
  4164d3:	jae    0x41651d
  4164d5:	sub    DWORD PTR [ebx-0x3e842106],ebp
  4164db:	retf   0x90d4
  4164de:	scas   al,BYTE PTR es:[edi]
  4164df:	shl    DWORD PTR [esi],cl
  4164e1:	xchg   edi,eax
  4164e2:	or     esp,eax
  4164e4:	dec    edi
  4164e5:	jnp    0x4164a2
  4164e7:	stos   BYTE PTR es:[di],al
  4164e9:	mov    ebx,0x989f195b
  4164ee:	nop
  4164ef:	or     al,0x5a
  4164f1:	test   BYTE PTR [edi-0x7d1dc052],0x80
  4164f8:	mov    ch,ah
  4164fa:	jo     0x416569
  4164fc:	call   0xfc216e38
  416501:	adc    BYTE PTR [ebx],al
  416503:	xor    BYTE PTR [ebx-0x55fc2290],dh
  416509:	mov    bh,0xa1
  41650b:	sub    bh,BYTE PTR [ecx+0x18abb629]
  416511:	fsubr  st,st(0)
  416513:	xlat   BYTE PTR ds:[ebx]
  416514:	fwait
  416515:	mov    cl,0xd0
  416517:	push   ds
  416518:	inc    edx
  416519:	inc    esp
  41651a:	fs sahf 
  41651c:	jmp    0x22722fac
  416521:	es push ebx
  416523:	dec    edx
  416524:	repz rcr DWORD PTR ds:0x6c183557,cl
  41652b:	pop    es
  41652c:	adc    eax,0x2cc1c2cd
  416531:	sub    al,0x3
  416533:	xor    BYTE PTR [edx-0x46d1e1e4],0x81
  41653a:	push   0xffffffe9
  41653c:	sub    eax,edi
  41653e:	repz int 0x86
  416541:	xchg   ecx,eax
  416542:	loope  0x416539
  416544:	jno    0x41650d
  416546:	lock outs dx,BYTE PTR ds:[esi]
  416548:	add    esp,DWORD PTR [esi+0x60a2e71b]
  41654e:	rol    DWORD PTR [esi-0x6a],cl
  416551:	les    ecx,FWORD PTR [esi+0x3b]
  416554:	lods   eax,DWORD PTR ds:[esi]
  416555:	ds sbb ebp,esp
  416558:	mov    cl,0x5e
  41655a:	push   0x2f
  41655c:	xor    BYTE PTR [edi-0x29],al
  41655f:	ds mov bl,0x5f
  416562:	bound  ebp,QWORD PTR [eax-0x51877be6]
  416568:	or     DWORD PTR [ecx],esi
  41656a:	(bad)  
  41656b:	jne    0x4164ed
  41656d:	sbb    ch,bh
  41656f:	pop    ds
  416570:	test   BYTE PTR es:[edi],bl
  416573:	mov    ch,0x9b
  416575:	pop    esi
  416576:	xchg   DWORD PTR [ecx*1+0x485dc773],esp
  41657d:	push   edx
  41657e:	mov    esi,eax
  416580:	push   es
  416581:	ds ins BYTE PTR es:[edi],dx
  416583:	cmp    DWORD PTR [esi],edi
  416585:	fiadd  DWORD PTR [edx-0x3d76ef69]
  41658b:	mov    ds:0x53ebf290,al
  416590:	repnz pop esp
  416592:	push   0xdb94c051
  416597:	xchg   BYTE PTR [eax],ch
  416599:	es cmp al,ah
  41659c:	stos   DWORD PTR es:[edi],eax
  41659d:	stos   BYTE PTR es:[edi],al
  41659e:	cmp    al,0xa0
  4165a0:	int    0xc3
  4165a2:	sti    
  4165a3:	mov    esi,0x5a5b0490
  4165a8:	sbb    eax,0xae7bbd22
  4165ad:	pop    edi
  4165ae:	and    al,0x5c
  4165b0:	dec    ebx
  4165b1:	sbb    al,0x5a
  4165b3:	and    eax,DWORD PTR [edi+0x7b5724bc]
  4165b9:	cmc    
  4165ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165bb:	mov    ah,0x4d
  4165bd:	mov    dh,0xf3
  4165bf:	and    al,0xa
  4165c1:	aas    
  4165c2:	(bad)  
  4165c3:	icebp  
  4165c4:	stc    
  4165c5:	iret   
  4165c6:	lock lods eax,DWORD PTR ds:[esi]
  4165c8:	jge    0x41660b
  4165ca:	push   edi
  4165cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165cc:	xor    ebp,DWORD PTR [edi]
  4165ce:	pop    ss
  4165cf:	lock into 
  4165d1:	mov    esi,0x8273e810
  4165d6:	and    ebx,DWORD PTR [edx]
  4165d8:	sub    ebp,DWORD PTR [edx+ecx*4-0x121476b5]
  4165df:	call   0x8bcbf9df
  4165e4:	out    0xff,eax
  4165e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165e7:	popa   
  4165e8:	imul   esi,esp,0xe5dfc1f0
  4165ee:	or     bh,BYTE PTR [ecx+0x2a]
  4165f1:	push   ebx
  4165f2:	or     dh,BYTE PTR [ecx-0x3d]
  4165f5:	inc    edi
  4165f6:	jg     0x416602
  4165f8:	in     al,0xfb
  4165fa:	clc    
  4165fb:	int3   
  4165fc:	jnp    0x4165ee
  4165fe:	inc    edx
  4165ff:	das    
  416600:	xor    al,0xcf
  416602:	add    eax,eax
  416604:	ins    DWORD PTR es:[edi],dx
  416605:	popa   
  416606:	xchg   DWORD PTR [ebx+0x21],eax
  416609:	(bad)  
  41660a:	push   edi
  41660b:	push   edx
  41660c:	and    edx,DWORD PTR [eax+0x355e8312]
  416612:	xor    al,0xb8
  416614:	fist   WORD PTR [edx+0x4d]
  416617:	pushf  
  416618:	jne    0x4165ca
  41661a:	dec    ebp
  41661b:	pushf  
  41661c:	jge    0x416603
  41661e:	aas    
  41661f:	inc    esi
  416620:	in     al,0x81
  416622:	ja     0x4165c3
  416624:	es pop ss
  416626:	sar    ch,1
  416628:	xor    edi,esi
  41662a:	and    DWORD PTR [eax+edi*4-0x28],0xffffff82
  41662f:	aam    0x6
  416631:	clc    
  416632:	in     al,dx
  416633:	push   0xffffffd8
  416635:	jp     0x4165e1
  416637:	ja     0x41667b
  416639:	ins    DWORD PTR es:[edi],dx
  41663a:	shl    BYTE PTR [edi+esi*8+0x43],0xa6
  41663f:	mov    dh,0x9a
  416641:	cmp    dl,BYTE PTR [ecx]
  416643:	in     eax,0x1a
  416645:	push   edx
  416646:	rcl    bl,0x9a
  416649:	test   BYTE PTR [ebx-0x41f5923a],dh
  41664f:	ret    
  416650:	clc    
  416651:	popa   
  416652:	and    al,0xc0
  416654:	fimul  DWORD PTR cs:[ebx]
  416657:	dec    esp
  416658:	jecxz  0x4165e6
  41665a:	pop    ebx
  41665b:	pop    ds
  41665c:	jge    0x416655
  41665e:	mov    ah,0xdb
  416660:	adc    BYTE PTR [edx],bh
  416662:	sahf   
  416663:	fcomp  DWORD PTR es:[ebp-0x6d2aae21]
  41666a:	mov    eax,ds:0x2ca88713
  41666f:	shl    DWORD PTR [edi-0x37],cl
  416672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416673:	sahf   
  416674:	push   esp
  416675:	adc    BYTE PTR [esi],al
  416677:	popf   
  416678:	push   esi
  416679:	add    DWORD PTR [edi+0x455f7575],edi
  41667f:	push   0xbc5a4907
  416684:	inc    edi
  416685:	fwait
  416686:	xchg   ebp,eax
  416687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416688:	fmul   st(5),st
  41668a:	xchg   ecx,eax
  41668b:	(bad)  
  41668c:	adc    al,0xb4
  41668e:	dec    esi
  41668f:	js     0x41662e
  416691:	pop    es
  416692:	fild   WORD PTR [edi-0x7e918f31]
  416698:	sbb    BYTE PTR [ebx],al
  41669a:	jge    0x416631
  41669c:	iret   
  41669d:	mov    edi,0x92ed2a4
  4166a2:	dec    ebx
  4166a3:	icebp  
  4166a4:	and    al,0x87
  4166a6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4166a8:	sbb    eax,0xa5ce2537
  4166ad:	add    ebx,ebp
  4166af:	mov    dl,0x92
  4166b1:	(bad)  
  4166b3:	pop    ebx
  4166b4:	fucom  st(1)
  4166b6:	lods   eax,DWORD PTR ds:[esi]
  4166b7:	in     eax,0x56
  4166b9:	clc    
  4166ba:	inc    edx
  4166bb:	dec    ebx
  4166bc:	and    esi,DWORD PTR gs:[ebp-0x62af7f2f]
  4166c3:	fild   WORD PTR [ecx]
  4166c5:	adc    eax,0x3e3c2923
  4166ca:	dec    DWORD PTR [ecx-0x21]
  4166cd:	js     0x416660
  4166cf:	cs out 0x9a,al
  4166d2:	or     eax,0x9cbba518
  4166d7:	retf   
  4166d8:	push   edi
  4166d9:	inc    ebx
  4166da:	lods   al,BYTE PTR ds:[esi]
  4166db:	inc    esi
  4166dc:	xor    DWORD PTR [ebx],ebx
  4166de:	xor    BYTE PTR [esi-0x77dc5ac1],al
  4166e4:	pop    esp
  4166e5:	add    al,0xa4
  4166e7:	fidiv  DWORD PTR [edi+ebp*8-0x79142967]
  4166ee:	jb     0x4166c2
  4166f0:	mov    ebp,0x720bb557
  4166f5:	out    dx,al
  4166f6:	or     DWORD PTR [edx+0x23],esp
  4166f9:	jnp    0x416722
  4166fb:	addr16 js 0x416741
  4166fe:	popa   
  4166ff:	adc    esi,DWORD PTR [ecx]
  416701:	hlt    
  416702:	outs   dx,BYTE PTR ds:[esi]
  416703:	push   ebp
  416704:	jl     0x4166f8
  416706:	xor    BYTE PTR ds:0x99484907,dl
  41670c:	enter  0xba7b,0x52
  416710:	call   FWORD PTR [eax-0x6e]
  416713:	jbe    0x4166bb
  416715:	and    eax,DWORD PTR [edx]
  416717:	das    
  416718:	inc    esi
  416719:	fadd   DWORD PTR [ecx-0x46]
  41671c:	pushf  
  41671d:	dec    edx
  41671e:	jg     0x4166e6
  416720:	mov    DWORD PTR [esi],ebp
  416722:	and    ch,al
  416724:	xchg   esp,eax
  416725:	int3   
  416726:	jg     0x41677c
  416728:	push   cs
  416729:	sub    eax,DWORD PTR [edi-0x7e]
  41672c:	xchg   BYTE PTR [ecx+eax*8],bl
  41672f:	push   ds
  416730:	mov    esi,0x597c710b
  416735:	mov    cl,0x44
  416737:	call   0xaa22:0x748edb11
  41673e:	sub    al,0x55
  416740:	dec    edi
  416741:	adc    DWORD PTR [esi*8+0x7ba1c500],ebx
  416748:	pop    esi
  416749:	push   eax
  41674a:	pusha  
  41674b:	add    ecx,DWORD PTR [edi-0x5cdab76b]
  416751:	test   DWORD PTR [edx],ebp
  416753:	mov    DWORD PTR [ebx+0x63],ecx
  416756:	mov    dl,0x37
  416758:	cmc    
  416759:	xchg   ecx,eax
  41675a:	int    0x6a
  41675c:	faddp  st(1),st
  41675e:	or     eax,0x1e56bd76
  416763:	push   ds
  416764:	mov    esp,DWORD PTR [edx+ebx*8+0x33b6353b]
  41676b:	xor    ah,dh
  41676d:	mov    eax,ds:0x10923780
  416772:	sbb    eax,0x276ff8fc
  416777:	xchg   edi,eax
  416778:	int3   
  416779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41677a:	and    eax,esi
  41677c:	out    dx,al
  41677d:	in     eax,0x1c
  41677f:	sbb    BYTE PTR [ecx-0x647cfb86],al
  416785:	sar    DWORD PTR [ebx],cl
  416787:	cmp    al,0x6
  416789:	dec    edx
  41678a:	pop    esp
  41678b:	arpl   si,si
  41678d:	xor    ecx,esi
  41678f:	xchg   DWORD PTR [ebp+0x59c91b88],ecx
  416795:	jns    0x416725
  416797:	stc    
  416798:	push   ds
  416799:	mov    al,ds:0x8528a2ff
  41679e:	stc    
  41679f:	stos   BYTE PTR es:[edi],al
  4167a0:	cmp    DWORD PTR [eax],edx
  4167a2:	int    0xd3
  4167a4:	pop    esi
  4167a5:	inc    ecx
  4167a6:	(bad)  
  4167a7:	fist   WORD PTR [edx+0x6805aa44]
  4167ad:	or     cl,cl
  4167af:	pop    edx
  4167b0:	test   eax,0xdd92349
  4167b5:	out    0x61,al
  4167b7:	mov    ebp,ecx
  4167b9:	iret   
  4167ba:	mov    al,BYTE PTR [edx]
  4167bc:	sub    DWORD PTR [esi],0x18
  4167bf:	inc    esi
  4167c0:	mov    ah,0x5a
  4167c2:	retf   
  4167c3:	push   cs
  4167c4:	je     0x41680c
  4167c6:	xchg   BYTE PTR [edi],dl
  4167c8:	dec    ecx
  4167c9:	inc    ebx
  4167ca:	in     al,dx
  4167cb:	pop    esp
  4167cc:	mov    cl,0x8c
  4167ce:	retf   
  4167cf:	push   ss
  4167d0:	jg     0x416769
  4167d2:	scas   eax,DWORD PTR es:[edi]
  4167d3:	add    BYTE PTR [ecx+0x791e89bb],bl
  4167d9:	pop    edx
  4167da:	pop    ebp
  4167db:	call   0x4c40:0x94e7c8ea
  4167e2:	mov    esp,edx
  4167e4:	add    eax,0x33de5ba7
  4167e9:	mov    dl,0xe4
  4167eb:	in     al,0x3
  4167ed:	sbb    al,BYTE PTR [ebx+0x59]
  4167f0:	int3   
  4167f1:	and    al,0x1c
  4167f3:	adc    BYTE PTR [edx+0x5b],bh
  4167f6:	(bad)  
  4167f7:	pushf  
  4167f8:	loop   0x41684f
  4167fa:	sbb    eax,0x33118e96
  4167ff:	mov    edx,0x8f8d00e0
  416804:	call   FWORD PTR [ebp+0x66]
  416807:	into   
  416808:	inc    edx
  416809:	retf   0xf952
  41680c:	sub    esi,esp
  41680e:	fs cld 
  416810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416811:	pop    esp
  416812:	mov    dl,0xcf
  416814:	in     eax,0xc1
  416816:	xor    al,0x16
  416818:	mov    eax,0x89b626de
  41681d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41681e:	jne    0x416806
  416820:	dec    edi
  416821:	jnp    0x4167c1
  416823:	out    dx,al
  416824:	data16 xor BYTE PTR [ecx+edx*1],0x85
  416829:	cmp    eax,DWORD PTR [di]
  41682c:	inc    edi
  41682d:	jae    0x41684a
  41682f:	pop    eax
  416830:	push   ebp
  416831:	xchg   DWORD PTR [ebx+0x5c],esp
  416834:	sbb    eax,0x285a1a69
  416839:	xor    BYTE PTR [eax+0x3e],0xc5
  41683d:	stc    
  41683e:	int    0x68
  416840:	mov    BYTE PTR [ebp+0x68b2cb96],al
  416846:	inc    esp
  416847:	add    ecx,DWORD PTR [esi+0x3a]
  41684a:	ja     0x416843
  41684c:	cdq    
  41684d:	adc    cl,BYTE PTR [ebx+0x352f5e86]
  416853:	sub    DWORD PTR [edi],0x4a2653da
  416859:	xchg   ecx,eax
  41685a:	push   0x4bb2dec2
  41685f:	in     eax,0x47
  416861:	bound  edx,QWORD PTR [ebx]
  416863:	adc    BYTE PTR [edx],cl
  416865:	idiv   BYTE PTR [edi+esi*8]
  416868:	faddp  st(6),st
  41686a:	call   0x8ddf:0xb1754cc2
  416871:	xchg   ecx,eax
  416872:	lock push ss
  416874:	xchg   esi,eax
  416875:	fidiv  WORD PTR [esi+0x5c]
  416878:	fmul   st(2),st
  41687a:	push   0x5f
  41687c:	pop    ss
  41687d:	bound  edi,QWORD PTR [edx+0x45702e93]
  416883:	sub    BYTE PTR [ecx-0x43],dh
  416886:	dec    ebx
  416887:	xchg   ebp,eax
  416888:	test   al,0x87
  41688a:	sar    BYTE PTR [edx],0x37
  41688d:	ficom  WORD PTR [eax-0x29add4c8]
  416893:	mov    al,0xb9
  416895:	loopne 0x4168d7
  416897:	sbb    BYTE PTR [esi-0x137d497e],bl
  41689d:	and    ebx,eax
  41689f:	push   edi
  4168a0:	aaa    
  4168a1:	rcl    BYTE PTR [esi-0x1a],0x9b
  4168a5:	or     eax,0x566fde98
  4168aa:	mov    dl,0x9c
  4168ac:	mov    esi,0xd03ec2ca
  4168b1:	lahf   
  4168b2:	in     eax,dx
  4168b3:	pop    ds
  4168b4:	or     eax,0x62ad7648
  4168b9:	xchg   esi,eax
  4168ba:	nop
  4168bb:	add    BYTE PTR [esi],bl
  4168bd:	jb     0x41690d
  4168bf:	pushf  
  4168c0:	sbb    ebx,DWORD PTR [esi]
  4168c2:	dec    eax
  4168c3:	push   0x36029c05
  4168c8:	pusha  
  4168c9:	test   BYTE PTR [edx-0x1ea8653a],0x8b
  4168d0:	adc    ecx,DWORD PTR [ebx+0x5f43cb0f]
  4168d6:	fdiv   QWORD PTR [eax-0x21]
  4168d9:	(bad)  
  4168da:	and    DWORD PTR [ebx],ebp
  4168dc:	stos   BYTE PTR es:[edi],al
  4168dd:	add    cl,BYTE PTR [ebx+0x10]
  4168e0:	jo     0x416881
  4168e2:	dec    esp
  4168e3:	xchg   ebp,eax
  4168e4:	stc    
  4168e5:	fwait
  4168e6:	dec    ebp
  4168e7:	dec    eax
  4168e8:	xchg   esp,eax
  4168e9:	nop
  4168ea:	daa    
  4168eb:	lds    ebx,FWORD PTR [eax]
  4168ed:	fsub   QWORD PTR ds:0xde7a
  4168f2:	cmp    ch,BYTE PTR [ebx+0x41]
  4168f5:	adc    esp,edx
  4168f7:	(bad)  
  4168f8:	fninit 
  4168fa:	sar    DWORD PTR [eax],cl
  4168fc:	sbb    eax,0xb647980d
  416901:	pop    esi
  416902:	lods   eax,DWORD PTR ds:[esi]
  416903:	bound  ebp,QWORD PTR [eax+0x325647af]
  416909:	cmp    al,0xb
  41690b:	frstor [edx-0x541978e4]
  416911:	out    dx,eax
  416912:	call   0x6bbfc5dc
  416917:	pop    es
  416918:	popf   
  416919:	(bad)  
  41691a:	retf   0x9f74
  41691d:	sub    edi,DWORD PTR [ecx+0x3363b58]
  416923:	add    dl,BYTE PTR [edi+0x6]
  416926:	nop
  416927:	push   ebp
  416928:	pop    edx
  416929:	inc    edx
  41692a:	cwde   
  41692b:	mov    cl,0xe6
  41692d:	jecxz  0x416940
  41692f:	mov    dh,0xdb
  416931:	lea    esp,[edi-0x21]
  416934:	mov    edi,0xaae7a37f
  416939:	int    0xc2
  41693b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41693c:	imul   DWORD PTR [ecx]
  41693e:	mov    eax,ds:0x550858ec
  416943:	sub    al,0x1b
  416945:	push   ecx
  416946:	nop
  416947:	lds    eax,FWORD PTR [edx]
  416949:	mov    eax,0x3ebab9fb
  41694e:	jo     0x41698c
  416950:	jecxz  0x416975
  416952:	ins    BYTE PTR es:[edi],dx
  416953:	sub    BYTE PTR [ebx],bh
  416955:	inc    ebp
  416956:	pop    es
  416957:	(bad)
  41695b:	mov    bl,0x4
  41695d:	mov    eax,ds:0x65d1deff
  416962:	sahf   
  416963:	mov    bl,0xcb
  416965:	mov    edx,0x15c171c4
  41696a:	ins    DWORD PTR es:[edi],dx
  41696b:	loope  0x4169d5
  41696d:	loop   0x416917
  41696f:	mov    dh,0x8d
  416971:	sub    DWORD PTR [ecx],esi
  416973:	mov    dl,ch
  416975:	sub    al,0x76
  416977:	mov    BYTE PTR [esi+0x40],dh
  41697a:	inc    edi
  41697b:	fld    QWORD PTR [esi]
  41697d:	xchg   esp,eax
  41697e:	in     eax,0xf9
  416980:	lds    eax,FWORD PTR [edx]
  416982:	loopne 0x4169c4
  416984:	js     0x41696e
  416986:	popa   
  416987:	ss dec eax
  416989:	in     al,0x9e
  41698b:	push   ecx
  41698c:	in     eax,0x51
  41698e:	pop    es
  41698f:	loopne 0x4169ba
  416991:	inc    edi
  416992:	and    BYTE PTR [esi],ch
  416994:	(bad)  
  416996:	ret    
  416997:	fidivr WORD PTR [eax]
  416999:	stc    
  41699a:	lahf   
  41699b:	pop    ds
  41699c:	push   0x459e59d8
  4169a1:	aas    
  4169a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169a3:	adc    dh,cl
  4169a5:	xor    al,0x3d
  4169a7:	les    eax,FWORD PTR [ebp+0xda033c8]
  4169ad:	and    eax,0xa6646fc8
  4169b2:	imul   esp,DWORD PTR [ebx],0x7d8ff6c3
  4169b8:	jae    0x4169e7
  4169ba:	outs   dx,DWORD PTR ds:[esi]
  4169bb:	pop    ss
  4169bc:	aas    
  4169bd:	mov    ds:0xeb556881,al
  4169c2:	adc    edi,esi
  4169c4:	mov    ebx,0x397d1b6c
  4169c9:	(bad)  
  4169ca:	or     al,bh
  4169cc:	mov    WORD PTR [edi-0x455c823],?
  4169d2:	pop    edx
  4169d3:	jp     0x416a51
  4169d5:	jmp    0xfbdcaee6
  4169da:	pop    ds
  4169db:	fld    QWORD PTR [ebx-0x11549627]
  4169e1:	adc    al,0x7c
  4169e3:	xchg   edi,eax
  4169e4:	pusha  
  4169e5:	jmp    0x4169d3
  4169e7:	mov    edi,fs
  4169e9:	xchg   ch,ah
  4169eb:	dec    esi
  4169ec:	test   DWORD PTR [eax+0x6b409b51],esi
  4169f2:	mov    WORD PTR [ecx-0x33],ds
  4169f5:	daa    
  4169f6:	repz scas eax,DWORD PTR es:[edi]
  4169f8:	lahf   
  4169f9:	sbb    ecx,DWORD PTR [esi]
  4169fb:	dec    edi
  4169fc:	adc    BYTE PTR [edi-0x1e],ch
  4169ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a00:	iret   
  416a01:	mov    edx,0x2863e4b
  416a06:	(bad)  
  416a07:	cmp    ah,dh
  416a09:	fadd   QWORD PTR [ecx-0xe]
  416a0c:	jo     0x416a01
  416a0e:	hlt    
  416a0f:	arpl   sp,ax
  416a11:	fnstsw WORD PTR [ebx-0x596c253b]
  416a17:	sub    ebx,ebx
  416a19:	pusha  
  416a1a:	les    edx,FWORD PTR [ecx-0x2ae73ace]
  416a20:	jb     0x4169f2
  416a22:	pop    esp
  416a23:	test   al,0xaa
  416a25:	enter  0x6951,0x6f
  416a29:	mov    al,0x8
  416a2b:	push   ebp
  416a2c:	push   0xc8ac22bc
  416a31:	pop    esp
  416a32:	dec    ebx
  416a33:	mov    ecx,0x2ab52470
  416a38:	push   ss
  416a39:	(bad)  
  416a3a:	cmp    bl,BYTE PTR [edi-0x24]
  416a3d:	adc    dl,al
  416a3f:	cdq    
  416a40:	into   
  416a41:	ret    
  416a42:	lods   eax,DWORD PTR ds:[esi]
  416a43:	stos   DWORD PTR es:[edi],eax
  416a44:	sahf   
  416a45:	loop   0x416a6b
  416a47:	ds add eax,0x50
  416a4b:	stc    
  416a4c:	sbb    esi,DWORD PTR [edi]
  416a4e:	dec    edx
  416a4f:	xlat   BYTE PTR ds:[ebx]
  416a50:	dec    edi
  416a51:	fsub   st(0),st
  416a53:	mov    bl,0xdf
  416a55:	mov    ?,edi
  416a57:	xor    al,0x51
  416a59:	jle    0x416a3e
  416a5b:	clc    
  416a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a5d:	add    esi,DWORD PTR [ebp-0x1506b458]
  416a63:	sti    
  416a64:	shr    al,0x5b
  416a67:	add    ebx,DWORD PTR [edx+edi*1]
  416a6a:	sub    BYTE PTR [esi-0x57],ah
  416a6d:	inc    esi
  416a6e:	pop    esp
  416a6f:	mov    edi,DWORD PTR [edi-0x343988b6]
  416a75:	fadd   QWORD PTR [edi+0x6d7bab19]
  416a7b:	cli    
  416a7c:	fs mov esp,0xb61e703
  416a82:	mov    esp,DWORD PTR [edx]
  416a84:	push   edx
  416a85:	mov    fs,ebx
  416a87:	sbb    al,0xa3
  416a89:	test   al,ah
  416a8b:	popf   
  416a8c:	adc    DWORD PTR [ebx+0x2f],0x3c5f711b
  416a93:	hlt    
  416a94:	test   dh,0xd5
  416a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a98:	mov    esi,0x47680c5e
  416a9d:	or     al,0x9e
  416a9f:	scas   eax,DWORD PTR es:[edi]
  416aa0:	out    dx,al
  416aa1:	ins    DWORD PTR es:[edi],dx
  416aa2:	in     al,dx
  416aa3:	repz enter 0x52,0xbb
  416aa8:	pop    esp
  416aa9:	push   edi
  416aaa:	ficom  DWORD PTR [esi+0x288962a0]
  416ab0:	push   eax
  416ab1:	adc    bh,ah
  416ab3:	push   edx
  416ab4:	rcl    BYTE PTR ds:0x3f322679,cl
  416aba:	mov    edx,0x682eb861
  416abf:	mov    esp,0x44483f78
  416ac4:	(bad)  
  416ac5:	adc    al,0x46
  416ac7:	sbb    esi,DWORD PTR ds:0x155a9906
  416acd:	mov    ds:0x6bb42daa,eax
  416ad2:	stc    
  416ad3:	sub    eax,0xfbce7570
  416ad8:	cmp    DWORD PTR [edx+0x41],edx
  416adb:	icebp  
  416adc:	and    eax,0x448d630d
  416ae1:	repnz lods al,BYTE PTR ds:[esi]
  416ae3:	test   BYTE PTR [eax],dh
  416ae5:	xor    eax,0x2348ba22
  416aea:	test   eax,0x79eeb7f2
  416aef:	fist   DWORD PTR [edi+eiz*4+0x0]
  416af3:	dec    ebp
  416af4:	push   edi
  416af5:	mov    ch,0x69
  416af7:	mov    bh,0xca
  416af9:	pmovmskb edi,mm2
  416afc:	mov    eax,ds:0x9245e3e3
  416b01:	in     al,dx
  416b02:	aad    0x4f
  416b04:	or     eax,0x486d23de
  416b09:	push   ss
  416b0a:	mov    dl,0x6c
  416b0c:	dec    esp
  416b0d:	push   edi
  416b0e:	push   0xd009eeff
  416b13:	push   ds
  416b14:	(bad)  
  416b15:	(bad)
  416b19:	jle    0x416ac8
  416b1b:	and    eax,0xaa748583
  416b20:	int    0x3f
  416b22:	cdq    
  416b23:	aam    0xfd
  416b25:	xchg   DWORD PTR [ebx],ecx
  416b27:	jmp    0x416b96
  416b29:	pop    edx
  416b2a:	or     eax,0x4e32c6a9
  416b2f:	test   al,0x4f
  416b31:	add    DWORD PTR [edx],eax
  416b33:	pop    esp
  416b34:	pop    ecx
  416b35:	mov    ds:0x6040597e,eax
  416b3a:	and    DWORD PTR [edx],ebp
  416b3c:	push   0xa70fc32d
  416b41:	jmp    0xb7e804d5
  416b46:	push   esp
  416b47:	push   eax
  416b48:	adc    ecx,esi
  416b4a:	sub    al,0x1f
  416b4c:	(bad)  
  416b4f:	jmp    0xe30b:0x37d986af
  416b56:	mov    dl,0x71
  416b58:	pop    ss
  416b59:	xchg   ebp,eax
  416b5a:	pop    DWORD PTR [edi+ecx*4-0x36c5af1a]
  416b61:	lods   al,BYTE PTR ds:[esi]
  416b62:	fldenv [esi+ebx*4]
  416b65:	or     esp,DWORD PTR [ecx]
  416b67:	pop    esi
  416b68:	sahf   
  416b69:	shr    BYTE PTR [ebx+0x5223c1be],cl
  416b6f:	or     eax,0xd6ed4257
  416b74:	mul    DWORD PTR [eax]
  416b76:	sbb    DWORD PTR [ebp-0x283a4932],ebp
  416b7c:	xor    DWORD PTR [edx+ebp*8+0x631faea0],ecx
  416b83:	call   0xdfda:0x9eab41c1
  416b8a:	add    edi,DWORD PTR [esi]
  416b8c:	outs   dx,BYTE PTR ds:[esi]
  416b8d:	repnz repz add DWORD PTR [edx],eax
  416b91:	adc    cl,dl
  416b93:	cli    
  416b94:	ins    DWORD PTR es:[edi],dx
  416b95:	mov    BYTE PTR [esi+0x2ff01757],cl
  416b9b:	inc    eax
  416b9c:	pushf  
  416b9d:	int    0x19
  416b9f:	and    al,0x10
  416ba1:	ins    BYTE PTR es:[edi],dx
  416ba2:	inc    DWORD PTR [esi-0x8]
  416ba5:	fs push esp
  416ba7:	call   0xa149:0xbdc64d57
  416bae:	jle    0x416c21
  416bb0:	dec    ebp
  416bb1:	adc    bh,bh
  416bb3:	push   ds
  416bb4:	mov    BYTE PTR [eax-0x1f],bl
  416bb7:	repz cmc 
  416bb9:	lods   eax,DWORD PTR ds:[esi]
  416bba:	retf   
  416bbb:	dec    esi
  416bbc:	aam    0xd7
  416bbe:	jae    0x416c36
  416bc0:	rol    BYTE PTR [eax-0x37c7b957],1
  416bc6:	jne    0x416c2d
  416bc8:	test   al,bl
  416bca:	push   es
  416bcb:	push   ds
  416bcc:	cmp    al,bh
  416bce:	mov    eax,ds:0xbfa01219
  416bd3:	into   
  416bd4:	push   ebp
  416bd5:	xchg   edi,eax
  416bd6:	cdq    
  416bd7:	add    BYTE PTR [ebp-0x2d],al
  416bda:	sbb    eax,0x69e647c
  416bdf:	dec    ecx
  416be0:	add    eax,0x35b83ca5
  416be5:	dec    ecx
  416be6:	enter  0x9f69,0xe3
  416bea:	imul   ecx,DWORD PTR [edi-0x40],0x4695634
  416bf1:	shr    eax,0x84
  416bf4:	imul   BYTE PTR [ebp+0x2b]
  416bf7:	stc    
  416bf8:	sub    BYTE PTR [esi+0x48],0xef
  416bfc:	cdq    
  416bfd:	dec    ebx
  416bfe:	es call 0x6d68:0xfe5ebe70
  416c06:	fcomp  QWORD PTR [esi+0x1f]
  416c09:	ss add al,0x3c
  416c0c:	sbb    al,0x80
  416c0e:	sub    eax,0x10c8d466
  416c13:	push   cs
  416c14:	shl    DWORD PTR [edi+ebp*8],cl
  416c17:	ret    0xfeb4
  416c1a:	dec    eax
  416c1b:	loope  0x416c2a
  416c1d:	int3   
  416c1e:	cmp    ch,BYTE PTR [ecx+edi*1+0xad686ff]
  416c25:	jg     0x416c95
  416c27:	dec    edx
  416c28:	test   BYTE PTR [ebx+edi*8-0x7],ah
  416c2c:	xchg   ecx,eax
  416c2d:	mov    eax,0x9946a192
  416c32:	out    0x64,al
  416c34:	mov    bh,0xf7
  416c36:	cmp    eax,0x23f08fda
  416c3b:	enter  0x1e5a,0xba
  416c3f:	dec    edx
  416c40:	out    0xc1,eax
  416c42:	push   esi
  416c43:	xchg   edx,eax
  416c44:	lsl    esp,bx
  416c47:	rcl    DWORD PTR [edi+0x3c],1
  416c4a:	pusha  
  416c4b:	jle    0x416cb3
  416c4d:	pusha  
  416c4e:	push   ebx
  416c4f:	push   DWORD PTR [ebx+0x172aa46e]
  416c55:	add    esp,DWORD PTR [ecx+0x63]
  416c58:	or     eax,ebx
  416c5a:	xchg   di,ax
  416c5c:	mov    DWORD PTR [esi+edi*2+0x866680d],edx
  416c63:	push   cs
  416c64:	mov    dl,0x99
  416c66:	push   edx
  416c67:	in     al,dx
  416c68:	cmp    esp,DWORD PTR [ebp+0x23]
  416c6b:	je     0x416c06
  416c6d:	push   ds
  416c6e:	sar    esi,0x43
  416c71:	add    al,0x8e
  416c73:	add    ebp,DWORD PTR ds:0x50507090
  416c79:	and    ch,BYTE PTR [esi+0x199da18d]
  416c7f:	call   0x93db956a
  416c84:	jg     0x416c0d
  416c86:	test   BYTE PTR [ebx],bh
  416c88:	icebp  
  416c89:	cmp    eax,0xf133d1ed
  416c8e:	sub    eax,0xf42e0ac
  416c93:	mov    bh,0xc9
  416c95:	inc    eax
  416c96:	sub    DWORD PTR [edx+0x7552fa98],edx
  416c9c:	shr    BYTE PTR [esi+ebp*8],0x1
  416ca0:	pop    edi
  416ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ca2:	xor    eax,esp
  416ca4:	ins    DWORD PTR es:[edi],dx
  416ca5:	stos   DWORD PTR es:[edi],eax
  416ca6:	cwde   
  416ca7:	repz (bad) 
  416caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cab:	les    esp,FWORD PTR [ecx+0x6b]
  416cae:	xor    al,0xcf
  416cb0:	jmp    0xae06123c
  416cb5:	mov    bh,0xec
  416cb7:	sbb    DWORD PTR [edi+0x6e86a957],esp
  416cbd:	pushf  
  416cbe:	std    
  416cbf:	cmp    bl,BYTE PTR [esi-0x329fcad0]
  416cc5:	add    bh,BYTE PTR [edi]
  416cc7:	xor    bl,BYTE PTR [eax+0x3c1cc6b4]
  416ccd:	push   0x11
  416ccf:	repnz push ebx
  416cd1:	mov    esp,0x1c4247df
  416cd6:	repnz cmp cl,dl
  416cd9:	shl    BYTE PTR [edx-0x7f],0x9a
  416cdd:	xor    esi,ecx
  416cdf:	or     dh,bl
  416ce1:	adc    al,bh
  416ce3:	pop    ss
  416ce4:	push   cs
  416ce5:	cmp    DWORD PTR [esi],0x621b80bd
  416ceb:	xchg   edi,eax
  416cec:	fwait
  416ced:	lods   eax,DWORD PTR ds:[esi]
  416cee:	xor    ecx,0xffffff86
  416cf1:	xor    BYTE PTR [ecx],bl
  416cf3:	push   0x212625d7
  416cf8:	add    eax,0xde878ec0
  416cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cfe:	inc    ecx
  416cff:	inc    edx
  416d00:	mov    ah,0xa0
  416d02:	out    dx,eax
  416d03:	or     DWORD PTR [eax],0x1f
  416d06:	out    dx,eax
  416d07:	inc    ebx
  416d08:	push   ss
  416d09:	stos   BYTE PTR es:[edi],al
  416d0a:	dec    ebx
  416d0b:	loopne 0x416d45
  416d0d:	cld    
  416d0e:	jl     0x416d7c
  416d10:	call   0x6a00:0x52e7a7a0
  416d17:	in     al,dx
  416d18:	sbb    al,0xd0
  416d1a:	inc    esi
  416d1b:	fs loopne 0x416d26
  416d1e:	lea    ebp,[edi+0x6f9764f1]
  416d24:	fisubr WORD PTR [eax+0x11e70bef]
  416d2a:	das    
  416d2b:	(bad)
  416d2f:	pop    edx
  416d30:	ja     0x416cd4
  416d32:	push   ecx
  416d33:	jbe    0x416cd8
  416d35:	pop    ecx
  416d36:	icebp  
  416d37:	cmc    
  416d38:	mov    esp,DWORD PTR [esi]
  416d3a:	jno    0x416d1d
  416d3c:	into   
  416d3d:	out    0xb3,eax
  416d3f:	shr    DWORD PTR [edi-0x3d],0xa4
  416d43:	adc    ah,BYTE PTR [eax]
  416d45:	jnp    0x416d4f
  416d47:	push   esp
  416d48:	cmp    eax,0x8eaf8393
  416d4d:	loop   0x416d00
  416d4f:	add    BYTE PTR [esi-0x28727b3d],al
  416d55:	dec    ebx
  416d56:	aaa    
  416d57:	mov    ds:0x79befbb8,eax
  416d5c:	ret    
  416d5d:	fninit 
  416d5f:	loopne 0x416d7d
  416d61:	retf   0x96c5
  416d64:	shr    BYTE PTR [esi+0x29],0x67
  416d68:	jmp    0x3b8c:0x5d4e1a9d
  416d6f:	pop    ecx
  416d70:	stc    
  416d71:	fdiv   QWORD PTR [ebx+0xb]
  416d74:	(bad)  
  416d75:	or     al,0x9f
  416d77:	or     eax,0x5df2b817
  416d7c:	jo     0x416d3f
  416d7e:	cmp    DWORD PTR [ecx+ecx*1-0x269bd62b],esp
  416d85:	push   ebp
  416d86:	cli    
  416d87:	arpl   WORD PTR [edx-0x42d2c9a],di
  416d8d:	cmp    al,0x87
  416d8f:	xchg   ebx,ecx
  416d91:	(bad)  ds:[edi]
  416d94:	out    0x6,al
  416d96:	pop    ecx
  416d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d98:	stc    
  416d99:	test   BYTE PTR [esi+0x55b3d5e4],ch
  416d9f:	(bad)  
  416da0:	out    dx,al
  416da1:	enter  0x2c65,0x2a
  416da5:	or     eax,0xc06a0d29
  416daa:	push   es
  416dab:	jp     0x416d67
  416dad:	cld    
  416dae:	shl    dh,cl
  416db0:	mov    edx,0x905ca6b6
  416db5:	mov    bl,0x4a
  416db7:	mov    ebx,0x80e75d9a
  416dbc:	in     eax,0x19
  416dbe:	cwde   
  416dbf:	dec    ebp
  416dc0:	or     al,0xb4
  416dc2:	adc    bh,BYTE PTR [ebx]
  416dc4:	clc    
  416dc5:	add    ecx,eax
  416dc7:	add    BYTE PTR [edi+ebx*2+0x26],0xd7
  416dcc:	xlat   BYTE PTR ds:[ebx]
  416dcd:	test   eax,0xb1405f5e
  416dd2:	mov    ah,0xfe
  416dd4:	test   esi,0xffc6577
  416dda:	dec    ebp
  416ddb:	push   eax
  416ddc:	aaa    
  416ddd:	cmp    eax,DWORD PTR [ebp+0x442a05d5]
  416de3:	jae    0x416d7a
  416de5:	jne    0x416e50
  416de7:	mov    ebx,0xfc430fcd
  416dec:	popf   
  416ded:	xor    eax,0x5e1d5c36
  416df2:	inc    ecx
  416df3:	imul   ebx,DWORD PTR [esi+0x64dbcf01],0xffffffe6
  416dfa:	popf   
  416dfb:	inc    esp
  416dfc:	pop    ax
  416dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dff:	mov    WORD PTR [ecx+0x14],ds
  416e02:	aam    0xbe
  416e04:	push   edi
  416e05:	stos   DWORD PTR es:[edi],eax
  416e06:	(bad)  
  416e07:	push   DWORD PTR [ecx]
  416e09:	jp     0x416e7b
  416e0b:	xchg   esp,eax
  416e0c:	test   BYTE PTR [esi+ebp*1-0xc],ah
  416e10:	mov    ebx,0x24c087db
  416e15:	jg     0x416e52
  416e17:	aas    
  416e18:	ror    DWORD PTR [ebx+0x1],0x2a
  416e1c:	add    ecx,edi
  416e1e:	lds    esi,FWORD PTR [esi-0x76]
  416e21:	mov    ds:0xab776806,eax
  416e26:	inc    eax
  416e27:	cmp    al,0xb4
  416e29:	test   al,0x61
  416e2b:	inc    esp
  416e2c:	jae    0x416e64
  416e2e:	sub    cl,BYTE PTR [ecx]
  416e30:	int    0x9d
  416e32:	in     al,0x4
  416e34:	repz push ecx
  416e36:	js     0x416e88
  416e38:	les    edi,FWORD PTR [edi-0x43]
  416e3b:	loop   0x416eaa
  416e3d:	fs xchg edx,eax
  416e3f:	cmp    eax,0x14d43f4c
  416e44:	test   dh,0x18
  416e47:	lods   al,BYTE PTR ds:[esi]
  416e48:	es jecxz 0x416de5
  416e4b:	and    ebp,DWORD PTR [ebp+0x5e]
  416e4e:	sbb    al,BYTE PTR [eax]
  416e50:	xchg   edx,eax
  416e51:	adc    al,BYTE PTR [ecx-0x7a]
  416e54:	in     al,dx
  416e55:	add    ch,bh
  416e57:	ret    
  416e58:	xchg   ecx,eax
  416e59:	rol    BYTE PTR [ebp-0x792cb10a],1
  416e5f:	inc    esp
  416e60:	mov    esp,0x4ef9095f
  416e65:	ret    
  416e66:	ins    BYTE PTR es:[edi],dx
  416e67:	adc    eax,0xeb28436d
  416e6c:	and    al,0x8b
  416e6e:	imul   edx,DWORD PTR [ebp-0xb20890d],0x80809511
  416e78:	jge    0x416e19
  416e7a:	into   
  416e7b:	and    eax,0x8f0d4eae
  416e80:	xchg   edi,eax
  416e81:	lods   eax,DWORD PTR ds:[esi]
  416e82:	sbb    eax,0xb541fe9b
  416e87:	rol    DWORD PTR [ecx-0x59dd845c],1
  416e8d:	push   cs
  416e8e:	lods   eax,DWORD PTR ds:[esi]
  416e8f:	inc    ebx
  416e90:	(bad)  
  416e91:	fst    QWORD PTR [edi]
  416e93:	jp     0x416efb
  416e95:	cmp    BYTE PTR [ebp-0xd],bl
  416e98:	add    bl,ah
  416e9a:	iret   
  416e9b:	fldenv [edi-0x6edbb13d]
  416ea1:	enter  0xd3ef,0x4e
  416ea5:	ss mov esp,0xf0b5c1ba
  416eab:	mov    BYTE PTR [esi+edi*8],0x82
  416eaf:	out    0x95,al
  416eb1:	test   al,0xeb
  416eb3:	or     ebp,ecx
  416eb5:	aaa    
  416eb6:	adc    DWORD PTR [ebp+0x20],edx
  416eb9:	ror    BYTE PTR [ebx-0x3e],0x96
  416ebd:	test   BYTE PTR [edx-0x69619cd1],ch
  416ec3:	or     al,0xc9
  416ec5:	lahf   
  416ec6:	mov    eax,0x86883467
  416ecb:	mov    al,ch
  416ecd:	scas   al,BYTE PTR es:[edi]
  416ece:	and    DWORD PTR [edi+0x58dcc19a],edx
  416ed4:	ds fwait
  416ed6:	neg    DWORD PTR [eax-0x86577b5]
  416edc:	ret    
  416edd:	cmp    ch,BYTE PTR [ebx-0x1f]
  416ee0:	sub    esp,ecx
  416ee2:	xchg   edx,eax
  416ee3:	ret    0x4d11
  416ee6:	mov    bh,0x36
  416ee8:	dec    edx
  416ee9:	mov    bh,0x4f
  416eeb:	fidivr DWORD PTR [esp+ecx*8-0x12]
  416eef:	push   edx
  416ef0:	rcl    ebx,0xc7
  416ef3:	push   edx
  416ef4:	sub    eax,0x8e5191f8
  416ef9:	(bad)
  416efd:	fcom   QWORD PTR ds:0x4fb51ea2
  416f03:	test   eax,0xdbebe62c
  416f08:	xor    BYTE PTR [ecx],cl
  416f0a:	ds adc ah,0x89
  416f0e:	out    dx,al
  416f0f:	mov    dl,0x39
  416f11:	ja     0x416f7e
  416f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f14:	(bad)  [ebx-0x255ac077]
  416f1a:	int3   
  416f1b:	xor    ebp,DWORD PTR [eax]
  416f1d:	inc    ebp
  416f1e:	xlat   BYTE PTR ds:[ebx]
  416f1f:	daa    
  416f20:	inc    ecx
  416f21:	pop    eax
  416f22:	mov    ah,0xd9
  416f24:	xor    DWORD PTR [ebx-0x42],edi
  416f27:	sub    DWORD PTR [eax+edx*2],ebp
  416f2a:	pusha  
  416f2b:	in     eax,dx
  416f2c:	popa   
  416f2d:	cs stos BYTE PTR es:[edi],al
  416f2f:	das    
  416f30:	xchg   BYTE PTR [esi-0x20],dh
  416f33:	enter  0xf8d6,0x7a
  416f37:	mov    DWORD PTR [ecx],ecx
  416f39:	dec    ecx
  416f3a:	inc    ebx
  416f3b:	sbb    ebx,eax
  416f3d:	inc    esi
  416f3e:	and    eax,0xdc45c747
  416f43:	rcl    ah,cl
  416f45:	push   edi
  416f46:	scas   al,BYTE PTR es:[edi]
  416f47:	ret    
  416f48:	pop    ebx
  416f49:	pop    es
  416f4a:	(bad)  
  416f4b:	mov    ecx,0xe4c55ad5
  416f50:	and    BYTE PTR [edx+0x5752810c],0xed
  416f57:	mov    eax,ds:0xa4a5cd93
  416f5c:	gs inc eax
  416f5e:	std    
  416f5f:	sub    al,0xdd
  416f61:	xchg   ecx,eax
  416f62:	ins    BYTE PTR es:[edi],dx
  416f63:	mov    WORD PTR ds:0x97069762,cs
  416f69:	retf   
  416f6a:	jne    0x416fc8
  416f6c:	jl     0x416f99
  416f6e:	push   ecx
  416f6f:	xor    DWORD PTR [esi],ebx
  416f71:	sub    esp,edi
  416f73:	mov    ecx,0xaaf3af80
  416f78:	imul   esi,DWORD PTR [ebx-0x1],0x82b1a725
  416f7f:	and    BYTE PTR ds:0x1aac3e8c,bl
  416f85:	popf   
  416f86:	jns    0x416f0e
  416f88:	stos   BYTE PTR es:[edi],al
  416f89:	fwait
  416f8a:	xchg   ebp,eax
  416f8b:	sub    bh,dl
  416f8d:	aad    0xe1
  416f8f:	sub    BYTE PTR [ecx-0x4833f079],cl
  416f95:	push   edx
  416f96:	(bad)  
  416f97:	mov    ebx,0x4fd8747d
  416f9c:	xor    eax,0x27ae0e5d
  416fa1:	add    BYTE PTR ds:0x3693734d,dl
  416fa7:	push   0xffffffca
  416fa9:	xchg   edx,eax
  416faa:	inc    BYTE PTR [ebp-0x69]
  416fad:	xchg   ecx,eax
  416fae:	retf   
  416faf:	pop    ebx
  416fb0:	dec    esp
  416fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fb2:	add    edx,esp
  416fb4:	int    0x21
  416fb6:	sbb    ch,al
  416fb8:	mov    al,ds:0x5c662a26
  416fbd:	fistp  DWORD PTR [edx]
  416fbf:	imul   eax,DWORD PTR [esi-0x3331a76a],0x79
  416fc6:	(bad)  
  416fc7:	in     al,0xe6
  416fc9:	cmp    BYTE PTR [eax-0xd],dh
  416fcc:	push   ebp
  416fcd:	pop    ebp
  416fce:	test   al,0x88
  416fd0:	mov    ah,0x58
  416fd2:	add    edx,DWORD PTR [esi-0x69b3cd54]
  416fd8:	cli    
  416fd9:	mov    ecx,es
  416fdb:	seto   dh
  416fde:	xor    al,0x4e
  416fe0:	fiadd  WORD PTR [eax]
  416fe2:	loope  0x416fef
  416fe4:	jle    0x416f87
  416fe6:	adc    al,0x1d
  416fe8:	sub    eax,DWORD PTR [eax+0x3ad22e96]
  416fee:	sar    BYTE PTR [esi-0x3b16e05f],1
  416ff4:	xor    ah,BYTE PTR [edi-0x6b]
  416ff7:	stc    
  416ff8:	(bad)  
  416ff9:	ror    DWORD PTR [esi],cl
  416ffb:	imul   ebx,esp,0xffffff93
  416ffe:	add    dl,BYTE PTR [ecx-0x45]
  417001:	fidivr DWORD PTR [ebx+eiz*8]
  417004:	lds    eax,FWORD PTR ds:0x3cc21b43
  41700a:	(bad)  
  41700b:	in     al,dx
  41700c:	dec    eax
  41700d:	mov    ch,0x2f
  41700f:	outs   dx,BYTE PTR ds:[esi]
  417010:	rol    ecx,0x5c
  417013:	jecxz  0x416ff9
  417015:	lock rcl BYTE PTR ds:0x91b0a773,1
  41701c:	jns    0x416ffc
  41701e:	stc    
  41701f:	ret    0xc92a
  417022:	test   al,0xa
  417024:	dec    esp
  417025:	mov    BYTE PTR [edi-0xa],ah
  417028:	arpl   WORD PTR [ecx],dx
  41702a:	leave  
  41702b:	lds    eax,FWORD PTR [edx]
  41702d:	imul   ebx,ecx,0x22
  417030:	push   0x42
  417032:	push   0x8ee2aaf0
  417037:	inc    eax
  417038:	pop    esi
  417039:	rol    bl,cl
  41703b:	cmp    DWORD PTR [esi],eax
  41703d:	inc    edx
  41703e:	push   esi
  41703f:	lods   al,BYTE PTR ds:[esi]
  417040:	scas   eax,DWORD PTR es:[edi]
  417041:	mov    bh,0x13
  417043:	or     eax,0x89d19160
  417048:	pop    es
  417049:	adc    edx,ebx
  41704b:	sbb    dl,BYTE PTR [edi+0x319d843c]
  417051:	test   eax,0x8630906
  417056:	dec    ebp
  417057:	cs ret 0x6b97
  41705b:	(bad)  
  41705c:	cmp    BYTE PTR [ebx+0x2a],bh
  41705f:	cmp    eax,0xa8a52a48
  417064:	add    eax,0x6bf93ceb
  417069:	add    esi,DWORD PTR [ebx-0x6f]
  41706c:	mov    BYTE PTR [ecx+0xc],bl
  41706f:	or     al,0xba
  417071:	inc    esp
  417072:	pop    ss
  417073:	mov    edx,DWORD PTR [edi+0x37]
  417076:	xor    eax,0x1b074ad7
  41707b:	jae    0x4170e8
  41707d:	in     al,dx
  41707e:	popf   
  41707f:	mov    eax,0x9e2e3486
  417084:	imul   ebx,DWORD PTR [edi],0xffffffe0
  417087:	xor    eax,DWORD PTR [esi]
  417089:	mov    ch,0x82
  41708b:	popa   
  41708c:	mov    dh,0x42
  41708e:	xchg   esi,eax
  41708f:	retf   0x4234
  417092:	dec    eax
  417093:	or     ebp,esi
  417095:	adc    DWORD PTR ds:0x24a8e6f1,0x39828820
  41709f:	sub    esp,eax
  4170a1:	jns    0x41708e
  4170a3:	add    ebp,DWORD PTR [eax+0x1d]
  4170a6:	sahf   
  4170a7:	inc    esi
  4170a8:	push   ebx
  4170a9:	in     eax,0x55
  4170ab:	and    al,0xc4
  4170ad:	sub    eax,0x7ee0e6f8
  4170b2:	push   ss
  4170b3:	jg     0x41712a
  4170b5:	addr16 mov cx,0x90d0
  4170ba:	jo     0x417115
  4170bc:	ror    BYTE PTR [eax+0x60ad77a3],0x42
  4170c3:	push   eax
  4170c4:	adc    al,0xa3
  4170c6:	push   cs
  4170c7:	jnp    0x417127
  4170c9:	add    BYTE PTR [eax],bh
  4170cb:	lea    esp,[ecx+eiz*2-0x5c4f8019]
  4170d2:	and    eax,0xd553c039
  4170d7:	sub    eax,0x205d1148
  4170dc:	icebp  
  4170dd:	and    ecx,DWORD PTR [eax+0x7ef516ac]
  4170e3:	push   cs
  4170e4:	in     eax,dx
  4170e5:	jb     0x4170ed
  4170e7:	(bad)  
  4170e8:	mov    ebx,0xfa480d9a
  4170ed:	loopne 0x4170d5
  4170ef:	or     ch,BYTE PTR [esi]
  4170f1:	sbb    al,0xe7
  4170f3:	xor    al,0x6b
  4170f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170f6:	out    dx,al
  4170f7:	jle    0x4170b6
  4170f9:	mov    esp,ecx
  4170fb:	bound  eax,QWORD PTR [edi]
  4170fd:	xchg   ecx,eax
  4170fe:	adc    dh,BYTE PTR [ecx-0x30c3e2b9]
  417104:	aaa    
  417105:	inc    ebp
  417106:	mov    ds:0xcd4765d4,al
  41710b:	or     eax,0x2f75b505
  417110:	mov    dh,0x41
  417112:	cli    
  417113:	push   edx
  417114:	enter  0x9991,0x65
  417118:	xor    bl,dl
  41711a:	cmp    DWORD PTR [esi+0x65],esp
  41711d:	xchg   esp,eax
  41711e:	test   BYTE PTR [edi+0x6c],dh
  417121:	mov    BYTE PTR [ebp+0x2d],al
  417124:	and    al,0x2
  417126:	xchg   ebx,edx
  417128:	imul   esi,DWORD PTR [edi+0x6ec3a0da],0x32
  41712f:	gs mov ebx,eax
  417132:	dec    ebx
  417133:	(bad)  
  417134:	ss jp  0x41710e
  417137:	adc    edi,DWORD PTR [eax]
  417139:	dec    esi
  41713a:	push   0xfffffffc
  41713c:	xchg   BYTE PTR [edi+0x11bdb5b2],bl
  417142:	ret    
  417143:	xchg   esi,eax
  417144:	mov    ch,0xfa
  417146:	or     DWORD PTR [ebx+0x4ffaae97],0xffffff84
  41714d:	pop    ds
  41714e:	add    esi,DWORD PTR [eax]
  417150:	in     eax,dx
  417151:	cli    
  417152:	ds push cs
  417154:	jg     0x41719f
  417156:	aad    0x5
  417158:	push   esi
  417159:	clc    
  41715a:	pushf  
  41715b:	jno    0x41718a
  41715d:	pop    edi
  41715e:	sbb    al,0x42
  417160:	aam    0x40
  417162:	rcl    DWORD PTR [esi+0x3f],cl
  417165:	mov    eax,0x71a3bbf5
  41716a:	cmp    al,0xb0
  41716c:	ss fs aad 0x74
  417170:	cmp    bh,al
  417172:	loope  0x4171f3
  417174:	jnp    0x417139
  417176:	xchg   esp,eax
  417177:	nop
  417178:	mov    bl,BYTE PTR [ebx]
  41717a:	pop    edx
  41717b:	aas    
  41717c:	mov    ch,0x7c
  41717e:	ret    
  41717f:	lods   eax,DWORD PTR ds:[esi]
  417180:	cmp    eax,0x64e2adc4
  417185:	dec    eax
  417186:	loop   0x417171
  417188:	xchg   esi,eax
  417189:	xchg   esi,eax
  41718a:	das    
  41718b:	sub    DWORD PTR [esi],edx
  41718d:	sub    edx,DWORD PTR [edx+0x2a24bced]
  417193:	sbb    eax,0xbbfbfd47
  417198:	xchg   edx,eax
  417199:	mov    DWORD PTR [ebp-0x3176a6d7],esp
  41719f:	inc    esi
  4171a0:	push   eax
  4171a1:	(bad)  
  4171a2:	pop    ebx
  4171a3:	out    dx,al
  4171a4:	cmp    al,0xb6
  4171a6:	dec    DWORD PTR [ebx]
  4171a8:	fsubr  QWORD PTR [ecx]
  4171aa:	ss jmp 0x295c:0xbdc27cf6
  4171b2:	inc    eax
  4171b3:	xor    bl,ah
  4171b5:	dec    ebp
  4171b6:	inc    esi
  4171b7:	scas   eax,DWORD PTR es:[edi]
  4171b8:	rcl    DWORD PTR [esi-0x32],1
  4171bb:	or     al,0xaa
  4171bd:	lods   eax,DWORD PTR ds:[esi]
  4171be:	push   edi
  4171bf:	mov    ch,cl
  4171c1:	repnz mov ch,0xba
  4171c4:	stos   BYTE PTR es:[edi],al
  4171c5:	add    al,BYTE PTR [edx+0x1196df3c]
  4171cb:	cmp    edx,DWORD PTR [ebx+0x4c246634]
  4171d1:	adc    al,0xfd
  4171d3:	jns    0x41719e
  4171d5:	push   ss
  4171d6:	jl     0x417248
  4171d8:	pop    ds
  4171d9:	aaa    
  4171da:	inc    edi
  4171db:	int3   
  4171dc:	sahf   
  4171dd:	mov    edi,0x3381ac34
  4171e2:	adc    al,0x9f
  4171e4:	pop    edx
  4171e5:	xor    eax,0xc956ac6a
  4171ea:	dec    ebx
  4171eb:	ins    BYTE PTR es:[edi],dx
  4171ec:	mov    bh,dl
  4171ee:	cld    
  4171ef:	push   eax
  4171f0:	xchg   ebx,eax
  4171f1:	mov    bl,0x1e
  4171f3:	not    BYTE PTR [esi+0x6e3fe1c8]
  4171f9:	cmp    DWORD PTR [ecx+0x1c],ebx
  4171fc:	xlat   BYTE PTR ds:[ebx]
  4171fd:	inc    ebx
  4171fe:	lea    eax,[edx-0xe]
  417201:	push   ds
  417202:	out    dx,al
  417203:	xchg   edx,eax
  417204:	xchg   esi,eax
  417205:	add    DWORD PTR [eax-0x73d5c72e],0x5543e131
  41720f:	or     eax,0xfef6f2dc
  417214:	int    0x74
  417216:	imul   ebp,DWORD PTR [esi],0xffffffbe
  417219:	mov    cl,0x2d
  41721b:	out    0x71,eax
  41721d:	xor    ah,0xc4
  417220:	ins    BYTE PTR es:[edi],dx
  417221:	cwde   
  417222:	sub    BYTE PTR [esi+0x31],bl
  417225:	addr16 in eax,dx
  417227:	sbb    esp,DWORD PTR [ebp+0x69684a6d]
  41722d:	xor    eax,0x2eb71bd2
  417232:	scas   eax,DWORD PTR es:[edi]
  417233:	xchg   ebp,eax
  417234:	or     al,0x83
  417236:	scas   eax,DWORD PTR es:[edi]
  417237:	and    eax,0xd53561cd
  41723c:	lock mov BYTE PTR [ebp-0x7f],cl
  417240:	sbb    al,0x3
  417242:	call   0xb8c2:0xe192475c
  417249:	mov    al,ds:0xe9587654
  41724e:	and    al,0x35
  417250:	test   esp,ebp
  417252:	sub    edx,DWORD PTR [ebp+0x50]
  417255:	fimul  WORD PTR [edi+0x1b]
  417258:	xchg   edi,eax
  417259:	add    DWORD PTR [ecx-0x75],edx
  41725c:	fld    QWORD PTR [esi+0x4a]
  41725f:	js     0x41729a
  417261:	and    BYTE PTR [eax+0x23fc50b4],bh
  417267:	mov    WORD PTR [esi+0x10ff29f1],es
  41726d:	stos   BYTE PTR es:[edi],al
  41726e:	pop    ss
  41726f:	pop    edi
  417270:	aad    0xdd
  417272:	out    dx,al
  417273:	mov    ebp,ecx
  417275:	sbb    al,BYTE PTR [ebx]
  417277:	out    0x6c,eax
  417279:	mov    ds:0x43a0a16a,al
  41727e:	add    dh,BYTE PTR [ebp-0x7dc4a450]
  417284:	add    BYTE PTR [ecx],ch
  417286:	mov    edi,0xfeab7e40
  41728b:	fidiv  WORD PTR [edi+0x76c7334f]
  417291:	std    
  417292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417293:	mov    al,ds:0x2559a9ed
  417298:	or     dl,bh
  41729a:	idiv   bh
  41729c:	pop    eax
  41729d:	loope  0x4172a1
  41729f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172a0:	mov    eax,0xf96d967c
  4172a5:	jp     0x4172d3
  4172a7:	xchg   esi,eax
  4172a8:	mov    edi,0x9f5fac03
  4172ad:	xchg   esp,eax
  4172ae:	inc    ecx
  4172af:	pop    ebp
  4172b0:	dec    eax
  4172b1:	xchg   esi,eax
  4172b2:	int3   
  4172b3:	das    
  4172b4:	jg     0x4172df
  4172b6:	jecxz  0x417285
  4172b8:	and    ecx,eax
  4172ba:	imul   edi,DWORD PTR [edx],0x64
  4172bd:	daa    
  4172be:	adc    edi,esi
  4172c0:	enter  0x2c0c,0xcf
  4172c4:	clc    
  4172c5:	and    esi,DWORD PTR [edi*2+0x2758630a]
  4172cc:	repnz in eax,dx
  4172ce:	xor    al,0x37
  4172d0:	adc    edi,DWORD PTR [ecx]
  4172d2:	ins    DWORD PTR es:[edi],dx
  4172d3:	dec    edx
  4172d4:	frstor [ecx+0x17]
  4172d7:	pop    eax
  4172d8:	pop    ecx
  4172d9:	pushf  
  4172da:	ins    BYTE PTR es:[edi],dx
  4172db:	dec    ebp
  4172dc:	pop    ss
  4172dd:	inc    ebp
  4172de:	out    dx,eax
  4172df:	pop    edx
  4172e0:	pop    edi
  4172e1:	pop    ebx
  4172e2:	cmc    
  4172e3:	shl    DWORD PTR [eax],0x79
  4172e6:	scas   eax,DWORD PTR es:[edi]
  4172e7:	cmp    BYTE PTR [edx+0x64],ch
  4172ea:	pop    edx
  4172eb:	mov    bh,0x8a
  4172ed:	in     eax,dx
  4172ee:	push   cs
  4172ef:	call   0x7fa2:0xe6d04341
  4172f6:	pop    DWORD PTR [ebx]
  4172f8:	push   esi
  4172f9:	lods   al,BYTE PTR ds:[esi]
  4172fa:	mov    al,ds:0xd5807bab
  4172ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417300:	xlat   BYTE PTR ds:[ebx]
  417301:	dec    edx
  417302:	ficom  DWORD PTR [esi+0x7d]
  417305:	jmp    FWORD PTR [ebx+0x2036f44d]
  41730b:	cmp    DWORD PTR [edi],eax
  41730d:	fs jl  0x4172fd
  417310:	push   esp
  417311:	test   ax,0xe2d0
  417315:	test   eax,0xd53ff914
  41731a:	pop    esp
  41731b:	mov    cl,0x11
  41731d:	sbb    BYTE PTR [edi],dl
  41731f:	mul    BYTE PTR [ecx+eax*8]
  417322:	cmp    DWORD PTR [ebx+0x2c63a99f],esp
  417328:	xchg   al,ch
  41732a:	call   0x7c4:0x9267b04d
  417331:	stc    
  417332:	pop    eax
  417333:	stos   BYTE PTR es:[edi],al
  417334:	sbb    eax,0x7c80f5e0
  417339:	mov    esp,0xf3745b05
  41733e:	dec    eax
  41733f:	xor    eax,0x8703e2c8
  417344:	or     bl,BYTE PTR [ecx]
  417346:	xor    BYTE PTR [edx+esi*1],bl
  417349:	leave  
  41734a:	sub    edi,esp
  41734c:	mov    gs,WORD PTR [edi]
  41734e:	fdiv   QWORD PTR [esi+0x7b1672a2]
  417354:	push   esp
  417355:	sub    bl,BYTE PTR [ebx]
  417357:	scas   al,BYTE PTR es:[edi]
  417358:	(bad)  
  417359:	cld    
  41735a:	sar    DWORD PTR [eax-0x63],0x5a
  41735e:	mov    ds:0x15e205b1,al
  417363:	jmp    0xd02af63
  417368:	popa   
  417369:	clc    
  41736a:	pop    edi
  41736b:	pop    ebx
  41736c:	rcl    BYTE PTR [ebx+0x4cb5c936],1
  417372:	jo     0x417355
  417374:	add    al,0xa
  417376:	or     eax,0xd8c5e7a0
  41737b:	sub    DWORD PTR ds:0x9ab9fe39,0x66f32e1c
  417385:	je     0x417323
  417387:	aas    
  417388:	iret   
  417389:	cwde   
  41738a:	stos   DWORD PTR es:[edi],eax
  41738b:	inc    esp
  41738c:	mov    bh,0x9c
  41738e:	fwait
  41738f:	loop   0x41733b
  417391:	jne    0x4173b2
  417393:	hlt    
  417394:	fild   WORD PTR [eax+0x3d]
  417397:	sub    ecx,DWORD PTR [eax]
  417399:	dec    esp
  41739a:	pop    ecx
  41739b:	add    eax,0xa9f0705b
  4173a0:	(bad)  
  4173a3:	xchg   edi,eax
  4173a4:	inc    eax
  4173a5:	(bad)  
  4173a6:	push   ss
  4173a7:	loop   0x417364
  4173a9:	fdivr  DWORD PTR [ecx]
  4173ab:	ror    dh,cl
  4173ad:	pop    es
  4173ae:	cmp    DWORD PTR [ebp-0x27],eax
  4173b1:	js     0x41740a
  4173b3:	in     eax,0x9b
  4173b5:	test   eax,0xe9026a71
  4173ba:	lahf   
  4173bb:	and    cl,ah
  4173bd:	aad    0xa
  4173bf:	in     eax,0x43
  4173c1:	xlat   BYTE PTR ds:[ebx]
  4173c2:	mov    edx,0x87ed167a
  4173c7:	dec    ebx
  4173c8:	sbb    DWORD PTR [ebx-0x2e],0x38
  4173cc:	xchg   ecx,eax
  4173cd:	ins    BYTE PTR es:[edi],dx
  4173ce:	in     eax,dx
  4173cf:	push   ds
  4173d0:	xchg   esp,eax
  4173d1:	inc    ebx
  4173d2:	hlt    
  4173d3:	sub    al,0x61
  4173d5:	inc    eax
  4173d6:	jne    0x41738d
  4173d8:	push   ebx
  4173d9:	je     0x4173be
  4173db:	clc    
  4173dc:	sub    dl,BYTE PTR [eax]
  4173de:	xor    eax,0xe266fd52
  4173e3:	sbb    cl,BYTE PTR [eax-0x1d]
  4173e6:	adc    eax,0x5eb46101
  4173eb:	and    DWORD PTR [esi],0xffffffb2
  4173ee:	cwde   
  4173ef:	ins    DWORD PTR es:[edi],dx
  4173f0:	fcmovnbe st,st(5)
  4173f2:	nop
  4173f3:	lods   eax,DWORD PTR ds:[esi]
  4173f4:	push   esp
  4173f5:	adc    al,0x13
  4173f7:	iret   
  4173f8:	fidivr WORD PTR [eax-0x29a8b5c1]
  4173fe:	jae    0x417473
  417400:	sub    BYTE PTR [ecx+0x5df8ecb3],bh
  417406:	aad    0xa1
  417408:	or     BYTE PTR [ebp+0x5a],dh
  41740b:	mov    esp,0x202d62c9
  417410:	jne    0x41746b
  417412:	mov    ah,bh
  417414:	fucomi st,st(7)
  417416:	sub    DWORD PTR [edi-0x73],0xa7c041f7
  41741d:	call   0x455af3aa
  417422:	push   esi
  417423:	stos   BYTE PTR es:[edi],al
  417424:	and    BYTE PTR [ecx],ah
  417426:	pop    ebp
  417427:	mov    ebx,0xa20e2ed
  41742c:	mov    bl,0x56
  41742e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41742f:	and    DWORD PTR [eax],ebx
  417431:	gs aam 0xd5
  417434:	aad    0x8b
  417436:	and    al,0xb6
  417438:	pushf  
  417439:	pusha  
  41743a:	cmp    al,0xb2
  41743c:	mov    bh,BYTE PTR [esi-0x6e54ec12]
  417442:	fisubr WORD PTR [esi]
  417444:	mov    ch,0xf8
  417446:	or     al,0x14
  417448:	bound  eax,QWORD PTR [ebp-0x32dec55a]
  41744e:	pop    es
  41744f:	gs push 0x4b
  417452:	es in  eax,0xf9
  417455:	jmp    0x36d133d9
  41745a:	(bad)  
  41745b:	leave  
  41745c:	shr    DWORD PTR [ebp-0x280f5164],0x9e
  417463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417464:	pop    ecx
  417465:	push   ecx
  417466:	mov    DWORD PTR [eax-0x3e01a18b],ecx
  41746c:	adc    edx,esp
  41746e:	mov    eax,ds:0x75813839
  417473:	adc    al,0x2
  417475:	xor    al,0x83
  417477:	retf   0xb8c
  41747a:	and    ecx,DWORD PTR [ebx-0x663d5b7b]
  417480:	outs   dx,BYTE PTR ds:[esi]
  417481:	jo     0x41745c
  417483:	dec    ebx
  417484:	sti    
  417485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417486:	push   ebx
  417487:	fs leave 
  417489:	pop    ds
  41748a:	xchg   esi,eax
  41748b:	and    cl,0x45
  41748e:	mov    ecx,0x3ba9663f
  417493:	fsub   DWORD PTR ds:0xcf38f80f
  417499:	xchg   ebp,esp
  41749b:	dec    eax
  41749c:	jecxz  0x417493
  41749e:	fwait
  41749f:	das    
  4174a0:	and    cl,BYTE PTR [edi]
  4174a2:	and    DWORD PTR [edx+ebp*2+0x715a5f2b],0xffffff82
  4174aa:	xchg   esi,eax
  4174ab:	rcr    BYTE PTR [esi],1
  4174ad:	test   al,0x44
  4174af:	mov    DWORD PTR [eax-0x6cd8c051],edx
  4174b5:	mov    DWORD PTR [ecx+0x3b],edi
  4174b8:	popf   
  4174b9:	or     DWORD PTR [ebp-0x4ddbbe9b],ebp
  4174bf:	jl     0x41753f
  4174c1:	inc    edx
  4174c2:	sub    cl,BYTE PTR [ebp+0x60]
  4174c5:	push   ds
  4174c6:	mov    esi,0x50fcb295
  4174cb:	xor    BYTE PTR ds:0xbd966f19,bl
  4174d1:	into   
  4174d2:	mov    gs,WORD PTR [esi-0x77]
  4174d5:	pop    ecx
  4174d6:	sub    ch,bl
  4174d8:	loopne 0x4174ad
  4174da:	xchg   ebx,eax
  4174db:	xor    al,0xb1
  4174dd:	xchg   edx,eax
  4174de:	sub    DWORD PTR [esi-0x71fafc7],0x65
  4174e5:	inc    esp
  4174e6:	stos   DWORD PTR es:[edi],eax
  4174e7:	repz add ecx,DWORD PTR [ecx-0x677f59e3]
  4174ee:	push   0xeef10425
  4174f3:	sar    BYTE PTR [edx],cl
  4174f5:	or     BYTE PTR [esi-0x25],ah
  4174f8:	lods   eax,DWORD PTR ds:[esi]
  4174f9:	pop    ss
  4174fa:	int    0x71
  4174fc:	xchg   edi,eax
  4174fd:	sahf   
  4174fe:	dec    ebx
  4174ff:	or     BYTE PTR [esi],al
  417501:	jl     0x41752f
  417503:	xchg   DWORD PTR [esi],edi
  417505:	test   cl,0x83
  417508:	mov    al,0xbd
  41750a:	dec    eax
  41750b:	sbb    eax,0xc898141f
  417510:	lock and BYTE PTR ds:0xce706c7a,bh
  417517:	sbb    edi,DWORD PTR [esi]
  417519:	dec    ebx
  41751a:	cmp    ebx,DWORD PTR [ebx-0x4620bc04]
  417520:	aad    0xb5
  417522:	in     al,dx
  417523:	mov    bl,BYTE PTR [ebx+esi*4]
  417526:	popa   
  417527:	mov    cl,BYTE PTR [ecx+0x3dd625b9]
  41752d:	pop    edi
  41752e:	fild   DWORD PTR [ebx+esi*1]
  417531:	das    
  417532:	rcr    DWORD PTR [eax-0x3c7c4120],1
  417538:	mov    ch,0xe0
  41753a:	out    dx,al
  41753b:	aaa    
  41753c:	and    ah,BYTE PTR [ebx]
  41753e:	sub    al,dh
  417540:	stos   DWORD PTR es:[edi],eax
  417541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417542:	sbb    dl,al
  417544:	add    cl,BYTE PTR [esi+0xa2d5343]
  41754a:	jns    0x4174fc
  41754c:	mov    bh,0xd3
  41754e:	inc    edx
  41754f:	sub    al,0x2e
  417551:	sub    dl,BYTE PTR [edx+0x66]
  417554:	jmp    0x2b5d:0x15854c79
  41755b:	pop    ebp
  41755c:	jns    0x4175d2
  41755e:	rol    BYTE PTR [esi+0x8],cl
  417561:	lods   al,BYTE PTR ds:[esi]
  417562:	addr16 cwde 
  417564:	inc    eax
  417565:	mov    eax,ds:0x9860ff69
  41756a:	cmp    dl,bl
  41756c:	dec    esp
  41756d:	push   es
  41756e:	iret   
  41756f:	jo     0x417587
  417571:	fwait
  417572:	mov    cl,0x1d
  417574:	pop    edi
  417575:	fsub   QWORD PTR [edi-0x9]
  417578:	popa   
  417579:	lock xor edx,DWORD PTR [edx]
  41757c:	loopne 0x4175a4
  41757e:	jbe    0x4175b0
  417580:	iret   
  417581:	sahf   
  417582:	or     al,0x95
  417584:	inc    ebx
  417585:	mov    ah,0x45
  417587:	jle    0x417525
  417589:	or     DWORD PTR [eax-0x2a],0x138803ed
  417590:	and    DWORD PTR ds:0x639c62bd,0x19
  417597:	stc    
  417598:	add    BYTE PTR [ebx-0x3a1e9560],bl
  41759e:	inc    sp
  4175a0:	adc    al,0x2e
  4175a2:	retf   0x3ebd
  4175a5:	dec    ebp
  4175a6:	sub    al,0xa1
  4175a8:	sub    al,0xf4
  4175aa:	sbb    al,BYTE PTR [ebp-0x49]
  4175ad:	inc    ebx
  4175ae:	or     al,BYTE PTR [ecx+0x16]
  4175b1:	ins    BYTE PTR es:[edi],dx
  4175b2:	hlt    
  4175b3:	inc    ebx
  4175b4:	mov    esp,0xdc115ab1
  4175b9:	or     ah,BYTE PTR [esi-0x30b3e297]
  4175bf:	cmp    BYTE PTR [ebx+0x4e7b8283],ah
  4175c5:	retf   
  4175c6:	or     eax,0x222f3d31
  4175cb:	add    bh,BYTE PTR cs:[ebx+0x28d4ee0]
  4175d2:	xor    DWORD PTR cs:[ebx],ebp
  4175d5:	lods   al,BYTE PTR ds:[esi]
  4175d6:	fadd   DWORD PTR [edi+ebp*8]
  4175d9:	ds repz mov esp,esi
  4175dd:	aam    0xa7
  4175df:	xor    BYTE PTR [ebx],bl
  4175e1:	(bad)
  4175e5:	sti    
  4175e6:	jmp    DWORD PTR cs:[ebp-0x34b3ccdb]
  4175ed:	cli    
  4175ee:	call   0xa2c1:0xfe5d86a8
  4175f5:	ror    DWORD PTR [bx+di-0x2d],cl
  4175f9:	es adc eax,0x1bf7ad5f
  4175ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417600:	aam    0x59
  417602:	inc    ecx
  417603:	or     edi,DWORD PTR [eax-0x39]
  417606:	jle    0x417614
  417608:	pop    ecx
  417609:	loop   0x41764a
  41760b:	jns    0x41762f
  41760d:	leave  
  41760e:	mov    al,cs:0xd38a09fc
  417614:	(bad)  
  417615:	xor    ebx,edi
  417617:	loop   0x417608
  417619:	push   cs
  41761a:	sbb    BYTE PTR [edi+0x7531979f],cl
  417620:	cmp    BYTE PTR [ecx],cl
  417622:	xor    eax,0x26bb3727
  417627:	cmc    
  417628:	inc    esi
  417629:	(bad)  
  41762d:	or     BYTE PTR [eax],0x62
  417630:	js     0x4176a0
  417632:	shl    ebp,cl
  417634:	mov    esp,0x83fb492c
  417639:	add    ah,BYTE PTR [eax-0x7f]
  41763c:	mov    al,0x84
  41763e:	jnp    0x417674
  417640:	(bad)  
  417641:	push   edx
  417642:	sub    al,0x33
  417644:	dec    ebx
  417645:	shl    BYTE PTR [edi-0x4b0cf345],cl
  41764b:	push   ebp
  41764c:	cmp    BYTE PTR [esi+0x5b],ch
  41764f:	add    BYTE PTR [eax],dh
  417651:	or     eax,0xdbd112be
  417656:	loop   0x41765a
  417658:	loopne 0x4176cf
  41765a:	call   0x3562796d
  41765f:	jp     0x4176a2
  417661:	call   0xcf09:0x442eda77
  417668:	imul   ecx,DWORD PTR [esi+ebp*2],0x8d533767
  41766f:	retf   
  417670:	dec    edx
  417671:	cwde   
  417672:	shr    cl,0x23
  417675:	sahf   
  417676:	jmp    0xa2eb:0x2ce48358
  41767d:	stos   DWORD PTR es:[edi],eax
  41767e:	jae    0x4176e0
  417680:	jno    0x4176db
  417682:	mov    eax,ds:0x10639f68
  417687:	pop    ss
  417688:	lock (bad) 
  41768a:	pop    ebx
  41768b:	sbb    BYTE PTR [edx+0x44],bh
  41768e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417690:	aaa    
  417691:	ins    BYTE PTR es:[edi],dx
  417692:	push   cs
  417693:	sub    eax,0x81670750
  417698:	mov    edx,0xa9c2133c
  41769d:	pop    ss
  41769e:	add    DWORD PTR [ebx+0x7efebd73],esi
  4176a4:	xchg   BYTE PTR [esi-0x7e],bh
  4176a7:	xor    BYTE PTR [edi],0xb5
  4176aa:	daa    
  4176ab:	test   edi,ecx
  4176ad:	mov    ds:0x43617229,al
  4176b2:	(bad)  
  4176b3:	and    ecx,edi
  4176b5:	mov    eax,ds:0x3eeac860
  4176ba:	jne    0x417705
  4176bc:	jmp    0xfb71ccbd
  4176c1:	jmp    0x21f9ea7a
  4176c6:	push   ds
  4176c7:	add    DWORD PTR [ecx-0x69],edi
  4176ca:	pop    esp
  4176cb:	adc    ebp,DWORD PTR [ebx+eiz*8-0x54e500b0]
  4176d2:	arpl   WORD PTR ds:0x35c398ad,sp
  4176d8:	and    DWORD PTR fs:[ebx+0x2b6d7b15],eax
  4176df:	retf   0xd827
  4176e2:	daa    
  4176e3:	stos   DWORD PTR es:[edi],eax
  4176e4:	xor    eax,0x49a5fa39
  4176e9:	cs addr16 cwde 
  4176ec:	sub    eax,0x282c92e5
  4176f1:	push   ecx
  4176f2:	fs hlt 
  4176f4:	(bad)  
  4176f6:	mov    ecx,0xd404b4be
  4176fb:	into   
  4176fc:	jmp    0x41775e
  4176fe:	aad    0xe0
  417700:	mul    BYTE PTR [ecx+edx*8+0x6efb1520]
  417707:	gs enter 0x8821,0xde
  41770c:	loop   0x41777b
  41770e:	int3   
  41770f:	mov    bh,0xe0
  417711:	jge    0x4176e5
  417713:	mov    al,ds:0x3abe7a24
  417719:	sub    DWORD PTR [ecx],esi
  41771b:	jle    0x4176d9
  41771d:	sti    
  41771e:	dec    esi
  41771f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417720:	outs   dx,BYTE PTR ds:[esi]
  417721:	dec    ebp
  417722:	lahf   
  417723:	lock shl ch,0xe1
  417727:	pop    ds
  417728:	scas   eax,DWORD PTR es:[edi]
  417729:	mov    cs,WORD PTR [edi-0x64]
  41772c:	mov    ds:0x60e97c53,al
  417731:	iret   
  417732:	mov    bl,0xec
  417734:	add    BYTE PTR [edx+0x7d],0xb2
  417738:	add    eax,0x19d73f9f
  41773d:	pop    esp
  41773e:	rcl    DWORD PTR [eax+0x1b7cd170],0xc3
  417745:	adc    cl,BYTE PTR [edi]
  417747:	jne    0x4176e3
  417749:	in     al,dx
  41774a:	inc    ebp
  41774b:	xchg   edx,eax
  41774c:	iret   
  41774d:	sub    ah,BYTE PTR [eax+0x60d7514]
  417753:	sbb    DWORD PTR [esi+0x77],ebx
  417756:	and    BYTE PTR [edx+0xda3b3e2],ah
  41775c:	mov    cl,0xe1
  41775e:	int    0x3f
  417760:	adc    al,0x13
  417762:	dec    eax
  417763:	sti    
  417764:	jge    0x41777b
  417766:	adc    ecx,edi
  417768:	test   DWORD PTR [edx+0x39cf951a],ecx
  41776e:	push   ebp
  41776f:	push   0x66cdd872
  417774:	in     al,dx
  417775:	in     al,dx
  417776:	in     eax,dx
  417777:	xor    DWORD PTR [edx-0x74],0x48a8e78a
  41777e:	call   0x99b294b4
  417783:	lods   al,BYTE PTR ds:[esi]
  417784:	outs   dx,DWORD PTR ds:[esi]
  417785:	ds je  0x4177ac
  417788:	or     BYTE PTR [ebx-0x73],bl
  41778b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41778c:	test   DWORD PTR ds:0x907fe46d,0x499f836c
  417796:	cld    
  417797:	cmp    BYTE PTR [ebx+0x443c0528],cl
  41779d:	pop    ds
  41779e:	or     eax,0x5a00eb93
  4177a3:	or     BYTE PTR [edx+edi*2+0x7f],cl
  4177a7:	pop    ebx
  4177a8:	(bad)  
  4177a9:	add    al,0xc6
  4177ab:	pushf  
  4177ac:	int    0x9f
  4177ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177af:	inc    ebx
  4177b0:	lsl    esp,WORD PTR [esi-0x5b]
  4177b4:	cmc    
  4177b5:	xor    cl,dh
  4177b7:	bsf    esi,DWORD PTR [ecx+ebx*2+0x1f]
  4177bc:	dec    ebx
  4177bd:	sub    BYTE PTR ds:0xb31c09da,0x61
  4177c4:	sbb    BYTE PTR ds:0x8d02cf90,cl
  4177ca:	ins    BYTE PTR es:[edi],dx
  4177cb:	lahf   
  4177cc:	add    ecx,DWORD PTR [ebx]
  4177ce:	mov    ss,WORD PTR [ecx+0xd]
  4177d1:	mov    cl,0xdd
  4177d3:	ret    
  4177d4:	inc    edi
  4177d5:	jge    0x417757
  4177d7:	retf   
  4177d8:	aaa    
  4177d9:	test   eax,0x3dbd0a58
  4177de:	jbe    0x417816
  4177e0:	std    
  4177e1:	jo     0x4177ad
  4177e3:	test   BYTE PTR [edi+0x2e],ch
  4177e6:	dec    esi
  4177e7:	inc    eax
  4177e8:	ja     0x41777d
  4177ea:	sub    BYTE PTR es:[edx-0xd],cl
  4177ee:	push   ebp
  4177ef:	ret    0x4109
  4177f2:	lea    edx,ds:0x629dd007
  4177f8:	jae    0x4177d5
  4177fa:	lea    edx,[ecx-0x40]
  4177fd:	cdq    
  4177fe:	(bad)  
  4177ff:	ins    DWORD PTR es:[edi],dx
  417800:	cmp    BYTE PTR [edx+0x71],0xfd
  417804:	addr16 test al,0xf
  417807:	xchg   ebp,eax
  417808:	in     al,0xe
  41780a:	repnz push ecx
  41780c:	(bad)  
  41780d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41780e:	mov    dh,0x2b
  417810:	not    DWORD PTR [edx]
  417812:	pop    ss
  417813:	or     DWORD PTR [ebx-0x6fc094d4],edx
  417819:	clc    
  41781a:	and    BYTE PTR [eax-0x5f],cl
  41781d:	dec    ecx
  41781e:	sbb    eax,0xdf088281
  417823:	xor    BYTE PTR [ebx],bh
  417825:	(bad)  
  417826:	jmp    0x60ee:0x40b1e8eb
  41782d:	sbb    BYTE PTR [edi+0xafe7e69],ch
  417833:	push   0xffffffee
  417835:	mov    ch,BYTE PTR [eax-0x5fb2b599]
  41783b:	mov    esi,0x7a0d9d39
  417840:	nop
  417841:	mov    ecx,ebx
  417843:	mov    ebx,0x384eaa7
  417848:	pushf  
  417849:	jge    0x4177f7
  41784b:	shl    edi,0x55
  41784e:	pop    ebp
  41784f:	lock in eax,0x1a
  417852:	and    DWORD PTR [edi+eiz*8+0x77],eax
  417856:	jp     0x417809
  417858:	xchg   edi,eax
  417859:	stos   BYTE PTR es:[edi],al
  41785a:	loop   0x417871
  41785c:	cmp    eax,edi
  41785e:	loopne 0x417895
  417860:	imul   edx,DWORD PTR [edi+edi*4],0xaab51753
  417867:	mov    bl,0xb3
  417869:	stos   BYTE PTR es:[edi],al
  41786a:	sub    al,al
  41786c:	sub    al,0x32
  41786e:	xchg   ebx,eax
  41786f:	inc    ecx
  417870:	pop    edi
  417871:	push   ss
  417872:	imul   ebp,DWORD PTR [ebp+0x1426cb2c],0xffffffdf
  417879:	sub    DWORD PTR [edx],esp
  41787b:	and    BYTE PTR [ecx+0x43905e18],bh
  417881:	or     ch,BYTE PTR [ecx+edx*8-0x62]
  417885:	dec    esi
  417886:	cs or  dl,al
  417889:	sbb    ebp,ecx
  41788b:	inc    ecx
  41788c:	stc    
  41788d:	cmp    eax,ecx
  41788f:	popa   
  417890:	mov    ecx,0xbe81f1d
  417895:	push   ds
  417896:	arpl   WORD PTR [edx+ecx*4],si
  417899:	stos   DWORD PTR es:[edi],eax
  41789a:	mov    cl,0xf8
  41789c:	sbb    edx,DWORD PTR [ebx]
  41789e:	xor    al,0xbc
  4178a0:	fdivrp st(2),st
  4178a2:	mov    WORD PTR [edi+ecx*1],?
  4178a5:	push   0xffffffa6
  4178a7:	loopne 0x4178b0
  4178a9:	jo     0x417876
  4178ab:	dec    eax
  4178ac:	adc    eax,0xe633d608
  4178b1:	ror    edi,cl
  4178b3:	xor    cl,dl
  4178b5:	add    cl,BYTE PTR [ebx]
  4178b7:	xor    DWORD PTR [edx],0xffffff8f
  4178ba:	aad    0xa9
  4178bc:	xor    eax,0x4aa37e07
  4178c1:	in     al,dx
  4178c2:	add    edi,DWORD PTR [esp+eax*4-0x2baf14bd]
  4178c9:	loop   0x417941
  4178cb:	sub    ah,ch
  4178cd:	mov    WORD PTR fs:[ebx],cs
  4178d0:	mov    ebx,ecx
  4178d2:	ja     0x4178e3
  4178d4:	jecxz  0x4178d8
  4178d6:	and    BYTE PTR [eax],dh
  4178d8:	imul   BYTE PTR [ebx+0x2b76c063]
  4178de:	sahf   
  4178df:	push   ecx
  4178e0:	imul   BYTE PTR [edi]
  4178e2:	add    al,0x95
  4178e4:	shrd   DWORD PTR [esp+ebx*4-0x74a17166],edx,cl
  4178ec:	outs   dx,DWORD PTR ds:[esi]
  4178ed:	lea    eax,[eax+0xd4962ab]
  4178f3:	jp     0x417908
  4178f5:	inc    ecx
  4178f6:	mov    bl,0x66
  4178f8:	sub    al,0xda
  4178fa:	cwde   
  4178fb:	sub    al,0x46
  4178fd:	pop    eax
  4178fe:	cld    
  4178ff:	push   ds
  417900:	ins    BYTE PTR es:[edi],dx
  417901:	repz push eax
  417903:	fsub   st,st(1)
  417905:	push   ecx
  417906:	pusha  
  417907:	mov    BYTE PTR ds:0x95c72848,cl
  41790d:	sbb    DWORD PTR [esi],esp
  41790f:	ja     0x4178bf
  417911:	lods   eax,DWORD PTR ds:[esi]
  417912:	inc    esi
  417913:	retf   
  417914:	mov    ds:0x2b5eb21a,al
  417919:	lea    ebx,[ebp-0x1123d430]
  41791f:	inc    ecx
  417920:	fild   QWORD PTR [edi-0x34285e14]
  417926:	xor    al,0x5e
  417928:	jmp    0x417967
  41792a:	pop    eax
  41792b:	fnsave [eax+edi*4]
  41792e:	mov    ebx,0x4f2652dc
  417933:	mov    ebx,0x50b9f4a9
  417938:	and    DWORD PTR [edx+0x5e9e8930],ebx
  41793e:	das    
  41793f:	daa    
  417940:	outs   dx,DWORD PTR ds:[esi]
  417941:	mov    al,0xc0
  417943:	aad    0xf3
  417945:	bnd ret 
  417947:	mov    ds:0x2b558947,eax
  41794c:	out    0x68,al
  41794e:	test   al,0xb5
  417950:	xchg   ebx,eax
  417951:	sbb    DWORD PTR [ebx-0x1b],eax
  417954:	outs   dx,BYTE PTR ds:[esi]
  417955:	bound  ebx,QWORD PTR [ecx+0x7df1c424]
  41795b:	pop    ds
  41795c:	mov    edi,ebp
  41795e:	sbb    dh,bh
  417960:	je     0x417994
  417962:	lock xchg edi,eax
  417964:	pop    ecx
  417965:	jo     0x417949
  417967:	inc    edi
  417968:	(bad)  
  41796a:	js     0x41793a
  41796c:	inc    edx
  41796d:	cmp    al,0x33
  41796f:	in     al,0x49
  417971:	call   0xda1275f
  417976:	(bad)  
  417978:	sub    DWORD PTR [ebx],ebp
  41797a:	xor    DWORD PTR [ebx+esi*2-0x5b],esp
  41797e:	push   0xffffffdd
  417980:	icebp  
  417981:	stos   DWORD PTR es:[edi],eax
  417982:	(bad)  
  417984:	and    eax,0xa185fb12
  417989:	iret   
  41798a:	in     al,0xef
  41798c:	es repnz out dx,eax
  41798f:	and    dl,BYTE PTR [eax+0x3f]
  417992:	mov    ecx,0xc1c01877
  417997:	jmp    0x291d:0xf5b12560
  41799e:	test   eax,0xa1ec39a9
  4179a3:	xchg   BYTE PTR [ebp+0x6],dh
  4179a6:	sub    bh,cl
  4179a8:	mov    eax,0xb72be08f
  4179ad:	inc    esi
  4179ae:	(bad)  
  4179af:	sbb    eax,0x7ef9f136
  4179b4:	dec    ecx
  4179b5:	out    0xaa,al
  4179b7:	call   0xe7bf:0xdb91ead7
  4179be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179c0:	retf   0x7984
  4179c3:	push   ss
  4179c4:	and    eax,0x1c7501c0
  4179c9:	add    edx,0x3fcfeb3c
  4179cf:	push   esp
  4179d0:	inc    DWORD PTR [edi-0x25]
  4179d3:	mov    ah,0x22
  4179d5:	sub    edi,DWORD PTR [bx+di+0x6f]
  4179d9:	or     eax,0xbe9f9662
  4179de:	xor    ecx,ebp
  4179e0:	test   BYTE PTR [edi],al
  4179e2:	or     esp,ecx
  4179e4:	pop    esi
  4179e5:	mov    eax,0x6ee4f02c
  4179ea:	xor    BYTE PTR [edi-0x5e1c7a0b],ch
  4179f0:	mov    WORD PTR [edx+0x11000c66],ds
  4179f6:	das    
  4179f7:	enter  0x2b91,0x83
  4179fb:	fdiv   QWORD PTR [ecx+0x56159e70]
  417a01:	inc    edi
  417a02:	loopne 0x417a69
  417a04:	je     0x41799f
  417a06:	mov    eax,ds:0x4a8ca5e1
  417a0b:	xor    BYTE PTR [ebx-0x6b],dl
  417a0e:	push   ebp
  417a0f:	pushf  
  417a10:	scas   al,BYTE PTR es:[edi]
  417a11:	push   ds
  417a12:	sub    ah,bh
  417a14:	ja     0x417a29
  417a16:	pop    ebp
  417a17:	fs movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  417a1a:	popa   
  417a1b:	sbb    eax,0xe51a0689
  417a20:	fsub   st(7),st
  417a22:	repnz sub al,BYTE PTR [esi]
  417a25:	mov    WORD PTR [esi+0xe7328bd],cs
  417a2b:	mov    WORD PTR [edi],ss
  417a2d:	(bad)  
  417a2e:	jecxz  0x417a39
  417a30:	cmp    BYTE PTR [edi+eax*8+0x67fb61f9],bh
  417a37:	pop    edi
  417a38:	sub    eax,0x4f9d9be6
  417a3d:	das    
  417a3e:	cs sub ecx,ecx
  417a41:	retf   
  417a42:	xchg   edi,eax
  417a43:	pop    ebp
  417a44:	outs   dx,DWORD PTR gs:[esi]
  417a46:	popa   
  417a47:	jg     0x4179cf
  417a49:	pop    esp
  417a4a:	pop    es
  417a4b:	inc    ecx
  417a4c:	daa    
  417a4d:	or     eax,0x5bcdfa66
  417a52:	cld    
  417a53:	int3   
  417a54:	adc    BYTE PTR [edx],cl
  417a56:	jmp    0x417a8f
  417a58:	scas   al,BYTE PTR es:[edi]
  417a59:	mov    dl,0xb3
  417a5b:	inc    edi
  417a5c:	js     0x417a10
  417a5e:	jae    0x417a7e
  417a60:	dec    ecx
  417a61:	jb     0x417a42
  417a63:	add    DWORD PTR [ebx-0x5a968fd4],0xedc0c3ff
  417a6d:	push   edi
  417a6e:	jl     0x417ac4
  417a70:	jns    0x417aa8
  417a72:	push   ds
  417a73:	fld    TBYTE PTR [edx+0x27]
  417a76:	add    edi,DWORD PTR [ecx]
  417a78:	xchg   edx,eax
  417a79:	cld    
  417a7a:	pop    eax
  417a7b:	test   eax,0x9771a737
  417a80:	jecxz  0x417aa9
  417a82:	add    ch,BYTE PTR [eax+0xa]
  417a85:	(bad)  
  417a86:	mov    ebp,0x422d8887
  417a8b:	fwait
  417a8c:	mov    ecx,esi
  417a8e:	aas    
  417a8f:	sub    al,0x38
  417a91:	sub    eax,0xb32d0f46
  417a96:	dec    ecx
  417a97:	push   es
  417a98:	loop   0x417a22
  417a9a:	add    bh,BYTE PTR [ebp-0x4d]
  417a9d:	jmp    0xc0aed1d1
  417aa2:	cld    
  417aa3:	sbb    edi,DWORD PTR [ebp-0x66aa07b7]
  417aa9:	jb     0x417a8b
  417aab:	sbb    ecx,ebx
  417aad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aae:	xor    BYTE PTR [ecx-0x65],bl
  417ab1:	loope  0x417a90
  417ab3:	xchg   dl,ch
  417ab5:	jmp    0xa09e:0x6ce46d6
  417abc:	lock xor DWORD PTR [ecx+0x19],ecx
  417ac0:	retf   0xb66
  417ac3:	jmp    0xc113:0x61224cab
  417aca:	gs xchg ebx,eax
  417acc:	xchg   ebx,eax
  417acd:	xor    DWORD PTR [edi],ebx
  417acf:	jo     0x417aaa
  417ad1:	repz add eax,0xc931f7ff
  417ad7:	in     al,dx
  417ad8:	(bad)  
  417adb:	clc    
  417adc:	sub    BYTE PTR [eax+0x6edb18f2],bh
  417ae2:	cmp    edi,edx
  417ae4:	jge    0x417a67
  417ae6:	cmp    BYTE PTR ds:0x43294baa,bl
  417aec:	mov    ds:0xb3e704ee,al
  417af1:	leave  
  417af2:	sub    DWORD PTR [edi-0x69],esi
  417af5:	inc    ebx
  417af6:	mov    esp,ebx
  417af8:	inc    edi
  417af9:	call   0xbca5c36a
  417afe:	cmp    bl,BYTE PTR [esi+0x4a]
  417b01:	das    
  417b02:	dec    esp
  417b03:	mov    al,ds:0x317257f7
  417b08:	adc    ax,0x98fc
  417b0c:	and    DWORD PTR [ebx+ebx*4+0x222a29d5],0x6c
  417b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b15:	fisub  DWORD PTR [esi+0x4bb1e6a4]
  417b1b:	jp     0x417af8
  417b1d:	jl     0x417ad1
  417b1f:	xor    ch,BYTE PTR [edi]
  417b21:	leave  
  417b22:	pop    esi
  417b23:	sub    al,0x1
  417b25:	int    0xa5
  417b27:	(bad)  
  417b28:	retf   0x5cd4
  417b2b:	sbb    DWORD PTR [ebx],esp
  417b2d:	sub    DWORD PTR [edx+esi*2-0x2e],ebx
  417b31:	pop    esi
  417b32:	or     edx,DWORD PTR [eax-0x17]
  417b35:	call   0x81841ffe
  417b3a:	mov    ds:0x4f338ef8,al
  417b3f:	mov    eax,ds:0x7133ac38
  417b44:	mov    eax,ds:0xd21c36ff
  417b49:	jp     0x417b13
  417b4b:	das    
  417b4c:	aam    0x15
  417b4e:	std    
  417b4f:	test   al,0x8e
  417b51:	ret    
  417b52:	je     0x417bcc
  417b54:	push   esp
  417b55:	and    al,0x7
  417b57:	sar    DWORD PTR [edx+esi*4+0x50],0x75
  417b5c:	cmp    edi,eax
  417b5e:	jge    0x417b56
  417b60:	adc    bl,BYTE PTR [edx-0x70]
  417b63:	push   esp
  417b64:	outs   dx,BYTE PTR ds:[esi]
  417b65:	and    al,BYTE PTR [ecx+ebx*1+0x335e46af]
  417b6c:	adc    BYTE PTR [edx],al
  417b6e:	js     0x417b75
  417b70:	test   DWORD PTR [esi+0x33bfda42],edx
  417b76:	sbb    eax,0xf1a919a2
  417b7b:	pop    ebx
  417b7c:	in     al,0xef
  417b7e:	(bad)  
  417b7f:	daa    
  417b80:	test   DWORD PTR [ebx+ebp*2],ebp
  417b83:	inc    eax
  417b84:	pop    edi
  417b85:	fs mov al,0x26
  417b88:	sbb    BYTE PTR [edx+esi*4+0x2b],bl
  417b8c:	int3   
  417b8d:	into   
  417b8e:	or     bh,BYTE PTR [esi+edx*1]
  417b91:	jb     0x417b4f
  417b93:	fild   DWORD PTR [esi-0x4e]
  417b96:	cwde   
  417b97:	sbb    BYTE PTR [ebx-0x30],bh
  417b9a:	je     0x417b79
  417b9c:	sbb    BYTE PTR [esp+ecx*1],al
  417b9f:	mov    bh,0x98
  417ba1:	push   0x2d
  417ba3:	mov    bh,0x7f
  417ba5:	mov    bl,BYTE PTR [ecx+0x35]
  417ba8:	push   esp
  417ba9:	push   esi
  417baa:	fcomp  QWORD PTR ds:0x1aa99811
  417bb0:	cmp    DWORD PTR [ecx+0x6b],eax
  417bb3:	add    eax,0x8f565f06
  417bb8:	pop    ebp
  417bb9:	sub    eax,0x3ed0c499
  417bbe:	push   ebx
  417bbf:	(bad)  
  417bc0:	inc    esp
  417bc1:	inc    DWORD PTR [eax]
  417bc3:	inc    ebx
  417bc4:	sub    bh,BYTE PTR [eax+0x4]
  417bc7:	push   es
  417bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bc9:	loopne 0x417bff
  417bcb:	test   ah,0x99
  417bce:	xchg   edi,eax
  417bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bd0:	pop    es
  417bd1:	cmp    eax,0xa3e18122
  417bd6:	pop    ecx
  417bd7:	pop    ss
  417bd8:	data16 add BYTE PTR [edi],cl
  417bdb:	imul   eax,DWORD PTR ds:0xf4022035,0x9e96635
  417be5:	xchg   edi,eax
  417be6:	mov    ebp,0x20ca9183
  417beb:	xchg   BYTE PTR [edi],al
  417bed:	in     al,0x46
  417bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bf0:	ja     0x417c54
  417bf2:	mov    ebp,0x7edde3a9
  417bf7:	mov    ebx,cs
  417bf9:	and    ch,BYTE PTR [esi-0x72b7d661]
  417bff:	sub    al,0xfa
  417c01:	mov    ds:0x7b28a104,eax
  417c06:	sbb    eax,0xef5ff675
  417c0b:	mov    ds,WORD PTR [eax+0x22544011]
  417c11:	int3   
  417c12:	mov    ds:0x8c5f44e5,al
  417c17:	outs   dx,BYTE PTR ds:[esi]
  417c18:	popf   
  417c19:	outs   dx,DWORD PTR ds:[esi]
  417c1a:	jle    0x417c11
  417c1c:	mov    edi,0x8c933262
  417c21:	jmp    0x417bb9
  417c23:	push   ss
  417c24:	das    
  417c25:	sbb    esp,esp
  417c27:	scas   eax,DWORD PTR es:[edi]
  417c28:	loope  0x417c8a
  417c2a:	(bad)  
  417c2b:	in     al,dx
  417c2c:	jp     0x417bc5
  417c2e:	in     al,dx
  417c2f:	xor    eax,0x98c71ec4
  417c34:	jnp    0x417c99
  417c36:	in     al,dx
  417c37:	cld    
  417c38:	mov    cl,0xed
  417c3a:	mov    esi,0xbf554611
  417c3f:	inc    ebp
  417c40:	sar    BYTE PTR [edi+eax*1+0x1f],cl
  417c44:	in     eax,dx
  417c45:	adc    al,ah
  417c47:	test   al,0x35
  417c49:	in     al,0xed
  417c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c4c:	or     BYTE PTR [ecx+0x4d],cl
  417c4f:	push   0x98c2827d
  417c54:	sub    BYTE PTR [esi+0x15],0x0
  417c58:	mov    ebp,0x6d8f5dae
  417c5d:	dec    edx
  417c5e:	loop   0x417c12
  417c60:	jle    0x417c4a
  417c62:	pop    ebp
  417c63:	clc    
  417c64:	jle    0x417cd8
  417c66:	pop    ds
  417c67:	(bad)  [ecx+edx*4-0x6e]
  417c6b:	inc    edi
  417c6c:	sub    ebp,DWORD PTR [ebx+ebx*8+0x4454193b]
  417c73:	mov    BYTE PTR [ebx],bh
  417c75:	pop    edi
  417c76:	scas   eax,DWORD PTR es:[edi]
  417c77:	mov    esp,0x14c5a6da
  417c7c:	xor    al,0x5
  417c7e:	push   esp
  417c7f:	push   es
  417c80:	pop    ecx
  417c81:	aas    
  417c82:	lds    eax,FWORD PTR [ebx-0x403c61f2]
  417c88:	lods   al,BYTE PTR ds:[esi]
  417c89:	lea    esp,[esi-0x3fdf6f7b]
  417c8f:	fld    TBYTE PTR [eax]
  417c91:	jge    0x417d07
  417c93:	shl    DWORD PTR [eax+0x65],1
  417c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c97:	shl    DWORD PTR [ebp+0xb1a9deb],1
  417c9d:	sub    eax,0x4352a17
  417ca2:	jecxz  0x417cd2
  417ca4:	cdq    
  417ca5:	loopne 0x417ccf
  417ca7:	push   ebp
  417ca8:	add    ch,BYTE PTR [esi+0x64]
  417cab:	push   edx
  417cac:	les    eax,FWORD PTR [edx-0x2b]
  417caf:	add    esi,DWORD PTR [edx+0x2]
  417cb2:	pop    ecx
  417cb3:	cmp    DWORD PTR [ecx+0x1b],esp
  417cb6:	cmp    BYTE PTR [esi+0x41f79f73],al
  417cbc:	mov    eax,0xe8e46ee6
  417cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cc2:	mov    ecx,0xdc03113c
  417cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cc8:	push   edi
  417cc9:	sbb    ch,bl
  417ccb:	pusha  
  417ccc:	cmp    DWORD PTR [esp+ebp*4],ebx
  417ccf:	shr    esi,1
  417cd1:	mov    bh,cl
  417cd3:	retf   0x48d8
  417cd6:	mov    edx,0x8db8b623
  417cdb:	xor    al,0xfc
  417cdd:	jmp    0x822f87d2
  417ce2:	fsub   DWORD PTR [eax-0x2a]
  417ce5:	mov    ebp,ss
  417ce7:	cs inc esp
  417ce9:	retf   
  417cea:	inc    eax
  417ceb:	or     al,0x8f
  417ced:	int3   
  417cee:	call   0xc0e3:0xa1f2b53e
  417cf5:	inc    eax
  417cf6:	or     edi,DWORD PTR [ebx]
  417cf8:	mov    DWORD PTR [edx],edi
  417cfa:	mov    ch,0x67
  417cfc:	pop    es
  417cfd:	clc    
  417cfe:	cdq    
  417cff:	xchg   ecx,ebx
  417d01:	(bad)  
  417d02:	shr    DWORD PTR [esi+ecx*4+0x3a27e0fc],1
  417d09:	sbb    DWORD PTR [ebx-0x44],0xfffffff4
  417d0d:	mov    ebx,0x37d641e4
  417d12:	(bad)  
  417d13:	or     BYTE PTR [edi-0x21a32e03],ch
  417d19:	cmp    ch,BYTE PTR [ecx]
  417d1b:	or     ecx,ecx
  417d1d:	adc    ebp,0x1fc050f9
  417d23:	dec    esp
  417d24:	sub    BYTE PTR [esi-0x549dd9e3],0xf7
  417d2b:	jp     0x417cc4
  417d2d:	mov    edx,0xeee794da
  417d32:	adc    eax,0xbac335
  417d37:	pop    esp
  417d38:	mov    ch,0x47
  417d3a:	call   0x9702:0x91bb16be
  417d41:	ja     0x417d22
  417d43:	or     BYTE PTR [ecx+edx*1-0x23],ch
  417d47:	pop    ebp
  417d48:	mov    edx,0xec0566e2
  417d4d:	cdq    
  417d4e:	mov    cl,ah
  417d50:	gs in  eax,0xcf
  417d53:	mov    ah,0xee
  417d55:	scas   eax,DWORD PTR es:[edi]
  417d56:	xchg   edx,eax
  417d57:	adc    al,0x8f
  417d59:	sub    eax,0x370cd603
  417d5e:	pop    ds
  417d5f:	cmp    eax,0xd2fe2a79
  417d64:	mov    ah,0xe2
  417d66:	ror    BYTE PTR [edx],1
  417d68:	test   eax,0x436d0378
  417d6d:	or     eax,0xd4602ffe
  417d72:	lds    ecx,FWORD PTR [ecx+0x4d8d051f]
  417d78:	xor    eax,0xa15be4c
  417d7d:	sbb    eax,0x2cd5c892
  417d82:	push   0x65ef9c54
  417d87:	xchg   edx,ecx
  417d89:	dec    ebp
  417d8a:	das    
  417d8b:	mov    esp,0x2d8007b6
  417d90:	xchg   esp,eax
  417d91:	pop    ss
  417d92:	push   ecx
  417d93:	pop    ebx
  417d94:	popf   
  417d95:	cmc    
  417d96:	in     eax,0xbf
  417d98:	cmp    eax,0x559af99f
  417d9d:	xlat   BYTE PTR ds:[ebx]
  417d9e:	xor    eax,0x529d8a7
  417da3:	popf   
  417da4:	int3   
  417da5:	cmp    DWORD PTR [esp+ebp*1-0x6b],esp
  417da9:	push   ebx
  417daa:	sbb    al,0x74
  417dac:	push   esp
  417dad:	xchg   edi,eax
  417dae:	nop
  417daf:	pop    ss
  417db0:	sub    ebp,DWORD PTR [ecx+0x1c]
  417db3:	(bad)  
  417db4:	push   ecx
  417db5:	nop
  417db6:	std    
  417db7:	or     eax,0x39f36177
  417dbc:	jle    0x417d81
  417dbe:	call   0x71eb80c2
  417dc3:	mov    eax,0xdd008552
  417dc8:	push   ecx
  417dc9:	lods   eax,DWORD PTR ds:[esi]
  417dca:	adc    DWORD PTR fs:[esi-0x2f6de3],esi
  417dd1:	push   edx
  417dd2:	xor    edx,DWORD PTR [eax]
  417dd4:	jg     0x417d61
  417dd6:	fcmove st,st(2)
  417dd8:	cmp    dh,BYTE PTR [edx*2-0x3dcd742c]
  417ddf:	pop    ebp
  417de0:	sub    al,0x3
  417de2:	mov    dh,0x18
  417de4:	mov    esp,0x2b99dc1b
  417de9:	leave  
  417dea:	cmp    dl,BYTE PTR [ebp+0x27]
  417ded:	sub    BYTE PTR [edx],al
  417def:	stc    
  417df0:	aam    0x1f
  417df2:	jno    0x417e44
  417df4:	inc    esp
  417df5:	imul   ebx,DWORD PTR [ecx+0x5143c632],0xffffff8c
  417dfc:	adc    cl,dl
  417dfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dff:	sbb    eax,0xc2509ff9
  417e04:	(bad)  
  417e05:	div    DWORD PTR [ebx+eiz*4-0x6faaf2c3]
  417e0c:	jecxz  0x417e6b
  417e0e:	aam    0x3e
  417e10:	loopne 0x417e2c
  417e12:	fcomp  DWORD PTR [eax]
  417e14:	xchg   ebp,eax
  417e15:	or     al,0x1e
  417e17:	mov    dh,0x4
  417e19:	cmp    edi,DWORD PTR [edi+ebp*2-0x720e72e9]
  417e20:	ds xchg ecx,eax
  417e22:	xor    ah,BYTE PTR [esi+0x56]
  417e25:	out    dx,al
  417e26:	jmp    0x2f2eee34
  417e2b:	loop   0x417e04
  417e2d:	mov    al,0x96
  417e2f:	test   BYTE PTR [eax+0x31],dl
  417e32:	mov    al,ds:0xe9870e75
  417e37:	cs fs mov bl,0x2c
  417e3b:	in     eax,dx
  417e3c:	test   al,0xc8
  417e3e:	xor    bh,BYTE PTR [ebx+0x5c6a5458]
  417e44:	dec    esi
  417e45:	mov    ds:0x2637adc,al
  417e4a:	imul   edx,DWORD PTR [ecx+0x12],0xb5e2d08d
  417e51:	fiadd  DWORD PTR [ecx+0x26140352]
  417e57:	jmp    0x1792:0xf382183d
  417e5e:	xlat   BYTE PTR ds:[ebx]
  417e5f:	push   cs
  417e60:	xchg   BYTE PTR [edi+0x2a74dd8],dl
  417e66:	push   es
  417e67:	mov    eax,0xd16bb5d7
  417e6c:	rcr    DWORD PTR [ecx],0x24
  417e6f:	aas    
  417e70:	ins    DWORD PTR es:[edi],dx
  417e71:	push   0xf1f3d5ca
  417e76:	shr    DWORD PTR [edx-0x2c],1
  417e79:	xchg   DWORD PTR [ebx-0x7e1297b1],edx
  417e7f:	cli    
  417e80:	je     0x417ec3
  417e82:	mov    ebx,0x1475611e
  417e87:	das    
  417e88:	out    dx,eax
  417e89:	mul    ebp
  417e8b:	mov    ?,esi
  417e8d:	inc    esp
  417e8e:	push   0xffffffff
  417e90:	clc    
  417e91:	ror    DWORD PTR [edi-0x70cfa17],0x10
  417e98:	mov    ebx,0x59c2e900
  417e9d:	add    bh,al
  417e9f:	mov    ecx,0x1fcb0a87
  417ea4:	mov    ds:0x9326c986,al
  417ea9:	adc    al,0x9b
  417eab:	imul   ebx,DWORD PTR ds:[esp+eiz*2-0x473f9f99],0x2d
  417eb4:	into   
  417eb5:	jo     0x417e3d
  417eb7:	popa   
  417eb8:	stos   BYTE PTR es:[edi],al
  417eb9:	lock pop edx
  417ebb:	or     BYTE PTR [ecx-0x11],dl
  417ebe:	das    
  417ebf:	ss mov ah,0x3c
  417ec2:	inc    edx
  417ec3:	mov    al,ds:0xdf986b50
  417ec8:	xchg   esp,eax
  417ec9:	and    ecx,ebx
  417ecb:	int    0xd9
  417ecd:	ins    DWORD PTR es:[edi],dx
  417ece:	jbe    0x417f14
  417ed0:	adc    DWORD PTR [edi+0x34541fbb],ebx
  417ed6:	in     al,0x6c
  417ed8:	std    
  417ed9:	in     al,0x88
  417edb:	mov    esp,0xde6b0108
  417ee0:	sub    ch,BYTE PTR [esi]
  417ee2:	sub    ebp,0xb7673f9b
  417ee8:	jp     0x417e9b
  417eea:	fistp  QWORD PTR [edx+eiz*1+0x62049446]
  417ef1:	je     0x417f0c
  417ef3:	and    ecx,DWORD PTR [ebx+eax*2+0x4e]
  417ef7:	(bad)  
  417ef8:	sbb    ebp,ecx
  417efa:	imul   ebx,DWORD PTR [edi+ebx*2],0xffffffef
  417efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eff:	in     eax,dx
  417f00:	xor    cl,cl
  417f02:	sub    DWORD PTR [ebx-0x41],esi
  417f05:	cmp    dl,ch
  417f07:	fcom   DWORD PTR [ebp-0x13458f11]
  417f0d:	scas   al,BYTE PTR es:[edi]
  417f0e:	or     esp,DWORD PTR [ebp+0x7e]
  417f11:	adc    eax,0x3f91bf83
  417f16:	push   eax
  417f17:	jmp    0x878f:0xf547055
  417f1e:	je     0x417f3b
  417f20:	mov    ebx,0x912ed17f
  417f25:	dec    ecx
  417f26:	mov    bh,0x2b
  417f28:	mov    eax,0xb1ab2e78
  417f2d:	les    ebp,FWORD PTR [edx-0x70dd15cf]
  417f33:	fisubr DWORD PTR [edi+0x47]
  417f36:	add    edx,DWORD PTR [ebx+0x6e]
  417f39:	stc    
  417f3a:	leave  
  417f3b:	into   
  417f3c:	shr    DWORD PTR [ebp-0x38],0x3e
  417f40:	ret    0x1cb5
  417f43:	cwde   
  417f44:	jno    0x417eee
  417f46:	mov    bl,0xa3
  417f48:	adc    esi,DWORD PTR [esp+edx*2]
  417f4b:	sbb    BYTE PTR [eax],al
  417f4d:	inc    ebp
  417f4e:	sub    eax,0xde81b6e
  417f53:	mul    BYTE PTR [ecx+eax*1+0x19]
  417f57:	loopne 0x417f2a
  417f59:	mov    eax,ds:0xaadb0c96
  417f5e:	inc    ebp
  417f5f:	push   ebx
  417f60:	dec    ebp
  417f61:	imul   ecx,DWORD PTR ds:0xb06b3fa3,0x2f
  417f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f69:	push   ebp
  417f6a:	shr    DWORD PTR [ecx],cl
  417f6c:	lods   eax,DWORD PTR ds:[esi]
  417f6d:	or     eax,0x2dd0ad21
  417f72:	push   esi
  417f73:	mov    ds:0x1fe83a81,eax
  417f78:	aad    0xbc
  417f7a:	in     al,0x65
  417f7c:	jmp    0x417feb
  417f7e:	int3   
  417f7f:	jb     0x417fd3
  417f81:	xchg   esp,eax
  417f82:	stos   DWORD PTR es:[edi],eax
  417f83:	inc    esi
  417f84:	push   esp
  417f85:	push   ebp
  417f86:	fidivr WORD PTR ds:0xc53e986f
  417f8c:	out    dx,al
  417f8d:	cld    
  417f8e:	out    dx,eax
  417f8f:	cld    
  417f90:	push   edx
  417f91:	push   ecx
  417f92:	fdivr  st(7),st
  417f94:	cmp    bl,dh
  417f96:	stos   BYTE PTR es:[edi],al
  417f97:	fdiv   QWORD PTR [edx+edi*8-0x795fc9b5]
  417f9e:	xchg   ebp,eax
  417f9f:	ins    DWORD PTR es:[edi],dx
  417fa0:	sub    edx,DWORD PTR [edi+edx*4]
  417fa3:	mov    esi,0x4e9f865
  417fa8:	cld    
  417fa9:	out    0xb3,al
  417fab:	jns    0x417fed
  417fad:	mov    ebp,0x10a50e9f
  417fb2:	(bad)  
  417fb3:	jmp    0x541ec139
  417fb8:	shl    ah,cl
  417fba:	in     eax,0x72
  417fbc:	addr16 push ds
  417fbe:	add    DWORD PTR [ebx],edx
  417fc0:	ret    0x4000
  417fc3:	(bad)  
  417fc4:	mov    dh,0x93
  417fc6:	cmp    esi,eax
  417fc8:	shl    DWORD PTR [ebp+edi*4-0xa636f84],cl
  417fcf:	lods   al,BYTE PTR ds:[esi]
  417fd0:	sahf   
  417fd1:	sbb    ah,cl
  417fd3:	bound  esi,QWORD PTR [ecx]
  417fd5:	mov    edi,0x9c7f3ee2
  417fda:	adc    DWORD PTR [ebx-0x43],ebp
  417fdd:	jge    0x418020
  417fdf:	stc    
  417fe0:	xchg   DWORD PTR [ebp-0x2e],ebp
  417fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fe4:	push   ss
  417fe5:	dec    edi
  417fe6:	in     eax,dx
  417fe7:	or     ch,0xa6
  417fea:	sub    BYTE PTR [eax-0x19],ah
  417fed:	xor    cl,BYTE PTR [ebx+ebp*8-0x2fde0673]
  417ff4:	adc    ecx,edx
  417ff6:	mov    al,ds:0xbc6ee5c0
  417ffb:	test   al,0x16
  417ffd:	and    eax,0x2f0c4a2e
  418002:	xchg   edi,eax
  418003:	and    BYTE PTR [esi+eax*2+0x2b],ch
  418007:	loopne 0x418062
  418009:	sbb    DWORD PTR [eax-0x2f8f4c4],edx
  41800f:	ror    BYTE PTR [eax+0xd7497bb],cl
  418015:	fs mov esi,0x3bab208f
  41801b:	pop    ds
  41801c:	sbb    esp,esp
  41801e:	xchg   dl,cl
  418020:	jle    0x417fc4
  418022:	xchg   ecx,eax
  418023:	xor    ah,BYTE PTR [esi]
  418025:	add    BYTE PTR [edi-0x538db855],al
  41802b:	aaa    
  41802c:	mov    DWORD PTR [edx+esi*4-0x1c],eax
  418030:	xchg   edi,eax
  418031:	test   eax,0xccda45d5
  418036:	daa    
  418037:	xchg   esp,eax
  418038:	and    DWORD PTR [edi],ebp
  41803a:	pop    edi
  41803b:	cdq    
  41803c:	push   ebx
  41803d:	div    DWORD PTR [ebp-0x71]
  418040:	aaa    
  418041:	xchg   ebp,eax
  418042:	mov    bh,0xe9
  418044:	popa   
  418045:	ror    DWORD PTR cs:[eax-0x57a6d971],0x1e
  41804d:	xor    BYTE PTR [edx+0x47],cl
  418050:	shl    BYTE PTR [ebp+0x1d],1
  418053:	iret   
  418054:	imul   esp,DWORD PTR [ecx-0x47e2ac70],0x27
  41805b:	retf   0xb980
  41805e:	test   al,0x70
  418060:	(bad)  
  418061:	retf   0x8d29
  418064:	(bad)  
  418065:	out    0xe3,al
  418067:	push   ecx
  418068:	cmp    esp,DWORD PTR [edx]
  41806a:	and    ebx,DWORD PTR [ebx-0x67]
  41806d:	xor    ebp,edi
  41806f:	push   es
  418070:	add    eax,0x6d1f59b0
  418075:	pop    eax
  418076:	sar    BYTE PTR [ebx+0x55],1
  418079:	call   0x7339:0x4eb2b531
  418080:	shl    BYTE PTR [ecx],cl
  418082:	test   dh,ah
  418084:	mov    edx,0xe0238363
  418089:	cwde   
  41808a:	add    BYTE PTR [ecx+0x726f6a16],0x30
  418091:	pusha  
  418092:	jecxz  0x41810f
  418094:	mov    eax,0x9314f7aa
  418099:	mov    esp,0x5a5744ff
  41809e:	mov    ebp,0xb5824249
  4180a3:	mov    edi,0x8a989a4e
  4180a8:	loop   0x418072
  4180aa:	add    eax,0xbe41b58e
  4180af:	ja     0x418048
  4180b1:	add    ecx,ebx
  4180b3:	(bad)  
  4180b4:	sub    DWORD PTR ds:0x17f3adb6,esp
  4180ba:	js     0x41806a
  4180bc:	dec    edi
  4180bd:	mov    esp,0x673f1493
  4180c2:	xchg   BYTE PTR [edi],ah
  4180c4:	sar    BYTE PTR [ebx-0x68],0x83
  4180c8:	fistp  DWORD PTR [edi-0x67]
  4180cb:	pop    esi
  4180cc:	and    esp,DWORD PTR [ebx+eax*8]
  4180cf:	ret    
  4180d0:	stos   DWORD PTR es:[edi],eax
  4180d1:	pop    esi
  4180d2:	mov    cl,0xa8
  4180d4:	or     al,0xba
  4180d6:	out    0xf0,al
  4180d8:	jmp    0xf7f7b8f0
  4180dd:	and    cl,BYTE PTR [ebp+0x7e8a023]
  4180e3:	inc    ebx
  4180e4:	inc    ch
  4180e6:	repz adc cl,BYTE PTR [ebx-0x5bbb6ca5]
  4180ed:	jecxz  0x41807a
  4180ef:	mov    bh,bh
  4180f1:	out    dx,al
  4180f2:	sub    al,0x49
  4180f4:	pop    ebp
  4180f5:	sti    
  4180f6:	ficom  WORD PTR [edx-0x67a4935b]
  4180fc:	xor    al,0xa7
  4180fe:	mov    cl,0x7e
  418100:	inc    esi
  418101:	push   edi
  418102:	sub    eax,0x4ec4b95
  418107:	or     eax,0xa34c6b02
  41810c:	nop
  41810d:	iret   
  41810e:	outs   dx,DWORD PTR ds:[esi]
  41810f:	mov    ds:0xc30ddb59,eax
  418114:	outs   dx,DWORD PTR ds:[esi]
  418115:	cld    
  418116:	and    DWORD PTR [ebp-0x18],ebx
  418119:	pop    ds
  41811a:	mov    dh,0xbd
  41811c:	cmc    
  41811d:	jecxz  0x418191
  41811f:	add    al,0xd0
  418121:	adc    bl,BYTE PTR [esi+ebx*8]
  418124:	inc    edx
  418125:	mov    ecx,0x8c9fc98b
  41812a:	adc    edi,ebp
  41812c:	jmp    0x78a6:0x38013dca
  418133:	cmp    eax,0x3f9e92af
  418138:	mov    ecx,0x708f82b9
  41813d:	pavgw  mm1,mm2
  418140:	mov    ch,0xfb
  418142:	xlat   BYTE PTR ds:[ebx]
  418143:	int3   
  418144:	cmc    
  418145:	adc    al,0xa1
  418147:	mov    ds:0xf8bb97f1,al
  41814c:	fwait
  41814d:	add    eax,0xf7d5f038
  418152:	ret    0xce63
  418155:	mov    esp,0x226045cb
  41815a:	inc    ebp
  41815b:	pushf  
  41815c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41815d:	jecxz  0x418119
  41815f:	add    al,0x41
  418161:	push   esi
  418162:	(bad)  
  418163:	leave  
  418164:	out    dx,al
  418165:	jp     0x4181d5
  418167:	dec    ecx
  418168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418169:	cmc    
  41816a:	in     al,0xfd
  41816c:	mov    cl,0x20
  41816e:	mov    dl,ah
  418170:	sbb    BYTE PTR [ebx+eiz*1],ch
  418173:	adc    BYTE PTR [esp+edi*4+0x6dac817b],bh
  41817a:	jp     0x418118
  41817c:	adc    BYTE PTR ds:0x844c75a1,bh
  418182:	call   0x9394d59f
  418187:	and    al,0x6b
  418189:	xor    al,0x48
  41818b:	mov    ds,WORD PTR [esi+0x59b9699e]
  418191:	push   ds
  418192:	scas   al,BYTE PTR es:[edi]
  418193:	mov    al,cs:0x83d4dfe3
  418199:	pop    ecx
  41819a:	test   al,0x4e
  41819c:	mov    ebp,edi
  41819e:	xor    ebx,DWORD PTR [eax+edi*1]
  4181a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181a2:	icebp  
  4181a3:	das    
  4181a4:	sub    BYTE PTR gs:[ecx],0x8a
  4181a8:	fisttp WORD PTR [esp+edi*4-0x2365a6d2]
  4181af:	cmp    BYTE PTR [ebx+ebp*8+0xf],ch
  4181b3:	imul   ebp,DWORD PTR [eax+edx*1+0x1786d910],0xb0abb090
  4181be:	pop    es
  4181bf:	fxch   st(7)
  4181c1:	call   0xc94f22b6
  4181c6:	jnp    0x418154
  4181c8:	jo     0x4181b5
  4181ca:	jo     0x41818d
  4181cc:	loopne 0x4181da
  4181ce:	call   ecx
  4181d0:	dec    eax
  4181d1:	fdiv   st,st(5)
  4181d3:	jl     0x4181dd
  4181d5:	adc    ah,BYTE PTR [ecx+0x75219bf7]
  4181db:	xor    eax,0x766c89f5
  4181e0:	std    
  4181e1:	aam    0xe6
  4181e3:	jp     0x418177
  4181e5:	pusha  
  4181e6:	jae    0x418172
  4181e8:	xchg   ebp,eax
  4181e9:	xchg   esp,eax
  4181ea:	call   0x50dd3c1c
  4181ef:	in     eax,dx
  4181f0:	mov    DWORD PTR [ecx],ebp
  4181f2:	adc    eax,0x227d0566
  4181f7:	ins    DWORD PTR es:[edi],dx
  4181f8:	mov    edi,0x9283749e
  4181fd:	adc    esp,DWORD PTR [ebp+0x18]
  418200:	ins    BYTE PTR es:[edi],dx
  418201:	test   BYTE PTR [edi+0x5fd57340],bl
  418207:	aaa    
  418208:	ss mov edx,0x909e193a
  41820e:	add    DWORD PTR [ecx],ebp
  418210:	push   eax
  418211:	mov    dl,0x13
  418213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418214:	into   
  418215:	mov    fs,WORD PTR [ebx-0x71]
  418218:	mov    cl,0xbb
  41821a:	pop    edi
  41821b:	or     al,0x2b
  41821d:	imul   esi,esp,0xade9cfdc
  418223:	scas   eax,DWORD PTR es:[edi]
  418224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418225:	shr    DWORD PTR [ebx-0x393e2aa1],cl
  41822b:	pop    edi
  41822c:	inc    esi
  41822d:	jg     0x41828b
  41822f:	mov    edx,0x74a68ec4
  418234:	loop   0x418252
  418236:	nop
  418237:	dec    esi
  418238:	or     al,dl
  41823a:	sahf   
  41823b:	add    ah,BYTE PTR [esi-0x24]
  41823e:	dec    edi
  41823f:	push   ds
  418240:	sbb    DWORD PTR [ebx],edx
  418242:	xchg   edx,eax
  418243:	rcr    ch,1
  418245:	les    eax,FWORD PTR [ebp+0x2cb96fc3]
  41824b:	adc    eax,eax
  41824d:	daa    
  41824e:	sub    ch,BYTE PTR [ebx-0x6a]
  418251:	addr16 push edi
  418253:	out    dx,eax
  418254:	ja     0x4182b6
  418256:	sub    bl,BYTE PTR [eax-0x3a]
  418259:	pop    es
  41825a:	test   eax,0xaf9eb44a
  41825f:	jmp    0x4182c2
  418261:	dec    esp
  418262:	inc    ecx
  418263:	in     eax,dx
  418264:	test   DWORD PTR [ecx-0x4c],ebx
  418267:	jne    0x4182cf
  418269:	rcr    DWORD PTR [esi+0x52],cl
  41826c:	repnz int3 
  41826e:	popf   
  41826f:	dec    BYTE PTR [edx-0x4d]
  418272:	mov    dl,0x9e
  418274:	mov    BYTE PTR [ebp*1-0x4e89f6c],0x8f
  41827c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41827d:	cs pop edx
  41827f:	or     DWORD PTR [ecx+eax*4+0x3a300216],edi
  418286:	gs je  0x4182a4
  418289:	push   es
  41828a:	stos   DWORD PTR es:[edi],eax
  41828b:	sti    
  41828c:	fimul  DWORD PTR [bp+di-0x4c]
  418290:	int    0x34
  418292:	xor    al,0xae
  418294:	loopne 0x418289
  418296:	test   DWORD PTR ds:0x41c78c9,ecx
  41829c:	xchg   edi,eax
  41829d:	or     al,0xf1
  41829f:	std    
  4182a0:	frstor [edi-0x53809bdb]
  4182a6:	jp     0x4182e3
  4182a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182a9:	pop    esp
  4182aa:	mov    ebx,0xc4963f6a
  4182af:	aaa    
  4182b0:	test   eax,0xcb54643e
  4182b5:	and    cl,ch
  4182b7:	adc    al,0xf3
  4182b9:	push   ecx
  4182ba:	jp     0x418269
  4182bc:	pop    ss
  4182bd:	xlat   BYTE PTR ds:[ebx]
  4182be:	sbb    eax,0x87145ef
  4182c3:	xor    eax,0x4ac9d543
  4182c8:	push   esp
  4182c9:	(bad)  
  4182ca:	jns    0x41832b
  4182cc:	sub    BYTE PTR ds:0x2ba9893b,bl
  4182d2:	jae    0x4182f1
  4182d4:	fsubr  QWORD PTR [ecx+0x10337eee]
  4182da:	pop    esi
  4182db:	scas   al,BYTE PTR es:[edi]
  4182dc:	xchg   ecx,eax
  4182dd:	retf   
  4182de:	in     eax,0xe2
  4182e0:	sar    dh,cl
  4182e2:	dec    ebx
  4182e3:	mov    cl,0x48
  4182e5:	cmp    bl,dl
  4182e7:	scas   eax,DWORD PTR es:[edi]
  4182e8:	je     0x418317
  4182ea:	les    edi,FWORD PTR [edx]
  4182ec:	mov    ebp,0xce693b02
  4182f1:	(bad)  
  4182f2:	dec    esp
  4182f3:	std    
  4182f4:	push   0x2f
  4182f6:	push   es
  4182f7:	push   ebp
  4182f8:	and    DWORD PTR [eax-0x20],esp
  4182fb:	(bad)  
  4182fc:	popf   
  4182fd:	(bad)  [edi-0x553e940]
  418303:	loop   0x4182e8
  418305:	pop    ss
  418306:	popf   
  418307:	dec    esi
  418308:	mov    ebx,0xf973d76
  41830d:	cmp    DWORD PTR [ecx+0xab3ad11],edx
  418313:	sahf   
  418314:	sub    al,0xb2
  418316:	les    edi,FWORD PTR [ebx+0x1c]
  418319:	pop    ecx
  41831a:	jl     0x41834c
  41831c:	mov    dh,0xed
  41831e:	lock sahf 
  418320:	(bad)  
  418322:	repnz inc ebp
  418324:	or     DWORD PTR [ecx+eax*8+0x68eed86f],edi
  41832b:	pop    ebx
  41832c:	adc    DWORD PTR [esi],ecx
  41832e:	add    eax,0xf0fa74ea
  418333:	call   0x61226546
  418338:	mov    ebp,DWORD PTR [ecx]
  41833a:	les    esi,FWORD PTR [ebp-0x56]
  41833d:	inc    esp
  41833e:	out    dx,eax
  41833f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418340:	and    ebx,DWORD PTR [ecx+esi*4]
  418343:	cli    
  418344:	rcr    DWORD PTR [ecx],1
  418346:	jae    0x418362
  418348:	sti    
  418349:	xor    al,0xb8
  41834b:	cmp    eax,0x36231d93
  418350:	xchg   ebx,eax
  418351:	xchg   DWORD PTR [ebp+0x11],ebx
  418354:	pop    esp
  418355:	mov    BYTE PTR [edx+0x4fbd7ac8],0x40
  41835c:	pop    esp
  41835d:	mov    ebp,DWORD PTR [ebp-0x1f]
  418360:	pop    ebx
  418361:	adc    ah,dl
  418363:	iret   
  418364:	inc    ebx
  418365:	in     al,dx
  418366:	xchg   edx,eax
  418367:	fsubr  QWORD PTR [ebx]
  418369:	mov    WORD PTR [edx],?
  41836b:	push   edi
  41836c:	iret   
  41836d:	and    ebp,DWORD PTR [edx+0xe]
  418370:	aad    0xcd
  418372:	sbb    ebp,eax
  418374:	popa   
  418375:	add    esp,eax
  418377:	cmp    DWORD PTR [ebx+edx*1-0x56bbb664],eax
  41837e:	cmp    al,0x9b
  418380:	or     al,ch
  418382:	shl    DWORD PTR [edi+0x27],1
  418385:	xor    DWORD PTR [esi-0x470e7af1],ebp
  41838b:	(bad)  
  41838c:	dec    DWORD PTR [ebx-0x6b750bab]
  418392:	adc    eax,0xffffff64
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	jns    0x41848e
  41848d:	int    0x93
  41848f:	int3   
  418490:	xor    BYTE PTR [ebp+0x7c],bh
  418493:	inc    eax
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	ja     0x418495
  418499:	call   0xa924:0x296c73cd
  4184a0:	mov    al,ds:0x6c16c028
  4184a5:	cli    
  4184a6:	mov    ds:0xb763b1a0,al
  4184ab:	mov    ds:0xc308b14e,eax
  4184b0:	sub    esp,edx
  4184b2:	repz sbb BYTE PTR ds:0x437a03e3,0xc0
  4184ba:	mov    eax,0xae87abb5
  4184bf:	sub    ch,dl
  4184c1:	out    0xa8,eax
  4184c3:	out    dx,eax
  4184c4:	sub    bh,BYTE PTR [ecx-0x2894a6e8]
  4184ca:	pop    esp
  4184cb:	push   0x78
  4184cd:	sahf   
  4184ce:	inc    ecx
  4184cf:	fld    TBYTE PTR [eax+0x74454d95]
  4184d5:	dec    ebp
  4184d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184d7:	hlt    
  4184d8:	fwait
  4184d9:	in     eax,0x84
  4184db:	outs   dx,BYTE PTR ds:[esi]
  4184dc:	fimul  DWORD PTR [edi]
  4184de:	aam    0x67
  4184e0:	sub    BYTE PTR [edi+0x302f06d5],bh
  4184e6:	outs   dx,DWORD PTR ds:[esi]
  4184e7:	aam    0x6
  4184e9:	stos   DWORD PTR es:[edi],eax
  4184ea:	jnp    0x4184da
  4184ec:	mov    dl,BYTE PTR [eax+eax*8]
  4184ef:	push   edi
  4184f0:	iret   
  4184f1:	ret    0xef9
  4184f4:	inc    edx
  4184f5:	ja     0x41852e
  4184f7:	scas   al,BYTE PTR es:[edi]
  4184f8:	sub    ebp,DWORD PTR [ebx+0x7a]
  4184fb:	jmp    0xbe24:0xc8124278
  418502:	adc    al,BYTE PTR [eax+0x60fbe227]
  418508:	scas   eax,DWORD PTR es:[edi]
  418509:	(bad)  
  41850a:	lock ds sbb eax,0x1c31d360
  418511:	std    
  418512:	fisub  DWORD PTR [esi]
  418514:	das    
  418515:	or     BYTE PTR [ecx+esi*4],al
  418518:	in     eax,0xa2
  41851a:	mov    al,0x30
  41851c:	in     al,dx
  41851d:	loop   0x4184bc
  41851f:	inc    edx
  418520:	dec    esp
  418521:	in     al,dx
  418522:	or     BYTE PTR [ebx],ah
  418524:	sbb    al,0xa5
  418526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418527:	push   0xc762098
  41852c:	arpl   WORD PTR [edx+0x31],sp
  41852f:	daa    
  418530:	mov    ah,0x45
  418532:	push   cs
  418533:	adc    eax,0x870806d4
  418538:	sub    BYTE PTR [esi],dh
  41853a:	adc    eax,0x2ecb1e29
  41853f:	stc    
  418540:	or     eax,DWORD PTR [eax+0x75]
  418543:	pop    ss
  418544:	cmp    ebx,edi
  418546:	lea    eax,[edx+0x1eb9a67f]
  41854c:	hlt    
  41854d:	sbb    esi,ebp
  41854f:	sub    al,0xb2
  418551:	lahf   
  418552:	jo     0x41851c
  418554:	add    al,0x3e
  418556:	lods   eax,DWORD PTR ds:[esi]
  418557:	test   BYTE PTR [edx+ecx*1+0x2228318a],dl
  41855e:	ins    BYTE PTR es:[edi],dx
  41855f:	jecxz  0x41852f
  418561:	xor    dl,BYTE PTR [ecx-0x60]
  418564:	jecxz  0x418594
  418566:	das    
  418567:	adc    BYTE PTR [ecx],al
  418569:	mov    edx,0xa8d70c78
  41856e:	div    BYTE PTR [ebx]
  418570:	test   BYTE PTR [eax-0x349dd03e],ch
  418576:	data16 int3 
  418578:	mov    ecx,0xe2416b41
  41857d:	jmp    0x41851b
  41857f:	mov    eax,esi
  418581:	ss cmp al,ch
  418584:	fsubr  DWORD PTR [esp+ecx*4+0x5a]
  418588:	into   
  418589:	xchg   bl,dl
  41858b:	lahf   
  41858c:	mov    cl,0xb3
  41858e:	ret    0x1db5
  418591:	std    
  418592:	mov    ebp,0x62eb7eab
  418597:	xchg   ebp,eax
  418598:	fst    st(7)
  41859a:	out    dx,eax
  41859b:	sbb    ebp,DWORD PTR es:[edx+0x3a768996]
  4185a2:	ret    0x5632
  4185a5:	(bad)  
  4185a6:	dec    ebp
  4185a7:	mov    ds:0x5f549e1e,eax
  4185ac:	or     bh,BYTE PTR [esi+0x44]
  4185af:	adc    dl,0xf7
  4185b2:	pushf  
  4185b3:	sub    ch,BYTE PTR [ebp-0x2e]
  4185b6:	pop    DWORD PTR [edx+0x2b1f54b7]
  4185bc:	in     al,0x16
  4185be:	fsubp  st(5),st
  4185c0:	push   ds
  4185c1:	mov    cl,0x80
  4185c3:	dec    ecx
  4185c4:	inc    esi
  4185c5:	push   esi
  4185c6:	pop    ss
  4185c7:	ret    0x5335
  4185ca:	neg    DWORD PTR [ecx+0x2f447cf2]
  4185d0:	push   edi
  4185d1:	cmp    DWORD PTR [edi],ebx
  4185d3:	cdq    
  4185d4:	ins    BYTE PTR es:[edi],dx
  4185d5:	cmp    al,0x26
  4185d7:	pop    DWORD PTR [esi]
  4185d9:	lods   al,BYTE PTR ds:[esi]
  4185da:	imul   ebx,DWORD PTR [esi-0x77027951],0x10cd50e5
  4185e4:	ja     0x4185f3
  4185e6:	sbb    DWORD PTR ds:0x238f7908,0xffffffc3
  4185ed:	scas   al,BYTE PTR es:[edi]
  4185ee:	xor    al,0x83
  4185f0:	and    al,BYTE PTR [ecx-0x34526d65]
  4185f6:	nop
  4185f7:	lahf   
  4185f8:	push   edx
  4185f9:	addr16 (bad) 
  4185fc:	jmp    0x8416:0x653bb18d
  418603:	inc    edx
  418604:	inc    bp
  418606:	les    edx,FWORD PTR [esi-0x63]
  418609:	sahf   
  41860a:	inc    edx
  41860b:	fstp   QWORD PTR [eax+edx*4+0x3497db49]
  418612:	mov    al,0xca
  418614:	inc    edx
  418615:	xor    eax,0x564c90f5
  41861a:	test   eax,0xc2b8395b
  41861f:	mov    ebx,0x2c1409cd
  418624:	dec    esi
  418625:	enter  0xe3c5,0x4c
  418629:	mov    esi,0xec0bda4b
  41862e:	xchg   DWORD PTR [ecx-0x2d68405e],ecx
  418634:	aad    0x75
  418636:	sub    BYTE PTR [ecx+0x3668d24b],bh
  41863c:	inc    ebp
  41863d:	pop    ds
  41863e:	loopne 0x4185cf
  418640:	sbb    eax,0xb769673e
  418645:	std    
  418646:	mov    al,ds:0x89b03d21
  41864b:	ins    DWORD PTR es:[edi],dx
  41864c:	xchg   esi,eax
  41864d:	shl    BYTE PTR [ebp+0x68],1
  418650:	ficomp DWORD PTR [edi+ebx*2-0x28]
  418654:	sar    bh,1
  418656:	push   edx
  418657:	stos   BYTE PTR es:[edi],al
  418658:	xchg   esi,eax
  418659:	inc    eax
  41865a:	jl     0x418656
  41865c:	dec    edx
  41865d:	fisub  WORD PTR [ecx+0x4dea944b]
  418663:	lahf   
  418664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418665:	ds ins DWORD PTR es:[edi],dx
  418667:	mov    dh,0x6
  418669:	mov    DWORD PTR ds:0x486975e1,esp
  41866f:	xchg   ch,ah
  418671:	shl    BYTE PTR ds:0x7a88bcf2,cl
  418677:	test   DWORD PTR [eax+0x2d],ebx
  41867a:	inc    edx
  41867b:	xor    al,0x10
  41867d:	fisttp WORD PTR [edi+0x34]
  418680:	cmp    eax,0x361e12e8
  418685:	int    0xf2
  418687:	mov    al,ds:0x1fc995fe
  41868c:	add    DWORD PTR [edi+0xc],edx
  41868f:	or     eax,0x4c9de1b8
  418694:	inc    ebx
  418695:	and    cl,BYTE PTR [ebp-0x78]
  418698:	add    DWORD PTR [edx+ebx*8-0x6b],0x8c59c6bb
  4186a0:	inc    esp
  4186a1:	mov    ch,0x52
  4186a3:	jle    0x418722
  4186a5:	pop    ecx
  4186a6:	fstp   QWORD PTR [esi+0x61]
  4186a9:	xchg   ebp,eax
  4186aa:	mov    bh,0xeb
  4186ac:	jb     0x418722
  4186ae:	push   0x47
  4186b0:	addr16 cwde 
  4186b2:	movhps xmm3,QWORD PTR [ebx]
  4186b5:	enter  0x7397,0x53
  4186b9:	cwde   
  4186ba:	div    DWORD PTR [edi+ebx*4]
  4186bd:	inc    eax
  4186be:	neg    BYTE PTR [ebx+0x33]
  4186c1:	dec    esi
  4186c2:	loope  0x41868c
  4186c4:	js     0x41864e
  4186c6:	mov    DWORD PTR [edx],esp
  4186c8:	ret    
  4186c9:	dec    ecx
  4186ca:	ret    
  4186cb:	jmp    0x264:0xcff9c0d5
  4186d2:	test   DWORD PTR [ebx+0x3e59434d],esp
  4186d8:	mov    al,ds:0x6ea20940
  4186dd:	xor    BYTE PTR [edi+0x2b],dl
  4186e0:	cmc    
  4186e1:	jno    0x418726
  4186e3:	or     DWORD PTR [edx-0x51],ebp
  4186e6:	dec    ebp
  4186e7:	ret    
  4186e8:	inc    edx
  4186e9:	jl     0x418701
  4186eb:	ja     0x4186fb
  4186ed:	xchg   DWORD PTR [edi],ecx
  4186ef:	inc    edi
  4186f0:	ja     0x418737
  4186f2:	je     0x4186bc
  4186f4:	add    al,0x8a
  4186f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186f7:	or     esi,DWORD PTR [ecx+eax*8-0x2f1e06db]
  4186fe:	and    al,bh
  418700:	or     edi,edx
  418702:	imul   ecx,DWORD PTR [ebx+0x6e924a32],0x12
  418709:	hlt    
  41870a:	pop    esi
  41870b:	dec    ebp
  41870c:	ins    BYTE PTR es:[edi],dx
  41870d:	add    cl,bh
  41870f:	and    eax,ebx
  418711:	cmc    
  418712:	mov    WORD PTR [ebx+0x34],?
  418715:	xchg   ecx,eax
  418716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418717:	int    0xba
  418719:	mul    BYTE PTR [esi-0x441e38f7]
  41871f:	inc    ecx
  418720:	or     eax,0x5f1722a
  418725:	popa   
  418726:	fiadd  DWORD PTR [ebp-0x1e]
  418729:	push   edx
  41872a:	xor    bl,BYTE PTR [edi]
  41872c:	(bad)  [ebp+edi*1+0x78]
  418731:	inc    ecx
  418732:	in     eax,0xb5
  418734:	das    
  418735:	arpl   bx,dx
  418737:	cmp    eax,0x8035de90
  41873c:	stos   BYTE PTR es:[edi],al
  41873d:	pop    esi
  41873e:	rcl    BYTE PTR [ecx-0x6e78b593],1
  418744:	add    ah,BYTE PTR ds:0xef378b76
  41874a:	push   0xdfc4fc7a
  41874f:	das    
  418750:	cvtpi2ps xmm2,QWORD PTR [edx]
  418753:	jne    0x418706
  418755:	pusha  
  418756:	push   0xa56228a6
  41875b:	or     al,0x74
  41875d:	psrad  mm6,QWORD PTR [ebx+0x3d3913b]
  418764:	pop    ebp
  418765:	dec    esi
  418766:	cmp    BYTE PTR [ebp-0x79],dl
  418769:	mov    al,0x23
  41876b:	xor    edi,DWORD PTR [ecx]
  41876d:	push   cs
  41876e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41876f:	(bad)  
  418770:	sbb    ebp,DWORD PTR [esp+edx*8+0x75a18ac7]
  418777:	ret    0x6ed
  41877a:	rol    BYTE PTR [eax-0x33f0ed56],1
  418780:	gs push cs
  418782:	stos   DWORD PTR es:[edi],eax
  418783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418784:	mov    al,0x43
  418786:	cmp    bh,BYTE PTR [esi]
  418788:	or     esi,DWORD PTR [esi-0x45]
  41878b:	aad    0x5f
  41878d:	jle    0x418714
  41878f:	rol    bh,0x25
  418792:	sub    eax,0x530b566c
  418797:	mov    eax,ds:0x1dd36fe6
  41879c:	sub    cl,0x43
  41879f:	jo     0x4187df
  4187a1:	push   0xffffffd8
  4187a3:	stos   DWORD PTR es:[edi],eax
  4187a4:	ror    BYTE PTR ds:0x72ebbbc6,1
  4187aa:	xor    al,0xeb
  4187ac:	mov    BYTE PTR [edx+0x2b],bl
  4187af:	jp     0x418759
  4187b1:	sub    al,0xcb
  4187b3:	bound  edi,QWORD PTR [edi+0x52]
  4187b6:	xchg   esi,eax
  4187b7:	mov    esp,DWORD PTR [esi-0xf]
  4187ba:	fisubr DWORD PTR [edx+0x5e]
  4187bd:	jg     0x4187a3
  4187bf:	test   DWORD PTR [ecx+0x4fc1433c],ebp
  4187c5:	xchg   ebp,eax
  4187c6:	pop    eax
  4187c7:	icebp  
  4187c8:	cmp    ebx,DWORD PTR ds:0x968b6f39
  4187ce:	(bad)  
  4187cf:	pop    eax
  4187d0:	je     0x4187f3
  4187d2:	repnz inc eax
  4187d4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187d6:	xor    al,0xb9
  4187d8:	and    al,0x7c
  4187da:	push   edi
  4187db:	shl    DWORD PTR [ebp+0xe4be196],cl
  4187e1:	es retf 
  4187e3:	mov    ebp,0x7eb29c3d
  4187e8:	sbb    al,0x4d
  4187ea:	daa    
  4187eb:	clc    
  4187ec:	bswap  esi
  4187ee:	rcr    DWORD PTR [esi],cl
  4187f0:	adc    edi,DWORD PTR [ebx-0x6d]
  4187f3:	xchg   BYTE PTR [edi],bh
  4187f5:	sub    DWORD PTR [edx+0x4f],ebp
  4187f8:	test   al,0xd9
  4187fa:	jae    0x4187e9
  4187fc:	fisub  DWORD PTR [ecx+0x6]
  4187ff:	add    al,BYTE PTR [edi*2+0x719fb67c]
  418806:	fst    st(4)
  418808:	push   0x75999815
  41880d:	cmp    cl,BYTE PTR [esi-0x7585ab5e]
  418813:	cmp    al,0x9
  418815:	out    0x8d,al
  418817:	ja     0x4187da
  418819:	lahf   
  41881a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41881b:	mov    esp,0x2faf1ea5
  418820:	inc    eax
  418821:	xchg   BYTE PTR [eax-0x36],cl
  418824:	outs   dx,DWORD PTR ds:[esi]
  418825:	neg    ecx
  418827:	jp     0x41888d
  418829:	aaa    
  41882a:	sti    
  41882b:	(bad)  
  41882c:	leave  
  41882d:	mov    edx,0xb836a45a
  418832:	add    eax,eax
  418834:	out    0x22,al
  418836:	icebp  
  418837:	xor    DWORD PTR [esi+0x68],ecx
  41883a:	sub    eax,0xc69b845a
  41883f:	fdivrp st(5),st
  418841:	mov    ds:0x69d333ac,eax
  418846:	ret    
  418847:	sbb    ch,dh
  418849:	or     esi,DWORD PTR [ecx]
  41884b:	add    al,0x9f
  41884d:	inc    eax
  41884e:	(bad)  [ecx+0x2f]
  418851:	(bad)
  418854:	pop    edi
  418855:	mov    edi,gs
  418857:	push   0x2723a865
  41885c:	push   esi
  41885d:	std    
  41885e:	lods   al,BYTE PTR ds:[esi]
  41885f:	ds cs push esp
  418862:	addr16 imul ecx
  418865:	test   al,0x76
  418867:	mov    ch,0x6a
  418869:	inc    edx
  41886a:	arpl   WORD PTR [eax],sp
  41886c:	push   ebp
  41886d:	jl     0x4188d2
  41886f:	add    ah,al
  418871:	dec    ebx
  418872:	sti    
  418873:	pop    ecx
  418874:	mov    ds:0x149cfd11,al
  418879:	out    0x16,eax
  41887b:	xchg   ebx,eax
  41887c:	inc    ebp
  41887d:	aam    0x38
  41887f:	outs   dx,BYTE PTR ds:[esi]
  418880:	jle    0x418853
  418882:	mov    BYTE PTR [ecx+edi*2],cl
  418885:	rcr    DWORD PTR [ebx+eax*8+0x4ee93993],0x81
  41888d:	loop   0x418903
  41888f:	push   0x7
  418891:	loopne 0x4188f2
  418893:	fcmovnb st,st(6)
  418895:	dec    eax
  418896:	stos   BYTE PTR es:[edi],al
  418897:	out    dx,al
  418898:	icebp  
  418899:	push   cs
  41889a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41889b:	fimul  DWORD PTR [esi]
  41889d:	mov    bh,0xa0
  41889f:	inc    edi
  4188a0:	in     al,dx
  4188a1:	mov    ah,0xc5
  4188a3:	jns    0x418922
  4188a5:	fisub  DWORD PTR [ecx+ecx*1-0x2c]
  4188a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188aa:	jne    0x418863
  4188ac:	es mov ebp,0xa0d19b9e
  4188b2:	inc    DWORD PTR [ecx]
  4188b4:	xchg   edi,eax
  4188b5:	mov    eax,ds:0xc80d0bbb
  4188ba:	ret    
  4188bb:	cmc    
  4188bc:	ds push ss
  4188be:	aaa    
  4188bf:	pop    edx
  4188c0:	ss arpl sp,cx
  4188c3:	cwde   
  4188c4:	adc    al,0x1b
  4188c6:	pop    edx
  4188c7:	aaa    
  4188c8:	mov    esi,0x639f18ba
  4188cd:	pop    ecx
  4188ce:	outs   dx,BYTE PTR ds:[esi]
  4188cf:	pushf  
  4188d0:	(bad)  
  4188d1:	mov    dl,0x9b
  4188d3:	ins    BYTE PTR es:[edi],dx
  4188d4:	dec    esp
  4188d5:	(bad)  
  4188d6:	loop   0x4188ec
  4188d8:	loopne 0x41889d
  4188da:	mov    ebx,ebp
  4188dc:	mov    bh,0x80
  4188de:	ins    DWORD PTR es:[edi],dx
  4188df:	sar    DWORD PTR [ebx],0xf5
  4188e2:	jl     0x4188eb
  4188e4:	sub    al,0xfe
  4188e6:	jecxz  0x4188b2
  4188e8:	or     bl,bh
  4188ea:	imul   esp,DWORD PTR [edx-0x20862487],0x47
  4188f1:	pop    eax
  4188f2:	or     eax,0x3c09bd97
  4188f7:	add    al,0xd6
  4188f9:	test   eax,0x7e630591
  4188fe:	or     edi,esi
  418900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418901:	jnp    0x418955
  418903:	sub    BYTE PTR [ebx],dl
  418905:	inc    ebp
  418906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418907:	pushf  
  418908:	cdq    
  418909:	jns    0x4188fa
  41890b:	xlat   BYTE PTR ds:[ebx]
  41890c:	cld    
  41890d:	and    ecx,DWORD PTR [ebp+0x7b]
  418910:	add    DWORD PTR [ecx+edx*4-0x1df4f57e],0x40
  418918:	sbb    al,BYTE PTR [ecx]
  41891a:	pusha  
  41891b:	fiadd  WORD PTR [edi-0x2d]
  41891e:	pop    ds
  41891f:	mov    dl,0x5b
  418921:	out    0xcd,al
  418923:	call   0xefc1f6f
  418928:	(bad)  
  41892a:	dec    eax
  41892b:	jg     0x4188e6
  41892d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41892e:	cmp    al,0x9a
  418930:	push   ecx
  418931:	cmp    ebp,DWORD PTR [ebx+0x2f68d89c]
  418937:	scas   al,BYTE PTR es:[edi]
  418938:	sar    DWORD PTR [esi-0x68],0x2b
  41893c:	pop    ebp
  41893d:	mov    al,0x27
  41893f:	mov    esi,0x9312be1f
  418944:	pusha  
  418945:	push   eax
  418946:	out    0x23,al
  418948:	mov    al,ds:0x8ab75b5e
  41894d:	(bad)  
  41894f:	cmp    dl,BYTE PTR [ecx+eax*1+0x21]
  418953:	adc    eax,edx
  418955:	pop    esi
  418956:	mov    WORD PTR [ebx],fs
  418958:	out    dx,eax
  418959:	and    al,BYTE PTR [eax]
  41895b:	adc    BYTE PTR [edi+0x24eeaf29],bl
  418961:	pop    eax
  418962:	or     DWORD PTR [eax+0xc],0x6
  418966:	mov    bl,0x28
  418968:	xchg   ecx,eax
  418969:	pop    ebp
  41896a:	mov    esp,0xe07c4b65
  41896f:	addr16 out dx,eax
  418971:	cmp    BYTE PTR [eax-0x73f35eb4],cl
  418977:	add    eax,0xd0b09a1
  41897c:	or     ah,dl
  41897e:	cmp    bh,BYTE PTR [edx-0x9]
  418981:	pop    esp
  418982:	fcom   st(1)
  418984:	and    al,0x89
  418986:	mov    BYTE PTR [ebp-0x7a526bf2],bh
  41898c:	mov    dl,BYTE PTR [esi-0x6e]
  41898f:	mov    esp,0x3e3de3e1
  418994:	lea    ebp,[ebx+0xa3819b7]
  41899a:	push   0xa57e1181
  41899f:	mov    esp,fs
  4189a1:	fdiv   QWORD PTR [ecx+edi*8]
  4189a4:	jns    0x4189e5
  4189a6:	repnz xor BYTE PTR [edi-0x3f],al
  4189aa:	call   0x4d6f:0x1f3dcaee
  4189b1:	mov    edx,0x33da8485
  4189b6:	or     eax,0xb630b34f
  4189bb:	mov    ch,0xf0
  4189bd:	sub    DWORD PTR [edx-0x53e67542],ebx
  4189c3:	fsubr  DWORD PTR [esi]
  4189c5:	stos   DWORD PTR es:[edi],eax
  4189c6:	in     al,0x9
  4189c8:	lds    edx,FWORD PTR [ebx]
  4189ca:	push   esi
  4189cb:	push   esp
  4189cc:	jbe    0x41898c
  4189ce:	ret    
  4189cf:	adc    al,0x94
  4189d1:	xor    eax,0x81752ca3
  4189d6:	or     eax,edx
  4189d8:	repnz ins BYTE PTR es:[edi],dx
  4189da:	xor    BYTE PTR [edi],cl
  4189dc:	fdivr  QWORD PTR ds:0x1e862798
  4189e2:	lods   eax,DWORD PTR ds:[esi]
  4189e3:	cwde   
  4189e4:	mov    esi,0x4ba9978
  4189e9:	and    DWORD PTR [esi-0x60],esp
  4189ec:	fmul   DWORD PTR [esi-0x6d51b4e0]
  4189f2:	gs sbb edx,edx
  4189f5:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4189f7:	sti    
  4189f8:	adc    eax,0xe94c13c9
  4189fd:	arpl   WORD PTR [ebx+0x6e],bx
  418a00:	into   
  418a01:	adc    al,0x86
  418a03:	sub    cl,BYTE PTR [edi]
  418a05:	xor    eax,0x5832c2ed
  418a0a:	jno    0x4189e5
  418a0c:	dec    esi
  418a0d:	lods   al,BYTE PTR ds:[esi]
  418a0e:	shl    ebx,0x33
  418a11:	stos   DWORD PTR es:[edi],eax
  418a12:	lock inc eax
  418a14:	jb     0x418a14
  418a16:	(bad)  
  418a17:	pop    ss
  418a18:	fdivrp st(0),st
  418a1a:	cmp    eax,0x6e96b7a3
  418a1f:	and    edi,DWORD PTR [edx-0x2f7e0da8]
  418a25:	push   edi
  418a26:	sbb    eax,0x2a479263
  418a2b:	call   0x6cf037ac
  418a30:	into   
  418a31:	daa    
  418a32:	and    eax,DWORD PTR [edi]
  418a34:	loopne 0x418a63
  418a36:	or     eax,0x5cb9304
  418a3b:	adc    DWORD PTR [eax],ebp
  418a3d:	fist   DWORD PTR [ebp+edi*2-0x4b]
  418a41:	aad    0xee
  418a43:	fisub  WORD PTR [esi-0x14]
  418a46:	mov    dl,0x72
  418a48:	mov    ebp,0x76aabae9
  418a4d:	fwait
  418a4e:	pop    esi
  418a4f:	xor    DWORD PTR [ebx+ecx*1],edi
  418a52:	add    BYTE PTR [ebx-0x7489398c],dh
  418a58:	pop    eax
  418a59:	add    eax,0x1f99cd53
  418a5e:	hlt    
  418a5f:	out    0x36,al
  418a61:	fcmovnu st,st(0)
  418a63:	pop    ebp
  418a64:	dec    ebp
  418a65:	adc    BYTE PTR [ebp+0xe],dh
  418a68:	repnz xchg esp,eax
  418a6a:	loop   0x418ac2
  418a6c:	xchg   ecx,eax
  418a6d:	ss lahf 
  418a6f:	mov    BYTE PTR [edx+0x71db76e7],dh
  418a75:	cmp    eax,DWORD PTR [eax+0x27]
  418a78:	es dec eax
  418a7a:	das    
  418a7b:	pop    ebx
  418a7c:	hlt    
  418a7d:	mov    ds:0x642db292,eax
  418a82:	inc    BYTE PTR ds:0xb6dda825
  418a88:	jns    0x418a5e
  418a8a:	mov    cl,0xd9
  418a8c:	push   ecx
  418a8d:	call   0xf157806f
  418a92:	adc    al,0x3b
  418a94:	xchg   edi,eax
  418a95:	inc    ecx
  418a96:	popa   
  418a97:	lods   eax,DWORD PTR ds:[esi]
  418a98:	xor    bh,BYTE PTR [ebp+0x11f63039]
  418a9e:	sub    ecx,DWORD PTR [ebp+0x73]
  418aa1:	pusha  
  418aa2:	lock xor dl,al
  418aa5:	sub    al,0x8
  418aa7:	repnz popf 
  418aa9:	pop    es
  418aaa:	mov    cl,0x22
  418aac:	into   
  418aad:	and    al,0xaa
  418aaf:	pop    ss
  418ab0:	cmp    al,0xc6
  418ab2:	jne    0x418a69
  418ab4:	pop    ebp
  418ab5:	imul   ebx,DWORD PTR [esi+0x6b7fad9c],0xaf022770
  418abf:	fldenv [esi-0x73]
  418ac2:	enter  0xffbc,0x21
  418ac6:	mov    bh,0xd0
  418ac8:	cmp    ah,BYTE PTR [ecx+0x100e3111]
  418ace:	call   0xd63a6c26
  418ad3:	gs jns 0x418b43
  418ad6:	setle  BYTE PTR [ebx]
  418ad9:	or     ecx,DWORD PTR [ebx-0x60]
  418adc:	sub    cl,dl
  418ade:	xchg   DWORD PTR [eax],ecx
  418ae0:	mov    DWORD PTR ds:0xe398c6a1,edx
  418ae6:	jne    0x418ac5
  418ae8:	inc    edi
  418ae9:	fcmovne st,st(5)
  418aeb:	fs cwde 
  418aed:	sbb    bh,0x64
  418af0:	cmp    eax,0x5b30c469
  418af5:	or     al,BYTE PTR [ebx+eax*8]
  418af8:	sahf   
  418af9:	out    0x40,eax
  418afb:	aad    0x9e
  418afd:	popa   
  418afe:	rcl    DWORD PTR [ebx+eiz*1+0x4b112d68],1
  418b05:	xor    BYTE PTR [edx+0x4c],dl
  418b08:	mov    ds:0x5ed909fb,al
  418b0d:	or     al,0x1e
  418b0f:	les    ebp,FWORD PTR [edi+0x74]
  418b12:	(bad)  
  418b13:	xchg   edx,eax
  418b14:	cmp    DWORD PTR [esi],0xe33040b6
  418b1a:	sar    DWORD PTR [eax-0x5cd7ca49],0x63
  418b21:	mul    cl
  418b23:	(bad)  
  418b24:	mov    edi,0x4c56381b
  418b29:	retf   0x3f02
  418b2c:	inc    edi
  418b2d:	test   dl,ah
  418b2f:	add    BYTE PTR [ecx+0x450e1cb8],al
  418b35:	das    
  418b36:	sar    BYTE PTR [eax],1
  418b38:	mov    dl,BYTE PTR [eax+0x3fa47c2f]
  418b3e:	xchg   ebx,eax
  418b3f:	mov    ebp,0x6732cb28
  418b44:	sub    ebx,DWORD PTR [ebp-0x1d]
  418b47:	lahf   
  418b48:	ins    DWORD PTR es:[edi],dx
  418b49:	repnz inc ebx
  418b4b:	pop    ebp
  418b4c:	mov    esi,0xdde6aae
  418b51:	loope  0x418b3d
  418b53:	lock rcr DWORD PTR [esi+0x4e],cl
  418b57:	daa    
  418b58:	inc    esp
  418b59:	xchg   esp,eax
  418b5a:	adc    DWORD PTR [eax+0x588305d6],esi
  418b60:	ins    BYTE PTR es:[edi],dx
  418b61:	xadd   cl,al
  418b64:	outs   dx,BYTE PTR ds:[esi]
  418b65:	push   ebp
  418b66:	dec    edi
  418b67:	xor    DWORD PTR [ebx+0x5dda66ee],0xeb766a2
  418b71:	lock mov dh,0x4d
  418b74:	mov    dl,0x49
  418b76:	fbld   TBYTE PTR [ebx+esi*8-0x14]
  418b7a:	adc    ah,ch
  418b7c:	mov    DWORD PTR [edi],ecx
  418b7e:	test   cl,0x4c
  418b81:	xchg   ecx,eax
  418b82:	imul   esp,DWORD PTR [edx-0x46],0xd
  418b86:	adc    al,0x57
  418b88:	mov    edi,0x60360d9d
  418b8d:	push   edx
  418b8e:	inc    eax
  418b8f:	inc    edi
  418b90:	nop
  418b91:	inc    esp
  418b92:	add    BYTE PTR [ecx-0x77],ch
  418b95:	dec    ebx
  418b96:	(bad)  
  418b97:	imul   esp,DWORD PTR [ecx+0x578e0e14],0xfffffffb
  418b9e:	das    
  418b9f:	adc    eax,0x37bb9dd4
  418ba4:	sub    DWORD PTR [edi+0x5a],esi
  418ba7:	inc    edi
  418ba8:	cmp    dh,BYTE PTR [edi+0x32]
  418bab:	jp     0x418be2
  418bad:	mov    ah,BYTE PTR [ebp+0x4a]
  418bb0:	pop    eax
  418bb1:	mov    ds:0xc4755e3a,al
  418bb6:	dec    edi
  418bb7:	das    
  418bb8:	out    0x5f,eax
  418bba:	pop    ebp
  418bbb:	(bad)  
  418bbc:	repz out 0x9f,al
  418bbf:	(bad)  
  418bc0:	xchg   edi,eax
  418bc1:	sbb    al,0xdb
  418bc3:	add    esi,edi
  418bc5:	popf   
  418bc6:	mov    ds:0x49888bc0,eax
  418bcb:	out    0x6d,al
  418bcd:	ss pop ebx
  418bcf:	rcl    ebp,0xc7
  418bd2:	cwde   
  418bd3:	and    bh,BYTE PTR [eax]
  418bd5:	call   0x5d5e5dc2
  418bda:	xor    esi,DWORD PTR [esi+0xa9843e]
  418be0:	fdivr  DWORD PTR [esi+0x5dec0c0d]
  418be6:	mov    edx,0xdf0f4d1d
  418beb:	dec    ebx
  418bec:	call   0x9759:0xb3fb25a5
  418bf3:	push   ds
  418bf4:	fistp  DWORD PTR [ebx-0xf7394f2]
  418bfa:	dec    edx
  418bfb:	es mov bl,0xb5
  418bfe:	inc    ecx
  418bff:	sub    cl,BYTE PTR [eax+0x68]
  418c02:	shl    DWORD PTR [edx],cl
  418c04:	inc    esi
  418c05:	inc    edx
  418c06:	lock sbb BYTE PTR [edx],bh
  418c09:	shl    DWORD PTR [edx],0xf2
  418c0c:	xchg   edx,eax
  418c0d:	ins    BYTE PTR es:[edi],dx
  418c0e:	jb     0x418bbc
  418c10:	xchg   ebp,eax
  418c11:	bound  edi,QWORD PTR [ebx+0x729b1374]
  418c17:	mov    esi,0x2ad16499
  418c1c:	adc    BYTE PTR [edi+0x781ba678],bl
  418c22:	pop    ss
  418c23:	popa   
  418c24:	fild   DWORD PTR [ecx+edi*8]
  418c27:	jp     0x418bdb
  418c29:	pushf  
  418c2a:	loop   0x418c0a
  418c2c:	dec    edi
  418c2d:	call   0xcbe83a7d
  418c32:	mov    cl,0xe8
  418c34:	(bad)  
  418c35:	enter  0x3cb2,0x22
  418c39:	f2xm1  
  418c3b:	push   esp
  418c3c:	outs   dx,BYTE PTR ds:[esi]
  418c3d:	mov    al,0x67
  418c3f:	loope  0x418be9
  418c41:	inc    eax
  418c42:	out    0x44,eax
  418c44:	shl    BYTE PTR [edx+0x8],cl
  418c47:	pop    edx
  418c48:	std    
  418c49:	cmc    
  418c4a:	mov    DWORD PTR [ebp+0x44],0x78193980
  418c51:	(bad)  
  418c52:	(bad)  
  418c53:	bound  esi,QWORD PTR [ecx-0x173ac452]
  418c59:	inc    ecx
  418c5a:	sub    al,0x41
  418c5c:	mov    ah,bh
  418c5e:	mov    gs,ecx
  418c60:	cmp    eax,0xdd548b47
  418c65:	cmc    
  418c66:	loop   0x418ce0
  418c68:	cmp    dh,BYTE PTR [ecx+0x20]
  418c6b:	mov    ds:0xe24e280b,al
  418c70:	add    eax,0xde2c1b6
  418c75:	inc    esp
  418c76:	pop    eax
  418c77:	push   ebx
  418c78:	bound  esp,QWORD PTR [edx-0x50098ca7]
  418c7e:	outs   dx,BYTE PTR ds:[esi]
  418c7f:	mov    ebp,0x6d9db7f1
  418c84:	out    dx,al
  418c85:	xor    eax,0xa483e7
  418c8a:	push   ss
  418c8b:	sbb    al,0xe3
  418c8d:	loop   0x418c99
  418c8f:	int3   
  418c90:	mov    ch,0x97
  418c92:	lods   eax,DWORD PTR ds:[esi]
  418c93:	fldenv [ecx]
  418c95:	gs jbe 0x418ca5
  418c98:	jo     0x418cfe
  418c9a:	mov    bl,0xc7
  418c9c:	mov    ds:0x668275bc,eax
  418ca1:	pop    ebx
  418ca2:	or     bh,bh
  418ca4:	and    bl,ch
  418ca6:	inc    esi
  418ca7:	(bad)  
  418ca8:	loopne 0x418d26
  418caa:	std    
  418cab:	aad    0xe3
  418cad:	das    
  418cae:	jl     0x418c52
  418cb0:	pushf  
  418cb1:	sub    al,BYTE PTR [edx+0x18]
  418cb4:	cdq    
  418cb5:	jp     0x418d1f
  418cb7:	pop    eax
  418cb8:	(bad)  
  418cb9:	inc    eax
  418cba:	mov    esi,0x7b4a624a
  418cbf:	scas   eax,DWORD PTR es:[edi]
  418cc0:	mov    DWORD PTR [edx+0x2c236237],0x43102264
  418cca:	jo     0x418ca4
  418ccc:	inc    ebx
  418ccd:	out    dx,eax
  418cce:	aad    0x9c
  418cd0:	xor    al,BYTE PTR [ebx-0x80]
  418cd3:	out    0xd4,eax
  418cd5:	jmp    0x418cdc
  418cd7:	jg     0x418d08
  418cd9:	rcl    BYTE PTR [ebp-0x1e],cl
  418cdc:	dec    ebp
  418cdd:	lahf   
  418cde:	sti    
  418cdf:	cld    
  418ce0:	iret   
  418ce1:	cmc    
  418ce2:	mov    eax,0x2479e172
  418ce7:	inc    esp
  418ce8:	call   0xa4571106
  418ced:	leave  
  418cee:	aad    0xd5
  418cf0:	fwait
  418cf1:	jne    0x418d0f
  418cf3:	bound  ecx,QWORD PTR [eax+eiz*1]
  418cf6:	cdq    
  418cf7:	inc    ebp
  418cf8:	faddp  st(5),st
  418cfa:	and    eax,edx
  418cfc:	pop    esp
  418cfd:	test   BYTE PTR [eax+ebp*1],ch
  418d00:	daa    
  418d01:	mov    eax,0xa15467f9
  418d06:	push   ebp
  418d07:	or     DWORD PTR cs:[ebx+esi*4-0x77],edi
  418d0c:	and    al,0x25
  418d0e:	cmp    eax,0xa6326077
  418d13:	aas    
  418d14:	cdq    
  418d15:	fld    QWORD PTR [eax-0x314d5104]
  418d1b:	inc    eax
  418d1c:	mov    esi,ss
  418d1e:	xlat   BYTE PTR ds:[ebx]
  418d1f:	gs jo  0x418d02
  418d22:	xchg   ebx,eax
  418d23:	jecxz  0x418cb4
  418d25:	push   0xfffffff9
  418d27:	adc    BYTE PTR gs:[esi-0x478269fb],dh
  418d2e:	(bad)  
  418d2f:	cmp    esp,0xdbf9438f
  418d35:	push   0xd4646c5c
  418d3a:	xchg   ecx,eax
  418d3b:	sbb    al,0xa4
  418d3d:	push   edi
  418d3e:	fsubr  DWORD PTR [edx]
  418d40:	sbb    BYTE PTR [ebx+0x3b8075c],dh
  418d46:	pusha  
  418d47:	ins    BYTE PTR es:[edi],dx
  418d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d49:	jg     0x418cce
  418d4b:	xchg   esp,eax
  418d4c:	fcomp  QWORD PTR [esi+0x4179ebbe]
  418d52:	inc    esi
  418d53:	xchg   esp,eax
  418d54:	in     al,dx
  418d55:	lock pop edi
  418d57:	push   0xffffff91
  418d59:	(bad)  [esi+0x14]
  418d5c:	(bad)  
  418d5d:	test   al,0xe5
  418d5f:	xchg   ecx,eax
  418d60:	test   cl,bl
  418d62:	sahf   
  418d63:	dec    edx
  418d64:	int3   
  418d65:	cmp    al,0x78
  418d67:	dec    ecx
  418d68:	(bad)  
  418d69:	sbb    al,0x34
  418d6b:	out    0x2b,al
  418d6d:	mov    ecx,0xe1d5407f
  418d72:	or     edx,DWORD PTR [ebx]
  418d74:	shl    DWORD PTR [ebx+0x4d6ed6ce],cl
  418d7a:	fcmovu st,st(5)
  418d7c:	hlt    
  418d7d:	shr    bh,1
  418d7f:	add    esi,DWORD PTR ss:[edx]
  418d82:	xlat   BYTE PTR ds:[ebx]
  418d83:	push   esi
  418d84:	test   DWORD PTR [eax+ebx*4+0x74],ecx
  418d88:	xor    al,0x1c
  418d8a:	mov    esi,0x58cec63c
  418d8f:	sub    ah,BYTE PTR ds:0xf1380fff
  418d95:	xor    DWORD PTR [ebp+0x6b57a64b],esi
  418d9b:	dec    ecx
  418d9c:	jo     0x418dd1
  418d9e:	pop    es
  418d9f:	dec    eax
  418da0:	inc    ecx
  418da1:	int    0xdf
  418da3:	and    dl,BYTE PTR [ecx]
  418da5:	rcl    ebx,cl
  418da7:	jp     0x418e1a
  418da9:	cld    
  418daa:	add    dl,BYTE PTR [edx+0x7ebf1a97]
  418db0:	push   es
  418db1:	dec    edx
  418db2:	xor    eax,0x9ef8891d
  418db7:	les    ecx,FWORD PTR [eax-0x10]
  418dba:	scas   al,BYTE PTR es:[edi]
  418dbb:	xor    eax,0x24d10d21
  418dc0:	loop   0x418d46
  418dc2:	pop    esi
  418dc3:	call   0xd221:0xd8e69c1b
  418dca:	adc    DWORD PTR [ecx-0x3a6e5a58],eax
  418dd0:	inc    edi
  418dd1:	jae    0x418d7d
  418dd3:	retf   
  418dd4:	sub    al,0x10
  418dd6:	adc    cl,cl
  418dd8:	popa   
  418dd9:	mov    ch,0x10
  418ddb:	cmp    edx,DWORD PTR [edi]
  418ddd:	adc    al,0xc4
  418ddf:	cs fprem 
  418de2:	cmp    al,0x1c
  418de4:	lahf   
  418de5:	push   0x2
  418de7:	mov    bh,0x3d
  418de9:	loopne 0x418e57
  418deb:	inc    edi
  418dec:	fsubr  QWORD PTR [edi+0x3a13e38b]
  418df2:	rcl    BYTE PTR [ecx-0x50],cl
  418df5:	jecxz  0x418e27
  418df7:	repnz stc 
  418df9:	in     al,dx
  418dfa:	bound  eax,QWORD PTR [esi]
  418dfc:	stos   BYTE PTR es:[edi],al
  418dfd:	jle    0x418e19
  418dff:	icebp  
  418e00:	add    eax,0xd8986f05
  418e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e06:	sub    BYTE PTR [edx],0x2c
  418e09:	ret    
  418e0a:	aas    
  418e0b:	mov    al,BYTE PTR [edi+0x60]
  418e0e:	pushf  
  418e0f:	mov    eax,ds:0x3f6b61d7
  418e14:	sbb    bh,BYTE PTR [edi]
  418e16:	xchg   ebx,eax
  418e17:	bound  eax,QWORD PTR ds:0x477dcd96
  418e1d:	in     eax,dx
  418e1e:	mov    bh,0x8a
  418e20:	aas    
  418e21:	sub    ch,bh
  418e23:	xchg   esi,eax
  418e24:	and    edx,ebx
  418e26:	cmp    eax,0x173f78a1
  418e2b:	repz cmc 
  418e2d:	xlat   BYTE PTR ds:[ebx]
  418e2e:	ja     0x418ea7
  418e30:	jge    0x418e20
  418e32:	jnp    0x418e24
  418e34:	scas   eax,DWORD PTR es:[edi]
  418e35:	jp     0x418ea5
  418e37:	dec    edx
  418e38:	jno    0x418e13
  418e3a:	inc    ebx
  418e3b:	jmp    0x5e4c26b9
  418e40:	jle    0x418dfc
  418e42:	leave  
  418e43:	cs in  al,dx
  418e45:	xor    eax,0x849d307a
  418e4a:	dec    ecx
  418e4b:	xchg   ebx,eax
  418e4c:	fdivr  st(2),st
  418e4e:	mov    ecx,0x84928f50
  418e53:	sbb    DWORD PTR [edi+0x20],ebx
  418e56:	in     al,dx
  418e57:	and    ecx,edi
  418e59:	xchg   edi,eax
  418e5a:	mov    dh,dl
  418e5c:	push   eax
  418e5d:	xchg   ecx,eax
  418e5e:	mov    dl,0x8f
  418e60:	gs pop esp
  418e62:	xchg   ebp,eax
  418e63:	jne    0x418df8
  418e65:	das    
  418e66:	mov    bh,bl
  418e68:	mul    BYTE PTR [eax+0x74]
  418e6b:	xchg   DWORD PTR [edi+ecx*8],edi
  418e6e:	fsubr  DWORD PTR [edx+0x1a1feab]
  418e74:	ret    0x558b
  418e77:	jmp    0x5907:0x7acd7b4a
  418e7e:	dec    edx
  418e7f:	sub    edi,DWORD PTR [ecx-0x6e]
  418e82:	iret   
  418e83:	fcomip st,st(7)
  418e85:	(bad)  
  418e86:	mov    al,ds:0xcd845de4
  418e8b:	fcmove st,st(1)
  418e8d:	mov    ebx,0x6328fb56
  418e92:	xor    al,0x20
  418e94:	out    dx,eax
  418e95:	(bad)  
  418e96:	out    0xae,eax
  418e98:	mov    ds:0x4d2c8a60,eax
  418e9d:	rcl    esp,0x39
  418ea0:	sbb    BYTE PTR [edi+0x73],bl
  418ea3:	xchg   ebx,eax
  418ea4:	xchg   esi,eax
  418ea5:	cmp    BYTE PTR cs:[ebx-0x21],dl
  418ea9:	dec    ebp
  418eaa:	push   0x1
  418eac:	loope  0x418e72
  418eae:	xor    DWORD PTR [edx+0x8],eax
  418eb1:	(bad)  
  418eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418eb3:	mov    BYTE PTR [ebx+0x15],0xc0
  418eb7:	sar    al,0xa5
  418eba:	inc    ecx
  418ebb:	or     eax,0x3ae8bb3c
  418ec0:	inc    ebp
  418ec1:	jae    0x418ee2
  418ec3:	sub    dh,BYTE PTR [eax+0x35]
  418ec6:	ins    DWORD PTR es:[edi],dx
  418ec7:	es in  al,0x23
  418eca:	push   esi
  418ecb:	popa   
  418ecc:	shl    BYTE PTR [esi],0xfb
  418ecf:	cwde   
  418ed0:	inc    esp
  418ed1:	add    BYTE PTR [edi+0x4a],0xfc
  418ed5:	push   eax
  418ed7:	mov    esp,?
  418ed9:	push   esi
  418eda:	shl    DWORD PTR [ebx-0x56],cl
  418edd:	nop
  418ede:	fimul  WORD PTR [ecx+0x71365d51]
  418ee4:	mov    bh,0xf6
  418ee6:	test   cl,bl
  418ee8:	jno    0x418ed8
  418eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418eeb:	fwait
  418eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eed:	sbb    al,0xf5
  418eef:	retf   
  418ef0:	and    al,0x3e
  418ef2:	pop    ebx
  418ef3:	add    BYTE PTR [edx],dh
  418ef5:	jmp    0x1d1ff538
  418efa:	fnstenv [edi-0x19f8580b]
  418f00:	inc    esi
  418f01:	lea    eax,[esi+0x18]
  418f04:	es push esp
  418f06:	sbb    eax,DWORD PTR [ebx]
  418f08:	mov    ds:0x55c3e088,eax
  418f0d:	jg     0x418f14
  418f0f:	or     BYTE PTR [edi+0x46],ch
  418f12:	loopne 0x418e9e
  418f14:	sbb    al,0xb0
  418f16:	xchg   esi,eax
  418f17:	mov    ebx,ss
  418f19:	mov    edi,0xa830b3e8
  418f1e:	add    ah,BYTE PTR [ebp+0x5b]
  418f21:	mov    ch,0x50
  418f23:	xor    ah,dh
  418f25:	retf   
  418f26:	or     al,0x79
  418f28:	je     0x418eb2
  418f2a:	or     BYTE PTR [eax+0x3315cb27],dl
  418f30:	cs in  eax,0xa7
  418f33:	ins    BYTE PTR es:[edi],dx
  418f34:	push   es
  418f35:	xchg   edx,eax
  418f36:	push   cs
  418f37:	inc    edi
  418f38:	aas    
  418f39:	in     eax,dx
  418f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f3b:	sbb    DWORD PTR [edi],esi
  418f3d:	sub    cl,BYTE PTR [ecx+0x3df351ca]
  418f43:	inc    eax
  418f44:	mov    ebp,0x9b6ea33c
  418f49:	xchg   edx,eax
  418f4a:	cmp    ecx,DWORD PTR [ecx+0x2b]
  418f4d:	ins    BYTE PTR es:[edi],dx
  418f4e:	push   0x6f
  418f50:	sar    eax,1
  418f52:	adc    bl,bh
  418f54:	push   ss
  418f55:	lea    esi,[edi+0x0]
  418f58:	out    0xa9,al
  418f5a:	hlt    
  418f5b:	mov    edx,ebp
  418f5d:	xor    al,0xc2
  418f5f:	push   esp
  418f60:	mov    ah,0x87
  418f62:	cdq    
  418f63:	add    eax,0x1957f30f
  418f68:	dec    eax
  418f69:	sbb    dh,dh
  418f6b:	leave  
  418f6c:	push   ds
  418f6d:	cmp    DWORD PTR [esi-0x21549e49],edi
  418f73:	add    BYTE PTR [esp+ebx*2],0x15
  418f77:	nop
  418f78:	or     esp,DWORD PTR [esi+0x1c88abb6]
  418f7e:	enter  0xd27b,0xd1
  418f82:	(bad)  
  418f84:	(bad)  ds:0xd1a44115
  418f8a:	imul   esp,ebx,0x557aa508
  418f90:	mov    ds:0xbff3cc2b,al
  418f95:	loope  0x418f3f
  418f97:	or     DWORD PTR [edx-0x5d],edx
  418f9a:	push   esp
  418f9b:	into   
  418f9c:	pop    esp
  418f9d:	clc    
  418f9e:	xor    BYTE PTR [eax+0x60],ch
  418fa1:	es lock ret 0x622b
  418fa6:	fs std 
  418fa8:	into   
  418fa9:	mov    cl,BYTE PTR [edi+0x6092fbd5]
  418faf:	and    BYTE PTR [ebx-0x3a14d8d1],dl
  418fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fb6:	adc    eax,0xc257a8f6
  418fbb:	ins    BYTE PTR es:[edi],dx
  418fbc:	lea    eax,[eax]
  418fbe:	mov    BYTE PTR [ebx+0x738dad72],cl
  418fc4:	call   0x7743f748
  418fc9:	mov    dh,BYTE PTR [eiz*8+0x28b343b]
  418fd0:	stos   DWORD PTR es:[edi],eax
  418fd1:	or     edi,DWORD PTR [ebx]
  418fd3:	mov    bl,0x14
  418fd5:	push   ebx
  418fd6:	or     al,0x59
  418fd8:	cli    
  418fd9:	add    cl,BYTE PTR [ebp-0x6cf04690]
  418fdf:	adc    al,0xc1
  418fe2:	stc    
  418fe3:	push   cs
  418fe4:	xor    eax,0xb7559449
  418fe9:	test   DWORD PTR [esi+0x3ca06c6],esp
  418fef:	jno    0x41905f
  418ff1:	call   0x20e8733e
  418ff6:	add    al,0x2a
  418ff8:	hlt    
  418ff9:	adc    BYTE PTR [ecx+ebx*2+0x11],dl
  418ffd:	jb     0x419006
  418fff:	pop    esp
  419000:	ins    DWORD PTR es:[edi],dx
  419001:	sub    eax,0x5fbfc535
  419006:	mov    BYTE PTR [ecx-0x6e5af1cc],dh
  41900c:	ss dec ebx
  41900e:	mov    bh,0x7d
  419010:	sbb    DWORD PTR [ecx+ecx*1-0x20],esi
  419014:	loop   0x419007
  419016:	int    0xea
  419018:	mov    esp,0xef793820
  41901d:	addr16 icebp 
  41901f:	xlat   BYTE PTR ds:[ebx]
  419020:	inc    edi
  419021:	sar    DWORD PTR [ecx],cl
  419023:	test   al,0x84
  419025:	push   ds
  419026:	jo     0x418fb4
  419028:	call   0x1fa7145e
  41902d:	into   
  41902e:	frstor [eax-0x18]
  419031:	mov    bl,0x59
  419033:	inc    esp
  419034:	sbb    ecx,DWORD PTR [ecx+0x5]
  419037:	inc    eax
  419038:	push   esp
  419039:	jnp    0x41901d
  41903b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41903c:	dec    ebx
  41903d:	call   0xe0c9e23d
  419042:	sbb    ebp,DWORD PTR [edx-0x7a]
  419045:	inc    esp
  419046:	xchg   ebp,eax
  419047:	mov    dl,0x7a
  419049:	repnz shl BYTE PTR [ebx+0x525e5ba0],1
  419050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419051:	aad    0x52
  419053:	cmp    ebp,DWORD PTR [edx+0x36b290f7]
  419059:	enter  0x8fa1,0x66
  41905d:	sbb    al,0xf9
  41905f:	loope  0x419071
  419061:	inc    esp
  419062:	mov    ah,0x72
  419064:	xchg   ebx,eax
  419065:	mov    BYTE PTR [ebx+0x36955896],cl
  41906b:	mov    BYTE PTR [ebx],cl
  41906d:	shl    ch,cl
  41906f:	fdivr  QWORD PTR [ebx]
  419071:	jle    0x419013
  419073:	fadd   st(7),st
  419075:	push   0x8ad1816f
  41907a:	xchg   ecx,eax
  41907b:	aas    
  41907c:	fstp   QWORD PTR [esp+edi*1-0x30]
  419080:	pop    edx
  419081:	ins    BYTE PTR es:[edi],dx
  419082:	data16 jle 0x41900b
  419085:	ins    DWORD PTR es:[edi],dx
  419086:	dec    ecx
  419087:	stc    
  419088:	push   edi
  419089:	neg    BYTE PTR [eax]
  41908b:	push   ss
  41908c:	inc    ebp
  41908d:	aam    0xca
  41908f:	jge    0x4190bc
  419091:	push   esp
  419092:	cdq    
  419093:	out    dx,al
  419094:	pop    edx
  419095:	aas    
  419096:	inc    edx
  419097:	addr16 out dx,eax
  419099:	mov    ebx,0xfd3884b6
  41909e:	in     eax,dx
  41909f:	dec    esi
  4190a0:	cs scas al,BYTE PTR es:[edi]
  4190a2:	xor    al,0x87
  4190a4:	push   edi
  4190a5:	sbb    esp,DWORD PTR [esi-0x3c]
  4190a8:	push   edi
  4190a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190aa:	push   esp
  4190ab:	push   es
  4190ac:	std    
  4190ad:	ror    ch,1
  4190af:	mov    DWORD PTR [edx],edi
  4190b1:	xchg   ebp,eax
  4190b2:	(bad)  
  4190b3:	push   ebx
  4190b4:	or     eax,0x32e9693a
  4190b9:	push   esi
  4190ba:	out    0xd3,eax
  4190bc:	mov    al,0x72
  4190be:	shl    DWORD PTR [ecx-0x4bd5224d],cl
  4190c4:	sbb    eax,0x8409b1e4
  4190c9:	in     eax,dx
  4190ca:	mov    eax,0xf7c75942
  4190cf:	and    DWORD PTR [esi-0x3e],ecx
  4190d2:	add    edi,DWORD PTR [ecx+0x5fcdca68]
  4190d8:	ins    BYTE PTR es:[edi],dx
  4190d9:	(bad)  [ebx+0x3a09a35]
  4190df:	inc    esp
  4190e0:	js     0x4190bc
  4190e2:	shr    bl,0x13
  4190e5:	and    eax,0x90c19848
  4190ea:	xchg   ebp,eax
  4190eb:	mov    bh,BYTE PTR [ebx-0x40906d87]
  4190f1:	jb     0x41913c
  4190f3:	push   esi
  4190f4:	push   ss
  4190f5:	pop    ebp
  4190f6:	lock fistp QWORD PTR [bp+0x5ccc]
  4190fc:	ss mov edx,0xbce8f0bc
  419102:	mov    cx,0x4199
  419106:	scas   eax,DWORD PTR es:[edi]
  419107:	std    
  419108:	jle    0x41908c
  41910a:	sbb    edx,DWORD PTR [edi+0xc1a5256]
  419110:	inc    edx
  419111:	mov    ds:0x695f86aa,al
  419116:	int3   
  419117:	mov    edi,0xd70135cd
  41911c:	xchg   ebp,eax
  41911d:	out    dx,al
  41911e:	addr16 mov edx,0xced0c9a1
  419124:	mov    eax,0x3486040f
  419129:	in     al,dx
  41912a:	push   eax
  41912b:	xchg   edi,eax
  41912c:	pop    edx
  41912d:	scas   al,BYTE PTR es:[edi]
  41912e:	popa   
  41912f:	out    0x75,eax
  419131:	adc    ch,0xa2
  419134:	or     DWORD PTR [eax+0x73669123],edx
  41913a:	sbb    ebx,esi
  41913c:	je     0x419112
  41913e:	lods   eax,DWORD PTR ds:[esi]
  41913f:	xor    al,0xfb
  419141:	mov    ebx,0x864efdbe
  419146:	fs or  al,0xb6
  419149:	mov    ebx,0xab810c80
  41914e:	lds    ebx,FWORD PTR [edi-0x31716e45]
  419154:	mov    bl,0x38
  419156:	shr    BYTE PTR [ebx],0x6
  419159:	(bad)  
  41915a:	popa   
  41915b:	ds in  eax,dx
  41915d:	or     al,al
  41915f:	jae    0x4191af
  419161:	pop    ds
  419162:	retf   0x14b9
  419165:	inc    edx
  419166:	push   ecx
  419167:	jp     0x419129
  419169:	pop    edi
  41916a:	mov    eax,ds:0x134eba0e
  41916f:	aas    
  419170:	aad    0x3
  419172:	xchg   BYTE PTR [ebx],dh
  419174:	or     bl,BYTE PTR [ecx]
  419176:	call   0xe4de:0x6ea10bac
  41917d:	add    ebp,ebp
  41917f:	test   DWORD PTR [edi+0x66],eax
  419182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419183:	aaa    
  419184:	retf   0x4367
  419187:	fisttp QWORD PTR [ecx-0x27]
  41918a:	or     eax,0x638254ca
  41918f:	adc    DWORD PTR [ebx-0x9872581],esp
  419195:	nop
  419196:	and    esp,esp
  419198:	xchg   ebx,eax
  419199:	add    ecx,DWORD PTR [esp+eiz*8-0xd]
  41919d:	mov    ah,0x88
  41919f:	nop
  4191a0:	cmp    eax,0xf531b09d
  4191a5:	popa   
  4191a6:	in     al,0x9c
  4191a8:	or     eax,0x199a3fa5
  4191ad:	dec    ebx
  4191ae:	iret   
  4191af:	cwde   
  4191b0:	jno    0x4191ab
  4191b2:	leave  
  4191b3:	daa    
  4191b4:	xor    DWORD PTR [ebx-0x53],esi
  4191b7:	push   edi
  4191b8:	xchg   ebx,eax
  4191b9:	push   es
  4191ba:	pop    esi
  4191bb:	sbb    al,0x72
  4191bd:	or     DWORD PTR [edx],edi
  4191bf:	es and eax,0xd9050626
  4191c5:	test   DWORD PTR [ecx+ebx*2-0x6f],esi
  4191c9:	jo     0x4191e5
  4191cb:	push   ebp
  4191cc:	out    0xd1,al
  4191ce:	jno    0x4191b3
  4191d0:	in     eax,dx
  4191d1:	sbb    al,BYTE PTR [eiz*8-0x70c70bd2]
  4191d8:	adc    BYTE PTR ds:0x22e4e7c9,bh
  4191de:	fnstsw WORD PTR [eax+eiz*2-0x4d9a1014]
  4191e5:	rol    DWORD PTR [edi],0x20
  4191e8:	push   ecx
  4191e9:	sub    dh,BYTE PTR [ebx+eiz*4-0x7c]
  4191ed:	imul   eax,DWORD PTR [ebp-0x25c5a72a],0xffffff80
  4191f4:	lahf   
  4191f5:	mov    edi,0xd10e4da
  4191fa:	test   bh,dh
  4191fc:	sbb    esi,DWORD PTR [ebx+0x4]
  4191ff:	mov    ecx,DWORD PTR [edi+0x43]
  419202:	popa   
  419203:	das    
  419204:	pop    ecx
  419205:	(bad)  
  419207:	clc    
  419208:	cmp    BYTE PTR [ecx+eiz*1],0xbd
  41920c:	fcomp  st(2)
  41920e:	push   ebp
  41920f:	aam    0x3c
  419211:	and    DWORD PTR [edi],edi
  419213:	dec    esp
  419214:	imul   ebx,ecx,0xffffffd2
  419217:	sbb    cl,BYTE PTR fs:[ebx]
  41921a:	dec    edi
  41921b:	xchg   ebp,eax
  41921c:	add    eax,DWORD PTR [esi-0x44]
  41921f:	in     eax,dx
  419220:	pop    ss
  419221:	jne    0x4191f3
  419223:	test   al,0x49
  419225:	(bad)  [edi+0x1c]
  419228:	sub    bl,BYTE PTR [ebp+0x57]
  41922b:	icebp  
  41922c:	xchg   edx,eax
  41922d:	scas   eax,DWORD PTR es:[edi]
  41922e:	int3   
  41922f:	lods   eax,DWORD PTR ds:[esi]
  419230:	push   0xffffffaa
  419232:	pop    ebp
  419233:	leave  
  419234:	and    al,0x9c
  419236:	(bad)  
  419237:	xor    eax,0x682c73fb
  41923c:	sbb    DWORD PTR [bp+si],esp
  41923f:	ds scas eax,DWORD PTR es:[edi]
  419241:	add    BYTE PTR [edi],0xe8
  419244:	sub    al,0x5a
  419246:	lods   eax,DWORD PTR ds:[esi]
  419247:	or     dh,dl
  419249:	jnp    0x419201
  41924b:	fucomip st,st(4)
  41924d:	mov    bl,0xd
  41924f:	sbb    ch,BYTE PTR [ecx-0x2fdf1eff]
  419255:	inc    ecx
  419256:	dec    esi
  419257:	je     0x41921a
  419259:	ficom  WORD PTR [edi+0x11]
  41925c:	rol    BYTE PTR ds:0x1c3c0254,cl
  419262:	iret   
  419263:	pop    ebx
  419264:	xor    eax,0x3219ebd0
  419269:	add    eax,0x96e705ad
  41926e:	mov    al,ds:0x5966b8c9
  419273:	sbb    DWORD PTR [eax-0x4eb94465],0x7a791e31
  41927d:	call   FWORD PTR [ebx+0x589bc0d4]
  419283:	in     eax,dx
  419284:	xchg   esp,eax
  419285:	jp     0x4192be
  419287:	cld    
  419288:	mov    ah,ch
  41928a:	sbb    ebp,edi
  41928c:	mov    al,ds:0x532418e0
  419291:	pop    edx
  419292:	in     eax,dx
  419293:	sub    BYTE PTR [ebx-0x5e],bh
  419296:	(bad)  
  419297:	ffree  st(6)
  419299:	rol    DWORD PTR [edi],0x6b
  41929c:	lahf   
  41929d:	cs call 0xafb0:0x50357f3e
  4192a5:	lods   al,BYTE PTR ds:[esi]
  4192a6:	inc    ebp
  4192a7:	jbe    0x4192d1
  4192a9:	repz neg BYTE PTR [esi+0x37]
  4192ad:	mov    dh,0x38
  4192af:	cdq    
  4192b0:	out    0x83,eax
  4192b2:	icebp  
  4192b3:	sbb    eax,0x284e85d5
  4192b8:	push   0x57beb230
  4192bd:	inc    esi
  4192be:	dec    eax
  4192bf:	lahf   
  4192c0:	ficom  WORD PTR [ebp+0x531901fd]
  4192c6:	mov    ds:0xb1a580a9,al
  4192cb:	adc    DWORD PTR ds:0xb1970808,edx
  4192d1:	mov    eax,ds:0x5a64b5a3
  4192d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192d7:	sti    
  4192d8:	mov    bl,ah
  4192da:	inc    ebp
  4192db:	mov    ebp,DWORD PTR [ecx]
  4192dd:	daa    
  4192de:	push   ecx
  4192df:	xchg   edi,eax
  4192e0:	in     al,dx
  4192e1:	ret    
  4192e2:	lahf   
  4192e3:	add    DWORD PTR [edx+0x5b],ecx
  4192e6:	repz popf 
  4192e8:	out    0x38,al
  4192ea:	sahf   
  4192eb:	or     BYTE PTR [eax],bh
  4192ed:	mov    dl,0xfd
  4192ef:	mov    ebp,0x30f9eefb
  4192f4:	or     BYTE PTR ds:0x9846989f,0xb7
  4192fb:	dec    ebp
  4192fc:	je     0x4192c2
  4192fe:	dec    ebp
  4192ff:	loop   0x41931f
  419301:	xor    BYTE PTR ds:0x62b62fab,cl
  419307:	pop    ecx
  419308:	(bad)  
  419309:	shl    DWORD PTR [edi+eax*1+0xe],1
  41930d:	std    
  41930e:	xchg   edx,eax
  41930f:	mov    bl,BYTE PTR [eax]
  419311:	mov    bl,0xa4
  419313:	dec    eax
  419314:	int3   
  419315:	adc    ecx,DWORD PTR [esi+0x79]
  419318:	ins    BYTE PTR es:[edi],dx
  419319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41931a:	mov    al,ds:0x9c074cec
  41931f:	mov    al,0x40
  419321:	pop    esi
  419322:	mov    cl,0x90
  419324:	jne    0x419349
  419326:	dec    edi
  419327:	mov    esp,0x8f7f54c8
  41932c:	sub    esi,DWORD PTR [eax+0x14c64906]
  419332:	sub    DWORD PTR [esi-0x35],edi
  419335:	cmp    edi,DWORD PTR [edx]
  419337:	cwde   
  419338:	ret    
  419339:	push   es
  41933a:	cmp    al,0x88
  41933c:	mov    ds:0x38b2f327,eax
  419341:	enter  0xbcc8,0x10
  419345:	ja     0x4193ae
  419347:	std    
  419348:	mov    edx,0xc143cd70
  41934d:	mov    esi,0x3ee4fd38
  419352:	inc    ebp
  419353:	dec    edi
  419354:	std    
  419355:	ins    BYTE PTR es:[edi],dx
  419356:	fisttp WORD PTR [edx-0x1c]
  419359:	xor    DWORD PTR [edx],0x4f
  41935c:	mov    ebp,0x1212db4b
  419361:	xchg   ebp,eax
  419362:	push   cs
  419363:	test   dh,0xe
  419366:	je     0x41934b
  419368:	or     eax,0xfc1924d7
  41936d:	mov    al,BYTE PTR [edx-0x1d25af4a]
  419373:	mov    bl,0xee
  419375:	mul    ebp
  419377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419378:	push   esp
  419379:	cmp    edx,esi
  41937b:	xor    esi,ebp
  41937d:	push   edx
  41937e:	in     al,dx
  41937f:	and    BYTE PTR ds:0xcf637767,0x48
  419386:	sbb    esi,DWORD PTR [esi+0x6e]
  419389:	and    DWORD PTR [ebp+0x3c],ecx
  41938c:	in     al,dx
  41938d:	es xchg ebx,eax
  41938f:	pusha  
  419390:	mov    esi,0x81f9625f
  419395:	xor    eax,0xeb226820
  41939a:	jp     0x41938b
  41939c:	pop    ebp
  41939d:	jno    0x419351
  41939f:	loopne 0x41940a
  4193a1:	daa    
  4193a2:	addr16 sti 
  4193a4:	pop    ebx
  4193a5:	jo     0x419390
  4193a7:	fcomp  DWORD PTR [eax-0x59fbfd6f]
  4193ad:	cdq    
  4193ae:	jo     0x41934d
  4193b0:	mov    BYTE PTR [edi],bl
  4193b2:	cld    
  4193b3:	pop    esi
  4193b4:	or     bl,bh
  4193b6:	lea    esp,[eax-0x3d]
  4193b9:	xor    ebx,esi
  4193bb:	sbb    al,0x5d
  4193bd:	sahf   
  4193be:	test   BYTE PTR [edi+0x1],bl
  4193c1:	(bad)  
  4193c2:	mov    edx,0x900631c0
  4193c7:	scas   eax,DWORD PTR es:[edi]
  4193c8:	test   eax,0xc823a31d
  4193cd:	xchg   ebx,eax
  4193ce:	cwde   
  4193cf:	shl    DWORD PTR [esi+0x2ed24ac1],0x91
  4193d6:	imul   bl
  4193d8:	frstor [esi-0x458aa8cd]
  4193de:	jnp    0x419393
  4193e0:	xor    esi,DWORD PTR ds:0x577f9572
  4193e6:	adc    ah,dh
  4193e8:	daa    
  4193e9:	sbb    eax,0x1fa6c0c9
  4193ee:	adc    eax,DWORD PTR [edi+0x2b4c59d1]
  4193f4:	adc    dh,BYTE PTR [ecx+eiz*8+0xa]
  4193f8:	test   al,0x2
  4193fa:	push   esi
  4193fb:	mov    ds,WORD PTR [ebp-0x12a4bfd2]
  419401:	jne    0x4193ea
  419403:	(bad)  
  419404:	mov    ds:0x3d816e8e,al
  419409:	sub    al,0x57
  41940b:	xchg   esi,eax
  41940c:	aaa    
  41940d:	xchg   edx,eax
  41940e:	mov    ah,0xcd
  419410:	adc    BYTE PTR [edi-0x19ca1d66],0xec
  419417:	inc    ebp
  419418:	leave  
  419419:	jb     0x4193e5
  41941b:	(bad)  
  41941c:	sbb    DWORD PTR [ecx+0x6e],ecx
  41941f:	test   BYTE PTR [ecx+eax*8-0x10],ah
  419423:	int    0xa8
  419425:	repz push esp
  419427:	jns    0x4193dd
  419429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41942a:	cwde   
  41942b:	and    bh,bl
  41942d:	mov    BYTE PTR [esi],0x5f
  419430:	aad    0xe4
  419432:	clc    
  419433:	mov    BYTE PTR ss:[eax+0x22308f48],bh
  41943a:	out    dx,eax
  41943b:	std    
  41943c:	push   0x21
  41943e:	lea    esi,[ecx]
  419440:	cli    
  419441:	mov    ch,0x5b
  419443:	jge    0x419479
  419445:	repz add BYTE PTR [edi],0x1b
  419449:	pop    es
  41944a:	push   esi
  41944b:	push   esi
  41944c:	jg     0x4193e4
  41944e:	cmp    eax,0xcd0619e9
  419453:	jmp    0xe678:0x8a2367b9
  41945a:	jle    0x419408
  41945c:	xchg   ebp,eax
  41945d:	add    DWORD PTR [eax],0x21
  419460:	out    dx,eax
  419461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419462:	cmp    BYTE PTR [ecx-0x52],dh
  419465:	or     ch,BYTE PTR [edi]
  419467:	jle    0x419404
  419469:	mov    ebp,0xa6030f2e
  41946e:	mov    ch,0xe1
  419470:	fucom  st(4)
  419472:	mov    cl,0x5c
  419474:	xchg   ecx,eax
  419475:	ja     0x4194a1
  419477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419478:	iret   
  419479:	hlt    
  41947a:	retf   0x85e9
  41947d:	jo     0x4194c9
  41947f:	mov    esi,esp
  419481:	repnz push edx
  419483:	(bad)  
  419484:	jb     0x419425
  419486:	pop    eax
  419487:	out    dx,eax
  419488:	aas    
  419489:	adc    BYTE PTR [esi-0x33dbb9cc],0xe9
  419490:	in     al,dx
  419491:	out    dx,al
  419492:	xchg   BYTE PTR [esi-0x19eb7870],bh
  419498:	(bad)  
  419499:	stos   DWORD PTR es:[edi],eax
  41949a:	int3   
  41949b:	ret    0x5e76
  41949e:	lock fmul DWORD PTR [esi]
  4194a1:	mov    al,ds:0x9085e5d9
  4194a6:	loopne 0x4194be
  4194a8:	loope  0x4194f8
  4194aa:	add    esi,DWORD PTR [edx+0x1048c94e]
  4194b0:	imul   esp,DWORD PTR [esi-0x5e],0xda49babd
  4194b7:	push   ecx
  4194b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194b9:	adc    dh,0x2a
  4194bc:	jl     0x419454
  4194be:	sub    al,0x68
  4194c0:	cld    
  4194c1:	outs   dx,DWORD PTR ds:[esi]
  4194c2:	stos   DWORD PTR es:[edi],eax
  4194c3:	(bad)  
  4194c5:	clc    
  4194c6:	or     al,0x58
  4194c8:	lock cld 
  4194ca:	clc    
  4194cb:	fnstsw WORD PTR [eax+0x34190143]
  4194d1:	push   ebp
  4194d2:	fs ja  0x419537
  4194d5:	in     eax,dx
  4194d6:	(bad)  
  4194d7:	lds    esp,FWORD PTR [eax+0x541e64b2]
  4194dd:	mov    eax,ds:0xcc47f22
  4194e2:	outs   dx,DWORD PTR ds:[esi]
  4194e3:	mov    ebx,0x953ba273
  4194e8:	adc    eax,0xb12ee542
  4194ed:	loop   0x419566
  4194ef:	inc    ebx
  4194f0:	xor    eax,DWORD PTR [edi+0x2f]
  4194f3:	popa   
  4194f4:	push   ss
  4194f5:	jmp    0x92a217d4
  4194fa:	cmp    eax,0x3aecb570
  4194ff:	dec    esi
  419500:	(bad)  
  419501:	push   ebx
  419502:	sbb    BYTE PTR [edx+ecx*2],ch
  419505:	popa   
  419506:	add    edx,ebx
  419508:	ret    
  419509:	jno    0x41950e
  41950b:	test   eax,0x45b77f95
  419510:	mov    ecx,esp
  419512:	neg    DWORD PTR [ebx]
  419514:	dec    bp
  419516:	jns    0x419510
  419518:	retf   0x91e5
  41951b:	dec    si
  41951d:	cwde   
  41951e:	pop    esi
  41951f:	pop    ebp
  419520:	mov    bl,0xbc
  419522:	inc    ebp
  419523:	pop    edx
  419524:	sahf   
  419525:	(bad)  
  419526:	int3   
  419527:	or     ch,dl
  419529:	leave  
  41952a:	and    ecx,DWORD PTR [ebx-0x15]
  41952d:	pushf  
  41952e:	sbb    eax,DWORD PTR [esi-0x4c]
  419531:	ss mov ecx,0x28a76f6d
  419537:	mov    edx,0xd3157161
  41953c:	mov    ebp,0x80d623c6
  419541:	dec    ebx
  419542:	out    0x97,al
  419544:	sbb    ecx,DWORD PTR [ecx+ebp*2-0x26ee32ba]
  41954b:	inc    ecx
  41954c:	sub    esi,DWORD PTR ds:[edx+0xf]
  419550:	fsub   st,st(4)
  419552:	into   
  419553:	push   0x62e8dc80
  419558:	pop    ecx
  419559:	and    BYTE PTR [ecx-0x31],0xa2
  41955d:	xor    al,0x40
  41955f:	cmp    al,BYTE PTR [eax-0xd]
  419562:	or     al,0x9a
  419564:	jae    0x4195db
  419566:	jecxz  0x419533
  419568:	mov    ch,BYTE PTR [ebx]
  41956a:	fisub  DWORD PTR [ecx-0x496c7d13]
  419570:	jge    0x41955b
  419572:	cmp    DWORD PTR [eax],edi
  419574:	gs push ebp
  419576:	scas   eax,DWORD PTR es:[edi]
  419577:	cli    
  419578:	pop    ds
  419579:	dec    ecx
  41957a:	stos   DWORD PTR es:[edi],eax
  41957b:	mov    cl,0x4
  41957d:	mov    ds:0x8bcaaf22,eax
  419582:	or     eax,0x2b9106c9
  419587:	call   0x6c4564ab
  41958c:	and    BYTE PTR [esi],dl
  41958e:	in     al,dx
  41958f:	add    edi,DWORD PTR [edx-0x3e8db50e]
  419595:	fistp  DWORD PTR [esi+0x31]
  419598:	and    ebx,0xffffff9e
  41959b:	jle    0x419531
  41959d:	jmp    0xc5104349
  4195a2:	pop    edx
  4195a3:	inc    esp
  4195a4:	push   cs
  4195a5:	mov    cl,0x38
  4195a7:	sub    DWORD PTR ds:0xf39c8f7c,esi
  4195ad:	data16 stc 
  4195af:	repz xor al,0x40
  4195b2:	call   0x70ccb841
  4195b7:	jl     0x419577
  4195b9:	les    edi,FWORD PTR [eax-0x1e]
  4195bc:	pop    ecx
  4195bd:	loope  0x419551
  4195bf:	jmp    0x419609
  4195c1:	rcr    DWORD PTR [esp+eax*4+0x2b],0xc
  4195c6:	add    eax,0x7b26334
  4195cb:	dec    esp
  4195cc:	pop    edx
  4195cd:	mov    dh,0xbd
  4195cf:	inc    eax
  4195d0:	test   al,0x74
  4195d2:	dec    edx
  4195d3:	push   eax
  4195d4:	leave  
  4195d5:	or     BYTE PTR [ebp-0x24],bl
  4195d8:	cli    
  4195d9:	push   0xfffffffc
  4195db:	jge    0x4195af
  4195dd:	pop    edi
  4195de:	xor    BYTE PTR [esi-0x6b552f25],dh
  4195e4:	aam    0xc7
  4195e6:	push   ecx
  4195e7:	mov    ch,0x4f
  4195e9:	add    BYTE PTR [edi+0x6f49aa3e],bl
  4195ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195f0:	sbb    DWORD PTR [edx-0x62],ebx
  4195f3:	loop   0x419610
  4195f5:	and    dl,ch
  4195f7:	mov    ebp,0x5aacbfda
  4195fc:	int3   
  4195fd:	lods   al,BYTE PTR ds:[esi]
  4195fe:	jmp    0xca10:0x7c59cd69
  419605:	add    DWORD PTR [esi-0x35e0739a],esp
  41960b:	in     eax,0x33
  41960d:	adc    DWORD PTR [eax],edx
  41960f:	sbb    ebp,DWORD PTR [edi+0x573955df]
  419615:	sub    ch,BYTE PTR [edi-0x286d31c6]
  41961b:	cs mov ebx,0xebb74f77
  419621:	dec    ecx
  419622:	addr16 mov ebp,0x4bb236cc
  419628:	cmp    BYTE PTR [eax-0x60],ah
  41962b:	inc    esi
  41962c:	push   cs
  41962d:	or     DWORD PTR [ecx],esi
  41962f:	data16 mov cs,WORD PTR ds:0x6e5d397a
  419636:	bound  ecx,QWORD PTR [eax+0x6f]
  419639:	mov    al,BYTE PTR [edi-0x60]
  41963c:	push   esi
  41963d:	xor    al,0x5a
  41963f:	mov    WORD PTR [ecx+0x1e],fs
  419642:	jecxz  0x4195f0
  419644:	jl     0x419673
  419646:	aaa    
  419647:	nop
  419648:	xchg   edi,eax
  419649:	stos   BYTE PTR es:[edi],al
  41964a:	imul   esi,DWORD PTR [ebx],0x46
  41964d:	jb     0x4195e0
  41964f:	jp     0x419694
  419651:	call   FWORD PTR [ecx+0x5c8d5fee]
  419657:	or     DWORD PTR [eax+edx*1],0x48
  41965b:	imul   ebx,DWORD PTR [ebp-0x3dacc53f],0x8c2e35f2
  419665:	fld    QWORD PTR [esi]
  419667:	add    al,0x43
  419669:	enter  0xcf52,0xb4
  41966d:	sub    ch,BYTE PTR [ecx+0x47]
  419670:	ins    BYTE PTR es:[edi],dx
  419671:	jb     0x419695
  419673:	dec    ebx
  419674:	mov    sp,0xb01c
  419678:	test   al,0xf5
  41967a:	je     0x41962e
  41967c:	xor    edi,edx
  41967e:	sub    esi,eax
  419680:	mov    bl,0x58
  419682:	push   0xffffffec
  419684:	mov    dl,0x4b
  419686:	mov    dh,0xe5
  419688:	pop    ebx
  419689:	les    esp,FWORD PTR [edi]
  41968b:	inc    ebx
  41968c:	mov    al,0x1d
  41968e:	push   ecx
  41968f:	pop    ecx
  419690:	popa   
  419691:	(bad)  
  419692:	adc    DWORD PTR [ecx],esp
  419694:	and    edi,DWORD PTR [eax+0x79]
  419697:	mov    ebp,0x12cb04e4
  41969c:	das    
  41969d:	popf   
  41969e:	in     al,0x6d
  4196a0:	pushf  
  4196a1:	jo     0x419705
  4196a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196a4:	psrlw  mm1,QWORD PTR [eax]
  4196a7:	jle    0x6b137963
  4196ad:	stos   DWORD PTR es:[edi],eax
  4196ae:	push   esp
  4196af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196b0:	mov    ebx,0xda28c118
  4196b5:	mov    dl,0x9f
  4196b7:	mov    edi,0x87bbab16
  4196bc:	add    eax,0x6d31aa36
  4196c1:	adc    al,0xd5
  4196c3:	into   
  4196c4:	fild   WORD PTR [esi-0x2b628e3a]
  4196ca:	or     dl,BYTE PTR [edx]
  4196cc:	js     0x419692
  4196ce:	pop    es
  4196cf:	push   cs
  4196d0:	ret    0x12f0
  4196d3:	jecxz  0x4196c5
  4196d5:	push   esp
  4196d6:	repz aam 0x41
  4196d9:	add    BYTE PTR [eax-0x31],al
  4196dc:	data16 int 0x33
  4196df:	outs   dx,BYTE PTR ds:[esi]
  4196e0:	rcl    BYTE PTR [eax],0xea
  4196e3:	daa    
  4196e4:	mov    DWORD PTR [edi+0x1b83603d],esp
  4196ea:	jb     0x41975f
  4196ec:	ret    
  4196ed:	out    dx,al
  4196ee:	icebp  
  4196ef:	lods   al,BYTE PTR ds:[esi]
  4196f0:	sub    BYTE PTR [edx-0x70],al
  4196f3:	xlat   BYTE PTR ds:[ebx]
  4196f4:	xor    eax,0x1c4962f8
  4196f9:	das    
  4196fa:	daa    
  4196fb:	add    cl,ch
  4196fd:	mov    ds:0x778ada56,eax
  419702:	cwde   
  419703:	jl     0x419711
  419705:	mov    ds:0x8a3fc3ae,al
  41970a:	push   ebp
  41970b:	cwde   
  41970c:	pop    ebx
  41970d:	sbb    eax,0x66181015
  419712:	pop    bx
  419714:	das    
  419715:	lds    edx,FWORD PTR [eax+ebx*4]
  419718:	add    edi,DWORD PTR gs:[edi]
  41971b:	js     0x419746
  41971d:	jo     0x419739
  41971f:	dec    eax
  419720:	rcl    BYTE PTR [edi],0x8a
  419723:	xor    ebp,edx
  419725:	pop    ecx
  419726:	dec    esp
  419727:	mov    ebx,0x5ed298be
  41972c:	inc    eax
  41972d:	adc    DWORD PTR [ebp-0xe],esp
  419730:	mov    cl,0xec
  419732:	sbb    DWORD PTR [esi-0x774191a5],ecx
  419738:	in     al,0x78
  41973a:	lock push ecx
  41973c:	ja     0x4197a9
  41973e:	cs push eax
  419740:	pop    edx
  419741:	pop    ecx
  419742:	inc    ecx
  419743:	xchg   ecx,eax
  419744:	and    al,0x55
  419746:	cs aas 
  419748:	daa    
  419749:	xchg   ebp,eax
  41974a:	aaa    
  41974b:	arpl   ax,ax
  41974d:	adc    al,0x55
  41974f:	sti    
  419750:	xchg   esp,eax
  419751:	push   eax
  419752:	mov    dl,0x30
  419754:	pop    edx
  419755:	xor    esp,DWORD PTR [eax+0x307eca77]
  41975b:	or     al,0xa3
  41975d:	or     eax,0x1a02982d
  419762:	fcmovnbe st,st(7)
  419764:	ss (bad) 
  419767:	neg    BYTE PTR [ebx-0x153c41b]
  41976d:	pop    ebp
  41976e:	hlt    
  41976f:	xchg   edi,eax
  419771:	data16 mov al,0x4c
  419774:	hlt    
  419775:	lahf   
  419776:	lea    eax,[edx]
  419778:	or     eax,0xdb006199
  41977d:	sub    esi,eax
  41977f:	adc    eax,0x5aca700e
  419784:	xor    eax,0xad863914
  419789:	loopne 0x419756
  41978b:	outs   dx,BYTE PTR ds:[esi]
  41978c:	adc    eax,0x8f67d319
  419791:	pusha  
  419792:	rcl    BYTE PTR [ebp+0x3b],cl
  419795:	stc    
  419796:	adc    edi,DWORD PTR [esi+0x26ec8cac]
  41979c:	add    al,0xec
  41979e:	push   0xffffffcc
  4197a0:	cs stos DWORD PTR es:[edi],eax
  4197a2:	mov    esi,0x6d5c2ada
  4197a7:	xor    DWORD PTR [edx],edi
  4197a9:	mov    esi,0xc004458e
  4197ae:	jbe    0x419743
  4197b0:	into   
  4197b1:	retf   
  4197b2:	mov    al,0x95
  4197b4:	or     eax,0xf9f2ab2b
  4197b9:	jae    0x41978b
  4197bb:	jmp    0xeae1:0x39db734c
  4197c2:	jecxz  0x4197b1
  4197c4:	inc    ebx
  4197c5:	mov    dl,0xc5
  4197c7:	das    
  4197c8:	and    ebx,DWORD PTR [edx+0x47]
  4197cb:	stos   BYTE PTR es:[edi],al
  4197cc:	pop    ebp
  4197cd:	jp     0x419751
  4197cf:	aad    0x29
  4197d1:	dec    edi
  4197d2:	add    esi,edx
  4197d4:	imul   ebp,DWORD PTR [ebx+0x5c5c763d],0x3a
  4197db:	stos   BYTE PTR es:[edi],al
  4197dc:	pop    edi
  4197dd:	lods   al,BYTE PTR ds:[esi]
  4197de:	std    
  4197df:	fsubr  st,st(3)
  4197e1:	lods   al,BYTE PTR ds:[esi]
  4197e2:	and    bh,bl
  4197e4:	adc    DWORD PTR [eax-0x62fa1954],ebp
  4197ea:	std    
  4197eb:	inc    ebp
  4197ec:	(bad)  
  4197ed:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4197ef:	push   ds
  4197f0:	pushf  
  4197f1:	aam    0xa0
  4197f3:	fwait
  4197f4:	jae    0x41979b
  4197f6:	sbb    bh,ah
  4197f8:	scas   al,BYTE PTR es:[edi]
  4197f9:	retf   
  4197fa:	ror    BYTE PTR [ebp+0x70],0x80
  4197fe:	jb     0x419787
  419800:	adc    eax,0x3cbdf1ac
  419805:	addr16 mov ecx,0xa58741ca
  41980b:	scas   al,BYTE PTR es:[edi]
  41980c:	cwde   
  41980d:	pop    edx
  41980e:	adc    al,0x11
  419810:	adc    ecx,DWORD PTR [ebx+0x6fa6dc45]
  419816:	add    al,0x78
  419818:	icebp  
  419819:	clc    
  41981a:	push   0x40ad6b32
  41981f:	aaa    
  419820:	jb     0x4197f2
  419822:	(bad)  
  419823:	dec    ecx
  419824:	pop    ebx
  419825:	sar    DWORD PTR [ebp+0x7353de4a],1
  41982b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41982c:	dec    ebp
  41982d:	mov    esi,0x4574dd0d
  419832:	out    dx,al
  419833:	inc    esp
  419834:	jmp    0x419861
  419836:	leave  
  419837:	sub    eax,0x25359305
  41983c:	sub    ebp,ecx
  41983e:	pop    ebp
  41983f:	mov    cl,0x17
  419841:	sar    BYTE PTR [ebp-0x46],0xea
  419845:	mov    ch,0x81
  419847:	cld    
  419848:	jmp    0x8524:0xdd2ac350
  41984f:	(bad)  
  419850:	jno    0x419826
  419852:	jecxz  0x4197d6
  419854:	push   edx
  419855:	pushf  
  419856:	mov    esp,0xd38d9314
  41985b:	cmp    eax,0x70b65854
  419860:	outs   dx,DWORD PTR ds:[esi]
  419861:	mov    ch,0xcf
  419863:	dec    edi
  419864:	popf   
  419865:	mov    ah,0x47
  419867:	push   ebx
  419868:	fnstcw WORD PTR [eax-0x1a5f86f0]
  41986e:	sub    BYTE PTR [eax],bl
  419870:	mov    esp,0x6856f8ca
  419875:	es sub eax,0x46c22dcc
  41987b:	jmp    0x7f53:0x85fdb980
  419882:	push   ebp
  419883:	sbb    eax,0xbfef29cc
  419888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419889:	out    0x52,al
  41988b:	adc    cl,BYTE PTR [ebx]
  41988d:	in     al,dx
  41988e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41988f:	lods   eax,DWORD PTR ds:[esi]
  419890:	cmc    
  419891:	sub    DWORD PTR [edx-0x2cf11bd6],edx
  419897:	cmp    eax,0xa724d98e
  41989c:	imul   edi,DWORD PTR [edi+0x47],0x557f214
  4198a3:	scas   eax,DWORD PTR es:[edi]
  4198a4:	dec    DWORD PTR [esi+0x4b]
  4198a7:	es push edi
  4198a9:	dec    edi
  4198aa:	sbb    al,0x1c
  4198ac:	movlps QWORD PTR [ebx-0x1d],xmm1
  4198b0:	data16 aam 0xce
  4198b3:	stc    
  4198b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198b5:	cmp    ebp,DWORD PTR [ecx-0x318dc4b8]
  4198bb:	mov    bh,0x55
  4198bd:	jno    0x419927
  4198bf:	jno    0x419908
  4198c1:	jg     0x4198b1
  4198c3:	pop    ebp
  4198c4:	add    BYTE PTR [esi+ebp*1],dl
  4198c7:	arpl   WORD PTR [ecx],bp
  4198c9:	jmp    0x45e3:0x562ed748
  4198d0:	adc    eax,0xfd5411fe
  4198d5:	(bad)  
  4198d7:	sar    dl,cl
  4198d9:	loope  0x419888
  4198db:	xchg   dh,al
  4198dd:	pop    ss
  4198de:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4198e0:	adc    BYTE PTR [esi],bh
  4198e2:	call   0xb266:0xbbd6c472
  4198e9:	and    ebp,DWORD PTR [edi+ebx*4]
  4198ec:	mov    edx,0x1910fdfd
  4198f1:	mov    edx,0x10bd9ba3
  4198f6:	inc    eax
  4198f7:	inc    ebp
  4198f8:	push   eax
  4198f9:	jle    0x4198f6
  4198fb:	mov    dh,0x4f
  4198fd:	inc    edx
  4198fe:	dec    esi
  4198ff:	mov    al,ds:0xb55a4a8a
  419904:	jae    0x41996d
  419906:	and    eax,0xf2112119
  41990b:	and    bl,BYTE PTR ds:0x9dffe3e0
  419911:	jmp    0x4198e8
  419913:	adc    al,0x47
  419915:	jmp    0xa74c:0x21b8612
  41991c:	xor    al,0x27
  41991e:	test   BYTE PTR [ecx+0x2612e4c9],ah
  419924:	dec    ebx
  419925:	pop    ds
  419926:	outs   dx,BYTE PTR ds:[esi]
  419927:	cld    
  419928:	dec    esp
  419929:	int    0x3f
  41992b:	add    bh,BYTE PTR [ebx]
  41992d:	cwde   
  41992e:	je     0x419937
  419930:	mul    DWORD PTR [edx]
  419932:	stos   BYTE PTR es:[edi],al
  419933:	ins    DWORD PTR es:[edi],dx
  419934:	cmp    al,0xad
  419936:	imul   ebx,DWORD PTR [ecx-0x3],0xa9e775fe
  41993d:	inc    ecx
  41993e:	sub    ah,BYTE PTR [ebx-0x6e]
  419941:	aam    0xbc
  419943:	jo     0x4198d5
  419945:	and    eax,0xdf3856ea
  41994a:	popa   
  41994b:	jbe    0x419987
  41994d:	js     0x419959
  41994f:	pop    edi
  419950:	std    
  419951:	retf   0x1cd6
  419954:	adc    DWORD PTR [ecx-0x60611269],0x9507fa70
  41995e:	fs inc edx
  419960:	test   DWORD PTR [ecx],edx
  419962:	inc    ebx
  419963:	sub    ecx,ebp
  419965:	sbb    DWORD PTR [ebp-0x1e],ecx
  419968:	xor    al,0x95
  41996a:	inc    esi
  41996b:	xchg   esi,eax
  41996c:	popf   
  41996d:	nop
  41996e:	cmp    al,0xda
  419970:	fdivr  DWORD PTR [ecx-0x68432f08]
  419976:	(bad)  
  419977:	scas   eax,DWORD PTR es:[edi]
  419978:	fwait
  419979:	pop    ds
  41997a:	jb     0x419973
  41997c:	into   
  41997d:	dec    eax
  41997e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41997f:	popf   
  419980:	ja     0x4199b7
  419982:	call   0x6b13eb52
  419987:	mov    bl,0x51
  419989:	pop    esp
  41998a:	inc    eax
  41998b:	ret    
  41998c:	sti    
  41998d:	and    al,0xde
  41998f:	rol    DWORD PTR [edi*2-0x74c93281],0x72
  419997:	ret    0x50d2
  41999a:	pop    esp
  41999b:	pop    ecx
  41999c:	(bad)  
  41999d:	sbb    ebx,ebx
  41999f:	cdq    
  4199a0:	or     BYTE PTR [ecx+0x36],al
  4199a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199a4:	cmp    edi,ebx
  4199a6:	or     BYTE PTR [edx+0x1e],0xc
  4199aa:	aam    0x69
  4199ac:	call   0x2c70:0xde6f4810
  4199b3:	xlat   BYTE PTR ds:[ebx]
  4199b4:	sbb    eax,0xc7d7957c
  4199b9:	pop    ebp
  4199ba:	rol    edx,cl
  4199bc:	pusha  
  4199bd:	mov    ds:0x19637402,eax
  4199c2:	sub    al,0x2
  4199c4:	xchg   esi,eax
  4199c5:	sbb    ah,cl
  4199c7:	lock ins BYTE PTR es:[edi],dx
  4199c9:	popf   
  4199ca:	sub    eax,edi
  4199cc:	in     al,0x1a
  4199ce:	push   es
  4199cf:	mov    ebp,0x33b9081c
  4199d4:	lock repnz or edx,0x25
  4199d9:	in     eax,0x8c
  4199db:	jmp    0x582aab51
  4199e0:	pop    ebp
  4199e1:	dec    ebx
  4199e2:	dec    ecx
  4199e3:	cwde   
  4199e4:	or     esp,DWORD PTR [edi+0x4]
  4199e7:	mov    edx,0x2a8b7df2
  4199ec:	mov    cl,0xa2
  4199ee:	inc    ebp
  4199ef:	out    dx,eax
  4199f0:	jl     0x4199d6
  4199f2:	repnz ds push ss
  4199f5:	cmp    al,0x2
  4199f7:	les    ebx,FWORD PTR [esi]
  4199f9:	jo     0x419980
  4199fb:	dec    eax
  4199fc:	popa   
  4199fd:	inc    eax
  4199fe:	in     eax,0x58
  419a00:	arpl   WORD PTR [edi-0x1b],bp
  419a03:	shr    esi,0x73
  419a06:	push   esi
  419a07:	lds    edx,FWORD PTR [bp+si-0x3453]
  419a0c:	jno    0x419a6d
  419a0e:	mov    ah,0x9a
  419a10:	lods   eax,DWORD PTR ds:[esi]
  419a11:	mov    al,0x47
  419a13:	sub    BYTE PTR [edx+0x50],ah
  419a16:	adc    dh,bl
  419a18:	adc    dh,dh
  419a1a:	and    BYTE PTR [edx+0x7e0c55c0],bl
  419a20:	scas   al,BYTE PTR es:[edi]
  419a21:	jmp    0x9dab34a2
  419a26:	or     dh,BYTE PTR [ecx]
  419a28:	inc    eax
  419a29:	xchg   edi,eax
  419a2a:	add    DWORD PTR [ebx+0x41b62c2f],eax
  419a30:	inc    ebx
  419a31:	or     DWORD PTR [ecx-0x4b],esp
  419a34:	imul   ebp,DWORD PTR [edi+ebx*8],0x3d47af4d
  419a3b:	enter  0x9c80,0xbc
  419a3f:	mov    al,ds:0x88feb323
  419a44:	pop    es
  419a45:	xor    esi,DWORD PTR [ebx]
  419a47:	pop    edx
  419a48:	inc    esp
  419a49:	std    
  419a4a:	ss push eax
  419a4c:	dec    edx
  419a4d:	pushf  
  419a4e:	mov    al,ds:0x88b77e74
  419a53:	mov    ah,0x7a
  419a55:	retf   
  419a56:	mov    eax,0x6614bfa0
  419a5b:	pusha  
  419a5c:	mov    ebp,0xea61ba5
  419a61:	loope  0x419ab4
  419a63:	add    eax,0x9e41eeb7
  419a68:	sub    BYTE PTR ds:0xd6130734,ch
  419a6e:	push   ss
  419a6f:	(bad)  
  419a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a71:	in     al,0xc0
  419a73:	aaa    
  419a74:	ins    BYTE PTR es:[edi],dx
  419a75:	sbb    eax,DWORD PTR [ebx]
  419a77:	retf   
  419a78:	int3   
  419a79:	sbb    al,0x62
  419a7b:	mov    dl,0x53
  419a7d:	and    ebp,DWORD PTR [esi+ebp*2]
  419a80:	popa   
  419a81:	mov    edx,0xcb4dd9a1
  419a86:	imul   esi,DWORD PTR [esi+0x7d6266dc],0x17
  419a8d:	fwait
  419a8e:	mov    eax,0x3d2d4713
  419a93:	inc    esi
  419a94:	push   esi
  419a95:	test   al,0x7c
  419a97:	popa   
  419a98:	call   FWORD PTR [ebp+eiz*8-0x4315e1dd]
  419a9f:	pusha  
  419aa0:	add    cl,dh
  419aa2:	outs   dx,DWORD PTR ds:[esi]
  419aa3:	test   DWORD PTR [ecx-0x45],0x8789b1e9
  419aaa:	mov    bh,BYTE PTR [ecx+0x57]
  419aad:	test   al,0x61
  419aaf:	mov    cl,BYTE PTR [ebp+0x4a05f72b]
  419ab5:	add    dh,BYTE PTR ds:0x77e2afd5
  419abb:	lods   al,BYTE PTR ds:[esi]
  419abc:	test   DWORD PTR [eax],ebp
  419abe:	out    0x9c,eax
  419ac0:	(bad)  
  419ac1:	add    ebp,esp
  419ac3:	push   ecx
  419ac4:	and    edi,DWORD PTR [edx+0x38]
  419ac7:	mov    ch,BYTE PTR [ebx]
  419ac9:	or     al,0x24
  419acb:	mov    ds:0x9dd9a96d,al
  419ad0:	pop    esp
  419ad1:	maskmovq mm2,mm0
  419ad4:	ror    DWORD PTR [eax+0x76cda2ac],0x36
  419adb:	dec    eax
  419adc:	xor    al,0x81
  419ade:	ficomp DWORD PTR [ecx+edi*4+0x25]
  419ae2:	pop    edx
  419ae3:	inc    ebx
  419ae4:	xor    dh,BYTE PTR [edi+0x4b86c796]
  419aea:	ins    BYTE PTR es:[edi],dx
  419aeb:	mov    esp,0x99e1a64a
  419af0:	mov    esi,0x2aed7549
  419af5:	mov    BYTE PTR [ecx],dh
  419af7:	cmp    al,0x81
  419af9:	add    DWORD PTR [esi+0x68],edx
  419afc:	ins    BYTE PTR es:[edi],dx
  419afd:	test   eax,0x21770b0d
  419b02:	push   ds
  419b03:	adc    BYTE PTR [edx],al
  419b05:	push   esp
  419b06:	addr16 xchg ebx,eax
  419b08:	sub    dh,BYTE PTR [esp+edi*1-0x5a32d6b4]
  419b0f:	jne    0x419abd
  419b11:	je     0x419aa7
  419b13:	mov    esi,0xfa5c3f5a
  419b18:	fbld   TBYTE PTR [ebp-0x18]
  419b1b:	jmp    0x9676:0x99672f54
  419b22:	popa   
  419b23:	xchg   ebp,eax
  419b24:	mov    bh,0xec
  419b26:	push   0xb74126f9
  419b2b:	repz cmp edx,DWORD PTR [esi+0x1f9084d3]
  419b32:	cmp    al,0x74
  419b34:	xchg   ebx,eax
  419b35:	rol    DWORD PTR [ebp+0x3bb987e],1
  419b3b:	jae    0x419b25
  419b3d:	mov    cl,BYTE PTR [eax+0x468eecbc]
  419b43:	push   ds
  419b44:	xchg   esp,eax
  419b45:	fs add eax,0xfffffff9
  419b49:	inc    edi
  419b4a:	(bad)  
  419b4b:	int3   
  419b4c:	cmp    DWORD PTR [ebx-0x37c9a526],eax
  419b52:	ds xchg edx,eax
  419b54:	or     cl,BYTE PTR [edi+0x63e3a3cd]
  419b5a:	cwde   
  419b5b:	scas   al,BYTE PTR es:[edi]
  419b5c:	cmp    eax,0xc76b34d7
  419b61:	shr    BYTE PTR [ecx+0x5e5f329d],cl
  419b67:	and    al,0xe2
  419b69:	int    0xcd
  419b6b:	call   0xe5c2:0x4eae456d
  419b72:	dec    ecx
  419b73:	jmp    0x419b25
  419b75:	ds retf 0xaed2
  419b79:	adc    BYTE PTR [ecx],dl
  419b7b:	mov    al,ds:0xc978fef1
  419b80:	xchg   esp,eax
  419b81:	shl    DWORD PTR [edi],0x79
  419b84:	sub    DWORD PTR [esi],ecx
  419b86:	ret    0x1e4d
  419b89:	leave  
  419b8a:	in     eax,dx
  419b8b:	shl    DWORD PTR [edi-0x2c],0x8d
  419b8f:	in     eax,dx
  419b90:	push   edx
  419b91:	ficom  WORD PTR [ebp-0x64d608a6]
  419b97:	cmp    BYTE PTR [ebx+0x5aa50888],al
  419b9d:	adc    dh,BYTE PTR [ebp+0x0]
  419ba0:	jp     0x419b36
  419ba2:	es je  0x419b41
  419ba5:	arpl   bx,bp
  419ba7:	gs cli 
  419ba9:	in     al,dx
  419baa:	xchg   ebp,eax
  419bab:	jg     0x419c0d
  419bad:	shl    esi,0x14
  419bb0:	(bad)  
  419bb1:	xchg   esi,eax
  419bb2:	jnp    0x419b72
  419bb4:	add    edi,eax
  419bb6:	inc    esp
  419bb7:	hlt    
  419bb8:	sub    al,0xb1
  419bba:	shl    ecx,0x3e
  419bbd:	fwait
  419bbe:	test   DWORD PTR [ecx-0x3b],0xf5288076
  419bc5:	dec    ecx
  419bc6:	mov    cl,0x17
  419bc8:	mov    ebp,0x51aa07aa
  419bcd:	(bad)  
  419bce:	aam    0xa
  419bd0:	push   ss
  419bd1:	xchg   edi,eax
  419bd2:	ss pop ecx
  419bd4:	inc    eax
  419bd5:	add    BYTE PTR [ecx],ah
  419bd7:	pop    esp
  419bd8:	and    DWORD PTR [ebx-0x7fcdd084],eax
  419bde:	inc    ebx
  419bdf:	inc    edi
  419be0:	add    DWORD PTR [edi-0x47],0x3ed23275
  419be7:	or     BYTE PTR [esi],0x62
  419bea:	jge    0x419c3f
  419bec:	fldcw  WORD PTR [ebx+ebp*2]
  419bef:	sbb    edi,DWORD PTR [esi]
  419bf1:	mov    esi,edi
  419bf3:	ror    BYTE PTR ds:0x106b597d,1
  419bf9:	repnz mov edi,0x398e7a05
  419bff:	fucomi st,st(2)
  419c01:	in     eax,dx
  419c02:	jmp    0x3b3082bb
  419c07:	ret    0x26ad
  419c0a:	inc    ecx
  419c0b:	adc    cl,BYTE PTR [esi+edx*8-0x65]
  419c0f:	cmc    
  419c10:	jle    0x419c77
  419c12:	fs pusha 
  419c14:	pop    es
  419c15:	pop    esi
  419c16:	std    
  419c17:	ds mov eax,0x29af899c
  419c1d:	iret   
  419c1e:	adc    BYTE PTR [eax-0x384ed1d3],al
  419c24:	jno    0x419c72
  419c26:	rol    BYTE PTR [ecx],1
  419c28:	jmp    0xa4c8:0x434e168d
  419c2f:	sbb    al,0xc7
  419c31:	jp     0x419bba
  419c33:	inc    ebp
  419c35:	mov    al,0xdb
  419c37:	mov    ebp,ss
  419c39:	pop    ds
  419c3a:	adc    cl,BYTE PTR [edx-0x4177899f]
  419c40:	sub    BYTE PTR [ecx+0x3e],0x19
  419c44:	jp     0x419cbf
  419c46:	fwait
  419c47:	sub    eax,0xeaa879d
  419c4c:	stos   DWORD PTR es:[edi],eax
  419c4d:	push   0x7563c755
  419c52:	das    
  419c53:	test   al,0x8e
  419c55:	(bad)  
  419c56:	fcmovu st,st(6)
  419c58:	and    al,0xc7
  419c5a:	in     al,0x9b
  419c5c:	scas   al,BYTE PTR es:[edi]
  419c5d:	jle    0x419c4d
  419c5f:	cmp    DWORD PTR [eax-0x709b6d37],eax
  419c65:	xor    esi,edx
  419c67:	sbb    cl,BYTE PTR [esi-0x51]
  419c6a:	and    eax,DWORD PTR [edx+edi*1]
  419c6d:	std    
  419c6e:	retf   
  419c6f:	sub    BYTE PTR [ebp+0x20],dh
  419c72:	fcom   QWORD PTR [eax+0x18ddbbc8]
  419c78:	mov    bl,0x6d
  419c7a:	jle    0x419c00
  419c7c:	pusha  
  419c7d:	loope  0x419cf0
  419c7f:	es test ebx,eax
  419c82:	xor    BYTE PTR [edi-0x58],bl
  419c85:	fld    DWORD PTR [ecx]
  419c87:	cdq    
  419c88:	retf   0x6979
  419c8b:	jnp    0x419c79
  419c8d:	ins    BYTE PTR es:[edi],dx
  419c8e:	not    DWORD PTR [ebp+0x7]
  419c91:	repz xor dh,BYTE PTR [eax+0x16]
  419c95:	add    BYTE PTR [edx],bh
  419c97:	ret    0x92dc
  419c9a:	mov    cl,0x29
  419c9c:	adc    eax,0x731931d
  419ca1:	cld    
  419ca2:	adc    al,BYTE PTR [edx+edx*1-0x6b89a836]
  419ca9:	test   al,0x23
  419cab:	outs   dx,DWORD PTR ds:[esi]
  419cac:	or     al,0xa6
  419cae:	jg     0x419c50
  419cb0:	das    
  419cb1:	jne    0x419c53
  419cb3:	dec    eax
  419cb4:	mov    al,ds:0xbd1105ba
  419cb9:	mov    eax,0x154bd323
  419cbe:	pop    ss
  419cbf:	ret    0x3343
  419cc2:	imul   edx,DWORD PTR [ecx],0x62
  419cc5:	call   0xe22c:0x606f0c20
  419ccc:	int3   
  419ccd:	xlat   BYTE PTR ds:[ebx]
  419cce:	dec    ebx
  419ccf:	mov    ah,0xbd
  419cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd2:	loopne 0x419d21
  419cd4:	jmp    0x7cb460f6
  419cd9:	pop    ebp
  419cda:	ret    
  419cdb:	pop    edi
  419cdc:	jmp    0x624771c1
  419ce1:	(bad)  
  419ce2:	adc    ebp,ebx
  419ce4:	ret    0xeef0
  419ce7:	and    esi,0x4d
  419cea:	pop    edi
  419ceb:	dec    eax
  419cec:	or     eax,DWORD PTR [edx-0x577e0fed]
  419cf2:	cs sub al,0x34
  419cf5:	add    al,0x5a
  419cf7:	ficom  DWORD PTR [edx]
  419cf9:	addr16 inc edi
  419cfb:	lea    si,[esi+0x5e6d3008]
  419d02:	int    0x2f
  419d04:	jmp    0xe516:0xfbb1144
  419d0b:	ror    BYTE PTR [edi-0x63],0x9a
  419d0f:	jb     0x419cdb
  419d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d12:	out    dx,al
  419d13:	arpl   si,ax
  419d15:	and    BYTE PTR [ebp+eiz*1-0x21],0x2d
  419d1a:	mov    al,ds:0x19d23e96
  419d1f:	dec    edx
  419d20:	cmp    ch,BYTE PTR [ecx]
  419d22:	ss (bad) 
  419d25:	ins    BYTE PTR es:[edi],dx
  419d26:	neg    BYTE PTR [ebx-0x4431e7b1]
  419d2c:	inc    esi
  419d2d:	sbb    al,0x9e
  419d2f:	mov    dl,0x24
  419d31:	sub    al,0x29
  419d33:	xor    al,0x41
  419d35:	mov    bh,0x2e
  419d37:	in     al,0xf4
  419d39:	lock push esp
  419d3b:	cs cwde 
  419d3d:	mov    WORD PTR [edi+ebx*2-0x4d],?
  419d41:	cdq    
  419d42:	lods   al,BYTE PTR ds:[esi]
  419d43:	or     ebp,DWORD PTR [ebx+edx*4-0xddee974]
  419d4a:	repz dec esi
  419d4c:	call   0xa08c:0xfc501433
  419d53:	ret    0x108d
  419d56:	sbb    ecx,edi
  419d58:	bound  edx,QWORD PTR [ebx+ebx*1]
  419d5b:	dec    esi
  419d5c:	sar    DWORD PTR [ebp-0x1d],cl
  419d5f:	sub    al,0xc4
  419d61:	lea    ebx,[ebp+eiz*1+0x3df699e]
  419d68:	mov    edx,0x338223cf
  419d6d:	fwait
  419d6e:	jae    0x419cf9
  419d70:	adc    eax,0x58793e75
  419d75:	test   BYTE PTR [edi+ebx*1+0x6f],ch
  419d79:	xchg   DWORD PTR [edi-0x3258f130],ebx
  419d7f:	jns    0x419df3
  419d81:	dec    ebx
  419d82:	xchg   esp,eax
  419d83:	hlt    
  419d84:	dec    esp
  419d85:	mov    al,0x71
  419d87:	dec    ebx
  419d88:	pop    eax
  419d89:	and    ah,BYTE PTR [eax+0x50cee044]
  419d8f:	mov    al,0x11
  419d91:	(bad)  
  419d93:	dec    esp
  419d94:	fwait
  419d95:	xchg   edx,eax
  419d96:	stos   DWORD PTR es:[edi],eax
  419d97:	inc    ebx
  419d98:	jg     0x419d85
  419d9a:	push   esi
  419d9b:	loop   0x419d23
  419d9d:	inc    ebp
  419d9e:	push   ebx
  419d9f:	test   DWORD PTR [edx],ebp
  419da1:	or     BYTE PTR [ebx],0x51
  419da4:	mov    ebx,0x49999178
  419da9:	or     eax,0x455273
  419dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419daf:	sub    al,0x3c
  419db1:	in     al,dx
  419db2:	and    ebp,DWORD PTR [eax]
  419db4:	jae    0x419d83
  419db6:	mov    ?,WORD PTR [edi]
  419db8:	in     eax,0x54
  419dba:	cdq    
  419dbb:	std    
  419dbc:	leave  
  419dbd:	retf   
  419dbe:	dec    esi
  419dbf:	sbb    BYTE PTR [ecx+0x630fc3f0],bh
  419dc5:	push   esp
  419dc6:	fcom   DWORD PTR [edi+0x5a7aaecf]
  419dcc:	xor    BYTE PTR [edi-0x19],0x82
  419dd0:	hlt    
  419dd1:	mov    bl,0x4b
  419dd3:	ins    BYTE PTR es:[edi],dx
  419dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dd5:	xchg   esi,eax
  419dd6:	mov    esp,0x952b710a
  419ddb:	cmp    BYTE PTR [eax-0x22],dl
  419dde:	mov    ebp,0x68616c2b
  419de3:	imul   eax,esp,0x639e4244
  419de9:	cmc    
  419dea:	sbb    DWORD PTR [edx*4-0x1a4d28a7],0xcb3ea147
  419df5:	push   ebx
  419df6:	xchg   edx,eax
  419df7:	fwait
  419df8:	test   al,0xa6
  419dfa:	jo     0x419dc5
  419dfc:	retf   
  419dfd:	ins    BYTE PTR es:[edi],dx
  419dfe:	fild   WORD PTR [esi+0xf]
  419e01:	gs lock int3 
  419e04:	or     al,0xb5
  419e06:	push   ds
  419e07:	push   0xb5703971
  419e0c:	fsubp  st(4),st
  419e0e:	cdq    
  419e0f:	and    DWORD PTR [edx-0x51e065e7],ebx
  419e15:	adc    dl,BYTE PTR [ecx+0x943446]
  419e1b:	mov    edx,0xb75abc8b
  419e20:	mov    ds:0x784d6b31,al
  419e25:	ret    
  419e26:	test   BYTE PTR [edi+0x44],bh
  419e29:	xor    ecx,DWORD PTR [ebp-0x60]
  419e2c:	mov    bl,0xf2
  419e2e:	pop    eax
  419e2f:	xor    DWORD PTR [edi],ebx
  419e31:	fwait
  419e32:	mov    edx,0xfaa71af0
  419e37:	or     DWORD PTR [eax],edi
  419e39:	mov    dh,0xad
  419e3b:	iret   
  419e3c:	out    0xc2,eax
  419e3e:	jmp    0xb72d:0x6bb1c969
  419e45:	pushw  0x2834
  419e49:	cmp    bh,BYTE PTR [eax+0x1]
  419e4c:	jl     0x419e6b
  419e4e:	retf   0xf7a
  419e51:	and    al,0x59
  419e53:	hlt    
  419e54:	cmp    eax,DWORD PTR [edx+edi*8-0xdfac81]
  419e5b:	cld    
  419e5c:	shl    bh,0x15
  419e5f:	mov    dl,0x11
  419e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e62:	jb     0x419ed9
  419e64:	pop    edi
  419e65:	or     al,0x3e
  419e67:	mov    dh,dh
  419e69:	or     DWORD PTR [edi+0x7e],edx
  419e6c:	pop    ecx
  419e6d:	pop    eax
  419e6e:	icebp  
  419e6f:	dec    ebp
  419e70:	mov    eax,ds:0xc9bb7c8c
  419e75:	sub    DWORD PTR [ebp+esi*8-0x77],eax
  419e79:	inc    edx
  419e7a:	mov    bh,BYTE PTR [eax+0x7]
  419e7d:	add    BYTE PTR [ebx],al
  419e7f:	xchg   esi,eax
  419e80:	stc    
  419e81:	stos   BYTE PTR es:[edi],al
  419e82:	dec    esi
  419e83:	pop    esi
  419e84:	mov    ebp,0x68fd6d17
  419e89:	inc    edx
  419e8a:	mov    es,WORD PTR [edx+0x58b6bd67]
  419e90:	pop    esi
  419e91:	std    
  419e92:	dec    esi
  419e93:	out    dx,al
  419e94:	lods   al,BYTE PTR ds:[esi]
  419e95:	jb     0x419ed0
  419e97:	mov    esp,0x86d3b107
  419e9c:	cmp    esi,DWORD PTR [eax]
  419e9e:	sbb    al,0xf9
  419ea0:	inc    eax
  419ea1:	test   al,0xb6
  419ea3:	jmp    0x419e31
  419ea5:	cli    
  419ea6:	adc    ecx,ebp
  419ea8:	cmp    BYTE PTR [ebp-0x43],0x5b
  419eac:	pop    esp
  419ead:	jb     0x419e30
  419eaf:	mov    ebx,0xb97b2cd8
  419eb4:	push   0x32
  419eb6:	rcl    DWORD PTR [edx-0x63],1
  419eb9:	inc    esi
  419eba:	in     al,0xa
  419ebc:	fmul   DWORD PTR ds:0xc48ac5a0
  419ec2:	mov    ebp,0xc0045de4
  419ec7:	xor    al,0xf5
  419ec9:	xchg   BYTE PTR [edi+ecx*4-0x27def9f8],dl
  419ed0:	mov    ebx,0xb6094db0
  419ed5:	sahf   
  419ed6:	(bad)  
  419ed7:	mov    ecx,0x97496fde
  419edc:	in     al,0x1
  419ede:	int    0xa9
  419ee0:	add    al,0x34
  419ee2:	mov    edi,DWORD PTR [ecx+0x770cf928]
  419ee8:	push   ss
  419ee9:	push   es
  419eea:	xchg   ebp,eax
  419eeb:	push   esp
  419eec:	mov    ah,0xe8
  419eee:	cmp    DWORD PTR [eax],edx
  419ef0:	xor    dl,BYTE PTR [esi+edx*1-0x21e74f41]
  419ef7:	retf   
  419ef8:	push   DWORD PTR [ecx+0x2eb66622]
  419efe:	lods   al,BYTE PTR ds:[esi]
  419eff:	(bad)  
  419f00:	cmp    DWORD PTR [ebx+0x44],eax
  419f03:	iret   
  419f04:	pop    es
  419f05:	call   0xf04c:0x1e2e4592
  419f0c:	(bad)  
  419f0d:	rcl    DWORD PTR [edx],1
  419f0f:	jno    0x419ec4
  419f11:	pop    esi
  419f12:	aas    
  419f13:	mov    eax,ds:0xf4b0975f
  419f18:	push   ss
  419f19:	inc    esi
  419f1a:	push   ebp
  419f1b:	push   cs
  419f1c:	jge    0x419f6e
  419f1e:	into   
  419f1f:	out    dx,eax
  419f20:	popf   
  419f21:	pop    ss
  419f22:	nop
  419f23:	out    0xf9,eax
  419f25:	sub    BYTE PTR ds:0x1ebc0de0,cl
  419f2b:	jne    0x419f9e
  419f2d:	sub    BYTE PTR [eax-0x20],bh
  419f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f31:	sbb    eax,esi
  419f33:	mov    cl,0x9b
  419f35:	les    edx,FWORD PTR [edx]
  419f37:	int    0x5a
  419f39:	fst    DWORD PTR [eax-0x8de30c6]
  419f3f:	mov    ?,WORD PTR [edi+0x55]
  419f42:	repz mov al,0x20
  419f45:	hlt    
  419f46:	push   ebx
  419f47:	scas   al,BYTE PTR es:[edi]
  419f48:	pop    ss
  419f49:	mov    dh,0xea
  419f4b:	std    
  419f4c:	or     BYTE PTR [ecx+0x4d],dl
  419f4f:	jo     0x419fac
  419f51:	stc    
  419f52:	add    al,0xa4
  419f54:	sbb    BYTE PTR [ebx+0x31],dh
  419f57:	das    
  419f58:	cmp    eax,0x26f2b8f4
  419f5d:	ficomp DWORD PTR [ebx-0x18]
  419f60:	daa    
  419f61:	les    eax,FWORD PTR [ebx-0x6d]
  419f64:	mov    gs,WORD PTR [ebx+ebx*1]
  419f67:	cld    
  419f68:	out    dx,eax
  419f69:	cli    
  419f6a:	xor    BYTE PTR [esp+eax*2],ah
  419f6d:	adc    eax,0x915a9137
  419f72:	loope  0x419fd6
  419f74:	push   eax
  419f75:	rcl    DWORD PTR [eax+edi*2-0x1dbc0926],cl
  419f7c:	lods   eax,DWORD PTR ds:[esi]
  419f7d:	and    dh,BYTE PTR [esi-0x2e274ec]
  419f83:	mov    ah,0xe6
  419f85:	stos   DWORD PTR es:[edi],eax
  419f86:	out    0x6c,al
  419f88:	jns    0x419f2b
  419f8a:	adc    bh,BYTE PTR [eax+ebp*2-0x4ab0f8f8]
  419f91:	mov    dh,0xad
  419f93:	xor    esi,DWORD PTR [eax+0xf]
  419f96:	mov    esi,0x470f5dd2
  419f9b:	sub    ch,cl
  419f9d:	loope  0x41a014
  419f9f:	fstp   QWORD PTR [ebp-0x29]
  419fa2:	ret    0x4080
  419fa5:	mov    dl,BYTE PTR [ecx]
  419fa7:	sbb    eax,0xac3f3bf9
  419fac:	push   ecx
  419fad:	sub    eax,0x85ed288c
  419fb2:	repz or BYTE PTR [esi+0x59fd0fdc],ch
  419fb9:	or     eax,0x1ca3d1ea
  419fbe:	mov    DWORD PTR [ecx-0x2b196784],ebx
  419fc4:	jle    0x41a02d
  419fc6:	dec    dh
  419fc8:	retf   
  419fc9:	and    ah,BYTE PTR [ebp+0x4eb424f2]
  419fcf:	mov    edx,0xc6887cae
  419fd4:	push   ebx
  419fd5:	lods   eax,DWORD PTR ds:[esi]
  419fd6:	dec    ecx
  419fd7:	daa    
  419fd8:	add    al,0x7f
  419fda:	jmp    0xfb81:0xbcb783b1
  419fe1:	dec    esi
  419fe2:	test   al,0xa5
  419fe4:	out    dx,eax
  419fe5:	ins    BYTE PTR es:[edi],dx
  419fe6:	add    al,0xbc
  419fe8:	loopne 0x41a019
  419fea:	rol    DWORD PTR ds:0x7962b758,0x49
  419ff1:	or     ecx,ebx
  419ff3:	sbb    eax,0xce2789f6
  419ff8:	push   cs
  419ff9:	cmp    DWORD PTR [ebp-0x20],ebx
  419ffc:	inc    ebx
  419ffd:	adc    esi,DWORD PTR [edi]
  419fff:	fcmovnu st,st(4)
  41a001:	shl    BYTE PTR [edx-0xd059c50],0x42
  41a008:	sub    eax,0xa76136b9
  41a00d:	in     eax,0x57
  41a00f:	mov    ebp,cs
  41a011:	cmp    dh,dh
  41a013:	popf   
  41a014:	js     0x41a034
  41a016:	adc    ch,BYTE PTR [ebp-0x59970736]
  41a01c:	cmp    ebx,DWORD PTR [ebx]
  41a01e:	jg     0x41a04b
  41a020:	bound  ebp,QWORD PTR [edi+0x4d62c6a9]
  41a026:	repnz sbb DWORD PTR ds:0xd6f5e109,eax
  41a02d:	pop    eax
  41a02e:	xchg   edx,eax
  41a02f:	push   ebp
  41a030:	cwde   
  41a031:	shl    BYTE PTR [edi],1
  41a033:	mov    ds:0x4ed048e6,eax
  41a038:	pop    ds
  41a039:	and    eax,0x28044933
  41a03e:	sub    DWORD PTR [edx],eax
  41a040:	out    0x1,eax
  41a042:	sbb    ebx,DWORD PTR [ecx-0x27]
  41a045:	adc    eax,0x55abd7ea
  41a04a:	fcomp  QWORD PTR [eax+0x8]
  41a04d:	add    DWORD PTR [edx-0x70],0xf836e814
  41a054:	mov    DWORD PTR [ebp+0x4aab15b],eax
  41a05a:	sub    DWORD PTR [edx-0x742525df],edx
  41a060:	push   esi
  41a061:	cmp    DWORD PTR ds:0xd7c49bbb,eax
  41a067:	les    edi,FWORD PTR [eax+0x41498ca4]
  41a06d:	mov    DWORD PTR ds:0xbf68273f,ebp
  41a073:	dec    edx
  41a074:	pop    esi
  41a075:	(bad)  
  41a076:	mov    ebp,0xc42453a1
  41a07b:	enter  0xca57,0x89
  41a07f:	out    0x96,al
  41a081:	jne    0x41a0ec
  41a083:	out    0x5c,eax
  41a085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a086:	or     DWORD PTR [ebp+ebx*4+0x745d0e11],ecx
  41a08d:	inc    ebx
  41a08e:	dec    ebx
  41a08f:	int    0x29
  41a091:	(bad)  
  41a092:	or     DWORD PTR [eax],eax
  41a094:	clc    
  41a095:	fadd   DWORD PTR [esi-0x69]
  41a098:	(bad)  
  41a099:	jg     0x41a05f
  41a09b:	lods   eax,DWORD PTR ds:[esi]
  41a09c:	pop    es
  41a09d:	cmc    
  41a09e:	cmp    DWORD PTR [esi-0x50],edi
  41a0a1:	adc    dl,bh
  41a0a3:	or     edx,DWORD PTR [esi+0x3e]
  41a0a6:	jns    0x41a0a4
  41a0a8:	scas   al,BYTE PTR es:[edi]
  41a0a9:	(bad)  
  41a0aa:	sti    
  41a0ab:	(bad)  
  41a0ac:	mov    esi,DWORD PTR [edx+0x67]
  41a0af:	jge    0x41a04b
  41a0b1:	pop    ds
  41a0b2:	push   cs
  41a0b3:	mov    ch,0x41
  41a0b5:	mov    BYTE PTR [esi-0x5],bh
  41a0b8:	mov    WORD PTR [edi],es
  41a0ba:	dec    esi
  41a0bc:	push   0x52
  41a0be:	cmp    al,0xbb
  41a0c0:	jo     0x41a06a
  41a0c2:	adc    al,0xa0
  41a0c4:	pop    edi
  41a0c5:	adc    DWORD PTR [esi+0x2e47ad5e],esi
  41a0cb:	lods   eax,DWORD PTR ds:[esi]
  41a0cc:	jb     0x41a083
  41a0ce:	sahf   
  41a0cf:	dec    ebp
  41a0d0:	pop    ecx
  41a0d1:	es adc eax,0xad6b9fa7
  41a0d7:	mov    ch,0x3a
  41a0d9:	call   0x8fc2:0x9e0d240f
  41a0e0:	fdivr  DWORD PTR [edi+0x712b8a5e]
  41a0e6:	xchg   ebp,eax
  41a0e7:	sbb    eax,0x61810792
  41a0ec:	push   esp
  41a0ed:	outs   dx,BYTE PTR ss:[esi]
  41a0ef:	mov    esi,0xb260321a
  41a0f4:	sbb    bl,BYTE PTR [edx-0x15]
  41a0f7:	test   ebp,ebx
  41a0f9:	popa   
  41a0fa:	push   ebx
  41a0fb:	bound  ebx,QWORD PTR [ecx+0xf]
  41a0fe:	je     0x41a0cf
  41a100:	pop    ecx
  41a101:	jns    0x41a13e
  41a103:	mov    ebx,0x69e7c447
  41a108:	inc    edi
  41a109:	pop    esp
  41a10a:	in     eax,dx
  41a10b:	sti    
  41a10c:	sbb    esp,DWORD PTR [ebx+0x159f4ca]
  41a112:	pop    ss
  41a113:	stos   DWORD PTR es:[edi],eax
  41a114:	and    ax,0x68d4
  41a118:	inc    edi
  41a119:	sub    DWORD PTR [ebp-0x3d9be23b],esp
  41a11f:	and    esp,esp
  41a121:	xchg   edi,eax
  41a122:	inc    edx
  41a123:	mov    ebp,0xd6907aa2
  41a128:	cld    
  41a129:	pushf  
  41a12a:	in     eax,0x60
  41a12c:	mov    BYTE PTR [edx+ebp*2],al
  41a12f:	cmp    BYTE PTR [ebx+0x2e],cl
  41a132:	and    al,0xc0
  41a134:	or     ch,dl
  41a136:	test   al,0x61
  41a138:	push   ebp
  41a139:	mov    cl,dl
  41a13b:	fild   QWORD PTR [edi+0x2a31b99c]
  41a141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a142:	movups xmm2,XMMWORD PTR [edx+0x5]
  41a146:	sar    BYTE PTR [ebx-0x7212f634],1
  41a14c:	es loop 0x41a16d
  41a14f:	jg     0x41a132
  41a151:	xchg   ecx,eax
  41a152:	ret    
  41a153:	outs   dx,DWORD PTR ds:[esi]
  41a154:	xchg   ebp,eax
  41a155:	das    
  41a156:	mov    cl,0xa8
  41a158:	xlat   BYTE PTR ds:[ebx]
  41a159:	sbb    eax,DWORD PTR [ebp-0x6f]
  41a15c:	iret   
  41a15d:	mov    ss,esp
  41a15f:	push   0xffffffd2
  41a161:	in     al,0x9f
  41a163:	and    eax,0x64dcb4cd
  41a168:	cmp    eax,ebx
  41a16a:	mov    ds:0x653ff73,eax
  41a16f:	std    
  41a170:	inc    edi
  41a171:	inc    ebx
  41a172:	mov    ds:0xc5c0a7b1,eax
  41a177:	add    al,0x98
  41a179:	mov    ch,0x77
  41a17b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a17c:	pop    ds
  41a17d:	push   edi
  41a17e:	mov    dl,0x29
  41a180:	dec    edx
  41a181:	iret   
  41a182:	sti    
  41a183:	xlat   BYTE PTR cs:[ebx]
  41a185:	inc    eax
  41a186:	and    eax,0xb0c0d5cd
  41a18b:	stos   DWORD PTR es:[edi],eax
  41a18c:	dec    esi
  41a18d:	xlat   BYTE PTR ds:[ebx]
  41a18e:	test   eax,0x5e5190c0
  41a193:	push   ebp
  41a194:	mov    ds:0xc972d020,eax
  41a199:	xchg   ecx,eax
  41a19a:	sti    
  41a19b:	xor    DWORD PTR [eax],ebx
  41a19d:	or     edx,DWORD PTR ds:0x2b01a932
  41a1a3:	mov    ds,WORD PTR [edx+ecx*4-0x145dad3d]
  41a1aa:	jns    0x41a15b
  41a1ac:	xlat   BYTE PTR ds:[ebx]
  41a1ad:	(bad)  
  41a1af:	sub    DWORD PTR [ebx],eax
  41a1b1:	and    ah,BYTE PTR [edx+0x5eadb89]
  41a1b7:	dec    esp
  41a1b8:	mov    cl,0xa8
  41a1ba:	lods   al,BYTE PTR ds:[esi]
  41a1bb:	adc    eax,0x1df6927f
  41a1c0:	mov    esi,0xe888ec23
  41a1c5:	in     eax,dx
  41a1c6:	pop    es
  41a1c7:	adc    ah,ah
  41a1c9:	sbb    ecx,DWORD PTR [eax]
  41a1cb:	loopne 0x41a1f7
  41a1cd:	inc    esi
  41a1ce:	xchg   DWORD PTR [ecx-0x75],esi
  41a1d1:	pop    es
  41a1d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1d3:	fisttp WORD PTR [ebp-0x7000fe83]
  41a1d9:	ficom  DWORD PTR cs:[ecx+eiz*8]
  41a1dd:	sub    ebp,DWORD PTR [eax+0x1f]
  41a1e0:	pop    esp
  41a1e1:	std    
  41a1e2:	push   es
  41a1e3:	rcl    DWORD PTR [eax+edi*1-0x46],cl
  41a1e7:	xor    al,0x6a
  41a1e9:	mov    dh,0x8e
  41a1eb:	js     0x41a18c
  41a1ed:	inc    ecx
  41a1ee:	lds    ecx,FWORD PTR [ebx]
  41a1f0:	loopne 0x41a1fb
  41a1f2:	xor    al,0x77
  41a1f4:	stos   DWORD PTR es:[edi],eax
  41a1f5:	fisub  WORD PTR [ebx]
  41a1f7:	clc    
  41a1f8:	sbb    ebp,ebx
  41a1fa:	inc    ebx
  41a1fb:	cmc    
  41a1fc:	pop    eax
  41a1fd:	inc    ebx
  41a1fe:	xchg   DWORD PTR [edi-0x6b1f829b],ecx
  41a204:	mov    ebx,0xfcb5eea1
  41a209:	fidivr DWORD PTR [eax-0x4bd4e960]
  41a20f:	sub    bh,bh
  41a211:	ror    BYTE PTR [eax-0x6abaef08],0x32
  41a218:	cmc    
  41a219:	aad    0x57
  41a21b:	cmp    cl,BYTE PTR [ebp+0x37]
  41a21e:	add    al,0xe8
  41a220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a221:	inc    ebx
  41a222:	jle    0x41a1e1
  41a224:	xchg   ebx,ebp
  41a226:	cli    
  41a227:	push   ss
  41a228:	mov    esp,0xe4ccbd26
  41a22d:	xchg   esp,eax
  41a22e:	mov    ds:0xff9e1a61,eax
  41a233:	pop    esp
  41a234:	pop    edi
  41a235:	rol    bh,0xf8
  41a238:	mov    ?,WORD PTR [edi]
  41a23a:	jl     0x41a22d
  41a23c:	push   ebp
  41a23d:	push   ebx
  41a23e:	jae    0x41a297
  41a240:	call   0x8fcb8501
  41a245:	sub    BYTE PTR [eax],0xe
  41a248:	lahf   
  41a249:	addr16 or eax,0xc4692efc
  41a24f:	(bad)  
  41a250:	(bad)  
  41a251:	scas   eax,DWORD PTR es:[edi]
  41a252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a253:	push   esp
  41a254:	push   edi
  41a255:	fiadd  WORD PTR ds:0x4674bb90
  41a25b:	rcr    BYTE PTR [ecx+ebx*8+0x73],1
  41a25f:	jl     0x41a2ba
  41a261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a262:	(bad)  
  41a263:	xchg   ebx,eax
  41a264:	push   ecx
  41a265:	out    dx,eax
  41a266:	inc    esp
  41a267:	cmp    dl,BYTE PTR ds:0x4bc40fe7
  41a26d:	push   cs
  41a26e:	popf   
  41a26f:	dec    esp
  41a270:	sbb    ebx,DWORD PTR [ebx]
  41a272:	fs add dh,al
  41a275:	mov    al,ds:0x7bf8c8ae
  41a27a:	adc    ecx,DWORD PTR [ebp-0x54281818]
  41a280:	or     bl,BYTE PTR [edx+0x48e9dfa6]
  41a286:	push   esi
  41a287:	stos   DWORD PTR es:[edi],eax
  41a288:	sar    BYTE PTR [edx+edi*1-0x5e],1
  41a28c:	pop    esp
  41a28d:	push   ebp
  41a28e:	imul   esp,ecx,0x5335001
  41a294:	adc    ebx,DWORD PTR [ecx]
  41a296:	out    dx,eax
  41a297:	push   ss
  41a298:	sbb    al,0x74
  41a29a:	popa   
  41a29b:	mov    cl,0xd2
  41a29d:	(bad)  
  41a29e:	lahf   
  41a29f:	ss into 
  41a2a1:	push   ebx
  41a2a2:	nop
  41a2a3:	aam    0x87
  41a2a5:	test   BYTE PTR [ebx+edi*8-0x8],0xa8
  41a2aa:	add    esi,esp
  41a2ac:	add    eax,0xd352bef4
  41a2b1:	inc    esp
  41a2b2:	xor    ebx,ebp
  41a2b4:	lods   al,BYTE PTR ds:[esi]
  41a2b5:	jmp    0x41a2f2
  41a2b7:	pop    ebp
  41a2b8:	ins    BYTE PTR es:[edi],dx
  41a2b9:	enter  0xe0ba,0x92
  41a2bd:	push   ss
  41a2be:	std    
  41a2bf:	add    al,BYTE PTR [eax+0x2d]
  41a2c2:	ret    0xd2ee
  41a2c5:	or     al,0x27
  41a2c7:	mov    ch,0xc9
  41a2c9:	jmp    0xa0ef8f0c
  41a2ce:	add    dl,BYTE PTR [esi+0x79]
  41a2d1:	xchg   edi,eax
  41a2d2:	or     ah,BYTE PTR [eax]
  41a2d4:	cmp    BYTE PTR [edx-0x26],al
  41a2d7:	loopne 0x41a276
  41a2d9:	xchg   DWORD PTR ds:0x9b6a0e95,edi
  41a2df:	xor    DWORD PTR [eax-0x17],esi
  41a2e2:	dec    edx
  41a2e3:	sub    eax,0x45206bda
  41a2e8:	sub    BYTE PTR [edi-0x5a],0xbc
  41a2ec:	call   0xeb122c90
  41a2f1:	dec    esp
  41a2f2:	es out 0xfe,eax
  41a2f5:	ins    BYTE PTR es:[edi],dx
  41a2f6:	xor    BYTE PTR [esi-0x21],dh
  41a2f9:	mov    ch,0xe9
  41a2fb:	repz dec edx
  41a2fd:	jbe    0x41a34b
  41a2ff:	repz mov edi,0x2b54b84e
  41a305:	adc    BYTE PTR [ebp+0x3e11b4af],dl
  41a30b:	xchg   DWORD PTR [eax-0x7050c53b],ebp
  41a311:	fstp   TBYTE PTR [ebx+0x49]
  41a314:	shl    DWORD PTR [ebp+0x1564dd10],0x76
  41a31b:	push   ecx
  41a31c:	pusha  
  41a31d:	fucomi st,st(3)
  41a31f:	mov    DWORD PTR [ebp+0x6a825375],ebx
  41a325:	nop
  41a326:	jns    0x41a357
  41a328:	cmp    edi,DWORD PTR [edx]
  41a32a:	data16 jge 0x41a38b
  41a32d:	loopne 0x41a2f2
  41a32f:	fdiv   QWORD PTR [edi+eax*4+0x23]
  41a333:	shl    BYTE PTR [ebx],cl
  41a335:	push   0xb38482d1
  41a33a:	addr16 mov bh,0x7b
  41a33d:	pop    ds
  41a33e:	push   eax
  41a33f:	add    eax,0x8746530a
  41a344:	inc    ebx
  41a345:	adc    al,0xe3
  41a347:	sbb    DWORD PTR [edi-0x5e1e71e9],eax
  41a34d:	or     ecx,esi
  41a34f:	bound  ebx,QWORD PTR [edi]
  41a351:	jmp    0x41a354
  41a353:	mov    edx,0xf363804b
  41a358:	push   es
  41a359:	test   BYTE PTR [edx+0x49ed8ce7],bl
  41a35f:	out    dx,al
  41a360:	sbb    al,0xa9
  41a362:	pop    ebx
  41a363:	and    BYTE PTR [ebx],cl
  41a365:	dec    esi
  41a366:	outs   dx,BYTE PTR fs:[si]
  41a369:	js     0x41a3c4
  41a36b:	dec    edi
  41a36c:	div    BYTE PTR [ecx]
  41a36e:	test   al,0x71
  41a370:	icebp  
  41a371:	jo     0x41a317
  41a373:	out    dx,eax
  41a374:	xlat   BYTE PTR ds:[ebx]
  41a375:	imul   edx,edi,0xffffffa5
  41a378:	shl    DWORD PTR [ebx+0x1d],1
  41a37b:	(bad)  
  41a37c:	(bad)  
  41a37d:	push   eax
  41a37e:	fisub  WORD PTR [esi-0x690ff49a]
  41a384:	daa    
  41a385:	mov    esp,0x515771b
  41a38a:	ror    dl,0x70
  41a38d:	mov    dh,0x22
  41a38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a390:	int3   
  41a391:	jns    0x41a3f4
  41a393:	xchg   ebp,eax
  41a394:	jp     0x41a404
  41a396:	aad    0xe6
  41a398:	(bad)  
  41a399:	addr16 dec edi
  41a39b:	fsub   DWORD PTR [edi]
  41a39d:	jge    0x41a338
  41a39f:	imul   eax,DWORD PTR [ecx],0xffffff8a
  41a3a2:	pop    esp
  41a3a3:	dec    eax
  41a3a4:	add    al,0xb4
  41a3a6:	jle    0x41a3f3
  41a3a8:	pop    esp
  41a3a9:	push   0x14
  41a3ab:	scas   eax,DWORD PTR es:[edi]
  41a3ac:	ret    
  41a3ad:	retf   0x3ba9
  41a3b0:	mov    ebx,0x484bdd0e
  41a3b5:	jmp    0xf08f:0x14b2b654
  41a3bc:	or     al,0xfa
  41a3be:	dec    edx
  41a3bf:	jge    0x41a3d4
  41a3c1:	push   esi
  41a3c2:	inc    ebp
  41a3c3:	and    eax,0xcd9adc69
  41a3c8:	sub    eax,eax
  41a3ca:	(bad)  
  41a3cb:	outs   dx,BYTE PTR ds:[esi]
  41a3cc:	in     al,0x2d
  41a3ce:	add    dl,BYTE PTR [ecx-0x1d]
  41a3d1:	push   ss
  41a3d2:	das    
  41a3d3:	cwde   
  41a3d4:	xchg   ecx,eax
  41a3d5:	shr    DWORD PTR [edi],0x13
  41a3d8:	jmp    0xc9d9:0x537b8324
  41a3df:	dec    ebp
  41a3e0:	in     eax,dx
  41a3e1:	mov    ds:0x42d0b038,eax
  41a3e6:	sbb    ebp,DWORD PTR [ebx-0x70]
  41a3e9:	inc    esi
  41a3ea:	(bad)  
  41a3eb:	daa    
  41a3ec:	lahf   
  41a3ed:	cli    
  41a3ee:	call   0x2b95a09e
  41a3f3:	ss pop eax
  41a3f5:	call   FWORD PTR [edx-0x30]
  41a3f8:	bound  ebp,QWORD PTR [esi-0x283eb267]
  41a3fe:	jne    0x41a3bd
  41a400:	and    al,0x51
  41a402:	adc    dh,dh
  41a404:	pop    edx
  41a405:	repnz inc edi
  41a407:	mov    BYTE PTR [eax],0xf6
  41a40a:	sbb    BYTE PTR [ecx-0x4e2c988e],bl
  41a410:	sub    DWORD PTR ds:[edx],esi
  41a413:	pop    edx
  41a414:	fmul   QWORD PTR [ebx+0x2d]
  41a417:	lahf   
  41a418:	js     0x41a3e0
  41a41a:	adc    ebp,DWORD PTR [eax-0x6456a625]
  41a420:	jle    0x41a3da
  41a422:	cmp    al,0x2
  41a424:	xor    ebp,DWORD PTR [edi-0x6d]
  41a427:	xchg   edi,eax
  41a428:	pop    edx
  41a429:	inc    ecx
  41a42a:	pop    edx
  41a42b:	int    0xaf
  41a42d:	out    dx,al
  41a42e:	test   eax,0xda0c6eae
  41a433:	out    dx,eax
  41a434:	das    
  41a435:	and    eax,ecx
  41a437:	popf   
  41a438:	cwde   
  41a439:	adc    al,0xe5
  41a43b:	and    DWORD PTR [eax],edi
  41a43d:	out    dx,al
  41a43e:	into   
  41a43f:	xor    al,0xfc
  41a441:	pop    edi
  41a442:	(bad)  
  41a444:	jle    0x41a45d
  41a446:	jnp    0x41a46e
  41a448:	sub    DWORD PTR [esi+0x2],ebx
  41a44b:	dec    edx
  41a44c:	icebp  
  41a44d:	mov    DWORD PTR [esi+0x37],eax
  41a450:	sub    al,ch
  41a452:	mov    ebx,0x5590e5c7
  41a457:	mov    WORD PTR [eax],cs
  41a459:	xchg   esi,eax
  41a45a:	cmp    BYTE PTR [esp+eax*4+0x5e],ah
  41a45e:	fwait
  41a45f:	mov    ch,0x91
  41a461:	push   ebp
  41a462:	fwait
  41a463:	inc    eax
  41a464:	push   ebp
  41a465:	jbe    0x41a4af
  41a467:	mov    ebp,DWORD PTR [edi-0x65721365]
  41a46d:	mov    bl,0x44
  41a46f:	pusha  
  41a470:	test   eax,0x7c944b1b
  41a475:	xor    ch,BYTE PTR [esi+0x10e75121]
  41a47b:	sub    eax,0x49357418
  41a480:	hlt    
  41a481:	(bad)  
  41a482:	outs   dx,DWORD PTR ds:[esi]
  41a483:	adc    ah,BYTE PTR [esp+eax*8+0x20c0601c]
  41a48a:	xor    ebx,DWORD PTR [edi]
  41a48c:	adc    eax,0x997abc8c
  41a491:	push   0x1eb36925
  41a496:	jo     0x41a46b
  41a498:	out    0x84,al
  41a49a:	add    eax,0xc93c812b
  41a49f:	xor    eax,ebp
  41a4a1:	shr    DWORD PTR [ebx-0x38972542],1
  41a4a7:	lods   eax,DWORD PTR ds:[esi]
  41a4a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4a9:	lea    esi,[edi+0x5c]
  41a4ac:	xchg   ecx,eax
  41a4ad:	ror    ebx,cl
  41a4af:	(bad)  
  41a4b0:	push   gs
  41a4b2:	jnp    0x41a529
  41a4b4:	pop    ds
  41a4b5:	rol    esi,1
  41a4b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4b8:	jg     0x41a535
  41a4ba:	add    al,ah
  41a4bc:	arpl   WORD PTR [ecx],ax
  41a4be:	jl     0xac8dc4dd
  41a4c4:	sbb    BYTE PTR [edx-0x7798149e],bh
  41a4ca:	out    dx,al
  41a4cb:	dec    esi
  41a4cd:	mov    BYTE PTR [esi-0x10],0x60
  41a4d1:	push   es
  41a4d2:	test   ah,0x83
  41a4d5:	push   ecx
  41a4d6:	dec    ecx
  41a4d7:	in     al,0x1a
  41a4d9:	adc    cl,bl
  41a4db:	xchg   ebp,eax
  41a4dc:	(bad)  
  41a4dd:	loope  0x41a4d9
  41a4df:	ins    DWORD PTR es:[edi],dx
  41a4e0:	inc    eax
  41a4e1:	mov    ds:0xb9f44631,eax
  41a4e6:	(bad)  [ecx+0x44]
  41a4e9:	out    dx,eax
  41a4ea:	pushf  
  41a4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4ec:	leave  
  41a4ed:	jl     0x41a4a1
  41a4ef:	push   0xe61dcbee
  41a4f4:	dec    edi
  41a4f5:	retf   
  41a4f6:	add    eax,0xdfa6f7b3
  41a4fb:	pusha  
  41a4fc:	push   ss
  41a4fd:	dec    DWORD PTR [edx+0x6f]
  41a500:	dec    esi
  41a501:	inc    edi
  41a502:	fistp  WORD PTR es:[ebx+0x7433926e]
  41a509:	dec    ebx
  41a50a:	out    0x71,eax
  41a50c:	cmc    
  41a50d:	add    ebx,DWORD PTR [ecx+0x3d]
  41a510:	dec    ecx
  41a511:	or     DWORD PTR [ebx],edi
  41a513:	jb     0x41a506
  41a515:	push   ss
  41a516:	test   DWORD PTR [esi+0x5b],ecx
  41a519:	cmp    al,0x9a
  41a51b:	sub    esi,edi
  41a51d:	push   eax
  41a51e:	mov    esi,DWORD PTR [edi+eax*8-0x61]
  41a522:	sub    eax,0xfa9c3409
  41a527:	push   0xb0d0987c
  41a52c:	add    ah,BYTE PTR [ecx]
  41a52e:	push   ds
  41a52f:	adc    al,0x13
  41a531:	mov    bh,0x65
  41a533:	xchg   BYTE PTR [ecx+0x72],dh
  41a536:	int    0xd9
  41a538:	jl     0x41a511
  41a53a:	sbb    DWORD PTR [eax+ebp*1],edi
  41a53d:	dec    esp
  41a53e:	out    dx,eax
  41a53f:	je     0x41a4de
  41a541:	lahf   
  41a542:	je     0x41a511
  41a544:	out    0xe2,eax
  41a546:	cli    
  41a547:	sbb    al,BYTE PTR [ebx]
  41a549:	pop    ebp
  41a54a:	retf   0xad7
  41a54d:	or     dh,BYTE PTR [ebx*8-0x1596690]
  41a554:	pop    esp
  41a555:	inc    ebx
  41a556:	dec    ebx
  41a557:	icebp  
  41a558:	push   edi
  41a559:	out    dx,eax
  41a55a:	add    ebx,DWORD PTR [ebx-0x42]
  41a55d:	nop
  41a55e:	cli    
  41a55f:	addr16 mov ecx,0x6a2bc532
  41a565:	sub    al,dl
  41a567:	cmp    cl,ch
  41a569:	dec    esi
  41a56a:	jae    0x41a57e
  41a56c:	push   esi
  41a56d:	jmp    0xeb3e6f33
  41a572:	in     al,0xa0
  41a574:	fwait
  41a575:	sbb    al,0xec
  41a577:	popf   
  41a578:	xor    DWORD PTR [eax],0xb02172de
  41a57e:	cli    
  41a57f:	call   FWORD PTR [ecx+0x5d]
  41a582:	out    0x65,eax
  41a584:	and    esp,esi
  41a586:	stc    
  41a587:	mov    dl,0x4b
  41a589:	jnp    0x41a5d6
  41a58b:	adc    eax,DWORD PTR cs:[edx+0x5db2dd47]
  41a592:	inc    edx
  41a593:	add    eax,0xe2e6f25a
  41a598:	xchg   ecx,eax
  41a599:	xor    eax,0x202315
  41a59e:	dec    ecx
  41a59f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5a0:	jp     0x41a5c1
  41a5a2:	adc    ah,dl
  41a5a4:	push   ebp
  41a5a6:	aas    
  41a5a7:	xor    eax,0x245d9814
  41a5ac:	mov    ecx,0x7ccf3ad7
  41a5b1:	xor    BYTE PTR [edx+0xd],0x5b
  41a5b5:	mov    dl,0x3a
  41a5b7:	dec    edx
  41a5b8:	mov    ecx,0x695159
  41a5bd:	fidivr DWORD PTR [ecx]
  41a5bf:	mov    bh,BYTE PTR [edx]
  41a5c1:	int    0x7a
  41a5c3:	or     BYTE PTR [ecx],0xcd
  41a5c6:	mov    edx,0x12800334
  41a5cb:	mov    ds:0xfbfa3979,al
  41a5d0:	in     eax,dx
  41a5d1:	push   0xfffffffe
  41a5d3:	xor    eax,0x3ba2f3fb
  41a5d8:	inc    esp
  41a5d9:	fdiv   st,st(4)
  41a5db:	xchg   DWORD PTR ds:[edi],eax
  41a5de:	xlat   BYTE PTR ds:[ebx]
  41a5df:	(bad)  
  41a5e0:	mov    eax,DWORD PTR [esp+ebx*8]
  41a5e3:	ja     0x41a5b3
  41a5e5:	hlt    
  41a5e6:	shl    bh,1
  41a5e8:	xchg   dh,dl
  41a5ea:	ds mov ebx,0x746edb6e
  41a5f0:	fidiv  WORD PTR [eax+0x398dde21]
  41a5f6:	retf   0xbf5e
  41a5f9:	jb     0x41a64d
  41a5fb:	ret    
  41a5fc:	fsub   DWORD PTR [ebx-0x632a4df0]
  41a602:	jecxz  0x41a669
  41a604:	imul   ebx,DWORD PTR [edx-0x61],0x59
  41a608:	loope  0x41a602
  41a60a:	retf   0x3910
  41a60d:	xchg   esp,eax
  41a60e:	sbb    eax,0x9798d5a6
  41a613:	mov    WORD PTR [ebx-0x58],?
  41a616:	popf   
  41a617:	clc    
  41a618:	xor    eax,0x82fc0cd5
  41a61d:	xor    esp,DWORD PTR [ebx+0x51]
  41a620:	arpl   WORD PTR [edi+edi*1+0x27fcff42],si
  41a627:	jae    0x41a654
  41a629:	(bad)  
  41a62b:	mov    ds:0x46ee3771,al
  41a630:	outs   dx,DWORD PTR ds:[esi]
  41a631:	jbe    0x41a5f1
  41a633:	out    dx,eax
  41a634:	adc    DWORD PTR [eax+0x29],edx
  41a637:	imul   al
  41a639:	fmul   QWORD PTR [edi]
  41a63b:	loopne 0x41a6bb
  41a63d:	stc    
  41a63e:	inc    edx
  41a63f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a640:	jne    0x41a690
  41a642:	sub    DWORD PTR [eax-0x3bf4e36e],0xba5a10cc
  41a64c:	sbb    al,0x5c
  41a64e:	fwait
  41a64f:	jecxz  0x41a671
  41a651:	sar    BYTE PTR [ecx+0x377569c2],cl
  41a657:	add    eax,0x6eee6579
  41a65c:	ret    
  41a65d:	loopne 0x41a69e
  41a65f:	les    edx,FWORD PTR [edx+0x26]
  41a662:	shr    DWORD PTR [esi+0x341ff1ea],0x26
  41a669:	pop    ebx
  41a66a:	lods   al,BYTE PTR ds:[esi]
  41a66b:	fst    DWORD PTR [edi-0x42]
  41a66e:	add    cl,cl
  41a670:	sub    eax,0x260e6bba
  41a675:	xchg   esi,eax
  41a676:	jmp    0x5b12:0x41f5bd3e
  41a67d:	das    
  41a67e:	icebp  
  41a67f:	push   0xffffffeb
  41a681:	mov    ah,0x40
  41a683:	mov    eax,ds:0xa74fd521
  41a688:	push   es
  41a689:	aam    0xe5
  41a68b:	mov    al,0xd9
  41a68d:	aam    0x39
  41a68f:	ss out dx,al
  41a691:	sub    al,0x2c
  41a693:	pand   mm3,QWORD PTR [esi-0x3]
  41a697:	inc    edi
  41a698:	push   ebx
  41a699:	dec    ebp
  41a69a:	dec    edx
  41a69b:	rcr    BYTE PTR [ecx],1
  41a69d:	xor    DWORD PTR [edi+eiz*1+0x7171e6b],eax
  41a6a4:	icebp  
  41a6a5:	xor    eax,0x616b2869
  41a6aa:	in     eax,0xc3
  41a6ac:	rcr    DWORD PTR [ebp-0x1339b897],1
  41a6b2:	inc    edx
  41a6b3:	(bad)  
  41a6b4:	std    
  41a6b5:	push   edi
  41a6b6:	arpl   WORD PTR [ebp-0x70],bp
  41a6b9:	mov    DWORD PTR [esi-0x51],ebx
  41a6bc:	push   ds
  41a6bd:	into   
  41a6be:	adc    ebx,DWORD PTR [ecx-0x5a]
  41a6c1:	and    dh,al
  41a6c3:	xor    bh,ch
  41a6c5:	mov    ebp,0x383f49f2
  41a6ca:	mov    ebx,0x8f297609
  41a6cf:	bound  ebp,QWORD PTR [edx+0x3364f1ea]
  41a6d5:	xor    eax,0x5523fcf9
  41a6da:	das    
  41a6db:	ror    DWORD PTR [edx-0x70d3317a],0xc9
  41a6e2:	jae    0x41a70b
  41a6e4:	aas    
  41a6e5:	retf   
  41a6e6:	or     edi,DWORD PTR [ecx]
  41a6e8:	scas   al,BYTE PTR es:[edi]
  41a6e9:	ds xabort 0x4d
  41a6ed:	jmp    0xd23d:0x9fb03a83
  41a6f4:	mov    ch,BYTE PTR [edx+0x3bdc6a6e]
  41a6fa:	daa    
  41a6fb:	in     eax,0x42
  41a6fd:	sbb    dl,dh
  41a6ff:	xchg   ecx,eax
  41a700:	mov    al,ds:0x1e49a3a6
  41a705:	in     al,dx
  41a706:	repnz call 0x9fc1:0x84b3af7d
  41a70e:	mov    ebp,0x2764693c
  41a713:	mov    gs,WORD PTR [ebx]
  41a715:	sub    eax,0x1895a4a5
  41a71a:	jns    0x41a72c
  41a71c:	mov    dh,0xca
  41a71e:	mov    ds:0xb1fcd41c,al
  41a723:	aas    
  41a724:	pop    es
  41a725:	push   esi
  41a726:	jno    0x41a6fd
  41a728:	das    
  41a729:	mov    eax,0xa7ded2b1
  41a72e:	test   al,0xc6
  41a730:	sbb    BYTE PTR [edx-0x3886e642],al
  41a736:	sbb    ebx,esi
  41a738:	pop    ecx
  41a739:	add    DWORD PTR [edi],0xffffff97
  41a73c:	scas   eax,DWORD PTR es:[edi]
  41a73d:	ins    DWORD PTR es:[edi],dx
  41a73e:	adc    al,0x64
  41a740:	pop    esi
  41a741:	test   ah,cl
  41a743:	mov    esp,0x121d9334
  41a748:	jb     0x41a719
  41a74a:	(bad)  
  41a74b:	pop    ebp
  41a74c:	lods   eax,DWORD PTR ds:[esi]
  41a74d:	and    al,0xae
  41a74f:	std    
  41a750:	mov    cs,WORD PTR [edi]
  41a752:	test   ebx,esi
  41a754:	test   al,0x0
  41a756:	mov    al,0x56
  41a758:	stc    
  41a759:	sub    al,0x40
  41a75b:	dec    ebp
  41a75c:	popf   
  41a75d:	push   eax
  41a75e:	scas   eax,DWORD PTR es:[edi]
  41a75f:	or     dh,ah
  41a761:	inc    esp
  41a762:	sub    eax,0x4395d493
  41a767:	fsub   QWORD PTR [eax+eax*4-0x60]
  41a76b:	mov    al,ds:0x24720498
  41a770:	lea    ebp,[edx]
  41a772:	jge    0x41a7ce
  41a774:	xor    dl,bl
  41a776:	push   edx
  41a777:	adc    eax,0xe77057c8
  41a77c:	add    al,0x84
  41a77e:	adc    eax,0x5067e972
  41a783:	xor    eax,0x6f91f61e
  41a788:	cld    
  41a789:	add    DWORD PTR ds:0x31867ecf,edi
  41a78f:	imul   edi,esp,0xffffff87
  41a792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a793:	xchg   edi,eax
  41a794:	mov    ecx,esp
  41a796:	cmp    edi,edi
  41a798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a799:	fsubr  DWORD PTR [edi+0x5ab2e9ec]
  41a79f:	imul   edx,DWORD PTR [ecx+0x42],0xffffffbb
  41a7a3:	fdiv   QWORD PTR [eax]
  41a7a5:	mov    ebx,0xa9776af8
  41a7aa:	jle    0x41a7b4
  41a7ac:	bound  edi,QWORD PTR [edx-0x56a7db27]
  41a7b2:	cmp    BYTE PTR [ebx-0x76f20f59],ah
  41a7b8:	(bad)  
  41a7b9:	int3   
  41a7ba:	fst    DWORD PTR [bp+di-0x79]
  41a7be:	mov    ah,0xd
  41a7c0:	adc    eax,0x558b9df5
  41a7c5:	in     al,dx
  41a7c6:	mov    DWORD PTR [ebp+0x8],edx
  41a7c9:	jmp    0x41cb87
  41a7ce:	mov    edx,DWORD PTR [ebp+0x8]
  41a7d1:	mov    ebx,DWORD PTR [ebp-0x8]
  41a7d4:	xor    edx,eax
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2-0x5280a9d2]
  41a82d:	mov    bh,0x90
  41a82f:	adc    edi,DWORD PTR [ebp+0x7c]
  41a832:	inc    eax
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	(bad)  
  41a837:	inc    esi
  41a838:	call   0xef689832
  41a83d:	sbb    ecx,0xffffffb0
  41a840:	fadd   DWORD PTR [eax]
  41a842:	imul   DWORD PTR [ecx]
  41a844:	enter  0x9535,0x4c
  41a848:	mov    esp,0x449be2a6
  41a84d:	test   BYTE PTR [ecx+ecx*4],bl
  41a850:	outs   dx,DWORD PTR ds:[esi]
  41a851:	in     eax,dx
  41a852:	cmp    cl,0x17
  41a855:	dec    eax
  41a856:	or     dl,BYTE PTR [eax]
  41a858:	pop    ecx
  41a859:	mov    BYTE PTR [edi-0x7caab0dc],0xea
  41a860:	cmp    BYTE PTR [ebp-0x3cf7d960],bl
  41a866:	stos   DWORD PTR es:[edi],eax
  41a867:	jl     0x41a80e
  41a869:	sbb    DWORD PTR ds:0x19f5541,ebp
  41a86f:	ret    
  41a870:	cmp    eax,0xa6e756ab
  41a875:	lods   eax,DWORD PTR es:[esi]
  41a877:	cmc    
  41a878:	mov    ebx,0x4e424248
  41a87d:	(bad)  
  41a87e:	fistp  QWORD PTR [edi-0x70a80f21]
  41a884:	bound  esi,QWORD PTR [esi-0x2d]
  41a887:	pop    ss
  41a888:	lods   eax,DWORD PTR ds:[esi]
  41a889:	(bad)  
  41a88a:	xlat   BYTE PTR ds:[ebx]
  41a88b:	leave  
  41a88c:	dec    ebp
  41a88d:	mov    edi,0x849f71a4
  41a892:	push   cs
  41a893:	mov    ?,ebx
  41a895:	inc    edi
  41a896:	push   edx
  41a897:	into   
  41a898:	lahf   
  41a899:	and    eax,0x9e07f7f4
  41a89e:	fnstsw WORD PTR [edx+0x11]
  41a8a1:	scas   eax,DWORD PTR es:[edi]
  41a8a2:	jae    0x41a8f5
  41a8a4:	nop
  41a8a5:	or     esp,DWORD PTR [ebx-0x5aaa7c1a]
  41a8ab:	add    ebp,edi
  41a8ad:	pop    eax
  41a8ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8af:	xor    ebx,esi
  41a8b1:	(bad)  
  41a8b2:	scas   al,BYTE PTR es:[edi]
  41a8b3:	xlat   BYTE PTR ds:[ebx]
  41a8b4:	mov    al,ds:0x4562fd3f
  41a8b9:	jno    0x41a8a4
  41a8bb:	sub    eax,0x6688bf07
  41a8c0:	sub    BYTE PTR [eax],0xbf
  41a8c3:	fucom  st(2)
  41a8c5:	sbb    ecx,ecx
  41a8c7:	and    DWORD PTR [esi+edx*4],ecx
  41a8ca:	push   0x81586f5a
  41a8cf:	add    eax,0xe500b815
  41a8d4:	ror    DWORD PTR [ecx+0x354189e3],1
  41a8da:	mov    ch,0xf2
  41a8dc:	adc    dh,cl
  41a8de:	jle    0x41a921
  41a8e0:	push   0xffffffe5
  41a8e2:	ss out dx,al
  41a8e4:	mov    bh,0xe4
  41a8e6:	xchg   DWORD PTR [edi+0x10abd62d],edi
  41a8ec:	push   ebp
  41a8ed:	dec    ebx
  41a8ee:	xor    ecx,DWORD PTR [edi]
  41a8f0:	sub    cl,BYTE PTR [edx+0x79f53e4]
  41a8f6:	das    
  41a8f7:	pushf  
  41a8f8:	cld    
  41a8f9:	sahf   
  41a8fa:	fimul  DWORD PTR [ecx-0x47]
  41a8fd:	add    BYTE PTR [ebp-0x18],0x21
  41a901:	rol    ecx,cl
  41a903:	in     al,0xff
  41a905:	shr    BYTE PTR [ecx-0xa51f34f],0xc4
  41a90c:	sub    eax,0x341fddd9
  41a911:	repnz sub BYTE PTR [ebx+ebp*8],ch
  41a915:	push   eax
  41a916:	rcl    esi,0x87
  41a919:	mov    bl,0xfa
  41a91b:	xor    esp,DWORD PTR [eax]
  41a91d:	ins    BYTE PTR es:[edi],dx
  41a91e:	in     al,dx
  41a91f:	and    DWORD PTR [ecx+0x29],edx
  41a922:	lahf   
  41a923:	fyl2xp1 
  41a925:	lock int 0x36
  41a928:	addr16 jl 0x41a8de
  41a92b:	mov    ecx,0xee4d5c15
  41a930:	sti    
  41a931:	jecxz  0x41a8fb
  41a933:	push   ds
  41a934:	add    al,0xd1
  41a936:	fiadd  WORD PTR [edx+0x28b6a848]
  41a93c:	ins    BYTE PTR es:[edi],dx
  41a93d:	dec    esp
  41a93e:	jle    0x41a994
  41a940:	and    edx,DWORD PTR [ebp+edi*8-0x5f]
  41a944:	inc    esi
  41a945:	push   esi
  41a946:	and    ebp,DWORD PTR [edi]
  41a948:	aaa    
  41a949:	popf   
  41a94a:	inc    edx
  41a94b:	(bad)  
  41a94c:	add    BYTE PTR [ecx+0x3],al
  41a94f:	mov    bh,0x9e
  41a951:	xchg   edx,eax
  41a952:	mov    WORD PTR [ebx-0x5d],cs
  41a955:	mov    bh,0xad
  41a957:	or     BYTE PTR [edi+0x1b2999ee],al
  41a95d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a95e:	test   DWORD PTR [ebp-0x57],ebx
  41a961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a962:	out    dx,eax
  41a963:	and    ch,ah
  41a965:	mov    bh,BYTE PTR [ecx+ecx*2]
  41a968:	imul   esi,DWORD PTR [ebp-0x1fe2df13],0x5b
  41a96f:	and    ah,bl
  41a971:	loopne 0x41a9a2
  41a973:	(bad)  
  41a974:	out    0xc9,al
  41a976:	mov    eax,fs
  41a978:	or     esi,DWORD PTR [eax]
  41a97a:	clc    
  41a97b:	cmp    eax,0x7966d6ad
  41a980:	fild   DWORD PTR [ebp-0x47]
  41a983:	pushf  
  41a984:	xchg   esp,eax
  41a985:	or     al,0x51
  41a987:	xchg   BYTE PTR [esi-0x6b],bh
  41a98a:	scas   al,BYTE PTR es:[edi]
  41a98b:	pop    esi
  41a98c:	inc    esi
  41a98d:	aam    0x9a
  41a98f:	pushf  
  41a990:	cmp    DWORD PTR [edx-0x61],ecx
  41a993:	fstp   DWORD PTR [ebx]
  41a995:	adc    al,0x8e
  41a997:	mov    ebp,0x85b69001
  41a99c:	jo     0x41a9d3
  41a99e:	pop    edi
  41a99f:	jnp    0x41aa1f
  41a9a1:	pusha  
  41a9a2:	retf   
  41a9a3:	push   esi
  41a9a4:	rcr    BYTE PTR [ecx],cl
  41a9a6:	cwde   
  41a9a7:	push   edx
  41a9a8:	add    BYTE PTR [edi+0x36e435dc],cl
  41a9ae:	pusha  
  41a9af:	adc    al,BYTE PTR [ebp+0x467d3afb]
  41a9b5:	mov    dl,0x60
  41a9b7:	out    0x73,al
  41a9b9:	(bad)  
  41a9ba:	scas   eax,DWORD PTR es:[edi]
  41a9bb:	retf   0xbfb3
  41a9be:	aaa    
  41a9bf:	mov    esp,0x46886bc1
  41a9c4:	aas    
  41a9c5:	repz rol BYTE PTR [edx+0x1c64e45a],cl
  41a9cc:	cs stc 
  41a9ce:	lods   eax,DWORD PTR ds:[esi]
  41a9cf:	adc    DWORD PTR [edi+ecx*1+0x2],edx
  41a9d3:	iret   
  41a9d4:	jae    0x41a963
  41a9d6:	dec    ebp
  41a9d7:	cmp    DWORD PTR [esi+0x7018181c],esi
  41a9dd:	test   DWORD PTR [edi-0x62612db9],edi
  41a9e3:	mov    eax,0xd51c84d2
  41a9e8:	ja     0x41a9b8
  41a9ea:	(bad)  
  41a9eb:	clc    
  41a9ec:	(bad)  
  41a9ee:	test   eax,0xb2cd322e
  41a9f3:	mov    ch,0xc3
  41a9f5:	(bad)  
  41a9f6:	idiv   DWORD PTR [ebx-0x51]
  41a9f9:	or     DWORD PTR [edi-0x368be830],0xffffff89
  41aa00:	and    esi,edi
  41aa02:	sbb    bh,BYTE PTR [edx]
  41aa04:	enter  0x2f57,0xc1
  41aa08:	jb     0x41a9ec
  41aa0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa0b:	xchg   ecx,eax
  41aa0c:	scas   al,BYTE PTR es:[edi]
  41aa0d:	sbb    dh,BYTE PTR [ecx-0x76]
  41aa10:	inc    eax
  41aa11:	and    eax,0xca8ba8fa
  41aa16:	arpl   WORD PTR ds:0xaffcdfe7,bx
  41aa1c:	sbb    al,0x28
  41aa1e:	fnstsw WORD PTR [esi-0x7f]
  41aa21:	ret    
  41aa22:	xchg   ebx,eax
  41aa23:	mov    edi,eax
  41aa25:	and    BYTE PTR [eax+ebp*4],ah
  41aa28:	sti    
  41aa29:	ficom  DWORD PTR [edx-0x21a83f4f]
  41aa2f:	sub    BYTE PTR [ebx],0xa0
  41aa32:	int    0xb2
  41aa34:	ror    BYTE PTR [edi+0x13],cl
  41aa37:	mov    esi,0x130e71e4
  41aa3c:	pop    esp
  41aa3d:	popa   
  41aa3e:	ret    
  41aa3f:	ret    
  41aa40:	cmp    al,BYTE PTR [esi-0x68]
  41aa43:	push   esi
  41aa44:	jo     0x41aa49
  41aa46:	mov    cl,0x4c
  41aa48:	adc    ebp,eax
  41aa4a:	mov    dh,0x80
  41aa4c:	jp     0x41aa1f
  41aa4e:	rol    bl,cl
  41aa50:	jae    0x41aa1c
  41aa52:	dec    DWORD PTR [ebx+0x61faf5a4]
  41aa58:	repz in al,0x60
  41aa5b:	repz add esp,eax
  41aa5e:	xchg   esp,eax
  41aa5f:	mov    edx,0x92959d89
  41aa64:	xchg   esp,eax
  41aa65:	cs push eax
  41aa67:	sbb    DWORD PTR ds:0x51049dcd,0xffffffbe
  41aa6e:	cli    
  41aa6f:	mov    fs,edi
  41aa71:	dec    esp
  41aa72:	push   cs
  41aa73:	mov    esp,0xe85e0e02
  41aa78:	fist   DWORD PTR [ecx+eiz*1]
  41aa7b:	ret    0x8df7
  41aa7e:	sub    eax,0x3487249f
  41aa83:	push   esp
  41aa84:	imul   esp,ebx,0x53164e9b
  41aa8a:	sti    
  41aa8b:	sbb    BYTE PTR [edx+0x69e67709],dh
  41aa91:	pop    ecx
  41aa92:	imul   ebx,DWORD PTR [ecx-0xa],0x8ea2771a
  41aa99:	xchg   esi,eax
  41aa9a:	sub    DWORD PTR [eax],ecx
  41aa9c:	xor    esp,DWORD PTR [edx+0x1d741e5f]
  41aaa2:	sub    eax,0x9c6d5b35
  41aaa7:	or     DWORD PTR [ecx+0x4bac8ea2],esi
  41aaad:	pop    ds
  41aaae:	test   BYTE PTR [ebx+0x6f],0xcb
  41aab2:	dec    ebp
  41aab3:	(bad)  
  41aab4:	jbe    0x41aa6e
  41aab6:	repz (bad) 
  41aab8:	imul   esi,DWORD PTR [ebx+0x3d960ff0],0x57458fc1
  41aac2:	adc    cl,BYTE PTR [ebx]
  41aac4:	fisubr DWORD PTR [edx-0x3b]
  41aac7:	daa    
  41aac8:	or     cl,BYTE PTR [ecx+edx*4-0xe17980b]
  41aacf:	arpl   WORD PTR [ecx],bx
  41aad1:	mov    DWORD PTR [edx+0x597991a9],ecx
  41aad7:	loop   0x41ab3f
  41aad9:	retf   
  41aada:	mov    WORD PTR [esi],es
  41aadc:	dec    ebx
  41aadd:	gs test al,0xcd
  41aae0:	inc    eax
  41aae1:	xchg   ebx,eax
  41aae2:	mov    esp,esi
  41aae4:	jmp    0x41ab39
  41aae6:	pop    eax
  41aae7:	outs   dx,BYTE PTR ds:[esi]
  41aae8:	add    ah,BYTE PTR [bp+di]
  41aaeb:	arpl   sp,ax
  41aaed:	sbb    al,0xfc
  41aaef:	out    dx,al
  41aaf0:	fstp   QWORD PTR [edx+0x45667460]
  41aaf6:	cmp    DWORD PTR fs:[ebx-0xb],ecx
  41aafa:	into   
  41aafb:	add    al,0xde
  41aafd:	push   ebp
  41aafe:	push   ebp
  41aaff:	pop    edi
  41ab00:	test   DWORD PTR [ecx],eax
  41ab02:	xchg   edi,eax
  41ab03:	and    eax,edx
  41ab05:	stc    
  41ab06:	jae    0x41ab7f
  41ab08:	fwait
  41ab09:	ds (bad) 
  41ab0b:	mov    ebp,0xa2a2c614
  41ab10:	data16 data16 out dx,al
  41ab13:	inc    ebp
  41ab14:	dec    ebx
  41ab15:	xchg   DWORD PTR [edi],ebp
  41ab17:	or     esp,0xfffffff2
  41ab1a:	pushf  
  41ab1b:	push   ecx
  41ab1c:	mov    es,WORD PTR [ecx]
  41ab1e:	hlt    
  41ab1f:	ficomp DWORD PTR [edi-0x3c]
  41ab22:	push   0x974c4f5e
  41ab27:	sub    al,0x81
  41ab29:	xor    eax,0x9fa0e79c
  41ab2e:	je     0x41aac0
  41ab30:	sbb    BYTE PTR [ebp+0x64740fe1],ah
  41ab36:	jne    0x41aba8
  41ab38:	sub    BYTE PTR [eax+0x15],ah
  41ab3b:	mov    bl,0x38
  41ab3d:	push   esp
  41ab3e:	xor    BYTE PTR [esi],cl
  41ab40:	xchg   edx,eax
  41ab41:	inc    DWORD PTR [edi]
  41ab43:	aam    0xa7
  41ab45:	inc    esp
  41ab46:	xchg   ebp,eax
  41ab47:	xor    esp,DWORD PTR [ebp+0x3b]
  41ab4a:	jae    0x41aafd
  41ab4c:	jbe    0x41aad2
  41ab4e:	ins    BYTE PTR es:[edi],dx
  41ab4f:	and    eax,0x7d71ae00
  41ab54:	les    ebp,FWORD PTR [ecx-0x36]
  41ab57:	adc    DWORD PTR [eax+0x44],edx
  41ab5a:	inc    ecx
  41ab5b:	imul   ebp,DWORD PTR [eax-0x54139819],0x2e
  41ab62:	xor    bl,BYTE PTR ds:0x3d53a339
  41ab68:	out    0xaa,al
  41ab6a:	jno    0x41ab18
  41ab6c:	ror    edi,0x47
  41ab6f:	scas   al,BYTE PTR es:[edi]
  41ab70:	jne    0x41ab57
  41ab72:	int3   
  41ab73:	push   DWORD PTR [ecx+0x72]
  41ab76:	repz loop 0x41abd4
  41ab79:	daa    
  41ab7a:	sub    edx,esi
  41ab7c:	add    al,0xbc
  41ab7e:	xchg   ebp,eax
  41ab7f:	push   eax
  41ab80:	in     al,0x98
  41ab82:	aam    0xfa
  41ab84:	jb     0x41ab1a
  41ab86:	jo     0x41ab0f
  41ab88:	pop    ecx
  41ab89:	pop    edx
  41ab8a:	(bad)  
  41ab8b:	jle    0x41ab52
  41ab8d:	cmp    al,0x50
  41ab8f:	xor    BYTE PTR [edi+0x3ad11dbb],al
  41ab95:	dec    ecx
  41ab96:	retf   
  41ab97:	mov    cs,WORD PTR [edx+0x51]
  41ab9a:	test   edi,ebx
  41ab9c:	sub    BYTE PTR [edi],bl
  41ab9e:	js     0x41ab4d
  41aba0:	sbb    dl,ch
  41aba2:	mov    ch,BYTE PTR [edi]
  41aba4:	retf   0xc2d3
  41aba7:	sub    BYTE PTR cs:[eax+0x36],dh
  41abab:	xchg   esp,eax
  41abac:	push   cs
  41abad:	ja     0x41ab69
  41abaf:	fmul   DWORD PTR [edi]
  41abb1:	retf   0x9243
  41abb4:	js     0x41ab50
  41abb6:	jno    0x41aba3
  41abb8:	daa    
  41abb9:	repnz mov bh,0x92
  41abbc:	hlt    
  41abbd:	aaa    
  41abbe:	(bad)  
  41abc0:	xor    eax,0xf444f6
  41abc5:	inc    ecx
  41abc6:	lea    esp,[edx-0x53]
  41abc9:	dec    ecx
  41abca:	pop    ecx
  41abcb:	rcl    BYTE PTR [edi],0x0
  41abce:	ins    BYTE PTR es:[edi],dx
  41abcf:	int3   
  41abd0:	xchg   edx,eax
  41abd2:	xchg   ecx,eax
  41abd3:	and    BYTE PTR [eax-0x2e],0x29
  41abd7:	push   eax
  41abd8:	call   0xc379:0x9a1513cb
  41abdf:	mov    ah,0xec
  41abe1:	jmp    0x41ac51
  41abe3:	jae    0x41aba9
  41abe5:	ins    DWORD PTR es:[edi],dx
  41abe6:	dec    ebx
  41abe7:	sbb    bh,0xc2
  41abea:	outs   dx,DWORD PTR ds:[esi]
  41abeb:	cmp    eax,0x75c42af9
  41abf0:	mov    ebp,DWORD PTR [ebp+edi*8+0x6800eed]
  41abf7:	loope  0x41ac3c
  41abf9:	(bad)  
  41abfa:	mov    es,WORD PTR [ebp-0x29]
  41abfd:	std    
  41abfe:	lods   al,BYTE PTR ds:[esi]
  41abff:	add    ebp,DWORD PTR [ebx]
  41ac01:	mov    eax,0x155edcd1
  41ac06:	pop    edx
  41ac07:	pushf  
  41ac08:	les    esi,FWORD PTR [eax]
  41ac0a:	xchg   esp,eax
  41ac0b:	ins    BYTE PTR es:[edi],dx
  41ac0c:	and    ch,BYTE PTR ds:[esi]
  41ac0f:	mov    DWORD PTR cs:0x5cf8ae1c,ecx
  41ac16:	push   eax
  41ac17:	push   ecx
  41ac18:	lods   eax,DWORD PTR ds:[esi]
  41ac19:	inc    ebx
  41ac1a:	add    DWORD PTR [edx],esp
  41ac1c:	es call 0xda8955ef
  41ac22:	hlt    
  41ac23:	stc    
  41ac24:	lods   al,BYTE PTR ds:[esi]
  41ac25:	sti    
  41ac26:	pop    eax
  41ac27:	jbe    0x41ac70
  41ac29:	adc    esi,DWORD PTR [esi-0x5c]
  41ac2c:	les    esi,FWORD PTR [ebx]
  41ac2e:	addr16 mov esp,0x137bdaae
  41ac34:	xor    BYTE PTR ds:0x8d31c34d,ah
  41ac3a:	cwde   
  41ac3b:	sub    BYTE PTR [ebx+0x1057b937],dh
  41ac41:	mov    BYTE PTR [eax+0x76],cl
  41ac44:	imul   ebp,DWORD PTR [eax+0x1b],0xdf4bbf80
  41ac4b:	add    esp,ebx
  41ac4d:	in     eax,dx
  41ac4e:	dec    esi
  41ac4f:	lea    ebp,[ebx-0x45822117]
  41ac55:	jns    0x41ac42
  41ac57:	je     0x41ac4e
  41ac59:	stos   DWORD PTR es:[edi],eax
  41ac5a:	out    0x72,eax
  41ac5c:	cmc    
  41ac5d:	pop    ss
  41ac5e:	or     eax,DWORD PTR [ebx-0x5f565b10]
  41ac64:	mov    ah,0x1
  41ac66:	sub    eax,0x1aa92140
  41ac6b:	sbb    DWORD PTR [ebx+0x67],ebp
  41ac6e:	lock pop ebx
  41ac70:	xor    cl,BYTE PTR [ecx+0x1337750a]
  41ac76:	in     eax,0xe7
  41ac78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac79:	xchg   esi,eax
  41ac7a:	aas    
  41ac7b:	mov    ds:0xb3e0e810,eax
  41ac80:	popa   
  41ac81:	fidivr DWORD PTR [edi+edx*1-0x42]
  41ac85:	or     BYTE PTR [ecx-0x5cf383b2],0x78
  41ac8c:	adc    dh,BYTE PTR [edx]
  41ac8e:	xor    BYTE PTR [esi],al
  41ac90:	pop    esp
  41ac91:	pop    ss
  41ac92:	adc    bl,al
  41ac94:	sbb    DWORD PTR [ebx-0x2b],ebx
  41ac97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac98:	xor    ch,bl
  41ac9a:	adc    bh,bl
  41ac9c:	jne    0x41ac1f
  41ac9e:	rol    BYTE PTR [ebp-0x715bfaf7],cl
  41aca4:	repnz sub DWORD PTR cs:[eax],edi
  41aca8:	add    BYTE PTR [eax+0x73a34a4c],cl
  41acae:	sbb    eax,0xf3dd8189
  41acb3:	cwde   
  41acb4:	jns    0x41ac52
  41acb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acb7:	cmp    eax,0xdd76b6bb
  41acbc:	js     0x41acb2
  41acbe:	enter  0xda02,0xe0
  41acc2:	mov    ds:0x978b6c1f,al
  41acc7:	push   eax
  41acc8:	lea    esp,[ebx+edi*1-0x4a04fee3]
  41accf:	pop    ebp
  41acd0:	ret    
  41acd1:	xchg   ecx,eax
  41acd2:	pop    edx
  41acd3:	loope  0x41ad22
  41acd5:	mov    esp,0x5a9a8fb7
  41acda:	jo     0x41acbd
  41acdc:	jo     0x41ad53
  41acde:	cmp    esp,esp
  41ace0:	data16 and ch,BYTE PTR [edx+0x10]
  41ace4:	das    
  41ace5:	ins    DWORD PTR es:[edi],dx
  41ace6:	imul   BYTE PTR [eax+0x7c]
  41ace9:	dec    edx
  41acea:	xchg   ebx,eax
  41aceb:	fmulp  st(4),st
  41aced:	jb     0x41ad5e
  41acef:	jae    0x41ad36
  41acf1:	add    edx,0xe3f51e3b
  41acf7:	aad    0xbb
  41acf9:	inc    edx
  41acfa:	push   0x665225be
  41acff:	test   eax,0x39b158ab
  41ad04:	sub    al,0x56
  41ad06:	test   BYTE PTR [edx],ch
  41ad08:	out    0xe6,al
  41ad0a:	fucomip st,st(0)
  41ad0c:	mov    ds:0xa831f778,al
  41ad11:	or     eax,0xf60286fb
  41ad16:	(bad)  
  41ad17:	pop    ecx
  41ad18:	mov    edi,0xdc385c10
  41ad1d:	mov    edi,0x87a1bbab
  41ad22:	mov    dh,0x33
  41ad24:	shl    DWORD PTR [eax+0x36],0xc8
  41ad28:	xchg   esi,eax
  41ad29:	add    dl,BYTE PTR [ecx]
  41ad2b:	imul   BYTE PTR [ecx+0x63]
  41ad2e:	dec    edi
  41ad2f:	pop    ss
  41ad30:	and    eax,0x8c93cf96
  41ad35:	adc    dl,BYTE PTR [esi+0x204781d2]
  41ad3b:	repnz sbb BYTE PTR [edi-0x2699138f],0xdb
  41ad43:	mov    ah,0xe7
  41ad45:	repnz mov ebp,0x2483e0b0
  41ad4b:	push   0xffffffc3
  41ad4d:	push   esi
  41ad4e:	and    bl,BYTE PTR [eax]
  41ad50:	jb     0x41adb6
  41ad52:	daa    
  41ad53:	push   edi
  41ad54:	enter  0xe274,0x75
  41ad58:	iret   
  41ad59:	mul    DWORD PTR [ebx+ecx*8]
  41ad5c:	aas    
  41ad5d:	in     al,0xee
  41ad5f:	mov    cl,0xf9
  41ad61:	mov    gs,WORD PTR [ecx-0x3c]
  41ad64:	xor    esp,0xd1dcc80a
  41ad6a:	fldcw  WORD PTR [ebx]
  41ad6c:	out    0x29,eax
  41ad6e:	out    0xf9,eax
  41ad70:	das    
  41ad71:	js     0x41ad65
  41ad73:	mov    ebx,0x3c1e8fab
  41ad78:	scas   eax,DWORD PTR es:[edi]
  41ad79:	push   ds
  41ad7a:	xchg   ecx,eax
  41ad7b:	call   0x91aa:0xdf1a9a25
  41ad82:	adc    eax,ecx
  41ad84:	neg    edx
  41ad86:	movups xmm2,XMMWORD PTR [eax+ecx*4+0x68]
  41ad8b:	xchg   esi,eax
  41ad8c:	xor    ebx,edx
  41ad8e:	test   BYTE PTR [ecx],dh
  41ad90:	ds mov sp,0x18bc
  41ad95:	nop
  41ad96:	pop    ss
  41ad97:	and    esp,DWORD PTR [edi-0xb75bd4f]
  41ad9d:	cs push ecx
  41ad9f:	call   0x267:0x4cbd9651
  41ada6:	xor    BYTE PTR [ebx-0x3],cl
  41ada9:	or     eax,0x7d8b214e
  41adae:	aaa    
  41adaf:	ret    
  41adb0:	test   eax,0x13457b3d
  41adb5:	mov    ds:0xd9567c8e,al
  41adba:	lods   al,BYTE PTR ds:[esi]
  41adbb:	fdivr  st,st(0)
  41adbd:	push   ebp
  41adbe:	sbb    al,0x44
  41adc0:	mov    cl,0x3f
  41adc2:	int3   
  41adc3:	mov    edi,ebx
  41adc5:	xchg   ebx,eax
  41adc6:	add    DWORD PTR [edi],0x26
  41adc9:	jmp    0xeb0dab7e
  41adce:	sbb    dh,ah
  41add0:	push   ds
  41add1:	jmp    0x41adac
  41add3:	mov    cl,0x7b
  41add5:	enter  0xcc81,0x39
  41add9:	pop    eax
  41adda:	xor    DWORD PTR [eax],edx
  41addc:	and    eax,0xead19fdf
  41ade1:	sub    BYTE PTR [edx+0x15be52f6],0x34
  41ade8:	jno    0x41ad8b
  41adea:	scas   al,BYTE PTR es:[edi]
  41adeb:	and    BYTE PTR [ebx+0x2966d3c3],bl
  41adf1:	mov    bh,0xe6
  41adf3:	loop   0x41ad7a
  41adf5:	inc    esi
  41adf6:	fst    QWORD PTR cs:[eax-0x2a]
  41adfa:	clc    
  41adfb:	leave  
  41adfc:	loopne 0x41adaf
  41adfe:	push   ds
  41adff:	adc    bh,bl
  41ae01:	lods   eax,DWORD PTR ds:[esi]
  41ae02:	jg     0x41ad8f
  41ae04:	push   ecx
  41ae05:	dec    eax
  41ae06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae07:	jbe    0x41ae01
  41ae09:	push   cs
  41ae0a:	mov    ds:0x7a006b89,eax
  41ae0f:	jmp    ebx
  41ae11:	call   0x4378:0xf31c3125
  41ae18:	cmp    cl,bh
  41ae1a:	and    BYTE PTR [ebx-0x19c92b19],cl
  41ae20:	je     0x41ae76
  41ae22:	js     0x41ae5c
  41ae24:	lods   eax,DWORD PTR ds:[esi]
  41ae25:	leave  
  41ae26:	jae    0x41ae49
  41ae28:	loopne 0x41adce
  41ae2a:	loopne 0x41ae28
  41ae2c:	in     al,0xb3
  41ae2e:	popa   
  41ae2f:	js     0x41ae1f
  41ae31:	pop    ds
  41ae32:	aaa    
  41ae33:	jo     0x41adc4
  41ae35:	in     eax,dx
  41ae36:	dec    ecx
  41ae37:	call   0x1afd:0x1afa0a40
  41ae3e:	mov    esi,0x615a91b6
  41ae43:	inc    DWORD PTR [ebx-0x10]
  41ae46:	xchg   BYTE PTR [ebx+0x4],ch
  41ae49:	ret    0xc1be
  41ae4c:	hlt    
  41ae4d:	xchg   esp,eax
  41ae4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae4f:	(bad)  
  41ae51:	lds    edi,FWORD PTR [ebp-0x42]
  41ae54:	inc    esp
  41ae55:	aaa    
  41ae56:	dec    edi
  41ae57:	push   cs
  41ae58:	inc    edi
  41ae59:	xchg   edi,eax
  41ae5a:	pusha  
  41ae5b:	lods   al,BYTE PTR ds:[esi]
  41ae5c:	loopne 0x41ae1c
  41ae5e:	sbb    eax,0x933aa96e
  41ae63:	jne    0x41aeab
  41ae65:	shl    DWORD PTR [eax+edi*4-0x51],1
  41ae69:	sub    bl,BYTE PTR ds:0x43e8edfe
  41ae6f:	fcom   QWORD PTR cs:[ebp+0x1b]
  41ae73:	jbe    0x41aeb3
  41ae75:	fdivr  QWORD PTR [edi+esi*2]
  41ae78:	pop    ecx
  41ae79:	sub    ecx,DWORD PTR [ecx-0x40156c75]
  41ae7f:	mov    al,dh
  41ae81:	mov    es,WORD PTR [ecx+0x4db5e10d]
  41ae87:	test   eax,0x5a1ebe65
  41ae8c:	ja     0x41aea7
  41ae8e:	retf   0x2956
  41ae91:	xor    DWORD PTR [eax-0x3320bc2c],esi
  41ae97:	cdq    
  41ae98:	shl    BYTE PTR [ebx],cl
  41ae9a:	popa   
  41ae9b:	stos   DWORD PTR es:[edi],eax
  41ae9c:	(bad)  
  41ae9d:	xchg   BYTE PTR ds:[edx-0x561db790],ch
  41aea4:	pushf  
  41aea5:	addr16 add eax,0xcb88d17c
  41aeab:	cld    
  41aeac:	fild   DWORD PTR [ecx+0x1b]
  41aeaf:	ret    0x3df3
  41aeb2:	pop    edi
  41aeb3:	repnz push ebp
  41aeb5:	das    
  41aeb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeb7:	mov    ah,0xf2
  41aeb9:	fs icebp 
  41aebb:	xorps  xmm7,XMMWORD PTR [esi]
  41aebe:	jbe    0x41ae82
  41aec0:	inc    ebp
  41aec1:	mov    DWORD PTR [ecx+esi*8+0x6ffaceb4],esi
  41aec8:	cs mov edi,DWORD PTR gs:[esi*8-0x1bd54629]
  41aed1:	aam    0x78
  41aed3:	push   es
  41aed4:	rcl    DWORD PTR [edx+0x7e],1
  41aed7:	cmp    DWORD PTR [esi+0x7aad78cf],ecx
  41aedd:	inc    edi
  41aede:	xor    eax,0x291e4395
  41aee3:	dec    ecx
  41aee4:	ds pusha 
  41aee6:	in     al,0x4
  41aee8:	aas    
  41aee9:	fmul   QWORD PTR [ebx-0x1c]
  41aeec:	push   edi
  41aeed:	mov    ds:0x40f5c3da,eax
  41aef2:	(bad)  
  41aef3:	xor    al,0xae
  41aef5:	cmp    ch,BYTE PTR [edx-0x1f]
  41aef8:	mov    esi,0x27862fbf
  41aefd:	add    al,BYTE PTR [edx+0x3dbae72d]
  41af03:	xchg   BYTE PTR [esi],cl
  41af05:	int3   
  41af06:	xor    al,0x86
  41af08:	inc    ecx
  41af09:	das    
  41af0a:	lods   al,BYTE PTR ds:[esi]
  41af0b:	mov    esp,0x54865e4f
  41af10:	pop    ss
  41af11:	xor    DWORD PTR [eax],edx
  41af13:	mov    edi,0xa381d011
  41af18:	cmc    
  41af19:	mov    WORD PTR [eax+edi*4+0x472a64a7],?
  41af20:	pop    ds
  41af21:	xor    ah,ch
  41af23:	arpl   WORD PTR [edx-0x39],dx
  41af26:	sbb    al,0x4
  41af28:	mov    ch,0xac
  41af2a:	pop    ebp
  41af2b:	inc    ebp
  41af2c:	xlat   BYTE PTR ds:[ebx]
  41af2d:	push   0x18ccfbd1
  41af32:	push   edi
  41af33:	push   ecx
  41af34:	sti    
  41af35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af36:	in     al,0xa5
  41af38:	pop    edx
  41af39:	push   ebp
  41af3a:	and    bl,ah
  41af3c:	aam    0x6f
  41af3e:	imul   eax,eax,0x7
  41af41:	gs push edx
  41af43:	mov    ch,0x6e
  41af45:	retf   
  41af46:	pop    esi
  41af47:	dec    esp
  41af48:	cmp    al,0x85
  41af4a:	sar    BYTE PTR [ebx],cl
  41af4c:	jno    0x41af2f
  41af4e:	or     dh,cl
  41af50:	mov    dh,0xb5
  41af52:	in     al,dx
  41af53:	cwde   
  41af54:	jae    0x41af0b
  41af56:	stos   BYTE PTR es:[edi],al
  41af57:	cmp    BYTE PTR [ebx],dh
  41af59:	repnz into 
  41af5b:	xchg   esp,eax
  41af5c:	out    dx,al
  41af5d:	add    eax,0x19158c80
  41af62:	sbb    al,dh
  41af64:	adc    ah,cl
  41af66:	inc    edi
  41af67:	shr    DWORD PTR [esi+ecx*4-0x275c302c],0x9a
  41af6f:	mov    cl,0xd7
  41af71:	jno    0x41afef
  41af73:	cmc    
  41af74:	pushf  
  41af75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af76:	fdiv   DWORD PTR [eax+esi*4]
  41af79:	retf   0x444e
  41af7c:	mov    ebx,0xcc652fb9
  41af81:	outs   dx,BYTE PTR ds:[esi]
  41af82:	pop    es
  41af83:	es out dx,eax
  41af85:	mov    eax,DWORD PTR [edx]
  41af87:	add    al,0xd0
  41af89:	add    eax,0x84befeba
  41af8e:	xchg   esi,eax
  41af8f:	cmp    edx,DWORD PTR [ebx+0x6bbb180b]
  41af95:	push   ebp
  41af96:	(bad)  
  41af98:	xchg   esi,eax
  41af99:	pop    edi
  41af9a:	adc    ecx,ecx
  41af9c:	xor    DWORD PTR [edx],ebx
  41af9e:	xchg   ebx,eax
  41af9f:	out    0xdf,eax
  41afa1:	and    DWORD PTR [edx+eax*1+0x215f77c1],ebp
  41afa8:	sbb    bl,BYTE PTR ds:0xfc2dc698
  41afae:	push   0x51b2c799
  41afb3:	std    
  41afb4:	push   ds
  41afb5:	mov    bh,0xf6
  41afb7:	dec    ebp
  41afb8:	lods   eax,DWORD PTR ds:[esi]
  41afb9:	aaa    
  41afba:	sub    ecx,esi
  41afbc:	scas   al,BYTE PTR es:[edi]
  41afbd:	mov    cl,0x7f
  41afbf:	push   esi
  41afc0:	sbb    dh,cl
  41afc2:	sub    al,0xfb
  41afc4:	push   ebp
  41afc5:	inc    ebp
  41afc6:	push   edx
  41afc7:	cmp    ebp,edi
  41afc9:	mov    ch,0xc0
  41afcb:	mov    BYTE PTR [ebx+eiz*4+0x54400646],bl
  41afd2:	aad    0xa0
  41afd4:	adc    ebx,DWORD PTR [ecx]
  41afd6:	pop    ebx
  41afd7:	loope  0x41b011
  41afd9:	daa    
  41afda:	add    edx,eax
  41afdc:	pop    esi
  41afdd:	cdq    
  41afde:	in     al,dx
  41afdf:	fimul  DWORD PTR [edx]
  41afe1:	push   ds
  41afe2:	js     0x41aff6
  41afe4:	sbb    eax,0x77860c3d
  41afe9:	push   ebp
  41afea:	ror    edx,cl
  41afec:	jae    0x41b015
  41afee:	dec    ebp
  41afef:	push   0x680b66a2
  41aff4:	mov    esp,0xe64c62e8
  41aff9:	int    0xcb
  41affb:	or     esi,DWORD PTR [eax+0x2a470cb9]
  41b001:	inc    eax
  41b002:	push   edi
  41b003:	iret   
  41b004:	cs mov ebp,0x14703acf
  41b00a:	sub    eax,0x9776b2c1
  41b00f:	fstp   TBYTE PTR [edx]
  41b011:	mov    ecx,0xf9e5c85b
  41b016:	mov    ?,WORD PTR [esi-0x7a]
  41b019:	and    al,0x9b
  41b01b:	retf   
  41b01c:	pop    esp
  41b01d:	fwait
  41b01e:	rcl    DWORD PTR [edx],1
  41b020:	jg     0x41b00a
  41b022:	mov    esp,0x13c1064b
  41b027:	xchg   edi,eax
  41b028:	dec    edi
  41b029:	fwait
  41b02a:	xchg   ecx,eax
  41b02b:	pop    ss
  41b02c:	repz out dx,eax
  41b02e:	stos   BYTE PTR es:[edi],al
  41b02f:	popf   
  41b030:	fld    DWORD PTR [ecx-0x39]
  41b033:	pushf  
  41b034:	add    DWORD PTR [ebx+0x677b65bf],esi
  41b03a:	enter  0x9156,0x5e
  41b03e:	mov    dh,0xfc
  41b040:	lods   eax,DWORD PTR ds:[esi]
  41b041:	and    BYTE PTR [eax],cl
  41b043:	adc    DWORD PTR [esi+0x51],esp
  41b046:	pusha  
  41b047:	xchg   BYTE PTR [ebx+0xd],bh
  41b04a:	or     DWORD PTR [esi-0x5c],edx
  41b04d:	mov    ebp,0x5089acf3
  41b052:	mov    esi,0x24924340
  41b057:	call   0x5fcd3dd4
  41b05c:	aas    
  41b05d:	shl    BYTE PTR [esi+0xd],cl
  41b060:	push   0x5e
  41b062:	stc    
  41b063:	cmp    eax,0xbfbc7f5
  41b068:	xlat   BYTE PTR ds:[ebx]
  41b069:	(bad)  
  41b06b:	mov    ds:0x9109c359,al
  41b070:	pop    esp
  41b071:	pop    edi
  41b073:	inc    ecx
  41b074:	sbb    DWORD PTR [esi-0x4da96c1c],0xfffffffb
  41b07b:	cs inc bx
  41b07e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b07f:	cmp    al,0x8e
  41b081:	test   al,0xe4
  41b083:	cmp    DWORD PTR [ebx],ebp
  41b085:	add    BYTE PTR [esi],ch
  41b087:	pop    es
  41b088:	adc    BYTE PTR [edx+0x7c],dh
  41b08b:	fdiv   st,st(2)
  41b08d:	push   ecx
  41b08e:	jp     0x41b03f
  41b090:	xor    ebx,ebx
  41b092:	into   
  41b093:	jae    0x41b03a
  41b095:	fcom   st(4)
  41b097:	mov    cl,0xa4
  41b099:	xchg   ebp,eax
  41b09a:	jo     0x41b023
  41b09c:	popa   
  41b09d:	out    0xb,eax
  41b09f:	rol    BYTE PTR [ebp+0x19],1
  41b0a2:	out    dx,al
  41b0a3:	ror    al,0xf2
  41b0a6:	sub    al,BYTE PTR [esi]
  41b0a8:	or     DWORD PTR [ebx-0x7404b18d],edx
  41b0ae:	iret   
  41b0af:	mov    ecx,0x8ef89296
  41b0b4:	cmp    eax,0x9a3d0a40
  41b0b9:	call   0x765ed3c6
  41b0be:	push   edi
  41b0bf:	in     eax,0x88
  41b0c1:	jge    0x41b110
  41b0c3:	push   ebx
  41b0c4:	mov    cs,WORD PTR [edi+0xf]
  41b0c7:	fidivr WORD PTR [edx+0x37803f01]
  41b0cd:	sbb    dl,dl
  41b0cf:	fdiv   QWORD PTR [ecx-0x7b2218b2]
  41b0d5:	bound  edx,QWORD PTR [eax-0x654838ac]
  41b0db:	mov    DWORD PTR [ecx],eax
  41b0dd:	xor    dl,BYTE PTR [ecx+ebp*1+0x19]
  41b0e1:	icebp  
  41b0e2:	push   esi
  41b0e3:	fwait
  41b0e4:	or     ebx,DWORD PTR [ebx+edx*2-0xb]
  41b0e8:	mov    al,0x69
  41b0ea:	in     al,0xbe
  41b0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0ed:	loopne 0x41b0e2
  41b0ef:	mov    eax,?
  41b0f1:	(bad)  
  41b0f2:	mov    ds:0x7a90126c,eax
  41b0f7:	sub    DWORD PTR [ecx+0x6eebb922],eax
  41b0fd:	call   0xa781:0x1e9ef92c
  41b104:	adc    bh,0xa2
  41b107:	outs   dx,DWORD PTR ds:[esi]
  41b108:	in     al,dx
  41b109:	stos   DWORD PTR es:[edi],eax
  41b10a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b10b:	inc    eax
  41b10c:	or     BYTE PTR [edi-0x387d6d52],dl
  41b112:	push   0x0
  41b114:	inc    edx
  41b115:	push   edi
  41b116:	test   BYTE PTR [ecx+edi*4-0x7ef627ff],ch
  41b11d:	or     al,0xf8
  41b120:	jo     0x41b175
  41b122:	jns    0x41b120
  41b124:	aaa    
  41b125:	and    al,0x7b
  41b127:	mov    ch,al
  41b129:	ja     0x41b0b0
  41b12b:	jmp    0x41b152
  41b12d:	clc    
  41b12e:	lahf   
  41b12f:	cs retf 0xfafd
  41b133:	shr    DWORD PTR [ebx+eiz*8],0x76
  41b137:	lds    ecx,FWORD PTR [edx]
  41b139:	add    al,BYTE PTR [edx]
  41b13b:	and    DWORD PTR [ebp+0x3a],edi
  41b13e:	shr    cl,1
  41b140:	fnstsw WORD PTR [ebx]
  41b142:	sti    
  41b143:	pop    esp
  41b144:	arpl   WORD PTR [ecx-0x1f],cx
  41b147:	es stos DWORD PTR es:[edi],eax
  41b149:	pop    eax
  41b14a:	js     0x41b161
  41b14c:	cli    
  41b14d:	push   eax
  41b14e:	mov    es,edi
  41b150:	xor    ebx,DWORD PTR [eax*2-0x4e598bc6]
  41b157:	push   ds
  41b158:	(bad)  
  41b159:	lods   eax,DWORD PTR ds:[esi]
  41b15a:	fnstsw WORD PTR [esi+0x217a3f9e]
  41b160:	jae    0x41b17e
  41b162:	pop    ecx
  41b163:	push   ss
  41b164:	std    
  41b165:	mov    al,ds:0x5ed39862
  41b16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b16b:	test   DWORD PTR ds:0xd1f98d94,esp
  41b171:	pop    ss
  41b172:	mov    ds:0x16792d58,eax
  41b177:	ret    
  41b178:	in     eax,0xac
  41b17a:	and    eax,0x85e6ca0e
  41b17f:	mov    ds:0x88e9f8a9,al
  41b184:	ret    0x3696
  41b187:	repz fild QWORD PTR [edx-0x61682daf]
  41b18e:	push   cs
  41b18f:	call   0x5a5f:0x15601e84
  41b196:	jb     0x41b130
  41b198:	call   0x1e6fdb7d
  41b19d:	pop    ebx
  41b19e:	jmp    0xd79e:0x19e88b1d
  41b1a5:	xor    al,0x76
  41b1a7:	lahf   
  41b1a8:	test   eax,0xe34c8bfe
  41b1ad:	loopne 0x41b168
  41b1af:	mov    bl,0x5c
  41b1b1:	inc    esp
  41b1b2:	adc    al,0x98
  41b1b4:	das    
  41b1b5:	dec    esi
  41b1b6:	fidiv  DWORD PTR [eax+0x70]
  41b1b9:	imul   eax,edx,0x1705b8fb
  41b1bf:	and    al,BYTE PTR [edx-0x39]
  41b1c2:	lahf   
  41b1c3:	call   0x8517:0xd0f84229
  41b1ca:	jg     0x41b185
  41b1cc:	sbb    eax,0xd249c773
  41b1d1:	inc    edx
  41b1d2:	mov    BYTE PTR [edx-0x3f82e270],ch
  41b1d8:	add    dl,ah
  41b1da:	inc    ecx
  41b1db:	mov    ch,0x3d
  41b1dd:	stos   DWORD PTR es:[edi],eax
  41b1de:	and    BYTE PTR fs:[edx-0x2691942c],0xf5
  41b1e6:	dec    ebx
  41b1e7:	iret   
  41b1e8:	pop    ebx
  41b1e9:	aam    0x7e
  41b1eb:	push   edi
  41b1ec:	in     al,dx
  41b1ed:	pop    ebp
  41b1ee:	xor    al,0x84
  41b1f0:	pop    ebx
  41b1f1:	(bad)  
  41b1f2:	push   0xfffffff0
  41b1f4:	ins    BYTE PTR es:[edi],dx
  41b1f5:	fdivr  st(1),st
  41b1f7:	mov    fs,WORD PTR [edi-0x4a1373a9]
  41b1fd:	and    eax,0xffffff81
  41b200:	lods   eax,DWORD PTR ds:[esi]
  41b201:	leave  
  41b202:	jmp    0x197811bc
  41b207:	pop    es
  41b208:	pop    ss
  41b209:	push   cs
  41b20a:	fs je  0x41b19e
  41b20d:	push   esi
  41b20e:	pop    ds
  41b20f:	jo     0x41b21e
  41b211:	and    DWORD PTR [edx+0x59],edx
  41b214:	jmp    0x4d6ecde3
  41b219:	(bad)  
  41b21a:	and    al,0xb1
  41b21c:	add    BYTE PTR [eax-0x2c845e17],0xd6
  41b223:	retf   0x16d0
  41b226:	mov    bh,BYTE PTR [edi+0x18]
  41b229:	(bad)  
  41b22a:	loop   0x41b265
  41b22c:	pop    ebx
  41b22d:	mov    cl,0x84
  41b22f:	push   ecx
  41b230:	hlt    
  41b231:	xor    cl,BYTE PTR [eax+0x27e4471f]
  41b237:	daa    
  41b238:	leave  
  41b239:	repz mov edx,0xc73c6c2f
  41b23f:	cmp    ch,BYTE PTR [ebp-0x55a64c05]
  41b245:	pusha  
  41b246:	in     al,dx
  41b247:	inc    ecx
  41b248:	je     0x41b1e5
  41b24a:	mov    eax,ds:0x8abeb864
  41b24f:	in     al,0x7a
  41b251:	js     0x41b200
  41b253:	dec    edx
  41b254:	jmp    0x5dbf9aff
  41b259:	out    0xf6,al
  41b25b:	call   0x6f2f3cd2
  41b260:	pop    edx
  41b261:	aaa    
  41b262:	xchg   ebp,eax
  41b263:	mov    bh,0x52
  41b265:	test   DWORD PTR [edi+0x3ed08568],edx
  41b26b:	xlat   BYTE PTR ds:[ebx]
  41b26c:	cld    
  41b26d:	imul   edi,DWORD PTR [edx+ebx*4+0x4258a7c8],0xa2b53079
  41b278:	idiv   DWORD PTR [ecx]
  41b27a:	cmp    eax,0x1ac041d0
  41b27f:	xor    al,0xfe
  41b281:	les    esi,FWORD PTR [ebx-0x70]
  41b284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b285:	cmp    bh,ah
  41b287:	ficom  DWORD PTR [ebp+0x62d86b48]
  41b28d:	push   edi
  41b28e:	mov    WORD PTR [esi-0x57f47cd1],?
  41b294:	jecxz  0x41b217
  41b296:	and    ch,dh
  41b298:	sar    esi,1
  41b29a:	push   0xffffffac
  41b29c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b29d:	inc    BYTE PTR [ebp+0x23]
  41b2a0:	pop    edi
  41b2a1:	loopne 0x41b283
  41b2a3:	mov    ecx,0xd7825098
  41b2a8:	fmul   QWORD PTR [ebx+0x1e]
  41b2ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2ac:	sbb    eax,0x16e41c1c
  41b2b1:	jns    0x41b328
  41b2b3:	ds mov esi,0x755f687f
  41b2b9:	cmp    ecx,DWORD PTR [ebp-0x2]
  41b2bc:	dec    esi
  41b2bd:	ror    DWORD PTR [ebp+edi*2+0x4bc8987b],0x12
  41b2c5:	dec    edx
  41b2c6:	xor    eax,0xb42115d6
  41b2cb:	cmp    ecx,ebp
  41b2cd:	addr16 ja 0x41b2eb
  41b2d0:	xchg   DWORD PTR ds:0x710ede6f,ebx
  41b2d6:	add    BYTE PTR [ecx+ecx*1],dl
  41b2d9:	arpl   WORD PTR [ebx-0x29],sp
  41b2dc:	leave  
  41b2dd:	add    esp,DWORD PTR [edi]
  41b2df:	test   al,0x55
  41b2e1:	xor    al,0xd9
  41b2e3:	jnp    0x41b2a0
  41b2e5:	or     BYTE PTR [eax],ch
  41b2e7:	dec    ecx
  41b2e8:	scas   al,BYTE PTR es:[edi]
  41b2e9:	mov    cl,dl
  41b2eb:	inc    ebx
  41b2ec:	rcr    ebp,1
  41b2ee:	or     ebp,ebx
  41b2f0:	in     eax,dx
  41b2f1:	clc    
  41b2f2:	adc    ah,BYTE PTR [edx+0x6a]
  41b2f5:	pop    ebp
  41b2f6:	sti    
  41b2f7:	test   al,0xdc
  41b2f9:	pop    es
  41b2fa:	in     al,0xb1
  41b2fc:	push   edx
  41b2fd:	pop    edx
  41b2fe:	scas   eax,DWORD PTR es:[edi]
  41b2ff:	cli    
  41b300:	add    dl,ch
  41b302:	scas   eax,DWORD PTR es:[edi]
  41b303:	pushw  0x68
  41b306:	mov    esp,0x840c1b5f
  41b30b:	jl     0x41b351
  41b30d:	das    
  41b30e:	je     0x41b2d1
  41b310:	or     al,0x40
  41b312:	mov    DWORD PTR [edi],edi
  41b314:	inc    edx
  41b315:	mov    eax,?
  41b317:	inc    edi
  41b318:	jmp    0xf4b1:0x5f06a12c
  41b31f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b320:	jne    0x41b333
  41b322:	or     eax,0xf92f86f6
  41b327:	fs into 
  41b329:	sahf   
  41b32a:	ins    DWORD PTR es:[edi],dx
  41b32b:	imul   ebp,DWORD PTR [ebp-0x7ce05793],0x7be3cc7e
  41b335:	div    DWORD PTR [ebp-0x7b4ca043]
  41b33b:	fistp  QWORD PTR [ebx+0xcdeac91]
  41b341:	ins    DWORD PTR es:[edi],dx
  41b342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b343:	xchg   BYTE PTR [esi-0x1d532685],cl
  41b349:	lods   al,BYTE PTR ds:[esi]
  41b34a:	popf   
  41b34b:	xchg   si,ax
  41b34d:	in     eax,dx
  41b34e:	mov    edi,0xb423e799
  41b353:	mov    bh,0x4f
  41b355:	rcl    BYTE PTR [ebp-0x25071e91],cl
  41b35b:	js     0x41b399
  41b35d:	dec    esi
  41b35e:	clc    
  41b35f:	xor    al,0x5
  41b361:	aad    0x18
  41b363:	shl    DWORD PTR [esi-0x60ed384d],1
  41b369:	icebp  
  41b36a:	popf   
  41b36b:	ror    DWORD PTR [eax],1
  41b36d:	jno    0x41b3d0
  41b36f:	pop    edx
  41b370:	daa    
  41b371:	adc    esp,DWORD PTR [esi-0x1b86a03f]
  41b377:	or     DWORD PTR [esi],ebx
  41b379:	dec    eax
  41b37a:	and    BYTE PTR [ecx],cl
  41b37c:	sub    bh,BYTE PTR [edi+0x28]
  41b37f:	push   ds
  41b380:	jge    0x41b34a
  41b382:	push   edi
  41b383:	je     0x41b3d0
  41b385:	pop    ebp
  41b386:	xchg   ebx,eax
  41b387:	(bad)  
  41b389:	mov    edi,0xde150b79
  41b38e:	(bad)  
  41b38f:	push   0x66
  41b391:	in     al,dx
  41b392:	xchg   ecx,eax
  41b393:	jecxz  0x41b3ac
  41b395:	pop    esp
  41b396:	ds call 0x561d0164
  41b39c:	pop    ebp
  41b39d:	sub    BYTE PTR [ebx-0x25],0xa7
  41b3a1:	retf   0x667f
  41b3a4:	hlt    
  41b3a5:	push   ecx
  41b3a6:	(bad)  [ecx]
  41b3a8:	cmp    al,0x51
  41b3aa:	jmp    0x1c9e4180
  41b3af:	retf   0x203b
  41b3b2:	test   BYTE PTR [edx+0x2d305caf],0xf1
  41b3b9:	ja     0x41b36f
  41b3bb:	mov    cl,0x89
  41b3bd:	gs sub ch,bl
  41b3c0:	into   
  41b3c1:	inc    ebp
  41b3c2:	adc    al,0xd1
  41b3c4:	pop    ebx
  41b3c5:	int    0x1d
  41b3c7:	mov    eax,ds:0x6d13e065
  41b3cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3ce:	psubusb mm1,QWORD PTR [edi+0x5bf47acc]
  41b3d5:	out    0xe2,eax
  41b3d7:	repz xor DWORD PTR [ebp-0x7e],esp
  41b3db:	aas    
  41b3dc:	das    
  41b3dd:	and    BYTE PTR [edx-0x4ac423c3],dh
  41b3e3:	lods   eax,DWORD PTR ds:[esi]
  41b3e4:	add    al,0x8e
  41b3e6:	xchg   edx,eax
  41b3e7:	pop    esi
  41b3e8:	or     dh,BYTE PTR [ebx-0x41452f42]
  41b3ee:	mov    ch,0xfa
  41b3f0:	adc    edx,esi
  41b3f2:	mov    ah,0x1a
  41b3f4:	aad    0xfa
  41b3f6:	sbb    DWORD PTR [edx+esi*8-0x6b],eax
  41b3fa:	fcom   QWORD PTR [edi-0x4f71ec4d]
  41b400:	fsubr  QWORD PTR [ebx+0x6e]
  41b403:	repz test eax,0xb44af0c8
  41b409:	mov    bl,0xb5
  41b40b:	jbe    0x41b3a6
  41b40d:	cmp    dl,dl
  41b40f:	cmp    BYTE PTR [ebp-0x63],0x64
  41b413:	adc    al,0x46
  41b415:	or     ecx,DWORD PTR [ebx+0x1326152d]
  41b41b:	inc    ebx
  41b41c:	cmp    ebx,DWORD PTR [edx-0x45]
  41b41f:	outs   dx,BYTE PTR ds:[esi]
  41b420:	sub    DWORD PTR [eax],esi
  41b422:	add    BYTE PTR cs:[ecx],dl
  41b425:	nop
  41b426:	sub    BYTE PTR [eax-0x15bc4b8f],ah
  41b42c:	test   al,0x31
  41b42e:	mov    bl,0xb5
  41b430:	jl     0x41b44f
  41b432:	push   cs
  41b433:	sub    eax,0x8533c8c7
  41b438:	push   cs
  41b439:	dec    edi
  41b43a:	loopne 0x41b424
  41b43c:	pusha  
  41b43d:	test   DWORD PTR [ecx-0x54],0xc56875fb
  41b444:	mov    bl,0xe2
  41b446:	test   al,0xd6
  41b448:	dec    edx
  41b449:	sub    al,0x37
  41b44b:	inc    esi
  41b44c:	sbb    DWORD PTR [esi-0x17],eax
  41b44f:	mov    cl,0x64
  41b451:	cmp    DWORD PTR [ebx+0x61],eax
  41b454:	pop    ecx
  41b455:	and    eax,0xd5ab1d78
  41b45a:	cdq    
  41b45b:	rcl    BYTE PTR [ebx+ecx*1-0x78ebce61],cl
  41b462:	or     bh,bl
  41b464:	js     0x41b4e3
  41b466:	sub    eax,0x1a97404a
  41b46b:	inc    edx
  41b46c:	dec    ecx
  41b46d:	movntps XMMWORD PTR [esi],xmm4
  41b470:	jae    0x41b44c
  41b472:	dec    ebx
  41b473:	jae    0x41b465
  41b475:	pop    edx
  41b476:	int    0x60
  41b478:	pushf  
  41b479:	mov    eax,ds:0xf41e292d
  41b47e:	idiv   DWORD PTR [ecx-0x55d84576]
  41b484:	mov    edi,0x594e0b7
  41b489:	xchg   esi,eax
  41b48a:	repnz nop
  41b48c:	aad    0x5c
  41b48e:	ret    0xee4d
  41b491:	retf   0xa802
  41b494:	retf   0xcf46
  41b497:	les    esp,FWORD PTR [edx-0x74]
  41b49a:	aaa    
  41b49b:	aad    0x61
  41b49d:	cmp    BYTE PTR [esi],0xc1
  41b4a0:	nop
  41b4a1:	mov    al,0xf1
  41b4a3:	ds test eax,0x2e76263
  41b4a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4aa:	shl    BYTE PTR [edx+ecx*1],1
  41b4ad:	int    0x1e
  41b4af:	in     eax,dx
  41b4b0:	repz dec esi
  41b4b2:	inc    ebp
  41b4b3:	pop    ss
  41b4b4:	push   es
  41b4b5:	in     al,0x9e
  41b4b7:	jnp    0x41b4a6
  41b4b9:	outs   dx,DWORD PTR ds:[esi]
  41b4ba:	pop    ebp
  41b4bb:	add    esi,DWORD PTR [edi-0x1db9d0f4]
  41b4c1:	into   
  41b4c2:	xor    BYTE PTR [eax+edx*1],ah
  41b4c5:	hlt    
  41b4c6:	ss in  eax,dx
  41b4c8:	push   0xffa71159
  41b4cd:	nop
  41b4ce:	mov    eax,fs
  41b4d0:	mov    edx,0x1e71da1
  41b4d5:	mov    esi,0xe3a5b78e
  41b4da:	or     al,0x92
  41b4dc:	in     eax,0xb3
  41b4de:	in     al,0x87
  41b4e0:	test   BYTE PTR [edi],al
  41b4e2:	imul   ebx,DWORD PTR [ebx+0x4b],0x3f01dce7
  41b4e9:	popa   
  41b4ea:	test   BYTE PTR [edi-0x3984c9d],al
  41b4f0:	add    DWORD PTR [eax-0x4d116c07],edi
  41b4f6:	lock gs call 0xdcf0:0x73ade3bc
  41b4ff:	jg     0x41b53e
  41b501:	into   
  41b502:	add    DWORD PTR [ebp+0x3c],0xffffff9e
  41b506:	(bad)  
  41b507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b508:	mov    esi,0xebad8f23
  41b50d:	popa   
  41b50e:	dec    eax
  41b50f:	shl    dl,cl
  41b511:	into   
  41b512:	dec    edx
  41b513:	mov    eax,ds:0x599ed982
  41b518:	sub    al,0xbf
  41b51a:	xchg   edi,eax
  41b51b:	cmp    esp,ebx
  41b51d:	mov    DWORD PTR [ecx],esp
  41b51f:	adc    eax,DWORD PTR [ecx-0x55]
  41b522:	div    DWORD PTR [eax]
  41b524:	aad    0x2f
  41b526:	inc    esi
  41b527:	sub    DWORD PTR [edi+0x64],esp
  41b52a:	clc    
  41b52b:	xor    al,BYTE PTR [eax+0x45]
  41b52e:	mov    edi,0x114797a8
  41b533:	cmc    
  41b534:	sbb    BYTE PTR [ebx-0x7b],bh
  41b537:	(bad)  
  41b538:	add    dl,ah
  41b53a:	and    al,0xd8
  41b53c:	inc    ebx
  41b53d:	bswap  esp
  41b53f:	mov    esi,0x4e6e6bfc
  41b544:	jle    0x41b59d
  41b546:	bound  esp,QWORD PTR [edx-0x50a9dca8]
  41b54c:	in     eax,0x85
  41b54e:	sub    bl,0xd1
  41b551:	js     0x41b4e3
  41b553:	or     DWORD PTR [esi+0x543dde61],esp
  41b559:	mov    ecx,0x21f8308b
  41b55e:	icebp  
  41b55f:	ins    DWORD PTR es:[edi],dx
  41b560:	retf   0xdef1
  41b563:	adc    BYTE PTR [edx+0x6c529bbb],bl
  41b569:	addr16 fucom st(1)
  41b56c:	pop    es
  41b56d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b56e:	dec    ebp
  41b56f:	mov    ds:0x561cf868,eax
  41b574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b575:	repz les eax,FWORD PTR [ecx+0x56523d19]
  41b57c:	sbb    ebx,DWORD PTR gs:[ecx-0x4c344791]
  41b583:	sti    
  41b584:	cmp    bl,BYTE PTR [edx+edi*8-0x16ce9fb2]
  41b58b:	sbb    al,0x3f
  41b58d:	retf   0x7811
  41b590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b591:	popa   
  41b592:	lea    ecx,[esi-0x20792d40]
  41b598:	pop    edi
  41b599:	out    0x21,eax
  41b59b:	int3   
  41b59c:	pop    ebx
  41b59d:	js     0x41b5d2
  41b59f:	out    dx,eax
  41b5a0:	pop    es
  41b5a1:	das    
  41b5a2:	xchg   edx,eax
  41b5a3:	or     eax,0xb34d8e0e
  41b5a8:	xchg   esi,eax
  41b5a9:	outs   dx,DWORD PTR ds:[esi]
  41b5aa:	mov    al,0xc5
  41b5ac:	fistp  DWORD PTR [edi]
  41b5ae:	iret   
  41b5af:	push   edx
  41b5b0:	pop    eax
  41b5b1:	pop    esp
  41b5b2:	add    al,0x1e
  41b5b4:	cmp    bh,BYTE PTR [eax+ecx*4-0x46]
  41b5b8:	ret    
  41b5b9:	or     dl,bl
  41b5bb:	cwde   
  41b5bc:	pushf  
  41b5bd:	adc    esi,DWORD PTR [edx+0x2d]
  41b5c0:	push   ds
  41b5c1:	pop    eax
  41b5c2:	sbb    DWORD PTR [eax+eiz*2-0x11fb7cc1],ecx
  41b5c9:	push   ebx
  41b5ca:	or     ecx,0xeaf82864
  41b5d0:	push   ss
  41b5d1:	into   
  41b5d2:	mov    al,ds:0x57307b85
  41b5d7:	inc    esi
  41b5d8:	movq   mm5,QWORD PTR [ebx+0x28]
  41b5dc:	loopne 0x41b5bd
  41b5de:	inc    edx
  41b5df:	int3   
  41b5e0:	adc    ah,0xae
  41b5e3:	jb     0x41b5e6
  41b5e5:	addr16 das 
  41b5e7:	mov    eax,ds:0x52b382ed
  41b5ec:	shr    dh,0xf7
  41b5ef:	(bad)  
  41b5f0:	test   al,0x33
  41b5f2:	jo     0x41b65e
  41b5f4:	pop    edx
  41b5f5:	push   ebp
  41b5f6:	sbb    ebp,DWORD PTR [ebp+ebp*1+0x2e]
  41b5fa:	les    edx,FWORD PTR [ecx+0x13]
  41b5fd:	mov    bl,0x54
  41b5ff:	mov    al,dh
  41b601:	shr    DWORD PTR [ecx+eax*4],0xb0
  41b605:	enter  0x8c59,0xfa
  41b609:	inc    eax
  41b60a:	test   al,0x38
  41b60c:	aad    0x56
  41b60e:	xchg   ecx,eax
  41b60f:	mov    WORD PTR [eax+esi*8+0x635b5147],?
  41b616:	enter  0xe2f5,0x71
  41b61a:	dec    esp
  41b61b:	test   al,0xaf
  41b61d:	repz pop ebx
  41b61f:	or     al,0x71
  41b621:	out    dx,al
  41b622:	sub    dh,cl
  41b624:	fwait
  41b625:	mov    dh,0x5a
  41b627:	adc    BYTE PTR [ebx-0x44],cl
  41b62a:	inc    ebx
  41b62b:	mov    eax,ds:0xd7d3c1
  41b630:	xchg   ebp,eax
  41b631:	fiadd  WORD PTR [edx+ecx*1-0x12934476]
  41b638:	and    ebp,ebp
  41b63a:	cmp    BYTE PTR [ebx-0x7a38cf85],bh
  41b640:	inc    ebp
  41b641:	xchg   DWORD PTR [edi],edx
  41b643:	and    DWORD PTR [esi+0xc404cd9],eax
  41b649:	xor    DWORD PTR es:[esi-0x1dcfeafe],0x23
  41b651:	push   esp
  41b652:	iret   
  41b653:	leave  
  41b654:	mov    eax,ds:0xcca4a3db
  41b659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b65a:	mov    ds:0x77670bb2,al
  41b65f:	pop    ds
  41b660:	arpl   WORD PTR [ecx+eiz*1],si
  41b663:	inc    edi
  41b664:	mov    cl,0x33
  41b666:	jo     0x41b61a
  41b668:	out    dx,eax
  41b669:	cmp    esi,ecx
  41b66b:	and    al,0xee
  41b66d:	jno    0x41b692
  41b66f:	sub    eax,esi
  41b671:	pusha  
  41b672:	mov    eax,ds:0x866faed5
  41b677:	mov    ecx,0xaac1e04a
  41b67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b67d:	sti    
  41b67e:	inc    ecx
  41b67f:	rcr    al,1
  41b681:	(bad)  
  41b682:	cdq    
  41b683:	adc    eax,0x3ea194b2
  41b688:	push   es
  41b689:	shl    BYTE PTR [esi-0x5e99bec1],1
  41b68f:	out    dx,eax
  41b690:	lds    eax,FWORD PTR [ebx-0x313e7607]
  41b696:	test   DWORD PTR [ebx-0x10],edi
  41b699:	sbb    BYTE PTR [edi],bl
  41b69b:	lods   eax,DWORD PTR ds:[esi]
  41b69c:	add    al,0x17
  41b69e:	cli    
  41b69f:	ins    DWORD PTR es:[edi],dx
  41b6a0:	jbe    0x41b6dd
  41b6a2:	mov    ds:0xd22f6fc3,al
  41b6a7:	dec    esi
  41b6a8:	fs cs adc ecx,esp
  41b6ac:	jnp    0x41b721
  41b6ae:	aas    
  41b6af:	xor    al,0x74
  41b6b1:	sub    eax,0xcd1c0709
  41b6b6:	in     eax,0xa1
  41b6b8:	leave  
  41b6b9:	cmp    ebp,0x3895ab3d
  41b6bf:	ficom  DWORD PTR [ebx]
  41b6c1:	outs   dx,DWORD PTR ds:[esi]
  41b6c2:	rol    ebx,1
  41b6c4:	xor    BYTE PTR [esi-0x329ad574],bh
  41b6ca:	push   esi
  41b6cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6cc:	inc    ecx
  41b6cd:	mov    DWORD PTR [eax-0xc43187c],esi
  41b6d3:	(bad)  
  41b6d4:	mov    edi,0xa68e201f
  41b6d9:	por    mm7,QWORD PTR [esi+0x2e3f1d69]
  41b6e0:	in     al,dx
  41b6e1:	repz int 0xe2
  41b6e4:	out    dx,eax
  41b6e5:	adc    DWORD PTR ds:0x16779e5d,ebp
  41b6eb:	inc    esp
  41b6ec:	sbb    al,0x36
  41b6ee:	out    0x4a,eax
  41b6f0:	or     bl,bh
  41b6f2:	sub    DWORD PTR [ebp+0x72],edi
  41b6f5:	adc    edx,DWORD PTR [edi]
  41b6f7:	xor    eax,0xee2210c5
  41b6fc:	scas   al,BYTE PTR es:[edi]
  41b6fd:	(bad)  
  41b6fe:	cwde   
  41b6ff:	fcom   QWORD PTR [edi]
  41b701:	mov    esp,0x93b987c8
  41b707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b708:	mov    al,0xe4
  41b70a:	arpl   WORD PTR [ecx],bp
  41b70c:	inc    edx
  41b70d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b70e:	add    DWORD PTR [esi+0xf],0xffffffbf
  41b712:	or     DWORD PTR [eax+esi*2],esp
  41b715:	cmc    
  41b716:	push   eax
  41b717:	inc    esi
  41b718:	mov    WORD PTR [eax+0x99abdc4],gs
  41b71e:	cmp    esi,DWORD PTR [edi+ebp*1+0x23c27048]
  41b725:	cld    
  41b726:	ja     0x41b749
  41b728:	(bad)  [edx-0x12]
  41b72b:	getsec 
  41b72d:	and    edx,edi
  41b72f:	(bad)  
  41b732:	push   eax
  41b733:	lock ja 0x41b76c
  41b736:	inc    esp
  41b737:	pop    ss
  41b738:	fs cwde 
  41b73a:	div    BYTE PTR [ebx+0x5273b2d1]
  41b740:	ss mul dh
  41b743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b744:	clc    
  41b745:	rcr    DWORD PTR [edi+eax*8],0x2b
  41b749:	daa    
  41b74a:	es pop es
  41b74c:	js     0x41b75a
  41b74e:	sbb    al,0xc4
  41b750:	hlt    
  41b751:	or     BYTE PTR ds:0xd47c63ab,0x8d
  41b758:	add    BYTE PTR [edx+0xea45b9],ch
  41b75e:	mov    al,0xbc
  41b760:	into   
  41b761:	inc    edi
  41b762:	lock mov edx,0xbef04461
  41b768:	push   ds
  41b769:	sar    ch,0xea
  41b76c:	mov    edx,0xd03746f3
  41b771:	inc    ebp
  41b772:	sar    ebx,0x3b
  41b775:	pusha  
  41b776:	adc    BYTE PTR [eax],0x3
  41b779:	test   al,0xd8
  41b77b:	or     dh,BYTE PTR [edx+0x61]
  41b77e:	dec    esp
  41b77f:	dec    BYTE PTR [edi]
  41b781:	icebp  
  41b782:	jge    0x41b7ca
  41b784:	cmp    al,0x33
  41b786:	adc    al,0xd6
  41b788:	xor    eax,0x8562186
  41b78d:	scas   eax,DWORD PTR es:[edi]
  41b78e:	mov    cl,BYTE PTR [edx]
  41b790:	sub    eax,DWORD PTR [ebp+0x5e]
  41b793:	xor    al,0x89
  41b795:	push   0x76
  41b797:	and    DWORD PTR [eax+esi*8],eax
  41b79a:	dec    ecx
  41b79c:	add    al,0x16
  41b79e:	fwait
  41b79f:	in     eax,0xf5
  41b7a1:	add    eax,0xf2160c58
  41b7a6:	data16 icebp 
  41b7a8:	dec    BYTE PTR [ebp+0x2a341f8]
  41b7ae:	xor    bl,BYTE PTR [edx]
  41b7b0:	mov    ds:0xe01a8fd3,eax
  41b7b5:	push   eax
  41b7b6:	ds mov ah,0xb7
  41b7b9:	inc    eax
  41b7ba:	dec    edx
  41b7bb:	int    0x92
  41b7bd:	call   0xc0bb:0xa6cfb9a9
  41b7c4:	imul   esp,DWORD PTR [edx+0x5f37110e],0x44cd420e
  41b7ce:	sub    BYTE PTR [edx-0x3d],dh
  41b7d1:	push   ecx
  41b7d2:	inc    ebp
  41b7d3:	stc    
  41b7d4:	(bad)  
  41b7d5:	in     al,0x80
  41b7d7:	outs   dx,BYTE PTR ds:[esi]
  41b7d8:	sub    DWORD PTR [edx],ecx
  41b7da:	fdivr  DWORD PTR [esp+esi*1+0x7f]
  41b7de:	mov    ah,0x2b
  41b7e0:	mov    cl,0x6b
  41b7e2:	mov    eax,ds:0x8383fc6
  41b7e7:	(bad)  
  41b7e8:	pushf  
  41b7e9:	cmp    ah,BYTE PTR [edx+edx*1+0x782e8eb5]
  41b7f0:	mov    ds:0xc98f2af2,al
  41b7f5:	sar    DWORD PTR [eax+0x3d6d64c6],cl
  41b7fb:	call   0xc590:0x19bcaf3a
  41b802:	mov    ah,0xba
  41b804:	ins    DWORD PTR es:[edi],dx
  41b805:	or     al,0x3d
  41b807:	sub    ebx,DWORD PTR [edx+0x6fc2c67f]
  41b80d:	cmp    edi,DWORD PTR ds:0x91c01dad
  41b813:	add    BYTE PTR [edx-0xf0fb761],ch
  41b819:	push   esi
  41b81a:	add    BYTE PTR [ecx+ecx*4+0x3724d8e7],dh
  41b821:	lahf   
  41b822:	jg     0x41b7c7
  41b824:	mov    eax,ds:0x8922bb79
  41b829:	pop    ebx
  41b82a:	jnp    0x41b81d
  41b82c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b82d:	xchg   BYTE PTR [edi+0x4],dh
  41b830:	jne    0x41b7bd
  41b832:	add    bh,0x80
  41b835:	pop    esp
  41b836:	mov    DWORD PTR [ecx+0x35ad0794],edx
  41b83c:	out    dx,al
  41b83d:	stos   DWORD PTR es:[edi],eax
  41b83e:	xchg   BYTE PTR ds:0x6df90890,dl
  41b844:	push   ebp
  41b845:	js     0x41b814
  41b847:	fdivr  QWORD PTR ds:[esi-0x34]
  41b84b:	sub    dh,al
  41b84d:	ds lods eax,DWORD PTR fs:[esi]
  41b850:	fdiv   QWORD PTR ss:[esi]
  41b853:	mov    esp,0xbf99df1b
  41b858:	ins    BYTE PTR es:[edi],dx
  41b859:	cmp    al,0x63
  41b85b:	cli    
  41b85c:	scas   eax,DWORD PTR es:[edi]
  41b85d:	fdivr  QWORD PTR [edi+eax*4]
  41b860:	adc    al,0x9a
  41b862:	mov    esi,0xed82a465
  41b867:	outs   dx,BYTE PTR ds:[esi]
  41b868:	shr    DWORD PTR [ecx+0x52],1
  41b86b:	inc    esi
  41b86c:	sub    eax,0x62d06e8a
  41b871:	or     eax,DWORD PTR [esi]
  41b873:	xor    eax,0x4bf6afa1
  41b878:	(bad)  
  41b879:	dec    eax
  41b87a:	jb     0x41b8df
  41b87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b87d:	dec    ebp
  41b87e:	xchg   al,ah
  41b880:	xor    eax,0x517ba8ab
  41b885:	cld    
  41b886:	maskmovq mm7,(bad)
  41b887:	idiv   DWORD PTR [edx+0x74]
  41b88a:	icebp  
  41b88b:	jo     0x41b870
  41b88d:	and    eax,0x84d213a1
  41b892:	pop    edi
  41b893:	data16 mov ah,0xc2
  41b896:	rsqrtps xmm6,XMMWORD PTR [ebx-0x3a]
  41b89a:	xor    al,0xa4
  41b89c:	lods   al,BYTE PTR ds:[esi]
  41b89d:	leave  
  41b89e:	sub    al,0x87
  41b8a0:	xor    ch,BYTE PTR [ebx]
  41b8a2:	adc    edi,DWORD PTR [ebx]
  41b8a4:	pop    esi
  41b8a5:	xor    eax,0x4af1a96a
  41b8aa:	scas   eax,DWORD PTR es:[edi]
  41b8ab:	fild   QWORD PTR [edi]
  41b8ad:	pushf  
  41b8ae:	repz push esi
  41b8b0:	sbb    al,BYTE PTR [ebx+0x47]
  41b8b3:	push   ecx
  41b8b4:	test   DWORD PTR [ebx+0x34],0xf4905df5
  41b8bb:	sub    BYTE PTR [esi+0x5db7f61b],ah
  41b8c1:	pop    edi
  41b8c2:	inc    esp
  41b8c3:	push   eax
  41b8c4:	xor    ch,bl
  41b8c6:	jno    0x41b891
  41b8c8:	dec    esp
  41b8c9:	sbb    ebx,ecx
  41b8cb:	pop    eax
  41b8cc:	add    ebp,DWORD PTR [ecx+0x4d51d399]
  41b8d2:	lahf   
  41b8d3:	ins    BYTE PTR es:[edi],dx
  41b8d4:	or     esp,ebp
  41b8d6:	cs jecxz 0x41b8f7
  41b8d9:	call   0x7548:0xe0e0a75d
  41b8e0:	out    0xea,al
  41b8e2:	call   0x86aa2ac0
  41b8e7:	inc    DWORD PTR [ebx-0x68]
  41b8ea:	repz (bad) 
  41b8ec:	test   al,0x70
  41b8ee:	into   
  41b8ef:	(bad)  
  41b8f0:	retf   0xbbbc
  41b8f3:	int3   
  41b8f4:	xor    dl,BYTE PTR [ebp-0xb]
  41b8f7:	popa   
  41b8f8:	mov    eax,ds:0x2c0c5549
  41b8fd:	rcr    BYTE PTR [ecx+0x66c12a32],0xe7
  41b904:	stc    
  41b905:	dec    esp
  41b906:	ins    BYTE PTR es:[edi],dx
  41b907:	iret   
  41b908:	xchg   DWORD PTR [ebx+0x2b],edi
  41b90b:	xchg   edx,eax
  41b90c:	jae    0x41b931
  41b90e:	jno    0x41b94c
  41b910:	pop    edx
  41b911:	cmp    ebp,ecx
  41b913:	call   0x25ea76ea
  41b918:	xor    ecx,DWORD PTR [edx-0x40]
  41b91b:	pop    ds
  41b91c:	sub    bh,bh
  41b91e:	test   al,0x7e
  41b920:	fs xchg esi,eax
  41b922:	icebp  
  41b923:	inc    esi
  41b924:	mov    dh,0xc7
  41b926:	fcom   QWORD PTR ds:0x5685720e
  41b92c:	cs (bad) 
  41b92e:	call   0xd79e306a
  41b933:	pop    edx
  41b934:	push   ss
  41b935:	and    eax,0x642025d0
  41b93a:	ss (bad) 
  41b93c:	out    0x15,eax
  41b93e:	ja     0x41b977
  41b940:	push   0x44
  41b942:	mov    DWORD PTR [eax],esp
  41b944:	aas    
  41b945:	dec    edi
  41b946:	popfw  
  41b948:	xchg   esi,ebp
  41b94a:	aad    0xe
  41b94c:	sub    ah,BYTE PTR [eax-0x65]
  41b94f:	mov    ebp,0xf4068891
  41b954:	add    DWORD PTR [ebp-0x57],0x14
  41b958:	sub    DWORD PTR [esi-0x2d7c4523],edi
  41b95e:	push   cs
  41b95f:	mov    edi,0x3574b264
  41b964:	js     0x41b997
  41b966:	dec    esi
  41b967:	int3   
  41b968:	mov    eax,ds:0xb9b7e6cf
  41b96d:	pop    ds
  41b96e:	lods   al,BYTE PTR ds:[esi]
  41b96f:	(bad)  
  41b970:	(bad)  
  41b971:	(bad)  
  41b972:	sub    eax,esp
  41b974:	mov    fs,ebp
  41b976:	fild   WORD PTR [edi+0x361458d1]
  41b97c:	std    
  41b97d:	aad    0x20
  41b97f:	jl     0x41b92c
  41b981:	ret    0x56de
  41b984:	pop    es
  41b985:	repnz test eax,0x81c09255
  41b98b:	repz add DWORD PTR [ebx],ebp
  41b98e:	jmp    0xa811:0xe69191c2
  41b995:	inc    esi
  41b996:	xor    ah,dl
  41b998:	test   eax,0x7d74cf49
  41b99d:	cs jmp 0x41ba05
  41b9a0:	lahf   
  41b9a1:	and    esp,DWORD PTR [ecx]
  41b9a3:	call   0xb8f9ae4e
  41b9a8:	imul   eax,DWORD PTR [ecx],0xffffffc3
  41b9ab:	and    eax,0xc4b75685
  41b9b0:	fistp  QWORD PTR [eax+0x1a]
  41b9b3:	mov    gs,WORD PTR [ebx+0x6ed897ed]
  41b9b9:	mov    bh,0x43
  41b9bb:	cmc    
  41b9bc:	dec    edx
  41b9bd:	jo     0x41b996
  41b9bf:	inc    esp
  41b9c0:	nop
  41b9c1:	xchg   DWORD PTR [ebp+0x65],edx
  41b9c4:	(bad)  
  41b9c5:	int    0x73
  41b9c7:	add    ah,BYTE PTR [ecx]
  41b9c9:	outs   dx,DWORD PTR ds:[esi]
  41b9ca:	(bad)  
  41b9cb:	mov    edx,0x2992e88f
  41b9d0:	out    0xfa,eax
  41b9d2:	loope  0x41b985
  41b9d4:	sub    esi,DWORD PTR fs:[edx+0x11d4d98d]
  41b9db:	fsubr  QWORD PTR [edi]
  41b9dd:	sahf   
  41b9de:	adc    ch,al
  41b9e0:	mov    cl,0x95
  41b9e2:	sub    ah,BYTE PTR [ebp+edx*2-0x4ad04d31]
  41b9e9:	sar    BYTE PTR [ecx+0x19],1
  41b9ec:	jmp    0xe4b24873
  41b9f1:	loop   0x41b9da
  41b9f3:	jae    0x41ba00
  41b9f5:	jg     0x41b9db
  41b9f7:	and    al,0xf2
  41b9f9:	shl    DWORD PTR [esi+0x79],cl
  41b9fc:	jno    0x41b9cf
  41b9fe:	ins    BYTE PTR es:[edi],dx
  41b9ff:	aam    0x7d
  41ba01:	popa   
  41ba02:	popf   
  41ba03:	stos   BYTE PTR es:[edi],al
  41ba04:	jb     0x41b9b8
  41ba06:	dec    edx
  41ba07:	dec    ecx
  41ba08:	shl    DWORD PTR [ebp+0x73c5c10a],1
  41ba0e:	xor    ah,ch
  41ba10:	cdq    
  41ba11:	lods   al,BYTE PTR ds:[esi]
  41ba12:	rcr    DWORD PTR [ecx],cl
  41ba14:	mov    BYTE PTR [ebp+0x2a],ah
  41ba17:	rcr    BYTE PTR [ebx+0x33],1
  41ba1a:	xchg   edi,eax
  41ba1b:	adc    eax,0x5cd1a374
  41ba20:	sbb    esi,DWORD PTR [ebp+0x426495ad]
  41ba26:	adc    BYTE PTR ds:0xd8c9030d,al
  41ba2c:	scas   eax,DWORD PTR es:[edi]
  41ba2d:	out    0x3a,al
  41ba2f:	(bad)  
  41ba30:	std    
  41ba31:	mov    eax,0xf9e40c15
  41ba36:	bound  edx,QWORD PTR [ecx]
  41ba38:	or     al,0x5c
  41ba3a:	mov    al,BYTE PTR [edi+0x29]
  41ba3d:	mov    ah,0xc6
  41ba3f:	cmp    DWORD PTR [ebx+0xcdae270],eax
  41ba45:	inc    esp
  41ba46:	xor    al,bl
  41ba48:	repnz xchg esp,eax
  41ba4a:	inc    esi
  41ba4b:	and    al,BYTE PTR [ebx+0x79c88d65]
  41ba51:	ins    DWORD PTR es:[edi],dx
  41ba52:	shl    BYTE PTR [ebx-0x7d5bce61],cl
  41ba58:	loop   0x41ba32
  41ba5a:	mov    dh,0x69
  41ba5c:	scas   eax,DWORD PTR es:[edi]
  41ba5d:	adc    bh,BYTE PTR [ecx]
  41ba5f:	add    DWORD PTR [ecx-0x3f3625db],edx
  41ba65:	clc    
  41ba66:	sbb    eax,0xad51fce6
  41ba6b:	in     eax,dx
  41ba6c:	jb     0x41ba06
  41ba6e:	aam    0xf6
  41ba70:	sbb    ecx,esp
  41ba72:	ja     0x41ba8c
  41ba74:	in     eax,0x6d
  41ba76:	loop   0x41ba17
  41ba78:	xor    bl,BYTE PTR [edx]
  41ba7a:	inc    ebx
  41ba7b:	pop    eax
  41ba7c:	adc    eax,0x9529b1ab
  41ba81:	dec    ebx
  41ba82:	push   0x74e34407
  41ba87:	pop    ecx
  41ba88:	sbb    DWORD PTR [edi-0x55fe2099],edx
  41ba8e:	xor    esp,edi
  41ba90:	sub    edi,esp
  41ba92:	cwde   
  41ba93:	in     eax,dx
  41ba94:	int    0x82
  41ba96:	fdivp  st(7),st
  41ba98:	sub    ecx,ebx
  41ba9a:	xchg   ebp,eax
  41ba9b:	in     eax,dx
  41ba9c:	fiadd  DWORD PTR [ecx-0x2c]
  41ba9f:	mov    esp,0x2355a4a1
  41baa4:	addr16 iret 
  41baa6:	jae    0x41bb1c
  41baa8:	test   ebx,esi
  41baaa:	lds    ebx,FWORD PTR [ebx-0x66]
  41baad:	mov    eax,ds:0x71c6a9d5
  41bab2:	fadd   st(3),st
  41bab4:	in     al,0x42
  41bab6:	jp     0x41babc
  41bab8:	dec    eax
  41bab9:	popa   
  41baba:	pop    esi
  41babb:	xchg   esp,eax
  41babc:	inc    edi
  41babd:	add    BYTE PTR ds:0xac6565dd,cl
  41bac3:	xchg   edx,eax
  41bac4:	pop    edx
  41bac5:	or     BYTE PTR [eax-0x1],dl
  41bac8:	lahf   
  41bac9:	out    0x25,ax
  41bacc:	(bad)  
  41bacd:	ficomp WORD PTR [edi]
  41bacf:	nop
  41bad0:	adc    ecx,DWORD PTR [ebp+0xb]
  41bad3:	lea    ecx,[esp+esi*4+0x61ae84ed]
  41bada:	cs and al,0x92
  41badd:	and    eax,0x83546a80
  41bae2:	or     edi,ebx
  41bae4:	wrmsr  
  41bae6:	shl    bh,cl
  41bae8:	ins    DWORD PTR es:[edi],dx
  41bae9:	dec    esp
  41baea:	mov    edi,0xab7e42d0
  41baef:	adc    edx,ebx
  41baf1:	cmp    eax,0xa523d8d1
  41baf6:	add    DWORD PTR [ebp+0x5d],edi
  41baf9:	cmp    bh,dl
  41bafb:	sti    
  41bafc:	lahf   
  41bafd:	xchg   ebp,eax
  41bafe:	push   ebp
  41baff:	inc    BYTE PTR ds:0x56ea99b
  41bb05:	ret    
  41bb06:	push   ds
  41bb07:	or     ch,cl
  41bb09:	popf   
  41bb0a:	pop    ecx
  41bb0b:	sbb    eax,0x48f7cd16
  41bb10:	fnsave [ebx]
  41bb12:	sbb    dh,al
  41bb14:	stos   DWORD PTR es:[edi],eax
  41bb15:	jge    0x41bb84
  41bb17:	pop    esp
  41bb18:	(bad)  
  41bb19:	jo     0x41bb7f
  41bb1b:	or     bh,BYTE PTR [ebp+0x41]
  41bb1e:	or     al,0xe8
  41bb20:	and    eax,DWORD PTR [edx+0x31e71e5e]
  41bb26:	and    eax,0xed38471f
  41bb2b:	pop    ebx
  41bb2c:	sar    edi,0xa2
  41bb2f:	inc    ebx
  41bb30:	sub    ecx,DWORD PTR ds:0x61b289f5
  41bb36:	outs   dx,BYTE PTR ds:[esi]
  41bb37:	and    eax,0xf9830a1c
  41bb3c:	dec    ebp
  41bb3d:	call   0x953c:0x89193e23
  41bb44:	sbb    dl,ah
  41bb46:	push   eax
  41bb47:	loopne 0x41bae7
  41bb49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb4a:	pop    edx
  41bb4b:	aad    0x14
  41bb4d:	mov    dl,0x16
  41bb4f:	enter  0x95af,0x85
  41bb53:	inc    edx
  41bb54:	call   0x5c6ad8e2
  41bb59:	sbb    al,BYTE PTR [eax]
  41bb5b:	inc    esi
  41bb5c:	inc    edi
  41bb5d:	enterw 0x23c2,0xc
  41bb62:	(bad)  
  41bb63:	hlt    
  41bb64:	push   ss
  41bb65:	adc    eax,esi
  41bb67:	pop    ds
  41bb68:	(bad)  
  41bb69:	js     0x41bb30
  41bb6b:	repz mov ch,0xe0
  41bb6e:	cli    
  41bb6f:	dec    ebp
  41bb70:	push   ecx
  41bb71:	hlt    
  41bb72:	stc    
  41bb73:	in     al,dx
  41bb74:	test   BYTE PTR gs:[edi-0x15436b20],0x4b
  41bb7c:	xor    al,0x59
  41bb7e:	js     0x41bb1a
  41bb80:	sbb    DWORD PTR [ebx+0x4ccd7769],eax
  41bb86:	int3   
  41bb87:	and    al,0xc9
  41bb89:	ret    0x92c5
  41bb8c:	or     BYTE PTR [edi],ah
  41bb8e:	fwait
  41bb8f:	pop    ds
  41bb90:	rol    DWORD PTR [ebx],0x9a
  41bb93:	std    
  41bb94:	rcr    BYTE PTR [edx-0x42799fbe],1
  41bb9a:	xchg   ebp,eax
  41bb9b:	mov    ebx,0xe658a397
  41bba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bba1:	retf   0x273f
  41bba4:	mov    bl,0xec
  41bba6:	in     eax,dx
  41bba7:	and    DWORD PTR [ebp-0xb],eax
  41bbaa:	pop    esp
  41bbab:	inc    edi
  41bbac:	aam    0xea
  41bbae:	xlat   BYTE PTR ds:[ebx]
  41bbaf:	jbe    0x41bc2c
  41bbb1:	test   BYTE PTR [eax+0x4],dl
  41bbb4:	rcl    DWORD PTR [eax+0x2d8e1760],1
  41bbba:	cmp    BYTE PTR [eax-0x5f],bl
  41bbbd:	or     dl,BYTE PTR [edi-0x15797c69]
  41bbc3:	mov    ds:0x73fba657,eax
  41bbc8:	(bad)  
  41bbc9:	sub    eax,0xbf9e4d66
  41bbce:	mov    dh,0x36
  41bbd0:	ficomp DWORD PTR [esi]
  41bbd2:	loope  0x41bc23
  41bbd4:	lea    ebp,[ebp+0x4a3f6c16]
  41bbda:	xchg   BYTE PTR [ecx-0x7c],bl
  41bbdd:	retf   0x79cc
  41bbe0:	push   0x7fde2b41
  41bbe5:	push   edx
  41bbe6:	sub    eax,esi
  41bbe8:	xchg   esp,eax
  41bbe9:	mov    DWORD PTR [ebx-0x2bfc0127],ebx
  41bbef:	push   ds
  41bbf0:	adc    eax,0x6e606668
  41bbf5:	xchg   ebx,eax
  41bbf6:	inc    ebp
  41bbf7:	push   ebp
  41bbf8:	cmp    esi,DWORD PTR [ebp-0x19]
  41bbfb:	mov    ch,BYTE PTR [ebx+0x54]
  41bbfe:	fadd   QWORD PTR [ebx+0x41]
  41bc01:	rcr    DWORD PTR [esi-0x16],0xea
  41bc05:	or     bh,BYTE PTR [eax-0x58cc89fe]
  41bc0b:	dec    eax
  41bc0c:	call   DWORD PTR ds:0xfb9fc2a9
  41bc12:	out    0x91,al
  41bc14:	arpl   WORD PTR [ebx-0x12],ax
  41bc17:	mov    bl,0x7
  41bc19:	jp     0x41bc59
  41bc1b:	jno    0x41bbf9
  41bc1d:	retf   0xda73
  41bc20:	and    eax,0xc5dda9d8
  41bc25:	ja     0x41bbaa
  41bc27:	(bad)  
  41bc28:	sub    eax,0x2a624cbc
  41bc2d:	pop    esi
  41bc2e:	add    ah,BYTE PTR [ebp+0x27]
  41bc31:	dec    esi
  41bc32:	fnstenv [eax-0x38aabbbc]
  41bc38:	mov    WORD PTR [ebx],?
  41bc3a:	aam    0x68
  41bc3c:	fisttp DWORD PTR [ecx+ebx*2]
  41bc3f:	cmp    BYTE PTR [ebp-0x40596c8a],ah
  41bc45:	mov    bl,0xfc
  41bc47:	jl     0x41bc2b
  41bc49:	rcr    ecx,cl
  41bc4b:	stc    
  41bc4c:	outs   dx,DWORD PTR ds:[esi]
  41bc4d:	push   cs
  41bc4e:	test   BYTE PTR [edi+0x7e],al
  41bc51:	inc    ebp
  41bc52:	imul   edi,edx,0xffffffa9
  41bc55:	pop    ebx
  41bc56:	cmc    
  41bc57:	jns    0x41bcab
  41bc59:	xchg   edi,eax
  41bc5a:	inc    esi
  41bc5b:	in     eax,dx
  41bc5c:	sub    eax,0xc4fb7bc6
  41bc61:	in     eax,dx
  41bc62:	xchg   esi,eax
  41bc63:	je     0x41bc0e
  41bc65:	jns    0x41bca7
  41bc67:	ja     0x41bc9c
  41bc69:	mov    esi,0xa3739cfd
  41bc6e:	clc    
  41bc6f:	mov    eax,0x34ac4d8d
  41bc74:	ss mov edx,0x4ba500ba
  41bc7a:	pop    ebx
  41bc7b:	aaa    
  41bc7c:	mov    fs,WORD PTR [eax+0x46]
  41bc7f:	push   edi
  41bc80:	or     ah,bl
  41bc82:	mov    al,0x2b
  41bc84:	repnz (bad) 
  41bc86:	ficomp WORD PTR [eax-0x5d]
  41bc89:	jae    0x41bc6c
  41bc8b:	mov    edi,eax
  41bc8d:	hlt    
  41bc8e:	dec    edx
  41bc8f:	int3   
  41bc90:	or     ecx,DWORD PTR [ebx+0x47]
  41bc93:	cli    
  41bc94:	and    dl,BYTE PTR [ecx+esi*1+0x1f0d90ca]
  41bc9b:	int3   
  41bc9c:	cmovs  edi,DWORD PTR [edx+edi*1-0x584c254e]
  41bca4:	mov    ch,0xd6
  41bca6:	repz (bad) [ebx+0x63]
  41bcaa:	and    BYTE PTR [ecx+ecx*1],0x2d
  41bcae:	mov    BYTE PTR [ecx],al
  41bcb0:	adc    esp,DWORD PTR [ebp-0x6d0aac3c]
  41bcb6:	jo     0x41bd18
  41bcb8:	mov    ah,0x6b
  41bcba:	or     al,0x81
  41bcbc:	sbb    edx,esp
  41bcbe:	in     al,0xbe
  41bcc0:	(bad)  
  41bcc1:	mov    dl,0xf
  41bcc3:	adc    al,0x2a
  41bcc5:	push   ds
  41bcc6:	fadd   st(0),st
  41bcc8:	xchg   ecx,eax
  41bcc9:	arpl   sp,bp
  41bccb:	loope  0x41bcb1
  41bccd:	xchg   BYTE PTR [ecx+0x7345445b],ch
  41bcd3:	pop    ss
  41bcd4:	ds dec edi
  41bcd6:	daa    
  41bcd7:	fsubr  QWORD PTR [edi+eax*1]
  41bcda:	pop    esp
  41bcdb:	jle    0x41bd48
  41bcdd:	stos   BYTE PTR es:[edi],al
  41bcde:	cmp    al,0x4
  41bce0:	jmp    0x41bc87
  41bce2:	cs fsub QWORD PTR ss:[ebx]
  41bce6:	pop    edx
  41bce7:	sub    ah,BYTE PTR [edi-0x59]
  41bcea:	iret   
  41bceb:	or     al,0x95
  41bced:	push   ss
  41bcee:	call   0x62da:0xc7f06a87
  41bcf5:	add    DWORD PTR [edx+0x4],edi
  41bcf8:	cmc    
  41bcf9:	ret    0x7cec
  41bcfc:	sbb    DWORD PTR [esi+eiz*2],edx
  41bcff:	xchg   ch,ah
  41bd01:	je     0x41bc9b
  41bd03:	xchg   BYTE PTR [ebp-0x31],cl
  41bd06:	jns    0x41bcde
  41bd08:	ins    DWORD PTR es:[edi],dx
  41bd09:	cmp    al,0xf9
  41bd0b:	inc    edx
  41bd0c:	inc    ebp
  41bd0d:	test   al,0x4
  41bd0f:	into   
  41bd10:	add    al,0x4b
  41bd12:	icebp  
  41bd13:	(bad)
  41bd17:	xor    eax,0xaae96598
  41bd1c:	repz fimul DWORD PTR [ebp+0x58]
  41bd20:	iret   
  41bd21:	sub    ch,BYTE PTR [ebx]
  41bd23:	les    esp,FWORD PTR [edx-0x15]
  41bd26:	push   edx
  41bd27:	inc    edi
  41bd28:	cmp    BYTE PTR es:[edi-0x3cb5d93],cl
  41bd2f:	jns    0x41bd57
  41bd31:	jne    0x41bd31
  41bd33:	jbe    0x41bcda
  41bd35:	iret   
  41bd36:	mov    ?,WORD PTR [esi+0x70003771]
  41bd3c:	xor    ebp,ebx
  41bd3e:	jg     0x41bd53
  41bd40:	dec    edx
  41bd41:	sub    DWORD PTR [ebp+ecx*1+0xa],edx
  41bd45:	xchg   DWORD PTR [edx-0x33],eax
  41bd48:	stos   DWORD PTR es:[edi],eax
  41bd49:	and    DWORD PTR ds:0x34aefa76,edx
  41bd4f:	mov    bl,0xc
  41bd51:	les    eax,FWORD PTR [esi-0x5c]
  41bd54:	xchg   DWORD PTR [ebx],edx
  41bd56:	dec    esp
  41bd57:	and    eax,0x12955efe
  41bd5c:	(bad)  
  41bd5d:	jb     0x41bd37
  41bd5f:	dec    ebx
  41bd60:	mov    al,bl
  41bd62:	push   esi
  41bd63:	aam    0x54
  41bd65:	add    DWORD PTR [esi+0x483649c2],edi
  41bd6b:	add    BYTE PTR [ebp-0x63],bl
  41bd6e:	call   0xe05a:0x748da8ce
  41bd75:	mov    esi,DWORD PTR [ebx]
  41bd77:	out    dx,eax
  41bd78:	in     eax,dx
  41bd79:	xchg   BYTE PTR [ecx-0x355ee547],ah
  41bd7f:	lea    ecx,[esi-0x2a]
  41bd82:	inc    edi
  41bd83:	les    ebx,FWORD PTR [ebx-0x4cda36a9]
  41bd89:	jns    0x41bdeb
  41bd8b:	xor    eax,0x2d42446
  41bd90:	xchg   edi,eax
  41bd91:	fcmovu st,st(2)
  41bd93:	adc    BYTE PTR [eax],bl
  41bd95:	ret    0xd3db
  41bd98:	lock inc ebp
  41bd9a:	loop   0x41bd22
  41bd9c:	sbb    al,0xb3
  41bd9e:	inc    esp
  41bd9f:	rcl    BYTE PTR [edi-0x10],cl
  41bda2:	jge    0x41bd37
  41bda4:	xor    BYTE PTR [ebx+ebp*8-0x5bd36d6e],0x64
  41bdac:	adc    dl,bh
  41bdae:	mov    edi,0x3f26134d
  41bdb3:	and    eax,0xce851d9b
  41bdb8:	xor    DWORD PTR [eax-0x5d54d1db],ecx
  41bdbe:	push   ebp
  41bdbf:	mov    dh,0x9f
  41bdc1:	int    0x27
  41bdc3:	sbb    al,BYTE PTR [edx+ecx*1-0x4b9ca164]
  41bdca:	pop    ebp
  41bdcc:	mov    dh,0x48
  41bdce:	or     DWORD PTR [eax],esp
  41bdd0:	xchg   DWORD PTR [ecx+ebp*8+0x2],ebx
  41bdd4:	add    al,0xaf
  41bdd6:	dec    ebx
  41bdd7:	sub    ebp,DWORD PTR [ebp-0x4786021a]
  41bddd:	or     al,dl
  41bddf:	inc    esp
  41bde0:	fs adc dl,dl
  41bde3:	push   ecx
  41bde4:	ret    
  41bde5:	jl     0x41bdbd
  41bde7:	ins    BYTE PTR es:[edi],dx
  41bde8:	add    al,0x54
  41bdea:	mov    al,gs:0xa51e2f6f
  41bdf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdf1:	pop    ebx
  41bdf2:	ins    BYTE PTR es:[edi],dx
  41bdf3:	call   0x8b96:0xf2e33fe2
  41bdfa:	jg     0x41be56
  41bdfc:	je     0x41bde2
  41bdfe:	test   BYTE PTR [ebx],ch
  41be00:	push   edx
  41be01:	sub    bh,BYTE PTR [eax+edx*1]
  41be04:	jns    0x41bdf9
  41be06:	jne    0x41be75
  41be08:	cli    
  41be09:	sahf   
  41be0a:	and    eax,0x36c9eceb
  41be0f:	pop    ecx
  41be10:	push   ecx
  41be11:	stos   DWORD PTR es:[edi],eax
  41be12:	stos   DWORD PTR es:[edi],eax
  41be13:	mov    esi,0x1b0120a3
  41be18:	jno    0x41bdc2
  41be1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be1b:	fnstcw WORD PTR [ecx-0x9]
  41be1e:	(bad)  gs:[ebx+edi*2-0x8]
  41be23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be24:	inc    ebx
  41be25:	mov    DWORD PTR [eax-0x5e],ebp
  41be28:	push   0xc
  41be2a:	in     al,0x7e
  41be2c:	aas    
  41be2d:	sub    eax,0x8d63c7c5
  41be32:	jmp    ecx
  41be34:	rcr    BYTE PTR [eax*8-0xb522670],1
  41be3b:	jg     0x41bdc7
  41be3d:	out    dx,al
  41be3e:	mov    eax,ds:0x7b656a10
  41be43:	sub    bp,0x8c6
  41be48:	mov    esp,DWORD PTR [edx+0x1f2b644b]
  41be4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be4f:	(bad)  
  41be51:	outs   dx,BYTE PTR ds:[esi]
  41be52:	(bad)  
  41be54:	das    
  41be55:	cld    
  41be56:	dec    edi
  41be57:	cmp    dl,BYTE PTR ds:[eax+0x23906a83]
  41be5e:	mov    BYTE PTR [edx-0x1c],dh
  41be61:	mov    al,0x5e
  41be63:	mov    WORD PTR [edi],ds
  41be65:	and    BYTE PTR [ebx-0x56],ch
  41be68:	int3   
  41be69:	aaa    
  41be6a:	aaa    
  41be6b:	mov    ds:0xde1261f,eax
  41be70:	pushf  
  41be71:	ins    BYTE PTR es:[edi],dx
  41be72:	pop    ds
  41be73:	cmp    eax,0xb21da32f
  41be78:	jl     0x41be61
  41be7a:	mov    cl,0xf1
  41be7c:	jnp    0x41be91
  41be7e:	push   ebx
  41be7f:	adc    eax,0x4fdc4bf3
  41be84:	out    dx,al
  41be85:	je     0x41be52
  41be87:	retf   
  41be88:	imul   ebx,DWORD PTR [ebx+0x6],0xffffffb8
  41be8c:	and    eax,0xe6916054
  41be91:	sub    al,0x7d
  41be93:	lods   al,BYTE PTR ds:[esi]
  41be94:	cli    
  41be95:	arpl   WORD PTR [ebp-0x25e9d8a9],si
  41be9b:	mov    esp,0x25cf6a0b
  41bea0:	test   al,0x8b
  41bea2:	push   eax
  41bea3:	and    al,0xd0
  41bea5:	rcl    cl,0x3b
  41bea8:	dec    ebp
  41bea9:	add    eax,ebp
  41beab:	or     eax,0xea881968
  41beb0:	mov    ebx,DWORD PTR [edx+0x4c3679b7]
  41beb6:	add    cl,ah
  41beb8:	sbb    cl,dl
  41beba:	clc    
  41bebb:	ffreep st(4)
  41bebd:	sbb    edi,esp
  41bebf:	cmc    
  41bec0:	shl    BYTE PTR [edi-0x67],1
  41bec3:	xor    bh,cl
  41bec5:	dec    ebp
  41bec6:	call   0xb68b:0x7cc252fa
  41becd:	inc    ebp
  41bece:	leave  
  41becf:	ss or  eax,0x30072c62
  41bed5:	scas   al,BYTE PTR es:[edi]
  41bed6:	jb     0x41beef
  41bed8:	les    eax,FWORD PTR [edx]
  41beda:	adc    DWORD PTR [ebx+0x341de7f4],edx
  41bee0:	pop    edx
  41bee1:	(bad)
  41bee4:	jl     0x41bef6
  41bee6:	sub    al,0x39
  41bee8:	div    DWORD PTR [edi-0xc]
  41beeb:	xchg   BYTE PTR [esi],ch
  41beed:	mov    al,ds:0x4ba36d7a
  41bef2:	dec    ebx
  41bef3:	ja     0x41bea9
  41bef5:	add    DWORD PTR [edx],edx
  41bef7:	mov    ebp,0x2872a12f
  41befc:	imul   esi,edx,0x10
  41beff:	mov    edx,0x88deaa5f
  41bf04:	adc    dl,bh
  41bf06:	add    DWORD PTR [edx],esp
  41bf08:	push   ebp
  41bf09:	sub    BYTE PTR cs:[edx],bl
  41bf0c:	jmp    0xc1a6:0xa15c42fb
  41bf13:	jmp    0x8a5def59
  41bf18:	pop    esi
  41bf19:	add    eax,0xbaef1351
  41bf1e:	or     edi,DWORD PTR [ebx+edx*8+0x1233cd57]
  41bf25:	(bad)  
  41bf26:	cs in  eax,0x93
  41bf29:	(bad)  
  41bf2a:	in     al,0x35
  41bf2c:	das    
  41bf2d:	cmc    
  41bf2e:	retf   0xc3ce
  41bf31:	mov    esi,0x70d07e88
  41bf36:	lock sbb BYTE PTR [edi-0xf],dl
  41bf3a:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41bf3c:	push   edx
  41bf3d:	push   DWORD PTR [edi+0x74]
  41bf40:	sub    BYTE PTR ds:0xdb87f83e,cl
  41bf46:	dec    edi
  41bf47:	arpl   WORD PTR [edi],cx
  41bf49:	cmp    eax,0x5537f858
  41bf4e:	mov    esp,0x1d0a264b
  41bf53:	aas    
  41bf54:	nop
  41bf55:	pop    edx
  41bf56:	pop    esp
  41bf57:	mov    edx,0x254f1cd9
  41bf5c:	fsub   DWORD PTR [ecx]
  41bf5e:	cmp    dh,BYTE PTR [eax+0x37]
  41bf61:	add    dl,BYTE PTR [edi+0x2fccbe4]
  41bf67:	test   eax,0xd126ea68
  41bf6c:	stc    
  41bf6d:	mov    edx,0x24138e3b
  41bf72:	in     al,dx
  41bf73:	(bad)  
  41bf74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf75:	jp     0x41bf5a
  41bf77:	mov    ds:0x990d5a58,al
  41bf7c:	cvttps2pi mm2,QWORD PTR [eax+0x48]
  41bf80:	inc    ebp
  41bf81:	out    dx,al
  41bf82:	ficomp DWORD PTR [ecx-0x61993932]
  41bf88:	push   ds
  41bf89:	retf   0x2ea8
  41bf8c:	inc    ebp
  41bf8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf8e:	jl     0x41bfea
  41bf90:	test   eax,0x85017323
  41bf95:	mov    bl,0x54
  41bf97:	xchg   ecx,eax
  41bf98:	xchg   BYTE PTR [ebx+0x30],bl
  41bf9b:	adc    al,BYTE PTR [ebx]
  41bf9d:	stc    
  41bf9e:	or     cl,BYTE PTR [ecx+0x247546fb]
  41bfa4:	mov    ebp,0x5251eac6
  41bfa9:	pop    ss
  41bfaa:	pop    ss
  41bfab:	int    0x36
  41bfad:	cwde   
  41bfae:	call   FWORD PTR [ebp+0x70]
  41bfb1:	inc    edx
  41bfb2:	pop    eax
  41bfb3:	mov    ds:0xeeaa9c43,eax
  41bfb8:	test   al,0x12
  41bfbb:	(bad)  
  41bfbd:	cld    
  41bfbe:	fmul   QWORD PTR [edx]
  41bfc0:	packuswb mm5,mm5
  41bfc3:	dec    ecx
  41bfc4:	pop    ebp
  41bfc5:	sbb    al,0x8b
  41bfc7:	pop    ebp
  41bfc8:	xchg   DWORD PTR [eax],edx
  41bfca:	mov    esp,0xb18f66f9
  41bfcf:	xor    BYTE PTR [eax],0xbb
  41bfd2:	mov    dl,0xf2
  41bfd4:	loopne 0x41c028
  41bfd6:	or     DWORD PTR [eax],esp
  41bfd8:	push   eax
  41bfd9:	out    dx,al
  41bfda:	pusha  
  41bfdb:	test   al,0x47
  41bfdd:	ret    
  41bfde:	loope  0x41c011
  41bfe0:	or     al,0xd
  41bfe2:	pop    ss
  41bfe3:	das    
  41bfe4:	in     al,0x4e
  41bfe6:	test   DWORD PTR [edi],edi
  41bfe8:	mov    eax,edi
  41bfea:	mov    bh,0xc1
  41bfec:	jns    0x41c004
  41bfee:	push   esi
  41bfef:	dec    eax
  41bff0:	arpl   WORD PTR [edi-0x4],di
  41bff3:	dec    ebx
  41bff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bff5:	mov    ds:0xab167810,eax
  41bffa:	add    eax,0x2b966d2e
  41bfff:	sbb    al,0x94
  41c001:	cli    
  41c002:	push   ebp
  41c003:	cmp    al,ah
  41c005:	push   eax
  41c006:	mov    WORD PTR [ecx-0x6f],?
  41c009:	mul    ebx
  41c00b:	xchg   edi,eax
  41c00c:	adc    al,0x29
  41c00e:	add    esi,esp
  41c010:	in     eax,dx
  41c011:	test   eax,0x72002321
  41c016:	jae    0x41bfa6
  41c018:	mov    bh,0x71
  41c01a:	std    
  41c01b:	scas   eax,DWORD PTR es:[edi]
  41c01c:	xchg   edi,eax
  41c01d:	adc    ah,dh
  41c01f:	fwait
  41c020:	stos   DWORD PTR es:[edi],eax
  41c021:	hlt    
  41c022:	push   cs
  41c023:	arpl   WORD PTR [esi+0x28],sp
  41c026:	mov    cl,0x34
  41c028:	inc    esi
  41c029:	in     al,dx
  41c02a:	sbb    ebx,edx
  41c02c:	jmp    0x41bff0
  41c02e:	(bad)
  41c033:	mov    edx,0xdd31ce50
  41c038:	and    DWORD PTR [esi+0x15],ebx
  41c03b:	test   al,0x93
  41c03d:	outs   dx,BYTE PTR ds:[esi]
  41c03e:	shl    cl,cl
  41c040:	pusha  
  41c041:	pop    ebx
  41c042:	call   0x4378:0xceb10dbc
  41c049:	cmc    
  41c04a:	icebp  
  41c04b:	inc    ebp
  41c04d:	xchg   ebx,eax
  41c04e:	push   esp
  41c04f:	push   cs
  41c050:	push   ecx
  41c051:	dec    ebx
  41c052:	mov    ebp,0xc700a28b
  41c057:	jl     0x41c035
  41c059:	ds jmp 0x4262:0xa641633
  41c061:	and    ebx,ecx
  41c063:	(bad)  
  41c065:	std    
  41c066:	enter  0x52,0xb3
  41c06a:	push   ebx
  41c06b:	push   ebp
  41c06c:	shl    BYTE PTR [ebx-0x13c56ef8],0xf8
  41c073:	pop    esi
  41c074:	aas    
  41c075:	(bad)  
  41c076:	call   0xfa427964
  41c07b:	inc    eax
  41c07c:	mov    al,0xe6
  41c07e:	dec    edx
  41c07f:	aas    
  41c080:	dec    esi
  41c081:	rcr    BYTE PTR [ebp+eax*8-0x62],0x78
  41c086:	mov    BYTE PTR [ecx+esi*4-0x6b],dl
  41c08a:	shl    DWORD PTR [edx+0x47],0x9f
  41c08e:	add    DWORD PTR [esi+ecx*8],ecx
  41c091:	add    al,0xba
  41c093:	or     DWORD PTR [ebp+0x6e],esi
  41c096:	pop    es
  41c097:	add    DWORD PTR [ecx+0x709f43bc],0x1dd7b18f
  41c0a1:	push   ebp
  41c0a2:	pop    ds
  41c0a3:	dec    ebx
  41c0a4:	ins    BYTE PTR es:[edi],dx
  41c0a5:	arpl   dx,di
  41c0a7:	sbb    eax,DWORD PTR [ecx-0x7264b084]
  41c0ad:	jns    0x41c082
  41c0af:	mov    ebp,0x4ae885a8
  41c0b4:	and    al,0x20
  41c0b6:	rcl    DWORD PTR [edi+0x4f],cl
  41c0b9:	mov    cl,0x9f
  41c0bb:	je     0x41c123
  41c0bd:	xchg   edx,eax
  41c0be:	loope  0x41c053
  41c0c0:	fwait
  41c0c1:	inc    esp
  41c0c2:	adc    DWORD PTR [esi+0x2708d509],esp
  41c0c8:	jg     0x41c0e4
  41c0ca:	push   ebx
  41c0cb:	(bad)  
  41c0cc:	in     al,0x7
  41c0ce:	lds    esi,FWORD PTR [edx]
  41c0d0:	clc    
  41c0d1:	xor    edi,esi
  41c0d3:	pop    eax
  41c0d4:	mov    cl,0xaa
  41c0d6:	push   ds
  41c0d7:	mov    ds:0x97acfb23,eax
  41c0dc:	inc    edx
  41c0dd:	bound  edx,QWORD PTR [ecx]
  41c0df:	pop    es
  41c0e0:	bound  esp,QWORD PTR [edi+0x48]
  41c0e3:	psrlw  mm6,QWORD PTR [edx-0x49]
  41c0e7:	xor    al,0xe3
  41c0e9:	lods   al,BYTE PTR ds:[esi]
  41c0ea:	ret    
  41c0eb:	and    BYTE PTR [ebp+0x75],cl
  41c0ee:	mov    ebx,0x1bbb519c
  41c0f3:	fcomp  DWORD PTR [edi-0x3909a92c]
  41c0f9:	xchg   ebx,eax
  41c0fa:	push   ds
  41c0fb:	xchg   ebx,eax
  41c0fc:	cdq    
  41c0fd:	push   ebx
  41c0fe:	cdq    
  41c0ff:	sub    eax,DWORD PTR [ebp-0x664452b8]
  41c105:	adc    eax,0x7f949bfd
  41c10a:	icebp  
  41c10b:	mov    esi,0x21fb7ca0
  41c110:	call   0xb54db88e
  41c115:	ins    BYTE PTR es:[edi],dx
  41c116:	les    edx,FWORD PTR [edx+0x746c6a85]
  41c11c:	xchg   edi,eax
  41c11d:	(bad)  
  41c11e:	(bad)  
  41c11f:	mov    edi,0x10c2d211
  41c124:	jae    0x41c1a3
  41c126:	leave  
  41c127:	sar    cl,cl
  41c129:	dec    edx
  41c12a:	jecxz  0x41c1ab
  41c12c:	jecxz  0x41c0e7
  41c12e:	jmp    0x41c12b
  41c130:	bound  ebx,QWORD PTR cs:[edx]
  41c133:	mov    DWORD PTR [esi],ecx
  41c135:	out    dx,al
  41c136:	dec    edx
  41c137:	iret   
  41c138:	rol    BYTE PTR [edx-0x32],1
  41c13b:	mov    esi,0x73ef4f7e
  41c140:	cmp    eax,0x4cfb036d
  41c145:	cmc    
  41c146:	sub    al,0x14
  41c148:	inc    eax
  41c149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c14a:	jmp    0x2cb4:0x1e967345
  41c151:	xor    al,0xde
  41c153:	mov    dh,0xa3
  41c155:	dec    ecx
  41c156:	and    eax,0xf8c572e6
  41c15b:	mov    esp,DWORD PTR [edi]
  41c15d:	jg     0x41c0ff
  41c15f:	pop    ds
  41c160:	or     bl,dl
  41c162:	sbb    eax,0x9f49f30c
  41c167:	clc    
  41c168:	mov    bh,0xfe
  41c16a:	das    
  41c16b:	or     ch,BYTE PTR [edx-0x2e8e4249]
  41c171:	adc    esp,edx
  41c173:	daa    
  41c174:	jp     0x41c1da
  41c176:	popa   
  41c177:	pusha  
  41c178:	imul   esi,DWORD PTR [ebx+0x3a075dcb],0xf15b9ee1
  41c182:	mov    dl,0x3d
  41c184:	push   eax
  41c185:	(bad)  
  41c186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c187:	cmp    al,BYTE PTR [edi]
  41c189:	(bad)  [ebx-0x5346e9ca]
  41c18f:	jns    0x41c1d3
  41c191:	addr16 icebp 
  41c193:	jl     0x41c1cd
  41c195:	sub    eax,0x7f9d28f
  41c19a:	xchg   esi,eax
  41c19b:	sbb    eax,0xec2c19a6
  41c1a0:	xchg   ecx,eax
  41c1a1:	loope  0x41c193
  41c1a3:	pop    esp
  41c1a4:	pop    ebx
  41c1a5:	sub    BYTE PTR [esi],dh
  41c1a7:	ja     0x41c1a5
  41c1a9:	mov    ecx,0x1e633b5d
  41c1ae:	jle    0x41c197
  41c1b0:	cs sbb BYTE PTR fs:[eax+0x40],dh
  41c1b5:	cld    
  41c1b6:	in     eax,0xae
  41c1b8:	cld    
  41c1b9:	or     DWORD PTR [esi+0x219f518c],ebp
  41c1bf:	ja     0x41c19d
  41c1c1:	into   
  41c1c2:	ja     0x41c1b2
  41c1c4:	cs in  al,0xb3
  41c1c7:	mov    ebx,0x5db71d86
  41c1cc:	xor    al,0x23
  41c1ce:	xlat   BYTE PTR ds:[ebx]
  41c1cf:	xor    eax,0xf35b861f
  41c1d4:	dec    eax
  41c1d5:	fistp  QWORD PTR [ebp-0x14]
  41c1d8:	lds    ebx,FWORD PTR [esi+0x29]
  41c1db:	out    0xcc,eax
  41c1dd:	iret   
  41c1de:	xchg   esp,eax
  41c1df:	pop    ds
  41c1e0:	xchg   edx,eax
  41c1e1:	adc    al,0x18
  41c1e3:	ds pop es
  41c1e5:	push   ds
  41c1e6:	xor    ecx,DWORD PTR [esi-0x4a0693a0]
  41c1ec:	inc    esi
  41c1ed:	das    
  41c1ee:	or     ecx,DWORD PTR [edi]
  41c1f0:	mov    ecx,0x82c5fd5d
  41c1f5:	dec    edx
  41c1f6:	in     al,dx
  41c1f7:	retf   
  41c1f8:	and    BYTE PTR [edx+eiz*1+0x3e],dh
  41c1fc:	pop    ecx
  41c1fd:	cli    
  41c1fe:	repz xor ch,BYTE PTR [eax-0x29]
  41c202:	std    
  41c203:	(bad)  [edx]
  41c205:	mov    ch,0xe7
  41c207:	mov    cl,cl
  41c209:	mov    al,ds:0xad4157c4
  41c20e:	test   eax,0xe054d91d
  41c213:	scas   eax,DWORD PTR es:[edi]
  41c214:	lods   al,BYTE PTR ds:[esi]
  41c215:	inc    ebx
  41c217:	mov    edi,DWORD PTR [esi]
  41c219:	sub    edi,ecx
  41c21b:	fist   DWORD PTR [edx-0x5c]
  41c21e:	mov    ebp,0x54c01e12
  41c223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c224:	aaa    
  41c225:	add    eax,0xa98d12ef
  41c22a:	xor    al,0x12
  41c22c:	jno    0x41c247
  41c22e:	sti    
  41c22f:	mov    esi,0x3a2f98a5
  41c234:	out    0x9e,eax
  41c236:	push   esp
  41c237:	lock or DWORD PTR [ecx+0xfd924ea],ecx
  41c23e:	sub    ecx,DWORD PTR [ecx]
  41c240:	popa   
  41c241:	loope  0x41c228
  41c243:	jmp    ecx
  41c245:	add    edi,edx
  41c247:	aaa    
  41c248:	add    cl,BYTE PTR [edi]
  41c24a:	adc    bl,BYTE PTR [ebp+0x380486ce]
  41c250:	dec    eax
  41c251:	lea    esp,[ecx+0x58]
  41c254:	fidivr DWORD PTR [edx]
  41c256:	add    edx,edx
  41c258:	not    BYTE PTR [edx+0x5f]
  41c25b:	xchg   edx,eax
  41c25c:	inc    edx
  41c25d:	mov    eax,0x28afc9e9
  41c262:	cmp    DWORD PTR [ecx],eax
  41c264:	or     esp,eax
  41c266:	adc    eax,0xb2b416b2
  41c26b:	or     edi,DWORD PTR ds:0x8af053c2
  41c271:	(bad)
  41c274:	mov    fs,WORD PTR [edx]
  41c276:	adc    BYTE PTR [edi+0x12],ah
  41c279:	ret    0xddd3
  41c27c:	into   
  41c27d:	pop    edx
  41c27e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c27f:	add    edi,DWORD PTR [esi]
  41c281:	add    eax,0xb8447830
  41c286:	push   eax
  41c287:	xchg   DWORD PTR [ecx+0x324335d9],edx
  41c28d:	call   0x3f0fa3b8
  41c292:	lea    ebp,[ebp+0x1c]
  41c295:	mov    cl,cl
  41c297:	imul   ebx,DWORD PTR [ebp+0x1dfdab7a],0xffffffc3
  41c29e:	mov    edx,DWORD PTR [ebp+0x55d164a]
  41c2a4:	mov    bl,0xcc
  41c2a6:	(bad)  
  41c2a7:	fcom   st(2)
  41c2a9:	and    esi,DWORD PTR [edi+0x34]
  41c2ac:	push   esp
  41c2ad:	cmp    ebp,ebp
  41c2af:	and    ecx,DWORD PTR [eax+0x44bb4d66]
  41c2b5:	call   0x3473:0x3e6b9e43
  41c2bc:	fisubr WORD PTR [ecx]
  41c2be:	or     ecx,DWORD PTR [eax-0x67c011df]
  41c2c4:	repnz or bl,al
  41c2c7:	adc    bh,ch
  41c2c9:	nop
  41c2ca:	inc    ecx
  41c2cb:	ins    BYTE PTR es:[edi],dx
  41c2cc:	(bad)  
  41c2cd:	js     0x41c2d7
  41c2cf:	dec    edi
  41c2d0:	pop    esp
  41c2d1:	fwait
  41c2d2:	dec    eax
  41c2d3:	pushf  
  41c2d4:	jmp    0x63a35984
  41c2d9:	je     0x41c274
  41c2db:	scas   al,BYTE PTR es:[edi]
  41c2dc:	jp     0x41c2b7
  41c2de:	retf   0x9650
  41c2e1:	es push es
  41c2e3:	imul   eax,DWORD PTR [ebp+0x4c],0x9ee899aa
  41c2ea:	add    BYTE PTR [edx-0x4469c849],cl
  41c2f0:	jp     0x41c279
  41c2f2:	repz cmp BYTE PTR [esi+0x51],bl
  41c2f6:	lock mov cl,0xb6
  41c2f9:	xor    eax,0x2a9ce9bb
  41c2fe:	push   ebp
  41c2ff:	dec    edi
  41c300:	pop    ds
  41c301:	fdiv   DWORD PTR [edi+edi*4-0x11]
  41c305:	push   esi
  41c306:	mov    ds:0x29fab726,eax
  41c30b:	inc    eax
  41c30c:	jno    0x41c2d2
  41c30e:	jge    0x41c31a
  41c310:	aam    0xf2
  41c312:	scas   eax,DWORD PTR es:[edi]
  41c313:	push   cs
  41c314:	xor    ebx,DWORD PTR [edx+0x2f0fe726]
  41c31a:	(bad)  
  41c31b:	sub    BYTE PTR [eax-0x75],ah
  41c31e:	xlat   BYTE PTR ds:[ebx]
  41c31f:	in     eax,0x74
  41c321:	ret    
  41c322:	js     0x41c377
  41c324:	aas    
  41c325:	sub    bl,BYTE PTR [ecx-0x57b92c2a]
  41c32b:	test   eax,0x97deff45
  41c330:	mov    DWORD PTR [esp+ecx*4],esp
  41c333:	xchg   bl,ch
  41c335:	xor    ecx,esi
  41c337:	sti    
  41c338:	out    0x74,eax
  41c33a:	(bad)  
  41c33b:	rol    al,cl
  41c33d:	add    al,0x24
  41c33f:	sub    ebp,0x6f
  41c342:	or     eax,0xc27b57be
  41c347:	add    esp,DWORD PTR [edi-0x4e79be08]
  41c34d:	mov    ebp,0xd630f742
  41c352:	jmp    0xd4c2:0x83f5ebab
  41c359:	data16 sbb al,0x93
  41c35c:	gs inc esp
  41c35e:	je     0x41c2f5
  41c360:	shl    DWORD PTR [edx],0x23
  41c363:	or     dh,BYTE PTR [edi+esi*4-0x36ca7142]
  41c36a:	mov    eax,0xac29c66d
  41c36f:	mov    edi,0xe8bb2e50
  41c374:	fdivr  DWORD PTR [edi+0x51]
  41c377:	dec    esi
  41c378:	fnclex 
  41c37a:	shl    BYTE PTR [ebp+esi*2-0x66],cl
  41c37e:	repnz enter 0x6d0c,0xee
  41c383:	jg     0x41c341
  41c385:	add    BYTE PTR [ecx+0x7a40607f],bh
  41c38b:	xchg   ebp,eax
  41c38c:	xchg   edx,eax
  41c38d:	adc    bh,bl
  41c38f:	cmc    
  41c390:	ret    
  41c391:	sbb    al,0xf0
  41c393:	xchg   edi,eax
  41c394:	ret    0x896
  41c397:	cmp    DWORD PTR [edi-0x72f579c6],esi
  41c39d:	adc    esi,DWORD PTR [ebp+0x5e]
  41c3a0:	mov    DWORD PTR [eax+edi*1-0x5e6220db],ecx
  41c3a7:	fsubr  st,st(1)
  41c3a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3aa:	sub    BYTE PTR [ebx],0xc8
  41c3ad:	and    esi,DWORD PTR [edx+eax*1]
  41c3b0:	xor    DWORD PTR [ebx+0x907ed4f],eax
  41c3b6:	fst    DWORD PTR [eax-0x5a303288]
  41c3bc:	mov    bh,0x8b
  41c3be:	xor    ah,al
  41c3c0:	test   al,0x5c
  41c3c2:	fwait
  41c3c3:	add    ecx,DWORD PTR [ecx-0x69]
  41c3c6:	in     al,dx
  41c3c7:	xchg   edi,eax
  41c3c8:	jge    0x41c419
  41c3ca:	xchg   esi,eax
  41c3cb:	add    cl,BYTE PTR [esi]
  41c3cd:	ins    BYTE PTR es:[edi],dx
  41c3ce:	jg     0x41c3f1
  41c3d0:	jl     0x41c37d
  41c3d2:	ficomp WORD PTR [ebx]
  41c3d4:	mov    al,ds:0xd3e2bea2
  41c3d9:	(bad)  
  41c3da:	js     0x41c3bd
  41c3dc:	jmp    0x74b53153
  41c3e1:	dec    esp
  41c3e2:	push   ss
  41c3e3:	cmp    eax,0x9e3693f6
  41c3e8:	sbb    eax,ebx
  41c3ea:	mov    ebx,0xa82655aa
  41c3ef:	mov    dl,0xd2
  41c3f1:	dec    edx
  41c3f2:	xor    bh,BYTE PTR [ecx-0x54]
  41c3f5:	jl     0x41c43a
  41c3f7:	jmp    0xa790dd21
  41c3fc:	dec    edx
  41c3fd:	jns    0x41c403
  41c3ff:	pop    ecx
  41c400:	inc    eax
  41c401:	and    BYTE PTR [esi],cl
  41c403:	mov    ecx,0xe9dab5a7
  41c408:	jmp    0xb06ebd10
  41c40d:	or     ecx,edi
  41c40f:	rcr    BYTE PTR [edx+0x3f73b34d],cl
  41c415:	lds    ebp,FWORD PTR [ecx]
  41c417:	or     al,0xb7
  41c419:	(bad)  
  41c41a:	lock jo 0x41c49c
  41c41d:	mov    bh,0x53
  41c41f:	into   
  41c420:	loope  0x41c3e3
  41c422:	mov    ebp,0x1024c566
  41c427:	pusha  
  41c428:	das    
  41c429:	dec    eax
  41c42a:	test   BYTE PTR [ebx],ah
  41c42c:	xchg   ebp,eax
  41c42d:	into   
  41c42e:	jnp    0x41c49e
  41c430:	cmp    DWORD PTR [esi-0x7c],esp
  41c433:	mov    ebp,0x44282913
  41c438:	cmp    al,0x6d
  41c43a:	lgs    edi,FWORD PTR [edx]
  41c43d:	or     esp,0xc8208c1f
  41c443:	cmp    BYTE PTR [ebx+ebp*2+0x61672f26],0x80
  41c44b:	inc    esi
  41c44c:	and    BYTE PTR [edi-0x53],al
  41c44f:	lahf   
  41c450:	inc    edx
  41c451:	pop    esi
  41c452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c453:	sub    eax,0x81c3aa37
  41c458:	popf   
  41c459:	mov    al,ds:0xe3151362
  41c45e:	pop    esi
  41c45f:	dec    eax
  41c460:	inc    esp
  41c461:	pushf  
  41c462:	pop    esp
  41c463:	mov    bl,0x35
  41c465:	(bad)  
  41c466:	pop    ds
  41c467:	fdivrp st(2),st
  41c469:	das    
  41c46a:	xor    DWORD PTR [eax],ebp
  41c46c:	out    dx,al
  41c46d:	push   cs
  41c46e:	mov    eax,ds:0x20e5eaad
  41c473:	sbb    ah,BYTE PTR [ecx-0x1f6223a3]
  41c479:	lock js 0x41c4e4
  41c47c:	and    BYTE PTR [edx],cl
  41c47e:	out    0x14,al
  41c480:	sbb    BYTE PTR [edx],0xf9
  41c483:	adc    ch,cl
  41c485:	sub    esp,esp
  41c487:	sub    al,0x2c
  41c489:	hlt    
  41c48a:	nop
  41c48b:	(bad)  
  41c48c:	mov    bl,0x70
  41c48e:	daa    
  41c48f:	stos   BYTE PTR es:[edi],al
  41c490:	outs   dx,DWORD PTR ds:[esi]
  41c491:	arpl   WORD PTR [ebp-0x31],cx
  41c494:	pop    esp
  41c495:	push   ebp
  41c496:	adc    al,0x47
  41c498:	jae    0x41c485
  41c49a:	fucomp st(4)
  41c49c:	aaa    
  41c49d:	(bad)  
  41c49e:	popf   
  41c49f:	jo     0x41c439
  41c4a1:	cmp    DWORD PTR [esi],esp
  41c4a3:	nop
  41c4a4:	sbb    DWORD PTR [ecx+0x3f98dfab],ebx
  41c4aa:	das    
  41c4ab:	out    dx,al
  41c4ac:	stc    
  41c4ad:	mov    ds:0xc3478418,al
  41c4b2:	jl     0x41c4be
  41c4b4:	lds    ecx,FWORD PTR [ebx]
  41c4b6:	xor    BYTE PTR [ecx-0x62],bl
  41c4b9:	sahf   
  41c4ba:	or     ebx,DWORD PTR [eax]
  41c4bc:	xor    DWORD PTR ds:0x6e7624c4,edi
  41c4c2:	test   DWORD PTR [eax+0x599ccf31],ecx
  41c4c8:	retf   
  41c4c9:	adc    eax,0xf90f24e
  41c4ce:	push   0x78d247ea
  41c4d3:	sub    edx,DWORD PTR [edi-0x6b]
  41c4d6:	ins    DWORD PTR es:[edi],dx
  41c4d7:	mov    dh,BYTE PTR [eax-0x34bfda1b]
  41c4dd:	int    0x33
  41c4df:	add    eax,esp
  41c4e1:	hlt    
  41c4e2:	and    eax,0x99b717eb
  41c4e7:	jne    0x41c489
  41c4e9:	jg     0x41c53b
  41c4eb:	mov    ecx,0x4d0c988
  41c4f0:	sbb    edx,DWORD PTR [edi]
  41c4f2:	in     eax,0x58
  41c4f4:	adc    al,0xfa
  41c4f6:	fiadd  WORD PTR gs:[ebx-0x4a5d9724]
  41c4fd:	aas    
  41c4fe:	lea    edx,ds:0xd9073c2c
  41c504:	addr16 jp 0x41c4f3
  41c507:	sbb    dh,BYTE PTR ds:0x7c6c0f6a
  41c50d:	fucom  st(3)
  41c50f:	mov    ah,0x31
  41c511:	mov    eax,0x929cd04f
  41c516:	addr16 inc edi
  41c518:	and    bh,bh
  41c51a:	and    dl,BYTE PTR [esi]
  41c51c:	ins    BYTE PTR es:[edi],dx
  41c51d:	ror    DWORD PTR [ecx+0xba87af6],0xbe
  41c524:	add    al,bh
  41c526:	outs   dx,DWORD PTR ds:[esi]
  41c527:	xor    edi,ebx
  41c529:	int    0xd5
  41c52b:	mov    ?,esp
  41c52d:	pop    ecx
  41c52e:	xor    al,0x85
  41c530:	inc    edx
  41c531:	es and al,0x4b
  41c534:	jnp    0x41c514
  41c536:	mov    ds:0x2209497,al
  41c53b:	and    al,0xab
  41c53d:	dec    eax
  41c53e:	daa    
  41c53f:	call   0x78dc93b4
  41c544:	je     0x41c4e4
  41c546:	mov    BYTE PTR [ebp-0x2e],0xf
  41c54a:	in     al,dx
  41c54b:	test   al,0x32
  41c54d:	jg     0x41c55d
  41c54f:	pusha  
  41c550:	mov    DWORD PTR [edx-0x4c],ebp
  41c553:	mov    dl,0x4d
  41c555:	inc    edx
  41c556:	test   al,0x78
  41c558:	pop    es
  41c559:	cmp    BYTE PTR [ebx+0x624f2ba1],bl
  41c55f:	add    al,0x2
  41c561:	cmp    BYTE PTR [ebx+esi*2+0x57a58be1],bl
  41c568:	and    DWORD PTR [eax+0x74],edx
  41c56b:	popf   
  41c56c:	push   ds
  41c56d:	dec    ebp
  41c56e:	(bad)
  41c571:	sub    bh,dl
  41c573:	inc    ebx
  41c574:	mov    ds:0x291f0154,al
  41c579:	cmp    BYTE PTR [ebx+0x201b777f],0xee
  41c580:	push   edx
  41c581:	mov    bl,0xc9
  41c583:	(bad)  
  41c584:	sti    
  41c585:	and    DWORD PTR [edi+0x40],0xa584c2d9
  41c58c:	outs   dx,BYTE PTR ds:[esi]
  41c58d:	lahf   
  41c58e:	icebp  
  41c58f:	xchg   ebp,eax
  41c590:	inc    esp
  41c591:	jae    0x41c567
  41c593:	shl    BYTE PTR [edi+0x7bc084ac],0xc1
  41c59a:	inc    esi
  41c59b:	push   0x1974a4c
  41c5a0:	sahf   
  41c5a1:	ret    
  41c5a2:	pop    edx
  41c5a3:	mul    DWORD PTR [eax+eax*2]
  41c5a6:	jne    0x41c5df
  41c5a8:	pop    ss
  41c5a9:	lods   al,BYTE PTR ds:[esi]
  41c5aa:	mov    ?,WORD PTR [ebp+0x1119b021]
  41c5b0:	sbb    esp,DWORD PTR [edi+ebp*2+0x63b0b5ae]
  41c5b7:	jns    0x41c5fb
  41c5b9:	mov    ch,dh
  41c5bb:	and    al,0x1d
  41c5bd:	les    edi,FWORD PTR [edx+0x14cea817]
  41c5c3:	mov    bh,0xf6
  41c5c5:	sbb    ecx,DWORD PTR [edx-0x2e]
  41c5c8:	fistp  QWORD PTR [ecx+0x5ae2039]
  41c5ce:	mov    ds:0x11261cf9,eax
  41c5d3:	push   0xc9e93a07
  41c5d8:	inc    edi
  41c5d9:	out    dx,al
  41c5da:	(bad)  
  41c5db:	call   0x22a50215
  41c5e0:	scas   eax,DWORD PTR es:[edi]
  41c5e1:	jp     0x41c653
  41c5e3:	or     ebp,edx
  41c5e5:	mov    ch,0xec
  41c5e7:	sub    ah,BYTE PTR [ebx+0x66]
  41c5ea:	iret   
  41c5eb:	sub    BYTE PTR [esi-0x20ab7dd4],bh
  41c5f1:	scas   al,BYTE PTR es:[edi]
  41c5f2:	fnstcw WORD PTR [ebp+esi*1+0x7]
  41c5f6:	out    0x27,eax
  41c5f8:	jno    0x41c5f0
  41c5fa:	sbb    DWORD PTR [eax],0x2d
  41c5fd:	sbb    eax,0xd21d61a8
  41c602:	pop    ebp
  41c603:	setnp  cl
  41c606:	les    esi,FWORD PTR [ecx-0x5d391dc1]
  41c60c:	lds    edx,FWORD PTR [eax-0x3f]
  41c60f:	adc    al,0x12
  41c611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c612:	jp     0x41c65c
  41c614:	mov    eax,0xf944112e
  41c619:	(bad)  
  41c61a:	fiadd  DWORD PTR [esi-0x3b]
  41c61d:	popa   
  41c61e:	dec    esp
  41c61f:	test   BYTE PTR [edx],al
  41c621:	push   eax
  41c622:	sub    al,al
  41c624:	inc    ecx
  41c625:	jnp    0x41c613
  41c627:	inc    edx
  41c628:	mov    bl,0x87
  41c62a:	lahf   
  41c62b:	and    al,0xcf
  41c62d:	cld    
  41c62e:	xor    eax,0xa4790503
  41c633:	(bad)  
  41c634:	fldenv [esi]
  41c636:	mov    ds:0x25a2908d,eax
  41c63b:	stos   BYTE PTR es:[edi],al
  41c63c:	cmp    eax,0x28fcc4e7
  41c641:	scas   al,BYTE PTR es:[edi]
  41c642:	push   0x400995c3
  41c647:	jp     0x41c66a
  41c649:	xor    bh,BYTE PTR [ecx]
  41c64b:	cmp    BYTE PTR [ecx+0x19],bh
  41c64e:	scas   eax,DWORD PTR es:[edi]
  41c64f:	inc    edi
  41c650:	ds out 0x4a,al
  41c653:	sub    DWORD PTR es:[ebx-0x61611cbe],0x5183c08a
  41c65e:	adc    al,0x22
  41c660:	adc    edi,DWORD PTR [ecx+0x6d]
  41c663:	jmp    0x7ecb:0xe80ec9e7
  41c66a:	pop    ebx
  41c66b:	stos   DWORD PTR es:[edi],eax
  41c66c:	dec    esp
  41c66d:	cmp    ch,dl
  41c66f:	out    0x6e,al
  41c671:	or     DWORD PTR [edx-0x12],esp
  41c674:	loopne 0x41c660
  41c676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c677:	loop   0x41c66b
  41c679:	xchg   edi,eax
  41c67a:	not    BYTE PTR [ebx]
  41c67c:	xor    eax,0x388ec936
  41c681:	jge    0x41c6cc
  41c683:	jmp    0x515cad0c
  41c688:	xor    dh,BYTE PTR [ebx]
  41c68a:	add    DWORD PTR [eax],eax
  41c68c:	je     0x41c671
  41c68e:	scas   eax,DWORD PTR es:[edi]
  41c68f:	data16 data16 lods al,BYTE PTR ds:[esi]
  41c692:	xchg   ebx,eax
  41c693:	ret    0x8304
  41c696:	stc    
  41c697:	sbb    BYTE PTR [edx+eiz*4+0x4c],bh
  41c69b:	add    esp,DWORD PTR ds:0x60b77fe5
  41c6a1:	imul   esi,DWORD PTR [ebp+eax*2+0x5c7bd045],0xd033bdf4
  41c6ac:	or     ch,BYTE PTR [ecx+0x696c687d]
  41c6b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6b3:	jmp    0xf11b:0x580eb441
  41c6ba:	das    
  41c6bb:	jg     0x41c685
  41c6bd:	push   cs
  41c6be:	or     ecx,DWORD PTR [edi-0x7c]
  41c6c1:	dec    edx
  41c6c2:	ins    BYTE PTR es:[edi],dx
  41c6c3:	jecxz  0x41c680
  41c6c5:	push   edi
  41c6c6:	dec    eax
  41c6c7:	mov    al,0x78
  41c6c9:	ds pop ebp
  41c6cb:	ret    
  41c6cc:	inc    edi
  41c6cd:	scas   al,BYTE PTR es:[edi]
  41c6ce:	dec    edx
  41c6cf:	cmp    eax,0xd2d0825
  41c6d4:	jecxz  0x41c666
  41c6d6:	xchg   esp,eax
  41c6d7:	adc    eax,0xffffffe7
  41c6da:	mov    al,ds:0xad5efa0f
  41c6df:	imul   esi,DWORD PTR [ebx+0x5080a8ab],0x2f546a36
  41c6e9:	and    bh,BYTE PTR [edi+ebx*2+0x14]
  41c6ed:	xchg   esp,eax
  41c6ee:	sbb    eax,0xd0fdb441
  41c6f3:	jae    0x41c701
  41c6f5:	xor    eax,DWORD PTR [esi+0x16]
  41c6f8:	test   DWORD PTR [esi+esi*1+0x1c574ce0],eax
  41c6ff:	leave  
  41c700:	mov    dh,0x1e
  41c702:	daa    
  41c703:	fisttp WORD PTR [ecx+edi*2-0x78]
  41c707:	add    DWORD PTR [edx],ebx
  41c709:	inc    edx
  41c70a:	jmp    0x547e:0x68877a21
  41c711:	mov    ?,WORD PTR [ebx]
  41c713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c714:	push   ecx
  41c715:	sub    bl,ch
  41c717:	jp     0x41c70e
  41c719:	cdq    
  41c71a:	fldcw  WORD PTR [ebp-0x1a9a44d1]
  41c720:	test   al,0x13
  41c722:	mov    ecx,0xdd2a1c6d
  41c727:	popa   
  41c728:	shl    WORD PTR [ebp+0x7a8bcdd2],cl
  41c72f:	xor    BYTE PTR [ebx-0x7b],ch
  41c732:	test   BYTE PTR [ecx],al
  41c734:	cmp    ch,cl
  41c736:	or     al,0x82
  41c738:	in     al,0xb7
  41c73a:	xor    BYTE PTR [eax],dh
  41c73c:	push   0x24
  41c73e:	mov    bl,0x83
  41c740:	xor    eax,DWORD PTR [eax-0x3e]
  41c743:	mov    esi,0xda053db7
  41c748:	push   edi
  41c749:	jl     0x41c71d
  41c74b:	jne    0x41c6d8
  41c74d:	push   esp
  41c74e:	pop    es
  41c74f:	into   
  41c750:	mov    cl,0x94
  41c752:	dec    esi
  41c753:	pop    ebx
  41c754:	fcomp  DWORD PTR [ecx+0x56b9d70e]
  41c75a:	popf   
  41c75b:	sbb    eax,DWORD PTR [edi-0x1471d472]
  41c761:	adc    eax,0x684425d0
  41c766:	(bad)  
  41c767:	jle    0x41c752
  41c769:	xchg   edi,eax
  41c76a:	mov    ebx,0xa0cef7ff
  41c76f:	adc    BYTE PTR [edx+0x4d46e77],al
  41c775:	aas    
  41c776:	jge    0x41c771
  41c778:	mov    esi,0xc23be928
  41c77d:	pop    ebp
  41c77e:	test   DWORD PTR [ebp+edx*1+0x61],eax
  41c782:	(bad)  
  41c784:	jmp    0xcf92606b
  41c789:	ret    0x94f8
  41c78c:	adc    eax,0xa56199b
  41c791:	push   ds
  41c792:	ss aaa 
  41c794:	fs icebp 
  41c796:	mov    cl,0x96
  41c798:	dec    eax
  41c799:	pop    edi
  41c79a:	fs jo  0x41c7e9
  41c79d:	adc    esi,ebx
  41c79f:	shr    DWORD PTR [ebx],1
  41c7a1:	pop    ss
  41c7a2:	cmc    
  41c7a3:	jmp    0x63d7:0x25a6a51
  41c7aa:	cmp    al,0x81
  41c7ac:	mov    bl,0x74
  41c7ae:	push   edx
  41c7af:	(bad)  
  41c7b0:	lea    esi,[ecx]
  41c7b2:	es clc 
  41c7b4:	jmp    0x23bc:0x509b74bd
  41c7bb:	pop    eax
  41c7bc:	xor    DWORD PTR ds:0xa6e96b82,ebp
  41c7c2:	adc    DWORD PTR [edx],ebx
  41c7c4:	int    0xfc
  41c7c6:	and    esp,ecx
  41c7c8:	sar    DWORD PTR [eax+0x3f3b1f05],cl
  41c7ce:	xor    BYTE PTR [edx+0x42],dh
  41c7d1:	push   ebx
  41c7d2:	das    
  41c7d3:	(bad)  [esi-0x5f]
  41c7d6:	mov    bl,0xc4
  41c7d8:	jb     0x41c77b
  41c7da:	(bad)
  41c7de:	mov    BYTE PTR [esi+0x1c],bh
  41c7e1:	cwde   
  41c7e2:	adc    BYTE PTR [eax],0xc0
  41c7e5:	leave  
  41c7e6:	sbb    DWORD PTR [eax+0x2a],edi
  41c7e9:	jnp    0x41c795
  41c7eb:	push   ebx
  41c7ec:	cmp    bl,dh
  41c7ee:	pop    es
  41c7ef:	jno    0x41c860
  41c7f1:	adc    eax,0x20d5188e
  41c7f6:	and    DWORD PTR [eax-0x4f6d36c9],esi
  41c7fc:	inc    ebp
  41c7fd:	dec    ecx
  41c7fe:	and    BYTE PTR [esi],bh
  41c800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c801:	inc    edi
  41c802:	stc    
  41c803:	and    eax,0xa977e1af
  41c808:	repnz inc esi
  41c80a:	jo     0x41c859
  41c80c:	(bad)  
  41c80d:	lock cmp DWORD PTR cs:[esi+0x4cc29082],ecx
  41c815:	aaa    
  41c816:	repnz dec ebx
  41c818:	inc    esi
  41c819:	dec    edx
  41c81a:	into   
  41c81b:	or     al,bh
  41c81d:	aaa    
  41c81e:	dec    ecx
  41c81f:	shr    BYTE PTR [eax+0xa],cl
  41c822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c823:	jo     0x41c834
  41c825:	rcl    ecx,cl
  41c827:	mov    edi,0xed252c08
  41c82c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41c82e:	cwde   
  41c82f:	mov    edx,0x207f6a74
  41c834:	scas   eax,DWORD PTR es:[edi]
  41c835:	fmulp  st(4),st
  41c837:	sbb    edx,DWORD PTR [eax]
  41c839:	repnz adc ch,BYTE PTR [ebp+0x18]
  41c83d:	mov    esi,0xe66f5571
  41c842:	jns    0x41c7ff
  41c844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c845:	jb     0x41c880
  41c847:	(bad)  
  41c848:	inc    ebp
  41c849:	adc    eax,0x8e3361ac
  41c84e:	in     al,0x34
  41c850:	push   ebp
  41c851:	and    DWORD PTR [edx+0xca377f9],esp
  41c857:	push   cs
  41c858:	cmc    
  41c859:	xchg   esp,eax
  41c85a:	cmp    eax,0x7365975d
  41c85f:	sahf   
  41c860:	xor    eax,0x8d7892b7
  41c865:	dec    ebp
  41c866:	jmp    0x9bcb34cf
  41c86b:	xor    al,0xcf
  41c86d:	fwait
  41c86e:	xchg   BYTE PTR [edi],al
  41c870:	dec    eax
  41c871:	mov    ebp,0x32b072cb
  41c876:	fimul  DWORD PTR [esi]
  41c878:	das    
  41c879:	mov    dh,0xf9
  41c87b:	sub    eax,0xdc8e9de
  41c880:	int    0x3
  41c882:	out    dx,eax
  41c883:	loopne 0x41c897
  41c885:	jo     0x41c82a
  41c887:	dec    ebx
  41c888:	jae    0x41c8cb
  41c88a:	sub    al,0xbb
  41c88c:	(bad)  ds:0x25a13306
  41c892:	aad    0x74
  41c894:	loop   0x41c900
  41c896:	pxor   mm7,QWORD PTR [ecx+esi*2+0x1d03fbab]
  41c89e:	bound  eax,QWORD PTR ds:0x9192caf6
  41c8a4:	inc    esp
  41c8a5:	retf   0x4340
  41c8a8:	xor    al,0x2a
  41c8aa:	loop   0x41c8dc
  41c8ac:	xor    al,0x7f
  41c8ae:	aaa    
  41c8af:	add    BYTE PTR [edi+0x1f8f5a57],al
  41c8b5:	out    0x63,eax
  41c8b7:	cmp    BYTE PTR ds:0x567e4885,dl
  41c8bd:	inc    ebp
  41c8be:	pop    esi
  41c8bf:	dec    ecx
  41c8c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8c1:	push   ds
  41c8c2:	dec    edi
  41c8c3:	stos   BYTE PTR es:[edi],al
  41c8c4:	ss ret 0x177e
  41c8c8:	mov    eax,0x791e2980
  41c8cd:	inc    ebp
  41c8ce:	inc    ebx
  41c8cf:	adc    BYTE PTR [ebx],bl
  41c8d1:	xor    ah,BYTE PTR [esi+eax*2+0x3a1de0aa]
  41c8d8:	int3   
  41c8d9:	or     cl,BYTE PTR [ebp+0x445041f5]
  41c8df:	fisubr WORD PTR [ebp-0x57]
  41c8e2:	mov    bh,0x75
  41c8e4:	sbb    eax,0x92e59256
  41c8e9:	add    DWORD PTR [ebx],0x29a3c07
  41c8ef:	mov    al,0x60
  41c8f1:	dec    ecx
  41c8f2:	cmp    ebp,DWORD PTR [ebp+0x1d]
  41c8f5:	loope  0x41c954
  41c8f7:	xor    al,0x38
  41c8f9:	mov    ebp,0x4f99d195
  41c8fe:	cmp    al,ch
  41c900:	or     dl,bl
  41c902:	mov    al,ds:0x45155af6
  41c907:	xchg   edi,eax
  41c908:	and    ecx,DWORD PTR [edx-0x66]
  41c90b:	aam    0xc9
  41c90d:	gs push cs
  41c90f:	mov    cl,0x67
  41c911:	push   cs
  41c912:	cmp    DWORD PTR [ecx+0xc01ac30],0x4d
  41c919:	test   eax,0x2e8a4db9
  41c91e:	mov    ds:0x33b4db56,al
  41c923:	es out 0x1a,al
  41c926:	(bad)  
  41c927:	aam    0xcd
  41c929:	scas   al,BYTE PTR es:[edi]
  41c92a:	inc    ecx
  41c92b:	ficom  DWORD PTR [eax]
  41c92d:	cs push edx
  41c92f:	fsub   DWORD PTR [ebx]
  41c931:	cdq    
  41c932:	call   0xd4d8:0xdfc3cb3f
  41c939:	xor    DWORD PTR [edi+0x4cc75a99],edx
  41c93f:	shl    BYTE PTR [eax-0x2d43838f],0x35
  41c946:	inc    esi
  41c947:	les    edi,FWORD PTR [ebx-0x33]
  41c94a:	(bad)  
  41c94b:	xor    ebx,edi
  41c94d:	iret   
  41c94e:	nop
  41c94f:	pop    edi
  41c950:	int    0x48
  41c952:	jecxz  0x41c901
  41c954:	pop    ecx
  41c955:	sub    DWORD PTR [edi-0x1c],edx
  41c958:	imul   ecx,DWORD PTR [esp+esi*8-0x3f],0x6be99cec
  41c960:	mov    bl,0x43
  41c962:	and    edx,DWORD PTR [ecx]
  41c964:	repz lds esp,FWORD PTR [ecx-0x6b]
  41c968:	int    0xdb
  41c96a:	rcl    BYTE PTR [edx+0x44],cl
  41c96d:	dec    esp
  41c96e:	lock dec ebp
  41c970:	clc    
  41c971:	push   0xcf53fc6c
  41c976:	test   BYTE PTR [edx],ah
  41c978:	push   cs
  41c979:	jmp    0x41c9ec
  41c97b:	shr    edi,1
  41c97d:	mov    bl,0x43
  41c97f:	pop    ecx
  41c980:	dec    edx
  41c981:	into   
  41c982:	or     esp,ebp
  41c984:	xchg   esp,eax
  41c985:	fisttp QWORD PTR [ebp+0x12]
  41c988:	popf   
  41c989:	push   ecx
  41c98a:	jbe    0x41c9f9
  41c98c:	bnd jge 0x41c9a8
  41c98f:	sti    
  41c990:	mov    al,ds:0xb2eb1894
  41c995:	in     eax,0x5
  41c997:	add    dh,BYTE PTR [ebx+0x21]
  41c99a:	es call 0x661b:0x51186fff
  41c9a2:	aas    
  41c9a3:	mov    edx,0x5f438dc4
  41c9a8:	call   0x1354:0xd52a6c84
  41c9af:	stc    
  41c9b0:	cwde   
  41c9b1:	scas   eax,DWORD PTR es:[edi]
  41c9b2:	jmp    0x78defb97
  41c9b7:	les    eax,FWORD PTR [ecx]
  41c9b9:	(bad)  
  41c9ba:	pushf  
  41c9bb:	dec    ecx
  41c9bc:	icebp  
  41c9bd:	xor    ch,bh
  41c9bf:	add    BYTE PTR [edx+0x6c],ah
  41c9c2:	add    DWORD PTR [ebx+0x2127112f],0x6e
  41c9c9:	sbb    al,0xfb
  41c9cb:	repz sbb cl,al
  41c9ce:	add    BYTE PTR [eax+0x3e],bh
  41c9d1:	cmp    eax,0x3091c970
  41c9d6:	mov    ah,0x52
  41c9d8:	jae    0x41c983
  41c9da:	(bad)  
  41c9db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9dc:	mov    WORD PTR [ecx-0x653c1ad4],?
  41c9e2:	call   0xe05180ff
  41c9e7:	clc    
  41c9e8:	retf   0xb69a
  41c9eb:	lods   eax,DWORD PTR ds:[esi]
  41c9ec:	sub    BYTE PTR [edi+edi*1],cl
  41c9ef:	lods   al,BYTE PTR ds:[esi]
  41c9f0:	xchg   ecx,eax
  41c9f1:	inc    edx
  41c9f2:	loop   0x41c99f
  41c9f4:	and    al,0x8a
  41c9f6:	cwde   
  41c9f7:	test   DWORD PTR [edx+0x63],ebx
  41c9fa:	stc    
  41c9fb:	stc    
  41c9fc:	sbb    bl,BYTE PTR [ebx-0x6a]
  41c9ff:	pushf  
  41ca00:	xor    al,0x33
  41ca02:	mov    bh,0x50
  41ca04:	das    
  41ca05:	adc    dl,bl
  41ca07:	(bad)  
  41ca08:	mov    eax,0x6616a96b
  41ca0d:	pop    ss
  41ca0e:	mov    edi,0x5c6cfb6c
  41ca13:	out    dx,eax
  41ca14:	loop   0x41ca02
  41ca16:	xchg   edx,eax
  41ca17:	fsub   DWORD PTR [edx]
  41ca19:	add    eax,edi
  41ca1b:	popa   
  41ca1c:	and    al,0xa5
  41ca1e:	sub    eax,DWORD PTR [eax]
  41ca20:	pop    ebp
  41ca21:	lds    ecx,FWORD PTR [ebp-0x24b800c7]
  41ca27:	jno    0x41c9c7
  41ca29:	in     al,0xe2
  41ca2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca2c:	sbb    eax,0xdaf9457c
  41ca31:	outs   dx,DWORD PTR ds:[esi]
  41ca32:	clc    
  41ca33:	dec    ecx
  41ca34:	js     0x41ca82
  41ca36:	push   ds
  41ca37:	lods   eax,DWORD PTR ds:[esi]
  41ca38:	mov    BYTE PTR [ebp-0x7fcd1cad],cl
  41ca3e:	jge    0x41c9cb
  41ca40:	ror    BYTE PTR [edi],cl
  41ca42:	xor    DWORD PTR [ecx],ebx
  41ca44:	xchg   ecx,eax
  41ca45:	push   eax
  41ca46:	mov    esi,0xcf81aec5
  41ca4b:	stc    
  41ca4c:	push   0xe344a8cd
  41ca51:	imul   esi,DWORD PTR [ebp+0x0],0x8671a8fb
  41ca58:	(bad)  
  41ca59:	cmp    ecx,DWORD PTR [esi]
  41ca5b:	fs cs dec edx
  41ca5e:	jl     0x41ca42
  41ca60:	pop    es
  41ca61:	inc    edx
  41ca62:	push   cs
  41ca63:	sbb    BYTE PTR es:[ecx+edi*2],0x91
  41ca68:	retf   
  41ca69:	adc    DWORD PTR [edx-0xa4aff5c],edi
  41ca6f:	hlt    
  41ca70:	popf   
  41ca71:	popa   
  41ca72:	or     eax,0x618a8447
  41ca77:	retf   0x8882
  41ca7a:	mov    ds:0x266c8977,al
  41ca7f:	icebp  
  41ca80:	cmp    esi,DWORD PTR [ebx-0x24d08c0b]
  41ca86:	mov    bl,0xff
  41ca88:	lods   al,BYTE PTR ds:[esi]
  41ca89:	(bad)  
  41ca8a:	jbe    0x41ca80
  41ca8c:	fs lds edi,FWORD PTR cs:[bx+0x3145]
  41ca93:	jnp    0x41ca61
  41ca95:	jae    0x41ca9e
  41ca97:	mov    ah,0x94
  41ca99:	(bad)  
  41ca9a:	xor    al,0xa0
  41ca9c:	lods   al,BYTE PTR ds:[esi]
  41ca9d:	adc    eax,0xe56241b8
  41caa2:	jmp    0x41caf5
  41caa4:	add    eax,0xe720429b
  41caa9:	xor    esi,DWORD PTR [ebp+0x31ac945c]
  41caaf:	stos   DWORD PTR es:[edi],eax
  41cab0:	adc    WORD PTR [edi+0x7320662],0x44
  41cab8:	mov    ah,0xa1
  41caba:	adc    ah,dl
  41cabc:	fwait
  41cabd:	ds inc edx
  41cabf:	mov    esi,0x2a741f39
  41cac4:	mov    cl,0xb6
  41cac6:	dec    ebp
  41cac7:	jo     0x41cab1
  41cac9:	ds lahf 
  41cacb:	sub    dl,al
  41cacd:	push   0xce49d799
  41cad2:	pop    ebx
  41cad3:	push   0x6bab4a6d
  41cad8:	pop    esi
  41cad9:	retf   
  41cada:	pop    es
  41cadb:	hlt    
  41cadc:	xor    BYTE PTR [ebx+0x71],bh
  41cadf:	mov    DWORD PTR [edx],edi
  41cae1:	cdq    
  41cae2:	div    bh
  41cae4:	add    eax,0x1a578484
  41cae9:	mov    dl,0x9
  41caeb:	in     eax,0xef
  41caed:	mov    bl,0x1e
  41caef:	aad    0xa9
  41caf1:	(bad)  ds:0xbcfc3986
  41caf7:	push   ebx
  41caf8:	mov    ds:0x8eafd283,al
  41cafd:	(bad)  
  41cafe:	mov    WORD PTR [edx],?
  41cb00:	mov    dl,dl
  41cb02:	call   0x2c010bb2
  41cb07:	inc    ebx
  41cb08:	add    BYTE PTR ds:0x359e4258,bh
  41cb0e:	cwde   
  41cb0f:	mov    dl,0x46
  41cb11:	pop    edx
  41cb12:	and    edi,DWORD PTR [esi+0x2f0e3da9]
  41cb18:	jno    0x41cb31
  41cb1a:	scas   eax,DWORD PTR es:[edi]
  41cb1b:	fsubr  QWORD PTR [ecx+0x1342205c]
  41cb21:	lods   al,BYTE PTR ds:[esi]
  41cb22:	fcom   QWORD PTR [ebx]
  41cb24:	and    cl,BYTE PTR [esi-0x66ff3260]
  41cb2a:	cmp    al,BYTE PTR ds:0x6bba2738
  41cb30:	push   edi
  41cb31:	push   esi
  41cb32:	push   ebx
  41cb33:	push   0x61
  41cb35:	jl     0x41cb74
  41cb37:	sub    BYTE PTR [edx+eiz*2],ah
  41cb3a:	or     edx,DWORD PTR [edx-0x64]
  41cb3d:	call   0xc309a3e2
  41cb42:	int    0x8f
  41cb44:	aad    0xdb
  41cb46:	fcomip st,st(1)
  41cb48:	push   edx
  41cb49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb4a:	xchg   ebx,eax
  41cb4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb4d:	mov    esp,ebp
  41cb4f:	inc    eax
  41cb50:	cmc    
  41cb51:	cmp    esi,0xd
  41cb54:	sub    ah,BYTE PTR [eax+0x7131c04c]
  41cb5a:	fstp   st(0)
  41cb5c:	jae    0x41cba7
  41cb5e:	pop    ds
  41cb5f:	mov    cl,0xa2
  41cb61:	shl    DWORD PTR [ebx],0xd3
  41cb64:	mov    DWORD PTR [ebp-0x4c],edx
  41cb67:	mov    edx,DWORD PTR [ebp+0x8]
  41cb6a:	mov    ebx,DWORD PTR [ebp-0x48]
  41cb6d:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cb74:	mov    DWORD PTR [ebp-0x48],edx
  41cb77:	mov    edx,DWORD PTR [ebp+0x8]
  41cb7a:	mov    ebx,0xfa5e15e2
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	repz xchg esp,eax
  41ce46:	pop    ss
  41ce47:	hlt    
  41ce48:	cmp    ebp,esi
  41ce4a:	inc    ebx
  41ce4b:	inc    esi
  41ce4c:	xchg   esp,eax
  41ce4d:	adc    al,0xb8
  41ce4f:	arpl   WORD PTR [edx+0x190c2b0],di
  41ce55:	add    BYTE PTR [eax],al
  41ce57:	add    BYTE PTR [ebx+0x3a],al
  41ce5a:	pop    esp
  41ce5b:	inc    ebx
  41ce5c:	jne    0x41ced0
  41ce5e:	jb     0x41cec5
  41ce60:	outs   dx,BYTE PTR ds:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	data16 mov al,ds:0x8b0d516
  42060b:	add    DWORD PTR [ecx],0x0
  42060e:	std    
  42060f:	add    DWORD PTR [eax],eax
  420611:	add    dl,ah
  420613:	lahf   
  420614:	mov    dl,0x98
  420616:	or     al,0x84
  420618:	pop    ebx
  420619:	adc    al,0x1d
  42061b:	enter  0x9b7,0x95
  42061f:	enter  0xe0ae,0x6e
  420623:	nop
  420624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420625:	push   esi
  420626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420627:	pop    ecx
  420628:	retf   
  420629:	add    al,dl
  42062b:	rol    DWORD PTR ds:0x41b3d54,0x4c
  420632:	mov    esi,0x9d1f03ca
  420637:	pop    ecx
  420638:	add    al,al
  42063a:	mov    ds:0x526cfdde,eax
  42063f:	aam    0x99
  420641:	add    al,0xd4
  420643:	es adc ecx,edi
  420646:	and    BYTE PTR [ebx],ah
  420648:	add    al,0x26
  42064a:	cmp    eax,0x3fb6c5a5
  42064f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420650:	ins    DWORD PTR es:[edi],dx
  420651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420652:	and    eax,0xcfb939c4
  420657:	ret    0xdfe4
  42065a:	add    BYTE PTR ds:0x5d10e3d8,ah
  420660:	add    BYTE PTR [ebp-0x342edcb0],bh
  420666:	(bad)  
  420667:	xor    eax,0x76045d11
  42066c:	inc    esi
  42066d:	jge    0x4206a9
  42066f:	mov    eax,ds:0x98e451f8
  420674:	xor    DWORD PTR [ebp+0x1768cd6e],edi
  42067a:	xor    al,0xe1
  42067c:	inc    ch
  42067e:	xchg   edx,eax
  42067f:	mov    ds:0x8d1bb58e,al
  420684:	sbb    al,0xe1
  420686:	mov    esp,0x649f96af
  42068b:	mov    ds:0x7ff409b3,eax
  420690:	imul   esp,DWORD PTR [eax],0x7b2a224c
  420696:	sub    cl,0x75
  420699:	in     eax,0x3e
  42069b:	ret    0x175a
  42069e:	sub    eax,0xdfc05225
  4206a3:	jbe    0x420661
  4206a5:	sar    DWORD PTR [esi],cl
  4206a7:	repnz mov ebx,eax
  4206aa:	loope  0x42066b
  4206ac:	cmp    ebx,ecx
  4206ae:	jnp    0x4206d0
  4206b0:	hlt    
  4206b1:	inc    ebp
  4206b2:	mov    dl,0xd1
  4206b4:	bswap  ebx
  4206b6:	pop    ecx
  4206b7:	or     esi,esp
  4206b9:	and    ch,dl
  4206bb:	ror    DWORD PTR [esi+0x42b9994f],cl
  4206c1:	(bad)  
  4206c2:	sub    eax,0xac719f9c
  4206c7:	mov    cl,0xbd
  4206c9:	sub    esp,edi
  4206cb:	cmp    eax,0xf2f7d6ed
  4206d0:	sbb    BYTE PTR [ebp+0xa],bh
  4206d3:	jmp    0xe842c2ae
  4206d8:	sub    BYTE PTR [ebp-0x29cda33b],ah
  4206de:	in     al,dx
  4206df:	xchg   ebp,eax
  4206e0:	stos   BYTE PTR es:[edi],al
  4206e1:	or     eax,0xfe6805f6
  4206e6:	std    
  4206e7:	iret   
  4206e8:	retf   0x1de4
  4206eb:	pop    esp
  4206ec:	pop    ebx
  4206ed:	mov    eax,0xb7484754
  4206f2:	mov    bl,0x8e
  4206f4:	add    ebx,ebp
  4206f6:	das    
  4206f7:	or     ebp,DWORD PTR [ecx+0x570ff8c6]
  4206fd:	ss popa 
  4206ff:	xlat   BYTE PTR ds:[ebx]
  420700:	and    bl,dl
  420702:	and    DWORD PTR [ebx+0x7ab0e13],ebp
  420708:	mov    ecx,0x14da46ab
  42070d:	je     0x4206f0
  42070f:	in     eax,dx
  420710:	and    al,0xaa
  420712:	lahf   
  420713:	add    al,0xe5
  420715:	or     edx,ecx
  420717:	fcomp  QWORD PTR [ecx]
  420719:	mov    ds:0x1b962d3b,eax
  42071e:	je     0x4206f2
  420720:	aas    
  420721:	mov    ecx,0x4b3b480c
  420726:	pushf  
  420727:	fwait
  420728:	es push edi
  42072a:	je     0x4206fa
  42072c:	lock hlt 
  42072e:	mov    cl,0x93
  420730:	sbb    BYTE PTR [ebx+0x11],0x3f
  420734:	mov    edx,0xd8aa20d3
  420739:	icebp  
  42073a:	push   eax
  42073b:	sub    edx,DWORD PTR [ebx-0x4aacebfd]
  420741:	icebp  
  420742:	(bad)  
  420744:	cs dec esi
  420746:	retf   
  420747:	or     BYTE PTR [edi],ch
  420749:	dec    eax
  42074a:	jno    0x42070c
  42074c:	xchg   edx,eax
  42074d:	dec    esi
  42074e:	dec    ecx
  42074f:	sub    DWORD PTR [ebp+edx*1+0x24],ebx
  420753:	jge    0x420735
  420755:	ds (bad) 
  420758:	cmp    edx,0xd359a194
  42075e:	mov    dl,0xd8
  420760:	pop    edx
  420761:	mov    ah,0x4c
  420763:	ss stos DWORD PTR es:[edi],eax
  420765:	add    eax,0xa3c51aaa
  42076a:	test   al,0x52
  42076c:	repz popa 
  42076e:	sar    eax,0x6e
  420771:	mov    ah,0x8d
  420773:	fistp  QWORD PTR [edi]
  420775:	pop    ebp
  420776:	(bad)  
  420777:	pop    esi
  420778:	sub    bl,bl
  42077a:	test   DWORD PTR [edi],edx
  42077c:	jmp    0x1f1d:0x743d8be0
  420783:	(bad)  
  420784:	in     eax,dx
  420785:	loopne 0x4207d8
  420787:	or     esi,0xffffffe4
  42078a:	pop    es
  42078b:	sub    BYTE PTR [ecx+ebx*2-0x66],ah
  42078f:	outs   dx,DWORD PTR ds:[esi]
  420790:	outs   dx,BYTE PTR ds:[esi]
  420791:	push   ecx
  420792:	dec    ecx
  420793:	iret   
  420794:	jmp    0x73b08512
  420799:	mov    fs,WORD PTR [eax+0x4e]
  42079c:	cdq    
  42079d:	and    eax,0x1dc7b5c9
  4207a2:	ret    0x696c
  4207a5:	dec    esi
  4207a6:	dec    esp
  4207a7:	add    cl,0xc3
  4207aa:	into   
  4207ab:	push   0xffffffdc
  4207ad:	lock cmp eax,0x2556ac5a
  4207b3:	push   ebp
  4207b4:	push   eax
  4207b5:	retf   
  4207b6:	outs   dx,BYTE PTR ds:[esi]
  4207b7:	outs   dx,DWORD PTR ds:[esi]
  4207b8:	aas    
  4207b9:	xchg   ecx,eax
  4207ba:	push   ebp
  4207bb:	add    BYTE PTR [ebx],bl
  4207bd:	inc    ebp
  4207be:	xchg   esi,eax
  4207bf:	lock add BYTE PTR [ebx+0x265fb288],0x79
  4207c7:	and    al,0x7f
  4207c9:	or     esp,DWORD PTR [edx+0x5d430ccc]
  4207cf:	inc    edi
  4207d0:	lahf   
  4207d1:	pop    ecx
  4207d2:	scas   eax,DWORD PTR es:[edi]
  4207d3:	ja     0x42082c
  4207d5:	inc    edx
  4207d6:	mov    esi,0xeff19024
  4207db:	out    0xeb,eax
  4207dd:	add    eax,ecx
  4207df:	daa    
  4207e0:	mov    esi,0xe3656476
  4207e5:	xor    eax,0x173eae3a
  4207ea:	push   ss
  4207eb:	mov    bl,0x15
  4207ed:	and    DWORD PTR [esi+0x4c435c77],0x86f665b9
  4207f7:	jae    0x420813
  4207f9:	jle    0x42081a
  4207fb:	dec    eax
  4207fc:	dec    esi
  4207fd:	jmp    0xdbddfe77
  420802:	mov    bl,0x4
  420804:	jp     0x4207e8
  420806:	or     al,0x78
  420808:	fistp  WORD PTR [ebx]
  42080a:	dec    edx
  42080b:	into   
  42080c:	out    dx,al
  42080d:	lods   al,BYTE PTR ds:[esi]
  42080e:	dec    ecx
	...
  420817:	add    BYTE PTR [eax],al
  420819:	add    BYTE PTR [edi+0x4c],dh
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx-0x2688d003]
  420828:	stc    
  420829:	xor    BYTE PTR ds:0xfd000185,al
  42082f:	add    DWORD PTR [eax],eax
  420831:	add    bh,dh
  420833:	sub    ah,BYTE PTR [eax+0x165d2b6d]
  420839:	fstp   TBYTE PTR [edi+0x33]
  42083c:	push   0x11
  42083e:	stos   BYTE PTR es:[edi],al
  42083f:	xor    edx,DWORD PTR [edx]
  420841:	mov    ds:0x28815b3f,eax
  420846:	and    edi,esp
  420848:	std    
  420849:	sbb    esi,DWORD PTR [edx]
  42084b:	retf   0x6923
  42084e:	jne    0x420834
  420850:	jnp    0x420829
  420852:	pushf  
  420853:	mov    ch,0x4a
  420855:	shr    DWORD PTR [ecx+0xbd594],0xbb
  42085c:	jle    0x42081f
  42085e:	cmc    
  42085f:	popf   
  420860:	jb     0x420836
  420862:	cmp    DWORD PTR [edi-0x6c038b3b],esp
  420868:	cwde   
  420869:	jmp    0x4208b4
  42086b:	cdq    
  42086c:	mov    bl,0x1d
  42086e:	repz scas al,BYTE PTR es:[edi]
  420870:	stos   BYTE PTR es:[edi],al
  420871:	lds    ebp,FWORD PTR [ecx+ebp*2+0x11d41acc]
  420878:	add    eax,0x5c46cd5e
  42087d:	fmul   st,st(2)
  420880:	std    
  420881:	aas    
  420882:	data16 outs dx,BYTE PTR ds:[esi]
  420884:	and    eax,0xc3e0652c
  420889:	push   edi
  42088a:	mov    ?,WORD PTR [ebx+0x54bcbc2a]
  420890:	icebp  
  420891:	adc    DWORD PTR [esi-0x4e],0xfffffffc
  420895:	push   ds
  420896:	lds    ebp,FWORD PTR [edi-0x74]
  420899:	dec    esp
  42089a:	cmc    
  42089b:	std    
  42089c:	cli    
  42089d:	(bad)  
  42089e:	outs   dx,BYTE PTR ds:[esi]
  42089f:	(bad)  
  4208a1:	mov    eax,ds:0xb9e24eb2
  4208a6:	repz sbb al,0x63
  4208a9:	fcom   QWORD PTR [edx-0xd]
  4208ac:	es jle 0x420912
  4208af:	inc    ebx
  4208b0:	and    al,0x46
  4208b2:	dec    ecx
  4208b3:	sahf   
  4208b4:	mov    eax,0x81455bd5
  4208b9:	or     al,0xe7
  4208bb:	loope  0x420880
  4208bd:	sbb    al,0xfa
  4208bf:	inc    esi
  4208c0:	fbstp  TBYTE PTR [esp+ebx*4]
  4208c3:	dec    edi
  4208c4:	call   0x8c5cb170
  4208c9:	adc    al,0x20
  4208cb:	mov    esp,0x473be00
  4208d0:	jno    0x4208b4
  4208d2:	inc    esp
  4208d3:	and    dh,dh
  4208d5:	adc    ebx,DWORD PTR [esi+0x1fe04dcd]
  4208db:	sbb    BYTE PTR [ebx+0x44],dl
  4208de:	rcl    ecx,cl
  4208e0:	test   eax,0x69219975
  4208e5:	jp     0x4208f2
  4208e7:	mov    ecx,0x9502e24c
  4208ec:	ss mov ebx,0xe98f0f83
  4208f2:	add    BYTE PTR [ecx],al
  4208f4:	xor    DWORD PTR [ebp+0x5c75fb5f],0xffffffb1
  4208fb:	jae    0x420903
  4208fd:	je     0x4208c3
  4208ff:	add    ch,BYTE PTR ds:0xc41e9de
  420905:	jle    0x4208d2
  420907:	int    0x6a
  420909:	ret    0x5b6f
  42090c:	cdq    
  42090d:	ja     0x420898
  42090f:	fistp  WORD PTR [eax+0x1bb77097]
  420915:	mov    eax,ds:0xb6313578
  42091a:	mov    dl,0xb3
  42091c:	add    eax,0x535b435b
  420921:	xor    eax,0x9dfefdf5
  420926:	dec    eax
  420927:	mov    esp,0x1487d7f0
  42092c:	sbb    dh,BYTE PTR [esi-0x53314ed4]
  420932:	or     cl,BYTE PTR [edx+0x6fe95c68]
  420938:	(bad)  
  42093a:	xor    al,BYTE PTR [edi+0x79]
  42093d:	sub    BYTE PTR [edi+0x665402ab],0xe6
  420944:	out    0x16,al
  420946:	test   DWORD PTR [ebx+0x319e2727],0x2d5c6a4a
  420950:	ficom  DWORD PTR [eax+ebx*1+0x6]
  420954:	jle    0x420937
  420956:	cld    
  420957:	jo     0x42096c
  420959:	add    BYTE PTR [edx],dl
  42095b:	add    DWORD PTR [ecx+0x3332613d],0x77a82cc1
  420965:	sbb    eax,0xb668b965
  42096a:	imul   esi,DWORD PTR [ebx],0xa8e92c51
  420970:	gs mov edx,DWORD PTR gs:[edi]
  420974:	dec    esi
  420975:	sub    al,0x53
  420977:	nop
  420978:	inc    eax
  420979:	scas   eax,DWORD PTR es:[edi]
  42097a:	out    0xab,al
  42097c:	(bad)  
  42097d:	dec    ecx
  42097e:	xchg   esi,eax
  42097f:	push   ebx
  420980:	ret    
  420981:	xlat   BYTE PTR ds:[ebx]
  420982:	jg     0x420931
  420984:	or     ebx,DWORD PTR [esi-0x6]
  420987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420988:	xchg   edx,eax
  420989:	in     al,dx
  42098a:	pop    esi
  42098b:	enter  0x54f4,0xca
  42098f:	inc    edi
  420990:	sub    al,BYTE PTR [ebx-0x209c9a17]
  420996:	mov    bl,0x85
  420998:	xlat   BYTE PTR ds:[ebx]
  420999:	outs   dx,BYTE PTR ds:[esi]
  42099a:	sub    esi,edi
  42099c:	out    0xe7,eax
  42099e:	shr    DWORD PTR ds:[esi+0xc2ae930],1
  4209a5:	jg     0x4209c2
  4209a7:	jns    0x420970
  4209a9:	(bad)  
  4209aa:	sti    
  4209ab:	xor    al,0x1e
  4209ad:	stos   BYTE PTR es:[edi],al
  4209ae:	test   DWORD PTR [esi+0x4621f49b],esp
  4209b4:	push   esp
  4209b5:	cli    
  4209b6:	xor    BYTE PTR [ecx+0x6e812bc1],ah
  4209bc:	cmp    eax,esi
  4209be:	sti    
  4209bf:	test   BYTE PTR [eax+0x7662ae76],dh
  4209c5:	pop    ebp
  4209c6:	enter  0x304c,0x20
  4209ca:	icebp  
  4209cb:	push   ebx
  4209cc:	sub    ebx,DWORD PTR [ecx-0x56d02a68]
  4209d2:	mov    eax,0x8bd9ef1d
  4209d7:	or     eax,0xc537bba7
  4209dc:	xchg   esi,eax
  4209dd:	jmp    0x5f02:0x38630c16
  4209e4:	test   eax,0xd0a00575
  4209e9:	vmread DWORD PTR [eax-0x93d1edd],ebx
  4209f0:	pop    edi
  4209f1:	imul   esi,DWORD PTR [edi+edx*4+0x779f51b9],0x2c
  4209f9:	nop
  4209fa:	push   cs
  4209fb:	aaa    
  4209fc:	pop    eax
  4209fd:	cmp    DWORD PTR [esi+0x78],esi
  420a00:	cli    
  420a01:	xor    al,0xc7
  420a03:	nop
  420a04:	jo     0x420a63
  420a06:	arpl   WORD PTR [edi+0x6f1ff5e2],ax
  420a0c:	dec    esp
  420a0d:	mov    ebx,0x1f43cf8
  420a12:	arpl   WORD PTR [eax-0x65],sp
  420a15:	dec    eax
  420a16:	lods   eax,DWORD PTR ds:[esi]
  420a17:	out    dx,al
  420a18:	out    0x99,eax
  420a1a:	inc    edx
  420a1b:	pop    ecx
  420a1c:	jbe    0x420a52
  420a1e:	add    dl,al
  420a20:	aaa    
  420a21:	jmp    0x4209d9
  420a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a24:	ret    
  420a25:	xor    DWORD PTR [edx],esi
  420a27:	out    dx,al
  420a28:	mov    ebx,0x79a308a7
  420a2d:	popf   
  420a2e:	push   ss
	...
  420a37:	add    BYTE PTR [eax],al
  420a39:	add    BYTE PTR [edi],al
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x420a6b
  420a47:	pop    edi
  420a48:	dec    eax
  420a49:	sub    eax,DWORD PTR [edx]
  420a4b:	xchg   DWORD PTR [ecx],eax
  420a4d:	add    ch,bh
  420a4f:	add    DWORD PTR [eax],eax
  420a51:	add    BYTE PTR [ecx],dh
  420a53:	ds inc esp
  420a55:	push   cs
  420a56:	es jmp 0x435f:0x48cca239
  420a5e:	and    esp,DWORD PTR [edx]
  420a60:	pop    esp
  420a61:	sub    dl,BYTE PTR [eax+edi*8+0x46c7259a]
  420a68:	pop    esp
  420a69:	push   ebx
  420a6a:	out    0x2,eax
  420a6c:	adc    DWORD PTR [ebx],esi
  420a6e:	pop    edx
  420a6f:	mov    al,0xc1
  420a71:	inc    eax
  420a72:	nop
  420a73:	pusha  
  420a74:	ds (bad) 
  420a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a77:	mov    al,ds:0xbb0855cb
  420a7c:	inc    edi
  420a7d:	repz out 0x18,eax
  420a80:	xchg   BYTE PTR [edx],dl
  420a82:	shl    dl,1
  420a84:	and    BYTE PTR [ecx-0x1a],bl
  420a87:	jp     0x420a26
  420a89:	aas    
  420a8a:	push   0x4
  420a8c:	sub    al,0x3a
  420a8e:	xor    al,0xef
  420a90:	mov    edi,0x351f53
  420a95:	xor    al,bh
  420a97:	push   esp
  420a98:	mov    cl,0xce
  420a9a:	adc    eax,0x46877544
  420a9f:	rcr    DWORD PTR [ecx+0x1da90942],1
  420aa5:	rol    esp,cl
  420aa7:	inc    ebx
  420aa8:	loope  0x420a64
  420aaa:	test   eax,0xcb2de84a
  420aaf:	sub    DWORD PTR [esi],ebp
  420ab1:	sub    ch,dh
  420ab3:	xor    BYTE PTR [ecx-0x1],bl
  420ab6:	je     0x420ab1
  420ab8:	adc    al,0x6
  420aba:	out    0xc0,al
  420abc:	pop    ecx
  420abd:	sub    DWORD PTR [ecx-0x1384900c],eax
  420ac3:	sar    bl,1
  420ac5:	sahf   
  420ac6:	cmp    DWORD PTR [ebp-0x2ccb34a3],0x4a4df772
  420ad0:	mov    cl,ah
  420ad2:	lds    edx,FWORD PTR [eax]
  420ad4:	js     0x420ab8
  420ad6:	outs   dx,DWORD PTR ds:[esi]
  420ad7:	shl    DWORD PTR [edx+0x2ede31e8],1
  420add:	int3   
  420ade:	sar    ebp,1
  420ae0:	fimul  DWORD PTR [edx-0x72ffe1df]
  420ae6:	mov    eax,ds:0xa2896f3d
  420aeb:	or     eax,0xca85ee3e
  420af0:	fucomip st,st(2)
  420af2:	mov    dl,0xba
  420af4:	or     eax,0x248355cd
  420af9:	sahf   
  420afa:	mov    ds:0xa2b94cf2,al
  420aff:	add    al,0x43
  420b01:	aam    0xc4
  420b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b04:	mov    ds:0xc1400e4f,al
  420b09:	call   0xf2a0:0xd63ce01
  420b10:	mov    esi,0x2813d5c4
  420b15:	pop    edi
  420b16:	fnop   
  420b18:	lea    ebp,fs:[edi]
  420b1b:	push   eax
  420b1c:	mov    al,0x75
  420b1f:	enter  0x9123,0xf8
  420b23:	sbb    BYTE PTR [ecx+0x1c],dh
  420b26:	cmp    BYTE PTR [esi],0x63
  420b29:	(bad)  
  420b2a:	cwde   
  420b2b:	xor    DWORD PTR [eax+0x1ca95135],0xa81ac89d
  420b35:	fwait
  420b36:	out    dx,eax
  420b37:	std    
  420b38:	loop   0x420b66
  420b3a:	dec    ecx
  420b3b:	int3   
  420b3c:	or     ah,dh
  420b3e:	add    al,0xc1
  420b40:	fild   QWORD PTR [edx-0x13]
  420b43:	int3   
  420b44:	test   BYTE PTR [ebx+0x70],0x42
  420b48:	or     BYTE PTR [edx+ebx*2+0x224e44ec],cl
  420b4f:	dec    edx
  420b50:	test   al,0xd0
  420b52:	fs stos BYTE PTR es:[edi],al
  420b54:	push   esi
  420b55:	cs out 0xee,al
  420b58:	ficomp DWORD PTR [edi-0x1a79d02f]
  420b5e:	xchg   BYTE PTR [ebp-0x72],cl
  420b61:	das    
  420b62:	ins    DWORD PTR es:[edi],dx
  420b63:	(bad)  
  420b64:	xchg   ebx,eax
  420b65:	lods   al,BYTE PTR ds:[esi]
  420b66:	push   ecx
  420b67:	stc    
  420b68:	call   0xce89ba3
  420b6d:	jnp    0x420b49
  420b6f:	jg     0x420bed
  420b71:	sub    bl,al
  420b73:	pop    edx
  420b74:	inc    edi
  420b75:	jbe    0x420bf3
  420b77:	push   ebx
  420b78:	xor    DWORD PTR [edi],esi
  420b7a:	call   0x7111:0xfc21fb67
  420b81:	push   ds
  420b82:	les    ecx,FWORD PTR [bp+si+0x79]
  420b86:	or     ebx,edi
  420b88:	and    al,0x33
  420b8a:	lea    ebx,[ebp+0x4cb2530c]
  420b90:	outs   dx,DWORD PTR ds:[esi]
  420b91:	mov    dh,0xf4
  420b93:	pop    ss
  420b94:	ss cld 
  420b96:	sbb    DWORD PTR [ebx+0x32049ab3],esp
  420b9c:	cdq    
  420b9d:	call   0x96ed37e7
  420ba2:	leave  
  420ba3:	repnz adc eax,0xbec30a36
  420ba9:	push   edx
  420baa:	ja     0x420bc0
  420bac:	lods   eax,DWORD PTR ds:[esi]
  420bad:	add    eax,0xf2cf5858
  420bb2:	dec    edx
  420bb3:	push   esp
  420bb4:	push   eax
  420bb5:	mov    WORD PTR [edi-0x4e4afa4a],?
  420bbb:	loopne 0x420b9c
  420bbd:	mov    ch,0xdd
  420bbf:	jmp    0x60b3f60a
  420bc4:	jnp    0x420b47
  420bc6:	push   ebp
  420bc7:	(bad)  
  420bc8:	ins    BYTE PTR es:[edi],dx
  420bc9:	dec    ecx
  420bca:	push   edx
  420bcb:	retf   0xc994
  420bce:	jecxz  0x420be3
  420bd0:	jmp    0x51a63950
  420bd5:	and    DWORD PTR [ebx],ecx
  420bd7:	push   edi
  420bd8:	mov    cl,0x53
  420bda:	mov    dh,0xaf
  420bdc:	jns    0x420c2e
  420bde:	add    eax,0xcaf9755e
  420be3:	push   ss
  420be4:	in     al,dx
  420be5:	mov    ecx,0xb476e6c6
  420bea:	dec    ecx
  420beb:	push   edx
  420bed:	fdiv   QWORD PTR [edi-0x61167fa3]
  420bf3:	jmp    0x420c69
  420bf5:	(bad)  
  420bf6:	int3   
  420bf7:	neg    edi
  420bf9:	iret   
  420bfa:	repz ret 
  420bfc:	das    
  420bfd:	xchg   edi,ecx
  420bff:	(bad)  
  420c01:	in     al,dx
  420c02:	popf   
  420c03:	dec    esp
  420c04:	push   ecx
  420c05:	addr16 dec edx
  420c07:	xor    eax,0xa498b569
  420c0c:	or     edi,DWORD PTR [ebx-0x35aa46e3]
  420c12:	xlat   BYTE PTR ds:[ebx]
  420c13:	dec    edx
  420c14:	stc    
  420c15:	enter  0xd31c,0x97
  420c19:	retf   0x84c2
  420c1c:	ds push ds
  420c1e:	jb     0x420c4e
  420c20:	repz ficom WORD PTR [edi]
  420c23:	inc    esp
  420c24:	mov    ch,0xe
  420c26:	fcom   DWORD PTR [eax+0xadbc5f0]
  420c2c:	imul   ebp,DWORD PTR [ebp-0x57],0xffffffb9
  420c30:	dec    ecx
  420c31:	ins    DWORD PTR es:[edi],dx
  420c32:	(bad)  
  420c33:	xor    eax,0xcb3a7246
  420c38:	cmp    edi,edi
  420c3a:	xor    dh,cl
  420c3c:	adc    ebx,ebx
  420c3e:	ud2    
  420c40:	xchg   edx,eax
  420c41:	mov    dl,0x62
  420c43:	pop    ebx
  420c44:	add    DWORD PTR [esi+edx*1],ebx
  420c47:	sti    
  420c48:	shl    DWORD PTR ds:0xc9191e84,1
  420c4e:	sbb    DWORD PTR [eax],eax
	...
  420c58:	add    BYTE PTR [eax],al
  420c5a:	push   ds
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    WORD PTR [edx+ecx*1+0x6e],ss
  420c69:	inc    esp
  420c6a:	dec    DWORD PTR [eax+0x1fd0001]
  420c70:	add    BYTE PTR [eax],al
  420c72:	mov    ds:0xdbc97bea,al
  420c77:	adc    al,0xc6
  420c79:	repz cdq 
  420c7b:	jmp    0x420cb2
  420c7d:	add    BYTE PTR [edi-0x761a9e9d],0x51
  420c84:	in     eax,0xfb
  420c86:	add    al,BYTE PTR [esi-0x8]
  420c89:	xchg   BYTE PTR [esi-0x340af15e],bh
  420c8f:	prefetch (bad)
  420c90:	or     eax,0x787caef6
  420c95:	sbb    al,0xbb
  420c97:	push   eax
  420c98:	stos   DWORD PTR es:[edi],eax
  420c99:	jl     0x420c55
  420c9b:	push   esi
  420c9c:	push   ebx
  420c9d:	cdq    
  420c9e:	les    edx,FWORD PTR [ebp+0x5a]
  420ca1:	jmp    0x420c66
  420ca3:	imul   esp,eax,0x1db8c8de
  420ca9:	add    eax,0x9982b07c
  420cae:	sbb    eax,0x6788b5b0
  420cb3:	inc    ebp
  420cb4:	dec    esp
  420cb5:	(bad)  
  420cb6:	mov    cl,0x57
  420cb8:	mov    eax,DWORD PTR [ecx]
  420cba:	inc    ebp
  420cbb:	aad    0x79
  420cbd:	stos   DWORD PTR es:[edi],eax
  420cbe:	fist   WORD PTR [edi]
  420cc0:	add    BYTE PTR [ebx+0x78],bl
  420cc3:	popf   
  420cc4:	int    0x1e
  420cc6:	jp     0x420cbf
  420cc8:	push   edx
  420cc9:	push   cs
  420cca:	fdiv   DWORD PTR [eax+0x12a8f582]
  420cd0:	setl   dh
  420cd3:	push   ds
  420cd4:	add    edx,ebp
  420cd6:	dec    edi
  420cd7:	sbb    DWORD PTR [ebp-0x4247787a],edx
  420cdd:	cmp    BYTE PTR [esi-0x50a2c42f],ch
  420ce3:	jnp    0x420d2f
  420ce5:	pop    edx
  420ce6:	ret    0x7205
  420ce9:	out    0x4a,al
  420ceb:	push   ecx
  420cec:	scas   eax,DWORD PTR es:[edi]
  420ced:	and    DWORD PTR [eax-0x8],0xffffffa2
  420cf1:	mov    edx,esi
  420cf3:	and    DWORD PTR [ebx],0x992f77ab
  420cf9:	or     bh,BYTE PTR [edx]
  420cfb:	pop    ecx
  420cfc:	cs (bad) 
  420cfe:	out    0x42,eax
  420d00:	mov    edi,0x324e54f0
  420d05:	aam    0x7
  420d07:	(bad)  
  420d08:	jmp    0xfafc62b1
  420d0d:	add    edi,DWORD PTR [edi-0x2b]
  420d10:	fild   QWORD PTR [edi+eax*4-0x20]
  420d14:	inc    ebp
  420d15:	dec    ebp
  420d16:	outs   dx,BYTE PTR ds:[esi]
  420d17:	sbb    edi,DWORD PTR [ebx+0x57]
  420d1a:	inc    esp
  420d1b:	sti    
  420d1c:	mov    WORD PTR [esp+ebx*2+0x54f92c59],?
  420d23:	test   eax,0x7088cdba
  420d28:	jge    0x420d18
  420d2a:	in     eax,0x43
  420d2c:	mov    eax,ds:0x335f2a1b
  420d31:	push   ecx
  420d32:	out    dx,al
  420d33:	test   BYTE PTR [ebp+0x1760f164],dl
  420d39:	lods   al,BYTE PTR ds:[esi]
  420d3a:	call   0xf883:0x54568f07
  420d41:	pop    ebx
  420d42:	cmp    eax,0x568eac8b
  420d47:	gs inc ecx
  420d49:	mov    ecx,0x6d031566
  420d4e:	mov    edx,0xd8666317
  420d53:	sahf   
  420d54:	pushf  
  420d55:	out    0x80,eax
  420d57:	aas    
  420d58:	mov    al,ds:0x38eee232
  420d5d:	lds    esp,FWORD PTR [edi+0x1c]
  420d60:	ror    BYTE PTR [edx-0x6b05a226],0xa7
  420d67:	test   edi,edx
  420d69:	std    
  420d6a:	sub    al,0xc9
  420d6c:	cld    
  420d6d:	jl     0x420d96
  420d6f:	push   esp
  420d70:	scas   al,BYTE PTR es:[edi]
  420d71:	cmp    esi,DWORD PTR [edx]
  420d73:	ret    0x1d3d
  420d76:	sub    al,0xea
  420d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d79:	xchg   edx,esi
  420d7b:	mov    al,0x14
  420d7d:	into   
  420d7e:	fistp  QWORD PTR [esi+0x29]
  420d81:	loop   0x420d66
  420d83:	and    al,0xdf
  420d85:	push   ss
  420d86:	pop    DWORD PTR [edi-0x241ffea]
  420d8c:	adc    DWORD PTR [ebx],0x5dd05849
  420d92:	(bad)  
  420d94:	cmp    eax,0xe7edcdc
  420d99:	retf   0x8a3e
  420d9c:	mov    edx,ebp
  420d9e:	adc    dh,bl
  420da0:	push   ds
  420da1:	adc    bh,BYTE PTR [ebx]
  420da3:	outs   dx,DWORD PTR ds:[esi]
  420da4:	fistp  WORD PTR [esi]
  420da6:	enter  0x1b51,0xfa
  420daa:	icebp  
  420dab:	sub    edx,DWORD PTR [edx-0x51]
  420dae:	clc    
  420daf:	jl     0x420dde
  420db1:	mov    ch,0xd1
  420db3:	pop    ss
  420db4:	div    DWORD PTR [eax]
  420db6:	daa    
  420db7:	inc    ebp
  420db8:	aas    
  420db9:	ffree  st(1)
  420dbb:	clc    
  420dbc:	xor    BYTE PTR [edi-0x9ebca40],bh
  420dc2:	in     al,dx
  420dc3:	cmc    
  420dc4:	or     DWORD PTR [ebp+ebp*2+0x40],edx
  420dc8:	and    al,0xcc
  420dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dcc:	xchg   ecx,eax
  420dcd:	iret   
  420dce:	sbb    DWORD PTR [ebp+0x71],edx
  420dd1:	adc    bl,bl
  420dd3:	sub    ah,BYTE PTR [ebx]
  420dd5:	xchg   ecx,eax
  420dd6:	or     al,0xb7
  420dd8:	sti    
  420dd9:	in     eax,0x79
  420ddb:	pop    ss
  420ddc:	xchg   edi,eax
  420ddd:	hlt    
  420dde:	adc    BYTE PTR [edi+edi*1],cl
  420de1:	inc    ecx
  420de2:	pusha  
  420de3:	icebp  
  420de4:	sar    dl,cl
  420de6:	push   esi
  420de7:	(bad)  
  420de9:	mov    ch,0xae
  420deb:	(bad)  
  420dec:	lods   eax,DWORD PTR ds:[esi]
  420ded:	je     0x420dda
  420def:	stos   DWORD PTR es:[edi],eax
  420df0:	xchg   ebx,eax
  420df1:	fmulp  st(4),st
  420df3:	inc    ebx
  420df4:	add    BYTE PTR [ebp-0x35],dh
  420df7:	push   cs
  420df8:	push   0xb4bf9b3
  420dfd:	mov    edi,0x291132a9
  420e02:	mov    eax,0x9f15291e
  420e07:	or     DWORD PTR [esi-0x57b968bc],ebx
  420e0d:	cmp    BYTE PTR [esi+ecx*2],0xe5
  420e11:	push   ds
  420e12:	and    al,0x14
  420e15:	mov    fs,WORD PTR [ebx-0x561bce4e]
  420e1b:	vmwrite ebx,ecx
  420e1e:	cmc    
  420e1f:	xor    al,0xc6
  420e21:	xchg   ebx,eax
  420e22:	gs in  al,dx
  420e24:	repz leave 
  420e26:	imul   ebp,esi,0x18
  420e29:	cdq    
  420e2a:	leave  
  420e2b:	call   0x771278f9
  420e30:	push   0x98b02532
  420e35:	call   0x3583:0xa97405af
  420e3c:	jp     0x420e2e
  420e3e:	xchg   esi,eax
  420e3f:	je     0x420ebd
  420e41:	nop
  420e42:	mov    ebp,0xc99b8655
  420e47:	pop    es
  420e48:	cmp    esi,DWORD PTR [esi+0x4c]
  420e4b:	adc    ebp,ecx
  420e4d:	jg     0x420de5
  420e4f:	scas   al,BYTE PTR es:[edi]
  420e50:	fs out dx,eax
  420e52:	fucomp st(4)
  420e54:	mov    eax,ds:0x6356b934
  420e59:	mov    eax,0x463097f3
  420e5e:	add    DWORD PTR [ebp-0x76],esi
  420e61:	inc    esi
  420e62:	jl     0x420e77
  420e64:	inc    esp
  420e65:	xor    DWORD PTR [edi-0x2b85fb7f],esp
  420e6b:	xchg   edx,eax
  420e6c:	push   ds
  420e6d:	out    0x70,al
	...
  420e77:	add    BYTE PTR [eax],al
  420e79:	add    BYTE PTR [eax-0x77],bh
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420e6b
  420e87:	mov    al,0xa9
  420e89:	loope  0x420e87
  420e8b:	mov    al,BYTE PTR [ecx]
  420e8d:	add    ch,bh
  420e8f:	add    DWORD PTR [eax],eax
  420e91:	add    BYTE PTR [esi-0x3d2f8e1e],dh
  420e97:	lock ret 
  420e99:	pop    ebp
  420e9a:	das    
  420e9b:	test   DWORD PTR [ebx],eax
  420e9d:	push   esi
  420e9e:	mov    DWORD PTR [ecx],esp
  420ea0:	pushf  
  420ea1:	in     al,dx
  420ea2:	inc    edx
  420ea3:	leave  
  420ea4:	sbb    BYTE PTR [ecx],al
  420ea6:	jbe    0x420ea0
  420ea8:	push   cs
  420ea9:	in     al,0x2e
  420eab:	clc    
  420eac:	cmp    cl,BYTE PTR [esi+esi*1+0x23]
  420eb0:	data16 mov dl,0x1e
  420eb3:	ffree  st(6)
  420eb5:	sub    al,0x52
  420eb7:	fnstcw WORD PTR [eax]
  420eb9:	mov    bh,0xfa
  420ebb:	aaa    
  420ebc:	into   
  420ebd:	sub    al,BYTE PTR [ecx+0x62]
  420ec0:	or     BYTE PTR [ebp-0x26],0x4d
  420ec4:	les    edx,FWORD PTR [ebx]
  420ec6:	stc    
  420ec7:	mov    al,ds:0x8349aa7f
  420ecc:	dec    edi
  420ecd:	xchg   ebx,eax
  420ece:	stos   DWORD PTR es:[edi],eax
  420ecf:	inc    ebp
  420ed0:	cmp    eax,0xb135ecfe
  420ed5:	add    eax,0x52b6bdc1
  420eda:	jmp    0x420e78
  420edc:	jne    0x420f36
  420ede:	ds test ebp,ebx
  420ee1:	or     BYTE PTR [edx+0x4f],dh
  420ee4:	adc    ecx,DWORD PTR [edi+0x24a54ad3]
  420eea:	nop
  420eeb:	jge    0x420eb8
  420eed:	ret    
  420eee:	fmul   st,st(0)
  420ef0:	inc    esp
  420ef1:	into   
  420ef2:	adc    al,0x0
  420ef4:	xor    BYTE PTR [edi-0x5e],dl
  420ef7:	mov    edx,0xa6226d1d
  420efc:	nop
  420efd:	or     al,0xce
  420eff:	test   eax,0x1ca5eca8
  420f04:	adc    BYTE PTR [eax+0x45151dac],dl
  420f0a:	(bad)  
  420f0b:	ins    BYTE PTR es:[edi],dx
  420f0c:	mov    eax,0xc6ed90d4
  420f11:	cdq    
  420f12:	jmp    0x1dcb:0x95822637
  420f19:	clc    
  420f1a:	xchg   ebx,eax
  420f1b:	cdq    
  420f1c:	xchg   esi,eax
  420f1d:	mov    WORD PTR [ebp+0x5f],cs
  420f20:	mov    eax,0x6eaafae9
  420f25:	out    dx,eax
  420f26:	icebp  
  420f27:	mov    ebp,0xef41fb9c
  420f2c:	inc    edi
  420f2d:	out    dx,al
  420f2e:	imul   eax,ecx,0xffffffc4
  420f31:	arpl   WORD PTR [ebx+0x5],bp
  420f34:	xor    al,0x4d
  420f36:	add    BYTE PTR [ebx],al
  420f38:	mov    ah,0xce
  420f3a:	into   
  420f3b:	das    
  420f3c:	cmp    edx,DWORD PTR cs:0xa6821fa4
  420f43:	je     0x420f1d
  420f45:	sub    al,0xf
  420f47:	xchg   ebx,eax
  420f48:	sbb    dh,BYTE PTR [ecx]
  420f4a:	jle    0x420eeb
  420f4c:	vpmaxub ymm7,ymm5,ymm3
  420f50:	mov    dh,0x48
  420f52:	cld    
  420f53:	ds dec ebp
  420f55:	(bad)  
  420f56:	pop    ss
  420f57:	mov    esp,0x93e438d9
  420f5c:	in     al,dx
  420f5d:	inc    edx
  420f5e:	test   eax,0x77e1e765
  420f63:	inc    ebp
  420f64:	gs mov edi,?
  420f67:	mov    dh,0x2b
  420f69:	xchg   ecx,eax
  420f6a:	fbld   TBYTE PTR [ecx]
  420f6c:	lods   al,BYTE PTR ds:[esi]
  420f6d:	cwde   
  420f6e:	xchg   ebx,eax
  420f6f:	iret   
  420f70:	adc    dl,BYTE PTR [edi-0x6a]
  420f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f74:	mov    bl,0x56
  420f76:	mov    dl,0x52
  420f78:	xlat   BYTE PTR ds:[ebx]
  420f79:	sub    ch,BYTE PTR [ecx-0x5004379d]
  420f7f:	clc    
  420f80:	xchg   DWORD PTR [edi],esi
  420f82:	(bad)  
  420f83:	jno    0x420f54
  420f85:	add    DWORD PTR [edi-0x75d8f8dd],esp
  420f8b:	jns    0x420f66
  420f8d:	lea    edi,[ecx]
  420f8f:	inc    eax
  420f90:	ins    BYTE PTR es:[edi],dx
  420f91:	dec    esp
  420f92:	and    al,0x4b
  420f94:	aad    0x42
  420f96:	sbb    al,0xf1
  420f98:	push   cs
  420f99:	inc    ebx
  420f9a:	in     eax,dx
  420f9b:	int    0xdb
  420f9d:	sbb    ch,BYTE PTR [ebx-0x1f]
  420fa0:	sub    DWORD PTR ds:0x78ce8e13,edx
  420fa6:	push   ebp
  420fa7:	inc    ebx
  420fa8:	jnp    0x420f9c
  420faa:	es int3 
  420fac:	jae    0x42100d
  420fae:	aam    0x41
  420fb0:	call   0x2798:0xc04ac94f
  420fb7:	xchg   edx,eax
  420fb8:	js     0x420fbe
  420fba:	shr    DWORD PTR [esi-0x5c9839fd],1
  420fc0:	jg     0x420f84
  420fc2:	lds    edx,FWORD PTR [eax+0x1f]
  420fc5:	inc    ebp
  420fc6:	aas    
  420fc7:	in     al,dx
  420fc8:	dec    esp
  420fc9:	lahf   
  420fca:	mov    esi,DWORD PTR [ebx]
  420fcc:	sbb    ecx,DWORD PTR [eax]
  420fce:	xchg   BYTE PTR [ecx],bl
  420fd0:	pop    esi
  420fd1:	push   ebp
  420fd2:	pop    ds
  420fd3:	inc    edi
  420fd4:	loop   0x420fe6
  420fd6:	in     eax,dx
  420fd7:	addr16 mov ebp,0xe27fbc10
  420fdd:	(bad)  
  420fde:	jnp    0x421017
  420fe0:	and    BYTE PTR [ecx],dl
  420fe2:	rol    DWORD PTR [edi+0x25],0x8d
  420fe6:	xor    DWORD PTR [esi],ebp
  420fe8:	mov    edi,0x56b89181
  420fed:	adc    dh,BYTE PTR [edx+0x2777c254]
  420ff3:	ror    ah,cl
  420ff5:	jge    0x420f89
  420ff7:	dec    edx
  420ff8:	test   BYTE PTR [edi],0x9f
  420ffb:	inc    esp
  420ffc:	shl    dl,cl
  420ffe:	imul   ebx,DWORD PTR [ecx],0xad951259
  421004:	loop   0x421051
  421006:	push   esp
  421007:	aaa    
  421008:	ins    DWORD PTR es:[edi],dx
  421009:	scas   al,BYTE PTR es:[edi]
  42100a:	mov    ecx,0x8d7ea00b
  42100f:	push   ebp
  421010:	es fsubr st(5),st
  421013:	out    0x3d,al
  421015:	iret   
  421016:	aaa    
  421017:	es out dx,al
  421019:	fcomp  DWORD PTR [eax]
  42101b:	dec    DWORD PTR [ebp+ecx*2-0x5a3342c2]
  421022:	in     al,0x6c
  421024:	stc    
  421025:	popf   
  421026:	dec    esi
  421027:	stos   DWORD PTR es:[edi],eax
  421028:	add    BYTE PTR [esp+ebx*2+0x41],bl
  42102c:	bound  edx,QWORD PTR [ebp+0x30]
  42102f:	(bad)  
  421030:	lock dec edx
  421032:	sub    edx,eax
  421034:	dec    esp
  421035:	xor    dh,BYTE PTR [esi-0x5a]
  421038:	shr    BYTE PTR [edi],1
  42103a:	xor    DWORD PTR [edx+0x49db888b],ecx
  421040:	out    0x72,al
  421042:	ja     0x421039
  421044:	mov    ebx,0xcf67f3fb
  421049:	hlt    
  42104a:	mov    ah,0xfc
  42104c:	imul   BYTE PTR [ebp+0x60]
  42104f:	mov    esp,0xb7d358e8
  421054:	push   esp
  421055:	(bad)  
  421056:	arpl   WORD PTR fs:[eax-0x17],cx
  42105a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42105b:	aaa    
  42105c:	shl    DWORD PTR [eax-0xedc965d],0x44
  421063:	pop    ecx
  421064:	or     dh,BYTE PTR [edx-0x38]
  421067:	leave  
  421068:	pushf  
  421069:	std    
  42106a:	or     eax,0xfe8215f4
  42106f:	xchg   esi,eax
  421070:	mov    esp,0xe941688e
  421075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421076:	sbb    ebp,ebp
  421078:	xor    eax,DWORD PTR [ebx]
  42107a:	fcom   DWORD PTR [ebx+0x56]
  42107d:	call   0xc4e4:0x1dd31d0c
  421084:	inc    eax
  421085:	add    DWORD PTR [edi-0x46],ecx
  421088:	sbb    BYTE PTR [ebp-0x34],0xf6
  42108c:	sbb    ch,BYTE PTR [ecx]
  42108e:	mov    al,ds:0x0
  421093:	add    BYTE PTR [eax],al
  421095:	add    BYTE PTR [eax],al
  421097:	add    BYTE PTR [eax],al
  421099:	add    BYTE PTR [edx+ecx*4-0x49],bl
  42109d:	imul   esi,edi,0x7f
  4210a0:	fdivr  QWORD PTR [edi+0x2b60ebfc]
  4210a6:	rcr    BYTE PTR [edi],0xfc
  4210a9:	xor    al,0xf9
  4210ab:	mov    WORD PTR [ecx],es
  4210ad:	add    ch,bh
  4210af:	add    DWORD PTR [eax],eax
  4210b1:	add    BYTE PTR [ecx-0x77],ch
  4210b4:	pop    ebx
  4210b5:	mov    eax,0x56de8ef5
  4210ba:	push   ss
  4210bb:	xchg   DWORD PTR [edi+edi*1],eax
  4210be:	pop    ebp
  4210bf:	sbb    eax,0xfbc4b2ca
  4210c4:	stc    
  4210c5:	push   edi
  4210c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210c7:	inc    edx
  4210c8:	mov    bl,0xee
  4210ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210cb:	mov    ecx,0x1e51731c
  4210d0:	jg     0x42108e
  4210d2:	dec    ebp
  4210d3:	jmp    0x2986:0x7b042fec
  4210da:	dec    ecx
  4210db:	in     eax,dx
  4210dc:	sbb    al,0xfd
  4210de:	mov    edi,0xe1123703
  4210e3:	mov    al,0x10
  4210e5:	dec    edi
  4210e6:	pop    ebx
  4210e7:	or     al,BYTE PTR [edi+0x73d24dd1]
  4210ed:	imul   BYTE PTR [esi+0x76c0e574]
  4210f3:	adc    ebp,ebp
  4210f5:	inc    ebp
  4210f6:	jae    0x4210bc
  4210f8:	icebp  
  4210f9:	add    esi,0x50cd7eb
  4210ff:	(bad)  
  421100:	pop    edi
  421101:	jg     0x4210ab
  421103:	fstp   QWORD PTR [ebx+0x66b1b792]
  421109:	lods   eax,DWORD PTR ds:[esi]
  42110a:	icebp  
  42110b:	xchg   ebp,eax
  42110c:	fisub  DWORD PTR [edi]
  42110e:	retf   0xcb7c
  421111:	push   ecx
  421112:	xlat   BYTE PTR es:[ebx]
  421114:	mov    bl,ch
  421116:	(bad)  
  421118:	xor    DWORD PTR [ecx],esi
  42111a:	icebp  
  42111b:	shr    DWORD PTR [ebx+edi*8+0x1c],1
  42111f:	xor    edx,DWORD PTR [edx+eax*8+0x38]
  421123:	add    eax,0x343ed30f
  421128:	in     al,dx
  421129:	mov    bh,0xd9
  42112b:	mov    ch,BYTE PTR [esi-0x32a8f29d]
  421131:	cmp    BYTE PTR [edi+0xcd5c2e3],dh
  421137:	dec    esi
  421138:	cld    
  421139:	scas   eax,DWORD PTR es:[edi]
  42113a:	shl    BYTE PTR [ebp+ebx*4+0xdbd4eb1],1
  421141:	mov    ds:0xeed55322,eax
  421146:	push   esp
  421147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421148:	inc    edi
  421149:	xchg   esi,eax
  42114a:	dec    ecx
  42114b:	or     DWORD PTR [ecx+0x56],ecx
  42114e:	inc    eax
  42114f:	mov    ah,BYTE PTR [esp+edx*4-0x57]
  421153:	pop    ds
  421154:	jle    0x421110
  421156:	js     0x421187
  421158:	sub    al,dh
  42115a:	dec    ecx
  42115b:	ror    BYTE PTR [edx-0x7e9c5c09],cl
  421161:	sub    dh,BYTE PTR [eax+0x5c]
  421164:	jl     0x42115c
  421166:	mov    edi,cs
  421168:	fnstsw WORD PTR [ebx-0x73e378cd]
  42116e:	fld    TBYTE PTR [ebp+0x430454c3]
  421174:	repnz inc ebx
  421176:	shr    BYTE PTR ds:0xa212fb41,0x11
  42117d:	inc    eax
  42117e:	mov    ebp,0x772ef6fa
  421183:	fistp  QWORD PTR [eax+esi*4]
  421186:	aas    
  421187:	sbb    ah,bh
  421189:	nop
  42118a:	cmp    eax,0x181219d3
  42118f:	adc    eax,0xc49763af
  421194:	pop    esi
  421195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421196:	out    dx,eax
  421197:	mov    ch,0x0
  421199:	pop    ss
  42119a:	adc    eax,0x3677440d
  42119f:	add    al,0xf7
  4211a1:	xchg   ecx,edi
  4211a3:	lods   eax,DWORD PTR ds:[esi]
  4211a4:	imul   ecx,DWORD PTR [ebx],0x5b055a59
  4211aa:	sbb    eax,0xba1e97e3
  4211af:	addr16 (bad) 
  4211b1:	cmc    
  4211b2:	call   FWORD PTR [edx]
  4211b4:	sub    ebx,DWORD PTR [edx+eiz*2]
  4211b7:	add    al,0x62
  4211b9:	ins    BYTE PTR es:[edi],dx
  4211ba:	lock mov al,0x75
  4211bd:	fcomp  QWORD PTR [ebx+edi*4]
  4211c0:	data16 lods al,BYTE PTR ds:[esi]
  4211c2:	nop
  4211c3:	and    ebx,ecx
  4211c5:	pop    edx
  4211c6:	jmp    0x5a06:0x855c625a
  4211cd:	sbb    esi,edx
  4211cf:	jb     0x421204
  4211d1:	iret   
  4211d2:	imul   ebp,edx,0x2618fd8d
  4211d8:	sbb    BYTE PTR [esi-0x2b],0xce
  4211dc:	xchg   esi,eax
  4211dd:	fcmovb st,st(2)
  4211df:	pop    ebx
  4211e0:	pushf  
  4211e1:	je     0x421213
  4211e3:	or     al,0x7b
  4211e5:	mov    ds:0xdf8d9166,al
  4211ea:	(bad)  
  4211eb:	fadd   DWORD PTR [edi-0x7e]
  4211ee:	mov    WORD PTR [ebx+0x483aaa6f],fs
  4211f4:	loopne 0x421239
  4211f6:	cmp    DWORD PTR [ecx+0x9b7a548],eax
  4211fc:	mov    ebx,0xb92e5559
  421201:	sbb    al,0x72
  421203:	inc    ebp
  421204:	pop    ebx
  421205:	pusha  
  421206:	addr16 xchg ebx,eax
  421208:	sbb    DWORD PTR [ecx-0x35b4766e],esi
  42120e:	out    dx,eax
  42120f:	idiv   BYTE PTR es:[esi-0x208fdab]
  421216:	pop    ebx
  421217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421218:	sub    al,0x28
  42121a:	sbb    eax,0x176acf85
  42121f:	pop    edi
  421220:	jl     0x4211ab
  421222:	jecxz  0x421231
  421224:	mov    dl,0x86
  421226:	xor    eax,0xf4ca025f
  42122b:	and    DWORD PTR [esi-0x5c],ebp
  42122e:	adc    edx,DWORD PTR [edi-0x2e]
  421231:	ins    DWORD PTR es:[edi],dx
  421232:	or     eax,0xffc62bb8
  421237:	or     BYTE PTR [edx],dl
  421239:	out    0x27,eax
  42123b:	aas    
  42123c:	shl    BYTE PTR [eax-0x5f4d913f],0xa2
  421243:	test   al,0xad
  421245:	sbb    ebx,esp
  421247:	loopne 0x4211d0
  421249:	test   al,al
  42124b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42124c:	xchg   edx,eax
  42124d:	out    dx,eax
  42124e:	fisttp DWORD PTR gs:[ebp+0x798e78ca]
  421255:	arpl   WORD PTR [ecx-0x3781ed4c],dx
  42125b:	push   0x369fa735
  421260:	mov    edi,0xc30c4aef
  421265:	cwde   
  421266:	(bad)  
  421267:	jecxz  0x4212c3
  421269:	and    BYTE PTR [esi-0x72fb5804],cl
  42126f:	repz sbb DWORD PTR [ebx+edi*2+0x57],0x4b3135a4
  421278:	out    dx,eax
  421279:	push   edi
  42127a:	jmp    0xda6d1ea9
  42127f:	sub    BYTE PTR [ecx-0x13aec156],0xc5
  421286:	cmp    BYTE PTR [edx+0x7b],dh
  421289:	xor    al,0xc7
  42128b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42128c:	mov    eax,ds:0x3faef75a
  421291:	push   cs
  421292:	xchg   edi,eax
  421293:	out    0x78,eax
  421295:	dec    ebx
  421296:	mov    ebp,0x3a505a4
  42129b:	and    eax,0x8c867a15
  4212a0:	adc    edx,DWORD PTR [edx-0x45d02afd]
  4212a6:	sahf   
  4212a7:	ja     0x421285
  4212a9:	adc    DWORD PTR [esi-0x150cf4],edi
	...
  4212b7:	add    BYTE PTR [eax],al
  4212b9:	add    BYTE PTR [edi-0x402578e6],ah
  4212bf:	(bad)  
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx-0x5bbc1a0f]
  4212ca:	test   BYTE PTR [esi+0x1fd0001],0x0
  4212d1:	add    BYTE PTR [ecx],bl
  4212d3:	je     0x42130c
  4212d5:	fwait
  4212d6:	xchg   ebp,eax
  4212d7:	cld    
  4212d8:	or     BYTE PTR [edx-0x56],bl
  4212db:	push   ebx
  4212dc:	sub    esp,DWORD PTR [ecx+0x7b781937]
  4212e2:	add    eax,0x4bcf9d6f
  4212e7:	nop
  4212e8:	xchg   ecx,eax
  4212e9:	sbb    ebx,DWORD PTR [ecx-0x70fe6e30]
  4212ef:	jmp    0x4212a4
  4212f1:	test   ebp,0x26f91649
  4212f7:	pusha  
  4212f8:	inc    ebx
  4212f9:	mov    bh,0xcd
  4212fb:	outs   dx,BYTE PTR ds:[esi]
  4212fc:	push   cs
  4212fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212fe:	int    0x48
  421300:	std    
  421301:	hlt    
  421302:	cwde   
  421303:	test   eax,0xb4ed757b
  421308:	add    al,0xb1
  42130a:	mov    ah,0xd4
  42130c:	xor    al,BYTE PTR [esi+0xf]
  42130f:	adc    eax,0x41e139be
  421314:	inc    ebp
  421315:	jmp    0xd643:0x63d628e
  42131c:	pop    ds
  42131d:	xchg   edi,eax
  42131e:	xchg   esi,eax
  42131f:	sbb    BYTE PTR [ebx+0x4b],bl
  421322:	addr16 inc edi
  421324:	dec    esp
  421325:	dec    ebx
  421326:	jl     0x4213a7
  421328:	popf   
  421329:	and    esp,DWORD PTR [edx]
  42132b:	out    0xd3,al
  42132d:	(bad)  
  42132e:	jns    0x4212ea
  421330:	mov    ch,0x3a
  421332:	mul    DWORD PTR [esp+edx*1-0x3c]
  421336:	imul   esi,DWORD PTR [esi-0x43],0xffffff84
  42133a:	push   eax
  42133b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42133c:	lea    ebx,[esi+0x7f268f81]
  421342:	iret   
  421343:	mov    esp,0x3b46fbee
  421348:	xor    bh,BYTE PTR [esi+0x64]
  42134b:	mov    dl,0x8e
  42134d:	cld    
  42134e:	inc    esp
  42134f:	cwde   
  421350:	out    dx,eax
  421351:	jne    0x42139c
  421353:	sub    al,0xfc
  421355:	je     0x421333
  421357:	sub    eax,0x877dc5c2
  42135c:	scas   al,BYTE PTR es:[edi]
  42135d:	loope  0x4213a4
  42135f:	xor    dh,BYTE PTR [eax]
  421361:	lea    esi,[eax]
  421363:	sub    eax,0x3a67752b
  421368:	(bad)  
  421369:	(bad)  [esi]
  42136b:	dec    eax
  42136c:	jge    0x42136c
  42136e:	test   eax,0x6b88b848
  421373:	jmp    0x4212f9
  421375:	push   ss
  421376:	add    eax,0x6e6b9ace
  42137b:	aad    0x4c
  42137d:	je     0x4213ed
  42137f:	cmp    dh,BYTE PTR [ebx+0x11]
  421382:	popa   
  421383:	std    
  421384:	cli    
  421385:	(bad)  
  421386:	cdq    
  421387:	leave  
  421388:	inc    ebp
  421389:	sub    eax,0x3ef1a333
  42138e:	(bad)  
  42138f:	(bad)  
  421390:	int3   
  421391:	jge    0x42138b
  421393:	js     0x421398
  421395:	jae    0x421353
  421397:	lods   al,BYTE PTR ds:[esi]
  421398:	add    BYTE PTR [edi-0x80],dl
  42139b:	pop    esi
  42139c:	ja     0x421397
  42139e:	cwde   
  42139f:	mov    esi,0x5745b722
  4213a4:	pusha  
  4213a5:	mov    eax,0x220bf830
  4213aa:	or     esi,DWORD PTR [ebx+0x34]
  4213ad:	xchg   ebx,eax
  4213ae:	outs   dx,BYTE PTR ds:[esi]
  4213af:	or     BYTE PTR [ebp-0x6c917fae],0x15
  4213b6:	daa    
  4213b7:	mov    eax,ds:0x651accc1
  4213bc:	outs   dx,BYTE PTR ds:[esi]
  4213bd:	xor    eax,0xf9e7c00f
  4213c2:	aad    0xc9
  4213c4:	in     eax,0xf1
  4213c6:	fild   DWORD PTR [eax+0x743524f6]
  4213cc:	ja     0x421413
  4213ce:	xor    edi,DWORD PTR [ebx]
  4213d0:	dec    edx
  4213d1:	aas    
  4213d2:	mov    ds:0x2a49b30c,al
  4213d7:	add    DWORD PTR [ecx],ecx
  4213d9:	inc    ecx
  4213da:	cwde   
  4213db:	fdiv   QWORD PTR [ebx+0x4440ae62]
  4213e1:	stos   DWORD PTR es:[edi],eax
  4213e2:	mov    ah,BYTE PTR [ebx+0x77e8e4a2]
  4213e8:	mov    ebp,0x71ead456
  4213ed:	pushf  
  4213ee:	sbb    al,0x46
  4213f0:	push   ebp
  4213f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213f2:	in     eax,dx
  4213f3:	mov    ds,edx
  4213f5:	and    eax,0x68b3613a
  4213fa:	inc    eax
  4213fb:	shl    BYTE PTR [ebp-0x54c03aab],cl
  421401:	dec    eax
  421402:	mov    dh,0xce
  421404:	jo     0x4213a0
  421406:	lods   al,BYTE PTR ds:[esi]
  421407:	cmp    BYTE PTR [edi],ah
  421409:	xlat   BYTE PTR ds:[ebx]
  42140a:	arpl   WORD PTR [edx+0x68be2fd2],dx
  421410:	test   DWORD PTR gs:[ecx+edx*1-0x1cd4fc8],0xa05300e
  42141c:	xor    DWORD PTR [ecx+0x44001e78],edi
  421422:	and    eax,0x7e2c379b
  421427:	daa    
  421428:	mov    ?,WORD PTR [eax+0x4b]
  42142b:	jnp    0x4213f9
  42142d:	lods   al,BYTE PTR ds:[esi]
  42142e:	or     cl,BYTE PTR [edi]
  421430:	xor    ebp,DWORD PTR [edx]
  421432:	adc    al,0xb5
  421434:	jge    0x421444
  421436:	push   esp
  421437:	push   ds
  421438:	sti    
  421439:	imul   ebx,DWORD PTR [ecx],0x830b49fc
  42143f:	push   es
  421440:	sbb    DWORD PTR [eax-0x2390a16d],edx
  421446:	xchg   BYTE PTR [edx-0x52],bl
  421449:	xchg   ecx,eax
  42144a:	or     BYTE PTR [ebx],bl
  42144c:	sub    al,0x22
  42144e:	lods   eax,DWORD PTR ds:[esi]
  42144f:	mov    ds:0x7eb637d1,eax
  421454:	sbb    edx,edi
  421456:	mov    bh,0xfa
  421458:	fisttp WORD PTR [esi+ecx*4]
  42145b:	xchg   edx,eax
  42145c:	retf   
  42145d:	call   0xb5f3:0x2ee1315c
  421464:	inc    esp
  421465:	adc    eax,0x4b75d7bb
  42146a:	in     eax,dx
  42146b:	stc    
  42146c:	jno    0x421455
  42146e:	ret    0xf730
  421471:	aas    
  421472:	pop    ds
  421473:	lds    ebx,FWORD PTR [edx]
  421475:	or     al,0x87
  421477:	sbb    eax,0x51083402
  42147c:	inc    ecx
  42147d:	bound  ebx,QWORD PTR [ebx+0x352442e6]
  421483:	push   edx
  421484:	sub    al,0x87
  421486:	rol    BYTE PTR [edx],0x4f
  421489:	out    dx,eax
  42148a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42148b:	mov    esp,DWORD PTR [ecx+0x2c015049]
  421491:	out    dx,al
  421492:	es clc 
  421494:	outs   dx,DWORD PTR ds:[esi]
  421495:	mov    al,ds:0x5077b749
  42149a:	mov    cl,BYTE PTR [ebp+0x37014862]
  4214a0:	add    eax,0x9af722d4
  4214a5:	test   BYTE PTR [ebp-0x1a],cl
  4214a8:	and    BYTE PTR [esi],dl
  4214aa:	pushf  
  4214ab:	or     eax,0xa1facef8
  4214b0:	mov    ah,bh
  4214b2:	dec    esi
  4214b3:	test   eax,0xf73069f7
  4214b8:	loope  0x4214af
  4214ba:	lock lahf 
  4214bc:	outs   dx,BYTE PTR ds:[esi]
  4214bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214be:	call   0xf90fa411
  4214c3:	sbb    esp,DWORD PTR ds:0xa697292d
  4214c9:	loopne 0x421464
  4214cb:	lods   eax,DWORD PTR ds:[esi]
  4214cc:	int3   
  4214cd:	mov    ds:0x86,eax
	...
  4214da:	popf   
  4214db:	paddd  mm4,QWORD PTR [esi+edi*8-0x5bc0200b]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	popf   
  4214e7:	or     ecx,esp
  4214e9:	push   edi
  4214ea:	pause  
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	std    
  4214ef:	add    DWORD PTR [eax],eax
  4214f1:	add    BYTE PTR [ebx],ch
  4214f3:	jg     0x421536
  4214f5:	or     cl,BYTE PTR [ebp-0x41a7ca3d]
  4214fb:	adc    eax,DWORD PTR [esi-0x485f154]
  421501:	out    dx,al
  421502:	xor    eax,0xbf83332b
  421507:	mov    ebx,0x10db5b09
  42150c:	lahf   
  42150d:	frstor [edx-0x56]
  421510:	mov    DWORD PTR [ecx+0x3d],edx
  421513:	popa   
  421514:	adc    DWORD PTR [ebx],0xbe5a4888
  42151a:	mov    edi,0xc66e9cbd
  42151f:	jae    0x42150c
  421521:	fimul  WORD PTR [eax]
  421523:	jmp    0xe462:0xa1827e98
  42152a:	sbb    DWORD PTR [edi-0x2fe359de],0x43
  421531:	xchg   ebp,eax
  421532:	fs mov dl,0x9f
  421535:	into   
  421536:	aas    
  421537:	mov    esp,0x8ec644be
  42153c:	rol    ecx,cl
  42153e:	mov    cl,0x59
  421540:	es jo  0x421504
  421543:	pop    ecx
  421544:	mov    esi,ebp
  421546:	(bad)  
  421548:	sub    edi,edx
  42154a:	push   ss
  42154b:	sti    
  42154c:	icebp  
  42154d:	mov    ds:0x1c2cc1d5,eax
  421552:	jb     0x4215d3
  421554:	push   esi
  421555:	mov    ecx,0x7d6a0154
  42155a:	cmp    ecx,DWORD PTR [edi+0x2e]
  42155d:	inc    eax
  42155e:	and    DWORD PTR [ebp+0xa],edi
  421561:	push   0xffffffc4
  421563:	das    
  421564:	adc    eax,0xc2e2dbc5
  421569:	inc    ebx
  42156a:	dec    ebp
  42156b:	mov    dh,0xec
  42156d:	nop
  42156e:	add    BYTE PTR [ecx+ebx*1],dh
  421571:	repnz iret 
  421573:	and    ebx,esp
  421575:	cld    
  421576:	rcr    DWORD PTR [ecx-0x6b],cl
  421579:	aam    0xd8
  42157b:	rol    BYTE PTR [ebx+edx*8+0x27],cl
  42157f:	sbb    BYTE PTR [esi],0x24
  421582:	(bad)  
  421583:	cmp    BYTE PTR [ebx-0x1],cl
  421586:	xchg   esi,eax
  421587:	aad    0x82
  421589:	sti    
  42158a:	(bad)  
  42158c:	and    al,0x90
  42158e:	sub    al,0xcd
  421590:	cmp    esi,DWORD PTR [edi+0x13]
  421593:	jno    0x421522
  421595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421596:	mov    ds:0xa34657c3,eax
  42159b:	dec    ebx
  42159c:	mov    ecx,0x59829d6b
  4215a1:	mov    edx,0x68a32400
  4215a6:	bound  esi,QWORD PTR [edi-0x3fc1bc71]
  4215ac:	call   0x20df318e
  4215b1:	mov    bl,0xf7
  4215b3:	push   ebp
  4215b4:	fwait
  4215b5:	jae    0x4215db
  4215b7:	xchg   ebx,eax
  4215b8:	inc    edx
  4215b9:	inc    eax
  4215ba:	mov    bh,0xae
  4215bc:	push   edx
  4215bd:	lods   al,BYTE PTR ds:[esi]
  4215be:	leave  
  4215bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215c0:	ins    DWORD PTR es:[edi],dx
  4215c1:	test   DWORD PTR [eax+0x39e13e21],eax
  4215c7:	ss idiv DWORD PTR cs:[ebx+0x0]
  4215cc:	and    DWORD PTR [edi],edx
  4215ce:	inc    edx
  4215cf:	sub    al,ah
  4215d1:	in     eax,0xcc
  4215d3:	fisttp DWORD PTR [edi+0xd2709c]
  4215d9:	(bad)  
  4215db:	lahf   
  4215dc:	mov    dh,0x51
  4215de:	adc    eax,0xdff5698c
  4215e3:	(bad)  
  4215e4:	pop    esp
  4215e5:	repnz dec ebx
  4215e7:	mov    BYTE PTR [eax-0x3],cl
  4215ea:	push   es
  4215eb:	addr16 sahf 
  4215ed:	int    0xea
  4215ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215f0:	push   ds
  4215f1:	popa   
  4215f2:	aad    0xcc
  4215f4:	cmp    ecx,edi
  4215f6:	out    dx,eax
  4215f7:	cmp    DWORD PTR [esi+edx*4],esi
  4215fa:	out    0x30,al
  4215fc:	bound  edi,QWORD PTR [edx]
  4215fe:	jnp    0x42161b
  421600:	fldcw  WORD PTR [edx+0x550eb6d1]
  421606:	xchg   edi,eax
  421607:	mov    ebx,0xcb429b44
  42160c:	std    
  42160d:	push   es
  42160e:	mov    bl,0x9c
  421610:	mov    bh,0x2
  421612:	jbe    0x4215b4
  421614:	repz jno 0x421638
  421617:	arpl   WORD PTR [ebp+0x50],bx
  42161a:	shl    ch,1
  42161c:	sub    eax,esi
  42161e:	cmp    eax,0x2dc7dd83
  421623:	cmp    DWORD PTR [esi],eax
  421625:	dec    edi
  421626:	outs   dx,BYTE PTR ds:[esi]
  421627:	xchg   esi,eax
  421628:	push   edx
  421629:	jnp    0x4215d0
  42162b:	inc    eax
  42162c:	push   es
  42162d:	dec    edi
  42162e:	ret    
  42162f:	cmp    al,0xed
  421631:	add    al,0x1c
  421633:	jp     0x4215fe
  421635:	jb     0x42166e
  421637:	push   es
  421638:	lock fdivr DWORD PTR [eax-0x2c6e9c7b]
  42163f:	push   eax
  421640:	adc    al,0x81
  421642:	jne    0x421619
  421644:	pop    ss
  421645:	add    edx,DWORD PTR [eax+0x6c]
  421648:	add    eax,DWORD PTR [esi]
  42164a:	or     cl,dh
  42164c:	popa   
  42164d:	xlat   BYTE PTR ds:[ebx]
  42164e:	rcl    DWORD PTR [edi-0x660b4d11],1
  421654:	push   ecx
  421655:	add    DWORD PTR [eax+0x782a9e42],esi
  42165b:	stos   DWORD PTR es:[edi],eax
  42165c:	aad    0xa4
  42165e:	out    dx,eax
  42165f:	les    edx,FWORD PTR [eax-0x79]
  421662:	test   ah,bl
  421664:	push   edi
  421665:	sub    al,0xd0
  421667:	and    dh,BYTE PTR [edx*1-0x3478866a]
  42166e:	mov    esi,0x41ff02f9
  421673:	mov    ds:0xf5e2987b,eax
  421678:	cmc    
  421679:	into   
  42167a:	ficomp WORD PTR [esi+ecx*4+0x58be71e1]
  421681:	mov    dl,0x9e
  421683:	imul   ebx,DWORD PTR [ebp+0x11a934df],0xffffffbb
  42168a:	mov    bl,0xeb
  42168c:	add    ch,al
  42168e:	sahf   
  42168f:	in     al,dx
  421690:	cmc    
  421691:	stos   BYTE PTR es:[edi],al
  421692:	(bad)  
  421693:	cmp    eax,0x47abafc8
  421698:	fild   QWORD PTR [eax]
  42169a:	push   ebp
  42169b:	xchg   esp,eax
  42169c:	jns    0x421642
  42169e:	mov    al,ds:0x8e9d325f
  4216a3:	stc    
  4216a4:	push   edx
  4216a5:	xchg   BYTE PTR [edi+eiz*8-0x6df94148],ch
  4216ac:	or     dh,BYTE PTR [eax]
  4216ae:	pop    ebx
  4216af:	adc    BYTE PTR [ebp+0x2d],bh
  4216b2:	adc    DWORD PTR [edi+0x5b37d32],ebx
  4216b8:	int    0x57
  4216ba:	pop    edx
  4216bb:	add    al,0x2e
  4216bd:	xor    al,0x75
  4216bf:	retf   
  4216c0:	inc    esi
  4216c1:	out    0x31,eax
  4216c3:	ror    BYTE PTR [ebp+0x15a65bb4],cl
  4216c9:	or     eax,0x647f3f5b
  4216ce:	sbb    al,0x71
  4216d0:	test   DWORD PTR [ebp+0x3d],eax
  4216d3:	xchg   esi,eax
  4216d4:	fidivr DWORD PTR [eax*1-0x406b65a0]
  4216db:	sbb    al,0x3e
  4216dd:	fldenv [edx-0x307f579]
  4216e3:	jl     0x421710
  4216e5:	xchg   ecx,eax
  4216e6:	fst    QWORD PTR [eax+0x52915941]
  4216ec:	push   ds
  4216ed:	sbb    edx,esp
	...
  4216f7:	add    BYTE PTR [eax],al
  4216f9:	add    BYTE PTR [eax],ah
  4216fb:	push   ss
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	div    BYTE PTR [esp+ebp*2-0x2c]
  421709:	popf   
  42170a:	lock xchg edx,eax
  42170c:	add    DWORD PTR [eax],eax
  42170e:	std    
  42170f:	add    DWORD PTR [eax],eax
  421711:	add    BYTE PTR [ecx+edi*2-0x690168f7],bl
  421718:	sub    eax,0xc7fbdd15
  42171d:	pop    edx
  42171e:	int3   
  42171f:	mov    ah,al
  421721:	and    ch,BYTE PTR [edi+ecx*1-0x6d114663]
  421728:	push   esi
  421729:	or     esp,DWORD PTR [eax]
  42172b:	cmp    eax,0x8a50314f
  421730:	pinsrw mm3,esp,0x88
  421734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421735:	mov    edx,DWORD PTR [edx]
  421737:	and    al,0xa6
  421739:	lods   eax,DWORD PTR ds:[esi]
  42173a:	(bad)  
  42173b:	enter  0x7748,0x3f
  42173f:	jno    0x4217af
  421741:	daa    
  421742:	stc    
  421743:	push   ecx
  421744:	retf   
  421745:	xchg   BYTE PTR [esi],dl
  421747:	daa    
  421748:	push   esi
  421749:	sub    al,0x5d
  42174b:	mov    eax,ds:0xd35ff463
  421750:	test   BYTE PTR [esi+0x1a],cl
  421753:	pushf  
  421754:	jae    0x421770
  421756:	adc    BYTE PTR [ebx+0x36b1668e],ch
  42175c:	sub    eax,0xd20f7a53
  421761:	cmp    BYTE PTR [edx+0x61067d73],dl
  421767:	dec    ebx
  421768:	not    BYTE PTR ss:[edx+0x3e4fcb5f]
  42176f:	mov    ch,BYTE PTR [ebp-0x1a]
  421772:	ror    BYTE PTR [edi+0x74a07d92],cl
  421778:	xor    al,0x5a
  42177a:	sbb    esi,DWORD PTR [eax-0xb229618]
  421780:	xor    eax,esi
  421782:	call   FWORD PTR [edi]
  421784:	cli    
  421785:	jb     0x4217d4
  421787:	lahf   
  421788:	inc    esi
  421789:	and    al,0xb6
  42178b:	sbb    ch,ch
  42178d:	push   ds
  42178e:	jmp    0x4217e3
  421790:	scas   eax,DWORD PTR es:[edi]
  421791:	shr    BYTE PTR [esi],0x9
  421794:	or     BYTE PTR [esp+edi*4+0x5e],0x7
  421799:	(bad)  
  42179a:	(bad)  
  42179c:	pusha  
  42179d:	dec    ecx
  42179e:	adc    BYTE PTR [ebx+ebx*4-0x3a235662],al
  4217a5:	ins    BYTE PTR es:[edi],dx
  4217a6:	leave  
  4217a7:	ret    0x19ad
  4217aa:	xor    BYTE PTR [ecx-0x55],dl
  4217ad:	xor    esp,DWORD PTR [ecx+0x1e4cc547]
  4217b3:	iret   
  4217b4:	fwait
  4217b5:	mov    dh,0xb2
  4217b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217b8:	sbb    BYTE PTR [ebx-0x3e],0x8c
  4217bc:	ficom  WORD PTR [esi+0x63185507]
  4217c2:	pop    edi
  4217c3:	in     al,dx
  4217c4:	loopne 0x421749
  4217c6:	or     BYTE PTR [ebx],bh
  4217c8:	or     dl,BYTE PTR [edx]
  4217ca:	inc    esi
  4217cb:	retf   0x5ae3
  4217ce:	add    DWORD PTR [ebp+0x7f],ebp
  4217d1:	sub    esi,ebp
  4217d3:	push   cs
  4217d4:	dec    edi
  4217d5:	sbb    eax,0x6e480d37
  4217da:	imul   ebp,edx,0xffffff8d
  4217dd:	inc    edx
  4217de:	popf   
  4217df:	cwde   
  4217e0:	retf   0xd286
  4217e3:	and    eax,0x8196f54d
  4217e8:	fdivp  st(2),st
  4217ea:	outs   dx,BYTE PTR ds:[esi]
  4217eb:	clc    
  4217ec:	mov    cl,0xbe
  4217ee:	fstp   TBYTE PTR [esi+0x76]
  4217f1:	test   eax,0x3e8ed12a
  4217f6:	or     al,0xcb
  4217f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217f9:	loop   0x4217b5
  4217fb:	cmc    
  4217fc:	aam    0x19
  4217fe:	cwde   
  4217ff:	std    
  421800:	mov    dh,0x42
  421802:	sbb    eax,0xbf0841a
  421807:	push   0xae49afce
  42180c:	dec    ebx
  42180d:	or     esp,DWORD PTR [ebx+0x52]
  421810:	les    edx,FWORD PTR [edx]
  421812:	es int 0xd
  421815:	repnz test DWORD PTR [eax-0x2b],0x220f9dec
  42181d:	ss (bad) 
  42181f:	jne    0x421840
  421821:	xchg   ecx,eax
  421822:	data16 sti 
  421824:	mov    bl,0x4b
  421826:	mov    ds:0x56483922,al
  42182b:	pop    ss
  42182c:	cmp    DWORD PTR [edx-0x75],edi
  42182f:	mov    DWORD PTR [eax+0x4186e262],esi
  421835:	rol    BYTE PTR [edi+ecx*2],cl
  421838:	(bad)  
  421839:	ds and esi,0xfffffff6
  42183d:	sbb    DWORD PTR ds:0xb095cc76,esp
  421843:	imul   ebp,DWORD PTR [ebx-0x59eec77d],0xffffffe8
  42184a:	sub    bl,al
  42184c:	dec    esp
  42184d:	repz in eax,dx
  42184f:	(bad)  
  421850:	mov    ch,0x9a
  421852:	(bad)  
  421853:	test   eax,0xead5ee5
  421858:	sub    BYTE PTR [edi+0x811cd1a],0xa8
  42185f:	fbld   TBYTE PTR [ebx-0x73]
  421862:	outs   dx,DWORD PTR ds:[esi]
  421863:	push   ebx
  421864:	or     DWORD PTR [edx+0x4c14f84],ecx
  42186a:	add    DWORD PTR [edi-0x49],0xffffffcb
  42186e:	xchg   esi,eax
  42186f:	jmp    0x813c:0xfe29b0f1
  421876:	aad    0xe1
  421878:	xchg   edx,eax
  421879:	pop    edx
  42187a:	fstp   QWORD PTR [edi]
  42187c:	sub    eax,DWORD PTR [esi+0x27]
  42187f:	and    BYTE PTR [edx-0x74ba338],ah
  421885:	adc    al,0x46
  421887:	jl     0x4218f1
  421889:	add    eax,0x657fa559
  42188e:	daa    
  42188f:	popw   es
  421891:	mov    eax,0x15f54343
  421896:	pop    ss
  421897:	aas    
  421898:	add    bl,0xc4
  42189b:	repnz add esi,DWORD PTR [eax]
  42189e:	dec    edx
  42189f:	cmc    
  4218a0:	xchg   edi,eax
  4218a1:	nop
  4218a2:	bound  ebx,QWORD PTR [ebx-0xd100a42]
  4218a8:	fst    QWORD PTR [ecx]
  4218aa:	xor    BYTE PTR [ebx-0x15],al
  4218ad:	lock mov eax,ebp
  4218b0:	xor    eax,0xc3d06e1e
  4218b5:	mov    DWORD PTR [eax-0x57],ebp
  4218b8:	shl    esp,cl
  4218ba:	mov    dh,0x2f
  4218bc:	mov    DWORD PTR [ecx-0x2b],ecx
  4218bf:	test   BYTE PTR [ecx],0x8
  4218c2:	stc    
  4218c3:	ins    DWORD PTR es:[edi],dx
  4218c4:	sbb    edi,DWORD PTR ds:0x5b67eda0
  4218ca:	call   0x625c2df9
  4218cf:	imul   eax,DWORD PTR [ecx+0x3c],0xffffff9f
  4218d3:	popf   
  4218d4:	push   cs
  4218d5:	int3   
  4218d6:	aas    
  4218d7:	and    DWORD PTR [edi],ecx
  4218d9:	cmp    BYTE PTR [edi+0x58dc48df],bh
  4218df:	xchg   ebp,eax
  4218e0:	adc    DWORD PTR [ebp-0x43eb9805],ebx
  4218e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218e7:	fst    DWORD PTR [eax+ecx*4-0x66]
  4218eb:	pop    edi
  4218ec:	and    al,0x92
  4218ee:	mov    ah,0xc1
  4218f0:	into   
  4218f1:	xchg   ecx,eax
  4218f2:	ja     0x4218ff
  4218f4:	push   ebx
  4218f5:	cwde   
  4218f6:	or     edi,DWORD PTR [esi-0x69]
  4218f9:	mov    BYTE PTR [eax],0x49
  4218fc:	int    0x3e
  4218fe:	(bad)  
  4218ff:	rcl    bh,1
  421901:	imul   esi,DWORD PTR ds:[ebx-0x18],0xffffffb2
  421906:	jno    0x4218f2
  421908:	xchg   DWORD PTR [eax],ecx
  42190a:	loop   0x421975
  42190c:	mov    bh,BYTE PTR [eax-0x51]
	...
  421917:	add    BYTE PTR [eax],al
  421919:	add    BYTE PTR [eax-0x4456c5cd],dh
  42191f:	test   eax,0x428f3bb3
  421924:	mov    esp,0x9e8f818a
  421929:	ins    DWORD PTR es:[edi],dx
  42192a:	in     eax,dx
  42192b:	xchg   esp,eax
  42192c:	add    DWORD PTR [eax],eax
  42192e:	std    
  42192f:	add    DWORD PTR [eax],eax
  421931:	add    BYTE PTR [ebx+ebp*1],dl
  421934:	repnz mov eax,ds:0xa85847d1
  42193a:	mov    ds:0xe559ae57,eax
  42193f:	and    ecx,DWORD PTR [ebx+0x2e5fa9a7]
  421945:	or     BYTE PTR [ebx+0x7ab737cf],0xc3
  42194c:	or     BYTE PTR [ecx],dh
  42194e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42194f:	mov    DWORD PTR [edx+0x8],ebx
  421952:	popa   
  421953:	mov    BYTE PTR [edi],bl
  421955:	mov    bl,0xdd
  421957:	lock ins DWORD PTR es:[edi],dx
  421959:	mov    fs,esp
  42195b:	fld    TBYTE PTR [esi+0x55]
  42195e:	cdq    
  42195f:	mov    DWORD PTR [edi+edi*2],eax
  421962:	out    0x86,al
  421964:	xchg   DWORD PTR [edx],eax
  421966:	scas   al,BYTE PTR es:[edi]
  421967:	(bad)  
  421968:	clc    
  421969:	sub    DWORD PTR [ebx-0x40],edx
  42196c:	add    cl,ch
  42196e:	test   eax,0xb62066a4
  421973:	jle    0x421915
  421975:	jp     0x4219c9
  421977:	in     eax,0x9f
  421979:	loope  0x42191e
  42197b:	xchg   esi,eax
  42197c:	adc    esi,0x26
  42197f:	mov    al,0x67
  421981:	in     eax,0x86
  421983:	add    DWORD PTR [edi-0x59821e82],esp
  421989:	outs   dx,BYTE PTR ds:[esi]
  42198a:	jo     0x4219fc
  42198c:	jle    0x4219fa
  42198e:	mov    bl,0x7b
  421990:	xchg   BYTE PTR [ecx+edx*4],bl
  421993:	pop    ss
  421994:	dec    edx
  421995:	lods   eax,DWORD PTR ds:[esi]
  421996:	rcl    BYTE PTR [esi],0x79
  421999:	sbb    al,0x5c
  42199b:	dec    ebp
  42199c:	aaa    
  42199d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42199e:	in     eax,0x8
  4219a0:	dec    ebx
  4219a1:	xlat   BYTE PTR ds:[ebx]
  4219a2:	std    
  4219a3:	mov    ch,BYTE PTR [esi+ebp*2]
  4219a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219a7:	push   ss
  4219a8:	jle    0x421947
  4219aa:	std    
  4219ab:	test   BYTE PTR [edx-0x7a825efe],cl
  4219b1:	xchg   di,ax
  4219b3:	sbb    BYTE PTR [edx+ebx*1-0x49c79377],bh
  4219ba:	stos   DWORD PTR es:[edi],eax
  4219bb:	dec    esi
  4219bc:	arpl   WORD PTR [esi-0x3b],bp
  4219bf:	mov    edi,DWORD PTR [edi]
  4219c1:	push   0xcac089
  4219c6:	gs mov ebx,0xc763044e
  4219cc:	test   al,0x93
  4219ce:	imul   esi,DWORD PTR [ecx-0x1b],0xcb2f7770
  4219d5:	add    bh,bh
  4219d7:	repnz dec esi
  4219d9:	rol    BYTE PTR [ebx],0xc8
  4219dc:	xchg   edx,eax
  4219dd:	loope  0x421a03
  4219df:	retf   0x99d
  4219e2:	or     BYTE PTR [ebx+eax*8-0x38],dl
  4219e6:	mov    dh,0x6d
  4219e8:	add    ecx,DWORD PTR ds:0x594c8859
  4219ee:	aaa    
  4219ef:	lods   al,BYTE PTR ds:[esi]
  4219f0:	xchg   ebx,eax
  4219f1:	xor    ecx,DWORD PTR [edi-0x2fa9d1f0]
  4219f7:	dec    ebx
  4219f8:	ret    
  4219f9:	(bad)  
  4219fa:	leave  
  4219fb:	mov    eax,DWORD PTR [eax-0x42]
  4219fe:	fbld   TBYTE PTR [ebx-0x4d]
  421a01:	xor    al,0x37
  421a03:	and    ebp,DWORD PTR [eax+0x56]
  421a06:	faddp  st(6),st
  421a08:	mov    ebx,0x64af9916
  421a0d:	es repz in eax,0xd8
  421a11:	sub    eax,0x3c1a4348
  421a16:	gs push edx
  421a18:	or     edi,ebp
  421a1a:	mov    ds:0x9e04959a,al
  421a1f:	adc    al,0x33
  421a21:	mov    BYTE PTR [ecx+0x59175da4],0x79
  421a28:	sub    ah,BYTE PTR [ebp-0x6ffa0ab7]
  421a2e:	fsubr  QWORD PTR [ebp-0x67]
  421a32:	shr    dl,cl
  421a34:	test   BYTE PTR ds:0x2882a8f1,cl
  421a3a:	or     eax,0xd2dfed0b
  421a3f:	lahf   
  421a40:	mov    bh,0x18
  421a42:	cld    
  421a43:	cli    
  421a44:	inc    edi
  421a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a46:	jmp    0x421a62
  421a48:	adc    DWORD PTR [eax-0x9a05aeb],ebp
  421a4e:	ins    DWORD PTR es:[edi],dx
  421a4f:	test   DWORD PTR [ebp-0x5f5453a8],0xc7ad8f02
  421a59:	cmc    
  421a5a:	pop    ds
  421a5b:	mov    ebp,esp
  421a5d:	dec    edi
  421a5e:	jno    0x421ac4
  421a60:	retf   0xead7
  421a63:	outs   dx,DWORD PTR ds:[esi]
  421a64:	shr    DWORD PTR [ebx+0x1a0c15c9],1
  421a6a:	mov    edi,ecx
  421a6c:	retf   
  421a6d:	sub    eax,0x1be6feff
  421a72:	mov    WORD PTR [edi-0x31a812b5],?
  421a78:	cmp    al,dl
  421a7a:	push   cs
  421a7b:	and    esp,DWORD PTR [edi+eiz*4+0x5bef095c]
  421a82:	mov    ds:0xaa25ca0e,al
  421a87:	pop    edi
  421a88:	jns    0x421ab5
  421a8a:	jg     0x421ac0
  421a8c:	mov    ah,0xb2
  421a8e:	pop    ebp
  421a8f:	inc    ecx
  421a90:	(bad)  
  421a91:	hlt    
  421a92:	xor    al,0x21
  421a94:	addr16 mov edx,0x3dbf345
  421a9a:	xlat   BYTE PTR ds:[ebx]
  421a9b:	gs xchg edi,eax
  421a9d:	jmp    0x421a6f
  421a9f:	mov    al,0x9d
  421aa1:	dec    edx
  421aa2:	mov    edi,0x9e8b2d2b
  421aa7:	shl    BYTE PTR [ebx],1
  421aa9:	add    DWORD PTR [ebp+edi*1+0x30],eax
  421aad:	pushf  
  421aae:	push   esi
  421aaf:	jmp    0xf2c82419
  421ab4:	mov    edx,0x29647aec
  421ab9:	or     al,0x92
  421abb:	jge    0x421b20
  421abd:	push   0xf4995f59
  421ac2:	xor    eax,0x9a7de3d
  421ac7:	rol    DWORD PTR [ecx+0x5b],cl
  421aca:	sub    DWORD PTR [edx+0x54],edx
  421acd:	std    
  421ace:	pop    eax
  421acf:	jae    0x421ab6
  421ad1:	pop    edx
  421ad2:	inc    ecx
  421ad3:	mov    esi,0x26f94e49
  421ad8:	dec    eax
  421ad9:	sti    
  421ada:	out    dx,eax
  421adb:	shr    ebp,0x92
  421ade:	daa    
  421adf:	jge    0x421b5c
  421ae1:	jns    0x421b52
  421ae3:	retf   0x65ff
  421ae6:	repnz adc bh,dh
  421ae9:	fcomp  DWORD PTR [eax]
  421aeb:	inc    edi
  421aec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aed:	dec    ebx
  421aee:	int    0x5f
  421af0:	dec    ecx
  421af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421af2:	sbb    DWORD PTR [esi+0x5f],eax
  421af5:	jno    0x421ab7
  421af7:	cli    
  421af8:	repz inc esp
  421afa:	mov    cl,0xa
  421afc:	hlt    
  421afd:	data16 scas al,BYTE PTR es:[edi]
  421aff:	pop    esi
  421b00:	sub    eax,0xc8b07ca7
  421b05:	fcmovb st,st(2)
  421b07:	data16 sbb cl,BYTE PTR ds:0x2524b260
  421b0e:	or     dl,BYTE PTR [ebp+0xb]
  421b11:	call   DWORD PTR [eax+0x7a144539]
  421b17:	scas   eax,DWORD PTR es:[edi]
  421b18:	and    BYTE PTR [esi-0x41],bl
  421b1b:	adc    al,0x61
  421b1d:	cwde   
  421b1e:	sbb    eax,DWORD PTR [edi-0x2d3081bd]
  421b24:	lds    edx,FWORD PTR [esi+0x37]
  421b27:	sti    
  421b28:	loopne 0x421b35
  421b2a:	xlat   BYTE PTR ds:[ebx]
  421b2b:	das    
  421b2c:	dec    ebp
  421b2d:	pushf  
  421b2e:	data16 add BYTE PTR [eax],al
	...
  421b39:	add    BYTE PTR [ecx-0x6b36a2],ch
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0x2c08f8f7
  421b48:	jmp    0xfd00:0x196eab4
  421b4f:	add    DWORD PTR [eax],eax
  421b51:	add    BYTE PTR [esi+0x792cbe5b],cl
  421b57:	scas   eax,DWORD PTR es:[edi]
  421b58:	es inc ebx
  421b5a:	arpl   bx,bx
  421b5c:	nop
  421b5d:	xchg   edx,eax
  421b5e:	push   eax
  421b5f:	inc    ecx
  421b60:	ins    BYTE PTR es:[edi],dx
  421b61:	js     0x421afe
  421b63:	pushf  
  421b64:	test   eax,0x92e0e1a4
  421b69:	or     ebp,DWORD PTR [ebx]
  421b6b:	ja     0x421b0e
  421b6d:	cdq    
  421b6e:	add    al,0x37
  421b70:	inc    ebx
  421b71:	mov    edi,0x2bd915b4
  421b76:	lods   eax,DWORD PTR ds:[esi]
  421b77:	ret    0x267a
  421b7a:	mov    al,0xd4
  421b7c:	fwait
  421b7d:	in     al,dx
  421b7e:	jae    0x421be3
  421b80:	icebp  
  421b81:	mov    cl,0x3c
  421b83:	pop    edx
  421b84:	fld    DWORD PTR [eax]
  421b86:	js     0x421b3d
  421b88:	idiv   DWORD PTR [esi+0x25]
  421b8b:	jmp    0x421bea
  421b8d:	mov    ecx,0xb02501db
  421b92:	adc    eax,0xa59efd3
  421b97:	sbb    BYTE PTR [esi],0x2
  421b9a:	in     eax,0x43
  421b9c:	jns    0x421b79
  421b9e:	push   ds
  421b9f:	mov    dh,0x4a
  421ba1:	ins    DWORD PTR es:[edi],dx
  421ba2:	jno    0x421bbc
  421ba4:	out    dx,al
  421ba5:	jne    0x421c09
  421ba7:	jbe    0x421ba3
  421ba9:	push   esi
  421baa:	adc    eax,0x9d6778c6
  421baf:	xchg   edx,eax
  421bb0:	add    ch,BYTE PTR [esi]
  421bb2:	push   0xffffffb1
  421bb4:	pop    eax
  421bb5:	(bad)  
  421bb6:	into   
  421bb7:	fbld   TBYTE PTR [esi+0x79]
  421bba:	in     eax,0x7b
  421bbc:	mov    bh,0x50
  421bbe:	icebp  
  421bbf:	mov    DWORD PTR ds:0x11bf70d7,ebp
  421bc5:	das    
  421bc6:	aas    
  421bc7:	arpl   WORD PTR [eax],bx
  421bc9:	retf   0xadcd
  421bcc:	adc    eax,0x1f20acae
  421bd1:	aad    0x38
  421bd3:	sbb    eax,0x7b3a830
  421bd8:	xchg   ecx,eax
  421bd9:	(bad)  
  421bda:	push   0xffffffcb
  421bdc:	mov    ebx,0x9efb5d8e
  421be1:	add    al,0xce
  421be3:	ds loope 0x421c06
  421be6:	inc    ebp
  421be7:	xor    DWORD PTR [esi],esp
  421be9:	daa    
  421bea:	je     0x421c11
  421bec:	push   0x68
  421bee:	imul   ebp,DWORD PTR ds:0xad7d2f4f,0x4cb85ef7
  421bf8:	add    esp,DWORD PTR [ebp-0x6e]
  421bfb:	mov    dl,0x3f
  421bfd:	cld    
  421bfe:	sbb    BYTE PTR [esi-0x7d],bl
  421c01:	icebp  
  421c02:	sub    eax,0x503c86d7
  421c07:	add    eax,0xe451d74e
  421c0c:	pop    ebx
  421c0d:	cdq    
  421c0e:	(bad)  
  421c0f:	push   ebp
  421c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c11:	sti    
  421c12:	clc    
  421c13:	jl     0x421c17
  421c15:	mov    ecx,0x95e49836
  421c1a:	mov    gs,WORD PTR [edi+0x35cbf374]
  421c20:	aas    
  421c21:	(bad)  
  421c22:	std    
  421c23:	mov    esp,0x476621e8
  421c28:	xchg   esi,eax
  421c29:	or     DWORD PTR [eax],ecx
  421c2b:	lds    ebp,FWORD PTR [eax+0x1d]
  421c2e:	(bad)  
  421c2f:	adc    edi,edi
  421c31:	les    eax,FWORD PTR [edi-0x6f6e24e]
  421c37:	mov    cl,0xfc
  421c39:	das    
  421c3a:	jmp    esp
  421c3c:	lods   al,BYTE PTR ds:[esi]
  421c3d:	and    eax,DWORD PTR [edx+0x10]
  421c40:	mov    esi,0x8b734f4a
  421c45:	das    
  421c46:	sbb    dl,BYTE PTR [edx]
  421c48:	push   ebp
  421c49:	dec    ecx
  421c4a:	add    eax,0x35271d70
  421c4f:	and    al,BYTE PTR [edx-0x56cdd7d3]
  421c55:	sbb    dh,BYTE PTR [esp+ebx*2]
  421c58:	or     DWORD PTR ds:0x7207a483,eax
  421c5e:	(bad)  
  421c5f:	xchg   ecx,eax
  421c60:	in     eax,0x95
  421c62:	or     al,0x3e
  421c64:	inc    ecx
  421c65:	out    0x52,eax
  421c67:	dec    esp
  421c68:	sbb    DWORD PTR [ebx],esi
  421c6a:	nop
  421c6b:	sahf   
  421c6c:	outs   dx,BYTE PTR ds:[esi]
  421c6d:	mov    ah,0xf3
  421c6f:	cmp    bh,ah
  421c71:	and    ebp,edi
  421c73:	push   ebx
  421c74:	cmp    BYTE PTR [esp+edx*2],al
  421c77:	ins    DWORD PTR es:[edi],dx
  421c78:	cdq    
  421c79:	sub    al,0xb2
  421c7b:	xor    BYTE PTR [edi],al
  421c7d:	rol    ecx,cl
  421c7f:	mov    dl,0x38
  421c81:	test   BYTE PTR [edi-0x3c300726],bl
  421c87:	mov    eax,ds:0xa80dccb2
  421c8c:	jae    0x421cc5
  421c8e:	pop    eax
  421c8f:	xor    dl,cl
  421c91:	add    BYTE PTR [ecx+ebp*8-0xdfaf735],ah
  421c98:	fwait
  421c99:	aas    
  421c9a:	jb     0x421ccc
  421c9c:	shr    dh,0x44
  421c9f:	fcom   QWORD PTR [edx]
  421ca1:	push   es
  421ca2:	push   ebp
  421ca3:	imul   ecx,DWORD PTR [ebp-0x6cc5be06],0x93adc17
  421cad:	jge    0x421d0e
  421caf:	aad    0xa5
  421cb1:	xor    bl,ah
  421cb3:	clc    
  421cb4:	xor    eax,0x7e950dbc
  421cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cba:	repnz xchg dl,dh
  421cbd:	mov    ecx,DWORD PTR [ebx+0x3e30df67]
  421cc3:	xchg   ebp,eax
  421cc4:	push   0x9e82762b
  421cc9:	stos   BYTE PTR es:[edi],al
  421cca:	aas    
  421ccb:	and    ah,cl
  421ccd:	mov    al,ds:0x1fdc7181
  421cd2:	sbb    BYTE PTR [eax+0xbbc1706],ch
  421cd8:	test   eax,0x1c317925
  421cdd:	jae    0x421d50
  421cdf:	shl    BYTE PTR [esp+eax*1],1
  421ce2:	sti    
  421ce3:	ss inc ecx
  421ce5:	pushf  
  421ce6:	sub    eax,0x9a2bf9f7
  421ceb:	fstp   DWORD PTR [ecx+0x29fe8710]
  421cf1:	xchg   ebx,eax
  421cf2:	dec    edi
  421cf3:	adc    al,0x44
  421cf5:	add    BYTE PTR [ebx+eiz*4+0x54],bh
  421cf9:	out    dx,eax
  421cfa:	xor    BYTE PTR [ebx+0x2],bh
  421cfd:	not    ebp
  421cff:	sar    DWORD PTR [eax],0x8c
  421d02:	mov    ebx,0xf70b6d14
  421d07:	xor    edi,esi
  421d09:	sub    eax,0x3f4e307
  421d0e:	fild   WORD PTR [edx]
  421d10:	outs   dx,BYTE PTR ds:[esi]
  421d11:	adc    BYTE PTR [ecx],dl
  421d13:	adc    ah,BYTE PTR [esi+ebx*4]
  421d16:	dec    ebx
  421d17:	push   ebp
  421d18:	rcr    edx,cl
  421d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d1b:	push   ecx
  421d1c:	jle    0x421d28
  421d1e:	jmp    0xe69017d7
  421d23:	adc    eax,0x37e7c06f
  421d28:	mov    cs,WORD PTR [edi+ebx*2]
  421d2b:	loopne 0x421d13
  421d2d:	(bad)  
  421d2f:	out    0x2b,al
  421d31:	in     eax,dx
  421d32:	pusha  
  421d33:	jmp    0xb472:0x40b56358
  421d3a:	(bad)  
  421d3b:	jbe    0x421cd8
  421d3d:	popf   
  421d3e:	mov    eax,ds:0x9d1291b
  421d43:	cmp    edi,ebx
  421d45:	pop    ss
  421d46:	stos   BYTE PTR es:[edi],al
  421d47:	inc    edx
  421d48:	ins    BYTE PTR es:[edi],dx
  421d49:	xor    DWORD PTR [ecx],0xffffffdb
  421d4c:	dec    esi
  421d4d:	mov    esp,0x6c
	...
  421d5a:	mov    ebx,0x7d7539cf
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	sbb    al,0xe1
  421d68:	fcom   DWORD PTR [ecx]
  421d6a:	out    0x98,eax
  421d6c:	add    DWORD PTR [eax],eax
  421d6e:	std    
  421d6f:	add    DWORD PTR [eax],eax
  421d71:	add    BYTE PTR [ebx-0x4f],dh
  421d74:	pop    ecx
  421d75:	test   al,0x9e
  421d77:	test   BYTE PTR [edx],ah
  421d79:	aad    0x18
  421d7b:	xchg   ebx,eax
  421d7c:	jne    0x421d48
  421d7e:	pop    ebp
  421d7f:	dec    esi
  421d80:	bound  ebx,QWORD PTR [edx+ebx*8]
  421d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d84:	fldenvw [ebx-0x8]
  421d88:	pop    ds
  421d89:	and    BYTE PTR [edi+0x5a],ch
  421d8c:	das    
  421d8d:	fs jo  0x421dc6
  421d90:	mov    cl,0x17
  421d92:	loopne 0x421e09
  421d94:	pop    ss
  421d95:	mov    bh,0x37
  421d97:	ror    al,1
  421d99:	mov    ecx,0x5731a8bd
  421d9e:	add    bl,BYTE PTR [ecx-0x50]
  421da1:	sbb    ah,cl
  421da3:	jnp    0x421d4d
  421da5:	mov    ebx,0x12b451a8
  421daa:	fs mov ah,0x49
  421dad:	xor    bl,dl
  421daf:	hlt    
  421db0:	cli    
  421db1:	(bad)  
  421db2:	lds    esp,FWORD PTR [edi]
  421db4:	sahf   
  421db5:	nop
  421db6:	iret   
  421db7:	js     0x421d49
  421db9:	push   0x59
  421dbb:	pop    esi
  421dbc:	sub    BYTE PTR [esi],ah
  421dbe:	test   BYTE PTR [ebp+0x32],cl
  421dc1:	jno    0x421d62
  421dc3:	mov    eax,DWORD PTR [ecx+0x1adde6f0]
  421dc9:	out    0x47,al
  421dcb:	in     eax,dx
  421dcc:	ret    
  421dcd:	lods   al,BYTE PTR ds:[esi]
  421dce:	pop    edi
  421dcf:	lods   eax,DWORD PTR ds:[esi]
  421dd0:	push   esp
  421dd1:	xor    al,BYTE PTR [ecx+0x6836c6f2]
  421dd7:	cmp    DWORD PTR [edi],ebx
  421dd9:	pop    ebx
  421dda:	pop    eax
  421ddb:	pop    ebp
  421ddc:	fisub  WORD PTR [edi]
  421dde:	mov    ch,0x96
  421de0:	adc    ebp,edx
  421de2:	in     eax,0xa2
  421de4:	mov    bl,0x48
  421de6:	sti    
  421de7:	mov    bh,BYTE PTR [edx+0x17f8d6fd]
  421ded:	daa    
  421dee:	mov    al,0xb4
  421df0:	jmp    0x2f51:0x37950f5d
  421df7:	push   ds
  421df8:	repnz xchg edi,eax
  421dfa:	test   eax,0xa9747b50
  421dff:	add    BYTE PTR [edi],ah
  421e01:	neg    ch
  421e03:	and    DWORD PTR [edi+ebx*2-0x64],0xb4623d78
  421e0b:	cmp    DWORD PTR [ebp-0x6c],ecx
  421e0e:	enter  0x875e,0xa4
  421e12:	outs   dx,DWORD PTR ds:[esi]
  421e13:	xchg   ecx,eax
  421e14:	jbe    0x421de7
  421e16:	fsubr  DWORD PTR [edx]
  421e18:	mov    ecx,0xaa068889
  421e1d:	outs   dx,DWORD PTR ds:[esi]
  421e1e:	adc    ecx,0x559362ba
  421e24:	xchg   edi,eax
  421e25:	in     eax,dx
  421e26:	in     al,dx
  421e27:	mov    ds:0x89a4ad3c,al
  421e2c:	clc    
  421e2d:	mov    eax,ds:0x42015e08
  421e32:	rcl    esi,cl
  421e34:	push   cs
  421e35:	sub    eax,0x5b5c3e74
  421e3a:	or     al,0xda
  421e3c:	scas   eax,DWORD PTR es:[edi]
  421e3d:	adc    dh,dh
  421e3f:	data16 loopne 0x421e20
  421e42:	jmp    0xd1f1:0xb374a919
  421e49:	sub    DWORD PTR [edi+0x6676aa76],0xffffffe3
  421e50:	(bad)  
  421e51:	scas   eax,DWORD PTR es:[edi]
  421e52:	clc    
  421e53:	ss int 0xe3
  421e56:	add    eax,0xdc442f8a
  421e5b:	cmp    al,0xea
  421e5d:	data16 fwait
  421e5f:	pushf  
  421e60:	dec    ecx
  421e61:	mov    ah,ch
  421e63:	cwde   
  421e64:	mov    dh,0x22
  421e66:	adc    al,0x9
  421e68:	push   esp
  421e69:	push   0x9a90fe60
  421e6e:	hlt    
  421e6f:	sbb    ecx,DWORD PTR [eax]
  421e71:	cwde   
  421e72:	outs   dx,BYTE PTR ds:[esi]
  421e73:	mov    dl,0x9f
  421e75:	and    DWORD PTR [edi+0x6c59db12],esi
  421e7b:	add    DWORD PTR [ebx-0x53fa3aab],edi
  421e81:	sar    DWORD PTR [ecx-0x43],1
  421e84:	daa    
  421e85:	leave  
  421e86:	(bad)  
  421e87:	out    dx,eax
  421e88:	xchg   esp,eax
  421e89:	std    
  421e8a:	and    BYTE PTR [edi-0x5bc281d5],ah
  421e90:	sub    eax,0xeb40fc33
  421e95:	xchg   edx,eax
  421e96:	adc    DWORD PTR [edx+0x141d17e6],ebx
  421e9c:	mov    eax,ds:0x51d748cc
  421ea1:	test   eax,0x416a5a9b
  421ea6:	imul   BYTE PTR [ebp+ebx*2+0x170c1dd7]
  421ead:	ins    DWORD PTR es:[edi],dx
  421eae:	sbb    BYTE PTR [eax+0x10ba79d1],al
  421eb4:	imul   DWORD PTR [esi-0x1d049646]
  421eba:	imul   eax,DWORD PTR [eax],0x3b16ea3d
  421ec0:	jne    0x421efd
  421ec2:	mov    edx,0xb8176c0a
  421ec7:	retf   
  421ec8:	bound  ebx,QWORD PTR [eax+eiz*1+0x33ff4037]
  421ecf:	lods   eax,DWORD PTR ds:[esi]
  421ed0:	daa    
  421ed1:	aad    0x58
  421ed3:	dec    ebp
  421ed4:	or     al,0xc0
  421ed6:	retf   0x605b
  421ed9:	lods   al,BYTE PTR ds:[esi]
  421eda:	and    DWORD PTR [edi],0x27
  421edd:	add    dh,BYTE PTR [edx-0x12d53a63]
  421ee3:	outs   dx,DWORD PTR ds:[esi]
  421ee4:	jg     0x421f06
  421ee6:	pop    edx
  421ee7:	dec    ebp
  421ee8:	mov    ch,0x9b
  421eea:	dec    ebx
  421eeb:	jbe    0x421f3d
  421eed:	(bad)  
  421eee:	in     eax,dx
  421eef:	call   0x9214:0xe7735716
  421ef6:	mov    eax,0x25f1d6a7
  421efb:	mov    ebp,0x137f406f
  421f00:	pop    ebp
  421f01:	(bad)  
  421f02:	iret   
  421f03:	xchg   edi,eax
  421f04:	je     0x421f79
  421f06:	aam    0x1
  421f08:	(bad)  
  421f0a:	aam    0x6f
  421f0c:	(bad)
  421f10:	jg     0x421efa
  421f12:	mov    bh,0x32
  421f14:	sub    cl,dh
  421f16:	sahf   
  421f17:	and    al,0xfb
  421f19:	jmp    0x5f0e:0x74d7e2a4
  421f20:	jns    0x421f4b
  421f22:	enter  0xcaca,0x63
  421f26:	fnstenv [eax+0x56]
  421f29:	ins    DWORD PTR es:[edi],dx
  421f2a:	(bad)  
  421f2c:	into   
  421f2d:	sbb    dl,bl
  421f2f:	scas   al,BYTE PTR es:[edi]
  421f30:	mov    ebp,0x8f6cff1d
  421f35:	stc    
  421f36:	enter  0xace5,0x8e
  421f3a:	adc    cl,dh
  421f3c:	or     al,0x33
  421f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f3f:	push   es
  421f40:	dec    esi
  421f41:	fsubr  DWORD PTR [esi]
  421f43:	and    ecx,DWORD PTR [esi+0x1bcc37af]
  421f49:	retf   
  421f4a:	adc    eax,0xe369b9a8
  421f4f:	and    ah,BYTE PTR [ebp+0x47]
  421f52:	and    al,0x28
  421f54:	test   al,0xe6
  421f56:	pop    edx
  421f57:	in     al,0xf2
  421f59:	and    BYTE PTR [ecx+0x404ea01a],0xbe
  421f60:	gs xchg edx,eax
  421f62:	in     al,dx
  421f63:	mov    edi,0xe55dfdc9
  421f68:	mov    ds:0xfb88e4c5,eax
  421f6d:	(bad)  
  421f6e:	data16 add BYTE PTR [eax],al
	...
  421f79:	add    dh,ch
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     BYTE PTR [ebp-0x34],bh
  421f88:	and    dh,BYTE PTR [ecx]
  421f8a:	in     al,0x9a
  421f8c:	add    DWORD PTR [eax],eax
  421f8e:	std    
  421f8f:	add    DWORD PTR [eax],eax
  421f91:	add    ah,ah
  421f93:	repz jmp 0x95778323
  421f99:	rcr    BYTE PTR [esi-0x43],cl
  421f9c:	je     0x421fcd
  421f9e:	loopne 0x421fe0
  421fa0:	xor    ebx,DWORD PTR [edi+edi*4-0x55192363]
  421fa7:	push   0x2a
  421fa9:	dec    esi
  421faa:	in     al,dx
  421fab:	or     al,0xca
  421fad:	mov    al,0x62
  421faf:	call   0x3544:0xd7c9e061
  421fb6:	add    BYTE PTR [ebp-0x6b],ch
  421fb9:	jo     0x421f96
  421fbb:	inc    esi
  421fbc:	add    ecx,esp
  421fbe:	sti    
  421fbf:	ins    BYTE PTR es:[edi],dx
  421fc0:	pushf  
  421fc1:	sbb    al,0xee
  421fc3:	and    eax,0x4248f4c8
  421fc8:	pushf  
  421fc9:	jecxz  0x421f80
  421fcb:	pop    edi
  421fcc:	(bad)  
  421fcd:	in     al,dx
  421fce:	arpl   WORD PTR [ebx-0x2baf6155],ax
  421fd4:	lea    ebp,[ecx]
  421fd6:	xor    eax,0xda1c3053
  421fdb:	inc    esp
  421fdc:	addr16 or al,0xe3
  421fdf:	call   0xd8c02c6a
  421fe4:	jns    0x42204a
  421fe6:	call   0x216326
  421feb:	ins    DWORD PTR es:[edi],dx
  421fec:	sbb    ecx,DWORD PTR [ecx+edi*8-0x5a]
  421ff0:	mov    cl,0x56
  421ff2:	or     al,0xa1
  421ff4:	test   BYTE PTR [esi-0x41bffe31],dl
  421ffa:	rcr    BYTE PTR [esi-0x76462f7f],cl
  422000:	ficomp WORD PTR [edx-0x714eb2d7]
  422006:	scas   eax,DWORD PTR es:[edi]
  422007:	sahf   
  422008:	jno    0x422044
  42200a:	ins    BYTE PTR es:[edi],dx
  42200b:	(bad)  
  42200c:	sbb    al,0x57
  42200e:	inc    edx
  42200f:	mov    ch,0x93
  422011:	mov    esp,?
  422013:	data16 cmc 
  422015:	cwde   
  422016:	fadd   QWORD PTR [esi-0x69]
  422019:	lahf   
  42201a:	arpl   WORD PTR [edi+ebp*1-0x6a0784d7],di
  422021:	kunpckwd k5,k4,k3
  422025:	inc    ecx
  422026:	(bad)  
  422027:	adc    eax,0xd19b483d
  42202c:	mov    ecx,0x5a97d36c
  422031:	and    eax,0x575b020e
  422036:	jmp    0x42204f
  422038:	pop    ebx
  422039:	and    esi,ebx
  42203b:	fs and ebp,DWORD PTR ss:[eax+0x32]
  422040:	les    edx,FWORD PTR [edi-0x38fec4de]
  422046:	adc    BYTE PTR [esp+ecx*1+0x6a],bl
  42204a:	jg     0x421fde
  42204c:	or     BYTE PTR [edi+0x49870efe],dl
  422052:	scas   al,BYTE PTR es:[edi]
  422053:	mov    al,ds:0xf329fecd
  422058:	sub    ecx,eax
  42205a:	ins    DWORD PTR es:[edi],dx
  42205b:	ins    BYTE PTR es:[edi],dx
  42205c:	test   BYTE PTR [eax+0x6b],al
  42205f:	pop    ss
  422060:	jmp    0x492768bf
  422065:	xor    BYTE PTR [ebp+0x657ed2e],ch
  42206b:	rcr    DWORD PTR [eax+0x280b7367],0x75
  422072:	sub    esi,edx
  422074:	je     0x4220a8
  422076:	or     DWORD PTR [ebx+0x3152b3f5],edx
  42207c:	fdivr  QWORD PTR [eax-0x1c]
  42207f:	push   es
  422080:	pop    es
  422081:	jns    0x4220b4
  422083:	in     eax,0xd5
  422085:	jae    0x422009
  422087:	sbb    al,0x0
  422089:	xchg   edx,eax
  42208a:	test   al,0x3f
  42208c:	cmp    al,0x86
  42208e:	xor    ebx,DWORD PTR [ebx+ebx*2]
  422091:	jl     0x422086
  422093:	dec    eax
  422094:	repnz xchg esp,eax
  422096:	(bad)  
  422097:	cld    
  422098:	or     eax,0x43515247
  42209d:	or     eax,DWORD PTR cs:[edx+0x5f]
  4220a1:	mov    bh,cl
  4220a3:	sbb    dl,BYTE PTR [edi]
  4220a5:	and    al,0xba
  4220a7:	jl     0x422110
  4220a9:	loop   0x422097
  4220ab:	fmul   DWORD PTR [eax]
  4220ad:	pop    ds
  4220ae:	jl     0x42205e
  4220b0:	cld    
  4220b1:	enter  0xa713,0x48
  4220b5:	rcl    al,0x79
  4220b8:	imul   ecx,DWORD PTR [ecx],0x7b
  4220bb:	push   cs
  4220bc:	mov    al,ds:0xc0881ecc
  4220c1:	xor    eax,0x5e81a5e5
  4220c6:	xchg   DWORD PTR [eax-0x71],esi
  4220c9:	sahf   
  4220ca:	push   ebx
  4220cb:	out    0x22,al
  4220cd:	mov    ebp,esi
  4220cf:	popf   
  4220d0:	and    al,0x41
  4220d2:	mov    ?,WORD PTR [edx-0x22470da5]
  4220d8:	outs   dx,DWORD PTR ds:[esi]
  4220d9:	fs inc ebx
  4220db:	es repnz ss xchg esi,eax
  4220df:	lods   eax,DWORD PTR ds:[esi]
  4220e0:	nop
  4220e1:	xor    esp,esp
  4220e3:	ins    BYTE PTR es:[edi],dx
  4220e4:	in     al,0x44
  4220e6:	mov    dl,0x63
  4220e8:	xchg   ebp,eax
  4220e9:	sbb    ecx,0xfe307f2e
  4220ef:	xchg   edi,eax
  4220f0:	xor    eax,0xc9dbef96
  4220f5:	cs pushf 
  4220f7:	fsub   QWORD PTR [ebx+0x2]
  4220fa:	jno    0x4220ff
  4220fc:	jg     0x42212e
  4220fe:	pop    ds
  4220ff:	xor    eax,DWORD PTR [edx-0x63d08c06]
  422105:	fcos   
  422107:	scas   al,BYTE PTR es:[edi]
  422108:	out    0xd0,eax
  42210a:	mov    DWORD PTR [ebx],ebx
  42210c:	jge    0x422164
  42210e:	and    eax,0x13104399
  422113:	cwde   
  422114:	jno    0x4220ff
  422116:	xor    ebp,DWORD PTR [edx+eax*8+0x41]
  42211a:	frstpm(287 only) 
  42211c:	cmp    esp,edx
  42211e:	icebp  
  42211f:	arpl   WORD PTR [edi],di
  422121:	jb     0x4220ab
  422123:	fs xchg edi,eax
  422125:	sahf   
  422126:	enter  0x29f7,0xff
  42212a:	fsubr  st,st(3)
  42212c:	mov    esi,0x80188370
  422131:	sbb    DWORD PTR [edi+0x39],eax
  422134:	xor    eax,0xac04462f
  422139:	aas    
  42213a:	push   ebp
  42213b:	into   
  42213c:	cmp    ch,BYTE PTR [ecx-0x4f]
  42213f:	adc    edx,DWORD PTR [ebx-0x43]
  422142:	adc    BYTE PTR [edi-0x19],al
  422145:	cmp    BYTE PTR [ebx+0x53a53a80],bl
  42214b:	jno    0x4221b4
  42214d:	pop    ecx
  42214e:	inc    ebx
  42214f:	jno    0x422118
  422151:	popf   
  422152:	jge    0x422198
  422154:	arpl   WORD PTR [ebx+0x63],si
  422157:	pop    ecx
  422158:	adc    dl,ah
  42215a:	dec    esp
  42215b:	fadd   QWORD PTR [edi]
  42215d:	leave  
  42215e:	push   es
  42215f:	xchg   edi,eax
  422160:	mov    ebp,0xc49fbace
  422165:	lods   eax,DWORD PTR ds:[esi]
  422166:	sub    eax,0x844edbe7
  42216b:	fsubr  st,st(1)
  42216d:	sub    dh,dl
  42216f:	mov    DWORD PTR [ebp+edi*4-0x26266189],ebx
  422176:	fwait
  422177:	xor    cl,bh
  422179:	sub    al,0x82
  42217b:	jbe    0x4221a4
  42217d:	adc    bh,bh
  42217f:	dec    ebp
  422180:	aam    0xf2
  422182:	pop    ss
  422183:	mov    dl,0xf2
  422185:	data16 mov dh,0x8c
  422188:	int    0xe4
  42218a:	pushf  
  42218b:	push   es
  42218c:	or     cl,BYTE PTR [ebx+0x6b]
	...
  422197:	add    BYTE PTR [eax],al
  422199:	add    BYTE PTR [ebx-0x2a],dl
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp+0x5a],0xe1ea5f52
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	std    
  4221af:	add    DWORD PTR [eax],eax
  4221b1:	add    BYTE PTR [esi-0x52c43666],cl
  4221b7:	inc    esi
  4221b8:	cwde   
  4221b9:	sbb    DWORD PTR [ebx],ecx
  4221bb:	add    ah,ah
  4221bd:	(bad)  
  4221be:	arpl   bx,di
  4221c0:	rcr    DWORD PTR [esi],cl
  4221c2:	arpl   WORD PTR [ebx],si
  4221c4:	int3   
  4221c5:	cmp    BYTE PTR [ebx-0x3e],ah
  4221c8:	loope  0x42222b
  4221ca:	retf   
  4221cb:	cmp    edi,DWORD PTR [ebx]
  4221cd:	es nop
  4221cf:	mov    ds:0xc8318a3b,eax
  4221d4:	jecxz  0x4221af
  4221d6:	(bad)  
  4221d7:	and    esp,DWORD PTR [ecx+0x6c]
  4221da:	outs   dx,DWORD PTR ds:[esi]
  4221db:	jae    0x4221d5
  4221dd:	lahf   
  4221de:	ja     0x4221ba
  4221e0:	fcmovnb st,st(2)
  4221e2:	mov    dh,0xad
  4221e4:	outs   dx,DWORD PTR ds:[esi]
  4221e5:	sbb    DWORD PTR [ebx+0x7a090de0],esi
  4221eb:	jle    0x4221cf
  4221ed:	xor    ecx,DWORD PTR [eax+0x22e89656]
  4221f3:	jp     0x4221c8
  4221f5:	cwde   
  4221f6:	jmp    0x9a5891ce
  4221fb:	mov    esp,0x89f38042
  422200:	cmp    ah,BYTE PTR [ecx]
  422202:	je     0x4221b6
  422204:	das    
  422205:	or     al,0xcd
  422207:	mov    eax,0x67bb6860
  42220c:	icebp  
  42220d:	mov    ebx,0x32ade38c
  422212:	xor    al,0xfa
  422214:	frstor [ebx-0x504fe54a]
  42221a:	mov    ebp,0x7a1cfb7a
  42221f:	int3   
  422220:	push   0x7a
  422222:	fwait
  422223:	inc    ecx
  422224:	addr16 ret 0x8dc9
  422228:	cmp    eax,DWORD PTR gs:[edi-0x431a7e]
  42222f:	shl    DWORD PTR [ecx+0xf],0x8
  422233:	xchg   ecx,eax
  422234:	pop    es
  422235:	sub    BYTE PTR [ebp+ebp*1+0x20],ch
  422239:	pop    eax
  42223a:	lods   eax,DWORD PTR ds:[esi]
  42223b:	pop    ss
  42223c:	dec    esi
  42223d:	cmc    
  42223e:	popf   
  42223f:	jl     0x422260
  422241:	cmc    
  422242:	mov    eax,0xcd6f3d9a
  422247:	sbb    DWORD PTR [edx],ebx
  422249:	(bad)  
  42224a:	hlt    
  42224b:	and    eax,0x90eefaf1
  422250:	sbb    al,dh
  422252:	jg     0x4222b2
  422254:	mov    edx,0x2b230c3a
  422259:	or     dh,BYTE PTR [esp+ebp*2-0xb278aa6]
  422260:	lods   al,BYTE PTR ds:[esi]
  422261:	call   0xdb173ad6
  422266:	daa    
  422267:	rcl    DWORD PTR [ebx+0x2e7cabe4],0x56
  42226e:	mov    eax,ds:0x66f684df
  422273:	cld    
  422274:	pop    eax
  422275:	movnti DWORD PTR [edx+0x3dcc6b85],ecx
  42227c:	dec    ebx
  42227d:	pop    ss
  42227e:	xchg   ecx,eax
  42227f:	xchg   esi,eax
  422280:	cli    
  422281:	sbb    edi,edi
  422283:	mov    dl,0x8a
  422285:	sub    ecx,DWORD PTR [ecx-0x4a]
  422288:	pop    edx
  422289:	sar    DWORD PTR [esp+eiz*4+0x6b],1
  42228d:	add    dh,ch
  42228f:	leave  
  422290:	push   cs
  422291:	sbb    esi,DWORD PTR [eax]
  422293:	lahf   
  422294:	nop
  422295:	mov    al,0x8d
  422297:	pop    ebp
  422298:	jns    0x42225a
  42229a:	shr    DWORD PTR [edx],cl
  42229c:	mov    ebp,0xda239346
  4222a1:	fistp  QWORD PTR [ecx-0x7f]
  4222a4:	out    dx,al
  4222a5:	sbb    al,0x33
  4222a7:	or     dl,ah
  4222a9:	pop    es
  4222aa:	ja     0x422243
  4222ac:	daa    
  4222ad:	push   edx
  4222ae:	or     al,0xf0
  4222b0:	hlt    
  4222b1:	fwait
  4222b2:	inc    esp
  4222b3:	adc    BYTE PTR [edi-0x7393e58e],cl
  4222b9:	rcr    esp,0x7d
  4222bc:	dec    edx
  4222bd:	cs imul edi,ecx,0x68
  4222c1:	and    edi,DWORD PTR [eax+0x20]
  4222c4:	mov    dh,BYTE PTR [esi+ecx*1-0x4e]
  4222c8:	sub    DWORD PTR [edi-0x1521a3c1],edi
  4222ce:	push   0xffffffbc
  4222d0:	mul    BYTE PTR [edi]
  4222d2:	xchg   ebx,ebx
  4222d4:	sti    
  4222d5:	cmp    al,0x72
  4222d7:	(bad)  
  4222d8:	sbb    eax,0x6c8fbbe8
  4222dd:	fwait
  4222de:	xchg   ebp,eax
  4222df:	push   esi
  4222e0:	repz pushf 
  4222e2:	iret   
  4222e3:	sub    ebp,DWORD PTR [ebx+0x53003837]
  4222e9:	mov    dh,0xc8
  4222eb:	data16 and BYTE PTR [edx+0x4d40a89d],dl
  4222f2:	dec    ebx
  4222f3:	sar    al,1
  4222f5:	(bad)  
  4222f6:	sub    DWORD PTR [edi],ebx
  4222f8:	loope  0x422300
  4222fa:	mov    dl,0xdd
  4222fc:	mov    es,WORD PTR [ecx+0x48]
  4222ff:	ret    
  422300:	loop   0x4222c8
  422302:	push   ecx
  422303:	les    edi,FWORD PTR [ecx-0x44]
  422306:	dec    ebp
  422307:	iret   
  422308:	test   al,0x14
  42230a:	pop    esi
  42230b:	js     0x422305
  42230d:	int    0xef
  42230f:	mov    eax,0xd6924368
  422314:	lods   eax,DWORD PTR ds:[esi]
  422315:	in     eax,0x3a
  422317:	mov    dh,0xb7
  422319:	and    al,0x6b
  42231b:	mov    cl,0x92
  42231d:	test   al,0xd7
  42231f:	dec    eax
  422320:	into   
  422321:	mov    edi,0x64a0d5ef
  422326:	retf   0x48a9
  422329:	adc    BYTE PTR [edi-0x7eabe1cb],bl
  42232f:	rol    DWORD PTR ds:0x80c01ed5,1
  422335:	sub    DWORD PTR [edi],ebx
  422337:	mov    ebx,0x7e541ddd
  42233c:	fdiv   QWORD PTR [ecx+0x40]
  42233f:	ins    BYTE PTR es:[edi],dx
  422340:	int    0xd7
  422342:	shl    DWORD PTR [esp+esi*1+0x79],cl
  422346:	add    eax,0x27457232
  42234b:	mov    ch,0xa8
  42234d:	loope  0x42233d
  42234f:	push   ss
  422350:	mov    BYTE PTR [esi-0x5d],dl
  422353:	jnp    0x422328
  422355:	jle    0x422387
  422357:	pusha  
  422358:	dec    ecx
  422359:	mov    ?,WORD PTR [ecx]
  42235b:	mov    eax,ds:0x99b2ccce
  422360:	and    eax,DWORD PTR [edi+ecx*8-0x5dd62a83]
  422367:	push   ebx
  422368:	fnstcw WORD PTR [edx+0x220258e0]
  42236e:	sbb    DWORD PTR [ebp-0x4a],edi
  422371:	sub    bh,BYTE PTR [ebp+0x48]
  422374:	dec    ebp
  422375:	bound  esi,QWORD PTR [esi+edx*1]
  422378:	shl    BYTE PTR ds:0x6b8d2aa5,1
  42237e:	push   edx
  42237f:	neg    BYTE PTR [ebx+0x1146cf97]
  422385:	jle    0x422354
  422387:	fcmove st,st(1)
  422389:	mov    bl,0xc9
  42238b:	test   bh,0x81
  42238e:	ss cdq 
  422390:	sbb    dl,BYTE PTR [esi-0x4f]
  422393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422394:	xor    eax,0x4b87a1a
  422399:	push   edx
  42239a:	and    ebp,eax
  42239c:	adc    ah,dh
  42239e:	rol    BYTE PTR [ebx-0x69],cl
  4223a1:	push   edi
  4223a2:	ins    BYTE PTR es:[edi],dx
  4223a3:	and    eax,0xc479b9f5
  4223a8:	test   BYTE PTR [edx],dh
  4223aa:	rol    DWORD PTR [ecx],0x1b
  4223ad:	mov    ebx,0x71
	...
  4223ba:	adc    DWORD PTR [esi],ecx
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	rol    esp,1
  4223c8:	in     al,0x27
  4223ca:	ficomp WORD PTR [esi+0x1fd0001]
  4223d0:	add    BYTE PTR [eax],al
  4223d2:	sar    DWORD PTR [esi-0x60fae680],1
  4223d8:	xchg   DWORD PTR [edi-0x47],esi
  4223db:	mov    esp,DWORD PTR [eax+esi*1-0x3b]
  4223df:	xor    BYTE PTR [ebx-0x407d3fc],dl
  4223e5:	ror    eax,cl
  4223e7:	pop    esi
  4223e8:	in     eax,dx
  4223e9:	retf   
  4223ea:	or     BYTE PTR [ebx-0x648a382f],ch
  4223f0:	aam    0x57
  4223f2:	pushf  
  4223f3:	xchg   BYTE PTR [edx-0x2c],dl
  4223f6:	clc    
  4223f7:	sub    BYTE PTR cs:[esi+0x7d],dl
  4223fb:	imul   ebx,DWORD PTR [edx-0x51],0x3a7bf8f8
  422402:	jae    0x4223a9
  422404:	mov    ebx,0x3c5de615
  422409:	test   DWORD PTR [ebx+ecx*8-0xef77b27],ebp
  422410:	cwde   
  422411:	and    ch,BYTE PTR [esi]
  422413:	mov    bl,0x39
  422415:	test   al,0x2a
  422417:	adc    al,0x36
  422419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42241a:	(bad)  
  42241b:	out    dx,al
  42241c:	pop    ss
  42241d:	lds    ebp,FWORD PTR [ebx+0x52baced]
  422423:	lds    edi,FWORD PTR [edi+0x6a]
  422426:	jmp    0xb8ce:0xb86739c5
  42242d:	out    0xb7,eax
  42242f:	jmp    0x21e61740
  422434:	es inc esi
  422436:	ds cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422439:	stos   BYTE PTR es:[edi],al
  42243a:	mov    eax,ds:0xff8fbb05
  42243f:	lds    ebx,FWORD PTR [edi]
  422441:	lock rdtsc 
  422444:	xor    eax,0x356c9ddc
  422449:	jge    0x422418
  42244b:	mov    cl,0xf
  42244d:	add    al,0xb5
  42244f:	in     eax,0x9d
  422451:	test   al,0x3c
  422453:	(bad)  
  422454:	xlat   BYTE PTR ds:[ebx]
  422455:	push   edi
  422456:	jmp    0x7bd:0x7e4572c4
  42245d:	pop    ds
  42245e:	sbb    al,0xd4
  422460:	push   ebp
  422461:	aad    0xa2
  422463:	scas   al,BYTE PTR es:[edi]
  422464:	(bad)  
  422465:	cld    
  422466:	jmp    0x42245b
  422468:	jp     0x422464
  42246a:	xchg   ebp,eax
  42246b:	addr16 jb 0x4224db
  42246e:	stos   BYTE PTR es:[edi],al
  42246f:	mov    cl,0xa1
  422471:	fwait
  422472:	pop    ss
  422473:	test   al,0xd2
  422475:	inc    edx
  422476:	or     BYTE PTR [edx+0x62392e8b],ch
  42247c:	push   ecx
  42247d:	add    eax,0x629cf4ab
  422482:	jne    0x42241f
  422484:	add    cl,BYTE PTR [ebx+edx*8-0x67]
  422488:	outs   dx,BYTE PTR ds:[esi]
  422489:	inc    esi
  42248a:	hlt    
  42248b:	sub    ecx,DWORD PTR [esi+0x3db9e1f]
  422491:	lahf   
  422492:	push   es
  422493:	sub    DWORD PTR [edx-0x43],0xffffffe2
  422497:	jnp    0x422444
  422499:	dec    edx
  42249a:	sub    edx,ebx
  42249c:	add    BYTE PTR [eax-0x53],0x92
  4224a0:	inc    ebp
  4224a1:	pop    esi
  4224a2:	fsubr  st(3),st
  4224a4:	mov    dh,0xcd
  4224a6:	mov    esi,edi
  4224a8:	loope  0x4224a0
  4224aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224ab:	fimul  DWORD PTR [edi+0x10056e92]
  4224b1:	xor    dl,BYTE PTR [ebp-0x55]
  4224b4:	cmp    ah,BYTE PTR [ecx+ebp*4]
  4224b7:	enter  0xe67b,0x60
  4224bb:	mov    DWORD PTR [ecx+0x1d],0x878bf478
  4224c2:	ret    0x6ef6
  4224c5:	add    al,0xcf
  4224c7:	or     dh,dl
  4224c9:	dec    esp
  4224ca:	test   DWORD PTR [edi],ecx
  4224cc:	push   es
  4224cd:	xor    al,0x69
  4224cf:	ja     0x4224e6
  4224d1:	and    BYTE PTR [esi+0x3b627a9e],dh
  4224d7:	pop    ebx
  4224d8:	mov    ds:0xc6ef920d,eax
  4224dd:	sub    eax,0x6ed5f13d
  4224e2:	pop    eax
  4224e3:	fs push ecx
  4224e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224e6:	push   edx
  4224e7:	fiadd  DWORD PTR [ecx+0x258341bc]
  4224ed:	inc    edx
  4224ee:	lods   al,BYTE PTR ds:[esi]
  4224ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224f0:	mov    ah,0x6f
  4224f2:	cmc    
  4224f3:	daa    
  4224f4:	sti    
  4224f5:	push   0xffffff8a
  4224f7:	(bad)  
  4224f8:	enter  0x4d0,0xaf
  4224fc:	sub    DWORD PTR [ebx+0x10],0xa0a5fdd3
  422503:	(bad)  
  422504:	ins    DWORD PTR es:[edi],dx
  422505:	sub    dh,BYTE PTR [edx+0x35]
  422508:	ds push 0xffffffdf
  42250b:	fadd   DWORD PTR [ebx]
  42250d:	dec    eax
  42250e:	pop    edx
  42250f:	test   ah,ch
  422511:	pusha  
  422512:	pop    esi
  422513:	mov    dh,0xef
  422515:	js     0x422532
  422517:	cwde   
  422518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422519:	add    eax,0xaba438be
  42251e:	mov    ebx,0xcdd55fcb
  422523:	push   0x5dee1888
  422528:	xor    al,0xbd
  42252a:	jo     0x42255f
  42252c:	retf   
  42252d:	push   ecx
  42252e:	inc    DWORD PTR [edx]
  422530:	pop    es
  422531:	jecxz  0x422528
  422533:	gs mov bh,0x8e
  422536:	out    dx,eax
  422537:	xchg   esp,eax
  422538:	imul   esi,edx,0xffffffdf
  42253b:	and    ah,BYTE PTR [ecx-0x30]
  42253e:	add    dh,BYTE PTR [ebx]
  422540:	push   ebx
  422541:	inc    edi
  422542:	adc    ah,BYTE PTR [edx-0x3110d81e]
  422548:	inc    edx
  422549:	dec    ebx
  42254a:	jmp    0x422523
  42254c:	add    BYTE PTR [edx-0x348b2121],0xe4
  422553:	retf   
  422554:	das    
  422555:	cld    
  422556:	jle    0x42257d
  422558:	sub    BYTE PTR [ebx+0x183606ef],cl
  42255e:	mov    eax,0x8699704f
  422563:	jmp    0x422508
  422565:	js     0x4225be
  422567:	repnz inc ebp
  42256a:	jg     0x4225a4
  42256c:	nop
  42256d:	xor    al,0xb4
  42256f:	adc    eax,0x2f787951
  422574:	test   al,0xaf
  422576:	shl    DWORD PTR [ebx+edx*2-0x39312316],cl
  42257d:	jno    0x4225af
  42257f:	push   ebp
  422580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422581:	hlt    
  422582:	fs cdq 
  422584:	je     0x4225ed
  422586:	push   0x3fd09286
  42258b:	and    ebx,DWORD PTR [eax-0x4b]
  42258e:	add    ah,BYTE PTR [eax+0x79]
  422591:	and    edx,DWORD PTR [esi-0x7ee230bd]
  422597:	inc    edi
  422598:	adc    eax,0x1e05bf8b
  42259d:	in     eax,dx
  42259e:	pushf  
  42259f:	pop    ecx
  4225a0:	les    eax,FWORD PTR [ecx-0x7a]
  4225a3:	(bad)  
  4225a4:	mov    dh,0x7e
  4225a6:	jb     0x4225ba
  4225a8:	cmp    eax,0x8bd3baf5
  4225ad:	imul   ebx,DWORD PTR es:[edi],0x55
  4225b1:	xchg   ebx,eax
  4225b2:	(bad)  [ebp-0xb9763c7]
  4225b8:	ds ja  0x422558
  4225bb:	iret   
  4225bc:	scas   eax,DWORD PTR es:[edi]
  4225bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225be:	dec    edi
  4225bf:	fisubr WORD PTR [edx+0x47e8eb19]
  4225c5:	and    eax,edx
  4225c7:	mov    cl,0x32
  4225c9:	ror    DWORD PTR [ebx],0x38
  4225cc:	fsubr  QWORD PTR [eax+0x4]
	...
  4225d7:	add    BYTE PTR [eax],al
  4225d9:	add    cl,cl
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    eax,DWORD PTR [edx]
  4225e7:	div    BYTE PTR [eax]
  4225e9:	pop    ebp
  4225ea:	(bad)  [eax+0x1fd0001]
  4225f0:	add    BYTE PTR [eax],al
  4225f2:	xchg   ebp,eax
  4225f3:	rcr    esi,1
  4225f5:	scas   al,BYTE PTR es:[edi]
  4225f6:	adc    edi,DWORD PTR [ebp-0x2d]
  4225f9:	test   al,0x5a
  4225fb:	bound  ebp,QWORD PTR ds:0xb0c1edad
  422601:	mov    ah,0x50
  422603:	and    cl,bl
  422605:	pop    ebp
  422606:	test   BYTE PTR [eax-0x19b449a1],bh
  42260c:	fist   DWORD PTR [esi+0x61dfb9f6]
  422612:	outs   dx,BYTE PTR ds:[esi]
  422613:	mov    dh,BYTE PTR [ebx]
  422615:	daa    
  422616:	pop    ss
  422617:	gs rcr bl,0xcf
  42261b:	push   edi
  42261c:	inc    edx
  42261d:	cmp    bl,dl
  42261f:	sbb    al,0xc
  422621:	add    eax,0xe22c202e
  422626:	fistp  DWORD PTR [ebp+ecx*1-0x33d58a36]
  42262d:	inc    ebp
  42262e:	daa    
  42262f:	iret   
  422630:	mov    al,ds:0xb3c3d8f8
  422635:	xchg   edi,eax
  422636:	(bad)  
  422637:	ins    BYTE PTR es:[edi],dx
  422638:	dec    ebx
  422639:	ror    DWORD PTR [edx+ecx*8+0x7f3d8e3c],0x7
  422641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422642:	test   BYTE PTR [edx-0x2a6cbbc3],0xf0
  422649:	sbb    cl,0x46
  42264c:	nop
  42264d:	inc    ebx
  42264e:	outs   dx,BYTE PTR ds:[esi]
  42264f:	(bad)  
  422650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422651:	stc    
  422652:	repz fiadd WORD PTR [edx+0x9647f6e]
  422659:	push   ebp
  42265a:	loope  0x422622
  42265c:	je     0x4225f5
  42265e:	loop   0x422605
  422660:	xor    al,0x2
  422662:	sub    ah,BYTE PTR [ecx+ecx*8+0x71]
  422666:	and    ah,BYTE PTR [edi+0x73]
  422669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42266a:	js     0x4226d2
  42266c:	cmp    edx,DWORD PTR [ebp-0x5d]
  42266f:	aad    0xb2
  422671:	int    0x4f
  422673:	iret   
  422674:	jo     0x42269d
  422676:	push   0x15
  422678:	xchg   ecx,eax
  422679:	je     0x422644
  42267b:	in     al,dx
  42267c:	or     dh,dl
  42267e:	aas    
  42267f:	je     0x422643
  422681:	arpl   ax,si
  422683:	inc    edx
  422684:	jne    0x42269f
  422686:	in     eax,0xba
  422688:	jne    0x4226db
  42268a:	imul   DWORD PTR [esp+edi*2-0x7b]
  42268e:	pop    eax
  42268f:	cli    
  422690:	sti    
  422691:	inc    esp
  422692:	addr16 sbb eax,0xa2f2b314
  422698:	leave  
  422699:	ds ficom DWORD PTR ds:[eax+0x16547ee8]
  4226a1:	bound  edx,QWORD PTR [ecx-0x7e]
  4226a4:	xor    DWORD PTR [eax-0x4c],esi
  4226a7:	mov    esp,0x5d278f78
  4226ac:	push   ebp
  4226ad:	dec    edx
  4226ae:	dec    eax
  4226af:	adc    eax,0x25efe931
  4226b4:	adc    BYTE PTR [edi+0x6ec63553],al
  4226ba:	pop    eax
  4226bb:	jnp    0x4226b0
  4226bd:	(bad)  
  4226be:	ror    BYTE PTR [eax-0x53],1
  4226c1:	mov    ah,BYTE PTR [edi+0x7d33e682]
  4226c7:	jmp    0x8ca8:0x29b6982a
  4226ce:	sti    
  4226cf:	jp     0x422690
  4226d1:	addr16 gs js 0x422746
  4226d5:	popf   
  4226d6:	daa    
  4226d7:	sub    eax,0x670a08ee
  4226dc:	in     al,dx
  4226dd:	outs   dx,BYTE PTR ds:[esi]
  4226de:	xchg   edi,eax
  4226df:	pop    esp
  4226e0:	lods   al,BYTE PTR ds:[esi]
  4226e1:	jnp    0x422673
  4226e3:	and    DWORD PTR [ebx],edx
  4226e5:	or     DWORD PTR [eax],edx
  4226e7:	mov    DWORD PTR [ebp+0x61],esi
  4226ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226eb:	xchg   BYTE PTR [esi],dh
  4226ed:	int3   
  4226ee:	adc    ecx,esp
  4226f0:	pushf  
  4226f1:	mov    ch,0x39
  4226f3:	inc    ebx
  4226f4:	les    ecx,FWORD PTR [esi+0x61]
  4226f7:	pop    ecx
  4226f8:	es push ecx
  4226fa:	test   BYTE PTR ds:0x41b61cfd,bl
  422700:	cmp    BYTE PTR [ecx-0x4f],ch
  422703:	xlat   BYTE PTR ds:[ebx]
  422704:	jbe    0x42268a
  422706:	xchg   edx,eax
  422707:	inc    esi
  422708:	and    BYTE PTR [edx-0x15],0xc6
  42270c:	mov    esi,0x5e58b710
  422711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422712:	add    eax,0x55e55e38
  422717:	int    0x6b
  422719:	pop    esi
  42271a:	push   0x2e3732a3
  42271f:	sbb    BYTE PTR [eax-0x3],dl
  422722:	iret   
  422723:	inc    esi
  422724:	jbe    0x422742
  422726:	ret    0xcb60
  422729:	ffree  st(1)
  42272b:	or     bl,BYTE PTR [ebx-0x4dca1d98]
  422731:	imul   edx,DWORD PTR ds:0xfdcdd2e4,0xb1d941b6
  42273b:	xchg   ebp,eax
  42273c:	mov    dl,0xb6
  42273e:	dec    ecx
  42273f:	sbb    bh,BYTE PTR [ecx-0x1b]
  422742:	sbb    eax,0xcf29815e
  422747:	jle    0x422710
  422749:	mov    cl,0x36
  42274b:	cmp    al,0x67
  42274d:	add    eax,eax
  42274f:	lods   al,BYTE PTR ds:[esi]
  422750:	mov    eax,ds:0xcc1f10b9
  422755:	inc    ebx
  422756:	cwde   
  422757:	ds mov ebx,0x2466627d
  42275d:	iret   
  42275e:	repz pop ecx
  422760:	bound  esi,QWORD PTR [edi+0x417078e7]
  422766:	sahf   
  422767:	jecxz  0x4227b1
  422769:	ja     0x422713
  42276b:	scas   al,BYTE PTR es:[edi]
  42276c:	jae    0x422729
  42276e:	imul   edx,DWORD PTR [esi-0xbacebc6],0x3cf43a1d
  422778:	mov    ebp,0xe714f4cd
  42277d:	xchg   ebp,eax
  42277e:	pop    ss
  42277f:	je     0x4227ee
  422781:	imul   eax,esi,0xffffffe1
  422784:	adc    edx,DWORD PTR [edx+0x6eb8d681]
  42278a:	inc    esi
  42278b:	pushf  
  42278c:	sbb    eax,0xc521d17b
  422791:	or     bl,BYTE PTR [ecx+0x65]
  422794:	push   eax
  422795:	setle  bh
  422798:	mov    dh,0x3c
  42279a:	sbb    eax,0x12171783
  42279f:	xor    al,0xf
  4227a1:	call   0x6771:0xf17b1096
  4227a8:	fild   QWORD PTR [ebx-0x7ceae65c]
  4227ae:	mov    WORD PTR [ecx+ebp*1-0x4486d9ec],es
  4227b5:	mov    cl,0x8c
  4227b7:	cli    
  4227b8:	ret    
  4227b9:	ins    BYTE PTR es:[edi],dx
  4227ba:	mov    DWORD PTR [ebp+0x74],esi
  4227bd:	cdq    
  4227be:	dec    edx
  4227bf:	sub    edx,DWORD PTR [edi]
  4227c1:	xlat   BYTE PTR ds:[ebx]
  4227c2:	add    esp,esi
  4227c4:	cmc    
  4227c5:	inc    ecx
  4227c6:	stos   DWORD PTR es:[edi],eax
  4227c7:	xlat   BYTE PTR ds:[ebx]
  4227c8:	retf   
  4227c9:	call   0xe254602f
  4227ce:	out    0x5f,al
  4227d0:	imul   ecx,DWORD PTR [eax*2-0x34144570],0x7608dd43
  4227db:	in     al,dx
  4227dc:	retf   
  4227dd:	inc    ebx
  4227de:	push   0x32
  4227e0:	pushf  
  4227e1:	add    ebp,edi
  4227e3:	lea    eax,[ebp+0x7a]
  4227e6:	add    al,0x16
  4227e8:	cli    
  4227e9:	sub    eax,0xb7030163
  4227ee:	mov    bh,0x0
	...
  4227f8:	add    BYTE PTR [eax],al
  4227fa:	dec    eax
  4227fb:	out    dx,eax
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx+0x649be210],ebx
  422808:	or     DWORD PTR [ecx+0x1a2d8],ecx
  42280e:	std    
  42280f:	add    DWORD PTR [eax],eax
  422811:	add    BYTE PTR [edx+0x33fb4b3a],ah
  422817:	mov    eax,ds:0x474f8287
  42281c:	pop    edi
  42281d:	and    cl,BYTE PTR [esp+edx*8-0x34edd376]
  422824:	(bad)  
  422825:	jge    0x422846
  422827:	mov    al,0xe3
  422829:	test   BYTE PTR [esi-0x5adefc86],dh
  42282f:	ret    0x7867
  422832:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422834:	popa   
  422835:	dec    esi
  422837:	pop    eax
  422838:	push   0x11e42a36
  42283d:	in     al,dx
  42283e:	pop    esp
  42283f:	sbb    BYTE PTR [ebp+0x62],dl
  422842:	push   ebx
  422843:	aad    0x1c
  422845:	mov    ss:0x846ec26c,al
  42284b:	push   ecx
  42284c:	aad    0x26
  42284e:	push   esp
  42284f:	out    dx,al
  422850:	mov    al,0x77
  422852:	test   BYTE PTR [edi+0x2a],ch
  422855:	and    eax,0xa876df14
  42285a:	jnp    0x422802
  42285c:	jmp    0x731634d9
  422861:	icebp  
  422862:	add    bl,bl
  422864:	push   ss
  422865:	cmp    ebp,esi
  422867:	pop    ecx
  422868:	or     edi,ebx
  42286a:	xor    al,0x5
  42286c:	mov    bh,0xdd
  42286e:	repz cmp al,0x93
  422871:	mov    al,0x8f
  422873:	sbb    al,0x76
  422875:	inc    esi
  422876:	ror    DWORD PTR [esp+edx*8-0x23],cl
  42287a:	sar    BYTE PTR [esi+eax*2],1
  42287d:	rol    DWORD PTR [ebx+0x7],1
  422880:	cdq    
  422881:	les    edx,FWORD PTR [ecx-0x3b58af3f]
  422887:	cmp    DWORD PTR es:[edx],ebp
  42288a:	arpl   WORD PTR [edx+0x197b25de],bx
  422890:	push   edx
  422891:	add    eax,0x620bc018
  422896:	popf   
  422897:	and    BYTE PTR [ebx-0x7],ah
  42289a:	aaa    
  42289b:	adc    eax,0x82d1d6c5
  4228a0:	lds    esp,FWORD PTR [ebx+0x2d7f5d77]
  4228a6:	(bad)  
  4228a7:	pusha  
  4228a8:	sahf   
  4228a9:	into   
  4228aa:	add    BYTE PTR [ecx],al
  4228ac:	jns    0x422917
  4228ae:	xor    al,0xda
  4228b0:	mov    cl,0x57
  4228b2:	mov    dl,0xc6
  4228b4:	pop    ebp
  4228b5:	push   ds
  4228b6:	aam    0x60
  4228b8:	sub    DWORD PTR [edi+0x7abb6e3a],0x27b70a40
  4228c2:	pop    ebp
  4228c3:	sub    ebx,0x8e277898
  4228c9:	mov    bh,0x13
  4228cb:	pop    edi
  4228cc:	retf   
  4228cd:	push   edi
  4228ce:	fnstcw WORD PTR [ebp-0x6fe1cf94]
  4228d4:	repz sub edi,esp
  4228d7:	retf   
  4228d8:	mov    ch,0xa0
  4228da:	es addr16 loopne 0x4228d0
  4228de:	inc    ebp
  4228df:	aaa    
  4228e0:	xor    BYTE PTR [eax+0xd624aee],bl
  4228e6:	jge    0x4228ed
  4228e8:	les    esi,FWORD PTR [ecx+eiz*8-0x5df803e9]
  4228ef:	cmp    BYTE PTR [ecx-0x1b],ah
  4228f2:	out    dx,al
  4228f3:	jmp    0x42291e
  4228f5:	cmp    ebx,edx
  4228f7:	jae    0x4228db
  4228f9:	pushf  
  4228fa:	or     eax,0x98b48a9
  4228ff:	loopne 0x422962
  422901:	daa    
  422902:	repz rcr BYTE PTR cs:[eax],cl
  422906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422907:	test   al,0xc2
  422909:	or     eax,0x916329d1
  42290e:	ret    
  42290f:	mov    eax,esi
  422911:	inc    ecx
  422912:	shr    BYTE PTR [esi+0x4ebddeae],cl
  422918:	push   cs
  422919:	push   ebx
  42291a:	push   ecx
  42291b:	scas   eax,DWORD PTR es:[edi]
  42291c:	call   0x82de99a0
  422921:	xchg   edx,eax
  422922:	mov    al,0xa1
  422924:	cs pop es
  422926:	retf   
  422927:	stos   DWORD PTR es:[edi],eax
  422928:	cmp    esp,DWORD PTR [edx+eax*1-0x2548ed5b]
  42292f:	jp     0x4228d6
  422931:	sar    ch,1
  422933:	or     al,BYTE PTR [ebx+0x16]
  422936:	add    BYTE PTR [eax-0x4a],ch
  422939:	in     eax,0xe4
  42293b:	and    ch,dh
  42293d:	repnz sbb esp,edi
  422940:	mov    bl,0x1d
  422942:	(bad)  [ecx+0x79]
  422945:	pop    esp
  422946:	push   ds
  422947:	jns    0x42294e
  422949:	sub    BYTE PTR [ebx+esi*4],cl
  42294c:	adc    bl,ah
  42294e:	pop    ecx
  42294f:	or     DWORD PTR [ebp-0x48ed2862],esi
  422955:	push   esi
  422956:	mov    eax,DWORD PTR [eax-0x3a0f3b00]
  42295c:	(bad)  
  42295d:	stos   DWORD PTR es:[edi],eax
  42295e:	jne    0x422922
  422960:	push   es
  422961:	and    BYTE PTR [ebx+0x6eed679d],ah
  422967:	mov    WORD PTR [edx+0x295c52a1],cs
  42296d:	push   esi
  42296e:	mov    eax,0x585bfcae
  422973:	mov    al,0x23
  422975:	jp     0x4229e5
  422977:	call   0xdc704945
  42297c:	mov    ebx,0x82428baa
  422981:	jecxz  0x422941
  422983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422984:	inc    eax
  422985:	mov    al,0x6c
  422987:	imul   ecx,esp,0xfe903717
  42298d:	fld    QWORD PTR [esi+0x22cc9e6f]
  422993:	jmp    0x4229bb
  422995:	call   0x4c082d23
  42299a:	fs inc esi
  42299c:	scas   al,BYTE PTR es:[edi]
  42299d:	cmc    
  42299e:	inc    esp
  42299f:	and    dh,BYTE PTR [edx-0x50c664a8]
  4229a5:	mov    al,ds:0x6de20ed4
  4229aa:	popa   
  4229ab:	mov    bh,0xf5
  4229ad:	in     eax,dx
  4229ae:	mov    ch,0xce
  4229b0:	test   BYTE PTR [esi],dl
  4229b2:	inc    esp
  4229b3:	popa   
  4229b4:	inc    ebx
  4229b5:	mov    edi,0xd735fcbb
  4229ba:	rcr    DWORD PTR ds:0xd2afe76f,1
  4229c0:	inc    edi
  4229c1:	stos   DWORD PTR es:[edi],eax
  4229c2:	cmp    al,0x6d
  4229c4:	cmp    esi,DWORD PTR [eax+esi*4]
  4229c7:	add    eax,0x135e09d
  4229cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229cd:	out    0x1c,al
  4229cf:	jmp    FWORD PTR [edx-0x4f27053]
  4229d5:	fidivr DWORD PTR [ebx-0x43eb93f7]
  4229db:	cmp    esi,esi
  4229dd:	jbe    0x422981
  4229df:	jmp    0x4229e5
  4229e1:	xchg   ebp,eax
  4229e2:	cld    
  4229e3:	or     ebp,0xffffffc7
  4229e6:	push   ecx
  4229e7:	push   cs
  4229e8:	test   DWORD PTR [ecx+0x3c],ecx
  4229eb:	rcl    DWORD PTR [ebx+0x16],0x70
  4229ef:	lea    ebp,[ecx-0x46052209]
  4229f5:	inc    edx
  4229f6:	sub    al,0xc7
  4229f8:	es jbe 0x4229cd
  4229fb:	or     DWORD PTR [ebx+ebx*8-0x160be714],edi
  422a02:	out    dx,eax
  422a03:	jge    0x422a77
  422a05:	and    eax,0xe31648f2
  422a0a:	sbb    ebp,DWORD PTR [edx-0x9]
  422a0d:	cmp    ecx,DWORD PTR [ecx+0x0]
	...
  422a18:	add    BYTE PTR [eax],al
  422a1a:	mov    al,0xe3
  422a1c:	pop    edx
  422a1d:	jecxz  0x422a7a
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	cdq    
  422a27:	ins    DWORD PTR es:[edi],dx
  422a28:	ins    DWORD PTR es:[edi],dx
  422a29:	xchg   ch,dl
  422a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a2c:	add    DWORD PTR [eax],eax
  422a2e:	std    
  422a2f:	add    DWORD PTR [eax],eax
  422a31:	add    BYTE PTR [edx+0x17],bh
  422a34:	add    esi,DWORD PTR [ebx+0x39]
  422a37:	push   ebx
  422a38:	aam    0x2d
  422a3a:	(bad)
  422a3d:	aad    0x17
  422a3f:	popa   
  422a40:	or     edx,0xffffff9b
  422a43:	fld    QWORD PTR [edi-0x8]
  422a46:	in     eax,0xff
  422a48:	shr    DWORD PTR [ecx],1
  422a4a:	push   edx
  422a4b:	jbe    0x422a49
  422a4d:	push   eax
  422a4e:	pop    edx
  422a4f:	cwde   
  422a50:	popf   
  422a51:	xchg   ebx,eax
  422a52:	fst    DWORD PTR [eax]
  422a54:	repnz mov ch,0xc6
  422a57:	push   edx
  422a58:	push   edx
  422a59:	pop    ss
  422a5a:	jo     0x422aa5
  422a5c:	push   ds
  422a5d:	mov    WORD PTR [esi-0x1a],ss
  422a60:	out    dx,eax
  422a61:	sbb    DWORD PTR [ebx+0x59e8a920],0x5a
  422a68:	cmp    bl,BYTE PTR [esi+0x5c5d99be]
  422a6e:	cld    
  422a6f:	in     eax,0x5c
  422a71:	mov    ebx,0xa91a71ca
  422a76:	sub    dl,BYTE PTR [edx+eiz*2]
  422a79:	sahf   
  422a7a:	mov    BYTE PTR [ebx+0x6c],0xb5
  422a7e:	mov    al,0xa6
  422a80:	mov    ebx,0x27c2fdf9
  422a85:	xor    al,0x40
  422a87:	jae    0x422a18
  422a89:	add    eax,0x92700c1a
  422a8e:	push   edi
  422a8f:	mov    esi,0x845c570f
  422a94:	leave  
  422a95:	push   esp
  422a96:	jmp    0x4324:0x6c37bd52
  422a9d:	mov    esi,0xf4abc906
  422aa2:	loop   0x422b0e
  422aa4:	push   edi
  422aa5:	adc    ch,bl
  422aa7:	aam    0x24
  422aa9:	mov    dl,0x8c
  422aab:	dec    ecx
  422aac:	(bad)
  422aaf:	rcl    DWORD PTR [edx-0x2b],1
  422ab2:	or     bh,BYTE PTR [ecx+0x61]
  422ab5:	in     eax,0xd4
  422ab7:	or     al,ch
  422ab9:	rol    BYTE PTR [ebx],1
  422abb:	(bad)  
  422abc:	(bad)  
  422abd:	out    dx,al
  422abe:	in     eax,dx
  422abf:	jns    0x422aa8
  422ac1:	and    ch,BYTE PTR [eax-0x356f09ed]
  422ac7:	call   0xfb17:0xea8ccd9c
  422ace:	pop    ds
  422acf:	aam    0xb8
  422ad1:	aad    0x6c
  422ad3:	xchg   edi,eax
  422ad4:	jp     0x422abd
  422ad6:	mov    ah,0xf5
  422ad8:	inc    ebx
  422ad9:	mov    fs,WORD PTR [ebp-0x33]
  422adc:	push   eax
  422add:	and    ah,BYTE PTR [eax+0x2713470c]
  422ae3:	sar    DWORD PTR [ebx-0x31],1
  422ae6:	inc    eax
  422ae7:	xchg   edx,eax
  422ae8:	push   esi
  422ae9:	jmp    0x422a80
  422aeb:	dec    eax
  422aec:	jmp    0x422a9b
  422aee:	scas   al,BYTE PTR es:[edi]
  422aef:	imul   esp,ebp,0x79
  422af2:	fbstp  TBYTE PTR [edx+eiz*2+0x43]
  422af6:	into   
  422af7:	and    DWORD PTR [eax],0x2d8060fe
  422afd:	addr16 inc ecx
  422aff:	ds fsubrp st(5),st
  422b02:	add    eax,0x59aa9c1f
  422b07:	ret    0x64f3
  422b0a:	xchg   edx,ecx
  422b0c:	mov    ds:0x59d41ef8,al
  422b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b12:	sahf   
  422b13:	test   eax,0xde99b35c
  422b18:	cli    
  422b19:	call   FWORD PTR [ebp+0x6]
  422b1c:	enter  0x1783,0x3a
  422b20:	cmp    DWORD PTR ds:0x75eb71eb,ebx
  422b26:	mul    DWORD PTR [ecx]
  422b28:	dec    eax
  422b29:	dec    esp
  422b2a:	jbe    0x422ab8
  422b2c:	js     0x422b01
  422b2e:	xor    edx,DWORD PTR [edi-0x40]
  422b31:	or     eax,0x2dfc2e7e
  422b36:	sbb    al,0x48
  422b38:	mov    ecx,0xee553ce0
  422b3d:	ror    BYTE PTR [edx+edx*4+0x5e],1
  422b41:	mov    ecx,0x610e1771
  422b46:	(bad)  
  422b47:	jmp    0x72e4:0xb6dbde9d
  422b4e:	mov    ch,0xf5
  422b50:	daa    
  422b51:	clc    
  422b52:	sub    ah,BYTE PTR [edx+0x68e7f2d]
  422b58:	pushf  
  422b59:	xor    bh,0xb3
  422b5c:	or     DWORD PTR [eax-0x57],esp
  422b5f:	inc    ebx
  422b60:	cmp    eax,0x77381dde
  422b65:	cmp    DWORD PTR [edx],ebx
  422b67:	stc    
  422b68:	sbb    eax,0x3dfdfafb
  422b6d:	add    dh,BYTE PTR [edi+0xa]
  422b70:	jmp    0x422b0c
  422b72:	mov    dh,0x55
  422b74:	mov    WORD PTR ds:0x66da81ef,?
  422b7a:	loopne 0x422b84
  422b7c:	pop    ds
  422b7d:	xor    DWORD PTR [edx-0x4343311f],eax
  422b83:	iret   
  422b84:	je     0x422bd9
  422b86:	xor    eax,0xd536919f
  422b8b:	loope  0x422bee
  422b8d:	js     0x422b7d
  422b8f:	jns    0x422b49
  422b91:	dec    edi
  422b92:	stos   BYTE PTR es:[edi],al
  422b93:	adc    al,0x67
  422b95:	iret   
  422b96:	lods   al,BYTE PTR ds:[esi]
  422b97:	mov    ch,0x81
  422b99:	test   eax,0xdfec556b
  422b9e:	sub    esp,DWORD PTR [edx+0x41ef7ea1]
  422ba4:	ins    DWORD PTR es:[edi],dx
  422ba5:	jo     0x422b28
  422ba7:	mov    al,BYTE PTR [eax-0x41]
  422baa:	or     ebx,DWORD PTR es:[edi+eax*8]
  422bae:	imul   edx,DWORD PTR [ebp+0x3027a10b],0x905bb310
  422bb8:	cmp    ebp,DWORD PTR [ebx]
  422bba:	fs loopne 0x422b7a
  422bbd:	ja     0x422c11
  422bbf:	xor    bh,BYTE PTR [ebx-0x1f]
  422bc2:	shl    DWORD PTR [ecx+0x34],0x48
  422bc6:	jo     0x422b72
  422bc8:	adc    BYTE PTR [eax-0x9],al
  422bcb:	jae    0x422b58
  422bcd:	push   DWORD PTR [edx+eiz*1+0x7f]
  422bd1:	data16 fmul QWORD PTR [ecx+0x7600f8ae]
  422bd8:	les    ebx,FWORD PTR ds:0xe5219c09
  422bde:	(bad)  
  422bdf:	fcmovb st,st(0)
  422be1:	pop    esp
  422be2:	fiadd  DWORD PTR [edi+ebx*2-0x49]
  422be6:	cmc    
  422be7:	repz fmul st(3),st
  422bea:	mov    ds:0x870ffd1a,eax
  422bef:	xor    al,0xc5
  422bf1:	sbb    eax,0x6fd34912
  422bf6:	retf   
  422bf7:	cdq    
  422bf8:	enter  0x982,0x81
  422bfc:	cld    
  422bfd:	es add al,0x22
  422c00:	mov    dh,0x9e
  422c02:	shl    DWORD PTR ds:[edx],cl
  422c05:	xchg   esp,eax
  422c06:	fldz   
  422c08:	setg   BYTE PTR [edi]
  422c0b:	cmp    DWORD PTR [ebx+edx*4],0xffffffec
  422c0f:	xchg   edi,eax
  422c10:	xlat   BYTE PTR ds:[ebx]
  422c12:	out    0x3,eax
  422c14:	xor    bh,dl
  422c16:	aam    0x3d
  422c18:	ret    0x301c
  422c1b:	dec    edi
  422c1c:	outs   dx,DWORD PTR ds:[esi]
  422c1d:	clc    
  422c1e:	mov    al,ds:0x1678828a
  422c23:	jne    0x422bb2
  422c25:	sub    BYTE PTR [esi-0x27427785],dh
  422c2b:	ss xchg esi,eax
  422c2d:	pop    edx
  422c2e:	pop    es
	...
  422c37:	add    BYTE PTR [eax],al
  422c39:	add    BYTE PTR ds:0xbf06168e,dh
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    ecx,DWORD PTR [ebx-0x2d033173]
  422c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4c:	add    DWORD PTR [eax],eax
  422c4e:	std    
  422c4f:	add    DWORD PTR [eax],eax
  422c51:	add    BYTE PTR [esp+ebp*4],ah
  422c54:	je     0x422c05
  422c56:	loop   0x422c34
  422c58:	jge    0x422c96
  422c5a:	xchg   ebp,eax
  422c5b:	cwde   
  422c5c:	mov    dh,BYTE PTR [ebx]
  422c5e:	(bad)  
  422c5f:	pop    esp
  422c60:	daa    
  422c61:	mov    ch,0xb1
  422c63:	clc    
  422c64:	jae    0x422c14
  422c66:	mov    bh,0x6
  422c68:	hlt    
  422c69:	call   0xd271be9a
  422c6e:	dec    edx
  422c6f:	mov    bl,0x3e
  422c71:	mov    dh,0xb8
  422c73:	mov    ebp,0x84be2c24
  422c78:	call   0xb34663d0
  422c7d:	cmp    eax,0x802634e3
  422c82:	lea    edi,[ecx]
  422c84:	and    bh,BYTE PTR [edi]
  422c86:	out    0x5e,al
  422c88:	lea    eax,[edx]
  422c8a:	nop
  422c8b:	xchg   BYTE PTR [edx-0xf0a7349],dl
  422c91:	push   ebx
  422c92:	popa   
  422c93:	div    BYTE PTR ds:0xb50bc39
  422c99:	jne    0x422c69
  422c9b:	jb     0x422cb4
  422c9d:	bound  ebp,QWORD PTR ds:0xd15de0f2
  422ca3:	push   ds
  422ca4:	leave  
  422ca5:	sub    al,0x5b
  422ca7:	enter  0x8b28,0x9c
  422cab:	mov    ds:0xebf7264c,eax
  422cb0:	js     0x422cb9
  422cb2:	call   0xd30e:0x84ed714
  422cb9:	rcr    BYTE PTR [ecx],cl
  422cbb:	and    eax,0x8a751d17
  422cc0:	(bad)  
  422cc1:	and    ebp,DWORD PTR ds:0xbcedfb9c
  422cc7:	pop    esp
  422cc8:	icebp  
  422cc9:	clc    
  422cca:	dec    ecx
  422ccb:	les    eax,FWORD PTR [ecx-0x1943fa98]
  422cd1:	test   eax,0xf193fc65
  422cd6:	cmp    bl,BYTE PTR [edx]
  422cd8:	aaa    
  422cd9:	and    esi,0xffffffc6
  422cdc:	rcr    BYTE PTR [edx-0x5903509e],0x76
  422ce3:	call   DWORD PTR [ebx-0x15]
  422ce6:	push   ebx
  422ce7:	or     DWORD PTR [ebx+0x2d],0xb763173
  422cee:	or     eax,0xe9b51d69
  422cf3:	add    BYTE PTR [ebx-0x1],dh
  422cf6:	mov    al,0x64
  422cf8:	and    DWORD PTR [esi],eax
  422cfa:	add    edx,DWORD PTR [esi+0x5ad2bc7a]
  422d00:	scas   eax,DWORD PTR es:[edi]
  422d01:	mov    al,ds:0xfc7a748b
  422d06:	jge    0x422d26
  422d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d09:	pop    ebp
  422d0a:	xlat   BYTE PTR ds:[ebx]
  422d0b:	hlt    
  422d0c:	adc    eax,0x5ebc1e82
  422d11:	outs   dx,BYTE PTR ds:[esi]
  422d12:	cmp    eax,0x904124e6
  422d17:	ret    
  422d18:	popa   
  422d19:	add    DWORD PTR [esi-0x76bfb060],esi
  422d1f:	fcom   st(2)
  422d21:	xchg   BYTE PTR [ebp-0x22],bh
  422d24:	shl    DWORD PTR [ecx+ecx*1],cl
  422d27:	daa    
  422d28:	icebp  
  422d29:	rcr    BYTE PTR [eax+0x7a266f16],0x36
  422d30:	addr16 (bad) 
  422d33:	mov    DWORD PTR [ecx+0x22ebbcc2],ecx
  422d39:	sbb    eax,0x9decf37f
  422d3e:	cmp    DWORD PTR [edi+0x37],edi
  422d41:	repnz pop eax
  422d43:	ror    bh,cl
  422d45:	das    
  422d46:	lods   eax,DWORD PTR ds:[esi]
  422d47:	fimul  WORD PTR [eax-0x6c]
  422d4a:	xchg   ah,dh
  422d4c:	jecxz  0x422d37
  422d4e:	retf   
  422d4f:	xor    edx,DWORD PTR [esi+eiz*1+0x704bcefa]
  422d56:	lock xchg ebp,eax
  422d58:	aaa    
  422d59:	aas    
  422d5a:	adc    eax,0x1e327e57
  422d5f:	jp     0x422d77
  422d61:	adc    ah,BYTE PTR [eax]
  422d63:	fs hlt 
  422d65:	(bad)  
  422d66:	bound  esp,QWORD PTR [ecx]
  422d68:	daa    
  422d69:	imul   ecx,ebx,0x94626f15
  422d6f:	scas   al,BYTE PTR es:[edi]
  422d70:	mov    ah,0x6d
  422d72:	cmc    
  422d73:	in     al,0x2
  422d75:	(bad)  
  422d76:	jo     0x422da3
  422d78:	scas   eax,DWORD PTR es:[edi]
  422d79:	pop    es
  422d7a:	in     eax,0x1a
  422d7c:	jmp    0xed9fa8d9
  422d81:	inc    ecx
  422d82:	or     al,0xcd
  422d84:	mov    DWORD PTR [edx-0x6a],0x4e2d9e96
  422d8b:	call   0x2e0cdbcb
  422d90:	xchg   edi,eax
  422d91:	sub    esp,DWORD PTR [eax]
  422d93:	xchg   ebx,eax
  422d94:	std    
  422d95:	pop    esi
  422d96:	push   ds
  422d97:	jo     0x422dde
  422d99:	in     eax,0x94
  422d9b:	out    dx,al
  422d9c:	retf   
  422d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d9e:	push   cs
  422d9f:	or     ecx,DWORD PTR [esi-0x45]
  422da2:	cwde   
  422da3:	addr16 inc edx
  422da5:	mov    ds:0x13bc5c75,eax
  422daa:	out    dx,eax
  422dab:	pop    es
  422dac:	sbb    ebx,esi
  422dae:	in     eax,0xc9
  422db0:	adc    ebp,esp
  422db2:	ins    DWORD PTR es:[edi],dx
  422db3:	cmp    al,0x1e
  422db5:	jae    0x422dd0
  422db7:	icebp  
  422db8:	inc    eax
  422db9:	test   ch,bh
  422dbb:	sbb    eax,0xd3a82da6
  422dc0:	sbb    BYTE PTR [ebx],cl
  422dc2:	dec    ecx
  422dc3:	inc    esi
  422dc4:	pop    ebp
  422dc5:	fcom   QWORD PTR [ebx-0x2c97d639]
  422dcb:	mov    ebp,0x88cc55c
  422dd0:	sub    bl,dl
  422dd2:	lds    ebp,FWORD PTR [eax+0x56]
  422dd5:	jp     0x422d75
  422dd7:	imul   edi,DWORD PTR [eax],0x130a2424
  422ddd:	out    0xb7,eax
  422ddf:	sbb    eax,0x5f1d6dc9
  422de4:	aaa    
  422de5:	aaa    
  422de6:	xchg   ebx,eax
  422de7:	cmp    BYTE PTR [esi-0x5d],dl
  422dea:	inc    ebx
  422deb:	cmp    cl,ah
  422ded:	or     esp,ebp
  422def:	mov    ecx,0xa8cf48ac
  422df4:	pop    eax
  422df5:	retf   0x43e6
  422df8:	push   cs
  422df9:	add    ch,BYTE PTR [esi]
  422dfb:	jne    0x422dde
  422dfd:	add    BYTE PTR [ebp-0x41],bl
  422e00:	mov    eax,0x33566e6e
  422e05:	ret    0xaa9
  422e08:	jb     0x422dad
  422e0a:	int3   
  422e0b:	(bad)  
  422e0d:	xor    ch,BYTE PTR [ebx-0x53082d66]
  422e13:	and    eax,0xfa1f7a02
  422e18:	test   al,0x37
  422e1a:	add    ebp,ebx
  422e1c:	sbb    BYTE PTR [ecx-0x21392e34],ah
  422e22:	add    BYTE PTR [esi-0x4c2951a],dh
  422e28:	inc    ebp
  422e29:	cmc    
  422e2a:	lods   al,BYTE PTR ds:[esi]
  422e2b:	xor    BYTE PTR [esi-0x117e6782],0xd9
  422e32:	(bad)  
  422e34:	mov    eax,ds:0xd05f359d
  422e39:	jmp    0x422eb8
  422e3b:	inc    eax
  422e3c:	xchg   ebp,eax
  422e3d:	shr    esi,cl
  422e3f:	cmp    ebp,DWORD PTR [eax-0x53b0fba0]
  422e45:	and    DWORD PTR [esi+0x68eeac17],ebp
  422e4b:	pop    ecx
  422e4c:	loopne 0x422e11
  422e4e:	push   esp
	...
  422e57:	add    BYTE PTR [eax],al
  422e59:	add    cl,bh
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi-0x64e9013c]
  422e68:	dec    edx
  422e69:	out    0xcf,eax
  422e6b:	test   al,0x1
  422e6d:	add    ch,bh
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    BYTE PTR [eax+0x26],dl
  422e74:	add    eax,0xe42d4b21
  422e79:	mov    ah,0xd2
  422e7b:	inc    ecx
  422e7c:	js     0x422ef8
  422e7e:	or     al,0x89
  422e80:	(bad)  
  422e81:	out    0x62,eax
  422e83:	push   ecx
  422e84:	outs   dx,DWORD PTR ds:[esi]
  422e85:	aas    
  422e86:	sbb    al,0xa7
  422e88:	test   al,0xa6
  422e8a:	cdq    
  422e8b:	loopne 0x422eb9
  422e8d:	scas   al,BYTE PTR es:[edi]
  422e8e:	pop    ds
  422e8f:	jle    0x422e4c
  422e91:	adc    di,WORD PTR [edi+esi*2+0x29]
  422e96:	int    0xca
  422e98:	pusha  
  422e99:	in     eax,0x80
  422e9b:	pushf  
  422e9c:	std    
  422e9d:	std    
  422e9e:	push   ebp
  422e9f:	or     eax,esp
  422ea1:	call   0xdda7af2a
  422ea6:	xchg   esi,eax
  422ea7:	xchg   DWORD PTR [edx+0x1743920a],esp
  422ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422eae:	mov    edi,0x4a93539e
  422eb3:	out    dx,al
  422eb4:	jmp    0xbf10994e
  422eb9:	mov    eax,eax
  422ebb:	mov    BYTE PTR [ebp-0x10],dl
  422ebe:	pop    esp
  422ebf:	cwde   
  422ec0:	call   0x1c25:0x3d43b64
  422ec7:	pushf  
  422ec8:	stos   DWORD PTR es:[edi],eax
  422ec9:	mov    ds,WORD PTR [edx+0x67]
  422ecc:	int3   
  422ecd:	mov    ds:0xb3aca2b1,eax
  422ed2:	ins    DWORD PTR es:[edi],dx
  422ed3:	das    
  422ed4:	icebp  
  422ed5:	mov    BYTE PTR [edx],0xa2
  422ed8:	shr    cl,1
  422eda:	inc    eax
  422edb:	jne    0x422ed7
  422edd:	push   esi
  422ede:	mov    ah,0x17
  422ee0:	in     al,0x23
  422ee2:	cs jl  0x422ed4
  422ee5:	(bad)  
  422ee6:	mov    esi,0x884a510a
  422eeb:	adc    eax,ecx
  422eed:	cmp    cl,bl
  422eef:	xchg   edi,eax
  422ef0:	outs   dx,DWORD PTR ds:[esi]
  422ef1:	sar    cl,1
  422ef3:	jbe    0x422f2c
  422ef5:	out    dx,al
  422ef6:	addr16 lahf 
  422ef8:	int    0x81
  422efa:	mov    eax,0xc6de72d1
  422eff:	push   ss
  422f00:	sub    eax,0xfd0a2eb0
  422f05:	xor    eax,0xbf113836
  422f0a:	cmp    ch,BYTE PTR [ebx+0x7d]
  422f0d:	das    
  422f0e:	or     cl,dh
  422f10:	outs   dx,DWORD PTR ds:[esi]
  422f11:	and    bl,BYTE PTR [eax]
  422f13:	mov    bh,0xbf
  422f15:	daa    
  422f16:	cs aam 0x5c
  422f19:	ss je  0x422f34
  422f1c:	int    0xda
  422f1e:	dec    edx
  422f1f:	scas   eax,DWORD PTR es:[edi]
  422f20:	inc    edx
  422f21:	cmp    BYTE PTR [eax],dl
  422f23:	adc    bh,BYTE PTR [edi-0x39]
  422f26:	cmp    al,0x88
  422f28:	out    0x8,eax
  422f2a:	pop    edi
  422f2b:	out    0x53,eax
  422f2d:	jne    0x422f42
  422f2f:	push   edx
  422f30:	lds    esi,FWORD PTR [ecx]
  422f32:	aas    
  422f33:	ins    DWORD PTR es:[edi],dx
  422f34:	cs clc 
  422f36:	sahf   
  422f37:	popf   
  422f38:	mov    ch,BYTE PTR [eax-0x4348136d]
  422f3e:	jb     0x422f01
  422f40:	adc    al,0xd5
  422f42:	(bad)  
  422f43:	(bad)  
  422f44:	pop    edi
  422f45:	outs   dx,BYTE PTR ds:[esi]
  422f46:	mov    eax,0x2de77837
  422f4b:	xor    BYTE PTR [esi+eax*1],cl
  422f4e:	sbb    eax,0x9320e21a
  422f53:	(bad)  
  422f54:	loope  0x422ede
  422f56:	and    ah,bl
  422f58:	xchg   ebp,eax
  422f59:	test   al,0xed
  422f5b:	jmp    0x422f0d
  422f5d:	mov    edx,0x6efc5f88
  422f62:	aaa    
  422f63:	push   edx
  422f64:	xor    eax,0x7bd00e25
  422f69:	test   DWORD PTR [ebp+0x779c7e71],ecx
  422f6f:	cmp    bl,BYTE PTR [ecx]
  422f71:	sbb    DWORD PTR [ebx],eax
  422f73:	mov    esp,0xa9bdb435
  422f78:	xchg   esp,eax
  422f79:	or     eax,edi
  422f7b:	push   esi
  422f7c:	fistp  DWORD PTR [ecx+edi*1+0x7bb5295b]
  422f83:	inc    edx
  422f84:	outs   dx,DWORD PTR ds:[esi]
  422f85:	inc    edx
  422f86:	fidivr DWORD PTR [eax-0x56]
  422f89:	sub    ch,bl
  422f8b:	imul   ebx,DWORD PTR [edi+0x75],0xc882acfa
  422f92:	mov    BYTE PTR [eax+0x4aa18599],bh
  422f98:	dec    ebp
  422f99:	das    
  422f9a:	(bad)  
  422f9b:	mov    dl,0x3f
  422f9d:	push   ecx
  422f9e:	pop    esp
  422f9f:	rcl    BYTE PTR [edx-0x5134ad20],cl
  422fa5:	pop    ebp
  422fa6:	enter  0xd412,0x3
  422faa:	sub    edi,DWORD PTR [edx-0x23e0baf2]
  422fb0:	or     al,ch
  422fb2:	inc    esi
  422fb3:	sub    eax,0xa0f57584
  422fb8:	into   
  422fb9:	fild   WORD PTR [eax]
  422fbb:	sub    DWORD PTR [ebx],esp
  422fbd:	mov    ecx,0x6401d0f3
  422fc2:	push   0x13d9c222
  422fc7:	add    al,0xef
  422fc9:	ja     0x422f65
  422fcb:	sahf   
  422fcc:	jnp    0x422fb0
  422fce:	xchg   edx,eax
  422fcf:	(bad)  
  422fd1:	jl     0x422fca
  422fd3:	fisttp QWORD PTR [edi-0x3d37abbf]
  422fd9:	xchg   edi,eax
  422fda:	stos   DWORD PTR es:[edi],eax
  422fdb:	das    
  422fdc:	xlat   BYTE PTR ds:[ebx]
  422fdd:	pop    ebp
  422fde:	call   0x5710:0x6ad8293d
  422fe5:	inc    esi
  422fe6:	out    0x5d,eax
  422fe8:	jo     0x422ffa
  422fea:	out    dx,al
  422feb:	jnp    0x423050
  422fed:	addr16 inc ebx
  422fef:	(bad)
  422ff3:	popf   
  422ff4:	sahf   
  422ff5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  422ff7:	ficomp WORD PTR [eax-0x2dc1a6e2]
  422ffd:	hlt    
  422ffe:	inc    eax
  423000:	test   eax,0xf12d035
  423005:	xchg   ebp,eax
  423006:	xchg   BYTE PTR [ebx],al
  423008:	or     BYTE PTR [edi+0x12078294],0x20
  42300f:	dec    esp
  423010:	mov    esi,0xf87c348e
  423015:	mov    WORD PTR [edi+ecx*1+0x4c94bbc9],cs
  42301c:	sbb    al,0x44
  42301e:	mov    edi,0x18ee36f1
  423023:	sub    edx,DWORD PTR ds:0x3cfb8db7
  42302a:	fcomp  QWORD PTR [ebp+esi*4+0x43]
  42302e:	mov    dl,0x82
  423030:	ins    BYTE PTR es:[edi],dx
  423031:	les    ecx,FWORD PTR [ebx]
  423033:	(bad)  [esi]
  423035:	aas    
  423036:	inc    edi
  423037:	div    BYTE PTR [bx-0x27]
  42303b:	sbb    bh,al
  42303d:	in     al,0x21
  42303f:	hlt    
  423040:	jg     0x422fc3
  423042:	stos   BYTE PTR es:[edi],al
  423043:	inc    esi
  423044:	jecxz  0x422fc6
  423046:	and    BYTE PTR [ebx-0x14],ah
  423049:	mov    al,0x77
  42304b:	mov    bl,0x5f
  42304d:	pushf  
  42304e:	aas    
  42304f:	div    DWORD PTR [eax]
  423051:	add    bh,al
  423053:	dec    ebx
  423054:	or     cl,dl
  423056:	cmc    
  423057:	test   eax,0x58f838de
  42305c:	jns    0x423045
  42305e:	idiv   DWORD PTR [edi+0x75e64680]
  423064:	icebp  
  423065:	fs aaa 
  423067:	pop    ss
  423068:	mov    al,0x75
  42306a:	jge    0x4230de
  42306c:	test   ebp,edi
  42306e:	mov    al,ds:0x0
  423073:	add    BYTE PTR [eax],al
  423075:	add    BYTE PTR [eax],al
  423077:	add    BYTE PTR [eax],al
  423079:	add    dl,dh
  42307b:	rol    BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	sbb    eax,0xcc3b0101
  42308b:	stos   BYTE PTR es:[edi],al
  42308c:	add    DWORD PTR [eax],eax
  42308e:	std    
  42308f:	add    DWORD PTR [eax],eax
  423091:	add    dl,dl
  423093:	mov    ah,0x83
  423095:	jle    0x4230d3
  423097:	and    dl,ah
  423099:	icebp  
  42309a:	pop    ecx
  42309b:	push   edi
  42309c:	outs   dx,DWORD PTR ds:[esi]
  42309d:	iret   
  42309e:	push   ecx
  42309f:	sub    dh,BYTE PTR [eax]
  4230a1:	ficom  WORD PTR [ecx]
  4230a3:	mov    ah,0x71
  4230a5:	sbb    ch,BYTE PTR [ebx]
  4230a7:	mov    eax,0xa40ccb9
  4230ac:	push   edi
  4230ad:	jle    0x42305d
  4230af:	or     al,0x10
  4230b1:	add    DWORD PTR [eax+0x72],eax
  4230b4:	push   0xb022f2e3
  4230b9:	sahf   
  4230ba:	mov    edi,0xde5bd943
  4230bf:	xchg   ebp,eax
  4230c0:	in     al,dx
  4230c1:	sub    al,al
  4230c3:	fnstcw WORD PTR [eax+ebx*2-0x4f]
  4230c7:	xchg   ebp,eax
  4230c8:	out    dx,al
  4230c9:	xchg   esi,eax
  4230ca:	std    
  4230cb:	shl    BYTE PTR [edx],1
  4230cd:	int    0xa7
  4230cf:	adc    ebp,DWORD PTR ds:0x38cd3e07
  4230d5:	das    
  4230d6:	lods   al,BYTE PTR ds:[esi]
  4230d7:	mov    dh,bh
  4230d9:	sar    DWORD PTR [esi+0x3c0cde93],0x28
  4230e0:	dec    esp
  4230e1:	and    ecx,DWORD PTR [ebp-0x2e68b9f3]
  4230e7:	ss xchg esp,eax
  4230e9:	call   0x6a1f:0xd693ba5b
  4230f0:	fsubr  QWORD PTR [esi+0xb]
  4230f3:	fsub   QWORD PTR [edi-0x5aba9764]
  4230f9:	add    edi,eax
  4230fb:	outs   dx,BYTE PTR cs:[esi]
  4230fd:	cmc    
  4230fe:	push   edx
  4230ff:	xchg   ebx,eax
  423100:	mov    DWORD PTR [edi+ecx*4-0x7d],edx
  423104:	xor    eax,0x896b7e9e
  423109:	std    
  42310a:	sbb    bh,bh
  42310c:	push   ss
  42310d:	pop    ds
  42310e:	test   BYTE PTR [ecx-0x70],ch
  423111:	inc    edi
  423112:	pop    esp
  423113:	xchg   esi,eax
  423114:	stos   BYTE PTR es:[edi],al
  423115:	sbb    ecx,edx
  423117:	pop    ecx
  423118:	and    edx,0xbdefbb04
  42311e:	out    0x6b,eax
  423120:	sbb    ebp,edx
  423122:	call   0x3b7d86c8
  423127:	jne    0x4230c1
  423129:	mov    ds:0x52d7b3d,al
  42312e:	mov    dh,0x96
  423130:	push   0x97af81a7
  423135:	ss add al,0x5d
  423138:	inc    esp
  423139:	mov    eax,DWORD PTR [esi]
  42313b:	mov    edx,0xc9236b63
  423140:	clc    
  423141:	dec    esi
  423142:	or     eax,0x80247d78
  423147:	mov    dh,0x88
  423149:	stos   DWORD PTR es:[edi],eax
  42314a:	sub    eax,0x13966e63
  42314f:	sbb    esp,DWORD PTR [ecx]
  423151:	daa    
  423152:	jmp    0x666ce934
  423157:	arpl   WORD PTR [ebp-0x2b1f242],ax
  42315d:	sbb    dl,BYTE PTR [eax-0x1b]
  423160:	sub    eax,DWORD PTR [eax]
  423162:	das    
  423163:	cmc    
  423164:	push   edx
  423165:	pop    esp
  423166:	ror    BYTE PTR [ebx+ebx*1-0x69],cl
  42316a:	mov    WORD PTR [ebx+0x4f],es
  42316d:	or     eax,0x18f3a747
  423172:	add    ah,BYTE PTR ds:0x634a2722
  423178:	push   cs
  423179:	mov    bl,0xe8
  42317b:	mov    al,0x88
  42317d:	inc    esp
  42317e:	jae    0x423165
  423180:	sub    BYTE PTR [esi-0x6df9bd4e],bl
  423186:	sub    DWORD PTR [ebx-0x78],ebp
  423189:	pop    eax
  42318a:	clc    
  42318b:	inc    ebp
  42318c:	adc    eax,0x9d36386
  423191:	popf   
  423192:	jge    0x42317a
  423194:	enter  0x66e0,0xa1
  423198:	aas    
  423199:	and    bh,al
  42319b:	sbb    al,0xcf
  42319d:	jg     0x4231b3
  42319f:	retf   
  4231a0:	xor    dh,dh
  4231a2:	xchg   ebp,eax
  4231a3:	xchg   ebp,eax
  4231a4:	std    
  4231a5:	pop    esi
  4231a6:	lock sahf 
  4231a8:	call   0xcf6f:0x6229edb7
  4231af:	add    DWORD PTR [esi-0x54],ebp
  4231b2:	outs   dx,BYTE PTR ds:[esi]
  4231b3:	lea    edx,[eax-0x5a]
  4231b6:	add    ecx,DWORD PTR [edx+0x5]
  4231b9:	pop    edx
  4231ba:	aad    0xe
  4231bc:	mov    ds,WORD PTR [ebx+0x70e3796e]
  4231c2:	cmp    al,ah
  4231c4:	xchg   edx,eax
  4231c5:	cdq    
  4231c6:	popa   
  4231c7:	sbb    al,0x3b
  4231c9:	cmc    
  4231ca:	push   edx
  4231cb:	or     dl,BYTE PTR [edi-0xe9f1f5b]
  4231d1:	dec    esp
  4231d2:	dec    eax
  4231d3:	rcl    DWORD PTR [esi+eax*4],cl
  4231d6:	mov    ch,0x39
  4231d8:	les    edi,FWORD PTR [esi+0x7a]
  4231db:	(bad)  
  4231dc:	retf   0xb71b
  4231df:	mov    bl,0x14
  4231e1:	aas    
  4231e2:	pop    edx
  4231e3:	sub    BYTE PTR [ecx],0xc7
  4231e6:	into   
  4231e7:	and    DWORD PTR [eax+0x30],eax
  4231ea:	aad    0x59
  4231ec:	int3   
  4231ed:	lods   eax,DWORD PTR ds:[esi]
  4231ee:	ror    dh,0x4a
  4231f1:	push   edi
  4231f2:	scas   al,BYTE PTR es:[edi]
  4231f3:	cld    
  4231f4:	add    al,0xe7
  4231f6:	dec    ebx
  4231f7:	dec    edx
  4231f8:	stc    
  4231f9:	lock out dx,eax
  4231fb:	fild   QWORD PTR [ebp-0x76]
  4231fe:	clc    
  4231ff:	(bad)  
  423201:	mov    dl,0xe0
  423203:	pusha  
  423204:	in     al,0x43
  423206:	push   0xffffffc9
  423208:	cmp    DWORD PTR fs:[ebp-0x7d],esp
  42320c:	pushf  
  42320d:	sub    esi,DWORD PTR [ecx-0x7412511a]
  423213:	jge    0x4231e2
  423215:	das    
  423216:	mov    al,0xb3
  423218:	nop
  423219:	jp     0x42323f
  42321b:	jne    0x4231e3
  42321d:	shr    BYTE PTR [eax+ecx*4],cl
  423220:	outs   dx,BYTE PTR ds:[esi]
  423221:	inc    esp
  423222:	jne    0x4232a0
  423224:	push   ebx
  423225:	addr16 jns 0x423212
  423228:	test   eax,0xb4b2e4e6
  42322d:	(bad)  
  42322e:	fdiv   DWORD PTR [esi]
  423230:	and    eax,esi
  423232:	ret    
  423233:	les    ecx,FWORD PTR [esi+0x3e]
  423236:	sbb    al,0x14
  423238:	push   es
  423239:	ffreep st(6)
  42323b:	mov    es,eax
  42323d:	mov    WORD PTR [esi-0x33],gs
  423240:	call   0xc702:0xeb1a5c99
  423247:	fadd   DWORD PTR [edi]
  423249:	mov    eax,ds:0xa16714a
  42324e:	test   al,0x69
  423250:	and    eax,0x6e52c7e9
  423255:	jecxz  0x423286
  423257:	pop    ebp
  423258:	arpl   bp,sp
  42325a:	inc    esp
  42325b:	cmp    eax,DWORD PTR [ebx+0x36]
  42325e:	fadd   QWORD PTR [eax-0x1f]
  423261:	stos   DWORD PTR es:[edi],eax
  423262:	and    DWORD PTR [esi-0x32],esi
  423265:	dec    ebp
  423266:	xor    eax,0xdee0f4f6
  42326b:	adc    al,0x8d
  42326d:	push   ss
  42326e:	jno    0x423292
  423270:	mov    edx,?
  423272:	ret    0x4ffb
  423275:	fs mov bl,0x99
  423278:	ror    DWORD PTR [ecx],1
  42327a:	retf   0xab2a
  42327d:	fimul  DWORD PTR [ebp+0x5d]
  423280:	dec    eax
  423281:	xchg   esi,eax
  423282:	aam    0xf
  423284:	add    esi,DWORD PTR [edi+0x2096bd6]
  42328a:	bound  esp,QWORD PTR [ecx+0x29f137]
	...
  423298:	add    BYTE PTR [eax],al
  42329a:	inc    ebx
  42329b:	inc    ecx
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	dec    eax
  4232a7:	icebp  
  4232a8:	xor    dl,BYTE PTR [ecx]
  4232aa:	leave  
  4232ab:	lods   al,BYTE PTR ds:[esi]
  4232ac:	add    DWORD PTR [eax],eax
  4232ae:	std    
  4232af:	add    DWORD PTR [eax],eax
  4232b1:	add    cl,ah
  4232b3:	or     ch,cl
  4232b5:	cmp    al,0xba
  4232b7:	mov    ebp,0x97a512dd
  4232bc:	add    eax,0xf5fe45d6
  4232c1:	pop    edx
  4232c2:	outs   dx,DWORD PTR ds:[esi]
  4232c3:	dec    BYTE PTR [ebx+0x32]
  4232c6:	shr    edx,0xa4
  4232c9:	into   
  4232ca:	clc    
  4232cb:	out    dx,eax
  4232cc:	xchg   edi,eax
  4232cd:	xor    BYTE PTR [edi+0x41f43661],dh
  4232d3:	add    eax,eax
  4232d5:	fs into 
  4232d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232d8:	mov    dl,0x74
  4232da:	cwde   
  4232db:	mov    cl,0x19
  4232dd:	push   esi
  4232de:	push   ecx
  4232df:	inc    edi
  4232e0:	add    eax,0x2168901e
  4232e5:	imul   DWORD PTR ds:0xa4fef91
  4232eb:	inc    eax
  4232ec:	or     al,0x9e
  4232ee:	repz enter 0x412e,0xb8
  4232f3:	repz push ds
  4232f5:	dec    ebp
  4232f6:	clc    
  4232f7:	out    0x5d,eax
  4232f9:	add    eax,0xf811fc55
  4232fe:	outs   dx,BYTE PTR ds:[esi]
  4232ff:	mov    ebp,0xa222e5c
  423304:	das    
  423305:	fisttp QWORD PTR [ecx+ecx*2-0x2335da37]
  42330c:	mov    ah,BYTE PTR [ecx]
  42330e:	pop    ss
  42330f:	xor    ah,BYTE PTR [esp+eax*2+0x5f]
  423313:	loopne 0x423365
  423315:	mov    ah,0x16
  423317:	ret    0xa443
  42331a:	adc    eax,ebp
  42331c:	popf   
  42331d:	sbb    BYTE PTR [ebx-0x5ad21bc6],al
  423323:	adc    DWORD PTR [ebp-0x65],ebx
  423326:	xor    BYTE PTR [edx+ebp*8+0x29],ah
  42332a:	repz dec esi
  42332c:	inc    eax
  42332d:	and    eax,0xa4ed42dd
  423332:	pop    ds
  423333:	or     DWORD PTR [ecx+ebp*1],ebx
  423336:	pop    esp
  423337:	push   ebp
  423338:	sbb    BYTE PTR [esi+0x6e],dh
  42333b:	shl    BYTE PTR [ebp+0x61ca52cd],cl
  423341:	xor    eax,0x38f50738
  423346:	test   al,0x40
  423348:	or     edx,edx
  42334a:	mov    ds:0x4a55bbf4,eax
  42334f:	lds    ebx,FWORD PTR [ebp+0x1d]
  423352:	outs   dx,BYTE PTR ds:[esi]
  423353:	dec    esp
  423354:	js     0x4233ad
  423356:	js     0x423378
  423358:	scas   al,BYTE PTR es:[edi]
  423359:	stos   BYTE PTR es:[edi],al
  42335a:	dec    edi
  42335b:	icebp  
  42335c:	fild   QWORD PTR [ecx-0x62]
  42335f:	lea    ecx,[ecx+0x2f73de4c]
  423365:	pop    ecx
  423366:	pop    esp
  423367:	mov    al,0xc7
  423369:	mov    al,0x64
  42336b:	popf   
  42336c:	cld    
  42336d:	out    dx,eax
  42336e:	pop    esi
  42336f:	cmp    eax,0x6b6cae99
  423374:	adc    al,0x2f
  423376:	inc    esi
  423377:	jl     0x423368
  423379:	push   esp
  42337a:	jl     0x4233b5
  42337c:	adc    ecx,DWORD PTR [edi]
  42337e:	push   ecx
  42337f:	mov    dh,0xee
  423381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423382:	into   
  423383:	cld    
  423384:	add    BYTE PTR [edi+0x2d],ah
  423387:	loopne 0x423407
  423389:	add    DWORD PTR [edx-0x49c6cd29],ecx
  42338f:	outs   dx,DWORD PTR ds:[esi]
  423390:	and    ah,ah
  423392:	scas   al,BYTE PTR es:[edi]
  423393:	inc    esp
  423394:	push   ds
  423395:	push   ebx
  423396:	sub    dh,BYTE PTR [ebx+0x3d]
  423399:	xor    al,0x8c
  42339b:	ror    DWORD PTR [edx],1
  42339d:	pushf  
  42339e:	xor    bh,BYTE PTR cs:[ebx]
  4233a1:	ja     0x423408
  4233a3:	adc    eax,0x58321902
  4233a8:	jnp    0x4233bc
  4233aa:	fdiv   DWORD PTR [ebx-0x3a358a52]
  4233b0:	xlat   BYTE PTR ds:[ebx]
  4233b1:	cmp    eax,0x9878f708
  4233b6:	dec    eax
  4233b7:	push   0x49
  4233b9:	mov    si,0xfacb
  4233bd:	and    eax,0x4674ad8c
  4233c2:	clc    
  4233c3:	stos   DWORD PTR es:[edi],eax
  4233c4:	xchg   edi,eax
  4233c5:	ficomp DWORD PTR [esi+ebx*2-0x7e]
  4233c9:	jmp    0xff2b:0x3b41b94b
  4233d0:	cdq    
  4233d1:	sub    edi,ebp
  4233d3:	mov    ebx,0x850444f
  4233d8:	add    eax,0x9f5c37e9
  4233dd:	sbb    ebp,DWORD PTR [ebx]
  4233df:	cmc    
  4233e0:	(bad)  
  4233e1:	loope  0x4233e6
  4233e3:	call   0x4681:0x55f01d1a
  4233ea:	repnz sub edi,DWORD PTR [eax-0x1]
  4233ee:	or     ebx,DWORD PTR [ebp+0xe741021]
  4233f4:	ins    BYTE PTR es:[edi],dx
  4233f5:	xor    eax,0x3380a67d
  4233fa:	sbb    ch,BYTE PTR [esi-0x3a]
  4233fd:	dec    ebx
  4233fe:	adc    eax,0x78787e8
  423403:	mov    cl,0x18
  423405:	jne    0x4233cb
  423407:	mov    dl,0x6f
  423409:	popf   
  42340a:	loop   0x423487
  42340c:	out    0x36,eax
  42340e:	pop    esp
  42340f:	leave  
  423410:	adc    bl,BYTE PTR [ebx-0x1a]
  423413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423414:	pop    ebp
  423415:	shl    BYTE PTR [eax],0xe2
  423418:	int    0x9a
  42341a:	xor    eax,0xfd672aba
  42341f:	xor    al,0x8c
  423421:	lahf   
  423422:	jg     0x4233dc
  423424:	or     ebp,DWORD PTR es:[ecx+eiz*2-0x7fc5c14c]
  42342c:	xchg   BYTE PTR [edx-0x6c5e854b],bh
  423432:	and    esp,esi
  423434:	jge    0x42345f
  423436:	mov    dl,ch
  423438:	cmp    DWORD PTR [ebp+edx*8-0x451c447e],ebx
  42343f:	mov    bh,dl
  423441:	xor    edi,DWORD PTR [edi]
  423443:	call   0x5f0b0500
  423448:	(bad)  
  423449:	ins    DWORD PTR es:[edi],dx
  42344a:	pop    ecx
  42344b:	cmp    edi,edi
  42344d:	and    eax,0xcf12371d
  423452:	mov    dl,bl
  423454:	mov    edi,0x94c5f75f
  423459:	mov    WORD PTR [edx-0xd],fs
  42345c:	aam    0xbc
  42345e:	push   es
  42345f:	pushf  
  423460:	int3   
  423461:	ret    
  423462:	fwait
  423463:	call   0x836c:0xe69f0c61
  42346a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42346b:	sbb    ecx,esp
  42346d:	cmp    bl,BYTE PTR [ebx]
  42346f:	or     BYTE PTR [ecx+0x6ad1b756],bh
  423475:	call   0xc2e:0xa33569b7
  42347c:	lea    esp,[esi]
  42347e:	pop    ds
  42347f:	ret    0x7fe1
  423482:	jmp    0x42349a
  423484:	sub    dl,BYTE PTR [ebx+0x2d655b38]
  42348a:	paddsb mm6,mm6
  42348d:	(bad)  
  42348e:	arpl   WORD PTR [edi+eax*4+0x29],dx
  423492:	clc    
  423493:	xor    al,0x41
  423495:	retf   
  423496:	push   edx
  423497:	test   BYTE PTR [ecx-0x167d32ea],ch
  42349d:	mov    eax,ds:0x59bd2001
  4234a2:	dec    edx
  4234a3:	sub    eax,0x5d
  4234a6:	outs   dx,BYTE PTR ds:[esi]
  4234a7:	inc    eax
  4234a8:	mov    bl,0xba
  4234aa:	and    ah,BYTE PTR [ebx+0x9cd820]
	...
  4234b8:	add    BYTE PTR [eax],al
  4234ba:	mov    ebp,edx
  4234bc:	rcr    DWORD PTR [ebx],cl
  4234be:	repz cmp ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	popf   
  4234c7:	mov    ch,0x22
  4234c9:	cmp    esi,eax
  4234cb:	scas   al,BYTE PTR es:[edi]
  4234cc:	add    DWORD PTR [eax],eax
  4234ce:	std    
  4234cf:	add    DWORD PTR [eax],eax
  4234d1:	add    BYTE PTR [edx],ch
  4234d3:	sub    eax,0xffffffdd
  4234d6:	stos   DWORD PTR es:[edi],eax
  4234d7:	cld    
  4234d8:	xchg   ecx,eax
  4234d9:	xchg   edx,eax
  4234da:	or     BYTE PTR [ebp+0x63],bh
  4234dd:	xor    edi,DWORD PTR [ecx-0x54e3cdf3]
  4234e3:	fcom   DWORD PTR [eax]
  4234e5:	repz cmp bh,BYTE PTR [ebx]
  4234e8:	fild   WORD PTR [esi-0x43]
  4234eb:	div    BYTE PTR [ebx+eax*8]
  4234ee:	jmp    0x4234e4
  4234f0:	stos   BYTE PTR es:[edi],al
  4234f1:	stos   DWORD PTR es:[edi],eax
  4234f2:	add    eax,esp
  4234f4:	dec    esi
  4234f5:	stc    
  4234f6:	xchg   ebp,eax
  4234f7:	out    dx,eax
  4234f8:	mov    edx,0x4338b824
  4234fd:	mov    bl,0xc0
  4234ff:	and    al,0x1f
  423501:	cmc    
  423502:	fidivr WORD PTR [edi]
  423504:	inc    ecx
  423505:	fisubr WORD PTR [edx]
  423507:	cs push cs
  423509:	pop    eax
  42350a:	mov    ebx,DWORD PTR [edi*4+0x79c0e102]
  423511:	and    al,0x71
  423513:	sbb    ecx,DWORD PTR [esi]
  423515:	sar    edx,0xe
  423518:	cmp    ah,bh
  42351a:	jle    0x423580
  42351c:	mov    ebp,0x16470cf2
  423521:	and    ah,BYTE PTR [esi]
  423523:	mov    ds:0x3ab79476,al
  423528:	mov    eax,0xa2ab2a31
  42352d:	or     al,al
  42352f:	dec    eax
  423530:	jp     0x42350c
  423532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423533:	cmp    ecx,DWORD PTR [ecx+ebx*2+0x76]
  423537:	dec    ecx
  423538:	ficomp DWORD PTR [edi+0x6311a8ca]
  42353e:	loop   0x423556
  423540:	les    esp,FWORD PTR [edx-0x26]
  423543:	into   
  423544:	or     eax,0xaf7f9319
  423549:	cdq    
  42354a:	push   es
  42354b:	sbb    al,0x5f
  42354d:	add    eax,0x64dd164f
  423552:	aad    0x4b
  423554:	sbb    eax,0xc9570b50
  423559:	hlt    
  42355a:	out    0x8d,eax
  42355c:	icebp  
  42355d:	pop    ds
  42355e:	pop    es
  42355f:	ret    
  423560:	dec    edi
  423561:	jp     0x4235c1
  423563:	mov    edx,cs
  423565:	test   BYTE PTR [edx-0x21],dl
  423568:	pop    esp
  423569:	push   ss
  42356a:	push   0x41
  42356c:	push   edi
  42356d:	je     0x423572
  42356f:	mov    esi,0x4121104a
  423574:	imul   esi,DWORD PTR [edi],0x934c4be1
  42357a:	mov    WORD PTR [edi],cs
  42357c:	push   ecx
  42357d:	jg     0x423553
  42357f:	jae    0x42358f
  423581:	adc    dl,dh
  423583:	and    al,0xd0
  423585:	retf   0x8edb
  423588:	push   esi
  423589:	xchg   ecx,ecx
  42358b:	inc    esi
  42358c:	test   eax,0x357887d9
  423591:	rcl    esi,cl
  423593:	scas   eax,DWORD PTR es:[edi]
  423594:	int    0xe
  423596:	adc    BYTE PTR [esi-0x73],ch
  423599:	lahf   
  42359a:	es jecxz 0x4235ad
  42359d:	ins    WORD PTR es:[edi],dx
  42359f:	lahf   
  4235a0:	xchg   al,cl
  4235a2:	mov    bh,BYTE PTR [eax+0x5c]
  4235a5:	xchg   ebx,eax
  4235a6:	in     al,0x5b
  4235a8:	(bad)  
  4235a9:	cmp    al,0x14
  4235ab:	xchg   ebx,eax
  4235ac:	jle    0x423565
  4235ae:	pop    edi
  4235af:	inc    edi
  4235b0:	sub    al,0x5a
  4235b2:	dec    ebp
  4235b3:	push   eax
  4235b4:	rcl    BYTE PTR [ecx-0x4f7abc35],1
  4235ba:	sahf   
  4235bb:	mov    esp,0xcc401875
  4235c0:	fstp   TBYTE PTR [edi]
  4235c2:	iret   
  4235c3:	sbb    al,BYTE PTR [ecx+0x107ae5e6]
  4235c9:	mov    edx,0x67f2aaba
  4235ce:	mov    ds:0xacefddcf,eax
  4235d3:	adc    eax,0x2edfae44
  4235d8:	jp     0x42362f
  4235da:	scas   eax,DWORD PTR es:[edi]
  4235db:	nop
  4235dc:	xchg   ebx,eax
  4235dd:	jmp    0xb1036cda
  4235e2:	xchg   ecx,eax
  4235e3:	or     eax,0x201c80a7
  4235e8:	mov    ds:0x6742ac76,eax
  4235ed:	dec    ecx
  4235ee:	adc    esp,DWORD PTR [ecx]
  4235f0:	mov    BYTE PTR [esi+0x24805bcb],dh
  4235f6:	sbb    al,0x7b
  4235f8:	xchg   edx,eax
  4235f9:	mov    cl,BYTE PTR [esi-0x64]
  4235fc:	adc    eax,0x178999c9
  423601:	jb     0x423669
  423603:	stc    
  423604:	xor    DWORD PTR [ebx+0x38],ebx
  423607:	mul    DWORD PTR [ecx]
  423609:	sti    
  42360a:	sbb    DWORD PTR [edi+eax*8+0x3a],edx
  42360e:	xchg   ecx,eax
  423610:	leave  
  423611:	in     al,dx
  423612:	jg     0x423649
  423614:	xchg   edx,eax
  423615:	pushf  
  423616:	cmp    BYTE PTR [esi+ebx*8],ah
  423619:	jnp    0x4235d2
  42361b:	popa   
  42361c:	bound  edx,QWORD PTR [esi+ecx*4+0x4b]
  423620:	dec    ecx
  423621:	cwde   
  423622:	and    dl,BYTE PTR [ecx+eiz*8-0x2d]
  423626:	imul   eax,DWORD PTR [ebp+0x2b],0x78ff5c23
  42362d:	lock or al,0xe2
  423630:	fdivr  DWORD PTR [edi]
  423632:	rcr    DWORD PTR [edx+0x6540751],cl
  423638:	(bad)  
  423639:	xchg   edx,eax
  42363a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42363b:	sti    
  42363c:	out    dx,eax
  42363d:	jnp    0x4235f0
  42363f:	int3   
  423640:	jmp    0x917a:0x8212c94d
  423647:	mov    esp,0x51cfd106
  42364c:	leave  
  42364d:	stos   DWORD PTR es:[edi],eax
  42364e:	bound  esi,QWORD PTR [esi+eiz*4+0x32e2c8c3]
  423655:	fs addr16 fcos 
  423659:	dec    ebp
  42365a:	adc    BYTE PTR [eax],cl
  42365c:	mov    ch,0x3e
  42365e:	popf   
  42365f:	fild   DWORD PTR [ebx+0x65a460d]
  423665:	jecxz  0x4236e3
  423667:	inc    eax
  423668:	fwait
  423669:	mov    eax,0x20e31b0f
  42366e:	xor    DWORD PTR [edi+0x7d],ecx
  423671:	inc    ecx
  423672:	mov    esi,0x8a5e0e75
  423677:	mov    ds:0xe37e3bb6,eax
  42367c:	psubusb mm6,QWORD PTR [eax+0x34]
  423680:	js     0x4236c7
  423682:	sub    esi,DWORD PTR [ebp+0x503321ba]
  423688:	cmp    bl,BYTE PTR [edi]
  42368a:	add    dh,BYTE PTR cs:[ecx]
  42368d:	lods   al,BYTE PTR ds:[esi]
  42368e:	(bad)  
  42368f:	int    0xcb
  423691:	sub    al,0xbe
  423693:	mov    WORD PTR [ecx+edx*2],fs
  423696:	inc    esp
  423697:	mov    cl,0xd9
  423699:	push   esi
  42369a:	es pop es
  42369c:	jl     0x42370b
  42369e:	fwait
  42369f:	and    BYTE PTR [ebp-0x26c52547],0xaa
  4236a6:	adc    BYTE PTR [ebx-0x559566e2],dl
  4236ac:	xchg   DWORD PTR [ebx+eax*8+0xb],ecx
  4236b0:	sbb    edx,edx
  4236b2:	sbb    dh,BYTE PTR [ebx+ebp*2]
  4236b5:	sbb    BYTE PTR [ebx],al
  4236b7:	loope  0x42364f
  4236b9:	mov    cl,0x88
  4236bb:	aad    0x82
  4236bd:	daa    
  4236be:	adc    al,0x4c
  4236c0:	and    DWORD PTR [ebp-0x5e],esi
  4236c3:	pop    ds
  4236c4:	inc    edi
  4236c5:	or     al,0xb5
  4236c7:	leave  
  4236c8:	clc    
  4236c9:	push   0x255f5616
  4236ce:	pusha  
	...
  4236d7:	add    BYTE PTR [eax],al
  4236d9:	add    dl,dl
  4236db:	and    dl,BYTE PTR [esi-0x21410966]
  4236e1:	push   0x61
  4236e3:	push   cs
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	add    edi,esi
  4236e8:	das    
  4236e9:	outs   dx,DWORD PTR ds:[esi]
  4236ea:	ret    
  4236eb:	mov    al,0x1
  4236ed:	add    ch,bh
  4236ef:	add    DWORD PTR [eax],eax
  4236f1:	add    BYTE PTR [esi],bh
  4236f3:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236f5:	inc    eax
  4236f6:	(bad)  
  4236f7:	mov    ah,0x13
  4236f9:	sbb    DWORD PTR [eax+0xd67016],edx
  4236ff:	sub    al,0xbc
  423701:	gs jp  0x423771
  423704:	jmp    0x2146:0x492e9afb
  42370b:	add    BYTE PTR [ebp+ebx*8+0x43f9d5f3],ah
  423712:	mov    edx,DWORD PTR [ebx-0x42]
  423715:	outs   dx,BYTE PTR ds:[esi]
  423716:	xchg   ebx,eax
  423717:	mov    eax,ds:0xc61e4594
  42371c:	push   esi
  42371d:	ja     0x4236b9
  42371f:	fisttp WORD PTR [eax-0xf]
  423722:	xor    BYTE PTR [eax-0x4d],bl
  423725:	ins    DWORD PTR es:[edi],dx
  423726:	mov    eax,ds:0xae6eb395
  42372b:	ins    DWORD PTR es:[edi],dx
  42372c:	jge    0x4236d6
  42372e:	dec    esi
  42372f:	xchg   DWORD PTR [eax-0x11],ebx
  423732:	sbb    eax,0xcb652984
  423737:	cli    
  423738:	cmp    al,bl
  42373a:	aaa    
  42373b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42373c:	push   ebp
  42373d:	mov    ebx,0x8da4b3fc
  423742:	inc    edi
  423743:	loope  0x423766
  423745:	test   esi,0xab28529c
  42374b:	popa   
  42374c:	aas    
  42374d:	mov    esp,0xa875c9f9
  423752:	and    eax,0xc2e164f
  423757:	div    DWORD PTR [eax+0xac77c68]
  42375d:	add    DWORD PTR [edi],edi
  42375f:	jns    0x423743
  423761:	fnsave [edx-0x22]
  423764:	fld    st(5)
  423766:	or     ebx,0xe
  423769:	mov    dh,BYTE PTR [edx]
  42376b:	or     ch,BYTE PTR [eax-0x56]
  42376e:	jnp    0x42377b
  423770:	fdivr  QWORD PTR [eax]
  423772:	pop    esi
  423773:	push   ss
  423774:	ret    0x8dc7
  423777:	sbb    DWORD PTR [ecx+0x264d66ee],esp
  42377d:	pop    es
  42377e:	or     BYTE PTR [ecx],0x97
  423781:	test   BYTE PTR [edx-0x60526463],al
  423787:	adc    al,0x22
  423789:	or     DWORD PTR [edi+0x37],edx
  42378c:	lods   al,BYTE PTR ds:[esi]
  42378d:	or     al,0x7f
  42378f:	ja     0x4237dd
  423791:	dec    ecx
  423792:	push   edx
  423793:	stos   DWORD PTR es:[edi],eax
  423794:	pop    ebp
  423795:	das    
  423796:	retf   0x5ec8
  423799:	(bad)  
  42379a:	mov    dh,0x22
  42379c:	jae    0x423818
  42379e:	jge    0x423818
  4237a0:	pop    ebp
  4237a1:	nop
  4237a2:	out    0x7a,al
  4237a4:	(bad)  
  4237a5:	ficom  WORD PTR [eax+0x78]
  4237a8:	cmp    esp,DWORD PTR [edi-0x47]
  4237ab:	push   edi
  4237ac:	mov    ebx,0x86118fcd
  4237b1:	lahf   
  4237b2:	push   ebx
  4237b3:	test   al,bl
  4237b5:	jp     0x4237d7
  4237b7:	mov    ah,0x9c
  4237b9:	sti    
  4237ba:	jb     0x4237d5
  4237bc:	dec    ebp
  4237bd:	sbb    BYTE PTR [edi],ah
  4237bf:	outs   dx,BYTE PTR ds:[esi]
  4237c0:	sub    DWORD PTR [esi+0x6108e0fa],ebp
  4237c6:	sbb    esi,DWORD PTR [edx-0x4280c883]
  4237cc:	das    
  4237cd:	test   al,0x49
  4237cf:	rcl    eax,1
  4237d1:	ficomp WORD PTR [esi]
  4237d3:	bound  ebx,QWORD PTR [eax-0x16]
  4237d6:	push   edx
  4237d7:	push   eax
  4237d8:	pop    eax
  4237d9:	pop    ebp
  4237da:	pop    edx
  4237db:	adc    eax,ebx
  4237dd:	(bad)  
  4237de:	jp     0x423852
  4237e0:	jno    0x4237da
  4237e2:	or     al,0x7d
  4237e4:	sub    al,0x49
  4237e6:	loop   0x42378a
  4237e8:	div    edx
  4237ea:	xchg   edi,eax
  4237eb:	stos   DWORD PTR es:[edi],eax
  4237ec:	mov    ds:0x90adc992,al
  4237f1:	mov    ebx,0xc2f4ed06
  4237f6:	outs   dx,BYTE PTR ds:[esi]
  4237f7:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4237f9:	pop    eax
  4237fa:	adc    al,BYTE PTR [ecx+0x22]
  4237fd:	ss sub eax,0x5d66edc4
  423803:	xor    edi,DWORD PTR [ebx+0x7a]
  423806:	add    BYTE PTR [ecx-0x70],dl
  423809:	shr    DWORD PTR [ecx-0x1b],0x28
  42380d:	(bad)  
  42380e:	clc    
  42380f:	test   DWORD PTR [esi],edi
  423811:	inc    edi
  423812:	fisubr DWORD PTR [esi+ebx*4]
  423815:	popa   
  423816:	in     al,dx
  423817:	xchg   ebp,eax
  423818:	pop    ebp
  423819:	les    ecx,FWORD PTR [edi]
  42381b:	sbb    BYTE PTR [ebx],cl
  42381d:	out    0xac,eax
  42381f:	inc    ecx
  423820:	(bad)  
  423821:	retf   0x3551
  423824:	mov    eax,ds:0xb24a8ce3
  423829:	mov    bh,0x47
  42382b:	push   esp
  42382c:	std    
  42382d:	xor    ecx,DWORD PTR ds:0xb3ad4b8b
  423833:	or     dl,BYTE PTR [edx-0x42df0822]
  423839:	jae    0x42382c
  42383b:	xor    esp,DWORD PTR [ebx+0xc6e373]
  423841:	mov    al,0x66
  423843:	repnz pop edi
  423845:	aam    0xb4
  423847:	das    
  423848:	call   0x95a8f548
  42384d:	bound  ecx,QWORD PTR [ecx-0x46]
  423850:	jnp    0x423882
  423852:	aas    
  423853:	jge    0x4238d3
  423855:	int    0x81
  423857:	dec    edi
  423858:	pop    ecx
  423859:	push   ecx
  42385a:	fmul   st(7),st
  42385c:	fmul   DWORD PTR [edi+edx*1+0x79]
  423860:	rol    esp,0x5f
  423863:	hlt    
  423864:	push   ebp
  423865:	adc    ch,BYTE PTR [eax]
  423867:	mov    ds:0x4a3d8837,eax
  42386c:	jg     0x4238e0
  42386e:	dec    edi
  42386f:	data16 loopne 0x4238b5
  423872:	lea    ebp,[ebx+0x36]
  423875:	ror    BYTE PTR [ebx-0x4b6b8edb],0x13
  42387c:	fcomp  DWORD PTR [esi+eiz*2-0x44]
  423880:	pop    ds
  423881:	dec    edx
  423882:	pop    edi
  423883:	mov    DWORD PTR [edi],ebx
  423885:	outs   dx,BYTE PTR ds:[esi]
  423886:	sub    DWORD PTR [edx],ebp
  423888:	adc    al,0xbe
  42388a:	fidivr WORD PTR [ecx+0x281f101b]
  423890:	stc    
  423891:	or     edx,eax
  423893:	or     al,0x3d
  423895:	sbb    ah,al
  423897:	or     dh,ch
  423899:	aaa    
  42389a:	mov    ebp,0x8e40c384
  42389f:	call   0xf218:0x2a03866f
  4238a6:	inc    ebx
  4238a7:	cdq    
  4238a8:	lods   al,BYTE PTR ds:[esi]
  4238a9:	jnp    0x4238c5
  4238ab:	dec    esp
  4238ac:	stos   BYTE PTR es:[edi],al
  4238ad:	add    BYTE PTR [ecx-0x8],0xa2
  4238b1:	sbb    eax,0xb1e6b80d
  4238b6:	xchg   edi,eax
  4238b7:	nop
  4238b8:	outs   dx,DWORD PTR ds:[esi]
  4238b9:	(bad)  
  4238ba:	outs   dx,DWORD PTR ds:[esi]
  4238bb:	xor    eax,DWORD PTR [ebp+0x20]
  4238be:	imul   eax,DWORD PTR [ebx-0x3b73d1c8],0xfffffff7
  4238c5:	jmp    0x423869
  4238c7:	push   ds
  4238c8:	test   al,0xb3
  4238ca:	int3   
  4238cb:	(bad)  [edx+0x1f45feba]
  4238d1:	jmp    0xc8b0df62
  4238d6:	ret    0x64a9
  4238d9:	repnz cmp ebx,ebx
  4238dc:	sub    eax,0x5876d770
  4238e1:	jb     0x423882
  4238e3:	xchg   ebx,eax
  4238e4:	inc    ebp
  4238e5:	sub    eax,0xd43245b5
  4238ea:	nop
  4238eb:	fs mov ecx,0xd66b
	...
  4238f9:	add    ch,bl
  4238fb:	cmp    al,0x8f
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423907:	jle    0x4238cf
  423909:	mov    eax,eax
  42390b:	mov    dl,0x1
  42390d:	add    ch,bh
  42390f:	add    DWORD PTR [eax],eax
  423911:	add    BYTE PTR [edx],dh
  423913:	and    ch,al
  423915:	das    
  423916:	lds    edx,FWORD PTR [esi*2+0x6a3073c1]
  42391d:	or     edx,DWORD PTR es:[ebp-0x1bf3bb0c]
  423924:	call   0x92b3:0xbdf5df87
  42392b:	pop    esp
  42392c:	js     0x4238fb
  42392e:	or     BYTE PTR [eax+0x21],ah
  423931:	fcomp  QWORD PTR [esi]
  423933:	inc    esi
  423934:	pop    ebp
  423935:	push   ds
  423936:	xchg   eax,ebp
  423938:	mov    ds:0x8dbefa99,eax
  42393d:	xor    eax,esp
  42393f:	in     eax,dx
  423940:	dec    ebp
  423941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423942:	pop    ebx
  423943:	cmp    ebp,DWORD PTR [edx]
  423945:	or     DWORD PTR [edx+0x67],eax
  423948:	jns    0x423923
  42394a:	shl    DWORD PTR [ebx+0x6b],cl
  42394d:	pushf  
  42394e:	xor    BYTE PTR [ebp-0x35d75554],ah
  423954:	inc    esi
  423955:	(bad)  
  423957:	scas   al,BYTE PTR es:[edi]
  423958:	data16 fcom QWORD PTR [edx+edi*8]
  42395c:	add    BYTE PTR [ebx+0xc724716],al
  423962:	mov    ?,ebp
  423964:	lds    esp,FWORD PTR [ecx+0x40ec584f]
  42396a:	push   cs
  42396b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42396c:	inc    ecx
  42396d:	fstp   QWORD PTR [eax+0x4a]
  423970:	std    
  423971:	mov    esi,0x28668fb2
  423976:	adc    ebx,0xffffffa1
  423979:	push   ebx
  42397a:	es cdq 
  42397c:	mov    ah,0x96
  42397e:	add    al,0x85
  423980:	adc    eax,0xa930271e
  423985:	daa    
  423986:	retf   0x1866
  423989:	xor    bl,BYTE PTR [edx]
  42398b:	adc    eax,0x3f1ad697
  423990:	sub    eax,0x3822508a
  423995:	lock aad 0x5b
  423998:	test   al,0x40
  42399a:	(bad)  
  42399c:	inc    ecx
  42399d:	fdiv   DWORD PTR [ebx+0x1c]
  4239a0:	jmp    0x3cb634b4
  4239a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239a6:	mov    ecx,0x3ebd10f8
  4239ab:	mov    esi,0x4ebab1d
  4239b0:	push   ecx
  4239b1:	push   ss
  4239b2:	shl    cl,0x39
  4239b5:	dec    esp
  4239b6:	xor    DWORD PTR [ebp+0x68],edx
  4239b9:	adc    dh,ah
  4239bb:	sbb    al,0x87
  4239bd:	(bad)
  4239c0:	sub    eax,DWORD PTR [esi]
  4239c2:	and    edx,ebx
  4239c4:	xlat   BYTE PTR ds:[ebx]
  4239c5:	sub    DWORD PTR [esi+0x7b],0xf54faea2
  4239cc:	test   eax,0xe3ecf542
  4239d1:	lods   eax,DWORD PTR ds:[esi]
  4239d2:	rol    DWORD PTR [ecx+0x57],0x29
  4239d6:	or     dh,BYTE PTR [edx]
  4239d8:	stos   BYTE PTR es:[edi],al
  4239d9:	or     bl,BYTE PTR [edi+ebx*8-0x2af6b8ea]
  4239e0:	jmp    0x42399f
  4239e2:	sbb    BYTE PTR [ecx],bh
  4239e4:	(bad)  
  4239e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239e6:	xchg   edi,eax
  4239e7:	(bad)  
  4239e8:	dec    esp
  4239e9:	push   ebx
  4239ea:	out    dx,al
  4239eb:	xlat   BYTE PTR ds:[ebx]
  4239ec:	jmp    0xbd99:0xf049c1d4
  4239f3:	das    
  4239f4:	test   esi,eax
  4239f6:	xor    al,0xe2
  4239f8:	repnz fild QWORD PTR ds:0x119e6ceb
  4239ff:	xor    BYTE PTR [edx+0x79],cl
  423a02:	fidivr WORD PTR [ecx-0x7314735b]
  423a08:	pop    ebx
  423a09:	and    cl,dl
  423a0b:	fdivr  QWORD PTR [esi-0x1a1fdc7e]
  423a11:	xchg   esp,eax
  423a12:	jno    0x4239ec
  423a14:	lock cmp al,BYTE PTR [edx-0x47dee347]
  423a1b:	out    dx,al
  423a1c:	dec    ecx
  423a1d:	xchg   edx,eax
  423a1e:	xchg   esi,eax
  423a1f:	ror    ecx,cl
  423a21:	test   eax,edx
  423a23:	sub    bl,BYTE PTR [ebx+0x66]
  423a26:	xchg   ebx,eax
  423a27:	xor    ecx,ecx
  423a29:	out    0xb7,eax
  423a2b:	sub    BYTE PTR [edi],cl
  423a2d:	mov    ds,WORD PTR [eax-0x5cc47986]
  423a33:	jo     0x423a15
  423a35:	ins    BYTE PTR es:[edi],dx
  423a36:	mov    ebp,DWORD PTR ds:0x4cd7355f
  423a3c:	pop    ebp
  423a3d:	push   ss
  423a3e:	xor    edx,DWORD PTR [edx]
  423a40:	cmp    esp,DWORD PTR [ecx+0x3b9051e4]
  423a46:	or     ebp,DWORD PTR [eax+0x2f25e861]
  423a4c:	fbld   TBYTE PTR [edi+0x49288097]
  423a52:	dec    ecx
  423a53:	adc    al,0xf1
  423a55:	(bad)  
  423a56:	mov    eax,ds:0xec77056a
  423a5b:	rcl    BYTE PTR [ebx+0x5e],cl
  423a5e:	adc    BYTE PTR es:[ebp+0x3e4338b3],ah
  423a65:	mov    DWORD PTR [ebx-0x65],ecx
  423a68:	test   eax,0x6181180e
  423a6d:	sub    ecx,DWORD PTR [ebx+edi*1-0x2e56ef81]
  423a74:	mov    DWORD PTR [esi],ecx
  423a76:	xchg   ebp,eax
  423a77:	push   ebx
  423a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a79:	mov    BYTE PTR [edx-0x38],bl
  423a7c:	fs sbb al,0x4a
  423a7f:	adc    edx,DWORD PTR [eax-0xe]
  423a82:	add    al,0xfa
  423a84:	jmp    0xa62b9773
  423a89:	and    ecx,DWORD PTR [eax+0x49]
  423a8c:	push   eax
  423a8d:	out    0xff,al
  423a8f:	sbb    al,0xac
  423a91:	mov    BYTE PTR [ecx-0x1b],dh
  423a94:	and    edi,DWORD PTR [ecx+0x33]
  423a97:	ficom  WORD PTR [ebp+0x1485e4f2]
  423a9d:	xchg   edx,eax
  423a9e:	imul   ecx,ecx,0x2e
  423aa1:	dec    ebp
  423aa2:	dec    ebx
  423aa3:	sub    eax,0xf3279b9
  423aa8:	mov    bh,BYTE PTR [edx+0x62]
  423aab:	mov    eax,ds:0x5e8b278e
  423ab0:	or     DWORD PTR [edx],0xfffffff7
  423ab3:	pop    ebp
  423ab4:	fisttp QWORD PTR [ecx+0x66f8a5d2]
  423aba:	sahf   
  423abb:	ds xchg ecx,eax
  423abd:	or     al,0xc4
  423abf:	xchg   DWORD PTR [edx+0x6b],ebp
  423ac2:	inc    esi
  423ac3:	inc    ebp
  423ac4:	rol    dh,cl
  423ac6:	xchg   ecx,eax
  423ac7:	lods   al,BYTE PTR ds:[esi]
  423ac8:	icebp  
  423ac9:	dec    edx
  423aca:	xchg   BYTE PTR [esi+0x60],ah
  423acd:	sbb    BYTE PTR [edi],cl
  423acf:	pop    es
  423ad0:	inc    eax
  423ad1:	enter  0xeaff,0x39
  423ad5:	fild   QWORD PTR [edx]
  423ad7:	ss and eax,0xa2acc871
  423add:	mov    cs,WORD PTR [edi]
  423adf:	mov    ebx,0x93d51e7f
  423ae4:	add    ah,dl
  423ae6:	xchg   edi,eax
  423ae7:	iret   
  423ae8:	fsubr  DWORD PTR [eax-0xa8caaac]
  423aee:	lahf   
  423aef:	sub    eax,0xe2698ad3
  423af4:	jmp    0x4e81a1f3
  423af9:	push   edi
  423afa:	add    BYTE PTR [eax-0x60],ch
  423afd:	fmul   DWORD PTR [esi+eiz*2+0x14]
  423b01:	adc    edx,DWORD PTR [ebp*1+0x6ff5bf9]
  423b08:	test   BYTE PTR [esi-0x1cbf9e08],bh
  423b0e:	add    DWORD PTR [eax],0x0
	...
  423b19:	add    BYTE PTR [esi-0x4fd6421],dh
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423aed
  423b27:	push   ecx
  423b28:	aad    0xea
  423b2a:	mov    ebp,0xfd0001b4
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	add    dh,bl
  423b33:	cmp    BYTE PTR [ecx+0x41],ch
  423b36:	cli    
  423b37:	mov    bl,0x8e
  423b39:	inc    edx
  423b3a:	pushf  
  423b3b:	test   eax,0x71d2a777
  423b40:	xchg   edx,eax
  423b41:	outs   dx,DWORD PTR ds:[esi]
  423b42:	push   es
  423b43:	cmp    ebp,DWORD PTR [eax+ecx*8]
  423b46:	mov    dh,0x3e
  423b48:	lahf   
  423b49:	retf   
  423b4a:	enter  0x59cd,0x11
  423b4e:	pop    edi
  423b4f:	sbb    BYTE PTR [esi+0x16],bl
  423b52:	mov    edi,0xffcb20f9
  423b57:	enter  0xcc0a,0x28
  423b5b:	pushf  
  423b5c:	sub    BYTE PTR [ecx-0x4d],dh
  423b5f:	retf   0x34a9
  423b62:	sub    BYTE PTR [edi-0x4a32b43a],cl
  423b68:	in     al,dx
  423b69:	add    al,0xcc
  423b6b:	mov    cs,WORD PTR [edx+0x17]
  423b6e:	inc    ebx
  423b6f:	(bad)  
  423b70:	repnz push 0x302560ce
  423b76:	add    al,0xd4
  423b78:	mov    dl,0x70
  423b7a:	push   esp
  423b7b:	cmc    
  423b7c:	mov    ebp,0x3428b477
  423b81:	pop    ds
  423b82:	fstp   DWORD PTR [edx-0x2b]
  423b85:	pop    eax
  423b86:	pop    eax
  423b87:	jmp    DWORD PTR [ebp+0x2]
  423b8a:	mov    ss,WORD PTR [eax-0x654dab70]
  423b90:	retf   0x65fb
  423b93:	jmp    0x19f6a4de
  423b98:	and    ebp,ebx
  423b9a:	ror    esi,cl
  423b9c:	psubsb mm7,QWORD PTR [edi]
  423b9f:	push   ebp
  423ba0:	mov    eax,ds:0xf7672e3e
  423ba5:	xlat   BYTE PTR ds:[ebx]
  423ba6:	fsub   DWORD PTR [ecx-0x1816cffb]
  423bac:	and    esi,DWORD PTR [ebx-0x4dbbed88]
  423bb2:	scas   ax,WORD PTR es:[edi]
  423bb4:	dec    esp
  423bb5:	inc    edx
  423bb6:	inc    esi
  423bb7:	or     eax,0x11fb93fe
  423bbc:	adc    BYTE PTR [edx-0x38],ah
  423bbf:	mov    BYTE PTR [ebx],ah
  423bc1:	add    DWORD PTR [eax],ecx
  423bc3:	loopne 0x423c01
  423bc5:	rcr    bl,1
  423bc7:	rcr    edi,cl
  423bc9:	out    dx,eax
  423bca:	(bad)  
  423bcc:	sub    al,0xea
  423bce:	pushf  
  423bcf:	into   
  423bd0:	mov    cl,0x95
  423bd2:	retf   
  423bd3:	push   esi
  423bd5:	lock test DWORD PTR [edi],esi
  423bd8:	fstp   st(6)
  423bda:	inc    ecx
  423bdb:	arpl   WORD PTR [ecx+ebp*4-0x7d],di
  423bdf:	dec    ecx
  423be0:	das    
  423be1:	inc    esi
  423be2:	stc    
  423be3:	mov    ds:0x84d30b40,al
  423be8:	sub    dl,BYTE PTR [ebx-0x408c901d]
  423bee:	sub    DWORD PTR [esi-0x1e],eax
  423bf1:	add    BYTE PTR [ebx-0x61c7876b],bl
  423bf7:	arpl   WORD PTR [edi-0x5e],si
  423bfa:	pop    ebx
  423bfb:	sbb    al,0xab
  423bfd:	jbe    0x423bd2
  423bff:	sub    al,0x1a
  423c01:	popa   
  423c02:	dec    ecx
  423c03:	sahf   
  423c04:	popa   
  423c05:	add    edi,esp
  423c07:	mov    ah,0xf7
  423c09:	in     al,0xa9
  423c0b:	pop    esi
  423c0c:	cmp    eax,DWORD PTR [ebx-0x79]
  423c0f:	jmp    0xba39:0x52a08e71
  423c16:	jns    0x423c18
  423c18:	jbe    0x423c0a
  423c1a:	pusha  
  423c1b:	mov    cl,0x9a
  423c1d:	sub    DWORD PTR [ecx-0x294173b7],ebp
  423c23:	sbb    DWORD PTR [ecx+0x6c],esi
  423c26:	mov    esp,0x31265eec
  423c2b:	push   eax
  423c2c:	lods   eax,DWORD PTR ds:[esi]
  423c2d:	inc    edx
  423c2e:	jle    0x423c06
  423c30:	(bad)  
  423c32:	or     dl,BYTE PTR [ebp+0x5d50b931]
  423c38:	popf   
  423c39:	xor    ch,BYTE PTR [ebx+0x2d]
  423c3c:	cmp    al,0x93
  423c3e:	inc    eax
  423c3f:	aas    
  423c40:	into   
  423c41:	(bad)
  423c44:	jo     0x423c8a
  423c46:	and    eax,0xd4105796
  423c4b:	sbb    eax,0x989dd380
  423c50:	out    dx,eax
  423c51:	xchg   ebp,eax
  423c52:	in     al,dx
  423c53:	test   bh,dh
  423c55:	popf   
  423c56:	xchg   ecx,eax
  423c57:	fiadd  DWORD PTR [ecx+0x9ed2a6e]
  423c5d:	stc    
  423c5e:	xchg   ebx,eax
  423c5f:	push   esi
  423c60:	ins    DWORD PTR es:[edi],dx
  423c61:	int3   
  423c62:	enter  0xec6e,0xcc
  423c66:	jecxz  0x423c04
  423c68:	jo     0x423cc6
  423c6a:	jmp    0xf7ff0690
  423c6f:	loop   0x423ce9
  423c71:	aam    0xbc
  423c73:	or     eax,0xd8495725
  423c78:	shl    BYTE PTR [edx-0x2d],cl
  423c7b:	sub    eax,0xff513be8
  423c80:	pop    esp
  423c81:	sub    edx,DWORD PTR [esi+0x2f]
  423c84:	cli    
  423c85:	mov    es,eax
  423c87:	fist   DWORD PTR [ebp+0x1bf76037]
  423c8d:	leave  
  423c8e:	std    
  423c8f:	(bad)  
  423c90:	je     0x423c16
  423c92:	repnz aas 
  423c94:	sahf   
  423c95:	xchg   ecx,eax
  423c96:	jmp    0x9e5406f4
  423c9b:	inc    esi
  423c9c:	push   esp
  423c9d:	xor    eax,0x331c1219
  423ca2:	cmp    eax,0xa0ff73e6
  423ca7:	sub    ebp,edi
  423ca9:	pop    eax
  423caa:	ret    
  423cab:	fimul  DWORD PTR [edx+esi*4]
  423cae:	es scas al,BYTE PTR es:[edi]
  423cb0:	adc    DWORD PTR [esi-0x363d5b14],ecx
  423cb6:	xor    cl,0x64
  423cb9:	test   al,0x6
  423cbb:	call   0x3a2ed5e4
  423cc0:	sar    BYTE PTR [edi-0x4e],1
  423cc3:	std    
  423cc4:	add    al,0xc8
  423cc6:	inc    esp
  423cc7:	(bad)  
  423cc8:	call   FWORD PTR [ebp+0x3ca5ddfb]
  423cce:	popf   
  423ccf:	dec    esi
  423cd0:	ins    DWORD PTR es:[edi],dx
  423cd1:	bound  ebp,QWORD PTR [edx+0x29]
  423cd4:	ror    DWORD PTR [esi*4+0x162364f0],cl
  423cdb:	imul   ecx,esi,0xfd71bf53
  423ce1:	mov    ecx,0x4e20d023
  423ce6:	and    al,bh
  423ce8:	leave  
  423ce9:	lock fist WORD PTR [edx]
  423cec:	pusha  
  423ced:	int    0xfa
  423cef:	idiv   DWORD PTR [ebx+0x55]
  423cf2:	inc    edx
  423cf3:	inc    ebp
  423cf4:	push   cs
  423cf5:	jns    0x423d43
  423cf7:	dec    esp
  423cf8:	dec    esi
  423cf9:	retf   
  423cfa:	adc    dl,BYTE PTR [ebx]
  423cfc:	and    al,0x17
  423cfe:	bnd ret 0xf1d8
  423d02:	jo     0x423d49
  423d04:	xor    eax,0x4506818b
  423d09:	jo     0x423d60
  423d0b:	(bad)  
  423d0c:	clc    
  423d0d:	mov    eax,ds:0x32125559
  423d12:	pop    ecx
  423d13:	ret    
  423d14:	jnp    0x423d56
  423d16:	mov    esp,0x580b168e
  423d1b:	xchg   esi,eax
  423d1c:	add    edx,esp
  423d1e:	sub    ebp,DWORD PTR [ebx-0x3b3afc30]
  423d24:	sbb    esp,ebx
  423d26:	leave  
  423d27:	xor    ecx,DWORD PTR [ebp-0x6d77e625]
  423d2d:	addr16 mov al,ds:0x0
	...
  423d39:	add    al,bh
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0x5757ffb2
  423d47:	enter  0x6b2e,0xba
  423d4b:	mov    dh,0x1
  423d4d:	add    ch,bh
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    BYTE PTR [eax-0x64],dh
  423d54:	mov    ds:0x107e0b21,al
  423d59:	adc    al,0x82
  423d5b:	lahf   
  423d5c:	jb     0x423d81
  423d5e:	xor    ah,bl
  423d60:	in     eax,0x3a
  423d62:	stos   DWORD PTR es:[edi],eax
  423d63:	popf   
  423d64:	mov    ah,0xd0
  423d66:	cdq    
  423d67:	popa   
  423d68:	sub    BYTE PTR [ebx],bh
  423d6a:	les    ebx,FWORD PTR [ecx-0x26c2c36]
  423d70:	retf   
  423d71:	call   0xf1438488
  423d76:	push   edi
  423d77:	xchg   edi,eax
  423d78:	pop    esp
  423d79:	or     al,0x2e
  423d7b:	sbb    esi,DWORD PTR [ecx+0x468d5f8f]
  423d81:	or     BYTE PTR [edi-0x17],dh
  423d84:	xchg   ebp,eax
  423d85:	xchg   BYTE PTR [edx+edx*8],al
  423d88:	or     al,0xe1
  423d8a:	in     al,0x0
  423d8c:	xchg   ecx,eax
  423d8d:	ss cdq 
  423d8f:	test   BYTE PTR [ebx],al
  423d91:	pop    edi
  423d92:	cmp    bl,BYTE PTR [eax+0x3d]
  423d95:	ins    DWORD PTR es:[edi],dx
  423d96:	xlat   BYTE PTR ds:[ebx]
  423d97:	mov    al,0x4c
  423d99:	jbe    0x423d72
  423d9b:	outs   dx,DWORD PTR ds:[esi]
  423d9c:	sbb    esp,ecx
  423d9e:	jmp    0xd791:0xd82e2f5f
  423da5:	push   esi
  423da6:	pop    ebx
  423da7:	test   eax,0xb1560dae
  423dac:	je     0x423e1e
  423dae:	bound  eax,QWORD PTR [ebx*8+0x13271ee5]
  423db5:	pop    ds
  423db6:	(bad)  
  423db7:	in     al,0x45
  423db9:	sahf   
  423dba:	mov    ebx,0x985e7260
  423dbf:	xchg   esp,eax
  423dc0:	push   esp
  423dc1:	jmp    0x423d86
  423dc3:	add    bh,bh
  423dc5:	mov    edx,0xb9980017
  423dca:	(bad)  
  423dcb:	xlat   BYTE PTR ds:[ebx]
  423dcc:	sub    dl,ch
  423dce:	fst    QWORD PTR [edi]
  423dd0:	adc    DWORD PTR [edi+0xcead9b],0x2f93d5c9
  423dda:	aam    0x50
  423ddc:	adc    al,0x8a
  423dde:	int    0xa1
  423de0:	into   
  423de1:	cmc    
  423de2:	outs   dx,BYTE PTR ds:[esi]
  423de3:	mov    cl,0xdf
  423de5:	cmp    BYTE PTR [esi-0x5c],0xb
  423de9:	xor    eax,0x62e871ba
  423dee:	cli    
  423def:	or     eax,0x8408d0fd
  423df4:	outs   dx,DWORD PTR ds:[esi]
  423df5:	dec    eax
  423df6:	arpl   WORD PTR [ebx+0x4c],bx
  423df9:	jmp    0x636309be
  423dfe:	push   0xd2736012
  423e03:	pop    ss
  423e04:	cld    
  423e05:	cwde   
  423e06:	mov    dl,0x7
  423e08:	test   eax,0x4cea6afd
  423e0d:	or     esp,ecx
  423e0f:	mov    dl,0x63
  423e11:	or     esp,eax
  423e13:	fist   WORD PTR [edx]
  423e15:	mov    al,ds:0x5e56c35f
  423e1a:	iret   
  423e1b:	cs cmp edx,edx
  423e1e:	cmp    ah,cl
  423e20:	mov    DWORD PTR [edi],0xc4d64264
  423e26:	dec    ebp
  423e27:	and    al,0x72
  423e29:	or     ebx,ecx
  423e2b:	mov    ebp,0xa404282b
  423e30:	(bad)  
  423e31:	push   edi
  423e32:	mov    edi,0x9d2fd471
  423e37:	add    al,0xec
  423e39:	icebp  
  423e3a:	xor    al,0x9
  423e3c:	bound  ecx,QWORD PTR [ebp-0x23]
  423e3f:	inc    esi
  423e40:	xor    BYTE PTR [ecx+0x65],0x2a
  423e44:	aas    
  423e45:	push   0xffffffe3
  423e47:	mov    WORD PTR [ebp-0x34],ds
  423e4a:	sbb    DWORD PTR [edx+0x35],ebx
  423e4d:	ins    DWORD PTR es:[edi],dx
  423e4e:	cdq    
  423e4f:	push   edi
  423e50:	or     dh,BYTE PTR [esi]
  423e52:	fwait
  423e53:	xor    DWORD PTR [eax],0x55d595f2
  423e59:	bound  ebp,QWORD PTR [ecx-0x7d1083e4]
  423e5f:	mov    dl,0x45
  423e61:	or     eax,0x4287dc87
  423e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e67:	in     eax,dx
  423e68:	mov    esi,edx
  423e6a:	mov    cl,0x20
  423e6c:	cmp    eax,0x71314a1b
  423e71:	loope  0x423e65
  423e73:	cmp    eax,0xaab2d325
  423e78:	xchg   ebp,eax
  423e79:	(bad)  
  423e7b:	lock mov BYTE PTR [ebp-0x31],bh
  423e7f:	pushf  
  423e80:	pushf  
  423e81:	and    esp,edi
  423e83:	sbb    dl,dh
  423e85:	mov    cl,0xc
  423e87:	sub    ah,BYTE PTR [ebp-0x7bde677c]
  423e8d:	int3   
  423e8e:	fnsave [edx]
  423e90:	mov    edx,0x4864c218
  423e95:	pop    edi
  423e96:	and    al,0x4d
  423e98:	clc    
  423e99:	mov    dl,0x2c
  423e9b:	(bad)  
  423e9c:	cdq    
  423e9d:	mov    cs,WORD PTR [esi]
  423e9f:	ds das 
  423ea1:	stos   DWORD PTR es:[edi],eax
  423ea2:	mov    ah,BYTE PTR [edx+edx*2-0x75ad347f]
  423ea9:	sub    eax,0x63d3647e
  423eae:	popa   
  423eaf:	popa   
  423eb0:	ficom  WORD PTR [esi+ecx*8]
  423eb3:	rcl    DWORD PTR [ebp+0x50c5ec65],0x94
  423eba:	or     DWORD PTR [edi],ecx
  423ebc:	push   0x50b9bef9
  423ec1:	aaa    
  423ec2:	inc    esp
  423ec3:	fcmove st,st(1)
  423ec5:	cmp    dh,BYTE PTR [esp]
  423ec8:	not    BYTE PTR [esi+0x75]
  423ecb:	push   0xf01c76a4
  423ed0:	xchg   ah,cl
  423ed2:	stos   DWORD PTR es:[edi],eax
  423ed3:	ds loopne 0x423ee9
  423ed6:	jge    0x423eab
  423ed8:	mov    eax,0x85db66c4
  423edd:	add    ebx,DWORD PTR [ebp-0x30]
  423ee0:	mov    bh,0x99
  423ee2:	jne    0x423ec1
  423ee4:	and    dl,dl
  423ee6:	push   es
  423ee7:	ds popa 
  423ee9:	push   cs
  423eea:	fild   WORD PTR [edx+0x5a]
  423eed:	addr16 add al,0x57
  423ef0:	or     ch,ch
  423ef2:	out    dx,eax
  423ef3:	or     ebx,DWORD PTR [eax]
  423ef5:	add    BYTE PTR [edx-0x3e],dh
  423ef8:	adc    eax,0xee4bfefc
  423efd:	clc    
  423efe:	popf   
  423eff:	jecxz  0x423ec3
  423f01:	push   ebp
  423f02:	lea    edi,[esi-0x2c]
  423f05:	jae    0x423f36
  423f07:	dec    eax
  423f08:	arpl   cx,sp
  423f0a:	and    al,0x8f
  423f0c:	cmp    al,0x99
  423f0e:	inc    ebx
  423f0f:	and    al,0x16
  423f11:	push   ss
  423f12:	aaa    
  423f13:	into   
  423f14:	xchg   DWORD PTR ds:0x74e1b846,esi
  423f1a:	mov    esp,0xf178137d
  423f1f:	inc    eax
  423f20:	jecxz  0x423f41
  423f22:	sub    al,0xef
  423f24:	in     eax,dx
  423f25:	stc    
  423f26:	xor    BYTE PTR [ecx],ah
  423f28:	imul   di,WORD PTR [ebp+0x15],0xffd4
  423f2d:	lods   eax,DWORD PTR ds:[esi]
  423f2e:	je     0x423f9e
  423f30:	(bad)  
  423f31:	sbb    eax,0x3fc63a80
  423f36:	arpl   WORD PTR [eax],bx
  423f38:	popf   
  423f39:	stos   DWORD PTR es:[edi],eax
  423f3a:	dec    edx
  423f3b:	pop    ds
  423f3c:	call   FWORD PTR [eax+0x50]
  423f3f:	popa   
  423f40:	mov    WORD PTR [ecx-0x7d],cs
  423f43:	call   0x1c67:0x251c871a
  423f4a:	add    eax,0xdfa6de13
	...
  423f57:	add    BYTE PTR [eax],al
  423f59:	add    BYTE PTR [ecx],bh
  423f5b:	sbb    al,0x89
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0xb6e902b9
  423f67:	add    bh,BYTE PTR [edx-0x48]
  423f6a:	mov    bh,0xb8
  423f6c:	add    DWORD PTR [eax],eax
  423f6e:	std    
  423f6f:	add    DWORD PTR [eax],eax
  423f71:	add    BYTE PTR [edx+0x1608386f],ah
  423f77:	jmp    0x423fd7
  423f79:	shl    DWORD PTR [esi+edx*1+0x16],cl
  423f7d:	popf   
  423f7e:	add    dl,0x31
  423f81:	retf   0xa6c1
  423f84:	pop    ebx
  423f85:	fs and ebx,0xffffffee
  423f89:	pop    ebp
  423f8a:	cdq    
  423f8b:	sbb    DWORD PTR [ecx],eax
  423f8d:	mov    cl,0x5a
  423f8f:	(bad)  
  423f90:	fild   QWORD PTR [esi+0x22]
  423f93:	adc    DWORD PTR [eax+eiz*1],ebp
  423f96:	inc    eax
  423f97:	xchg   esi,eax
  423f98:	aam    0x6a
  423f9a:	sub    BYTE PTR [eax-0x223d7eb1],cl
  423fa0:	push   0xf9504634
  423fa5:	push   eax
  423fa6:	fmul   st,st(3)
  423fa8:	out    0xbd,al
  423faa:	sti    
  423fab:	in     al,0x16
  423fad:	test   BYTE PTR es:[esi+ebx*2-0x582bd327],ch
  423fb5:	dec    eax
  423fb6:	shl    BYTE PTR [ebx-0x9],0xbb
  423fba:	pop    ds
  423fbb:	mov    ds:0xa8e635cc,al
  423fc0:	out    0x52,eax
  423fc2:	xor    eax,0x797bde54
  423fc7:	stc    
  423fc8:	sbb    BYTE PTR [ebp+0xe386c9d],0x1b
  423fcf:	push   ecx
  423fd0:	push   ss
  423fd1:	cld    
  423fd2:	loop   0x424008
  423fd4:	jmp    0x423fca
  423fd6:	xor    al,0x97
  423fd8:	mov    ah,0x1d
  423fda:	xor    BYTE PTR [ebp+0x1f],bh
  423fdd:	mov    ah,0x3f
  423fdf:	xor    eax,0xfec8b73a
  423fe4:	fcmovnb st,st(0)
  423fe6:	mov    ebp,0xafd71bf4
  423feb:	push   ecx
  423fec:	icebp  
  423fed:	xor    DWORD PTR [ebx],0x51b31e50
  423ff3:	jb     0x424044
  423ff5:	pop    ebp
  423ff6:	or     eax,0xb68f4e96
  423ffb:	push   eax
  423ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ffd:	paddsb mm3,mm5
  424000:	in     al,dx
  424001:	adc    al,0xb8
  424003:	clc    
  424004:	and    al,0x75
  424006:	or     DWORD PTR [esi+edx*8],edi
  424009:	and    BYTE PTR [esi],dl
  42400b:	inc    edx
  42400c:	jl     0x423fdd
  42400e:	hlt    
  42400f:	inc    edx
  424010:	sbb    bh,0xea
  424013:	pop    ebx
  424014:	fnstsw WORD PTR [edi]
  424016:	pop    edi
  424017:	mov    eax,ds:0x53e8f48e
  42401c:	nop
  42401d:	leave  
  42401e:	mov    ds,WORD PTR [eax]
  424020:	dec    ebx
  424021:	leave  
  424022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424023:	or     DWORD PTR [edx-0x38312306],ebp
  424029:	(bad)  
  42402a:	mov    al,ds:0xff0fe8b5
  42402f:	pop    eax
  424030:	add    bl,BYTE PTR [edx+0x28f1b7da]
  424036:	xchg   esi,eax
  424037:	xor    edi,DWORD PTR [eax]
  424039:	int    0xf8
  42403b:	loop   0x424041
  42403d:	lea    eax,[esi-0x2f8b9193]
  424043:	push   eax
  424044:	mov    al,0x98
  424046:	pop    ss
  424047:	out    0xb3,eax
  424049:	fsub   DWORD PTR [ebp-0x739bff5f]
  42404f:	add    BYTE PTR [edi],cl
  424051:	dec    ecx
  424052:	xchg   edi,eax
  424053:	repnz cmp DWORD PTR [edx+0x72f731fe],edi
  42405a:	xchg   edi,eax
  42405b:	mov    es,edx
  42405d:	cmp    eax,0xaa046845
  424062:	or     esp,DWORD PTR [esp+ebx*8-0x2b77725a]
  424069:	dec    ebx
  42406a:	(bad)  
  42406b:	push   edx
  42406c:	mov    ds:0x112a7b69,eax
  424071:	adc    cl,cl
  424073:	ja     0x424028
  424075:	faddp  st(0),st
  424077:	mov    ds:0x14ba611b,al
  42407c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42407d:	push   ebx
  42407e:	push   es
  42407f:	cmp    dl,BYTE PTR [esi]
  424081:	xchg   edi,eax
  424082:	adc    BYTE PTR [edx+0x5d],ch
  424085:	adc    bl,0xef
  424088:	and    eax,0x2ec7be84
  42408d:	mov    cl,BYTE PTR [ebx+eax*2-0x1a]
  424091:	cmp    al,0x1a
  424093:	rcl    BYTE PTR [eax-0x20],0xe1
  424097:	mov    bl,0xac
  424099:	imul   eax,DWORD PTR [ecx],0x9965d08e
  42409f:	and    DWORD PTR [eax+0xf],edi
  4240a2:	pop    bx
  4240a4:	(bad)  
  4240a5:	idiv   DWORD PTR [eax+0x75]
  4240a8:	pusha  
  4240a9:	inc    ebp
  4240aa:	sahf   
  4240ab:	jecxz  0x4240d3
  4240ad:	and    al,0x68
  4240af:	pop    eax
  4240b0:	jae    0x4240dd
  4240b2:	push   es
  4240b3:	mov    ds:0x13b4194f,eax
  4240b8:	pushf  
  4240b9:	stc    
  4240ba:	pop    edi
  4240bb:	(bad)  
  4240bc:	nop
  4240bd:	test   BYTE PTR [edi-0x15],ch
  4240c0:	nop
  4240c1:	test   eax,0x9e51a74b
  4240c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240c8:	dec    ebx
  4240c9:	xor    BYTE PTR [ecx],0xce
  4240cc:	jecxz  0x424137
  4240ce:	jle    0x424145
  4240d0:	fnstcw WORD PTR [esp+edi*2-0x73]
  4240d4:	imul   esi,DWORD PTR [edx],0x59
  4240d7:	cmp    BYTE PTR [edi+eax*4],al
  4240da:	pop    edx
  4240db:	xlat   BYTE PTR ds:[ebx]
  4240dc:	les    eax,FWORD PTR [ebx+0x4fde3a0b]
  4240e2:	push   cs
  4240e3:	nop
  4240e4:	sub    BYTE PTR [ebx+0x54],0x13
  4240e8:	push   ecx
  4240e9:	jb     0x424098
  4240eb:	push   eax
  4240ec:	and    ah,dh
  4240ee:	into   
  4240ef:	popf   
  4240f0:	sbb    BYTE PTR [eax+ecx*1+0x5e],ch
  4240f4:	sbb    BYTE PTR [edi-0x62],bh
  4240f7:	mul    DWORD PTR [eax*1+0x77fc88a8]
  4240fe:	sub    al,0xad
  424100:	push   es
  424101:	lahf   
  424102:	jns    0x424092
  424104:	mov    ds:0xaaa9ecfc,al
  424109:	stos   DWORD PTR es:[edi],eax
  42410a:	lahf   
  42410b:	mov    eax,ds:0xacde2313
  424110:	pop    esp
  424111:	pusha  
  424112:	enter  0xcb0c,0x90
  424116:	in     eax,0xfc
  424118:	xchg   DWORD PTR [esi],esi
  42411a:	rcr    cl,cl
  42411c:	xor    bl,dl
  42411e:	retf   0x1f2c
  424121:	js     0x4240a3
  424123:	xchg   ebp,eax
  424124:	add    BYTE PTR [edx+0x3e],dl
  424127:	mov    al,0xf6
  424129:	jmp    0x4240d0
  42412b:	retf   
  42412c:	sub    esp,ebp
  42412e:	cli    
  42412f:	xor    BYTE PTR [edx],al
  424131:	mov    bh,bl
  424133:	loope  0x42413b
  424135:	sbb    BYTE PTR [ecx],cl
  424137:	jns    0x4240ed
  424139:	aam    0x17
  42413b:	dec    esp
  42413c:	dec    ebp
  42413d:	adc    al,0xc
  42413f:	fild   QWORD PTR [ecx+ecx*2]
  424142:	lds    eax,FWORD PTR [ecx]
  424144:	mov    esi,0x278c17cc
  424149:	cmp    ebx,ebx
  42414b:	push   ecx
  42414c:	loop   0x42414b
  42414e:	jmp    0x17c5:0x7bf6dea4
  424155:	mov    eax,ds:0x234dcb3
  42415a:	fadd   QWORD PTR [edx-0x1d92175f]
  424160:	int3   
  424161:	ja     0x42411a
  424163:	lahf   
  424164:	sahf   
  424165:	hlt    
  424166:	mov    esi,0x51e467f
  42416b:	js     0x4241b3
  42416d:	pop    ebp
  42416e:	std    
	...
  424177:	add    BYTE PTR [eax],al
  424179:	add    BYTE PTR [ebp-0x4c],ah
  42417c:	sbb    dh,bl
  42417e:	fsin   
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	xchg   ebp,eax
  424187:	cwde   
  424188:	inc    ebp
  424189:	aas    
  42418a:	mov    ah,0xba
  42418c:	add    DWORD PTR [eax],eax
  42418e:	std    
  42418f:	add    DWORD PTR [eax],eax
  424191:	add    BYTE PTR [esi],al
  424193:	mov    bh,0xf0
  424195:	mov    bh,0xe2
  424197:	jmp    0x424124
  424199:	das    
  42419a:	cmp    al,0xc3
  42419c:	mov    dl,0x1c
  42419e:	pop    ebp
  42419f:	mov    ds:0xa80e560,eax
  4241a4:	cmp    al,0x34
  4241a6:	cmp    eax,0xdcfe1f84
  4241ab:	aaa    
  4241ac:	retf   
  4241ad:	inc    ecx
  4241ae:	lods   eax,DWORD PTR ds:[esi]
  4241af:	pushf  
  4241b0:	jg     0x42421e
  4241b2:	ds xchg ecx,eax
  4241b4:	mov    DWORD PTR [ebp+0x20],edi
  4241b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241b8:	xchg   edi,eax
  4241b9:	rcr    bh,cl
  4241bb:	(bad)  
  4241bc:	dec    BYTE PTR [edx-0x36]
  4241bf:	outs   dx,DWORD PTR ds:[esi]
  4241c0:	ins    BYTE PTR es:[edi],dx
  4241c1:	ret    
  4241c2:	cld    
  4241c3:	xchg   ebx,eax
  4241c4:	push   ebp
  4241c5:	repz in al,dx
  4241c7:	test   DWORD PTR [esi+0x68],edx
  4241ca:	dec    edx
  4241cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241cc:	xchg   edi,eax
  4241cd:	sbb    DWORD PTR [esi-0x4d],edi
  4241d0:	aas    
  4241d1:	jbe    0x4241ea
  4241d3:	(bad)  
  4241d4:	js     0x424163
  4241d6:	sti    
  4241d7:	inc    ebp
  4241d8:	aad    0x49
  4241da:	or     ebp,DWORD PTR [eax+0xe]
  4241dd:	sbb    DWORD PTR [edx-0x23],ebx
  4241e0:	icebp  
  4241e1:	or     al,0x59
  4241e3:	mov    ds:0x7183dea0,al
  4241e8:	aaa    
  4241e9:	add    DWORD PTR [esi+0x8fe6e8e],0xc35397cd
  4241f3:	in     eax,dx
  4241f4:	outs   dx,BYTE PTR ds:[esi]
  4241f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241f6:	inc    esp
  4241f7:	mov    ch,0x66
  4241f9:	and    eax,0x59d4b68c
  4241fe:	mov    bl,0x1d
  424200:	call   0x35920a4d
  424205:	jnp    0x42418d
  424207:	retf   0xdc24
  42420a:	mov    gs,WORD PTR [esi-0x80]
  42420d:	push   0xfffffff5
  42420f:	sbb    eax,0x8e9a7193
  424214:	stos   DWORD PTR es:[edi],eax
  424215:	mov    bh,0xcb
  424217:	sar    BYTE PTR [esi+0x26],1
  42421a:	fadd   DWORD PTR [esi-0x5f846a5a]
  424220:	sub    ah,BYTE PTR [eax+0x41]
  424223:	mov    cl,0x95
  424225:	pop    ebp
  424226:	pop    ebp
  424227:	call   0x6511:0x1cdb940c
  42422e:	repz xchg ebp,eax
  424230:	scas   eax,DWORD PTR es:[edi]
  424231:	push   esp
  424232:	fimul  WORD PTR [esi+0x7]
  424235:	dec    esi
  424236:	mov    dh,0x8b
  424238:	test   al,0x7a
  42423a:	jne    0x424246
  42423c:	nop
  42423d:	mov    esp,0x862577a7
  424242:	outs   dx,BYTE PTR ds:[esi]
  424243:	mov    ebx,0x41d41904
  424248:	mov    DWORD PTR [ebx+0xa],0x4c08d469
  42424f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424250:	(bad)  
  424251:	repnz cmp al,0xd9
  424254:	mov    dh,0xcb
  424256:	dec    esp
  424257:	enter  0x1bd5,0xdf
  42425b:	jg     0x424265
  42425d:	div    DWORD PTR [esi+0x63eb2a9a]
  424263:	adc    DWORD PTR [ebx-0x4e0e3c3],eax
  424269:	aad    0xe1
  42426b:	sahf   
  42426c:	sub    ecx,ebp
  42426e:	adc    al,dh
  424270:	dec    esp
  424271:	and    al,0x9b
  424273:	lds    ebp,FWORD PTR [edx-0x16d530d6]
  424279:	icebp  
  42427a:	fild   QWORD PTR [ebp+0x36]
  42427d:	jnp    0x42428e
  42427f:	stos   BYTE PTR es:[edi],al
  424280:	lock mov eax,ds:0x472b79f5
  424286:	add    edi,ebx
  424288:	push   eax
  424289:	imul   edx,esi,0x58
  42428c:	fdivp  st(1),st
  42428e:	loope  0x42421c
  424290:	in     eax,0xc6
  424292:	popa   
  424293:	xor    ch,BYTE PTR [ebp+0x6f]
  424296:	push   edi
  424297:	push   eax
  424298:	loope  0x424230
  42429a:	andps  xmm4,XMMWORD PTR [ebx+esi*4]
  42429e:	mov    ds:0xc51ffb58,eax
  4242a3:	aas    
  4242a4:	xor    BYTE PTR ss:[esi+0xc563b34],0x4b
  4242ac:	call   0xda05:0xcec6d756
  4242b3:	sub    eax,ecx
  4242b5:	xor    eax,0x3cfa5376
  4242ba:	mov    ah,BYTE PTR [edi+0x2f]
  4242bd:	sub    edi,DWORD PTR [ecx-0x39]
  4242c0:	xlat   BYTE PTR ds:[ebx]
  4242c1:	js     0x4242e2
  4242c3:	mov    al,0x7e
  4242c5:	pop    es
  4242c6:	cmp    DWORD PTR [eax-0x1c546dc5],ebx
  4242cc:	xor    al,BYTE PTR [esi]
  4242ce:	mov    ds:0x8dbe1a7f,eax
  4242d3:	xchg   esp,eax
  4242d4:	jno    0x4242e0
  4242d6:	cld    
  4242d7:	push   esp
  4242d8:	xchg   ecx,eax
  4242d9:	and    al,0xbe
  4242db:	out    dx,eax
  4242dc:	or     edx,edx
  4242de:	xchg   esi,eax
  4242df:	add    eax,0x8d0ce8e3
  4242e4:	adc    esp,eax
  4242e6:	pop    ds
  4242e7:	in     al,0x11
  4242e9:	jmp    0x623cbfdf
  4242ee:	or     al,0xd2
  4242f1:	bound  ecx,QWORD PTR [eax-0x2b514fec]
  4242f7:	dec    ebx
  4242f8:	aaa    
  4242f9:	xchg   ebp,eax
  4242fa:	inc    eax
  4242fb:	scas   al,BYTE PTR es:[edi]
  4242fc:	cmp    ah,bl
  4242fe:	inc    edi
  4242ff:	ins    DWORD PTR es:[edi],dx
  424300:	pop    eax
  424301:	jecxz  0x42437e
  424303:	dec    edi
  424304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424305:	mov    es,WORD PTR [edi]
  424307:	mov    al,ds:0x2e7fcf9d
  42430c:	pushf  
  42430d:	mov    ebp,esp
  42430f:	hlt    
  424310:	push   ss
  424311:	ins    BYTE PTR es:[edi],dx
  424312:	dec    eax
  424313:	repz inc ebx
  424315:	rol    BYTE PTR [ebx+ebx*8],cl
  424318:	sbb    DWORD PTR [ebx],edi
  42431a:	inc    esi
  42431b:	shl    BYTE PTR [esi+ebp*2-0x2ae567f0],1
  424322:	pop    ss
  424323:	xchg   ebx,eax
  424324:	inc    esi
  424325:	clc    
  424326:	jg     0x4242e9
  424328:	sbb    esi,eax
  42432a:	out    0xa3,eax
  42432c:	ss clc 
  42432e:	sub    ah,0xfa
  424331:	dec    eax
  424332:	out    dx,al
  424333:	std    
  424334:	frstor [edi+eax*2]
  424337:	or     al,0x2e
  424339:	fidiv  DWORD PTR [ecx]
  42433b:	mov    ds:0xf89571c5,eax
  424340:	cmc    
  424341:	retf   0xdd34
  424344:	xchg   esi,eax
  424345:	pop    esp
  424346:	fisttp QWORD PTR [esi-0x63]
  424349:	dec    ebx
  42434a:	cli    
  42434b:	push   edi
  42434c:	lea    edi,[edx+0x79f8c717]
  424352:	push   ecx
  424353:	rcl    BYTE PTR [ebp+0x5f],cl
  424356:	jp     0x424368
  424358:	addr16 jmp 0x42432d
  42435b:	mov    esi,0x91465ad
  424360:	test   eax,0x393b5cae
  424365:	sub    ch,BYTE PTR [ebp+0x3b]
  424368:	mov    ds:0x932a969e,al
  42436d:	scas   al,BYTE PTR es:[edi]
  42436e:	jp     0x424319
  424370:	pop    ebp
  424371:	loop   0x4243c6
  424373:	gs jmp 0x1b9a:0xaea15df5
  42437b:	mov    esi,0xcf9d4560
  424380:	int3   
  424381:	mov    ds:0x1ea3a69f,al
  424386:	jecxz  0x424323
  424388:	sub    eax,0x5b1ddc26
  42438d:	hlt    
  42438e:	mov    ds:0x0,eax
  424393:	add    BYTE PTR [eax],al
  424395:	add    BYTE PTR [eax],al
  424397:	add    BYTE PTR [eax],al
  424399:	add    BYTE PTR [edx],dl
  42439b:	fsub   DWORD PTR [ebx+0x72]
  42439e:	jmp    0x42439b
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	scas   eax,DWORD PTR es:[edi]
  4243a7:	mov    gs:0x1bcb10f,eax
  4243ad:	add    ch,bh
  4243af:	add    DWORD PTR [eax],eax
  4243b1:	add    BYTE PTR [esi],dl
  4243b3:	loop   0x424356
  4243b5:	das    
  4243b6:	add    dh,BYTE PTR ds:0x21a9606d
  4243bc:	in     eax,dx
  4243bd:	sub    al,0x5e
  4243bf:	out    0xe4,al
  4243c1:	(bad)
  4243c6:	je     0x424408
  4243c8:	or     DWORD PTR [ecx+0x4d4972c2],esp
  4243ce:	pusha  
  4243cf:	enter  0x2217,0xfb
  4243d3:	or     al,0x7a
  4243d5:	repnz cmp dl,BYTE PTR [edi+0x416d20fe]
  4243dc:	xchg   edi,eax
  4243dd:	jno    0x424415
  4243df:	outs   dx,DWORD PTR ds:[si]
  4243e1:	out    dx,eax
  4243e2:	pop    ss
  4243e3:	jg     0x424442
  4243e5:	or     edx,DWORD PTR [esi+eiz*8]
  4243e8:	dec    ebp
  4243e9:	shr    BYTE PTR ds:0xb5797a00,cl
  4243ef:	jnp    0x4243ee
  4243f1:	mov    esi,0x548d22f
  4243f6:	dec    eax
  4243f7:	adc    ecx,0x6f66a844
  4243fd:	jle    0x424429
  4243ff:	adc    BYTE PTR [esi],al
  424401:	push   ebp
  424402:	ins    DWORD PTR es:[edi],dx
  424403:	bound  ebp,QWORD PTR [ecx+0x2a05278b]
  424409:	add    cl,bh
  42440b:	lods   eax,DWORD PTR ds:[esi]
  42440c:	adc    DWORD PTR [edi-0x47],edi
  42440f:	aad    0x36
  424411:	retf   
  424412:	stos   DWORD PTR es:[edi],eax
  424413:	popf   
  424414:	dec    ebx
  424415:	jbe    0x424494
  424417:	(bad)  
  424418:	or     al,0xea
  42441a:	neg    DWORD PTR [edi]
  42441c:	xchg   esi,eax
  42441d:	dec    ebx
  42441e:	retf   
  42441f:	cdq    
  424420:	xchg   esp,eax
  424421:	mov    WORD PTR [eax+0x9f779b8],?
  424427:	dec    ecx
  424428:	push   edi
  424429:	mov    DWORD PTR ds:0xbb06396,esp
  42442f:	mov    dl,0x85
  424431:	addr16 mov al,0x3c
  424434:	dec    eax
  424435:	mov    ebp,0xf4407ff5
  42443a:	add    al,0xc3
  42443c:	stc    
  42443d:	mov    eax,ds:0x29b45509
  424442:	or     eax,0x5a542822
  424447:	push   ebp
  424448:	test   eax,0xce1439bd
  42444d:	jnp    0x4243e0
  42444f:	and    BYTE PTR [edi+0x66],cl
  424452:	mov    bl,al
  424454:	xor    bl,BYTE PTR [ecx+0x20]
  424457:	cmp    BYTE PTR [eax+edx*8+0x76c8d38e],dl
  42445e:	out    dx,eax
  42445f:	rcr    BYTE PTR [esi-0xe1dd19d],1
  424465:	xor    al,0x37
  424467:	inc    edi
  424468:	jl     0x42442b
  42446a:	imul   eax,DWORD PTR [edx-0x6a4a74d3],0xffffff94
  424471:	ins    DWORD PTR es:[edi],dx
  424472:	test   BYTE PTR [edx],0xb3
  424475:	xor    ah,dl
  424477:	push   esp
  424478:	xchg   esp,eax
  424479:	mov    ch,BYTE PTR [edi-0x1b6e6992]
  42447f:	jae    0x4244c1
  424481:	sub    dl,BYTE PTR [ebx+0x2d]
  424484:	mov    cs,WORD PTR [edi]
  424486:	mov    ebx,0x98230e9f
  42448b:	mov    esp,DWORD PTR [edx+0x29]
  42448e:	mov    ebp,0xe84e1c8f
  424493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424494:	pop    ebx
  424495:	cmp    DWORD PTR [ebx],ebx
  424497:	loopne 0x4244d0
  424499:	mov    al,ds:0x87a6fe2a
  42449e:	outs   dx,BYTE PTR ds:[esi]
  42449f:	xor    BYTE PTR [ecx+0x17],ch
  4244a2:	mov    bl,0x12
  4244a4:	std    
  4244a5:	ficom  WORD PTR [ebp-0x58]
  4244a8:	and    eax,0x41a3fb8c
  4244ad:	xchg   edx,eax
  4244ae:	add    esi,DWORD PTR [esi+0x16ee3ec5]
  4244b4:	fwait
  4244b5:	add    esp,DWORD PTR [esi+ecx*2-0x5a23ad4e]
  4244bc:	mov    al,ds:0x1ebf4cce
  4244c1:	sbb    ecx,ebx
  4244c3:	and    BYTE PTR [edx],dl
  4244c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244c6:	jno    0x424492
  4244c8:	jns    0x4244a1
  4244ca:	sbb    al,0xa3
  4244cc:	pop    edi
  4244cd:	ret    
  4244ce:	in     eax,dx
  4244cf:	pop    ecx
  4244d0:	push   ecx
  4244d1:	push   edx
  4244d2:	push   ds
  4244d3:	test   BYTE PTR [eax-0x63],ch
  4244d6:	int3   
  4244d7:	mov    ah,dh
  4244d9:	dec    edx
  4244da:	in     al,dx
  4244db:	rcl    DWORD PTR [edx],1
  4244dd:	fistp  WORD PTR [ebx]
  4244df:	pop    eax
  4244e0:	sub    al,0xca
  4244e2:	cmp    al,0x1a
  4244e4:	mov    al,ds:0x8b5b880
  4244e9:	call   0xf9408b1a
  4244ee:	std    
  4244ef:	and    esp,DWORD PTR [edi-0x712d5a99]
  4244f5:	clc    
  4244f6:	stos   BYTE PTR es:[edi],al
  4244f7:	dec    esi
  4244f8:	pop    esp
  4244f9:	jo     0x4244f7
  4244fb:	fst    DWORD PTR [eax]
  4244fd:	arpl   WORD PTR [ebx],dx
  4244ff:	jmp    0x5b67072
  424504:	jmp    0xfc7a:0x36c115d7
  42450b:	xor    BYTE PTR [ebx-0x41],bh
  42450e:	sbb    esi,DWORD PTR [edx]
  424510:	sub    eax,DWORD PTR [edx]
  424512:	int    0x2b
  424514:	pop    es
  424515:	or     eax,0xcc450503
  42451a:	ret    0x513f
  42451d:	hlt    
  42451e:	ds jge 0x42457f
  424521:	mov    cl,ch
  424523:	int    0x72
  424525:	mov    ?,WORD PTR [ebp+0x73]
  424528:	test   WORD PTR [ebx],bx
  42452b:	(bad)  
  42452c:	ds mov edx,0x7ea5d4f0
  424532:	xchg   ecx,eax
  424533:	(bad)  
  424534:	dec    eax
  424535:	pop    esi
  424536:	clc    
  424537:	sub    DWORD PTR [esi-0x71a56e64],eax
  42453d:	test   eax,0x6ecdf060
  424542:	test   eax,0xf0fbd05f
  424547:	pop    ds
  424548:	lods   eax,DWORD PTR ds:[esi]
  424549:	mov    eax,0xb5fc1af1
  42454e:	jns    0x4245a2
  424550:	and    edi,DWORD PTR [ebx]
  424552:	in     al,dx
  424553:	cdq    
  424554:	std    
  424555:	bound  ecx,QWORD PTR [edi]
  424557:	mov    edi,0x2e81332a
  42455c:	repnz idiv DWORD PTR [ecx-0x43]
  424560:	(bad)  
  424561:	div    BYTE PTR [ebx-0x460eb324]
  424567:	call   0xbae04d06
  42456c:	push   0x77c91b05
  424571:	sub    eax,0x36ad5831
  424576:	mov    DWORD PTR [edi+esi*8+0x4743249a],edi
  42457d:	inc    ecx
  42457e:	and    ecx,DWORD PTR [edi+0x32a9768c]
  424584:	int    0x89
  424586:	or     ah,BYTE PTR [eax-0x23d19a0d]
  42458c:	(bad)  
  42458d:	jo     0x424579
  42458f:	adc    BYTE PTR [esi+0x11],bh
  424592:	sar    DWORD PTR [eax-0x1bf1065e],0x91
  424599:	sbb    esi,DWORD PTR [esi+0x2be519c]
  42459f:	in     eax,dx
  4245a0:	retf   0xd0fb
  4245a3:	inc    edx
  4245a4:	cmp    dh,BYTE PTR [esi+0x7c5f3c71]
  4245aa:	(bad)  
  4245ab:	mov    edi,0x72872c
	...
  4245b8:	add    BYTE PTR [eax],al
  4245ba:	push   cs
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax+0x2e3620b7]
  4245c9:	push   edi
  4245ca:	scas   al,BYTE PTR es:[edi]
  4245cb:	mov    esi,0x1fd0001
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	fdivr  QWORD PTR [ecx+0x3ea406b6]
  4245d8:	pop    esi
  4245d9:	xor    al,0xe1
  4245db:	into   
  4245dc:	or     BYTE PTR [ebp-0x7e8ae7d6],bh
  4245e2:	enter  0x366c,0x8
  4245e6:	cmp    ecx,ebp
  4245e8:	call   0xe26049d9
  4245ed:	ret    0x56ab
  4245f0:	(bad)  
  4245f1:	adc    DWORD PTR [ecx-0x42],esi
  4245f4:	ror    DWORD PTR [ebx+0xc],cl
  4245f7:	fs loop 0x42463e
  4245fa:	das    
  4245fb:	xor    eax,0x934e7e2c
  424600:	xor    ecx,eax
  424602:	out    dx,eax
  424603:	add    DWORD PTR [esi+0x49314f89],0xffffffd3
  42460a:	sbb    ah,BYTE PTR [ebp-0x351cab1a]
  424610:	push   ecx
  424611:	pop    edx
  424612:	pop    edi
  424613:	pusha  
  424614:	mov    esi,0xe2f2ebf
  424619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42461a:	pop    eax
  42461b:	fisttp WORD PTR [edx]
  42461d:	mov    ah,0x1a
  42461f:	out    dx,al
  424620:	xchg   ebp,eax
  424621:	xchg   ebp,eax
  424622:	inc    edx
  424623:	jecxz  0x4246a3
  424625:	leave  
  424626:	pop    ecx
  424627:	aaa    
  424628:	aad    0x57
  42462a:	(bad)  
  42462c:	lea    eax,[edx]
  42462e:	jge    0x4245e0
  424630:	fmulp  st(5),st
  424632:	imul   edx,DWORD PTR [ecx],0x8965e1ce
  424638:	add    DWORD PTR [edi],0xffffffd8
  42463b:	scas   eax,DWORD PTR es:[edi]
  42463c:	ds inc ebp
  42463e:	push   ebx
  42463f:	(bad)  
  424641:	je     0x42469e
  424643:	test   eax,0xdeb55050
  424648:	sti    
  424649:	gs push es
  42464b:	jle    0x424626
  42464d:	sbb    eax,DWORD PTR ds:0x569f9182
  424653:	cdq    
  424654:	mov    bh,0xbc
  424656:	push   ecx
  424657:	sahf   
  424658:	mov    DWORD PTR [esi-0x18f979f8],ebx
  42465e:	neg    BYTE PTR [eax+0x49]
  424661:	xor    edx,DWORD PTR [esi]
  424663:	mov    ecx,0xc5fc05c4
  424668:	lods   al,BYTE PTR ds:[esi]
  424669:	mov    ah,0x9a
  42466b:	ins    DWORD PTR es:[edi],dx
  42466c:	mov    ds:0x66d6a60f,al
  424671:	out    dx,al
  424672:	sbb    al,0x65
  424674:	add    al,0x16
  424676:	jb     0x4246bb
  424678:	dec    ecx
  424679:	jns    0x4246da
  42467b:	mov    eax,ds:0xecfe33cd
  424680:	pop    edx
  424681:	mov    ds:0x4afd105e,eax
  424686:	js     0x424695
  424688:	ret    
  424689:	stos   BYTE PTR es:[edi],al
  42468a:	out    dx,al
  42468b:	pushf  
  42468c:	clc    
  42468d:	sbb    dh,BYTE PTR [esi-0x2c2d0467]
  424693:	mov    dl,0x3a
  424695:	pop    edi
  424696:	fst    st(1)
  424698:	xor    BYTE PTR [esi],0x21
  42469b:	ret    0x466d
  42469e:	popa   
  42469f:	pop    esi
  4246a0:	dec    edi
  4246a1:	clc    
  4246a2:	mov    DWORD PTR [ebx+0x15],esp
  4246a5:	inc    ecx
  4246a6:	cmp    ah,BYTE PTR [edx+0x1b]
  4246a9:	stc    
  4246aa:	pop    ss
  4246ab:	aam    0xa0
  4246ad:	xchg   BYTE PTR ds:[ecx-0x1e],ch
  4246b1:	xor    DWORD PTR [ebx-0x7e],esp
  4246b4:	std    
  4246b5:	or     bl,dl
  4246b7:	(bad)  
  4246b8:	push   edi
  4246b9:	inc    esp
  4246ba:	xor    al,BYTE PTR [eax-0x5c]
  4246bd:	ss mov ecx,0xed4fec7d
  4246c3:	sub    DWORD PTR [esi+0x26],0x4e
  4246c7:	not    BYTE PTR [edi]
  4246c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246cb:	and    DWORD PTR [esi],eax
  4246cd:	xor    BYTE PTR [ecx+0x215f240f],ah
  4246d3:	scas   al,BYTE PTR es:[edi]
  4246d4:	xchg   edi,eax
  4246d5:	dec    edi
  4246d6:	mov    dl,dh
  4246d8:	pop    edx
  4246d9:	jl     0x42473a
  4246db:	lods   eax,DWORD PTR ds:[esi]
  4246dc:	popa   
  4246dd:	test   eax,0xde8f444a
  4246e2:	add    BYTE PTR [ebx],ah
  4246e4:	cwde   
  4246e5:	or     esp,DWORD PTR gs:[ebx+0x62]
  4246e9:	call   0x43d94343
  4246ee:	sbb    cl,ch
  4246f0:	adc    eax,0xf50a2590
  4246f5:	pusha  
  4246f6:	scas   al,BYTE PTR es:[edi]
  4246f7:	aaa    
  4246f8:	mov    ah,0xca
  4246fa:	je     0x424752
  4246fc:	sbb    eax,0x2b84c988
  424701:	mov    esp,eax
  424703:	xchg   ebx,eax
  424704:	test   al,0x70
  424706:	call   0x52d2:0x6d1c67c0
  42470d:	mov    al,BYTE PTR [esi+0x51]
  424710:	inc    edi
  424711:	test   BYTE PTR [ecx-0x366fe93a],dl
  424717:	xchg   esi,eax
  424718:	scas   al,BYTE PTR es:[edi]
  424719:	jbe    0x424735
  42471b:	clc    
  42471c:	pusha  
  42471d:	or     ecx,edx
  42471f:	xchg   BYTE PTR [edx+ebp*1+0x3f1772ba],bh
  424726:	jl     0x42470e
  424728:	rcl    dl,0x2
  42472b:	push   es
  42472c:	sbb    BYTE PTR [ebx+0x200306fa],dh
  424732:	nop
  424733:	jmp    0x424782
  424735:	cmp    BYTE PTR [eax],0x96
  424738:	mov    al,ds:0x5467ae6a
  42473d:	dec    esi
  42473e:	cmp    esp,DWORD PTR [edi-0x36]
  424741:	mov    ah,0x9c
  424743:	sahf   
  424744:	stos   DWORD PTR es:[edi],eax
  424745:	clc    
  424746:	test   al,0x19
  424748:	and    eax,0x2640a655
  42474d:	add    al,0x68
  42474f:	jno    0x424793
  424751:	les    si,DWORD PTR [edi-0x51f14005]
  424758:	or     bh,BYTE PTR [ebp+0x504ed067]
  42475e:	iret   
  42475f:	ja     0x424723
  424761:	iret   
  424762:	xor    dh,bh
  424764:	pusha  
  424765:	ficomp DWORD PTR ds:0xe1c79180
  42476b:	ins    DWORD PTR es:[edi],dx
  42476c:	add    bh,ah
  42476e:	xor    edi,esp
  424770:	(bad)  
  424771:	loope  0x4246f9
  424773:	jg     0x4247c6
  424775:	or     dh,BYTE PTR [edx+eiz*2+0x3d3854]
  42477c:	pop    ebx
  42477d:	mov    bh,0x2e
  42477f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424780:	jno    0x424749
  424782:	mov    ebx,0xa43345a0
  424787:	lds    edx,FWORD PTR [esi-0x3d59e99b]
  42478d:	cmp    dl,BYTE PTR [ebx]
  42478f:	and    eax,0x3cf21082
  424794:	mov    DWORD PTR [ecx+0x5e],ebx
  424797:	ja     0x4247c3
  424799:	in     al,0x6f
  42479b:	shl    DWORD PTR [esi-0x2e],0xdd
  42479f:	or     DWORD PTR [ebx],ecx
  4247a1:	shl    BYTE PTR [ecx],cl
  4247a3:	in     eax,dx
  4247a4:	fwait
  4247a5:	jb     0x424742
  4247a7:	out    0xcf,al
  4247a9:	popf   
  4247aa:	pop    ebx
  4247ab:	sub    BYTE PTR [ebp-0x3a],dl
  4247ae:	cmp    esp,DWORD PTR [ecx+edi*1+0x1e66329f]
  4247b5:	fdiv   DWORD PTR [edx]
  4247b7:	ds push ecx
  4247b9:	test   ecx,edi
  4247bb:	scas   al,BYTE PTR es:[edi]
  4247bc:	mov    ebx,0xed1e2bd0
  4247c1:	(bad)  
  4247c2:	std    
  4247c3:	jb     0x4247d6
  4247c5:	in     eax,dx
  4247c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247c7:	adc    BYTE PTR [ebx+0x43f5b993],bh
  4247cd:	xchg   BYTE PTR ss:[eax],al
	...
  4247d8:	add    BYTE PTR [eax],al
  4247da:	pop    esp
  4247db:	mov    edi,0xdce35063
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0x40
  4247e7:	push   es
  4247e8:	ins    BYTE PTR es:[edi],dx
  4247e9:	sbb    ebp,DWORD PTR [ebx-0x2fffe40]
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    BYTE PTR [edx],al
  4247f3:	fs or  ebp,0x7c
  4247f7:	pop    ecx
  4247f8:	hlt    
  4247f9:	imul   edx,DWORD PTR [edx+0x4c62ed28],0xffffff87
  424800:	xchg   dh,bl
  424802:	fwait
  424803:	inc    ecx
  424805:	out    dx,eax
  424806:	loopne 0x4247ff
  424808:	sti    
  424809:	in     al,dx
  42480a:	jns    0x42478e
  42480c:	dec    edi
  42480d:	out    dx,al
  42480e:	daa    
  42480f:	dec    edx
  424810:	add    BYTE PTR [esi],ah
  424812:	and    DWORD PTR [eax+0x55],0x94b0ad05
  424819:	pop    ebp
  42481a:	cs mov edx,0xc78abe45
  424820:	jb     0x424854
  424822:	xor    ebp,DWORD PTR ds:0x44604105
  424828:	icebp  
  424829:	cmp    eax,0x7fa3f19f
  42482e:	stc    
  42482f:	pop    ebx
  424830:	(bad)  
  424831:	mov    ch,0xc4
  424833:	push   eax
  424834:	pop    ebx
  424835:	ret    0xde8e
  424838:	pop    esi
  424839:	mov    edx,0xbc8cc288
  42483e:	and    BYTE PTR [eax+0x7f28705b],0x1f
  424845:	cmp    al,0xae
  424847:	mov    DWORD PTR [esi+0x2a],ebp
  42484a:	retf   0x306a
  42484d:	pop    eax
  42484e:	les    ebx,FWORD PTR [edi+0x3e]
  424851:	mov    ebx,esp
  424853:	hlt    
  424854:	rcl    DWORD PTR [ebx],0x55
  424857:	ror    BYTE PTR [ecx],1
  424859:	ret    
  42485a:	jbe    0x4248d4
  42485c:	pop    edi
  42485d:	stos   DWORD PTR es:[edi],eax
  42485e:	clc    
  42485f:	je     0x424862
  424861:	mov    ds:0xb6e35df0,eax
  424866:	mov    ah,0xe9
  424868:	or     edi,0x29
  42486b:	jo     0x42482a
  42486d:	rol    WORD PTR [esi-0x17b3a014],1
  424874:	ins    DWORD PTR es:[edi],dx
  424875:	rol    ebp,cl
  424877:	jg     0x4248ca
  424879:	jne    0x424815
  42487b:	mov    ebx,0xcc87f198
  424880:	pop    edi
  424881:	les    edx,FWORD PTR [ebp+0xe2f7b28]
  424887:	adc    eax,0x5f42614a
  42488c:	(bad)  
  42488d:	in     al,0x40
  42488f:	aad    0xcf
  424891:	jno    0x4248d5
  424893:	test   al,0xea
  424895:	push   0xffffffc9
  424897:	je     0x4248fe
  424899:	outs   dx,BYTE PTR ds:[esi]
  42489a:	pop    ss
  42489b:	mov    WORD PTR [ecx-0x1d],?
  42489e:	jecxz  0x4248a0
  4248a0:	mov    edi,DWORD PTR [ecx+0x7a3667ec]
  4248a6:	sub    BYTE PTR [eax+0x61],0x67
  4248aa:	jae    0x4248ad
  4248ac:	pop    ecx
  4248ad:	jp     0x4248a3
  4248af:	push   edx
  4248b0:	mov    ?,ebp
  4248b2:	xor    BYTE PTR [esi-0x5fed6e2b],bl
  4248b8:	das    
  4248b9:	cmp    al,0xa
  4248bb:	mov    edi,0xcc3470c6
  4248c0:	out    0x57,al
  4248c2:	push   ss
  4248c3:	ds imul edi,esi,0xffffffee
  4248c7:	jmp    0x5a7:0x8c7bd0d7
  4248ce:	mov    ds:0xb4526ac9,al
  4248d3:	cmp    DWORD PTR [ecx+0x74],0x74
  4248d7:	call   0xcc91:0xfac021cb
  4248de:	jle    0x4248ca
  4248e0:	adc    bl,dh
  4248e2:	fstp   TBYTE PTR [esi+eax*2]
  4248e5:	inc    ebx
  4248e6:	mul    BYTE PTR [esi+eax*4-0x43b49034]
  4248ed:	cmp    ebx,DWORD PTR [edi+0xa]
  4248f0:	sub    al,0xd7
  4248f2:	stc    
  4248f3:	retf   
  4248f4:	mov    esp,0x4df94be2
  4248f9:	pop    ecx
  4248fb:	or     al,0x40
  4248fd:	dec    esi
  4248fe:	fdivr  QWORD PTR [ecx+0x26]
  424901:	pop    ss
  424902:	out    0x5d,eax
  424904:	push   0x10307ccc
  424909:	lock hlt 
  42490b:	call   0xbeb2c0b0
  424910:	iret   
  424911:	stc    
  424912:	stc    
  424913:	leave  
  424914:	xchg   dh,cl
  424916:	adc    bh,cl
  424918:	jb     0x4248d3
  42491a:	mov    cs,WORD PTR [esi-0xa]
  42491d:	mov    eax,ds:0xf384c1ab
  424922:	les    esi,FWORD PTR [esi+0x7356e2b3]
  424928:	mov    eax,0x83d15bb
  42492d:	rcl    DWORD PTR [edx-0x33],0xe
  424931:	lock popa 
  424933:	in     al,0xe8
  424935:	sub    BYTE PTR ds:0xf255dbbc,bl
  42493b:	mov    ds:0xc8c3e933,eax
  424940:	push   ebx
  424941:	jns    0x4248f0
  424943:	test   BYTE PTR [esi],bh
  424945:	aas    
  424946:	dec    ebx
  424947:	pop    es
  424948:	mov    bl,0x85
  42494a:	loop   0x42499c
  42494c:	pop    edx
  42494d:	shl    DWORD PTR [edx+0x29d0bf8],cl
  424953:	pusha  
  424954:	js     0x4249bb
  424956:	dec    esi
  424957:	fwait
  424958:	pop    esp
  424959:	push   ebp
  42495a:	xchg   edx,eax
  42495b:	push   es
  42495c:	cmp    DWORD PTR [esi-0x22],ecx
  42495f:	cwde   
  424960:	or     BYTE PTR [ebp+0x122f765e],cl
  424966:	push   ebp
  424967:	enter  0xd9d3,0xdb
  42496b:	mov    al,ds:0x3e56ead6
  424970:	in     eax,dx
  424971:	mov    esi,0xb5f06aee
  424976:	add    DWORD PTR [eax],edx
  424978:	stc    
  424979:	cmp    eax,0x5a3d44ef
  42497e:	icebp  
  42497f:	sbb    cl,BYTE PTR [ecx]
  424981:	fnsave [edi+esi*1-0x3420ae29]
  424988:	pop    edi
  424989:	push   cs
  42498a:	mov    DWORD PTR [ebx-0x181c6ca],ebp
  424990:	and    al,0x57
  424992:	mov    edx,0x15321c45
  424997:	xor    dl,BYTE PTR [ecx-0x4d]
  42499a:	inc    edx
  42499b:	fcomp  QWORD PTR [ebp+0x5a6f41e0]
  4249a1:	rol    bh,cl
  4249a3:	jne    0x424964
  4249a5:	add    bl,BYTE PTR [esi-0x45]
  4249a8:	mov    bl,0xf9
  4249aa:	call   0x7c38dec1
  4249af:	scas   al,BYTE PTR es:[edi]
  4249b0:	(bad)  
  4249b1:	jmp    0x42497e
  4249b3:	xor    eax,0x2b3ffe2c
  4249b8:	push   ebx
  4249b9:	or     DWORD PTR [edx+0x659720f],0x2c
  4249c0:	push   edx
  4249c1:	pop    esi
  4249c2:	or     BYTE PTR [edx-0x50fc388],cl
  4249c8:	pop    es
  4249c9:	mov    edx,0x849bfd45
  4249ce:	rcl    bh,0x5f
  4249d1:	pop    esi
  4249d2:	xchg   BYTE PTR [ebx],al
  4249d4:	adc    bl,BYTE PTR [edx+0x425a8d66]
  4249da:	sbb    bl,ah
  4249dc:	loop   0x424a19
  4249de:	inc    edx
  4249df:	jecxz  0x4249f7
  4249e1:	and    eax,0x57dea2f0
  4249e6:	push   ebp
  4249e7:	in     al,dx
  4249e8:	and    al,0xbb
  4249ea:	ds sahf 
  4249ec:	jno    0x4249b6
  4249ee:	lea    eax,[eax]
	...
  4249f8:	add    BYTE PTR [eax],al
  4249fa:	inc    ebx
  4249fb:	push   ebp
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	xchg   edx,eax
  424a07:	push   0xffffffdd
  424a09:	mov    dl,0xa8
  424a0b:	ret    0x1
  424a0e:	std    
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    BYTE PTR [eax+0x54],cl
  424a14:	push   ss
  424a15:	test   BYTE PTR [ecx+0x3eb3f12c],ch
  424a1b:	retf   
  424a1c:	sbb    eax,0xdf84425c
  424a21:	pop    ebp
  424a22:	sar    DWORD PTR [eax+0x1a69d58a],1
  424a28:	(bad)  
  424a29:	push   0x34285a76
  424a2e:	test   eax,0xf1420363
  424a33:	or     cl,BYTE PTR [eax]
  424a35:	pop    esi
  424a36:	aad    0xe5
  424a38:	ret    0xd3d9
  424a3b:	stos   DWORD PTR es:[edi],eax
  424a3c:	dec    eax
  424a3d:	pop    es
  424a3e:	loopne 0x424aaf
  424a40:	(bad)  
  424a42:	das    
  424a43:	pushf  
  424a44:	adc    BYTE PTR [eax-0xe],cl
  424a47:	xchg   edx,eax
  424a48:	or     ebx,DWORD PTR [ecx+eax*1-0xae8299f]
  424a4f:	ins    DWORD PTR es:[edi],dx
  424a50:	stos   BYTE PTR es:[edi],al
  424a51:	sbb    BYTE PTR [ebx-0x7c12b25e],dh
  424a57:	push   eax
  424a58:	test   al,0x86
  424a5a:	test   al,0xcd
  424a5d:	mov    eax,0xb3eb3219
  424a62:	sbb    DWORD PTR [edi],ebx
  424a64:	adc    dl,bh
  424a66:	iret   
  424a67:	inc    esp
  424a68:	sar    DWORD PTR [ecx+edi*4-0x17260861],0x1e
  424a70:	aad    0xa7
  424a72:	adc    dh,BYTE PTR [edx]
  424a74:	mov    esi,0xbff584c1
  424a79:	mov    dl,0xa0
  424a7b:	dec    eax
  424a7c:	test   DWORD PTR es:[esi+edx*8],edi
  424a80:	jb     0x424a06
  424a82:	dec    ebp
  424a83:	aam    0xcb
  424a85:	inc    ecx
  424a86:	sbb    BYTE PTR [ebx-0x5694146],ch
  424a8c:	jg     0x424ad8
  424a8e:	clc    
  424a8f:	mov    edi,0xe30d859c
  424a94:	xchg   ecx,eax
  424a95:	aam    0x9b
  424a97:	es jb  0x424a55
  424a9a:	lock pusha 
  424a9c:	cmp    DWORD PTR [edi],edx
  424a9e:	mov    ?,WORD PTR [ebx+0x28082ef4]
  424aa4:	jmp    ebp
  424aa6:	ficomp WORD PTR [ebp+0x30]
  424aa9:	inc    edi
  424aaa:	add    al,0x7e
  424aac:	mov    bh,0x13
  424aae:	fs pusha 
  424ab0:	xchg   esi,eax
  424ab1:	loop   0x424ae2
  424ab3:	or     eax,0xc9631813
  424ab8:	sbb    eax,0x1f054dbc
  424abd:	xor    BYTE PTR [ebx-0x5e],dh
  424ac0:	sub    cl,BYTE PTR [ebp+0x92525bc]
  424ac6:	int3   
  424ac7:	and    bh,0x38
  424aca:	sbb    ch,bl
  424acc:	sbb    eax,0xbc1aadf8
  424ad1:	sbb    esp,DWORD PTR [ebp-0x7a2dd358]
  424ad7:	nop
  424ad8:	mov    al,0x9d
  424ada:	cmp    al,0xda
  424adc:	enter  0x8199,0x87
  424ae0:	int3   
  424ae1:	adc    eax,0xf71bda22
  424ae6:	push   edx
  424ae7:	das    
  424ae8:	popa   
  424ae9:	and    DWORD PTR [edx],eax
  424aeb:	dec    eax
  424aec:	add    al,0x41
  424aee:	lock sahf 
  424af0:	dec    edx
  424af1:	std    
  424af2:	push   ecx
  424af3:	in     al,0x44
  424af5:	push   ds
  424af6:	mov    ds:0xda0c95cf,al
  424afb:	cs test eax,0x9792ac24
  424b01:	mov    edx,DWORD PTR [ebp+0x7178098a]
  424b07:	dec    ebp
  424b08:	sub    al,cl
  424b0a:	cwde   
  424b0b:	retf   0xf891
  424b0e:	mov    dl,bl
  424b10:	xor    esp,esp
  424b12:	inc    edi
  424b13:	es fwait
  424b15:	add    eax,0xc7ff1149
  424b1a:	(bad)  
  424b1b:	mov    esp,0x1bd9a668
  424b20:	push   ecx
  424b21:	inc    ebx
  424b22:	ins    BYTE PTR es:[edi],dx
  424b23:	sub    eax,0x4ff7d98
  424b28:	mov    dh,0x42
  424b2a:	xlat   BYTE PTR ds:[ebx]
  424b2b:	mov    eax,ds:0xa783f041
  424b30:	pop    ebp
  424b31:	push   es
  424b32:	dec    ebx
  424b33:	mov    WORD PTR es:[esi],es
  424b36:	and    al,0x96
  424b38:	cmp    eax,0x494662ac
  424b3d:	addr16 repz ss dec eax
  424b41:	popa   
  424b42:	mov    WORD PTR [edx],ss
  424b44:	mov    al,BYTE PTR [ecx-0x5f30f416]
  424b4a:	repz retf 0x9a03
  424b4e:	jmp    0x39d893c
  424b53:	imul   esp,DWORD PTR [edi-0x2faa7134],0x6714765e
  424b5d:	nop
  424b5e:	shl    BYTE PTR [ebx],1
  424b60:	dec    ecx
  424b61:	jle    0x424b5f
  424b63:	fild   DWORD PTR [ecx-0x636ffc2a]
  424b69:	mov    bh,0xc4
  424b6b:	scas   eax,DWORD PTR es:[edi]
  424b6c:	retf   0x3d94
  424b6f:	mov    edx,0xedc49f0d
  424b74:	cdq    
  424b75:	les    ebp,FWORD PTR [eax-0x3394aec4]
  424b7b:	adc    edi,edx
  424b7d:	je     0x424bdd
  424b7f:	idiv   esp
  424b81:	fwait
  424b82:	out    dx,al
  424b83:	jg     0x424bd0
  424b85:	xchg   edx,eax
  424b86:	imul   ebp,DWORD PTR [edi-0x74],0x5d
  424b8a:	mov    ah,BYTE PTR [esi+0xd]
  424b8d:	jge    0x424b24
  424b8f:	add    DWORD PTR [ebp-0x48],0xffffffea
  424b93:	mov    eax,0xe955ff9f
  424b98:	loopne 0x424b72
  424b9a:	xor    eax,0x25b11495
  424b9f:	ret    
  424ba0:	xchg   DWORD PTR [ecx+0x67],eax
  424ba3:	dec    eax
  424ba4:	jmp    0xdc32:0x26335035
  424bab:	sbb    eax,0x8417b2f5
  424bb0:	call   0xbc42:0x9d6b5a5b
  424bb7:	mov    edi,0x969bf2d7
  424bbc:	les    esi,FWORD PTR [ecx]
  424bbe:	aam    0x84
  424bc0:	mov    DWORD PTR [eax+0x3b],ecx
  424bc3:	or     esp,edx
  424bc5:	mov    ebx,0x951de944
  424bca:	cmc    
  424bcb:	mov    ecx,0xbb8e126a
  424bd0:	pop    eax
  424bd1:	out    dx,al
  424bd2:	fs push eax
  424bd4:	test   eax,0x54776e2d
  424bd9:	cmp    DWORD PTR [eax],esi
  424bdb:	adc    dl,bl
  424bdd:	push   edi
  424bde:	sbb    ch,BYTE PTR [ebx+0x2e]
  424be1:	jp     0x424b94
  424be3:	stos   DWORD PTR es:[edi],eax
  424be4:	xchg   esi,eax
  424be5:	xor    BYTE PTR [ebp-0x7bfcfb33],dh
  424beb:	stos   DWORD PTR es:[edi],eax
  424bec:	idiv   ebx
  424bee:	ss cwde 
  424bf0:	shr    DWORD PTR [ebp+0x3c48dbe4],cl
  424bf6:	icebp  
  424bf7:	mov    ah,0x2a
  424bf9:	adc    BYTE PTR [ecx+0x3ecb7340],bl
  424bff:	push   cs
  424c00:	addr16 or eax,0xe6860ecb
  424c06:	xchg   esi,eax
  424c07:	push   ecx
  424c08:	ins    BYTE PTR es:[edi],dx
  424c09:	daa    
  424c0a:	inc    eax
  424c0b:	xor    DWORD PTR [ebx],esi
  424c0d:	jo     0x424c30
	...
  424c17:	add    BYTE PTR [eax],al
  424c19:	add    BYTE PTR [edi+0x2d],dl
  424c1c:	pop    es
  424c1d:	call   0xe967:0xeddfba7f
  424c24:	addr16 xor al,0x78
  424c27:	and    al,0xdc
  424c29:	shl    DWORD PTR [ebp-0x2fffe3c],0x1
  424c30:	add    BYTE PTR [eax],al
  424c32:	xchg   esp,eax
  424c33:	jmp    0x424c10
  424c35:	mov    ds:0x98633bea,al
  424c3a:	fistp  DWORD PTR [ebp-0x37]
  424c3d:	cmp    al,BYTE PTR [edi]
  424c3f:	pop    ebp
  424c40:	xchg   esi,eax
  424c41:	outs   dx,BYTE PTR ds:[esi]
  424c42:	cmp    DWORD PTR [eax],0xfffffffd
  424c45:	dec    esp
  424c46:	ja     0x424c65
  424c48:	fnsave ds:0xc2ec9959
  424c4e:	(bad)  
  424c4f:	pop    ebp
  424c50:	add    BYTE PTR [edx],0xf9
  424c53:	psraw  mm3,mm5
  424c56:	xchg   ebx,eax
  424c57:	jb     0x424cc2
  424c59:	test   DWORD PTR [esi+0x5b1c509f],ebx
  424c5f:	cdq    
  424c60:	lods   al,BYTE PTR ds:[esi]
  424c61:	push   cs
  424c62:	div    DWORD PTR [eax+0x61]
  424c65:	rcl    DWORD PTR [eax],1
  424c67:	and    eax,0x35b34dde
  424c6c:	cmp    ah,BYTE PTR [eax+0x1b9fe489]
  424c72:	inc    ebx
  424c73:	fnstsw WORD PTR [eax-0x3d]
  424c76:	adc    bh,bl
  424c78:	and    eax,0x14aa08e6
  424c7d:	out    0x3e,al
  424c7f:	jno    0x424cf7
  424c81:	cmp    BYTE PTR [eax],dl
  424c83:	mov    esp,0x4137e4cb
  424c88:	cmp    eax,0x2612b782
  424c8d:	mov    ebp,0xea42bc8e
  424c92:	adc    BYTE PTR [ecx+0x62],0x26
  424c96:	jno    0x424cdd
  424c98:	(bad)  
  424c99:	popf   
  424c9a:	cmp    eax,DWORD PTR [edx+0x108eb287]
  424ca0:	push   eax
  424ca1:	fimul  DWORD PTR [esi+0x3a7a4aaa]
  424ca7:	adc    cl,cl
  424ca9:	das    
  424caa:	imul   esi,DWORD PTR [edx-0x2f1db9f8],0xffffff82
  424cb1:	add    esi,DWORD PTR [ecx-0x80]
  424cb4:	stos   BYTE PTR es:[edi],al
  424cb5:	and    DWORD PTR [ebp-0x6abab848],0xffffffb9
  424cbc:	adc    eax,DWORD PTR [ebp+0x57]
  424cbf:	jmp    0x8c06:0xfd62c740
  424cc6:	dec    ecx
  424cc7:	retf   0xd481
  424cca:	ret    
  424ccb:	add    al,0x9c
  424ccd:	loopne 0x424c7e
  424ccf:	(bad)  
  424cd0:	int3   
  424cd1:	outs   dx,DWORD PTR ds:[esi]
  424cd2:	aam    0x8b
  424cd4:	mov    al,ds:0x684d1b7d
  424cd9:	in     al,dx
  424cda:	adc    DWORD PTR [ebp+0xb],edx
  424cdd:	fwait
  424cde:	adc    cl,BYTE PTR [edx+0x1e664277]
  424ce4:	push   es
  424ce5:	bnd jbe 0x424d2a
  424ce8:	adc    bh,dh
  424cea:	or     ah,bl
  424cec:	or     eax,0x9da315fd
  424cf1:	adc    BYTE PTR [ebx+0x3c1e3cf1],bl
  424cf7:	mov    cl,0x62
  424cf9:	jmp    0x424d00
  424cfb:	adc    DWORD PTR [ebx],0x59
  424cfe:	pop    edi
  424cff:	scas   al,BYTE PTR es:[edi]
  424d00:	add    bh,cl
  424d02:	mov    ds:0x4ee268b2,eax
  424d07:	aad    0x4f
  424d09:	cld    
  424d0a:	js     0x424d5c
  424d0c:	ds call 0xc8f3d711
  424d12:	(bad)  
  424d13:	sub    al,0x27
  424d15:	out    0x37,al
  424d17:	push   esp
  424d18:	test   esi,0x98fdcf72
  424d1e:	xchg   esi,eax
  424d1f:	lds    edi,FWORD PTR [ebx+0x4b]
  424d22:	cmp    DWORD PTR [edx-0x72ea2e50],esi
  424d28:	icebp  
  424d29:	pop    esi
  424d2a:	mov    esp,DWORD PTR [edx+ecx*8]
  424d2d:	(bad)  [esi]
  424d2f:	pop    edi
  424d30:	dec    esi
  424d31:	ds xchg esp,eax
  424d33:	sbb    bh,al
  424d35:	push   cs
  424d36:	mov    esi,0xda7c507a
  424d3b:	test   eax,0xc3d2c2d0
  424d40:	xor    dl,BYTE PTR [edx+0x14]
  424d43:	ds push esi
  424d45:	pop    ds
  424d46:	jbe    0x424d9e
  424d48:	loopne 0x424d2f
  424d4a:	adc    al,0xe6
  424d4c:	loope  0x424ceb
  424d4e:	add    dl,BYTE PTR [ecx]
  424d50:	sbb    dh,cl
  424d52:	js     0x424dc7
  424d54:	add    al,0xe4
  424d56:	mov    cl,ah
  424d58:	mov    cl,0x6a
  424d5a:	dec    ecx
  424d5b:	aas    
  424d5c:	add    DWORD PTR [edx],esp
  424d5e:	sub    BYTE PTR [edx+eiz*4],0x11
  424d62:	ja     0x424d28
  424d64:	push   edi
  424d65:	mov    eax,0x754a2207
  424d6a:	scas   al,BYTE PTR es:[edi]
  424d6b:	mov    al,ds:0x958b5e2b
  424d70:	cwde   
  424d71:	sbb    dl,cl
  424d73:	mov    esi,0x2c6e3d61
  424d78:	(bad)  
  424d79:	fcomp  DWORD PTR ds:0x45de8bad
  424d7f:	push   esp
  424d80:	push   ebx
  424d81:	shl    DWORD PTR ds:0x1fcd4b95,0xeb
  424d88:	test   eax,0xb824b649
  424d8d:	or     eax,0x8c4d765
  424d92:	mov    BYTE PTR [esi-0x38592007],al
  424d98:	push   ebp
  424d99:	jg     0x424d7f
  424d9b:	fidiv  DWORD PTR [eax+0x2d57d4d7]
  424da1:	outs   dx,BYTE PTR ds:[esi]
  424da2:	clc    
  424da3:	mov    eax,0x26c7c8b2
  424da8:	in     eax,dx
  424da9:	mov    edx,DWORD PTR [ebp+0x3602c76a]
  424daf:	fild   DWORD PTR [edi-0x21]
  424db2:	jl     0x424d59
  424db4:	jle    0x424d45
  424db6:	jg     0x424e1c
  424db8:	arpl   WORD PTR [ebx+0x2692045f],di
  424dbe:	adc    eax,0x1c4315ab
  424dc3:	dec    esi
  424dc4:	push   ebx
  424dc5:	mov    edi,?
  424dc7:	adc    DWORD PTR ds:0x2655e088,ecx
  424dcd:	imul   ebp,eax,0xffffff97
  424dd0:	xor    ch,BYTE PTR [esi]
  424dd2:	push   edx
  424dd3:	fisttp WORD PTR [ebp+0x7]
  424dd6:	cmp    al,0xad
  424dd8:	cwde   
  424dd9:	pusha  
  424dda:	mov    edx,0xe783925c
  424ddf:	neg    dh
  424de1:	inc    ecx
  424de2:	sbb    bl,BYTE PTR [esp+eiz*2+0x6e31b701]
  424de9:	jns    0x424e12
  424deb:	push   ebp
  424dec:	nop
  424ded:	int3   
  424dee:	lods   eax,DWORD PTR ds:[esi]
  424def:	ror    DWORD PTR [eax+0x6460b75b],0x1d
  424df6:	cmp    cl,BYTE PTR [edi-0x385a97e]
  424dfc:	xor    dh,ch
  424dfe:	aas    
  424dff:	sbb    DWORD PTR [eax],0x77818c01
  424e05:	outs   dx,DWORD PTR ds:[esi]
  424e06:	xchg   edx,eax
  424e07:	mov    bh,BYTE PTR [edx-0xe]
  424e0a:	lds    esi,FWORD PTR ds:0x84946b7e
  424e10:	pusha  
  424e11:	pop    ss
  424e12:	test   al,0x2c
  424e14:	adc    edx,DWORD PTR [eax]
  424e16:	pop    esp
  424e17:	mov    ebp,DWORD PTR [edx-0x422e47d4]
  424e1d:	lods   al,BYTE PTR ds:[esi]
  424e1e:	lods   eax,DWORD PTR ds:[esi]
  424e1f:	jns    0x424e74
  424e21:	sub    DWORD PTR [esi+ebp*1-0x4],edx
  424e25:	fld    TBYTE PTR [ecx+ecx*4+0x1c]
  424e29:	or     ch,BYTE PTR [edi-0x9826c61]
	...
  424e37:	add    BYTE PTR [eax],al
  424e39:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	cmp    dh,ch
  424e48:	and    DWORD PTR [edx+eiz*4-0x2fffe3a],edi
  424e4f:	add    DWORD PTR [eax],eax
  424e51:	add    BYTE PTR [edi+0x5b],al
  424e54:	scas   al,BYTE PTR es:[edi]
  424e55:	sub    eax,0xc612e93d
  424e5a:	ja     0x424ed9
  424e5c:	push   eax
  424e5d:	inc    esi
  424e5e:	or     dh,BYTE PTR [esi]
  424e60:	xchg   ebp,eax
  424e61:	and    ebx,ebp
  424e63:	fcomp  QWORD PTR [esi]
  424e65:	scas   al,BYTE PTR es:[edi]
  424e66:	xchg   esp,eax
  424e67:	cdq    
  424e68:	ins    DWORD PTR es:[edi],dx
  424e69:	pop    es
  424e6a:	mov    al,0x68
  424e6c:	jle    0x424ebf
  424e6e:	add    al,0xc6
  424e70:	mov    ds:0x35475709,eax
  424e75:	mov    edx,0xe3e6939c
  424e7a:	mov    ds:0x9f690ea6,eax
  424e7f:	bound  eax,QWORD PTR [esp+esi*1-0x3e]
  424e83:	mov    eax,DWORD PTR [ecx-0x77146194]
  424e89:	or     eax,0x5dc1786b
  424e8e:	mul    DWORD PTR [esi]
  424e90:	cmc    
  424e91:	inc    ecx
  424e92:	mov    DWORD PTR [edi+ecx*8],ecx
  424e95:	and    BYTE PTR [ebx+edi*8+0x2e],dh
  424e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e9a:	inc    ecx
  424e9b:	ror    BYTE PTR [ecx],0xd0
  424e9e:	nop
  424e9f:	mov    ebp,0x9a321281
  424ea4:	add    DWORD PTR [ebp-0x6],esi
  424ea7:	imul   esp,DWORD PTR [edx],0x7e97d314
  424ead:	out    dx,al
  424eae:	cmp    ebx,DWORD PTR [eax+0x176b9aa6]
  424eb4:	push   ebp
  424eb5:	pop    ds
  424eb6:	jae    0x424e9d
  424eb8:	ja     0x424e6f
  424eba:	fcmovnb st,st(0)
  424ebc:	mov    esi,esi
  424ebe:	jge    0x424f21
  424ec0:	jo     0x424ea1
  424ec2:	push   0xe1567057
  424ec7:	lock sub eax,0x98236fcb
  424ecd:	pop    esi
  424ece:	mov    dl,0xe1
  424ed0:	shl    esi,1
  424ed2:	inc    ecx
  424ed3:	inc    eax
  424ed4:	retf   
  424ed5:	pop    esp
  424ed6:	in     al,0x7d
  424ed8:	inc    edx
  424ed9:	xchg   esp,eax
  424eda:	push   eax
  424edb:	icebp  
  424edc:	sahf   
  424edd:	adc    bl,BYTE PTR [ecx+0x49a0b73e]
  424ee3:	mov    dl,0xb6
  424ee5:	repnz lods eax,DWORD PTR ds:[esi]
  424ee7:	jo     0x424e8c
  424ee9:	jne    0x424f45
  424eeb:	pop    eax
  424eec:	push   esi
  424eed:	xchg   DWORD PTR [edx],edx
  424eef:	add    bh,BYTE PTR [edi+0x40]
  424ef2:	popf   
  424ef3:	aad    0x19
  424ef5:	ror    ebp,cl
  424ef7:	out    dx,al
  424ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ef9:	adc    eax,0xdafb4670
  424efe:	xchg   edx,eax
  424eff:	mov    ah,0x34
  424f01:	or     bh,bh
  424f03:	push   ecx
  424f04:	sbb    DWORD PTR [edi],ebp
  424f06:	xchg   edx,eax
  424f07:	in     al,dx
  424f08:	or     al,0x4c
  424f0a:	in     al,dx
  424f0b:	pop    ebp
  424f0c:	pop    eax
  424f0d:	inc    edx
  424f0e:	sub    BYTE PTR [esi+0x3259e943],dh
  424f14:	push   ebp
  424f15:	aaa    
  424f16:	xor    al,0x8b
  424f18:	iret   
  424f19:	cli    
  424f1a:	arpl   WORD PTR [ebx+0x95c5c70],si
  424f20:	fadd   QWORD PTR [ebx-0x2]
  424f23:	push   0x6
  424f25:	pop    ecx
  424f26:	es xchg ecx,eax
  424f28:	retf   
  424f29:	call   0x1f01b2b2
  424f2e:	inc    DWORD PTR [ecx+0x11]
  424f31:	shl    DWORD PTR [esi+0x5225a391],cl
  424f37:	(bad)  
  424f39:	add    al,0xda
  424f3b:	mov    ds:0x7463f132,al
  424f40:	xchg   ebp,eax
  424f41:	mov    es,WORD PTR [ebx]
  424f43:	cmp    ch,ch
  424f45:	push   cs
  424f46:	dec    ecx
  424f47:	loope  0x424fab
  424f49:	xchg   ecx,eax
  424f4a:	mov    al,ds:0xd071c7b7
  424f4f:	cs dec edx
  424f51:	inc    ebp
  424f52:	aad    0x7d
  424f54:	sub    eax,0x2fe64225
  424f59:	ret    0xb2a7
  424f5c:	stc    
  424f5d:	dec    ebx
  424f5e:	adc    bl,BYTE PTR [ebx]
  424f60:	mov    BYTE PTR [edx],0x9a
  424f63:	dec    eax
  424f64:	dec    edx
  424f65:	and    al,ah
  424f67:	pop    ebx
  424f68:	retf   0x4d7e
  424f6b:	lods   al,BYTE PTR ds:[esi]
  424f6c:	xlat   BYTE PTR ds:[ebx]
  424f6d:	cld    
  424f6e:	rol    BYTE PTR [edi+0x2c6c77c9],0xf6
  424f75:	lods   eax,DWORD PTR ds:[esi]
  424f76:	ret    0x559c
  424f79:	sahf   
  424f7a:	xor    al,0x18
  424f7c:	mov    ecx,0xa052f568
  424f81:	or     bl,BYTE PTR [ebx-0x72691292]
  424f87:	imul   eax,DWORD PTR [ebx-0x77],0x55078c28
  424f8e:	pop    eax
  424f8f:	mov    bl,0x5e
  424f91:	sti    
  424f92:	mov    al,ds:0x76c96072
  424f97:	out    0x33,al
  424f99:	and    eax,0x84c04573
  424f9e:	cs and ebx,esp
  424fa1:	pusha  
  424fa2:	fwait
  424fa3:	jne    0x424f5d
  424fa5:	aad    0x44
  424fa7:	pop    edx
  424fa8:	sbb    al,0x30
  424faa:	adc    edi,DWORD PTR [ebx]
  424fac:	lods   al,BYTE PTR ds:[esi]
  424fad:	or     bh,BYTE PTR [ecx]
  424faf:	(bad)  
  424fb0:	mov    ecx,0xe3daf988
  424fb5:	popf   
  424fb6:	mov    ecx,DWORD PTR ss:[esi+ecx*4-0x3f]
  424fbb:	jecxz  0x42502a
  424fbd:	push   0x8c2c1189
  424fc2:	add    DWORD PTR ds:0x7be22bb2,ebx
  424fc8:	pop    ebp
  424fc9:	(bad)  
  424fca:	add    DWORD PTR [ecx+0x1a],ebp
  424fcd:	inc    edi
  424fce:	and    eax,0x86340338
  424fd3:	dec    edi
  424fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fd5:	mov    dl,BYTE PTR [esi]
  424fd7:	lds    esp,FWORD PTR [ebp+0x15b5bea0]
  424fdd:	in     al,dx
  424fde:	inc    ecx
  424fdf:	jns    0x424fc1
  424fe1:	adc    al,0x9c
  424fe3:	push   es
  424fe4:	mov    dl,0x2d
  424fe6:	push   esp
  424fe7:	jmp    0x424fa6
  424fe9:	test   al,0x38
  424feb:	xchg   ecx,eax
  424fec:	mov    ah,0x75
  424fee:	js     0x424fb3
  424ff0:	add    bh,dh
  424ff2:	add    dh,BYTE PTR [esi+eax*1+0x181d4d2e]
  424ff9:	xchg   esp,eax
  424ffa:	aaa    
  424ffb:	fldenv [ecx]
  424ffd:	inc    ebx
  424ffe:	std    
  424fff:	cmp    eax,0x4e7b7a06
  425004:	loope  0x425029
  425006:	dec    edx
  425007:	fmul   st,st(2)
  425009:	mov    ebx,0xf45103ff
  42500e:	push   0xc21be4bc
  425013:	loop   0x424fbb
  425015:	xbegin 0x911d20c1
  42501b:	lock mov WORD PTR [eax-0x26],?
  42501f:	xor    al,0x44
  425021:	fs xor eax,0x70785aea
  425027:	xor    BYTE PTR [ecx+0x64a62ba8],bl
  42502d:	(bad)  
  42502f:	ret    
  425030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425031:	inc    edi
  425032:	cmp    al,0x6b
  425034:	lods   al,BYTE PTR ds:[esi]
  425035:	fidiv  WORD PTR [ecx-0x631fd45f]
  42503b:	push   ebx
  42503c:	sti    
  42503d:	loop   0x42505a
  42503f:	ror    DWORD PTR [edx+edx*4+0x79252711],cl
  425046:	call   0xbc504c45
  42504b:	or     eax,0xd5b46c
	...
  425058:	add    BYTE PTR [eax],al
  42505a:	inc    ebx
  42505b:	lea    ebx,[edi]
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0x18
  425067:	push   ecx
  425068:	mov    al,ds:0x1c89f5b
  42506d:	add    ch,bh
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    BYTE PTR [edi],dl
  425073:	mov    esp,0x37b49dc9
  425078:	pusha  
  425079:	pop    eax
  42507a:	jg     0x425026
  42507c:	add    ebx,esi
  42507e:	inc    eax
  42507f:	cld    
  425080:	cs stos BYTE PTR es:[edi],al
  425082:	sub    BYTE PTR [ebp-0x4c],ah
  425085:	sahf   
  425086:	lahf   
  425087:	fisttp WORD PTR [edx]
  425089:	push   ecx
  42508a:	or     al,bh
  42508c:	fnstcw WORD PTR [ebp+0xf]
  42508f:	gs repz js 0x4250a1
  425093:	js     0x425042
  425095:	mov    ch,0x5f
  425097:	sbb    al,bh
  425099:	xchg   esi,eax
  42509a:	mov    dl,0x5
  42509c:	mov    esi,0x8d846137
  4250a1:	sub    esi,DWORD PTR [edi-0x320b3423]
  4250a7:	push   ebp
  4250a8:	sub    DWORD PTR [ebx+0x12dc1f4c],eax
  4250ae:	cmp    esp,DWORD PTR [esi]
  4250b0:	and    ah,BYTE PTR [edx+0x55]
  4250b3:	es call 0x5579959f
  4250b9:	addr16 in eax,0x18
  4250bc:	shl    BYTE PTR [eax-0x4732da07],cl
  4250c2:	aas    
  4250c3:	inc    esp
  4250c4:	fist   DWORD PTR [edx-0x7e8ca781]
  4250ca:	cmc    
  4250cb:	cmp    DWORD PTR [edx],ebx
  4250cd:	leave  
  4250ce:	xchg   BYTE PTR [edx-0x49],ah
  4250d1:	test   DWORD PTR [ecx-0x6ad00e06],ebx
  4250d7:	xchg   ecx,eax
  4250d8:	dec    ebp
  4250d9:	rol    BYTE PTR [esp+eiz*4-0x44],1
  4250dd:	jl     0x42510c
  4250df:	fld    TBYTE PTR [edx+0x75]
  4250e2:	mov    ah,0x9a
  4250e4:	and    al,0x37
  4250e6:	int    0x7d
  4250e8:	xchg   esi,eax
  4250e9:	adc    BYTE PTR [edx],al
  4250eb:	retf   
  4250ec:	adc    DWORD PTR [ebx+0x651959c9],esp
  4250f2:	jns    0x4250ed
  4250f4:	js     0x42511e
  4250f6:	jo     0x425162
  4250f8:	push   es
  4250f9:	lea    ebx,[edx]
  4250fb:	push   ebp
  4250fc:	(bad)  
  4250fd:	sub    dh,BYTE PTR [ebx+eiz*2-0x51d4c5c2]
  425104:	or     DWORD PTR [edx+0x43],0xffffffce
  425108:	jecxz  0x4250e6
  42510a:	push   edi
  42510b:	(bad)  
  42510c:	mov    edi,0x16eb7f5e
  425111:	scas   eax,DWORD PTR es:[edi]
  425112:	std    
  425113:	outs   dx,DWORD PTR ds:[esi]
  425114:	sub    eax,0xbc4470d7
  425119:	mov    al,0x8e
  42511b:	data16 cld 
  42511d:	or     al,0xdc
  42511f:	repnz xor BYTE PTR [esi+0x3],dh
  425123:	mov    DWORD PTR [esi+0x4b9fed92],esi
  425129:	ja     0x42510b
  42512b:	stos   DWORD PTR es:[edi],eax
  42512c:	mov    eax,0x5d73f257
  425131:	icebp  
  425132:	pop    esp
  425133:	cmp    ch,BYTE PTR [ecx+0x76]
  425136:	mov    eax,ds:0xf54ecf33
  42513b:	cmp    ecx,ecx
  42513d:	rcl    esi,0x2d
  425140:	add    ah,bh
  425142:	test   al,0xf7
  425144:	pop    esp
  425145:	mov    eax,ds:0x48989e74
  42514a:	int    0x87
  42514c:	js     0x425172
  42514e:	gs adc eax,0x6df22ffe
  425154:	fldenv [esi]
  425156:	sub    ah,BYTE PTR [ecx]
  425158:	adc    al,0x4e
  42515a:	test   al,0x1a
  42515c:	cmp    cl,dl
  42515e:	nop
  42515f:	xor    ebx,DWORD PTR [edi+0x34]
  425162:	sub    ecx,ebx
  425164:	mov    dl,0xd
  425166:	push   esp
  425167:	je     0x425151
  425169:	mov    cl,0xf2
  42516b:	fimul  DWORD PTR [edx-0x1f]
  42516e:	add    DWORD PTR [ebx+0x3d],eax
  425171:	pop    esi
  425172:	sbb    BYTE PTR [esi-0x1344bfdd],ah
  425178:	inc    ebp
  425179:	ret    0x65cf
  42517c:	aas    
  42517d:	xor    esp,eax
  42517f:	lahf   
  425180:	jge    0x42511a
  425182:	mov    eax,0xa1e0727e
  425187:	stos   DWORD PTR es:[edi],eax
  425188:	mov    eax,ds:0x54ceba0b
  42518d:	mov    al,0x7
  42518f:	sahf   
  425190:	jae    0x42517d
  425192:	fstp   QWORD PTR [eax-0x3acf9d0e]
  425198:	cdq    
  425199:	adc    DWORD PTR ds:0x42337392,0xffffffaa
  4251a0:	test   DWORD PTR [edi-0x196f643b],0xe3f65983
  4251aa:	or     bh,BYTE PTR [ebx-0x5f]
  4251ad:	cld    
  4251ae:	scas   al,BYTE PTR es:[edi]
  4251af:	imul   BYTE PTR ds:0xff7d77e4
  4251b5:	mov    esi,0x8f313ed5
  4251ba:	sub    DWORD PTR [edi],ebp
  4251bc:	call   0xdb69:0x5f12b993
  4251c3:	or     DWORD PTR [ebx+0x35],ecx
  4251c6:	xor    bl,BYTE PTR [edi]
  4251c8:	scas   al,BYTE PTR es:[edi]
  4251c9:	fs hlt 
  4251cb:	mov    WORD PTR [edx-0x14],es
  4251ce:	fstp   DWORD PTR [eax]
  4251d0:	in     eax,0xb8
  4251d2:	inc    edx
  4251d3:	pop    ebp
  4251d4:	cmp    BYTE PTR [ebx],0xd2
  4251d7:	mov    ecx,0xfdc6db31
  4251dc:	mov    ch,0x21
  4251de:	pop    edi
  4251df:	stos   BYTE PTR es:[edi],al
  4251e0:	and    DWORD PTR [ebx-0x24],esp
  4251e3:	push   esp
  4251e4:	mov    al,ds:0xef40637c
  4251e9:	and    al,0xd8
  4251eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251ec:	pop    cx
  4251ee:	inc    ebp
  4251ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251f0:	cwde   
  4251f1:	adc    BYTE PTR [edx+0x1d],0x2e
  4251f5:	push   0x40
  4251f7:	popf   
  4251f8:	iret   
  4251f9:	add    esi,DWORD PTR [eax+edx*1-0x4e1b3995]
  425200:	jno    0x425266
  425202:	int3   
  425203:	inc    esi
  425204:	add    al,0x4a
  425206:	dec    ebp
  425207:	mov    bh,0xf9
  425209:	ror    al,1
  42520b:	inc    edi
  42520c:	(bad)  
  42520d:	cwde   
  42520e:	pop    es
  42520f:	imul   edi,DWORD PTR [ebx-0x27],0xcc4d1492
  425216:	mov    ecx,DWORD PTR [eax-0xf]
  425219:	inc    ebx
  42521a:	mov    dh,BYTE PTR [esi]
  42521c:	cmp    BYTE PTR [ecx-0x7a40b635],0x7d
  425223:	call   FWORD PTR [ebx-0x6d2d2377]
  425229:	loop   0x42529b
  42522b:	push   ecx
  42522c:	rcr    BYTE PTR [eax],1
  42522e:	das    
  42522f:	retf   0x2ad7
  425232:	lods   al,BYTE PTR ds:[esi]
  425233:	jge    0x42526b
  425235:	mov    bh,0xe
  425237:	ds mov edi,0xdda7e3ec
  42523d:	sahf   
  42523e:	adc    ebx,DWORD PTR [edx+0x57ad4053]
  425244:	call   0x5d12:0x6d92832c
  42524b:	dec    ebx
  42524c:	mov    ebp,0x784dd458
  425251:	pop    ss
  425252:	sub    al,0x47
  425254:	shl    DWORD PTR [ebx],cl
  425256:	add    DWORD PTR [edx-0x358792ac],esp
  42525c:	xchg   edx,eax
  42525d:	rcr    esi,cl
  42525f:	push   esp
  425260:	sbb    BYTE PTR [eax+0x64],al
  425263:	sub    ebx,DWORD PTR [edi+esi*8]
  425266:	adc    eax,0x17aef901
  42526b:	jl     0x425282
  42526d:	ins    BYTE PTR es:[edi],dx
  42526e:	fild   DWORD PTR [eax]
	...
  425278:	add    BYTE PTR [eax],al
  42527a:	hlt    
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	mov    ds:0x9c6d5678,eax
  42528b:	retf   0x1
  42528e:	std    
  42528f:	add    DWORD PTR [eax],eax
  425291:	add    bl,ah
  425293:	lods   al,BYTE PTR ds:[esi]
  425294:	test   eax,0xe9d3ea0d
  425299:	push   edx
  42529a:	xchg   dh,dl
  42529c:	shl    bl,cl
  42529e:	ret    0xe05a
  4252a1:	sbb    ah,0x1a
  4252a4:	xor    bh,BYTE PTR [eax+0x29a7fc6d]
  4252aa:	jge    0x4252eb
  4252ac:	adc    eax,0x8aafd100
  4252b1:	push   ebp
  4252b2:	ret    0xaefa
  4252b5:	pop    edi
  4252b6:	pop    edi
  4252b7:	retf   
  4252b8:	sahf   
  4252b9:	jl     0x42530c
  4252bb:	arpl   WORD PTR [esi-0x7c],di
  4252be:	es jns 0x42530a
  4252c1:	add    DWORD PTR [esi],ebp
  4252c3:	and    dh,dl
  4252c5:	(bad)  
  4252c6:	fistp  QWORD PTR [edx-0x3f]
  4252c9:	sti    
  4252ca:	jle    0x4252bd
  4252cc:	cmp    BYTE PTR [eax+esi*2-0x58],dl
  4252d0:	and    edx,DWORD PTR [esi-0x59]
  4252d3:	xor    esi,DWORD PTR [eax+edi*8]
  4252d6:	(bad)  
  4252d7:	in     al,dx
  4252d8:	fs dec edx
  4252da:	aad    0x50
  4252dc:	gs mov cl,0x58
  4252df:	inc    ebp
  4252e0:	iret   
  4252e1:	lods   al,BYTE PTR ds:[esi]
  4252e2:	lahf   
  4252e3:	sahf   
  4252e4:	test   eax,0x2a590921
  4252e9:	pop    esi
  4252ea:	inc    ebx
  4252eb:	out    dx,eax
  4252ec:	pushf  
  4252ed:	xor    DWORD PTR [esi],ebp
  4252ef:	ins    DWORD PTR es:[edi],dx
  4252f0:	jnp    0x42534a
  4252f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252f3:	icebp  
  4252f4:	test   DWORD PTR [ebp+0x3f884c14],eax
  4252fa:	rol    DWORD PTR [esi+ecx*8-0x1a10d10a],1
  425301:	gs addr16 pop es
  425304:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425306:	(bad)  
  425307:	xor    al,BYTE PTR [eax-0x3d8e398f]
  42530d:	or     al,0x51
  42530f:	push   ecx
  425310:	mov    ebx,0xd8d0b7b9
  425315:	xchg   esi,eax
  425316:	add    dl,BYTE PTR [ecx-0x3f]
  425319:	out    0x8,eax
  42531b:	popf   
  42531c:	add    eax,0x5e2a0db2
  425321:	push   ebx
  425322:	clc    
  425323:	push   ss
  425324:	push   edx
  425325:	addr16 pop ebp
  425327:	imul   ecx,DWORD PTR [edx],0x77
  42532a:	or     bh,dl
  42532c:	cld    
  42532d:	outs   dx,BYTE PTR ds:[esi]
  42532e:	std    
  42532f:	inc    eax
  425330:	sub    eax,0xa90cf374
  425335:	mov    ebx,0xc09863e2
  42533a:	cmp    al,BYTE PTR [edx]
  42533c:	jp     0x42537b
  42533e:	(bad)  
  42533f:	pushf  
  425340:	lods   al,BYTE PTR ds:[esi]
  425341:	ja     0x42538b
  425343:	xchg   esp,eax
  425344:	sub    ah,cl
  425346:	fstp   DWORD PTR [edx-0x1a259e92]
  42534c:	imul   eax,DWORD PTR [eax+0x37483172],0x2a
  425353:	xor    bl,BYTE PTR [ebx-0x2b]
  425356:	loop   0x4253b2
  425358:	cmp    BYTE PTR [ecx],ah
  42535a:	add    bl,dl
  42535c:	push   ecx
  42535d:	cmp    bh,bh
  42535f:	dec    esp
  425360:	xor    edi,esi
  425362:	jno    0x42534b
  425364:	pop    ss
  425365:	jl     0x425355
  425367:	xchg   edi,eax
  425368:	inc    esp
  425369:	daa    
  42536a:	cs xchg edi,eax
  42536c:	inc    esp
  42536d:	and    DWORD PTR [esi],ebx
  42536f:	adc    bl,ch
  425371:	dec    eax
  425372:	cmp    DWORD PTR [ebp-0x7038197f],ecx
  425378:	mov    esp,0xf5f7bc0
  42537d:	or     edx,ebx
  42537f:	(bad)  [edx-0x23]
  425382:	jge    0x42536d
  425384:	xor    eax,0xc220cce8
  425389:	outs   dx,BYTE PTR ds:[esi]
  42538a:	js     0x4253f4
  42538c:	inc    esp
  42538d:	push   0xb93aec08
  425392:	adc    DWORD PTR [esi-0x4aaa7e4b],edx
  425398:	mov    bh,0x2d
  42539a:	sub    DWORD PTR [ebx],edi
  42539c:	and    bh,cl
  42539e:	test   BYTE PTR [ecx],al
  4253a0:	cmc    
  4253a1:	mov    ds:0x51c419dc,al
  4253a6:	test   al,0x9
  4253a8:	pop    ecx
  4253a9:	adc    DWORD PTR [edi],edi
  4253ab:	(bad)  
  4253ac:	in     eax,dx
  4253ad:	aam    0xec
  4253af:	and    al,0xd
  4253b1:	and    al,0x52
  4253b3:	xor    dh,BYTE PTR [esi-0x27]
  4253b6:	sahf   
  4253b7:	xor    DWORD PTR [eax+0x6b2b5115],edi
  4253bd:	fdiv   DWORD PTR [esi-0x7f7fa09]
  4253c3:	cmp    DWORD PTR [ecx-0x58dc508f],0x18
  4253ca:	jbe    0x425374
  4253cc:	add    al,0x3f
  4253ce:	dec    esi
  4253cf:	jmp    0x9c57c9b5
  4253d4:	icebp  
  4253d5:	out    0x1a,al
  4253d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253d8:	cwde   
  4253d9:	int3   
  4253da:	pushf  
  4253db:	mov    al,0x3d
  4253dd:	dec    eax
  4253de:	arpl   WORD PTR [ebx],sp
  4253e0:	test   eax,0xc15a654a
  4253e5:	push   0xd43228f1
  4253ea:	test   DWORD PTR [ebx+0x129452de],ebp
  4253f0:	mov    al,0x5c
  4253f2:	push   esp
  4253f3:	push   ds
  4253f4:	pusha  
  4253f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253f6:	jmp    0x425419
  4253f8:	xor    al,0xe4
  4253fa:	xchg   ebx,eax
  4253fb:	push   edx
  4253fc:	or     bh,BYTE PTR [esp+eiz*8-0x20eef856]
  425403:	xchg   esi,eax
  425404:	fistp  QWORD PTR [edx-0x348a4a07]
  42540a:	mov    ds:0xe4c1d8bd,al
  42540f:	push   ds
  425410:	mov    ch,0xe9
  425412:	in     al,dx
  425413:	les    edi,FWORD PTR [ebx+0xc]
  425416:	retf   
  425417:	or     al,0xfb
  425419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42541a:	add    ah,bl
  42541c:	(bad)  
  42541d:	adc    eax,0x88b2ba57
  425422:	xchg   ecx,eax
  425423:	add    edx,0x1
  425426:	fwait
  425427:	jne    0x425419
  425429:	adc    ch,BYTE PTR [esi+0x2a]
  42542c:	cli    
  42542d:	hlt    
  42542e:	lea    eax,[ebp-0x32]
  425431:	xchg   esp,eax
  425432:	into   
  425433:	adc    edx,DWORD PTR [edi]
  425435:	jmp    0x42546e
  425437:	es xor eax,0x4af0537c
  42543d:	scas   eax,DWORD PTR es:[edi]
  42543e:	push   sp
  425440:	add    BYTE PTR [eax-0x3f],bh
  425443:	rcl    BYTE PTR [edi-0x64cfa9e4],cl
  425449:	fsubr  DWORD PTR [eax+0x503ee4cb]
  42544f:	inc    edx
  425450:	(bad)  
  425451:	jnp    0x4253ed
  425453:	cmp    al,0x30
  425455:	dec    eax
  425456:	aam    0x18
  425458:	bound  ecx,QWORD PTR [eax-0x3be2eb41]
  42545e:	jmp    0x8fc92208
  425463:	jl     0x42541c
  425465:	loop   0x425448
  425467:	in     al,0x2b
  425469:	or     al,0x27
  42546b:	or     al,BYTE PTR [esi+0x5e]
  42546e:	es hlt 
  425470:	jb     0x42549d
  425472:	push   edx
  425473:	mov    cl,0xf2
  425475:	hlt    
  425476:	repz fisttp DWORD PTR [edi+ebp*8+0x5b]
  42547b:	cli    
  42547c:	(bad)  
  42547d:	mov    ds:0x6ecc2929,eax
  425482:	cs mov ecx,0xa65add1a
  425488:	mov    edi,0xa532048a
  42548d:	xor    BYTE PTR [ebx+0x0],bh
	...
  425498:	add    BYTE PTR [eax],al
  42549a:	push   esp
  42549b:	ds and al,0x19
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	sbb    edi,DWORD PTR [ebp+0x7f]
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	scas   eax,DWORD PTR es:[edi]
  4254a7:	or     ecx,ecx
  4254a9:	pop    es
  4254aa:	cdq    
  4254ab:	int3   
  4254ac:	add    DWORD PTR [eax],eax
  4254ae:	std    
  4254af:	add    DWORD PTR [eax],eax
  4254b1:	add    BYTE PTR [edi],al
  4254b3:	sub    ch,BYTE PTR [esp+edx*8]
  4254b6:	pop    ds
  4254b7:	cs cmp al,0x76
  4254ba:	jmp    0x23fd:0xd26d7b97
  4254c1:	(bad)  
  4254c2:	mov    ebp,0x6e9aea6b
  4254c7:	add    al,0x9f
  4254c9:	dec    ebx
  4254ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254cb:	add    al,0xf1
  4254cd:	iret   
  4254ce:	push   cs
  4254cf:	aam    0x4d
  4254d1:	xchg   ebx,eax
  4254d2:	mov    cs,WORD PTR [ebx-0x19]
  4254d5:	xlat   BYTE PTR ds:[ebx]
  4254d6:	jno    0x425503
  4254d8:	mov    ch,0xe3
  4254da:	push   ebp
  4254db:	nop
  4254dc:	push   ecx
  4254dd:	inc    ebp
  4254de:	pop    ebx
  4254df:	add    eax,0xd1f4857e
  4254e4:	inc    esi
  4254e5:	inc    eax
  4254e6:	or     BYTE PTR [eax],ch
  4254e8:	(bad)  [edx+0x3e]
  4254eb:	mov    ecx,0xb86565b7
  4254f0:	imul   esp,DWORD PTR [edx-0xefae965],0x7a96614b
  4254fa:	dec    ebp
  4254fb:	mov    eax,ds:0x59f6585
  425500:	push   ds
  425501:	test   BYTE PTR [edx+0x30bf5acd],dl
  425507:	sub    al,0x72
  425509:	out    dx,eax
  42550a:	mov    ch,0x3e
  42550c:	dec    esp
  42550d:	xchg   edx,eax
  42550e:	mov    ds:0xb85422a8,eax
  425513:	aad    0x64
  425515:	retf   
  425516:	les    edi,FWORD PTR [esi]
  425518:	stc    
  425519:	psubb  mm2,mm3
  42551c:	ficom  WORD PTR [ebx-0x6ba7846a]
  425522:	rcl    BYTE PTR [esi+esi*1+0x9],0x85
  425527:	sar    bl,0x57
  42552a:	hlt    
  42552b:	retf   0xd9c8
  42552e:	jmp    0xe7316d5b
  425533:	jnp    0x42552c
  425535:	arpl   WORD PTR ds:0xd18a0ee8,bp
  42553b:	fistp  DWORD PTR [edx-0x7]
  42553e:	cmc    
  42553f:	imul   ebx,DWORD PTR [eax-0x24],0xb3abdf3e
  425546:	pusha  
  425547:	or     al,bh
  425549:	push   es
  42554a:	test   DWORD PTR [eax],0x9accea2a
  425550:	in     eax,0x9f
  425552:	push   esi
  425553:	jl     0x42556e
  425555:	lea    eax,[edx-0x24]
  425558:	rol    BYTE PTR ss:[edx],cl
  42555b:	push   edi
  42555c:	dec    esi
  42555d:	mov    ds:0xd9b25afa,al
  425562:	adc    eax,0x9111cb1d
  425567:	call   0x1500:0x1146b512
  42556e:	cdq    
  42556f:	and    bl,BYTE PTR [edi+0x3c06afc4]
  425575:	adc    edi,edx
  425577:	int    0xb5
  425579:	or     al,0x2c
  42557b:	inc    edx
  42557c:	test   al,0x2d
  42557e:	ret    
  42557f:	or     esi,eax
  425581:	imul   ecx,DWORD PTR [edx+ebx*2+0x2a253085],0xffffffaf
  425589:	(bad)  
  42558a:	pop    esp
  42558b:	mov    bh,BYTE PTR [edi-0x16c1de5d]
  425591:	call   0xb82f8be7
  425596:	mov    cl,0x29
  425598:	shl    bl,cl
  42559a:	cmp    esi,eax
  42559c:	into   
  42559d:	mov    bh,0xa6
  42559f:	call   0x9d6b:0x64c5b8ce
  4255a6:	mov    ebp,0x4f031d68
  4255ab:	inc    esp
  4255ac:	retf   
  4255ad:	test   al,0x7b
  4255af:	push   ss
  4255b0:	outs   dx,DWORD PTR ds:[esi]
  4255b1:	pop    esi
  4255b2:	add    al,0xa
  4255b4:	and    eax,0xd7205d87
  4255b9:	out    dx,eax
  4255ba:	xor    al,0xa
  4255bc:	sbb    ecx,DWORD PTR [edi+0x45]
  4255bf:	add    eax,0x2a54d44e
  4255c4:	or     esp,esp
  4255c6:	add    eax,0xee8bc06e
  4255cb:	iret   
  4255cc:	ud2    
  4255ce:	push   edi
  4255cf:	shl    ecx,1
  4255d1:	cdq    
  4255d2:	pandn  mm1,QWORD PTR [edx]
  4255d5:	mov    esi,0x74b7d7fa
  4255da:	(bad)  
  4255db:	fld    DWORD PTR [esi+0x7a]
  4255de:	inc    edi
  4255df:	mov    bl,0xec
  4255e1:	loop   0x42561a
  4255e3:	cmp    eax,0x49531667
  4255e8:	xchg   edi,eax
  4255e9:	dec    edx
  4255ea:	sub    edx,DWORD PTR [edx+eax*1+0x4c2ade7a]
  4255f1:	les    ebp,FWORD PTR [eax-0x1e4bffe0]
  4255f7:	ins    BYTE PTR es:[edi],dx
  4255f8:	jae    0x425653
  4255fa:	xor    BYTE PTR [eax+0x61],al
  4255fd:	dec    edi
  4255fe:	dec    ebx
  4255ff:	cmp    DWORD PTR [ecx+0x4fd3bed5],esi
  425605:	adc    DWORD PTR [eax],0xc85832f5
  42560b:	mov    ecx,0xb9cccf74
  425610:	jbe    0x425600
  425612:	sub    bh,0xf1
  425615:	mov    edx,0x6679e4e1
  42561a:	adc    BYTE PTR [ebx],0x29
  42561d:	cmp    eax,0x5489e27b
  425622:	enter  0x516d,0x6e
  425626:	loopne 0x4255f9
  425628:	add    eax,0xd328af0
  42562d:	ror    DWORD PTR [ebp+0x59],1
  425630:	jl     0x425648
  425632:	or     DWORD PTR [ecx+0x50],ebx
  425635:	mov    ebx,0x14335c81
  42563a:	mov    dl,0x1d
  42563c:	push   0xad11afb2
  425641:	pop    ds
  425642:	lahf   
  425643:	pop    DWORD PTR [edi+0x40053968]
  425649:	pop    esi
  42564a:	cmp    al,0xe2
  42564c:	rol    BYTE PTR [eax],0xf4
  42564f:	jo     0x4256a1
  425651:	mov    esp,0xaaae1355
  425656:	out    dx,al
  425657:	iret   
  425658:	inc    ebx
  425659:	mov    ?,ebp
  42565b:	das    
  42565c:	push   eax
  42565d:	push   es
  42565e:	data16 xchg BYTE PTR [edx+0x1b038fab],dl
  425665:	(bad)  
  425666:	in     al,dx
  425667:	xchg   esp,eax
  425669:	adc    bl,BYTE PTR [edx+0x4969de38]
  42566f:	(bad)  
  425670:	sbb    eax,DWORD PTR [esi+edx*8-0x425241a2]
  425677:	add    cl,bh
  425679:	pop    ebx
  42567a:	mov    bl,BYTE PTR [eax+0x5f]
  42567d:	(bad)  
  42567e:	popa   
  42567f:	fldcw  WORD PTR [ecx]
  425681:	jne    0x425603
  425683:	(bad)  
  425684:	mov    esp,0x7daacfe5
  425689:	call   0xf22c:0x8e516377
  425690:	cmp    al,0x4a
  425692:	aad    0x64
  425694:	jnp    0x42563e
  425696:	pop    edx
  425697:	(bad)  
  425699:	icebp  
  42569a:	inc    edi
  42569b:	cwde   
  42569c:	mov    dh,0x97
  42569e:	loope  0x425699
  4256a0:	jo     0x425688
  4256a2:	sub    DWORD PTR [edi],esp
  4256a4:	add    DWORD PTR [ebp+edi*8+0x46],edi
  4256a8:	pop    ebp
  4256a9:	sub    ecx,edx
  4256ab:	pop    ebx
  4256ac:	enter  0x508d,0x0
	...
  4256b8:	add    BYTE PTR [eax],al
  4256ba:	mov    esi,0x74ef74ea
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	mov    ah,0x23
  4256c8:	in     al,dx
  4256c9:	call   0x442564
  4256ce:	std    
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    BYTE PTR [ebx-0x71],bl
  4256d4:	clc    
  4256d5:	test   ebx,ebx
  4256d7:	lahf   
  4256d8:	mov    ds:0x8cac2422,eax
  4256dd:	jnp    0x42573b
  4256df:	push   ss
  4256e0:	push   es
  4256e1:	addr16 mov bp,si
  4256e5:	(bad)  
  4256e6:	pop    esi
  4256e7:	dec    ebx
  4256e8:	pop    ds
  4256e9:	or     eax,0x621e762a
  4256ee:	pop    DWORD PTR [ecx+0x412f8018]
  4256f4:	bound  eax,QWORD PTR ds:0x5561ddc7
  4256fa:	leave  
  4256fb:	out    0x60,eax
  4256fd:	mov    bl,0x32
  4256ff:	enter  0x7820,0x8b
  425703:	mov    dh,0x6c
  425705:	sbb    ebx,esi
  425707:	dec    edx
  425708:	jmp    0x2cfc5146
  42570d:	adc    DWORD PTR [edi-0x64c707b8],esp
  425713:	or     edi,0xa2656180
  425719:	jl     0x425742
  42571b:	sti    
  42571c:	sub    eax,0x2e7405b8
  425721:	xchg   esp,eax
  425722:	adc    ebp,edi
  425724:	jl     0x425785
  425726:	add    edx,esi
  425728:	adc    BYTE PTR [eax+ebp*8],bl
  42572b:	js     0x4256f5
  42572d:	int    0x70
  42572f:	test   eax,0x917039ae
  425734:	fdivr  st(4),st
  425736:	imul   eax,DWORD PTR [eax+ecx*1],0x32ced5fd
  42573d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42573e:	mov    esi,0xd2d0fba1
  425743:	pop    ebp
  425744:	mov    ds:0x1afbef26,al
  425749:	inc    ebx
  42574a:	shr    BYTE PTR [eax-0x4ecc92ab],0x96
  425751:	xlat   BYTE PTR ds:[ebx]
  425752:	retf   
  425753:	shl    BYTE PTR [ebp-0x96cf936],1
  425759:	jge    0x425791
  42575b:	pushf  
  42575c:	icebp  
  42575d:	dec    eax
  42575e:	push   cs
  42575f:	pop    esp
  425760:	adc    edx,edx
  425762:	rcl    DWORD PTR [ebx-0x7b],cl
  425765:	mov    DWORD PTR [esi-0x611f1f53],edi
  42576b:	mov    edi,0xf2b2878f
  425770:	in     al,0x80
  425772:	push   edx
  425773:	fmul   QWORD PTR [ecx-0x2f]
  425776:	mov    esp,0x57226872
  42577b:	xchg   ecx,eax
  42577c:	rcr    BYTE PTR [edx+eiz*4-0x48],cl
  425780:	retf   0x596d
  425783:	cmp    dl,dl
  425785:	ror    edi,1
  425787:	mov    al,0x1b
  425789:	sub    BYTE PTR [eax+edx*8],cl
  42578c:	cli    
  42578d:	div    al
  42578f:	fild   QWORD PTR [eax+0x42]
  425792:	(bad)  
  425794:	mov    ?,WORD PTR [edx]
  425796:	adc    BYTE PTR [edx+0x2a],bl
  425799:	dec    edi
  42579a:	xor    DWORD PTR [edx-0x7cbc63d9],0xb334e6dc
  4257a4:	and    BYTE PTR [esi-0x6c],dl
  4257a7:	ins    DWORD PTR es:[edi],dx
  4257a8:	jg     0x425767
  4257aa:	shr    edi,0xe8
  4257ad:	sub    al,0xe3
  4257af:	je     0x425762
  4257b1:	retf   
  4257b2:	fldlg2 
  4257b4:	mov    al,0x32
  4257b6:	add    ah,ch
  4257b8:	int3   
  4257b9:	sbb    edi,DWORD PTR [edx-0x3e]
  4257bc:	jo     0x4257b3
  4257be:	push   ebp
  4257bf:	inc    ebx
  4257c0:	cmp    bh,dh
  4257c2:	out    0x7c,eax
  4257c4:	mov    ch,0xed
  4257c6:	jecxz  0x42576c
  4257c8:	add    bh,BYTE PTR [edx+0x3e5bd5d8]
  4257ce:	or     al,0xb8
  4257d0:	xor    DWORD PTR [esi+0x17],ecx
  4257d3:	mov    ebp,0xbabc61fe
  4257d8:	xor    ecx,esp
  4257da:	jl     0x425827
  4257dc:	imul   eax,DWORD PTR [edx-0x14df5003],0xffffffbb
  4257e3:	aaa    
  4257e4:	fwait
  4257e5:	int3   
  4257e6:	and    edx,DWORD PTR [edx+0x149c1be3]
  4257ec:	xor    al,0x6d
  4257ee:	stc    
  4257ef:	popa   
  4257f0:	push   esp
  4257f1:	popf   
  4257f2:	dec    edx
  4257f3:	cdq    
  4257f4:	loop   0x42578e
  4257f6:	in     al,0xec
  4257f8:	xchg   edx,eax
  4257f9:	icebp  
  4257fa:	ret    0x9e04
  4257fd:	dec    ecx
  4257fe:	xor    BYTE PTR [edx],ah
  425800:	xchg   BYTE PTR [ebx+0x5c66e24b],ah
  425806:	jnp    0x42586c
  425808:	mov    ebp,0xf3267fdf
  42580d:	or     cl,BYTE PTR [ebx-0x40d61c59]
  425813:	out    0x9f,al
  425815:	not    bh
  425817:	in     eax,dx
  425818:	adc    cl,dh
  42581a:	bound  eax,QWORD PTR [esi]
  42581c:	pop    ebp
  42581d:	sub    cl,BYTE PTR [edi+0x62b8b6cf]
  425823:	cmp    dl,BYTE PTR ds:0x9e51d72d
  425829:	repz mov dh,0xcd
  42582c:	hlt    
  42582d:	inc    ebp
  42582e:	icebp  
  42582f:	das    
  425830:	call   0xf13704a0
  425835:	pop    ss
  425836:	xchg   DWORD PTR ds:0x6ae8b062,ebp
  42583c:	mov    edx,0x232cc8d6
  425841:	cmp    DWORD PTR [ebx+eiz*1+0x72b2cbc5],esi
  425848:	jns    0x42583d
  42584a:	in     al,dx
  42584b:	fnstsw WORD PTR [ecx+0x1edec9e1]
  425851:	add    BYTE PTR [ebp+0x3d],ch
  425854:	push   ebx
  425855:	sub    DWORD PTR [edx+0x2eb3edab],eax
  42585b:	mov    ch,0xd1
  42585d:	fadd   DWORD PTR [esi]
  42585f:	arpl   WORD PTR [eax],bp
  425861:	sbb    eax,0x4305600e
  425866:	push   0xffffff85
  425868:	jae    0x42580e
  42586a:	ret    
  42586b:	inc    edi
  42586c:	fwait
  42586d:	neg    DWORD PTR [ebp+0x3f26dc69]
  425873:	push   DWORD PTR [ebp+0x2b189efc]
  425879:	jmp    0x5768:0x1f6b1420
  425880:	or     dl,ah
  425882:	in     eax,0x52
  425884:	sub    BYTE PTR [edi+0x6e8e6ff2],bl
  42588a:	aaa    
  42588b:	mov    dh,0x12
  42588d:	sub    eax,0x104b083b
  425892:	imul   bh
  425894:	or     ah,BYTE PTR [ebp-0x53]
  425897:	cmp    BYTE PTR [edx],ch
  425899:	mov    ch,0x84
  42589b:	sub    al,0x75
  42589d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42589e:	data16 data16 mov ah,0x5d
  4258a2:	inc    eax
  4258a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258a4:	xor    BYTE PTR ss:[eax+0x345fb280],al
  4258ab:	mov    esi,0x29d71d04
  4258b0:	add    ch,BYTE PTR [edi-0x732b8d41]
  4258b6:	aad    0x31
  4258b8:	popa   
  4258b9:	sbb    al,0x9f
  4258bb:	outs   dx,DWORD PTR ds:[esi]
  4258bc:	repz dec edi
  4258be:	jl     0x425932
  4258c0:	fnstenv [ecx-0x3c]
  4258c3:	shl    BYTE PTR [edx],cl
  4258c5:	test   DWORD PTR [esi+esi*4],0xf601576
  4258cc:	pop    es
  4258cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258ce:	xor    al,0x0
	...
  4258d8:	add    BYTE PTR [eax],al
  4258da:	dec    ebx
  4258db:	inc    ebp
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	and    DWORD PTR [ecx-0x2f6c1a0f],0x1fd0001
  4258f0:	add    BYTE PTR [eax],al
  4258f2:	popa   
  4258f3:	push   cs
  4258f4:	mov    ?,WORD PTR [esi+0x1d]
  4258f7:	mov    ds:0xf3164bc2,eax
  4258fc:	stos   DWORD PTR es:[edi],eax
  4258fd:	(bad)  
  4258ff:	jno    0x4258ab
  425901:	mov    ds:0x8ee7ae4,eax
  425906:	push   ss
  425907:	mov    dh,0xe8
  425909:	ror    edi,1
  42590b:	stos   BYTE PTR es:[edi],al
  42590c:	and    BYTE PTR [eax+edx*8],bl
  42590f:	and    DWORD PTR [ebx-0x4f0959ff],0x73
  425916:	add    eax,0x3dae0d6d
  42591b:	add    cl,bh
  42591d:	push   edx
  42591e:	pop    ebp
  42591f:	or     esi,esp
  425921:	dec    esp
  425922:	sub    eax,0x3f5c5765
  425927:	mov    ebp,0x9f6483
  42592c:	lds    ebx,FWORD PTR ds:0xae008bcd
  425932:	aas    
  425933:	pop    edi
  425934:	inc    edx
  425935:	push   cs
  425936:	xor    DWORD PTR [eax],esp
  425938:	pop    eax
  425939:	dec    DWORD PTR ds:0x371560b0
  42593f:	cs ret 0x67b9
  425943:	lds    edx,FWORD PTR [ebp+0xd]
  425946:	bound  eax,QWORD PTR [edi]
  425948:	and    al,0xe7
  42594a:	xchg   ebx,edx
  42594c:	inc    edx
  42594d:	cmp    dh,BYTE PTR [ebx-0x3a27b5af]
  425953:	test   al,0xfa
  425955:	mov    ds:0x4c331238,al
  42595a:	mov    eax,0x2ffd4a6d
  42595f:	push   edi
  425960:	lds    ecx,FWORD PTR [esi-0x246cb374]
  425966:	add    al,0x2a
  425968:	pusha  
  425969:	cmp    DWORD PTR [esi+0xf],esp
  42596c:	cwde   
  42596d:	and    esp,ebp
  42596f:	mov    eax,0xa7f3d839
  425974:	push   ecx
  425975:	jo     0x42590c
  425977:	xchg   ebp,eax
  425978:	ret    0x91f9
  42597b:	mov    dl,0x6
  42597d:	aam    0x95
  42597f:	nop
  425980:	imul   edx,edi,0x7da12997
  425986:	add    al,0x89
  425988:	rol    BYTE PTR ds:0x15de18e5,cl
  42598e:	enter  0x1927,0x7a
  425992:	push   esi
  425993:	sub    BYTE PTR [ebp-0x3c],bl
  425996:	scas   eax,DWORD PTR es:[edi]
  425997:	iret   
  425998:	popf   
  425999:	sub    eax,0x845c4019
  42599e:	sbb    eax,0xb29f33b4
  4259a3:	in     al,0xe5
  4259a5:	push   ecx
  4259a6:	or     DWORD PTR [ebx],edx
  4259a8:	mov    al,ds:0xc8c509b8
  4259ad:	push   edi
  4259ae:	fs cmp eax,0x6bebabad
  4259b4:	leave  
  4259b5:	sbb    al,0x95
  4259b7:	rol    BYTE PTR [esi+eiz*1+0x38],cl
  4259bb:	gs adc al,0x6f
  4259be:	(bad)  
  4259bf:	fidivr DWORD PTR [eax-0x78629a89]
  4259c5:	imul   esi,ecx,0xeb3512ae
  4259cb:	adc    ah,BYTE PTR [ecx]
  4259cd:	cwde   
  4259ce:	daa    
  4259cf:	sahf   
  4259d0:	pop    edi
  4259d1:	cmp    al,0xcc
  4259d3:	or     ah,bl
  4259d5:	xor    DWORD PTR [esi+ecx*2+0x30],0xc59d01c5
  4259dd:	gs in  al,dx
  4259df:	jmp    0xc08c:0xd348f92c
  4259e6:	jae    0x42596f
  4259e8:	(bad)  
  4259e9:	repnz sub esp,DWORD PTR [esi]
  4259ec:	push   eax
  4259ed:	nop
  4259ee:	test   al,0x8e
  4259f0:	adc    DWORD PTR [ebx-0x5e],0xffffffc0
  4259f4:	std    
  4259f5:	mov    esp,0xf36e9eb2
  4259fa:	out    0x43,eax
  4259fc:	inc    edi
  4259fd:	sub    ebp,ecx
  4259ff:	lods   al,BYTE PTR ds:[esi]
  425a00:	adc    eax,0x9983526f
  425a05:	scas   eax,DWORD PTR es:[edi]
  425a06:	pop    ds
  425a07:	pop    ebp
  425a08:	out    dx,al
  425a09:	pop    ecx
  425a0a:	rcr    BYTE PTR [esi+0x3b],0xc8
  425a0e:	dec    edx
  425a0f:	cmc    
  425a10:	xor    DWORD PTR [ecx-0x5d],edi
  425a13:	(bad)
  425a18:	jnp    0x425a71
  425a1a:	mov    dl,0xa2
  425a1c:	es cwde 
  425a1e:	sti    
  425a1f:	stc    
  425a20:	idiv   DWORD PTR [eax-0x555b3afc]
  425a26:	iret   
  425a27:	cwde   
  425a28:	sub    ecx,DWORD PTR [ecx-0x5a9494a3]
  425a2e:	push   ss
  425a2f:	push   ebp
  425a30:	retf   0xc4c8
  425a33:	adc    esp,DWORD PTR [eax]
  425a35:	mov    WORD PTR [eax-0x649cab76],es
  425a3b:	call   0x5b03e6f4
  425a40:	mov    al,0x9e
  425a42:	jne    0x425ac2
  425a44:	sbb    DWORD PTR fs:[eax-0x8b81f3c],ecx
  425a4b:	jg     0x425ac4
  425a4d:	and    BYTE PTR [eax],ah
  425a4f:	retf   
  425a50:	pop    esp
  425a51:	pop    ebp
  425a52:	mov    esi,0xaaa1c65a
  425a57:	dec    ebx
  425a58:	and    ah,BYTE PTR [ecx+0x3aa2afa0]
  425a5e:	mov    edi,0x3fcb2d2a
  425a63:	add    esi,DWORD PTR [edx-0x14]
  425a66:	bound  ebx,QWORD PTR gs:[esi+ecx*2]
  425a6a:	daa    
  425a6b:	outs   dx,BYTE PTR gs:[esi]
  425a6d:	retf   0xece4
  425a70:	nop
  425a71:	rol    BYTE PTR [ebp-0x80],0xc1
  425a75:	adc    ecx,edx
  425a77:	add    DWORD PTR [ebx+0x3],0xffffffd4
  425a7b:	mov    bl,0x23
  425a7d:	sub    ah,bh
  425a7f:	or     esp,DWORD PTR [ecx-0x8e0d1f4]
  425a85:	cmp    ebp,edx
  425a87:	pop    edi
  425a88:	mov    dl,0x3d
  425a8a:	(bad)  
  425a8c:	je     0x425a36
  425a8e:	clc    
  425a8f:	xchg   ebx,eax
  425a90:	push   esi
  425a91:	xor    al,0x36
  425a93:	jmp    0x425ac9
  425a95:	sub    DWORD PTR [ebx+0x46],0x38
  425a99:	cmp    DWORD PTR [edx],0xffffffb4
  425a9c:	mov    dl,0x85
  425a9e:	cmovo  ebx,DWORD PTR [edi-0x63]
  425aa2:	mov    dl,0x34
  425aa4:	inc    ebx
  425aa5:	(bad)  
  425aa6:	fld    TBYTE PTR [esi-0x7b]
  425aa9:	cmp    DWORD PTR [ebx+edi*1+0x4f71618a],ecx
  425ab0:	sub    ebx,DWORD PTR [eax]
  425ab2:	or     al,BYTE PTR [ebx-0x6e]
  425ab5:	cmp    eax,0x3fd284cc
  425aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425abb:	jno    0x425aa7
  425abd:	stc    
  425abe:	cmc    
  425abf:	dec    esi
  425ac0:	xor    BYTE PTR [ecx],cl
  425ac2:	mov    cx,0xe8a5
  425ac6:	inc    ecx
  425ac7:	mov    edx,ecx
  425ac9:	cs ret 0xd77a
  425acd:	inc    esp
  425ace:	out    0xe6,eax
  425ad0:	ja     0x425acb
  425ad2:	cld    
  425ad3:	dec    edx
  425ad4:	sub    eax,0x6e4d6a65
  425ad9:	cmp    al,0x54
  425adb:	das    
  425adc:	(bad)  
  425add:	mov    ah,0xe4
  425adf:	xchg   edi,eax
  425ae0:	push   ss
  425ae1:	mov    ebx,0x647f7473
  425ae6:	pusha  
  425ae7:	sti    
  425ae8:	ret    
  425ae9:	jle    0x425ae6
  425aeb:	adc    edi,DWORD PTR [ebx+0x4744]
	...
  425af9:	add    BYTE PTR [edx-0x5b61f90],ch
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	sub    al,0xaf
  425b08:	mov    BYTE PTR [edx],cl
  425b0a:	nop
  425b0b:	rol    BYTE PTR [ecx],cl
  425b0d:	add    ch,bh
  425b0f:	add    DWORD PTR [eax],eax
  425b11:	add    BYTE PTR [eax+0xa],bh
  425b14:	dec    ecx
  425b15:	sub    eax,0xc25607b0
  425b1a:	(bad)  
  425b1c:	cmp    DWORD PTR [edx+esi*8+0x4867bb2],esi
  425b23:	call   0x10d7b46f
  425b28:	aad    0x44
  425b2a:	out    0x30,eax
  425b2c:	addr16 loope 0x425b2e
  425b2f:	loope  0x425b75
  425b31:	or     al,0xdf
  425b33:	xchg   edx,eax
  425b34:	lahf   
  425b35:	lods   al,BYTE PTR ds:[esi]
  425b36:	xchg   BYTE PTR [esi+edx*8-0x73],bh
  425b3a:	sub    ecx,DWORD PTR cs:[edi+0x22485309]
  425b41:	repz mov esi,DWORD PTR [ecx-0x1f33c71f]
  425b48:	jle    0x425b45
  425b4a:	mov    al,0x81
  425b4c:	dec    ecx
  425b4d:	mov    al,ds:0xe17d88f1
  425b52:	and    eax,0xd5b6592
  425b57:	cmp    al,0xe
  425b59:	icebp  
  425b5a:	(bad)  
  425b5b:	test   BYTE PTR [ecx],ch
  425b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b5e:	push   0x1f58fce9
  425b63:	rcl    BYTE PTR [esi+edi*1-0x59f545f9],cl
  425b6a:	xor    al,0x7c
  425b6c:	shl    DWORD PTR [esi],cl
  425b6e:	jecxz  0x425b6c
  425b70:	mov    dl,0xbe
  425b72:	div    BYTE PTR [ecx]
  425b74:	ja     0x425b11
  425b76:	push   esi
  425b77:	pushf  
  425b78:	jg     0x425b99
  425b7a:	sub    BYTE PTR [eax+0x7b5e66bc],0xba
  425b81:	dec    esp
  425b82:	mov    DWORD PTR [eax+ecx*2-0xfb4f647],ecx
  425b89:	mov    edx,DWORD PTR [edi+0x79]
  425b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b8d:	xor    ecx,0x26ddbf82
  425b93:	add    al,0x51
  425b95:	pop    ebp
  425b96:	repnz add dh,ch
  425b99:	mov    al,ds:0xa965b34f
  425b9e:	aaa    
  425b9f:	fld    DWORD PTR ss:0xe1fdca37
  425ba6:	xchg   edx,eax
  425ba7:	repnz fucomi st,st(4)
  425baa:	pop    es
  425bab:	and    eax,0xf8b94a96
  425bb0:	and    DWORD PTR [edi],ebx
  425bb2:	adc    eax,0x7eb8f18b
  425bb7:	mov    edx,DWORD PTR [ebp+0x4f1b6191]
  425bbd:	scas   al,BYTE PTR es:[edi]
  425bbe:	test   al,0xb4
  425bc0:	xchg   edx,eax
  425bc1:	cmp    eax,0x8369b735
  425bc6:	fsubr  QWORD PTR [edx-0x57]
  425bc9:	mov    cl,dl
  425bcb:	pushf  
  425bcc:	mov    ecx,0x9ea9454
  425bd1:	pusha  
  425bd2:	mov    ch,BYTE PTR [ebx+ebp*8+0x6acdb2f8]
  425bd9:	sub    DWORD PTR [eax],0x9
  425bdc:	addr16 mov ch,0xde
  425bdf:	pop    edi
  425be0:	ret    0xead8
  425be3:	jb     0x425b91
  425be5:	mov    BYTE PTR [ebp+0x209cb38],bh
  425beb:	je     0x425bfd
  425bed:	cld    
  425bee:	shr    BYTE PTR [edi+0x77],cl
  425bf1:	pop    edi
  425bf2:	push   ebx
  425bf3:	pop    esp
  425bf4:	jo     0x425bd4
  425bf6:	outs   dx,BYTE PTR ds:[esi]
  425bf7:	hlt    
  425bf8:	add    cl,0x76
  425bfb:	pop    edi
  425bfc:	xor    esi,DWORD PTR [ecx-0x4b]
  425bff:	xchg   ebx,eax
  425c00:	and    ebp,edi
  425c02:	or     bl,BYTE PTR [eax-0x27]
  425c05:	mov    ebp,0xc833711a
  425c0a:	adc    edi,0x65
  425c0d:	(bad)  
  425c0e:	pusha  
  425c0f:	(bad)  
  425c10:	mov    edx,edx
  425c12:	xchg   ebx,eax
  425c13:	cs and al,0xec
  425c16:	popa   
  425c17:	adc    ebx,DWORD PTR [edi]
  425c19:	mov    cl,0x69
  425c1b:	adc    eax,0xc52f716
  425c20:	(bad)  [esi]
  425c22:	test   al,0x43
  425c24:	loope  0x425c7e
  425c26:	cdq    
  425c27:	nop
  425c28:	xor    dh,BYTE PTR [esi]
  425c2a:	mov    esi,DWORD PTR [ebp-0x3d]
  425c2d:	nop
  425c2e:	xor    eax,0xaf1606d1
  425c33:	add    al,0x63
  425c35:	cmp    al,0x30
  425c38:	jmp    DWORD PTR [eax]
  425c3a:	sub    al,al
  425c3c:	xchg   esi,eax
  425c3d:	add    eax,0x6e5dccf0
  425c42:	int    0x4
  425c44:	lods   eax,DWORD PTR ds:[esi]
  425c45:	or     bh,BYTE PTR [ebx-0x32]
  425c48:	and    edx,DWORD PTR [ebp*1-0x3df6ad4b]
  425c4f:	fwait
  425c50:	mov    cl,0xa9
  425c52:	jl     0x425ca2
  425c54:	cmp    al,0xc4
  425c56:	inc    ebx
  425c57:	les    edi,FWORD PTR [esi+ebx*2-0x2]
  425c5b:	inc    ebp
  425c5c:	adc    al,0x40
  425c5e:	leave  
  425c5f:	inc    ecx
  425c60:	xchg   edi,eax
  425c61:	adc    al,0x22
  425c63:	ds call 0xb481:0x3a645ef3
  425c6b:	xchg   esi,eax
  425c6c:	cmp    BYTE PTR [ecx-0x41],bl
  425c6f:	push   eax
  425c70:	inc    eax
  425c71:	mov    cl,0xc1
  425c73:	fwait
  425c74:	das    
  425c75:	data16 or al,BYTE PTR [esi+edi*1]
  425c79:	jno    0x425c3e
  425c7b:	fimul  DWORD PTR [esi+0x43]
  425c7e:	dec    edx
  425c7f:	jnp    0x425cf4
  425c81:	adc    edi,edi
  425c83:	mov    gs,WORD PTR [esi+0x7acee547]
  425c89:	mov    al,0x4a
  425c8b:	push   cs
  425c8c:	push   edx
  425c8d:	pop    edi
  425c8e:	stos   DWORD PTR es:[edi],eax
  425c8f:	and    al,0xa2
  425c91:	inc    esp
  425c92:	clc    
  425c93:	imul   ebp,DWORD PTR [edi],0x995dbe2b
  425c99:	xchg   esi,eax
  425c9a:	mov    esi,0x48786199
  425c9f:	mov    edx,0x2ce7e498
  425ca4:	or     bh,BYTE PTR [eax]
  425ca6:	out    0x75,eax
  425ca8:	fcmovnu st,st(6)
  425caa:	mov    BYTE PTR [eax],ch
  425cac:	sub    eax,0x6f38b109
  425cb1:	dec    eax
  425cb2:	leave  
  425cb3:	inc    ebp
  425cb4:	sar    DWORD PTR [ecx],cl
  425cb6:	dec    edi
  425cb7:	in     eax,dx
  425cb8:	dec    ecx
  425cb9:	cmp    al,ah
  425cbb:	mov    ah,0xe
  425cbd:	jne    0x425d06
  425cbf:	loopne 0x425c4f
  425cc1:	xor    ecx,DWORD PTR [edi-0x74]
  425cc4:	(bad)  
  425cc5:	pop    esi
  425cc6:	sub    cl,0x6b
  425cc9:	ja     0x425c7d
  425ccb:	stos   BYTE PTR es:[edi],al
  425ccc:	fistp  QWORD PTR [edx+0x25]
  425ccf:	mov    edx,0xffba419
  425cd4:	mov    edx,0x308fc8b3
  425cd9:	inc    eax
  425cda:	js     0x425cf2
  425cdc:	jno    0x425d1a
  425cde:	hlt    
  425cdf:	sub    bl,BYTE PTR [edi-0x39e4c094]
  425ce5:	mov    dl,0xd6
  425ce7:	add    BYTE PTR [esi-0x1f],0xed
  425ceb:	popf   
  425cec:	aaa    
  425ced:	mov    BYTE PTR cs:[ebx],0x59
  425cf1:	jmp    0x3046b0d1
  425cf6:	jns    0x425caf
  425cf8:	ja     0x425d5c
  425cfa:	test   eax,0x13670819
  425cff:	xlat   BYTE PTR ds:[ebx]
  425d00:	xor    eax,0x8086afb8
  425d05:	xlat   BYTE PTR ds:[ebx]
  425d06:	pop    ebx
  425d07:	cs bound ebp,QWORD PTR ss:[eax]
  425d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d0c:	xor    eax,0xcd2c
	...
  425d19:	add    BYTE PTR [edx-0x79],cl
  425d1c:	push   edx
  425d1d:	dec    esp
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi+0x126d210f],ecx
  425d27:	cli    
  425d28:	jae    0x425cc0
  425d2a:	(bad)  
  425d2b:	aam    0x1
  425d2d:	add    ch,bh
  425d2f:	add    DWORD PTR [eax],eax
  425d31:	add    BYTE PTR [edi],dl
  425d33:	mov    ecx,0xd9cfa278
  425d38:	lock mov al,ds:0xff682037
  425d3e:	pop    edx
  425d3f:	sub    DWORD PTR [edx-0x6a2f70c3],esp
  425d45:	jmp    0xf3f0:0x83d6c5c5
  425d4c:	push   es
  425d4d:	jno    0x425dc8
  425d4f:	fild   WORD PTR [ebx]
  425d51:	sbb    esi,DWORD PTR [eax]
  425d53:	push   edx
  425d54:	pop    esi
  425d55:	fnstenv [ebx+0x74]
  425d58:	push   edi
  425d59:	in     al,0xf4
  425d5b:	jg     0x425d21
  425d5d:	mov    esi,0x3d9295da
  425d62:	popf   
  425d63:	inc    ecx
  425d64:	inc    ecx
  425d65:	imul   esi,edi,0xf46e2f31
  425d6b:	int3   
  425d6c:	lods   al,BYTE PTR ds:[esi]
  425d6d:	int    0x40
  425d6f:	inc    esp
  425d70:	ins    DWORD PTR es:[edi],dx
  425d71:	pop    edx
  425d72:	mov    ch,0x43
  425d74:	test   al,0xbf
  425d76:	inc    edi
  425d77:	fsub   st(7),st
  425d79:	sub    eax,0x2dfb53c5
  425d7e:	test   al,0xd6
  425d80:	lods   eax,DWORD PTR ds:[esi]
  425d82:	mov    es,WORD PTR [ebx-0x628402c9]
  425d88:	addr16 dec ebp
  425d8a:	push   esi
  425d8b:	sbb    BYTE PTR [edi],dh
  425d8d:	mov    WORD PTR [ebx+0x350596f9],fs
  425d93:	push   esi
  425d94:	pop    ebx
  425d95:	sub    DWORD PTR [ebx+0x65],0xffffffbc
  425d99:	dec    eax
  425d9a:	push   ds
  425d9b:	stos   BYTE PTR es:[edi],al
  425d9c:	mov    edi,0x67f3dd40
  425da1:	int3   
  425da2:	fucom  st(7)
  425da4:	into   
  425da5:	mov    WORD PTR [edx+0x6a],es
  425da8:	ret    0xa54e
  425dab:	fs je  0x425d8e
  425dae:	mov    eax,0xe26745ec
  425db3:	fs and eax,0xdb10d8ff
  425db9:	aas    
  425dba:	ret    0xf3ef
  425dbd:	(bad)  
  425dbe:	(bad)  
  425dbf:	jnp    0x425d49
  425dc1:	jge    0x425d86
  425dc3:	pop    ebp
  425dc4:	dec    esi
  425dc5:	call   0x7ce3:0x76773d4d
  425dcc:	or     ebx,DWORD PTR [esp+edi*2+0x3cc9056c]
  425dd3:	fsub   DWORD PTR [ecx]
  425dd5:	std    
  425dd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dd7:	(bad)  
  425dd8:	loopne 0x425d82
  425dda:	inc    BYTE PTR [ebx+0x1e08a0e8]
  425de0:	aas    
  425de1:	mov    esi,0x8ba77a13
  425de6:	xchg   al,al
  425de8:	pop    edx
  425de9:	sub    DWORD PTR [ebp+0x469a0cb8],ebx
  425def:	and    edx,DWORD PTR [edi+0x6f9646df]
  425df5:	mov    esi,DWORD PTR [ebx-0x3]
  425df8:	xor    eax,0xf00bbbce
  425dfd:	and    DWORD PTR [edx-0x5b],esp
  425e00:	dec    eax
  425e01:	xor    cl,ch
  425e03:	jmp    0xc063:0xf51f9091
  425e0a:	js     0x425df7
  425e0c:	or     DWORD PTR [eax+eax*2-0x3d],esp
  425e10:	jecxz  0x425e0e
  425e12:	xor    edx,esi
  425e14:	xchg   eax,esp
  425e16:	aas    
  425e17:	push   0xffffffec
  425e19:	inc    ecx
  425e1a:	(bad)  
  425e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e1c:	fs mov edx,fs
  425e1f:	fs (bad) 
  425e21:	repz adc al,cl
  425e24:	jge    0x425df6
  425e26:	sbb    al,0x43
  425e28:	pop    ecx
  425e29:	push   cs
  425e2a:	fadd   DWORD PTR [ecx-0x7234c4f9]
  425e30:	sbb    edx,DWORD PTR [ebp+0x51cf3c97]
  425e36:	call   0x44200d9f
  425e3b:	sbb    BYTE PTR [ecx+0x5f],dh
  425e3e:	and    eax,0xace8f605
  425e43:	lock out 0xc6,al
  425e46:	fwait
  425e47:	aaa    
  425e48:	popf   
  425e49:	mov    bh,0xbd
  425e4b:	jmp    0x425ead
  425e4d:	aad    0x78
  425e4f:	mov    ch,0x3d
  425e51:	repz adc DWORD PTR [eax],ebp
  425e54:	loopne 0x425e55
  425e56:	pop    esp
  425e57:	add    al,0xb2
  425e59:	mov    ds:0x1306011b,eax
  425e5e:	leave  
  425e5f:	scas   al,BYTE PTR es:[edi]
  425e60:	inc    edi
  425e61:	ins    BYTE PTR es:[edi],dx
  425e62:	pop    ebx
  425e63:	out    0xe8,al
  425e65:	hlt    
  425e66:	sti    
  425e67:	mov    esp,0xc0b622ee
  425e6c:	dec    ecx
  425e6d:	jnp    0x425e1f
  425e6f:	dec    esi
  425e70:	mov    WORD PTR [eax-0x7b],ss
  425e73:	ret    0x6169
  425e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e77:	sbb    edi,esp
  425e79:	sub    DWORD PTR [ebx+ebx*8-0x11],edx
  425e7d:	sbb    DWORD PTR [ebp-0x1661ee68],ebp
  425e83:	mov    dl,0xe9
  425e85:	(bad)  
  425e86:	out    0x9e,al
  425e88:	leave  
  425e89:	and    eax,0xcbc34c00
  425e8e:	jno    0x425e5d
  425e90:	sbb    eax,0xffd2213b
  425e95:	je     0x425eba
  425e97:	shl    DWORD PTR [ebx],1
  425e99:	int3   
  425e9a:	jl     0x425ef9
  425e9c:	fld    QWORD PTR [ecx+0x3d03e5c4]
  425ea2:	xor    BYTE PTR [ebx],bh
  425ea4:	repz test al,0x19
  425ea7:	adc    ebx,DWORD PTR [bp+si-0x1dc9]
  425eac:	add    eax,ebx
  425eae:	jb     0x425ee2
  425eb0:	bound  ecx,QWORD PTR ds:0x4b988b8a
  425eb6:	outs   dx,DWORD PTR ds:[esi]
  425eb7:	sub    eax,0xc6d96ff6
  425ebc:	fsub   DWORD PTR [ebx]
  425ebe:	test   al,0x91
  425ec0:	int    0xbe
  425ec2:	inc    ecx
  425ec4:	inc    ebp
  425ec5:	mov    edi,DWORD PTR [ebx]
  425ec7:	lock dec ebp
  425ec9:	pop    ds
  425eca:	jge    0x425f27
  425ecc:	xchg   edi,eax
  425ecd:	mov    al,0xfd
  425ecf:	sbb    eax,0x1b59b86e
  425ed4:	xchg   ecx,esi
  425ed6:	hlt    
  425ed7:	test   DWORD PTR [eax-0x158e2894],edi
  425edd:	sar    BYTE PTR [eax+ebx*1+0x11],0x6e
  425ee2:	sub    eax,0x1
  425ee5:	xor    BYTE PTR [ebp-0x6a005f36],ch
  425eeb:	into   
  425eec:	mov    dh,0xa7
  425eee:	inc    ebx
  425eef:	pop    esp
  425ef0:	xor    al,0xbc
  425ef2:	inc    edi
  425ef3:	push   edi
  425ef4:	mov    BYTE PTR [ebx],ah
  425ef6:	inc    ebx
  425ef7:	(bad)  
  425ef9:	sbb    al,0xec
  425efb:	xchg   edi,eax
  425efc:	dec    eax
  425efd:	jae    0x425ee2
  425eff:	cli    
  425f00:	cmp    DWORD PTR [edx-0x10],ebx
  425f03:	or     edi,esp
  425f05:	int3   
  425f06:	and    esi,DWORD PTR [ebx-0x3f]
  425f09:	sbb    cl,bh
  425f0b:	and    bl,BYTE PTR fs:[ecx+0x4]
  425f0f:	mov    esi,0x26dbafc5
  425f14:	pushf  
  425f15:	jbe    0x425f91
  425f17:	fdiv   st,st(3)
  425f19:	test   edi,ebp
  425f1b:	xor    BYTE PTR [esi+0x70],dh
  425f1e:	and    dl,BYTE PTR [ecx+0x79]
  425f21:	fdivr  QWORD PTR [bx+di+0x7d]
  425f25:	ret    
  425f26:	rol    DWORD PTR [esi],0x6c
  425f29:	ror    DWORD PTR ds:0x7e38e9a5,0x0
	...
  425f38:	add    BYTE PTR [eax],al
  425f3a:	or     dl,BYTE PTR [edx-0x3c684]
  425f40:	dec    edi
  425f41:	mov    bl,0x9
  425f43:	sub    al,0x0
  425f45:	sub    ebp,DWORD PTR [esp+ecx*1]
  425f48:	lods   eax,DWORD PTR ds:[esi]
  425f49:	cmp    DWORD PTR [edx-0x2fffe2a],ecx
  425f4f:	add    DWORD PTR [eax],eax
  425f51:	add    BYTE PTR [ecx+0x32749e19],ah
  425f57:	mov    dl,0xca
  425f59:	fmulp  st(6),st
  425f5b:	xor    DWORD PTR [esi+0x6f],0xac6e4a67
  425f62:	outs   dx,DWORD PTR ds:[esi]
  425f63:	cs inc edx
  425f65:	ret    0x20b3
  425f68:	mov    dl,BYTE PTR [edi]
  425f6a:	sbb    al,0x92
  425f6c:	xchg   edi,eax
  425f6d:	outs   dx,DWORD PTR ds:[esi]
  425f6e:	dec    ecx
  425f6f:	jecxz  0x425f9f
  425f71:	fisttp WORD PTR [eax]
  425f73:	scas   al,BYTE PTR es:[edi]
  425f74:	pop    ebx
  425f75:	jns    0x425f37
  425f77:	push   0x41
  425f79:	int3   
  425f7a:	jns    0x425f0a
  425f7c:	mov    bh,0xa8
  425f7e:	retf   
  425f7f:	mov    ch,0xa6
  425f81:	div    BYTE PTR [ebp-0x1ae34e23]
  425f87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f88:	push   0x3c
  425f8a:	mov    ch,0x3
  425f8c:	scas   eax,DWORD PTR es:[edi]
  425f8d:	dec    ebx
  425f8e:	ins    DWORD PTR es:[edi],dx
  425f8f:	mov    ebx,0x8e0ccd0a
  425f94:	inc    DWORD PTR [eax-0x63]
  425f97:	stc    
  425f98:	mov    eax,0x4976fa2f
  425f9d:	fld    st(5)
  425f9f:	js     0x425f94
  425fa1:	fcmovnbe st,st(7)
  425fa3:	mov    bh,0x64
  425fa5:	push   esi
  425fa6:	xchg   DWORD PTR [ebx+0x54],edx
  425fa9:	xlat   BYTE PTR ds:[ebx]
  425faa:	xchg   ebp,eax
  425fab:	repnz xchg ecx,eax
  425fad:	push   edi
  425fae:	mov    bl,ah
  425fb0:	or     eax,0x35086392
  425fb5:	cmp    eax,0x918b9cfb
  425fba:	shl    BYTE PTR [edi-0x72de150d],cl
  425fc0:	fdivr  st,st(6)
  425fc2:	int3   
  425fc3:	sbb    ebp,DWORD PTR [ecx+0x60]
  425fc6:	popa   
  425fc7:	sbb    BYTE PTR [edx-0x1c75ebee],cl
  425fcd:	add    ebx,ebp
  425fcf:	(bad)  
  425fd0:	fmul   DWORD PTR [esi+0x21]
  425fd3:	sbb    BYTE PTR [ecx+0x3a],0x9
  425fd7:	mov    al,0xb3
  425fd9:	mov    ah,0x76
  425fdb:	adc    eax,0x35b58793
  425fe0:	ret    0xe980
  425fe3:	out    0xd,eax
  425fe5:	add    cl,BYTE PTR [ebp-0x28]
  425fe8:	lods   al,BYTE PTR ds:[esi]
  425fe9:	je     0x426031
  425feb:	retf   
  425fec:	out    0xb9,al
  425fee:	ins    DWORD PTR es:[edi],dx
  425fef:	pop    es
  425ff0:	div    BYTE PTR [ebx]
  425ff2:	mov    ?,WORD PTR [ebx]
  425ff4:	sahf   
  425ff5:	ret    
  425ff6:	mov    ah,0x46
  425ff8:	hlt    
  425ff9:	push   ebx
  425ffa:	dec    esp
  425ffb:	in     al,0xe9
  425ffd:	jnp    0x425f96
  425fff:	jmp    0x108f:0xfc90b5e2
  426006:	js     0x425fae
  426008:	gs lock out 0x3c,al
  42600c:	push   edx
  42600d:	ds pop esi
  42600f:	inc    ebx
  426010:	out    0x98,al
  426012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426013:	push   esi
  426014:	cmp    bl,BYTE PTR [edi]
  426016:	dec    edx
  426017:	xchg   ebx,eax
  426018:	das    
  426019:	xchg   BYTE PTR [ecx+0x1f4b1531],dl
  42601f:	nop
  426020:	inc    esi
  426021:	sub    BYTE PTR [ecx-0x657710cf],bh
  426027:	push   ss
  426028:	inc    eax
  426029:	iret   
  42602a:	inc    DWORD PTR [edi-0x6e049367]
  426030:	or     eax,0xf52e5ae3
  426035:	xchg   ebx,eax
  426036:	xchg   ecx,esi
  426038:	push   ebx
  426039:	or     cl,BYTE PTR [ecx-0x12194635]
  42603f:	lods   al,BYTE PTR ds:[esi]
  426040:	and    al,0x87
  426042:	push   eax
  426043:	sbb    BYTE PTR [ebx+0x1c758272],dh
  426049:	(bad)  
  42604b:	jmp    0xc7c1:0x476c34d5
  426052:	les    ebx,FWORD PTR [ebp-0x75]
  426055:	xchg   edx,eax
  426056:	xchg   BYTE PTR [edi-0x62],dl
  426059:	aam    0xd4
  42605b:	cs xchg esi,eax
  42605d:	faddp  st(7),st
  42605f:	mov    edx,es
  426061:	adc    eax,0x79150c18
  426066:	lahf   
  426067:	fnstcw WORD PTR [ebp-0x41]
  42606a:	mov    esp,0x9eabbe6a
  42606f:	(bad)  
  426070:	rol    ecx,1
  426072:	cdq    
  426073:	sbb    DWORD PTR [esi+eax*2],edi
  426076:	push   ebx
  426077:	int    0xd6
  426079:	lods   eax,DWORD PTR ds:[esi]
  42607a:	out    dx,eax
  42607b:	in     al,dx
  42607c:	(bad)  
  42607d:	mov    ds:0xed79aba6,al
  426082:	fisubr WORD PTR [eax-0x493ae7b4]
  426088:	xor    eax,0xf55659d2
  42608d:	mov    cl,0x69
  42608f:	pop    esi
  426090:	in     eax,dx
  426091:	je     0x426070
  426093:	xor    dh,ch
  426095:	(bad)  
  426096:	sub    eax,DWORD PTR ds:0x7e958963
  42609c:	test   eax,0x5abc3a39
  4260a1:	ss cli 
  4260a3:	mov    DWORD PTR [edx],esp
  4260a5:	ror    BYTE PTR [edx],1
  4260a7:	add    eax,0x1e2d7f25
  4260ac:	loop   0x426073
  4260ae:	sti    
  4260af:	std    
  4260b0:	inc    ebx
  4260b1:	arpl   WORD PTR [esi],sp
  4260b3:	std    
  4260b4:	sub    eax,0x879ca2bc
  4260b9:	loopne 0x4260ac
  4260bb:	jbe    0x4260ff
  4260bd:	or     al,0xf9
  4260bf:	xor    al,0xf2
  4260c1:	xchg   ecx,eax
  4260c2:	mov    ecx,0xc4fdb228
  4260c7:	xchg   DWORD PTR [edi-0x26],ebp
  4260ca:	lds    eax,FWORD PTR [ebx-0x7ef0acbb]
  4260d0:	std    
  4260d1:	mov    ebx,0x7c41658e
  4260d6:	pop    ss
  4260d7:	jnp    0x4260f7
  4260d9:	pusha  
  4260da:	push   ecx
  4260db:	pop    esp
  4260dc:	lds    eax,FWORD PTR [ebx+0x633230c5]
  4260e2:	stos   WORD PTR es:[edi],ax
  4260e4:	xchg   edx,eax
  4260e5:	hlt    
  4260e6:	mov    ch,0x8e
  4260e8:	pop    eax
  4260e9:	pop    eax
  4260ea:	push   ecx
  4260eb:	mov    edi,0x863d3485
  4260f0:	test   al,0x3
  4260f2:	loopne 0x42616b
  4260f4:	sub    eax,0xf5335050
  4260f9:	ficom  WORD PTR [esi-0x7f]
  4260fc:	test   BYTE PTR [edi-0x75],0xdf
  426100:	inc    edx
  426101:	sbb    BYTE PTR [ecx],dh
  426103:	jecxz  0x426089
  426105:	inc    eax
  426106:	fisttp QWORD PTR [esi-0xd6c5210]
  42610c:	sub    eax,0x88082a8e
  426111:	in     al,dx
  426112:	retf   
  426113:	or     eax,0xbb8175aa
  426118:	js     0x42615a
  42611a:	pushf  
  42611b:	and    edx,DWORD PTR [edi]
  42611d:	daa    
  42611e:	and    ch,BYTE PTR [ebx-0x79b6c88e]
  426124:	fsubr  DWORD PTR [ebx+0x4802aec6]
  42612a:	or     al,0xb8
  42612c:	cdq    
  42612d:	imul   ebx,DWORD PTR [edi-0x2f],0x7a
  426131:	cmp    al,0x34
  426133:	bound  edi,QWORD PTR [esi]
  426135:	jecxz  0x4260c8
  426137:	test   DWORD PTR [edx-0x5f],0xa6e5751f
  42613e:	push   edi
  42613f:	lods   eax,DWORD PTR ds:[esi]
  426140:	retf   0x8535
  426143:	sbb    esi,DWORD PTR [eax]
  426145:	popa   
  426146:	or     DWORD PTR [ebp+0x62],ecx
  426149:	das    
  42614a:	arpl   WORD PTR [ecx+0x4512de],bx
	...
  426158:	add    BYTE PTR [eax],al
  42615a:	ret    
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	clc    
  426167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426168:	idiv   DWORD PTR [ebx]
  42616a:	xchg   eax,ebx
  42616c:	add    DWORD PTR [eax],eax
  42616e:	std    
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    BYTE PTR [edx-0x3c],ch
  426174:	xchg   esp,eax
  426175:	mov    dl,0x63
  426177:	jbe    0x42614e
  426179:	xchg   ebx,eax
  42617a:	lea    esp,[edx-0x2af33f3]
  426180:	aam    0x3b
  426182:	dec    esp
  426183:	adc    ah,BYTE PTR [eax-0x63]
  426186:	repnz clc 
  426188:	mov    esp,DWORD PTR [ebp*1-0x77990432]
  42618f:	(bad)
  426192:	cmp    eax,DWORD PTR ds:0xc92723c4
  426198:	in     al,dx
  426199:	pop    es
  42619a:	mov    eax,0xd853fa48
  42619f:	and    ah,0xcd
  4261a2:	mov    eax,0x139ff896
  4261a7:	stos   BYTE PTR es:[edi],al
  4261a8:	add    BYTE PTR [ebx+0x7c3ba216],bl
  4261ae:	rcl    DWORD PTR [edx-0x2eeb45a2],0xe
  4261b5:	ret    
  4261b6:	xchg   edi,eax
  4261b7:	bound  eax,QWORD PTR ds:0xe892e30a
  4261bd:	mov    WORD PTR [ecx-0x62],?
  4261c0:	js     0x42616d
  4261c2:	pop    edi
  4261c3:	sbb    DWORD PTR [ebx-0x49],ebp
  4261c6:	mov    ecx,0xbbbab6e
  4261cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261cc:	mov    ds:0x22e99c8c,al
  4261d1:	sti    
  4261d2:	dec    ebx
  4261d3:	mov    esi,0x93867f66
  4261d8:	mov    ds:0xd26f21d1,al
  4261dd:	mov    DWORD PTR [eax-0x4096f322],ebx
  4261e3:	js     0x426184
  4261e5:	xchg   esp,eax
  4261e6:	push   eax
  4261e7:	jp     0x4261ea
  4261e9:	xchg   ebx,eax
  4261ea:	pop    ebp
  4261eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261ed:	outs   dx,DWORD PTR ds:[esi]
  4261ee:	xchg   edi,eax
  4261ef:	fs mov eax,0x148e96b2
  4261f5:	test   DWORD PTR [esi-0x5aeccc5d],ecx
  4261fb:	jmp    0x55286446
  426200:	xchg   ebp,eax
  426201:	cwde   
  426202:	ror    BYTE PTR [ebx+0x40],1
  426205:	xchg   DWORD PTR [eax],esp
  426207:	bound  edx,QWORD PTR [edx+0x3efbabc9]
  42620d:	add    BYTE PTR ds:[esi+0x59de0058],bh
  426214:	adc    BYTE PTR ds:0x908d4709,bh
  42621a:	stos   BYTE PTR es:[edi],al
  42621b:	call   0x3769dac3
  426220:	pop    eax
  426221:	sbb    BYTE PTR [edx],cl
  426223:	(bad)  
  426224:	mov    ebp,0x56a769b1
  426229:	repnz or DWORD PTR [esi+0x2b],0x29632024
  426231:	and    DWORD PTR [eax+0x36],eax
  426234:	mov    edx,0x9d51cbd5
  426239:	pop    ecx
  42623a:	mov    edi,0xe00c0829
  42623f:	arpl   WORD PTR [edx],cx
  426241:	scas   al,BYTE PTR es:[edi]
  426242:	cdq    
  426243:	(bad)  [edx+edi*8-0x2c]
  426247:	aaa    
  426248:	sahf   
  426249:	daa    
  42624a:	imul   ecx,esi,0x4135ad3e
  426250:	(bad)  
  426251:	lea    ebx,[eax]
  426253:	(bad)  
  426254:	mov    eax,0xa432922a
  426259:	imul   edx,edi,0x4b9a62be
  42625f:	imul   edx,ebp,0x3d126fa9
  426265:	pop    es
  426266:	mov    DWORD PTR [esp+ecx*1],eax
  426269:	in     al,0xee
  42626b:	pop    eax
  42626c:	lock mov ebx,0x9a6185c9
  426272:	pop    eax
  426273:	test   BYTE PTR [edi],al
  426275:	cmp    ch,BYTE PTR [esi-0x57]
  426278:	shl    BYTE PTR [ebp+0x636c4fce],cl
  42627e:	sti    
  42627f:	inc    eax
  426280:	jmp    0x426266
  426282:	loop   0x42620c
  426284:	dec    esi
  426285:	xor    DWORD PTR [edi+0x48],ebp
  426288:	gs cmc 
  42628a:	xor    DWORD PTR [edi-0x2a266f40],0x57a87fb1
  426294:	ss add ax,0x73d
  426299:	shl    ebp,1
  42629b:	cli    
  42629c:	mov    ds:0x34dede87,al
  4262a1:	inc    eax
  4262a2:	mov    ecx,0x48c1b794
  4262a7:	rol    edi,cl
  4262a9:	js     0x42624c
  4262ab:	adc    DWORD PTR [esi+ebx*1],0xe9d65d35
  4262b2:	pop    ss
  4262b3:	test   eax,esp
  4262b5:	mov    edx,0x45b9d26c
  4262ba:	jno    0x426249
  4262bc:	mov    esp,0xfcbebaf4
  4262c1:	js     0x426293
  4262c3:	mov    ecx,0x4262f8a3
  4262c8:	data16 in al,0xd0
  4262cb:	jmp    0x86b3e1c4
  4262d0:	add    al,0xf1
  4262d2:	sbb    eax,0xa8179833
  4262d7:	xor    cl,ch
  4262d9:	or     esi,DWORD PTR [ebx+edx*4-0x66]
  4262dd:	sub    bh,BYTE PTR [edx-0x6de18411]
  4262e3:	pop    eax
  4262e4:	adc    esi,0x76
  4262e7:	(bad)  
  4262e8:	fnstcw WORD PTR [ebx]
  4262ea:	push   es
  4262eb:	ja     0x426362
  4262ed:	cld    
  4262ee:	jecxz  0x426310
  4262f0:	xor    ebx,DWORD PTR ds:[ebp-0xcc08219]
  4262f7:	pop    ecx
  4262f8:	ret    
  4262f9:	lahf   
  4262fa:	adc    cl,bl
  4262fc:	pop    esp
  4262fd:	mov    ah,0x54
  4262ff:	hlt    
  426300:	ret    
  426301:	test   DWORD PTR [edi+0x1bce2223],edx
  426307:	pop    ecx
  426308:	aam    0xcb
  42630a:	stos   BYTE PTR es:[edi],al
  42630b:	mov    ebx,0x2b3aa6ed
  426310:	aad    0xdf
  426312:	ror    dl,cl
  426314:	out    0xde,eax
  426316:	fadd   st,st(6)
  426318:	adc    BYTE PTR [edi],cl
  42631a:	push   ss
  42631b:	push   ebx
  42631c:	xlat   BYTE PTR ds:[ebx]
  42631d:	push   ds
  42631e:	add    eax,0x54f1b2b
  426323:	lock cmp bl,BYTE PTR [ebp-0x35]
  426327:	ins    DWORD PTR es:[edi],dx
  426328:	rcl    BYTE PTR gs:[edi-0x30],1
  42632c:	jmp    0x42630d
  42632e:	lods   eax,DWORD PTR ds:[esi]
  42632f:	mov    ecx,0x9b9b129
  426334:	pop    esi
  426335:	call   0xb254:0x3152c0ab
  42633c:	daa    
  42633d:	cmp    al,BYTE PTR [edx+edi*1]
  426340:	mov    ah,0xf1
  426342:	add    al,0x33
  426344:	cmc    
  426345:	cmc    
  426346:	sub    eax,0xe2fe5626
  42634b:	gs pop ebp
  42634d:	in     eax,0xbf
  42634f:	adc    bl,BYTE PTR [esi]
  426351:	dec    eax
  426352:	icebp  
  426353:	xchg   ebp,eax
  426354:	das    
  426355:	mov    eax,ds:0xfa771796
  42635a:	or     ebx,edi
  42635c:	lds    edi,FWORD PTR [edx+0x5d]
  42635f:	add    ebx,DWORD PTR [ecx+ebx*2-0x3c2d7c17]
  426366:	sbb    al,0x1c
  426368:	mov    al,ds:0x3848d6ad
  42636d:	jge    0x4263c9
	...
  426377:	add    BYTE PTR [eax],al
  426379:	add    BYTE PTR [edx-0x101610a7],bl
  42637f:	call   FWORD PTR [esi-0x71a9f385]
  426385:	rcr    DWORD PTR [esi+esi*8-0x257b4f72],cl
  42638c:	add    DWORD PTR [eax],eax
  42638e:	std    
  42638f:	add    DWORD PTR [eax],eax
  426391:	add    BYTE PTR [ebx-0x1a],ah
  426394:	jmp    FWORD PTR [ecx-0x4f]
  426397:	mov    al,BYTE PTR [esi]
  426399:	and    DWORD PTR [ebx],ecx
  42639b:	call   0x7c951bb5
  4263a0:	pop    ds
  4263a1:	fwait
  4263a2:	lahf   
  4263a3:	push   edi
  4263a4:	pop    ebp
  4263a5:	xchg   esp,eax
  4263a6:	jo     0x426380
  4263a8:	ja     0x42632b
  4263aa:	or     BYTE PTR [eax-0x748a37eb],0x39
  4263b1:	repz jg 0x4263dc
  4263b4:	imul   ebp,DWORD PTR [edx+0x78],0x8f823286
  4263bb:	jns    0x426380
  4263bd:	std    
  4263be:	call   0x9c77:0x8203ad6a
  4263c5:	enter  0x3169,0xd2
  4263c9:	mov    bl,0x83
  4263cb:	out    0x54,al
  4263cd:	test   eax,0x3e542b40
  4263d2:	nop
  4263d3:	popf   
  4263d4:	pop    ds
  4263d5:	dec    ebp
  4263d6:	stos   DWORD PTR es:[edi],eax
  4263d7:	int3   
  4263d8:	xchg   edx,eax
  4263d9:	arpl   si,ax
  4263db:	push   0xd6d88495
  4263e0:	call   0x4307cbae
  4263e5:	mov    BYTE PTR [edi+edi*8],ch
  4263e8:	fsubr  st,st(0)
  4263ea:	sub    bl,BYTE PTR [edi]
  4263ec:	out    dx,eax
  4263ed:	int3   
  4263ee:	mov    BYTE PTR [edx],cl
  4263f0:	sbb    DWORD PTR [eax+0x6077308d],0x68
  4263f7:	test   BYTE PTR [edi-0x380f6393],bl
  4263fd:	popa   
  4263fe:	cli    
  4263ff:	adc    esp,DWORD PTR [ecx+0x1433f457]
  426405:	or     ah,BYTE PTR [edi-0x34]
  426408:	push   ecx
  426409:	stc    
  42640a:	sub    ebp,DWORD PTR [ebp+0x4f]
  42640d:	(bad)  
  42640e:	loop   0x426476
  426410:	lds    eax,FWORD PTR [eax]
  426412:	call   0x89a7:0x2eaa3976
  426419:	mov    al,bh
  42641b:	das    
  42641c:	ja     0x426474
  42641e:	jb     0x42646d
  426420:	sub    ah,ah
  426422:	inc    edx
  426423:	or     al,0x18
  426425:	push   cs
  426426:	jbe    0x4263e0
  426428:	test   eax,0x4ab8048e
  42642d:	sub    eax,0x4714e9f4
  426432:	inc    esi
  426433:	ja     0x42649e
  426435:	jecxz  0x426421
  426437:	enter  0x989b,0x3
  42643b:	gs jp  0x426447
  42643e:	in     al,0x47
  426440:	out    0x88,eax
  426442:	and    DWORD PTR [ecx-0x7a],ebx
  426445:	or     al,0x1f
  426447:	pop    ss
  426448:	out    dx,eax
  426449:	in     al,dx
  42644a:	and    BYTE PTR [edi+0x60],bl
  42644d:	cdq    
  42644e:	or     esp,ecx
  426450:	inc    edi
  426451:	jo     0x426498
  426453:	dec    edi
  426454:	outs   dx,DWORD PTR ds:[esi]
  426455:	fnstsw WORD PTR [eax-0x5ad4d32d]
  42645b:	xchg   esi,eax
  42645c:	shl    al,1
  42645e:	loope  0x42644f
  426460:	mov    ecx,DWORD PTR [edx+eiz*8]
  426463:	mov    al,bh
  426465:	call   0xf1df:0x11e41042
  42646c:	jo     0x42644a
  42646e:	les    ebx,FWORD PTR [eax+esi*4]
  426471:	sub    bh,dl
  426473:	out    0x4d,al
  426475:	(bad)
  426478:	mov    bl,BYTE PTR [ecx-0x7]
  42647b:	loop   0x4264b9
  42647d:	not    BYTE PTR [ecx-0x2a]
  426480:	fcomp  st(2)
  426482:	xor    cl,BYTE PTR [edx]
  426484:	mov    ds:0xbb11c6ea,eax
  426489:	push   ebx
  42648a:	xchg   ebx,eax
  42648b:	and    dl,ah
  42648d:	jecxz  0x4264d0
  42648f:	cmp    ecx,edx
  426491:	arpl   WORD PTR [esi-0x73005b9a],bp
  426497:	pop    ecx
  426498:	add    eax,0x41a10a7f
  42649d:	lea    esi,[esi]
  42649f:	push   es
  4264a0:	cmp    ch,BYTE PTR [ebx+0x12]
  4264a3:	mov    ebp,0x9424d10b
  4264a8:	mov    ch,0x48
  4264aa:	xchg   edx,eax
  4264ab:	mov    ebp,0x7f66e90d
  4264b0:	add    esp,0x6548c31
  4264b6:	xchg   esp,eax
  4264b7:	imul   ecx,edi,0x96309683
  4264bd:	jmp    0x39922188
  4264c2:	add    ch,dl
  4264c4:	lea    ebx,[esi+eiz*2+0x12]
  4264c8:	jns    0x42653c
  4264ca:	mov    BYTE PTR [eax],0x8d
  4264cd:	pushf  
  4264ce:	das    
  4264cf:	xor    BYTE PTR [edx+eiz*8-0x124eb050],cl
  4264d6:	daa    
  4264d7:	aad    0x49
  4264d9:	adc    edi,DWORD PTR [ebx]
  4264db:	outs   dx,DWORD PTR ds:[esi]
  4264dc:	stc    
  4264dd:	jp     0x4264e8
  4264df:	cmc    
  4264e0:	(bad)  
  4264e1:	dec    DWORD PTR [edi]
  4264e3:	pop    esp
  4264e4:	int3   
  4264e5:	adc    ebx,ebx
  4264e7:	icebp  
  4264e8:	or     esi,edi
  4264ea:	dec    esi
  4264eb:	or     edx,esp
  4264ed:	or     esp,DWORD PTR [eax-0x32a17600]
  4264f3:	sub    dh,dl
  4264f5:	stc    
  4264f6:	mov    ah,0x38
  4264f8:	mov    DWORD PTR [edi+0x5775bbb3],eax
  4264fe:	xlat   BYTE PTR ds:[ebx]
  4264ff:	or     ecx,esp
  426501:	sbb    DWORD PTR [edi+0x70bc957a],edx
  426507:	std    
  426508:	adc    ch,al
  42650a:	dec    edx
  42650b:	dec    edx
  42650c:	das    
  42650d:	sub    al,0xd
  42650f:	test   eax,0xe0745aee
  426514:	lahf   
  426515:	js     0x4264c6
  426517:	xchg   ecx,eax
  426518:	mov    bl,0x2c
  42651a:	mov    eax,ds:0x6286e8f6
  42651f:	dec    ebx
  426520:	mov    ah,0xf2
  426522:	push   ss
  426523:	push   ebp
  426524:	xchg   BYTE PTR [esi+0xe],bl
  426527:	not    BYTE PTR [esi]
  426529:	imul   eax,DWORD PTR [eax-0x1b],0xafe2186
  426530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426531:	into   
  426532:	mov    al,ds:0xbfd596cc
  426537:	add    BYTE PTR [ecx+0x74],ch
  42653a:	fild   WORD PTR [ecx+ebp*1]
  42653d:	xchg   DWORD PTR [ebp+0x13],esi
  426540:	fs dec ebp
  426542:	cmp    al,0x3d
  426544:	std    
  426545:	jo     0x4264d4
  426547:	(bad)  
  426548:	adc    al,0x62
  42654a:	xor    edi,DWORD PTR [ebp+0x4]
  42654d:	fisubr DWORD PTR [edx]
  42654f:	push   0xd0de6409
  426554:	or     bh,BYTE PTR [eax]
  426556:	or     BYTE PTR [ecx-0x428821a6],al
  42655c:	or     eax,0xe1ff4fec
  426561:	addr16 nop
  426563:	mov    bl,0xd4
  426565:	into   
  426566:	push   esp
  426567:	data16 shl BYTE PTR [esi],1
  42656a:	jns    0x4265c5
  42656c:	ss imul ecx,edi,0x10
  426570:	mov    dh,0xf
  426572:	inc    edx
  426573:	cmp    eax,0xe6506a0d
  426578:	push   edi
  426579:	cs push eax
  42657b:	ins    BYTE PTR es:[edi],dx
  42657c:	mov    DWORD PTR [ecx+0xcc216f],eax
  426582:	sub    cl,BYTE PTR [esi+0x36339c6b]
  426588:	aaa    
  426589:	pop    es
  42658a:	stos   BYTE PTR es:[edi],al
  42658b:	stc    
  42658c:	sbb    DWORD PTR [esi+0x7],ecx
	...
  42659a:	(bad)  
  42659b:	rol    BYTE PTR [edi],0x37
  42659e:	dec    edi
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x4265e9
  4265a7:	pop    ecx
  4265a8:	or     eax,0x1dc8179
  4265ad:	add    ch,bh
  4265af:	add    DWORD PTR [eax],eax
  4265b1:	add    al,dh
  4265b3:	lds    esp,FWORD PTR cs:[edx]
  4265b6:	sub    esp,edi
  4265b8:	leave  
  4265b9:	cmp    al,0x2b
  4265bb:	adc    ebx,DWORD PTR [esi+0x6ecaae52]
  4265c1:	ins    BYTE PTR es:[edi],dx
  4265c2:	mov    edx,0xc1168f24
  4265c7:	mov    al,0xb9
  4265c9:	adc    al,0xc
  4265cb:	retf   0x58d8
  4265ce:	data16 bnd jb 0x42664f
  4265d2:	mov    esi,0x2bbca9b
  4265d7:	add    al,0x7d
  4265d9:	mov    cl,0x4b
  4265db:	dec    ecx
  4265dc:	sbb    al,0x97
  4265de:	(bad)  
  4265df:	jge    0x426636
  4265e1:	mov    ebx,0x6560cc72
  4265e6:	sbb    edi,DWORD PTR [edx]
  4265e8:	inc    cl
  4265ea:	mov    al,ds:0xa4651dc5
  4265ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265f0:	std    
  4265f1:	in     al,dx
  4265f2:	jmp    0x426672
  4265f4:	mov    ebx,0x9d08846c
  4265f9:	jp     0x426676
  4265fb:	mov    ebp,0x9907a6c2
  426600:	dec    esp
  426601:	dec    ebp
  426602:	(bad)  
  426604:	sbb    ebp,DWORD PTR [esi]
  426606:	add    bh,cl
  426608:	adc    DWORD PTR [edi+0x0],esi
  42660b:	jns    0x426647
  42660d:	jl     0x426619
  42660f:	and    eax,0xe1c33859
  426614:	dec    eax
  426615:	mov    ecx,0x53e52898
  42661a:	lock jmp 0xb0b:0xf32b80b4
  426622:	adc    dl,dl
  426624:	movmskps eax,xmm6
  426627:	repz shr DWORD PTR [edx],1
  42662a:	jl     0x426695
  42662c:	xchg   esi,eax
  42662d:	xchg   BYTE PTR [esi-0x5],bh
  426630:	cmp    DWORD PTR [edi+0x78091090],esp
  426636:	(bad)  
  426638:	lods   eax,DWORD PTR ds:[esi]
  426639:	jbe    0x426657
  42663b:	or     cl,BYTE PTR [ebp+0x26c23b4]
  426641:	arpl   WORD PTR [edx+0x49],dx
  426644:	push   esi
  426645:	lea    edi,[ecx-0x7f]
  426648:	xchg   BYTE PTR [edi+esi*2],ah
  42664b:	xchg   edi,eax
  42664c:	pop    edi
  42664d:	mov    ah,0x68
  42664f:	pop    ds
  426650:	pop    ds
  426651:	jge    0x42663d
  426653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426654:	cli    
  426655:	xchg   edi,eax
  426656:	pop    esp
  426657:	es mov esi,esp
  42665a:	dec    ecx
  42665b:	and    BYTE PTR [esi],ch
  42665d:	dec    eax
  42665e:	fidiv  WORD PTR [ebx-0x4]
  426661:	pop    edi
  426662:	into   
  426663:	fidivr DWORD PTR [ebx+0x1d]
  426666:	xchg   esp,eax
  426667:	retf   
  426668:	lahf   
  426669:	nop
  42666a:	dec    ebp
  42666b:	mov    edi,0x35a4442
  426670:	or     eax,0x2cb4cbb
  426675:	aaa    
  426676:	push   edi
  426677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426678:	add    DWORD PTR [ecx-0x78877168],0xbe732632
  426682:	xor    ecx,DWORD PTR [ebx-0x6c6492f5]
  426688:	sub    BYTE PTR [edx-0x4c79832f],bl
  42668e:	inc    esp
  42668f:	pusha  
  426690:	cmp    al,0x6a
  426692:	aad    0x84
  426694:	outs   dx,DWORD PTR ds:[esi]
  426695:	outs   dx,BYTE PTR ds:[esi]
  426696:	and    BYTE PTR [ecx+0x18],0x69
  42669a:	sub    eax,0x5ec4dbbb
  42669f:	mov    bl,0x68
  4266a1:	sti    
  4266a2:	jnp    0x42667b
  4266a4:	cmp    DWORD PTR [edx-0x40],0xd006a096
  4266ab:	jmp    0x37fb6e62
  4266b0:	adc    DWORD PTR [edx+eiz*8-0x38],edx
  4266b4:	jne    0x426688
  4266b6:	cld    
  4266b7:	das    
  4266b8:	popf   
  4266b9:	dec    eax
  4266ba:	and    al,0x6d
  4266bc:	call   0xb386:0x2bce6fdd
  4266c3:	mov    fs,WORD PTR [ecx-0x2fc478db]
  4266c9:	(bad)  
  4266cb:	retf   
  4266cc:	out    dx,eax
  4266cd:	loop   0x4266b2
  4266cf:	(bad)  
  4266d1:	inc    ebp
  4266d2:	cmp    eax,0x21b8accb
  4266d7:	ror    DWORD PTR [eax+0x4244ff99],1
  4266dd:	hlt    
  4266de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266df:	cli    
  4266e0:	outs   dx,BYTE PTR ds:[esi]
  4266e1:	cmc    
  4266e2:	xor    al,0xdb
  4266e4:	(bad)  
  4266e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266e6:	in     al,0xe8
  4266e8:	out    dx,al
  4266e9:	(bad)  
  4266ea:	and    edx,DWORD PTR [ecx]
  4266ec:	jnp    0x4266d7
  4266ee:	push   esi
  4266ef:	(bad)  [ecx+ebp*4+0x10]
  4266f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266f4:	repnz pop ebp
  4266f6:	or     eax,ecx
  4266f8:	mov    ah,0xe6
  4266fa:	mov    DWORD PTR [edx],ebp
  4266fc:	xchg   ebp,eax
  4266fd:	out    dx,al
  4266fe:	enter  0xe5ac,0xd1
  426702:	test   al,0x5e
  426704:	mov    eax,ds:0x4772d2a8
  426709:	pushf  
  42670a:	in     eax,0x99
  42670c:	rcl    BYTE PTR [ebp+0x24],1
  42670f:	push   ds
  426710:	xchg   edx,eax
  426711:	bound  ecx,QWORD PTR [edx+0x4d9b8623]
  426717:	shr    DWORD PTR [esi-0x1c9374],cl
  42671d:	call   0x319e:0x573eb71b
  426724:	out    0x6f,eax
  426726:	inc    esi
  426727:	pop    ebx
  426728:	mov    esp,0xbfe4bc0
  42672d:	or     DWORD PTR [ebx-0x5df48499],esp
  426733:	push   eax
  426734:	mov    ch,0x1c
  426736:	sbb    BYTE PTR [edi],ah
  426738:	cmp    ebp,ebx
  42673a:	mov    edx,0x16a4a043
  42673f:	lea    edx,[edx+0x9fc76e6]
  426745:	adc    dl,BYTE PTR [ebx+0x6d]
  426748:	sbb    DWORD PTR [eax+0x15],ecx
  42674b:	push   0xa6a1b78f
  426750:	sub    ch,BYTE PTR [ebp+0x63]
  426753:	mov    bl,0x1
  426755:	push   es
  426756:	inc    ecx
  426757:	test   BYTE PTR [eax+0x7e],dl
  42675a:	xchg   edx,eax
  42675b:	call   0xff3c:0x9a154129
  426762:	adc    DWORD PTR [esi+eax*1],eax
  426765:	mov    esp,0x852dd70d
  42676a:	fisttp QWORD PTR [esi+0x6]
  42676d:	xchg   edi,eax
  42676e:	sbb    DWORD PTR [esi+ebx*1+0x1],eax
  426772:	sub    BYTE PTR [esi-0x7b],al
  426775:	ret    0xb00e
  426778:	mov    ebp,fs
  42677a:	xor    al,BYTE PTR [ecx]
  42677c:	and    al,0xd0
  42677e:	sbb    eax,0xf62904db
  426783:	push   edi
  426784:	mov    esi,0x7aa6a4bb
  426789:	xor    ch,ch
  42678b:	dec    edx
  42678c:	xchg   DWORD PTR [esi-0x583bef71],ebp
  426792:	jns    0x42680b
  426794:	retf   0x5048
  426797:	inc    esp
  426798:	mov    dl,0x18
  42679a:	std    
  42679b:	adc    ebp,DWORD PTR [ecx]
  42679d:	cmp    ebp,edx
  42679f:	jne    0x4267bb
  4267a1:	add    eax,0x31e0b796
  4267a7:	mov    al,ds:0xb16eb4f7
  4267ac:	lods   eax,DWORD PTR ds:[esi]
  4267ad:	mov    ecx,0xc3
	...
  4267ba:	mov    al,0x8a
  4267bc:	call   0xfa266242
  4267c1:	mov    ebx,0xcae72888
  4267c6:	jne    0x42678c
  4267c8:	std    
  4267c9:	and    DWORD PTR [esi-0x22],edi
  4267cc:	add    DWORD PTR [eax],eax
  4267ce:	std    
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    BYTE PTR [ebx],bh
  4267d3:	sar    DWORD PTR ds:0xd7ec2677,1
  4267d9:	jecxz  0x42678a
  4267db:	push   es
  4267dc:	jl     0x42678c
  4267de:	mov    ecx,0x94e83bc9
  4267e3:	pop    edi
  4267e4:	retf   0x1d31
  4267e7:	cmp    esp,edi
  4267e9:	outs   dx,DWORD PTR ds:[esi]
  4267ea:	imul   ebx,DWORD PTR [edx],0xffffffaa
  4267ed:	mov    eax,ds:0x3f7645ed
  4267f2:	aaa    
  4267f3:	inc    ebx
  4267f4:	xchg   edx,eax
  4267f5:	or     edi,DWORD PTR [eax+0x76]
  4267f8:	add    edi,DWORD PTR [esp+ebp*8]
  4267fb:	icebp  
  4267fc:	mov    bh,dh
  4267fe:	lods   al,BYTE PTR ds:[esi]
  4267ff:	(bad)
  426803:	cmp    ah,bh
  426805:	repnz in al,dx
  426807:	stc    
  426808:	cmp    eax,0xcebb9ee8
  42680d:	dec    ecx
  42680e:	test   dh,0x92
  426811:	daa    
  426812:	jbe    0x4267ce
  426814:	call   0xe194:0x6974d8d
  42681b:	xchg   BYTE PTR [ebp-0x3c36a9c3],bh
  426821:	repz push ss
  426823:	aam    0x4b
  426825:	jg     0x4267b3
  426827:	ret    0xc42
  42682a:	cli    
  42682b:	rcr    DWORD PTR [edi-0x11],1
  42682e:	sar    DWORD PTR [ebx-0x43],1
  426831:	(bad)  
  426832:	mov    ebx,eax
  426834:	sub    DWORD PTR [eax+0x7d515c6d],ecx
  42683a:	jns    0x426805
  42683c:	cmc    
  42683d:	iret   
  42683e:	(bad)
  426841:	add    eax,0x21befa4f
  426846:	hlt    
  426847:	adc    eax,0xfc8301a8
  42684c:	and    al,0xb9
  42684e:	add    eax,0x280f71f2
  426853:	push   eax
  426854:	test   ecx,esp
  426856:	jne    0x426889
  426858:	sahf   
  426859:	jecxz  0x4268b1
  42685b:	lods   al,BYTE PTR ds:[esi]
  42685c:	aas    
  42685d:	ret    
  42685e:	sbb    bh,BYTE PTR [eax+edi*8-0x7e]
  426862:	test   DWORD PTR [edx+0x613736f2],edi
  426868:	mov    edx,0x8e430535
  42686d:	scas   al,BYTE PTR es:[edi]
  42686e:	cwde   
  42686f:	je     0x4268d9
  426871:	mov    ebx,ss
  426873:	je     0x426887
  426875:	xor    al,0xe3
  426877:	in     eax,dx
  426878:	jnp    0x426867
  42687a:	(bad)  
  42687b:	push   eax
  42687c:	mov    esp,0x80a4c520
  426881:	scas   al,BYTE PTR es:[edi]
  426882:	sbb    eax,0x385caade
  426887:	pop    ss
  426888:	mov    dh,0x2c
  42688a:	cmp    dl,ah
  42688c:	jecxz  0x4268a4
  42688e:	sbb    eax,0xae1763c
  426893:	fsubr  QWORD PTR [esi-0x15]
  426896:	adc    BYTE PTR [esi],ah
  426898:	sbb    eax,DWORD PTR [ebx-0x12]
  42689b:	ficom  DWORD PTR [esp+edx*8+0x3f23c557]
  4268a2:	adc    edi,esi
  4268a4:	jae    0x42687f
  4268a6:	rol    DWORD PTR [edi-0x3b3a61bf],1
  4268ac:	inc    ecx
  4268ad:	inc    ebx
  4268ae:	add    BYTE PTR [edx-0x12],dl
  4268b1:	cli    
  4268b2:	fsubr  DWORD PTR [esi+0x7c04365a]
  4268b8:	rcl    BYTE PTR [esi+0x55],0x9c
  4268bc:	scas   al,BYTE PTR es:[edi]
  4268bd:	scas   al,BYTE PTR es:[edi]
  4268be:	clc    
  4268bf:	push   cs
  4268c0:	rcl    BYTE PTR [edi],cl
  4268c2:	loope  0x426858
  4268c4:	(bad)  
  4268c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	dec    edx
  4268c7:	push   eax
  4268c8:	mov    bl,0x9
  4268ca:	mov    eax,0xd8d77555
  4268cf:	iret   
  4268d0:	sub    DWORD PTR [eax],esp
  4268d2:	jge    0x4268df
  4268d4:	mov    cl,0x96
  4268d6:	fwait
  4268d7:	pop    eax
  4268d8:	out    0x9f,eax
  4268da:	jl     0x426885
  4268dc:	mov    esp,0x79cd00e3
  4268e1:	mov    esi,0x33c8060f
  4268e6:	sbb    esp,edx
  4268e8:	fucom  st(4)
  4268ea:	push   ss
  4268eb:	pop    esi
  4268ec:	rcl    DWORD PTR [ebx+0xbf2e4e2],1
  4268f2:	cmp    eax,0x694052b
  4268f7:	mov    dh,0x7c
  4268f9:	sbb    eax,0xd03c660b
  4268fe:	push   ds
  4268ff:	dec    ecx
  426900:	sub    dl,0xaf
  426903:	or     BYTE PTR [eax+0x61e4f815],0xd6
  42690a:	jns    0x42694b
  42690c:	mov    al,0x95
  42690e:	sbb    BYTE PTR [ebp-0x62],bh
  426911:	inc    edi
  426912:	ret    0xc8ad
  426915:	data16 das 
  426917:	gs or  eax,0x8f8b9b54
  42691d:	xor    DWORD PTR [ebp+ecx*2-0xa867fd1],0xec68304
  426928:	dec    edi
  426929:	xor    esp,DWORD PTR [eax-0x1e3d3ad1]
  42692f:	xchg   ebp,eax
  426930:	nop
  426931:	ja     0x4268f8
  426933:	lds    ebp,FWORD PTR [ebx+eiz*1-0x79d8370f]
  42693a:	mov    ds,WORD PTR [ebx]
  42693c:	dec    ebx
  42693d:	int3   
  42693e:	mov    BYTE PTR [eax],ah
  426940:	pop    edi
  426941:	mov    ebp,0xfb2b5b80
  426946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426947:	jecxz  0x426961
  426949:	xor    edi,eax
  42694b:	dec    ebp
  42694c:	arpl   WORD PTR [eax],sp
  42694e:	mov    al,0xd3
  426950:	in     eax,0x39
  426952:	add    eax,0xf70133a7
  426957:	pop    edx
  426958:	pop    ebx
  426959:	cmp    ah,BYTE PTR [edx]
  42695b:	jae    0x4268fd
  42695d:	cmc    
  42695e:	loope  0x4269cf
  426960:	into   
  426961:	ret    
  426962:	daa    
  426963:	lods   eax,DWORD PTR ds:[esi]
  426964:	mov    edi,0x99452471
  426969:	inc    esp
  42696a:	mov    ds:0x4b05a272,al
  42696f:	add    BYTE PTR [eax],ch
  426971:	and    al,0xb1
  426973:	invd   
  426975:	ins    BYTE PTR es:[edi],dx
  426976:	pop    es
  426977:	push   ecx
  426978:	or     eax,0xbae9abf
  42697d:	add    BYTE PTR [esi+eax*1-0x74],ch
  426981:	lods   al,BYTE PTR ds:[esi]
  426982:	push   ecx
  426983:	jmp    0x42698a
  426985:	push   ss
  426986:	xor    esp,DWORD PTR [esp+esi*2-0x59ca8427]
  42698d:	mov    dl,0xb3
  42698f:	(bad)  
  426990:	xor    esp,DWORD PTR ds:0x79bd1e5b
  426996:	push   cs
  426997:	gs enter 0x311,0x5a
  42699c:	dec    ebx
  42699d:	add    eax,0xb06c3960
  4269a2:	outs   dx,BYTE PTR ds:[esi]
  4269a3:	adc    al,0x14
  4269a5:	mov    bl,0xf1
  4269a7:	xchg   edx,eax
  4269a8:	das    
  4269a9:	in     eax,dx
  4269aa:	fisttp QWORD PTR [edx-0x7d]
  4269ad:	addr16 jmp 0x16776cdd
  4269b3:	mov    dh,0x75
  4269b5:	fild   WORD PTR [esi-0x7681e4e8]
  4269bb:	adc    al,0xf1
  4269bd:	xor    al,0x9b
  4269bf:	inc    ebx
  4269c0:	enter  0x4492,0x2d
  4269c4:	sbb    al,0x33
  4269c6:	dec    ebx
  4269c7:	mov    ah,0xd3
  4269c9:	aas    
  4269ca:	and    al,0xd7
  4269cc:	cmp    eax,0xcde7
	...
  4269d9:	add    BYTE PTR [edx-0x39253b74],cl
  4269df:	ficomp DWORD PTR [esi+0xc235fdc]
  4269e5:	mov    ah,BYTE PTR [ebx-0x48]
  4269e8:	pop    esp
  4269e9:	xor    bh,BYTE PTR [ebx-0x20]
  4269ec:	add    DWORD PTR [eax],eax
  4269ee:	std    
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    BYTE PTR [edx-0x9],dl
  4269f4:	div    BYTE PTR ds:0x7b7978d
  4269fa:	fucom  st(4)
  4269fc:	int3   
  4269fd:	(bad)  
  4269ff:	adc    ebx,DWORD PTR [esi-0x18]
  426a02:	jne    0x426a43
  426a04:	or     BYTE PTR [ecx-0x62f1f7b2],bl
  426a0a:	mov    esi,0x59479b9d
  426a0f:	mov    DWORD PTR [ecx-0x72],ebp
  426a12:	jmp    0x24ea:0xd2144555
  426a19:	cli    
  426a1a:	mov    al,0x25
  426a1c:	outs   dx,DWORD PTR ds:[esi]
  426a1d:	in     eax,0xd2
  426a1f:	dec    edi
  426a20:	hlt    
  426a21:	sahf   
  426a22:	sar    DWORD PTR [ebx-0x2a],0x28
  426a26:	inc    ebx
  426a27:	ins    DWORD PTR es:[edi],dx
  426a28:	jb     0x426a53
  426a2a:	xlat   BYTE PTR ds:[ebx]
  426a2b:	inc    edi
  426a2c:	loop   0x426a48
  426a2e:	xchg   ecx,eax
  426a2f:	rol    DWORD PTR [eax+ecx*2],0x37
  426a33:	gs loope 0x426ab1
  426a36:	stc    
  426a37:	mov    dh,0xe3
  426a39:	add    eax,0xa35d77c
  426a3e:	retf   
  426a3f:	icebp  
  426a40:	xor    BYTE PTR [esp+ecx*1],ch
  426a43:	dec    ebp
  426a44:	rcr    DWORD PTR [esi+0x38650be9],1
  426a4a:	rcr    DWORD PTR [ebx+0x53],0xb8
  426a4e:	es push ds
  426a50:	test   DWORD PTR [ecx],ecx
  426a52:	clc    
  426a53:	lock in al,0x1d
  426a56:	out    0xaf,eax
  426a58:	mov    cl,0x9
  426a5a:	xchg   ecx,eax
  426a5b:	cmp    BYTE PTR [esi-0x611d200f],bl
  426a61:	lahf   
  426a62:	mov    al,0x21
  426a64:	jmp    0xd6b06037
  426a69:	test   ebp,edx
  426a6b:	cdq    
  426a6c:	das    
  426a6d:	mov    edx,0xfa915189
  426a72:	mov    dh,0x1a
  426a74:	aaa    
  426a75:	leave  
  426a76:	mov    dl,0x50
  426a78:	mul    BYTE PTR [edx-0x45a34336]
  426a7e:	sub    al,0xc8
  426a80:	ret    0x613c
  426a83:	or     esi,ebx
  426a85:	sub    al,0x57
  426a87:	mov    bh,0x89
  426a89:	mov    ebx,0x3ad2850e
  426a8e:	js     0x426a65
  426a90:	lods   eax,DWORD PTR ds:[esi]
  426a91:	jle    0x426a45
  426a93:	cld    
  426a94:	popf   
  426a95:	test   BYTE PTR [edx+0x15f7f9a7],dh
  426a9b:	sti    
  426a9c:	jmp    0x13f1:0x5f70ff6
  426aa3:	js     0x426aa8
  426aa5:	stos   BYTE PTR es:[edi],al
  426aa6:	push   edi
  426aa7:	sbb    al,0x51
  426aa9:	daa    
  426aaa:	pop    ss
  426aab:	shl    ch,1
  426aad:	into   
  426aae:	sub    edi,DWORD PTR [ecx+esi*4+0x3c333498]
  426ab5:	js     0x426b2e
  426ab7:	in     eax,dx
  426ab8:	mov    ds:0x70f99761,eax
  426abd:	enter  0x78a0,0x5f
  426ac1:	push   esi
  426ac2:	inc    eax
  426ac3:	cld    
  426ac4:	mov    dl,0x6b
  426ac6:	stos   DWORD PTR es:[edi],eax
  426ac7:	cmp    dl,BYTE PTR [ebx-0x7fec2362]
  426acd:	sub    eax,esp
  426acf:	test   al,0x71
  426ad1:	sbb    DWORD PTR ds:0xeee0b5db,edx
  426ad7:	fstp   TBYTE PTR [ebx+0x7b]
  426ada:	sub    DWORD PTR [edi-0x67],ebp
  426add:	push   edi
  426ade:	xor    al,0x2b
  426ae0:	in     eax,0x4f
  426ae2:	shl    DWORD PTR [edx+edi*4],0xe5
  426ae6:	mov    bh,0xb9
  426ae8:	sbb    ch,BYTE PTR [edi+ebp*2+0x41e85a21]
  426aef:	jb     0x426b23
  426af1:	retf   0x7d67
  426af4:	push   es
  426af5:	cwde   
  426af6:	pop    ebp
  426af7:	xor    esp,0xffffffc6
  426afa:	scas   al,BYTE PTR es:[edi]
  426afb:	sub    eax,0x32612c2f
  426b00:	mov    eax,ds:0x31a18d92
  426b05:	cmp    al,0x65
  426b07:	out    dx,eax
  426b08:	ret    0x9d6b
  426b0b:	mov    dh,0xa8
  426b0d:	inc    edx
  426b0e:	mov    ecx,0x559c6195
  426b13:	sub    dl,al
  426b15:	adc    eax,0xaeb57596
  426b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b1b:	sbb    esi,ebp
  426b1d:	or     eax,0x5c677d83
  426b22:	hlt    
  426b23:	mov    bl,0x84
  426b25:	data16 cld 
  426b27:	mov    ebx,0x387be811
  426b2c:	mov    esp,0x59249697
  426b31:	pop    esi
  426b32:	mov    ah,0x17
  426b34:	fwait
  426b35:	lods   eax,DWORD PTR ds:[esi]
  426b36:	out    dx,al
  426b37:	jo     0x426ac7
  426b39:	adc    al,BYTE PTR [ebp-0x2c8d0b85]
  426b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b40:	fcmovb st,st(0)
  426b42:	sbb    DWORD PTR [ebx-0x3ad54a15],ecx
  426b48:	sbb    eax,0xc27d0014
  426b4d:	jl     0x426ae0
  426b4f:	mov    dl,0xc1
  426b51:	adc    BYTE PTR [esi-0x5a033f76],dl
  426b57:	sbb    dh,BYTE PTR [ecx+0x6d60b3c8]
  426b5d:	or     bl,al
  426b5f:	jge    0x426b26
  426b61:	aad    0xb9
  426b63:	mov    al,0xa6
  426b65:	sti    
  426b66:	adc    DWORD PTR [edx],esp
  426b68:	loope  0x426bab
  426b6a:	mov    eax,ebx
  426b6c:	add    bh,BYTE PTR [ecx+0x4f]
  426b6f:	sub    BYTE PTR [esi],cl
  426b71:	and    eax,ebx
  426b73:	(bad)  
  426b74:	iret   
  426b75:	xor    DWORD PTR [eax+0x6a],edi
  426b78:	cmp    al,ch
  426b7a:	push   0xffffff99
  426b7c:	jns    0x426b56
  426b7e:	cld    
  426b7f:	ins    BYTE PTR es:[edi],dx
  426b80:	clc    
  426b81:	rol    DWORD PTR [ecx+0x73],0x5a
  426b85:	ret    
  426b86:	(bad)  
  426b87:	in     al,dx
  426b88:	in     al,0x82
  426b8a:	dec    esi
  426b8b:	xor    BYTE PTR [ebx-0x2648604b],bh
  426b91:	mov    ah,0xd3
  426b93:	arpl   WORD PTR fs:[esi+ebp*2],bp
  426b97:	push   ebp
  426b98:	dec    eax
  426b99:	sbb    dh,ch
  426b9b:	pop    esi
  426b9c:	jns    0x426bfb
  426b9e:	jmp    0x5c4d:0x70c7aa14
  426ba5:	(bad)  
  426ba6:	jecxz  0x426c1b
  426ba8:	(bad)  
  426ba9:	jns    0x426c08
  426bab:	(bad)  
  426bac:	cmp    eax,0xbf8ad921
  426bb1:	pop    ds
  426bb2:	cwde   
  426bb3:	xlat   BYTE PTR ds:[ebx]
  426bb4:	and    eax,0xcc14394a
  426bb9:	pop    ebx
  426bba:	das    
  426bbb:	lods   eax,DWORD PTR ds:[esi]
  426bbc:	push   edi
  426bbd:	and    bl,BYTE PTR [eax+0x310093c8]
  426bc3:	fnstcw WORD PTR [edi*2-0x46b7779a]
  426bca:	pop    edx
  426bcb:	imul   edi,ecx,0x59b1c5d6
  426bd1:	(bad)  
  426bd2:	daa    
  426bd3:	les    ebx,FWORD PTR [esi-0x5d]
  426bd6:	adc    al,BYTE PTR [eax]
  426bd8:	xor    al,BYTE PTR [ecx+0x3127c1cb]
  426bde:	xlat   BYTE PTR ds:[ebx]
  426bdf:	jne    0x426c5a
  426be1:	loope  0x426c29
  426be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426be4:	lock imul DWORD PTR [ebx-0x35]
  426be8:	ja     0x426bcb
  426bea:	in     al,dx
  426beb:	sub    edx,DWORD PTR [ebx]
  426bed:	inc    eax
  426bee:	jne    0x426bf0
	...
  426bf8:	add    BYTE PTR [eax],al
  426bfa:	inc    eax
  426bfb:	stos   BYTE PTR es:[edi],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0x3dfe433f,al
  426c07:	sbb    eax,0xe278c923
  426c0c:	add    DWORD PTR [eax],eax
  426c0e:	std    
  426c0f:	add    DWORD PTR [eax],eax
  426c11:	add    BYTE PTR [edi+0x7a],ah
  426c14:	or     ah,ch
  426c16:	vpsrad xmm0,xmm2,XMMWORD PTR [esi+ecx*1]
  426c1b:	jnp    0x426bbd
  426c1d:	add    esi,DWORD PTR [eax-0x7dadd9a1]
  426c23:	fmul   DWORD PTR [edi]
  426c25:	or     esp,edx
  426c27:	mov    eax,0x512132f0
  426c2c:	imul   esp,DWORD PTR [ecx],0x856b340c
  426c32:	or     ch,BYTE PTR [ecx+ebp*8-0x3f]
  426c36:	xchg   edx,eax
  426c37:	xor    edi,0x4866b427
  426c3d:	ret    
  426c3e:	das    
  426c3f:	mov    ah,0x1f
  426c41:	and    eax,0x22a2b5f6
  426c46:	clc    
  426c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c48:	fxch   st(5)
  426c4a:	or     esi,DWORD PTR [ebp-0x1ac81143]
  426c50:	cmp    al,0x97
  426c52:	lods   eax,DWORD PTR ds:[esi]
  426c53:	dec    ecx
  426c54:	dec    edx
  426c55:	ror    DWORD PTR [ecx],0x62
  426c58:	fcomp  QWORD PTR [eax+0x1980eac3]
  426c5e:	mov    BYTE PTR [eax],bh
  426c60:	jae    0x426bfa
  426c62:	arpl   WORD PTR [ecx+0x1],ax
  426c65:	mov    ecx,0xbbfe6601
  426c6a:	cdq    
  426c6b:	ins    DWORD PTR es:[edi],dx
  426c6c:	inc    ebx
  426c6d:	push   ebp
  426c6e:	adc    DWORD PTR [edx-0x3e],edx
  426c71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c72:	(bad)  
  426c73:	retf   0x81b8
  426c76:	fs daa 
  426c78:	addr16 iret 
  426c7a:	adc    BYTE PTR [eax],ch
  426c7c:	xor    DWORD PTR [ebx],esi
  426c7e:	(bad)  
  426c7f:	mov    eax,0xa6861dcb
  426c84:	jge    0x426cab
  426c86:	mov    DWORD PTR [ebp+0x2ff261e5],eax
  426c8c:	mov    eax,ds:0x698f093c
  426c91:	mov    ebx,0xd7971a0e
  426c96:	lods   eax,DWORD PTR ds:[esi]
  426c97:	push   eax
  426c98:	and    ebx,ecx
  426c9a:	or     BYTE PTR [eax+0x394ad41d],0x2d
  426ca1:	mov    edx,0xb450ab87
  426ca6:	jae    0x426c4a
  426ca8:	(bad)  
  426ca9:	and    eax,0x298c7ee3
  426cae:	inc    esi
  426caf:	je     0x426c3f
  426cb1:	add    DWORD PTR [ecx-0x2a],eax
  426cb4:	xor    al,0xcc
  426cb6:	mov    al,ds:0x9e323c69
  426cbb:	cmp    cl,ah
  426cbd:	cmp    esi,DWORD PTR [ebx+0x34]
  426cc0:	push   ds
  426cc1:	int    0x93
  426cc3:	in     al,0x2c
  426cc5:	or     bl,BYTE PTR [ebp-0xe]
  426cc8:	or     dl,BYTE PTR [ebp-0x57a4dc65]
  426cce:	add    BYTE PTR [esi-0x5],dh
  426cd1:	lea    ebp,[ebp+0xbcd8087]
  426cd7:	daa    
  426cd8:	dec    ebp
  426cd9:	cli    
  426cda:	in     al,dx
  426cdb:	mov    ah,0x9e
  426cdd:	adc    bl,0x32
  426ce0:	lahf   
  426ce1:	dec    edx
  426ce2:	dec    esi
  426ce3:	xor    DWORD PTR [esi+edx*2+0x66],edx
  426ce7:	and    DWORD PTR [ebx-0x6eecbd06],esi
  426ced:	jmp    0x738b816
  426cf2:	lds    eax,FWORD PTR [ecx-0x14a37b86]
  426cf8:	jmp    0x426d73
  426cfa:	js     0x426d23
  426cfc:	not    DWORD PTR [esi+ebx*8-0x5]
  426d00:	xor    DWORD PTR [ecx-0x7861ee35],esi
  426d06:	outs   dx,DWORD PTR ds:[esi]
  426d07:	cmp    BYTE PTR [ecx],0x8
  426d0a:	fs inc esi
  426d0c:	mov    dl,BYTE PTR [edx*8+0xf6d3075]
  426d13:	popf   
  426d14:	xchg   ecx,eax
  426d15:	adc    eax,DWORD PTR [ebx+0x33312786]
  426d1b:	fmul   st(0),st
  426d1d:	rcl    DWORD PTR [ebp-0x9],0x28
  426d21:	jmp    0xb5d71acc
  426d26:	mov    ecx,0x4f282874
  426d2b:	dec    ebx
  426d2c:	mov    WORD PTR [ebx],es
  426d2e:	adc    eax,0x9f341c77
  426d33:	sub    dl,BYTE PTR [ebx+0x62]
  426d36:	repz mov eax,ds:0xbfb425fd
  426d3c:	jno    0x426cc2
  426d3e:	sti    
  426d3f:	arpl   WORD PTR [ebx],ax
  426d41:	xchg   DWORD PTR [ecx-0x2dd1f4c6],ecx
  426d47:	nop
  426d48:	pop    ebx
  426d49:	sub    eax,0x799ba659
  426d4e:	jbe    0x426d5b
  426d50:	xchg   edx,eax
  426d51:	xor    BYTE PTR [ebp+edi*2+0x608bdb5d],dl
  426d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d59:	push   esp
  426d5a:	sub    eax,0x90047cdd
  426d5f:	xchg   ebx,eax
  426d60:	ins    BYTE PTR es:[edi],dx
  426d61:	inc    edi
  426d62:	fisttp DWORD PTR [ebx+eiz*2]
  426d65:	daa    
  426d66:	xchg   BYTE PTR [ebp+0x77],dh
  426d69:	pusha  
  426d6a:	outs   dx,BYTE PTR ds:[esi]
  426d6b:	data16 adc ch,BYTE PTR [edi-0x44169d8b]
  426d72:	fmul   DWORD PTR [ebp-0x74fb2f1c]
  426d78:	jl     0x426da9
  426d7a:	cdq    
  426d7b:	jo     0x426d58
  426d7d:	leave  
  426d7e:	push   es
  426d7f:	not    BYTE PTR [edx+edx*1-0x5b]
  426d83:	sbb    dl,BYTE PTR [esi+esi*8]
  426d86:	(bad)  
  426d87:	(bad)  
  426d88:	fs mov bl,0xb2
  426d8b:	jmp    0xa84f4407
  426d90:	push   ebx
  426d91:	sub    bl,ch
  426d93:	cmp    al,0x21
  426d95:	sbb    eax,0x68e7302e
  426d9a:	arpl   WORD PTR [ecx],si
  426d9c:	sahf   
  426d9d:	addr16 pusha 
  426d9f:	mov    DWORD PTR ds:0xcfc113a5,ebx
  426da5:	sbb    ebx,DWORD PTR [eax+eiz*2+0x125a7015]
  426dac:	repz mov ch,0xe
  426daf:	jmp    esp
  426db1:	cs cmc 
  426db3:	jp     0x426de9
  426db5:	cmc    
  426db6:	xor    ch,bl
  426db8:	add    ebp,ecx
  426dba:	cld    
  426dbb:	(bad)  
  426dbc:	scas   eax,DWORD PTR es:[edi]
  426dbd:	mov    dl,0x6f
  426dbf:	mov    BYTE PTR [eax+0x7d21c74d],bh
  426dc5:	das    
  426dc6:	cdq    
  426dc7:	(bad)  
  426dc9:	inc    ebp
  426dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dcb:	loope  0x426d5b
  426dcd:	xchg   esp,eax
  426dce:	push   ecx
  426dcf:	inc    esp
  426dd0:	mul    BYTE PTR [esp+ecx*8+0x16b18e10]
  426dd7:	cmp    ebp,DWORD PTR [edx-0x4408cdcf]
  426ddd:	dec    eax
  426dde:	push   ebp
  426ddf:	adc    BYTE PTR [ebp+0x13],dh
  426de2:	xchg   DWORD PTR [ebp-0x67],esi
  426de5:	or     BYTE PTR [edx+edi*1+0x3d],dl
  426de9:	adc    DWORD PTR [edi+0xc],0xffffff80
  426ded:	vmwrite edx,DWORD PTR [esi-0x6c]
  426df1:	dec    edx
  426df2:	ds adc esi,esi
  426df5:	adc    DWORD PTR [ecx-0x4b],edx
  426df8:	xchg   edi,eax
  426df9:	cmp    eax,0x52a79e4d
  426dfe:	pushf  
  426dff:	fwait
  426e00:	std    
  426e01:	not    ebp
  426e03:	in     eax,0x54
  426e05:	mov    eax,0x65067ad1
  426e0a:	(bad)  
  426e0b:	rep outs dx,BYTE PTR ds:[esi]
  426e0d:	push   0x96
	...
  426e1a:	mov    dh,0xe4
  426e1c:	xlat   BYTE PTR ds:[ebx]
  426e1d:	push   esp
  426e1e:	xlat   BYTE PTR ds:[ebx]
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	daa    
  426e27:	dec    esp
  426e28:	stc    
  426e29:	data16 jne 0x426e10
  426e2c:	add    DWORD PTR [eax],eax
  426e2e:	std    
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR [edx+0x7f095215],dl
  426e37:	xor    DWORD PTR [edx-0x6b3274dd],edx
  426e3d:	xchg   esi,eax
  426e3e:	xlat   BYTE PTR ds:[ebx]
  426e3f:	adc    DWORD PTR [edx-0x6],esp
  426e42:	and    esi,edi
  426e44:	push   ecx
  426e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e46:	mov    ds:0xa9d9cf33,eax
  426e4b:	mov    eax,0x4163529f
  426e50:	mov    eax,ds:0xf0c53416
  426e55:	hlt    
  426e56:	jno    0x426e3e
  426e58:	and    DWORD PTR [ebx+0x43],ebx
  426e5b:	sbb    bl,BYTE PTR [edi+edi*1+0x74]
  426e5f:	(bad)  
  426e60:	std    
  426e61:	xchg   ebp,eax
  426e62:	or     al,0x6a
  426e64:	mov    cl,0xd7
  426e66:	xchg   esi,eax
  426e68:	pop    eax
  426e69:	jmp    0xd4ff8d40
  426e6e:	cmp    al,0xb4
  426e70:	(bad)  
  426e71:	push   esp
  426e72:	out    0xa7,al
  426e74:	rcl    bh,cl
  426e76:	loopne 0x426ed1
  426e78:	jmp    0x426ece
  426e7a:	mov    ch,0x95
  426e7c:	jmp    0xa345:0x84b66a18
  426e83:	lock add BYTE PTR [esi-0x42539e71],bl
  426e8a:	xor    eax,0x229f9907
  426e8f:	add    eax,0x7c333abe
  426e94:	xchg   edx,eax
  426e95:	cmc    
  426e96:	lea    ecx,[ebx]
  426e98:	nop
  426e99:	jnp    0x426ef7
  426e9b:	and    edx,ebp
  426e9d:	mov    eax,0x9718c29d
  426ea2:	mov    al,0x49
  426ea4:	dec    ebp
  426ea5:	out    0xc7,al
  426ea7:	push   es
  426ea8:	cmp    dh,ch
  426eaa:	xor    ecx,0xdb1e22d9
  426eb0:	std    
  426eb1:	hlt    
  426eb2:	pop    ebx
  426eb3:	clc    
  426eb4:	or     eax,0xfa368242
  426eb9:	sub    DWORD PTR [ecx-0x30],edx
  426ebc:	jmp    0x878ad0fa
  426ec1:	and    al,0x6d
  426ec3:	aam    0xd7
  426ec5:	out    0xdb,al
  426ec7:	dec    esi
  426ec8:	and    DWORD PTR [bp+si-0x25c5],ecx
  426ecd:	push   ss
  426ece:	(bad)  
  426ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ed0:	dec    esp
  426ed1:	adc    ebp,esi
  426ed3:	sar    BYTE PTR [ebx-0xa],0xb6
  426ed7:	mov    edx,0x2b3c0565
  426edc:	dec    ebp
  426edd:	mov    bh,0xd2
  426edf:	fnstcw WORD PTR [ebx]
  426ee1:	mov    ds:0x78848ebd,eax
  426ee6:	(bad)  
  426ee7:	outs   dx,BYTE PTR ds:[esi]
  426ee8:	pop    ds
  426ee9:	mov    al,ds:0x30e6f517
  426eee:	cmp    edi,esi
  426ef0:	lahf   
  426ef1:	add    ebp,DWORD PTR [ebp+ebx*8+0x6d]
  426ef5:	dec    esp
  426ef6:	(bad)  
  426ef7:	dec    ecx
  426ef8:	inc    ebp
  426ef9:	loopne 0x426f5d
  426efb:	mul    dh
  426efd:	sahf   
  426efe:	test   DWORD PTR [eax-0x1d],edx
  426f01:	cwde   
  426f02:	pop    edi
  426f03:	push   edi
  426f04:	jne    0x426f38
  426f06:	add    dh,dh
  426f08:	and    eax,0x7d99eed0
  426f0d:	ins    DWORD PTR es:[edi],dx
  426f0e:	dec    edi
  426f0f:	push   ss
  426f10:	or     eax,0x96b70db8
  426f15:	xor    BYTE PTR [ecx-0x75],ch
  426f18:	push   eax
  426f19:	ficom  WORD PTR [ebp+esi*8-0x72c2056e]
  426f20:	cmp    eax,0xc5f0d129
  426f25:	(bad)  
  426f26:	outs   dx,BYTE PTR ds:[esi]
  426f27:	aam    0xaa
  426f29:	and    eax,0x5b83b3d8
  426f2e:	aaa    
  426f2f:	mov    esp,0xc45e8027
  426f34:	fs mov ebx,0x2b7ccc24
  426f3a:	add    al,0xc4
  426f3c:	out    0x78,al
  426f3e:	std    
  426f3f:	jb     0x426f7f
  426f41:	out    0xaf,al
  426f43:	mov    eax,0x8076f99f
  426f48:	dec    esi
  426f49:	add    al,0x4b
  426f4b:	sub    DWORD PTR [esi-0x21ba3f8],0xffffff8d
  426f52:	pop    eax
  426f53:	jne    0x426fba
  426f55:	jecxz  0x426fc6
  426f57:	jae    0x426f9e
  426f59:	stos   DWORD PTR es:[edi],eax
  426f5a:	and    BYTE PTR [edx+0x26f5b335],bh
  426f60:	pop    esp
  426f61:	inc    esi
  426f62:	mov    DWORD PTR [ebx-0x69],ebx
  426f65:	cdq    
  426f66:	jge    0x426f7b
  426f68:	lahf   
  426f69:	or     DWORD PTR [ebp-0x6e],edi
  426f6c:	xor    BYTE PTR [ebp-0x994a7dc],0x6
  426f73:	mov    bl,0xca
  426f75:	xchg   BYTE PTR [eax+0x28e80b3f],ch
  426f7b:	mov    ecx,0x63cb4b66
  426f80:	sub    eax,0x7a97b5b5
  426f85:	daa    
  426f86:	inc    eax
  426f87:	mov    BYTE PTR [esi-0x2f],dh
  426f8a:	dec    esi
  426f8b:	push   edx
  426f8c:	adc    BYTE PTR [ebx+0x13af977c],dl
  426f92:	aaa    
  426f93:	outs   dx,DWORD PTR ds:[esi]
  426f94:	inc    edx
  426f95:	or     ebp,ebp
  426f97:	mov    al,ds:0x1febafb3
  426f9c:	imul   ebx,DWORD PTR [eax-0x21],0x63
  426fa0:	xchg   esi,eax
  426fa1:	mov    ss,WORD PTR [edx+0x11e82818]
  426fa7:	and    eax,0x377d0902
  426fac:	dec    esp
  426fad:	adc    bl,BYTE PTR [ecx]
  426faf:	pop    ss
  426fb0:	or     bl,BYTE PTR [edx-0xaa6e656]
  426fb6:	or     bl,cl
  426fb8:	test   DWORD PTR [ebp-0x7e],eax
  426fbb:	sub    eax,DWORD PTR [edi+0x67]
  426fbe:	inc    esi
  426fbf:	test   al,0x1
  426fc1:	ja     0x426ff3
  426fc3:	mov    WORD PTR [esp+ebp*8-0x5e314528],?
  426fca:	and    BYTE PTR ds:0x30082191,al
  426fd0:	xor    ebx,edi
  426fd2:	les    edx,FWORD PTR [esi+0x5fb5d83d]
  426fd8:	jo     0x427052
  426fda:	loopne 0x427049
  426fdc:	cmc    
  426fdd:	out    0x4a,al
  426fdf:	and    BYTE PTR [edi+0x7ec4fccc],bh
  426fe5:	shl    esp,0x94
  426fe8:	inc    esp
  426fe9:	mov    ecx,0xd2e2c65c
  426fee:	fdivr  QWORD PTR [edi]
  426ff0:	lock mov cl,0x40
  426ff3:	(bad)  
  426ff4:	shl    ebx,0x79
  426ff7:	and    esp,esp
  426ff9:	push   eax
  426ffa:	pop    ebp
  426ffb:	jno    0x426f84
  426ffd:	cmc    
  426ffe:	sub    BYTE PTR [esi],0x37
  427001:	test   BYTE PTR [esi+0x5b],0x8c
  427005:	and    dl,bl
  427007:	push   edx
  427008:	dec    esp
  427009:	mov    esi,0xc3b85c7
  42700e:	or     DWORD PTR [ebx+edi*2+0x7941e477],0x1b951ef7
  427019:	repnz or bl,BYTE PTR [ebp-0x6136896a]
  427020:	add    bh,al
  427022:	add    BYTE PTR [eax+ebp*4-0x3a02e39e],ah
  427029:	jno    0x42701a
  42702b:	shl    DWORD PTR [ebp+0x68],1
  42702e:	test   BYTE PTR [eax],0x0
	...
  427039:	add    dl,bh
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx+0x68a43d15]
  427047:	jnp    0x427006
  427049:	xchg   esi,eax
  42704a:	jb     0x427032
  42704c:	add    DWORD PTR [eax],eax
  42704e:	std    
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    BYTE PTR [edi+0x13],cl
  427054:	rcr    BYTE PTR fs:[ebx+0x6e],cl
  427058:	dec    ebx
  427059:	pop    esp
  42705a:	inc    BYTE PTR [edi]
  42705c:	inc    ebp
  42705d:	pop    edi
  42705e:	mov    BYTE PTR [ebp+0xb],0xca
  427062:	sub    al,0xb6
  427064:	mov    ch,BYTE PTR [ebx+0x5c]
  427067:	pop    ss
  427068:	xchg   ebp,eax
  427069:	fs inc eax
  42706b:	mov    dh,0x8e
  42706d:	mov    dh,BYTE PTR [edi+0x4e]
  427070:	fldenv [edx+0x450ffcf]
  427076:	nop
  427077:	mov    es,WORD PTR [edx]
  427079:	sar    BYTE PTR [esi+0x38],0x38
  42707d:	mov    al,ds:0x73500d2f
  427082:	out    0xa9,eax
  427084:	imul   ebx,esi,0xffffffdc
  427087:	ret    0xfd6f
  42708a:	mov    eax,ds:0xe3087894
  42708f:	add    DWORD PTR [ebp+0x531b036d],esp
  427095:	sub    eax,0x76736d0e
  42709a:	push   ecx
  42709b:	icebp  
  42709c:	mov    esp,0x57556ca5
  4270a1:	nop
  4270a2:	(bad)  
  4270a3:	xor    esi,esi
  4270a5:	je     0x42707b
  4270a7:	(bad)
  4270aa:	jle    0x4270f6
  4270ac:	push   ebp
  4270ad:	sub    al,0x22
  4270af:	ins    DWORD PTR es:[edi],dx
  4270b0:	into   
  4270b1:	dec    eax
  4270b2:	aaa    
  4270b3:	add    al,0xcd
  4270b5:	stos   BYTE PTR es:[edi],al
  4270b6:	sub    BYTE PTR [ecx-0x4b],dl
  4270b9:	jb     0x4270ac
  4270bb:	mov    ?,WORD PTR [esi+eax*4]
  4270be:	retf   
  4270bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270c0:	daa    
  4270c1:	cmp    DWORD PTR [eax+0x61],ebx
  4270c4:	loopne 0x427076
  4270c6:	xchg   ebp,eax
  4270c7:	in     al,0xd6
  4270c9:	fisttp WORD PTR [ebx]
  4270cb:	jae    0x4270b7
  4270cd:	sub    cl,BYTE PTR ds:0x7d401652
  4270d3:	dec    ecx
  4270d4:	sbb    al,0x9a
  4270d6:	pop    ecx
  4270d7:	icebp  
  4270d8:	in     al,0xa
  4270da:	cmp    dl,BYTE PTR [ebx+0x6d274d21]
  4270e0:	outs   dx,BYTE PTR ds:[esi]
  4270e1:	push   esp
  4270e2:	fcmovnbe st,st(6)
  4270e4:	mov    eax,ds:0x8de19c05
  4270e9:	xor    eax,0x911d206a
  4270ee:	cwde   
  4270ef:	aad    0x18
  4270f1:	popa   
  4270f2:	push   eax
  4270f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270f4:	sbb    ecx,edi
  4270f6:	push   0x106014eb
  4270fb:	fldenv [edx+0x1dbed6b0]
  427101:	sub    al,0xe7
  427103:	(bad)  
  427104:	mov    al,0xe4
  427106:	and    al,bh
  427108:	xor    edi,edx
  42710a:	jl     0x427152
  42710c:	sbb    eax,DWORD PTR ds:0x1ef5c991
  427112:	pop    ecx
  427113:	and    esi,DWORD PTR [ecx-0x10b2676a]
  427119:	mov    DWORD PTR [eax],edi
  42711b:	inc    ecx
  42711c:	push   ds
  42711d:	shr    BYTE PTR [eax+ecx*1-0x28],cl
  427121:	(bad)  
  427122:	xor    eax,0xee75a46a
  427127:	dec    esp
  427128:	leave  
  427129:	and    BYTE PTR [ebx-0x4fbc6966],dh
  42712f:	repnz data16 sbb bl,dh
  427133:	out    dx,al
  427134:	or     al,0x48
  427136:	outs   dx,BYTE PTR ds:[esi]
  427137:	add    al,0xd2
  427139:	and    bh,bl
  42713b:	ja     0x42719c
  42713d:	jecxz  0x4271be
  42713f:	pop    ebp
  427140:	xor    ebp,DWORD PTR [ebx+0xe]
  427143:	or     al,0x1b
  427146:	mov    ah,0x1a
  427148:	ins    DWORD PTR es:[edi],dx
  427149:	cmc    
  42714a:	retf   
  42714b:	inc    esi
  42714c:	push   ds
  42714d:	add    ch,BYTE PTR [ecx]
  42714f:	jecxz  0x4271b9
  427151:	ror    cl,1
  427153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427154:	out    dx,al
  427155:	out    dx,eax
  427156:	js     0x42718c
  427158:	mov    eax,ds:0x55539c3f
  42715d:	sbb    ebp,DWORD PTR cs:[eax+ebp*2+0xf]
  427162:	aas    
  427163:	out    dx,al
  427164:	inc    edx
  427165:	loopne 0x4271c1
  427167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427168:	mov    al,ds:0x6a86ff6d
  42716d:	out    0x13,al
  42716f:	mov    eax,ds:0xf7d02ac0
  427174:	js     0x4271f4
  427176:	sar    DWORD PTR [ecx+0x559c2903],0x70
  42717d:	cs pop ebp
  42717f:	jge    0x4271fe
  427181:	mov    eax,ds:0x752d5fab
  427186:	dec    DWORD PTR [ebp+edi*4+0x34]
  42718a:	push   edi
  42718b:	jno    0x427180
  42718d:	mov    dl,BYTE PTR ds:0xf84c5272
  427193:	xchg   esi,eax
  427194:	int3   
  427195:	jmp    0xd574:0xe4cb143a
  42719c:	mov    cl,bh
  42719e:	in     al,dx
  42719f:	popf   
  4271a0:	in     al,0x59
  4271a2:	adc    al,0xdb
  4271a4:	in     al,dx
  4271a5:	jno    0x427212
  4271a7:	and    al,BYTE PTR [edx+0x1035d050]
  4271ad:	mov    esp,0x4e657a20
  4271b2:	cli    
  4271b3:	push   ss
  4271b4:	and    eax,0xb9494848
  4271b9:	ficomp WORD PTR [eax+0x30318b5f]
  4271bf:	ret    
  4271c0:	fscale 
  4271c2:	mov    bh,0xe5
  4271c4:	push   0x4e
  4271c6:	in     al,0x42
  4271c8:	inc    ebp
  4271c9:	enter  0x2010,0x15
  4271cd:	ror    DWORD PTR [ebp-0x39c2c73f],1
  4271d3:	adc    al,0xfe
  4271d5:	push   0xffffffcc
  4271d7:	test   eax,0x4c48f99
  4271dc:	mov    eax,ds:0xb57bd75c
  4271e1:	mov    esp,cs
  4271e3:	leave  
  4271e4:	fwait
  4271e5:	jmp    0x4271c7
  4271e7:	out    dx,al
  4271e8:	bound  eax,QWORD PTR [ebp-0x2a93c41d]
  4271ee:	adc    ecx,DWORD PTR [ebp-0x10e5c3f0]
  4271f4:	cmp    BYTE PTR [ebp+0x74],bh
  4271f7:	mov    ch,0x47
  4271f9:	cdq    
  4271fa:	lds    ebp,FWORD PTR [edi+0x4e1d8ece]
  427200:	sbb    DWORD PTR [edi-0x2ed1818c],0x5a1a147b
  42720a:	sub    esi,0x213277a4
  427210:	xor    esp,DWORD PTR [ebx+0x2b46f75d]
  427216:	inc    ecx
  427217:	(bad)  
  427218:	jo     0x4271a3
  42721a:	mov    dh,BYTE PTR [edx]
  42721c:	ror    BYTE PTR [esi+0x43],cl
  42721f:	call   0xfccb:0xf8ea17f1
  427226:	mov    es,WORD PTR [esp+eiz*2]
  427229:	sub    al,0x40
  42722b:	jmp    0xe635:0x9ccc87b2
  427232:	cmp    al,0xc5
  427234:	(bad)  
  427235:	scas   al,BYTE PTR es:[edi]
  427236:	push   cs
  427237:	push   edx
  427238:	mov    ch,0x37
  42723a:	ret    
  42723b:	or     al,0x70
  42723d:	jp     0x427210
  42723f:	pop    ebp
  427240:	call   0xfe89:0x84a4cfbe
  427247:	sbb    al,0x40
  427249:	aam    0xfd
  42724b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42724c:	neg    esi
  42724e:	rol    DWORD PTR [eax],0x0
	...
  427259:	add    bh,cl
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0x9db02077
  427267:	int3   
  427268:	or     eax,0x1e86f88
  42726d:	add    ch,bh
  42726f:	add    DWORD PTR [eax],eax
  427271:	add    cl,dl
  427273:	ret    
  427274:	and    ah,al
  427276:	sub    bl,ah
  427278:	pop    eax
  427279:	xchg   edi,eax
  42727a:	imul   ebx,ebx,0x75a61ff4
  427280:	test   DWORD PTR [eax+0x9],edx
  427283:	adc    al,0xbe
  427285:	and    edx,DWORD PTR [edx-0x414bd560]
  42728b:	mov    ds:0x7e64d32c,eax
  427290:	mov    esi,0xff6f48cc
  427295:	lock inc esp
  427297:	jl     0x4272f1
  427299:	test   dl,cl
  42729b:	(bad)  
  42729c:	jb     0x4272ae
  42729e:	out    dx,eax
  42729f:	xchg   ebp,eax
  4272a0:	ret    
  4272a1:	sbb    DWORD PTR [eax],esp
  4272a3:	push   ds
  4272a4:	adc    ecx,DWORD PTR [edi]
  4272a6:	lea    esp,[ecx+0x2a]
  4272a9:	dec    ebx
  4272aa:	add    al,0xd9
  4272ac:	lahf   
  4272ad:	sub    eax,0x37195d92
  4272b2:	dec    ebp
  4272b3:	lods   eax,DWORD PTR ds:[esi]
  4272b4:	cld    
  4272b5:	fidivr DWORD PTR [ebp-0xa]
  4272b8:	stc    
  4272b9:	ins    DWORD PTR es:[edi],dx
  4272ba:	arpl   WORD PTR [ebp-0x3f],bx
  4272bd:	in     al,dx
  4272be:	dec    esp
  4272bf:	jl     0x42726c
  4272c1:	and    eax,DWORD PTR [edx-0x9]
  4272c4:	mov    ah,0x47
  4272c6:	mov    al,0x47
  4272c8:	sbb    dh,al
  4272ca:	stc    
  4272cb:	mov    eax,0xdb2f4e0f
  4272d0:	mov    dh,0x5f
  4272d2:	push   edx
  4272d3:	fcmovu st,st(4)
  4272d5:	jmp    0x4272a2
  4272d7:	lock mov bl,0x71
  4272da:	aad    0x3f
  4272dc:	and    DWORD PTR [edx],0x14
  4272df:	push   ecx
  4272e0:	or     dl,cl
  4272e2:	adc    dl,ch
  4272e4:	scas   al,BYTE PTR es:[edi]
  4272e5:	pushf  
  4272e6:	sub    eax,0xaac87329
  4272eb:	push   0x3b
  4272ed:	jge    0x427293
  4272ef:	mov    cl,0x0
  4272f2:	add    esp,DWORD PTR ds:0xc7a4604a
  4272f8:	jmp    0x427298
  4272fa:	faddp  st(5),st
  4272fc:	mov    dl,0xfd
  4272fe:	adc    BYTE PTR [esi-0x79],cl
  427301:	aas    
  427302:	dec    ecx
  427303:	retf   
  427304:	or     BYTE PTR [ecx+0x2f],ah
  427307:	inc    esi
  427308:	add    bh,dh
  42730a:	mov    eax,0x7c5e221f
  42730f:	mov    al,ds:0x20fca051
  427314:	pushf  
  427315:	xchg   edi,eax
  427316:	hlt    
  427317:	dec    ecx
  427318:	pop    ebp
  427319:	dec    edi
  42731a:	add    al,0x72
  42731c:	pusha  
  42731d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42731e:	fidivr WORD PTR [esi-0x4369b998]
  427324:	mov    esi,DWORD PTR [edx+0x46171ed9]
  42732a:	outs   dx,BYTE PTR ds:[esi]
  42732b:	cmp    DWORD PTR [esi-0x4a],0x2ff7b31f
  427332:	adc    edx,DWORD PTR [edx]
  427334:	jge    0x427370
  427336:	xchg   ebx,eax
  427337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427338:	ficom  WORD PTR [ecx]
  42733a:	or     dh,dl
  42733c:	sbb    bl,BYTE PTR [ebx]
  42733e:	sbb    DWORD PTR [ebx-0x4f35e7d6],0xfffffffc
  427345:	xor    bl,BYTE PTR [ebp+0x21b13741]
  42734b:	sar    BYTE PTR [ebx-0x65],0x60
  42734f:	cmp    al,0x9f
  427351:	xlat   BYTE PTR ds:[ebx]
  427352:	fcmove st,st(0)
  427354:	je     0x4273a4
  427356:	adc    eax,0x4c01811d
  42735b:	push   0x5e1cc0c
  427360:	mov    edi,0x8d99c40b
  427365:	jg     0x427356
  427367:	mov    ebx,0x140342df
  42736c:	sbb    eax,0xf5a1102c
  427371:	outs   dx,DWORD PTR ds:[esi]
  427372:	cmc    
  427373:	imul   ebp,eax,0x3c
  427376:	xor    eax,0x9353e50d
  42737b:	jno    0x4273b6
  42737d:	and    DWORD PTR [ebx],ecx
  42737f:	icebp  
  427380:	idiv   cl
  427382:	xlat   BYTE PTR ds:[ebx]
  427383:	aad    0x12
  427385:	scas   al,BYTE PTR es:[edi]
  427386:	fnsave [esi]
  427388:	in     al,0x54
  42738a:	(bad)  
  42738b:	shr    cl,1
  42738d:	mov    bh,0xb1
  42738f:	test   ch,0x4f
  427392:	pop    ebp
  427393:	faddp  st(7),st
  427395:	mov    cl,0x7d
  427397:	gs pop esi
  427399:	ins    BYTE PTR es:[edi],dx
  42739a:	mov    ebp,0xc0146c7c
  42739f:	push   eax
  4273a1:	xor    BYTE PTR [edi-0x2332186f],bl
  4273a7:	lds    ebx,FWORD PTR [esi*2+0x621772d1]
  4273ae:	repz ss ret 0xe932
  4273b3:	add    eax,DWORD PTR [edi]
  4273b5:	in     eax,dx
  4273b6:	fcmovne st,st(7)
  4273b8:	into   
  4273b9:	or     eax,0xae64df3b
  4273be:	retf   0xe11b
  4273c1:	push   cs
  4273c2:	popa   
  4273c3:	dec    edx
  4273c4:	sub    bl,cl
  4273c6:	ss aam 0xcc
  4273c9:	popa   
  4273ca:	xor    ah,0xb2
  4273cd:	(bad)  
  4273ce:	pop    ecx
  4273cf:	imul   esi,DWORD PTR [eax-0x1540f9ae],0x93e47626
  4273d9:	add    eax,0xd2d20aba
  4273de:	mov    esi,DWORD PTR [ecx+0x14]
  4273e1:	in     eax,dx
  4273e2:	or     DWORD PTR [esi-0x426f6ff1],eax
  4273e8:	cwde   
  4273e9:	push   edx
  4273ea:	cmp    al,0xac
  4273ec:	mov    ebp,0x869e5405
  4273f1:	ss inc edi
  4273f3:	and    DWORD PTR [eax-0xd597981],edx
  4273f9:	jmp    FWORD PTR [edx]
  4273fb:	fneni(8087 only) 
  4273fd:	out    dx,al
  4273fe:	pop    edi
  4273ff:	add    al,0x76
  427401:	lock mov bh,BYTE PTR [eax]
  427404:	idiv   BYTE PTR [eax+0x1e4f8039]
  42740a:	cmp    eax,0xecdfebe2
  42740f:	adc    eax,0xeee14026
  427414:	dec    ebp
  427415:	mov    ds,edx
  427417:	sahf   
  427418:	mov    eax,ds:0xf61a52f6
  42741d:	or     dh,BYTE PTR [esi+0x111b53e5]
  427423:	ins    DWORD PTR es:[edi],dx
  427424:	add    al,0x64
  427426:	ja     0x42740c
  427428:	or     edx,DWORD PTR [ebp-0x2c]
  42742b:	dec    edx
  42742c:	inc    eax
  42742d:	das    
  42742e:	sbb    eax,0x59f97294
  427433:	loopne 0x4273bc
  427435:	push   edi
  427436:	dec    ebp
  427437:	pop    ecx
  427438:	icebp  
  427439:	mov    edx,0x27a7bbcb
  42743e:	call   0x310e:0xf953d6f9
  427445:	dec    edi
  427446:	pop    ebp
  427447:	push   ss
  427448:	inc    esp
  427449:	mov    ebx,0xa302b70
  42744e:	mov    eax,0xf51a6327
  427453:	cdq    
  427454:	mov    al,0xd1
  427456:	test   BYTE PTR [edx],al
  427458:	xchg   esi,eax
  427459:	fimul  DWORD PTR [eax+0x60928deb]
  42745f:	mov    ebp,0xa57068d4
  427464:	push   ebx
  427465:	jne    0x427427
  427467:	clc    
  427468:	retf   0x169c
  42746b:	adc    bl,dh
  42746d:	jg     0x4274bd
	...
  427477:	add    BYTE PTR [eax],al
  427479:	add    BYTE PTR [eax+0x23],ch
  42747c:	sub    eax,0x7b1e6f1e
  427481:	ja     0x4274f2
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	inc    ecx
  427487:	lock mov ebp,0x1ea6c8f
  42748d:	add    ch,bh
  42748f:	add    DWORD PTR [eax],eax
  427491:	add    BYTE PTR ds:0xaf43385,ah
  427497:	(bad)  
  427498:	xchg   ecx,eax
  427499:	jb     0x427475
  42749b:	aas    
  42749c:	cmp    ah,dl
  42749e:	cld    
  42749f:	mov    al,0x14
  4274a1:	sbb    ch,cl
  4274a3:	hlt    
  4274a4:	lds    ecx,FWORD PTR [edi-0xf]
  4274a7:	sbb    ebx,esp
  4274a9:	dec    eax
  4274aa:	mov    bh,0x7a
  4274ac:	sti    
  4274ad:	(bad)  
  4274ae:	addr16 push 0x1313b699
  4274b4:	js     0x42750f
  4274b6:	inc    edi
  4274b7:	xchg   esi,eax
  4274b8:	int    0x8
  4274ba:	mov    dl,0x79
  4274bc:	sbb    al,0x1d
  4274be:	pop    ds
  4274bf:	push   ecx
  4274c0:	iret   
  4274c1:	pushf  
  4274c2:	in     eax,dx
  4274c3:	jo     0x427483
  4274c5:	and    eax,0x8dad34ba
  4274ca:	ficomp WORD PTR [esi+ecx*1]
  4274cd:	pop    ebp
  4274ce:	addr16 mov ecx,0xd3a822b6
  4274d4:	add    esi,DWORD PTR [eax-0x6007399f]
  4274da:	pop    ebp
  4274db:	jmp    0xcc5b:0x9148b0e3
  4274e2:	loope  0x42750d
  4274e4:	xchg   esp,eax
  4274e5:	xchg   ebx,eax
  4274e6:	mov    DWORD PTR [edx+0x2],edi
  4274e9:	add    ecx,ebp
  4274eb:	pop    ebx
  4274ec:	dec    eax
  4274ed:	pop    ebp
  4274ee:	mov    edx,0xcc85471
  4274f3:	jecxz  0x42756b
  4274f5:	adc    edi,DWORD PTR [ecx]
  4274f7:	mov    edx,0xb65be031
  4274fc:	ins    BYTE PTR es:[edi],dx
  4274fd:	lods   eax,DWORD PTR ds:[esi]
  4274fe:	push   ss
  4274ff:	jae    0x42755d
  427501:	jae    0x4274fa
  427503:	cmc    
  427504:	ins    DWORD PTR es:[edi],dx
  427505:	inc    edx
  427506:	(bad)  
  427507:	jecxz  0x42754e
  427509:	mov    bl,0xae
  42750b:	add    ebp,DWORD PTR [edi-0x73]
  42750e:	imul   esp,DWORD PTR [esi+0x45d78896],0x5d
  427515:	jge    0x427507
  427517:	or     eax,0x9c76936e
  42751c:	add    eax,0xbf214831
  427521:	retf   
  427522:	jns    0x4275a0
  427524:	inc    ebx
  427525:	nop    DWORD PTR [edx+0x1a]
  427529:	push   esi
  42752a:	mov    cl,0xf6
  42752c:	arpl   dx,di
  42752e:	sub    dl,ah
  427530:	cmp    al,0x5a
  427532:	sub    DWORD PTR [ebx-0x240e505c],eax
  427538:	std    
  427539:	outs   dx,BYTE PTR ds:[esi]
  42753a:	mov    bl,0x39
  42753c:	sub    eax,0xef7ce2da
  427541:	test   DWORD PTR [esi-0x2207b92a],esp
  427547:	add    DWORD PTR [eax-0x4e],edi
  42754a:	frstor [ecx+0x58]
  42754d:	(bad)  
  42754e:	push   esi
  42754f:	jae    0x42759c
  427551:	stos   DWORD PTR es:[edi],eax
  427552:	in     al,dx
  427553:	adc    dl,BYTE PTR [edi]
  427555:	push   ecx
  427556:	dec    edi
  427557:	dec    ebp
  427558:	jp     0x42751a
  42755a:	(bad)  
  42755b:	frstor [eax-0x2c]
  42755e:	xor    ecx,DWORD PTR [ebx-0xe8ca612]
  427564:	cmp    ecx,DWORD PTR [ebp+0x5c]
  427567:	xor    dl,BYTE PTR [esi-0x53]
  42756a:	(bad)  
  42756b:	xor    eax,0xfea95700
  427570:	mov    ch,0x12
  427572:	sub    eax,0xe72e3383
  427577:	jp     0x427521
  427579:	mov    ebp,0xc4eb5b90
  42757e:	jnp    0x4275e6
  427580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427581:	lods   eax,DWORD PTR ds:[esi]
  427582:	out    dx,eax
  427583:	data16 jl 0x427520
  427586:	xchg   ebx,eax
  427587:	test   BYTE PTR [ebx],dl
  427589:	adc    ebp,DWORD PTR [eax+0x6b124479]
  42758f:	pop    esp
  427590:	inc    esi
  427591:	inc    edx
  427592:	call   0x9e20:0xd8012f52
  427599:	popa   
  42759a:	les    ebx,FWORD PTR [edx]
  42759c:	xchg   DWORD PTR [esp+edx*4-0x28],ebp
  4275a0:	mov    ah,0x82
  4275a2:	add    BYTE PTR ds:0xf000a961,ch
  4275a8:	jge    0x4275ac
  4275aa:	stos   BYTE PTR es:[edi],al
  4275ab:	mov    ah,0x71
  4275ad:	mov    esi,0xd7b65722
  4275b2:	inc    eax
  4275b3:	fimul  WORD PTR [edx+0x51]
  4275b6:	mov    esp,0xb752a6dd
  4275bb:	fnstenv [esi-0x786c6196]
  4275c1:	push   ebp
  4275c2:	xchg   DWORD PTR ds:0x27f466b8,esi
  4275c8:	bound  ebp,QWORD PTR [edi-0x78]
  4275cb:	push   ebp
  4275cc:	jne    0x427647
  4275ce:	into   
  4275cf:	out    0x74,al
  4275d1:	ret    0x2c62
  4275d4:	scas   al,BYTE PTR es:[edi]
  4275d5:	or     BYTE PTR [edi],bh
  4275d7:	add    bl,bh
  4275d9:	or     DWORD PTR [ebp-0x2bb218fa],edi
  4275df:	call   0x7879:0xe2768d7a
  4275e6:	mov    edi,0x54e5225d
  4275eb:	fsub   QWORD PTR [edi+0x2a313d58]
  4275f1:	das    
  4275f2:	dec    ecx
  4275f3:	int    0xc7
  4275f5:	enter  0xc6b,0xdc
  4275f9:	xchg   esi,eax
  4275fa:	test   DWORD PTR [edx+0x2c],0xa9c80f57
  427601:	call   0xa29:0x474a1768
  427608:	mov    esp,0xa70ab34e
  42760d:	data16 ins BYTE PTR es:[edi],dx
  42760f:	lock sahf 
  427611:	fnstenv [ebx-0x5b2ba590]
  427617:	fadd   DWORD PTR [edx]
  427619:	shl    DWORD PTR [esi],0x4d
  42761c:	call   0x49b9c84f
  427621:	mov    edi,0xa732ec01
  427626:	sbb    ah,al
  427628:	pushf  
  427629:	or     ebp,DWORD PTR [edx]
  42762b:	cdq    
  42762c:	mov    ebp,?
  42762e:	pushf  
  42762f:	lahf   
  427630:	add    al,cl
  427632:	push   ss
  427633:	sahf   
  427634:	jo     0x42765f
  427636:	(bad)  
  427637:	outs   dx,BYTE PTR ds:[esi]
  427638:	xor    eax,0x441e26e7
  42763d:	popf   
  42763e:	ret    0x6d6b
  427641:	mov    ah,0x56
  427643:	test   BYTE PTR [ebp+0x60881d17],ah
  427649:	popa   
  42764a:	jmp    0x6c5e:0xf6667834
  427651:	and    esi,ecx
  427653:	jmp    0xc371:0x5738ef20
  42765a:	(bad)  
  42765b:	push   esp
  42765c:	add    DWORD PTR [edx],edx
  42765e:	add    cl,BYTE PTR [eax+0x76be1584]
  427664:	fcom   DWORD PTR [esp+ebp*1-0x70eab265]
  42766b:	ret    
  42766c:	jno    0x4276a5
  42766e:	inc    ebx
  42766f:	repnz pop edx
  427671:	ja     0x42763e
  427673:	aas    
  427674:	pop    eax
  427675:	cdq    
  427676:	mov    esi,0xcc4e2da4
  42767b:	jb     0x42768c
  42767d:	pushf  
  42767e:	scas   al,BYTE PTR es:[edi]
  42767f:	cmp    al,0x9f
  427681:	push   esp
  427682:	xlat   BYTE PTR ds:[ebx]
  427683:	inc    eax
  427684:	adc    eax,0xa9e0e5f4
  427689:	pop    ss
  42768a:	add    bh,dh
  42768c:	call   FWORD PTR [edx+0x2b]
	...
  42769a:	cdq    
  42769b:	enter  0x9ff8,0xf9
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	jecxz  0x427648
  4276a8:	inc    esp
  4276a9:	je     0x427714
  4276ab:	in     al,dx
  4276ac:	add    DWORD PTR [eax],eax
  4276ae:	std    
  4276af:	add    DWORD PTR [eax],eax
  4276b1:	add    BYTE PTR [ecx+ebp*8-0x66ce678d],dh
  4276b8:	out    dx,eax
  4276b9:	sbb    al,0xd6
  4276bb:	push   es
  4276bc:	xchg   edi,eax
  4276bd:	or     bl,bl
  4276bf:	dec    ebp
  4276c0:	cmp    BYTE PTR [edi+0x23e22f1b],cl
  4276c6:	mov    ebx,es
  4276c8:	xor    DWORD PTR [eax-0x27],esi
  4276cb:	in     eax,0x23
  4276cd:	push   es
  4276ce:	out    dx,al
  4276cf:	inc    esi
  4276d0:	lods   eax,DWORD PTR ds:[esi]
  4276d1:	fsub   QWORD PTR [ebx+edi*2+0x22aaf758]
  4276d8:	bound  esi,QWORD PTR [edi]
  4276da:	xor    BYTE PTR [edx-0x35],bl
  4276dd:	jecxz  0x427712
  4276df:	cmp    BYTE PTR [edi],0x53
  4276e2:	fucomp st(5)
  4276e4:	popa   
  4276e5:	cli    
  4276e6:	mov    ebx,0x108ba2e9
  4276eb:	or     BYTE PTR [edi+0x3d535b80],bh
  4276f1:	adc    esp,DWORD PTR [ecx+0x14]
  4276f4:	and    al,0x18
  4276f6:	cs ins BYTE PTR es:[edi],dx
  4276f8:	sbb    DWORD PTR [ebx+0x41],ebx
  4276fb:	cs (bad) 
  4276fd:	rcr    ah,0x9a
  427700:	rol    DWORD PTR [esi+edi*2-0x2ca3f3c0],cl
  427707:	and    esi,DWORD PTR [eax-0x7b88e3d1]
  42770d:	js     0x4276b7
  42770f:	or     edi,DWORD PTR [ebx]
  427711:	lods   eax,DWORD PTR ds:[esi]
  427712:	push   eax
  427713:	stos   BYTE PTR es:[edi],al
  427714:	ins    BYTE PTR es:[edi],dx
  427715:	sub    ebx,eax
  427717:	bound  eax,QWORD PTR [ebp-0x9ef3852]
  42771d:	repz jno 0x427758
  427720:	loopne 0x4276be
  427722:	cmp    eax,DWORD PTR [edx+0x67e2f3eb]
  427728:	sti    
  427729:	sub    esp,DWORD PTR [esi-0x3d69f43d]
  42772f:	or     DWORD PTR [edi],0x54
  427732:	or     al,0x4c
  427734:	in     eax,0x1f
  427736:	adc    edx,DWORD PTR [edx]
  427738:	rol    DWORD PTR [ecx-0x4c],0x14
  42773c:	pop    ebx
  42773d:	mov    WORD PTR [ecx-0x4fcc0421],cs
  427743:	in     eax,0x6b
  427745:	xchg   ebp,eax
  427746:	aas    
  427747:	sbb    ebp,0x19
  42774a:	xchg   ecx,eax
  42774b:	mov    edx,0x3f47d7ce
  427750:	repz push esi
  427752:	push   esp
  427753:	outs   dx,DWORD PTR ds:[esi]
  427754:	push   ss
  427755:	call   0xb541:0xc35ab0a0
  42775c:	mov    eax,ds:0xb334961f
  427761:	push   ss
  427762:	fimul  WORD PTR [ebp-0x6]
  427765:	jne    0x4276f6
  427767:	not    BYTE PTR [eax-0x73]
  42776a:	outs   dx,BYTE PTR ds:[esi]
  42776b:	mov    eax,0x74b8bba2
  427770:	fs jp  0x427728
  427773:	push   es
  427774:	jge    0x427710
  427776:	(bad)  
  427778:	adc    eax,0x724adc4d
  42777d:	pop    ebx
  42777e:	call   0x23e1:0x816dc5f5
  427785:	add    dh,0xee
  427788:	mov    edx,0x1326337d
  42778d:	pavgw  xmm2,xmm3
  427791:	pop    ss
  427792:	jns    0x427809
  427794:	jmp    0x27dfa269
  427799:	dec    edx
  42779a:	aas    
  42779b:	xchg   edi,eax
  42779c:	ins    DWORD PTR es:[edi],dx
  42779d:	test   DWORD PTR [esi+0x7ea4f809],ecx
  4277a3:	sar    BYTE PTR [edx+0x1ba31942],cl
  4277a9:	or     DWORD PTR [edx-0x7a71ab89],esp
  4277af:	ret    0x5cf
  4277b2:	outs   dx,BYTE PTR ds:[esi]
  4277b3:	mov    dl,0x5a
  4277b5:	cmc    
  4277b6:	cmp    BYTE PTR [ecx+0x67],bh
  4277b9:	sbb    DWORD PTR [ebp+0x5ccf2d86],ebx
  4277bf:	xchg   dl,ah
  4277c1:	adc    bl,al
  4277c3:	mov    ebx,0x6c92a95b
  4277c8:	ss jle 0x42780a
  4277cb:	mov    eax,ds:0x62cbac02
  4277d0:	scas   al,BYTE PTR es:[edi]
  4277d1:	push   dx
  4277d3:	pop    es
  4277d4:	cwde   
  4277d5:	dec    ebp
  4277d6:	fs pop si
  4277d9:	mov    bh,0x70
  4277db:	ret    0x280d
  4277de:	icebp  
  4277df:	inc    ebp
  4277e0:	inc    esi
  4277e1:	dec    eax
  4277e2:	or     DWORD PTR [ecx-0x2a],0xcb6c97fe
  4277e9:	gs push ss
  4277eb:	(bad)  
  4277ec:	ds sbb ebx,eax
  4277ef:	and    dh,BYTE PTR [ebp-0x26]
  4277f2:	jbe    0x4277bb
  4277f4:	stc    
  4277f5:	or     al,0x35
  4277f7:	test   eax,0xbc65e89d
  4277fc:	add    ebp,ebx
  4277fe:	push   cs
  4277ff:	cmp    ch,BYTE PTR [edx+0x5376d8bb]
  427805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427806:	mov    dl,ah
  427808:	lods   eax,DWORD PTR ds:[esi]
  427809:	pop    edx
  42780a:	ret    0xe53b
  42780d:	aam    0x2
  42780f:	fisubr DWORD PTR [ecx]
  427811:	ins    BYTE PTR es:[edi],dx
  427812:	cmc    
  427813:	add    al,0x6a
  427815:	jecxz  0x427845
  427817:	popf   
  427818:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42781a:	jmp    0x2eb2:0x3647ea74
  427821:	ss mov bl,0xfb
  427824:	retf   0xd652
  427827:	xor    edi,DWORD PTR [edx]
  427829:	ret    0xf689
  42782c:	mov    DWORD PTR [ebp-0x9],esi
  42782f:	mov    cl,0xf4
  427831:	loope  0x42786b
  427833:	fwait
  427834:	sub    BYTE PTR [esi+0x39],bh
  427837:	fadd   QWORD PTR [ecx+0x21]
  42783a:	xor    ebx,edx
  42783c:	sub    eax,0xd9583a63
  427841:	push   esi
  427842:	cmc    
  427843:	sub    esp,DWORD PTR [edx]
  427845:	inc    eax
  427846:	push   ecx
  427847:	rcl    BYTE PTR [edx],1
  427849:	mov    DWORD PTR [esi+0x26],eax
  42784c:	repnz shr DWORD PTR ds:0x737ea44,1
  427853:	enter  0x189a,0x9d
  427857:	sub    al,0x2a
  427859:	enter  0x30c7,0x3d
  42785d:	in     al,0x36
  42785f:	jae    0x42789f
  427861:	fdiv   QWORD PTR [edi-0x1249c61]
  427867:	aam    0x6c
  427869:	sub    BYTE PTR [eax+ebp*1-0x71],dh
  42786d:	sbb    ch,BYTE PTR [edx]
  42786f:	and    eax,DWORD PTR [edi+0x40]
  427872:	ret    
  427873:	cmp    ecx,eax
  427875:	cmp    ecx,DWORD PTR [esi]
  427877:	pushf  
  427878:	mov    ah,0xed
  42787a:	mov    al,ds:0x3839acdb
  42787f:	jne    0x427836
  427881:	add    al,ch
  427883:	in     al,0xd2
  427885:	sub    al,0x1f
  427887:	mov    gs,edx
  427889:	add    esi,eax
  42788b:	push   ss
  42788c:	cmp    BYTE PTR [ebx-0x5c64aeff],cl
  427892:	jecxz  0x42786b
  427894:	mov    bl,0x12
  427896:	repz rcl DWORD PTR [esi-0x4541612],cl
  42789d:	mov    cl,0x2f
  42789f:	cli    
  4278a0:	les    edi,FWORD PTR [esi+0x3723ba09]
  4278a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278a7:	inc    esp
  4278a8:	sub    bl,BYTE PTR gs:[esi-0xe]
  4278ac:	mov    edx,0x736a
	...
  4278b9:	add    BYTE PTR [ecx+0xa],bh
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	ret    
  4278c7:	cmp    ah,BYTE PTR [esi+0x1ee66d7]
  4278cd:	add    ch,bh
  4278cf:	add    DWORD PTR [eax],eax
  4278d1:	add    BYTE PTR [esi],bh
  4278d3:	scas   eax,DWORD PTR es:[edi]
  4278d4:	or     esp,DWORD PTR [esi+0x295586e9]
  4278da:	daa    
  4278db:	fild   WORD PTR [edx-0x46bd687d]
  4278e1:	pop    esi
  4278e2:	xchg   esi,eax
  4278e3:	mov    esp,0xffdb86af
  4278e8:	test   DWORD PTR [ebx+eiz*4],eax
  4278eb:	imul   BYTE PTR [edx]
  4278ed:	inc    ecx
  4278ee:	call   0x9f55:0xc47c45c9
  4278f5:	mov    bh,0x14
  4278f7:	ins    BYTE PTR es:[edi],dx
  4278f8:	and    dh,BYTE PTR [edx+0x21a228b0]
  4278fe:	xchg   ecx,eax
  4278ff:	out    0xd6,al
  427901:	int3   
  427902:	into   
  427903:	sub    esp,DWORD PTR [ebx-0x3e26922e]
  427909:	jae    0x42795d
  42790b:	daa    
  42790c:	jo     0x427959
  42790e:	dec    esp
  42790f:	jo     0x427985
  427911:	inc    ecx
  427912:	or     al,0xb8
  427914:	jg     0x427992
  427916:	mov    esi,0x2aab7abe
  42791b:	lock sub bl,cl
  42791e:	mov    ds:0x70cef1b5,al
  427923:	(bad)  
  427924:	and    al,0xd0
  427926:	mov    ecx,0x87f4242f
  42792b:	push   ds
  42792c:	cmp    DWORD PTR [ecx],eax
  42792e:	xchg   ebx,eax
  42792f:	je     0x427994
  427931:	arpl   WORD PTR [ebx+eiz*4+0x4f],sp
  427935:	cli    
  427936:	std    
  427937:	ss sbb esp,edx
  42793a:	pusha  
  42793b:	mov    ecx,0x9b394c3d
  427940:	mov    WORD PTR [ecx+0x70],es
  427943:	dec    DWORD PTR [esi]
  427945:	push   0xffffffca
  427947:	push   esi
  427948:	cmp    edx,DWORD PTR [ecx+ebx*1+0x5cd74bf6]
  42794f:	pop    es
  427950:	pop    ebp
  427951:	ins    DWORD PTR es:[edi],dx
  427952:	mov    dl,0x42
  427954:	push   0xfffffff2
  427956:	push   ebp
  427957:	pop    eax
  427958:	sar    ecx,cl
  42795a:	nop
  42795b:	xchg   esp,eax
  42795c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42795d:	fsub   st(6),st
  42795f:	aad    0x60
  427961:	or     al,0xf9
  427963:	nop
  427964:	push   ecx
  427965:	repz dec ebp
  427967:	(bad)  
  427968:	int    0x12
  42796a:	jne    0x427904
  42796c:	sbb    edi,DWORD PTR [edx-0x7f]
  42796f:	loope  0x42793b
  427971:	aam    0xe
  427973:	push   edx
  427974:	pop    ebx
  427975:	in     eax,dx
  427976:	out    0x6,al
  427978:	dec    edx
  427979:	dec    esi
  42797a:	(bad)  
  42797b:	push   0x13ff04ba
  427980:	or     al,0x84
  427982:	(bad)  
  427984:	xor    DWORD PTR [edi+0x779255ea],ebp
  42798a:	mov    eax,DWORD PTR [edx-0x2a]
  42798d:	push   0x30dac12a
  427992:	cmp    edx,edx
  427994:	ror    BYTE PTR [ebp+0x39f517de],cl
  42799a:	cdq    
  42799b:	mov    ebp,0x13f99bd6
  4279a0:	cmp    al,0xee
  4279a2:	mov    al,ds:0x7eca7097
  4279a7:	mov    al,ds:0x2d1bf27f
  4279ac:	inc    edx
  4279ad:	ror    edi,cl
  4279af:	das    
  4279b0:	dec    ecx
  4279b1:	xchg   ecx,eax
  4279b2:	mov    eax,ds:0xfc91f78b
  4279b7:	sub    al,0x95
  4279b9:	pop    es
  4279ba:	pusha  
  4279bb:	stos   BYTE PTR es:[edi],al
  4279bc:	sub    eax,0x90a18f7a
  4279c1:	push   ds
  4279c2:	loopne 0x42796d
  4279c4:	pop    edi
  4279c5:	cmp    al,0x4f
  4279c7:	add    DWORD PTR [esi-0x7fc18da5],edx
  4279cd:	adc    bl,cl
  4279cf:	test   eax,0x91479e7f
  4279d4:	xor    BYTE PTR [edi+0x1d],dh
  4279d7:	mov    bh,0xad
  4279d9:	mov    ds:0x72f3ec1b,al
  4279de:	mov    edx,0xe039dbce
  4279e3:	or     esi,DWORD PTR [edi]
  4279e5:	xor    al,0xda
  4279e7:	cmp    DWORD PTR [ebp+0x54],eax
  4279ea:	add    BYTE PTR [esi],0x8f
  4279ed:	pop    edi
  4279ee:	xor    BYTE PTR [edx+0xea61a12],dl
  4279f4:	jmp    0x427a69
  4279f6:	fst    DWORD PTR [edx+0x3c43a4d]
  4279fc:	leave  
  4279fd:	int    0x8c
  4279ff:	xchg   ebx,eax
  427a00:	je     0x427a45
  427a02:	jb     0x4279f1
  427a04:	and    DWORD PTR [ebx],0xc79bb1d1
  427a0a:	ret    
  427a0b:	test   al,0x1
  427a0d:	into   
  427a0e:	(bad)  
  427a0f:	mov    esp,DWORD PTR [ebp+0x38c25c9]
  427a15:	cli    
  427a16:	or     eax,DWORD PTR [edx+0x74]
  427a19:	and    cl,ah
  427a1b:	sub    edi,ebp
  427a1d:	fwait
  427a1e:	lds    ecx,FWORD PTR [eax-0x98b37aa]
  427a24:	cmc    
  427a25:	mov    edi,0x4132d190
  427a2a:	jmp    0xe6773cab
  427a2f:	pop    ebx
  427a30:	aam    0xa4
  427a32:	pop    ecx
  427a33:	inc    eax
  427a34:	mov    al,ds:0x6e2a8f8c
  427a39:	scas   al,BYTE PTR es:[edi]
  427a3a:	lock jp 0x427a86
  427a3d:	pop    esi
  427a3e:	pop    esi
  427a3f:	xor    eax,0xc920b73a
  427a44:	xchg   ebx,eax
  427a45:	push   cs
  427a46:	xchg   ebp,eax
  427a47:	and    ah,BYTE PTR [ecx]
  427a49:	(bad)  
  427a4a:	lea    edx,[ecx+0x30]
  427a4d:	adc    eax,0xd5a14079
  427a52:	inc    ebp
  427a53:	lea    esp,[edi-0x8]
  427a56:	jmp    0x23f8:0xdd354af7
  427a5d:	mov    esi,0x7d45d258
  427a62:	sub    cl,ah
  427a64:	xlat   BYTE PTR ds:[ebx]
  427a65:	mov    al,0xee
  427a67:	int3   
  427a68:	adc    DWORD PTR [ecx-0x20],edi
  427a6b:	and    ecx,DWORD PTR [edi+0x43]
  427a6e:	out    dx,al
  427a6f:	jle    0x427aaf
  427a71:	mov    ebp,0xb6736790
  427a76:	add    dl,BYTE PTR [edi+0x4e371399]
  427a7c:	mov    WORD PTR [edx+0x5c2d7f68],es
  427a82:	clc    
  427a83:	fucomip st,st(5)
  427a85:	rcr    BYTE PTR [edx],0xdc
  427a88:	dec    ecx
  427a89:	mov    ch,0xbc
  427a8b:	out    0xd2,eax
  427a8d:	mov    ecx,0x2fdd462b
  427a92:	frstor [esi-0x56eb4db0]
  427a98:	in     eax,dx
  427a99:	(bad)  [ecx-0x1cbe2558]
  427a9f:	icebp  
  427aa0:	jns    0x427ab1
  427aa2:	dec    edx
  427aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427aa4:	xor    al,0xdc
  427aa6:	mov    ch,BYTE PTR [ecx]
  427aa8:	jecxz  0x427a46
  427aaa:	popf   
  427aab:	xchg   ebx,eax
  427aac:	xchg   DWORD PTR [edi+0x47],edx
  427aaf:	(bad)  [esi+0xb]
  427ab2:	mov    WORD PTR [esi-0x7a6d40e9],ss
  427ab8:	clc    
  427ab9:	cmp    ecx,edx
  427abb:	adc    esp,DWORD PTR ds:0x9b055c88
  427ac1:	pusha  
  427ac2:	sar    DWORD PTR [ebx+edi*2],0x44
  427ac6:	(bad)
  427ac9:	test   DWORD PTR [edx+0x1574ab44],edx
	...
  427ad7:	add    BYTE PTR [eax],al
  427ad9:	add    BYTE PTR [ecx+0x3],bl
  427adc:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  427ae1:	pop    ds
  427ae2:	arpl   WORD PTR [edi-0x69b4b294],di
  427ae8:	mov    al,0x8d
  427aea:	arpl   ax,si
  427aec:	add    DWORD PTR [eax],eax
  427aee:	std    
  427aef:	add    DWORD PTR [eax],eax
  427af1:	add    BYTE PTR [ecx*1-0x18e34144],bh
  427af8:	retf   0x6084
  427afb:	sti    
  427afc:	jp     0x427b7a
  427afe:	int3   
  427aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b00:	push   es
  427b01:	loope  0x427b6f
  427b03:	mov    ds:0xefc2dc47,eax
  427b08:	call   0x74c2:0xda9a244
  427b0f:	mov    edx,0xf5adb798
  427b14:	push   cs
  427b15:	xchg   DWORD PTR [edi+ebp*2],esi
  427b18:	pop    eax
  427b19:	outs   dx,BYTE PTR ds:[esi]
  427b1a:	xchg   BYTE PTR [edx+0x5bde5b10],cl
  427b20:	fadd   st(6),st
  427b22:	dec    esp
  427b23:	fbld   TBYTE PTR [ebx-0x4e]
  427b26:	fimul  DWORD PTR [eax]
  427b28:	ret    0xb3d2
  427b2b:	cmp    eax,0xf30ae991
  427b30:	jo     0x427b7f
  427b32:	or     ch,BYTE PTR [esp+ebp*1-0x751341ad]
  427b39:	inc    esi
  427b3a:	aad    0x1e
  427b3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b3d:	daa    
  427b3e:	es or  esp,0xb1cb5935
  427b45:	repz and eax,0xb652ee40
  427b4b:	jl     0x427ad0
  427b4d:	sub    ah,BYTE PTR [edx-0x28e8779f]
  427b53:	les    esi,FWORD PTR [ecx-0xd]
  427b56:	loop   0x427b68
  427b58:	leave  
  427b59:	cmp    BYTE PTR [edx],0xcf
  427b5c:	fsub   DWORD PTR [ebx-0x32e18b72]
  427b62:	es push ecx
  427b64:	jecxz  0x427bcd
  427b66:	push   ecx
  427b68:	in     al,dx
  427b69:	mov    ebp,0xd68496e
  427b6e:	sbb    edi,DWORD PTR [eax]
  427b70:	in     al,dx
  427b71:	iret   
  427b72:	cwde   
  427b73:	push   ebx
  427b74:	and    BYTE PTR [esi-0x6c],al
  427b77:	cmp    al,0x49
  427b79:	or     al,0x35
  427b7b:	mov    eax,DWORD PTR [ecx]
  427b7d:	aad    0x5e
  427b7f:	arpl   WORD PTR [ebp+0x7f1d006c],sp
  427b85:	sbb    eax,0xc478c94f
  427b8a:	mov    ebp,0x27b26d8e
  427b8f:	xor    eax,0x4d22e2c6
  427b94:	jp     0x427ba7
  427b96:	cmp    al,0xb7
  427b98:	and    ch,bh
  427b9a:	(bad)  
  427b9b:	out    dx,eax
  427b9c:	add    bh,dh
  427b9e:	rcl    DWORD PTR [edi+esi*1],1
  427ba1:	scas   al,BYTE PTR es:[edi]
  427ba2:	jno    0x427bb3
  427ba4:	cmp    dh,BYTE PTR [edi+0x15f05eb9]
  427baa:	shr    BYTE PTR [edx+0x2b3aa99f],cl
  427bb0:	or     BYTE PTR [ebx+edi*1-0x32],ah
  427bb4:	or     BYTE PTR [ecx-0x37903423],0xbd
  427bbb:	add    al,BYTE PTR [edx-0x370d828a]
  427bc1:	cmc    
  427bc2:	mov    dl,0xa8
  427bc4:	jge    0x427b6b
  427bc6:	sub    al,0xc9
  427bc8:	adc    BYTE PTR [eax+edx*2],0xfe
  427bcc:	mov    ch,0xe8
  427bce:	fdiv   QWORD PTR [edi+0x79]
  427bd1:	push   eax
  427bd2:	cs fwait
  427bd4:	scas   al,BYTE PTR es:[edi]
  427bd5:	(bad)  
  427bd6:	sbb    eax,0x93371658
  427bdb:	std    
  427bdc:	or     al,0x88
  427bde:	and    al,0x53
  427be0:	cmp    ch,BYTE PTR [ebp+0x1bb81cf4]
  427be6:	jmp    DWORD PTR [ebx]
  427be8:	ret    
  427be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bea:	stc    
  427beb:	imul   edx,DWORD PTR ds:0xf2ac839d,0x3a
  427bf2:	repz xchg ebp,eax
  427bf4:	ror    BYTE PTR [edi],1
  427bf6:	scas   al,BYTE PTR es:[edi]
  427bf7:	daa    
  427bf8:	imul   DWORD PTR [eax+0xe]
  427bfb:	mov    ebx,0xce2baa99
  427c00:	cmc    
  427c01:	push   ss
  427c02:	sub    ch,BYTE PTR [esi]
  427c04:	jne    0x427c1d
  427c06:	pop    ss
  427c07:	icebp  
  427c08:	outs   dx,BYTE PTR ds:[esi]
  427c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c0a:	xchg   DWORD PTR [ebx],esp
  427c0c:	jl     0x427c0d
  427c0e:	push   edi
  427c0f:	mov    eax,0x8707f8d5
  427c14:	sahf   
  427c15:	cmp    dl,al
  427c17:	(bad)  
  427c18:	pop    edx
  427c19:	loope  0x427c4e
  427c1b:	inc    edx
  427c1c:	jmp    0x427c03
  427c1e:	ret    
  427c1f:	bsf    ebp,eax
  427c22:	pop    esp
  427c23:	(bad)  
  427c24:	sti    
  427c25:	mov    dh,0x67
  427c27:	mov    ds:0xc309a2eb,eax
  427c2c:	pop    ss
  427c2d:	jg     0x427c40
  427c2f:	mov    ah,0x4c
  427c31:	pop    esp
  427c32:	mov    edx,0x889b2484
  427c37:	add    BYTE PTR [esi-0x6],0x3e
  427c3b:	pop    es
  427c3c:	adc    DWORD PTR [ebp-0xc],edx
  427c3f:	xor    ecx,DWORD PTR [edx-0x3273c42d]
  427c45:	mov    eax,ds:0x88f83e71
  427c4a:	jmp    0xf24b:0x33bdfaba
  427c51:	push   ebx
  427c52:	out    dx,al
  427c53:	adc    ebx,DWORD PTR [ecx-0x22]
  427c56:	sbb    DWORD PTR [eax],0xb7633a19
  427c5c:	add    al,0x27
  427c5e:	xor    ecx,ebp
  427c60:	jbe    0x427cc7
  427c62:	arpl   WORD PTR [edx],sp
  427c64:	shr    DWORD PTR [ebx+edi*4-0x490cd67e],0x1b
  427c6c:	ss or  al,0x2a
  427c6f:	and    bh,BYTE PTR [edx+0x5d]
  427c72:	sbb    eax,0x8c9805e5
  427c77:	stos   DWORD PTR es:[edi],eax
  427c78:	loop   0x427ca7
  427c7a:	push   edi
  427c7b:	ja     0x427c1a
  427c7d:	(bad)  
  427c7e:	cld    
  427c7f:	xchg   BYTE PTR [ebx-0x77],cl
  427c82:	cmp    dl,BYTE PTR [ecx+0x8]
  427c85:	(bad)  
  427c86:	cmp    BYTE PTR [ecx-0x4a0d97a9],cl
  427c8c:	f2xm1  
  427c8e:	and    al,0x8b
  427c90:	in     al,dx
  427c91:	add    bl,BYTE PTR [ecx-0x403e510d]
  427c97:	and    dh,cl
  427c99:	aaa    
  427c9a:	mov    bl,0x9f
  427c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c9d:	pop    ebp
  427c9e:	dec    ebp
  427c9f:	push   0x3fef5ec7
  427ca4:	(bad)  
  427ca5:	sbb    eax,0xa621c9aa
  427caa:	fprem1 
  427cac:	imul   ebx,DWORD PTR [eax-0x76],0xffffffb1
  427cb0:	pusha  
  427cb1:	push   ebx
  427cb2:	scas   eax,DWORD PTR es:[edi]
  427cb3:	stos   BYTE PTR es:[edi],al
  427cb4:	xor    ecx,DWORD PTR [edi-0x56]
  427cb7:	mov    DWORD PTR [eax+0x6fd9ddf6],edi
  427cbd:	sar    DWORD PTR [esp],cl
  427cc0:	inc    edx
  427cc1:	in     eax,dx
  427cc2:	aaa    
  427cc3:	inc    eax
  427cc4:	js     0x427caa
  427cc6:	pop    DWORD PTR [ebx]
  427cc8:	mov    dl,BYTE PTR [esi-0x4b932e1d]
  427cce:	std    
  427ccf:	mov    ch,0x27
  427cd1:	mov    al,BYTE PTR [ecx+ebp*8+0x55]
  427cd5:	or     al,bh
  427cd7:	xlat   BYTE PTR ds:[ebx]
  427cd8:	pop    ecx
  427cd9:	sbb    dl,cl
  427cdb:	mov    esi,0xf191f91
  427ce0:	inc    edi
  427ce1:	and    al,0x8a
  427ce3:	sub    esi,esi
  427ce5:	sbb    esi,edx
  427ce7:	push   esi
  427ce8:	outs   dx,DWORD PTR ds:[esi]
  427ce9:	test   BYTE PTR [edi-0x2b],0x3f
  427ced:	retf   
  427cee:	push   es
	...
  427cf7:	add    BYTE PTR [eax],al
  427cf9:	add    BYTE PTR [ebx],bl
  427cfb:	daa    
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	add    DWORD PTR [esi-0xd9f80d1],edx
  427d0c:	add    DWORD PTR [eax],eax
  427d0e:	std    
  427d0f:	add    DWORD PTR [eax],eax
  427d11:	add    BYTE PTR [eax+0x33ec87c0],al
  427d17:	dec    esi
  427d18:	cmp    DWORD PTR [edx+esi*2],eax
  427d1b:	aam    0x6a
  427d1d:	lea    ecx,[ebp+0x7bdb79aa]
  427d23:	pushf  
  427d24:	or     BYTE PTR [ecx],ah
  427d26:	(bad)  
  427d27:	outs   dx,BYTE PTR ds:[esi]
  427d28:	les    ebx,FWORD PTR [esi+0x7938be99]
  427d2e:	xchg   BYTE PTR [edi],cl
  427d30:	out    0xd9,al
  427d32:	pop    ds
  427d33:	xor    DWORD PTR [edx+0x7c],ecx
  427d36:	add    DWORD PTR [eax-0x57],esp
  427d39:	loop   0x427cf8
  427d3b:	mov    al,0xbb
  427d3d:	push   ecx
  427d3e:	pop    es
  427d3f:	sti    
  427d40:	push   edx
  427d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d42:	xchg   ebp,eax
  427d43:	xor    BYTE PTR [esi+eax*8],dh
  427d46:	sub    DWORD PTR [ebp-0x46b3b669],ebp
  427d4c:	popf   
  427d4d:	push   0x1fe6f711
  427d52:	bound  ecx,QWORD PTR [ebx]
  427d54:	dec    esp
  427d55:	push   ss
  427d56:	test   eax,0x88d6ce44
  427d5b:	mov    esi,0x858d711c
  427d60:	rcr    bh,cl
  427d62:	into   
  427d63:	xchg   esp,eax
  427d64:	cs aas 
  427d66:	fist   WORD PTR [ebx*2+0x414a2947]
  427d6d:	pop    ebp
  427d6e:	jge    0x427de9
  427d70:	leave  
  427d71:	(bad)  
  427d72:	mov    edi,0x560e0b5b
  427d77:	xchg   esi,eax
  427d78:	jecxz  0x427d95
  427d7a:	clc    
  427d7b:	cwde   
  427d7c:	push   edi
  427d7d:	mov    al,0x62
  427d7f:	fsubr  DWORD PTR [edi-0x4a4e1204]
  427d85:	inc    esp
  427d86:	push   ss
  427d87:	pop    esp
  427d88:	jne    0x427dbd
  427d8a:	stc    
  427d8b:	cs (bad) 
  427d8d:	pop    ebx
  427d8e:	sti    
  427d8f:	xor    ch,BYTE PTR [ecx]
  427d91:	add    BYTE PTR [edi-0x2854381e],dh
  427d97:	sbb    eax,0x40607b5b
  427d9c:	mov    eax,ds:0x5964f36c
  427da1:	sub    ch,BYTE PTR [edx+0x2e]
  427da4:	stc    
  427da5:	sub    eax,0x4ac37f35
  427daa:	in     eax,dx
  427dab:	mov    ds:0xa7151020,al
  427db0:	xchg   esp,eax
  427db1:	fcomp  DWORD PTR [ebx]
  427db3:	mov    ebp,0x14fb879c
  427db8:	ds inc ebx
  427dba:	adc    eax,0xf3ac2550
  427dbf:	push   ebp
  427dc0:	(bad)  
  427dc1:	xor    al,0xb8
  427dc3:	pushf  
  427dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dc5:	jmp    0x50947075
  427dca:	shl    BYTE PTR [esi-0x7cf55e87],0x44
  427dd1:	scas   eax,DWORD PTR es:[edi]
  427dd2:	rcl    BYTE PTR [ecx+ebp*2],cl
  427dd5:	or     eax,0x45f18797
  427dda:	add    edx,DWORD PTR [edi+ebp*8+0x29ff3ad8]
  427de1:	dec    edx
  427de2:	call   0xe037:0x5871870f
  427de9:	leave  
  427dea:	dec    edi
  427deb:	xor    ch,al
  427ded:	pop    es
  427dee:	inc    ecx
  427def:	jg     0x427df4
  427df1:	adc    DWORD PTR [ecx-0x6df0e95b],ebp
  427df7:	dec    esp
  427df8:	enter  0x6d13,0xaa
  427dfc:	fild   QWORD PTR [ecx+0x21]
  427dff:	inc    esi
  427e00:	fcmovb st,st(1)
  427e02:	mov    eax,0xd6e944eb
  427e07:	outs   dx,BYTE PTR ds:[esi]
  427e08:	sahf   
  427e09:	das    
  427e0a:	jp     0x427e3b
  427e0c:	sahf   
  427e0d:	mov    ds:0x76117fd6,eax
  427e12:	xlat   BYTE PTR ds:[ebx]
  427e13:	test   eax,ecx
  427e15:	mov    eax,0x42015c30
  427e1a:	dec    ebx
  427e1b:	jmp    0x959a:0x4a1eba63
  427e22:	adc    DWORD PTR [ebp*1+0x576176d6],esp
  427e29:	fcomi  st,st(4)
  427e2b:	rol    BYTE PTR [ebx-0x16],0x28
  427e2f:	ja     0x427e15
  427e31:	jmp    0x427e22
  427e33:	cmp    al,0x93
  427e35:	std    
  427e36:	shr    bl,cl
  427e38:	or     edx,esi
  427e3a:	ins    DWORD PTR es:[edi],dx
  427e3b:	add    DWORD PTR [edi],0xffffff92
  427e3e:	inc    esi
  427e3f:	mov    fs,ecx
  427e41:	arpl   WORD PTR [ebx+0x39a26c92],cx
  427e47:	lods   eax,DWORD PTR ds:[esi]
  427e48:	adc    DWORD PTR ds:0xc95d825e,edi
  427e4e:	popf   
  427e4f:	jmp    0x71ac:0x6a7dd290
  427e56:	push   ecx
  427e57:	inc    eax
  427e58:	dec    esp
  427e59:	out    0xe8,al
  427e5b:	dec    edx
  427e5c:	in     eax,0x71
  427e5e:	xchg   BYTE PTR [ebx],ah
  427e60:	sti    
  427e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e62:	push   es
  427e63:	cs inc edx
  427e65:	ins    DWORD PTR es:[edi],dx
  427e66:	lea    edx,[edx-0x34057705]
  427e6c:	repz and al,0x4a
  427e6f:	les    eax,FWORD PTR [eax]
  427e71:	mov    eax,ds:0x87525aa7
  427e76:	add    al,0x3c
  427e78:	xlat   BYTE PTR ds:[ebx]
  427e79:	push   ss
  427e7a:	sub    DWORD PTR [eax-0xa6193f3],ecx
  427e80:	pop    esi
  427e81:	xor    BYTE PTR [esi],0x33
  427e84:	leave  
  427e85:	repz loop 0x427e5a
  427e88:	dec    esp
  427e89:	scas   al,BYTE PTR es:[edi]
  427e8a:	dec    eax
  427e8b:	call   DWORD PTR [eax-0x37ef2a1c]
  427e91:	push   eax
  427e92:	cli    
  427e93:	dec    DWORD PTR [edi-0x118f25ec]
  427e99:	ret    
  427e9a:	mov    ecx,0x1cdcd517
  427e9f:	jbe    0x427eb9
  427ea1:	cdq    
  427ea2:	pop    ebx
  427ea3:	ret    
  427ea4:	mov    esp,0xd6195d15
  427ea9:	add    al,BYTE PTR [edx+0x66a137f2]
  427eaf:	sbb    eax,0xcfba63af
  427eb4:	and    al,0xd3
  427eb6:	nop
  427eb7:	adc    cl,BYTE PTR [ecx+0xd5adcfe]
  427ebd:	pop    esp
  427ebe:	repnz xchg ecx,eax
  427ec0:	xchg   ebp,eax
  427ec1:	imul   ebp,DWORD PTR [ecx+0x7823c96f],0x5f
  427ec8:	xchg   ebx,eax
  427ec9:	ret    0x3d0b
  427ecc:	mov    dh,0xa8
  427ece:	fcom   DWORD PTR [ebx-0x28cb6d51]
  427ed4:	(bad)  
  427ed5:	fild   DWORD PTR [ebx+0x69]
  427ed8:	adc    ebp,DWORD PTR [esi+eax*1-0xa]
  427edc:	jnp    0x427ebc
  427ede:	cmp    al,0xaf
  427ee0:	daa    
  427ee1:	xor    al,0x74
  427ee3:	push   esp
  427ee4:	js     0x427f48
  427ee6:	push   esp
  427ee7:	mov    bl,0xb5
  427ee9:	fst    DWORD PTR [esi]
  427eeb:	sar    DWORD PTR [eax-0x2],0x42
  427eef:	xor    DWORD PTR [edx-0x7df79c16],esp
  427ef5:	mov    ebx,0x3b73e649
  427efa:	xchg   esi,eax
  427efb:	dec    esi
  427efc:	xor    BYTE PTR [edi],0x3d
  427eff:	xchg   ebp,eax
  427f00:	mov    BYTE PTR cs:[ebx-0x61],bh
  427f04:	xor    eax,0xc4297ba6
  427f09:	add    bl,BYTE PTR [ecx-0x23d12976]
	...
  427f17:	add    BYTE PTR [eax],al
  427f19:	add    BYTE PTR [edx-0x107ddbc],bl
  427f1f:	(bad)  
  427f20:	fisub  DWORD PTR [esi-0x37]
  427f23:	and    dh,BYTE PTR [ecx+edx*1+0x7a]
  427f27:	sbb    eax,0xf45d78c9
  427f2c:	add    DWORD PTR [eax],eax
  427f2e:	std    
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    BYTE PTR [edx+edx*4],cl
  427f34:	fist   WORD PTR [esi+0x7f7dc22d]
  427f3a:	push   cs
  427f3b:	jecxz  0x427f83
  427f3d:	cmp    esi,esp
  427f3f:	jecxz  0x427f46
  427f41:	retf   
  427f42:	sbb    BYTE PTR [ecx],0xa3
  427f45:	enter  0x7819,0xd8
  427f49:	dec    BYTE PTR [esi]
  427f4b:	dec    eax
  427f4c:	add    DWORD PTR [ebp+0x7fdd40d3],eax
  427f52:	sub    al,0x6f
  427f54:	sbb    al,0x32
  427f56:	add    bl,BYTE PTR [esi]
  427f58:	pop    ss
  427f59:	fsubr  DWORD PTR ss:[ecx+ebp*1-0x4cfbe9cb]
  427f61:	and    BYTE PTR [eax+eax*1+0x11],bh
  427f65:	mov    esp,0x2fe12bc2
  427f6a:	push   ds
  427f6b:	xchg   ebx,eax
  427f6c:	dec    ebx
  427f6d:	add    ebx,ebp
  427f6f:	mov    cl,0xac
  427f71:	clc    
  427f72:	sbb    DWORD PTR [edi+esi*8],0x20
  427f76:	pop    es
  427f77:	arpl   WORD PTR [edx+edx*8],cx
  427f7a:	and    edi,DWORD PTR [edi+0x24b2ecc3]
  427f80:	ret    0x7a90
  427f83:	cmp    eax,0x8480bcb6
  427f88:	inc    edx
  427f89:	aad    0x71
  427f8b:	cmp    DWORD PTR [edi+esi*1-0x68],ecx
  427f8f:	lds    eax,FWORD PTR [ebp-0x2]
  427f92:	push   cs
  427f93:	fisubr DWORD PTR [ecx]
  427f95:	jp     0x427f77
  427f97:	loop   0x427fc4
  427f99:	push   eax
  427f9a:	inc    esi
  427f9b:	mov    al,ds:0xd1eeaf3
  427fa0:	jp     0x427fce
  427fa2:	jno    0x427f4d
  427fa4:	mov    ds:0xe048f0f7,al
  427fa9:	adc    ecx,DWORD PTR [edx+edi*8]
  427fac:	inc    esi
  427fad:	clc    
  427fae:	sbb    eax,0x707166ab
  427fb3:	fmul   DWORD PTR [eax-0x55]
  427fb6:	scas   al,BYTE PTR es:[edi]
  427fb7:	les    esi,FWORD PTR [esi-0x498418be]
  427fbd:	pop    ss
  427fbe:	jno    0x427f91
  427fc0:	lahf   
  427fc1:	popa   
  427fc2:	inc    esp
  427fc3:	fmul   st(6),st
  427fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fc6:	mov    BYTE PTR [ecx-0x4f],dh
  427fc9:	push   ebp
  427fca:	xchg   edi,eax
  427fcb:	push   ds
  427fcc:	test   DWORD PTR [eax+eiz*8+0x17f2ebf3],ebx
  427fd3:	jbe    0x427fd3
  427fd5:	or     eax,0x6a96b75f
  427fda:	mov    eax,ds:0xba9e7144
  427fdf:	xor    BYTE PTR [edi],bh
  427fe1:	xchg   esp,eax
  427fe2:	xchg   edx,eax
  427fe3:	sahf   
  427fe4:	in     al,0x55
  427fe6:	inc    ecx
  427fe7:	jmp    0x428026
  427fe9:	ins    DWORD PTR es:[edi],dx
  427fea:	aam    0xb4
  427fec:	jne    0x428035
  427fee:	call   0x729d:0x21dd5bb5
  427ff5:	jecxz  0x428020
  427ff7:	in     al,0xc9
  427ff9:	push   ebx
  427ffa:	iret   
  427ffb:	in     eax,0xfd
  427ffd:	mov    al,0x44
  427fff:	push   ds
  428000:	push   esi
  428001:	fs push 0xfffffff5
  428004:	xor    esi,esi
  428006:	ja     0x427ffd
  428008:	mov    ch,0x7d
  42800a:	or     eax,0xcf47d1bd
  42800f:	xchg   esi,eax
  428010:	inc    ebx
  428011:	std    
  428012:	xchg   esp,eax
  428013:	cmp    BYTE PTR [edi+0x149deb70],bh
  428019:	stos   BYTE PTR es:[edi],al
  42801a:	in     eax,dx
  42801b:	outs   dx,BYTE PTR ds:[esi]
  42801c:	stc    
  42801d:	jl     0x428069
  42801f:	shr    DWORD PTR [esp+eax*4+0x6],1
  428023:	sub    BYTE PTR [ecx+edi*8-0x7edb1841],0x33
  42802b:	lahf   
  42802c:	push   ds
  42802d:	mov    ebp,0x5b3fab73
  428032:	dec    ebx
  428033:	inc    edi
  428034:	or     bh,bl
  428036:	les    esp,FWORD PTR [esi+esi*4+0x4a8566f3]
  42803d:	jne    0x42801f
  42803f:	mov    bl,0xf2
  428041:	mov    ebp,0x150fe1ba
  428046:	aam    0x96
  428048:	sahf   
  428049:	inc    eax
  42804a:	jmp    0xfcecd2e
  42804f:	paddsw mm1,QWORD PTR ds:0x3c8266d8
  428056:	cwde   
  428057:	scas   al,BYTE PTR es:[edi]
  428058:	push   esp
  428059:	sbb    BYTE PTR [edx+0xc],cl
  42805c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42805d:	xchg   ebp,eax
  42805e:	mov    al,0xb3
  428060:	push   es
  428061:	retf   
  428062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428063:	out    dx,al
  428064:	mov    al,0x53
  428066:	pop    ss
  428067:	data16 lods al,BYTE PTR ds:[esi]
  428069:	cmp    edx,esi
  42806b:	push   ebp
  42806c:	jno    0x4280a9
  42806e:	mov    al,0x71
  428070:	cmp    ch,BYTE PTR [eax+0x411ca74e]
  428076:	dec    ebx
  428077:	call   DWORD PTR [edi]
  428079:	ins    BYTE PTR es:[edi],dx
  42807a:	fst    DWORD PTR [eax-0x7352b792]
  428080:	xchg   ecx,eax
  428081:	out    dx,al
  428082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428083:	inc    esi
  428084:	addr16 clc 
  428086:	mov    bh,0xb4
  428088:	cmp    BYTE PTR [esi],ah
  42808a:	jp     0x428101
  42808c:	ret    0xdef4
  42808f:	rcl    DWORD PTR [edi+0x3b],cl
  428092:	enter  0x6fea,0xd4
  428096:	mov    BYTE PTR [ebp-0x21],bh
  428099:	es adc eax,esp
  42809c:	test   DWORD PTR [ebx-0x7a2d934f],ebp
  4280a2:	cmp    DWORD PTR [ebx],edx
  4280a4:	mov    ch,0x9c
  4280a6:	pop    ecx
  4280a7:	jl     0x42803e
  4280a9:	aad    0x76
  4280ab:	xchg   esp,eax
  4280ac:	push   es
  4280ad:	cdq    
  4280ae:	pop    es
  4280af:	add    DWORD PTR [edx+edx*2],eax
  4280b2:	lds    edi,FWORD PTR [eax+0x44]
  4280b5:	jl     0x42812d
  4280b7:	fcom   DWORD PTR [eax-0x13e5f71a]
  4280bd:	or     cl,bl
  4280bf:	adc    bh,ch
  4280c1:	popa   
  4280c2:	fisub  WORD PTR [eax+0x21]
  4280c5:	add    BYTE PTR [esi+eax*8+0x62609559],bh
  4280cc:	(bad)  
  4280cd:	test   BYTE PTR [ebp+0x52],bh
  4280d0:	daa    
  4280d1:	cmovle ebp,DWORD PTR [ebx+0x3c]
  4280d5:	jnp    0x42814e
  4280d7:	and    eax,0xd573a497
  4280dc:	jns    0x42807e
  4280de:	mov    esi,0x1277054
  4280e3:	(bad)  
  4280e4:	and    ah,BYTE PTR [edi+edi*2]
  4280e7:	mov    ebp,0xc7876eea
  4280ec:	stos   BYTE PTR es:[edi],al
  4280ed:	aas    
  4280ee:	fwait
  4280ef:	xchg   ebp,eax
  4280f0:	mov    WORD PTR [ecx+0x34],cs
  4280f3:	(bad)
  4280f7:	pop    esi
  4280f8:	pop    eax
  4280f9:	bound  edi,QWORD PTR [ecx]
  4280fb:	adc    esi,ecx
  4280fd:	test   eax,0xbf85d34d
  428102:	shl    al,1
  428104:	out    dx,eax
  428105:	pop    edx
  428106:	sub    DWORD PTR [esi-0x3b],edx
  428109:	push   esi
  42810a:	dec    eax
  42810b:	xor    cl,BYTE PTR [edx]
  42810d:	mov    dh,0xcd
  42810f:	int    0x70
  428111:	xor    dh,BYTE PTR [edi]
  428113:	scas   eax,DWORD PTR es:[edi]
  428114:	nop
  428115:	dec    ebx
  428116:	test   al,0xe0
  428118:	les    eax,FWORD PTR [edx-0x79]
  42811b:	xchg   ebp,eax
  42811c:	push   ebx
  42811d:	add    dl,ch
  42811f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428120:	sub    eax,0x4dc017fe
  428125:	xor    BYTE PTR [edi+0x4c125cf8],dh
  42812b:	jb     0x428143
  42812d:	or     al,0xe2
	...
  428137:	add    BYTE PTR [eax],al
  428139:	add    BYTE PTR [eax+0x3fc326ab],dl
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	dec    edx
  428147:	jmp    0x1:0xf65afcac
  42814e:	std    
  42814f:	add    DWORD PTR [eax],eax
  428151:	add    BYTE PTR [esi+0x28f6f1e1],bl
  428157:	int3   
  428158:	jge    0x4281ad
  42815a:	mov    al,0x82
  42815c:	mov    edi,0x4c3f7982
  428161:	call   0xd836:0x3715ad34
  428168:	add    al,0x7a
  42816a:	js     0x42811e
  42816c:	dec    edi
  42816d:	les    ebx,FWORD PTR [ecx]
  42816f:	aas    
  428170:	rcl    DWORD PTR [eax+edi*1],1
  428173:	dec    BYTE PTR [ebx+ebp*4-0x5b]
  428177:	ret    0x9bfc
  42817a:	aaa    
  42817b:	xor    bh,ah
  42817d:	pop    ds
  42817e:	rol    ebp,cl
  428180:	and    ch,BYTE PTR [edx]
  428182:	adc    DWORD PTR [esi-0x76],0x12
  428186:	pop    ebx
  428187:	test   BYTE PTR [esi-0x31e9c0d8],bh
  42818d:	stos   DWORD PTR es:[edi],eax
  42818e:	repz add ebx,DWORD PTR [esi+0x86605da]
  428195:	push   ebx
  428196:	add    dl,dh
  428198:	ret    0x5a74
  42819b:	or     eax,0xce7b3cf9
  4281a0:	jle    0x42820d
  4281a2:	repz dec BYTE PTR ds:0x284fd4bb
  4281a9:	mov    WORD PTR [eax-0x5f53b2d4],?
  4281af:	(bad)  
  4281b0:	femms  
  4281b2:	adc    ah,BYTE PTR [esi]
  4281b4:	out    dx,eax
  4281b5:	inc    edi
  4281b6:	pop    esi
  4281b7:	sahf   
  4281b8:	or     ch,0x41
  4281bb:	pop    ebp
  4281bc:	dec    ebp
  4281bd:	adc    BYTE PTR [ebx+0x3cc69f64],0x19
  4281c4:	mov    ebx,0x80dda4b3
  4281c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281ca:	std    
  4281cb:	adc    eax,0xcedd7cb8
  4281d0:	jno    0x4281e0
  4281d2:	pushf  
  4281d3:	icebp  
  4281d4:	pop    ss
  4281d5:	cmp    al,0x37
  4281d7:	push   esp
  4281d8:	push   ss
  4281d9:	and    BYTE PTR [esi-0x55fabcf9],0xd0
  4281e0:	gs mov ecx,0x868c8751
  4281e6:	pop    esi
  4281e7:	jmp    0x74ef:0xe71095ed
  4281ee:	mov    ebx,0xe2b8bbb7
  4281f3:	xlat   BYTE PTR ds:[ebx]
  4281f4:	jnp    0x428269
  4281f6:	mov    esp,0x2ba7e027
  4281fb:	pop    ebp
  4281fc:	aaa    
  4281fd:	or     DWORD PTR [esi-0x72],esi
  428200:	fimul  DWORD PTR [esi]
  428202:	leave  
  428203:	or     eax,0xd99f74d9
  428208:	loope  0x428252
  42820a:	lods   al,BYTE PTR ds:[esi]
  42820b:	adc    al,BYTE PTR [ecx+0x5e]
  42820e:	or     dh,dh
  428210:	mov    ds:0xf4e890cd,eax
  428215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428216:	iret   
  428217:	xchg   edx,eax
  428218:	inc    ecx
  428219:	shl    DWORD PTR [edx+ebp*8-0x38],0x8
  42821e:	mov    edx,0x6b2a480c
  428223:	adc    eax,0xabff71a9
  428228:	(bad)  [eax+0x8e4cff2]
  42822e:	mov    ebp,DWORD PTR [ecx+0xaabfc35]
  428234:	lods   eax,DWORD PTR ds:[esi]
  428235:	add    bl,BYTE PTR [eax-0x3e7f1ba3]
  42823b:	inc    edi
  42823c:	popf   
  42823d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42823e:	das    
  42823f:	xchg   ebx,eax
  428240:	xor    ebp,ebx
  428242:	hlt    
  428243:	sbb    ebp,DWORD PTR [eax-0x58]
  428246:	sbb    esi,DWORD PTR fs:[edi]
  428249:	or     BYTE PTR ds:0x36862977,dh
  42824f:	mov    ?,WORD PTR [ebp+0x55f8cded]
  428255:	sbb    DWORD PTR [eax+0x321db68e],0x26
  42825c:	outs   dx,BYTE PTR ds:[esi]
  42825d:	cwde   
  42825e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42825f:	outs   dx,BYTE PTR ds:[esi]
  428260:	cs push ss
  428262:	pop    ss
  428263:	femms  
  428265:	mov    cl,0xcc
  428267:	jecxz  0x428281
  428269:	add    cl,ch
  42826b:	pop    ebp
  42826c:	push   esp
  42826d:	push   edi
  42826e:	fadd   QWORD PTR [ecx-0x70c95c58]
  428274:	enter  0x46b8,0x21
  428278:	jmp    0x4282e1
  42827a:	lods   al,BYTE PTR ds:[esi]
  42827b:	(bad)  
  42827c:	out    0x83,eax
  42827e:	jbe    0x428294
  428280:	imul   ebp,edi,0xebd0a720
  428286:	ss pusha 
  428288:	mov    bh,0xcf
  42828a:	lds    eax,FWORD PTR [ebx+eax*4+0x3318de57]
  428291:	adc    ecx,0x9e252658
  428297:	dec    edi
  428298:	mov    DWORD PTR [eax-0x38],esi
  42829b:	lock adc eax,0xbb7349ed
  4282a1:	cmp    al,0x9
  4282a3:	pop    es
  4282a4:	xor    cl,BYTE PTR [esi+esi*1-0x3]
  4282a8:	gs out 0x36,eax
  4282ab:	out    dx,eax
  4282ac:	dec    ecx
  4282ad:	inc    eax
  4282ae:	add    ebp,ebx
  4282b0:	mov    ds:0xaa63e3a3,al
  4282b5:	jge    0x42829f
  4282b7:	in     al,0x69
  4282b9:	sbb    DWORD PTR [edx-0x60],0x8cf70a06
  4282c0:	sbb    ebp,esi
  4282c2:	sti    
  4282c3:	jbe    0x42827b
  4282c5:	dec    eax
  4282c6:	jae    0x42829b
  4282c8:	adc    BYTE PTR [ebx],dh
  4282ca:	xor    DWORD PTR [edi],ecx
  4282cc:	gs addr16 sbb al,0xa1
  4282d0:	jno    0x4282c8
  4282d2:	cmp    BYTE PTR [esi-0x298c153d],cl
  4282d8:	jno    0x4282ce
  4282da:	xchg   edi,eax
  4282db:	and    DWORD PTR [edx],ecx
  4282dd:	or     dl,al
  4282df:	out    dx,al
  4282e0:	adc    dh,BYTE PTR [ebx-0x16216894]
  4282e6:	pop    eax
  4282e7:	ror    DWORD PTR [ebx-0x76a52c24],0xe8
  4282ee:	call   0xc4b7f26f
  4282f3:	pop    eax
  4282f4:	xchg   ecx,eax
  4282f5:	mov    esp,0xc2cd4154
  4282fa:	jge    0x428324
  4282fc:	cli    
  4282fd:	dec    edi
  4282fe:	mov    al,ds:0x5c56b050
  428303:	sub    ch,cl
  428305:	adc    eax,0xc26852c3
  42830a:	and    DWORD PTR [edi],ecx
  42830c:	mov    bh,0x4b
  42830e:	push   ds
  42830f:	mov    al,ds:0xcc2db605
  428314:	mov    ah,0x63
  428316:	fst    st(3)
  428318:	fistp  DWORD PTR [ebp-0x5274eb7b]
  42831e:	mov    BYTE PTR [esi],bl
  428320:	pop    edx
  428321:	call   0x8780:0x548e9d54
  428328:	inc    ebx
  428329:	mov    al,BYTE PTR [edx-0x344d7bc]
  42832f:	fidivr WORD PTR [edi+0x44]
  428332:	ret    0x503
  428335:	mov    ebp,0x9342a32c
  42833a:	jl     0x428385
  42833c:	fist   DWORD PTR [edx-0x78]
  42833f:	jns    0x42832e
  428341:	(bad)  
  428342:	fidivr DWORD PTR [ebp+0x6f]
  428345:	outs   dx,BYTE PTR ds:[esi]
  428346:	xchg   edx,eax
  428347:	jp     0x428302
  428349:	mov    bh,0xfd
  42834b:	das    
  42834c:	jge    0x428371
  42834e:	cwde   
	...
  428357:	add    BYTE PTR [eax],al
  428359:	add    ch,bh
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x428361
  428367:	into   
  428368:	mov    ds,ecx
  42836a:	push   edi
  42836b:	clc    
  42836c:	add    DWORD PTR [eax],eax
  42836e:	std    
  42836f:	add    DWORD PTR [eax],eax
  428371:	add    BYTE PTR [esi+0x4c710379],cl
  428377:	xchg   esp,eax
  428378:	mov    ecx,0xdaca572f
  42837d:	and    edx,0x12c4ee0c
  428383:	mov    ebp,0x578d4a4b
  428388:	or     DWORD PTR [eax],edi
  42838a:	repnz das 
  42838c:	fisub  DWORD PTR [eax]
  42838e:	mov    eax,ds:0x81128aaa
  428393:	and    BYTE PTR [esi+eax*2-0x30],dl
  428397:	out    dx,eax
  428398:	adc    al,0xff
  42839a:	lock mov ecx,0x2cd0dae7
  4283a0:	jmp    0x3736:0xc80f429f
  4283a7:	cwde   
  4283a8:	lods   al,BYTE PTR ds:[esi]
  4283a9:	loop   0x42837a
  4283ab:	lds    ebx,FWORD PTR [ebp-0x59eec83d]
  4283b1:	xchg   DWORD PTR [eax],edi
  4283b3:	in     al,0x69
  4283b5:	ret    0x4b79
  4283b8:	push   ebp
  4283b9:	add    DWORD PTR [edi],ebx
  4283bb:	leave  
  4283bc:	retf   
  4283bd:	cmp    DWORD PTR [eax+ebp*4],0x3d88e627
  4283c4:	push   cs
  4283c5:	cmp    DWORD PTR ss:[eax],ebp
  4283c8:	(bad)  [eax+0x5b590fcb]
  4283ce:	mov    eax,ds:0xed16556a
  4283d3:	fdiv   QWORD PTR [ebx]
  4283d5:	mov    BYTE PTR [esi],0x87
  4283d8:	dec    esp
  4283d9:	push   ss
  4283da:	mov    dl,BYTE PTR [ecx+0x3b5c7b73]
  4283e0:	mov    esi,ecx
  4283e2:	mov    eax,0x3037b8e9
  4283e7:	rcr    ebx,0xc3
  4283ea:	inc    ebx
  4283eb:	sub    esp,DWORD PTR [ecx+0x51]
  4283ee:	inc    ebp
  4283ef:	jae    0x4283b3
  4283f1:	inc    esi
  4283f2:	ss jecxz 0x428430
  4283f5:	jmp    0x428404
  4283f7:	ins    DWORD PTR es:[edi],dx
  4283f8:	dec    edx
  4283f9:	cmp    ecx,DWORD PTR [ecx+eax*2]
  4283fc:	add    al,0xd4
  4283fe:	or     eax,DWORD PTR [eax]
  428400:	fbld   TBYTE PTR [ebx+0x6e6e4cee]
  428406:	mov    dl,0x28
  428408:	sbb    bh,BYTE PTR [edi+0x1ce25aa6]
  42840e:	mov    BYTE PTR [esi],ch
  428410:	pop    edi
  428411:	mov    bl,0xa8
  428413:	(bad)  
  428414:	loop   0x4283ee
  428416:	call   0x543cf487
  42841b:	icebp  
  42841c:	aas    
  42841d:	repz pop esi
  42841f:	push   edx
  428420:	arpl   di,bp
  428422:	jl     0x428460
  428424:	add    eax,0x75fe115f
  428429:	push   edi
  42842a:	pop    esi
  42842b:	(bad)  
  42842c:	and    BYTE PTR [ecx],ch
  42842e:	out    dx,eax
  42842f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428430:	call   0x10a2:0x45f0b292
  428437:	sub    DWORD PTR [eax+esi*2+0x2f5910e2],edi
  42843e:	mov    ah,0x9d
  428440:	cmp    eax,0x18c868a1
  428445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428446:	mov    edi,0xce430b5b
  42844b:	cmp    BYTE PTR [edi-0x1a],dh
  42844e:	and    DWORD PTR [edx+0x4f18fa04],eax
  428454:	imul   ebx,DWORD PTR [edi-0x50f6e60c],0xffffffd2
  42845b:	xchg   edx,eax
  42845c:	mov    ecx,edx
  42845e:	mov    cl,0x65
  428460:	pop    esp
  428461:	push   edi
  428462:	fdiv   DWORD PTR [eax+ebp*4+0x5a98cd3a]
  428469:	push   ebp
  42846a:	js     0x428430
  42846c:	mov    edx,DWORD PTR [ebx+0xbe25cae]
  428472:	and    al,ch
  428474:	push   edx
  428475:	int    0x97
  428477:	inc    esi
  428478:	popf   
  428479:	push   ebp
  42847a:	(bad)  
  42847b:	mov    ah,0x7c
  42847d:	sbb    dl,BYTE PTR [eax-0x72]
  428480:	or     eax,0xec63c171
  428485:	add    ah,ah
  428487:	and    ah,BYTE PTR ds:0xae80d32d
  42848d:	not    DWORD PTR [edi+0x13]
  428490:	dec    edx
  428491:	jo     0x42846f
  428493:	popa   
  428494:	pop    ds
  428495:	lock and al,0x82
  428498:	add    BYTE PTR [edx+0x75],dl
  42849b:	cmp    esp,esp
  42849d:	out    0x78,eax
  42849f:	cmp    ecx,DWORD PTR [edx+0x66]
  4284a2:	dec    eax
  4284a3:	mov    DWORD PTR [ebx+0x27],0xb7f862a6
  4284aa:	push   ebp
  4284ab:	jb     0x4284e0
  4284ad:	mov    bh,0xed
  4284af:	inc    ebx
  4284b0:	dec    ebp
  4284b1:	pusha  
  4284b2:	and    bh,0xbb
  4284b5:	dec    ecx
  4284b6:	jns    0x4284af
  4284b8:	xchg   ebx,eax
  4284b9:	push   ebp
  4284ba:	sbb    BYTE PTR [edi+0x4f92b3f0],cl
  4284c0:	or     eax,0x7d06dd48
  4284c5:	inc    esp
  4284c6:	outs   dx,BYTE PTR ds:[esi]
  4284c7:	jnp    0x42850b
  4284c9:	mov    bh,0x61
  4284cb:	push   cs
  4284cc:	ret    
  4284cd:	push   es
  4284ce:	cmp    BYTE PTR [eax-0x3aaba2c3],bh
  4284d4:	mov    ds:0x6f0657f3,al
  4284d9:	out    0x4a,eax
  4284db:	sbb    DWORD PTR [ebx-0x49],esi
  4284de:	push   es
  4284df:	pop    edi
  4284e0:	or     al,0x5c
  4284e2:	dec    esp
  4284e3:	xor    al,0x74
  4284e5:	clc    
  4284e6:	data16 mov dl,0xf4
  4284e9:	push   edx
  4284ea:	ins    BYTE PTR es:[edi],dx
  4284eb:	push   cs
  4284ec:	inc    eax
  4284ed:	lock shl BYTE PTR [ebx-0x4bca0f2e],cl
  4284f4:	mov    edi,0xf4686151
  4284f9:	lods   al,BYTE PTR ds:[esi]
  4284fa:	jnp    0x428543
  4284fc:	bound  ebp,QWORD PTR [ecx+0x6b9befd7]
  428502:	iret   
  428503:	imul   ebx,DWORD PTR [edi],0xffffffe7
  428506:	hlt    
  428507:	mov    bh,0x30
  428509:	loopne 0x42853a
  42850b:	pop    edi
  42850c:	sti    
  42850d:	sub    DWORD PTR [esi-0x77],edx
  428510:	std    
  428511:	mov    ah,0x9e
  428513:	add    ah,bh
  428515:	and    al,0x98
  428517:	adc    al,0x52
  428519:	retf   0xaad0
  42851c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42851d:	jbe    0x4284a7
  42851f:	ds mov ebx,0x6d960703
  428525:	lods   al,BYTE PTR ds:[esi]
  428526:	lods   eax,DWORD PTR ds:[esi]
  428527:	mov    ds:0x42e54453,eax
  42852c:	cmp    bl,ch
  42852e:	mov    eax,0xa607d4df
  428533:	or     al,0xc8
  428535:	lods   al,BYTE PTR ds:[esi]
  428536:	push   edx
  428537:	push   ss
  428538:	dec    ecx
  428539:	dec    esi
  42853a:	cli    
  42853b:	call   ebp
  42853d:	das    
  42853e:	xchg   esp,eax
  42853f:	inc    esi
  428540:	imul   eax,DWORD PTR [ecx+edi*4-0x17],0x2c
  428545:	pop    ecx
  428546:	(bad)  
  428548:	inc    edx
  428549:	cmp    DWORD PTR gs:[esi-0x262c0417],edx
  428550:	in     al,0xcf
  428552:	fmulp  st(2),st
  428554:	inc    esp
  428555:	mov    dh,0x8f
  428557:	mov    ch,0xcb
  428559:	aam    0xe3
  42855b:	mov    DWORD PTR ds:[ebx-0xd],0x2872c1d3
  428563:	xchg   ebp,eax
  428564:	adc    DWORD PTR [ebx],esi
  428566:	and    eax,0x4c6ae57c
  42856b:	push   0x2f
  42856d:	(bad)  
  42856e:	adc    al,0x0
	...
