
f50af9bbcde6f73416df2b73d097d53f7c59bddcd6aa1f20de2f6dad403c5208.exe:     file format pei-i386


Disassembly of section .text:

00402000 <.text>:
  402000:	push   ebp
  402001:	mov    ebp,esp
  402003:	sub    esp,0xc
  402006:	mov    eax,DWORD PTR [ebp+0x8]
  402009:	mov    DWORD PTR [ebp-0x8],eax
  40200c:	mov    ecx,DWORD PTR [ebp+0xc]
  40200f:	mov    DWORD PTR [ebp-0xc],ecx
  402012:	mov    DWORD PTR [ebp-0x4],0x22b
  402019:	mov    edx,DWORD PTR [ebp-0x8]
  40201c:	cmp    edx,DWORD PTR [ebp-0xc]
  40201f:	jae    0x40202f
  402021:	mov    DWORD PTR [ebp-0x4],0x22b
  402028:	mov    eax,DWORD PTR [ebp-0x8]
  40202b:	jmp    0x402039
  40202d:	jmp    0x402039
  40202f:	mov    DWORD PTR [ebp-0x4],0x22b
  402036:	mov    eax,DWORD PTR [ebp-0xc]
  402039:	mov    esp,ebp
  40203b:	pop    ebp
  40203c:	ret    
  40203d:	int3   
  40203e:	int3   
  40203f:	int3   
  402040:	push   ebp
  402041:	mov    ebp,esp
  402043:	sub    esp,0xc
  402046:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  40204d:	mov    DWORD PTR [ebp-0xc],0x3000
  402054:	mov    DWORD PTR [ebp-0x4],0x40
  40205b:	mov    eax,DWORD PTR [ebp-0x4]
  40205e:	push   eax
  40205f:	mov    ecx,DWORD PTR [ebp-0xc]
  402062:	push   ecx
  402063:	mov    edx,DWORD PTR [ebp+0x8]
  402066:	push   edx
  402067:	push   0x0
  402069:	push   0xffffffff
  40206b:	call   DWORD PTR ds:0x40113c
  402071:	mov    esp,ebp
  402073:	pop    ebp
  402074:	ret    
  402075:	int3   
  402076:	int3   
  402077:	int3   
  402078:	int3   
  402079:	int3   
  40207a:	int3   
  40207b:	int3   
  40207c:	int3   
  40207d:	int3   
  40207e:	int3   
  40207f:	int3   
  402080:	push   ebp
  402081:	mov    ebp,esp
  402083:	pop    ebp
  402084:	ret    
  402085:	int3   
  402086:	int3   
  402087:	int3   
  402088:	int3   
  402089:	int3   
  40208a:	int3   
  40208b:	int3   
  40208c:	int3   
  40208d:	int3   
  40208e:	int3   
  40208f:	int3   
  402090:	push   ebp
  402091:	mov    ebp,esp
  402093:	mov    DWORD PTR ds:0x401220,0x4027e4
  40209d:	pop    ebp
  40209e:	ret    
  40209f:	int3   
  4020a0:	push   ebp
  4020a1:	mov    ebp,esp
  4020a3:	mov    DWORD PTR ds:0x401220,0x41b000
  4020ad:	pop    ebp
  4020ae:	ret    
  4020af:	int3   
  4020b0:	push   ebp
  4020b1:	mov    ebp,esp
  4020b3:	mov    eax,DWORD PTR [ebp+0x8]
  4020b6:	mov    eax,DWORD PTR [eax-0x4]
  4020b9:	pop    ebp
  4020ba:	ret    
  4020bb:	int3   
  4020bc:	int3   
  4020bd:	int3   
  4020be:	int3   
  4020bf:	int3   
  4020c0:	push   ebp
  4020c1:	mov    ebp,esp
  4020c3:	mov    eax,DWORD PTR [ebp+0xc]
  4020c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4020c9:	movzx  eax,WORD PTR [ecx+eax*2]
  4020cd:	pop    ebp
  4020ce:	ret    
  4020cf:	int3   
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	sub    esp,0xc
  4020d6:	mov    DWORD PTR [ebp-0x4],0x0
  4020dd:	jmp    0x4020e8
  4020df:	mov    eax,DWORD PTR [ebp-0x4]
  4020e2:	add    eax,0x1
  4020e5:	mov    DWORD PTR [ebp-0x4],eax
  4020e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4020eb:	cmp    ecx,DWORD PTR [ebp+0x8]
  4020ee:	jae    0x402153
  4020f0:	mov    edx,DWORD PTR [ebp-0x4]
  4020f3:	push   edx
  4020f4:	mov    eax,DWORD PTR [ebp+0xc]
  4020f7:	push   eax
  4020f8:	call   0x4020c0
  4020fd:	add    esp,0x8
  402100:	sar    eax,0xc
  402103:	cmp    eax,0x3
  402106:	jne    0x402151
  402108:	mov    DWORD PTR [ebp-0xc],0xfff
  40210f:	mov    ecx,DWORD PTR [ebp-0x4]
  402112:	push   ecx
  402113:	mov    edx,DWORD PTR [ebp+0xc]
  402116:	push   edx
  402117:	call   0x4020c0
  40211c:	add    esp,0x8
  40211f:	and    eax,DWORD PTR [ebp-0xc]
  402122:	add    eax,0x2d23
  402127:	mov    DWORD PTR [ebp-0x8],eax
  40212a:	mov    eax,DWORD PTR [ebp+0x18]
  40212d:	mov    ecx,DWORD PTR [ebp+0x10]
  402130:	add    ecx,DWORD PTR [eax]
  402132:	mov    edx,DWORD PTR [ebp-0x8]
  402135:	mov    eax,DWORD PTR [ecx+edx*1-0x2d23]
  40213c:	add    eax,DWORD PTR [ebp+0x14]
  40213f:	mov    ecx,DWORD PTR [ebp+0x18]
  402142:	mov    edx,DWORD PTR [ebp+0x10]
  402145:	add    edx,DWORD PTR [ecx]
  402147:	mov    ecx,DWORD PTR [ebp-0x8]
  40214a:	mov    DWORD PTR [edx+ecx*1-0x2d23],eax
  402151:	jmp    0x4020df
  402153:	mov    esp,ebp
  402155:	pop    ebp
  402156:	ret    
  402157:	int3   
  402158:	int3   
  402159:	int3   
  40215a:	int3   
  40215b:	int3   
  40215c:	int3   
  40215d:	int3   
  40215e:	int3   
  40215f:	int3   
  402160:	push   ebp
  402161:	mov    ebp,esp
  402163:	sub    esp,0x30
  402166:	mov    DWORD PTR [ebp-0x8],0x11cb
  40216d:	mov    DWORD PTR [ebp-0x10],0x0
  402174:	jmp    0x40217f
  402176:	mov    eax,DWORD PTR [ebp-0x10]
  402179:	add    eax,0x4
  40217c:	mov    DWORD PTR [ebp-0x10],eax
  40217f:	mov    ecx,DWORD PTR [ebp-0x10]
  402182:	cmp    ecx,DWORD PTR [ebp+0xc]
  402185:	jae    0x402246
  40218b:	mov    DWORD PTR [ebp-0x8],0x4189
  402192:	mov    edx,DWORD PTR [ebp-0x10]
  402195:	add    edx,0x563
  40219b:	mov    DWORD PTR [ebp-0x28],edx
  40219e:	mov    eax,DWORD PTR [ebp-0x28]
  4021a1:	mov    DWORD PTR [ebp-0x24],eax
  4021a4:	mov    ecx,DWORD PTR [ebp-0x24]
  4021a7:	mov    DWORD PTR [ebp-0x20],ecx
  4021aa:	mov    edx,DWORD PTR [ebp-0x20]
  4021ad:	mov    DWORD PTR [ebp-0x1c],edx
  4021b0:	cmp    DWORD PTR [ebp-0x10],0x0
  4021b4:	jne    0x402206
  4021b6:	push   0x104
  4021bb:	push   0x401224
  4021c0:	call   DWORD PTR ds:0x401140
  4021c6:	push   0x401000
  4021cb:	push   0x401224
  4021d0:	call   DWORD PTR ds:0x401144
  4021d6:	push   0x0
  4021d8:	push   0x80
  4021dd:	push   0x3
  4021df:	push   0x0
  4021e1:	push   0x3
  4021e3:	push   0x1
  4021e5:	push   0x401224
  4021ea:	call   DWORD PTR ds:0x401148
  4021f0:	mov    DWORD PTR [ebp-0x4],eax
  4021f3:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  4021f7:	je     0x4021ff
  4021f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4021fd:	jne    0x402206
  4021ff:	mov    eax,0x42
  402204:	jmp    0x402246
  402206:	mov    eax,DWORD PTR [ebp-0x1c]
  402209:	mov    DWORD PTR [ebp-0x30],eax
  40220c:	mov    ecx,DWORD PTR [ebp-0x30]
  40220f:	mov    DWORD PTR [ebp-0x14],ecx
  402212:	mov    edx,DWORD PTR [ebp-0x10]
  402215:	mov    DWORD PTR [ebp-0x18],edx
  402218:	mov    eax,DWORD PTR [ebp+0x8]
  40221b:	add    eax,DWORD PTR [ebp-0x10]
  40221e:	mov    DWORD PTR [ebp-0x2c],eax
  402221:	mov    ecx,DWORD PTR [ebp-0x2c]
  402224:	mov    edx,DWORD PTR [ecx]
  402226:	add    edx,DWORD PTR [ebp-0x18]
  402229:	mov    eax,DWORD PTR [ebp-0x2c]
  40222c:	mov    DWORD PTR [eax],edx
  40222e:	mov    ecx,DWORD PTR [ebp+0x8]
  402231:	add    ecx,DWORD PTR [ebp-0x10]
  402234:	mov    edx,DWORD PTR [ecx]
  402236:	xor    edx,DWORD PTR [ebp-0x14]
  402239:	mov    eax,DWORD PTR [ebp+0x8]
  40223c:	add    eax,DWORD PTR [ebp-0x10]
  40223f:	mov    DWORD PTR [eax],edx
  402241:	jmp    0x402176
  402246:	mov    esp,ebp
  402248:	pop    ebp
  402249:	ret    
  40224a:	int3   
  40224b:	int3   
  40224c:	int3   
  40224d:	int3   
  40224e:	int3   
  40224f:	int3   
  402250:	push   ebp
  402251:	mov    ebp,esp
  402253:	sub    esp,0x14
  402256:	mov    eax,DWORD PTR [ebp+0x8]
  402259:	cmp    DWORD PTR [eax+0x4],0x0
  40225d:	je     0x4022a7
  40225f:	mov    DWORD PTR [ebp-0x14],0x2a1
  402266:	mov    ecx,DWORD PTR [ebp+0x8]
  402269:	mov    edx,DWORD PTR [ecx+0x4]
  40226c:	sub    edx,0x8
  40226f:	shr    edx,1
  402271:	mov    DWORD PTR [ebp-0xc],edx
  402274:	mov    eax,DWORD PTR [ebp+0x8]
  402277:	add    eax,0x8
  40227a:	mov    DWORD PTR [ebp-0x10],eax
  40227d:	mov    ecx,DWORD PTR [ebp+0x8]
  402280:	push   ecx
  402281:	mov    edx,DWORD PTR [ebp+0x10]
  402284:	push   edx
  402285:	mov    eax,DWORD PTR [ebp+0xc]
  402288:	push   eax
  402289:	mov    ecx,DWORD PTR [ebp-0x10]
  40228c:	push   ecx
  40228d:	mov    edx,DWORD PTR [ebp-0xc]
  402290:	push   edx
  402291:	call   0x4020d0
  402296:	add    esp,0x14
  402299:	mov    eax,DWORD PTR [ebp+0x8]
  40229c:	mov    ecx,DWORD PTR [ebp+0x8]
  40229f:	add    ecx,DWORD PTR [eax+0x4]
  4022a2:	mov    DWORD PTR [ebp+0x8],ecx
  4022a5:	jmp    0x402256
  4022a7:	mov    esp,ebp
  4022a9:	pop    ebp
  4022aa:	ret    
  4022ab:	int3   
  4022ac:	int3   
  4022ad:	int3   
  4022ae:	int3   
  4022af:	int3   
  4022b0:	push   ebp
  4022b1:	mov    ebp,esp
  4022b3:	sub    esp,0x18
  4022b6:	mov    DWORD PTR [ebp-0x18],0x60
  4022bd:	mov    DWORD PTR [ebp-0xc],0x40102c
  4022c4:	lea    eax,[ebp-0x8]
  4022c7:	push   eax
  4022c8:	push   0x5b24
  4022cd:	push   0x3edd
  4022d2:	call   DWORD PTR ds:0x40114c
  4022d8:	cmp    DWORD PTR [ebp-0x4],0x1cc364f
  4022df:	je     0x4022e6
  4022e1:	call   0x402450
  4022e6:	push   0x1
  4022e8:	push   0x1
  4022ea:	push   0x1
  4022ec:	push   0x0
  4022ee:	push   0xffffffff
  4022f0:	call   DWORD PTR ds:0x40113c
  4022f6:	mov    DWORD PTR [ebp-0x18],0x42
  4022fd:	mov    ecx,DWORD PTR ds:0x401160
  402303:	mov    DWORD PTR ds:0x401328,ecx
  402309:	mov    DWORD PTR [ebp-0x18],0x6
  402310:	mov    edx,DWORD PTR [ebp-0xc]
  402313:	mov    BYTE PTR [edx+0x1],0x4f
  402317:	lea    eax,[ebp-0x14]
  40231a:	push   eax
  40231b:	mov    ecx,DWORD PTR [ebp-0xc]
  40231e:	push   ecx
  40231f:	push   0x80000002
  402324:	call   DWORD PTR ds:0x401328
  40232a:	test   eax,eax
  40232c:	je     0x402332
  40232e:	xor    eax,eax
  402330:	jmp    0x40238f
  402332:	mov    DWORD PTR [ebp-0x18],0x60
  402339:	lea    edx,[ebp-0x14]
  40233c:	push   edx
  40233d:	push   0x401038
  402342:	mov    eax,DWORD PTR [ebp-0x14]
  402345:	push   eax
  402346:	call   DWORD PTR ds:0x401328
  40234c:	test   eax,eax
  40234e:	je     0x402354
  402350:	xor    eax,eax
  402352:	jmp    0x40238f
  402354:	lea    ecx,[ebp-0x14]
  402357:	push   ecx
  402358:	push   0x401040
  40235d:	mov    edx,DWORD PTR [ebp-0x14]
  402360:	push   edx
  402361:	call   DWORD PTR ds:0x401328
  402367:	test   eax,eax
  402369:	je     0x40236f
  40236b:	xor    eax,eax
  40236d:	jmp    0x40238f
  40236f:	lea    eax,[ebp-0x14]
  402372:	push   eax
  402373:	push   0x40107c
  402378:	mov    ecx,DWORD PTR [ebp-0x14]
  40237b:	push   ecx
  40237c:	call   DWORD PTR ds:0x401328
  402382:	test   eax,eax
  402384:	jne    0x40238a
  402386:	xor    eax,eax
  402388:	jmp    0x40238f
  40238a:	call   0x402090
  40238f:	mov    esp,ebp
  402391:	pop    ebp
  402392:	ret    0x10
  402395:	int3   
  402396:	int3   
  402397:	int3   
  402398:	int3   
  402399:	int3   
  40239a:	int3   
  40239b:	int3   
  40239c:	int3   
  40239d:	int3   
  40239e:	int3   
  40239f:	int3   
  4023a0:	push   ebp
  4023a1:	mov    ebp,esp
  4023a3:	sub    esp,0x12c
  4023a9:	mov    DWORD PTR [ebp-0x120],0x7c
  4023b3:	mov    DWORD PTR [ebp-0x114],0x0
  4023bd:	mov    eax,ds:0x401150
  4023c2:	mov    DWORD PTR [ebp-0x4],eax
  4023c5:	push   0x104
  4023ca:	lea    ecx,[ebp-0x110]
  4023d0:	push   ecx
  4023d1:	call   DWORD PTR [ebp-0x4]
  4023d4:	mov    edx,DWORD PTR ds:0x401154
  4023da:	mov    DWORD PTR [ebp-0x124],edx
  4023e0:	mov    eax,ds:0x401158
  4023e5:	mov    DWORD PTR [ebp-0x118],eax
  4023eb:	mov    DWORD PTR [ebp-0x128],0x0
  4023f5:	jmp    0x402406
  4023f7:	mov    ecx,DWORD PTR [ebp-0x128]
  4023fd:	add    ecx,0x1
  402400:	mov    DWORD PTR [ebp-0x128],ecx
  402406:	mov    edx,DWORD PTR [ebp-0x128]
  40240c:	cmp    edx,DWORD PTR [ebp+0x10]
  40240f:	jge    0x40244a
  402411:	mov    eax,DWORD PTR [ebp+0xc]
  402414:	add    eax,DWORD PTR [ebp-0x128]
  40241a:	movzx  ecx,BYTE PTR [eax]
  40241d:	mov    DWORD PTR [ebp-0x12c],ecx
  402423:	mov    DWORD PTR [ebp-0x120],0x7c
  40242d:	mov    edx,DWORD PTR [ebp+0x8]
  402430:	add    edx,DWORD PTR [ebp-0x128]
  402436:	mov    al,BYTE PTR [ebp-0x12c]
  40243c:	mov    BYTE PTR [edx],al
  40243e:	mov    DWORD PTR [ebp-0x120],0x33
  402448:	jmp    0x4023f7
  40244a:	mov    esp,ebp
  40244c:	pop    ebp
  40244d:	ret    
  40244e:	int3   
  40244f:	int3   
  402450:	push   ebp
  402451:	mov    ebp,esp
  402453:	sub    esp,0x88
  402459:	mov    DWORD PTR ds:0x40132c,ebp
  40245f:	pusha  
  402460:	mov    DWORD PTR [ebp-0x3c],0x0
  402467:	mov    DWORD PTR [ebp-0x50],0x80000002
  40246e:	mov    DWORD PTR [ebp-0x34],0x64
  402475:	mov    DWORD PTR [ebp-0x1c],0xf
  40247c:	mov    DWORD PTR [ebp-0x3c],0x0
  402483:	mov    DWORD PTR [ebp-0x24],0x0
  40248a:	mov    DWORD PTR [ebp-0x30],0x1
  402491:	mov    DWORD PTR [ebp-0x14],0x0
  402498:	mov    DWORD PTR [ebp-0x34],0x64
  40249f:	mov    DWORD PTR [ebp-0x1c],0xf
  4024a6:	mov    DWORD PTR [ebp-0x3c],0x0
  4024ad:	mov    DWORD PTR [ebp-0x24],0x0
  4024b4:	mov    DWORD PTR [ebp-0x30],0x1
  4024bb:	mov    DWORD PTR [ebp-0x18],0x3
  4024c2:	mov    DWORD PTR [ebp-0x14],0x0
  4024c9:	mov    DWORD PTR [ebp-0x34],0x64
  4024d0:	mov    DWORD PTR [ebp-0x1c],0xf
  4024d7:	push   0x104
  4024dc:	push   0x401224
  4024e1:	call   DWORD PTR ds:0x401150
  4024e7:	mov    DWORD PTR [ebp-0x74],0x60
  4024ee:	mov    DWORD PTR [ebp-0x68],0x401080
  4024f5:	lea    eax,[ebp-0x64]
  4024f8:	push   eax
  4024f9:	push   0x5b24
  4024fe:	push   0x3edd
  402503:	call   DWORD PTR ds:0x40114c
  402509:	cmp    DWORD PTR [ebp-0x60],0x1cc364f
  402510:	je     0x402517
  402512:	call   0x402450
  402517:	push   0x1
  402519:	push   0x1
  40251b:	push   0x1
  40251d:	push   0x0
  40251f:	push   0xffffffff
  402521:	call   DWORD PTR ds:0x40113c
  402527:	mov    DWORD PTR [ebp-0x74],0x42
  40252e:	mov    ecx,DWORD PTR ds:0x401160
  402534:	mov    DWORD PTR ds:0x401328,ecx
  40253a:	mov    DWORD PTR [ebp-0x74],0x6
  402541:	mov    edx,DWORD PTR [ebp-0x68]
  402544:	mov    BYTE PTR [edx+0x1],0x4f
  402548:	lea    eax,[ebp-0x70]
  40254b:	push   eax
  40254c:	mov    ecx,DWORD PTR [ebp-0x68]
  40254f:	push   ecx
  402550:	push   0x80000002
  402555:	call   DWORD PTR ds:0x401328
  40255b:	test   eax,eax
  40255d:	je     0x402566
  40255f:	xor    eax,eax
  402561:	jmp    0x4027b4
  402566:	mov    DWORD PTR [ebp-0x74],0x60
  40256d:	lea    edx,[ebp-0x70]
  402570:	push   edx
  402571:	push   0x40108c
  402576:	mov    eax,DWORD PTR [ebp-0x70]
  402579:	push   eax
  40257a:	call   DWORD PTR ds:0x401328
  402580:	test   eax,eax
  402582:	je     0x40258b
  402584:	xor    eax,eax
  402586:	jmp    0x4027b4
  40258b:	lea    ecx,[ebp-0x70]
  40258e:	push   ecx
  40258f:	push   0x401094
  402594:	mov    edx,DWORD PTR [ebp-0x70]
  402597:	push   edx
  402598:	call   DWORD PTR ds:0x401328
  40259e:	test   eax,eax
  4025a0:	je     0x4025a9
  4025a2:	xor    eax,eax
  4025a4:	jmp    0x4027b4
  4025a9:	lea    eax,[ebp-0x70]
  4025ac:	push   eax
  4025ad:	push   0x4010d0
  4025b2:	mov    ecx,DWORD PTR [ebp-0x70]
  4025b5:	push   ecx
  4025b6:	call   DWORD PTR ds:0x401328
  4025bc:	test   eax,eax
  4025be:	jne    0x4025c7
  4025c0:	xor    eax,eax
  4025c2:	jmp    0x4027b4
  4025c7:	call   0x402090
  4025cc:	mov    DWORD PTR [ebp-0x3c],0x0
  4025d3:	mov    DWORD PTR [ebp-0x24],0x0
  4025da:	mov    DWORD PTR [ebp-0x30],0x1
  4025e1:	mov    DWORD PTR [ebp-0x18],0x3
  4025e8:	mov    edx,DWORD PTR ds:0x401220
  4025ee:	push   edx
  4025ef:	call   0x4020b0
  4025f4:	add    esp,0x4
  4025f7:	mov    DWORD PTR [ebp-0x40],eax
  4025fa:	mov    eax,DWORD PTR [ebp-0x40]
  4025fd:	push   eax
  4025fe:	call   0x402040
  402603:	add    esp,0x4
  402606:	mov    DWORD PTR [ebp-0x38],eax
  402609:	mov    ecx,DWORD PTR [ebp-0x40]
  40260c:	push   ecx
  40260d:	push   0x0
  40260f:	mov    edx,DWORD PTR [ebp-0x38]
  402612:	push   edx
  402613:	call   0x402080
  402618:	add    esp,0xc
  40261b:	mov    eax,DWORD PTR [ebp-0x40]
  40261e:	mov    DWORD PTR [ebp-0x48],eax
  402621:	mov    ecx,DWORD PTR [ebp-0x3c]
  402624:	cmp    ecx,DWORD PTR [ebp-0x40]
  402627:	jae    0x402679
  402629:	mov    edx,DWORD PTR [ebp-0x48]
  40262c:	push   edx
  40262d:	mov    eax,DWORD PTR [ebp-0x34]
  402630:	push   eax
  402631:	call   0x402000
  402636:	add    esp,0x8
  402639:	mov    DWORD PTR [ebp-0x4c],eax
  40263c:	mov    ecx,DWORD PTR [ebp-0x4c]
  40263f:	push   ecx
  402640:	mov    edx,DWORD PTR ds:0x401220
  402646:	add    edx,DWORD PTR [ebp-0x24]
  402649:	push   edx
  40264a:	mov    eax,DWORD PTR [ebp-0x38]
  40264d:	add    eax,DWORD PTR [ebp-0x3c]
  402650:	push   eax
  402651:	call   0x4023a0
  402656:	add    esp,0xc
  402659:	mov    ecx,DWORD PTR [ebp-0x1c]
  40265c:	add    ecx,DWORD PTR [ebp-0x34]
  40265f:	add    ecx,DWORD PTR [ebp-0x24]
  402662:	mov    DWORD PTR [ebp-0x24],ecx
  402665:	mov    edx,DWORD PTR [ebp-0x3c]
  402668:	add    edx,DWORD PTR [ebp-0x34]
  40266b:	mov    DWORD PTR [ebp-0x3c],edx
  40266e:	mov    eax,DWORD PTR [ebp-0x48]
  402671:	sub    eax,DWORD PTR [ebp-0x4c]
  402674:	mov    DWORD PTR [ebp-0x48],eax
  402677:	jmp    0x402621
  402679:	mov    ecx,DWORD PTR [ebp-0x40]
  40267c:	push   ecx
  40267d:	mov    edx,DWORD PTR [ebp-0x38]
  402680:	push   edx
  402681:	call   0x402160
  402686:	add    esp,0x8
  402689:	mov    DWORD PTR [ebp-0x24],0x0
  402690:	mov    DWORD PTR [ebp-0x78],0x0
  402697:	call   0x4020a0
  40269c:	mov    eax,ds:0x401220
  4026a1:	push   eax
  4026a2:	call   0x4020b0
  4026a7:	add    esp,0x4
  4026aa:	mov    DWORD PTR [ebp-0x7c],eax
  4026ad:	mov    ecx,DWORD PTR [ebp-0x7c]
  4026b0:	push   ecx
  4026b1:	call   0x402040
  4026b6:	add    esp,0x4
  4026b9:	mov    DWORD PTR [ebp-0x20],eax
  4026bc:	mov    edx,DWORD PTR [ebp-0x7c]
  4026bf:	push   edx
  4026c0:	push   0x0
  4026c2:	mov    eax,DWORD PTR [ebp-0x20]
  4026c5:	push   eax
  4026c6:	call   0x402080
  4026cb:	add    esp,0xc
  4026ce:	mov    ecx,DWORD PTR [ebp-0x7c]
  4026d1:	mov    DWORD PTR [ebp-0x84],ecx
  4026d7:	mov    edx,DWORD PTR [ebp-0x78]
  4026da:	cmp    edx,DWORD PTR [ebp-0x7c]
  4026dd:	jae    0x402740
  4026df:	mov    eax,DWORD PTR [ebp-0x84]
  4026e5:	push   eax
  4026e6:	mov    ecx,DWORD PTR [ebp-0x34]
  4026e9:	push   ecx
  4026ea:	call   0x402000
  4026ef:	add    esp,0x8
  4026f2:	mov    DWORD PTR [ebp-0x88],eax
  4026f8:	mov    edx,DWORD PTR [ebp-0x88]
  4026fe:	push   edx
  4026ff:	mov    eax,ds:0x401220
  402704:	add    eax,DWORD PTR [ebp-0x24]
  402707:	push   eax
  402708:	mov    ecx,DWORD PTR [ebp-0x20]
  40270b:	add    ecx,DWORD PTR [ebp-0x78]
  40270e:	push   ecx
  40270f:	call   0x4023a0
  402714:	add    esp,0xc
  402717:	mov    edx,DWORD PTR [ebp-0x1c]
  40271a:	add    edx,DWORD PTR [ebp-0x34]
  40271d:	add    edx,DWORD PTR [ebp-0x24]
  402720:	mov    DWORD PTR [ebp-0x24],edx
  402723:	mov    eax,DWORD PTR [ebp-0x78]
  402726:	add    eax,DWORD PTR [ebp-0x34]
  402729:	mov    DWORD PTR [ebp-0x78],eax
  40272c:	mov    ecx,DWORD PTR [ebp-0x84]
  402732:	sub    ecx,DWORD PTR [ebp-0x88]
  402738:	mov    DWORD PTR [ebp-0x84],ecx
  40273e:	jmp    0x4026d7
  402740:	mov    edx,DWORD PTR [ebp-0x7c]
  402743:	push   edx
  402744:	mov    eax,DWORD PTR [ebp-0x20]
  402747:	push   eax
  402748:	call   0x402160
  40274d:	add    esp,0x8
  402750:	mov    ecx,DWORD PTR [ebp-0x38]
  402753:	mov    edx,DWORD PTR [ebp-0x20]
  402756:	mov    DWORD PTR [ecx],edx
  402758:	push   0x17000
  40275d:	call   0x402040
  402762:	add    esp,0x4
  402765:	mov    DWORD PTR [ebp-0xc],eax
  402768:	push   0x15500
  40276d:	mov    eax,DWORD PTR [ebp-0x38]
  402770:	push   eax
  402771:	mov    ecx,DWORD PTR [ebp-0xc]
  402774:	add    ecx,0x200
  40277a:	push   ecx
  40277b:	call   0x4023a0
  402780:	add    esp,0xc
  402783:	mov    edx,DWORD PTR [ebp-0xc]
  402786:	sub    edx,0x400000
  40278c:	push   edx
  40278d:	mov    eax,DWORD PTR [ebp-0xc]
  402790:	push   eax
  402791:	mov    ecx,DWORD PTR [ebp-0x20]
  402794:	push   ecx
  402795:	call   0x402250
  40279a:	add    esp,0xc
  40279d:	mov    ecx,DWORD PTR [ebp-0xc]
  4027a0:	add    ecx,0x15350
  4027a6:	mov    DWORD PTR ds:0x401330,ecx
  4027ac:	jmp    0x4027af
  4027ae:	ret    
  4027af:	jmp    0x4027c0
  4027b4:	mov    esp,ebp
  4027b6:	pop    ebp
  4027b7:	ret    
  4027b8:	int3   
  4027b9:	int3   
  4027ba:	int3   
  4027bb:	int3   
  4027bc:	int3   
  4027bd:	int3   
  4027be:	int3   
  4027bf:	int3   
  4027c0:	push   ebp
  4027c1:	mov    ebp,esp
  4027c3:	mov    eax,ds:0x401330
  4027c8:	pop    ecx
  4027c9:	jmp    0x4027cb
  4027cb:	call   0x4027d0
  4027d0:	mov    ecx,DWORD PTR ds:0x40132c
  4027d6:	mov    esp,ecx
  4027d8:	pop    ecx
  4027d9:	jmp    eax
  4027db:	pop    ebp
  4027dc:	ret    
  4027dd:	int3   
  4027de:	int3   
  4027df:	int3   
  4027e0:	add    BYTE PTR [ebp+0x1],dl
  4027e3:	add    BYTE PTR [ebx+0x52],ah
  4027e6:	inc    ecx
  4027e7:	add    BYTE PTR [eax+eiz*2],bl
  4027ea:	je     0x40283c
  4027ec:	adc    DWORD PTR [edx+0x63],ebp
  4027ef:	inc    ecx
  4027f0:	jmp    DWORD PTR [eax+0x72]
  4027f3:	gs lock jne 0x4027f7
  4027f7:	add    BYTE PTR [edi],ah
  4027f9:	push   0x61
  4027fb:	fs pop ds
  4027fd:	ins    BYTE PTR es:[edi],dx
  4027fe:	bound  esi,QWORD PTR [edx+0x2]
  402801:	ja     0x40287c
  402803:	inc    ebp
  402804:	fild   DWORD PTR [eax+eax*1+0x0]
  402808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402809:	push   0x61
  40280b:	fs lahf 
  40280d:	ins    BYTE PTR es:[edi],dx
  40280e:	bound  esi,QWORD PTR [edx-0x3e]
  402811:	ja     0x40288c
  402813:	inc    ebp
  402814:	mov    ebx,0x9c000052
  402819:	pusha  
  40281a:	je     0x402869
  40281c:	mov    esp,0xbe6c7561
  402821:	dec    ebp
  402822:	popa   
  402823:	outs   dx,BYTE PTR ds:[esi]
  402824:	xchg   DWORD PTR [ecx+0x65],ebp
  402827:	inc    ecx
  402828:	arpl   WORD PTR ds:0x77a00000,ax
  40282e:	gs popa 
  402830:	(bad)  
  402831:	pusha  
  402832:	inc    esi
  402833:	imul   ecx,DWORD PTR [edi-0x78ffbea0],0x80727476
  40283d:	fs je  0x402881
  402840:	arpl   WORD PTR ds:0x60240000,ax
  402846:	je     0x40289f
	...
  402854:	add    BYTE PTR [eax],al
  402856:	add    BYTE PTR [edx+0x6b],cl
  402859:	outs   dx,DWORD PTR fs:[esi]
  40285b:	push   esp
  40285c:	jbe    0x4028a2
  40285e:	imul   edx,DWORD PTR [ecx+0x60],0x774c7463
  402865:	jns    0x4028a8
  402867:	arpl   WORD PTR ds:0x60240000,ax
  40286d:	je     0x4028bc
  40286f:	xor    al,0x61
  402871:	jne    0x4028df
  402873:	push   es
  402874:	dec    ebp
  402875:	popa   
  402876:	outs   dx,BYTE PTR ds:[esi]
  402877:	jmp    FWORD PTR [eax+0x65]
  40287a:	push   edi
  40287b:	arpl   WORD PTR ds:0x75f0000,ax
  402881:	inc    eax
  402882:	add    BYTE PTR [edi+0x7],dl
  402885:	inc    eax
  402886:	add    BYTE PTR [edi],bh
  402888:	pop    es
  402889:	inc    eax
  40288a:	add    BYTE PTR [edi],dh
  40288c:	pop    es
  40288d:	inc    eax
  40288e:	add    BYTE PTR [ebx],bl
  402890:	pop    es
  402891:	inc    eax
  402892:	add    BYTE PTR [edi-0x3cffbffd],dh
  402898:	add    eax,DWORD PTR [eax+0x0]
  40289b:	retf   
  40289c:	add    eax,DWORD PTR [eax+0x0]
  40289f:	pushf  
  4028a0:	bound  esi,QWORD PTR [eax+edx*2-0x4f]
  4028a4:	push   0x61bf4163
  4028a9:	jb     0x402910
  4028ab:	mov    al,0x74
  4028ad:	add    BYTE PTR [eax],al
  4028af:	xchg   edi,eax
  4028b0:	push   0x6eaf6461
  4028b5:	bound  esi,QWORD PTR [edx-0x7e]
  4028b8:	jae    0x402933
  4028ba:	inc    ebp
	...
  4028c7:	add    BYTE PTR [eax],al
  4028c9:	add    BYTE PTR [ebx+0x78000046],cl
  4028cf:	bound  esi,QWORD PTR [edx+0x6e]
  4028d2:	xchg   BYTE PTR [ecx+0x33],ch
  4028d5:	xor    al,BYTE PTR [ebp+0x61]
  4028d8:	ins    BYTE PTR es:[edi],dx
  4028d9:	ins    BYTE PTR es:[edi],dx
  4028da:	arpl   WORD PTR ds:0x74760000,ax
  4028e0:	jbe    0x402945
  4028e2:	push   ecx
  4028e3:	jno    0x402913
  4028e5:	fs inc edi
  4028e7:	imul   eax,DWORD PTR [eax],0x6d623e00
  4028ed:	jae    0x40292d
  4028ef:	jno    0x4028f1
  4028f1:	add    BYTE PTR [esi+0x74],cl
  4028f4:	jbe    0x402959
  4028f6:	xor    DWORD PTR [ecx+0x2e],esi
  4028f9:	fs aas 
  4028fb:	imul   eax,DWORD PTR [eax],0x6d623600
  402901:	arpl   WORD PTR [ebx],dx
  402903:	jle    0x402905
  402905:	add    BYTE PTR ds:0x1674726e,ch
  40290b:	data16 ins BYTE PTR es:[edi],dx
  40290d:	inc    ecx
  40290e:	imul   DWORD PTR [eax+0x6f]
  402911:	arpl   WORD PTR [ebx+0x5],sp
  402914:	add    BYTE PTR [eax],al
  402916:	or     eax,0xf674726e
  40291b:	gs ins BYTE PTR es:[edi],dx
  40291d:	inc    ecx
  40291e:	imul   DWORD PTR [eax+0x6f]
  402921:	arpl   WORD PTR [ebx+0x5],sp
  402924:	add    BYTE PTR [eax],al
  402926:	scas   al,BYTE PTR es:[edi]
  402927:	ins    DWORD PTR es:[di],dx
  402929:	popa   
  40292a:	ror    DWORD PTR [edi+0x69],cl
  40292d:	add    BYTE PTR gs:[eax],al
	...
  40293c:	add    ah,cl
  40293e:	dec    eax
  40293f:	inc    si
  402941:	retf   0x6569
  402944:	add    BYTE PTR [ebp-0x498b8d92],cl
  40294a:	data16 ins BYTE PTR es:[edi],dx
  40294c:	push   eax
  40294d:	mov    cl,0x68
  40294f:	je     0x4029b6
  402951:	xor    BYTE PTR [ecx+0x0],0x0
  402955:	stos   DWORD PTR es:[edi],eax
  402956:	bound  esp,QWORD PTR [ecx+0x70]
  402959:	mov    ds:0x806f6c69,al
  40295e:	add    eax,0x62880000
  402963:	jb     0x4029d3
  402965:	jle    0x4029d0
  402967:	xor    esi,DWORD PTR [edx]
  402969:	cmp    eax,0x636c6c61
  40296e:	add    eax,0x62240000
  402973:	je     0x4029c5
  402975:	push   ecx
  402976:	push   0x74506563
  40297b:	dec    eax
  40297c:	gs inc edx
  40297e:	jne    0x402980
  402980:	add    BYTE PTR [ebx+0x5],ah
  402983:	inc    esp
  402984:	add    DWORD PTR [ebx-0x5f],esp
  402987:	pop    ecx
  402988:	nop
  402989:	arpl   bx,bp
  40298b:	add    eax,DWORD PTR [eax]
  40298d:	arpl   dx,bp
  40298f:	add    eax,DWORD PTR [eax]
  402991:	arpl   di,si
  402993:	sti    
  402994:	add    BYTE PTR [ebx+0x36],ah
  402997:	add    eax,DWORD PTR [eax]
  402999:	arpl   si,bp
  40299b:	add    eax,DWORD PTR [eax]
  40299d:	arpl   WORD PTR [esi],bp
  40299f:	add    al,0x0
	...
  4029ad:	add    BYTE PTR [eax],al
  4029af:	add    BYTE PTR [ebx-0x12],ah
  4029b2:	add    eax,DWORD PTR [eax]
  4029b4:	arpl   si,bp
  4029b6:	add    eax,DWORD PTR [eax]
  4029b8:	arpl   si,bp
  4029ba:	add    eax,DWORD PTR [eax]
  4029bc:	arpl   si,bp
  4029be:	add    eax,DWORD PTR [eax]
  4029c0:	arpl   sp,bp
  4029c2:	add    eax,DWORD PTR [eax]
  4029c4:	arpl   sp,bp
  4029c6:	add    eax,DWORD PTR [eax]
  4029c8:	arpl   sp,bp
  4029ca:	add    eax,DWORD PTR [eax]
  4029cc:	arpl   sp,bp
  4029ce:	add    eax,DWORD PTR [eax]
  4029d0:	arpl   WORD PTR [esp+eax*1+0x0],bp
  4029d4:	arpl   si,bx
  4029d6:	sbb    bh,BYTE PTR [edx+0x9afec5d]
  4029dc:	push   ss
  4029dd:	into   
  4029de:	mov    ebx,0x25a9af01
  4029e3:	push   esp
  4029e4:	mov    eax,DWORD PTR ds:0xfa932077
  4029ea:	push   0x67
  4029ec:	xchg   ecx,eax
  4029ed:	int    0x68
  4029ef:	and    BYTE PTR [eax-0x7b919633],al
  4029f5:	fsub   DWORD PTR [ebx]
  4029f7:	bound  eax,QWORD PTR [esi+0x7575760c]
  4029fd:	or     al,0x6d
  4029ff:	outs   dx,BYTE PTR ds:[esi]
  402a00:	and    DWORD PTR [eax-0x3e7cacb6],0x6a
  402a07:	fs inc esi
  402a09:	test   BYTE PTR [eax],0xd
  402a0c:	pop    ecx
  402a0d:	add    eax,0x56303cd
  402a12:	jmp    0x402a1a
	...
  402a23:	arpl   WORD PTR ds:0x56340b9,ax
  402a29:	popf   
  402a2a:	add    al,0x60
  402a2c:	add    eax,0x46fc1faa
  402a31:	jmp    0xe9458d39
  402a36:	add    esp,DWORD PTR [ebx+0x5]
  402a39:	or     DWORD PTR [esp+edx*2],eax
  402a3c:	add    al,0xf2
  402a3e:	add    al,0x61
  402a40:	xor    ebp,ecx
  402a42:	stc    
  402a43:	arpl   WORD PTR ds:0x5634de9,ax
  402a49:	jmp    0x55458d51
  402a4e:	in     eax,dx
  402a4f:	arpl   WORD PTR ds:0x56313e9,ax
  402a55:	jmp    0xe9458c6d
  402a5a:	add    esp,DWORD PTR [ebx+0x6313e905]
  402a60:	add    eax,0x56305e9
  402a65:	in     eax,dx
  402a66:	add    esp,DWORD PTR [ebx+0x5]
  402a69:	jmp    0xed458d71
  402a6e:	add    esp,DWORD PTR [ebx+0x5]
  402a71:	jmp    0xe9458d79
  402a76:	jae    0x402ada
  402a78:	add    eax,0x56305e9
  402a7d:	mov    eax,0xeb0562ae
  402a82:	add    esp,DWORD PTR [ebx+0x5]
  402a85:	jmp    0x402a8d
	...
  402a96:	push   ebx
  402a97:	add    eax,0x56313e9
  402a9c:	jmp    0xe9459da4
  402aa1:	adc    esp,DWORD PTR [ebx+0x5]
  402aa4:	add    cl,ch
  402aa6:	pusha  
  402aa7:	add    eax,0x560d900
  402aac:	add    cl,ch
  402aae:	pusha  
  402aaf:	add    eax,0x560e900
  402ab4:	add    BYTE PTR ds:0x21000412,dh
  402aba:	pusha  
  402abb:	add    eax,0x560e900
  402ac0:	add    cl,ch
  402ac2:	pusha  
  402ac3:	add    eax,0x560e900
  402ac8:	add    cl,ch
  402aca:	pusha  
  402acb:	add    eax,0x560e900
  402ad0:	add    cl,ch
  402ad2:	pusha  
  402ad3:	add    eax,0x560e900
  402ad8:	add    cl,ch
  402ada:	pusha  
  402adb:	add    eax,0x560e900
  402ae0:	add    cl,ch
  402ae2:	pusha  
  402ae3:	add    eax,0x560e900
  402ae8:	add    cl,ch
  402aea:	pusha  
  402aeb:	add    eax,0x560e900
  402af0:	add    cl,ch
  402af2:	pusha  
  402af3:	add    eax,0x560e900
  402af8:	add    cl,ch
	...
  402b06:	add    BYTE PTR [eax],al
  402b08:	add    BYTE PTR [eax+0x5],ah
  402b0b:	add    cl,ch
  402b0d:	pusha  
  402b0e:	add    eax,0x560e900
  402b13:	add    cl,ch
  402b15:	pusha  
  402b16:	add    eax,0x560e900
  402b1b:	add    BYTE PTR [ecx],bl
  402b1d:	cwde   
  402b1e:	push   es
  402b1f:	add    BYTE PTR [ebp+0x60],ch
  402b22:	add    eax,0x560e900
  402b27:	add    cl,ch
  402b29:	pusha  
  402b2a:	add    eax,0x8ca0000
  402b2f:	add    BYTE PTR [eax],al
  402b31:	retf   0x8
  402b34:	add    BYTE PTR [edx-0x45fffff8],bh
  402b3a:	or     BYTE PTR [eax],al
  402b3c:	add    BYTE PTR [esp+eiz*2+0x8ce7865],dl
  402b43:	add    BYTE PTR [eax],al
  402b45:	inc    ecx
  402b46:	cld    
  402b47:	add    BYTE PTR [eax],al
  402b49:	mov    edx,0x8a000018
  402b4e:	out    dx,al
  402b4f:	add    BYTE PTR [eax],al
  402b51:	mov    cl,BYTE PTR [edx]
  402b53:	add    BYTE PTR [eax],al
  402b55:	jp     0x402b5f
  402b57:	add    BYTE PTR [eax],al
  402b59:	jp     0x402b63
  402b5b:	add    BYTE PTR [eax],al
  402b5d:	mov    cl,BYTE PTR [eax]
  402b5f:	add    BYTE PTR [eax],al
  402b61:	push   0x9
  402b63:	add    BYTE PTR [eax+0x64],ah
  402b66:	jnp    0x402bcc
  402b68:	popa   
  402b69:	push   cs
  402b6a:	push   0x0
	...
  402b7b:	add    BYTE PTR [edx+0x7],cl
  402b7e:	add    BYTE PTR [eax],al
  402b80:	dec    edx
  402b81:	sbb    BYTE PTR [ecx],al
  402b83:	add    BYTE PTR [edx],bh
  402b85:	or     al,BYTE PTR [eax]
  402b87:	add    BYTE PTR [edx],bh
  402b89:	or     BYTE PTR [ecx],al
  402b8b:	add    BYTE PTR [edx+0x8],cl
  402b8e:	add    BYTE PTR [eax],al
  402b90:	dec    edx
  402b91:	or     BYTE PTR [eax],al
  402b93:	add    BYTE PTR [edx],bh
  402b95:	or     BYTE PTR [eax],al
  402b97:	add    BYTE PTR [edx+0x9],bh
  402b9a:	add    BYTE PTR [eax+0x34],al
  402b9d:	push   esp
  402b9e:	popa   
  402b9f:	je     0x402c0c
  402ba1:	or     DWORD PTR [eax],eax
  402ba3:	add    BYTE PTR [edx],dl
  402ba5:	inc    esi
  402ba6:	add    BYTE PTR [eax],al
  402ba8:	cli    
  402ba9:	daa    
  402baa:	add    DWORD PTR [eax],eax
  402bac:	or     cl,BYTE PTR [edx+0x0]
  402baf:	add    BYTE PTR [edx],cl
  402bb1:	or     al,BYTE PTR [ecx]
  402bb3:	add    BYTE PTR [ebx-0x22],ah
  402bb6:	add    eax,DWORD PTR [eax]
  402bb8:	arpl   si,bx
  402bba:	add    eax,DWORD PTR [eax]
  402bbc:	arpl   si,bx
  402bbe:	add    eax,DWORD PTR [eax]
  402bc0:	arpl   WORD PTR [esi-0x225cfffd],bx
  402bc6:	add    eax,DWORD PTR [eax]
  402bc8:	arpl   si,bx
  402bca:	add    eax,DWORD PTR [eax]
  402bcc:	arpl   si,bx
  402bce:	add    eax,DWORD PTR [eax]
  402bd0:	arpl   si,bx
  402bd2:	add    eax,DWORD PTR [eax]
  402bd4:	arpl   WORD PTR [ecx-0x2ec41374],si
  402bda:	adc    eax,DWORD PTR [eax+0x63]
  402bdd:	push   es
  402bde:	jne    0x402be1
	...
  402bec:	add    BYTE PTR [eax],al
  402bee:	add    BYTE PTR [eax+0x5b75f7f2],ah
  402bf4:	mov    BYTE PTR [edx],al
  402bf6:	push   0x63
  402bf8:	push   es
  402bf9:	mov    esp,0xccde63da
  402bfe:	ret    0xde5f
  402c01:	push   eax
  402c02:	mov    edi,DWORD PTR [edi+0x45]
  402c05:	sub    dl,BYTE PTR [eax]
  402c07:	and    ebx,esi
  402c09:	sti    
  402c0a:	jb     0x402c6e
  402c0c:	lahf   
  402c0d:	test   DWORD PTR [ebx+0x7403f4d6],0x8516758
  402c17:	fmul   st,st(6)
  402c19:	div    BYTE PTR [ebp+0x6b]
  402c1c:	stos   DWORD PTR es:[edi],eax
  402c1d:	push   edx
  402c1e:	or     BYTE PTR [edx],ch
  402c20:	lahf   
  402c21:	add    BYTE PTR [eax],al
  402c23:	xchg   esi,eax
  402c24:	addr16 call 0x6cd54bad
  402c2a:	dec    edi
  402c2b:	jae    0x402c49
  402c2d:	add    al,0xf8
  402c2f:	xchg   ecx,eax
  402c30:	ffree  st(2)
  402c32:	dec    DWORD PTR [edx+esi*8]
  402c35:	pop    es
  402c36:	(bad)  
  402c37:	sahf   
  402c38:	je     0x402bf9
  402c3a:	inc    ebp
  402c3b:	inc    DWORD PTR ds:0x56303e9
  402c41:	jb     0x402c94
  402c43:	pop    ebx
  402c44:	jle    0x402c41
  402c46:	imul   esp,DWORD PTR [ebx-0xe],0x78dc13d4
  402c4d:	inc    ebp
  402c4e:	test   DWORD PTR [esi-0x13],0x713e
	...
  402c61:	add    BYTE PTR [ebx-0xe],bl
  402c64:	fwait
  402c65:	setp   bh
  402c68:	fld    QWORD PTR [ebx]
  402c6a:	push   ss
  402c6b:	jle    0x402c82
  402c6d:	sbb    DWORD PTR [edi+0x537d91ed],0x45
  402c74:	jmp    0x2a445e74
  402c79:	mul    DWORD PTR [eax+ecx*2+0x5630401]
  402c80:	jmp    0xea315343
  402c85:	add    esp,DWORD PTR [ebx+0x5]
  402c88:	bound  edx,QWORD PTR [ecx+0x6b]
  402c8b:	jle    0x402c88
  402c8d:	mov    BYTE PTR [esi],bl
  402c8f:	in     eax,dx
  402c90:	cmp    DWORD PTR [edx+0x61],ebp
  402c93:	repnz pop esp
  402c95:	clc    
  402c96:	fs js  0x402c6a
  402c99:	not    dh
  402c9b:	std    
  402c9c:	lds    edx,FWORD PTR [ecx+0x6f]
  402c9f:	jle    0x402cc5
  402ca1:	cld    
  402ca2:	sbb    al,bh
  402ca4:	in     eax,dx
  402ca5:	add    ebp,DWORD PTR [esi+0x2782bd7e]
  402cab:	in     eax,dx
  402cac:	adc    edx,eax
  402cae:	push   ebx
  402caf:	inc    ebp
  402cb0:	jmp    0xaa44deb0
  402cb5:	neg    BYTE PTR [eax+ecx*2]
  402cb8:	xchg   ecx,eax
  402cb9:	add    esp,DWORD PTR [ebx+0x5]
  402cbc:	jmp    0xea31cb7f
  402cc1:	add    esp,DWORD PTR [ebx+0x5]
  402cc4:	add    BYTE PTR [edx+0x0],ah
	...
  402cd3:	add    BYTE PTR [eax],al
  402cd5:	mov    bl,0xfd
  402cd7:	mov    bl,bl
  402cd9:	jmp    0x402d22
  402cdb:	clc    
  402cdc:	mov    ecx,0xd4ff048a
  402ce1:	hlt    
  402ce2:	icebp  
  402ce3:	jne    0x402d36
  402ce5:	in     eax,dx
  402ce6:	ja     0x402cf0
  402ce8:	dec    esi
  402ce9:	xor    bl,BYTE PTR [ecx]
  402ceb:	(bad)  
  402cec:	mov    esp,0x3e87dd68
  402cf1:	aad    0xf1
  402cf3:	push   eax
  402cf4:	bound  esi,QWORD PTR [ebx]
  402cf6:	std    
  402cf7:	mov    bl,bl
  402cf9:	dec    edx
  402cfa:	add    eax,0x77ade96a
  402cff:	cld    
  402d00:	push   ds
  402d01:	xor    ebp,ebp
  402d03:	call   FWORD PTR [eax+ebx*2+0x38f552f2]
  402d0a:	jle    0x402d61
  402d0c:	add    DWORD PTR [ecx+0x58],esp
  402d0f:	or     al,0xc2
  402d11:	mov    al,0x7a
  402d13:	push   es
  402d14:	ret    0xbba0
  402d17:	ret    0x60e1
  402d1a:	lods   eax,DWORD PTR ds:[esi]
  402d1b:	add    ecx,ebp
  402d1d:	pusha  
  402d1e:	add    eax,0x55fabc9
  402d23:	push   ebp
  402d24:	bound  edi,QWORD PTR [ebx-0x7b]
  402d27:	(bad)  
  402d28:	int    0xcf
  402d2a:	and    BYTE PTR [ecx],dl
  402d2c:	sub    DWORD PTR [edi-0x13],ebx
  402d2f:	jb     0x402d19
  402d31:	and    esi,ecx
  402d33:	(bad)  
  402d34:	cmp    al,0x6f
  402d36:	lock jne 0x402d1a
	...
  402d45:	add    BYTE PTR [eax],al
  402d47:	add    BYTE PTR [eax+0x6e],cl
  402d4a:	jmp    DWORD PTR [esi+0x14bffd2e]
  402d50:	arpl   WORD PTR [esi+0x7c60e5c2],di
  402d56:	push   ebp
  402d57:	loope  0x402d44
  402d59:	adc    ecx,DWORD PTR [ebp+0x50ed4700]
  402d5f:	call   DWORD PTR [edi]
  402d61:	adc    eax,0xf9fe75ff
  402d66:	jne    0x402d70
  402d68:	lea    edx,[ebx+0xc]
  402d6b:	test   DWORD PTR [edx+0x71],ecx
  402d6e:	adc    ecx,DWORD PTR [ebx+0x453bf8c7]
  402d74:	jmp    0x4:0xcbb8075f
  402d7b:	add    BYTE PTR [ecx],dh
  402d7d:	out    dx,eax
  402d7e:	sub    al,al
  402d80:	xor    DWORD PTR [ebx],eax
  402d82:	sub    eax,eax
  402d84:	add    ebx,0xc
  402d87:	add    bh,dl
  402d89:	jge    0x402d77
  402d8b:	add    DWORD PTR [esi+0x476856ed],0x14
  402d92:	inc    eax
  402d93:	add    BYTE PTR [edx+0x73],dl
  402d96:	add    ebx,eax
  402d98:	ins    DWORD PTR es:[edi],dx
  402d99:	xchg   BYTE PTR [ebp+0xc],bh
  402d9c:	mov    ah,BYTE PTR [eax+0x6]
  402d9f:	or     DWORD PTR [edi],0xfffffffc
  402da2:	push   DWORD PTR [ebp+esi*2+0x1d]
  402da6:	rcr    BYTE PTR [esi+0x43],0xc3
  402daa:	or     al,0x0
	...
  402db8:	add    BYTE PTR [eax],al
  402dba:	add    BYTE PTR [ecx],cl
  402dbc:	ja     0x402dce
  402dbe:	add    BYTE PTR [edi],dl
  402dc0:	sti    
  402dc1:	mov    bh,0x1
  402dc3:	jp     0x402dc9
  402dc5:	add    BYTE PTR [esi+0x3],bl
  402dc8:	(bad)  
  402dc9:	or     al,0x0
  402dcb:	rcr    DWORD PTR [edi+0xc],1
  402dce:	mov    DWORD PTR [edi+0x3a0000ed],0x42558b04
  402dd8:	jge    0x402dec
  402dda:	lea    eax,[edi+0x57ff50ed]
  402de0:	sbb    DWORD PTR [esi-0x1],edx
  402de3:	arpl   WORD PTR [ecx],dx
  402de5:	or     al,0xff
  402de7:	mov    cl,0xee
  402de9:	jle    0x402dab
  402deb:	call   0xc1b5:0xadc028df
  402df2:	or     al,0x63
  402df4:	pop    ebx
  402df5:	jbe    0x402df3
  402df7:	arpl   cx,di
  402df9:	cld    
  402dfa:	sub    ah,BYTE PTR [ebx]
  402dfc:	enter  0xc2ca,0x5f
  402e00:	fimul  WORD PTR [eax-0xc2518bb]
  402e06:	sub    DWORD PTR [esi],esp
  402e08:	out    dx,al
  402e09:	outs   dx,BYTE PTR ds:[esi]
  402e0a:	les    ebx,FWORD PTR [ebx]
  402e0c:	fld    QWORD PTR [ebx]
  402e0e:	add    BYTE PTR [ebx-0x70],ah
  402e11:	retf   0x57c2
  402e14:	fimul  WORD PTR [esi-0x75]
  402e17:	iret   
  402e18:	pop    esp
  402e19:	mov    edi,0xf426c4f8
  402e1e:	push   0x0
	...
  402e2b:	add    BYTE PTR [eax],al
  402e2d:	add    BYTE PTR [edi-0x14],ah
  402e30:	inc    ebx
  402e31:	add    BYTE PTR [ebx-0x633cfd75],ch
  402e37:	add    DWORD PTR [ebx],0x6a
  402e3a:	arpl   WORD PTR [eax+eax*1+0x94636a],dx
  402e41:	push   0x8003de63
  402e46:	jl     0x402ec0
  402e48:	or     ebp,eax
  402e4a:	loop   0x402dfa
  402e4c:	add    al,0x0
  402e4e:	fisubr DWORD PTR [eax]
  402e50:	lock inc eax
  402e52:	out    dx,al
  402e53:	loope  0x402e11
  402e55:	ret    0xdc6b
  402e58:	pop    ebp
  402e59:	add    dh,ah
  402e5b:	and    esp,ebp
  402e5d:	push   eax
  402e5e:	mov    ebx,0x630013dc
  402e63:	imul   ecx,DWORD PTR [ecx-0xc5fb308],0x1c063450
  402e6d:	lock cmp esp,DWORD PTR [ebx-0x4a]
  402e71:	add    al,0x63
  402e73:	cli    
  402e74:	test   al,0x79
  402e76:	ins    DWORD PTR es:[edi],dx
  402e77:	out    dx,al
  402e78:	adc    al,0xf0
  402e7a:	or     edx,DWORD PTR [ecx-0x62]
  402e7d:	add    al,0x63
  402e7f:	sbb    ch,BYTE PTR [ecx-0x1701de43]
  402e85:	bnd jbe 0x402e75
  402e88:	pop    esp
  402e89:	mov    ebx,edi
  402e8b:	fisub  WORD PTR [esi-0xd]
  402e8e:	xchg   ebx,eax
  402e8f:	out    dx,al
  402e90:	aam    0xff
	...
  402e9e:	add    BYTE PTR [eax],al
  402ea0:	add    ah,bh
  402ea2:	adc    al,0x56
  402ea4:	repz fadd QWORD PTR [edx+0x7863ebcc]
  402eab:	test   ebx,esi
  402ead:	push   esi
  402eae:	icebp  
  402eaf:	push   ecx
  402eb0:	cmp    ebp,DWORD PTR [ebp+eax*1+0x562abe9]
  402eb7:	jmp    0xf203d8bf
  402ebc:	add    edx,DWORD PTR [esi]
  402ebe:	jp     0x402ecd
  402ec0:	pop    esp
  402ec1:	fcom   QWORD PTR [ebx]
  402ec3:	test   eax,0xe8739b03
  402ec8:	(bad)  
  402ec9:	xchg   esp,eax
  402eca:	pop    ebx
  402ecb:	jmp    0x402f2a
  402ecd:	arpl   si,bp
  402ecf:	je     0x402ecc
  402ed1:	jl     0x402e74
  402ed3:	hlt    
  402ed4:	bnd jl 0x402e93
  402ed7:	sub    ecx,DWORD PTR [eax]
  402ed9:	arpl   WORD PTR [eax+0x72],bx
  402edc:	(bad)  
  402ede:	test   al,0xfb
  402ee0:	inc    ebx
  402ee1:	arpl   bp,bp
  402ee3:	pop    ebx
  402ee4:	add    eax,0x443ee20
  402ee9:	leave  
  402eea:	add    eax,0xdd5b78c6
  402eef:	outs   dx,BYTE PTR ds:[esi]
  402ef0:	lock inc esp
  402ef2:	out    dx,al
  402ef3:	add    BYTE PTR [eax+0x14000926],ah
  402ef9:	mov    ah,0xe1
  402efb:	sub    DWORD PTR [ebp-0x43ba2c8],0xffffffa0
  402f02:	add    eax,0x1bf8
	...
  402f13:	add    BYTE PTR [esi-0x3e],ah
  402f16:	dec    DWORD PTR [esi+0x2c8f019b]
  402f1c:	inc    ebp
  402f1e:	inc    ebp
  402f1f:	jge    0x402f81
  402f21:	add    eax,0x59ee900
  402f26:	push   esp
  402f28:	hlt    
  402f29:	out    dx,al
  402f2a:	jne    0x402f1d
  402f2c:	or     BYTE PTR [ebp+edi*8+0x5e],ah
  402f30:	icebp  
  402f31:	jns    0x402f88
  402f33:	loope  0x402f92
  402f35:	adc    edi,edi
  402f37:	aam    0xc4
  402f39:	in     eax,dx
  402f3a:	jne    0x402f7d
  402f3c:	shl    DWORD PTR [edi+0x8],1
  402f3f:	ds cs or eax,0xedb82bc9
  402f46:	push   esp
  402f47:	bound  edx,QWORD PTR [esp+ebx*2+0x520fa00]
  402f4e:	clc    
  402f4f:	fwait
  402f50:	pop    edi
  402f51:	ret    0x83ff
  402f54:	pusha  
  402f55:	out    dx,al
  402f56:	jne    0x402f39
  402f58:	mov    eax,0x9106ff9a
  402f5d:	mov    ebx,0x5860e5c2
  402f62:	mov    eax,DWORD PTR ds:0x6a1457fd
  402f68:	inc    esi
  402f69:	add    eax,0xc2a9ed75
  402f6e:	adc    cl,ch
  402f70:	jae    0x402fe9
  402f72:	adc    dh,dl
  402f74:	aam    0xf9
  402f76:	(bad)  
  402f77:	push   esp
	...
  402f84:	add    BYTE PTR [eax],al
  402f86:	add    BYTE PTR [edi-0x1b],dl
  402f89:	hlt    
  402f8a:	add    BYTE PTR [edi],ah
  402f8c:	idiv   edi
  402f8e:	mov    ebp,DWORD PTR [edi+0xd]
  402f91:	and    DWORD PTR [edx],eax
  402f93:	add    eax,esp
  402f95:	adc    BYTE PTR [eax],al
  402f97:	dec    edi
  402f98:	push   0xffffffec
  402f9a:	cmp    esi,0xfffffff5
  402f9d:	push   DWORD PTR [ebp+0x36]
  402fa0:	dec    ebx
  402fa1:	add    al,0x8d
  402fa3:	dec    edi
  402fa4:	cmc    
  402fa5:	push   eax
  402fa6:	jmp    FWORD PTR [edi-0x17]
  402fa9:	out    0xc3,eax
  402fab:	in     eax,0xf6
  402fad:	dec    DWORD PTR [ebx+0x3883053f]
  402fb3:	or     dh,BYTE PTR [ebp+0x7]
  402fb6:	mov    edi,DWORD PTR [edi]
  402fb8:	cmc    
  402fb9:	bswap  eax
  402fbb:	xchg   ecx,eax
  402fbc:	add    ebp,DWORD PTR [ebx]
  402fbe:	shl    BYTE PTR [ebx],0xc3
  402fc1:	or     BYTE PTR [eax],al
  402fc3:	pop    ds
  402fc4:	push   0xffffffec
  402fc6:	cmp    DWORD PTR [esi-0xb],0xffffffff
  402fca:	jne    0x402fa2
  402fcc:	dec    edx
  402fcd:	add    cl,BYTE PTR [ebp-0xaf0901]
  402fd3:	push   eax
  402fd5:	out    0x97,eax
  402fd7:	test   esi,esi
  402fd9:	dec    DWORD PTR [ebx+0x3882ecff]
  402fdf:	mov    edx,0x3d0f0874
  402fe4:	inc    esp
  402fe5:	inc    BYTE PTR [esi+0x2b02ca3e]
	...
  402ff7:	add    BYTE PTR [eax],al
  402ff9:	add    BYTE PTR [edx],bh
  402ffb:	mov    al,0xc2
  402ffd:	or     BYTE PTR [edx+0x53],bh
  403000:	mov    ebp,esp
  403002:	or     DWORD PTR [ebp-0x14100004],edi
  403008:	imul   eax,DWORD PTR [ecx],0x50ff42f7
  40300e:	test   DWORD PTR [ebx+0x8],esi
  403011:	call   0x317879
  403016:	push   esp
  403017:	addr16 inc esi
  403019:	or     al,0xe0
  40301b:	add    eax,0xdb5d7404
  403020:	mov    ecx,0x5c73c45
  403025:	sub    esp,DWORD PTR [ebx]
  403027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403028:	lds    ecx,FWORD PTR [eax]
  40302a:	arpl   WORD PTR [ecx],bp
  40302c:	jge    0x40301a
  40302e:	fdiv   DWORD PTR [eax]
  403030:	adc    al,0x83
  403032:	pop    ecx
  403033:	fidiv  WORD PTR [esi+0x4]
  403036:	sub    ah,BYTE PTR [eax-0x16f20001]
  40303c:	(bad)  
  40303d:	dec    BYTE PTR [esi-0x1f240a]
  403043:	jb     0x403035
  403045:	or     esp,DWORD PTR [ebx]
  403047:	icebp  
  403048:	cld    
  403049:	mov    dl,BYTE PTR [esi+0x6302c8ee]
  40304f:	fiadd  WORD PTR [ebx]
  403051:	add    al,cl
  403053:	loopne 0x4030b2
  403055:	add    esp,edx
  403057:	sar    bh,1
  403059:	(bad)  
  40305a:	push   esi
  40305b:	neg    bl
  40305d:	push   ecx
	...
  40306a:	add    BYTE PTR [eax],al
  40306c:	add    bh,al
  40306e:	sub    dh,al
  403070:	leave  
  403071:	mov    eax,ds:0xe85503e1
  403076:	sub    DWORD PTR [esp+eax*8+0x757cabaf],eax
  40307d:	push   edi
  40307e:	cwde   
  40307f:	add    ecx,DWORD PTR [ebp-0xacedda]
  403085:	push   cs
  403086:	out    dx,al
  403087:	pop    ecx
  403088:	call   DWORD PTR [esi]
  40308a:	neg    bl
  40308c:	mov    al,ds:0xb03ddae
  403091:	mov    ds:0xf6830969,eax
  403096:	fld    DWORD PTR [edx]
  403098:	jne    0x4030fe
  40309a:	add    eax,0xbe05c412
  40309f:	stos   DWORD PTR es:[edi],eax
  4030a0:	add    BYTE PTR [ebx+0x7e],ah
  4030a3:	sub    al,0xf0
  4030a5:	pusha  
  4030a6:	cmc    
  4030a7:	add    BYTE PTR [ecx+0x73],cl
  4030aa:	jo     0x403046
  4030ac:	lods   al,BYTE PTR ds:[esi]
  4030ad:	bound  eax,QWORD PTR ds:0xbc9d03e9
  4030b3:	stos   DWORD PTR es:[edi],eax
  4030b4:	add    BYTE PTR [ebx+0x50],ah
  4030b7:	(bad)  
  4030b8:	loopne 0x40309c
  4030ba:	shl    DWORD PTR [ecx],0xef
  4030bd:	and    al,0xeb
  4030bf:	cmp    bl,BYTE PTR [ebx]
  4030c1:	cmp    BYTE PTR [eax-0x17],ah
  4030c4:	pop    ecx
  4030c5:	arpl   WORD PTR [edi-0x15],bx
  4030c8:	pop    ecx
  4030c9:	arpl   WORD PTR [edi-0x16],bx
  4030cc:	pop    ebx
  4030cd:	arpl   WORD PTR ds:0xc3e9,ax
	...
  4030df:	add    ah,bh
  4030e1:	jo     0x4030c8
  4030e3:	fistp  DWORD PTR [ebp-0x25fc1630]
  4030e9:	inc    eax
  4030ea:	gs inc esp
  4030ec:	outs   dx,DWORD PTR ds:[esi]
  4030ed:	push   esi
  4030ee:	pop    esi
  4030ef:	jns    0x40315c
  4030f1:	fstp   QWORD PTR [edx]
  4030f3:	out    dx,al
  4030f4:	aam    0xea
  4030f6:	es dec ecx
  4030f8:	retf   
  4030f9:	add    eax,0x7e6303e9
  4030fe:	xchg   esp,eax
  4030ff:	sti    
  403100:	jmp    0xbb89951c
  403105:	push   ebp
  403106:	rol    DWORD PTR [ebx-0x7f16fa9d],0xde
  40310d:	ins    DWORD PTR es:[edi],dx
  40310e:	push   ds
  40310f:	out    dx,eax
  403110:	pushf  
  403111:	push   ebp
  403112:	push   ss
  403113:	jns    0x403180
  403115:	jmp    0x401:0x68e1ffbb
  40311c:	push   cs
  40311d:	push   es
  40311e:	stos   BYTE PTR es:[edi],al
  40311f:	ficomp DWORD PTR [ebx-0x16]
  403122:	add    BYTE PTR [eax+ecx*4+0x78],bh
  403126:	test   DWORD PTR [ecx+0x7d],esi
  403129:	jmp    0xd1fc:0x707439ff
  403130:	mov    bh,0xea
  403132:	call   esi
  403134:	pop    ecx
  403135:	stos   BYTE PTR es:[edi],al
  403136:	je     0x403123
  403138:	sub    DWORD PTR [eax-0x22acc301],ebp
  40313e:	stc    
  40313f:	xchg   ebp,eax
  403140:	pusha  
  403141:	add    eax,0xaa8b
	...
  403152:	add    BYTE PTR [ecx+0x60e1c2bc],ch
  403158:	push   eax
  403159:	mov    edx,DWORD PTR [ebp-0x61073f1f]
  40315f:	fwait
  403160:	stc    
  403161:	out    0x5b,eax
  403163:	or     edx,ebp
  403165:	jmp    DWORD PTR [eax-0x65]
  403168:	in     eax,dx
  403169:	(bad)  
  40316a:	sub    al,0x13
  40316c:	add    eax,0xea60e900
  403171:	jne    0x403158
  403173:	sbb    ah,al
  403175:	std    
  403176:	outs   dx,BYTE PTR ds:[esi]
  403177:	std    
  403178:	jge    0x4031cf
  40317a:	cmc    
  40317b:	imul   edx,DWORD PTR [edi],0x53ae96a
  403181:	(bad)  
  403182:	fadd   st(4),st
  403184:	jmp    0x6ffd82fe
  403189:	or     BYTE PTR [esi+0x4b],al
  40318c:	stc    
  40318d:	(bad)  
  40318e:	fwait
  40318f:	ins    BYTE PTR es:[edi],dx
  403190:	mov    esp,0x5060e1c2
  403195:	mov    edi,DWORD PTR ds:0x2ef8c0e1
  40319b:	sbb    ebp,ebp
  40319d:	add    cl,ch
  40319f:	pusha  
  4031a0:	add    eax,0x484acc7
  4031a5:	add    cl,ch
  4031a7:	pusha  
  4031a8:	jle    0x4031ff
  4031aa:	add    BYTE PTR [edx-0x3872ed92],dl
  4031b0:	fst    QWORD PTR [eax+0x6a]
  4031b3:	mov    ebx,edx
  4031b5:	jne    0x4031b3
	...
  4031c3:	add    BYTE PTR [eax],al
  4031c5:	add    BYTE PTR [ebp+0x71],bh
  4031c8:	clc    
  4031c9:	inc    DWORD PTR [edi]
  4031cb:	jmp    0x6e9684ce
  4031d0:	inc    ebp
  4031d1:	clc    
  4031d2:	add    eax,esp
  4031d4:	add    al,0x0
  4031d6:	xchg   edi,eax
  4031d7:	outs   dx,BYTE PTR ds:[esi]
  4031d8:	in     al,dx
  4031d9:	push   0x3b
  4031db:	push   0xda5a0c45
  4031e0:	jne    0x4031ea
  4031e2:	and    bl,BYTE PTR [ebx]
  4031e4:	cld    
  4031e5:	(bad)  
  4031e6:	std    
  4031e7:	lods   al,BYTE PTR ds:[esi]
  4031e8:	ret    0x3a08
  4031eb:	push   eax
  4031ec:	mov    ebp,esp
  4031ee:	jo     0x4031ed
  4031f0:	mov    WORD PTR [ebp-0x2],es
  4031f3:	push   esp
  4031f4:	push   DWORD PTR [ebp+0x2]
  4031f7:	int    0x2a
  4031f9:	cld    
  4031fa:	fstp   st(2)
  4031fc:	leave  
  4031fd:	ret    0x4f2
  403200:	push   ebp
  403201:	mov    ebx,esi
  403203:	xchg   BYTE PTR [ebp+0xc],bh
  403206:	cli    
  403207:	jo     0x40321d
  403209:	cmp    edi,0x14
  40320c:	add    BYTE PTR [esp+ecx*8-0x27],dh
  403210:	jne    0x403222
  403212:	sub    eax,0xb7ff0c70
  403217:	in     al,dx
  403218:	out    0x9,eax
  40321a:	push   ds
  40321b:	(bad)  
  40321d:	leave  
  40321e:	mov    BYTE PTR ds:0xe5415500,al
  403224:	push   DWORD PTR [ebp-0x76]
  403227:	fnstenv [ebp+0x8]
	...
  403236:	add    BYTE PTR [eax],al
  403238:	add    BYTE PTR [edx-0x4b],dl
  40323b:	(bad)  
  40323c:	(bad)  
  40323d:	jge    0x4031c5
  40323f:	jge    0x403251
  403241:	arpl   si,bx
  403243:	ja     0x403259
  403245:	loopne 0x4032c0
  403247:	(bad)  
  403248:	call   DWORD PTR [eax]
  40324a:	lock in al,dx
  40324c:	jne    0x4032a1
  40324e:	out    0x76,eax
  403250:	or     al,0x74
  403252:	imul   edi,ebx,0xecd7b4e7
  403258:	call   FWORD PTR [edx-0x48000064]
  40325e:	jae    0x40323f
  403260:	adc    esi,0xffffffe2
  403263:	add    esi,DWORD PTR [ecx+ebx*2-0x49]
  403267:	jbe    0x403275
  403269:	cmp    esi,esi
  40326b:	xlat   BYTE PTR ds:[ebx]
  40326c:	add    BYTE PTR [ebx-0x2d],ah
  40326f:	add    DWORD PTR [ebx],ebp
  403271:	and    ecx,DWORD PTR [esi]
  403273:	in     eax,dx
  403274:	jne    0x4032d5
  403276:	xchg   edi,eax
  403277:	jbe    0x403281
  403279:	cmp    ecx,DWORD PTR [ebx-0x14]
  40327c:	call   FWORD PTR [esi*4+0x296308c1]
  403283:	jns    0x403271
  403285:	loopne 0x40327f
  403287:	adc    edi,edi
  403289:	mov    ?,ecx
  40328b:	in     al,dx
  40328c:	jne    0x4032fd
  40328e:	addr16 jbe 0x403299
  403291:	or     edx,DWORD PTR [edi-0x7d130014]
  403297:	std    
  403298:	(bad)  
  403299:	outs   dx,BYTE PTR ds:[esi]
  40329a:	out    dx,al
  40329b:	in     al,dx
  40329c:	jne    0x40329e
	...
  4032aa:	add    BYTE PTR [eax],al
  4032ac:	outs   dx,DWORD PTR ds:[esi]
  4032ad:	inc    edi
  4032ae:	jbe    0x4032b8
  4032b0:	retf   
  4032b1:	(bad)  
  4032b2:	in     al,dx
  4032b3:	dec    esp
  4032b5:	and    al,0xc1
  4032b7:	or     al,0x63
  4032b9:	mov    DWORD PTR [eax-0x14],edi
  4032bc:	mov    esp,0xb4e7fbb0
  4032c1:	das    
  4032c2:	in     al,dx
  4032c3:	call   DWORD PTR [ebx]
  4032c5:	(bad)  
  4032c6:	sti    
  4032c7:	add    DWORD PTR [di],0xffffffd1
  4032cb:	inc    edx
  4032cc:	arpl   ax,bp
  4032ce:	xchg   esp,eax
  4032cf:	sti    
  4032d0:	jl     0x40330d
  4032d2:	push   ss
  4032d3:	in     al,dx
  4032d4:	mov    WORD PTR [edx-0x17],ds
  4032d7:	in     al,dx
  4032d8:	push   cs
  4032d9:	std    
  4032da:	adc    BYTE PTR [edi],bl
  4032dc:	jl     0x4032c5
  4032de:	(bad)  
  4032df:	pop    eax
  4032e0:	popa   
  4032e1:	jp     0x40328f
  4032e3:	call   FWORD PTR [eax+ebp*8]
  4032e6:	je     0x4032e3
  4032e8:	jl     0x40331d
  4032ea:	out    0xeb,al
  4032ec:	pop    esp
  4032ed:	pop    esp
  4032ee:	jmp    0x403368
  4032f0:	sahf   
  4032f1:	adc    eax,0xfdd6eb39
  4032f6:	shl    BYTE PTR [ecx],0x44
  4032f9:	out    0xc6,eax
  4032fb:	dec    esp
  4032fc:	sub    al,ah
  4032fe:	in     eax,dx
  4032ff:	add    ecx,DWORD PTR [esi+0x2787c57a]
  403305:	jmp    0xede3:0xdd5b71ae
  40330c:	sbb    al,0xe7
  40330e:	rol    BYTE PTR [eax+0x0],cl
	...
  40331d:	add    BYTE PTR [eax],al
  40331f:	addr16 jl 0x40334e
  403322:	call   0xfc1d7407
  403327:	jp     0x40332e
  403329:	xchg   BYTE PTR [ecx+0x6f],dh
  40332c:	out    0xf4,al
  40332e:	sti    
  40332f:	cld    
  403330:	fnstenv [eax-0x15]
  403333:	in     al,dx
  403334:	out    0xf4,al
  403336:	out    0xe4,eax
  403338:	jo     0x40332b
  40333a:	fstp   TBYTE PTR [eax-0x2b14a119]
  403340:	jo     0x403323
  403342:	(bad)  [edi-0x17]
  403345:	dec    esi
  403346:	jmp    0x403320
  403348:	inc    eax
  403349:	inc    ebp
  40334a:	mov    ebp,0x50e8fda1
  40334f:	call   0xa3aa342d
  403354:	icebp  
  403355:	(bad)  
  403356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403357:	mov    ah,0x5
  403359:	add    cl,ch
  40335b:	pusha  
  40335c:	js     0x4033a3
  40335e:	sbb    eax,0xe175e62f
  403363:	test   al,0x51
  403365:	aam    0xe9
  403367:	pusha  
  403368:	add    al,0x81
  40336b:	pop    ebx
  40336c:	out    0x75,al
  40336e:	icebp  
  40336f:	cwde   
  403370:	loope  0x40336b
  403372:	idiv   BYTE PTR [ecx+0x7c]
  403375:	inc    ebp
  403376:	icebp  
  403377:	jns    0x4033e9
  403379:	cld    
  40337a:	shr    DWORD PTR [ebx-0x2e],1
  40337d:	add    cl,ch
  40337f:	push   ebp
  403380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403381:	je     0x403382
	...
  40338f:	add    BYTE PTR [eax],al
  403391:	add    BYTE PTR [ecx],bh
  403393:	jo     0x40338d
  403395:	cmp    DWORD PTR [ebp+0x6238e805],esp
  40339b:	add    eax,0xf1a37000
  4033a0:	(bad)  
  4033a1:	cmp    al,0x3b
  4033a3:	fisttp QWORD PTR [ecx]
  4033a5:	call   0xde1f:0x1cff0560
  4033ac:	mov    ebx,0x8be609a2
  4033b1:	sub    al,0x13
  4033b3:	test   bh,0x96
  4033b6:	xor    BYTE PTR [ebp-0x1],dl
  4033b9:	cld    
  4033ba:	clc    
  4033bb:	(bad)  [edx+0x7f]
  4033be:	or     esi,esp
  4033c0:	leave  
  4033c1:	stos   DWORD PTR es:[edi],eax
  4033c2:	in     al,dx
  4033c3:	in     eax,0x54
  4033c5:	bound  ecx,QWORD PTR [edx+eax*4]
  4033c8:	les    ebx,FWORD PTR [ecx-0x5f]
  4033cb:	aas    
  4033cc:	hlt    
  4033cd:	jmp    0x64403932
  4033d2:	and    ebp,ecx
  4033d4:	push   eax
  4033d5:	dec    esi
  4033d6:	push   ebx
  4033d7:	std    
  4033d8:	out    0x0,eax
  4033da:	adc    al,0xcf
  4033dc:	add    BYTE PTR [eax],al
  4033de:	aas    
  4033df:	ret    0x4d78
  4033e2:	jne    0x403459
  4033e4:	or     al,ch
  4033e6:	hlt    
  4033e7:	fdivr  st,st(7)
  4033e9:	call   DWORD PTR [ebx]
  4033eb:	inc    ebp
  4033ec:	clc    
  4033ed:	xor    edi,0xffffffd9
  4033f0:	add    al,0x72
  4033f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033f3:	jle    0x403462
  4033f5:	clc    
	...
  403402:	add    BYTE PTR [eax],al
  403404:	add    BYTE PTR [esi-0x26],bh
  403407:	jne    0x403405
  403409:	push   edx
  40340a:	(bad)  
  40340b:	rol    BYTE PTR [eax],cl
  40340d:	mov    ah,dh
  40340f:	mov    edi,0x75daa874
  403414:	clc    
  403415:	retf   0x47
  403418:	call   0x401868
  40341d:	inc    ebp
  40341e:	mov    eax,ds:0x24c3d0f7
  403423:	hlt    
  403424:	jmp    FWORD PTR [edi-0x276a1713]
  40342a:	or     DWORD PTR [eax],eax
  40342c:	jmp    0x40343a
  40342e:	out    dx,al
  40342f:	jne    0x403439
  403431:	and    ah,BYTE PTR ds:0x2f5fffb
  403437:	ror    cl,0xc8
  40343a:	add    eax,0x1fceb00
  40343f:	ror    cl,0xb8
  403442:	add    eax,0x42f86a00
  403447:	cld    
  403448:	(bad)  
  403449:	jmp    eax
  40344b:	out    0xf0,eax
  40344d:	loop   0x40343d
  40344f:	inc    edi
  403451:	aas    
  403452:	fld    DWORD PTR [ecx]
  403454:	add    dl,bh
  403456:	or     BYTE PTR [ebp-0xc6c5bb],cl
  40345c:	jne    0x403430
  40345e:	rcl    dl,0xfb
  403461:	arpl   WORD PTR [ebx],di
  403463:	jmp    0x47e7aeb
  403468:	je     0x40346a
	...
  403476:	add    BYTE PTR [eax],al
  403478:	push   ecx
  403479:	fstp   TBYTE PTR [ebx+0x6f1a1e3b]
  40347f:	pop    es
  403480:	jmp    0x40346f
  403482:	add    eax,DWORD PTR [eax]
  403484:	arpl   WORD PTR [edi+0x2],ax
  403487:	sub    esp,DWORD PTR [ebx-0x5cd4fa09]
  40348d:	adc    eax,0xa16304c6
  403492:	jl     0x403480
  403494:	loopne 0x4034c0
  403496:	in     al,dx
  403497:	lea    esp,[esi]
  403499:	or     dl,BYTE PTR [edi+edi*8-0x12]
  40349d:	aad    0xdb
  40349f:	dec    eax
  4034a0:	nop
  4034a1:	out    dx,al
  4034a2:	add    eax,DWORD PTR [ebp-0xe3a95d]
  4034a8:	(bad)  
  4034a9:	(bad)  
  4034aa:	fcmovnu st,st(0)
  4034ac:	pop    ebx
  4034ad:	ret    
  4034ae:	call   0xe8f6db3c
  4034b3:	jne    0x4034fc
  4034b5:	(bad)  
  4034b6:	adc    dl,dl
  4034b8:	arpl   si,bp
  4034ba:	cld    
  4034bb:	mov    edi,0x75e8baaf
  4034c0:	pop    edi
  4034c1:	fwait
  4034c2:	outs   dx,BYTE PTR ds:[esi]
  4034c3:	clc    
  4034c4:	xchg   ebx,eax
  4034c5:	(bad)  
  4034c6:	pop    ss
  4034c7:	or     esp,DWORD PTR [ebx-0x12]
  4034ca:	call   0xe8b64c44
  4034cf:	shl    DWORD PTR [ebx-0x12],1
  4034d2:	call   0xb2c6904c
  4034d7:	cli    
  4034d8:	cld    
  4034d9:	mov    bh,BYTE PTR [edx+0xc2]
	...
  4034eb:	imul   ebp,esi,0x4e
  4034ee:	mov    edi,edi
  4034f0:	outs   dx,BYTE PTR ds:[esi]
  4034f1:	mov    edi,0xccc790e8
  4034f6:	lea    esp,[esi]
  4034f8:	add    eax,0x59d45365
  4034fd:	icebp  
  4034fe:	fcmovne st,st(3)
  403500:	mov    dh,0xe9
  403502:	add    ebx,esi
  403504:	(bad)  
  403505:	fidivr WORD PTR [ebx-0xc]
  403508:	add    al,0xe9
  40350a:	add    esi,DWORD PTR [ecx+ebx*2-0x2318240f]
  403511:	ss call 0xe8757ef1
  403517:	push   ss
  403518:	loope  0x40352b
  40351a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40351b:	mov    dl,0x4
  40351d:	jmp    0x6d54021e
  403522:	xchg   DWORD PTR [ebx+0x5],esp
  403525:	jmp    0x7155ba4
  40352a:	outs   dx,BYTE PTR ds:[esi]
  40352b:	outs   dx,DWORD PTR ds:[esi]
  40352c:	in     al,dx
  40352d:	sub    ebx,edx
  40352f:	arpl   WORD PTR ds:0xa5fbf6a,ax
  403535:	jmp    0x3945e83d
  40353a:	fmul   QWORD PTR [edx]
  40353c:	push   es
  40353d:	jmp    0xc5890f45
  403542:	out    0xce,eax
  403544:	fld    st(1)
  403546:	xchg   edi,eax
  403547:	dec    edx
  403548:	push   es
  403549:	jmp    0xe44a54d0
  40354e:	add    eax,DWORD PTR [eax]
	...
  40355c:	add    BYTE PTR [eax],al
  40355e:	arpl   bp,si
  403560:	call   0xe9b670b8
  403565:	add    esp,DWORD PTR [ebx-0x74]
  403568:	sub    al,0xdc
  40356a:	mov    DWORD PTR ds:0xe2ff719e,eax
  403570:	sbb    al,0xf0
  403572:	add    al,0x59
  403574:	and    edi,0x8d91d576
  40357a:	or     al,BYTE PTR [esi]
  40357c:	jmp    0x3a5d03
  403581:	pop    edi
  403582:	mov    ds:0xc4f4ffdd,al
  403587:	in     eax,dx
  403588:	cmp    BYTE PTR gs:[edi+0x5],bl
  40358c:	call   esp
  40358e:	enter  0x90ea,0x53
  403592:	mov    esp,0x18e16ae2
  403597:	pop    es
  403598:	sub    BYTE PTR [eax-0xe8a1da0],ch
  40359e:	mov    cl,al
  4035a0:	cld    
  4035a1:	ss mov esp,0x122ed80e
  4035a7:	fcos   
  4035a9:	pushf  
  4035aa:	cwde   
  4035ab:	jmp    0x3123:0xe2841dba
  4035b2:	jl     0x40360c
  4035b4:	clc    
  4035b5:	push   cs
  4035b6:	repnz in al,dx
  4035b8:	(bad)  
  4035b9:	jl     0x403633
  4035bb:	jmp    0x1123:0xe285fde0
	...
  4035ce:	add    BYTE PTR [eax],al
  4035d0:	add    BYTE PTR [eax+ebx*2-0x14],bh
  4035d4:	add    DWORD PTR [ebp+eax*1+0x0],ebp
  4035d8:	jmp    0xd2288e1a
  4035dd:	push   ebp
  4035de:	loop   0x4035df
  4035e0:	jmp    0xc1488e22
  4035e5:	pop    ss
  4035e6:	fdiv   st(7),st
  4035e8:	(bad)  
  4035e9:	mov    ecx,0x22b05bc6
  4035ee:	or     DWORD PTR [eax],eax
  4035f0:	sbb    al,0xa8
  4035f2:	icebp  
  4035f3:	sub    DWORD PTR [edi+ebx*1],0xffffffe2
  4035f7:	jae    0x4035ea
  4035f9:	std    
  4035fa:	push   edi
  4035fb:	or     BYTE PTR [ecx-0x16ff4b9d],dl
  403601:	imul   eax,ebp,0xe1fcabc9
  403607:	push   esp
  403608:	add    BYTE PTR [ecx-0x46],dh
  40360b:	mov    eax,DWORD PTR [ebp-0xe]
  40360e:	add    al,0x80
  403610:	add    dl,bh
  403612:	add    eax,0xc18a6a50
  403617:	repnz ror dl,1
  40361a:	add    eax,0x5c6c2c9
  40361f:	push   ebp
  403620:	mov    ebx,DWORD PTR [esi]
  403622:	push   ebx
  403623:	cld    
  403624:	mov    ebp,DWORD PTR [edi-0x51b27523]
  40362a:	out    0xe,al
  40362c:	push   ecx
  40362d:	jnp    0x4035f0
  40362f:	add    ch,BYTE PTR [ebx]
  403631:	jp     0x40360a
  403633:	stos   DWORD PTR es:[edi],eax
  403634:	pop    ecx
	...
  403641:	add    BYTE PTR [eax],al
  403643:	add    BYTE PTR [ecx],cl
  403645:	jmp    0x4b71294d
  40364a:	leave  
  40364b:	ret    0x592
  40364e:	push   ebp
  40364f:	mov    ebx,DWORD PTR [esi+0x50]
  403652:	push   edi
  403653:	mov    ebp,edi
  403655:	fsincos 
  403657:	mov    esi,edi
  403659:	fisttp QWORD PTR [edx+0x2e68a4d]
  40365f:	repz push ss
  403661:	dec    ebx
  403662:	pop    esi
  403663:	leave  
  403664:	mov    al,bl
  403666:	call   DWORD PTR [ecx+edx*8-0x43]
  40366a:	push   esi
  40366b:	push   edi
  40366c:	shl    DWORD PTR [eax+0x8],1
  40366f:	cld    
  403670:	rcr    DWORD PTR [eax],0x10
  403673:	sub    ecx,DWORD PTR [edx]
  403675:	pop    edi
  403676:	jge    0x403684
  403678:	sub    DWORD PTR [ebx+esi*8],eax
  40367b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40367c:	xor    DWORD PTR [ebp+esi*2+0x5e4a7a01],ebx
  403683:	leave  
  403684:	enter  0xffdd,0x54
  403688:	xchg   ecx,eax
  403689:	mov    ebp,0x4feec483
  40368e:	push   edi
  40368f:	push   ebx
  403690:	arpl   WORD PTR [esi],ax
  403692:	add    al,BYTE PTR [ecx]
  403694:	arpl   si,bp
  403696:	in     al,0x75
  403698:	imul   esi,DWORD PTR [esi-0x6d],0xffffffff
  40369c:	in     al,dx
  40369d:	pop    edi
  40369e:	jns    0x40371d
  4036a0:	pop    ebx
  4036a1:	das    
  4036a2:	cmp    eax,0x415b12b
  4036a7:	add    DWORD PTR [eax],eax
	...
  4036b5:	add    BYTE PTR [eax],al
  4036b7:	arpl   si,bp
  4036b9:	jnp    0x4036cf
  4036bb:	mov    DWORD PTR [eax-0x3e],eax
  4036be:	loop   0x40368a
  4036c0:	arpl   WORD PTR [edi+0x8],sp
  4036c3:	and    al,0xa7
  4036c5:	js     0x40373c
  4036c7:	xor    BYTE PTR [bx],bh
  4036ca:	(bad)  
  4036cb:	arpl   bx,si
  4036cd:	mov    edx,0x64882b
  4036d2:	cmp    ebp,ebx
  4036d4:	test   eax,0x281e00e4
  4036d9:	jp     0x4036df
  4036db:	push   edx
  4036dc:	out    dx,al
  4036dd:	ds (bad) 
  4036df:	push   esp
  4036e0:	inc    eax
  4036e1:	dec    edi
  4036e2:	(bad)  
  4036e3:	jmp    0x5fc860d2
  4036e8:	ret    
  4036e9:	jns    0x403730
  4036eb:	ins    BYTE PTR es:[edi],dx
  4036ec:	push   esi
  4036ed:	add    BYTE PTR [edx],bh
  4036ef:	and    dl,BYTE PTR [ebx-0x132eefca]
  4036f5:	sbb    cl,cl
  4036f7:	push   ebp
  4036f8:	stos   DWORD PTR es:[edi],eax
  4036f9:	outs   dx,BYTE PTR ds:[esi]
  4036fa:	aad    0xa8
  4036fc:	pop    ds
  4036fd:	inc    esi
  4036fe:	leave  
  4036ff:	and    edx,ebp
  403701:	add    edx,DWORD PTR [ebp-0x18]
  403704:	mov    eax,ds:0xfb3bc480
  403709:	dec    ebp
  40370a:	push   edi
  40370b:	sub    al,0x19
  40370d:	cld    
  40370e:	pop    edx
  40370f:	fldl2e 
  403711:	jnp    0x403758
  403713:	push   ds
  403714:	fs inc eax
  403716:	add    ebx,ebp
  403718:	add    al,0x2c
  40371a:	call   0x40371f
	...
  403727:	add    BYTE PTR [eax],al
  403729:	add    al,bl
  40372b:	(bad)  [esi]
  40372d:	cmp    eax,0xbce559d8
  403732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403733:	fucomp st(1)
  403735:	add    esp,DWORD PTR [ebx+0x5]
  403738:	jb     0x403770
  40373a:	push   ebx
  40373b:	in     al,0x29
  40373d:	out    0x9e,al
  40373f:	loop   0x403727
  403741:	lods   eax,DWORD PTR ds:[esi]
  403742:	es loop 0x403723
  403745:	lods   eax,DWORD PTR ds:[esi]
  403746:	outs   dx,DWORD PTR ds:[esi]
  403747:	sbb    eax,0x4cc4e71
  40374c:	mov    ah,0xe7
  40374e:	push   esp
  40374f:	xchg   edi,eax
  403750:	lods   al,BYTE PTR ds:[esi]
  403751:	out    0xe9,eax
  403753:	clc    
  403754:	adc    BYTE PTR [esi+ecx*1-0x21],bh
  403758:	imul   BYTE PTR [ebp+0xf71e226]
  40375e:	imul   edx,DWORD PTR [eax],0x7f
  403761:	ds lahf 
  403763:	mov    dl,BYTE PTR [esp+eiz*8+0x79e0f8eb]
  40376a:	ss loopne 0x403758
  40376d:	dec    esi
  40376e:	test   DWORD PTR [edx+0x49e829fd],ecx
  403774:	adc    DWORD PTR [ebx],esi
  403776:	dec    edi
  403777:	adc    eax,0xe26b3e06
  40377c:	sub    DWORD PTR [ecx+0x1e],edi
  40377f:	loop   0x4037e2
  403781:	add    cl,ch
  403783:	dec    eax
  403784:	in     eax,dx
  403785:	jp     0x403727
  403787:	add    al,0x46
  403789:	inc    edx
  40378a:	test   al,0xcc
  40378c:	stos   DWORD PTR es:[edi],eax
  40378d:	adc    BYTE PTR [eax],al
	...
  40379b:	add    BYTE PTR [eax],al
  40379d:	arpl   WORD PTR [eax],di
  40379f:	(bad)  
  4037a0:	lock loop 0x40376c
  4037a3:	mov    ebp,0x1adf34e2
  4037a8:	das    
  4037a9:	or     BYTE PTR [ecx-0x216c1fdc],dl
  4037af:	add    BYTE PTR [edi+ebp*2],bh
  4037b2:	in     eax,dx
  4037b3:	mov    ds:0x85055f99,eax
  4037b8:	test   eax,0xe9968d70
  4037bd:	pusha  
  4037be:	add    eax,0xed6f1cff
  4037c3:	das    
  4037c4:	xchg   edi,eax
  4037c5:	add    bh,bl
  4037c7:	mov    DWORD PTR [ebx+ecx*1],ebp
  4037ca:	fbstp  TBYTE PTR [ebp+0x7d]
  4037cd:	imul   DWORD PTR [ebp-0x31]
  4037d0:	jmp    0xf6004235
  4037d5:	inc    ecx
  4037d6:	mov    WORD PTR [ebp+0x59],es
  4037d9:	rcr    BYTE PTR [eax-0xc],0x51
  4037dd:	cmp    edi,ebx
  4037df:	call   DWORD PTR [esi-0x12]
  4037e2:	dec    eax
  4037e3:	clc    
  4037e4:	dec    esi
  4037e5:	sbb    bl,cl
  4037e7:	(bad)  
  4037e8:	mov    esp,0x3975de88
  4037ed:	mov    bh,0x91
  4037ef:	(bad)  
  4037f0:	ss sbb dh,0x75
  4037f4:	sub    eax,0xe9cf4787
  4037f9:	pusha  
  4037fa:	fidiv  WORD PTR [ebp-0x13]
  4037fd:	js     0x403812
  4037ff:	iret   
  403800:	jmp    0x403805
	...
  40380d:	add    BYTE PTR [eax],al
  40380f:	add    BYTE PTR [eax+0x35],ah
  403812:	call   DWORD PTR [esp+eiz*2-0x7ee87a70]
  403819:	fdivp  st(7),st
  40381b:	cdq    
  40381c:	js     0x4037c6
  40381e:	(bad)  
  40381f:	test   BYTE PTR [ecx-0x22],0x75
  403823:	cmc    
  403824:	inc    ecx
  403825:	pop    eax
  403826:	clc    
  403827:	je     0x403804
  403829:	out    dx,al
  40382a:	(bad)  
  40382b:	fiadd  WORD PTR [ecx+0x35]
  40382e:	call   0x1e7b0a
  403833:	into   
  403834:	fwait
  403835:	or     eax,0xc17d00e8
  40383a:	(bad)  
  40383b:	call   DWORD PTR [eax+0x620d6811]
  403841:	dec    eax
  403842:	add    bh,bh
  403844:	dec    edi
  403845:	adc    eax,ebp
  403847:	xchg   ebx,eax
  403848:	shl    dl,0xff
  40384b:	or     esp,DWORD PTR [edx]
  40384d:	jecxz  0x4038c4
  40384f:	hlt    
  403850:	aad    0x3c
  403852:	clc    
  403853:	dec    DWORD PTR [edi+0x11]
  403856:	call   0x2318de
  40385b:	and    eax,edx
  40385d:	loop   0x4038d4
  40385f:	clc    
  403860:	loop   0x403800
  403862:	std    
  403863:	inc    DWORD PTR [ebp-0x1d]
  403866:	jne    0x403870
  403868:	xor    al,BYTE PTR [ebp-0x70da0009]
  40386e:	ret    
  40386f:	pop    ebx
  403870:	or     eax,0x8
	...
  403883:	out    dx,eax
  403884:	mov    gs,esp
  403886:	cmp    DWORD PTR [esi-0x4a],0x57
  40388a:	mov    edi,edi
  40388c:	aad    0xa
  40388e:	rcr    dh,0xb
  403891:	mov    DWORD PTR [eax],0x18a
  403897:	mov    cl,0xe2
  403899:	cmp    DWORD PTR [ebp+0x62],0x8
  40389d:	jne    0x4038a6
  40389f:	adc    BYTE PTR [edx],al
  4038a1:	add    al,BYTE PTR [eax]
  4038a3:	mov    ch,dh
  4038a5:	jae    0x75421292
  4038ab:	jge    0x40392c
  4038ad:	add    BYTE PTR [ecx],al
  4038af:	dec    edx
  4038b0:	or     ebx,ebp
  4038b2:	add    ah,BYTE PTR [ecx]
  4038b4:	xchg   ebx,eax
  4038b5:	or     edx,0x20163
  4038bb:	mov    bh,0x44
  4038bd:	cld    
  4038be:	push   eax
  4038bf:	arpl   WORD PTR [eax],sp
  4038c1:	outs   dx,BYTE PTR ds:[esi]
  4038c2:	add    BYTE PTR [edx+esi*1],dh
  4038c5:	adc    bh,bh
  4038c7:	mov    dh,0xd6
  4038c9:	jmp    0x40389b
  4038cb:	adc    al,0xef
  4038cd:	add    ecx,DWORD PTR [ebx]
  4038cf:	and    ebx,DWORD PTR [edx]
  4038d1:	jno    0x403860
  4038d3:	sahf   
  4038d4:	xchg   esi,eax
  4038d5:	xor    al,0x6a
  4038d7:	arpl   WORD PTR [ecx+0x47],dx
  4038da:	hlt    
  4038db:	mov    bl,0xf8
  4038dd:	add    edi,edi
  4038df:	jbe    0x4038bf
  4038e1:	loopne 0x403958
  4038e3:	test   DWORD PTR [esi+0xcf9d],0x0
	...
  4038f5:	add    BYTE PTR [ebx-0x12],ah
  4038f8:	or     al,0xc0
  4038fa:	outs   dx,BYTE PTR ds:[esi]
  4038fb:	sub    al,BYTE PTR [ebp+0x57eedb7d]
  403901:	inc    esi
  403902:	loopne 0x4038ed
  403904:	xlat   BYTE PTR ds:[ebx]
  403905:	add    DWORD PTR [esi-0x14],edx
  403908:	test   BYTE PTR [ebp-0x35],bh
  40390b:	in     eax,dx
  40390c:	push   edi
  40390d:	cmp    ch,al
  40390f:	test   eax,0x461340db
  403914:	inc    edx
  403915:	std    
  403916:	lods   al,BYTE PTR ds:[esi]
  403917:	inc    ebx
  403918:	(bad)  
  403919:	clc    
  40391a:	(bad)  
  40391b:	mov    eax,ds:0xc83450db
  403920:	add    ebp,DWORD PTR [edx+0x63]
  403923:	sub    edx,DWORD PTR [edi+0x10]
  403926:	mov    WORD PTR [ecx-0x21],?
  403929:	call   0x44650c
  40392e:	push   0xc0a582e
  403933:	push   es
  403934:	sub    ebp,edi
  403936:	ins    BYTE PTR es:[edi],dx
  403937:	add    ebp,DWORD PTR ds:0x8cea78ff
  40393d:	inc    ebp
  40393e:	ja     0x403927
  403940:	ret    
  403941:	je     0x4039a1
  403943:	jmp    0x40399b
  403945:	clc    
  403946:	fadd   QWORD PTR [ecx+ebp*8]
  403949:	loopne 0x403919
  40394b:	(bad)  
  40394d:	push   0x2c
  40394f:	add    eax,0x101c8ce9
  403954:	test   eax,0x44884f56
  403959:	cld    
	...
  403966:	add    BYTE PTR [eax],al
  403968:	add    BYTE PTR [edx+0x58],ah
  40396b:	xlat   BYTE PTR ds:[ebx]
  40396c:	mov    WORD PTR [esi+0x143428fd],fs
  403972:	push   edx
  403973:	aad    0xe0
  403975:	xchg   esi,eax
  403976:	cmc    
  403977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403978:	push   esi
  403979:	push   edi
  40397a:	fcom   QWORD PTR [esp+ecx*1]
  40397d:	or     esp,DWORD PTR [esi]
  40397f:	xchg   esi,eax
  403980:	loopne 0x403976
  403982:	cmp    esp,DWORD PTR [eax+0x1c0557c5]
  403988:	(bad)  
  403989:	test   DWORD PTR [ebp+0x5620bfc],0xe4e83e9
  403993:	outs   dx,BYTE PTR ds:[esi]
  403994:	push   ss
  403995:	pop    esp
  403996:	cs test al,0x3
  403999:	aam    0x41
  40399b:	icebp  
  40399c:	ins    DWORD PTR es:[edi],dx
  40399d:	arpl   sp,bx
  40399f:	fdivr  st(7),st
  4039a1:	mov    ch,0x51
  4039a3:	stc    
  4039a4:	loopne 0x4039dc
  4039a6:	or     DWORD PTR [esi+0x56],eax
  4039a9:	pop    ebx
  4039aa:	in     eax,dx
  4039ab:	xor    eax,0x20db9ce1
  4039b0:	lds    esi,FWORD PTR [ebx+0x5]
  4039b3:	add    al,ah
  4039b5:	fdiv   DWORD PTR [eax+edi*1-0x16f2351b]
  4039bc:	add    esp,DWORD PTR [ebx-0x4a]
  4039bf:	add    edx,DWORD PTR [edi+eiz*2-0x7a]
  4039c3:	sbb    edx,DWORD PTR [edx]
  4039c5:	shr    DWORD PTR [ebp-0xa8e7dfb],1
  4039cb:	xlat   BYTE PTR ds:[ebx]
  4039cc:	repnz add BYTE PTR [eax],al
	...
  4039db:	add    BYTE PTR [ebx-0x19],dh
  4039de:	add    BYTE PTR [edi],al
  4039e0:	jmp    0xc219bed6
  4039e5:	inc    esp
  4039e6:	add    bh,ah
  4039e8:	pop    ds
  4039e9:	push   ecx
  4039ea:	fisubr DWORD PTR [edx+0x3eec8e7a]
  4039f0:	call   0xf8164235
  4039f5:	mov    ?,WORD PTR [ebp-0xb]
  4039f8:	(bad)  [eax+0x10]
  4039fb:	repnz das 
  4039fd:	push   edx
  4039fe:	sbb    BYTE PTR [edx-0x31],ah
  403a01:	(bad)  
  403a02:	jmp    0x5fa6:0x250272e1
  403a09:	add    eax,0x806b7200
  403a0e:	adc    BYTE PTR [eax],cl
  403a10:	sahf   
  403a11:	add    eax,0xe7a4ab33
  403a16:	call   0xc97ae999
  403a1b:	stos   DWORD PTR es:[edi],eax
  403a1c:	jae    0x403a23
  403a1e:	push   ebp
  403a1f:	(bad)
  403a24:	pop    eax
  403a25:	add    eax,0x409dee75
  403a2a:	or     BYTE PTR [ebx-0x71],ch
  403a2d:	inc    esp
  403a2e:	add    BYTE PTR [edx+0x42],ch
  403a31:	or     DWORD PTR [eax],eax
  403a33:	aam    0x65
  403a35:	ret    0xf545
  403a38:	loop   0x403a67
  403a3a:	inc    ecx
  403a3b:	jmp    0x41488afd
	...
  403a4c:	add    BYTE PTR [eax],al
  403a4e:	add    BYTE PTR [eax+ecx*8+0x0],dh
  403a52:	jmp    0x9d3ff830
  403a57:	push   esp
  403a58:	in     eax,dx
  403a59:	xor    eax,0x305672c
  403a5e:	xor    DWORD PTR [eax],esp
  403a60:	ss call 0x1ac734
  403a66:	add    cl,dh
  403a68:	cwde   
  403a69:	push   DWORD PTR [ebp+0x52]
  403a6c:	pop    ss
  403a6d:	call   0x41b9b1
  403a72:	call   edi
  403a74:	or     dl,BYTE PTR [ebx-0x18]
  403a77:	jle    0x403a2d
  403a79:	add    BYTE PTR [eax],al
  403a7b:	mov    cl,0xc7
  403a7d:	pop    ebx
  403a7e:	leave  
  403a7f:	or     BYTE PTR [esi],cl
  403a81:	add    BYTE PTR [ebp-0x3f],dl
  403a84:	jmp    0x7500:0x99f8353
  403a8b:	add    eax,0x880845c3
  403a90:	cs inc ecx
  403a92:	add    BYTE PTR [ecx+0x65],bh
  403a95:	or     al,0x0
  403a97:	addr16 add al,bh
  403a9a:	inc    ebp
  403a9b:	push   cs
  403a9c:	test   BYTE PTR [eax],ch
  403a9e:	inc    ecx
  403a9f:	or     bh,BYTE PTR [ebx-0x111df78b]
  403aa5:	int3   
  403aa6:	add    dl,bh
  403aa8:	mov    ds,eax
  403aaa:	call   edi
  403aac:	or     eax,ebp
  403aae:	loope  0x403aae
  403ab0:	add    eax,0x300
	...
  403ac1:	add    dl,dh
  403ac3:	inc    esi
  403ac4:	push   ebx
  403ac5:	call   0x3ff9fb
  403aca:	xor    DWORD PTR [esi+0x16c275ff],ebx
  403ad0:	call   0x4689c0
  403ad5:	jmp    edi
  403ad7:	or     DWORD PTR [ebx-0x18],edx
  403ada:	xor    cl,dl
  403adc:	add    BYTE PTR [eax],al
  403ade:	dec    ebp
  403adf:	cmp    eax,0xbf12e808
  403ae4:	(bad)  
  403ae5:	call   DWORD PTR [ecx]
  403ae7:	(bad)  
  403ae8:	pop    ebx
  403ae9:	leave  
  403aea:	dec    eax
  403aeb:	push   cs
  403aec:	add    BYTE PTR [ebp+0x63],dl
  403aef:	addr16 out dx,eax
  403af1:	and    DWORD PTR [edi+0x5e683607],0xffffffed
  403af8:	add    eax,DWORD PTR [eax]
  403afa:	dec    ebx
  403afb:	adc    dl,bl
  403afd:	call   DWORD PTR [esi+eiz*2+0x48]
  403b01:	cld    
  403b02:	loopne 0x403aad
  403b04:	adc    al,0x29
  403b06:	mov    ds:0x617503ee,al
  403b0b:	mov    bl,0xf6
  403b0d:	(bad)  
  403b0e:	scas   al,BYTE PTR es:[edi]
  403b0f:	mov    dl,0x6a
  403b11:	add    BYTE PTR [ecx+0x5b75dcee],bh
  403b17:	xor    al,0x4
  403b19:	push   DWORD PTR [esi-0x23]
  403b1c:	sub    al,BYTE PTR [ecx+0x63]
  403b1f:	imul   eax,esp,0x57a79b79
  403b25:	cld    
	...
  403b32:	add    BYTE PTR [eax],al
  403b34:	add    bl,bh
  403b36:	cli    
  403b37:	fdivr  st,st(7)
  403b39:	cld    
  403b3a:	lahf   
  403b3b:	inc    edi
  403b3c:	cld    
  403b3d:	arpl   si,bp
  403b3f:	add    eax,DWORD PTR [eax]
  403b41:	lods   al,BYTE PTR ds:[esi]
  403b42:	mov    cl,0x2a
  403b44:	inc    ecx
  403b45:	arpl   WORD PTR [ebx+0x2f],si
  403b48:	mov    esi,DWORD PTR [ebx+edx*2+0x47]
  403b4c:	or     BYTE PTR [esi+0x4f],bh
  403b4f:	pop    ebp
  403b50:	dec    esp
  403b52:	xchg   ebp,eax
  403b53:	inc    ecx
  403b54:	add    al,0x4e
  403b56:	add    ebp,DWORD PTR [edx+0x0]
  403b59:	out    dx,al
  403b5a:	lods   al,BYTE PTR ds:[esi]
  403b5b:	or     edx,DWORD PTR [eax+0x4b]
  403b5e:	ins    DWORD PTR es:[edi],dx
  403b5f:	sub    al,BYTE PTR [ecx+0x63]
  403b62:	inc    edi
  403b63:	adc    ch,al
  403b65:	push   es
  403b66:	inc    eax
  403b67:	(bad)  
  403b69:	push   0xea05582e
  403b6e:	test   eax,0x6b5bebdf
  403b73:	lds    eax,FWORD PTR [eax+eiz*8]
  403b76:	add    eax,0xc6f603e6
  403b7b:	jb     0x403bc4
  403b7d:	ja     0x403bb7
  403b7f:	and    dl,al
  403b81:	addr16 add eax,0x347788b4
  403b87:	jb     0x403bd0
  403b89:	imul   ecx,DWORD PTR [ecx+ebp*1],0x58
  403b8d:	pop    esi
  403b8e:	test   DWORD PTR [ecx+0x310bd603],esi
  403b94:	add    al,0x63
  403b96:	add    eax,0x38e9
	...
  403ba7:	add    BYTE PTR [edx],ch
  403ba9:	ret    
  403baa:	in     eax,0x3
  403bac:	leave  
  403bad:	add    eax,0x4b90443
  403bb2:	inc    ebx
  403bb3:	add    al,0xb9
  403bb5:	add    eax,0x5638451
  403bba:	jmp    0xc14dca9b
  403bbf:	in     al,0x18
  403bc1:	add    eax,0x2c2b88e9
  403bc6:	test   eax,0x3a0c7740
  403bcb:	in     al,dx
  403bcc:	std    
  403bcd:	retf   
  403bce:	jmp    0xe945e6d6
  403bd3:	add    esp,DWORD PTR [ebx+0x3c]
  403bd6:	mov    al,0xc1
  403bd8:	addr16 add eax,0x8bc78914
  403bde:	sub    al,0xc
  403be0:	pop    eax
  403be1:	(bad)
  403be4:	jecxz  0x403c02
  403be6:	jmp    0xe9dda641
  403beb:	add    esp,DWORD PTR [ebx+0x5]
  403bee:	and    cl,al
  403bf0:	addr16 add eax,0xed5b564e
  403bf6:	cmp    ecx,eax
  403bf8:	arpl   WORD PTR ds:0x5094db6a,ax
  403bfe:	add    ah,ah
  403c00:	mov    ecx,0x60e8fff4
  403c05:	or     BYTE PTR [ebp-0x3f7090d7],dl
  403c0b:	adc    al,BYTE PTR [eax]
	...
  403c19:	add    BYTE PTR [eax],al
  403c1b:	pop    ebp
  403c1c:	popf   
  403c1d:	add    cl,ch
  403c1f:	pusha  
  403c20:	add    eax,0x55c2bc9
  403c25:	push   ebp
  403c26:	jb     0x403c74
  403c28:	add    esp,0xfffffffd
  403c2b:	retf   
  403c2c:	add    eax,0x512fe96a
  403c31:	or     BYTE PTR [ecx],al
  403c33:	sbb    ecx,ebx
  403c35:	add    cl,ch
  403c37:	ins    DWORD PTR es:[edi],dx
  403c38:	lds    esi,FWORD PTR [ebx+edx*1+0x6f]
  403c3c:	xor    eax,0xd70d8ae8
  403c41:	jmp    DWORD PTR [eax-0x5e]
  403c44:	fstp   DWORD PTR [eax+0x19]
  403c47:	cmp    BYTE PTR [ecx-0x4],dl
  403c4a:	mov    esi,0x79e80db2
  403c4f:	sbb    al,0x6
  403c51:	add    dl,ah
  403c53:	and    BYTE PTR [ecx+0xc],dl
  403c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c57:	xchg   edx,eax
  403c58:	fld1   
  403c5a:	sbb    DWORD PTR ds:0x20c2ffd7,edx
  403c60:	jmp    0x403c65
  403c62:	bound  esp,QWORD PTR [edx+0x63abc9d9]
  403c68:	add    eax,0x32cb7255
  403c6d:	mov    edx,DWORD PTR [ebx+ebx*2]
  403c70:	imul   edx,DWORD PTR [eax],0x1a
  403c73:	mov    bh,0x81
  403c75:	cli    
  403c76:	cbw    
  403c78:	imul   eax,DWORD PTR [eax],0xffffffd3
  403c7b:	pusha  
  403c7c:	imul   eax,DWORD PTR [ebx],0xffffffc3
	...
  403c8b:	add    BYTE PTR [eax],al
  403c8d:	add    BYTE PTR [eax+0x6b],ah
  403c90:	add    eax,ecx
  403c92:	pusha  
  403c93:	add    eax,0xba0a0000
  403c98:	jne    0x403ca2
  403c9a:	xor    ah,BYTE PTR [esi]
  403c9c:	retf   
  403c9d:	add    BYTE PTR [edx-0x77],bh
  403ca0:	add    eax,DWORD PTR [eax-0x32]
  403ca3:	push   cs
  403ca4:	push   0x0
  403ca6:	mov    edx,0x8acb6cea
  403cab:	add    cl,BYTE PTR [ecx+0x688643]
  403cb1:	push   0x7a
  403cb3:	push   0x68486a00
  403cb8:	add    bh,bh
  403cba:	sbb    edx,ebp
  403cbc:	pop    esi
  403cbd:	retf   
  403cbe:	cmp    al,BYTE PTR [edx]
  403cc0:	or     eax,eax
  403cc2:	into   
  403cc3:	sub    ecx,DWORD PTR [ecx+0x684e43]
  403cc9:	push   0x4a
  403ccb:	push   0x123e6a00
  403cd0:	call   0x423e24
  403cd5:	mov    DWORD PTR [ecx+0x9],ecx
  403cd8:	or     eax,eax
  403cda:	dec    edi
  403cdb:	and    eax,0xe9fe73ff
  403ce0:	repnz retf 0x1fa
  403ce4:	push   DWORD PTR [ebx]
  403ce6:	shl    dh,cl
  403ce8:	retf   0xa00
  403ceb:	ret    
  403cec:	add    edi,edi
  403cee:	aad    0xba
  403cf0:	(bad)  
  403cf1:	jmp    0x403cf3
	...
  403cff:	add    BYTE PTR [eax],al
  403d01:	pop    es
  403d02:	mov    ebx,0xc806e833
  403d07:	add    BYTE PTR [eax],al
  403d09:	std    
  403d0a:	(bad)  
  403d0b:	(bad)  
  403d0c:	call   DWORD PTR [ebp-0x45]
  403d0f:	sub    eax,eax
  403d11:	adc    edi,DWORD PTR [edi]
  403d13:	or     BYTE PTR [edi],cl
  403d15:	aas    
  403d16:	ret    0xc95b
  403d19:	mov    BYTE PTR [edx],cl
  403d1b:	add    BYTE PTR [ebp+0x63],dl
  403d1e:	arpl   di,sp
  403d20:	push   ebx
  403d21:	fsubr  DWORD PTR [eax+0x3f58830b]
  403d27:	dec    edi
  403d28:	pop    ss
  403d29:	xchg   esp,eax
  403d2a:	call   0x3:0x235ae80b
  403d31:	test   BYTE PTR [edx+0x11cee7ff],bl
  403d37:	add    eax,DWORD PTR [eax]
  403d39:	je     0x403cf5
  403d3b:	jmp    0x403ce3
  403d3d:	cdq    
  403d3e:	jmp    0x403d43
  403d40:	pop    ebx
  403d41:	call   0xe757:0xb7ffff29
  403d48:	sbb    DWORD PTR [edi],0x4cffe9ff
  403d4e:	jne    0x403d82
  403d50:	add    DWORD PTR [esi+0x63412bc6],0xffffffde
  403d57:	dec    edi
  403d58:	adc    eax,0x282bfa34
  403d5d:	mov    ds:0x2a8aebde,al
  403d62:	(bad)  
  403d63:	fld    st(7)
	...
  403d71:	add    BYTE PTR [eax],al
  403d73:	add    BYTE PTR [esi-0xa],ah
  403d76:	sub    eax,DWORD PTR [ecx+0x63]
  403d79:	fiadd  WORD PTR [ebx]
  403d7b:	add    BYTE PTR [ebx+0x5f],ah
  403d7e:	pop    ss
  403d7f:	sub    al,0x3b
  403d81:	sbb    eax,0xd1770004
  403d86:	fdiv   DWORD PTR ds:0x42b647
  403d8c:	sti    
  403d8d:	or     bl,bl
  403d8f:	jmp    esp
  403d91:	stos   DWORD PTR es:[edi],eax
  403d92:	jmp    FWORD PTR [ebx]
  403d94:	mov    ebx,DWORD PTR ds:0xde630004
  403d9a:	add    ecx,DWORD PTR [ebp-0x16b11a]
  403da0:	(bad)  
  403da1:	out    dx,al
  403da2:	jmp    0x403d4a
  403da4:	mov    bl,0x5
  403da6:	data16 (bad) 
  403da9:	mov    cl,BYTE PTR [ebp-0x17]
  403dac:	lods   al,BYTE PTR ds:[esi]
  403dad:	aam    0xb9
  403daf:	jmp    0x403d7a
  403db1:	aad    0x4e
  403db3:	fldz   
  403db5:	dec    edx
  403db6:	inc    ebp
  403db7:	xor    al,0xb
  403db9:	adc    eax,0x5d634311
  403dbe:	jmp    0x403dc3
  403dc0:	arpl   WORD PTR [ebp+0x5a87141],ax
  403dc6:	jmp    0x6444e0d7
  403dcb:	cmp    eax,0xc0e90562
  403dd0:	fcompp 
  403dd2:	(bad)  
  403dd3:	fcomp  DWORD PTR [ebp+eax*1-0x17]
  403dd7:	add    eax,DWORD PTR [eax]
	...
  403de5:	add    BYTE PTR [eax],al
  403de7:	arpl   sp,cx
  403de9:	fdivr  QWORD PTR fs:[esp+edx*8]
  403ded:	neg    al
  403def:	push   esp
  403df0:	add    eax,0x5f636de9
  403df5:	jmp    0xe99fa167
  403dfa:	xchg   dh,ah
  403dfc:	int3   
  403dfd:	(bad)  
  403dfe:	fsub   DWORD PTR [esi*1-0x1be081a4]
  403e05:	(bad)  
  403e06:	fdiv   DWORD PTR [ebx-0x3308b2c]
  403e0c:	shl    DWORD PTR [esi-0x3e2e7128],cl
  403e12:	sub    BYTE PTR ss:0x4230ce9,al
  403e19:	fs hlt 
  403e1b:	arpl   WORD PTR ds:0x1ce36be9,ax
  403e21:	sub    BYTE PTR [ebx+ecx*2],al
  403e24:	adc    eax,0xdd6342d1
  403e29:	(bad)  
  403e2a:	xlat   BYTE PTR ds:[ebx]
  403e2b:	int3   
  403e2c:	rol    DWORD PTR [eax],cl
  403e2e:	loop   0x403dd0
  403e30:	add    eax,DWORD PTR [eax+edi*2+0x72000560]
  403e37:	lock add DWORD PTR [ebp-0x2c44a3],0xbcdd6eb9
  403e42:	dec    ebp
  403e43:	mov    ebx,0x6b290bd3
  403e48:	mov    edx,ebx
  403e4a:	jmp    0x403e4f
	...
  403e57:	add    BYTE PTR [eax],al
  403e59:	add    BYTE PTR [eax+0x5],ah
  403e5c:	mov    DWORD PTR [eax+eax*4-0x1d],ebp
  403e60:	jmp    FWORD PTR [esi]
  403e62:	in     eax,0x89
  403e64:	call   0x5113d97f
  403e69:	xchg   ecx,eax
  403e6a:	or     al,0x1d
  403e6c:	inc    ecx
  403e6d:	jmp    0xff20d7fd
  403e72:	xor    al,0xd3
  403e74:	push   0x800560eb
  403e79:	adc    ebx,esi
  403e7b:	into   
  403e7c:	push   esi
  403e7e:	pop    eax
  403e7f:	lds    ecx,FWORD PTR [edi]
  403e81:	fld    QWORD PTR gs:0xcde1e900
  403e88:	add    esi,ebp
  403e8a:	scas   al,BYTE PTR es:[edi]
  403e8b:	jno    0x403e8d
  403e8d:	jmp    0x953f73f2
  403e92:	pavgw  mm7,mm7
  403e95:	(bad)  
  403e96:	dec    edi
  403e97:	shl    BYTE PTR [ebp-0x2cfb47],cl
  403e9d:	rol    DWORD PTR [esi],0xda
  403ea0:	jmp    FWORD PTR [esi-0x69177716]
  403ea6:	or     al,0xd3
  403ea8:	push   eax
  403ea9:	adc    DWORD PTR [ebx+0xde9411d],edx
  403eaf:	cdq    
  403eb0:	loopne 0x403f30
  403eb2:	mov    ah,0xd2
  403eb4:	push   0x6c800
  403eb9:	xor    dl,0x42
  403ebc:	sti    
  403ebd:	inc    DWORD PTR [eax]
	...
  403ecb:	add    BYTE PTR [eax],al
  403ecd:	dec    ebp
  403ece:	(bad)  
  403ecf:	mov    edi,0xbd868674
  403ed4:	call   0x23ff8e6
  403ed9:	xchg   esp,eax
  403eda:	out    dx,eax
  403edb:	dec    edi
  403edc:	push   eax
  403edd:	aas    
  403ede:	test   ah,bh
  403ee0:	out    dx,eax
  403ee1:	sub    eax,0xd2e850ba
  403ee6:	rol    DWORD PTR [eax],0x0
  403ee9:	jmp    0xffba:0x1dfc857d
  403ef0:	push   eax
  403ef1:	dec    ebp
  403ef2:	je     0x403ee0
  403ef4:	out    dx,eax
  403ef5:	cmp    eax,0x56cfe8ba
  403efa:	mov    edx,0x744d58ff
  403eff:	call   0x50faacf3
  403f04:	call   DWORD PTR [edi+0x4dffefdd]
  403f0a:	fidivr WORD PTR [esp+esi*8+0x19e8bb4d]
  403f11:	xor    bh,BYTE PTR [ebx+0x7c6aebff]
  403f17:	test   esp,edi
  403f19:	sbb    eax,0x2250ffbb
  403f1e:	or     ecx,ecx
  403f20:	add    BYTE PTR [edx],cl
  403f22:	inc    esi
  403f23:	push   eax
  403f24:	lea    eax,[edi-0x32001046]
  403f2a:	adc    eax,0xeb1eb5ff
  403f2f:	(bad)  
  403f30:	inc    DWORD PTR [eax]
	...
  403f3e:	add    BYTE PTR [eax],al
  403f40:	and    dl,BYTE PTR [ebp-0xc]
  403f43:	(bad)  
  403f44:	mov    ebp,0xcdf7f2dd
  403f49:	mov    edx,0x7c63b5ff
  403f4e:	out    0xff,al
  403f50:	fadd   QWORD PTR [ebx-0x752b0822]
  403f56:	(bad)  
  403f57:	test   edi,edx
  403f59:	adc    dh,0xff
  403f5c:	mov    edx,0xbcffd512
  403f61:	bound  edx,QWORD PTR [eax-0x4]
  403f64:	retf   
  403f65:	stc    
  403f66:	leave  
  403f67:	add    BYTE PTR [ebx-0x4a],ah
  403f6a:	add    edi,edi
  403f6c:	out    dx,al
  403f6d:	sub    esp,esi
  403f6f:	call   FWORD PTR [ebx+eax*2+0x4a94f433]
  403f76:	imul   eax,DWORD PTR [eax],0xefe7588c
  403f7c:	test   BYTE PTR [edx],bl
  403f7e:	jmp    0x403fc3
  403f80:	ja     0x403fa4
  403f82:	(bad)  
  403f83:	(bad)  
  403f84:	fdivp  st(7),st
  403f86:	in     eax,0xff
  403f88:	ins    BYTE PTR es:[edi],dx
  403f89:	mov    edx,esi
  403f8b:	mov    ch,0x73
  403f8d:	or     dl,dh
  403f8f:	dec    DWORD PTR [ebx+0xd]
  403f92:	int3   
  403f93:	add    BYTE PTR [ebx+0x61],ah
  403f96:	ret    
  403f97:	js     0x403f31
  403f99:	iret   
  403f9a:	(bad)  
  403f9b:	lock xor al,0xd8
  403f9e:	aad    0xe8
  403fa0:	pushf  
  403fa1:	iret   
  403fa2:	aad    0xff
	...
  403fb0:	add    BYTE PTR [eax],al
  403fb2:	add    dl,ch
  403fb4:	popa   
  403fb5:	in     al,dx
  403fb6:	out    dx,eax
  403fb7:	sub    al,0xb0
  403fb9:	aad    0xb5
  403fbb:	cmp    ecx,eax
  403fbd:	aad    0xff
  403fbf:	or     esp,DWORD PTR [eax-0x33]
  403fc2:	call   DWORD PTR [esp+edi*2]
  403fc5:	sub    al,0x28
  403fc7:	mov    ds:0xffb5d4de,al
  403fcc:	(bad)  
  403fcd:	aad    0xff
  403fcf:	or     ebx,DWORD PTR [ebp-0x34]
  403fd2:	add    BYTE PTR [ebx+0x5],ah
  403fd5:	bnd ret 
  403fd7:	ja     0x403fc5
  403fd9:	jno    0x403f62
  403fdb:	sti    
  403fdc:	loopne 0x403f74
  403fde:	aad    0xe8
  403fe0:	aad    0x62
  403fe2:	pop    ss
  403fe3:	mov    ebx,DWORD PTR ds:0xa9d00428
  403fe9:	jle    0x403f7a
  403feb:	mov    edi,0xcbd576e0
  403ff0:	pop    esi
  403ff1:	mov    eax,ds:0x6c826304
  403ff6:	loopne 0x403fb4
  403ff8:	rcr    BYTE PTR [esi+0x34],1
  403ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ffc:	call   0x5341:0xd09ce545
  404003:	stos   BYTE PTR es:[edi],al
  404004:	add    eax,0x4da37ee9
  404009:	mov    dl,0xd4
  40400b:	into   
  40400c:	loope  0x404054
  40400e:	aad    0x7c
  404010:	(bad)  [edi]
  404012:	out    0x74,al
  404014:	shl    BYTE PTR [eax+0x7f],1
	...
  404023:	add    BYTE PTR [eax],al
  404025:	add    BYTE PTR [ebx-0x20],bh
  404028:	push   ds
  404029:	aad    0x64
  40402b:	call   0x1601:0xd05ce501
  404032:	dec    esp
  404033:	rol    BYTE PTR [esi],1
  404035:	mov    eax,ds:0x3a81d7f
  40403a:	inc    esp
  40403b:	call   0x2301:0xd03ce50d
  404042:	sub    eax,DWORD PTR ds:0x592308e9
  404048:	add    cl,BYTE PTR [ecx-0x2b39232a]
  40404e:	sbb    al,0x7c
  404050:	(bad)  [eax+0x43112156]
  404056:	arpl   sp,dx
  404058:	test   esp,edx
  40405a:	into   
  40405b:	call   0xd0580660
  404060:	call   0x456946
  404065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404066:	fst    st(4)
  404068:	out    dx,eax
  404069:	sahf   
  40406a:	paddusw mm3,QWORD PTR [edx-0x79]
  40406e:	mov    bh,0xcf
  404070:	call   DWORD PTR [esp+edi*4-0x21]
  404074:	inc    DWORD PTR [esi+0x7eee3fb8]
  40407a:	scas   eax,DWORD PTR es:[edi]
  40407b:	das    
  40407c:	pop    esi
  40407d:	mov    al,ds:0x7d8b39a3
  404082:	dec    edx
  404083:	std    
  404084:	out    0x52,eax
  404086:	sahf   
  404087:	iret   
  404088:	push   DWORD PTR [edx+0x0]
	...
  404097:	add    BYTE PTR [eax],al
  404099:	lock iret 
  40409b:	xor    eax,0x46486f
  4040a0:	pop    esi
  4040a1:	(bad)  
  4040a2:	shl    BYTE PTR [ebp-0xf],1
  4040a5:	out    0x42,eax
  4040a7:	add    al,0x70
  4040a9:	jne    0x404034
  4040ab:	sub    BYTE PTR [eax-0x1a3d41a0],ch
  4040b1:	pusha  
  4040b2:	cmp    cl,BYTE PTR [ebx-0x7371ceb]
  4040b8:	mov    dh,0xa7
  4040ba:	dec    ecx
  4040bb:	clc    
  4040bc:	jmp    0x6a404621
  4040c1:	lods   eax,DWORD PTR ds:[esi]
  4040c2:	std    
  4040c3:	(bad)  
  4040c4:	jl     0x404118
  4040c6:	shl    BYTE PTR [ebp-0x13],1
  4040c9:	das    
  4040ca:	pop    ecx
  4040cb:	or     BYTE PTR [ebx-0xcf922a0],al
  4040d1:	adc    bh,cl
  4040d3:	mov    DWORD PTR [ebx+edx*1],ebp
  4040d6:	fild   DWORD PTR [edi]
  4040d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040d9:	call   0x8b05:0x60e900d1
  4040e0:	or     al,0xe9
  4040e2:	sbb    eax,0xaffa0041
  4040e7:	adc    ecx,DWORD PTR [ebx+0x473bb53f]
  4040ed:	push   cs
  4040ee:	cs or  edi,eax
  4040f1:	aas    
  4040f2:	rol    DWORD PTR [ecx],0x0
  4040f5:	cli    
  4040f6:	add    ch,bl
  4040f8:	push   es
  4040f9:	jno    0x4040ed
  4040fb:	or     bh,bh
	...
  404109:	add    BYTE PTR [eax],al
  40410b:	add    BYTE PTR [edi-0x50],bh
  40410e:	cmp    DWORD PTR [ebp-0xe],0x9
  404112:	jne    0x40411c
  404114:	in     eax,0x2c
  404116:	cld    
  404117:	call   0x3ff354
  40411c:	inc    ecx
  40411d:	cmp    al,0xf8
  40411f:	pop    edi
  404120:	add    ecx,eax
  404122:	or     BYTE PTR [eax],al
  404124:	in     eax,dx
  404125:	dec    edi
  404126:	cmp    eax,0x485286
  40412b:	jmp    0x4040af
  40412d:	or     ecx,DWORD PTR [ebx-0x9c5ddc1]
  404133:	jmp    DWORD PTR ds:0x4e75fece
  404139:	mov    edx,0x48628605
  40413e:	add    BYTE PTR [eax],al
  404140:	mov    al,BYTE PTR [edx]
  404142:	add    BYTE PTR [edi+0x39],bl
  404145:	or     al,0x8b
  404147:	in     al,dx
  404148:	lods   eax,DWORD PTR ds:[esi]
  404149:	or     al,0x6a
  40414b:	add    BYTE PTR [ebp+0x2c],dh
  40414e:	or     al,ch
  404150:	jge    0x404112
  404152:	(bad)  
  404153:	call   ecx
  404155:	sar    edi,0x75
  404158:	push   edx
  404159:	stos   BYTE PTR es:[edi],al
  40415a:	and    al,bh
  40415c:	dec    edx
  40415d:	add    al,BYTE PTR [ebx+0xf2c4bf8]
  404163:	push   edi
  404164:	mov    edx,0x327521f3
  404169:	mov    esi,0xdd63778d
  40416e:	jle    0x404138
	...
  40417c:	add    BYTE PTR [eax],al
  40417e:	add    BYTE PTR [eax],dl
  404180:	mov    BYTE PTR [edx],dh
  404182:	push   0x44f416
  404187:	lods   al,BYTE PTR ds:[esi]
  404188:	mov    ah,0x6e
  40418a:	enter  0xdc63,0xfe
  40418e:	mov    edi,0x40c9e86f
  404193:	fcomp  QWORD PTR [di+0x5c]
  404197:	jns    0x404175
  404199:	cmp    ch,al
  40419b:	in     al,dx
  40419c:	mov    ds:0x9c680003,eax
  4041a1:	push   edi
  4041a2:	add    eax,0xeb03dba5
  4041a7:	pusha  
  4041a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041a9:	or     al,BYTE PTR [eax]
  4041ab:	adc    al,0x84
  4041ad:	mov    dl,0xc6
  4041af:	arpl   sp,bx
  4041b1:	xchg   al,bh
  4041b3:	pusha  
  4041b4:	scas   eax,DWORD PTR es:[edi]
  4041b5:	push   es
  4041b6:	(bad)  
  4041b7:	pop    esp
  4041b8:	fdivr  QWORD PTR [esi-0x39]
  4041bb:	cmp    eax,0x5fc2bc97
  4041c0:	fdivr  QWORD PTR [eax]
  4041c2:	mov    edi,DWORD PTR [edi+0x5a]
  4041c5:	(bad)  
  4041c6:	cld    
  4041c7:	fsubr  DWORD PTR [eax-0x539cfb01]
  4041cd:	add    eax,DWORD PTR [eax]
  4041cf:	adc    eax,DWORD PTR [ecx+eax*8-0xb]
  4041d3:	ins    BYTE PTR es:[edi],dx
  4041d4:	es jl  0x40421c
  4041d7:	addr16 out dx,al
  4041d9:	push   edi
  4041da:	or     al,0x5c
  4041dc:	push   0xffffffcf
  4041de:	dec    esi
  4041e0:	out    0xdb,al
  4041e2:	hlt    
	...
  4041ef:	add    BYTE PTR [eax],al
  4041f1:	add    BYTE PTR [esi+0x4],dl
  4041f4:	sar    bh,cl
  4041f6:	into   
  4041f7:	scas   al,BYTE PTR es:[edi]
  4041f8:	shl    BYTE PTR [ebp+0x6f],cl
  4041fb:	rcl    DWORD PTR [edi-0x4],cl
  4041fe:	dec    ebx
  4041ff:	or     BYTE PTR [bx+si],al
  404202:	arpl   WORD PTR ds:0xde2757e6,ax
  404208:	jns    0x4041e1
  40420a:	sbb    al,0xcd
  40420c:	mov    al,ds:0x3a0567c6
  404211:	pop    esp
  404212:	xor    DWORD PTR [esi],ebx
  404214:	sub    BYTE PTR [ebx+edi*8],al
  404217:	mov    eax,0x6304a7
  40421c:	test   eax,0x91805158
  404221:	pop    esp
  404222:	or     eax,0x9004281e
  404227:	fnsave [ecx+0x4a0563ca]
  40422d:	ror    DWORD PTR [ebx-0x5fd316ba],cl
  404233:	xor    dh,BYTE PTR [edx-0x20]
  404236:	sub    eax,0x36d11638
  40423b:	std    
  40423c:	sbb    BYTE PTR [edi+0x73e9059d],0x58
  404243:	(bad)
  404246:	add    al,0x30
  404248:	mov    edi,0xe8fda1ba
  40424d:	jl     0x404265
  40424f:	std    
  404250:	js     0x4042cf
  404252:	stos   DWORD PTR es:[edi],eax
  404253:	jne    0x4042c7
  404255:	push   edi
	...
  404262:	add    BYTE PTR [eax],al
  404264:	add    BYTE PTR [edi+0x20],dl
  404267:	sub    eax,edx
  404269:	mov    edx,0x74d136cc
  40426e:	jne    0x4042ab
  404270:	mov    ds:0x3e685d3,al
  404275:	out    dx,eax
  404276:	in     eax,dx
  404277:	mov    ch,0x34
  404279:	dec    ebx
  40427a:	sub    BYTE PTR [edi],0x4
  40427d:	arpl   WORD PTR [eax],ax
  40427f:	sub    DWORD PTR [edi+0x64],edx
  404282:	sub    al,0xa2
  404284:	xor    DWORD PTR [edx],ebx
  404286:	(bad)  
  404287:	icebp  
  404288:	add    ebp,edx
  40428a:	add    al,BYTE PTR [eax]
  40428c:	push   0x29
  40428e:	add    ebx,ebp
  404290:	pop    ss
  404291:	fild   WORD PTR ds:0x2c60e900
  404297:	pop    ebx
  404298:	aas    
  404299:	fadd   st,st(6)
  40429b:	or     cl,ch
  40429d:	dec    ebp
  40429e:	sub    ah,0x62
  4042a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042a2:	std    
  4042a3:	or     ch,BYTE PTR [ecx+0x18002ac]
  4042a9:	addr16 push edx
  4042ab:	or     DWORD PTR [ecx+0x60],esi
  4042ae:	add    eax,0xc6a9e900
  4042b3:	add    al,0xe9
  4042b5:	inc    edi
  4042b6:	mov    bh,0xeb
  4042b8:	mul    al
  4042ba:	or     al,0x5c
  4042bc:	sbb    eax,0xbe38855c
  4042c1:	xor    eax,0x60e8ba04
  4042c6:	add    eax,0x9200
	...
  4042d7:	add    BYTE PTR [ebp-0x71],ah
  4042da:	add    cl,ch
  4042dc:	pusha  
  4042dd:	add    eax,0x5586940
  4042e2:	jne    0x404331
  4042e4:	daa    
  4042e5:	(bad)  
  4042e6:	leave  
  4042e7:	sub    esp,DWORD PTR [ebp+eax*1+0x55]
  4042eb:	bound  esi,QWORD PTR [ebx+esi*1+0x420fba56]
  4042f2:	or     al,0xec
  4042f4:	pusha  
  4042f5:	add    DWORD PTR [eax],eax
  4042f7:	jmp    0x419127ad
  4042fc:	scas   al,BYTE PTR es:[edi]
  4042fd:	sar    bh,1
  4042ff:	cs out dx,eax
  404301:	int3   
  404302:	mov    eax,DWORD PTR [ecx-0x19]
  404305:	push   ecx
  404306:	or     BYTE PTR [edx-0x63],dh
  404309:	stc    
  40430a:	jmp    0xb420:0xb3cfceb
  404311:	add    BYTE PTR [eax+0x74c91c00],al
  404317:	cmc    
  404318:	xor    DWORD PTR [eax+0xfa60274],edx
  40431e:	sub    eax,eax
  404320:	mov    al,ds:0x1475c983
  404325:	dec    edi
  404326:	ret    
  404327:	pop    ebx
  404328:	pop    esp
  404329:	sbb    cl,cl
  40432b:	ret    0x702
  40432e:	push   ebx
  40432f:	push   esi
  404330:	repz std 
  404332:	(bad)  
  404333:	(bad)  
  404334:	cli    
  404335:	push   esi
  404336:	xor    edx,edx
  404338:	call   0x0:0x90daf6
	...
  40434b:	ficom  WORD PTR [ecx+0xf]
  40434e:	mov    dh,0xba
  404350:	push   ecx
  404351:	cmp    al,0x2b
  404353:	push   0x2c
  404355:	push   es
  404356:	nop
  404357:	dec    ecx
  404358:	(bad)  
  404359:	ds nop
  40435b:	mov    ebp,esi
  40435d:	cs nop
  40435f:	ja     0x404364
  404361:	nop
  404362:	cmp    eax,0xfffffffa
  404365:	pop    DWORD PTR [ebx-0x2]
  404368:	test   BYTE PTR [edi+0x38fac07c],0x90
  40436f:	mov    ebp,0xb90403fd
  404374:	xchg   esi,eax
  404375:	inc    ebx
  404376:	cmp    al,0xcb
  404378:	push   esi
  404379:	jl     0x404386
  40437b:	outs   dx,BYTE PTR ds:[esi]
  40437c:	pop    ds
  40437d:	nop
  40437e:	jg     0x404304
  404380:	jmp    0x3c43:0x96799040
  404387:	stos   DWORD PTR es:[edi],eax
  404388:	push   esi
  404389:	jl     0x404395
  40438b:	outs   dx,BYTE PTR ds:[esi]
  40438c:	cmp    al,0x90
  40438e:	jg     0x404317
  404390:	jmp    0xc2c1:0x462a0346
  404397:	inc    esp
  404398:	in     al,0xb1
  40439a:	shl    DWORD PTR [ebx+0x26],0x6
  40439e:	mov    esp,DWORD PTR [ecx]
  4043a0:	stos   DWORD PTR es:[edi],eax
  4043a1:	mov    ebx,0x3ad43bc1
  4043a6:	nop
  4043a7:	call   0x989eb7c2
  4043ac:	pop    ds
  4043ad:	cmp    DWORD PTR [ebx+0x0],ecx
	...
  4043bb:	add    BYTE PTR [eax],al
  4043bd:	add    BYTE PTR [edi],bh
  4043bf:	outs   dx,DWORD PTR ds:[esi]
  4043c0:	ss push esi
  4043c2:	daa    
  4043c3:	push   edi
  4043c4:	pop    eax
  4043c5:	or     bl,dh
  4043c7:	push   esi
  4043c8:	push   eax
  4043c9:	adc    bl,dh
  4043cb:	inc    ax
  4043cd:	or     al,0xf3
  4043cf:	out    dx,al
  4043d0:	stos   BYTE PTR es:[edi],al
  4043d1:	jecxz  0x404414
  4043d3:	sub    al,0x34
  4043d5:	nop
  4043d6:	or     ecx,DWORD PTR [esi]
  4043d8:	iret   
  4043d9:	push   esp
  4043db:	sub    ecx,DWORD PTR [eax-0x661b9237]
  4043e1:	sar    ebx,0xd3
  4043e4:	jae    0x404429
  4043e6:	shl    DWORD PTR [ebx+0x5ef35973],0xc5
  4043ed:	add    al,0xf3
  4043ef:	pop    esi
  4043f0:	fadd   QWORD PTR [ebx+esi*8]
  4043f3:	add    ch,BYTE PTR [esi+0x739ee890]
  4043f9:	pop    esi
  4043fa:	adc    al,0xf7
  4043fc:	mov    esp,0x38dc5fc2
  404401:	mov    esi,DWORD PTR [edi-0x621338a4]
  404407:	sub    cl,dh
  404409:	push   ebx
  40440a:	dec    eax
  40440b:	pop    ss
  40440c:	add    BYTE PTR [ebp-0x71],0x8b
  404410:	pop    ebx
  404411:	cli    
  404412:	cmp    ebx,DWORD PTR [ebp-0x24c900fd]
  404418:	sbb    al,0x41
  40441a:	arpl   WORD PTR [esi+eiz*1-0x3a],ax
  40441e:	arpl   sp,bx
  404420:	cli    
  404421:	mov    edi,0x0
	...
  40442e:	add    BYTE PTR [eax],al
  404430:	add    dh,ch
  404432:	add    al,0xcb
  404434:	into   
  404435:	(bad)  
  404436:	cmc    
  404437:	sbb    eax,0xea5b6758
  40443c:	pop    ecx
  40443d:	arpl   ax,cx
  40443f:	xchg   esp,eax
  404440:	sti    
  404441:	inc    ebp
  404442:	push   ebx
  404443:	add    eax,0xe9bf57db
  404448:	add    ebp,DWORD PTR [eax-0x3b]
  40444b:	jl     0x404451
  40444d:	mov    al,ds:0x3bcf74c8
  404452:	fldcw  WORD PTR [esp+eax*1-0x23e039d]
  404459:	ffreep st(2)
  40445b:	jmp    0x64baa763
  404460:	rol    DWORD PTR ds:0x8b34c6c9,1
  404466:	add    eax,ebp
  404468:	add    esp,DWORD PTR [ebx-0x23]
  40446b:	xchg   ebx,eax
  40446c:	enter  0x563,0xe2
  404470:	ret    
  404471:	push   esp
  404472:	adc    DWORD PTR [ebp+0x4],0x7dc0563
  404479:	bound  eax,QWORD PTR ds:0xa6e5fce9
  40447f:	jmp    0xe99ba787
  404484:	jle    0x40446c
  404486:	aam    0x7f
  404488:	int    0xb4
  40448a:	xor    eax,0x5a78d81
  40448f:	jmp    0x68152312
  404494:	int    0x0
	...
  4044a2:	add    BYTE PTR [eax],al
  4044a4:	pushf  
  4044a5:	xor    eax,0xc8954451
  4044aa:	push   esi
  4044ab:	stc    
  4044ac:	int3   
  4044ad:	push   edx
  4044ae:	in     eax,dx
  4044af:	pop    ebx
  4044b0:	jecxz  0x4044cf
  4044b2:	test   al,0x3
  4044b4:	out    dx,al
  4044b5:	cmp    BYTE PTR [edx],0xce
  4044b8:	je     0x404482
  4044ba:	add    BYTE PTR [ecx+0x2ef6ae88],bl
  4044c0:	xchg   esi,eax
  4044c1:	enter  0xf175,0x90
  4044c5:	frstor [esi+edx*1]
  4044c8:	es enter 0xe6eb,0x1f
  4044cd:	push   edx
  4044ce:	or     BYTE PTR [esp+ebx*8-0x2d],bl
  4044d2:	inc    BYTE PTR [esi]
  4044d4:	cs xor eax,0xc80d3ee8
  4044da:	jmp    DWORD PTR [eax-0x1c]
  4044dd:	fdivr  st,st(6)
  4044df:	out    dx,al
  4044e0:	pop    ss
  4044e1:	pop    ebx
  4044e2:	add    BYTE PTR [ebx+0x67],dl
  4044e5:	pop    ebx
  4044e6:	add    dl,BYTE PTR [ebx+0x5f]
  4044e9:	pop    ebx
  4044ea:	add    eax,DWORD PTR [ecx+0x67]
  4044ed:	add    eax,0x9217a900
  4044f2:	in     al,dx
  4044f3:	(bad)  
  4044f4:	das    
  4044f5:	enter  0xcde8,0x23
  4044f9:	add    eax,0xcda56000
  4044fe:	inc    eax
  4044ff:	xor    eax,0xf975c6f7
  404504:	scas   eax,DWORD PTR es:[edi]
  404505:	push   ecx
  404506:	or     al,0x9e
	...
  404514:	add    BYTE PTR [eax],al
  404516:	add    BYTE PTR ds:0xaec7e8cd,ch
  40451c:	(bad)  
  40451d:	jmp    DWORD PTR [edx-0x8]
  404520:	(bad)  
  404521:	jne    0x4044a4
  404523:	cwde   
  404524:	stos   BYTE PTR es:[edi],al
  404525:	ret    
  404526:	jmp    0xfd1b418b
  40452b:	stos   DWORD PTR es:[edi],eax
  40452c:	(bad)  
  40452d:	mov    ch,0x7d
  40452f:	xchg   esi,eax
  404530:	(bad)  
  404531:	call   DWORD PTR [ecx+0x6d]
  404534:	rol    DWORD PTR [eax],0xe9
  404537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404538:	xchg   ecx,eax
  404539:	in     al,dx
  40453a:	push   edi
  40453b:	lahf   
  40453c:	(bad)  
  40453d:	call   0x7f763
  404542:	add    cl,dh
  404544:	les    ebx,FWORD PTR [ebx-0x37]
  404547:	dec    eax
  404548:	enter  0x54ff,0x1
  40454c:	test   al,0x81
  40454e:	les    esp,FWORD PTR [esi]
  404550:	mov    edx,0xba19ffff
  404555:	jne    0x404563
  404557:	jne    0x404588
  404559:	or     BYTE PTR [eax+0x70],ch
  40455c:	jmp    0x290e:0xef550040
  404563:	or     eax,DWORD PTR [ebx]
  404565:	call   0xfffb7523
  40456a:	or     edi,DWORD PTR [edx-0x37]
  40456d:	test   dl,bl
  40456f:	cmp    al,BYTE PTR [ebx]
  404571:	add    BYTE PTR [ebx],ch
  404573:	and    DWORD PTR [ebp-0x7b],ecx
  404576:	out    dx,eax
  404577:	xor    al,0xbb
  404579:	call   DWORD PTR [eax+0x0]
	...
  404588:	add    BYTE PTR [eax],al
  40458a:	mov    ds:0xfa000105,al
  40458f:	stos   BYTE PTR es:[edi],al
  404590:	in     al,0xc3
  404592:	or     al,BYTE PTR [ebx]
  404594:	or     eax,eax
  404596:	add    eax,0xfa00bd47
  40459b:	add    bh,BYTE PTR ds:0x2fb04
  4045a1:	cmovge ebp,DWORD PTR [edi+0x0]
  4045a5:	add    dl,cl
  4045a7:	dec    ebp
  4045a8:	inc    ebp
  4045a9:	cld    
  4045aa:	mov    ch,BYTE PTR [ecx-0x452a1646]
  4045b0:	lea    eax,[ebp-0x442b]
  4045b6:	pop    edx
  4045b7:	test   eax,0xba35fd4f
  4045bc:	or     eax,eax
  4045be:	scas   eax,DWORD PTR es:[edi]
  4045bf:	fisub  WORD PTR [edi-0x80]
  4045c2:	jb     0x404604
  4045c4:	add    BYTE PTR [ebp-0x15601],cl
  4045ca:	arpl   WORD PTR [edi],bp
  4045cc:	xor    al,0xe8
  4045ce:	jnp    0x404601
  4045d0:	retf   
  4045d1:	(bad)  
  4045d2:	jl     0x40455d
  4045d4:	sti    
  4045d5:	dec    edi
  4045d6:	mov    ecx,ebx
  4045d8:	sar    edi,1
  4045da:	ins    BYTE PTR es:[edi],dx
  4045db:	inc    ebx
  4045dc:	sti    
  4045dd:	(bad)  
  4045de:	out    dx,al
  4045df:	jecxz  0x404659
  4045e1:	test   DWORD PTR [esi+ebx*1-0x35],ecx
  4045e5:	push   DWORD PTR [ebx+0x4cf5b9f4]
  4045eb:	out    dx,eax
  4045ec:	xor    edi,edi
	...
  4045fa:	add    BYTE PTR [eax],al
  4045fc:	add    dh,cl
  4045fe:	clc    
  4045ff:	xor    ebp,eax
  404601:	(bad)
  404604:	jmp    FWORD PTR [eax+0x1c]
  404607:	push   eax
  404608:	push   ebx
  404609:	sub    al,0x49
  40460b:	(bad)  
  40460c:	call   0xb4b15
  404611:	jmp    0x3e4:0x9683cc18
  404618:	je     0x4045bb
  40461a:	popa   
  40461b:	inc    eax
  40461c:	hlt    
  40461d:	mov    bl,0xb7
  40461f:	push   eax
  404620:	cld    
  404621:	or     ebp,esi
  404623:	mov    edi,0xc3616300
  404628:	js     0x40465b
  40462a:	(bad)  
  40462b:	push   eax
  40462c:	hlt    
  40462d:	sti    
  40462e:	fld    st(6)
  404630:	add    BYTE PTR [ebx-0x2d],ah
  404633:	ret    
  404634:	je     0x4046b3
  404636:	or     al,0xcb
  404638:	jne    0x404605
  40463a:	add    DWORD PTR ds:0x7e76c4f2,0xffffffd8
  404641:	sbb    edi,DWORD PTR [edi+0x50]
  404644:	clc    
  404645:	adc    ah,ch
  404647:	fld    TBYTE PTR [ecx+esi*4]
  40464a:	dec    esi
  40464b:	retf   0x2eff
  40464e:	push   eax
  40464f:	(bad)  
  404651:	mov    eax,ds:0xe803e904
  404656:	aas    
  404657:	in     eax,dx
  404658:	retf   0xcd16
  40465b:	add    di,WORD PTR [ebx-0x45]
  40465f:	pop    eax
  404660:	retf   0x0
	...
  40466f:	add    BYTE PTR [ebp+eax*8-0x44],bh
  404673:	(bad)  
  404674:	mov    edx,DWORD PTR [esi]
  404676:	push   eax
  404677:	retf   0x796c
  40467a:	sub    ch,BYTE PTR [esi]
  40467c:	call   0x1590:0xb603e1c2
  404683:	xor    ch,al
  404685:	inc    edx
  404686:	icebp  
  404687:	fidiv  WORD PTR [edx+0x5c]
  40468a:	add    al,BYTE PTR [ecx]
  40468c:	(bad)  [eax+ebp*8+0x7b]
  404690:	fs dec esp
  404692:	imul   ecx,DWORD PTR [edx],0x29f43a63
  404698:	pushf  
  404699:	dec    esp
  40469a:	imul   ecx,DWORD PTR [edx],0x83033983
  4046a0:	pop    esp
  4046a1:	adc    bl,BYTE PTR [ebp-0x21]
  4046a4:	jecxz  0x4046aa
  4046a6:	repz dec edi
  4046a8:	add    eax,DWORD PTR [esi-0x1f6f04ea]
  4046ae:	bound  eax,QWORD PTR [edi+0x6b]
  4046b1:	les    edi,FWORD PTR [esp+edi*8]
  4046b4:	cld    
  4046b5:	mov    ch,BYTE PTR [ebx-0x4e779cfc]
  4046bb:	add    al,0x6d
  4046bd:	in     al,dx
  4046be:	push   0xc9c49b48
  4046c3:	dec    edi
  4046c4:	outs   dx,BYTE PTR ds:[esi]
  4046c5:	test   DWORD PTR ds:0x1d12cc0c,ebx
  4046cb:	cli    
  4046cc:	inc    esp
  4046cd:	inc    ecx
  4046ce:	ror    eax,1
  4046d0:	imul   edi,DWORD PTR [ecx],0x83ee
	...
  4046e2:	add    BYTE PTR [edi],dh
  4046e4:	std    
  4046e5:	jge    0x4046e2
  4046e7:	aaa    
  4046e8:	or     al,0x0
  4046ea:	scas   eax,DWORD PTR es:[edi]
  4046eb:	and    edi,ebp
  4046ed:	(bad)  
  4046ee:	jmp    0xec2b4eb2
  4046f3:	mov    bh,0xd1
  4046f5:	pop    edi
  4046f6:	xor    BYTE PTR [ebp+0x7bc0009],ah
  4046fc:	mov    cl,0x83
  4046fe:	and    eax,0x4835883
  404703:	int3   
  404704:	repz inc eax
  404706:	jmp    0x6a52806b
  40470b:	pop    esp
  40470c:	jbe    0x40473c
  40470e:	test   al,0x60
  404710:	add    eax,0x1dff074
  404715:	cdq    
  404716:	iret   
  404717:	mov    eax,ds:0x639c0005
  40471c:	lock mov edi,0x8c6f9b2
  404722:	jmp    0xa508277e
  404727:	sbb    al,0x5
  404729:	add    cl,ch
  40472b:	pusha  
  40472c:	xchg   edx,eax
  40472d:	inc    ebp
  40472e:	icebp  
  40472f:	push   eax
  404730:	les    esi,FWORD PTR [ebp-0xf]
  404733:	mov    dh,0x5
  404735:	push   esp
  404737:	cmc    
  404738:	repnz inc eax
  40473a:	jmp    0x32b4cb46
  40473f:	pop    ds
  404740:	cmp    eax,edx
  404742:	jmp    0x6d10d7a7
	...
  404753:	add    BYTE PTR [eax],al
  404755:	add    BYTE PTR ds:0x3f4350b9,ch
  40475b:	push   edi
  40475c:	call   esp
  40475e:	dec    ecx
  40475f:	repz inc eax
  404761:	jmp    0xd0b4cb3d
  404766:	mov    ds:0x60e8e449,eax
  40476b:	add    eax,0xbd2d8e00
  404770:	pop    DWORD PTR [eax]
  404772:	xchg   ecx,esp
  404774:	push   DWORD PTR [ebp+0x2e]
  404777:	cmp    eax,0x4b39ec45
  40477c:	or     al,0x0
  40477e:	xchg   esi,eax
  40477f:	mov    esi,0xa3a45c6
  404784:	add    BYTE PTR [eax],al
  404786:	jp     0x404768
  404788:	pop    es
  404789:	(bad)  
  40478a:	mov    bh,0xd7
  40478c:	add    BYTE PTR [eax],al
  40478e:	mov    al,BYTE PTR [edi]
  404790:	push   0x0
  404792:	nop
  404793:	pop    es
  404794:	push   0x10
  404796:	inc    DWORD PTR [edx]
  404798:	in     al,0x50
  40479a:	mov    al,ds:0x9675ff07
  40479f:	int    0x15
  4047a1:	mov    cl,0x2c
  4047a3:	dec    eax
  4047a4:	add    BYTE PTR [ebx],cl
  4047a6:	jp     0x4047fa
  4047a8:	add    DWORD PTR [ebx-0x47],eax
  4047ab:	dec    ebx
  4047ac:	hlt    
  4047ad:	add    dh,dl
  4047af:	mov    esi,0xe03675fe
  4047b4:	call   0xc3:0x8b073ac1
	...
  4047c7:	add    BYTE PTR [eax],al
  4047c9:	sar    DWORD PTR [edi-0x3e],1
  4047cc:	or     BYTE PTR [edx],cl
  4047ce:	hlt    
  4047cf:	mov    ch,ah
  4047d1:	std    
  4047d2:	push   esp
  4047d3:	or     al,ch
  4047d5:	xchg   esi,eax
  4047d6:	enter  0x0,0x3a
  4047da:	stc    
  4047db:	out    0xa0,eax
  4047dd:	sbb    cl,bl
  4047df:	call   DWORD PTR [eax+0x1d]
  4047e2:	push   ebp
  4047e3:	or     BYTE PTR [eax+0x12],dl
  4047e6:	imul   eax,ecx,0xc8eefa00
  4047ec:	ret    0x6c6
  4047ef:	push   ebp
  4047f0:	mov    ebp,esi
  4047f2:	xchg   ah,al
  4047f4:	cld    
  4047f5:	mov    DWORD PTR [esi-0x539cf783],eax
  4047fb:	push   eax
  4047fc:	pop    es
  4047fd:	mov    BYTE PTR [ebx+ebp*1-0x37],ch
  404801:	mov    eax,ds:0x882b03b0
  404806:	push   ss
  404807:	add    al,0x6a
  404809:	arpl   WORD PTR [esi],ax
  40480b:	add    al,0x6a
  40480d:	arpl   WORD PTR [esi],ax
  40480f:	(bad)  
  404810:	dec    DWORD PTR [esi]
  404812:	mov    ah,0x59
  404814:	add    cl,bh
  404816:	stos   DWORD PTR es:[edi],eax
  404817:	fcmovnb st,st(4)
  404819:	mov    ds:0xa30b03ac,al
  40481e:	fcom   DWORD PTR [edx]
  404820:	mov    DWORD PTR [esi],ebx
  404822:	dec    eax
  404823:	(bad)  
  404824:	jne    0x404895
  404826:	push   esp
  404827:	cs lock fs sti 
  40482b:	cli    
  40482c:	mov    edi,0x0
	...
  404839:	add    BYTE PTR [eax],al
  40483b:	add    bh,dl
  40483d:	or     BYTE PTR [ebx-0x28],bh
  404840:	leave  
  404841:	lods   al,BYTE PTR ds:[esi]
  404842:	pop    ecx
  404843:	add    BYTE PTR [ecx+ebx*4-0x39],cl
  404847:	push   ebx
  404848:	mov    ecx,0x6b75c71b
  40484d:	xchg   BYTE PTR [ebx],al
  40484f:	push   0x63
  404851:	adc    al,0x6d
  404853:	shl    DWORD PTR [ebx-0x54],0xfa
  404857:	mov    edi,0xe832a4ae
  40485c:	jp     0x40481a
  40485e:	(bad)  
  40485f:	dec    DWORD PTR [eax-0x39]
  404862:	jp     0x404827
  404864:	test   al,0x75
  404866:	rol    DWORD PTR [ebx+eiz*2],0x1
  40486a:	jnp    0x404858
  40486c:	loopne 0x4048d5
  40486e:	xlat   BYTE PTR ds:[ebx]
  40486f:	push   eax
  404870:	nop
  404871:	sbb    eax,0x37955732
  404876:	inc    eax
  404877:	or     al,0xd6
  404879:	and    eax,DWORD PTR [ebx+0x78ac6300]
  40487f:	adc    al,0x9e
  404881:	add    al,0xe9
  404883:	add    esp,DWORD PTR [ebx+0x5]
  404886:	jb     0x404833
  404888:	fmul   st,st(4)
  40488a:	test   al,0xdb
  40488c:	mov    WORD PTR gs:[eax+ebx*8],fs
  404890:	call   0xaa4339d4
  404895:	retf   0x83e6
  404898:	loopne 0x40483f
  40489a:	mov    dh,0x1a
  40489c:	cwde   
  40489d:	test   DWORD PTR [edx+0xb],esi
	...
  4048ac:	add    BYTE PTR [eax],al
  4048ae:	add    BYTE PTR [ecx],dl
  4048b0:	adc    ebp,edx
  4048b2:	retf   0x44cb
  4048b5:	jmp    0x2a2eabbd
  4048ba:	add    bh,BYTE PTR [ebx-0x3f]
  4048bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048be:	xlat   BYTE PTR ds:[ebx]
  4048bf:	jmp    0x26b4:0xf6790159
  4048c6:	std    
  4048c7:	arpl   si,sp
  4048c9:	stos   DWORD PTR es:[edi],eax
  4048ca:	pop    esi
  4048cb:	and    al,0x48
  4048cd:	in     eax,0x7c
  4048cf:	or     bl,dl
  4048d1:	push   ss
  4048d2:	mov    esi,0xa71f0da5
  4048d7:	or     DWORD PTR [esi+0x376f3d2e],ebx
  4048dd:	mov    ch,0x11
  4048df:	push   ebx
  4048e0:	sar    BYTE PTR [edi+edx*8+0x2c],0x3b
  4048e5:	icebp  
  4048e6:	js     0x404886
  4048e8:	mov    ch,0x99
  4048ea:	(bad)  [esi+0x5]
  4048ed:	jmp    0xedbf5ff5
  4048f2:	add    esp,DWORD PTR [ebx+0x5]
  4048f5:	jb     0x40493e
  4048f7:	jae    0x4048ad
  4048f9:	mov    WORD PTR [esi],fs
  4048fb:	pushf  
  4048fc:	pop    ebx
  4048fd:	xor    BYTE PTR [ecx],ch
  4048ff:	fwait
  404900:	into   
  404901:	stos   DWORD PTR es:[edi],eax
  404902:	clc    
  404903:	in     al,dx
  404904:	pop    ecx
  404905:	jb     0x4048df
  404907:	loopne 0x4048d2
  404909:	add    BYTE PTR [ebp+0x1a50588d],dh
  40490f:	nop
  404910:	push   ebx
  404911:	mov    ebx,DWORD PTR [eax+eax*1]
	...
  404920:	add    BYTE PTR [eax],al
  404922:	retf   
  404923:	mov    edi,DWORD PTR [ebp-0xf]
  404926:	dec    ebx
  404927:	dec    edx
  404928:	adc    BYTE PTR [eax+0x7c],ah
  40492b:	ror    DWORD PTR [ebx+0x4603be6],0x72
  404932:	jbe    0x404941
  404934:	mov    edx,DWORD PTR [esi]
  404936:	stos   DWORD PTR es:[edi],eax
  404937:	mov    edi,ecx
  404939:	mov    edx,0xbafae4aa
  40493e:	stos   BYTE PTR es:[edi],al
  40493f:	xchg   edx,eax
  404940:	test   dh,ch
  404942:	sbb    BYTE PTR [ecx+0x6a],ch
  404945:	bound  eax,QWORD PTR ss:[edi]
  404948:	shr    DWORD PTR [ecx],0x7e
  40494b:	add    eax,ebx
  40494d:	bound  ebp,QWORD PTR [edx-0x60f5070c]
  404953:	hlt    
  404954:	clc    
  404955:	ins    BYTE PTR es:[edi],dx
  404956:	repz pop ss
  404958:	push   esi
  404959:	jle    0x404979
  40495b:	lods   eax,DWORD PTR ds:[esi]
  40495c:	add    edx,DWORD PTR [edi-0xa3d3aac]
  404962:	arpl   bp,dx
  404964:	mov    esp,DWORD PTR [ecx]
  404966:	jb     0x404924
  404968:	and    edx,DWORD PTR [ebx]
  40496a:	push   edx
  40496b:	mov    esp,0xdb2e5d8d
  404970:	jo     0x40493b
  404972:	dec    esp
  404973:	add    al,0x4e
  404975:	icebp  
  404976:	and    esi,eax
  404978:	adc    edx,ebp
  40497a:	fimul  DWORD PTR [ebx-0x1bd74506]
  404980:	clc    
  404981:	sbb    bl,BYTE PTR [edi]
  404983:	xchg   edx,eax
  404984:	pushf  
  404985:	inc    BYTE PTR [eax]
	...
  404993:	add    BYTE PTR [eax],al
  404995:	cs iret 
  404997:	mov    ebp,0xc5f63a8
  40499c:	test   al,0x23
  40499e:	pop    ss
  40499f:	add    eax,DWORD PTR [eax]
  4049a1:	ret    
  4049a2:	cmp    al,0xf9
  4049a4:	xor    esp,DWORD PTR [eax]
  4049a6:	in     eax,0xfa
  4049a8:	xor    edx,DWORD PTR [eax]
  4049aa:	aaa    
  4049ab:	test   BYTE PTR [edi],al
  4049ad:	push   ebp
  4049ae:	mov    ecx,0x1b9f57b
  4049b3:	adc    cl,al
  4049b5:	cli    
  4049b6:	rol    BYTE PTR [edx],0xc3
  4049b9:	inc    ecx
  4049ba:	int    0x33
  4049bc:	stc    
  4049bd:	test   eax,0x37f933cb
  4049c2:	xor    BYTE PTR [edi],dl
  4049c4:	sub    bh,ah
  4049c6:	inc    eax
  4049c7:	inc    edi
  4049c8:	add    edi,DWORD PTR [ebp+esi*4-0x40]
  4049cc:	ret    0x4b6
  4049cf:	ror    BYTE PTR [ebx+0x23fb1502],1
  4049d5:	add    BYTE PTR ds:0xb9068dfb,dl
  4049db:	adc    al,BYTE PTR [esi+0x5a]
  4049de:	mov    eax,ds:0xc2824e03
  4049e3:	rcl    DWORD PTR [ecx],0x79
  4049e6:	jge    0x404973
  4049e8:	cli    
  4049e9:	pop    ecx
  4049ea:	retf   
  4049eb:	and    edi,ecx
  4049ed:	pop    ecx
  4049ee:	retf   
  4049ef:	lea    ebx,[ebp+eiz*2+0x67469502]
  4049f6:	add    eax,0x1c5e
	...
  404a07:	add    BYTE PTR [ebx+0x730316c5],cl
  404a0d:	cmp    eax,0xe56033f9
  404a12:	cli    
  404a13:	xor    esp,DWORD PTR [eax+0x37]
  404a16:	test   BYTE PTR [edi],al
  404a18:	jb     0x404a44
  404a1a:	sub    BYTE PTR [ecx+0x9],0x1
  404a1e:	and    cl,al
  404a20:	mov    edx,0x91c3030a
  404a25:	jle    0x404a5a
  404a27:	stc    
  404a28:	arpl   WORD PTR [ebx],cx
  404a2a:	mov    esp,0x9861fa33
  404a2f:	pop    ss
  404a30:	mov    esp,0x608b487f
  404a35:	push   ss
  404a36:	call   0x6e8ebfb
  404a3b:	shr    al,1
  404a3d:	je     0x404a36
  404a3f:	cli    
  404a40:	and    BYTE PTR [edx-0x9],0xfa
  404a44:	(bad)  
  404a45:	xor    BYTE PTR [ebx],dl
  404a47:	mov    cl,0x18
  404a49:	xchg   edi,eax
  404a4a:	ret    
  404a4b:	add    esp,DWORD PTR ds:0x52c1c4c4
  404a51:	stos   DWORD PTR es:[edi],eax
  404a52:	int    0x8b
  404a54:	test   eax,0x9a23bb7b
  404a59:	jnp    0x404a16
  404a5b:	(bad)  
  404a5c:	test   edi,0x352fd781
  404a62:	pop    es
  404a63:	pop    esi
  404a64:	aaa    
  404a65:	in     eax,dx
  404a66:	(bad)  
  404a67:	push   ss
  404a68:	pusha  
  404a69:	cmc    
  404a6a:	mov    ?,ecx
	...
  404a78:	add    BYTE PTR [eax],al
  404a7a:	add    BYTE PTR [eax],dh
  404a7c:	push   edx
  404a7d:	out    0xfa,eax
  404a7f:	xor    BYTE PTR [edx-0x6f],al
  404a82:	test   BYTE PTR [edx+ecx*1+0x15],bl
  404a86:	nop
  404a87:	enter  0x49ab,0x30
  404a8b:	and    ch,ah
  404a8d:	or     al,BYTE PTR [ebx]
  404a8f:	and    BYTE PTR [ebx],dh
  404a91:	mov    edi,0xbbcb4a33
  404a96:	xor    edi,DWORD PTR [edx]
  404a98:	sub    DWORD PTR [eax-0x64632fe9],ebx
  404a9e:	std    
  404a9f:	pusha  
  404aa0:	sahf   
  404aa1:	test   eax,0xd006b021
  404aa7:	call   0x413b415f
  404aac:	mov    dl,0xf6
  404aae:	cli    
  404aaf:	fiadd  WORD PTR [esi*2+0x6041d512]
  404ab6:	push   0x60
  404ab8:	dec    edi
  404ab9:	adc    ebp,eax
  404abb:	and    dl,BYTE PTR [edx+ebp*8]
  404abe:	int    0xd8
  404ac0:	mov    edx,0xbc40bbfa
  404ac5:	cli    
  404ac6:	mov    ebx,0xe4d6a0ee
  404acb:	pop    esp
  404acc:	jns    0x404aee
  404ace:	pop    es
  404acf:	sub    eax,0x6dc6a801
  404ad4:	add    al,al
  404ad6:	mov    ?,WORD PTR [edx-0x45196e0f]
  404adc:	icebp  
  404add:	(bad)  
  404ade:	nop
	...
  404aeb:	add    BYTE PTR [eax],al
  404aed:	add    bh,ah
  404aef:	add    eax,0xb746e90b
  404af4:	jmp    0x6008:0xa9c46749
  404afb:	ret    0xbe62
  404afe:	push   eax
  404aff:	mov    ebp,0xba50bd0a
  404b04:	ins    BYTE PTR es:[edi],dx
  404b05:	xchg   edi,eax
  404b06:	push   esp
  404b07:	inc    ebp
  404b08:	call   0xa21b:0xb701a343
  404b0f:	ret    0x6f0
  404b12:	xchg   ebx,eax
  404b13:	mov    DWORD PTR [ecx-0xa],eax
  404b16:	pop    edx
  404b17:	jmp    0x8b8d414d
  404b1c:	pop    ebp
  404b1d:	adc    dh,BYTE PTR [edx+0x61e9c75f]
  404b23:	dec    ebx
  404b24:	int    0xc4
  404b26:	and    cl,BYTE PTR [edx+ebp*8]
  404b29:	int    0xe8
  404b2b:	mov    edi,0xbd80bcda
  404b30:	mov    edx,0xde99d6bd
  404b35:	ins    DWORD PTR es:[edi],dx
  404b36:	and    al,0x74
  404b38:	add    BYTE PTR [eax],al
  404b3a:	pop    ebp
  404b3b:	sbb    eax,ecx
  404b3d:	sub    dh,BYTE PTR [eax+ecx*1-0x27]
  404b41:	jb     0x404b0b
  404b43:	clc    
  404b44:	cli    
  404b45:	or     bh,BYTE PTR [ebp-0x149b0708]
  404b4b:	add    al,0x5d
  404b4d:	stc    
  404b4e:	repz rol BYTE PTR [ebx],cl
  404b51:	das    
	...
  404b5e:	add    BYTE PTR [eax],al
  404b60:	add    BYTE PTR [ebx-0x3a],cl
  404b63:	shl    ah,0x67
  404b66:	enter  0xb28b,0xce
  404b6a:	mov    ah,0x23
  404b6c:	mov    al,0xd6
  404b6e:	mov    edi,0x586a7d8d
  404b73:	adc    al,0x25
  404b75:	or     BYTE PTR gs:[esi-0x3f],dl
  404b79:	mov    eax,ds:0x90ea09c7
  404b7e:	nop
  404b7f:	clc    
  404b80:	mov    edx,0xbafae8e6
  404b85:	fmul   DWORD PTR [edx-0x5c1e1974]
  404b8b:	mov    eax,ds:0x3c4b6691
  404b90:	sub    BYTE PTR [eax-0x11ccfcf5],ah
  404b96:	mov    edi,0xb47e5033
  404b9b:	xor    edx,DWORD PTR [ebx-0x24]
  404b9e:	cdq    
  404b9f:	pop    ds
  404ba0:	xor    DWORD PTR [esi-0x3d151828],esp
  404ba6:	adc    eax,0x87b2ac1
  404bab:	fldenv [edx+0x8]
  404bae:	clc    
  404baf:	cli    
  404bb0:	retf   0xf806
  404bb3:	clc    
  404bb4:	ins    BYTE PTR es:[edi],dx
  404bb5:	jmp    0x404bba
  404bb7:	out    0x24,al
  404bb9:	add    dh,ah
  404bbb:	add    ah,BYTE PTR [edi+0xc0c544]
  404bc1:	aaa    
  404bc2:	add    ebx,eax
  404bc4:	mov    eax,DWORD PTR [eax]
	...
  404bd2:	add    BYTE PTR [eax],al
  404bd4:	popa   
  404bd5:	mov    dl,0xf7
  404bd7:	and    edx,DWORD PTR [ebx]
  404bd9:	mov    cl,0xfa
  404bdb:	lea    esi,[esi+0x6507d61e]
  404be1:	ret    0x5603
  404be4:	inc    edx
  404be5:	enter  0x9c2,0x9
  404be9:	fmul   DWORD PTR [ebx+0x237b49f8]
  404bef:	sti    
  404bf0:	jmp    0xcdccd974
  404bf5:	mov    WORD PTR ds:0x4e0116d5,cs
  404bfb:	or     al,0xfb
  404bfd:	(bad)  
  404bfe:	push   cs
  404bff:	add    edx,DWORD PTR [eax]
  404c01:	mov    edx,edi
  404c03:	xor    eax,DWORD PTR [ebx]
  404c05:	mov    eax,ds:0x8ad033f7
  404c0a:	pushf  
  404c0b:	pop    ds
  404c0c:	das    
  404c0d:	adc    al,0x5a
  404c0f:	inc    ebp
  404c10:	mov    ecx,0xc9c12025
  404c15:	adc    eax,DWORD PTR [ebx]
  404c17:	fld    DWORD PTR [ecx]
  404c19:	jg     0x404c4e
  404c1b:	sti    
  404c1c:	cdq    
  404c1d:	jns    0x404c52
  404c1f:	stc    
  404c20:	je     0x6153512d
  404c26:	test   eax,0xc0b3c403
  404c2b:	rol    BYTE PTR [edi+0x218bc300],0xb1
  404c32:	mul    DWORD PTR [ebx]
  404c34:	mov    ds:0x8dfab1,eax
	...
  404c45:	add    BYTE PTR [eax],al
  404c47:	mov    dh,0x1d
  404c49:	clc    
  404c4a:	mov    ds:0x56037a8d,eax
  404c4f:	push   edx
  404c50:	enter  0x9c2,0x49
  404c54:	xlat   BYTE PTR ds:[ebx]
  404c55:	mov    edi,eax
  404c57:	arpl   di,bx
  404c59:	mov    ebp,0xbbe02823
  404c5e:	(bad)  
  404c5f:	xlat   BYTE PTR ds:[ebx]
  404c60:	mov    bl,0xda
  404c62:	add    cl,BYTE PTR [ebx+eax*4-0x1288b1fc]
  404c69:	ror    DWORD PTR [esi],0x60
  404c6c:	out    0x8b,al
  404c6e:	cli    
  404c6f:	push   eax
  404c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c71:	jecxz  0x404c6a
  404c73:	xor    BYTE PTR [esi+0x26549c91],ah
  404c79:	push   eax
  404c7a:	sub    bl,dh
  404c7c:	scas   eax,DWORD PTR es:[edi]
  404c7d:	pop    ebp
  404c7e:	xor    BYTE PTR [edx],ah
  404c80:	jo     0x404c9a
  404c82:	add    edi,DWORD PTR [edx-0x26cc42c9]
  404c88:	mov    edi,0xa3e78dba
  404c8d:	inc    ecx
  404c8e:	cmp    ecx,ecx
  404c90:	arpl   WORD PTR [ebx],ax
  404c92:	inc    esi
  404c93:	push   edi
  404c94:	ins    DWORD PTR es:[edi],dx
  404c95:	les    eax,FWORD PTR [eax+eiz*2]
  404c98:	outs   dx,DWORD PTR ds:[esi]
  404c99:	mov    edi,ebx
  404c9b:	jo     0x404c32
  404c9d:	repz not esi
  404ca0:	pop    eax
  404ca1:	pop    ss
  404ca2:	adc    DWORD PTR [ebp+0x2d0386bd],0xc2c4cc
	...
  404cb8:	add    BYTE PTR [eax],al
  404cba:	pop    eax
  404cbb:	scas   eax,DWORD PTR es:[edi]
  404cbc:	ror    DWORD PTR [ebx+0x33bb1f8b],cl
  404cc2:	jns    0x404ced
  404cc4:	nop
  404cc5:	cmovno ecx,ebp
  404cc8:	mov    al,ds:0xef9a606d
  404ccd:	shl    BYTE PTR [edx-0x1735fd24],0x45
  404cd4:	repz not DWORD PTR [eax+0x6c9c90f5]
  404cdb:	fdivr  st,st(3)
  404cdd:	in     al,0x46
  404cdf:	add    eax,0xc47b5dea
  404ce4:	sub    dl,BYTE PTR [edi]
  404ce6:	pusha  
  404ce7:	fsub   QWORD PTR [edx-0x43]
  404cea:	jo     0x404cab
  404cec:	fidivr DWORD PTR [edx+0x47ee80d6]
  404cf2:	or     DWORD PTR [ebx+0x45],edi
  404cf5:	add    ebx,DWORD PTR [ebp+0x67c42801]
  404cfb:	push   es
  404cfc:	sub    cl,BYTE PTR [ebx-0xd2009f8]
  404d02:	hlt    
  404d03:	xchg   DWORD PTR [ebp+0x16],esi
  404d06:	retf   0xb7c9
  404d09:	dec    edx
  404d0a:	pusha  
  404d0b:	push   ebx
  404d0c:	stc    
  404d0d:	les    esp,FWORD PTR [ecx]
  404d0f:	push   cs
  404d10:	jmp    0x90ba:0xfabce8d3
  404d17:	mov    edi,0x255c8f64
  404d1c:	and    bh,BYTE PTR [ebx+0x0]
	...
  404d2b:	add    BYTE PTR [eax],al
  404d2d:	int    0x5
  404d2f:	aaa    
  404d30:	and    BYTE PTR [edx-0x56fd063d],ah
  404d36:	lea    edx,[ebx-0x700a4b0e]
  404d3c:	nop
  404d3d:	(bad)  
  404d3e:	sbb    ecx,edi
  404d40:	jg     0x404d1e
  404d42:	jp     0x404d2e
  404d44:	pop    ebp
  404d45:	dec    ebx
  404d46:	les    ebp,FWORD PTR [edx+0x62dc6016]
  404d4c:	mov    esp,0xbb1abf50
  404d51:	out    dx,al
  404d52:	and    dh,0xc5
  404d55:	cmc    
  404d56:	popf   
  404d57:	add    DWORD PTR [ebx],eax
  404d59:	and    eax,0x5fc327f1
  404d5e:	push   es
  404d5f:	sub    cl,BYTE PTR [edx-0xdc00aa8]
  404d65:	dec    esp
  404d66:	mov    eax,DWORD PTR [eax]
  404d68:	pop    ebp
  404d69:	jne    0x404d26
  404d6b:	daa    
  404d6c:	mov    dl,bh
  404d6e:	add    al,0x16
  404d70:	sub    BYTE PTR [edx],ah
  404d72:	or     eax,0xbde93903
  404d77:	xor    edx,DWORD PTR [edx]
  404d79:	xor    DWORD PTR [edi-0x7daaa273],edi
  404d7f:	xor    BYTE PTR [esi],dl
  404d81:	xor    al,0x5
  404d83:	dec    esi
  404d84:	in     eax,dx
  404d85:	pop    ds
  404d86:	(bad)  
  404d87:	adc    dl,ch
  404d89:	sbb    cl,BYTE PTR [ebp-0xb374506]
  404d8f:	clc    
  404d90:	je     0x404d92
	...
  404d9e:	add    BYTE PTR [eax],al
  404da0:	ret    
  404da1:	sbb    BYTE PTR ds:0x301e8fc,al
  404da7:	aaa    
  404da8:	dec    edi
  404da9:	mov    bl,0xf6
  404dac:	arpl   si,bx
  404dae:	mov    eax,eax
  404db0:	sar    BYTE PTR [esi-0x7e1b3dcd],cl
  404db6:	pop    es
  404db7:	lock mov al,0xd1
  404dba:	fldl2e 
  404dbc:	push   ds
  404dbd:	loope  0x404d7f
  404dbf:	test   eax,0x72c3046b
  404dc4:	cli    
  404dc5:	hlt    
  404dc6:	clc    
  404dc7:	(bad)  
  404dc9:	mov    dl,BYTE PTR [esi+esi*8-0x70246103]
  404dd0:	bound  ecx,QWORD PTR [edi+0x30]
  404dd3:	test   al,0xa1
  404dd5:	or     al,0x3
  404dd7:	cdq    
  404dd8:	fidivr DWORD PTR [ebp-0x416d8dcd]
  404dde:	lea    esi,[ebp+0x6e]
  404de1:	mov    ebp,0x4568b7c
  404de6:	dec    esi
  404de7:	adc    eax,0xea10c6a0
  404dec:	call   0x337c:0x5900fa8c
  404df3:	stc    
  404df4:	(bad)  
  404df5:	gs pop ds
  404df7:	gs in  al,dx
  404df9:	daa    
  404dfa:	les    eax,FWORD PTR [ebx]
  404dfc:	aam    0xb
  404dfe:	rol    ebx,0x3d
  404e01:	add    eax,0xbfd9
	...
  404e12:	add    BYTE PTR [ebp+0x7a],dl
  404e15:	(bad)  
  404e16:	dec    DWORD PTR [ecx]
  404e18:	jle    0x404e25
  404e1a:	sti    
  404e1b:	or     DWORD PTR [ebx-0x73],edi
  404e1e:	test   BYTE PTR ds:0xe292240,cl
  404e24:	add    eax,0xff3ac106
  404e29:	add    al,bl
  404e2b:	xor    eax,0x5ffff7a
  404e30:	mov    ch,0xf8
  404e32:	or     eax,DWORD PTR [edx]
  404e34:	mov    ch,0xfa
  404e36:	lea    ebp,[esi+0x11]
  404e39:	xchg   edi,eax
  404e3a:	jmp    DWORD PTR [eax+0x46]
  404e3d:	add    edx,DWORD PTR [esi-0x3a]
  404e40:	ret    0xac2
  404e43:	leave  
  404e44:	sar    DWORD PTR [edi-0x86ea01],cl
  404e4a:	xor    edx,DWORD PTR [ecx]
  404e4c:	or     eax,0x870233fa
  404e51:	mov    WORD PTR [edi],cs
  404e53:	sbb    eax,0xb9ab93a5
  404e58:	dec    ecx
  404e59:	cmp    cl,al
  404e5b:	sti    
  404e5c:	or     BYTE PTR [ebx],al
  404e5e:	retf   0x7925
  404e61:	(bad)  
  404e62:	call   DWORD PTR ds:0x130bf7b5
  404e68:	mov    ch,0xf9
  404e6a:	lea    edx,[esi]
  404e6c:	sbb    DWORD PTR [ecx],edi
  404e6e:	mov    al,ds:0x5e0377f9
  404e73:	outs   dx,BYTE PTR ds:[esi]
  404e74:	ret    0x15c3
	...
  404e83:	add    BYTE PTR [eax],al
  404e85:	add    BYTE PTR [ebx-0x55],ah
  404e88:	fidivr DWORD PTR [edi-0x43b99c]
  404e8e:	nop
  404e8f:	inc    edx
  404e90:	or     bl,bh
  404e92:	nop
  404e93:	inc    ebp
  404e94:	mov    es,WORD PTR [esp+eiz*2-0x41a4a615]
  404e9b:	stos   DWORD PTR es:[edi],eax
  404e9c:	inc    ebp
  404e9d:	xor    BYTE PTR [edx],ah
  404e9f:	in     eax,dx
  404ea0:	add    al,0x3
  404ea2:	and    BYTE PTR [eax-0x44],bl
  404ea5:	jmp    FWORD PTR [eax+edx*1]
  404ea8:	lock clc 
  404eaa:	pop    eax
  404eab:	adc    al,0xf0
  404ead:	cli    
  404eae:	out    dx,al
  404eaf:	pop    eax
  404eb0:	adc    al,0x92
  404eb2:	daa    
  404eb3:	test   eax,0xa0b5038c
  404eb8:	ret    0x59c2
  404ebb:	stos   DWORD PTR es:[edi],eax
  404ebc:	sar    DWORD PTR [edi-0x446004],cl
  404ec2:	xor    BYTE PTR [ebx-0x2bcf05f1],ah
  404ec8:	mov    DWORD PTR [esp+edx*2-0x23104fb7],ecx
  404ecf:	stos   DWORD PTR es:[edi],eax
  404ed0:	dec    ecx
  404ed1:	sub    BYTE PTR [edx-0x66fcf493],ah
  404ed7:	das    
  404ed8:	mov    ebx,0xf767c4ff
  404edd:	imul   DWORD PTR [eax+0x65]
  404ee0:	idiv   ecx
  404ee2:	out    0x38,al
  404ee4:	sbb    edx,ecx
  404ee6:	push   cs
  404ee7:	sub    BYTE PTR [ecx+0x3],al
	...
  404ef9:	add    eax,0x76c3c4a0
  404efe:	stos   DWORD PTR es:[edi],eax
  404eff:	fdivr  QWORD PTR [edi-0x44c86c]
  404f05:	push   eax
  404f06:	xor    cl,BYTE PTR [edi]
  404f08:	sti    
  404f09:	push   eax
  404f0a:	xor    eax,0x5648489
  404f0f:	mov    dh,0x39
  404f11:	retf   
  404f12:	es jmp 0x6002:0x29c44341
  404f1a:	ret    0xbb8e
  404f1d:	pop    esp
  404f1e:	mov    dh,0x46
  404f20:	neg    DWORD PTR [ebx+0xa]
  404f23:	inc    ecx
  404f24:	test   DWORD PTR [ecx-0x78],0x9f43135d
  404f2b:	std    
  404f2c:	mov    ecx,0xc4e54f60
  404f31:	and    DWORD PTR [ebx],ecx
  404f33:	jmp    0x24bb:0x16b5ecd3
  404f3a:	repnz adc DWORD PTR [edi],ecx
  404f3d:	sbb    edx,esi
  404f3f:	add    BYTE PTR [ecx+0x46d505e7],cl
  404f45:	bound  esp,QWORD PTR [edx-0x16]
  404f48:	dec    ecx
  404f49:	imul   eax,esp,0x28
  404f4c:	or     esp,DWORD PTR [eax-0x35]
  404f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f50:	mov    edx,0xf6deb5f4
  404f55:	hlt    
  404f56:	or     eax,edx
  404f58:	imul   dl
  404f5a:	xchg   DWORD PTR [ebp+0x1a],ebp
	...
  404f69:	add    BYTE PTR [eax],al
  404f6b:	add    BYTE PTR [edx],al
  404f6d:	adc    al,0xf1
  404f6f:	dec    ecx
  404f70:	pusha  
  404f71:	push   edi
  404f72:	cmc    
  404f73:	les    esp,FWORD PTR [eax+0x4dcea0f]
  404f79:	mov    dh,0xae
  404f7b:	mov    edx,0xea2f1bc
  404f80:	mov    eax,0xe7889ff1
  404f85:	std    
  404f86:	push   0x39
  404f88:	adc    BYTE PTR [esi-0x3b8cbe16],ch
  404f8e:	test   eax,0x3ec26001
  404f93:	mov    edx,0x7600b58c
  404f98:	lea    edi,[ebx+ecx*1-0x72458a8f]
  404f9f:	jge    0x404ff2
  404fa1:	lock icebp 
  404fa3:	and    ebp,edx
  404fa5:	add    DWORD PTR [esi+0x5],edx
  404fa8:	sahf   
  404fa9:	ret    0xea0a
  404fac:	xor    BYTE PTR [ebp-0x1],dh
  404faf:	inc    esi
  404fb0:	sbb    DWORD PTR [ebp-0x50a2bdcd],esi
  404fb6:	xor    esi,DWORD PTR [ecx]
  404fb8:	fild   DWORD PTR [ecx-0x22e98df1]
  404fbe:	sub    ch,dl
  404fc0:	stos   BYTE PTR es:[edi],al
  404fc1:	std    
  404fc2:	shr    BYTE PTR [eax],0x59
  404fc5:	or     dl,cl
  404fc7:	push   esi
  404fc8:	jmp    0x154f4f81
  404fcd:	mov    ebp,0xb
	...
  404fde:	add    BYTE PTR ds:0x695d8daf,cl
  404fe4:	xchg   esi,eax
  404fe5:	shr    DWORD PTR [edi-0x4b],cl
  404fe8:	or     BYTE PTR [esi-0x3b],bl
  404feb:	daa    
  404fec:	leave  
  404fed:	adc    eax,0x7d8119ea
  404ff2:	icebp  
  404ff3:	popa   
  404ff4:	or     al,0x1
  404ff6:	arpl   WORD PTR ss:[esi],ax
  404ff9:	dec    edi
  404ffa:	loope  0x40505d
  404ffc:	pop    esp
  404ffd:	or     al,0xc6
  404fff:	sbb    al,0xb1
  405001:	lea    esi,[edi]
  405003:	daa    
  405004:	add    al,0x89
  405006:	out    0x6,al
  405008:	mov    ch,0xff
  40500a:	adc    ebx,DWORD PTR [eax]
  40500c:	push   eax
  40500d:	pop    eax
  40500e:	inc    esi
  40500f:	sbb    DWORD PTR [esi+0x5a60edc2],edi
  405015:	mov    eax,DWORD PTR [ebp+0x36f8c9de]
  40501b:	xor    DWORD PTR [eax-0x39],ebx
  40501e:	add    BYTE PTR [edi+0x6d],al
  405021:	add    BYTE PTR [eax],al
  405023:	jp     0x40502d
  405025:	push   DWORD PTR [ebp+0x7e]
  405028:	jge    0x40506f
  40502a:	clc    
  40502b:	lds    esi,FWORD PTR [edi+ecx*1+0x108cb65]
  405032:	and    eax,edi
  405034:	in     eax,0xc6
  405036:	add    eax,0x411366
  40503b:	ret    
  40503c:	and    cl,ch
  40503e:	out    dx,eax
  40503f:	test   DWORD PTR [edi+edx*1+0x65],esi
	...
  405052:	sti    
  405053:	pop    es
  405054:	(bad)  
  405055:	(bad)  
  405057:	xchg   ecx,eax
  405058:	mov    DWORD PTR ds:0x41132e,0x103243d4
  405062:	test   DWORD PTR [edi+ebx*1-0xff8049b],esi
  405069:	loope  0x4050c3
  40506b:	retf   0x1ceb
  40506e:	xchg   ecx,eax
  40506f:	hlt    
  405070:	pop    es
  405071:	add    eax,edi
  405073:	jnp    0x4050df
  405075:	inc    eax
  405076:	loop   0x40504b
  405078:	fs inc ecx
  40507a:	or     bl,BYTE PTR [eax-0x18]
  40507d:	arpl   WORD PTR [ebx],dx
  40507f:	ins    DWORD PTR es:[edi],dx
  405080:	inc    DWORD PTR [ebx-0x17bf92b9]
  405086:	mov    esi,0x49000007
  40508b:	jmp    0x405084
  40508d:	inc    eax
  40508e:	cdq    
  40508f:	iret   
  405090:	mov    ebx,DWORD PTR [ebp-0x5e]
  405093:	mov    bl,al
  405095:	inc    eax
  405096:	inc    ecx
  405097:	repz pop es
  405099:	add    eax,DWORD PTR [edi-0x5997ac93]
  40509f:	adc    al,BYTE PTR [ecx+0x0]
  4050a2:	push   0x61
  4050a4:	cmp    al,0xe9
  4050a6:	arpl   WORD PTR [ebx-0x7dc1fe48],bx
  4050ac:	rol    DWORD PTR [ebx+0x43013f],0xe3
  4050b3:	push   ds
  4050b4:	lods   al,BYTE PTR ds:[esi]
  4050b5:	aaa    
	...
  4050c2:	add    BYTE PTR [eax],al
  4050c4:	add    BYTE PTR ds:0x6beb84d7,cl
  4050ca:	mov    edx,0xc1c0800d
  4050cf:	push   ds
  4050d0:	inc    ecx
  4050d1:	arpl   WORD PTR [esi+0x456d7844],bx
  4050d7:	mov    WORD PTR [eax],es
  4050d9:	arpl   WORD PTR [esp+edi*2-0x47b3ab38],bx
  4050e0:	jmp    0x405143
  4050e2:	js     0x4050f1
  4050e4:	add    BYTE PTR [eax],0x99
  4050e7:	push   ds
  4050e8:	inc    ecx
  4050e9:	arpl   WORD PTR [esp+eax*2+0x3e382d78],bx
  4050f0:	or     al,0xea
  4050f2:	mov    ah,0x3
  4050f4:	add    BYTE PTR [ebx-0x31],ah
  4050f7:	aad    0xf7
  4050f9:	add    dl,ah
  4050fb:	retf   
  4050fc:	movaps XMMWORD PTR [eax+0x23],xmm0
  405100:	mov    gs:0xa7158a9c,al
  405106:	add    DWORD PTR [edx+0x0],0x3950b
  40510d:	arpl   WORD PTR [ebp+0x14],di
  405110:	mov    gs:0x4f158a9c,al
  405116:	inc    ecx
  405117:	inc    ebp
  405118:	add    al,ch
  40511a:	rcr    DWORD PTR [ebx],1
  40511c:	and    bl,BYTE PTR gs:[esi+eax*1+0x7765cc8]
  405124:	leave  
  405125:	add    ch,cl
  405127:	and    BYTE PTR [ecx+0x0],al
	...
  405136:	add    BYTE PTR [eax],al
  405138:	arpl   WORD PTR ds:0x53e1411,sp
  40513e:	sub    BYTE PTR [edx+ebx*8],al
  405141:	add    BYTE PTR [ecx],al
  405143:	and    DWORD PTR [edx],esp
  405145:	add    eax,0x44061848
  40514a:	jmp    0xc25bfd9
  40514f:	inc    ebp
  405150:	arpl   WORD PTR [edx],ax
  405152:	mov    cl,0x7
  405154:	cdq    
  405155:	data16 aad 0x20
  405158:	and    al,BYTE PTR ds:0x28431160
  40515e:	test   al,0x3
  405160:	stc    
  405161:	sbb    BYTE PTR [esi+0x31],bl
  405164:	push   ebx
  405165:	sbb    eax,0x5a220f9
  40516a:	inc    ecx
  40516b:	xchg   ecx,eax
  40516c:	dec    ebx
  40516d:	mov    dl,0x46
  40516f:	pop    ebx
  405170:	lods   eax,DWORD PTR ds:[esi]
  405171:	push   edx
  405172:	xor    dl,al
  405174:	push   edi
  405175:	add    eax,0x864f8a9c
  40517a:	and    eax,0x26acfabc
  40517f:	mov    bh,0x2c
  405181:	jle    0x405168
  405183:	enter  0x28bf,0xa8
  405187:	add    ebp,eax
  405189:	sbb    BYTE PTR [esp+ebp*1],bl
  40518c:	jle    0x4051d2
  40518e:	jmp    0x33426c99
  405193:	lea    ebx,[edi-0x40]
  405196:	lea    esp,[eax]
  405198:	mov    ds:0x106005,al
	...
  4051a9:	add    BYTE PTR [eax],al
  4051ab:	es sbb eax,0x4463454c
  4051b1:	push   esp
  4051b2:	fldcw  WORD PTR [edx-0x2349293c]
  4051b8:	jge    0x40519f
  4051ba:	mov    BYTE PTR [ebx],bh
  4051bc:	sub    ebp,DWORD PTR [eax]
  4051be:	add    al,0xd8
  4051c0:	sbb    BYTE PTR [edi+edi*1+0x3d],ch
  4051c4:	inc    esp
  4051c5:	add    cl,ch
  4051c7:	mov    cl,0x5
  4051c9:	(bad)  
  4051ca:	std    
  4051cb:	push   esi
  4051cc:	inc    esp
  4051cd:	add    dl,bl
  4051cf:	pop    esp
  4051d0:	and    BYTE PTR [edi+eax*1],0x1e
  4051d4:	add    eax,0xc4b7ab33
  4051d9:	mov    ebp,esp
  4051db:	jmp    0x405205
  4051dd:	data16 sub BYTE PTR [edi+0x44],ah
  4051e1:	jne    0x40517a
  4051e3:	(bad)  [edi]
  4051e5:	adc    BYTE PTR [esi+eiz*1],cl
  4051e8:	add    eax,0x2864b48b
  4051ed:	inc    ecx
  4051ee:	jmp    0xc45841cc
  4051f3:	pop    ds
  4051f4:	add    eax,0x2a7b1cff
  4051f9:	inc    ecx
  4051fa:	jmp    0x473c9cdc
  4051ff:	push   ebx
  405200:	adc    DWORD PTR [ebp-0x58],esp
  405203:	pusha  
  405204:	add    BYTE PTR [ebp+0x31],0xbf
  405208:	mov    eax,ds:0x7ced2eff
  40520d:	(bad)  
  40520e:	jb     0x405210
	...
  40521c:	add    BYTE PTR [eax],al
  40521e:	in     eax,dx
  40521f:	mov    eax,0xe4e6cad2
  405224:	push   esp
  405225:	adc    eax,0xe503c369
  40522a:	jmp    0x405265
  40522c:	gs test al,0x60
  40522f:	add    al,0x45
  405231:	add    DWORD PTR [ebx-0x72],esp
  405234:	jns    0x4052a1
  405236:	call   0xf84a:0xdeed75b0
  40523d:	jo     0x405273
  40523f:	mov    cl,0xc1
  405241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405242:	dec    ebp
  405243:	jl     0x405243
  405245:	bound  edx,QWORD PTR [edx]
  405247:	mov    ebx,0x41cd63e4
  40524d:	add    BYTE PTR [edi+0x5ecb9bd],cl
  405253:	jnp    0x405254
  405255:	mov    ecx,DWORD PTR [edi+edi*2]
  405258:	xlat   BYTE PTR ds:[ebx]
  405259:	xor    edi,DWORD PTR [edi+0x6d]
  40525c:	xor    eax,edx
  40525e:	mov    ecx,0x5fc48cb0
  405263:	inc    esp
  405264:	add    BYTE PTR [ebx],al
  405266:	dec    edi
  405267:	jno    0x40526e
  405269:	mov    eax,ds:0xff6ecce1
  40526e:	(bad)  
  40526f:	js     0x405200
  405271:	inc    ebp
  405272:	loop   0x4052f0
  405274:	jge    0x405272
  405276:	retf   
  405277:	outs   dx,DWORD PTR ds:[esi]
  405278:	push   ds
  405279:	mov    eax,DWORD PTR [esi+edi*2]
  40527c:	repz sar DWORD PTR [ecx],0xb0
  405280:	add    bl,al
	...
  40528e:	add    BYTE PTR [eax],al
  405290:	add    BYTE PTR [ebx-0x59463021],bh
  405296:	jp     0x405297
  405298:	inc    ecx
  40529a:	jb     0x405227
  40529c:	push   ebp
  40529d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40529e:	inc    BYTE PTR [esp+edi*8+0x59]
  4052a2:	ret    0xc623
  4052a5:	inc    ecx
  4052a6:	mov    BYTE PTR [ebx],0x4
  4052a9:	xchg   edi,eax
  4052aa:	adc    eax,0x53a4166
  4052af:	inc    ebp
  4052b0:	clc    
  4052b1:	aas    
  4052b2:	fdivr  DWORD PTR [ebx+ebx*1-0x38a857b]
  4052b9:	mov    ch,0xf0
  4052bb:	test   DWORD PTR [ecx-0x393e8819],0x8bfe7d24
  4052c5:	stc    
  4052c6:	ret    0x5c3
  4052c9:	or     esp,ecx
  4052cb:	inc    ecx
  4052cc:	jne    0x40527f
  4052ce:	sub    ch,ah
  4052d0:	inc    DWORD PTR ds:0x63c68b79
  4052d6:	and    ecx,esp
  4052d8:	xor    ebx,DWORD PTR [esi]
  4052da:	ret    0xc1f0
  4052dd:	pusha  
  4052de:	mov    ds:0xdd3d6486,al
  4052e3:	add    eax,DWORD PTR [ebx]
  4052e5:	es jbe 0x4052e6
  4052e8:	aad    0xa2
  4052ea:	cmp    ecx,edx
  4052ec:	push   DWORD PTR [esi]
  4052ee:	push   0xffffff84
  4052f0:	inc    ebp
  4052f1:	stos   DWORD PTR es:[edi],eax
  4052f2:	xor    al,0x36
  4052f4:	cld    
	...
  405301:	add    BYTE PTR [eax],al
  405303:	add    BYTE PTR [edx-0x6a74eaa1],ah
  405309:	and    dh,BYTE PTR [eax+0xa0a0c1]
  40530f:	fsub   DWORD PTR [edx]
  405311:	mov    ecx,0xce5e01d3
  405316:	push   ds
  405317:	inc    ecx
  405318:	arpl   WORD PTR [ebp+0x5d0613ee],bx
  40531e:	add    eax,DWORD PTR [ecx]
  405320:	es push es
  405322:	pop    ds
  405323:	inc    ecx
  405324:	arpl   WORD PTR [ebx],sp
  405326:	ds cld 
  405328:	bound  ebp,QWORD PTR [ecx-0x635d9ae9]
  40532e:	mov    BYTE PTR [ebp+0x4b],al
  405331:	sahf   
  405332:	(bad)  
  405333:	pop    ds
  405334:	(bad)  
  405335:	pop    ebp
  405336:	add    ecx,ecx
  405338:	and    BYTE PTR [edx-0x6dd31378],bl
  40533e:	or     ebp,eax
  405340:	mov    dl,0x25
  405342:	add    eax,DWORD PTR [eax]
  405344:	loopne 0x40535a
  405346:	mov    ah,0x75
  405348:	cmp    eax,0xfb082dff
  40534d:	xchg   edx,eax
  40534e:	jp     0x405350
  405350:	arpl   WORD PTR [ebx-0xb9b8a3d],si
  405356:	mov    bl,0xff
  405358:	hlt    
  405359:	lahf   
  40535a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40535b:	adc    ebx,eax
  40535d:	add    eax,0xfad30029
  405362:	test   al,0x39
  405364:	fs ins DWORD PTR es:[edi],dx
  405366:	(bad)  
  405367:	mov    bl,0x0
	...
  405375:	add    BYTE PTR [eax],al
  405377:	aam    0xae
  405379:	ret    0xd808
  40537c:	add    eax,0xc39a0472
  405381:	in     eax,0x3
  405383:	push   ss
  405384:	jp     0x40534b
  405386:	xchg   DWORD PTR [edi-0x7608e54b],ebx
  40538c:	sbb    ebp,edi
  40538e:	sbb    eax,0x9beb1b62
  405393:	pop    ecx
  405394:	ins    BYTE PTR es:[edi],dx
  405395:	jmp    0x8eee339d
  40539a:	cmp    DWORD PTR [ecx-0x66],esp
  40539d:	or     edi,DWORD PTR [edi-0x55]
  4053a0:	sbb    ebx,ecx
  4053a2:	and    BYTE PTR [esi],0xb5
  4053a5:	sbb    DWORD PTR [ebx+ebp*8+0x5b36ea7],ebx
  4053ac:	(bad)  
  4053ad:	lods   al,BYTE PTR ds:[esi]
  4053ae:	mov    bl,0x61
  4053b0:	add    eax,0x87734172
  4053b5:	and    al,0x2a
  4053b7:	jmp    0xe901:0xce875b3f
  4053be:	aaa    
  4053bf:	pop    esi
  4053c0:	jp     0x405366
  4053c2:	dec    DWORD PTR [ecx+0xe]
  4053c5:	push   0x31
  4053c7:	addr16 add eax,0x2fe1fdb4
  4053cd:	icebp  
  4053ce:	add    ebp,DWORD PTR [esi+0x9e91209]
  4053d4:	(bad)  
  4053d5:	adc    eax,0x7d9d6b39
  4053da:	mov    dl,0x0
	...
  4053e8:	add    BYTE PTR [eax],al
  4053ea:	or     al,0xae
  4053ec:	push   0xffffffac
  4053ee:	add    al,0x38
  4053f0:	jmp    0x405390
  4053f2:	push   edi
  4053f3:	jl     0x4053f5
  4053f5:	lods   al,BYTE PTR ds:[esi]
  4053f6:	lods   al,BYTE PTR ds:[esi]
  4053f7:	sbb    dl,BYTE PTR [eax]
  4053f9:	pop    esp
  4053fa:	call   0xb8a8:0xc73a50b5
  405401:	jmp    0xd738d666
  405406:	fwait
  405407:	std    
  405408:	push   edx
  405409:	shl    DWORD PTR [ecx-0x3216ff94],0xca
  405410:	mov    ebp,DWORD PTR [edx-0x1a3d43d3]
  405416:	pusha  
  405417:	pop    eax
  405418:	mov    edi,DWORD PTR [ebp+0x24835615]
  40541e:	dec    edi
  40541f:	add    eax,0x408f275
  405424:	add    cl,ch
  405426:	pusha  
  405427:	dec    esi
  405428:	pop    ebx
  405429:	mov    al,ds:0x720000a6
  40542e:	push   ebx
  40542f:	add    DWORD PTR [ebx+0x560e9],edi
  405435:	add    ebx,DWORD PTR [edi-0x52]
  405438:	jne    0x405413
  40543a:	or     DWORD PTR [esi+0x74c8f175],ebp
  405440:	mov    eax,0xc08260e9
  405445:	xlat   BYTE PTR ds:[ebx]
  405446:	ins    BYTE PTR es:[edi],dx
  405447:	or     al,bh
  405449:	add    BYTE PTR [edx+0xc48315],bl
	...
  40545b:	add    BYTE PTR [eax],al
  40545d:	jo     0x405464
  40545f:	jne    0x405447
  405461:	int    0x6
  405463:	add    cl,ch
  405465:	pusha  
  405466:	mov    al,ds:0x811e4202
  40546b:	ret    
  40546c:	(bad)  
  40546d:	xchg   ebp,eax
  40546e:	mov    esi,0x5260edc2
  405473:	mov    eax,DWORD PTR ds:0xff4c1df
  405479:	shr    DWORD PTR [edi+edi*8-0x71537900],1
  405480:	test   esi,esi
  405482:	jne    0x405483
  405484:	inc    DWORD PTR [ebp+0x7d]
  405487:	clc    
  405488:	(bad)  
  405489:	std    
  40548a:	jbe    0x40548c
  40548c:	add    dl,bh
  40548e:	or     bh,al
  405490:	test   DWORD PTR [esi-0x34000089],edi
  405496:	or     BYTE PTR [eax],al
  405498:	add    BYTE PTR [edi],ch
  40549a:	test   BYTE PTR [eax],al
  40549c:	call   FWORD PTR [ebp-0x4d8a008a]
  4054a2:	test   DWORD PTR [eax],eax
  4054a4:	lea    eax,[edi+0x6d]
  4054a7:	(bad)  
  4054a8:	(bad)  
  4054a9:	std    
  4054aa:	push   ecx
  4054ab:	push   0x0
  4054ad:	push   eax
  4054ae:	add    DWORD PTR [ebp-0x88017b],ecx
  4054b4:	call   FWORD PTR [edx+0xb]
  4054b7:	add    al,ch
  4054b9:	outs   dx,BYTE PTR ds:[esi]
  4054ba:	sbb    DWORD PTR [eax],eax
  4054bc:	add    cl,bh
  4054be:	pop    eax
  4054bf:	push   DWORD PTR [eax+eax*1+0x0]
	...
  4054cf:	add    BYTE PTR [esi-0x798a4057],al
  4054d5:	mov    cl,0xbf
  4054d7:	jmp    0x405460
  4054d9:	and    BYTE PTR [ecx],al
  4054db:	add    BYTE PTR [edx+0x8],bh
  4054de:	leave  
  4054df:	ret    0x852
  4054e2:	push   ebp
  4054e3:	mov    ebx,DWORD PTR [esi+0x9fcc482]
  4054e9:	leave  
  4054ea:	fisubr DWORD PTR [edx+0x0]
  4054ed:	jne    0x405564
  4054ef:	or     BYTE PTR [edx+0x6dffff2c],dl
  4054f5:	stos   BYTE PTR es:[edi],al
  4054f6:	mov    edi,0x5a09d674
  4054fb:	inc    edi
  4054fd:	scas   eax,DWORD PTR es:[edi]
  4054fe:	out    0x7f,eax
  405500:	jge    0x405578
  405502:	dec    DWORD PTR [ebx]
  405504:	arpl   si,bx
  405506:	ss add bh,al
  405509:	popa   
  40550a:	sbb    eax,0x7e9d7900
  40550f:	inc    ebp
  405510:	cld    
  405511:	lea    esi,[eax+0x7066b75]
  405517:	mov    eax,0xc0869e63
  40551c:	gs push cs
  40551e:	jge    0x405565
  405520:	ja     0x405508
  405522:	inc    esi
  405523:	dec    DWORD PTR [esi-0x60]
  405526:	je     0x405529
  405528:	fdiv   st,st(0)
  40552a:	dec    DWORD PTR [edx+0x6a045871]
  405530:	bound  ebx,QWORD PTR [ecx]
  405532:	inc    esi
  405533:	inc    DWORD PTR [eax]
	...
  405541:	add    BYTE PTR [eax],al
  405543:	adc    esi,DWORD PTR [ebx+0x36]
  405546:	or     al,0xac
  405548:	unpcklps xmm7,xmm7
  40554b:	cs mov dl,0x9b
  40554e:	mov    eax,0x3bb08abf
  405553:	push   ds
  405554:	scas   al,BYTE PTR es:[edi]
  405555:	xor    eax,0x86a17802
  40555a:	fisttp DWORD PTR [edi]
  40555c:	push   edx
  40555d:	jl     0x405522
  40555f:	sbb    BYTE PTR [ebp-0x3b],dh
  405562:	adc    al,0x63
  405564:	or     DWORD PTR [ebp-0x14],edi
  405567:	loop   0x4055ca
  405569:	add    edi,eax
  40556b:	and    dl,BYTE PTR fs:[ebx+ebp*1+0x38]
  405570:	xlat   BYTE PTR ds:[ebx]
  405571:	dec    ebp
  405572:	dec    esi
  405574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405575:	fwait
  405576:	sbb    BYTE PTR [esp+edi*1-0x50],cl
  40557a:	or     esp,DWORD PTR [ebx]
  40557c:	imul   ebp,DWORD PTR [eax],0x35eb996a
  405582:	or     BYTE PTR [ebx-0x59],cl
  405585:	mov    al,0xff
  405587:	sub    al,0xa8
  405589:	ret    
  40558a:	jne    0x4055ed
  40558c:	add    eax,0x28e25812
  405591:	stc    
  405592:	add    ebp,DWORD PTR [ebx+0x5]
  405595:	jmp    0xe9adb9d3
  40559a:	sti    
  40559b:	add    al,0xab
  40559d:	adc    al,BYTE PTR [eax+ebp*8]
  4055a0:	inc    eax
  4055a1:	fstp   DWORD PTR ds:0x86645563
	...
  4055b3:	add    BYTE PTR [eax],al
  4055b5:	add    BYTE PTR [ebx-0x53],ah
  4055b8:	out    dx,al
  4055b9:	scas   eax,DWORD PTR es:[edi]
  4055ba:	xchg   ebx,eax
  4055bb:	stos   BYTE PTR es:[edi],al
  4055bc:	pop    esp
  4055bd:	cld    
  4055be:	les    ebp,FWORD PTR [esi]
  4055c0:	xchg   esi,eax
  4055c1:	add    al,0x63
  4055c3:	sub    BYTE PTR [ecx-0x2619ed3],0x38
  4055ca:	pusha  
  4055cb:	inc    esi
  4055cc:	shl    bh,cl
  4055ce:	sub    al,0x7e
  4055d0:	adc    al,0x0
  4055d2:	call   0x134498ee
  4055d7:	js     0x40563d
  4055d9:	add    al,0xab
  4055db:	stos   BYTE PTR es:[edi],al
  4055dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055dd:	push   esp
  4055de:	pushf  
  4055df:	xor    ch,ch
  4055e1:	scas   al,BYTE PTR es:[edi]
  4055e2:	xor    DWORD PTR ds:0x1527dd31,edx
  4055e8:	push   0x31
  4055ea:	jae    0x4055f1
  4055ec:	cld    
  4055ed:	add    ah,BYTE PTR [eax]
  4055ef:	sahf   
  4055f0:	in     eax,0x88
  4055f2:	cwde   
  4055f3:	xor    DWORD PTR [eax+0x7b],edx
  4055f6:	mov    al,ds:0x57c2a04e
  4055fb:	add    eax,0x864f7abc
  405600:	and    eax,0x55f6acac
  405605:	sbb    ah,BYTE PTR [ebx+0x52]
  405608:	dec    esi
  405609:	cmp    DWORD PTR [ebx-0x63],ebx
  40560c:	sbb    cl,bl
  40560e:	cmp    al,0xaa
  405610:	es dec ecx
  405612:	aaa    
  405613:	add    eax,0x560e900
  405618:	mov    edx,DWORD PTR [eax+eax*1+0x0]
	...
  405627:	add    BYTE PTR [eax],al
  405629:	sub    BYTE PTR [edi+0x12],bh
  40562c:	je     0x4055d8
  40562e:	lods   eax,DWORD PTR ds:[esi]
  40562f:	push   eax
  405630:	xchg   ebx,eax
  405631:	pop    esp
  405632:	js     0x405679
  405634:	adc    eax,0xe175aab7
  405639:	mov    ch,0x56
  40563b:	or     al,0xae
  40563d:	out    0x27,eax
  40563f:	cld    
  405640:	in     al,dx
  405641:	cli    
  405642:	clc    
  405643:	or     DWORD PTR [ebp-0x16],edi
  405646:	xchg   BYTE PTR [ebp-0xf],bh
  405649:	pusha  
  40564a:	xor    cl,cl
  40564c:	sbb    ah,BYTE PTR [edi-0x628dfa63]
  405652:	test   eax,eax
  405654:	jmp    0x5060:0xe5c2bc1d
  40565b:	mov    edx,ebp
  40565d:	loope  0x40561f
  40565f:	hlt    
  405660:	sbb    cl,BYTE PTR [ebx*1+0x560f398]
  405667:	call   0xffea534a
  40566c:	jo     0x405699
  40566e:	test   eax,0x54db248d
  405673:	call   0xffe9f04d
  405678:	ficomp DWORD PTR [ecx+0x79131e1e]
  40567e:	and    DWORD PTR [eax],eax
  405680:	and    DWORD PTR [eax+0x5],0xffffffff
  405684:	cld    
  405685:	mov    ah,0xa9
  405687:	jne    0x40566a
  405689:	enter  0xfe80,0x66
	...
  405699:	add    BYTE PTR [eax],al
  40569b:	add    BYTE PTR ds:0xdceec083,cl
  4056a1:	cmc    
  4056a2:	add    cl,ch
  4056a4:	pusha  
  4056a5:	test   al,0x75
  4056a7:	push   ebp
  4056a8:	call   0xa5413226
  4056ad:	push   edi
  4056ae:	cmp    eax,0x4a000
  4056b3:	jbe    0x4056f4
  4056b5:	mov    bl,BYTE PTR [ecx+eax*1]
  4056b8:	cmp    al,BYTE PTR ds:0x8c7e75ff
  4056be:	pop    edx
  4056bf:	push   DWORD PTR [ebp+0x57]
  4056c2:	test   eax,eax
  4056c4:	out    dx,al
  4056c5:	sar    bh,0x75
  4056c8:	outs   dx,BYTE PTR ds:[esi]
  4056c9:	mov    WORD PTR [ebp-0x74a89a23],cs
  4056cf:	push   ebp
  4056d0:	out    dx,al
  4056d1:	adc    ch,BYTE PTR cs:[edx-0x6]
  4056d5:	or     al,0x34
  4056d7:	and    edx,edi
  4056d9:	add    al,0xff
  4056db:	jne    0x4056a3
  4056dd:	pop    edx
  4056de:	jne    0x4056d4
  4056e0:	mov    ch,0x53
  4056e2:	or     al,0xc7
  4056e4:	jg     0x40573f
  4056e6:	add    BYTE PTR [eax],al
  4056e8:	mov    edx,0x51b66804
  4056ed:	inc    esp
  4056ee:	add    bh,bh
  4056f0:	outs   dx,DWORD PTR ds:[esi]
  4056f1:	jne    0x4056db
  4056f3:	sbb    DWORD PTR [ecx+eax*1],ebp
  4056f6:	add    BYTE PTR [ebx-0x3f],dl
  4056f9:	les    esi,FWORD PTR [esi+esi*1+0x11]
  4056fd:	pop    ecx
  4056fe:	push   0xb6
	...
  40570f:	mov    cl,0x43
  405711:	add    al,ch
  405713:	push   0x2d
  405715:	add    BYTE PTR [eax],al
  405717:	jns    0x405775
  405719:	push   edi
  40571a:	inc    edi
  40571b:	icebp  
  40571c:	mov    ecx,0x49b94b9
  405721:	add    BYTE PTR [eax-0x47518979],dh
  405727:	push   cs
  405728:	adc    al,0x0
  40572a:	add    BYTE PTR [ecx-0x3c],dh
  40572d:	mov    BYTE PTR [edi-0x4b],0x1
  405731:	push   edi
  405732:	push   ebx
  405733:	arpl   WORD PTR [esi-0x4f],ax
  405736:	mov    ch,0x63
  405738:	sahf   
  405739:	jp     0x405780
  40573b:	cmp    ebx,DWORD PTR [edi-0x3b]
  40573e:	inc    edi
  40573f:	xor    al,0x99
  405741:	dec    esp
  405742:	pop    ebx
  405743:	mov    ebx,0x6340d8d8
  405748:	xlat   BYTE PTR ds:[ebx]
  405749:	ss cld 
  40574b:	or     ebp,esi
  40574d:	jbe    0x40574f
  40574f:	arpl   WORD PTR [ebx-0x8],bp
  405752:	mov    edi,0xf8785a97
  405757:	jnp    0x405739
  405759:	fadd   DWORD PTR [eax+0x63]
  40575c:	push   ss
  40575d:	in     eax,0xb3
  40575f:	arpl   WORD PTR [esi+0x5794f800],bx
  405765:	js     0x405746
  405767:	stos   BYTE PTR es:[edi],al
  405768:	push   ecx
  405769:	adc    eax,DWORD PTR [eax]
  40576b:	arpl   WORD PTR [esi+0x6605f1fe],cx
  405771:	xchg   edi,eax
  405772:	adc    DWORD PTR [eax],eax
	...
  405780:	add    BYTE PTR [eax],al
  405782:	arpl   WORD PTR [esi-0x21623f28],bx
  405788:	lods   al,BYTE PTR ds:[esi]
  405789:	add    BYTE PTR [ebx+ecx*1],dl
  40578c:	pushf  
  40578d:	addr16 mov cl,0x66
  405790:	lods   al,BYTE PTR ds:[esi]
  405791:	mov    edx,DWORD PTR [esi]
  405793:	into   
  405794:	clc    
  405795:	shr    DWORD PTR [edi],1
  405797:	mov    ds:0x9788027a,al
  40579c:	push   ebx
  40579d:	call   0xffecd334
  4057a2:	sub    al,0x58
  4057a4:	inc    esp
  4057a5:	call   DWORD PTR [esi-0x29]
  4057a8:	dec    eax
  4057a9:	push   esi
  4057ab:	sub    DWORD PTR [ebx-0x53d969db],ebx
  4057b1:	sub    esi,0x35
  4057b4:	add    esi,DWORD PTR [edi+0x5c]
  4057b7:	pop    edi
  4057b8:	inc    esi
  4057b9:	clc    
  4057ba:	arpl   WORD PTR ds:0xa66363e9,ax
  4057c0:	aam    0xab
  4057c2:	dec    esp
  4057c3:	xor    DWORD PTR [ebp-0x54],ebx
  4057c6:	into   
  4057c7:	std    
  4057c8:	inc    eax
  4057c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057cc:	inc    esi
  4057cd:	lods   al,BYTE PTR ds:[esi]
  4057ce:	scas   al,BYTE PTR es:[edi]
  4057cf:	mov    cl,0x51
  4057d1:	xchg   BYTE PTR [ecx],cl
  4057d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057d4:	ss clc 
  4057d6:	in     al,0x30
  4057d8:	jmp    0x405772
  4057da:	js     0x4057d6
  4057dc:	sub    BYTE PTR [edi],dh
  4057de:	ins    BYTE PTR es:[edi],dx
  4057df:	jp     0x405795
  4057e1:	mov    bh,0xd8
  4057e3:	adc    edx,DWORD PTR [esi]
  4057e5:	add    BYTE PTR ss:[eax],al
	...
  4057f4:	add    BYTE PTR [edi-0x5a],dl
  4057f7:	xchg   esp,eax
  4057f8:	mov    bh,0xfc
  4057fa:	push   ebx
  4057fb:	mov    ebp,0xe42e2386
  405800:	push   0x3e90562
  405805:	fcom   DWORD PTR [eax-0xb]
  405808:	ja     0x40587b
  40580a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40580b:	pop    esp
  40580c:	mov    al,0xd4
  40580e:	push   ebx
  40580f:	icebp  
  405810:	stos   BYTE PTR es:[edi],al
  405811:	push   esi
  405812:	test   eax,0xa6c17fc1
  405817:	into   
  405818:	jg     0x4057ba
  40581a:	inc    esi
  40581b:	and    bh,BYTE PTR [ebp+0x50e8f9a1]
  405821:	fcomp  DWORD PTR [ecx+0x4ef3c06a]
  405827:	sbb    bl,bh
  405829:	mov    ecx,0x94e3e91d
  40582e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40582f:	xchg   ecx,eax
  405830:	add    BYTE PTR [ecx+0x1e7d96a6],0xa9
  405837:	add    DWORD PTR [ebx+eax*2],eax
  40583a:	add    eax,0xa2fa9be9
  40583f:	jle    0x4057ec
  405841:	fiadd  DWORD PTR [eax+0x0]
  405844:	cmp    eax,0xe9200547
  405849:	pusha  
  40584a:	popf   
  40584b:	ins    BYTE PTR es:[edi],dx
  40584c:	dec    ebx
  40584d:	or     BYTE PTR [esi+0x78c4a489],ah
  405853:	jge    0x40587e
  405855:	mov    dh,0xe9
  405857:	(bad)  
  405858:	call   0x40585d
	...
  405865:	add    BYTE PTR [eax],al
  405867:	add    BYTE PTR [eax-0xe],ah
  40586a:	mov    edi,0x45be953a
  40586f:	sub    DWORD PTR [ebx],edi
  405871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405872:	(bad)  
  405873:	jmp    0x2f149899
  405878:	push   0xa22e0005
  40587d:	mov    ch,0xff
  40587f:	(bad)  
  405880:	pusha  
  405881:	add    eax,0x75bc9cff
  405886:	inc    ebp
  405887:	cmp    eax,ecx
  405889:	das    
  40588a:	mov    ah,0x76
  40588c:	mov    ds:0x20a48d99,al
  405891:	push   ebp
  405892:	push   0x800560e9
  405897:	and    DWORD PTR [eax-0x5a],0x75
  40589b:	icebp  
  40589c:	clc    
  40589d:	bound  esi,QWORD PTR [ecx+ebp*8+0x5dbffa60]
  4058a4:	popa   
  4058a5:	cmp    BYTE PTR [ebp-0x47],0x60
  4058a9:	xor    BYTE PTR ds:0x4fad0,al
  4058af:	jmp    0xb6f09855
  4058b4:	pop    ecx
  4058b5:	add    eax,0x75235c00
  4058ba:	push   eax
  4058bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058bc:	push   ebx
  4058bd:	imul   ebp,DWORD PTR [eax-0x17],0x64800560
  4058c4:	and    eax,ebp
  4058c6:	push   eax
  4058c7:	or     DWORD PTR [ebx+0x71],0x0
	...
  4058da:	add    BYTE PTR [edx-0x788a405a],cl
  4058e0:	mov    BYTE PTR [ecx-0x74fe8600],ch
  4058e6:	inc    ebp
  4058e7:	xchg   esi,eax
  4058e8:	mov    BYTE PTR [eax],0x0
  4058eb:	iret   
  4058ec:	in     eax,dx
  4058ed:	mov    edi,0x96eb9
  4058f2:	add    BYTE PTR [ecx-0x37],ch
  4058f5:	rep stos BYTE PTR es:[edi],al
  4058f7:	test   DWORD PTR [ebp-0x40],eax
  4058fa:	cmp    al,0x4a
  4058fc:	or     DWORD PTR [eax],eax
  4058fe:	push   edi
  405900:	xor    al,0x8f
  405902:	inc    ebp
  405903:	sahf   
  405904:	mov    DWORD PTR [ebp-0x2c],0xf4d
  40590b:	inc    ebp
  40590c:	inc    ebp
  40590d:	lock dec DWORD PTR ds:0xb78d0009
  405914:	enter  0x6a50,0xa
  405918:	add    eax,DWORD PTR [eax]
  40591a:	push   DWORD PTR [edi+0x2c]
  40591d:	call   0x488f53
  405922:	or     edi,DWORD PTR [edx]
  405924:	hlt    
  405925:	add    eax,0xb84f83
  40592a:	jne    0x4058f4
  40592c:	and    DWORD PTR [eax-0x1],0x75ff6d37
  405933:	out    0x1,al
  405935:	shr    BYTE PTR [ebx],1
  405937:	mov    ecx,DWORD PTR [ecx]
  405939:	push   DWORD PTR [ebp-0x22]
  40593c:	or     edx,0xb3
	...
  40594e:	mov    edx,0x8ac48308
  405953:	popf   
  405954:	mov    dh,0x45
  405956:	repnz cmp DWORD PTR [edx+0x0],ebp
  40595a:	mov    ebp,0xdce8fbf4
  40595f:	jae    0x405960
  405961:	jmp    DWORD PTR [ebx-0x59]
  405964:	ret    
  405965:	jne    0x4059c8
  405967:	xchg   edi,ebp
  405969:	mov    BYTE PTR [esi],bl
  40596b:	inc    esi
  40596c:	test   eax,0x2576af75
  405971:	mov    dl,0x63
  405973:	scas   al,BYTE PTR es:[edi]
  405974:	push   ebx
  405975:	call   esi
  405977:	repnz test al,0x75
  40597a:	sbb    esi,DWORD PTR [esi]
  40597c:	dec    edi
  40597d:	sti    
  40597e:	dec    esp
  40597f:	inc    ebx
  405980:	std    
  405981:	mov    edi,0x109cb0ce
  405986:	cmp    al,0xb9
  405988:	adc    edi,edi
  40598a:	scas   al,BYTE PTR es:[edi]
  40598b:	call   0xfcef:0x35eb75a8
  405992:	and    al,0xdb
  405994:	jl     0x40596e
  405996:	sbb    al,0x59
  405998:	imul   ebp,eax,0x66
  40599b:	inc    edx
  40599c:	add    al,0x0
  40599e:	or     al,0x79
  4059a0:	outs   dx,DWORD PTR ds:[esi]
  4059a1:	call   0xffe966dc
  4059a6:	cld    
  4059a7:	js     0x405a10
  4059a9:	call   0xffe966ec
  4059ae:	in     al,dx
  4059af:	sbb    BYTE PTR [edi+0xe8],ah
	...
  4059c1:	inc    esi
  4059c2:	or     eax,0xeee8ffa9
  4059c7:	dec    esp
  4059c8:	pop    edi
  4059c9:	stos   BYTE PTR es:[edi],al
  4059ca:	outs   dx,DWORD PTR ds:[esi]
  4059cb:	idiv   edi
  4059cd:	aaa    
  4059ce:	pop    ss
  4059cf:	xchg   edi,eax
  4059d0:	sbb    DWORD PTR [edi+0x6f457cb9],0xffffffa7
  4059d7:	ret    
  4059d8:	je     0x405a37
  4059da:	jae    0x4059df
  4059dc:	add    BYTE PTR [ebx-0x52],ah
  4059df:	add    eax,edi
  4059e1:	push   ds
  4059e2:	pop    edx
  4059e3:	add    eax,DWORD PTR [eax]
  4059e5:	arpl   WORD PTR [esi+0x4974576],bp
  4059eb:	cmp    DWORD PTR [ecx+0x2e9e1116],ebp
  4059f1:	pop    ebx
  4059f2:	lods   eax,DWORD PTR ds:[esi]
  4059f3:	add    BYTE PTR [edx+0x266aa37c],ch
  4059f9:	ja     0x4059ff
  4059fb:	std    
  4059fc:	adc    cl,bh
  4059fe:	add    al,0x7e
  405a00:	cs push edi
  405a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a03:	cld    
  405a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a05:	dec    ebx
  405a06:	cmp    al,0x6f
  405a08:	test   al,0x54
  405a0a:	ss cs dec di
  405a0e:	scas   al,BYTE PTR es:[edi]
  405a0f:	cmp    DWORD PTR [ebx-0x454e5cbc],esp
  405a15:	and    DWORD PTR [esi],ecx
  405a17:	jmp    0x6af2426a
  405a1c:	mov    edi,0x3e262c2f
  405a21:	daa    
  405a22:	add    eax,0x21e9
	...
  405a33:	add    BYTE PTR [ecx+ecx*2],ah
  405a36:	das    
  405a37:	or     DWORD PTR [ebx+0x2f],esp
  405a3a:	in     eax,dx
  405a3b:	jbe    0x4059e3
  405a3d:	mov    eax,ds:0x5e31bb9
  405a42:	jmp    0xee2e54a
  405a47:	add    esp,DWORD PTR [ebx-0x5e]
  405a4a:	jl     0x405a47
  405a4c:	add    al,0x75
  405a4e:	cmp    al,BYTE PTR [ebx]
  405a50:	arpl   sp,cx
  405a52:	sub    edi,edi
  405a54:	fdivr  QWORD PTR [ecx]
  405a56:	bound  edx,QWORD PTR [edi+0x4f95c9e0]
  405a5c:	xor    dl,cl
  405a5e:	and    al,0x58
  405a60:	arpl   WORD PTR ds:0xbe7003e9,ax
  405a66:	inc    ecx
  405a67:	add    al,0x53
  405a69:	add    eax,0xa5ca9be9
  405a6e:	mov    esi,0x48daa7
  405a73:	test   eax,0xe910057f
  405a78:	pusha  
  405a79:	lods   eax,DWORD PTR ds:[esi]
  405a7a:	mov    WORD PTR [ecx+0x2489a2c4],cs
  405a80:	imul   DWORD PTR [eax+eax*1]
  405a83:	stc    
  405a84:	pusha  
  405a85:	add    eax,0xa2bf0ee8
  405a8a:	push   DWORD PTR [eax+0x22]
  405a8d:	popa   
  405a8e:	(bad)  
  405a8f:	cld    
  405a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a91:	pop    esp
  405a92:	cmp    al,0xe9
  405a94:	pusha  
  405a95:	add    eax,0xa933
	...
  405aa6:	add    BYTE PTR [eax],dl
  405aa8:	outs   dx,DWORD PTR ds:[esi]
  405aa9:	(bad)  
  405aaa:	lods   al,BYTE PTR ds:[esi]
  405aab:	or     al,0xe1
  405aad:	(bad)  
  405aae:	call   0x29b5fd13
  405ab3:	mov    ah,0x48
  405ab5:	aam    0x4e
  405ab7:	jb     0x405b16
  405ab9:	(bad)  
  405aba:	lods   al,BYTE PTR ds:[esi]
  405abb:	lock leave 
  405abd:	inc    ebp
  405abe:	and    esp,edi
  405ac0:	adc    DWORD PTR [eax],eax
  405ac2:	jmp    0x2f34a2a4
  405ac7:	or     al,0xa2
  405ac9:	push   DWORD PTR [edx+eiz*4-0x37]
  405acd:	push   eax
  405ace:	xchg   ecx,eax
  405acf:	pusha  
  405ad0:	add    eax,0x5596900
  405ad5:	call   DWORD PTR [eax+edi*8+0x673bb5a9]
  405adc:	add    eax,0xb33290b
  405ae1:	xor    DWORD PTR [esp+ebp*4+0x4],0x75
  405ae6:	in     al,0xf7
  405ae8:	lahf   
  405ae9:	add    cl,ch
  405aeb:	pusha  
  405aec:	retf   0x9945
  405aef:	std    
  405af0:	adc    DWORD PTR [eax],eax
  405af2:	jmp    0x39f0a332
  405af7:	cld    
  405af8:	pop    ss
  405af9:	mov    esp,0x91200
  405afe:	add    BYTE PTR [edx],bh
  405b00:	sbb    eax,0x817ac445
  405b05:	nop
  405b06:	mov    dl,0x8a
  405b08:	add    eax,0xc00b
	...
  405b19:	add    BYTE PTR [edi+0x4],ch
  405b1c:	jmp    0x45d5f9
  405b21:	mov    ecx,DWORD PTR [edi+0x31]
  405b24:	mov    BYTE PTR [eax],0x8a
  405b27:	sbb    al,0x7d
  405b29:	les    esp,FWORD PTR [ebx]
  405b2b:	stos   BYTE PTR es:[edi],al
  405b2c:	(bad)  
  405b2d:	(bad)  
  405b2e:	jp     0x405ac6
  405b30:	mov    edi,0x455fa0f3
  405b35:	les    eax,FWORD PTR [esi]
  405b37:	add    eax,0xd5c50000
  405b3c:	mov    bh,0x8f
  405b3e:	call   DWORD PTR [edi+eax*8+0x45]
  405b42:	jb     0x405bab
  405b44:	str    WORD PTR [edx+0x60]
  405b48:	inc    ebp
  405b49:	hlt    
  405b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b4b:	xchg   edi,eax
  405b4c:	(bad)  
  405b4d:	push   DWORD PTR [edi+0x2050c445]
  405b53:	add    eax,0xd545006a
  405b58:	mov    ebx,0x16bee8
  405b5d:	add    BYTE PTR [ecx],dl
  405b5f:	lds    esi,FWORD PTR [esi+eax*1-0x77]
  405b63:	in     eax,dx
  405b64:	rol    DWORD PTR [eax],cl
  405b66:	iret   
  405b67:	add    eax,0x4fa8ce9
  405b6c:	add    bh,bh
  405b6e:	outs   dx,DWORD PTR ds:[esi]
  405b6f:	hlt    
  405b70:	(bad)  
  405b71:	jne    0x405afd
  405b73:	addr16 jne 0x405b2e
  405b76:	loop   0x405b3e
  405b78:	sub    al,BYTE PTR [ecx-0x46]
  405b7b:	imul   esi,DWORD PTR [ebp-0x44],0x0
	...
  405b8a:	add    BYTE PTR [eax],al
  405b8c:	add    BYTE PTR [edx+0x6300b1d2],dh
  405b92:	scas   al,BYTE PTR es:[edi]
  405b93:	add    ah,0x4f
  405b96:	mov    edi,0xfe8f456c
  405b9b:	sbb    DWORD PTR [eax],eax
  405b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b9e:	fld    st(3)
  405ba0:	call   0xffe5b23d
  405ba5:	push   0x78022f6e
  405baa:	dec    eax
  405bab:	jnp    0x405bf2
  405bad:	iret   
  405bae:	jg     0x405bdf
  405bb0:	mov    ah,0x8b
  405bb2:	dec    ebp
  405bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bb4:	push   DWORD PTR [edi+ecx*4+0x2f]
  405bb8:	mov    esp,0x73f67b
  405bbd:	arpl   si,di
  405bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bc0:	jne    0x405be1
  405bc2:	pop    ss
  405bc3:	das    
  405bc4:	mov    ah,0x4b
  405bc6:	hlt    
  405bc7:	stos   BYTE PTR es:[edi],al
  405bc8:	dec    DWORD PTR [ebx+edx*4-0x3d]
  405bcc:	jne    0x405c2f
  405bce:	xor    esi,ebx
  405bd0:	cmp    BYTE PTR [esi+0x4f74039e],0x4f
  405bd7:	das    
  405bd8:	adc    BYTE PTR [ecx+eiz*2],ch
  405bdb:	idiv   esi
  405bdd:	scas   al,BYTE PTR es:[edi]
  405bde:	sbb    bl,BYTE PTR [eax+eax*2+0xba4d71a]
  405be5:	and    ebx,DWORD PTR [ecx+0x1]
  405be8:	jmp    0x405c5e
  405bea:	adc    ecx,esp
  405bec:	or     ebp,DWORD PTR [eax]
  405bee:	jp     0x405c02
  405bf0:	lea    eax,[eax]
	...
  405bfe:	add    BYTE PTR [eax],al
  405c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c01:	dec    edx
  405c02:	push   esp
  405c03:	jmp    FWORD PTR [esi-0x66]
  405c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c07:	jne    0x405bc0
  405c09:	cmc    
  405c0a:	or     bh,bl
  405c0c:	in     al,0x9e
  405c0e:	js     0x405be8
  405c10:	fsub   QWORD PTR [eax]
  405c12:	outs   dx,DWORD PTR ds:[esi]
  405c13:	call   0x4438ea
  405c18:	int3   
  405c19:	add    al,0x5c
  405c1b:	les    edi,FWORD PTR [ebx-0x435b420b]
  405c21:	lahf   
  405c22:	pop    esp
  405c23:	push   0xa4ae0dcb
  405c28:	lods   al,BYTE PTR ds:[esi]
  405c29:	lahf   
  405c2a:	cmp    al,0x6c
  405c2c:	mov    ebx,0x9ca49e05
  405c31:	xor    DWORD PTR [eax+ebx*2],0x63
  405c35:	sbb    ecx,esp
  405c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c38:	push   ss
  405c39:	jno    0x405bcc
  405c3b:	mov    al,0xa5
  405c3d:	lahf   
  405c3e:	sahf   
  405c3f:	js     0x405be1
  405c41:	cmp    esi,DWORD PTR [esi]
  405c43:	mov    ebx,0x4ee8f4a1
  405c48:	fdiv   DWORD PTR [eax+0x336bbf6a]
  405c4e:	ror    al,cl
  405c50:	loopne 0x405c72
  405c52:	in     eax,0x3
  405c54:	iret   
  405c55:	dec    edi
  405c56:	push   0x26
  405c58:	jae    0x405c5f
  405c5a:	fnstsw WORD PTR [ebx]
  405c5c:	(bad)  
  405c5d:	dec    eax
  405c5e:	pop    ebp
  405c5f:	push   ebx
  405c60:	cmp    al,0x19
  405c62:	in     eax,0x9b
	...
  405c70:	add    BYTE PTR [eax],al
  405c72:	add    BYTE PTR [edi],ch
  405c74:	push   esi
  405c75:	jmp    0xc206427d
  405c7a:	repz and eax,0xe79bed19
  405c80:	mov    bh,0x36
  405c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c83:	jmp    0x11a1:0x96a43148
  405c8a:	data16 mov ah,0x5
  405c8d:	jmp    0xf05a198a
  405c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c93:	outs   dx,BYTE PTR ds:[esi]
  405c94:	cmc    
  405c95:	or     eax,0x635eb2e
  405c9a:	cs pop ebx
  405c9c:	lods   eax,DWORD PTR ds:[esi]
  405c9d:	jmp    0xa862:0x9edca5
  405ca4:	sahf   
  405ca5:	jne    0x405c94
  405ca7:	jmp    0x612a0c13
  405cac:	sahf   
  405cad:	jne    0x405c9c
  405caf:	or     BYTE PTR [esi],bh
  405cb1:	fcom   st(6)
  405cb3:	add    BYTE PTR [ebx-0x3c61cd3d],cl
  405cb9:	or     al,0xe9
  405cbb:	imul   ecx,DWORD PTR [edx+0x15ab68ec],0xfffffffe
  405cc2:	mov    dh,0xc0
  405cc4:	nop
  405cc5:	test   DWORD PTR [ebx],edi
  405cc7:	rcr    DWORD PTR [esi+0x43739ff],0x1
  405cce:	jmp    0x58a40a33
  405cd3:	pop    edi
  405cd4:	add    eax,0xaac9
	...
  405ce5:	add    BYTE PTR [edx],ch
  405ce7:	mov    ch,ah
  405ce9:	push   0x42
  405ceb:	or     eax,0x8261f500
  405cf0:	jge    0x405ccb
  405cf2:	pusha  
  405cf3:	sbb    DWORD PTR [ecx],ebx
  405cf5:	outs   dx,BYTE PTR ds:[esi]
  405cf6:	push   0xfffffff9
  405cf8:	(bad)  
  405cf9:	fcomp  QWORD PTR [eax-0x53]
  405cfc:	fiadd  DWORD PTR [ebx+0x0]
  405cff:	sahf   
  405d00:	(bad)  
  405d01:	fdiv   QWORD PTR [eax]
  405d03:	lahf   
  405d04:	jne    0x405ce3
  405d06:	add    DWORD PTR [eax],ebx
  405d08:	or     BYTE PTR [ecx+0x5d],dl
  405d0b:	mov    edx,0xc32e3eff
  405d10:	adc    cl,ch
  405d12:	pop    ebx
  405d13:	mov    ch,ah
  405d15:	push   0x42
  405d17:	or     eax,0x83049d00
  405d1c:	jge    0x405d0b
  405d1e:	pusha  
  405d1f:	sbb    DWORD PTR [esi],edx
  405d21:	push   ss
  405d22:	pop    edx
  405d23:	cmc    
  405d24:	(bad)  
  405d25:	xchg   esp,eax
  405d26:	pop    eax
  405d27:	lods   eax,DWORD PTR ds:[esi]
  405d28:	scas   al,BYTE PTR es:[edi]
  405d29:	add    BYTE PTR [eax+0x62],al
  405d2c:	(bad)  
  405d2d:	call   DWORD PTR [edi+0xe]
  405d30:	push   DWORD PTR [ebp-0x3e]
  405d33:	imul   eax,DWORD PTR ds:0xc962bddb,0x5501cec2
  405d3d:	mov    ebp,DWORD PTR [esi-0x720f3b7a]
  405d43:	cld    
  405d44:	or     ebp,eax
  405d46:	jge    0x405dae
  405d48:	(bad)  
  405d49:	inc    DWORD PTR [eax]
	...
  405d57:	add    BYTE PTR [eax],al
  405d59:	xor    ecx,DWORD PTR [ebp+0xc]
  405d5c:	sbb    DWORD PTR [edi-0xb],0xffffffff
  405d60:	jae    0x405dd6
  405d62:	bound  esi,QWORD PTR [ebp+0xc]
  405d65:	mov    ds:0xbdffe2ce,al
  405d6a:	push   cs
  405d6b:	shl    BYTE PTR [eax+ecx*2+0x74],0x45
  405d70:	lock cmp ah,BYTE PTR [edx+0x75]
  405d74:	or     al,0xe2
  405d76:	xchg   ebx,esp
  405d78:	(bad)  
  405d79:	fisttp QWORD PTR [esi]
  405d7b:	shl    BYTE PTR [eax+ebx*1-0x7e],0x7d
  405d80:	cld    
  405d81:	dec    edx
  405d82:	or     DWORD PTR [eax],edx
  405d84:	add    BYTE PTR [ecx-0x57],cl
  405d87:	(bad)  
  405d88:	jne    0x405d48
  405d8a:	addr16 jne 0x405d85
  405d8d:	xchg   edx,eax
  405d8e:	popf   
  405d8f:	out    0xff,al
  405d91:	lea    ecx,[ebx]
  405d93:	shl    BYTE PTR [ebp+0x2b],0x68
  405d97:	jne    0x405da9
  405d99:	popf   
  405d9a:	std    
  405d9b:	sti    
  405d9c:	call   edi
  405d9e:	cmp    bh,0x75
  405da1:	add    dh,BYTE PTR [ecx+0x4f]
  405da4:	(bad)  
  405da5:	cmp    eax,0x6a458d67
  405daa:	fsub   st,st(7)
  405dac:	loopne 0x405e17
  405dae:	addr16 (bad) 
  405db0:	jmp    DWORD PTR [ebx+0x79]
  405db3:	psubsb mm7,QWORD PTR [edx+0x1affa1e9]
  405dba:	icebp  
  405dbb:	push   cs
	...
  405dcc:	ss pop ss
  405dce:	scas   eax,DWORD PTR es:[edi]
  405dcf:	sbb    DWORD PTR [edi+0x5f75a19e],0x6
  405dd6:	mov    cl,0xe2
  405dd8:	les    esp,FWORD PTR [ebx+0x2f6f458b]
  405dde:	pop    ds
  405ddf:	or     al,0x63
  405de1:	cmp    cl,BYTE PTR [ecx-0x1]
  405de4:	ss mov edx,0xc3c15aab
  405dea:	mov    eax,ds:0xd4d2a30b
  405def:	mov    WORD PTR [esi],ds
  405df1:	pop    esi
  405df2:	xor    al,0xff
  405df4:	push   ss
  405df5:	mov    edx,0x638011ab
  405dfa:	mov    eax,ds:0xe4f2a30b
  405dff:	xor    dh,0x71
  405e02:	add    al,0x0
  405e04:	push   ebx
  405e05:	scas   al,BYTE PTR es:[edi]
  405e06:	adc    al,0x11
  405e08:	fs cdq 
  405e0a:	repz (bad) 
  405e0c:	(bad)  
  405e0d:	sbb    ah,BYTE PTR [ecx+0x17135b75]
  405e13:	or     BYTE PTR [ebx],bh
  405e15:	sbb    DWORD PTR [edx+0x471144ff],esp
  405e1b:	lock xchg ebx,eax
  405e1d:	ss and ah,bl
  405e20:	xor    al,0x33
  405e22:	mov    eax,ds:0x49465f75
  405e27:	frstor [ebx+eax*2]
  405e2a:	retf   
  405e2b:	ret    0xae6f
  405e2e:	mov    eax,DWORD PTR ss:[eax]
	...
  405e3d:	add    BYTE PTR [eax],al
  405e3f:	pop    es
  405e40:	das    
  405e41:	enter  0xb0f0,0x7
  405e45:	mov    ebp,0xf1058eff
  405e4a:	stos   DWORD PTR es:[edi],eax
  405e4b:	jmp    0xe141:0xeaa11ea6
  405e52:	test   BYTE PTR [esi+0xd],ch
  405e55:	jmp    0x7cdcfb71
  405e5a:	or     ecx,ebx
  405e5c:	xchg   ecx,eax
  405e5d:	or     BYTE PTR [ecx+0x18290fd4],ah
  405e63:	xchg   ecx,eax
  405e64:	mov    ah,BYTE PTR [ebx+edx*4+0xc5c9c33]
  405e6b:	retf   
  405e6c:	push   0xfb4a0cb
  405e71:	test   eax,0x4c868117
  405e76:	mov    al,ds:0x3d90563
  405e7b:	adc    ch,dh
  405e7d:	mov    ebp,0x3c9b9716
  405e82:	pushf  
  405e83:	jnp    0x405e60
  405e85:	(bad)  
  405e86:	mov    al,ds:0x17a90f84
  405e8b:	bound  ecx,QWORD PTR [eax+0x6c]
  405e8e:	inc    esi
  405e8f:	jae    0x405ec5
  405e91:	cmp    ebp,0xa08e9b81
  405e97:	out    dx,al
  405e98:	or     al,0x91
  405e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e9b:	aas    
  405e9c:	fwait
  405e9d:	jle    0x405e2b
  405e9f:	and    BYTE PTR [edi],bh
  405ea1:	mov    al,ds:0xc5
	...
  405eb2:	addr16 add eax,0x85378d14
  405eb8:	sub    eax,0x5e9b3d57
  405ebd:	enter  0x5dde,0x57
  405ec1:	mov    al,ds:0x3e9062c
  405ec6:	arpl   WORD PTR [esi-0x3a97f054],cx
  405ecc:	mov    ch,0x6
  405ece:	jecxz  0x405ead
  405ed0:	(bad)  
  405ed1:	call   0xb2295f4b
  405ed6:	popa   
  405ed7:	add    eax,0x9552600
  405edc:	call   0xffdb2a29
  405ee1:	loop   0x405f03
  405ee3:	adc    DWORD PTR [edi],ecx
  405ee5:	adc    DWORD PTR [ecx-0x17],0x1103e940
  405eec:	or     al,0x11
  405eee:	ret    0xffba
  405ef1:	idiv   al
  405ef3:	or     BYTE PTR [eax+0x77],ch
  405ef6:	mov    ah,0x45
  405ef8:	add    dh,ah
  405efa:	pop    edx
  405efb:	or     eax,ebp
  405efd:	push   cs
  405efe:	call   FWORD PTR [edx+0x5dda60ff]
  405f04:	dec    dh
  405f06:	les    ebp,FWORD PTR ds:0x560e83e
  405f0c:	lea    esp,[ecx+eiz*4-0x65]
  405f10:	push   DWORD PTR [esi-0x725852a9]
	...
  405f22:	add    BYTE PTR [eax],al
  405f24:	add    ah,ah
  405f26:	call   0x9eff:0x9ba16c8d
  405f2d:	das    
  405f2e:	call   0x81ff:0x9acd51b5
  405f35:	shr    BYTE PTR [eax+0x0],0xe9
  405f39:	out    dx,eax
  405f3a:	jg     0x405ef8
  405f3c:	jg     0x405f32
  405f3e:	cdq    
  405f3f:	inc    eax
  405f40:	out    0xe4,al
  405f42:	inc    BYTE PTR [eax]
  405f44:	jmp    0x2bd5e7a9
  405f49:	fstp   QWORD PTR [ecx-0xa9ea901]
  405f4f:	(bad)  
  405f50:	call   0x6ac469b5
  405f55:	pop    edi
  405f56:	add    eax,0x47970000
  405f5b:	sub    al,0x50
  405f5d:	xor    ch,dl
  405f5f:	sub    eax,DWORD PTR [ecx-0x6]
  405f62:	ins    DWORD PTR es:[edi],dx
  405f63:	mov    esp,0xb05faad
  405f68:	rcr    bh,0xc
  405f6b:	jmp    0x466a3c
  405f70:	lea    ebp,[edi-0x39]
  405f73:	(bad)  
  405f74:	call   DWORD PTR [ebp+0x74]
  405f77:	inc    edx
  405f78:	sub    al,0xfa
  405f7a:	in     eax,dx
  405f7b:	ins    DWORD PTR es:[edi],dx
  405f7c:	sub    al,0xb
  405f7e:	push   es
  405f7f:	call   0x418723
  405f84:	or     edi,DWORD PTR [edx-0x4]
  405f87:	add    al,0xe9
	...
  405f95:	add    BYTE PTR [eax],al
  405f97:	add    ch,dl
  405f99:	add    eax,0xfc950000
  405f9e:	or     ebp,eax
  405fa0:	xchg   edi,eax
  405fa1:	pop    edi
  405fa2:	(bad)  
  405fa3:	inc    ecx
  405fa5:	lds    esi,FWORD PTR [ebp+0xf]
  405fa8:	xor    al,BYTE PTR [ecx+0x7a8a4128]
  405fae:	jne    0x405fbc
  405fb0:	mov    ds:0xb5ffdf1b,al
  405fb5:	outs   dx,BYTE PTR ds:[esi]
  405fb6:	or     ch,BYTE PTR [edx-0x76]
  405fb9:	jp     0x406030
  405fbb:	or     al,0xd2
  405fbd:	xchg   edi,ebx
  405fbf:	call   ebp
  405fc1:	je     0x405f58
  405fc3:	ret    0x7ad4
  405fc6:	dec    DWORD PTR [ebp+0x50519578]
  405fcc:	repnz push esi
  405fce:	(bad)  
  405fd0:	aad    0xd4
  405fd2:	(bad)  
  405fd3:	jne    0x406007
  405fd5:	js     0x40604c
  405fd7:	adc    al,0xc5
  405fd9:	std    
  405fda:	(bad)  
  405fdc:	xchg   ebp,eax
  405fdd:	std    
  405fde:	pop    es
  405fdf:	call   0xffdd9e47
  405fe4:	and    al,0x47
  405fe6:	(bad)  
  405fe7:	fistp  DWORD PTR [eax+eax*2]
  405fea:	stos   BYTE PTR es:[edi],al
  405feb:	pusha  
  405fec:	out    0x6c,al
  405fee:	out    dx,eax
  405fef:	mov    dh,ah
  405ff1:	sbb    bl,BYTE PTR [ebp+0x202c04ff]
  405ff7:	adc    BYTE PTR [ebx+0x79],ah
  405ffa:	add    ebx,ebp
	...
  406008:	add    BYTE PTR [eax],al
  40600a:	add    BYTE PTR [ecx-0x9],dl
  40600d:	pop    ss
  40600e:	adc    ah,ch
  406010:	cmp    DWORD PTR [edi-0x2],edx
  406013:	in     al,0x7
  406015:	stos   DWORD PTR es:[edi],eax
  406016:	inc    edx
  406017:	or     eax,0xa30b03af
  40601c:	adc    ah,al
  40601e:	jcxz   0x405fe7
  406021:	inc    esp
  406022:	add    ah,al
  406024:	adc    DWORD PTR [edi],ecx
  406026:	call   0xffde1fa2
  40602b:	mov    ah,0x71
  40602d:	pop    eax
  40602e:	(bad)  
  40602f:	lods   al,BYTE PTR ds:[esi]
  406030:	scas   eax,DWORD PTR es:[edi]
  406031:	xor    al,0xe8
  406033:	daa    
  406034:	addr16 popf 
  406036:	push   DWORD PTR [ebx]
  406038:	sub    ebx,DWORD PTR [edi]
  40603a:	sbb    BYTE PTR [ebx-0x2e],ah
  40603d:	ud0    edx,DWORD PTR [esi]
  406040:	mov    edx,0xa60eff33
  406045:	pushf  
  406046:	push   ebp
  406047:	pop    ebx
  406048:	jae    0x40605a
  40604a:	(bad)  
  40604b:	out    dx,al
  40604c:	xchg   ecx,eax
  40604d:	xor    edi,edi
  40604f:	mul    BYTE PTR [ebp-0x7899ab55]
  406055:	popf   
  406056:	call   0xffddc421
  40605b:	out    0x20,al
  40605d:	ret    0x4cfe
  406060:	sysenter 
  406062:	dec    DWORD PTR [esi]
  406064:	jmp    0xb951:0x53cff9d
  40606b:	pop    es
  40606c:	add    eax,0x86e9
	...
  40607d:	add    BYTE PTR [ebx],ah
  40607f:	or     BYTE PTR [ebx+edx*4+0x25],ch
  406083:	cwde   
  406084:	dec    esi
  406085:	popf   
  406086:	(bad)  
  406087:	pop    eax
  406088:	inc    edi
  406089:	popf   
  40608a:	adc    al,0xad
  40608c:	das    
  40608d:	jo     0x4060f2
  40608f:	add    eax,0x96cb5736
  406094:	cs popf 
  406096:	or     edx,edx
  406098:	inc    ecx
  406099:	popf   
  40609a:	hlt    
  40609b:	int    0x2b
  40609d:	clc    
  40609e:	in     al,dx
  40609f:	xor    BYTE PTR [edx-0x50],ah
  4060a2:	jns    0x4060a9
  4060a4:	push   cs
  4060a5:	pop    ss
  4060a6:	ja     0x406040
  4060a8:	jl     0x40609d
  4060aa:	aad    0x11
  4060ac:	in     eax,dx
  4060ad:	pushf  
  4060ae:	push   esi
  4060af:	or     eax,0x97c6dd01
  4060b4:	out    dx,al
  4060b5:	retf   0xf4a1
  4060b8:	call   0xdee948f3
  4060bd:	push   ss
  4060be:	pop    edi
  4060bf:	lods   eax,DWORD PTR ds:[esi]
  4060c0:	xor    bh,BYTE PTR [ebp-0x3c1d685c]
  4060c6:	pop    ss
  4060c7:	test   ebp,0xd1357316
  4060cd:	xchg   ecx,eax
  4060ce:	lods   eax,DWORD PTR ds:[esi]
  4060cf:	xchg   edi,eax
  4060d0:	mov    dh,0x33
  4060d2:	test   BYTE PTR [ecx],dl
  4060d4:	rcr    DWORD PTR [esi+esi*8-0x1162c710],1
  4060db:	or     al,0x91
  4060dd:	pop    ebp
  4060de:	ins    BYTE PTR es:[edi],dx
  4060df:	xchg   edi,eax
  4060e0:	xchg   esi,eax
  4060e1:	stos   DWORD PTR es:[edi],eax
	...
  4060ee:	add    BYTE PTR [eax],al
  4060f0:	add    BYTE PTR [ecx-0x46],bh
  4060f3:	mov    ds,WORD PTR [edx+ebp*1-0x51fc223c]
  4060fa:	mov    cl,BYTE PTR [ebp-0xe2964]
  406100:	jne    0x40616f
  406102:	cmc    
  406103:	(bad)  
  406104:	hlt    
  406105:	ins    BYTE PTR es:[edi],dx
  406106:	sub    ebx,DWORD PTR [edx]
  406108:	dec    bp
  40610a:	or     eax,0x96cfa0e8
  40610f:	call   DWORD PTR [esi+0x4d]
  406112:	icebp  
  406113:	(bad)  
  406114:	aam    0x10
  406116:	cwde   
  406117:	jne    0x40610e
  406119:	dec    edx
  40611a:	loop   0x40611a
  40611c:	mov    ah,0x58
  40611e:	lods   eax,DWORD PTR ds:[esi]
  40611f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406120:	ss out 0x96,eax
  406123:	push   DWORD PTR [esp+esi*8-0x28068a69]
  40612a:	adc    BYTE PTR [ebx+edx*4],cl
  40612d:	in     al,dx
  40612e:	xchg   edi,eax
  40612f:	jne    0x406112
  406131:	mov    eax,0xff0eff72
  406136:	int3   
  406137:	ret    0x60d9
  40613a:	xor    BYTE PTR [ebx-0xf3e1cf3],cl
  406140:	call   0x40eb:0x122b2e8e
  406147:	or     al,0xe6
  406149:	pop    DWORD PTR [edi+0x10c8e145]
  40614f:	or     BYTE PTR [esi+0x22],ah
  406152:	cdq    
  406153:	(bad)  
  406154:	and    al,0x0
	...
  406162:	add    BYTE PTR [eax],al
  406164:	repz add eax,0x8260e900
  40616a:	cmp    eax,0x457fb8
  40616f:	jmp    0x2cc39ac8
  406174:	outs   dx,DWORD PTR ds:[esi]
  406175:	add    eax,0x40ea3f74
  40617a:	lock cmp DWORD PTR ds:0x36e96a04,edi
  406181:	add    eax,0x96570c83
  406186:	jae    0x406188
  406188:	inc    edi
  406189:	jnp    0x406200
  40618b:	adc    cl,dh
  40618d:	(bad)  
  40618e:	imul   eax,DWORD PTR [eax],0x458d0160
  406194:	mov    dl,0xd1
  406196:	(bad)  
  406197:	adc    eax,0x40a99b
  40619c:	xor    edx,eax
  40619e:	je     0x4061cf
  4061a0:	mov    ecx,0x3600f3fc
  4061a5:	test   eax,0x870e458a
  4061aa:	dec    ebp
  4061ab:	lock popa 
  4061ad:	or     DWORD PTR [edi+0x17],esi
  4061b0:	mov    ecx,0x36758b6d
  4061b5:	xchg   BYTE PTR [ebp+0x8],bh
  4061b8:	jno    0x406206
  4061ba:	lock jecxz 0x4061b5
  4061bd:	outs   dx,BYTE PTR ds:[esi]
  4061be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061bf:	mov    esi,DWORD PTR [edi+0x7a75fefd]
  4061c5:	mov    al,BYTE PTR [eax]
  4061c7:	inc    DWORD PTR [eax]
	...
  4061d5:	add    BYTE PTR [eax],al
  4061d7:	push   edi
  4061d8:	xchg   al,ch
  4061da:	aaa    
  4061db:	xor    DWORD PTR [ecx],eax
  4061dd:	add    BYTE PTR [ebx+0x5b5dda79],cl
  4061e3:	cmp    DWORD PTR [edi-0x7988fff4],0xffffffec
  4061ea:	add    DWORD PTR [esi],0x6e
  4061ed:	push   ebx
  4061ee:	push   esi
  4061ef:	gs jmp 0x18b9105
  4061f5:	call   0x425393
  4061fa:	mov    eax,edx
  4061fc:	ret    0xfc45
  4061ff:	jp     0x406202
  406201:	add    BYTE PTR [eax],al
  406203:	add    ecx,0x7c523e74
  406209:	cs inc ecx
  40620b:	jp     0x4061db
  40620d:	out    0x45,eax
  40620f:	arpl   WORD PTR [ebx+0x3],ax
  406212:	add    BYTE PTR [eax+0x5e],ch
  406215:	comiss xmm5,xmm0
  406218:	push   cs
  406219:	sub    ebx,DWORD PTR [esi]
  40621b:	jl     0x4061fa
  40621d:	add    edx,DWORD PTR [ebx+0x3b]
  406220:	push   ebx
  406221:	outs   dx,BYTE PTR ds:[esi]
  406222:	add    BYTE PTR [ebx-0x59],ah
  406225:	ret    
  406226:	je     0x40627d
  406228:	pop    ss
  406229:	fwait
  40622a:	lea    esp,[esi+0x66e83332]
  406230:	xchg   DWORD PTR [ebx],eax
  406232:	add    BYTE PTR [ebx-0x697c4dbd],dh
  406238:	dec    edx
  406239:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  406249:	add    BYTE PTR [ecx-0x7a],bl
  40624c:	add    al,0x0
  40624e:	arpl   WORD PTR [esi-0x1a67a1c6],bx
  406254:	lds    edi,FWORD PTR [eax+0x39e63]
  40625a:	mov    WORD PTR [esi+edi*1-0x37],ss
  40625e:	and    BYTE PTR [edx-0x72],dl
  406261:	in     al,dx
  406262:	loopne 0x40624e
  406264:	xchg   edx,eax
  406265:	adc    DWORD PTR [esi+0x6340e90d],0xffffff9e
  40626c:	movhlps xmm4,xmm0
  40626f:	pop    ecx
  406270:	adc    BYTE PTR [esi],ch
  406272:	and    bl,BYTE PTR [esi+0x1f6a7403]
  406278:	xlat   BYTE PTR ds:[ebx]
  406279:	js     0x4062f8
  40627b:	fld    QWORD PTR [ebx]
  40627d:	add    BYTE PTR [esi],ch
  40627f:	mov    ds:0x9e63015b,eax
  406284:	add    ecx,ecx
  406286:	mov    al,ds:0xa5fa3f19
  40628b:	sahf   
  40628c:	add    eax,esi
  40628e:	and    ebx,DWORD PTR [ebp-0x5fdc39fd]
  406294:	add    eax,esi
  406296:	and    eax,DWORD PTR ds:0x45a503ea
  40629c:	in     eax,0x3
  40629e:	popf   
  40629f:	inc    ebp
  4062a0:	in     al,dx
  4062a1:	(bad)  
  4062a2:	out    dx,eax
  4062a3:	dec    ecx
  4062a4:	xchg   ebp,eax
  4062a5:	xor    al,0xc9
  4062a7:	add    eax,0x5b90413
  4062ac:	adc    eax,DWORD PTR [eax+eax*1]
	...
  4062bb:	add    BYTE PTR [eax],al
  4062bd:	mov    ecx,0xcb040305
  4062c2:	in     eax,0xea
  4062c4:	add    esp,DWORD PTR [ebx+0x1f]
  4062c7:	or     DWORD PTR [esi],ebp
  4062c9:	popa   
  4062ca:	and    BYTE PTR [ebp+ebx*4+0x12fc9493],0x4d
  4062d2:	inc    esi
  4062d3:	jmp    0xeb5a85e4
  4062d8:	retf   0xcc20
  4062db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062dc:	xchg   ebx,eax
  4062dd:	arpl   WORD PTR ds:0x49ee03e9,ax
  4062e3:	cmp    DWORD PTR [esp+esi*8],esi
  4062e6:	sbb    DWORD PTR ds:0xf494632e,ebx
  4062ec:	push   cs
  4062ed:	xor    eax,0xa30ce946
  4062f2:	sbb    esi,esp
  4062f4:	rcr    BYTE PTR [esi],0x95
  4062f7:	jmp    0xfe45c5ff
  4062fc:	push   cs
  4062fd:	iret   
  4062fe:	xchg   ebx,eax
  4062ff:	fcomp  QWORD PTR [edx]
  406301:	lea    eax,[esi-0x17]
  406304:	mov    WORD PTR [esi],ds
  406306:	xchg   ebp,eax
  406307:	mov    al,0xc4
  406309:	push   ss
  40630a:	or     ch,0x84
  40630d:	lahf   
  40630e:	jl     0x406374
  406310:	ds jmp 0x406347
  406313:	inc    ecx
  406314:	mov    edi,0xabe94645
  406319:	and    ch,BYTE PTR [ebx+0x3398be]
  40631f:	add    BYTE PTR [ecx+0x0],ch
	...
  40632d:	add    BYTE PTR [eax],al
  40632f:	add    BYTE PTR [ebx+ecx*1-0x7d],ch
  406333:	sub    al,0xe7
  406335:	clc    
  406336:	jbe    0x40634a
  406338:	in     al,0x49
  40633a:	lock cmp DWORD PTR [edi+0x60e9aaf2],esi
  406341:	mov    al,al
  406343:	adc    DWORD PTR [ecx-0x15d349fe],ebx
  406349:	xor    eax,0x9385370f
  40634e:	push   eax
  40634f:	out    0x92,al
  406351:	dec    eax
  406352:	std    
  406353:	sbb    DWORD PTR [edx+0x5b],ebp
  406356:	inc    ebp
  406357:	gs jo  0x40635c
  40635a:	mov    dh,0xa4
  40635c:	(bad)  
  40635d:	xor    eax,0x8f5d9f0f
  406362:	push   eax
  406363:	fidiv  WORD PTR [edx+0x5b99f948]
  406369:	pop    ebx
  40636a:	inc    ebp
  40636b:	inc    ecx
  40636c:	push   eax
  40636d:	add    dh,BYTE PTR [edi+0xf35d2ac]
  406373:	jbe    0x4063aa
  406375:	cdq    
  406376:	push   eax
  406377:	es pop ebp
  406379:	xchg   ebp,eax
  40637a:	push   0x45fa33
  40637f:	fs popf 
  406381:	adc    DWORD PTR [eax+0x1],0xe900600b
  406388:	out    0xc9,eax
  40638a:	xor    al,0x6c
  40638c:	test   DWORD PTR [ecx+0x5c3b0150],eax
  406392:	add    cl,ch
	...
  4063a0:	add    BYTE PTR [eax],al
  4063a2:	add    BYTE PTR [eax-0x80],dh
  4063a5:	inc    ebp
  4063a6:	jne    0x40641f
  4063a8:	sbb    eax,0x51e0fc5
  4063ad:	call   0xffd3274a
  4063b2:	rcl    DWORD PTR [ebp*4-0x3f5aff01],0xc3
  4063ba:	push   ebp
  4063bb:	adc    DWORD PTR [ebp-0x7f],ebx
  4063be:	les    esp,FWORD PTR [esi+0x7a]
  4063c1:	(bad)  
  4063c2:	call   FWORD PTR [ecx-0x1e]
  4063c5:	imul   eax,DWORD PTR [eax],0x75ff0950
  4063cb:	jb     0x40642b
  4063cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063ce:	aad    0xf5
  4063d0:	jns    0x40635b
  4063d2:	inc    ebp
  4063d3:	out    0xe0,al
  4063d5:	add    BYTE PTR [eax],al
  4063d7:	cmc    
  4063d8:	cmp    bh,bh
  4063da:	jne    0x40642e
  4063dc:	pop    esi
  4063dd:	out    0xd4,eax
  4063df:	mov    ch,0x7a
  4063e1:	push   0x64a9c
  4063e6:	lea    edi,[edi-0x7a000117]
  4063ec:	(bad)  
  4063ee:	jnp    0x406442
  4063f0:	jp     0x4063f1
  4063f2:	(bad)  
  4063f3:	jg     0x4063de
  4063f5:	(bad)  
  4063f6:	jmp    DWORD PTR [ebp-0x5fffff3]
  4063fc:	jl     0x406383
  4063fe:	pusha  
  4063ff:	xor    eax,0xa250ff7a
  406404:	pop    eax
  406405:	test   eax,0x0
	...
  406416:	cli    
  406417:	sahf   
  406418:	enter  0x282b,0x7c
  40641c:	mov    ebp,0xff7a7574
  406421:	jmp    0x4063fc
  406423:	test   DWORD PTR [edi],edi
  406425:	add    BYTE PTR [edi+0x5],cl
  406428:	mov    edx,0x5ba01
  40642d:	or     ebx,DWORD PTR [eax-0xb]
  406430:	add    al,dh
  406432:	mov    ebp,0x3b414705
  406437:	jno    0x4063b9
  406439:	add    BYTE PTR [edx+0x63e57205],bh
  40643f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406440:	ret    
  406441:	je     0x4064b0
  406443:	inc    esp
  406444:	js     0x406446
  406446:	arpl   WORD PTR [eax+ecx*4-0x69acfc7b],bx
  40644d:	call   DWORD PTR [ebx]
  40644f:	pop    ebx
  406450:	adc    BYTE PTR [eax],cl
  406452:	mov    ebx,DWORD PTR [edx]
  406454:	scas   eax,DWORD PTR es:[edi]
  406455:	jmp    FWORD PTR [esi+esi*2+0x7]
  406459:	push   0x63
  40645b:	test   BYTE PTR [ebx],0xff
  40645e:	(bad)  
  40645f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406460:	stos   DWORD PTR es:[edi],eax
  406461:	test   eax,0xe896802f
  406466:	push   ds
  406467:	mov    dl,BYTE PTR [esi+0x100fb3ff]
  40646d:	or     BYTE PTR [ebx+0x2],cl
  406470:	mov    al,0xff
  406472:	xor    al,0x7
  406474:	add    al,0x4
  406476:	arpl   WORD PTR [esi+0xe9ab],bx
	...
  406488:	add    BYTE PTR [eax+esi*1],cl
  40648b:	xchg   esi,eax
  40648c:	mov    esi,esp
  40648e:	pop    edx
  40648f:	xchg   esi,eax
  406490:	call   DWORD PTR [edi+eax*8]
  406493:	xchg   esi,eax
  406494:	add    esp,DWORD PTR [ebx-0x62]
  406497:	xchg   esi,eax
  406498:	mov    ch,0xa7
  40649a:	iret   
  40649b:	xchg   ebp,eax
  40649c:	dec    DWORD PTR [ebx-0xb000c64]
  4064a2:	mov    BYTE PTR [ebx],0x4
  4064a5:	arpl   WORD PTR [esi-0x6145ad55],bx
  4064ab:	add    edx,DWORD PTR [eax-0x24]
  4064ae:	xor    DWORD PTR [edi],esi
  4064b0:	call   esp
  4064b2:	call   DWORD PTR [ebp+0x20f65b75]
  4064b8:	aam    0xc4
  4064ba:	(bad)  
  4064be:	sahf   
  4064bf:	add    edi,edi
  4064c1:	out    dx,al
  4064c2:	adc    BYTE PTR [esi+0x5105acff],0x3
  4064c9:	push   ebx
  4064ca:	add    eax,0x9632be9
  4064cf:	jmp    0x801eefd7
  4064d4:	add    al,0x63
  4064d6:	xor    eax,0x90274fc6
  4064db:	mov    esi,0xe11a7c95
  4064e0:	stos   DWORD PTR es:[edi],eax
  4064e1:	cmp    bh,BYTE PTR [ecx-0x35846a52]
  4064e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064e8:	xchg   ebp,eax
  4064e9:	fs xor eax,0xf9e
	...
  4064fb:	add    BYTE PTR [ebx-0x63],ch
  4064fe:	pushf  
  4064ff:	mov    cl,0x54
  406501:	nop
  406502:	xor    DWORD PTR [ebx],0x8786904d
  406508:	fisubr WORD PTR [esi+edi*2]
  40650b:	xchg   ebp,eax
  40650c:	cmp    al,0x35
  40650e:	add    DWORD PTR [edi-0x5416b97b],edi
  406514:	(bad)  
  406515:	test   al,0x66
  406517:	xchg   ebp,eax
  406518:	fimul  DWORD PTR [ecx-0x6fe36b4b]
  40651e:	push   0x57
  406520:	scas   eax,DWORD PTR es:[edi]
  406521:	nop
  406522:	dec    esi
  406523:	xchg   ebp,eax
  406524:	arpl   WORD PTR [ecx],bx
  406526:	lods   al,BYTE PTR ds:[esi]
  406527:	add    dh,0x2c
  40652a:	ds xchg ebp,eax
  40652c:	cld    
  40652d:	clc    
  40652e:	mov    edx,0x9189e1d7
  406533:	xchg   esp,eax
  406534:	in     al,dx
  406535:	(bad)  
  406536:	in     eax,dx
  406537:	xchg   esp,eax
  406538:	scas   al,BYTE PTR es:[edi]
  406539:	sub    al,0x1e
  40653b:	xchg   ebp,eax
  40653c:	fmul   QWORD PTR [edi+0x52cb0b9c]
  406542:	cmp    dl,BYTE PTR [ebp+0x3c5483cc]
  406548:	les    ecx,FWORD PTR [edi-0x6fb50002]
  40654e:	add    dh,dh
  406550:	gs std 
  406552:	out    0x48,eax
  406554:	repnz (bad) 
  406556:	jmp    esi
  406558:	adc    eax,0xf7deff2d
  40655d:	(bad)  
  40655e:	mov    ch,0x3d
	...
  40656c:	add    BYTE PTR [eax],al
  40656e:	add    dh,ch
  406570:	(bad)  
  406571:	dec    esi
  406573:	pop    ebp
  406574:	std    
  406575:	out    0x8b,eax
  406577:	ror    DWORD PTR [edi+0x1b64d2ff],cl
  40657d:	add    BYTE PTR [ebx+0x5f],al
  406580:	nop
  406581:	jne    0x406564
  406583:	mov    eax,0xcfa6d359
  406588:	(bad)  
  406589:	mov    ch,0x35
  40658b:	test   BYTE PTR [esi-0x47f47e01],0xff
  406592:	mov    ?,edi
  406594:	pop    eax
  406595:	pop    esp
  406596:	xchg   bh,ch
  406598:	mov    gs,eax
  40659a:	mov    DWORD PTR [esi],ecx
  40659c:	(bad)  
  40659d:	inc    edx
  40659f:	sti    
  4065a0:	sbb    eax,0x5a1be11
  4065a5:	call   0x461e7b
  4065aa:	jo     0x406549
  4065ac:	loope  0x4065ac
  4065ae:	push   esi
  4065af:	out    dx,eax
  4065b0:	cmp    BYTE PTR [ebp-0x710803],0xe9
  4065b7:	push   esp
  4065b8:	out    dx,eax
  4065b9:	addr16 cmp al,0x6
  4065bc:	inc    esi
  4065bd:	add    BYTE PTR [esi],dh
  4065bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065c0:	loope  0x4065c0
  4065c2:	xlat   BYTE PTR cs:[ebx]
  4065c4:	popf   
  4065c5:	or     eax,0xb056051
  4065ca:	sub    DWORD PTR [ebx+edi*8-0x74],ebp
  4065ce:	jl     0x406580
  4065d0:	(bad)  
  4065d1:	dec    DWORD PTR [esi]
	...
  4065df:	add    BYTE PTR [eax],al
  4065e1:	add    BYTE PTR [edx-0x6ff2f72],dl
  4065e7:	std    
  4065e8:	fidiv  DWORD PTR [ebp-0x32]
  4065eb:	xchg   DWORD PTR [ebp-0x8d52d0],eax
  4065f1:	push   eax
  4065f2:	bound  esi,QWORD PTR [edi-0xf45ff59]
  4065f8:	and    ecx,DWORD PTR [ebp-0x146f9]
  4065fe:	lods   eax,DWORD PTR ds:[esi]
  4065ff:	fsin   
  406601:	jne    0x406585
  406603:	push   0x45
  406605:	rcr    DWORD PTR [ebp-0x418a008e],cl
  40660b:	jb     0x406682
  40660d:	or     BYTE PTR [edx-0x42002c80],ah
  406613:	rcr    BYTE PTR [edx-0x37],cl
  406616:	mov    eax,0xd154fffd
  40661b:	gs add esp,0xffff69e2
  406622:	scas   eax,DWORD PTR es:[edi]
  406623:	cmp    al,0xfc
  406625:	push   eax
  406626:	fucomp st(3)
  406628:	or     edi,edi
  40662a:	test   DWORD PTR [edx],0x6a4a4129
  406630:	mov    edx,0xb023aa8
  406635:	shr    BYTE PTR ds:0xa00e77d,0x2
  40663c:	mov    DWORD PTR [ebp-0x4e],0xfa000009
  406643:	mov    edx,0xf445
	...
  406654:	add    BYTE PTR [ebp+0x10fffffa],bl
  40665a:	add    ch,BYTE PTR [edx+0x0]
  40665d:	jg     0x4066db
  40665f:	in     al,dx
  406660:	idiv   DWORD PTR ds:0xfa6a5072
  406666:	test   BYTE PTR [ebp-0xc],al
  406669:	sbb    al,BYTE PTR [ebp-0x109c0b7b]
  40666f:	xchg   edx,eax
  406670:	push   DWORD PTR [ebx]
  406672:	call   FWORD PTR [eax]
  406674:	clc    
  406675:	les    edx,FWORD PTR [eax]
  406677:	(bad)
  40667b:	add    al,0x0
  40667d:	push   0xba0517dc
  406682:	dec    eax
  406683:	add    al,0x0
  406685:	arpl   WORD PTR [ebx],bx
  406687:	push   eax
  406688:	in     al,dx
  406689:	xchg   esp,eax
  40668a:	scas   al,BYTE PTR es:[edi]
  40668b:	xchg   edx,eax
  40668c:	add    DWORD PTR [edi],ecx
  40668e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40668f:	xchg   BYTE PTR [ebp-0x6d4981],bh
  406695:	pop    esp
  406696:	ror    BYTE PTR [eax],1
  406698:	jmp    DWORD PTR [esi]
  40669a:	les    ebx,FWORD PTR [esi-0x1d8ff44a]
  4066a0:	inc    eax
  4066a1:	arpl   WORD PTR [ecx],si
  4066a3:	mov    ah,dh
  4066a5:	ins    BYTE PTR es:[edi],dx
  4066a6:	xchg   dx,ax
  4066a8:	push   eax
  4066a9:	dec    ebx
  4066aa:	sbb    ebx,DWORD PTR [ebx+0x0]
  4066ad:	arpl   WORD PTR [edi+0x29d274c3],sp
  4066b3:	mov    al,ch
  4066b5:	dec    esp
  4066b6:	test   BYTE PTR [edx+0x50],dl
	...
  4066c8:	out    dx,al
  4066c9:	and    DWORD PTR [edi+0x331434f7],edx
  4066cf:	push   DWORD PTR [esi+0x543592aa]
  4066d5:	cmc    
  4066d6:	inc    esp
  4066d7:	add    BYTE PTR [ebx],cl
  4066d9:	aaa    
  4066da:	stos   DWORD PTR es:[edi],eax
  4066db:	call   DWORD PTR [eax+ebp*4]
  4066de:	ret    
  4066df:	je     0x406693
  4066e1:	and    eax,0x440cf088
  4066e6:	xchg   edx,eax
  4066e7:	push   0xbea29e62
  4066ec:	hlt    
  4066ed:	dec    ecx
  4066ee:	sti    
  4066ef:	out    0xa1,eax
  4066f1:	lock xchg ecx,eax
  4066f3:	jmp    eax
  4066f5:	add    eax,0x8cd49f64
  4066fa:	push   ds
  4066fb:	add    al,0x4e
  4066fd:	stc    
  4066fe:	add    BYTE PTR [ebx],0xcc
  406701:	adc    ah,cl
  406703:	fwait
  406704:	je     0x4066bd
  406706:	push   es
  406707:	xchg   edx,eax
  406708:	enter  0x92ff,0x4
  40670c:	mov    ah,0x12
  40670e:	loope  0x4066ab
  406710:	xor    BYTE PTR [edi+0x52a491ee],0xd1
  406717:	cdq    
  406718:	pushf  
  406719:	mov    esi,ds
  40671b:	push   edi
  40671c:	xchg   ebx,eax
  40671d:	xchg   esp,eax
  40671e:	(bad)  
  40671f:	xchg   ecx,eax
  406720:	mov    WORD PTR [edx],ss
  406722:	loope  0x4066bf
  406724:	push   ds
  406725:	mov    bh,0xc6
  406727:	xchg   ecx,eax
  406728:	jl     0x40677c
  40672a:	mov    ecx,0x99
	...
  40673b:	je     0x4066c9
  40673d:	ror    DWORD PTR ds:0x91ae8c96,0x1e
  406744:	lea    edx,[eax-0x6173a224]
  40674a:	xchg   ecx,eax
  40674b:	into   
  40674c:	mov    DWORD PTR [ecx-0x16fafb39],eax
  406752:	mov    edx,0x36e8fd21
  406757:	call   0x4008cff4
  40675c:	xchg   esp,eax
  40675d:	jbe    0x4066f0
  40675f:	fiadd  WORD PTR [ecx+0x6d]
  406762:	xor    al,0x24
  406764:	adc    dh,ch
  406766:	nop
  406767:	push   esi
  406768:	cld    
  406769:	cmovae esp,DWORD PTR [ebx-0x63]
  40676d:	test   DWORD PTR [ecx+0x63],ebp
  406770:	add    eax,0x8254c3e2
  406775:	call   0xfb47:0x26056302
  40677c:	add    al,0x0
  40677e:	jmp    0xa5076ce3
  406783:	int3   
  406784:	mov    eax,DWORD PTR [edi]
  406786:	jmp    0x934086eb
  40678b:	pusha  
  40678c:	pop    ds
  40678d:	add    BYTE PTR [ebx+0x15457a60],al
  406793:	(bad)  
  406794:	jp     0x40671b
  406796:	std    
  406797:	fisttp DWORD PTR [ebx+0x11d399ff]
  40679d:	clc    
  40679e:	test   BYTE PTR [eax],0x0
	...
  4067ad:	add    BYTE PTR [ebp-0x77],dl
  4067b0:	call   0x45a324
  4067b5:	repnz mov al,ds:0x9ad00510
  4067bb:	add    al,0x0
  4067bd:	jmp    0x2868ed2a
  4067c2:	pop    edi
  4067c3:	mov    WORD PTR [ebp-0xb],?
  4067c6:	fsub   DWORD PTR [ebp-0x28]
  4067c9:	mov    esi,0x998b34d3
  4067ce:	in     eax,dx
  4067cf:	xor    esp,0x508bd3b6
  4067d5:	cmp    edi,edi
  4067d7:	je     0x4067b1
  4067d9:	sahf   
  4067da:	repz jl 0x406762
  4067dd:	cdq    
  4067de:	jmp    0x40676a
  4067e0:	inc    DWORD PTR [ecx-0x79004e05]
  4067e6:	pop    esi
  4067e7:	add    eax,0x46433c68
  4067ec:	add    BYTE PTR [esi-0x6b],dh
  4067ef:	xchg   ebp,eax
  4067f0:	imul   DWORD PTR [esi-0x2d]
  4067f3:	mov    dh,BYTE PTR ds:0x4639f6
  4067f9:	push   ecx
  4067fa:	retf   
  4067fb:	mov    dl,0xff
  4067fd:	push   esi
  4067fe:	mov    DWORD PTR [eax-0x750ca91c],eax
  406804:	push   0x0
  406806:	or     ch,bh
  406808:	lds    ebp,FWORD PTR [edi]
  40680a:	retf   
  40680b:	push   es
  40680c:	push   DWORD PTR [ebp-0x92d6]
	...
  40681e:	add    BYTE PTR [eax],al
  406820:	add    BYTE PTR ds:0xb290eb3,dh
  406826:	pop    es
  406827:	call   0xffb5f5f5
  40682c:	mov    DWORD PTR [edi],edi
  40682e:	push   0xfffffff7
  406830:	call   DWORD PTR [ebp-0x18]
  406833:	jmp    DWORD PTR [edi+0x75]
  406836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406837:	inc    eax
  406838:	add    BYTE PTR [ebp-0x4a080fd0],dh
  40683e:	jp     0x40683f
  406840:	xor    eax,0x40af85
  406845:	mov    dl,0x2e
  406847:	xlat   BYTE PTR ds:[ebx]
  406848:	push   DWORD PTR [ebp-0x52177af8]
  40684e:	jp     0x40684f
  406850:	adc    edi,0x5d
  406853:	idiv   edi
  406855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406856:	add    DWORD PTR [ecx+ecx*2+0x9],esi
  40685a:	xor    al,0xec
  40685c:	div    DWORD PTR [ebp+0x3a74007a]
  406862:	xchg   BYTE PTR [ebp-0x860218],bh
  406868:	add    BYTE PTR [esi-0x4e],ch
  40686b:	add    BYTE PTR [bp+si],bh
  40686e:	imul   edi,DWORD PTR [esi-0x18769001],0xffffffee
  406875:	fidivr DWORD PTR [ecx-0x1]
  406878:	jmp    FWORD PTR [edi+0x65]
  40687b:	idiv   edi
  40687d:	mov    ch,0x7a
  40687f:	jne    0x406889
  406881:	loop   0x4068c9
  406883:	sar    edi,1
	...
  406891:	add    BYTE PTR [eax],al
  406893:	add    BYTE PTR [ebp-0x52174a86],al
  406899:	jp     0x40689a
  40689b:	jmp    DWORD PTR [ebx-0x57]
  40689e:	sti    
  40689f:	out    0x4f,eax
  4068a1:	int    0x8e
  4068a3:	(bad)  
  4068a4:	cld    
  4068a5:	or     BYTE PTR [eax-0x71350b09],ch
  4068ab:	jne    0x406908
  4068ad:	inc    esp
  4068ae:	out    0xd0,al
  4068b0:	in     al,0xda
  4068b2:	mov    ?,WORD PTR [ebp-0x711539]
  4068b8:	retf   
  4068b9:	stos   DWORD PTR es:[edi],eax
  4068ba:	mov    bh,0xff
  4068bc:	int3   
  4068bd:	repnz pop eax
  4068bf:	in     al,dx
  4068c0:	int3   
  4068c1:	cli    
  4068c2:	mov    gs,eax
  4068c4:	xchg   al,ch
  4068c6:	mov    ?,edi
  4068c8:	mov    ah,0xd0
  4068ca:	fwait
  4068cb:	imul   DWORD PTR [edx+edx*4-0x6570e565]
  4068d2:	mov    ?,edi
  4068d4:	(bad)  
  4068d5:	stos   DWORD PTR es:[edi],eax
  4068d6:	xchg   esi,eax
  4068d7:	call   DWORD PTR [edx+ebp*4+0x787b0818]
  4068de:	(bad)  
  4068df:	inc    DWORD PTR [edx+edi*4-0x3d8b0fa8]
  4068e6:	mov    gs,eax
  4068e8:	bound  esi,QWORD PTR [eax-0x72]
  4068eb:	jmp    FWORD PTR [eax+ebx*8-0x75]
  4068ef:	jmp    0xffcec29b
  4068f4:	pop    esp
  4068f5:	jmp    0x0:0xe88f
	...
  406904:	add    BYTE PTR [eax],al
  406906:	add    BYTE PTR [eax+0x1a000340],ch
  40690c:	pop    ebp
  40690d:	sti    
  40690e:	jmp    FWORD PTR [edi+0x27839f23]
  406914:	sbb    DWORD PTR [ecx],0x0
  406917:	leave  
  406918:	popf   
  406919:	mov    ?,WORD PTR [ebp+0x5b]
  40691c:	xchg   dl,dh
  40691e:	shl    BYTE PTR [eax+ebx*1],1
  406921:	jl     0x406968
  406923:	pop    ds
  406924:	push   es
  406925:	shl    eax,1
  406927:	inc    ebp
  406928:	inc    esi
  406929:	jmp    0x413dffbc
  40692e:	daa    
  40692f:	add    eax,0xaf1b4e89
  406934:	fsub   DWORD PTR [edi-0xeed0bfd]
  40693a:	fwait
  40693b:	xchg   esp,eax
  40693c:	xchg   DWORD PTR [esi],esi
  40693e:	mov    ?,WORD PTR [ebx+0x19]
  406941:	inc    BYTE PTR [ebx+eiz*2-0x78]
  406945:	pushf  
  406946:	sti    
  406947:	mov    esp,0xcc8e1bc9
  40694c:	sbb    eax,0x523de7d
  406951:	push   cs
  406952:	sbb    BYTE PTR [ebx-0x63],ch
  406955:	(bad)  
  406956:	nop
  406957:	mov    ah,0x88
  406959:	(bad)  
  40695a:	pop    ss
  40695b:	scas   eax,DWORD PTR es:[edi]
  40695c:	mov    BYTE PTR [ebx+edi*8-0x44],bh
  406960:	lock pop ss
  406962:	mov    ds,WORD PTR [esi+edi*4+0x326308ab]
  406969:	jb     0x40690b
	...
  406977:	add    BYTE PTR [eax],al
  406979:	add    bl,bh
  40697b:	add    al,0xe9
  40697d:	pushf  
  40697e:	lds    ecx,FWORD PTR [eax+0x127c0054]
  406984:	icebp  
  406985:	fwait
  406986:	pop    es
  406987:	xchg   edx,eax
  406988:	mov    esi,0xe1c39a8d
  40698d:	add    ecx,DWORD PTR [esi]
  40698f:	jl     0x40694e
  406991:	sbb    esi,0xe0fce8f9
  406997:	loop   0x406980
  406999:	add    esp,DWORD PTR [ebx-0x78]
  40699c:	sbb    al,0x0
  40699e:	cmp    ebp,DWORD PTR [ebx]
  4069a0:	scas   eax,DWORD PTR es:[edi]
  4069a1:	lea    edi,[esp+edi*8]
  4069a4:	test   al,0x17
  4069a6:	push   ebx
  4069a7:	sbb    eax,0x5a3dc69
  4069ac:	add    BYTE PTR [esi+0x4c],dh
  4069af:	stc    
  4069b0:	out    0x22,eax
  4069b2:	(bad)  
  4069b3:	xchg   edi,edi
  4069b5:	jo     0x406953
  4069b7:	stc    
  4069b8:	imul   ebp,ecx,0xa82f8e68
  4069be:	pusha  
  4069bf:	sbb    eax,0x5a01904
  4069c4:	(bad)  
  4069c5:	cld    
  4069c6:	neg    esp
  4069c8:	inc    eax
  4069c9:	jmp    0x37169896
  4069ce:	(bad)  
  4069cf:	sti    
  4069d0:	mov    edi,0x5037ceb5
  4069d5:	es ins BYTE PTR es:[edi],dx
  4069d7:	stc    
  4069d8:	out    0x2e,eax
  4069da:	adc    eax,0xb9ff88
	...
  4069eb:	add    BYTE PTR [eax],al
  4069ed:	nop
  4069ee:	mov    BYTE PTR [ebp-0x1f],dh
  4069f1:	fdiv   DWORD PTR [ebp-0x1]
  4069f4:	push   es
  4069f5:	out    0x9c,al
  4069f7:	and    DWORD PTR [edx],ebx
  4069f9:	fiadd  WORD PTR [edi-0x780c2a18]
  4069ff:	inc    DWORD PTR [ebx+0x16f91d60]
  406a05:	and    BYTE PTR ds:0x44b0e568,al
  406a0b:	add    BYTE PTR [ecx+0x61],al
  406a0e:	add    eax,0xe6d86900
  406a13:	aad    0xc6
  406a15:	out    0xfb,eax
  406a17:	mov    edi,0x50377d35
  406a1c:	mov    dh,0x4d
  406a1e:	stc    
  406a1f:	out    0x56,eax
  406a21:	push   ss
  406a22:	xchg   edi,edi
  406a24:	cmp    DWORD PTR [edi-0x170e8a7a],ecx
  406a2a:	sub    al,0xff
  406a2c:	xchg   esi,eax
  406a2d:	xlat   BYTE PTR ds:[ebx]
  406a2e:	popf   
  406a2f:	jmp    0xe8c759ef
  406a34:	add    dh,ah
  406a36:	push   esp
  406a37:	(bad)  
  406a38:	call   DWORD PTR [eax+0x1]
  406a3b:	push   0x441df9
  406a40:	push   0x40b325
  406a45:	jge    0x4069f6
  406a47:	push   cs
  406a48:	sub    DWORD PTR [ebx+0x47e5e802],edi
  406a4e:	jns    0x406a4f
  406a50:	or     eax,DWORD PTR [eax]
	...
  406a5e:	add    BYTE PTR [eax],al
  406a60:	dec    edx
  406a61:	out    dx,al
  406a62:	sbb    eax,0x7579da50
  406a67:	or     al,0x92
  406a69:	fcom   st(5)
  406a6b:	jmp    FWORD PTR ds:0x17ff4fd2
  406a71:	mov    esp,edi
  406a73:	and    BYTE PTR [ebp+0x79],bh
  406a76:	(bad)  
  406a77:	call   0x3fbea6
  406a7c:	bound  ebp,QWORD PTR ds:0xec6dffd2
  406a82:	jmp    DWORD PTR [edi+0x63]
  406a85:	test   eax,0xa1d20040
  406a8a:	das    
  406a8b:	inc    ecx
  406a8c:	mov    edx,0x8a0001ea
  406a91:	sub    al,0xad
  406a94:	xlat   BYTE PTR ds:[ebx]
  406a95:	jp     0x406a96
  406a97:	or     edi,DWORD PTR [edx+0x4a501df5]
  406a9d:	jp     0x406b14
  406a9f:	or     al,0xa2
  406aa1:	mov    ds:0xd19dffd5,eax
  406aa6:	dec    edi
  406aa7:	push   DWORD PTR [edi]
  406aa9:	mov    edi,esp
  406aab:	call   0xe93fe55c
  406ab0:	xchg   edx,eax
  406ab1:	dec    edi
  406ab2:	(bad)  
  406ab3:	push   edx
  406ab5:	in     eax,dx
  406ab6:	sar    edi,1
  406ab8:	in     eax,dx
  406ab9:	call   0xdda39a96
  406abe:	add    edi,edi
  406ac0:	mov    dh,0xa8
  406ac2:	fwait
  406ac3:	add    eax,0x0
	...
  406ad0:	add    BYTE PTR [eax],al
  406ad2:	add    BYTE PTR ds:0x93508b7f,cl
  406ad8:	pop    es
  406ad9:	adc    DWORD PTR [eax],ecx
  406adb:	cmp    edx,DWORD PTR [edi-0x76]
  406ade:	call   FWORD PTR [esp+eax*4]
  406ae1:	xor    edx,edx
  406ae3:	adc    al,0x1f
  406ae5:	mov    esi,DWORD PTR [ebp+0x5f]
  406ae8:	xor    al,0x3b
  406aea:	rol    BYTE PTR [edi+ebp*1],cl
  406aed:	mov    ebp,0x309c6bc2
  406af2:	mov    eax,DWORD PTR [edi]
  406af4:	sbb    eax,eax
  406af6:	hlt    
  406af7:	jns    0x406a95
  406af9:	sbb    eax,0xfb48e402
  406afe:	out    0x52,eax
  406b00:	out    0x8a,eax
  406b02:	(bad)  
  406b03:	jmp    0x39d:0x66688758
  406b0a:	add    BYTE PTR [ebx-0x43004aa6],bh
  406b10:	and    al,0x41
  406b12:	clc    
  406b13:	dec    ebx
  406b14:	cwde   
  406b15:	add    al,0x0
  406b17:	arpl   WORD PTR [edi-0x1c4407f0],ax
  406b1d:	data16 add BYTE PTR [ebx-0x5d],ah
  406b21:	ret    
  406b22:	je     0x406b93
  406b24:	loope  0x406b25
  406b26:	add    BYTE PTR [ebx-0x64],ah
  406b29:	adc    cl,BYTE PTR ds:0xff8c2884
  406b2f:	mul    BYTE PTR [ebx-0x418a7765]
  406b35:	mov    ch,bl
	...
  406b43:	add    BYTE PTR [eax],al
  406b45:	add    BYTE PTR [ebx+0x47],bl
  406b48:	adc    al,bh
  406b4a:	jnp    0x406b9b
  406b4c:	mov    ah,0xff
  406b4e:	pop    esp
  406b4f:	leave  
  406b50:	(bad)  
  406b52:	lahf   
  406b53:	add    eax,0xd64c8abf
  406b58:	popf   
  406b59:	adc    BYTE PTR [ebx+0x6d],bl
  406b5c:	pop    es
  406b5d:	mov    bh,BYTE PTR [eax*4+0x3a3cee03]
  406b64:	lahf   
  406b65:	mov    ch,BYTE PTR [ecx+edx*1]
  406b68:	test   eax,0x8bed4f0f
  406b6d:	fisub  DWORD PTR [ebx+0x2a9c1905]
  406b73:	pop    ebx
  406b74:	data16 mov dh,BYTE PTR [ebx-0x3042b7c]
  406b7b:	aam    0x56
  406b7d:	mov    bh,ah
  406b7f:	out    dx,eax
  406b80:	or     DWORD PTR [esi+ecx*2+0x588a465b],ebx
  406b87:	inc    ebp
  406b88:	mov    ch,0xef
  406b8a:	jl     0x406bf6
  406b8c:	push   es
  406b8d:	inc    ebp
  406b8e:	arpl   bp,dx
  406b90:	inc    eax
  406b91:	pop    ebp
  406b92:	scas   al,BYTE PTR es:[edi]
  406b93:	test   BYTE PTR [esi],ah
  406b95:	xor    ecx,esp
  406b97:	cli    
  406b98:	lock fwait
  406b9a:	xchg   ebx,eax
  406b9b:	adc    DWORD PTR [esi],0xffffff8a
  406b9e:	dec    ecx
  406b9f:	and    DWORD PTR [ecx],eax
  406ba1:	xchg   ecx,eax
  406ba2:	mov    es,WORD PTR [esi+eax*1-0x2b061302]
  406ba9:	sbb    eax,DWORD PTR [eax]
	...
  406bb7:	add    BYTE PTR [eax],al
  406bb9:	mov    esi,0x3303a834
  406bbe:	ins    DWORD PTR es:[edi],dx
  406bbf:	bound  esi,QWORD PTR [eax-0x76c67b6c]
  406bc5:	push   ss
  406bc6:	or     eax,0x8486f3d1
  406bcb:	(bad)  
  406bcc:	push   ds
  406bcd:	arpl   bp,bp
  406bcf:	mov    esi,0x510523d9
  406bd4:	add    BYTE PTR [ebx],dh
  406bd6:	(bad)  
  406bd7:	call   0x549a64
  406bdc:	add    BYTE PTR [eax+0x1359e805],ah
  406be2:	test   bh,bh
  406be4:	cmp    edx,ebx
  406be6:	stc    
  406be7:	pop    es
  406be8:	xchg   ecx,eax
  406be9:	lock cmp edi,0x68055d96
  406bf0:	nop
  406bf1:	sbb    al,ch
  406bf3:	call   DWORD PTR [eax]
  406bf5:	arpl   WORD PTR ds:0x39dbe941,si
  406bfb:	xadd   BYTE PTR [ecx-0x3b0617fb],ah
  406c02:	cmp    edi,0xfffffff2
  406c05:	and    cl,bh
  406c07:	adc    eax,0xff794470
  406c0c:	fsub   st(4),st
  406c0e:	xor    DWORD PTR [ebp-0x1f],0xffffffd8
  406c12:	mov    ch,0xfd
  406c14:	inc    esi
  406c15:	fiadd  DWORD PTR [ebx+0x42c73575]
  406c1b:	shl    DWORD PTR [esi],1
	...
  406c29:	add    BYTE PTR [eax],al
  406c2b:	add    dl,ch
  406c2d:	out    dx,al
  406c2e:	inc    eax
  406c30:	cli    
  406c31:	xor    eax,DWORD PTR [ecx-0x17]
  406c34:	push   0x60a8302c
  406c39:	test   BYTE PTR ds:0xffc499e6,dh
  406c3f:	add    BYTE PTR [edx+0x7706ff57],ch
  406c45:	test   BYTE PTR [ebp-0xf],dh
  406c48:	enter  0xfda4,0xf6
  406c4c:	jmp    0x406c3c
  406c4e:	inc    DWORD PTR [eax-0x16becc17]
  406c54:	push   0x5f28302c
  406c59:	test   BYTE PTR ds:0xffc499e6,dh
  406c5f:	ror    BYTE PTR [ebx-0x5aff00a9],0x80
  406c66:	mov    edi,0x44fe8c74
  406c6b:	hlt    
  406c6c:	adc    eax,0x8ffff414
  406c71:	and    edi,0xff8e0760
  406c77:	jmp    FWORD PTR [edi-0x6b]
  406c7a:	call   0xffce676c
  406c7f:	push   0x4a
  406c81:	pop    ds
  406c82:	out    dx,al
  406c83:	das    
  406c84:	jnp    0x406c8f
  406c86:	push   0xffc7ea04
  406c8b:	or     BYTE PTR [bx],al
  406c8e:	add    BYTE PTR [eax+0x0],al
	...
  406c9c:	add    BYTE PTR [eax],al
  406c9e:	add    dl,ah
  406ca0:	popf   
  406ca1:	sar    edi,cl
  406ca3:	test   DWORD PTR [esi],esi
  406ca5:	push   DWORD PTR [ebp+0x12]
  406ca8:	lahf   
  406ca9:	push   eax
  406caa:	std    
  406cab:	xchg   ebp,eax
  406cac:	lea    ebp,[edx+0x0]
  406caf:	and    dl,BYTE PTR [eax+0x1efa412f]
  406cb5:	add    al,0x30
  406cb7:	mov    ebx,0xca026806
  406cbc:	push   es
  406cbd:	sub    al,0x7a
  406cc0:	mov    ecx,0x46d1ffff
  406cc5:	je     0x406cdd
  406cc7:	push   ebx
  406cc8:	inc    ebx
  406cc9:	hlt    
  406cca:	(bad)  
  406ccb:	fist   WORD PTR [edx-0x613d8a01]
  406cd1:	adc    ebp,edi
  406cd3:	gs (bad) 
  406cd5:	push   DWORD PTR [ebp-0x52]
  406cd8:	lahf   
  406cd9:	sahf   
  406cda:	rcl    BYTE PTR [ebp-0x1dff9576],1
  406ce0:	pushf  
  406ce1:	das    
  406ce2:	inc    ecx
  406ce3:	jp     0x406d03
  406ce5:	daa    
  406ce6:	xor    BYTE PTR [ebx],bh
  406ce8:	or     DWORD PTR [eax+0x2],ebp
  406ceb:	arpl   WORD PTR [ebx+eax*1-0x80],bp
  406cef:	mov    ecx,DWORD PTR [ebx+esi*4-0x78e39301]
  406cf6:	jne    0x406d53
  406cf8:	push   esp
  406cf9:	add    eax,0x1abb5cfd
  406cfe:	add    bl,cl
  406d00:	mov    ch,0xd7
  406d02:	inc    eax
	...
  406d0f:	add    BYTE PTR [eax],al
  406d11:	add    BYTE PTR [ebx+0x14],ah
  406d14:	fild   QWORD PTR [edi]
  406d16:	mov    ds:0x63021b6c,al
  406d1b:	ins    BYTE PTR es:[edi],dx
  406d1c:	sub    eax,0xffffffe2
  406d1f:	mov    esi,0xac58ff87
  406d24:	adc    BYTE PTR [esi],dl
  406d26:	fisubr DWORD PTR [eax]
  406d28:	nop
  406d29:	call   DWORD PTR [esi+0x6b758700]
  406d2f:	test   dl,al
  406d31:	cld    
  406d32:	or     al,0xeb
  406d34:	xchg   BYTE PTR [ebp+0xf],dh
  406d37:	aam    0x36
  406d39:	sar    ah,1
  406d3b:	fiadd  DWORD PTR [esi+0x10d2f775]
  406d41:	or     bl,bh
  406d43:	sub    eax,0x34e4ffb9
  406d48:	ret    0x6304
  406d4b:	mov    eax,ds:0x6c4bec7a
  406d50:	add    ebp,edi
  406d52:	or     eax,0xc40c112b
  406d57:	cwde   
  406d58:	sti    
  406d59:	out    0x54,eax
  406d5b:	push   ds
  406d5c:	xchg   edi,edi
  406d5e:	stos   BYTE PTR es:[edi],al
  406d5f:	sub    eax,0xf717fffc
  406d64:	xchg   edi,eax
  406d65:	sbb    DWORD PTR [edi-0x630079c9],0x95b88132
  406d6f:	jb     0x406cf7
  406d71:	add    BYTE PTR [ebx+0x5],ah
  406d74:	jmp    0x406d7c
	...
  406d85:	fadd   st,st(7)
  406d87:	in     al,dx
  406d88:	cli    
  406d89:	mov    esp,0x3b83ebf8
  406d8e:	add    eax,0xdb7a0154
  406d93:	out    0x3,eax
  406d95:	arpl   WORD PTR [edx+0x7044f834],ax
  406d9b:	xchg   ebx,eax
  406d9c:	xchg   BYTE PTR [ebp+ecx*1-0x57],dl
  406da0:	adc    BYTE PTR [ebp+ebp*8+0x17],bl
  406da4:	fsub   DWORD PTR [ebx+0x6f109e05]
  406daa:	ins    DWORD PTR es:[edi],dx
  406dab:	bound  esi,QWORD PTR [edx-0x77d7ecc]
  406db1:	(bad)  
  406db2:	not    esp
  406db4:	inc    esp
  406db5:	arpl   WORD PTR [eax+0x204f7f4],ax
  406dbb:	call   0xd4b:0x648f1486
  406dc2:	and    DWORD PTR [esi+0x1b],0x3e90645
  406dc9:	out    dx,al
  406dca:	mov    ch,BYTE PTR [ebx]
  406dcc:	test   esp,esi
  406dce:	cmp    BYTE PTR [ecx+0x4650f79b],0x86
  406dd5:	(bad)  
  406dd6:	mov    ch,BYTE PTR [ebx]
  406dd8:	test   esp,ebx
  406dda:	sbb    BYTE PTR [ecx+0x2fbe0e86],0x86
  406de1:	int3   
  406de2:	ins    DWORD PTR es:[edi],dx
  406de3:	fldenv [ebx+eiz*2+0x5]
  406de7:	jo     0x406d69
	...
  406df5:	add    BYTE PTR [eax],al
  406df7:	add    bh,bh
  406df9:	jg     0x406e11
  406dfb:	xchg   BYTE PTR [ebx],ah
  406dfd:	adc    BYTE PTR [ebp-0x76],ah
  406e00:	arpl   WORD PTR ds:0x43ce78e9,ax
  406e06:	inc    DWORD PTR [ebp-0x14ff8764]
  406e0c:	nop
  406e0d:	cmp    bh,0xe9
  406e10:	pop    esp
  406e11:	jmp    0x4d67:0xd0ab2b8c
  406e18:	fwait
  406e19:	(bad)  
  406e1c:	ins    BYTE PTR es:[edi],dx
  406e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e1e:	add    cl,ch
  406e20:	imul   eax,eax,0x75
  406e23:	in     al,dx
  406e24:	leave  
  406e25:	mov    dh,0x0
  406e27:	jmp    0xabd6008c
  406e2c:	fnstsw WORD PTR [edi-0x1]
  406e2f:	pop    esp
  406e30:	mov    eax,ds:0x6d115031
  406e35:	xor    DWORD PTR [ecx-0x17],eax
  406e38:	fdiv   DWORD PTR [eax+eiz*4-0x17]
  406e3c:	pusha  
  406e3d:	or     al,0xc0
  406e3f:	adc    al,0x2c
  406e41:	ins    DWORD PTR es:[edi],dx
  406e42:	xchg   esp,eax
  406e43:	jmp    0x69a873a8
  406e48:	aas    
  406e49:	(bad)  
  406e4c:	fs adc eax,ebp
  406e4f:	jbe    0x406e22
  406e51:	jg     0x406e52
  406e53:	je     0x406ec9
  406e55:	inc    ebx
  406e56:	(bad)  
  406e57:	pop    esi
  406e58:	out    0x91,al
  406e5a:	push   edx
  406e5b:	add    eax,0x0
	...
  406e68:	add    BYTE PTR [eax],al
  406e6a:	add    BYTE PTR [ecx],dh
  406e6c:	aad    0xe7
  406e6e:	adc    dh,BYTE PTR [edx-0x20660081]
  406e74:	stc    
  406e75:	setns  bh
  406e78:	stc    
  406e79:	pop    es
  406e7a:	inc    ecx
  406e7b:	sar    DWORD PTR [esi-0x1],1
  406e7e:	cs out dx,eax
  406e80:	ss iret 
  406e82:	fisubr WORD PTR es:[ebx+0x63]
  406e86:	ins    BYTE PTR es:[edi],dx
  406e87:	and    DWORD PTR [ecx],esi
  406e89:	mov    DWORD PTR [ebx+edx*1+0x7f],ebp
  406e8d:	dec    DWORD PTR [esi]
  406e8f:	dec    edi
  406e90:	hlt    
  406e91:	das    
  406e92:	add    bl,bh
  406e94:	add    edi,edi
  406e96:	mov    ch,0x56
  406e98:	xchg   edi,edi
  406e9a:	jmp    DWORD PTR [edx-0x2e]
  406e9d:	mov    al,ds:0xbf7c7a00
  406ea2:	je     0x406ed8
  406ea4:	and    DWORD PTR [eax-0xf6b4d8],eax
  406eaa:	jne    0x406f2a
  406eac:	fwait
  406ead:	test   eax,0xff889dd2
  406eb2:	mov    ch,0xe6
  406eb4:	mov    edi,edi
  406eb6:	(bad)  
  406eb7:	jp     0x406e5a
  406eb9:	icebp  
  406eba:	ror    BYTE PTR ds:0xb950508a,cl
  406ec0:	pop    es
  406ec1:	adc    BYTE PTR [eax],al
  406ec3:	data16 jbe 0x406f2d
  406ec6:	push   edx
  406ec7:	sbb    al,ah
  406ec9:	dec    DWORD PTR [edi-0x1e]
  406ecc:	add    DWORD PTR [ecx+0x0],esp
	...
  406ede:	cmp    bl,BYTE PTR [esi+0x33bb805]
  406ee4:	add    BYTE PTR [eax],al
  406ee6:	inc    eax
  406ee7:	jl     0x406ea8
  406ee9:	je     0x406eee
  406eeb:	xor    eax,0x9b0275ff
  406ef0:	xchg   esi,eax
  406ef1:	(bad)  
  406ef2:	jge    0x406e7d
  406ef4:	call   0xffc9bbca
  406ef9:	lea    eax,[edi-0x620001bc]
  406eff:	xor    bh,bh
  406f01:	mov    ch,0xde
  406f03:	mov    bh,bh
  406f05:	push   DWORD PTR [edx]
  406f07:	inc    ecx
  406f08:	mov    al,ds:0xbfffca00
  406f0d:	cmova  esi,DWORD PTR [edx-0x2]
  406f11:	(bad)  
  406f12:	jge    0x406e9d
  406f14:	mov    ch,0xbc
  406f16:	pop    esp
  406f17:	mov    edi,edi
  406f19:	call   0xa3c181
  406f1e:	arpl   WORD PTR [edi],cx
  406f20:	dec    esi
  406f21:	mov    eax,0xe88407a5
  406f26:	ret    0x842e
  406f29:	jmp    FWORD PTR [edx+0x37fff72a]
  406f2f:	jecxz  0x406ec7
  406f31:	sbb    DWORD PTR [edi+0x7f454b68],0x6c
  406f38:	add    eax,DWORD PTR [eax]
  406f3a:	arpl   WORD PTR [edi-0x7],dx
  406f3d:	or     edi,DWORD PTR [ebx-0x49]
  406f40:	push   esi
  406f41:	inc    DWORD PTR [eax]
	...
  406f4f:	add    BYTE PTR [eax],al
  406f51:	fs jae 0x406f97
  406f54:	je     0x406fcf
  406f56:	cmc    
  406f57:	enter  0x54fb,0x41
  406f5b:	adc    al,0xff
  406f5d:	(bad)  
  406f5e:	mov    al,0x6c
  406f60:	adc    eax,0x5083a731
  406f65:	cmp    al,0x19
  406f67:	sub    al,0xc6
  406f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f6b:	cmp    edi,0xffffffdc
  406f6e:	sub    BYTE PTR [eax-0x6789d96],al
  406f74:	sti    
  406f75:	sbb    al,0x79
  406f77:	or     ebp,eax
  406f79:	dec    edi
  406f7a:	test   BYTE PTR [edx+0x7f790cff],0xe8
  406f81:	scas   al,BYTE PTR es:[edi]
  406f82:	ss cmp edi,0x2a
  406f86:	sub    dl,BYTE PTR [eax]
  406f88:	add    BYTE PTR [esi+0x27816fe3],cl
  406f8e:	fadd   QWORD PTR [ecx+0x351e4ff]
  406f94:	push   0x60
  406f96:	aas    
  406f97:	stc    
  406f98:	pop    es
  406f99:	retf   
  406f9a:	mov    edi,0xe4ccff4e
  406f9f:	enter  0x3bfb,0x5
  406fa3:	in     eax,dx
  406fa4:	add    al,0x63
  406fa6:	add    eax,0x7eac896c
  406fab:	push   ss
  406fac:	adc    DWORD PTR [ebx],0x6d
  406faf:	xor    eax,0xf20563a3
  406fb4:	inc    ebx
	...
  406fc1:	add    BYTE PTR [eax],al
  406fc3:	add    BYTE PTR [ecx+ecx*4+0x4a],ch
  406fc7:	add    al,0x63
  406fc9:	add    eax,0x56207b4
  406fce:	jmp    0xe9dd4be5
  406fd3:	add    esp,DWORD PTR [ebx-0x13]
  406fd6:	push   edx
  406fd7:	xor    al,0x22
  406fd9:	add    eax,0x7e748864
  406fde:	into   
  406fdf:	adc    BYTE PTR [ebx],0x6d
  406fe2:	mov    dl,BYTE PTR [esp+ebx*2+0x7d]
  406fe6:	jo     0x406f70
  406fe8:	push   ebx
  406fe9:	jl     0x406fa1
  406feb:	or     BYTE PTR [ebx+esi*4-0x47],0x81
  406ff0:	inc    esp
  406ff1:	jge    0x407004
  406ff3:	or     BYTE PTR [edx+0x5],ah
  406ff6:	jmp    0x97b54e8b
  406ffb:	sub    BYTE PTR [esi+edx*8],0x0
  406fff:	xchg   BYTE PTR [ebx-0x3a],bh
  407002:	call   0x28760df2
  407007:	add    al,0x8b
  407009:	std    
  40700a:	mov    eax,0x63650cc4
  40700f:	mov    ds:0x43f20563,al
  407014:	ja     0x40702c
  407016:	rol    DWORD PTR [ebx],cl
  407018:	out    0x82,al
  40701a:	pop    esi
  40701b:	sub    esp,0x6e82b97c
  407021:	or     eax,0x7cde9d51
  407026:	add    BYTE PTR ds:[eax],0x0
	...
  407036:	add    BYTE PTR [esi],cl
  407038:	jbe    0x40703a
  40703a:	aaa    
  40703b:	loope  0x4070b9
  40703d:	push   0x55fe5
  407042:	je     0x40702f
  407044:	je     0x407044
  407046:	push   ds
  407047:	loope  0x40701e
  407049:	imul   edi,DWORD PTR [bx+si-0x3a],0xffffffff
  40704e:	sbb    ch,0x35
  407051:	inc    ecx
  407052:	jmp    0xa87064df
  407057:	pusha  
  407058:	ins    DWORD PTR es:[edi],dx
  407059:	dec    edi
  40705a:	push   esi
  40705b:	pusha  
  40705c:	add    eax,0x158c290b
  407061:	push   0xffffffe9
  407063:	in     eax,dx
  407064:	xor    bh,0xdf
  407067:	loop   0x4070e5
  407069:	push   eax
  40706a:	(bad)  
  40706b:	je     0x407071
  40706d:	call   0xffbc54a0
  407072:	(bad)  
  407073:	adc    al,0x75
  407075:	(bad)  
  407076:	mov    esi,0xa47d6ce2
  40707b:	loop   0x4070f8
  40707d:	push   0x2
  40707f:	mov    bh,0x42
  407081:	shl    DWORD PTR [esi+0x15c00fe2],1
  407087:	sub    ebp,0x58
  40708a:	fldenv [ecx]
  40708c:	jl     0x4070dd
  40708e:	add    DWORD PTR ds:0x3786ff55,0xe218ffee
  407098:	icebp  
  407099:	pop    es
  40709a:	add    DWORD PTR [eax],0x0
	...
  4070a8:	add    BYTE PTR [eax],al
  4070aa:	push   ebp
  4070ab:	jp     0x4070ac
  4070ad:	outs   dx,BYTE PTR ds:[esi]
  4070ae:	ja     0x407083
  4070b0:	int3   
  4070b1:	data16 loop 0x4070a0
  4070b4:	inc    edi
  4070b5:	sbb    DWORD PTR [eax],esp
  4070b7:	jl     0x407122
  4070b9:	repz jecxz 0x4070ad
  4070bc:	pop    es
  4070bd:	inc    ecx
  4070be:	mov    ch,0x7a
  4070c0:	inc    DWORD PTR [eax]
  4070c2:	and    eax,0xb304769
  4070c7:	or     BYTE PTR [edx+0x23],ch
  4070ca:	xchg   ebp,eax
  4070cb:	je     0x4070d4
  4070cd:	call   0x3ff803
  4070d2:	ror    BYTE PTR [edi+0x2f],cl
  4070d5:	inc    ecx
  4070d6:	retf   0x1b69
  4070d9:	dec    edi
  4070db:	psubsb mm1,QWORD PTR [esp+edx*2+0x1fffff86]
  4070e3:	cld    
  4070e4:	(bad)  
  4070e5:	jne    0x407079
  4070e7:	out    dx,eax
  4070e8:	fwait
  4070e9:	retf   0x8495
  4070ec:	leave  
  4070ed:	ret    0x77e
  4070f0:	push   ebp
  4070f1:	mov    edx,DWORD PTR [esi-0x5a000091]
  4070f7:	inc    ebp
  4070f8:	push   DWORD PTR [ebp-0x7a]
  4070fb:	test   BYTE PTR [ebp+0x8],dh
  4070fe:	mov    ds:0x25ffedf6,al
  407103:	rol    cl,1
  407105:	or     BYTE PTR [edx+0x54],cl
  407108:	mov    ch,ah
  40710a:	mov    ecx,0xc7f7c2
	...
  40711b:	add    BYTE PTR [eax],al
  40711d:	jg     0x4070a4
  40711f:	add    BYTE PTR [eax],al
  407121:	dec    edx
  407122:	pop    es
  407123:	lea    eax,[ebp-0x2a]
  407126:	push   esi
  407127:	addr16 xchg edx,eax
  407129:	or     cl,BYTE PTR [eax-0x1]
  40712c:	dec    BYTE PTR [edi+0x15]
  40712f:	push   DWORD PTR ds:0x413015
  407135:	repnz std 
  407137:	into   
  407138:	call   DWORD PTR [ebp+0x1474c009]
  40713e:	nop
  40713f:	inc    ebp
  407140:	clc    
  407141:	adc    cl,BYTE PTR [eax]
  407143:	add    bh,ch
  407145:	aam    0x85
  407147:	jne    0x407145
  407149:	arpl   bx,dx
  40714b:	cmc    
  40714c:	mul    esp
  40714e:	push   ecx
  40714f:	or     ebp,eax
  407151:	cmp    edx,edx
  407153:	jg     0x407154
  407155:	aam    0xb1
  407157:	jnp    0x407141
  407159:	push   cs
  40715a:	and    DWORD PTR [eax+0xb2e9aff],eax
  407160:	add    BYTE PTR [esi],dl
  407162:	imul   DWORD PTR [esi-0x7f]
  407165:	lahf   
  407166:	rol    BYTE PTR [eax-0x79d45301],1
  40716c:	mov    eax,0x800ba5
  407171:	arpl   WORD PTR [ebx+eax*1-0x75],bp
  407175:	push   ds
  407176:	push   0x6917c00c
  40717b:	cmp    DWORD PTR [eax],0x63
  40717e:	icebp  
  40717f:	add    eax,0xe9
	...
  407190:	ins    DWORD PTR es:[di],dx
  407192:	add    eax,DWORD PTR [eax]
  407194:	je     0x407167
  407196:	adc    edi,edi
  407198:	neg    BYTE PTR [edi+0x6b]
  40719b:	sub    DWORD PTR [ebx-0x4caf80b5],edx
  4071a1:	inc    ebx
  4071a2:	stc    
  4071a3:	pop    es
  4071a4:	dec    ebx
  4071a5:	ret    0xff7e
  4071a8:	dec    esp
  4071a9:	inc    esp
  4071aa:	sti    
  4071ab:	retf   
  4071ac:	inc    esp
  4071ad:	stos   DWORD PTR es:[edi],eax
  4071ae:	in     al,dx
  4071af:	jo     0x407140
  4071b1:	sub    eax,0x68aeff04
  4071b6:	imul   ecx,DWORD PTR ds:0x897f9313,0xffffffde
  4071bd:	sar    DWORD PTR [ebp-0x1],cl
  4071c0:	sbb    al,0x14
  4071c2:	add    DWORD PTR ds:[ebx+0x6c],esp
  4071c6:	nop
  4071c7:	test   DWORD PTR [ecx],esp
  4071c9:	bnd jle 0x4071cb
  4071cc:	mov    bl,0x84
  4071ce:	mov    esp,ecx
  4071d0:	cld    
  4071d1:	add    al,0x66
  4071d3:	xchg   ecx,eax
  4071d4:	fiadd  WORD PTR [esi+0x5f]
  4071d7:	jg     0x4071c5
  4071d9:	aam    0x55
  4071db:	mov    ecx,0x7f4e7aab
  4071e0:	retf   
  4071e1:	inc    ebx
  4071e2:	fs add al,0x63
  4071e5:	mov    WORD PTR [eax+eax*8-0x33],fs
  4071e9:	jns    0x407221
  4071eb:	les    edx,FWORD PTR [ebp-0x7f]
  4071ee:	xchg   BYTE PTR [ebx+eiz*2],al
  4071f1:	add    eax,0x9974
	...
  407202:	add    BYTE PTR [ecx-0x4b80e186],ah
  407208:	push   es
  407209:	stc    
  40720a:	add    esp,DWORD PTR [ebx+0x5]
  40720d:	xchg   ebp,eax
  40720e:	imul   edi
  407210:	(bad)  
  407211:	sub    edi,DWORD PTR [esi-0x6c]
  407214:	jns    0x407282
  407216:	ret    0xd538
  407219:	sub    bh,0x38
  40721c:	(bad)  
  40721d:	call   0xe9d84d8d
  407222:	add    ebp,DWORD PTR [eax+0x45]
  407225:	push   esp
  407226:	add    bh,BYTE PTR [eax-0x22]
  407229:	arpl   WORD PTR [eax+0x7ece7aa1],bx
  40722f:	out    dx,al
  407230:	ret    
  407231:	adc    al,0xd4
  407233:	mov    esp,0x4cc50ce7
  407238:	popa   
  407239:	aaa    
  40723a:	mov    eax,ds:0x43e20563
  40723f:	mov    dh,0x3
  407241:	xchg   edx,eax
  407242:	ret    
  407243:	out    0x92,eax
  407245:	stos   DWORD PTR es:[edi],eax
  407246:	jge    0x407274
  407248:	jns    0x4072ae
  40724a:	sar    DWORD PTR [eax-0x72],0x64
  40724e:	mov    bh,0x1d
  407250:	jns    0x4071d8
  407252:	jmp    0x4071e8
  407254:	sub    eax,0xf30c0428
  407259:	jmp    esp
  40725b:	js     0x40725b
  40725d:	into   
  40725e:	outs   dx,BYTE PTR ds:[esi]
  40725f:	jge    0x4072d9
  407261:	mov    ch,0x9d
  407263:	jbe    0x4072dd
  407265:	(bad)  
  407266:	mov    ecx,0x0
	...
  407273:	add    BYTE PTR [eax],al
  407275:	add    BYTE PTR [eax+0x46],bh
  407278:	iret   
  407279:	push   esi
  40727a:	gs js  0x4072f2
  40727d:	stc    
  40727e:	mov    al,0x60
  407280:	mov    eax,0x50785536
  407285:	cdq    
  407286:	dec    ebp
  407287:	repnz pop es
  407289:	inc    ecx
  40728a:	push   DWORD PTR [edi-0x1]
  40728d:	cs dec eax
  40728f:	scas   eax,DWORD PTR es:[edi]
  407290:	retf   
  407291:	es xor eax,0x2e2b858a
  407297:	js     0x407298
  407299:	mov    ecx,0xfbcb225
  40729e:	sbb    eax,0xc3d5e878
  4072a3:	add    eax,0x8206400
  4072a8:	test   DWORD PTR [ebp-0x110087fb],ecx
  4072ae:	mov    ah,0xb9
  4072b0:	(bad)  
  4072b1:	out    0xf6,al
  4072b3:	ins    BYTE PTR es:[edi],dx
  4072b4:	pop    ds
  4072b5:	jl     0x40731e
  4072b7:	add    eax,0x77a79cff
  4072bc:	dec    esi
  4072be:	iret   
  4072bf:	jg     0x40728c
  4072c1:	(bad)  
  4072c2:	(bad)  
  4072c3:	dec    esi
  4072c4:	ret    0x60ed
  4072c7:	ror    BYTE PTR [edx-0x3bf1d3b],cl
  4072cd:	scas   al,BYTE PTR es:[edi]
  4072ce:	xor    al,0xc
  4072d0:	call   0xffb9197f
  4072d5:	jo     0x4072fb
  4072d7:	jl     0x4072e4
  4072d9:	test   eax,0x0
	...
  4072e6:	add    BYTE PTR [eax],al
  4072e8:	add    BYTE PTR [esi-0x7f],dl
  4072eb:	mov    ecx,gs
  4072ed:	pusha  
  4072ee:	add    eax,0x33d20068
  4072f3:	inc    ecx
  4072f4:	add    BYTE PTR [ebp-0x6e170490],cl
  4072fa:	(bad)  
  4072fb:	(bad)  
  4072fc:	call   FWORD PTR [edx+0x69]
  4072ff:	sbb    BYTE PTR [edx],dh
  407301:	retf   
  407302:	add    edx,DWORD PTR [eax-0x1]
  407305:	pop    ss
  407306:	or     al,0xe8
  407308:	xchg   esp,eax
  407309:	mov    edx,?
  40730b:	(bad)  
  40730c:	call   0x3f4013
  407311:	mov    dl,0xd6
  407313:	xor    BYTE PTR [ecx-0x46],al
  407316:	clc    
  407317:	je     0x407315
  407319:	and    bl,bl
  40731b:	int    0xff
  40731d:	lea    edx,[ecx+0x67]
  407320:	sbb    DWORD PTR [eax+0x4d4fff42],ebx
  407326:	jo     0x40732f
  407328:	call   0x3f6cf6
  40732d:	bound  esp,QWORD PTR [edx]
  40732f:	retf   
  407330:	call   FWORD PTR [ebp+0x69]
  407333:	cmc    
  407334:	xor    DWORD PTR [ebx-0x718a00fd],edi
  40733a:	jmp    0x4072f4
  40733c:	into   
  40733d:	(bad)  
  40733e:	clc    
  40733f:	dec    edi
  407340:	push   0x413363
  407345:	sub    bh,dl
  407347:	je     0x407351
  407349:	mov    ds:0xfffd55,al
	...
  40735a:	add    BYTE PTR [eax],al
  40735c:	sub    eax,0x1dcb05eb
  407361:	cli    
  407362:	adc    BYTE PTR [bx+si+0x44],cl
  407366:	(bad)  
  407367:	inc    BYTE PTR [edi-0x2367177b]
  40736d:	stc    
  40736e:	(bad)  
  40736f:	push   eax
  407370:	push   edx
  407371:	sbb    dh,BYTE PTR [edx]
  407373:	inc    ecx
  407374:	cmp    dl,BYTE PTR [ebx-0x2]
  407377:	jne    0x4073dc
  407379:	imul   esi,DWORD PTR fs:[ecx],0x1d
  40737d:	mov    BYTE PTR [eax+ebp*8-0x2],bh
  407381:	mov    dl,0x7c
  407383:	dec    DWORD PTR [edx+esi*2]
  407386:	jg     0x407370
  407388:	mov    es:0xab2aff7c,eax
  40738e:	or     eax,DWORD PTR [eax]
  407390:	mov    ?,ebx
  407392:	outs   dx,BYTE PTR ds:[esi]
  407393:	and    DWORD PTR [edi],0xffffffd9
  407396:	shr    DWORD PTR [ecx+0x63],cl
  407399:	inc    edx
  40739a:	pop    es
  40739b:	call   DWORD PTR [esi+0x64]
  40739e:	imul   edi,esi,0xffffff9c
  4073a1:	mov    edi,0x3826897b
  4073a6:	mov    BYTE PTR ds:0xffc3047b,bh
  4073ac:	cmp    al,0x67
  4073ae:	add    esi,DWORD PTR [eax+edi*2-0x6c]
  4073b2:	mov    DWORD PTR [eax],esi
  4073b4:	and    ch,BYTE PTR [esp+edx*8-0x19]
  4073b8:	sbb    dh,cl
  4073ba:	add    al,BYTE PTR [eax]
  4073bc:	push   0x1df72c
	...
  4073cd:	add    BYTE PTR [eax],al
  4073cf:	sub    al,0x14
  4073d1:	out    dx,eax
  4073d2:	ror    DWORD PTR [edi+esi*2+0x580fc007],cl
  4073d9:	shl    DWORD PTR [edi+0x5a],cl
  4073dc:	mov    edx,0x5f24ffc2
  4073e1:	icebp  
  4073e2:	pop    es
  4073e3:	jnp    0x407394
  4073e5:	jns    0x4073e6
  4073e7:	fs inc esp
  4073e9:	(bad)
  4073ed:	js     0x407422
  4073ef:	and    eax,DWORD PTR [ebp-0x48b30085]
  4073f5:	jbe    0x4073a5
  4073f7:	mov    esp,DWORD PTR [edi-0x10]
  4073fa:	(bad)  
  4073fb:	leave  
  4073fc:	push   edx
  4073fd:	jp     0x407474
  4073ff:	imul   eax,DWORD PTR ds:0x762d7591,0xffffff9e
  407406:	out    dx,al
  407407:	xor    DWORD PTR [esi+0x1c],0x8f5e0b0c
  40740e:	jnp    0x407424
  407410:	jmp    0x4073f6
  407412:	jp     0x4073aa
  407414:	or     eax,0x76055991
  407419:	jbe    0x407409
  40741b:	inc    esi
  40741c:	jbe    0x407412
  40741e:	or     ecx,DWORD PTR [ebx]
  407420:	push   edx
  407421:	addr16 jnp 0x407410
  407424:	in     al,dx
  407425:	jl     0x40745b
  407427:	mov    ds:0x64f15605,al
  40742c:	ins    DWORD PTR es:[edi],dx
  40742d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40742e:	js     0x407404
  407430:	jne    0x407403
  407432:	dec    ebp
	...
  40743f:	add    BYTE PTR [eax],al
  407441:	add    BYTE PTR [ebx+0x4e7ae8c4],dl
  407447:	or     eax,0x75be3c41
  40744c:	cs in  al,dx
  40744e:	mov    ah,0x34
  407450:	test   al,0x3
  407452:	lods   al,BYTE PTR ds:[esi]
  407453:	out    dx,eax
  407454:	lock imul edi,DWORD PTR [eax+0x78],0x16
  407459:	jnp    0x407466
  40745b:	daa    
  40745c:	fadd   st,st(4)
  40745e:	xchg   esp,eax
  40745f:	jbe    0x4074dd
  407461:	or     edi,DWORD PTR [ebx+0x16]
  407464:	cld    
  407465:	jp     0x4073eb
  407467:	in     al,dx
  407468:	mov    WORD PTR [edx+eiz*1],?
  40746b:	add    eax,0x6d5cf0ee
  407470:	clc    
  407471:	js     0x4074df
  407473:	jne    0x4074c6
  407475:	xchg   esi,eax
  407476:	xor    al,ah
  407478:	call   0xc13e4af7
  40747d:	call   DWORD PTR [edi+0x75]
  407480:	(bad)  
  407481:	jp     0x407459
  407483:	jno    0x407443
  407485:	lock pop esp
  407487:	pop    ebp
  407488:	add    BYTE PTR [ebx],dh
  40748a:	mov    al,ds:0xa60eff74
  40748f:	inc    edi
  407490:	add    al,0xe9
  407492:	adc    eax,DWORD PTR [eax+0x12b6aec]
  407498:	add    BYTE PTR ds:0xf9757471,bl
  40749e:	cdq    
  40749f:	cli    
  4074a0:	or     eax,DWORD PTR [esi-0x4c17f2ed]
	...
  4074b2:	add    BYTE PTR [eax],al
  4074b4:	add    BYTE PTR [ebp+0x74],dh
  4074b7:	push   DWORD PTR [esi-0xd]
  4074ba:	add    al,ch
  4074bc:	xchg   ecx,eax
  4074bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074be:	je     0x4074bf
  4074c0:	xor    BYTE PTR [esi-0x2a4bffff],ah
  4074c6:	popa   
  4074c7:	sub    DWORD PTR ds:0x4dffdf54,0xffffffd3
  4074ce:	sbb    bh,bh
  4074d0:	mov    esp,0xed757470
  4074d5:	cmp    BYTE PTR [ebx-0x34],bl
  4074d8:	cmp    DWORD PTR ss:[eax],eax
  4074db:	shl    BYTE PTR [ebp+0x25457d8c],0xb8
  4074e2:	jle    0x407516
  4074e4:	test   al,0x60
  4074e6:	je     0x40755d
  4074e8:	adc    eax,0xeccbe08
  4074ed:	sbb    ebp,ebx
  4074ef:	(bad)  
  4074f0:	call   0xfe9127ee
  4074f5:	je     0x407503
  4074f7:	call   0xffb46e48
  4074fc:	adc    ebx,0xebe94137
  407502:	stc    
  407503:	sti    
  407504:	sar    DWORD PTR [ecx],1
  407506:	inc    edx
  407507:	call   esi
  407509:	dec    edi
  40750a:	add    eax,0xd519be00
  40750f:	inc    BYTE PTR [eax]
  407511:	pop    DWORD PTR [ecx]
  407513:	call   0xff2e7aa2
  407518:	push   0x0
	...
  407525:	add    BYTE PTR [eax],al
  407527:	add    dl,ch
  407529:	cmp    al,BYTE PTR [ecx+0x0]
  40752c:	add    eax,0x29e8fb64
  407531:	retf   
  407532:	(bad)  
  407533:	call   DWORD PTR [edx+0xb]
  407536:	add    bh,ch
  407538:	mov    ah,0x59
  40753a:	(bad)  
  40753b:	jne    0x40753f
  40753d:	loopne 0x4075ad
  40753f:	jmp    ebp
  407541:	in     eax,dx
  407542:	(bad)  
  407543:	jne    0x4074cb
  407545:	loope  0x4075a4
  407547:	leave  
  407548:	jne    0x407538
  40754a:	enter  0x1ac2,0x8
  40754e:	push   ebp
  40754f:	mov    edx,DWORD PTR [esi-0x44cd539f]
  407555:	pop    es
  407556:	push   DWORD PTR [ebp-0x3a]
  407559:	fucomip st,st(0)
  40755b:	int3   
  40755c:	and    eax,0xaa75feee
  407561:	push   edi
  407562:	out    0x34,eax
  407564:	ja     0x407554
  407566:	(bad)  
  407567:	(bad)  
  407568:	inc    DWORD PTR [ebx]
  40756a:	push   eax
  40756b:	(bad)  
  40756c:	out    dx,eax
  40756d:	jmp    edi
  40756f:	ds test esi,ebp
  407572:	(bad)  
  407573:	push   0x413b43
  407578:	jne    0x4075de
  40757a:	or     ebp,eax
  40757c:	cmp    eax,0x65fffebd
  407581:	fs (bad) 
  407584:	jb     0x4075a1
  407586:	int    0xff
  407588:	jne    0x407576
  40758a:	je     0x4075a0
	...
  407598:	add    BYTE PTR [eax],al
  40759a:	add    dl,bl
  40759c:	in     al,dx
  40759d:	je     0x4075a7
  40759f:	xchg   edx,eax
  4075a0:	sbb    edi,edi
  4075a2:	inc    DWORD PTR [ebp+0x6310c1be]
  4075a8:	pop    esp
  4075a9:	into   
  4075aa:	mov    al,BYTE PTR [edi-0x20]
  4075ad:	ds cld 
  4075af:	dec    esp
  4075b0:	xor    cl,BYTE PTR [eax]
  4075b2:	call   0xffb9176a
  4075b7:	push   0xea49ef9c
  4075bc:	sub    DWORD PTR [eax+0x68],edi
  4075bf:	arpl   WORD PTR [eax+ebp*2-0x42],bx
  4075c3:	mov    ebx,0x634134f6
  4075c8:	fwait
  4075c9:	out    dx,al
  4075ca:	sti    
  4075cb:	adc    al,0x1a
  4075cd:	or     al,0xe8
  4075cf:	fmul   DWORD PTR [ebx+0x5d7bff78]
  4075d5:	add    ebp,edi
  4075d7:	mov    ebp,0xa2328f04
  4075dc:	pop    esp
  4075dd:	js     0x407654
  4075df:	out    dx,eax
  4075e0:	jmp    0x4075cf
  4075e2:	pop    es
  4075e3:	sti    
  4075e4:	pop    edx
  4075e5:	js     0x4075e6
  4075e7:	fadd   QWORD PTR [ebp+eax*1+0x0]
  4075eb:	les    eax,FWORD PTR [edx-0x626e6015]
  4075f1:	add    edi,edi
  4075f3:	dec    esi
  4075f4:	xor    BYTE PTR [eax+0x75],bh
  4075f7:	imul   eax,esp,0xffffffe1
  4075fa:	(bad)  
  4075fb:	mov    ah,0x23
  4075fd:	js     0x407674
	...
  40760b:	add    BYTE PTR [eax],al
  40760d:	add    BYTE PTR [edi-0x5b374bec],ch
  407613:	adc    ecx,DWORD PTR [edx-0x3e]
  407616:	imul   ebx,DWORD PTR [esi+ecx*8-0x76],0xffffff87
  40761b:	fistp  QWORD PTR [esi]
  40761d:	cld    
  40761e:	stc    
  40761f:	pop    ebx
  407620:	in     eax,dx
  407621:	add    al,0x84
  407623:	stc    
  407624:	or     ch,al
  407626:	xchg   esi,eax
  407627:	and    DWORD PTR [eax-0x1],edi
  40762a:	jmp    0x1b05:0x86877a9
  407631:	lds    esp,FWORD PTR [edx+ebp*8+0x7]
  407635:	xor    ah,BYTE PTR [edx+0x6431d605]
  40763b:	sbb    al,0x28
  40763d:	add    al,0x4c
  40763f:	clc    
  407640:	lock imul esi,ebp,0x72
  407644:	mov    esi,0xfae0cb77
  407649:	les    esi,FWORD PTR [edx+ebp*8]
  40764c:	repz xor DWORD PTR [edx+0x5431a605],esp
  407653:	sbb    al,0x28
  407655:	add    al,0x1c
  407657:	clc    
  407658:	loopne 0x4076c5
  40765a:	in     eax,dx
  40765b:	jb     0x4075eb
  40765d:	ja     0x4076da
  40765f:	idiv   DWORD PTR [edx-0x3815fb3c]
  407665:	xor    DWORD PTR [edx+0x64317605],esp
  40766b:	sbb    al,0x28
  40766d:	add    al,0xec
  40766f:	div    eax
  407671:	imul   eax,DWORD PTR [eax],0x0
	...
  407680:	add    BYTE PTR [ebp+0x73],ah
  407683:	pop    esi
  407684:	ja     0x4076d1
  407686:	repnz sbb al,ch
  407689:	aam    0xe9
  40768b:	pop    es
  40768c:	xor    ah,BYTE PTR [edx]
  40768e:	add    eax,0x1c543146
  407693:	test   al,0x3
  407695:	mov    esp,0x3d6be0f7
  40769a:	jae    0x4076ca
  40769c:	ja     0x4076d9
  40769e:	into   
  40769f:	fcmovb st,st(4)
  4076a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076a2:	jmp    0x562a84c
  4076a7:	push   ss
  4076a8:	xor    DWORD PTR [esp+ebx*1-0x58],esp
  4076ac:	add    ecx,DWORD PTR [edi+esi*8+0x73156bf0]
  4076b3:	(bad)  
  4076b4:	jbe    0x4076c1
  4076b6:	loopne 0x4076b7
  4076b8:	mov    edx,0xa667719f
  4076bd:	xor    al,ah
  4076bf:	jmp    ebp
  4076c1:	xor    eax,DWORD PTR [edx]
  4076c3:	sub    DWORD PTR [eax],ebp
  4076c5:	addr16 jo 0x40773d
  4076c8:	loope  0x407692
  4076ca:	aaa    
  4076cb:	dec    dh
  4076cd:	aad    0xdd
  4076cf:	jno    0x4076cc
  4076d1:	pop    ds
  4076d2:	jno    0x40773b
  4076d4:	es jno 0x40769d
  4076d7:	push   DWORD PTR [ebp+0x28290073]
  4076dd:	addr16 jo 0x407755
  4076e0:	icebp  
  4076e1:	mov    eax,0x9efe0f
	...
  4076f2:	add    BYTE PTR [eax],al
  4076f4:	xchg   ebp,eax
  4076f5:	fnstsw WORD PTR [esi-0x25]
  4076f8:	pop    ds
  4076f9:	jno    0x407762
  4076fb:	es push ecx
  4076fd:	(bad)  
  4076fe:	inc    DWORD PTR [ebp+0x28290053]
  407704:	addr16 jo 0x40777c
  407707:	loope  0x407691
  407709:	pop    es
  40770a:	(bad)  
  40770b:	outs   dx,BYTE PTR ds:[esi]
  40770c:	jne    0x4076eb
  40770e:	pop    edx
  40770f:	sbb    ebx,DWORD PTR [esi]
  407711:	jno    0x40777a
  407713:	or     BYTE PTR [ecx+0x62c0ffc6],dl
  407719:	add    eax,0xfa556900
  40771e:	pop    es
  40771f:	push   ecx
  407720:	cmp    eax,0xc83eff72
  407725:	loope  0x407758
  407727:	test   al,0x60
  407729:	fnsave [ebx+edi*8]
  40772c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40772d:	jo     0x407796
  40772f:	jmp    0x407791
  407731:	add    eax,0x8931e80
  407736:	call   0xffb0926c
  40773b:	adc    DWORD PTR [edx+0x7a004136],0xcb32205c
  407745:	add    al,0x68
  407747:	add    cl,BYTE PTR [edx-0x8007ffc]
  40774d:	sti    
  40774e:	out    0xc1,eax
  407750:	jg     0x40774c
  407752:	(bad)  
  407753:	push   0x4133bd
	...
  407764:	add    BYTE PTR [eax],al
  407766:	add    BYTE PTR [edx+0x3a413224],ah
  40776c:	pop    esp
  40776d:	add    DWORD PTR [eax],eax
  40776f:	cmp    al,BYTE PTR [edi+edi*8-0x5623cd8b]
  407776:	std    
  407777:	in     eax,dx
  407778:	stc    
  407779:	addr16 pop ebx
  40777b:	sub    BYTE PTR [ebx-0x1],al
  40777e:	addr16 jne 0x4077b4
  407781:	inc    ecx
  407782:	add    BYTE PTR [edx+0x3],dh
  407785:	add    BYTE PTR [eax],al
  407787:	mov    bh,dl
  407789:	je     0x407793
  40778b:	loop   0x407722
  40778d:	std    
  40778e:	(bad)  
  40778f:	frstor [eax+0x6c]
  407792:	xor    cl,BYTE PTR [ebx+0x9]
  407795:	push   0xff42b847
  40779a:	addr16 clc 
  40779c:	add    eax,DWORD PTR [eax]
  40779e:	cmp    BYTE PTR [ebp+0x60],0x7
  4077a2:	call   0x3f6e65
  4077a7:	mov    ds:0xba413175,al
  4077ac:	pop    ebx
  4077ad:	inc    esi
  4077ae:	xor    bh,bl
  4077b0:	add    ebp,DWORD PTR [eax+0x2]
  4077b3:	retf   0x8003
  4077b6:	push   edi
  4077b8:	sti    
  4077b9:	out    0x65,eax
  4077bb:	jg     0x4077b7
  4077bd:	(bad)  
  4077be:	push   0x4135fd
  4077c3:	repnz mov al,0x31
  4077c6:	inc    ecx
  4077c7:	arpl   WORD PTR [esi-0x15],bx
  4077ca:	add    DWORD PTR [eax],eax
	...
  4077d8:	add    BYTE PTR [eax],al
  4077da:	arpl   WORD PTR [esi-0x7d],bx
  4077dd:	dec    DWORD PTR [esi]
  4077df:	jbe    0x40784c
  4077e1:	dec    esi
  4077e2:	jle    0x407852
  4077e4:	je     0x407850
  4077e6:	pop    ecx
  4077e7:	ja     0x4077d7
  4077e9:	pop    es
  4077ea:	jnp    0x407850
  4077ec:	jne    0x4077ed
  4077ee:	shl    DWORD PTR fs:[eax],cl
  4077f1:	call   esi
  4077f3:	je     0x407860
  4077f5:	call   DWORD PTR [esi+0x58]
  4077f8:	je     0x407864
  4077fa:	outs   dx,DWORD PTR ds:[esi]
  4077fb:	aas    
  4077fc:	out    dx,al
  4077fd:	pop    es
  4077fe:	cmp    esi,DWORD PTR [edx-0x4fc3008a]
  407804:	out    dx,al
  407805:	sti    
  407806:	xor    al,0x32
  407808:	or     al,0xe8
  40780a:	mov    ah,0xa8
  40780c:	je     0x40780d
  40780e:	sbb    bl,BYTE PTR [ebx-0xc480001]
  407814:	adc    WORD PTR [esi-0x7f8bfc98],0x4
  40781c:	push   esp
  40781d:	xor    ah,BYTE PTR [edx+0x6f75745c]
  407823:	xchg   esp,eax
  407824:	cmc    
  407825:	leave  
  407826:	hlt    
  407827:	not    edx
  407829:	arpl   WORD PTR [si+0x64],bx
  40782d:	mov    esi,0x7ede793
  407832:	retf   
  407833:	mov    ds:0xc4d4ff6b,al
  407838:	inc    edi
  407839:	(bad)  
  40783a:	int3   
  40783b:	mov    edi,0xe0ea
	...
  40784c:	add    BYTE PTR [ecx+0x36ff039d],dl
  407852:	pusha  
  407853:	imul   ebx,DWORD PTR [ebp-0x57],0x37
  407857:	je     0x4078a9
  407859:	cmp    ebx,DWORD PTR [ebp+0x3]
  40785c:	out    dx,eax
  40785d:	in     eax,0x5
  40785f:	mov    ecx,0x10fd1674
  407864:	call   0x47b9:0x6b166e8b
  40786b:	push   cs
  40786c:	je     0x407869
  40786e:	js     0x40782b
  407870:	ret    0x6f7c
  407873:	je     0x40787c
  407875:	mov    esi,DWORD PTR [ecx]
  407877:	and    esi,DWORD PTR [esp+ebp*2-0x2b]
  40787b:	add    BYTE PTR [ecx],0x63
  40787e:	pop    esi
  40787f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407880:	aam    0x5d
  407882:	clc    
  407883:	lock pop ebx
  407885:	fistp  DWORD PTR [ebp-0x2a]
  407888:	jae    0x4078c5
  40788a:	jl     0x407833
  40788c:	jae    0x4078d2
  40788e:	cmp    al,0xab
  407890:	cld    
  407891:	cmp    al,0xd9
  407893:	jno    0x4078f5
  407895:	xor    al,0xf8
  407897:	in     al,0x5b
  407899:	sbb    bh,BYTE PTR [ebx]
  40789b:	scas   al,BYTE PTR es:[edi]
  40789c:	jae    0x4078f6
  40789e:	inc    ebp
  40789f:	sbb    eax,0xdb488b0e
  4078a4:	les    edx,FWORD PTR [esi+edi*4]
  4078a7:	adc    dl,0x1a
  4078aa:	outs   dx,BYTE PTR ds:[esi]
  4078ab:	mov    ss,esp
  4078ad:	xchg   esp,eax
  4078ae:	outs   dx,BYTE PTR ds:[esi]
  4078af:	cld    
  4078b0:	sti    
	...
  4078bd:	add    BYTE PTR [eax],al
  4078bf:	add    BYTE PTR [ecx+eiz*8],al
  4078c2:	jge    0x407937
  4078c4:	hlt    
  4078c5:	pop    esp
  4078c6:	adc    eax,0xa06dec4a
  4078cb:	inc    esi
  4078cc:	pop    ebx
  4078cd:	add    eax,0x81cf7ebc
  4078d2:	and    eax,0x56054964
  4078d7:	stc    
  4078d8:	pop    esp
  4078d9:	outs   dx,BYTE PTR ds:[esi]
  4078da:	aam    0xff
  4078dc:	lds    esi,FWORD PTR [edi]
  4078de:	neg    BYTE PTR [edx+eiz*1]
  4078e1:	add    eax,0x6dabdb51
  4078e6:	add    BYTE PTR [esi],dh
  4078e8:	cs enter 0xc3f3,0x60
  4078ed:	outs   dx,BYTE PTR ds:[esi]
  4078ee:	jne    0x4078ed
  4078f0:	adc    eax,edi
  4078f2:	or     ebx,DWORD PTR [esi]
  4078f4:	pop    edx
  4078f5:	(bad)  
  4078f6:	sub    BYTE PTR [eax+0x20415d60],ch
  4078fc:	adc    BYTE PTR [esi-0x77],ch
  4078ff:	lods   al,BYTE PTR ds:[esi]
  407900:	or     al,0xdb
  407902:	(bad)  
  407903:	std    
  407904:	jnp    0x40791b
  407906:	(bad)  
  407907:	jl     0x407975
  407909:	outs   dx,BYTE PTR ds:[esi]
  40790a:	xor    eax,0xffc447de
  40790f:	sar    BYTE PTR [ebp+0x3e],1
  407912:	(bad)  
  407913:	(bad)  
  407915:	ret    0x64f7
  407918:	sbb    esp,DWORD PTR [ebp+0x50]
  40791b:	into   
  40791c:	dec    ebx
  40791d:	adc    edi,edi
  40791f:	cmp    al,0x63
  407921:	ins    BYTE PTR es:[edi],dx
  407922:	xor    eax,0xee
	...
  407933:	push   edi
  407934:	(bad)  
  407935:	inc    eax
  407937:	push   ebp
  407938:	jmp    FWORD PTR ds:[esi+0x13efc2a7]
  40793f:	ins    BYTE PTR es:[di],dx
  407941:	jne    0x40790c
  407943:	xchg   ecx,eax
  407944:	repnz or edx,DWORD PTR [esi+0x2828fc4b]
  40794b:	pop    edi
  40794c:	pop    ebp
  40794d:	std    
  40794e:	mov    cl,0x71
  407950:	ins    BYTE PTR es:[edi],dx
  407951:	mov    DWORD PTR [ebx+eax*4],esp
  407954:	jp     0x40799b
  407956:	mov    DWORD PTR [eax],edx
  407958:	ins    BYTE PTR es:[edi],dx
  407959:	jne    0x407920
  40795b:	jno    0x40794f
  40795d:	or     esp,DWORD PTR [esi-0x65]
  407960:	cld    
  407961:	sub    BYTE PTR [eax+0x21e55d60],ch
  407967:	push   ecx
  407968:	ins    BYTE PTR es:[edi],dx
  407969:	mov    DWORD PTR [esp+edi*1+0x26007d88],esp
  407970:	or     BYTE PTR [edi],cl
  407972:	test   BYTE PTR [esi],cl
  407974:	or     BYTE PTR [eax],al
  407976:	add    BYTE PTR [ecx],bh
  407978:	jne    0x407971
  40797a:	add    BYTE PTR [ebp-0x75ff757c],al
  407980:	or     BYTE PTR [ebx+0xf086e7d],al
  407986:	test   dl,bh
  407988:	pop    es
  407989:	add    BYTE PTR [eax],al
  40798b:	push   ebp
  40798c:	ins    DWORD PTR es:[edi],dx
  40798d:	daa    
  40798e:	(bad)  
  40798f:	jmp    FWORD PTR [edi-0x19]
  407992:	sub    cl,BYTE PTR [eax-0x9]
  407995:	(bad)  
  407996:	inc    DWORD PTR [eax]
	...
  4079a4:	add    BYTE PTR [eax],al
  4079a6:	out    dx,eax
  4079a7:	(bad)  
  4079a9:	jne    0x40792d
  4079ab:	rol    BYTE PTR [eax-0x109ba3e],1
  4079b1:	jne    0x4079f5
  4079b3:	div    BYTE PTR [eax+ecx*1+0x22]
  4079b7:	outs   dx,DWORD PTR ds:[esi]
  4079b8:	sar    edi,0x15
  4079bb:	div    BYTE PTR [esp+esi*8+0x25]
  4079bf:	je     0x4079c8
  4079c1:	call   0x3f3d57
  4079c6:	mov    ebx,0x3a13275c
  4079cb:	in     eax,0xbd
  4079cd:	jne    0x4079e6
  4079cf:	cmc    
  4079d0:	je     0x4079c2
  4079d2:	cmc    
  4079d3:	jae    0x4079dc
  4079d5:	call   0x3f3d27
  4079da:	loope  0x4079e2
  4079dc:	push   DWORD PTR [ebp-0x2e]
  4079df:	cmc    
  4079e0:	je     0x4079d2
  4079e2:	jne    0x407a58
  4079e4:	pop    es
  4079e5:	call   0x3f3bfb
  4079ea:	jne    0x407a60
  4079ec:	jmp    0x4079ed
  4079ee:	mov    edi,0x883ce76f
  4079f3:	idiv   dh
  4079f5:	and    DWORD PTR [ebx+0x51],0x67
  4079f9:	add    BYTE PTR [edi+0x71],cl
  4079fc:	test   BYTE PTR [ebp-0x3d],bh
  4079ff:	pop    ecx
  407a00:	test   BYTE PTR [esi],0xe8
  407a03:	mov    al,ds:0x3373ff67
  407a08:	test   DWORD PTR [edi],0x0
	...
  407a16:	add    BYTE PTR [eax],al
  407a18:	add    BYTE PTR [ebx-0x6300bce4],bh
  407a1e:	push   ss
  407a1f:	(bad)  
  407a20:	imul   esp,DWORD PTR [ebx+0xb],0xc87b07f7
  407a27:	inc    edx
  407a28:	inc    DWORD PTR [edx+edi*8+0x398bf3f6]
  407a2f:	inc    esi
  407a30:	push   DWORD PTR [edx+ebp*2-0xa]
  407a34:	sti    
  407a35:	jnp    0x407a88
  407a37:	inc    esi
  407a38:	jmp    DWORD PTR [edx+ebx*2-0xa]
  407a3c:	test   DWORD PTR [ebx+0x69],0x4c54ff46
  407a43:	imul   bh
  407a45:	cmp    esp,DWORD PTR [ecx+0x46]
  407a48:	inc    DWORD PTR [esp+edi*1-0xa]
  407a4c:	jmp    0x407a99
  407a4e:	pop    ecx
  407a4f:	inc    esi
  407a50:	push   DWORD PTR [esp+ebp*4]
  407a53:	mul    bl
  407a55:	cmp    esi,DWORD PTR [ecx-0x59db00b9]
  407a5b:	inc    ebp
  407a5c:	and    al,0x63
  407a5e:	sub    DWORD PTR [ebp-0x14],edi
  407a61:	loop   0x407a03
  407a63:	jae    0x407a5c
  407a65:	or     al,0x94
  407a67:	fist   DWORD PTR [edx]
  407a69:	arpl   bx,bp
  407a6b:	mov    al,0x68
  407a6d:	cwde   
  407a6e:	scas   eax,DWORD PTR es:[edi]
  407a6f:	ret    0x7cff
  407a72:	or     al,0x35
  407a74:	inc    ecx
  407a75:	arpl   WORD PTR [edi*4-0x24a35dce],ax
  407a7c:	inc    eax
	...
  407a89:	add    BYTE PTR [eax],al
  407a8b:	add    BYTE PTR [eax+0x4b03a805],dl
  407a91:	sub    DWORD PTR [edx],ebx
  407a93:	ret    
  407a94:	int3   
  407a95:	loop   0x407a45
  407a97:	xor    al,0x22
  407a99:	add    eax,0x6a68f64e
  407a9e:	mov    esp,0x3edcbcfb
  407aa3:	jo     0x407a51
  407aa5:	fstp   st(1)
  407aa7:	add    esi,DWORD PTR [ebx+ebp*4-0x3baf703f]
  407aae:	call   0xa877688e
  407ab3:	add    edi,ebx
  407ab5:	jge    0x407a91
  407ab7:	ret    0xe284
  407aba:	cdq    
  407abb:	xor    al,0x22
  407abd:	add    eax,0xc431e891
  407ac2:	call   0xa87668a2
  407ac7:	add    esp,DWORD PTR [eax+esi*8-0x24]
  407acb:	jo     0x407aa3
  407acd:	std    
  407ace:	shr    BYTE PTR [ebx],1
  407ad0:	push   ebp
  407ad1:	push   0xffffffde
  407ad3:	fdiv   QWORD PTR [eax+0x5]
  407ad6:	(bad)  
  407ad7:	scas   al,BYTE PTR es:[edi]
  407ad8:	mov    ebx,0x3cc51a69
  407add:	loop   0x407ab0
  407adf:	xor    esp,DWORD PTR [edx+0x704a5105]
  407ae5:	(bad)  
  407ae6:	call   0x287667c6
  407aeb:	add    al,0x8b
  407aed:	mov    ds:0xc4da,al
	...
  407afe:	add    BYTE PTR [edx+eiz*8],dl
  407b01:	scas   eax,DWORD PTR es:[edi]
  407b02:	xor    esp,DWORD PTR [edx+0x58f99605]
  407b08:	push   0x14
  407b0a:	cld    
  407b0b:	add    al,0xf8
  407b0d:	xchg   BYTE PTR [edi-0xc],ch
  407b10:	ja     0x407b36
  407b12:	jo     0x407aa7
  407b14:	push   0x0
  407b16:	cld    
  407b17:	in     al,0x6a
  407b19:	xor    eax,0xffc47fde
  407b1e:	push   eax
  407b1f:	adc    BYTE PTR [ebx-0x56361700],dl
  407b25:	jne    0x407afa
  407b27:	sbb    eax,0x60e9f7c0
  407b2c:	add    eax,0x75aa2e00
  407b31:	jmp    esi
  407b33:	pusha  
  407b34:	add    eax,0x698ae96a
  407b39:	imul   ebp,ecx,0xac8c69ba
  407b3f:	or     al,0xd5
  407b41:	mov    WORD PTR [ebx+ecx*1+0x72],fs
  407b45:	call   DWORD PTR [esi]
  407b47:	scas   eax,DWORD PTR es:[edi]
  407b48:	push   0x75
  407b4a:	adc    DWORD PTR [eax+esi*8],ecx
  407b4d:	sti    
  407b4e:	adc    esi,esi
  407b50:	xchg   edx,eax
  407b51:	add    cl,ch
  407b53:	imul   ebp,DWORD PTR [ecx-0x3af6148c],0xc67f6967
  407b5d:	jmp    ebp
  407b5f:	pop    ebx
  407b60:	std    
  407b61:	out    0x8e,eax
	...
  407b6f:	add    BYTE PTR [eax],al
  407b71:	add    BYTE PTR [ebp-0x4f9d0098],ah
  407b77:	jp     0x407afe
  407b79:	aad    0xb5
  407b7b:	push   0x611119ff
  407b80:	hlt    
  407b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b82:	mov    ebp,0xb06c8968
  407b87:	jo     0x407b88
  407b89:	scas   al,BYTE PTR es:[edi]
  407b8a:	lea    esi,[edx+0x68859ef0]
  407b90:	call   DWORD PTR [edi+ecx*1]
  407b93:	popa   
  407b94:	cmc    
  407b95:	xchg   edi,eax
  407b96:	jne    0x407c00
  407b98:	call   DWORD PTR [eax+esi*2+0x70]
  407b9c:	inc    DWORD PTR [eax]
  407b9e:	(bad)  
  407ba0:	loope  0x407b65
  407ba2:	ins    DWORD PTR es:[edi],dx
  407ba3:	xlat   BYTE PTR ds:[ebx]
  407ba4:	inc    BYTE PTR [ebp+0x72]
  407ba7:	retf   
  407ba8:	xchg   esp,eax
  407ba9:	call   edi
  407bab:	fsub   st,st(7)
  407bad:	das    
  407bae:	push   esp
  407baf:	add    al,0x0
  407bb1:	leave  
  407bb2:	js     0x407c20
  407bb4:	call   DWORD PTR [ecx+eax*2-0x38]
  407bb8:	add    ah,0x2e
  407bbb:	dec    esi
  407bbc:	jmp    FWORD PTR [ecx-0x3c]
  407bbf:	xlat   BYTE PTR ds:[ebx]
  407bc0:	je     0x407bca
  407bc2:	adc    ch,bh
  407bc4:	mov    edi,0x44e96dff
  407bc9:	cld    
  407bca:	mov    ds:0x8a413303,al
  407bcf:	xlat   BYTE PTR ds:[ebx]
  407bd0:	je     0x407bda
  407bd2:	jb     0x407b83
  407bd4:	(bad)  
  407bd5:	inc    DWORD PTR [eax]
	...
  407be3:	add    BYTE PTR [eax],al
  407be5:	ins    DWORD PTR es:[edi],dx
  407be6:	dec    esi
  407be7:	jmp    DWORD PTR [edi-0x66]
  407bea:	xor    eax,DWORD PTR [ecx+0x0]
  407bed:	rol    BYTE PTR [ebx],cl
  407bef:	xor    eax,DWORD PTR [ecx+0x7a]
  407bf2:	xlat   BYTE PTR ds:[ebx]
  407bf3:	xor    al,0xf
  407bf5:	mov    ds:0x9ae7ff41,eax
  407bfa:	ret    0xfffe
  407bfd:	push   ecx
  407bfe:	les    esi,FWORD PTR [ebx+0xf]
  407c01:	mov    dl,BYTE PTR [ecx-0x2]
  407c04:	jne    0x407c48
  407c06:	int3   
  407c07:	xchg   esp,eax
  407c08:	cld    
  407c09:	sub    eax,0x985e7da
  407c0e:	(bad)  
  407c10:	push   0x3a
  407c12:	dec    esp
  407c13:	sub    DWORD PTR [eax],0x1668017b
  407c19:	sbb    DWORD PTR [ebx-0x1],eax
  407c1c:	(bad)  
  407c1d:	aaa    
  407c1e:	imul   ebp,DWORD PTR [eax],0x85cbfa41
  407c24:	(bad)  
  407c25:	arpl   WORD PTR [edi+0x12230b6d],cx
  407c2b:	std    
  407c2c:	dec    edi
  407c2d:	xchg   ebx,eax
  407c2e:	jg     0x407c27
  407c30:	pop    es
  407c31:	sti    
  407c32:	adc    dh,BYTE PTR [eax-0x1]
  407c35:	in     al,0x85
  407c37:	leave  
  407c38:	ret    0xd6dc
  407c3b:	fcos   
  407c3d:	cmp    al,0xe
  407c3f:	xor    DWORD PTR [ecx+0x63],eax
  407c42:	push   esi
  407c43:	add    BYTE PTR [ebx],dh
  407c45:	and    bl,BYTE PTR [esi-0x25]
  407c48:	add    DWORD PTR [eax],eax
	...
  407c56:	add    BYTE PTR [eax],al
  407c58:	arpl   WORD PTR [esi-0x7d],bx
  407c5b:	call   0xffad9476
  407c60:	pop    eax
  407c61:	push   ds
  407c62:	clc    
  407c63:	push   cs
  407c64:	adc    ecx,DWORD PTR [esi-0x39948a94]
  407c6a:	sar    ebx,0x94
  407c6d:	push   ds
  407c6e:	pop    esp
  407c6f:	xor    ah,BYTE PTR [eax+0x636a6d06]
  407c75:	xchg   BYTE PTR [ecx-0x24a1ddd8],al
  407c7b:	adc    eax,0x68039d30
  407c80:	popa   
  407c81:	pop    esi
  407c82:	add    eax,DWORD PTR [eax-0xba5685]
  407c88:	pop    esp
  407c89:	fs inc ebx
  407c8b:	je     0x407cf1
  407c8d:	sub    al,0xd4
  407c8f:	(bad)  
  407c90:	(bad)  
  407c91:	je     0x407cee
  407c93:	sbb    DWORD PTR [edi+0x50],eax
  407c96:	ins    BYTE PTR es:[edi],dx
  407c97:	call   0xffad1806
  407c9c:	leave  
  407c9d:	bound  ebp,QWORD PTR [ebp+esi*2+0x5b]
  407ca1:	push   esp
  407ca2:	jmp    0xd9f0a1a2
  407ca7:	and    bl,BYTE PTR [edx+esi*1]
  407caa:	cld    
  407cab:	out    0x93,eax
  407cad:	add    eax,0xdc0c6ca5
  407cb2:	cld    
  407cb3:	ins    BYTE PTR es:[edi],dx
  407cb4:	mov    ?,ebp
  407cb6:	and    ch,0xf8
  407cb9:	data16 mov gs,WORD PTR [eax+eax*1+0x0]
	...
  407cca:	add    BYTE PTR [esi+0x69],ch
  407ccd:	xchg   dh,dh
  407ccf:	fs pop ebp
  407cd1:	pop    ds
  407cd2:	inc    esp
  407cd3:	in     al,0x66
  407cd5:	mov    al,ds:0x14056741
  407cda:	jns    0x407ca3
  407cdc:	sub    BYTE PTR ds:0xd2ce356f,0x3
  407ce3:	cmp    esi,edi
  407ce5:	push   ebp
  407ce6:	mul    BYTE PTR [ebp+ebx*2-0x17]
  407cea:	inc    ebx
  407ceb:	mov    ah,0x66
  407ced:	jo     0x407cb5
  407cef:	test   al,0x7a
  407cf1:	hlt    
  407cf2:	sbb    edi,DWORD PTR [ebx-0x3c]
  407cf5:	call   0x159db72
  407cfa:	ret    
  407cfb:	xchg   esp,eax
  407cfc:	out    0xe5,al
  407cfe:	add    edx,DWORD PTR [edi]
  407d00:	repnz nop
  407d02:	(bad)  
  407d03:	push   eax
  407d04:	(bad)  
  407d05:	call   0x740101de
  407d0a:	add    esp,DWORD PTR [ebx-0x6]
  407d0d:	sub    bh,dh
  407d0f:	dec    ebp
  407d10:	iret   
  407d11:	adc    bl,bl
  407d13:	cwde   
  407d14:	data16 not dl
  407d17:	les    eax,FWORD PTR ds:0xdd155ce9
  407d1d:	wrmsr  
  407d1f:	mov    ds:0xce6b3905,al
  407d24:	std    
  407d25:	ror    dh,0x45
  407d28:	data16 into 
  407d2a:	pop    esp
  407d2b:	fld    QWORD PTR [edx-0x3a]
  407d2e:	imul   eax,DWORD PTR [eax],0x0
	...
  407d3d:	add    BYTE PTR [ebx+0x24c4f50a],bh
  407d43:	iret   
  407d44:	inc    eax
  407d46:	jo     0x407cd8
  407d48:	add    cl,ch
  407d4a:	adc    eax,0x310674a6
  407d4f:	pop    esi
  407d50:	cmp    ch,BYTE PTR [ebp+0x1506678]
  407d56:	addr16 add eax,0x1d174fef
  407d5c:	xor    al,0x28
  407d5e:	addr16 aad 0xfe
  407d61:	hlt    
  407d62:	call   0x48cea9c4
  407d67:	callw  0x9a7c
  407d6b:	call   WORD PTR [edx+0x66]
  407d6f:	mov    edi,0xf05f1f7f
  407d74:	stc    
  407d75:	scas   eax,DWORD PTR es:[edi]
  407d76:	inc    esp
  407d77:	xor    al,al
  407d79:	nop
  407d7a:	dec    eax
  407d7b:	inc    WORD PTR [esi+0x35]
  407d7f:	xchg   edi,eax
  407d80:	cmp    dh,ah
  407d82:	mov    bl,0x78
  407d84:	(bad)  
  407d85:	mov    esp,0xe1756604
  407d8a:	cmp    BYTE PTR [ecx-0x3a07d941],dh
  407d90:	pop    ebp
  407d91:	xor    BYTE PTR ds:0xfdbc0001,bl
  407d97:	pop    eax
  407d98:	push   0xbe5660e9
  407d9d:	xchg   ecx,eax
  407d9e:	lods   eax,DWORD PTR ds:[esi]
  407d9f:	xor    DWORD PTR [ecx-0x17],eax
	...
  407dae:	add    BYTE PTR [eax],al
  407db0:	add    cl,bh
  407db2:	out    dx,eax
  407db3:	or     esi,esi
  407db5:	push   ebx
  407db6:	or     eax,0x64c106e8
  407dbb:	call   DWORD PTR [ecx+0x66]
  407dbe:	add    eax,0xd5289fef
  407dc3:	xor    ebp,DWORD PTR [eax]
  407dc5:	addr16 fs jne 0x407da6
  407dc9:	leave  
  407dca:	fiadd  DWORD PTR [edi]
  407dcc:	add    BYTE PTR [edx],dl
  407dce:	mov    ebx,0x21e5ffe5
  407dd3:	ret    0xa08
  407dd6:	ss mov ch,ah
  407dd9:	lds    edx,FWORD PTR [ebp+0xb]
  407ddc:	call   0x3f451a
  407de1:	adc    ecx,ecx
  407de3:	jae    0x407dff
  407de5:	bound  edx,QWORD PTR [esi]
  407de7:	xor    al,0x41
  407de9:	or     bh,BYTE PTR [ecx]
  407deb:	out    0xd8,eax
  407ded:	mov    edi,0x4a50feef
  407df2:	lock je 0x407dfd
  407df5:	loop   0x407d7a
  407df7:	(bad)  
  407df8:	inc    DWORD PTR [ebp-0x40]
  407dfb:	aad    0xc1
  407dfd:	inc    ebp
  407dfe:	out    dx,eax
  407dff:	enter  0xd2c2,0x8
  407e03:	push   ebp
  407e04:	mov    esp,DWORD PTR [esi]
  407e06:	mov    eax,esp
  407e08:	cld    
  407e09:	mov    al,ds:0x25086a08
  407e0e:	push   ebp
  407e0f:	pop    es
  407e10:	call   0x402c37
	...
  407e21:	add    BYTE PTR [eax],al
  407e23:	add    BYTE PTR [ebx],al
  407e25:	inc    ebp
  407e26:	sti    
  407e27:	push   0xffffff8a
  407e29:	inc    eax
  407e2a:	daa    
  407e2b:	xor    eax,0x556808bb
  407e30:	scas   al,BYTE PTR es:[edi]
  407e31:	dec    ecx
  407e32:	(bad)  
  407e33:	(bad)  
  407e34:	lahf   
  407e35:	pop    edi
  407e36:	sub    BYTE PTR [ecx-0x76],al
  407e39:	sar    BYTE PTR [ebp+0xaef65c4],0xc0
  407e40:	out    dx,al
  407e41:	adc    edx,DWORD PTR [eax+0x68]
  407e44:	dec    ebx
  407e45:	or     bh,ch
  407e47:	mov    esi,0x874eefa
  407e4c:	xor    ch,BYTE PTR [edx+eiz*8-0x1]
  407e50:	and    eax,0x63c18dc1
  407e55:	cmp    ebp,DWORD PTR [ecx+0x6a]
  407e58:	arpl   si,ax
  407e5a:	sbb    esi,DWORD PTR ds:0x79db6ea2
  407e60:	outs   dx,DWORD PTR ds:[esi]
  407e61:	sub    eax,0x6b56ff04
  407e66:	sbb    al,BYTE PTR [ecx+0x63]
  407e69:	inc    esi
  407e6a:	jns    0x407e30
  407e6c:	or     al,0xab
  407e6e:	std    
  407e6f:	mov    edi,0x67d35a8f
  407e74:	bound  ebp,QWORD PTR [esi+0x58]
  407e77:	mov    esi,0x7ef9393
  407e7c:	sti    
  407e7d:	sbb    esp,DWORD PTR [ebp-0x1]
  407e80:	in     al,0x75
  407e82:	leave  
  407e83:	rcr    ah,0xda
  407e86:	(bad)  
	...
  407e94:	add    BYTE PTR [eax],al
  407e96:	add    BYTE PTR [esi+edx*4],bh
  407e99:	cs inc ecx
  407e9b:	arpl   WORD PTR [esi],si
  407e9d:	scas   eax,DWORD PTR es:[edi]
  407e9e:	xor    al,0x22
  407ea0:	outs   dx,BYTE PTR ds:[esi]
  407ea1:	push   0xc3056c35
  407ea6:	(bad)  
  407ea7:	mov    esp,0xacff3f4d
  407eac:	push   esi
  407ead:	inc    ebx
  407eae:	je     0x407f04
  407eb0:	jle    0x407e85
  407eb2:	(bad)  
  407eb3:	push   ss
  407eb4:	pop    bx
  407eb6:	or     dl,BYTE PTR [edx+esi*1+0x2d56e869]
  407ebd:	imul   edi,edi,0x37db6df9
  407ec3:	lods   eax,DWORD PTR ss:[esi]
  407ec5:	add    ebp,DWORD PTR [eax-0x69]
  407ec8:	cmp    edx,eax
  407eca:	jmp    FWORD PTR [ebp-0x60]
  407ecd:	clc    
  407ece:	sub    BYTE PTR [edx],ah
  407ed0:	outs   dx,BYTE PTR ds:[esi]
  407ed1:	pop    ebx
  407ed2:	ss daa 
  407ed4:	pop    esp
  407ed5:	push   0xf7d9230b
  407eda:	dec    edi
  407edb:	mov    bl,0x5
  407edd:	out    0xee,al
  407edf:	pop    esp
  407ee0:	ins    DWORD PTR es:[edi],dx
  407ee1:	leave  
  407ee2:	imul   edi,DWORD PTR [ebx+eiz*2],0x6323fcc1
  407ee9:	into   
  407eea:	(bad)  [ebx+ebp*8]
  407eed:	daa    
  407eee:	das    
  407eef:	mov    ds:0x560b5105,al
  407ef4:	(bad)  
  407ef5:	call   0x52cd62
  407efa:	ret    
	...
  407f07:	add    BYTE PTR [eax],al
  407f09:	add    BYTE PTR [ebx+ebp*2],cl
  407f0c:	cmc    
  407f0d:	aas    
  407f0e:	add    al,0x63
  407f10:	repnz inc ebx
  407f12:	ja     0x407f26
  407f14:	cmp    esp,edx
  407f16:	cmc    
  407f17:	fsub   st,st(0)
  407f19:	pop    ebx
  407f1a:	mov    ch,0x63
  407f1c:	xchg   BYTE PTR [eax-0x5],ch
  407f1f:	fs test eax,0xd4efdc68
  407f25:	push   0x4b810d4e
  407f2a:	int    0x62
  407f2c:	data16 (bad) [edx+0x62]
  407f30:	aam    0xfb
  407f32:	les    edx,FWORD PTR [ebx+0x57]
  407f35:	push   0x6909efb4
  407f3a:	ss or  eax,0x62a53f51
  407f40:	ds push 0xee366116
  407f46:	pop    esp
  407f47:	ins    DWORD PTR es:[edi],dx
  407f48:	imul   DWORD PTR [ecx+0x4530628c]
  407f4e:	pop    edi
  407f4f:	add    eax,0x628f7cb4
  407f54:	pushf  
  407f55:	idiv   DWORD PTR [ebp+ebx*2+0x25]
  407f59:	push   0xef290e6c
  407f5e:	push   ss
  407f5f:	in     eax,dx
  407f60:	call   0xb899:0x5a22e
  407f67:	nop
  407f68:	(bad)  
  407f69:	out    dx,al
  407f6a:	les    esi,FWORD PTR [ebp+0x394f]
	...
  407f7c:	add    BYTE PTR [edi],ah
  407f7e:	(bad)  
  407f7f:	dec    esi
  407f81:	add    eax,0x1e1c4ced
  407f86:	bound  ecx,QWORD PTR [edi-0x32]
  407f89:	xor    cl,BYTE PTR [edx]
  407f8b:	call   0xffa341aa
  407f90:	and    DWORD PTR [edi],edi
  407f92:	add    eax,0xecbdc600
  407f97:	pop    ebx
  407f98:	hlt    
  407f99:	daa    
  407f9a:	bound  ecx,QWORD PTR [edi-0x5a]
  407f9d:	adc    cl,BYTE PTR [edx]
  407f9f:	call   0xffa30382
  407fa4:	xor    DWORD PTR [edi],edx
  407fa6:	add    al,0x0
  407fa8:	jle    0x407f6f
  407faa:	in     al,dx
  407fab:	imul   edi,DWORD PTR [edi+ebx*1-0x2d81b09e],0x43c2e809
  407fb6:	(bad)  
  407fb7:	inc    DWORD PTR [ecx+0x66ffa19c]
  407fbd:	xchg   BYTE PTR [edi+0x8],al
  407fc0:	jmp    0x6b2d0e58
  407fc5:	and    esp,DWORD PTR [ecx+0x6a]
  407fc8:	jmp    0xbd3f8c57
  407fcd:	test   al,0x69
  407fcf:	jns    0x40804d
  407fd1:	add    al,0x62
  407fd3:	mov    DWORD PTR [esp+edi*8-0x6dd1e612],ebp
  407fda:	or     eax,ebp
  407fdc:	imul   edi,esp,0x93ff61
	...
  407fee:	add    BYTE PTR [eax],al
  407ff0:	inc    ecx
  407ff1:	bound  esi,QWORD PTR [ebp-0x1f]
  407ff4:	sbb    bl,bl
  407ff6:	dec    BYTE PTR [esi]
  407ff8:	add    al,0xef
  407ffa:	sbb    eax,DWORD PTR [eax]
  407ffc:	pop    ebp
  407ffd:	push   esp
  407ffe:	pop    es
  407fff:	call   0x3f67f2
  408004:	dec    ebp
  408005:	push   esi
  408006:	sti    
  408007:	call   edi
  408009:	pop    esp
  40800a:	out    0x93,eax
  40800c:	jmp    edi
  40800e:	dec    cl
  408010:	or     BYTE PTR [ecx-0x1],ah
  408013:	push   esp
  408014:	sar    DWORD PTR [eax-0x7f5dff97],0x35
  40801b:	inc    ecx
  40801c:	cmp    bh,BYTE PTR ds:0x94b3594
  408022:	push   DWORD PTR ds:0x4101fd
  408028:	and    bl,BYTE PTR [eax-0x3e]
  40802b:	(bad)  
  40802c:	mov    ebp,0xf774bf5b
  408031:	xor    al,0xfe
  408033:	jne    0x40802f
  408035:	out    0x74,eax
  408037:	or     al,0x2a
  408039:	call   0x971288b2
  40803e:	in     al,0xff
  408040:	pop    ebp
  408041:	mov    esp,0xe74dbfdd
  408046:	imul   eax,DWORD PTR [eax],0x41358062
  40804c:	mov    edx,0xb35943c
  408051:	add    eax,0x268
	...
  408062:	add    dl,cl
  408064:	add    al,0x80
  408066:	call   0x3f4685
  40806b:	mov    cl,0xc4
  40806d:	jae    0x408084
  40806f:	cli    
  408070:	out    0x74,eax
  408072:	adc    BYTE PTR [ebp+0x55],cl
  408075:	or     edx,DWORD PTR [eax+0x3d]
  408078:	push   ebp
  408079:	pop    es
  40807a:	call   0x3f4078
  40807f:	push   edx
  408080:	ja     0x408041
  408082:	jmp    DWORD PTR [ebx-0x9]
  408085:	gs jne 0x4080db
  408088:	(bad)  
  40808a:	or     edi,ebx
  40808c:	shr    BYTE PTR [edi],cl
  40808e:	inc    ecx
  40808f:	arpl   WORD PTR [edi-0x11],bx
  408092:	pop    es
  408093:	dec    ebx
  408094:	and    BYTE PTR [edi-0x1],bl
  408097:	dec    esp
  408098:	and    eax,0x21630c41
  40809d:	jns    0x40808b
  40809f:	loopne 0x40804a
  4080a1:	push   0xf9c4636a
  4080a6:	(bad)  
  4080a7:	mov    dh,0x66
  4080a9:	pop    ebx
  4080aa:	mov    esi,0x896546e7
  4080af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080b0:	mov    ds:0x4714ffdc,al
  4080b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080b6:	push   0xffc25995
  4080bb:	add    eax,0x83e7fc01
  4080c0:	jg     0x408127
  4080c2:	dec    DWORD PTR [ebx+0xef036d]
	...
  4080d4:	add    BYTE PTR [eax],al
  4080d6:	lods   eax,DWORD PTR ds:[esi]
  4080d7:	add    eax,0x6ea23583
  4080dc:	fs jne 0x40814a
  4080df:	jbe    0x408097
  4080e1:	(bad)  
  4080e2:	aam    0xd6
  4080e4:	fs jne 0x4080b6
  4080e7:	out    dx,al
  4080e8:	out    dx,al
  4080e9:	pop    es
  4080ea:	mov    ebx,0xbcffa81b
  4080ef:	adc    al,0x42
  4080f1:	add    al,0x63
  4080f3:	mov    eax,ds:0x29e2ec78
  4080f8:	dec    esp
  4080f9:	mul    DWORD PTR [esi+eax*8+0x7d9f4576]
  408100:	fs jne 0x40816a
  408103:	pop    ss
  408104:	das    
  408105:	(bad)  
  408108:	add    ebp,eax
  40810a:	out    dx,al
  40810b:	add    al,0x78
  40810d:	add    al,0x63
  40810f:	or     al,0x29
  408111:	cmc    
  408112:	fistp  QWORD PTR [eax+ebp*8]
  408115:	add    esp,DWORD PTR [ebx+0x48]
  408118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408119:	imul   esp,DWORD PTR [ebx+0x5],0xffffffe9
  40811d:	add    esp,DWORD PTR [ecx+ecx*8]
  408120:	hlt    
  408121:	fs pop esp
  408123:	add    eax,0xed4cd9e9
  408128:	call   0xe92dc606
  40812d:	jbe    0x4080d5
  40812f:	pop    ecx
  408130:	cmp    DWORD PTR [edi-0x22],esi
  408133:	pop    ecx
  408134:	fisub  WORD PTR [esp+ebp*1-0x4a]
  408138:	int    0xee
	...
  408146:	add    BYTE PTR [eax],al
  408148:	add    BYTE PTR [edi+ebx*2],ch
  40814b:	cmp    al,0x68
  40814d:	or     esp,edi
  40814f:	push   edi
  408150:	add    esp,DWORD PTR [ebx+0xa]
  408153:	test   eax,0x526c67ef
  408158:	add    ah,BYTE PTR [ebx+0x5]
  40815b:	adc    DWORD PTR [ebx+ecx*2+0x6e64e8c4],eax
  408162:	adc    DWORD PTR [ecx-0x71a0de87],eax
  408168:	rcr    ecx,cl
  40816a:	xor    eax,0x56d77e74
  40816f:	jle    0x4081d5
  408171:	xor    esi,DWORD PTR [ebx+0x5ea2e980]
  408177:	outs   dx,BYTE PTR ds:[esi]
  408178:	jp     0x408158
  40817a:	push   ebp
  40817b:	pop    esi
  40817c:	fs mov esp,0xb4a5396d
  408182:	pop    esi
  408183:	ret    
  408184:	add    edi,DWORD PTR [ebx]
  408186:	add    edx,DWORD PTR [edi]
  408188:	ret    
  408189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40818a:	pop    edi
  40818b:	jl     0x408200
  40818d:	xchg   esp,eax
  40818e:	pop    esi
  40818f:	ds fs dec esi
  408192:	push   cs
  408193:	add    BYTE PTR [eax],al
  408195:	mov    al,ds:0x2119e75e
  40819a:	pop    esi
  40819b:	push   DWORD PTR [eax-0x3]
  40819e:	push   0xeaff1ef7
  4081a3:	inc    DWORD PTR [eax-0x16bee8a4]
  4081a9:	call   DWORD PTR [edi+0xfef0]
	...
  4081bb:	add    al,al
  4081bd:	pop    esi
  4081be:	push   DWORD PTR [edi+ecx*2-0x5716bed3]
  4081c5:	xchg   ebx,eax
  4081c6:	shr    esi,0xc0
  4081c9:	mov    WORD PTR [ebp-0xa1672b],es
  4081cf:	push   ebx
  4081d0:	pop    edi
  4081d1:	in     eax,dx
  4081d2:	or     bl,BYTE PTR [edi]
  4081d4:	es pop esi
  4081d6:	(bad)  
  4081d7:	xchg   esp,eax
  4081d8:	(bad)  
  4081d9:	push   esi
  4081da:	inc    esi
  4081dc:	sbb    BYTE PTR [eax],0xf
  4081df:	adc    BYTE PTR [esi],bl
  4081e1:	pop    esi
  4081e2:	out    0x5d,eax
  4081e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081e5:	pop    esi
  4081e6:	jmp    DWORD PTR [eax-0x26]
  4081e9:	ins    BYTE PTR es:[edi],dx
  4081ea:	mul    DWORD PTR [esi+0x10ffeb80]
  4081f0:	bound  edx,QWORD PTR [edi]
  4081f2:	inc    ecx
  4081f3:	jmp    0x97311a79
  4081f8:	sbb    BYTE PTR [esi-0x1],0xbc
  4081fc:	jno    0x40822a
  4081fe:	inc    ecx
  4081ff:	jmp    0x7701594c
  408204:	inc    eax
  408205:	mov    WORD PTR [ebp-0xa1d777],es
  40820b:	je     0x4081f7
  40820d:	cmp    al,0xf7
  40820f:	pop    esi
  408210:	inc    eax
  408211:	mov    ch,0x67
  408213:	push   cs
  408214:	dec    ecx
  408215:	(bad)  
  408216:	dec    DWORD PTR [ebp-0x36]
  408219:	push   esp
  40821a:	test   DWORD PTR [eax],0x35fee225
	...
  40822c:	add    BYTE PTR [eax],al
  40822e:	add    BYTE PTR [ebp+0x22004130],al
  408234:	xchg   esi,eax
  408235:	sar    bh,0x35
  408238:	push   cs
  408239:	shl    BYTE PTR [ebx+eiz*2-0x7a],0xbd
  40823e:	fmul   DWORD PTR [ebp-0x1e]
  408241:	inc    BYTE PTR [edi+ecx*8]
  408244:	push   ecx
  408245:	(bad)  
  408246:	xor    BYTE PTR ds:0x65f7dc8c,al
  40824c:	call   0xa76b6aa0
  408251:	(bad)  
  408252:	jmp    DWORD PTR [ecx+0x5d]
  408255:	or     al,al
  408257:	into   
  408258:	push   cs
  408259:	push   eax
  40825a:	call   0x40299d
  40825f:	std    
  408260:	(bad)  
  408261:	fdivr  st(7),st
  408263:	adc    eax,0x3a0014e8
  408268:	or     DWORD PTR [ebx-0x13fd143],eax
  40826e:	dec    DWORD PTR [edx]
  408270:	xor    eax,0xec978364
  408275:	idiv   bh
  408277:	mov    ch,0x8
  408279:	je     0x4082d7
  40827b:	mov    DWORD PTR [ebp-0x182a0818],esp
  408281:	push   DWORD PTR [ebx+0x29]
  408284:	imul   edi,edi,0xffa665ff
  40828a:	jne    0x40825e
  40828c:	lock push 0xffffffba
  40828f:	push   ebp
  408290:	out    0xfe,eax
  408292:	mov    ch,0x0
	...
  4082a0:	add    BYTE PTR [eax],al
  4082a2:	out    0xbf,al
  4082a4:	(bad)  
  4082a5:	push   DWORD PTR ds:0x5e8073d
  4082ab:	jnp    0x4082ac
  4082ad:	call   DWORD PTR ds:0x63f7e87d
  4082b3:	mov    bl,0x61
  4082b5:	jmp    FWORD PTR [esi]
  4082b7:	imul   si,WORD PTR [ecx-0x9e3c27],0xffce
  4082bf:	ret    0xff59
  4082c2:	mov    WORD PTR [ebx],ss
  4082c4:	fadd   DWORD PTR [edi]
  4082c6:	jnp    0x408257
  4082c8:	popf   
  4082c9:	(bad)  
  4082ca:	jl     0x4082ef
  4082cc:	cwde   
  4082cd:	loopne 0x40833b
  4082cf:	sti    
  4082d0:	popa   
  4082d1:	push   esi
  4082d3:	imul   edx,DWORD PTR gs:[ebp-0x9df457],0x16
  4082db:	and    bl,BYTE PTR [edx-0x1]
  4082de:	push   esp
  4082df:	pop    ebx
  4082e0:	xlat   BYTE PTR ds:[ebx]
  4082e1:	pop    es
  4082e2:	cmp    ecx,DWORD PTR [ecx-0x63]
  4082e5:	inc    DWORD PTR [ebx+ebp*2-0x69]
  4082e9:	in     al,0x34
  4082eb:	arpl   WORD PTR [ecx-0x18],sp
  4082ee:	sar    BYTE PTR [eax+0x61],cl
  4082f1:	jmp    FWORD PTR [ecx+edi*2]
  4082f4:	jo     0x4082ed
  4082f6:	and    al,0x4b
  4082f8:	ins    BYTE PTR es:[edi],dx
  4082f9:	xchg   dh,bl
  4082fb:	inc    edx
  4082fc:	popa   
  4082fd:	dec    esi
  4082ff:	xor    eax,0x460cff59
  408304:	fnstsw WORD PTR [eax+eax*1+0x0]
	...
  408313:	add    BYTE PTR [eax],al
  408315:	add    al,0xab
  408317:	popa   
  408318:	mov    ch,0x3
  40831a:	jnp    0x40837d
  40831c:	dec    DWORD PTR [ebx]
  40831e:	(bad)  
  40831f:	sahf   
  408320:	(bad)  
  408321:	in     al,dx
  408322:	jb     0x4082bb
  408324:	lock in al,dx
  408326:	mov    ah,BYTE PTR [ecx-0x18]
  408329:	inc    esi
  40832a:	shl    DWORD PTR [eax-0x1],0xd4
  40832e:	and    BYTE PTR [ecx+ebp*8-0x6c],bl
  408332:	aam    0x60
  408334:	inc    esp
  408336:	push   eax
  408337:	pop    edi
  408338:	call   0x4b68849
  40833d:	arpl   WORD PTR [esi+0x2b],cx
  408340:	or     al,0x63
  408342:	mov    dl,0x61
  408344:	jo     0x408326
  408346:	inc    eax
  408347:	push   ecx
  408348:	out    dx,al
  408349:	pushf  
  40834a:	in     eax,dx
  40834b:	icebp  
  40834c:	pusha  
  40834d:	push   cs
  40834e:	or     eax,0x5bcad951
  408353:	mov    ebx,DWORD PTR ss:[esi]
  408356:	pop    ecx
  408357:	pop    esp
  408358:	(bad)  
  408359:	je     0x40830f
  40835b:	nop
  40835c:	dec    eax
  40835d:	cs (bad) 
  40835f:	call   0xa852354f
  408364:	add    esp,DWORD PTR [ecx+edx*1-0x22]
  408368:	sub    ah,BYTE PTR [edx+0x231d1105]
  40836e:	pop    ebx
  40836f:	dec    BYTE PTR [ebx+eiz*1]
  408372:	rcr    ch,cl
  408374:	mov    bl,0xbc
  408376:	add    al,0xe9
  408378:	jo     0x40837a
	...
  408386:	add    BYTE PTR [eax],al
  408388:	std    
  408389:	pop    edx
  40838a:	pop    esp
  40838b:	pop    esp
  40838c:	xchg   ebx,eax
  40838d:	pop    edx
  40838e:	push   esp
  40838f:	or     al,0x3b
  408391:	test   al,0xb7
  408393:	pusha  
  408394:	and    al,0x6e
  408396:	loope  0x408336
  408398:	sbb    al,0x5b
  40839a:	je     0x408362
  40839c:	or     al,0xb6
  40839e:	push   eax
  40839f:	cmp    dl,BYTE PTR [esi-0x3c]
  4083a2:	call   0x28515592
  4083a7:	add    al,0xfc
  4083a9:	adc    dh,dh
  4083ab:	sub    ah,BYTE PTR [edx+0x23089105]
  4083b1:	pop    ebx
  4083b2:	xchg   esi,eax
  4083b3:	or     al,0x23
  4083b5:	shl    ch,cl
  4083b7:	mov    bl,0x44
  4083b9:	pop    es
  4083ba:	jmp    0xf49b992f
  4083bf:	pop    ebx
  4083c0:	xor    ebx,DWORD PTR [edx+0x0]
  4083c3:	cld    
  4083c4:	pop    eax
  4083c5:	ins    DWORD PTR es:[edi],dx
  4083c6:	outs   dx,BYTE PTR ds:[esi]
  4083c7:	pop    DWORD PTR [ebx+0x5a]
  4083ca:	call   0xff9b580c
  4083cf:	sar    DWORD PTR [edx],1
  4083d1:	adc    BYTE PTR [ecx-0x17],al
  4083d4:	inc    ebx
  4083d5:	rol    BYTE PTR [edi],1
  4083d7:	inc    ecx
  4083d8:	mov    ebx,0x346ff59
  4083dd:	sar    bl,1
  4083df:	ds mov ch,0x2
  4083e2:	call   0xff9b6ada
  4083e7:	and    BYTE PTR [esi],ah
  4083e9:	add    DWORD PTR [eax],eax
  4083eb:	mov    esp,0x0
	...
  4083f8:	add    BYTE PTR [eax],al
  4083fa:	add    bh,ah
  4083fc:	imul   eax,DWORD PTR [ecx-0xadd3db],0xfbc0d516
  408406:	mov    ecx,0x60bd0c3
  40840b:	ins    DWORD PTR es:[edi],dx
  40840c:	or     ch,BYTE PTR [ecx]
  40840e:	test   al,0x60
  408410:	ins    DWORD PTR es:[edi],dx
  408411:	std    
  408412:	addr16 pusha 
  408414:	add    eax,0x8053290b
  408419:	shr    eax,0x60
  40841c:	add    eax,0x58f24c7
  408421:	add    cl,ch
  408423:	pusha  
  408424:	inc    edx
  408425:	inc    ebp
  408426:	aad    0xbc
  408428:	add    al,BYTE PTR [eax]
  40842a:	jmp    0xe9a9de39
  40842f:	cli    
  408430:	pop    ecx
  408431:	imul   ebp,ecx,0x19f3bff3
  408437:	sar    BYTE PTR [edi-0xc],cl
  40843a:	sahf   
  40843b:	xchg   esp,eax
  40843c:	pop    edx
  40843d:	push   eax
  40843e:	sahf   
  40843f:	or     dl,BYTE PTR [edx-0x1]
  408442:	sbb    al,0x83
  408444:	ins    DWORD PTR es:[edi],dx
  408445:	iret   
  408446:	pop    edi
  408447:	addr16 add eax,0x3d0a000b
  40844d:	add    al,0xe9
  40844f:	inc    esi
  408450:	add    BYTE PTR [eax],al
  408452:	add    BYTE PTR [edx-0x7f],ah
  408455:	sub    BYTE PTR [ecx-0x36],al
  408458:	mov    edx,0xb7120c74
  40845d:	mov    esi,0xff
	...
  40846e:	or     eax,0x3fd08a91
  408473:	mov    esp,?
  408475:	imul   DWORD PTR ds:0x32524fba
  40847b:	out    0xbe,eax
  40847d:	dec    DWORD PTR [ebp-0x78]
  408480:	test   eax,esi
  408482:	inc    ebp
  408483:	mov    edx,0x7972e8fe
  408488:	(bad)  
  408489:	call   eax
  40848b:	add    eax,0x40944368
  408490:	(bad)  
  408491:	inc    BYTE PTR [edi]
  408493:	mov    cl,0xf6
  408495:	jmp    FWORD PTR [ebp-0x48]
  408498:	xor    al,0xf
  40849a:	xor    eax,DWORD PTR [edx-0x1]
  40849d:	out    0x22,eax
  40849f:	js     0x4084a0
  4084a1:	inc    ebx
  4084a3:	mov    fs,esp
  4084a5:	test   DWORD PTR [ebp-0x48],0x15920069
  4084ac:	ss inc ecx
  4084ae:	cmp    bh,BYTE PTR [eax-0x47fa0f4c]
  4084b4:	(bad)  
  4084b5:	push   DWORD PTR [edi+0x8]
  4084b8:	sub    DWORD PTR [ecx+0xa],eax
  4084bb:	in     eax,dx
  4084bc:	sbb    DWORD PTR [edi-0x7a774833],edi
  4084c2:	push   ds
  4084c3:	mov    al,0xfe
  4084c5:	jmp    DWORD PTR [eax+0x14356801]
  4084cb:	inc    edx
  4084cc:	(bad)  
  4084cd:	(bad)  
  4084ce:	xchg   edi,eax
  4084cf:	mov    ah,0xf6
  4084d1:	inc    DWORD PTR [eax]
	...
  4084df:	add    BYTE PTR [eax],al
  4084e1:	arpl   WORD PTR [edi+0x5e],bp
  4084e4:	xor    eax,0xffc4456c
  4084e9:	mov    esp,0xccff9d82
  4084ee:	aad    0x87
  4084f0:	loopne 0x4084be
  4084f2:	iret   
  4084f3:	pop    ebp
  4084f4:	push   0x63
  4084f6:	push   es
  4084f7:	sbb    dh,BYTE PTR [esi]
  4084f9:	and    ch,BYTE PTR [esi+0x5e]
  4084fc:	mov    ch,0xb3
  4084fe:	scas   eax,DWORD PTR es:[edi]
  4084ff:	pop    ebp
  408500:	jmp    DWORD PTR [ecx+edi*8+0x6e22290e]
  408507:	imul   ebx,esi,0xffffffd5
  40850a:	mov    edi,0xb6e6895d
  40850f:	push   ebp
  408510:	inc    DWORD PTR [esp+eax*2+0x502f6803]
  408517:	(bad)  
  408518:	push   DWORD PTR [ebp-0x47]
  40851b:	push   edx
  40851c:	imul   DWORD PTR [edi+esi*8+0x5d]
  408520:	xor    eax,0xffc44554
  408525:	inc    esp
  408526:	cs popf 
  408528:	call   DWORD PTR [ebp+edx*8-0x79]
  40852c:	fcom   QWORD PTR [edi+edx*2+0x5d]
  408530:	add    DWORD PTR [esi],0xa
  408533:	push   esi
  408534:	(bad)  
  408535:	cmp    al,0x6e
  408537:	xlat   BYTE PTR ds:[ebx]
  408538:	fs loopne 0x4084db
  40853b:	jo     0x408534
  40853d:	sub    al,0x37
  40853f:	add    al,0x74
  408541:	xchg   ebx,ebp
  408543:	sahf   
  408544:	call   0x408549
	...
  408551:	add    BYTE PTR [eax],al
  408553:	add    BYTE PTR [edi+eax*2],dl
  408556:	pop    ebp
  408557:	add    BYTE PTR [edi+0xcffebfb],cl
  40855d:	inc    edi
  40855e:	sahf   
  40855f:	dec    DWORD PTR [esi-0x44fc949a]
  408565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408566:	pop    ebp
  408567:	jmp    FWORD PTR [esi-0x13aa6afc]
  40856d:	push   edi
  40856e:	sahf   
  40856f:	xlat   BYTE PTR ds:[ebx]
  408570:	pop    esp
  408571:	ins    DWORD PTR es:[edi],dx
  408572:	ds pushf 
  408574:	fcom   QWORD PTR [edi-0x72]
  408577:	xchg   edi,eax
  408578:	retf   
  408579:	dec    edi
  40857a:	xchg   BYTE PTR [ebp-0x34],bl
  40857d:	shl    eax,1
  40857f:	imul   ebx,DWORD PTR [edx],0xffffff9d
  408582:	jbe    0x4085e1
  408584:	mov    esp,0xb4558591
  408589:	push   edi
  40858a:	data16 xlat BYTE PTR ds:[ebx]
  40858c:	fs ins DWORD PTR es:[edi],dx
  40858e:	and    bl,BYTE PTR [esp+eiz*4-0x7c68a9a9]
  408595:	dec    edi
  408596:	dec    esi
  408597:	pop    ebp
  408598:	xchg   esp,eax
  408599:	shl    eax,1
  40859b:	imul   edi,DWORD PTR [esi],0xffffff9d
  40859e:	ds pop ebp
  4085a0:	test   BYTE PTR [ecx+0x577c5515],dl
  4085a6:	xlat   BYTE PTR cs:[ebx]
  4085a8:	pop    esp
  4085a9:	ins    DWORD PTR es:[edi],dx
  4085aa:	push   es
  4085ab:	pushf  
  4085ac:	ins    BYTE PTR es:[edi],dx
  4085ad:	push   edi
  4085ae:	push   ds
  4085af:	xchg   edi,eax
  4085b0:	jg     0x408601
  4085b2:	push   ss
  4085b3:	pop    ebp
  4085b4:	dec    ebx
  4085b5:	sub    eax,0x5d52
	...
  4085c6:	add    BYTE PTR [edi+edx*2+0x3c],dl
  4085ca:	jo     0x408620
  4085cc:	push   edi
  4085cd:	(bad)  
  4085ce:	imul   esp,DWORD PTR [ebp-0x66],0xfffffff6
  4085d2:	pop    esp
  4085d3:	cmp    al,0x91
  4085d5:	add    DWORD PTR [ebp+0x34],edx
  4085d8:	push   edi
  4085d9:	shl    eax,1
  4085db:	jmp    0xee9d6436
  4085e0:	ficomp WORD PTR gs:[esp+ebx*1+0x6e]
  4085e5:	loope  0x40857f
  4085e7:	adc    al,0x57
  4085e9:	(bad)  
  4085ea:	xchg   esi,eax
  4085eb:	das    
  4085ec:	dec    edi
  4085ed:	mov    esi,0x58fb5c
  4085f2:	jae    0x408593
  4085f4:	push   esi
  4085f5:	push   DWORD PTR [eax+edx*4+0x4e]
  4085f9:	jmp    DWORD PTR [esi-0x6ef82f71]
  4085ff:	dec    edi
  408600:	push   edi
  408601:	call   DWORD PTR [esi-0x690f6fc1]
  408607:	aaa    
  408608:	push   esi
  408609:	call   0xff97709b
  40860e:	jle    0x4085ad
  408610:	dec    esi
  408611:	jmp    0xff96a33d
  408616:	outs   dx,BYTE PTR ds:[esi]
  408617:	lea    ebx,[edx-0x18]
  40861a:	pop    ss
  40861b:	fadd   QWORD PTR ds:0xd223000
  408621:	add    BYTE PTR [ebx+ebp*8+0x34258369],bh
  408628:	jmp    0x408629
  40862a:	rol    BYTE PTR [eax],cl
	...
  408638:	add    BYTE PTR [eax],al
  40863a:	pop    esp
  40863b:	push   esi
  40863c:	jne    0x40862f
  40863e:	clc    
  40863f:	dec    esi
  408640:	mov    bh,0x36
  408642:	pop    ds
  408643:	mov    WORD PTR [ebp+0x2d],es
  408646:	mov    BYTE PTR [esi+0x5660a835],ch
  40864c:	jne    0x40863f
  40864e:	clc    
  40864f:	dec    esi
  408650:	std    
  408651:	push   ss
  408652:	mov    edi,0xb70d7556
  408657:	rol    BYTE PTR [edi],1
  408659:	adc    DWORD PTR [ecx-0x65010063],eax
  40865f:	inc    ebx
  408660:	add    al,0xe9
  408662:	cmc    
  408663:	mov    ch,ah
  408665:	push   0xe6f7359c
  40866a:	mov    BYTE PTR [eax+0x56efdd45],cl
  408670:	jne    0x408657
  408672:	mov    ecx,0x1e000f10
  408677:	push   esi
  408678:	out    0x0,eax
  40867a:	push   ds
  40867b:	lea    eax,[eax]
  40867d:	add    BYTE PTR [ecx],dl
  40867f:	ret    0x850e
  408682:	lock (bad) 
  408684:	(bad)  
  408685:	(bad)  
  408686:	mov    ebp,0xfa00f743
  40868b:	add    DWORD PTR [eax],eax
  40868d:	(bad)  
  40868e:	aas    
  40868f:	mov    ch,0xfe
  408691:	pop    es
  408692:	retf   0x6a01
  408695:	add    BYTE PTR [eax+0x1],ah
  408698:	push   0x0
  40869a:	jo     0x40869d
  40869c:	lea    eax,[ebp+0x0]
	...
  4086ab:	add    BYTE PTR [eax],al
  4086ad:	dec    esi
  4086ae:	xchg   ecx,eax
  4086af:	mov    WORD PTR [ebp-0x14dc2],es
  4086b5:	pop    edx
  4086b6:	mov    edx,0x3445f874
  4086bb:	sti    
  4086bc:	call   0x41138d
  4086c1:	add    ecx,0xbc230573
  4086c7:	add    BYTE PTR [eax],al
  4086c9:	jp     0x408734
  4086cb:	jg     0x4086f5
  4086cd:	mov    ebx,0x8675ff01
  4086d2:	jmp    0xba8644af
  4086d7:	mov    dl,al
  4086d9:	test   DWORD PTR [ebx-0x45ba080c],0x4f62524f
  4086e3:	mov    ebp,0x858265ff
  4086e8:	lock dec ebp
  4086ea:	mov    al,0xfe
  4086ec:	push   0x3a
  4086ee:	popa   
  4086ef:	mov    bl,0x36
  4086f1:	or     ecx,DWORD PTR [ecx]
  4086f3:	push   DWORD PTR [ebp-0x147c6]
  4086f9:	inc    ebp
  4086fa:	test   BYTE PTR [esi],0x29
  4086fd:	jnp    0x408708
  4086ff:	call   0x5ab9ea29
  408704:	(bad)  
  408705:	jmp    0xed4c:0xcf75ee9
  40870c:	(bad)  
  40870d:	jl     0x408698
  40870f:	adc    DWORD PTR [ecx+0x0],eax
	...
  40871e:	add    BYTE PTR [eax],al
  408720:	arpl   WORD PTR [ebx-0x5c130f70],bx
  408726:	pop    edx
  408727:	push   DWORD PTR [esi]
  408729:	pop    ebx
  40872a:	sub    al,0x41
  40872c:	arpl   WORD PTR [esi+0x2],si
  40872f:	mov    ebp,0x858c7bdc
  408734:	(bad)  
  408735:	jnp    0x408791
  408737:	(bad)  
  408738:	cmp    DWORD PTR [esi-0x15],ebx
  40873b:	test   eax,0xff041d8d
  408740:	test   dh,0x51
  408743:	push   DWORD PTR [ebx+eiz*8-0x6285f0f1]
  40874a:	add    ebp,eax
  40874c:	mov    edx,0xeaff5a72
  408751:	loope  0x4087bd
  408753:	not    DWORD PTR [ebx+eax*8-0x2cfb0014]
  40875a:	adc    BYTE PTR [ecx+0x63],al
  40875d:	adc    edx,DWORD PTR [eax+0x5a1b74f0]
  408763:	jmp    FWORD PTR [esi]
  408765:	xor    ebp,DWORD PTR [ecx+eax*2]
  408768:	arpl   si,si
  40876a:	dec    ebp
  40876b:	mov    esp,0x858bf364
  408770:	inc    ebx
  408771:	repz pop ecx
  408773:	jmp    esi
  408775:	call   0xb8d7ea8
  40877a:	mov    bl,0x67
  40877c:	hlt    
  40877d:	fwait
  40877e:	(bad)  
  40877f:	(bad)  
  408780:	cmp    eax,0xf75311
	...
  408791:	add    BYTE PTR [eax],al
  408793:	xor    al,0x63
  408795:	pop    ecx
  408796:	xor    eax,0xc310055c
  40879b:	and    al,0x6c
  40879d:	xchg   ecx,eax
  40879e:	cwde   
  40879f:	sbb    al,0x54
  4087a1:	loop   0x4087e6
  4087a3:	(bad)  
  4087a4:	out    dx,al
  4087a5:	imul   edx,DWORD PTR [edi+0x59c65c37],0x58d8da5f
  4087af:	xor    eax,DWORD PTR [esp+ebp*2-0x51ac13c8]
  4087b6:	mov    ah,0x4
  4087b8:	ficomp DWORD PTR [edi+0x59]
  4087bb:	in     al,0x5f
  4087bd:	cmc    
  4087be:	or     al,0xa3
  4087c0:	fsubr  st,st(6)
  4087c2:	mov    bl,0xbc
  4087c4:	fisttp QWORD PTR [edi+0x59]
  4087c7:	int3   
  4087c8:	dec    ebx
  4087c9:	ins    BYTE PTR es:[edi],dx
  4087ca:	cmp    ah,cl
  4087cc:	push   ebx
  4087cd:	jle    0x4087be
  4087cf:	mov    esp,0xde86e953
  4087d4:	xor    al,0x76
  4087d6:	pop    ecx
  4087d7:	lods   al,BYTE PTR ds:[esi]
  4087d8:	mov    ah,0xd0
  4087da:	xchg   edi,eax
  4087db:	ins    DWORD PTR es:[edi],dx
  4087dc:	(bad)  
  4087dd:	call   0x5e955e3a
  4087e2:	pop    ecx
  4087e3:	xchg   esp,eax
  4087e4:	push   ebx
  4087e5:	adc    al,0x9
  4087e7:	cmp    al,dh
  4087e9:	call   0x3ed1b159
  4087ee:	pop    ecx
  4087ef:	jmp    0x6a53:0x74511189
  4087f6:	xchg   edi,eax
	...
  408803:	add    BYTE PTR [eax],al
  408805:	add    BYTE PTR [edi+0x6359265b],al
  40880b:	add    al,0x65
  40880d:	jge    0x408872
  40880f:	add    eax,0x621684e9
  408814:	push   ss
  408815:	pop    ecx
  408816:	dec    esp
  408817:	push   es
  408818:	idiv   BYTE PTR [edi-0x2b]
  40881b:	add    eax,0x90e003e9
  408820:	add    BYTE PTR [ecx],al
  408822:	xchg   edx,eax
  408823:	push   edx
  408824:	(bad)  
  408825:	jmp    0xe9c21185
  40882a:	pusha  
  40882b:	add    eax,0x6260f968
  408830:	mov    esi,0xe80b25d6
  408835:	js     0x408814
  408837:	push   edx
  408838:	inc    esi
  40883a:	aad    0x61
  40883c:	idiv   DWORD PTR [esi-0x1e8aad65]
  408842:	mov    BYTE PTR [eax-0x4b],ch
  408845:	scas   al,BYTE PTR es:[edi]
  408846:	mov    edx,DWORD PTR [edx-0x4b]
  408849:	xchg   ecx,eax
  40884a:	xchg   ebx,eax
  40884b:	push   edx
  40884c:	call   FWORD PTR [esi-0x4117f553]
  408852:	in     eax,0x52
  408854:	dec    DWORD PTR [esi-0x79089623]
  40885a:	sub    edx,DWORD PTR [edx+0x75]
  40885d:	icebp  
  40885e:	dec    eax
  40885f:	cmp    al,0xb5
  408861:	jbe    0x40887e
  408863:	push   edx
  408864:	mov    ch,0x8d
  408866:	adc    edx,DWORD PTR [edx-0x1]
  408869:	data16 add BYTE PTR [eax],al
	...
  408878:	add    BYTE PTR [ebp-0x123f17f6],dl
  40887e:	push   edx
  40887f:	call   DWORD PTR [esi-0x1b]
  408882:	test   DWORD PTR gs:[esi+0x2b],0xf8f17552
  40888a:	lahf   
  40888b:	mov    ch,0x3e
  40888d:	sbb    eax,DWORD PTR [esi+0x521311bd]
  408893:	(bad)  
  408894:	jmp    0x64c37835
  408899:	xor    BYTE PTR [edx-0x1],bl
  40889c:	push   ds
  40889d:	pop    esp
  40889e:	fst    DWORD PTR [ecx]
  4088a0:	(bad)  
  4088a1:	aad    0x2d
  4088a3:	test   DWORD PTR [esi],0x3052ab
  4088a9:	pop    ebp
  4088aa:	inc    ebx
  4088ab:	pop    es
  4088ac:	call   0x400bc4
  4088b1:	popa   
  4088b2:	add    BYTE PTR [edx+0x0],ch
  4088b5:	cmp    eax,0x5fe80740
  4088ba:	je     0x4088bb
  4088bc:	(bad)  
  4088bd:	cmp    eax,0x2df7e474
  4088c2:	mov    edx,0xb9f289e7
  4088c7:	(bad)  
  4088c8:	inc    DWORD PTR [edi-0x42000923]
  4088ce:	loopne 0x40894d
  4088d0:	mov    eax,0xb5feb9ad
  4088d5:	and    al,dl
  4088d7:	(bad)  
  4088d8:	call   edx
  4088da:	xor    eax,0xffb7
	...
  4088eb:	add    ch,bh
  4088ed:	mov    ecx,0xb9f5e0b4
  4088f2:	(bad)  
  4088f3:	call   0x3ffa5a
  4088f8:	fnsave [ebx-0x28]
  4088fb:	idiv   DWORD PTR ds:0x725de7ba
  408901:	mov    edx,0xb977fffe
  408906:	idiv   bh
  408908:	cmp    eax,0x3db851e1
  40890d:	mov    edx,0xe03245fe
  408912:	aam    0xfd
  408914:	sbb    eax,0x1e75feba
  408919:	loope  0x4088b6
  40891b:	mov    cl,BYTE PTR [edx-0x7d3d36fb]
  408921:	add    eax,0x862e8b55
  408926:	(bad)  
  408927:	cld    
  408928:	rol    BYTE PTR ds:0x367d0d6a,1
  40892e:	pop    es
  40892f:	call   0xffd10b97
  408934:	dec    esp
  408935:	out    0xc0,al
  408937:	sti    
  408938:	mov    ebx,0x63410de0
  40893d:	dec    edi
  40893e:	rol    BYTE PTR [edi],1
  408940:	dec    ebx
  408941:	ficom  DWORD PTR [edi-0x1]
  408944:	sub    al,0x60
  408946:	sar    bl,1
  408948:	and    al,0xb2
  40894a:	or     ebp,eax
  40894c:	in     al,dx
  40894d:	jns    0x4089a5
  40894f:	inc    DWORD PTR [eax]
	...
  40895d:	add    BYTE PTR [eax],al
  40895f:	sub    bl,BYTE PTR [ebp-0x1c480001]
  408965:	sbb    WORD PTR [edi],0x4e9b
  40896a:	(bad)  
  40896b:	cld    
  40896c:	loope  0x40892d
  40896e:	sti    
  40896f:	xchg   ebx,eax
  408970:	xchg   edi,eax
  408971:	ror    BYTE PTR [ebx],1
  408973:	in     al,dx
  408974:	pop    ecx
  408975:	push   es
  408976:	sub    DWORD PTR [edx-0x16ad94a2],esp
  40897c:	pop    esi
  40897d:	add    ecx,DWORD PTR [ebx]
  40897f:	mov    ds:0x615f8067,eax
  408984:	pop    esi
  408985:	add    eax,edi
  408987:	push   ds
  408988:	xchg   BYTE PTR [ebx],al
  40898a:	add    BYTE PTR [ebx+0x5e],ah
  40898d:	ds inc ebp
  40898f:	scas   eax,DWORD PTR es:[edi]
  408990:	xlat   BYTE PTR ds:[ebx]
  408991:	std    
  408992:	jmp    FWORD PTR [esp+eax*1+0x34636a04]
  408999:	add    ebp,DWORD PTR [edx+0x63]
  40899c:	loope  0x40895d
  40899e:	repz xor ebp,ecx
  4089a1:	jg     0x408997
  4089a3:	xchg   esp,eax
  4089a4:	mov    edi,0x91845055
  4089a9:	pop    ebx
  4089aa:	push   esi
  4089ac:	adc    DWORD PTR [ebx+0x24],ebp
  4089af:	jmp    0xa34b8d12
  4089b4:	call   0x3eb:0x541e900
  4089bb:	arpl   bp,bx
  4089bd:	push   0x1605a22b
  4089c2:	rol    BYTE PTR [eax],1
	...
  4089d0:	add    BYTE PTR [eax],al
  4089d2:	pop    eax
  4089d3:	pop    ebp
  4089d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089d5:	call   0x89ee:0x33725044
  4089dc:	cmc    
  4089dd:	dec    ebp
  4089de:	xor    al,0x50
  4089e0:	cdq    
  4089e1:	mov    cl,0x44
  4089e3:	xor    DWORD PTR [edx],0x6c7e2456
  4089e9:	push   esp
  4089ea:	adc    al,0x50
  4089ec:	fiadd  WORD PTR [edi+0x55de40de]
  4089f2:	or     al,0xb5
  4089f4:	inc    eax
  4089f5:	push   ss
  4089f6:	dec    esp
  4089f7:	(bad)  
  4089f8:	call   0xb6954051
  4089fd:	push   ebp
  4089fe:	hlt    
  4089ff:	dec    edi
  408a00:	cld    
  408a01:	add    al,0x3a
  408a03:	(bad)  
  408a04:	call   0xa6cb5f74
  408a09:	push   ebp
  408a0a:	jmp    0x34f:0xd44d8589
  408a11:	add    al,0x3b
  408a13:	mov    ecx,0x4ec4c2d5
  408a18:	cmp    al,0x54
  408a1a:	mov    ah,0x4f
  408a1c:	jle    0x408a73
  408a1e:	outs   dx,BYTE PTR ds:[esi]
  408a1f:	add    al,al
  408a21:	ret    0x67ac
  408a24:	stc    
  408a25:	cdq    
  408a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a27:	dec    edi
  408a28:	jo     0x408aa9
  408a2a:	(bad)  
  408a2b:	push   edi
  408a2c:	pop    esi
  408a2d:	push   ebp
  408a2e:	or     DWORD PTR ds:0xc655bac1,eax
  408a34:	call   0x408a8d
	...
  408a45:	into   
  408a46:	push   esp
  408a47:	ds push ebp
  408a49:	jl     0x408a9a
  408a4b:	hlt    
  408a4c:	add    al,0x4a
  408a4e:	(bad)  
  408a4f:	(bad)  
  408a50:	call   0x2efa3d4d
  408a55:	push   cs
  408a56:	jle    0x4089dd
  408a58:	adc    DWORD PTR [esi+0x6093ff4e],ebp
  408a5e:	frstor [ebx-0x22]
  408a61:	and    DWORD PTR [edi-0x2],ecx
  408a64:	push   esp
  408a65:	scas   eax,DWORD PTR es:[edi]
  408a66:	push   esi
  408a67:	inc    DWORD PTR [esi]
  408a69:	xchg   esi,eax
  408a6a:	sbb    BYTE PTR [edi],cl
  408a6c:	shl    BYTE PTR [ecx],1
  408a6e:	dec    edi
  408a6f:	out    0xbd,eax
  408a71:	retf   0xff4e
  408a74:	pusha  
  408a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a76:	gs mul esi
  408a79:	mov    bh,0x80
  408a7b:	test   ecx,eax
  408a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a7e:	dec    esi
  408a7f:	(bad)  
  408a80:	cmp    edi,edi
  408a82:	scas   eax,DWORD PTR es:[edi]
  408a83:	sub    BYTE PTR ss:[edi+0x4e],bl
  408a87:	mov    ch,0xb9
  408a89:	scas   eax,DWORD PTR es:[edi]
  408a8a:	dec    esi
  408a8b:	(bad)  
  408a8c:	mov    esi,0x2828fe65
  408a91:	addr16 pop ebp
  408a93:	adc    DWORD PTR [ebx-0x71],esi
  408a96:	dec    esi
  408a97:	or     ebp,DWORD PTR [ecx+0x5c82f3ac]
  408a9d:	cwde   
  408a9e:	push   esi
  408a9f:	call   DWORD PTR [esi-0x71f62634]
  408aa5:	jo     0x408b25
  408aa7:	test   DWORD PTR [ebp+0x0],esp
	...
  408ab5:	add    BYTE PTR [eax],al
  408ab7:	add    BYTE PTR [edi],ch
  408ab9:	dec    esi
  408aba:	call   DWORD PTR [edx-0x6a7ab996]
  408ac0:	pop    ds
  408ac1:	dec    esi
  408ac2:	call   esp
  408ac4:	pusha  
  408ac5:	add    eax,0x3308b900
  408aca:	mov    dh,0x5e
  408acc:	das    
  408acd:	add    BYTE PTR [ebp-0xb1e0c7],0xb9
  408ad4:	js     0x408a9d
  408ad6:	ss add bl,cl
  408ad9:	add    bh,bh
  408adb:	mov    ch,0x3a
  408add:	sar    esi,0xff
  408ae0:	xor    eax,0xbb290eff
  408ae5:	add    ch,al
  408ae7:	int    0xc3
  408ae9:	mov    ecx,0x3e8a0bfe
  408aee:	adc    al,BYTE PTR [ebx-0x8ed49]
  408af4:	push   ebp
  408af5:	dec    esi
  408af6:	je     0x408b02
  408af8:	repnz mov es,WORD PTR gs:[ebp-0x13eb2]
  408b00:	popa   
  408b01:	cld    
  408b02:	mov    BYTE PTR [ebp-0x13eb2],0xa
  408b09:	add    al,BYTE PTR [eax]
  408b0b:	add    BYTE PTR [edx-0x4f],bl
  408b0e:	lea    esi,[esi-0x427d4dcb]
  408b14:	push   ds
  408b15:	stos   BYTE PTR es:[edi],al
  408b16:	(bad)  
  408b17:	dec    DWORD PTR [edx]
  408b19:	ss add DWORD PTR ds:[eax],0x0
	...
  408b2a:	add    BYTE PTR [edi+0xd],dh
  408b2d:	idiv   edi
  408b2f:	mov    ch,0x6
  408b31:	jne    0x408b69
  408b33:	mov    al,ds:0x16858d09
  408b38:	stos   BYTE PTR es:[edi],al
  408b39:	(bad)  
  408b3a:	call   FWORD PTR [edx-0x121b4b4e]
  408b40:	mov    cl,0xfe
  408b42:	call   0x3fa93f
  408b47:	mov    cl,0xc1
  408b49:	jae    0x408b54
  408b4b:	dec    ecx
  408b4c:	je     0x408b1a
  408b4e:	div    DWORD PTR ds:0x8f74ffb2
  408b54:	mov    dl,0xb4
  408b56:	in     al,0x3d
  408b58:	mov    dl,0xfe
  408b5a:	call   0x3ff739
  408b5f:	arpl   WORD PTR [edi],bx
  408b61:	mov    esp,esp
  408b63:	mov    WORD PTR [esi+0x5c630052],?
  408b69:	add    eax,DWORD PTR [ebx-0xa5384a]
  408b6f:	ins    BYTE PTR es:[edi],dx
  408b70:	pop    ebx
  408b71:	xlat   BYTE PTR ds:[ebx]
  408b72:	push   0xffffffe0
  408b74:	loopne 0x408bd5
  408b76:	neg    DWORD PTR [esp+0x4]
  408b7a:	je     0x408b3d
  408b7c:	fist   WORD PTR [eax+0x52f454e8]
  408b82:	add    bh,cl
  408b84:	xchg   ebp,eax
  408b85:	fild   DWORD PTR [ecx]
  408b87:	arpl   bx,si
  408b89:	xchg   ecx,eax
  408b8a:	jmp    FWORD PTR [esi+0xa75b56]
	...
  408b9c:	add    BYTE PTR [eax],al
  408b9e:	icebp  
  408b9f:	push   ebx
  408ba0:	push   edx
  408ba1:	(bad)  
  408ba2:	out    dx,al
  408ba3:	dec    edx
  408ba4:	pop    edx
  408ba5:	call   FWORD PTR [esp+eiz*2]
  408ba8:	fadd   DWORD PTR [edi]
  408baa:	or     ebp,DWORD PTR [eax-0x6b]
  408bad:	dec    DWORD PTR [esp+esi*1]
  408bb0:	cwde   
  408bb1:	call   0xff92c7c2
  408bb6:	jbe    0x408c0e
  408bb8:	pop    ebx
  408bb9:	in     eax,dx
  408bba:	mov    cl,0x8b
  408bbc:	push   edx
  408bbd:	push   DWORD PTR [esi-0x1b00a55e]
  408bc3:	fwait
  408bc4:	cwde   
  408bc5:	in     al,0xd4
  408bc7:	mov    ds:0x564eff52,eax
  408bcc:	pop    ebx
  408bcd:	lods   eax,DWORD PTR ds:[esi]
  408bce:	adc    DWORD PTR [edx+edx*2-0x1],esi
  408bd2:	push   cs
  408bd3:	fwait
  408bd4:	pop    edx
  408bd5:	(bad)  
  408bd6:	mov    esp,0xcb07d883
  408bdb:	cmc    
  408bdc:	xchg   ebp,eax
  408bdd:	jmp    FWORD PTR [ebx+edx*8-0x24531f69]
  408be4:	push   ecx
  408be5:	call   DWORD PTR [esi]
  408be7:	add    eax,0x97d65bf1
  408bec:	pop    esi
  408bed:	push   edx
  408bee:	mov    WORD PTR [edx+0x4c845a4d],ss
  408bf4:	inc    ecx
  408bf5:	dec    edx
  408bf6:	mov    dh,0x4c
  408bf8:	inc    esi
  408bf9:	push   edx
  408bfa:	scas   al,BYTE PTR es:[edi]
  408bfb:	pop    ecx
  408bfc:	ss push edx
  408bfe:	ins    BYTE PTR es:[edi],dx
  408bff:	pop    ebp
  408c00:	jne    0x408b9a
	...
  408c0e:	add    BYTE PTR [eax],al
  408c10:	add    BYTE PTR [esp+ecx*2+0x2e],ah
  408c14:	cwde   
  408c15:	dec    ebx
  408c16:	push   esp
  408c17:	es push edx
  408c19:	dec    ebx
  408c1a:	xchg   esi,eax
  408c1b:	push   esp
  408c1c:	push   edx
  408c1d:	dec    esp
  408c1e:	dec    esp
  408c1f:	pop    esp
  408c20:	arpl   WORD PTR [esp+ecx*2+0xe],cx
  408c24:	pop    ebx
  408c25:	add    eax,0x34520692
  408c2a:	xchg   edx,eax
  408c2b:	stc    
  408c2c:	pop    ecx
  408c2d:	sub    al,0x4c
  408c2f:	add    DWORD PTR [esi-0x12],ebp
  408c32:	dec    ebx
  408c33:	out    dx,al
  408c34:	push   ecx
  408c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c36:	dec    ebp
  408c37:	rcl    BYTE PTR [esi+edx*1-0x69ae21b4],1
  408c3e:	dec    ecx
  408c3f:	shl    DWORD PTR [edi-0x24],0x4
  408c43:	jmp    0xe93dad82
  408c48:	mov    dh,0xe9
  408c4a:	pop    eax
  408c4b:	push   0x48
  408c4d:	neg    esi
  408c4f:	call   0x348ce331
  408c54:	cld    
  408c55:	les    ebx,FWORD PTR [ecx+0x7dd4515b]
  408c5b:	and    al,0x50
  408c5d:	cmp    eax,DWORD PTR ds:0xdd0560e9
  408c63:	test   al,0x1a
  408c65:	and    al,BYTE PTR ds:0xc66d3f11
  408c6b:	call   0x3dc2c0
  408c70:	or     BYTE PTR [ebp+ebp*1+0x6eff],0x0
	...
  408c84:	sbb    al,0xc2
  408c86:	idiv   DWORD PTR [ecx-0x57c90d48]
  408c8c:	pusha  
  408c8d:	fstp   st(2)
  408c8f:	pop    ds
  408c90:	mov    al,ds:0x6214fe4b
  408c95:	push   ds
  408c96:	inc    ecx
  408c97:	jmp    0x3ef83bb4
  408c9c:	adc    al,BYTE PTR [eax]
  408c9e:	sar    BYTE PTR [ebp+0x35457e3a],0x3f
  408ca5:	push   es
  408ca6:	add    BYTE PTR [esi],dl
  408ca8:	icebp  
  408ca9:	dec    edx
  408caa:	jne    0x408c9d
  408cac:	test   al,0x92
  408cae:	mov    cl,0x16
  408cb0:	mov    dl,0x4a
  408cb2:	jne    0x408cc5
  408cb4:	xchg   edx,eax
  408cb5:	shl    bl,1
  408cb7:	push   es
  408cb8:	or     al,0x3
  408cba:	call   0xff8b5cdd
  408cbf:	test   BYTE PTR ds:0xf5d1e857,0x4a
  408cc6:	call   DWORD PTR [ecx+0x12]
  408cc9:	adc    al,0x41
  408ccb:	jmp    0xc1485d83
  408cd0:	mov    dl,0x49
  408cd2:	dec    esi
  408cd4:	xchg   ebx,eax
  408cd5:	sar    bl,1
  408cd7:	(bad)  
  408cd8:	or     eax,0xd53fe803
  408cdd:	dec    edx
  408cde:	jmp    DWORD PTR [eax+0x1400019e]
  408ce4:	pop    esi
  408ce5:	pop    ecx
  408ce6:	sub    DWORD PTR [ebp+0x0],0x0
	...
  408cf5:	add    BYTE PTR [eax],al
  408cf7:	and    al,0xdf
  408cf9:	call   DWORD PTR [edx]
  408cfb:	bound  ecx,QWORD PTR [edx+0x75]
  408cfe:	loope  0x408d28
  408d00:	daa    
  408d01:	mov    dl,0x8e
  408d03:	adc    edi,DWORD PTR [ebp+eax*2+0x0]
  408d07:	fisubr WORD PTR [esi]
  408d09:	(bad)  
  408d0a:	(bad)  
  408d0b:	fnsave [eax+ebp*2+0x70]
  408d0f:	in     eax,0x47
  408d11:	jmp    DWORD PTR [edi-0x72]
  408d14:	in     eax,dx
  408d15:	inc    eax
  408d16:	add    ch,bh
  408d18:	xor    al,BYTE PTR [edi]
  408d1a:	call   0x3fac4f
  408d1f:	sub    eax,0x97fffb33
  408d24:	dec    esi
  408d25:	out    0x43,eax
  408d27:	clc    
  408d28:	mov    ah,0xfe
  408d2a:	leave  
  408d2b:	cmp    BYTE PTR [edx],al
  408d2d:	add    BYTE PTR [ebp+0x1],dl
  408d30:	stos   BYTE PTR es:[edi],al
  408d31:	add    ah,0x8e
  408d34:	sub    bh,bh
  408d36:	imul   ebx,DWORD PTR [edx-0x4b],0xdd720874
  408d3d:	mov    al,0xff
  408d3f:	ins    DWORD PTR es:[edi],dx
  408d40:	iret   
  408d41:	inc    esp
  408d42:	cld    
  408d43:	loop   0x408d4a
  408d45:	add    bh,ch
  408d47:	pushf  
  408d48:	test   DWORD PTR cs:[edi],esi
  408d4b:	sti    
  408d4c:	add    eax,0x46e58b68
  408d51:	(bad)  
  408d52:	(bad)  
  408d53:	xchg   edi,eax
  408d54:	dec    esi
  408d55:	out    0xaf,eax
  408d57:	and    edi,DWORD PTR [edx+0x6afe]
	...
  408d69:	add    dl,bh
  408d6b:	sub    eax,0x13b37c7
  408d70:	push   0xff4055ae
  408d75:	(bad)  
  408d76:	test   DWORD PTR [edx+0x28],0x95adfa41
  408d7d:	mov    bh,0xad
  408d7f:	mov    ecx,0x1d96c00a
  408d84:	push   0xff40b5a4
  408d89:	dec    edi
  408d8a:	repnz data16 mov bh,0xff
  408d8e:	arpl   WORD PTR [ebx-0x4c],si
  408d91:	arpl   WORD PTR [si+0x5e],bx
  408d95:	mov    esi,0x4116da4b
  408d9a:	arpl   sp,bp
  408d9c:	dec    esi
  408d9d:	jne    0x408dfa
  408d9f:	test   BYTE PTR [edx],bl
  408da1:	fstp   DWORD PTR [edx+ebx*8-0x1d30a9a5]
  408da8:	dec    esi
  408da9:	call   DWORD PTR [esi]
  408dab:	test   al,0x4e
  408dad:	jne    0x408e0a
  408daf:	les    edi,FWORD PTR [ecx+esi*4]
  408db2:	jl     0x408d6e
  408db4:	cmp    al,0xc2
  408db6:	pop    edi
  408db7:	pop    esp
  408db8:	mov    eax,0x47de7f8a
  408dbd:	cld    
  408dbe:	or     eax,0xcaffd96b
  408dc3:	sub    eax,0xf66b754e
  408dc8:	fidiv  DWORD PTR [eax+0x457ce84c]
	...
  408dda:	add    BYTE PTR [eax],al
  408ddc:	add    BYTE PTR [edi-0x1c],al
  408ddf:	sbb    BYTE PTR [eax],ch
  408de1:	mov    ebx,DWORD PTR [ebp+0x32768b03]
  408de7:	sbb    eax,DWORD PTR [ecx+0x63]
  408dea:	fimul  WORD PTR [esi]
  408dec:	add    BYTE PTR [edi+0x54d3dba3],ch
  408df2:	popf   
  408df3:	add    edx,DWORD PTR [edi+0xb]
  408df6:	outs   dx,DWORD PTR ds:[esi]
  408df7:	test   DWORD PTR [eax],eax
  408df9:	arpl   WORD PTR [ebx+0x43],dx
  408dfc:	je     0x408e3c
  408dfe:	or     BYTE PTR [ebx+edx*8-0x42],bl
  408e02:	aaa    
  408e03:	dec    esi
  408e04:	push   0xffc44816
  408e09:	pushf  
  408e0a:	ss push ecx
  408e0c:	mov    bh,0xe4
  408e0e:	(bad)  
  408e0f:	mov    bl,0x67
  408e11:	arpl   WORD PTR [esi+0x5e],bx
  408e14:	mov    esi,0xd8a60533
  408e19:	fs pop ebp
  408e1b:	ret    
  408e1c:	cmp    ah,al
  408e1e:	dec    eax
  408e1f:	sbb    DWORD PTR [edx-0x10],0x625a8e48
  408e26:	mov    edi,0xd2630d68
  408e2b:	add    ch,0xa8
  408e2e:	adc    al,0xa9
  408e30:	mov    WORD PTR [eax+ecx*2-0x686eb192],ds
  408e37:	and    DWORD PTR [edi],eax
  408e39:	push   ss
  408e3a:	xchg   edx,eax
  408e3b:	pop    esi
  408e3c:	fmul   DWORD PTR [eax+0xfbdc48]
	...
  408e4e:	add    BYTE PTR [eax],al
  408e50:	test   al,al
  408e52:	xchg   edi,eax
  408e53:	dec    esi
  408e54:	je     0x408dfe
  408e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e57:	cmp    al,0xa1
  408e59:	add    ecx,ebp
  408e5b:	mov    eax,0x476a59d9
  408e60:	pop    edi
  408e61:	fucomi st,st(0)
  408e63:	fnstenv [edx+0x48]
  408e66:	pushf  
  408e67:	sti    
  408e68:	inc    esp
  408e69:	pop    esi
  408e6a:	pop    ecx
  408e6b:	dec    esi
  408e6c:	inc    esp
  408e6d:	jle    0x408e1b
  408e6f:	dec    edi
  408e70:	retf   
  408e71:	add    eax,0xdcf55ee9
  408e76:	not    DWORD PTR ds:0x5b9105a2
  408e7c:	ins    BYTE PTR es:[edi],dx
  408e7d:	(bad)  
  408e7e:	call   0x13e24d1
  408e83:	xchg   esp,eax
  408e84:	cmp    ecx,DWORD PTR [eax-0x1a]
  408e87:	dec    ebp
  408e88:	xchg   esi,eax
  408e89:	dec    ecx
  408e8a:	(bad)  
  408e8c:	pop    esp
  408e8d:	pop    ebp
  408e8e:	jecxz  0x408e22
  408e90:	cld    
  408e91:	inc    edi
  408e92:	mov    al,ds:0x1c055f42
  408e97:	jns    0x408e98
  408e99:	test   DWORD PTR [ebp+0x47ec30],esp
  408e9f:	mov    dh,0x5c
  408ea1:	ret    0x19fb
  408ea4:	ror    BYTE PTR es:[ebx],cl
  408ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ea8:	je     0x408ea2
  408eaa:	sub    BYTE PTR [eax],ch
  408eac:	pop    edi
  408ead:	pop    ebp
  408eae:	int    0x6c
  408eb0:	addr16 add eax,0xa90b
	...
  408ec2:	add    BYTE PTR [esi+0x60e8a180],dh
  408ec8:	add    eax,0x51724c7
  408ecd:	add    cl,ch
  408ecf:	pusha  
  408ed0:	inc    eax
  408ed1:	inc    ebp
  408ed2:	jne    0x408efa
  408ed4:	add    BYTE PTR [eax],al
  408ed6:	jmp    0xe9a9d685
  408edb:	stos   BYTE PTR es:[edi],al
  408edc:	inc    edi
  408edd:	imul   ebp,ecx,0xb9f3c1fd
  408ee3:	cmc    
  408ee4:	xor    esp,0x50481e3e
  408eea:	mov    WORD PTR ds:[edi-0x1],cs
  408eee:	mov    esp,0x649f5dac
  408ef3:	pop    edi
  408ef4:	add    eax,0x22b290b
  408ef9:	jmp    0x45f083
  408efe:	and    eax,0xa7e9411d
  408f04:	ror    BYTE PTR [ebx],1
  408f06:	adc    DWORD PTR [ecx-0xf010071],esp
  408f0c:	jnp    0x408ede
  408f0e:	fs in  al,0x51
  408f11:	imul   esi
  408f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f14:	mov    ch,0x51
  408f16:	shl    edx,1
  408f18:	(bad)  
  408f19:	(bad)  
  408f1a:	fimul  WORD PTR [ecx-0x50210f80]
  408f20:	inc    esi
  408f21:	call   0xff876307
	...
  408f36:	nop
  408f37:	add    DWORD PTR [eax+0xe],ebp
  408f3a:	bound  eax,QWORD PTR [edx-0x1]
  408f3d:	(bad)  
  408f3e:	pop    edi
  408f3f:	mov    dl,0xf6
  408f41:	inc    DWORD PTR ds:0xb30f34ba
  408f47:	inc    ebx
  408f48:	jmp    edi
  408f4a:	shl    BYTE PTR [eax-0x1],cl
  408f4d:	inc    DWORD PTR [ebx+0x7f]
  408f50:	in     al,0xf7
  408f52:	in     eax,0xb9
  408f54:	imul   eax,DWORD PTR [eax],0x4136b752
  408f5a:	mov    edx,0x1df0b4b9
  408f5f:	mov    ecx,0x49cffffe
  408f64:	sub    BYTE PTR [ecx+0x7a],al
  408f67:	stos   BYTE PTR es:[edi],al
  408f68:	jmp    0x88f9b522
  408f6d:	test   DWORD PTR [esi],esp
  408f6f:	mov    cl,0xfe
  408f71:	jmp    DWORD PTR [eax+0x62056802]
  408f77:	inc    edx
  408f78:	(bad)  
  408f79:	(bad)  
  408f7a:	out    dx,eax
  408f7b:	mov    cl,0xf6
  408f7d:	call   DWORD PTR [ebp+0x630f34b9]
  408f83:	inc    edx
  408f84:	jmp    edi
  408f86:	xchg   esi,eax
  408f87:	outs   dx,DWORD PTR ds:[esi]
  408f88:	(bad)  
  408f89:	call   ebx
  408f8b:	jg     0x408f75
  408f8d:	not    DWORD PTR [ebp-0x47]
  408f90:	mov    WORD PTR [ebp-0x14e7a],es
  408f96:	retf   0x1629
  408f99:	cmp    BYTE PTR [eax],al
	...
  408fa7:	add    BYTE PTR [eax],al
  408fa9:	sti    
  408faa:	add    edi,edi
  408fac:	mov    ch,0x1a
  408fae:	mov    dl,0xfe
  408fb0:	inc    DWORD PTR ds:0x3b290ef0
  408fb6:	add    eax,ebp
  408fb8:	test   eax,0xbfeb9ef
  408fbd:	arpl   WORD PTR [eax+edx*8+0x2878e018],bx
  408fc4:	imul   esp
  408fc6:	add    BYTE PTR ds:[ebp+0x53],dh
  408fca:	xchg   DWORD PTR [edi+ecx*4],edx
  408fcd:	out    0x3b,al
  408fcf:	push   ebx
  408fd0:	call   esp
  408fd2:	jmp    0x40902f
  408fd4:	jbe    0x408fe7
  408fd6:	lahf   
  408fd7:	dec    ebx
  408fd8:	jmp    0x409049
  408fda:	push   ebx
  408fdb:	inc    ebx
  408fdc:	je     0x409043
  408fde:	or     al,0x5c
  408fe0:	push   0xfffffff1
  408fe2:	jbe    0x40902f
  408fe4:	(bad)  
  408fe5:	out    0x7b,al
  408fe7:	push   ebx
  408fe8:	jmp    DWORD PTR [eax+esi*1-0x249cfffd]
  408fef:	mov    ah,ah
  408ff1:	mov    esi,ss
  408ff3:	dec    edx
  408ff4:	add    BYTE PTR [edi],dl
  408ff6:	xchg   DWORD PTR [esi+0x4aae77bd],eax
  408ffc:	jmp    DWORD PTR [ebx+0x28]
  408fff:	mov    ecx,0x52c3b682
  409004:	jmp    FWORD PTR [ebx+ebx*2-0x31]
  409008:	inc    esp
  409009:	sti    
  40900a:	pop    ebx
  40900b:	add    ebp,edi
	...
  409019:	add    BYTE PTR [eax],al
  40901b:	add    BYTE PTR ds:0x4b07d0fc,bl
  409021:	out    dx,al
  409022:	cdq    
  409023:	dec    DWORD PTR [esp+ebp*8-0x70]
  409027:	in     al,dx
  409028:	dec    esp
  409029:	and    al,0x4b
  40902b:	push   DWORD PTR [esi+0x4155b26]
  409031:	adc    al,0x4b
  409033:	push   esi
  409035:	push   ss
  409036:	push   ebx
  409037:	jmp    DWORD PTR [esp+eax*2]
  40903a:	rol    BYTE PTR [edi],1
  40903c:	or     esi,DWORD PTR [edx+ebx*4]
  40903f:	call   DWORD PTR [esp+esi*1]
  409042:	nop
  409043:	in     al,0x14
  409045:	push   es
  409046:	out    0x4a,al
  409048:	add    al,0xbb
  40904a:	lock pop ebx
  40904c:	cli    
  40904d:	jae    0x409025
  40904f:	dec    edx
  409050:	hlt    
  409051:	jp     0x40901c
  409053:	push   edx
  409054:	in     al,dx
  409055:	inc    esp
  409056:	(bad)  
  409057:	rcr    BYTE PTR [ebp+ebp*1+0x70],1
  40905b:	cdq    
  40905c:	fadd   QWORD PTR [esi+esi*4-0x70]
  409060:	mov    edi,0xbb4aae3c
  409065:	cmp    bl,BYTE PTR [eax+0x4a]
  409068:	les    eax,FWORD PTR [esp+edx*2+0x57]
  40906c:	mov    ah,0x44
  40906e:	xchg   esi,eax
  40906f:	pop    ebx
  409070:	leave  
  409071:	jbe    0x409001
  409073:	dec    edx
  409074:	lods   al,BYTE PTR ds:[esi]
  409075:	jp     0x409008
  409077:	push   edx
  409078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409079:	inc    esp
  40907a:	xchg   ecx,eax
  40907b:	sub    dl,dl
  40907d:	inc    esp
  40907e:	jbe    0x4090ca
	...
  40908c:	add    BYTE PTR [eax],al
  40908e:	add    dh,cl
  409090:	xor    eax,0x2d8c4a76
  409095:	cmp    eax,0x5e448494
  40909a:	shl    BYTE PTR [esi+ebp*1-0x39],0x49
  40909f:	je     0x4090e5
  4090a1:	dec    esi
  4090a2:	shr    BYTE PTR [eax+0x2d],1
  4090a5:	out    0x7f,eax
  4090a7:	arpl   WORD PTR ds:0x56b4530,ax
  4090ad:	pushf  
  4090ae:	jle    0x4090f7
  4090b0:	mov    BYTE PTR ds:0x9305b947,ah
  4090b6:	test   BYTE PTR [ebp-0x46],0xf0
  4090ba:	pop    ebx
  4090bb:	inc    ebp
  4090bc:	jae    0x4090d4
  4090be:	dec    edx
  4090bf:	jmp    0xa7fd:0x4ddb0cc9
  4090c6:	add    esp,DWORD PTR [edx+edi*4]
  4090c9:	lock pop ebx
  4090cb:	jne    0x409110
  4090cd:	add    dh,dh
  4090cf:	stos   BYTE PTR es:[edi],al
  4090d0:	inc    esp
  4090d1:	jne    0x4090c0
  4090d3:	call   0xff73:0x10d107ba
  4090da:	fidivr WORD PTR [eax]
  4090dc:	inc    edi
  4090dd:	add    al,0xe9
  4090df:	lds    ecx,FWORD PTR [esi+0x41a36aec]
  4090e5:	push   0xffffffe9
  4090e7:	push   es
  4090e8:	sbb    bh,bh
  4090ea:	xor    al,0xdf
  4090ec:	sub    esi,DWORD PTR [ebp-0x76bbd579]
  4090f2:	and    al,0x0
	...
  409100:	add    BYTE PTR [eax],al
  409102:	sbb    ebp,DWORD PTR [ebp-0x7cd41701]
  409108:	push   0xffc66f30
  40910d:	add    BYTE PTR [edx-0x3],ch
  409110:	inc    eax
  409111:	jmp    0x91484b31
  409116:	pushf  
  409117:	pop    ecx
  409118:	(bad)  
  409119:	jle    0x409145
  40911b:	mov    edx,0xba476fb
  409120:	call   0xff847abc
  409125:	xor    BYTE PTR ds:0xffb40009,bl
  40912b:	xor    BYTE PTR [ecx-0xc3b8d3],al
  409131:	dec    esi
  409132:	hlt    
  409133:	leave  
  409134:	sti    
  409135:	cdq    
  409136:	sbb    edi,DWORD PTR [edx+0x126c3e0b]
  40913c:	sub    DWORD PTR [eax+0x6a992d60],ebp
  409142:	addr16 add eax,0x8a4a290b
  409148:	int    0xe8
  40914a:	pusha  
  40914b:	add    eax,0x5a8acc7
  409150:	add    cl,ch
  409152:	pusha  
  409153:	dec    edx
  409154:	inc    ebp
  409155:	add    BYTE PTR [esi],ah
  409157:	into   
  409158:	push   es
  409159:	add    BYTE PTR [edx],cl
  40915b:	popa   
  40915c:	jmp    FWORD PTR [ecx+0xa]
  40915f:	popa   
  409160:	jmp    FWORD PTR [ecx-0x6]
  409163:	mov    ebx,0xf444
	...
  409174:	add    BYTE PTR [edx-0x46],cl
  409177:	test   ah,dh
  409179:	adc    eax,0xd50fece
  40917e:	push   esp
  40917f:	idiv   edi
  409181:	xchg   edi,eax
  409182:	int    0xe7
  409184:	imul   edi,DWORD PTR [ecx+0x6],0x0
  409188:	or     ecx,DWORD PTR [edx]
  40918a:	push   ebx
  40918b:	add    al,0xe9
  40918d:	cmp    al,BYTE PTR [edi]
  40918f:	add    BYTE PTR [eax],al
  409191:	and    cl,BYTE PTR [ecx-0x3245bed8]
  409197:	je     0x4091a5
  409199:	sar    BYTE PTR [ebx+esi*4-0x75893201],cl
  4091a0:	ror    BYTE PTR [edi],1
  4091a2:	ret    
  4091a3:	repz neg ebp
  4091a6:	int    0x4f
  4091a8:	push   edx
  4091a9:	repnz dec esp
  4091ab:	mov    bl,0xff
  4091ad:	or     eax,0x15f084bf
  4091b2:	int    0xfe
  4091b4:	call   0x4027ff
  4091b9:	(bad)  
  4091bb:	xlat   BYTE PTR ds:[ebx]
  4091bc:	test   DWORD PTR ds:0xa5684fcd,0x1d00410e
  4091c6:	xchg   ebx,eax
  4091c7:	lock neg DWORD PTR [ebp+0x3d35fecd]
  4091ce:	pop    ds
  4091cf:	inc    ecx
  4091d0:	add    BYTE PTR [edx+0x7dffb2fd],ah
  4091d6:	mov    edi,0xe484
	...
  4091e7:	add    BYTE PTR [ebp-0x33],dl
  4091ea:	(bad)  
  4091eb:	push   0x63
  4091ed:	sub    al,0xdb
  4091ef:	push   esp
  4091f0:	imul   ebp,DWORD PTR [ebp+0x3],0xffffffff
  4091f4:	out    dx,al
  4091f5:	cmp    ecx,DWORD PTR [edi-0x1]
  4091f8:	sbb    al,0x43
  4091fa:	or     eax,0x36d4a0f
  4091ff:	call   0xff8890d6
  409204:	fidiv  DWORD PTR [eax+0x62fcf757]
  40920a:	(bad)  
  40920c:	jl     0x409208
  40920e:	or     eax,DWORD PTR [ecx+0x63]
  409211:	push   ebx
  409212:	xchg   ecx,eax
  409213:	lock in al,dx
  409215:	dec    edx
  409216:	inc    edi
  409217:	call   DWORD PTR [esi+0x63411c33]
  40921d:	inc    esp
  40921e:	jae    0x4091d3
  409220:	int3   
  409221:	jb     0x4092a0
  409223:	test   DWORD PTR [ebx-0x1100b85e],edi
  409229:	test   al,0x27
  40922b:	div    DWORD PTR [edx+ebx*4+0x543367b4]
  409232:	(bad)  
  409233:	jmp    DWORD PTR [ebp-0x6308ac00]
  409239:	ret    0x3546
  40923c:	fs inc ebp
  40923e:	(bad)  
  40923f:	inc    DWORD PTR [ebx+edi*1+0x3684ff92]
  409246:	inc    ebx
  409247:	je     0x4092a3
  409249:	scas   eax,DWORD PTR es:[edi]
  40924a:	mov    ah,bl
	...
  409258:	add    BYTE PTR [eax],al
  40925a:	add    BYTE PTR [edx+ebx*8+0x46],ch
  40925e:	add    al,0xf6
  409260:	cmp    eax,DWORD PTR [esi+0x30]
  409263:	aam    0xb0
  409265:	arpl   di,si
  409267:	pop    esp
  409268:	add    BYTE PTR [edi+eiz*8-0xb9416a],dh
  40926f:	cmp    BYTE PTR [ebx-0x6],bl
  409272:	mov    edi,0xb3ef05cf
  409277:	inc    esp
  409278:	neg    DWORD PTR [eax+0x47]
  40927b:	xor    al,0x49
  40927d:	ins    BYTE PTR es:[edi],dx
  40927e:	fs xor al,0x41
  409281:	push   cs
  409282:	icebp  
  409283:	and    al,0x41
  409285:	jmp    0xf66a710c
  40928a:	inc    esi
  40928b:	adc    al,0x6
  40928d:	jge    0x409254
  40928f:	loope  0x409213
  409291:	std    
  409292:	dec    esi
  409293:	add    al,0x41
  409295:	jmp    0x9cc50a69
  40929a:	pop    ebx
  40929b:	in     al,dx
  40929c:	inc    eax
  40929d:	(bad)  
  40929e:	add    esi,DWORD PTR [edi-0x4f]
  4092a1:	inc    edx
  4092a2:	add    al,0xd6
  4092a4:	mov    ah,BYTE PTR [ecx+0x1940dc4e]
  4092aa:	inc    edi
  4092ab:	push   cs
  4092ac:	sub    bh,BYTE PTR [esi+0x1b2dcc46]
  4092b2:	xor    esp,eax
  4092b4:	inc    eax
  4092b5:	repnz inc ebx
  4092b7:	aaa    
  4092b8:	fldcw  WORD PTR [ecx-0x78]
  4092bb:	fwait
  4092bc:	cmp    BYTE PTR [esi+0x46],dl
	...
  4092ce:	arpl   WORD PTR [ecx+0x40a4dc21],di
  4092d4:	xchg   esi,eax
  4092d5:	test   DWORD PTR [edx+edi*4+0x70fc5bf0],ebx
  4092dc:	jbe    0x409324
  4092de:	mov    WORD PTR [edx+0x7d],?
  4092e1:	dec    esi
  4092e2:	test   BYTE PTR [eax+0x66],al
  4092e5:	shl    BYTE PTR [ebp+ebp*1-0x5e],1
  4092e9:	xchg   edi,eax
  4092ea:	je     0x40932c
  4092ec:	push   esi
  4092ed:	nop
  4092ee:	jnp    0x409328
  4092f0:	dec    esi
  4092f1:	inc    esi
  4092f2:	fs mov edx,0x710e5bf0
  4092f8:	ds inc esi
  4092fa:	push   esp
  4092fb:	jp     0x4092fd
  4092fd:	adc    DWORD PTR [ebp-0xcd100c0],ebx
  409303:	sub    bh,dh
  409305:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409307:	inc    eax
  409308:	jne    0x4092fb
  40930a:	cwde   
  40930b:	mov    dl,0xab
  40930d:	push   ss
  40930e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40930f:	inc    eax
  409310:	mov    ch,0x9
  409312:	xchg   ebp,eax
  409313:	inc    eax
  409314:	inc    DWORD PTR [esi]
  409316:	xor    ecx,DWORD PTR [eax]
  409318:	call   0xff807fed
  40931d:	neg    ah
  40931f:	sub    bh,dh
  409321:	out    dx,al
  409322:	sahf   
  409323:	sub    eax,0x40a69695
  409328:	call   DWORD PTR [ebx+ebx*4-0x702900c8]
  40932f:	mov    ebp,DWORD PTR [edi+0xce]
	...
  409341:	sahf   
  409342:	inc    eax
  409343:	mov    ch,0xd1
  409345:	cs inc eax
  409347:	call   ecx
  409349:	sahf   
  40934a:	outs   dx,BYTE PTR ds:[esi]
  40934b:	push   DWORD PTR [esi-0x490f85da]
  409351:	push   ds
  409352:	inc    eax
  409353:	call   0xff806975
  409358:	sahf   
  409359:	hlt    
  40935a:	aaa    
  40935b:	jmp    0xff80b88b
  409360:	mov    ss,WORD PTR [ebx+edi*1+0x4e047e8]
  409367:	add    BYTE PTR [eax+0x1c000d21],dh
  40936d:	or     dh,BYTE PTR [ecx]
  40936f:	and    DWORD PTR [ebp-0xa8abfcd],0x18
  409376:	xlat   BYTE PTR ds:[ebx]
  409377:	jg     0x409362
  409379:	pusha  
  40937a:	mov    es,WORD PTR [ebp+0x51]
  40937d:	es mov edx,0x6ebd41f7
  409383:	inc    DWORD PTR [eax]
  409385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409386:	mov    edx,0x4e95fc44
  40938b:	sti    
  40938c:	dec    DWORD PTR [edi]
  40938e:	retf   
  40938f:	(bad)  
  409390:	jne    0x4093b8
  409392:	fist   DWORD PTR [esi]
  409394:	mov    ebx,0xc00ac885
  409399:	into   
  40939a:	or     BYTE PTR [ecx-0xa4b1bb],cl
  4093a0:	mov    edi,?
  4093a2:	into   
  4093a3:	dec    edi
  4093a4:	inc    DWORD PTR [eax]
	...
  4093b2:	add    BYTE PTR [eax],al
  4093b4:	lahf   
  4093b5:	(bad)  
  4093b6:	out    0x7b,eax
  4093b8:	outs   dx,BYTE PTR ds:[esi]
  4093b9:	enter  0xbfe,0x3a
  4093bd:	push   ebp
  4093be:	sub    BYTE PTR [eax-0x6],ch
  4093c1:	xor    ch,dh
  4093c3:	mov    esi,0xe8075005
  4093c8:	jecxz  0x409367
  4093ca:	(bad)  
  4093cb:	call   DWORD PTR ds:0x8ffff750
  4093d1:	cmp    eax,0xdad275fe
  4093d6:	shr    BYTE PTR [ebx+0x75feca15],0xe
  4093dd:	retf   0xfc74
  4093e0:	cmc    
  4093e1:	dec    edi
  4093e2:	pop    es
  4093e3:	call   0x403101
  4093e8:	aad    0x4f
  4093ea:	sti    
  4093eb:	call   0x402cd6
  4093f0:	add    eax,ebp
  4093f2:	pop    es
  4093f3:	add    BYTE PTR [edi-0x44],bh
  4093f6:	jmp    0x40937b
  4093f8:	mov    esi,0x8fff55da
  4093fd:	ss out 0xad,eax
  409400:	dec    ecx
  409401:	leave  
  409402:	dec    BYTE PTR [ebx]
  409404:	dec    edx
  409405:	dec    edi
  409406:	add    al,0x5e
  409408:	xor    eax,esp
  40940a:	pop    es
  40940b:	add    BYTE PTR [ebx-0x57],ah
  40940e:	mov    ebp,0xcdcf13ef
  409413:	or     ecx,DWORD PTR [ebx+0x67]
  409416:	(bad)  
  409417:	inc    DWORD PTR [eax]
	...
  409425:	add    BYTE PTR [eax],al
  409427:	push   esp
  409428:	xor    eax,DWORD PTR [ebx+0xf]
  40942b:	out    0xd1,eax
  40942d:	add    al,BYTE PTR [eax]
  40942f:	arpl   di,bp
  409431:	int    0xfb
  409433:	dec    ebx
  409434:	repz xchg esp,eax
  409436:	push   DWORD PTR [esi*4-0x5ed31443]
  40943d:	inc    edi
  40943e:	jmp    FWORD PTR [esi+0x1b754340]
  409444:	adc    al,0x52
  409446:	scas   al,BYTE PTR es:[edi]
  409447:	adc    al,0x3f
  409449:	ja     0x4094c0
  40944b:	inc    DWORD PTR [edx]
  40944d:	mov    edx,0xc273ba67
  409452:	call   DWORD PTR [esi+0x6380c554]
  409458:	sub    al,0xe
  40945a:	shl    BYTE PTR [esi+0x2a],0x2e
  40945e:	cmp    eax,0xa8ac5bd8
  409463:	fwait
  409464:	in     eax,dx
  409465:	add    ebp,eax
  409467:	fdivp  st(6),st
  409469:	add    eax,DWORD PTR [eax]
  40946b:	pusha  
  40946c:	jl     0x4093fb
  40946e:	jne    0x40942b
  409470:	ret    
  409471:	jnp    0x4094ab
  409473:	and    ch,BYTE PTR [ecx+ebx*8]
  409476:	out    0x54,eax
  409478:	lods   eax,DWORD PTR ds:[esi]
  409479:	add    eax,DWORD PTR [eax]
  40947b:	pop    eax
  40947c:	ins    BYTE PTR es:[edi],dx
  40947d:	mov    ecx,0x8d32b801
  409482:	adc    BYTE PTR [ebp+0x3150032b],ah
  409488:	mov    edi,0xe7b8
	...
  409499:	add    BYTE PTR [eax+eax*2-0x527517f5],cl
  4094a0:	inc    edx
  4094a1:	call   FWORD PTR [ecx]
  4094a3:	add    eax,0x85538bc1
  4094a8:	pop    ds
  4094a9:	add    al,0xf6
  4094ab:	jb     0x40946e
  4094ad:	add    al,0x53
  4094af:	pop    DWORD PTR cs:[ebx-0x2a]
  4094b3:	or     eax,0x3d095051
  4094b8:	ds inc ebx
  4094ba:	(bad)  
  4094bb:	cmp    DWORD PTR [esi],esi
  4094bd:	mov    ecx,0xbb43d38
  4094c2:	dec    ebx
  4094c3:	xor    dl,BYTE PTR [ebx+0x43]
  4094c6:	xor    al,0x3d
  4094c8:	xchg   esp,eax
  4094c9:	das    
  4094ca:	cmp    ebp,ebx
  4094cc:	inc    esi
  4094cd:	inc    ebx
  4094ce:	and    al,0x8b
  4094d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094d1:	xor    esi,DWORD PTR [ebx+0x14779a2d]
  4094d7:	cmp    eax,0x4ead0412
  4094dc:	sub    ecx,DWORD PTR [ebx+eiz*2]
  4094df:	shl    BYTE PTR [ecx+0x30],cl
  4094e2:	loopne 0x409525
  4094e4:	in     eax,0xad
  4094e6:	hlt    
  4094e7:	scas   al,BYTE PTR es:[edi]
  4094e8:	repz inc edx
  4094ea:	jbe    0x4094f9
  4094ec:	rol    esi,0xb9
  4094ef:	cmp    al,0xce
  4094f1:	mov    WORD PTR [esi],fs
  4094f3:	cmp    DWORD PTR [ecx-0x47],edx
  4094f6:	mov    esi,es
  4094f8:	call   0xc14deb3f
  4094fd:	push   0x0
	...
  40950b:	add    BYTE PTR [eax],al
  40950d:	(bad)  
  40950e:	cmp    al,0xae
  409510:	lods   eax,DWORD PTR ds:[esi]
  409511:	mov    esp,0x23fbb5a4
  409516:	add    eax,0xc66b7f11
  40951b:	call   0xc04d0362
  409520:	les    ebx,FWORD PTR [esp+0x3c947385]
  409527:	repnz inc ebx
  409529:	pop    ss
  40952a:	pop    ds
  40952b:	add    BYTE PTR [ecx],al
  40952d:	sar    ebp,0x40
  409530:	jmp    0x9908b9c5
  409535:	and    DWORD PTR [eax+edx*2],edi
  409538:	mov    ecx,0x4107b221
  40953d:	cmp    eax,0x884eff3b
  409542:	inc    ebx
  409543:	lods   eax,DWORD PTR ds:[esi]
  409544:	inc    esi
  409545:	mov    eax,ds:0x725119af
  40954a:	ja     0x40954b
  40954c:	ss push ebp
  40954e:	inc    ebp
  40954f:	je     0x409555
  409551:	setbe  BYTE PTR [eax]
  409554:	test   al,0x60
  409556:	aad    0xe7
  409558:	dec    edx
  409559:	mov    bh,0x3c
  40955b:	inc    DWORD PTR [ecx-0x16bf02fe]
  409561:	xor    BYTE PTR [eax+ebx*4],ah
  409564:	cmp    BYTE PTR [ecx-0x5e66afc4],ah
  40956a:	mov    dl,0x7
  40956c:	add    DWORD PTR [ebp+0xeeff3b],ecx
	...
  40957e:	add    BYTE PTR [eax],al
  409580:	dec    ecx
  409581:	xchg   ebx,eax
  409582:	lods   eax,DWORD PTR ds:[esi]
  409583:	out    0xa2,al
  409585:	scas   eax,DWORD PTR es:[edi]
  409586:	sbb    edx,ecx
  409588:	xor    DWORD PTR [esi-0x1],0x744556d6
  40958f:	add    al,0xf
  409591:	xchg   esi,eax
  409592:	cmp    BYTE PTR [eax],ch
  409594:	pop    edi
  409595:	aad    0xe7
  409597:	cmp    dl,BYTE PTR [eax+0x3c]
  40959a:	inc    DWORD PTR [ecx+0x1]
  40959d:	std    
  40959e:	inc    eax
  40959f:	jmp    0x58a8b934
  4095a4:	and    bh,BYTE PTR [eax+edx*2]
  4095a7:	cmp    DWORD PTR [edx],esp
  4095a9:	mov    dl,0x7
  4095ab:	sbb    esi,0x4f8eff3a
  4095b1:	mov    ds:0xc5dd00ac,eax
  4095b6:	imul   esp,DWORD PTR [ebx],0xffb0b6f2
  4095bc:	or     eax,0xa774c00a
  4095c1:	outs   dx,DWORD PTR ds:[esi]
  4095c2:	xchg   ecx,eax
  4095c3:	cmp    bl,cl
  4095c5:	pop    es
  4095c6:	push   eax
  4095c7:	call   0x3f4c85
  4095cc:	mov    ds:0x4a413865,al
  4095d1:	push   edi
  4095d2:	out    0x38,eax
  4095d4:	fcmovnb st,st(4)
  4095d6:	(bad)  
  4095d7:	push   eax
  4095d8:	jmp    0xfd50:0xa20874c5
  4095df:	dec    DWORD PTR [ebp+0xad35e9]
	...
  4095f1:	add    BYTE PTR [eax],al
  4095f3:	jge    0x4095b9
  4095f5:	(bad)  
  4095f6:	jne    0x409646
  4095f8:	les    esi,FWORD PTR [eax+ecx*1+0x62]
  4095fc:	scas   al,BYTE PTR es:[edi]
  4095fd:	test   eax,0xc1ce6dff
  409602:	add    al,0xa
  409604:	push   esp
  409605:	mov    ch,ah
  409607:	jnp    0x4095d6
  409609:	fcomi  st,st(7)
  40960b:	or     eax,0xe458cc6
  409610:	push   edi
  409611:	(bad)  
  409612:	jne    0x40960e
  409614:	lds    esi,FWORD PTR [esp+ecx*1+0x12]
  409618:	jbe    0x409698
  40961a:	add    dl,bh
  40961c:	or     eax,eax
  40961e:	cmova  eax,DWORD PTR [ecx+eax*1+0x44cdca00]
  409626:	clc    
  409627:	mov    edx,0xf5000006
  40962c:	inc    ebx
  40962d:	repz inc ebp
  409630:	push   es
  409631:	add    BYTE PTR [edx-0x36],ch
  409634:	push   0x68ba69ff
  409639:	dec    DWORD PTR [ebx+eiz*2-0x11afc817]
  409640:	mov    eax,ds:0x8394f736
  409645:	sar    esi,cl
  409647:	push   ss
  409648:	test   BYTE PTR [eax+0x75],al
  40964b:	xchg   DWORD PTR [edx+eax*8+0xc2c637e],eax
  409652:	shr    bh,0x28
  409655:	sub    al,BYTE PTR [ecx+0x0]
	...
  409663:	add    BYTE PTR [eax],al
  409665:	add    BYTE PTR [edx+0x2c],ah
  409668:	add    ebp,DWORD PTR [eax-0x1d]
  40966b:	add    al,0xc3
  40966d:	call   FWORD PTR [ebp+0x51]
  409670:	adc    ebp,eax
  409672:	mov    edi,0xb3ff3fbc
  409677:	mov    bh,0x52
  409679:	(bad)  
  40967a:	fdivrp st(7),st
  40967c:	aaa    
  40967d:	(bad)  
  40967e:	cmp    al,0x9c
  409680:	aad    0xe7
  409682:	(bad)  
  409683:	fdivr  QWORD PTR [edi]
  409685:	(bad)  
  409686:	fisub  DWORD PTR [eax+0x1324f732]
  40968c:	sub    ebp,DWORD PTR [edx+0x6a400acf]
  409692:	arpl   WORD PTR [eax+esi*1+0x402ca238],dx
  409699:	mov    ch,0x13
  40969b:	cmp    edi,DWORD PTR [edi]
  40969d:	(bad)  
  40969e:	cld    
  40969f:	mov    al,0xe
  4096a1:	call   0xff80296c
  4096a6:	fisub  DWORD PTR [eax+0x52e4f727]
  4096ac:	stos   BYTE PTR es:[edi],al
  4096ad:	inc    DWORD PTR [esp+edx*2-0x4]
  4096b1:	inc    eax
  4096b2:	arpl   WORD PTR [ebx+0x79],ax
  4096b5:	lock aam 0x7a
  4096b8:	aas    
  4096b9:	dec    DWORD PTR [esi+0x20]
  4096bc:	sub    edx,DWORD PTR [edx-0x76c094f4]
  4096c2:	fiadd  WORD PTR [ecx+ecx*4]
  4096c5:	aaa    
  4096c6:	lods   al,BYTE PTR ds:[esi]
  4096c7:	cmp    DWORD PTR [ebx],edx
  4096c9:	add    al,0x0
	...
  4096d7:	add    BYTE PTR [eax],al
  4096d9:	cmp    ebx,DWORD PTR [edx-0x2f]
  4096dc:	les    ebx,FWORD PTR [edx+edi*1+0x398c3454]
  4096e3:	xchg   BYTE PTR [edi],bh
  4096e5:	push   ss
  4096e6:	or     DWORD PTR [ecx+0x7639b5b7],edx
  4096ec:	(bad)  
  4096ed:	out    0x28,al
  4096ef:	jbe    0x409730
  4096f1:	je     0x4096a1
  4096f3:	call   0xa83d1da3
  4096f8:	add    esp,DWORD PTR [edi+ebp*2+0x59]
  4096fc:	aaa    
  4096fd:	pop    esp
  4096fe:	cmp    DWORD PTR [esi-0x47],ecx
  409701:	push   0x4c6ea52d
  409706:	cmp    DWORD PTR [eax-0x77],esi
  409709:	cmp    esi,DWORD PTR [ecx]
  40970b:	ss aas 
  40970d:	leave  
  40970e:	add    eax,0xc67a01c1
  409713:	call   0x16768d56
  409718:	aas    
  409719:	and    al,0x39
  40971b:	pushf  
  40971c:	ud2    
  40971e:	(bad)  
  40971f:	cmp    eax,0x6c8f143f
  409724:	pusha  
  409725:	adc    al,0x39
  409727:	inc    BYTE PTR [edx+0x3efe21c6]
  40972d:	cld    
  40972e:	add    eax,0x7ae00c74
  409733:	leave  
  409734:	ss in  al,dx
  409736:	cmp    cl,ch
  409738:	mov    bh,0x7f
  40973a:	test   BYTE PTR [edi+ebp*1+0x0],dl
	...
  409749:	add    BYTE PTR [eax],al
  40974b:	add    ah,dl
  40974d:	cmp    dh,cl
  40974f:	add    ecx,DWORD PTR [edi-0x27]
  409752:	imul   eax,DWORD PTR [eax+0x3ebe30bb],0x19ffb163
  40975c:	(bad)  
  40975e:	(bad)  
  40975f:	mov    esi,0xf1753836
  409764:	js     0x409722
  409766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409767:	sahf   
  409768:	cmp    BYTE PTR gs:[ebp-0xc7aa7b],dh
  40976f:	mov    ds,ebx
  409771:	add    al,ch
  409773:	mov    dh,0xf8
  409775:	aaa    
  409776:	(bad)  
  409777:	jle    0x409784
  409779:	sub    eax,0x383d76f7
  40977e:	jne    0x409761
  409780:	dec    eax
  409781:	inc    esi
  409782:	test   al,0x66
  409784:	sub    eax,0x2d45b538
  409789:	cmp    bh,bh
  40978b:	push   esi
  40978c:	sbb    eax,DWORD PTR [eax]
  40978e:	call   0xff79602d
  409793:	inc    esi
  409794:	retf   
  409795:	and    eax,0x38853ef7
  40979a:	jne    0x40977d
  40979c:	mov    BYTE PTR [edx-0x58],ah
  40979f:	cs jne 0x4097da
  4097a2:	mov    ch,0x45
  4097a4:	jne    0x4097de
  4097a6:	call   FWORD PTR [esi]
  4097a8:	jmp    0x4097a9
  4097aa:	out    0x7e,eax
  4097ac:	mov    BYTE PTR [eax],bh
  4097ae:	dec    DWORD PTR [esi]
	...
  4097bc:	add    BYTE PTR [eax],al
  4097be:	add    BYTE PTR [ebx+0x4d06f721],bl
  4097c4:	sub    eax,0x384552a1
  4097c9:	(bad)  
  4097ca:	cmp    al,0x40
  4097cc:	xor    bh,bh
  4097ce:	out    dx,al
  4097cf:	dec    ecx
  4097d0:	(bad)  
  4097d1:	stos   DWORD PTR es:[edi],eax
  4097d2:	out    0x2e,al
  4097d4:	cmp    BYTE PTR [ebp-0xc7d133],dh
  4097da:	shr    edx,0x6b
  4097dd:	dec    esi
  4097df:	xchg   esi,eax
  4097e0:	jb     0x4097ca
  4097e2:	add    BYTE PTR ds:0x3ae8fefa,cl
  4097e8:	scas   al,BYTE PTR es:[edi]
  4097e9:	(bad)  
  4097ea:	push   ebp
  4097ec:	scas   eax,DWORD PTR es:[edi]
  4097ed:	fcomi  st,st(7)
  4097ef:	add    eax,0x1175e7fa
  4097f4:	cli    
  4097f5:	(bad)  
  4097f6:	dec    DWORD PTR [edi]
  4097f8:	icebp  
  4097f9:	idiv   bh
  4097fb:	cmc    
  4097fc:	stc    
  4097fd:	je     0x40980b
  4097ff:	in     eax,0x6f
  409801:	pop    es
  409802:	call   0x3f91ae
  409807:	add    eax,0xf5f7efb0
  40980c:	stc    
  40980d:	out    0x59,eax
  40980f:	and    edx,edi
  409811:	(bad)  
  409812:	(bad)  
  409813:	mov    edi,0x451e8fb
  409818:	cli    
  409819:	(bad)  
  40981a:	(bad)  
  40981b:	aas    
  40981c:	mul    edi
  40981e:	mov    ds:0xc9000327,eax
	...
  40982f:	add    BYTE PTR [eax],al
  409831:	add    BYTE PTR [eax+0x15],bh
  409834:	add    BYTE PTR [ebp-0x2f],dl
  409837:	cmc    
  409838:	add    ah,0x76
  40983b:	imul   edi,edi,0x69
  40983e:	or     al,0xfa
  409840:	je     0x40984a
  409842:	push   edx
  409843:	ins    BYTE PTR es:[edi],dx
  409844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409845:	inc    DWORD PTR [ebp-0x76]
  409848:	inc    ebp
  409849:	cld    
  40984a:	loop   0x409852
  40984c:	cmp    DWORD PTR [ecx+0xa],eax
  40984f:	imul   eax,DWORD PTR [ecx],0x0
  409852:	cli    
  409853:	cmp    bh,0x75
  409856:	adc    ch,bl
  409858:	idiv   ch
  40985a:	cmc    
  40985b:	stc    
  40985c:	addr16 or al,0xb3
  40985f:	inc    ebx
  409860:	(bad)  
  409861:	dec    BYTE PTR [edi+0x8]
  409864:	sub    DWORD PTR [ecx-0x6],eax
  409867:	stc    
  409868:	je     0x409872
  40986a:	arpl   WORD PTR [edi+eiz*1-0x3],ax
  40986e:	aam    0x47
  409870:	cmp    al,0x75
  409872:	iret   
  409873:	aas    
  409874:	mov    dh,0x7
  409876:	mov    ebx,0xbcff6bf6
  40987b:	gs inc ecx
  40987d:	add    al,0x63
  40987f:	adc    DWORD PTR [ecx+0x5f68e2ec],ecx
  409885:	mul    DWORD PTR [edi+edx*4-0x360ba72]
  40988c:	cmp    al,0x75
  40988e:	jae    0x409817
  409890:	mov    dh,0xb
  409892:	jnp    0x40987c
  409894:	mov    esi,0xff
	...
  4098a5:	test   BYTE PTR [ebx],dh
  4098a7:	inc    ebx
  4098a8:	(bad)  
  4098aa:	out    dx,al
  4098ab:	add    DWORD PTR [eax],eax
  4098ad:	arpl   WORD PTR [edi-0x3a],bx
  4098b0:	mul    DWORD PTR [ebx+0x2c]
  4098b3:	add    eax,DWORD PTR [eax]
  4098b5:	pushf  
  4098b6:	popa   
  4098b7:	aaa    
  4098b8:	jmp    DWORD PTR [esp+ebp*1+0x3]
  4098bc:	push   0x63
  4098be:	inc    edx
  4098bf:	add    ebp,DWORD PTR [edx+0x63]
  4098c2:	push   edx
  4098c3:	add    ecx,DWORD PTR [ebp-0x732d0f62]
  4098c9:	out    0xf7,al
  4098cb:	xor    edi,edi
  4098cd:	xor    al,0x9c
  4098cf:	cmp    al,0x75
  4098d1:	sub    ebx,edi
  4098d3:	mov    ch,0xfb
  4098d5:	cmp    ebp,DWORD PTR [esi]
  4098d7:	mov    esi,0x43231cff
  4098dc:	je     0x40993c
  4098de:	add    eax,0x2c630182
  4098e3:	stos   DWORD PTR es:[edi],eax
  4098e4:	jg     0x409921
  4098e6:	ins    DWORD PTR es:[edi],dx
  4098e7:	add    edi,edi
  4098e9:	jbe    0x409947
  4098eb:	sub    edi,DWORD PTR [ecx]
  4098ed:	lds    esp,FWORD PTR [esi]
  4098ef:	cmp    edx,DWORD PTR [eax-0x28]
  4098f2:	add    al,0xb9
  4098f4:	mov    esi,ebx
  4098f6:	xor    dh,dl
  4098f8:	cmp    ebx,esp
  4098fa:	aam    0x3a
  4098fc:	sub    al,0x8a
  4098fe:	addr16 into 
  409900:	cmp    ebx,edx
  409902:	jg     0x4098bd
  409904:	xor    eax,esp
  409906:	xor    eax,0xbbd1
	...
  409917:	add    BYTE PTR [edx],cl
  409919:	ss mov dh,0xae
  40991c:	mov    ah,0x9d
  40991e:	sbb    eax,0xa60523fd
  409923:	jno    0x4098d8
  409925:	sub    eax,0xaf9c3b9e
  40992a:	in     al,0x2b
  40992c:	loope  0x409995
  40992e:	mov    ?,WORD PTR [ebx]
  409930:	fidivr DWORD PTR [edi-0x73]
  409933:	xor    eax,DWORD PTR [ebp+esi*1-0x25f4fbed]
  40993a:	scas   eax,DWORD PTR es:[edi]
  40993b:	les    esi,FWORD PTR [esi+esi*1+0x34]
  40993f:	xor    al,0x74
  409941:	xor    eax,0x8ee3b66
  409946:	push   ecx
  409947:	mov    ds:0x8d56350f,eax
  40994c:	fisub  WORD PTR ds:0xa04c3b56
  409952:	call   0xa82f2502
  409957:	add    edi,DWORD PTR [ebx+edi*2]
  40995a:	cmp    DWORD PTR [ebx],esi
  40995c:	xor    al,0x35
  40995e:	cs mov cl,0x58
  409961:	sbb    eax,0x352468b5
  409966:	jo     0x4098e9
  409968:	(bad)  
  40996a:	push   ss
  40996b:	cmp    ecx,DWORD PTR [ecx+0x4bc68105]
  409971:	(bad)  
  409972:	call   0xf67667b1
  409977:	cmp    bh,ah
  409979:	xor    al,0x0
  40997b:	jl     0x40997d
	...
  409989:	add    BYTE PTR [eax],al
  40998b:	pop    esp
  40998c:	sbb    eax,0x34283c31
  409991:	mov    DWORD PTR [eax+edi*1+0x3c],ebp
  409995:	(bad)  
  409996:	fimul  WORD PTR [esi]
  409998:	xor    eax,0xc5d64167
  40999d:	dec    ebp
  40999f:	push   ebx
  4099a0:	xor    eax,0x3489c6f7
  4099a5:	jne    0x409994
  4099a7:	mov    BYTE PTR [ebx],bl
  4099a9:	lods   eax,DWORD PTR ds:[esi]
  4099aa:	mov    dh,0x79
  4099ac:	jle    0x409933
  4099ae:	lea    esi,[ecx+0x34]
  4099b1:	jmp    FWORD PTR [edx+0x2b]
  4099b4:	sub    edi,esi
  4099b6:	sahf   
  4099b7:	pop    ecx
  4099b8:	add    eax,0x72dde075
  4099bd:	loopne 0x409955
  4099bf:	dec    ecx
  4099c0:	xor    al,0x0
  4099c2:	std    
  4099c3:	ret    
  4099c4:	xchg   DWORD PTR [ebp-0xcbce73],edi
  4099ca:	jmp    0x2cc36a93
  4099cf:	cmp    BYTE PTR [edi+edi*8],bh
  4099d2:	pushaw 
  4099d4:	mov    ecx,0x560d152
  4099d9:	out    dx,eax
  4099da:	xchg   edi,eax
  4099db:	cdq    
  4099dc:	mov    edx,0x6a304107
  4099e1:	inc    DWORD PTR [esi-0x77]
  4099e4:	jp     0x4099d2
  4099e6:	ss jns 0x409a1d
  4099e9:	(bad)  
  4099ea:	mov    esp,0x87a41d68
	...
  4099fb:	add    BYTE PTR [eax],al
  4099fd:	add    BYTE PTR [ecx+0x34],ch
  409a00:	call   FWORD PTR [eax+edi*2+0x3c]
  409a04:	call   FWORD PTR [esi]
  409a06:	pop    ecx
  409a07:	mov    edx,0x6af20107
  409a0c:	dec    DWORD PTR [esi]
  409a0e:	dec    ecx
  409a0f:	jp     0x4099f5
  409a11:	add    BYTE PTR ds:0x77fffeee,al
  409a17:	add    al,ch
  409a19:	mov    BYTE PTR [edi+ebp*8-0x17c80002],ah
  409a20:	idiv   bh
  409a22:	std    
  409a23:	in     eax,dx
  409a24:	je     0x409a2e
  409a26:	mov    dl,0x72
  409a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a29:	jmp    FWORD PTR [ebp-0x4a234b13]
  409a2f:	in     eax,dx
  409a30:	(bad)  
  409a31:	inc    DWORD PTR [edi-0x1b9317ff]
  409a37:	in     eax,dx
  409a38:	(bad)  
  409a39:	push   DWORD PTR [edi]
  409a3b:	in     eax,0xf6
  409a3d:	(bad)  
  409a3e:	std    
  409a3f:	loopne 0x409ab6
  409a41:	test   eax,0xb5feedfd
  409a46:	jmp    0xa861:0xe2fffef5
  409a4d:	(bad)  
  409a4e:	fucomp st(5)
  409a50:	mov    ah,0xec
  409a52:	add    eax,0x6ae8feee
  409a57:	mov    al,ds:0xa3edfffe
  409a5c:	out    0xf7,eax
  409a5e:	std    
  409a5f:	in     eax,dx
  409a60:	out    0x55,eax
	...
  409a6e:	add    BYTE PTR [eax],al
  409a70:	add    bl,dl
  409a72:	in     eax,dx
  409a73:	(bad)  
  409a74:	push   edi
  409a76:	int    0xf6
  409a78:	jmp    FWORD PTR [ebp-0x6256b61f]
  409a7e:	in     al,dx
  409a7f:	(bad)  
  409a80:	mov    ch,0x8a
  409a82:	hlt    
  409a83:	(bad)  
  409a84:	(bad)  
  409a85:	jge    0x409ae9
  409a87:	or     edi,edi
  409a89:	idiv   esi
  409a8b:	out    0x3d,eax
  409a8d:	jl     0x409a7b
  409a8f:	(bad)  
  409a90:	inc    DWORD PTR [edi+0x7dfff6f9]
  409a96:	loope  0x409ac5
  409a98:	test   eax,0xff391b63
  409a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a9e:	adc    al,0x2b
  409aa0:	push   ecx
  409aa1:	add    eax,0x76ff390c
  409aa6:	xor    BYTE PTR [ebx],ch
  409aa8:	js     0x409b22
  409aaa:	sbb    al,0x3
  409aac:	leave  
  409aad:	and    DWORD PTR [ecx+0x3],edx
  409ab0:	push   ebp
  409ab1:	fcomp  DWORD PTR [eax-0x7c]
  409ab4:	(bad)  
  409ab5:	(bad)  
  409ab7:	add    ebp,DWORD PTR [edx+0x6c]
  409aba:	pop    ebx
  409abb:	scas   al,BYTE PTR es:[edi]
  409abc:	pop    es
  409abd:	mov    ebx,0xc4ff61dc
  409ac2:	mov    ch,0xbd
  409ac4:	sti    
  409ac5:	dec    ebx
  409ac6:	stc    
  409ac7:	cli    
  409ac8:	inc    eax
  409ac9:	arpl   WORD PTR [ebx-0x12],di
  409acc:	push   cs
  409acd:	jp     0x409aac
  409acf:	add    edi,edi
  409ad1:	cs xor al,0x2b
  409ad4:	test   BYTE PTR [eax],0x0
	...
  409ae3:	add    BYTE PTR [esi+0xe683893],bl
  409ae9:	push   ebp
  409aea:	ret    0x4ff
  409aed:	push   ds
  409aee:	add    eax,DWORD PTR [eax]
  409af0:	jecxz  0x409a7d
  409af2:	scas   al,BYTE PTR es:[edi]
  409af3:	pop    es
  409af4:	mov    ecx,DWORD PTR [eax-0x448b00ca]
  409afa:	lods   eax,DWORD PTR ds:[esi]
  409afb:	sti    
  409afc:	ins    BYTE PTR es:[edi],dx
  409afd:	cmp    DWORD PTR [ebx],ecx
  409aff:	call   0xff791d14
  409b04:	sub    bl,dh
  409b06:	(bad)  
  409b07:	jmp    FWORD PTR [edi+0x278126a7]
  409b0d:	lock das 
  409b0f:	inc    DWORD PTR [ecx+edi*4-0x43]
  409b13:	sti    
  409b14:	xchg   ebx,eax
  409b15:	rep lods eax,DWORD PTR ds:[esi]
  409b17:	sysenter 
  409b19:	jno    0x409b22
  409b1b:	call   0x44126a
  409b20:	pop    eax
  409b21:	add    eax,0x81e60829
  409b26:	jmp    0xac8afe2e
  409b2b:	cmp    esp,DWORD PTR [ebx+0x5]
  409b2e:	jmp    0xfd08b736
  409b33:	aaa    
  409b34:	fs add eax,0x9bf4ade9
  409b3a:	call   0xe8dc87ec
  409b3f:	xchg   BYTE PTR [esi-0x1976c6c7],bl
  409b45:	cmp    dh,dl
  409b47:	aaa    
	...
  409b54:	add    BYTE PTR [eax],al
  409b56:	add    ah,dl
  409b58:	aam    0xd5
  409b5a:	mov    cl,0xd4
  409b5c:	xor    DWORD PTR [eax+edi*1-0x45],edx
  409b60:	das    
  409b61:	inc    ebx
  409b62:	add    al,0x63
  409b64:	(bad)  
  409b65:	test   al,0xb0
  409b67:	bound  ebx,QWORD PTR [esi]
  409b69:	sbb    al,0x89
  409b6b:	out    0x20,al
  409b6d:	mov    dh,0x37
  409b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b70:	aam    0x73
  409b72:	adc    DWORD PTR [edi+0x33379e39],0x8c141c32
  409b7c:	mov    bh,0xdc
  409b7e:	sub    eax,DWORD PTR ds:0xea37865e
  409b84:	xchg   DWORD PTR [ecx+0x2f],edi
  409b87:	je     0x409bba
  409b89:	loop   0x409bce
  409b8b:	mul    esi
  409b8d:	imul   edi,DWORD PTR [ecx+0x77],0x63376639
  409b94:	mov    ecx,0x3154abff
  409b99:	inc    esi
  409b9a:	jbe    0x409be8
  409b9c:	jnp    0x409bdb
  409b9e:	das    
  409b9f:	inc    esp
  409ba0:	xor    DWORD PTR [esi+0x71],eax
  409ba3:	xor    edi,DWORD PTR [ecx]
  409ba5:	ds aaa 
  409ba7:	xor    al,0xbb
  409ba9:	jmp    eax
  409bab:	js     0x409bed
  409bad:	leave  
  409bae:	cs ins BYTE PTR es:[edi],dx
  409bb0:	xor    BYTE PTR [ebp-0xcfb3e7],dh
  409bb6:	adc    esp,edi
  409bb8:	push   0x16ff
	...
  409bc9:	add    BYTE PTR [edx+ecx*8-0x9],dl
  409bcd:	add    bl,bh
  409bcf:	xor    BYTE PTR [ebp+0x5],dh
  409bd2:	dec    edi
  409bd3:	mov    cl,0x79
  409bd5:	jmp    0xe602da3a
  409bda:	pusha  
  409bdb:	fimul  DWORD PTR [edx-0x3b61e03]
  409be1:	push   ebx
  409be2:	addr16 fwait
  409be4:	pop    ss
  409be5:	ficom  WORD PTR [ebx]
  409be7:	or     eax,ebp
  409be9:	sub    eax,0x60ff3042
  409bee:	mov    ds:0xbf63682c,eax
  409bf3:	(bad)  
  409bf6:	mov    bl,0xff
  409bf8:	sub    BYTE PTR [eax],ch
  409bfa:	xor    BYTE PTR [di-0x1f],dh
  409bfe:	js     0x409bea
  409c00:	(bad)  
  409c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c02:	push   ebp
  409c03:	popf   
  409c04:	cdq    
  409c05:	loopne 0x409ba6
  409c07:	xor    BYTE PTR [edi-0x15],ah
  409c0a:	pusha  
  409c0b:	add    eax,0x8d38e80
  409c10:	call   0xff70d1ef
  409c15:	adc    eax,esi
  409c17:	in     eax,dx
  409c18:	inc    eax
  409c19:	jmp    0xc04f9653
  409c1e:	lahf   
  409c1f:	xor    dh,bh
  409c21:	fsubr  QWORD PTR [eax+0x1d]
  409c24:	add    BYTE PTR [esi-0x73],bl
  409c27:	xor    BYTE PTR [eax-0x66],ch
  409c2a:	dec    edi
  409c2b:	(bad)  
	...
  409c3a:	add    BYTE PTR [eax],al
  409c3c:	add    BYTE PTR [edx+0x5],ah
  409c3f:	add    BYTE PTR [eax],al
  409c41:	retf   0x74f7
  409c44:	or     BYTE PTR [edx+0x75fffdea],dl
  409c4a:	div    DWORD PTR [esp+edi*8+0x75]
  409c4e:	jne    0x409c57
  409c50:	call   0x3f418d
  409c55:	push   ebx
  409c56:	mov    BYTE PTR [ebx],0x0
  409c59:	iret   
  409c5a:	jp     0x409c48
  409c5c:	(bad)  
  409c5d:	out    dx,eax
  409c5e:	pop    es
  409c5f:	call   0xff382e58
  409c64:	or     ecx,DWORD PTR [edx+0x60]
  409c67:	cmp    BYTE PTR [eax+0x5a],ch
  409c6a:	xor    DWORD PTR [eax+0x0],eax
  409c6d:	retf   0x88db
  409c70:	stos   DWORD PTR es:[edi],eax
  409c71:	(bad)  
  409c74:	push   eax
  409c75:	xor    cl,BYTE PTR [ecx]
  409c77:	add    bh,ch
  409c79:	hlt    
  409c7a:	pusha  
  409c7b:	aad    0x39
  409c7d:	jnp    0x409c88
  409c7f:	push   eax
  409c80:	(bad)  
  409c81:	jg     0x409c84
  409c83:	call   0xff3aa2d8
  409c88:	pop    eax
  409c89:	and    al,BYTE PTR [eax+eax*1]
  409c8c:	out    dx,eax
  409c8d:	xor    al,0x61
  409c8f:	fidivr DWORD PTR [ecx]
  409c91:	dec    ebx
  409c92:	or     DWORD PTR [eax-0x1],edx
  409c95:	outs   dx,DWORD PTR ds:[esi]
  409c96:	add    eax,ebp
  409c98:	cmp    al,0xc6
  409c9a:	stc    
  409c9b:	(bad)  
  409c9c:	call   0x3f6f03
	...
  409cad:	add    BYTE PTR [eax],al
  409caf:	add    BYTE PTR [ebx+0x4f0007c2],dh
  409cb5:	jle    0x409ca3
  409cb7:	cmp    DWORD PTR [esi+0x600069ec],0xc
  409cbe:	push   DWORD PTR [ebp+0x52]
  409cc1:	fisttp DWORD PTR [ecx-0x77074a5c]
  409cc7:	inc    ebp
  409cc8:	arpl   ax,bx
  409cca:	test   eax,0xb5a4419
  409ccf:	call   0xff7564aa
  409cd4:	leave  
  409cd5:	sti    
  409cd6:	xor    al,0x75
  409cd8:	pop    ebx
  409cd9:	les    ecx,FWORD PTR [eax-0x561fdb01]
  409cdf:	sbb    ebx,DWORD PTR [edx+edx*4]
  409ce2:	or     ebp,eax
  409ce4:	loop   0x409cf5
  409ce6:	xor    eax,0x37920cff
  409ceb:	dec    DWORD PTR [esi-0x385bd4dc]
  409cf1:	pop    es
  409cf2:	xor    eax,0x32921c9
  409cf7:	push   ebp
  409cf8:	fmul   DWORD PTR [eax]
  409cfa:	add    esp,0xbae1fe7
  409d00:	retf   
  409d01:	mov    ebx,0x33d4ff68
  409d06:	inc    ebx
  409d07:	movntq QWORD PTR [ebx+0x3],mm7
  409d0b:	add    BYTE PTR [ebx-0x5b],ah
  409d0e:	mov    ebp,0x13c9e0fb
	...
  409d23:	das    
  409d24:	push   ds
  409d25:	xor    al,0x75
  409d27:	push   ebx
  409d28:	ja     0x409cd8
  409d2a:	sti    
  409d2b:	mov    ebx,0x9cff6943
  409d30:	mov    ch,0xbd
  409d32:	sti    
  409d33:	or     esp,DWORD PTR [ebx-0x6]
  409d36:	inc    eax
  409d37:	arpl   WORD PTR [edi-0x58840452],dx
  409d3d:	push   0xac0c7cff
  409d42:	push   DWORD PTR [edi+edi*2+0x75]
  409d46:	push   eax
  409d47:	ins    BYTE PTR es:[edi],dx
  409d48:	xor    DWORD PTR [ebx],ecx
  409d4a:	call   0xff7501ef
  409d4f:	dec    ebx
  409d50:	add    eax,0x2e545d3d
  409d55:	shr    edx,1
  409d57:	mov    al,ah
  409d59:	call   0x41726b92
  409d5e:	popf   
  409d5f:	or     ch,BYTE PTR [esi]
  409d61:	inc    esi
  409d62:	sar    DWORD PTR [esp+eax*1-0x2b12db17],cl
  409d69:	xor    eax,0x8b1d5cae
  409d6e:	dec    ebx
  409d6f:	sbb    al,0x2e
  409d71:	adc    DWORD PTR [eax-0x43],esi
  409d74:	sub    eax,0xeb5dab1e
  409d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d7a:	add    eax,DWORD PTR [eax+edi*4]
  409d7d:	or     al,0x2b
  409d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d80:	pop    ebx
  409d81:	push   es
  409d82:	xor    al,0x93
  409d84:	popf   
  409d85:	call   0x409d8d
	...
  409d96:	cld    
  409d97:	outs   dx,BYTE PTR ds:[esi]
  409d98:	cdq    
  409d99:	xor    al,0x6e
  409d9b:	std    
  409d9c:	add    BYTE PTR [edx+0x1ce62dab],al
  409da2:	icebp  
  409da3:	data16 fidiv WORD PTR [ebx]
  409da6:	cmp    eax,ebp
  409da8:	adc    al,ch
  409daa:	les    ebp,FWORD PTR [esi]
  409dac:	push   esp
  409dad:	xor    bl,cl
  409daf:	call   0xd4f4d146
  409db4:	push   eax
  409db5:	add    eax,0xd4771e63
  409dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dbb:	mov    bh,0xe0
  409dbd:	sbb    eax,DWORD PTR [ebx]
  409dbf:	cmp    eax,0xb38b33a6
  409dc4:	inc    esi
  409dc5:	xor    ecx,DWORD PTR [ebp+ebp*1-0x6484cfe4]
  409dcc:	inc    esi
  409dcd:	xor    edi,DWORD PTR [ebx+edi*1-0x55]
  409dd1:	add    BYTE PTR [ebx-0x28],ah
  409dd4:	jno    0x409df6
  409dd6:	loopne 0x409e20
  409dd8:	add    BYTE PTR [ebp-0x3b],dh
  409ddb:	sub    eax,0xb291d369
  409de0:	pop    es
  409de1:	push   ecx
  409de2:	aam    0x68
  409de4:	call   FWORD PTR [esi-0x32]
  409de7:	ret    0xc3fb
  409dea:	pusha  
  409deb:	lahf   
  409dec:	sbb    DWORD PTR [esi-0x6],ecx
  409def:	add    al,0xe8
  409df1:	or     esi,DWORD PTR [eax+0x2c]
  409df4:	call   ebx
  409df6:	pusha  
  409df7:	lahf   
  409df8:	and    dh,BYTE PTR [esi]
	...
  409e06:	add    BYTE PTR [eax],al
  409e08:	add    dl,ch
  409e0a:	add    al,0xe8
  409e0c:	xlat   BYTE PTR ds:[ebx]
  409e0d:	push   ecx
  409e0e:	sub    al,0xff
  409e10:	xchg   ebx,eax
  409e11:	pusha  
  409e12:	lahf   
  409e13:	sbb    ebx,DWORD PTR [esi]
  409e15:	retf   0xe804
  409e18:	jecxz  0x409e6b
  409e1a:	sub    al,0xff
  409e1c:	adc    DWORD PTR [ebx],0xd6e940ef
  409e22:	push   cs
  409e23:	push   DWORD PTR [eax+ebp*8+0x24]
  409e27:	sti    
  409e28:	div    DWORD PTR [ecx]
  409e2a:	sub    al,0x68
  409e2c:	mov    esi,cs
  409e2e:	(bad)  
  409e31:	mov    esp,0x68f1752b
  409e36:	sbb    esi,edi
  409e38:	(bad)  
  409e39:	xchg   ecx,eax
  409e3a:	popf   
  409e3b:	pop    esp
  409e3c:	adc    esp,DWORD PTR [esi+0x71e5692c]
  409e42:	mov    dl,0x7
  409e44:	rcl    DWORD PTR [ebx],1
  409e46:	sub    edi,edi
  409e48:	mov    dh,0x71
  409e4a:	mov    dl,0xfb
  409e4c:	scas   al,BYTE PTR es:[edi]
  409e4d:	fild   DWORD PTR [eax+ebp*8]
  409e50:	sbb    edi,esp
  409e52:	sub    edi,edi
  409e54:	mov    al,0x26
  409e56:	add    DWORD PTR [eax],eax
  409e58:	cmp    al,0x4
  409e5a:	sbb    DWORD PTR [ecx-0xcba75b],eax
  409e60:	add    ch,bl
  409e62:	test   DWORD PTR [ebp-0x4],eax
  409e65:	dec    edx
  409e66:	clc    
  409e67:	je     0x409e79
  409e69:	in     eax,dx
  409e6a:	ins    BYTE PTR es:[edi],dx
  409e6b:	or     ebp,eax
	...
  409e79:	add    BYTE PTR [eax],al
  409e7b:	add    BYTE PTR [edx],dl
  409e7d:	pusha  
  409e7e:	(bad)  
  409e7f:	call   DWORD PTR [ecx-0x38]
  409e82:	push   cs
  409e83:	test   DWORD PTR ds:0x75000001,eax
  409e89:	cmp    eax,0x84a00f7
  409e8e:	add    bh,al
  409e90:	pop    es
  409e91:	hlt    
  409e92:	inc    BYTE PTR [edi]
  409e94:	cmp    cl,BYTE PTR [eax]
  409e96:	push   0x0
  409e98:	and    BYTE PTR [eax],cl
  409e9a:	push   0x0
  409e9c:	and    BYTE PTR [eax],cl
  409e9e:	lea    eax,[ebp+0x76]
  409ea1:	pop    eax
  409ea2:	mov    WORD PTR [ebp-0x1108a],es
  409ea8:	retf   0x74f6
  409eab:	clc    
  409eac:	ins    DWORD PTR es:[edi],dx
  409ead:	ins    DWORD PTR es:[edi],dx
  409eae:	sti    
  409eaf:	call   0x3ffea4
  409eb4:	icebp  
  409eb5:	(bad)  
  409eb6:	jae    0x409ebd
  409eb8:	arpl   WORD PTR [edx],bp
  409eba:	add    BYTE PTR [eax],al
  409ebc:	retf   0x7f8f
  409ebf:	sub    BYTE PTR [ebx-0x358a00ff],cl
  409ec5:	cvtps2pi mm5,QWORD PTR [ecx-0x74b00a53]
  409ecc:	cli    
  409ecd:	stos   DWORD PTR es:[edi],eax
  409ece:	test   ah,dh
  409ed0:	cmc    
  409ed1:	cmc    
  409ed2:	(bad)  
  409ed3:	push   eax
  409ed4:	dec    eax
  409ed5:	or     DWORD PTR ds:0x88f5eda9,ebx
  409edb:	test   edx,ebx
  409edd:	in     eax,dx
  409ede:	(bad)  
  409edf:	inc    DWORD PTR [eax]
	...
  409eed:	add    BYTE PTR [eax],al
  409eef:	bnd jno 0x409e96
  409ef2:	(bad)  
  409ef3:	in     eax,dx
  409ef4:	mov    bh,bh
  409ef6:	addr16 arpl dx,dx
  409ef9:	in     eax,dx
  409efa:	inc    eax
  409efb:	arpl   WORD PTR [ebx+0x77],di
  409efe:	lock ins BYTE PTR es:[edi],dx
  409f00:	xor    BYTE PTR [ecx],0xff
  409f03:	neg    BYTE PTR [ecx]
  409f05:	sbb    esi,DWORD PTR [esi-0x45]
  409f08:	mov    dl,0x30
  409f0a:	mov    esi,esp
  409f0c:	test   al,0x38
  409f0e:	call   DWORD PTR [edi+edx*2+0x3]
  409f12:	push   0xffc2e71b
  409f17:	inc    ebp
  409f18:	mov    dh,BYTE PTR [edi+esi*8]
  409f1b:	cmp    al,0xbc
  409f1d:	xor    BYTE PTR [ebp+0x67],dh
  409f20:	aam    0xcc
  409f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f23:	sub    al,0xec
  409f25:	jp     0x409eac
  409f27:	cmp    ebp,esp
  409f29:	xor    bh,bh
  409f2b:	loopne 0x409ec6
  409f2d:	pop    ds
  409f2e:	not    DWORD PTR [esp+eiz*8]
  409f31:	add    esi,DWORD PTR [ebx+edx*2-0x6c]
  409f35:	add    eax,DWORD PTR [eax]
  409f37:	hlt    
  409f38:	rcr    BYTE PTR [ebx+0x35d3983],cl
  409f3e:	jmp    FWORD PTR [esi-0x1300c6f0]
  409f44:	sub    esi,DWORD PTR [esi+0x3b07fb07]
  409f4a:	(bad)  
  409f4b:	fadd   QWORD PTR [edx+eax*1-0x649d3c00]
  409f52:	lea    eax,[eax]
	...
  409f60:	add    BYTE PTR [eax],al
  409f62:	mov    ebp,ebx
  409f64:	add    edi,edi
  409f66:	push   cs
  409f67:	inc    ecx
  409f68:	cmp    bh,bh
  409f6a:	mov    esp,0xcb07b63b
  409f6f:	(bad)  
  409f70:	cmp    bh,bh
  409f72:	lods   al,BYTE PTR ds:[esi]
  409f73:	lahf   
  409f74:	ins    DWORD PTR es:[edi],dx
  409f75:	call   0x711326
  409f7a:	pop    ss
  409f7b:	sub    al,0x9b
  409f7d:	call   DWORD PTR [ebp+eax*1-0x7f048e6a]
  409f84:	jecxz  0x409f48
  409f86:	test   BYTE PTR [ebx],ch
  409f88:	pop    esp
  409f89:	sbb    esi,DWORD PTR [edx+ebp*1-0x72]
  409f8d:	xor    dh,ch
  409f8f:	cld    
  409f90:	nop
  409f91:	jne    0x409f2d
  409f93:	sub    bh,BYTE PTR [esi-0x65]
  409f96:	arpl   WORD PTR ds:0x7bcb7186,ax
  409f9c:	mov    bl,0xc2
  409f9e:	push   esp
  409f9f:	sub    ebx,DWORD PTR [ebx+ebx*1+0x305e2a54]
  409fa6:	into   
  409fa7:	std    
  409fa8:	inc    eax
  409fa9:	lea    ebp,[edx]
  409fab:	sub    cl,BYTE PTR [esi+0x30]
  409fae:	out    dx,al
  409faf:	sbb    BYTE PTR [esi],bh
  409fb1:	xor    BYTE PTR [ebx*1+0x2a246729],ch
  409fb8:	ss jbe 0x409fc6
  409fbb:	xor    ch,BYTE PTR [esi]
  409fbd:	xor    BYTE PTR [ebx],cl
  409fbf:	jo     0x40a00e
  409fc1:	xor    BYTE PTR [edx+ebp*1],cl
  409fc4:	push   esp
  409fc5:	xor    eax,DWORD PTR [eax]
	...
  409fd3:	add    BYTE PTR [eax],al
  409fd5:	or     al,0x2a
  409fd7:	push   ss
  409fd8:	xor    BYTE PTR [esi-0x7],dh
  409fdb:	or     eax,0x3d1d5cb6
  409fe0:	xor    esp,ebp
  409fe2:	sub    esi,edi
  409fe4:	jne    0x409fd9
  409fe6:	xor    esi,esi
  409fe8:	das    
  409fe9:	retf   
  409fea:	mov    eax,DWORD PTR [ebp+0x30]
  409fed:	aam    0x29
  409fef:	sub    al,0x2c
  409ff1:	mov    edx,0xc42fdf3c
  409ff6:	sub    DWORD PTR [eax+esi*1-0x35],ebx
  409ffa:	and    eax,0x3c630457
  409fff:	stos   DWORD PTR es:[edi],eax
  40a000:	add    BYTE PTR [ebx-0x30],ah
  40a003:	jno    0x40a025
  40a005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a006:	scas   eax,DWORD PTR es:[edi]
  40a007:	jmp    esp
  40a009:	js     0x40a047
  40a00b:	test   al,0xae
  40a00d:	inc    esp
  40a00e:	(bad)  
  40a00f:	mov    edi,0x97a17e1d
  40a014:	jecxz  0x409fb5
  40a016:	sub    DWORD PTR [edi-0x7f],ecx
  40a019:	lods   eax,DWORD PTR ds:[esi]
  40a01a:	popa   
  40a01b:	dec    DWORD PTR [esi-0x16984671]
  40a021:	pusha  
  40a022:	sbb    bh,BYTE PTR [esi+0x40eedb11]
  40a028:	jmp    0xe1b5c85d
  40a02d:	js     0x40a011
  40a02f:	enter  0x7c66,0xcd
  40a033:	addr16 call 0xc1feb899
	...
  40a045:	add    BYTE PTR [eax],al
  40a047:	add    BYTE PTR [esi+0x10e940eb],bh
  40a04d:	sub    BYTE PTR [ebp-0xf],dh
  40a050:	dec    eax
  40a051:	push   ss
  40a052:	leave  
  40a053:	ds je  0x40a073
  40a056:	cmp    eax,0xc9284c8d
  40a05b:	sub    edx,DWORD PTR [edi]
  40a05d:	sub    DWORD PTR [edx+esi*2+0x43],edx
  40a061:	test   ah,al
  40a063:	sbb    eax,0xe969d02d
  40a068:	fimul  DWORD PTR [ebx]
  40a06a:	call   DWORD PTR [eax+edi*8+0x3c485d20]
  40a071:	sub    BYTE PTR [ecx+0x357c34a4],cl
  40a077:	sar    DWORD PTR [eax-0x2d9e003b],0xdc
  40a07e:	daa    
  40a07f:	sub    BYTE PTR [edi-0x7b],ah
  40a082:	aas    
  40a083:	jmp    0xe9fc254d
  40a088:	pusha  
  40a089:	add    eax,0xc5c95068
  40a08e:	(bad)  
  40a08f:	dec    DWORD PTR [ecx+ecx*1-0x50]
  40a093:	jbe    0x40a04f
  40a095:	add    al,0xb
  40a097:	rcr    BYTE PTR [esi+0x67],0x3f
  40a09b:	adc    BYTE PTR [edx-0x27bf0fc],0x3
  40a0a2:	add    BYTE PTR [eax],al
  40a0a4:	dec    edx
  40a0a5:	mov    DWORD PTR [eax+0x3a],edi
  40a0a8:	dec    ebx
  40a0a9:	add    eax,ebp
  40a0ab:	in     eax,dx
	...
  40a0b8:	add    BYTE PTR [eax],al
  40a0ba:	add    BYTE PTR [esi+0x1],cl
  40a0bd:	add    BYTE PTR [edx+0x79],bl
  40a0c0:	(bad)  
  40a0c1:	dec    edi
  40a0c2:	call   0x3f45da
  40a0c7:	jp     0x40a11a
  40a0c9:	add    BYTE PTR [bp+si+0x7],cl
  40a0cd:	mov    esi,0x401ebe68
  40a0d2:	add    BYTE PTR [edx],cl
  40a0d4:	xlat   BYTE PTR ds:[ebx]
  40a0d5:	je     0x40a0df
  40a0d7:	mov    ds:0xa5ffc87e,al
  40a0dc:	cmp    al,0x67
  40a0de:	add    DWORD PTR [edx],edi
  40a0e0:	pop    es
  40a0e1:	mov    esi,0x401eb468
  40a0e6:	add    dl,bh
  40a0e8:	(bad)  
  40a0e9:	je     0x40a0f3
  40a0eb:	mov    ds:0x45ffc882,al
  40a0f0:	or     al,0xb2
  40a0f2:	mov    ds:0x43ead765,eax
  40a0f7:	loop   0x40a169
  40a0f9:	cmp    DWORD PTR [ecx+0xa],eax
  40a0fc:	dec    edi
  40a0fd:	out    0x41,eax
  40a0ff:	ins    BYTE PTR es:[edi],dx
  40a100:	add    al,0x0
  40a102:	or     edi,DWORD PTR [edx]
  40a104:	jo     0x40a139
  40a106:	push   esi
  40a107:	bound  esp,QWORD PTR [eax-0x54]
  40a10a:	inc    ebp
  40a10c:	push   edx
  40a10d:	dec    edi
  40a10e:	push   0xbeef03ba
  40a113:	xor    bh,BYTE PTR [ebp+0x3a]
  40a116:	inc    ecx
  40a117:	arpl   WORD PTR [esi],bx
  40a119:	sar    esi,cl
  40a11b:	cs sbb edx,DWORD PTR es:[ebp+0x0]
	...
  40a12c:	add    BYTE PTR [eax],al
  40a12e:	fwait
  40a12f:	ds sub eax,0x31d3b58
  40a135:	out    dx,eax
  40a136:	ffree  st(5)
  40a138:	jge    0x40a174
  40a13a:	and    bl,BYTE PTR [esi]
  40a13c:	sar    esi,cl
  40a13e:	push   ss
  40a13f:	sbb    eax,DWORD PTR ss:[ecx-0x65]
  40a143:	xchg   BYTE PTR ds:0x2cbb0ee8,ch
  40a149:	dec    DWORD PTR [eax+0x2d7fc51c]
  40a14f:	push   ds
  40a150:	mov    dh,0xf9
  40a152:	sbb    eax,0x1abff0aa
  40a157:	mov    al,0x2c
  40a159:	call   DWORD PTR [ebx+ebp*4+0x5d]
  40a15d:	cmp    BYTE PTR [edi+ebp*1-0x7a],ah
  40a161:	inc    ebp
  40a162:	inc    esp
  40a163:	enter  0x6a2c,0x59
  40a167:	iret   
  40a168:	mov    dh,0x7
  40a16a:	dec    ebx
  40a16b:	fsubr  QWORD PTR ds:0xe0532cff
  40a171:	(bad)  
  40a172:	scas   al,BYTE PTR es:[edi]
  40a173:	xor    al,0x1b
  40a175:	mov    ecx,0x6a2cf01d
  40a17a:	ja     0x40a153
  40a17c:	mov    dh,0x7
  40a17e:	sti    
  40a17f:	iret   
  40a180:	sub    eax,0x599504ff
  40a185:	cmp    ah,BYTE PTR [edx+0x64352c1c]
  40a18b:	inc    ebp
  40a18c:	ret    0xedff
  40a18f:	test   eax,0xe7fa
	...
  40a1a0:	add    BYTE PTR [edx],dh
  40a1a2:	sub    DWORD PTR [edi+edi*8],ebp
  40a1a5:	dec    ebx
  40a1a6:	ret    0x40e9
  40a1a9:	arpl   WORD PTR [ecx+eax*1+0x69056300],ax
  40a1b0:	sub    al,0x4e
  40a1b2:	std    
  40a1b3:	ror    BYTE PTR [esi+edi*4],1
  40a1b6:	es (bad) 
  40a1b8:	sub    al,0x2e
  40a1ba:	sub    esi,ecx
  40a1bc:	mov    dh,0x64
  40a1be:	sbb    eax,0x26a4636b
  40a1c3:	push   ds
  40a1c4:	into   
  40a1c5:	stos   DWORD PTR es:[edi],eax
  40a1c6:	inc    ebx
  40a1c7:	in     eax,dx
  40a1c8:	add    ebp,DWORD PTR [esi]
  40a1ca:	jp     0x40a189
  40a1cc:	and    BYTE PTR [edi-0x7bd361ab],0x78
  40a1d3:	and    al,0x30
  40a1d5:	adc    esp,DWORD PTR [esi]
  40a1d7:	sbb    al,0x14
  40a1d9:	je     0x40a18b
  40a1db:	fcomp  QWORD PTR [ebx]
  40a1dd:	and    eax,0x5803e8b0
  40a1e2:	inc    ebp
  40a1e3:	out    dx,al
  40a1e4:	xchg   BYTE PTR [ecx+0x1c03e903],ah
  40a1ea:	shl    BYTE PTR [eax+0x3],0x63
  40a1ee:	add    eax,0x319e44e9
  40a1f3:	pop    esi
  40a1f4:	add    al,0x63
  40a1f6:	add    eax,0x5c903c3
  40a1fb:	ret    
  40a1fc:	add    edi,DWORD PTR [ecx+0x30c67405]
  40a202:	aad    0x6b
  40a204:	xchg   BYTE PTR [eax],al
	...
  40a212:	add    BYTE PTR [eax],al
  40a214:	pop    ss
  40a215:	cs ss sub al,0xb3
  40a219:	es mov ah,0x2b
  40a21c:	or     al,0xb0
  40a21e:	and    al,0x1b
  40a220:	imul   esi,DWORD PTR [eax+0x456803e8],0xffffff9d
  40a227:	push   es
  40a228:	or     al,BYTE PTR [eax]
  40a22a:	jmp    0x40a22f
  40a22c:	arpl   WORD PTR [ebp+0x5a3db68],bx
  40a232:	(bad)  
  40a233:	mov    ch,0x6c
  40a235:	sbb    eax,0x263eb200
  40a23a:	call   FWORD PTR [ecx+0x6c8d554b]
  40a240:	xchg   ebx,eax
  40a241:	cs (bad) 
  40a243:	ficom  WORD PTR [edi+0x4102e7d3]
  40a249:	jmp    DWORD PTR es:[eax-0x1e]
  40a24d:	xor    al,0xf7
  40a24f:	(bad)  
  40a250:	js     0x40a26f
  40a252:	or     DWORD PTR [ebx-0x1695d9b8],0x283a35f8
  40a25c:	addr16 es mov ch,0x99
  40a260:	push   eax
  40a261:	call   FWORD PTR es:[esi+0x6de7f9b2]
  40a268:	add    ah,BYTE PTR [esi]
  40a26a:	jmp    DWORD PTR [eax-0x1e]
  40a26d:	and    bh,dh
  40a26f:	xchg   BYTE PTR [eax],bh
  40a271:	fwait
  40a272:	call   DWORD PTR [eax]
  40a274:	scas   al,BYTE PTR es:[edi]
  40a275:	fild   WORD PTR [eax-0x17]
	...
  40a284:	add    BYTE PTR [eax],al
  40a286:	add    BYTE PTR [ecx+0x7876f05a],cl
  40a28c:	and    al,0xff
  40a28e:	fmul   QWORD PTR [ebp+ebp*1+0x69]
  40a292:	test   BYTE PTR [eax+0x5b6c8924],cl
  40a298:	sbb    al,0xff
  40a29a:	dec    esi
  40a29b:	int    0x24
  40a29d:	addr16 dec ebx
  40a29f:	xor    eax,0x923dffc6
  40a2a4:	adc    eax,0x244836f7
  40a2a9:	jne    0x40a288
  40a2ab:	push   0x3826a4d3
  40a2b0:	mov    es,WORD PTR [ebp-0xdbcfef]
  40a2b6:	and    DWORD PTR [eax-0x53],0xffffffea
  40a2ba:	shl    DWORD PTR [edi],cl
  40a2bc:	and    eax,0xd92700fe
  40a2c1:	idiv   bh
  40a2c3:	fucomp st(7)
  40a2c5:	je     0x40a2d3
  40a2c7:	bound  ebx,QWORD PTR [esp+eiz*4]
  40a2ca:	(bad)  
  40a2cb:	mov    ebp,0xa5dc84a1
  40a2d0:	out    dx,eax
  40a2d1:	dec    BYTE PTR [ebp-0x917b9]
  40a2d7:	lea    edi,[eax]
  40a2d9:	addr16 sti 
  40a2db:	push   eax
  40a2dc:	dec    edx
  40a2dd:	(bad)  
  40a2de:	(bad)  
  40a2df:	daa    
  40a2e0:	fdiv   st,st(6)
  40a2e2:	(bad)  
  40a2e3:	fucomp st(7)
  40a2e5:	xor    al,0xf
  40a2e7:	arpl   WORD PTR [edx-0x1],cx
  40a2ea:	out    0x0,eax
	...
  40a2f8:	add    BYTE PTR [eax],al
  40a2fa:	stos   BYTE PTR es:[edi],al
  40a2fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2fc:	(bad)  
  40a2fd:	call   DWORD PTR [ecx+0x91973c8]
  40a303:	lods   eax,DWORD PTR ds:[esi]
  40a304:	fcomip st,st(7)
  40a306:	int    0xef
  40a308:	add    esi,DWORD PTR [ebp+0x6a]
  40a30b:	out    dx,eax
  40a30c:	das    
  40a30d:	(bad)  
  40a30e:	test   edi,0x38ddfff6
  40a314:	out    0xdd,eax
  40a316:	stos   DWORD PTR es:[edi],eax
  40a317:	out    dx,eax
  40a318:	(bad)  
  40a319:	jmp    0x40a351
  40a31b:	and    edi,DWORD PTR [edi-0x18c7cb8c]
  40a321:	shr    ebx,1
  40a323:	out    dx,al
  40a324:	inc    bh
  40a326:	(bad)  
  40a327:	shl    dh,1
  40a329:	call   FWORD PTR [ebp+0x3afffff5]
  40a32f:	popf   
  40a330:	test   al,dl
  40a332:	push   ebp
  40a333:	out    dx,eax
  40a334:	(bad)  
  40a335:	push   eax
  40a336:	and    al,BYTE PTR [esi]
  40a338:	cmp    eax,DWORD PTR [ecx-0x6]
  40a33b:	out    dx,al
  40a33c:	mov    ah,0xf0
  40a33e:	gs out dx,eax
  40a340:	(bad)  
  40a341:	call   edi
  40a343:	sbb    esp,edi
  40a345:	lds    esp,FWORD PTR [ebx-0x2e]
  40a348:	sub    edi,edi
  40a34a:	fisubr DWORD PTR [eax+0xae4f74e]
  40a350:	xchg   BYTE PTR [ebp-0xd6e539],bh
  40a356:	arpl   WORD PTR [ebx],bp
  40a358:	jg     0x40a2f5
  40a35a:	arpl   WORD PTR [esi],bp
  40a35c:	add    eax,DWORD PTR [ebx+0x0]
	...
  40a36a:	add    BYTE PTR [eax],al
  40a36c:	add    BYTE PTR [esi],al
  40a36e:	cmp    dh,BYTE PTR [ecx]
  40a370:	(bad)  
  40a371:	mov    esp,0xe583f82d
  40a376:	sub    eax,0x90e00003
  40a37b:	sbb    al,0xf7
  40a37d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a37e:	dec    edx
  40a37f:	add    al,0xf
  40a381:	out    0xac,eax
  40a383:	add    eax,DWORD PTR [eax]
  40a385:	arpl   si,ax
  40a387:	adc    eax,DWORD PTR [eax]
  40a389:	jl     0x40a33e
  40a38b:	sub    BYTE PTR [ebp+0x5b],dh
  40a38e:	jbe    0x40a3b8
  40a390:	popf   
  40a391:	jl     0x40a315
  40a393:	sub    DWORD PTR [ebp-0xd67d79],esi
  40a399:	ins    BYTE PTR es:[edi],dx
  40a39a:	clc    
  40a39b:	sti    
  40a39c:	out    0x13,eax
  40a39e:	lods   al,BYTE PTR ds:[esi]
  40a39f:	sub    bh,bh
  40a3a1:	pop    esp
  40a3a2:	ficomp DWORD PTR [ebx]
  40a3a4:	not    DWORD PTR [esp+ebx*4+0x28]
  40a3a8:	jne    0x40a405
  40a3aa:	test   dh,al
  40a3ac:	popf   
  40a3ad:	inc    esp
  40a3ae:	lods   al,BYTE PTR ds:[esi]
  40a3af:	sub    BYTE PTR [ebp-0xd743b9],dh
  40a3b5:	xor    al,0x42
  40a3b7:	sti    
  40a3b8:	out    0x77,eax
  40a3ba:	mov    dl,0x28
  40a3bc:	jmp    DWORD PTR [edx+eiz*4]
  40a3bf:	dec    ebx
  40a3c0:	neg    DWORD PTR [esp+eiz*8]
  40a3c3:	sub    BYTE PTR [ebp+0x6b],dh
  40a3c6:	les    edi,FWORD PTR [edi]
  40a3c8:	popf   
  40a3c9:	or     al,0xf4
  40a3cb:	sub    BYTE PTR [ebp+0x291e0627],dh
	...
  40a3dd:	add    BYTE PTR [eax],al
  40a3df:	add    ah,bh
  40a3e1:	and    dl,BYTE PTR [ebx+edi*8+0x2976fdfc]
  40a3e8:	in     al,dx
  40a3e9:	xchg   BYTE PTR [eax+edx*2-0x14],cl
  40a3ed:	and    al,BYTE PTR [esi]
  40a3ef:	add    al,0x57
  40a3f1:	(bad)  
  40a3f2:	imul   esp,DWORD PTR [edi-0x4d],0x6728f61a
  40a3f9:	cwde   
  40a3fa:	fidivr DWORD PTR [esi+ebx*8+0x39]
  40a3fe:	fisubr WORD PTR [eax]
  40a400:	mov    esp,0x2e291922
  40a405:	or     eax,0x22ce8fc1
  40a40a:	into   
  40a40b:	sbb    al,0x59
  40a40d:	scas   eax,DWORD PTR es:[edi]
  40a40e:	call   0xd14dba3b
  40a413:	jnp    0x40a40b
  40a415:	and    dh,BYTE PTR [esi-0x49d629d8]
  40a41b:	sub    BYTE PTR [ebp+ebp*1+0x227c639d],al
  40a422:	sahf   
  40a423:	outs   dx,BYTE PTR ds:[esi]
  40a424:	xchg   DWORD PTR [edx],ebx
  40a426:	xchg   esi,eax
  40a427:	sub    BYTE PTR [ebx+0x2c],bh
  40a42a:	dec    ecx
  40a42b:	sub    BYTE PTR [edx+eiz*1+0x3c],ah
  40a42f:	sbb    edx,DWORD PTR [edx+eiz*1+0x7e]
  40a433:	sbb    esi,DWORD PTR ds:0x4c287665
  40a439:	pop    eax
  40a43a:	lea    esi,[eax]
  40a43c:	inc    esp
  40a43d:	and    dl,BYTE PTR [ecx+0x54]
  40a440:	add    esp,DWORD PTR [edx]
  40a442:	pop    esi
  40a443:	sub    BYTE PTR [eax],al
	...
  40a451:	add    BYTE PTR [eax],al
  40a453:	out    dx,al
  40a454:	cmp    BYTE PTR [esi+0x28],bl
  40a457:	sub    al,0x2d
  40a459:	and    DWORD PTR [ebx+0x24],esp
  40a45c:	and    al,BYTE PTR [esi+0x6e]
  40a45f:	adc    ebx,DWORD PTR [edx]
  40a461:	sub    BYTE PTR ds:[eax+ebx*4],dl
  40a465:	jmp    esp
  40a467:	cmp    ebx,DWORD PTR [eax+0x20794107]
  40a46d:	jmp    DWORD PTR [esi]
  40a46f:	dec    ebx
  40a470:	pop    eax
  40a471:	lock push ss
  40a473:	dec    ebx
  40a474:	and    ch,al
  40a476:	inc    ebp
  40a477:	and    BYTE PTR [edx],0xff
  40a47a:	push   cs
  40a47b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a47c:	sbb    ecx,ebp
  40a47e:	xor    al,0x85
  40a480:	and    bh,bh
  40a482:	inc    BYTE PTR [esi]
  40a484:	push   ds
  40a485:	call   0xff62bc89
  40a48a:	and    BYTE PTR [esi],bl
  40a48c:	adc    DWORD PTR [eax],eax
  40a48e:	cmp    al,0x38
  40a490:	xor    DWORD PTR [ebx-0x50745b],eax
  40a496:	inc    edx
  40a497:	pop    ebx
  40a498:	and    dh,BYTE PTR [ebp-0x1f]
  40a49b:	dec    eax
  40a49c:	arpl   WORD PTR [ebp+0x458c44c6],bx
  40a4a2:	mov    ebp,0x283af4f7
  40a4a7:	and    dh,BYTE PTR [di]
  40a4aa:	fisub  WORD PTR [edi-0x4d5a003c]
  40a4b0:	or     eax,ebp
  40a4b2:	sbb    ecx,DWORD PTR [edx+0x22]
  40a4b5:	inc    DWORD PTR [ecx]
	...
  40a4c3:	add    BYTE PTR [eax],al
  40a4c5:	add    BYTE PTR [esi-0x22],dl
  40a4c8:	inc    eax
  40a4c9:	jmp    0xe940a896
  40a4ce:	loopne 0x40a4f0
  40a4d0:	jne    0x40a4c3
  40a4d2:	js     0x40a479
  40a4d4:	cld    
  40a4d5:	jbe    0x40a45b
  40a4d7:	and    BYTE PTR [ebp+0x6d],dh
  40a4da:	jl     0x40a476
  40a4dc:	pop    es
  40a4dd:	push   ecx
  40a4de:	xchg   esi,eax
  40a4df:	cmp    bh,0x5e
  40a4e2:	jbe    0x40a527
  40a4e4:	add    al,0xe9
  40a4e6:	adc    ecx,DWORD PTR [esp+ebp*8-0x1e65c98]
  40a4ed:	add    BYTE PTR [ebp+0x300069e8],ah
  40a4f3:	push   cs
  40a4f4:	push   DWORD PTR [ebp+0x2]
  40a4f7:	std    
  40a4f8:	jno    0x40a497
  40a4fa:	xor    eax,0x464588e8
  40a4ff:	add    DWORD PTR [ebx],0x8d050a01
  40a505:	test   DWORD PTR [ebp-0x19],ecx
  40a508:	(bad)  
  40a509:	jmp    FWORD PTR [edx-0x358e2e04]
  40a50f:	add    al,0xb
  40a511:	ror    BYTE PTR [esi+0x38],0x3c
  40a515:	add    al,0xbb
  40a517:	add    al,0x0
  40a519:	ja     0x40a4ba
  40a51b:	jl     0x40a545
  40a51d:	cmp    ecx,DWORD PTR [ebx-0x727a72f7]
  40a523:	jmp    0xa3a9:0x16afffe
	...
  40a536:	add    BYTE PTR [eax],al
  40a538:	add    BYTE PTR [ebp-0x7597b019],dl
  40a53e:	add    al,0xef
  40a540:	mov    esi,0x874e87a
  40a545:	mov    ds:0xb5ffc0e5,al
  40a54a:	cld    
  40a54b:	cmc    
  40a54c:	lahf   
  40a54d:	(bad)
  40a550:	jne    0x40a528
  40a552:	out    0x74,eax
  40a554:	or     dl,ah
  40a556:	sbb    DWORD PTR [edi+edi*8+0x4c1e1d5],0xec8a354a
  40a561:	leave  
  40a562:	loopne 0x40a55f
  40a564:	push   0x3a
  40a566:	jle    0x40a585
  40a568:	dec    DWORD PTR [edi+0x1c]
  40a56b:	out    0xd,eax
  40a56d:	out    0xe6,eax
  40a56f:	dec    BYTE PTR [ecx+0x67e7ff]
  40a575:	arpl   WORD PTR [esi],bp
  40a577:	push   ss
  40a578:	mov    esi,0x40eaf7bb
  40a57d:	arpl   WORD PTR [esi],si
  40a57f:	ret    0xa23a
  40a582:	cs es jne 0x40a5e1
  40a586:	(bad)  
  40a587:	dec    edi
  40a588:	les    eax,FWORD PTR [edi+ebp*8]
  40a58b:	and    eax,0xafe6ff75
  40a590:	pop    es
  40a591:	or     edx,DWORD PTR [eax-0x78]
  40a594:	(bad)  
  40a595:	in     al,dx
  40a596:	in     al,0x40
  40a598:	add    al,0x63
  40a59a:	pop    ecx
  40a59b:	jp     0x40a589
	...
  40a5a9:	add    BYTE PTR [eax],al
  40a5ab:	add    dl,ah
  40a5ad:	icebp  
  40a5ae:	dec    esi
  40a5af:	not    esp
  40a5b1:	push   ds
  40a5b2:	ja     0x40a5f9
  40a5b4:	iret   
  40a5b5:	jge    0x40a5dd
  40a5b7:	jne    0x40a62c
  40a5b9:	das    
  40a5ba:	scas   eax,DWORD PTR es:[edi]
  40a5bb:	or     ecx,ebx
  40a5bd:	inc    ecx
  40a5be:	mov    bl,0xff
  40a5c0:	mov    ah,0x12
  40a5c2:	inc    ebx
  40a5c3:	(bad)  
  40a5c5:	inc    ecx
  40a5c6:	add    eax,DWORD PTR [eax]
  40a5c8:	arpl   WORD PTR [edi-0x41],sp
  40a5cb:	mul    DWORD PTR [ebx+0x2e]
  40a5ce:	add    eax,DWORD PTR [eax]
  40a5d0:	pushf  
  40a5d1:	call   0x2ea5a505
  40a5d6:	add    ebp,DWORD PTR [edx+0x63]
  40a5d9:	les    eax,FWORD PTR [ebx]
  40a5db:	push   0x63
  40a5dd:	hlt    
  40a5de:	add    ecx,DWORD PTR [ebp-0x732b85e2]
  40a5e4:	out    0x81,al
  40a5e6:	sub    eax,0x24dd64ff
  40a5eb:	jne    0x40a648
  40a5ed:	mov    BYTE PTR [edi-0x4c98b405],ch
  40a5f3:	dec    DWORD PTR [esp+0x43]
  40a5f7:	je     0x40a657
  40a5f9:	test   DWORD PTR [ebp+0x1],ebp
  40a5fc:	arpl   WORD PTR ds:0xedb49be9,ax
  40a602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a603:	add    ebp,DWORD PTR [ecx+ebx*4]
  40a606:	clc    
  40a607:	sbb    edi,DWORD PTR [edx]
  40a609:	fs dec esi
  40a60b:	and    eax,0x77198ab3
	...
  40a61c:	add    BYTE PTR [eax],al
  40a61e:	add    dh,bl
  40a620:	sbb    DWORD PTR [esi],esi
  40a622:	and    eax,0x1b9ab60c
  40a627:	sub    ah,BYTE PTR [esi+ebp*1+0x25]
  40a62b:	jmp    0x111e:0xf42d1988
  40a632:	aad    0xcd
  40a634:	push   ds
  40a635:	push   ss
  40a636:	ja     0x40a616
  40a638:	and    eax,0xb5dc2516
  40a63d:	nop
  40a63e:	mov    dh,0x99
  40a640:	(bad)  
  40a641:	call   0xfe56bc6a
  40a646:	and    al,0xc4
  40a648:	push   ds
  40a649:	je     0x40a642
  40a64b:	(bad)  
  40a64c:	lock mov ah,BYTE PTR [esp+esi*4]
  40a650:	mov    WORD PTR [edi+ebx*1-0x4c],fs
  40a654:	push   ds
  40a655:	(bad)  
  40a656:	cdq    
  40a657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a659:	ss jmp 0x6f06ab82
  40a65f:	xchg   ebx,eax
  40a660:	push   ss
  40a661:	mov    esi,0xe4988c24
  40a666:	sbb    esi,DWORD PTR [ecx+0x63]
  40a669:	scas   al,BYTE PTR es:[edi]
  40a66a:	and    al,0xea
  40a66c:	mov    BYTE PTR [ebp+0x131e742c],dl
  40a672:	add    al,0xfb
  40a674:	mov    edx,0x1f64c2d1
  40a679:	push   esp
  40a67a:	xor    edx,DWORD PTR [esi+ebx*1-0x7a]
  40a67e:	and    al,0xce
  40a680:	adc    DWORD PTR [ecx+0x2c],edx
	...
  40a692:	add    bl,BYTE PTR [esi]
  40a694:	add    BYTE PTR [esi-0x37],dh
  40a697:	mov    al,ch
  40a699:	jbe    0x40a622
  40a69b:	push   ds
  40a69c:	push   0xffffffe9
  40a69e:	fsub   DWORD PTR [edx+0x1e60a83a]
  40a6a4:	mov    ch,0x59
  40a6a6:	ja     0x40a6c6
  40a6a8:	dec    DWORD PTR [esi-0x33]
  40a6ab:	or     eax,ebp
  40a6ad:	and    eax,0x70ff1e81
  40a6b2:	lea    eax,[ecx-0x9]
  40a6b5:	ss aas 
  40a6b7:	stos   DWORD PTR es:[edi],eax
  40a6b8:	inc    eax
  40a6ba:	mov    cl,0xda
  40a6bc:	inc    eax
  40a6bd:	jmp    0x1730ff01
  40a6c2:	inc    edi
  40a6c3:	push   ds
  40a6c4:	call   FWORD PTR [esp+ebp*8-0x78b73edb]
  40a6cb:	push   ds
  40a6cc:	mov    DWORD PTR [eax+ebp*1+0x16],ebp
  40a6d0:	(bad)  
  40a6d1:	(bad)  
  40a6d2:	jmp    0x40a6f1
  40a6d4:	addr16 inc esp
  40a6d6:	mov    ebx,0x4eedffc4
  40a6db:	adc    eax,0x1e80e6f7
  40a6e0:	jne    0x40a6cf
  40a6e2:	js     0x40a74b
  40a6e4:	mov    eax,ds:0x858c80d6
  40a6e9:	mov    ch,0x78
  40a6eb:	push   ds
  40a6ec:	jmp    FWORD PTR [edx+0x2]
  40a6ef:	sub    edi,esi
  40a6f1:	mov    esi,0x30740540
	...
  40a702:	add    BYTE PTR [eax],al
  40a704:	add    ah,bl
  40a706:	pop    edi
  40a707:	in     al,dx
  40a708:	mov    dh,0x40
  40a70a:	push   ds
  40a70b:	add    BYTE PTR ds:0x91bd82cf,bl
  40a711:	dec    eax
  40a712:	push   ds
  40a713:	(bad)  
  40a714:	jmp    0xf9a84de5
  40a719:	pusha  
  40a71a:	sub    al,0xbe
  40a71c:	add    ch,bl
  40a71e:	jle    0x40a727
  40a720:	call   0x3f4318
  40a725:	int    0xbe
  40a727:	jmp    0x40a720
  40a729:	int    0xe8
  40a72b:	(bad)  
  40a72c:	jne    0x40a760
  40a72e:	icebp  
  40a72f:	cmp    al,0x9b
  40a731:	(bad)  
  40a732:	call   0xe35d35
  40a737:	(bad)  
  40a738:	jmp    FWORD PTR [ebp+0x6de8077e]
  40a73e:	pushf  
  40a73f:	(bad)  
  40a740:	dec    DWORD PTR [ebp-0x42]
  40a743:	fcomip st,st(7)
  40a745:	dec    ebp
  40a746:	call   0xe75d49
  40a74b:	(bad)  
  40a74c:	(bad)  
  40a74d:	cmp    eax,0x5de8077e
  40a752:	fwait
  40a753:	(bad)  
  40a754:	dec    DWORD PTR [ebp-0x42]
  40a757:	xlat   BYTE PTR ds:[ebx]
  40a758:	imul   DWORD PTR [ebp-0x18]
  40a75b:	(bad)  
  40a75c:	jne    0x40a730
  40a75e:	lock or al,0x9b
  40a761:	int    0xe7
  40a763:	(bad)  
  40a764:	mov    ch,0x6e
  40a766:	add    bh,bh
  40a768:	inc    DWORD PTR [eax]
	...
  40a776:	add    BYTE PTR [eax],al
  40a778:	int    0x7d
  40a77a:	pop    es
  40a77b:	call   0x3f423d
  40a780:	lea    edi,[ebp-0x1872082d]
  40a786:	(bad)  
  40a787:	jne    0x40a70b
  40a789:	lock lock call 0xffa6:0xb5fee79d
  40a792:	(bad)  
  40a793:	jmp    DWORD PTR [edx-0x32006305]
  40a799:	out    0xb4,eax
  40a79b:	in     al,dx
  40a79c:	aad    0xe7
  40a79e:	(bad)  
  40a79f:	call   0x402d6e
  40a7a4:	arpl   WORD PTR [ebx+0x58],si
  40a7a7:	call   0xe8633300
  40a7ac:	mov    eax,ds:0xd14cff21
  40a7b2:	test   DWORD PTR ds:[ebx+edx*4+0x2a],0x21aadeda
  40a7bb:	(bad)  
  40a7bc:	out    dx,al
  40a7bd:	lds    ebx,FWORD PTR [ecx]
  40a7bf:	jmp    FWORD PTR [esi+esi*4]
  40a7c2:	push   ecx
  40a7c3:	popf   
  40a7c4:	and    al,0xb3
  40a7c6:	and    DWORD PTR [ebp-0xde4cc9],esi
  40a7cc:	or     ebp,edx
  40a7ce:	jg     0x40a7cf
  40a7d0:	or     al,0xdb
  40a7d2:	push   edi
  40a7d3:	lock or al,0xd3
  40a7d6:	and    edi,edi
  40a7d8:	jbe    0x40a814
  40a7da:	and    dh,BYTE PTR [ebp+0x0]
	...
  40a7e9:	add    BYTE PTR [eax],al
  40a7eb:	imul   esi,esi,0x9
  40a7ee:	(bad)  
  40a7ef:	in     al,dx
  40a7f0:	cli    
  40a7f1:	and    DWORD PTR [ebp-0xde050d],esi
  40a7f7:	retf   
  40a7f8:	lds    edi,FWORD PTR [edi-0x1]
  40a7fb:	aam    0x2
  40a7fd:	enter  0xbaf7,0x26
  40a801:	and    edi,edi
  40a803:	les    edx,FWORD PTR [edx]
  40a805:	xchg   edi,eax
  40a806:	sti    
  40a807:	retf   
  40a808:	pop    ds
  40a809:	mov    cl,0xff
  40a80b:	mov    ah,0x54
  40a80d:	inc    esi
  40a80e:	or     al,0x63
  40a810:	ror    DWORD PTR [esp+ebp*8+0x6a2069e0],1
  40a817:	arpl   ax,cx
  40a819:	add    bh,bh
  40a81b:	push   cs
  40a81c:	push   ss
  40a81d:	sub    edi,DWORD PTR [edx-0x76dea517]
  40a823:	push   ds
  40a824:	push   edx
  40a825:	lods   al,BYTE PTR ds:[esi]
  40a826:	jne    0x40a860
  40a828:	in     eax,dx
  40a829:	add    edi,edi
  40a82b:	cs add eax,0x523eaf6
  40a831:	sahf   
  40a832:	xchg   edi,eax
  40a833:	pop    esp
  40a834:	sub    eax,0x1b5c1fa9
  40a839:	add    DWORD PTR [edx-0x54173b67],ebx
  40a83f:	bound  eax,QWORD PTR ds:0x914483e9
  40a845:	loopne 0x40a872
  40a847:	or     eax,0x34216e19
  40a84c:	xchg   ecx,eax
  40a84d:	and    DWORD PTR fs:[eax],eax
	...
  40a85c:	add    BYTE PTR [eax],al
  40a85e:	mov    dh,0xd
  40a860:	push   ecx
  40a861:	dec    edi
  40a862:	leave  
  40a863:	sbb    dl,BYTE PTR [esi+0x4b]
  40a866:	and    DWORD PTR [edx],eax
  40a868:	jmp    0x6a6a9223
  40a86d:	dec    eax
  40a86e:	lfs    edx,FWORD PTR [ebp+0x8ad04ad]
  40a875:	and    DWORD PTR [esi+0xd],esi
  40a878:	inc    ecx
  40a879:	mov    cl,0xda
  40a87b:	sbb    ah,BYTE PTR [esi]
  40a87d:	mov    esp,DWORD PTR [esi+0x3cd77219]
  40a883:	in     eax,dx
  40a884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a885:	add    ebp,eax
  40a887:	fdivr  DWORD PTR [ebx+ebp*8-0x1e96fadd]
  40a88e:	int3   
  40a88f:	xchg   esi,eax
  40a890:	xchg   DWORD PTR [ebx+0x3a7dea0],ebp
  40a896:	adc    eax,0xb4b1352d
  40a89b:	sbb    bh,BYTE PTR [ecx]
  40a89d:	lods   al,BYTE PTR ds:[esi]
  40a89e:	hlt    
  40a89f:	fisub  WORD PTR [edi]
  40a8a1:	add    al,0xc
  40a8a3:	sub    eax,0x1a9cb081
  40a8a8:	xor    ecx,DWORD PTR ds:0xcec90a3
  40a8ae:	mov    cl,0x91
  40a8b0:	adc    bh,BYTE PTR [edx-0x70ffbc84]
  40a8b6:	inc    ebx
  40a8b7:	sbb    ch,BYTE PTR [eax-0x67]
  40a8ba:	xchg   edi,eax
  40a8bb:	(bad)  
  40a8be:	aas    
  40a8bf:	and    BYTE PTR [eax+0x9e],ah
	...
  40a8d1:	inc    ebx
  40a8d2:	mov    ch,0x67
  40a8d4:	jmp    0x1fed339
  40a8d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8da:	fiadd  WORD PTR [eax-0x17]
  40a8dd:	adc    BYTE PTR [ebx],bl
  40a8df:	jne    0x40a8d2
  40a8e1:	js     0x40a94b
  40a8e3:	shl    DWORD PTR [esi-0x7d],0x2d
  40a8e7:	(bad)  [ebp-0x7d]
  40a8ea:	sbb    ch,bl
  40a8ec:	call   0xe97e430b
  40a8f1:	int    0x1b
  40a8f3:	inc    esi
  40a8f4:	push   ebp
  40a8f5:	aaa    
  40a8f6:	pop    edx
  40a8f7:	mov    ecx,0xff1a434e
  40a8fc:	cmp    edx,DWORD PTR [edx-0x1c4bf923]
  40a902:	sbb    DWORD PTR [ebp+0x35],esi
  40a905:	inc    ebx
  40a906:	nop
  40a907:	pop    es
  40a908:	inc    ecx
  40a909:	or     eax,0x2326ff7c
  40a90e:	mov    eax,0x55c2bc8
  40a913:	push   ebp
  40a914:	bound  ecx,QWORD PTR [esi+eax*4-0x6f7cf23c]
  40a91b:	or     eax,DWORD PTR [esi]
  40a91d:	cmc    
  40a91e:	add    eax,ebp
  40a920:	lds    ecx,FWORD PTR [ebx+0x1a]
  40a923:	jmp    DWORD PTR [eax-0x5b]
  40a926:	sbb    eax,0x1a5474ff
  40a92b:	jne    0x40a91e
  40a92d:	js     0x40a9a0
  40a92f:	xchg   esp,eax
  40a930:	fiadd  WORD PTR [esi+ecx*4+0x4d]
  40a934:	in     eax,0x0
	...
  40a942:	add    BYTE PTR [eax],al
  40a944:	imul   eax,DWORD PTR [ebp+0x74],0xffdbe02b
  40a94b:	dec    DWORD PTR [esi+0x24]
  40a94e:	(bad)  
  40a94f:	jne    0x40a917
  40a951:	call   0xf9f645ea
  40a956:	dec    edi
  40a957:	jmp    FWORD PTR [edi]
  40a959:	cmc    
  40a95a:	(bad)  
  40a95b:	jne    0x40a923
  40a95d:	push   eax
  40a95e:	(bad)  
  40a95f:	jne    0x40a9d3
  40a961:	in     eax,dx
  40a962:	retf   
  40a963:	xchg   esi,eax
  40a964:	cmc    
  40a965:	clc    
  40a966:	pop    ecx
  40a967:	mov    esi,DWORD PTR [edi-0xb]
  40a96a:	cmp    BYTE PTR [ecx],0x3a
  40a96d:	jle    0x40a978
  40a96f:	push   edx
  40a970:	repnz pop eax
  40a972:	fwait
  40a973:	push   DWORD PTR [ebp+0xeebbf2c]
  40a979:	test   BYTE PTR [ebp+0x10],bh
  40a97c:	cmp    dh,BYTE PTR [ecx+0x7]
  40a97f:	mov    edi,edi
  40a981:	adc    al,0xfe
  40a983:	jne    0x40a93b
  40a985:	mov    BYTE PTR [eax],al
  40a987:	mov    ecx,DWORD PTR [eax-0x14]
  40a98a:	add    DWORD PTR [ebx],ebp
  40a98c:	cmp    cl,dl
  40a98e:	ror    DWORD PTR [edx+edi*8],0x5d
  40a992:	mov    ch,ah
  40a994:	xor    eax,0xafff0b7e
  40a999:	or     al,0xe8
  40a99b:	mov    ecx,0xfffef86c
  40a9a0:	iret   
  40a9a1:	or     BYTE PTR [eax-0x1],dl
  40a9a4:	dec    DWORD PTR [eax+ebp*8]
  40a9a7:	xor    DWORD PTR [eax],eax
	...
  40a9b5:	add    BYTE PTR [eax],al
  40a9b7:	dec    ebp
  40a9b8:	clc    
  40a9b9:	dec    cl
  40a9bb:	js     0x40a9c6
  40a9bd:	add    BYTE PTR [ebp+0x51],dl
  40a9c0:	aad    0x82
  40a9c2:	les    ecx,FWORD PTR [edx+0x4953564f]
  40a9c8:	popw   es
  40a9ca:	add    BYTE PTR [esi],cl
  40a9cc:	adc    eax,DWORD PTR [edx+0x7404b67d]
  40a9d2:	or     al,0x63
  40a9d4:	stos   DWORD PTR es:[edi],eax
  40a9d5:	lahf   
  40a9d6:	packsswb mm6,QWORD PTR [edx+0x3a0e8305]
  40a9dd:	add    esi,DWORD PTR [ebp+0x5a]
  40a9e0:	repz inc ebx
  40a9e2:	pop    ebx
  40a9e3:	sbb    al,0xf0
  40a9e5:	dec    esp
  40a9e6:	ret    0x2e53
  40a9e9:	mov    al,BYTE PTR [ebp+0x5f]
  40a9ec:	stos   DWORD PTR es:[edi],eax
  40a9ed:	and    al,BYTE PTR [edi]
  40a9ef:	loopne 0x40a9ea
  40a9f1:	lldt   di
  40a9f4:	sub    cl,BYTE PTR [edx]
  40a9f6:	ror    bh,0x25
  40a9f9:	jmp    0x21c8:0xbddfa8bf
  40aa00:	add    ecx,DWORD PTR ds:[ebx-0x1f7dc55a]
  40aa07:	pop    esp
  40aa08:	stos   DWORD PTR es:[edi],eax
  40aa09:	lahf   
  40aa0a:	adc    esp,DWORD PTR [ebx+0x3a]
  40aa0d:	pop    es
  40aa0e:	or     esp,DWORD PTR [ebx]
  40aa10:	xor    cl,BYTE PTR [ebx+ebp*1]
  40aa13:	and    edx,DWORD PTR [ebx-0x42]
  40aa16:	pop    ebp
  40aa17:	sub    ch,ah
  40aa19:	repnz inc DWORD PTR [eax]
	...
  40aa28:	add    BYTE PTR [eax],al
  40aa2a:	cmp    ebx,esp
  40aa2c:	sbb    eax,0xc7a75775
  40aa31:	mov    edi,0xb4368e0
  40aa36:	hlt    
  40aa37:	push   eax
  40aa38:	inc    ebx
  40aa39:	call   0xff5f2d5d
  40aa3e:	out    0x94,eax
  40aa40:	mov    ebx,0xbe4770e8
  40aa46:	mov    ecx,0xbffc432
  40aa4b:	adc    eax,DWORD PTR [ebx]
  40aa4d:	add    BYTE PTR [ebx+0x1b],ah
  40aa50:	mov    si,WORD PTR [esi]
  40aa53:	mov    cl,BYTE PTR es:[ebp+0x67]
  40aa57:	sbb    esp,DWORD PTR [esi-0x73]
  40aa5a:	es add eax,0x91a5b4d9
  40aa60:	test   al,0x1d
  40aa62:	push   ss
  40aa63:	inc    ecx
  40aa64:	rol    DWORD PTR [esi+edi*4+0x17],0xce
  40aa69:	sbb    eax,0x81d14116
  40aa6e:	call   0xf65e688a
  40aa73:	or     BYTE PTR [esi-0x39],ah
  40aa76:	mov    ah,0x83
  40aa78:	and    al,0x44
  40aa7a:	dec    eax
  40aa7b:	sbb    BYTE PTR [esp+eax*2],bl
  40aa7e:	jnp    0x40aa0c
  40aa80:	sbb    BYTE PTR ds:0x482c8d5c,0x57
  40aa87:	lea    esp,[eax+ecx*2]
  40aa8a:	ficom  WORD PTR [eax+0x8978]
	...
  40aa9c:	add    dh,al
  40aa9e:	inc    ecx
  40aa9f:	inc    eax
  40aaa0:	hlt    
  40aaa1:	cmp    al,0x17
  40aaa3:	jmp    0x9398a9b8
  40aaa8:	fldenv [ebx+0x6309a005]
  40aaae:	add    eax,0x8ac710e9
  40aab3:	fmul   QWORD PTR [ebx]
  40aab5:	call   0xc7518782
  40aaba:	mov    BYTE PTR [ebx+eiz*1+0x43b416b3],ch
  40aac1:	cld    
  40aac2:	nop
  40aac3:	sub    al,0x2c
  40aac5:	test   BYTE PTR [eax+0x2e],ah
  40aac8:	sbb    eax,0x2c2c90ec
  40aacd:	xor    DWORD PTR [edx+0x1e],edi
  40aad0:	sbb    eax,0x139c88df
  40aad5:	out    0x98,al
  40aad7:	and    BYTE PTR [ebx+0x73],bl
  40aada:	add    eax,0x61d003e9
  40aadf:	ins    BYTE PTR es:[edi],dx
  40aae0:	xchg   edi,eax
  40aae1:	pushf  
  40aae2:	pop    esp
  40aae3:	add    cl,ah
  40aae5:	pusha  
  40aae6:	add    eax,0xab44fa00
  40aaeb:	add    BYTE PTR [ebp+ebx*4+0x3e],dh
  40aaef:	push   eax
  40aaf0:	ror    DWORD PTR [edx-0x77],1
  40aaf3:	add    cl,ch
  40aaf5:	jmp    0x40aa87
  40aaf7:	punpckldq mm5,mm5
  40aafa:	repnz rcl dh,0x63
  40aafe:	or     bh,bh
  40ab00:	xor    eax,0x0
	...
  40ab0d:	add    BYTE PTR [eax],al
  40ab0f:	add    dh,al
  40ab11:	sub    ecx,DWORD PTR [edi]
  40ab13:	fs popf 
  40ab15:	push   ds
  40ab16:	push   eax
  40ab17:	pop    ss
  40ab18:	mov    ch,0x1e
  40ab1a:	jnp    0x40ab92
  40ab1c:	pusha  
  40ab1d:	add    eax,0xc668a783
  40ab22:	or     dl,BYTE PTR [esi+0x570f28ed]
  40ab28:	es pop ss
  40ab2a:	add    DWORD PTR [ecx-0x2dfe71a8],0x50
  40ab31:	jmp    0xe96a:0x2771d974
  40ab38:	cli    
  40ab39:	adc    eax,0x15fae969
  40ab3e:	push   ebp
  40ab3f:	pop    esi
  40ab40:	cmc    
  40ab41:	add    eax,0x15cae96a
  40ab46:	out    0xf,eax
  40ab48:	rcl    DWORD PTR ds:0x91a0f2ff,cl
  40ab4e:	sub    BYTE PTR [ecx+0x53d41db0],bl
  40ab54:	push   edi
  40ab55:	push   ss
  40ab56:	mov    edx,DWORD PTR [ecx]
  40ab58:	test   eax,0x6092ffab
  40ab5d:	mov    ah,0x52
  40ab5f:	mov    bh,0x7f
  40ab61:	nop
  40ab62:	jae    0x14056c8
  40ab68:	int    0xa9
  40ab6a:	(bad)  
  40ab6b:	(bad)  
  40ab6c:	mov    edx,0xb275c00c
  40ab71:	push   esp
  40ab72:	out    0x9d,eax
	...
  40ab80:	add    BYTE PTR [eax],al
  40ab82:	add    BYTE PTR [eax],dl
  40ab84:	stc    
  40ab85:	(bad)  
  40ab86:	sub    edx,DWORD PTR [ecx-0x73]
  40ab89:	ret    
  40ab8a:	pop    ebx
  40ab8b:	sbb    eax,0x9ac2c85b
  40ab90:	add    DWORD PTR [ebp-0x75],edx
  40ab93:	sahf   
  40ab94:	jge    0x40ab5a
  40ab96:	lock push ebp
  40ab98:	dec    esi
  40ab99:	sub    bl,bl
  40ab9b:	popf   
  40ab9c:	jae    0x40aba9
  40ab9e:	push   DWORD PTR [edi]
  40aba0:	or     eax,ebp
  40aba2:	add    DWORD PTR [edi],edx
  40aba4:	cli    
  40aba5:	(bad)  
  40aba6:	push   eax
  40aba7:	mov    ebp,0x4e80773
  40abac:	xchg   ebx,eax
  40abad:	(bad)  
  40abae:	call   ecx
  40abb0:	icebp  
  40abb1:	push   edi
  40abb2:	add    esi,edx
  40abb4:	add    al,0xc0
  40abb6:	je     0x40ab3d
  40abb8:	jle    0x40abff
  40abba:	hlt    
  40abbb:	push   0xfffffff0
  40abbd:	je     0x40abcb
  40abbf:	mov    ebp,0xa1e80776
  40abc4:	out    dx,al
  40abc5:	(bad)  
  40abc6:	inc    ebx
  40abc8:	inc    esi
  40abc9:	sti    
  40abca:	(bad)  
  40abcb:	idiv   eax
  40abcd:	dec    edi
  40abce:	push   DWORD PTR [edi]
  40abd0:	or     eax,0xe10275ff
  40abd5:	cwde   
  40abd6:	std    
  40abd7:	popf   
  40abd8:	lock mov BYTE PTR [ebp-0x5e],al
  40abdc:	lock je 0x40abcf
  40abdf:	cmp    eax,0xb7fff776
  40abe4:	add    al,0xff
  40abe6:	jne    0x40abe8
	...
  40abf4:	add    BYTE PTR [eax],al
  40abf6:	ds loope 0x40ac09
  40abf9:	(bad)  
  40abfa:	cmp    eax,0x7dd88af0
  40abff:	jbe    0x40abfc
  40ac01:	call   0xffbdf669
  40ac06:	int3   
  40ac07:	add    edx,DWORD PTR [ecx+0x7d42bbf7]
  40ac0d:	(bad)  
  40ac0e:	mov    esp,0xb4570378
  40ac13:	xchg   ecx,eax
  40ac14:	or     ch,al
  40ac16:	sti    
  40ac17:	lods   eax,DWORD PTR ds:[esi]
  40ac18:	sbb    bh,bh
  40ac1a:	fcomp  DWORD PTR [edi-0x42]
  40ac1d:	pop    esi
  40ac1e:	stos   BYTE PTR es:[edi],al
  40ac1f:	pusha  
  40ac20:	or     eax,DWORD PTR [eax]
  40ac22:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40ac24:	or     DWORD PTR es:[esi],0x32
  40ac28:	add    DWORD PTR [edx+0x42],esi
  40ac2b:	dec    ebx
  40ac2c:	nop
  40ac2d:	(bad)  
  40ac2f:	(bad)  [ebx]
  40ac31:	call   0xff5a5f18
  40ac36:	ins    BYTE PTR es:[edi],dx
  40ac37:	fpatan 
  40ac39:	(bad)  
  40ac3a:	out    dx,al
  40ac3b:	adc    eax,0x735eaf2b
  40ac40:	sbb    bh,bh
  40ac42:	into   
  40ac43:	push   cs
  40ac44:	sbb    dh,BYTE PTR [ebp+0x5b]
  40ac47:	xchg   BYTE PTR [edi-0x3],bl
  40ac4a:	inc    esp
  40ac4b:	mov    ebx,DWORD PTR [edx]
  40ac4d:	jne    0x40aca2
  40ac4f:	xchg   ebx,eax
  40ac50:	pop    DWORD PTR [edi]
  40ac52:	dec    ebx
  40ac53:	call   0xa76dab72
  40ac58:	scas   eax,DWORD PTR es:[edi]
  40ac59:	adc    eax,DWORD PTR [eax]
	...
  40ac67:	add    BYTE PTR [eax],al
  40ac69:	ficomp DWORD PTR [edi]
  40ac6b:	sbb    dh,BYTE PTR [ebp+0x73]
  40ac6e:	mov    bl,0x8f
  40ac70:	pop    es
  40ac71:	or     esp,DWORD PTR [ebp-0x60f300e9]
  40ac77:	xchg   edi,eax
  40ac78:	or     esp,DWORD PTR [eax+0x54]
  40ac7b:	icebp  
  40ac7c:	(bad)  
  40ac7d:	jbe    0x40acad
  40ac7f:	sbb    dh,BYTE PTR [ebp+0x6b]
  40ac82:	(bad)  
  40ac83:	call   0x5375:0x19e2ecfc
  40ac8a:	add    eax,0x1d649026
  40ac8f:	mov    WORD PTR [eax],ds
  40ac91:	aam    0x13
  40ac93:	push   ss
  40ac94:	nop
  40ac95:	pop    esp
  40ac96:	lahf   
  40ac97:	lock sbb cl,BYTE PTR [esi-0x3]
  40ac9b:	adc    BYTE PTR [esi-0x29],ch
  40ac9e:	adc    edi,esi
  40aca0:	sbb    DWORD PTR [esi],ebp
  40aca2:	cmc    
  40aca3:	cmc    
  40aca4:	(bad)  
  40aca5:	fs sbb eax,0x13a46fcd
  40acab:	mov    al,0x46
  40acad:	jae    0x40acb4
  40acaf:	xor    al,0x8d
  40acb1:	xchg   DWORD PTR [ebx],edx
  40acb3:	pop    esp
  40acb4:	or     cl,bh
  40acb6:	add    eax,0x1d5c8fce
  40acbb:	jne    0x40ad2d
  40acbd:	jl     0x40acd2
  40acbf:	mov    esi,0x3c14688f
  40acc4:	or     al,0x7b
  40acc6:	sub    ebp,DWORD PTR [edi+0x3c7f6419]
  40accc:	hlt    
	...
  40acd9:	add    BYTE PTR [eax],al
  40acdb:	add    bl,ch
  40acdd:	pop    es
  40acde:	sahf   
  40acdf:	(bad)
  40ace3:	or     al,0x3b
  40ace5:	cmp    ecx,DWORD PTR [edi+0x1c7f4419]
  40aceb:	lock jmp 0x40acf5
  40acee:	jle    0x40ac7f
  40acf0:	push   0x3b0bfc12
  40acf5:	dec    ebx
  40acf6:	outs   dx,DWORD PTR ds:[esi]
  40acf7:	sbb    DWORD PTR [edi+edi*2],esp
  40acfa:	mov    esp,0x3007ebfb
  40acff:	inc    esi
  40ad00:	outs   dx,DWORD PTR ds:[esi]
  40ad01:	add    eax,0x86ff8cbc
  40ad06:	and    eax,0x45baad28
  40ad0b:	(bad)  
  40ad0c:	push   eax
  40ad0d:	lahf   
  40ad0e:	out    0x18,eax
  40ad10:	outs   dx,BYTE PTR ds:[esi]
  40ad11:	std    
  40ad12:	inc    DWORD PTR [eax+0x26]
  40ad15:	ja     0x40ad16
  40ad17:	cs dec edx
  40ad19:	cwde   
  40ad1a:	adc    esp,DWORD PTR [esi]
  40ad1c:	in     al,dx
  40ad1d:	or     ch,al
  40ad1f:	push   ebp
  40ad20:	dec    esi
  40ad21:	adc    bh,bh
  40ad23:	bound  esi,QWORD PTR [edi+0x1c]
  40ad26:	cmp    ebp,eax
  40ad28:	pusha  
  40ad29:	add    eax,0x87ccac8b
  40ad2e:	cmp    cl,ch
  40ad30:	in     eax,0x9
  40ad32:	jmp    0x460ef6
  40ad37:	es in  al,0xe
  40ad3a:	add    cl,ch
  40ad3c:	pusha  
  40ad3d:	add    eax,0x248d
	...
  40ad4e:	add    BYTE PTR [ebx-0x4b],bh
  40ad51:	(bad)  
  40ad52:	pop    esp
  40ad53:	xchg   ebx,eax
  40ad54:	adc    esi,DWORD PTR [ebp-0x7]
  40ad57:	imul   ebx,DWORD PTR [eax+0x1356d107],0xffffffff
  40ad5e:	mov    esi,0x34830de7
  40ad63:	dec    ebx
  40ad64:	add    eax,0x29b70a74
  40ad69:	cmp    ebp,DWORD PTR [eax]
  40ad6b:	adc    dh,BYTE PTR [di-0x63]
  40ad6f:	mov    BYTE PTR [edi+0x6b],bh
  40ad72:	jmp    0x1500abd7
  40ad77:	pop    esp
  40ad78:	popf   
  40ad79:	in     al,dx
  40ad7a:	ret    0x1221
  40ad7d:	(bad)  
  40ad7e:	hlt    
  40ad7f:	dec    esp
  40ad80:	sbb    eax,0x5670279
  40ad85:	mov    DWORD PTR [ebx+edi*2],esp
  40ad88:	push   ds
  40ad89:	pop    es
  40ad8a:	fstp   QWORD PTR cs:0x560e900
  40ad91:	adc    esp,0x44
  40ad94:	add    eax,0x4b8f174
  40ad99:	add    BYTE PTR [eax],al
  40ad9b:	xchg   ebp,eax
  40ad9c:	lods   al,BYTE PTR ds:[esi]
  40ad9d:	(bad)  
  40ad9e:	jne    0x40ada6
  40ada0:	fiadd  WORD PTR [esi-0x6b]
  40ada3:	xor    eax,0x3675feed
  40ada8:	in     eax,dx
  40ada9:	je     0x40adb7
  40adab:	jb     0x40ad39
  40adad:	xchg   esp,eax
  40adae:	push   DWORD PTR [ebp-0x21]
  40adb1:	mov    al,BYTE PTR [eax]
	...
  40adbf:	add    BYTE PTR [eax],al
  40adc1:	add    BYTE PTR [edx-0x31ba74fb],bh
  40adc7:	mov    BYTE PTR [eax],bh
  40adc9:	add    BYTE PTR [edi],bh
  40adcb:	adc    ebp,eax
  40adcd:	xchg   dl,cl
  40adcf:	add    eax,0xedffc700
  40add4:	(bad)  
  40add5:	(bad)  
  40add6:	mov    edx,0xbe45c705
  40addb:	or     BYTE PTR [eax],al
  40addd:	add    BYTE PTR [edx+0x7af044d2],cl
  40ade3:	add    eax,0x44270000
  40ade8:	out    dx,eax
  40ade9:	push   eax
  40adea:	test   DWORD PTR [ebx-0xd],0xf7440750
  40adf1:	push   eax
  40adf2:	mov    ch,0x73
  40adf4:	adc    edi,edi
  40adf6:	das    
  40adf7:	add    eax,ebp
  40adf9:	loope  0x40adff
  40adfb:	stc    
  40adfc:	inc    BYTE PTR [ebx+0x73ffdd77]
  40ae02:	sub    DWORD PTR [ebp+edi*2+0x2c813af8],eax
  40ae09:	and    DWORD PTR [edi-0xb],0xffffffff
  40ae0d:	je     0x40ae4b
  40ae0f:	test   BYTE PTR [ebp-0x10],bh
  40ae12:	cmp    al,BYTE PTR [ecx-0x12d000e0]
  40ae18:	(bad)  
  40ae19:	jne    0x40ae31
  40ae1b:	fnstsw WORD PTR [edx*4+0x75fef8b5]
  40ae22:	arpl   WORD PTR [edx+0x7516],si
	...
  40ae34:	add    BYTE PTR [edi-0x3a],dl
  40ae37:	rcl    DWORD PTR [esp+edi*8-0xc8ae939],1
  40ae3e:	iret   
  40ae3f:	nop
  40ae40:	or     edi,ebx
  40ae42:	push   DWORD PTR [eax-0x1]
  40ae45:	in     al,0xdf
  40ae47:	nop
  40ae48:	test   ebx,0xd4ff7b32
  40ae4e:	out    dx,eax
  40ae4f:	nop
  40ae50:	repz mov ebx,0xc4ff7b4a
  40ae56:	call   DWORD PTR [eax+0x7b42cbef]
  40ae5c:	push   DWORD PTR [edi+ebx*2-0x5ea300f6]
  40ae63:	test   al,0xfe
  40ae65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae66:	pop    ds
  40ae67:	cmp    BYTE PTR [ebp-0x71],0x1e
  40ae6b:	(bad)  
  40ae6c:	sbb    eax,0x75161e09
  40ae71:	pop    edi
  40ae72:	inc    esi
  40ae73:	outs   dx,DWORD PTR ds:[esi]
  40ae74:	xchg   esp,eax
  40ae75:	test   BYTE PTR [edi],bh
  40ae77:	test   eax,0x7d17dff
  40ae7c:	call   0xff56696a
  40ae81:	stc    
  40ae82:	sbb    eax,0x46577516
  40ae87:	adc    DWORD PTR [esp+ebx*2+0x57751667],0x76
  40ae8f:	es xchg edi,eax
  40ae91:	dec    esp
  40ae92:	ja     0x40ae59
  40ae94:	or     cl,BYTE PTR [ebp+0x2f]
  40ae97:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  40aea6:	add    BYTE PTR [eax],al
  40aea8:	cmp    eax,0x955f1687
  40aead:	push   ebp
  40aeae:	inc    ecx
  40aeaf:	adc    BYTE PTR [ebx-0xf],ah
  40aeb2:	mov    ch,ah
  40aeb4:	loopne 0x40af1f
  40aeb6:	pop    ds
  40aeb7:	push   esi
  40aeb8:	sbb    al,0x5
  40aeba:	fmul   QWORD PTR [ebx]
  40aebc:	or     edi,DWORD PTR [eax+0x6e]
  40aebf:	push   ss
  40aec0:	or     al,0x7e
  40aec2:	lods   al,BYTE PTR ds:[esi]
  40aec3:	pavgb  mm2,QWORD PTR [ecx-0x48e0cac]
  40aeca:	add    BYTE PTR [ebx+eiz*2],0x5
  40aece:	jmp    0xe183ca88
  40aed3:	add    esp,esp
  40aed5:	cdq    
  40aed6:	loopne 0x40af03
  40aed8:	(bad)  
  40aed9:	jne    0x40af01
  40aedb:	push   ss
  40aedc:	pushf  
  40aedd:	leave  
  40aede:	and    BYTE PTR [ebx+eiz*2],al
  40aee1:	add    eax,0xd1e88e9
  40aee6:	mov    ecx,0x10fd3616
  40aeeb:	(bad)  
  40aeed:	paddd  mm1,QWORD PTR [ebx-0x6795eeda]
  40aef4:	lods   al,BYTE PTR ds:[esi]
  40aef5:	add    al,0x75
  40aef7:	pop    es
  40aef8:	loopne 0x40ae8b
  40aefa:	in     al,0x2
  40aefc:	adc    DWORD PTR [edi],eax
  40aefe:	push   0xffffff97
  40af00:	mov    BYTE PTR [esi],al
  40af02:	pop    edi
  40af03:	or     cl,bl
  40af05:	add    eax,0xaf6303e9
  40af0a:	scas   eax,DWORD PTR es:[edi]
  40af0b:	inc    edx
	...
  40af18:	add    BYTE PTR [eax],al
  40af1a:	add    BYTE PTR [ebx+0x5],ch
  40af1d:	ins    BYTE PTR es:[edi],dx
  40af1e:	mov    edi,0x8fb5b474
  40af23:	pop    esp
  40af24:	sbb    eax,0xf5c73ad
  40af29:	push   0xffffff97
  40af2b:	dec    esp
  40af2c:	push   es
  40af2d:	adc    eax,0x1d455800
  40af32:	or     cl,BYTE PTR [ebx]
  40af34:	add    eax,0xaf6303e9
  40af39:	scas   eax,DWORD PTR es:[edi]
  40af3a:	inc    edx
  40af3b:	imul   eax,DWORD PTR ds:0x928976a,0x0
  40af42:	sti    
  40af43:	das    
  40af44:	add    BYTE PTR [ebp+0x71],0xd7
  40af48:	pushf  
  40af49:	pop    ss
  40af4a:	data16 in al,0x6
  40af4d:	call   0xff4f4213
  40af52:	les    edx,FWORD PTR fs:[esi]
  40af55:	push   eax
  40af56:	dec    esi
  40af57:	in     al,dx
  40af58:	push   es
  40af59:	call   0xff4f1f8f
  40af5e:	jo     0x40af0c
  40af60:	and    ch,bl
  40af62:	aam    0xdd
  40af64:	enter  0x99f7,0x77
  40af68:	cwde   
  40af69:	pop    es
  40af6a:	adc    DWORD PTR [esi],esp
  40af6c:	je     0x40af6d
  40af6e:	push   ds
  40af6f:	fmul   st,st(0)
  40af71:	jecxz  0x40afd7
  40af73:	add    al,0x17
  40af75:	push   eax
  40af76:	cmp    DWORD PTR [edi+ecx*1-0x24770e8b],0xffffff91
  40af7e:	inc    BYTE PTR [eax]
	...
  40af8c:	add    BYTE PTR [eax],al
  40af8e:	push   edi
  40af8f:	add    BYTE PTR [ebp-0xf],0xf0
  40af93:	pcmpeqw mm4,mm1
  40af96:	dec    eax
  40af97:	xor    bh,dl
  40af99:	out    0x6f,al
  40af9b:	cmp    BYTE PTR [ebp-0x3b],0x61
  40af9f:	cwde   
  40afa0:	sbb    eax,0x5016c564
  40afa5:	into   
  40afa6:	in     eax,dx
  40afa7:	or     bh,bh
  40afa9:	cmp    al,0x6b
  40afab:	push   cs
  40afac:	jne    0x40af9f
  40afae:	cmp    BYTE PTR [edi-0x3],bl
  40afb1:	mov    dh,0x4f
  40afb3:	add    BYTE PTR [ebp-0x4f],0x10
  40afb7:	pcmpeqw mm6,mm1
  40afba:	mov    BYTE PTR [esi-0x6],bl
  40afbd:	sahf   
  40afbe:	ja     0x40af42
  40afc0:	jge    0x40af53
  40afc2:	pusha  
  40afc3:	cwde   
  40afc4:	or     DWORD PTR [ecx+0x60],edx
  40afc7:	add    eax,0x584a0000
  40afcc:	enter  0x32c2,0x2
  40afd0:	lea    eax,[ebp-0x4e]
  40afd3:	push   edx
  40afd4:	(bad)  
  40afd5:	jne    0x40af65
  40afd7:	stc    
  40afd8:	je     0x40afe6
  40afda:	jge    0x40b05b
  40afdc:	pop    es
  40afdd:	call   0x3fa75c
  40afe2:	jns    0x40b05b
  40afe4:	test   DWORD PTR [eax],0xb7fc17
  40afea:	or     al,BYTE PTR [edx]
  40afec:	add    BYTE PTR [esi+0x33],bl
  40afef:	les    eax,FWORD PTR [edi]
	...
  40b001:	jg     0x40b052
  40b003:	not    DWORD PTR [eax-0x73]
  40b006:	jg     0x40b00f
  40b008:	call   0x3f42cf
  40b00d:	push   ecx
  40b00e:	bnd call 0x426b0f
  40b014:	call   edi
  40b016:	stc    
  40b017:	out    0xe7,eax
  40b019:	sbb    cl,bh
  40b01b:	(bad)  
  40b01c:	cmp    eax,DWORD PTR [edi]
  40b01e:	(bad)  
  40b01f:	je     0x40b026
  40b021:	arpl   WORD PTR [ecx],ax
  40b023:	add    BYTE PTR [eax],al
  40b025:	mov    al,BYTE PTR [ebp+edi*2+0x237784fc]
  40b02c:	lea    eax,[edi+0x1]
  40b02f:	push   eax
  40b030:	jmp    DWORD PTR [edi]
  40b032:	adc    edi,esp
  40b034:	or     eax,0x8dfef1fb
  40b039:	inc    edi
  40b03a:	add    DWORD PTR [eax-0x1],edx
  40b03d:	aaa    
  40b03e:	adc    edi,esp
  40b040:	cmp    dh,BYTE PTR [eax-0x7872010f]
  40b046:	stc    
  40b047:	dec    edi
  40b048:	push   DWORD PTR [edi+0x9]
  40b04b:	out    0x2e,eax
  40b04d:	add    cl,bh
  40b04f:	dec    BYTE PTR [ebp+0x500bd963]
  40b055:	cmp    al,0xf2
  40b057:	sti    
  40b058:	out    0x10,eax
  40b05a:	mov    BYTE PTR [ebx],dl
  40b05c:	(bad)  
  40b05d:	(bad)  
  40b05f:	adc    ecx,DWORD PTR [ebp-0x14c6962]
	...
  40b071:	add    BYTE PTR [eax],al
  40b073:	add    BYTE PTR [esi+0x18c41b26],dl
  40b079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b07a:	adc    cl,BYTE PTR [ecx+0x4580baa6]
  40b080:	or     ecx,DWORD PTR [edi+0x12]
  40b083:	jne    0x40b0f0
  40b085:	(bad)  
  40b086:	pop    eax
  40b087:	sti    
  40b088:	hlt    
  40b089:	ret    
  40b08a:	jl     0x40b0d1
  40b08c:	sti    
  40b08d:	lahf   
  40b08e:	nop
  40b08f:	out    dx,eax
  40b090:	arpl   WORD PTR [edx-0x6a],cx
  40b093:	sbb    BYTE PTR [esi-0x36],0x3
  40b097:	je     0x40b0df
  40b099:	lahf   
  40b09a:	nop
  40b09b:	out    0x63,eax
  40b09d:	jb     0x40b049
  40b09f:	add    BYTE PTR [esi-0xa],0x3
  40b0a3:	je     0x40b0e7
  40b0a5:	xchg   BYTE PTR [ecx],bl
  40b0a7:	cmp    esp,DWORD PTR [edx]
  40b0a9:	push   ds
  40b0aa:	adc    dh,BYTE PTR [ebp-0x4d]
  40b0ad:	test   BYTE PTR [esi+0x68],0x63
  40b0b1:	push   ds
  40b0b2:	(bad)  
  40b0b3:	mov    edi,0xe49b3c16
  40b0b8:	pop    eax
  40b0b9:	fld    QWORD PTR [ebx]
  40b0bb:	call   DWORD PTR [esi]
  40b0bd:	sbb    ebp,DWORD PTR cs:[edx+0xb031dfb]
  40b0c4:	mov    ds:0x866800b1,eax
  40b0c9:	pop    es
  40b0ca:	(bad)  
  40b0cd:	rcl    DWORD PTR [ebx],1
  40b0cf:	call   0x44779e
  40b0d4:	push   0x2d975e
	...
  40b0e5:	add    BYTE PTR [eax],al
  40b0e7:	retf   
  40b0e8:	add    eax,0x4b3c03e9
  40b0ed:	sahf   
  40b0ee:	cwde   
  40b0ef:	pop    eax
  40b0f0:	sbb    eax,0xc3c761c
  40b0f5:	mov    ds,WORD PTR [eax-0x3f3bc]
  40b0fb:	inc    esp
  40b0fc:	cmp    DWORD PTR [ebx+0x12],ebx
  40b0ff:	and    al,0xc
  40b101:	cld    
  40b102:	pop    ds
  40b103:	sbb    al,0x92
  40b105:	fcomp  QWORD PTR [ebx]
  40b107:	and    dh,BYTE PTR [edi+0x66]
  40b10a:	adc    cl,BYTE PTR [edx+edx*4]
  40b10d:	push   eax
  40b10e:	adc    cl,BYTE PTR [esi-0x2ea6bf07]
  40b114:	or     ecx,DWORD PTR [esi+0x12]
  40b117:	outs   dx,BYTE PTR ds:[esi]
  40b118:	adc    eax,0xbd64651
  40b11d:	adc    ch,BYTE PTR ds:[esi+0x19]
  40b121:	inc    ecx
  40b122:	dec    esi
  40b123:	test   BYTE PTR [ebx],0x2e
  40b126:	adc    cl,BYTE PTR [esi+0x1d]
  40b129:	adc    DWORD PTR [esi-0xa],edx
  40b12c:	or     ebx,DWORD PTR [esi]
  40b12e:	shl    ecx,0x89
  40b131:	adc    BYTE PTR [ebx],al
  40b133:	aaa    
  40b134:	std    
  40b135:	loope  0x40b150
  40b137:	fs cmp dh,0x10
  40b13b:	lods   al,BYTE PTR ds:[esi]
  40b13c:	or     esi,DWORD PTR [edx-0x38]
  40b13f:	lods   al,BYTE PTR ds:[esi]
  40b140:	stos   BYTE PTR es:[edi],al
  40b141:	pop    ds
  40b142:	inc    ebp
  40b143:	imul   eax,DWORD PTR ds:0x87877e94,0xffffffad
  40b14a:	adc    BYTE PTR [eax],al
	...
  40b158:	add    BYTE PTR [eax],al
  40b15a:	mov    WORD PTR [ecx+0x4d181bec],ss
  40b160:	(bad)  
  40b161:	adc    DWORD PTR [eax+0x45],ebp
  40b164:	push   esp
  40b165:	shl    edi,1
  40b167:	rol    esp,0xb4
  40b16a:	test   BYTE PTR ds:0xb64116d,dh
  40b170:	add    BYTE PTR [ebx+esi*2],bh
  40b173:	or     dh,BYTE PTR [ebp-0x23]
  40b176:	js     0x40b1ca
  40b178:	mov    fs,WORD PTR [esi+0x15bffe72]
  40b17e:	push   edx
  40b17f:	or     al,0x75
  40b181:	loope  0x40b1d6
  40b183:	nop
  40b184:	sti    
  40b185:	sub    edx,0x2e86ff08
  40b18b:	dec    ebx
  40b18c:	jne    0x40b167
  40b18e:	enter  0xf0a,0x86
  40b192:	mov    cl,0xa
  40b194:	jne    0x40b173
  40b196:	jae    0x40b128
  40b198:	pop    es
  40b199:	push   ecx
  40b19a:	adc    DWORD PTR [edx-0x1],0xfb90725e
  40b1a1:	inc    ecx
  40b1a2:	scas   eax,DWORD PTR es:[edi]
  40b1a3:	jns    0x40b1a4
  40b1a5:	dec    esi
  40b1a6:	cmp    BYTE PTR [edi+0x8],al
  40b1a9:	jmp    0x692d3163
  40b1ae:	fwait
  40b1af:	push   ecx
  40b1b0:	(bad)  
  40b1b1:	ss jb  0x40b1f6
  40b1b4:	test   DWORD PTR [ecx+0x71],esi
  40b1b7:	or     bh,bh
  40b1b9:	jmp    0x7240b71e
	...
  40b1ca:	add    BYTE PTR [eax],al
  40b1cc:	add    BYTE PTR [esi+edi*8+0x1db290a],bl
  40b1d3:	adc    cl,0x60
  40b1d6:	nop
  40b1d7:	add    al,0x10
  40b1d9:	lock add eax,0x9053e900
  40b1df:	or     eax,DWORD PTR [ecx]
  40b1e1:	arpl   WORD PTR [ebp-0x1],sp
  40b1e4:	out    dx,al
  40b1e5:	xchg   edi,eax
  40b1e6:	dec    edx
  40b1e7:	jne    0x40b1df
  40b1e9:	call   0x5f68dd83
  40b1ee:	or     dh,BYTE PTR [ebp-0x1b]
  40b1f1:	pop    eax
  40b1f2:	pop    esp
  40b1f3:	cwde   
  40b1f4:	into   
  40b1f5:	push   ebx
  40b1f6:	push   ds
  40b1f7:	or     eax,0x2b6f1200
  40b1fc:	inc    ecx
  40b1fd:	jp     0x40b1f4
  40b1ff:	je     0x40b20d
  40b201:	and    bl,BYTE PTR [eax-0x70fa0069]
  40b207:	test   BYTE PTR [eax+0x68fef504],bh
  40b20d:	and    al,0x7
  40b20f:	add    BYTE PTR [eax],al
  40b211:	mov    DWORD PTR [ebx-0xb1a013e],0x9308e84f
  40b21b:	(bad)  
  40b21c:	push   DWORD PTR [edi-0x6a013d7d]
  40b222:	cmc    
  40b223:	dec    edi
  40b224:	dec    DWORD PTR [edi-0x42]
  40b227:	std    
  40b228:	inc    DWORD PTR [ebp-0x599b212]
  40b22e:	add    eax,0x8589
	...
  40b23f:	add    dh,dl
  40b241:	repz (bad) 
  40b243:	dec    edx
  40b245:	add    al,0x84
  40b247:	repz cli 
  40b249:	add    eax,0xc08f8d00
  40b24e:	std    
  40b24f:	call   DWORD PTR [ebp-0x35effe13]
  40b255:	add    eax,0x8b077400
  40b25a:	inc    ecx
  40b25b:	sub    al,0xa
  40b25d:	outs   dx,BYTE PTR ds:[esi]
  40b25e:	imul   ebp,DWORD PTR [ebx+ecx*1],0x6
  40b262:	call   0x468e92
  40b267:	or     edi,DWORD PTR [edx+0x73]
  40b26a:	add    al,0xe9
  40b26c:	adc    eax,DWORD PTR [esi]
  40b26e:	add    BYTE PTR [eax],al
  40b270:	pop    es
  40b271:	xchg   ebx,eax
  40b272:	sar    esi,0x85
  40b275:	stc    
  40b276:	mov    WORD PTR [edx+0x76],es
  40b279:	push   ecx
  40b27a:	outs   dx,BYTE PTR ds:[si]
  40b27c:	push   esi
  40b27d:	inc    eax
  40b27e:	jmp    edi
  40b280:	arpl   WORD PTR [edx],sp
  40b282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b283:	push   DWORD PTR [esi+eiz*1+0x43]
  40b287:	jne    0x40b2ef
  40b289:	xor    eax,0x1c630080
  40b28e:	push   cs
  40b28f:	jne    0x40b300
  40b291:	inc    esi
  40b292:	mov    al,ds:0xfb58549e
  40b297:	mov    edi,0x7f9b0fd6
  40b29c:	jnp    0x40b27b
  40b29e:	add    edi,edi
  40b2a0:	mov    dh,0x22
  40b2a2:	sbb    ecx,DWORD PTR [ecx]
	...
  40b2b0:	add    BYTE PTR [eax],al
  40b2b2:	add    bl,bl
  40b2b4:	ja     0x40b2c5
  40b2b6:	jmp    0x40b311
  40b2b8:	hlt    
  40b2b9:	add    edi,edi
  40b2bb:	scas   al,BYTE PTR es:[edi]
  40b2bc:	sbb    bl,BYTE PTR [ebx]
  40b2be:	std    
  40b2bf:	hlt    
  40b2c0:	(bad)  
  40b2c1:	push   cs
  40b2c2:	(bad)  
  40b2c3:	out    dx,al
  40b2c4:	pop    esp
  40b2c5:	push   cs
  40b2c6:	dec    DWORD PTR [edx+edx*4]
  40b2c9:	mov    cl,0x2b
  40b2cb:	mov    cl,0x4e
  40b2cd:	sbb    eax,DWORD PTR [ecx-0x25]
  40b2d0:	scas   eax,DWORD PTR es:[edi]
  40b2d1:	push   cs
  40b2d2:	push   eax
  40b2d3:	hlt    
  40b2d4:	xor    ebx,esi
  40b2d6:	dec    edi
  40b2d7:	in     al,dx
  40b2d8:	dec    ecx
  40b2d9:	sti    
  40b2da:	out    0xe9,eax
  40b2dc:	enter  0xff0e,0xcb
  40b2e0:	adc    dh,BYTE PTR [edi-0x1]
  40b2e3:	aam    0xc3
  40b2e5:	ret    0x218c
  40b2e8:	xor    bh,BYTE PTR [ebp+eax*4+0xf]
  40b2ec:	jmp    0x69fdb1ff
  40b2f1:	repz (bad) 
  40b2f3:	out    dx,al
  40b2f4:	mov    dl,0xd
  40b2f6:	jmp    FWORD PTR [esi+esi*8+0x1e63664e]
  40b2fd:	cli    
  40b2fe:	mov    edi,0x7f9b4617
  40b303:	dec    ebx
  40b304:	pop    ebp
  40b305:	add    edi,edi
  40b307:	push   ss
  40b308:	add    eax,0x70d21bf5
  40b30d:	fimul  WORD PTR [esi]
  40b30f:	jl     0x40b363
  40b311:	popf   
  40b312:	or     eax,0x1c390874
	...
  40b323:	add    BYTE PTR [eax],al
  40b325:	add    BYTE PTR [edx+0x70],ch
  40b328:	(bad)  
  40b329:	push   cs
  40b32a:	adc    esi,DWORD PTR [ebp+0x1d6498bd]
  40b330:	dec    ecx
  40b331:	push   cs
  40b332:	push   esp
  40b333:	or     cl,al
  40b335:	push   ss
  40b336:	lock pop es
  40b338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b339:	sbb    dh,0x42
  40b33c:	lahf   
  40b33d:	push   cs
  40b33e:	cmp    al,0xb5
  40b340:	xchg   ebp,eax
  40b341:	pop    eax
  40b342:	test   DWORD PTR [esi],0x9a3b0e8e
  40b348:	or     eax,DWORD PTR [ebx+eiz*2]
  40b34b:	sub    BYTE PTR [ecx+0x75ece7fe],0xe
  40b352:	adc    al,0x8
  40b354:	xor    al,0x4f
  40b356:	or     eax,0x831b6608
  40b35b:	mov    ds:0x51fc03e8,al
  40b360:	xchg   ecx,eax
  40b361:	or     eax,0x464107f4
  40b366:	rol    BYTE PTR [edi],1
  40b368:	inc    esi
  40b369:	cmp    al,0x21
  40b36b:	stc    
  40b36c:	call   0x68599d29
  40b371:	inc    edi
  40b372:	adc    eax,DWORD PTR [edi]
  40b374:	cs push cs
  40b376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b377:	and    DWORD PTR [ecx+0xd],0x3e907c4
  40b37e:	arpl   WORD PTR ds:0xfc68c862,ax
  40b384:	sub    BYTE PTR [edi+0x3c18567],dl
	...
  40b396:	add    BYTE PTR [eax],al
  40b398:	add    BYTE PTR [esi],ch
  40b39a:	add    dl,BYTE PTR [eax]
  40b39c:	cld    
  40b39d:	arpl   WORD PTR ds:0x94f8e900,ax
  40b3a3:	sub    ebp,DWORD PTR [eax-0xa8af7a0]
  40b3a9:	push   0x6ede96d6
  40b3ae:	jle    0x40b335
  40b3b0:	xchg   ecx,eax
  40b3b1:	gs or  bh,bh
  40b3b4:	inc    ecx
  40b3b5:	popf   
  40b3b6:	add    al,0x0
  40b3b8:	jmp    0xc00335a2
  40b3bd:	outs   dx,BYTE PTR ds:[esi]
  40b3be:	push   es
  40b3bf:	push   eax
  40b3c0:	sar    DWORD PTR [eax-0x3351008e],0x80
  40b3c7:	ret    0x56a7
  40b3ca:	push   es
  40b3cb:	push   eax
  40b3cc:	sahf   
  40b3cd:	xchg   esp,eax
  40b3ce:	dec    ebp
  40b3cf:	(bad)  
  40b3d0:	xchg   esi,eax
  40b3d1:	sbb    ax,0x5e5
  40b3d5:	addr16 add eax,0x7936c89
  40b3db:	(bad)  
  40b3dc:	jle    0x40b405
  40b3de:	clc    
  40b3df:	sub    DWORD PTR [edi+0x5c00055f],0xffffff94
  40b3e6:	inc    ebx
  40b3e7:	(bad)  
  40b3e8:	push   si
  40b3ea:	push   cs
  40b3eb:	add    bh,cl
  40b3ed:	pusha  
  40b3ee:	add    eax,0x76dce600
  40b3f3:	add    cl,ch
  40b3f5:	pusha  
  40b3f6:	js     0x40b38d
  40b3f8:	sub    edx,DWORD PTR [ebp+0x6]
  40b3fb:	jmp    FWORD PTR [eax+eax*1+0x0]
	...
  40b40b:	add    BYTE PTR [ecx-0xb3eb026],ah
  40b411:	fiadd  DWORD PTR [eax-0x17]
  40b414:	push   0x60e9644d
  40b419:	cli    
  40b41a:	mov    edi,0x751a6294
  40b41f:	fs sub al,0x43
  40b422:	dec    BYTE PTR [esi]
  40b424:	pop    esi
  40b425:	js     0x40b469
  40b427:	add    BYTE PTR [esi-0x519198ae],cl
  40b42d:	inc    ebx
  40b42e:	jmp    edi
  40b430:	sub    al,0x5d
  40b432:	(bad)  
  40b433:	inc    DWORD PTR [ecx-0x4efd8b3e]
  40b439:	pop    ebp
  40b43a:	mov    WORD PTR [ebp-0x10738],ss
  40b440:	inc    DWORD PTR [ebx+0x2b]
  40b443:	mov    DWORD PTR [edi],eax
  40b445:	scas   al,BYTE PTR es:[edi]
  40b446:	std    
  40b447:	call   FWORD PTR [ebp-0x74d78096]
  40b44d:	add    edi,edi
  40b44f:	jne    0x40b48f
  40b451:	jmp    0xb5fe:0xf8fd9698
  40b458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b459:	clc    
  40b45a:	(bad)  
  40b45b:	(bad)  
  40b45c:	jp     0x40b447
  40b45e:	loopne 0x40b3f6
  40b460:	int    0xf8
  40b462:	mov    BYTE PTR [ebp-0x10776],al
  40b468:	dec    edx
  40b469:	imul   edi,esp,0xff014b3b
  40b46f:	mov    ch,0x0
	...
  40b47d:	add    BYTE PTR [eax],al
  40b47f:	pop    edx
  40b480:	clc    
  40b481:	(bad)  
  40b482:	jmp    edx
  40b484:	je     0x40b4ea
  40b486:	add    dl,bh
  40b488:	or     al,0xbf
  40b48a:	je     0x40b485
  40b48c:	imul   eax,DWORD PTR [edx],0xff01cb3c
  40b492:	mov    ch,0xca
  40b494:	idiv   esi
  40b496:	call   FWORD PTR [ebp-0x5c17f891]
  40b49c:	idiv   dh
  40b49e:	jmp    DWORD PTR [edx]
  40b4a0:	mov    ebp,0x877dff91
  40b4a5:	test   dl,al
  40b4a7:	jl     0x40b4a2
  40b4a9:	(bad)  
  40b4aa:	push   eax
  40b4ab:	pop    ebp
  40b4ac:	scas   eax,DWORD PTR es:[edi]
  40b4ad:	mov    ebx,0xbef63fe
  40b4b2:	call   0x443529
  40b4b7:	(bad)  
  40b4b9:	sti    
  40b4ba:	test   BYTE PTR [esi],ah
  40b4bc:	pop    es
  40b4bd:	or     edi,edi
  40b4bf:	xchg   esp,eax
  40b4c0:	enter  0xfe4e,0x8c
  40b4c4:	push   ss
  40b4c5:	sbb    ah,BYTE PTR [edi+edi*8]
  40b4c8:	sbb    eax,DWORD PTR [ebx]
  40b4ca:	push   DWORD PTR [esi+0x74ff0a63]
  40b4d0:	inc    ebx
  40b4d1:	jg     0x40b465
  40b4d3:	ins    BYTE PTR es:[edi],dx
  40b4d4:	ss cmp eax,0xb01c5bc2
  40b4da:	mov    cl,BYTE PTR [edi-0x3c]
  40b4dd:	nop
  40b4de:	or     ecx,DWORD PTR [ebx-0x58]
  40b4e1:	jno    0x40b4e2
	...
  40b4ef:	add    BYTE PTR [eax],al
  40b4f1:	add    BYTE PTR [eax+ebp*8+0x42],cl
  40b4f5:	je     0x40b54b
  40b4f7:	ds mov ah,0xfe
  40b4fa:	mov    dh,0xf6
  40b4fc:	sbb    ch,BYTE PTR [ebx-0x17f563cb]
  40b502:	mov    edx,0x1aff0b80
  40b507:	mov    cl,0xfb
  40b509:	push   DWORD PTR [edi+0x1f831877]
  40b50f:	jnp    0x40b4af
  40b511:	(bad)  
  40b512:	jp     0x40b4e1
  40b514:	or     DWORD PTR [ebp+0x5b],esi
  40b517:	push   esi
  40b518:	jg     0x40b4a9
  40b51a:	cld    
  40b51b:	arpl   WORD PTR [ebp+0x45],di
  40b51e:	test   eax,0xe676feec
  40b524:	sbb    bh,BYTE PTR [edi+0x6a0b4be4]
  40b52a:	add    BYTE PTR [ebx-0x6f],0x7
  40b52e:	retf   
  40b52f:	or     DWORD PTR [ebx],0xe6c8ccff
  40b535:	dec    BYTE PTR [esi+0x5]
  40b538:	icebp  
  40b539:	sbb    ecx,DWORD PTR [eax]
  40b53b:	add    eax,0x5490b1e
  40b540:	and    eax,0x9be94668
  40b546:	push   edi
  40b547:	inc    ecx
  40b548:	test   al,0x3
  40b54a:	pushf  
  40b54b:	cmp    ch,dh
  40b54d:	fsub   QWORD PTR [ebx]
  40b54f:	add    eax,0x4f7d701
  40b554:	out    dx,al
  40b555:	inc    BYTE PTR [eax]
	...
  40b563:	add    BYTE PTR [eax],al
  40b565:	les    edi,FWORD PTR [ecx-0x3]
  40b568:	mov    bl,0x4
  40b56a:	or     BYTE PTR ds:0xd65474c5,bl
  40b570:	nop
  40b571:	fs in  eax,dx
  40b573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b574:	pop    es
  40b575:	fs add al,0xd1
  40b578:	push   es
  40b579:	icebp  
  40b57a:	add    edi,DWORD PTR [esi-0x393ab63]
  40b580:	(bad)  
  40b581:	mov    ds:0x88f94105,eax
  40b586:	inc    esi
  40b587:	jmp    0xd0552b96
  40b58c:	les    esi,FWORD PTR [esp+ebp*8]
  40b58f:	in     al,dx
  40b590:	jo     0x40b5be
  40b592:	add    al,0xe2
  40b594:	inc    ebx
  40b595:	scas   eax,DWORD PTR es:[edi]
  40b596:	sbb    DWORD PTR [ecx],ebx
  40b598:	pushf  
  40b599:	popa   
  40b59a:	inc    ecx
  40b59b:	sub    BYTE PTR [ebx+esi*4],al
  40b59e:	add    al,0xfc
  40b5a0:	sti    
  40b5a1:	add    al,0x97
  40b5a3:	ins    BYTE PTR es:[edi],dx
  40b5a4:	or     al,BYTE PTR [ebp*8+0x3fc743c]
  40b5ab:	rol    DWORD PTR [ebx],cl
  40b5ad:	mov    DWORD PTR ds:0x4628c2c1,eax
  40b5b3:	jmp    0xe9449a53
  40b5b8:	or     ebx,0xffffffdd
  40b5bb:	push   esp
  40b5bc:	or     dl,ah
  40b5be:	verw   WORD PTR [ecx]
  40b5c1:	fsub   QWORD PTR [edi]
  40b5c3:	push   eax
  40b5c4:	cdq    
  40b5c5:	push   0x269b84
	...
  40b5d6:	add    BYTE PTR [eax],al
  40b5d8:	imul   edx,DWORD PTR [eax],0x53c495c0
  40b5de:	push   0x44a4ea
  40b5e3:	mov    ecx,0x11087a59
  40b5e8:	(bad)  
  40b5e9:	(bad)  
  40b5ea:	(bad)  
  40b5eb:	(bad)  
  40b5ec:	jns    0x40b591
  40b5ee:	nop
  40b5ef:	neg    BYTE PTR [edx-0x13]
  40b5f2:	cwde   
  40b5f3:	pop    eax
  40b5f4:	pop    ecx
  40b5f5:	add    al,0xff
  40b5f7:	pop    esp
  40b5f8:	imul   eax,DWORD PTR [esi*2-0x70eea70f],0xffffffd6
  40b600:	pop    edx
  40b601:	into   
  40b602:	shl    ebp,0x60
  40b605:	pop    edx
  40b606:	mov    edx,ebp
  40b608:	loopne 0x40b5d3
  40b60a:	jmp    0x40b5c2
  40b60c:	push   0x2
  40b60e:	lea    ebp,[ebx+ebx*2]
  40b611:	push   ebp
  40b612:	push   DWORD PTR [edi+ecx*2]
  40b615:	add    al,0x75
  40b617:	cmc    
  40b618:	pop    eax
  40b619:	xlat   BYTE PTR ds:[ebx]
  40b61a:	(bad)  
  40b61b:	jmp    0xe700c480
  40b620:	lods   eax,DWORD PTR ds:[esi]
  40b621:	into   
  40b622:	(bad)  
  40b623:	call   0x81858088
  40b628:	addr16 add eax,0x48a3e900
  40b62e:	hlt    
  40b62f:	jbe    0x40b693
  40b631:	add    eax,0x6f5f0300
  40b636:	add    bl,dl
  40b638:	pusha  
  40b639:	outs   dx,DWORD PTR ds:[esi]
  40b63a:	add    BYTE PTR [eax+eax*1+0x0],ch
	...
  40b64a:	add    BYTE PTR [esi+esi*8-0x6939bb1],dh
  40b651:	test   BYTE PTR [esi+0x5a],0x55
  40b655:	inc    DWORD PTR [eax]
  40b657:	pop    ds
  40b658:	ud0    esi,DWORD PTR [ebp-0x6a]
  40b65c:	and    DWORD PTR [ebx+eiz*2-0x3ff4f946],esp
  40b663:	push   cs
  40b664:	add    al,0xe8
  40b666:	mov    cs,edx
  40b668:	push   es
  40b669:	add    BYTE PTR [eax+0x4a],ch
  40b66c:	loope  0x40b6ad
  40b66e:	add    BYTE PTR [ebp-0x6e],dl
  40b671:	push   cs
  40b672:	call   0x402bf4
  40b677:	cli    
  40b678:	adc    eax,0xf714ff8d
  40b67e:	call   DWORD PTR [ebp+0x4de850b6]
  40b684:	jne    0x40b685
  40b686:	push   ebx
  40b688:	xor    al,0xf7
  40b68b:	xchg   ebp,eax
  40b68c:	or     eax,0xceb0de8
  40b691:	jmp    FWORD PTR [edx+0x7a]
  40b694:	sahf   
  40b695:	mov    edi,DWORD PTR [ebx+ecx*4]
  40b698:	or     edi,edi
  40b69a:	mov    ch,0x1a
  40b69c:	adc    eax,0x9315ffff
  40b6a1:	or     ch,al
  40b6a3:	sub    dh,BYTE PTR [edx-0x1]
  40b6a6:	push   DWORD PTR [ebx-0x2a08137d]
  40b6ac:	or     al,0x83
  40b6ae:	mov    ebp,0x0
	...
  40b6bb:	add    BYTE PTR [eax],al
  40b6bd:	add    dh,ah
  40b6bf:	adc    al,0xff
  40b6c1:	(bad)  
  40b6c2:	cmp    dl,BYTE PTR [edx+0x60b6811]
  40b6c8:	out    dx,eax
  40b6c9:	mov    esi,0xf7ec5395
  40b6ce:	xchg   ebp,eax
  40b6cf:	or     eax,0x1e0275ff
  40b6d4:	xchg   edi,eax
  40b6d5:	mov    dl,0x85
  40b6d7:	or     eax,0x15a6b5ff
  40b6dc:	(bad)  
  40b6dd:	jmp    DWORD PTR [ebx+0x44]
  40b6e0:	cmp    al,0x90
  40b6e2:	in     al,0x52
  40b6e4:	or     BYTE PTR [ebp-0xf7bd2d],dh
  40b6ea:	aam    0xb8
  40b6ec:	idiv   dh
  40b6ee:	push   esi
  40b6ef:	in     al,0x1a
  40b6f1:	xor    ah,al
  40b6f3:	xor    cl,BYTE PTR [eax]
  40b6f5:	push   esi
  40b6f7:	sbb    edx,DWORD PTR [eax]
  40b6f9:	push   DWORD PTR [ebx+edx*1+0x1aac9058]
  40b700:	or     BYTE PTR [ebp-0x55],al
  40b703:	add    al,0xbf
  40b705:	(bad)  
  40b706:	pushf  
  40b707:	or     cl,BYTE PTR [eax]
  40b709:	jne    0x40b6a2
  40b70b:	adc    ecx,DWORD PTR [edx]
  40b70d:	bound  esp,QWORD PTR [ebx-0x14]
  40b710:	cmp    edx,eax
  40b712:	push   edi
  40b713:	in     al,dx
  40b714:	lods   eax,DWORD PTR ds:[esi]
  40b715:	mov    cl,BYTE PTR [edi+0x6ce8406c]
  40b71b:	loop   0x40b723
  40b71d:	lea    esp,[esi]
  40b71f:	fdiv   DWORD PTR [ebx+0xfe]
	...
  40b731:	out    dx,al
  40b732:	sti    
  40b733:	add    eax,0x22d66f75
  40b738:	bound  esp,QWORD PTR [ebx-0x12]
  40b73b:	stc    
  40b73c:	mov    edi,0xe6715c
  40b741:	arpl   si,bp
  40b743:	cmp    eax,0x2ef3b45
  40b748:	add    BYTE PTR [ebx-0x59],ah
  40b74b:	shl    bl,0x2c
  40b74e:	lock add al,BYTE PTR [eax]
  40b751:	mov    ecx,0x8aff98ee
  40b756:	out    dx,al
  40b757:	cwde   
  40b758:	jmp    edi
  40b75a:	sub    DWORD PTR [eax],edx
  40b75c:	push   eax
  40b75d:	fidiv  WORD PTR [ecx+0x10]
  40b760:	test   DWORD PTR [eax+esi*2],0x576feb4
  40b767:	popa   
  40b768:	pop    es
  40b769:	outs   dx,BYTE PTR ds:[esi]
  40b76a:	add    DWORD PTR [ecx+0x51],edx
  40b76d:	add    DWORD PTR ds:0x79a4fae9,0x5c21ce4
  40b777:	jmp    0x10c6027f
  40b77c:	(bad)
  40b77f:	mov    ebx,0x59ddbcf3
  40b784:	pop    es
  40b785:	mov    esp,0xe6347255
  40b78a:	mov    dl,BYTE PTR [edi+ecx*1]
  40b78d:	lods   al,BYTE PTR ds:[esi]
  40b78e:	add    BYTE PTR [ecx+0x79cdbcb1],bh
  40b794:	pop    es
	...
  40b7a1:	add    BYTE PTR [eax],al
  40b7a3:	add    BYTE PTR [esi+ecx*4+0x8c146b],bl
  40b7aa:	(bad)  
  40b7ab:	sbb    ebp,DWORD PTR [ebp-0x6b]
  40b7ae:	cmc    
  40b7af:	push   es
  40b7b0:	stc    
  40b7b1:	add    al,0x83
  40b7b3:	add    edi,DWORD PTR [edx+edi*4-0x28]
  40b7b7:	push   cs
  40b7b8:	je     0x40b7ba
  40b7ba:	ficom  WORD PTR [eax+0x730ced58]
  40b7c0:	add    BYTE PTR fs:[eax-0x80],ah
  40b7c4:	dec    edi
  40b7c5:	clc    
  40b7c6:	lds    eax,FWORD PTR [esi]
  40b7c8:	push   esp
  40b7c9:	mov    edx,0x4c0ecc
  40b7ce:	sar    DWORD PTR [edi],0xea
  40b7d1:	jmp    FWORD PTR [ebp+0xa78fcfa]
  40b7d7:	mov    ah,0xeb
  40b7d9:	mov    DWORD PTR [eax-0x69ffd3f2],edx
  40b7df:	push   eax
  40b7e0:	cmp    edi,eax
  40b7e2:	lea    eax,[esi]
  40b7e4:	or     eax,DWORD PTR [esi]
  40b7e6:	pop    esp
  40b7e7:	push   es
  40b7e8:	adc    al,0xc
  40b7ea:	test   eax,0x6da48f
  40b7ef:	jmp    0x40b851
  40b7f1:	lock mov ebp,0x4140f601
  40b7f7:	jmp    0x57287259
  40b7fc:	gs add bh,bh
  40b7ff:	fsub   st(0),st
  40b801:	out    0x97,eax
  40b803:	xchg   ebp,eax
  40b804:	add    BYTE PTR gs:[eax-0x15],ch
	...
  40b814:	add    BYTE PTR [eax],al
  40b816:	add    BYTE PTR [eax-0x10],ah
  40b819:	mov    ebp,0x4140c7d1
  40b81e:	jmp    0x37287280
  40b823:	gs add bh,bh
  40b826:	pushf  
  40b827:	mov    eax,0x65557fe7
  40b82c:	add    BYTE PTR [eax-0x17],ch
  40b82f:	pusha  
  40b830:	lock mov ebp,0x413bc381
  40b836:	jmp    0xf7287298
  40b83b:	data16 add bh,bh
  40b83e:	jl     0x40b7c8
  40b840:	out    0x67,eax
  40b842:	xor    eax,0x7de80065
  40b847:	out    dx,al
  40b848:	(bad)  
  40b849:	(bad)  
  40b84a:	ficomp WORD PTR [ecx+esi*8]
  40b84d:	not    dh
  40b84f:	pop    esi
  40b850:	in     eax,dx
  40b851:	mov    BYTE PTR [esi+0x66],bl
  40b854:	(bad)  
  40b855:	(bad)  
  40b856:	jl     0x40b8c7
  40b858:	idiv   dh
  40b85a:	mov    esi,0xb60c7866
  40b85f:	aam    0x6
  40b861:	call   0xff3f1df2
  40b866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b868:	cmc    
  40b869:	neg    BYTE PTR [esi+0x666ced66]
  40b86f:	pop    esi
  40b870:	(bad)  
  40b871:	(bad)  
  40b872:	and    al,0x6f
  40b874:	in     al,dx
  40b875:	lock add ah,bl
  40b878:	or     bh,bh
  40b87a:	inc    DWORD PTR [eax]
	...
  40b888:	add    BYTE PTR [eax],al
  40b88a:	pop    ss
  40b88b:	pop    es
  40b88c:	call   0x4a1448
  40b891:	leave  
  40b892:	enter  0xfefd,0x54
  40b896:	jno    0x40b8b5
  40b898:	add    esp,0xffffff8e
  40b89b:	fwait
  40b89c:	(bad)  
  40b89d:	imul   ebx,DWORD PTR [eax+0x8],0x88220875
  40b8a4:	mov    bh,bh
  40b8a6:	sbb    eax,0xb2fc457a
  40b8ab:	add    al,BYTE PTR [eax]
  40b8ad:	out    dx,eax
  40b8ae:	dec    esp
  40b8af:	mov    eax,ds:0x30b3c63
  40b8b4:	push   0xfec3be75
  40b8b9:	(bad)  
  40b8ba:	xlat   BYTE PTR ds:[ebx]
  40b8bb:	cli    
  40b8bc:	out    0x47,al
  40b8be:	push   es
  40b8bf:	or     bh,bh
  40b8c1:	push   0x3fc6ef
  40b8c6:	pop    ebp
  40b8c7:	into   
  40b8c8:	or     eax,0xff02bb29
  40b8cd:	jne    0x40b851
  40b8cf:	sbb    dl,BYTE PTR [eax+0x68098dfd]
  40b8d5:	jge    0x40b915
  40b8d7:	ret    0x67fe
  40b8da:	js     0x40b8de
  40b8dc:	add    BYTE PTR [eax-0x17f97073],al
  40b8e2:	lods   al,BYTE PTR ds:[esi]
  40b8e3:	push   es
  40b8e4:	(bad)  
  40b8e5:	push   DWORD PTR [edx+0x3a413c72]
  40b8eb:	call   0x0:0x0
	...
  40b8fa:	add    BYTE PTR [eax],al
  40b8fc:	add    BYTE PTR [edx],bh
  40b8fe:	cmp    dh,0x75
  40b901:	inc    edx
  40b902:	sbb    bl,BYTE PTR [ebx-0x2]
  40b905:	std    
  40b906:	or     BYTE PTR [eax-0x2f],ch
  40b909:	push   cs
  40b90a:	ret    
  40b90b:	(bad)  
  40b90c:	addr16 arpl dx,bp
  40b90f:	add    al,BYTE PTR [eax]
  40b911:	jecxz  0x40b8a1
  40b913:	lea    eax,[edi]
  40b915:	or     esi,DWORD PTR ds:0x7f0cff06
  40b91b:	mov    ?,ebx
  40b91d:	add    al,0x1
  40b91f:	sti    
  40b920:	out    0x94,eax
  40b922:	pusha  
  40b923:	add    al,0xff
  40b925:	sub    ch,BYTE PTR [edx]
  40b927:	(bad)  
  40b928:	call   DWORD PTR [edi+0x6eff1773]
  40b92e:	call   0x4f30d24d
  40b933:	add    al,0xb
  40b935:	mov    ds:0x1967c9bf,eax
  40b93a:	add    edx,eax
  40b93c:	call   DWORD PTR [esp+eax*2]
  40b93f:	push   ebp
  40b940:	xchg   edx,eax
  40b941:	mov    esp,0x4b4fb32e
  40b946:	in     al,dx
  40b947:	add    ch,bh
  40b949:	in     eax,dx
  40b94a:	xchg   ebx,eax
  40b94b:	aad    0x3c
  40b94d:	and    ch,ah
  40b94f:	mov    dl,0xfe
  40b951:	push   ss
  40b952:	in     al,0x1a
  40b954:	jne    0x40b926
  40b956:	push   es
  40b957:	add    al,0x58
  40b959:	sti    
  40b95a:	in     al,dx
  40b95b:	add    ch,bh
  40b95d:	lds    eax,FWORD PTR [ebx+0x3cc6]
	...
  40b96f:	add    BYTE PTR [edx],ah
  40b971:	in     al,dx
  40b972:	mov    dl,0xfe
  40b974:	out    dx,al
  40b975:	repz jmp 0xd6e8:0x2deb060
  40b97d:	gs add edi,edi
  40b980:	sub    dh,BYTE PTR [ecx+0x77ae000b]
  40b986:	lock and BYTE PTR [edi],0xbb
  40b98a:	ins    DWORD PTR es:[edi],dx
  40b98b:	add    BYTE PTR [ecx+0x6b75030f],bh
  40b991:	(bad)  
  40b992:	mov    dl,0x8a
  40b994:	xor    al,0x6
  40b996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b997:	lea    esp,[edi+0x241e12f9]
  40b99d:	jae    0x40b980
  40b99f:	jmp    0x40b998
  40b9a1:	cld    
  40b9a2:	lea    eax,[ebx]
  40b9a4:	mov    DWORD PTR [eax],ebp
  40b9a6:	xchg   BYTE PTR [ecx+0x5b],bh
  40b9a9:	in     eax,dx
  40b9aa:	jno    0x40b9af
  40b9ac:	add    al,0xfd
  40b9ae:	add    ah,BYTE PTR [eax]
  40b9b0:	cld    
  40b9b1:	jb     0x40b994
  40b9b3:	jmp    0x40b998
  40b9b5:	cld    
  40b9b6:	gs add ebp,esp
  40b9b9:	jb     0x40ba18
  40b9bb:	add    ebp,DWORD PTR [esi+0xd]
  40b9be:	inc    ecx
  40b9bf:	int    0xe9
  40b9c1:	cld    
  40b9c2:	dec    ebp
  40b9c3:	int    0xa2
  40b9c5:	add    ecx,ebp
  40b9c7:	pop    eax
  40b9c8:	fsubr  st,st(1)
  40b9ca:	cdq    
  40b9cb:	retf   0x15f
  40b9ce:	test   BYTE PTR [ebx+eiz*2+0x5],0xe9
  40b9d3:	add    eax,DWORD PTR [eax]
	...
  40b9e1:	add    BYTE PTR [eax],al
  40b9e3:	arpl   WORD PTR [eax],si
  40b9e5:	inc    edx
  40b9e6:	add    esi,DWORD PTR [esi]
  40b9e8:	or     eax,0x5043711
  40b9ed:	jmp    0x6a4df180
  40b9f2:	cld    
  40b9f3:	bound  esi,QWORD PTR [ebx-0x28]
  40b9f6:	push   es
  40b9f7:	mov    bl,0x88
  40b9f9:	adc    al,BYTE PTR [esi]
  40b9fb:	std    
  40b9fc:	test   DWORD PTR [edx-0x1b8de0a1],esi
  40ba02:	imul   ebx,DWORD PTR [edi+eax*1+0x726c0445],0x5c9eebed
  40ba0d:	jmp    0xc2f8515
  40ba12:	inc    ebp
  40ba13:	arpl   WORD PTR [ebp+0x20],bp
  40ba16:	inc    ecx
  40ba17:	mov    ds:0xec99d105,al
  40ba1c:	sti    
  40ba1d:	push   DWORD PTR [ebp+0x4473c56d]
  40ba23:	pusha  
  40ba24:	jb     0x40ba2e
  40ba26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba27:	dec    ebx
  40ba28:	out    dx,al
  40ba29:	cmp    al,0x28
  40ba2b:	pop    edi
  40ba2c:	mov    bl,al
  40ba2e:	in     eax,dx
  40ba2f:	ins    DWORD PTR es:[edi],dx
  40ba30:	lds    esi,FWORD PTR [esp+esi*1+0x60]
  40ba34:	adc    bh,cl
  40ba36:	les    esp,FWORD PTR [edi-0x5e1a5cfb]
  40ba3c:	inc    esi
  40ba3d:	add    BYTE PTR [edx-0x5d],ch
  40ba40:	add    DWORD PTR [edi],edi
  40ba42:	sub    BYTE PTR [edi+0x5],bl
  40ba45:	jne    0x40ba38
	...
  40ba53:	add    BYTE PTR [eax],al
  40ba55:	add    BYTE PTR [ecx+0x12],ah
  40ba58:	in     eax,dx
  40ba59:	sbb    al,0x9e
  40ba5b:	add    eax,0x54d10eb
  40ba60:	push   0xffffffe8
  40ba62:	popa   
  40ba63:	xor    al,BYTE PTR [esi+eax*1]
  40ba66:	es add eax,0x3a63d4ff
  40ba6c:	inc    ecx
  40ba6d:	jmp    0xe24c8257
  40ba72:	mov    al,ds:0x6b262177
  40ba77:	add    DWORD PTR [edi],edi
  40ba79:	test   al,0x60
  40ba7b:	cld    
  40ba7c:	adc    al,0xec
  40ba7e:	and    al,BYTE PTR [esi+0x0]
  40ba81:	push   0xffffff9c
  40ba83:	pop    es
  40ba84:	(bad)  
  40ba85:	fcom   QWORD PTR [ebx-0x6616bec8]
  40ba8b:	add    BYTE PTR [esi+esi*4],al
  40ba8e:	daa    
  40ba8f:	add    eax,0x560e900
  40ba94:	jmp    0x40ba7e
  40ba96:	daa    
  40ba97:	nop
  40ba98:	ret    0x9842
  40ba9b:	lds    eax,FWORD PTR [edi]
  40ba9d:	jmp    0xe44f489
  40baa2:	mov    al,ds:0x8e000005
  40baa7:	and    al,0xff
  40baa9:	xor    eax,0x41463e
  40baae:	cmc    
  40baaf:	adc    al,BYTE PTR ds:0x83018b3e
  40bab5:	les    edi,FWORD PTR [esi]
  40bab7:	push   es
  40bab8:	adc    eax,0xed
	...
  40bac9:	pop    es
  40baca:	dec    eax
  40bacb:	add    bh,al
  40bacd:	lsl    edi,WORD PTR [edi]
  40bad0:	inc    ecx
  40bad1:	or     al,BYTE PTR [edi]
  40bad3:	add    BYTE PTR [eax],al
  40bad5:	cli    
  40bad6:	rcl    DWORD PTR [ebx-0x75],0xd6
  40bada:	add    dl,0xf0
  40badd:	pop    ecx
  40bade:	mov    BYTE PTR [ebx+0x8],al
  40bae1:	add    edi,eax
  40bae3:	jb     0x40baf0
  40bae5:	jns    0x40bb61
  40bae7:	or     al,0x0
  40bae9:	push   cs
  40baea:	add    al,0x80
  40baec:	cmp    dl,cl
  40baee:	jae    0x40baf7
  40baf0:	sub    ecx,DWORD PTR [edx-0x2d3d36a8]
  40baf6:	push   es
  40baf7:	cmp    BYTE PTR [eax],0x4
  40bafa:	jae    0x40bb0c
  40bafc:	xor    DWORD PTR [edi-0x35bec0fe],0x6
  40bb03:	jne    0x40bb0c
  40bb05:	xchg   ecx,eax
  40bb06:	(bad)  
  40bb07:	pop    ecx
  40bb08:	leave  
  40bb09:	js     0x40bb14
  40bb0b:	add    BYTE PTR [eax+0x3e7484b2],al
  40bb11:	add    DWORD PTR [edx+0xc],edx
  40bb14:	dec    edx
  40bb15:	stc    
  40bb16:	loop   0x40bb19
  40bb18:	or     ebp,DWORD PTR [eax+0x72]
  40bb1b:	push   es
  40bb1c:	xor    edi,0x9
  40bb1f:	add    DWORD PTR [ebp+0x7e],esi
  40bb22:	sub    eax,eax
  40bb24:	jmp    0x40bb84
  40bb26:	add    al,0x4d
  40bb28:	or     al,0xf1
  40bb2a:	inc    edx
  40bb2b:	or     al,0x5
	...
  40bb39:	add    BYTE PTR [eax],al
  40bb3b:	add    BYTE PTR [ebx-0x14],ah
  40bb3e:	push   es
  40bb3f:	add    BYTE PTR [ebx-0x53],ah
  40bb42:	loop   0x40bb45
  40bb44:	mov    bl,0xd4
  40bb46:	sbb    al,0x8d
  40bb48:	inc    esp
  40bb49:	mov    ebx,0xe4968b52
  40bb4e:	inc    esp
  40bb4f:	push   eax
  40bb50:	xor    al,0x31
  40bb52:	adc    BYTE PTR [edx+0x3b],dl
  40bb55:	mov    ecx,0x4424fe9a
  40bb5a:	pop    ebp
  40bb5b:	leave  
  40bb5c:	and    esp,esp
  40bb5e:	add    ch,BYTE PTR [ebx]
  40bb60:	cmp    BYTE PTR [ebx-0x6f3f38b],cl
  40bb66:	or     ch,BYTE PTR [edx+0x63]
  40bb69:	push   ss
  40bb6a:	add    al,0xff
  40bb6c:	push   esi
  40bb6d:	jge    0x40bbad
  40bb6f:	inc    ecx
  40bb70:	arpl   WORD PTR [edi-0x39],bp
  40bb73:	addps  xmm5,XMMWORD PTR [edi+esi*2]
  40bb77:	fisub  DWORD PTR gs:[eax+0x616f69fe]
  40bb7e:	inc    esi
  40bb7f:	lock xor eax,DWORD PTR [esi+esi*8-0x75]
  40bb84:	int3   
  40bb85:	inc    edx
  40bb86:	ins    DWORD PTR es:[edi],dx
  40bb87:	add    dh,dl
  40bb89:	mov    al,ds:0xb8bc4ff2
  40bb8e:	(bad)  
  40bb8f:	dec    BYTE PTR [esi-0x13]
  40bb92:	inc    eax
  40bb93:	inc    ecx
  40bb94:	arpl   WORD PTR [edi-0x39],bp
  40bb97:	or     ebx,DWORD PTR [eax+0x2c]
  40bb9a:	jbe    0x40bbcf
  40bb9c:	out    dx,al
  40bb9d:	test   al,0xf2
  40bb9f:	add    BYTE PTR [eax],0x0
	...
  40bbae:	add    BYTE PTR [ebx],bl
  40bbb0:	loopne 0x40bbb4
  40bbb2:	je     0x40bc1c
  40bbb4:	ja     0x40bbf9
  40bbb6:	or     BYTE PTR [ebx],ah
  40bbb8:	pushf  
  40bbb9:	jmp    0x9b8a:0xfef2efb4
  40bbc0:	pop    eax
  40bbc1:	inc    esi
  40bbc2:	lock ins BYTE PTR es:[edi],dx
  40bbc4:	add    al,0x59
  40bbc6:	or     al,0x10
  40bbc8:	cli    
  40bbc9:	pop    eax
  40bbca:	or     BYTE PTR [ebx-0x23],cl
  40bbcd:	call   DWORD PTR fs:[ebp+0x6c]
  40bbd1:	jmp    0x19366366
  40bbd6:	jmp    FWORD PTR [edi-0xe]
  40bbd9:	sti    
  40bbda:	inc    esp
  40bbdb:	arpl   WORD PTR [esp+ebp*4-0x51f936f4],ax
  40bbe2:	jns    0x40bc13
  40bbe4:	stc    
  40bbe5:	sti    
  40bbe6:	clc    
  40bbe7:	addr16 inc esi
  40bbe9:	jmp    0x624edc70
  40bbee:	ret    
  40bbef:	mov    ecx,0x630caace
  40bbf4:	push   edx
  40bbf5:	jb     0x40bbe7
  40bbf7:	add    eax,0x77feed73
  40bbfc:	or     eax,0x37f71976
  40bc01:	sub    BYTE PTR [eax+eiz*8],al
  40bc04:	shl    eax,0x53
  40bc07:	in     al,0x72
  40bc09:	in     eax,dx
  40bc0a:	(bad)  
  40bc0b:	push   edi
  40bc0c:	or     eax,0x37db1956
  40bc11:	test   al,0x3
	...
  40bc1f:	add    BYTE PTR [eax],al
  40bc21:	add    al,ah
  40bc23:	shl    eax,0x8a
  40bc26:	das    
  40bc27:	adc    eax,0xce1b0270
  40bc2c:	sub    dl,BYTE PTR [eax]
  40bc2e:	arpl   WORD PTR [edx+0x62],dx
  40bc31:	lock loope 0x40bbf5
  40bc34:	adc    bh,bh
  40bc36:	das    
  40bc37:	or     DWORD PTR [ecx],edx
  40bc39:	add    esi,edx
  40bc3b:	clc    
  40bc3c:	adc    eax,0xe572a30b
  40bc41:	int3   
  40bc42:	mov    ds:0xffee915,al
  40bc47:	or     DWORD PTR [ecx],edx
  40bc49:	loopne 0x40bc19
  40bc4b:	clc    
  40bc4c:	push   ebp
  40bc4e:	imul   eax,ebp,0xc69fe573
  40bc54:	psubsw mm4,QWORD PTR [ebp+0x71]
  40bc58:	adc    al,0xde
  40bc5a:	fist   DWORD PTR ds:0xf863ace8
  40bc60:	(bad)  
  40bc61:	loop   0x40bc83
  40bc63:	jno    0x40bc69
  40bc65:	mov    al,0x22
  40bc67:	or     BYTE PTR [eax],al
  40bc69:	push   ecx
  40bc6a:	dec    edi
  40bc6b:	cmp    al,BYTE PTR [ecx-0x17]
  40bc6e:	enter  0x3e70,0x28
  40bc72:	addr16 in eax,dx
  40bc74:	mov    edi,DWORD PTR [edi+0x25]
  40bc77:	test   DWORD PTR [edx],0x68089ba9
  40bc7d:	adc    DWORD PTR [esi+0x46],0x375e0100
  40bc84:	inc    ecx
  40bc85:	jmp    0x40bc8a
	...
  40bc92:	add    BYTE PTR [eax],al
  40bc94:	add    al,bh
  40bc96:	jl     0x40bc2e
  40bc98:	jle    0x40bc97
  40bc9a:	or     al,al
  40bc9c:	out    0xdc,al
  40bc9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc9f:	add    cl,ch
  40bca1:	pusha  
  40bca2:	mov    al,BYTE PTR [ebp+eiz*2-0x70]
  40bca6:	clc    
  40bca7:	je     0x40bc96
  40bca9:	fst    QWORD PTR [eax]
  40bcab:	call   0x8345dac7
  40bcb0:	and    eax,0xf6c00c58
  40bcb5:	fisttp DWORD PTR [esi+0x6b60e900]
  40bcbb:	add    BYTE PTR [ebx+ebp*1-0x3],ah
  40bcbf:	dec    edi
  40bcc0:	ret    
  40bcc1:	lods   eax,DWORD PTR ds:[esi]
  40bcc2:	pop    edi
  40bcc3:	js     0x40bcab
  40bcc5:	pop    ds
  40bcc6:	add    eax,0xf69c94ff
  40bccb:	adc    al,0x19
  40bccd:	push   esi
  40bcce:	inc    esi
  40bccf:	add    BYTE PTR [edx-0x5c],ch
  40bcd2:	adc    ecx,DWORD PTR [ebx]
  40bcd4:	add    BYTE PTR [edx],bh
  40bcd6:	pop    es
  40bcd7:	test   DWORD PTR [edx-0x75],ebp
  40bcda:	add    eax,DWORD PTR [eax]
  40bcdc:	push   edi
  40bcde:	sti    
  40bcdf:	std    
  40bce0:	adc    eax,0x413876
  40bce5:	stc    
  40bce6:	int3   
  40bce7:	add    al,BYTE PTR [ebx+0x5746e42]
  40bced:	and    ebx,DWORD PTR [esi+0x1]
  40bcf0:	add    BYTE PTR [edx],bh
  40bcf2:	mov    BYTE PTR [ebx-0xc],al
  40bcf5:	push   0x6b
  40bcf7:	add    bh,bh
	...
  40bd05:	add    BYTE PTR [eax],al
  40bd07:	add    BYTE PTR [edi-0x7],dh
  40bd0a:	out    0x14,al
  40bd0c:	in     eax,dx
  40bd0d:	clc    
  40bd0e:	std    
  40bd0f:	or     edi,edx
  40bd11:	or     BYTE PTR [ecx+edi*1-0x7cfffcc5],al
  40bd18:	jg     0x40bd17
  40bd1a:	dec    BYTE PTR [esi]
  40bd1c:	xchg   BYTE PTR [eax],ch
  40bd1e:	add    DWORD PTR [eax],eax
  40bd20:	cli    
  40bd21:	xor    BYTE PTR [esi],0x0
  40bd24:	or     eax,0xa01247f
  40bd29:	add    edx,DWORD PTR [eax-0x75]
  40bd2c:	push   edi
  40bd2d:	std    
  40bd2e:	inc    eax
  40bd2f:	push   edx
  40bd30:	loop   0x40bd99
  40bd32:	mov    edi,edi
  40bd34:	jge    0x40bd91
  40bd36:	mov    DWORD PTR [ebp+0x32],eax
  40bd39:	clc    
  40bd3a:	jae    0x40bd30
  40bd3c:	sub    eax,0x2252e86e
  40bd41:	mov    cs,WORD PTR [ecx+0x43c01dff]
  40bd47:	lock retf 0x2
  40bd4b:	add    BYTE PTR [ebp-0x45ff13c2],al
  40bd51:	add    al,BYTE PTR [eax]
  40bd53:	cmp    DWORD PTR [edi-0x75bec0fe],0x2
  40bd5a:	jne    0x40bdae
  40bd5c:	arpl   WORD PTR [ebp+ebp*8-0x1513ddc2],ax
  40bd63:	sub    DWORD PTR [edi],esp
  40bd65:	in     al,dx
  40bd66:	add    dl,BYTE PTR [eax+0xb]
  40bd69:	or     DWORD PTR ds:0x41,edi
	...
  40bd7b:	arpl   di,bp
  40bd7d:	jne    0x40bd67
  40bd7f:	jnp    0x40bd99
  40bd81:	pop    edi
  40bd82:	add    BYTE PTR [ebx-0xd],ah
  40bd85:	ret    0x7b73
  40bd88:	push   esp
  40bd89:	clc    
  40bd8a:	mov    ds:0xaf0deaec,al
  40bd90:	in     al,dx
  40bd91:	add    dl,BYTE PTR [eax-0x45]
  40bd94:	mov    eax,0xb763413b
  40bd99:	jne    0x40bd83
  40bd9b:	dec    ebx
  40bd9c:	jl     0x40bdfc
  40bd9e:	add    BYTE PTR [ebx-0x1d],ah
  40bda1:	ret    0x7173
  40bda4:	adc    al,0x0
  40bda6:	aas    
  40bda7:	mov    ds:0xb8f1eaec,al
  40bdac:	in     al,dx
  40bdad:	add    dl,BYTE PTR [eax+0x7b]
  40bdb0:	mov    BYTE PTR [ebx],bh
  40bdb2:	inc    ecx
  40bdb3:	arpl   WORD PTR [edi+0x75],di
  40bdb6:	call   0x9f0dc6
  40bdbb:	arpl   WORD PTR [ebx+0x2c66681a],ax
  40bdc1:	inc    ebx
  40bdc2:	add    bl,bh
  40bdc4:	inc    ebx
  40bdc5:	pop    eax
  40bdc6:	add    BYTE PTR [ebx-0x44],ah
  40bdc9:	push   0x5
  40bdcb:	and    ebp,DWORD PTR [ebp+0x4456ff02]
  40bdd1:	jmp    0x40be4c
  40bdd3:	es in  al,dx
  40bdd5:	add    cl,BYTE PTR [ebx]
  40bdd7:	mov    ds:0x1e8d6cb0,eax
  40bddc:	cmp    BYTE PTR [ebx+0x6a],dl
	...
  40bdeb:	add    BYTE PTR [eax],al
  40bded:	add    BYTE PTR [edx+0x27],ah
  40bdf0:	jbe    0x40bdea
  40bdf2:	mov    ebx,0x9dfdb204
  40bdf7:	cmc    
  40bdf8:	sbb    eax,0x1548f76
  40bdfd:	inc    esi
  40bdfe:	mov    ?,ebp
  40be00:	or     eax,0x73f51f8a
  40be05:	inc    esi
  40be06:	ja     0x40be5c
  40be08:	xchg   ebx,eax
  40be09:	add    DWORD PTR [edi+ebp*2-0xf],esi
  40be0d:	jmp    0x6f65:0xfbedf733
  40be14:	fst    QWORD PTR [ebx+ecx*2+0x21]
  40be18:	fdiv   st(3),st
  40be1a:	push   ebp
  40be1b:	jg     0x40be48
  40be1d:	call   0x5023103
  40be22:	iret   
  40be23:	cmp    DWORD PTR [edx+0x79],ebp
  40be26:	dec    edi
  40be27:	push   es
  40be28:	xor    eax,0xe905cb2a
  40be2d:	jmp    0xf43b:0xc33f4ee
  40be34:	outs   dx,BYTE PTR ds:[esi]
  40be35:	sti    
  40be36:	sbb    eax,0x15ec13f5
  40be3b:	jnp    0x40be1e
  40be3d:	jmp    0x40bdf6
  40be3f:	mov    WORD PTR [ebp+0x797b05fb],cs
  40be45:	sti    
  40be46:	ja     0x40be45
  40be48:	nop
  40be49:	dec    esi
  40be4a:	fdivr  st(4),st
  40be4c:	jne    0x40be49
  40be4e:	ja     0x40be31
  40be50:	ins    DWORD PTR es:[edi],dx
  40be51:	jno    0x40be53
	...
  40be5f:	add    BYTE PTR [eax],al
  40be61:	pop    ebx
  40be62:	frstor ds:0x5df4dd83
  40be68:	jno    0x40be3d
  40be6a:	frstor [ebp+ecx*4+0x714df4cd]
  40be71:	mov    bh,0xdd
  40be73:	lods   al,BYTE PTR ds:[esi]
  40be74:	lea    edi,[ebp-0x348ec20c]
  40be7a:	(bad)  
  40be7c:	hlt    
  40be7d:	fdivrp st(3),st
  40be7f:	inc    BYTE PTR [eax-0x2f]
  40be82:	repnz (bad) 
  40be84:	es cwde 
  40be86:	jns    0x40be84
  40be88:	push   ds
  40be89:	jb     0x40be6c
  40be8b:	cmp    eax,0xc38860a8
  40be90:	in     eax,0x78
  40be92:	fwait
  40be93:	sti    
  40be94:	push   es
  40be95:	js     0x40be54
  40be97:	rcr    ecx,0x60
  40be9a:	pop    edx
  40be9b:	mov    eax,DWORD PTR ds:0xee005f14
  40bea1:	repz cld 
  40bea3:	out    0x9a,eax
  40bea5:	jmp    0x40be99
  40bea7:	(bad)  
  40bea8:	jb     0x40bee2
  40beaa:	push   edi
  40beab:	call   0x466ca9
  40beb0:	loop   0x40bed2
  40beb2:	js     0x40becf
  40beb4:	jmp    0x3be0:0xdbeb4c25
  40bebb:	or     eax,0x3785623d
  40bec0:	jecxz  0x40be75
  40bec2:	or     al,dh
  40bec4:	jmp    0x40bec9
	...
  40bed1:	add    BYTE PTR [eax],al
  40bed3:	add    BYTE PTR [eax-0x20],ah
  40bed6:	add    DWORD PTR [edx-0x55c4c29d],edx
  40bedc:	xchg   ebp,eax
  40bedd:	fisttp WORD PTR [edx-0x3e415a56]
  40bee3:	in     eax,dx
  40bee4:	pusha  
  40bee5:	pop    edx
  40bee6:	mov    ecx,DWORD PTR [ebp+0x1eb3c7dd]
  40beec:	call   0xb5c1cb69
  40bef1:	cmp    esi,0x74c56d66
  40bef7:	in     al,0x39
  40bef9:	mov    esi,0xf460f9c1
  40befe:	je     0x40bedd
  40bf00:	mov    eax,0x2500ab86
  40bf05:	out    dx,eax
  40bf06:	or     eax,eax
  40bf08:	out    dx,al
  40bf09:	add    al,0x5f
  40bf0b:	leave  
  40bf0c:	js     0x40bf26
  40bf0e:	add    bh,bh
  40bf10:	out    dx,eax
  40bf11:	add    edi,edi
  40bf13:	jne    0x40beaf
  40bf15:	fild   QWORD PTR [ecx-0x5]
  40bf18:	jne    0x40bf09
  40bf1a:	mov    eax,DWORD PTR [ebp+0x6a]
  40bf1d:	pop    eax
  40bf1e:	push   DWORD PTR [ebp-0x5a]
  40bf21:	fistp  QWORD PTR [edi]
  40bf23:	(bad)  
  40bf24:	gs out dx,eax
  40bf26:	or     eax,eax
  40bf28:	test   DWORD PTR [ebx-0x6],esi
  40bf2b:	add    bh,BYTE PTR [edx+0x7]
  40bf2e:	push   DWORD PTR [ebp+0x76]
  40bf31:	in     eax,dx
  40bf32:	jae    0x40bf2c
  40bf34:	xor    cl,ah
  40bf36:	xchg   edx,eax
  40bf37:	inc    DWORD PTR [eax]
	...
  40bf45:	add    BYTE PTR [eax],al
  40bf47:	xor    eax,0xbe0fc001
  40bf4c:	int3   
  40bf4d:	add    BYTE PTR [eax],al
  40bf4f:	cmp    al,BYTE PTR [eax-0xe4e13bd]
  40bf55:	jle    0x40bf96
  40bf57:	dec    edx
  40bf58:	inc    BYTE PTR [ebx+0x738c9]
  40bf5e:	push   edi
  40bf5f:	and    al,BYTE PTR [ebx-0x1]
  40bf62:	inc    ebp
  40bf64:	jle    0x40bfa9
  40bf66:	shl    ch,1
  40bf68:	(bad)  
  40bf69:	shr    BYTE PTR [eax+0x66],1
  40bf6c:	sub    al,0x41
  40bf6e:	add    dl,ah
  40bf70:	adc    bl,BYTE PTR [ebx+0x0]
  40bf73:	or     dl,BYTE PTR [edi-0x1]
  40bf76:	jne    0x40bf52
  40bf78:	popa   
  40bf79:	jo     0x40bfba
  40bf7b:	cmp    ecx,DWORD PTR [ecx]
  40bf7d:	call   0x4a1099
  40bf82:	push   eax
  40bf83:	inc    ebp
  40bf84:	(bad)  
  40bf85:	shr    BYTE PTR [eax-0x52],1
  40bf88:	sub    eax,0x44630041
  40bf8d:	or     ebx,DWORD PTR [ebx+0x63]
  40bf90:	fcomp  QWORD PTR [ecx+ebx*2+0x68]
  40bf94:	sbb    al,0x70
  40bf96:	or     al,0x68
  40bf98:	push   cs
  40bf99:	jo     0x40bfa3
  40bf9b:	pop    eax
  40bf9c:	and    eax,0xde268509
  40bfa1:	add    al,BYTE PTR [eax]
  40bfa3:	push   0x9c096f35
  40bfa8:	test   eax,0xae
	...
  40bfb9:	add    BYTE PTR [ebx-0x24],ah
  40bfbc:	add    ch,bl
  40bfbe:	pop    esp
  40bfbf:	sub    edi,DWORD PTR [edi]
  40bfc1:	mov    ah,0x63
  40bfc3:	fadd   QWORD PTR [edx]
  40bfc5:	add    BYTE PTR [edi-0x51],dh
  40bfc8:	ret    0x6cb8
  40bfcb:	sti    
  40bfcc:	idiv   esi
  40bfce:	jno    0x40c002
  40bfd0:	cmp    al,0x7
  40bfd2:	(bad)  
  40bfd3:	fdivr  QWORD PTR [edi+0x2dc4b44]
  40bfd9:	add    BYTE PTR [ebx+0x5c],ah
  40bfdc:	cmp    BYTE PTR [eax],al
  40bfde:	push   esp
  40bfdf:	push   0xdc63024c
  40bfe4:	dec    edi
  40bfe5:	call   0xff3871fe
  40bfea:	fisub  DWORD PTR [eax]
  40bfec:	enter  0xa682,0xc4
  40bff0:	add    dh,BYTE PTR [ebp+0x42]
  40bff3:	adc    al,0x68
  40bff5:	sub    al,0xa2
  40bff7:	fdivr  st(7),st
  40bff9:	je     0x40c01a
  40bffb:	test   BYTE PTR [ecx+0xbdc6359],ch
  40c001:	shr    BYTE PTR [ecx+eiz*2+0x6],0x2
  40c006:	arpl   sp,bx
  40c008:	mov    edi,0x2dcfb44
  40c00d:	add    BYTE PTR [ebx-0x7b],ah
  40c010:	add    DWORD PTR [edx],eax
  40c012:	arpl   WORD PTR ds:0xdd5784e9,ax
  40c018:	out    0x6e,eax
  40c01a:	pop    esp
  40c01b:	jl     0x40bff0
  40c01d:	fild   WORD PTR [eax]
	...
  40c02b:	add    BYTE PTR [eax],al
  40c02d:	popf   
  40c02e:	inc    edi
  40c02f:	inc    ecx
  40c030:	add    eax,0xeae90563
  40c035:	out    dx,al
  40c036:	add    ebp,ecx
  40c038:	add    esp,eax
  40c03a:	outs   dx,DWORD PTR ds:[esi]
  40c03b:	inc    ecx
  40c03c:	add    eax,0x7660022e
  40c041:	or     ecx,0xffffffab
  40c044:	jmp    0x40c0a7
  40c046:	add    eax,0xa37a03e9
  40c04b:	out    0x3,eax
  40c04d:	arpl   WORD PTR [esi+0x7861eb8b],ax
  40c053:	test   BYTE PTR [edx+0x3e25d0f7],0x7b
  40c05a:	or     cl,ch
  40c05c:	add    esp,DWORD PTR [ebx-0x24]
  40c05f:	pop    esp
  40c060:	add    ah,BYTE PTR [ebx+0x5]
  40c063:	push   0x79
  40c065:	dec    ebx
  40c066:	or     dl,BYTE PTR [edi+eax*1-0x26]
  40c06a:	jb     0x40c01d
  40c06c:	mov    edi,0x3e3dd9f
  40c071:	arpl   WORD PTR ds:0x5626fd0,ax
  40c077:	jmp    0xec1e6ffe
  40c07c:	push   es
  40c07d:	fisub  WORD PTR [ebp-0x18]
  40c080:	add    esp,DWORD PTR [ebx+0x7e]
  40c083:	and    edx,eax
  40c085:	loope  0x40c0f9
  40c087:	push   ebp
  40c088:	add    al,0x97
  40c08a:	(bad)  
  40c08b:	lods   eax,DWORD PTR ds:[esi]
  40c08c:	inc    ecx
  40c08d:	sti    
  40c08e:	add    ebp,ecx
  40c090:	add    eax,DWORD PTR [eax]
	...
  40c09e:	add    BYTE PTR [eax],al
  40c0a0:	arpl   sp,bx
  40c0a2:	in     eax,dx
  40c0a3:	mov    esi,0x3e6dd9f
  40c0a8:	arpl   WORD PTR ds:0xc5a2ae00,ax
  40c0ae:	(bad)  
  40c0af:	call   0xad07c614
  40c0b4:	test   al,0xf0
  40c0b6:	(bad)  
  40c0b7:	jmp    0x2d85891c
  40c0bc:	pop    edi
  40c0bd:	add    eax,0x49fde900
  40c0c2:	mov    esp,0x560e9
  40c0c7:	and    ch,BYTE PTR es:[ebp+0x560e8ff]
  40c0ce:	push   DWORD PTR [esp+edi*4-0x73d8ed18]
  40c0d5:	out    dx,eax
  40c0d6:	mov    BYTE PTR [eax+eiz*4+0x773574ef],ah
  40c0dd:	or     dh,bh
  40c0df:	push   cs
  40c0e0:	je     0x40c15f
  40c0e2:	inc    esp
  40c0e3:	xor    DWORD PTR [ecx+edi*2-0x2c],ebp
  40c0e7:	adc    DWORD PTR [edx-0xf],ebp
  40c0ea:	(bad)  
  40c0eb:	not    bh
  40c0ed:	dec    ecx
  40c0ee:	les    ebp,FWORD PTR [edx-0x66]
  40c0f1:	add    eax,0x55f283f
  40c0f6:	jne    0x40c133
  40c0f8:	mov    edi,0x5f283ee2
  40c0fd:	fisttp QWORD PTR [eax+esi*1]
  40c100:	addr16 add eax,0x5150
	...
  40c112:	add    BYTE PTR [edx+0x2f],cl
  40c115:	inc    ecx
  40c116:	jmp    0xc2013a50
  40c11b:	std    
  40c11c:	dec    ebp
  40c11d:	add    cl,ch
  40c11f:	imul   eax,ebp,0xf9870173
  40c125:	sub    BYTE PTR ds:[edi-0x23],ah
  40c129:	lock xor DWORD PTR [edi+0x5],ebx
  40c12d:	push   eax
  40c12e:	add    ebx,esi
  40c130:	cs inc ecx
  40c132:	add    BYTE PTR [edx],cl
  40c134:	div    DWORD PTR [ebx-0x40]
  40c137:	rcl    BYTE PTR [edx-0x505ffa8],cl
  40c13d:	mov    edi,0xfc5c1874
  40c142:	aas    
  40c143:	or     eax,DWORD PTR [eax+ebp*8]
  40c146:	aad    0xa2
  40c148:	add    eax,DWORD PTR [eax]
  40c14a:	push   eax
  40c14b:	mov    ds:0xca413df7,al
  40c150:	div    BYTE PTR [ebx-0x40]
  40c153:	adc    bl,BYTE PTR [edi+0x5a]
  40c156:	add    BYTE PTR [edx-0x4897e926],bh
  40c15c:	inc    ebx
  40c15d:	inc    ecx
  40c15e:	add    BYTE PTR [edx],ah
  40c160:	stos   DWORD PTR es:[edi],eax
  40c161:	push   esi
  40c162:	add    BYTE PTR [edx-0x45fa97ad],cl
  40c168:	dec    eax
  40c169:	add    bh,bh
  40c16b:	out    0xc3,eax
  40c16d:	out    0x5d,al
  40c16f:	mov    al,0x3
  40c171:	add    BYTE PTR [ebx],cl
  40c173:	dec    edx
  40c174:	jne    0x40c1d8
  40c176:	inc    DWORD PTR [eax]
	...
  40c184:	add    BYTE PTR [eax],al
  40c186:	idiv   DWORD PTR [ebx+0x3d2a1e6]
  40c18c:	add    BYTE PTR [eax+0x4d],dl
  40c18f:	pop    edi
  40c190:	enter  0x6ce8,0xeb
  40c194:	std    
  40c195:	call   ebx
  40c197:	cs mov esp,0xe6c5a7ff
  40c19d:	lea    esi,[edx+0x9]
  40c1a0:	add    BYTE PTR [eax+0x1d],dl
  40c1a3:	pop    edi
  40c1a4:	(bad)  
  40c1a5:	call   0x3eaeea
  40c1aa:	ret    
  40c1ab:	cs mov eax,0xfec94f83
  40c1b1:	jae    0x40c1e9
  40c1b3:	xchg   BYTE PTR [ebx-0x48],bh
  40c1b6:	cli    
  40c1b7:	pop    esi
  40c1b8:	cs push 0xef02dc63
  40c1be:	mov    ebp,0xb086e7f
  40c1c3:	call   0xc06f:0x6fecfe80
  40c1ca:	in     al,0xf1
  40c1cc:	or     ch,al
  40c1ce:	daa    
  40c1cf:	push   0xd1d4fef5
  40c1d4:	mov    dh,0xfe
  40c1d6:	push   esi
  40c1d7:	hlt    
  40c1d8:	jmp    0x36fe:0xf557df38
  40c1df:	xchg   esp,eax
  40c1e0:	hlt    
  40c1e1:	je     0x40c24e
  40c1e3:	push   esp
  40c1e4:	test   BYTE PTR es:[edi+ebp*1+0x74f5],ch
	...
  40c1f8:	add    BYTE PTR [ebx-0x6378c6bc],ah
  40c1fe:	pop    ds
  40c1ff:	cmc    
  40c200:	je     0x40c1ad
  40c202:	adc    al,0x31
  40c204:	xchg   DWORD PTR [edi+ecx*1+0x49f74f5],ecx
  40c20b:	sub    DWORD PTR [edi+0x74f4ff7c],eax
  40c211:	mov    bh,0x14
  40c213:	and    DWORD PTR [edi+0x74f3ef6c],eax
  40c219:	stos   DWORD PTR es:[edi],eax
  40c21a:	add    al,0x19
  40c21c:	xchg   DWORD PTR [edi+ebx*8-0x19],ebx
  40c220:	or     al,0xe0
  40c222:	push   0xe7d605ec
  40c227:	mov    ebx,0x2da3b44
  40c22c:	add    BYTE PTR [ebx+0x5b],ah
  40c22f:	jbe    0x40c219
  40c231:	arpl   WORD PTR [eax],si
  40c233:	xor    al,0x68
  40c235:	mov    edi,0x24004300
  40c23a:	xor    eax,ecx
  40c23c:	out    0xd4,eax
  40c23e:	adc    eax,DWORD PTR [eax+eax*1]
  40c241:	push   0x646ea905
  40c246:	(bad)  
  40c247:	and    ebp,esp
  40c249:	arpl   WORD PTR ds:0xdc8b03e9,ax
  40c24f:	int    0x42
  40c251:	arpl   si,bp
  40c253:	sti    
  40c254:	mov    DWORD PTR [esi+ecx*4],0xfa630420
  40c25b:	test   al,0x6e
	...
  40c269:	add    BYTE PTR [eax],al
  40c26b:	add    BYTE PTR [esi+eax*8+0x23],ah
  40c26f:	in     al,dx
  40c270:	bound  eax,QWORD PTR ds:0x77cc03e9
  40c276:	sub    eax,0x558696eb
  40c27b:	hlt    
  40c27c:	mov    eax,0xb5ba2931
  40c281:	in     eax,dx
  40c282:	inc    ebp
  40c283:	hlt    
  40c284:	mov    dl,0x9e
  40c286:	add    ch,bh
  40c288:	push   ebp
  40c289:	mov    BYTE PTR [esi+esi*8+0x6e2ded9d],al
  40c290:	mov    bl,0xdc
  40c292:	pop    esp
  40c293:	jge    0x40c222
  40c295:	in     eax,dx
  40c296:	sbb    eax,0x44dc776e
  40c29b:	jge    0x40c31a
  40c29d:	in     eax,dx
  40c29e:	pop    ebx
  40c29f:	ds jae 0x40c2f6
  40c2a2:	adc    ecx,edx
  40c2a4:	fsubr  st,st(5)
  40c2a6:	std    
  40c2a7:	jmp    0xbebd:0xf3f5ec55
  40c2ae:	sub    dl,BYTE PTR [ebx]
  40c2b0:	arpl   WORD PTR [edx+0x72],dx
  40c2b3:	loopne 0x40c298
  40c2b5:	rcl    DWORD PTR [edx+esi*8-0x765212bb],0xf4
  40c2bd:	jmp    0x40c28c
  40c2bf:	repz xor al,0xed
  40c2c2:	call   0xd5839aca
  40c2c7:	(bad)  
  40c2c8:	in     al,0x71
  40c2ca:	add    ah,ch
  40c2cc:	loopne 0x40c302
  40c2ce:	add    BYTE PTR [eax+eax*1],dh
	...
  40c2dd:	add    BYTE PTR [eax],al
  40c2df:	push   0xffffffde
  40c2e1:	hlt    
  40c2e2:	call   0x153fc847
  40c2e7:	imul   ebx,ebp,0x5d
  40c2ea:	js     0x40c2dc
  40c2ec:	jmp    0x40c2f8
  40c2ee:	test   eax,0xf867fc7a
  40c2f3:	dec    esp
  40c2f4:	inc    esi
  40c2f5:	add    BYTE PTR [esi+0x6a],bh
  40c2f8:	adc    eax,ebp
  40c2fa:	jb     0x40c35a
  40c2fc:	jmp    0x40c2fc
  40c2fe:	and    BYTE PTR [edx+0x5d],0x76
  40c302:	adc    eax,0xd4ff0526
  40c307:	ins    BYTE PTR es:[edi],dx
  40c308:	fucomp st(3)
  40c30a:	pusha  
  40c30b:	mov    al,0xeb
  40c30d:	mov    BYTE PTR [edi+eax*1-0x15],ah
  40c311:	inc    BYTE PTR [esi+0xf]
  40c314:	sub    eax,DWORD PTR [ecx]
  40c316:	jmp    0x2bc53d7b
  40c31b:	xchg   ecx,eax
  40c31c:	jmp    0x40c31c
  40c31e:	cdq    
  40c31f:	mov    eax,0x90268668
  40c324:	jns    0x40c2aa
  40c326:	sub    edx,DWORD PTR [ecx+0x71b9feeb]
  40c32c:	mov    cl,0xb7
  40c32e:	pshufw mm5,mm3,0xe7
  40c332:	dec    ecx
  40c333:	or     BYTE PTR ds:0xb0da7000,al
  40c339:	std    
  40c33a:	not    BYTE PTR [ecx+0x2c]
  40c33d:	pcmpgtw mm7,mm0
  40c340:	add    al,0x0
  40c342:	jmp    0x40c347
	...
  40c34f:	add    BYTE PTR [eax],al
  40c351:	add    bl,ah
  40c353:	nop
  40c354:	rcr    edi,0x51
  40c357:	jmp    0x40c34f
  40c359:	jmp    0x40c3ab
  40c35b:	add    eax,0x8161e900
  40c360:	add    BYTE PTR [eax],0x3a
  40c363:	or     BYTE PTR [eax],al
  40c365:	lea    edi,[eax+0x25]
  40c368:	push   eax
  40c369:	push   0x4125a6
  40c36e:	and    bl,BYTE PTR [ecx+0x57]
  40c371:	add    dl,bh
  40c373:	jmp    0x147:0xc8ff75be
  40c37a:	or     cl,BYTE PTR [eax]
  40c37c:	lea    edx,[ebp-0x20a38]
  40c382:	ja     0x40c3c6
  40c384:	sub    al,0x50
  40c386:	push   edx
  40c387:	addr16 sub al,0x41
  40c38a:	retf   0x5acf
  40c38d:	push   edi
  40c38e:	retf   0xb07
  40c391:	shr    BYTE PTR [edi-0x44d31704],0x7
  40c398:	add    bh,bh
  40c39a:	lahf   
  40c39b:	adc    ebp,eax
  40c39d:	mov    edx,0xbfdf73a
  40c3a2:	jp     0x40c411
  40c3a4:	punpckhbw mm7,QWORD PTR [edx]
  40c3a7:	adc    BYTE PTR [ecx+0x0],al
  40c3aa:	push   ebp
  40c3ab:	ins    DWORD PTR es:[edi],dx
  40c3ac:	adc    al,0xe8
  40c3ae:	in     eax,dx
  40c3af:	push   0xea71fffe
  40c3b4:	push   0x0
	...
  40c3c5:	gs ins DWORD PTR es:[edi],dx
  40c3c7:	adc    al,0xe8
  40c3c9:	shr    DWORD PTR [eax-0x2],0xff
  40c3cd:	pop    ss
  40c3ce:	(bad)  
  40c3cf:	sar    dh,0x65
  40c3d2:	test   DWORD PTR [ebx+0x50519652],0xfe69c5e8
  40c3dc:	(bad)  
  40c3dd:	cli    
  40c3de:	push   esi
  40c3df:	push   DWORD PTR [ebp+0x4a]
  40c3e2:	div    BYTE PTR [ebx+0xc]
  40c3e5:	and    eax,0x63e80873
  40c3ea:	iret   
  40c3eb:	icebp  
  40c3ec:	(bad)  
  40c3ed:	xor    al,0xc5
  40c3ef:	mov    BYTE PTR [esp+ebp*1+0x63dcdac4],al
  40c3f6:	fadd   QWORD PTR [edx]
  40c3f8:	lea    esp,[ecx-0x307b8500]
  40c3fe:	call   0x412f:0xcb7bfef0
  40c405:	arpl   WORD PTR [ebx-0x6c024c4a],cx
  40c40b:	lock out 0x5e,eax
  40c40e:	xor    al,0x4
  40c410:	add    BYTE PTR [eax-0x64],bl
  40c413:	ja     0x40c443
  40c415:	jnp    0x40c473
  40c417:	sbb    al,0x41
  40c419:	arpl   WORD PTR [ebx+0x77],si
  40c41c:	adc    al,0xcb
  40c41e:	jae    0x40c49c
  40c420:	dec    ah
  40c422:	arpl   WORD PTR [edi-0xeb43a4d],si
  40c428:	dec    edi
	...
  40c435:	add    BYTE PTR [eax],al
  40c437:	add    bl,cl
  40c439:	adc    edi,DWORD PTR [ebx-0x2]
  40c43c:	mov    ah,0xac
  40c43e:	out    dx,eax
  40c43f:	je     0x40c494
  40c441:	inc    ebx
  40c442:	ja     0x40c450
  40c444:	adc    ebp,DWORD PTR [ebx]
  40c446:	ja     0x40c450
  40c448:	mov    esi,DWORD PTR [ebx]
  40c44a:	in     al,dx
  40c44b:	(bad)  
  40c44c:	xchg   esp,eax
  40c44d:	inc    esp
  40c44e:	cmp    DWORD PTR [ebp-0x4b0edc74],eax
  40c454:	iret   
  40c455:	or     dh,cl
  40c457:	dec    BYTE PTR [ebx+0x630058cc]
  40c45d:	pop    edi
  40c45e:	in     al,dx
  40c45f:	add    ecx,esi
  40c461:	(bad)  
  40c462:	jnp    0x40c3f8
  40c464:	scas   eax,DWORD PTR es:[edi]
  40c465:	jmp    0xe985:0xc60feef
  40c46c:	popa   
  40c46d:	add    BYTE PTR [ecx+0x5a057d39],0x77
  40c474:	popa   
  40c475:	fisubr WORD PTR [eax]
  40c477:	pop    esp
  40c478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c479:	sub    ch,BYTE PTR [eax]
  40c47b:	add    al,0x34
  40c47d:	mov    al,0x94
  40c47f:	icebp  
  40c480:	sub    eax,0x8d90d0ea
  40c485:	add    eax,0x578b53e9
  40c48a:	test   BYTE PTR [edx+0x63],0xea
  40c48e:	jae    0x40c447
  40c490:	push   cs
  40c491:	jmp    0x3e9:0x51d6dba5
  40c498:	xchg   ebx,eax
  40c499:	pop    ebp
  40c49a:	xor    DWORD PTR ss:[eax],eax
	...
  40c4a9:	add    BYTE PTR [eax],al
  40c4ab:	mov    ds:0xb0b68e05,al
  40c4b0:	jmp    0x416:0x67fcf085
  40c4b7:	arpl   WORD PTR [edi+0x10],cx
  40c4ba:	std    
  40c4bb:	adc    al,0x70
  40c4bd:	loope  0x40c4bb
  40c4bf:	mov    dl,0x6f
  40c4c1:	in     eax,dx
  40c4c2:	cld    
  40c4c3:	fwait
  40c4c4:	jo     0x40c4d5
  40c4c6:	pop    esp
  40c4c7:	jecxz  0x40c4e5
  40c4c9:	test   al,0x3
  40c4cb:	mov    ah,0x6f
  40c4cd:	cmc    
  40c4ce:	fild   DWORD PTR [edi+0x7d]
  40c4d1:	inc    ebp
  40c4d2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4d4:	scas   eax,DWORD PTR es:[edi]
  40c4d5:	je     0x40c4c8
  40c4d7:	popf   
  40c4d8:	jmp    0x7d08a075
  40c4dd:	sub    eax,0x9bea1cf0
  40c4e2:	adc    eax,DWORD PTR [edi+ebp*2+0x6f7c53ed]
  40c4e9:	loope  0x40c4c6
  40c4eb:	mov    al,ds:0x84f00dee
  40c4f0:	lahf   
  40c4f1:	ins    BYTE PTR es:[edi],dx
  40c4f2:	lock gs ja 0x40c559
  40c4f6:	lds    ebx,FWORD PTR [esi-0x17]
  40c4f9:	push   ebp
  40c4fb:	mov    cl,0xe8
  40c4fd:	mov    ah,0x2d
  40c4ff:	push   edx
  40c500:	call   0x4f999703
  40c505:	add    cl,ch
  40c507:	jmp    0x40c4b1
  40c509:	push   cs
  40c50a:	ins    BYTE PTR es:[edi],dx
  40c50b:	mov    ebx,0xcefee7
	...
  40c51c:	add    BYTE PTR [eax],al
  40c51e:	cmp    al,0xb2
  40c520:	mov    ebx,0xe7e834c7
  40c525:	out    dx,eax
  40c526:	mov    dh,0x5
  40c528:	add    BYTE PTR [esi-0x51024f26],dh
  40c52e:	cld    
  40c52f:	loopne 0x40c5a5
  40c531:	ins    DWORD PTR es:[edi],dx
  40c532:	hlt    
  40c533:	out    0xc8,eax
  40c535:	stos   DWORD PTR es:[edi],eax
  40c536:	push   edi
  40c537:	add    eax,0xe8036255
  40c53c:	je     0x40c51b
  40c53e:	std    
  40c53f:	jno    0x40c551
  40c541:	xchg   BYTE PTR [edx-0x7],ch
  40c544:	(bad)  
  40c545:	hlt    
  40c546:	fsub   st,st(0)
  40c548:	ret    
  40c549:	je     0x40c50f
  40c54b:	out    0xc8,eax
  40c54d:	stos   DWORD PTR es:[edi],eax
  40c54e:	arpl   WORD PTR ds:0x83c37255,ax
  40c554:	ret    
  40c555:	pop    ecx
  40c556:	adc    al,0xe8
  40c558:	je     0x40c53f
  40c55a:	cwde   
  40c55b:	bound  ecx,QWORD PTR [ecx-0x400443b2]
  40c561:	mov    esp,0x2bc9485b
  40c566:	arpl   WORD PTR ds:0xdd70bcff,ax
  40c56c:	push   esp
  40c56d:	pusha  
  40c56e:	jl     0x40c557
  40c570:	or     ch,BYTE PTR [ecx]
  40c572:	or     al,BYTE PTR [edx]
  40c574:	pop    edi
  40c575:	xor    BYTE PTR [ecx-0x5ea0004],ah
  40c57b:	clc    
  40c57c:	out    0xf0,eax
  40c57e:	in     eax,dx
  40c57f:	out    0xfe,al
	...
  40c591:	jno    0x40c557
  40c593:	jae    0x40c5a4
  40c595:	repnz and DWORD PTR [esi],0x41
  40c599:	dec    edx
  40c59a:	xlat   BYTE PTR ds:[ebx]
  40c59b:	jae    0x40c5a9
  40c59d:	bound  ebp,QWORD PTR [edi-0x34c2007b]
  40c5a3:	or     BYTE PTR [edx+0x4a],ch
  40c5a6:	xlat   BYTE PTR ds:[ebx]
  40c5a7:	jae    0x40c5b5
  40c5a9:	and    cl,BYTE PTR [esi+0x691dff85]
  40c5af:	inc    esp
  40c5b0:	hlt    
  40c5b1:	xchg   edx,eax
  40c5b2:	jmp    0xd74b06f4
  40c5b7:	jae    0x40c5ad
  40c5b9:	and    bh,BYTE PTR [esi-0x7b]
  40c5bc:	(bad)  
  40c5bd:	mov    ebp,0x72f84468
  40c5c2:	retf   
  40c5c3:	sti    
  40c5c4:	add    BYTE PTR [edx],cl
  40c5c6:	int3   
  40c5c7:	add    eax,DWORD PTR [ebp+ecx*8-0x21ba782a]
  40c5ce:	dec    ebx
  40c5cf:	add    BYTE PTR [eax],dl
  40c5d1:	cli    
  40c5d2:	add    ebp,eax
  40c5d4:	clc    
  40c5d5:	dec    ecx
  40c5d6:	xlat   BYTE PTR ds:[ebx]
  40c5d7:	std    
  40c5d8:	mov    DWORD PTR [edi+0x5275fdf1],eax
  40c5de:	int3   
  40c5df:	test   al,0x88
  40c5e1:	cmp    eax,0xcdc009d7
  40c5e6:	jg     0x40c5a3
  40c5e8:	add    dl,cl
  40c5ea:	add    edi,edi
  40c5ec:	jne    0x40c600
  40c5ee:	dec    esp
  40c5ef:	call   0xff4480f1
  40c5f4:	jne    0x40c5f6
	...
  40c602:	add    BYTE PTR [eax],al
  40c604:	pop    esi
  40c605:	int3   
  40c606:	adc    BYTE PTR [ebp-0x76],0x3
  40c60a:	cmp    eax,0x78
  40c60d:	out    0x84,al
  40c60f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c610:	jp     0x40c615
  40c612:	add    BYTE PTR [ebx+0x3f7ed7df],cl
  40c618:	arpl   si,bx
  40c61a:	std    
  40c61b:	or     ebx,0xffffffdd
  40c61e:	add    al,BYTE PTR [eax]
  40c620:	sti    
  40c621:	enter  0x412d,0x63
  40c625:	(bad)  
  40c626:	fidivr DWORD PTR [ecx]
  40c628:	lods   eax,DWORD PTR ds:[esi]
  40c629:	fadd   QWORD PTR [edx]
  40c62b:	or     esp,DWORD PTR [ebx]
  40c62d:	jno    0x40c6a5
  40c62f:	dec    esi
  40c631:	in     al,0x5b
  40c633:	jmp    FWORD PTR [esp+ebx*8+0x2]
  40c637:	jmp    FWORD PTR [esi+0x7b825bcc]
  40c63d:	sbb    eax,0xff7b6804
  40c642:	inc    edx
  40c643:	add    BYTE PTR [esp+edx*8-0x239caace],dh
  40c64a:	idiv   DWORD PTR [edi+0x74ed1497]
  40c650:	or     edx,DWORD PTR [ebx]
  40c652:	add    ebp,DWORD PTR [eax+0x5e]
  40c655:	mov    DWORD PTR [ecx+0x0],0x5536848c
  40c65c:	arpl   sp,bx
  40c65e:	jg     0x40c657
  40c660:	(bad)  
  40c661:	jmp    0x6c97c59b
  40c666:	in     eax,dx
  40c667:	je     0x40c669
	...
  40c675:	add    BYTE PTR [eax],al
  40c677:	iret   
  40c678:	test   cl,ch
  40c67a:	test   esp,ecx
  40c67c:	push   edi
  40c67d:	push   esp
  40c67e:	mov    esi,DWORD PTR [ebx+0x797ffb53]
  40c684:	div    DWORD PTR [esi+0x3]
  40c687:	popf   
  40c688:	fimul  DWORD PTR [esi+0x42]
  40c68b:	pop    eax
  40c68c:	sub    bh,BYTE PTR [eax+0x5]
  40c68f:	jecxz  0x40c693
  40c691:	add    al,0x75
  40c693:	lea    esp,[edi]
  40c695:	ja     0x40c6a7
  40c697:	xor    ebp,DWORD PTR [edi]
  40c699:	ja     0x40c6a3
  40c69b:	jnp    0x40c6bc
  40c69d:	out    dx,al
  40c69e:	inc    BYTE PTR [ebp+eax*1-0x191fceef]
  40c6a5:	sbb    eax,0x9be666d9
  40c6aa:	adc    ebp,DWORD PTR [eax+esi*2+0x19]
  40c6ae:	in     eax,dx
  40c6af:	out    dx,eax
  40c6b0:	cld    
  40c6b1:	adc    BYTE PTR [edx-0x100219a2],dh
  40c6b7:	xchg   ecx,eax
  40c6b8:	lds    ebp,FWORD PTR [edi]
  40c6ba:	in     eax,dx
  40c6bb:	dec    ebp
  40c6bc:	out    0xed,al
  40c6be:	icebp  
  40c6bf:	imul   BYTE PTR [esi+ebp*8]
  40c6c2:	cld    
  40c6c3:	out    0x5c,eax
  40c6c5:	fsubp  st(4),st
  40c6c7:	xor    eax,0x44f85be6
  40c6cc:	cld    
  40c6cd:	imul   ebp,esp,0xf43be625
  40c6d3:	add    al,0x4
  40c6d5:	push   0xffffffec
  40c6d7:	adc    eax,0xec3be6
	...
  40c6e8:	add    BYTE PTR [eax],al
  40c6ea:	add    al,0xec
  40c6ec:	push   0xffffffec
  40c6ee:	add    eax,0x4f01be6
  40c6f3:	hlt    
  40c6f4:	push   0xffffffec
  40c6f6:	cmc    
  40c6f7:	in     eax,0x1b
  40c6f9:	adc    al,0xec
  40c6fb:	outs   dx,DWORD PTR ds:[esi]
  40c6fc:	fucomp st(4)
  40c6fe:	outs   dx,DWORD PTR ds:[esi]
  40c6ff:	std    
  40c700:	nop
  40c701:	jno    0x40c6e0
  40c703:	in     eax,0x7d
  40c705:	dec    esp
  40c706:	stos   BYTE PTR es:[edi],al
  40c707:	ret    0x3e4
  40c70a:	ss jp  0x40c789
  40c70d:	and    BYTE PTR [eax+0x577665dc],0xe6
  40c714:	rcl    DWORD PTR [ebx],cl
  40c716:	retf   
  40c717:	pop    ebx
  40c718:	mov    esp,0x28fa6303
  40c71d:	ja     0x40c72b
  40c71f:	pop    ebx
  40c720:	jmp    0xa8671580
  40c725:	add    edx,DWORD PTR [edi+ebp*2+0x707fd900]
  40c72c:	or     al,0x41
  40c72e:	mov    DWORD PTR [eax-0x5a84d902],0x5510a873
  40c738:	call   0xff27b3d9
  40c73d:	loop   0x40c6df
  40c73f:	jno    0x40c772
  40c741:	jo     0x40c6e8
  40c743:	in     eax,dx
  40c744:	imul   esp,ebx,0xf685f238
  40c74a:	cmp    BYTE PTR [eax],dl
  40c74c:	shl    BYTE PTR [ebp+0x0],0x0
	...
  40c75c:	add    BYTE PTR [ebx-0x1c],bl
  40c75f:	je     0x40c762
  40c761:	xchg   edi,eax
  40c762:	in     eax,dx
  40c763:	and    DWORD PTR [edi+0x48],0xffffffe4
  40c767:	dec    edi
  40c768:	(bad)  
  40c769:	mov    dl,0xed
  40c76b:	dec    edi
  40c76c:	into   
  40c76d:	mov    dl,0xd
  40c76f:	call   0xff24d086
  40c774:	ror    DWORD PTR [eax-0x7490179],1
  40c77a:	pop    ecx
  40c77b:	call   0xfec85841
  40c780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c781:	pop    ds
  40c782:	push   edi
  40c783:	sbb    BYTE PTR [esi-0x1eff92f8],0x60
  40c78a:	add    eax,0xe3dd0ee8
  40c78f:	(bad)  
  40c790:	jo     0x40c7b4
  40c792:	fisttp QWORD PTR [esp-0x300ab35]
  40c799:	jo     0x40c77f
  40c79b:	je     0x40c77a
  40c79d:	test   al,0x9a
  40c79f:	push   ebx
  40c7a0:	jmp    0xd500d805
  40c7a5:	xor    ah,cl
  40c7a7:	inc    esp
  40c7a8:	pop    ecx
  40c7a9:	addr16 add eax,0x49a1e900
  40c7af:	hlt    
  40c7b0:	add    BYTE PTR ds:0xb0000008,ah
  40c7b6:	or     BYTE PTR [edx+0x0],ch
  40c7b9:	mov    al,ds:0x27006a08
  40c7be:	inc    esi
  40c7bf:	hlt    
  40c7c0:	push   eax
	...
  40c7cd:	add    BYTE PTR [eax],al
  40c7cf:	add    BYTE PTR [ebp+0x56],al
  40c7d2:	clc    
  40c7d3:	dec    edi
  40c7d5:	fdivr  st,st(5)
  40c7d7:	jne    0x40c82f
  40c7d9:	ror    DWORD PTR [esi+0xb087a54],0xc0
  40c7e0:	fimul  WORD PTR [edx]
  40c7e2:	jmp    0x40c81e
  40c7e4:	xacquire xchg DWORD PTR [esi],esp
  40c7e7:	inc    ecx
  40c7e8:	cmp    ch,bh
  40c7ea:	jae    0x40c7fc
  40c7ec:	bound  edx,QWORD PTR [edi-0x10ba007d]
  40c7f2:	jae    0x40c7ec
  40c7f4:	jp     0x40c7b7
  40c7f6:	inc    DWORD PTR [ebp+0x4587ef15]
  40c7fc:	out    0xee,al
  40c7fe:	jae    0x40c818
  40c800:	and    eax,0x4fff1455
  40c805:	mov    ebp,0xef0675fd
  40c80a:	jae    0x40c814
  40c80c:	and    dl,BYTE PTR [ecx]
  40c80e:	(bad)  
  40c80f:	inc    ebp
  40c811:	out    dx,al
  40c812:	jae    0x40c800
  40c814:	sar    BYTE PTR [esi-0x112a0081],cl
  40c81a:	inc    ebx
  40c81b:	lock loope 0x40c7ac
  40c81e:	std    
  40c81f:	jne    0x40c807
  40c821:	mov    edi,0x7ca543a
  40c826:	push   DWORD PTR [ebp+0x52]
  40c829:	rcr    al,0x81
  40c82c:	xor    eax,0xbec2c7ef
  40c831:	pop    es
  40c832:	push   ebp
  40c833:	mov    eax,DWORD PTR [eax]
	...
  40c841:	add    BYTE PTR [eax],al
  40c843:	es mov edx,eax
  40c846:	hlt    
  40c847:	arpl   WORD PTR [edx+ebp*8],di
  40c84a:	(bad)  
  40c84b:	cmp    esi,ebp
  40c84d:	pop    esp
  40c84e:	and    al,0x9c
  40c850:	mov    al,ds:0xa39ae7fa
  40c855:	jmp    0xe6f1a358
  40c85a:	(bad)  
  40c85b:	pop    esi
  40c85c:	out    dx,al
  40c85d:	sub    DWORD PTR [ecx+0x63],eax
  40c860:	out    dx,al
  40c861:	add    al,BYTE PTR [eax]
  40c863:	arpl   WORD PTR [ecx-0x80],si
  40c866:	imul   BYTE PTR [ebp-0x6]
  40c869:	jmp    0x42ac3bd
  40c86e:	add    BYTE PTR [ebx-0xc],ah
  40c871:	jne    0x40c8c6
  40c873:	arpl   sp,bp
  40c875:	pop    edx
  40c876:	(bad)  
  40c877:	mov    WORD PTR [ebp-0x4bfa97fe],gs
  40c87d:	inc    ebx
  40c87e:	add    bl,cl
  40c880:	les    ebp,FWORD PTR [eax]
  40c882:	inc    ecx
  40c883:	arpl   bx,ax
  40c885:	cs (bad) 
  40c888:	sub    eax,0xe4aeff04
  40c88d:	fisub  DWORD PTR [edi+0x67e8cc1d]
  40c893:	sbb    eax,0x7b0041e4
  40c898:	pop    edx
  40c899:	sub    DWORD PTR [ecx+0x63],eax
  40c89c:	inc    esp
  40c89d:	int3   
  40c89e:	mov    ds:0x63025aec,al
  40c8a4:	in     al,dx
  40c8a5:	cmp    dh,0x0
	...
  40c8b4:	add    BYTE PTR [eax],al
  40c8b6:	jbe    0x40c89c
  40c8b8:	fimul  DWORD PTR [ebx-0x73176c1b]
  40c8be:	out    0x63,al
  40c8c0:	jmp    0x3015:0xdbfcd4fe
  40c8c7:	in     al,dx
  40c8c8:	add    bh,bh
  40c8ca:	dec    esi
  40c8cb:	jo     0x40c8b6
  40c8cd:	je     0x40c93a
  40c8cf:	add    eax,0xe236d351
  40c8d4:	pop    ebp
  40c8d5:	mov    ebx,0x4ee909a2
  40c8da:	fdiv   st,st(1)
  40c8dc:	rcl    BYTE PTR [bx+si+0x45e3],0xe9
  40c8e2:	or     al,BYTE PTR ds:0x588c1ed3
  40c8e8:	loope  0x40c8c5
  40c8ea:	adc    ah,BYTE PTR [ebx+0x2e]
  40c8ed:	jmp    0x5e6611dd
  40c8f2:	pop    ecx
  40c8f3:	in     eax,dx
  40c8f4:	popf   
  40c8f5:	jle    0x40c964
  40c8f7:	loop   0x40c8da
  40c8f9:	ret    
  40c8fa:	lock sub BYTE PTR [ecx-0x16bb623f],al
  40c901:	push   ebx
  40c902:	dec    ebx
  40c903:	stc    
  40c904:	arpl   cx,bp
  40c906:	dec    ebp
  40c907:	xor    eax,0xf2730381
  40c90c:	cs pop esp
  40c90e:	imul   eax,DWORD PTR [ebp+0x28],0x53e29304
  40c915:	cld    
  40c916:	inc    esp
  40c917:	ror    DWORD PTR [ebx+0xe8],0x0
	...
  40c926:	add    BYTE PTR [eax],al
  40c928:	add    BYTE PTR ds:0x1d82e0ed,ah
  40c92e:	loop   0x40c8dd
  40c930:	(bad)  
  40c931:	adc    al,0x23
  40c933:	sub    BYTE PTR [edx+eiz*2],al
  40c936:	add    eax,0x87d603e9
  40c93b:	mov    ch,0xe9
  40c93d:	std    
  40c93e:	loope  0x40c978
  40c940:	pop    esp
  40c941:	pop    edi
  40c942:	add    al,0xe9
  40c944:	add    edi,ebx
  40c946:	lahf   
  40c947:	cmp    al,BYTE PTR [ebx+eiz*2]
  40c94a:	ins    DWORD PTR es:[edi],dx
  40c94b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c94c:	sub    BYTE PTR [edx],ah
  40c94e:	add    eax,0x4495aa11
  40c953:	jmp    0x6274b3
  40c958:	sub    BYTE PTR [edi-0x1e],bl
  40c95b:	xor    al,0xde
  40c95d:	pop    ecx
  40c95e:	inc    esp
  40c95f:	add    BYTE PTR [esi+0x45],ah
  40c962:	or     eax,0xe2c55be8
  40c967:	inc    cl
  40c969:	mov    ds:0x38e94122,al
  40c96e:	mov    ds:0x6d60a83e,eax
  40c973:	fdivr  st,st(6)
  40c975:	and    DWORD PTR ds:0x560eb68,eax
  40c97b:	sub    BYTE PTR [esi],0xd
  40c97e:	or     eax,0xe27d3fe8
  40c983:	(bad)  
  40c984:	ins    BYTE PTR es:[edi],dx
  40c985:	in     eax,dx
  40c986:	(bad)  
  40c988:	push   ss
  40c989:	jnp    0x40c9dc
  40c98b:	call   0x40ca19
	...
  40c99c:	mov    dh,0x5
  40c99e:	add    BYTE PTR [esi],al
  40c9a0:	vpaddd xmm6,xmm3,XMMWORD PTR [eax+ecx*2-0x17]
  40c9a6:	sbb    dh,BYTE PTR [edi+0x3b]
  40c9a9:	loopne 0x40c973
  40c9ab:	sub    edi,DWORD PTR [ecx+eiz*8]
  40c9ae:	push   ebx
  40c9af:	jb     0x40c9cc
  40c9b1:	xchg   bl,al
  40c9b3:	aad    0x45
  40c9b5:	loopne 0x40c9b5
  40c9b7:	inc    ebx
  40c9b8:	pop    edi
  40c9b9:	imul   esp,DWORD PTR [esi],0xffffffce
  40c9bc:	xchg   edx,eax
  40c9bd:	or     eax,0xe08a85e8
  40c9c2:	(bad)  
  40c9c3:	jo     0x40c967
  40c9c5:	loope  0x40c98d
  40c9c7:	in     al,dx
  40c9c8:	pusha  
  40c9c9:	and    BYTE PTR [ecx-0x17],al
  40c9cc:	pusha  
  40c9cd:	add    eax,0x897be900
  40c9d2:	neg    BYTE PTR [edi+0x14fe004]
  40c9d8:	arpl   WORD PTR [esi],ax
  40c9da:	add    cl,ch
  40c9dc:	mov    eax,0xca00521a
  40c9e1:	add    al,0x68
  40c9e3:	and    eax,0x68004a7a
  40c9e8:	mov    cl,0x44
  40c9ea:	inc    ecx
  40c9eb:	add    BYTE PTR [edx-0x2f],ah
  40c9ee:	cmp    eax,0x33e7ca41
  40c9f3:	rcpps  xmm1,XMMWORD PTR [edx+0x0]
  40c9f7:	inc    DWORD PTR [edi+0x2f6be6dc]
  40c9fd:	call   0x4132ff
	...
  40ca0e:	add    BYTE PTR [edi+0x49],ah
  40ca11:	inc    ecx
  40ca12:	add    BYTE PTR [edx+0x7a41400b],dh
  40ca18:	cmp    al,0xd8
  40ca1a:	aas    
  40ca1b:	retf   
  40ca1c:	add    al,0x68
  40ca1e:	add    cl,BYTE PTR [edx-0x28007ffc]
  40ca24:	fsubr  st(6),st
  40ca26:	dec    edi
  40ca27:	dec    edi
  40ca28:	call   0xf108582a
  40ca2d:	cld    
  40ca2e:	call   FWORD PTR [ebp+0x39]
  40ca31:	call   0x44b60f
  40ca36:	inc    edi
  40ca38:	call   0xbc83403a
  40ca3d:	xchg   edx,eax
  40ca3e:	jge    0x40ca7d
  40ca40:	out    0xc7,eax
  40ca42:	ret    0x446
  40ca45:	push   ebp
  40ca46:	mov    ebx,DWORD PTR [esi]
  40ca48:	mov    edx,eax
  40ca4a:	hlt    
  40ca4b:	sub    al,0xe7
  40ca4d:	std    
  40ca4e:	push   0xa
  40ca50:	ds daa 
  40ca52:	call   DWORD PTR [edi-0x1f]
  40ca55:	out    0x35,al
  40ca57:	dec    edi
  40ca58:	call   0xed88545a
  40ca5d:	lds    eax,FWORD PTR ds:0x41270a
  40ca63:	cli    
  40ca64:	add    eax,DWORD PTR [eax]
  40ca66:	add    BYTE PTR [ebx+0x69],ah
  40ca69:	xor    dh,0xdd
  40ca6c:	mov    fs,ebp
  40ca6e:	dec    edi
  40ca6f:	dec    ebx
  40ca70:	repnz add eax,DWORD PTR [eax]
	...
  40ca7f:	add    BYTE PTR [eax],al
  40ca81:	add    BYTE PTR [ebx+0x76],ah
  40ca84:	xchg   ebp,eax
  40ca85:	push   eax
  40ca86:	arpl   si,bp
  40ca88:	pop    edx
  40ca89:	aas    
  40ca8a:	and    ebp,DWORD PTR ds:0xae7a6804
  40ca90:	inc    ebx
  40ca91:	add    BYTE PTR [ebx],bh
  40ca93:	inc    esi
  40ca94:	es inc ecx
  40ca96:	arpl   WORD PTR [edi],si
  40ca98:	xor    BYTE PTR [edi],cl
  40ca9a:	dec    edx
  40ca9b:	lods   eax,DWORD PTR ds:[esi]
  40ca9c:	add    bh,bh
  40ca9e:	push   cs
  40ca9f:	(bad)  
  40caa0:	(bad)  
  40caa2:	(bad)  
  40caa3:	push   ds
  40caa4:	out    0x67,al
  40caa6:	inc    esp
  40caa7:	scas   al,BYTE PTR es:[edi]
  40caa8:	inc    ebx
  40caa9:	add    BYTE PTR [ebx],cl
  40caab:	aad    0x42
  40caad:	inc    ecx
  40caae:	arpl   WORD PTR [esi-0x36],si
  40cab1:	ds and ch,dh
  40cab4:	pop    edx
  40cab5:	add    ah,BYTE PTR [ebx-0x12]
  40cab8:	cmp    dh,0xd6
  40cabb:	in     al,0xda
  40cabd:	(bad)  
  40cabe:	push   edi
  40cabf:	or     dh,ah
  40cac1:	mov    esi,fs
  40cac3:	xlat   BYTE PTR ds:[ebx]
  40cac4:	jecxz  0x40cac4
  40cac6:	inc    esp
  40cac7:	jge    0x40caa3
  40cac9:	push   ecx
  40caca:	xchg   edx,eax
  40cacb:	in     al,dx
  40cacc:	add    bh,bh
  40cace:	scas   al,BYTE PTR es:[edi]
  40cacf:	call   0xb49c3fb8
  40cad4:	idiv   BYTE PTR [esp-0x48]
  40cad8:	mov    edx,0x4dec67c1
  40cadd:	mov    eax,DWORD PTR [edi]
  40cadf:	outs   dx,BYTE PTR ds:[esi]
  40cae0:	shl    bl,0xd
  40cae3:	mov    al,ds:0x69e4
	...
  40caf4:	add    BYTE PTR [ebx+0x42],ah
  40caf7:	sbb    al,0xff
  40caf9:	jbe    0x40cadf
  40cafb:	fisubr DWORD PTR [ebp-0x1a59fa89]
  40cb01:	fisttp DWORD PTR [eax-0x63]
  40cb04:	mov    ebp,0x42d6055f
  40cb09:	arpl   WORD PTR ds:0x906303e9,ax
  40cb0f:	imul   ebp,ebp,0xffffffce
  40cb12:	fidivr WORD PTR [ebp+0x54]
  40cb15:	cmp    ecx,DWORD PTR [ecx]
  40cb17:	call   0xc12e2e1f
  40cb1c:	push   edx
  40cb1d:	arpl   WORD PTR ds:0x44234cd1,ax
  40cb23:	jmp    0xa885df83
  40cb28:	add    ecx,DWORD PTR [ebx]
  40cb2a:	mov    ebp,0xde63430d
  40cb2f:	sti    
  40cb30:	hlt    
  40cb31:	cmp    eax,DWORD PTR [ecx+ebp*8-0x1c]
  40cb35:	prefetch BYTE PTR [ecx+0x47]
  40cb39:	jg     0x40cb19
  40cb3b:	sub    eax,0xa8450c5c
  40cb40:	add    edi,ebx
  40cb42:	dec    ebp
  40cb43:	test   eax,0x316d6342
  40cb48:	and    eax,0x18105a2
  40cb4d:	arpl   WORD PTR ds:0xdd7e569,ax
  40cb53:	adc    DWORD PTR [ebx+0x47],eax
  40cb56:	fdivrp st(5),st
  40cb58:	jbe    0x40cb5a
	...
  40cb66:	add    BYTE PTR [eax],al
  40cb68:	out    0xd5,eax
  40cb6a:	out    dx,al
  40cb6b:	in     al,0x35
  40cb6d:	xor    eax,0x59cb8d1
  40cb72:	jmp    0xd6227b5b
  40cb77:	outs   dx,BYTE PTR ds:[esi]
  40cb78:	imul   ebp,ebp,0x66
  40cb7b:	addr16 adc al,0xde
  40cb7e:	scas   eax,DWORD PTR es:[edi]
  40cb7f:	shl    DWORD PTR [eax+0x5],0x14
  40cb83:	jns    0x40cb7d
  40cb85:	cmp    edi,0x6c04ac
  40cb8b:	inc    ebx
  40cb8c:	pop    eax
  40cb8d:	fidiv  WORD PTR [ecx+esi*8+0x8]
  40cb91:	sub    al,0x7c
  40cb93:	sahf   
  40cb94:	dec    DWORD PTR [esp+eax*2+0x68053a95]
  40cb9b:	or     eax,0x1100441f
  40cba0:	sub    DWORD PTR [ebp+0x41],eax
  40cba3:	jmp    0xc04fe467
  40cba8:	and    DWORD PTR ds:0xdee179e8,eax
  40cbae:	(bad)  
  40cbaf:	repnz mov al,ds:0x8b91951
  40cbb5:	add    eax,0x65c64600
  40cbba:	mov    WORD PTR [ecx+0x46500521],gs
  40cbc0:	std    
  40cbc1:	or     al,0xe8
  40cbc3:	outs   dx,BYTE PTR ds:[esi]
  40cbc4:	ret    
  40cbc5:	fdivp  st(6),st
  40cbc7:	inc    ecx
  40cbc8:	retf   
  40cbc9:	pop    edi
  40cbca:	jmp    FWORD PTR [esi]
	...
  40cbd8:	add    BYTE PTR [eax],al
  40cbda:	add    BYTE PTR [edx],bl
  40cbdc:	add    eax,0x44206a68
  40cbe1:	add    BYTE PTR [ecx-0x16bebaf6],dl
  40cbe7:	inc    edi
  40cbe8:	adc    cl,BYTE PTR [edi]
  40cbea:	shl    BYTE PTR [ecx-0x1eba17fb],0xdb
  40cbf1:	(bad)  
  40cbf2:	repnz and BYTE PTR [ecx+0x19],bl
  40cbf6:	cdq    
  40cbf7:	cwde   
  40cbf8:	add    eax,0x64fffe00
  40cbfd:	mov    WORD PTR [ecx],gs
  40cbff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc00:	add    eax,0xd8ade50
  40cc05:	call   0xff1c903c
  40cc0a:	shr    eax,0x5a
  40cc0d:	inc    DWORD PTR [eax]
  40cc0f:	and    eax,0xc5fc73e9
  40cc14:	ds or  al,ch
  40cc17:	mov    al,0x3c
  40cc19:	(bad)  
  40cc1a:	inc    ebx
  40cc1c:	ret    
  40cc1d:	add    al,BYTE PTR [eax]
  40cc1f:	das    
  40cc20:	mov    edx,gs
  40cc22:	cmp    DWORD PTR [esi+0x605754e5],0x1
  40cc29:	push   0x2a
  40cc2b:	in     eax,0x3e
  40cc2d:	or     al,ch
  40cc2f:	inc    esi
  40cc30:	cmp    al,0xff
  40cc32:	call   DWORD PTR [ebx+0x4e]
  40cc35:	cld    
  40cc36:	push   0xffffffca
  40cc38:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc3a:	add    BYTE PTR [ebp-0x18],0x9
  40cc3e:	rol    BYTE PTR [eax],0x0
	...
  40cc4d:	add    BYTE PTR [esi-0x4597b127],cl
  40cc53:	or     bh,ch
  40cc55:	mov    esi,0x413f59a2
  40cc5a:	mov    bl,BYTE PTR [eax]
  40cc5c:	push   DWORD PTR [ebp-0x6e]
  40cc5f:	lock bt DWORD PTR [ebp-0x18],eax
  40cc64:	out    0x3d,al
  40cc66:	mov    ah,0xe7
  40cc68:	std    
  40cc69:	mov    ebp,DWORD PTR [edi+0x30]
  40cc6c:	sub    BYTE PTR [ecx+0x7a],al
  40cc6f:	mov    edi,DWORD PTR [ebx]
  40cc71:	sub    al,0x92
  40cc73:	inc    ecx
  40cc74:	add    BYTE PTR [eax+0x45740835],al
  40cc7a:	loop   0x40cc29
  40cc7c:	ds inc ecx
  40cc7e:	cmp    bl,BYTE PTR [edi]
  40cc80:	call   0x48b742
  40cc85:	or     ecx,DWORD PTR [edx+0x62561f3d]
  40cc8b:	loope  0x40cc12
  40cc8d:	inc    DWORD PTR [ebp+0x18]
  40cc90:	push   0xbcd73a00
  40cc95:	push   0x41435563
  40cc9a:	arpl   WORD PTR [esi],bx
  40cc9c:	jecxz  0x40cd12
  40cc9e:	pop    ebx
  40cc9f:	mov    dh,0xb4
  40cca1:	mov    eax,ds:0xfdea9b04
  40cca6:	jle    0x40cc3b
  40cca8:	loope  0x40cc94
  40ccaa:	bound  esp,QWORD PTR [esp+eax*4]
  40ccad:	cmp    eax,0x45ddf963
	...
  40ccbe:	add    BYTE PTR [eax],al
  40ccc0:	add    bh,ah
  40ccc2:	mov    esi,0x72dcb8c2
  40ccc7:	loope  0x40ccc7
  40ccc9:	rcr    DWORD PTR [ebx],1
  40cccb:	sbb    eax,DWORD PTR [edi]
  40cccd:	push   esi
  40ccce:	inc    edi
  40cccf:	loop   0x40cd45
  40ccd1:	(bad)  
  40ccd2:	pop    edx
  40ccd3:	pop    eax
  40ccd4:	or     bl,cl
  40ccd6:	neg    DWORD PTR [esi-0x1]
  40ccd9:	mov    ah,0xa
  40ccdb:	inc    edx
  40ccdc:	leave  
  40ccdd:	mov    eax,ds:0xd85502e9
  40cce2:	dec    ecx
  40cce3:	xchg   bl,al
  40cce5:	lahf   
  40cce6:	fwait
  40cce7:	cmp    DWORD PTR [edx+0x63],ebp
  40ccea:	enter  0xff2d,0x16
  40ccee:	(bad)  
  40ccef:	jmp    0x2688:0xe21b09f9
  40ccf6:	adc    cl,BYTE PTR [esi+0x45064b34]
  40ccfc:	add    al,bl
  40ccfe:	loopne 0x40cd2e
  40cd00:	sub    BYTE PTR [edx],ah
  40cd02:	out    dx,al
  40cd03:	cmp    BYTE PTR [esi],0x63
  40cd06:	js     0x40cd4f
  40cd08:	push   0x43ad1a
  40cd0d:	mov    ah,0xf4
  40cd0f:	and    DWORD PTR [eax+0x63],edx
  40cd12:	in     al,dx
  40cd13:	or     eax,0x38b3b7c0
  40cd18:	call   0xff2330de
  40cd1d:	xchg   ebx,eax
  40cd1e:	add    eax,0xea630451
  40cd23:	sahf   
  40cd24:	ins    BYTE PTR es:[edi],dx
	...
  40cd31:	add    BYTE PTR [eax],al
  40cd33:	add    al,cl
  40cd35:	inc    ebp
  40cd36:	sub    BYTE PTR [ebx+esi*4],al
  40cd39:	ficom  DWORD PTR [ebx+0xc]
  40cd3c:	sti    
  40cd3d:	xor    DWORD PTR [ebx+0x68ee05e1],ecx
  40cd43:	pop    edi
  40cd44:	cld    
  40cd45:	fcmovb st,st(1)
  40cd47:	add    ebx,DWORD PTR [ebp+0x7603ee85]
  40cd4d:	fild   QWORD PTR [esi]
  40cd4f:	loopne 0x40cd82
  40cd51:	lds    ebx,FWORD PTR [edi-0x1f]
  40cd54:	fstp   st(2)
  40cd56:	xchg   ebp,eax
  40cd57:	(bad)  
  40cd58:	push   es
  40cd59:	push   ds
  40cd5a:	out    0x56,al
  40cd5c:	or     bl,bl
  40cd5e:	sti    
  40cd5f:	ffreep st(5)
  40cd61:	push   eax
  40cd62:	icebp  
  40cd63:	jmp    0x40ccfd
  40cd65:	pop    edi
  40cd66:	jbe    0x40cd49
  40cd68:	adc    eax,0x60c6a03b
  40cd6d:	add    eax,0x86b88cbc
  40cd72:	and    al,0xe0
  40cd74:	or     al,BYTE PTR ds:0x50942fc3
  40cd7a:	loope  0x40cd67
  40cd7c:	push   cs
  40cd7d:	pop    edi
  40cd7e:	inc    esi
  40cd7f:	loope  0x40cd5c
  40cd81:	inc    eax
  40cd82:	cmp    eax,0xe96f636e
  40cd87:	imul   ebp,DWORD PTR [edx-0x4fc57bb],0x4
  40cd8e:	jmp    0xb12eb096
  40cd93:	sbb    DWORD PTR [ebp-0x26],0xffffffe1
  40cd97:	ret    
	...
  40cda4:	add    BYTE PTR [eax],al
  40cda6:	add    al,dl
  40cda8:	cli    
  40cda9:	mov    eax,0x5833deb
  40cdae:	loope  0x40cd44
  40cdb0:	ins    DWORD PTR es:[edi],dx
  40cdb1:	jmp    0xffdc19b9
  40cdb6:	and    BYTE PTR [eax],0x1a
  40cdb9:	inc    ecx
  40cdba:	jmp    0xf1b5a82f
  40cdbf:	cmp    ch,ah
  40cdc1:	mov    al,ds:0xce203de
  40cdc6:	push   esp
  40cdc7:	add    bl,bl
  40cdc9:	(bad)  
  40cdca:	push   esp
  40cdcb:	add    ebx,ebx
  40cdcd:	je     0x40cdc0
  40cdcf:	clc    
  40cdd0:	pop    ecx
  40cdd1:	jp     0x40cd91
  40cdd3:	add    ecx,ebp
  40cdd5:	shr    ebp,0x60
  40cdd8:	xor    BYTE PTR [ebx-0x43a1843],cl
  40cdde:	adc    ebx,DWORD PTR [edi+0x6f]
  40cde1:	sub    eax,0xe80d359e
  40cde6:	int    0x36
  40cde8:	(bad)  
  40cdea:	pusha  
  40cdeb:	and    eax,0x60e967d9
  40cdf0:	jmp    0xe941:0x446411bd
  40cdf7:	dec    eax
  40cdf8:	hlt    
  40cdf9:	inc    eax
  40cdfa:	sub    BYTE PTR [edi-0x26],ah
  40cdfd:	je     0x40cdf0
  40cdff:	mov    eax,0x835ea0ed
  40ce04:	fidiv  DWORD PTR [ebp+edx*2-0x7d]
  40ce08:	push   eax
  40ce09:	or     BYTE PTR [ecx+0x0],al
	...
  40ce18:	add    BYTE PTR [eax],al
  40ce1a:	and    eax,0x9946ff5f
  40ce1f:	ret    
  40ce20:	add    ebp,ecx
  40ce22:	xor    eax,0x9c6aeb8e
  40ce27:	(bad)  [ecx-0x17]
  40ce2a:	(bad)  
  40ce2b:	sub    bh,bh
  40ce2d:	pushf  
  40ce2e:	pop    eax
  40ce2f:	in     eax,dx
  40ce30:	call   0x891911d5
  40ce35:	lods   al,BYTE PTR ds:[esi]
  40ce36:	xor    al,0x61
  40ce38:	add    cl,ch
  40ce3a:	push   ebx
  40ce3b:	fwait
  40ce3c:	add    BYTE PTR ds:0x4144,bh
  40ce41:	add    dl,dl
  40ce43:	repz inc eax
  40ce45:	inc    ecx
  40ce46:	dec    edx
  40ce47:	out    0x73,al
  40ce49:	or     BYTE PTR [edx+0x73],ah
  40ce4c:	lahf   
  40ce4d:	(bad)  
  40ce4e:	cmp    eax,0x2d00006a
  40ce53:	js     0x40cebb
  40ce55:	daa    
  40ce56:	dec    ebx
  40ce57:	inc    edx
  40ce58:	add    BYTE PTR [eax+0x6b],ch
  40ce5b:	inc    edx
  40ce5c:	inc    ecx
  40ce5d:	add    BYTE PTR ds:0x80e8083f,bl
  40ce63:	mov    ds:0x3eadfffd,al
  40ce68:	cld    
  40ce69:	push   DWORD PTR [edi]
  40ce6b:	or     eax,ebp
  40ce6d:	repz inc ebx
  40ce6f:	mov    eax,0xe08c9fd
  40ce74:	add    BYTE PTR [ebp+0x41],dl
  40ce77:	aad    0x81
  40ce79:	(bad)  
  40ce7a:	fimul  WORD PTR [ebx+edx*2+0x10]
	...
  40ce8d:	push   ecx
  40ce8e:	shr    DWORD PTR [eax+0x0],cl
  40ce91:	dec    edi
  40ce92:	dec    esi
  40ce93:	cld    
  40ce94:	push   eax
  40ce95:	sub    eax,0xba6a083e
  40ce9a:	mov    bh,0x73
  40ce9c:	adc    BYTE PTR ds:0x4a851c13,bh
  40cea2:	ds daa 
  40cea4:	mov    edx,edi
  40cea6:	mov    eax,0x6e7a6a8e
  40ceab:	add    BYTE PTR [eax+0x1d],ch
  40ceae:	add    al,0x0
  40ceb0:	add    BYTE PTR ds:0x2d6a0c3e,bh
  40ceb6:	mov    eax,0x4a00470
  40cebb:	push   0x0
  40cebd:	push   edx
  40cebe:	stos   BYTE PTR es:[edi],al
  40cebf:	dec    ebx
  40cec0:	add    BYTE PTR [edx+0x54],cl
  40cec3:	(bad)  
  40cec4:	jne    0x40cf29
  40cec6:	bnd jmp 0x40cf28
  40cec9:	popf   
  40ceca:	out    dx,al
  40cecb:	add    cl,cl
  40cecd:	and    edx,edx
  40cecf:	add    dl,BYTE PTR [ebp-0x18]
  40ced2:	or     DWORD PTR [ebx+0x396337c3],eax
  40ced8:	adc    al,0xd8
  40ceda:	mov    ebx,0x28d60068
  40cedf:	loopne 0x40cf30
  40cee1:	sbb    al,0x31
  40cee3:	adc    bh,bh
  40cee5:	mov    fs,esi
  40cee7:	push   0xf8310c00
  40ceec:	(bad)  
  40ceed:	mov    cl,0xf6
  40ceef:	mov    BYTE PTR [edi+0x0],bh
	...
  40cefd:	add    BYTE PTR [eax],al
  40ceff:	add    BYTE PTR [esi-0x1],dh
  40cf02:	mov    dl,BYTE PTR [edi+esi*8+0x3d]
  40cf06:	imul   eax,DWORD PTR [eax],0xff6aee79
  40cf0c:	pusha  
  40cf0d:	out    dx,al
  40cf0e:	add    bh,bh
  40cf10:	push   esi
  40cf11:	fisubr WORD PTR [eax-0x1]
  40cf14:	aam    0xfb
  40cf16:	pop    es
  40cf17:	push   0x63
  40cf19:	add    al,0x4
  40cf1b:	call   0x44e048
  40cf20:	rcl    DWORD PTR [esi+0x58],cl
  40cf23:	cld    
  40cf24:	retf   
  40cf25:	mov    ebx,0xa563004c
  40cf2a:	ror    BYTE PTR [edi],0x63
  40cf2d:	cdq    
  40cf2e:	mov    ebx,ebp
  40cf30:	pushf  
  40cf31:	mov    al,0xa
  40cf33:	dec    DWORD PTR [esi]
  40cf35:	(bad)  
  40cf36:	jmp    0xefe:0xde470b52
  40cf3d:	shr    dl,cl
  40cf3f:	xchg   edi,eax
  40cf40:	cs out dx,al
  40cf42:	add    dl,cl
  40cf44:	sub    DWORD PTR [edx-0x3d],0x1
  40cf48:	adc    esp,DWORD PTR [edi]
  40cf4a:	pop    eax
  40cf4b:	or     al,0x64
  40cf4d:	add    al,0x9c
  40cf4f:	sti    
  40cf50:	inc    esp
  40cf51:	push   esi
  40cf52:	mov    eax,ds:0x9bd755de
  40cf57:	test   DWORD PTR [ebp+0x51],0xfdcfdef9
  40cf5e:	adc    BYTE PTR [ecx-0x45],ah
  40cf61:	(bad)  
  40cf62:	std    
  40cf63:	retf   
	...
  40cf70:	add    BYTE PTR [eax],al
  40cf72:	add    BYTE PTR [edx],ah
  40cf74:	bnd call 0xee2aa7b2
  40cf7a:	push   edi
  40cf7b:	pop    ebx
  40cf7c:	(bad)  
  40cf7d:	pop    ebx
  40cf7e:	cld    
  40cf7f:	add    al,0xfc
  40cf81:	pusha  
  40cf82:	fst    QWORD PTR ds:0xfb105bd7
  40cf88:	mov    BYTE PTR [esp+eax*1],bl
  40cf8b:	arpl   WORD PTR [ebp+0x19],ax
  40cf8e:	fnsave [edi+0x9]
  40cf91:	mov    esi,0xf1ed5b57
  40cf96:	pop    ebx
  40cf97:	in     al,dx
  40cf98:	(bad)  
  40cf99:	lods   eax,DWORD PTR ds:[esi]
  40cf9a:	push   edi
  40cf9b:	dec    edi
  40cf9c:	(bad)  
  40cf9d:	sbb    esi,esp
  40cf9f:	fst    QWORD PTR [eax+0x1]
  40cfa2:	in     al,dx
  40cfa3:	xchg   DWORD PTR [ebp-0x6a],ebx
  40cfa6:	fstp   QWORD PTR [ebx+0x2e03f4c3]
  40cfac:	mov    dl,BYTE PTR [ebx+eax*4-0x22864e60]
  40cfb3:	mov    ch,0xd6
  40cfb5:	sti    
  40cfb6:	sti    
  40cfb7:	fild   WORD PTR [eax-0x295a2018]
  40cfbd:	mov    eax,0x510d17dc
  40cfc2:	mov    esi,0xdd55d696
  40cfc7:	pop    ss
  40cfc8:	std    
  40cfc9:	pop    ebx
  40cfca:	xchg   DWORD PTR [esi+ecx*8-0x29d322bb],eax
  40cfd1:	mov    bl,0xf
  40cfd3:	je     0x40d025
  40cfd5:	add    cl,ah
	...
  40cfe3:	add    BYTE PTR [eax],al
  40cfe5:	add    BYTE PTR [eax-0xe],bh
  40cfe8:	(bad)  
  40cfe9:	xchg   BYTE PTR cs:[eax+eax*1-0x6d],ch
  40cfee:	pusha  
  40cfef:	ins    DWORD PTR es:[edi],dx
  40cff0:	(bad)  
  40cff1:	jmp    0xd167:0x6c8d0560
  40cff8:	dec    BYTE PTR [esi]
  40cffa:	(bad)  
  40cffb:	imul   edi,edi,0x6
  40cffe:	xchg   esp,eax
  40cfff:	cmc    
  40d000:	imul   ebp,ecx,0x5be805ca
  40d006:	xchg   ebx,eax
  40d007:	add    eax,0xe5dc2600
  40d00c:	repnz out 0x3f,al
  40d00f:	push   es
  40d010:	add    cl,ch
  40d012:	pusha  
  40d013:	mov    esi,0xd733dd84
  40d018:	(bad)  
  40d019:	jmp    0x40d07b
  40d01b:	add    eax,0xcde5ae00
  40d020:	repnz mov esi,0xe9fed617
  40d026:	pusha  
  40d027:	mov    esi,0xd713ad84
  40d02c:	(bad)  
  40d02d:	jmp    0x7240d592
  40d032:	(bad)  
  40d033:	std    
  40d034:	mov    bh,bl
  40d036:	cmp    al,BYTE PTR ds:0xd2b0648d
  40d03c:	inc    BYTE PTR [esi-0x727b7790]
  40d042:	xchg   ebx,eax
  40d043:	(bad)  
  40d044:	(bad)  
  40d045:	sbb    esp,ebx
  40d047:	and    bh,0x7a
	...
  40d056:	add    BYTE PTR [eax],al
  40d058:	add    BYTE PTR [edi+0x35664fd6],al
  40d05e:	cmc    
  40d05f:	(bad)  
  40d060:	aam    0x64
  40d062:	(bad)  
  40d063:	je     0x40d046
  40d065:	cli    
  40d066:	add    al,0xff
  40d068:	aam    0x88
  40d06a:	(bad)  
  40d06b:	push   ecx
  40d06c:	add    dh,cl
  40d06e:	test   BYTE PTR [ebx-0x246c618],bh
  40d074:	add    BYTE PTR [ebp+0x7a011a7d],al
  40d07a:	add    DWORD PTR [ebx-0x24a8943],eax
  40d080:	dec    DWORD PTR [edx+0x2]
  40d083:	test   BYTE PTR [edi],cl
  40d085:	cmp    ecx,DWORD PTR [ecx]
  40d087:	add    bh,al
  40d089:	mov    edi,0x65fff19c
  40d08e:	or     BYTE PTR [eax],al
  40d090:	out    dx,eax
  40d091:	je     0x40d0f3
  40d093:	inc    eax
  40d094:	inc    ecx
  40d095:	sti    
  40d096:	or     BYTE PTR [ebp-0x24ac57b],cl
  40d09c:	call   FWORD PTR [edx-0x1f]
  40d09f:	adc    cl,BYTE PTR [edx+ecx*1+0x9]
  40d0a3:	test   eax,eax
  40d0a5:	scas   al,BYTE PTR es:[edi]
  40d0a6:	dec    ebx
  40d0a7:	mov    DWORD PTR [ebp-0x24332],0xbeef090b
  40d0b1:	xchg   edx,eax
  40d0b2:	sbb    eax,DWORD PTR [ecx+0x41]
  40d0b5:	cli    
  40d0b6:	jge    0x40d03b
  40d0b8:	add    BYTE PTR [esi+0x50fdb0],dh
	...
  40d0ca:	add    BYTE PTR [eax],al
  40d0cc:	repnz mov dh,0x49
  40d0cf:	add    dl,cl
  40d0d1:	test   DWORD PTR [esi-0x7c38668c],edi
  40d0d7:	aam    0xe9
  40d0d9:	mov    al,0xfd
  40d0db:	add    cl,dl
  40d0dd:	fistp  QWORD PTR [eax+ebp*2+0x414a50]
  40d0e4:	inc    edi
  40d0e5:	xchg   dh,bh
  40d0e7:	sti    
  40d0e8:	xor    eax,0x5ce84eb0
  40d0ed:	inc    esp
  40d0ee:	add    BYTE PTR [eax],al
  40d0f0:	dec    eax
  40d0f2:	or     eax,0x37f6385
  40d0f7:	add    BYTE PTR [ebx-0x3a],ah
  40d0fa:	pop    eax
  40d0fb:	inc    ecx
  40d0fc:	and    bl,dh
  40d0fe:	xchg   DWORD PTR [ebx+eiz*2+0x13fedb1a],eax
  40d105:	inc    esi
  40d106:	mov    bl,0x4b
  40d108:	arpl   si,bx
  40d10a:	or     eax,0x856dd7c0
  40d10f:	cmp    al,0x2a
  40d111:	popf   
  40d112:	inc    ebx
  40d113:	add    BYTE PTR [ebx-0x15],ah
  40d116:	jle    0x40d098
  40d118:	arpl   si,bx
  40d11a:	add    bh,bh
  40d11c:	div    ch
  40d11e:	(bad)  
  40d11f:	(bad)  
  40d120:	xor    al,0x63
  40d122:	sbb    edi,0xfed9db30
  40d128:	out    dx,al
  40d129:	rcl    ebp,1
  40d12b:	(bad)  
  40d12c:	sbb    al,0x5b
  40d12e:	and    bl,0x0
	...
  40d13d:	add    BYTE PTR [eax],al
  40d13f:	adc    BYTE PTR [ebx-0x6a197327],dh
  40d145:	aad    0xfe
  40d147:	add    al,0xe
  40d149:	outs   dx,BYTE PTR ds:[esi]
  40d14a:	add    DWORD PTR [ecx-0x76ff9322],ecx
  40d150:	fisubr WORD PTR [eax+eax*1-0x22]
  40d154:	pusha  
  40d155:	jecxz  0x40d149
  40d157:	in     al,0xa2
  40d159:	xor    bh,bh
  40d15b:	jbe    0x40d0f2
  40d15d:	inc    ebx
  40d15e:	inc    ecx
  40d15f:	arpl   di,dx
  40d161:	ret    0x2473
  40d164:	jnp    0x40d1b5
  40d166:	adc    al,0xc4
  40d168:	cmp    BYTE PTR [ebx-0x2675430e],bh
  40d16e:	mov    ah,0x97
  40d170:	dec    esi
  40d171:	(bad)  
  40d173:	lods   al,BYTE PTR ds:[esi]
  40d174:	shl    dl,1
  40d176:	(bad)  
  40d177:	out    dx,al
  40d178:	jns    0x40d14f
  40d17a:	(bad)  
  40d17b:	pushf  
  40d17c:	add    al,0x51
  40d17e:	ficom  WORD PTR [edi-0x2825a22d]
  40d184:	mov    al,0x59
  40d186:	fiadd  DWORD PTR [ebp+0x634d2edc]
  40d18c:	add    eax,0x5975f852
  40d191:	aad    0xda
  40d193:	mov    bh,0xdc
  40d195:	cmp    edx,ebx
  40d197:	shl    DWORD PTR gs:[ebx-0x19],cl
  40d19b:	push   ecx
  40d19c:	shl    DWORD PTR ds:0x1df5cfda,cl
  40d1a2:	nop
	...
  40d1af:	add    BYTE PTR [eax],al
  40d1b1:	add    BYTE PTR [eax],dh
  40d1b3:	xlat   BYTE PTR ds:[ebx]
  40d1b4:	adc    eax,0xbb53cda
  40d1b9:	fidivr DWORD PTR ds:0x31e73bd3
  40d1bf:	sar    ebp,cl
  40d1c1:	jmp    0xc81a:0x3e93f10
  40d1c8:	aam    0x3
  40d1ca:	mov    dh,0x7e
  40d1cc:	aam    0x85
  40d1ce:	and    BYTE PTR [esi-0x64872cb],cl
  40d1d4:	popa   
  40d1d5:	not    bh
  40d1d7:	dec    eax
  40d1d8:	xchg   ecx,eax
  40d1d9:	xor    al,0x89
  40d1db:	add    eax,0xd2674fc6
  40d1e0:	xor    ecx,DWORD PTR [ecx+edi*2]
  40d1e3:	add    eax,0xd24f4fb6
  40d1e8:	sbb    dh,BYTE PTR [eax]
  40d1ea:	out    0xc5,al
  40d1ec:	sbb    esi,DWORD PTR [eax]
  40d1ee:	pushf  
  40d1ef:	dec    eax
  40d1f0:	pop    ebp
  40d1f1:	add    al,0x63
  40d1f3:	add    eax,0x8d2f8ce9
  40d1f8:	popa   
  40d1f9:	imul   bh
  40d1fb:	dec    eax
  40d1fc:	inc    ebp
  40d1fd:	xor    al,0xe6
  40d1ff:	dec    eax
  40d200:	test   eax,0xfff53934
  40d205:	jne    0x40d21b
  40d207:	(bad)  
  40d208:	(bad)  
  40d209:	sbb    ebp,DWORD PTR [ebx-0x7a]
  40d20c:	jl     0x40d1b3
  40d20e:	pop    edi
  40d20f:	pop    ecx
  40d210:	daa    
  40d211:	ins    BYTE PTR es:[edi],dx
  40d212:	xor    al,0xc5
  40d214:	(bad)  
  40d215:	fadd   QWORD PTR [eax]
	...
  40d223:	add    BYTE PTR [eax],al
  40d225:	je     0x40d1fa
  40d227:	je     0x40d222
  40d229:	fwait
  40d22a:	sbb    edi,edi
  40d22c:	mov    esp,0xf174d25c
  40d231:	js     0x40d1e9
  40d233:	cld    
  40d234:	ss mov dl,bl
  40d237:	ss inc ecx
  40d239:	les    edi,FWORD PTR [esi]
  40d23b:	add    cl,ch
  40d23d:	(bad)  
  40d23f:	add    ebx,DWORD PTR [esi]
  40d241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d242:	xchg   ecx,eax
  40d243:	je     0x40d27c
  40d245:	ss fwait
  40d247:	mov    dh,BYTE PTR [eax+ebx*8-0x5bf9ee82]
  40d24e:	(bad)  
  40d24f:	(bad)  
  40d250:	fwait
  40d251:	pop    eax
  40d252:	xor    cl,cl
  40d254:	sub    ebp,DWORD PTR [edi]
  40d256:	rcl    BYTE PTR [ebx+0x62],cl
  40d259:	or     eax,DWORD PTR [ebp-0x2cc51e3d]
  40d25f:	(bad)  
  40d260:	fidivr WORD PTR ss:[eax]
  40d263:	adc    BYTE PTR [edx+0xe],ah
  40d266:	add    DWORD PTR [ecx+edx*8+0x19fed31a],0x34ff0585
  40d271:	pop    edi
  40d272:	pop    edi
  40d273:	add    BYTE PTR [esi+0x1bfef595],dh
  40d279:	jnp    0x40d203
  40d27b:	mov    edi,0x84ca421c
  40d280:	popf   
  40d281:	stos   BYTE PTR es:[edi],al
  40d282:	sar    dh,cl
  40d284:	jmp    0x6240d7e9
	...
  40d295:	add    BYTE PTR [eax],al
  40d297:	add    BYTE PTR [ebp-0x26],cl
  40d29a:	std    
  40d29b:	add    ch,bl
  40d29d:	lods   al,BYTE PTR ds:[esi]
  40d29e:	mov    DWORD PTR [edx],edx
  40d2a0:	aas    
  40d2a1:	push   ebx
  40d2a2:	sti    
  40d2a3:	(bad)  
  40d2a4:	sub    eax,0x78d4ead
  40d2a9:	push   es
  40d2aa:	(bad)  
  40d2ab:	(bad)  
  40d2ac:	std    
  40d2ad:	adc    eax,0x832d106a
  40d2b2:	idiv   dh
  40d2b4:	sub    eax,0x9e52fdad
  40d2b9:	mov    BYTE PTR [ebx-0x252e304],bh
  40d2bf:	add    BYTE PTR [esi+0x7abd8d27],dh
  40d2c5:	lods   al,BYTE PTR ds:[esi]
  40d2c6:	std    
  40d2c7:	dec    DWORD PTR [ebp-0x800efc1]
  40d2cd:	or     BYTE PTR [edi-0x1],dl
  40d2d0:	idiv   esp
  40d2d2:	out    0x13,eax
  40d2d4:	ins    DWORD PTR es:[edi],dx
  40d2d5:	lods   eax,DWORD PTR ds:[esi]
  40d2d6:	std    
  40d2d7:	add    DWORD PTR [ebp+0x5e8dfdd4],0xffffffae
  40d2de:	std    
  40d2df:	push   DWORD PTR [edi-0x3e55161a]
  40d2e5:	pop    edi
  40d2e6:	idiv   esi
  40d2e8:	or     eax,0xfd1289b9
  40d2ed:	jbe    0x40d2e5
  40d2ef:	(bad)  
  40d2f0:	sub    eax,0x252fdb9
  40d2f5:	sbb    cl,cl
  40d2f7:	ret    0x51e
  40d2fa:	push   ebp
  40d2fb:	mov    eax,DWORD PTR [eax]
	...
  40d309:	add    BYTE PTR [eax],al
  40d30b:	push   cs
  40d30c:	mov    eax,edx
  40d30e:	clc    
  40d30f:	lods   al,BYTE PTR ds:[esi]
  40d310:	mov    eax,0x168157fd
  40d315:	or     al,0x8b
  40d317:	mov    eax,0xfcf8837d
  40d31c:	mov    eax,0x97050fd
  40d321:	push   0x0
  40d323:	arpl   WORD PTR [edi+0x50],si
  40d326:	or     al,0xbc
  40d328:	or     al,0x1c
  40d32a:	test   DWORD PTR [ebx+0x26c735d1],esp
  40d330:	push   edx
  40d331:	add    al,0x0
  40d333:	arpl   si,bx
  40d335:	jb     0x40d2c1
  40d337:	not    BYTE PTR [esi-0x2a]
  40d33a:	(bad)  
  40d33b:	xchg   esp,eax
  40d33c:	push   ebx
  40d33d:	repnz mov WORD PTR [esi],fs
  40d340:	xor    dh,BYTE PTR [ecx*4-0x129c522]
  40d347:	jl     0x40d2d7
  40d349:	push   0xdc517410
  40d34e:	std    
  40d34f:	ins    BYTE PTR es:[edi],dx
  40d350:	(bad)  
  40d352:	push   ecx
  40d353:	push   edi
  40d354:	cmp    DWORD PTR cs:[edi+ebx*2-0x22],0x72
  40d35a:	jae    0x40d2df
  40d35c:	pop    ecx
  40d35d:	cdq    
  40d35e:	sti    
  40d35f:	dec    ebp
  40d360:	out    dx,eax
  40d361:	(bad)  
  40d362:	pop    DWORD PTR [ecx+esi*2+0x6]
  40d366:	push   DWORD PTR [esi+0x6be82de6]
  40d36c:	pop    es
  40d36d:	xlat   BYTE PTR ds:[ebx]
  40d36e:	inc    BYTE PTR [eax]
	...
  40d37c:	add    BYTE PTR [eax],al
  40d37e:	loopne 0x40d3a6
  40d380:	hlt    
  40d381:	(bad)  
  40d382:	and    al,0xa9
  40d384:	(bad)  
  40d385:	(bad)  
  40d386:	xchg   esi,eax
  40d387:	add    eax,0x52d1ea74
  40d38c:	jo     0x40d385
  40d38e:	or     eax,0x718ad5af
  40d393:	mov    bh,0x8f
  40d395:	idiv   ebp
  40d397:	mov    esi,0xd691fed5
  40d39c:	xor    eax,0x2d621c9
  40d3a1:	push   ebp
  40d3a2:	fmul   st,st(1)
  40d3a4:	add    ebx,0x74d6f813
  40d3aa:	addr16 add eax,0x51bcc91
  40d3b0:	jmp    0xec9a76bf
  40d3b5:	xor    eax,0x3dcc2aa
  40d3ba:	xchg   edx,eax
  40d3bb:	in     al,0x69
  40d3bd:	ret    
  40d3be:	bound  edi,QWORD PTR [eax+ebx*4-0x78]
  40d3c2:	pop    ds
  40d3c3:	loope  0x40d3dd
  40d3c5:	xor    bl,BYTE PTR [ecx+ebx*2+0x7f00ebdd]
  40d3cc:	gs (bad) 
  40d3ce:	cmp    DWORD PTR [esi-0x2450b791],edi
  40d3d4:	loop   0x40d3e3
  40d3d6:	ins    BYTE PTR es:[edi],dx
  40d3d7:	xchg   edi,eax
  40d3d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3d9:	sub    al,0x87
  40d3db:	add    eax,0x8423afac
  40d3e0:	aas    
  40d3e1:	out    dx,eax
	...
  40d3ee:	add    BYTE PTR [eax],al
  40d3f0:	add    dl,dh
  40d3f2:	aad    0x1
  40d3f4:	into   
  40d3f5:	jmp    0x40d44f
  40d3f7:	sbb    edx,ebp
  40d3f9:	jl     0x40d412
  40d3fb:	test   BYTE PTR [ebp+0x330d1fa0],0xbb
  40d402:	or     BYTE PTR [ebx-0x5c7f9cbc],ch
  40d408:	mov    ebx,0x4c14dda4
  40d40d:	arpl   WORD PTR ds:0x8058bf6a,ax
  40d413:	stos   DWORD PTR es:[edi],eax
  40d414:	mov    ebx,0xb373ceac
  40d419:	cld    
  40d41a:	jge    0x40d47d
  40d41c:	aad    0xd
  40d41e:	jge    0x40d443
  40d420:	mov    ah,0x9e
  40d422:	adc    dh,0xf0
  40d425:	jb     0x40d3d9
  40d427:	addr16 pop edi
  40d429:	bswap  edi
  40d42b:	call   0x340f3733
  40d430:	mov    al,0x7c
  40d432:	or     BYTE PTR [eax],al
  40d434:	sub    esp,DWORD PTR [eax]
  40d436:	add    eax,0x3f17248d
  40d43b:	call   0x45eca5
  40d440:	push   0xffffffa3
  40d442:	cli    
  40d443:	mov    WORD PTR [edi+edi*8],gs
  40d446:	notrack call DWORD PTR [edi+ebp*8]
  40d44a:	out    0x57,al
  40d44c:	add    dl,BYTE PTR [esi-0x10db7731]
  40d452:	add    DWORD PTR [ebp+eiz*4+0x0],0x0
	...
  40d462:	add    BYTE PTR [eax],al
  40d464:	push   edi
  40d465:	into   
  40d466:	je     0x40d401
  40d468:	pop    es
  40d469:	sti    
  40d46a:	inc    ecx
  40d46b:	test   al,0x60
  40d46d:	into   
  40d46e:	xor    al,0xee
  40d470:	cmp    DWORD PTR [eax+eax*1+0x41],eax
  40d474:	add    cl,BYTE PTR [ebx-0x1]
  40d477:	dec    esi
  40d478:	push   0xffffffc5
  40d47a:	push   cs
  40d47b:	ins    DWORD PTR es:[edi],dx
  40d47c:	dec    ch
  40d47e:	(bad)  
  40d47f:	jmp    0x6b091e5d
  40d484:	mov    ah,0xc1
  40d486:	(bad)  
  40d487:	fst    st(4)
  40d489:	test   bh,bh
  40d48b:	call   0xedb5a2f0
  40d490:	cmp    BYTE PTR [edx],al
  40d492:	dec    ecx
  40d493:	jmp    0x6b2088f8
  40d498:	pop    ds
  40d499:	add    al,0x89
  40d49b:	lods   al,BYTE PTR ds:[esi]
  40d49c:	ror    dh,1
  40d49e:	je     0x40d48d
  40d4a0:	fisttp WORD PTR [eax-0x4c]
  40d4a3:	imul   BYTE PTR [ebp+0x20a48ec1]
  40d4a9:	iret   
  40d4aa:	je     0x40d45d
  40d4ac:	out    0x48,eax
  40d4ae:	les    esp,FWORD PTR [esi-0x17006ebb]
  40d4b4:	pusha  
  40d4b5:	add    eax,0x26100c83
  40d4ba:	inc    ecx
  40d4bb:	add    dl,bh
  40d4bd:	add    DWORD PTR [eax+edx*2+0x77],esi
  40d4c1:	(bad)  
  40d4c3:	push   eax
  40d4c4:	and    BYTE PTR [edx],al
  40d4c6:	push   0x0
	...
  40d4d4:	add    BYTE PTR [eax],al
  40d4d6:	add    BYTE PTR [eax],ah
  40d4d8:	or     DWORD PTR [ebp+0x6a122a45],ecx
  40d4de:	add    BYTE PTR [edi],dh
  40d4e0:	xadd   BYTE PTR [eax-0x2b],dl
  40d4e4:	fsubp  st(7),st
  40d4e6:	sub    BYTE PTR [ebx-0x513ff4f7],cl
  40d4ec:	repz cmp BYTE PTR [ebp+0x66],0x2
  40d4f1:	je     0x40d51f
  40d4f3:	or     DWORD PTR [edi],esi
  40d4f5:	adc    BYTE PTR [eax],al
  40d4f7:	mov    ?,ecx
  40d4f9:	mov    dl,BYTE PTR [ebp-0x76]
  40d4fc:	das    
  40d4fd:	mov    DWORD PTR [edx],0x75ff0965
  40d503:	cmp    BYTE PTR [eax+0x3f25b873],0xbc
  40d50a:	jmp    FWORD PTR [edi+0x7a036805]
  40d510:	call   0xaeefbdd1
  40d515:	std    
  40d516:	inc    DWORD PTR [ebp-0x6f1743c5]
  40d51c:	or     DWORD PTR [eax],eax
  40d51e:	add    BYTE PTR [ebp+0x3b],ah
  40d521:	enter  0xa6e8,0x3a
  40d525:	(bad)  
  40d526:	jmp    DWORD PTR [ebp+0x3b]
  40d529:	shr    al,1
  40d52b:	sahf   
  40d52c:	cmp    bh,bh
  40d52e:	inc    esp
  40d530:	mov    edi,0x1c0a0cc0
  40d535:	mov    ebp,esp
  40d537:	mov    DWORD PTR [esi+eax*8+0x8d],ecx
	...
  40d54a:	aas    
  40d54b:	mov    ch,0x4e
  40d54d:	push   0x41431b
  40d552:	arpl   WORD PTR [eax+0x9],cx
  40d555:	push   0x63
  40d557:	inc    esi
  40d558:	mov    ch,0x40
  40d55a:	mov    ds:0x9bbddade,al
  40d55f:	fiadd  WORD PTR [edx]
  40d561:	test   DWORD PTR [ebx+0x63bf7ae3],esp
  40d567:	fiadd  WORD PTR [edx]
  40d569:	mov    esi,DWORD PTR [esi]
  40d56b:	mov    ds:0x21d6117e,al
  40d570:	int3   
  40d571:	dec    edi
  40d572:	mov    esp,0x11fecfe9
  40d577:	fiadd  DWORD PTR [edi+0x72565cbf]
  40d57d:	jmp    DWORD PTR [esi+ebx*8-0x2164837b]
  40d584:	add    DWORD PTR [edi+ebp*8-0x5bfffd22],eax
  40d58b:	cdq    
  40d58c:	mov    dh,0xff
  40d58e:	test   dh,bl
  40d590:	add    al,bh
  40d592:	es push ss
  40d594:	add    al,0x0
  40d596:	arpl   si,bx
  40d598:	leave  
  40d599:	inc    esp
  40d59a:	xchg   ebx,eax
  40d59b:	test   BYTE PTR [ebx],0x0
  40d59e:	arpl   WORD PTR [ebx],sp
  40d5a0:	dec    ecx
  40d5a1:	int3   
  40d5a2:	arpl   si,bx
  40d5a4:	add    al,BYTE PTR [eax]
  40d5a6:	call   0x71cba01b
  40d5ab:	push   ecx
  40d5ac:	dec    ecx
  40d5ad:	int3   
	...
  40d5ba:	add    BYTE PTR [eax],al
  40d5bc:	add    BYTE PTR [ebx-0x6c2fb6a7],dh
  40d5c2:	mov    BYTE PTR [ebx],al
  40d5c4:	jmp    FWORD PTR [esi+0x5f51d2f6]
  40d5ca:	xlat   BYTE PTR ds:[ebx]
  40d5cb:	ret    0x8f74
  40d5ce:	pop    edi
  40d5cf:	push   ecx
  40d5d0:	int3   
  40d5d1:	bound  ecx,QWORD PTR [ecx+0x41]
  40d5d4:	adc    DWORD PTR [esi-0x5a8bfc0e],0x5
  40d5db:	push   ecx
  40d5dc:	add    eax,0xd2e946a1
  40d5e1:	ja     0x40d594
  40d5e3:	ror    al,0x9c
  40d5e6:	add    eax,0x50acfee9
  40d5eb:	repz imul ebx,DWORD PTR [eax*1+0x41ea03e9],0xc45ddea1
  40d5f7:	and    edi,DWORD PTR [esp+ecx*8-0x3bfc1735]
  40d5fe:	push   ecx
  40d5ff:	mov    cl,0xd2
  40d601:	aaa    
  40d602:	mov    cl,0x95
  40d604:	pop    eax
  40d605:	imul   ebx,ebp,0xffffff86
  40d608:	shr    BYTE PTR [ebp-0x70a77a35],1
  40d60e:	(bad)  
  40d610:	cmp    esp,DWORD PTR [ebx+0x5]
  40d613:	push   0x50
  40d615:	mov    ebx,0x8dfbf504
  40d61a:	push   ecx
  40d61b:	inc    ecx
  40d61c:	fistp  DWORD PTR [ebp+edi*1-0x17]
  40d620:	add    eax,DWORD PTR [eax]
	...
  40d62e:	add    BYTE PTR [eax],al
  40d630:	mov    BYTE PTR [eax+0x61],bh
  40d633:	cmp    BYTE PTR [ebx+0x7f],bh
  40d636:	cli    
  40d637:	shl    bh,cl
  40d639:	int3   
  40d63a:	inc    ebp
  40d63b:	xor    eax,0xcf93805b
  40d640:	jmp    0x57990c3c
  40d645:	retf   
  40d646:	call   0xae03:0xecc81bfb
  40d64d:	jle    0x40d65b
  40d64f:	xchg   BYTE PTR [eax],ah
  40d651:	out    0xbe,al
  40d653:	xchg   BYTE PTR [edi+0x40],dh
  40d656:	stos   DWORD PTR es:[edi],eax
  40d657:	inc    esp
  40d658:	arpl   WORD PTR ds:0x11df17c,ax
  40d65e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d65f:	inc    ebp
  40d660:	mov    ds:0x60e80005,al
  40d665:	add    eax,0x474f2f00
  40d66a:	inc    ecx
  40d66b:	jmp    0xa8a6da97
  40d670:	dec    ecx
  40d671:	pop    es
  40d672:	sub    DWORD PTR [edi+0xf83635d],0x67
  40d679:	push   eax
  40d67a:	repz push 0x54
  40d67d:	test   BYTE PTR ds:0xf056728,ch
  40d683:	ins    DWORD PTR es:[edi],dx
  40d684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d685:	retf   0xe9fe
  40d688:	out    0x9,eax
  40d68a:	jge    0x40d663
  40d68c:	and    DWORD PTR ds:0xd8e4ee00,eax
  40d692:	(bad)  
  40d693:	call   0x40d698
	...
  40d6a0:	add    BYTE PTR [eax],al
  40d6a2:	add    BYTE PTR [eax-0x7a],ah
  40d6a5:	cmp    al,0x98
  40d6a7:	dec    edi
  40d6a8:	inc    esp
  40d6a9:	add    cl,ch
  40d6ab:	arpl   WORD PTR [ecx+0x560e9e0],ax
  40d6b1:	(bad)  
  40d6b2:	sub    al,0xb3
  40d6b4:	retf   0xe9fe
  40d6b7:	pusha  
  40d6b8:	ret    0x6144
  40d6bb:	pop    edi
  40d6bc:	add    eax,0x40fde900
  40d6c1:	cld    
  40d6c2:	mov    ecx,0xb9f840f5
  40d6c7:	push   cs
  40d6c8:	add    eax,0x441d5a68
  40d6cd:	add    BYTE PTR [esi],bh
  40d6cf:	push   esp
  40d6d0:	dec    ecx
  40d6d1:	cs test al,0x60
  40d6d4:	(bad)  
  40d6d5:	mov    edi,0xff8fe4de
  40d6da:	call   0x21bd5d3f
  40d6df:	addr16 cli 
  40d6e1:	add    DWORD PTR [ebp+0x5f],0x5
  40d6e5:	add    BYTE PTR [edx-0x64],ch
  40d6e8:	leave  
  40d6e9:	(bad)  
  40d6ea:	jmp    FWORD PTR ds:0xa00a082
  40d6f0:	push   es
  40d6f1:	mov    esi,DWORD PTR [ebp+0xe]
  40d6f4:	scas   eax,DWORD PTR es:[edi]
  40d6f5:	add    BYTE PTR [eax],0xfa
  40d6f8:	add    eax,0xb4648b56
  40d6fd:	je     0x40d717
  40d6ff:	lea    eax,[ebx-0x10]
  40d702:	call   DWORD PTR [ebp+edx*8+0x458d]
	...
  40d715:	add    BYTE PTR [esi],dl
  40d717:	cs dec ecx
  40d719:	inc    edx
  40d71a:	cmp    eax,DWORD PTR [ecx]
  40d71c:	call   0x425bf8
  40d721:	shr    DWORD PTR [edx+0x4302be80],1
  40d727:	inc    ebx
  40d728:	loopne 0x40d792
  40d72a:	xchg   ebx,eax
  40d72b:	inc    ebx
  40d72c:	inc    ecx
  40d72d:	add    BYTE PTR [ebp+0x43],cl
  40d730:	in     al,0xc7
  40d732:	xchg   ebp,esp
  40d734:	(bad)  
  40d735:	(bad)  
  40d736:	mov    edx,0xd2458d05
  40d73b:	adc    eax,0x170016a
  40d740:	push   0x0
  40d742:	inc    DWORD PTR [edx-0x20]
  40d745:	push   eax
  40d746:	pusha  
  40d747:	add    DWORD PTR [ebp-0xe9d5bb],ecx
  40d74d:	adc    eax,0x40ee1b
  40d752:	add    ebp,0x3af92d72
  40d758:	in     al,dx
  40d759:	add    BYTE PTR [esi+0x4a01b81c],ah
  40d75f:	add    eax,0x308a0b00
  40d764:	push   ss
  40d765:	call   DWORD PTR [edi]
  40d767:	int    0xfd
  40d769:	jne    0x40d7dd
  40d76b:	mov    ch,0x73
  40d76d:	in     al,dx
  40d76e:	pop    ebp
  40d76f:	or     BYTE PTR cs:[eax+0x63],ch
  40d773:	fiadd  DWORD PTR [edx]
  40d775:	out    dx,eax
  40d776:	in     eax,dx
  40d777:	push   es
  40d778:	sti    
  40d779:	clc    
	...
  40d786:	add    BYTE PTR [eax],al
  40d788:	add    BYTE PTR [eax+eax*1],ah
  40d78b:	shl    BYTE PTR [edi+ecx*1-0x9],1
  40d78f:	xchg   ebp,eax
  40d790:	inc    esp
  40d791:	arpl   si,bx
  40d793:	xor    bh,bh
  40d795:	sahf   
  40d796:	(bad)  
  40d797:	add    ch,0x5f
  40d79a:	pop    ebx
  40d79b:	push   ecx
  40d79c:	clc    
  40d79d:	arpl   WORD PTR [edx],si
  40d79f:	std    
  40d7a0:	xor    BYTE PTR ds:0x7c84fdde,0xb7
  40d7a7:	into   
  40d7a8:	(bad)  
  40d7a9:	in     al,0x9
  40d7ab:	sar    dh,1
  40d7ad:	jbe    0x40d80c
  40d7af:	push   ds
  40d7b0:	inc    ecx
  40d7b1:	arpl   ax,si
  40d7b3:	mov    esp,0x37de67c1
  40d7b8:	mov    esi,DWORD PTR [edi+0x49f7c85b]
  40d7be:	ficomp WORD PTR [eax+0x2f]
  40d7c1:	mov    ah,0xe9
  40d7c3:	sti    
  40d7c4:	out    0x2,eax
  40d7c6:	out    dx,al
  40d7c7:	into   
  40d7c8:	(bad)  
  40d7c9:	ficomp DWORD PTR [ecx]
  40d7cb:	sar    BYTE PTR [edi+0x5e],1
  40d7ce:	xchg   esi,eax
  40d7cf:	inc    esp
  40d7d0:	inc    ecx
  40d7d1:	arpl   si,bx
  40d7d3:	push   edi
  40d7d4:	sub    ebx,edi
  40d7d6:	push   0xb6634144
  40d7db:	test   BYTE PTR [eax+0x22],al
  40d7de:	(bad)  
  40d7e0:	in     al,0xf5
  40d7e2:	cs iret 
  40d7e4:	test   BYTE PTR [ebx-0x6597d44e],ah
  40d7ea:	popf   
  40d7eb:	inc    ebx
	...
  40d7fc:	retf   
  40d7fd:	jbe    0x40d843
  40d7ff:	inc    ecx
  40d800:	arpl   WORD PTR [esi-0x4e],ax
  40d803:	jge    0x40d851
  40d805:	pop    ss
  40d806:	mov    BYTE PTR [ebx+ebx*1],0x5
  40d80a:	test   al,0x44
  40d80c:	arpl   WORD PTR [esi],ax
  40d80e:	push   0x11
  40d810:	es inc esi
  40d812:	test   al,0x3
  40d814:	arpl   WORD PTR [ecx-0x2d],dx
  40d817:	(bad)  
  40d818:	lahf   
  40d819:	int    0xe8
  40d81b:	add    esp,DWORD PTR [ebx+0x5]
  40d81e:	rol    bl,cl
  40d820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d821:	xor    eax,0xcdb78099
  40d826:	call   0x6345:0x27ba6fce
  40d82d:	sub    BYTE PTR [eax-0x9239eb4],0x82
  40d834:	outs   dx,DWORD PTR ds:[esi]
  40d835:	int    0xe8
  40d837:	pop    eax
  40d838:	popa   
  40d839:	(bad)  
  40d83b:	into   
  40d83c:	push   edi
  40d83d:	int    0xbd
  40d83f:	pop    eax
  40d840:	imul   ebx,ebp,0x3a
  40d843:	retf   
  40d844:	int    0xc7
  40d846:	popa   
  40d847:	cmp    bl,cl
  40d849:	jnp    0x40d845
  40d84b:	into   
  40d84c:	aaa    
  40d84d:	int    0x9d
  40d84f:	xor    DWORD PTR [ebx-0x38],ebp
  40d852:	sbb    edi,esp
  40d854:	les    edi,FWORD PTR [edx]
  40d856:	mov    esi,cs
  40d858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d859:	(bad)  
  40d85a:	sti    
  40d85b:	sti    
  40d85c:	test   BYTE PTR [ebx],bl
  40d85e:	jg     0x40d82e
	...
  40d86c:	add    BYTE PTR [eax],al
  40d86e:	add    BYTE PTR [ebp-0x72300439],dl
  40d874:	push   ecx
  40d875:	loope  0x40d852
  40d877:	xor    BYTE PTR [esi+0x66],dl
  40d87a:	into   
  40d87b:	stos   DWORD PTR es:[edi],eax
  40d87c:	ret    0x3e4
  40d87f:	push   cs
  40d880:	jl     0x40d8c6
  40d882:	and    BYTE PTR [eax+0x1036b6d4],0x7c
  40d889:	fwait
  40d88a:	jmp    DWORD PTR ds:0x6303e904
  40d890:	add    eax,0xfdab3600
  40d895:	out    0x6d,eax
  40d897:	pushf  
  40d898:	add    eax,0x6286a00
  40d89d:	ja     0x40d88f
  40d89f:	pop    ecx
  40d8a0:	lds    ebx,FWORD PTR [edx-0x4a]
  40d8a3:	jle    0x40d861
  40d8a5:	shl    ecx,0x60
  40d8a8:	mov    ah,0xe7
  40d8aa:	jb     0x40d907
  40d8ac:	stc    
  40d8ad:	mov    bl,ch
  40d8af:	cdq    
  40d8b0:	scas   al,BYTE PTR es:[edi]
  40d8b1:	push   cs
  40d8b2:	imul   edi,DWORD PTR [edx-0x7616013a],0x51
  40d8b9:	or     BYTE PTR [edx-0x54],dh
  40d8bc:	std    
  40d8bd:	jmp    0x1369:0x57a7d43
  40d8c4:	pop    ss
  40d8c5:	jb     0x40d8aa
  40d8c7:	loopne 0x40d893
  40d8c9:	cmp    BYTE PTR [esi],bh
  40d8cb:	fs test ebx,ebp
  40d8ce:	stc    
  40d8cf:	mov    ebx,0xb57feb
	...
  40d8e0:	add    BYTE PTR [eax],al
  40d8e2:	and    BYTE PTR [ebx+0xd],dl
  40d8e5:	imul   esi,DWORD PTR [ebx-0x1f0e88c0],0xab6940da
  40d8ef:	cld    
  40d8f0:	jmp    0x752e:0x5ac54be0
  40d8f7:	mov    esp,0x960f1c1
  40d8fc:	xor    bl,bh
  40d8fe:	cwde   
  40d8ff:	or     bh,BYTE PTR [ecx]
  40d901:	(bad)  
  40d902:	sbb    DWORD PTR fs:[eax],esi
  40d905:	or     BYTE PTR [esi+0x7adb410a],0xa
  40d90c:	inc    esi
  40d90d:	(bad)  
  40d90e:	pop    esi
  40d90f:	sbb    DWORD PTR [ecx-0x13],eax
  40d912:	push   0xffffffdb
  40d914:	or     BYTE PTR [edx],al
  40d916:	lahf   
  40d917:	sub    ebx,DWORD PTR [edi+0x0]
  40d91a:	add    al,0x8b
  40d91c:	ror    BYTE PTR [eax],0x4a
  40d91f:	ret    0x4de
  40d922:	inc    eax
  40d923:	mov    esi,0xbfb94ba8
  40d928:	add    BYTE PTR [ebx],cl
  40d92a:	mov    eax,ds:0xff8ba22e
  40d92f:	(bad)  
  40d932:	lds    edi,FWORD PTR [esi]
  40d934:	clc    
  40d935:	dec    edi
  40d937:	leave  
  40d938:	lea    eax,[ebp+0x66]
  40d93b:	rol    BYTE PTR [ebx-0xc],0xa
  40d93f:	add    al,BYTE PTR [eax]
  40d941:	add    BYTE PTR [ecx-0xa],bh
  40d944:	lock sub BYTE PTR [eax],al
	...
  40d953:	add    BYTE PTR [eax],al
  40d955:	mov    ebx,0x3c740001
  40d95a:	inc    esi
  40d95b:	inc    esp
  40d95c:	lock cmp ch,BYTE PTR [ebx]
  40d95f:	add    DWORD PTR [edx-0x6],ebp
  40d962:	sub    eax,DWORD PTR [eax]
  40d964:	push   0xfffffffa
  40d966:	sub    eax,DWORD PTR [eax]
  40d968:	lea    ecx,[edi-0x5000b147]
  40d96e:	mov    dl,0x26
  40d970:	inc    ecx
  40d971:	mov    edx,0xd074becc
  40d976:	test   BYTE PTR [ebx-0xc],bh
  40d979:	retf   0x342d
  40d97c:	mov    edi,DWORD PTR [edi+0x5]
  40d97f:	mov    ecx,DWORD PTR [ebp-0x36]
  40d982:	cld    
  40d983:	pop    es
  40d984:	ja     0x40d926
  40d986:	mov    ch,0x89
  40d988:	jne    0x40d9a8
  40d98a:	dec    ebp
  40d98b:	jl     0x40d995
  40d98d:	adc    DWORD PTR [edi],eax
  40d98f:	lock jecxz 0x40da0a
  40d992:	mov    ah,0xa2
  40d994:	mov    edi,DWORD PTR [edi]
  40d996:	add    eax,0x491a75ff
  40d99b:	(bad)  
  40d99c:	dec    BYTE PTR [edi+0x63e3e6ad]
  40d9a2:	fwait
  40d9a3:	add    al,BYTE PTR [eax]
  40d9a5:	stos   DWORD PTR es:[edi],eax
  40d9a6:	fadd   QWORD PTR [edx]
  40d9a8:	add    BYTE PTR [ebx+0x67],ah
  40d9ab:	sub    ebx,DWORD PTR [esi+0x2a]
  40d9ae:	icebp  
  40d9af:	cli    
  40d9b0:	(bad)  
  40d9b1:	jns    0x40d9a1
  40d9b3:	daa    
  40d9b4:	pop    edi
  40d9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9b6:	in     eax,0xc0
  40d9b8:	pop    es
	...
  40d9c5:	add    BYTE PTR [eax],al
  40d9c7:	add    BYTE PTR [ebx-0x7f],ah
  40d9ca:	ja     0x40d9b7
  40d9cc:	loopne 0x40d9b8
  40d9ce:	ret    0x6367
  40d9d1:	into   
  40d9d2:	add    al,BYTE PTR [eax]
  40d9d4:	cmp    edx,DWORD PTR [ecx+edx*2-0x1]
  40d9d8:	sbb    al,0x36
  40d9da:	inc    esi
  40d9db:	cld    
  40d9dc:	mov    ebp,DWORD PTR [esi+0x6630022]
  40d9e2:	xchg   ecx,eax
  40d9e3:	jno    0x40d9e9
  40d9e5:	mov    ah,0x78
  40d9e7:	inc    esp
  40d9e8:	sti    
  40d9e9:	push   esi
  40d9ea:	add    al,0x20
  40d9ec:	arpl   WORD PTR [esi-0x248e5b26],bp
  40d9f2:	retf   0x9e88
  40d9f5:	ficomp DWORD PTR [ebx+0x0]
  40d9f8:	sub    DWORD PTR [esi+0xfbe802],0xffffffcb
  40d9ff:	(bad)  
  40da00:	(bad)  
  40da02:	shl    DWORD PTR [edi+0x63],cl
  40da05:	push   cs
  40da06:	add    al,0x0
  40da08:	retf   
  40da09:	aaa    
  40da0a:	push   esi
  40da0b:	push   DWORD PTR [ebp+esi*1-0x51c413bf]
  40da12:	and    al,BYTE PTR [eax]
  40da14:	arpl   WORD PTR [esi-0x74638db7],ax
  40da1a:	jl     0x40da60
  40da1c:	mov    edx,DWORD PTR [esi]
  40da1e:	add    al,0x20
  40da20:	arpl   WORD PTR [esi+0x331170da],bp
  40da26:	retf   
  40da27:	mov    BYTE PTR [esi],ah
  40da29:	add    eax,0xcb4d
	...
  40da3a:	add    bh,ch
  40da3c:	adc    al,0xd1
  40da3e:	mov    bl,0x22
  40da40:	inc    esi
  40da41:	jmp    0x4101ca10
  40da46:	jnp    0x40d9e8
  40da48:	add    eax,0x112086e9
  40da4d:	ds push ecx
  40da4f:	jae    0x40da7e
  40da51:	dec    edx
  40da52:	inc    esi
  40da53:	mov    ds:0x3b512e05,al
  40da58:	lods   eax,DWORD PTR ds:[esi]
  40da59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da5a:	aas    
  40da5b:	arpl   WORD PTR ds:0xc458c06a,ax
  40da61:	fwait
  40da62:	repz mov esp,0x6344aabd
  40da68:	les    edi,FWORD PTR [ebx-0x31]
  40da6b:	cld    
  40da6c:	sub    eax,0x886303a5
  40da71:	sub    al,0xf8
  40da73:	add    eax,0x545bd93a
  40da78:	dec    eax
  40da79:	sub    BYTE PTR [esp+esi*8],al
  40da7c:	cmp    ecx,ebx
  40da7e:	fist   DWORD PTR [esi-0x1ffc16b7]
  40da84:	enter  0xcadc,0x57
  40da88:	adc    eax,0x46201e51
  40da8d:	jmp    0xc0f2325c
  40da92:	inc    esi
  40da93:	pop    ds
  40da94:	add    eax,0x10a086e9
  40da99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da9a:	push   eax
  40da9b:	addr16 sub eax,0x4729
	...
  40daad:	add    BYTE PTR [edx],ah
  40daaf:	add    eax,0xacbb5096
  40dab4:	fdivr  DWORD PTR [edi]
  40dab6:	arpl   WORD PTR ds:0xc468bf6a,ax
  40dabc:	repz repz add al,0x51
  40dac0:	add    BYTE PTR [edx],ch
  40dac2:	push   ds
  40dac3:	add    eax,0xab9cf4ff
  40dac8:	sbb    al,0xad
  40daca:	pusha  
  40dacb:	add    eax,0x2d742583
  40dad0:	add    BYTE PTR [esi+0x13],dl
  40dad3:	sar    esi,0xd4
  40dad6:	push   esp
  40dad7:	les    esi,FWORD PTR [esi+esi*8]
  40dada:	ja     0x40db20
  40dadc:	add    BYTE PTR [ecx+0x11],dl
  40dadf:	aaa    
  40dae0:	push   DWORD PTR [esi]
  40dae2:	(bad)  
  40dae3:	dec    ecx
  40dae4:	loopne 0x40daa9
  40dae6:	pusha  
  40dae7:	ret    0x2174
  40daea:	sub    DWORD PTR [edx],edi
  40daec:	or     al,0x1e
  40daee:	push   ebx
  40daef:	adc    ch,BYTE PTR [ecx]
  40daf1:	test   al,0x60
  40daf3:	lods   eax,DWORD PTR ds:[esi]
  40daf4:	rcl    BYTE PTR [ebp-0x53773bd7],0xbc
  40dafb:	sub    al,0x0
  40dafd:	(bad)  
  40dafe:	pushf  
  40daff:	mov    ecx,0xc40c7cfe
  40db04:	xor    al,0xde
  40db06:	pop    edi
  40db07:	inc    esp
  40db08:	add    cl,dl
  40db0a:	(bad)  
  40db0b:	ss (bad) 
  40db0d:	fisubr WORD PTR [eax+0x49]
  40db10:	fadd   DWORD PTR [ebx+0x0]
	...
  40db1f:	add    BYTE PTR [eax],al
  40db21:	pop    edi
  40db22:	ret    0xd974
  40db25:	stos   BYTE PTR es:[edi],al
  40db26:	cmp    eax,ebp
  40db28:	(bad)  
  40db29:	adc    ch,BYTE PTR fs:[ecx]
  40db2c:	sub    BYTE PTR [edi-0x53],ah
  40db2f:	xchg   esp,eax
  40db30:	cmp    eax,0x2488c39a
  40db35:	repz sub al,0x0
  40db38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db39:	and    al,0xb1
  40db3b:	(bad)  
  40db3c:	adc    al,0x8f
  40db3e:	ret    
  40db3f:	xor    al,0xe6
  40db41:	dec    ecx
  40db42:	inc    esp
  40db43:	add    BYTE PTR [ecx+0xff392a],al
  40db49:	fnstsw WORD PTR [esi]
  40db4b:	inc    esp
  40db4c:	sar    bh,1
  40db4e:	add    eax,eax
  40db50:	push   eax
  40db51:	or     eax,0x77ffe452
  40db56:	mov    edx,0x1f6d35fd
  40db5b:	inc    ecx
  40db5c:	add    BYTE PTR [edx],dl
  40db5e:	and    al,0x74
  40db60:	dec    DWORD PTR ds:0xc9cc443e
  40db66:	dec    edx
  40db67:	loopne 0x40db69
  40db69:	dec    ebp
  40db6a:	inc    edx
  40db6b:	mov    dh,0x0
  40db6d:	cmp    al,BYTE PTR [esi]
  40db6f:	cmp    DWORD PTR [ebp+0x66],0x9
  40db73:	je     0x40e538
  40db79:	leave  
  40db7a:	dec    edx
  40db7b:	rol    BYTE PTR [eax],1
  40db7d:	cmp    eax,0x3a00a242
  40db82:	push   es
  40db83:	lea    eax,[ebp+0x0]
	...
  40db92:	add    BYTE PTR [eax],al
  40db94:	inc    esi
  40db95:	stc    
  40db96:	(bad)  
  40db97:	jne    0x40dc0f
  40db99:	loope  0x40dbe9
  40db9b:	std    
  40db9c:	or     eax,0xfdc009cd
  40dba1:	inc    ecx
  40dba2:	mov    es,WORD PTR [eax]
  40dba4:	or     al,BYTE PTR [esi]
  40dba6:	cmp    DWORD PTR [ebp-0x3a],0x5
  40dbaa:	je     0x40e237
  40dbb0:	jg     0x40dbb5
  40dbb2:	enter  0xad50,0x52
  40dbb6:	shr    al,1
  40dbb8:	fmul   st,st(2)
  40dbba:	std    
  40dbbb:	call   ecx
  40dbbd:	lds    esi,FWORD PTR [edx+0x75]
  40dbc0:	cmp    DWORD PTR [ebx-0x38],ecx
  40dbc3:	add    BYTE PTR [esi+0x5c],dh
  40dbc6:	push   0xbcdcca10
  40dbcb:	call   DWORD PTR [edi-0x3f]
  40dbce:	out    0x76,al
  40dbd0:	arpl   WORD PTR [ecx],cx
  40dbd2:	leave  
  40dbd3:	(bad)  
  40dbd4:	pushf  
  40dbd5:	sbb    ah,ah
  40dbd7:	dec    BYTE PTR [esi]
  40dbd9:	mov    ah,0xda
  40dbdb:	int3   
  40dbdc:	inc    BYTE PTR [edx-0x38]
  40dbdf:	dec    BYTE PTR [esi]
  40dbe1:	cwde   
  40dbe2:	(bad)  
  40dbe3:	je     0x40dc50
  40dbe5:	test   ah,al
  40dbe7:	ins    BYTE PTR es:[edi],dx
  40dbe8:	je     0x40dc14
  40dbea:	enter  0x8b74,0x62
  40dbee:	dec    esi
  40dbef:	or     BYTE PTR [ebx-0x5e],bh
  40dbf2:	push   ebp
  40dbf3:	call   FWORD PTR [eax+edx*2+0x4e]
  40dbf7:	les    eax,FWORD PTR [eax]
	...
  40dc05:	add    BYTE PTR [eax],al
  40dc07:	push   esp
  40dc08:	sub    BYTE PTR [esi-0x25492902],0x7c
  40dc0f:	mov    dh,0xf7
  40dc11:	(bad)  
  40dc12:	(bad)  
  40dc13:	mov    dh,0xe6
  40dc15:	(bad)  
  40dc16:	je     0x40dc2b
  40dc18:	call   0x907be46a
  40dc1d:	push   ebp
  40dc1e:	jmp    DWORD PTR [esp+ebp*1]
  40dc21:	inc    esi
  40dc22:	int3   
  40dc23:	arpl   WORD PTR [edx-0x11697d13],bx
  40dc29:	(bad)  
  40dc2a:	je     0x40dc88
  40dc2c:	xor    edi,DWORD PTR [esi]
  40dc2e:	int3   
  40dc2f:	add    al,0x7f
  40dc31:	(bad)  
  40dc32:	je     0x40dc9f
  40dc34:	push   es
  40dc35:	and    ebp,DWORD PTR [ebp-0xc]
  40dc38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc39:	fimul  DWORD PTR [ecx]
  40dc3b:	jns    0x40dbeb
  40dc3d:	lds    esi,FWORD PTR [ebx+ebx*2-0x3a]
  40dc41:	out    dx,eax
  40dc42:	ins    BYTE PTR es:[edi],dx
  40dc43:	fmul   st(7),st
  40dc45:	(bad)  
  40dc46:	je     0x40dc1f
  40dc48:	(bad)  
  40dc49:	sub    BYTE PTR [edi-0x34],0x7f
  40dc4d:	(bad)  
  40dc4e:	je     0x40dc1b
  40dc50:	(bad)  
  40dc51:	dec    edx
  40dc52:	jo     0x40dc10
  40dc54:	outs   dx,DWORD PTR ds:[esi]
  40dc55:	(bad)  
  40dc56:	je     0x40dc07
  40dc58:	add    eax,0xc0335391
  40dc5d:	popf   
  40dc5e:	(bad)  
  40dc5f:	das    
  40dc60:	mov    ch,0x80
  40dc62:	pop    ebx
  40dc63:	adc    eax,eax
  40dc65:	(bad)  
  40dc66:	(bad)  
  40dc67:	cmpxchg DWORD PTR [eax+0x63],edx
	...
  40dc7a:	adc    eax,eax
  40dc7c:	jge    0x40dc45
  40dc7e:	shrd   DWORD PTR [eax+0x6dbff32b],eax,cl
  40dc85:	(bad)  
  40dc86:	out    dx,eax
  40dc87:	test   al,0x50
  40dc89:	xor    esi,ebx
  40dc8b:	mov    edi,0xa4efc75d
  40dc90:	inc    eax
  40dc91:	cmp    edx,ebx
  40dc93:	ror    BYTE PTR [ebp-0x39],0xcf
  40dc97:	loope  0x40dce9
  40dc99:	inc    ebx
  40dc9a:	rol    eax,cl
  40dc9c:	cmp    eax,0x40ddcfc7
  40dca1:	or     esi,DWORD PTR [ebx-0x5038d240]
  40dca7:	fst    DWORD PTR [eax]
  40dca9:	adc    esi,DWORD PTR [ebx-0x5038e240]
  40dcaf:	aad    0x0
  40dcb1:	sbb    edx,DWORD PTR [ebx-0x7038f240]
  40dcb7:	rcl    DWORD PTR [eax],1
  40dcb9:	and    edx,DWORD PTR [ebx+0x22bcfdc0]
  40dcbf:	adc    ecx,ebp
  40dcc1:	xor    al,ch
  40dcc3:	mov    al,0x67
  40dcc5:	sar    ah,0xb7
  40dcc8:	in     eax,0xc6
  40dcca:	fisttp WORD PTR [ecx-0x23]
  40dccd:	xor    esp,esp
  40dccf:	cmp    ebp,esp
  40dcd1:	(bad)  
  40dcd2:	xchg   edi,eax
  40dcd3:	adc    BYTE PTR [eax],al
  40dcd5:	inc    ebp
  40dcd6:	arpl   WORD PTR [ebp+0x563424c],bp
  40dcdc:	bnd ret 
	...
  40dcea:	add    BYTE PTR [eax],al
  40dcec:	add    BYTE PTR [ebp-0x76],dl
  40dcef:	(bad)  
  40dcf0:	fsub   QWORD PTR [edi+0x5]
  40dcf3:	add    BYTE PTR [esi-0x170042dd],ah
  40dcf9:	pusha  
  40dcfa:	add    eax,0xbe9324c7
  40dcff:	push   es
  40dd00:	jmp    0x3410865
  40dd05:	pop    edi
  40dd06:	sub    eax,DWORD PTR [eax]
  40dd08:	adc    esp,DWORD PTR [edi-0x6e]
  40dd0b:	inc    esp
  40dd0c:	jne    0x40dd5e
  40dd0e:	xchg   edx,eax
  40dd0f:	test   BYTE PTR [ecx-0x53],bh
  40dd12:	mov    esi,0x389c19fe
  40dd17:	clc    
  40dd18:	adc    ax,cx
  40dd1b:	out    0x17,eax
  40dd1d:	and    DWORD PTR ds:0x3320e200,eax
  40dd23:	add    eax,0xfebf0540
  40dd28:	jmp    0xa86862d5
  40dd2d:	pusha  
  40dd2e:	mov    esi,0x5e18e574
  40dd33:	jae    0x40dd63
  40dd35:	sbb    eax,0xab398b4f
  40dd3a:	mov    edi,ebp
  40dd3c:	push   ss
  40dd3d:	sbb    eax,0x38bb4fc0
  40dd42:	dec    esi
  40dd43:	jae    0x40dd53
  40dd45:	sbb    eax,0x1d11848e
  40dd4a:	sar    dh,0x11
  40dd4d:	jge    0x40dd7e
  40dd4f:	push   esi
	...
  40dd5d:	add    BYTE PTR [eax],al
  40dd5f:	add    BYTE PTR [ecx+ecx*2-0x10],dh
  40dd63:	cdq    
  40dd64:	cwde   
  40dd65:	leave  
  40dd66:	inc    ecx
  40dd67:	sub    BYTE PTR [edi-0x42],ah
  40dd6a:	mov    ah,0xd1
  40dd6c:	push   ss
  40dd6d:	sar    dh,0xd6
  40dd70:	ins    BYTE PTR es:[edi],dx
  40dd71:	push   cs
  40dd72:	sub    DWORD PTR [eax],ebp
  40dd74:	pop    edi
  40dd75:	lods   eax,DWORD PTR ds:[esi]
  40dd76:	pushf  
  40dd77:	add    BYTE PTR [eax+0x3f89fdc8],cl
  40dd7d:	(bad)  
  40dd7f:	push   ebp
  40dd81:	test   BYTE PTR [ebx-0x2371214],bh
  40dd87:	add    BYTE PTR [esi-0x15],cl
  40dd8a:	cmp    BYTE PTR [ebp-0x36],0x5
  40dd8e:	jne    0x40ddd9
  40dd90:	add    DWORD PTR [esi],edi
  40dd92:	jmp    0x40dd8b
  40dd94:	in     eax,0xc8
  40dd96:	std    
  40dd97:	xor    BYTE PTR ds:0x5f7eb3e,dl
  40dd9d:	enter  0xbd7f,0xe6
  40dda1:	sar    ch,1
  40dda3:	jmp    edx
  40dda5:	add    al,0x0
  40dda7:	add    BYTE PTR [esp+edi*4-0x2fe97a3b],cl
  40ddae:	std    
  40ddaf:	jmp    DWORD PTR [edx-0x5efffffc]
  40ddb5:	stos   DWORD PTR es:[edi],eax
  40ddb6:	std    
  40ddb7:	lea    esi,[esi-0x7a000230]
  40ddbd:	mov    gs,edx
  40ddbf:	div    DWORD PTR [ebp-0x38]
  40ddc2:	std    
  40ddc3:	mov    ch,0x0
	...
  40ddd1:	add    BYTE PTR [eax],al
  40ddd3:	mov    ds:0x85fffdd0,al
  40ddd8:	dec    esi
  40ddd9:	or     al,ch
  40dddb:	add    al,dh
  40dddd:	std    
  40ddde:	dec    DWORD PTR [ecx+0x65f7ea86]
  40dde4:	enter  0x74fe,0x47
  40dde8:	enter  0xecb3,0xd
  40ddec:	leave  
  40dded:	std    
  40ddee:	call   0x403709
  40ddf3:	add    eax,0x5f7ea8f
  40ddf8:	leave  
  40ddf9:	out    0x11,al
  40ddfb:	xchg   ebp,eax
  40ddfc:	enter  0xfffd,0x63
  40de00:	mov    eax,ds:0xced4f6da
  40de05:	ret    
  40de06:	je     0x40de63
  40de08:	aam    0xde
  40de0a:	std    
  40de0b:	les    edi,FWORD PTR [esi-0x3d]
  40de0e:	mov    ah,0xcb
  40de10:	jle    0x40ddd5
  40de12:	dec    bl
  40de14:	jae    0x40de6a
  40de16:	jmp    FWORD PTR [esi+eiz*2+0x62baf83d]
  40de1d:	(bad)  
  40de1e:	(bad)  
  40de1f:	pushf  
  40de20:	xchg   esi,eax
  40de21:	dec    ebp
  40de22:	cld    
  40de23:	mov    ebp,ecx
  40de25:	inc    edx
  40de26:	add    BYTE PTR [ebx+0x75],ah
  40de29:	rol    BYTE PTR [edi],0x63
  40de2c:	sbb    DWORD PTR [ecx-0x15],edi
  40de2f:	loopne 0x40dea0
  40de31:	(bad)  
  40de32:	imul   esp,DWORD PTR [ebx+0x2],0xff14
	...
  40de45:	add    dh,dh
  40de47:	mov    bl,0xda
  40de49:	or     edi,esi
  40de4b:	pop    esi
  40de4c:	les    ecx,FWORD PTR [eax-0x51a4ad5a]
  40de52:	mov    eax,ds:0xd6ff026d
  40de57:	mov    dh,0xda
  40de59:	mov    ds:0xfec3fc45,al
  40de5e:	mov    dh,0xf2
  40de60:	ret    
  40de61:	je     0x40dece
  40de63:	inc    esi
  40de64:	push   cs
  40de65:	ins    BYTE PTR es:[edi],dx
  40de66:	sub    al,0xe4
  40de68:	mov    ecx,0x2dae5fc1
  40de6d:	mov    ecx,DWORD PTR [edi]
  40de6f:	xor    BYTE PTR [edi+0x5873adfb],bh
  40de75:	add    BYTE PTR [ecx+0x7d],bh
  40de78:	ret    
  40de79:	je     0x40ded6
  40de7b:	push   ss
  40de7c:	lods   al,BYTE PTR ds:[esi]
  40de7d:	push   0xfffffffc
  40de7f:	mov    bl,0x78
  40de81:	inc    esp
  40de82:	mul    DWORD PTR [edi]
  40de84:	push   cs
  40de85:	sub    BYTE PTR [ebx],bh
  40de87:	add    eax,0xfad80428
  40de8c:	or     al,0xec
  40de8e:	and    eax,DWORD PTR ds:0x31630369
  40de94:	and    al,0x2c
  40de96:	sub    al,0x48
  40de98:	sub    BYTE PTR [esp+ebp*1],al
  40de9b:	lods   eax,DWORD PTR ds:[esi]
  40de9c:	fadd   QWORD PTR [ebx+eiz*2+0x5]
  40dea0:	loop   0x40de65
  40dea2:	xor    BYTE PTR [edi+edx*1],bl
  40dea5:	lods   al,BYTE PTR ds:[esi]
  40dea6:	ins    DWORD PTR es:[edi],dx
  40dea7:	cmp    eax,0xc3a6
	...
  40deb8:	add    BYTE PTR [ebp*1+0x7b8c03e9],dl
  40debf:	add    BYTE PTR ds:0x53e94620,ch
  40dec5:	mov    WORD PTR [edx],?
  40dec7:	icebp  
  40dec8:	stos   DWORD PTR es:[edi],eax
  40dec9:	push   ebx
  40deca:	cwde   
  40decb:	jge    0x40de90
  40decd:	test   BYTE PTR [edx+0x7],bl
  40ded0:	ret    
  40ded1:	jne    0x40de83
  40ded3:	out    0x49,eax
  40ded5:	jecxz  0x40ded2
  40ded7:	call   0x5d844814
  40dedc:	neg    DWORD PTR [esi+edi*2]
  40dedf:	push   ebp
  40dee0:	ret    
  40dee1:	push   ebp
  40dee2:	mov    esp,0x494725a
  40dee7:	mov    esp,0x3d32457e
  40deec:	ret    
  40deed:	mov    bh,0xd
  40deef:	inc    ecx
  40def0:	jge    0x40debb
  40def2:	mov    esp,0xce8d632d
  40def7:	sub    cl,BYTE PTR [eax]
  40def9:	arpl   WORD PTR [edx+0x72],dx
  40defc:	mov    al,0xe1
  40defe:	rcl    BYTE PTR [eax],0x57
  40df01:	sbb    al,0x42
  40df03:	adc    DWORD PTR [ebx+eiz*2],eax
  40df06:	add    eax,0xb99fcae9
  40df0b:	call   0x464213
  40df10:	bound  ebp,QWORD PTR [edx+0x60b18309]
  40df16:	xor    cl,BYTE PTR [ecx]
  40df18:	adc    bl,BYTE PTR [edi]
  40df1a:	out    dx,eax
  40df1b:	rol    DWORD PTR [edx+0x0],1
	...
  40df2a:	add    BYTE PTR [eax],al
  40df2c:	scas   al,BYTE PTR es:[edi]
  40df2d:	lds    ecx,FWORD PTR [ebx]
  40df2f:	jmp    0xe940e489
  40df34:	pusha  
  40df35:	mov    al,0x60
  40df37:	push   0x23
  40df39:	adc    eax,0x906a3500
  40df3e:	inc    esp
  40df3f:	(bad)  
  40df41:	adc    edi,edi
  40df43:	xor    al,0x53
  40df45:	mov    esp,0xcaf8f174
  40df4a:	addr16 sahf 
  40df4c:	mov    eax,ds:0x5be0fa86
  40df51:	add    cl,BYTE PTR [ecx]
  40df53:	and    al,0xcf
  40df55:	scas   al,BYTE PTR es:[edi]
  40df56:	inc    ebp
  40df57:	sbb    DWORD PTR [edx+0x3a],edi
  40df5a:	(bad)  
  40df5b:	jle    0x40defe
  40df5d:	or     al,0x45
  40df5f:	jno    0x40df79
  40df61:	outs   dx,BYTE PTR ds:[esi]
  40df62:	jg     0x40df4d
  40df64:	pusha  
  40df65:	add    eax,0xf6b5eb75
  40df6a:	and    BYTE PTR [edx+0x68],0x30
  40df6e:	adc    eax,0x8abdab62
  40df73:	mov    ah,0xc
  40df75:	or     al,0xa4
  40df77:	sub    ebx,DWORD PTR [eax-0x3c]
  40df7a:	fcomip st,st(1)
  40df7c:	out    dx,eax
  40df7d:	inc    ecx
  40df7e:	clc    
  40df7f:	pusha  
  40df80:	fwait
  40df81:	mov    ecx,0x41dddaea
  40df86:	clc    
  40df87:	jb     0x40df14
  40df89:	mov    ecx,0x426450e
  40df8e:	ror    DWORD PTR [ecx],0x0
	...
  40df9d:	add    BYTE PTR [eax],al
  40df9f:	imul   ecx,DWORD PTR [esp+eax*2-0x3ae20ef],0xf983b900
  40dfaa:	or     DWORD PTR [eax+ebx*4-0x77],esi
  40dfae:	inc    ebp
  40dfaf:	inc    BYTE PTR [ebx+0xc770036]
  40dfb5:	sub    eax,eax
  40dfb7:	push   ecx
  40dfb8:	shr    ecx,cl
  40dfba:	push   es
  40dfbb:	push   ecx
  40dfbc:	inc    edx
  40dfbd:	clc    
  40dfbe:	mov    edx,DWORD PTR [edi-0x736a63b]
  40dfc4:	adc    eax,0x75515500
  40dfc9:	add    esp,0x666326f6
  40dfcf:	mov    eax,DWORD PTR [ecx]
  40dfd1:	cmp    DWORD PTR [ebp-0x72],eax
  40dfd4:	cld    
  40dfd5:	add    eax,0xc0cefa2b
  40dfda:	adc    BYTE PTR [edx+0x646433c5],cl
  40dfe0:	inc    esi
  40dfe1:	add    al,ch
  40dfe3:	pop    ebp
  40dfe4:	jmp    0x8df8:0x4213fffe
  40dfeb:	inc    edi
  40dfec:	lds    ecx,FWORD PTR [esi-0x18]
  40dfef:	push   ds
  40dff0:	in     eax,dx
  40dff1:	(bad)  
  40dff2:	(bad)  
  40dff3:	std    
  40dff4:	icebp  
  40dff5:	adc    edi,edi
  40dff7:	xchg   DWORD PTR [edx],ecx
  40dff9:	push   DWORD PTR [ebp-0x3e]
  40dffc:	les    esi,FWORD PTR [ebx+0x8]
  40dfff:	mov    ds:0xff662e,al
	...
  40e010:	add    BYTE PTR [eax],al
  40e012:	popf   
  40e013:	or     al,al
  40e015:	movzx  ebp,BYTE PTR [edi]
  40e018:	(bad)  
  40e019:	dec    DWORD PTR [edx-0x3b]
  40e01c:	jae    0x40e02a
  40e01e:	ins    DWORD PTR es:[edi],dx
  40e01f:	repnz idiv edi
  40e022:	idiv   DWORD PTR [ecx-0x1a]
  40e025:	stc    
  40e026:	xlat   BYTE PTR ds:[ebx]
  40e027:	(bad)  
  40e028:	std    
  40e029:	mov    eax,edi
  40e02b:	or     DWORD PTR [ebx],edi
  40e02d:	inc    ebp
  40e02e:	arpl   WORD PTR [edi+ecx*1+0x2abc783],di
  40e035:	add    BYTE PTR [ecx+edi*1],al
  40e038:	pop    ss
  40e039:	push   DWORD PTR [esi-0x4c]
  40e03c:	stos   BYTE PTR es:[edi],al
  40e03d:	mov    eax,ds:0x88bfb37c
  40e042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e043:	mov    al,0xab
  40e045:	jae    0x40e02b
  40e047:	lock mov bh,0x2a
  40e04a:	mov    cl,0x36
  40e04c:	inc    esi
  40e04d:	hlt    
  40e04e:	int3   
  40e04f:	or     BYTE PTR [eax],ch
  40e051:	data16 and ch,BYTE PTR [ebx+ecx*1-0x5451b02e]
  40e059:	addr16 dec ecx
  40e05b:	lods   al,BYTE PTR ds:[esi]
  40e05c:	push   edx
  40e05d:	jmp    FWORD PTR [esi]
  40e05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e060:	stos   BYTE PTR es:[edi],al
  40e061:	mov    BYTE PTR [edi+0x6b],al
  40e064:	mov    edi,0xbfb82efe
  40e069:	je     0x40e0d6
  40e06b:	xchg   esp,eax
  40e06c:	xor    esp,DWORD PTR [edi-0x6c]
  40e06f:	xchg   edx,eax
  40e070:	mov    edx,DWORD PTR [edi+esi*2+0x2f]
  40e074:	std    
  40e075:	inc    DWORD PTR [eax]
	...
  40e083:	add    BYTE PTR [eax],al
  40e085:	xrstor [ebx-0x481f15b9]
  40e08c:	mov    ah,BYTE PTR [esi+0x8]
  40e08f:	sub    al,BYTE PTR [ecx+0x63]
  40e092:	das    
  40e093:	stos   BYTE PTR es:[edi],al
  40e094:	add    edx,DWORD PTR [edx]
  40e096:	and    esi,DWORD PTR [esi]
  40e098:	adc    al,0xb2
  40e09a:	push   edi
  40e09b:	ss clc 
  40e09d:	push   esp
  40e09e:	fimul  DWORD PTR [edx]
  40e0a0:	call   0xff00a029
  40e0a5:	stos   BYTE PTR es:[edi],al
  40e0a6:	mov    bl,0xc2
  40e0a8:	je     0x40e10b
  40e0aa:	push   ebx
  40e0ab:	out    0x50,al
  40e0ad:	xor    al,0x7a
  40e0af:	mov    edx,0xaaeab6fe
  40e0b4:	jns    0x40e074
  40e0b6:	add    eax,0x331dc026
  40e0bb:	sbb    eax,0x162190ab
  40e0c0:	ror    BYTE PTR [edi+0x5],0xe9
  40e0c4:	inc    ebx
  40e0c5:	pop    ebp
  40e0c6:	das    
  40e0c7:	jmp    0x40e075
  40e0c9:	test   BYTE PTR fs:[ebx-0x49],bh
  40e0cd:	hlt    
  40e0ce:	xor    DWORD PTR [edi-0x54],ebp
  40e0d1:	push   esp
  40e0d2:	mov    eax,0x3fcbf73
  40e0d7:	dec    ebp
  40e0d8:	mov    edi,0xc023c0dd
  40e0dd:	aam    0xb8
  40e0df:	call   0xf583b8e7
  40e0e4:	mov    ah,0xb8
  40e0e7:	call   0x40e0ef
	...
  40e0f8:	arpl   WORD PTR [eax+0x3abcbc33],di
  40e0fe:	inc    ebp
  40e0ff:	mov    edi,0xc0238cad
  40e104:	fwait
  40e105:	ret    
  40e106:	clc    
  40e107:	add    esi,DWORD PTR [esi]
  40e109:	mov    WORD PTR [edi+edx*2-0x7d1abd18],cs
  40e110:	int3   
  40e111:	or     eax,0x2907ac39
  40e116:	xchg   BYTE PTR [edi+0x397dbde9],bh
  40e11c:	addr16 mov ch,ch
  40e11f:	mov    esi,0x475e14f7
  40e124:	pop    edi
  40e125:	test   bl,ah
  40e127:	packsswb mm6,QWORD PTR [ecx]
  40e12a:	out    dx,al
  40e12b:	mov    esi,0x476409cf
  40e130:	pop    ebx
  40e131:	push   ebp
  40e132:	dec    esi
  40e133:	cmp    DWORD PTR [ebx-0x53],ebx
  40e136:	pop    edx
  40e137:	xor    BYTE PTR [eax+edi*4],bh
  40e13a:	jno    0x40e185
  40e13c:	dec    edi
  40e13d:	mov    ?,edi
  40e13f:	lock test al,0x5
  40e142:	add    cl,ch
  40e144:	pusha  
  40e145:	pop    eax
  40e146:	leave  
  40e147:	sub    esi,DWORD PTR [edi+0x5]
  40e14a:	push   ebp
  40e14b:	jb     0x40e120
  40e14d:	add    bl,0x1d
  40e150:	fcom   DWORD PTR [eax+0x14]
  40e153:	es popa 
  40e155:	add    eax,0xec60e900
  40e15a:	shl    esi,1
	...
  40e168:	add    BYTE PTR [eax],al
  40e16a:	add    BYTE PTR [ebx+0x60e90109],ch
  40e170:	add    eax,0x8321550f
  40e175:	jl     0x40e16c
  40e177:	pusha  
  40e178:	xor    dl,BYTE PTR [ebx]
  40e17a:	ficomp WORD PTR [ebx+0x7aea6a11]
  40e180:	add    eax,0x87f8e96a
  40e185:	inc    dh
  40e187:	std    
  40e188:	lods   al,BYTE PTR ds:[esi]
  40e189:	sub    bl,ch
  40e18b:	pusha  
  40e18c:	add    eax,0x6533483
  40e191:	jne    0x40e19d
  40e193:	in     al,0x30
  40e195:	adc    BYTE PTR [esi-0x5317f2a5],ah
  40e19b:	ds mov eax,0xb91b60fe
  40e1a1:	(bad)  
  40e1a2:	adc    al,0x6b
  40e1a4:	sub    eax,DWORD PTR [eax]
  40e1a6:	adc    ebp,DWORD PTR [ebx-0x76]
  40e1a9:	inc    esp
  40e1aa:	jge    0x40e1bc
  40e1ac:	lods   eax,DWORD PTR ds:[esi]
  40e1ad:	data16 jbe 0x40e15d
  40e1b0:	mov    dh,0xe8
  40e1b2:	jmp    0x6a40e719
  40e1b7:	mov    ds:0x41d40209,eax
  40e1bc:	mov    eax,0x320df974
  40e1c1:	or     BYTE PTR [ecx-0x73],al
  40e1c4:	pop    ds
  40e1c5:	inc    DWORD PTR [eax]
  40e1c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1c8:	mov    DWORD PTR [ebx-0x4],eax
  40e1cb:	jne    0x40e1ca
  40e1cd:	adc    ebp,DWORD PTR [edx+0x0]
	...
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	cmp    ch,ch
  40e1e0:	add    ecx,DWORD PTR [ebp-0x17b18901]
  40e1e6:	add    al,0x78
  40e1e8:	std    
  40e1e9:	push   DWORD PTR [ebx-0x31]
  40e1ec:	(bad)  
  40e1ed:	(bad)  
  40e1ee:	cli    
  40e1ef:	cmp    DWORD PTR [ebx+0xc],0xfffffff9
  40e1f3:	std    
  40e1f4:	pop    ds
  40e1f5:	(bad)  
  40e1f6:	jg     0x40e20a
  40e1f8:	push   0x3
  40e1fa:	cmc    
  40e1fb:	out    dx,al
  40e1fc:	pop    es
  40e1fd:	call   0x3fc2a0
  40e202:	cmc    
  40e203:	out    dx,al
  40e204:	adc    ebp,DWORD PTR [edx-0x37]
  40e207:	in     al,dx
  40e208:	jmp    FWORD PTR [ecx-0x36]
  40e20b:	push   0x16
  40e20d:	push   DWORD PTR [ebp-0x444e1888]
  40e213:	add    al,BYTE PTR [eax]
  40e215:	and    DWORD PTR [edi],0x15
  40e218:	add    al,0x75
  40e21a:	imul   edi,DWORD PTR [eax+0x73],0x7eef510
  40e221:	call   0x3fc11c
  40e226:	adc    edi,DWORD PTR [esi]
  40e228:	cld    
  40e229:	jmp    FWORD PTR [edi+0x1d]
  40e22c:	push   0x0
  40e22e:	pusha  
  40e22f:	or     eax,0x51d6458d
  40e234:	call   0xfdb9c728
  40e239:	jmp    0x40e430
  40e23e:	stc    
  40e23f:	cmc    
  40e240:	or     eax,DWORD PTR ds:0x0
	...
  40e24e:	add    BYTE PTR [eax],al
  40e250:	add    BYTE PTR [edi+0x11],ch
  40e253:	push   DWORD PTR [ebp+0x5a]
  40e256:	in     al,dx
  40e257:	add    eax,0xe80a2fff
  40e25c:	push   ebp
  40e25d:	arpl   si,ax
  40e25f:	mov    ebx,0x2ad0bfe
  40e264:	add    BYTE PTR [ebx+0x55],ah
  40e267:	sub    DWORD PTR [ecx],eax
  40e269:	arpl   WORD PTR [edi+edi*2+0x35a65f7c],bp
  40e270:	and    BYTE PTR [ecx+esi*2],ah
  40e273:	adc    ch,BYTE PTR [edx+0x6b]
  40e276:	fbstp  TBYTE PTR [esi]
  40e278:	or     BYTE PTR [ebx],cl
  40e27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e27b:	and    al,0xff
  40e27d:	or     al,0xf
  40e27f:	aaa    
  40e280:	adc    al,0x79
  40e282:	stos   DWORD PTR es:[edi],eax
  40e283:	sub    BYTE PTR [eax],al
  40e285:	mov    DWORD PTR [edx+ebp*4-0x44490a55],ebp
  40e28c:	call   0x439037
  40e291:	loopne 0x40e2bb
  40e293:	sysret 
  40e295:	push   esi
  40e296:	or     al,0xbd
  40e298:	je     0x40e30d
  40e29a:	push   edx
  40e29b:	or     al,0xff
  40e29d:	push   esi
  40e29e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e29f:	stos   BYTE PTR es:[edi],al
  40e2a0:	adc    DWORD PTR ds:0x36febbc7,edi
  40e2a6:	fsubr  DWORD PTR [eax]
  40e2a8:	add    ecx,DWORD PTR [ecx-0x54]
  40e2ab:	sub    BYTE PTR [eax],al
  40e2ad:	mov    ebx,0xa4febd25
  40e2b2:	les    ebx,FWORD PTR [ebx]
  40e2b4:	add    DWORD PTR [eax],eax
	...
  40e2c2:	add    BYTE PTR [eax],al
  40e2c4:	arpl   WORD PTR [edi+edi*2+0x35b4677c],bp
  40e2cb:	sbb    al,0xa4
  40e2cd:	call   0xabc5e291
  40e2d2:	add    bh,bh
  40e2d4:	not    bh
  40e2d6:	sub    BYTE PTR [eax],al
  40e2d8:	or     DWORD PTR [eax+0x1b6f448d],esp
  40e2de:	lods   al,BYTE PTR ds:[esi]
  40e2df:	arpl   WORD PTR [ebp+0x26],sp
  40e2e2:	mov    esp,0xe9065ee8
  40e2e7:	add    esp,DWORD PTR [ebx-0x78]
  40e2ea:	fisttp DWORD PTR [edi]
  40e2ec:	pop    edx
  40e2ed:	cmp    dh,ch
  40e2ef:	les    ebx,FWORD PTR [edi+0x6303e7b1]
  40e2f5:	add    eax,0x1f4f3646
  40e2fa:	jmp    0xabc34a28
  40e2ff:	mov    edi,0xbdaa9d94
  40e304:	sbb    eax,0x14d80fb5
  40e309:	mov    ch,0xe8
  40e30b:	or     BYTE PTR [edi+0x5936e301],0x6d
  40e312:	call   0x1046461a
  40e317:	enter  0xb4f4,0xe8
  40e31b:	sub    BYTE PTR [edi+0x1],0xe2
  40e31f:	ss pop ecx
  40e321:	ins    DWORD PTR es:[edi],dx
  40e322:	call   0xd046462a
  40e327:	jg     0x40e329
	...
  40e335:	add    BYTE PTR [eax],al
  40e337:	aam    0xb4
  40e339:	call   0xe54232c4
  40e33e:	xor    eax,0x30bb002e
  40e343:	adc    al,BYTE PTR [esi+0x5630843]
  40e349:	sub    DWORD PTR [edx],eax
  40e34b:	xor    BYTE PTR ds:0x845731b6,bh
  40e351:	and    esi,DWORD PTR [eax+0x89d22e1]
  40e357:	mov    dl,0x22
  40e359:	xchg   ebp,eax
  40e35a:	mov    ebx,0x8680b917
  40e35f:	cli    
  40e360:	mov    bl,0x8d
  40e362:	lea    esp,[edi]
  40e364:	lods   eax,DWORD PTR ds:[esi]
  40e365:	test   DWORD PTR [ecx],esi
  40e367:	push   ebx
  40e368:	mov    ah,0xf3
  40e36a:	scas   eax,DWORD PTR es:[edi]
  40e36b:	ins    DWORD PTR es:[edi],dx
  40e36c:	cmp    al,BYTE PTR [eax]
  40e36e:	jno    0x40e318
  40e370:	cmp    DWORD PTR [eax],ecx
  40e372:	adc    edx,0x1866ff28
  40e378:	cmp    DWORD PTR [ebx+edx*8],edx
  40e37b:	data16 mov ah,0x74
  40e37e:	pop    ebp
  40e37f:	or     BYTE PTR [ecx],bh
  40e381:	clc    
  40e382:	inc    ecx
  40e383:	push   ss
  40e384:	mov    cl,0xfe
  40e386:	inc    esi
  40e387:	clc    
  40e388:	cmp    al,bh
  40e38a:	push   ecx
  40e38b:	sub    BYTE PTR [esi],bl
  40e38d:	push   DWORD PTR [esi]
  40e38f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e390:	add    eax,0xa060e900
  40e395:	pop    edi
  40e396:	push   0x5a
  40e398:	add    DWORD PTR ds:0x9b,ecx
	...
  40e3aa:	mov    bl,0x0
  40e3ac:	rcr    BYTE PTR [edi+ebp*4+0x60dd7c86],cl
  40e3b3:	add    eax,0x3d2def40
  40e3b8:	push   DWORD PTR [esp+eiz*2-0x7c]
  40e3bc:	inc    esp
  40e3bd:	std    
  40e3be:	frstor [eax]
  40e3c0:	hlt    
  40e3c1:	fdiv   QWORD PTR [edi-0x6c190be0]
  40e3c7:	mov    ecx,0xb47d06e7
  40e3cc:	(bad)  
  40e3cd:	pusha  
  40e3ce:	and    ebp,DWORD PTR [ebp-0x4ba8ab02]
  40e3d4:	je     0x40e393
  40e3d6:	stc    
  40e3d7:	cmp    al,bh
  40e3d9:	mov    esi,0x13e7fd73
  40e3de:	xor    DWORD PTR [esi+edi*8+0x6a1953ae],0xffffffe8
  40e3e6:	fnstcw WORD PTR [eax]
  40e3e8:	hlt    
  40e3e9:	sahf   
  40e3ea:	push   ebx
  40e3eb:	lods   eax,DWORD PTR ds:[esi]
  40e3ec:	out    0x1f,eax
  40e3ee:	retf   0xfeb2
  40e3f1:	mov    ?,WORD PTR [ebx]
  40e3f3:	lods   eax,DWORD PTR ds:[esi]
  40e3f4:	out    0x0,eax
  40e3f6:	out    0xe0,al
  40e3f8:	(bad)  
  40e3f9:	jmp    DWORD PTR [edx]
  40e3fb:	or     DWORD PTR [eax],eax
  40e3fd:	add    BYTE PTR [edx+0x62],bh
  40e400:	add    edi,DWORD PTR [eax+0x74a]
  40e406:	xchg   ebx,eax
  40e407:	enter  0xe,0x17
  40e40b:	test   dl,ch
  40e40d:	push   esi
	...
  40e41a:	add    BYTE PTR [eax],al
  40e41c:	add    BYTE PTR [ecx+0x170007ed],bh
  40e422:	push   es
  40e423:	pop    esi
  40e424:	leave  
  40e425:	mov    BYTE PTR [edx-0x1087502],dh
  40e42b:	jmp    0x23b9:0xe6b46d0a
  40e432:	jo     0x40e431
  40e434:	add    DWORD PTR [edx+esi*4-0x7f],0x3e
  40e439:	cli    
  40e43a:	cmc    
  40e43b:	lock jmp edi
  40e43e:	(bad)  
  40e43f:	out    0xa9,eax
  40e441:	jecxz  0x40e4b2
  40e443:	std    
  40e444:	pop    esi
  40e445:	xor    ecx,eax
  40e447:	add    al,BYTE PTR [eax]
  40e449:	xlat   BYTE PTR ds:[ebx]
  40e44a:	sub    edx,0xffffff8b
  40e44d:	mov    bh,0xfe
  40e44f:	mov    dl,BYTE PTR [ebp-0x42]
  40e452:	add    DWORD PTR [edx],0xffffff90
  40e455:	dec    ecx
  40e456:	cli    
  40e457:	(bad)  
  40e459:	ss add al,0x8b
  40e45c:	push   ebp
  40e45d:	retf   0x2e6d
  40e460:	(bad)
  40e464:	adc    al,0xca
  40e466:	loop   0x40e46f
  40e468:	mov    edx,DWORD PTR [edi+0x15]
  40e46b:	push   DWORD PTR [eax-0x4a]
  40e46e:	jge    0x40e470
  40e470:	or     DWORD PTR [edi+0x11],0x0
  40e474:	je     0x40e409
  40e476:	adc    DWORD PTR [ebx+0x18],0x83007c4a
  40e47d:	arpl   WORD PTR [esi+0xc90a],bx
	...
  40e48f:	add    BYTE PTR [ecx-0x17aafd48],ah
  40e495:	cwde   
  40e496:	test   bl,al
  40e498:	(bad)  
  40e499:	sbb    edx,DWORD PTR [edx-0x75]
  40e49c:	push   ds
  40e49d:	int3   
  40e49e:	mov    edi,0x29c5cff
  40e4a3:	add    al,ch
  40e4a5:	pusha  
  40e4a6:	push   es
  40e4a7:	(bad)  
  40e4a8:	arpl   WORD PTR [edx+eax*1+0x371f6300],bx
  40e4af:	or     BYTE PTR [ebx-0x27],ah
  40e4b2:	or     ch,BYTE PTR [ebx]
  40e4b4:	and    ebp,DWORD PTR [edx+0x57]
  40e4b7:	leave  
  40e4b8:	and    DWORD PTR [eax-0x5b5100fe],esp
  40e4be:	stos   BYTE PTR es:[edi],al
  40e4bf:	inc    DWORD PTR [ebx+0x230ab8e3]
  40e4c5:	xchg   ecx,eax
  40e4c6:	or     ch,BYTE PTR [ebx]
  40e4c8:	and    esi,DWORD PTR [edx+0x57]
  40e4cb:	leave  
  40e4cc:	and    DWORD PTR [eax+0x14a68902],ebp
  40e4d2:	mov    ecx,0xe146b74
  40e4d7:	arpl   sp,bp
  40e4d9:	mov    dl,0xbf
  40e4db:	inc    esp
  40e4dc:	out    dx,eax
  40e4dd:	pushf  
  40e4de:	add    al,BYTE PTR [eax]
  40e4e0:	arpl   WORD PTR [ecx+0x3f],dx
  40e4e3:	in     al,dx
  40e4e4:	xor    edi,DWORD PTR [ecx]
  40e4e6:	ds hlt 
  40e4e8:	xor    edx,ebx
  40e4ea:	sub    eax,0xbc72bb08
  40e4ef:	(bad)  
  40e4f0:	mov    esp,0xec3f14
	...
  40e501:	add    BYTE PTR [eax],al
  40e503:	sub    al,0xb6
  40e505:	cmp    DWORD PTR [edi+esi*4-0x65],0x2e
  40e50a:	add    al,0x58
  40e50c:	mov    gs,WORD PTR [esi]
  40e50e:	or     BYTE PTR [eax+0x5c],cl
  40e511:	pop    eax
  40e512:	pop    edi
  40e513:	stos   BYTE PTR es:[edi],al
  40e514:	add    al,0xab
  40e516:	pop    es
  40e517:	arpl   si,bx
  40e519:	and    ebp,DWORD PTR [eax-0x7d7eb825]
  40e51f:	call   FWORD PTR [eax+ebp*8-0xfb3cfd]
  40e526:	or     edi,DWORD PTR [eax]
  40e528:	lds    ebx,FWORD PTR [esi]
  40e52a:	pop    ecx
  40e52b:	call   0x814a:0xe803e4c6
  40e532:	ret    0x434
  40e535:	mov    ecx,0x5e1e3bab
  40e53a:	mov    eax,0x8c554adb
  40e53f:	xor    al,0xc9
  40e541:	mov    ds:0xe8b1349f,eax
  40e546:	add    edi,DWORD PTR [eax]
  40e548:	cmc    
  40e549:	imul   edi,DWORD PTR [esi],0x33
  40e54c:	push   esi
  40e54d:	fs ds pop ss
  40e550:	push   esi
  40e551:	cs imul ebx,DWORD PTR cs:[ebp-0x4ef2425b],0x71
  40e55a:	inc    esi
  40e55b:	adc    ebp,ebp
  40e55d:	mov    ds:0xe20975ab,eax
  40e562:	aad    0x70
  40e564:	adc    eax,0x2e06
	...
  40e575:	add    bh,ch
  40e577:	popf   
  40e578:	dec    eax
  40e579:	sub    esp,esp
  40e57b:	mov    al,0xc1
  40e57d:	ret    
  40e57e:	ds push eax
  40e580:	and    ch,al
  40e582:	push   0xbb491005
  40e587:	mov    al,0x23
  40e589:	mov    al,ds:0xac5384f9
  40e58e:	mov    esp,0x3782e73a
  40e593:	mov    ecx,0x84a230e8
  40e598:	cmp    ebp,DWORD PTR [esp+eiz*4-0x1e10ffc7]
  40e59f:	xor    esp,esi
  40e5a1:	jmp    0x1d3ffaf9
  40e5a6:	retf   
  40e5a7:	test   al,0x70
  40e5a9:	adc    esp,ecx
  40e5ab:	scas   eax,DWORD PTR es:[edi]
  40e5ac:	sub    ch,BYTE PTR [ecx-0x5436afeb]
  40e5b2:	imul   eax,DWORD PTR ds:0xb0c30483,0x73
  40e5b9:	in     al,0xb7
  40e5bb:	jnp    0x40e5bc
  40e5bd:	call   0xd9856222
  40e5c2:	or     eax,0x6776e439
  40e5c7:	jl     0x40e60d
  40e5c9:	inc    ebp
  40e5ca:	push   ds
  40e5cb:	rol    BYTE PTR [ecx],1
  40e5cd:	mov    ecx,0x4e682508
  40e5d2:	in     al,dx
  40e5d3:	jl     0x40e619
  40e5d5:	and    eax,0x72dc30d8
	...
  40e5e6:	add    BYTE PTR [eax],al
  40e5e8:	add    BYTE PTR [edx-0x4f],dh
  40e5eb:	jmp    0xa226:0xcf7b8b91
  40e5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5f3:	(bad)  
  40e5f4:	call   0xa4cdeb59
  40e5f9:	sar    BYTE PTR [edi],0x8d
  40e5fc:	lods   al,BYTE PTR ds:[esi]
  40e5fd:	int3   
  40e5fe:	aas    
  40e5ff:	push   edx
  40e600:	push   cs
  40e601:	xor    bh,ch
  40e603:	out    0x16,eax
  40e605:	test   al,0xae
  40e607:	(bad)  
  40e608:	repnz and BYTE PTR [esp+ecx*1],dh
  40e60c:	push   0xffffff9a
  40e60e:	mov    ecx,0x82d674ff
  40e613:	jl     0x40e5de
  40e615:	pusha  
  40e616:	cmp    ah,BYTE PTR [esi]
  40e618:	push   0xffffff8b
  40e61a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e61b:	call   FWORD PTR [edi+ebp*2-0x50]
  40e61f:	je     0x40e5ea
  40e621:	or     BYTE PTR [edx],cl
  40e623:	push   0xfd76a500
  40e628:	jne    0x40e5f0
  40e62a:	pop    ebx
  40e62b:	sub    dh,bh
  40e62d:	aad    0x76
  40e62f:	std    
  40e630:	jne    0x40e5f8
  40e632:	pop    ebx
  40e633:	hlt    
  40e634:	lds    esi,FWORD PTR [bp+0x29]
  40e638:	rol    BYTE PTR [eax+ebx*2-0x37],0xc2
  40e63d:	xchg   BYTE PTR [ebx],al
  40e63f:	mov    eax,DWORD PTR [ebp-0x16]
  40e642:	sbb    bh,dh
  40e644:	dec    ebp
  40e645:	fiadd  WORD PTR [edx-0x20851b85]
  40e64b:	add    eax,0x83
	...
  40e65c:	push   edi
  40e65d:	pop    edi
  40e65e:	(bad)  
  40e65f:	je     0x40e607
  40e661:	jnp    0x40e6a6
  40e663:	or     al,0xc5
  40e665:	cmc    
  40e666:	fisttp DWORD PTR [edi-0x38c87c6]
  40e66c:	mov    ds:0xa5ff65bb,al
  40e671:	sub    al,BYTE PTR [eax]
  40e673:	add    BYTE PTR [edx],bh
  40e675:	add    ebx,DWORD PTR [esi+0x5f]
  40e678:	jae    0x40e63e
  40e67a:	or     al,BYTE PTR [eax]
  40e67c:	(bad)  
  40e67d:	jnp    0x40e669
  40e67f:	cmp    DWORD PTR [esi],0xffffffba
  40e682:	push   ebp
  40e683:	add    edi,0x12
  40e686:	add    BYTE PTR [ebp+0x10],dh
  40e689:	sub    eax,DWORD PTR [eax]
  40e68b:	add    BYTE PTR [edx],cl
  40e68d:	add    ebx,DWORD PTR [edi-0x37]
  40e690:	dec    eax
  40e691:	(bad)  
  40e692:	(bad)  
  40e693:	(bad)  
  40e694:	mov    bh,0x12
  40e696:	sub    edx,edx
  40e698:	jno    0x40e6df
  40e69a:	adc    bh,dh
  40e69c:	scas   eax,DWORD PTR es:[edi]
  40e69d:	push   cs
  40e69e:	inc    cx
  40e6a0:	retf   0x4381
  40e6a3:	lock xor BYTE PTR [ecx],cl
  40e6a6:	push   DWORD PTR [ebp-0x56]
  40e6a9:	js     0x40e71e
  40e6ab:	or     BYTE PTR [ebx-0x3c],ah
  40e6ae:	sbb    DWORD PTR [edi-0x4c],ebx
  40e6b1:	mov    edi,0x9c537c80
  40e6b6:	sub    eax,0x289d390c
  40e6bb:	fs pushf 
  40e6bd:	icebp  
  40e6be:	or     ebp,eax
	...
  40e6cc:	add    BYTE PTR [eax],al
  40e6ce:	add    BYTE PTR [ebx-0x1],ch
  40e6d1:	mov    ah,0xfe
  40e6d3:	mov    WORD PTR [ecx],ss
  40e6d5:	adc    bh,bh
  40e6d7:	push   cs
  40e6d8:	mov    ah,0xaa
  40e6da:	dec    edx
  40e6db:	add    DWORD PTR [edi-0x7fe1774c],edx
  40e6e1:	mov    ah,0x74
  40e6e3:	push   edi
  40e6e4:	xchg   DWORD PTR [esi],ebp
  40e6e6:	or     BYTE PTR [ebx-0x34],bh
  40e6e9:	and    bh,bh
  40e6eb:	pop    esp
  40e6ec:	aaa    
  40e6ed:	das    
  40e6ee:	adc    al,0x54
  40e6f0:	mov    ecx,0xba66e80a
  40e6f5:	mov    bl,0xfe
  40e6f7:	fisubr DWORD PTR [eax-0x46]
  40e6fa:	(bad)  
  40e6fb:	mov    dh,0xb0
  40e6fd:	mov    bl,0x74
  40e6ff:	imul   eax,DWORD PTR [ebp+ebp*4+0x60],0x2c
  40e704:	inc    edi
  40e705:	mov    ch,0x74
  40e707:	dec    edi
  40e708:	out    dx,eax
  40e709:	or     BYTE PTR cs:[ebx],cl
  40e70c:	aad    0x20
  40e70e:	call   DWORD PTR [ebx+eiz*1]
  40e711:	aas    
  40e712:	adc    al,0xe0
  40e714:	mov    ds:0x1b577402,eax
  40e719:	aaa    
  40e71a:	cld    
  40e71b:	outs   dx,BYTE PTR ds:[esi]
  40e71c:	nop
  40e71d:	add    eax,0xff007683
  40e722:	jae    0x40e788
  40e724:	rol    edx,cl
  40e726:	pop    esi
  40e727:	sbb    bl,dl
  40e729:	sldt   WORD PTR [edx]
  40e72c:	sbb    BYTE PTR [ecx+eax*2],0x63
  40e730:	or     eax,0x38ac
	...
  40e741:	add    BYTE PTR [esi],ah
  40e743:	add    eax,0xda5c2de1
  40e748:	test   al,0x54
  40e74a:	stos   BYTE PTR es:[edi],al
  40e74b:	ret    0x3fc
  40e74e:	loopne 0x40e77f
  40e750:	int    0xfe
  40e752:	aaa    
  40e753:	inc    ebp
  40e755:	cs dec edi
  40e757:	scas   al,BYTE PTR es:[edi]
  40e758:	xor    ecx,DWORD PTR [ebx+ecx*4]
  40e75b:	add    DWORD PTR [edi-0x4b],0xffffff95
  40e75f:	jnp    0x40e784
  40e761:	int3   
  40e762:	add    al,0x5
  40e764:	jmp    0xe5de4a6b
  40e769:	sbb    al,0x7c
  40e76b:	lods   eax,DWORD PTR ds:[esi]
  40e76c:	pop    edi
  40e76d:	outs   dx,DWORD PTR ds:[esi]
  40e76f:	(bad)  [ebp-0x451ad58]
  40e775:	pcmpgtb mm6,QWORD PTR [edi]
  40e778:	icebp  
  40e779:	stos   DWORD PTR es:[edi],eax
  40e77a:	out    dx,al
  40e77b:	es jbe 0x40e732
  40e77e:	jmp    0x60cb5cd5
  40e783:	outs   dx,DWORD PTR ds:[esi]
  40e784:	lods   eax,DWORD PTR ds:[esi]
  40e785:	clc    
  40e786:	(bad)  
  40e787:	lods   eax,DWORD PTR ds:[esi]
  40e788:	fisubr DWORD PTR [edx-0x7f02bd17]
  40e78e:	ins    BYTE PTR es:[edi],dx
  40e78f:	add    eax,0x332c04d4
  40e794:	cmp    eax,0x3e2422ab
  40e799:	mov    ah,0x49
  40e79b:	lds    edx,FWORD PTR [ebp-0x16eddd36]
  40e7a1:	or     BYTE PTR [edi+0x4eba9],0x0
	...
  40e7b4:	add    dh,bl
  40e7b6:	fs call 0x16214abf
  40e7bc:	test   al,0x86
  40e7be:	xor    BYTE PTR [ebx+0x4301d9af],0x0
  40e7c5:	sahf   
  40e7c6:	mov    ch,0x92
  40e7c8:	add    esi,DWORD PTR [ebx]
  40e7ca:	lods   al,BYTE PTR ds:[esi]
  40e7cb:	(bad)  
  40e7cc:	jnp    0x40e836
  40e7ce:	popf   
  40e7cf:	daa    
  40e7d0:	(bad)  
  40e7d1:	pop    ss
  40e7d2:	lods   al,BYTE PTR ds:[esi]
  40e7d3:	(bad)  
  40e7d4:	pop    esp
  40e7d5:	imul   ebp,DWORD PTR [esp+esi*2+0x6116d8f1],0xffffffd6
  40e7dd:	lock jge 0x40e824
  40e7e0:	popf   
  40e7e1:	dec    ebp
  40e7e2:	add    eax,0xac4b3cff
  40e7e7:	je     0x40e7da
  40e7e9:	clc    
  40e7ea:	cmp    eax,0x7fd0b6f8
  40e7ef:	dec    esp
  40e7f0:	aad    0xe5
  40e7f2:	in     eax,dx
  40e7f3:	call   FWORD PTR [ebx]
  40e7f5:	pusha  
  40e7f6:	lods   al,BYTE PTR ds:[esi]
  40e7f7:	je     0x40e78e
  40e7f9:	fistp  WORD PTR [edx]
  40e7fb:	xchg   si,ax
  40e7fd:	mov    al,0xdf
  40e7ff:	mov    edi,0x13c6ae2e
  40e804:	jmp    0x7e5919ba
  40e809:	call   0x74ab:0x14fcff11
  40e810:	fst    QWORD PTR [ecx]
  40e812:	xor    DWORD PTR [eax],ecx
  40e814:	push   ecx
  40e815:	in     al,dx
  40e816:	test   eax,0x5efe
	...
  40e827:	add    BYTE PTR [esp+ebp*2],bh
  40e82a:	je     0x40e812
  40e82c:	icebp  
  40e82d:	xor    ah,dh
  40e82f:	inc    ecx
  40e830:	cwde   
  40e831:	and    edi,edi
  40e833:	inc    esi
  40e834:	add    al,0x6c
  40e836:	pop    esi
  40e837:	xor    BYTE PTR ds:0x5ae0018,ah
  40e83d:	sub    eax,edi
  40e83f:	mov    ebx,0x174aae3
  40e844:	shl    BYTE PTR [eax],1
  40e846:	adc    al,0x1e
  40e848:	cmp    bh,BYTE PTR [ebp-0x550b6302]
  40e84e:	je     0x40e831
  40e850:	enter  0xfe21,0x0
  40e854:	pop    ebp
  40e855:	js     0x40e860
  40e857:	ror    ch,0x7c
  40e85a:	push   eax
  40e85b:	add    edx,ecx
  40e85d:	pop    es
  40e85e:	push   DWORD PTR [ebp-0x2a]
  40e861:	(bad)  
  40e862:	adc    al,0x66
  40e864:	mov    ebp,0x7dc02976
  40e869:	push   0xffffffc0
  40e86b:	adc    al,0xca
  40e86d:	mov    BYTE PTR [ecx+eax*1],bh
  40e870:	mov    edx,0x9e7d8307
  40e875:	add    al,0xf
  40e877:	test   DWORD PTR [esi+0x61000000],edx
  40e87d:	js     0x40e866
  40e87f:	and    al,0x7b
  40e881:	pop    es
  40e882:	add    BYTE PTR [ebx+0x4896d47],cl
  40e888:	add    BYTE PTR [ebx],al
  40e88a:	inc    ebp
  40e88b:	lock add BYTE PTR [eax],al
	...
  40e89a:	add    BYTE PTR [eax+0x1],ah
  40e89d:	push   eax
  40e89e:	call   DWORD PTR [edi-0x57]
  40e8a1:	out    0x74,al
  40e8a3:	aas    
  40e8a4:	js     0x40e8a3
  40e8a6:	push   0x4a
  40e8a8:	js     0x40e91d
  40e8aa:	adc    al,0xcd
  40e8ac:	in     eax,dx
  40e8ad:	pop    es
  40e8ae:	call   0x3e584c
  40e8b3:	rol    DWORD PTR [ebp+0x14],1
  40e8b6:	add    DWORD PTR [ebx-0x72f08aff],0xffffffed
  40e8bd:	repz call 0x3fc645
  40e8c3:	push   ecx
  40e8c4:	rcr    DWORD PTR [ebp-0x37],0x48
  40e8c8:	adc    al,BYTE PTR [eax]
  40e8ca:	or     edi,DWORD PTR [eax-0xe]
  40e8cd:	add    al,0xe9
  40e8cf:	dec    esi
  40e8d0:	push   es
  40e8d1:	add    BYTE PTR [eax],al
  40e8d3:	xchg   ebx,eax
  40e8d4:	cmp    eax,0x780a6aec
  40e8d9:	jae    0x40e8ef
  40e8db:	arpl   WORD PTR [ebx],dx
  40e8dd:	cmp    BYTE PTR [eax],cl
  40e8df:	sti    
  40e8e0:	(bad)  
  40e8e1:	mov    ecx,0x4037e4fe
  40e8e6:	adc    al,0xe0
  40e8e8:	lds    eax,FWORD PTR [edx]
  40e8ea:	jne    0x40e950
  40e8ec:	mov    bl,0x36
  40e8ee:	hlt    
  40e8ef:	mov    ebx,0xc4ff2854
  40e8f4:	pop    ss
  40e8f5:	les    ebx,FWORD PTR [esi-0x56]
  40e8f8:	pop    esi
  40e8f9:	pop    ss
  40e8fa:	add    BYTE PTR [ecx+ecx*1+0x6628],dh
	...
  40e90d:	add    BYTE PTR [edx],ah
  40e90f:	pushf  
  40e910:	jg     0x40e956
  40e912:	mov    ebx,0xe0e84737
  40e917:	aam    0xff
  40e919:	rol    BYTE PTR [ebx-0x352e2467],0x5b
  40e920:	add    eax,DWORD PTR [eax]
  40e922:	arpl   WORD PTR [ebx-0x4c747d4e],cx
  40e928:	jns    0x40e96e
  40e92a:	sbb    DWORD PTR [edi],0x1f
  40e92d:	call   0xec881072
  40e932:	sub    cl,bl
  40e934:	fwait
  40e935:	jbe    0x40e998
  40e937:	xchg   edi,eax
  40e938:	fisubr DWORD PTR [edx]
  40e93a:	xor    DWORD PTR [edi],esp
  40e93c:	inc    edi
  40e93d:	in     al,dx
  40e93e:	js     0x40e921
  40e940:	mov    ds:0x8554968a,eax
  40e945:	rol    BYTE PTR [eax+0x2c039b1f],0x4d
  40e94c:	add    eax,0x57254355
  40e951:	in     al,0xd8
  40e953:	pop    eax
  40e954:	call   0xe805:0x3540a63a
  40e95b:	pop    eax
  40e95c:	mov    ds:0x472760ea,al
  40e961:	in     al,0x4
  40e963:	add    eax,0x2ffc179c
  40e968:	or     eax,0xe12ff454
  40e96d:	fwait
  40e96e:	ret    
  40e96f:	mov    cl,0xd
  40e971:	mov    cl,0x0
	...
  40e97f:	add    BYTE PTR [eax],al
  40e981:	pop    ecx
  40e982:	lds    edi,FWORD PTR [ebx+0x0]
  40e985:	fsubr  QWORD PTR [edi]
  40e987:	cmc    
  40e988:	fwait
  40e989:	jbe    0x40e9ab
  40e98b:	div    BYTE PTR [eax-0x45723a87]
  40e991:	mov    ds:0x277ae910,al
  40e996:	leave  
  40e997:	jno    0x40e96c
  40e999:	out    0x3f,eax
  40e99b:	mov    ebp,0xb13fde53
  40e9a0:	push   ebx
  40e9a1:	adc    DWORD PTR [ebp-0x5662539e],ebx
  40e9a7:	outs   dx,DWORD PTR ds:[esi]
  40e9a8:	inc    esi
  40e9a9:	mov    bl,0xa9
  40e9ab:	cmp    edx,eax
  40e9ad:	test   BYTE PTR [edx],ah
  40e9af:	or     eax,0x238585b1
  40e9b4:	aam    0x7c
  40e9b6:	xor    eax,0xccf784fc
  40e9bb:	call   0x13eb3df7
  40e9c0:	fsub   DWORD PTR [ebp+0x2f]
  40e9c3:	mov    eax,ds:0x7df9d7b0
  40e9c8:	imul   ebp,DWORD PTR ss:[eax+0x334c0c1b],0xffffff91
  40e9d0:	fwait
  40e9d1:	bound  ebp,QWORD PTR [ebp+eiz*2-0x24135a50]
  40e9d8:	stos   DWORD PTR es:[edi],eax
  40e9d9:	cmp    DWORD PTR gs:[ecx],0xffffffb1
  40e9dd:	sub    eax,0x2f364da9
  40e9e2:	sahf   
  40e9e3:	sub    al,0x27
	...
  40e9f1:	add    BYTE PTR [eax],al
  40e9f3:	add    BYTE PTR [ecx+ebp*4],bl
  40e9f6:	add    BYTE PTR [edx],0x63
  40e9f9:	add    eax,0xbeb3e900
  40e9fe:	rcl    ebp,0x60
  40ea01:	push   edx
  40ea02:	mov    edx,DWORD PTR ds:0xf174a89b
  40ea08:	fdiv   DWORD PTR [ecx+esi*2-0x5edf4cea]
  40ea0f:	stos   BYTE PTR es:[edi],al
  40ea10:	mov    eax,ds:0xd87cff05
  40ea15:	mov    al,ds:0x560b63c
  40ea1a:	or     ebp,DWORD PTR [ecx]
  40ea1c:	xchg   ebp,eax
  40ea1d:	add    bl,BYTE PTR [edi+0x20]
  40ea20:	sahf   
  40ea21:	add    BYTE PTR [eax],al
  40ea23:	scas   eax,DWORD PTR es:[edi]
  40ea24:	addr16 add eax,0xa0b754ff
  40ea2a:	rcr    BYTE PTR [ebx-0x4],cl
  40ea2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea2e:	mov    esi,0x46208a
  40ea33:	(bad)  
  40ea34:	pop    edx
  40ea35:	std    
  40ea36:	push   esi
  40ea37:	rcr    DWORD PTR [esi-0x11],1
  40ea3a:	(bad)  
  40ea3b:	call   0xe4b552c9
  40ea40:	adc    eax,0x60f1c1be
  40ea45:	test   eax,0xa706a932
  40ea4a:	(bad)  
  40ea4b:	xchg   esi,eax
  40ea4c:	mov    esp,0x5dd1adb6
  40ea51:	xor    ah,al
  40ea53:	xchg   BYTE PTR [edx+0x5e7fd],bl
	...
  40ea65:	add    BYTE PTR [eax],al
  40ea67:	pop    edx
  40ea68:	test   al,0xfe
  40ea6a:	loop   0x40ea8c
  40ea6c:	xor    DWORD PTR ds:0x7c6060e,eax
  40ea72:	jmp    0xa883becf
  40ea77:	pusha  
  40ea78:	test   al,0x74
  40ea7a:	loope  0x40ea44
  40ea7c:	mov    ebx,0xfc60e934
  40ea81:	mov    edi,0xfda8df00
  40ea86:	jne    0x40ea8e
  40ea88:	daa    
  40ea89:	add    al,0x6c
  40ea8b:	sbb    al,0x41
  40ea8d:	add    BYTE PTR [eax+0x54],ch
  40ea90:	inc    esp
  40ea91:	inc    ecx
  40ea92:	add    BYTE PTR [ebp-0x12],al
  40ea95:	pop    es
  40ea96:	call   0x3f9933
  40ea9b:	add    esp,eax
  40ea9d:	jae    0x40eaa8
  40ea9f:	push   ebp
  40eaa0:	out    dx,al
  40eaa1:	or     ecx,DWORD PTR [edi+0x4165f3cf]
  40eaa7:	retf   0xed0b
  40eaaa:	inc    ebx
  40eaab:	sti    
  40eaac:	add    edi,edi
  40eaae:	jne    0x40ea72
  40eab0:	mov    edx,DWORD PTR [esi+0xb03ca35]
  40eab6:	ror    BYTE PTR [edi],0xaa
  40eab9:	std    
  40eaba:	jne    0x40ea82
  40eabc:	es add al,0x74
  40eabf:	sbb    al,0x42
  40eac1:	add    BYTE PTR [eax+0x38b],bh
  40eac7:	jne    0x40eb33
  40eac9:	ror    BYTE PTR [eax],0x0
	...
  40ead8:	add    BYTE PTR [eax],al
  40eada:	jp     0x40eb28
  40eadc:	mov    ebp,esp
  40eade:	stc    
  40eadf:	mov    edi,0x93d56f2
  40eae4:	popf   
  40eae5:	inc    ebx
  40eae6:	dec    ebx
  40eae7:	add    edi,edi
  40eae9:	jne    0x40ea6d
  40eaeb:	mov    eax,DWORD PTR [esi+esi*1-0x3ff4fc86]
  40eaf2:	pop    edi
  40eaf3:	add    DWORD PTR [edi+0x5e],ebx
  40eaf6:	adc    eax,ebp
  40eaf8:	add    al,BYTE PTR [eax]
  40eafa:	jp     0x40eb26
  40eafc:	out    dx,eax
  40eafd:	mov    esi,DWORD PTR [edi]
  40eaff:	stos   DWORD PTR es:[edi],eax
  40eb00:	jmp    0x3cc3d906
  40eb05:	add    BYTE PTR [edi],cl
  40eb07:	pop    ebp
  40eb08:	mov    ds:0x422f6368,al
  40eb0d:	inc    ecx
  40eb0e:	arpl   WORD PTR [edi],si
  40eb10:	cmp    BYTE PTR [eax],cl
  40eb12:	or     edi,DWORD PTR [ebp-0x4beb000c]
  40eb18:	ret    0x6574
  40eb1b:	(bad)  
  40eb1c:	dec    esp
  40eb1d:	leave  
  40eb1e:	and    DWORD PTR [ecx-0x4b8174fe],esp
  40eb24:	cdq    
  40eb25:	and    ebx,esp
  40eb27:	(bad)  
  40eb28:	sti    
  40eb29:	jae    0x40eb75
  40eb2b:	sbb    al,0xee
  40eb2d:	or     al,0x6f
  40eb2f:	mov    al,0x82
  40eb31:	imul   ebp,DWORD PTR ds:[eax],0x63947ffe
  40eb38:	ss or  ah,bl
  40eb3b:	outs   dx,DWORD PTR ds:[esi]
  40eb3c:	dec    edi
  40eb3d:	je     0x40eb3f
	...
  40eb4b:	add    BYTE PTR [eax],al
  40eb4d:	pop    esi
  40eb4e:	sbb    al,0xee
  40eb50:	pop    edi
  40eb51:	ss fwait
  40eb53:	les    eax,FWORD PTR [esi]
  40eb55:	sbb    edi,0xffffff83
  40eb58:	arpl   WORD PTR ds:[ecx-0x35],cx
  40eb5c:	(bad)  
  40eb5d:	push   ds
  40eb5e:	mov    eax,0x9c630003
  40eb63:	ret    
  40eb64:	inc    esp
  40eb65:	fwait
  40eb66:	pushf  
  40eb67:	add    al,BYTE PTR [eax]
  40eb69:	arpl   WORD PTR [ebx],sp
  40eb6b:	das    
  40eb6c:	or     BYTE PTR [eax-0x1d],bh
  40eb6f:	cmp    DWORD PTR [esi],0x44
  40eb72:	or     ecx,ebx
  40eb74:	xor    dh,0x87
  40eb77:	add    esi,DWORD PTR [ebp+0x51]
  40eb7a:	xchg   DWORD PTR [esi-0x8],eax
  40eb7d:	bound  ebx,QWORD PTR [edx+eax*1-0x3c5f2a00]
  40eb84:	inc    esp
  40eb85:	push   edi
  40eb86:	popf   
  40eb87:	add    al,BYTE PTR [eax]
  40eb89:	arpl   WORD PTR [ebx+0x349ef710],ax
  40eb8f:	add    eax,DWORD PTR [eax]
  40eb91:	arpl   WORD PTR ds:0xbf6936e9,ax
  40eb97:	in     eax,0xe3
  40eb99:	and    eax,0x63045540
  40eb9e:	add    eax,0x495d83e9
  40eba3:	mov    esp,0x41401406
  40eba8:	cdq    
  40eba9:	gs mov esi,0xa604abab
  40ebaf:	call   0x40ebb7
	...
  40ebc0:	loopne 0x40ebe9
  40ebc2:	and    eax,0x27026e03
  40ebc7:	add    eax,0xed693e43
  40ebcc:	in     al,0x30
  40ebce:	pop    ecx
  40ebcf:	jns    0x40ec30
  40ebd1:	std    
  40ebd2:	adc    DWORD PTR [eax],edx
  40ebd4:	jecxz  0x40ebbb
  40ebd6:	enter  0x7536,0x85
  40ebda:	jne    0x40ebde
  40ebdc:	xor    DWORD PTR [eax],0xffffffd9
  40ebdf:	push   esp
  40ebe0:	enter  0x72fe,0x44
  40ebe4:	bound  edi,QWORD PTR [ebp-0x1b]
  40ebe7:	inc    esp
  40ebe8:	jecxz  0x40ebcf
  40ebea:	call   0x1e869a25
  40ebef:	inc    ebp
  40ebf0:	jecxz  0x40ebd7
  40ebf2:	call   0x23fea02d
  40ebf7:	mov    eax,0x3e8a58c
  40ebfc:	fsubr  DWORD PTR [edi]
  40ebfe:	loope  0x40ec78
  40ec00:	(bad)  
  40ec01:	cld    
  40ec02:	xchg   ecx,eax
  40ec03:	loope  0x40ebf9
  40ec05:	in     eax,0xcc
  40ec07:	ss dec edi
  40ec09:	mov    edi,0x2f6403ed
  40ec0e:	xchg   ebp,eax
  40ec0f:	push   ebp
  40ec10:	dec    ebx
  40ec11:	icebp  
  40ec12:	xchg   BYTE PTR [ebp+edx*2+0x6536a911],ch
  40ec19:	inc    esp
  40ec1a:	add    BYTE PTR [edi],dl
  40ec1c:	or     bh,al
  40ec1e:	add    ebp,ecx
  40ec20:	mov    ebx,0x66459b
	...
  40ec31:	add    BYTE PTR [eax],al
  40ec33:	popf   
  40ec34:	cdq    
  40ec35:	inc    esi
  40ec36:	imul   edi,DWORD PTR [edi],0xf73073a5
  40ec3c:	sbb    esp,esi
  40ec3e:	mov    bh,0xf8
  40ec40:	adc    dh,bh
  40ec42:	inc    esi
  40ec43:	mov    DWORD PTR [ebx+0x5e],0x92230
  40ec4a:	pushf  
  40ec4b:	mov    esi,DWORD PTR [eax+0x3ab82582]
  40ec51:	push   edi
  40ec52:	push   0x45
  40ec54:	stc    
  40ec55:	call   DWORD PTR [ecx+ebp*8+0x8183c87]
  40ec5c:	inc    esi
  40ec5d:	add    cl,ch
  40ec5f:	xchg   ebp,eax
  40ec60:	or     ebx,DWORD PTR [edi-0x59]
  40ec63:	sbb    edi,eax
  40ec65:	psubsw mm1,QWORD PTR [ebx+0x49]
  40ec69:	adc    al,0xb0
  40ec6b:	pop    ebp
  40ec6c:	xor    DWORD PTR [esi-0x58],esp
  40ec6f:	pusha  
  40ec70:	adc    al,0x83
  40ec72:	mov    bl,BYTE PTR [esi+0x5]
  40ec75:	add    BYTE PTR [eax],ah
  40ec77:	bound  edx,QWORD PTR ds:0x145f2866
  40ec7d:	xor    DWORD PTR [esi+0x66],0x5
  40ec81:	add    BYTE PTR [eax],al
  40ec83:	bound  ebx,QWORD PTR [ecx]
  40ec85:	data16 sub BYTE PTR [edi+0x14],ah
  40ec89:	and    DWORD PTR [edx+0x5e],0x5
  40ec8d:	add    BYTE PTR [edx+eiz*1-0x67],bl
  40ec91:	dec    edi
  40ec92:	je     0x40ecb6
  40ec94:	popf   
  40ec95:	dec    edi
  40ec96:	ins    BYTE PTR es:[edi],dx
	...
  40eca3:	add    BYTE PTR [eax],al
  40eca5:	add    BYTE PTR [edx],ah
  40eca7:	mov    eax,ds:0x3072964f
  40ecac:	data16 sub BYTE PTR [edi-0x5c],ah
  40ecb0:	je     0x40ecb2
  40ecb2:	cmp    al,BYTE PTR [eax+0x70cdf8bc]
  40ecb8:	mov    eax,DWORD PTR [ebp-0x1e]
  40ecbb:	cmp    BYTE PTR [ebp-0x72c641bb],cl
  40ecc1:	inc    ebp
  40ecc2:	call   0x40e6:0x1635ff39
  40ecc9:	add    BYTE PTR [ebp-0x1917f02a],cl
  40eccf:	jo     0x40ecce
  40ecd1:	dec    DWORD PTR [edi+0x7f50dc46]
  40ecd7:	inc    esi
  40ecd8:	loopne 0x40ed2a
  40ecda:	jg     0x40ed22
  40ecdc:	in     al,0x50
  40ecde:	dec    ebp
  40ecdf:	xchg   esi,eax
  40ece0:	outs   dx,BYTE PTR ds:[esi]
  40ece1:	retfw  
  40ece3:	pop    es
  40ece4:	push   DWORD PTR [ebp-0x16]
  40ece7:	jg     0x40ec71
  40ece9:	clc    
  40ecea:	dec    ebp
  40eceb:	jo     0x40ecea
  40eced:	jne    0x40ed55
  40ecef:	and    BYTE PTR [esp+edx*8+0x5d],al
  40ecf3:	(bad)  
  40ecf4:	fisttp DWORD PTR [edi+0x45c5d007]
  40ecfa:	push   0x9
  40ecfc:	add    BYTE PTR [eax],al
  40ecfe:	retf   0x441c
  40ed01:	int3   
  40ed02:	jp     0x40ed07
  40ed04:	add    DWORD PTR [edx-0x46],ebp
  40ed07:	add    DWORD PTR [eax],eax
  40ed09:	push   0x0
	...
  40ed17:	add    BYTE PTR [eax],al
  40ed19:	mov    edx,0x478d0001
  40ed1e:	mov    ch,0x4e
  40ed20:	push   DWORD PTR [edi+0x7a412658]
  40ed26:	mov    ds:0xa1f60fbe,al
  40ed2b:	(bad)  
  40ed2c:	dec    DWORD PTR [edx-0x752f8476]
  40ed32:	sahf   
  40ed33:	add    BYTE PTR [eax],0x7b
  40ed36:	pop    es
  40ed37:	add    BYTE PTR [ebx+0x3ab7e963],cl
  40ed3d:	scas   al,BYTE PTR es:[edi]
  40ed3e:	mov    cl,bh
  40ed40:	xchg   BYTE PTR [edi-0x53],cl
  40ed43:	add    al,BYTE PTR [eax]
  40ed45:	dec    edi
  40ed46:	sbb    BYTE PTR [eax],dh
  40ed48:	rcr    al,1
  40ed4a:	cdq    
  40ed4b:	(bad)  
  40ed4c:	mov    ch,BYTE PTR [esi+0x3001a580]
  40ed52:	xchg   ecx,eax
  40ed53:	test   eax,0x40341f74
  40ed58:	in     al,0x24
  40ed5a:	ret    0xe7d2
  40ed5d:	cmp    al,0xff
  40ed5f:	add    eax,DWORD PTR [eax]
  40ed61:	loopne 0x40ed2c
  40ed63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed64:	call   FWORD PTR [ebp+0x28]
  40ed67:	mov    ecx,0x85ad04ff
  40ed6c:	jl     0x40ed61
  40ed6e:	lods   al,BYTE PTR ds:[esi]
  40ed6f:	stc    
  40ed70:	sbb    DWORD PTR [edi],0xffffffad
  40ed73:	add    al,BYTE PTR [eax]
  40ed75:	loopne 0x40ecf8
  40ed77:	sahf   
  40ed78:	call   DWORD PTR [ebp+0x30]
  40ed7b:	ins    DWORD PTR es:[edi],dx
  40ed7c:	inc    DWORD PTR [eax]
	...
  40ed8a:	add    BYTE PTR [eax],al
  40ed8c:	fsubr  QWORD PTR [ecx+ebp*4+0x6cf4d774]
  40ed93:	pusha  
  40ed94:	int3   
  40ed95:	mov    ds:0x9b9b447a,eax
  40ed9a:	cs cld 
  40ed9c:	mov    esp,0x2efebb19
  40eda1:	rcr    BYTE PTR [ebx-0x573cbd21],0x67
  40eda8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eda9:	out    dx,eax
  40edaa:	inc    edx
  40edab:	add    BYTE PTR [ebx-0x6b0009c0],cl
  40edb1:	cld    
  40edb2:	sbb    edi,esp
  40edb4:	and    ch,ch
  40edb6:	add    edi,edi
  40edb8:	push   cs
  40edb9:	fs fwait
  40edbb:	sub    eax,0xb02ac37
  40edc0:	mov    ds:0xfb0c1d05,eax
  40edc5:	add    eax,0xad634325
  40edca:	sbb    dh,dh
  40edcc:	pop    esp
  40edcd:	mov    ds:0x49601c38,al
  40edd2:	sub    BYTE PTR [esp+ecx*2],al
  40edd5:	sbb    BYTE PTR [ecx-0x17268d64],dh
  40eddb:	add    ebp,DWORD PTR [eax-0x3b]
  40edde:	hlt    
  40eddf:	or     ecx,ebx
  40ede1:	push   cs
  40ede2:	lods   eax,DWORD PTR ds:[esi]
  40ede3:	inc    edx
  40ede4:	arpl   WORD PTR [ebp-0x5ddb0a4c],bp
  40edea:	mov    eax,0xa849681b
  40edef:	add    eax,DWORD PTR [eax]
	...
  40edfd:	add    BYTE PTR [eax],al
  40edff:	adc    al,0x18
  40ee01:	xor    DWORD PTR [esi+edx*1+0x5803e8d6],ebx
  40ee08:	lds    edi,FWORD PTR [ebx-0x16fa74c2]
  40ee0e:	cwde   
  40ee0f:	mov    dh,0xa1
  40ee11:	fwait
  40ee12:	test   DWORD PTR [edi+ebx*2],0xa1e5a8bb
  40ee19:	fistp  DWORD PTR [ebx]
  40ee1b:	inc    ebp
  40ee1c:	inc    esp
  40ee1d:	jmp    0x11523dca
  40ee22:	pop    eax
  40ee23:	das    
  40ee24:	mov    ds:0xa14fa8fd,al
  40ee29:	cmc    
  40ee2a:	cs mov bh,0xa1
  40ee2d:	jae    0x40ee26
  40ee2f:	mov    esp,0xada943b8
  40ee34:	mov    eax,ds:0x17a5b453
  40ee39:	shr    DWORD PTR [eax-0x3e3eeee9],0x37
  40ee40:	mov    ds:0xa917a8c5,al
  40ee45:	mov    ebp,0xffa1a72e
  40ee4a:	cmp    edi,DWORD PTR [ebx-0x57]
  40ee4d:	mov    bh,0xc
  40ee4f:	retf   0xfea2
  40ee52:	sbb    al,0xaf
  40ee54:	test   eax,0xa2ba09f0
  40ee59:	pop    esi
  40ee5a:	aaa    
  40ee5b:	sbb    bh,al
  40ee5d:	psubsw mm4,QWORD PTR [ebp+0x6aeb8c]
	...
  40ee70:	add    BYTE PTR [eax],al
  40ee72:	or     al,0xa9
  40ee74:	cmp    ah,0x54
  40ee77:	or     cl,BYTE PTR [edi]
  40ee79:	ins    BYTE PTR es:[edi],dx
  40ee7a:	push   edi
  40ee7b:	push   es
  40ee7c:	add    cl,ch
  40ee7e:	lods   eax,DWORD PTR ds:[esi]
  40ee7f:	dec    ecx
  40ee80:	hlt    
  40ee81:	mov    ecx,0xb9f849b5
  40ee86:	lods   eax,DWORD PTR ds:[esi]
  40ee87:	dec    ecx
  40ee88:	cld    
  40ee89:	mov    ecx,0xd4ff037e
  40ee8e:	jo     0x40ee3d
  40ee90:	and    BYTE PTR [esi],bh
  40ee92:	mov    ebx,0xb8bc829f
  40ee97:	add    eax,0xa0b76c0f
  40ee9c:	(bad)  
  40ee9d:	jmp    0x7735086d
  40eea2:	sub    eax,0x9f2d6795
  40eea7:	inc    esi
  40eea8:	add    BYTE PTR [esi],dl
  40eeaa:	lea    edx,[ebp-0x5f313c19]
  40eeb0:	(bad)  
  40eeb1:	repnz mov al,ds:0x6021850f
  40eeb7:	add    eax,0x997d6400
  40eebc:	dec    edi
  40eebd:	pop    esp
  40eebe:	jne    0x40ee5d
  40eec0:	dec    edi
  40eec1:	je     0x40eee5
  40eec3:	mov    eax,ds:0xa05f534f
  40eec8:	je     0x40eec3
  40eeca:	clc    
  40eecb:	stos   BYTE PTR es:[edi],al
  40eecc:	cmc    
  40eecd:	into   
  40eece:	mov    esp,0xa2007c83
  40eed3:	or     cl,BYTE PTR [edi]
  40eed5:	test   DWORD PTR [eax],eax
	...
  40eee3:	add    BYTE PTR [eax],al
  40eee5:	loop   0x40eef0
  40eee7:	add    BYTE PTR [eax],al
  40eee9:	mov    ch,0xd6
  40eeeb:	repz push 0x41440d
  40eef1:	rcr    BYTE PTR [edx-0x6485ffd0],cl
  40eef7:	mov    esi,0xff24cf0f
  40eefc:	dec    DWORD PTR [edx+0x1d]
  40eeff:	inc    esp
  40ef00:	hlt    
  40ef01:	push   0x1e
  40ef03:	inc    esp
  40ef04:	clc    
  40ef05:	push   0x1e
  40ef07:	inc    esp
  40ef08:	cld    
  40ef09:	pop    edx
  40ef0a:	sti    
  40ef0b:	add    bh,bh
  40ef0d:	das    
  40ef0e:	hlt    
  40ef0f:	out    0xb1,eax
  40ef11:	mov    WORD PTR [eax-0x3],gs
  40ef14:	add    DWORD PTR [edi],0x6c
  40ef17:	dec    BYTE PTR [esi]
  40ef19:	pop    DWORD PTR [esi+edi*8+0x441b0aff]
  40ef20:	hlt    
  40ef21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef22:	cdq    
  40ef23:	lea    eax,[ebp-0x6a]
  40ef26:	push   ds
  40ef27:	inc    esp
  40ef28:	hlt    
  40ef29:	ficomp DWORD PTR [esp+eax*2]
  40ef2c:	clc    
  40ef2d:	ficomp DWORD PTR [esp+eax*2]
  40ef30:	cld    
  40ef31:	stos   BYTE PTR es:[edi],al
  40ef32:	std    
  40ef33:	add    edi,edi
  40ef35:	iret   
  40ef36:	repz out 0x89,eax
  40ef39:	jl     0x40efa3
  40ef3b:	std    
  40ef3c:	and    edi,0x6b
  40ef3f:	push   DWORD PTR [ebp+eax*1+0x5f]
  40ef43:	add    ebp,DWORD PTR [esp+ebx*8+0x48]
  40ef47:	add    bh,bh
	...
  40ef55:	add    BYTE PTR [eax],al
  40ef57:	add    BYTE PTR [ebp-0x4038029a],dh
  40ef5d:	shl    DWORD PTR [ebp+0x41],cl
  40ef60:	mov    edx,0x85fffd66
  40ef65:	pop    esi
  40ef66:	add    esi,DWORD PTR [ebx+eiz*2+0x50]
  40ef6a:	inc    ebp
  40ef6b:	add    BYTE PTR [esi+ecx*8-0x1f73015b],dl
  40ef72:	scas   eax,DWORD PTR es:[edi]
  40ef73:	out    0x61,eax
  40ef75:	bound  esp,QWORD PTR [ebp-0x640f5b02]
  40ef7b:	add    BYTE PTR [ebx-0x52],ah
  40ef7e:	add    al,BYTE PTR [ebx+0x411dfa2e]
  40ef84:	arpl   WORD PTR [edi+0x2e],di
  40ef87:	sub    eax,esp
  40ef89:	mov    ecx,0xaca26632
  40ef8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef8f:	jae    0x40ef14
  40ef91:	sub    ebp,eax
  40ef93:	jae    0x40ef52
  40ef95:	in     eax,dx
  40ef96:	add    edi,edi
  40ef98:	mov    bh,0xbf
  40ef9a:	sbb    dh,al
  40ef9c:	out    dx,al
  40ef9d:	in     al,dx
  40ef9e:	add    ecx,DWORD PTR [ebp-0xaccb5a]
  40efa4:	scas   al,BYTE PTR es:[edi]
  40efa5:	push   eax
  40efa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa7:	je     0x40f018
  40efa9:	aaa    
  40efaa:	xor    BYTE PTR [eax],cl
  40efac:	or     esp,DWORD PTR [ebp-0x29f30156]
  40efb2:	ror    BYTE PTR [edi],0x63
  40efb5:	jns    0x40f030
  40efb7:	jmp    0x40ef99
  40efb9:	lock xchg esi,eax
  40efbb:	inc    BYTE PTR [eax]
	...
  40efc9:	add    BYTE PTR [eax],al
  40efcb:	outs   dx,BYTE PTR ds:[esi]
  40efcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efcd:	call   0x5369:0xa5e78a9c
  40efd4:	xor    DWORD PTR [eax-0x10],eax
  40efd7:	xor    esi,edi
  40efd9:	das    
  40efda:	or     bl,cl
  40efdc:	xchg   edi,eax
  40efdd:	dec    edx
  40efde:	dec    esp
  40efe0:	xchg   ebx,eax
  40efe1:	ret    0x5f74
  40efe4:	aad    0xc0
  40efe6:	pop    es
  40efe7:	arpl   WORD PTR [edx+0x6bdc6812],ax
  40efed:	inc    ebx
  40efee:	add    dh,bl
  40eff0:	add    eax,0xad14b42c
  40eff5:	aad    0x45
  40eff7:	pushf  
  40eff8:	sahf   
  40eff9:	loope  0x40efbe
  40effb:	wbinvd 
  40effd:	mov    al,ds:0xae0564c2
  40f002:	aas    
  40f003:	ja     0x40f009
  40f005:	jmp    0x2bd1530d
  40f00a:	cwde   
  40f00b:	and    al,0x9e
  40f00d:	xor    edi,esp
  40f00f:	test   al,ch
  40f011:	inc    edx
  40f012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f013:	or     ch,BYTE PTR gs:[ecx+0x13826530]
  40f01a:	cwde   
  40f01b:	push   esp
  40f01c:	sbb    edi,esp
  40f01e:	fmul   DWORD PTR [esp+ecx*8]
  40f021:	stos   BYTE PTR es:[edi],al
  40f022:	cld    
  40f023:	inc    esp
  40f024:	dec    esi
  40f025:	sar    BYTE PTR [edx-0x6367f7b7],cl
  40f02b:	mov    cl,0x4
  40f02d:	sub    cl,bh
	...
  40f03b:	add    BYTE PTR [eax],al
  40f03d:	add    ah,ch
  40f03f:	pop    ss
  40f040:	pop    esi
  40f041:	dec    esp
  40f042:	loopne 0x40efe0
  40f044:	out    0x2e,eax
  40f046:	pop    bp
  40f048:	call   0x6a465250
  40f04d:	stos   DWORD PTR es:[edi],eax
  40f04e:	arpl   WORD PTR [ecx],bx
  40f050:	out    dx,eax
  40f051:	fadd   st,st(4)
  40f053:	retf   
  40f054:	sub    bh,ah
  40f056:	cld    
  40f057:	(bad)  
  40f058:	int3   
  40f059:	sbb    eax,0x3f5c05a2
  40f05e:	push   DWORD PTR [esi+eiz*1]
  40f061:	das    
  40f062:	pop    ebx
  40f063:	lods   eax,DWORD PTR ds:[esi]
  40f064:	jmp    0x40f0af
  40f066:	fcomp  QWORD PTR [ebp+0x1963ac69]
  40f06c:	in     al,0x80
  40f06e:	aam    0x2
  40f070:	jl     0x40f06f
  40f072:	loope  0x40f093
  40f074:	or     eax,0x73604
  40f079:	ret    0xcca0
  40f07c:	shl    ecx,0x60
  40f07f:	nop
  40f080:	inc    esp
  40f081:	aad    0x10
  40f083:	sahf   
  40f084:	je     0x40f077
  40f086:	clc    
  40f087:	stos   BYTE PTR es:[edi],al
  40f088:	pop    eax
  40f089:	(bad)  
  40f08a:	mov    edi,0x3ce8f782
  40f08f:	or     BYTE PTR [ebx+0x61862c1],al
  40f095:	push   0x45
  40f097:	mov    cl,0xff
  40f099:	cmp    esi,DWORD PTR [ebp-0x16]
  40f09c:	mov    edi,0x5a2a0
  40f0a1:	je     0x40f0a3
	...
  40f0af:	add    BYTE PTR [eax],al
  40f0b1:	and    eax,0x8d9e4fb1
  40f0b6:	or     eax,0x9ca9a0e8
  40f0bb:	(bad)  
  40f0bc:	loop   0x40f0de
  40f0be:	adc    al,BYTE PTR [esi]
  40f0c0:	push   0x7d
  40f0c2:	test   eax,0xf03ef3ff
  40f0c7:	mov    edi,0x522a0
  40f0cc:	pop    esp
  40f0cd:	ins    DWORD PTR es:[edi],dx
  40f0ce:	test   eax,0xd75664f
  40f0d3:	call   0xfedd9a64
  40f0d8:	push   0xffffffc8
  40f0da:	fdiv   QWORD PTR [edi+eiz*8-0x1d]
  40f0de:	sbb    esp,ebp
  40f0e0:	jmp    0x296bf41a
  40f0e5:	mov    ecx,0x6de907c6
  40f0ea:	inc    ecx
  40f0eb:	in     al,dx
  40f0ec:	cdq    
  40f0ed:	(bad)  
  40f0ee:	adc    DWORD PTR [eax],ecx
  40f0f0:	adc    eax,edx
  40f0f2:	cmp    eax,0x94e31eff
  40f0f7:	pop    ds
  40f0f8:	pushf  
  40f0f9:	(bad)  
  40f0fa:	xchg   DWORD PTR [ebp+edi*8+0x61],edi
  40f0fe:	adc    al,BYTE PTR [esi]
  40f100:	add    BYTE PTR [ecx-0x4d3d3838],dh
  40f106:	or     BYTE PTR [ebp-0xc7a1bb],cl
  40f10c:	jne    0x40f0d0
  40f10e:	xor    BYTE PTR [ecx+0x59],0xbd
  40f112:	push   0xf881
	...
  40f123:	add    BYTE PTR [edx-0x2],ch
  40f126:	add    eax,0xfe552f83
  40f12b:	je     0x40f0b1
  40f12d:	stos   DWORD PTR es:[edi],eax
  40f12e:	mov    esi,0x9b8c9
  40f133:	lea    eax,[edi+0x55]
  40f136:	dec    esi
  40f137:	push   0x6a
  40f139:	push   0xe8a20873
  40f13e:	pop    eax
  40f13f:	(bad)  
  40f140:	mov    ebp,0x9aec4376
  40f145:	push   0x57e20873
  40f14a:	push   esi
  40f14b:	(bad)  
  40f14c:	fld    QWORD PTR [ebx+0xb4801f6]
  40f152:	cmp    eax,0x49
  40f155:	inc    DWORD PTR ds:0xfe6c2f83
  40f15b:	je     0x40f1a1
  40f15d:	stos   DWORD PTR es:[edi],eax
  40f15e:	mov    esi,0x978c9
  40f163:	mov    ds:0x40ee32,eax
  40f168:	jg     0x40f1b8
  40f16a:	in     al,dx
  40f16b:	push   eax
  40f16c:	and    BYTE PTR [eax+0x701275fd],dh
  40f172:	dec    eax
  40f173:	pop    ecx
  40f174:	cmp    eax,0x75c56668
  40f179:	inc    ecx
  40f17a:	add    BYTE PTR [ebp+0x6a4e6bc7],cl
  40f180:	sti    
  40f181:	data16 jae 0x40f190
  40f184:	jge    0x40f184
  40f186:	pop    es
  40f187:	call   0x40f18c
	...
  40f194:	add    BYTE PTR [eax],al
  40f196:	add    BYTE PTR [ebx-0x7e],ah
  40f199:	cwde   
  40f19a:	dec    ah
  40f19c:	in     al,0xc5
  40f19e:	pop    es
  40f19f:	arpl   WORD PTR [ecx-0x73],di
  40f1a2:	jmp    0x40f184
  40f1a4:	loope  0x40f145
  40f1a6:	mov    WORD PTR [esi],ds
  40f1a8:	xchg   edx,eax
  40f1a9:	xor    ch,al
  40f1ab:	cmp    dh,BYTE PTR [ecx-0x5f]
  40f1ae:	(bad)  
  40f1af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1b0:	cmp    BYTE PTR [eax-0x5555e902],ah
  40f1b6:	dec    esi
  40f1b7:	sub    al,0xb3
  40f1b9:	mov    eax,ds:0x1331a30a
  40f1be:	dec    DWORD PTR [esi]
  40f1c0:	xchg   esi,eax
  40f1c1:	mov    eax,ds:0xddb57f74
  40f1c6:	std    
  40f1c7:	je     0x40f21b
  40f1c9:	or     eax,0xa1adf6c0
  40f1ce:	je     0x40f237
  40f1d0:	jne    0x40f1f4
  40f1d2:	push   ebp
  40f1d3:	pop    esp
  40f1d4:	jl     0x40f1a1
  40f1d6:	shl    DWORD PTR [edi-0x54],0x37
  40f1da:	mov    edi,DWORD PTR [edi]
  40f1dc:	mov    WORD PTR [edi],ss
  40f1de:	or     al,0x3b
  40f1e0:	pusha  
  40f1e1:	and    al,0xff
  40f1e3:	cmp    al,0x98
  40f1e5:	ret    0x8073
  40f1e8:	adc    ebx,DWORD PTR [eax]
  40f1ea:	adc    BYTE PTR [ebx+0x2460cc84],dl
  40f1f0:	and    al,0x33
  40f1f2:	push   0x4266eb
  40f1f7:	adc    al,0xba
  40f1f9:	cli    
  40f1fa:	inc    BYTE PTR [eax]
	...
  40f208:	add    BYTE PTR [eax],al
  40f20a:	xchg   esi,eax
  40f20b:	nop
  40f20c:	xor    bh,bh
  40f20e:	mov    ss,WORD PTR [edx+ebp*4-0x5e241c1b]
  40f215:	out    0xb6,eax
  40f217:	jno    0x40f1ba
  40f219:	(bad)  
  40f21a:	sbb    ch,bh
  40f21c:	idiv   bh
  40f21e:	pop    DWORD PTR ds:0x544af72
  40f224:	jmp    0x9a6f08db
  40f229:	inc    esi
  40f22a:	and    al,BYTE PTR ds:0x2f57180e
  40f230:	jecxz  0x40f1d4
  40f232:	aaa    
  40f233:	or     eax,0x9ab55311
  40f238:	cmc    
  40f239:	sub    ah,BYTE PTR [ebx+0x5]
  40f23c:	(bad)  
  40f23d:	pusha  
  40f23e:	cmp    al,0x19
  40f240:	sub    al,BYTE PTR [ebx+0x63]
  40f243:	call   0x17d5:0xff091053
  40f24a:	pop    ebx
  40f24b:	lods   eax,DWORD PTR ds:[esi]
  40f24c:	outs   dx,DWORD PTR ds:[esi]
  40f24d:	mov    eax,ds:0x4509a85
  40f252:	arpl   WORD PTR [edx+0x45f02c7e],bp
  40f258:	sub    BYTE PTR [esp+ebp*2],al
  40f25b:	adc    ch,bl
  40f25d:	sub    eax,0xc1b9a47
  40f262:	dec    ebx
  40f263:	xchg   DWORD PTR [ebp-0x16d2aa5f],ebx
  40f269:	add    edi,DWORD PTR [ebx+ebx*2]
  40f26c:	add    BYTE PTR [eax],ah
	...
  40f27a:	add    BYTE PTR [eax],al
  40f27c:	add    BYTE PTR [eax-0x485f16bc],ah
  40f282:	or     DWORD PTR [ebx],edx
  40f284:	add    BYTE PTR [eax+edx*1],dh
  40f287:	loope  0x40f234
  40f289:	mov    ecx,0xbca16d9a
  40f28e:	add    eax,0x2cdeb0e9
  40f293:	fiadd  DWORD PTR [edx+eiz*4+0x5]
  40f297:	push   esi
  40f298:	pop    ss
  40f299:	pop    edi
  40f29a:	das    
  40f29b:	or     ah,BYTE PTR [ecx+0x38510d8f]
  40f2a1:	cld    
  40f2a2:	cdq    
  40f2a3:	cmp    eax,0x5632c
  40f2a8:	inc    esi
  40f2a9:	and    DWORD PTR [edx],0x5a1aa7c
  40f2af:	call   FWORD PTR [esp+ebp*2+0x6c1e232f]
  40f2b6:	or     eax,0x9b03d4e8
  40f2bb:	(bad)  
  40f2bc:	and    BYTE PTR [ebp-0x1063ffff],bl
  40f2c2:	lods   eax,DWORD PTR ds:[esi]
  40f2c3:	and    BYTE PTR ds:0x83002c03,0x96
  40f2ca:	call   0xe65a:0x47f8e174
  40f2d1:	ret    
  40f2d2:	mov    WORD PTR [ebp+ebx*8+0x48],es
  40f2d6:	icebp  
  40f2d7:	inc    ebx
  40f2d8:	sub    BYTE PTR [edi-0x66],ah
  40f2db:	je     0x40f2be
  40f2dd:	mov    eax,0xc6ff48
	...
  40f2ee:	add    BYTE PTR [eax],al
  40f2f0:	ret    
  40f2f1:	call   0xc108:0x10c3bd74
  40f2f8:	dec    ecx
  40f2f9:	aas    
  40f2fa:	jmp    FWORD PTR [esi-0x16fc3c67]
  40f300:	xchg   ebp,eax
  40f301:	mov    ebx,gs
  40f303:	push   0x1c
  40f305:	popf   
  40f306:	imul   ebp,ecx,0x14fed47e
  40f30c:	push   edi
  40f30d:	lods   eax,DWORD PTR ds:[esi]
  40f30e:	sbb    al,0x23
  40f310:	add    bl,BYTE PTR [eax+0x21032488]
  40f316:	and    ebp,DWORD PTR ds:0xf4ff05a0
  40f31c:	pop    eax
  40f31d:	lods   eax,DWORD PTR ds:[esi]
  40f31e:	sbb    esp,DWORD PTR [esi-0x3d]
  40f321:	xchg   edi,eax
  40f322:	(bad)  
  40f323:	aam    0xf4
  40f325:	xchg   edi,eax
  40f326:	je     0x40f309
  40f328:	mov    eax,0xc34e5a40
  40f32d:	int    0xc1
  40f32f:	add    BYTE PTR [esi],cl
  40f331:	add    eax,0x81a68b55
  40f336:	ret    0x20f8
  40f339:	add    eax,0xef35346a
  40f33e:	pop    es
  40f33f:	call   0x3fceba
  40f344:	push   ebx
  40f345:	aas    
  40f346:	cld    
  40f347:	push   0x4140a7
  40f34c:	push   ebp
  40f34d:	out    dx,eax
  40f34e:	pop    es
  40f34f:	call   0x3e59a5
	...
  40f360:	add    BYTE PTR [eax],al
  40f362:	add    al,dl
  40f364:	add    al,0x68
  40f366:	dec    ebp
  40f367:	inc    BYTE PTR [ebx+0x0]
  40f36a:	push   0x4140f3
  40f36f:	test   DWORD PTR [esi+0x14b290d],edi
  40f375:	call   0xfdb9491f
  40f37a:	or     edi,DWORD PTR [edx+0x4f893efd]
  40f380:	jns    0x40f3e8
  40f382:	mov    al,ah
  40f384:	inc    ecx
  40f385:	add    BYTE PTR [eax+0x7a],ch
  40f388:	add    al,0xef
  40f38a:	mov    esi,0x4142f422
  40f38f:	dec    edx
  40f390:	ja     0x40f405
  40f392:	clc    
  40f393:	cmc    
  40f394:	std    
  40f395:	pop    es
  40f396:	call   0x3fec65
  40f39b:	bound  ecx,QWORD PTR [ecx-0x13b5bf48]
  40f3a1:	(bad)  
  40f3a2:	jmp    ebp
  40f3a4:	ss addr16 jl 0x40f421
  40f3a8:	inc    edx
  40f3a9:	add    bh,bh
  40f3ab:	das    
  40f3ac:	jl     0x40f3ab
  40f3ae:	jne    0x40f3c2
  40f3b0:	ins    BYTE PTR es:[edi],dx
  40f3b1:	je     0x40f432
  40f3b3:	mov    ch,0x78
  40f3b5:	std    
  40f3b6:	jne    0x40f41b
  40f3b8:	lods   al,BYTE PTR ss:[esi]
  40f3ba:	dec    ecx
  40f3bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3bc:	inc    edi
  40f3bd:	lahf   
  40f3be:	(bad)  
  40f3bf:	jbe    0x40f403
  40f3c1:	lahf   
  40f3c2:	je     0x40f42f
  40f3c4:	ss popa 
  40f3c6:	pop    eax
	...
  40f3d3:	add    BYTE PTR [eax],al
  40f3d5:	add    ah,ch
  40f3d7:	into   
  40f3d8:	int3   
  40f3d9:	rcr    DWORD PTR [edi-0x52],0x37
  40f3dd:	mov    ecx,edi
  40f3df:	sub    cl,al
  40f3e1:	sti    
  40f3e2:	dec    ecx
  40f3e3:	scas   al,BYTE PTR es:[edi]
  40f3e4:	sub    BYTE PTR ds:0xe80a78cc,dh
  40f3ea:	inc    edx
  40f3eb:	push   ebp
  40f3ec:	popf   
  40f3ed:	(bad)  
  40f3ee:	jmp    0x4362:0x1a679e68
  40f3f5:	add    BYTE PTR [eax+ebx*1-0x57bc17f5],ch
  40f3fc:	popf   
  40f3fd:	(bad)  
  40f3fe:	pushf  
  40f3ff:	cmp    BYTE PTR [eax-0x5569f102],ah
  40f405:	mov    ebp,DWORD PTR [edx]
  40f407:	scas   eax,DWORD PTR es:[edi]
  40f408:	popf   
  40f409:	enter  0xa1a1,0x2
  40f40d:	push   ebp
  40f40e:	call   0x780475c4
  40f413:	xor    eax,DWORD PTR [edx+ebp*2]
  40f416:	xor    eax,0x7b08174f
  40f41b:	popf   
  40f41c:	cmp    edi,edi
  40f41e:	pop    esp
  40f41f:	push   ss
  40f420:	dec    eax
  40f421:	cld    
  40f422:	retf   
  40f423:	or     cl,BYTE PTR [eax+0x41]
  40f426:	arpl   WORD PTR [edi+0x17],bp
  40f429:	or     BYTE PTR [ebx],bh
  40f42b:	pop    eax
  40f42c:	pushf  
  40f42d:	(bad)  
  40f42e:	cmp    al,0x80
  40f430:	pop    ss
  40f431:	cld    
  40f432:	xor    al,0x92
  40f434:	or     ch,al
  40f436:	mov    ch,dh
  40f438:	sahf   
  40f439:	inc    BYTE PTR [eax]
	...
  40f447:	add    BYTE PTR [eax],al
  40f449:	sbb    ch,BYTE PTR [ebx+0x6]
  40f44c:	add    BYTE PTR [esi-0x1e508dfb],dh
  40f452:	rcr    DWORD PTR [ecx+ebp*1+0x63],0x2b
  40f457:	push   ds
  40f458:	lahf   
  40f459:	(bad)  
  40f45a:	or     eax,0x96949e41
  40f45f:	inc    ebp
  40f460:	mov    WORD PTR [edi-0x58d02f67],ds
  40f466:	inc    esp
  40f467:	jmp    0x414e640a
  40f46c:	popf   
  40f46d:	fist   WORD PTR [esi-0x66b061db]
  40f473:	sbb    eax,0xc2ad5b18
  40f478:	cmp    al,0xc4
  40f47a:	xchg   esi,eax
  40f47b:	pop    ds
  40f47c:	shl    DWORD PTR [eax+0x5],0x9c
  40f480:	mov    cl,al
  40f482:	and    BYTE PTR [edi+ebx*4],0x3a
  40f486:	add    eax,0x10a5db83
  40f48b:	loope  0x40f438
  40f48d:	scas   al,BYTE PTR es:[edi]
  40f48e:	cmp    eax,0x40eb9de6
  40f493:	(bad)  [edi+edx*1]
  40f496:	inc    ecx
  40f497:	sub    BYTE PTR [esp+eax*4],al
  40f49a:	adc    cl,ah
  40f49c:	stos   DWORD PTR es:[edi],eax
  40f49d:	scas   eax,DWORD PTR es:[edi]
  40f49e:	cwde   
  40f49f:	lds    ebx,FWORD PTR [ebp-0x6242ef8b]
  40f4a5:	test   DWORD PTR [ecx+eax*8],0xad960c9b
  40f4ac:	retf   
	...
  40f4b9:	add    BYTE PTR [eax],al
  40f4bb:	add    BYTE PTR [edx],ah
  40f4bd:	add    ecx,ebp
  40f4bf:	ss call 0x5f58926d
  40f4c5:	lods   eax,DWORD PTR ds:[esi]
  40f4c6:	push   ecx
  40f4c7:	cmp    eax,0xc3e19644
  40f4cc:	mov    al,0xf8
  40f4ce:	adc    BYTE PTR [ebp+0x33e944a0],al
  40f4d4:	cmp    esi,DWORD PTR ds:0x96c61600
  40f4da:	dec    edi
  40f4db:	outs   dx,BYTE PTR ds:[esi]
  40f4dc:	je     0x40f4d3
  40f4de:	dec    edi
  40f4df:	data16 ins BYTE PTR es:[edi],dx
  40f4e1:	or     eax,0x96d556e8
  40f4e6:	inc    BYTE PTR [ecx-0x66]
  40f4e9:	cmp    bh,bh
  40f4eb:	dec    esi
  40f4ec:	sub    ah,al
  40f4ee:	or     ebp,ecx
  40f4f0:	sub    eax,0x1b6aeb8a
  40f4f5:	mov    ss,WORD PTR [esi-0x3d]
  40f4f8:	pusha  
  40f4f9:	sub    edi,DWORD PTR [ecx]
  40f4fb:	cs je  0x40f50b
  40f4fe:	call   0xfed78d98
  40f503:	jo     0x40f529
  40f505:	cdq    
  40f506:	mov    dl,ah
  40f508:	mov    eax,0xe0e940dd
  40f50d:	(bad)  
  40f50e:	(bad)  
  40f50f:	jl     0x40f565
  40f511:	sub    eax,0x521a57e
  40f516:	push   edi
  40f517:	add    DWORD PTR [esi],ecx
  40f519:	jmp    0xc5acde1d
  40f51e:	jae    0x40f566
	...
  40f52c:	add    BYTE PTR [eax],al
  40f52e:	add    BYTE PTR [esi-0x53],cl
  40f531:	fld    DWORD PTR [ebp-0x12]
  40f534:	xchg   esi,eax
  40f535:	or     ch,BYTE PTR [ecx+0x2489306c]
  40f53b:	fist   WORD PTR [esi-0x4b53e8c]
  40f541:	(bad)  
  40f542:	xor    al,0x5f
  40f544:	lods   eax,DWORD PTR ds:[esi]
  40f545:	test   DWORD PTR [esi+0x34fe96c7],esi
  40f54b:	call   FWORD PTR [esi]
  40f54d:	sbb    al,0xa6
  40f54f:	ins    DWORD PTR es:[edi],dx
  40f550:	std    
  40f551:	out    0x20,eax
  40f553:	out    dx,al
  40f554:	xchg   ebx,eax
  40f555:	(bad)  
  40f556:	xchg   esi,eax
  40f557:	ins    DWORD PTR es:[edi],dx
  40f558:	lea    ebp,[ecx-0x36]
  40f55b:	fistp  WORD PTR [ecx]
  40f55d:	or     BYTE PTR [eax],al
  40f55f:	shl    ah,cl
  40f561:	(bad)  
  40f562:	jmp    FWORD PTR [ebp+0x7b4490e0]
  40f568:	or     edi,edi
  40f56a:	jne    0x40f4fe
  40f56c:	pusha  
  40f56d:	jae    0x40f5cd
  40f56f:	jge    0x40f5e2
  40f571:	or     eax,eax
  40f573:	ss xchg edi,eax
  40f575:	dec    esi
  40f576:	jmp    DWORD PTR [edi]
  40f578:	jno    0x40f5c8
  40f57a:	call   DWORD PTR [edi]
  40f57c:	add    eax,ebp
  40f57e:	ins    BYTE PTR es:[edi],dx
  40f57f:	push   esp
  40f580:	jno    0x40f57f
  40f582:	call   0x3fc3c1
  40f587:	sub    eax,0x52e8f7fb
  40f58c:	into   
  40f58d:	(bad)  
  40f58e:	(bad)  
  40f58f:	jle    0x40f546
  40f591:	mov    esi,0xb9
	...
  40f5a2:	ins    DWORD PTR es:[edi],dx
  40f5a3:	jno    0x40f5a2
  40f5a5:	jmp    FWORD PTR [eax+0x22]
  40f5a8:	aaa    
  40f5a9:	pop    es
  40f5aa:	xlat   BYTE PTR ds:[ebx]
  40f5ab:	mov    ebp,?
  40f5ad:	jne    0x40f60d
  40f5af:	jno    0x40f624
  40f5b1:	or     BYTE PTR [edx-0x6d],dl
  40f5b4:	push   esi
  40f5b5:	jmp    FWORD PTR [ebp-0x793d3730]
  40f5bb:	or     BYTE PTR [ebp-0x75],dl
  40f5be:	scas   al,BYTE PTR es:[edi]
  40f5bf:	jo     0x40f634
  40f5c1:	or     al,0xb2
  40f5c3:	dec    edi
  40f5c4:	pop    esp
  40f5c5:	jmp    FWORD PTR [ebp-0x708b3ffc]
  40f5cb:	loopne 0x40f56c
  40f5cd:	inc    esp
  40f5ce:	dec    ebx
  40f5cf:	or     DWORD PTR [eax-0x18],edx
  40f5d2:	sub    edi,ecx
  40f5d4:	(bad)  
  40f5d5:	dec    DWORD PTR [edx+0x70]
  40f5d8:	jae    0x40f5ea
  40f5da:	jp     0x40f64c
  40f5dc:	jae    0x40f5e6
  40f5de:	repnz xchg edx,eax
  40f5e0:	aam    0xff
  40f5e2:	in     eax,dx
  40f5e3:	pusha  
  40f5e4:	ins    BYTE PTR es:[edi],dx
  40f5e5:	pop    edx
  40f5e6:	arpl   WORD PTR [ebx-0x66],di
  40f5e9:	enter  0xb221,0x2
  40f5ed:	push   ebp
  40f5ee:	call   0x2c047c6c
  40f5f3:	sti    
  40f5f4:	sub    eax,0x9958b900
  40f5f9:	je     0x40f666
  40f5fb:	xchg   BYTE PTR [edx-0x72d4ebaa],cl
  40f601:	inc    esp
  40f602:	(bad)  
  40f604:	fldenv [edi]
	...
  40f612:	add    BYTE PTR [eax],al
  40f614:	add    BYTE PTR [ebx],bh
  40f616:	pop    ebp
  40f617:	add    al,BYTE PTR [eax+0x590e9e3c]
  40f61d:	mov    esp,DWORD PTR [edi]
  40f61f:	inc    eax
  40f620:	inc    ecx
  40f621:	arpl   WORD PTR [ebx-0x56],di
  40f624:	fnstenv [edi]
  40f626:	sahf   
  40f627:	add    cl,BYTE PTR [ebx]
  40f629:	mov    ds:0xcb56d659,eax
  40f62e:	call   0x970df559
  40f633:	ret    0x9173
  40f636:	and    eax,0x78bcf841
  40f63b:	call   0xbb08:0x110b5969
  40f642:	sub    ebx,DWORD PTR [ebx+0xf9aa4fe]
  40f648:	clc    
  40f649:	or     edx,eax
  40f64b:	cdq    
  40f64c:	je     0x40f6b9
  40f64e:	mov    dh,0x1b
  40f650:	dec    DWORD PTR [edx+esi*4+0x478b7499]
  40f657:	out    0xfe,eax
  40f659:	mul    BYTE PTR [ebp-0x358b9456]
  40f65f:	cdq    
  40f660:	(bad)  
  40f661:	test   ch,0xaa
  40f664:	std    
  40f665:	or     bl,BYTE PTR [ebx-0x67]
  40f668:	sti    
  40f669:	nop
  40f66a:	pop    esp
  40f66b:	pop    ebx
  40f66c:	(bad)  
  40f66d:	push   esp
  40f66e:	push   es
  40f66f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f670:	call   0x6ace:0x2e06452
  40f677:	xchg   ebp,eax
  40f678:	adc    BYTE PTR [eax],al
	...
  40f686:	add    BYTE PTR [eax],al
  40f688:	aas    
  40f689:	xchg   ebx,eax
  40f68a:	adc    ecx,DWORD PTR [ebx+ecx*2]
  40f68d:	daa    
  40f68e:	push   ds
  40f68f:	fwait
  40f690:	sub    eax,0x60c5b033
  40f695:	add    eax,0x87088f1c
  40f69a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f69b:	xchg   edi,eax
  40f69c:	lods   eax,DWORD PTR ds:[esi]
  40f69d:	pop    ds
  40f69e:	jmp    0xd3d33ed0
  40f6a3:	or     edi,ebx
  40f6a5:	or     BYTE PTR [esi-0x5c830266],bh
  40f6ab:	xchg   edi,eax
  40f6ac:	jmp    0xa42d0781
  40f6b1:	add    eax,0x16e4da69
  40f6b6:	test   eax,0xa84a082b
  40f6bb:	add    ebp,DWORD PTR [ebx*4-0x6d331848]
  40f6c2:	icebp  
  40f6c3:	ret    
  40f6c4:	push   eax
  40f6c5:	out    0xbd,al
  40f6c7:	stos   DWORD PTR es:[edi],eax
  40f6c8:	xor    DWORD PTR [esi],esp
  40f6ca:	push   cs
  40f6cb:	call   0x1d1c:0xfc7cc569
  40f6d2:	jmp    0x8094aada
  40f6d7:	push   eax
  40f6d8:	and    BYTE PTR [ecx+ebp*8+0x33],al
  40f6dc:	xchg   esp,eax
  40f6dd:	sbb    cl,dh
  40f6df:	stos   DWORD PTR es:[edi],eax
  40f6e0:	add    edx,DWORD PTR [ebx]
  40f6e2:	ficomp WORD PTR [ecx-0x66d07f84]
  40f6e8:	jge    0x40f67b
  40f6ea:	sbb    esp,eax
	...
  40f6f8:	add    BYTE PTR [eax],al
  40f6fa:	add    BYTE PTR [ebx+0x6d99c592],bh
  40f700:	xchg   edi,eax
  40f701:	mov    ds,esp
  40f703:	pop    ebp
  40f704:	sbb    BYTE PTR [eax],al
  40f706:	test   eax,0xaefc18fa
  40f70b:	fs std 
  40f70d:	out    0x9b,eax
  40f70f:	xchg   ecx,eax
  40f710:	xchg   edx,eax
  40f711:	(bad)  
  40f712:	ds sbb ah,al
  40f715:	add    ebp,ecx
  40f717:	lea    edi,[esi-0x15]
  40f71a:	push   0x23
  40f71c:	stos   BYTE PTR es:[edi],al
  40f71d:	add    ah,0x85
  40f720:	jecxz  0x40f762
  40f722:	jmp    0xa0450f87
  40f727:	and    eax,0x5f02fffe
  40f72c:	pop    ds
  40f72d:	add    bl,dl
  40f72f:	jmp    0x40f6c3
  40f731:	je     0x40f720
  40f733:	ss add eax,0xe7c8e96a
  40f739:	sub    ch,cl
  40f73b:	pusha  
  40f73c:	jl     0x40f782
  40f73e:	inc    ecx
  40f73f:	retf   0xf818
  40f742:	push   ecx
  40f743:	xor    DWORD PTR [edi+edi*8],ebp
  40f746:	ss call 0x646ff394
  40f74c:	(bad)  
  40f74d:	(bad)  
  40f74e:	pushf  
  40f74f:	hlt    
  40f750:	sbb    edi,edi
  40f752:	push   ds
  40f753:	push   esp
  40f754:	add    DWORD PTR [edx-0x17],ebp
  40f757:	mov    es,WORD PTR ds:0x91c7e5e8
  40f75d:	(bad)  
  40f75e:	je     0x40f760
	...
  40f76c:	add    BYTE PTR [eax],al
  40f76e:	ins    BYTE PTR es:[edi],dx
  40f76f:	cdq    
  40f770:	dec    edi
  40f771:	xchg   ebx,eax
  40f772:	pusha  
  40f773:	pop    ds
  40f774:	add    BYTE PTR [ebx-0x11ffe46a],al
  40f77a:	gs xchg ecx,eax
  40f77c:	(bad)  
  40f77d:	cld    
  40f77e:	inc    ebp
  40f77f:	jecxz  0x40f7c1
  40f781:	jmp    0x614f498b
  40f786:	call   0xe82af61c
  40f78b:	cmp    ah,dh
  40f78d:	add    cl,dh
  40f78f:	xchg   edi,eax
  40f790:	mov    eax,DWORD PTR [ebp-0x56]
  40f793:	aad    0x69
  40f795:	add    BYTE PTR [eax-0x5dff9769],ah
  40f79b:	dec    edi
  40f79c:	inc    edx
  40f79d:	inc    ecx
  40f79e:	cmp    ch,BYTE PTR [esi+0x73]
  40f7a1:	hlt    
  40f7a2:	in     eax,0xda
  40f7a4:	jne    0xff9fe4b4
  40f7aa:	dec    edi
  40f7ab:	jns    0x40f793
  40f7ad:	stos   DWORD PTR es:[edi],eax
  40f7ae:	dec    edx
  40f7af:	outs   dx,BYTE PTR ds:[esi]
  40f7b0:	std    
  40f7b1:	mov    DWORD PTR [edi+0x61],edi
  40f7b4:	or     eax,eax
  40f7b6:	push   ds
  40f7b7:	cmp    eax,0x5ce275ff
  40f7bc:	jmp    0x40f816
  40f7be:	test   DWORD PTR [ebp-0x79],ebp
  40f7c1:	inc    ebp
  40f7c2:	xchg   esi,eax
  40f7c3:	ins    DWORD PTR es:[edi],dx
  40f7c4:	jae    0x40f7b6
  40f7c6:	mov    ds:0xa5ff513a,al
  40f7cb:	ins    DWORD PTR es:[edi],dx
  40f7cc:	jae    0x40f7b6
  40f7ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7cf:	(bad)  
  40f7d0:	jmp    0x40f7d1
	...
  40f7de:	add    BYTE PTR [eax],al
  40f7e0:	add    BYTE PTR [edi-0x4d3198c],ch
  40f7e6:	ins    DWORD PTR es:[edi],dx
  40f7e7:	std    
  40f7e8:	or     ecx,DWORD PTR [edx-0x4597e500]
  40f7ee:	add    al,0xef
  40f7f0:	mov    esi,0xe807ff65
  40f7f5:	lahf   
  40f7f6:	(bad)  
  40f7f8:	jmp    DWORD PTR [ebp-0x1]
  40f7fb:	out    0xff,eax
  40f7fd:	das    
  40f7fe:	push   0x5cb275fd
  40f803:	pop    ebx
  40f804:	push   ebp
  40f805:	xchg   ebp,eax
  40f806:	js     0x40f805
  40f808:	jne    0x40f7a0
  40f80a:	pop    ebx
  40f80b:	xchg   esp,eax
  40f80c:	pop    eax
  40f80d:	test   DWORD PTR [eax-0x3],edi
  40f810:	jne    0x40f7bc
  40f812:	popa   
  40f813:	stc    
  40f814:	dec    edi
  40f815:	arpl   WORD PTR [edi-0x45f1756a],si
  40f81b:	mov    dl,BYTE PTR [ecx]
  40f81d:	ins    BYTE PTR es:[edi],dx
  40f81e:	ror    DWORD PTR [edi-0x6a69ee02],1
  40f824:	je     0x40f885
  40f826:	(bad)  
  40f827:	sbb    bl,BYTE PTR [eax+0x54]
  40f82a:	pop    edi
  40f82b:	int3   
  40f82c:	rcr    DWORD PTR [edi-0x62],0x2f
  40f830:	mov    esi,DWORD PTR [edi]
  40f832:	outs   dx,DWORD PTR ds:[esi]
  40f833:	adc    BYTE PTR [ebx+ecx*2],cl
  40f836:	xor    edi,DWORD PTR [eax]
  40f838:	push   DWORD PTR [ebx+eiz*4]
  40f83b:	ret    0x7a73
  40f83e:	not    BYTE PTR [esi+0x43]
  40f841:	mov    ds:0xe8329e,al
	...
  40f852:	add    BYTE PTR [eax],al
  40f854:	mov    bl,0xfa
  40f856:	xchg   esi,eax
  40f857:	(bad)  
  40f858:	mov    bl,0x6
  40f85a:	inc    ebp
  40f85b:	mov    edi,0x2a9ea3
  40f860:	arpl   WORD PTR [edi],di
  40f862:	push   esi
  40f863:	addr16 push ss
  40f865:	bound  eax,QWORD PTR [ebx+0x0]
  40f868:	xchg   ebx,eax
  40f869:	aas    
  40f86a:	adc    DWORD PTR [eax],ecx
  40f86c:	sti    
  40f86d:	mov    ch,0x19
  40f86f:	jmp    esp
  40f871:	xor    eax,0xd6dc57d7
  40f876:	xchg   esi,eax
  40f877:	je     0x40f8e0
  40f879:	inc    esi
  40f87a:	jle    0x40f8d7
  40f87c:	int3   
  40f87d:	out    0xa,al
  40f87f:	ror    BYTE PTR [edi-0x4b],0x2a
  40f883:	(bad)  
  40f884:	daa    
  40f885:	pop    ebp
  40f886:	add    dl,BYTE PTR [eax-0x35]
  40f889:	xchg   edx,eax
  40f88a:	jmp    FWORD PTR ss:[ebp+ebp*2+0x5de4412a]
  40f892:	add    ch,BYTE PTR [eax+0x63]
  40f895:	sahf   
  40f896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f897:	mov    ebp,0x413ff90b
  40f89c:	arpl   WORD PTR ds:0xfd0f9739,ax
  40f8a2:	rcl    dl,1
  40f8a4:	stc    
  40f8a5:	(bad)  
  40f8a6:	aad    0xab
  40f8a8:	push   0x2d
  40f8aa:	into   
  40f8ab:	xchg   esi,eax
  40f8ac:	fwait
  40f8ad:	ret    0x3f0
  40f8b0:	push   cs
  40f8b1:	jl     0x40f87f
  40f8b3:	and    BYTE PTR [eax],0x92
  40f8b6:	inc    edx
  40f8b7:	add    al,0x0
	...
  40f8c5:	add    BYTE PTR [eax],al
  40f8c7:	leave  
  40f8c8:	shr    DWORD PTR [ebp-0x2b62a4f0],1
  40f8ce:	xor    BYTE PTR [edi+ecx*4+0x6f],al
  40f8d2:	inc    eax
  40f8d3:	aas    
  40f8d4:	sbb    al,0xf3
  40f8d6:	xchg   esi,eax
  40f8d7:	scas   eax,DWORD PTR es:[edi]
  40f8d8:	std    
  40f8d9:	adc    BYTE PTR [ebx],0x2c
  40f8dc:	pop    DWORD PTR [ebp-0xc717fd7]
  40f8e2:	or     ecx,DWORD PTR [ebx]
  40f8e4:	sub    BYTE PTR [esi-0x6a],dh
  40f8e7:	adc    eax,0x9796cd1c
  40f8ec:	std    
  40f8ed:	push   eax
  40f8ee:	aaa    
  40f8ef:	add    al,0x8f
  40f8f1:	pop    ebp
  40f8f2:	xchg   esi,eax
  40f8f3:	ja     0x40f886
  40f8f5:	push   ebp
  40f8f6:	adc    BYTE PTR [ebx-0x63],ch
  40f8f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8fa:	xor    ah,ch
  40f8fc:	mov    gs,WORD PTR [edi]
  40f8fe:	shl    DWORD PTR [eax+0x5],0x94
  40f902:	mov    cl,al
  40f904:	mov    ?,WORD PTR [ebx-0x730234f9]
  40f90a:	xchg   esi,eax
  40f90b:	int    0xfa
  40f90d:	sub    BYTE PTR [edi],cl
  40f90f:	jg     0x40f92e
  40f911:	or     eax,0xb905223f
  40f916:	stos   DWORD PTR es:[edi],eax
  40f917:	xlat   BYTE PTR ds:[ebx]
  40f918:	sub    cl,BYTE PTR [esi]
  40f91a:	xchg   esi,eax
  40f91b:	sbb    al,0x1d
  40f91d:	jmp    0x9090ad25
  40f922:	xchg   esi,eax
  40f923:	and    BYTE PTR [eax+eax*1-0x17],al
  40f927:	push   eax
  40f928:	mov    ?,WORD PTR [ecx+eiz*8+0x0]
	...
  40f938:	add    BYTE PTR [eax],al
  40f93a:	mov    eax,0xeee67c29
  40f93f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f940:	nop
  40f941:	ss (bad) 
  40f943:	(bad)
  40f947:	add    eax,0x83bb6255
  40f94c:	ret    
  40f94d:	lds    edi,FWORD PTR [ecx]
  40f94f:	add    eax,0x18f7fc6a
  40f954:	or     cl,al
  40f956:	mov    dl,0x32
  40f958:	jmp    FWORD PTR [esi+0x13fc48d8]
  40f95e:	dec    ecx
  40f95f:	(bad)  
  40f960:	je     0x40f953
  40f962:	or     BYTE PTR [esi+edi*8-0x6a],bl
  40f966:	into   
  40f967:	sbb    esp,DWORD PTR [ebx]
  40f969:	mov    ds,WORD PTR [ebp+edi*8-0x19]
  40f96d:	dec    ecx
  40f96e:	into   
  40f96f:	mov    ?,esi
  40f971:	adc    ebx,DWORD PTR [ebx]
  40f973:	(bad)  
  40f974:	je     0x40f957
  40f976:	enter  0xfe77,0x6e
  40f97a:	test   BYTE PTR [esi+0x18ee6574],0x8
  40f981:	push   ecx
  40f982:	and    al,0x32
  40f984:	call   DWORD PTR [esi+0x28]
  40f987:	les    eax,FWORD PTR [ebx]
  40f989:	jmp    0x6b2c73cb
  40f98e:	and    edx,DWORD PTR [esi+0x1b60d356]
  40f994:	ds ss fs std 
  40f998:	out    0xb9,eax
  40f99a:	jl     0x40f92a
  40f99c:	(bad)  
  40f99d:	jo     0x40f99f
	...
  40f9ab:	add    BYTE PTR [eax],al
  40f9ad:	test   BYTE PTR [ecx-0x1a372376],dl
  40f9b3:	inc    eax
  40f9b4:	jmp    0x9540c899
  40f9b9:	outs   dx,DWORD PTR ds:[esi]
  40f9ba:	sbb    eax,0x42f70007
  40f9bf:	add    BYTE PTR [edi+0x72],dl
  40f9c2:	sub    al,0x28
  40f9c4:	add    BYTE PTR [edx-0x5f8b4004],cl
  40f9ca:	loopne 0x40f9b3
  40f9cc:	ficomp WORD PTR [edx]
  40f9ce:	js     0x40f9cd
  40f9d0:	or     ecx,edx
  40f9d2:	std    
  40f9d3:	pop    ds
  40f9d4:	mov    DWORD PTR [edi+0x71],eax
  40f9d7:	data16 add BYTE PTR [edx+0x68],bh
  40f9db:	mov    esp,0x40ce8a68
  40f9e0:	add    BYTE PTR ds:0x97fff7fc,bl
  40f9e6:	stc    
  40f9e7:	out    0xc8,eax
  40f9e9:	xchg   ecx,eax
  40f9ea:	jb     0x40f9e9
  40f9ec:	jmp    DWORD PTR [edi+0x69]
  40f9ef:	out    0xf1,al
  40f9f1:	je     0x40fa65
  40f9f3:	std    
  40f9f4:	cld    
  40f9f5:	sbb    ecx,ecx
  40f9f7:	mov    bh,0xff
  40f9f9:	fnsave [ecx-0x3]
  40f9fc:	repnz mov WORD PTR [eax+0x71a37505],?
  40fa03:	jae    0x40fa01
  40fa05:	(bad)  
  40fa06:	sti    
  40fa07:	pop    es
  40fa08:	call   0x3fcf81
  40fa0d:	sbb    eax,0x4c0c0
	...
  40fa1e:	add    BYTE PTR [eax],al
  40fa20:	or     bl,ah
  40fa22:	mov    ch,ah
  40fa24:	mov    DWORD PTR [edx+eiz*8+0x57],ecx
  40fa28:	and    BYTE PTR [ecx],cl
  40fa2a:	push   0x3f
  40fa2c:	popf   
  40fa2d:	sti    
  40fa2e:	pop    es
  40fa2f:	call   0x3fcf56
  40fa34:	inc    ebx
  40fa35:	retf   
  40fa36:	sti    
  40fa37:	mov    edi,DWORD PTR [edi-0x45bed960]
  40fa3d:	mov    BYTE PTR ds:0x67c9d600,bh
  40fa43:	adc    eax,0x415963
  40fa48:	adc    al,0x6
  40fa4a:	inc    eax
  40fa4b:	sub    DWORD PTR [ebx-0x62],esp
  40fa4e:	pop    es
  40fa4f:	rcl    BYTE PTR [edi],0xb8
  40fa52:	sub    ebp,eax
  40fa54:	std    
  40fa55:	jge    0x40f9ea
  40fa57:	(bad)  
  40fa58:	pop    eax
  40fa59:	fimul  WORD PTR [esi]
  40fa5b:	and    dl,bl
  40fa5d:	(bad)  [ebx-0x5e619c99]
  40fa63:	mov    ebp,0x4147940b
  40fa68:	arpl   WORD PTR [ebx-0x369b07e8],di
  40fa6e:	sti    
  40fa6f:	out    0xb3,eax
  40fa71:	inc    edi
  40fa72:	xchg   ebx,eax
  40fa73:	(bad)  
  40fa74:	push   esp
  40fa75:	leave  
  40fa76:	mov    esp,edi
  40fa78:	retf   0x92f4
  40fa7b:	inc    BYTE PTR [edi-0x51]
  40fa7e:	ret    0x3cb8
  40fa81:	imul   edx,DWORD PTR [edx+0xfe],0x0
	...
  40fa90:	add    BYTE PTR [eax],al
  40fa92:	add    BYTE PTR [ecx],dh
  40fa94:	inc    esp
  40fa95:	int3   
  40fa96:	push   es
  40fa97:	mov    dh,0x35
  40fa99:	sbb    al,0x0
  40fa9b:	arpl   WORD PTR [ebx+0x51],si
  40fa9e:	addr16 jge 0x40fa82
  40faa1:	inc    esp
  40faa2:	add    BYTE PTR [ebx+0x6341478b],cl
  40faa8:	sbb    ebx,DWORD PTR [ecx]
  40faaa:	or     bl,bh
  40faac:	mov    bl,0xd
  40faae:	(bad)  
  40faaf:	cld    
  40fab0:	mov    bh,0x2
  40fab2:	push   0x43593c
  40fab7:	jnp    0x40fb09
  40fab9:	inc    edi
  40faba:	inc    ecx
  40fabb:	arpl   WORD PTR [ebx-0x27],ax
  40fabe:	push   cs
  40fabf:	mov    bl,BYTE PTR [ebp+0x2]
  40fac2:	call   0xfed26ff5
  40fac7:	fisub  DWORD PTR [eax-0x62]
  40faca:	imul   esp,DWORD PTR [ebx+0x5],0x4627d791
  40fad1:	jmp    0xa8830bf1
  40fad6:	add    ebp,DWORD PTR [ecx+edx*8+0x523dcdd]
  40fadd:	adc    edi,ecx
  40fadf:	cmp    ecx,DWORD PTR [ebp+edi*8-0x7d6ee084]
  40fae6:	add    edi,ebx
  40fae8:	inc    esp
  40fae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faea:	inc    esp
  40faeb:	arpl   WORD PTR ds:0x522493b,bx
  40faf1:	(bad)  
  40faf3:	fisub  WORD PTR gs:[edi]
  40faf6:	add    al,0x0
	...
  40fb04:	add    BYTE PTR [eax],al
  40fb06:	jnp    0x40faed
  40fb08:	das    
  40fb09:	xchg   ebx,eax
  40fb0a:	gs jge 0x40fb38
  40fb0d:	xchg   esp,eax
  40fb0e:	out    dx,eax
  40fb0f:	inc    eax
  40fb10:	lds    esi,FWORD PTR [ebx]
  40fb12:	retf   
  40fb13:	cmp    al,0x2c
  40fb15:	inc    ebp
  40fb16:	arpl   WORD PTR ds:0x5a2491b,bx
  40fb1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb1d:	fsubr  DWORD PTR [ebp-0x24]
  40fb20:	daa    
  40fb21:	add    al,0x4b
  40fb23:	add    DWORD PTR [eax],esi
  40fb25:	xchg   ebx,eax
  40fb26:	sub    eax,0xe19c237d
  40fb2b:	or     BYTE PTR [ebp+0x3],bh
  40fb2e:	xchg   edi,eax
  40fb2f:	cmp    eax,0x613106a
  40fb34:	std    
  40fb35:	inc    ebp
  40fb36:	loopne 0x40fb40
  40fb38:	jge    0x40fb3d
  40fb3a:	(bad)
  40fb3e:	arpl   WORD PTR [edx-0x2906d62],bx
  40fb44:	inc    eax
  40fb45:	aaa    
  40fb46:	xchg   ecx,eax
  40fb47:	mov    cl,BYTE PTR [ebp-0x6e]
  40fb4a:	outs   dx,DWORD PTR ds:[esi]
  40fb4b:	xchg   ecx,eax
  40fb4c:	inc    ebp
  40fb4d:	sbb    BYTE PTR [ebx-0x63],ch
  40fb50:	xchg   ecx,eax
  40fb51:	xor    eax,0x35ff8ad4
  40fb56:	imul   edx,DWORD PTR [ebp-0x5d374b02],0xffffff9f
  40fb5d:	mov    ebx,0x94fe8bd1
  40fb62:	aam    0x8b
  40fb64:	je     0x40fb47
  40fb66:	enter  0x5171,0xe
	...
  40fb76:	add    BYTE PTR [eax],al
  40fb78:	add    cl,dl
  40fb7a:	mov    esi,DWORD PTR [ebp+ecx*1-0xf]
  40fb7e:	adc    eax,ebp
  40fb80:	(bad)  
  40fb81:	ins    BYTE PTR es:[edi],dx
  40fb82:	std    
  40fb83:	out    0x92,eax
  40fb85:	push   esi
  40fb86:	mov    bh,dh
  40fb88:	out    dx,al
  40fb89:	ins    BYTE PTR es:[edi],dx
  40fb8a:	cdq    
  40fb8b:	out    0x7d,eax
  40fb8d:	xor    al,0x8a
  40fb8f:	(bad)  
  40fb90:	fimul  WORD PTR [ecx+edx*4-0x19]
  40fb94:	gs xor al,0x8a
  40fb97:	dec    dh
  40fb99:	dec    esp
  40fb9a:	xchg   ebp,eax
  40fb9b:	out    0x6d,eax
  40fb9d:	xchg   esp,eax
  40fb9e:	mov    bh,dh
  40fba0:	mov    esi,0x35e79d6c
  40fba5:	xchg   esp,eax
  40fba6:	mov    bh,dh
  40fba8:	scas   al,BYTE PTR es:[edi]
  40fba9:	ins    BYTE PTR es:[edi],dx
  40fbaa:	mov    esi,edi
  40fbac:	sbb    al,0x3f
  40fbae:	mov    ds:0x8ad23bee,al
  40fbb3:	pop    esi
  40fbb4:	mov    al,ds:0x34000625
  40fbb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbba:	sahf   
  40fbbb:	sub    BYTE PTR [ebp+0x13001bf3],0x9f
  40fbc2:	mov    dh,BYTE PTR [ecx+eiz*8-0x18]
  40fbc6:	jae    0x40fc19
  40fbc8:	outs   dx,BYTE PTR ds:[esi]
  40fbc9:	bnd jl 0x40fc10
  40fbcc:	gs pop ebp
  40fbce:	add    eax,0x8358e96a
  40fbd3:	inc    esp
  40fbd4:	test   al,0x60
  40fbd6:	sbb    eax,0x8560e900
  40fbdb:	out    0x0,eax
	...
  40fbe9:	add    BYTE PTR [eax],al
  40fbeb:	add    BYTE PTR [esi],al
  40fbed:	fdivp  st(6),st
  40fbef:	call   ecx
  40fbf1:	lds    esi,FWORD PTR [edx+0x23]
  40fbf4:	jmp    0x974:0x755f016d
  40fbfb:	rcr    dh,0x9e
  40fbfe:	dec    esi
  40fbff:	push   0xbeef05ca
  40fc04:	loop   0x40fb8c
  40fc06:	inc    ebx
  40fc07:	inc    ecx
  40fc08:	mov    edx,0x9275fed5
  40fc0d:	ins    DWORD PTR es:[edi],dx
  40fc0e:	out    dx,eax
  40fc0f:	jns    0x40fba6
  40fc11:	je     0x40fbf9
  40fc13:	sbb    eax,0xfffd74ef
  40fc18:	(bad)  
  40fc1a:	std    
  40fc1b:	jne    0x40fc8f
  40fc1d:	ins    DWORD PTR es:[edi],dx
  40fc1e:	mov    ss,WORD PTR [edx-0x6b]
  40fc21:	je     0x40fbea
  40fc23:	ret    0x57e
  40fc26:	push   ebp
  40fc27:	mov    esp,DWORD PTR [esi+0x7dfcc280]
  40fc2d:	out    0xff,eax
  40fc2f:	imul   ecx,DWORD PTR [ebx+0x22087376],0xf5ff50b2
  40fc39:	or     eax,DWORD PTR [esp+edi*8-0x4f]
  40fc3d:	mov    bh,0x26
  40fc3f:	sub    BYTE PTR [ebx+0x3a3f8001],cl
  40fc45:	icebp  
  40fc46:	aas    
  40fc47:	push   0x413f9e
  40fc4c:	jge    0x40fcb7
  40fc4e:	jl     0x40fc77
	...
  40fc5c:	add    BYTE PTR [eax],al
  40fc5e:	add    BYTE PTR [edx],cl
  40fc60:	add    eax,0xa20ec00b
  40fc65:	push   ebp
  40fc66:	call   0x3fd306
  40fc6b:	icebp  
  40fc6c:	les    esi,FWORD PTR [edx+0x19]
  40fc6f:	mov    edx,0x63ffffec
  40fc74:	aas    
  40fc75:	push   ecx
  40fc76:	addr16 mov ecx,0x33004161
  40fc7c:	aas    
  40fc7d:	push   ss
  40fc7e:	or     bl,cl
  40fc80:	pop    ss
  40fc81:	or     bh,bh
  40fc83:	int3   
  40fc84:	inc    esi
  40fc85:	dec    esp
  40fc86:	push   ebx
  40fc87:	(bad)  
  40fc88:	xlat   BYTE PTR ds:[ebx]
  40fc89:	mov    ?,WORD PTR [edx]
  40fc8b:	mov    ds:0xb4fe9025,eax
  40fc90:	out    0x94,eax
  40fc92:	lods   eax,DWORD PTR ds:[esi]
  40fc93:	imul   edx,DWORD PTR [edi+0x71a4c015],0xffffff8e
  40fc9a:	(bad)  
  40fc9b:	push   ss
  40fc9c:	xchg   esi,eax
  40fc9d:	call   0x9a5e:0x8e87311f
  40fca4:	fadd   QWORD PTR [esi]
  40fca6:	add    BYTE PTR [esi],ch
  40fca8:	and    ebx,DWORD PTR [edi+0x36a2a782]
  40fcae:	push   0x63
  40fcb0:	xor    al,0x42
  40fcb2:	push   esi
  40fcb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcb5:	call   0xa688:0x8eb712c1
  40fcbc:	ret    0x3c7a
  40fcbf:	mov    esi,esi
  40fcc1:	inc    esp
	...
  40fcd2:	jecxz  0x40fc62
  40fcd4:	add    dh,BYTE PTR [ebx+eiz*4+0x46]
  40fcd8:	dec    edx
  40fcd9:	inc    esp
  40fcda:	mov    ds:0x66e8359e,al
  40fcdf:	mov    edi,0x5e580002
  40fce4:	pop    ss
  40fce5:	and    ecx,DWORD PTR [esi+eax*4+0x7f1c5dd3]
  40fcec:	cli    
  40fced:	mov    edi,0x6832a58f
  40fcf2:	arpl   WORD PTR [esi+0x5d7bbd9d],bx
  40fcf8:	dec    eax
  40fcf9:	inc    ecx
  40fcfa:	arpl   WORD PTR ds:0xfd6f8eb9,ax
  40fd00:	push   eax
  40fd01:	out    dx,al
  40fd02:	imul   ecx,DWORD PTR [eax+0x319a9c55],0x4e
  40fd09:	(bad)  
  40fd0a:	fcom   st(3)
  40fd0c:	sub    BYTE PTR [ebp-0x2b],cl
  40fd0f:	xchg   DWORD PTR ds:0xf056d28f,edi
  40fd15:	push   es
  40fd16:	dec    esi
  40fd17:	(bad)
  40fd1a:	les    eax,FWORD PTR [eax-0x44a7140]
  40fd20:	sub    BYTE PTR [eax],bl
  40fd22:	xchg   DWORD PTR ds:0x5224922,ebx
  40fd28:	mov    ecx,0x62d7b9b
  40fd2d:	(bad)  
  40fd2e:	and    al,0x1d
  40fd30:	jmp    0x80877938
  40fd35:	les    eax,FWORD PTR [eax]
	...
  40fd43:	add    BYTE PTR [eax],al
  40fd45:	pop    ds
  40fd46:	inc    esi
  40fd47:	jmp    0xf152797f
  40fd4c:	fwait
  40fd4d:	or     DWORD PTR [esi+ebx*8],0xffffff8e
  40fd51:	test   cl,bh
  40fd53:	cmp    al,0x8f
  40fd55:	sbb    cl,BYTE PTR gs:[edx]
  40fd58:	pushf  
  40fd59:	mov    bh,0x2d
  40fd5b:	(bad)  
  40fd5c:	mov    gs,WORD PTR [ecx-0x3b]
  40fd5f:	xor    al,0xe8
  40fd61:	les    esi,FWORD PTR [edx+0x3563452b]
  40fd67:	rcr    DWORD PTR [ecx+0x33a58695],0xcb
  40fd6e:	add    eax,0x1dee9ee9
  40fd73:	test   al,0x48
  40fd75:	mov    ds:0x978f3905,al
  40fd7a:	std    
  40fd7b:	nop
  40fd7c:	push   ecx
  40fd7d:	mov    WORD PTR [esi+0x332e9b7d],es
  40fd83:	add    BYTE PTR [esi-0x2b],dh
  40fd86:	xchg   DWORD PTR [ebp+ebp*2-0x13],esi
  40fd8a:	adc    DWORD PTR [eax],ecx
  40fd8c:	push   ecx
  40fd8d:	das    
  40fd8e:	xor    al,0xff
  40fd90:	pop    esi
  40fd91:	cmp    eax,0x60edc1bc
  40fd96:	xor    BYTE PTR [ebx-0x103d1ec3],cl
  40fd9c:	je     0x40fdc9
  40fd9e:	xchg   ebp,eax
  40fd9f:	dec    edi
  40fda0:	ds imul edi,ecx,0xffffffe7
  40fda4:	sahf   
  40fda5:	ja     0x40fd2d
  40fda7:	(bad)  
  40fda8:	loop   0x40fdaa
	...
  40fdb6:	add    BYTE PTR [eax],al
  40fdb8:	mov    al,ds:0x536a3212
  40fdbd:	mov    DWORD PTR [ecx],eax
  40fdbf:	xchg   edi,eax
  40fdc0:	sar    DWORD PTR [ebx+0x44],0x11
  40fdc4:	jle    0x40fd4a
  40fdc6:	aaa    
  40fdc7:	mov    ebp,0x6191182
  40fdcc:	jnp    0x40fdc3
  40fdce:	(bad)  
  40fdcf:	je     0x40fd59
  40fdd1:	sahf   
  40fdd2:	and    eax,0xfe87d599
  40fdd7:	je     0x40fdc5
  40fdd9:	xchg   DWORD PTR [ecx+eiz*8-0x1a],esi
  40fddd:	adc    DWORD PTR [eax],ecx
  40fddf:	shr    DWORD PTR ds:0xe4d6ff35,1
  40fde5:	inc    eax
  40fde6:	lock cmp edi,edi
  40fde9:	push   eax
  40fdea:	pop    eax
  40fdeb:	(bad)  
  40fdec:	out    0xbc,al
  40fdee:	shr    ebp,0x60
  40fdf1:	xor    BYTE PTR [ebx-0x83e1d3b],cl
  40fdf7:	inc    ebx
  40fdf8:	sbb    eax,DWORD PTR [bp+di-0x5a]
  40fdfc:	dec    esp
  40fdfd:	std    
  40fdfe:	out    0x51,eax
  40fe00:	ja     0x40fd88
  40fe02:	(bad)  
  40fe03:	pusha  
  40fe04:	pushf  
  40fe05:	mov    DWORD PTR [ecx-0x17],ebp
  40fe08:	jp     0x40fe0f
  40fe0a:	push   0x413deb00
  40fe0f:	add    BYTE PTR [edx+0x3],dh
  40fe12:	add    BYTE PTR [eax],al
  40fe14:	jp     0x40fe7f
  40fe16:	jo     0x40fe6e
  40fe18:	lea    edi,[eax+0x9]
  40fe1b:	rol    BYTE PTR [eax],0x0
	...
  40fe2a:	add    BYTE PTR [esi],dl
  40fe2c:	mov    ecx,0xe9824587
  40fe31:	sub    al,0x46
  40fe33:	mov    ebx,0x3275ff01
  40fe38:	imul   esp,eax,0xb01ca25
  40fe3e:	rcl    BYTE PTR [esi],0xa5
  40fe41:	std    
  40fe42:	jne    0x40fdd6
  40fe44:	imul   eax,DWORD PTR [ecx],0x4e788d5d
  40fe4a:	push   0x3ebd68
  40fe4f:	rol    BYTE PTR [ecx],cl
  40fe51:	add    bh,ch
  40fe53:	or     al,0xeb
  40fe55:	dec    DWORD PTR [edi+0x6d]
  40fe58:	out    dx,al
  40fe59:	pop    es
  40fe5a:	call   0x3fee31
  40fe5f:	jb     0x40fdf9
  40fe61:	push   ecx
  40fe62:	dec    DWORD PTR [ebp+0x62f87378]
  40fe68:	nop
  40fe69:	push   ecx
  40fe6a:	(bad)  
  40fe6b:	jge    0x40fee5
  40fe6d:	jae    0x40fe6b
  40fe6f:	(bad)  
  40fe70:	out    dx,al
  40fe71:	pop    es
  40fe72:	call   0x3fd077
  40fe77:	add    eax,DWORD PTR [edi+0x2]
  40fe7a:	add    BYTE PTR [edi-0x2],dh
  40fe7d:	jmp    0xa000:0x68950683
  40fe84:	int    0xfe
  40fe86:	jne    0x40feca
  40fe88:	mov    eax,ds:0x91fd502c
  40fe8d:	xchg   DWORD PTR [ebp+0x0],eax
	...
  40fe9c:	add    BYTE PTR [eax],al
  40fe9e:	into   
  40fe9f:	and    BYTE PTR [eax],al
  40fea1:	add    BYTE PTR [ebx-0x75],ah
  40fea4:	dec    esp
  40fea5:	addr16 mov ds:0x432c,eax
  40fea9:	add    BYTE PTR [ebx+0x634144c1],cl
  40feaf:	add    edx,DWORD PTR [esi]
  40feb1:	or     bl,bh
  40feb3:	add    al,0x14
  40feb5:	(bad)  
  40feb6:	cld    
  40feb7:	repz adc eax,0xfa61f4fc
  40febd:	out    0x9c,eax
  40febf:	mov    esi,0x311afe8b
  40fec4:	pop    es
  40fec5:	add    BYTE PTR [esi],dh
  40fec7:	out    0x9e,eax
  40fec9:	sbb    BYTE PTR [edi+0x63001ac6],0xd3
  40fed0:	dec    esp
  40fed1:	dec    BYTE PTR [esi+0x66]
  40fed4:	call   0x2efe:0x8c332c42
  40fedb:	jp     0x40fe68
  40fedd:	je     0x40ff3a
  40fedf:	push   ss
  40fee0:	imul   ecx,DWORD PTR [esi-0x5c],0x73748c1b
  40fee7:	adc    edx,DWORD PTR [esi]
  40fee9:	or     BYTE PTR [ebx-0x7300c405],cl
  40feef:	adc    DWORD PTR [eax+ebx*1],0xffffff84
  40fef3:	add    edi,esi
  40fef5:	(bad)  
  40fef6:	mul    BYTE PTR [ebp-0x66]
  40fef9:	push   esp
  40fefa:	and    al,0x6b
  40fefc:	mov    ah,BYTE PTR [edi-0x14]
  40feff:	sub    eax,DWORD PTR [ebp+0x0]
	...
  40ff0e:	add    BYTE PTR [eax],al
  40ff10:	add    BYTE PTR [ecx+eiz*8-0xd],ah
  40ff14:	out    0x86,eax
  40ff16:	or     DWORD PTR [eax+eax*1],eax
  40ff19:	push   0xbb6510ae
  40ff1e:	in     eax,dx
  40ff1f:	inc    ecx
  40ff20:	inc    ecx
  40ff21:	arpl   WORD PTR [esi+0xa],ax
  40ff24:	and    esp,DWORD PTR [ebx+0x6e]
  40ff27:	jnp    0x40ff6d
  40ff29:	cmp    eax,DWORD PTR ds:0xc6a68511
  40ff2f:	call   0x8156aebe
  40ff34:	add    eax,DWORD PTR [esi+0x5]
  40ff37:	jmp    0xef39d43a
  40ff3c:	push   es
  40ff3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff3e:	jge    0x40ffaf
  40ff40:	inc    ecx
  40ff41:	jae    0x40fec7
  40ff43:	sti    
  40ff44:	repz add al,0xa2
  40ff47:	add    DWORD PTR [ebx-0x749f780b],ecx
  40ff4d:	jo     0x40ff88
  40ff4f:	jo     0x40ff92
  40ff51:	out    0xec,eax
  40ff53:	out    0x3,eax
  40ff55:	int3   
  40ff56:	ret    0x114d
  40ff59:	imul   ebp,DWORD PTR [ebp+0x33],0x3a
  40ff5d:	int3   
  40ff5e:	cmp    DWORD PTR ds:0xbb845711,0xfffffffb
  40ff65:	les    ebp,FWORD PTR [eax]
  40ff67:	sahf   
  40ff68:	mov    dh,BYTE PTR [ebp-0x5278647d]
  40ff6e:	stc    
  40ff6f:	lock fwait
  40ff71:	in     eax,dx
  40ff72:	rcl    BYTE PTR ds:0x8b,cl
	...
  40ff84:	popf   
  40ff85:	stc    
  40ff86:	lock mov cl,BYTE PTR [edi]
  40ff89:	sbb    DWORD PTR [esi],eax
  40ff8b:	adc    DWORD PTR [ebx+0x6d],ebx
  40ff8e:	sbb    eax,0x1f83843a
  40ff93:	(bad)  
  40ff94:	push   eax
  40ff95:	add    eax,0x87887e94
  40ff9a:	lods   al,BYTE PTR ds:[esi]
  40ff9b:	mov    edx,DWORD PTR [esi]
  40ff9d:	mov    BYTE PTR [ebx],bl
  40ff9f:	test   DWORD PTR [esi],esi
  40ffa1:	(bad)  
  40ffa2:	call   0x6a42d6aa
  40ffa7:	enter  0x33d7,0x28
  40ffab:	add    al,0x63
  40ffad:	stc    
  40ffae:	cmp    DWORD PTR [edi+0xff7487],eax
  40ffb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffb5:	add    eax,0x4a553500
  40ffba:	inc    esp
  40ffbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffbc:	pusha  
  40ffbd:	add    eax,0xca21e900
  40ffc2:	imul   ecx
  40ffc4:	pusha  
  40ffc5:	add    eax,0x81a35c00
  40ffca:	dec    edi
  40ffcb:	je     0x40ff70
  40ffcd:	jge    0x41001e
  40ffcf:	adc    ebx,DWORD PTR [edi-0x13]
  40ffd2:	dec    ecx
  40ffd3:	das    
  40ffd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffd5:	add    eax,0x336bd4ff
  40ffda:	inc    ecx
  40ffdb:	jmp    0xaab4c2cd
  40ffe0:	fld    QWORD PTR [ecx]
  40ffe2:	clc    
  40ffe3:	jmp    0xccc44054
	...
  40fff4:	add    BYTE PTR [eax],al
  40fff6:	add    ah,bl
  40fff8:	xor    BYTE PTR [edx-0x2],0x4d
  40fffc:	stc    
  40fffd:	sti    
  40fffe:	push   edx
  40ffff:	mov    edx,0xe9ff8ad8
  410004:	clc    
  410005:	pop    ss
  410006:	cs push edx
  410008:	and    edi,edi
  41000a:	lahf   
  41000b:	test   al,0x83
  41000d:	jne    0x40ffe8
  41000f:	fyl2xp1 
  410011:	pop    es
  410012:	add    edx,ecx
  410014:	cmp    dh,0xe
  410017:	dec    edx
  410018:	or     BYTE PTR [ecx+eax*1-0x1b],0x48
  41001d:	add    ebp,DWORD PTR [edx+0x5b]
  410020:	jge    0x410021
  410022:	jl     0x410087
  410024:	xchg   BYTE PTR ds:0xfe5a53e9,bh
  41002a:	pop    esp
  41002b:	fild   DWORD PTR [ebx-0x3a7697ec]
  410031:	push   DWORD PTR [esi]
  410033:	sbb    BYTE PTR [ebx+eax*1-0x17],al
  410037:	test   DWORD PTR [esi+0x45b900eb],ecx
  41003d:	repnz push ebx
  41003f:	std    
  410040:	inc    ecx
  410041:	clc    
  410042:	add    BYTE PTR [edx+0x6],cl
  410045:	add    bh,al
  410047:	jg     0x40ffde
  410049:	(bad)  
  41004a:	(bad)  
  41004b:	cmp    al,BYTE PTR [esi]
  41004d:	push   DWORD PTR [ebp+0x2a]
  410050:	std    
  410051:	inc    ebx
  410052:	cld    
  410053:	fistp  DWORD PTR [ecx]
  410055:	cld    
  410056:	push   0xa
  410058:	and    BYTE PTR [eax],al
  41005a:	push   0x0
	...
  410068:	add    BYTE PTR [eax],al
  41006a:	cli    
  41006b:	pop    ds
  41006c:	add    bh,bh
  41006e:	jp     0x20477671
  410074:	add    BYTE PTR [edx+0xa],ch
  410077:	sahf   
  410078:	retf   0xfa22
  41007b:	add    eax,0x530ec00b
  410080:	dec    esi
  410081:	push   eax
  410082:	and    ch,BYTE PTR [ebx]
  410084:	push   ecx
  410085:	jmp    DWORD PTR ds:0x3f843fe
  41008b:	and    BYTE PTR [eax],al
  41008d:	push   0xffffffba
  41008f:	push   DWORD PTR ss:[ebp+0x72]
  410093:	mov    WORD PTR [ebx-0x4],?
  410096:	test   DWORD PTR [edx],edx
  410098:	or     al,0x6a
  41009a:	mov    edx,0x1ce8001f
  41009f:	imul   edi,esi,0xffffffff
  4100a2:	add    DWORD PTR [ebp+0x73],0xf812650f
  4100a9:	call   0x40374c
  4100ae:	cmp    eax,0x8a00f842
  4100b3:	add    eax,0x8e078300
  4100b8:	(bad)  
  4100b9:	jae    0x4100ef
  4100bb:	mov    WORD PTR [ebx+0x8],?
  4100be:	test   DWORD PTR [edx],edx
  4100c0:	clc    
  4100c1:	call   0x248729
  4100c6:	push   esp
  4100c7:	fs ret 0x8c73
  4100cb:	push   ds
  4100cc:	mov    DWORD PTR [eax+eax*1+0x0],esi
	...
  4100dc:	add    BYTE PTR [ebx+0x56],bl
  4100df:	add    esp,DWORD PTR [edx]
  4100e1:	arpl   WORD PTR [esi+0x29],bp
  4100e4:	add    esp,DWORD PTR [edx]
  4100e6:	in     al,0xaa
  4100e8:	jmp    0x4aae:0xccaee79
  4100ef:	sar    bh,0x1c
  4100f2:	cmp    al,0x9c
  4100f4:	in     eax,dx
  4100f5:	inc    edx
  4100f6:	outs   dx,BYTE PTR ds:[esi]
  4100f7:	add    cl,BYTE PTR [ebx]
  4100f9:	and    eax,DWORD PTR [ebx-0x694cb013]
  4100ff:	nop
  410100:	dec    edi
  410101:	cld    
  410102:	idiv   DWORD PTR [ecx+0x44]
  410105:	out    dx,eax
  410106:	adc    eax,0xe276ff33
  41010b:	xor    ebp,eax
  41010d:	inc    esp
  41010e:	mov    ebp,0x70c8fe87
  410113:	inc    edx
  410114:	sbb    BYTE PTR [ebx-0x332ef292],0xc1
  41011b:	mov    ah,bh
  41011d:	mov    ds:0xe8fe879e,al
  410122:	mov    cl,0x8e
  410124:	pop    edx
  410125:	stos   BYTE PTR es:[edi],al
  410126:	sub    al,0xf7
  410128:	call   DWORD PTR [edi]
  41012a:	repz xchg esi,eax
  41012c:	sbb    BYTE PTR [edi-0x1fa8cec6],0x59
  410133:	xchg   ecx,eax
  410134:	daa    
  410135:	and    ch,BYTE PTR [esi+0x2]
  410138:	jne    0x41019f
  41013a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41013b:	sub    cl,cl
  41013d:	mov    eax,ds:0x8d0272
	...
  41014e:	add    BYTE PTR [eax],al
  410150:	es jle 0x410184
  410153:	(bad)  
  410154:	out    dx,al
  410155:	popa   
  410156:	call   0x5987:0xe6051530
  41015d:	inc    ebp
  41015e:	in     eax,dx
  41015f:	jg     0x4100f0
  410161:	push   es
  410162:	jmp    0xcd42e36a
  410167:	add    al,0x63
  410169:	adc    eax,0x17e1f6e9
  41016e:	call   0x3bc16476
  410173:	mov    BYTE PTR ds:0xe89cb0fa,dh
  410179:	frstor [ebp-0x12baa679]
  41017f:	and    BYTE PTR [eax+0x6],0xe9
  410183:	add    edx,DWORD PTR [edx+edi*8]
  410186:	mov    WORD PTR [edi+0x23107d97],es
  41018c:	popf   
  41018d:	(bad)  
  41018e:	call   0x75c0132e
  410193:	xchg   ebx,ebp
  410195:	leave  
  410196:	jl     0x41011f
  410198:	ja     0x41011b
  41019a:	gs adc ebx,ebp
  41019d:	in     al,dx
  41019e:	mov    ah,0x3d
  4101a0:	and    al,BYTE PTR ds:0x7fd6c441
  4101a6:	dec    ebp
  4101a7:	jge    0x4101d0
  4101a9:	ins    DWORD PTR es:[edi],dx
  4101aa:	inc    ebp
  4101ab:	adc    edi,eax
  4101ad:	jg     0x410162
  4101af:	mov    eax,DWORD PTR [eax+esi*8-0x52]
  4101b3:	inc    esp
	...
  4101c0:	add    BYTE PTR [eax],al
  4101c2:	add    BYTE PTR [ebx+0x6d],ah
  4101c5:	jnp    0x41014d
  4101c7:	lods   eax,DWORD PTR ds:[esi]
  4101c8:	jg     0x410239
  4101ca:	inc    ecx
  4101cb:	mov    edi,0x9c979b83
  4101d0:	push   cs
  4101d1:	ins    DWORD PTR es:[edi],dx
  4101d2:	pop    ebp
  4101d3:	xchg   esp,eax
  4101d4:	jg     0x4101be
  4101d6:	or     BYTE PTR [edi],0x6d
  4101d9:	call   0xe8e0e2d4
  4101de:	add    esp,DWORD PTR [ebx-0x7c]
  4101e1:	push   DWORD PTR [ebx-0x2c]
  4101e4:	jg     0x4101f3
  4101e6:	gs bnd jg 0x4101e8
  4101ea:	jmp    0xd228facc
  4101ef:	push   ecx
  4101f0:	es add cl,ch
  4101f3:	fyl2xp1 
  4101f5:	out    0x62,eax
  4101f7:	out    0x8b,al
  4101f9:	(bad)  
  4101fa:	cwde   
  4101fb:	out    0xd5,eax
  4101fd:	jmp    0x52f9:0x3bb05d0f
  410204:	or     eax,0x95df03c
  410209:	sub    al,0xd9
  41020b:	leave  
  41020c:	add    ch,BYTE PTR [eax+ebp*1]
  41020f:	arpl   WORD PTR [ebx],cx
  410211:	adc    BYTE PTR [ebp+0x6909f530],0xe4
  410218:	cmp    eax,0x6ae0ec77
  41021d:	das    
  41021e:	xchg   edx,eax
  41021f:	(bad)  
  410220:	(bad)  
  410221:	jmp    0x41024b
  410223:	fild   WORD PTR [edx+0x9]
  410226:	test   eax,0x0
	...
  410233:	add    BYTE PTR [eax],al
  410235:	add    al,al
  410237:	add    cl,BYTE PTR [edx]
  410239:	sub    eax,0x300acd8a
  41023e:	jae    0x41028f
  410240:	pop    eax
  410241:	pusha  
  410242:	fwait
  410243:	popa   
  410244:	(bad)  
  410245:	aam    0xe8
  410247:	pop    DWORD PTR [ecx+ecx*2+0x5]
  41024b:	retf   0xe9d7
  41024e:	pusha  
  41024f:	add    eax,0x59236400
  410254:	dec    edi
  410255:	ret    
  410256:	addr16 jmp 0x410258
  410259:	xchg   edx,eax
  41025a:	pusha  
  41025b:	jmp    0x41025c
  41025d:	xchg   edx,eax
  41025e:	pusha  
  41025f:	nop
  410260:	inc    esp
  410261:	xor    eax,0x18147e50
  410266:	test   al,0xc5
  410268:	(bad)  
  410269:	call   DWORD PTR [ecx+0x9227242]
  41026f:	or     eax,0x65f600d8
  410274:	std    
  410275:	jne    0x4102cd
  410277:	xchg   DWORD PTR [ebx-0x28],esi
  41027a:	jge    0x41028a
  41027c:	in     al,0xff
  41027e:	mov    bh,0x9d
  410280:	std    
  410281:	jne    0x4102c5
  410283:	call   0x75fd:0x881dfcbb
  41028a:	add    ah,BYTE PTR [ecx+0x24a2096]
  410290:	push   DWORD PTR [ebp+0x1e]
  410293:	mov    eax,ds:0x87fd4f78
  410298:	std    
  410299:	jne    0x41029b
	...
  4102a7:	add    BYTE PTR [eax],al
  4102a9:	shl    BYTE PTR [eax-0x7802b090],cl
  4102af:	std    
  4102b0:	jne    0x410298
  4102b2:	mov    al,ds:0x87dd4f68
  4102b7:	mov    eax,DWORD PTR [ebp-0x76]
  4102ba:	cmp    eax,ebp
  4102bc:	nop
  4102bd:	push   edi
  4102be:	mov    ch,bh
  4102c0:	pop    edi
  4102c1:	dec    esp
  4102c2:	mov    edx,0x2efa0cc0
  4102c7:	mov    ebp,esp
  4102c9:	jns    0x410310
  4102cb:	cli    
  4102cc:	push   0xffffffca
  4102ce:	sbb    eax,DWORD PTR [ebp-0x1]
  4102d1:	mov    bh,0x79
  4102d3:	out    0x81,al
  4102d5:	out    dx,al
  4102d6:	mov    ch,bh
  4102d8:	mov    edi,esi
  4102da:	test   ebp,edi
  4102dc:	jne    0x410290
  4102de:	cdq    
  4102df:	and    ch,bh
  4102e1:	ins    DWORD PTR es:[edi],dx
  4102e2:	mov    BYTE PTR [eax+0x5],ch
  4102e5:	and    bh,bh
  4102e7:	push   ecx
  4102e8:	(bad)  
  4102e9:	jge    0x410367
  4102eb:	mov    esi,0x68319c74
  4102f0:	mul    DWORD PTR [ebx+0x2f]
  4102f3:	inc    esp
  4102f4:	add    bl,bh
  4102f6:	imul   eax,DWORD PTR [edx],0xffffffef
  4102f9:	lds    edx,FWORD PTR [ebx+0x6c22463d]
  4102ff:	xor    bh,bh
  410301:	out    dx,al
  410302:	arpl   WORD PTR [edx-0x7c910ec3],bx
  410308:	out    0x4e,eax
  41030a:	aaa    
  41030b:	test   esi,edi
	...
  410319:	add    BYTE PTR [eax],al
  41031b:	add    BYTE PTR [edx+edx*8-0x79],bl
  41031f:	dec    dh
  410321:	call   0x834b:0x9f87
  410327:	enter  0x6b21,0x2
  41032b:	push   ebp
  41032c:	call   0x3804827b
  410331:	sbb    al,0x1a
  410333:	add    BYTE PTR [ecx+0x5b748524],bh
  410339:	xchg   esi,eax
  41033a:	xlat   BYTE PTR ds:[ebx]
  41033b:	dec    ebx
  41033c:	sbb    al,0x9c
  41033e:	jns    0x410384
  410340:	pop    ss
  410341:	call   0x2d7c2b0b
  410346:	add    al,0x80
  410348:	inc    esp
  410349:	outs   dx,BYTE PTR ds:[esi]
  41034a:	push   cs
  41034b:	push   ecx
  41034c:	mov    esp,eax
  41034e:	cmp    al,0x41
  410350:	arpl   WORD PTR [ebx],bx
  410352:	pushf  
  410353:	jne    0x410397
  410355:	outs   dx,BYTE PTR ds:[esi]
  410356:	add    cl,BYTE PTR [ebx]
  410358:	and    ebx,DWORD PTR [ebx+0x0]
  41035b:	jmp    0x4103c9
  41035d:	push   esi
  41035e:	js     0x4103a5
  410360:	and    ch,BYTE PTR [esi+0x2b]
  410363:	call   0x4510ae
  410368:	pop    eax
  410369:	cs mov db2,esp
  41036d:	(bad)  
  41036e:	jp     0x4103c7
  410370:	mov    ah,0x33
  410372:	clc    
  410373:	mov    edi,0x68325537
  410378:	arpl   WORD PTR ds:0xedde94e9,ax
  41037e:	jg     0x4103bd
	...
  41038c:	add    BYTE PTR [eax],al
  41038e:	add    BYTE PTR [edx],ah
  410390:	add    eax,0xd1784b9
  410395:	add    DWORD PTR ds:0x9b057c10,ecx
  41039b:	ret    0xfdcb
  41039e:	cmp    DWORD PTR [eax+0x38],0x29
  4103a2:	dec    edx
  4103a3:	ins    DWORD PTR es:[edi],dx
  4103a4:	jl     0x410393
  4103a6:	xor    DWORD PTR [edx-0x55],0x20
  4103aa:	or     edx,esi
  4103ac:	lods   al,BYTE PTR ds:[esi]
  4103ad:	(bad)  
  4103af:	pop    eax
  4103b0:	jl     0x41040d
  4103b2:	or     al,0x3b
  4103b4:	add    al,0x1d
  4103b6:	add    DWORD PTR [ebp-0x24],0xffffffaf
  4103ba:	inc    esi
  4103bb:	pusha  
  4103bc:	add    eax,0x86488f14
  4103c1:	lods   al,BYTE PTR ds:[esi]
  4103c2:	push   esp
  4103c3:	xor    eax,0x9f91ad7c
  4103c8:	jns    0x410402
  4103ca:	adc    DWORD PTR [edi+0x68f99e15],0x6d
  4103d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103d2:	and    al,0x63
  4103d4:	add    eax,0x825543e2
  4103d9:	mov    ebx,0xa6056305
  4103de:	leave  
  4103df:	in     al,dx
  4103e0:	add    al,0xe9
  4103e2:	add    esp,DWORD PTR [ebx+0x44]
  4103e5:	and    esi,DWORD PTR [ebp+eiz*8+0x3]
  4103e9:	jmp    0xd3464cf1
  4103ee:	add    ecx,DWORD PTR [ecx+0x5]
  4103f1:	ret    
  4103f2:	add    eax,DWORD PTR [eax]
	...
  410400:	add    BYTE PTR [eax],al
  410402:	faddp  st(1),st
  410404:	pop    eax
  410405:	aam    0xd7
  410407:	cmp    DWORD PTR [eax],0x987bbd7b
  41040d:	sub    BYTE PTR [edi],0x7d
  410410:	push   DWORD PTR ds:0x4fe77faa
  410416:	jg     0x41041d
  410418:	add    dl,dh
  41041a:	and    al,bh
  41041c:	add    al,0x10
  41041e:	pop    ss
  41041f:	add    eax,0xfb78e900
  410424:	daa    
  410425:	test   al,0x60
  410427:	jl     0x41049d
  410429:	(bad)  [eax]
  41042b:	inc    ebp
  41042c:	push   eax
  41042d:	(bad)  
  41042e:	loope  0x4103fb
  410430:	mov    bl,BYTE PTR [ecx]
  410432:	rol    BYTE PTR [eax+0x7ae1f6ef],cl
  410438:	dec    edi
  410439:	cmp    ecx,edi
  41043b:	mov    ch,0x50
  41043d:	fsubrp st(1),st
  41043f:	lea    eax,[ebp+eax*8-0x3e018437]
  410446:	pop    ecx
  410447:	retf   
  410448:	inc    dh
  41044a:	rol    ecx,cl
  41044c:	repz sbb DWORD PTR [edi+0x74],eax
  410450:	inc    ebp
  410451:	sub    BYTE PTR [edi+0x7a],ah
  410454:	mov    ah,0xbd
  410456:	test   eax,0x1ba6fe7b
  41045b:	psubsb mm6,mm1
  41045e:	das    
  41045f:	jl     0x41045f
  410461:	pusha  
  410462:	fist   DWORD PTR [edx-0xa]
  410465:	mov    es,WORD PTR [eax]
	...
  410473:	add    BYTE PTR [eax],al
  410475:	loope  0x410463
  410477:	call   DWORD PTR [eax]
  410479:	addr16 ret 0xe940
  41047d:	loope  0x410430
  41047f:	jmp    0x4104ff
  410481:	loope  0x4104fe
  410483:	(bad)  
  410484:	hlt    
  410485:	push   esp
  410486:	ins    DWORD PTR es:[edi],dx
  410487:	in     al,dx
  410488:	mov    ecx,0x64887be1
  41048d:	dec    eax
  41048e:	jae    0x41048e
  410490:	push   esi
  410491:	mov    esi,0x99e2667a
  410496:	(bad)  
  410499:	and    eax,0x75f7eabd
  41049e:	xchg   ebp,edi
  4104a0:	jne    0x410468
  4104a2:	out    dx,al
  4104a3:	rcl    BYTE PTR [eax+0x75],1
  4104a6:	xchg   DWORD PTR [edi-0x200917b],eax
  4104ac:	inc    DWORD PTR [edi]
  4104ae:	(bad)  
  4104af:	shl    bh,cl
  4104b1:	jne    0x41043a
  4104b3:	dec    esi
  4104b4:	push   0x3f4f99
  4104b9:	gs mov ebp,0x8475f7ea
  4104bf:	std    
  4104c0:	jne    0x410448
  4104c2:	out    dx,al
  4104c3:	mov    al,0x50
  4104c5:	jne    0x41044b
  4104c7:	or     eax,eax
  4104c9:	mov    esi,0xebd831e
  4104ce:	cld    
  4104cf:	std    
  4104d0:	(bad)  
  4104d1:	ds jae 0x4104e2
  4104d4:	jmp    FWORD PTR [edx-0x6c]
  4104d7:	and    eax,0x0
	...
  4104e6:	add    BYTE PTR [eax],al
  4104e8:	std    
  4104e9:	cmp    ebp,0x50
  4104ec:	adc    al,BYTE PTR [ecx*2+0x12e7f5ff]
  4104f3:	or     edi,edx
  4104f5:	jl     0x4104fb
  4104f7:	push   eax
  4104f8:	repnz outs dx,DWORD PTR ds:[esi]
  4104fa:	dec    ebx
  4104fb:	push   ebp
  4104fd:	retf   
  4104fe:	and    eax,0xffffffed
  410501:	cmp    ebp,0x15
  410504:	cli    
  410505:	add    eax,0x6e0a6a00
  41050a:	adc    BYTE PTR [edi+0x4b],al
  41050d:	add    edi,edi
  41050f:	mov    ch,0xe6
  410511:	sti    
  410512:	std    
  410513:	push   DWORD PTR [ebp+0x72]
  410516:	or     ch,al
  410518:	mov    dh,0x55
  41051a:	std    
  41051b:	call   DWORD PTR [ebx-0x7e]
  41051e:	(bad)  
  410520:	arpl   bx,dx
  410522:	sub    BYTE PTR [ecx+0x63],0x44
  410526:	xor    BYTE PTR [edi+0x22],al
  410529:	ins    BYTE PTR es:[edi],dx
  41052a:	jg     0x4104e0
  41052c:	(bad)  
  41052d:	xor    al,BYTE PTR [ecx+0xeb8acfe]
  410533:	call   0xfec0a14a
  410538:	jmp    0x851a:0x94f653e8
  41053f:	mov    esp,0xfe811aab
  410544:	arpl   WORD PTR [ebx-0x7a],bx
  410547:	xchg   ebx,eax
  410548:	arpl   WORD PTR [edx+eax*1+0x68],bp
	...
  410558:	add    BYTE PTR [eax],al
  41055a:	add    BYTE PTR [edx],bh
  41055c:	mov    ds:0xa8dfffc1,eax
  410561:	jbe    0x4105b2
  410563:	xor    BYTE PTR fs:[esi+esi*8+0x5c],bl
  410568:	pusha  
  410569:	push   0x6b
  41056b:	rcl    DWORD PTR [edi+0x7f],1
  41056e:	or     ah,BYTE PTR [ebx]
  410570:	(bad)  
  410572:	add    dh,0x52
  410575:	add    dh,BYTE PTR [ebp+esi*4-0x15]
  410579:	mov    ebp,0x7fb82ce3
  41057e:	push   DWORD PTR [eax+0x3bbc84c1]
  410584:	mov    al,0x7f
  410586:	(bad)  
  410587:	arpl   WORD PTR [edx],bx
  410589:	call   0x6faf78f5
  41058e:	mov    ebp,0xe80c1a0c
  410593:	xchg   ecx,eax
  410594:	and    eax,0x39fcfe81
  410599:	imul   esi,esi,0xfffffff4
  41059c:	idiv   DWORD PTR [edi+0x74]
  41059f:	pop    ebx
  4105a0:	xchg   BYTE PTR [eax+0x48],cl
  4105a3:	in     al,0xe7
  4105a5:	jg     0x41055b
  4105a7:	mov    DWORD PTR ds:0x78d5805e,0xbdbb0bd3
  4105b1:	lahf   
  4105b2:	add    ch,0x78
  4105b5:	shl    DWORD PTR [edi-0x43],cl
  4105b8:	mov    dl,0x20
  4105ba:	js     0x410571
  4105bc:	js     0x4105fb
  4105be:	test   BYTE PTR [eax],0x0
	...
  4105cd:	add    BYTE PTR [ebp+ebp*2-0x4f],ah
  4105d1:	retf   0x78a5
  4105d4:	sub    eax,0x2570bcb6
  4105d9:	adc    BYTE PTR [ebp+0x556bf0f2],0xce
  4105e0:	adc    eax,0x2cb28580
  4105e5:	js     0x410664
  4105e7:	js     0x4105ee
  4105e9:	neg    BYTE PTR [ebp+ebp*2+0x71]
  4105ed:	retf   0x786d
  4105f0:	cmc    
  4105f1:	mov    ch,0x94
  4105f3:	jo     0x4105e2
  4105f5:	jg     0x410654
  4105f7:	repnz lock imul edx,edi,0xffffffce
  4105fc:	fnstsw WORD PTR [edi+0x4d]
  4105ff:	mov    dl,0xb0
  410601:	ja     0x410648
  410603:	js     0x4105c5
  410605:	xchg   DWORD PTR [eax-0x10803a88],ebp
  41060b:	ins    BYTE PTR es:[edi],dx
  41060c:	mov    ch,0x7f
  41060e:	sub    eax,0x25d0346d
  410613:	js     0x4105c2
  410615:	mov    ecx,0x7fa57038
  41061a:	cld    
  41061b:	cmc    
  41061c:	sub    al,0x7f
  41061e:	or     eax,0xd685b78
  410623:	js     0x4105b2
  410625:	ins    BYTE PTR es:[edi],dx
  410626:	xchg   cl,cl
  410628:	test   DWORD PTR [edi-0xb],edi
  41062b:	mov    cl,0x98
  41062d:	ja     0x41061c
  41062f:	ja     0x410630
  410631:	add    BYTE PTR [eax],0x0
	...
  410640:	add    BYTE PTR [eax],cl
  410642:	int3   
  410643:	(bad)  
  410644:	outs   dx,BYTE PTR ds:[esi]
  410645:	pop    esp
  410646:	mov    cl,0xeb
  410648:	pop    esi
  410649:	push   esp
  41064a:	ja     0x41064a
  41064c:	aam    0x5c
  41064e:	js     0x4106c4
  410650:	loope  0x41068a
  410652:	inc    edx
  410653:	cld    
  410654:	dec    esi
  410655:	cmp    al,0x77
  410657:	mov    ah,0x55
  410659:	sub    al,0x77
  41065b:	(bad)  
  41065c:	push   ecx
  41065d:	ins    BYTE PTR es:[edi],dx
  41065e:	leave  
  41065f:	(bad)  
  410660:	ss and al,0xc1
  410663:	test   DWORD PTR [eax+0x39],0x1426fe79
  41066a:	icebp  
  41066b:	sti    
  41066c:	adc    esi,ebx
  41066e:	sbb    DWORD PTR [eax],eax
  410670:	jmp    0xe94c4c8c
  410675:	fwait
  410676:	mov    ch,bl
  410678:	push   0x2b
  41067a:	mov    WORD PTR fs:[esp+ebp*8-0x62f49839],fs
  410682:	(bad)  
  410683:	inc    DWORD PTR [eax-0x16bf3eff]
  410689:	aad    0xf1
  41068b:	or     edx,ecx
  41068d:	test   esi,eax
  41068f:	(bad)  
  410690:	(bad)  
  410691:	pop    ecx
  410692:	inc    ebp
  410693:	jae    0x4106d7
  410695:	pop    ss
  410696:	test   BYTE PTR [ebp+eax*8+0x5c],bh
  41069a:	lock pop esi
  41069c:	mov    esi,0xb1448670
  4106a1:	(bad)  
  4106a3:	div    DWORD PTR [ebp+0x0]
	...
  4106b1:	add    BYTE PTR [eax],al
  4106b3:	add    BYTE PTR [edi+0x5],ah
  4106b6:	add    BYTE PTR [edi],bl
  4106b8:	pop    esp
  4106b9:	ds inc esp
  4106bb:	mov    eax,ds:0xe9000594
  4106c0:	jns    0x410686
  4106c2:	(bad)  
  4106c3:	adc    al,0x7f
  4106c5:	fsubp  st(3),st
  4106c7:	add    BYTE PTR [eax+eax*2-0x2],al
  4106cb:	mov    WORD PTR [edi-0x13],es
  4106ce:	dec    esi
  4106cf:	call   0x411fea
  4106d4:	dec    ecx
  4106d5:	mov    esi,0x95ca6a0a
  4106da:	inc    ebx
  4106db:	in     al,0xa
  4106dd:	imul   esp,DWORD PTR [ecx-0xfd04ba],0x75
  4106e4:	sahf   
  4106e5:	jmp    0xc009:0xf71d4edc
  4106ec:	test   BYTE PTR [esi],0x50
  4106ef:	push   0xbeef02bb
  4106f4:	cli    
  4106f5:	div    DWORD PTR [ebx+0x8]
  4106f8:	jb     0x41069f
  4106fa:	imul   edi,edi,0x6d
  4106fd:	jmp    0x4dfd:0xf76d4bac
  410704:	push   edx
  410705:	cmp    DWORD PTR [ebx-0x8],0xffffff8a
  410709:	jge    0x4106c1
  41070b:	call   0x3e522a
  410710:	inc    ebx
  410711:	les    eax,FWORD PTR [esi]
  410713:	add    bh,dh
  410715:	mov    ch,dl
  410717:	add    DWORD PTR [eax],0x0
	...
  410726:	add    BYTE PTR [esi],al
  410728:	test   DWORD PTR [eax+0x0],ebp
  41072b:	mov    al,0x40
  41072d:	std    
  41072e:	jne    0x410772
  410730:	jmp    0x4587:0xf82d48c0
  410737:	push   ds
  410738:	imul   edi,DWORD PTR [edi-0xfe84ba],0x412b3d35
  410742:	add    ch,cl
  410744:	ins    DWORD PTR es:[edi],dx
  410745:	push   es
  410746:	call   0x3e8c45
  41074b:	jb     0x41070f
  41074d:	inc    esp
  41074e:	inc    ecx
  41074f:	arpl   WORD PTR [edx+ebp*8+0x1],bp
  410753:	arpl   WORD PTR [edx+eax*4-0x2],bp
  410757:	outs   dx,BYTE PTR ds:[esi]
  410758:	je     0x4107c4
  41075a:	fucomp st(7)
  41075c:	idiv   BYTE PTR [esi+edi*8+0x2e]
  410760:	pop    edi
  410761:	sub    DWORD PTR [ecx+0x63],eax
  410764:	out    0xf6,eax
  410766:	pop    es
  410767:	retf   
  410768:	adc    al,0x7d
  41076a:	dec    ah
  41076c:	push   ebx
  41076d:	add    BYTE PTR [eax],al
  41076f:	arpl   sp,bp
  410771:	jl     0x4107e7
  410773:	imul   eax,esp,0x1f
  410776:	push   DWORD PTR [esi+edi*4+0x36af747c]
  41077d:	test   DWORD PTR [edi],0xfecbf1bb
  410783:	pushf  
  410784:	and    al,0x42
  410786:	add    esp,DWORD PTR [ebx-0x47]
  410789:	xchg   ebx,ebp
	...
  410797:	add    BYTE PTR [eax],al
  410799:	add    al,ah
  41079b:	pop    ds
  41079c:	pusha  
  41079d:	push   ebp
  41079e:	sub    al,0x82
  4107a0:	add    ch,BYTE PTR [edx+0x2b]
  4107a3:	pop    es
  4107a4:	test   DWORD PTR [edi],0xfeca9f8b
  4107aa:	ins    BYTE PTR es:[edi],dx
  4107ab:	hlt    
  4107ac:	(bad)  
  4107ad:	sti    
  4107ae:	loopne 0x410760
  4107b0:	mov    ch,0x2d
  4107b2:	mov    ds:0xdf0f025e,al
  4107b7:	mov    ecx,0xdf630001
  4107bc:	cmp    eax,0x41d75b9
  4107c1:	add    BYTE PTR [edx+ebp*8+0x42],ch
  4107c5:	add    BYTE PTR [ebx+0x5e],ah
  4107c8:	jg     0x410806
  4107ca:	and    al,BYTE PTR ds:0x6c24ffc3
  4107d0:	xchg   BYTE PTR [edx-0x7cfda19e],dh
  4107d6:	push   esi
  4107d7:	add    eax,0x5a22d6c
  4107dc:	jmp    0xe7ece6ed
  4107e1:	add    esp,DWORD PTR [ebx-0x78]
  4107e4:	retf   
  4107e5:	mov    al,BYTE PTR [esi-0x3a]
  4107e8:	call   0x5fca63f0
  4107ed:	add    ah,BYTE PTR [ebx+0x5]
  4107f0:	push   0x3e
  4107f2:	out    dx,al
  4107f3:	and    ebp,DWORD PTR [eax]
  4107f5:	add    al,0x63
  4107f7:	add    al,0x6d
  4107f9:	(bad)  
  4107fa:	arpl   WORD PTR ds:0x80e9,ax
	...
  41080c:	add    BYTE PTR [edi-0x433cf96a],al
  410812:	je     0x4107f1
  410814:	xchg   DWORD PTR ds:0xe003e906,esi
  41081a:	xor    bh,BYTE PTR [ebp+ebp*1+0x22]
  41081e:	add    eax,0xf7e70ce9
  410823:	out    0x3,eax
  410825:	arpl   bp,bx
  410827:	mov    bh,0xc4
  410829:	and    eax,DWORD PTR ds:0x1a840393
  41082f:	pop    esp
  410830:	sub    eax,0xc6600522
  410835:	ins    BYTE PTR es:[edi],dx
  410836:	mov    BYTE PTR [ebx+0x65036c7b],al
  41083c:	(bad)  [ebx+0x5]
  41083f:	jmp    0xee1c5d6c
  410844:	cmc    
  410845:	dec    esp
  410846:	je     0x410843
  410848:	mov    esp,0x8ee8c67e
  41084d:	xor    al,0x0
  41084f:	fcomip st,st(1)
  410851:	addr16 pop esi
  410853:	push   ss
  410854:	add    eax,0xd2720563
  410859:	pop    eax
  41085a:	xor    BYTE PTR [edx],0xec
  41085d:	fldz   
  41085f:	inc    DWORD PTR [esi+ebp*8-0x40]
  410863:	repz loop 0x4107ff
  410866:	add    eax,DWORD PTR [esp+eax*1-0x6ffffa9a]
  41086d:	pop    ecx
  41086e:	push   es
  41086f:	add    cl,ch
	...
  41087d:	add    BYTE PTR [eax],al
  41087f:	add    BYTE PTR [eax],cl
  410881:	fadd   DWORD PTR [esi+0x28]
  410884:	pop    edi
  410885:	je     0x4108bd
  410887:	xchg   ecx,eax
  410888:	inc    esi
  410889:	adc    DWORD PTR [eax],eax
  41088b:	jmp    0x6c4f4de5
  410890:	push   ebx
  410891:	je     0x410891
  410893:	jmp    0xe948fb75
  410898:	pop    ecx
  410899:	mov    ecx,ebp
  41089b:	jmp    0xdf400e00
  4108a0:	push   0x39a35f5d
  4108a5:	jae    0x41082f
  4108a7:	lods   al,BYTE PTR ds:[esi]
  4108a8:	xor    BYTE PTR [ebx+0x76],dh
  4108ab:	icebp  
  4108ac:	sub    ecx,edi
  4108ae:	out    dx,eax
  4108af:	ss nop
  4108b1:	jmp    edi
  4108b3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4108b5:	jb     0x4108b5
  4108b7:	xchg   ecx,eax
  4108b8:	stos   BYTE PTR es:[edi],al
  4108b9:	retf   0xe940
  4108bc:	or     ecx,edi
  4108be:	out    dx,eax
  4108bf:	add    DWORD PTR [esi],ecx
  4108c1:	verw   cx
  4108c4:	gs inc ebp
  4108c6:	push   cs
  4108c7:	ins    BYTE PTR es:[edi],dx
  4108c8:	mov    bl,0x73
  4108ca:	(bad)  
  4108cb:	jmp    0xaccc7c46
  4108d0:	enter  0x8cc2,0xa4
  4108d4:	mov    esp,0x3ee969c2
  4108d9:	jae    0x41092f
  4108db:	fidiv  WORD PTR [ebx+0x44]
  4108de:	sub    eax,0xbffe6728
  4108e3:	fiadd  WORD PTR [eax]
	...
  4108f1:	add    BYTE PTR [eax],al
  4108f3:	mov    ah,0x9b
  4108f5:	(bad)  
  4108f6:	(bad)  
  4108f7:	cmp    al,BYTE PTR [edi]
  4108f9:	lea    eax,[ebp+0x1e]
  4108fc:	push   edi
  4108fd:	std    
  4108fe:	jne    0x410922
  410900:	lock jae 0x4108ef
  410903:	lds    edx,FWORD PTR ds:0x93b2e85
  410909:	or     eax,eax
  41090b:	outs   dx,BYTE PTR ds:[esi]
  41090c:	jno    0x410899
  41090e:	inc    ebp
  41090f:	jmp    0x6a09:0x60006856
  410916:	pop    es
  410917:	push   eax
  410918:	or     edi,edi
  41091a:	jne    0x4108fa
  41091c:	out    dx,eax
  41091d:	adc    ecx,DWORD PTR [ecx+0xafe49a4]
  410923:	or     ah,BYTE PTR [ebx+0x54]
  410926:	jmp    FWORD PTR [edi+0x13e8e6e6]
  41092c:	lock std 
  41092e:	mov    DWORD PTR [edi],ecx
  410930:	fisttp DWORD PTR [ebx-0x2a9d5bb]
  410936:	jne    0x4108be
  410938:	pusha  
  410939:	(bad)  
  41093a:	imul   edi,DWORD PTR [ebp-0x200101a0],0x315fdd2
  410944:	sbb    al,0x41
  410946:	add    BYTE PTR [ecx-0xdd68d3a],dl
  41094c:	push   es
  41094d:	add    bh,ch
  41094f:	adc    al,0xef
  410951:	jae    0x41095b
  410953:	bound  esi,QWORD PTR [esi]
  410955:	inc    esi
  410956:	inc    DWORD PTR [eax]
	...
  410964:	add    BYTE PTR [eax],al
  410966:	gs out dx,eax
  410968:	je     0x410972
  41096a:	gs jne 0x41096f
  41096d:	(bad)  
  41096e:	(bad)  
  410970:	out    0x58,eax
  410972:	cld    
  410973:	out    dx,al
  410974:	std    
  410975:	jmp    FWORD PTR [edi+0x675fde9]
  41097b:	in     al,dx
  41097c:	jae    0x410986
  41097e:	arpl   WORD PTR [ebp+ecx*8+0x45],ax
  410982:	xor    al,0x43
  410984:	js     0x4109fa
  410986:	andps  xmm0,XMMWORD PTR [eax+ecx*2+0x7478b324]
  41098e:	pop    es
  41098f:	mov    ebx,0x1d458d0e
  410994:	add    al,0x6a
  410996:	arpl   WORD PTR [ebx+0x7904ebee],bp
  41099c:	xchg   ecx,eax
  41099d:	sub    eax,0x74775ca2
  4109a2:	repz and eax,0x48
  4109a6:	in     al,dx
  4109a7:	mov    al,BYTE PTR [esi+eax*8-0xc390cad]
  4109ae:	loopne 0x410a28
  4109b0:	outs   dx,BYTE PTR ds:[esi]
  4109b1:	jmp    DWORD PTR [ebp-0x17]
  4109b4:	imul   edi,ebp,0xffffffcc
  4109b7:	jmp    0x6978:0xd2c5b46a
  4109be:	arpl   bx,bx
  4109c0:	out    dx,al
  4109c1:	div    DWORD PTR [eax+edi*2+0x5c222db5]
  4109c8:	ja     0x410a3e
	...
  4109d6:	add    BYTE PTR [eax],al
  4109d8:	add    BYTE PTR [edi-0x74f810ce],ah
  4109de:	cmc    
  4109df:	sar    esi,0x94
  4109e2:	sbb    al,0xc8
  4109e5:	mov    eax,ds:0xd855025f
  4109ea:	inc    DWORD PTR [edx+0x79129fc3]
  4109f0:	(bad)  
  4109f1:	out    0xa8,al
  4109f3:	jbe    0x410a44
  4109f5:	ins    BYTE PTR es:[edi],dx
  4109f6:	lock push es
  4109f8:	jmp    FWORD PTR [esi]
  4109fa:	arpl   WORD PTR [ecx],bp
  4109fc:	inc    ecx
  4109fd:	arpl   WORD PTR [esi],ax
  4109ff:	std    
  410a00:	sbb    ah,BYTE PTR [ebx+0x5e]
  410a03:	or     eax,eax
  410a05:	pop    esp
  410a06:	add    eax,0x563a86c
  410a0b:	jmp    0xe8aeb150
  410a10:	add    esp,DWORD PTR [ebx+0x5]
  410a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a14:	mov    esi,0x3ed7130
  410a19:	arpl   bx,bx
  410a1b:	call   0xe920270d
  410a20:	in     eax,dx
  410a21:	adc    al,0x82
  410a23:	and    esi,DWORD PTR [eax-0x64]
  410a26:	sub    BYTE PTR [ebx+0x6f],0xd
  410a2a:	jno    0x4109c9
  410a2c:	sar    ebp,cl
  410a2e:	cli    
  410a2f:	nop
  410a30:	js     0x410aa1
  410a32:	jno    0x4109b4
  410a34:	(bad)  
  410a35:	dec    ecx
  410a36:	add    eax,0xfa230ce9
  410a3b:	jecxz  0x410aa7
	...
  410a49:	add    BYTE PTR [eax],al
  410a4b:	add    BYTE PTR [edx+0x6],dl
  410a4e:	jmp    0xc0c65556
  410a53:	ret    0x6fcc
  410a56:	fild   DWORD PTR [edi]
  410a58:	mov    ebx,0xbd78acf5
  410a5d:	aad    0x61
  410a5f:	push   ebx
  410a60:	out    0x8a,eax
  410a62:	push   esp
  410a63:	jo     0x410a12
  410a65:	jo     0x4109ff
  410a67:	aad    0xbc
  410a69:	in     eax,0xac
  410a6b:	js     0x410a0a
  410a6d:	jle    0x410ada
  410a6f:	push   edi
  410a70:	lea    esi,[eax+0x2d]
  410a73:	imul   edx,esi,0xffffffbd
  410a76:	and    eax,0x9104fa78
  410a7b:	lea    esp,ds:0xaf78e8c6
  410a81:	push   ecx
  410a82:	adc    eax,0xbb706d78
  410a87:	or     BYTE PTR [edx],bh
  410a89:	(bad)  
  410a8a:	call   0xfffd20fa
  410a8f:	cmc    
  410a90:	int3   
  410a91:	jge    0x410a17
  410a93:	stc    
  410a94:	mov    esp,0x5f53fe6f
  410a99:	fisttp QWORD PTR [esi-0x28fd9da]
  410a9f:	pushf  
  410aa0:	fwait
  410aa1:	ja     0x410aa1
  410aa3:	into   
  410aa4:	mov    ah,0x39
  410aa6:	movups xmm3,XMMWORD PTR [esi]
  410aa9:	jo     0x410a91
  410aab:	popa   
  410aac:	sub    BYTE PTR [edi-0x2],ch
  410aaf:	pusha  
	...
  410abc:	add    BYTE PTR [eax],al
  410abe:	add    dl,ah
  410ac0:	pop    ebx
  410ac1:	imul   BYTE PTR [esi+0x10ffde94]
  410ac7:	xrelease mov BYTE PTR [eax-0x17],0x75
  410acc:	mov    ecx,0x6f6c9edb
  410ad1:	(bad)  
  410ad2:	aam    0x65
  410ad4:	push   ds
  410ad5:	inc    ecx
  410ad6:	jmp    0x7e8bf953
  410adb:	push   esp
  410adc:	jge    0x410a62
  410ade:	add    DWORD PTR [edi+ebp*2-0x2],0x98dd6703
  410ae6:	scas   al,BYTE PTR es:[edi]
  410ae7:	lahf   
  410ae8:	outs   dx,DWORD PTR ds:[esi]
  410ae9:	std    
  410aea:	xchg   esp,eax
  410aeb:	sbb    esi,DWORD PTR [edi-0x2]
  410aee:	push   esi
  410aef:	sub    al,0x39
  410af1:	verr   WORD PTR [esi-0x665a1991]
  410af8:	outs   dx,BYTE PTR ds:[esi]
  410af9:	(bad)  
  410afa:	jo     0x410ade
  410afc:	arpl   si,si
  410afe:	ss or  al,0xde
  410b01:	inc    eax
  410b03:	test   dh,0x40
  410b06:	jmp    0x171cc418
  410b0b:	hlt    
  410b0c:	outs   dx,BYTE PTR ds:[esi]
  410b0d:	(bad)  
  410b0e:	fcomp  QWORD PTR [ebp+0x1e]
  410b11:	inc    ecx
  410b12:	jmp    0x8c3d0f
  410b17:	pop    ebp
  410b18:	clc    
  410b19:	xchg   DWORD PTR [ebp-0x22196],eax
  410b1f:	leave  
  410b20:	lods   al,BYTE PTR ds:[esi]
  410b21:	jmp    0x0:0xf7
	...
  410b30:	add    BYTE PTR [eax],al
  410b32:	cmp    eax,0x8973fef8
  410b37:	popa   
  410b38:	(bad)  
  410b39:	jmp    FWORD PTR ds:0x4275fdb9
  410b3f:	fist   DWORD PTR [ecx-0x207e2bc]
  410b45:	mov    ch,0xea
  410b47:	(bad)  
  410b49:	(bad)  
  410b4a:	fnsave [ebp+0x6]
  410b4d:	call   0x3eba77
  410b52:	mov    ebp,0xbdf7eab5
  410b57:	idiv   ebp
  410b59:	jne    0x410b4d
  410b5b:	fcmovbe st,st(7)
  410b5d:	inc    esp
  410b5e:	int    0xf7
  410b60:	std    
  410b61:	mov    ch,0xe2
  410b63:	(bad)  
  410b65:	(bad)  
  410b66:	fnsave [ebp+0x6]
  410b69:	call   0x3eba7f
  410b6e:	dec    ebp
  410b6f:	mov    ch,0xe2
  410b71:	idiv   DWORD PTR ds:0xd275fdf7
  410b77:	fidivr DWORD PTR [ebx-0x208e2bc]
  410b7d:	mov    ch,0x2a
  410b7f:	(bad)  
  410b81:	call   FWORD PTR ds:0xcde80675
  410b87:	scas   al,BYTE PTR es:[edi]
  410b88:	std    
  410b89:	call   FWORD PTR [ebp-0x4b]
  410b8c:	(bad)  
  410b8e:	dec    ebp
  410b8f:	idiv   ebp
  410b91:	jne    0x410b15
  410b93:	fidivr DWORD PTR [esi-0x2]
	...
  410ba2:	add    BYTE PTR [eax],al
  410ba4:	add    BYTE PTR ds:0x3eb5fdf7,bh
  410baa:	(bad)  
  410bac:	jmp    DWORD PTR [ebx+0x4]
  410baf:	stos   BYTE PTR es:[edi],al
  410bb0:	inc    esi
  410bb1:	ins    BYTE PTR es:[edi],dx
  410bb2:	push   DWORD PTR [ebp-0x4c]
  410bb5:	jae    0x410c26
  410bb7:	je     0x410bb7
  410bb9:	dec    ebx
  410bba:	mov    esp,0x7754febd
  410bbf:	scas   al,BYTE PTR es:[edi]
  410bc0:	jmp    0x410c16
  410bc2:	pop    edi
  410bc3:	je     0x410bac
  410bc5:	out    dx,al
  410bc6:	push   ds
  410bc7:	jne    0x410bc7
  410bc9:	cmp    al,0x99
  410bcb:	imul   esi,esi,0x34
  410bce:	push   edi
  410bcf:	imul   ecx,DWORD PTR [ecx-0x18bc05c],0xffffffee
  410bd6:	aas    
  410bd7:	ins    BYTE PTR es:[edi],dx
  410bd8:	(bad)  
  410bd9:	sbb    al,0x54
  410bdb:	hlt    
  410bdc:	inc    esi
  410bdd:	adc    al,0xb7
  410bdf:	je     0x410b95
  410be1:	add    esi,DWORD PTR [edi+0xffbfe74]
  410be7:	mov    ebp,0xbe8efcfe
  410bec:	test   DWORD PTR [edx],0xecfe75fc
  410bf2:	jle    0x410be2
  410bf4:	sti    
  410bf5:	sti    
  410bf6:	lds    ebx,FWORD PTR [edx]
  410bf8:	add    BYTE PTR [ebx-0x4b],ah
  410bfb:	inc    ecx
  410bfc:	pop    es
  410bfd:	arpl   WORD PTR [ecx],dx
  410bff:	mov    ebx,ebp
  410c01:	loopne 0x410baa
  410c03:	ja     0x410c6e
  410c05:	arpl   WORD PTR [edx-0x37],dx
  410c08:	inc    BYTE PTR [eax]
	...
  410c16:	add    BYTE PTR [eax],al
  410c18:	ss je  0x410c85
  410c1b:	test   DWORD PTR [edi],ebx
  410c1d:	xlat   BYTE PTR ds:[ebx]
  410c1e:	je     0x410ba8
  410c20:	es shr bl,0x6a
  410c24:	sbb    al,0x9d
  410c26:	add    bh,bh
  410c28:	push   ss
  410c29:	je     0x410c95
  410c2b:	pop    es
  410c2c:	xchg   ebp,eax
  410c2d:	ss jne 0x410c2e
  410c30:	push   ss
  410c31:	and    BYTE PTR [ebp+0x74],dh
  410c34:	pop    ebx
  410c35:	add    eax,0x6e20b311
  410c3a:	sbb    eax,0xe908a24b
  410c3f:	into   
  410c40:	fldenv [eax+0x69]
  410c43:	inc    eax
  410c44:	jo     0x410cb3
  410c46:	jnp    0x410c4f
  410c48:	dec    ebx
  410c49:	and    esp,ecx
  410c4b:	add    esp,DWORD PTR [ebx+0x0]
  410c4e:	sub    edi,ebp
  410c50:	pusha  
  410c51:	sub    cl,BYTE PTR ds:[eax]
  410c54:	arpl   WORD PTR [ebx+ebx*2+0x14],bp
  410c58:	dec    ebx
  410c59:	adc    eax,DWORD PTR [ecx]
  410c5b:	add    al,0x63
  410c5d:	add    BYTE PTR [ecx-0x55c19f12],ch
  410c63:	pop    es
  410c64:	arpl   WORD PTR [esi+0x2b],di
  410c67:	jl     0x410c86
  410c69:	repz shr BYTE PTR [ebx+0x6f],0xc4
  410c6e:	mov    ch,0x74
  410c70:	fcmovnb st,st(2)
  410c72:	lods   al,BYTE PTR ds:[esi]
  410c73:	je     0x410c04
  410c75:	imul   esp,DWORD PTR [ebp+0x136cf4ee],0x14
	...
  410c8b:	or     edi,DWORD PTR [edx+edi*1]
  410c8e:	jne    0x410c7d
  410c90:	add    BYTE PTR [ecx+0x2b7e29ef],ch
  410c96:	jo     0x410ce2
  410c98:	add    eax,0xd5d0be6c
  410c9d:	jne    0x410c8d
  410c9f:	enter  0xba5d,0xe7
  410ca3:	lds    ebp,FWORD PTR [ecx+esi*8+0x43]
  410ca7:	xor    BYTE PTR [ebx],ah
  410ca9:	rol    DWORD PTR [ebx],1
  410cab:	push   ebx
  410cac:	pop    esp
  410cad:	xchg   esi,eax
  410cae:	je     0x410ce7
  410cb0:	std    
  410cb1:	inc    eax
  410cb2:	shl    DWORD PTR [ecx],cl
  410cb4:	ins    BYTE PTR es:[edi],dx
  410cb5:	inc    ebp
  410cb6:	je     0x410ccf
  410cb8:	stc    
  410cb9:	cmp    eax,0xff5d5cee
  410cbe:	lea    esp,[ebx+0x752efe6b]
  410cc4:	js     0x410cc4
  410cc6:	pushf  
  410cc7:	hlt    
  410cc8:	push   0x74
  410cca:	icebp  
  410ccb:	or     cl,bl
  410ccd:	inc    edx
  410cce:	push   ss
  410ccf:	imul   DWORD PTR [edx+0x74]
  410cd2:	or     eax,0x645a1f8
  410cd7:	xlat   BYTE PTR ds:[ebx]
  410cd8:	cmp    eax,0xd260edc1
  410cdd:	mov    al,BYTE PTR ds:0x97d347e3
  410ce3:	iret   
  410ce4:	icebp  
  410ce5:	or     edx,ecx
  410ce7:	dec    eax
  410ce8:	mov    edi,0xac34defe
  410ced:	je     0x410cdb
	...
  410cfb:	add    BYTE PTR [eax],al
  410cfd:	add    BYTE PTR [edx],dl
  410cff:	cmp    eax,0x7a60ddc1
  410d04:	inc    esp
  410d05:	mov    ecx,0xed746b37
  410d0a:	mov    eax,0x90b64c0d
  410d0f:	(bad)  
  410d10:	mov    edi,0xff4bdcde
  410d15:	call   0x9db5797a
  410d1a:	xchg   edi,eax
  410d1b:	add    DWORD PTR [ebp-0x6a],0x7d447d70
  410d22:	jo     0x410d15
  410d24:	sti    
  410d25:	xchg   dl,bl
  410d27:	pop    edi
  410d28:	(bad)  
  410d29:	hlt    
  410d2a:	dec    eax
  410d2b:	fs stos BYTE PTR es:[edi],al
  410d2d:	das    
  410d2e:	push   eax
  410d2f:	imul   ecx,DWORD PTR [edx-0x5da2db0c],0xffffffe9
  410d36:	pusha  
  410d37:	add    eax,0xc4a82768
  410d3c:	(bad)  
  410d3d:	mov    esi,0xe9177408
  410d42:	pusha  
  410d43:	add    al,al
  410d45:	add    bh,bl
  410d47:	cld    
  410d48:	call   0x4897e5
  410d4d:	mov    ecx,DWORD PTR [edx+0x49]
  410d50:	les    eax,FWORD PTR [edi-0x45]
  410d53:	pop    es
  410d54:	call   0x488a92
  410d59:	add    ebx,DWORD PTR [edx-0x16]
  410d5c:	jae    0x410d46
  410d5e:	loop   0x410d2d
  410d60:	inc    ebp
  410d61:	inc    ecx
	...
  410d6e:	add    BYTE PTR [eax],al
  410d70:	add    BYTE PTR [edx+0x4d],bh
  410d73:	out    0xd3,al
  410d75:	inc    edx
  410d76:	pop    es
  410d77:	add    BYTE PTR [ebx],cl
  410d79:	mov    ch,BYTE PTR [eax+eax*1-0x15]
  410d7d:	int3   
  410d7e:	call   0xe4309591
  410d83:	xchg   DWORD PTR [ebp+0x2e],eax
  410d86:	dec    edi
  410d87:	(bad)  
  410d88:	inc    edi
  410d89:	mov    eax,DWORD PTR [ecx]
  410d8b:	push   esi
  410d8c:	call   0x410c61
  410d91:	inc    ecx
  410d92:	(bad)  
  410d93:	jae    0x410d97
  410d95:	xor    DWORD PTR [esi-0x77],edx
  410d98:	lock mov dl,0xb9
  410d9b:	inc    ebp
  410d9c:	inc    ecx
  410d9d:	cli    
  410d9e:	into   
  410d9f:	cld    
  410da0:	push   ss
  410da1:	cli    
  410da2:	push   es
  410da3:	add    esi,eax
  410da5:	jae    0x410e14
  410da7:	fisubr DWORD PTR [eax-0x54]
  410daa:	aas    
  410dab:	aas    
  410dac:	add    BYTE PTR [ecx+ecx*8],ch
  410daf:	xchg   esi,eax
  410db0:	sbb    dl,bh
  410db2:	push   es
  410db3:	or     eax,eax
  410db5:	fild   WORD PTR [eax]
  410db7:	jmp    0x410df4
  410db9:	push   eax
  410dba:	push   ss
  410dbb:	mov    BYTE PTR [ebp-0x13],dl
  410dbe:	jmp    0x3d82e606
  410dc3:	loop   0x410d8b
  410dc5:	retf   0x8b06
  410dc8:	inc    ebp
  410dc9:	and    bh,BYTE PTR [esi+edi*8-0x82c9c01]
  410dd0:	(bad)  [ecx+edx*2+0xfe5a]
	...
  410de3:	add    BYTE PTR [esi],dl
  410de5:	je     0x410e41
  410de7:	xchg   edx,eax
  410de8:	xchg   ebp,eax
  410de9:	sub    esi,DWORD PTR [edx-0x77]
  410dec:	ss mov edi,0xe47f447d
  410df2:	adc    cl,BYTE PTR [edx+0x447e2b16]
  410df8:	fwait
  410df9:	hlt    
  410dfa:	adc    al,BYTE PTR [eax-0x7afea3d3]
  410e00:	psubq  mm6,QWORD PTR [ecx-0x2]
  410e04:	pop    esp
  410e05:	jmp    0xa143f568
  410e0a:	jno    0x410e0a
  410e0c:	ficomp WORD PTR [eax+0x233b4f72]
  410e12:	mov    esi,0x3573cfe
  410e17:	pop    esi
  410e18:	sub    bl,BYTE PTR [esi-0x18690001]
  410e1e:	pop    edi
  410e1f:	(bad)  
  410e20:	scas   al,BYTE PTR es:[edi]
  410e21:	dec    eax
  410e22:	pop    edx
  410e23:	aam    0xaa
  410e25:	inc    ebx
  410e26:	jo     0x410e32
  410e28:	and    esi,DWORD PTR [eax]
  410e2a:	sbb    ebp,DWORD PTR [eax-0x46]
  410e2d:	sbb    al,bl
  410e2f:	call   DWORD PTR [esp+eax*2-0x5d03b723]
  410e36:	shl    DWORD PTR [edi+0x65],cl
  410e39:	scas   al,BYTE PTR es:[edi]
  410e3a:	ret    
  410e3b:	inc    DWORD PTR [esp+ebx*2+0x3a5ef02]
  410e42:	scas   al,BYTE PTR es:[edi]
  410e43:	inc    esi
  410e44:	and    bl,BYTE PTR [edx+edx*8-0x2]
	...
  410e54:	add    BYTE PTR [eax],al
  410e56:	add    BYTE PTR [esi+0x74],cl
  410e59:	pop    edx
  410e5a:	cmp    DWORD PTR [ebx],0x2ae770f3
  410e60:	and    DWORD PTR [ecx-0x2],esi
  410e63:	stos   BYTE PTR es:[edi],al
  410e64:	add    al,0x2b
  410e66:	cld    
  410e67:	mov    ah,0xd0
  410e69:	jno    0x410ecb
  410e6b:	loope  0x410ead
  410e6d:	push   esp
  410e6e:	fisub  WORD PTR [ebx+ebx*8-0x2e88f5e]
  410e75:	push   eax
  410e76:	in     eax,dx
  410e77:	and    ch,BYTE PTR [edx+0x3d]
  410e7a:	jnp    0x410ea3
  410e7c:	imul   eax,edx,0xe0ef840d
  410e82:	pop    ebx
  410e83:	(bad)  
  410e84:	imul   esp,DWORD PTR ds:0x1e260a71,0x715d64f7
  410e8e:	jno    0x410ef5
  410e90:	imul   eax,DWORD PTR [edx-0xf0ca3f1],0xfd68f35b
  410e9a:	jo     0x410e60
  410e9c:	add    eax,0xde0660e9
  410ea1:	xor    al,0xc9
  410ea3:	mov    ds:0x9d9b5105,eax
  410ea8:	(bad)  
  410ea9:	call   0xc13ec61e
  410eae:	es mov ecx,0x9770cd68
  410eb4:	imul   eax,ebp,0x3e5d5cf6
  410eba:	mov    BYTE PTR [eax],0x0
	...
  410ec9:	add    BYTE PTR ds:0x60459f69,cl
  410ecf:	add    eax,0x87087d14
  410ed4:	lods   al,BYTE PTR ds:[esi]
  410ed5:	dec    ebx
  410ed6:	in     eax,dx
  410ed7:	push   0x69a77e9d
  410edc:	cmp    BYTE PTR [ecx+0x6f],dh
  410edf:	stc    
  410ee0:	(bad)  
  410ee1:	mul    BYTE PTR [ebp+ebx*2+0x2c]
  410ee5:	sbb    DWORD PTR [ebx+0x5],esp
  410ee8:	repnz inc ebx
  410eea:	pop    ebp
  410eeb:	cmp    bh,0xa8
  410eee:	popa   
  410eef:	add    eax,0x70a5a600
  410ef4:	(bad)  
  410ef5:	call   0xa508145a
  410efa:	xor    al,0x67
  410efc:	push   es
  410efd:	jmp    0xc340ea62
  410f02:	pusha  
  410f03:	(bad)  
  410f05:	shl    BYTE PTR [eax+0x7a],cl
  410f08:	inc    esp
  410f09:	xor    eax,0x3d8479b0
  410f0e:	or     esp,DWORD PTR [edi-0x2]
  410f11:	cdq    
  410f12:	repz lock mul DWORD PTR [esi]
  410f16:	ins    DWORD PTR es:[edi],dx
  410f17:	ins    BYTE PTR es:[edi],dx
  410f18:	out    0xf7,eax
  410f1a:	dec    ebx
  410f1b:	add    eax,0xf420e200
  410f20:	add    al,0x0
  410f22:	out    0x4,eax
  410f24:	add    cl,ch
  410f26:	cmp    al,ch
  410f28:	daa    
  410f29:	test   al,0x60
  410f2b:	push   0xe574
	...
  410f3c:	add    BYTE PTR [eax-0x3311b7d3],ch
  410f42:	mov    eax,0x80e2b98a
  410f47:	repz (bad) 
  410f49:	mov    esp,0x873b4f67
  410f4e:	sbb    eax,0x7d8cce48
  410f53:	test   BYTE PTR [ecx-0x2e019874],ah
  410f59:	cld    
  410f5a:	ret    
  410f5b:	(bad)  
  410f5c:	mov    dh,0x29
  410f5e:	push   0xc4b8e566
  410f63:	jmp    DWORD PTR [ebp-0x6109b046]
  410f69:	jl     0x410fd2
  410f6b:	je     0x410f4e
  410f6d:	mov    BYTE PTR [esi+0x7d4c8e46],al
  410f73:	test   BYTE PTR [eax],al
  410f75:	pop    edx
  410f76:	lock std 
  410f78:	push   DWORD PTR [eax+0x1]
  410f7b:	push   0xfe42820d
  410f80:	(bad)  
  410f81:	ja     0x410f3c
  410f83:	cmc    
  410f84:	(bad)  
  410f85:	cmp    eax,0x120873d8
  410f8a:	pusha  
  410f8b:	inc    ebp
  410f8c:	dec    DWORD PTR ds:0x35ec83ea
  410f92:	fdivr  st,st(5)
  410f94:	push   0xffffff8a
  410f96:	dec    ebx
  410f97:	adc    al,0x48
  410f99:	mov    ebx,0x72b5ff03
  410f9e:	lock std 
  410fa0:	inc    DWORD PTR [eax]
	...
  410fae:	add    BYTE PTR [eax],al
  410fb0:	dec    ebp
  410fb1:	outs   dx,BYTE PTR ds:[esi]
  410fb2:	push   es
  410fb3:	call   0x3e4e66
  410fb8:	repz jge 0x410fa1
  410fbb:	test   DWORD PTR [ebp-0x28],0xee8e858b
  410fc2:	std    
  410fc3:	(bad)  
  410fc4:	cli    
  410fc5:	dec    edx
  410fc6:	sbb    eax,0xff02fb48
  410fcb:	mov    ch,0x72
  410fcd:	out    dx,al
  410fce:	std    
  410fcf:	dec    DWORD PTR [ebp+0x6e]
  410fd2:	push   es
  410fd3:	call   0x3e4e26
  410fd8:	mov    bl,0x7d
  410fda:	loop   0x410fd3
  410fdc:	or     eax,0xa20068d8
  410fe1:	or     ecx,DWORD PTR [eax+0x41]
  410fe4:	or     bl,al
  410fe6:	mov    bl,0xd8
  410fe8:	aad    0xd7
  410fea:	std    
  410feb:	inc    DWORD PTR [edi+0x69]
  410fee:	out    0x11,al
  410ff0:	inc    ebp
  410ff1:	(bad)  
  410ff2:	std    
  410ff3:	mov    DWORD PTR [edi-0x32000a1e],eax
  410ff9:	cmp    DWORD PTR [ebx+0x6d8763f0],0xfffffffe
  411000:	arpl   WORD PTR [eax],dx
  411002:	fild   DWORD PTR [edx-0x18a6eea]
  411008:	int3   
  411009:	pop    esp
  41100a:	mul    BYTE PTR [ecx-0x20]
  41100d:	xor    DWORD PTR [ebx-0xa],ebx
  411010:	mov    esp,0x7402d7
	...
  411021:	add    BYTE PTR [eax],al
  411023:	sbb    dl,BYTE PTR [edx+eax*1+0x0]
  411027:	mov    esp,0x53746d86
  41102c:	(bad)  
  41102d:	(bad)  
  41102e:	aas    
  41102f:	pushf  
  411030:	mov    bh,0x6d
  411032:	mov    ah,0x93
  411034:	daa    
  411035:	outs   dx,BYTE PTR ds:[esi]
  411036:	dec    BYTE PTR [ecx+esi*4-0x634417ee]
  41103d:	ins    DWORD PTR es:[edi],dx
  41103e:	(bad)  
  41103f:	jl     0x411032
  411041:	pop    esi
  411042:	div    BYTE PTR [edi+ebx*1+0x6e]
  411046:	je     0x41109b
  411048:	adc    al,0x89
  41104a:	aas    
  41104b:	movd   mm6,DWORD PTR fs:[ebx+ecx*2+0x54fe6e0f]
  411054:	jmp    0x9c20f86b
  411059:	ins    DWORD PTR es:[edi],dx
  41105a:	inc    BYTE PTR [ecx+ebp*1+0x4f]
  41105e:	idiv   BYTE PTR [edi+edx*2]
  411061:	ins    BYTE PTR es:[edi],dx
  411062:	mov    ah,0x3f
  411064:	inc    edi
  411065:	ins    BYTE PTR es:[edi],dx
  411066:	(bad)  
  411067:	sub    al,0xd1
  411069:	adc    ebp,eax
  41106b:	xchg   edi,eax
  41106c:	sbb    al,0x6d
  41106e:	(bad)  
  41106f:	sbb    al,0x91
  411071:	arpl   si,si
  411073:	adc    al,0x3f
  411075:	ins    BYTE PTR es:[edi],dx
  411076:	je     0x4110eb
  411078:	push   esp
  411079:	fnstcw WORD PTR [edi]
  41107b:	add    al,0xaf
  41107d:	ins    BYTE PTR es:[edi],dx
  41107e:	je     0x4110d3
  411080:	xchg   edi,eax
  411081:	mov    dh,0xd7
  411083:	in     al,dx
  411084:	add    al,0xa6
  411086:	ins    DWORD PTR es:[edi],dx
	...
  411093:	add    BYTE PTR [eax],al
  411095:	add    ch,ch
  411097:	out    dx,eax
  411098:	lock pop ebx
  41109a:	jb     0x411103
  41109c:	xchg   ebp,eax
  41109d:	ins    DWORD PTR es:[edi],dx
  41109e:	(bad)  [edi+0x65d575b0]
  4110a4:	nop
  4110a5:	loope  0x4110c8
  4110a7:	data16 jge 0x411117
  4110aa:	pcmpeqw mm7,QWORD PTR [ebp+0x6d]
  4110ae:	mov    ebp,0xb5c1105c
  4110b3:	gs gs mov bh,0xb8
  4110b7:	ins    DWORD PTR es:[edi],dx
  4110b8:	pop    ebp
  4110b9:	ins    DWORD PTR es:[edi],dx
  4110ba:	mov    esp,0x9d6ca9b7
  4110bf:	gs xchg ebx,eax
  4110c1:	pop    esp
  4110c2:	lea    esp,[ebp+0x45]
  4110c5:	pop    esp
  4110c6:	and    al,dl
  4110c8:	cmp    eax,0x4caf856d
  4110cd:	jne    0x41114c
  4110cf:	gs inc eax
  4110d1:	xor    eax,0x6d256620
  4110d6:	mov    bh,0x64
  4110d8:	adc    eax,0xc45c656d
  4110dd:	rcr    BYTE PTR [ebp+0x65],0xd
  4110e1:	(bad)  
  4110e2:	dec    esp
  4110e3:	outs   dx,DWORD PTR ds:[esi]
  4110e4:	mov    ch,0x6d
  4110e6:	dec    ebp
  4110e7:	gs std 
  4110e9:	test   BYTE PTR [eax+0x6e],0x7e
  4110ed:	push   ss
  4110ee:	arpl   WORD PTR ds:0x5684220,ax
  4110f4:	cmp    al,0x79
  4110f6:	cmp    BYTE PTR [ecx+0x6fa4],cl
	...
  411108:	add    BYTE PTR [edx+0x1db94305],bh
  41110e:	fneni(8087 only) 
  411110:	pop    ebx
  411111:	push   esi
  411112:	vpunpcklqdq ymm3,ymm7,ymm3
  411116:	retf   0x6cbc
  411119:	(bad)  
  41111a:	or     eax,0xcb874100
  41111f:	inc    eax
  411120:	jmp    0xd0502aac
  411125:	and    DWORD PTR [ebp-0x1a],esp
  411128:	xchg   ebp,eax
  411129:	jne    0x41118e
  41112b:	(bad)  
  41112c:	xchg   esi,eax
  41112d:	aad    0xc
  41112f:	push   0xffc59f89
  411134:	adc    BYTE PTR [ecx+0x5],ah
  411137:	add    BYTE PTR [ecx+0x28],ch
  41113a:	data16 cld 
  41113c:	jbe    0x41118d
  41113e:	arpl   WORD PTR [ebp+ebp*2+0x47],si
  411142:	fld    DWORD PTR [edi]
  411144:	push   ecx
  411145:	xchg   ecx,eax
  411146:	and    al,0xff
  411148:	pop    esi
  411149:	imul   eax,DWORD PTR [esi+0x3],0xeb8fb5e9
  411150:	push   0x1c
  411152:	pusha  
  411153:	imul   ebp,ecx,0xb4fed0aa
  411159:	mov    BYTE PTR [esp+esi*8-0xa],ch
  41115d:	packsswb mm1,QWORD PTR [eax-0x13fb5c]
  411164:	call   0xd6a8b378
  411169:	test   al,0xc5
  41116b:	inc    DWORD PTR [eax+0x0]
	...
  411179:	add    BYTE PTR [eax],al
  41117b:	add    BYTE PTR [edx],ah
  41117d:	int3   
  41117e:	inc    eax
  41117f:	jmp    0x1148eb4b
  411184:	std    
  411185:	jmp    0xf6fb:0xd9b8fefe
  41118c:	ss or  al,0xe8
  41118f:	xlat   BYTE PTR ds:[ebx]
  411190:	and    BYTE PTR [ebx-0x2],ah
  411193:	mov    al,0xa5
  411195:	or     BYTE PTR [eax],al
  411197:	xor    al,0xa4
  411199:	jo     0x41111b
  41119b:	lods   eax,DWORD PTR ds:[esi]
  41119c:	mov    bh,0x5b
  41119e:	dec    dh
  4111a0:	call   0x73f0:0x6a00fbc9
  4111a7:	or     al,0xc5
  4111a9:	push   ebp
  4111aa:	push   es
  4111ab:	call   0x410686
  4111b0:	add    eax,ecx
  4111b2:	or     eax,0x9ef85
  4111b7:	add    BYTE PTR [ebp-0x35ff09bb],bh
  4111bd:	pop    es
  4111be:	add    bh,al
  4111c0:	jg     0x411197
  4111c2:	std    
  4111c3:	pop    es
  4111c4:	mov    edx,0x70006a07
  4111c9:	or     DWORD PTR [edx+0x0],ebp
  4111cc:	pusha  
  4111cd:	or     DWORD PTR [ebp-0x74c6d1bb],ecx
  4111d3:	test   DWORD PTR [esi],ecx
  4111d5:	fdivr  st,st(5)
  4111d7:	(bad)  
  4111d8:	jmp    0xfa56:0x35f873ee
  4111df:	call   0x4111e4
	...
  4111ec:	add    BYTE PTR [eax],al
  4111ee:	add    BYTE PTR [esi*8-0x386e0001],dl
  4111f5:	jb     0x4111fc
  4111f7:	xor    edx,ecx
  4111f9:	(bad)  
  4111fa:	dec    DWORD PTR [edx-0x34d781c1]
  411200:	pop    es
  411201:	push   DWORD PTR [ebp+0x76]
  411204:	mov    edi,0xf04545cf
  411209:	dec    esi
  41120a:	mov    ebx,DWORD PTR [edx+0x6df483dc]
  411210:	out    dx,al
  411211:	std    
  411212:	push   eax
  411213:	call   0x4586d1d6
  411218:	lock xchg DWORD PTR [ebp-0x229ae],eax
  41121f:	(bad)  
  411220:	test   BYTE PTR [ecx-0x1],0x45
  411224:	inc    ecx
  411225:	(bad)  
  411226:	addr16 xchg ebx,eax
  411228:	mov    eax,ds:0x3b63003f
  41122d:	scas   eax,DWORD PTR es:[edi]
  41122e:	xlat   BYTE PTR ds:[ebx]
  41122f:	or     al,0x54
  411231:	imul   edi,esi,0x195a5496
  411237:	sahf   
  411238:	mov    ds:0x9ce68869,eax
  41123d:	jno    0x41123d
  41123f:	hlt    
  411240:	mov    BYTE PTR [ebx],0x68
  411243:	jecxz  0x411259
  411245:	(bad)  
  411248:	mov    ecx,0x7bdcf64a
  41124d:	imul   esi,DWORD PTR [ebx+ebp*2-0x7c],0x4369
	...
  411261:	add    ah,cl
  411263:	mov    edi,DWORD PTR [ebx-0x7c]
  411266:	mov    bh,0xdb
  411268:	imul   edi,esi,0x94da6c49
  41126e:	sub    ebp,DWORD PTR ds:0xc4f6ff04
  411274:	jno    0x411274
  411276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411277:	ret    
  411278:	out    dx,eax
  411279:	pop    es
  41127a:	mov    edx,eax
  41127c:	mov    esi,0x7fe594fe
  411281:	out    0x94,eax
  411283:	retf   
  411284:	imul   ecx,DWORD PTR [esi+ebx*8+0x7cfe7200],0x2badda7c
  41128f:	lods   eax,DWORD PTR ds:[esi]
  411290:	add    bh,bh
  411292:	mov    dh,0xc4
  411294:	jno    0x411294
  411296:	fs add esi,eax
  411299:	pop    es
  41129a:	dec    ebx
  41129b:	xor    BYTE PTR [edi+0x7fe554fe],bh
  4112a1:	jecxz  0x4112f7
  4112a3:	or     ebp,DWORD PTR [edx+0x69]
  4112a6:	arpl   WORD PTR [ebp+eax*2+0x47],si
  4112aa:	mov    ds:0x1bb4696c,al
  4112af:	pop    ebx
  4112b0:	push   0x5c052cfe
  4112b5:	cld    
  4112b6:	cmp    al,0xac
  4112b8:	and    al,0x69
  4112ba:	sbb    eax,0xd646b8c
  4112bf:	(bad)  
  4112c0:	int    0x77
  4112c2:	out    0x34,eax
  4112c4:	mov    ebp,0x69
	...
  4112d5:	add    eax,0xa44d50b5
  4112da:	(bad)  
  4112db:	call   0xb57dc248
  4112e0:	imul   ebp,ebp,0xfcfc1b61
  4112e6:	mov    esp,DWORD PTR [ecx+ebp*2]
  4112e9:	fisttp QWORD PTR [ebx+0x61cd506b]
  4112ef:	lea    eax,[ebp+0x697d550f]
  4112f5:	lds    eax,FWORD PTR [esi*8-0x7b601e24]
  4112fc:	jno    0x4112b3
  4112fe:	popa   
  4112ff:	call   0xa3c755f3
  411304:	pop    esp
  411305:	lods   eax,DWORD PTR ds:[esi]
  411306:	popa   
  411307:	pop    ebp
  411308:	add    al,0x17
  41130a:	mov    esp,0x726303c0
  41130f:	mov    gs,WORD PTR [ecx+0x17]
  411312:	cmc    
  411313:	push   eax
  411314:	cmp    BYTE PTR [edi+0x62],al
  411317:	cmp    eax,0x3d54b769
  41131c:	imul   esi,DWORD PTR [ebp+0x61],0x247b13b3
  411323:	out    0x68,eax
  411325:	gs popa 
  411327:	push   ebx
  411328:	pop    eax
  411329:	push   ebp
  41132a:	popa   
  41132b:	adc    eax,0xf5cf69
  411330:	push   ss
  411331:	lea    esp,[eax+0x5]
  411334:	imul   ecx,DWORD PTR [edi],0x68f56e
	...
  411346:	add    BYTE PTR [eax],al
  411348:	cmp    eax,0x507bff61
  41134d:	ins    DWORD PTR es:[edi],dx
  41134e:	add    ebp,DWORD PTR [edi-0x6301a045]
  411354:	pushf  
  411355:	push   edi
  411356:	(bad)  
  411357:	fimul  WORD PTR [ebx-0x74211c67]
  41135d:	pop    edi
  41135e:	(bad)  
  41135f:	push   esp
  411360:	ja     0x4113cf
  411362:	ret    
  411363:	add    al,0x7a
  411365:	pop    edi
  411366:	(bad)  
  411367:	je     0x4112e9
  411369:	push   edi
  41136a:	(bad)  
  41136b:	mov    dh,0x8b
  41136d:	(bad)  [edi]
  41136f:	rol    DWORD PTR [esi-0x205900df],0xa1
  411376:	iret   
  411377:	xchg   esi,eax
  411378:	dec    ebx
  411379:	pop    edi
  41137a:	call   FWORD PTR [eax+eax*4]
  41137d:	in     eax,dx
  41137e:	add    cl,ch
  411380:	sub    esp,DWORD PTR [edx+0x6d70fcfe]
  411386:	imul   edi,DWORD PTR [ebx+ecx*2+0x103cfe5f],0x3b6efe57
  411391:	cdq    
  411392:	rcr    DWORD PTR [esi+0x3b],cl
  411395:	pop    edi
  411396:	(bad)  
  411397:	aam    0x70
  411399:	ins    DWORD PTR es:[edi],dx
  41139a:	mov    edx,DWORD PTR [edx+ecx*1]
  41139d:	pop    edi
  41139e:	(bad)  
  41139f:	aam    0x70
  4113a1:	pusha  
  4113a2:	mov    ah,0x21
  4113a4:	adc    ebx,DWORD PTR [edi-0x2]
  4113a7:	lea    ecx,ds:[eax]
  4113aa:	call   0x4113b0
	...
  4113bb:	or     DWORD PTR [edi-0x2],ebx
  4113be:	cs mov ebp,0xfb26f638
  4113c4:	addr16 mov al,0xa9
  4113c7:	retf   
  4113c8:	pop    edi
  4113c9:	(bad)  
  4113ca:	pop    esp
  4113cb:	rcl    BYTE PTR [edi-0x2],1
  4113ce:	push   cs
  4113cf:	test   al,0xaa
  4113d1:	aas    
  4113d2:	add    BYTE PTR [ebp-0x13],bl
  4113d5:	std    
  4113d6:	mov    ch,0x6e
  4113d8:	aad    0xfd
  4113da:	jmp    DWORD PTR [edx-0x6f]
  4113dd:	ds (bad) 
  4113df:	cmp    eax,0x5e8b3e8
  4113e4:	call   0x49dbfce6
  4113e9:	std    
  4113ea:	jmp    FWORD PTR ds:0x1df7e296
  4113f0:	call   0xe87b99db
  4113f5:	std    
  4113f6:	push   DWORD PTR [edi-0x17]
  4113f9:	cmc    
  4113fa:	jmp    FWORD PTR [ebp-0x42bf8740]
  411400:	out    0xfd,eax
  411402:	mov    ch,0xa6
  411404:	out    dx,eax
  411405:	std    
  411406:	push   edx
  411408:	aaa    
  411409:	ds (bad) 
  41140b:	in     eax,dx
  41140c:	out    0x43,eax
  41140e:	clc    
  41140f:	jecxz  0x4113fb
  411411:	sti    
  411412:	(bad)  
  411413:	fucom  st(7)
  411415:	jae    0x411413
  411417:	shl    BYTE PTR [ecx+0x20ca0010],cl
  41141d:	ror    DWORD PTR [eax+eax*1],0x0
	...
  41142d:	add    BYTE PTR [edx+0x39ec8934],bh
  411433:	(bad)  
  411436:	mov    bh,BYTE PTR ds:0x5bb7ff4b
  41143c:	out    0x81,al
  41143e:	pop    edi
  41143f:	call   0xe7f89e41
  411444:	std    
  411445:	jne    0x4114b9
  411447:	cmp    ecx,DWORD PTR [ebx+0x48]
  41144a:	retf   
  41144b:	add    edi,edi
  41144d:	xor    eax,0x41008d
  411452:	push   edx
  411453:	mov    bl,bh
  411455:	(bad)  
  411456:	jge    0x41143e
  411458:	jae    0x411462
  41145a:	arpl   WORD PTR [edi+esi*4-0x25935db9],ax
  411461:	add    DWORD PTR [ebx+0x6c],esp
  411464:	and    bh,0xee
  411467:	popa   
  411468:	gs (bad) 
  41146a:	xor    al,0xe2
  41146c:	data16 (bad) 
  41146e:	mov    dh,0x64
  411470:	pop    edx
  411471:	xchg   ebx,eax
  411472:	addr16 gs enterw 0x6921,0x2
  411479:	push   ebp
  41147a:	call   0x100495c7
  41147f:	pop    ss
  411480:	iret   
  411481:	imul   esp,DWORD PTR [ebx-0x4e],0x5476feb5
  411488:	pop    edx
  411489:	xor    eax,0x88659736
  41148e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41148f:	mov    al,0x79
  411491:	xor    al,0x0
	...
  41149f:	add    BYTE PTR [eax],al
  4114a1:	cmp    esi,DWORD PTR [ebx+eax*8]
  4114a4:	(bad)  
  4114a5:	jmp    0x22692aeb
  4114aa:	ins    BYTE PTR es:[edi],dx
  4114ab:	cmp    BYTE PTR [esi],0x63
  4114ae:	clc    
  4114af:	shl    BYTE PTR [edi-0x45],0x14
  4114b3:	vunpckhps ymm6,ymm0,YMMWORD PTR [ecx+ebp*8+0x11]
  4114b9:	arpl   WORD PTR [ecx+edi*8-0x41],bp
  4114bd:	aaa    
  4114be:	dec    edi
  4114bf:	int3   
  4114c0:	out    0xc5,eax
  4114c2:	xchg   ebp,eax
  4114c3:	gs (bad) 
  4114c5:	xor    esi,DWORD PTR [edx+eax*1]
  4114c8:	add    BYTE PTR [esi+esi*2-0x52e40f26],al
  4114cf:	add    dl,BYTE PTR [eax-0x7c]
  4114d2:	mov    eax,ds:0x48d3e7fa
  4114d7:	dec    BYTE PTR gs:[ebx+0x6cff25d8]
  4114de:	ret    
  4114df:	add    eax,DWORD PTR [esi-0x1d]
  4114e2:	add    eax,0x5bd603e7
  4114e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e8:	addr16 xchg ecx,eax
  4114ea:	inc    ebp
  4114eb:	dec    edi
  4114ec:	dec    bp
  4114ee:	pop    esi
  4114ef:	or     eax,0xee1cf671
  4114f4:	lock stc 
  4114f6:	pop    ebp
  4114f7:	jae    0x411560
  4114f9:	xor    eax,0x545be0d8
  4114fe:	and    dh,ch
  411500:	test   DWORD PTR gs:[edi+0x42af],edi
	...
  411513:	add    BYTE PTR [eax+0x5],ah
  411516:	xor    al,0x79
  411518:	or     BYTE PTR [edx+0x57a68ac],al
  41151e:	inc    ebx
  41151f:	mov    ch,0x5
  411521:	fdiv   st,st(0)
  411523:	pop    ebx
  411524:	mov    edx,0xeb65be20
  411529:	(bad)  
  41152a:	mov    ah,0xda
  41152c:	in     al,dx
  41152d:	in     eax,0xce
  41152f:	mov    edx,0x661105a3
  411534:	and    al,0xc4
  411536:	call   0xc04fa49f
  41153b:	ret    0x65cc
  41153e:	push   0xf15dc5c2
  411543:	inc    ebx
  411544:	xor    ah,bh
  411546:	sbb    ah,bl
  411548:	mov    ah,0x5d
  41154a:	test   DWORD PTR [esi-0x3cdfd1bc],esp
  411550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411551:	int    0x65
  411553:	out    dx,eax
  411554:	fs ins DWORD PTR es:[edi],dx
  411556:	std    
  411557:	fist   WORD PTR [ebp+0x4db9405d]
  41155d:	pop    esi
  41155e:	dec    ebp
  41155f:	fadd   QWORD PTR [ebp+ebx*2+0x2e04a655]
  411566:	mov    al,0xc2
  411568:	je     0x41154f
  41156a:	dec    DWORD PTR [esi]
  41156c:	test   al,0xc4
  41156e:	jmp    FWORD PTR ds:0xb7e80574
  411574:	cmp    al,0x5c
  411576:	(bad)  
  411577:	push   ds
	...
  411584:	add    BYTE PTR [eax],al
  411586:	add    BYTE PTR [ecx+eiz*2-0x2],al
  41158a:	pushf  
  41158b:	dec    eax
  41158c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41158e:	int    0xbf
  411590:	pop    ebx
  411591:	enter  0x632b,0x5
  411595:	push   ebp
  411596:	jb     0x411533
  411598:	xchg   ebx,eax
  41159a:	cmc    
  41159b:	push   ds
  41159c:	mov    ah,0x69
  41159e:	jmp    0x5d3fe2ad
  4115a3:	pop    ds
  4115a4:	gs dec eax
  4115a6:	sbb    eax,0x2c885b7e
  4115ab:	jnp    0x41153c
  4115ad:	xor    al,0x1
  4115af:	addr16 (bad) 
  4115b1:	push   DWORD PTR [ecx+0x45]
  4115b4:	sub    DWORD PTR [eax],ebp
  4115b6:	sub    BYTE PTR [edi-0x7b],bl
  4115b9:	ds jmp 0xefa8d7bb
  4115bf:	test   eax,0x3f3dffc5
  4115c4:	mov    dl,BYTE PTR [eax]
  4115c6:	jmp    0x1e01262b
  4115cb:	data16 mov bl,0xe7
  4115ce:	pop    eax
  4115cf:	or     BYTE PTR [esi+edi*8+0x19],bl
  4115d3:	lahf   
  4115d4:	pop    esp
  4115d5:	dec    BYTE PTR [esi+0x2047e4fe]
  4115db:	mov    al,ds:0xb56e4e5c
  4115e0:	add    al,0xe8
  4115e2:	mov    al,BYTE PTR [ebx+0x4f51fe5b]
  4115e8:	sbb    bh,bh
  4115ea:	push   esi
	...
  4115f7:	add    BYTE PTR [eax],al
  4115f9:	add    BYTE PTR [ebx],ch
  4115fb:	add    eax,0x53e6946
  411600:	jne    0x411602
  411602:	and    BYTE PTR [edx-0x50b5cc06],bl
  411608:	std    
  411609:	push   DWORD PTR ds:0x72aef0e1
  41160f:	pop    ecx
  411610:	jae    0x4115cd
  411612:	test   DWORD PTR [ebx-0x6],ebp
  411615:	(bad)  
  411616:	out    dx,eax
  411617:	pop    edi
  411618:	out    0x2b,al
  41161a:	ss loope 0x41161a
  41161d:	pop    edi
  41161e:	hlt    
  41161f:	push   ds
  411620:	rol    DWORD PTR [edx+ecx*2],0x4b
  411624:	mov    esp,ebp
  411626:	leave  
  411627:	sbb    al,0xfb
  411629:	push   esi
  41162a:	int    0x3d
  41162c:	(bad)  
  41162d:	imul   ecx,ebx,0x320873e0
  411633:	int3   
  411634:	cmp    edi,edi
  411636:	xor    eax,0x81fc438a
  41163b:	(bad)  
  41163c:	daa    
  41163d:	sub    BYTE PTR [ebx],bh
  41163f:	add    DWORD PTR [ebx+0x4129563d],ecx
  411645:	add    BYTE PTR [edx+0x3f740028],cl
  41164b:	imul   edx,DWORD PTR [edx+0x49],0xe857013b
  411652:	ficom  DWORD PTR [eax-0x2]
  411655:	call   ecx
  411657:	(bad)  
  411658:	jb     0x411679
  41165a:	mov    ecx,gs
  41165c:	xor    DWORD PTR [eax+0x0],ecx
	...
  41166b:	add    BYTE PTR [eax],al
  41166d:	aad    0xe7
  41166f:	dec    esi
  411670:	push   0xbeef07ca
  411675:	push   edx
  411676:	outs   dx,DWORD PTR ds:[esi]
  411677:	inc    edi
  411678:	inc    ecx
  411679:	mov    edx,0xc275fd97
  41167e:	out    dx,eax
  41167f:	and    esp,DWORD PTR [ebx+0x5]
  411682:	call   0xe8b5686d
  411687:	std    
  411688:	jmp    0x4116ed
  41168a:	ins    DWORD PTR es:[edi],dx
  41168b:	enter  0x457f,0x6e
  41168f:	xlat   BYTE PTR ds:[ebx]
  411690:	stc    
  411691:	and    eax,0xbac016c2
  411696:	sbb    ah,BYTE PTR [ebx-0x2]
  411699:	ins    BYTE PTR es:[edi],dx
  41169a:	pop    ds
  41169b:	mov    dl,0x37
  41169d:	pop    esp
  41169e:	xchg   ecx,eax
  41169f:	popf   
  4116a0:	(bad)  
  4116a1:	(bad)  
  4116a2:	and    BYTE PTR [ebx+0x74],ah
  4116a5:	imul   esi,esp,0xffffffb0
  4116a8:	cmp    cl,BYTE PTR [esp+esi*8-0x3e]
  4116ac:	pop    ebp
  4116ad:	sbb    ch,BYTE PTR [edi]
  4116af:	or     BYTE PTR [eax],al
  4116b1:	xchg   esi,eax
  4116b2:	xlat   BYTE PTR ds:[ebx]
  4116b3:	outs   dx,DWORD PTR ds:[esi]
  4116b4:	sbb    BYTE PTR [edi],0x59
  4116b7:	in     al,dx
  4116b8:	(bad)  
  4116b9:	mov    edx,0x5b74617e
  4116be:	add    al,0xd3
  4116c0:	cmp    bl,BYTE PTR [esp+eiz*2]
  4116c3:	mov    eax,DWORD PTR [edi+edx*1-0x4b]
  4116c7:	aam    0x48
  4116c9:	mov    ds:0x5b74616c,al
  4116ce:	inc    esp
  4116cf:	rcr    bh,1
	...
  4116dd:	add    BYTE PTR [eax],al
  4116df:	add    ah,bh
  4116e1:	inc    ebx
  4116e2:	popa   
  4116e3:	je     0x4116dc
  4116e5:	fwait
  4116e6:	xlat   BYTE PTR ds:[ebx]
  4116e7:	pop    es
  4116e8:	sti    
  4116e9:	push   ss
  4116ea:	pop    ds
  4116eb:	jmp    esp
  4116ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116ee:	inc    esp
  4116ef:	add    esp,DWORD PTR [ebx+0x19]
  4116f2:	(bad)  
  4116f3:	jmp    0x4116d5
  4116f5:	mov    al,ds:0xa53b565e
  4116fa:	cmp    al,0x3f
  4116fc:	arpl   WORD PTR [esp+edx*8+0x0],si
  411700:	mov    al,ds:0xb7444983
  411705:	ins    BYTE PTR es:[edi],dx
  411706:	add    al,BYTE PTR [eax]
  411708:	arpl   WORD PTR [ebx],dx
  41170a:	mov    WORD PTR [eax+0x22],cs
  41170d:	ins    BYTE PTR es:[edi],dx
  41170e:	popa   
  41170f:	je     0x41177c
  411711:	add    eax,0xcfb60876
  411716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411717:	add    eax,DWORD PTR [edi]
  411719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41171a:	sbb    BYTE PTR [ebx+eiz*2],al
  41171d:	add    eax,0x562db69
  411722:	mov    ebp,0xf0d0740b
  411727:	imul   edi,DWORD PTR [ecx],0x10
  41172a:	bound  edi,QWORD PTR ss:[ebx-0x63]
  41172e:	call   0xc4ae7a36
  411733:	retf   0x5a55
  411736:	sbb    eax,0x66d64d8
  41173b:	sbb    al,0x44
  41173d:	pop    edx
  41173e:	dec    ecx
  41173f:	cmp    al,0xaa
  411741:	(bad)  
  411742:	call   0x41182e
	...
  411753:	xor    eax,0x6303e910
  411758:	add    eax,0x5ac04762
  41175d:	mov    bl,0x3
  41175f:	arpl   WORD PTR ds:0xeda4b6e9,ax
  411765:	cmp    DWORD PTR ds:0xc241054c,0x29
  41176c:	(bad)
  41176f:	or     BYTE PTR [ebx+ecx*1-0x16fa9cfc],0x60
  411777:	ja     0x411786
  411779:	mov    dh,0xf9
  41177b:	jecxz  0x411796
  41177d:	add    al,ah
  41177f:	pushf  
  411780:	add    eax,0x5ce0011d
  411785:	clc    
  411786:	xlat   BYTE PTR ds:[ebx]
  411787:	pop    ebx
  411788:	inc    edx
  411789:	sub    esp,DWORD PTR [eax+0x63]
  41178c:	add    eax,0xf3c803e9
  411791:	test   DWORD PTR [edi],edx
  411793:	call   0xf:0xac0427ce
  41179a:	xchg   esp,eax
  41179b:	xchg   ebp,eax
  41179c:	(bad)  
  41179d:	inc    DWORD PTR [eax+0x66ff12de]
  4117a3:	fiadd  WORD PTR [ebp+0x17]
  4117a6:	push   edx
  4117a7:	call   0xbb0:0xd6458ab0
  4117ae:	bound  esp,QWORD PTR [ecx+ecx*1-0x75974401]
  4117b5:	jg     0x411738
	...
  4117c3:	add    BYTE PTR [eax],al
  4117c5:	add    BYTE PTR [edi+0x5],ah
  4117c8:	add    BYTE PTR [esi],dh
  4117ca:	lea    ecx,ds:0x58ab698f
  4117d0:	(bad)  
  4117d1:	jmp    0x6e50ee99
  4117d6:	out    0x94,eax
  4117d8:	(bad)  
  4117d9:	call   0x2c7d9c3e
  4117de:	sub    eax,0xce8ffc6
  4117e3:	idiv   dh
  4117e5:	mov    ah,0x69
  4117e7:	into   
  4117e8:	inc    eax
  4117e9:	jmp    0xa41e29b1
  4117ee:	and    DWORD PTR [ecx-0x1a],ebx
  4117f1:	add    DWORD PTR [edx+0x58],edi
  4117f4:	(bad)  
  4117f5:	mov    eax,ds:0xe9000560
  4117fa:	lds    eax,FWORD PTR [esi+0x23]
  4117fd:	jmp    0xe945a006
  411802:	pusha  
  411803:	add    eax,0x49b6a00
  411808:	xor    esi,0x60
  41180b:	or     BYTE PTR [ebp-0x1a8bc12],al
  411811:	jb     0x4117b0
  411813:	pop    esp
  411814:	pop    esi
  411815:	mov    al,0x26
  411817:	add    al,0x0
  411819:	aas    
  41181a:	mov    bh,0x4b
  41181c:	fisubr DWORD PTR [ecx]
  41181e:	addr16 pop ebp
  411820:	jno    0x411822
  411822:	retf   
  411823:	sar    ebp,0x8b
  411826:	repz sub esi,esi
  411829:	mov    eax,DWORD PTR [eax]
	...
  411837:	add    BYTE PTR [eax],al
  411839:	add    ebp,DWORD PTR [ebp+0x7e]
  41183c:	test   al,0xb8
  41183e:	add    ecx,DWORD PTR [ebx-0x38766337]
  411844:	jmp    0x4118a8
  411846:	mov    al,bh
  411848:	add    esi,DWORD PTR [ecx+ecx*4]
  41184b:	(bad)  
  41184c:	push   eax
  41184d:	add    ebx,ecx
  41184f:	out    0xa7,al
  411851:	ins    BYTE PTR es:[edi],dx
  411852:	add    al,0x0
  411854:	mov    esi,DWORD PTR [ebx]
  411856:	pushf  
  411857:	mov    ecx,ecx
  411859:	jns    0x41181d
  41185b:	mov    ecx,ecx
  41185d:	cld    
  41185e:	or     dh,dh
  411860:	jne    0x4118c8
  411862:	inc    esi
  411863:	rcl    DWORD PTR [ebp-0x2f],0xe8
  411867:	data16 or BYTE PTR [esi-0x270801bc],cl
  41186e:	add    al,bl
  411870:	push   DWORD PTR [ecx+0x7a0b063f]
  411876:	xor    BYTE PTR [edx],cl
  411878:	jmp    0x4118b1
  41187a:	out    0x6,al
  41187c:	inc    BYTE PTR [edx]
  41187e:	inc    esp
  41187f:	jle    0x4118b9
  411881:	or     bh,BYTE PTR ds:0xcb8c9f4
  411887:	add    BYTE PTR [ebp-0x7f],dl
  41188a:	aad    0x81
  41188c:	les    edx,FWORD PTR [esi]
  41188e:	xchg   esp,eax
  41188f:	data16 xor BYTE PTR [esi+0x28f7fe40],bh
  411896:	add    al,bl
  411898:	push   DWORD PTR [ebp+0xf24d]
	...
  4118aa:	add    BYTE PTR [eax],al
  4118ac:	retf   0x3
  4118af:	sub    esp,DWORD PTR [ecx-0x7503bc8b]
  4118b5:	mov    eax,0x86630873
  4118ba:	js     0x4118c9
  4118bc:	arpl   WORD PTR [esi-0x79],bp
  4118bf:	mov    edi,0x745d993b
  4118c4:	pop    ebx
  4118c5:	jbe    0x4118ef
  4118c7:	xor    al,0xa4
  4118c9:	into   
  4118ca:	mov    WORD PTR [ebx+ebx*4+0x2d],es
  4118ce:	mov    ah,0xe7
  4118d0:	pop    es
  4118d1:	and    bl,BYTE PTR [edi-0x2]
  4118d4:	fisub  DWORD PTR [eax-0x4df101aa]
  4118da:	imul   edx,DWORD PTR [ebx+0x6e],0x6e
  4118de:	add    cl,BYTE PTR [ebx]
  4118e0:	mov    ds:0xf6fef699,eax
  4118e5:	lds    ebx,FWORD PTR [esi+0x74]
  4118e8:	outs   dx,DWORD PTR ds:[esi]
  4118e9:	jge    0x411955
  4118eb:	xchg   DWORD PTR [edi-0x3101a0d9],ebx
  4118f1:	and    BYTE PTR [ecx+eax*2+0x5e],ch
  4118f5:	ins    BYTE PTR es:[edi],dx
  4118f6:	add    bh,bh
  4118f8:	into   
  4118f9:	fs push 0xfffffff3
  4118fc:	jbe    0x411905
  4118fe:	pop    edi
  4118ff:	xor    BYTE PTR [esi+0x4d740258],0x74
  411906:	push   edi
  411907:	dec    ecx
  411908:	mov    ds:0x17745d6c,al
  41190d:	add    eax,0xd93
	...
  41191e:	add    BYTE PTR [ebx+0x6c],ah
  411921:	or     eax,eax
  411923:	xchg   edi,eax
  411924:	popa   
  411925:	cdq    
  411926:	add    BYTE PTR [ebx+0x6c],ah
  411929:	add    bh,bh
  41192b:	jbe    0x41195d
  41192d:	push   0x5
  41192f:	aaa    
  411930:	aas    
  411931:	pop    ebp
  411932:	mov    ah,BYTE PTR [eax]
  411934:	and    al,0x4d
  411936:	rcr    DWORD PTR [edi+0x6c],0xb7
  41193a:	mov    cl,bh
  41193c:	les    ebx,FWORD PTR [ebp-0x16fadc25]
  411942:	pop    ebx
  411943:	push   edx
  411944:	add    al,0xaa
  411946:	pop    esi
  411947:	(bad)
  41194a:	imul   ecx,DWORD PTR [edi+0x4a5e8e0f],0xd
  411951:	adc    DWORD PTR [edi-0x7b],edx
  411954:	(bad)  
  411955:	call   0x814e48b8
  41195a:	fcom   QWORD PTR [esi+edx*2+0x6d]
  41195e:	jmp    0x2c4206bf
  411963:	and    al,BYTE PTR ds:0x6d5cd85e
  411969:	ret    0x7c1b
  41196c:	push   esi
  41196d:	dec    ebp
  41196e:	fcomp  DWORD PTR [ebp+ebp*2+0x34]
  411972:	pusha  
  411973:	ins    DWORD PTR es:[edi],dx
  411974:	push   esi
  411975:	add    BYTE PTR [ebx+eiz*2],0x5
  411979:	jmp    0xe9423bca
  41197e:	mov    eax,0x476968e9
	...
  41198f:	add    BYTE PTR [eax],al
  411991:	add    BYTE PTR [ebp+ebp*8-0x1d],dl
  411995:	inc    eax
  411996:	test   BYTE PTR ds:0x4263d111,al
  41199c:	or     eax,0x609af5e
  4119a1:	fsub   DWORD PTR [ebp+ebp*2+0x78]
  4119a5:	sbb    DWORD PTR [esi+edx*2],esp
  4119a8:	sub    eax,0xe90418c8
  4119ad:	add    esp,DWORD PTR [ebx-0x78]
  4119b0:	sub    ebx,DWORD PTR [esp+ebx*4-0x13]
  4119b4:	iret   
  4119b5:	retf   0x5a3
  4119b8:	ror    DWORD PTR [edx-0x5c],0x56
  4119bc:	int    0x9
  4119be:	and    edx,ecx
  4119c0:	or     dh,BYTE PTR [ecx+eiz*8+0x6ff4c0d7]
  4119c7:	out    dx,eax
  4119c8:	inc    DWORD PTR [edx-0x29]
  4119cb:	(bad)  
  4119ce:	jae    0x411a3d
  4119d0:	fnclex 
  4119d2:	das    
  4119d3:	push   edi
  4119d4:	or     ch,BYTE PTR [ecx+0x2cc6feab]
  4119da:	inc    ebx
  4119db:	push   esi
  4119dc:	(bad)  
  4119dd:	jmp    0xc2a58742
  4119e2:	xorps  xmm1,XMMWORD PTR [edx-0x3eb2bcdc]
  4119e9:	loope  0x411a4b
  4119eb:	mov    al,0x8a
  4119ed:	jge    0x4119c1
  4119ef:	fstp   QWORD PTR [edi+0x44]
  4119f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f3:	push   ebp
  4119f4:	neg    bl
	...
  411a02:	add    BYTE PTR [eax],al
  411a04:	add    BYTE PTR [ecx+0x42],ah
  411a07:	inc    BYTE PTR [edx]
  411a09:	cmp    dl,BYTE PTR [edi+0x74]
  411a0c:	loope  0x411a16
  411a0e:	mov    edi,0xb0e46fe
  411a13:	shr    dh,0xdc
  411a16:	outs   dx,DWORD PTR ds:[esi]
  411a17:	(bad)  
  411a18:	call   0xe1b56e7d
  411a1d:	enter  0x3150,0x26
  411a21:	scas   al,BYTE PTR es:[edi]
  411a22:	(bad)  
  411a23:	mov    edi,0x895e5d94
  411a28:	jmp    0x95401f8d
  411a2d:	fs push esp
  411a2f:	je     0x411a22
  411a31:	mov    eax,0x87fefeeb
  411a36:	push   ebx
  411a37:	je     0x411a1a
  411a39:	mov    BYTE PTR [ebx],bl
  411a3b:	cmp    ch,dh
  411a3d:	mov    bh,0xff
  411a3f:	mov    edi,0x7060615c
  411a44:	fisubr WORD PTR ds:0x58a0e80d
  411a4a:	push   esp
  411a4b:	(bad)  
  411a4c:	loop   0x4119ee
  411a4e:	fld    DWORD PTR [ecx]
  411a50:	add    BYTE PTR [ecx],dl
  411a52:	data16 std 
  411a54:	jne    0x411a48
  411a56:	loopne 0x411a77
  411a58:	cmp    DWORD PTR ds:0x8fc009b2,edx
  411a5e:	pop    es
  411a5f:	jmp    0x411ab6
  411a61:	jb     0x4119fe
  411a63:	and    eax,0x73b1ba41
  411a68:	or     BYTE PTR [eax],al
	...
  411a76:	add    BYTE PTR [eax],al
  411a78:	loop   0x411a08
  411a7a:	cmp    bh,bh
  411a7c:	in     eax,0xfd
  411a7e:	mov    edi,0x40ddb875
  411a83:	jmp    FWORD PTR [edi-0x2d651800]
  411a89:	mov    cl,0xfd
  411a8b:	or     ecx,edx
  411a8d:	cmp    eax,DWORD PTR [eax]
  411a8f:	jmp    0x411aff
  411a91:	mov    dl,0x73
  411a93:	or     BYTE PTR [edx],dh
  411a95:	mov    dh,0x36
  411a97:	call   DWORD PTR ds:0x8875bffd
  411a9d:	frstor [edi+edi*8]
  411aa0:	scas   eax,DWORD PTR es:[edi]
  411aa1:	add    al,ch
  411aa3:	xchg   DWORD PTR [eax-0x4f],ebp
  411aa6:	std    
  411aa7:	adc    DWORD PTR [edx+0x61027728],0xffffffc9
  411aae:	or     eax,eax
  411ab0:	out    dx,al
  411ab1:	push   esp
  411ab2:	cmp    eax,DWORD PTR [eax]
  411ab4:	cmp    bl,BYTE PTR [eax-0x2]
  411ab7:	jb     0x411aff
  411ab9:	ins    DWORD PTR es:[edi],dx
  411aba:	(bad)  
  411abb:	dec    DWORD PTR [edx+0x8]
  411abe:	jmp    0x411ac5
  411ac0:	mov    eax,ds:0x3a000005
  411ac5:	jge    0x411a88
  411ac7:	pop    ebx
  411ac8:	inc    ebx
  411ac9:	mov    BYTE PTR [esi],0x0
  411acc:	out    dx,eax
  411acd:	jl     0x411ab9
  411acf:	push   0x3f0f5b
  411ad4:	add    bh,BYTE PTR [ebx]
  411ad6:	inc    edx
  411ad8:	arpl   WORD PTR [ebx],di
  411ada:	pop    edx
  411adb:	je     0x411add
	...
  411ae9:	add    BYTE PTR [eax],al
  411aeb:	addr16 inc ebx
  411aed:	rol    BYTE PTR [edi],1
  411aef:	sti    
  411af0:	add    ebx,DWORD PTR [ebx-0x2]
  411af3:	in     al,0x56
  411af5:	inc    edx
  411af6:	je     0x411b71
  411af8:	fwait
  411af9:	ror    BYTE PTR [ebx],1
  411afb:	aam    0x18
  411afd:	or     al,0xe8
  411aff:	je     0x411aac
  411b01:	pop    edx
  411b02:	(bad)  
  411b03:	pop    eax
  411b04:	sahf   
  411b05:	ror    BYTE PTR [edx],1
  411b07:	mov    esp,0x2eff07f0
  411b0c:	pushw  0x7
  411b0f:	lods   al,BYTE PTR ds:[esi]
  411b10:	mov    bl,BYTE PTR [edx-0x38]
  411b13:	mov    eax,ds:0xe8550255
  411b18:	mov    DWORD PTR [esi-0x4d11803d],eax
  411b1e:	addr16 add ecx,esp
  411b21:	ret    
  411b22:	dec    DWORD PTR [edi+ebp*1+0x67cc303]
  411b29:	aas    
  411b2a:	out    0xa1,eax
  411b2c:	xchg   esi,eax
  411b2d:	pop    ecx
  411b2e:	(bad)  
  411b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b30:	mov    al,ds:0x5d64ff66
  411b35:	add    cl,BYTE PTR [ebp-0x184c375a]
  411b3b:	jmp    0x66a9:0xe0fe594d
  411b42:	dec    edi
  411b44:	add    al,0x89
  411b46:	inc    esp
  411b47:	dec    edi
  411b48:	lea    ebp,[edx+0x79]
  411b4b:	jb     0x411b50
  411b4d:	pop    ebx
  411b4e:	add    BYTE PTR [eax],0x0
	...
  411b5d:	add    BYTE PTR [esi+0x5a7503f8],ch
  411b63:	loope  0x411b25
  411b65:	jmp    0x411b1a
  411b67:	add    al,0xef
  411b69:	xor    BYTE PTR [esp+eiz*2],dl
  411b6c:	test   DWORD PTR [edi+edi*8+0x5],edi
  411b70:	jmp    0xe8c4fa7f
  411b75:	add    esp,DWORD PTR [ebx-0x80]
  411b78:	sub    edx,DWORD PTR [esp+eiz*4+0x52]
  411b7c:	push   ebx
  411b7d:	push   0x5ac5dd04
  411b82:	in     eax,0x86
  411b84:	rol    BYTE PTR [esi+edx*2],0xd0
  411b88:	jne    0x411b6f
  411b8a:	jge    0x411b50
  411b8c:	call   0x2b8b46ff
  411b91:	pusha  
  411b92:	pop    edx
  411b93:	add    eax,0xc8a403e9
  411b98:	add    BYTE PTR [ebx],0x63
  411b9b:	add    eax,0x5d2788e9
  411ba0:	sbb    BYTE PTR [ebx+0x2f],bl
  411ba3:	popa   
  411ba4:	adc    eax,0x75af916c
  411ba9:	pop    edx
  411baa:	imul   eax,DWORD PTR [ebp-0xc],0x50d0e1f3
  411bb1:	add    ecx,DWORD PTR [edi]
  411bb3:	call   FWORD PTR [ebp-0x30]
  411bb6:	test   BYTE PTR [ebp+0x11],bl
  411bb9:	pop    ecx
  411bba:	jne    0x411c0e
  411bbc:	popa   
  411bbd:	cmp    ebp,DWORD PTR [ebp-0x28]
  411bc0:	push   eax
  411bc1:	imul   eax,DWORD PTR [eax],0x0
	...
  411bd0:	add    BYTE PTR ds:0x695a3e14,dh
  411bd6:	cs mov ebx,0x44cfe1f0
  411bdc:	add    edx,edi
  411bde:	add    ah,BYTE PTR [esi]
  411be0:	enter  0xdd40,0x70
  411be4:	idiv   BYTE PTR [edx+edx*2]
  411be7:	add    BYTE PTR [esi+0x69],dh
  411bea:	add    eax,0x5df56ee9
  411bef:	out    0xc2,eax
  411bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf2:	adc    ch,cl
  411bf4:	rcr    BYTE PTR [edx],1
  411bf6:	retf   0x68ff
  411bf9:	jns    0x411c00
  411bfb:	je     0x411be2
  411bfd:	pop    ebp
  411bfe:	cs jae 0x411b88
  411c01:	push   esi
  411c02:	cs jae 0x411bfe
  411c05:	push   cs
  411c06:	add    cl,BYTE PTR [ebp+0x67c28f2c]
  411c0c:	rcr    BYTE PTR ds:0xb7d0ffc5,0xc8
  411c13:	(bad)  
  411c14:	mov    esi,0xc1ebd93a
  411c19:	inc    edi
  411c1a:	and    bh,bh
  411c1c:	scas   al,BYTE PTR es:[edi]
  411c1d:	fiadd  WORD PTR [esi+0x5e]
  411c20:	inc    edx
  411c21:	sbb    BYTE PTR [edi+0x54],al
  411c24:	jb     0x411c71
  411c26:	test   ebx,eax
  411c28:	dec    ecx
  411c29:	sbb    DWORD PTR [ebx-0x2],edx
  411c2c:	ss icebp 
  411c2e:	jmp    0x51e0c282
  411c33:	idiv   bl
	...
  411c41:	add    BYTE PTR [eax],al
  411c43:	add    BYTE PTR [ecx+0x46],ah
  411c46:	(bad)  
  411c47:	ss out dx,al
  411c49:	sub    al,BYTE PTR [ecx-0x17]
  411c4c:	loopne 0x411c60
  411c4e:	add    dh,dh
  411c50:	add    al,0x3f
  411c52:	add    cl,ch
  411c54:	pusha  
  411c55:	add    BYTE PTR [ebp+ebx*2-0x4601ace7],0xb3
  411c5d:	imul   ebp,DWORD PTR [edi],0xa530ba1
  411c63:	sub    DWORD PTR [edx-0x77],ebp
  411c66:	mov    ds:0x830560e8,eax
  411c6b:	ins    BYTE PTR es:[edi],dx
  411c6c:	mov    bl,0x52
  411c6e:	(bad)  
  411c6f:	es pop edi
  411c71:	add    BYTE PTR [esi+esi*2+0x64000560],al
  411c78:	mov    ah,0xa8
  411c7a:	std    
  411c7b:	push   cs
  411c7c:	mov    al,al
  411c7e:	inc    BYTE PTR [eax]
  411c80:	addr16 mov ch,0xfc
  411c83:	call   FWORD PTR ds:0xd37ecdd
  411c89:	scas   al,BYTE PTR es:[edi]
  411c8a:	sub    esi,esi
  411c8c:	add    DWORD PTR [eax-0x5202015e],0xffffffe9
  411c93:	aaa    
  411c94:	push   esp
  411c95:	(bad)  
  411c96:	mov    ch,0x84
  411c98:	pop    esp
  411c99:	mov    eax,ds:0x951dfffc
  411c9e:	or     ax,0x4431
  411ca2:	dec    BYTE PTR [edi+eax*2+0xfffcca]
	...
  411cb5:	add    BYTE PTR [eax],al
  411cb7:	or     eax,0xc141e695
  411cbc:	add    al,0x0
  411cbe:	xor    esi,0x8
  411cc1:	lea    eax,[ebp-0x250f8]
  411cc7:	jp     0x411c77
  411cc9:	mov    bl,0xa4
  411ccb:	fsubr  QWORD PTR [ebp-0x73a1703]
  411cd1:	(bad)  
  411cd2:	call   DWORD PTR [ebx]
  411cd4:	iret   
  411cd5:	mov    ds:0x44ad0dfe,al
  411cda:	cmp    esp,0x53
  411cdd:	jo     0x411ca3
  411cdf:	std    
  411ce0:	jle    0x411cd4
  411ce2:	(bad)  
  411ce3:	sbb    eax,0x58b4e6ad
  411ce8:	scas   al,BYTE PTR es:[edi]
  411ce9:	std    
  411cea:	mov    DWORD PTR [edi],0x1dfffc6c
  411cf0:	add    al,0x0
  411cf2:	add    BYTE PTR [edx+0x62],cl
  411cf5:	add    BYTE PTR [ebp-0x39339],cl
  411cfb:	jge    0x411c91
  411cfd:	std    
  411cfe:	mov    ch,0x66
  411d00:	scas   al,BYTE PTR es:[edi]
  411d01:	std    
  411d02:	call   DWORD PTR [edx+0x4e]
  411d05:	das    
  411d06:	jmp    DWORD PTR [ebx-0x9]
  411d09:	or     eax,eax
  411d0b:	pop    esp
  411d0c:	jmp    0xbc81:0x5e24ff5a
  411d13:	fisttp DWORD PTR [edi+0x56]
  411d16:	(bad)  
  411d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d18:	je     0x411d1c
	...
  411d2a:	pop    esp
  411d2b:	jmp    0x5e461c9a
  411d30:	xchg   DWORD PTR [eax+edi*8-0x6c01a9d1],eax
  411d37:	(bad)  
  411d38:	inc    DWORD PTR [eax]
  411d3a:	arpl   WORD PTR [esi+0x6a],bx
  411d3d:	jecxz  0x411d99
  411d3f:	pop    esi
  411d40:	add    cl,BYTE PTR [ebx]
  411d42:	mov    ds:0x63ce7e5e,eax
  411d47:	pop    esi
  411d48:	add    bh,BYTE PTR ds:0x25d67
  411d4e:	push   esp
  411d4f:	fistp  QWORD PTR [edi]
  411d51:	(bad)  
  411d52:	mov    esp,0x694f6a5d
  411d57:	pop    esi
  411d58:	add    dl,BYTE PTR [eax+0x3b]
  411d5b:	push   0xd96340c9
  411d60:	add    cl,0x9d
  411d63:	into   
  411d64:	push   esi
  411d65:	dec    edi
  411d66:	mov    eax,ecx
  411d68:	or     DWORD PTR [eax],eax
  411d6a:	arpl   bx,bx
  411d6c:	aas    
  411d6d:	or     edi,ecx
  411d6f:	pop    ebp
  411d70:	xchg   DWORD PTR [eax+edi*2+0x13fe56af],eax
  411d77:	(bad)  
  411d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d79:	or     BYTE PTR [ebx+0x5e],ah
  411d7c:	xchg   DWORD PTR [eax+ebp*2-0x4c01a939],eax
  411d83:	mov    ah,0x13
  411d85:	inc    ebx
  411d86:	push   esp
  411d87:	sbb    BYTE PTR [ebx],cl
  411d89:	rcl    dh,0xfc
  411d8c:	jmp    0x411e0d
	...
  411d9a:	add    BYTE PTR [eax],al
  411d9c:	add    BYTE PTR [ebx+0x5],bh
  411d9f:	test   al,0x3
  411da1:	out    dx,al
  411da2:	mov    BYTE PTR [ecx],ah
  411da4:	push   esi
  411da5:	xor    eax,0x1b6bb84f
  411daa:	or     ecx,DWORD PTR [esi]
  411dac:	push   edi
  411dad:	xlat   BYTE PTR ds:[ebx]
  411dae:	js     0x411dda
  411db0:	push   esi
  411db1:	sbb    eax,0xfcb39a4f
  411db6:	cmc    
  411db7:	mov    ah,0x56
  411db9:	or     eax,0xdf88d95b
  411dbe:	inc    ebx
  411dbf:	out    0x56,al
  411dc1:	std    
  411dc2:	mov    ch,0x6b
  411dc4:	cmp    cl,0x4f
  411dc7:	aad    0x56
  411dc9:	pushf  
  411dca:	pop    ebp
  411dcb:	test   DWORD PTR [edx],ebx
  411dcd:	in     al,0x4e
  411dcf:	outs   dx,DWORD PTR ds:[esi]
  411dd0:	sbb    BYTE PTR [eax],0x50
  411dd3:	mov    ebp,0x7498d556
  411dd8:	push   ebp
  411dd9:	int    0x4e
  411ddb:	lods   eax,DWORD PTR ds:[esi]
  411ddc:	nop
  411ddd:	ror    BYTE PTR [edi-0x5b],1
  411de0:	push   esi
  411de1:	(bad)  
  411de2:	(bad)  
  411de4:	push   esi
  411de5:	mov    ch,0xfa
  411de7:	test   al,0xcf
  411de9:	jno    0x411dc8
  411deb:	cli    
  411dec:	retf   0x523
  411def:	xchg   ecx,eax
  411df0:	pop    esi
  411df1:	fs add eax,0xf2fcb3e9
  411df7:	and    ebp,eax
  411df9:	mov    WORD PTR [edi+0x33],cs
  411dfc:	lahf   
  411dfd:	xchg   BYTE PTR [esi+0x65],cl
  411e00:	imul   eax,DWORD PTR [eax],0x0
	...
  411e0f:	add    BYTE PTR [ebp-0x3e],dh
  411e12:	pop    ebp
  411e13:	push   esi
  411e14:	or     al,BYTE PTR [ebx+eax*8]
  411e17:	add    edi,ecx
  411e19:	add    al,0x4e
  411e1b:	nop
  411e1c:	test   al,0x4f
  411e1e:	inc    ebp
  411e1f:	push   esi
  411e20:	(bad)  
  411e21:	sti    
  411e22:	pextrw edx,(bad),0xc5
  411e24:	push   esp
  411e25:	fdiv   st(7),st
  411e27:	call   0xe94ae0e4
  411e2c:	pusha  
  411e2d:	dec    esi
  411e2e:	mov    ah,0x65
  411e30:	xchg   esi,eax
  411e31:	dec    edi
  411e32:	(bad)  
  411e33:	adc    ebp,edi
  411e35:	push   ss
  411e36:	call   DWORD PTR [esi]
  411e38:	xchg   ebp,eax
  411e39:	cdq    
  411e3a:	mov    ds:0xe74f8d0f,eax
  411e3f:	dec    ebp
  411e40:	ins    DWORD PTR es:[edi],dx
  411e41:	dec    esi
  411e42:	(bad)  
  411e43:	(bad)  
  411e44:	in     al,0x51
  411e46:	std    
  411e47:	div    BYTE PTR [esi-0x5241fa9a]
  411e4d:	dec    edi
  411e4e:	sti    
  411e4f:	sbb    ah,BYTE PTR [edi-0x71210173]
  411e55:	dec    edi
  411e56:	icebp  
  411e57:	xchg   DWORD PTR [edi+0x6],ecx
  411e5a:	pcmpgtb mm2,QWORD PTR [edi+ecx*2-0x2]
  411e5f:	(bad)  
  411e60:	adc    eax,0x4aac8af
  411e65:	jnp    0x411e52
  411e67:	push   0x23
  411e69:	pop    esi
  411e6a:	addr16 in al,dx
  411e6c:	inc    ecx
  411e6d:	push   cs
  411e6e:	add    BYTE PTR [ecx-0x613cfb6f],ah
	...
  411e80:	add    BYTE PTR [eax],al
  411e82:	add    dl,ch
  411e84:	xor    esp,DWORD PTR [edi-0x14]
  411e87:	popa   
  411e88:	add    eax,0x168d8100
  411e8d:	inc    DWORD PTR [esi+0x248833ea]
  411e93:	cmp    edi,DWORD PTR [ebx-0x2f]
  411e96:	add    DWORD PTR [esp+eax*1-0x1f071700],ecx
  411e9d:	ss pushw ss
  411ea0:	jnp    0x411e73
  411ea2:	jo     0x411e58
  411ea4:	pop    ebp
  411ea5:	addr16 in al,dx
  411ea7:	popa   
  411ea8:	add    eax,0x16ad4100
  411ead:	inc    DWORD PTR [eax]
  411eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eb0:	jle    0x411e82
  411eb2:	mov    edi,DWORD PTR [eax-0x80]
  411eb5:	inc    ebx
  411eb6:	clc    
  411eb7:	rcl    DWORD PTR [edi],0x8a
  411eba:	shl    BYTE PTR [edx],cl
  411ebc:	dec    ebp
  411ebd:	(bad)  
  411ebe:	dec    DWORD PTR [edx-0x4e]
  411ec1:	jae    0x411ebf
  411ec3:	ror    BYTE PTR [eax],1
  411ec5:	call   0x4a61e5
  411eca:	mov    ebp,DWORD PTR [eax+0x7e]
  411ecd:	sar    bh,1
  411ecf:	lahf   
  411ed0:	mov    eax,0x90b0466
  411ed5:	add    al,ch
  411ed7:	nop
  411ed8:	add    BYTE PTR [eax],al
  411eda:	add    BYTE PTR [ecx],al
  411edc:	leave  
  411edd:	jb     0x411eee
  411edf:	jno    0x411ef7
  411ee1:	addr16 pop ss
  411ee3:	xor    DWORD PTR [eax-0x2],ecx
  411ee6:	inc    BYTE PTR [eax]
	...
  411ef4:	add    BYTE PTR [eax],al
  411ef6:	(bad)  
  411ef7:	mov    cl,0xe6
  411ef9:	xor    DWORD PTR [edx],eax
  411efb:	or     DWORD PTR [eax],eax
  411efd:	mov    edi,eax
  411eff:	pop    esi
  411f00:	(bad)  
  411f01:	imul   ecx,edx,0xba6a005e
  411f07:	pop    esi
  411f08:	add    DWORD PTR [eax-0x46],ebp
  411f0b:	or     BYTE PTR [eax],al
  411f0d:	rol    BYTE PTR ds:0xf6e8ee3c,0x49
  411f14:	(bad)  
  411f15:	inc    DWORD PTR [ebx-0x75]
  411f18:	repnz inc eax
  411f1a:	ror    eax,0x73
  411f1d:	inc    esp
  411f1e:	in     eax,0x3b
  411f20:	cli    
  411f21:	dec    DWORD PTR [edi+0x7dffe6b8]
  411f27:	or     BYTE PTR [eax],al
  411f29:	push   0x56
  411f2b:	pop    edi
  411f2c:	(bad)  
  411f2d:	(bad)  
  411f2e:	lahf   
  411f2f:	mov    eax,0x87373e6
  411f34:	add    BYTE PTR [ebx],cl
  411f36:	arpl   WORD PTR [esi],bx
  411f38:	iret   
  411f39:	or     esp,DWORD PTR [ebx]
  411f3b:	inc    esi
  411f3c:	jmp    0x411f88
  411f3e:	mov    ds:0x40e7b25e,al
  411f43:	arpl   WORD PTR [edx],ax
  411f45:	add    BYTE PTR [ecx-0x450017a2],bh
  411f4b:	pusha  
  411f4c:	call   0xeaa0ea50
  411f51:	push   DWORD PTR [esi+ebx*2]
  411f54:	inc    edx
  411f55:	(bad)  
  411f56:	mov    dh,0xee
  411f58:	push   0xffffff95
	...
  411f66:	add    BYTE PTR [eax],al
  411f68:	add    BYTE PTR [esi+ebx*2+0x2],bl
  411f6c:	mov    DWORD PTR [esi-0x778c3eb6],esp
  411f72:	jbe    0x411f67
  411f74:	dec    edx
  411f75:	mov    ds:0x5c9d6a5e,al
  411f7a:	pop    esi
  411f7b:	add    dl,BYTE PTR [eax-0x75]
  411f7e:	add    edi,DWORD PTR [edi-0x27d49cc0]
  411f84:	repz sti 
  411f86:	mov    ds:0xde4ff14,eax
  411f8b:	push   ebx
  411f8c:	je     0x411f65
  411f8e:	xor    eax,0x5e6306ce
  411f93:	stos   BYTE PTR es:[edi],al
  411f94:	or     ah,BYTE PTR [ebx+0x20eb0608]
  411f9a:	fdivr  st,st(3)
  411f9d:	dec    ebx
  411f9e:	sti    
  411f9f:	mov    esi,0xd86b6340
  411fa4:	idiv   DWORD PTR [ebx-0x5b000457]
  411faa:	fiadd  WORD PTR [edi+0xb]
  411fad:	or     ebx,ebp
  411faf:	mov    esi,0x94766340
  411fb4:	push   es
  411fb5:	arpl   WORD PTR [esi-0x3],bx
  411fb8:	mov    edi,0x72da400f
  411fbd:	sub    BYTE PTR ds:0x5d1303a8,al
  411fc3:	nop
  411fc4:	or     esp,DWORD PTR [ebx+0x5]
  411fc7:	loop   0x41200c
  411fc9:	lock test edx,0x3
	...
  411fdc:	leave  
  411fdd:	add    eax,0x4b4cd946
  411fe2:	mov    bl,0x53
  411fe4:	(bad)  
  411fe5:	(bad)  
  411fe6:	inc    esp
  411fe8:	inc    esp
  411fe9:	fucomp st(0)
  411feb:	push   edx
  411fec:	sub    al,0x4b
  411fee:	fwait
  411fef:	dec    edi
  411ff0:	cmp    al,0x15
  411ff2:	xlat   BYTE PTR ds:[ebx]
  411ff3:	push   edx
  411ff4:	sub    eax,0x3c539b4b
  411ff9:	sbb    eax,0x4b1d52d7
  411ffe:	jnp    0x41204b
  412000:	cld    
  412001:	and    al,0xb7
  412003:	push   edx
  412004:	or     eax,0xb1bb293d
  412009:	fisttp QWORD PTR [ebx+0x66]
  41200c:	cmp    al,0x5
  41200e:	loope  0x411fe5
  412010:	arpl   WORD PTR [esi-0x23],ax
  412013:	mov    fs,WORD PTR [ebx+0x5]
  412016:	jmp    0x21e3c41e
  41201b:	(bad)
  41201e:	out    0xba,eax
  412020:	mov    esp,0xcd532494
  412025:	es xchg ecx,eax
  412027:	dec    edi
  412028:	xchg   ecx,eax
  412029:	inc    ebp
  41202a:	outs   dx,DWORD PTR ds:[esi]
  41202b:	push   edx
  41202c:	mov    ebp,0x655a54a
  412031:	push   cs
  412032:	out    0xd8,al
  412034:	les    edi,FWORD PTR [esi-0x57]
  412037:	scas   al,BYTE PTR es:[edi]
  412038:	add    eax,0x887f3346
  41203d:	xchg   BYTE PTR [ebx+edx*2+0x0],ch
	...
  41204c:	add    BYTE PTR [eax],al
  41204e:	add    BYTE PTR [ecx],dh
  412050:	fst    QWORD PTR [ebx+0x54c65]
  412056:	jno    0x412006
  412058:	add    eax,0x9e56ec3
  41205d:	cdq    
  41205e:	pop    ss
  41205f:	sahf   
  412060:	dec    edx
  412061:	(bad)  
  412062:	aad    0x76
  412064:	xchg   DWORD PTR [eax+ecx*4],edi
  412067:	inc    edx
  412068:	(bad)  
  412069:	(bad)  
  41206a:	call   0x4c41da3
  41206f:	or     bl,BYTE PTR [eax]
  412071:	inc    ecx
  412072:	jmp    0x245f0d7
  412077:	lahf   
  412078:	scas   eax,DWORD PTR es:[edi]
  412079:	enter  0x5d2a,0x2e
  41207d:	out    0xcd,eax
  41207f:	imul   eax,DWORD PTR ds:0x4deb6c00,0xba288351
  412089:	(bad)  
  41208a:	hlt    
  41208b:	(bad)  
  41208c:	sbb    BYTE PTR [ecx-0x17],al
  41208f:	adc    eax,0x90650e8a
  412094:	dec    edx
  412095:	(bad)  
  412096:	jmp    0xea38e234
  41209b:	pusha  
  41209c:	add    eax,0x521c7400
  4120a1:	dec    edi
  4120a2:	push   ebx
  4120a3:	addr16 (bad) 
  4120a6:	inc    edx
  4120a7:	pusha  
  4120a8:	dec    edx
  4120a9:	je     0x412078
  4120ab:	xor    dh,cl
  4120ad:	mov    al,ds:0x949a017
  4120b2:	test   eax,0x0
	...
  4120bf:	add    BYTE PTR [eax],al
  4120c1:	add    BYTE PTR [ebx+ebx*8+0x55a39e7],dh
  4120c8:	add    BYTE PTR [edx+0x2f],ch
  4120cb:	int3   
  4120cc:	je     0x4120d7
  4120ce:	fmulp  st(0),st
  4120d0:	imul   ecx
  4120d2:	xchg   esp,eax
  4120d3:	stos   DWORD PTR es:[edi],eax
  4120d4:	(bad)  
  4120d5:	sbb    al,0x17
  4120d7:	bound  edi,QWORD PTR [edi-0x2c]
  4120da:	xor    ecx,DWORD PTR [ebx-0x78]
  4120dd:	add    BYTE PTR [edi-0x53],al
  4120e0:	mov    eax,DWORD PTR [ebp-0x1e]
  4120e3:	nop
  4120e4:	std    
  4120e5:	jne    0x4120f9
  4120e7:	mov    ah,0x73
  4120e9:	hlt    
  4120ea:	pusha  
  4120eb:	push   es
  4120ec:	push   DWORD PTR [ebp-0x2]
  4120ef:	mov    bl,0x13
  4120f1:	mov    eax,ds:0xafe465c
  4120f6:	cmp    ch,BYTE PTR ds:0xb1078b2c
  4120fc:	mov    DWORD PTR [eax],edx
  4120fe:	iret   
  4120ff:	inc    eax
  412100:	out    dx,al
  412101:	push   eax
  412102:	call   0x5ce634bc
  412107:	inc    esp
  412108:	dec    BYTE PTR [edx]
  41210a:	mov    ch,BYTE PTR ds:0x8ae06818
  412110:	aas    
  412111:	add    BYTE PTR [ebp+0x30],cl
  412114:	out    dx,al
  412115:	call   0x411c7a
  41211a:	add    ebp,eax
  41211c:	jae    0x41211f
  41211e:	leave  
  41211f:	mov    ch,0x73
  412121:	lock jb 0x412114
  412124:	add    eax,0x0
	...
  412135:	cli    
  412136:	mov    ch,0x73
  412138:	hlt    
  412139:	bound  ecx,QWORD PTR [esi+0x33]
  41213c:	(bad)  
  41213d:	std    
  41213e:	mov    ch,0x73
  412140:	cld    
  412141:	adc    bh,dh
  412143:	add    eax,0xc1c9fa00
  412148:	pop    ebx
  412149:	add    eax,edx
  41214b:	push   ebx
  41214c:	mov    ebp,DWORD PTR [esi+0xcc0c283]
  412152:	mov    dh,0xfd
  412154:	push   ebx
  412155:	and    dh,BYTE PTR [edi-0x1f]
  412158:	inc    eax
  412159:	retf   0x70bc
  41215c:	add    DWORD PTR [ecx],ecx
  41215e:	mov    dh,0x81
  412160:	cmp    eax,0x40ecf0
  412165:	arpl   WORD PTR [esi-0x2a],bx
  412168:	sbb    ah,al
  41216a:	cmp    DWORD PTR [eax+0x27],eax
  41216d:	and    bl,BYTE PTR [esi+0x2]
  412170:	je     0x4121e3
  412172:	fisttp DWORD PTR ds:0x41d3599
  412178:	add    bh,dh
  41217a:	cmp    DWORD PTR fs:[esi+edx*8],0xfffffff0
  41217f:	ret    0x6cff
  412182:	xor    DWORD PTR ds:0x3993a32b,eax
  412188:	ret    0x1388
  41218b:	push   eax
  41218c:	adc    al,0x29
  41218e:	test   dl,0xff
  412191:	(bad)  [eax+0x21dec656]
  412197:	push   ecx
  412198:	inc    BYTE PTR [eax]
	...
  4121a6:	add    BYTE PTR [eax],al
  4121a8:	cmp    al,0x6
  4121aa:	add    eax,DWORD PTR [eax]
  4121ac:	arpl   WORD PTR [edx+eax*1+0x6a],si
  4121b0:	popa   
  4121b1:	neg    BYTE PTR [ecx-0x7ca19cfb]
  4121b7:	neg    DWORD PTR [edi+eiz*1]
  4121ba:	xchg   BYTE PTR ds:0x89025e62,bl
  4121c0:	out    0x15,al
  4121c2:	push   ecx
  4121c3:	inc    BYTE PTR [ecx+eiz*8]
  4121c6:	test   ebx,ecx
  4121c8:	std    
  4121c9:	push   esi
  4121ca:	dec    esi
  4121cb:	dec    edi
  4121cc:	hlt    
  4121cd:	push   0x26ecfd3b
  4121d2:	pop    ebx
  4121d3:	lea    ebx,[ebp+0x5e]
  4121d6:	add    cl,BYTE PTR [ebx]
  4121d8:	mov    ds:0x63f28626,eax
  4121dd:	pop    esi
  4121de:	add    ch,BYTE PTR [eax-0x22]
  4121e1:	adc    al,ch
  4121e3:	call   edi
  4121e5:	fcom   DWORD PTR [ebx-0x3]
  4121e8:	mov    esp,0x52e7b396
  4121ed:	add    eax,0xfc6303ee
  4121f2:	test   al,0xff
  4121f4:	loopne 0x412239
  4121f6:	call   0x638184fe
  4121fb:	dec    eax
  4121fc:	xchg   esi,eax
  4121fd:	inc    edi
  4121fe:	test   DWORD PTR [ebx+eiz*2],eax
  412201:	add    eax,0x40df80e9
  412206:	jbe    0x412257
  412208:	jge    0x4121be
  41220a:	ins    DWORD PTR es:[edi],dx
  41220b:	cdq    
	...
  412218:	add    BYTE PTR [eax],al
  41221a:	add    BYTE PTR [eax+0x6d4f6546],dl
  412220:	icebp  
  412221:	cs sbb al,0x22
  412224:	add    eax,0x48207962
  412229:	dec    ebp
  41222a:	dec    edi
  41222b:	imul   eax,DWORD PTR [ebp-0xb],0xe905f487
  412232:	add    ecx,DWORD PTR [eax-0x1800c350]
  412238:	jbe    0x412222
  41223a:	add    esp,DWORD PTR [ebx+0x46]
  41223d:	pop    ebx
  41223e:	cmp    BYTE PTR [esi],ch
  412240:	inc    edi
  412241:	sbb    eax,0xe8df24da
  412246:	add    esp,DWORD PTR [ebx+0x3]
  412249:	add    DWORD PTR [ecx],esp
  41224b:	pop    ebp
  41224c:	add    eax,0xd1ccfae9
  412251:	jg     0x4122cf
  412253:	lahf   
  412254:	dec    ebp
  412255:	arpl   cx,cx
  412257:	clc    
  412258:	mov    ch,0x80
  41225a:	pop    edx
  41225b:	arpl   WORD PTR [ebx],ax
  41225d:	jmp    0xdd8e99b0
  412262:	clc    
  412263:	retf   
  412264:	pop    ss
  412265:	sub    BYTE PTR [eax+ebp*2],al
  412268:	inc    ebp
  412269:	push   esp
  41226a:	lods   al,BYTE PTR ds:[esi]
  41226b:	aad    0xd0
  41226d:	les    ecx,FWORD PTR [esi+0x77]
  412270:	push   0xfbc4c50e
  412275:	jmp    FWORD PTR [eax-0x59bcf26c]
  41227b:	jmp    0x412203
  41227d:	std    
  41227e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  41228b:	add    BYTE PTR [eax],al
  41228d:	add    BYTE PTR ds:0x60e9fe46,bl
  412293:	js     0x412219
  412295:	test   eax,0x39fe472e
  41229a:	mov    bh,0x7
  41229c:	add    dh,dh
  41229e:	pusha  
  41229f:	pop    ebp
  4122a0:	pop    esi
  4122a1:	out    0x60,eax
  4122a3:	add    eax,0xf19ba90b
  4122a8:	sub    BYTE PTR [eax+eiz*1],0x48
  4122ac:	(bad)  
  4122ad:	pushaw 
  4122af:	ror    DWORD PTR [ebx],1
  4122b1:	pop    esi
  4122b2:	retf   
  4122b3:	xchg   ch,bh
  4122b5:	push   esi
  4122b6:	lods   eax,DWORD PTR ds:[esi]
  4122b7:	ja     0x4122bd
  4122b9:	fidiv  WORD PTR [edi-0x3c]
  4122bc:	call   DWORD PTR [ecx+0x71]
  4122bf:	pop    edx
  4122c0:	sbb    DWORD PTR [esi],edi
  4122c2:	sub    ecx,DWORD PTR [edx-0x19]
  4122c5:	jge    0x41232b
  4122c7:	add    eax,0x4e1b2e00
  4122cc:	out    0x55,eax
  4122ce:	fs add eax,0x47281200
  4122d4:	je     0x4122e7
  4122d6:	mov    eax,0x60e903a4
  4122db:	js     0x412261
  4122dd:	xor    eax,0x99fe479e
  4122e2:	xchg   ebp,eax
  4122e3:	xchg   ecx,eax
  4122e4:	(bad)  
  4122e5:	imul   DWORD PTR [esi+0x6b45e747]
  4122eb:	add    eax,0x4664d000
  4122f0:	(bad)  
  4122f1:	fiadd  WORD PTR [eax]
	...
  4122ff:	add    BYTE PTR [eax],al
  412301:	xchg   esi,eax
  412302:	xchg   ecx,eax
  412303:	(bad)  
  412304:	xlat   BYTE PTR ds:[ebx]
  412305:	cs inc edi
  412307:	out    0x69,eax
  412309:	imul   eax,DWORD PTR ds:0xc4510000,0x59
  412310:	leave  
  412311:	stc    
  412312:	lea    ecx,[ecx-0x2142b614]
  412318:	push   ebx
  412319:	and    dh,bh
  41231b:	in     al,0x40
  41231d:	mov    edx,0xf90170b9
  412322:	mov    bh,0x81
  412324:	cmp    eax,0x40e763
  412329:	mov    ch,BYTE PTR ds:0x5ea78307
  41232f:	sub    al,0x41
  412331:	jp     0x412334
  412333:	jne    0x41233a
  412335:	mov    eax,ds:0xc9c959c1
  41233a:	mov    edi,0x17afc43
  41233f:	add    BYTE PTR [eax],al
  412341:	cmp    eax,0x4a00f63e
  412346:	or     DWORD PTR [eax],eax
  412348:	(bad)  
  412349:	jmp    esp
  41234b:	(bad)  
  41234c:	(bad)  
  41234d:	cmp    cl,BYTE PTR [ecx]
  41234f:	mov    DWORD PTR [ebp-0x72],0x4a000009
  412356:	retf   0xf043
  412359:	dec    edx
  41235a:	or     DWORD PTR [eax],eax
  41235c:	add    BYTE PTR [edi-0x48af11b4],dh
  412362:	dec    esp
  412363:	repnz push eax
	...
  412371:	add    BYTE PTR [eax],al
  412373:	add    BYTE PTR [edi-0x1faf15b4],al
  412379:	ror    DWORD PTR [ebx+0x68796645],1
  41237f:	add    dh,al
  412381:	add    eax,0x3bf5006a
  412386:	addr16 cs retf 
  412389:	or     BYTE PTR [ecx+0x7b861245],cl
  41238f:	call   0x8148808e
  412394:	arpl   cx,bx
  412396:	pop    ebx
  412397:	jmp    0x754351ff
  41239c:	push   edi
  41239d:	dec    ebx
  41239e:	aad    0xfb
  4123a0:	aam    0xe9
  4123a2:	dec    ebx
  4123a3:	cmp    BYTE PTR [esi],0x76
  4123a6:	add    dh,BYTE PTR [ecx+ebx*1-0x59]
  4123aa:	lods   eax,DWORD PTR ds:[esi]
  4123ab:	idiv   DWORD PTR [eax+0x3b724b2b]
  4123b1:	xchg   esi,eax
  4123b2:	aad    0x41
  4123b4:	pushf  
  4123b5:	fwait
  4123b6:	jns    0x4123fc
  4123b8:	adc    DWORD PTR [ebx-0x100717f1],0x4c
  4123bf:	(bad)  
  4123c0:	pop    eax
  4123c1:	outs   dx,BYTE PTR ds:[esi]
  4123c2:	(bad)  
  4123c3:	and    ch,dl
  4123c5:	icebp  
  4123c6:	imul   esp,DWORD PTR [bx-0x7a],0xab6c315c
  4123ce:	dec    ebx
  4123cf:	je     0x412354
  4123d1:	mov    bl,0xc2
  4123d3:	pop    es
  4123d4:	pop    esp
  4123d5:	popa   
  4123d6:	data16 mov es,WORD PTR [eax]
	...
  4123e5:	add    BYTE PTR [eax],al
  4123e7:	mov    ds:0x42344b2a,eax
  4123ec:	js     0x4123af
  4123ee:	call   ebp
  4123f0:	sub    eax,0x6da9e09f
  4123f5:	add    al,BYTE PTR [ebx+0x4c4b7a20]
  4123fb:	aas    
  4123fc:	scas   eax,DWORD PTR es:[edi]
  4123fd:	int    0xeb
  4123ff:	arpl   WORD PTR [ecx+0x1a96fe87],bx
  412405:	dec    esp
  412406:	adc    al,0x7e
  412408:	test   cl,al
  41240a:	jmp    DWORD PTR ds:0x4ff4e71
  412410:	add    al,BYTE PTR cs:[ecx-0xa6f982]
  412417:	hlt    
  412418:	sub    eax,0x4fa04d5
  41241d:	inc    ebp
  41241e:	dec    ebx
  41241f:	in     eax,0x43
  412421:	imul   ecx,ecx,0xfd5d04d8
  412427:	aad    0xb9
  412429:	int3   
  41242a:	dec    ebx
  41242b:	ja     0x4123d7
  41242d:	push   ss
  41242e:	(bad)
  412431:	out    0x3,eax
  412433:	arpl   WORD PTR ds:0xd9a13d12,ax
  412439:	popa   
  41243a:	pop    eax
  41243b:	loope  0x412485
  41243d:	mov    esp,0x23ad0db7
  412442:	bound  ebx,QWORD PTR [ebp+eax*1-0x6f]
  412446:	(bad)  
  412447:	arpl   WORD PTR [eax-0x73],cx
  41244a:	xchg   DWORD PTR [eax],eax
	...
  412458:	add    BYTE PTR [eax],al
  41245a:	dec    edi
  41245b:	mov    ds:0x4384c4d6,al
  412460:	hlt    
  412461:	cld    
  412462:	loope  0x412465
  412464:	inc    eax
  412465:	sbb    ah,BYTE PTR [edx]
  412467:	add    eax,0xf066d0e9
  41246c:	sub    BYTE PTR [ebx+0x7f294e09],ch
  412472:	jg     0x412498
  412474:	mov    ds:0x772e54c4,al
  412479:	add    eax,0x20510563
  41247e:	inc    edi
  41247f:	inc    ebx
  412480:	cmp    eax,0xa2287f87
  412485:	les    esi,FWORD PTR [ebx+eax*2]
  412488:	mov    ah,0xf2
  41248a:	sub    eax,0x6f4aecb7
  41248f:	sub    BYTE PTR [edx+0x462b1cc4],dh
  412495:	pop    es
  412496:	arpl   WORD PTR ds:0x89743e2,ax
  41249c:	adc    dh,bl
  41249e:	arpl   WORD PTR ds:0x41a742e9,ax
  4124a4:	(bad)  
  4124a5:	call   0x5c412a0a
  4124aa:	and    bh,BYTE PTR [edi]
  4124ac:	dec    edi
  4124ad:	push   ebx
  4124ae:	pop    edi
  4124af:	scas   eax,DWORD PTR es:[edi]
  4124b0:	add    esi,ebx
  4124b2:	mov    ch,0x6
  4124b4:	push   0xffffffe9
  4124b6:	sub    DWORD PTR [edi+0x6dd3ce03],esi
  4124bc:	sub    eax,0x28
	...
  4124cd:	pop    edi
  4124ce:	push   cs
  4124cf:	shl    BYTE PTR ds:0xe9882c62,0x60
  4124d6:	add    eax,0x2d633aff
  4124db:	pop    ecx
  4124dc:	sub    BYTE PTR [eax],bl
  4124de:	inc    ebx
  4124df:	mov    BYTE PTR [edi+ebp*1],ah
  4124e2:	inc    ebx
  4124e3:	jb     0x4124d2
  4124e5:	cmp    BYTE PTR [eax],dh
  4124e7:	add    ecx,ebp
  4124e9:	pusha  
  4124ea:	aad    0xfe
  4124ec:	cld    
  4124ed:	sbb    dl,dl
  4124ef:	(bad)  
  4124f0:	cli    
  4124f1:	jl     0x41249d
  4124f3:	jmp    edi
  4124f5:	pusha  
  4124f6:	add    eax,0x426ce968
  4124fb:	(bad)  
  4124fc:	push   ecx
  4124fd:	add    eax,DWORD PTR [edi]
  4124ff:	add    cl,ch
  412501:	pop    ebp
  412502:	xor    BYTE PTR [ebx+0x2],0xa0
  412506:	leave  
  412507:	sti    
  412508:	jmp    0x74412a6d
  41250d:	and    edi,DWORD PTR [esi]
  41250f:	dec    edi
  412510:	shl    DWORD PTR [eax-0x51],cl
  412513:	add    DWORD PTR [esi],esi
  412515:	adc    edi,DWORD PTR [edx]
  412517:	imul   ebp,ecx,0x2603b799
  41251d:	xor    ebp,DWORD PTR [ebp+0x2d]
  412520:	test   al,0x60
  412522:	push   cs
  412523:	rcr    BYTE PTR [ebp+0x11744316],0xa8
  41252a:	push   0xcf5d0030
  41252f:	jmp    0x412564
	...
  412540:	std    
  412541:	push   ecx
  412542:	imul   al
  412544:	mov    ds,WORD PTR [ecx]
  412546:	(bad)  
  412547:	(bad)  
  412548:	cmp    eax,0xfa412006
  41254d:	les    eax,FWORD PTR [ebx-0x4]
  412550:	retf   0x5
  412553:	add    BYTE PTR [edi],bh
  412555:	cmp    dl,0x50
  412558:	and    BYTE PTR [ecx],cl
  41255a:	push   0x2
  41255c:	gs arpl si,di
  41255f:	(bad)  
  412560:	jns    0x412567
  412562:	call   DWORD PTR ds:0x411ee3
  412568:	rol    ebp,0xd
  41256b:	test   BYTE PTR [ebx],dl
  41256d:	or     DWORD PTR [eax],eax
  41256f:	add    ch,al
  412571:	adc    esi,0x58a20
  412577:	mov    DWORD PTR [edi-0x13],0x57affff
  41257e:	push   DWORD PTR [ebx-0x7a]
  412581:	mov    esp,0x57ede043
  412586:	push   es
  412587:	pop    DWORD PTR [edi-0x5b]
  41258a:	lds    eax,FWORD PTR [ebp+0x12]
  41258d:	or     DWORD PTR [eax],eax
  41258f:	add    BYTE PTR [edx-0x3a],cl
  412592:	inc    ebx
  412593:	in     al,dx
  412594:	dec    edx
  412595:	add    eax,0x80850000
  41259a:	out    dx,al
  41259b:	add    BYTE PTR [edx],bh
  41259d:	add    eax,0xd107c700
  4125a2:	(bad)  
  4125a3:	inc    DWORD PTR [eax]
	...
  4125b1:	add    BYTE PTR [eax],al
  4125b3:	dec    edx
  4125b4:	add    eax,0x7952458d
  4125b9:	std    
  4125ba:	jne    0x41263a
  4125bc:	loope  0x4125ea
  4125be:	add    al,0xa
  4125c0:	add    eax,0xa263c00b
  4125c5:	jmp    0x5a74:0x41a8e82
  4125cc:	pop    es
  4125cd:	iret   
  4125ce:	repz in al,dx
  4125d0:	sub    edi,esi
  4125d2:	sub    BYTE PTR [edx+0x17443f2e],ah
  4125d8:	add    al,BYTE PTR cs:[eax]
  4125db:	arpl   WORD PTR [ebx-0x1],dx
  4125de:	(bad)  
  4125df:	es jp  0x4125e4
  4125e2:	add    BYTE PTR [ebx+0x2e],ah
  4125e5:	inc    edi
  4125e6:	je     0x4125b7
  4125e8:	dec    edi
  4125e9:	in     eax,dx
  4125ea:	pushf  
  4125eb:	jne    0x4125da
  4125ed:	add    ecx,DWORD PTR [ebx]
  4125ef:	mov    ds:0xd8e7e9fa,eax
  4125f4:	add    BYTE PTR [edi-0x2],0xe0
  4125f8:	xor    DWORD PTR [ebp+0x2d],ebp
  4125fb:	and    ch,BYTE PTR [esi]
  4125fd:	add    dh,BYTE PTR [ebp+eiz*2-0x61]
  412601:	in     eax,dx
  412602:	xchg   esp,eax
  412603:	inc    ebp
  412604:	in     eax,dx
  412605:	add    eax,edi
  412607:	pop    di
  412609:	sbb    DWORD PTR [ecx+0x63],eax
  41260c:	sub    eax,0xabe30002
  412611:	(bad)
  412614:	inc    edx
  412615:	sti    
  412616:	inc    BYTE PTR [eax]
	...
  412624:	add    BYTE PTR [eax],al
  412626:	idiv   BYTE PTR [ecx-0x29988bb9]
  41262c:	sub    eax,0x472e6302
  412631:	je     0x41268a
  412633:	mov    BYTE PTR [ebx+0x0],0x63
  412637:	cs inc esi
  412639:	xor    ah,BYTE PTR [ebx]
  41263b:	test   DWORD PTR [edi-0x2],eax
  41263e:	cmp    al,0xff
  412640:	push   esp
  412641:	lods   eax,DWORD PTR ds:[esi]
  412642:	jnp    0x412673
  412644:	test   DWORD PTR [ecx+eax*4-0x2701b811],0x39fd0204
  41264f:	adc    BYTE PTR [eax+eiz*8+0x16],ah
  412653:	inc    eax
  412654:	adc    eax,0xe905638b
  412659:	add    esp,DWORD PTR [esp+ebx*8-0x7368bbd1]
  412660:	or     al,0x84
  412662:	and    BYTE PTR [ecx-0x80],al
  412665:	in     eax,dx
  412666:	add    al,0xc5
  412668:	call   0xaa4798b8
  41266d:	inc    edi
  41266e:	dec    edx
  41266f:	add    eax,0x56235d1
  412674:	jmp    0xce3bf4d4
  412679:	inc    edi
  41267a:	mov    esp,0xbd47b999
  41267f:	lods   al,BYTE PTR ds:[esi]
  412680:	dec    ebx
  412681:	push   ss
  412682:	and    al,BYTE PTR ds:0xc678a141
  412688:	call   0x4126e8
	...
  412699:	push   edi
  41269a:	cld    
  41269b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41269c:	inc    edi
  41269d:	add    al,0x7a
  41269f:	into   
  4126a0:	les    edx,FWORD PTR [edi+eiz*4+0x522199e]
  4126a7:	add    DWORD PTR [esi+0x4a],0xf3dc8540
  4126ae:	out    dx,al
  4126af:	daa    
  4126b0:	add    al,0xb
  4126b2:	add    ah,0xc4
  4126b5:	ins    BYTE PTR es:[edi],dx
  4126b6:	daa    
  4126b7:	jge    0x4126c3
  4126b9:	fs aas 
  4126bb:	rcl    BYTE PTR [edx+ecx*4],1
  4126be:	(bad)  
  4126bf:	call   0xa82d989f
  4126c4:	add    edi,DWORD PTR [ebx]
  4126c6:	adc    al,BYTE PTR es:[edi+0x45]
  4126ca:	scas   al,BYTE PTR es:[edi]
  4126cb:	retf   
  4126cc:	adc    eax,0xc9d105a2
  4126d1:	mov    ah,al
  4126d3:	(bad)  
  4126d4:	call   0x2e7a7c61
  4126d9:	pushf  
  4126da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126db:	leave  
  4126dc:	shl    DWORD PTR [edi],1
  4126de:	aas    
  4126df:	data16 jae 0x412759
  4126e2:	(bad)  
  4126e3:	inc    DWORD PTR [eax]
  4126e5:	mov    eax,ds:0xa70efefc
  4126ea:	pop    es
  4126eb:	cli    
  4126ec:	push   es
  4126ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126ee:	es xor al,0x3
  4126f1:	pushf  
  4126f2:	aas    
  4126f3:	or     ch,BYTE PTR [ecx]
  4126f5:	adc    edx,DWORD PTR [eax+ebp*8]
  4126f8:	fistp  WORD PTR [ecx+0xf2fe3f]
	...
  41270a:	add    BYTE PTR [eax],al
  41270c:	and    BYTE PTR [edx+0x6263a609],dh
  412712:	dec    edx
  412713:	sub    BYTE PTR [edi+0x4],ah
  412716:	add    cl,ch
  412718:	pusha  
  412719:	lods   eax,DWORD PTR ds:[esi]
  41271a:	add    al,ch
  41271c:	pusha  
  41271d:	add    eax,0x3e50d6e8
  412722:	dec    BYTE PTR [edx-0x16bf33bd]
  412728:	gs leave 
  41272a:	sti    
  41272b:	call   0x6c412c97
  412730:	mov    ds:0x73964f3a,eax
  412735:	sub    BYTE PTR [ecx+0x28],cl
  412738:	pop    edi
  412739:	sub    eax,0x560eb68
  41273e:	or     ebp,DWORD PTR [ecx-0x4300e66d]
  412744:	add    ecx,esp
  412746:	inc    eax
  412747:	jmp    0x666f7f54
  41274c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41274d:	inc    edi
  41274e:	add    al,0x44
  412750:	sbb    al,ch
  412752:	(bad)  
  412753:	call   0x41412cb8
  412758:	ds clc 
  41275a:	inc    BYTE PTR [eax]
  41275c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41275d:	fiadd  DWORD PTR [ebx+esi*1]
  412760:	jne    0x412729
  412762:	push   si
  412764:	pop    ebp
  412765:	dec    eax
  412766:	(bad)  
  412767:	out    0x39,eax
  412769:	sar    ebp,cl
  41276b:	call   DWORD PTR [ebx-0x3d]
  41276e:	push   ebx
  41276f:	mov    eax,DWORD PTR [eax]
	...
  41277d:	add    BYTE PTR [eax],al
  41277f:	pop    dx
  412781:	add    eax,0xf801bae9
  412786:	jb     0x412783
  412788:	ret    0x6afd
  41278b:	or     bl,dl
  41278d:	mov    eax,0xb8020a01
  412792:	add    dl,bh
  412794:	add    DWORD PTR [eax],eax
  412796:	leave  
  412797:	cmp    BYTE PTR [esi],bh
  412799:	(bad)  
  41279a:	addr16 imul ebx,edx,0x3e
  41279e:	add    dl,al
  4127a0:	push   edx
  4127a1:	inc    edx
  4127a3:	mov    ch,0x60
  4127a5:	clc    
  4127a6:	call   0xa4293125
  4127ab:	retf   
  4127ac:	add    DWORD PTR [eax],eax
  4127ae:	call   0x3eeeb3
  4127b3:	mov    ds:0xf5fff0bb,al
  4127b8:	loopne 0x4127cc
  4127ba:	cmc    
  4127bb:	(bad)
  4127be:	cld    
  4127bf:	out    dx,eax
  4127c0:	(bad)  
  4127c1:	std    
  4127c2:	xor    DWORD PTR [edi+0x7a414964],0x1
  4127c9:	je     0x4127e4
  4127cb:	or     DWORD PTR [esi],eax
  4127cd:	xchg   ebp,eax
  4127ce:	cs dec ebx
  4127d0:	or     DWORD PTR [eax],eax
  4127d2:	je     0x412850
  4127d4:	enter  0x9513,0xa4
  4127d8:	inc    edx
  4127d9:	inc    dh
  4127db:	dec    edi
  4127dc:	xor    ah,BYTE PTR [edi]
  4127de:	inc    ecx
  4127df:	dec    edx
  4127e0:	or     BYTE PTR [eax],al
	...
  4127f2:	arpl   WORD PTR [esi-0x33b739a5],bp
  4127f8:	inc    esp
  4127f9:	out    0x2b,eax
  4127fb:	ret    
  4127fc:	inc    esp
  4127fd:	(bad)  
  4127fe:	and    BYTE PTR [edi-0x34],dl
  412801:	call   0x718b56a9
  412806:	(bad)  
  412807:	out    dx,eax
  412808:	inc    esp
  412809:	out    0x74,eax
  41280b:	sub    eax,0x21890002
  412810:	test   eax,0x531c312a
  412815:	or     BYTE PTR [ecx],0x23
  412818:	int    0x1
  41281a:	or     BYTE PTR [ecx],dh
  41281c:	push   edi
  41281d:	jmp    0x6ec:0xfe44a40b
  412824:	ins    BYTE PTR es:[edi],dx
  412825:	mul    ah
  412827:	sub    ebx,eax
  412829:	inc    esp
  41282b:	adc    al,BYTE PTR [ebx]
  41282d:	add    BYTE PTR [ebx+0x5b],ah
  412830:	sbb    eax,0x3ed2a30
  412835:	(bad)  
  412836:	jle    0x41284a
  412838:	stos   DWORD PTR es:[edi],eax
  412839:	inc    eax
  41283a:	arpl   WORD PTR [ebx+0x1d],ax
  41283d:	cmp    BYTE PTR [edx],bl
  41283f:	in     eax,dx
  412840:	add    edi,edi
  412842:	xchg   BYTE PTR [edx],dh
  412844:	test   eax,0x1d6b6340
  412849:	inc    eax
  41284a:	cmp    ch,ch
  41284c:	add    edi,edi
  41284e:	ds loop 0x4127fb
  412851:	inc    eax
  412852:	arpl   WORD PTR [ebx+0x481d],dx
	...
  412864:	add    BYTE PTR [edx],ch
  412866:	in     eax,dx
  412867:	add    edi,edi
  412869:	inc    esi
  41286a:	repnz stos BYTE PTR es:[edi],al
  41286c:	inc    eax
  41286d:	arpl   WORD PTR [ebx-0x12f5afe3],di
  412873:	add    edi,edi
  412875:	adc    ch,BYTE PTR ds:[ebx+0x66056340]
  41287c:	push   ds
  41287d:	mov    ebx,0x4c03a7de
  412882:	loop   0x412838
  412884:	stos   BYTE PTR es:[edi],al
  412885:	mov    ds:0xc31e4e05,eax
  41288a:	fisub  WORD PTR [edi-0x3b1dcbfd]
  412890:	stos   BYTE PTR es:[edi],al
  412891:	mov    ds:0xbb1e3605,eax
  412896:	fisub  WORD PTR [edi-0x6b1de3fd]
  41289c:	stos   BYTE PTR es:[edi],al
  41289d:	mov    ds:0x931e1e05,eax
  4128a2:	fisub  WORD PTR [edi-0x6b1dfbfd]
  4128a8:	stos   BYTE PTR es:[edi],al
  4128a9:	mov    ds:0x7b1e0605,eax
  4128ae:	fisub  WORD PTR [edi+0x74e1ec03]
  4128b4:	stos   BYTE PTR es:[edi],al
  4128b5:	mov    ds:0xe31dee05,eax
  4128ba:	frstor [edi]
  4128bc:	add    al,0xd4
  4128be:	loope  0x412924
  4128c0:	frstor [ebx]
  4128c2:	add    eax,0xdddce9d6
  4128c7:	daa    
  4128c8:	add    al,0x0
	...
  4128d6:	add    BYTE PTR [eax],al
  4128d8:	mov    esp,0x23dd74e1
  4128dd:	add    eax,0xdddce9be
  4128e2:	daa    
  4128e3:	add    al,0xa4
  4128e5:	loope  0x41293b
  4128e7:	frstor [ebx]
  4128e9:	add    eax,0xddece9a6
  4128ee:	daa    
  4128ef:	add    al,0x8c
  4128f1:	loope  0x412967
  4128f3:	frstor [ebx]
  4128f5:	add    eax,0xdddce98e
  4128fa:	daa    
  4128fb:	add    al,0x74
  4128fd:	loope  0x412943
  4128ff:	frstor [ebx]
  412901:	add    eax,0x637a7600
  412906:	pop    eax
  412907:	sub    BYTE PTR [edi+0x3a],ah
  41290a:	and    al,0x95
  41290c:	ss (bad) 
  41290e:	call   FWORD PTR [ebp+0x3a]
  412911:	imul   ebx,DWORD PTR [eax-0x58],0x60
  412915:	cmp    ah,BYTE PTR [edx*4+0x45ffc61e]
  41291c:	dec    edx
  41291d:	jae    0x412977
  41291f:	test   al,0x60
  412921:	cmp    ah,BYTE PTR [esi*2+0x2dffc606]
  412928:	or     bh,BYTE PTR [ebx+0x58]
  41292b:	test   al,0x60
  41292d:	cmp    ah,BYTE PTR [eiz*1+0x15ffc62e]
  412934:	cli    
  412935:	inc    edx
  412936:	pop    eax
  412937:	test   al,0x60
  412939:	cmp    ah,BYTE PTR [esi*1+0x0]
	...
  412948:	add    BYTE PTR [eax],al
  41294a:	add    BYTE PTR [esi],dl
  41294c:	(bad)  
  41294d:	(bad)  
  41294e:	std    
  41294f:	sti    
  412950:	dec    edx
  412951:	pop    eax
  412952:	test   al,0x60
  412954:	cmp    ah,BYTE PTR [edx*1-0x1a003a42]
  41295b:	retf   
  41295c:	push   edx
  41295d:	pop    eax
  41295e:	sub    BYTE PTR [edi+0x3a],ah
  412961:	and    al,0xb5
  412963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412964:	(bad)  
  412967:	retf   
  412968:	pop    edx
  412969:	pop    eax
  41296a:	sub    BYTE PTR [edi+0x3a],bl
  41296d:	and    al,0xc5
  41296f:	pop    ebp
  412971:	push   DWORD PTR [ebp+0x285822bb]
  412977:	cmp    ah,BYTE PTR [si]
  41297a:	xchg   ebp,eax
  41297b:	mov    bh,0xc5
  41297d:	call   FWORD PTR [ebp+0x28582a7b]
  412983:	pop    edi
  412984:	cmp    ah,BYTE PTR [edx*4-0x3a61]
  41298b:	(bad)  ds:0x13b59f6
  412991:	jmp    DWORD PTR ds:0x3f58ee
  412997:	int    0x2d
  412999:	add    bl,BYTE PTR [edx+0xb]
  41299c:	push   es
  41299d:	jmp    DWORD PTR ds:0x3f5852
  4129a3:	lods   eax,DWORD PTR ds:[esi]
  4129a4:	sub    eax,0x60b5a0a
  4129a9:	jmp    DWORD PTR ds:0x3f581a
	...
  4129bb:	add    BYTE PTR [eax],al
  4129bd:	add    BYTE PTR [ebp+0x2d],ch
  4129c0:	adc    bl,BYTE PTR [edx-0x5]
  4129c3:	add    eax,0x583225ff
  4129c8:	aas    
  4129c9:	add    BYTE PTR ds:0xbb5a1e2d,bh
  4129cf:	add    eax,0x582225ff
  4129d4:	aas    
  4129d5:	add    BYTE PTR [ebp+0x2d],ch
  4129d8:	sub    bl,BYTE PTR [edx-0x35]
  4129db:	add    eax,0x57aa25ff
  4129e0:	aas    
  4129e1:	add    ch,ch
  4129e3:	and    DWORD PTR [edx],esi
  4129e5:	pop    edx
  4129e6:	or     eax,DWORD PTR [esi]
  4129e8:	jmp    DWORD PTR ds:0x3f5b82
  4129ee:	lods   eax,DWORD PTR ds:[esi]
  4129ef:	and    DWORD PTR [edx],edi
  4129f1:	pop    edx
  4129f2:	jnp    0x4129f5
  4129f4:	jmp    DWORD PTR ds:0x3f5b8a
  4129fa:	popf   
  4129fb:	and    DWORD PTR [edx+0x5a],eax
  4129fe:	jnp    0x412a01
  412a00:	jmp    DWORD PTR ds:0x3f5b82
  412a06:	int    0x21
  412a08:	dec    edx
  412a09:	pop    edx
  412a0a:	dec    ebx
  412a0b:	add    edi,edi
  412a0d:	and    eax,0x3f5b56
  412a12:	arpl   WORD PTR [ebx-0x12e6a41a],dx
  412a18:	add    edi,edi
  412a1a:	ds or  al,0xde
  412a1d:	inc    eax
  412a1e:	arpl   WORD PTR [ebx+0x67e6],di
	...
  412a30:	add    BYTE PTR [ecx],cl
  412a32:	in     eax,dx
  412a33:	add    edi,edi
  412a35:	xchg   BYTE PTR [edx],bh
  412a37:	fadd   QWORD PTR [eax+0x63]
  412a3a:	lahf   
  412a3b:	out    0x6f,al
  412a3d:	test   eax,0x7eff026d
  412a42:	pop    edx
  412a43:	fadd   QWORD PTR [eax+0x63]
  412a46:	(bad)  
  412a47:	out    0x77,al
  412a49:	cdq    
  412a4a:	ins    DWORD PTR es:[edi],dx
  412a4b:	add    bh,bh
  412a4d:	xchg   BYTE PTR [edx-0x24],bh
  412a50:	inc    eax
  412a51:	arpl   di,bp
  412a53:	out    0x83,al
  412a55:	mov    ecx,0x3eff026d
  412a5a:	mov    dh,0xdd
  412a5c:	inc    eax
  412a5d:	arpl   WORD PTR [edi],dx
  412a5f:	out    0x8b,eax
  412a61:	test   eax,0x46ff026d
  412a66:	mov    esi,0xff6340dd
  412a6b:	out    0x93,al
  412a6d:	mov    DWORD PTR [ebp+0x2],ebp
  412a70:	(bad)  
  412a71:	ds (bad) 
  412a73:	fld    QWORD PTR [eax+0x63]
  412a76:	daa    
  412a77:	in     eax,0x9b
  412a79:	cmp    ebp,ebp
  412a7b:	add    edi,edi
  412a7d:	xchg   BYTE PTR [esi+0x4f6340dc],cl
  412a83:	in     eax,0xa3
  412a85:	sbb    ebp,ebp
  412a87:	add    edi,edi
  412a89:	jle    0x412a21
  412a8b:	fadd   QWORD PTR [eax+0x63]
  412a8e:	ja     0x412a75
  412a90:	scas   eax,DWORD PTR es:[edi]
  412a91:	or     ebp,ebp
  412a93:	add    edi,edi
	...
  412aa1:	add    BYTE PTR [eax],al
  412aa3:	add    BYTE PTR [esi-0x4e],al
  412aa6:	fadd   QWORD PTR [eax+0x63]
  412aa9:	add    eax,0x49984fb5
  412aae:	lods   al,BYTE PTR ds:[esi]
  412aaf:	dec    edi
  412ab0:	cwde   
  412ab1:	dec    ecx
  412ab2:	popa   
  412ab3:	mov    DWORD PTR [eax+0x1],0xba623b6a
  412aba:	lock jnp 0x412abd
  412abd:	add    eax,0x1a103e9
  412ac2:	jmp    0xec427f4b
  412ac7:	or     ebx,DWORD PTR [ebx]
  412ac9:	add    ebp,ecx
  412acb:	add    esp,DWORD PTR [ebx+0x43]
  412ace:	in     al,0x3
  412ad0:	loopne 0x412b0e
  412ad2:	loopne 0x412a92
  412ad4:	fs jge 0x412abb
  412ad7:	add    esp,DWORD PTR [ebx+0x5]
  412ada:	sub    eax,DWORD PTR [edi]
  412adc:	arpl   WORD PTR [eax+eax*2+0x710da613],ax
  412ae3:	or     DWORD PTR [ebx+0x5],esp
  412ae6:	jmp    0x6a468b30
  412aeb:	cmp    ebp,DWORD PTR [edx+edi*4-0x10]
  412aef:	jnp    0x412b4d
  412af1:	add    eax,0x12103e9
  412af6:	jmp    0x8406177f
  412afb:	or     ebp,DWORD PTR [ebx+0x6303e90a]
  412b01:	inc    ebx
  412b02:	in     al,dx
  412b03:	add    ebx,DWORD PTR [esi+0x3e885]
	...
  412b15:	add    BYTE PTR [eax],al
  412b17:	arpl   WORD PTR [edx+0x5587bf0],di
  412b1d:	jmp    0xe941cc25
  412b22:	add    BYTE PTR [ebx+0x6],ah
  412b25:	jmp    0x814e612d
  412b2a:	push   cs
  412b2b:	arpl   WORD PTR ds:0x56041e9,ax
  412b31:	add    ah,dh
  412b33:	pusha  
  412b34:	add    eax,DWORD PTR [eax]
  412b36:	jmp    0xf9f92ade
  412b3b:	pusha  
  412b3c:	add    eax,0x55bab00
  412b41:	cmp    eax,0x564e9
  412b46:	or     al,0x67
  412b48:	jge    0x412b5b
  412b4a:	jmp    0xe60330af
  412b4f:	pusha  
  412b50:	cli    
  412b51:	jmp    eax
  412b53:	pusha  
  412b54:	add    eax,0x12d8e17d
  412b59:	add    cl,ch
  412b5b:	pusha  
  412b5c:	inc    ebx
  412b5d:	add    ebp,ecx
  412b5f:	arpl   WORD PTR ds:0xb860e910,ax
  412b65:	pop    es
  412b66:	xchg   ecx,eax
  412b67:	dec    ebp
  412b68:	add    eax,0x2a2e900
  412b6d:	add    ah,bh
  412b6f:	pusha  
  412b70:	in     eax,0xff
  412b72:	call   0xd1f92a9a
  412b77:	pusha  
  412b78:	add    eax,0x2b00
	...
  412b89:	add    BYTE PTR [ebx+0x5],bl
  412b8c:	cmp    eax,0xfe3720e9
  412b91:	xchg   esp,eax
  412b92:	push   0x60e9197d
  412b97:	add    eax,0xf860edc2
  412b9c:	jmp    FWORD PTR [eax+0x5f]
  412b9f:	add    eax,0x1a58e17d
  412ba4:	add    cl,ch
  412ba6:	pusha  
  412ba7:	inc    ebx
  412ba8:	add    ebp,ecx
  412baa:	ror    DWORD PTR [ebp+0x3c],1
  412bad:	jmp    0xe6413012
  412bb2:	add    eax,DWORD PTR [esi-0x74]
  412bb5:	sbb    eax,0x8b1766
  412bba:	sti    
  412bbb:	les    eax,FWORD PTR [edx]
  412bbd:	add    BYTE PTR [ecx],bh
  412bbf:	sbb    DWORD PTR [edx],0xff028a04
  412bc5:	jne    0x412b6e
  412bc7:	mov    edi,DWORD PTR [edi+0x10]
  412bca:	jle    0x412bce
  412bcc:	add    BYTE PTR [ecx+0x419fb],cl
  412bd2:	mov    al,BYTE PTR [edx-0x3b]
  412bd5:	add    DWORD PTR [esi+0x72fffffe],0xf3000002
  412bdf:	or     BYTE PTR [esi],0x4
  412be2:	dec    edx
  412be3:	add    al,BYTE PTR [ebx-0x1e184]
  412be9:	mov    dl,bl
  412beb:	sbb    al,BYTE PTR [eax+eax*1]
	...
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	add    BYTE PTR [edx],bh
  412bfe:	outs   dx,BYTE PTR ds:[esi]
  412bff:	or     DWORD PTR [edx-0x13ffbb5],ecx
  412c05:	mov    cl,BYTE PTR [edx+0x23ec1ff]
  412c0b:	shl    BYTE PTR [ecx],1
  412c0d:	js     0x412c0d
  412c0f:	inc    DWORD PTR [edx+0x4168b]
  412c15:	or     dh,bh
  412c17:	jae    0x412c36
  412c19:	xchg   ecx,eax
  412c1a:	or     DWORD PTR [esi],0x8901fa04
  412c20:	xor    edx,0xcafffffd
  412c26:	mov    esi,0x1fe1c7f
  412c2b:	add    BYTE PTR [eax],cl
  412c2d:	cli    
  412c2e:	add    DWORD PTR [eax],eax
  412c30:	mov    DWORD PTR [ebx+0x12],ecx
  412c33:	add    al,0x0
  412c35:	retf   0x878a
  412c38:	sbb    BYTE PTR [esi+0x5bd00001],bh
  412c3e:	les    eax,FWORD PTR [ecx+0x6306381]
  412c44:	add    BYTE PTR [ebx+0x47],ah
  412c47:	mov    dh,0x1c
  412c49:	fsubr  DWORD PTR [ebx+edx*1-0x76d39cfc]
  412c50:	cmp    BYTE PTR [ebx+0x28],0x2
  412c54:	add    BYTE PTR [ebx],ah
  412c56:	pop    edi
  412c57:	sbb    BYTE PTR [ebx],0x67
  412c5a:	sub    al,0x2
  412c5c:	or     BYTE PTR [ebx+0x2c],ah
  412c5f:	add    cl,BYTE PTR [ecx+0x0]
	...
  412c6d:	add    BYTE PTR [eax],al
  412c6f:	add    dl,ah
  412c71:	cmp    eax,DWORD PTR [esi]
  412c73:	add    BYTE PTR [ebx-0x5d],ah
  412c76:	mov    dl,BYTE PTR [edi]
  412c78:	addr16 sub al,0x2
  412c7b:	mov    ah,BYTE PTR [edx+0x2a]
  412c7e:	inc    edx
  412c7f:	std    
  412c80:	and    esp,DWORD PTR [edi-0x15173cfe]
  412c86:	out    0x3,eax
  412c88:	fdiv   DWORD PTR [edx-0x1a]
  412c8b:	add    ebp,DWORD PTR [esi+0x3532d37c]
  412c91:	stos   BYTE PTR es:[edi],al
  412c92:	retf   0xe9ff
  412c95:	(bad)  
  412c96:	and    dh,0x62
  412c99:	or     eax,0x5ad6452c
  412c9e:	rol    DWORD PTR [edx-0x104ce1e5],cl
  412ca4:	loopne 0x412c9a
  412ca6:	add    bh,BYTE PTR [ebp-0x1c313f4]
  412cac:	(bad)  
  412cad:	xchg   ecx,eax
  412cae:	or     DWORD PTR [ecx+esi*2+0x6f],esi
  412cb2:	xchg   esi,edi
  412cb4:	(bad)  
  412cb5:	lds    ebx,FWORD PTR [edi]
  412cb7:	add    al,0x63
  412cb9:	push   ds
  412cba:	mov    ch,0x18
  412cbc:	fcomp  DWORD PTR [ebp+0x1e630413]
  412cc2:	mov    DWORD PTR [eax+0x22a7b],eax
  412cc8:	and    eax,DWORD PTR ds:0x9687a70
  412cce:	jmp    0xf8c816d6
  412cd3:	pop    es
	...
  412ce0:	add    BYTE PTR [eax],al
  412ce2:	add    BYTE PTR [ebx+0x5],ah
  412ce5:	bound  eax,QWORD PTR [edx+0x3e90954]
  412ceb:	lods   eax,DWORD PTR ds:[esi]
  412cec:	inc    edi
  412ced:	out    0xb7,eax
  412cef:	push   0x7f
  412cf1:	rol    BYTE PTR [ecx],1
  412cf3:	mov    eax,0x748ba933
  412cf8:	and    dl,ch
  412cfa:	push   ebx
  412cfb:	fs push es
  412cfd:	push   eax
  412cfe:	pop    ds
  412cff:	addr16 add eax,0x805bb6e9
  412d05:	adc    esp,DWORD PTR [bx+0x5]
  412d09:	jmp    0xe54f1098
  412d0e:	add    esp,DWORD PTR [ebx-0x3b]
  412d11:	pop    edi
  412d12:	jp     0x412d8c
  412d14:	or     ecx,ebp
  412d16:	add    ebx,edx
  412d18:	test   eax,edi
  412d1a:	pop    es
  412d1b:	arpl   WORD PTR ds:0x9548272,ax
  412d21:	jmp    0xeb4e1629
  412d26:	pop    eax
  412d27:	cs dec eax
  412d29:	pop    ss
  412d2a:	sub    ecx,esp
  412d2c:	and    ah,bh
  412d2e:	mov    esi,DWORD PTR [edx+edi*4+0x5a]
  412d32:	fsub   DWORD PTR [ebx+0x5e]
  412d35:	int3   
  412d36:	pop    es
  412d37:	arpl   WORD PTR ds:0x85d81a9c,ax
  412d3d:	clc    
  412d3e:	pop    es
  412d3f:	arpl   WORD PTR ds:0x94c8260,ax
  412d45:	jmp    0x412d4d
	...
  412d56:	mov    ds:0x5f1f3f7e,eax
  412d5b:	add    eax,0x14e38ae9
  412d60:	add    ch,ch
  412d62:	pusha  
  412d63:	add    eax,0x968688b
  412d68:	add    cl,ch
  412d6a:	xchg   edx,eax
  412d6b:	inc    esi
  412d6c:	add    BYTE PTR [ebp+0x6d],dl
  412d6f:	jg     0x412d80
  412d71:	jmp    0x412d81
  412d73:	xor    al,cl
  412d75:	popa   
  412d76:	push   edi
  412d77:	and    BYTE PTR [ecx],al
  412d79:	cdq    
  412d7a:	mov    edi,0x9cdda904
  412d7f:	xor    edi,esi
  412d81:	cmp    al,0x76
  412d83:	add    BYTE PTR [eax-0x1cc7327],0x70
  412d8a:	ficomp WORD PTR [ebx]
  412d8c:	add    al,0xe9
  412d8e:	pusha  
  412d8f:	lds    ecx,FWORD PTR [eax+0x95b50]
  412d95:	jmp    0xed50b279
  412d9a:	pusha  
  412d9b:	add    eax,0x97f708b
  412da0:	add    cl,ch
  412da2:	mov    al,0xe5
  412da4:	pop    esi
  412da5:	cvtpi2ps xmm0,QWORD PTR [ebp+0x3]
  412da9:	jmp    0xcdcc07db
  412dae:	sbb    al,0x3
  412db0:	push   esi
  412db1:	sbb    bl,BYTE PTR [edi+0x584c82db]
  412db7:	mov    ebx,0x8404
	...
  412dc8:	add    BYTE PTR [eax+0x5],bl
  412dcb:	add    cl,ch
  412dcd:	in     eax,dx
  412dce:	scas   al,BYTE PTR es:[edi]
  412dcf:	and    ebx,ebp
  412dd1:	in     eax,0x3b
  412dd3:	sub    dh,BYTE PTR [edx+ebx*8]
  412dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dd7:	and    ebp,ecx
  412dd9:	(bad)  
  412dda:	adc    eax,DWORD PTR [edx+eax*2+0x248b12b3]
  412de1:	in     al,0x58
  412de3:	mov    WORD PTR [edx+0x67],?
  412de6:	add    eax,0x30fa0000
  412deb:	sbb    BYTE PTR [esp+eax*8+0x41],dh
  412def:	inc    eax
  412df0:	test   DWORD PTR [ebx+0x7a83f474],eax
  412df6:	push   es
  412df7:	test   ecx,ecx
  412df9:	daa    
  412dfa:	add    DWORD PTR [ebx+0x1e3c8c0],eax
  412e00:	or     DWORD PTR [edx],0x8
  412e03:	inc    edi
  412e04:	inc    esi
  412e05:	cmp    DWORD PTR [edx+0x22],ebp
  412e08:	sbb    al,0xbb
  412e0a:	jne    0x412dd8
  412e0c:	pop    edi
  412e0d:	jl     0x412e5b
  412e0f:	pop    ecx
  412e10:	ret    0x67e
  412e13:	mov    edx,DWORD PTR [esi+eiz*2+0x5]
  412e17:	push   ebp
  412e18:	push   esi
  412e19:	adc    ecx,edi
  412e1b:	lds    eax,FWORD PTR [esi-0x1cd6e]
  412e21:	mov    al,BYTE PTR [esi]
  412e23:	add    BYTE PTR [eax],al
  412e25:	add    BYTE PTR [eax],al
  412e27:	test   cl,cl
  412e29:	ins    DWORD PTR es:[edi],dx
  412e2a:	mov    dl,0x2e
  412e2c:	add    DWORD PTR [eax],eax
	...
  412e3a:	add    BYTE PTR [eax],al
  412e3c:	dec    edx
  412e3d:	push   es
  412e3e:	push   edi
  412e3f:	mov    ecx,DWORD PTR [esi+0x52]
  412e42:	adc    al,BYTE PTR [ebx+0x575ffbd]
  412e48:	std    
  412e49:	(bad)  
  412e4a:	(bad)  
  412e4b:	dec    DWORD PTR [edx-0x7d]
  412e4e:	shr    BYTE PTR [ebx],0x85
  412e51:	xchg   esi,eax
  412e52:	cmp    BYTE PTR [eax],cl
  412e54:	push   ss
  412e55:	inc    eax
  412e56:	dec    ebp
  412e57:	inc    eax
  412e58:	mov    bh,0xef
  412e5a:	jae    0x412e52
  412e5c:	mov    DWORD PTR [edx+ebx*1-0xf9f5fc],eax
  412e63:	jne    0x412e84
  412e65:	add    DWORD PTR [eax+edx*1-0x76fffa0a],0xffffff84
  412e6d:	push   cs
  412e6e:	add    al,0x0
  412e70:	arpl   WORD PTR [edx+eax*8],bx
  412e73:	(bad)  
  412e74:	in     eax,0x1f
  412e76:	(bad)  
  412e77:	jmp    esp
  412e79:	xor    eax,DWORD PTR [edx]
  412e7b:	add    BYTE PTR [ebx-0x4b],ah
  412e7e:	or     BYTE PTR [edi],0x5f
  412e81:	sbb    al,0x2
  412e83:	mov    esp,ebp
  412e85:	push   ebx
  412e86:	(bad)  
  412e87:	inc    esp
  412e89:	imul   esp,ebx,0xffffff8a
  412e8c:	in     eax,0x2b
  412e8e:	(bad)  
  412e8f:	push   DWORD PTR [ebp+eiz*4+0x23db5f0d]
  412e96:	aaa    
  412e97:	test   DWORD PTR [ebx+0x20],edx
  412e9a:	add    al,BYTE PTR [eax]
  412e9c:	cmp    eax,0x74611
	...
  412ead:	add    BYTE PTR [eax],al
  412eaf:	arpl   WORD PTR [ecx-0x61348cc8],sp
  412eb5:	dec    edx
  412eb6:	(bad)  
  412eb7:	bound  edi,QWORD PTR [edx+0x1c630417]
  412ebd:	test   DWORD PTR [eax+0x6a],ebp
  412ec0:	adc    DWORD PTR [ebx],ebx
  412ec2:	mov    esp,ebp
  412ec4:	sub    edi,esi
  412ec6:	jmp    DWORD PTR [esp+esi*4-0x7f]
  412eca:	pop    ss
  412ecb:	addr16 push ds
  412ecd:	add    al,BYTE PTR [eax-0x16]
  412ed0:	enter  0x417,0x63
  412ed4:	push   ds
  412ed5:	mov    DWORD PTR [ebp+0x22273],eax
  412edb:	call   0x63454a88
  412ee0:	push   ds
  412ee1:	mov    WORD PTR [edi],cs
  412ee3:	popa   
  412ee4:	in     al,dx
  412ee5:	cmp    ecx,eax
  412ee7:	fisttp DWORD PTR [esi+0x1]
  412eea:	mov    ?,WORD PTR [edi+0x2a]
  412eed:	add    al,BYTE PTR [eax]
  412eef:	mov    ss,WORD PTR [ebp-0x75]
  412ef2:	test   DWORD PTR [ebx+0x2a],esi
  412ef5:	add    al,BYTE PTR [eax]
  412ef7:	fiadd  DWORD PTR ds:0x5671c6f
  412efd:	jmp    0xf4a11ac5
  412f02:	(bad)  
  412f03:	in     al,dx
  412f04:	xor    BYTE PTR [edi-0x7e],bl
  412f07:	push   esp
  412f08:	or     ecx,ebp
  412f0a:	add    ebp,eax
  412f0c:	xchg   eax,esp
  412f0e:	call   esp
  412f10:	xor    BYTE PTR [edx+0x14],ah
	...
  412f1f:	add    BYTE PTR [eax],al
  412f21:	add    BYTE PTR [ecx+0x53],ah
  412f24:	out    dx,al
  412f25:	inc    ebp
  412f26:	fcom   QWORD PTR ds:0x95889e8
  412f2c:	jmp    0x624f5d34
  412f31:	sbb    DWORD PTR [ecx+ecx*1-0x17],0xe087da03
  412f39:	call   FWORD PTR [eax+esi*1+0x11c68b28]
  412f40:	in     eax,dx
  412f41:	add    esp,DWORD PTR [ebx+0x7e]
  412f44:	adc    bx,WORD PTR [edi+0x5]
  412f48:	jmp    0xe54f15d9
  412f4d:	add    esp,DWORD PTR [ebx+0x7b]
  412f50:	loopne 0x412f57
  412f52:	call   0x9be4:0x8d8ca72f
  412f59:	mov    esp,DWORD PTR [ebx+edx*8+0x71]
  412f5d:	dec    ecx
  412f5e:	cmp    al,0x4e
  412f60:	je     0x412f9a
  412f62:	dec    ebp
  412f63:	jl     0x412f0a
  412f65:	test   BYTE PTR [ecx+ecx*1],ah
  412f68:	mov    ecx,0x2c1d2e8c
  412f6d:	aaa    
  412f6e:	xor    eax,0xe1486130
  412f73:	and    eax,0x3ed9d2ea
  412f78:	push   eax
  412f79:	js     0x412f93
  412f7b:	xor    BYTE PTR ds:0x5fd84,bh
  412f81:	sahf   
  412f82:	fild   WORD PTR [ecx-0x19]
  412f85:	jne    0x412f87
	...
  412f93:	add    BYTE PTR [eax],al
  412f95:	dec    esp
  412f96:	das    
  412f97:	inc    dh
  412f99:	sbb    dl,cl
  412f9b:	shl    ecx,0x60
  412f9e:	test   al,cl
  412fa0:	push   ss
  412fa1:	popa   
  412fa2:	jg     0x412fbf
  412fa4:	in     eax,0x60
  412fa6:	add    eax,0xba69908d
  412fab:	sbb    BYTE PTR [edx-0x1e],dh
  412fae:	inc    DWORD PTR [ebx]
  412fb0:	jmp    0xd1c6ae15
  412fb5:	les    ebp,FWORD PTR [edi]
  412fb7:	(bad)  
  412fb8:	sub    esi,ebp
  412fba:	popa   
  412fbb:	sbb    esp,ebp
  412fbd:	pusha  
  412fbe:	add    eax,0x9576f89
  412fc3:	add    cl,ch
  412fc5:	(bad)  [ecx+0x560ed17]
  412fcb:	mov    bl,cl
  412fcd:	bound  edx,QWORD PTR [ebx-0x3]
  412fd0:	stos   DWORD PTR es:[edi],eax
  412fd1:	(bad)  
  412fd3:	add    BYTE PTR [edi+0x6b],bl
  412fd6:	or     DWORD PTR [eax],eax
  412fd8:	jmp    0x67cc3c90
  412fdd:	dec    edi
  412fde:	or     DWORD PTR [eax],eax
  412fe0:	jmp    0xe558b9c4
  412fe5:	pusha  
  412fe6:	add    eax,0xac57040
  412feb:	add    al,0xe9
  412fed:	pusha  
  412fee:	jl     0x412f75
  412ff0:	(bad)  [edi+ebp*1-0x2]
  412ff4:	(bad)  
  412ff5:	lds    edx,FWORD PTR [esi]
  412ff7:	add    al,0xe9
	...
  413005:	add    BYTE PTR [eax],al
  413007:	add    BYTE PTR [eax+0x7b],ah
  41300a:	por    mm2,QWORD PTR [edx+0x5761c130]
  413011:	add    al,0x8e
  413013:	in     eax,dx
  413014:	and    al,0x2f
  413016:	inc    BYTE PTR [eax]
  413018:	fist   WORD PTR [ecx]
  41301a:	mov    eax,DWORD PTR [esi-0x1d0c6]
  413020:	sub    DWORD PTR [edi+0x2fa0416],0x40
  413027:	mov    DWORD PTR [ebp+ecx*1-0x7df5fffc],edx
  41302e:	test   BYTE PTR [eax],dl
  413030:	inc    BYTE PTR [edx]
  413032:	add    BYTE PTR [ebx+0x4117c],cl
  413038:	retf   0xe7c
  41303b:	add    bh,BYTE PTR [eax-0x9]
  41303e:	ror    BYTE PTR [eax+0x1c8e09aa],0xbe
  413045:	add    al,BYTE PTR [eax]
  413047:	jne    0x4130ac
  413049:	jp     0x412fcf
  41304b:	adc    BYTE PTR [esi+0x3c890002],bh
  413051:	or     al,BYTE PTR [eax+eax*1]
  413054:	mov    edx,0x86ae8742
  413059:	cs (bad) 
  41305b:	call   DWORD PTR [ebx]
  41305d:	mov    al,0xe
  41305f:	add    al,0x7a
  413061:	add    cl,BYTE PTR [ebx-0x1d14d7a]
  413067:	(bad)  
  413068:	mov    edx,0x8dff22
	...
  413079:	add    BYTE PTR [eax],al
  41307b:	jbe    0x4130ab
  41307d:	(bad)  
  41307e:	dec    DWORD PTR [edi+0x10]
  413081:	mov    eax,DWORD PTR [esi-0x1d196]
  413087:	shl    DWORD PTR [eax+0x24a0416],cl
  41308d:	inc    eax
  41308e:	mov    DWORD PTR [esi+edx*1-0x7ec5fffc],esp
  413095:	test   BYTE PTR [eax],dl
  413097:	dec    esi
  413098:	add    al,BYTE PTR [eax]
  41309a:	mov    edi,DWORD PTR [edx+ecx*1+0x1c630004]
  4130a1:	push   edx
  4130a2:	pop    ds
  4130a3:	(bad)  
  4130a4:	into   
  4130a5:	push   ss
  4130a6:	add    al,0x63
  4130a8:	sbb    al,0xaf
  4130aa:	sbb    al,ch
  4130ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130ad:	adc    al,BYTE PTR [ebx+eiz*2]
  4130b0:	sbb    al,0x8b
  4130b2:	test   DWORD PTR [ebx+0x28],ebp
  4130b5:	add    al,BYTE PTR [eax]
  4130b7:	mov    ds:0x5f1b64b5,eax
  4130bc:	sbb    al,0x2
  4130be:	mov    ebp,esp
  4130c0:	sub    edi,esi
  4130c2:	jmp    esp
  4130c4:	mov    ds:0x1c67177c,al
  4130c9:	add    dl,al
  4130cb:	sbb    DWORD PTR ds:0x1c671b84,0x2
  4130d2:	jne    0x41313e
  4130d4:	mov    ds:0x1c670f7c,eax
  4130d9:	add    cl,BYTE PTR [ecx+0x3dd]
	...
  4130eb:	add    BYTE PTR [eax],al
  4130ed:	add    BYTE PTR [ebx-0x24],ah
  4130f0:	mov    ch,BYTE PTR [ebp+0x22847]
  4130f6:	jmp    0x871c:0x6304139d
  4130fd:	mov    ch,0x6b
  4130ff:	and    BYTE PTR [edx],al
  413101:	add    BYTE PTR [ebx-0x5ea329fb],dh
  413107:	xor    eax,DWORD PTR [edx]
  413109:	mov    ebx,DWORD PTR [edi]
  41310b:	dec    eax
  41310c:	(bad)  
  41310d:	push   ebp
  41310e:	adc    al,0xa3
  413110:	mov    bh,0x23
  413112:	push   ebx
  413113:	mov    ds:0x1ee33c32,eax
  413118:	add    al,BYTE PTR [eax]
  41311a:	ror    BYTE PTR [edx+0x7f],1
  41311d:	(bad)  
  41311e:	addr16 das 
  413120:	or     edi,DWORD PTR [ebx]
  413122:	fld    QWORD PTR [edx-0x2]
  413125:	(bad)  
  413126:	cmp    al,0x6
  413128:	(bad)  
  41312a:	sub    eax,0xe144014e
  41312f:	and    eax,0x45e1d4ee
  413134:	jecxz  0x41310b
  413136:	and    bh,dh
  413138:	call   0xe5231035
  41313d:	add    esp,DWORD PTR [ebx-0x4f]
  413140:	repz test BYTE PTR [ebp+eax*1+0x27003e9],0x6a
  413149:	and    eax,0xf6f82062
  41314e:	in     al,dx
  41314f:	add    ecx,ebp
  413151:	add    eax,DWORD PTR [eax]
	...
  41315f:	add    BYTE PTR [eax],al
  413161:	jno    0x413169
  413163:	sahf   
  413164:	neg    ah
  413166:	test   eax,0x65103e8
  41316b:	scas   al,BYTE PTR es:[edi]
  41316c:	inc    edx
  41316d:	(bad)  
  41316e:	std    
  41316f:	cdq    
  413170:	add    BYTE PTR [ecx+ecx*1],0x99
  413174:	sub    eax,DWORD PTR [esi+0xd34e52f]
  41317a:	sub    BYTE PTR [esi-0xbe26b78],0x39
  413181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413182:	sub    al,0x5b
  413184:	mov    edi,0xd521ff74
  413189:	ss inc edi
  41318b:	lock add esi,DWORD PTR [ebx*1+0x2c8539e4]
  413193:	or     eax,0x4701bc81
  413198:	inc    edx
  413199:	pop    esp
  41319a:	add    eax,0xe108893a
  41319f:	loopne 0x41316f
  4131a1:	push   cs
  4131a2:	adc    BYTE PTR [edi-0x1322e180],0x3
  4131a9:	arpl   WORD PTR ds:0xfe70516,ax
  4131af:	add    al,ch
  4131b1:	pusha  
  4131b2:	add    eax,0x2be07281
  4131b7:	(bad)  
  4131b8:	jmp    0xddc3f6b0
  4131bd:	or     al,0x14
  4131bf:	add    al,0xda
  4131c1:	sub    ah,BYTE PTR [esi+esi*1]
  4131c4:	push   edx
	...
  4131d1:	add    BYTE PTR [eax],al
  4131d3:	add    BYTE PTR [edi+0x2b],dl
  4131d6:	mov    dh,BYTE PTR [edi]
  4131d8:	dec    eax
  4131d9:	fdiv   st(2),st
  4131db:	ds push edi
  4131dd:	jg     0x4131ac
  4131df:	inc    ecx
  4131e0:	dec    edx
  4131e1:	cs (bad) 
  4131e3:	cs jmp 0xf91:0xea0123c7
  4131eb:	in     eax,0x60
  4131ed:	add    eax,0x504228a
  4131f2:	add    ah,BYTE PTR [eax]
  4131f4:	bound  eax,QWORD PTR [esi+0x5e]
  4131f7:	jno    0x41325b
  4131f9:	sub    al,0x85
  4131fb:	fxch   st(4)
  4131fd:	sub    edi,esi
  4131ff:	pusha  
  413200:	out    dx,al
  413201:	out    0x3,eax
  413203:	jmp    0x429dfd68
  413208:	sbb    eax,0x206a0004
  41320d:	sub    eax,DWORD PTR [eax]
  41320f:	xchg   edi,eax
  413210:	push   ebx
  413211:	add    DWORD PTR [eax],eax
  413213:	jmp    0x3c49ccfb
  413218:	data16 add BYTE PTR [ebp+0x564d9],0x60
  413220:	fst    DWORD PTR [ebx]
  413222:	add    al,0xe9
  413224:	pusha  
  413225:	lds    ecx,FWORD PTR [eax+0x15357]
  41322b:	jmp    0xed50b41f
  413230:	pusha  
  413231:	add    eax,0x16f678b
	...
  413246:	add    BYTE PTR [edx-0x57],cl
  413249:	push   es
  41324a:	add    dl,BYTE PTR [ebx]
  41324c:	clc    
  41324d:	mov    edi,0xbe024288
  413252:	sbb    al,0x46
  413254:	pop    es
  413255:	add    BYTE PTR [ebp+0x63],dh
  413258:	stos   BYTE PTR es:[edi],al
  413259:	test   BYTE PTR [eax],dl
  41325b:	inc    esi
  41325c:	pop    es
  41325d:	add    BYTE PTR [ecx+0x3f9b4],cl
  413263:	or     al,BYTE PTR [edi-0x79]
  413266:	scas   al,BYTE PTR es:[edi]
  413267:	inc    BYTE PTR [edx]
  413269:	add    BYTE PTR [eax],al
  41326b:	xchg   ebx,eax
  41326c:	jg     0x41327c
  41326e:	add    al,0xfa
  413270:	push   es
  413271:	mov    eax,DWORD PTR [esi+0x312]
  413277:	cmp    ah,BYTE PTR [ecx]
  413279:	mov    ebx,edx
  41327b:	cmp    ecx,DWORD PTR [ebx]
  41327d:	pop    es
  41327e:	cmp    DWORD PTR [eax],0x3
  413281:	push   edx
  413282:	mov    edi,DWORD PTR [ecx+ecx*1-0x38]
  413286:	cli    
  413287:	pop    ebp
  413288:	test   BYTE PTR [ecx+0x2aa86],0x0
  41328f:	inc    edx
  413290:	stc    
  413291:	mov    bh,0x1
  413293:	retf   0x6
  413296:	add    DWORD PTR [esi+edx*1+0x4],eax
  41329a:	add    BYTE PTR [edx-0x49db6357],bh
  4132a0:	push   es
  4132a1:	add    BYTE PTR [ecx-0x1794f],al
  4132a7:	mov    dh,BYTE PTR [ebx+0x16]
  4132aa:	add    DWORD PTR [eax],0x0
	...
  4132b9:	add    BYTE PTR [esi],bl
  4132bb:	sbb    eax,0x6a010216
  4132c0:	and    bl,BYTE PTR [eax]
  4132c2:	pop    ebx
  4132c3:	stos   BYTE PTR es:[edi],al
  4132c4:	int3   
  4132c5:	call   0x3f0abf
  4132ca:	sub    eax,0x635b5b57
  4132cf:	pop    esi
  4132d0:	cli    
  4132d1:	jmp    ebx
  4132d3:	xchg   esi,eax
  4132d4:	add    al,BYTE PTR ds:0x3b41c63
  4132da:	jp     0x4132bc
  4132dc:	out    0x17,eax
  4132de:	loop   0x413296
  4132e0:	add    bh,BYTE PTR [ebp+0x63]
  4132e3:	sbb    al,0xb4
  4132e5:	add    ecx,DWORD PTR [edx-0x27e819a8]
  4132eb:	push   edi
  4132ec:	out    0x17,al
  4132ee:	xchg   edx,eax
  4132ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132f0:	inc    eax
  4132f1:	out    0x8f,eax
  4132f3:	(bad)  
  4132f4:	xor    esi,edi
  4132f6:	mov    ah,0x62
  4132f8:	iret   
  4132f9:	pop    edx
  4132fa:	and    DWORD PTR [edx+eax*1],esi
  4132fd:	(bad)  
  4132fe:	fld    QWORD PTR [ebx]
  413300:	or     BYTE PTR [eax],al
  413302:	arpl   WORD PTR ds:0x9d630002,bx
  413308:	sub    eax,0x21c637f
  41330d:	jae    0x4132a9
  41330f:	lahf   
  413310:	scas   al,BYTE PTR es:[edi]
  413311:	and    edi,DWORD PTR [ebx+0x20]
  413314:	mov    ch,0x41
  413316:	cwde   
  413317:	mov    ds:0x1c6303e6,al
  41331c:	mov    dh,0x39
	...
  41332a:	add    BYTE PTR [eax],al
  41332c:	add    BYTE PTR [ebx-0x4301d3db],bh
  413332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413333:	inc    eax
  413334:	out    0x60,eax
  413336:	es xor dh,bh
  413339:	fcomp  DWORD PTR [ecx+0x1b]
  41333c:	int3   
  41333d:	stos   BYTE PTR es:[edi],al
  41333e:	push   edx
  41333f:	xor    BYTE PTR [ecx-0x74f3ffd9],cl
  413345:	in     eax,0x4b
  413347:	push   es
  413348:	add    BYTE PTR [ebx-0x4a],ah
  41334b:	push   esp
  41334c:	and    esp,DWORD PTR [edx+0x1e]
  41334f:	push   esp
  413350:	add    DWORD PTR [ecx+0x74007bfa],esp
  413356:	add    al,0x6f
  413358:	adc    al,0x67
  41335a:	add    eax,0xe0c67ae9
  41335f:	in     al,dx
  413360:	add    esp,DWORD PTR [ebx-0x39]
  413363:	sub    ecx,ebp
  413365:	and    bh,dh
  413367:	call   0xe76a50f0
  41336c:	jno    0x4133d6
  41336e:	add    ecx,ebp
  413370:	add    ebp,esi
  413372:	cwde   
  413373:	fbstp  TBYTE PTR [esi+0x146e7c5b]
  413379:	addr16 add eax,0xdde7ae9
  41337f:	in     eax,dx
  413380:	add    esp,DWORD PTR [ebx-0x3b]
  413383:	pop    edi
  413384:	bound  edi,QWORD PTR [eax+0x1]
  413387:	jmp    0xd8c10d8f
  41338c:	pop    es
  41338d:	arpl   WORD PTR ds:0x8a62,ax
	...
  41339f:	add    BYTE PTR [ecx+eax*1-0x17],dl
  4133a3:	add    ebp,ecx
  4133a5:	adc    eax,0x43ee55eb
  4133aa:	jo     0x4133c0
  4133ac:	bound  esp,QWORD PTR [edi-0xc]
  4133af:	pop    es
  4133b0:	arpl   WORD PTR ds:0x7fe80a94,ax
  4133b6:	fadd   DWORD PTR [edi]
  4133b8:	arpl   WORD PTR ds:0x16c8a70,ax
  4133be:	jmp    0x3ebf56c6
  4133c3:	adc    BYTE PTR [edi+0x5],bl
  4133c6:	jmp    0xe5571a45
  4133cb:	add    esp,DWORD PTR [ebx+0x7c]
  4133ce:	outs   dx,BYTE PTR ds:[esi]
  4133cf:	or     esp,DWORD PTR [edi+0x5]
  4133d2:	jmp    0x672da82a
  4133d7:	out    0x60,eax
  4133d9:	add    eax,0x7c12b7e9
  4133de:	jmp    FWORD PTR [ecx+0x6a072021]
  4133e4:	and    BYTE PTR [ebx],al
  4133e6:	push   eax
  4133e7:	xchg   ecx,eax
  4133e8:	retf   0xfe2d
  4133eb:	sahf   
  4133ec:	out    0x79,eax
  4133ee:	paddsw mm4,QWORD PTR [eax+0x5]
  4133f2:	mov    al,dh
  4133f4:	enter  0x5,0xe9
  4133f8:	pusha  
  4133f9:	push   es
  4133fa:	xchg   cl,bl
  4133fc:	pop    esp
  4133fd:	add    eax,0xe3d26000
  413402:	add    ebp,ecx
	...
  413410:	add    BYTE PTR [eax],al
  413412:	add    BYTE PTR [eax-0x7a],ah
  413415:	cli    
  413416:	imul   esp,DWORD PTR [eax+0x5],0x8458da00
  41341d:	imul   ecx,DWORD PTR ds:0xb58b036f,0xfffffffc
  413424:	rsqrtps xmm6,XMMWORD PTR [edx-0x5e]
  413428:	and    BYTE PTR [ebx+0x40],ah
  41342b:	push   ebx
  41342c:	daa    
  41342d:	pop    esi
  41342e:	xchg   edi,eax
  41342f:	sub    eax,0x60e1c1cb
  413434:	xchg   dl,bh
  413436:	jmp    0x9b4139a0
  41343b:	pop    esp
  41343c:	fiadd  WORD PTR [ebx-0x33]
  41343f:	push   0x5e9fa86
  413444:	sub    dh,bh
  413446:	jnp    0x413431
  413448:	fadd   QWORD PTR [ebx-0x3b]
  41344b:	pop    eax
  41344c:	jl     0x4134a1
  41344e:	int    0x68
  413450:	ror    DWORD PTR [edx-0x712a7e1],cl
  413456:	out    0x7c,al
  413458:	(bad)  
  413459:	pop    ebp
  41345a:	cmp    al,0x98
  41345c:	inc    ebp
  41345d:	pop    es
  41345e:	jmp    0xe55c9bca
  413463:	pusha  
  413464:	add    eax,0xaa830075
  413469:	test   BYTE PTR [eax],dl
  41346b:	jle    0x413470
  41346d:	add    BYTE PTR [ecx+0x3f90c],cl
  413473:	mov    al,BYTE PTR [ebx-0x79]
  413476:	scas   al,BYTE PTR es:[edi]
	...
  413483:	add    BYTE PTR [eax],al
  413485:	add    BYTE PTR [esi-0x3],ah
  413488:	(bad)  
  413489:	push   ebx
  41348b:	jle    0x41349b
  41348d:	add    al,0x4a
  41348f:	add    ecx,DWORD PTR [ebx-0xad7a]
  413495:	(bad)  
  413496:	jmp    0xffff:0x26bdff21
  41349d:	(bad)  
  41349e:	aas    
  41349f:	cli    
  4134a0:	mov    al,BYTE PTR [esi-0xe6]
  4134a6:	mov    bl,0x7f
  4134a8:	push   ss
  4134a9:	add    al,0x3a
  4134ab:	add    eax,DWORD PTR [eax-0x77]
  4134ae:	in     al,0x15
  4134b0:	add    al,0x0
  4134b2:	or     ch,BYTE PTR [edx+0x2fe1084]
  4134b8:	add    BYTE PTR [ebx+0x3f97c],cl
  4134be:	or     dl,bl
  4134c0:	push   ds
  4134c1:	mov    ecx,esi
  4134c3:	push   ds
  4134c4:	push   ss
  4134c5:	push   edx
  4134c6:	jno    0x4134af
  4134c8:	out    0xd4,al
  4134ca:	inc    edx
  4134cb:	(bad)  
  4134cc:	std    
  4134cd:	pop    edi
  4134ce:	adc    al,0x56
  4134d0:	pop    ecx
  4134d1:	ret    0x2c2
  4134d4:	mov    eax,DWORD PTR [esi+ebx*4-0x2]
  4134d8:	mov    WORD PTR [eax-0x7546],ss
  4134de:	icebp  
  4134df:	xchg   ecx,eax
  4134e0:	add    al,BYTE PTR [edx+ecx*8]
  4134e3:	add    dh,BYTE PTR [esi+0x19]
  4134e6:	xor    DWORD PTR [ecx+0x40a],ebp
	...
  4134f8:	add    BYTE PTR [edx+0x63c13b02],bh
  4134fe:	(bad)  
  4134ff:	or     BYTE PTR [ebx],ch
  413501:	mov    ds:0x3800065a,al
  413506:	pop    ebp
  413507:	pop    es
  413508:	add    bl,bh
  41350a:	sbb    al,0x2
  41350c:	ret    0x1c67
  41350f:	icebp  
  413510:	mov    edi,0x830220a1
  413515:	jg     0x413543
  413517:	rcl    DWORD PTR [eax+ebx*8-0x8],1
  41351b:	out    0x1f,eax
  41351d:	mov    ch,0x4b
  41351f:	dec    ecx
  413520:	mov    dl,BYTE PTR [edx-0x11]
  413523:	jl     0x413580
  413525:	xchg   DWORD PTR [ebx+edi*2+0x5b],ecx
  413529:	jg     0x41354f
  41352b:	jmp    0x4134da
  41352d:	imul   ebx,DWORD PTR [eax],0x2
  413530:	add    BYTE PTR [ebx+ebx*4+0x61],ah
  413534:	jmp    FWORD PTR [esp+ebx*1]
  413537:	sbb    DWORD PTR [edx],ecx
  413539:	(bad)  
  41353a:	jg     0x413522
  41353c:	call   FWORD PTR [esp+ebx*1]
  41353f:	add    cl,BYTE PTR [ebp-0x74fbff81]
  413545:	in     eax,0x17
  413547:	push   es
  413548:	add    BYTE PTR [ebx-0x67],ah
  41354b:	jp     0x41354c
  41354d:	test   BYTE PTR ds:0x6e2b3b02,bl
  413553:	adc    eax,0x62fdd8b
  413558:	add    BYTE PTR [ebx+0x23],ah
  41355b:	inc    ebx
  41355c:	jne    0x41355e
	...
  41356a:	add    BYTE PTR [eax],al
  41356c:	addr16 inc ebx
  41356e:	inc    ebx
  41356f:	jmp    0x9463:0x4434368
  413576:	add    eax,DWORD PTR [eax]
  413578:	mov    eax,0xe8bff119
  41357d:	popf   
  41357e:	cli    
  41357f:	add    esp,DWORD PTR [ebx+0x1c]
  413582:	std    
  413583:	mov    ch,0x52
  413585:	add    eax,0x41b75f6
  41358a:	jb     0x413564
  41358c:	test   BYTE PTR [eax],0x62
  41358f:	add    cl,ch
  413591:	jns    0x4135a1
  413593:	jnp    0x4135ed
  413595:	jle    0x413608
  413597:	xchg   BYTE PTR [ecx+eax*1-0x17],bl
  41359b:	add    ebp,DWORD PTR [edi+ebp*2-0x28]
  41359f:	cld    
  4135a0:	scas   al,BYTE PTR es:[edi]
  4135a1:	(bad)  
  4135a2:	out    0x78,eax
  4135a4:	sbb    BYTE PTR [edi+0xce78ec],cl
  4135aa:	in     eax,0x3
  4135ac:	arpl   WORD PTR [esi+0x71b82fc],cx
  4135b2:	jmp    0x774798ba
  4135b7:	or     BYTE PTR [edi+0x5],bl
  4135ba:	jmp    0xed4f22c1
  4135bf:	add    esp,DWORD PTR [ebx-0x70]
  4135c2:	data16 or BYTE PTR [edi+0x5],ah
  4135c6:	jmp    0x6f325243
  4135cb:	add    BYTE PTR [edi+0x5],ah
  4135ce:	jmp    0x413655
	...
  4135df:	sbb    eax,DWORD PTR [esi]
  4135e1:	rol    DWORD PTR [edx],0x63
  4135e4:	fwait
  4135e5:	in     eax,dx
  4135e6:	mov    ebx,0x7ec8bdb
  4135eb:	arpl   WORD PTR ds:0x95c5df0,ax
  4135f1:	jmp    0x92c891f9
  4135f6:	sub    al,0xe5
  4135f8:	and    al,0x71
  4135fa:	enter  0xd580,0x52
  4135fe:	add    al,0x3c
  413600:	push   es
  413601:	jmp    0xeedcd8ee
  413606:	jp     0x413638
  413608:	jmp    0x88ac4ec5
  41360d:	push   eax
  41360f:	popa   
  413610:	adc    al,0x86
  413612:	and    esp,DWORD PTR [eax+0x5]
  413615:	add    dh,dh
  413617:	cs leave 
  413619:	(bad)  
  41361a:	in     eax,dx
  41361b:	push   ss
  41361c:	rol    DWORD PTR [eax],1
  41361e:	bound  ebx,QWORD PTR [edx+ecx*4-0x73839dfd]
  413625:	cmp    al,dl
  413627:	xchg   DWORD PTR [eax+0x560e8b2],ecx
  41362d:	mov    esp,DWORD PTR [edi-0x80]
  413630:	or     BYTE PTR [eax],al
  413632:	jmp    0xae503e24
  413637:	pushf  
  413638:	call   0x249a1f58
  41363d:	(bad)  
  41363e:	rcr    BYTE PTR [ebp+0x623996],cl
	...
  413650:	add    BYTE PTR [eax],al
  413652:	jg     0x413633
  413654:	cli    
  413655:	std    
  413656:	dec    esp
  413657:	xchg   ecx,eax
  413658:	xchg   cl,ch
  41365a:	fadd   DWORD PTR [eax+eax*1]
  41365d:	mov    dl,0xde
  41365f:	pop    es
  413660:	add    al,0xe9
  413662:	pusha  
  413663:	fwait
  413664:	pop    ss
  413665:	jb     0x413645
  413667:	(bad)  
  413669:	jmp    0xe03916ce
  41366e:	pop    esp
  41366f:	lock test DWORD PTR [edx+0xc],0x9f68f7ef
  413677:	and    al,0x66
  413679:	call   0xfa4266de
  41367e:	inc    edi
  41367f:	pop    DWORD PTR ds:0x8c5bfc62
  413685:	in     eax,dx
  413686:	out    0xde,eax
  413688:	les    ebx,FWORD PTR [edx-0x32ac2268]
  41368e:	mov    ah,0x99
  413690:	add    esp,DWORD PTR [eax-0x4c]
  413693:	out    0x2b,eax
  413695:	add    BYTE PTR [ecx-0x277bf214],ah
  41369b:	push   es
  41369c:	add    BYTE PTR [eax],al
  41369e:	aas    
  41369f:	(bad)  
  4136a0:	(bad)  
  4136a1:	(bad)  
  4136a2:	mov    edx,0x51cd8b07
  4136a7:	loope  0x413630
  4136a9:	dec    esp
  4136aa:	data16 cmc 
  4136ac:	cmp    cl,BYTE PTR [esi+eiz*2+0x3d]
  4136b0:	or     eax,0xa7087
	...
  4136c5:	adc    DWORD PTR [ebp+0x22],ebx
  4136c8:	adc    al,dh
  4136ca:	hlt    
  4136cb:	add    BYTE PTR [edx],bh
  4136cd:	push   esi
  4136ce:	push   ds
  4136cf:	dec    BYTE PTR [edx-0x44eddab2]
  4136d5:	js     0x4136de
  4136d7:	add    BYTE PTR [eax],al
  4136d9:	jbe    0x4136f8
  4136db:	cmp    DWORD PTR [esi-0x1dcda],ecx
  4136e1:	sub    eax,0x3a00c886
  4136e6:	pop    es
  4136e7:	mov    edx,DWORD PTR [esi+eiz*1+0x17]
  4136eb:	cmp    edx,ebx
  4136ed:	cmp    DWORD PTR [edx],ebp
  4136ef:	mov    ecx,DWORD PTR [ebp+0x38]
  4136f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136f3:	out    0x2b,al
  4136f5:	push   cs
  4136f6:	inc    ebx
  4136f7:	es mov al,dh
  4136fa:	sbb    eax,0x560b39fe
  4136ff:	add    al,0x43
  413701:	mov    ebx,0x4872d833
  413706:	mov    ds:0xa416244a,al
  41370b:	push   0x24
  41370d:	bound  esi,QWORD PTR [edx]
  41370f:	fmul   DWORD PTR [edi]
  413711:	xchg   al,ch
  413713:	(bad)  
  413714:	(bad)  
  413715:	cli    
  413716:	xor    ebx,DWORD PTR [edx+0x24]
  413719:	ficom  DWORD PTR [ebp+eax*2+0x53]
  41371d:	arpl   WORD PTR [ebp+0x7d],bx
  413720:	int    0xbb
  413722:	mov    esi,0x97c4fe2d
  413727:	mov    bh,0x23
	...
  413735:	add    BYTE PTR [eax],al
  413737:	add    BYTE PTR [ebx-0x69],dl
  41373a:	iret   
  41373b:	and    ebx,DWORD PTR [ebx+0x7d]
  41373e:	aam    0x8a
  413740:	popf   
  413741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413742:	sbb    esp,edi
  413744:	les    esp,FWORD PTR [esi]
  413746:	sub    esi,edi
  413748:	dec    eax
  413749:	xor    al,0x7d
  41374b:	dec    ebx
  41374c:	aas    
  41374d:	and    BYTE PTR ds:0x1803cbed,al
  413753:	ret    
  413754:	adc    eax,0xf8a1763
  413759:	or     ah,bl
  41375b:	sar    BYTE PTR [ecx+0x2e],0x7d
  41375f:	shl    DWORD PTR [edx-0x5efcf6bc],0x2f
  413766:	mov    esi,0x4a277323
  41376b:	jne    0x4137ca
  41376d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41376e:	mov    dh,0x23
  413770:	imul   eax,DWORD PTR [edi+0x4fd53abc],0xfffffffe
  413777:	(bad)  
  413778:	cmp    al,0x19
  41377a:	rcl    BYTE PTR [edx-0x6e],0xa7
  41377e:	cmp    bh,ah
  413780:	rcl    BYTE PTR [esi+0x5fd8fe29],0xde
  413787:	psubsb mm6,QWORD PTR [ebx+0x143f437d]
  41378e:	aam    0x4f
  413790:	fadd   DWORD PTR [ecx]
  413792:	sbb    ecx,DWORD PTR [edi+0x9]
  413795:	retf   
  413796:	sub    DWORD PTR [edx-0x75c708d5],ecx
	...
  4137a8:	add    BYTE PTR [eax],al
  4137aa:	add    BYTE PTR [edi-0x474823f0],al
  4137b0:	test   DWORD PTR [ecx+ebp*1-0x14],ebx
  4137b4:	add    al,0x10
  4137b6:	jle    0x413762
  4137b8:	inc    ebx
  4137b9:	(bad)  
  4137bb:	pusha  
  4137bc:	dec    edi
  4137bd:	jmp    0xc512c100
  4137c2:	adc    edx,DWORD PTR [ecx+0x11]
  4137c5:	jb     0x413796
  4137c7:	cmp    cl,0x6f
  4137ca:	iret   
  4137cb:	cmp    ch,0x5f
  4137ce:	mov    DWORD PTR [eax-0x5b7da40b],0x5803e7a9
  4137d8:	mov    esp,esp
  4137da:	call   DWORD PTR [ecx+eiz*1-0x7527f3a2]
  4137e1:	fdiv   st(7),st
  4137e3:	test   BYTE PTR [ecx],ah
  4137e5:	add    DWORD PTR [esi+esi*8],ebp
  4137e8:	or     BYTE PTR [edx],dl
  4137ea:	sub    al,0x89
  4137ec:	adc    BYTE PTR [edx],al
  4137ee:	sub    al,0xe3
  4137f0:	dec    ecx
  4137f1:	call   0x92469b91
  4137f6:	push   es
  4137f7:	nop
  4137f8:	and    BYTE PTR [ecx-0x6],dh
  4137fb:	jmp    0xe6be87e1
  413800:	in     eax,0xe4
  413802:	add    esp,DWORD PTR [ebx+0x4]
  413805:	scas   al,BYTE PTR es:[edi]
  413806:	test   eax,ecx
  413808:	jmp    0xf3f03ae9
  41380d:	imul   ebp,DWORD PTR [ecx],0x0
	...
  41381c:	add    BYTE PTR [eax],al
  41381e:	pop    ebp
  41381f:	mov    ch,BYTE PTR [esi]
  413821:	sub    ah,BYTE PTR ds:0xebfc5121
  413827:	rol    DWORD PTR [esp+ecx*1],1
  41382a:	jmp    0x4c9:0xd8140cc1
  413831:	loopne 0x41380c
  413833:	mov    ecx,0xd1e8140c
  413838:	add    al,0xc
  41383a:	xchg   esp,eax
  41383b:	mov    edi,0xd06993ff
  413840:	add    esp,DWORD PTR [eax-0x19]
  413843:	mov    ebx,0x43772d82
  413848:	psubsw mm3,mm7
  41384b:	sub    al,0x37
  41384d:	push   0xfffffffb
  41384f:	in     al,0x43
  413851:	jmp    0x7d31c408
  413856:	mov    ecx,0xdf9fbfd3
  41385b:	inc    esp
  41385c:	aaa    
  41385d:	sub    ebx,DWORD PTR [edi+0x5]
  413860:	mov    esp,DWORD PTR [ebp-0x567b1f7c]
  413866:	int    0xe
  413868:	xor    DWORD PTR [ecx-0x527d3db5],0x78
  41386f:	inc    esi
  413870:	pop    ss
  413871:	jmp    0x2d65047d
  413876:	cld    
  413877:	dec    esp
  413878:	jae    0x413849
  41387a:	div    DWORD PTR [ebx+0x35ec2523]
  413880:	jae    0x413849
	...
  41388e:	add    BYTE PTR [eax],al
  413890:	add    cl,ch
  413892:	mov    DWORD PTR [ebx],edx
  413894:	in     eax,dx
  413895:	pusha  
  413896:	add    eax,0xffe27048
  41389b:	add    ebp,ecx
  41389d:	pusha  
  41389e:	mov    cs,WORD PTR [ebp-0x1dfbb07]
  4138a4:	inc    ecx
  4138a5:	pop    edx
  4138a6:	sbb    ebp,ebp
  4138a8:	push   edx
  4138a9:	das    
  4138aa:	dec    ebp
  4138ab:	push   esi
  4138ac:	out    0xb2,al
  4138ae:	pop    ebp
  4138af:	(bad)  
  4138b0:	fsub   DWORD PTR [ecx]
  4138b2:	and    bh,cl
  4138b4:	sub    DWORD PTR [edi],edx
  4138b6:	inc    edi
  4138b7:	push   cs
  4138b8:	xchg   edi,eax
  4138b9:	mov    DWORD PTR ds:0x3660a810,eax
  4138bf:	mov    edi,0xb60fa21a
  4138c4:	add    bl,ah
  4138c6:	or     DWORD PTR [eax],edx
  4138c8:	inc    ecx
  4138c9:	or     dh,BYTE PTR [ebx+0x1d3d33be]
  4138cf:	mov    ah,0xb9
  4138d1:	stc    
  4138d2:	repz inc eax
  4138d4:	add    BYTE PTR [ebx-0x413e7e3c],bl
  4138da:	sbb    ch,al
  4138dc:	xor    DWORD PTR [ebx+0x4],0x59ba0001
  4138e3:	mov    DWORD PTR [ebp-0x447ce276],0x530003b3
  4138ed:	inc    ebx
  4138ee:	test   BYTE PTR [esi+ecx*2+0x18c082be],0x0
	...
  413902:	add    BYTE PTR [eax],al
  413904:	jmp    0x8:0x8abf0005
  41390b:	add    BYTE PTR [edi],al
  41390d:	push   ecx
  41390e:	call   DWORD PTR [ebx+eax*1-0x6]
  413912:	xor    al,al
  413914:	pop    DWORD PTR [ebx]
  413916:	add    BYTE PTR [eax],al
  413918:	mov    bl,BYTE PTR [edx+0x63ec727]
  41391e:	add    BYTE PTR [eax],al
  413920:	jp     0x413925
  413922:	add    BYTE PTR [ebx+0x3d060a],al
  413928:	add    eax,DWORD PTR ds:[eax]
  41392b:	jb     0x413913
  41392d:	mov    al,al
  41392f:	add    BYTE PTR [esi],bh
  413931:	add    eax,DWORD PTR [eax]
  413933:	or     DWORD PTR [ebx],0x6
  413936:	sub    edi,ebx
  413938:	das    
  413939:	ror    DWORD PTR [ecx-0x1e0f172],1
  41393f:	inc    ecx
  413941:	jae    0x84e1bf0f
  413947:	and    al,0xfe
  413949:	add    al,BYTE PTR [eax]
  41394b:	mov    DWORD PTR [ebx-0x5a],esp
  41394e:	sti    
  41394f:	add    esp,DWORD PTR [ebx+0x2c]
  413952:	jnp    0x4138f1
  413954:	xor    BYTE PTR [bp+si],al
  413957:	add    dl,ch
  413959:	sahf   
  41395a:	test   DWORD PTR [ebx],0x397b2c63
  413960:	fdivr  DWORD PTR [esi+0x2c63040f]
  413966:	jns    0x4138fd
	...
  413974:	add    BYTE PTR [eax],al
  413976:	add    BYTE PTR [ebx+0x28],dh
  413979:	add    al,BYTE PTR [eax]
  41397b:	fidiv  DWORD PTR [esi+0x2c6303db]
  413981:	js     0x41398b
  413983:	jmp    0xde68:0xe81bde70
  41398a:	push   ebx
  41398b:	(bad)  [edx]
  41398d:	add    ebx,DWORD PTR [esi+0x2284f]
  413993:	bound  eax,QWORD PTR [esi+0x2c630412]
  413999:	mov    edx,0x14100f88
  41399e:	mov    DWORD PTR [edi],eax
  4139a0:	or     BYTE PTR [ecx+ecx*4],cl
  4139a3:	(bad)  [eax]
  4139a5:	(bad)  
  4139a6:	push   DWORD PTR [ebp+edx*4-0x3a]
  4139aa:	and    ecx,DWORD PTR [ebx]
  4139ac:	adc    eax,DWORD PTR [ecx+0xe]
  4139af:	fstp   QWORD PTR [ebx-0x3]
  4139b2:	call   FWORD PTR [ecx+ebx*4-0x77]
  4139b6:	call   DWORD PTR [esp+ebp*1+0x2]
  4139ba:	mov    esp,DWORD PTR [edi+0x2384c650]
  4139c0:	clc    
  4139c1:	jmp    0xa91e950
  4139c6:	inc    ecx
  4139c7:	jmp    0xaf64:0xe717dfef
  4139ce:	sub    al,0xd8
  4139d0:	neg    edi
  4139d2:	pop    edi
  4139d3:	call   0x5f54b0dc
  4139d8:	add    eax,0xdae9
	...
  4139e9:	add    BYTE PTR [eax-0x262e4717],bl
  4139ef:	jbe    0x4139e5
  4139f1:	(bad)  
  4139f2:	cld    
  4139f3:	sbb    eax,0xb540d011
  4139f8:	xchg   edi,eax
  4139f9:	jp     0x413993
  4139fb:	jmp    0x1ed50b94
  413a00:	sbb    BYTE PTR [edx+0x436bf4a0],al
  413a06:	mov    DWORD PTR gs:[ebx-0x2ee23302],edx
  413a0d:	mov    DWORD PTR [eax-0x17ee6bff],0xe9bfccb0
  413a17:	mov    eax,0xb0dbc3c4
  413a1c:	int3   
  413a1d:	xlat   BYTE PTR ds:[ebx]
  413a1e:	fstp   TBYTE PTR [eax-0x276243c]
  413a24:	jno    0x4139e6
  413a26:	inc    eax
  413a27:	mov    ecx,0x9707671
  413a2c:	jmp    0x38837234
  413a31:	rcl    DWORD PTR [ebx],1
  413a33:	nop
  413a34:	sbb    al,0xe0
  413a36:	xor    BYTE PTR [ebx-0x7e7bc98f],dh
  413a3c:	mov    cl,0x25
  413a3e:	mov    DWORD PTR gs:[eax+eiz*8],edi
  413a42:	mov    BYTE PTR [eax-0x769bfd5d],cl
  413a48:	inc    esi
  413a49:	dec    DWORD PTR [ebp+ebx*1+0x61]
  413a4d:	jle    0x413a4f
	...
  413a5b:	add    BYTE PTR [eax],al
  413a5d:	add    BYTE PTR [ecx],0xe9
  413a60:	add    esp,DWORD PTR [edx+eax*8]
  413a63:	int3   
  413a64:	packsswb mm0,QWORD PTR ds:0xc16a03e9
  413a6b:	dec    esp
  413a6d:	or     BYTE PTR [edx+0x5466a61],dl
  413a73:	movq   mm6,QWORD PTR [ecx]
  413a76:	or     BYTE PTR [eax],al
  413a78:	jmp    0x11650376
  413a7d:	push   cs
  413a7e:	mov    DWORD PTR [edi-0x16],eax
  413a81:	pusha  
  413a82:	add    eax,0xd14ad8b
  413a87:	push   edi
  413a88:	adc    ah,BYTE PTR [esi+0x2d624fb7]
  413a8e:	and    al,0xe1
  413a90:	xor    eax,0xb58a1b86
  413a95:	mov    ah,0xd4
  413a97:	push   esi
  413a98:	mov    eax,0x318a4a4b
  413a9d:	addr16 pop eax
  413a9f:	test   BYTE PTR [esi],0x86
  413aa2:	ffreep st(2)
  413aa4:	imul   BYTE PTR ds:0x60e902f9
  413aaa:	nop
  413aab:	inc    ebx
  413aac:	int    0xb8
  413aae:	fcos   
  413ab0:	jecxz  0x413b12
  413ab2:	add    eax,0x1be3f07c
  413ab7:	add    esi,ebp
  413ab9:	or     al,0xd
  413abb:	add    ebp,ecx
  413abd:	pusha  
  413abe:	(bad)  
  413ac0:	dec    ebx
	...
  413acd:	add    BYTE PTR [eax],al
  413acf:	add    BYTE PTR [edi+0x5],ah
  413ad2:	jl     0x413ac4
  413ad4:	jecxz  0x413af1
  413ad6:	add    ch,dh
  413ad8:	in     al,dx
  413ad9:	sbb    al,0x1
  413adb:	jmp    0x59ccb40
  413ae0:	das    
  413ae1:	pop    DWORD PTR [ebx-0x33]
  413ae4:	and    al,0x8f
  413ae6:	xchg   ebp,eax
  413ae7:	cmc    
  413ae8:	dec    esp
  413ae9:	sbb    al,0xfe
  413aeb:	ret    0x8da3
  413aee:	inc    ebx
  413aef:	lds    eax,FWORD PTR [eax-0x3c]
  413af2:	dec    edi
  413af3:	add    BYTE PTR [edi+0x7850ff5d],ch
  413af9:	aaa    
  413afa:	mov    eax,DWORD PTR [esi+edx*1+0x54]
  413afe:	dec    esi
  413aff:	mov    edi,esp
  413b01:	(bad)  
  413b02:	(bad)  
  413b04:	jge    0x413ae7
  413b06:	mov    DWORD PTR [esi+eiz*2+0x39],ecx
  413b0a:	aaa    
  413b0b:	dec    esp
  413b0c:	push   esi
  413b0d:	inc    ecx
  413b0e:	mov    eax,DWORD PTR [ebx+0xb]
  413b11:	lahf   
  413b12:	inc    edx
  413b13:	and    al,0xfe
  413b15:	dec    edx
  413b16:	jp     0x413b51
  413b18:	jno    0x413ad1
  413b1a:	push   eax
  413b1b:	mov    edi,DWORD PTR [eax+eax*1]
  413b1e:	inc    ebx
  413b1f:	test   DWORD PTR [ebp-0x59b3761f],0xa6448747
  413b29:	cmp    ecx,DWORD PTR [ecx+0x4e5b9644]
  413b2f:	push   ecx
  413b30:	inc    ecx
  413b31:	shl    dh,cl
  413b33:	das    
	...
  413b40:	add    BYTE PTR [eax],al
  413b42:	add    BYTE PTR [ebp-0x1740219],dh
  413b48:	cmp    esp,DWORD PTR [edx]
  413b4a:	sub    eax,DWORD PTR [edx-0x2c4736fb]
  413b50:	xchg   ecx,eax
  413b51:	loope  0x413b8b
  413b53:	mov    ch,0xe9
  413b55:	iret   
  413b56:	cli    
  413b57:	adc    ebx,eax
  413b59:	mov    edi,0xc2028de8
  413b5e:	jmp    0x413bba
  413b60:	mov    WORD PTR [edx+0x24],cs
  413b63:	dec    esi
  413b64:	push   edx
  413b65:	mov    esi,ecx
  413b67:	xchg   edx,eax
  413b68:	or     edi,esi
  413b6a:	jmp    FWORD PTR [ebp-0x79dbad75]
  413b70:	mov    dl,dh
  413b72:	mov    eax,DWORD PTR [esi-0x75adc1d3]
  413b78:	mov    cl,ah
  413b7a:	call   0xfe5ab5e2
  413b7f:	cmp    al,0x48
  413b81:	cmp    cl,BYTE PTR [edx+0x23bf9820]
  413b87:	mov    esp,DWORD PTR [ebp+0x2f60e186]
  413b8d:	inc    esp
  413b8e:	rcr    BYTE PTR [ebx],0x2f
  413b91:	add    eax,0xdd683f44
  413b96:	out    0x8e,eax
  413b98:	adc    al,0x49
  413b9a:	inc    ebx
  413b9b:	aas    
  413b9c:	sbb    BYTE PTR [ebx],al
  413b9e:	add    BYTE PTR [ebx+0x2c],ah
  413ba1:	xchg   esi,edi
  413ba3:	ins    DWORD PTR es:[edi],dx
  413ba4:	add    al,0xdd
  413ba6:	imul   eax,DWORD PTR [eax],0x0
	...
  413bb5:	add    BYTE PTR [edi+0x60],al
  413bb8:	sahf   
  413bb9:	das    
  413bba:	fsub   DWORD PTR [eax-0x1a]
  413bbd:	daa    
  413bbe:	ss jge 0x413b4e
  413bc1:	int    0xcb
  413bc3:	mov    ds:0x97ccfe19,al
  413bc8:	mov    bh,0x23
  413bca:	pop    ds
  413bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bcc:	cmp    ecx,DWORD PTR [edx+0x51c24027]
  413bd2:	adc    edx,DWORD PTR [edi+0x12f8e751]
  413bd8:	and    esi,edi
  413bda:	push   0x475b8eef
  413bdf:	je     0x413b80
  413be1:	pop    es
  413be2:	pushf  
  413be3:	call   0x2ca34fcf
  413be8:	add    al,BYTE PTR [eax]
  413bea:	fidiv  WORD PTR [ebx]
  413bec:	xchg   edi,eax
  413bed:	dec    esp
  413bee:	cmp    bl,al
  413bf0:	out    0x43,eax
  413bf2:	imul   dl
  413bf4:	mov    cs,WORD PTR [ebp+0x22057]
  413bfa:	stc    
  413bfb:	sub    al,0xb5
  413bfd:	push   eax
  413bfe:	call   0x50df667c
  413c03:	add    eax,0xb0d922a6
  413c08:	(bad)  
  413c09:	(bad)  
  413c0a:	fnstcw WORD PTR [ecx+eiz*2]
  413c0d:	mov    DWORD PTR [eax-0x164bc53b],0x36b0904a
  413c17:	sbb    bh,BYTE PTR [ebp-0x72]
	...
  413c26:	add    BYTE PTR [eax],al
  413c28:	add    BYTE PTR [eax-0x4c473f1f],bl
  413c2e:	mov    ds,WORD PTR [esi-0x18024770]
  413c34:	sub    ebp,DWORD PTR [eax+0x49225d13]
  413c3a:	cmp    eax,0xbd40bf61
  413c3f:	into   
  413c40:	or     eax,0xf80cc11c
  413c45:	in     al,dx
  413c46:	sbb    eax,ebp
  413c48:	add    edi,eax
  413c4a:	or     eax,0xf1809f6a
  413c4f:	call   0xe98c1a66
  413c54:	add    esp,DWORD PTR [ebx-0x7a]
  413c57:	sbb    eax,DWORD PTR ds:0x4418b54
  413c5d:	arpl   WORD PTR ds:0xe580b762,ax
  413c63:	jno    0x413bee
  413c65:	push   eax
  413c66:	add    ecx,ebp
  413c68:	add    esp,eax
  413c6a:	inc    esi
  413c6b:	div    BYTE PTR [ecx+eiz*8-0x1e4915bb]
  413c72:	inc    esp
  413c73:	jmp    0x33e0:0x4c8dfb3
  413c7a:	mov    fs,WORD PTR [esi-0x32e413d4]
  413c80:	and    ecx,ebp
  413c82:	ror    BYTE PTR [esp+edx*8],0x29
  413c86:	rol    DWORD PTR [esp+ebp*8],0xd9
  413c8a:	mov    al,0xff
  413c8c:	or     al,0x0
	...
  413c9a:	add    BYTE PTR [eax],al
  413c9c:	cmp    esi,DWORD PTR [edi-0x62f06076]
  413ca2:	and    dl,BYTE PTR [ecx-0x6101ee94]
  413ca8:	(bad)  
  413ca9:	xor    BYTE PTR [edx+0x54e14b2d],cl
  413caf:	cmp    esi,esp
  413cb1:	dec    edx
  413cb2:	out    0x97,eax
  413cb4:	push   esp
  413cb5:	pop    ss
  413cb6:	(bad)  
  413cb7:	rcr    BYTE PTR [edi+0x668b827d],cl
  413cbd:	add    al,0xc2
  413cbf:	bound  esp,QWORD PTR [edi+0x3febf845]
  413cc5:	out    dx,al
  413cc6:	out    0x43,eax
  413cc8:	ins    BYTE PTR es:[edi],dx
  413cc9:	pop    ss
  413cca:	(bad)  
  413ccb:	bound  edi,QWORD PTR [edi]
  413ccd:	mov    eax,DWORD PTR [ebx+0x5]
  413cd0:	pop    es
  413cd1:	mov    dl,0x4f
  413cd3:	jb     0x413c66
  413cd5:	and    dl,cl
  413cd7:	xor    al,0x42
  413cd9:	pop    ss
  413cda:	mov    ah,BYTE PTR [ecx]
  413cdc:	into   
  413cdd:	dec    ebx
  413cde:	add    ah,BYTE PTR [eax]
  413ce0:	aaa    
  413ce1:	sub    eax,0xfd172a1
  413ce6:	call   0xc9cca223
  413ceb:	sub    BYTE PTR [eax-0x19dcfd09],cl
  413cf1:	les    esp,FWORD PTR [ebx]
  413cf3:	mov    ebp,0x103a4d67
  413cf8:	les    eax,FWORD PTR [eax]
  413cfa:	(bad)  
  413cfb:	lods   eax,DWORD PTR ds:[esi]
  413cfc:	test   ah,dh
  413cfe:	add    cl,ch
	...
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	add    BYTE PTR [eax+0x5],ah
  413d11:	test   esi,esp
  413d13:	jmp    0x8ae4:0xe4a43ae0
  413d1a:	cmp    eax,0x3b4fe88b
  413d1f:	out    0x4a,al
  413d21:	out    0x0,eax
  413d23:	hlt    
  413d24:	out    dx,al
  413d25:	std    
  413d26:	push   ecx
  413d28:	fisttp DWORD PTR [ecx+0x53296e44]
  413d2e:	push   eax
  413d2f:	shl    DWORD PTR [esi-0x1b10801a],0xfd
  413d36:	cmp    esp,DWORD PTR [edx]
  413d38:	cmc    
  413d39:	mov    eax,DWORD PTR [edx]
  413d3b:	dec    ecx
  413d3c:	add    al,0x0
  413d3e:	and    DWORD PTR [esi+0x2d],0x12
  413d42:	add    BYTE PTR ds:0x3a02f57f,dh
  413d48:	add    al,0x83
  413d4a:	std    
  413d4b:	or     ebp,esi
  413d4d:	(bad)  
  413d4e:	aam    0xa
  413d50:	add    al,0x0
  413d52:	mov    edx,esi
  413d54:	pop    ds
  413d55:	push   ds
  413d56:	mov    ecx,esi
  413d58:	pop    ds
  413d59:	push   esi
  413d5a:	mov    ecx,DWORD PTR [eax+edx*1-0x7ef5fffe]
  413d61:	mov    edi,0xc080cbfd
  413d66:	add    ecx,eax
  413d68:	cmp    BYTE PTR [esi+0x4a86fa03],0x24
  413d6f:	(bad)  
  413d70:	push   edx
  413d71:	mov    esi,ecx
	...
  413d7f:	add    BYTE PTR [eax],al
  413d81:	add    BYTE PTR [edx-0x45],dh
  413d84:	idiv   bh
  413d86:	mov    DWORD PTR gs:[edx+0x24],eax
  413d8a:	call   0x5a88:0x8e245288
  413d91:	and    al,0x92
  413d93:	cmp    cl,al
  413d95:	push   edx
  413d96:	xor    DWORD PTR [esi-0x145083b2],esi
  413d9c:	and    dh,ch
  413d9e:	test   edi,esi
  413da0:	push   ebx
  413da1:	push   ebx
  413da2:	adc    edi,eax
  413da4:	xchg   DWORD PTR [esi+ebx*2+0x15],eax
  413da8:	out    0x17,al
  413daa:	arpl   WORD PTR [ecx],di
  413dac:	push   ds
  413dad:	(bad)  
  413dae:	call   0x386525ac
  413db3:	ins    DWORD PTR es:[edi],dx
  413db4:	jl     0x413d38
  413db6:	sub    DWORD PTR [edx],0x64e8c201
  413dbc:	inc    esp
  413dbd:	clc    
  413dbe:	popa   
  413dbf:	inc    ebx
  413dc0:	out    dx,eax
  413dc1:	out    0x4c,eax
  413dc3:	jns    0x413de3
  413dc5:	(bad)  
  413dc6:	scas   al,BYTE PTR es:[edi]
  413dc7:	fisttp DWORD PTR [edx-0x18171533]
  413dcd:	sub    ecx,DWORD PTR [ebx+0x7b]
  413dd0:	pop    ss
  413dd1:	(bad)  
  413dd2:	sub    al,0x94
  413dd4:	dec    ebx
  413dd5:	mov    bl,BYTE PTR [edi+0x2b2ae640]
  413ddb:	sub    al,0x4b
  413ddd:	mov    bh,0xa
  413ddf:	retf   
  413de0:	mov    ch,BYTE PTR ds:0xf934b614
	...
  413df2:	add    BYTE PTR [eax],al
  413df4:	add    al,bl
  413df6:	rol    BYTE PTR [eax+ebp*8+0x5c],cl
  413dfa:	sub    ecx,DWORD PTR [eax-0x76]
  413dfd:	lahf   
  413dfe:	add    al,bl
  413e00:	add    bl,BYTE PTR [ebx]
  413e02:	add    al,0x2d
  413e04:	jl     0x413e61
  413e06:	ffreep st(7)
  413e08:	and    esi,DWORD PTR [edi+0x2d]
  413e0b:	add    al,BYTE PTR [eax]
  413e0d:	arpl   WORD PTR [ecx+0x237b751e],sp
  413e13:	inc    edi
  413e14:	jnp    0x413e95
  413e16:	xchg   ebx,eax
  413e17:	mov    bh,0x23
  413e19:	jae    0x413e77
  413e1b:	mov    al,0x8a
  413e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e1e:	add    al,0x55
  413e20:	rep lods al,BYTE PTR ds:[esi]
  413e22:	dec    DWORD PTR [edx-0x199f2729]
  413e28:	daa    
  413e29:	ss jl  0x413db5
  413e2c:	int    0x8b
  413e2e:	retf   0xfe17
  413e31:	mov    WORD PTR ds:0x89553c22,es
  413e37:	add    eax,DWORD PTR [edx]
  413e39:	arpl   WORD PTR ds:0xf1409f6a,ax
  413e3f:	call   0xeb3d2452
  413e44:	add    esp,DWORD PTR [ebx-0x76]
  413e47:	sbb    al,0xe8
  413e49:	mov    ah,0x80
  413e4b:	mov    ch,0xe
  413e4d:	fild   QWORD PTR [ecx-0x7d9cfc19]
  413e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e54:	add    al,0x54
  413e56:	jg     0x413e90
  413e58:	add    eax,0x0
	...
  413e65:	add    BYTE PTR [eax],al
  413e67:	add    BYTE PTR [ebx+0x5],ah
  413e6a:	bound  esi,QWORD PTR [edi+0x4e61b180]
  413e70:	jns    0x413ebc
  413e72:	jae    0x413e7b
  413e74:	pop    ecx
  413e75:	fisub  DWORD PTR [ebp-0x52759d6b]
  413e7b:	mov    bl,0xe9
  413e7d:	rol    ah,0xf7
  413e80:	cmp    DWORD PTR [esi],esi
  413e82:	mov    ecx,0x4c8d7b3
  413e87:	loopne 0x413e1c
  413e89:	mov    ah,BYTE PTR [esi]
  413e8b:	mov    WORD PTR [eax+0x182c04e1],ds
  413e91:	push   cs
  413e92:	inc    ebp
  413e93:	push   ds
  413e94:	sub    ebx,DWORD PTR [ecx-0x2ead27fc]
  413e9a:	popa   
  413e9b:	mov    bh,0x80
  413e9d:	aad    0x95
  413e9f:	mov    cl,0xd9
  413ea1:	inc    esi
  413ea2:	adc    al,ah
  413ea4:	rcl    BYTE PTR ds:0x89948a1d,1
  413eaa:	lods   al,BYTE PTR ds:[esi]
  413eab:	out    0x6c,eax
  413ead:	scas   al,BYTE PTR es:[edi]
  413eae:	mov    eax,0xd62c9e8a
  413eb3:	pop    ss
  413eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eb5:	adc    eax,0xb8e942c1
  413eba:	dec    esp
  413ebc:	mov    WORD PTR [edi-0x1e639df1],ss
  413ec2:	das    
  413ec3:	jb     0x413e90
  413ec5:	loope  0x413efa
  413ec7:	jo     0x413e5c
  413ec9:	loope  0x413f02
  413ecb:	pusha  
	...
  413ed8:	add    BYTE PTR [eax],al
  413eda:	add    BYTE PTR [ebx-0x649dc41f],bh
  413ee0:	loope  0x413ef1
  413ee2:	push   ds
  413ee3:	mov    dl,0xc5
  413ee5:	mov    ch,BYTE PTR [edi-0x490f1471]
  413eeb:	jbe    0x413f6c
  413eed:	dec    ebx
  413eee:	add    eax,0x7250bc2f
  413ef3:	xchg   ebp,eax
  413ef4:	jg     0x413ecd
  413ef6:	xchg   ecx,eax
  413ef7:	pop    eax
  413ef8:	pop    ss
  413ef9:	(bad)  
  413efa:	xchg   esi,eax
  413efb:	sbb    cl,BYTE PTR [eax+0xe]
  413efe:	pop    esp
  413eff:	(bad)  
  413f00:	adc    al,0xfe
  413f02:	jmp    0xd164efe2
  413f07:	cmp    esi,DWORD PTR [ebx+0x23]
  413f0a:	in     eax,dx
  413f0b:	pusha  
  413f0c:	add    eax,0xb8da1175
  413f11:	and    edi,ebp
  413f13:	fcmovne st,st(0)
  413f15:	and    edi,ecx
  413f17:	mov    bh,0xb6
  413f19:	dec    edi
  413f1a:	bound  esp,QWORD PTR [ebp+0x4e59f12c]
  413f20:	adc    edx,DWORD PTR [edx+ebx*4-0x25]
  413f24:	inc    edx
  413f25:	mov    BYTE PTR [ebp+0x2fe7e0c4],ah
  413f2b:	jb     0x413f40
  413f2d:	(bad)  
  413f2e:	bound  esi,QWORD PTR [ebx+0x18ea23e8]
  413f34:	jg     0x413f08
  413f36:	mov    ah,0xa2
  413f38:	jge    0x413f85
  413f3a:	int    0xc8
  413f3c:	mov    dh,0x8a
  413f3e:	pop    ds
	...
  413f4b:	add    BYTE PTR [eax],al
  413f4d:	add    BYTE PTR [edi+0x64],bh
  413f50:	repnz add BYTE PTR [ebp-0xe],bl
  413f54:	mov    eax,ebx
  413f56:	adc    DWORD PTR ds:0x58f53822,edi
  413f5c:	mov    esi,ecx
  413f5e:	bound  ebp,QWORD PTR [eax+0x7d7dfff1]
  413f64:	push   0x24
  413f66:	outs   dx,BYTE PTR ds:[esi]
  413f67:	push   es
  413f68:	fmul   DWORD PTR [ebx+0x3b221d46]
  413f6e:	mov    ecx,0x42245a7d
  413f73:	jae    0x413fbc
  413f75:	jmp    0x413fbd
  413f77:	jge    0x413fd3
  413f79:	and    al,0x72
  413f7b:	jle    0x413fbf
  413f7d:	and    al,0x52
  413f7f:	sub    eax,0x8362484
  413f84:	add    BYTE PTR [ebp+0x33],dh
  413f87:	test   DWORD PTR [eax+ebp*1+0x846],edi
  413f8e:	push   esi
  413f8f:	push   cs
  413f90:	cmp    eax,DWORD PTR [eax]
  413f92:	aaa    
  413f93:	or     BYTE PTR [eax],al
  413f95:	jl     0x413f9e
  413f97:	test   ebp,edi
  413f99:	add    dl,BYTE PTR [esi]
  413f9b:	es jg  0x41401a
  413f9e:	es xor dh,bh
  413fa1:	jl     0x413f9d
  413fa3:	pop    es
  413fa4:	jl     0x413fab
  413fa6:	mov    ecx,esi
  413fa8:	add    DWORD PTR [ecx+edi*8+0x7c],esi
  413fac:	dec    edx
  413fad:	and    al,0x52
  413faf:	pop    edx
  413fb0:	dec    edi
  413fb1:	mov    eax,DWORD PTR [eax]
	...
  413fbf:	add    BYTE PTR [eax],al
  413fc1:	sub    al,0xe0
  413fc3:	int3   
  413fc4:	repz popf 
  413fc6:	icebp  
  413fc7:	jmp    0x229580fc
  413fcc:	pop    eax
  413fcd:	inc    ecx
  413fce:	dec    esp
  413fcf:	and    dl,BYTE PTR [eax]
  413fd1:	push   ecx
  413fd2:	aad    0x29
  413fd4:	xlat   BYTE PTR ds:[ebx]
  413fd5:	clc    
  413fd6:	push   edi
  413fd7:	mov    esi,ecx
  413fd9:	arpl   WORD PTR [esi],ax
  413fdb:	outs   dx,BYTE PTR ds:[esi]
  413fdc:	out    dx,eax
  413fdd:	lods   al,BYTE PTR ds:[esi]
  413fde:	add    bl,BYTE PTR [ebx+eax*2]
  413fe1:	jg     0x414011
  413fe3:	jg     0x413fd3
  413fe5:	bound  ebx,QWORD PTR [ecx-0x588e15dc]
  413feb:	mov    dh,0x23
  413fed:	jae    0x413fa0
  413fef:	(bad)  
  413ff0:	(bad)  
  413ff1:	xor    dl,al
  413ff3:	mov    cs,ebp
  413ff5:	mov    ecx,DWORD PTR [edi-0x118b01ed]
  413ffb:	sbb    al,BYTE PTR [edx-0x70f6e192]
  414001:	loop   0x414020
  414003:	add    al,BYTE PTR [eax]
  414005:	call   0x63452fb4
  41400a:	sbb    al,0xaf
  41400c:	push   edx
  41400d:	mov    bl,0xa7
  41400f:	dec    ecx
  414010:	out    0x65,eax
  414012:	ins    BYTE PTR es:[edi],dx
  414013:	sbb    bh,dh
  414015:	call   0x8e691ffa
  41401a:	int    0x8e
  41401c:	int    0xd8
  41401e:	push   esp
  41401f:	sub    ebp,edi
  414021:	xor    DWORD PTR [edx+ebx*1+0x3a],ecx
	...
  414034:	and    BYTE PTR [edx+ebp*8],dl
  414037:	mov    bl,BYTE PTR [edi-0x1ac515c0]
  41403d:	dec    eax
  41403e:	(bad)  
  41403f:	inc    DWORD PTR [edx+esi*1]
  414042:	or     eax,DWORD PTR [ebx-0xb43]
  414048:	arpl   WORD PTR [esi+ecx*4],bx
  41404b:	inc    esp
  41404c:	cs sbb al,0xff
  41404f:	jmp    DWORD PTR [ebx+0x48]
  414052:	inc    DWORD PTR [edx+0x68e1ede]
  414058:	xchg   esi,eax
  414059:	sbb    al,0x97
  41405b:	dec    esp
  41405d:	pusha  
  41405e:	aam    0x8a
  414060:	daa    
  414061:	add    eax,0xa1ebbbcd
  414066:	(bad)  
  414067:	out    dx,eax
  414068:	fbld   TBYTE PTR [eax]
  41406a:	pushf  
  41406b:	jecxz  0x414046
  41406d:	jnp    0x414063
  41406f:	jmp    DWORD PTR [edx+edx*1+0x43e9b599]
  414076:	adc    ch,ah
  414078:	test   BYTE PTR [edx],dl
  41407a:	cmc    
  41407b:	pop    ebx
  41407c:	arpl   WORD PTR ds:0x8b6203e9,ax
  414082:	cld    
  414083:	(bad)  
  414084:	jl     0x414098
  414086:	xadd   BYTE PTR [eax-0x7],al
  41408a:	pop    ebx
  41408b:	and    al,0xdf
  41408d:	mov    cl,0xeb
  41408f:	sbb    bh,BYTE PTR [ecx-0x51]
  414092:	jno    0x41404b
  414094:	sub    BYTE PTR [ebp+0xbf71],0x0
	...
  4140a7:	sbb    ch,0x1b
  4140aa:	mov    ah,0xd9
  4140ac:	inc    edx
  4140ad:	rol    BYTE PTR [esi],0x50
  4140b0:	adc    ah,BYTE PTR [ebp-0x1b06f2fc]
  4140b6:	add    esp,DWORD PTR [ebx-0x80]
  4140b9:	xor    al,0xf9
  4140bb:	sub    eax,0x888ecb1e
  4140c0:	jmp    0x985ec1e5
  4140c5:	(bad)  
  4140c6:	mov    gs,WORD PTR [eax-0x9713f17]
  4140cc:	clc    
  4140cd:	in     al,0x3
  4140cf:	arpl   WORD PTR [esp+edx*8-0x21],di
  4140d3:	cmp    BYTE PTR [esp+ebp*4-0x21],bh
  4140d7:	sub    al,0x7c
  4140d9:	mov    esp,0x41ca5cdf
  4140de:	icebp  
  4140df:	fist   WORD PTR [ecx]
  4140e1:	mov    esp,0xed1e2406
  4140e6:	mov    ds,esi
  4140e8:	clc    
  4140e9:	(bad)  
  4140ea:	in     al,dx
  4140eb:	pusha  
  4140ec:	add    eax,0x3fd59953
  4140f1:	out    0x5f,eax
  4140f3:	mov    DWORD PTR [ebx],edx
  4140f5:	(bad)  
  4140f6:	push   ds
  4140f7:	loop   0x4140ee
  4140f9:	add    ebp,ecx
  4140fb:	pusha  
  4140fc:	mov    dh,bh
  4140fe:	fisub  WORD PTR [edi+ebx*1]
  414101:	(bad)  
  414102:	call   0xc5bd0f67
  414107:	lods   al,BYTE PTR ds:[esi]
  414108:	add    al,BYTE PTR [ebp+0x8]
	...
  41411a:	pusha  
  41411b:	add    eax,0xe5b46200
  414120:	push   ebx
  414121:	jb     0x41414d
  414123:	(bad)  
  414125:	ins    BYTE PTR es:[edi],dx
  414126:	arpl   di,di
  414128:	cmp    ch,BYTE PTR [esi-0x5974fc2f]
  41412e:	scas   eax,DWORD PTR es:[edi]
  41412f:	jle    0x414174
  414131:	or     eax,0x12ea7c53
  414136:	mov    bh,BYTE PTR [ecx-0x1ae49bb1]
  41413c:	cmp    ebx,DWORD PTR [eax]
  41413e:	(bad)  
  41413f:	inc    edx
  414140:	mov    BYTE PTR ds:0x17e7e543,dl
  414146:	fs paddd mm2,mm0
  41414a:	aam    0xe4
  41414c:	xor    ebx,DWORD PTR [ebx]
  41414e:	adc    edi,DWORD PTR [ebx+edx*2-0x33]
  414152:	xor    BYTE PTR [eax+0x28a97251],bh
  414158:	out    0x78,al
  41415a:	push   0xf
  41415c:	mov    al,BYTE PTR [ecx+0x2123c4d6]
  414162:	mov    dl,0xc0
  414164:	mov    ch,BYTE PTR [edi]
  414166:	inc    edi
  414167:	cmp    al,dh
  414169:	push   esi
  41416a:	dec    edx
  41416b:	retf   
  41416c:	les    esp,FWORD PTR [edx-0x45]
  41416f:	in     al,0x13
  414171:	add    BYTE PTR [esp+edx*1+0x395e4c89],ah
  414178:	mov    DWORD PTR [esi+ebx*2+0x35],edx
  41417c:	xchg   DWORD PTR [eax+eax*1+0x0],ecx
	...
  41418c:	add    BYTE PTR [esi+0x31],bl
  41418f:	xchg   DWORD PTR [esi+ebp*4+0x38],edx
  414193:	mov    DWORD PTR [esi+ebx*4+0x14],eax
  414197:	push   ebp
  414198:	push   ebp
  414199:	jmp    0xfddb:0x6be8cc81
  4141a0:	call   DWORD PTR [ecx]
  4141a2:	cmp    eax,0x53ed3822
  4141a7:	mov    esi,ecx
  4141a9:	add    ecx,esp
  4141ab:	out    0xa3,al
  4141ad:	mov    ebp,ebp
  4141af:	std    
  4141b0:	cmp    ecx,edi
  4141b2:	ja     0x4141ec
  4141b4:	mov    edi,DWORD PTR [esi]
  4141b6:	and    eax,0x2ffc3b36
  4141bb:	add    al,BYTE PTR [eax]
  4141bd:	jp     0x41423e
  4141bf:	pop    es
  4141c0:	and    esp,0x1b
  4141c3:	add    al,BYTE PTR [eax]
  4141c5:	dec    edx
  4141c6:	add    al,0x74
  4141c8:	sbb    BYTE PTR [edi+0x4],dl
  4141cb:	add    eax,0x3783a00
  4141d0:	add    DWORD PTR ds:0x1719740a,0x4
  4141d7:	jge    0x4141d9
  4141d9:	cmp    bh,BYTE PTR [eax+0x3]
  4141dc:	adc    ebp,0x8
  4141df:	je     0x4141ee
  4141e1:	jge    0x41423c
  4141e3:	mov    esi,ecx
  4141e5:	repnz loopne 0x4141d7
  4141e8:	call   DWORD PTR [ebp+0x1aebfd39]
  4141ee:	sub    DWORD PTR [edx+0x24],0x0
	...
  4141fd:	add    BYTE PTR [eax],al
  4141ff:	add    dl,bh
  414201:	push   cs
  414202:	(bad)  
  414203:	dec    DWORD PTR [edx]
  414205:	add    al,0x8b
  414207:	shl    DWORD PTR [ebx+0x3],cl
  41420a:	xor    DWORD PTR [ecx-0x72],edx
  41420d:	mov    ds:0xb7a4e748,eax
  414212:	pop    ss
  414213:	(bad)  
  414214:	push   ds
  414215:	fwait
  414216:	daa    
  414217:	add    BYTE PTR [esi-0x37],dl
  41421a:	mov    DWORD PTR [ebx+0x7f],ebp
  41421d:	mov    eax,DWORD PTR cs:[ebx-0x79]
  414221:	push   edx
  414222:	ret    
  414223:	inc    edi
  414224:	jmp    0x7d6:0x6857de51
  41422b:	sub    ah,0xf5
  41422e:	pop    ss
  41422f:	(bad)  
  414230:	out    0x6,al
  414232:	or     BYTE PTR [edi+esi*8-0x1ffffde3],al
  414239:	push   ss
  41423a:	add    BYTE PTR [edi],cl
  41423c:	fstp   QWORD PTR [edx-0x6c9cfffe]
  414242:	(bad)  
  414243:	and    edx,DWORD PTR [ebx-0x29]
  414246:	mov    al,dl
  414248:	cmp    BYTE PTR [edi-0x4d],bl
  41424b:	push   eax
  41424c:	fsubr  DWORD PTR [edi+0x2b]
  41424f:	cs dec ebp
  414251:	dec    eax
  414252:	push   ss
  414253:	mov    ch,BYTE PTR [edi-0x4ea923f8]
  414259:	mov    ds:0x453b8a45,eax
  41425e:	add    al,0xf1
  414260:	cmp    al,0x68
  414262:	fcmovb st,st(4)
	...
  414270:	add    BYTE PTR [eax],al
  414272:	add    BYTE PTR [ecx+ebp*8+0x3487438a],dh
  414279:	fld    DWORD PTR [ebp+0x2287f]
  41427f:	xchg   esi,eax
  414280:	adc    eax,0x284bbd81
  414285:	add    al,BYTE PTR [eax]
  414287:	arpl   WORD PTR [eax],dx
  414289:	cli    
  41428a:	cmp    al,0x63
  41428c:	sub    DWORD PTR [edx],eax
  41428e:	add    BYTE PTR [edi+0x5],bh
  414291:	in     al,dx
  414292:	xor    ch,0x3
  414295:	aad    0xdf
  414297:	das    
  414298:	add    eax,0x916303d4
  41429d:	jecxz  0x414221
  41429f:	fld    QWORD PTR [edx]
  4142a1:	mov    ebp,0x71b52dfb
  4142a6:	inc    esi
  4142a7:	les    edi,FWORD PTR [edi+esi*1-0x9e53ae9]
  4142ae:	mov    eax,0x4c69ae19
  4142b3:	mov    ch,0xaf
  4142b5:	imul   eax,DWORD PTR [eax+0x74],0xd803f043
  4142bc:	mov    eax,ds:0x42e9f3c4
  4142c1:	sar    DWORD PTR [esi],1
  4142c3:	and    al,0xb8
  4142c5:	jno    0x41430d
  4142c7:	test   dh,ch
  4142c9:	push   es
  4142ca:	pop    ss
  4142cb:	test   eax,ecx
  4142cd:	imul   esp,DWORD PTR [edi],0x2ad39863
  4142d3:	fs jp  0x41430a
  4142d6:	loopne 0x4142d8
	...
  4142e4:	add    BYTE PTR [eax],al
  4142e6:	pop    esp
  4142e7:	and    BYTE PTR [ecx],0x17
  4142ea:	adc    esi,DWORD PTR [ebx+0x6444561]
  4142f0:	xlat   BYTE PTR ds:[ebx]
  4142f1:	push   ss
  4142f2:	push   ebp
  4142f3:	jp     0x414331
  4142f5:	loopne 0x4142a7
  4142f7:	push   eax
  4142f8:	out    0x3,eax
  4142fa:	arpl   WORD PTR ds:0xe4b136f2,ax
  414300:	jae    0x41437c
  414302:	xor    al,0xe
  414304:	call   0xfcc81b0c
  414309:	jmp    DWORD PTR [esi+ecx*1]
  41430c:	cmp    DWORD PTR [ecx+ebp*8+0x720903e],esi
  414313:	push   cs
  414314:	jge    0x41431a
  414316:	mov    ebp,0x60ecfff8
  41431b:	add    eax,0x2f198c03
  414320:	jno    0x41436e
  414322:	loope  0x41435e
  414324:	(bad)  
  414325:	call   0xe9452da0
  41432a:	pusha  
  41432b:	or     BYTE PTR [edx-0x20],0xf3
  41432f:	in     al,dx
  414330:	mov    ch,BYTE PTR [edi-0x30]
  414333:	add    DWORD PTR [eax],eax
  414335:	jmp    0xed58cb19
  41433a:	pusha  
  41433b:	add    eax,0xe9e66040
  414340:	add    ebp,ecx
  414342:	pusha  
  414343:	jl     0x4142ca
  414345:	stc    
  414346:	lods   al,BYTE PTR ds:[esi]
  414347:	or     eax,0x62fe
	...
  414358:	add    BYTE PTR [esi],ah
  41435a:	test   BYTE PTR [ebx],0xe9
  41435d:	pusha  
  41435e:	jnp    0x41436f
  414360:	jmp    0x4143b4
  414362:	adc    cl,al
  414364:	jno    0x4142f6
  414366:	add    al,0x9e
  414368:	aad    0x84
  41436a:	or     eax,0x7a7f74fe
  41436f:	test   ecx,edi
  414371:	je     0x414380
  414373:	(bad)  
  414374:	jo     0x414363
  414376:	cmc    
  414377:	add    ebp,ecx
  414379:	pusha  
  41437a:	lds    ecx,FWORD PTR [eax+0x95b5f]
  414380:	jmp    0xe550c66e
  414385:	pusha  
  414386:	add    eax,0x9476f8b
  41438b:	add    cl,ch
  41438d:	jmp    0x8746:0x4dbb01fc
  414394:	stc    
  414395:	popa   
  414396:	imul   ebx,DWORD PTR [ebx],0xffffffed
  414399:	pusha  
  41439a:	add    eax,0x82ebf075
  41439f:	sldt   WORD PTR [esi]
  4143a2:	or     DWORD PTR [eax],eax
  4143a4:	mov    DWORD PTR [ecx+ecx*1+0x48fa0002],eax
  4143ab:	xchg   DWORD PTR [esi-0x1f2d2],ecx
  4143b1:	jae    0x41433e
  4143b3:	push   cs
  4143b4:	add    al,0xfa
  4143b6:	or     BYTE PTR [ebx-0x1f30d7a],cl
  4143bc:	inc    DWORD PTR [eax]
	...
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	call   0xfe0c:0xba868921
  4143d3:	inc    DWORD PTR [ecx+eax*1+0xd3c8b00]
  4143da:	add    al,BYTE PTR [eax]
  4143dc:	retf   0x847d
  4143df:	sbb    dh,al
  4143e1:	or     BYTE PTR [eax],al
  4143e3:	add    DWORD PTR [ecx+edx*1],ebx
  4143e6:	add    al,BYTE PTR [eax]
  4143e8:	mov    edx,0xaad2cb1d
  4143ed:	jge    0x414431
  4143ef:	and    al,0xbe
  4143f1:	mov    edi,DWORD PTR [esi+0x4a7dcb74]
  4143f7:	and    al,0xda
  4143f9:	jge    0x41438f
  4143fb:	adc    BYTE PTR [esi+0x362b0008],al
  414401:	and    eax,0x81f1514e
  414406:	adc    al,BYTE PTR [edx+edi*2]
  414409:	or     BYTE PTR [ebx],ch
  41440b:	dec    esp
  41440c:	push   cx
  41440e:	push   eax
  41440f:	push   ecx
  414410:	jne    0x414404
  414412:	into   
  414413:	add    DWORD PTR [esi],0x18
  414416:	add    eax,0xffffff87
  414419:	std    
  41441a:	pop    esp
  41441b:	mov    ecx,DWORD PTR [ecx]
  41441d:	dec    ebp
  41441e:	pop    ebp
  41441f:	pop    esi
  414420:	leave  
  414421:	int3   
  414422:	ss ret 0x162
  414426:	mov    eax,DWORD PTR [esi-0x1f19d]
  41442c:	sbb    al,0x47
  41442e:	mov    esi,0x23
	...
  41443f:	mov    bl,0xe1
  414441:	mov    eax,0x3e9fad5e
  414446:	aaa    
  414447:	and    DWORD PTR [esi],esi
  414449:	add    bh,BYTE PTR [eax+0x81e63]
  41444f:	and    BYTE PTR [edi-0x6898dc42],dl
  414455:	dec    edx
  414456:	sar    dl,0x1e
  414459:	test   DWORD PTR [ebx+0x6b],eax
  41445c:	pop    esi
  41445d:	aas    
  41445e:	mov    bl,BYTE PTR [edi]
  414460:	cli    
  414461:	pop    es
  414462:	cmp    DWORD PTR [edi+0x63fffff9],0x64744299
  41446c:	popf   
  41446d:	sub    ebx,DWORD PTR ds:[edi+0x1e]
  414471:	add    al,bl
  414473:	fcomp  DWORD PTR [ecx+0x1e5f43de]
  414479:	add    cl,BYTE PTR [ebx+0x3c241f7]
  41447f:	arpl   WORD PTR [esi],bx
  414481:	mov    cl,0x8a
  414483:	fild   WORD PTR [ecx-0x3e]
  414486:	add    esp,DWORD PTR [ebx+0x1e]
  414489:	mov    al,0x8a
  41448b:	xlat   BYTE PTR ds:[ebx]
  41448c:	inc    ecx
  41448d:	(bad)  
  41448e:	add    esp,DWORD PTR [ebx+0x1e]
  414491:	mov    bl,0x4f
  414493:	fsub   DWORD PTR [ecx+0x1e5f3fe7]
  414499:	add    dl,BYTE PTR [edx-0x4d]
  41449c:	test   eax,0x347b23bf
  4144a1:	mov    bl,0xf4
	...
  4144af:	add    BYTE PTR [eax],al
  4144b1:	add    BYTE PTR [esp+ecx*2-0x7c],cl
  4144b5:	ret    
  4144b6:	ja     0x4144d0
  4144b8:	add    al,BYTE PTR [eax]
  4144ba:	and    BYTE PTR [ecx+0x3f],ch
  4144bd:	retf   
  4144be:	daa    
  4144bf:	push   es
  4144c0:	mov    ch,0x40
  4144c2:	sbb    BYTE PTR [edx],bh
  4144c4:	lods   al,BYTE PTR ds:[esi]
  4144c5:	inc    eax
  4144c6:	sbb    BYTE PTR [edx],bh
  4144c8:	cmp    edi,DWORD PTR [ebp+0x7]
  4144cb:	test   DWORD PTR [esp+edx*1+0x14],edi
  4144cf:	or     ebp,eax
  4144d1:	mov    dh,0xb6
  4144d3:	mov    dl,0x71
  4144d5:	mov    ecx,0x391d45c
  4144da:	mov    ch,0x56
  4144dc:	add    al,0xc2
  4144de:	mov    ds:0x23147005,eax
  4144e3:	push   cs
  4144e4:	jmp    0xf942f1eb
  4144e9:	jl     0x4144be
  4144eb:	xchg   BYTE PTR [edi+0xb],al
  4144ee:	fs push edx
  4144f0:	je     0x4144ef
  4144f2:	sar    BYTE PTR [eax+0x3dde03a7],1
  4144f8:	in     eax,0x78
  4144fa:	xchg   ebx,eax
  4144fb:	cli    
  4144fc:	jbe    0x414543
  4144fe:	fadd   st(1),st
  414500:	add    edi,DWORD PTR [ecx+eiz*1]
  414503:	xchg   BYTE PTR [ecx],ah
  414505:	int3   
  414506:	sub    BYTE PTR [edi+edx*8],dh
  414509:	xor    eax,0xff8b8606
  41450e:	arpl   WORD PTR [eax+0x129c7cf2],dx
  414514:	and    BYTE PTR [ecx+0x0],al
	...
  414522:	add    BYTE PTR [eax],al
  414524:	add    BYTE PTR [eax],bl
  414526:	add    eax,0x78611ed7
  41452b:	fdivr  st(5),st
  41452d:	out    0x8c,eax
  41452f:	out    0x86,eax
  414531:	ror    BYTE PTR [eax-0x8],0x12
  414535:	gs or  ch,al
  414538:	xchg   BYTE PTR [eax],al
  41453a:	js     0x414534
  41453c:	adc    dl,BYTE PTR [ebp+0xa]
  41453f:	call   0x773b6f18
  414544:	test   eax,ebp
  414546:	mov    edx,0x786727ff
  41454b:	xor    edx,ecx
  41454d:	fld    QWORD PTR [edi]
  41454f:	sbb    esp,DWORD PTR [ebp*1+0x68d4437c]
  414556:	add    BYTE PTR [ebx-0xc],0x90
  41455a:	pop    ds
  41455b:	pop    es
  41455c:	arpl   WORD PTR [ecx+edx*8],bx
  41455f:	stos   DWORD PTR es:[edi],eax
  414560:	jno    0x414586
  414562:	jmp    0xf1d6ff6
  414567:	sbb    esi,ebp
  414569:	dec    edi
  41456a:	dec    edi
  41456b:	sbb    ebp,ecx
  41456d:	pusha  
  41456e:	add    eax,0x6de69f0f
  414573:	dec    ebp
  414574:	test   al,0x60
  414576:	js     0x4145ab
  414578:	icebp  
  414579:	in     eax,0x7
  41457b:	aaa    
  41457c:	int3   
  41457d:	(bad)  
  41457e:	jnp    0x4145c3
  414580:	cld    
  414581:	mov    BYTE PTR [edx+0x1f50dc43],al
  414587:	pop    es
  414588:	arpl   WORD PTR [eax],ax
	...
  414596:	add    BYTE PTR [eax],al
  414598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414599:	shr    BYTE PTR [ebx-0x7017639f],1
  41459f:	stos   BYTE PTR es:[edi],al
  4145a0:	in     eax,0xe
  4145a2:	aaa    
  4145a3:	popf   
  4145a4:	ja     0x41457b
  4145a6:	(bad)  
  4145a8:	cmp    al,BYTE PTR [edi+0x99f9fab]
  4145ae:	jle    0x414535
  4145b0:	pop    ebx
  4145b1:	jne    0x4145b2
  4145b3:	je     0x414617
  4145b5:	jle    0x4145ba
  4145b7:	push   esp
  4145b8:	fs mov ebx,0x8577e940
  4145be:	mov    ecx,?
  4145c0:	push   ebx
  4145c1:	or     edi,esi
  4145c3:	out    dx,al
  4145c4:	or     al,BYTE PTR [edi+0x92027c3]
  4145ca:	jle    0x414619
  4145cc:	pop    esp
  4145cd:	jne    0x4145ce
  4145cf:	dec    DWORD PTR [esi-0x58fb74fd]
  4145d5:	std    
  4145d6:	dec    ebp
  4145d7:	inc    ecx
  4145d8:	dec    edx
  4145d9:	or     al,0x82
  4145db:	mov    ebp,0xfffdf61a
  4145e0:	jns    0x414564
  4145e2:	stc    
  4145e3:	sbb    BYTE PTR [esi-0x41],al
  4145e6:	inc    eax
  4145e7:	xor    eax,0x11
  4145ea:	or     eax,0xfdf6308c
  4145ef:	call   DWORD PTR [edi-0x7a00f180]
  4145f5:	test   BYTE PTR [esi-0x18],0x3
  4145f9:	add    eax,0x0
	...
  41460a:	add    BYTE PTR [ebp+0x53],ah
  41460d:	pop    ecx
  41460e:	mov    DWORD PTR [esi-0x5f73fa8],edx
  414614:	dec    edi
  414615:	xchg   ebp,esp
  414617:	dec    ebx
  414618:	in     eax,0x7e
  41461a:	add    dl,cl
  41461c:	add    al,0x53
  41461e:	push   esi
  41461f:	in     eax,dx
  414620:	mov    DWORD PTR [ebx+0x8],eax
  414623:	aaa    
  414624:	push   eax
  414625:	jle    0x4145e0
  414627:	call   0x81c2:0x43000004
  41462e:	sar    BYTE PTR [esi+0x5c813189],0x1
  414635:	add    ah,bh
  414637:	mov    al,bl
  414639:	in     al,0x6
  41463b:	add    DWORD PTR [edx],edi
  41463d:	jg     0x414626
  41463f:	cmp    al,BYTE PTR [esi]
  414641:	add    BYTE PTR [eax],al
  414643:	cmp    ebx,esi
  414645:	or     BYTE PTR [ecx],cl
  414647:	je     0x4145d2
  414649:	sbb    DWORD PTR ss:[ebp+0x1],0xc37afc00
  414651:	in     eax,dx
  414652:	or     dh,BYTE PTR [ebx-0xa]
  414655:	xchg   DWORD PTR [edx],esi
  414657:	arpl   WORD PTR [ebp+0x22218238],sp
  41465d:	jnp    0x414696
  41465f:	loop   0x414697
  414661:	inc    edx
  414662:	push   cs
  414663:	arpl   WORD PTR [esi],bx
  414665:	inc    ecx
  414666:	out    dx,al
  414667:	gs and edx,eax
  41466a:	mov    BYTE PTR [ebp-0x5d],dh
  41466d:	rol    DWORD PTR [eax+0x0],cl
	...
  41467b:	add    BYTE PTR [eax],al
  41467d:	add    BYTE PTR [ebp+0x1e],al
  414680:	adc    al,BYTE PTR [edx]
  414682:	arpl   WORD PTR [ebp+0x28],bx
  414685:	or     ebp,eax
  414687:	adc    al,BYTE PTR [ebx+0x235d54e2]
  41468d:	cvtps2pd xmm4,QWORD PTR [eax+0x7b]
  414691:	pop    ss
  414692:	loop   0x41470e
  414694:	add    dh,al
  414696:	pusha  
  414697:	push   ds
  414698:	inc    ecx
  414699:	jmp    0x9531:0x8830255f
  4146a0:	xor    eax,DWORD PTR [edx+0x2f7b2221]
  4146a6:	loopne 0x41465f
  4146a8:	iret   
  4146a9:	or     dl,BYTE PTR [eax-0x1fb72c5b]
  4146af:	fld    QWORD PTR [esi]
  4146b1:	test   DWORD PTR [edx+0x268c8850],ebx
  4146b7:	sahf   
  4146b8:	mov    dl,0xe7
  4146ba:	jl     0x4146da
  4146bc:	add    al,BYTE PTR [eax]
  4146be:	or     al,0x40
  4146c0:	stos   DWORD PTR es:[edi],eax
  4146c1:	mov    BYTE PTR [edi+0x63034448],dh
  4146c7:	mov    ds:0xb45f23c6,eax
  4146cc:	scas   al,BYTE PTR es:[edi]
  4146cd:	dec    ebx
  4146ce:	and    bl,BYTE PTR [esi]
  4146d0:	jnp    0x4146db
  4146d2:	ficom  DWORD PTR ds:0x9b67c183
  4146d8:	inc    edx
  4146d9:	add    esp,edx
  4146db:	adc    ebp,DWORD PTR ds:0xe905224b
  4146e1:	xchg   ecx,eax
	...
  4146ee:	add    BYTE PTR [eax],al
  4146f0:	add    BYTE PTR [esi+0x42],dh
  4146f3:	in     al,0x3
  4146f5:	call   0x194953bb
  4146fa:	stos   BYTE PTR es:[edi],al
  4146fb:	sbb    al,0xc5
  4146fd:	dec    esp
  4146fe:	jl     0x4146f0
  414700:	jl     0x41475c
  414702:	sub    BYTE PTR [eax-0x13bc1ff8],0x84
  414709:	cmp    ch,BYTE PTR [edx]
  41470b:	sbb    al,0xc5
  41470d:	sub    al,0x95
  41470f:	xchg   esi,eax
  414710:	inc    edx
  414711:	pusha  
  414712:	add    eax,0xb6077d34
  414717:	cmp    BYTE PTR [ebx+0x7ae0c0e9],dh
  41471d:	scas   eax,DWORD PTR es:[edi]
  41471e:	stc    
  41471f:	jae    0x4146da
  414721:	or     al,0xb4
  414723:	sbb    BYTE PTR [ebx*2-0x74fc16fb],bl
  41472a:	test   eax,0x79ecc51c
  41472f:	stos   DWORD PTR es:[edi],eax
  414730:	or     edx,DWORD PTR [ebp+ebx*1+0x563042f]
  414737:	mov    edx,0xb80d1f80
  41473c:	sbb    edi,DWORD PTR [eax*1+0x7c2803e9]
  414743:	dec    esp
  414744:	mov    cl,0xa2
  414746:	std    
  414747:	call   0x50330fe
  41474c:	cld    
  41474d:	fnstenv [ecx+0x44dbffcc]
  414753:	test   al,0xfe
	...
  414761:	add    BYTE PTR [eax],al
  414763:	add    dh,dl
  414765:	cld    
  414766:	daa    
  414767:	and    eax,0x7ce27c6c
  41476c:	mov    ds:0x5b55f5c5,eax
  414771:	inc    esp
  414772:	pop    es
  414773:	hlt    
  414774:	imul   edi,ebx,0x7d795fff
  41477a:	shr    BYTE PTR [ecx-0x57f7af93],0x3f
  414781:	dec    BYTE PTR [edx]
  414783:	repz (bad) 
  414786:	mov    BYTE PTR [eax+0x600343e1],bh
  41478c:	mov    eax,ds:0x397f0ec6
  414791:	std    
  414792:	sbb    BYTE PTR [eax-0x59],dh
  414795:	(bad)  
  414796:	push   cs
  414797:	jg     0x4147d0
  414799:	inc    ebp
  41479a:	loopne 0x41476d
  41479c:	scas   eax,DWORD PTR es:[edi]
  41479d:	cld    
  41479e:	mov    BYTE PTR [eax-0xf4a08e0],ch
  4147a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147a5:	and    eax,0x7d1ae20f
  4147aa:	or     DWORD PTR [eax-0x59],esp
  4147ad:	(bad)  
  4147ae:	push   cs
  4147af:	aas    
  4147b0:	pop    es
  4147b1:	inc    ebp
  4147b2:	loopne 0x4147a5
  4147b4:	stc    
  4147b5:	sti    
  4147b6:	push   cs
  4147b7:	aas    
  4147b8:	pusha  
  4147b9:	cld    
  4147ba:	shl    BYTE PTR [eax-0x16],0xaa
  4147be:	shl    ecx,0x60
  4147c1:	mov    dl,0x8a
  4147c3:	mov    ch,0xc4
  4147c5:	std    
  4147c6:	mov    ah,BYTE PTR [ebp+0x0]
	...
  4147d4:	add    BYTE PTR [eax],al
  4147d6:	add    BYTE PTR [ecx+edi*8+0x1e27eb8a],bh
  4147dd:	pop    ss
  4147de:	jno    0x41483f
  4147e0:	les    ecx,FWORD PTR [edx+0xf1e27eb]
  4147e6:	popa   
  4147e7:	pop    edi
  4147e8:	les    ecx,FWORD PTR [edx+0x71e27eb]
  4147ee:	jno    0x41484f
  4147f0:	les    ecx,FWORD PTR [eax-0x308358ce]
  4147f6:	push   0x22
  4147f8:	add    cl,BYTE PTR [ebx-0x74fcf717]
  4147fe:	add    BYTE PTR [eax-0x40],bh
  414801:	out    0x18,al
  414803:	repnz add BYTE PTR [ecx-0x75],al
  414807:	mov    al,al
  414809:	out    0x10,al
  41480b:	add    al,BYTE PTR [ecx]
  41480d:	inc    ecx
  41480e:	mov    edi,DWORD PTR [eax-0x3e]
  414811:	out    0x8,al
  414813:	ror    BYTE PTR [eax],cl
  414815:	aas    
  414816:	mov    ebx,DWORD PTR [eax-0x7f]
  414819:	int    0x88
  41481b:	cmp    ebp,DWORD PTR [esi-0x43c5f741]
  414821:	mov    ch,ah
  414823:	leave  
  414824:	and    eax,0xba545309
  414829:	mov    al,BYTE PTR [ebp+0xe]
  41482c:	jle    0x414882
  41482e:	or     BYTE PTR [ecx+0x124d8af7],dh
  414834:	jle    0x41487e
  414836:	add    al,0x83
  414838:	ss shr bl,0x0
	...
  414848:	add    BYTE PTR [eax],al
  41484a:	push   es
  41484b:	fmul   st,st(2)
  41484d:	sbb    ecx,0xd0f0f02
  414853:	fcomp  st(0)
  414855:	mov    esp,ecx
  414857:	dec    eax
  414858:	jecxz  0x41485e
  41485a:	stos   DWORD PTR es:[edi],eax
  41485b:	push   ss
  41485c:	mov    dh,dl
  41485e:	cmp    esp,DWORD PTR [ebx]
  414860:	or     eax,0xf2808c31
  414865:	sub    DWORD PTR [ecx],0xba00fe12
  41486b:	xlat   BYTE PTR ds:[ebx]
  41486c:	fmul   DWORD PTR [ecx+0x10e3487c]
  414872:	mov    ebx,0x8bce8816
  414877:	and    edi,edi
  414879:	xor    BYTE PTR [eax+eax*4-0xe],dl
  41487d:	sbb    DWORD PTR [ecx-0x2a],0xd7b93332
  414884:	xlat   BYTE PTR ds:[ebx]
  414885:	mov    DWORD PTR [ebx+0x3c],esp
  414888:	inc    ecx
  414889:	in     eax,0x61
  41488b:	fst    QWORD PTR [edx]
  41488d:	mov    BYTE PTR [ebp+0x32071e2d],dl
  414893:	sbb    al,0x79
  414895:	repnz loop 0x4148a7
  414898:	or     edi,edi
  41489a:	ins    DWORD PTR es:[edi],dx
  41489b:	out    dx,al
  41489c:	rcr    cl,cl
  41489e:	fcmove st,st(4)
  4148a0:	inc    edx
  4148a1:	in     eax,0x6b
  4148a3:	sbb    eax,0xdace883e
  4148a8:	add    dh,dh
  4148aa:	fcom   DWORD PTR [eax+0x10]
  4148ad:	rol    BYTE PTR [eax],0x0
	...
  4148bc:	add    BYTE PTR [ebx+ebp*8],dh
  4148bf:	and    dh,0x62
  4148c2:	jne    0x4148d6
  4148c4:	or     BYTE PTR [edx],bh
  4148c6:	xor    esi,DWORD PTR gs:[eax]
  4148c9:	sbb    eax,0x40801065
  4148ce:	pop    eax
  4148cf:	push   edi
  4148d0:	test   eax,0x3027dcc9
  4148d5:	cmp    ch,BYTE PTR [ecx-0x2b]
  4148d8:	adc    edx,ebx
  4148da:	mov    edx,0x6f64ee42
  4148df:	and    al,0x0
  4148e1:	jmp    0xc31:0x1cf9fa7f
  4148e8:	pop    es
  4148e9:	arpl   si,bp
  4148eb:	add    DWORD PTR [ecx+0x1b232d15],ecx
  4148f1:	jmp    0x1065:0x5fee4232
  4148f8:	or     al,cl
  4148fa:	fs inc ebx
  4148fc:	and    BYTE PTR [ebx-0x15e22f0f],0x23
  414903:	and    ch,0x74
  414906:	addr16 aad 0xb4
  414909:	(bad)  
  41490a:	cdq    
  41490b:	ret    0xdbff
  41490e:	add    al,0x46
  414910:	inc    edx
  414911:	lea    ecx,[edx]
  414913:	push   0xe7049824
  414918:	add    ebx,DWORD PTR [eax-0x44]
  41491b:	sub    esi,DWORD PTR [ecx+0x2c700523]
	...
  41492d:	add    BYTE PTR [eax],al
  41492f:	add    BYTE PTR [ebx+0x7d82edf3],ah
  414935:	add    al,ch
  414937:	add    esp,DWORD PTR [ebx+0x10]
  41493a:	ss das 
  41493c:	adc    al,0x46
  41493e:	out    0x7c,eax
  414940:	cmp    eax,0xe3f2cec5
  414945:	jmp    0x52e2:0x56304d3
  41494c:	sub    BYTE PTR [eax+ebp*1+0x4],dl
  414950:	jmp    0xa787:0x1e7db378
  414957:	add    dl,bl
  414959:	into   
  41495a:	cli    
  41495b:	jmp    0x22ac2d3b
  414960:	pop    ebp
  414961:	mov    ss,ebx
  414963:	push   eax
  414964:	cmp    BYTE PTR [ecx+0x28],bl
  414967:	add    al,0x58
  414969:	js     0x4148fe
  41496b:	jge    0x414992
  41496d:	lds    edx,FWORD PTR [esi+0x7beae202]
  414973:	add    al,0x63
  414975:	add    eax,0x570852e2
  41497a:	sub    BYTE PTR [edx+ebx*8],al
  41497d:	loop   0x4149a7
  41497f:	sbb    ebp,DWORD PTR [esi-0x7c]
  414982:	inc    esi
  414983:	or     ah,dl
  414985:	add    ch,al
  414987:	(bad)  
  414988:	adc    eax,0xc4c4b8e2
  41498d:	lea    esp,[esi]
  41498f:	inc    ebp
  414990:	int    0x1b
  414992:	push   0x23
	...
  4149a3:	mov    eax,0x60e90005
  4149a8:	push   cs
  4149a9:	mov    ch,0xd
  4149ab:	call   0x771949f5
  4149b0:	(bad)  
  4149b1:	(bad)  
  4149b2:	sub    BYTE PTR [ecx+0x1e],al
  4149b5:	xchg   DWORD PTR [esi],edi
  4149b7:	es repz add al,0x60
  4149bb:	ins    BYTE PTR es:[edi],dx
  4149bc:	or     eax,0x872170f9
  4149c1:	shl    ch,0x8d
  4149c4:	and    BYTE PTR [edi+0x3de8e417],al
  4149ca:	bound  edx,QWORD PTR [ebx+0x263ddcb9]
  4149d0:	add    cl,BYTE PTR [ecx+0x6f39fbe]
  4149d6:	push   0xe900fe81
  4149db:	pusha  
  4149dc:	push   cs
  4149dd:	mov    ch,0xa5
  4149df:	test   BYTE PTR [eax+eax*1+0x70],0x89
  4149e4:	(bad)
  4149e7:	out    0xea,eax
  4149e9:	cld    
  4149ea:	jmp    0x5e4a4f4f
  4149ef:	inc    esp
  4149f0:	push   edx
  4149f1:	aas    
  4149f2:	jmp    0x87012d8e
  4149f7:	adc    al,BYTE PTR [ebp+0x5608de5]
  4149fd:	add    dl,dh
  4149ff:	xchg   ecx,eax
  414a00:	fimul  WORD PTR [esi+0x28]
  414a03:	pop    edi
  414a04:	mov    WORD PTR [ebx+0x7d],?
	...
  414a13:	add    BYTE PTR [eax],al
  414a15:	add    BYTE PTR [edi-0x38],ch
  414a18:	sub    DWORD PTR [ecx+0x1ad18ce4],0x6ade8cc9
  414a22:	add    BYTE PTR [ebx-0x77],0x1d
  414a26:	xor    bl,dh
  414a28:	push   ebx
  414a29:	test   al,0x60
  414a2b:	push   cs
  414a2c:	jae    0x414a2e
  414a2e:	jle    0x4149b1
  414a30:	faddp  st(1),st
  414a32:	and    eax,0x76e77f04
  414a37:	push   es
  414a38:	add    BYTE PTR [eax],al
  414a3a:	rcl    DWORD PTR [esi-0x27],0x53
  414a3e:	retf   
  414a3f:	add    eax,0x1f4bdf87
  414a44:	or     eax,DWORD PTR [ecx-0x2f5a3]
  414a4a:	jp     0x414a4e
  414a4c:	mov    bh,0xdc
  414a4e:	fcmovne st,st(0)
  414a50:	std    
  414a51:	mov    BYTE PTR [ebp+0x49],dl
  414a54:	out    dx,al
  414a55:	push   ss
  414a56:	sti    
  414a57:	es stc 
  414a59:	add    BYTE PTR [edx+0x5],bh
  414a5c:	or     DWORD PTR [edi+0x40bf26],esi
  414a62:	jnp    0x414a78
  414a64:	dec    BYTE PTR [ebp+0x32]
  414a67:	mov    edi,DWORD PTR [eax+edi*8+0x3a]
  414a6b:	inc    BYTE PTR [ebx+ebp*4-0x7601f0dc]
  414a72:	repnz inc esp
  414a74:	fstp   QWORD PTR [edi]
  414a76:	ret    
  414a77:	cmp    edx,eax
  414a79:	out    dx,al
	...
  414a86:	add    BYTE PTR [eax],al
  414a88:	add    bl,al
  414a8a:	inc    esp
  414a8b:	or     cl,dh
  414a8d:	xchg   ebx,eax
  414a8e:	cmp    DWORD PTR [eax],esi
  414a90:	enter  0x4a93,0x80
  414a94:	jecxz  0x414a36
  414a96:	pop    edi
  414a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a98:	stos   BYTE PTR es:[edi],al
  414a99:	sub    esi,DWORD PTR [ebx]
  414a9b:	xor    cl,bl
  414a9d:	jae    0x414ad8
  414a9f:	shl    al,0x15
  414aa2:	jl     0x414a77
  414aa4:	shl    esp,1
  414aa6:	jl     0x414a67
  414aa8:	or     DWORD PTR [eax+0x7c],ebp
  414aab:	int    0xc1
  414aad:	xor    al,BYTE PTR [ecx]
  414aaf:	xor    eax,ecx
  414ab1:	push   ebx
  414ab2:	dec    edx
  414ab3:	and    bl,0x63
  414ab6:	push   edi
  414ab7:	add    al,0xff
  414ab9:	arpl   WORD PTR ds:0x2d9b8829,bx
  414abf:	and    al,0x7
  414ac1:	jb     0x414aef
  414ac3:	jns    0x414a94
  414ac5:	mov    ds:0x9b310646,al
  414aca:	gs inc ebx
  414acc:	add    BYTE PTR [eax+0x5032d4db],0xdd
  414ad3:	sub    cl,BYTE PTR [eax+0x1242dab]
  414ad9:	push   edx
  414ada:	sub    al,0x79
  414adc:	(bad)  
  414add:	mov    ds:0x9330f416,al
  414ae2:	jne    0x414b27
  414ae4:	add    BYTE PTR [eax+0x64ff08f7],0xbd
  414aeb:	sub    ecx,DWORD PTR [eax+0x0]
	...
  414af9:	add    BYTE PTR [eax],al
  414afb:	add    BYTE PTR [ebx],bh
  414afd:	lods   eax,DWORD PTR ds:[esi]
  414afe:	and    DWORD PTR [edi],ecx
  414b00:	xchg   edx,eax
  414b01:	lods   eax,DWORD PTR ds:[esi]
  414b02:	jp     0x414acb
  414b04:	and    al,dh
  414b06:	std    
  414b07:	xor    BYTE PTR [ebx],dh
  414b09:	gs inc esp
  414b0b:	add    BYTE PTR [eax-0x9],0xf8
  414b0f:	push   cs
  414b10:	fs std 
  414b12:	sub    ecx,DWORD PTR [edx-0x1dbd195a]
  414b18:	pop    edi
  414b19:	std    
  414b1a:	cmp    al,0x88
  414b1c:	jnp    0x414b89
  414b1e:	mov    esi,0xbe735f07
  414b23:	pop    es
  414b24:	(bad)  
  414b26:	test   al,0x5d
  414b28:	test   al,0x65
  414b2a:	adc    eax,0x1f6215c
  414b2f:	push   ebx
  414b30:	lea    esi,[ebx-0x5b]
  414b33:	and    ebx,DWORD PTR [edi+0x10]
  414b36:	jnp    0x414bab
  414b38:	aas    
  414b39:	ficomp WORD PTR [edi-0x9fb2a7c]
  414b3f:	outs   dx,DWORD PTR ds:[esi]
  414b40:	mov    bl,0xf
  414b42:	xchg   ebp,eax
  414b43:	inc    edx
  414b44:	pop    ebp
  414b45:	mov    eax,0x43d7b327
  414b4a:	fbstp  TBYTE PTR [ebx+0x84159c4]
  414b50:	mov    ch,0x6c
  414b52:	sbb    esi,DWORD PTR [edi-0x3c0fadd]
  414b58:	test   al,0xff
  414b5a:	cs clc 
  414b5c:	aad    0xf6
  414b5e:	mov    ebp,0xb4
	...
  414b6f:	jl     0x414bb6
  414b71:	and    DWORD PTR [eax],ecx
  414b73:	lea    ebp,[ebx+esi*4-0x4a]
  414b77:	and    eax,DWORD PTR ds:0xff790fff
  414b7d:	push   es
  414b7e:	test   eax,0x3efc319
  414b83:	push   ss
  414b84:	mov    cs,WORD PTR [ebx+esi*4]
  414b87:	adc    al,0x54
  414b89:	bound  edi,QWORD PTR [esi-0x7bb759c]
  414b8f:	out    0x58,eax
  414b91:	fbstp  TBYTE PTR [edx+0x824ed9c]
  414b97:	inc    ebp
  414b98:	(bad)  
  414b99:	aas    
  414b9a:	test   al,0xa8
  414b9c:	inc    esp
  414b9d:	out    0x78,eax
  414b9f:	lahf   
  414ba0:	std    
  414ba1:	pop    ss
  414ba2:	sbb    al,0x35
  414ba4:	add    dh,BYTE PTR [edi+0x1be1bc07]
  414baa:	lds    ebx,FWORD PTR [edx+edx*4]
  414bad:	sub    al,0xc
  414baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bb0:	in     eax,dx
  414bb1:	nop
  414bb2:	or     BYTE PTR ds:0x97a7ffff,cl
  414bb8:	inc    esp
  414bb9:	out    0x78,eax
  414bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bbc:	std    
  414bbd:	pop    ss
  414bbe:	sbb    al,0x19
  414bc0:	add    bh,BYTE PTR [edi+0x7]
  414bc3:	xchg   ecx,eax
  414bc4:	nop
  414bc5:	add    BYTE PTR [edi+edx*2],ch
  414bc8:	dec    esi
  414bc9:	call   0xfe40b739
  414bce:	ret    0xea57
  414bd1:	pop    ebx
  414bd2:	sub    eax,DWORD PTR [eax]
	...
  414be0:	add    BYTE PTR [eax],al
  414be2:	iret   
  414be3:	(bad)  
  414be4:	push   esp
  414be5:	pusha  
  414be6:	add    BYTE PTR [ebx+0x58f1f9ec],0x89
  414bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bee:	mov    eax,0x2bed738b
  414bf3:	dec    ecx
  414bf4:	clc    
  414bf5:	cdq    
  414bf6:	icebp  
  414bf7:	out    0xfa,al
  414bf9:	xor    ah,BYTE PTR [edi+edi*8-0x75]
  414bfd:	lods   al,BYTE PTR ds:[esi]
  414bfe:	jo     0x414c4e
  414c00:	sub    DWORD PTR [edx],0x4e8538f
  414c06:	pop    eax
  414c07:	(bad)  
  414c08:	std    
  414c09:	add    esp,0xfbe93f4a
  414c0f:	dec    eax
  414c10:	clc    
  414c11:	cdq    
  414c12:	dec    eax
  414c13:	xchg   edi,eax
  414c14:	cld    
  414c15:	neg    BYTE PTR [ebp+0x66]
  414c18:	pop    esp
  414c19:	popf   
  414c1a:	daa    
  414c1b:	dec    BYTE PTR [esp+ebp*1+0x70e84e6f]
  414c22:	fs (bad) 
  414c24:	std    
  414c25:	(bad)  
  414c26:	sti    
  414c27:	stc    
  414c28:	mov    DWORD PTR [edi+edx*2],esp
  414c2b:	lea    eax,[ebx-0x3b]
  414c2e:	mov    bh,0x61
  414c30:	lock push ecx
  414c32:	jnp    0x414c7e
  414c34:	aas    
  414c35:	jmp    0x1a3995e5
  414c3a:	jg     0x414cab
  414c3c:	cld    
  414c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c3e:	pop    ebp
  414c3f:	data16 fsubr QWORD PTR ds:0x2c8cfe26
	...
  414c52:	add    BYTE PTR [eax],al
  414c54:	add    BYTE PTR [edi+0x4e],ch
  414c57:	call   0xfe40b764
  414c5c:	add    BYTE PTR [ecx-0x53],dh
  414c5f:	stc    
  414c60:	mov    eax,DWORD PTR [edi+0x19]
  414c63:	mov    BYTE PTR [ebp+0x6e],al
  414c66:	sbb    DWORD PTR [eax+esi*8+0x62],0xca414cad
  414c6e:	jl     0x414cb4
  414c70:	clc    
  414c71:	or     bl,BYTE PTR [edx]
  414c73:	inc    esi
  414c74:	cld    
  414c75:	sub    eax,0xdf5c6507
  414c7a:	enter  0x8cfd,0x7
  414c7e:	adc    cl,BYTE PTR [ebp-0x18]
  414c81:	arpl   WORD PTR ds:0x7cc4fffe,cx
  414c87:	inc    esp
  414c88:	clc    
  414c89:	cli    
  414c8a:	sbb    ebp,ebx
  414c8c:	sti    
  414c8d:	cmp    eax,0x92c68207
  414c92:	scas   eax,DWORD PTR es:[edi]
  414c93:	mov    WORD PTR [ebp+0x6a],es
  414c96:	mov    dl,0xe5
  414c98:	rcl    DWORD PTR [ecx+0x7],cl
  414c9b:	(bad)  
  414c9c:	pop    esi
  414c9d:	rol    DWORD PTR [eax-0x5c7a217],0xfd
  414ca4:	push   esp
  414ca5:	add    esp,DWORD PTR ds:0x1beec80
  414cab:	add    BYTE PTR [eax],al
  414cad:	cdq    
  414cae:	stos   DWORD PTR es:[edi],eax
  414caf:	push   esi
  414cb0:	mov    ecx,DWORD PTR [edi+0x3e758af9]
  414cb6:	je     0x414c3c
  414cb8:	add    BYTE PTR [eax],0x0
	...
  414cc7:	add    BYTE PTR [ebx+eax*1],ch
  414cca:	(bad)  
  414ccb:	push   eax
  414ccc:	adc    al,BYTE PTR [ebp+0x0]
  414ccf:	add    BYTE PTR [edx],bh
  414cd1:	lahf   
  414cd2:	std    
  414cd3:	addr16 into 
  414cd5:	mov    ah,0x40
  414cd7:	add    BYTE PTR [edx],ah
  414cd9:	jns    0x414cd6
  414cdb:	(bad)  
  414cdc:	mov    ebp,0x788acfd8
  414ce1:	sub    eax,0xee63414c
  414ce6:	jns    0x414ceb
  414ce8:	xor    DWORD PTR [eax],esi
  414cea:	jg     0x414ce5
  414cec:	imul   eax,DWORD PTR [edx],0x11
  414cef:	(bad)  
  414cf0:	out    0x6,al
  414cf2:	push   es
  414cf3:	(bad)  
  414cf4:	in     al,0xed
  414cf6:	add    DWORD PTR [eax],eax
  414cf8:	arpl   WORD PTR [edi+0x75d388b0],ax
  414cfe:	jge    0x414d73
  414d00:	int    0x5b
  414d02:	add    esi,DWORD PTR [eax]
  414d04:	mov    cl,0x47
  414d06:	aam    0x8a
  414d08:	out    0xd2,al
  414d0a:	add    edi,esi
  414d0c:	mov    ah,0x75
  414d0e:	jge    0x414d8b
  414d10:	lods   eax,DWORD PTR ds:[esi]
  414d11:	cmp    eax,DWORD PTR [ebx]
  414d13:	(bad)  
  414d14:	fidivr WORD PTR [edx+0x679cfe03]
  414d1a:	jne    0x414d97
  414d1c:	xchg   ebp,eax
  414d1d:	and    eax,DWORD PTR [ebx]
  414d1f:	push   cs
  414d20:	int    0xef
  414d22:	sbb    bh,0x4
  414d25:	addr16 inc ebp
  414d27:	jnp    0x414da6
  414d29:	or     eax,DWORD PTR [ebx]
  414d2b:	push   cs
	...
  414d38:	add    BYTE PTR [eax],al
  414d3a:	add    BYTE PTR [ebp-0x24082d3d],ch
  414d40:	in     eax,dx
  414d41:	cmp    eax,DWORD PTR [edx]
  414d43:	arpl   WORD PTR [edi-0x19a67d41],bp
  414d49:	xchg   BYTE PTR [ebx+eiz*8],al
  414d4c:	es add al,0x75
  414d4f:	and    eax,0xb8e7ae34
  414d54:	aam    0x4
  414d56:	(bad)  
  414d57:	loopne 0x414cd9
  414d59:	mov    ebp,edi
  414d5b:	xor    al,0xc3
  414d5d:	add    DWORD PTR [eax-0x59711198],eax
  414d63:	loopne 0x414dd5
  414d65:	mov    ebp,edi
  414d67:	sbb    al,0xab
  414d69:	add    DWORD PTR [ebp-0xb],esi
  414d6c:	add    al,0x74
  414d6e:	jle    0x414cfc
  414d70:	sti    
  414d71:	sahf   
  414d72:	add    al,0x94
  414d74:	in     eax,dx
  414d75:	push   cs
  414d76:	add    esp,DWORD PTR [ebx+0x5]
  414d79:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  414d7b:	cdq    
  414d7c:	mov    ss,WORD PTR [ebx-0x18f2dd5a]
  414d82:	scas   al,BYTE PTR es:[edi]
  414d83:	fndisi(8087 only) 
  414d85:	push   0xe705e817
  414d8a:	add    esi,DWORD PTR [eax]
  414d8c:	push   ebx
  414d8d:	mov    esi,0x720d2f78
  414d92:	mov    ds,WORD PTR [eax-0x76]
  414d95:	ins    BYTE PTR es:[edi],dx
  414d96:	cmp    DWORD PTR [esi-0x434cb105],0xfffffffb
  414d9d:	out    0x3,eax
	...
  414dab:	add    BYTE PTR [eax],al
  414dad:	add    BYTE PTR [ebx+0x6f],ah
  414db0:	out    0x9b,eax
  414db2:	mov    BYTE PTR [ecx-0x58],cl
  414db5:	add    ecx,DWORD PTR [ebx-0x6afbd329]
  414dbb:	xor    eax,0xd8e27939
  414dc0:	lods   al,BYTE PTR ds:[esi]
  414dc1:	ret    0x8384
  414dc4:	jmp    0x414d97
  414dc6:	and    cl,BYTE PTR [eax-0xa070cef]
  414dcc:	cs jle 0x414dc3
  414dcf:	cli    
  414dd0:	inc    BYTE PTR [ebx]
  414dd2:	arpl   WORD PTR ds:0x524803e7,ax
  414dd8:	pusha  
  414dd9:	adc    ebp,ebx
  414ddb:	sbb    BYTE PTR [ebx+0x2],0x4d
  414ddf:	sti    
  414de0:	sbb    dh,dl
  414de2:	cmp    dh,BYTE PTR [esi]
  414de4:	bound  ecx,QWORD PTR [ecx+0x3cefbb7]
  414dea:	jmp    0x414d6c
  414dec:	inc    ebx
  414ded:	add    ch,BYTE PTR ds:0xaf89befb
  414df3:	sti    
  414df4:	add    BYTE PTR [esi+0x2d8b8f60],dh
  414dfa:	popa   
  414dfb:	sti    
  414dfc:	std    
  414dfd:	mul    BYTE PTR [edx]
  414dff:	add    eax,0x8ce08981
  414e04:	mov    ebx,0xfdfb6115
  414e09:	fidivr WORD PTR [edx-0x207ed0c8]
  414e0f:	cli    
  414e10:	ret    
  414e11:	jmp    0x0:0x0
	...
  414e20:	add    BYTE PTR [eax+0x44],ah
  414e23:	inc    edx
  414e24:	push   0xffffffdd
  414e26:	adc    eax,0x3ce0e47b
  414e2b:	add    ah,bl
  414e2d:	call   0xfdf9:0x61515653
  414e34:	push   esi
  414e35:	in     al,0xa6
  414e37:	js     0x414e88
  414e39:	pusha  
  414e3a:	sti    
  414e3b:	add    BYTE PTR [ecx+0x6c],ch
  414e3e:	add    eax,0xbedc8673
  414e43:	js     0x414e7c
  414e45:	pusha  
  414e46:	sti    
  414e47:	add    BYTE PTR [edx+eax*8+0x6169838e],dh
  414e4e:	sti    
  414e4f:	std    
  414e50:	mov    ecx,0xe900a278
  414e55:	pusha  
  414e56:	pop    eax
  414e57:	pop    esi
  414e58:	mov    dl,0xe7
  414e5a:	jmp    0x5a079ba
  414e5f:	push   ecx
  414e60:	xchg   edi,eax
  414e61:	or     DWORD PTR [esp+eax*2-0x769c8f33],ecx
  414e68:	lea    edi,[ecx+edx*1+0x66]
  414e6c:	ins    BYTE PTR es:[edi],dx
  414e6d:	sub    eax,0x1a700976
  414e72:	mov    ?,WORD PTR [eax-0x7]
  414e75:	retf   0xffbf
  414e78:	call   0xcc5bc2
  414e7d:	push   0x11
  414e7f:	test   edi,eax
  414e81:	pushf  
  414e82:	xor    dl,dl
  414e84:	sldt   WORD PTR [eax]
	...
  414e93:	add    BYTE PTR [ebp-0x357cad30],bl
  414e99:	or     eax,0xff7ee850
  414e9e:	sti    
  414e9f:	push   DWORD PTR [edx-0x1b]
  414ea2:	dec    esp
  414ea3:	inc    ecx
  414ea4:	or     ch,dh
  414ea6:	cmp    bh,cl
  414ea8:	in     eax,0x6
  414eaa:	push   cs
  414eab:	mov    bh,0xc1
  414ead:	push   edx
  414eae:	push   ebx
  414eaf:	call   0x3d4d9e
  414eb4:	bound  esp,QWORD PTR [ebp+0x49]
  414eb7:	inc    ecx
  414eb8:	retf   0x26ed
  414ebb:	stc    
  414ebc:	inc    ebp
  414ebd:	pop    es
  414ebe:	push   cs
  414ebf:	mov    bh,0x21
  414ec1:	push   ebx
  414ec2:	push   esi
  414ec3:	call   0x3d4dbe
  414ec8:	add    eax,0xb2c25764
  414ecd:	add    eax,0x21c68b4f
  414ed2:	or     BYTE PTR [ebx+0x22],dl
  414ed5:	or     esi,ebp
  414ed7:	inc    DWORD PTR [ebp-0x7f]
  414eda:	mov    edi,0x57a80
  414edf:	mov    eax,0x3d4a46
  414ee4:	add    DWORD PTR [esi],edx
  414ee6:	test   DWORD PTR [ebx],edx
  414ee8:	or     esi,eax
  414eea:	add    al,0x83
  414eec:	cmp    DWORD PTR [edx],eax
  414eee:	cmp    DWORD PTR [edi+esi*4+0x40],ebx
  414ef2:	add    BYTE PTR [edx+0x65],dh
  414ef5:	mov    esp,0x4d5c
	...
  414f06:	add    BYTE PTR [ebx],cl
  414f08:	add    eax,0x12d31087
  414f0d:	jg     0x414ecf
  414f0f:	cmp    BYTE PTR ds:[edi-0x1fee9cfc],0x4b
  414f17:	mov    ds:0x88ed73ee,al
  414f1c:	lods   al,BYTE PTR ds:[esi]
  414f1d:	or     BYTE PTR [eax],al
  414f1f:	nop
  414f20:	jae    0x414f82
  414f22:	and    al,0x6b
  414f24:	sbb    ebp,esp
  414f26:	call   0x8040f746
  414f2b:	and    BYTE PTR [edi+0x4],ch
  414f2e:	add    BYTE PTR [ebx+0x66],ah
  414f31:	loopne 0x414f7f
  414f33:	mov    ds:0xea118cee,al
  414f38:	inc    BYTE PTR [ecx+eax*8+0x4c46b67]
  414f3f:	sbb    cl,BYTE PTR es:[ebp+0x3f]
  414f43:	arpl   sp,di
  414f45:	lock mov eax,0x411937
  414f4b:	fdivr  st,st(3)
  414f4d:	mov    dl,BYTE PTR [eax]
  414f4f:	loopne 0x414f7c
  414f51:	or     BYTE PTR [ecx-0x23c1155d],al
  414f57:	lods   eax,DWORD PTR es:[esi]
  414f59:	add    DWORD PTR [edx-0x44],esi
  414f5c:	mov    ds:0x916304c3,eax
  414f61:	mov    ah,bl
  414f63:	loopne 0x414fa7
  414f65:	sbb    al,0x51
  414f67:	sub    eax,0x85d63
	...
  414f78:	add    BYTE PTR [eax],al
  414f7a:	fcomp  DWORD PTR [ecx+0x261e8b0d]
  414f80:	push   esp
  414f81:	push   ecx
  414f82:	mov    eax,DWORD PTR [ecx]
  414f84:	cld    
  414f85:	std    
  414f86:	je     0x414fe1
  414f88:	inc    ebp
  414f89:	lock adc esi,DWORD PTR [ecx+0x43]
  414f8d:	or     BYTE PTR [ebx],dl
  414f8f:	push   ss
  414f90:	in     al,0xf8
  414f92:	pop    esp
  414f93:	out    dx,eax
  414f94:	mov    es,WORD PTR [ebx+0x4b]
  414f97:	sahf   
  414f98:	test   cl,al
  414f9a:	jae    0x414fa1
  414f9c:	cmp    ch,ah
  414f9e:	xor    bh,ch
  414fa0:	fiadd  WORD PTR [eax]
  414fa2:	retf   0x2359
  414fa5:	inc    ebx
  414fa6:	arpl   WORD PTR [edx-0x126c03dc],cx
  414fac:	inc    esp
  414fad:	sti    
  414fae:	es clc 
  414fb0:	dec    edi
  414fb1:	pusha  
  414fb2:	scas   eax,DWORD PTR es:[edi]
  414fb3:	inc    esi
  414fb4:	out    0x8e,eax
  414fb6:	mov    al,ds:0x7eec17f5
  414fbb:	(bad)  
  414fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fbd:	add    BYTE PTR [edx+0x59],bh
  414fc0:	sub    eax,DWORD PTR [ebx+0x63]
  414fc3:	mov    ch,BYTE PTR [esp+ebp*8]
  414fc6:	xchg   ebx,eax
  414fc7:	in     eax,dx
  414fc8:	or     bl,bh
  414fca:	out    dx,al
  414fcb:	div    DWORD PTR [edx+0x5e]
  414fce:	out    0x8b,eax
  414fd0:	and    al,0xf4
  414fd2:	in     al,0x41
  414fd4:	jae    0x414f60
  414fd6:	cmp    ch,dh
  414fd8:	bound  ebx,QWORD PTR [esi-0x29]
  414fdb:	mov    ebp,DWORD PTR [ebx+ebp*8+0x0]
	...
  414fea:	add    BYTE PTR [eax],al
  414fec:	add    ah,bl
  414fee:	inc    ecx
  414fef:	push   ebx
  414ff0:	mov    bl,BYTE PTR [eax]
  414ff2:	in     eax,dx
  414ff3:	mov    edi,0xe74627df
  414ff8:	mov    fs,WORD PTR [eax]
  414ffa:	std    
  414ffb:	xchg   edi,eax
  414ffc:	jmp    0x415068
  414ffe:	(bad)  
  414fff:	add    BYTE PTR ds:[edx],cl
  415002:	fldenv [ebx-0x5b759cbe]
  415008:	repz xor ebp,ebp
  41500b:	aam    0xfa
  41500d:	xchg   bh,dh
  41500f:	(bad)  
  415010:	fild   QWORD PTR [edi]
  415012:	inc    esi
  415013:	out    0x8e,eax
  415015:	and    ch,ch
  415017:	mov    bh,0xeb
  415019:	dec    esi
  41501a:	inc    BYTE PTR [esi]
  41501c:	add    cl,bl
  41501e:	pop    ecx
  41501f:	sti    
  415020:	mov    esp,DWORD PTR [eax-0x629fff0b]
  415026:	stc    
  415027:	xchg   DWORD PTR [eax+edx*2-0x2722a473],ecx
  41502e:	inc    edx
  41502f:	call   0x8832faa4
  415034:	xor    al,0x47
  415036:	outs   dx,BYTE PTR ds:[esi]
  415037:	pop    esp
  415038:	sbb    al,0xa6
  41503a:	add    eax,0x56272c8b
  41503f:	call   0xfe3a7004
  415044:	inc    ecx
  415045:	or     DWORD PTR [edx+0x3f],0xffffffe9
  415049:	repz inc edx
  41504b:	lock cmp edi,esi
  41504e:	in     al,dx
  41504f:	clc    
  415050:	sahf   
	...
  41505d:	add    BYTE PTR [eax],al
  41505f:	add    ah,bh
  415061:	ins    DWORD PTR es:[edi],dx
  415062:	pop    esp
  415063:	and    al,0x9e
  415065:	add    eax,0x55ff248b
  41506a:	call   0xfe3a3813
  41506f:	pop    ss
  415070:	repnz inc edx
  415072:	clc    
  415073:	sbb    edi,eax
  415075:	cmp    eax,0x468acc6e
  41507b:	icebp  
  41507c:	xor    BYTE PTR [edx-0x12e8a6bd],cl
  415082:	jne    0x4150d5
  415084:	mov    ah,0xf8
  415086:	and    DWORD PTR [edi],0xac8b4f57
  41508c:	mov    eax,0x98d3e855
  415091:	clc    
  415092:	std    
  415093:	xchg   edi,eax
  415094:	cmp    DWORD PTR [esi-0x14],edi
  415097:	mov    WORD PTR [edx-0x2843fff3],fs
  41509d:	loop   0x41511e
  41509f:	or     eax,0xe9fdf6d3
  4150a4:	adc    DWORD PTR [edi+0x55],ecx
  4150a7:	bound  eax,QWORD PTR [edx]
  4150a9:	or     eax,0x5e70089
  4150ae:	mov    DWORD PTR [ebp-0x40836],eax
  4150b4:	cli    
  4150b5:	jmp    0xf77f4f0e
  4150ba:	push   0x0
  4150bc:	mov    dl,0xe5
  4150be:	dec    ecx
  4150bf:	inc    ecx
  4150c0:	dec    edx
  4150c1:	jmp    0x0:0xfde5
	...
  4150d0:	add    BYTE PTR [eax],al
  4150d2:	add    BYTE PTR ds:0xc0d22df7,cl
  4150d8:	test   ah,bl
  4150da:	dec    ebp
  4150db:	jnp    0x4150de
  4150dd:	mov    BYTE PTR [eax+ebx*1],al
  4150e0:	inc    esp
  4150e1:	jg     0x4150dd
  4150e3:	xor    dh,BYTE PTR [esi-0x13]
  4150e6:	mov    DWORD PTR [edi-0x42000186],0xa000000
  4150f0:	jmp    0x415146
  4150f2:	mov    edx,ebx
  4150f4:	mov    BYTE PTR [ecx-0x409238c],al
  4150fa:	xor    eax,ecx
  4150fc:	jmp    0xfffe:0x6e478b30
  415103:	dec    ebp
  415104:	mov    DWORD PTR [ecx-0x408c384],eax
  41510a:	push   DWORD PTR [edi]
  41510c:	outs   dx,BYTE PTR ds:[esi]
  41510d:	(bad)  
  41510e:	call   FWORD PTR ds:0xc7c898b
  415114:	idiv   ebx
  415116:	paddusb mm0,QWORD PTR [edx]
  415119:	jg     0x4150fb
  41511b:	popf   
  41511c:	mov    bh,BYTE PTR [ecx-0x408a384]
  415122:	unpcklps xmm6,XMMWORD PTR [edi]
  415125:	sub    eax,0xc60102f8
  41512a:	add    edi,DWORD PTR [edx+0x42]
  41512d:	inc    edx
  41512e:	add    DWORD PTR [eax+0x1a],0x79
  415132:	add    eax,0x3a6c63
	...
  415143:	add    BYTE PTR [eax],al
  415145:	add    dh,dh
  415147:	sbb    eax,0x8b7b5653
  41514c:	sti    
  41514d:	std    
  41514e:	pop    esp
  41514f:	pusha  
  415150:	test   al,0x78
  415152:	push   ebp
  415153:	cld    
  415154:	sti    
  415155:	add    bl,ah
  415157:	mov    bh,0x1
  415159:	jae    0x415157
  41515b:	pop    edi
  41515c:	mov    ebp,0xfbd43d78
  415161:	add    BYTE PTR [esi-0x1c7c7284],ch
  415167:	(bad)  
  415168:	sti    
  415169:	std    
  41516a:	xchg   ebx,eax
  41516b:	(bad)  
  41516c:	(bad)  
  41516d:	sti    
  41516e:	sbb    al,0xb4
  415170:	pop    ebx
  415171:	pop    esi
  415172:	mov    eax,0x215bf065
  415177:	out    0x1,eax
  415179:	push   ebx
  41517a:	fiadd  DWORD PTR [ecx+0x3c905054]
  415180:	xchg   DWORD PTR [ebx+0x6b],edx
  415183:	addr16 pop ebp
  415185:	or     al,0xd8
  415187:	sbb    DWORD PTR [edi+ebp*1],edx
  41518a:	sbb    bh,BYTE PTR [ecx+0x8]
  41518d:	por    mm5,QWORD PTR [edx]
  415190:	or     eax,0x12e2e9f8
  415195:	mov    BYTE PTR [edi-0x2b],ah
  415198:	inc    edx
  415199:	or     edx,0x10eb7df6
  41519f:	mov    al,0xe9
  4151a1:	lods   al,BYTE PTR ds:[esi]
  4151a2:	mov    ecx,0x912ffb5b
  4151a7:	push   ecx
  4151a8:	adc    BYTE PTR [edx],bl
	...
  4151b6:	add    BYTE PTR [eax],al
  4151b8:	add    cl,bl
  4151ba:	loop   0x4151eb
  4151bc:	xor    ah,BYTE PTR [edx+0x76]
  4151bf:	add    DWORD PTR [edx-0x20],eax
  4151c2:	cmp    BYTE PTR [esp+edi*2],cl
  4151c5:	xchg   ebx,eax
  4151c6:	in     eax,dx
  4151c7:	iret   
  4151c8:	mov    bl,BYTE PTR [edi]
  4151ca:	add    eax,0x9ebfbfc
  4151cf:	fld    DWORD PTR [ecx-0x1e]
  4151d2:	out    dx,eax
  4151d3:	fistp  QWORD PTR [edi+0x72]
  4151d6:	push   ebx
  4151d7:	mov    dl,0x8a
  4151d9:	ja     0x41522d
  4151db:	sub    DWORD PTR [eax],edx
  4151dd:	arpl   WORD PTR ds:0x56303e7,ax
  4151e3:	out    0x3,eax
  4151e5:	arpl   WORD PTR ds:0x56303e7,ax
  4151eb:	out    0x3,eax
  4151ed:	arpl   WORD PTR ds:0x56303e7,ax
  4151f3:	out    0x3,eax
  4151f5:	arpl   WORD PTR ds:0x56303e7,ax
  4151fb:	out    0x3,eax
  4151fd:	arpl   WORD PTR ds:0x56303e7,ax
  415203:	out    0x3,eax
  415205:	arpl   WORD PTR ds:0x56303e7,ax
  41520b:	out    0x3,eax
  41520d:	arpl   WORD PTR ds:0x56303e7,ax
  415213:	out    0x3,eax
  415215:	arpl   WORD PTR ds:0x56303e7,ax
  41521b:	out    0x3,eax
	...
  415229:	add    BYTE PTR [eax],al
  41522b:	add    BYTE PTR [ebx+0x5],ah
  41522e:	out    0x3,eax
  415230:	arpl   WORD PTR ds:0x56303e7,ax
  415236:	out    0x3,eax
  415238:	arpl   WORD PTR ds:0x56303e7,ax
  41523e:	out    0x3,eax
  415240:	arpl   WORD PTR ds:0x56303e7,ax
  415246:	out    0x3,eax
  415248:	arpl   WORD PTR ds:0x56303e7,ax
  41524e:	out    0x3,eax
  415250:	arpl   WORD PTR ds:0x560e900,ax
  415256:	add    cl,ch
  415258:	pusha  
  415259:	add    eax,0x560e900
  41525e:	add    cl,ch
  415260:	pusha  
  415261:	add    eax,0x5ae400
  415266:	or     cl,BYTE PTR [eax-0x7498bef0]
  41526c:	cmp    BYTE PTR [ebx+0x2f],0xcf
  415270:	nop
  415271:	and    ah,BYTE PTR [eax]
  415273:	leave  
  415274:	jge    0x41529b
  415276:	and    BYTE PTR [ebp-0x48],dh
  415279:	data16 and BYTE PTR [edx-0x36],bl
  41527d:	push   edx
  41527e:	ins    BYTE PTR es:[edi],dx
  41527f:	dec    ebp
  415280:	ret    0x2077
  415283:	pop    ebp
  415284:	mov    edi,0xc24b2066
  415289:	jns    0x4152ff
  41528b:	dec    esp
  41528c:	xchg   ebp,eax
  41528d:	and    eax,0x103a
	...
  41529e:	add    BYTE PTR [edx-0x1],ch
  4152a1:	inc    eax
  4152a2:	inc    esi
  4152a3:	xchg   edi,eax
  4152a4:	jp     0x415318
  4152a6:	inc    eax
  4152a7:	sbb    BYTE PTR [ebp+0x74],0xc9
  4152ab:	dec    eax
  4152ac:	fs daa 
  4152ae:	leave  
  4152af:	das    
  4152b0:	cmp    dh,BYTE PTR [edi]
  4152b2:	sar    DWORD PTR [ebx],1
  4152b4:	aaa    
  4152b5:	xor    cl,bl
  4152b7:	daa    
  4152b8:	and    eax,0x3f870062
  4152bd:	ins    DWORD PTR es:[edi],dx
  4152be:	add    al,0x4d
  4152c0:	push   0x4a870763
  4152c5:	(bad)  
  4152c6:	cli    
  4152c7:	inc    ebx
  4152c8:	arpl   WORD PTR [ecx+ecx*1],bp
  4152cb:	es popa 
  4152cd:	ins    BYTE PTR es:[edi],dx
  4152ce:	or     DWORD PTR ds:0x3cc1656a,ecx
  4152d4:	je     0x4152f6
  4152d6:	mov    ebx,0x637443
  4152db:	fdiv   DWORD PTR [ecx+eiz*2+0x64]
  4152df:	fs cld 
  4152e1:	or     DWORD PTR ds:0x726b3d80,ecx
  4152e7:	lahf   
  4152e8:	es outs dx,BYTE PTR gs:[esi]
  4152eb:	in     al,dx
  4152ec:	pop    edi
  4152ed:	jb     0x41535c
  4152ef:	jmp    0x415353
  4152f1:	outs   dx,DWORD PTR gs:[esi]
  4152f3:	in     al,0x30
  4152f5:	and    BYTE PTR [eax-0x32],ch
  4152f8:	bound  esi,QWORD PTR [eax+0x3a]
  4152fb:	xor    eax,0xcd77731f
  415300:	sbb    al,0x65
  415302:	bound  eax,QWORD PTR [eax]
	...
  415310:	add    BYTE PTR [eax],al
  415312:	leave  
  415313:	outs   dx,BYTE PTR gs:[esi]
  415315:	jae    0x4152dc
  415317:	fs je  0x415391
  41531a:	stos   DWORD PTR es:[edi],eax
  41531b:	jnp    0x41537e
  41531d:	cs test eax,0x472f695e
  415323:	add    BYTE PTR [ecx],cl
  415325:	or     bh,BYTE PTR [edx]
  415327:	push   es
  415328:	add    BYTE PTR [eax],al
  41532a:	or     al,BYTE PTR [esi]
  41532c:	add    BYTE PTR [eax],al
  41532e:	or     al,BYTE PTR [esi]
  415330:	add    BYTE PTR [eax],al
  415332:	cli    
  415333:	add    eax,0x5fa0000
  415338:	add    BYTE PTR [eax],al
  41533a:	or     al,BYTE PTR [esi]
  41533c:	add    BYTE PTR [eax],al
  41533e:	or     al,BYTE PTR [esi]
  415340:	add    BYTE PTR [eax],al
  415342:	cli    
  415343:	add    eax,0x5fa0000
  415348:	add    BYTE PTR [eax],al
  41534a:	retf   0x5
  41534d:	add    dl,cl
  41534f:	add    eax,0x5ba0000
  415354:	add    BYTE PTR [eax],al
  415356:	mov    edx,0xca000005
  41535b:	add    eax,0x5ca0000
  415360:	add    BYTE PTR [eax],al
  415362:	arpl   WORD PTR [ecx+0x1d384eb2],bx
  415368:	and    BYTE PTR [ebx],ch
  41536a:	addr16 xor cl,bh
  41536d:	push   esp
  41536e:	xchg   DWORD PTR [eax],edx
  415370:	mov    ds:0x80cb3e62,eax
  415375:	or     DWORD PTR [eax],eax
	...
  415383:	add    BYTE PTR [eax],al
  415385:	sub    al,0xf1
  415387:	or     ecx,DWORD PTR [eax]
  415389:	push   edx
  41538a:	mov    al,ds:0xb37f680a
  41538f:	jnp    0x4153e2
  415391:	fstp   st(3)
  415393:	add    DWORD PTR [eax],eax
  415395:	arpl   sp,bx
  415397:	add    DWORD PTR [eax],eax
  415399:	arpl   si,bx
  41539b:	add    DWORD PTR [eax],eax
  41539d:	arpl   si,bx
  41539f:	add    DWORD PTR [eax],eax
  4153a1:	arpl   si,bx
  4153a3:	add    DWORD PTR [eax],eax
  4153a5:	arpl   si,bx
  4153a7:	add    DWORD PTR [eax],eax
  4153a9:	arpl   si,bx
  4153ab:	add    DWORD PTR [eax],eax
  4153ad:	arpl   si,bx
  4153af:	add    DWORD PTR [eax],eax
  4153b1:	arpl   si,bx
  4153b3:	add    DWORD PTR [eax],eax
  4153b5:	arpl   si,bx
  4153b7:	add    DWORD PTR [eax],eax
  4153b9:	arpl   si,bx
  4153bb:	add    DWORD PTR [eax],eax
  4153bd:	arpl   si,bx
  4153bf:	add    DWORD PTR [eax],eax
  4153c1:	arpl   si,bx
  4153c3:	add    DWORD PTR [eax],eax
  4153c5:	arpl   si,bx
  4153c7:	add    DWORD PTR [eax],eax
  4153c9:	arpl   si,bx
  4153cb:	add    DWORD PTR [eax],eax
  4153cd:	arpl   si,bx
  4153cf:	add    DWORD PTR [eax],eax
  4153d1:	arpl   si,bx
  4153d3:	add    DWORD PTR [eax],eax
  4153d5:	arpl   si,bx
  4153d7:	add    DWORD PTR [eax],eax
  4153d9:	arpl   si,bx
  4153db:	add    DWORD PTR [eax],eax
  4153dd:	arpl   si,bx
  4153df:	add    DWORD PTR [eax],eax
  4153e1:	arpl   si,bx
  4153e3:	add    DWORD PTR [eax],eax
  4153e5:	arpl   si,bx
  4153e7:	add    DWORD PTR [eax],eax
	...
  4153f5:	add    BYTE PTR [eax],al
  4153f7:	add    BYTE PTR [ebx+0x5],ah
  4153fa:	out    0x3,eax
  4153fc:	arpl   WORD PTR ds:0x56303e7,ax
  415402:	out    0x3,eax
  415404:	arpl   WORD PTR ds:0x56303e7,ax
  41540a:	out    0x3,eax
  41540c:	arpl   WORD PTR ds:0x56303e7,ax
  415412:	out    0x3,eax
  415414:	arpl   WORD PTR ds:0x56303e7,ax
  41541a:	out    0x3,eax
  41541c:	arpl   WORD PTR ds:0x56303e7,ax
  415422:	out    0x3,eax
  415424:	arpl   WORD PTR ds:0x56303e7,ax
  41542a:	out    0x3,eax
  41542c:	arpl   WORD PTR ds:0x56303e7,ax
  415432:	out    0x3,eax
  415434:	arpl   WORD PTR ds:0x56303e7,ax
  41543a:	out    0x3,eax
  41543c:	arpl   WORD PTR ds:0x56303e7,ax
  415442:	out    0x3,eax
  415444:	arpl   WORD PTR ds:0x56303e7,ax
  41544a:	out    0x3,eax
  41544c:	arpl   WORD PTR ds:0x56303e7,ax
  415452:	out    0x3,eax
  415454:	arpl   WORD PTR ds:0x56303e7,ax
  41545a:	out    0x3,eax
	...
  415468:	add    BYTE PTR [eax],al
  41546a:	add    BYTE PTR [ebx+0x5],ah
  41546d:	out    0x3,eax
  41546f:	arpl   WORD PTR ds:0x56303e7,ax
  415475:	out    0x3,eax
  415477:	arpl   WORD PTR ds:0x56303e7,ax
  41547d:	out    0x3,eax
  41547f:	arpl   WORD PTR ds:0x560e900,ax
  415485:	add    cl,ch
  415487:	pusha  
  415488:	add    eax,0x560e900
  41548d:	add    cl,ch
  41548f:	pusha  
  415490:	add    eax,0x560e900
  415495:	add    cl,ch
  415497:	pusha  
  415498:	add    eax,0x560e900
  41549d:	add    cl,ch
  41549f:	pusha  
  4154a0:	add    eax,0x560e900
  4154a5:	add    cl,ch
  4154a7:	pusha  
  4154a8:	add    eax,0x560e900
  4154ad:	add    cl,ch
  4154af:	pusha  
  4154b0:	add    eax,0x362ed800
  4154b5:	xor    al,0xd4
  4154b7:	xchg   edx,eax
  4154b8:	add    eax,0x74cf8870
  4154bd:	jne    0x41544d
  4154bf:	(bad)  
  4154c0:	imul   eax,DWORD PTR [eax],0x6275b879
  4154c6:	mov    esp,DWORD PTR [eax+0x5e]
  4154c9:	jne    0x415517
  4154cb:	mov    cl,0x79
  4154cd:	ja     0x4154b8
	...
  4154db:	add    BYTE PTR [eax],al
  4154dd:	add    BYTE PTR [edi+0x33],dh
  4154e0:	xor    DWORD PTR ds:0x446a0572,ebx
  4154e6:	nop
  4154e7:	jb     0x41555a
  4154e9:	jmp    0xf572883d
  4154ee:	push   ebx
  4154ef:	aaa    
  4154f0:	xor    eax,0x321e60f1
  4154f5:	cli    
  4154f6:	dec    esp
  4154f7:	add    eax,0x1e800b5f
  4154fc:	xor    bl,dl
  4154fe:	pusha  
  4154ff:	popa   
  415500:	arpl   WORD PTR ds:0xff67627a,bx
  415506:	pusha  
  415507:	jns    0x41556c
  415509:	add    cl,bl
  41550b:	pop    esi
  41550c:	add    BYTE PTR [ebp+ebx*2+0x5f],ch
  415510:	popa   
  415511:	add    BYTE PTR [ebx],cl
  415513:	xor    eax,0x69ba002f
  415518:	outs   dx,DWORD PTR ds:[esi]
  415519:	jae    0x4154b0
  41551b:	addr16 jb 0x415582
  41551e:	dec    ebx
  41551f:	or     DWORD PTR [eax+0x65],ebp
  415522:	sahf   
  415523:	imul   ax,WORD PTR [eax],0xffdf
  415527:	outs   dx,BYTE PTR ds:[si]
  415529:	imul   esp,DWORD PTR [edi-0x379bff8f],0x69
  415530:	arpl   WORD PTR [edi-0x64],bp
  415533:	add    dh,BYTE PTR [edx+esi*2-0x49]
  415537:	jae    0x4155ad
  415539:	outs   dx,BYTE PTR ds:[esi]
  41553a:	int    0x39
  41553c:	add    BYTE PTR [ecx],dh
  41553e:	mov    edi,DWORD PTR [ecx]
  415540:	sub    eax,0x31
	...
  415551:	mov    eax,DWORD PTR [edx]
  415553:	gs ins BYTE PTR es:[edi],dx
  415555:	frstor [eax+0x61]
  415558:	jns    0x415547
  41555a:	je     0x41555c
  41555c:	xor    DWORD PTR [eax],ecx
  41555e:	xor    esi,DWORD PTR [esi*1+0x73001f04]
  415565:	loop   0x4155cf
  415567:	outs   dx,DWORD PTR fs:[esi]
  415569:	xchg   ebp,eax
  41556a:	or     DWORD PTR ds:0x31354932,ebp
  415570:	ss inc ebp
  415572:	xor    DWORD PTR ds:0x7261a900,esi
  415578:	imul   ebx,DWORD PTR [ecx+0x75],0x67577300
  41557f:	outs   dx,DWORD PTR ds:[esi]
  415580:	push   0x6167a3
  415585:	aas    
  415586:	push   0x7367746f
  41558b:	add    BYTE PTR [ebx+0x5d],ah
  41558e:	pop    esp
  41558f:	jo     0x415606
  415591:	arpl   WORD PTR [eax],dx
  415593:	pop    edi
  415594:	jb     0x4155f9
  415596:	or     al,0x72
  415598:	addr16 inc ebp
  41559a:	sti    
  41559b:	pop    esi
  41559c:	jno    0x4155ee
  41559e:	fsubr  QWORD PTR [ebp+0x67]
  4155a1:	cmp    al,0xff
  4155a3:	pop    esi
  4155a4:	jb     0x415609
  4155a6:	push   es
  4155a7:	gs ins DWORD PTR es:[edi],dx
  4155a9:	das    
  4155aa:	mov    edx,0xdc3f6c64
  4155af:	outs   dx,BYTE PTR fs:[esi]
  4155b1:	cmp    al,0xc1
  4155b3:	add    BYTE PTR gs:[eax],al
	...
  4155c2:	add    BYTE PTR [eax],al
  4155c4:	or     ecx,ecx
  4155c6:	jb     0x41563b
  4155c8:	adc    ch,ch
  4155ca:	add    DWORD PTR [edi],ebp
  4155cc:	push   ecx
  4155cd:	jmp    0x415603
  4155cf:	xor    dl,BYTE PTR [eax-0x24]
  4155d2:	outs   dx,BYTE PTR ds:[esi]
  4155d3:	push   0x7660b802
  4155d8:	dec    BYTE PTR [ecx-0x770e99ff]
  4155de:	pusha  
  4155df:	fs hlt 
  4155e1:	mov    BYTE PTR [ecx],al
  4155e3:	imul   ecx,edx,0xd163656a
  4155e9:	fisub  WORD PTR [ecx+esi*2-0x39]
  4155ed:	test   BYTE PTR [ecx],al
  4155ef:	jno    0x4155a5
  4155f1:	jg     0x415655
  4155f3:	arpl   WORD PTR [ecx-0x4c8c8d22],si
  4155f9:	cmp    DWORD PTR [edx+0x6b],esi
  4155fc:	ret    0x43c
  4155ff:	imul   edi,DWORD PTR [edx-0x79a093c1],0x2a
  415606:	add    al,0x61
  415608:	mov    edi,DWORD PTR [ecx]
  41560a:	pop    ebp
  41560b:	jno    0x415593
  41560d:	fisubr WORD PTR [edx+0x6e]
  415610:	(bad)  
  415611:	cmp    DWORD PTR [edx+0x6e],esi
  415614:	xchg   BYTE PTR [edx],dh
  415616:	add    al,0x6a
  415618:	test   BYTE PTR ds:0x66706c1a,al
  41561e:	out    0x5d,eax
  415620:	jo     0x41568a
  415622:	add    bh,BYTE PTR [ebx+0x4e]
  415625:	jb     0x41560e
  415627:	popa   
	...
  415634:	add    BYTE PTR [eax],al
  415636:	add    BYTE PTR [edi+0x62],al
  415639:	cli    
  41563a:	jo     0x41567c
  41563c:	popa   
  41563d:	out    0x61,eax
  41563f:	and    al,0x78
  415641:	or     al,0x62
  415643:	sbb    al,0x59
  415645:	sti    
  415646:	add    esi,DWORD PTR [edx]
  415648:	jno    0x415612
  41564a:	jno    0x415682
  41564c:	fnstenvw [eax+0x63]
  415650:	xor    eax,0x35533417
  415655:	pop    ss
  415656:	add    al,0x13
  415658:	jb     0x415613
  41565a:	jae    0x41565b
  41565c:	popa   
  41565d:	out    0x69,eax
  41565f:	div    BYTE PTR [esi-0x35]
  415662:	bound  ecx,QWORD PTR ds:0xfc62c505
  415668:	jo     0x4155f9
  41566a:	add    esi,edx
  41566c:	jno    0x4155fa
  41566e:	data16 add BYTE PTR [edi-0x19],dh
  415672:	(bad)
  415677:	int3   
  415678:	add    eax,0x71d26e89
  41567d:	test   BYTE PTR [ecx+0x63],dh
  415680:	pop    ebp
  415681:	mov    WORD PTR [edx-0x4b],fs
  415684:	bound  edi,QWORD PTR [ebp+0x3]
  415687:	mov    bl,0x62
  415689:	push   edi
  41568a:	je     0x41564c
  41568c:	ja     0x415675
  41568e:	sub    al,0x6e
  415690:	xor    al,0x1e
  415692:	sub    eax,0x6be73456
  415697:	nop
  415698:	pop    ebx
  415699:	cmp    ebx,DWORD PTR [edi+0x0]
	...
  4156a8:	add    BYTE PTR [eax],al
  4156aa:	xchg   ecx,eax
  4156ab:	add    eax,0x628d654b
  4156b0:	add    BYTE PTR [ebp+0x78],al
  4156b3:	add    eax,0x77833f5f
  4156b8:	arpl   WORD PTR [esi],bx
  4156ba:	addr16 jno 0x415725
  4156bd:	push   cs
  4156be:	jl     0x41570c
  4156c0:	jno    0x4156ab
  4156c2:	inc    ecx
  4156c3:	pop    ebx
  4156c4:	gs add al,0x4b
  4156c7:	jbe    0x4156c9
  4156c9:	or     bh,BYTE PTR [edi]
  4156cb:	dec    esp
  4156cc:	jb     0x4156db
  4156ce:	cmp    BYTE PTR [eax+0x0],ch
  4156d1:	or     eax,0x4675b40
  4156d6:	dec    ebx
  4156d7:	add    eax,0x1c70182f
  4156dc:	add    bl,dl
  4156de:	add    eax,0x3ec06e5b
  4156e3:	push   0x6413e972
  4156e8:	outs   dx,BYTE PTR ds:[esi]
  4156e9:	into   
  4156ea:	add    al,0x68
  4156ec:	add    cl,dl
  4156ee:	add    DWORD PTR [ebx+0x6e],ebx
  4156f1:	enter  0x508,0x6f
  4156f5:	enter  0x71fa,0x71
  4156f9:	mov    eax,ds:0x995f5d60
  4156fe:	lock jae 0x415701
  415701:	test   cl,al
  415703:	jno    0x415777
  415705:	sbb    al,0x5
  415708:	jo     0x415692
  41570a:	shl    DWORD PTR [eax+eax*1-0x78],cl
	...
  41571a:	add    BYTE PTR [eax],al
  41571c:	add    cl,al
  41571e:	dec    edx
  41571f:	pop    edi
  415720:	mov    cl,al
  415722:	add    eax,0x3484b436
  415727:	xor    bl,BYTE PTR [eax]
  415729:	addr16 dec edx
  41572b:	imul   ecx,DWORD PTR [eax-0x3f],0x61
  41572f:	pop    edi
  415730:	jmp    0x41b5afb7
  415735:	mov    dh,0x5b
  415737:	gs add dl,bh
  41573a:	pop    edi
  41573b:	outs   dx,BYTE PTR gs:[esi]
  41573d:	popf   
  41573e:	pop    esp
  41573f:	jb     0x415741
  415741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415742:	data16 je 0x4157ad
  415745:	lahf   
  415746:	jae    0x415748
  415748:	jae    0x41579e
  41574a:	imul   si,WORD PTR [eax+0x43],0x1
  41574f:	push   0x65
  415751:	jns    0x4157c5
  415753:	arpl   WORD PTR gs:[ebx+0x1],bp
  415757:	jae    0x4157be
  415759:	jbe    0x4157bd
  41575b:	imul   ebp,DWORD PTR [ebp+0x5f],0x1
  41575f:	jo     0x4157d0
  415761:	popa   
  415762:	pop    esp
  415763:	imul   ebp,DWORD PTR [edi-0x4c],0x956c6506
  41576a:	ins    BYTE PTR es:[edi],dx
  41576b:	popa   
  41576c:	jns    0x415703
  41576e:	ins    DWORD PTR es:[edi],dx
  41576f:	sub    eax,0x2d307b00
  415774:	xor    DWORD PTR [ebx+0x1],edi
  415777:	imul   esi,DWORD PTR [ebp-0x37],0x9d6e5d72
  41577e:	push   es
  41577f:	push   0x65
	...
  415790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415791:	jbe    0x4157fc
  415793:	mov    cl,BYTE PTR gs:[eax+0x71]
  415797:	jae    0x415767
  415799:	dec    ecx
  41579a:	outs   dx,BYTE PTR ds:[esi]
  41579b:	add    al,dl
  41579d:	popa   
  41579e:	outs   dx,DWORD PTR ds:[esi]
  41579f:	ins    DWORD PTR es:[edi],dx
  4157a0:	jecxz  0x415805
  4157a2:	popa   
  4157a3:	add    ch,dl
  4157a5:	jo     0x415804
  4157a7:	outs   dx,BYTE PTR ds:[esi]
  4157a8:	fstp   QWORD PTR [eax+eax*1+0x74]
  4157ac:	fbstp  TBYTE PTR [edx+0x74]
  4157af:	imul   esp,esp,0xba61005e
  4157b5:	jbe    0x415823
  4157b7:	cmp    ah,BYTE PTR gs:[ebp+0x65]
  4157bb:	arpl   WORD PTR [edx+0x636c6c5c],dx
  4157c1:	cmp    DWORD PTR [eax+esi*2],eax
  4157c4:	jle    0x415803
  4157c6:	arpl   WORD PTR gs:[ebx+0x2f],sp
  4157ca:	addr16 popa 
  4157cc:	xchg   ecx,eax
  4157cd:	inc    ecx
  4157ce:	js     0x4157d0
  4157d0:	xor    bl,ah
  4157d2:	push   0x72
  4157d4:	cmp    BYTE PTR [edi],0x67
  4157d7:	add    BYTE PTR [ebp+edx*1+0x60],dh
  4157db:	ins    BYTE PTR es:[edi],dx
  4157dc:	jp     0x4157db
  4157de:	pop    esi
  4157df:	add    BYTE PTR [edx+0x0],cl
  4157e2:	popa   
  4157e3:	jbe    0x415823
  4157e5:	adc    eax,0xdc917361
  4157ea:	pop    edi
  4157eb:	addr16 inc eax
  4157ed:	sti    
  4157ee:	pop    edi
  4157ef:	arpl   WORD PTR [ebx-0x56],sp
  4157f2:	aaa    
  4157f3:	add    BYTE PTR ss:[eax],al
	...
  415802:	add    BYTE PTR [ebp-0x4e],ch
  415805:	aaa    
  415806:	add    BYTE PTR [esi],bh
  415808:	leave  
  415809:	data16 cmp bh,BYTE PTR [bp+si+0x6501]
  41580f:	add    cl,al
  415811:	push   0x1d50275
  415816:	pushw  ss
  415818:	mov    edi,0xb0f4775e
  41581d:	xor    al,0x0
  41581f:	add    ch,BYTE PTR [edi-0x57fb978a]
  415825:	push   0x597cfb00
  41582a:	pop    edi
  41582b:	sti    
  41582c:	jl     0x41582f
  41582e:	jo     0x4157fc
  415830:	jg     0x4158a3
  415832:	add    cl,al
  415834:	push   0x68
  415836:	jno    0x415808
  415838:	xchg   ebp,eax
  415839:	pop    edi
  41583a:	arpl   WORD PTR gs:[ebp+ebx*2+0x5f],di
  41583f:	retf   
  415840:	jl     0x41589f
  415842:	pop    edi
  415843:	retf   
  415844:	fisub  WORD PTR [eax+0x77]
  415847:	mov    al,0x5
  415849:	push   edi
  41584a:	arpl   dx,ax
  41584c:	bound  ebx,QWORD PTR [eax]
  41584e:	add    al,0x88
  415850:	pop    bx
  415852:	js     0x4157df
  415854:	bound  edx,QWORD PTR [esi+0x4]
  415857:	and    BYTE PTR [esi+0x55],0x63
  41585b:	jg     0x4158c3
  41585d:	out    0x74,eax
  41585f:	test   BYTE PTR [ecx+0x3d],bl
  415862:	addr16 jno 0x41586a
  415865:	cmp    DWORD PTR [ecx+0x0],esp
	...
  415874:	add    BYTE PTR [eax],al
  415876:	and    DWORD PTR [edx+0x19],0xe5f6378
  41587d:	jbe    0x4158bf
  41587f:	outs   dx,DWORD PTR ds:[esi]
  415880:	or     al,0x76
  415882:	arpl   WORD PTR [esi+0x1a],sp
  415885:	push   0x40f6045
  41588a:	push   ecx
  41588b:	data16 or bl,BYTE PTR [eax+eax*2+0x59]
  415890:	out    0x75,eax
  415892:	adc    al,0x5e
  415894:	std    
  415895:	gs ds jo 0x415880
  415899:	push   0x62d35e30
  41589e:	adc    DWORD PTR ds:0x573466d7,eax
  4158a4:	aam    0x77
  4158a6:	arpl   WORD PTR [ebx-0x38],sp
  4158a9:	ja     0x4158a3
  4158ab:	gs int 0x3
  4158ae:	add    bl,BYTE PTR [eax-0x3a]
  4158b1:	pop    esp
  4158b2:	cld    
  4158b3:	popa   
  4158b4:	out    0x65,eax
  4158b6:	or     al,0x5e
  4158b8:	xchg   ebx,eax
  4158b9:	data16 in al,dx
  4158bb:	add    al,0x9a
  4158bd:	pusha  
  4158be:	ret    0x8c64
  4158c1:	jne    0x415847
  4158c3:	add    eax,0x5cc25a7c
  4158c8:	mov    WORD PTR [edx+0x63],gs
  4158cb:	arpl   WORD PTR [eax+0x5ac077],dx
  4158d1:	mov    WORD PTR [eax+0x5d],fs
  4158d4:	arpl   WORD PTR [ebp-0x74],di
  4158d7:	pop    edx
  4158d8:	das    
  4158d9:	jmp    0x4158de
	...
  4158e6:	add    BYTE PTR [eax],al
  4158e8:	add    BYTE PTR [ebp-0x7bb098a4],bh
  4158ee:	pop    esp
  4158ef:	add    BYTE PTR [ebp-0x80],cl
  4158f2:	pop    esi
  4158f3:	ins    DWORD PTR es:[edi],dx
  4158f4:	push   ebp
  4158f5:	add    BYTE PTR ds:0x48a44871,0x6e
  4158fc:	xor    eax,0x4a00489f
  415901:	sbb    BYTE PTR [eax+esi*2+0x48],0x70
  415906:	add    eax,0x5c801064
  41590b:	ins    DWORD PTR es:[edi],dx
  41590c:	cmovnp eax,DWORD PTR ds:0x59480874
  415913:	ins    DWORD PTR es:[edi],dx
  415914:	sbb    esp,DWORD PTR [edi+0x5f]
  415917:	ins    DWORD PTR es:[edi],dx
  415918:	sti    
  415919:	dec    ebp
  41591a:	pop    esp
  41591b:	add    BYTE PTR [ebx],dl
  41591d:	inc    edx
  41591e:	pop    ebp
  41591f:	outs   dx,BYTE PTR ds:[esi]
  415920:	mov    edx,0xfb002f71
  415925:	or     DWORD PTR [esi+0x68],esp
  415928:	enter  0x612e,0x0
  41592c:	retf   
  41592d:	cmp    al,0x60
  41592f:	outs   dx,BYTE PTR ds:[esi]
  415930:	ret    0x2d51
  415933:	xor    ch,cl
  415935:	adc    BYTE PTR [edi+ebx*2-0x36],ah
  415939:	sub    BYTE PTR [ecx+esi*2-0x17],ah
  41593d:	pop    es
  41593e:	pop    edx
  41593f:	ins    DWORD PTR es:[edi],dx
  415940:	lds    esp,FWORD PTR [eax+0x5f]
  415943:	ins    BYTE PTR es:[edi],dx
  415944:	mov    esi,0xe97263eb
  415949:	out    dx,eax
  41594a:	gs ins DWORD PTR es:[edi],dx
  41594c:	mov    es,WORD PTR [eax]
	...
  41595a:	add    BYTE PTR [eax],al
  41595c:	aam    0x62
  41595e:	jb     0x415949
  415960:	mov    esi,0xc2886e46
  415965:	inc    esi
  415966:	add    BYTE PTR [eax],al
  415968:	lock arpl WORD PTR [ecx+0x65],bp
  41596c:	mov    ecx,0xe6735d02
  415971:	pop    esp
  415972:	pop    ebp
  415973:	jae    0x41595b
  415975:	pop    esp
  415976:	add    BYTE PTR [esi-0x6d],dh
  415979:	bound  esi,QWORD PTR [edi+ebp*2-0x48]
  41597d:	pop    eax
  41597e:	add    BYTE PTR [ebp+ebx*4+0x47],ch
  415982:	outs   dx,DWORD PTR fs:[esi]
  415984:	dec    esp
  415985:	add    DWORD PTR ds:0x73720932,ebp
  41598b:	or     dh,BYTE PTR gs:[edx]
  41598e:	xor    dh,BYTE PTR [ebx]
  415990:	stc    
  415991:	xor    al,0x2d
  415993:	add    BYTE PTR [ecx],ch
  415995:	ins    DWORD PTR es:[edi],dx
  415996:	pop    ebp
  415997:	jb     0x4159df
  415999:	jae    0x4159fc
  41599b:	imul   ecx,edx,0x5f
  41599e:	popa   
  41599f:	outs   dx,DWORD PTR ds:[esi]
  4159a0:	js     0x415a00
  4159a2:	popa   
  4159a3:	add    BYTE PTR [ebp+0x48],dh
  4159a6:	outs   dx,BYTE PTR ds:[esi]
  4159a7:	outs   dx,BYTE PTR ds:[esi]
  4159a8:	push   edi
  4159a9:	jae    0x4159ab
  4159ab:	ins    DWORD PTR es:[edi],dx
  4159ac:	imul   ebx,DWORD PTR [esi+0x63],0x69
  4159b0:	add    DWORD PTR [si+0x72],esi
  4159b4:	arpl   WORD PTR [edi+0x65],ax
  4159b7:	je     0x41597c
  4159b9:	add    ch,BYTE PTR [ebx+0x6e]
  4159bc:	scas   al,BYTE PTR es:[edi]
  4159bd:	dec    ecx
  4159be:	outs   dx,BYTE PTR ds:[esi]
  4159bf:	add    BYTE PTR gs:[eax],al
	...
  4159ce:	add    BYTE PTR [edx-0x64cccdcf],cl
  4159d4:	fs pop edi
  4159d6:	add    BYTE PTR [ecx-0x6e9c9ab6],bl
  4159dc:	pop    ebp
  4159dd:	outs   dx,BYTE PTR ds:[esi]
  4159de:	add    BYTE PTR [eax-0x52969193],ah
  4159e4:	je     0x4159e6
  4159e6:	arpl   dx,dx
  4159e8:	je     0x415a4f
  4159ea:	jae    0x415a36
  4159ec:	jb     0x415a4b
  4159ee:	jae    0x415a53
  4159f0:	mov    esi,DWORD PTR [esi+0x30]
  4159f3:	rol    DWORD PTR [eax+0x6bce5f01],1
  4159f9:	jne    0x415a62
  4159fb:	int    0xdc
  4159fd:	jb     0x415a6f
  4159ff:	ret    0x5a6a
  415a02:	ja     0x415a67
  415a04:	jge    0x415a6b
  415a06:	imul   edi,DWORD PTR [edx-0x7994fbb2],0x4a
  415a0d:	pusha  
  415a0e:	addr16 test esp,ebx
  415a11:	ins    WORD PTR es:[edi],dx
  415a13:	jl     0x415a54
  415a15:	pusha  
  415a16:	arpl   WORD PTR [ebx+0x36],sp
  415a19:	jb     0x415a82
  415a1b:	xchg   BYTE PTR [esi],dh
  415a1d:	push   0x5d446371
  415a22:	jo     0x4159aa
  415a24:	fdiv   QWORD PTR [edx+0x68]
  415a27:	adc    BYTE PTR [eax],0x5d
  415a2a:	imul   esp,DWORD PTR [ebx-0xa],0x5a
  415a2e:	outs   dx,BYTE PTR ds:[esi]
  415a2f:	dec    edi
  415a30:	stc    
  415a31:	pop    ebp
  415a32:	add    BYTE PTR fs:[eax],al
	...
  415a41:	add    BYTE PTR [esp+ebx*8],bh
  415a44:	pop    ebp
  415a45:	ins    DWORD PTR es:[edi],dx
  415a46:	xor    al,0x13
  415a48:	pop    ebx
  415a49:	outs   dx,BYTE PTR ds:[esi]
  415a4a:	inc    esp
  415a4b:	fcomp  QWORD PTR [ecx+0x5f]
  415a4e:	xor    DWORD PTR [eax],eax
  415a50:	addr16 ja 0x415ab6
  415a53:	jmp    0x415ab5
  415a55:	ins    DWORD PTR es:[edi],dx
  415a56:	cmp    BYTE PTR [ecx+0xf54006c],bh
  415a5c:	xor    eax,0x5ec26335
  415a61:	jno    0x415a69
  415a63:	int3   
  415a64:	pop    ecx
  415a65:	add    bh,dh
  415a67:	test   al,0x62
  415a69:	imul   edi,edx,0xfc6765db
  415a6f:	les    esi,FWORD PTR [ebp+0x5f]
  415a72:	(bad)  
  415a73:	(bad)  [eax+eax*1-0x11]
  415a77:	add    al,0x8f
  415a79:	js     0x415a48
  415a7b:	imul   eax,DWORD PTR [ecx+esi*2+0x5c975863],0x3936ed1
  415a86:	shl    DWORD PTR [esi-0x6b],0x67
  415a8a:	les    ebx,FWORD PTR [ecx-0x19]
  415a8d:	push   0x718c59c5
  415a92:	arpl   WORD PTR [esi+0x7d],sp
  415a95:	ja     0x415a52
  415a97:	je     0x415aee
  415a99:	imul   esp,DWORD PTR [ebx+0x68],0x4e
  415a9d:	jb     0x415a2c
  415a9f:	push   0x5b
  415aa1:	js     0x415a23
  415aa3:	add    eax,0x5d3f
	...
  415ab4:	add    BYTE PTR [edx+0x636b4c70],al
  415aba:	push   ebp
  415abb:	dec    esi
  415abc:	jne    0x415a3e
  415abe:	push   edi
  415abf:	out    0x61,eax
  415ac1:	xor    BYTE PTR [ebx+0x41],0x63
  415ac5:	js     0x415b35
  415ac7:	adc    eax,0xe714404
  415acc:	jbe    0x415b0e
  415ace:	pop    esi
  415acf:	push   es
  415ad0:	ja     0x415b3e
  415ad2:	add    eax,0x5c9172d8
  415ad7:	mov    edx,0x105b6366
  415adc:	je     0x415b1e
  415ade:	push   edi
  415adf:	out    0x64,eax
  415ae1:	inc    eax
  415ae2:	jae    0x415ae8
  415ae4:	jno    0x415b22
  415ae6:	pop    eax
  415ae7:	out    0x58,eax
  415ae9:	or     eax,0xf5bc66e
  415aee:	add    eax,0x570074d8
  415af3:	shr    DWORD PTR [edx+0x34],cl
  415af6:	add    eax,0x660071ca
  415afb:	mov    bl,0x5a
  415afd:	in     eax,dx
  415afe:	imul   eax,DWORD PTR [eax],0x6d7206e9
  415b04:	retf   
  415b05:	add    DWORD PTR [edi+0x0],edx
  415b08:	mov    ah,al
  415b0a:	ins    BYTE PTR es:[edi],dx
  415b0b:	fs mov bl,dl
  415b0e:	add    eax,0x6cd48672
  415b13:	imul   eax,DWORD PTR [eax-0x7793a9a0],0x0
	...
  415b26:	add    BYTE PTR [eax],al
  415b28:	leave  
  415b29:	push   0x6cafe972
  415b2e:	jno    0x415abd
  415b30:	(bad)  
  415b31:	jo     0x415b33
  415b33:	jns    0x415ae7
  415b35:	inc    esp
  415b36:	addr16 pop edx
  415b38:	test   BYTE PTR ds:0x5b82617a,al
  415b3e:	bound  eax,QWORD PTR [edi-0x54]
  415b41:	add    eax,0x58a44871
  415b46:	arpl   WORD PTR [ebp+0x67],dx
  415b49:	jo     0x415bb2
  415b4b:	push   edx
  415b4c:	jl     0x415b53
  415b4e:	fs dec eax
  415b50:	xor    DWORD PTR [ecx+0x5f],0x3a
  415b54:	pop    edi
  415b55:	push   0x72
  415b57:	or     al,0x44
  415b59:	jae    0x415b5b
  415b5b:	adc    eax,0x1d74563c
  415b60:	inc    esp
  415b61:	push   esi
  415b62:	je     0x415b4d
  415b64:	and    eax,0x310c7644
  415b69:	ins    BYTE PTR es:[edi],dx
  415b6a:	popa   
  415b6b:	adc    bl,BYTE PTR [edi+0x72]
  415b6e:	outs   dx,BYTE PTR ds:[esi]
  415b6f:	or     al,0x43
  415b71:	jb     0x415be9
  415b73:	add    al,0x5f
  415b75:	imul   ebx,DWORD PTR [edi-0x21],0xcc006939
  415b7c:	or     DWORD PTR [ecx+0x6d],esi
  415b7f:	fild   WORD PTR ds:0xdc16105
  415b85:	push   edi
  415b86:	popa   
  415b87:	add    BYTE PTR [edx+0x726607],dl
	...
  415b99:	add    BYTE PTR [eax],al
  415b9b:	xchg   ebx,eax
  415b9c:	push   0x6e
  415b9e:	fs jp  0x415c09
  415ba1:	imul   esp,DWORD PTR [edx+edi*2+0x6b],0x61
  415ba6:	jae    0x415ba6
  415ba8:	aas    
  415ba9:	outs   dx,BYTE PTR ds:[esi]
  415baa:	jns    0x415bf6
  415bac:	inc    ecx
  415bad:	imul   ebp,DWORD PTR [esi-0x21],0x6
  415bb1:	imul   ebp,DWORD PTR [ecx-0x27],0xd5736b54
  415bb8:	push   0x14f80074
  415bbd:	xor    dh,BYTE PTR [edx]
  415bbf:	call   0xafa35bd8
  415bc4:	bound  ebp,QWORD PTR fs:[edi+ebp*4+0x5a]
  415bc9:	add    BYTE PTR [ecx],dh
  415bcb:	jnp    0x415be5
  415bcd:	sub    eax,0x2d186b31
  415bd2:	add    BYTE PTR [ecx-0x569ea0c2],bl
  415bd8:	ds ins BYTE PTR es:[edi],dx
  415bda:	popa   
  415bdb:	or     al,BYTE PTR [ecx+0x6b]
  415bde:	jb     0x415b7e
  415be0:	push   0x6e9326e
  415be5:	gs ins BYTE PTR es:[edi],dx
  415be7:	jne    0x415c40
  415be9:	popa   
  415bea:	gs add BYTE PTR gs:[bp+0x65],ah
  415bf0:	ds je  0x415c55
  415bf3:	pop    ebx
  415bf4:	cmp    eax,0x3aca316c
  415bf9:	imul   esi,DWORD PTR [esi+0x53],0x3f
  415bfd:	arpl   WORD PTR [eax],ax
	...
  415c0b:	add    BYTE PTR [eax],al
  415c0d:	add    BYTE PTR [eax+ebp*2+0x74],ah
  415c11:	push   0x65003f5b
  415c16:	mov    bh,0x3d
  415c18:	pop    ebp
  415c19:	outs   dx,BYTE PTR ds:[esi]
  415c1a:	scas   eax,DWORD PTR es:[edi]
  415c1b:	gs ins BYTE PTR es:[edi],dx
  415c1d:	add    BYTE PTR [ebx-0x41],ah
  415c20:	ins    WORD PTR es:[edi],dx
  415c22:	hlt    
  415c23:	int    0x6c
  415c25:	add    BYTE PTR ds:0x46966a1,al
  415c2b:	retf   0x5f
  415c2e:	lock int3 
  415c30:	pop    eax
  415c31:	imul   ebp,edx,0xffffffeb
  415c34:	pop    eax
  415c35:	pop    edi
  415c36:	fild   DWORD PTR [ebx-0x133893a0]
  415c3c:	pop    ebx
  415c3d:	pop    edi
  415c3e:	ror    BYTE PTR [ebx+0x63b90057],1
  415c44:	pop    ecx
  415c45:	outs   dx,BYTE PTR ds:[esi]
  415c46:	arpl   WORD PTR [ebp-0x6053cd8c],bx
  415c4c:	pusha  
  415c4d:	xor    al,0xb1
  415c4f:	in     al,dx
  415c50:	arpl   WORD PTR [edi-0x3f],bx
  415c53:	push   ebp
  415c54:	add    DWORD PTR [edx-0x7a],esi
  415c57:	push   eax
  415c58:	xor    esi,DWORD PTR [edx]
  415c5a:	push   eax
  415c5b:	in     al,dx
  415c5c:	arpl   WORD PTR [edx+eax*4+0x4e],bp
  415c60:	pop    eax
  415c61:	pop    edi
  415c62:	arpl   WORD PTR [esi+esi*2],di
  415c65:	lea    ecx,[bx+0x5f]
  415c69:	add    BYTE PTR [edx+0x1b],dh
  415c6c:	pop    edi
  415c6d:	jb     0x415ce6
  415c6f:	in     al,dx
  415c70:	pushw  0x0
	...
  415c80:	add    BYTE PTR [esi+0x20],bh
  415c83:	jne    0x415ce8
  415c85:	inc    edx
  415c86:	in     al,dx
  415c87:	xor    BYTE PTR [ebx],dh
  415c89:	mov    ?,WORD PTR [ecx+0xa420030]
  415c8f:	popa   
  415c90:	arpl   WORD PTR [edi],si
  415c92:	mov    ebp,0xde426801
  415c97:	pop    ebp
  415c98:	popa   
  415c99:	inc    esp
  415c9a:	fisub  WORD PTR [eax+0x0]
  415c9d:	inc    edi
  415c9e:	adc    DWORD PTR [esp+esi*2+0x3e],ebp
  415ca2:	fiadd  WORD PTR [ecx]
  415ca4:	jno    0x415ca8
  415ca6:	add    eax,0x4ff60dd
  415cab:	sbb    BYTE PTR ds:0x371a1751,dh
  415cb1:	arpl   WORD PTR [ebp-0x38],bp
  415cb4:	push   edi
  415cb5:	psrad  mm7,0x5d
  415cb9:	adc    al,0x56
  415cbb:	mov    bh,0x60
  415cbd:	icebp  
  415cbe:	add    al,0xcb
  415cc0:	fs cmc 
  415cc2:	imul   eax,esp,0x57
  415cc5:	iret   
  415cc6:	push   0xffffffe7
  415cc8:	pop    esi
  415cc9:	mov    esp,0xbd609359
  415cce:	add    eax,0x54d2648a
  415cd3:	and    BYTE PTR [eax+0x63],0x54
  415cd7:	jnp    0x415d39
  415cd9:	(bad)  
  415cda:	jno    0x415c64
  415cdc:	add    esi,DWORD PTR [ebx-0x3f9377ad]
  415ce2:	push   ebx
  415ce3:	out    0x5b,eax
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [esi+0x7e594b59],cl
  415cf9:	add    eax,0x697d5b56
  415cfe:	inc    esi
  415cff:	jno    0x415c93
  415d01:	add    eax,0x59726f3c
  415d06:	dec    ebx
  415d07:	pop    ebx
  415d08:	add    BYTE PTR ds:0x6a776346,0x3a
  415d0f:	add    al,0x81
  415d11:	outs   dx,BYTE PTR ds:[esi]
  415d12:	cmp    ebx,DWORD PTR [eax+0x46]
  415d15:	sbb    bx,WORD PTR [edi+0x52]
  415d19:	add    eax,0x69415c06
  415d1e:	sbb    ebx,DWORD PTR [edx+0x63]
  415d21:	push   0x6c495c05
  415d26:	adc    al,0x4
  415d28:	test   BYTE PTR [ebx],dl
  415d2a:	mov    edx,0x17702f
  415d2f:	mov    esi,0xe9301878
  415d34:	pusha  
  415d35:	fs je  0x415d1a
  415d38:	push   cs
  415d39:	push   edi
  415d3a:	imul   ecx,esi,0xdc756f16
  415d40:	pusha  
  415d41:	ins    DWORD PTR es:[edi],dx
  415d42:	je     0x415d19
  415d44:	lock sbb ch,BYTE PTR ds:0x2e304816
  415d4b:	clc    
  415d4c:	xor    BYTE PTR ss:[esi],ch
  415d4f:	icebp  
  415d50:	xor    al,0x2f
  415d52:	xor    bh,cl
  415d54:	mov    WORD PTR [ebx],ds
  415d56:	cmp    cl,bl
	...
  415d64:	add    BYTE PTR [eax],al
  415d66:	add    BYTE PTR [eax-0x5466d2eb],cl
  415d6c:	outs   dx,DWORD PTR ds:[esi]
  415d6d:	ja     0x415d35
  415d6f:	ret    
  415d70:	inc    eax
  415d71:	je     0x415cf7
  415d73:	pop    edx
  415d74:	push   ebp
  415d75:	push   0x746d6079
  415d7a:	jne    0x415d2c
  415d7c:	sbb    ebp,DWORD PTR ds:0x2e3079c6
  415d82:	mov    eax,0x202e3056
  415d87:	dec    esi
  415d88:	das    
  415d89:	das    
  415d8a:	push   ss
  415d8b:	aas    
  415d8c:	sbb    edi,DWORD PTR [eax]
  415d8e:	sbb    DWORD PTR [edi],esi
  415d90:	adc    eax,0x6f9a592d
  415d95:	ja     0x415dad
  415d97:	add    BYTE PTR [eax+0x74],0x44
  415d9b:	dec    ecx
  415d9c:	push   ebp
  415d9d:	push   0x68055f39
  415da2:	xor    eax,0xd63a5553
  415da7:	jnp    0x415de9
  415da9:	jno    0x415dc0
  415dab:	push   ebp
  415dac:	jb     0x415e1c
  415dae:	push   es
  415daf:	sub    al,0x68
  415db1:	imul   ecx,DWORD PTR [eax],0x6d6659
  415db7:	dec    edi
  415db8:	(bad)  
  415db9:	xor    edi,DWORD PTR [ecx]
  415dbb:	jmp    0x57b9bebd
  415dc0:	or     DWORD PTR [eax+0x74],ebp
  415dc3:	xchg   esi,eax
  415dc4:	push   ebx
  415dc5:	cmp    ch,BYTE PTR [edi]
  415dc7:	ins    DWORD PTR es:[edi],dx
  415dc8:	imul   ebp,DWORD PTR fs:[ecx+0x0],0x0
	...
  415dd8:	add    BYTE PTR [eax],al
  415dda:	mov    dh,0x6a
  415ddc:	outs   dx,DWORD PTR ds:[esi]
  415ddd:	outs   dx,DWORD PTR ds:[esi]
  415dde:	xchg   esp,eax
  415ddf:	outs   dx,DWORD PTR ds:[esi]
  415de0:	arpl   WORD PTR cs:[ebp-0x5192d4ca],di
  415de7:	dec    edi
  415de8:	jo     0x415e44
  415dea:	jbe    0x415e54
  415dec:	cs gs mov dl,0x3e
  415df0:	add    BYTE PTR [eax],al
  415df2:	repz dec edi
  415df4:	inc    ebp
  415df5:	push   eax
  415df6:	adc    eax,0xfe49461f
  415dfb:	pop    ds
  415dfc:	xor    BYTE PTR [ecx+0x7],bl
  415dff:	sbb    al,0x50
  415e01:	dec    ebx
  415e02:	push   es
  415e03:	inc    ebp
  415e04:	inc    ebp
  415e05:	dec    esp
  415e06:	pop    es
  415e07:	adc    edx,DWORD PTR [ebp+0x55]
  415e0a:	repz dec ecx
  415e0c:	push   edx
  415e0d:	pop    ecx
  415e0e:	retf   0x414e
  415e11:	inc    esp
  415e12:	fimul  DWORD PTR [ebx+0x51]
  415e15:	dec    ecx
  415e16:	jnp    0x415e0f
  415e18:	das    
  415e19:	add    dl,bh
  415e1b:	add    al,BYTE PTR [eax]
  415e1d:	add    al,bh
  415e1f:	add    cl,BYTE PTR [ecx+0x4f]
  415e22:	inc    esi
  415e23:	xor    al,0xfd
  415e25:	add    BYTE PTR [edx],cl
  415e27:	add    eax,DWORD PTR [eax]
  415e29:	add    dl,bh
  415e2b:	add    al,BYTE PTR [eax]
  415e2d:	add    BYTE PTR [ecx+0x16],cl
  415e30:	inc    esi
  415e31:	push   esp
  415e32:	jne    0x415e7c
  415e34:	push   edx
  415e35:	inc    ebp
  415e36:	push   ds
  415e37:	sbb    al,0x65
  415e39:	arpl   WORD PTR [eax+0x36],bp
  415e3c:	outs   dx,DWORD PTR ds:[esi]
  415e3d:	outs   dx,DWORD PTR ds:[esi]
	...
  415e4a:	add    BYTE PTR [eax],al
  415e4c:	add    BYTE PTR [ebx+0xe],ah
  415e4f:	jo     0x415ead
  415e51:	adc    al,0x5
  415e53:	push   esi
  415e54:	fs inc esp
  415e56:	fbstp  TBYTE PTR [edx+0x5c]
  415e59:	and    cl,bl
  415e5b:	outs   dx,DWORD PTR ds:[esi]
  415e5c:	jb     0x415e9c
  415e5e:	push   es
  415e5f:	jo     0x415eb7
  415e61:	push   es
  415e62:	fidiv  DWORD PTR [edx+0x67]
  415e65:	add    al,0xb6
  415e67:	inc    ebp
  415e68:	push   ebx
  415e69:	std    
  415e6a:	mov    ah,0x53
  415e6c:	jno    0x415e7d
  415e6e:	int    0x55
  415e70:	ins    BYTE PTR es:[edi],dx
  415e71:	arpl   WORD PTR [ecx-0x64fa98ad],bx
  415e77:	ins    DWORD PTR es:[edi],dx
  415e78:	pop    edi
  415e79:	dec    edi
  415e7b:	push   edx
  415e7c:	je     0x415e6f
  415e7e:	les    edx,FWORD PTR [ebx+0x65]
  415e81:	arpl   WORD PTR [eax+0x78d3715c],bp
  415e87:	fs ja  0x415e27
  415e8a:	lea    ebx,[eax+0x63]
  415e8d:	arpl   WORD PTR [eax-0x139cffff],bx
  415e93:	add    DWORD PTR [eax],eax
  415e95:	arpl   sp,bp
  415e97:	add    DWORD PTR [ecx-0x3a],ebp
  415e9a:	pop    edx
  415e9b:	push   ebx
  415e9c:	arpl   WORD PTR [edi-0x78d1d065],si
  415ea2:	pusha  
  415ea3:	push   ebp
  415ea4:	add    BYTE PTR [eax+eiz*1+0x38864551],ch
  415eab:	inc    ebx
  415eac:	popa   
  415ead:	pop    DWORD PTR [ebp+0x6e]
  415eb0:	arpl   WORD PTR [eax],ax
	...
  415ebe:	add    BYTE PTR [eax],al
  415ec0:	mov    al,ds:0x8471561f
  415ec5:	cmp    BYTE PTR [edi+0x51],bl
  415ec8:	xchg   BYTE PTR [ebx],bl
  415eca:	jno    0x415f33
  415ecc:	je     0x415f14
  415ece:	cmp    esp,DWORD PTR [ebx+eiz*2-0x4]
  415ed2:	jno    0x415f41
  415ed4:	inc    eax
  415ed5:	add    eax,0x4c52730c
  415eda:	add    edx,DWORD PTR [eax+0x36]
  415edd:	xor    cl,BYTE PTR [ebx+esi*2]
  415ee0:	xor    ch,BYTE PTR [esi+edi*8+0x55]
  415ee4:	sbb    al,0x69
  415ee6:	out    0x3,eax
  415ee8:	arpl   WORD PTR ds:0x56303e7,ax
  415eee:	out    0x3,eax
  415ef0:	add    dl,BYTE PTR [ebx-0x10]
  415ef3:	jae    0x415f04
  415ef5:	adc    bl,BYTE PTR [ecx]
  415ef7:	push   ss
  415ef8:	pop    es
  415ef9:	jno    0x415ec6
  415efb:	add    esp,DWORD PTR [edx]
  415efd:	push   ebx
  415efe:	shl    BYTE PTR [ebx-0x9],1
  415f01:	aaa    
  415f02:	mov    ebp,0xbb6df173
  415f07:	pusha  
  415f08:	add    bl,BYTE PTR [ecx-0x5d]
  415f0b:	fs out dx,eax
  415f0d:	arpl   di,sp
  415f0f:	add    esp,DWORD PTR [ebx+0x5]
  415f12:	out    0x15,eax
  415f14:	rcr    BYTE PTR [ebp-0x74],0x3
  415f18:	mov    dl,0x6c
  415f1a:	test   DWORD PTR [edi-0x32],ebp
  415f1d:	cwd    
  415f1f:	pusha  
  415f20:	lahf   
  415f21:	xor    al,0x80
  415f23:	push   ebp
	...
  415f30:	add    BYTE PTR [eax],al
  415f32:	add    BYTE PTR [ecx-0x41fc66ba],dl
  415f38:	push   ebp
  415f39:	test   BYTE PTR [ebp+0x63],dl
  415f3c:	push   es
  415f3d:	out    0x3,eax
  415f3f:	jecxz  0x415f99
  415f41:	jg     0x415fa3
  415f43:	xchg   DWORD PTR [ecx+0x1a],ebp
  415f46:	xor    bh,BYTE PTR ds:0x63584b61
  415f4c:	cmp    BYTE PTR [edi],bl
  415f4e:	cmp    eax,0x55255180
  415f53:	xchg   DWORD PTR [ecx+0x4c],esp
  415f56:	jb     0x415eeb
  415f58:	xor    bx,WORD PTR [esp+0x5]
  415f5d:	add    cl,ch
  415f5f:	pusha  
  415f60:	add    eax,0x242de900
  415f65:	aas    
  415f66:	jmp    0xe980844d
  415f6b:	repnz and al,0x3f
  415f6e:	jmp    0xe980844b
  415f73:	push   es
  415f74:	and    eax,0x24eee93f
  415f79:	aas    
  415f7a:	jmp    0xe9808415
  415f7f:	mov    ebx,0x62e93f24
  415f84:	das    
  415f85:	aas    
  415f86:	jmp    0xe9808ee9
  415f8b:	outs   dx,DWORD PTR ds:[esi]
  415f8c:	das    
  415f8d:	aas    
  415f8e:	jmp    0xe9808ea6
  415f93:	lock cs aas 
  415f96:	jmp    0x415f9b
	...
  415fa3:	add    BYTE PTR [eax],al
  415fa5:	add    BYTE PTR [eax+0x5],ah
  415fa8:	add    cl,ch
  415faa:	popa   
  415fab:	add    eax,0xdc5c6900
  415fb0:	std    
  415fb1:	jmp    0xad61b443
  415fb6:	mov    bh,0x66
  415fb8:	jae    0x415f46
  415fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fbb:	imul   esi,DWORD PTR [edx+ebx*4+0x60],0xffffffdc
  415fc0:	std    
  415fc1:	jmp    0xe9415ea6
  415fc6:	pusha  
  415fc7:	sbb    al,0x70
  415fc9:	jns    0x41602f
  415fcb:	cmp    al,0x74
  415fcd:	mov    BYTE PTR [eax-0x24],ah
  415fd0:	std    
  415fd1:	jmp    0xe94158b6
  415fd6:	pusha  
  415fd7:	dec    ecx
  415fd8:	ins    DWORD PTR es:[edi],dx
  415fd9:	dec    edx
  415fda:	sub    BYTE PTR [ecx+0x20],0x28
  415fde:	ja     0x416035
  415fe0:	inc    esp
  415fe1:	dec    eax
  415fe2:	jae    0x416020
  415fe4:	add    BYTE PTR [eax],al
  415fe6:	sti    
  415fe7:	pop    es
  415fe8:	add    BYTE PTR [eax+0x15a],al
  415fee:	mov    DWORD PTR [eax+0x5f],ebp
  415ff1:	push   0xfffd011f
  415ff6:	mov    edx,0xba001d87
  415ffb:	pop    es
  415ffc:	aas    
  415ffd:	outs   dx,DWORD PTR ds:[esi]
  415ffe:	gs ds gs gs pop ecx
  416003:	add    ebp,edi
  416005:	(bad)  
  416006:	mov    edx,0x2287
	...
  416017:	add    BYTE PTR [eax],al
  416019:	mov    edx,0x99694807
  41601e:	imul   ebp,DWORD PTR [ebx+0x72],0xffffff93
  416022:	pop    es
  416023:	add    al,BYTE PTR [eax]
  416025:	jp     0x415fae
  416027:	add    DWORD PTR [eax],eax
  416029:	jp     0x416032
  41602b:	dec    ecx
  41602c:	jns    0x416098
  41602e:	inc    ebp
  41602f:	imul   esp,DWORD PTR [ebx-0x71],0x32
  416033:	popa   
  416034:	outs   dx,BYTE PTR ds:[esi]
  416035:	scas   al,BYTE PTR es:[edi]
  416036:	push   esp
  416037:	add    BYTE PTR [edx],al
  416039:	jp     0x416042
  41603b:	and    BYTE PTR [ebx],0x4a
  41603e:	pop    es
  41603f:	add    BYTE PTR [ebx+0x15],al
  416042:	xor    al,0x69
  416044:	outs   dx,DWORD PTR ds:[esi]
  416045:	hlt    
  416046:	es cmp eax,0x5d1aea70
  41604c:	je     0x416039
  41604e:	push   es
  41604f:	std    
  416050:	dec    DWORD PTR [edx-0x79]
  416053:	and    eax,DWORD PTR [eax]
  416055:	cmp    al,BYTE PTR [edi]
  416057:	dec    ecx
  416058:	jns    0x416074
  41605a:	aaa    
  41605b:	arpl   WORD PTR gs:[esi-0x669a8d95],bx
  416062:	push   es
  416063:	add    al,BYTE PTR [eax]
  416065:	cli    
  416066:	xchg   BYTE PTR [esi],ch
  416068:	add    dl,bh
  41606a:	push   es
  41606b:	aas    
  41606c:	outs   dx,DWORD PTR ds:[esi]
  41606d:	arpl   WORD PTR [ecx+0x6f],ax
  416070:	ins    DWORD PTR es:[edi],dx
  416071:	test   DWORD PTR [eax+ecx*2],ecx
  416074:	ins    DWORD PTR es:[edi],dx
  416075:	sbb    BYTE PTR [ecx],0x6f
  416078:	arpl   WORD PTR [ebp+0x10],si
  41607b:	push   ebp
	...
  41608c:	popa   
  41608d:	in     al,dx
  41608e:	add    DWORD PTR [eax+0x1ec84],eax
  416094:	and    bl,dh
  416096:	outs   dx,BYTE PTR ds:[esi]
  416097:	imul   esi,DWORD PTR [edx+ecx*1],0x24
  41609b:	aas    
  41609c:	inc    edi
  41609d:	add    DWORD PTR [ebx+0x6e],ebp
  4160a0:	dec    edx
  4160a1:	call   DWORD PTR [edi+0x72]
  4160a4:	inc    edx
  4160a5:	fsubr  DWORD PTR [esi+esi*2+0x3e]
  4160a9:	int3   
  4160aa:	xor    eax,0x55000c6d
  4160af:	add    BYTE PTR [edx-0x14],ah
  4160b2:	add    DWORD PTR [eax+0x1ec53],eax
  4160b8:	and    al,al
  4160ba:	jo     0x416123
  4160bc:	or     eax,0xf17456c5
  4160c1:	int3   
  4160c2:	push   ebp
  4160c3:	addr16 cmc 
  4160c5:	enter  0x5421,0xf4
  4160c9:	retf   0x716d
  4160cc:	arpl   bp,bp
  4160ce:	add    DWORD PTR [eax],eax
  4160d0:	jecxz  0x4160b2
  4160d2:	add    DWORD PTR [eax],eax
  4160d4:	arpl   WORD PTR [eax+ebp*2+0x6f8bd072],bx
  4160db:	pop    edi
  4160dc:	iret   
  4160dd:	in     al,dx
  4160de:	ss ins DWORD PTR es:[edi],dx
  4160e0:	mov    ebp,0xb15f5a70
  4160e5:	mov    DWORD PTR ds:0x538fba4b,edi
  4160eb:	ins    DWORD PTR es:[edi],dx
  4160ec:	nop
  4160ed:	and    DWORD PTR [edi+0x74],0x0
	...
  4160fd:	add    BYTE PTR [eax],al
  4160ff:	mov    bh,0x73
  416101:	ins    BYTE PTR es:[edi],dx
  416102:	outs   dx,BYTE PTR ds:[esi]
  416103:	xchg   DWORD PTR ds:0x39925b56,eax
  416109:	sub    bl,BYTE PTR [ecx+0x71]
  41610c:	push   edi
  41610d:	dec    esp
  41610e:	jb     0x41617f
  416110:	xor    eax,DWORD PTR [esi+edx*2+0x72]
  416114:	ins    BYTE PTR es:[edi],dx
  416115:	push   esi
  416116:	jb     0x41609f
  416118:	inc    eax
  416119:	aas    
  41611a:	push   esp
  41611b:	dec    edi
  41611c:	push   0x39
  41611e:	imul   edx,DWORD PTR [ecx+0x39],0x69406c1a
  416125:	adc    esp,DWORD PTR [ebx*1+0x40680b6a]
  41612c:	push   edi
  41612d:	sbb    al,BYTE PTR [ebx+edx*1]
  416130:	dec    edx
  416131:	cmp    bh,BYTE PTR [eax]
  416133:	and    DWORD PTR [eax],0xfffffffa
  416136:	and    ebx,DWORD PTR [ebx]
  416138:	xor    DWORD PTR [ebx],edx
  41613a:	xor    al,0x4e
  41613c:	adc    al,0xc5
  41613e:	adc    ebp,DWORD PTR [eax+0xf]
  416141:	pop    ds
  416142:	jae    0x416156
  416144:	push   ecx
  416145:	and    DWORD PTR [eax+eax*2],esp
  416148:	push   esi
  416149:	in     al,dx
  41614a:	or     eax,0x68ca663c
  41614f:	repz push eax
  416151:	adc    DWORD PTR [ecx+edi*1],esp
  416154:	sub    dl,BYTE PTR [ecx]
  416156:	adc    DWORD PTR [ecx+0x44],ebx
  416159:	retf   0xc066
  41615c:	push   ebp
  41615d:	mov    ebx,0xca67a030
  416162:	jb     0x416164
	...
  416170:	add    BYTE PTR [eax],al
  416172:	(bad)  
  416173:	outs   dx,BYTE PTR ds:[esi]
  416174:	xchg   ebp,eax
  416175:	push   0xffffff89
  416177:	and    eax,0x67c06790
  41617c:	fwait
  41617d:	ins    BYTE PTR es:[edi],dx
  41617e:	scas   eax,DWORD PTR es:[edi]
  41617f:	pop    esi
  416180:	mov    ebx,0x781c7923
  416185:	and    BYTE PTR [ebx+0xa],dh
  416188:	icebp  
  416189:	inc    esi
  41618a:	mov    fs,WORD PTR [edi+0x0]
  41618d:	jge    0x41611a
  41618f:	addr16 je 0x41614e
  416192:	pushf  
  416193:	outs   dx,BYTE PTR fs:[esi]
  416195:	dec    esi
  416196:	stos   DWORD PTR es:[edi],eax
  416197:	ins    DWORD PTR es:[edi],dx
  416198:	cmp    cl,BYTE PTR [ecx]
  41619a:	inc    esp
  41619b:	imul   esi,DWORD PTR [ebx-0x1c],0x3f6d4666
  4161a2:	jno    0x416208
  4161a4:	popa   
  4161a5:	cmp    eax,0x36e6a78
  4161aa:	xchg   DWORD PTR [esi+0x6c],esp
  4161ad:	inc    esi
  4161ae:	cs fs or esp,ebx
  4161b2:	daa    
  4161b3:	push   0x6e
  4161b5:	sbb    eax,0xcc74673c
  4161ba:	je     0x41620c
  4161bc:	jo     0x4161ca
  4161be:	push   ebp
  4161bf:	and    eax,0x6917195f
  4161c4:	or     al,BYTE PTR [bx+si+0x51]
  4161c8:	addr16 push cs
  4161ca:	adc    DWORD PTR [edx],ebp
  4161cc:	ins    DWORD PTR es:[edi],dx
  4161cd:	or     bh,BYTE PTR [ebx]
  4161cf:	fs je  0x41618e
  4161d2:	aaa    
  4161d3:	push   ecx
  4161d4:	jb     0x4161a2
	...
  4161e2:	add    BYTE PTR [eax],al
  4161e4:	add    BYTE PTR [ecx],al
  4161e6:	ins    BYTE PTR es:[edi],dx
  4161e7:	or     esi,ebx
  4161e9:	daa    
  4161ea:	push   0x6e
  4161ec:	(bad)  
  4161ee:	data16 je 0x4161ed
  4161f1:	and    eax,0xfcd66167
  4161f6:	pop    edi
  4161f7:	outs   dx,BYTE PTR ds:[esi]
  4161f8:	(bad)  
  4161f9:	jle    0x416220
  4161fb:	(bad)  
  4161fc:	rcl    dl,0x38
  4161ff:	jb     0x4161b1
  416201:	pop    ebp
  416202:	or     edx,DWORD PTR [ebx-0x66]
  416205:	mov    ebp,0xcba82b53
  41620a:	outs   dx,BYTE PTR fs:[esi]
  41620c:	popf   
  41620d:	push   esi
  41620e:	and    eax,0x608e7e4b
  416213:	ins    BYTE PTR es:[edi],dx
  416214:	add    dh,cl
  416216:	bound  ebp,QWORD PTR [ebx]
  416218:	xor    al,0x2c
  41621a:	hlt    
  41621b:	pop    ds
  41621c:	sub    cl,ch
  41621e:	push   esp
  41621f:	imul   esi,DWORD PTR [eax-0x25],0xae62652f
  416226:	pusha  
  416227:	aaa    
  416228:	and    BYTE PTR [edi+0x12],cl
  41622b:	inc    ebp
  41622c:	inc    ebp
  41622d:	push   0xfffffff0
  41622f:	sub    eax,0x53215130
  416234:	imul   ecx,DWORD PTR [ebp+ebp*2+0x2199776b],0x8633835
  41623f:	or     cl,BYTE PTR ds:0x6f3f03c0
  416245:	ins    BYTE PTR es:[edi],dx
  416246:	cmp    eax,0x6e61
	...
  416257:	add    BYTE PTR [esi+0x28],dl
  41625a:	dec    esp
  41625b:	gs pop esp
  41625d:	outs   dx,BYTE PTR ds:[esi]
  41625e:	je     0x4162c8
  416260:	nop
  416261:	add    ecx,DWORD PTR [edi+ebp*2+0x59]
  416265:	fs je  0x4162d1
  416268:	ins    DWORD PTR es:[edi],dx
  416269:	push   ebx
  41626a:	cmp    al,BYTE PTR [eax]
  41626c:	inc    ebp
  41626d:	inc    eax
  41626e:	push   esp
  41626f:	and    BYTE PTR [edi-0x39b7dfd0],ah
  416275:	(bad)  
  416277:	das    
  416278:	pop    ebx
  416279:	adc    esi,DWORD PTR [eax]
  41627b:	or     eax,0x736b4b80
  416280:	xchg   esi,eax
  416281:	stc    
  416282:	pop    ds
  416283:	and    eax,0x410a06a9
  416288:	sub    DWORD PTR [edx+0x61],esp
  41628b:	jo     0x4162a3
  41628d:	stc    
  41628e:	pop    ds
  41628f:	sub    cl,BYTE PTR [ebp+0x29]
  416292:	or     DWORD PTR [edx],ecx
  416294:	sti    
  416295:	popa   
  416296:	pop    edi
  416297:	fisubr DWORD PTR gs:[esi]
  41629a:	sub    DWORD PTR [ebp+0x63],eax
  41629d:	jle    0x416303
  41629f:	ins    DWORD PTR es:[edi],dx
  4162a0:	mov    DWORD PTR [ebp-0x33969a91],0x8686646a
  4162aa:	push   ebp
  4162ab:	addr16 (bad) 
  4162ad:	push   ebp
  4162ae:	sub    eax,0x52933920
  4162b3:	cmp    edx,DWORD PTR [ebx-0x2f]
  4162b6:	pop    es
  4162b7:	inc    ecx
  4162b8:	mov    WORD PTR [esi+0x6e],es
  4162bb:	arpl   WORD PTR [eax],ax
	...
  4162c9:	add    BYTE PTR [eax],al
  4162cb:	cmp    BYTE PTR [eax],0x6b
  4162ce:	ins    DWORD PTR es:[edi],dx
  4162cf:	jge    0x4162c3
  4162d1:	and    esp,DWORD PTR [ecx+0x77]
  4162d4:	das    
  4162d5:	push   ecx
  4162d6:	arpl   WORD PTR [esi-0x2e],bp
  4162d9:	cmp    BYTE PTR [ecx+0x3e],dh
  4162dc:	sbb    ch,BYTE PTR [edi]
  4162de:	aas    
  4162df:	inc    esp
  4162e0:	inc    ecx
  4162e1:	outs   dx,BYTE PTR ds:[esi]
  4162e2:	je     0x41626d
  4162e4:	int3   
  4162e5:	push   eax
  4162e6:	ins    DWORD PTR es:[edi],dx
  4162e7:	cmp    ebp,esi
  4162e9:	outs   dx,DWORD PTR ds:[esi]
  4162ea:	ins    BYTE PTR es:[edi],dx
  4162eb:	inc    edx
  4162ec:	mov    edi,0xcc732e15
  4162f1:	sub    DWORD PTR [ecx+0x34],esp
  4162f4:	icebp  
  4162f5:	push   ebx
  4162f6:	pop    edi
  4162f7:	pop    ss
  4162f8:	cmc    
  4162f9:	popa   
  4162fa:	ins    BYTE PTR es:[edi],dx
  4162fb:	(bad)  
  4162fc:	xchg   edx,eax
  4162fd:	and    DWORD PTR [ebx+0x30],ecx
  416300:	and    eax,0xee4e2047
  416305:	adc    edi,DWORD PTR [ecx]
  416307:	inc    ebx
  416308:	(bad)  
  416309:	ins    BYTE PTR es:[edi],dx
  41630a:	outs   dx,BYTE PTR ds:[esi]
  41630b:	(bad)  
  41630c:	mov    esi,0xf5437156
  416311:	sbb    esp,DWORD PTR [edi]
  416313:	push   esi
  416314:	rcl    BYTE PTR [eax],cl
  416316:	or     ah,BYTE PTR [ebx+0x6]
  416319:	add    al,0x2e
  41631b:	test   esp,ebp
  41631d:	cmp    eax,0x4027d2a
  416322:	sub    dh,BYTE PTR [ebp+0x5]
  416325:	rol    DWORD PTR [ebx],1
  416327:	int    0x60
  416329:	xchg   ebx,eax
  41632a:	fs mov bl,0x6c
  41632d:	ficom  DWORD PTR [ecx]
	...
  41633b:	add    BYTE PTR [eax],al
  41633d:	add    BYTE PTR [ebp+0x61],bh
  416340:	jnp    0x4163b1
  416342:	arpl   WORD PTR [edi-0x74],ax
  416345:	push   edi
  416346:	pop    esp
  416347:	push   ebp
  416348:	nop
  416349:	inc    ecx
  41634a:	nop
  41634b:	pop    edi
  41634c:	lea    ebp,[eax-0x6f]
  41634f:	aas    
  416350:	jns    0x4163ba
  416352:	add    BYTE PTR ds:0x30776935,0x5a
  416359:	imul   esi,DWORD PTR [ecx+0x40],0x5785945
  416360:	out    0x6e,eax
  416362:	ja     0x4163c4
  416364:	cli    
  416365:	adc    DWORD PTR [ebp+0x63704b61],ecx
  41636b:	xor    bh,BYTE PTR [ebx]
  41636d:	addr16 push ds
  41636f:	push   ebp
  416370:	inc    esp
  416371:	outs   dx,BYTE PTR ds:[esi]
  416372:	xor    dl,BYTE PTR [ecx+0x16]
  416375:	push   edx
  416376:	sbb    al,0x5e
  416378:	add    al,0x4
  41637a:	arpl   WORD PTR [ebx+ecx*1+0x56],sp
  41637e:	or     al,0x55
  416380:	add    BYTE PTR [ebx],dl
  416382:	jno    0x4163ab
  416384:	or     esi,DWORD PTR [eax+0xf]
  416387:	add    eax,0x66077028
  41638c:	or     ah,BYTE PTR [ebp+0x17]
  41638f:	pusha  
  416390:	sub    BYTE PTR [esi-0x1],ch
  416393:	dec    ebx
  416394:	aad    0x6c
  416396:	imul   DWORD PTR [ebx-0x38]
  416399:	outs   dx,DWORD PTR ds:[esi]
  41639a:	cld    
  41639b:	pop    edx
  41639c:	int3   
  41639d:	xor    al,BYTE PTR [ecx+eiz*2]
  4163a0:	out    0x42,eax
	...
  4163ae:	add    BYTE PTR [eax],al
  4163b0:	add    bl,bh
  4163b2:	pop    edi
  4163b3:	retf   0xb76a
  4163b6:	shr    BYTE PTR fs:[eax-0x3b],cl
  4163ba:	inc    edx
  4163bb:	add    ah,cl
  4163bd:	shl    DWORD PTR [edi+0x63],cl
  4163c0:	mov    ebx,0x99675db1
  4163c5:	pusha  
  4163c6:	dec    ebx
  4163c7:	jb     0x41634d
  4163c9:	retf   
  4163ca:	lea    esp,ss:[bx+si+0x46]
  4163cf:	jb     0x416355
  4163d1:	mov    esp,0x937c6e48
  4163d6:	push   0x68ac8872
  4163db:	aas    
  4163dc:	jmp    0x85a4bb82
  4163e1:	sahf   
  4163e2:	push   edi
  4163e3:	arpl   WORD PTR [edi+eiz*2+0x46],cx
  4163e7:	jb     0x416449
  4163e9:	(bad)  
  4163ea:	pop    ecx
  4163eb:	inc    ebp
  4163ec:	dec    esp
  4163ed:	mov    edi,DWORD PTR [eax]
  4163ef:	jno    0x416435
  4163f1:	xchg   ecx,eax
  4163f2:	arpl   WORD PTR ds:[eax+0x67],ax
  4163f6:	inc    esi
  4163f7:	jb     0x416439
  4163f9:	das    
  4163fa:	pop    ecx
  4163fb:	inc    ebx
  4163fc:	xor    DWORD PTR [edi],esi
  4163fe:	bound  esi,QWORD PTR [edx+0x35]
  416401:	sbb    ch,BYTE PTR [eax+0x77]
  416404:	jmp    0x19b8bb2c
  416409:	sbb    ecx,DWORD PTR [ecx+0x63]
  41640c:	sbb    cl,BYTE PTR [ebx]
  41640e:	push   edi
  41640f:	ins    DWORD PTR es:[edi],dx
  416410:	adc    BYTE PTR [edx],bl
  416412:	push   0xe977
	...
  416423:	add    BYTE PTR [ebx],ah
  416425:	push   edi
  416426:	ja     0x416421
  416428:	sub    al,0x37
  41642a:	arpl   WORD PTR ds:0x4713404,ax
  416430:	and    ah,BYTE PTR [edx+0x6e]
  416433:	fld    QWORD PTR ds:0x32e9744d
  416439:	push   0x5912cc76
  41643e:	push   esp
  41643f:	mov    esi,0x6c6833
  416444:	sub    al,0x8
  416446:	dec    ebx
  416447:	jo     0x416468
  416449:	bound  edx,QWORD PTR [eax+0x72]
  41644c:	and    eax,0x9736165
  416451:	sbb    al,0x6b
  416453:	imul   ebp,edi,0x61
  416456:	add    BYTE PTR [ecx-0x19],cl
  416459:	aaa    
  41645a:	popa   
  41645b:	jb     0x416426
  41645d:	pusha  
  41645e:	outs   dx,BYTE PTR ds:[esi]
  41645f:	popa   
  416460:	into   
  416461:	push   0x4c
  416463:	outs   dx,DWORD PTR ds:[esi]
  416464:	in     eax,dx
  416465:	push   0x61c56461
  41646a:	push   ecx
  41646b:	jae    0x41644c
  41646d:	xor    eax,0x3bdf4700
  416472:	push   esp
  416473:	outs   dx,DWORD PTR ds:[esi]
  416474:	xchg   ecx,eax
  416475:	ins    BYTE PTR es:[edi],dx
  416476:	outs   dx,BYTE PTR ds:[esi]
  416477:	dec    ecx
  416478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416479:	imul   ebp,DWORD PTR [ebx+0x72],0xffffffa7
  41647d:	push   0x63256974
  416482:	add    BYTE PTR [ebx+0x35],al
  416485:	arpl   WORD PTR [esi+0x65],si
	...
  416494:	add    BYTE PTR [eax],al
  416496:	add    BYTE PTR [eax+0x1e694f2d],bl
  41649c:	or     eax,0x378e536b
  4164a1:	outs   dx,BYTE PTR gs:[esi]
  4164a3:	ins    DWORD PTR es:[edi],dx
  4164a4:	push   ss
  4164a5:	gs mov ecx,DWORD PTR fs:[ecx]
  4164a9:	dec    esp
  4164aa:	outs   dx,DWORD PTR ds:[esi]
  4164ab:	pop    ebp
  4164ac:	bound  ebp,QWORD PTR [esi+0x55]
  4164af:	dec    ecx
  4164b0:	ins    BYTE PTR es:[edi],dx
  4164b1:	jb     0x4164f4
  4164b3:	mov    al,BYTE PTR [ebx+0x6b]
  4164b6:	outs   dx,DWORD PTR ds:[esi]
  4164b7:	jno    0x4164f5
  4164b9:	jo     0x41650b
  4164bb:	mov    BYTE PTR [esi+0x76],bl
  4164be:	imul   eax,DWORD PTR [esi-0x439a9c96],0x9f756c66
  4164c8:	inc    esi
  4164c9:	add    BYTE PTR [ecx+0x63],al
  4164cc:	ret    0x7367
  4164cf:	lock mov ecx,0xc1c86d35
  4164d5:	imul   edx,DWORD PTR [eax-0x2f],0xffffffb5
  4164d9:	push   ebx
  4164da:	addr16 mov edi,0xd06364c1
  4164e0:	fadd   QWORD PTR [ecx]
  4164e2:	popa   
  4164e3:	mov    cl,0xa5
  4164e5:	push   ecx
  4164e6:	je     0x416558
  4164e8:	scas   al,BYTE PTR es:[edi]
  4164e9:	sub    esp,DWORD PTR [edi+edi*4-0x78]
  4164ed:	add    DWORD PTR [ecx-0x42],eax
  4164f0:	outs   dx,BYTE PTR ds:[esi]
  4164f1:	push   ebp
  4164f2:	dec    ebp
  4164f3:	xchg   ebx,eax
  4164f4:	sub    DWORD PTR [ebx+0x51],0x63554f9a
	...
  416507:	add    BYTE PTR [eax],al
  416509:	add    BYTE PTR [esi+0x6f],bh
  41650c:	push   ebp
  41650d:	ins    DWORD PTR es:[edi],dx
  41650e:	xchg   ecx,eax
  41650f:	mov    DWORD PTR [edx+0x0],eax
  416512:	mov    al,ds:0x9e745641
  416517:	inc    edx
  416518:	dec    edi
  416519:	imul   esp,DWORD PTR [eax+0x7a745641],0x4a
  416520:	imul   esp,DWORD PTR [ecx+0x42],0x10
  416524:	pop    edi
  416525:	jno    0x416551
  416527:	inc    edx
  416528:	xor    eax,0x5f0e3c74
  41652d:	add    BYTE PTR [eax],ah
  41652f:	dec    ecx
  416530:	push   esi
  416531:	je     0x416553
  416533:	clc    
  416534:	push   0x500f3e71
  416539:	ins    DWORD PTR es:[edi],dx
  41653a:	xor    DWORD PTR [ecx],eax
  41653c:	add    al,0x41
  41653e:	xor    ebp,esi
  416540:	push   ebx
  416541:	je     0x416565
  416543:	call   DWORD PTR [edx+0x73]
  416546:	or     cl,dh
  416548:	pusha  
  416549:	inc    ecx
  41654a:	push   es
  41654b:	into   
  41654c:	dec    ebp
  41654d:	addr16 std 
  41654f:	add    al,0x65
  416551:	pop    edi
  416552:	test   DWORD PTR [esp+ecx*8],0xd55bf133
  416559:	mul    DWORD PTR fs:[edi-0x5e]
  41655d:	pusha  
  41655e:	in     al,dx
  41655f:	add    al,0xe7
  416561:	add    esp,DWORD PTR [ebx+0x5]
  416564:	out    0x3,eax
  416566:	arpl   WORD PTR ds:0x56303e7,ax
  41656c:	out    0x3,eax
	...
  41657a:	add    BYTE PTR [eax],al
  41657c:	add    BYTE PTR [ebx+0x5],ah
  41657f:	out    0x3,eax
  416581:	arpl   WORD PTR ds:0x56303e7,ax
  416587:	out    0x3,eax
  416589:	arpl   WORD PTR ds:0x56303e7,ax
  41658f:	out    0x3,eax
  416591:	arpl   WORD PTR ds:0x56303e7,ax
  416597:	out    0x3,eax
  416599:	arpl   WORD PTR ds:0x56303e7,ax
  41659f:	out    0x3,eax
  4165a1:	arpl   WORD PTR ds:0x56303e7,ax
  4165a7:	out    0x3,eax
  4165a9:	arpl   WORD PTR ds:0x56303e7,ax
  4165af:	out    0x3,eax
  4165b1:	arpl   WORD PTR ds:0x56303e7,ax
  4165b7:	out    0x3,eax
  4165b9:	arpl   WORD PTR ds:0x56303e7,ax
  4165bf:	out    0x3,eax
  4165c1:	arpl   WORD PTR ds:0x56303e7,ax
  4165c7:	out    0x3,eax
  4165c9:	arpl   WORD PTR ds:0x56303e7,ax
  4165cf:	out    0x4b,eax
  4165d1:	ss cmp al,0x2b
  4165d4:	add    al,0x1a
  4165d6:	sub    BYTE PTR [edi+0x202b1b],dh
  4165dc:	int3   
  4165dd:	jo     0x4165f8
  4165df:	pop    eax
  4165e0:	mov    esp,0x0
	...
  4165ed:	add    BYTE PTR [eax],al
  4165ef:	add    BYTE PTR [ebx+0x15],al
  4165f2:	xor    al,0xc1
  4165f4:	dec    ebx
  4165f5:	xor    BYTE PTR es:[ebx],bl
  4165f8:	das    
  4165f9:	xor    BYTE PTR es:[ebx],bl
  4165fc:	daa    
  4165fd:	push   ds
  4165fe:	and    ebx,DWORD PTR [ecx]
  416600:	jne    0x41662f
  416602:	and    edi,ecx
  416604:	outs   dx,BYTE PTR ds:[esi]
  416605:	sub    eax,0x2d76f923
  41660a:	and    edi,ecx
  41660c:	outs   dx,BYTE PTR ds:[esi]
  41660d:	sub    eax,0x2d56f923
  416612:	and    ebx,ecx
  416614:	dec    esi
  416615:	sub    eax,0x64a1e97b
  41661a:	je     0x4165c3
  41661c:	mov    edi,0x83976759
  416621:	ss ja  0x41669e
  416624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416625:	imul   esi,DWORD PTR fs:[eax-0x16929886],0x75
  41662d:	fs jb  0x4166af
  416630:	and    DWORD PTR [ecx+0x31],0x1b
  416634:	dec    ecx
  416635:	imul   ebp,DWORD PTR [ebp+ecx*2+0x67],0x7a3e7148
  41663d:	pop    edx
  41663e:	ss adc eax,0x4a6d5397
  416644:	xor    al,0x56
  416646:	jno    0x416631
  416648:	xchg   edi,eax
  416649:	bound  esp,QWORD PTR [esi+0x3d]
  41664c:	xor    dh,BYTE PTR [eax]
  41664e:	jb     0x416694
  416650:	jnp    0x416699
  416652:	pop    edi
  416653:	sbb    eax,DWORD PTR [eax]
	...
  416661:	add    BYTE PTR [eax],al
  416663:	jnp    0x41669a
  416665:	ins    BYTE PTR es:[edi],dx
  416666:	adc    al,0x42
  416668:	push   0x476b1a6e
  41666d:	push   esp
  41666e:	cmp    DWORD PTR [ebx+0x3d],ebx
  416671:	ins    DWORD PTR es:[edi],dx
  416672:	add    BYTE PTR [ecx+0x69006f40],bl
  416678:	pop    esi
  416679:	data16 je 0x416601
  41667c:	arpl   WORD PTR [edx+0x65],si
  41667f:	outs   dx,BYTE PTR ds:[esi]
  416680:	inc    ebx
  416681:	pop    ebp
  416682:	jb     0x4166dc
  416684:	or     eax,0x65976c50
  416689:	outs   dx,BYTE PTR gs:[esi]
  41668b:	mov    DWORD PTR [eax],ebx
  41668d:	inc    esi
  41668e:	push   esp
  41668f:	sbb    bl,BYTE PTR [eax]
  416691:	dec    eax
  416692:	outs   dx,DWORD PTR ds:[esi]
  416693:	sbb    DWORD PTR [eax+0x6f],eax
  416696:	add    cl,ch
  416698:	pop    esp
  416699:	data16 je 0x4166a1
  41669c:	arpl   WORD PTR [edx+0x65],si
  41669f:	out    dx,al
  4166a0:	inc    ebp
  4166a1:	pop    ebp
  4166a2:	jb     0x4166c2
  4166a4:	sbb    DWORD PTR [ebp+0x76],ebx
  4166a7:	out    0x2f,eax
  4166a9:	inc    esp
  4166aa:	imul   ebx,ebx,0xc2676b67
  4166b0:	pop    edx
  4166b1:	outs   dx,DWORD PTR ds:[esi]
  4166b2:	je     0x4166a1
  4166b4:	cmp    DWORD PTR [ebp+0x5c],esi
  4166b7:	les    ebx,FWORD PTR [edi]
  4166b9:	push   eax
  4166ba:	dec    eax
  4166bb:	fnstsw WORD PTR [eax]
  4166bd:	je     0x4166bf
  4166bf:	fstp   DWORD PTR [esi+eiz*2+0x74]
  4166c3:	xchg   ebp,eax
  4166c4:	fs jb  0x41672c
	...
  4166d3:	add    BYTE PTR [eax],al
  4166d5:	add    BYTE PTR [esi],ch
  4166d7:	inc    ebx
  4166d8:	pop    ebp
  4166d9:	jb     0x416723
  4166db:	or     eax,0x3034614f
  4166e0:	fs inc esp
  4166e2:	xor    esp,DWORD PTR [esp+ebp*2+0x6f]
  4166e6:	and    eax,0x86736541
  4166eb:	pop    esi
  4166ec:	jb     0x416767
  4166ee:	outs   dx,BYTE PTR ds:[esi]
  4166ef:	inc    ebx
  4166f0:	push   esp
  4166f1:	push   eax
  4166f2:	jb     0x416752
  4166f4:	outs   dx,DWORD PTR ds:[esi]
  4166f5:	je     0x4166b1
  4166f7:	adc    ebx,DWORD PTR [ebp+0x73]
  4166fa:	arpl   bx,bp
  4166fc:	dec    esi
  4166fd:	ins    DWORD PTR es:[edi],dx
  4166fe:	adc    DWORD PTR [edx],ecx
  416700:	add    al,0x48
  416702:	add    al,0xcb
  416704:	dec    ebp
  416705:	dec    esi
  416706:	add    al,BYTE PTR [ecx]
  416708:	pop    ebp
  416709:	add    BYTE PTR [esi],ch
  41670b:	retf   
  41670c:	pop    esi
  41670d:	jb     0x416772
  41670f:	repnz push 0x50ddfe6e
  416715:	popa   
  416716:	jmp    0x4166a6
  416718:	pop    edi
  416719:	je     0x41670e
  41671b:	pop    es
  41671c:	imul   ebp,DWORD PTR [esi-0x36],0xab4535dc
  416723:	xchg   ebp,eax
  416724:	xor    al,0x4c
  416726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416727:	push   0x1
  416729:	inc    edi
  41672a:	mov    ch,0x8b
  41672c:	dec    ebp
  41672d:	pop    edi
  41672e:	iret   
  41672f:	nop
  416730:	cmp    eax,0x3fdcb167
  416735:	je     0x4166ea
  416737:	xchg   ebp,eax
  416738:	addr16 add BYTE PTR [bx+si],al
	...
  416748:	add    BYTE PTR [ebp+0x6363667d],dl
  41674e:	mov    ebp,DWORD PTR [eax+0x66]
  416751:	(bad)  
  416752:	dec    edi
  416753:	bound  esi,QWORD PTR [edx-0x7a]
  416756:	jo     0x416798
  416758:	push   0x63654b7a
  41675d:	jno    0x4166df
  41675f:	xor    BYTE PTR [edi-0x7b],ah
  416762:	inc    eax
  416763:	gs jne 0x4167d6
  416766:	cld    
  416767:	inc    eax
  416768:	ins    DWORD PTR es:[edi],dx
  416769:	jbe    0x4167b4
  41676b:	arpl   WORD PTR [esi+0x47],bp
  41676e:	dec    ecx
  41676f:	push   edx
  416770:	add    BYTE PTR [eax],dh
  416772:	aaa    
  416773:	pop    esi
  416774:	je     0x4167ca
  416776:	cmp    eax,0x1f276352
  41677b:	ins    BYTE PTR es:[edi],dx
  41677c:	xor    BYTE PTR [bx+si],dl
  41677f:	pop    edi
  416780:	jb     0x416799
  416782:	add    eax,0x6437673b
  416787:	or     esp,DWORD PTR [edx+eiz*1]
  41678a:	pop    esi
  41678b:	add    al,0x69
  41678d:	cmp    al,0x5f
  41678f:	add    esp,DWORD PTR [ecx+0x11]
  416792:	add    eax,0x52134d23
  416797:	imul   BYTE PTR [edi+ecx*1+0x62]
  41679b:	inc    DWORD PTR [ebx]
  41679d:	adc    bl,BYTE PTR [ebx+esi*8+0x60]
  4167a1:	repnz xor bh,ah
  4167a4:	aaa    
  4167a5:	and    al,0x55
  4167a7:	fimul  DWORD PTR [esi-0x4]
  4167aa:	pop    eax
  4167ab:	retf   0x6b
	...
  4167ba:	add    BYTE PTR [eax],al
  4167bc:	mov    edi,0x9d36ba36
  4167c1:	cmp    DWORD PTR [edi-0x2fa950fd],edx
  4167c7:	gs jne 0x416826
  4167ca:	lds    ebp,FWORD PTR [ebx+eiz*2+0x1f]
  4167ce:	shl    BYTE PTR [ebp-0x44],0x5
  4167d2:	mov    esi,0xb3478e32
  4167d7:	xor    esp,DWORD PTR [ebx+0x49]
  4167da:	mov    al,ds:0xa4496331
  4167df:	cmp    eax,0x3993c9f
  4167e4:	mov    ds:0x9d409338,al
  4167e9:	cmp    DWORD PTR [edi-0x60bd53fd],edx
  4167ef:	ins    BYTE PTR es:[edi],dx
  4167f0:	jb     0x41684b
  4167f2:	push   esi
  4167f3:	push   edx
  4167f4:	je     0x4167fb
  4167f6:	cmp    ah,BYTE PTR [edi+0x7d]
  4167f9:	pop    ecx
  4167fa:	pop    esi
  4167fb:	gs push ecx
  4167fd:	push   0x5e473f2b
  416802:	dec    ecx
  416803:	gs aas 
  416805:	xor    ch,BYTE PTR [edx]
  416807:	inc    ebp
  416808:	xor    ecx,DWORD PTR [eax+0x0]
  41680b:	adc    eax,0x44745220
  416810:	jne    0x41684b
  416812:	push   eax
  416813:	leave  
  416814:	pop    esi
  416815:	and    eax,0x623a0e48
  41681a:	pop    esp
  41681b:	cmp    BYTE PTR [eax],ah
  41681d:	cmp    DWORD PTR [ebp-0x2],ebp
	...
  41682c:	add    BYTE PTR [eax],al
  41682e:	add    ah,bh
  416830:	bound  ebx,QWORD PTR [edi-0x5]
  416833:	pusha  
  416834:	xor    al,0x6d
  416836:	pop    es
  416837:	xor    ebx,DWORD PTR [eax+0x5f]
  41683a:	sti    
  41683b:	add    esi,DWORD PTR [ecx]
  41683d:	inc    ebp
  41683e:	std    
  41683f:	std    
  416840:	bound  ebx,QWORD PTR [edi-0x2b]
  416843:	xor    DWORD PTR [edi+edi*1-0x47],eax
  416847:	and    esi,DWORD PTR [ecx]
  416849:	inc    ecx
  41684a:	fsubr  QWORD PTR [eax+ebp*2+0x2590b546]
  416851:	or     DWORD PTR ss:[edi-0x3c3892a9],edx
  416858:	push   esi
  416859:	jno    0x41681b
  41685b:	lds    ebx,FWORD PTR [ebx+0x5f]
  41685e:	mov    ebp,0xbd413c6c
  416863:	lds    ebx,FWORD PTR [edx+0x6c]
  416866:	mov    edi,DWORD PTR [edi-0x7a45ffa9]
  41686c:	arpl   WORD PTR [esi+edx*4+0x7f],si
  416870:	push   edi
  416871:	arpl   WORD PTR [ebp-0x7492a6b3],sp
  416877:	jg     0x4168d2
  416879:	push   ecx
  41687a:	stos   BYTE PTR es:[edi],al
  41687b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41687c:	xor    eax,0x58a18d43
  416881:	je     0x4168cf
  416883:	sub    eax,0x56095031
  416888:	and    eax,0x68444648
  41688d:	pop    esp
  41688e:	cmp    BYTE PTR [edx],ah
  416890:	xor    DWORD PTR [ebp+0x0],ebp
	...
  41689f:	add    BYTE PTR [eax],al
  4168a1:	add    BYTE PTR ds:0x8861625d,dh
  4168a7:	add    DWORD PTR [edi+0x6f],ecx
  4168aa:	sub    al,0x35
  4168ac:	jae    0x41690f
  4168ae:	js     0x4168dc
  4168b0:	pop    esp
  4168b1:	inc    edi
  4168b2:	push   esi
  4168b3:	bound  esp,QWORD PTR [edx+0x61]
  4168b6:	push   esi
  4168b7:	push   ss
  4168b8:	aas    
  4168b9:	inc    ecx
  4168ba:	pop    edx
  4168bb:	or     al,0x5c
  4168bd:	inc    ebx
  4168be:	outs   dx,DWORD PTR ds:[esi]
  4168bf:	xor    eax,0x116e4661
  4168c4:	and    BYTE PTR [edi],dh
  4168c6:	call   0x6f2c:0x6c6f7218
  4168cd:	jae    0x416932
  4168cf:	bound  ebp,QWORD PTR [esi+0x61]
  4168d2:	xchg   esi,eax
  4168d3:	adc    al,0x4d
  4168d5:	inc    ebx
  4168d6:	scas   al,BYTE PTR es:[edi]
  4168d7:	popa   
  4168d8:	imul   ebp,DWORD PTR [eax+ebp*1+0x67],0x72
  4168dd:	add    BYTE PTR [ecx],bl
  4168df:	popa   
  4168e0:	data16 je 0x4168f0
  4168e3:	addr16 jb 0x41694b
  4168e6:	out    0x8,al
  4168e8:	ins    BYTE PTR es:[edi],dx
  4168e9:	outs   dx,DWORD PTR ds:[esi]
  4168ea:	sub    BYTE PTR [edi+0x6c],ah
  4168ed:	push   ebx
  4168ee:	or     DWORD PTR [edi+0x50],eax
  4168f1:	inc    ebp
  4168f2:	es inc ebp
  4168f4:	jno    0x41696a
  4168f6:	fisttp WORD PTR [ecx]
  4168f8:	push   esp
  4168f9:	push   eax
  4168fa:	sub    dh,al
  4168fc:	pop    ds
  4168fd:	dec    eax
  4168fe:	xchg   ebp,eax
  4168ff:	arpl   WORD PTR [ecx+0x5c],sp
  416902:	jmp    0x416948
  416904:	push   esp
  416905:	outs   dx,DWORD PTR ds:[esi]
	...
  416912:	add    BYTE PTR [eax],al
  416914:	add    ch,dl
  416916:	arpl   WORD PTR [edx+0x61],sp
  416919:	js     0x416923
  41691b:	dec    edi
  41691c:	outs   dx,DWORD PTR ds:[esi]
  41691d:	fdivr  QWORD PTR [ebx]
  41691f:	jae    0x416982
  416921:	mov    BYTE PTR [esp+ebx*2],ch
  416924:	inc    edi
  416925:	xchg   esi,eax
  416926:	bound  esp,QWORD PTR [edx+0x61]
  416929:	arpl   WORD PTR [edx+0x2f],ax
  41692c:	inc    ecx
  41692d:	and    cl,BYTE PTR [esi]
  41692f:	cmp    eax,0x5009205c
  416934:	arpl   WORD PTR ds:0x7b2033f2,bx
  41693a:	(bad)  
  41693b:	xor    esi,DWORD PTR [edx+0x44]
  41693e:	inc    esp
  41693f:	pop    ebp
  416940:	jno    0x416972
  416942:	cmc    
  416943:	bound  ebp,QWORD PTR [esi+0x42]
  416946:	cli    
  416947:	aaa    
  416948:	dec    edi
  416949:	and    BYTE PTR [edx],cl
  41694b:	arpl   WORD PTR [ebp+0x7],bp
  41694e:	add    BYTE PTR [ecx+0x72],ah
  416951:	arpl   WORD PTR [edx],sp
  416953:	cmp    ebp,DWORD PTR [esp+esi*8-0x1]
  416957:	pusha  
  416958:	ins    BYTE PTR es:[edi],dx
  416959:	adc    BYTE PTR [edi],bl
  41695b:	inc    ecx
  41695c:	push   eax
  41695d:	push   ds
  41695e:	cli    
  41695f:	ds jae 0x416959
  416962:	mov    eax,0xde13543b
  416967:	xor    eax,0x5fc3cf45
  41696c:	pop    edi
  41696d:	(bad)  
  41696e:	pop    DWORD PTR [eax+0x3f]
  416971:	mov    bl,0x99
  416973:	xor    eax,0x5e90ce41
  416978:	inc    esi
	...
  416985:	add    BYTE PTR [eax],al
  416987:	add    BYTE PTR [edi-0x4eafde94],dl
  41698d:	mov    eax,DWORD PTR [ecx]
  41698f:	pop    esp
  416990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416991:	jo     0x4169f7
  416993:	(bad)  
  416995:	js     0x4169c7
  416997:	inc    ecx
  416998:	mov    ds:0xa05c3e8c,al
  41699d:	jno    0x4169ec
  41699f:	arpl   WORD PTR [ebp-0x68dfce98],sp
  4169a5:	jne    0x4169f4
  4169a7:	arpl   WORD PTR [ebx+0x70],sp
  4169aa:	inc    eax
  4169ab:	jae    0x416a1c
  4169ad:	cmp    DWORD PTR [ebx],0xe7059354
  4169b3:	das    
  4169b4:	jb     0x416a0e
  4169b6:	or     eax,0xe7513c68
  4169bb:	ss inc esi
  4169bd:	arpl   WORD PTR [ebx+0x5b],dx
  4169c0:	sub    al,0x57
  4169c2:	dec    esp
  4169c3:	xor    BYTE PTR ds:0x4b574859,bl
  4169c9:	inc    ebx
  4169ca:	sysenter 
  4169cc:	pop    ss
  4169cd:	push   ss
  4169ce:	out    0x36,eax
  4169d0:	arpl   WORD PTR ds:[ebx],bx
  4169d3:	pop    ebx
  4169d4:	add    al,0x57
  4169d6:	add    al,0x30
  4169d8:	and    eax,0xb570859
  4169dd:	inc    ebx
  4169de:	das    
  4169df:	xor    al,0x63
  4169e1:	ss push ss
  4169e3:	push   0xf
  4169e5:	push   edx
  4169e6:	or     BYTE PTR [esi+0x0],dl
  4169e9:	sub    DWORD PTR ds:0x60,ebp
	...
  4169fb:	adc    al,0x56
  4169fd:	dec    DWORD PTR [ecx+0xb]
  416a00:	xor    eax,0x3c6317c3
  416a05:	int    0x56
  416a07:	xlat   BYTE PTR ds:[ebx]
  416a08:	fs ret 
  416a0a:	pop    edi
  416a0b:	rcl    BYTE PTR [edi-0x5d],0x64
  416a0f:	xlat   BYTE PTR ds:[ebx]
  416a10:	pop    ebp
  416a11:	xchg   edi,eax
  416a12:	fs iret 
  416a14:	pop    ebp
  416a15:	out    0x53,eax
  416a17:	pushf  
  416a18:	push   ecx
  416a19:	mov    edi,0xba5b9c03
  416a1e:	push   edi
  416a1f:	mov    WORD PTR [ecx-0x6d],ds
  416a22:	and    edx,DWORD PTR [ebx+0x635b9364]
  416a28:	inc    ecx
  416a29:	mov    BYTE PTR [edi-0x4c],dl
  416a2c:	inc    ebx
  416a2d:	jle    0x416a8e
  416a2f:	xchg   DWORD PTR [eax+0x79],esp
  416a32:	add    esp,DWORD PTR [edi-0x7fa86fca]
  416a38:	push   esi
  416a39:	add    bh,al
  416a3b:	jl     0x416a67
  416a3d:	je     0x416a28
  416a3f:	cmp    al,0x3a
  416a41:	jae    0x416a93
  416a43:	jl     0x416aa1
  416a45:	cs inc ebp
  416a47:	inc    esi
  416a48:	push   ecx
  416a49:	add    BYTE PTR ds:0x55716297,dh
  416a4f:	inc    eax
  416a50:	push   edi
  416a51:	ja     0x416a6a
  416a53:	cmp    ebp,DWORD PTR [edx]
  416a55:	je     0x416a40
  416a57:	mov    WORD PTR [ebx+0x6c],es
  416a5a:	dec    eax
  416a5b:	or     al,0x5d
  416a5d:	inc    esi
  416a5e:	adc    DWORD PTR [eax],eax
	...
  416a6c:	add    BYTE PTR [eax],al
  416a6e:	ja     0x416a99
  416a70:	xor    ecx,ebp
  416a72:	je     0x416ab7
  416a74:	ins    BYTE PTR es:[edi],dx
  416a75:	or     BYTE PTR [ebx*2+0x294f3146],dh
  416a7c:	xor    al,0xe9
  416a7e:	cmp    al,0x43
  416a80:	addr16 adc eax,0xd672efa
  416a86:	add    ebp,DWORD PTR [edx]
  416a88:	add    BYTE PTR ds:0x474620c,dl
  416a8e:	add    ch,BYTE PTR [edx]
  416a90:	outs   dx,BYTE PTR ds:[esi]
  416a91:	enter  0x65f9,0x72
  416a95:	imul   ebx,DWORD PTR [esp+ebp*2-0x17]
  416a9a:	test   BYTE PTR [ebx+0x63],dl
  416a9d:	retf   0x57bb
  416aa0:	je     0x416a5c
  416aa2:	mov    ebx,0x96c47653
  416aa7:	push   esi
  416aa8:	cs mov cl,0xc3
  416aab:	pop    ecx
  416aac:	add    BYTE PTR [ebp-0x73939f46],cl
  416ab2:	xchg   esi,eax
  416ab3:	pusha  
  416ab4:	ins    BYTE PTR es:[edi],dx
  416ab5:	lea    eax,[edi-0x4b7b87e9]
  416abb:	add    eax,0x517a7e51
  416ac0:	jne    0x416ac2
  416ac2:	(bad)  [edx]
  416ac4:	popa   
  416ac5:	pop    esp
  416ac6:	les    ebp,FWORD PTR [ecx]
  416ac8:	ins    BYTE PTR es:[edi],dx
  416ac9:	shr    BYTE PTR gs:[ecx],1
  416acc:	ins    BYTE PTR es:[edi],dx
  416acd:	ins    BYTE PTR es:[edi],dx
  416ace:	fild   DWORD PTR [edi+ecx*2]
  416ad1:	outs   dx,DWORD PTR ds:[esi]
	...
  416ade:	add    BYTE PTR [eax],al
  416ae0:	add    BYTE PTR [ebp+ebp*1+0x60386173],dl
  416ae7:	pop    esp
  416ae8:	inc    esi
  416ae9:	and    esp,DWORD PTR [ebp+0x61]
  416aec:	pop    edx
  416aed:	and    esp,DWORD PTR [ebp+0x6c]
  416af0:	popa   
  416af1:	pop    edx
  416af2:	inc    edx
  416af3:	ins    BYTE PTR es:[edi],dx
  416af4:	imul   esp,DWORD PTR [edi],0x83007463
  416afa:	arpl   WORD PTR [edi+0x74],bp
  416afd:	sbb    esp,DWORD PTR [ebp+0x6c]
  416b00:	pop    edi
  416b01:	jbe    0x416b2f
  416b03:	jb     0x416b05
  416b05:	push   edx
  416b06:	outs   dx,WORD PTR ds:[esi]
  416b08:	je     0x416a94
  416b0a:	movq   mm4,QWORD PTR [ebp+0x68]
  416b0e:	add    DWORD PTR [eax+0x61],edx
  416b11:	mov    DWORD PTR [ecx],esi
  416b13:	add    BYTE PTR [eax+0x6d],dl
  416b16:	das    
  416b17:	je     0x416b19
  416b19:	pop    eax
  416b1a:	pusha  
  416b1b:	imul   ebp,DWORD PTR [edi+0x76],0x9344205f
  416b22:	xor    al,BYTE PTR [eax]
  416b24:	push   ebx
  416b25:	daa    
  416b26:	xor    dh,BYTE PTR [esi+0x65]
  416b29:	cmp    BYTE PTR [esp+edx*2],ah
  416b2c:	jns    0x416b58
  416b2e:	pop    edi
  416b2f:	add    BYTE PTR [ebx+0x17],dl
  416b32:	xor    dh,BYTE PTR [esi+0x65]
  416b35:	clc    
  416b36:	and    eax,0x2ff96f48
  416b3b:	add    BYTE PTR [ebx+0x27],dl
  416b3e:	xor    dh,BYTE PTR [esi+0x65]
  416b41:	enter  0x5125,0x73
	...
  416b51:	add    BYTE PTR [eax],al
  416b53:	add    bh,ah
  416b55:	xor    DWORD PTR [eax],eax
  416b57:	push   ebx
  416b58:	arpl   WORD PTR [ecx+0x53],di
  416b5b:	jbe    0x416ae3
  416b5d:	ins    BYTE PTR es:[edi],dx
  416b5e:	pop    ds
  416b5f:	push   eax
  416b60:	or     BYTE PTR [ebx+0x54],0x0
  416b64:	nop
  416b65:	adc    DWORD PTR [ebx+0x76],0x501f4c7e
  416b6c:	jl     0x416bba
  416b6e:	push   ebp
  416b6f:	add    BYTE PTR [ebx+0x6368583d],dl
  416b75:	or     esp,DWORD PTR [ebp+0x72]
  416b78:	dec    ebp
  416b79:	cmp    DWORD PTR [esi+0x54],edx
  416b7c:	dec    edx
  416b7d:	cs add BYTE PTR gs:[edi],dl
  416b81:	cmp    eax,0xeb837453
  416b86:	fs jb  0x416bb6
  416b89:	cmp    DWORD PTR [esi+0x20],edx
  416b8c:	sbb    eax,DWORD PTR [edi]
  416b8e:	push   ebx
  416b8f:	je     0x416bf4
  416b91:	adc    ah,BYTE PTR [ecx+0x71]
  416b94:	pop    ss
  416b95:	mov    esi,0xe8116334
  416b9a:	fs jb  0x416be0
  416b9d:	adc    DWORD PTR [ebx+0x63],edx
  416ba0:	adc    esi,ebx
  416ba2:	cmp    eax,0x21d1f05f
  416ba7:	push   ecx
  416ba8:	dec    bl
  416baa:	push   edi
  416bab:	arpl   cx,si
  416bad:	mov    ebp,0xaaf05f31
  416bb2:	add    DWORD PTR [edx+eax*8-0x55],ecx
  416bb6:	push   ebp
  416bb7:	and    BYTE PTR [eax],al
	...
  416bc5:	add    BYTE PTR [eax],al
  416bc7:	mov    al,0xb9
  416bc9:	push   ebx
  416bca:	jbe    0x416b92
  416bcc:	stos   BYTE PTR es:[edi],al
  416bcd:	and    DWORD PTR [eax-0x4c],edx
  416bd0:	mov    dl,BYTE PTR [ebp+0x0]
  416bd3:	scas   eax,DWORD PTR es:[edi]
  416bd4:	mov    ebp,0x6b837454
  416bd9:	data16 jb 0x416b91
  416bdc:	rcl    DWORD PTR [ebx+0x20],0x93
  416be0:	add    eax,0x58b5788
  416be5:	stos   DWORD PTR es:[edi],eax
  416be6:	bound  edx,QWORD PTR [edx-0x7fcb38af]
  416bec:	push   ebx
  416bed:	xchg   ebp,eax
  416bee:	xchg   cx,ax
  416bf0:	and    eax,0x60734a9b
  416bf5:	out    0x49,eax
  416bf7:	(bad)  
  416bf8:	xor    eax,0x4f8c41c7
  416bfd:	sub    BYTE PTR [eax-0x7c],0x51
  416c01:	push   esi
  416c02:	push   edx
  416c03:	arpl   WORD PTR [edi],di
  416c05:	xor    esi,DWORD PTR [ebx+eax*4]
  416c08:	inc    edx
  416c09:	inc    esi
  416c0a:	popa   
  416c0b:	cmp    BYTE PTR [ebp+edi*1+0x68],ah
  416c0f:	inc    eax
  416c10:	push   ebx
  416c11:	out    0x65,eax
  416c13:	aaa    
  416c14:	push   ebp
  416c15:	dec    ebx
  416c16:	pop    ebp
  416c17:	xor    dl,BYTE PTR [ecx+0x5]
  416c1a:	pop    eax
  416c1b:	sub    edx,DWORD PTR [ecx-0x19]
  416c1e:	das    
  416c1f:	and    DWORD PTR [eax+0x13],edx
  416c22:	pusha  
  416c23:	add    BYTE PTR [ecx+0x37],dl
  416c26:	push   edx
  416c27:	push   es
  416c28:	push   esi
  416c29:	or     eax,0x24
	...
  416c3a:	xor    dl,BYTE PTR [esi+0x5]
  416c3d:	pop    eax
  416c3e:	push   cs
  416c3f:	fs stc 
  416c41:	push   0x65031763
  416c46:	out    dx,eax
  416c47:	add    al,0xc5
  416c49:	popa   
  416c4a:	repz push ecx
  416c4c:	out    0x32,eax
  416c4e:	neg    BYTE PTR [esi-0x25]
  416c51:	push   esi
  416c52:	mov    esp,0xa12fc453
  416c57:	xor    eax,0x29b337ad
  416c5c:	test   eax,0xcc59b758
  416c61:	push   edi
  416c62:	xor    DWORD PTR ds:0x5fc65eb9,0x0
  416c69:	or     DWORD PTR [ebp-0x5c72afcf],esp
  416c6f:	es addr16 xchg edi,eax
  416c72:	pusha  
  416c73:	xor    al,0x6d
  416c75:	xchg   DWORD PTR [eax+edx*2+0x297b9b5f],ebp
  416c7c:	inc    edx
  416c7d:	xchg   esp,eax
  416c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c7f:	pop    ecx
  416c80:	arpl   WORD PTR [ebp+0x30],di
  416c83:	push   ebx
  416c84:	ins    DWORD PTR es:[edi],dx
  416c85:	mov    ?,WORD PTR [esi+0x25]
  416c88:	push   ecx
  416c89:	xchg   BYTE PTR [esi-0x6d778aaf],al
  416c8f:	bound  ebx,QWORD PTR [ebx+ebp*1+0x3a]
  416c93:	pop    ecx
  416c94:	ins    BYTE PTR es:[edi],dx
  416c95:	inc    esp
  416c96:	cmp    esi,DWORD PTR ds:0x5f2c4672
  416c9c:	and    BYTE PTR [edi],ah
	...
  416caa:	add    BYTE PTR [eax],al
  416cac:	add    BYTE PTR [ebx+0x432a2035],cl
  416cb2:	pop    esi
  416cb3:	arpl   WORD PTR [edi+0x1b],cx
  416cb6:	sub    DWORD PTR [ebx+0x48],ecx
  416cb9:	push   cs
  416cba:	push   edi
  416cbb:	add    BYTE PTR [edx],bl
  416cbd:	add    al,0x5f
  416cbf:	je     0x416cdf
  416cc1:	push   es
  416cc2:	push   ebx
  416cc3:	arpl   WORD PTR ds:0x3d463521,di
  416cc9:	push   edi
  416cca:	sub    DWORD PTR [edx+0x14],eax
  416ccd:	add    ebx,DWORD PTR [ecx+0x63]
  416cd0:	std    
  416cd1:	inc    eax
  416cd2:	xor    eax,0x5f140e72
  416cd7:	and    BYTE PTR [edi],ch
  416cd9:	sub    esi,DWORD PTR ds:0x510f1e5c
  416cdf:	addr16 (bad) 
  416ce1:	mov    esi,0xb5ba0036
  416ce6:	sub    esi,DWORD PTR [esi+ebx*8-0x39]
  416cea:	aaa    
  416ceb:	arpl   WORD PTR [ebp+0x6c38a2],bp
  416cf1:	push   ss
  416cf2:	cs je  0x416d45
  416cf5:	clc    
  416cf6:	arpl   WORD PTR [ebx+0x66],bp
  416cf9:	pop    edx
  416cfa:	clc    
  416cfb:	push   0x66
  416cfd:	out    dx,al
  416cfe:	pop    ebx
  416cff:	pop    ebp
  416d00:	jb     0x416cf1
  416d02:	hlt    
  416d03:	inc    ecx
  416d04:	jne    0x416cec
  416d06:	fs popa 
  416d08:	je     0x416cd4
  416d0a:	push   esi
  416d0b:	imul   ebp,DWORD PTR [edi-0x24],0xffffffe8
  416d0f:	inc    ebp
  416d10:	push   esp
	...
  416d1d:	add    BYTE PTR [eax],al
  416d1f:	add    dl,bl
  416d21:	call   0x2e14d964
  416d26:	outs   dx,BYTE PTR ds:[esi]
  416d27:	je     0x416cff
  416d29:	add    esi,DWORD PTR [eax+0x74]
  416d2c:	jecxz  0x416d91
  416d2e:	outs   dx,BYTE PTR ds:[esi]
  416d2f:	jae    0x416cfb
  416d31:	cmc    
  416d32:	push   0x66
  416d34:	cs pop edx
  416d36:	pop    ebp
  416d37:	jb     0x416d58
  416d39:	cmc    
  416d3a:	inc    ecx
  416d3b:	push   eax
  416d3c:	jl     0x416d3b
  416d3e:	dec    edi
  416d3f:	add    BYTE PTR [esi+0x28],dh
  416d42:	outs   dx,DWORD PTR ds:[esi]
  416d43:	je     0x416d9e
  416d45:	sub    al,0x6f
  416d47:	jae    0x416d6c
  416d49:	bound  ebp,QWORD PTR [esi+0x46]
  416d4c:	and    esp,DWORD PTR ds:0x60590061
  416d52:	je     0x416db9
  416d54:	jns    0x416da3
  416d56:	gs jb  0x416dd3
  416d59:	jmp    FWORD PTR [ebp+0x73]
  416d5c:	outs   dx,BYTE PTR ds:[esi]
  416d5d:	sub    BYTE PTR [esp+ebp*2+0x4e],ch
  416d61:	pusha  
  416d62:	jb     0x416d95
  416d64:	mov    ah,BYTE PTR [edx]
  416d66:	js     0x416dd5
  416d68:	or     WORD PTR [ebx+edx*2+0x67],bx
  416d6d:	daa    
  416d6e:	jb     0x416de4
  416d70:	or     al,0xfc
  416d72:	dec    edi
  416d73:	add    ah,bh
  416d75:	es jbe 0x416de7
  416d78:	arpl   ax,sp
  416d7a:	pop    edx
  416d7b:	je     0x416d3b
  416d7d:	fistp  WORD PTR [ebx]
  416d7f:	fs ret 0x182
  416d83:	dec    eax
	...
  416d90:	add    BYTE PTR [eax],al
  416d92:	add    dl,cl
  416d94:	jg     0x416deb
  416d96:	ins    DWORD PTR es:[edi],dx
  416d97:	mov    cl,0x75
  416d99:	sbb    esp,DWORD PTR [edx+eax*8+0x7a]
  416d9d:	add    DWORD PTR [edi-0x79],ebx
  416da0:	xchg   edx,eax
  416da1:	dec    edi
  416da2:	bound  ecx,QWORD PTR [eax-0x68a09a2c]
  416da8:	scas   al,BYTE PTR es:[edi]
  416da9:	push   edx
  416daa:	jae    0x416e26
  416dac:	(bad)  
  416dad:	pop    eax
  416dae:	xchg   DWORD PTR cs:[ebp-0x6568ffab],ecx
  416db5:	push   esi
  416db6:	jb     0x416d39
  416db8:	mov    eax,DWORD PTR [ebx+0x54]
  416dbb:	xchg   ebx,eax
  416dbc:	scas   al,BYTE PTR es:[edi]
  416dbd:	xor    BYTE PTR [ebp+0x45],ch
  416dc0:	bound  edx,QWORD PTR [ebx+0x5f]
  416dc3:	push   ecx
  416dc4:	dec    ecx
  416dc5:	xor    BYTE PTR [esi+edx*2+0x60],dl
  416dc9:	bound  ebp,QWORD PTR [ebp+0x1d]
  416dcc:	cli    
  416dcd:	xor    eax,DWORD PTR [eax]
  416dcf:	dec    edx
  416dd0:	pop    esp
  416dd1:	dec    edi
  416dd2:	je     0x416e16
  416dd4:	push   edx
  416dd5:	pusha  
  416dd6:	jo     0x416e1a
  416dd8:	add    bl,BYTE PTR [eax+eax*1+0x10]
  416ddc:	add    esp,DWORD PTR [esi+0x74]
  416ddf:	adc    al,0xd
  416de1:	push   edx
  416de2:	arpl   WORD PTR [edi],si
  416de4:	call   FWORD PTR [edx+0x74]
  416de7:	add    bh,dl
  416de9:	inc    ebp
  416dea:	inc    esi
  416deb:	sbb    eax,0x200033fa
  416df0:	shl    BYTE PTR [esi+0x64],0xfe
  416df4:	adc    ebx,DWORD PTR [eax+0x67]
	...
  416e03:	add    BYTE PTR [eax],al
  416e05:	add    BYTE PTR [edx],al
  416e07:	or     ch,BYTE PTR [edi]
  416e09:	pop    edi
  416e0a:	idiv   DWORD PTR [ecx+0x5d14101]
  416e10:	int3   
  416e11:	shl    BYTE PTR [bp+di],0xd3
  416e15:	pop    edx
  416e16:	lods   al,BYTE PTR ds:[esi]
  416e17:	xor    DWORD PTR [edx-0x3dd93fa5],ebp
  416e1d:	add    edx,DWORD PTR [edx-0x51a832ce]
  416e23:	and    al,0xb9
  416e25:	data16 (bad) 
  416e27:	push   esi
  416e28:	(bad)  
  416e29:	push   edi
  416e2a:	test   BYTE PTR [ecx-0x5b],ah
  416e2d:	inc    ebp
  416e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e2f:	pop    ecx
  416e30:	mov    bh,0x2f
  416e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e33:	xor    eax,0x337e5a93
  416e38:	call   0x7650:0x9a24b303
  416e3f:	xor    bh,BYTE PTR [ecx+0x67]
  416e42:	arpl   WORD PTR [eax+0x7a],bx
  416e45:	data16 jno 0x416e9b
  416e48:	mov    BYTE PTR [esi-0x80],bl
  416e4b:	add    eax,0x39525c9f
  416e50:	sub    BYTE PTR [eax+0x51],ah
  416e53:	ss out 0x35,eax
  416e56:	inc    eax
  416e57:	xor    BYTE PTR [esi+0x50],al
  416e5a:	inc    eax
  416e5b:	dec    ecx
  416e5c:	inc    eax
  416e5d:	push   esi
  416e5e:	arpl   WORD PTR [ebp+0x56],dx
  416e61:	push   esi
  416e62:	das    
  416e63:	add    eax,0x39325b2f
  416e68:	and    eax,0x65
	...
  416e79:	cmp    BYTE PTR [eax],ch
  416e7b:	out    0x33,eax
  416e7d:	push   cs
  416e7e:	aaa    
  416e7f:	sbb    eax,DWORD PTR [eax+esi*1]
  416e82:	ss add al,0x56
  416e85:	std    
  416e86:	and    eax,DWORD PTR [ecx+eiz*2]
  416e89:	arpl   WORD PTR [ebp+0x8],dx
  416e8c:	push   edi
  416e8d:	repnz cmp DWORD PTR [esi],edx
  416e90:	push   esi
  416e91:	inc    DWORD PTR [edi+ebp*1]
  416e94:	pop    ebx
  416e95:	repnz cmp BYTE PTR [eax],al
  416e98:	sub    eax,0x84e3706
  416e9d:	mov    edx,0xb9ba0026
  416ea2:	sub    esi,DWORD PTR [esi+edx*8-0x39]
  416ea6:	aaa    
  416ea7:	arpl   WORD PTR [ebp-0x3899cf63],si
  416ead:	ret    
  416eae:	es inc ecx
  416eb0:	mov    esp,0xce50e590
  416eb5:	ret    0x7539
  416eb8:	enter  0x268e,0x5c
  416ebc:	mov    al,ds:0x9b6339ba
  416ec1:	mov    edx,0x50bd7426
  416ec6:	aaa    
  416ec7:	ins    DWORD PTR es:[edi],dx
  416ec8:	(bad)  
  416ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eca:	xor    DWORD PTR [ebx-0x66],esp
  416ecd:	pusha  
  416ece:	push   esp
  416ecf:	ins    DWORD PTR es:[edi],dx
  416ed0:	(bad)  
  416ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ed2:	cmp    BYTE PTR [edi+0x7b],bl
  416ed5:	and    DWORD PTR [ecx+0x46],0xffffff9d
  416ed9:	xor    BYTE PTR [eax+0x5f],bl
  416edc:	jnp    0x416ede
	...
  416eea:	add    BYTE PTR [eax],al
  416eec:	inc    ebx
  416eed:	popa   
  416eee:	inc    ecx
  416eef:	lea    eax,ss:[esi+0x46]
  416ef3:	xor    eax,0x40516197
  416ef8:	xor    esp,DWORD PTR [esi]
  416efa:	jno    0x416ee5
  416efc:	js     0x416f2e
  416efe:	jno    0x416f3d
  416f00:	pop    edi
  416f01:	push   esi
  416f02:	jno    0x416f48
  416f04:	adc    eax,0xd465005
  416f09:	cmp    DWORD PTR [eax],eax
  416f0b:	sbb    DWORD PTR [eax+0x5],edx
  416f0e:	push   eax
  416f0f:	sbb    eax,0x3a005737
  416f14:	push   esp
  416f15:	dec    ebp
  416f16:	add    BYTE PTR [ecx],bl
  416f18:	sub    eax,0x1b006630
  416f1d:	es jno 0x416f20
  416f20:	mov    WORD PTR [ebp+0x69],cs
  416f23:	ins    BYTE PTR es:[edi],dx
  416f24:	jp     0x416f0f
  416f26:	inc    ebp
  416f27:	push   esp
  416f28:	dec    edx
  416f29:	jmp    0x599be76e
  416f2e:	imul   esi,DWORD PTR [edx+0x27],0x5b
  416f32:	add    BYTE PTR [ebx+0x1d],dl
  416f35:	daa    
  416f36:	je     0x416faf
  416f38:	sbb    ebx,DWORD PTR [ebx+0x61]
  416f3b:	pop    esp
  416f3c:	add    al,0xf1
  416f3e:	dec    edi
  416f3f:	and    BYTE PTR [edi],al
  416f41:	dec    ebp
  416f42:	jo     0x416fb0
  416f44:	sbb    eax,0xce72615b
  416f49:	inc    esi
  416f4a:	push   esp
  416f4b:	push   eax
  416f4c:	push   0x46
  416f4e:	js     0x416fc0
	...
  416f5c:	add    BYTE PTR [eax],al
  416f5e:	add    dh,ch
  416f60:	pop    ebx
  416f61:	jb     0x416fc8
  416f63:	call   0xe8b0c250
  416f68:	pop    edi
  416f69:	outs   dx,DWORD PTR ds:[esi]
  416f6a:	jo     0x416f57
  416f6c:	daa    
  416f6d:	popa   
  416f6e:	pop    esp
  416f6f:	scas   eax,DWORD PTR es:[edi]
  416f70:	inc    esi
  416f71:	aas    
  416f72:	push   esp
  416f73:	fstp   QWORD PTR [ebx+0x6c]
  416f76:	inc    edx
  416f77:	fistp  DWORD PTR [edx+0x29]
  416f7a:	xor    bl,BYTE PTR [eax]
  416f7c:	adc    DWORD PTR [eax],eax
  416f7e:	inc    edx
  416f7f:	aaa    
  416f80:	push   ebp
  416f81:	je     0x416ff2
  416f83:	sbb    al,0x5a
  416f85:	add    BYTE PTR [ebx+0x1d],dl
  416f88:	and    esi,DWORD PTR [edi+esi*2+0x2b]
  416f8c:	push   edi
  416f8d:	popa   
  416f8e:	pop    esp
  416f8f:	test   ch,dh
  416f91:	dec    edi
  416f92:	and    BYTE PTR [edi+0x1d6c7051],al
  416f98:	push   edi
  416f99:	popa   
  416f9a:	jb     0x41700a
  416f9c:	stc    
  416f9d:	jno    0x41700e
  416f9f:	fs pop esp
  416fa1:	ins    BYTE PTR es:[edi],dx
  416fa2:	imul   ecx,DWORD PTR gs:[ecx],0x1b636150
  416fa9:	push   ebx
  416faa:	jne    0x416fb8
  416fac:	sbb    al,0x60
  416fae:	add    BYTE PTR [ebx],dl
  416fb0:	or     eax,0xef47153
  416fb5:	push   esi
  416fb6:	lgs    edx,FWORD PTR fs:[ecx+0x63]
  416fbb:	arpl   si,sp
  416fbd:	push   esi
  416fbe:	jno    0x416f8f
  416fc0:	scas   al,BYTE PTR es:[edi]
  416fc1:	xor    eax,0x6d
	...
  416fd2:	(bad)  
  416fd3:	aad    0x57
  416fd5:	add    BYTE PTR [ebx+0x637453c7],dh
  416fdb:	gs push edi
  416fdd:	scas   eax,DWORD PTR es:[di]
  416fdf:	aad    0x62
  416fe1:	ins    BYTE PTR es:[edi],dx
  416fe2:	xchg   ebx,eax
  416fe3:	int    0x4d
  416fe5:	push   0x704d7063
  416fea:	mov    al,0xc5
  416fec:	dec    ebp
  416fed:	arpl   WORD PTR [ebp+0x66],ax
  416ff0:	push   esi
  416ff1:	ins    BYTE PTR es:[edi],dx
  416ff2:	arpl   WORD PTR [edx-0x70858dc1],ax
  416ff8:	bound  esi,QWORD PTR [esi+eax*4-0x25]
  416ffc:	add    DWORD PTR [esi],ebp
  416ffe:	mov    bl,BYTE PTR [eax-0x6770ffa6]
  417004:	bound  ebp,QWORD PTR [esi-0x61]
  417007:	xor    eax,0x6b3f635c
  41700c:	pop    eax
  41700d:	outs   dx,BYTE PTR ds:[esi]
  41700e:	cmp    eax,0x305c5f55
  417013:	dec    ecx
  417014:	push   ebx
  417015:	jno    0x417051
  417017:	inc    edi
  417018:	pop    edx
  417019:	jno    0x41707e
  41701b:	repnz xor ah,BYTE PTR [ebx+0x30]
  41701f:	sti    
  417020:	pop    eax
  417021:	ins    DWORD PTR es:[edi],dx
  417022:	cmp    eax,0x345103fb
  417027:	push   eax
  417028:	push   eax
  417029:	jne    0x41702d
  41702b:	cld    
  41702c:	pop    esp
  41702d:	pop    esp
  41702e:	sub    eax,0x275a0805
  417033:	adc    bl,BYTE PTR ds:[edi+0x0]
	...
  417043:	add    BYTE PTR [eax],al
  417045:	daa    
  417046:	push   esp
  417047:	or     al,0x65
  417049:	lock xor al,BYTE PTR [edx+eax*2]
  41704d:	sbb    eax,DWORD PTR ds:0x26fd592a
  417053:	adc    BYTE PTR [ecx+0x43],ah
  417056:	push   ebp
  417057:	or     BYTE PTR [eax-0x35],dl
  41705a:	add    eax,0x33cf5814
  41705f:	enter  0xab41,0x55
  417063:	out    0x27,eax
  417065:	shr    BYTE PTR [ebx+ebx*8],cl
  417068:	pop    esi
  417069:	mov    dl,0xef
  41706b:	into   
  41706c:	push   esi
  41706d:	mov    DWORD PTR ds:0x559741a3,0x2db24e99
  417077:	out    0x35,eax
  417079:	nop
  41707a:	xor    bh,BYTE PTR [edi-0x73c683cc]
  417080:	sbb    DWORD PTR [ebx-0x4dfc74d0],ecx
  417086:	sub    BYTE PTR [ecx-0x18cc7faf],bl
  41708c:	cs jb  0x4170b7
  41708f:	jns    0x4170ea
  417091:	mov    WORD PTR [eax],?
  417093:	test   BYTE PTR [ebx],al
  417095:	xchg   ebx,eax
  417096:	and    al,0x7a
  417098:	push   esp
  417099:	push   esi
  41709a:	cs jns 0x4170fc
  41709d:	arpl   WORD PTR [edi+0x5b],ax
  4170a0:	push   esp
  4170a1:	xor    ebp,DWORD PTR [esi]
  4170a3:	pop    ecx
  4170a4:	push   eax
  4170a5:	arpl   WORD PTR [edx+0x46],dx
  4170a8:	pop    esi
	...
  4170b5:	add    BYTE PTR [eax],al
  4170b7:	add    BYTE PTR [edi],dh
  4170b9:	ss dec eax
  4170bb:	push   edx
  4170bc:	inc    eax
  4170bd:	popa   
  4170be:	sub    dl,BYTE PTR [edx+0x34]
  4170c1:	sub    BYTE PTR [ecx],bh
  4170c3:	sub    BYTE PTR [esi],cl
  4170c5:	sub    BYTE PTR [eax],al
  4170c7:	dec    ebx
  4170c8:	push   eax
  4170c9:	es je  0x417110
  4170cc:	dec    edi
  4170cd:	xor    ah,BYTE PTR [edx+0x15]
  4170d0:	cs xor al,0x68
  4170d3:	add    al,0x31
  4170d5:	add    eax,0x391e2b5c
  4170da:	dec    ecx
  4170db:	add    BYTE PTR ds:0x2e97822,cl
  4170e1:	es je  0x4170f6
  4170e4:	push   es
  4170e5:	das    
  4170e6:	arpl   cx,si
  4170e8:	jbe    0x417113
  4170ea:	jno    0x4170d5
  4170ec:	cwde   
  4170ed:	xor    BYTE PTR [ecx-0x23],dh
  4170f0:	mov    dh,0x5e
  4170f2:	imul   eax,esp,0x60
  4170f5:	push   edx
  4170f6:	jno    0x4170c4
  4170f8:	xchg   edx,eax
  4170f9:	das    
  4170fa:	pop    edi
  4170fb:	mov    esp,0xc85005c3
  417100:	xchg   ecx,eax
  417101:	xor    al,0x75
  417103:	into   
  417104:	xchg   edx,eax
  417105:	sub    DWORD PTR [eax],eax
  417107:	cdq    
  417108:	mov    ch,0x33
  41710a:	je     0x4170f5
  41710c:	push   ecx
  41710d:	xor    BYTE PTR [esi-0x63],ah
  417110:	popf   
  417111:	pop    esi
  417112:	jb     0x417098
  417114:	cmp    al,0x42
  417116:	js     0x4170b1
  417118:	xchg   DWORD PTR [edi],ebp
  41711a:	inc    esp
  41711b:	fwait
	...
  417128:	add    BYTE PTR [eax],al
  41712a:	add    BYTE PTR [edi+0x31a56337],dl
  417130:	and    dh,BYTE PTR [ecx+0x7a]
  417133:	xchg   DWORD PTR [eax],esi
  417135:	outs   dx,BYTE PTR ds:[esi]
  417136:	jp     0x417198
  417138:	popa   
  417139:	inc    ebx
  41713a:	jno    0x41716c
  41713c:	pop    esi
  41713d:	outs   dx,BYTE PTR ds:[esi]
  41713e:	sub    eax,0x44762631
  417143:	pop    edi
  417144:	popa   
  417145:	fs pop ebx
  417147:	push   ds
  417148:	aaa    
  417149:	arpl   WORD PTR [edx+0x4d],bx
  41714c:	sub    esi,DWORD PTR [ecx+0x0]
  41714f:	mov    edx,0x69616fe3
  417154:	push   edx
  417155:	jae    0x4171c6
  417157:	pop    eax
  417158:	and    eax,0xe1902022
  41715d:	and    DWORD PTR [eax],eax
  41715f:	cwde   
  417160:	adc    eax,0x5f555300
  417165:	je     0x4171de
  417167:	imul   edx,DWORD PTR [ebx+0x61],0x5c
  41716b:	aas    
  41716c:	push   ecx
  41716d:	jo     0x4171d0
  41716f:	push   esp
  417170:	inc    ebp
  417171:	jb     0x4171dc
  417173:	ins    BYTE PTR es:[edi],dx
  417174:	and    al,0x0
  417176:	inc    ebp
  417177:	push   edx
  417178:	pop    ecx
  417179:	pop    ebp
  41717a:	outs   dx,BYTE PTR ds:[esi]
  41717b:	jle    0x4171d4
  41717d:	gs jbe 0x41719f
  417180:	in     al,0x47
  417182:	outs   dx,DWORD PTR ds:[esi]
  417183:	pop    ss
  417184:	add    BYTE PTR es:[ebx+0x2f],dl
  417188:	push   edi
  417189:	jbe    0x4171f0
  41718b:	sbb    BYTE PTR [ecx],cl
  41718d:	push   ecx
  41718e:	jae    0x417190
	...
  41719c:	add    BYTE PTR [eax],al
  41719e:	pop    ds
  41719f:	push   edi
  4171a0:	dec    esi
  4171a1:	popa   
  4171a2:	pop    ss
  4171a3:	add    BYTE PTR es:[eax+0x2b],dl
  4171a7:	pop    eax
  4171a8:	outs   dx,DWORD PTR ds:[esi]
  4171a9:	ja     0x417180
  4171ab:	push   esi
  4171ac:	add    BYTE PTR fs:0xe9735cf9,ah
  4171b3:	dec    ebx
  4171b4:	imul   esi,DWORD PTR [edx-0x12],0x8
  4171b8:	inc    esp
  4171b9:	imul   ebx,eax,0xd5745f25
  4171bf:	push   esi
  4171c0:	jne    0x4171c2
  4171c2:	leave  
  4171c3:	push   ebx
  4171c4:	data16 je 0x417224
  4171c7:	and    DWORD PTR [edx+0x65],esi
  4171ca:	out    0xf2,al
  4171cc:	ds dec eax
  4171ce:	pop    edx
  4171cf:	imul   BYTE PTR [edx+0x66]
  4171d2:	cs dec edx
  4171d4:	pop    ebp
  4171d5:	jb     0x41723a
  4171d7:	dec    ecx
  4171d8:	sub    BYTE PTR [ecx+0x47],al
  4171db:	dec    ebp
  4171dc:	dec    edi
  4171dd:	jno    0x417219
  4171df:	dec    edi
  4171e0:	ds push esp
  4171e2:	adc    ebx,DWORD PTR [edx]
  4171e4:	ds push esp
  4171e6:	xor    ebp,ebp
  4171e8:	pop    esi
  4171e9:	popa   
  4171ea:	add    al,0xf1
  4171ec:	push   ebp
  4171ed:	je     0x4171ff
  4171ef:	scas   al,BYTE PTR es:[edi]
  4171f0:	cmp    esi,DWORD PTR [ebx+edx*1-0x1]
  4171f4:	pop    esp
  4171f5:	jb     0x4171ec
  4171f7:	or     BYTE PTR [edx+0x0],dl
  4171fa:	sbb    eax,0xf0535412
  4171ff:	or     BYTE PTR [edx+0x4e],dl
	...
  41720e:	add    BYTE PTR [eax],al
  417210:	add    BYTE PTR [edx],al
  417212:	or     DWORD PTR [ebp+0x0],ebx
  417215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417216:	mov    edx,0xbfc25051
  41721b:	push   eax
  41721c:	jne    0x4171da
  41721e:	loopne 0x41727d
  417220:	add    BYTE PTR [esp+eiz*2-0x326c8fb3],ah
  417227:	push   eax
  417228:	jno    0x4171d6
  41722a:	jnp    0x41727b
  41722c:	arpl   WORD PTR fs:[ebp+ecx*2+0x70],bp
  417231:	lahf   
  417232:	aad    0x4f
  417234:	arpl   WORD PTR [eax-0x658dab86],ax
  41723a:	scas   al,BYTE PTR es:[edi]
  41723b:	xor    BYTE PTR [ebp-0x5b],cl
  41723e:	jp     0x41726c
  417240:	aas    
  417241:	mov    cl,0x61
  417243:	and    eax,0x2166a04e
  417248:	push   ecx
  417249:	test   BYTE PTR [ebp+ecx*2+0x5e408275],al
  417250:	pop    esp
  417251:	popf   
  417252:	mov    bl,BYTE PTR [edx+0x6e]
  417255:	inc    esp
  417256:	xchg   edx,eax
  417257:	inc    edx
  417258:	popa   
  417259:	inc    eax
  41725a:	cmp    ecx,DWORD PTR [esi+0x6e]
  41725d:	push   edi
  41725e:	add    eax,0x2c32045a
  417263:	inc    ebp
  417264:	push   eax
  417265:	ss es pop ecx
  417268:	pop    edi
  417269:	pop    ss
  41726a:	inc    ebx
  41726b:	xor    esi,DWORD PTR [edx+eiz*1]
  41726e:	sub    DWORD PTR [eax+0x5f],edx
  417271:	xor    eax,0x311b31
	...
  417282:	add    BYTE PTR [eax],al
  417284:	add    al,0x31
  417286:	dec    esp
  417287:	push   ecx
  417288:	arpl   WORD PTR [eax+0x3e],bx
  41728b:	pop    esi
  41728c:	pop    ss
  41728d:	xor    al,0x8
  41728f:	push   edx
  417290:	add    BYTE PTR [ecx+0x3a],bl
  417293:	push   ebp
  417294:	add    eax,0x6162f31
  417299:	aaa    
  41729a:	push   es
  41729b:	sub    BYTE PTR ds:0xf7411751,ah
  4172a1:	sub    eax,0x59d75604
  4172a6:	sbb    bl,BYTE PTR [ebx-0x31]
  4172a9:	and    dl,bh
  4172ab:	add    edi,DWORD PTR [ebp+0x2a]
  4172ae:	fbld   TBYTE PTR [eax+0x63]
  4172b1:	jmp    0x417280
  4172b3:	push   edi
  4172b4:	iret   
  4172b5:	add    eax,0x56933cb3
  4172ba:	mov    esi,0xc832b75d
  4172bf:	push   ecx
  4172c0:	rcr    BYTE PTR [ecx-0x5d],0x5a
  4172c4:	xchg   ecx,eax
  4172c5:	and    dl,cl
  4172c7:	dec    edi
  4172c8:	xchg   BYTE PTR [edi],dh
  4172ca:	mov    al,0x23
  4172cc:	sahf   
  4172cd:	xor    eax,0x5963509c
  4172d2:	mov    edx,0x8c379c5b
  4172d7:	pop    edi
  4172d8:	xchg   edx,eax
  4172d9:	and    BYTE PTR [ebx-0x71d47bb1],dl
  4172df:	push   eax
  4172e0:	xor    eax,0x63508a26
  4172e5:	pop    ecx
  4172e6:	add    BYTE PTR [edx+0x0],bl
	...
  4172f4:	add    BYTE PTR [eax],al
  4172f6:	add    BYTE PTR [eax],bh
  4172f8:	pop    edx
  4172f9:	jb     0x41727f
  4172fb:	sub    al,0x54
  4172fd:	arpl   WORD PTR [ebp-0x75],bx
  417300:	and    ch,BYTE PTR [esi+0x46]
  417303:	je     0x41735d
  417305:	das    
  417306:	ss scas eax,DWORD PTR es:[edi]
  417308:	pop    ecx
  417309:	xor    edi,edi
  41730b:	test   DWORD PTR [ecx+esi*2],esp
  41730e:	jmp    0x48a9c717
  417313:	push   ebp
  417314:	es sbb cl,BYTE PTR fs:[edx+0x31]
  417319:	je     0x41735b
  41731b:	push   ecx
  41731c:	and    BYTE PTR [ecx-0x29],dh
  41731f:	dec    ebp
  417320:	sub    ch,BYTE PTR [eax+edx*1+0x3b]
  417324:	add    BYTE PTR es:0x1b5f2d0c,dh
  41732b:	cmp    ah,BYTE PTR [ecx]
  41732d:	push   ecx
  41732e:	or     al,0x2b
  417330:	xor    DWORD PTR [edi+0xf],esp
  417333:	mov    BYTE PTR [ebx*2+0x5cf5c1b8],dh
  41733a:	mov    ah,0x52
  41733c:	xor    eax,0x3177d56f
  417341:	arpl   cx,bp
  417343:	pushf  
  417344:	inc    esp
  417345:	ins    DWORD PTR es:[edi],dx
  417346:	iret   
  417347:	mov    ah,BYTE PTR [esi]
  417349:	arpl   WORD PTR [edx-0x65dfca95],bp
  41734f:	jno    0x417374
  417351:	je     0x417309
  417353:	inc    edi
  417354:	aaa    
  417355:	arpl   cx,bp
  417357:	inc    esp
  417358:	es pop edi
  41735a:	mov    ecx,0x0
	...
  417367:	add    BYTE PTR [eax],al
  417369:	add    BYTE PTR [edx],bh
  41736b:	xor    DWORD PTR [eax-0x17],esi
  41736e:	dec    ebx
  41736f:	sub    ebp,DWORD PTR [esp+eax*4+0x47]
  417373:	xor    eax,0x26388c2e
  417378:	add    BYTE PTR [edx+0x63313f],bl
  41737e:	imul   esi,DWORD PTR [ecx+eiz*2+0x6f065661],0x6eed5669
  417389:	cs jecxz 0x41737f
  41738c:	add    BYTE PTR fs:[esi],bl
  41738f:	push   ebp
  417390:	popa   
  417391:	popa   
  417392:	sbb    bl,BYTE PTR [esi+0x5d]
  417395:	jb     0x4173be
  417397:	and    eax,0xf11b654c
  41739c:	inc    ebp
  41739d:	push   esp
  41739e:	dec    edx
  41739f:	add    DWORD PTR [edi+0x4f],ecx
  4173a2:	inc    esp
  4173a3:	pop    ebp
  4173a4:	push   ebx
  4173a5:	inc    ecx
  4173a6:	js     0x4173f4
  4173a8:	pop    esp
  4173a9:	dec    esp
  4173aa:	daa    
  4173ab:	loopne 0x41741c
  4173ad:	push   edi
  4173ae:	pop    ebx
  4173af:	repz pusha 
  4173b1:	add    BYTE PTR [ebx],dh
  4173b3:	imul   DWORD PTR [esi+0x74]
  4173b6:	imul   esi,ebp,0x6b
  4173b9:	push   eax
  4173ba:	pop    ebx
  4173bb:	std    
  4173bc:	add    BYTE PTR ds:0x73e0,dh
  4173c1:	popa   
  4173c2:	xchg   dl,ch
  4173c4:	jno    0x4173c6
  4173c6:	jp     0x4173aa
  4173c8:	outs   dx,BYTE PTR ds:[esi]
  4173c9:	jae    0x417420
  4173cb:	hlt    
  4173cc:	jno    0x417432
	...
  4173da:	add    BYTE PTR [eax],al
  4173dc:	add    BYTE PTR [edx],bh
  4173de:	dec    ebp
  4173df:	imul   esi,DWORD PTR [ebx+0x16],0x57
  4173e3:	pop    ebp
  4173e4:	ins    DWORD PTR es:[edi],dx
  4173e5:	daa    
  4173e6:	add    eax,0xf3277351
  4173eb:	dec    ebp
  4173ec:	popa   
  4173ed:	pmaxsw mm7,mm7
  4173f0:	push   ecx
  4173f1:	daa    
  4173f2:	imul   BYTE PTR [edx+0x74]
  4173f5:	daa    
  4173f6:	inc    ecx
  4173f7:	gs jb  0x417421
  4173fa:	loopne 0x41746f
  4173fc:	outs   dx,DWORD PTR ds:[esi]
  4173fd:	call   0xed9173fb
  417402:	bnd jae 0x417453
  417405:	arpl   WORD PTR [ecx-0x63799dd0],bx
  41740b:	add    DWORD PTR [esi-0x70],eax
  41740e:	sahf   
  41740f:	xor    ebp,DWORD PTR [ebp+0x57]
  417412:	xchg   DWORD PTR [esi],esp
  417414:	ins    DWORD PTR es:[edi],dx
  417415:	inc    edi
  417416:	scas   al,BYTE PTR es:[edi]
  417417:	push   esi
  417418:	ins    DWORD PTR es:[edi],dx
  417419:	inc    ebp
  41741a:	xor    bh,BYTE PTR [edx]
  41741c:	pop    edi
  41741d:	push   ecx
  41741e:	dec    ecx
  41741f:	pusha  
  417420:	dec    ebx
  417421:	inc    edx
  417422:	pop    esp
  417423:	cmp    BYTE PTR [edi+0x45],ah
  417426:	push   cs
  417427:	push   esp
  417428:	jb     0x417464
  41742a:	inc    ebx
  41742b:	ss ja  0x417465
  41742e:	scas   al,BYTE PTR es:[edi]
  41742f:	pop    ebp
  417430:	xor    DWORD PTR [ecx-0x14],edx
  417433:	sub    BYTE PTR [ebp+ebx*1-0x6],dh
  417437:	xor    ebp,DWORD PTR [esi]
  417439:	cli    
  41743a:	imul   DWORD PTR [eax]
  41743c:	add    BYTE PTR ds:0x6752ea,dl
	...
  41744e:	add    BYTE PTR [eax],al
  417450:	test   DWORD PTR [eax],0xa2e33
  417456:	sub    DWORD PTR [eax],eax
  417458:	nop/reserved BYTE PTR ds:0x2abc1f74
  41745f:	jbe    0x417427
  417461:	scas   al,BYTE PTR es:[edi]
  417462:	push   ecx
  417463:	pop    edi
  417464:	sar    BYTE PTR [ebx+0x2d16d58],1
  41746a:	add    al,0x53
  41746c:	rcl    edx,1
  41746e:	add    DWORD PTR [ebx-0x50],edx
  417471:	shl    DWORD PTR [ebx],0x4e
  417474:	ret    0x26c1
  417477:	add    BYTE PTR [ecx-0x608bcf89],dl
  41747d:	aad    0x33
  41747f:	arpl   WORD PTR [eax-0x658dcf8e],ax
  417485:	scas   al,BYTE PTR es:[edi]
  417486:	push   ecx
  417487:	ins    DWORD PTR es:[edi],dx
  417488:	xchg   ecx,eax
  417489:	jb     0x41748c
  41748b:	push   ecx
  41748c:	je     0x417493
  41748e:	lea    esi,[edi]
  417490:	jbe    0x4174b8
  417492:	cdq    
  417493:	es xchg edi,eax
  417495:	push   esp
  417496:	xchg   BYTE PTR [esi],dh
  417498:	ja     0x4174c7
  41749a:	(bad)  
  41749b:	push   ebp
  41749c:	jl     0x4174cd
  41749e:	mov    WORD PTR ds:0x24845183,?
  4174a4:	dec    ebx
  4174a5:	daa    
  4174a6:	xchg   BYTE PTR [edi],ch
  4174a8:	and    BYTE PTR ds:[eax+0x3e595226],al
  4174af:	daa    
  4174b0:	inc    ecx
  4174b1:	inc    ecx
  4174b2:	pop    ecx
  4174b3:	sub    eax,DWORD PTR [eax]
	...
  4174c1:	add    BYTE PTR [eax],al
  4174c3:	sub    eax,0x3e453322
  4174c8:	daa    
  4174c9:	cmp    eax,0x50314227
  4174ce:	xor    DWORD PTR ds:0x54e734,ecx
  4174d4:	xor    edi,DWORD PTR ds:0x30511127
  4174da:	xor    al,0x0
  4174dc:	add    eax,0xe513582d
  4174e1:	sub    DWORD PTR [ecx+0x25],edx
  4174e4:	push   ecx
  4174e5:	cmp    DWORD PTR [ecx+0x1f],edx
  4174e8:	add    eax,0x44135825
  4174ed:	ss push edx
  4174ef:	arpl   di,sp
  4174f1:	div    BYTE PTR ds:0x541305bd
  4174f7:	shl    DWORD PTR [esi],1
  4174f9:	add    eax,0xda20b72b
  4174fe:	add    esp,edx
  417500:	cmp    BYTE PTR [ebx+0x10],bl
  417503:	in     eax,0x72
  417505:	aas    
  417506:	sub    dh,BYTE PTR [edx-0x50d4b19a]
  41750c:	xor    DWORD PTR [edi-0x1919b003],esi
  417512:	sub    ecx,DWORD PTR [edi+0x57b90031]
  417518:	sti    
  417519:	sub    al,0xfe
  41751b:	pusha  
  41751c:	pop    ds
  41751d:	je     0x4174b8
  41751f:	(bad)  
  417520:	jmp    0x35755e51
  417525:	arpl   WORD PTR [ebx+0x0],bx
	...
  417533:	add    BYTE PTR [eax],al
  417535:	add    BYTE PTR [ecx+0x5],al
  417538:	jne    0x4174c2
  41753a:	xor    ah,BYTE PTR [ecx]
  41753c:	lea    eax,cs:[ecx+0x2f9e0031]
  417543:	sub    BYTE PTR [esi+0x7d],ah
  417546:	mov    edx,DWORD PTR [esi+0x72]
  417549:	test   BYTE PTR [eax+ecx*2],ah
  41754c:	jo     0x41759a
  41754e:	jno    0x4175a6
  417550:	and    BYTE PTR [edx],bh
  417552:	test   BYTE PTR [edi],bl
  417554:	je     0x4175b4
  417556:	xchg   BYTE PTR [ebx],dh
  417558:	arpl   cx,bp
  41755a:	adc    al,0x56
  41755c:	jno    0x41759b
  41755e:	xchg   DWORD PTR [edx+0x67],eax
  417561:	cmp    ecx,DWORD PTR [edx+0x24]
  417564:	je     0x4175ac
  417566:	push   ecx
  417567:	cs xor ecx,ebp
  41756a:	adc    al,0x56
  41756c:	jno    0x41758b
  41756e:	xchg   DWORD PTR [edi],edi
  417570:	outs   dx,BYTE PTR ds:[esi]
  417571:	sbb    bh,BYTE PTR [ebx]
  417573:	push   esi
  417574:	ins    BYTE PTR es:[edi],dx
  417575:	add    eax,0x155f4687
  41757a:	aaa    
  41757b:	add    eax,0x338bf94d
  417580:	pop    edi
  417581:	iret   
  417582:	test   al,0x51
  417584:	dec    ebx
  417585:	and    eax,0x46834c3
  41758a:	xchg   ebx,eax
  41758b:	sub    DWORD PTR [esi+edx*8+0x70],ebx
  41758f:	and    ch,BYTE PTR [esi-0x43]
  417592:	sub    DWORD PTR [eax],0x2787c46b
  417598:	fs jmp 0x41759e
	...
  4175a6:	add    BYTE PTR [eax],al
  4175a8:	add    BYTE PTR [ebp+0x1e],ch
  4175ab:	jno    0x4175ad
  4175ad:	das    
  4175ae:	loopne 0x417623
  4175b0:	jo     0x41758b
  4175b2:	repz jne 0x417628
  4175b5:	fs jecxz 0x41761c
  4175b8:	outs   dx,BYTE PTR ds:[esi]
  4175b9:	cli    
  4175ba:	push   ebp
  4175bb:	cmp    eax,0x4543ef63
  4175c0:	push   esp
  4175c1:	or     dl,BYTE PTR [ebx+0x6b]
  4175c4:	data16 into 
  4175c6:	out    dx,al
  4175c7:	pop    esp
  4175c8:	jb     0x4175a9
  4175ca:	push   ebp
  4175cb:	cmp    eax,0x4543ef63
  4175d0:	push   esp
  4175d1:	retf   0x5254
  4175d4:	push   ebp
  4175d5:	mov    edx,0xee464b52
  4175da:	dec    esi
  4175db:	cmp    eax,0x3f258f52
  4175e0:	ins    BYTE PTR es:[edi],dx
  4175e1:	sub    esi,edx
  4175e3:	outs   dx,BYTE PTR ds:[esi]
  4175e4:	or     DWORD PTR gs:0xec0a7954,esp
  4175eb:	dec    ebx
  4175ec:	imul   ebp,DWORD PTR [eax],0x48437725
  4175f2:	mov    al,0x43
  4175f4:	xor    bh,BYTE PTR [ecx]
  4175f6:	mov    cl,0x43
  4175f8:	sub    eax,0x3436b192
  4175fd:	xchg   edi,eax
  4175fe:	lods   eax,DWORD PTR ds:[esi]
  4175ff:	ds inc ecx
  417601:	dec    ecx
  417602:	mov    ah,0x3f
  417604:	inc    ebx
  417605:	cmp    al,0xbc
  417607:	sub    dh,BYTE PTR [ebx+ecx*4]
  41760a:	inc    eax
  41760b:	ss xor al,0x0
	...
  41761a:	add    BYTE PTR [eax],al
  41761c:	(bad)  
  41761d:	mov    bh,0x34
  41761f:	inc    esi
  417620:	or     eax,0x3a7d34bc
  417625:	pop    eax
  417626:	dec    ebx
  417627:	inc    esi
  417628:	outs   dx,BYTE PTR ds:[esi]
  417629:	pop    esp
  41762a:	cmp    eax,0x3f550f52
  41762f:	ins    BYTE PTR es:[edi],dx
  417630:	sub    edi,eax
  417632:	outs   dx,BYTE PTR ds:[esi]
  417633:	gs arpl di,cx
  417636:	pop    ebp
  417637:	push   esp
  417638:	stos   BYTE PTR es:[edi],al
  417639:	into   
  41763a:	sub    BYTE PTR [edx+ecx*4-0x40],cl
  41763e:	pop    ebp
  41763f:	jns    0x41769b
  417641:	imul   eax,DWORD PTR [ebx+esi*1+0x56],0x3636efb1
  417649:	imul   esi,esp,0xf5d93131
  41764f:	xor    al,0x2e
  417651:	fcomi  st,st(0)
  417653:	inc    ecx
  417654:	mov    al,ds:0x9e2afcd3
  417659:	(bad)  
  41765b:	xor    DWORD PTR [esi-0x73d0069c],edx
  417661:	outs   dx,DWORD PTR ds:[esi]
  417662:	out    dx,eax
  417663:	inc    eax
  417664:	dec    esi
  417665:	sahf   
  417666:	ss addr16 push eax
  417669:	mov    DWORD PTR [ebx],esp
  41766b:	je     0x4176a0
  41766d:	dec    edi
  41766e:	xor    dh,BYTE PTR [esi+0x30]
  417671:	add    al,0x29
  417673:	outs   dx,BYTE PTR ds:[esi]
  417674:	cmp    bl,BYTE PTR [esi+0x49306734]
  41767a:	es je  0x417690
  41767d:	sbb    al,0x29
  41767f:	outs   dx,BYTE PTR ds:[esi]
	...
  41768c:	add    BYTE PTR [eax],al
  41768e:	add    BYTE PTR [edx],cl
  417690:	sahf   
  417691:	inc    ebx
  417692:	push   esp
  417693:	xor    edx,DWORD PTR [ebx+ebp*1]
  417696:	ja     0x41769a
  417698:	dec    ebx
  417699:	and    eax,0x38044d72
  41769e:	jo     0x417703
  4176a0:	in     al,dx
  4176a1:	push   edi
  4176a2:	push   eax
  4176a3:	adc    eax,0xfc5f390b
  4176a8:	or     BYTE PTR [edx],dh
  4176aa:	cs sar bh,cl
  4176ad:	add    ebx,DWORD PTR [ecx+esi*4+0x16]
  4176b1:	sub    DWORD PTR [esi-0x44],ebp
  4176b4:	movntps XMMWORD PTR [esi-0x31],xmm4
  4176b8:	je     0x4176da
  4176ba:	ins    DWORD PTR es:[edi],dx
  4176bb:	into   
  4176bc:	add    eax,0x38b22de7
  4176c1:	sbb    ch,dh
  4176c3:	shl    BYTE PTR [ecx],0xc3
  4176c6:	add    edx,DWORD PTR [ebp-0x5ba345a8]
  4176cc:	and    edx,eax
  4176ce:	aaa    
  4176cf:	arpl   WORD PTR [ebx-0x66],ax
  4176d2:	push   eax
  4176d3:	scas   al,BYTE PTR es:[edi]
  4176d4:	pop    eax
  4176d5:	mov    edi,0xbe298f36
  4176da:	xor    al,0x8d
  4176dc:	add    eax,0x479250b5
  4176e1:	mov    BYTE PTR [eax],dh
  4176e3:	cmp    bl,0xda
  4176e6:	pop    esp
  4176e7:	lahf   
  4176e8:	sub    cl,BYTE PTR [edx-0x56d5b8d4]
  4176ee:	ss cmp eax,0x31842b
	...
  417700:	add    BYTE PTR [eax],al
  417702:	arpl   WORD PTR [eax-0x54],bx
  417705:	inc    eax
  417706:	sbb    al,0x59
  417708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417709:	dec    esi
  41770a:	push   ds
  41770b:	dec    ebx
  41770c:	pop    ecx
  41770d:	daa    
  41770e:	inc    eax
  41770f:	ds push ebx
  417711:	daa    
  417712:	cmp    BYTE PTR ds:0xf6744937,al
  417718:	sub    eax,0x30390045
  41771d:	cvtpi2ps xmm7,QWORD PTR cs:[ecx]
  417721:	cs sub al,0x21
  417724:	and    ah,BYTE PTR [edi]
  417726:	or     al,0x58
  417728:	cmp    ebp,DWORD PTR ds:0x493704f7
  41772e:	inc    esp
  41772f:	idiv   BYTE PTR ds:0xff38f043
  417735:	es cmc 
  417737:	cmp    BYTE PTR [eax],al
  417739:	and    DWORD PTR [ecx+edi*1+0x3eb3040c],edi
  417740:	mov    eax,0x49b3f2
  417745:	sbb    esp,DWORD PTR [esi+0x710a6349]
  41774b:	cmp    dh,BYTE PTR [eax-0x23]
  41774e:	pusha  
  41774f:	push   ebp
  417750:	dec    ecx
  417751:	sbb    BYTE PTR [eax],dh
  417753:	push   edx
  417754:	inc    esi
  417755:	fstp   TBYTE PTR [ebp+0x26]
  417758:	push   ecx
  417759:	mov    ebp,0xe900394f
  41775e:	pusha  
  41775f:	add    eax,0x560e900
  417764:	add    cl,ch
	...
  417772:	add    BYTE PTR [eax],al
  417774:	add    BYTE PTR [eax+0x5],ah
  417777:	add    cl,ch
  417779:	pusha  
  41777a:	add    eax,0x560e900
  41777f:	add    cl,ch
  417781:	pusha  
  417782:	add    eax,0x560e900
  417787:	add    cl,ch
  417789:	pusha  
  41778a:	add    eax,0x2293e900
  41778f:	ins    BYTE PTR es:[edi],dx
  417790:	nop
  417791:	xchg   esp,eax
  417792:	es xor edi,eax
  417795:	jl     0x4177b8
  417797:	ins    BYTE PTR es:[edi],dx
  417798:	jmp    0x50ad9a10
  41779d:	jae    0x4177c5
  41779f:	xor    DWORD PTR [esi],edi
  4177a1:	js     0x4177d8
  4177a3:	arpl   WORD PTR [edi+0x5f],ax
  4177a6:	xor    al,0x6f
  4177a8:	cmp    eax,0xfa63394e
  4177ad:	cmp    DWORD PTR [esp+ebp*2],esp
  4177b0:	dec    esi
  4177b1:	push   esp
  4177b2:	add    BYTE PTR es:[edx],bh
  4177b5:	dec    esi
  4177b6:	and    DWORD PTR [edi+0x35],esp
  4177b9:	inc    edx
  4177ba:	hlt    
  4177bb:	pop    esp
  4177bc:	sbb    DWORD PTR ds:0x35087026,ebp
  4177c2:	add    BYTE PTR es:[edx],bl
  4177c5:	and    DWORD PTR cs:[edi+0x15],esp
  4177c9:	xor    ah,0x5c
  4177cc:	add    BYTE PTR [ecx-0x1e],bl
  4177cf:	pusha  
  4177d0:	jo     0x41780c
  4177d2:	sti    
  4177d3:	ins    BYTE PTR es:[edi],dx
  4177d4:	ins    BYTE PTR es:[edi],dx
  4177d5:	arpl   bp,si
  4177d7:	pusha  
  4177d8:	xor    eax,DWORD PTR [eax]
	...
  4177e6:	add    BYTE PTR [eax],al
  4177e8:	ins    DWORD PTR es:[edi],dx
  4177e9:	jmp    0x5f6d:0xdd176c6a
  4177f0:	sbb    cl,dh
  4177f2:	jae    0x417859
  4177f4:	or     DWORD PTR [esi],eax
  4177f6:	outs   dx,DWORD PTR ds:[esi]
  4177f7:	jno    0x4177d7
  4177f9:	loopne 0x41786e
  4177fb:	sbb    DWORD PTR gs:[edi+0x5f],ecx
  4177ff:	outs   dx,DWORD PTR ds:[esi]
  417800:	push   ds
  417801:	cmc    
  417802:	push   0x6be7ed6e
  417807:	outs   dx,DWORD PTR ds:[esi]
  417808:	sub    BYTE PTR [esi],al
  41780a:	add    BYTE PTR [ebp-0x33],ch
  41780d:	out    dx,eax
  41780e:	outs   dx,BYTE PTR ds:[esi]
  41780f:	jno    0x4177ef
  417811:	loopne 0x417886
  417813:	or     DWORD PTR gs:[ecx+eiz*2+0x6f065e6c],ebx
  41781b:	jno    0x41780b
  41781d:	loopne 0x417892
  41781f:	or     DWORD PTR gs:[edi+0x6b],ecx
  417823:	jo     0x4177fc
  417825:	(bad)  
  417827:	jb     0x417864
  417829:	jmp    0x635c:0xba277464
  417830:	push   ds
  417831:	fisubr WORD PTR [esi+0x65]
  417834:	mov    edx,0x236c6cfa
  417839:	cmc    
  41783a:	pusha  
  41783b:	xor    edi,DWORD PTR ds:0x4a6571f9
  417841:	call   0xfabbddb7
  417846:	ins    BYTE PTR es:[edi],dx
  417847:	ins    BYTE PTR es:[edi],dx
  417848:	and    esi,ebp
  41784a:	pusha  
  41784b:	xor    eax,DWORD PTR [eax]
	...
  417859:	add    BYTE PTR [eax],al
  41785b:	sbb    eax,0x4a6573fa
  417860:	or     DWORD PTR [edi+0x71],ebp
  417863:	arpl   WORD PTR [eax],cx
  417865:	sub    esi,DWORD PTR [esi+eax*8-0x35]
  417869:	pop    edx
  41786a:	popa   
  41786b:	les    ebx,FWORD PTR [edx]
  41786d:	das    
  41786e:	imul   edi,DWORD PTR [ebp-0x3088d9f1],0x1
  417875:	xor    eax,0x25adb000
  41787a:	scas   eax,DWORD PTR es:[di]
  41787c:	shl    esi,0x5c
  41787f:	sar    BYTE PTR [edi-0x37498cdb],0x5a
  417886:	bound  ecx,QWORD PTR [edi+0x6300236f]
  41788c:	sahf   
  41788d:	add    DWORD PTR [eax],eax
  41788f:	arpl   WORD PTR [esi-0x619cffff],bx
  417895:	add    DWORD PTR [eax],eax
  417897:	arpl   WORD PTR [esi-0x619cffff],bx
  41789d:	add    DWORD PTR [eax],eax
  41789f:	arpl   WORD PTR [esi-0x619cffff],bx
  4178a5:	add    DWORD PTR [eax],eax
  4178a7:	arpl   WORD PTR [esi+0x2e630001],bx
  4178ad:	xor    ebp,DWORD PTR [ebp+0x45]
  4178b0:	xchg   ebp,eax
  4178b1:	and    eax,0x2cc85063
  4178b6:	outs   dx,BYTE PTR ds:[esi]
  4178b7:	dec    edx
  4178b8:	sahf   
  4178b9:	push   ecx
  4178ba:	jb     0x417900
  4178bc:	inc    eax
  4178bd:	sub    DWORD PTR [eax+eax*1+0x0],ebp
	...
  4178cd:	add    BYTE PTR [esi-0x62],al
  4178d0:	dec    edx
  4178d1:	jno    0x4178e4
  4178d3:	inc    ecx
  4178d4:	sub    BYTE PTR [edi+0x17],bl
  4178d7:	inc    ebp
  4178d8:	xor    ah,BYTE PTR [ebx+0x63]
  4178db:	push   cs
  4178dc:	and    DWORD PTR [ebx+edi*8-0x63],esi
  4178e0:	push   ecx
  4178e1:	pop    edi
  4178e2:	cmovbe edx,DWORD PTR [eax+0x6d]
  4178e6:	neg    BYTE PTR es:[eax+eax*1]
  4178ea:	lock add al,0x10
  4178ed:	and    ebp,edi
  4178ef:	pop    ds
  4178f0:	or     eax,0x18343535
  4178f5:	sub    ah,al
  4178f7:	cmp    DWORD PTR [esp+eax*1],eax
  4178fa:	rcr    BYTE PTR [esi],cl
  4178fc:	push   cs
  4178fd:	sub    bh,BYTE PTR [esi-0x2f1605e1]
  417903:	sub    eax,0x1eb203fb
  417908:	push   es
  417909:	sub    al,dh
  41790b:	pop    ds
  41790c:	(bad)  
  41790e:	jle    0x417949
  417910:	fild   QWORD PTR [edi]
  417912:	arpl   WORD PTR [eax+eax*8],si
  417915:	and    BYTE PTR [ebp+0x5234bd20],cl
  41791b:	fistp  QWORD PTR [edx+0xa05973b]
  417921:	test   BYTE PTR [ebx-0x7f09f5fb],0x5
  417928:	or     dh,dh
  41792a:	add    DWORD PTR ds:0x4a9f3eba,0x4faa
	...
  417940:	add    BYTE PTR [ebx+0x1d],al
  417943:	xchg   BYTE PTR [edi+edx*2],dh
  417946:	pop    ds
  417947:	mov    BYTE PTR [esi],ah
  417949:	inc    eax
  41794a:	loope  0x417912
  41794c:	push   ds
  41794d:	cmp    eax,0x533a7924
  417952:	cmp    DWORD PTR [edi+ebx*1+0x35843410],ecx
  417959:	inc    ebp
  41795a:	es push esp
  41795c:	pop    ds
  41795d:	jg     0x417944
  41795f:	inc    ebx
  417960:	sub    al,BYTE PTR [edx+0x33]
  417963:	push   eax
  417964:	xor    al,0x17
  417966:	sub    al,BYTE PTR [ebx+0x54]
  417969:	xor    al,0x34
  41796b:	cmp    dh,BYTE PTR [ecx]
  41796d:	(bad)  
  41796e:	xor    al,BYTE PTR [ebx-0x1c]
  417971:	push   ds
  417972:	push   ebx
  417973:	add    BYTE PTR [esi],ah
  417975:	and    al,0xe5
  417977:	push   0x3e
  417979:	xor    eax,0x42166c52
  41797e:	sub    BYTE PTR [esi+0x1a],ch
  417981:	pop    edi
  417982:	inc    edi
  417983:	sbb    edi,DWORD PTR [si+0x27]
  417987:	ins    DWORD PTR es:[edi],dx
  417988:	adc    DWORD PTR [edi+0x51],ebx
  41798b:	dec    ebx
  41798c:	push   ss
  41798d:	lea    esp,[esi]
  41798f:	ins    BYTE PTR es:[edi],dx
  417990:	or     eax,0x465180
  417995:	jne    0x4179b9
  417997:	data16 (bad) 
  417999:	js     0x4179ec
  41799b:	add    BYTE PTR [edx-0x298bd885],bh
  4179a1:	xor    DWORD PTR [ebx],0xb563
	...
  4179b3:	add    BYTE PTR [ebp+0x3cc07a20],ah
  4179b9:	and    DWORD PTR [edi-0x17],ebx
  4179bc:	add    eax,0x42e92adc
  4179c1:	cmp    DWORD PTR [eax-0xd],esi
  4179c4:	or     esp,edx
  4179c6:	inc    eax
  4179c8:	inc    esp
  4179c9:	cmp    DWORD PTR [eax-0x1d],esi
  4179cc:	sti    
  4179cd:	loope  0x4179ce
  4179cf:	nop
  4179d0:	xor    al,0x39
  4179d2:	jo     0x41796e
  4179d4:	fsubrp st(1),st
  4179d6:	sub    al,0xe9
  4179d8:	cmp    BYTE PTR [ecx],0x70
  4179db:	xlat   BYTE PTR ds:[ebx]
  4179dc:	pusha  
  4179dd:	daa    
  4179de:	addr16 jnp 0x417a46
  4179e1:	inc    edi
  4179e2:	push   esp
  4179e3:	cdq    
  4179e4:	ja     0x417a0c
  4179e6:	je     0x41796c
  4179e8:	outs   dx,DWORD PTR ds:[esi]
  4179e9:	fbld   TBYTE PTR [ebx+0x48]
  4179ec:	jae    0x4179f3
  4179ee:	push   ecx
  4179ef:	inc    esp
  4179f0:	jle    0x417a2c
  4179f2:	ins    DWORD PTR es:[edi],dx
  4179f3:	inc    edi
  4179f4:	dec    eax
  4179f5:	and    dh,BYTE PTR [edi-0x17]
  4179f8:	sub    al,0x3a
  4179fa:	ins    DWORD PTR es:[edi],dx
  4179fb:	add    BYTE PTR [eax],ah
  4179fd:	loopne 0x417a6a
  4179ff:	ins    BYTE PTR es:[edi],dx
  417a00:	sbb    ecx,DWORD PTR [ebp+0x4f]
  417a03:	sub    edi,DWORD PTR gs:[ebx+ebp*2]
  417a07:	outs   dx,BYTE PTR ds:[esi]
  417a08:	and    esp,esp
  417a0a:	je     0x417a68
  417a0c:	jp     0x4179fe
  417a0e:	imul   ebp,DWORD PTR [edi+0x59],0xffffffda
  417a12:	call   FWORD PTR [ebx-0x74]
  417a15:	(bad)  [edx+0x63]
	...
  417a24:	add    BYTE PTR [eax],al
  417a26:	add    BYTE PTR [ecx+0x4d],ah
  417a29:	inc    edx
  417a2a:	jb     0x417aa1
  417a2c:	fisubr WORD PTR [esi+0x65]
  417a2f:	dec    eax
  417a30:	push   esi
  417a31:	add    BYTE PTR [ebp+0x65],cl
  417a34:	jmp    0x417a9a
  417a36:	ins    BYTE PTR es:[edi],dx
  417a37:	ss jmp 0xe738d63c
  417a3d:	jns    0x417aa8
  417a3f:	push   ss
  417a40:	out    0x5c,al
  417a42:	pop    esp
  417a43:	(bad)  
  417a45:	push   0x66
  417a47:	and    esp,esi
  417a49:	pusha  
  417a4a:	jae    0x417a12
  417a4c:	add    DWORD PTR [edi+0x6f],ecx
  417a4f:	sbb    al,0xde
  417a51:	jb     0x417ab4
  417a53:	mov    eax,0x1f4c5be4
  417a58:	in     eax,0x5e
  417a5a:	push   0x503dbc
  417a5f:	mov    ebx,0xe3446ff1
  417a64:	repz dec DWORD PTR [ebx+0x55]
  417a68:	jecxz  0x417ac6
  417a6a:	ins    BYTE PTR es:[edi],dx
  417a6b:	(bad)  
  417a6c:	loopne 0x417adf
  417a6e:	add    al,bl
  417a70:	out    0x6a,al
  417a72:	imul   esp,edi,0xffffffe8
  417a75:	jno    0x417ae2
  417a77:	hlt    
  417a78:	or     eax,0x52ba745d
  417a7d:	gs je  0x417a9f
  417a80:	inc    eax
  417a81:	outs   dx,BYTE PTR ds:[esi]
  417a82:	data16 arpl WORD PTR [edi-0x1a],ax
  417a86:	dec    esi
  417a87:	sbb    eax,0x4d03ec
	...
  417a98:	add    BYTE PTR [eax],al
  417a9a:	pop    es
  417a9b:	push   ebp
  417a9c:	add    BYTE PTR es:0xf16d2e3d,bl
  417aa3:	inc    esp
  417aa4:	xor    BYTE PTR [ebx-0x10],ah
  417aa7:	lods   eax,DWORD PTR ds:[esi]
  417aa8:	sbb    eax,0x4e9bf75f
  417aad:	addr16 cmc 
  417aaf:	in     eax,0x4f
  417ab1:	push   eax
  417ab2:	arpl   WORD PTR [edi],cx
  417ab4:	sub    esi,DWORD PTR [esi+edi*4+0xf]
  417ab8:	out    0x63,al
  417aba:	rcr    DWORD PTR [esi-0xa4fb3be],0x3f
  417ac1:	pop    esp
  417ac2:	mov    eax,0x7240f46d
  417ac7:	loop   0x417ab5
  417ac9:	xor    esi,DWORD PTR [edx+0x11]
  417acc:	inc    ebx
  417acd:	aaa    
  417ace:	outs   dx,BYTE PTR ds:[esi]
  417acf:	pusha  
  417ad0:	call   0xeffbcd03
  417ad5:	sub    bl,BYTE PTR [ebx+0x5d]
  417ad8:	stc    
  417ad9:	das    
  417ada:	ds scas al,BYTE PTR es:[edi]
  417adc:	icebp  
  417add:	aaa    
  417ade:	push   ebx
  417adf:	pop    ebp
  417ae0:	cmp    eax,0x3bb03042
  417ae5:	inc    esi
  417ae6:	das    
  417ae7:	pop    ecx
  417ae8:	push   ebp
  417ae9:	inc    edi
  417aea:	jge    0x417b5a
  417aec:	das    
  417aed:	ins    DWORD PTR es:[edi],dx
  417aee:	sub    BYTE PTR [edi+0x20],0x72
  417af2:	push   ebp
  417af3:	jns    0x417b24
  417af5:	xor    DWORD PTR [ecx+0x5163329e],edx
  417afb:	sub    al,0x20
  417afd:	jb     0x417aff
	...
  417b0b:	add    BYTE PTR [eax],al
  417b0d:	push   eax
  417b0e:	mov    esp,0x9e4f6b39
  417b13:	push   ebp
  417b14:	inc    esi
  417b15:	jle    0x578de59
  417b1b:	pop    ebx
  417b1c:	pop    ds
  417b1d:	xor    DWORD PTR ds:0x21375124,eax
  417b23:	dec    ecx
  417b24:	repnz inc esi
  417b26:	and    DWORD PTR [eax+0x30],ecx
  417b29:	arpl   WORD PTR [esi+0x2b],dx
  417b2c:	and    ecx,DWORD PTR [edi]
  417b2e:	es or  eax,0xe7311c20
  417b34:	push   edi
  417b35:	and    BYTE PTR [eax],bh
  417b37:	xor    esi,DWORD PTR [ecx]
  417b39:	(bad)  
  417b3a:	and    bl,BYTE PTR [ebx]
  417b3c:	pop    eax
  417b3d:	and    al,0x39
  417b3f:	and    eax,0x2005b350
  417b44:	es iret 
  417b46:	and    bl,BYTE PTR [ecx]
  417b48:	shl    BYTE PTR es:[ecx],0xc7
  417b4c:	ds retf 
  417b4e:	xor    eax,0x22b1250b
  417b53:	stc    
  417b54:	add    ecx,DWORD PTR [esi-0x42d502e2]
  417b5a:	and    bl,bl
  417b5c:	inc    eax
  417b5d:	test   BYTE PTR [eax],ch
  417b5f:	iret   
  417b60:	push   ds
  417b61:	mov    ds:0x801fcc37,al
  417b66:	sbb    edx,ebx
  417b68:	sub    ch,BYTE PTR [ecx+ebx*1+0x589803ba]
  417b6f:	pop    es
  417b70:	dec    ebx
	...
  417b7d:	add    BYTE PTR [eax],al
  417b7f:	add    BYTE PTR [eax-0x6cb0531b],ah
  417b85:	in     eax,0x96
  417b87:	and    dh,BYTE PTR [edx+0x38]
  417b8a:	sahf   
  417b8b:	and    al,0x71
  417b8d:	and    DWORD PTR [edx-0x57aad8fd],ebx
  417b93:	push   ebx
  417b94:	sbb    al,0xef
  417b96:	mov    BYTE PTR [ebx],0x53
  417b99:	cmp    BYTE PTR [ebx+0x24],bh
  417b9c:	push   ecx
  417b9d:	and    cl,BYTE PTR [edx+0x1940e5]
  417ba3:	test   DWORD PTR [eax+0x55],esp
  417ba6:	push   ecx
  417ba7:	jne    0x417b30
  417ba9:	aaa    
  417baa:	arpl   WORD PTR [edx],bp
  417bac:	jno    0x417bd6
  417bae:	pop    edi
  417baf:	push   ebp
  417bb0:	jl     0x417bf6
  417bb2:	outs   dx,BYTE PTR ds:[esi]
  417bb3:	pop    edx
  417bb4:	push   ebx
  417bb5:	dec    esp
  417bb6:	outs   dx,BYTE PTR ds:[esi]
  417bb7:	dec    edx
  417bb8:	ins    BYTE PTR es:[edi],dx
  417bb9:	add    eax,0x34514a00
  417bbe:	jo     0x417bf5
  417bc0:	jb     0x417bb7
  417bc2:	sub    eax,0x194b4d
  417bc7:	sub    dh,BYTE PTR [ecx]
  417bc9:	xor    al,0x70
  417bcb:	sbb    eax,0x1b701b14
  417bd0:	xchg   BYTE PTR [ecx],dh
  417bd2:	arpl   WORD PTR [edx],cx
  417bd4:	xchg   ebx,eax
  417bd5:	inc    ecx
  417bd6:	pop    edi
  417bd7:	adc    eax,0xe9000580
  417bdc:	pusha  
  417bdd:	add    eax,0x560e900
  417be2:	add    cl,ch
	...
  417bf0:	add    BYTE PTR [eax],al
  417bf2:	add    BYTE PTR [eax-0x3352cac1],ah
  417bf8:	outs   dx,DWORD PTR ds:[esi]
  417bf9:	int    0xf8
  417bfb:	scas   eax,DWORD PTR es:[edi]
  417bfc:	add    BYTE PTR cs:[ebx+0x47462260],dl
  417c03:	mov    eax,ds:0xc30d353f
  417c08:	outs   dx,DWORD PTR ds:[esi]
  417c09:	int    0xd8
  417c0b:	(bad)  
  417c0c:	add    BYTE PTR cs:[ebx+0x47462260],dl
  417c13:	mov    ds:0xcced353f,al
  417c18:	outs   dx,DWORD PTR ds:[esi]
  417c19:	int    0xf8
  417c1b:	outs   dx,DWORD PTR ds:[esi]
  417c1c:	add    BYTE PTR cs:[ebx+0x60],dl
  417c20:	and    al,BYTE PTR [esi+0x7]
  417c23:	iret   
  417c24:	stos   BYTE PTR es:[edi],al
  417c25:	std    
  417c26:	jmp    0x7356d8
  417c2b:	add    al,BYTE PTR [edi]
  417c2d:	dec    edi
  417c2e:	outs   dx,DWORD PTR ds:[esi]
  417c2f:	in     al,0xda
  417c31:	jb     0x417c94
  417c33:	cmp    BYTE PTR [ebx],cl
  417c35:	pop    esp
  417c36:	dec    ebp
  417c37:	jecxz  0x417c1e
  417c39:	jno    0x417caa
  417c3b:	or     esi,esp
  417c3d:	gs je  0x417c9e
  417c40:	call   0xf368f0b2
  417c45:	ins    DWORD PTR es:[edi],dx
  417c46:	gs mov eax,ss:0xe54a7842
  417c4d:	push   0x72
  417c4f:	daa    
  417c50:	repz pop ebx
  417c52:	dec    ecx
  417c53:	sbb    al,0xed
  417c55:	pusha  
  417c56:	ins    BYTE PTR es:[edi],dx
	...
  417c63:	add    BYTE PTR [eax],al
  417c65:	add    BYTE PTR [esi],ch
  417c67:	or     BYTE PTR [esi+0x6f],al
  417c6a:	dec    eax
  417c6b:	in     al,0x6e
  417c6d:	pop    esp
  417c6e:	cdq    
  417c6f:	in     eax,dx
  417c70:	push   0x72
  417c72:	imul   ebx,esi,0x60
  417c75:	xor    bh,BYTE PTR [edx]
  417c77:	push   es
  417c78:	add    BYTE PTR [eax],al
  417c7a:	cmp    ah,cl
  417c7c:	jmp    DWORD PTR [ecx+0x4a]
  417c7f:	(bad)  
  417c81:	xor    DWORD PTR [edx-0x62],ecx
  417c84:	std    
  417c85:	xor    eax,0x65fd993a
  417c8a:	cmp    ah,BYTE PTR [ebp-0x1ff5c703]
  417c90:	push   DWORD PTR [ebx]
  417c92:	or     ch,BYTE PTR [edi-0x4e05d303]
  417c98:	std    
  417c99:	(bad)  
  417c9a:	cli    
  417c9b:	loope  0x417c9c
  417c9d:	cmp    BYTE PTR [edx],cl
  417c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ca0:	std    
  417ca1:	pusha  
  417ca2:	or     dh,BYTE PTR [ebx-0x6205cb03]
  417ca8:	std    
  417ca9:	sub    al,0xfa
  417cab:	loop   0x417cac
  417cad:	xor    edx,ecx
  417caf:	scas   eax,DWORD PTR es:[edi]
  417cb0:	std    
  417cb1:	cmp    BYTE PTR [ebx-0x64],ah
  417cb4:	icebp  
  417cb5:	call   DWORD PTR [eax+0x4100259c]
  417cbb:	pushf  
  417cbc:	and    al,0x0
  417cbe:	je     0x417c5c
  417cc0:	daa    
  417cc1:	add    BYTE PTR [esp+ebx*4+0x1],ch
  417cc5:	add    BYTE PTR [esi],bl
  417cc7:	test   DWORD PTR [esi],esp
  417cc9:	jb     0x417ccb
	...
  417cd7:	add    BYTE PTR [eax],al
  417cd9:	xor    al,0x4f
  417cdb:	and    DWORD PTR [esi+0x17],esp
  417cde:	jmp    0x417d38
  417ce0:	addr16 add eax,0x176321e5
  417ce6:	fcmovnu st,st(5)
  417ce8:	(bad)  
  417ce9:	(bad)  
  417cea:	out    0x33,eax
  417cec:	cmp    cl,BYTE PTR [ebx+edi*8+0x3]
  417cf0:	push   ecx
  417cf1:	add    al,0x3a
  417cf3:	cmp    BYTE PTR [ebp+0x2],dh
  417cf6:	out    dx,al
  417cf7:	es pop esp
  417cf9:	and    bh,al
  417cfb:	and    BYTE PTR [edx-0x3a],ah
  417cfe:	jmp    0x6e21:0x1c66d44
  417d05:	arpl   bx,bp
  417d07:	sbb    dh,BYTE PTR [esi+edi*4+0xb]
  417d0b:	daa    
  417d0c:	jb     0x417cc3
  417d0e:	add    DWORD PTR [esi],esi
  417d10:	jno    0x417d75
  417d12:	or     ebx,DWORD PTR [ebx]
  417d14:	je     0x417cdc
  417d16:	or     esp,DWORD PTR [edi]
  417d18:	jb     0x417cc7
  417d1a:	mov    ecx,0xc2462033
  417d1f:	dec    ebp
  417d20:	dec    eax
  417d21:	test   bl,cl
  417d23:	xor    eax,0x35c5b000
  417d28:	arpl   WORD PTR [eax-0x7989cc47],si
  417d2e:	ins    BYTE PTR es:[edi],dx
  417d2f:	loope  0x417d53
  417d31:	jg     0x417cc5
  417d33:	pop    edx
  417d34:	arpl   WORD PTR [ecx+0x636c3391],ax
  417d3a:	add    eax,0x1cba
	...
  417d4b:	add    BYTE PTR [edi+0x22],dl
  417d4e:	mov    edx,0x8c2f5128
  417d53:	xor    eax,0x4f82e283
  417d58:	xor    DWORD PTR [edx],esp
  417d5a:	xchg   esp,eax
  417d5b:	and    dh,BYTE PTR [edi]
  417d5d:	and    al,bh
  417d5f:	inc    edi
  417d60:	cmp    al,0x33
  417d62:	mov    WORD PTR [esi],fs
  417d64:	aaa    
  417d65:	sbb    BYTE PTR [ecx+0x2c],bh
  417d68:	arpl   WORD PTR [eax+edx*2+0x38],dx
  417d6c:	add    BYTE PTR [esp+eax*2+0x36],dl
  417d70:	or     eax,0x41e45922
  417d75:	and    esp,edi
  417d77:	push   esi
  417d78:	adc    ah,BYTE PTR [edx]
  417d7a:	cmp    DWORD PTR [edx+edx*1],eax
  417d7d:	push   ds
  417d7e:	xor    esp,DWORD PTR [edi]
  417d80:	adc    ah,BYTE PTR [edx]
  417d82:	cmp    DWORD PTR [edx],edi
  417d84:	add    BYTE PTR [ebx],dh
  417d86:	pop    es
  417d87:	out    0x0,eax
  417d89:	fidivr DWORD PTR [ebx]
  417d8b:	xor    eax,0x53c733c0
  417d90:	scas   al,BYTE PTR es:[edi]
  417d91:	add    eax,0x3caf34cc
  417d96:	add    al,0x2b
  417d98:	ret    0x81d
  417d9b:	sbb    ecx,ebp
  417d9d:	add    eax,0x22af1b1a
  417da2:	sbb    ah,BYTE PTR [edi]
  417da4:	mov    cl,0x2f
  417da6:	add    al,0x36
  417da8:	and    edx,0xffffffca
  417dab:	dec    edi
  417dac:	mov    dl,0x3f
  417dae:	mov    bl,0x53
	...
  417dbc:	add    BYTE PTR [eax],al
  417dbe:	add    BYTE PTR [ebx+0x41],ah
  417dc1:	int3   
  417dc2:	pop    ds
  417dc3:	nop
  417dc4:	sub    eax,0x55af49c4
  417dc9:	out    0x34,eax
  417dcb:	test   BYTE PTR [ecx],dh
  417dcd:	les    esi,FWORD PTR [eax*2+0x4cc4002d]
  417dd4:	add    eax,0xe53ec455
  417dd9:	inc    ebx
  417dda:	mov    BYTE PTR [eax+ecx*2+0x2283ad00],dl
  417de1:	addr16 xchg eax,eax
  417de4:	inc    ebx
  417de5:	pop    edi
  417de6:	xchg   ebp,eax
  417de7:	add    DWORD PTR ds:0x207c9851,0x21c08474
  417df1:	ins    DWORD PTR es:[edi],dx
  417df2:	jnp    0x417e41
  417df4:	dec    eax
  417df5:	je     0x417dc0
  417df7:	scas   eax,DWORD PTR es:[edi]
  417df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417df9:	jno    0x417e43
  417dfb:	inc    ebp
  417dfc:	sbb    DWORD PTR [ebx-0x17],esp
  417dff:	mov    eax,0x80e928a7
  417e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e05:	inc    edx
  417e06:	push   ds
  417e07:	and    DWORD PTR [esi+0x54],edx
  417e0a:	sbb    esp,DWORD PTR [eax]
  417e0c:	inc    eax
  417e0d:	dec    esi
  417e0e:	adc    eax,0x2052555f
  417e13:	sub    al,0xe8
  417e15:	push   ecx
  417e16:	adc    BYTE PTR [edi+0x54],bl
  417e19:	dec    esi
  417e1a:	xor    BYTE PTR [eax-0x6016bcae],dh
  417e20:	cmp    eax,0x2a43
	...
  417e31:	add    BYTE PTR [esi-0x52e1b9fb],cl
  417e37:	inc    edx
  417e38:	inc    edi
  417e39:	mov    eax,cs:0x820d0005
  417e3f:	and    BYTE PTR [edi+0x7],ah
  417e42:	jbe    0x417e49
  417e44:	ins    DWORD PTR es:[edi],dx
  417e45:	sti    
  417e46:	dec    ecx
  417e47:	and    BYTE PTR [edi-0x29],ah
  417e4a:	mov    bl,0x32
  417e4c:	jb     0x417e1b
  417e4e:	pusha  
  417e4f:	xor    eax,0x3057da5f
  417e54:	ins    DWORD PTR es:[edi],dx
  417e55:	fstp   TBYTE PTR [eax+ecx*2]
  417e58:	jbe    0x417e5a
  417e5a:	sub    eax,DWORD PTR [edi]
  417e5c:	jno    0x417ec3
  417e5e:	or     dh,al
  417e60:	outs   dx,BYTE PTR ds:[esi]
  417e61:	gs test al,0xe4
  417e64:	pop    esp
  417e65:	ins    DWORD PTR es:[edi],dx
  417e66:	pop    ds
  417e67:	push   esi
  417e68:	jbe    0x417ecb
  417e6a:	imul   bh
  417e6c:	pusha  
  417e6d:	add    ah,bl
  417e6f:	out    dx,al
  417e70:	outs   dx,DWORD PTR ds:[esi]
  417e71:	cmp    ah,BYTE PTR [ebp-0x1198025b]
  417e77:	out    dx,al
  417e78:	outs   dx,DWORD PTR ds:[esi]
  417e79:	cmp    dl,BYTE PTR [ebp+0x2e67fda5]
  417e7f:	out    dx,al
  417e80:	outs   dx,DWORD PTR ds:[esi]
  417e81:	jae    0x417e73
  417e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e84:	sub    al,0x0
  417e86:	(bad)  
  417e87:	cmp    eax,0xe52d6f6b
  417e8c:	pusha  
  417e8d:	pop    esp
  417e8e:	dec    ecx
  417e8f:	or     DWORD PTR [edx+0x6f],esi
  417e92:	daa    
  417e93:	fdiv   st(7),st
  417e95:	pop    ebx
	...
  417ea2:	add    BYTE PTR [eax],al
  417ea4:	add    BYTE PTR [ecx],bh
  417ea6:	or     DWORD PTR [edx+0x6f],esi
  417ea9:	pop    ss
  417eaa:	or     BYTE PTR [ecx+0x6d],dh
  417ead:	mov    dh,BYTE PTR [esi]
  417eaf:	aas    
  417eb0:	push   0x65690628
  417eb5:	dec    edx
  417eb6:	in     eax,0x70
  417eb8:	jae    0x417f04
  417eba:	push   ebx
  417ebb:	imul   esp,DWORD PTR [esi+0x6e],0xffffffee
  417ebf:	pop    esp
  417ec0:	jb     0x417f21
  417ec2:	push   ebp
  417ec3:	aas    
  417ec4:	push   0x65690668
  417ec9:	pop    edx
  417eca:	in     eax,0x70
  417ecc:	jae    0x417f18
  417ece:	jmp    0xe16ff240
  417ed3:	imul   ebp,DWORD PTR [ebp+edx*2+0x3d],0x65
  417ed8:	jb     0x417ee4
  417eda:	ss inc edx
  417edc:	jb     0x417f03
  417ede:	in     eax,0x64
  417ee0:	jne    0x417f45
  417ee2:	rol    DWORD PTR [ecx],0x5c
  417ee5:	xchg   ebp,eax
  417ee6:	lds    esp,FWORD PTR [edx]
  417ee8:	push   0x6320cf71
  417eed:	arpl   WORD PTR [eax-0x408192be],cx
  417ef3:	and    eax,0x4f78636d
  417ef8:	ins    DWORD PTR es:[edi],dx
  417ef9:	inc    eax
  417efa:	xchg   ebx,eax
  417efb:	inc    eax
  417efc:	arpl   WORD PTR [edi-0x70],ax
  417eff:	add    DWORD PTR [ecx+0x7e],ecx
  417f02:	popa   
  417f03:	sub    BYTE PTR [esi+edi*1+0x27],ch
  417f07:	sbb    eax,DWORD PTR [eax]
	...
  417f15:	add    BYTE PTR [eax],al
  417f17:	add    BYTE PTR [edi],bl
  417f19:	jae    0x417efb
  417f1b:	dec    edx
  417f1c:	ds js  0x417f47
  417f1f:	ins    DWORD PTR es:[edi],dx
  417f20:	cmp    eax,0x31504d9c
  417f25:	daa    
  417f26:	and    esp,DWORD PTR [edi+0xf]
  417f29:	cmp    DWORD PTR [ecx],esi
  417f2b:	add    BYTE PTR [esi],bl
  417f2d:	dec    esp
  417f2e:	sbb    esp,DWORD PTR [ecx+0x63]
  417f31:	lock inc esi
  417f33:	jo     0x417f2f
  417f35:	cmp    dl,BYTE PTR [eax+0x43]
  417f38:	repz push esp
  417f3a:	and    DWORD PTR [eax],eax
  417f3c:	adc    al,dh
  417f3e:	and    ah,BYTE PTR [esi+0x5]
  417f41:	add    DWORD PTR [esi+0x54],eax
  417f44:	adc    ebx,DWORD PTR [edx+esi*1+0x3111d767]
  417f4b:	cs retf 0x1b14
  417f4f:	add    BYTE PTR [edi-0x418be521],ch
  417f55:	inc    DWORD PTR [ebx]
  417f57:	pop    esp
  417f58:	xchg   ebp,eax
  417f59:	cmc    
  417f5a:	xor    BYTE PTR [edi-0x40],ah
  417f5d:	adc    ebx,DWORD PTR [edi]
  417f5f:	and    BYTE PTR [esi-0x3d98d7ef],bl
  417f65:	scas   al,BYTE PTR es:[edi]
  417f66:	(bad)  [ebp-0x69]
  417f69:	add    eax,0x5b203d7
  417f6e:	les    eax,FWORD PTR [ebx]
  417f70:	xchg   edi,eax
  417f71:	add    eax,0x57c03db
  417f76:	mov    ebp,0xba058603
  417f7b:	add    eax,DWORD PTR [eax]
	...
  417f89:	add    BYTE PTR [eax],al
  417f8b:	arpl   WORD PTR ds:0x347f469b,ax
  417f91:	leave  
  417f92:	and    al,0x77
  417f94:	in     eax,0xa2
  417f96:	push   ds
  417f97:	push   esi
  417f98:	xor    edx,DWORD PTR [ebx-0x7bd6cbe2]
  417f9e:	xor    DWORD PTR [ebx+0x38],esp
  417fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fa2:	frstor ds:0x631b8a17
  417fa8:	dec    ebx
  417fa9:	jns    0x417fd3
  417fab:	xor    ch,BYTE PTR ds:0x51357a5
  417fb1:	lds    edx,FWORD PTR [edx+0x18]
  417fb4:	dec    ebx
  417fb5:	out    0x41,eax
  417fb7:	(bad)  
  417fb9:	popa   
  417fba:	daa    
  417fbb:	sbb    eax,0x12045719
  417fc0:	cs pop ebx
  417fc2:	daa    
  417fc3:	xor    eax,0x63384829
  417fc8:	push   ecx
  417fc9:	dec    eax
  417fca:	xor    edi,ebp
  417fcc:	xor    al,0x48
  417fce:	xor    edx,esi
  417fd0:	sbb    eax,DWORD PTR [esi+0x32]
  417fd3:	inc    DWORD PTR [ebx+ebx*1]
  417fd6:	and    edx,edx
  417fd8:	sbb    DWORD PTR [eax],ebp
  417fda:	sub    BYTE PTR [edi-0x2dcefbe9],bh
  417fe0:	add    eax,0x19d22323
  417fe5:	xor    al,0x31
  417fe7:	rcl    BYTE PTR [edi],0xe7
  417fea:	aas    
  417feb:	xchg   esp,eax
  417fec:	sbb    bl,dh
  417fee:	push   ebx
	...
  417ffb:	add    BYTE PTR [eax],al
  417ffd:	add    BYTE PTR [esi+0x60fd0017],bh
  418003:	ss ins DWORD PTR es:[edi],dx
  418005:	pop    es
  418006:	pop    ebx
  418007:	sbb    bl,BYTE PTR [edi-0x25]
  41800a:	cmp    eax,0x41cd4641
  41800f:	push   ss
  418010:	push   0x69443db9
  418015:	lods   eax,DWORD PTR ds:[esi]
  418016:	mov    ds:0x3dc35f31,al
  41801b:	dec    ebx
  41801c:	je     0x417fd7
  41801e:	pushf  
  41801f:	arpl   WORD PTR ss:[ebp-0x3991d3d4],di
  418026:	xchg   ebx,eax
  418027:	add    eax,0x4474ab5c
  41802c:	jp     0x417fb2
  41802e:	sbb    DWORD PTR es:[eax-0x17],esi
  418032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418033:	sub    DWORD PTR [eax+0x7d],esi
  418036:	pusha  
  418037:	dec    ebx
  418038:	push   esp
  418039:	cdq    
  41803a:	fwait
  41803b:	in     al,dx
  41803c:	sub    eax,0x693349ad
  418041:	xchg   ebp,eax
  418042:	jae    0x418071
  418044:	arpl   WORD PTR [ebp+0x7c],di
  418047:	inc    ecx
  418048:	ins    DWORD PTR es:[edi],dx
  418049:	pop    ecx
  41804a:	cmp    al,0x33
  41804c:	pop    esp
  41804d:	dec    edx
  41804e:	outs   dx,BYTE PTR ds:[esi]
  41804f:	xor    BYTE PTR [ebx+0x48],ch
  418052:	sub    DWORD PTR gs:[eax],eax
  418055:	es pop esi
  418057:	dec    ebx
  418058:	push   esp
  418059:	sbb    DWORD PTR [edi+0x46],ebx
  41805c:	ins    DWORD PTR es:[edi],dx
  41805d:	dec    edi
  41805e:	dec    ebp
  41805f:	sub    BYTE PTR [ecx+0x3d],ah
	...
  41806e:	add    BYTE PTR [eax],al
  418070:	add    BYTE PTR [eax+0x32],cl
  418073:	outs   dx,BYTE PTR ds:[esi]
  418074:	cmp    bh,BYTE PTR ds:0x5f1d7817
  41807a:	aam    0x43
  41807c:	int3   
  41807d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41807e:	cmp    DWORD PTR [eax-0x17],edx
  418081:	xchg   ebx,eax
  418082:	sub    dh,BYTE PTR [esp+eax*1+0x72]
  418086:	repz data16 add BYTE PTR [esi+edi*8-0x1],cl
  41808c:	pop    ebx
  41808d:	jmp    0x4687a9dc
  418092:	cmp    DWORD PTR [eax],eax
  418094:	pop    esp
  418095:	jns    0x418095
  418097:	jae    0x4180fe
  418099:	(bad)  
  41809a:	jmp    0x41810a
  41809c:	imul   esp,DWORD PTR ds:0xfa726101,0xb6464b35
  4180a6:	cmp    DWORD PTR ds:0x3f52c752,edi
  4180ac:	ins    BYTE PTR es:[edi],dx
  4180ad:	sbb    edx,esi
  4180af:	outs   dx,BYTE PTR ds:[esi]
  4180b0:	gs test eax,0x1a795452
  4180b6:	in     al,dx
  4180b7:	dec    ebx
  4180b8:	imul   ebp,eax,0xc3467752
  4180be:	xchg   esi,eax
  4180bf:	xor    DWORD PTR [ebx],esi
  4180c1:	stc    
  4180c2:	scas   al,BYTE PTR es:[edi]
  4180c3:	xor    eax,0x4399042d
  4180c8:	xor    cl,BYTE PTR [edi-0x4ced269]
  4180ce:	ret    
  4180cf:	ds xor edi,ecx
  4180d2:	scas   eax,DWORD PTR es:[edi]
  4180d3:	sub    dh,BYTE PTR [eax]
	...
  4180e1:	add    BYTE PTR [eax],al
  4180e3:	add    dl,dl
  4180e5:	xchg   esi,eax
  4180e6:	sub    eax,0x439b4832
  4180eb:	xor    al,0x43
  4180ed:	inc    edi
  4180ee:	inc    edx
  4180ef:	jge    0x41813f
  4180f1:	cwde   
  4180f2:	sub    esi,DWORD PTR [edx]
  4180f4:	dec    esi
  4180f5:	cdq    
  4180f6:	pop    ecx
  4180f7:	ja     0x41810c
  4180f9:	jmp    FWORD PTR [esi]
  4180fb:	xor    bh,BYTE PTR [edx+0x45]
  4180fe:	pop    ebp
  4180ff:	jae    0x418134
  418101:	inc    edi
  418102:	push   esp
  418103:	push   eax
  418104:	dec    edx
  418105:	dec    edx
  418106:	dec    esi
  418107:	gs jbe 0x418144
  41810a:	pop    ebp
  41810b:	jb     0x418168
  41810d:	jmp    DWORD PTR [edx+0x0]
  418110:	arpl   dx,cx
  418112:	sub    DWORD PTR [esi-0x4d],esp
  418115:	lods   al,BYTE PTR ds:[esi]
  418116:	xlat   BYTE PTR ds:[ebx]
  418117:	jno    0x4180d8
  418119:	pushf  
  41811a:	add    DWORD PTR [esi+eiz*4-0x2],edx
  41811e:	ss push ecx
  418120:	xchg   ecx,eax
  418121:	add    bl,cl
  418123:	sub    DWORD PTR [ebx-0x64],esp
  418126:	and    al,0x71
  418128:	nop
  418129:	ret    
  41812a:	sbb    dh,BYTE PTR [edx-0x79]
  41812d:	or     al,0xef
  41812f:	cs dec ecx
  418131:	into   
  418132:	jmp    0x418133
  418134:	ja     0x4180f5
  418136:	and    BYTE PTR [edx-0x7b],dh
  418139:	int    0x18
  41813b:	arpl   WORD PTR [ecx],bp
  41813d:	pop    edi
  41813e:	jmp    0x41813f
  418140:	jle    0x4181a3
  418142:	adc    eax,0x1dcd836c
  418147:	add    BYTE PTR fs:[eax],al
	...
  418156:	add    BYTE PTR [ecx-0x6f],dl
  418159:	ss jno 0x4180e5
  41815c:	jg     0x418149
  41815e:	push   DWORD PTR [esi-0x54]
  418161:	dec    ebp
  418162:	inc    ebx
  418163:	adc    DWORD PTR [ecx-0x44f2adaa],eax
  418169:	add    DWORD PTR [esi+0x17],eax
  41816c:	jl     0x41814f
  41816e:	dec    ebp
  41816f:	xor    al,0x23
  418171:	add    DWORD PTR [esi+0x37],eax
  418174:	jl     0x4181ad
  418176:	ins    DWORD PTR es:[edi],dx
  418177:	or     al,0xac
  418179:	ss addr16 pop ss
  41817c:	dec    ecx
  41817d:	xor    eax,0x18490b2e
  418182:	add    BYTE PTR [eax],dl
  418184:	add    eax,DWORD PTR [edx+0x54]
  418187:	or     al,0xed
  418189:	push   ebp
  41818a:	inc    ebx
  41818b:	paddd  mm3,QWORD PTR [eax]
  41818e:	(bad)  
  41818f:	hlt    
  418190:	or     BYTE PTR [edx+0x54],al
  418193:	mov    bl,0xe
  418195:	cmc    
  418196:	sub    eax,0x5743058c
  41819b:	ret    0x1013
  41819e:	xor    al,0xcf
  4181a0:	adc    al,0xe7
  4181a2:	push   esi
  4181a3:	scas   al,BYTE PTR es:[edi]
  4181a4:	inc    edi
  4181a5:	xor    edx,DWORD PTR [ebx+0x74]
  4181a8:	xor    ebp,DWORD PTR [eax+ecx*2]
  4181ab:	xchg   ecx,eax
  4181ac:	xor    BYTE PTR [ecx],cl
  4181ae:	sbb    edi,DWORD PTR [eax+0x47]
  4181b1:	sbb    edx,DWORD PTR [ebx+eax*2-0x2c]
  4181b5:	mov    esp,0xbb47b8f2
  4181ba:	push   ebx
	...
  4181c7:	add    BYTE PTR [eax],al
  4181c9:	add    BYTE PTR [edx-0x7fce26d6],dh
  4181cf:	adc    ebx,edx
  4181d1:	add    esp,DWORD PTR [ebp-0x5c1c48c7]
  4181d7:	xor    BYTE PTR [ecx+ebx*1+0x4fa50577],bh
  4181de:	xchg   ebx,eax
  4181df:	in     eax,0xac
  4181e1:	sbb    al,0x4f
  4181e3:	sub    al,BYTE PTR [eax+eiz*1]
  4181e6:	arpl   WORD PTR ds:0x18523688,si
  4181ec:	mov    ?,WORD PTR ds:0x20ba053f
  4181f2:	xor    DWORD PTR [edi],edx
  4181f4:	test   BYTE PTR ds:0x20942625,dh
  4181fa:	arpl   WORD PTR [edx],di
  4181fc:	jp     0x41821e
  4181fe:	xor    DWORD PTR [esi-0x55],ecx
  418201:	add    esp,DWORD PTR [edi+ebp*1]
  418204:	sub    BYTE PTR [edi],0xfc
  418207:	and    eax,0x13044053
  41820c:	inc    esp
  41820d:	and    eax,0x2b59300f
  418212:	arpl   WORD PTR ds:0x4eef363e,si
  418218:	cmp    al,0x17
  41821a:	add    DWORD PTR [edx],ebp
  41821c:	cmp    DWORD PTR [edx+edx*1],eax
  41821f:	sub    al,BYTE PTR [eax]
  418221:	cmp    edx,DWORD PTR [ecx-0x77ea8ddc]
  418227:	adc    eax,0x570e963
  41822c:	add    cl,ch
	...
  41823a:	add    BYTE PTR [eax],al
  41823c:	add    BYTE PTR [ecx+0x5ee93f4a],ah
  418242:	and    al,0x8f
  418244:	or     al,0xe0
  418246:	dec    ecx
  418247:	dec    esp
  418248:	(bad)  
  418249:	mov    dl,0xb8
  41824b:	add    eax,0xd1a3f749
  418250:	andps  xmm7,XMMWORD PTR [eax]
  418253:	add    BYTE PTR [ebx+0x1b2dd33a],bh
  418259:	clc    
  41825a:	icebp  
  41825b:	xor    BYTE PTR [esi],dl
  41825d:	pop    edi
  41825e:	aad    0x9
  418260:	out    dx,eax
  418261:	clc    
  418262:	in     al,dx
  418263:	add    eax,0x502f5e8
  418268:	jmp    0x1942:0xce510567
  41826f:	jne    0x418239
  418271:	xchg   esi,eax
  418272:	and    al,0x5c
  418274:	popf   
  418275:	jns    0x4182a6
  418277:	pop    edi
  418278:	call   0x282f:0xbd503922
  41827f:	je     0x41820d
  418281:	ror    BYTE PTR [edx+0x5f],0x7f
  418285:	sub    DWORD PTR [edx],0x4d607b63
  41828b:	ins    DWORD PTR es:[edi],dx
  41828c:	jp     0x418302
  41828e:	add    eax,0x137d7a53
  418293:	add    BYTE PTR [ecx-0x168ee9bf],bl
  418299:	xor    BYTE PTR [edx],dh
  41829b:	jb     0x4182f2
  41829d:	pop    edi
  41829e:	xor    esp,DWORD PTR [ebx+0x44]
	...
  4182ad:	add    BYTE PTR [eax],al
  4182af:	add    BYTE PTR [edx+0x19],bl
  4182b2:	arpl   WORD PTR [ecx],cx
  4182b4:	and    ebp,DWORD PTR [eax]
  4182b6:	jb     0x4182b8
  4182b8:	jp     0x418301
  4182ba:	aas    
  4182bb:	jns    0x4182d5
  4182bd:	add    BYTE PTR [edx+0x64],dh
  4182c0:	lahf   
  4182c1:	call   0xff95832c
  4182c6:	jo     0x41832b
  4182c8:	jno    0x4182d3
  4182ca:	jno    0x41833f
  4182cc:	pop    edi
  4182cd:	xlat   BYTE PTR ds:[ebx]
  4182ce:	sub    eax,0x65fb6563
  4182d3:	imul   ebx,DWORD PTR [ebp+0x9],0xd55f733c
  4182da:	jae    0x418345
  4182dc:	push   esp
  4182dd:	in     al,0x1f
  4182df:	outs   dx,BYTE PTR ds:[esi]
  4182e0:	imul   esi,esi,0x60
  4182e3:	cmp    eax,0x220328
  4182e8:	sub    al,0xe4
  4182ea:	imul   esi,DWORD PTR [ebp+0x1f],0xffffffa8
  4182ee:	pop    ds
  4182ef:	add    BYTE PTR [ecx+0xd7465fd],bh
  4182f5:	in     al,0x71
  4182f7:	gs (bad) 
  4182f9:	cmp    DWORD PTR [ebp+0x6d],esp
  4182fc:	adc    eax,0x1e6153fd
  418301:	sti    
  418302:	pop    esp
  418303:	ins    DWORD PTR es:[edi],dx
  418304:	out    0x32,al
  418306:	jno    0x41835c
  418308:	push   cs
  418309:	dec    esp
  41830a:	pop    esp
  41830b:	push   ebx
  41830c:	(bad)  
  41830e:	outs   dx,BYTE PTR ds:[esi]
  41830f:	imul   esp,ebp,0x6efc
	...
  418321:	add    BYTE PTR [eax],al
  418323:	add    bh,dh
  418325:	outs   dx,BYTE PTR ds:[esi]
  418326:	je     0x41831c
  418328:	jecxz  0x418392
  41832a:	gs mov edx,0x18656f4f
  418330:	fcomp  QWORD PTR [ebp+ebp*2-0x21]
  418334:	add    dl,BYTE PTR [eax+0x61]
  418337:	sub    edx,edx
  418339:	jb     0x4183aa
  41833b:	sub    ch,ah
  41833d:	dec    DWORD PTR [edi+0x63]
  418340:	inc    edi
  418341:	xor    dh,BYTE PTR [ebp+eiz*1+0x39]
  418345:	pop    ss
  418346:	bound  eax,QWORD PTR [esi]
  418348:	fiadd  DWORD PTR [ebx]
  41834a:	push   esp
  41834b:	(bad)  
  41834c:	fst    DWORD PTR [esi]
  41834e:	addr16 int 0x4d
  418351:	sbb    BYTE PTR [edx+ebx*8-0x24],dl
  418355:	push   ds
  418356:	add    BYTE PTR [ebp-0x50b9cc04],bl
  41835c:	(bad)  
  41835e:	ja     0x41832e
  418360:	or     BYTE PTR [esp+ebx*2],al
  418363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418364:	lahf   
  418365:	sub    eax,0x200db363
  41836a:	sub    DWORD PTR [eax-0x54],edi
  41836d:	push   edx
  41836e:	ins    DWORD PTR es:[edi],dx
  41836f:	test   DWORD PTR [eax+0x9915f2e],esp
  418375:	dec    eax
  418376:	inc    ecx
  418377:	jl     0x418347
  418379:	sbb    esp,DWORD PTR [ebx+0x7e]
  41837c:	imul   esi,DWORD PTR [eax],0x70
  41837f:	inc    ebx
  418380:	pop    ebx
  418381:	push   ss
  418382:	outs   dx,WORD PTR ds:[esi]
  418384:	mov    bh,0x24
  418386:	jb     0x418388
	...
  418394:	add    BYTE PTR [eax],al
  418396:	xchg   BYTE PTR [ebx+edi*1+0x200c9354],ch
  41839d:	arpl   WORD PTR [eax+0x60],dx
  4183a0:	sbb    al,0x6e
  4183a2:	inc    edx
  4183a3:	pop    eax
  4183a4:	sbb    al,0x6d
  4183a6:	cmp    eax,0x516332cc
  4183ab:	jbe    0x4183cd
  4183ad:	jb     0x418412
  4183af:	outs   dx,BYTE PTR ds:[esi]
  4183b0:	dec    ebp
  4183b1:	push   eax
  4183b2:	or     DWORD PTR [eax+0x75377120],0x13
  4183b9:	pop    edi
  4183ba:	das    
  4183bb:	jne    0x4183d3
  4183bd:	outs   dx,BYTE PTR ds:[esi]
  4183be:	inc    ebx
  4183bf:	and    DWORD PTR [edx],esi
  4183c1:	arpl   WORD PTR [ecx],dx
  4183c3:	lods   al,BYTE PTR ds:[esi]
  4183c4:	cmp    edx,DWORD PTR [ebx+esi*1+0x5]
  4183c8:	pop    es
  4183c9:	and    BYTE PTR [eax],al
  4183cb:	adc    dl,BYTE PTR [ebx+0x1d]
  4183ce:	or     eax,0x61d5b24
  4183d3:	das    
  4183d4:	pop    es
  4183d5:	xor    al,0xc
  4183d7:	adc    bh,BYTE PTR [edx]
  4183d9:	das    
  4183da:	not    BYTE PTR [edx]
  4183dc:	inc    ebx
  4183dd:	add    al,0xa5
  4183df:	xor    DWORD PTR [edi],edx
  4183e1:	in     al,0xc0
  4183e3:	and    bh,BYTE PTR [edx]
  4183e5:	xor    ah,al
  4183e7:	sub    ecx,DWORD PTR [eax]
  4183e9:	xor    BYTE PTR [esp+ebp*1+0x2ccce40d],bh
  4183f0:	sbb    DWORD PTR [eax],esi
  4183f2:	arpl   WORD PTR [ebx+0x33],ax
  4183f5:	push   esp
  4183f6:	and    DWORD PTR [ecx],0xc
  4183f9:	xor    eax,DWORD PTR [eax]
	...
  418407:	add    BYTE PTR [eax],al
  418409:	scas   eax,DWORD PTR es:[edi]
  41840a:	cs or  eax,0x62e9725
  418410:	push   ss
  418411:	inc    ebx
  418412:	sub    BYTE PTR [eax],cl
  418414:	xor    BYTE PTR [ecx+ebp*1+0x43631ed6],ch
  41841b:	mov    bl,0x53
  41841d:	inc    ebx
  41841e:	adc    eax,0x2e7d16d9
  418423:	mov    ebx,0xad057220
  418428:	dec    edi
  418429:	xchg   ebx,eax
  41842a:	cmp    bh,cl
  41842c:	and    BYTE PTR [edi+0x29],cl
  41842f:	out    0x1d,eax
  418431:	dec    edi
  418432:	adc    eax,0x29401bba
  418437:	xchg   ebx,eax
  418438:	aad    0x3e
  41843a:	sbb    BYTE PTR [eax-0x72d3edfd],dl
  418440:	das    
  418441:	cs es cdq 
  418444:	and    BYTE PTR [edi],cl
  418446:	dec    edx
  418447:	test   al,0x52
  418449:	js     0x418483
  41844b:	mov    ds,WORD PTR ds:0xaf003917
  418451:	and    al,0x35
  418453:	inc    edi
  418454:	jg     0x4184c4
  418456:	sub    bl,BYTE PTR [edx+edi*1+0x64]
  41845a:	adc    DWORD PTR [ebx+0x59],esi
  41845d:	addr16 inc ecx
  41845f:	pop    edi
  418460:	pop    ebp
  418461:	inc    eax
  418462:	inc    ecx
  418463:	addr16 pop ebx
  418465:	cmp    DWORD PTR [bp+0x1d],eax
  418469:	cmove  ebp,DWORD PTR [esi+0x47]
	...
  418479:	add    BYTE PTR [eax],al
  41847b:	add    BYTE PTR [esi+0x5],dh
  41847e:	push   ecx
  41847f:	dec    esp
  418480:	xchg   ecx,eax
  418481:	adc    esp,DWORD PTR [ebx+0x3b]
  418484:	mov    esp,DWORD PTR [ecx+esi*2]
  418487:	sbb    eax,0xd6b142d
  41848c:	addr16 dec ebx
  41848e:	arpl   WORD PTR [ecx],dx
  418490:	test   BYTE PTR [esi],dl
  418492:	inc    esi
  418493:	add    BYTE PTR [ebx+0x28],cl
  418496:	add    BYTE PTR [edi],cl
  418498:	jae    0x4184af
  41849a:	jno    0x4184ac
  41849c:	push   ebx
  41849d:	sub    BYTE PTR [esi],ch
  41849f:	add    BYTE PTR [ebp+0x24],ch
  4184a2:	add    BYTE PTR [edi],ah
  4184a4:	inc    eax
  4184a5:	push   ss
  4184a6:	je     0x418462
  4184a8:	xor    al,0x2a
  4184aa:	outs   dx,BYTE PTR ds:[esi]
  4184ab:	les    eax,FWORD PTR [eax]
  4184ad:	inc    esi
  4184ae:	jb     0x418476
  4184b0:	inc    edi
  4184b1:	push   ss
  4184b2:	arpl   bx,bx
  4184b4:	pusha  
  4184b5:	inc    ebx
  4184b6:	push   esp
  4184b7:	cdq    
  4184b8:	sub    al,0x24
  4184ba:	jno    0x418471
  4184bc:	mov    dh,0x27
  4184be:	(bad)  
  4184bf:	jmp    0xb9a0d4e0
  4184c4:	je     0x4184ee
  4184c6:	push   ecx
  4184c7:	popf   
  4184c8:	jne    0x4184eb
  4184ca:	mov    fs,WORD PTR [si]
  4184cd:	inc    esi
  4184ce:	push   0x63304f9b
  4184d3:	mov    ecx,0x711854
  4184d8:	mov    edx,0x8a403dbc
  4184dd:	les    eax,FWORD PTR [eax+eax*2+0x0]
	...
  4184ed:	add    BYTE PTR [eax],al
  4184ef:	mov    bh,dl
  4184f1:	inc    ebp
  4184f2:	inc    eax
  4184f3:	jp     0x418535
  4184f5:	dec    edx
  4184f6:	inc    eax
  4184f7:	jp     0x4184c1
  4184f9:	dec    ecx
  4184fa:	inc    eax
  4184fb:	mov    al,BYTE PTR [esi]
  4184fd:	push   eax
  4184fe:	inc    eax
  4184ff:	mov    al,al
  418501:	push   esp
  418502:	inc    eax
  418503:	jp     0x4184d0
  418505:	push   ecx
  418506:	inc    eax
  418507:	jp     0x4184ca
  418509:	push   esi
  41850a:	inc    eax
  41850b:	dec    edx
  41850c:	inc    esp
  41850d:	pop    eax
  41850e:	inc    eax
  41850f:	dec    edx
  418510:	andnps xmm0,XMMWORD PTR [eax+0x3a]
  418514:	inc    edx
  418515:	push   edi
  418516:	inc    eax
  418517:	cmp    ah,BYTE PTR [edi+0x59]
  41851a:	inc    eax
  41851b:	dec    edx
  41851c:	aad    0x5f
  41851e:	inc    eax
  41851f:	dec    edx
  418520:	shl    BYTE PTR [eax+0x40],0x3a
  418524:	sub    ebx,DWORD PTR [edi+0x40]
  418527:	cmp    dh,BYTE PTR [edx+0x5f]
  41852a:	inc    eax
  41852b:	or     al,BYTE PTR [eax]
  41852d:	fs inc eax
  41852f:	or     dh,BYTE PTR [esp+eiz*2+0x40]
  418533:	cli    
  418534:	push   esi
  418535:	inc    ax
  418537:	cli    
  418538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418539:	fs inc eax
  41853b:	or     dh,BYTE PTR [esi+0x6a]
  41853e:	inc    eax
  41853f:	or     bh,dh
  418541:	push   0x6b88fa40
  418546:	inc    eax
  418547:	cli    
  418548:	je     0x4185ba
  41854a:	inc    eax
  41854b:	retf   0x6cd2
  41854e:	inc    eax
  41854f:	retf   0x71dd
  418552:	inc    eax
	...
  41855f:	add    BYTE PTR [eax],al
  418561:	add    BYTE PTR [edx-0x45bf8c17],bh
  418567:	push   cs
  418568:	js     0x4185aa
  41856a:	retf   0x77e7
  41856d:	inc    eax
  41856e:	arpl   WORD PTR [edx+edi*4+0x5ac2378],bp
  418575:	jns    0x41859a
  418577:	lods   al,BYTE PTR ds:[esi]
  418578:	push   ds
  418579:	jns    0x41859e
  41857b:	lods   al,BYTE PTR ds:[esi]
  41857c:	cmp    BYTE PTR [esi-0x78b353dd],al
  418582:	and    ebp,DWORD PTR [esp+ebx*8-0x4453dc77]
  418589:	xchg   esi,eax
  41858a:	and    ebp,DWORD PTR [esp-0x553dc6b]
  418591:	xchg   edi,eax
  418592:	and    ebp,DWORD PTR [edi+edi*2-0x1753dc68]
  418599:	xchg   esi,eax
  41859a:	mov    ds:0xa3976dac,eax
  41859f:	lods   al,BYTE PTR ds:[esi]
  4185a0:	fstp   DWORD PTR [ecx-0x6544535d]
  4185a6:	mov    ds:0xa39939ac,eax
  4185ab:	lods   al,BYTE PTR ds:[esi]
  4185ac:	push   ebx
  4185ad:	cdq    
  4185ae:	mov    ds:0xa399b0ac,eax
  4185b3:	lods   al,BYTE PTR ds:[esi]
  4185b4:	fsub   DWORD PTR [ebx-0x5832535d]
  4185ba:	mov    ds:0xa3a7a0ac,eax
  4185bf:	lods   al,BYTE PTR ds:[esi]
  4185c0:	mov    DWORD PTR [ecx-0x46a3535d],edi
	...
  4185d2:	add    BYTE PTR [eax],al
  4185d4:	add    BYTE PTR [ebx-0x5c465454],ah
  4185da:	lods   al,BYTE PTR ds:[esi]
  4185db:	sbb    BYTE PTR [ebx+eiz*4-0x5c439854],bh
  4185e2:	lods   al,BYTE PTR ds:[esi]
  4185e3:	mov    edx,0x9aca3bc
  4185e8:	mov    ebx,0xbb2cac23
  4185ed:	and    ebp,DWORD PTR [edi+eax*2-0x4e53dc42]
  4185f4:	mov    esi,0x6de70523
  4185f9:	mov    ds:0xf5e6e744,eax
  4185fe:	inc    esp
  4185ff:	out    0x28,eax
  418601:	in     al,dx
  418602:	inc    esp
  418603:	out    0xc0,eax
  418605:	in     al,0x44
  418607:	out    0x47,eax
  418609:	mov    ds:0xa265e744,al
  41860e:	inc    esp
  41860f:	out    0xf6,eax
  418611:	mov    al,ds:0xa1f1e744
  418616:	inc    esp
  418617:	out    0x6b,eax
  418619:	mov    al,ds:0x9c38e744
  41861e:	inc    esp
  41861f:	out    0x6d,eax
  418621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418622:	inc    esp
  418623:	out    0xf7,eax
  418625:	cdq    
  418626:	inc    esp
  418627:	out    0x1b,eax
  418629:	sub    BYTE PTR [esi-0x19],al
  41862c:	xor    esp,DWORD PTR [esi+eax*2]
  41862f:	out    0x3e,eax
  418631:	xor    al,BYTE PTR [esi-0x19]
  418634:	jnp    0x418666
  418636:	inc    esi
  418637:	out    0xa4,eax
	...
  418645:	add    BYTE PTR [eax],al
  418647:	add    BYTE PTR [eax],dl
  418649:	inc    esi
  41864a:	out    0x38,eax
  41864c:	sbb    eax,DWORD PTR [esi-0x19]
  41864f:	or     DWORD PTR [ebx],0xdffe746
  418655:	inc    esi
  418656:	out    0x8e,eax
  418658:	xor    al,0x46
  41865a:	out    0xc,eax
  41865c:	cmp    DWORD PTR [esi-0x19],eax
  41865f:	mov    ch,BYTE PTR [ecx]
  418661:	inc    esi
  418662:	out    0x3,eax
  418664:	arpl   WORD PTR ds:0x56303e7,ax
  41866a:	out    0x3,eax
  41866c:	arpl   WORD PTR ds:0x56303e7,ax
  418672:	out    0x3,eax
  418674:	arpl   WORD PTR ds:0x2e4f46e7,ax
  41867a:	les    esi,FWORD PTR [ecx]
  41867c:	dec    edi
  41867d:	in     eax,0xff
  41867f:	mov    al,ds:0xe9681687
  418684:	lea    esi,[ecx]
  418686:	aas    
  418687:	mov    ebp,0xb02b367b
  41868c:	adc    esi,DWORD PTR ds:0xec74bb4d
  418692:	dec    esp
  418693:	mov    ds:0xd763e460,al
  418698:	dec    ebx
  418699:	sbb    eax,0xe88be963
  41869e:	xor    DWORD PTR [ecx+0x74721160],edx
  4186a4:	cmp    eax,DWORD PTR ds:0xe74b506d
  4186aa:	popa   
  4186ab:	dec    eax
	...
  4186b8:	add    BYTE PTR [eax],al
  4186ba:	add    BYTE PTR [ebx+0x5],bl
  4186bd:	pop    es
  4186be:	loopne 0x41871d
  4186c0:	or     ecx,DWORD PTR [ebx]
  4186c2:	jecxz  0x41871d
  4186c4:	in     eax,0x39
  4186c6:	push   esi
  4186c7:	je     0x4186f1
  4186c9:	and    ah,ch
  4186cb:	in     ax,0x63
  4186ce:	dec    esp
  4186cf:	xchg   ebx,eax
  4186d0:	in     eax,0x6
  4186d2:	add    al,0x30
  4186d4:	clc    
  4186d5:	pop    ds
  4186d6:	hlt    
  4186d7:	outs   dx,BYTE PTR ds:[esi]
  4186d8:	add    BYTE PTR [edi+0x7],ah
  4186db:	aas    
  4186dc:	call   FWORD PTR [edi]
  4186de:	or     al,0x4f
  4186e0:	and    BYTE PTR [ecx+0x15],dh
  4186e3:	aas    
  4186e4:	call   FWORD PTR [edi]
  4186e6:	leave  
  4186e7:	add    eax,0xf01fe7
  4186ec:	clc    
  4186ed:	fs push es
  4186ef:	imul   ebp,DWORD PTR [edx],0x20
  4186f2:	loopne 0x4186f4
  4186f4:	sub    DWORD PTR [ebx-0x28],esi
  4186f7:	imul   ecx,DWORD PTR [edx+ecx*1],0x6c244b09
  4186fe:	or     DWORD PTR [eax-0x1b],ebx
  418701:	and    bl,BYTE PTR [ecx]
  418703:	call   DWORD PTR [edi-0x6095ffe3]
  418709:	and    dh,BYTE PTR [ebx+0x68]
  41870c:	mov    eax,ds:0xa15a201d
  418711:	std    
  418712:	push   edx
  418713:	mov    ds:0xf6c6bde,al
  418718:	cld    
  418719:	pusha  
  41871a:	arpl   di,cx
  41871c:	out    dx,eax
  41871d:	pusha  
  41871e:	inc    ecx
	...
  41872b:	add    BYTE PTR [eax],al
  41872d:	add    BYTE PTR [edx+0x266567f0],bh
  418733:	call   0xdff5b966
  418738:	imul   ebp,DWORD PTR [edx+ecx*4-0x22],0x77
  41873d:	jo     0x418725
  41873f:	aam    0x71
  418741:	or     BYTE PTR gs:[esi+0x12f7862],dl
  418748:	dec    edi
  418749:	sub    eax,0x2d32a85b
  41874e:	dec    ebx
  41874f:	mov    ecx,0x37afffd
  418754:	add    BYTE PTR [ebx-0x51],dl
  418757:	dec    edx
  418758:	imul   esi,DWORD PTR [eax-0x61],0xa46f6eef
  41875f:	loop   0x4187d4
  418761:	gs push 0xffffffef
  418764:	fs jbe 0x4187ba
  418767:	aad    0x60
  418769:	addr16 pop edi
  41876b:	add    DWORD PTR [edi+0x65],ecx
  41876e:	outs   dx,BYTE PTR ds:[esi]
  41876f:	loopne 0x4187d2
  418771:	push   eax
  418772:	dec    eax
  418773:	jmp    0x6562:0xde766975
  41877a:	or     dl,dl
  41877c:	pusha  
  41877d:	inc    ebx
  41877e:	(bad)
  418783:	xor    ebp,DWORD PTR [ebx+0x74]
  418786:	adc    ebp,ebp
  418788:	je     0x4187da
  41878a:	sbb    ah,ch
  41878c:	jne    0x4187f7
  41878e:	arpl   ax,ax
  418790:	es add BYTE PTR gs:[eax],al
	...
  4187a0:	add    BYTE PTR [esi-0x54],bh
  4187a3:	xor    al,0x63
  4187a5:	and    BYTE PTR [edx+0x26],bl
  4187a8:	pop    edi
  4187a9:	dec    edi
  4187aa:	shl    DWORD PTR ds:0x2fc9386d,0x50
  4187b1:	push   ecx
  4187b2:	lds    edx,FWORD PTR [edi]
  4187b4:	addr16 dec edi
  4187b6:	mov    DWORD PTR [eax],ebp
  4187b8:	arpl   WORD PTR [ebx+0x5b],sp
  4187bb:	es inc edx
  4187bd:	inc    edx
  4187be:	mov    ebp,DWORD PTR [ebx+esi*2]
  4187c1:	xor    ebx,DWORD PTR [ebx+edx*1+0x67]
  4187c5:	adc    eax,0xfc632d75
  4187ca:	add    BYTE PTR [ecx],0x51
  4187cd:	push   es
  4187ce:	jp     0x4187f6
  4187d0:	jno    0x4187e1
  4187d2:	pop    ss
  4187d3:	adc    esp,DWORD PTR [ebx+0x13]
  4187d6:	cmp    ch,BYTE PTR [ebx]
  4187d8:	jbe    0x4187e4
  4187da:	dec    eax
  4187db:	daa    
  4187dc:	gs push es
  4187de:	lods   al,BYTE PTR ds:[esi]
  4187df:	xor    ah,BYTE PTR [ebx+0x1a]
  4187e2:	(bad)  
  4187e3:	and    BYTE PTR [edx-0x3a],dh
  4187e6:	dec    ebp
  4187e7:	adc    DWORD PTR [ebx-0x4e],esp
  4187ea:	shr    DWORD PTR [esp+esi*2],1
  4187ed:	ret    0x11fc
  4187f0:	addr16 int 0x45
  4187f3:	xor    BYTE PTR [ebx-0x3c],ah
  4187f6:	or     DWORD PTR [ecx+edx*2],eax
  4187f9:	mov    esi,0xba7110ed
  4187fe:	pop    es
  4187ff:	cs push eax
  418801:	mov    cl,0x5
  418803:	das    
  418804:	pop    edi
	...
  418811:	add    BYTE PTR [eax],al
  418813:	add    BYTE PTR [ecx-0x7792c7fb],dl
  418819:	add    DWORD PTR [esi],ebp
  41881b:	push   eax
  41881c:	xchg   ecx,eax
  41881d:	add    eax,0x1776716
  418822:	and    eax,0xe7056363
  418827:	add    esp,DWORD PTR [ebx+0x5]
  41882a:	out    0x3,eax
  41882c:	arpl   WORD PTR ds:0x56303e7,ax
  418832:	out    0x3,eax
  418834:	arpl   WORD PTR ds:0x56303e7,ax
  41883a:	out    0x3,eax
  41883c:	arpl   WORD PTR ds:0x56303e7,ax
  418842:	out    0x3,eax
  418844:	arpl   WORD PTR ds:0x56303e7,ax
  41884a:	out    0x3,eax
  41884c:	arpl   WORD PTR ds:0x56303e7,ax
  418852:	out    0x3,eax
  418854:	arpl   WORD PTR ds:0x56303e7,ax
  41885a:	out    0x3,eax
  41885c:	arpl   WORD PTR ds:0x56303e7,ax
  418862:	out    0x3,eax
  418864:	arpl   WORD PTR ds:0x56303e7,ax
  41886a:	out    0x3,eax
  41886c:	arpl   WORD PTR ds:0x56303e7,ax
  418872:	out    0x3,eax
  418874:	arpl   WORD PTR ds:0x3e7,ax
	...
  418886:	add    BYTE PTR [ebx+0x5],ah
  418889:	out    0x3,eax
  41888b:	arpl   WORD PTR ds:0x56303e7,ax
  418891:	out    0x3,eax
  418893:	arpl   WORD PTR ds:0x56303e7,ax
  418899:	out    0x3,eax
  41889b:	arpl   WORD PTR ds:0x56303e7,ax
  4188a1:	out    0x3,eax
  4188a3:	arpl   WORD PTR ds:0x56303e7,ax
  4188a9:	out    0x3,eax
  4188ab:	arpl   WORD PTR ds:0x560e900,ax
  4188b1:	add    cl,ch
  4188b3:	pusha  
  4188b4:	add    eax,0x560e900
  4188b9:	add    cl,ch
  4188bb:	pusha  
  4188bc:	add    eax,0x560e900
  4188c1:	add    cl,ch
  4188c3:	pusha  
  4188c4:	add    eax,0x560e900
  4188c9:	add    cl,ch
  4188cb:	pusha  
  4188cc:	add    eax,0x560e900
  4188d1:	add    cl,ch
  4188d3:	pusha  
  4188d4:	add    eax,0x560e900
  4188d9:	add    cl,ch
  4188db:	pusha  
  4188dc:	add    eax,0x560e900
  4188e1:	add    cl,ch
  4188e3:	pusha  
  4188e4:	add    eax,0x560e900
  4188e9:	add    cl,ch
	...
  4188f7:	add    BYTE PTR [eax],al
  4188f9:	add    BYTE PTR [eax+0x5],ah
  4188fc:	add    cl,ch
  4188fe:	pusha  
  4188ff:	add    eax,0x560e900
  418904:	add    cl,ch
  418906:	pusha  
  418907:	add    eax,0x560e900
  41890c:	add    cl,ch
  41890e:	pusha  
  41890f:	add    eax,0x560e900
  418914:	add    cl,ch
  418916:	pusha  
  418917:	add    eax,0x560e900
  41891c:	add    cl,ch
  41891e:	pusha  
  41891f:	add    eax,0x560e900
  418924:	add    cl,ch
  418926:	pusha  
  418927:	add    eax,0x560e900
  41892c:	add    cl,ch
  41892e:	pusha  
  41892f:	add    eax,0x560e900
  418934:	add    BYTE PTR [eax],al
  418936:	or     cl,BYTE PTR [eax]
  418938:	add    BYTE PTR [eax],al
  41893a:	cli    
  41893b:	pop    es
  41893c:	add    BYTE PTR [eax],al
  41893e:	cli    
  41893f:	pop    es
  418940:	add    BYTE PTR [eax],al
  418942:	or     cl,BYTE PTR [eax]
  418944:	add    BYTE PTR [eax],al
  418946:	or     cl,BYTE PTR [eax]
  418948:	add    BYTE PTR [eax],al
  41894a:	cli    
  41894b:	pop    es
  41894c:	add    BYTE PTR [eax],al
  41894e:	cli    
  41894f:	pop    es
  418950:	add    BYTE PTR [eax],al
  418952:	retf   0x7
  418955:	add    dl,cl
  418957:	pop    es
  418958:	add    BYTE PTR [eax],al
  41895a:	mov    edx,0x7
	...
  41896b:	add    BYTE PTR [eax],al
  41896d:	mov    edx,0xca000007
  418972:	pop    es
  418973:	add    BYTE PTR [eax],al
  418975:	retf   0x7
  418978:	add    BYTE PTR [edx-0x45fffff9],bh
  41897e:	pop    es
  41897f:	add    BYTE PTR [eax],al
  418981:	mov    al,BYTE PTR [edi]
  418983:	add    BYTE PTR [eax],al
  418985:	mov    al,BYTE PTR [edi]
  418987:	add    BYTE PTR [eax],al
  418989:	jp     0x418992
  41898b:	add    BYTE PTR [eax],al
  41898d:	jp     0x418996
  41898f:	add    BYTE PTR [eax],al
  418991:	mov    al,BYTE PTR [edi]
  418993:	add    BYTE PTR [eax],al
  418995:	mov    al,BYTE PTR [edi]
  418997:	add    BYTE PTR [eax],al
  418999:	jp     0x4189a2
  41899b:	add    BYTE PTR [eax],al
  41899d:	jp     0x4189a6
  41899f:	add    BYTE PTR [eax],al
  4189a1:	dec    edx
  4189a2:	pop    es
  4189a3:	add    BYTE PTR [eax],al
  4189a5:	dec    edx
  4189a6:	pop    es
  4189a7:	add    BYTE PTR [eax],al
  4189a9:	cmp    al,BYTE PTR [edi]
  4189ab:	add    BYTE PTR [eax],al
  4189ad:	cmp    al,BYTE PTR [edi]
  4189af:	add    BYTE PTR [eax],al
  4189b1:	dec    edx
  4189b2:	pop    es
  4189b3:	add    BYTE PTR [eax],al
  4189b5:	dec    edx
  4189b6:	pop    es
  4189b7:	add    BYTE PTR [eax],al
  4189b9:	cmp    al,BYTE PTR [edi]
  4189bb:	add    BYTE PTR [eax],al
  4189bd:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  4189c4:	add    BYTE PTR [ebx-0x64],ah
  4189c7:	add    DWORD PTR [eax],eax
  4189c9:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
	...
  4189e0:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  4189e7:	add    BYTE PTR [ebx-0x63],ah
  4189ea:	loopne 0x418a2e
  4189ec:	jl     0x418a13
  4189ee:	push   0xbd42cccb
  4189f3:	mov    edx,0x323552fb
  4189f8:	jae    0x418a0f
  4189fa:	push   0xe09db4cb
  4189ff:	inc    edx
  418a00:	inc    esp
  418a01:	sbb    al,0x1
  418a03:	inc    eax
  418a04:	arpl   WORD PTR [ecx+eax*1+0x1946310],di
  418a0b:	add    al,0x63
  418a0d:	sahf   
  418a0e:	add    edi,edi
  418a10:	pushf  
  418a11:	pushf  
  418a12:	add    DWORD PTR [eax+0x40019c63],eax
  418a18:	arpl   WORD PTR [ecx+eax*1+0x19c6320],bx
  418a1f:	adc    BYTE PTR [ebx-0x64],ah
  418a22:	add    DWORD PTR [eax],ecx
  418a24:	arpl   WORD PTR [ecx+eax*1+0x19c6304],bx
  418a2b:	add    ah,BYTE PTR [ebx-0x64]
  418a2e:	add    edi,edi
  418a30:	pop    esp
  418a31:	pushf  
  418a32:	add    DWORD PTR [eax],0x419c63
  418a38:	arpl   WORD PTR [ecx+eiz*8-0xe63bb01],bx
  418a3f:	(bad)  
  418a40:	cmp    al,0x9c
  418a42:	or     DWORD PTR [eax],eax
	...
  418a50:	add    BYTE PTR [eax],al
  418a52:	add    BYTE PTR [ebx+0x5],ah
  418a55:	out    0xff,eax
  418a57:	sub    al,0x92
  418a59:	out    0x5,eax
  418a5b:	arpl   WORD PTR ds:0x56304e7,ax
  418a61:	addr16 add al,0x63
  418a64:	add    eax,0x5630427
  418a69:	mov    DWORD PTR [ebx],0x3d70563
  418a6f:	arpl   WORD PTR ds:0x56303df,ax
  418a75:	jmp    0x418a7a
  418a77:	arpl   WORD PTR ds:0x56303e9,ax
  418a7d:	call   0xf46ed85
  418a82:	aam    0x7c
  418a84:	in     eax,0xde
  418a86:	repz fs add eax,0xe47dd500
  418a8d:	iret   
  418a8e:	hlt    
  418a8f:	gs add al,0xf1
  418a92:	aad    0x8a
  418a94:	out    0x0,eax
  418a96:	neg    BYTE PTR [edx+0x7]
  418a99:	loop   0x418a71
  418a9b:	jnp    0x418a83
  418a9d:	aam    0xd1
  418a9f:	dec    esi
  418aa0:	jmp    0x418a8e
  418aa2:	icebp  
  418aa3:	or     ax,sp
  418aa6:	sar    BYTE PTR [ecx],1
  418aa8:	call   0x89b7b88
  418aad:	mov    bl,0xcf
  418aaf:	dec    eax
  418ab0:	jmp    0x9aa7a7f
  418ab5:	add    dh,bh
	...
  418ac3:	add    BYTE PTR [eax],al
  418ac5:	add    BYTE PTR [ebx+0x6],bl
  418ac8:	call   0xdf4ce9d2
  418acd:	or     eax,0xf4ddff6f
  418ad2:	jae    0x418ace
  418ad4:	(bad)  
  418ad6:	imul   esi,ecx,0xffffffeb
  418ad9:	repz pop edx
  418adb:	clc    
  418adc:	(bad)  
  418add:	call   0xdf5a921e
  418ae2:	arpl   cx,di
  418ae4:	push   es
  418ae5:	push   DWORD PTR [esi]
  418ae7:	inc    BYTE PTR [eax]
  418ae9:	add    BYTE PTR [eax+0x2],ah
  418aec:	push   es
  418aed:	repz adc eax,0x2dc0fefd
  418af3:	repz and edx,edi
  418af6:	xor    ch,ah
  418af8:	and    al,0xbb
  418afa:	cld    
  418afb:	lock sub al,0xc2
  418afe:	adc    bl,ch
  418b00:	xor    al,0xc8
  418b02:	and    al,0xdc
  418b04:	sbb    BYTE PTR es:[ebp*8-0x701b16e4],al
  418b0c:	add    cl,ch
  418b0e:	pusha  
  418b0f:	add    eax,0x9060e900
  418b14:	std    
  418b15:	in     eax,dx
  418b16:	int3   
  418b17:	pop    DWORD PTR [eax]
  418b19:	in     eax,0x60
  418b1b:	nop
  418b1c:	add    ch,ch
  418b1e:	mov    esp,0x60e5fd8f
  418b23:	add    eax,0x9060e900
  418b28:	std    
  418b29:	jmp    0x418b2e
	...
  418b36:	add    BYTE PTR [eax],al
  418b38:	add    BYTE PTR [eax+edx*4-0x70631603],ah
  418b3f:	add    ch,ah
  418b41:	xchg   esp,eax
  418b42:	pop    DWORD PTR [eax]
  418b44:	jmp    0xe63f1bd5
  418b49:	test   BYTE PTR [eax-0x6f9f1300],dl
  418b4f:	add    cl,ch
  418b51:	pusha  
  418b52:	add    eax,0x560ecff
  418b57:	add    ch,ah
  418b59:	fs nop
  418b5b:	std    
  418b5c:	jmp    0xe9421bbd
  418b61:	push   esp
  418b62:	nop
  418b63:	add    BYTE PTR [eax],al
  418b65:	cmp    dl,BYTE PTR [eax-0x6fc50002]
  418b6b:	(bad)  
  418b6c:	dec    DWORD PTR [edx+0x4]
  418b6f:	std    
  418b70:	add    BYTE PTR [edx+0x4],cl
  418b73:	std    
  418b74:	add    BYTE PTR [esi],bh
  418b76:	nop
  418b77:	std    
  418b78:	add    BYTE PTR [esi],bh
  418b7a:	add    al,0xfd
  418b7c:	dec    DWORD PTR [esi]
  418b7e:	add    al,0x0
  418b80:	add    esi,edi
  418b82:	add    eax,DWORD PTR [eax]
  418b84:	add    esi,edi
  418b86:	add    edi,ebp
  418b88:	(bad)  
  418b89:	cli    
  418b8a:	add    eax,DWORD PTR [eax]
  418b8c:	add    BYTE PTR [esi],cl
  418b8e:	nop
  418b8f:	std    
  418b90:	(bad)  
  418b91:	dec    BYTE PTR [edi+0x3fafffe]
  418b97:	add    BYTE PTR [ecx],al
  418b99:	cli    
  418b9a:	add    edi,ebp
  418b9c:	inc    DWORD PTR [eax]
	...
  418baa:	add    BYTE PTR [eax],al
  418bac:	into   
  418bad:	(bad)  
  418bae:	inc    BYTE PTR [eax]
  418bb0:	mov    esi,0xba000003
  418bb5:	add    edi,ebp
  418bb7:	add    BYTE PTR [edx-0x35ff0171],bh
  418bbd:	add    eax,DWORD PTR [eax]
  418bbf:	add    edx,ecx
  418bc1:	add    eax,DWORD PTR [eax]
  418bc3:	add    DWORD PTR [edx-0x41000271],edi
  418bc9:	add    edi,ebp
  418bcb:	add    BYTE PTR [edx-0x750002fd],cl
  418bd1:	(bad)  
  418bd2:	(bad)  
  418bd3:	(bad)  
  418bd4:	jle    0x418bd9
  418bd6:	add    BYTE PTR [ecx],al
  418bd8:	jp     0x418b69
  418bda:	std    
  418bdb:	dec    DWORD PTR [esi+0x7e000003]
  418be1:	(bad)  
  418be2:	std    
  418be3:	add    BYTE PTR [esi-0x71],bh
  418be6:	(bad)  
  418be7:	(bad)  
  418be8:	jle    0x418b79
  418bea:	inc    BYTE PTR [eax]
  418bec:	arpl   WORD PTR [eax-0x62ab00ff],sp
  418bf2:	add    edi,edi
  418bf4:	arpl   WORD PTR [eax-0x579c0003],sp
  418bfa:	add    DWORD PTR [eax],eax
  418bfc:	bound  esp,QWORD PTR [eax-0x56cb0003]
  418c02:	std    
  418c03:	(bad)  
  418c04:	sub    al,0x9d
  418c06:	std    
  418c07:	(bad)  
  418c08:	arpl   WORD PTR [eax-0x62e30003],bp
  418c0e:	std    
  418c0f:	inc    DWORD PTR [eax]
	...
  418c1d:	add    BYTE PTR [eax],al
  418c1f:	arpl   WORD PTR [ebp+edi*8+0x19c63ff],bx
  418c26:	add    BYTE PTR [ebx-0x58],ah
  418c29:	add    edi,edi
  418c2b:	cld    
  418c2c:	pushf  
  418c2d:	std    
  418c2e:	(bad)  
  418c2f:	hlt    
  418c30:	pushf  
  418c31:	add    DWORD PTR [eax],eax
  418c33:	arpl   WORD PTR [eax-0x39c00ff],sp
  418c39:	adc    DWORD PTR [eax],0xffffffe3
  418c3c:	pushf  
  418c3d:	add    DWORD PTR [eax],0x819ce3
  418c43:	arpl   sp,di
  418c45:	adc    DWORD PTR [eax],0x63
  418c48:	pushf  
  418c49:	add    DWORD PTR [eax],edx
  418c4b:	arpl   sp,di
  418c4d:	add    eax,DWORD PTR [eax]
  418c4f:	arpl   sp,di
  418c51:	add    edx,DWORD PTR [eax]
  418c53:	jecxz  0x418c11
  418c55:	add    DWORD PTR [eax],0x1bce3
  418c5b:	jecxz  0x418c19
  418c5d:	adc    DWORD PTR [eax],0x10819ce3
  418c63:	jecxz  0x418c01
  418c65:	add    DWORD PTR [eax],eax
  418c67:	jecxz  0x418c05
  418c69:	add    DWORD PTR [eax],0x10019ce3
  418c6f:	arpl   WORD PTR [ecx+eax*1+0x7056300],di
  418c76:	add    al,0x53
  418c78:	test   edi,esp
  418c7a:	xor    DWORD PTR [ebx+0x5],0x7
  418c7e:	add    al,0x73
  418c80:	add    eax,0x8407
	...
  418c91:	add    BYTE PTR [ebx-0x7b],ah
  418c94:	out    0x3,eax
  418c96:	arpl   WORD PTR ds:0x856303e7,ax
  418c9c:	out    0x83,eax
  418c9e:	arpl   WORD PTR ds:0x5538407,ax
  418ca4:	out    0x3,eax
  418ca6:	push   ebx
  418ca7:	test   edi,eax
  418ca9:	add    esi,DWORD PTR [ebx+0x5]
  418cac:	mov    DWORD PTR [ebx],0x3e78563
  418cb2:	arpl   WORD PTR ds:0x57383e7,ax
  418cb8:	mov    DWORD PTR [ebx-0x7c18fa9d],0x3e78553
  418cc2:	push   ebx
  418cc3:	test   DWORD PTR [edi],eax
  418cc5:	test   BYTE PTR [ebx+0x5],ah
  418cc8:	out    0x3,eax
  418cca:	arpl   WORD PTR ds:0x5738407,ax
  418cd0:	pop    es
  418cd1:	add    al,0x73
  418cd3:	test   edi,esp
  418cd5:	add    esi,DWORD PTR [ebx+0x5]
  418cd8:	pop    es
  418cd9:	test   BYTE PTR [ebx-0x7b],ah
  418cdc:	out    0x3,eax
  418cde:	push   ebx
  418cdf:	test   edi,esp
  418ce1:	adc    DWORD PTR [ebx-0x7b],0xffffffe7
  418ce5:	and    DWORD PTR [ebx+0x5],0xffffffe7
  418ce9:	add    esi,DWORD PTR [ebx-0x7b]
  418cec:	out    0x83,eax
  418cee:	arpl   WORD PTR [ebp+0x56303c7],ax
  418cf4:	mov    DWORD PTR [ebx+0x0],0x0
  418cfe:	add    BYTE PTR [eax],al
  418d00:	add    BYTE PTR [eax],al
  418d02:	add    BYTE PTR [eax],al
  418d04:	add    BYTE PTR [ebx-0x7b],dh
  418d07:	mov    DWORD PTR [ebx-0x36fffaad],0xe9000560
  418d11:	loopne 0x418d17
  418d13:	add    cl,ch
  418d15:	pusha  
  418d16:	add    eax,0x5e70980
  418d1b:	add    cl,ch
  418d1d:	loopne 0x418d14
  418d1f:	jg     0x418d0a
  418d21:	pusha  
  418d22:	cmc    
  418d23:	dec    DWORD PTR [eax]
  418d25:	pop    edi
  418d26:	add    eax,0xf5670980
  418d2b:	dec    DWORD PTR [eax]
  418d2d:	fild   WORD PTR ds:0x5670980
  418d33:	or     cl,0x60
  418d36:	cmc    
  418d37:	(bad)  
  418d38:	call   0xe941831d
  418d3d:	pusha  
  418d3e:	add    eax,0x5e0e900
  418d43:	or     cl,0xe0
  418d46:	add    eax,0x560e900
  418d4b:	or     cl,0x60
  418d4e:	cmc    
  418d4f:	jg     0x418d1a
  418d51:	loopne 0x418d48
  418d53:	jg     0x418d3e
  418d55:	loopne 0x418d4c
  418d57:	push   eax
  418d59:	bound  eax,QWORD PTR ds:0x762e900
  418d5f:	or     cl,ch
  418d61:	pusha  
  418d62:	add    eax,0x760f100
  418d67:	or     cl,ch
	...
  418d75:	add    BYTE PTR [eax],al
  418d77:	add    BYTE PTR [edx+0x5],ah
  418d7a:	or     cl,ch
  418d7c:	pusha  
  418d7d:	add    eax,0x762e100
  418d82:	add    cl,ch
  418d84:	bound  eax,QWORD PTR ds:0x760f108
  418d8a:	add    cl,ah
  418d8c:	pusha  
  418d8d:	add    eax,0x560e108
  418d92:	or     BYTE PTR [eax],al
  418d94:	jp     0x418d9e
  418d96:	add    al,BYTE PTR [eax]
  418d98:	jb     0x418da0
  418d9a:	add    cl,BYTE PTR [eax]
  418d9c:	or     BYTE PTR [eax],0x2
  418d9f:	add    BYTE PTR [edx+0x8],bh
  418da2:	add    cl,BYTE PTR [eax]
  418da4:	jb     0x418dac
  418da6:	add    BYTE PTR [eax],al
  418da8:	dec    edx
  418da9:	or     BYTE PTR [eax],al
  418dab:	or     BYTE PTR [edx+0x8],al
  418dae:	add    BYTE PTR [eax],al
  418db0:	cmp    al,BYTE PTR [esi]
  418db2:	add    cl,BYTE PTR [eax]
  418db4:	cmp    al,BYTE PTR [esi]
  418db6:	add    BYTE PTR [eax],al
  418db8:	dec    edx
  418db9:	push   es
  418dba:	add    al,BYTE PTR [eax]
  418dbc:	dec    edx
  418dbd:	or     BYTE PTR [edx],al
  418dbf:	or     BYTE PTR [edx+0x8],al
  418dc2:	add    cl,BYTE PTR [eax]
  418dc4:	xor    al,BYTE PTR [esi]
  418dc6:	add    al,BYTE PTR [eax]
  418dc8:	adc    al,BYTE PTR [esi]
  418dca:	add    BYTE PTR [eax],cl
  418dcc:	or     al,BYTE PTR [esi]
  418dce:	add    al,BYTE PTR [eax]
  418dd0:	cli    
  418dd1:	pop    es
  418dd2:	add    al,BYTE PTR [eax]
  418dd4:	adc    al,BYTE PTR [esi]
  418dd6:	add    BYTE PTR [eax],cl
  418dd8:	repnz pop es
	...
  418dea:	add    BYTE PTR [edx],al
  418dec:	push   es
  418ded:	add    cl,BYTE PTR [eax]
  418def:	cli    
  418df0:	add    eax,0x7fa0000
  418df5:	add    BYTE PTR [eax],cl
  418df7:	retf   0x205
  418dfa:	or     dl,cl
  418dfc:	pop    es
  418dfd:	add    BYTE PTR [eax],cl
  418dff:	ret    0x207
  418e02:	add    dl,dl
  418e04:	add    eax,0x7ca0000
  418e09:	add    al,BYTE PTR [eax]
  418e0b:	retf   0x205
  418e0e:	or     BYTE PTR [edx-0x45f7fffb],bh
  418e14:	pop    es
  418e15:	add    BYTE PTR [eax],al
  418e17:	mov    al,BYTE PTR ds:0xa6630000
  418e1d:	add    DWORD PTR [edx],eax
  418e1f:	arpl   WORD PTR [esi-0x61a4fe01],sp
  418e25:	(bad)  
  418e26:	jmp    FWORD PTR [ebx-0x6a]
  418e29:	add    DWORD PTR [eax],eax
  418e2b:	imul   ebx,DWORD PTR [esi-0x619c0001],0x1
  418e32:	add    BYTE PTR [ebx-0x6a],ah
  418e35:	add    DWORD PTR [edx],eax
  418e37:	imul   edx,DWORD PTR [edi+edi*8+0x19c6bff],0x2
  418e3f:	arpl   WORD PTR [ecx+eax*1-0x6ba500],bx
  418e46:	add    DWORD PTR [ebx-0x6c],ebp
  418e49:	add    DWORD PTR [eax],eax
  418e4b:	arpl   WORD PTR [edi+edi*8+0x1],sp
	...
  418e5e:	arpl   WORD PTR [edi+edi*8+0x1946301],bx
  418e65:	add    BYTE PTR [ebx-0x64],ch
  418e68:	add    DWORD PTR [edx],eax
  418e6a:	imul   esp,DWORD PTR [edi+edi*8-0x5ba401],0xffffffff
  418e72:	arpl   WORD PTR [ecx+eax*1-0x6b94fe],bx
  418e79:	add    DWORD PTR [ebx-0x5c],esp
  418e7c:	add    DWORD PTR [eax],eax
  418e7e:	arpl   WORD PTR [ecx+eax*1-0x63a4fe],sp
  418e85:	add    DWORD PTR [ebx-0x63],esp
  418e88:	loope  0x418f09
  418e8a:	arpl   WORD PTR ds:0x1dccffe1,bx
  418e90:	loope  0x418e91
  418e92:	les    ebx,FWORD PTR [ecx+eax*1]
  418e95:	add    BYTE PTR [ebx+0x1c],ah
  418e98:	loope  0x418f19
  418e9a:	arpl   WORD PTR ds:0x9d638001,bx
  418ea0:	add    DWORD PTR [eax-0x1c17fa9d],eax
  418ea6:	pushf  
  418ea7:	mov    ah,bh
  418ea9:	add    esp,DWORD PTR [ebx+0x5]
  418eac:	out    0xe3,eax
  418eae:	or     al,0x5
  418eb0:	out    0xe3,eax
  418eb2:	add    al,0x5
  418eb4:	push   0x6804fce3
  418eb9:	add    esp,DWORD PTR [ebx+0x5]
  418ebc:	out    0x3,eax
  418ebe:	arpl   WORD PTR ds:0x367,ax
	...
  418ed0:	add    bl,ah
  418ed2:	add    eax,0x4e303e8
  418ed7:	call   0xe746f1df
  418edc:	jecxz  0x418f2a
  418ede:	mov    ah,bh
  418ee0:	add    esp,ebx
  418ee2:	add    al,0xe8
  418ee4:	jecxz  0x418ea2
  418ee6:	add    eax,0x5630467
  418eeb:	out    0x3,eax
  418eed:	jecxz  0x418ef3
  418eef:	call   0x67cbb3d7
  418ef4:	in     al,0x1c
  418ef6:	mov    ch,BYTE PTR [eax+0x4]
  418ef9:	jecxz  0x418eff
  418efb:	call   0x6746f203
  418f00:	in     al,0x4
  418f02:	mov    ah,BYTE PTR [edi+0x4]
  418f05:	jecxz  0x418f0b
  418f07:	out    0xe3,eax
  418f09:	hlt    
  418f0a:	mov    DWORD PTR [edi-0x1c],esp
  418f0d:	ins    BYTE PTR es:[edi],dx
  418f0e:	add    eax,0x564e468
  418f13:	push   0x67056304
  418f18:	add    al,0xe3
  418f1a:	add    al,0xe8
  418f1c:	add    esp,ebx
  418f1e:	add    al,0xe7
  418f20:	jecxz  0x418f66
  418f22:	add    eax,0x53ce468
  418f27:	push   0x56304
  418f2c:	jmp    0xe9419491
  418f31:	pusha  
  418f32:	add    eax,0xe900
	...
  418f43:	add    BYTE PTR [eax+0x7f690009],al
  418f49:	mov    ebp,edi
  418f4b:	imul   esp,DWORD PTR [edi-0x7b],0x855f6800
  418f52:	add    al,ch
  418f54:	pusha  
  418f55:	add    eax,0x980e800
  418f5a:	add    BYTE PTR [eax-0x79],ch
  418f5d:	mov    ebp,edi
  418f5f:	push   0x69fd897f
  418f64:	pusha  
  418f65:	add    eax,0x9406800
  418f6a:	add    BYTE PTR [eax+0x60],ch
  418f6d:	add    eax,0x560e800
  418f72:	add    cl,ch
  418f74:	inc    eax
  418f75:	mov    ebp,edi
  418f77:	call   0xe84214dc
  418f7c:	inc    eax
  418f7d:	mov    ebp,edi
  418f7f:	imul   eax,DWORD PTR [eax+0x9],0x85606800
  418f86:	add    al,ch
  418f88:	add    BYTE PTR [ecx-0x76ff9603],cl
  418f8e:	std    
  418f8f:	jmp    0xe84214f4
  418f94:	add    BYTE PTR [ecx],cl
  418f96:	add    BYTE PTR [ecx+0x60],ch
  418f99:	add    eax,0x8560e900
  418f9e:	add    cl,ch
  418fa0:	add    BYTE PTR [ecx+0x8c069fd],cl
  418fa6:	add    cl,ch
	...
  418fb4:	add    BYTE PTR [eax],al
  418fb6:	add    BYTE PTR [edi+0x5],bl
  418fb9:	add    cl,ch
  418fbb:	addr16 std 
  418fbd:	add    ecx,ebp
  418fbf:	pusha  
  418fc0:	std    
  418fc1:	add    DWORD PTR [eax],eax
  418fc3:	retf   0x1
  418fc6:	inc    edx
  418fc7:	retf   0x804
  418fca:	add    BYTE PTR [edx-0x45ffffff],bh
  418fd0:	add    al,0x0
  418fd2:	inc    eax
  418fd3:	mov    al,BYTE PTR [eax+ecx*1]
  418fd6:	add    cl,BYTE PTR [edx+0x7a400801]
  418fdc:	add    al,0x8
  418fde:	add    BYTE PTR [edx+0x1],bh
  418fe1:	add    BYTE PTR [edx],al
  418fe3:	mov    al,BYTE PTR [ecx]
  418fe5:	or     BYTE PTR [eax-0x76],al
  418fe8:	add    DWORD PTR [eax],eax
  418fea:	inc    edx
  418feb:	jp     0x418ff1
  418fed:	or     BYTE PTR [edx+0x7a],al
  418ff0:	add    DWORD PTR [eax],ecx
  418ff2:	add    BYTE PTR [edx+0x4],cl
  418ff5:	add    BYTE PTR [eax+0x4a],al
  418ff8:	add    al,0x0
  418ffa:	add    bh,BYTE PTR [edx]
  418ffc:	add    al,0x8
  418ffe:	inc    eax
  418fff:	cmp    al,BYTE PTR [eax+ecx*1]
  419002:	inc    eax
  419003:	dec    edx
  419004:	add    al,0x0
  419006:	add    BYTE PTR [edx+0x3],cl
  419009:	add    BYTE PTR [eax+0x3a],al
  41900c:	add    ecx,DWORD PTR [eax]
  41900e:	inc    edx
  41900f:	cmp    al,BYTE PTR [ebx]
  419011:	or     BYTE PTR [edx+0xa],al
  419014:	add    eax,DWORD PTR [eax]
  419016:	add    cl,BYTE PTR [edx]
  419018:	add    al,0x8
  41901a:	inc    edx
	...
  419027:	add    BYTE PTR [eax],al
  419029:	add    dl,bh
  41902b:	add    al,BYTE PTR [eax]
  41902d:	inc    eax
  41902e:	cli    
  41902f:	add    eax,DWORD PTR [eax]
  419031:	add    BYTE PTR [edx],cl
  419033:	add    al,0x0
  419035:	inc    edx
  419036:	or     al,BYTE PTR [ebx]
  419038:	or     BYTE PTR [edx],al
  41903a:	cli    
  41903b:	add    eax,DWORD PTR [eax]
  41903d:	add    bh,dl
  41903f:	add    eax,DWORD PTR [eax]
  419041:	inc    edx
  419042:	retf   0x802
  419045:	add    dl,cl
  419047:	add    ecx,DWORD PTR [eax]
  419049:	add    BYTE PTR [ebx-0x62],ah
  41904c:	add    al,BYTE PTR [eax]
  41904e:	and    DWORD PTR [esi-0x619cfffe],ebx
  419054:	add    DWORD PTR [eax],eax
  419056:	popa   
  419057:	sahf   
  419058:	add    DWORD PTR [eax],eax
  41905a:	and    ebx,DWORD PTR [esi-0x619ef7ff]
  419060:	add    al,BYTE PTR [eax]
  419062:	and    DWORD PTR [esi-0x61dcf7fe],ebx
  419068:	add    al,BYTE PTR [eax]
  41906a:	popa   
  41906b:	sahf   
  41906c:	add    DWORD PTR [eax],eax
  41906e:	and    ebx,DWORD PTR [esi-0x61def7ff]
  419074:	add    cl,BYTE PTR [eax]
  419076:	popa   
  419077:	sahf   
  419078:	add    cl,BYTE PTR [eax]
  41907a:	and    ebx,DWORD PTR [esi-0x619cfffe]
  419080:	add    DWORD PTR [eax],eax
  419082:	popa   
  419083:	pushf  
  419084:	add    DWORD PTR [eax],ecx
  419086:	mov    eax,ds:0xa108029c
  41908b:	pushf  
  41908c:	add    cl,BYTE PTR [eax]
	...
  41909a:	add    BYTE PTR [eax],al
  41909c:	add    BYTE PTR [ebx-0x64],ah
  41909f:	add    DWORD PTR [eax],eax
  4190a1:	mov    eax,ds:0xa108029c
  4190a6:	pushf  
  4190a7:	add    DWORD PTR [eax],ecx
  4190a9:	popa   
  4190aa:	pushf  
  4190ab:	add    DWORD PTR [eax],eax
  4190ad:	arpl   WORD PTR [ecx+eax*1+0x19ca308],bx
  4190b4:	add    BYTE PTR [ecx+0x6308029c],ah
  4190ba:	pushf  
  4190bb:	add    al,BYTE PTR [eax]
  4190bd:	popa   
  4190be:	pushf  
  4190bf:	add    al,BYTE PTR [eax]
  4190c1:	mov    ds:0x6308019c,eax
  4190c6:	pushf  
  4190c7:	add    DWORD PTR [eax],eax
  4190c9:	arpl   WORD PTR [ecx+eax*1+0x29ca308],bx
  4190d0:	or     BYTE PTR [ecx+0x5],ah
  4190d3:	out    0x2,eax
  4190d5:	arpl   WORD PTR [ebp-0x9],ax
  4190d8:	add    esp,DWORD PTR [ebx-0x1b]
  4190db:	out    0x3,al
  4190dd:	and    esp,ebp
  4190df:	out    0x43,al
  4190e1:	arpl   WORD PTR ds:0xe52343d7,ax
  4190e7:	out    0x3,al
  4190e9:	and    esp,ebp
  4190eb:	(bad)  
  4190ec:	add    esp,DWORD PTR [ebx+0x5]
  4190ef:	xlat   BYTE PTR ds:[ebx]
  4190f0:	inc    ebx
  4190f1:	and    esp,ebp
  4190f3:	out    0x3,al
  4190f5:	and    eax,DWORD PTR ds:0xe56343e7
  4190fb:	test   BYTE PTR [ebx+0x23],0x5
  4190ff:	out    0x3,eax
	...
  41910d:	add    BYTE PTR [eax],al
  41910f:	add    BYTE PTR [ebx],ah
  419111:	add    eax,0xe56303d7
  419116:	(bad)  
  419117:	add    esp,DWORD PTR [ebx]
  419119:	add    eax,0xe56343e7
  41911e:	out    0x3,al
  419120:	arpl   bp,sp
  419122:	test   BYTE PTR [ebx+0x63],0x5
  419126:	out    0x3,eax
  419128:	arpl   WORD PTR ds:0x5a303f7,ax
  41912e:	test   DWORD PTR [ebx+0x63],0x6343e6e5
  419135:	add    eax,0x5a343e7
  41913a:	xlat   BYTE PTR ds:[ebx]
  41913b:	inc    ebx
  41913c:	arpl   bp,sp
  41913e:	(bad)  
  41913f:	add    esp,DWORD PTR [ebx+0x5]
  419142:	test   DWORD PTR [ebx],0x3f6e5a3
  419148:	mov    ds:0x6303e6e5,eax
  41914d:	add    eax,0x5a343f7
  419152:	out    0x43,eax
  419154:	mov    ds:0x6343d6e5,eax
  419159:	add    eax,0x45a0e900
  41915e:	add    cl,ch
  419160:	and    BYTE PTR [ebp+0x20],al
  419163:	jmp    0xe96196c8
  419168:	and    BYTE PTR ds:0x560f920,al
  41916e:	add    cl,bh
  419170:	pusha  
  419171:	inc    ebp
  419172:	and    cl,ch
	...
  419180:	add    BYTE PTR [eax],al
  419182:	add    BYTE PTR [eax],ah
  419184:	inc    ebp
  419185:	add    cl,bl
  419187:	and    BYTE PTR [ebp+0x20],al
  41918a:	jmp    0xd941d6ef
  41918f:	and    BYTE PTR ds:0x560f900,al
  419195:	and    cl,ch
  419197:	pusha  
  419198:	inc    ebp
  419199:	add    cl,ch
  41919b:	and    BYTE PTR ds:0x560e920,al
  4191a1:	and    cl,bl
  4191a3:	and    BYTE PTR ds:0x560d900,al
  4191a9:	and    cl,bl
  4191ab:	and    BYTE PTR [ebp+0x20],al
  4191ae:	jmp    0xe9415753
  4191b3:	pusha  
  4191b4:	lds    ebx,FWORD PTR [edi]
  4191b6:	stc    
  4191b7:	mov    al,ds:0xa0e8ffc5
  4191bc:	lds    ebx,FWORD PTR [edi]
  4191be:	jmp    0xd9419723
  4191c3:	pusha  
  4191c4:	lds    ebx,FWORD PTR [edi]
  4191c6:	fldenv [eax+0x5]
  4191c9:	add    cl,ch
  4191cb:	mov    al,ds:0x60e90005
  4191d0:	lds    ebx,FWORD PTR [edi]
  4191d2:	stc    
  4191d3:	mov    al,ds:0xa0e8ffc5
  4191d8:	add    eax,0xc560f900
  4191dd:	(bad)  
  4191de:	clc    
  4191df:	mov    al,ds:0xa002005
  4191e4:	or     DWORD PTR [eax],eax
	...
  4191f6:	cli    
  4191f7:	enter  0x203f,0xfa
  4191fb:	or     BYTE PTR [eax],al
  4191fd:	and    BYTE PTR [edx-0x25ffbff8],bh
  419203:	enter  0x1fff,0xba
  419207:	or     BYTE PTR [eax],ah
  419209:	add    BYTE PTR [eax-0x37fbdff8],bh
  41920f:	cmp    ch,0x3
  419212:	retf   0x8
  419215:	add    BYTE PTR [edx-0x47000280],bh
  41921b:	cmp    ch,0x3
  41921e:	mov    BYTE PTR [eax-0x7f75ffe3],al
  419224:	sbb    eax,0x1d807804
  419229:	add    al,0x7a
  41922b:	or     BYTE PTR [eax],ah
  41922d:	add    BYTE PTR [edx-0x77fffff8],cl
  419233:	or     BYTE PTR [eax],al
  419235:	add    al,0x78
  419237:	or     BYTE PTR [eax],al
  419239:	add    BYTE PTR [edx+0x8],bh
  41923c:	add    BYTE PTR [eax+ecx*2],al
  41923f:	or     BYTE PTR [eax],ah
  419241:	add    al,0x48
  419243:	cmp    ch,0xff
  419246:	cmp    al,BYTE PTR [eax-0x7fc7fc03]
  41924c:	sbb    eax,0x20084800
  419251:	add    BYTE PTR [edx-0x80],cl
  419254:	std    
  419255:	add    edi,DWORD PTR [eax]
  419257:	or     BYTE PTR [eax],al
  419259:	add    al,0x0
	...
  419267:	add    BYTE PTR [eax],al
  419269:	cmp    cl,BYTE PTR [eax]
  41926b:	and    BYTE PTR [edx+ecx*1],al
  41926e:	sbb    BYTE PTR ds:0x20080804,0x0
  419275:	cli    
  419276:	pop    es
  419277:	and    BYTE PTR [ebx+eiz*2],al
  41927a:	outs   dx,BYTE PTR ds:[esi]
  41927b:	stc    
  41927c:	(bad)  
  41927d:	cld    
  41927e:	outs   dx,DWORD PTR ds:[esi]
  41927f:	stc    
  419280:	push   esp
  419282:	outs   dx,DWORD PTR ds:[esi]
  419283:	stc    
  419284:	pop    ds
  419285:	outs   dx,BYTE PTR ds:[si]
  419287:	stc    
  419288:	pop    ds
  419289:	arpl   WORD PTR [eax+0x1],si
  41928c:	add    BYTE PTR [ebx+0x6e],ah
  41928f:	add    DWORD PTR [eax],eax
  419291:	pop    edi
  419292:	outs   dx,BYTE PTR ds:[esi]
  419293:	stc    
  419294:	pop    ds
  419295:	arpl   WORD PTR [esi+0x1],bp
  419298:	add    BYTE PTR [edi+0x6e],bl
  41929b:	stc    
  41929c:	pop    ds
  41929d:	arpl   WORD PTR [esi+0x1],bp
  4192a0:	and    BYTE PTR [ebx+0x70],ah
  4192a3:	stc    
  4192a4:	jmp    DWORD PTR [eax+0x70]
  4192a7:	stc    
  4192a8:	jmp    DWORD PTR [eax+0x70]
  4192ab:	add    DWORD PTR [eax],esp
  4192ad:	addr16 jo 0x4192b1
  4192b0:	and    BYTE PTR [edi+0x70],bl
  4192b3:	add    DWORD PTR [eax],eax
  4192b5:	arpl   WORD PTR [eax+0x1],si
  4192b8:	and    BYTE PTR [ebx+0x6e],ah
  4192bb:	add    DWORD PTR [eax],eax
  4192bd:	outs   dx,BYTE PTR ds:[si]
  4192bf:	stc    
  4192c0:	jmp    DWORD PTR [eax+0x6e]
  4192c3:	add    DWORD PTR [eax],esp
  4192c5:	arpl   WORD PTR [esi-0x7],bp
  4192c8:	pop    ds
  4192c9:	pop    edi
  4192ca:	jo     0x4192c5
  4192cc:	inc    DWORD PTR [eax]
	...
  4192da:	add    BYTE PTR [eax],al
  4192dc:	pop    esp
  4192dd:	outs   dx,DWORD PTR ds:[esi]
  4192de:	stc    
  4192df:	pop    ds
  4192e0:	arpl   WORD PTR [ecx+edi*8+0x1f],bp
  4192e4:	outs   dx,BYTE PTR ds:[si]
  4192e6:	stc    
  4192e7:	inc    DWORD PTR [edi+ebp*2+0x1]
  4192eb:	add    BYTE PTR [edi+0x6e],ah
  4192ee:	stc    
  4192ef:	pop    ds
  4192f0:	pop    edi
  4192f1:	ins    BYTE PTR es:[edi],dx
  4192f2:	add    DWORD PTR [eax],esp
  4192f4:	ins    BYTE PTR es:[di],dx
  4192f6:	stc    
  4192f7:	pop    ds
  4192f8:	arpl   WORD PTR [ecx+eax*1+0x0],bp
  4192fc:	arpl   WORD PTR [esi+0x1],bp
  4192ff:	add    BYTE PTR [ebx+0x5],ah
  419302:	jmp    0xe74b0002
  419307:	add    esp,DWORD PTR [ebx+0x5]
  41930a:	jmp    0xe746f00a
  41930f:	add    eax,DWORD PTR [ebx+0x9]
  419312:	out    0xfb,eax
  419314:	in     al,dx
  419315:	sub    cl,0x3
  419318:	arpl   WORD PTR [ecx],cx
  41931a:	out    0xfb,eax
  41931c:	fadd   QWORD PTR [esi]
  41931e:	out    0xfb,eax
  419320:	aam    0x82
  419322:	jmp    0xa747162a
  419327:	repz les edx,FWORD PTR [edx]
  41932a:	out    0xf3,eax
  41932c:	mov    esp,0x5f03e782
  419331:	add    eax,0x1560f3a7
  419336:	out    0x3,eax
  419338:	arpl   WORD PTR ds:0x129cf3a7,dx
  41933e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41933f:	add    eax,DWORD PTR [eax]
	...
  41934d:	add    BYTE PTR [eax],al
  41934f:	arpl   WORD PTR ds:0x156303e7,ax
  419355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419356:	add    ebx,DWORD PTR [edi+0x5]
  419359:	out    0x3,eax
  41935b:	addr16 adc eax,0x1560f3a7
  419361:	out    0xf3,eax
  419363:	pusha  
  419364:	add    eax,0x1560f3e7
  419369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41936a:	repz pusha 
  41936c:	add    eax,0x8254f3e7
  419371:	daa    
  419372:	add    al,0x63
  419374:	add    eax,0x155f03e7
  419379:	daa    
  41937a:	add    al,0x63
  41937c:	adc    eax,0x1234f3e7
  419381:	daa    
  419382:	hlt    
  419383:	sub    al,0x82
  419385:	out    0xf3,eax
  419387:	pusha  
  419388:	add    eax,0x9672900
  41938d:	add    BYTE PTR [ecx],ch
  41938f:	pop    edi
  419390:	or     DWORD PTR [eax],edx
  419392:	jmp    0x295199a7
  419397:	jb     0x5a27d9a
  41939d:	add    cl,ch
  41939f:	pusha  
  4193a0:	add    eax,0x9672900
  4193a5:	adc    BYTE PTR [ecx],ch
  4193a7:	pop    edi
  4193a8:	add    eax,0x81d0e910
  4193ad:	or     eax,0x5cf29
  4193b2:	jmp    0x4193b7
	...
  4193bf:	add    BYTE PTR [eax],al
  4193c1:	add    BYTE PTR [eax+0x9],ah
  4193c4:	add    BYTE PTR [ecx-0x16fffa30],ch
  4193ca:	pusha  
  4193cb:	or     DWORD PTR [eax],eax
  4193cd:	jmp    0xe9519982
  4193d2:	mov    al,0x81
  4193d4:	std    
  4193d5:	test   eax,0xa9000560
  4193da:	pusha  
  4193db:	or     DWORD PTR [eax],edx
  4193dd:	jmp    0xaa3f1572
  4193e2:	nop
  4193e3:	add    eax,0x8190e900
  4193e8:	or     eax,0x560a9
  4193ed:	test   eax,0xe9100560
  4193f2:	pusha  
  4193f3:	or     DWORD PTR [eax],edx
  4193f5:	test   eax,0xe9100960
  4193fa:	pusha  
  4193fb:	add    eax,0x960e910
  419400:	add    BYTE PTR [ecx],ch
  419402:	push   edi
  419403:	or     DWORD PTR ds:0x560e9,0x10053729
  41940d:	sub    DWORD PTR [edi+0x9],ebx
  419410:	add    BYTE PTR [eax],al
  419412:	jp     0x41941d
  419414:	add    BYTE PTR [eax],dl
  419416:	cmp    al,BYTE PTR ds:0x750a1004
  41941c:	std    
  41941d:	cmovp  edi,DWORD PTR [ecx-0x3]
  419421:	psubd  mm0,QWORD PTR [eax+eax*1]
	...
  419435:	cmp    bh,BYTE PTR [ecx+0x1]
  419438:	adc    BYTE PTR [edx],cl
  41943a:	jne    0x41943d
  41943c:	add    BYTE PTR [edx],cl
  41943e:	jne    0x419441
  419440:	add    BYTE PTR [edx],bh
  419442:	jns    0x419441
  419444:	(bad)  
  419445:	cmp    bh,BYTE PTR [ecx-0x3]
  419448:	dec    DWORD PTR [edx-0x35fffbf7]
  41944e:	add    al,0x0
  419450:	adc    BYTE PTR [edx-0x21effe8c],bh
  419456:	xor    edi,ebp
  419458:	dec    edx
  41945a:	add    al,0x0
  41945c:	add    dl,cl
  41945e:	add    al,0x0
  419460:	add    dh,cl
  419462:	cs std 
  419464:	jmp    FWORD PTR [edx-0x2d0002cf]
  41946a:	sub    al,0xfd
  41946c:	dec    DWORD PTR [edx+0x7a000004]
  419472:	add    al,0x0
  419474:	add    BYTE PTR [esi+ebp*1-0x3],cl
  419478:	dec    DWORD PTR [esi-0x110002ce]
  41947e:	sub    edi,ebp
  419480:	(bad)  
  419481:	jp     0x419487
  419483:	add    BYTE PTR [eax],al
  419485:	jp     0x41948b
  419487:	add    BYTE PTR [eax],al
  419489:	data16 cs std 
  41948c:	jmp    FWORD PTR [edx]
  41948e:	xor    bh,ch
  419490:	jmp    esi
  419492:	xor    ch,bh
  419494:	(bad)  
  419495:	cmp    al,BYTE PTR [eax+eax*1]
	...
  4194a8:	arpl   WORD PTR [esi+0x1],bp
  4194ab:	add    BYTE PTR [ebx-0x72],ah
  4194ae:	daa    
  4194af:	jmp    FWORD PTR [esi+edx*1]
  4194b2:	jmp    DWORD PTR cs:[esi+esi*4]
  4194b6:	sub    al,0xff
  4194b8:	sbb    al,0x6e
  4194ba:	add    DWORD PTR [eax],eax
  4194bc:	arpl   WORD PTR [esi+0x1],bp
  4194bf:	add    BYTE PTR [ebx-0x18],ah
  4194c2:	inc    DWORD PTR es:[edx+edi*1]
  4194c6:	cs (bad) 
  4194c8:	cld    
  4194c9:	mov    ebp,0x6df4ff2c
  4194ce:	add    DWORD PTR [eax],eax
  4194d0:	arpl   WORD PTR [esi+0x1],bp
  4194d3:	add    BYTE PTR [ebx-0x6],ah
  4194d6:	es (bad) 
  4194d8:	fcomp  QWORD PTR [ecx]
  4194da:	cs call esp
  4194dd:	xchg   ecx,eax
  4194de:	sub    al,0xff
  4194e0:	int3   
  4194e1:	ins    DWORD PTR es:[edi],dx
  4194e2:	add    DWORD PTR [eax],eax
  4194e4:	arpl   WORD PTR [esi+0x1],bp
  4194e7:	add    BYTE PTR [ebx-0x50],ah
  4194ea:	and    edi,edi
  4194ec:	mov    ah,0x45
  4194ee:	sub    edi,edi
  4194f0:	lods   al,BYTE PTR ds:[esi]
  4194f1:	lds    ebp,FWORD PTR [ebx]
  4194f3:	jmp    DWORD PTR [ebp+ebp*2+0x6e630001]
  4194fa:	add    DWORD PTR [eax],eax
  4194fc:	arpl   WORD PTR [eax],bp
  4194fe:	and    al,0xff
  419500:	mov    ecx,?
  419502:	sub    eax,0x2a4984ff
  419507:	(bad)  
  419508:	jl     0x419577
  41950a:	add    DWORD PTR [eax],eax
	...
  419518:	add    BYTE PTR [eax],al
  41951a:	add    BYTE PTR [ebx+0x6e],ah
  41951d:	add    DWORD PTR [eax],eax
  41951f:	arpl   WORD PTR [esp],ax
  419522:	jmp    DWORD PTR [ebp+edi*1+0x2e]
  419526:	call   FWORD PTR [ebp+ebp*2+0x1]
  41952a:	add    BYTE PTR [ebx+0x6c],ah
  41952d:	add    DWORD PTR [eax],eax
  41952f:	arpl   WORD PTR ds:0x56303e7,ax
  419535:	out    0x3,eax
  419537:	arpl   WORD PTR ds:0x56303e7,ax
  41953d:	mov    ebp,DWORD PTR ds:0x2db17f2c
  419543:	and    al,0x7f
  419545:	xchg   ebp,eax
  419546:	sub    eax,0x2dcb7f1c
  41954b:	adc    al,0x7f
  41954d:	mov    bh,0x2d
  41954f:	or     al,0x7f
  419551:	mov    ds:0xf17f042d,eax
  419556:	sub    al,0xfc
  419558:	jle    0x41954b
  41955a:	sub    al,0xf4
  41955c:	jle    0x419523
  41955e:	sub    al,0xec
  419560:	jle    0x41951d
  419562:	sub    al,0xe4
  419564:	jle    0x41958d
  419566:	sub    eax,0x2d237edc
  41956b:	aam    0x7e
  41956d:	or     DWORD PTR ds:0x2ce57ecc,ebp
  419573:	les    edi,FWORD PTR [esi+0x6b]
  419576:	sub    al,0xbc
  419578:	jle    0x419503
  41957a:	sub    al,0xb4
  41957c:	jle    0x419517
  41957e:	sub    al,0x0
	...
  41958c:	add    BYTE PTR [eax],al
  41958e:	lods   al,BYTE PTR ds:[esi]
  41958f:	jle    0x4195bc
  419591:	sub    al,0xa4
  419593:	jle    0x4195a8
  419595:	sub    al,0x9c
  419597:	jle    0x4195e6
  419599:	sub    al,0x94
  41959b:	jle    0x4195d2
  41959d:	sub    al,0x8c
  41959f:	jle    0x419592
  4195a1:	daa    
  4195a2:	test   BYTE PTR [esi-0x1],bh
  4195a5:	daa    
  4195a6:	jl     0x419626
  4195a8:	ret    
  4195a9:	daa    
  4195aa:	je     0x41962a
  4195ac:	test   eax,0x9b7e6c27
  4195b1:	daa    
  4195b2:	fs jle 0x41953c
  4195b5:	daa    
  4195b6:	pop    esp
  4195b7:	jle    0x4195b9
  4195b9:	jns    0x419637
  4195bb:	jle    0x4195ba
  4195bd:	ins    DWORD PTR es:[edi],dx
  4195be:	test   BYTE PTR [esi-0x3],bh
  4195c1:	jns    0x41963e
  4195c3:	jle    0x4195c2
  4195c5:	mov    DWORD PTR [ebx-0x74640282],ecx
  4195cb:	jle    0x4195ca
  4195cd:	stos   DWORD PTR es:[edi],eax
  4195ce:	jnp    0x41964e
  4195d0:	std    
  4195d1:	mov    ds:0xb7fd7e7b,eax
  4195d6:	dec    ebx
  4195d7:	jle    0x4195d6
  4195d9:	out    0x4b,eax
  4195db:	jle    0x4195da
  4195dd:	sar    DWORD PTR [ebx],cl
  4195df:	jle    0x4195de
  4195e1:	in     eax,0x3b
  4195e3:	jle    0x4195e2
  4195e5:	xor    eax,0x5fd7e4a
  4195ea:	dec    edx
  4195eb:	jle    0x4195ea
  4195ed:	adc    DWORD PTR [edx],edi
  4195ef:	jle    0x4195ee
  4195f1:	ja     0x4195f3
	...
  4195ff:	add    BYTE PTR [eax],al
  419601:	cmp    bh,BYTE PTR [esi-0x3]
  419604:	pop    edi
  419605:	mov    bh,BYTE PTR [esi-0x3]
  419608:	dec    edi
  419609:	mov    bh,BYTE PTR [esi-0x3]
  41960c:	sub    eax,0x35fd7e7a
  419611:	jp     0x419691
  419613:	std    
  419614:	push   ecx
  419615:	mov    bh,BYTE PTR [esi-0x3]
  419618:	push   ebx
  419619:	mov    bh,BYTE PTR [esi-0x3]
  41961c:	loope  0x4195a4
  41961e:	jle    0x41961d
  419620:	loope  0x4196a0
  419622:	jle    0x419621
  419624:	adc    DWORD PTR [ebp+0x7e],eax
  419627:	std    
  419628:	(bad)  
  419629:	ds jle 0x419629
  41962c:	jmp    0x8b419b91
  419631:	ds jle 0x419631
  419634:	mov    ds:0x7bfd7e46,eax
  419639:	cmp    eax,0x454bfd7e
  41963e:	jle    0x41963d
  419640:	add    BYTE PTR [eax],ch
  419642:	daa    
  419643:	std    
  419644:	inc    DWORD PTR [ebx+eiz*1+0x94afffd]
  41964b:	add    BYTE PTR [eax],al
  41964d:	pop    edx
  41964e:	and    edi,ebp
  419650:	(bad)  
  419651:	cmp    cl,BYTE PTR [ecx]
  419653:	add    BYTE PTR [eax],al
  419655:	inc    edx
  419656:	and    edi,ebp
  419658:	inc    DWORD PTR [edx+0x24]
  41965b:	std    
  41965c:	(bad)  
  41965d:	ds and al,0xfd
  419660:	call   DWORD PTR [eax+0x24]
  419663:	std    
  419664:	inc    DWORD PTR [eax]
	...
  419672:	add    BYTE PTR [eax],al
  419674:	bound  esp,QWORD PTR [edi*8-0x2dbbd01]
  41967b:	push   DWORD PTR [edx+0x24]
  41967e:	std    
  41967f:	push   DWORD PTR [eax+0x24]
  419682:	std    
  419683:	inc    DWORD PTR [eax+0x24]
  419686:	std    
  419687:	(bad)  
  419688:	jp     0x4196ad
  41968a:	std    
  41968b:	(bad)  
  41968c:	cli    
  41968d:	or     BYTE PTR [eax],al
  41968f:	add    BYTE PTR [ebx+eiz*1+0x8cafffd],cl
  419696:	add    BYTE PTR [eax],al
  419698:	add    BYTE PTR [edi*8-0x2dc2301],ah
  41969f:	(bad)  
  4196a0:	mov    edx,0xca000008
  4196a5:	sub    ch,bh
  4196a7:	(bad)  
  4196a8:	mov    esi,0xb2fffd28
  4196ad:	sub    ch,bh
  4196af:	call   DWORD PTR [esi+0x21]
  4196b2:	std    
  4196b3:	jmp    FWORD PTR [ecx+eiz*1-0x3]
  4196b7:	call   DWORD PTR [eax+0x7afffd28]
  4196bd:	or     BYTE PTR [eax],al
  4196bf:	add    al,cl
  4196c1:	sub    ch,bh
  4196c3:	(bad)  
  4196c4:	mov    esp,0x63fffd28
  4196c9:	test   BYTE PTR [ecx],ah
  4196cb:	jmp    FWORD PTR [esi+edx*4+0x21]
  4196cf:	jmp    DWORD PTR [eax+esi*8+0x20]
  4196d3:	call   FWORD PTR [esi+ebx*8+0x20]
  4196d7:	inc    DWORD PTR [eax]
	...
  4196e5:	add    BYTE PTR [eax],al
  4196e7:	push   esp
  4196e8:	(bad)  
  4196e9:	and    bh,bh
  4196eb:	dec    esp
  4196ec:	shl    BYTE PTR [eax],1
  4196ee:	inc    DWORD PTR [eax+ebx*4+0x24]
  4196f2:	(bad)  
  4196f3:	cmp    al,0xa6
  4196f5:	and    al,0xff
  4196f7:	xor    al,0x6e
  4196f9:	add    DWORD PTR [eax],eax
  4196fb:	arpl   ax,ax
  4196fd:	and    al,0xff
  4196ff:	and    al,0x4c
  419701:	and    al,0xff
  419703:	sbb    al,0x6e
  419705:	add    DWORD PTR [eax],eax
  419707:	arpl   dx,si
  419709:	sub    edi,edi
  41970b:	or     al,0xa8
  41970d:	sub    bh,bh
  41970f:	add    al,0xbc
  419711:	sub    bh,bh
  419713:	cld    
  419714:	sub    DWORD PTR [edx],0x2a9df4ff
  41971a:	(bad)  
  41971b:	in     al,dx
  41971c:	mov    DWORD PTR [edx],ebp
  41971e:	jmp    esp
  419720:	ja     0x41974a
  419722:	(bad)  
  419723:	fsub   QWORD PTR [edi+0x28]
  419726:	call   esp
  419728:	dec    ebx
  419729:	sub    bh,bh
  41972b:	int3   
  41972c:	mov    cl,0x28
  41972e:	inc    esp
  419730:	lods   eax,DWORD PTR ds:[esi]
  419731:	sub    bh,bh
  419733:	mov    esp,0xb4ff28a9
  419738:	dec    edi
  419739:	sub    bh,bh
  41973b:	lods   al,BYTE PTR ds:[esi]
  41973c:	dec    ebx
  41973d:	sub    bh,bh
  41973f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419740:	icebp  
  419741:	call   FWORD PTR es:[edi+ecx*4-0x6b00d9]
  419749:	inc    DWORD PTR es:[eax]
	...
  419758:	add    BYTE PTR [eax],al
  41975a:	mov    WORD PTR [ecx],fs
  41975c:	daa    
  41975d:	inc    DWORD PTR [esp+eax*1+0x7b7c293b]
  419764:	add    eax,0x1d7b7429
  419769:	sub    DWORD PTR [ebx+edi*2-0x1f],ebp
  41976d:	daa    
  41976e:	fs jnp 0x419750
  419771:	daa    
  419772:	pop    esp
  419773:	jnp    0x419740
  419775:	daa    
  419776:	push   esp
  419777:	jnp    0x419722
  419779:	daa    
  41977a:	dec    esp
  41977b:	jnp    0x419710
  41977d:	daa    
  41977e:	inc    esp
  41977f:	jnp    0x4197c8
  419781:	sub    BYTE PTR [ebx+edi*2],bh
  419784:	push   edi
  419785:	sub    BYTE PTR [ebx+edi*2],dh
  419788:	push   ebx
  419789:	sub    BYTE PTR [ebx+edi*2],ch
  41978c:	ja     0x4197b5
  41978e:	and    al,0x7b
  419790:	xchg   DWORD PTR [edi],esp
  419792:	sbb    al,0x7b
  419794:	jns    0x4197bd
  419796:	adc    al,0x7b
  419798:	test   eax,0x917b0c27
  41979d:	daa    
  41979e:	add    al,0x7b
  4197a0:	popf   
  4197a1:	daa    
  4197a2:	cld    
  4197a3:	jp     0x419792
  4197a5:	es hlt 
  4197a7:	jp     0x41979a
  4197a9:	es in  al,dx
  4197ab:	jp     0x419778
  4197ad:	es in  al,0x7a
  4197b0:	sbb    esp,DWORD PTR [edi]
  4197b2:	fdivr  QWORD PTR [edx+0xb]
  4197b5:	daa    
  4197b6:	aam    0x7a
  4197b8:	out    dx,eax
  4197b9:	es int3 
  4197bb:	jp     0x41981a
  4197bd:	add    BYTE PTR es:[eax],al
	...
  4197cc:	add    ah,al
  4197ce:	jp     0x419755
  4197d0:	es mov esp,0xb426857a
  4197d6:	jp     0x41976b
  4197d8:	lods   al,BYTE PTR es:[esi]
  4197da:	jp     0x4197f7
  4197dc:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4197de:	jp     0x41982f
  4197e0:	es pushf 
  4197e2:	jp     0x419825
  4197e4:	es xchg esp,eax
  4197e6:	jp     0x4197e8
  4197e8:	loope  0x419830
  4197ea:	jp     0x4197e9
  4197ec:	sar    DWORD PTR [esi],1
  4197ee:	jp     0x4197ed
  4197f0:	rol    DWORD PTR [esi+0x7a],1
  4197f3:	std    
  4197f4:	xlat   BYTE PTR ds:[ebx]
  4197f5:	ds jp  0x4197f5
  4197f8:	jmp    0x8b419d5d
  4197fd:	ds jp  0x4197fd
  419800:	add    DWORD PTR [esi+0x7e5bfd7a],0x7a
  419807:	std    
  419808:	dec    ebx
  419809:	xchg   BYTE PTR [edx-0x3],bh
  41980c:	cmp    edi,DWORD PTR [esi+0x7a]
  41980f:	std    
  419810:	scas   eax,DWORD PTR es:[edi]
  419811:	inc    ecx
  419812:	jnp    0x419811
  419814:	jmp    0xc9419d79
  419819:	inc    ecx
  41981a:	jnp    0x419819
  41981c:	jmp    0xc1419d81
  419821:	add    DWORD PTR [ebx-0x3],edi
  419824:	icebp  
  419825:	add    DWORD PTR [ebx-0x3],edi
  419828:	aad    0x1
  41982a:	jnp    0x419829
  41982c:	add    eax,DWORD PTR [eax]
  41982e:	jnp    0x41982d
  419830:	loope  0x419832
	...
  41983e:	add    BYTE PTR [eax],al
  419840:	add    DWORD PTR [ebx-0x3],edi
  419843:	xor    DWORD PTR [eax],eax
  419845:	jnp    0x419844
  419847:	xor    DWORD PTR [eax],eax
  419849:	jnp    0x419848
  41984b:	add    eax,DWORD PTR [eax]
  41984d:	jnp    0x41984c
  41984f:	add    eax,eax
  419851:	jp     0x419850
  419853:	pop    ecx
  419854:	sar    BYTE PTR [edx-0x3],0xe9
  419858:	pusha  
  419859:	add    eax,0x7ac03f00
  41985e:	std    
  41985f:	jmp    0x33419dc4
  419864:	sar    BYTE PTR [edx-0x3],0x37
  419868:	sar    BYTE PTR [edx-0x3],0xe9
  41986c:	pusha  
  41986d:	add    eax,0x658a0000
  419872:	(bad)  
  419873:	inc    DWORD PTR [esi-0x4d00019b]
  419879:	gs (bad) 
  41987b:	call   FWORD PTR [esi+0x61]
  41987e:	(bad)  
  41987f:	call   DWORD PTR [ebp+eiz*2+0x6580fffe]
  419886:	(bad)  
  419887:	(bad)  
  419888:	jp     0x41988f
  41988a:	add    BYTE PTR [eax],al
  41988c:	test   al,0x65
  41988e:	(bad)  
  41988f:	inc    DWORD PTR [eiz*2+0x64e4fffe]
  419896:	(bad)  
  419897:	call   edx
  419899:	fs (bad) 
  41989b:	(bad)  
  41989c:	mov    eax,0xbafffe61
  4198a1:	fs (bad) 
  4198a3:	inc    DWORD PTR [eax]
	...
  4198b1:	add    BYTE PTR [eax],al
  4198b3:	loop   0x419919
  4198b5:	(bad)  
  4198b6:	(bad)  
  4198b7:	fsub   DWORD PTR [esi+edi*8-0x1]
  4198bb:	loopne 0x419921
  4198bd:	(bad)  
  4198be:	jmp    edx
  4198c0:	fs (bad) 
  4198c2:	dec    DWORD PTR [edx]
  4198c4:	add    eax,0x64e80000
  4198c9:	(bad)  
  4198ca:	call   FWORD PTR [eiz*2+0x50afffe]
  4198d1:	add    BYTE PTR [eax],al
  4198d3:	pop    ss
  4198d4:	add    eax,0x625f723f
  4198d9:	jno    0x419940
  4198db:	cmp    al,0x6a
  4198dd:	imul   esp,DWORD PTR [ebp-0x75],0x78023d01
  4198e4:	outs   dx,BYTE PTR ds:[esi]
  4198e5:	pop    esi
  4198e6:	fs jl  0x419953
  4198e9:	imul   esp,DWORD PTR [ebp-0x46],0x9001f04
  4198f0:	imul   ebp,DWORD PTR [ebx+esi*2-0x61],0x636e5e4c
  4198f8:	dec    edx
  4198f9:	in     eax,dx
  4198fa:	bound  esp,QWORD PTR [ebx-0x2d]
  4198fd:	add    dl,BYTE PTR [ebp+0x11]
  419900:	push   ebp
  419901:	cmc    
  419902:	bound  ebx,QWORD PTR ds:0x6362ed55
  419908:	push   ecx
  419909:	push   es
  41990a:	ins    BYTE PTR es:[edi],dx
  41990b:	adc    BYTE PTR [edx-0x6ff9940d],dh
  419911:	(bad)  
  419912:	push   DWORD PTR [esi+ebx*8+0x3]
  419916:	inc    ebp
	...
  419923:	add    BYTE PTR [eax],al
  419925:	add    bh,bh
  419927:	jle    0x41990c
  419929:	pop    esi
  41992a:	neg    DWORD PTR [ecx+0x6ec860f2]
  419930:	add    DWORD PTR [ebp+0x6ced9f62],esi
  419936:	ror    DWORD PTR [ebp-0x54aad13],0xf1
  41993d:	pusha  
  41993e:	enter  0x16e,0xf4
  419942:	bound  ebp,QWORD PTR [edx]
  419944:	out    dx,eax
  419945:	pusha  
  419946:	ret    0xc9c2
  419949:	jno    0x419909
  41994b:	rol    DWORD PTR [ebx],0xf0
  41994e:	bound  esi,QWORD PTR [edx]
  419950:	out    dx,eax
  419951:	pusha  
  419952:	or     dl,0xc0
  419955:	imul   edi,DWORD PTR [edi-0x41],0xffffffe2
  419959:	inc    DWORD PTR [edx*2+0x1a706c04]
  419960:	mul    BYTE PTR [eax+0x73]
  419963:	and    eax,0x7aecffc1
  419968:	add    al,0x6c
  41996a:	jo     0x41997e
  41996c:	mul    BYTE PTR [eax+0x42]
  41996f:	jp     0x419933
  419971:	call   esp
  419973:	dec    esi
  419974:	add    al,BYTE PTR [ebp+0x46]
  419977:	jp     0x419940
  419979:	data16 aaa 
  41997b:	add    ecx,eax
  41997d:	jae    0x4199b6
  41997f:	add    eax,0xf242ead9
  419984:	shl    dh,cl
  419986:	xor    eax,esi
  419988:	out    0x3,al
	...
  419996:	add    BYTE PTR [eax],al
  419998:	add    al,cl
  41999a:	add    al,0xa4
  41999c:	sti    
  41999d:	or     al,0xe6
  41999f:	aam    0xe7
  4199a1:	and    edi,esp
  4199a3:	mov    ah,0xea
  4199a5:	adc    ch,al
  4199a7:	(bad)  
  4199a8:	out    dx,al
  4199a9:	add    edi,esp
  4199ab:	mov    dl,0xd4
  4199ad:	lock repnz (bad) 
  4199b0:	icebp  
  4199b1:	push   ebx
  4199b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199b4:	add    ecx,DWORD PTR [edi+0x6]
  4199b7:	scas   al,BYTE PTR es:[edi]
  4199b8:	out    0xf0,al
  4199ba:	mov    esi,0xd2c1ef7f
  4199bf:	(bad)  
  4199c0:	std    
  4199c1:	rol    DWORD PTR ds:0xf3a203bd,0x8b
  4199c8:	loop   0x41999a
  4199ca:	loopne 0x419970
  4199cc:	jmp    0xf5c4:0xe333e0c8
  4199d3:	dec    edi
  4199d4:	repnz mov esp,0x36303e6
  4199db:	sbb    al,0xe3
  4199dd:	mov    edi,cs
  4199df:	dec    edi
  4199e0:	out    0x8f,eax
  4199e2:	mov    BYTE PTR [edx+ecx*8-0x7b],0xe9
  4199e7:	dec    ebx
  4199e8:	add    al,0x32
  4199ea:	add    al,0x14
  4199ec:	repnz mov esp,esp
  4199ef:	push   ss
  4199f0:	fidivr DWORD PTR [ebp-0x20]
  4199f3:	adc    eax,0xffbf86d1
  4199f8:	out    dx,eax
  4199f9:	add    DWORD PTR ds:0x281,0x0
	...
  419a0b:	add    BYTE PTR [edi],ch
  419a0d:	out    0x7,al
  419a0f:	call   0xf64a863c
  419a14:	sub    eax,0xa1effff3
  419a19:	jbe    0x419a18
  419a1b:	sbb    ah,BYTE PTR [eax-0x40]
  419a1e:	(bad)  
  419a1f:	fst    QWORD PTR [eax-0x5e35930c]
  419a25:	loop   0x419a8a
  419a27:	fstp   TBYTE PTR [ebp+0x60e970f5]
  419a2d:	cmp    edi,0x53f27dad
  419a33:	les    edi,FWORD PTR [ebp-0x1a]
  419a36:	dec    edi
  419a37:	enter  0xde8c,0x3e
  419a3b:	jmp    0xaa41cca0
  419a40:	outs   dx,BYTE PTR ds:[esi]
  419a41:	jecxz  0x419aa1
  419a43:	xchg   ebp,eax
  419a44:	test   edx,eax
  419a46:	data16 fwait
  419a48:	jge    0x419a2f
  419a4a:	jae    0x419aca
  419a4c:	push   esi
  419a4d:	out    dx,eax
  419a4e:	ds jmp 0xa54178b4
  419a54:	inc    ebp
  419a55:	jmp    0x7d66:0xc03d7d62
  419a5c:	inc    ebp
  419a5d:	aaa    
  419a5e:	add    cl,ch
  419a60:	pop    edi
  419a61:	shl    BYTE PTR [edx+0x55],0x20
  419a65:	repz jno 0x419ac3
  419a68:	cmp    ch,al
  419a6a:	jae    0x419aa5
  419a6c:	adc    ecx,ebp
  419a6e:	pusha  
  419a6f:	dec    esp
	...
  419a7c:	add    BYTE PTR [eax],al
  419a7e:	add    BYTE PTR [eax],dl
  419a80:	cmc    
  419a81:	(bad)  
  419a82:	mov    eax,0x4d66d061
  419a87:	cli    
  419a88:	les    esp,FWORD PTR [edi+0x48]
  419a8b:	icebp  
  419a8c:	shr    DWORD PTR [esp+esi*1-0x6],1
  419a90:	jmp    0xef62ab08
  419a95:	jae    0x419aa3
  419a97:	pop    edi
  419a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a99:	add    BYTE PTR [edi],ah
  419a9b:	into   
  419a9c:	out    0x63,eax
  419a9e:	add    BYTE PTR [eax+ebp*2+0x3fd6736f],al
  419aa5:	data16 ins BYTE PTR es:[edi],dx
  419aa7:	push   edi
  419aa8:	inc    eax
  419aa9:	std    
  419aaa:	call   DWORD PTR [ebp-0x698c93fe]
  419ab0:	jae    0x419b12
  419ab2:	ins    DWORD PTR es:[edi],dx
  419ab3:	mov    ch,BYTE PTR [eax+0x3e]
  419ab6:	add    al,dl
  419ab8:	add    BYTE PTR [esi+0x69],al
  419abb:	fcomp  QWORD PTR [ebp+0x4b]
  419abe:	mov    gs:0x9e69436d,al
  419ac4:	ins    BYTE PTR es:[edi],dx
  419ac5:	ds add bh,bl
  419ac8:	add    BYTE PTR [esi+0x69],al
  419acb:	mov    esp,0xcd6c405d
  419ad0:	jb     0x419b34
  419ad2:	add    BYTE PTR [esi-0x399abd00],dl
  419ad8:	push   esp
  419ad9:	ins    BYTE PTR es:[edi],dx
  419ada:	mul    DWORD PTR fs:[edx+eiz*2+0x48]
  419adf:	jmp    0x419b43
  419ae1:	popa   
  419ae2:	ins    BYTE PTR es:[edi],dx
	...
  419aef:	add    BYTE PTR [eax],al
  419af1:	add    bh,ah
  419af3:	dec    ecx
  419af4:	std    
  419af5:	jmp    DWORD PTR [edx+ecx*1+0x5ab66543]
  419afc:	bound  esi,QWORD PTR [edx-0x67]
  419aff:	bound  ebp,QWORD PTR [esi+ebp*2-0x79]
  419b03:	jno    0x419b43
  419b05:	add    BYTE PTR [eax+0xa],ah
  419b08:	inc    ebx
  419b09:	gs mov dh,0x55
  419b0c:	ins    BYTE PTR es:[edi],dx
  419b0d:	arpl   WORD PTR [ebx-0x63b69d8b],bp
  419b13:	imul   ebp,DWORD PTR [ecx+eax*2-0x6],0x8
  419b18:	je     0x419b1b
  419b1a:	inc    ebp
  419b1b:	pop    esi
  419b1c:	jno    0x419b71
  419b1e:	inc    ebx
  419b1f:	js     0x419b92
  419b21:	gs pop edi
  419b23:	inc    edx
  419b24:	imul   esp,DWORD PTR [esi+0x63],0xb
  419b28:	add    al,0xa0
  419b2a:	bound  ebp,QWORD PTR [ebx]
  419b2c:	out    0x73,eax
  419b2e:	sub    al,0x15
  419b30:	out    dx,al
  419b31:	arpl   WORD PTR [ebx+edi*2],di
  419b34:	repnz inc ebx
  419b36:	cmp    dh,BYTE PTR [eax-0x18]
  419b39:	pusha  
  419b3a:	aaa    
  419b3b:	jae    0x419b2c
  419b3d:	jbe    0x419b61
  419b3f:	pop    esi
  419b40:	add    DWORD PTR [ebp+0x62],ecx
  419b43:	stos   DWORD PTR es:[edi],eax
  419b44:	call   0xec91aebc
  419b49:	jne    0x419b4d
  419b4b:	pop    edx
  419b4c:	call   0xe39caca0
  419b51:	dec    WORD PTR [eax-0x2e]
  419b55:	jae    0x419b57
	...
  419b63:	add    BYTE PTR [eax],al
  419b65:	adc    DWORD PTR [ebp-0x15],eax
  419b68:	and    bl,BYTE PTR fs:[esi+0x1]
  419b6c:	jp     0x419bcf
  419b6e:	scas   eax,DWORD PTR es:[edi]
  419b6f:	call   0xefdabbe7
  419b74:	jno    0x419b74
  419b76:	mov    esi,ebp
  419b78:	inc    ebx
  419b79:	retf   0xe890
  419b7c:	pusha  
  419b7d:	iret   
  419b7e:	fwait
  419b7f:	out    dx,eax
  419b80:	jbe    0x419b24
  419b82:	pop    esi
  419b83:	add    DWORD PTR [ebx],edx
  419b85:	pusha  
  419b86:	mov    dh,dl
  419b88:	jae    0x419b3b
  419b8a:	jg     0x419b7c
  419b8c:	outs   dx,DWORD PTR ds:[esi]
  419b8d:	mov    ds:0x624c015e,al
  419b92:	sub    esp,ebp
  419b94:	jae    0x419b29
  419b96:	shr    al,1
  419b98:	jne    0x419b1c
  419b9a:	(bad)  
  419b9c:	dec    edi
  419b9d:	xchg   ecx,eax
  419b9e:	frstpm(287 only) 
  419ba0:	data16 jg 0x419b6c
  419ba3:	into   
  419ba4:	bound  eax,QWORD PTR [eax-0x729316ce]
  419baa:	adc    al,0xe1
  419bac:	push   0x7e
  419bae:	add    eax,0x73ecc31a
  419bb3:	xor    BYTE PTR [ebx],al
  419bb5:	sahf   
  419bb6:	jmp    0xe314:0xde52d41a
  419bbd:	push   eax
  419bbe:	jmp    0xf00f:0xeb3ff216
  419bc5:	inc    ecx
  419bc6:	mov    esi,0xf804
	...
  419bd7:	add    BYTE PTR [ebp+0x5],bh
  419bda:	ins    DWORD PTR es:[edi],dx
  419bdb:	add    al,0x1e
  419bdd:	jmp    0xe6d8:0xf731c0da
  419be4:	ss stc 
  419be6:	stos   BYTE PTR es:[edi],al
  419be7:	jmp    0xf707:0xf7c9ea12
  419bee:	mov    edi,0xdd738cc2
  419bf3:	add    bh,dh
  419bf5:	idiv   DWORD PTR [edx-0x4315f70f]
  419bfb:	aam    0x74
  419bfd:	jae    0x419bf3
  419bff:	add    DWORD PTR [eax],ebx
  419c01:	cli    
  419c02:	mov    dh,bh
  419c04:	std    
  419c05:	(bad)  
  419c06:	(bad)  
  419c07:	test   ecx,0xbdd47dd9
  419c0d:	jmp    0xe5065c9d
  419c12:	js     0x419c17
  419c14:	fadd   DWORD PTR [esi+ebp*4]
  419c17:	out    0xb0,al
  419c19:	fnstcw WORD PTR [edi-0x20]
  419c1c:	retf   
  419c1d:	(bad)  
  419c1e:	push   ebp
  419c1f:	idiv   DWORD PTR [esi-0x15fc1907]
  419c25:	pop    es
  419c26:	cmp    dh,al
  419c28:	sub    eax,0x4510456
  419c2e:	cs out 0x90,eax
  419c31:	ror    BYTE PTR [ebp-0x18],0x91
  419c35:	loope  0x419c36
  419c37:	dec    ebx
  419c38:	and    eax,0x446bec
	...
  419c49:	add    BYTE PTR [eax],al
  419c4b:	and    eax,0x200c6ad4
  419c50:	jae    0x419c4f
  419c52:	shl    DWORD PTR [ecx-0x38],1
  419c55:	bound  ebx,QWORD PTR ds:0x1570d3b3
  419c5b:	pushf  
  419c5c:	hlt    
  419c5d:	jno    0x419c75
  419c5f:	shl    DWORD PTR [edx-0x3],1
  419c62:	and    BYTE PTR [edi-0x3c],bl
  419c65:	jno    0x419c73
  419c67:	shl    dh,0x62
  419c6a:	adc    eax,0xd16be1c6
  419c6f:	(bad)
  419c72:	sbb    dh,BYTE PTR [ecx-0x2c]
  419c75:	ins    DWORD PTR es:[edi],dx
  419c76:	enter  0xf590,0x67
  419c7a:	mov    esi,0xcfd728c
  419c7f:	popa   
  419c80:	aad    0x71
  419c82:	into   
  419c83:	and    edi,0x70
  419c86:	mov    edx,0xc0463733
  419c8b:	jb     0x419c82
  419c8d:	jae    0x419c78
  419c8f:	pusha  
  419c90:	or     eax,0xe770ae02
  419c95:	ins    DWORD PTR es:[edi],dx
  419c96:	mov    ecx,0x8460e152
  419c9b:	push   ebx
  419c9c:	cmc    
  419c9d:	dec    ebp
  419c9f:	(bad)  
  419ca0:	aad    0x71
  419ca2:	mov    es,WORD PTR [ebx-0x19]
  419ca5:	jo     0x419d21
  419ca7:	jae    0x419ce0
  419ca9:	dec    esi
  419caa:	test   BYTE PTR [eax],bh
  419cac:	idiv   bh
  419cae:	int    0x0
	...
  419cbc:	add    BYTE PTR [eax],al
  419cbe:	rol    WORD PTR [eax+0x2c],0x3e
  419cc3:	loop   0x419d15
  419cc5:	pop    ebp
  419cc6:	adc    eax,0x1e466deb
  419ccb:	jb     0x419cca
  419ccd:	add    BYTE PTR [ecx-0x4c87bef7],al
  419cd3:	jne    0x419d22
  419cd5:	jb     0x419c7c
  419cd7:	push   0x62
  419cd9:	jae    0x419d14
  419cdb:	or     DWORD PTR [ebp+0x71642902],ebp
  419ce1:	push   ebp
  419ce2:	push   esp
  419ce3:	popa   
  419ce4:	pop    esi
  419ce5:	outs   dx,BYTE PTR ds:[esi]
  419ce6:	outs   dx,BYTE PTR ds:[esi]
  419ce7:	pop    ebp
  419ce8:	bound  esp,QWORD PTR [edi+edi*2+0x71]
  419cec:	pusha  
  419ced:	gs retf 0x6661
  419cf1:	outs   dx,DWORD PTR ds:[esi]
  419cf2:	push   esp
  419cf3:	inc    edi
  419cf4:	data16 ins BYTE PTR es:[edi],dx
  419cf6:	mov    esi,0x61006f64
  419cfb:	outs   dx,DWORD PTR fs:[esi]
  419cfd:	outs   dx,BYTE PTR ds:[esi]
  419cfe:	lahf   
  419cff:	imul   esi,DWORD PTR [eax],0x69655432
  419d05:	ins    BYTE PTR es:[edi],dx
  419d06:	mov    al,BYTE PTR ds:0x77c90087
  419d0c:	bound  esp,QWORD PTR [ecx-0x32]
  419d0f:	fs push eax
  419d11:	je     0x419cdb
  419d13:	fs pop esi
  419d15:	ins    DWORD PTR es:[edi],dx
  419d16:	lds    ebx,FWORD PTR [ebx+0x45]
  419d19:	inc    edi
  419d1a:	mov    dh,0x5e
  419d1c:	pop    edi
  419d1d:	popa   
  419d1e:	(bad)  
  419d1f:	add    eax,0x93
	...
  419d30:	add    BYTE PTR [ebp+0xd487164],bh
  419d36:	imul   ebp,DWORD PTR [edx+eiz*2-0x15],0xf5724368
  419d3e:	pop    ebp
  419d3f:	push   eax
  419d40:	je     0x419d0a
  419d42:	gs pop esi
  419d44:	ins    DWORD PTR es:[edi],dx
  419d45:	dec    edx
  419d46:	add    eax,0x5c09000e
  419d4b:	inc    eax
  419d4c:	jb     0x419ced
  419d4e:	push   0x71
  419d50:	gs jge 0x419dc9
  419d53:	data16 arpl WORD PTR fs:[esi+0x1],bx
  419d58:	pusha  
  419d59:	arpl   WORD PTR [ebx],bx
  419d5b:	jmp    0xed6d1fb3
  419d60:	dec    edx
  419d61:	jle    0x419d24
  419d63:	shl    DWORD PTR [ecx-0x7a],0xc1
  419d67:	add    ecx,DWORD PTR ds:0x40e91b63
  419d6d:	jno    0x419d70
  419d6f:	jecxz  0x419de4
  419d71:	jle    0x419da8
  419d73:	jmp    0x3e60:0xe9fd5770
  419d7a:	pop    esi
  419d7b:	add    ecx,esi
  419d7d:	arpl   WORD PTR [edi],si
  419d7f:	call   0xeb41b7e6
  419d84:	jae    0x419dd0
  419d86:	std    
  419d87:	out    0x66,eax
  419d89:	cmp    DWORD PTR [ecx],ecx
  419d8b:	add    al,0x6d
  419d8d:	aas    
  419d8e:	inc    ecx
  419d8f:	xor    dh,BYTE PTR ss:[ebp+0x4a]
  419d93:	in     eax,0x6b
	...
  419da1:	add    BYTE PTR [eax],al
  419da3:	add    BYTE PTR [ebx+0x59],ah
  419da6:	add    esi,DWORD PTR [ebp+0x10]
  419da9:	dec    esi
  419daa:	repz data16 std 
  419dad:	mov    cl,0xdf
  419daf:	arpl   WORD PTR ds:[ecx+0x6af162f6],di
  419db6:	xor    ebp,DWORD PTR [esi]
  419db8:	push   DWORD PTR [ecx+0x2e6cffe5]
  419dbe:	add    al,0x52
  419dc0:	inc    BYTE PTR [esi-0x77399036]
  419dc6:	into   
  419dc7:	(bad)  
  419dc8:	fisubr DWORD PTR [ecx+0x24633ef9]
  419dce:	add    al,0x52
  419dd0:	mov    esi,0xc672d487
  419dd5:	in     al,dx
  419dd6:	sti    
  419dd7:	push   ebp
  419dd8:	ret    0xeff2
  419ddb:	bound  esp,QWORD PTR [esi+0x24c35f05]
  419de1:	jo     0x419d79
  419de3:	add    esi,DWORD PTR [ecx-0x773ab216]
  419de9:	loopne 0x419e44
  419deb:	fistp  WORD PTR [ebx+0x16043fea]
  419df1:	push   es
  419df2:	sbb    edi,ebx
  419df4:	xchg   eax,eax
  419df6:	fild   WORD PTR ss:[esi+0x2dfb43bc]
  419dfd:	add    eax,0xea9103ab
  419e02:	add    eax,0x3fa4ebf
  419e07:	int    0x0
	...
  419e15:	add    BYTE PTR [eax],al
  419e17:	inc    ecx
  419e18:	out    dx,al
  419e19:	and    edi,esp
  419e1b:	lea    eax,ds:0xea310341
  419e21:	add    eax,0x7ea32c5
  419e26:	lock inc ecx
  419e28:	mov    esp,0x56dfb03
  419e2d:	dec    esi
  419e2e:	add    edx,DWORD PTR [ecx]
  419e30:	jmp    0xe2bc:0xf901d4c5
  419e37:	or     dl,bh
  419e39:	ret    
  419e3a:	mov    esi,0x3e6c614
  419e3f:	sahf   
  419e40:	add    eax,0xca07de99
  419e45:	(bad)  
  419e46:	out    dx,al
  419e47:	or     edi,edx
  419e49:	(bad)  
  419e4a:	out    0xf1,eax
  419e4c:	jmp    0x5d6a1f8
  419e51:	mov    ecx,0x96bec7de
  419e56:	faddp  st(6),st
  419e58:	ret    0xf593
  419e5b:	shr    al,cl
  419e5d:	xchg   esp,eax
  419e5e:	out    dx,eax
  419e5f:	mov    cl,0xf2
  419e61:	xor    ebp,0x3c
  419e64:	outs   dx,DWORD PTR ds:[esi]
  419e65:	add    dl,dl
  419e67:	popa   
  419e68:	enter  0x7562,0x1d
  419e6c:	mul    BYTE PTR [edx+0x5b]
  419e6f:	sbb    eax,edx
  419e71:	push   0x44
  419e73:	and    BYTE PTR [edi-0x3],ch
  419e76:	dec    eax
  419e77:	add    edi,ecx
  419e79:	pop    esi
  419e7a:	pop    ecx
	...
  419e87:	add    BYTE PTR [eax],al
  419e89:	add    al,bh
  419e8b:	xor    eax,0xdb031732
  419e90:	imul   ebp,ecx,0x60
  419e93:	push   esi
  419e94:	add    BYTE PTR [edx],bl
  419e96:	pop    es
  419e97:	in     al,0x6b
  419e99:	cmp    eax,0xa62f6ac
  419e9e:	hlt    
  419e9f:	repnz bound ebp,QWORD PTR [eax]
  419ea2:	addr16 hlt 
  419ea4:	addr16 or al,0xcb
  419ea7:	fidiv  DWORD PTR [eax]
  419ea9:	fstp   TBYTE PTR [edx-0x17]
  419eac:	imul   edx,DWORD PTR ds:0x2ffff65f,0xffffffc9
  419eb3:	repnz (bad) 
  419eb5:	sti    
  419eb6:	retf   0x73e3
  419eb9:	sub    dh,BYTE PTR [ebp-0x6a2d9f31]
  419ebf:	hlt    
  419ec0:	imul   ebp,DWORD PTR [eax-0x600013a0],0xffffff8a
  419ec7:	repnz (bad) 
  419ec9:	fstp   TBYTE PTR [edx-0x1d]
  419ecc:	jae    0x419e78
  419ece:	mov    fs,ebx
  419ed0:	pop    esi
  419ed1:	mov    ch,0x9d
  419ed3:	shl    DWORD PTR [ecx-0x3b],cl
  419ed6:	mov    eax,ds:0x79b6fd6e
  419edb:	loopne 0x419f43
  419edd:	xchg   edi,eax
  419ede:	test   edx,esi
  419ee0:	sub    eax,0xffda4485
  419ee5:	jecxz  0x419f48
  419ee7:	aam    0x73
  419ee9:	fwait
  419eea:	aaa    
  419eeb:	bnd jno 0x419eee
	...
  419efa:	add    BYTE PTR [eax],al
  419efc:	add    BYTE PTR [ebx],dl
  419efe:	inc    ebx
  419eff:	std    
  419f00:	dec    DWORD PTR [edx+0x3]
  419f03:	dec    edi
  419f04:	je     0x419ebe
  419f06:	pop    eax
  419f07:	inc    eax
  419f08:	push   0x3e3ba8
  419f0d:	or     DWORD PTR es:[edi+0x74],ecx
  419f11:	mov    eax,0x9c496c55
  419f16:	jne    0x419f56
  419f18:	add    BYTE PTR [esi],ch
  419f1a:	or     DWORD PTR [edi+0x74],ecx
  419f1d:	dec    eax
  419f1e:	push   edx
  419f1f:	jno    0x419f93
  419f21:	dec    ebx
  419f22:	or     edx,ebp
  419f24:	add    BYTE PTR [ecx+0x75],bl
  419f27:	outs   dx,DWORD PTR ds:[esi]
  419f28:	inc    ebx
  419f29:	das    
  419f2a:	jns    0x419f77
  419f2c:	dec    ecx
  419f2d:	cmp    ecx,DWORD PTR [ecx]
  419f2f:	push   cs
  419f30:	add    DWORD PTR [ecx+0x76536f75],ebx
  419f36:	jae    0x419f7e
  419f38:	push   edi
  419f39:	mov    edx,0x6e686f01
  419f3e:	pop    esi
  419f3f:	pop    esi
  419f40:	jo     0x419f95
  419f42:	daa    
  419f43:	fs ins BYTE PTR es:[edi],dx
  419f45:	pop    esi
  419f46:	or     DWORD PTR [esi],esi
  419f48:	add    BYTE PTR [ebx+0x67],ah
  419f4b:	bound  esi,QWORD PTR [ebp+ebx*4+0x68]
  419f4f:	popa   
  419f50:	fs mov eax,0xa5002a01
  419f56:	fs jno 0x419fc1
  419f59:	int    0x72
  419f5b:	jno    0x419fbf
  419f5d:	mov    ds:0x6d5e67,eax
	...
  419f6e:	add    BYTE PTR [eax],al
  419f70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f71:	add    DWORD PTR [ebp+0x0],eax
  419f74:	mov    ecx,0xa76b6066
  419f79:	pop    ebp
  419f7a:	std    
  419f7b:	call   DWORD PTR [ebp-0x1390a0ff]
  419f81:	bound  esp,QWORD PTR [edx+0x63]
  419f84:	arpl   WORD PTR [edx+0x7f632601],cx
  419f8a:	in     eax,0x6c
  419f8c:	sar    BYTE PTR [ecx-0xe],1
  419f8f:	ins    BYTE PTR es:[edi],dx
  419f90:	rcl    BYTE PTR [edi-0x659c8c20],0x1
  419f97:	jno    0x419f5f
  419f99:	in     al,dx
  419f9a:	fdiv   st(7),st
  419f9c:	and    al,0x20
  419f9e:	add    al,0x71
  419fa0:	xchg   BYTE PTR [edx+0x5e8f60de],bh
  419fa6:	add    DWORD PTR [esi],edi
  419fa8:	arpl   ax,dx
  419faa:	fisub  WORD PTR [eax-0x73]
  419fad:	pop    esi
  419fae:	add    DWORD PTR [ebp+0x63],eax
  419fb1:	das    
  419fb2:	fbstp  TBYTE PTR [ebx+0x70]
  419fb5:	ret    
  419fb6:	loopne 0x41a020
  419fb8:	jl     0x419fe8
  419fba:	lock jmp esp
  419fbd:	cmp    eax,0x1d305501
  419fc2:	shl    DWORD PTR [ebx+0x42],1
  419fc5:	adc    al,dh
  419fc7:	jb     0x41a01c
  419fc9:	pop    esi
  419fca:	add    DWORD PTR [ebp+0x50],esi
  419fcd:	adc    esp,ecx
  419fcf:	push   0x6423b070
	...
  419fe0:	add    BYTE PTR [eax],al
  419fe2:	add    BYTE PTR [edi+0x2],al
  419fe5:	add    al,0x4b
  419fe7:	arpl   WORD PTR [edx],cx
  419fe9:	in     eax,0x5e
  419feb:	aas    
  419fec:	test   eax,0xae1162f2
  419ff1:	out    dx,eax
  419ff2:	ins    BYTE PTR es:[edi],dx
  419ff3:	std    
  419ff4:	inc    esp
  419ff5:	in     eax,0x62
  419ff7:	and    bl,BYTE PTR [esi+0x1]
  419ffa:	pop    edi
  419ffb:	arpl   WORD PTR [ecx+0x3d0c6be3],cx
  41a001:	fst    QWORD PTR [edx-0x10]
  41a004:	cmp    bh,ch
  41a006:	dec    edi
  41a007:	icebp  
  41a008:	stos   BYTE PTR es:[edi],al
  41a009:	(bad)  [esi-0x9]
  41a00c:	add    al,0x8c
  41a00e:	add    edx,eax
  41a010:	clc    
  41a011:	xor    ecx,0xffffffc1
  41a014:	fistp  DWORD PTR [ebp+eiz*1+0x37ad9c7]
  41a01b:	arpl   WORD PTR ds:0x56303e7,ax
  41a021:	out    0x3,eax
  41a023:	arpl   WORD PTR ds:0x56303e7,ax
  41a029:	out    0x3,eax
  41a02b:	arpl   WORD PTR ds:0x56303e7,ax
  41a031:	out    0x3,eax
  41a033:	arpl   WORD PTR ds:0x56303e7,ax
  41a039:	out    0x3,eax
  41a03b:	arpl   WORD PTR ds:0x56303e7,ax
  41a041:	out    0x3,eax
  41a043:	arpl   WORD PTR ds:0x3e7,ax
	...
  41a055:	add    BYTE PTR [ebx+0x5],ah
  41a058:	out    0x3,eax
  41a05a:	arpl   WORD PTR ds:0x56303e7,ax
  41a060:	out    0x3,eax
  41a062:	arpl   WORD PTR ds:0x56303e7,ax
  41a068:	out    0x3,eax
  41a06a:	arpl   WORD PTR ds:0x56303e7,ax
  41a070:	out    0x3,eax
  41a072:	arpl   WORD PTR ds:0x56303e7,ax
  41a078:	out    0x3,eax
  41a07a:	arpl   WORD PTR ds:0x56303e7,ax
  41a080:	out    0x3,eax
  41a082:	arpl   WORD PTR ds:0x56303e7,ax
  41a088:	out    0x3,eax
  41a08a:	arpl   WORD PTR ds:0x56303e7,ax
  41a090:	out    0x3,eax
  41a092:	arpl   WORD PTR ds:0x560e900,ax
  41a098:	add    cl,ch
  41a09a:	pusha  
  41a09b:	add    eax,0x560e900
  41a0a0:	add    cl,ch
  41a0a2:	pusha  
  41a0a3:	add    eax,0x560e900
  41a0a8:	add    cl,ch
  41a0aa:	pusha  
  41a0ab:	add    eax,0x560e900
  41a0b0:	add    cl,ch
  41a0b2:	pusha  
  41a0b3:	add    eax,0x560e900
  41a0b8:	add    cl,ch
	...
  41a0c6:	add    BYTE PTR [eax],al
  41a0c8:	add    BYTE PTR [eax+0x5],ah
  41a0cb:	add    cl,ch
  41a0cd:	pusha  
  41a0ce:	add    eax,0x560e900
  41a0d3:	add    cl,ch
  41a0d5:	pusha  
  41a0d6:	add    eax,0x560e900
  41a0db:	add    cl,ch
  41a0dd:	pusha  
  41a0de:	add    eax,0x560e900
  41a0e3:	add    cl,ch
  41a0e5:	pusha  
  41a0e6:	add    eax,0x560e900
  41a0eb:	add    cl,ch
  41a0ed:	pusha  
  41a0ee:	add    eax,0x560e900
  41a0f3:	add    cl,ch
  41a0f5:	pusha  
  41a0f6:	add    eax,0x560e900
  41a0fb:	add    cl,ch
  41a0fd:	pusha  
  41a0fe:	add    eax,0x560e900
  41a103:	add    cl,ch
  41a105:	pusha  
  41a106:	add    eax,0x560e900
  41a10b:	add    cl,ch
  41a10d:	pusha  
  41a10e:	add    eax,0x560e900
  41a113:	add    cl,ch
  41a115:	pusha  
  41a116:	add    eax,0x560e900
  41a11b:	add    BYTE PTR [eax],al
  41a11d:	mov    al,BYTE PTR [esi]
  41a11f:	add    BYTE PTR [eax],al
  41a121:	mov    al,BYTE PTR [esi]
  41a123:	add    BYTE PTR [eax],al
  41a125:	jp     0x41a12d
  41a127:	add    BYTE PTR [eax],al
  41a129:	jp     0x41a131
	...
  41a13b:	add    BYTE PTR [edx+0x6],cl
  41a13e:	add    BYTE PTR [eax],al
  41a140:	dec    edx
  41a141:	push   es
  41a142:	add    BYTE PTR [eax],al
  41a144:	pop    ds
  41a145:	cmp    esp,ecx
  41a147:	int3   
  41a148:	pop    ss
  41a149:	cmp    esp,ecx
  41a14b:	int3   
  41a14c:	xchg   esi,eax
  41a14d:	jle    0x41a13b
  41a14f:	push   ecx
  41a150:	call   0x5bcba914
  41a155:	jge    0x41a1a2
  41a157:	(bad)  
  41a158:	fcomp  DWORD PTR [edi+0x5b]
  41a15b:	ret    
  41a15c:	mov    dh,0x7e
  41a15e:	in     al,dx
  41a15f:	push   ecx
  41a160:	lods   eax,DWORD PTR ds:[esi]
  41a161:	shl    BYTE PTR [eax],cl
  41a163:	leave  
  41a164:	xchg   DWORD PTR [esi+0x6f],edi
  41a167:	xor    al,bl
  41a169:	repnz or ecx,DWORD PTR [ebx+0x46890975]
  41a170:	imul   edi,DWORD PTR [ebx+eax*2-0x4],0xffffffd8
  41a175:	jmp    0x6b3d:0x852d8b1f
  41a17c:	push   edi
  41a17d:	add    al,BYTE PTR [eax+0x1f1283f]
  41a183:	jmp    0x41a13f
  41a185:	leave  
  41a186:	pop    ebp
  41a187:	mov    edi,DWORD PTR [esi+0x16ccc0c7]
  41a18d:	jle    0x41a17b
  41a18f:	add    edi,0x20
  41a192:	mov    DWORD PTR [ebp+0x5b],eax
  41a195:	jl     0x41a1da
  41a197:	loopne 0x41a171
  41a199:	mov    bh,0xdf
  41a19b:	mov    esi,DWORD PTR [esi]
  41a19d:	add    DWORD PTR gs:[ecx+0x0],edx
	...
  41a1ad:	add    BYTE PTR [eax],al
  41a1af:	push   edi
  41a1b0:	jl     0x41a205
  41a1b2:	in     al,0xd8
  41a1b4:	mov    edi,0xed1b8be3
  41a1b9:	add    BYTE PTR [ebp+0x6b],cl
  41a1bc:	jl     0x41a209
  41a1be:	clc    
  41a1bf:	call   0x21cd9993
  41a1c4:	and    DWORD PTR [ecx],eax
  41a1c6:	inc    ebp
  41a1c7:	pop    ebx
  41a1c8:	jl     0x41a20d
  41a1ca:	call   0x8c395cb7
  41a1cf:	mov    dl,0x25
  41a1d1:	add    DWORD PTR [ebp+0x5b],edx
  41a1d4:	jle    0x41a229
  41a1d6:	lock fadd st,st(2)
  41a1d9:	test   DWORD PTR [ebx+0x4d0109ab],0xfc4b7e6b
  41a1e3:	and    al,0xc3
  41a1e5:	repz add BYTE PTR [ebx+0x5],ah
  41a1e9:	add    bl,ch
  41a1eb:	push   0x7c
  41a1ed:	push   ebx
  41a1ee:	hlt    
  41a1ef:	loopne 0x41a234
  41a1f1:	dec    DWORD PTR [eax+0x458971b6]
  41a1f7:	or     edi,DWORD PTR [ebp+0x4b]
  41a1fa:	hlt    
  41a1fb:	cmp    BYTE PTR [ebp+0x7cab7317],bh
  41a201:	push   ebx
  41a202:	lock fadd DWORD PTR [ebx]
  41a205:	add    DWORD PTR [ebp+0x5b],eax
  41a208:	jle    0x41a24d
  41a20a:	fmul   QWORD PTR [ecx-0x9]
  41a20d:	lods   al,BYTE PTR ds:[si]
  41a20f:	popa   
  41a210:	(bad)  
	...
  41a21f:	add    BYTE PTR [eax],al
  41a221:	add    BYTE PTR [esi],bl
  41a223:	dec    ecx
  41a224:	dec    edi
  41a225:	call   0x41a85d
  41a22a:	loopne 0x41a26d
  41a22c:	or     al,0x85
  41a22e:	mov    ds:0x168b18f2,eax
  41a233:	jno    0x41a1be
  41a235:	inc    ebp
  41a236:	mov    ebx,0x330cb4f8
  41a23b:	jle    0x41a288
  41a23d:	in     al,dx
  41a23e:	call   0x26cd8e15
  41a243:	imul   ecx,DWORD PTR [ecx+0x4304f304],0x88fa8808
  41a24d:	dec    ebp
  41a24e:	jae    0x41a1d4
  41a250:	mov    edi,0xefbada04
  41a255:	jmp    0x41a216
  41a257:	xor    al,0xc0
  41a259:	mov    eax,DWORD PTR [esi-0x36]
  41a25c:	ror    ah,0x27
  41a25f:	cmp    esp,ecx
  41a261:	int3   
  41a262:	pop    ds
  41a263:	cmp    esp,ecx
  41a265:	int3   
  41a266:	pop    ss
  41a267:	cmp    esp,ecx
  41a269:	int3   
  41a26a:	xchg   esi,eax
  41a26b:	jl     0x41a259
  41a26d:	add    DWORD PTR [edi+0xd],0xffffffe8
  41a271:	add    eax,0x89fd682c
  41a276:	sahf   
  41a277:	pop    ebp
  41a278:	mov    DWORD PTR [ebp+0xb],eax
  41a27b:	aad    0xe7
  41a27d:	sub    DWORD PTR [eax+ebp*2],edx
  41a280:	std    
  41a281:	and    DWORD PTR [edi],0x1
  41a284:	mov    eax,ds:0xb4
	...
  41a295:	scas   al,BYTE PTR es:[edi]
  41a296:	(bad)  
  41a297:	jmp    DWORD PTR [edi-0x41]
  41a29a:	add    al,BYTE PTR [eax+0x0]
  41a29d:	call   0xec938a5b
  41a2a2:	adc    DWORD PTR [ebp+edx*2-0x475efa5e],esi
  41a2a9:	ss (bad) 
  41a2ab:	jmp    FWORD PTR [ecx+0x63]
  41a2ae:	(bad)  
  41a2b0:	addr16 lahf 
  41a2b2:	add    al,BYTE PTR [eax+0x0]
  41a2b5:	les    edx,FWORD PTR [ecx]
  41a2b7:	mov    eax,0x87052255
  41a2bc:	inc    ebp
  41a2bd:	retf   
  41a2be:	aas    
  41a2bf:	inc    ebx
  41a2c0:	cld    
  41a2c1:	arpl   WORD PTR ds:0xfdb80000,ax
  41a2c7:	mov    BYTE PTR [ebp-0x61],dl
  41a2ca:	add    edx,0x1
  41a2cd:	jmp    0x869:0xe83fbd1
  41a2d4:	jae    0x41a318
  41a2d6:	jl     0x41a31b
  41a2d8:	cld    
  41a2d9:	call   0x61ce25d6
  41a2de:	vmovmskps ebx,ymm0
  41a2e2:	shl    edi,1
  41a2e4:	push   edx
  41a2e5:	adc    DWORD PTR fs:[ebp+edx*2+0x4d8905a2],esi
  41a2ed:	push   edi
  41a2ee:	jge    0x41a2f4
  41a2f0:	lea    edx,[edi]
  41a2f2:	sar    DWORD PTR [esi],1
  41a2f4:	add    BYTE PTR [eax],bh
  41a2f6:	push   esi
  41a2f7:	mov    ebp,esp
	...
  41a305:	add    BYTE PTR [eax],al
  41a307:	add    BYTE PTR [esi+0x27cccc42],bl
  41a30d:	cmp    cl,ah
  41a30f:	int3   
  41a310:	pop    ds
  41a311:	cmp    cl,ah
  41a313:	int3   
  41a314:	pop    ss
  41a315:	cmp    cl,ah
  41a317:	int3   
  41a318:	mov    dh,0x7a
  41a31a:	in     al,dx
  41a31b:	mov    eax,ds:0x3ecf73
  41a320:	dec    ebp
  41a321:	jp     0x41a363
  41a323:	xor    al,bl
  41a325:	mov    eax,0xbdea3e07
  41a32a:	pop    es
  41a32b:	pop    ebp
  41a32c:	and    BYTE PTR [edx],bh
  41a32e:	int3   
  41a32f:	int3   
  41a330:	pop    ds
  41a331:	cmp    cl,ah
  41a333:	int3   
  41a334:	pop    ss
  41a335:	cmp    cl,ah
  41a337:	int3   
  41a338:	ss jp  0x41a327
  41a33b:	mov    ebx,DWORD PTR [esi]
  41a33d:	stc    
  41a33e:	dec    edi
  41a33f:	mov    ebx,DWORD PTR [esi]
  41a341:	std    
  41a342:	dec    esi
  41a343:	jmp    FWORD PTR [esi-0x4f]
  41a346:	push   ebx
  41a347:	inc    ecx
  41a348:	arpl   ax,cx
  41a34a:	ror    ah,0xa7
  41a34d:	cmp    esp,ecx
  41a34f:	int3   
  41a350:	lahf   
  41a351:	cmp    esp,ecx
  41a353:	int3   
  41a354:	xchg   edi,eax
  41a355:	cmp    esp,ecx
  41a357:	int3   
  41a358:	ss jp  0x41a347
  41a35b:	add    DWORD PTR [edi-0x6ff9603],0x4
  41a362:	push   0xffc561dc
  41a367:	(bad)  
  41a368:	push   esi
  41a369:	lods   eax,DWORD PTR ds:[esi]
  41a36a:	push   ebx
  41a36b:	inc    ecx
	...
  41a378:	add    BYTE PTR [eax],al
  41a37a:	add    BYTE PTR [ebx+0x7c],ah
  41a37d:	inc    ebx
  41a37e:	clc    
  41a37f:	sti    
  41a380:	pop    esp
  41a381:	add    al,BYTE PTR [eax+0x63]
  41a384:	jp     0x41a3c9
  41a386:	clc    
  41a387:	mov    bl,0x5d
  41a389:	mov    edx,0x816654ff
  41a38e:	les    ebx,FWORD PTR [ebx+0x7c]
  41a391:	inc    ebx
  41a392:	cld    
  41a393:	fdiv   DWORD PTR [edi-0x3017aef1]
  41a399:	or     edx,DWORD PTR [edx-0x18]
  41a39c:	mov    edi,0xd02c5007
  41a3a1:	sti    
  41a3a2:	mov    edi,DWORD PTR [esi]
  41a3a4:	enter  0xccc0,0xb6
  41a3a8:	jp     0x41a396
  41a3aa:	push   ecx
  41a3ab:	sbb    al,0xc0
  41a3ad:	sti    
  41a3ae:	add    BYTE PTR [ebx+0x5],ah
  41a3b1:	add    bl,ch
  41a3b3:	pop    edx
  41a3b4:	jp     0x41a3f9
  41a3b6:	cld    
  41a3b7:	loopne 0x41a3fd
  41a3b9:	dec    DWORD PTR [eax+0x4d89699e]
  41a3bf:	out    dx,eax
  41a3c0:	sub    DWORD PTR [ebx+0x10],ecx
  41a3c3:	jo     0x41a3cb
  41a3c5:	mov    DWORD PTR [ebp+0x6b],edx
  41a3c8:	add    dl,BYTE PTR [ebx-0x4]
  41a3cb:	fs scas eax,DWORD PTR es:[edi]
  41a3cd:	add    cl,BYTE PTR [ebx+0x4d00f91e]
  41a3d3:	(bad)  
  41a3d4:	cmc    
  41a3d5:	mov    ch,0x11
  41a3d7:	js     0x41a41c
  41a3d9:	je     0x41a3e2
  41a3db:	sti    
  41a3dc:	add    eax,DWORD PTR [eax]
	...
  41a3ee:	arpl   WORD PTR [edx+0x4],bx
  41a3f1:	jmp    0x41a386
  41a3f3:	xor    eax,eax
  41a3f5:	mov    eax,DWORD PTR [esi-0x58333f39]
  41a3fb:	cmp    ah,cl
  41a3fd:	int3   
  41a3fe:	lahf   
  41a3ff:	cmp    ah,cl
  41a401:	int3   
  41a402:	xchg   edi,eax
  41a403:	cmp    ah,cl
  41a405:	int3   
  41a406:	push   ss
  41a407:	jp     0x41a3f5
  41a409:	mov    ecx,0x55b
  41a40e:	pop    es
  41a40f:	jp     0x41a418
  41a411:	mov    DWORD PTR [esi+0x15],edx
  41a414:	push   esi
  41a415:	inc    ecx
  41a416:	arpl   dx,ax
  41a418:	ror    ah,0x27
  41a41b:	push   edx
  41a41c:	int3   
  41a41d:	int3   
  41a41e:	pop    ds
  41a41f:	push   edx
  41a420:	int3   
  41a421:	int3   
  41a422:	pop    ss
  41a423:	push   edx
  41a424:	int3   
  41a425:	int3   
  41a426:	xchg   esi,eax
  41a427:	nop
  41a428:	in     al,dx
  41a429:	add    DWORD PTR [edi-0xa],0xffffff88
  41a42d:	inc    ebp
  41a42e:	pop    ebx
  41a42f:	mov    BYTE PTR [eax+0x4],bh
  41a432:	arpl   WORD PTR [esp+eax*4],dx
  41a435:	mov    BYTE PTR [ebx+0x5],ah
  41a438:	add    BYTE PTR [ebx+0x51890da6],cl
  41a43e:	addr16 mov dl,ch
  41a441:	or     BYTE PTR [edx],dh
  41a443:	jo     0x41a3cc
  41a445:	push   ebp
  41a446:	not    DWORD PTR [eax+0x45e00843]
  41a44c:	or     BYTE PTR [ecx+0x45c555a6],cl
	...
  41a45e:	add    BYTE PTR [eax],al
  41a460:	add    bh,ah
  41a462:	add    eax,0x70630000
  41a467:	pop    es
  41a468:	mov    esp,DWORD PTR [esi]
  41a46a:	popa   
  41a46b:	add    ecx,0xfc4b8e62
  41a471:	fdivr  DWORD PTR [edx+0x59163bfb]
  41a477:	jno    0x41a4bf
  41a479:	call   0x1ecda048
  41a47e:	push   ebp
  41a47f:	or     eax,0xbec64fb7
  41a484:	cli    
  41a485:	outs   dx,DWORD PTR ds:[esi]
  41a486:	mov    dl,bh
  41a488:	add    ecx,DWORD PTR [esi]
  41a48a:	pop    ss
  41a48b:	mov    DWORD PTR [ebp-0x71],eax
  41a48e:	nop
  41a48f:	dec    ebx
  41a490:	lock push esp
  41a492:	pushf  
  41a493:	adc    al,0x41
  41a495:	loop   0x41a4fe
  41a497:	std    
  41a498:	packsswb mm0,QWORD PTR ds:0x906b5587
  41a49f:	inc    ebx
  41a4a0:	or     al,bl
  41a4a2:	ror    BYTE PTR [ebx],cl
  41a4a4:	add    ebp,DWORD PTR [ebx-0x70]
  41a4a7:	push   ebx
  41a4a8:	clc    
  41a4a9:	call   0xa644b3b6
  41a4ae:	cmc    
  41a4af:	mov    BYTE PTR [ebp+0x5b],cl
  41a4b2:	nop
  41a4b3:	push   ebx
  41a4b4:	or     al,0x60
  41a4b6:	test   BYTE PTR [eax+0x48e3b4d],0xa
  41a4bd:	cmp    BYTE PTR [esi-0x6fa4aa77],ch
  41a4c3:	inc    ebx
  41a4c4:	or     BYTE PTR [eax],al
	...
  41a4d2:	add    BYTE PTR [eax],al
  41a4d4:	pusha  
  41a4d5:	mov    DWORD PTR [ebx],0xe70d9e89
  41a4db:	imul   ecx,DWORD PTR [esp+eiz*2],0xfffffffd
  41a4df:	mov    edi,esi
  41a4e1:	rol    eax,0xcc
  41a4e4:	xchg   esi,eax
  41a4e5:	nop
  41a4e6:	in     al,dx
  41a4e7:	add    DWORD PTR [edi],0x29
  41a4ea:	mov    DWORD PTR [ebp+0x5b],eax
  41a4ed:	mov    es,WORD PTR [ebx-0x1c]
  41a4f0:	fcom   st(1)
  41a4f2:	jecxz  0x41a47f
  41a4f4:	imul   eax,DWORD PTR ss:[ecx],0x538e9751
  41a4fb:	call   0x8c296ed8
  41a500:	fild   DWORD PTR [eax+eax*1+0x4b8e6300]
  41a507:	lock loopne 0x41a4eb
  41a50a:	out    dx,eax
  41a50b:	add    BYTE PTR [ecx+ecx*4-0x7],bl
  41a50f:	add    BYTE PTR [ebx+0x5],ah
  41a512:	mov    DWORD PTR [ebp+0x6b],edx
  41a515:	or     BYTE PTR [ebx-0x10],dl
  41a518:	jmp    0x8165:0x268bdfb9
  41a51f:	js     0x41a594
  41a521:	add    eax,0x486840d
  41a526:	add    BYTE PTR [eax],al
  41a528:	or     DWORD PTR ds:0xd1d8006a,eax
  41a52e:	fisttp WORD PTR [ebx+0x51010d0e]
  41a534:	outs   dx,DWORD PTR ds:[esi]
  41a535:	mov    bh,0xfc
  41a537:	adc    eax,0x0
	...
  41a544:	add    BYTE PTR [eax],al
  41a546:	add    BYTE PTR [ebx],bl
  41a548:	mov    ecx,0xc8da003e
  41a54d:	sti    
  41a54e:	mov    ebx,DWORD PTR [esi+0x63388165]
  41a554:	fst    DWORD PTR [esi]
  41a556:	mov    esp,DWORD PTR [esi+0x5b558965]
  41a55c:	push   es
  41a55d:	jns    0x45cb16f1
  41a563:	add    ecx,DWORD PTR [edi-0x329ff7b5]
  41a569:	jns    0x182aff0d
  41a56f:	fdivr  DWORD PTR [eax+0xda68bdf]
  41a575:	add    DWORD PTR [edx+0x53],eax
  41a578:	mov    WORD PTR [ebx-0xc],es
  41a57b:	fcom   st(0)
  41a57d:	fisttp WORD PTR [ebx+0x11010d8e]
  41a583:	jmp    0x5d:0x1ec7ebb8
  41a58a:	add    BYTE PTR [ebx+0x5],ah
  41a58d:	mov    DWORD PTR [ebp-0x3d],eax
  41a590:	xchg   BYTE PTR [eax+0x10],bh
  41a593:	arpl   cx,bx
  41a595:	or     al,0x8b
  41a597:	es cmp DWORD PTR gs:[ecx],0xc704d963
  41a59f:	push   ds
  41a5a0:	pop    ebp
  41a5a1:	(bad)  
  41a5a2:	jmp    DWORD PTR [ebx+0x5]
  41a5a5:	mov    DWORD PTR [ebp-0x71],edx
  41a5a8:	xchg   BYTE PTR [edx],bh
	...
  41a5ba:	pop    ss
  41a5bb:	in     al,0x88
  41a5bd:	inc    ebp
  41a5be:	(bad)  
  41a5bf:	mov    cs,WORD PTR [eax]
  41a5c1:	add    DWORD PTR [edx-0x1cfffffb],0x168b1bd9
  41a5cb:	pop    ecx
  41a5cc:	mov    DWORD PTR [edx],eax
  41a5ce:	ds (bad) 
  41a5d0:	std    
  41a5d1:	(bad)  
  41a5d2:	fdiv   QWORD PTR [ebp-0x4ba8b278]
  41a5d8:	out    0xb5,eax
  41a5da:	dec    esi
  41a5db:	(bad)  
  41a5dc:	std    
  41a5dd:	sbb    DWORD PTR [edi],0xd
  41a5e0:	xchg   DWORD PTR [ebp+0x1f],eax
  41a5e3:	outs   dx,BYTE PTR ds:[esi]
  41a5e4:	sbb    al,0x8b
  41a5e6:	mov    ds,WORD PTR [ecx-0x77]
  41a5e9:	add    bl,al
  41a5eb:	iret   
  41a5ec:	pop    es
  41a5ed:	lea    ecx,[edi-0x17adfdf3]
  41a5f3:	(bad)  
  41a5f4:	sti    
  41a5f5:	push   eax
  41a5f6:	or     edi,DWORD PTR [edx-0x5]
  41a5f9:	dec    DWORD PTR [esi+eax*4]
  41a5fc:	les    ecx,FWORD PTR [eax]
  41a5fe:	fcmovb st,st(7)
  41a600:	fisttp DWORD PTR [ebx+0x558959ae]
  41a606:	pop    ss
  41a607:	mov    WORD PTR [edi],cs
  41a609:	mov    esp,DWORD PTR [esi+0x5fc08159]
  41a60f:	mov    WORD PTR [ebx-0xc],es
  41a612:	call   0xa2c591e6
  41a617:	or     BYTE PTR [edi-0x6a9240b3],al
  41a61d:	mov    eax,DWORD PTR [eax]
	...
  41a62b:	add    BYTE PTR [eax],al
  41a62d:	cs gs add edx,0xe0538c57
  41a635:	retf   0xfd12
  41a638:	jmp    FWORD PTR [ebp+ecx*4+0x50a05de3]
  41a63f:	int3   
  41a640:	int3   
  41a641:	ss mov gs,esp
  41a644:	add    DWORD PTR [edi+0x61f0680c],0xffffffc5
  41a64b:	(bad)  
  41a64c:	(bad)  
  41a64d:	outs   dx,BYTE PTR ds:[esi]
  41a64e:	inc    ebp
  41a64f:	push   ebx
  41a650:	inc    ecx
  41a651:	arpl   WORD PTR [ebx+eax*2+0x2610bf8],cx
  41a658:	inc    eax
  41a659:	arpl   WORD PTR [esi+0x6d13f843],cx
  41a65f:	ds std 
  41a661:	pop    esp
  41a662:	popa   
  41a663:	add    esp,0xfc438e6b
  41a669:	fcom   st(2)
  41a66b:	sqrtps xmm3,xmm0
  41a66e:	mov    edx,0xcae8520b
  41a673:	pop    es
  41a674:	push   eax
  41a675:	xor    al,0xbb
  41a677:	sti    
  41a678:	mov    eax,DWORD PTR [esi-0x3d]
  41a67b:	ror    ah,0x17
  41a67e:	push   edx
  41a67f:	int3   
  41a680:	int3   
  41a681:	mov    dh,0x8c
  41a683:	in     al,dx
  41a684:	mov    eax,ds:0x3eb777
  41a689:	and    eax,0x6e8b6806
  41a68e:	stc    
  41a68f:	push   ebp
  41a690:	inc    ecx
	...
  41a69d:	add    BYTE PTR [eax],al
  41a69f:	add    BYTE PTR [ebx-0x72],ah
  41a6a2:	push   eax
  41a6a3:	add    DWORD PTR [ecx+0x66508844],esi
  41a6a9:	ret    0xccc0
  41a6ac:	pop    ss
  41a6ad:	push   edx
  41a6ae:	int3   
  41a6af:	int3   
  41a6b0:	ss mov esp,gs
  41a6b3:	add    edi,0x11
  41a6b6:	lahf   
  41a6b7:	adc    BYTE PTR ds:0xb18affc6,dh
  41a6bd:	adc    al,0xc7
  41a6bf:	ds call 0x91ccd68a
  41a6c5:	mov    edx,ss
  41a6c7:	ds fmul st,st(5)
  41a6ca:	or     ecx,DWORD PTR [ebx-0xbb4716f]
  41a6d0:	call   0x2bcd9a9f
  41a6d5:	adc    DWORD PTR [edi+0x538c8b4d],eax
  41a6db:	clc    
  41a6dc:	fidivr DWORD PTR [edx+0x562b8fb]
  41a6e2:	add    BYTE PTR [eax],al
  41a6e4:	fiadd  WORD PTR [ebp+0x74]
  41a6e7:	inc    esp
  41a6e8:	loopne 0x41a6cc
  41a6ea:	test   DWORD PTR [eax],0xc03108ee
  41a6f0:	dec    eax
  41a6f1:	and    DWORD PTR [ecx+0x4f8c5b4d],ecx
  41a6f7:	sbb    BYTE PTR [eax+0x6a7507ba],cl
  41a6fd:	mov    WORD PTR [ebx-0x8],es
  41a700:	call   0xcab2d6
	...
  41a711:	add    BYTE PTR [eax],al
  41a713:	stos   DWORD PTR es:[edi],eax
  41a714:	add    DWORD PTR [ecx+0x438c2b55],ecx
  41a71a:	adc    dl,bl
  41a71c:	ret    0xb817
  41a71f:	bound  eax,QWORD PTR ds:0xfd080000
  41a725:	mov    BYTE PTR [ebp+0xb],cl
  41a728:	mov    WORD PTR [edi],cs
  41a72a:	mov    DWORD PTR [esi-0x4ba76a3],ebp
  41a730:	sbb    eax,DWORD PTR [ebx-0x4]
  41a733:	outs   dx,BYTE PTR ds:[esi]
  41a734:	or     DWORD PTR [ecx],esi
  41a736:	sar    al,0x8
  41a739:	jmp    0x8986d7f1
  41a73e:	in     eax,0x3e
  41a740:	inc    esp
  41a741:	int3   
  41a742:	int3   
  41a743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a744:	push   eax
  41a745:	int3   
  41a746:	int3   
  41a747:	lahf   
  41a748:	push   eax
  41a749:	int3   
  41a74a:	int3   
  41a74b:	xchg   edi,eax
  41a74c:	push   eax
  41a74d:	int3   
  41a74e:	int3   
  41a74f:	push   ss
  41a750:	mov    esp,gs
  41a752:	add    edi,0xfffffffc
  41a755:	les    eax,FWORD PTR [ebp-0x55]
  41a758:	add    al,0x30
  41a75a:	add    BYTE PTR [ebx-0x13],ah
  41a75d:	add    eax,DWORD PTR [ebx]
  41a75f:	and    eax,DWORD PTR ds:0xc62efc9f
  41a765:	dec    DWORD PTR [edi+0x7b]
  41a768:	mov    bl,0xfb
  41a76a:	inc    DWORD PTR [ebx+eax*4-0x3615f73c]
  41a771:	repz push 0x23
  41a774:	mov    WORD PTR [ebx-0x8],cs
	...
  41a783:	add    BYTE PTR [eax],al
  41a785:	add    BYTE PTR [edx],dl
  41a787:	mov    WORD PTR [ebx],ss
  41a789:	fmul   QWORD PTR [esi]
  41a78b:	(bad)  
  41a78c:	dec    DWORD PTR [edx+0x6a4fb5a1]
  41a792:	arpl   WORD PTR [esi+0x53],bx
  41a795:	hlt    
  41a796:	add    BYTE PTR [edx],bh
  41a798:	push   ebx
  41a799:	inc    ecx
  41a79a:	arpl   WORD PTR [edx-0x3b692bc5],ax
  41a7a0:	(bad)  
  41a7a1:	jmp    FWORD PTR [esi+0x6302b806]
  41a7a7:	add    eax,0x8ab9eb00
  41a7ac:	or     eax,DWORD PTR [eax]
  41a7ae:	popa   
  41a7af:	(bad)  
  41a7b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7b3:	push   ebp
  41a7b4:	push   0x4b600
  41a7b9:	push   0x400363
  41a7be:	call   0xa2977bbb
  41a7c3:	add    eax,0x363c27f
  41a7c8:	add    BYTE PTR [eax],al
  41a7ca:	xchg   ecx,eax
  41a7cb:	ins    DWORD PTR es:[edi],dx
  41a7cc:	sahf   
  41a7cd:	(bad)  
  41a7ce:	fcomp  QWORD PTR [esi-0x7f]
  41a7d1:	les    esp,FWORD PTR [edi-0x63]
  41a7d4:	add    BYTE PTR [edx],al
  41a7d6:	and    eax,DWORD PTR ds:0x561002b
  41a7dc:	add    BYTE PTR [ebx+0x4153396e],cl
  41a7e2:	arpl   WORD PTR [edx],bp
  41a7e4:	enter  0x5e89,0x9
  41a7e8:	push   esi
  41a7e9:	inc    ecx
	...
  41a7f6:	add    BYTE PTR [eax],al
  41a7f8:	add    BYTE PTR [ebx-0x76],ah
  41a7fb:	adc    eax,DWORD PTR [esi*1-0x3dae003c]
  41a802:	cmp    DWORD PTR [ebx+0x41],edx
  41a805:	arpl   WORD PTR [ebp-0x4b6cb278],si
  41a80b:	out    0x9d,eax
  41a80d:	jg     0x41a86d
  41a80f:	std    
  41a810:	sbb    DWORD PTR [edi-0x68ea76ef],0xffffffb8
  41a817:	add    BYTE PTR ds:[eax-0x48],ah
  41a81b:	pop    es
  41a81c:	mov    DWORD PTR [esi+0x4b55896d],esi
  41a822:	pop    esi
  41a823:	loop   0x41a7b0
  41a825:	inc    esi
  41a826:	rol    al,0xcc
  41a829:	pop    ss
  41a82a:	push   ecx
  41a82b:	int3   
  41a82c:	int3   
  41a82d:	xchg   esi,eax
  41a82e:	mov    ch,ah
  41a830:	mov    ebx,DWORD PTR [esi+0x5f45390d]
  41a836:	rol    BYTE PTR [ebx+ecx*4],cl
  41a839:	sahf   
  41a83a:	or     eax,0x20805e9
  41a83f:	mov    DWORD PTR [ebp+0x67],eax
  41a842:	rol    al,0xcc
  41a845:	pop    ds
  41a846:	push   ecx
  41a847:	int3   
  41a848:	int3   
  41a849:	pop    ss
  41a84a:	push   ecx
  41a84b:	int3   
  41a84c:	int3   
  41a84d:	xchg   esi,eax
  41a84e:	mov    ch,ah
  41a850:	add    DWORD PTR [edi],0x31
  41a853:	lds    eax,FWORD PTR [ebp-0x11]
  41a856:	add    al,0x70
  41a858:	add    DWORD PTR [ebx-0x76],esp
  41a85b:	inc    ebx
  41a85c:	or     BYTE PTR [eax],al
	...
  41a86a:	add    BYTE PTR [eax],al
  41a86c:	jmp    0x893d:0x268bd7c7
  41a873:	push   ebp
  41a874:	pop    ebx
  41a875:	add    cl,BYTE PTR [edi+0x3c]
  41a878:	fidiv  DWORD PTR [edi+0x65268bdf]
  41a87e:	or     eax,0x88f92bb7
  41a883:	push   ebp
  41a884:	ret    
  41a885:	pop    DWORD PTR [edx+ecx*1+0x4b]
  41a889:	mov    WORD PTR [ebx-0x18],es
  41a88c:	or     edi,ecx
  41a88e:	add    BYTE PTR [eax+0x63],al
  41a891:	mov    cl,BYTE PTR [ebx]
  41a893:	cld    
  41a894:	ss (bad) 
  41a896:	call   DWORD PTR [eax+0x7b]
  41a899:	int    0xf8
  41a89b:	(bad)  
  41a89c:	jl     0x41a81f
  41a89e:	les    ecx,FWORD PTR [eax]
  41a8a0:	jmp    0xffed:0x236aefc7
  41a8a7:	das    
  41a8a8:	arpl   WORD PTR ds:0x6d30068,ax
  41a8ae:	add    BYTE PTR [edx+0x63],ch
  41a8b1:	pop    esp
  41a8b2:	push   ebx
  41a8b3:	lock fcmovb st,st(2)
  41a8b6:	jecxz  0x41a843
  41a8b8:	scas   al,BYTE PTR es:[edi]
  41a8b9:	mov    DWORD PTR gs:[edx-0x69],eax
  41a8bd:	mov    ch,0x88
  41a8bf:	dec    ebp
  41a8c0:	imul   esi,DWORD PTR [esi-0x47b8aa78],0xffffffe7
  41a8c7:	shl    DWORD PTR [esi],0x5d
  41a8ca:	std    
  41a8cb:	and    DWORD PTR [edi],0xa
  41a8ce:	lds    eax,FWORD PTR [ebp+0x0]
	...
  41a8dd:	add    BYTE PTR [eax],al
  41a8df:	clts   
  41a8e1:	add    BYTE PTR [eax],al
  41a8e3:	arpl   WORD PTR [eax+0x7],si
  41a8e6:	mov    ebx,DWORD PTR [esi+0x62c08151]
  41a8ec:	mov    es,WORD PTR [ebx-0xc]
  41a8ef:	call   0xb45188be
  41a8f4:	mov    dh,0x5
  41a8f6:	cmp    DWORD PTR [esi-0x17a68eaf],ecx
  41a8fc:	ret    0x83e7
  41a8ff:	pop    ebx
  41a900:	icebp  
  41a901:	push   DWORD PTR [ebx+0x26]
  41a904:	nop
  41a905:	dec    ebx
  41a906:	call   0x5187eb
  41a90b:	aaa    
  41a90c:	sbb    DWORD PTR [ecx+0x4290cb55],ecx
  41a912:	adc    al,bl
  41a914:	retf   0x8bdf
  41a917:	adc    bl,BYTE PTR [ecx]
  41a919:	mov    eax,DWORD PTR [ebx+esi*2+0x5c]
  41a91d:	mov    DWORD PTR [ebp-0x7d],ecx
  41a920:	sbb    dl,dl
  41a922:	not    DWORD PTR [edx]
  41a924:	sbb    DWORD PTR [ecx-0x52f37cab],ecx
  41a92a:	inc    edx
  41a92b:	aas    
  41a92c:	mov    ch,0x88
  41a92e:	inc    ebp
  41a92f:	mov    edx,DWORD PTR [eax-0x329ff7b5]
  41a935:	adc    edx,DWORD PTR [ecx-0x28]
  41a938:	mov    dl,0xe7
  41a93a:	mov    esp,DWORD PTR [esi+0x67420161]
  41a940:	mov    ch,0xe7
  41a942:	push   ebp
	...
  41a94f:	add    BYTE PTR [eax],al
  41a951:	add    BYTE PTR [esi+0x5c],cl
  41a954:	std    
  41a955:	sbb    DWORD PTR [edi],0x9
  41a958:	mov    DWORD PTR [ebp+0x4b],ecx
  41a95b:	mov    BYTE PTR [edi-0x183615d8],bh
  41a961:	jmp    0x41a934
  41a963:	(bad)  
  41a964:	push   ebx
  41a965:	in     al,0x91
  41a967:	ins    DWORD PTR es:[edi],dx
  41a968:	push   cs
  41a969:	cld    
  41a96a:	sbb    al,0x5c
  41a96c:	add    esp,0x323ed5f
  41a972:	mov    ds:0xaefc9f05,eax
  41a977:	(bad)  
  41a978:	dec    DWORD PTR [edi+0xb]
  41a97b:	nop
  41a97c:	cli    
  41a97d:	push   esp
  41a97f:	xchg   esp,eax
  41a981:	or     dl,bl
  41a983:	rcr    ebx,0x83
  41a986:	es pop ebp
  41a988:	push   ebx
  41a989:	inc    ecx
  41a98a:	arpl   WORD PTR ds:0x9e80a73,ax
  41a990:	lock push ebp
  41a992:	and    al,BYTE PTR ds:0x392eff4f
  41a998:	cmp    DWORD PTR ds:0x3eb1bb,0x6a1bd263
  41a9a2:	and    ebp,ebp
  41a9a4:	jmp    FWORD PTR [edi]
  41a9a6:	arpl   WORD PTR ds:0xb69f5589,ax
  41a9ac:	mov    BYTE PTR [ebp-0x7d],al
  41a9af:	(bad)
  41a9b3:	pop    esp
  41a9b4:	push   ebx
  41a9b5:	lock add BYTE PTR [eax],al
	...
  41a9c4:	add    al,al
  41a9c6:	xor    BYTE PTR [ebx+0x41],dl
  41a9c9:	arpl   WORD PTR [eax+0x13],si
  41a9cc:	push   0x23
  41a9ce:	in     eax,dx
  41a9cf:	jmp    FWORD PTR [edi]
  41a9d1:	arpl   WORD PTR ds:0xb6675589,ax
  41a9d7:	imul   eax,DWORD PTR [eax],0xa3efb15c
  41a9dd:	das    
  41a9de:	mov    cl,0x3e
  41a9e0:	add    al,ah
  41a9e2:	sbb    ah,dl
  41a9e4:	push   ebp
  41a9e5:	mov    ds:0x56750005,al
  41a9ea:	out    dx,eax
  41a9eb:	aas    
  41a9ec:	push   0x1563
  41a9f1:	fadd   st,st(0)
  41a9f3:	sti    
  41a9f4:	push   eax
  41a9f5:	mov    ecx,0x1355fd05
  41a9fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9fb:	aam    0x55
  41a9fd:	mov    ds:0x74d8905,al
  41aa02:	lea    ecx,[ebx-0x28]
  41aa05:	fdiv   DWORD PTR [eax+0x3da68bd7]
  41aa0b:	add    DWORD PTR [edx+0x37],eax
  41aa0e:	mov    WORD PTR [ebx-0x20],es
  41aa11:	fmul   st,st(0)
  41aa13:	sti    
  41aa14:	push   ecx
  41aa15:	fdiv   DWORD PTR [eax+0x320252e3]
  41aa1b:	push   ebx
  41aa1c:	inc    ecx
  41aa1d:	arpl   WORD PTR [ebp+0x5acf95e7],si
  41aa23:	std    
  41aa24:	sbb    DWORD PTR [edi+0x4d8909],0x0
	...
  41aa37:	add    bl,al
  41aa39:	xchg   BYTE PTR [edi+0x563a4],dh
  41aa3f:	add    BYTE PTR [edi],dh
  41aa41:	pop    ds
  41aa42:	mov    DWORD PTR [ebp-0x3d],edx
  41aa45:	mov    es,WORD PTR [ebx-0x28]
  41aa48:	pusha  
  41aa49:	xchg   DWORD PTR [eax-0x78fa9d00],esp
  41aa4f:	inc    ebp
  41aa50:	jg     0x41a9e0
  41aa52:	dec    ebx
  41aa53:	loopne 0x41aa2d
  41aa55:	lock rcl DWORD PTR [ebp+0x22],cl
  41aa59:	add    eax,0x8c2f5129
  41aa5e:	adc    eax,DWORD PTR [edx*1+0x5fa0ffc4]
  41aa65:	mov    bl,0x3e
  41aa67:	add    BYTE PTR [ebx-0x512bf472],dh
  41aa6d:	(bad)  
  41aa6e:	call   DWORD PTR [eax-0x28]
  41aa71:	scas   eax,DWORD PTR es:[edi]
  41aa72:	jmp    0x41aac6
  41aa74:	cmp    ebx,edx
  41aa76:	stc    
  41aa77:	(bad)  
  41aa78:	cmp    al,0x86
  41aa7a:	les    ecx,FWORD PTR [eax+ebp*8]
  41aa7d:	mov    edi,0x315e8bdf
  41aa82:	push   ebx
  41aa83:	inc    ecx
  41aa84:	arpl   WORD PTR [esi],ax
  41aa86:	dec    eax
  41aa87:	sub    dl,ch
  41aa89:	pop    es
  41aa8a:	adc    al,0x56
  41aa8c:	mov    ds:0xb3d8105,al
  41aa91:	mov    al,0x3e
  41aa93:	add    BYTE PTR [ebx-0x30],ah
  41aa96:	sub    cl,BYTE PTR [ebx+0x41533156]
	...
  41aaa8:	add    BYTE PTR [eax],al
  41aaaa:	add    BYTE PTR [ebx-0x49],ah
  41aaad:	sahf   
  41aaae:	adc    al,0x95
  41aab0:	(bad)  
  41aab1:	dec    DWORD PTR [edi-0x28]
  41aab4:	pop    es
  41aab5:	lock push ebp
  41aab7:	and    al,BYTE PTR ds:0x595be84f
  41aabd:	std    
  41aabe:	jmp    eax
  41aac0:	inc    eax
  41aac1:	or     al,0x8b
  41aac3:	outs   dx,BYTE PTR ds:[esi]
  41aac4:	xor    DWORD PTR [ebx+0x41],edx
  41aac7:	arpl   WORD PTR [edi+0x59ba49e7],si
  41aacd:	std    
  41aace:	and    DWORD PTR [edi+0x3b61e900],0x11
  41aad5:	add    DWORD PTR [eax+0x63],eax
  41aad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aad9:	cld    
  41aada:	push   ebp
  41aadb:	and    al,BYTE PTR ds:0x5c37e850
  41aae1:	std    
  41aae2:	jmp    eax
  41aae4:	inc    eax
  41aae5:	or     BYTE PTR [ecx+0xd893126],cl
  41aaeb:	(bad)  
  41aaec:	scas   eax,DWORD PTR es:[edi]
  41aaed:	add    BYTE PTR ds:[edx],dl
  41aaf0:	mov    ss,WORD PTR [ebx-0x20]
  41aaf3:	ret    0x5330
  41aaf6:	inc    ecx
  41aaf7:	arpl   WORD PTR [edx+eax*2],ax
  41aafa:	sub    BYTE PTR [ebx-0x490ff474],dh
  41ab00:	(bad)  
  41ab01:	call   DWORD PTR [eax+0x3b]
  41ab04:	sub    esp,edi
  41ab06:	(bad)  
  41ab07:	cmp    al,0x85
  41ab09:	les    ecx,FWORD PTR [eax+ebp*8]
  41ab0c:	repnz out dx,eax
  41ab0e:	push   ebp
	...
  41ab1b:	add    BYTE PTR [eax],al
  41ab1d:	add    BYTE PTR [edx-0x6c3d80fb],ah
  41ab23:	mov    ah,0xfe
  41ab25:	(bad)  
  41ab26:	jmp    0x8b05:0xa2561bf2
  41ab2d:	inc    ebp
  41ab2e:	or     esi,DWORD PTR [esi-0x86bf97]
  41ab34:	mov    BYTE PTR ds:0x3eaf5f,cl
  41ab3a:	xchg   edx,eax
  41ab3b:	pop    eax
  41ab3c:	push   ebx
  41ab3d:	aam    0xfb
  41ab3f:	fs stc 
  41ab41:	jmp    esp
  41ab43:	popf   
  41ab44:	(bad)  
  41ab45:	jmp    DWORD PTR [ebx+0x5]
  41ab48:	mov    ebp,esp
  41ab4a:	ss inc ebx
  41ab4c:	add    al,0x0
  41ab4e:	lahf   
  41ab4f:	dec    ecx
  41ab50:	int3   
  41ab51:	int3   
  41ab52:	xchg   edi,eax
  41ab53:	dec    ecx
  41ab54:	int3   
  41ab55:	int3   
  41ab56:	push   ss
  41ab57:	mov    esp,gs
  41ab59:	mov    ebx,DWORD PTR [esi]
  41ab5b:	or     eax,0xbaaf4089
  41ab60:	ror    ah,0x97
  41ab63:	dec    ecx
  41ab64:	int3   
  41ab65:	int3   
  41ab66:	ss mov esp,gs
  41ab69:	push   ebx
  41ab6a:	sub    eax,0x833d88b0
  41ab6f:	mov    dl,0x3e
  41ab71:	add    al,bl
  41ab73:	cli    
  41ab74:	jmp    0x41abcb
  41ab76:	and    al,BYTE PTR ds:0xb29b3589
  41ab7c:	add    BYTE PTR ds:[edi+esi*4],cl
  41ab80:	pop    eax
  41ab81:	pop    ebp
	...
  41ab8e:	add    BYTE PTR [eax],al
  41ab90:	add    BYTE PTR [eax-0x493333b7],ah
  41ab96:	mov    esp,gs
  41ab98:	push   ecx
  41ab99:	retf   
  41ab9a:	rol    DWORD PTR [eax],0x40
  41ab9d:	arpl   WORD PTR [esi+0x5a255fc],sp
  41aba3:	push   eax
  41aba4:	call   0x3f08b8
  41aba9:	loopne 0x41abeb
  41abab:	or     BYTE PTR [ecx+0x4d8959a6],cl
  41abb1:	pop    ebx
  41abb2:	mov    dh,0x69
  41abb4:	add    al,ch
  41abb6:	icebp  
  41abb7:	pop    ss
  41abb8:	push   esi
  41abb9:	mov    ds:0xb6ff5205,al
  41abbe:	pop    ecx
  41abbf:	mov    ebp,esp
  41abc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abc2:	inc    esp
  41abc3:	int3   
  41abc4:	int3   
  41abc5:	xchg   esi,eax
  41abc6:	mov    esp,gs
  41abc8:	add    DWORD PTR [edi],0x21
  41abcb:	lds    eax,FWORD PTR [ebp-0x15]
  41abce:	add    al,0x0
  41abd0:	add    BYTE PTR [ebx+0x40],ah
  41abd3:	inc    ebx
  41abd4:	fcomp  QWORD PTR [ebx+0x5]
  41abd7:	add    BYTE PTR [eax],al
  41abd9:	pushf  
  41abda:	shl    ebx,0x1
  41abdd:	arpl   WORD PTR ds:0x591ec700,ax
  41abe3:	add    BYTE PTR [eax],al
  41abe5:	arpl   WORD PTR ds:0x4bf45c5,ax
  41abeb:	add    BYTE PTR [eax],al
  41abed:	arpl   WORD PTR [ebx+ecx*2-0xff625f8],cx
  41abf4:	push   ebp
	...
  41ac01:	add    BYTE PTR [eax],al
  41ac03:	add    BYTE PTR [edx],ah
  41ac05:	add    eax,0x578ca9e8
  41ac0a:	std    
  41ac0b:	mov    eax,ds:0x3eb193
  41ac10:	ds pop eax
  41ac12:	std    
  41ac13:	add    BYTE PTR [ebx-0x2f],ah
  41ac16:	or     eax,edi
  41ac18:	pop    esi
  41ac19:	pop    ebp
  41ac1a:	push   ebx
  41ac1b:	inc    ecx
  41ac1c:	arpl   WORD PTR ds:0x6c630000,ax
  41ac22:	or     al,bh
  41ac24:	pop    bp
  41ac26:	push   ebx
  41ac27:	inc    ecx
  41ac28:	arpl   WORD PTR [eax+eax*1],ax
  41ac2b:	add    BYTE PTR [ebx-0x7e],ah
  41ac2e:	cmp    esi,eax
  41ac30:	scas   al,BYTE PTR es:[edi]
  41ac31:	(bad)  
  41ac32:	(bad)  
  41ac33:	push   DWORD PTR [esi+0x3b05c50b]
  41ac39:	mov    cl,0x3e
  41ac3b:	add    BYTE PTR [ebx+0x5],ah
  41ac3e:	add    BYTE PTR [eax],al
  41ac40:	loopne 0x41ac5a
  41ac42:	clc    
  41ac43:	push   ebp
  41ac44:	mov    ds:0x66750005,al
  41ac49:	jmp    0x41ac4a
  41ac4b:	(bad)  
  41ac4c:	jbe    0x41ac93
  41ac4e:	push   ebx
  41ac4f:	inc    ecx
  41ac50:	arpl   WORD PTR [edx+0x5a255f0],sp
  41ac56:	mov    DWORD PTR ds:0x3eb0f3,ecx
  41ac5c:	fcmove st,st(0)
  41ac5e:	out    0x8b,eax
  41ac60:	dec    esi
  41ac61:	push   ebp
  41ac62:	push   ebx
  41ac63:	inc    ecx
  41ac64:	arpl   WORD PTR [edx+0xe843],cx
	...
  41ac76:	add    BYTE PTR [eax-0x3d],ah
  41ac79:	cmp    ecx,DWORD PTR [ecx+0x4d896d26]
  41ac7f:	mov    ebx,0x16dc0b8c
  41ac84:	(bad)  
  41ac85:	jmp    DWORD PTR [edi+0x13]
  41ac88:	add    al,BYTE PTR [eax+0x0]
  41ac8b:	lods   al,BYTE PTR ds:[esi]
  41ac8c:	lock mov edi,0xa1052255
  41ac92:	cld    
  41ac93:	ss (bad) 
  41ac95:	inc    esi
  41ac97:	pop    esi
  41ac98:	or     DWORD PTR [esi+0x41],edx
  41ac9b:	arpl   ax,dx
  41ac9d:	add    BYTE PTR [eax+0x63],al
  41aca0:	in     eax,dx
  41aca1:	pop    edi
  41aca2:	add    esp,DWORD PTR [ebx]
  41aca4:	add    eax,0xb0771589
  41aca9:	add    BYTE PTR ds:[ecx],dl
  41acac:	ins    DWORD PTR es:[edi],dx
  41acad:	ret    0x64f7
  41acb0:	push   esi
  41acb1:	add    esp,0x5608a26b
  41acb7:	mov    ds:0x5b15fd05,al
  41acbc:	scas   eax,DWORD PTR es:[edi]
  41acbd:	add    BYTE PTR ds:[eax],al
  41acc0:	std    
  41acc1:	push   ebp
  41acc2:	inc    ecx
  41acc3:	arpl   WORD PTR [esp+ecx*1+0x5005a256],sp
  41acca:	call   0x3f03c6
  41accf:	loopne 0x41ad11
  41acd1:	add    al,0x89
  41acd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acd4:	push   ebp
  41acd5:	mov    DWORD PTR [ebp+0x13],ecx
  41acd8:	mov    ah,0xe7
  41acda:	aad    0x0
	...
  41ace8:	add    BYTE PTR [eax],al
  41acea:	or     eax,0x1f83fd56
  41acef:	add    DWORD PTR [ecx-0x3b690c],esp
  41acf5:	mov    cl,BYTE PTR [esi+0x636a5255]
  41acfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acfc:	hlt    
  41acfd:	push   ebp
  41acfe:	mov    ds:0xffe85005,al
  41ad03:	dec    ebp
  41ad04:	std    
  41ad05:	jmp    eax
  41ad07:	inc    eax
  41ad08:	or     al,0x8b
  41ad0a:	push   ds
  41ad0b:	push   ebp
  41ad0c:	xchg   DWORD PTR [ebp-0x3d],ecx
  41ad0f:	mov    DWORD PTR [ebx-0x4],edx
  41ad12:	js     0x41acc4
  41ad14:	out    dx,eax
  41ad15:	jae    0x41ad30
  41ad17:	mov    al,BYTE PTR [ebx-0x20]
  41ad1a:	adc    ecx,DWORD PTR [edx+0x6d12dc4b]
  41ad20:	scas   al,BYTE PTR es:[edi]
  41ad21:	sti    
  41ad22:	pushf  
  41ad23:	push   ebp
  41ad24:	add    esp,0x5600a26b
  41ad2a:	and    al,BYTE PTR ds:0xaf631589
  41ad30:	add    BYTE PTR ds:[ecx],dl
  41ad33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad34:	or     al,0x56
  41ad36:	and    al,BYTE PTR ds:0xb4874501
  41ad3c:	mov    BYTE PTR ds:0x3eaf6f,cl
  41ad42:	pusha  
  41ad43:	ret    0x51fb
  41ad46:	dec    ebx
  41ad47:	cmp    eax,0x894cfff7
  41ad4c:	les    ecx,FWORD PTR [eax+eax*1]
	...
  41ad5b:	add    BYTE PTR [eax],al
  41ad5d:	fdivr  DWORD PTR [edx+0x319603f3]
  41ad63:	add    DWORD PTR [ebp+0x3f],edx
  41ad66:	jg     0x41adbb
  41ad68:	in     al,0xd8
  41ad6a:	retf   0x3fb
  41ad6d:	sahf   
  41ad6e:	xor    DWORD PTR [edi+0x4b811f45],eax
  41ad74:	loopne 0x41adbe
  41ad76:	add    al,BYTE PTR [eax]
  41ad78:	push   esi
  41ad79:	mov    ds:0x34d8705,al
  41ad7e:	popa   
  41ad7f:	sahf   
  41ad80:	(bad)  
  41ad81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad82:	dec    ebp
  41ad83:	add    BYTE PTR [eax],al
  41ad85:	arpl   WORD PTR ds:0xbad809e9,ax
  41ad8b:	test   DWORD PTR [ebx+0x55870a21],0xf84380db
  41ad95:	cwde   
  41ad96:	retf   0x73ef
  41ad99:	mov    eax,DWORD PTR [eax-0x39d10bf5]
  41ad9f:	inc    DWORD PTR [edx]
  41ada1:	cs dec ebp
  41ada3:	mov    DWORD PTR [ecx],edx
  41ada5:	pusha  
  41ada6:	mov    edx,0xbab7a1f7
  41adab:	add    BYTE PTR ds:[eax-0x36],ah
  41adaf:	test   DWORD PTR [ecx-0x7b47f8d],0x3e746e2
  41adb9:	arpl   WORD PTR ds:0xba8f1589,ax
  41adbf:	add    BYTE PTR ds:[eax],al
	...
  41adce:	add    BYTE PTR [eax],al
  41add0:	pusha  
  41add1:	mov    edx,0xa66933f7
  41add6:	hlt    
  41add7:	push   ebp
  41add8:	and    al,BYTE PTR ds:0x7e6b4501
  41adde:	or     bl,ch
  41ade0:	adc    al,0x7e
  41ade2:	sub    esp,esp
  41ade4:	scas   al,BYTE PTR es:[edi]
  41ade5:	(bad)  
  41ade6:	dec    DWORD PTR [eax+0x4153658e]
  41adec:	arpl   WORD PTR [eax],bx
  41adee:	(bad)  
  41adef:	mov    DWORD PTR [esi+0x2d],esi
  41adf2:	push   ebx
  41adf3:	inc    ecx
  41adf4:	arpl   WORD PTR [eax],bx
  41adf6:	(bad)  
  41adf7:	mov    DWORD PTR [esi+0x61],ecx
  41adfa:	push   ebx
  41adfb:	inc    ecx
  41adfc:	arpl   WORD PTR [ebp+0x4e],bx
  41adff:	neg    DWORD PTR [esp+edx*2]
  41ae02:	mov    ecx,DWORD PTR ds:0x3eba84
  41ae08:	fcmovb st,st(1)
  41ae0a:	idiv   DWORD PTR [ecx+0x400763]
  41ae10:	loop   0x41ae6f
  41ae12:	add    BYTE PTR [edx],al
  41ae14:	arpl   WORD PTR ds:0x1feb5589,ax
  41ae1a:	iret   
  41ae1b:	mov    DWORD PTR [esi+0x5d],ecx
  41ae1e:	push   ebx
  41ae1f:	inc    ecx
  41ae20:	arpl   WORD PTR [esi+0x52255e8],sp
  41ae26:	push   eax
  41ae27:	call   0x3efd93
  41ae2c:	loopne 0x41ae76
  41ae2e:	add    al,0x8b
  41ae30:	outs   dx,BYTE PTR ds:[esi]
  41ae31:	pop    ecx
  41ae32:	push   ebx
  41ae33:	inc    ecx
	...
  41ae40:	add    BYTE PTR [eax],al
  41ae42:	add    BYTE PTR [ebx-0x4a],ah
  41ae45:	out    0xd5,eax
  41ae47:	test   eax,0xa385fd53
  41ae4c:	fld    DWORD PTR [ebx]
  41ae4e:	xor    esp,DWORD PTR [ebx+0x3e8b2a5f]
  41ae54:	imul   edx,DWORD PTR [ebx+0x41],0x4c48863
  41ae5b:	loopne 0x41ae6e
  41ae5d:	clc    
  41ae5e:	push   ebp
  41ae5f:	and    al,BYTE PTR ds:0xa66a7400
  41ae65:	aam    0x55
  41ae67:	and    al,BYTE PTR ds:0x93f4487
  41ae6d:	call   0xfd950ccf
  41ae72:	mov    ebp,DWORD PTR [esi-0x7]
  41ae75:	push   ebp
  41ae76:	inc    ecx
  41ae77:	arpl   WORD PTR [edi+0x7f2333c0],si
  41ae7d:	jecxz  0x41aedc
  41ae7f:	and    BYTE PTR [edx-0x34],al
  41ae82:	int3   
  41ae83:	arpl   WORD PTR ds:0x5630000,ax
  41ae89:	add    BYTE PTR [eax],al
  41ae8b:	arpl   WORD PTR ds:0x5630000,ax
  41ae91:	add    BYTE PTR [eax],al
  41ae93:	arpl   WORD PTR ds:0x5630000,ax
  41ae99:	add    BYTE PTR [eax],al
  41ae9b:	arpl   WORD PTR ds:0x5630000,ax
  41aea1:	add    BYTE PTR [eax],al
  41aea3:	arpl   WORD PTR ds:0x0,ax
	...
  41aeb5:	add    BYTE PTR [ebx+0x5],ah
  41aeb8:	add    BYTE PTR [eax],al
  41aeba:	arpl   WORD PTR ds:0x5630000,ax
  41aec0:	add    BYTE PTR [eax],al
  41aec2:	arpl   WORD PTR ds:0x5630000,ax
  41aec8:	add    BYTE PTR [eax],al
  41aeca:	arpl   WORD PTR ds:0x5630000,ax
  41aed0:	add    BYTE PTR [eax],al
  41aed2:	arpl   WORD PTR ds:0x5630000,ax
  41aed8:	add    BYTE PTR [eax],al
  41aeda:	arpl   WORD PTR ds:0x5630000,ax
  41aee0:	add    BYTE PTR [eax],al
  41aee2:	arpl   WORD PTR ds:0x5630000,ax
  41aee8:	add    BYTE PTR [eax],al
  41aeea:	arpl   WORD PTR ds:0x5630000,ax
  41aef0:	add    BYTE PTR [eax],al
  41aef2:	arpl   WORD PTR ds:0x5630000,ax
  41aef8:	add    BYTE PTR [eax],al
  41aefa:	arpl   WORD PTR ds:0x5630000,ax
  41af00:	add    BYTE PTR [eax],al
  41af02:	arpl   WORD PTR ds:0x5630000,ax
  41af08:	add    BYTE PTR [eax],al
  41af0a:	arpl   WORD PTR ds:0x5630000,ax
  41af10:	add    BYTE PTR [eax],al
  41af12:	arpl   WORD PTR ds:0x5630000,ax
	...
  41af28:	add    BYTE PTR [ebx+0x5],ah
  41af2b:	add    BYTE PTR [eax],al
  41af2d:	arpl   WORD PTR ds:0x5630000,ax
  41af33:	add    BYTE PTR [eax],al
  41af35:	arpl   WORD PTR ds:0x5630000,ax
  41af3b:	add    BYTE PTR [eax],al
  41af3d:	arpl   WORD PTR ds:0x5630000,ax
  41af43:	add    BYTE PTR [eax],al
  41af45:	arpl   WORD PTR ds:0x5630000,ax
  41af4b:	add    BYTE PTR [eax],al
  41af4d:	arpl   WORD PTR ds:0x5630000,ax
  41af53:	add    BYTE PTR [eax],al
  41af55:	arpl   WORD PTR ds:0x5630000,ax
  41af5b:	add    BYTE PTR [eax],al
  41af5d:	arpl   WORD PTR ds:0x5630000,ax
  41af63:	add    BYTE PTR [eax],al
  41af65:	arpl   WORD PTR ds:0x5630000,ax
  41af6b:	add    BYTE PTR [eax],al
  41af6d:	arpl   WORD PTR ds:0x5630000,ax
  41af73:	add    BYTE PTR [eax],al
  41af75:	arpl   WORD PTR ds:0x5630000,ax
  41af7b:	add    BYTE PTR [eax],al
  41af7d:	arpl   WORD PTR ds:0x5630000,ax
  41af83:	add    BYTE PTR [eax],al
  41af85:	arpl   WORD PTR ds:0x5630000,ax
	...
  41af9b:	add    BYTE PTR [ebx+0x5],ah
  41af9e:	add    BYTE PTR [eax],al
  41afa0:	arpl   WORD PTR ds:0x5630000,ax
  41afa6:	add    BYTE PTR [eax],al
  41afa8:	arpl   WORD PTR ds:0x5630000,ax
  41afae:	add    BYTE PTR [eax],al
  41afb0:	arpl   WORD PTR ds:0x5630000,ax
  41afb6:	add    BYTE PTR [eax],al
  41afb8:	arpl   WORD PTR ds:0x5630000,ax
  41afbe:	add    BYTE PTR [eax],al
  41afc0:	arpl   WORD PTR ds:0x5630000,ax
  41afc6:	add    BYTE PTR [eax],al
  41afc8:	arpl   WORD PTR ds:0x5630000,ax
  41afce:	add    BYTE PTR [eax],al
  41afd0:	arpl   WORD PTR ds:0x5630000,ax
  41afd6:	add    BYTE PTR [eax],al
  41afd8:	arpl   WORD PTR ds:0x5630000,ax
  41afde:	add    BYTE PTR [eax],al
  41afe0:	arpl   WORD PTR ds:0x5630000,ax
  41afe6:	add    BYTE PTR [eax],al
  41afe8:	arpl   WORD PTR ds:0x5630000,ax
  41afee:	add    BYTE PTR [eax],al
  41aff0:	arpl   WORD PTR ds:0x5630000,ax
  41aff6:	add    BYTE PTR [eax],al
  41aff8:	arpl   WORD PTR ds:0x2000000,ax
  41affe:	add    BYTE PTR [eax],al
  41b000:	arpl   WORD PTR ds:0x57b0000,ax
  41b006:	add    BYTE PTR [eax],al
  41b008:	fbstp  TBYTE PTR [edi]
  41b00a:	nop
  41b00b:	xor    ch,bh
  41b00d:	aaa    
  41b00e:	cwde   
  41b00f:	xor    bl,bh
  41b011:	aaa    
  41b012:	mov    al,ds:0xa837bf32
  41b017:	xor    ah,BYTE PTR [ebx+0x45]
  41b01a:	add    DWORD PTR [eax],eax
  41b01c:	adc    eax,DWORD PTR ds:0x3f400000
  41b022:	dec    ebx
  41b023:	cmp    esi,DWORD PTR [ebx-0x53c4a5c2]
  41b029:	ds push 0x933eb53b
  41b02f:	cmp    ebx,ebp
  41b031:	cmp    eax,0x3e1f3ba8
  41b036:	in     eax,dx
  41b037:	cmp    ebx,DWORD PTR [eax+0x39]
  41b03a:	adc    DWORD PTR [edx+ecx*2],edi
  41b03d:	cmp    DWORD PTR [ebp-0x78c838c4],ebx
  41b043:	ds out 0x3a,al
  41b046:	xchg   ebp,eax
  41b047:	ds daa 
  41b049:	cmp    ecx,ebp
  41b04b:	ds cld 
  41b04d:	cmp    bh,BYTE PTR [esi+0x3f]
  41b050:	loopne 0x41b08b
  41b052:	fwait
  41b053:	aas    
  41b054:	retf   0xaf39
  41b057:	aas    
  41b058:	lods   al,BYTE PTR ds:[esi]
  41b059:	cmp    esp,ecx
  41b05b:	aas    
  41b05c:	adc    DWORD PTR [edx],edi
  41b05e:	out    0x3f,al
  41b060:	sar    BYTE PTR [ecx],cl
  41b062:	stc    
  41b063:	aas    
	...
  41b070:	add    BYTE PTR [eax],al
  41b072:	add    ah,dl
  41b074:	cmp    DWORD PTR [eax],eax
  41b076:	add    BYTE PTR [ebx+0x55],ah
  41b079:	add    DWORD PTR [eax],eax
  41b07b:	syscall 
  41b07d:	add    BYTE PTR [eax],al
  41b07f:	xor    ax,0x3018
  41b083:	loop   0x41b0b9
  41b085:	xchg   DWORD PTR [eax],esi
  41b087:	and    eax,0x6314b34
  41b08c:	xor    al,0x66
  41b08e:	xor    DWORD PTR [ebx],edx
  41b090:	xor    al,0x8d
  41b092:	xor    DWORD PTR [edi-0x5ece55cd],edi
  41b098:	xor    esp,ecx
  41b09a:	xor    DWORD PTR [ebp+0x37],edx
  41b09d:	pop    ss
  41b09e:	xor    bl,BYTE PTR [edi+0x37]
  41b0a1:	and    esi,DWORD PTR [edx]
  41b0a3:	cmp    dh,BYTE PTR [edi]
  41b0a5:	inc    edx
  41b0a6:	xor    bl,BYTE PTR [ebx]
  41b0a8:	aaa    
  41b0a9:	push   ecx
  41b0aa:	xor    cl,BYTE PTR [edi+esi*1]
  41b0ad:	pop    esi
  41b0ae:	xor    cl,dh
  41b0b0:	xor    edi,DWORD PTR [ebp+0x32]
  41b0b3:	loope  0x41b0e8
  41b0b5:	xchg   esp,eax
  41b0b6:	xor    ch,dh
  41b0b8:	xor    esp,DWORD PTR [edi-0x3dcbf2ce]
  41b0be:	xor    dl,BYTE PTR [ebx]
  41b0c0:	xor    al,0x8
  41b0c2:	xor    esp,DWORD PTR [ebp+0x34]
  41b0c5:	adc    al,0x33
  41b0c7:	xchg   BYTE PTR [edx+ebp*1],dh
  41b0ca:	xor    esp,DWORD PTR [ecx-0x14cc81cc]
  41b0d0:	xor    al,0x95
  41b0d2:	xor    eax,edx
  41b0d4:	xor    al,0xab
  41b0d6:	xor    eax,DWORD PTR [eax]
	...
  41b0e4:	add    BYTE PTR [eax],al
  41b0e6:	xlat   BYTE PTR ds:[ebx]
  41b0e7:	xor    al,0xbe
  41b0e9:	xor    ebx,DWORD PTR [edx]
  41b0eb:	xor    eax,0x351733ce
  41b0f0:	fnsave [ebx]
  41b0f2:	add    al,0x35
  41b0f4:	hlt    
  41b0f5:	xor    ebp,ecx
  41b0f7:	xor    al,0xff
  41b0f9:	xor    ebx,DWORD PTR [esi+0x31]
  41b0fc:	or     DWORD PTR [ebp*2-0x7ecbebcf],esi
  41b103:	xor    DWORD PTR [eax],ebp
  41b105:	xor    al,0x7e
  41b107:	xor    DWORD PTR [edx],esi
  41b109:	xor    al,0x14
  41b10b:	xor    DWORD PTR [edx+0x34],ebx
  41b10e:	in     eax,0x31
  41b110:	mov    WORD PTR [ecx+edx*8],?
  41b113:	xor    DWORD PTR [esp+esi*1+0x34eb31a5],ebx
  41b11a:	stos   DWORD PTR es:[edi],eax
  41b11b:	xor    DWORD PTR [esi*1+0x35233275],ecx
  41b122:	dec    edx
  41b123:	xor    dh,BYTE PTR [ecx]
  41b125:	xor    eax,0x3544324a
  41b12a:	pop    ss
  41b12b:	xor    bl,BYTE PTR [ebp+0x35]
  41b12e:	add    DWORD PTR [edx],esi
  41b130:	jno    0x41b167
  41b132:	fidiv  WORD PTR [edx]
  41b134:	mov    ?,WORD PTR ds:0x35a532d5
  41b13a:	arpl   WORD PTR ds:0x5630000,ax
  41b140:	add    BYTE PTR [eax],al
  41b142:	arpl   WORD PTR ds:0x5630000,ax
	...
  41b158:	add    BYTE PTR [ebx+0x5],ah
  41b15b:	add    BYTE PTR [eax],al
  41b15d:	arpl   WORD PTR ds:0x5630000,ax
  41b163:	add    BYTE PTR [eax],al
  41b165:	arpl   WORD PTR ds:0x5630000,ax
  41b16b:	add    BYTE PTR [eax],al
  41b16d:	arpl   WORD PTR ds:0x5630000,ax
  41b173:	add    BYTE PTR [eax],al
  41b175:	arpl   WORD PTR ds:0x5630000,ax
  41b17b:	add    BYTE PTR [eax],al
  41b17d:	arpl   WORD PTR ds:0x5630000,ax
  41b183:	add    BYTE PTR [eax],al
  41b185:	arpl   WORD PTR ds:0x5630000,ax
  41b18b:	add    BYTE PTR [eax],al
  41b18d:	arpl   WORD PTR ds:0x5630000,ax
  41b193:	add    BYTE PTR [eax],al
  41b195:	arpl   WORD PTR ds:0x5630000,ax
  41b19b:	add    BYTE PTR [eax],al
  41b19d:	arpl   WORD PTR ds:0x5630000,ax
  41b1a3:	add    BYTE PTR [eax],al
  41b1a5:	arpl   WORD PTR ds:0x5630000,ax
  41b1ab:	add    BYTE PTR [eax],al
  41b1ad:	arpl   WORD PTR ds:0x5630000,ax
  41b1b3:	add    BYTE PTR [eax],al
  41b1b5:	arpl   WORD PTR ds:0x5630000,ax
	...
  41b1cb:	add    BYTE PTR [ebx+0x5],ah
  41b1ce:	add    BYTE PTR [eax],al
  41b1d0:	arpl   WORD PTR ds:0x5630000,ax
  41b1d6:	add    BYTE PTR [eax],al
  41b1d8:	arpl   WORD PTR ds:0x5630000,ax
  41b1de:	add    BYTE PTR [eax],al
  41b1e0:	arpl   WORD PTR ds:0x5630000,ax
  41b1e6:	add    BYTE PTR [eax],al
  41b1e8:	arpl   WORD PTR ds:0x5630000,ax
  41b1ee:	add    BYTE PTR [eax],al
  41b1f0:	arpl   WORD PTR ds:0x5630000,ax
  41b1f6:	add    BYTE PTR [eax],al
  41b1f8:	arpl   WORD PTR ds:0x5630000,ax
  41b1fe:	add    BYTE PTR [eax],al
  41b200:	arpl   WORD PTR ds:0x5630000,ax
  41b206:	add    BYTE PTR [eax],al
  41b208:	arpl   WORD PTR ds:0x5630000,ax
  41b20e:	add    BYTE PTR [eax],al
  41b210:	arpl   WORD PTR ds:0x5630000,ax
  41b216:	add    BYTE PTR [eax],al
  41b218:	arpl   WORD PTR ds:0x5630000,ax
  41b21e:	add    BYTE PTR [eax],al
  41b220:	arpl   WORD PTR ds:0x5630000,ax
  41b226:	add    BYTE PTR [eax],al
  41b228:	arpl   WORD PTR ds:0x5630000,ax
	...
  41b23e:	add    BYTE PTR [ebx+0x5],ah
  41b241:	add    BYTE PTR [eax],al
  41b243:	arpl   WORD PTR ds:0x5630000,ax
  41b249:	add    BYTE PTR [eax],al
  41b24b:	jmp    DWORD PTR ds:0x40113c
  41b251:	jmp    DWORD PTR ds:0x401140
  41b257:	jmp    DWORD PTR ds:0x401144
  41b25d:	jmp    DWORD PTR ds:0x401148
  41b263:	jmp    DWORD PTR ds:0x40114c
  41b269:	jmp    DWORD PTR ds:0x401150
  41b26f:	jmp    DWORD PTR ds:0x401154
  41b275:	jmp    DWORD PTR ds:0x401158
  41b27b:	jmp    DWORD PTR ds:0x401160
