
ac9bcadd25f4dfee3064ac2a14b5cd72ef47d107281b9a895a67320dd00b8e0d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    ecx,0x4d2f
  40100a:	add    BYTE PTR [eax],al
  40100c:	add    al,BYTE PTR [eax]
  40100e:	add    BYTE PTR [eax],al
  401010:	cmp    al,BYTE PTR [eax]
  401012:	add    BYTE PTR [eax],al
  401014:	add    BYTE PTR [eax],al
  401016:	add    DWORD PTR [eax],eax
  401018:	add    BYTE PTR [edx-0x74ab0000],bh
  40101e:	in     al,dx
  40101f:	sub    esp,0x30
  401022:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  401029:	mov    eax,ds:0x44536c
  40102e:	adc    eax,DWORD PTR ds:0x445380
  401034:	mov    ds:0x44536c,eax
  401039:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  401040:	xor    ecx,0x17d8
  401046:	mov    ecx,DWORD PTR [ebp-0x4]
  401049:	push   ebx
  40104a:	and    DWORD PTR ds:0x43fbec,0x0
  401054:	xor    eax,eax
  401056:	add    eax,DWORD PTR ds:0x43fbec
  40105c:	inc    eax
  40105d:	mov    ds:0x43fbec,eax
  401062:	cmp    DWORD PTR ds:0x43fbec,0xa
  401069:	jne    0x40108c
  40106f:	push   DWORD PTR [ebp-0x10]
  401072:	push   DWORD PTR [ebp-0x28]
  401075:	push   DWORD PTR [ebp-0x20]
  401078:	push   0x74f6
  40107d:	push   DWORD PTR [ebp-0x24]
  401080:	push   DWORD PTR [ebp-0x28]
  401083:	push   DWORD PTR [ebp-0x20]
  401086:	call   DWORD PTR ds:0x43c5a4
  40108c:	cmp    DWORD PTR ds:0x43fbec,0x9
  401093:	jne    0x4010a4
  401099:	mov    eax,ds:0x43fbec
  40109e:	inc    eax
  40109f:	mov    ds:0x43fbec,eax
  4010a4:	cmp    DWORD PTR ds:0x43fbec,0x17
  4010ab:	jb     0x401054
  4010b1:	add    DWORD PTR ds:0x43fbd8,ecx
  4010b7:	mov    eax,0x7510857
  4010bc:	xor    ecx,eax
  4010be:	xor    DWORD PTR ds:0x4427b4,0x226
  4010c8:	mov    ebx,0x32729e
  4010cd:	not    DWORD PTR ds:0x4427b8
  4010d3:	jmp    0x4011a6
  4010d8:	dec    esi
  4010d9:	dec    edx
  4010da:	xor    al,0x5c
  4010dc:	fcom   DWORD PTR [edx+0x66]
  4010df:	jp     0x4010bd
  4010e1:	test   DWORD PTR [ebx+0x58],0x2e9c8fbd
  4010e8:	jl     0x401166
  4010ea:	jl     0x401168
  4010ec:	mov    ds:0xcc7c7c7c,al
  4010f1:	(bad)  
  4010f2:	xor    ecx,ebx
  4010f4:	xor    eax,0xccddcfdb
  4010f9:	ja     0x401171
  4010fb:	or     ecx,DWORD PTR [edi]
  4010fd:	mov    WORD PTR [edx],cs
  4010ff:	(bad)  
  401101:	bswap  edx
  401103:	adc    dh,BYTE PTR [edi]
  401105:	sbb    bl,BYTE PTR [edi]
  401107:	mov    ch,0x52
  401109:	or     ah,BYTE PTR [edi-0x4e10f32f]
  40110f:	rol    esp,cl
  401111:	or     ecx,DWORD PTR [esp+edx*1+0x4da8e6bc]
  401118:	sbb    DWORD PTR [ecx+0x541fb4dc],esp
  40111e:	out    dx,al
  40111f:	outs   dx,DWORD PTR ds:[esi]
  401120:	add    ebx,DWORD PTR ds:0x4ac4729e
  401126:	mov    al,ds:0x36dd215b
  40112b:	mov    eax,ds:0xa3c97380
  401131:	je     0x401169
  401133:	fisttp DWORD PTR [ebp+0x359ac4f5]
  401139:	jecxz  0x401175
  40113b:	and    ebp,0x4f
  40113e:	aam    0x94
  401140:	dec    ebp
  401141:	inc    DWORD PTR [edi-0x2f5a886e]
  401147:	mov    cl,0x41
  401149:	loope  0x40116f
  40114b:	pop    ecx
  40114c:	sub    edi,DWORD PTR [eax-0x41639320]
  401152:	jae    0x401171
  401154:	retf   
  401155:	cwde   
  401156:	sub    eax,0xc85ce3c6
  40115b:	(bad)  
  40115c:	mov    dl,0xfa
  40115e:	loopne 0x4010f8
  401160:	cmp    eax,0xc76966cf
  401165:	sub    al,cl
  401167:	or     ch,dl
  401169:	sbb    eax,0xb39945d
  40116e:	outs   dx,DWORD PTR ds:[esi]
  40116f:	ins    DWORD PTR es:[edi],dx
  401170:	jb     0x401174
  401172:	cmp    eax,0x22468cd1
  401177:	jns    0x4011f8
  401179:	cmp    al,0x8f
  40117b:	add    bl,dl
  40117d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40117e:	add    edx,DWORD PTR [ebx+0x59]
  401181:	rol    esp,1
  401183:	add    eax,0x15d55edb
  401188:	jge    0x401126
  40118a:	mov    ah,0x43
  40118c:	daa    
  40118d:	sbb    DWORD PTR [ebx],esp
  40118f:	addr16 and eax,0x4f3cdb10
  401195:	loop   0x401158
  401197:	xchg   esi,eax
  401198:	xor    eax,0x7712260c
  40119d:	add    DWORD PTR [eax],ecx
  40119f:	jns    0x401181
  4011a1:	jle    0x40116c
  4011a3:	jne    0x401171
  4011a5:	in     al,dx
  4011a6:	add    ecx,ebx
  4011a8:	adc    DWORD PTR ds:0x413b52,0x445370
  4011b2:	mov    DWORD PTR [ebp-0x1c],ecx
  4011b5:	xor    DWORD PTR ds:0x4105cf,0x5a6f
  4011bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4011c2:	adc    DWORD PTR ds:0x44536c,0x413b4e
  4011cc:	jmp    0x40129f
  4011d1:	inc    edi
  4011d2:	in     eax,0x24
  4011d4:	xor    bh,BYTE PTR [edx+0x6b7d7dcd]
  4011da:	inc    ebp
  4011db:	in     al,dx
  4011dc:	xchg   BYTE PTR [edx+eiz*2+0x7ca26053],bh
  4011e3:	jl     0x401261
  4011e5:	mov    ds:0xc77c7c7c,al
  4011ea:	pop    ds
  4011eb:	mov    ebx,0x544ee637
  4011f0:	sub    BYTE PTR [ecx+ebx*4],al
  4011f3:	enter  0x8bcb,0xa4
  4011f7:	xchg   esp,eax
  4011f8:	pop    edx
  4011f9:	sbb    bl,dl
  4011fb:	and    al,0x6
  4011fd:	adc    bh,BYTE PTR [esp+0x13]
  401201:	mov    dl,BYTE PTR [eax-0x2a]
  401204:	push   esp
  401205:	test   al,0x91
  401207:	scas   al,BYTE PTR es:[edi]
  401208:	imul   ecx,DWORD PTR [edi],0x4b
  40120b:	out    dx,al
  40120c:	out    0x6d,eax
  40120e:	add    eax,0x2050eb2e
  401213:	xor    al,BYTE PTR [edi+0x42]
  401216:	pop    edx
  401217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401218:	arpl   WORD PTR [edx],bp
  40121a:	retf   
  40121b:	fist   WORD PTR [eax+eiz*1]
  40121e:	and    eax,0x26eca3f4
  401223:	xchg   edx,eax
  401224:	fs pop es
  401226:	or     ah,BYTE PTR [ecx+0x3e6274f2]
  40122c:	cmp    BYTE PTR [edi+0x0],al
  40122f:	test   ah,bh
  401231:	imul   eax,DWORD PTR [edi+0x2888d5db],0x9f0f79c5
  40123b:	adc    DWORD PTR [eax+0x6e],edi
  40123e:	popf   
  40123f:	int3   
  401240:	mov    ds,edx
  401242:	bound  edi,QWORD PTR [ebp-0x76]
  401245:	push   cs
  401246:	jo     0x40124e
  401248:	lods   eax,DWORD PTR ds:[esi]
  401249:	jg     0x4012c3
  40124b:	push   edi
  40124c:	aam    0x40
  40124e:	sub    DWORD PTR [edx+0x393b8d48],ecx
  401254:	pop    edi
  401255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401256:	retf   0xf661
  401259:	or     al,BYTE PTR [esi+0x66]
  40125c:	sar    DWORD PTR [ebp+0x4],0x89
  401260:	out    0xe4,al
  401262:	(bad)  
  401263:	out    dx,al
  401264:	pop    ds
  401265:	sbb    al,dh
  401267:	cld    
  401268:	fist   WORD PTR [edi]
  40126a:	leave  
  40126b:	rol    BYTE PTR [edx],0x0
  40126e:	dec    esp
  40126f:	int    0x46
  401271:	rcl    BYTE PTR [eax-0xe],0xf9
  401275:	test   eax,0x2210dfca
  40127a:	shr    BYTE PTR [esi+0x5c],0xf6
  40127e:	aad    0x78
  401280:	cmp    eax,0x40e6143f
  401285:	jmp    0x4012aa
  401287:	(bad)  
  401288:	fld    st(1)
  40128a:	jp     0x401258
  40128c:	jne    0x401291
  40128e:	jle    0x40127d
  401290:	in     al,dx
  401291:	fs data16 jbe 0x4012b6
  401295:	in     al,dx
  401296:	imul   edi,DWORD PTR [ecx+edx*1],0x40
  40129a:	lods   al,BYTE PTR ds:[esi]
  40129b:	daa    
  40129c:	sahf   
  40129d:	ss mov bh,0x56
  4012a0:	push   edi
  4012a1:	test   ecx,ecx
  4012a3:	mov    DWORD PTR ds:0x413b56,0x53ab
  4012ad:	je     0x401398
  4012b3:	and    ecx,ecx
  4012b5:	mov    ecx,DWORD PTR [ebp+0x14]
  4012b8:	and    edi,edi
  4012ba:	jmp    0x40138d
  4012bf:	xchg   DWORD PTR [edi-0x31],eax
  4012c2:	or     ecx,edi
  4012c4:	mov    ebx,DWORD PTR [ebx+0x5b]
  4012c7:	dec    esi
  4012c8:	popa   
  4012c9:	enter  0x9cfc,0x5b
  4012cd:	loope  0x40131f
  4012cf:	call   0xa2bc8f53
  4012d4:	jl     0x401352
  4012d6:	jl     0x40127f
  4012d8:	ss xchg edi,eax
  4012da:	nop
  4012db:	mov    WORD PTR [ebx-0x69cd95e9],ss
  4012e1:	dec    ebx
  4012e2:	(bad)  
  4012e3:	cmp    esi,DWORD PTR [ecx+0x57f27b0b]
  4012e9:	cmp    BYTE PTR ds:0xce92d79d,ch
  4012ef:	retf   
  4012f0:	pop    edi
  4012f1:	push   eax
  4012f2:	loop   0x40135d
  4012f4:	or     DWORD PTR [ebx],esi
  4012f6:	ins    BYTE PTR es:[edi],dx
  4012f7:	add    DWORD PTR [ecx],edi
  4012f9:	add    ebx,edi
  4012fb:	xchg   ecx,eax
  4012fc:	mov    cl,0x9a
  4012fe:	cld    
  4012ff:	out    dx,al
  401300:	jg     0x4012b9
  401302:	pop    ds
  401303:	data16 jle 0x401345
  401306:	jae    0x401316
  401308:	mov    eax,0x9d184bde
  40130d:	push   ds
  40130e:	mov    ecx,0xf575d61b
  401313:	adc    eax,0xe632aafb
  401318:	cmp    BYTE PTR [eax],bl
  40131a:	cdq    
  40131b:	hlt    
  40131c:	(bad)  
  40131d:	jnp    0x4012c4
  40131f:	xor    al,0x34
  401321:	(bad)  
  401322:	pop    ss
  401323:	fwait
  401324:	jmp    0xa1d7:0x2cdca405
  40132b:	ja     0x4012d0
  40132d:	clc    
  40132e:	lock nop
  401330:	push   ebx
  401331:	das    
  401332:	ins    DWORD PTR es:[edi],dx
  401333:	cld    
  401334:	xchg   BYTE PTR [ebp+0x75388d12],ch
  40133a:	xchg   BYTE PTR [esp+ebx*2],ch
  40133d:	jb     0x4013a5
  40133f:	fldenv [esi]
  401341:	fwait
  401342:	dec    eax
  401343:	push   ebp
  401344:	mov    BYTE PTR [eax-0x693cbc51],0xab
  40134b:	cwde   
  40134c:	cmp    eax,0x3cd4d432
  401351:	cmp    dl,BYTE PTR [ebx+0x21]
  401354:	int3   
  401355:	xchg   edi,eax
  401356:	ficom  DWORD PTR [edi+eax*4+0x42]
  40135a:	xchg   esi,eax
  40135b:	in     al,dx
  40135c:	imul   ah
  40135e:	test   edx,ecx
  401360:	test   DWORD PTR [edx-0x75],eax
  401363:	push   0x7b5fe365
  401368:	mov    ebx,0x2d0a77be
  40136d:	inc    esp
  40136e:	imul   esi,DWORD PTR [edi],0x54
  401371:	stc    
  401372:	xchg   ecx,eax
  401373:	jae    0x4013ef
  401375:	jb     0x401306
  401377:	jns    0x4013a2
  401379:	sbb    DWORD PTR [esp+ebp*4],edx
  40137c:	xchg   DWORD PTR [eax-0x22eb3d61],esi
  401382:	sbb    BYTE PTR [ebx],0xfe
  401385:	cmp    DWORD PTR [esi-0x6b],0x38
  401389:	xchg   ebp,eax
  40138a:	push   ecx
  40138b:	inc    esi
  40138c:	xchg   ecx,eax
  40138d:	mov    ecx,DWORD PTR [ecx]
  40138f:	sub    DWORD PTR ds:0x4105cf,ebx
  401395:	mov    DWORD PTR [ebp-0x1c],ecx
  401398:	sbb    esi,ecx
  40139a:	imul   edx,eax
  40139d:	and    DWORD PTR ds:0x413b4e,0x618e
  4013a7:	mov    ecx,0x4573
  4013ac:	mov    DWORD PTR ds:0x4427b0,0x19
  4013b6:	cmp    DWORD PTR ds:0x4427b0,0x0
  4013bd:	je     0x4013f3
  4013c3:	cmp    DWORD PTR ds:0x4427b0,0x1a
  4013ca:	jne    0x4013d9
  4013d0:	push   DWORD PTR [ebp-0x1c]
  4013d3:	call   DWORD PTR ds:0x43c818
  4013d9:	xor    edi,edi
  4013db:	or     edi,DWORD PTR ds:0x4427b0
  4013e1:	dec    edi
  4013e2:	mov    DWORD PTR ds:0x4427b0,edi
  4013e8:	jmp    0x4013b6
  4013ed:	xor    DWORD PTR ds:0x43fbd8,edx
  4013f3:	add    edx,ecx
  4013f5:	inc    edi
  4013f6:	mov    esi,0x7879
  4013fb:	add    DWORD PTR ds:0x4427c0,edx
  401401:	mov    edi,0x1556
  401406:	sub    DWORD PTR ds:0x43fbfc,0x4105cb
  401410:	xchg   esi,ecx
  401412:	xor    DWORD PTR ds:0x445378,ecx
  401418:	sub    edx,edi
  40141a:	or     ecx,0x50d4
  401420:	xor    esi,esi
  401422:	mov    DWORD PTR [ebp-0x28],esi
  401425:	movzx  ecx,WORD PTR ds:0x445378
  40142c:	xor    DWORD PTR ds:0x44536c,ecx
  401432:	mov    DWORD PTR [ebp-0x2c],esi
  401435:	or     ecx,0x6619
  40143b:	mov    DWORD PTR [ebp-0x14],esi
  40143e:	mov    ecx,DWORD PTR ds:0x4105d7
  401444:	xor    DWORD PTR ds:0x413b46,ecx
  40144a:	jmp    0x40151d
  40144f:	ficom  WORD PTR [esi+0x7b7d5fa5]
  401455:	loop   0x401400
  401457:	sbb    al,0x21
  401459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40145a:	out    dx,eax
  40145b:	in     eax,0x10
  40145d:	aaa    
  40145e:	lock push ds
  401460:	jle    0x4014de
  401462:	jl     0x401406
  401464:	jl     0x4014e2
  401466:	jl     0x4014b3
  401468:	dec    eax
  401469:	jge    0x401491
  40146b:	xchg   edx,eax
  40146c:	loopne 0x401451
  40146e:	adc    eax,0xa2502cc
  401473:	je     0x401453
  401475:	ja     0x40145b
  401477:	and    bl,ch
  401479:	or     eax,0x29664b5e
  40147e:	pop    esi
  40147f:	scas   eax,DWORD PTR es:[edi]
  401480:	ret    
  401481:	jmp    0x995d:0xa9db7311
  401488:	arpl   WORD PTR ds:0xf6dd1e4a,bx
  40148e:	pop    ebp
  40148f:	sub    ebx,DWORD PTR [edi+0x20]
  401492:	test   DWORD PTR [ebp+0x465c8634],eax
  401498:	xor    ecx,DWORD PTR [eax+ebx*4+0x5e]
  40149c:	mov    dh,0xbd
  40149e:	mov    esp,0x32729474
  4014a3:	sti    
  4014a4:	and    BYTE PTR [edx],al
  4014a6:	dec    edx
  4014a7:	inc    ebp
  4014a8:	mov    edx,0x15da6e5d
  4014ad:	cmp    esi,esi
  4014af:	fsub   QWORD PTR fs:[eax+0x7d]
  4014b3:	in     al,0x9f
  4014b5:	jecxz  0x40144b
  4014b7:	adc    ebp,DWORD PTR [esi+esi*1]
  4014ba:	or     cl,BYTE PTR [edx]
  4014bc:	adc    eax,0x500fbac1
  4014c1:	sub    ebx,eax
  4014c3:	sub    dl,0x18
  4014c6:	mov    bl,0x61
  4014c8:	xor    al,0xb2
  4014ca:	jno    0x4014ee
  4014cc:	ins    DWORD PTR es:[edi],dx
  4014cd:	out    0xd6,eax
  4014cf:	push   eax
  4014d0:	jne    0x4014bc
  4014d2:	pusha  
  4014d3:	adc    DWORD PTR [edx-0xb],ecx
  4014d6:	or     DWORD PTR [ebp+edx*2+0xd],0x99380fe
  4014de:	sbb    ch,al
  4014e0:	push   ss
  4014e1:	mov    dl,0x22
  4014e3:	es sbb ebx,esi
  4014e6:	(bad)  
  4014e7:	fldenv [edx-0x45]
  4014ea:	sti    
  4014eb:	in     al,0xaf
  4014ed:	cld    
  4014ee:	xchg   BYTE PTR [esi-0x7ac5fb49],ah
  4014f4:	or     dh,dl
  4014f6:	mul    DWORD PTR [edi]
  4014f8:	cmp    cl,0xf7
  4014fb:	repnz adc eax,0x5dfd53d0
  401501:	and    dh,BYTE PTR [edx+0x52]
  401504:	out    dx,al
  401505:	dec    ebx
  401506:	mov    ebx,DWORD PTR [ebx-0x59]
  401509:	retf   0x9b10
  40150c:	fwait
  40150d:	sahf   
  40150e:	aad    0x3a
  401510:	jnp    0x401561
  401512:	sub    al,cl
  401514:	loopne 0x401516
  401516:	stc    
  401517:	xchg   edx,eax
  401518:	mov    eax,0x8e5925a8
  40151d:	mov    DWORD PTR [ebp-0x8],esi
  401520:	jmp    0x4015f3
  401525:	add    DWORD PTR [eax],edi
  401527:	repz push esp
  401529:	lods   eax,DWORD PTR ds:[esi]
  40152a:	addr16 std 
  40152c:	jge    0x401526
  40152e:	stc    
  40152f:	icebp  
  401530:	sahf   
  401531:	and    ch,BYTE PTR [esi]
  401533:	pop    edx
  401534:	call   0x7cbc937d
  401539:	mov    ds:0x947c7c7c,al
  40153e:	inc    edi
  40153f:	sub    edx,DWORD PTR [ecx]
  401541:	repz mov ebp,0x786a222e
  401547:	(bad)  
  401548:	jl     0x40157e
  40154a:	idiv   bh
  40154c:	and    al,0xd
  40154e:	jle    0x4014fa
  401550:	adc    eax,0x5e0d9247
  401555:	imul   esi,DWORD PTR [eax+edi*1],0x2c0a820b
  40155c:	xrelease xchg DWORD PTR [esi+ecx*2+0x19],edx
  401561:	pop    edi
  401562:	mov    al,ds:0xb6abde52
  401567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401568:	lds    edx,FWORD PTR [eax-0xc]
  40156b:	mov    esp,0xacae0b0
  401570:	aaa    
  401571:	push   esi
  401572:	xor    ecx,ebx
  401574:	sbb    DWORD PTR [ecx+0x72abceea],ebp
  40157a:	or     al,0x87
  40157c:	mov    WORD PTR [edx],?
  40157e:	xor    BYTE PTR [edi-0x41],0xb7
  401582:	mov    al,ds:0x5b3da90f
  401587:	push   ebp
  401588:	jge    0x401555
  40158a:	sub    cl,ch
  40158c:	dec    ebx
  40158d:	imul   esi,edi,0x4c
  401590:	jg     0x4015e9
  401592:	jae    0x401559
  401594:	sti    
  401595:	popf   
  401596:	(bad)  
  401597:	or     eax,0x72d8f823
  40159c:	pushf  
  40159d:	or     DWORD PTR [esi],esp
  40159f:	add    ecx,ecx
  4015a1:	push   ecx
  4015a2:	dec    edx
  4015a3:	inc    edx
  4015a4:	adc    bl,ah
  4015a6:	jae    0x40158d
  4015a8:	hlt    
  4015a9:	add    ah,BYTE PTR [edi+0xb923142]
  4015af:	push   ebp
  4015b0:	xchg   DWORD PTR [eax],esi
  4015b2:	mov    eax,0x6a33bfca
  4015b7:	dec    ebp
  4015b8:	xchg   ebp,eax
  4015ba:	push   es
  4015bb:	cmp    eax,0x3e68a015
  4015c0:	push   ecx
  4015c1:	adc    al,0x1e
  4015c3:	mov    ecx,0x8ade9351
  4015c8:	lods   al,BYTE PTR ds:[esi]
  4015c9:	test   al,0xea
  4015cb:	dec    edi
  4015cc:	je     0x40154f
  4015ce:	mov    bh,0xe9
  4015d0:	xor    eax,DWORD PTR [ebx]
  4015d2:	dec    esi
  4015d3:	jl     0x401559
  4015d5:	(bad)  
  4015d6:	call   0x4997:0xc89cc813
  4015dd:	push   0x9432d7e6
  4015e2:	mov    ebx,ebx
  4015e4:	pop    eax
  4015e5:	dec    ebp
  4015e6:	ret    
  4015e7:	or     ch,BYTE PTR [edx+0x6f]
  4015ea:	cmc    
  4015eb:	retf   0x68e0
  4015ee:	aas    
  4015ef:	sub    al,0x22
  4015f1:	shl    DWORD PTR [edi-0x7e17b275],0x1d
  4015f8:	ret    
  4015f9:	add    eax,0x5c70041
  4015fe:	inc    ecx
  4015ff:	add    BYTE PTR [ebx],dh
  401601:	enter  0x5c7,0xcb
  401605:	add    eax,0x130041
  40160a:	add    BYTE PTR [eax],al
  40160c:	cmp    DWORD PTR ds:0x4105cb,0x0
  401613:	je     0x401657
  401619:	cmp    DWORD PTR ds:0x4105cb,0x2
  401620:	jne    0x40162f
  401626:	push   DWORD PTR [ebp-0xc]
  401629:	call   DWORD PTR ds:0x43c81c
  40162f:	cmp    DWORD PTR ds:0x4105cb,0x3
  401636:	jne    0x401647
  40163c:	mov    eax,ds:0x4105cb
  401641:	dec    eax
  401642:	mov    ds:0x4105cb,eax
  401647:	mov    eax,ds:0x4105cb
  40164c:	dec    eax
  40164d:	mov    ds:0x4105cb,eax
  401652:	jmp    0x40160c
  401657:	xor    edi,edi
  401659:	add    ecx,ebx
  40165b:	mov    eax,ds:0x413b5a
  401660:	mov    DWORD PTR [ebp-0x20],ecx
  401663:	mov    eax,DWORD PTR [ebp-0x20]
  401666:	mov    DWORD PTR ds:0x4105c7,0x348
  401670:	je     0x402298
  401676:	mov    eax,DWORD PTR [ebp-0x4]
  401679:	xor    DWORD PTR ds:0x4427b0,0x445368
  401683:	xor    eax,0x7510857
  401688:	jmp    0x40175b
  40168d:	in     eax,0x57
  40168f:	iret   
  401690:	call   0x2571:0x577dba5d
  401697:	mov    esi,0xd01ed46a
  40169c:	xchg   BYTE PTR [edx-0x5d83838f],cl
  4016a2:	jl     0x401720
  4016a4:	jl     0x40163b
  4016a6:	hlt    
  4016a7:	jne    0x401644
  4016a9:	push   ebp
  4016aa:	fdiv   QWORD PTR [esp+ecx*8-0x488c01b3]
  4016b1:	xor    bl,dl
  4016b3:	aaa    
  4016b4:	or     DWORD PTR [esi],edx
  4016b6:	mov    ah,0xbb
  4016b8:	test   al,0x6
  4016ba:	push   ss
  4016bb:	xchg   ecx,eax
  4016bc:	jp     0x40170d
  4016be:	xor    bh,BYTE PTR ds:0x8fc3f7f2
  4016c4:	loope  0x4016e9
  4016c6:	iret   
  4016c7:	aad    0x36
  4016c9:	sbb    eax,0xf9303626
  4016ce:	and    eax,DWORD PTR ds:0x67ecf3f5
  4016d4:	lahf   
  4016d5:	ins    BYTE PTR es:[edi],dx
  4016d6:	cmc    
  4016d7:	lds    ebx,FWORD PTR [ecx+0x329f2270]
  4016dd:	jecxz  0x4016b2
  4016df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e0:	jp     0x401699
  4016e2:	out    0xb2,eax
  4016e4:	fcom   DWORD PTR [edi+esi*1]
  4016e7:	test   al,0x48
  4016e9:	fidivr DWORD PTR [edx+0x1d466306]
  4016ef:	sar    BYTE PTR [ebx+0x4b],cl
  4016f2:	arpl   WORD PTR [edi+ebx*4],sp
  4016f5:	aam    0x5c
  4016f7:	push   ecx
  4016f8:	push   edx
  4016f9:	pop    esi
  4016fa:	mov    dl,BYTE PTR [esi-0x23]
  4016fd:	fbstp  TBYTE PTR [esi]
  4016ff:	cwde   
  401700:	xchg   DWORD PTR [edx+0x60e6674d],ecx
  401706:	(bad)  
  401707:	jne    0x40171d
  401709:	outs   dx,BYTE PTR ds:[esi]
  40170a:	jmp    0x401770
  40170c:	mov    ds:0x24a78eb8,al
  401711:	jae    0x4016ce
  401713:	mov    ah,0xfc
  401715:	adc    BYTE PTR [esi-0x2e604eca],0x5a
  40171c:	ja     0x4016a6
  40171e:	cwde   
  40171f:	fbld   TBYTE PTR [esi+0x3dc8ab4]
  401725:	mov    BYTE PTR [ebx-0x74],ah
  401728:	inc    esp
  401729:	and    BYTE PTR [ecx+0x2504576],0x17
  401730:	lods   eax,DWORD PTR ds:[esi]
  401731:	out    dx,eax
  401732:	xchg   esp,ebp
  401734:	adc    dl,BYTE PTR [edi-0x74650432]
  40173a:	push   esi
  40173b:	xchg   edi,eax
  40173c:	stc    
  40173d:	and    BYTE PTR [ebx],cl
  40173f:	cmp    al,0x8e
  401741:	mov    cl,0xfe
  401743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401744:	out    dx,al
  401745:	xlat   BYTE PTR ds:[ebx]
  401746:	std    
  401747:	jo     0x401782
  401749:	imul   edx,DWORD PTR [ebx+0x7584cfd9],0x20
  401750:	in     al,0x57
  401752:	adc    ebx,esp
  401754:	or     BYTE PTR [eax+0x46],0xc5
  401758:	ins    BYTE PTR es:[edi],dx
  401759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40175a:	sub    BYTE PTR [ebx],al
  40175c:	ret    
  40175d:	mov    DWORD PTR ds:0x43fbfc,0x156f
  401767:	cmp    edi,eax
  401769:	mov    DWORD PTR ds:0x44536c,0x5e58
  401773:	jne    0x401eef
  401779:	push   DWORD PTR [ebp+0x8]
  40177c:	add    DWORD PTR ds:0x4427bc,0x43fbf8
  401786:	call   0x409b25
  40178b:	mov    DWORD PTR ds:0x44536c,0x72d4
  401795:	mov    DWORD PTR [ebp-0x20],eax
  401798:	and    DWORD PTR ds:0x4105bf,0x0
  4017a2:	jmp    0x4017b4
  4017a7:	mov    ecx,DWORD PTR ds:0x4105bf
  4017ad:	inc    ecx
  4017ae:	mov    DWORD PTR ds:0x4105bf,ecx
  4017b4:	cmp    DWORD PTR ds:0x4105bf,0x16
  4017bb:	jae    0x4018af
  4017c1:	cmp    DWORD PTR ds:0x4105bf,0x25
  4017c8:	jne    0x4017d7
  4017ce:	push   DWORD PTR [ebp-0x1c]
  4017d1:	call   DWORD PTR ds:0x43c820
  4017d7:	jmp    0x4017a7
  4017dc:	jmp    0x4018af
  4017e1:	fdiv   st(2),st
  4017e3:	jmp    0xef7a:0x5462fa52
  4017ea:	into   
  4017eb:	outs   dx,DWORD PTR ds:[esi]
  4017ec:	inc    ecx
  4017ed:	sbb    cl,BYTE PTR [ebx]
  4017ef:	cmp    esp,0x7c7c7030
  4017f5:	mov    ds:0x57c7c7c,al
  4017fa:	mov    ebx,0xd0bdf150
  4017ff:	cmp    eax,0x2fdbf489
  401804:	pop    ebx
  401805:	out    dx,eax
  401806:	in     eax,0xf9
  401808:	push   ds
  401809:	in     eax,dx
  40180a:	dec    esi
  40180b:	fidivr WORD PTR ds:0xf94d34cb
  401811:	retf   0x4105
  401814:	sti    
  401815:	scas   al,BYTE PTR es:[edi]
  401816:	jmp    0x40179c
  401818:	retf   0xcc17
  40181b:	ins    DWORD PTR es:[edi],dx
  40181c:	inc    ecx
  40181d:	inc    BYTE PTR [ebp+0x511ed6b]
  401823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401824:	jle    0x401865
  401826:	popf   
  401827:	dec    ebx
  401828:	mov    bl,ch
  40182a:	jo     0x4017b0
  40182c:	add    al,0xdd
  40182e:	nop
  40182f:	pop    ss
  401830:	imul   ebp,DWORD PTR [ebx+eiz*4+0x5c5cf7db],0xfffffff8
  401838:	data16 mov al,0x39
  40183b:	repnz repz out dx,eax
  40183e:	les    di,DWORD PTR [ecx]
  401841:	test   eax,0xbf8848bb
  401846:	stc    
  401847:	cmp    ch,cl
  401849:	lea    edi,[edx]
  40184b:	jns    0x4017dc
  40184d:	xchg   ebx,eax
  40184e:	int    0x6d
  401850:	into   
  401851:	push   cs
  401852:	push   eax
  401853:	pop    edi
  401854:	dec    ebp
  401855:	inc    ebp
  401856:	cmp    BYTE PTR [ebp-0x4],cl
  401859:	cmp    eax,0x528d171a
  40185e:	ret    0xf4f3
  401861:	idiv   BYTE PTR [ebp-0x1e80a6d3]
  401867:	and    al,0x8f
  401869:	mov    gs,WORD PTR [eax-0x2e347f07]
  40186f:	ins    DWORD PTR es:[edi],dx
  401870:	adc    al,0x6
  401872:	mov    al,ds:0xf499eba0
  401877:	mov    BYTE PTR [esi-0xb52f8a8],dh
  40187d:	pop    eax
  40187e:	imul   eax,DWORD PTR [ecx+ebx*2+0x533bbcab],0xffffff81
  401886:	sub    eax,0x4b076989
  40188b:	push   ebp
  40188c:	gs jbe 0x4018b2
  40188f:	out    dx,eax
  401890:	lods   al,BYTE PTR ds:[esi]
  401891:	mov    ch,0xf3
  401893:	push   edx
  401894:	(bad)  
  401895:	ss mov ah,0xd8
  401898:	imul   esp,ebx,0xffffffe8
  40189b:	mov    ebx,0x63ff7c82
  4018a0:	and    DWORD PTR [ebx-0x70],ecx
  4018a3:	test   al,0x52
  4018a5:	test   eax,0xd597983a
  4018aa:	mov    DWORD PTR [edx],ebx
  4018ac:	xor    al,0x65
  4018ae:	das    
  4018af:	mov    eax,DWORD PTR [ebp-0x4]
  4018b2:	xor    DWORD PTR ds:0x445364,edi
  4018b8:	mov    ecx,DWORD PTR [ebp-0x20]
  4018bb:	adc    DWORD PTR ds:0x4427ac,ebx
  4018c1:	mov    esi,0x7510857
  4018c6:	xor    eax,esi
  4018c8:	adc    DWORD PTR ds:0x43fbe4,0x413b5a
  4018d2:	add    eax,ebx
  4018d4:	mov    DWORD PTR ds:0x43fbf0,0x1172
  4018de:	cmp    ecx,eax
  4018e0:	mov    DWORD PTR ds:0x43fbf4,0x309e
  4018ea:	je     0x4021a9
  4018f0:	sub    DWORD PTR ds:0x4105cb,0x4105c3
  4018fa:	push   DWORD PTR [ebp-0x20]
  4018fd:	jmp    0x4019d0
  401902:	js     0x40197b
  401904:	dec    ecx
  401905:	mov    bh,BYTE PTR [ebp+0x4a]
  401908:	jnp    0x401903
  40190a:	hlt    
  40190b:	push   esi
  40190c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40190d:	imul   ebp,DWORD PTR [edi-0x61],0xfffffffc
  401911:	jbe    0x401979
  401913:	jo     0x401991
  401915:	jl     0x4018b9
  401917:	jl     0x401995
  401919:	jl     0x40189d
  40191b:	cmp    esi,ecx
  40191d:	and    esp,DWORD PTR ds:0x7758b61d
  401923:	pushf  
  401924:	push   ebp
  401925:	loopne 0x401953
  401927:	push   esp
  401928:	out    dx,al
  401929:	call   0xc1e0:0x6287835d
  401930:	xor    ch,BYTE PTR [edi-0x26]
  401933:	cmp    bh,BYTE PTR ds:[ebx-0x50]
  401937:	sbb    dh,BYTE PTR [ebx+ebp*1-0x8]
  40193b:	jg     0x401995
  40193d:	push   0x6f
  40193f:	xor    eax,0x6b566b4b
  401944:	xor    ebp,edx
  401946:	les    edx,FWORD PTR [ebx+0x63c48f7b]
  40194c:	(bad)  
  40194d:	mov    al,0x8e
  40194f:	inc    edx
  401950:	xor    esp,DWORD PTR [eax]
  401952:	push   ds
  401953:	add    esi,edi
  401955:	data16 stos BYTE PTR es:[edi],al
  401957:	jmp    0xcfef3b46
  40195c:	scas   eax,DWORD PTR es:[edi]
  40195d:	mov    ch,0xd2
  40195f:	enter  0xc995,0x10
  401963:	push   ds
  401964:	(bad)  
  401965:	das    
  401966:	in     eax,0xfa
  401968:	pushf  
  401969:	push   esi
  40196a:	ins    BYTE PTR es:[edi],dx
  40196b:	test   eax,0x8f4724df
  401970:	pusha  
  401971:	and    ecx,DWORD PTR [ebp-0x53e0bc90]
  401977:	out    dx,eax
  401978:	mov    edx,0x26046502
  40197d:	test   DWORD PTR [eax+0x1f],ecx
  401980:	pop    edx
  401981:	rcr    DWORD PTR ds:0xd83521f,cl
  401987:	xor    DWORD PTR [edi],0x62
  40198a:	loop   0x4019c6
  40198c:	xlat   BYTE PTR ds:[ebx]
  40198d:	mov    al,ds:0x8a9f71af
  401992:	inc    ebx
  401993:	icebp  
  401994:	sbb    DWORD PTR [ebx],ecx
  401996:	lea    edi,[edx]
  401998:	jb     0x401968
  40199a:	fld    TBYTE PTR [eax]
  40199c:	xchg   esp,eax
  40199d:	hlt    
  40199e:	mov    BYTE PTR [ecx+0x262ece06],dh
  4019a4:	pop    es
  4019a5:	and    esp,DWORD PTR [eax-0x56b6ad91]
  4019ab:	and    ch,ah
  4019ad:	cmp    ch,BYTE PTR [ebp-0x5d]
  4019b0:	fsubr  st(6),st
  4019b2:	xchg   edi,eax
  4019b3:	sar    DWORD PTR [edx],cl
  4019b5:	fbstp  TBYTE PTR [ebx]
  4019b7:	ror    esp,1
  4019b9:	cli    
  4019ba:	test   eax,0x8a8b9ebc
  4019bf:	add    eax,0x4e6489f9
  4019c4:	(bad)  
  4019c5:	stc    
  4019c6:	pop    esi
  4019c7:	jb     0x401969
  4019c9:	jp     0x401a29
  4019cb:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4019cd:	aam    0x84
  4019cf:	xchg   edi,edi
  4019d1:	jne    0x4019db
  4019d3:	call   0x408097
  4019d8:	jmp    0x401aab
  4019dd:	cld    
  4019de:	mov    ecx,eax
  4019e0:	mov    ecx,ebx
  4019e2:	dec    ebx
  4019e3:	mov    edi,0x495a648b
  4019e8:	aad    0xfd
  4019ea:	adc    eax,0x73ac4a65
  4019ef:	jl     0x401a6d
  4019f1:	mov    ds:0x907c7c7c,al
  4019f6:	out    0xe2,eax
  4019f8:	lock popa 
  4019fa:	stc    
  4019fb:	push   ss
  4019fc:	xchg   ecx,eax
  4019fd:	aas    
  4019fe:	mov    ah,0xd2
  401a00:	mov    dl,0xfe
  401a02:	in     al,0x4c
  401a04:	mov    bh,0xf5
  401a06:	pop    eax
  401a07:	jnp    0x4019d5
  401a09:	fbld   TBYTE PTR [edx-0x57a372ef]
  401a0f:	xor    edi,DWORD PTR [esi+0x1332571]
  401a15:	ror    edx,1
  401a17:	sub    ah,BYTE PTR [ecx]
  401a19:	gs pop es
  401a1b:	stos   BYTE PTR es:[edi],al
  401a1c:	jnp    0x401a33
  401a1e:	adc    edi,edi
  401a20:	cmp    ebx,ecx
  401a22:	mov    DWORD PTR [edi-0x65],ebx
  401a25:	pop    ebx
  401a26:	jae    0x401a49
  401a28:	inc    ebp
  401a29:	call   0x9306:0x4ccc7d86
  401a30:	(bad)  
  401a31:	xchg   ecx,eax
  401a32:	icebp  
  401a33:	dec    esp
  401a34:	fs jae 0x401a1a
  401a37:	popa   
  401a38:	iret   
  401a39:	rcr    BYTE PTR [edi+0x2aece48f],cl
  401a3f:	pop    edx
  401a40:	sahf   
  401a41:	hlt    
  401a42:	push   0x4b1a3831
  401a47:	jmp    FWORD PTR [ebx+eax*1-0x1abca881]
  401a4e:	out    dx,al
  401a4f:	mov    edx,0xa63fc40d
  401a54:	aam    0x5
  401a56:	(bad)  [eax-0x58a16403]
  401a5c:	cmp    eax,0x6cba4d60
  401a61:	dec    esi
  401a62:	cmp    al,0xa4
  401a64:	shl    BYTE PTR [ebx-0x29526f0b],0xd8
  401a6b:	cdq    
  401a6c:	cmp    eax,0x797fe010
  401a71:	out    0xc2,eax
  401a73:	xchg   esi,eax
  401a74:	push   ecx
  401a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a76:	ficom  DWORD PTR [eax-0x2e4f363e]
  401a7c:	jnp    0x401a65
  401a7e:	adc    eax,0x6d2ac222
  401a83:	cmp    DWORD PTR [ecx-0x7b7bc6d2],eax
  401a89:	mov    ch,0x4e
  401a8b:	jbe    0x401a24
  401a8d:	cmp    al,0x76
  401a8f:	sbb    BYTE PTR ds:0x171b601,0xf6
  401a96:	dec    edi
  401a97:	and    eax,0x8edf037
  401a9c:	sub    bl,BYTE PTR ds:0x400a141b
  401aa2:	pop    ds
  401aa3:	push   edi
  401aa4:	rcl    BYTE PTR [ebx+0x6bdc45c0],1
  401aaa:	mov    al,ds:0x8bec4589
  401aaf:	inc    ebp
  401ab0:	cld    
  401ab1:	add    DWORD PTR ds:0x4427a4,ecx
  401ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  401aba:	xor    eax,esi
  401abc:	add    eax,ebx
  401abe:	mov    DWORD PTR ds:0x413b52,0x6998
  401ac8:	cmp    ecx,eax
  401aca:	mov    DWORD PTR ds:0x4427ac,0x4e4a
  401ad4:	je     0x4021a9
  401ada:	mov    eax,DWORD PTR [ebp-0x14]
  401add:	mov    eax,DWORD PTR [eax+0x18]
  401ae0:	and    DWORD PTR ds:0x43fbec,0x0
  401aea:	xor    ecx,ecx
  401aec:	add    ecx,DWORD PTR ds:0x43fbec
  401af2:	inc    ecx
  401af3:	mov    DWORD PTR ds:0x43fbec,ecx
  401af9:	cmp    DWORD PTR ds:0x43fbec,0x7
  401b00:	jne    0x401b19
  401b06:	push   0x41080d
  401b0b:	push   0x4105df
  401b10:	push   DWORD PTR [ebp-0x1c]
  401b13:	call   DWORD PTR ds:0x43c824
  401b19:	cmp    DWORD PTR ds:0x43fbec,0x6
  401b20:	jne    0x401b35
  401b26:	xor    ecx,ecx
  401b28:	xor    ecx,DWORD PTR ds:0x43fbec
  401b2e:	inc    ecx
  401b2f:	mov    DWORD PTR ds:0x43fbec,ecx
  401b35:	cmp    DWORD PTR ds:0x43fbec,0x12
  401b3c:	jb     0x401aea
  401b42:	sub    DWORD PTR ds:0x413b56,0x3b9b
  401b4c:	jmp    0x401c1f
  401b51:	inc    ecx
  401b52:	adc    eax,0x9d621a92
  401b57:	jns    0x401bc6
  401b59:	retf   
  401b5a:	push   cs
  401b5b:	ins    BYTE PTR es:[edi],dx
  401b5c:	jno    0x401af9
  401b5e:	das    
  401b5f:	mov    bh,0x42
  401b61:	shl    BYTE PTR [edx+0x7c],cl
  401b64:	jl     0x401b08
  401b66:	jl     0x401be4
  401b68:	jl     0x401b37
  401b6a:	ret    
  401b6b:	out    dx,eax
  401b6c:	push   es
  401b6d:	mov    ds:0x83efcfe9,al
  401b72:	mov    ch,0x1e
  401b74:	mov    ebp,0xdf7c32c4
  401b79:	inc    edi
  401b7a:	or     ah,BYTE PTR [eax+ecx*4]
  401b7d:	cdq    
  401b7e:	pop    eax
  401b7f:	jne    0x401bc5
  401b81:	fsub   DWORD PTR [eax-0x15]
  401b84:	sbb    BYTE PTR [eax+0x1fa24411],dh
  401b8a:	in     eax,0x99
  401b8c:	cwde   
  401b8d:	fild   WORD PTR [ebx+ebx*2-0x58b4d2c0]
  401b94:	and    al,0x5c
  401b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b97:	push   esp
  401b98:	add    edx,DWORD PTR [eax-0xe]
  401b9b:	xchg   ebp,eax
  401b9c:	arpl   WORD PTR [ecx+0x1b],di
  401b9f:	jae    0x401b85
  401ba1:	pop    ss
  401ba2:	mov    BYTE PTR [eax],0xf0
  401ba5:	xor    DWORD PTR [edi+0x200a8922],eax
  401bab:	iret   
  401bac:	cmp    DWORD PTR [ecx+0x7f],ecx
  401baf:	adc    ecx,DWORD PTR [eax+0x70c1a114]
  401bb5:	xchg   bh,ch
  401bb7:	fwait
  401bb8:	lods   al,BYTE PTR ds:[esi]
  401bb9:	pusha  
  401bba:	ins    DWORD PTR es:[edi],dx
  401bbb:	gs rdpmc 
  401bbe:	bound  esp,QWORD PTR [ebp-0x406fc13d]
  401bc4:	fistp  QWORD PTR [edx+0x55]
  401bc7:	mov    ch,BYTE PTR [eax+0x4a]
  401bca:	pop    ss
  401bcb:	add    BYTE PTR [esi-0x549b6218],dh
  401bd1:	sub    DWORD PTR [eax+0x47],edx
  401bd4:	cdq    
  401bd5:	push   edi
  401bd6:	outs   dx,BYTE PTR ds:[esi]
  401bd7:	fisubr WORD PTR [edx+ebx*2]
  401bda:	test   BYTE PTR [eax-0x12],al
  401bdd:	mov    bh,0x8e
  401bdf:	aam    0x6
  401be1:	aas    
  401be2:	jnp    0x401b80
  401be4:	les    edi,FWORD PTR [eax+0x48]
  401be7:	out    0x9b,al
  401be9:	mov    dl,0xaa
  401beb:	popf   
  401bec:	mov    edi,0x6e3fe620
  401bf1:	add    DWORD PTR [ecx],ecx
  401bf3:	outs   dx,DWORD PTR ds:[esi]
  401bf4:	fstp   DWORD PTR [edi-0x25]
  401bf7:	in     eax,dx
  401bf8:	ins    DWORD PTR es:[edi],dx
  401bf9:	sub    bl,BYTE PTR [ebx-0x65edcb05]
  401bff:	xlat   BYTE PTR ds:[ebx]
  401c00:	lea    eax,[ebx-0x5e]
  401c03:	mov    cl,BYTE PTR [ebp-0x80]
  401c06:	repz das 
  401c08:	xlat   BYTE PTR ds:[ebx]
  401c09:	ret    
  401c0a:	rol    DWORD PTR [edx],cl
  401c0c:	xchg   DWORD PTR [ebp-0x178ca804],eax
  401c12:	mov    ah,0xcc
  401c14:	push   0x979244c2
  401c19:	mov    dl,0x88
  401c1b:	inc    edx
  401c1c:	gs mov esp,0xe0458991
  401c22:	and    ecx,0x68b3
  401c28:	mov    eax,DWORD PTR [ebp-0x14]
  401c2b:	mov    ecx,DWORD PTR [ebp+0x8]
  401c2e:	and    DWORD PTR ds:0x43fbf4,0x4427b8
  401c38:	add    ecx,DWORD PTR [eax+0x20]
  401c3b:	movzx  eax,BYTE PTR ds:0x44537c
  401c42:	and    eax,DWORD PTR ds:0x4427bc
  401c48:	mov    ds:0x44537c,eax
  401c4d:	mov    DWORD PTR [ebp-0x28],ecx
  401c50:	sub    DWORD PTR ds:0x413b5e,ecx
  401c56:	mov    eax,DWORD PTR [ebp-0x14]
  401c59:	and    DWORD PTR ds:0x4105cb,0x0
  401c63:	jmp    0x401c75
  401c68:	mov    ecx,DWORD PTR ds:0x4105cb
  401c6e:	inc    ecx
  401c6f:	mov    DWORD PTR ds:0x4105cb,ecx
  401c75:	cmp    DWORD PTR ds:0x4105cb,0x1d
  401c7c:	jae    0x401cc9
  401c82:	cmp    DWORD PTR ds:0x4105cb,0x9
  401c89:	jne    0x401caa
  401c8f:	push   DWORD PTR [ebp-0x20]
  401c92:	push   0x8068
  401c97:	push   0x67b9
  401c9c:	push   0x41082b
  401ca1:	push   DWORD PTR [ebp-0x24]
  401ca4:	call   DWORD PTR ds:0x43c5a8
  401caa:	cmp    DWORD PTR ds:0x4105cb,0x8
  401cb1:	jne    0x401cc4
  401cb7:	mov    ecx,DWORD PTR ds:0x4105cb
  401cbd:	inc    ecx
  401cbe:	mov    DWORD PTR ds:0x4105cb,ecx
  401cc4:	jmp    0x401c68
  401cc9:	mov    ecx,DWORD PTR [ebp+0x8]
  401ccc:	not    DWORD PTR ds:0x43fbe4
  401cd2:	add    ecx,DWORD PTR [eax+0x24]
  401cd5:	xor    DWORD PTR ds:0x4427b8,0x6435
  401cdf:	mov    DWORD PTR [ebp-0x2c],ecx
  401ce2:	jmp    0x401db5
  401ce7:	cmp    edi,DWORD PTR [ebx]
  401ce9:	mov    eax,0xbd95b815
  401cee:	cmp    eax,0x3403dcf7
  401cf3:	icebp  
  401cf4:	pop    ds
  401cf5:	pop    ds
  401cf6:	ins    DWORD PTR es:[edi],dx
  401cf7:	sbb    BYTE PTR [ebp+0x7c],dh
  401cfa:	jl     0x401c9e
  401cfc:	jl     0x401d7a
  401cfe:	jl     0x401cd7
  401d00:	push   ss
  401d01:	inc    edx
  401d02:	cdq    
  401d03:	and    ebp,DWORD PTR [edi+0x320a76e7]
  401d09:	lea    ebp,[eax]
  401d0b:	inc    edx
  401d0c:	jno    0x401cc4
  401d0e:	pop    edi
  401d0f:	shr    BYTE PTR [ebp-0x15fc45a],1
  401d15:	add    al,0xaa
  401d17:	cmp    BYTE PTR [edi+0x26],cl
  401d1a:	paddusb mm6,QWORD PTR [edi]
  401d1d:	sbb    al,0x91
  401d1f:	push   es
  401d20:	ja     0x401cbc
  401d22:	mov    edx,0x171af3e2
  401d27:	and    DWORD PTR [ebx-0x388e0553],esp
  401d2d:	cli    
  401d2e:	bound  eax,QWORD PTR [ebx+0x5a]
  401d31:	mov    al,BYTE PTR [esi-0x10]
  401d34:	iret   
  401d35:	xor    ecx,DWORD PTR [ebx-0x299edbde]
  401d3b:	enter  0xa512,0xa4
  401d3f:	(bad)  [eax-0x4c]
  401d42:	jp     0x401dae
  401d44:	retf   0xd065
  401d47:	xor    esp,edx
  401d49:	je     0x401cfe
  401d4b:	rcl    DWORD PTR [ecx-0x7b],1
  401d4e:	pop    ss
  401d4f:	or     ecx,DWORD PTR [ebp-0x2d]
  401d52:	add    bh,dh
  401d54:	mov    ebx,0x29c4cd5b
  401d59:	adc    BYTE PTR [eax-0x36],dl
  401d5c:	dec    edi
  401d5d:	or     eax,0x3349d685
  401d62:	addr16 mov al,cl
  401d65:	fst    QWORD PTR [eax-0x47]
  401d68:	nop
  401d69:	xor    esp,DWORD PTR [ecx+0x11]
  401d6c:	inc    ecx
  401d6d:	aam    0x24
  401d6f:	outs   dx,BYTE PTR ds:[esi]
  401d70:	mov    WORD PTR [ecx],fs
  401d72:	cmp    al,0x60
  401d74:	mov    ch,0x86
  401d76:	mov    bh,0x38
  401d78:	and    BYTE PTR [eax+0x68],0x9d
  401d7c:	dec    eax
  401d7d:	leave  
  401d7e:	push   0x36
  401d80:	xor    al,0x73
  401d82:	pop    esp
  401d83:	ds std 
  401d85:	adc    esi,DWORD PTR [esi]
  401d87:	adc    DWORD PTR [ebx],edx
  401d89:	(bad)  
  401d8a:	jmp    0x401d52
  401d8c:	fisub  WORD PTR [esi]
  401d8e:	push   ss
  401d8f:	imul   edx,eax,0x83d36225
  401d95:	cwde   
  401d96:	jae    0x401d33
  401d98:	jge    0x401d42
  401d9a:	mov    eax,0x725b54f2
  401d9f:	fisttp DWORD PTR [esi+0x34d3419b]
  401da5:	mov    ds:0x4c48cd5,al
  401daa:	dec    esp
  401dab:	or     al,bl
  401dad:	xchg   esp,eax
  401dae:	fwait
  401daf:	push   eax
  401db0:	add    bl,BYTE PTR [esp+ebp*1]
  401db3:	(bad)  
  401db4:	mov    ebx,0xc7ec458b
  401db9:	add    eax,0x4105db
  401dbe:	sbb    DWORD PTR [eax],eax
  401dc0:	add    BYTE PTR [eax],al
  401dc2:	cmp    DWORD PTR ds:0x4105db,0x0
  401dc9:	je     0x401e11
  401dcf:	cmp    DWORD PTR ds:0x4105db,0xb
  401dd6:	jne    0x401de5
  401ddc:	push   DWORD PTR [ebp-0x24]
  401ddf:	call   DWORD PTR ds:0x43c5ac
  401de5:	cmp    DWORD PTR ds:0x4105db,0xc
  401dec:	jne    0x401dff
  401df2:	mov    ecx,DWORD PTR ds:0x4105db
  401df8:	dec    ecx
  401df9:	mov    DWORD PTR ds:0x4105db,ecx
  401dff:	mov    ecx,DWORD PTR ds:0x4105db
  401e05:	dec    ecx
  401e06:	mov    DWORD PTR ds:0x4105db,ecx
  401e0c:	jmp    0x401dc2
  401e11:	mov    ecx,DWORD PTR [ebp+0x8]
  401e14:	add    ecx,DWORD PTR [eax+0x1c]
  401e17:	xor    esi,esi
  401e19:	mov    DWORD PTR [ebp-0x14],ecx
  401e1c:	jmp    0x401eef
  401e21:	xor    al,0x72
  401e23:	mov    ds:0x46657dd5,eax
  401e28:	sub    eax,0xe5b1e0bc
  401e2d:	jmp    0x401e2c
  401e2f:	bound  edx,QWORD PTR [esi+0x4e]
  401e32:	jne    0x401eb0
  401e34:	jl     0x401dd8
  401e36:	jl     0x401eb4
  401e38:	jl     0x401e52
  401e3a:	adc    al,BYTE PTR [ecx-0x591cf3fc]
  401e40:	rol    bl,0xf2
  401e43:	lea    eax,[ecx-0x24]
  401e46:	mov    bl,0xa3
  401e48:	xchg   edi,eax
  401e49:	mov    al,ds:0x1304decd
  401e4e:	fmul   QWORD PTR [esi+0x26d4b12a]
  401e54:	mov    eax,0x60989cf
  401e59:	jnp    0x401ebf
  401e5b:	pusha  
  401e5c:	mov    dl,0x96
  401e5e:	fwait
  401e5f:	cld    
  401e60:	int3   
  401e61:	in     al,dx
  401e62:	push   esp
  401e63:	jp     0x401e52
  401e65:	sbb    al,0x19
  401e67:	out    dx,al
  401e68:	mov    eax,DWORD PTR [ebx+0x6d885451]
  401e6e:	outs   dx,DWORD PTR ds:[esi]
  401e6f:	mov    WORD PTR [ecx+0xdf368d6],ds
  401e75:	push   ebp
  401e76:	sub    al,0xd6
  401e78:	popa   
  401e79:	mov    cl,0x40
  401e7b:	inc    ecx
  401e7c:	int3   
  401e7d:	retf   0x84ba
  401e80:	clc    
  401e81:	je     0x401e13
  401e83:	sti    
  401e84:	inc    ecx
  401e85:	sti    
  401e86:	(bad)  
  401e88:	mov    dl,0x3
  401e8a:	aad    0x6
  401e8c:	imul   ecx,DWORD PTR [eax+0x25],0x10d0597c
  401e93:	jle    0x401e95
  401e95:	mov    esp,0xca8e7fc3
  401e9a:	xchg   ecx,eax
  401e9b:	les    edi,FWORD PTR [edi+0x40906844]
  401ea1:	inc    ecx
  401ea2:	je     0x401e80
  401ea4:	jnp    0x401eb9
  401ea6:	sub    edx,DWORD PTR [ecx-0x237ee4e4]
  401eac:	push   ebx
  401ead:	ss mov ss,esi
  401eb0:	sahf   
  401eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401eb2:	inc    eax
  401eb3:	pop    DWORD PTR [ecx-0x70]
  401eb6:	test   BYTE PTR [esi],ch
  401eb8:	out    dx,al
  401eb9:	fwait
  401eba:	lods   al,BYTE PTR ds:[esi]
  401ebb:	xor    edx,DWORD PTR [eax]
  401ebd:	sub    eax,0xd9936a83
  401ec2:	jne    0x401ed7
  401ec4:	mov    edi,0xbd3b9c13
  401ec9:	popf   
  401eca:	pop    esi
  401ecb:	push   edi
  401ecc:	adc    eax,0x90b2300f
  401ed1:	in     al,0x3e
  401ed3:	jg     0x401f3f
  401ed5:	xchg   ebp,eax
  401ed6:	les    edi,FWORD PTR [edi-0x2]
  401ed9:	xor    BYTE PTR [edi+0x7],0x13
  401edd:	cmp    esp,DWORD PTR [ebx]
  401edf:	call   0x9de4d47e
  401ee4:	lahf   
  401ee5:	aad    0xd4
  401ee7:	pop    ecx
  401ee8:	pusha  
  401ee9:	lahf   
  401eea:	pop    DWORD PTR [ecx+0x13]
  401eed:	retf   0x8b82
  401ef0:	inc    ebp
  401ef1:	fmul   DWORD PTR [ebx+0xc03084d]
  401ef7:	mov    eax,0x89f8458d
  401efc:	dec    ebp
  401efd:	rcl    BYTE PTR [eax-0x1],1
  401f00:	jne    0x401ed2
  401f02:	jmp    0x401fd5
  401f07:	pop    esp
  401f08:	jecxz  0x401f20
  401f0a:	xchg   ebp,eax
  401f0b:	mov    ebp,0x1ee56b7d
  401f10:	jb     0x401ec2
  401f12:	daa    
  401f13:	inc    esp
  401f14:	sub    ah,dl
  401f16:	sbb    ah,dh
  401f18:	je     0x401f96
  401f1a:	jl     0x401ebe
  401f1c:	jl     0x401f9a
  401f1e:	jl     0x401f60
  401f20:	sub    DWORD PTR [esi-0x615bc064],ebp
  401f26:	aam    0x31
  401f28:	cmp    eax,0x699ec9ea
  401f2d:	test   bh,dl
  401f2f:	push   ds
  401f30:	ds pop ebx
  401f32:	jno    0x401f15
  401f34:	add    DWORD PTR [edx+ecx*8],ebx
  401f37:	in     eax,dx
  401f38:	repz xor BYTE PTR [ebx-0x10],dh
  401f3c:	in     eax,0x7f
  401f3e:	cs call 0x507bdd6b
  401f44:	jo     0x401ede
  401f46:	sbb    BYTE PTR [ebx+0x6dbd892d],al
  401f4c:	dec    eax
  401f4d:	sub    eax,0xd349aaaa
  401f52:	rcl    BYTE PTR [eax+0x59],cl
  401f55:	xlat   BYTE PTR ds:[ebx]
  401f56:	mov    al,ds:0xfa8eeed6
  401f5b:	push   ss
  401f5c:	xchg   DWORD PTR [esi],ebp
  401f5e:	sub    eax,0x16b47100
  401f63:	pop    edi
  401f64:	xor    bl,bh
  401f66:	imul   esi,DWORD PTR [ebx-0x38921d48],0xffffffda
  401f6d:	stos   DWORD PTR es:[edi],eax
  401f6e:	push   esi
  401f6f:	or     bl,BYTE PTR [ebx-0x1]
  401f72:	frstor [ebp+0x54]
  401f75:	xor    ebx,DWORD PTR [esi+0x7f]
  401f78:	dec    esi
  401f79:	sub    DWORD PTR [ebx+0x3e12b7ab],edi
  401f7f:	lahf   
  401f80:	jge    0x402001
  401f82:	sub    eax,0x92b2ca4a
  401f87:	lock push esi
  401f89:	ins    BYTE PTR es:[edi],dx
  401f8a:	test   al,0xda
  401f8c:	(bad)  
  401f8d:	xchg   ecx,eax
  401f8e:	jmp    0x401f87
  401f90:	(bad)  
  401f91:	into   
  401f92:	add    al,0x4a
  401f94:	rol    esi,0xae
  401f97:	and    al,0x71
  401f99:	cld    
  401f9a:	jbe    0x401fbf
  401f9c:	and    BYTE PTR [esp+eiz*2-0x1f081708],dh
  401fa3:	iret   
  401fa4:	xchg   ebp,eax
  401fa5:	hlt    
  401fa6:	sub    DWORD PTR [edi],0x6f20c541
  401fac:	and    esp,DWORD PTR [ebx-0x69]
  401faf:	shl    BYTE PTR [ebx],1
  401fb1:	xor    eax,0xb63763c5
  401fb6:	push   0xffffffc6
  401fb8:	jb     0x401f94
  401fba:	jno    0x401fae
  401fbc:	fwait
  401fbd:	lahf   
  401fbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fbf:	cmp    BYTE PTR [esi],cl
  401fc1:	mov    ebp,0x5096700d
  401fc6:	jne    0x401f55
  401fc8:	(bad)  
  401fc9:	aaa    
  401fca:	push   esp
  401fcb:	jl     0x402024
  401fcd:	jb     0x401fc3
  401fcf:	jg     0x401ff0
  401fd1:	out    0xb1,eax
  401fd3:	das    
  401fd4:	imul   edi,edi,0x75
  401fd7:	or     al,0xe9
  401fd9:	into   
  401fda:	add    BYTE PTR [eax],al
  401fdc:	add    BYTE PTR [edx],cl
  401fde:	adc    al,0x28
  401fe0:	mov    dl,0x2a
  401fe2:	mov    dl,0x6a
  401fe4:	push   esp
  401fe5:	int3   
  401fe6:	xchg   ebp,eax
  401fe7:	xchg   esp,eax
  401fe8:	int    0x7a
  401fea:	std    
  401feb:	mov    edi,0x7c773a18
  401ff0:	jl     0x401f94
  401ff2:	jl     0x402070
  401ff4:	jl     0x40202d
  401ff6:	sbb    eax,0x8dd27d1d
  401ffb:	mov    dl,0xbd
  401ffd:	and    bl,cl
  401fff:	pusha  
  402000:	pop    esp
  402001:	sbb    ch,BYTE PTR [ebx+0x0]
  402004:	cmp    ecx,DWORD PTR [edi+ebx*4]
  402007:	push   edx
  402008:	push   eax
  402009:	out    dx,eax
  40200a:	test   eax,0x7f45a4c9
  40200f:	arpl   WORD PTR [edi-0x70],dx
  402012:	retf   0xf239
  402015:	mov    BYTE PTR [ecx-0xc69a413],dh
  40201b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40201c:	xor    bl,BYTE PTR [ecx+edi*1]
  40201f:	pop    ds
  402020:	pop    esp
  402021:	jno    0x402002
  402023:	(bad)  
  402024:	jmp    0xa949:0x29739ecb
  40202b:	pop    ecx
  40202c:	jnp    0x402028
  40202e:	ror    DWORD PTR [edi+edx*1],0xbd
  402032:	loope  0x4020ac
  402034:	call   0xea88:0x7dd75941
  40203b:	mov    edi,0x48451164
  402040:	jbe    0x4020b6
  402042:	popa   
  402043:	jns    0x4020ad
  402045:	add    BYTE PTR [eax*2+0x5a22d101],ch
  40204c:	rcl    ecx,cl
  40204e:	sbb    DWORD PTR ds:0xa0da7d39,ebp
  402054:	jle    0x402047
  402056:	rol    al,0xee
  402059:	jl     0x40209e
  40205b:	mov    cl,0xb8
  40205d:	mov    bh,0x64
  40205f:	fisub  DWORD PTR [ebp-0xa6d3ba4]
  402065:	sti    
  402066:	mov    esp,0x662c4953
  40206b:	in     al,0xf7
  40206d:	add    eax,0x122eb206
  402072:	push   ds
  402073:	aam    0x31
  402075:	(bad)  
  402076:	enter  0xad4e,0x49
  40207a:	jl     0x402085
  40207c:	mov    ebx,DWORD PTR ss:[edx+0x6ff3397c]
  402083:	inc    edi
  402084:	pop    DWORD PTR [esi-0x3e7ab013]
  40208a:	(bad)  
  40208b:	outs   dx,DWORD PTR ds:[esi]
  40208c:	scas   eax,DWORD PTR es:[edi]
  40208d:	or     al,0x94
  40208f:	ins    BYTE PTR es:[edi],dx
  402090:	arpl   sp,si
  402092:	xor    ebp,ebp
  402094:	push   esp
  402095:	xor    DWORD PTR [edi+0x71922b65],edx
  40209b:	jg     0x402066
  40209d:	les    esi,FWORD PTR [edi-0x4f]
  4020a0:	sub    edi,DWORD PTR [ebx-0x69]
  4020a3:	push   ebx
  4020a4:	rol    BYTE PTR [ebp+0xfb8365c],0x2d
  4020ab:	call   0x409298
  4020b0:	mov    eax,DWORD PTR [ebp-0x4]
  4020b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4020b6:	xor    eax,0x7510857
  4020bb:	add    eax,ebx
  4020bd:	cmp    ecx,eax
  4020bf:	jne    0x4021b5
  4020c5:	jmp    0x402198
  4020ca:	dec    esp
  4020cb:	xchg   esp,eax
  4020cc:	pop    edi
  4020cd:	add    BYTE PTR [edi-0x25],ah
  4020d0:	arpl   WORD PTR [eax-0x10],bp
  4020d3:	adc    ebx,DWORD PTR [eax+0x56437148]
  4020d9:	icebp  
  4020da:	pusha  
  4020db:	ja     0x402159
  4020dd:	jl     0x402081
  4020df:	jl     0x40215d
  4020e1:	jl     0x402151
  4020e3:	cld    
  4020e4:	inc    ecx
  4020e5:	sub    BYTE PTR [ebx-0x4cef21a7],dl
  4020eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020ec:	cdq    
  4020ed:	xchg   edi,eax
  4020ee:	icebp  
  4020ef:	or     eax,0xd551cc61
  4020f4:	hlt    
  4020f5:	inc    ebx
  4020f6:	call   0xa0f68a43
  4020fb:	outs   dx,BYTE PTR ds:[esi]
  4020fc:	xor    ecx,edx
  4020fe:	scas   eax,DWORD PTR es:[edi]
  4020ff:	inc    esi
  402100:	pop    esi
  402101:	jae    0x40215d
  402103:	sub    BYTE PTR [ecx],bl
  402105:	mov    ecx,0x430d1532
  40210a:	call   0x1a7:0x93426e
  402111:	xor    ecx,DWORD PTR [edx-0x3add05d2]
  402117:	adc    eax,0x7db80829
  40211c:	pop    esi
  40211d:	(bad)  
  40211e:	gs pop edi
  402120:	xchg   edi,eax
  402121:	cmp    al,0x74
  402123:	mov    esp,0x2776f743
  402128:	outs   dx,BYTE PTR ds:[esi]
  402129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40212a:	fsubp  st(1),st
  40212c:	xor    dl,BYTE PTR [esi-0x5f]
  40212f:	call   0x3223:0xb9703416
  402136:	xchg   esi,eax
  402137:	dec    esi
  402138:	xchg   DWORD PTR [ecx+0x5f47d8f4],eax
  40213e:	or     ch,BYTE PTR [edi+esi*8-0x75]
  402142:	jmp    0x40213c
  402144:	fiadd  WORD PTR [ebx]
  402146:	adc    DWORD PTR ds:0x6dee5e0d,edx
  40214c:	xor    DWORD PTR [esi+edi*1+0x7353e0f4],0x10
  402154:	sub    DWORD PTR [esi],0x3e0cb339
  40215a:	scas   al,BYTE PTR es:[edi]
  40215b:	add    DWORD PTR [edx],eax
  40215d:	pop    ecx
  40215e:	inc    edx
  40215f:	jnp    0x40213e
  402161:	aas    
  402162:	push   0xe3afdfbc
  402167:	mov    ebx,0xba700142
  40216c:	aas    
  40216d:	adc    dh,BYTE PTR [eax+0x5b]
  402170:	popa   
  402171:	mov    al,0x33
  402173:	mov    es,WORD PTR [esi-0x45]
  402176:	mov    ds:0xd2963a83,eax
  40217b:	dec    edi
  40217c:	repnz or edx,DWORD PTR [edx+ebp*2-0x3e6fe29e]
  402184:	enter  0x4125,0x5f
  402188:	adc    BYTE PTR [ecx+0x3ff03c7b],bl
  40218e:	in     eax,0x2b
  402190:	je     0x4021da
  402192:	mov    ds:0xdc1edec1,eax
  402197:	lea    ecx,[ebx+0x3b47e045]
  40219d:	clc    
  40219e:	jb     0x401676
  4021a4:	jmp    0x402298
  4021a9:	mov    eax,DWORD PTR [ebp-0x4]
  4021ac:	xor    eax,esi
  4021ae:	add    eax,ebx
  4021b0:	jmp    0x402c24
  4021b5:	mov    eax,DWORD PTR [ebp-0x2c]
  4021b8:	movzx  eax,WORD PTR [eax+edi*2]
  4021bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4021bf:	mov    eax,DWORD PTR [ecx+eax*4]
  4021c2:	jmp    0x402295
  4021c7:	lods   eax,DWORD PTR ds:[esi]
  4021c8:	adc    ah,BYTE PTR [edi+0x7d7da75f]
  4021ce:	jmp    0x8f73:0xa7f835f7
  4021d5:	xchg   ebp,eax
  4021d6:	jl     0x40216e
  4021d8:	jbe    0x402256
  4021da:	jl     0x40217e
  4021dc:	jl     0x40225a
  4021de:	jl     0x402247
  4021e0:	(bad)  
  4021e1:	in     al,dx
  4021e2:	adc    eax,0x111d7645
  4021e7:	lahf   
  4021e8:	mov    dh,0xc0
  4021ea:	inc    edi
  4021eb:	jne    0x402231
  4021ed:	inc    esi
  4021ee:	and    ecx,edx
  4021f0:	sbb    edx,DWORD PTR [ecx-0x7b3e4ccd]
  4021f6:	lds    edi,FWORD PTR [ecx]
  4021f8:	push   ecx
  4021f9:	or     al,0x49
  4021fb:	pop    ecx
  4021fc:	dec    edx
  4021fd:	jge    0x4021b8
  4021ff:	dec    ecx
  402200:	popf   
  402201:	and    edx,ecx
  402203:	neg    al
  402205:	xchg   ebp,eax
  402206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402207:	enter  0x2ca0,0x37
  40220b:	sbb    ebp,DWORD PTR [ebx]
  40220d:	loopne 0x4021fa
  40220f:	or     eax,0xa5341b34
  402214:	or     eax,0x900bf1f3
  402219:	pop    ds
  40221a:	(bad)  
  40221c:	pop    edi
  40221d:	push   ss
  40221e:	lahf   
  40221f:	inc    ebp
  402220:	adc    ch,BYTE PTR [edx+0x7ecd94c9]
  402226:	mov    ecx,0xd4efe7f6
  40222b:	dec    ebp
  40222c:	(bad)  
  40222d:	jb     0x40222c
  40222f:	fdivr  st(0),st
  402231:	xor    BYTE PTR [ebp-0x4f6d016e],dh
  402237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402238:	inc    eax
  402239:	sar    DWORD PTR [eax+0x62a4d686],0x7f
  402240:	jecxz  0x4021e0
  402242:	jae    0x4021e9
  402244:	ins    BYTE PTR es:[edi],dx
  402245:	push   ebx
  402246:	outs   dx,BYTE PTR ds:[esi]
  402247:	inc    eax
  402248:	sbb    ebx,DWORD PTR [edi+0x753a247f]
  40224e:	mov    DWORD PTR [ecx],edx
  402250:	pop    ds
  402251:	mov    edx,0x18eae1f8
  402256:	xor    BYTE PTR [edx+0x4c],al
  402259:	or     BYTE PTR [eax],bl
  40225b:	enter  0xb9da,0x1
  40225f:	scas   al,BYTE PTR es:[edi]
  402260:	rol    DWORD PTR [edx-0x6a],1
  402263:	out    dx,eax
  402264:	pop    edi
  402265:	leave  
  402266:	dec    ebp
  402267:	stos   DWORD PTR es:[edi],eax
  402268:	and    al,0xf
  40226a:	push   ecx
  40226b:	lods   eax,DWORD PTR ds:[esi]
  40226c:	fisttp QWORD PTR [eax]
  40226e:	fld    DWORD PTR [ebx+ebp*1-0x2e]
  402272:	dec    edi
  402273:	cdq    
  402274:	mov    eax,0x4e198124
  402279:	mov    dh,0x39
  40227b:	jl     0x4022f3
  40227d:	push   ebp
  40227e:	adc    eax,0x41190434
  402283:	or     DWORD PTR [edi+eax*1+0x71],edi
  402287:	scas   al,BYTE PTR es:[edi]
  402288:	loopne 0x40228f
  40228a:	dec    edi
  40228b:	pop    es
  40228c:	cmp    al,BYTE PTR [ebp+0x6c]
  40228f:	(bad)  
  402290:	rcr    BYTE PTR ds:0x89e21f5d,1
  402296:	inc    ebp
  402297:	or     al,0x8b
  402299:	inc    ebp
  40229a:	cld    
  40229b:	mov    ecx,DWORD PTR [ebp-0x8]
  40229e:	jmp    0x402371
  4022a3:	xchg   ebx,eax
  4022a4:	sub    al,BYTE PTR [esp+eax*1]
  4022a7:	cdq    
  4022a8:	cmp    dl,BYTE PTR [ebx+0x426f4fbd]
  4022ae:	mov    dh,0xee
  4022b0:	mov    bl,0xf8
  4022b2:	pop    esi
  4022b3:	fmul   QWORD PTR [ecx]
  4022b5:	jl     0x402333
  4022b7:	mov    ds:0xc97c7c7c,al
  4022bc:	pushf  
  4022bd:	push   ds
  4022be:	mov    ah,0xf
  4022c0:	push   esp
  4022c1:	mov    eax,ds:0xce97367d
  4022c6:	and    eax,0xf99a4563
  4022cb:	and    al,0x44
  4022cd:	out    0x3c,al
  4022cf:	imul   ebp,DWORD PTR [eax+0xbd5c699],0x206c2cad
  4022d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022da:	out    dx,eax
  4022db:	ja     0x402309
  4022dd:	and    BYTE PTR [edx-0x6b],ch
  4022e0:	mov    al,ds:0x90c15f63
  4022e5:	push   esi
  4022e6:	fbstp  TBYTE PTR [ebx+ecx*1]
  4022e9:	dec    ebx
  4022ea:	dec    eax
  4022eb:	imul   esp,esp,0xb07ab16a
  4022f1:	pop    ecx
  4022f2:	jecxz  0x4022c5
  4022f4:	inc    esi
  4022f5:	in     eax,0x86
  4022f7:	test   ebx,edi
  4022f9:	cs xchg ebp,eax
  4022fb:	and    DWORD PTR [ecx+eax*1-0x1],eax
  4022ff:	imul   ebx,DWORD PTR [eax+0x46d7c432],0x4b024eac
  402309:	repnz pusha 
  40230b:	mov    dl,0xd8
  40230d:	fs dec edx
  40230f:	hlt    
  402310:	pop    ebp
  402311:	aam    0x85
  402313:	xchg   ecx,ecx
  402315:	loopne 0x4022a8
  402317:	pusha  
  402318:	bound  esi,QWORD PTR [eax-0x56]
  40231b:	out    dx,eax
  40231c:	shr    BYTE PTR [ebx-0x5c705873],1
  402322:	ret    
  402323:	pop    eax
  402324:	mov    al,0x10
  402326:	aad    0xcb
  402328:	call   0x9455:0xd4e0a4ec
  40232f:	(bad)  
  402330:	jmp    0x402374
  402332:	fcom   st(6)
  402334:	add    al,BYTE PTR [edx]
  402336:	sbb    ah,cl
  402338:	retf   
  402339:	retf   0xa520
  40233c:	inc    edi
  40233d:	shl    DWORD PTR [eax+0x42],cl
  402340:	inc    ecx
  402341:	call   FWORD PTR [eax-0x79]
  402344:	lock leave 
  402346:	dec    edx
  402347:	(bad)  
  402348:	cmp    eax,0x269151c5
  40234d:	add    eax,0x32de4068
  402352:	cdq    
  402353:	sbb    BYTE PTR [ecx+0x2c3e8553],cl
  402359:	jg     0x4023d3
  40235b:	cmp    BYTE PTR [ecx],bh
  40235d:	aas    
  40235e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40235f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402360:	jge    0x40230e
  402362:	enter  0xdca8,0xf5
  402366:	push   edx
  402367:	mov    ecx,0x4a3bb853
  40236c:	cdq    
  40236d:	xchg   edi,eax
  40236e:	sub    dh,dl
  402370:	or     esi,DWORD PTR ds:0x7510857
  402376:	add    eax,ebx
  402378:	cmp    ecx,eax
  40237a:	jne    0x40238d
  402380:	mov    eax,DWORD PTR [ebp-0x4]
  402383:	xor    eax,0x7510857
  402388:	jmp    0x4021ae
  40238d:	mov    eax,DWORD PTR [ebp+0xc]
  402390:	add    eax,DWORD PTR [ebp+0x8]
  402393:	mov    DWORD PTR [ebp-0x10],eax
  402396:	mov    eax,DWORD PTR [ebp-0x1c]
  402399:	test   eax,eax
  40239b:	je     0x4026e4
  4023a1:	mov    DWORD PTR [ebp-0x24],esi
  4023a4:	push   0xb
  4023a6:	pop    ecx
  4023a7:	push   0x5
  4023a9:	dec    ecx
  4023aa:	pop    ebx
  4023ab:	xchg   ebx,ecx
  4023ad:	sub    ebx,ecx
  4023af:	xchg   ebx,ecx
  4023b1:	dec    ecx
  4023b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4023b5:	imul   eax,ecx
  4023b8:	sub    esp,eax
  4023ba:	mov    DWORD PTR [ebp-0x24],esp
  4023bd:	mov    eax,DWORD PTR [ebp-0x4]
  4023c0:	mov    ecx,0x7510857
  4023c5:	xor    eax,ecx
  4023c7:	mov    edx,0x32729e
  4023cc:	add    eax,edx
  4023ce:	mov    DWORD PTR [ebp+0x8],eax
  4023d1:	jmp    0x4024a4
  4023d6:	cmp    dl,BYTE PTR [esi+0x7b653be5]
  4023dc:	cli    
  4023dd:	test   eax,0x3babd173
  4023e2:	fs popf 
  4023e4:	xor    al,0xbc
  4023e6:	add    cl,BYTE PTR [eax]
  4023e8:	jl     0x402466
  4023ea:	mov    ds:0x947c7c7c,al
  4023ef:	repnz test BYTE PTR [edx-0x56],dh
  4023f3:	inc    ebx
  4023f4:	hlt    
  4023f5:	sbb    cl,BYTE PTR [ebx-0x20]
  4023f8:	mov    edi,0x8e96543b
  4023fd:	mov    eax,ds:0x9fc109b5
  402402:	mov    ?,WORD PTR [ecx]
  402404:	jecxz  0x4023eb
  402406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402407:	add    esi,DWORD PTR [ebx]
  402409:	popf   
  40240a:	mov    bl,0x3c
  40240c:	mov    bl,0xf6
  40240e:	imul   ebx,DWORD PTR [esi],0xffffff96
  402411:	and    BYTE PTR [eax+0x30],bh
  402414:	mul    DWORD PTR [ebx+0x6]
  402417:	lock sub al,0xd0
  40241a:	sub    al,0x4f
  40241c:	out    dx,eax
  40241d:	jmp    FWORD PTR [eax+0x21]
  402420:	xchg   esi,eax
  402421:	xchg   edi,eax
  402422:	mov    edx,0x6a15b85
  402427:	xchg   edi,eax
  402428:	sbb    BYTE PTR [eax-0x38b846f0],0x2f
  40242f:	jmp    DWORD PTR [ebp-0x3f5d98fd]
  402435:	pop    ds
  402436:	je     0x4024b7
  402438:	js     0x40241a
  40243a:	or     edx,esi
  40243c:	dec    edi
  40243d:	sub    eax,0x54d56834
  402442:	sub    al,0x87
  402444:	push   cs
  402445:	call   0xa7ae:0x7a3af693
  40244c:	sahf   
  40244d:	retf   0x2bc1
  402450:	jo     0x40240d
  402452:	inc    ecx
  402453:	leave  
  402454:	xchg   ebx,eax
  402455:	cmp    BYTE PTR [edx+ebp*2-0x4560c8b0],dl
  40245c:	xchg   ebp,eax
  40245d:	mov    bl,0x97
  40245f:	hlt    
  402460:	call   0x8cc0038
  402465:	int    0x22
  402467:	and    ch,bh
  402469:	in     eax,0x4a
  40246b:	sbb    ebp,esi
  40246d:	inc    edx
  40246e:	ret    
  40246f:	mov    cl,0xc
  402471:	pop    ss
  402472:	stos   DWORD PTR es:[edi],eax
  402473:	ds retf 0xa374
  402477:	pop    es
  402478:	mov    ebx,gs
  40247a:	stc    
  40247b:	aas    
  40247c:	mov    dl,BYTE PTR [ecx-0x49]
  40247f:	scas   eax,DWORD PTR es:[edi]
  402480:	cli    
  402481:	pop    ebx
  402482:	call   0xdd4eb338
  402487:	ins    DWORD PTR es:[edi],dx
  402488:	xor    dh,0x79
  40248b:	and    ecx,DWORD PTR [edi]
  40248d:	aam    0x33
  40248f:	cmp    DWORD PTR [ecx-0x4f],ebp
  402492:	addr16 pop eax
  402494:	test   eax,0xcc538992
  402499:	lds    esp,FWORD PTR [esi-0x5]
  40249c:	je     0x4024c4
  40249e:	jae    0x402440
  4024a0:	ins    DWORD PTR es:[edi],dx
  4024a1:	sub    esi,eax
  4024a3:	push   cs
  4024a4:	mov    eax,DWORD PTR [ebp-0x18]
  4024a7:	xor    eax,ecx
  4024a9:	add    eax,edx
  4024ab:	mov    edx,DWORD PTR [ebp+0x14]
  4024ae:	jmp    0x402581
  4024b3:	and    al,0x81
  4024b5:	rep ins BYTE PTR es:[edi],dx
  4024b7:	lods   eax,DWORD PTR ds:[esi]
  4024b8:	(bad)  
  4024b9:	sti    
  4024ba:	pop    ecx
  4024bb:	xor    DWORD PTR [ebx],0xf3a3bfae
  4024c1:	xchg   esi,eax
  4024c2:	sahf   
  4024c3:	dec    eax
  4024c4:	or     BYTE PTR [esp+edi*2-0x5e],bh
  4024c8:	jl     0x402546
  4024ca:	jl     0x40251b
  4024cc:	adc    BYTE PTR [edi+eiz*2],al
  4024cf:	xlat   BYTE PTR ds:[ebx]
  4024d0:	outs   dx,DWORD PTR ds:[esi]
  4024d1:	dec    ebx
  4024d2:	jnp    0x4024ef
  4024d4:	mov    ds:0x5acc4fd9,al
  4024d9:	aas    
  4024da:	or     al,0x7e
  4024dc:	mov    ebx,0xfcb80ac3
  4024e1:	cmc    
  4024e2:	ins    BYTE PTR es:[edi],dx
  4024e3:	mov    edx,0xee5e12c0
  4024e8:	pop    es
  4024e9:	iret   
  4024ea:	cwde   
  4024eb:	xchg   bh,al
  4024ed:	out    0x21,eax
  4024ef:	xor    DWORD PTR [edx-0x1c],0xffffff9a
  4024f3:	lea    edi,[eax-0x6e60423f]
  4024f9:	inc    edi
  4024fa:	cwde   
  4024fb:	cmp    al,0x23
  4024fd:	mov    ecx,DWORD PTR [edx]
  4024ff:	and    eax,0x63461091
  402504:	or     BYTE PTR [ebp-0x71],bl
  402507:	sbb    bh,BYTE PTR [esp+ecx*2-0x29]
  40250b:	das    
  40250c:	add    eax,0x7012954b
  402511:	in     eax,0xa6
  402513:	lock mov bh,0x81
  402517:	fdivr  DWORD PTR [esi+ebp*1]
  40251a:	sub    eax,0x6b32c3e9
  40251f:	adc    DWORD PTR [edi-0x47],ecx
  402522:	dec    ecx
  402523:	fcom   DWORD PTR [eax+0x2e74d4c8]
  402529:	rol    DWORD PTR [ecx+0x79dc11a2],1
  40252f:	repnz sbb al,0x30
  402532:	loop   0x40257a
  402534:	jno    0x402596
  402536:	cmp    BYTE PTR [edi-0x5c],ah
  402539:	es inc ecx
  40253b:	xor    DWORD PTR [esi+0xa],esp
  40253e:	push   ss
  40253f:	jmp    0x9755:0x295ec3
  402546:	jmp    0x2d47d4d1
  40254b:	mov    BYTE PTR [ebx+0x3bad1efd],dl
  402551:	jle    0x4025b8
  402553:	stc    
  402554:	mov    dl,0x52
  402556:	mov    dh,0xf8
  402558:	mov    BYTE PTR [ebx],dl
  40255a:	call   DWORD PTR [ebx]
  40255c:	add    al,0x71
  40255e:	mov    edx,DWORD PTR [edi-0x75706ae5]
  402564:	mov    es,WORD PTR [eax+0x1a]
  402567:	inc    ebx
  402568:	enter  0x4b30,0x5a
  40256c:	cmc    
  40256d:	loop   0x4025ca
  40256f:	ret    0xa7ce
  402572:	fadd   QWORD PTR [ebx]
  402574:	lods   al,BYTE PTR ds:[esi]
  402575:	inc    esp
  402576:	or     al,0x1
  402578:	lds    edi,FWORD PTR [ecx]
  40257a:	jg     0x402523
  40257c:	nop
  40257d:	mul    DWORD PTR [ecx]
  40257f:	sbb    eax,0x2af0ffb
  402584:	mov    edx,DWORD PTR [ebp-0x4]
  402587:	xor    edx,ecx
  402589:	mov    ecx,DWORD PTR [ebp+0x8]
  40258c:	lea    ecx,[edx+ecx*1+0x32729e]
  402593:	cmp    ecx,eax
  402595:	je     0x4026df
  40259b:	mov    edi,DWORD PTR [ebp-0x18]
  40259e:	mov    eax,DWORD PTR [ebp+0x8]
  4025a1:	mov    edx,DWORD PTR [ebp+0x14]
  4025a4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4025a8:	mov    ecx,0x7510857
  4025ad:	xor    edx,edx
  4025af:	xor    edi,ecx
  4025b1:	mov    esi,0x32729e
  4025b6:	add    edi,esi
  4025b8:	div    edi
  4025ba:	mov    edx,DWORD PTR [ebp-0x4]
  4025bd:	xor    edx,ecx
  4025bf:	lea    eax,[edx+eax*1+0x32729e]
  4025c6:	mov    edx,DWORD PTR [ebp+0x8]
  4025c9:	mov    edi,DWORD PTR [ebp-0x24]
  4025cc:	mov    DWORD PTR [edi+edx*4],eax
  4025cf:	mov    eax,DWORD PTR [ebp-0x18]
  4025d2:	mov    edx,DWORD PTR [ebp+0x8]
  4025d5:	xor    eax,ecx
  4025d7:	lea    eax,[eax+edx*1+0x32729e]
  4025de:	mov    DWORD PTR [ebp+0x8],eax
  4025e1:	mov    eax,DWORD PTR [ebp-0x18]
  4025e4:	mov    edx,DWORD PTR [ebp+0x14]
  4025e7:	xor    eax,ecx
  4025e9:	add    eax,esi
  4025eb:	imul   eax,DWORD PTR [edx]
  4025ee:	mov    edx,DWORD PTR [ebp-0x4]
  4025f1:	xor    edx,ecx
  4025f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4025f6:	lea    ecx,[edx+ecx*1+0x32729e]
  4025fd:	cmp    ecx,eax
  4025ff:	jne    0x40259b
  402605:	jmp    0x4026d8
  40260a:	xlat   BYTE PTR ds:[ebx]
  40260b:	pop    esp
  40260c:	cmp    DWORD PTR [eax-0x47],eax
  40260f:	pop    ebp
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	jnp    0x4025e8
  402613:	sbb    ch,bl
  402615:	mov    DWORD PTR [ebx+0x3e],edi
  402618:	popa   
  402619:	scas   al,BYTE PTR es:[edi]
  40261a:	dec    BYTE PTR [ebx]
  40261c:	jl     0x40269a
  40261e:	mov    ds:0x857c7c7c,al
  402623:	aaa    
  402624:	sbb    cl,BYTE PTR [eax-0x323950be]
  40262a:	repz xchg esp,eax
  40262c:	scas   al,BYTE PTR es:[edi]
  40262d:	dec    edi
  40262e:	hlt    
  40262f:	fldenv [esi-0x3]
  402632:	fwait
  402633:	and    ebx,DWORD PTR [eax+edx*1+0x5]
  402637:	inc    ebx
  402638:	int3   
  402639:	fisubr WORD PTR [ebx+ebx*1]
  40263c:	adc    al,0xd5
  40263e:	xor    eax,0xbeddca12
  402643:	add    eax,0xaca0ad7b
  402648:	sti    
  402649:	fs jno 0x4026bb
  40264c:	jge    0x4026bb
  40264e:	hlt    
  40264f:	sub    al,ah
  402651:	jle    0x4026cb
  402653:	xor    BYTE PTR [eax],al
  402655:	es pop esp
  402657:	pop    edx
  402658:	mov    cl,0xe9
  40265a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40265b:	push   edi
  40265c:	and    al,0x10
  40265e:	lods   eax,DWORD PTR ds:[esi]
  40265f:	sbb    al,0xea
  402661:	data16 cmp al,0xf
  402664:	mov    dl,0x3e
  402666:	or     eax,0x1f643057
  40266b:	rcl    BYTE PTR [eax+0x70],0x73
  40266f:	pop    edi
  402670:	push   ecx
  402671:	xchg   ebx,eax
  402672:	ror    esp,1
  402674:	xor    al,0x26
  402676:	pop    esp
  402677:	retf   0x6c56
  40267a:	js     0x4026f9
  40267c:	test   eax,0x6a295df8
  402681:	push   es
  402682:	rcl    DWORD PTR [ecx],0xc9
  402685:	fwait
  402686:	dec    ebp
  402687:	jge    0x4026b0
  402689:	lods   eax,DWORD PTR ds:[esi]
  40268a:	(bad)  
  40268b:	sbb    al,BYTE PTR [ebp+ecx*2-0x77cf33d4]
  402692:	xchg   BYTE PTR [edx+eiz*4+0x67],ah
  402696:	cld    
  402697:	test   al,0xdc
  402699:	mov    cl,0x54
  40269b:	mov    ds:0x47e76378,eax
  4026a0:	dec    edx
  4026a1:	out    0x86,al
  4026a3:	out    0x4d,eax
  4026a5:	inc    ecx
  4026a6:	in     al,0x70
  4026a8:	jbe    0x4026ec
  4026aa:	aas    
  4026ab:	test   eax,0x7df334c1
  4026b0:	pop    esi
  4026b1:	ret    0x246c
  4026b4:	inc    ebx
  4026b5:	sub    ebx,DWORD PTR [ebx]
  4026b7:	retf   0x721f
  4026ba:	nop
  4026bb:	jns    0x77e6e667
  4026c1:	js     0x40268b
  4026c3:	mov    fs,WORD PTR gs:[eax]
  4026c6:	push   ecx
  4026c7:	outs   dx,BYTE PTR ds:[esi]
  4026c8:	inc    edx
  4026c9:	int3   
  4026ca:	loopne 0x402654
  4026cc:	pop    ecx
  4026cd:	test   BYTE PTR [eax+ebp*8+0x33],ah
  4026d1:	jmp    0xda76:0xa8323ce4
  4026d8:	mov    ebx,esi
  4026da:	jmp    0x4026e4
  4026df:	mov    ebx,0x32729e
  4026e4:	mov    eax,DWORD PTR [ebp-0x4]
  4026e7:	xor    eax,0x7510857
  4026ec:	jmp    0x4027bf
  4026f1:	(bad)  
  4026f2:	fsubr  st(2),st
  4026f4:	mov    esp,0x647a42fa
  4026f9:	clc    
  4026fa:	(bad)  
  4026fb:	mov    WORD PTR [ecx-0x8],?
  4026fe:	xchg   edx,eax
  4026ff:	fsub   QWORD PTR [eax]
  402701:	and    al,0xa
  402703:	jl     0x402781
  402705:	mov    ds:0xa27c7c7c,al
  40270a:	xchg   ebp,eax
  40270b:	sub    DWORD PTR [eax],0xffffff89
  40270e:	jmp    0xe9c2:0x34a95bf8
  402715:	add    eax,0x921cf7a6
  40271a:	mov    al,ds:0x7122142c
  40271f:	fdiv   QWORD PTR [ecx-0x31]
  402722:	dec    edi
  402723:	xor    esi,ecx
  402725:	and    DWORD PTR [ecx-0x25c66967],esi
  40272b:	push   edi
  40272c:	retf   0x167
  40272f:	xor    al,0x7f
  402731:	add    ecx,DWORD PTR [ebx]
  402733:	lock scas al,BYTE PTR es:[edi]
  402735:	ss je  0x40276c
  402738:	fidivr DWORD PTR [ebp+0x5d]
  40273b:	iret   
  40273c:	add    dl,dl
  40273e:	stos   BYTE PTR es:[edi],al
  40273f:	(bad)  
  402740:	popa   
  402741:	out    0x13,al
  402743:	int    0x62
  402745:	rcl    esp,1
  402747:	cs cmp bh,dh
  40274a:	add    bh,BYTE PTR ds:[edi]
  40274d:	cmc    
  40274e:	repz mov cl,0x4b
  402751:	jae    0x402784
  402753:	fisubr DWORD PTR [edx+0x5b737e24]
  402759:	(bad)  
  40275a:	mov    al,0xb1
  40275c:	cmp    al,0xd2
  40275e:	sbb    edx,DWORD PTR [esi-0x23]
  402761:	jbe    0x402796
  402763:	int3   
  402764:	mov    BYTE PTR [esi+0x10],ch
  402767:	jge    0x402798
  402769:	lea    ebp,[eax+0x53]
  40276c:	lods   al,BYTE PTR ds:[esi]
  40276d:	into   
  40276e:	push   edi
  40276f:	and    BYTE PTR [esi],bl
  402771:	pop    ss
  402772:	push   ss
  402773:	sbb    DWORD PTR [edx-0x7],ebp
  402776:	leave  
  402777:	and    edi,DWORD PTR [esi+0x1a]
  40277a:	sub    esp,ecx
  40277c:	xchg   DWORD PTR [ecx+0x16],esi
  40277f:	push   edi
  402780:	mov    dh,0x82
  402782:	mov    ecx,0xc1454ed8
  402787:	imul   esp,DWORD PTR [ebx-0x13],0x724066fe
  40278e:	mov    eax,0xd9c9304
  402793:	int3   
  402794:	push   esp
  402795:	xor    DWORD PTR [esp+edx*4+0x9c2c833],ecx
  40279c:	push   ds
  40279d:	pop    ebx
  40279e:	and    DWORD PTR [eax+eiz*1],ebx
  4027a1:	popa   
  4027a2:	fwait
  4027a3:	mov    ds:0x20848a2e,al
  4027a8:	pop    eax
  4027a9:	test   eax,0xa1bf33bc
  4027ae:	or     bl,BYTE PTR [ecx]
  4027b0:	and    esp,edx
  4027b2:	sub    DWORD PTR [ecx-0x452206c2],esp
  4027b8:	ret    
  4027b9:	jb     0x402797
  4027bb:	sbb    DWORD PTR [ebx],edi
  4027bd:	and    dh,al
  4027bf:	add    eax,ebx
  4027c1:	mov    DWORD PTR [ebp-0xc],eax
  4027c4:	jmp    0x402897
  4027c9:	pop    ebp
  4027ca:	fimul  WORD PTR [ebp+eiz*8+0x567d65bb]
  4027d1:	cdq    
  4027d2:	push   es
  4027d3:	mov    si,0x745d
  4027d7:	push   esi
  4027d8:	mov    dl,0x6a
  4027da:	or     bh,BYTE PTR [esp+edi*2-0x5e]
  4027de:	jl     0x40285c
  4027e0:	jl     0x4027be
  4027e2:	sub    eax,0xb03f1b75
  4027e7:	mov    ss,ebx
  4027e9:	pop    eax
  4027ea:	adc    dl,BYTE PTR [edx]
  4027ec:	cld    
  4027ed:	and    cl,BYTE PTR [edi]
  4027ef:	mov    ds:0xcd88294b,eax
  4027f4:	lock jb 0x402831
  4027f7:	arpl   dx,ax
  4027f9:	int3   
  4027fa:	(bad)  [edx-0x444aad3e]
  402800:	dec    ebp
  402801:	pop    esi
  402802:	outs   dx,DWORD PTR ds:[esi]
  402803:	inc    ebx
  402804:	retf   0xa8a4
  402807:	das    
  402808:	icebp  
  402809:	mov    bl,0xa1
  40280b:	adc    DWORD PTR [ebp+0x6c],edx
  40280e:	push   esi
  40280f:	inc    ebp
  402810:	test   eax,0xe77faae0
  402815:	adc    al,0x17
  402817:	sbb    ebp,DWORD PTR [ebx]
  402819:	push   esp
  40281a:	jns    0x402804
  40281c:	imul   edx,DWORD PTR [ecx-0x12],0xffffffea
  402820:	pop    ecx
  402821:	stos   DWORD PTR es:[edi],eax
  402822:	daa    
  402823:	(bad)  [ecx+0x5635e13a]
  402829:	mov    eax,0xd4e167cb
  40282e:	cdq    
  40282f:	popf   
  402830:	and    esp,DWORD PTR [ebx]
  402832:	xor    al,0x15
  402834:	pop    ss
  402835:	mov    esp,gs
  402837:	and    DWORD PTR [eax-0x25],eax
  40283a:	ja     0x40288d
  40283c:	lock jp 0x402847
  40283f:	scas   eax,DWORD PTR es:[edi]
  402840:	dec    ebx
  402841:	hlt    
  402842:	(bad)  
  402843:	stc    
  402844:	scas   al,BYTE PTR es:[edi]
  402845:	or     esi,DWORD PTR [ebp+0x207cc57b]
  40284b:	push   0xffffffeb
  40284d:	jo     0x4027f3
  40284f:	test   eax,0x13d8fc6e
  402854:	sahf   
  402855:	inc    ebx
  402857:	xlat   BYTE PTR ds:[ebx]
  402858:	aam    0xbf
  40285a:	cmp    BYTE PTR [ebx],ah
  40285c:	(bad)  
  40285d:	mov    ebp,0x5d837c37
  402862:	(bad)  
  402863:	jns    0x4028e4
  402865:	loopne 0x402803
  402867:	push   es
  402868:	out    0x40,eax
  40286a:	push   edi
  40286b:	xor    esp,DWORD PTR ss:[eax-0x78d9acf9]
  402872:	add    eax,0x7875d10
  402877:	mov    eax,0x5152b43
  40287c:	mov    ecx,DWORD PTR [esi+0x1a4e7cac]
  402882:	push   ss
  402883:	pop    ss
  402884:	xchg   bh,al
  402886:	mov    ebx,0x2c8d1749
  40288b:	cmc    
  40288c:	pop    esi
  40288d:	repz sbb eax,0x80160506
  402893:	mov    ds:0x33409008,eax
  402898:	fisttp DWORD PTR [ebp+0x1803f045]
  40289e:	call   ebx
  4028a0:	xor    ebx,ebx
  4028a2:	inc    ebx
  4028a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4028a6:	jmp    0x402979
  4028ab:	jmp    0x4028ef
  4028ad:	inc    esp
  4028ae:	ins    BYTE PTR es:[edi],dx
  4028af:	jns    0x40292b
  4028b1:	jmp    0x402910
  4028b3:	loope  0x40292e
  4028b5:	pushf  
  4028b6:	and    dh,0xb4
  4028b9:	sub    al,0x8e
  4028bb:	nop
  4028bc:	or     eax,0x7ca27c7c
  4028c1:	jl     0x40293f
  4028c3:	xchg   esi,eax
  4028c4:	cld    
  4028c5:	daa    
  4028c6:	mov    ecx,DWORD PTR [esi]
  4028c8:	std    
  4028c9:	enter  0x5939,0xa9
  4028cd:	(bad)  
  4028ce:	into   
  4028cf:	mov    ebx,0x7563dd3c
  4028d4:	retf   0x4cc4
  4028d7:	inc    edi
  4028d8:	xchg   ebx,eax
  4028d9:	cli    
  4028da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028db:	pop    eax
  4028dc:	xor    BYTE PTR [ecx],0x7e
  4028df:	add    BYTE PTR [ecx+ecx*1+0x4c],0x30
  4028e4:	push   edi
  4028e5:	bnd jbe 0x4028f7
  4028e8:	mov    WORD PTR [edx+ecx*4],cs
  4028eb:	mov    BYTE PTR [edi],dl
  4028ed:	jne    0x40293b
  4028ef:	xor    al,0xea
  4028f1:	inc    eax
  4028f2:	cmp    ah,dh
  4028f4:	test   DWORD PTR [edi-0x2a],esi
  4028f7:	dec    ebx
  4028f8:	xor    eax,0xac20b97f
  4028fd:	xchg   esp,eax
  4028fe:	cwde   
  4028ff:	aad    0x87
  402901:	mov    WORD PTR [eax+0x1f],gs
  402904:	loopne 0x4028f3
  402906:	cmp    BYTE PTR [eax-0x5a],ah
  402909:	push   es
  40290a:	xor    DWORD PTR [eax+0x276066b2],0x29
  402911:	xchg   ebx,eax
  402912:	mov    ebx,0xb4dbd5aa
  402917:	jno    0x4028d8
  402919:	fisubr DWORD PTR [eax]
  40291b:	pop    edi
  40291c:	and    eax,DWORD PTR [ebx]
  40291e:	sti    
  40291f:	pop    edx
  402920:	push   ecx
  402921:	mov    WORD PTR [ebx-0x63a753f6],?
  402927:	aam    0xbf
  402929:	dec    ecx
  40292a:	jp     0x402978
  40292c:	out    dx,eax
  40292d:	ins    BYTE PTR es:[edi],dx
  40292e:	js     0x402927
  402930:	cmp    BYTE PTR [edi-0x112b1b7d],ah
  402936:	sbb    bl,dl
  402938:	rol    DWORD PTR [edx],cl
  40293a:	add    eax,0xec783aa3
  40293f:	(bad)  
  402940:	and    bh,al
  402942:	push   esp
  402943:	mov    dh,0x5
  402945:	sbb    eax,0xdd91db62
  40294a:	jmp    0x40292e
  40294c:	add    eax,0x9ac95f85
  402951:	mov    dl,0x6
  402953:	fdiv   QWORD PTR [ebp+0x3aaa64a1]
  402959:	mov    bl,0xc6
  40295b:	addr16 arpl di,bx
  40295e:	rcr    DWORD PTR [edx+0x27],0x59
  402962:	cwde   
  402963:	xchg   edx,eax
  402964:	adc    eax,0x2541a649
  402969:	pop    ecx
  40296a:	add    DWORD PTR [ebx+ecx*1],esp
  40296d:	mov    bl,0xcd
  40296f:	out    dx,eax
  402970:	mov    al,0x12
  402972:	repz icebp 
  402974:	jmp    0x704148a4
  402979:	je     0x402997
  40297f:	xchg   edx,eax
  402980:	push   0xa
  402982:	pop    ecx
  402983:	push   0x4
  402985:	pop    ebx
  402986:	inc    ebx
  402987:	xchg   ebx,ecx
  402989:	sub    ebx,ecx
  40298b:	xchg   ebx,ecx
  40298d:	dec    ecx
  40298e:	mov    eax,DWORD PTR [ebp-0x1c]
  402991:	imul   eax,ecx
  402994:	add    esp,eax
  402996:	xchg   edx,eax
  402997:	push   eax
  402998:	xor    ebx,ebx
  40299a:	mov    edx,esp
  40299c:	jmp    0x402a6f
  4029a1:	jns    0x4029c0
  4029a3:	inc    ebp
  4029a4:	ds gs mov dh,0x7d
  4029a8:	mov    ebp,0x6beb4b4b
  4029ad:	adc    ebx,DWORD PTR [edi+0xcc63b46]
  4029b3:	jl     0x402a31
  4029b5:	mov    ds:0xf57c7c7c,al
  4029ba:	pop    es
  4029bb:	nop
  4029bc:	out    dx,eax
  4029bd:	test   BYTE PTR [ebx],dh
  4029bf:	rcr    DWORD PTR [edx],cl
  4029c1:	and    eax,0xc3fa980a
  4029c6:	xchg   ebx,eax
  4029c7:	(bad)  [ecx+0x46b2e16b]
  4029cd:	mov    edx,edx
  4029cf:	cli    
  4029d0:	push   ebp
  4029d1:	fiadd  DWORD PTR [eax-0x5b]
  4029d4:	(bad)  
  4029d5:	shl    DWORD PTR [esi-0x35],1
  4029d8:	sub    edx,DWORD PTR [ebx]
  4029da:	or     DWORD PTR [edi+0x23],ebx
  4029dd:	into   
  4029de:	jno    0x4029ff
  4029e0:	xor    eax,0x76b0380c
  4029e5:	mov    ebx,esi
  4029e7:	push   esp
  4029e8:	xchg   ecx,eax
  4029e9:	ins    DWORD PTR es:[edi],dx
  4029ea:	(bad)  
  4029eb:	or     eax,0x9db05b91
  4029f0:	(bad)  
  4029f1:	sbb    al,0xa5
  4029f3:	push   ebp
  4029f4:	fsub   st,st(6)
  4029f6:	add    DWORD PTR [ecx+0x3069b912],ecx
  4029fc:	into   
  4029fd:	add    ah,bh
  4029ff:	add    DWORD PTR [ebx+0x77],ebx
  402a02:	push   esi
  402a03:	cdq    
  402a04:	mov    dl,bh
  402a06:	jbe    0x4029d2
  402a08:	(bad)  
  402a09:	fcmovu st,st(3)
  402a0b:	mov    edx,0x6de408ec
  402a10:	jns    0x4029de
  402a12:	arpl   WORD PTR [eax-0x422a2f2],di
  402a18:	xor    eax,0x7a082566
  402a1d:	pusha  
  402a1e:	es add al,0xc6
  402a21:	xor    BYTE PTR [eax+esi*4+0x71],0x2b
  402a26:	(bad)  
  402a27:	fbld   TBYTE PTR [esi]
  402a29:	add    edx,ecx
  402a2b:	sub    eax,0xc3ae3ef5
  402a30:	pop    ebx
  402a31:	in     eax,dx
  402a32:	pop    edx
  402a33:	pop    edi
  402a34:	sub    ecx,DWORD PTR [eax+0x18]
  402a37:	mov    dh,0xb6
  402a39:	add    BYTE PTR [eax],0xed
  402a3c:	ret    0x441e
  402a3f:	jp     0x4029f6
  402a41:	jmp    DWORD PTR [ebp+0x6df3705b]
  402a47:	lds    esi,FWORD PTR [ecx+0x40f3fd5f]
  402a4d:	push   ds
  402a4e:	pop    ecx
  402a4f:	cwde   
  402a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a51:	xchg   ebx,eax
  402a52:	adc    eax,0xa0c55cc
  402a57:	repnz mov ds:0xa3e410b5,al
  402a5d:	push   0xe
  402a5f:	add    dh,BYTE PTR [ebx-0x10920de9]
  402a65:	call   0xc2ba:0xf20a34bd
  402a6c:	mov    al,ds:0x434a0e9c
  402a71:	add    ebx,DWORD PTR [edx+ebx*1]
  402a74:	jmp    0x402b47
  402a79:	in     al,dx
  402a7a:	test   eax,0xb57d3fe8
  402a7f:	sti    
  402a80:	mov    ecx,0xb7fd3b83
  402a85:	adc    ecx,DWORD PTR [ecx]
  402a87:	push   es
  402a88:	nop
  402a89:	or     al,0xf
  402a8b:	jl     0x402b09
  402a8d:	mov    ds:0x637c7c7c,al
  402a92:	sbb    al,0x49
  402a94:	cmc    
  402a95:	scas   eax,DWORD PTR es:[edi]
  402a96:	cmp    ebx,DWORD PTR ds:[edi]
  402a99:	xchg   ebp,eax
  402a9a:	ds shl ch,cl
  402a9d:	mov    cl,0xaa
  402a9f:	ins    BYTE PTR es:[edi],dx
  402aa0:	mov    ebx,0x26ab589a
  402aa5:	popf   
  402aa6:	jecxz  0x402ab9
  402aa8:	(bad)  
  402aa9:	jg     0x402aeb
  402aab:	lahf   
  402aac:	xchg   DWORD PTR [eax-0x5e],ecx
  402aaf:	mov    edx,0xaf64586c
  402ab4:	pop    esp
  402ab5:	jae    0x402a3d
  402ab7:	jge    0x402a98
  402ab9:	enter  0xbea7,0x5a
  402abd:	pop    ebx
  402abe:	pop    ebx
  402abf:	or     dl,BYTE PTR [ecx]
  402ac1:	xchg   DWORD PTR [edx+ebx*1],edx
  402ac4:	std    
  402ac5:	mov    ds:0x8c466b9a,eax
  402aca:	mov    dh,0x20
  402acc:	mov    ecx,eax
  402ace:	dec    edi
  402acf:	lods   al,BYTE PTR ds:[esi]
  402ad0:	push   ebx
  402ad1:	sub    eax,0x75221585
  402ad6:	out    0x81,al
  402ad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ad9:	pop    ecx
  402ada:	sub    eax,0xe7468235
  402adf:	xor    cl,ah
  402ae1:	inc    edx
  402ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ae3:	inc    BYTE PTR gs:[eax]
  402ae6:	cmp    ebp,eax
  402ae8:	add    eax,0xa1dd38f3
  402aed:	inc    esp
  402aee:	clc    
  402aef:	push   esp
  402af0:	out    0xf7,al
  402af2:	lods   eax,DWORD PTR ds:[esi]
  402af3:	mov    ecx,0xd69f8926
  402af8:	(bad)  
  402af9:	cmp    esi,edx
  402afb:	ja     0x402b19
  402afd:	sub    BYTE PTR [ebx+0x413fd471],bh
  402b03:	dec    eax
  402b04:	dec    ecx
  402b05:	pop    ss
  402b06:	rcl    DWORD PTR [eax],0x56
  402b09:	hlt    
  402b0a:	lds    edx,FWORD PTR [edx+0x51539e57]
  402b10:	pop    esp
  402b11:	add    eax,0x1441edda
  402b16:	jns    0x402ab5
  402b18:	or     al,0x7c
  402b1a:	fs sub eax,0x232d16d5
  402b20:	pop    eax
  402b21:	sub    cl,dl
  402b23:	pop    esp
  402b24:	nop
  402b25:	outs   dx,BYTE PTR ds:[esi]
  402b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b27:	sub    ebx,DWORD PTR [edx-0x4]
  402b2a:	retf   
  402b2b:	mov    eax,0x62f21f0f
  402b30:	shr    al,0xed
  402b33:	(bad)  
  402b34:	pop    ebx
  402b35:	(bad)  
  402b36:	pop    es
  402b37:	fisttp WORD PTR [ebx-0x786b3c96]
  402b3d:	jge    0x402b8c
  402b3f:	arpl   WORD PTR [esi-0x767f92b4],di
  402b45:	cmp    DWORD PTR [esi+0x4b],edi
  402b48:	xor    edx,edx
  402b4a:	add    DWORD PTR [ebp-0xc],ebx
  402b4d:	jmp    0x402c20
  402b52:	dec    ebx
  402b53:	jge    0x402bcf
  402b55:	cmp    BYTE PTR [edx-0x7d],0x6d
  402b59:	jge    0x402b07
  402b5b:	push   cs
  402b5c:	loope  0x402b36
  402b5e:	dec    edi
  402b5f:	sbb    al,0x31
  402b61:	fidiv  WORD PTR [edx-0x5d8383f1]
  402b67:	jl     0x402be5
  402b69:	jl     0x402b97
  402b6b:	mov    ah,0xd9
  402b6d:	mov    gs:0xb90b1b2a,al
  402b73:	adc    DWORD PTR [ebx-0x73],esi
  402b76:	inc    eax
  402b77:	inc    esi
  402b78:	sbb    ebp,DWORD PTR [eax]
  402b7a:	ins    DWORD PTR es:[edi],dx
  402b7b:	leave  
  402b7c:	data16 fisttp DWORD PTR [edx+esi*2+0x30f81a6a]
  402b84:	je     0x402ba8
  402b86:	pop    edi
  402b87:	add    al,0x64
  402b89:	adc    al,0x2c
  402b8b:	pop    es
  402b8c:	pop    ds
  402b8d:	fs sbb bh,dl
  402b90:	xor    ecx,DWORD PTR [edx-0x5]
  402b93:	adc    al,0xbf
  402b95:	and    al,BYTE PTR ds:[ebx-0x46]
  402b99:	dec    edi
  402b9a:	sub    al,0x35
  402b9c:	pop    esi
  402b9d:	ins    BYTE PTR es:[edi],dx
  402b9e:	mov    dl,0x88
  402ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ba1:	sar    DWORD PTR [edi+eax*1+0x62d95e4b],0xf3
  402ba9:	push   edi
  402baa:	adc    ebp,ebx
  402bac:	push   ss
  402bad:	cmp    eax,0x57e30be3
  402bb2:	imul   ebp,DWORD PTR [edx+ebx*2+0xc],0x21
  402bb7:	pop    eax
  402bb8:	mov    gs:0x46409f0a,al
  402bbe:	cmp    esi,DWORD PTR [ecx+0x1e]
  402bc1:	hlt    
  402bc2:	in     al,dx
  402bc3:	les    edx,FWORD PTR [ebx+0x64005a70]
  402bc9:	(bad)  [edi]
  402bcb:	sub    DWORD PTR [edx+edx*8],edi
  402bce:	ins    DWORD PTR es:[edi],dx
  402bcf:	inc    ebp
  402bd0:	ss adc al,dh
  402bd3:	std    
  402bd4:	or     BYTE PTR [eax+0x1b87f49e],bh
  402bda:	loopne 0x402bbe
  402bdc:	mov    ah,0xa9
  402bde:	jp     0x402ba1
  402be0:	sar    ebx,cl
  402be2:	mov    dh,0xd5
  402be4:	lock dec ebx
  402be6:	sti    
  402be7:	xlat   BYTE PTR ds:[ebx]
  402be8:	and    eax,0xd3b2e87e
  402bed:	sar    DWORD PTR [ebp+0x8],cl
  402bf0:	pop    ebx
  402bf1:	pop    edi
  402bf2:	dec    esp
  402bf3:	cli    
  402bf4:	addr16 push es
  402bf6:	lods   al,BYTE PTR ds:[esi]
  402bf7:	int3   
  402bf8:	jl     0x402bfc
  402bfa:	repz and eax,0x84138fe5
  402c00:	inc    esp
  402c01:	xlat   BYTE PTR ds:[ebx]
  402c02:	mov    WORD PTR [esi+eiz*8+0x3d],?
  402c06:	ror    DWORD PTR [ebx-0xb],cl
  402c09:	ins    BYTE PTR es:[edi],dx
  402c0a:	scas   al,BYTE PTR es:[edi]
  402c0b:	es push ebp
  402c0d:	mov    ds:0x6d350a87,al
  402c12:	enter  0x6b6c,0x24
  402c16:	mov    esp,0xf7cbc8da
  402c1b:	push   es
  402c1c:	and    dl,bh
  402c1e:	neg    esi
  402c20:	pop    ebx
  402c21:	mov    eax,DWORD PTR [ebp-0xc]
  402c24:	pop    edi
  402c25:	pop    esi
  402c26:	pop    ebx
  402c27:	leave  
  402c28:	ret    0x10
  402c2b:	push   ebp
  402c2c:	mov    ebp,esp
  402c2e:	sub    esp,0x20
  402c31:	leave  
  402c32:	ret    0x10
  402c35:	push   ebp
  402c36:	mov    ebp,esp
  402c38:	push   ecx
  402c39:	and    DWORD PTR ds:0x413b5a,0x0
  402c43:	jmp    0x402c56
  402c48:	xor    eax,eax
  402c4a:	xor    eax,DWORD PTR ds:0x413b5a
  402c50:	inc    eax
  402c51:	mov    ds:0x413b5a,eax
  402c56:	cmp    DWORD PTR ds:0x413b5a,0x1e
  402c5d:	jae    0x402d01
  402c63:	cmp    DWORD PTR ds:0x413b5a,0x11
  402c6a:	jne    0x402c83
  402c70:	push   0x0
  402c72:	push   0x4427c0
  402c77:	push   DWORD PTR [ebp-0x20]
  402c7a:	push   DWORD PTR [ebp-0x14]
  402c7d:	call   DWORD PTR ds:0x43c5b0
  402c83:	cmp    DWORD PTR ds:0x413b5a,0x10
  402c8a:	jne    0x402c9e
  402c90:	xor    eax,eax
  402c92:	add    eax,DWORD PTR ds:0x413b5a
  402c98:	inc    eax
  402c99:	mov    ds:0x413b5a,eax
  402c9e:	jmp    0x402c48
  402ca3:	and    DWORD PTR ds:0x43fbfc,0x0
  402cad:	mov    edx,DWORD PTR ds:0x43fbfc
  402cb3:	inc    edx
  402cb4:	mov    DWORD PTR ds:0x43fbfc,edx
  402cba:	cmp    DWORD PTR ds:0x43fbfc,0xd
  402cc1:	jne    0x402cda
  402cc7:	push   0x413b56
  402ccc:	push   DWORD PTR [ebp-0x28]
  402ccf:	push   0x3f88
  402cd4:	call   DWORD PTR ds:0x43c4e0
  402cda:	cmp    DWORD PTR ds:0x43fbfc,0xc
  402ce1:	jne    0x402cf4
  402ce7:	mov    edx,DWORD PTR ds:0x43fbfc
  402ced:	inc    edx
  402cee:	mov    DWORD PTR ds:0x43fbfc,edx
  402cf4:	cmp    DWORD PTR ds:0x43fbfc,0x17
  402cfb:	jb     0x402cad
  402d01:	push   ecx
  402d02:	mov    eax,0xf89c8535
  402d07:	mov    DWORD PTR ds:0x413b4e,0x10
  402d11:	cmp    DWORD PTR ds:0x413b4e,0x0
  402d18:	je     0x402d61
  402d1e:	cmp    DWORD PTR ds:0x413b4e,0x1d
  402d25:	jne    0x402d4f
  402d2b:	push   0x4427a8
  402d30:	push   0x4427a8
  402d35:	push   0x8e35
  402d3a:	push   0x41082b
  402d3f:	push   0x4107f1
  402d44:	push   0x4107a7
  402d49:	call   DWORD PTR ds:0x43c828
  402d4f:	mov    edx,DWORD PTR ds:0x413b4e
  402d55:	dec    edx
  402d56:	mov    DWORD PTR ds:0x413b4e,edx
  402d5c:	jmp    0x402d11
  402d61:	mov    DWORD PTR [ebp-0x8],eax
  402d64:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  402d6b:	mov    edx,DWORD PTR [ebp-0x8]
  402d6e:	push   esi
  402d6f:	mov    ecx,0x7510857
  402d74:	xor    edx,ecx
  402d76:	mov    esi,0x32729e
  402d7b:	push   edi
  402d7c:	mov    edi,DWORD PTR [ebp+0x10]
  402d7f:	add    edx,esi
  402d81:	cmp    edi,edx
  402d83:	je     0x403249
  402d89:	mov    edx,DWORD PTR [ebp-0x8]
  402d8c:	mov    eax,DWORD PTR [ebp-0x4]
  402d8f:	xor    eax,ecx
  402d91:	mov    edi,0xffcd8d62
  402d96:	sub    edi,eax
  402d98:	add    edi,DWORD PTR [ebp+0x10]
  402d9b:	xor    edx,ecx
  402d9d:	add    edx,esi
  402d9f:	cmp    edx,edi
  402da1:	ja     0x4030d5
  402da7:	jmp    0x402f16
  402dac:	sbb    eax,0xa4b3a405
  402db1:	ins    DWORD PTR es:[edi],dx
  402db2:	std    
  402db3:	pop    ebp
  402db4:	mov    eax,0xcee45e2b
  402db9:	enter  0xf56f,0xf8
  402dbd:	push   cs
  402dbe:	jl     0x402e3c
  402dc0:	into   
  402dc1:	jg     0x402e3f
  402dc3:	jl     0x402d71
  402dc5:	adc    DWORD PTR [ecx+0x70d0a162],esp
  402dcb:	pop    ss
  402dcc:	pop    edi
  402dcd:	clc    
  402dce:	mov    ?,ecx
  402dd0:	sub    cl,bh
  402dd2:	jo     0x402dec
  402dd4:	and    cl,BYTE PTR [ecx]
  402dd6:	lahf   
  402dd7:	rcr    DWORD PTR [ebp-0x7d],1
  402dda:	es mov ebp,0x88e3e09
  402de0:	test   eax,0xe9ccacb4
  402de5:	fprem1 
  402de7:	adc    dh,bh
  402de9:	sub    al,0xa4
  402deb:	repnz test DWORD PTR [ebp-0x71],edi
  402def:	xchg   esp,eax
  402df0:	pop    esi
  402df1:	not    BYTE PTR [eax+0x4dc4ec0a]
  402df7:	push   cs
  402df8:	sahf   
  402df9:	sbb    BYTE PTR [ebp+0xf],ah
  402dfc:	push   0xffffffe0
  402dfe:	xrelease xchg BYTE PTR [eax],al
  402e01:	cmp    al,0x1e
  402e03:	xor    BYTE PTR [ecx-0x3d],bl
  402e06:	sub    eax,0xc1be97f1
  402e0b:	mov    bh,0xc8
  402e0d:	retf   
  402e0e:	inc    ebp
  402e0f:	jo     0x402e8a
  402e11:	retf   
  402e12:	jmp    0x402e7b
  402e14:	js     0x402e53
  402e16:	mov    DWORD PTR [ebx+edi*4],eax
  402e19:	push   ds
  402e1a:	cmp    eax,0xb4976d25
  402e1f:	sahf   
  402e20:	dec    esi
  402e21:	dec    ebx
  402e22:	xor    BYTE PTR [edx+0x2139504c],dh
  402e28:	in     al,0x7
  402e2a:	and    al,0x5c
  402e2d:	(bad)  
  402e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e30:	push   0x1e
  402e32:	push   edi
  402e33:	scas   al,BYTE PTR es:[edi]
  402e34:	scas   al,BYTE PTR es:[edi]
  402e35:	call   0x65c1:0x1d017c93
  402e3c:	push   edi
  402e3d:	je     0x402e44
  402e3f:	and    al,0x8b
  402e41:	(bad)
  402e45:	vpackssdw xmm4,xmm0,XMMWORD PTR [esi+eax*4]
  402e4a:	aas    
  402e4b:	popa   
  402e4c:	shl    BYTE PTR [eax+0x63],1
  402e4f:	daa    
  402e50:	ror    DWORD PTR [esp+ecx*2-0xe40c84],1
  402e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e58:	aaa    
  402e59:	loope  0x402e7d
  402e5b:	not    DWORD PTR [edi+0x6b]
  402e5e:	jae    0x402dec
  402e60:	(bad)  
  402e61:	dec    ebx
  402e62:	ficom  DWORD PTR [eax+edi*8+0x24]
  402e66:	dec    edx
  402e67:	xor    eax,DWORD PTR [ecx-0x3b]
  402e6a:	xlat   BYTE PTR ds:[ebx]
  402e6b:	pop    esi
  402e6c:	inc    ebp
  402e6d:	push   ebx
  402e6e:	cmp    eax,0xaf7f8469
  402e73:	adc    DWORD PTR [edi],eax
  402e75:	call   0x388a:0x70fc33ca
  402e7c:	pop    ss
  402e7d:	pop    esp
  402e7e:	cdq    
  402e7f:	mov    edx,0xe55b0636
  402e84:	test   eax,0xffd38405
  402e89:	mov    bl,0x28
  402e8b:	pop    esp
  402e8c:	push   0xa6feb562
  402e91:	push   ss
  402e92:	jnp    0x402e96
  402e94:	or     BYTE PTR [eax-0x5e7cf72],bl
  402e9a:	mov    ebp,0xdf56fc4a
  402e9f:	adc    BYTE PTR [ecx+0x78],dl
  402ea2:	nop
  402ea3:	icebp  
  402ea4:	outs   dx,DWORD PTR ds:[esi]
  402ea5:	imul   ebx,DWORD PTR [esi],0xfc6db354
  402eab:	stos   BYTE PTR es:[edi],al
  402eac:	inc    ebx
  402ead:	enter  0xbfd4,0xa4
  402eb1:	push   es
  402eb2:	mov    bh,0xea
  402eb4:	sbb    ebp,ebx
  402eb6:	xchg   esp,eax
  402eb7:	push   ds
  402eb8:	icebp  
  402eb9:	add    ch,dl
  402ebb:	out    dx,al
  402ebc:	or     eax,DWORD PTR [edx]
  402ebe:	adc    al,0xf9
  402ec0:	loope  0x402e76
  402ec2:	jge    0x402f1b
  402ec4:	jecxz  0x402eb0
  402ec6:	jb     0x402e98
  402ec8:	ret    
  402ec9:	push   0x8f747ef8
  402ece:	jne    0x402e77
  402ed0:	dec    ecx
  402ed1:	in     al,dx
  402ed2:	mov    ds,WORD PTR [edx]
  402ed4:	xor    eax,0x571b7a7
  402ed9:	cmp    ecx,DWORD PTR [eax-0x20]
  402edc:	pop    ds
  402edd:	int    0x4d
  402edf:	call   DWORD PTR [ebx-0x6d]
  402ee2:	pop    ss
  402ee3:	jmp    0x402ea4
  402ee5:	(bad)  
  402ee6:	push   eax
  402ee7:	jl     0x402ec7
  402ee9:	inc    esi
  402eea:	mov    bh,0xab
  402eec:	mov    al,ds:0xac6249d6
  402ef1:	lock imul BYTE PTR [edi-0x6e]
  402ef5:	jecxz  0x402f4f
  402ef7:	push   0x1d
  402ef9:	repnz lea ebp,[esi+0x5e73ba5f]
  402f00:	xchg   BYTE PTR [eiz*2+0xb6a064d],ch
  402f07:	jp     0x402f75
  402f09:	iret   
  402f0a:	cdq    
  402f0b:	mov    ebx,0x7ace773d
  402f10:	sub    DWORD PTR [ecx-0x38c7f709],0x5e953
  402f1a:	add    BYTE PTR [eax],al
  402f1c:	mov    esi,0x32729e
  402f21:	mov    eax,DWORD PTR [ebp-0x8]
  402f24:	mov    edi,DWORD PTR [ebp-0x4]
  402f27:	xor    edi,ecx
  402f29:	add    edi,esi
  402f2b:	mov    esi,DWORD PTR [ebp+0x8]
  402f2e:	imul   edi,edx
  402f31:	mov    ebx,DWORD PTR [ebp+0xc]
  402f34:	xor    eax,ecx
  402f36:	add    eax,edx
  402f38:	mov    al,BYTE PTR [ebx+eax*1+0x32729e]
  402f3f:	mov    BYTE PTR [edi+esi*1],al
  402f42:	mov    eax,DWORD PTR [ebp-0x4]
  402f45:	xor    eax,ecx
  402f47:	lea    edx,[edx+eax*1+0x32729e]
  402f4e:	mov    eax,DWORD PTR [ebp-0x4]
  402f51:	xor    eax,ecx
  402f53:	mov    esi,0xffcd8d62
  402f58:	sub    esi,eax
  402f5a:	add    esi,DWORD PTR [ebp+0x10]
  402f5d:	jmp    0x4030cc
  402f62:	jp     0x402f87
  402f64:	pop    ebp
  402f65:	cmp    BYTE PTR [ebp+0x7a],bl
  402f68:	jge    0x402fcf
  402f6a:	mov    ss,WORD PTR [ebp+0x4f]
  402f6d:	push   edx
  402f6e:	test   DWORD PTR [eax],0x14af678
  402f74:	jl     0x402ff2
  402f76:	into   
  402f77:	jg     0x402ff5
  402f79:	jl     0x402fc4
  402f7b:	cmp    al,0xef
  402f7d:	mov    bh,0x52
  402f7f:	pop    ebx
  402f80:	cdq    
  402f81:	enter  0x9808,0xae
  402f85:	push   esi
  402f86:	aad    0xdf
  402f88:	nop
  402f89:	xchg   edi,eax
  402f8a:	repz push ds
  402f8c:	dec    eax
  402f8d:	mov    ds:0xe58aed36,al
  402f92:	inc    ebx
  402f93:	sahf   
  402f94:	sub    eax,0xbbc4ed25
  402f99:	test   DWORD PTR [ebp-0x25],ecx
  402f9c:	xchg   DWORD PTR [ebx+ecx*8],ebp
  402f9f:	popf   
  402fa0:	mov    DWORD PTR [edi],ebx
  402fa2:	retf   0x5408
  402fa5:	outs   dx,DWORD PTR ds:[esi]
  402fa6:	test   al,0x2f
  402fa8:	cmp    edi,DWORD PTR [ebx+ecx*2+0x7ceadc2d]
  402faf:	test   al,0x55
  402fb1:	ss dec esp
  402fb3:	ror    DWORD PTR [esi-0x4f],0x22
  402fb7:	inc    edx
  402fb8:	and    eax,0x2f5c75a1
  402fbd:	or     eax,0xa648107d
  402fc2:	mov    esp,0xeed330e0
  402fc7:	pushf  
  402fc8:	inc    ebx
  402fc9:	(bad)  
  402fca:	jecxz  0x403031
  402fcc:	stos   BYTE PTR es:[edi],al
  402fcd:	sahf   
  402fce:	adc    bh,BYTE PTR [ebx+eiz*8+0x42]
  402fd2:	clc    
  402fd3:	xor    eax,0x8798931
  402fd8:	ds xchg edi,eax
  402fda:	add    BYTE PTR [eax-0x51],bl
  402fdd:	pop    ebp
  402fde:	sub    eax,0x7f13c039
  402fe3:	add    esp,DWORD PTR [edi-0x76]
  402fe6:	sbb    BYTE PTR [esi+eiz*8-0x4b],dl
  402fea:	push   ecx
  402feb:	mov    dl,0x39
  402fed:	(bad)  
  402fee:	jecxz  0x402fa7
  402ff0:	mov    esi,0x1ddba537
  402ff5:	xchg   DWORD PTR [eax],esp
  402ff7:	xchg   ebp,eax
  402ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ff9:	in     eax,0xcf
  402ffb:	aad    0xfb
  402ffd:	in     al,dx
  402ffe:	nop
  402fff:	sar    BYTE PTR [edi-0x1c],cl
  403002:	sbb    al,0xba
  403004:	xchg   edi,eax
  403005:	gs leave 
  403007:	ins    DWORD PTR es:[edi],dx
  403008:	dec    edx
  403009:	cld    
  40300a:	jne    0x403019
  40300c:	test   al,0x92
  40300e:	and    al,0x66
  403010:	lock retf 
  403012:	jae    0x40304e
  403014:	mov    DWORD PTR [eax-0x76],esi
  403017:	push   ss
  403018:	loop   0x402fdc
  40301a:	mov    BYTE PTR [esi+0x55c32076],cl
  403020:	test   BYTE PTR [esi+0x5a7c4cc0],bl
  403026:	stos   DWORD PTR es:[edi],eax
  403027:	cmp    al,0x6e
  403029:	push   es
  40302a:	sub    BYTE PTR [edx-0x36],ah
  40302d:	retf   0x336f
  403030:	mov    eax,0x33fa39bb
  403035:	aaa    
  403036:	mov    BYTE PTR [ecx],0xab
  403039:	imul   ecx,DWORD PTR [edx],0xffffffe5
  40303c:	or     al,0x63
  40303e:	or     al,0xe0
  403040:	ret    0xc73a
  403043:	pushf  
  403044:	or     DWORD PTR [edx],ebx
  403046:	jp     0x403045
  403048:	add    cl,BYTE PTR [esi-0xc]
  40304b:	in     al,0xf2
  40304d:	data16 and al,dh
  403050:	hlt    
  403051:	fnstenv [edi+0x61]
  403054:	sahf   
  403055:	jecxz  0x4030c7
  403057:	sar    BYTE PTR [ebx-0x896976c],cl
  40305d:	and    dh,BYTE PTR [ebx+0x7b]
  403060:	mov    ah,0xe6
  403062:	pop    ebx
  403063:	scas   eax,DWORD PTR es:[edi]
  403064:	mov    eax,0xf88d62bb
  403069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40306a:	inc    ecx
  40306b:	and    DWORD PTR [ebp+eiz*4+0x25],0xffffff95
  403070:	frstor [ebp+0x780776b6]
  403076:	jle    0x403081
  403078:	and    BYTE PTR [edx-0x15],0x3d
  40307c:	xor    al,0x41
  40307e:	mov    al,ds:0x4091612f
  403083:	sbb    cl,BYTE PTR [edx]
  403085:	push   es
  403086:	or     eax,0x89b8d3cd
  40308b:	xchg   ecx,eax
  40308c:	or     eax,0xbe0cec2d
  403091:	loopne 0x40305f
  403093:	or     al,BYTE PTR [ecx]
  403095:	mov    al,0xd1
  403097:	push   eax
  403098:	std    
  403099:	and    esi,0x6707cfb9
  40309f:	jne    0x4030f4
  4030a1:	fadd   st(1),st
  4030a3:	xchg   edx,eax
  4030a4:	aad    0x11
  4030a6:	sbb    edi,DWORD PTR [ebx-0x36]
  4030a9:	stos   DWORD PTR es:[edi],eax
  4030aa:	push   edx
  4030ab:	or     eax,0x6658e567
  4030b0:	push   ebx
  4030b1:	inc    esp
  4030b2:	arpl   WORD PTR [ecx-0x32],sp
  4030b5:	sbb    al,0xe
  4030b7:	and    eax,0x215e8ef2
  4030bc:	and    ecx,DWORD PTR [eax-0x6bf8bbbb]
  4030c2:	pop    es
  4030c3:	push   cs
  4030c4:	aad    0x25
  4030c6:	xor    ch,BYTE PTR [eax]
  4030c8:	xchg   BYTE PTR [esi-0x8],bl
  4030cb:	cmp    eax,0x860fd63b
  4030d0:	dec    eax
  4030d1:	(bad)  
  4030d2:	(bad)  
  4030d3:	call   FWORD PTR [ebx-0x48]
  4030d6:	xor    al,0x85
  4030d8:	pushf  
  4030d9:	clc    
  4030da:	jmp    0x403249
  4030df:	jno    0x403104
  4030e1:	in     al,0x69
  4030e3:	cli    
  4030e4:	ins    DWORD PTR es:[edi],dx
  4030e5:	cmp    DWORD PTR [ebx+0x12],0xb9299de8
  4030ec:	add    DWORD PTR [eax],ebx
  4030ee:	xchg   ebx,eax
  4030ef:	sbb    al,0x3
  4030f1:	jl     0x40316f
  4030f3:	into   
  4030f4:	jg     0x403172
  4030f6:	jl     0x403149
  4030f8:	sbb    eax,0x7be74671
  4030fd:	or     eax,ebx
  4030ff:	dec    edi
  403100:	je     0x40316e
  403102:	leave  
  403103:	or     eax,0x1996a7d1
  403108:	push   ds
  403109:	push   es
  40310a:	stc    
  40310b:	loope  0x40314f
  40310d:	imul   eax,DWORD PTR [edx],0xffffff83
  403110:	aad    0x74
  403112:	add    DWORD PTR [edi-0x9],ecx
  403115:	inc    ebp
  403116:	push   ebp
  403117:	mov    ch,0xc6
  403119:	fwait
  40311a:	dec    esp
  40311b:	ds xchg esi,eax
  40311d:	stc    
  40311e:	cli    
  40311f:	or     BYTE PTR [edx+ebx*4-0x5a4a2ca6],0xb2
  403127:	push   edi
  403128:	jge    0x403137
  40312a:	gs (bad) 
  40312c:	and    eax,0x3f74702d
  403131:	jno    0x4031ac
  403133:	jbe    0x403162
  403135:	test   eax,0x9693efa5
  40313a:	mov    ecx,0x28935056
  40313f:	es jmp 0xc9dd:0x30d632b2
  403147:	dec    esi
  403148:	lds    ebx,FWORD PTR [ecx+0xa]
  40314b:	(bad)  
  40314d:	jmp    0x96173d25
  403152:	hlt    
  403153:	stc    
  403154:	jecxz  0x403128
  403156:	jne    0x40310e
  403158:	imul   esp,DWORD PTR [esi],0xffffff8e
  40315b:	repz in eax,0xc3
  40315e:	cmp    bh,BYTE PTR [ebp+0x71]
  403161:	out    dx,al
  403162:	push   ebx
  403163:	ins    BYTE PTR es:[edi],dx
  403164:	in     eax,0xf6
  403166:	mov    bh,0x15
  403168:	mov    ebp,?
  40316a:	fwait
  40316b:	hlt    
  40316c:	adc    eax,0xcf4d99d0
  403171:	hlt    
  403172:	add    ebx,edi
  403174:	stos   BYTE PTR es:[edi],al
  403175:	loopne 0x4031bf
  403177:	mov    ds:0xd3621dd,al
  40317c:	in     al,dx
  40317d:	push   cs
  40317e:	fsubr  DWORD PTR [eax+0x29608a1e]
  403184:	pop    es
  403185:	bound  ebp,QWORD PTR [ebx]
  403187:	dec    esi
  403188:	mov    bl,BYTE PTR [edx+0x6d]
  40318b:	je     0x4031ea
  40318d:	xchg   esi,eax
  40318e:	add    esp,DWORD PTR fs:[esi]
  403191:	int3   
  403192:	and    eax,0x56de8230
  403197:	sbb    DWORD PTR [edi],edx
  403199:	cs rcr esp,0x39
  40319d:	in     eax,dx
  40319e:	hlt    
  40319f:	pop    eax
  4031a0:	stc    
  4031a1:	mov    al,ds:0xb72f7d44
  4031a6:	cmp    edi,DWORD PTR [edx]
  4031a8:	xor    al,0x58
  4031aa:	js     0x4031fb
  4031ac:	sbb    al,0xfa
  4031ae:	mov    al,ds:0xa3ab0575
  4031b3:	aaa    
  4031b4:	popf   
  4031b5:	or     dl,BYTE PTR [esi]
  4031b7:	xchg   BYTE PTR [ebp-0x2c754356],bh
  4031bd:	inc    edi
  4031be:	sbb    al,0x7c
  4031c0:	ret    
  4031c1:	mov    dl,0xe7
  4031c3:	bound  edi,QWORD PTR [edx+0x780430a4]
  4031c9:	dec    ebx
  4031ca:	scas   eax,DWORD PTR es:[edi]
  4031cb:	test   BYTE PTR [bp+di],cl
  4031ce:	mov    eax,ds:0x9afdb34f
  4031d3:	jae    0x403182
  4031d5:	jl     0x40324e
  4031d7:	setnp  BYTE PTR [ecx-0x41]
  4031db:	add    ebx,DWORD PTR [ebp-0x66e5cea5]
  4031e1:	pop    esi
  4031e2:	dec    esp
  4031e3:	and    eax,0xfed6990c
  4031e8:	add    eax,0x94c34fbe
  4031ed:	sbb    BYTE PTR ds:0xa4d47661,cl
  4031f3:	inc    edi
  4031f4:	test   DWORD PTR [esi+0x23],ebx
  4031f7:	mov    dh,BYTE PTR [ebp-0x5766be9e]
  4031fd:	lahf   
  4031fe:	(bad)  
  4031ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403200:	mov    cs,WORD PTR gs:[edx+0x2f]
  403204:	outs   dx,DWORD PTR ds:[esi]
  403205:	test   DWORD PTR [edi-0x4f1bfd76],0x7d14751b
  40320f:	mov    eax,ds:0x9c479e5a
  403214:	jbe    0x403227
  403216:	pop    esi
  403217:	loope  0x40320d
  403219:	xor    edi,DWORD PTR [edx]
  40321b:	pop    esi
  40321c:	sub    esi,DWORD PTR [ecx-0x15]
  40321f:	imul   DWORD PTR [edi+0x4]
  403222:	scas   eax,DWORD PTR es:[edi]
  403223:	clc    
  403224:	cmp    al,0x89
  403226:	fnstsw WORD PTR [edi-0x5c]
  403229:	sub    al,0x99
  40322b:	jle    0x4031c7
  40322d:	cmp    al,0xfd
  40322f:	test   BYTE PTR [eax+0x59],bl
  403232:	push   ebx
  403233:	jb     0x403266
  403235:	xchg   esp,eax
  403236:	dec    ecx
  403237:	jge    0x4031c3
  403239:	loop   0x40324f
  40323b:	sub    BYTE PTR [esi],dh
  40323d:	jp     0x4031ca
  40323f:	sti    
  403240:	lea    esi,[edx+0x4a]
  403243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403244:	popf   
  403245:	pushf  
  403246:	call   0xc2c9:0x5e5fc6cd
  40324d:	or     al,0x0
  40324f:	push   ebp
  403250:	mov    ebp,esp
  403252:	mov    eax,ds:0x43c224
  403257:	add    DWORD PTR ds:0x43fbf0,edx
  40325d:	mov    edx,0x32729e
  403262:	movzx  ecx,WORD PTR ds:0x413b5a
  403269:	or     DWORD PTR ds:0x445364,ecx
  40326f:	sub    eax,edx
  403271:	mov    ecx,DWORD PTR ds:0x445374
  403277:	or     DWORD PTR ds:0x43fbf4,ecx
  40327d:	mov    ecx,0x7510857
  403282:	and    DWORD PTR ds:0x4427a8,0x43fc00
  40328c:	push   esi
  40328d:	and    DWORD PTR ds:0x4105cb,0x0
  403297:	jmp    0x4032a9
  40329c:	mov    esi,DWORD PTR ds:0x4105cb
  4032a2:	inc    esi
  4032a3:	mov    DWORD PTR ds:0x4105cb,esi
  4032a9:	cmp    DWORD PTR ds:0x4105cb,0x18
  4032b0:	jae    0x4032e1
  4032b6:	cmp    DWORD PTR ds:0x4105cb,0x24
  4032bd:	jne    0x4032dc
  4032c3:	push   0x2dca
  4032c8:	push   0x41071f
  4032cd:	push   DWORD PTR [ebp-0x18]
  4032d0:	push   DWORD PTR [ebp-0x18]
  4032d3:	push   DWORD PTR [ebp-0x10]
  4032d6:	call   DWORD PTR ds:0x43c4e4
  4032dc:	jmp    0x40329c
  4032e1:	mov    esi,DWORD PTR [ebp+0xc]
  4032e4:	add    DWORD PTR ds:0x43fbd8,0x43fbec
  4032ee:	xor    eax,ecx
  4032f0:	cmp    eax,esi
  4032f2:	je     0x403532
  4032f8:	mov    eax,ds:0x43c21c
  4032fd:	xor    DWORD PTR ds:0x445380,0x43cf
  403307:	jmp    0x4033ac
  40330c:	rol    BYTE PTR ds:0xad798db9,1
  403312:	loopne 0x403391
  403314:	dec    esi
  403315:	push   edi
  403316:	mov    cl,0x6e
  403318:	or     al,0x51
  40331a:	mov    cl,0x74
  40331c:	out    dx,al
  40331d:	add    bh,BYTE PTR [esp+edi*2-0xc]
  403321:	jl     0x40339f
  403323:	jl     0x403331
  403325:	cdq    
  403326:	cmp    ah,bl
  403328:	mov    edi,0x3babe76e
  40332d:	fnop   
  40332f:	xchg   ecx,eax
  403330:	sub    DWORD PTR [edx],0xffffff84
  403333:	mov    dh,cl
  403335:	enter  0x805,0x2e
  403339:	pop    esi
  40333a:	push   eax
  40333b:	pop    ebx
  40333c:	mov    ah,0x69
  40333e:	mov    eax,ds:0x885d1a84
  403343:	mov    esp,0x80aa6bc9
  403348:	push   ebx
  403349:	(bad)  
  40334a:	mov    BYTE PTR [esi],dl
  40334c:	leave  
  40334d:	jo     0x4033bb
  40334f:	fcomi  st,st(0)
  403351:	mov    ebp,0x44dbef54
  403356:	nop
  403357:	retf   
  403358:	adc    BYTE PTR [ecx+0x27a76af2],0xfd
  40335f:	mov    ch,0x40
  403361:	pop    edx
  403362:	call   0x8d4800c6
  403367:	repz mov esi,0x72524cd5
  40336d:	mov    eax,ds:0xce254a82
  403372:	fcmovb st,st(4)
  403374:	repnz (bad) 
  403376:	and    BYTE PTR [ecx],al
  403378:	popa   
  403379:	ja     0x4033cf
  40337b:	sti    
  40337c:	pushf  
  40337d:	xchg   ebp,eax
  40337e:	js     0x403353
  403380:	adc    ebp,ebx
  403382:	pop    es
  403383:	and    dl,BYTE PTR [ebx+ebp*2-0x46ee304c]
  40338a:	push   ebx
  40338b:	leave  
  40338c:	(bad)  
  40338d:	aas    
  40338e:	call   0xab4283b
  403393:	pushf  
  403394:	pop    ecx
  403395:	dec    ebx
  403396:	mov    dh,0x3c
  403398:	mov    esp,0x681c41d1
  40339d:	cli    
  40339e:	ins    DWORD PTR es:[edi],dx
  40339f:	push   ebp
  4033a0:	push   esp
  4033a1:	cdq    
  4033a2:	popa   
  4033a3:	mov    gs,WORD PTR [edi+eax*2+0x2c]
  4033a7:	int    0x28
  4033a9:	int3   
  4033aa:	xchg   di,ax
  4033ac:	mov    esi,DWORD PTR [ebp+0xc]
  4033af:	sub    eax,edx
  4033b1:	jmp    0x403456
  4033b6:	sahf   
  4033b7:	and    al,0xc4
  4033b9:	cwde   
  4033ba:	inc    esi
  4033bb:	js     0x40340f
  4033bd:	cmp    dl,BYTE PTR [eax+0x4a]
  4033c0:	fucomp st(0)
  4033c2:	mov    edi,0x66264c7b
  4033c7:	add    bh,BYTE PTR [esp+edi*2-0xc]
  4033cb:	jl     0x403449
  4033cd:	jl     0x403387
  4033cf:	push   ebx
  4033d0:	pop    edx
  4033d1:	push   ebx
  4033d2:	add    dh,cl
  4033d4:	test   BYTE PTR [edx+0x476e31d],cl
  4033da:	aaa    
  4033db:	add    edx,edx
  4033dd:	aaa    
  4033de:	aaa    
  4033df:	mov    bh,0x6b
  4033e1:	jne    0x40345a
  4033e3:	xchg   esi,eax
  4033e4:	test   al,dl
  4033e6:	loope  0x40338b
  4033e8:	jge    0x4033bd
  4033ea:	sbb    ecx,DWORD PTR [ecx+0x244af299]
  4033f0:	rol    BYTE PTR [edi+0xa],1
  4033f3:	test   bh,ch
  4033f5:	lock push ds
  4033f7:	sbb    edi,0x8437027d
  4033fd:	(bad)  
  4033fe:	in     al,dx
  4033ff:	or     DWORD PTR [ebp+0xfd55c64],ebx
  403405:	xchg   esi,eax
  403406:	out    dx,al
  403407:	and    ebx,ecx
  403409:	mov    ds:0xed227b58,eax
  40340e:	shl    BYTE PTR [ecx+edi*8],cl
  403411:	pop    edx
  403412:	xor    DWORD PTR [esi],eax
  403414:	stos   BYTE PTR es:[edi],al
  403415:	pop    ss
  403416:	test   DWORD PTR ds:0x334ed975,esp
  40341c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40341d:	out    dx,al
  40341e:	xor    dl,BYTE PTR [edi+0x4f]
  403421:	xchg   edx,eax
  403422:	ss mov edi,ebp
  403425:	inc    edx
  403426:	inc    ebx
  403427:	sbb    eax,0x6060c72e
  40342c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40342d:	cmp    al,0x4d
  40342f:	xor    eax,0x6ececda2
  403434:	ss out dx,eax
  403436:	inc    ebx
  403437:	shl    cl,cl
  403439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40343a:	adc    eax,0xafa9eb16
  40343f:	fidiv  DWORD PTR [edx+0x82a5814]
  403445:	stos   BYTE PTR es:[edi],al
  403446:	mov    BYTE PTR [ebx],bh
  403448:	push   cs
  403449:	xchg   ebp,eax
  40344a:	jp     0x403485
  40344c:	push   ds
  40344d:	sahf   
  40344e:	push   0x36
  403450:	cmp    BYTE PTR [ecx+0x61421dd4],ah
  403456:	xor    eax,ecx
  403458:	cmp    eax,esi
  40345a:	jne    0x403470
  403460:	mov    eax,ds:0x43c224
  403465:	add    eax,DWORD PTR ds:0x43c21c
  40346b:	jmp    0x40351c
  403470:	mov    eax,DWORD PTR [ebp+0xc]
  403473:	xor    eax,ecx
  403475:	jmp    0x40351a
  40347a:	ficomp WORD PTR [edx+0x22]
  40347d:	mov    WORD PTR [edx+0x277a5264],?
  403483:	adc    eax,0x877dfc0e
  403488:	imul   esp,ecx,0x7c7c05fe
  40348e:	hlt    
  40348f:	jl     0x40350d
  403491:	jl     0x403477
  403493:	add    ebx,edx
  403495:	repnz test ah,cl
  403498:	hlt    
  403499:	push   0xca00316e
  40349e:	mov    eax,0xbad8d8ea
  4034a3:	xchg   esp,eax
  4034a4:	inc    ebp
  4034a5:	fld    QWORD PTR [ebp-0x2fc8dc10]
  4034ab:	enter  0x9fec,0x99
  4034af:	out    0xf2,eax
  4034b1:	sub    bh,BYTE PTR [eax]
  4034b3:	bnd ja 0x40347f
  4034b6:	mov    ebx,0x21810f10
  4034bb:	imul   BYTE PTR [ecx]
  4034bd:	imul   eax,DWORD PTR [esi],0x38
  4034c0:	ds ins BYTE PTR es:[edi],dx
  4034c2:	fldenv [edx+ebp*8]
  4034c5:	sbb    ebx,0x45
  4034c8:	inc    esp
  4034c9:	and    DWORD PTR [edx+0x7e],ebx
  4034cc:	dec    ebp
  4034cd:	int    0x51
  4034cf:	mov    al,ds:0x34de0d7b
  4034d4:	mov    dl,0x5e
  4034d6:	and    eax,0x727bed4f
  4034db:	mov    bh,0x3d
  4034dd:	scas   eax,DWORD PTR es:[edi]
  4034de:	and    ecx,DWORD PTR [ecx]
  4034e0:	popa   
  4034e1:	fdiv   DWORD PTR [ebp+0x6f]
  4034e4:	out    0x9b,al
  4034e6:	push   edx
  4034e7:	fs imul edi,ebx,0x45
  4034eb:	push   esp
  4034ec:	scas   eax,DWORD PTR es:[edi]
  4034ed:	fcomp  DWORD PTR [eax-0x2a]
  4034f0:	fsub   QWORD PTR [edi+ebx*8-0x24]
  4034f4:	mov    esp,0xcab8c3d6
  4034f9:	(bad)  
  4034fa:	mov    BYTE PTR [esi+0x2f18fe8e],al
  403500:	mov    eax,0x8ec6c1b0
  403505:	inc    ebp
  403506:	je     0x403582
  403508:	cmp    bh,BYTE PTR [edx]
  40350a:	add    DWORD PTR [ebx],esp
  40350c:	call   FWORD PTR [ebp+0xc]
  40350f:	cmp    eax,ebp
  403511:	sub    dh,bl
  403513:	ret    
  403514:	push   edi
  403515:	or     al,bl
  403517:	pop    ds
  403518:	sub    al,0xe7
  40351a:	add    eax,edx
  40351c:	mov    ds:0x43c21c,eax
  403521:	mov    eax,DWORD PTR [ebp+0xc]
  403524:	xor    eax,ecx
  403526:	add    eax,edx
  403528:	mov    ds:0x43c224,eax
  40352d:	jmp    0x40353c
  403532:	mov    eax,ds:0x43c224
  403537:	mov    ds:0x43c21c,eax
  40353c:	mov    eax,DWORD PTR [ebp+0x8]
  40353f:	mov    eax,DWORD PTR [eax]
  403541:	mov    ecx,DWORD PTR ds:0x43c21c
  403547:	add    DWORD PTR [eax],ecx
  403549:	pop    esi
  40354a:	pop    ebp
  40354b:	ret    0x8
  40354e:	push   ebp
  40354f:	mov    ebp,esp
  403551:	sub    esp,0x44
  403554:	push   edi
  403555:	mov    eax,DWORD PTR [ebp+0xc]
  403558:	and    edi,DWORD PTR ds:0x43fbdc
  40355e:	mov    DWORD PTR [ebp-0x10],eax
  403561:	mov    DWORD PTR ds:0x44537c,0x11
  40356b:	cmp    DWORD PTR ds:0x44537c,0x0
  403572:	je     0x4035af
  403578:	cmp    DWORD PTR ds:0x44537c,0x1d
  40357f:	jne    0x403595
  403585:	push   0x410650
  40358a:	push   0x410666
  40358f:	call   DWORD PTR ds:0x43c82c
  403595:	mov    eax,ds:0x44537c
  40359a:	dec    eax
  40359b:	mov    ds:0x44537c,eax
  4035a0:	jmp    0x40356b
  4035a5:	xor    DWORD PTR ds:0x4427b4,0x5830
  4035af:	mov    eax,DWORD PTR [ebp+0x8]
  4035b2:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4035b9:	mov    edi,DWORD PTR ds:0x4427a8
  4035bf:	xor    DWORD PTR ds:0x4427b8,edi
  4035c5:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4035cc:	xor    edx,DWORD PTR ds:0x413b4a
  4035d2:	mov    edx,DWORD PTR [ebp+0x8]
  4035d5:	and    edi,edi
  4035d7:	jmp    0x40373c
  4035dc:	loopne 0x4035cc
  4035de:	enter  0xcaef,0xfd
  4035e2:	sti    
  4035e3:	in     eax,0xa8
  4035e5:	cmp    eax,edi
  4035e7:	jg     0x403595
  4035e9:	sub    ah,dh
  4035eb:	std    
  4035ec:	jbe    0x4035f2
  4035ee:	jl     0x40366c
  4035f0:	xor    al,0x7f
  4035f2:	jl     0x403670
  4035f4:	mov    ebp,0x9d44dd63
  4035f9:	mov    cl,0x67
  4035fb:	retf   
  4035fc:	adc    eax,0x7fc198c0
  403601:	daa    
  403602:	jmp    0x7fbd:0x4f6490b5
  403609:	aas    
  40360a:	iret   
  40360b:	xchg   BYTE PTR [esi-0x2e],ch
  40360e:	mov    edi,0xda380dd6
  403613:	and    edi,DWORD PTR [eax+0x4ea03f72]
  403619:	sahf   
  40361a:	mov    ebx,0x3fff92e6
  40361f:	fnstenv [ecx]
  403621:	mov    ebx,0xdd8802a9
  403626:	jge    0x4035b6
  403628:	and    ah,dl
  40362a:	jb     0x4035e4
  40362c:	call   0x2774:0xaafc1618
  403633:	jno    0x40369e
  403635:	sar    BYTE PTR [edi+0x34],0x5e
  403639:	test   BYTE PTR [ebx+0x6f],bl
  40363c:	mov    dh,0xdb
  40363e:	inc    esi
  40363f:	gs push ebx
  403641:	mov    ch,0xe3
  403643:	add    ch,BYTE PTR [eax]
  403645:	outs   dx,BYTE PTR ds:[esi]
  403646:	sub    edi,edi
  403648:	imul   edi,DWORD PTR [ebp+0x64],0xc9af554
  40364f:	sti    
  403650:	mov    eax,0xb5a6300f
  403655:	sub    BYTE PTR [esi+0x7c81efe4],bl
  40365b:	loopne 0x403663
  40365d:	leave  
  40365e:	retf   0xfae6
  403661:	xchg   ecx,eax
  403662:	push   0x52
  403664:	or     BYTE PTR [ebx+edi*2],dl
  403667:	mov    ebp,0x1f524a49
  40366c:	mov    esp,0xe932bd48
  403671:	xchg   esp,eax
  403672:	loope  0x40362e
  403674:	nop
  403675:	and    DWORD PTR [edi+0x794aa49f],ecx
  40367b:	inc    eax
  40367c:	pop    edi
  40367d:	cmp    al,0xe1
  40367f:	ret    
  403680:	inc    edx
  403681:	aas    
  403682:	pusha  
  403683:	hlt    
  403684:	ds pop esp
  403686:	add    bh,BYTE PTR [esi]
  403688:	dec    esp
  403689:	test   WORD PTR [ecx+0x5274ea1f],0xa662
  403692:	test   bh,al
  403694:	dec    eax
  403695:	mov    ebp,0xf85525a6
  40369a:	adc    BYTE PTR [esi+0x69],cl
  40369d:	cmp    BYTE PTR [edx+0x77bd3da1],0xa4
  4036a4:	xchg   BYTE PTR [ecx-0x3],bh
  4036a7:	cmc    
  4036a8:	ret    
  4036a9:	push   esp
  4036aa:	cli    
  4036ab:	clc    
  4036ac:	sub    dl,BYTE PTR [edx+0x50def92e]
  4036b2:	jle    0x4036fe
  4036b4:	mov    cl,0x31
  4036b6:	fdivr  DWORD PTR [edx+0x7fa3c837]
  4036bc:	(bad)
  4036c1:	sbb    bh,BYTE PTR [ebx-0x24]
  4036c4:	mov    ebp,0xdf7968b1
  4036c9:	jae    0x40367c
  4036cb:	pop    ss
  4036cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036cd:	adc    eax,DWORD PTR [ebx]
  4036cf:	rcl    BYTE PTR [eax+edx*8-0x6681862f],cl
  4036d6:	test   al,0x81
  4036d8:	popa   
  4036d9:	into   
  4036da:	ins    BYTE PTR es:[edi],dx
  4036db:	mov    BYTE PTR ds:[ebx+0x4b],dh
  4036df:	mov    edx,0xc0271697
  4036e4:	jle    0x4036dc
  4036e6:	xlat   BYTE PTR ds:[ebx]
  4036e7:	push   0xffffffff
  4036e9:	jle    0x40368c
  4036eb:	(bad)
  4036ee:	mov    ch,0x65
  4036f0:	xchg   esp,eax
  4036f1:	mov    dl,0x7f
  4036f3:	call   0x3de461cc
  4036f8:	mov    gs:0x958ada8b,eax
  4036fe:	jecxz  0x40373c
  403700:	or     BYTE PTR ds:0x187cb6c5,cl
  403706:	arpl   cx,ax
  403708:	jne    0x403696
  40370a:	mov    esi,0x5e791f
  40370f:	mov    ebp,0x7d6685b4
  403714:	sub    eax,0x26d09572
  403719:	dec    ecx
  40371a:	imul   edi,edx,0xffffff82
  40371d:	sar    dh,0x68
  403720:	aas    
  403721:	or     DWORD PTR [ecx+0x5b],ebx
  403724:	leave  
  403725:	pop    ss
  403726:	shr    DWORD PTR [edx+0x44c7279f],0xaa
  40372d:	push   ds
  40372e:	repz jnp 0x40376d
  403731:	loopne 0x4036c8
  403733:	imul   ebx,DWORD PTR [ebp+0x2593d98d],0x6b
  40373a:	sub    eax,0xc045894f
  40373f:	mov    eax,0x7510857
  403744:	xor    edx,eax
  403746:	mov    ecx,0x32729e
  40374b:	add    edx,ecx
  40374d:	adc    edi,DWORD PTR ds:0x43fbe8
  403753:	mov    DWORD PTR [ebp-0x8],edx
  403756:	mov    edi,DWORD PTR ds:0x43fc14
  40375c:	mov    edx,DWORD PTR ds:0x43fc1c
  403762:	sub    edx,edi
  403764:	xor    edi,DWORD PTR [edi+edx*1]
  403767:	mov    edx,DWORD PTR [ebp+0x8]
  40376a:	xor    edx,eax
  40376c:	not    edi
  40376e:	add    edx,ecx
  403770:	add    DWORD PTR ds:0x43fbdc,ebx
  403776:	mov    DWORD PTR [ebp+0xc],edx
  403779:	and    DWORD PTR ds:0x413b4a,0x0
  403783:	mov    edx,DWORD PTR ds:0x413b4a
  403789:	inc    edx
  40378a:	mov    DWORD PTR ds:0x413b4a,edx
  403790:	cmp    DWORD PTR ds:0x413b4a,0x4
  403797:	jne    0x4037b0
  40379d:	push   0x4105bf
  4037a2:	push   DWORD PTR [ebp-0x28]
  4037a5:	push   0x6880
  4037aa:	call   DWORD PTR ds:0x43c830
  4037b0:	cmp    DWORD PTR ds:0x413b4a,0x3
  4037b7:	jne    0x4037cc
  4037bd:	xor    edx,edx
  4037bf:	xor    edx,DWORD PTR ds:0x413b4a
  4037c5:	inc    edx
  4037c6:	mov    DWORD PTR ds:0x413b4a,edx
  4037cc:	cmp    DWORD PTR ds:0x413b4a,0x1b
  4037d3:	jb     0x403783
  4037d9:	adc    edi,DWORD PTR ds:0x4427a4
  4037df:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  4037e6:	adc    edi,DWORD PTR ds:0x43fbfc
  4037ec:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4037f3:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  4037fa:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403801:	and    DWORD PTR ds:0x413b4e,0x0
  40380b:	jmp    0x40381d
  403810:	mov    edx,DWORD PTR ds:0x413b4e
  403816:	inc    edx
  403817:	mov    DWORD PTR ds:0x413b4e,edx
  40381d:	cmp    DWORD PTR ds:0x413b4e,0x1e
  403824:	jae    0x40386c
  40382a:	cmp    DWORD PTR ds:0x413b4e,0xa
  403831:	jne    0x403847
  403837:	push   0x48af
  40383c:	push   0x400000
  403841:	call   DWORD PTR ds:0x43c834
  403847:	cmp    DWORD PTR ds:0x413b4e,0x9
  40384e:	jne    0x403861
  403854:	mov    edx,DWORD PTR ds:0x413b4e
  40385a:	inc    edx
  40385b:	mov    DWORD PTR ds:0x413b4e,edx
  403861:	jmp    0x403810
  403866:	or     DWORD PTR ds:0x43fbec,ecx
  40386c:	mov    DWORD PTR [ebp-0x34],0xf89c8530
  403873:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40387a:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  403881:	or     edi,edx
  403883:	mov    edx,DWORD PTR [ebp+0x8]
  403886:	mov    DWORD PTR ds:0x413b5e,0x6ab7
  403890:	xor    edx,eax
  403892:	or     DWORD PTR ds:0x4105db,edx
  403898:	mov    edi,DWORD PTR [ebp-0x10]
  40389b:	add    edx,ecx
  40389d:	cmp    edi,edx
  40389f:	mov    DWORD PTR ds:0x43fbd8,0x7f1d
  4038a9:	je     0x40511b
  4038af:	mov    DWORD PTR ds:0x413b4a,0x4e02
  4038b9:	push   ebx
  4038ba:	mov    DWORD PTR ds:0x4427a4,0x557d
  4038c4:	jmp    0x4050f6
  4038c9:	mov    edx,DWORD PTR [ebp-0x8]
  4038cc:	and    DWORD PTR ds:0x445374,0x0
  4038d6:	jmp    0x4038e8
  4038db:	mov    edi,DWORD PTR ds:0x445374
  4038e1:	inc    edi
  4038e2:	mov    DWORD PTR ds:0x445374,edi
  4038e8:	cmp    DWORD PTR ds:0x445374,0x10
  4038ef:	jae    0x403921
  4038f5:	cmp    DWORD PTR ds:0x445374,0x19
  4038fc:	jne    0x403912
  403902:	push   0x7f28
  403907:	push   0x230d
  40390c:	call   DWORD PTR ds:0x43c838
  403912:	jmp    0x4038db
  403917:	mov    DWORD PTR ds:0x43fbdc,0x3377
  403921:	mov    edi,DWORD PTR [ebp-0x10]
  403924:	or     DWORD PTR ds:0x4427bc,0x66ab
  40392e:	jmp    0x403a93
  403933:	std    
  403934:	xor    al,0x25
  403936:	mov    eax,ds:0x487d7d25
  40393b:	add    al,0x98
  40393d:	test   al,0x7f
  40393f:	adc    ebp,DWORD PTR [ecx]
  403941:	stos   DWORD PTR es:[edi],eax
  403942:	pop    eax
  403943:	into   
  403944:	pop    es
  403945:	jl     0x4039c3
  403947:	xor    al,0x7f
  403949:	jl     0x4039c7
  40394b:	ss jg  0x4039b5
  40394e:	mov    edx,0x76d08cd
  403953:	(bad)  
  403954:	xor    BYTE PTR [eax-0x6eb62765],ch
  40395a:	hlt    
  40395b:	dec    edi
  40395c:	mov    al,0xbb
  40395e:	xchg   ebp,eax
  40395f:	adc    DWORD PTR [eax],0x49dc6675
  403965:	test   BYTE PTR ds:0x6c9a1814,al
  40396b:	xchg   edx,eax
  40396c:	rol    cl,0x3c
  40396f:	ret    0x5df5
  403972:	jae    0x403908
  403974:	push   ecx
  403975:	cmp    edi,DWORD PTR [edi-0x37]
  403978:	(bad)  
  403979:	and    ah,bh
  40397b:	mov    ch,0x4e
  40397d:	and    DWORD PTR [esi+0xc],ecx
  403980:	fcom   QWORD PTR [ebx]
  403982:	dec    ebx
  403983:	push   0x9349a623
  403988:	in     al,0x62
  40398a:	jge    0x403974
  40398c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40398d:	ret    
  40398e:	in     al,0xcb
  403990:	(bad)  
  403991:	jmp    0xb38f:0x810f83c3
  403998:	sub    al,0xb8
  40399a:	dec    ebx
  40399b:	stos   BYTE PTR es:[edi],al
  40399c:	je     0x40393e
  40399e:	lea    eax,[eax-0x27]
  4039a1:	mov    ecx,0x11d131ae
  4039a6:	scas   eax,DWORD PTR es:[edi]
  4039a7:	sti    
  4039a8:	mov    ch,0xaf
  4039aa:	inc    ebx
  4039ab:	fistp  DWORD PTR [esi]
  4039ad:	fbld   TBYTE PTR [ecx*2+0x47465e25]
  4039b4:	mov    ch,0x78
  4039b6:	sub    esp,eax
  4039b8:	sub    ch,al
  4039ba:	fbld   TBYTE PTR [edi-0x47]
  4039bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039be:	pop    ds
  4039bf:	inc    ebx
  4039c0:	mov    dh,0xa0
  4039c2:	mov    al,0xd6
  4039c4:	xor    dl,ch
  4039c6:	popa   
  4039c7:	mov    al,ds:0xca5d2d40
  4039cc:	cmp    bl,BYTE PTR [eax-0x5d]
  4039cf:	xor    al,0xf0
  4039d1:	enter  0x18a8,0xa0
  4039d5:	lods   al,BYTE PTR ds:[esi]
  4039d6:	mov    al,ds:0x525ad7f5
  4039db:	add    eax,0x41fcf787
  4039e0:	cdq    
  4039e1:	outs   dx,DWORD PTR ds:[esi]
  4039e2:	popa   
  4039e3:	and    bh,dh
  4039e5:	imul   esp,DWORD PTR [ecx],0xbbd8b408
  4039eb:	aad    0xa3
  4039ed:	repnz pop esp
  4039ef:	pop    esp
  4039f0:	jmp    0x57831f93
  4039f5:	cli    
  4039f6:	jae    0x403a07
  4039f8:	sbb    ebx,DWORD PTR [ebx]
  4039fa:	mov    dh,0x44
  4039fc:	and    dh,BYTE PTR [ebx+0x1a]
  4039ff:	inc    ebp
  403a00:	pusha  
  403a01:	nop
  403a02:	aaa    
  403a03:	pop    es
  403a04:	mov    dl,0x56
  403a06:	(bad)  
  403a07:	dec    DWORD PTR [eax+0x6]
  403a0a:	jmp    0x403a26
  403a0c:	mov    ds:0xe3d4b345,eax
  403a11:	jae    0x4039d3
  403a13:	mov    cl,0x49
  403a15:	cmp    DWORD PTR [edi+eax*4],ebx
  403a18:	call   0x15d74e39
  403a1d:	and    DWORD PTR [esp+ecx*4+0x33],edx
  403a21:	mov    dl,0xf7
  403a23:	pop    esp
  403a24:	retf   
  403a25:	shl    esi,1
  403a27:	ret    
  403a28:	pop    es
  403a29:	sub    edx,ebx
  403a2b:	xor    esp,DWORD PTR ds:0x83d61e68
  403a31:	push   ds
  403a32:	aam    0x4c
  403a34:	add    ecx,esi
  403a36:	jmp    ecx
  403a38:	inc    esp
  403a39:	aas    
  403a3a:	cwde   
  403a3b:	out    dx,eax
  403a3c:	dec    ebp
  403a3d:	xlat   BYTE PTR ds:[ebx]
  403a3e:	imul   edx,DWORD PTR [edi-0x42c5a747],0xa39654f8
  403a48:	aam    0x8
  403a4a:	sbb    BYTE PTR [ebx+0x722650a],bh
  403a50:	push   eax
  403a51:	rol    DWORD PTR ds:[ecx],cl
  403a54:	sti    
  403a55:	mov    al,ds:0x173f670b
  403a5a:	cdq    
  403a5b:	mov    esp,0xb05d4826
  403a60:	dec    edi
  403a61:	lock push cs
  403a63:	jb     0x403a85
  403a65:	lds    esp,FWORD PTR [ecx-0x2c981ac9]
  403a6b:	stc    
  403a6c:	leave  
  403a6d:	(bad)  [edx-0x1a]
  403a70:	imul   ecx,DWORD PTR [edi],0x66544d50
  403a76:	fist   WORD PTR [edx]
  403a78:	xor    al,0x64
  403a7a:	ret    
  403a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a7c:	clc    
  403a7d:	pop    ss
  403a7e:	add    DWORD PTR ds:[esi],ebx
  403a81:	(bad)  
  403a82:	test   eax,0xf12b2745
  403a87:	ins    BYTE PTR es:[edi],dx
  403a88:	lds    edi,FWORD PTR [ecx+ebx*4+0x6]
  403a8c:	hlt    
  403a8d:	xchg   ebx,eax
  403a8e:	sbb    edx,DWORD PTR [eax]
  403a90:	loop   0x403a53
  403a92:	jecxz  0x403abf
  403a94:	cli    
  403a95:	adc    DWORD PTR ds:0x445368,0x1ab0
  403a9f:	mov    edx,DWORD PTR [ebp-0x4]
  403aa2:	xor    DWORD PTR ds:0x4427bc,0x35da
  403aac:	xor    edx,eax
  403aae:	xor    DWORD PTR ds:0x4427c0,0x513b
  403ab8:	add    edx,ecx
  403aba:	mov    DWORD PTR ds:0x44536c,0x7aea
  403ac4:	cmp    edi,edx
  403ac6:	mov    DWORD PTR ds:0x4105bf,0x2e05
  403ad0:	jb     0x40511a
  403ad6:	xor    edx,0x3e56
  403adc:	mov    edx,DWORD PTR [ebp-0x28]
  403adf:	mov    edi,DWORD PTR [ebp-0x4]
  403ae2:	xor    edx,eax
  403ae4:	and    DWORD PTR ds:0x43fbd8,0x0
  403aee:	jmp    0x403b02
  403af3:	xor    ebx,ebx
  403af5:	xor    ebx,DWORD PTR ds:0x43fbd8
  403afb:	inc    ebx
  403afc:	mov    DWORD PTR ds:0x43fbd8,ebx
  403b02:	cmp    DWORD PTR ds:0x43fbd8,0x16
  403b09:	jae    0x403b9b
  403b0f:	cmp    DWORD PTR ds:0x43fbd8,0xd
  403b16:	jne    0x403b25
  403b1c:	push   DWORD PTR [ebp-0x18]
  403b1f:	call   DWORD PTR ds:0x43c4e8
  403b25:	cmp    DWORD PTR ds:0x43fbd8,0xc
  403b2c:	jne    0x403b41
  403b32:	xor    ebx,ebx
  403b34:	xor    ebx,DWORD PTR ds:0x43fbd8
  403b3a:	inc    ebx
  403b3b:	mov    DWORD PTR ds:0x43fbd8,ebx
  403b41:	jmp    0x403af3
  403b46:	and    DWORD PTR ds:0x43fbd8,0x0
  403b50:	jmp    0x403b64
  403b55:	xor    ebx,ebx
  403b57:	add    ebx,DWORD PTR ds:0x43fbd8
  403b5d:	inc    ebx
  403b5e:	mov    DWORD PTR ds:0x43fbd8,ebx
  403b64:	cmp    DWORD PTR ds:0x43fbd8,0x19
  403b6b:	jae    0x403b9b
  403b71:	cmp    DWORD PTR ds:0x43fbd8,0x1e
  403b78:	jne    0x403b96
  403b7e:	push   DWORD PTR [ebp-0x1c]
  403b81:	push   0x4801
  403b86:	push   0x66a1
  403b8b:	push   0x3965
  403b90:	call   DWORD PTR ds:0x43c5b4
  403b96:	jmp    0x403b55
  403b9b:	xor    edi,eax
  403b9d:	mov    ebx,DWORD PTR ds:0x43fc04
  403ba3:	mov    ebx,DWORD PTR [ebx]
  403ba5:	sbb    DWORD PTR ds:0x413b42,ebx
  403bab:	add    edi,ecx
  403bad:	jmp    0x403d12
  403bb2:	jno    0x403b37
  403bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb5:	imul   esp,DWORD PTR [ebp+0x727dd96d],0x2a
  403bbc:	pop    esi
  403bbd:	clc    
  403bbe:	je     0x403bc4
  403bc0:	lods   eax,DWORD PTR ds:[esi]
  403bc1:	aam    0x86
  403bc3:	push   es
  403bc4:	jl     0x403c42
  403bc6:	xor    al,0x7f
  403bc8:	jl     0x403c46
  403bca:	mov    dl,0x13
  403bcc:	call   0xe49:0x22f2a8bc
  403bd3:	jne    0x403bf8
  403bd5:	(bad)  
  403bd6:	repz call 0xa95b:0x3f055f3b
  403bde:	jl     0x403bb4
  403be0:	jl     0x403b71
  403be2:	(bad)  [esp+edi*8-0x40bd191f]
  403be9:	mov    esp,0x874236c8
  403bee:	sar    BYTE PTR [esi],cl
  403bf0:	scas   al,BYTE PTR es:[edi]
  403bf1:	popa   
  403bf2:	adc    cl,0x5b
  403bf5:	lahf   
  403bf6:	es aaa 
  403bf8:	fcmove st,st(4)
  403bfa:	mov    ecx,0x553b873
  403bff:	pushf  
  403c00:	stc    
  403c01:	mov    bh,0x8c
  403c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c04:	in     eax,dx
  403c05:	push   ebp
  403c06:	(bad)  
  403c07:	sahf   
  403c08:	jnp    0x403bab
  403c0a:	inc    ecx
  403c0b:	or     eax,0x376c6e64
  403c10:	push   ds
  403c11:	ins    DWORD PTR es:[edi],dx
  403c12:	sahf   
  403c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c14:	cmp    ah,al
  403c16:	(bad)  
  403c17:	das    
  403c18:	add    al,BYTE PTR [edi]
  403c1a:	sti    
  403c1b:	mov    al,ds:0x6973799a
  403c20:	jg     0x403bed
  403c22:	aas    
  403c23:	add    eax,0xc1ecc956
  403c28:	and    DWORD PTR [esi+eiz*1-0x3049b9b8],ebp
  403c2f:	rcr    ch,0x47
  403c32:	cmp    DWORD PTR [ecx-0x1d],ebx
  403c35:	inc    ebx
  403c36:	int3   
  403c37:	mov    esp,0x5ece5396
  403c3c:	pop    ss
  403c3d:	jno    0x403c03
  403c3f:	jl     0x403c8d
  403c41:	sti    
  403c42:	jnp    0x403c2f
  403c44:	in     al,0x1c
  403c46:	pushf  
  403c47:	mov    dl,BYTE PTR [ecx+0x2d]
  403c4a:	jl     0x403be6
  403c4c:	mov    al,ds:0xd2c1a0d9
  403c51:	and    eax,DWORD PTR [edi-0x398986e6]
  403c57:	push   ebx
  403c58:	inc    ecx
  403c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c5a:	cmp    eax,0x5b62ca8c
  403c5f:	clc    
  403c60:	adc    eax,DWORD PTR [edx-0x68a28933]
  403c66:	sub    DWORD PTR [edx+eiz*4-0x2d24096a],0x7e0a3eca
  403c71:	mov    WORD PTR ds:0x4ae7314,ss
  403c77:	inc    ecx
  403c78:	fs sbb eax,0xa6b0e547
  403c7e:	fs pop eax
  403c80:	cld    
  403c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c82:	xor    BYTE PTR [ebp-0x37214af9],ah
  403c88:	and    DWORD PTR [ecx+0x50bbccfb],ebp
  403c8e:	aam    0xa3
  403c90:	int    0x4e
  403c92:	ins    DWORD PTR es:[edi],dx
  403c93:	mov    ch,0xd
  403c95:	je     0x403ce5
  403c97:	mov    ch,BYTE PTR [esi+ebp*4+0x4e]
  403c9b:	push   ss
  403c9c:	jmp    0x63e5bd0e
  403ca1:	dec    ebx
  403ca2:	push   esi
  403ca3:	add    DWORD PTR [ecx+0x7e00e435],ebx
  403ca9:	and    al,0x5e
  403cab:	push   0x6f
  403cad:	mov    DWORD PTR [ecx-0x7b],edi
  403cb0:	bound  ebx,QWORD PTR [esp-0x25c9dbd2]
  403cb7:	retf   0x7fa0
  403cba:	mov    BYTE PTR [edx-0x29ae7773],dh
  403cc0:	jp     0x403c54
  403cc2:	ins    BYTE PTR es:[edi],dx
  403cc3:	int3   
  403cc4:	jl     0x403ce4
  403cc6:	scas   al,BYTE PTR es:[edi]
  403cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cc8:	pop    ebp
  403cc9:	ja     0x403d0c
  403ccb:	call   0x5f2e:0xb2369fab
  403cd2:	pop    ebx
  403cd3:	inc    edi
  403cd4:	sbb    ebp,DWORD PTR [ebp+0x4c]
  403cd7:	dec    esi
  403cd8:	inc    esp
  403cd9:	fcomp  DWORD PTR [ebx+0x7c]
  403cdc:	mov    ecx,0x411a96e3
  403ce1:	pcmpeqb mm7,mm3
  403ce4:	stos   BYTE PTR es:[edi],al
  403ce5:	pop    ecx
  403ce6:	xchg   esi,eax
  403ce7:	cli    
  403ce8:	push   ds
  403ce9:	aad    0xad
  403ceb:	scas   eax,DWORD PTR es:[edi]
  403cec:	and    al,0xeb
  403cee:	loopne 0x403cca
  403cf0:	adc    eax,DWORD PTR [edi-0x53]
  403cf3:	and    eax,0x25ec8b8
  403cf8:	ins    DWORD PTR es:[edi],dx
  403cf9:	cmp    DWORD PTR [edi-0x68c59e03],edx
  403cff:	sub    al,BYTE PTR [ebx-0x1e]
  403d02:	cli    
  403d03:	loope  0x403d1f
  403d05:	test   BYTE PTR [ebx],ah
  403d07:	out    dx,eax
  403d08:	inc    ebx
  403d09:	das    
  403d0a:	jb     0x403d20
  403d0c:	iret   
  403d0d:	in     eax,dx
  403d0e:	test   eax,0x37c6a3d
  403d13:	rol    DWORD PTR [ecx+0x413b4e25],1
  403d19:	add    BYTE PTR [eax],al
  403d1b:	add    BYTE PTR [eax],al
  403d1d:	add    BYTE PTR [ebx+0x413b4e1d],cl
  403d23:	add    BYTE PTR [ebx-0x77],al
  403d26:	sbb    eax,0x413b4e
  403d2b:	cmp    DWORD PTR ds:0x413b4e,0x1a
  403d32:	jne    0x403d41
  403d38:	push   DWORD PTR [ebp-0xc]
  403d3b:	call   DWORD PTR ds:0x43c4ec
  403d41:	cmp    DWORD PTR ds:0x413b4e,0x12
  403d48:	jb     0x403d1e
  403d4e:	add    ebx,DWORD PTR ds:0x43fbe4
  403d54:	imul   edx,edi
  403d57:	mov    edi,DWORD PTR [ebp-0x8]
  403d5a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d5d:	sbb    DWORD PTR ds:0x4427b8,0x3f1a
  403d67:	sub    ebx,edi
  403d69:	cmp    ebx,edx
  403d6b:	ja     0x403d93
  403d71:	add    edx,DWORD PTR ds:0x4105cb
  403d77:	mov    edx,DWORD PTR [ebp-0x4]
  403d7a:	xor    edx,eax
  403d7c:	not    DWORD PTR ds:0x445364
  403d82:	add    edx,ecx
  403d84:	mov    DWORD PTR ds:0x445370,0x3a6f
  403d8e:	jmp    0x4047a2
  403d93:	movzx  ebx,WORD PTR ds:0x4427ac
  403d9a:	or     DWORD PTR ds:0x43fbe8,ebx
  403da0:	mov    edx,DWORD PTR [ebp-0x2c]
  403da3:	mov    DWORD PTR ds:0x43fbec,0x16
  403dad:	cmp    DWORD PTR ds:0x43fbec,0x0
  403db4:	je     0x403e6e
  403dba:	cmp    DWORD PTR ds:0x43fbec,0x20
  403dc1:	jne    0x403dd5
  403dc7:	push   DWORD PTR [ebp-0x18]
  403dca:	push   0x410629
  403dcf:	call   DWORD PTR ds:0x43c83c
  403dd5:	mov    ebx,DWORD PTR ds:0x43fbec
  403ddb:	dec    ebx
  403ddc:	mov    DWORD PTR ds:0x43fbec,ebx
  403de2:	jmp    0x403dad
  403de7:	and    DWORD PTR ds:0x413b4a,0x0
  403df1:	jmp    0x403e03
  403df6:	mov    ebx,DWORD PTR ds:0x413b4a
  403dfc:	inc    ebx
  403dfd:	mov    DWORD PTR ds:0x413b4a,ebx
  403e03:	cmp    DWORD PTR ds:0x413b4a,0x1c
  403e0a:	jae    0x403e6e
  403e10:	cmp    DWORD PTR ds:0x413b4a,0xc
  403e17:	jne    0x403e4f
  403e1d:	push   DWORD PTR [ebp-0x10]
  403e20:	push   0x1816
  403e25:	push   DWORD PTR [ebp-0x28]
  403e28:	push   0x7e95
  403e2d:	push   0x4109
  403e32:	push   0x336d
  403e37:	push   0x1411
  403e3c:	push   DWORD PTR [ebp-0x20]
  403e3f:	push   0x7b8b
  403e44:	push   0x3268
  403e49:	call   DWORD PTR ds:0x43c5b8
  403e4f:	cmp    DWORD PTR ds:0x413b4a,0xb
  403e56:	jne    0x403e69
  403e5c:	mov    ebx,DWORD PTR ds:0x413b4a
  403e62:	inc    ebx
  403e63:	mov    DWORD PTR ds:0x413b4a,ebx
  403e69:	jmp    0x403df6
  403e6e:	mov    edi,DWORD PTR [ebp-0x4]
  403e71:	xor    edx,eax
  403e73:	xor    edi,eax
  403e75:	add    edi,ecx
  403e77:	add    edx,ecx
  403e79:	imul   edx,edi
  403e7c:	mov    edi,DWORD PTR [ebp-0x8]
  403e7f:	mov    ebx,DWORD PTR [ebp-0x10]
  403e82:	sub    ebx,edi
  403e84:	cmp    ebx,edx
  403e86:	ja     0x403e94
  403e8c:	mov    edx,DWORD PTR [ebp-0x28]
  403e8f:	jmp    0x40462f
  403e94:	mov    edx,DWORD PTR [ebp-0x30]
  403e97:	mov    edi,DWORD PTR [ebp-0x4]
  403e9a:	jmp    0x403fff
  403e9f:	dec    ebp
  403ea0:	xchg   esp,eax
  403ea1:	(bad)  
  403ea2:	call   0xa99e390c
  403ea7:	sub    ah,ah
  403ea9:	adc    al,0xc3
  403eab:	xchg   edx,eax
  403eac:	ret    0xc6c1
  403eaf:	pop    esi
  403eb0:	sbb    DWORD PTR [esp+edi*2+0x34],edi
  403eb4:	jg     0x403f32
  403eb6:	jl     0x403ee9
  403eb8:	mov    ds:0xe84ad818,al
  403ebd:	dec    edx
  403ebe:	aaa    
  403ebf:	retf   
  403ec0:	jns    0x403ee7
  403ec2:	stos   BYTE PTR es:[edi],al
  403ec3:	add    BYTE PTR [ecx-0x5],0xaa
  403ec7:	sub    DWORD PTR [edx],edi
  403ec9:	mov    ecx,0xaaa51311
  403ece:	outs   dx,DWORD PTR ds:[esi]
  403ecf:	gs hlt 
  403ed1:	mov    ?,esp
  403ed3:	and    BYTE PTR [ecx],0xd7
  403ed6:	xchg   esi,eax
  403ed7:	dec    esp
  403ed8:	fdiv   DWORD PTR [edi-0x9af490f]
  403ede:	fs adc al,0xd3
  403ee1:	ror    BYTE PTR ds:0xf93c1af8,0xf2
  403ee8:	aaa    
  403ee9:	test   eax,0x14baf78b
  403eee:	push   edi
  403eef:	aas    
  403ef0:	push   ds
  403ef1:	cs cld 
  403ef3:	shl    DWORD PTR [edx-0x3a],1
  403ef6:	adc    DWORD PTR [eax],eax
  403ef8:	xor    eax,0xbb696009
  403efd:	sar    BYTE PTR [ebx-0x46],0x44
  403f01:	mov    ah,0xc4
  403f03:	sbb    DWORD PTR ds:0xb1054891,ecx
  403f09:	lea    esi,[esi+0x78b62168]
  403f0f:	sbb    al,0xcf
  403f11:	fucomip st,st(3)
  403f13:	out    dx,al
  403f14:	fs push ds
  403f16:	bound  esp,QWORD PTR [eax+eiz*2-0x5]
  403f1a:	sbb    BYTE PTR [ecx-0x29],dh
  403f1d:	ins    DWORD PTR es:[edi],dx
  403f1e:	add    al,0x39
  403f20:	outs   dx,DWORD PTR ds:[esi]
  403f22:	jge    0x403f82
  403f24:	clc    
  403f25:	lods   eax,DWORD PTR ds:[esi]
  403f26:	mov    edi,0x2fa63ebb
  403f2b:	call   0x509b:0xa60dff54
  403f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f33:	pusha  
  403f34:	push   ds
  403f35:	add    ebp,edx
  403f37:	jne    0x403f7d
  403f39:	mov    ch,dh
  403f3b:	mov    al,ds:0xd96b8b64
  403f40:	fs mov al,0x31
  403f43:	test   eax,0x51d00818
  403f48:	push   cs
  403f49:	push   ss
  403f4a:	mov    ds:0xca8ff4d7,eax
  403f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f50:	cmp    bl,BYTE PTR [edi]
  403f52:	outs   dx,DWORD PTR ds:[esi]
  403f53:	test   eax,0xbfc33c8c
  403f58:	mov    DWORD PTR [esi],esp
  403f5a:	call   0x6ef00c42
  403f5f:	ins    DWORD PTR es:[edi],dx
  403f60:	lahf   
  403f61:	inc    esp
  403f62:	std    
  403f63:	and    DWORD PTR [eax+0x15319a0a],eax
  403f69:	push   ds
  403f6a:	mov    eax,ds:0x679d20a2
  403f6f:	inc    edi
  403f70:	lds    edi,FWORD PTR [ecx-0x75144866]
  403f76:	sub    ebx,ebp
  403f78:	lea    esp,[edi+0x4a]
  403f7b:	sbb    BYTE PTR ds:0x5e49d7d5,dh
  403f81:	xchg   edx,eax
  403f82:	dec    esp
  403f83:	arpl   bx,sp
  403f85:	sbb    ebp,ecx
  403f87:	pop    es
  403f88:	scas   eax,DWORD PTR es:[edi]
  403f89:	and    BYTE PTR [edx+0x30399cd8],dl
  403f8f:	and    al,0xbc
  403f91:	dec    esi
  403f92:	rol    BYTE PTR [ebp-0x4bed7b2c],cl
  403f98:	daa    
  403f99:	mov    ds:0x7247fa1e,al
  403f9e:	jecxz  0x403f6e
  403fa0:	outs   dx,BYTE PTR ds:[esi]
  403fa1:	mov    eax,0x65727bc
  403fa6:	test   BYTE PTR [esi+0x40],dh
  403fa9:	mov    ebx,0xbb59433c
  403fae:	mov    ch,0xec
  403fb0:	pop    esp
  403fb1:	fadd   QWORD PTR [ebx-0x4aba5f5]
  403fb7:	pop    edi
  403fb8:	jp     0x403f63
  403fba:	and    eax,0x33aa2904
  403fbf:	jmp    DWORD PTR [ecx-0x70]
  403fc2:	scas   al,BYTE PTR es:[edi]
  403fc3:	jge    0x404031
  403fc5:	fistp  QWORD PTR [ebx]
  403fc7:	jmp    0xc4e1879e
  403fcc:	dec    ebx
  403fcd:	addr16 (bad) 
  403fcf:	ds inc ecx
  403fd1:	jno    0x403fd4
  403fd3:	pop    edi
  403fd4:	mov    dl,0x27
  403fd6:	test   esp,esp
  403fd8:	call   0xb5c82421
  403fdd:	xchg   ebp,eax
  403fde:	test   BYTE PTR [eax+0x328725df],ah
  403fe4:	aaa    
  403fe5:	jge    0x403fbd
  403fe7:	push   ebp
  403fe8:	xchg   ebx,eax
  403fe9:	xchg   esi,eax
  403fea:	stos   DWORD PTR es:[edi],eax
  403feb:	jae    0x403fa3
  403fed:	rcr    DWORD PTR [ebp-0x43],cl
  403ff0:	push   es
  403ff1:	ds ins DWORD PTR es:[edi],dx
  403ff3:	mov    edx,0x6107b3cf
  403ff8:	iret   
  403ff9:	push   edx
  403ffa:	outs   dx,DWORD PTR ds:[esi]
  403ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ffc:	cmp    eax,0xd03324b6
  404001:	xor    edi,eax
  404003:	add    edi,ecx
  404005:	add    edx,ecx
  404007:	imul   edx,edi
  40400a:	mov    edi,DWORD PTR [ebp-0x8]
  40400d:	mov    ebx,DWORD PTR [ebp-0x10]
  404010:	sub    ebx,edi
  404012:	cmp    ebx,edx
  404014:	ja     0x404022
  40401a:	mov    edx,DWORD PTR [ebp-0x2c]
  40401d:	jmp    0x40462f
  404022:	mov    edx,DWORD PTR [ebp-0x34]
  404025:	mov    edi,DWORD PTR [ebp-0x4]
  404028:	xor    edx,eax
  40402a:	xor    edi,eax
  40402c:	add    edi,ecx
  40402e:	add    edx,ecx
  404030:	imul   edx,edi
  404033:	mov    edi,DWORD PTR [ebp-0x8]
  404036:	mov    ebx,DWORD PTR [ebp-0x10]
  404039:	sub    ebx,edi
  40403b:	cmp    ebx,edx
  40403d:	jmp    0x4041a2
  404042:	sbb    DWORD PTR [edx+ecx*2],esi
  404045:	cs pop ebp
  404047:	mov    ds:0xe1ed77d,al
  40404c:	cmovae edi,DWORD PTR [eax+0x67]
  404050:	jne    0x403fff
  404052:	push   ss
  404053:	sbb    edi,DWORD PTR [esp+edi*2+0x34]
  404057:	jg     0x4040d5
  404059:	jl     0x403ff6
  40405b:	shr    ecx,cl
  40405d:	mov    BYTE PTR [ecx+0x2c458d2b],dl
  404063:	fld    QWORD PTR [ecx+esi*8]
  404066:	out    0x8d,eax
  404068:	clc    
  404069:	outs   dx,BYTE PTR ds:[esi]
  40406a:	ins    BYTE PTR es:[edi],dx
  40406b:	fmul   st(1),st
  40406d:	jnp    0x4040e2
  40406f:	out    0x4c,eax
  404071:	pop    eax
  404072:	mov    DWORD PTR [esi-0xf],ecx
  404075:	in     al,dx
  404076:	les    esp,FWORD PTR [ecx]
  404078:	jne    0x4040ce
  40407a:	sub    BYTE PTR [edi-0x35c29593],0x56
  404081:	adc    esp,edx
  404083:	pop    edx
  404084:	mov    ds:0x4e024b52,eax
  404089:	xchg   esp,eax
  40408a:	fild   DWORD PTR [di]
  40408d:	test   DWORD PTR [esi+0xf4d8ed1],esp
  404093:	push   0x70477747
  404098:	shr    BYTE PTR [ebx+0x354681bf],0x78
  40409f:	test   esi,ebp
  4040a1:	and    eax,0xbb166a70
  4040a6:	pop    ds
  4040a7:	dec    ebp
  4040a8:	and    ecx,esp
  4040aa:	or     al,0x46
  4040ac:	jl     0x404102
  4040ae:	stos   BYTE PTR es:[edi],al
  4040af:	icebp  
  4040b0:	mov    dl,0xaf
  4040b2:	sbb    DWORD PTR [esi+ebp*1+0x59a3e3ba],edi
  4040b9:	sub    edx,0xffffff9b
  4040bc:	jmp    0xa8ade663
  4040c1:	dec    esi
  4040c2:	jns    0x40408a
  4040c4:	in     al,0x6c
  4040c6:	call   0xf6ee:0x42355287
  4040cd:	mov    ah,BYTE PTR [ecx]
  4040cf:	mov    ebx,0x7d8a2d0a
  4040d4:	stc    
  4040d5:	les    ebp,FWORD PTR [esi]
  4040d7:	cmc    
  4040d8:	inc    edi
  4040d9:	sar    DWORD PTR [esi+0x3b],0x2b
  4040dd:	push   ebx
  4040de:	(bad)  
  4040df:	pop    esp
  4040e0:	and    cl,ah
  4040e2:	fisub  DWORD PTR [edx+0x6c]
  4040e5:	and    ebx,esi
  4040e7:	test   DWORD PTR ds:0xa1a301f0,esi
  4040ed:	jp     0x404143
  4040ef:	or     eax,0xa94e4406
  4040f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040f5:	iret   
  4040f6:	out    0xfa,eax
  4040f8:	jmp    0x4040e4
  4040fa:	jle    0x404157
  4040fc:	mov    al,ds:0x423521ec
  404101:	in     al,dx
  404102:	aam    0x99
  404104:	in     eax,0x84
  404106:	aam    0x71
  404108:	adc    DWORD PTR [ebp+0x52c1ce00],edx
  40410e:	and    eax,0x5ba055ec
  404113:	ret    0xb92
  404116:	pop    ebp
  404117:	pop    ebx
  404118:	mov    bl,0xa6
  40411a:	imul   edx,DWORD PTR [edi],0xb8070a20
  404120:	hlt    
  404121:	and    cl,BYTE PTR [ebx-0x1f]
  404124:	pop    ecx
  404125:	push   ebp
  404126:	retf   
  404127:	dec    eax
  404128:	mov    ds:0x2e61e099,eax
  40412d:	inc    ecx
  40412e:	test   BYTE PTR [esi-0x24],0x17
  404132:	dec    ecx
  404133:	push   ds
  404134:	int3   
  404135:	outs   dx,BYTE PTR ds:[esi]
  404136:	mov    ch,0x77
  404138:	(bad)  
  404139:	cmp    ebp,esi
  40413b:	jle    0x4040e6
  40413d:	xchg   DWORD PTR [ebp-0x2b],esp
  404140:	ss test eax,0xa9803e47
  404146:	sub    edi,DWORD PTR [ecx]
  404148:	add    edx,edx
  40414a:	pop    es
  40414b:	or     eax,0x5de2f58e
  404150:	mov    edi,0x48bbc87b
  404155:	adc    al,0xc4
  404157:	nop
  404158:	xor    eax,0xaa46d700
  40415d:	pop    ebx
  40415e:	xchg   edi,eax
  40415f:	lock add al,0x9a
  404162:	mov    bl,0x2b
  404164:	ja     0x404154
  404166:	xchg   DWORD PTR [ebp-0xbabcb6],ebx
  40416c:	ret    0x207f
  40416f:	sahf   
  404170:	ss push 0x454d95b4
  404176:	bound  ebx,QWORD PTR [eax+0x71]
  404179:	sub    BYTE PTR [edx-0x76],bl
  40417c:	(bad)  
  40417d:	fdiv   QWORD PTR [edx+0x5c39db1]
  404183:	sub    eax,0xa020e2a4
  404188:	mov    bl,0xcb
  40418a:	out    dx,al
  40418b:	(bad)  
  40418d:	(bad)  
  40418e:	push   edx
  40418f:	adc    BYTE PTR [ebp+0x3d],dh
  404192:	jmp    0x40417c
  404194:	mov    ds:0x36aa4380,al
  404199:	jae    0x404208
  40419b:	fiadd  DWORD PTR [ebx-0x5d]
  40419e:	(bad)  
  4041a0:	and    eax,0x8870f12
  4041a5:	add    BYTE PTR [eax],al
  4041a7:	add    BYTE PTR [ebx+0x7fe9d055],cl
  4041ad:	add    al,0x0
  4041af:	add    BYTE PTR [ebx+0x7d8bc855],cl
  4041b5:	cld    
  4041b6:	xor    edx,eax
  4041b8:	xor    edi,eax
  4041ba:	jmp    0x40431f
  4041bf:	dec    ecx
  4041c0:	inc    ebx
  4041c1:	fdivr  st,st(0)
  4041c3:	fidivr DWORD PTR [ebx+0x69]
  4041c6:	gs jge 0x40418a
  4041c9:	shr    ebx,cl
  4041cb:	sbb    DWORD PTR ds:0x1aee6d34,0x7f347c7c
  4041d5:	jl     0x404253
  4041d7:	popf   
  4041d8:	imul   ebx,ecx,0x6a
  4041db:	pop    ebx
  4041dc:	sub    al,dh
  4041de:	mov    cl,0xc2
  4041e0:	fcmovu st,st(2)
  4041e2:	jg     0x4041d4
  4041e4:	aas    
  4041e5:	mov    esp,0x7d2c9a53
  4041ea:	cdq    
  4041eb:	bswap  edx
  4041ed:	fsub   QWORD PTR [ecx+esi*8-0x45d6939e]
  4041f4:	inc    ebp
  4041f5:	fmulp  st(3),st
  4041f7:	push   edx
  4041f8:	aaa    
  4041f9:	pusha  
  4041fa:	fisub  WORD PTR [eax-0x65]
  4041fd:	push   es
  4041fe:	fs xchg edi,eax
  404200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404201:	dec    esp
  404202:	pop    ds
  404203:	inc    edi
  404204:	and    eax,0xd67fdc34
  404209:	adc    BYTE PTR [ebx],dh
  40420b:	ja     0x40418f
  40420d:	in     eax,dx
  40420e:	out    dx,al
  40420f:	inc    ecx
  404210:	(bad)  
  404211:	into   
  404212:	sbb    al,0x4a
  404214:	pop    esp
  404215:	leave  
  404216:	add    DWORD PTR [edx+0x51],esp
  404219:	pop    esp
  40421a:	mov    dh,0x25
  40421c:	mov    esp,0x191b9de0
  404221:	mov    edi,DWORD PTR [esi]
  404223:	push   ds
  404224:	ret    
  404225:	gs fmul st,st(1)
  404228:	push   edi
  404229:	pop    esp
  40422a:	stos   DWORD PTR es:[edi],eax
  40422b:	cli    
  40422c:	ret    
  40422d:	push   ds
  40422e:	cwde   
  40422f:	test   al,0x61
  404231:	sti    
  404232:	adc    ch,ch
  404234:	daa    
  404235:	repnz pop ebx
  404237:	add    DWORD PTR [ebx],edx
  404239:	pushf  
  40423a:	pop    ecx
  40423b:	pushf  
  40423c:	sti    
  40423d:	mov    ebx,0x468e43d2
  404242:	jbe    0x40420c
  404244:	fadd   DWORD PTR [ebx-0x7454c7b4]
  40424a:	aas    
  40424b:	push   edi
  40424c:	mov    BYTE PTR [ecx],dh
  40424e:	sbb    edx,DWORD PTR [ebp-0x6b]
  404251:	aad    0x7b
  404253:	pop    esp
  404254:	inc    edi
  404255:	imul   edx,ebx,0xb75095a
  40425b:	fild   QWORD PTR [edx]
  40425d:	mov    BYTE PTR [edx-0x2ca5fcb4],ah
  404263:	popf   
  404264:	test   ecx,edi
  404266:	push   es
  404267:	stc    
  404268:	mul    DWORD PTR [ebp+0x6a13d803]
  40426e:	pop    edi
  40426f:	mov    esp,0xdd36b02c
  404274:	bound  ebx,QWORD PTR [ebx-0x47]
  404277:	sub    BYTE PTR [edx],dh
  404279:	iret   
  40427a:	push   ebp
  40427b:	les    edx,FWORD PTR [edx]
  40427d:	sti    
  40427e:	jo     0x404296
  404280:	and    BYTE PTR [ecx-0x7a8c3f98],bl
  404286:	pop    es
  404287:	clc    
  404288:	out    0x7c,eax
  40428a:	loopne 0x404230
  40428c:	mov    eax,ds:0xebed0554
  404291:	mov    eax,ds:0x4e7e2816
  404296:	fisub  DWORD PTR [edi+0x2f]
  404299:	mov    eax,ds:0x896447be
  40429e:	mov    dh,0x88
  4042a0:	rcr    DWORD PTR [ecx],cl
  4042a2:	adc    ah,BYTE PTR [ebx-0x1d]
  4042a5:	xor    ecx,eax
  4042a7:	jnp    0x40425b
  4042a9:	rcl    al,1
  4042ab:	int    0x53
  4042ad:	ret    0xd97
  4042b0:	push   0xffffffc5
  4042b2:	js     0x404279
  4042b4:	cld    
  4042b5:	shr    ah,0x28
  4042b8:	popa   
  4042b9:	js     0x40423d
  4042bb:	cmp    dl,BYTE PTR [ebp+0x6]
  4042be:	adc    edx,esi
  4042c0:	and    al,0xe3
  4042c2:	pop    eax
  4042c3:	mov    DWORD PTR [ebx+eax*8+0x5d],esi
  4042c7:	xlat   BYTE PTR ds:[ebx]
  4042c8:	fbstp  TBYTE PTR [eax-0x78710140]
  4042ce:	push   ebx
  4042cf:	xchg   edx,eax
  4042d0:	push   eax
  4042d1:	mov    ecx,0x4afc7ec1
  4042d6:	push   edi
  4042d7:	or     eax,0xe2d9098d
  4042dc:	dec    ecx
  4042dd:	cmp    eax,0xd4ff4a5
  4042e2:	aad    0xd4
  4042e4:	retf   
  4042e5:	rol    esi,0x42
  4042e8:	shr    BYTE PTR [eax-0x7cbdfef3],0xfb
  4042ef:	cmp    cl,BYTE PTR [esi+0x34a3de6]
  4042f5:	les    eax,FWORD PTR [eax+0x1e]
  4042f8:	js     0x40430e
  4042fa:	mov    edx,0x759c4e91
  4042ff:	adc    cl,BYTE PTR [eax-0x3e]
  404302:	push   ss
  404303:	push   ebp
  404304:	cli    
  404305:	mov    edi,0x29b21e27
  40430a:	test   al,0x5
  40430c:	pop    ecx
  40430d:	sahf   
  40430e:	jle    0x4042ef
  404310:	xor    esi,ecx
  404312:	lea    esp,[ecx-0x21]
  404315:	hlt    
  404316:	xchg   esp,eax
  404317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404318:	scas   al,BYTE PTR es:[edi]
  404319:	jp     0x4042cd
  40431b:	xor    eax,0x3c7613e
  404320:	stc    
  404321:	add    edx,ecx
  404323:	imul   edx,edi
  404326:	mov    edi,DWORD PTR [ebp-0x8]
  404329:	jmp    0x40448e
  40432e:	fwait
  40432f:	bound  esp,QWORD PTR [edi]
  404331:	pushf  
  404332:	stc    
  404333:	ins    DWORD PTR es:[edi],dx
  404334:	fwait
  404335:	jge    0x4042bf
  404337:	les    ecx,FWORD PTR [ebp+0x29]
  40433a:	ins    DWORD PTR es:[edi],dx
  40433b:	and    bh,bl
  40433d:	sub    BYTE PTR [esi+0x347c7c1d],ah
  404343:	jg     0x4043c1
  404345:	jl     0x404355
  404347:	add    ebp,ecx
  404349:	aas    
  40434a:	addr16 jae 0x404395
  40434d:	cli    
  40434e:	loop   0x404394
  404350:	xchg   ebp,eax
  404351:	mov    al,ds:0x5e5fc657
  404356:	lods   eax,DWORD PTR ds:[esi]
  404357:	pop    ebx
  404358:	les    eax,FWORD PTR [esp+ebp*1-0xf001a2e]
  40435f:	inc    edi
  404360:	cmp    al,0x7e
  404362:	cmp    dh,BYTE PTR [esi+0x3c]
  404365:	and    BYTE PTR [esi+eax*1+0x6f],al
  404369:	adc    al,0xed
  40436b:	lods   eax,DWORD PTR ds:[esi]
  40436c:	mov    edx,0xb127f6de
  404371:	inc    esi
  404372:	push   ebp
  404373:	(bad)  
  404374:	out    0xf,al
  404376:	shl    esi,0xac
  404379:	sbb    al,0xff
  40437b:	mov    esp,DWORD PTR ds:0xa9c87934
  404381:	in     al,dx
  404382:	pop    edi
  404383:	adc    BYTE PTR [ebp-0x1f12de25],ch
  404389:	add    DWORD PTR [edx+0x7806d397],ebx
  40438f:	jns    0x404332
  404391:	addr16 add dl,cl
  404394:	mov    bl,BYTE PTR [edi]
  404396:	xchg   bl,ch
  404398:	inc    ecx
  404399:	stc    
  40439a:	div    BYTE PTR [ecx]
  40439c:	jb     0x404417
  40439e:	aam    0x48
  4043a0:	and    al,0x15
  4043a2:	mov    dh,0x46
  4043a4:	jns    0x404336
  4043a6:	shl    DWORD PTR [esi],1
  4043a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043a9:	jns    0x4043fd
  4043ab:	jns    0x40441e
  4043ad:	adc    BYTE PTR [ebx+0x21475a77],dh
  4043b3:	fldcw  WORD PTR [ecx-0x21]
  4043b7:	loopne 0x40440b
  4043b9:	dec    ebp
  4043ba:	out    dx,al
  4043bb:	xor    BYTE PTR [edx],bl
  4043bd:	test   al,0x90
  4043bf:	lds    ebx,FWORD PTR [eax+0x21fc36fc]
  4043c5:	push   ss
  4043c6:	mov    al,0x68
  4043c8:	add    al,0xe0
  4043ca:	push   cs
  4043cb:	sbb    BYTE PTR [edx],ah
  4043cd:	or     eax,0x3aaf9926
  4043d2:	mov    edx,esp
  4043d4:	push   0x501e8e92
  4043d9:	dec    ecx
  4043da:	xchg   esp,eax
  4043db:	adc    ah,BYTE PTR ds:0xff0cc398
  4043e2:	mov    ebx,0xb15d51c5
  4043e7:	mov    bl,0xaf
  4043e9:	push   edi
  4043ea:	ret    
  4043eb:	push   ebp
  4043ec:	push   cs
  4043ed:	push   ebp
  4043ee:	shr    DWORD PTR [ebp-0x60],0xa8
  4043f2:	cs inc ebx
  4043f4:	hlt    
  4043f5:	sbb    ebp,DWORD PTR [ebp-0x80]
  4043f8:	sub    BYTE PTR [ecx],bh
  4043fa:	in     al,dx
  4043fb:	daa    
  4043fc:	jg     0x4043d0
  4043fe:	daa    
  4043ff:	inc    edi
  404400:	in     eax,dx
  404401:	ins    DWORD PTR es:[edi],dx
  404402:	dec    esp
  404403:	fsub   DWORD PTR [esi-0x78]
  404406:	and    eax,0x8634a804
  40440b:	and    dl,BYTE PTR ds:0x63c0ec05
  404411:	test   ah,bh
  404413:	adc    DWORD PTR [esi-0xfc10e48],esi
  404419:	lds    eax,FWORD PTR [esp+ebx*4-0x3501fa09]
  404420:	fxtract 
  404422:	jno    0x404429
  404424:	inc    edi
  404425:	fs cs repz mov esp,0xd62f8225
  40442d:	jae    0x4043fa
  40442f:	dec    edx
  404430:	cmp    dl,BYTE PTR ss:[ebp-0x6a989a3b]
  404437:	cmp    dl,BYTE PTR [ebx]
  404439:	cdq    
  40443a:	lahf   
  40443b:	mov    ebp,esi
  40443d:	jb     0x4043c7
  40443f:	mov    dl,0xb6
  404441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404442:	aam    0xa3
  404444:	add    al,0x1
  404446:	ins    BYTE PTR es:[edi],dx
  404447:	sub    DWORD PTR [edi-0x13339abe],ecx
  40444d:	sub    DWORD PTR [ebp+0x1],ecx
  404450:	out    dx,al
  404451:	cli    
  404452:	sub    bl,BYTE PTR [eax+0x35cc325c]
  404458:	jne    0x404480
  40445a:	add    DWORD PTR [eax-0x5f],ebp
  40445d:	ins    DWORD PTR es:[edi],dx
  40445e:	xor    DWORD PTR [esi],esp
  404460:	imul   DWORD PTR [esp+ebx*1]
  404463:	inc    esi
  404464:	test   DWORD PTR [eax],edx
  404466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404467:	shl    BYTE PTR [ebx],0xed
  40446a:	jne    0x404467
  40446c:	pop    ebp
  40446d:	push   esp
  40446e:	stc    
  40446f:	int3   
  404470:	fadd   DWORD PTR [edi]
  404472:	push   cs
  404473:	jb     0x4044d0
  404475:	sbb    al,0xc3
  404477:	daa    
  404478:	adc    eax,0x4a9b3998
  40447d:	hlt    
  40447e:	(bad)  
  404480:	sub    DWORD PTR fs:[eax+0x5e],ebx
  404484:	pop    es
  404485:	push   esp
  404486:	ret    0x388c
  404489:	mov    ecx,0xef34c0c1
  40448e:	mov    ebx,DWORD PTR [ebp-0x10]
  404491:	jmp    0x4045f6
  404496:	psraw  mm6,0x10
  40449a:	out    0xfb,al
  40449c:	frstor ds:0xaa51ed7e
  4044a2:	adc    BYTE PTR [edi+0x1f7e975f],ah
  4044a8:	jl     0x404526
  4044aa:	xor    al,0x7f
  4044ac:	jl     0x40452a
  4044ae:	add    al,0x7c
  4044b0:	mov    cl,0xeb
  4044b2:	sub    eax,DWORD PTR [eax]
  4044b4:	cmp    esi,DWORD PTR [ebx]
  4044b6:	sbb    ebx,ecx
  4044b8:	inc    edx
  4044b9:	test   BYTE PTR [eax+0x39],ch
  4044bc:	cmp    BYTE PTR [ebx],ch
  4044be:	or     eax,0x288c6fea
  4044c3:	mov    eax,ds:0x221c1f21
  4044c8:	lock ins DWORD PTR es:[edi],dx
  4044ca:	ret    
  4044cb:	les    ebx,FWORD PTR [eax]
  4044cd:	aad    0x92
  4044cf:	jne    0x40453c
  4044d1:	and    DWORD PTR [ecx+0x42425e54],edi
  4044d7:	or     DWORD PTR [ebp-0x4d],ebp
  4044da:	mov    WORD PTR [eax],?
  4044dc:	leave  
  4044dd:	xor    al,0x85
  4044df:	and    DWORD PTR [esi],edx
  4044e1:	jnp    0x40454f
  4044e3:	and    DWORD PTR [ebx+0x3f],0x6dc3b0eb
  4044ea:	lods   eax,DWORD PTR ds:[esi]
  4044eb:	loopne 0x404542
  4044ed:	cs in  eax,dx
  4044ef:	(bad)  
  4044f0:	pop    edi
  4044f1:	in     eax,0x8f
  4044f3:	into   
  4044f4:	or     DWORD PTR [edi+ecx*2],esi
  4044f7:	rol    DWORD PTR [eax],cl
  4044f9:	mov    ds:0xaa284fda,eax
  4044fe:	push   esi
  4044ff:	adc    dh,ch
  404501:	enter  0x3430,0xe8
  404505:	mov    ebp,edi
  404507:	jnp    0x404548
  404509:	mov    eax,0xede343f5
  40450e:	sbb    ebx,0xffffffe7
  404511:	push   ebx
  404512:	push   edi
  404513:	jbe    0x40453c
  404515:	xchg   ecx,eax
  404516:	mov    ds:0xccfc706a,eax
  40451b:	test   eax,0xc082e3d1
  404520:	into   
  404521:	xor    ecx,DWORD PTR [edi+esi*1+0x1d]
  404525:	pop    ecx
  404526:	hlt    
  404527:	adc    eax,0x6f1e30da
  40452c:	adc    DWORD PTR [edx],esp
  40452e:	jne    0x40451d
  404530:	lods   eax,DWORD PTR ds:[esi]
  404531:	mov    al,0xf0
  404533:	cwde   
  404534:	sub    DWORD PTR [ebp+0x0],0xfffffff7
  404538:	jg     0x404518
  40453a:	aad    0x32
  40453c:	lds    ecx,FWORD PTR [edi+0x5d]
  40453f:	or     bl,BYTE PTR [ebx+0x1a2ac2eb]
  404545:	xchg   esi,eax
  404546:	push   ebp
  404547:	out    dx,eax
  404548:	mov    eax,DWORD PTR [ecx-0x658e4ee9]
  40454e:	push   esi
  40454f:	adc    ebp,DWORD PTR [ebx+ecx*8+0x5d]
  404553:	cld    
  404554:	adc    eax,0xc7b3421f
  404559:	mov    ecx,0x94d1bbe
  40455e:	mov    al,ds:0xd731383e
  404563:	in     al,dx
  404564:	jo     0x4044f7
  404566:	mov    ebp,0x7d44b72a
  40456b:	shl    edi,0xc1
  40456e:	push   0x809ccd67
  404573:	jae    0x40456d
  404575:	sbb    eax,0xb0c1efb8
  40457a:	mov    ebx,fs
  40457c:	(bad)  
  40457d:	jp     0x4045bd
  40457f:	mov    ecx,0x3a41357b
  404584:	in     al,dx
  404585:	xchg   esp,eax
  404586:	or     ch,BYTE PTR [edx]
  404588:	jbe    0x4045f5
  40458a:	bound  esi,QWORD PTR [ecx]
  40458c:	mov    edi,0x85756880
  404591:	mov    eax,ds:0xe01120ad
  404596:	call   0xff4b:0x800da527
  40459d:	jl     0x404586
  40459f:	dec    esp
  4045a0:	jl     0x404620
  4045a2:	sub    DWORD PTR [ecx],eax
  4045a4:	ja     0x404577
  4045a6:	xchg   BYTE PTR [eax+0xc],bh
  4045a9:	add    ch,al
  4045ab:	cmp    ebx,edx
  4045ad:	cmc    
  4045ae:	out    dx,eax
  4045af:	mov    WORD PTR [esp+edi*4],?
  4045b2:	push   eax
  4045b3:	adc    al,0xea
  4045b5:	xchg   edx,eax
  4045b6:	cdq    
  4045b7:	ror    BYTE PTR [esi+ebp*8],0x1
  4045bb:	loopne 0x4045e2
  4045bd:	adc    eax,0xe6cfa88a
  4045c2:	mov    edi,DWORD PTR [esi]
  4045c4:	xchg   ebp,eax
  4045c5:	jmp    0x40457c
  4045c7:	es mov bl,0x62
  4045ca:	mov    bh,0x64
  4045cc:	xchg   esp,eax
  4045cd:	pop    edi
  4045ce:	dec    edi
  4045cf:	mov    ch,0xf4
  4045d1:	cs or  edx,eax
  4045d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045d5:	int3   
  4045d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045d7:	std    
  4045d8:	adc    al,0x2d
  4045da:	arpl   cx,cx
  4045dc:	sti    
  4045dd:	and    edi,DWORD PTR [ebx+0xc]
  4045e0:	push   es
  4045e1:	(bad)  
  4045e2:	out    dx,al
  4045e3:	pop    ebx
  4045e4:	inc    edx
  4045e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045e6:	jbe    0x40465a
  4045e8:	clc    
  4045e9:	repz add al,cl
  4045ec:	out    0xc2,eax
  4045ee:	fxch   st(4)
  4045f0:	add    DWORD PTR [esi+0x209d47ae],ecx
  4045f6:	sub    ebx,edi
  4045f8:	cmp    ebx,edx
  4045fa:	ja     0x404608
  404600:	mov    edx,DWORD PTR [ebp-0x34]
  404603:	jmp    0x40462f
  404608:	mov    edx,DWORD PTR [ebp-0x3c]
  40460b:	mov    edi,DWORD PTR [ebp-0x4]
  40460e:	xor    edx,eax
  404610:	xor    edi,eax
  404612:	add    edx,ecx
  404614:	add    edi,ecx
  404616:	imul   edx,edi
  404619:	mov    edi,DWORD PTR [ebp-0x8]
  40461c:	mov    ebx,DWORD PTR [ebp-0x10]
  40461f:	sub    ebx,edi
  404621:	cmp    ebx,edx
  404623:	mov    edx,DWORD PTR [ebp-0x38]
  404626:	jbe    0x40462f
  40462c:	mov    edx,DWORD PTR [ebp-0x3c]
  40462f:	mov    edi,DWORD PTR [ebp-0x4]
  404632:	xor    edi,eax
  404634:	xor    edx,eax
  404636:	add    edi,ecx
  404638:	add    edx,ecx
  40463a:	jmp    0x40479f
  40463f:	mov    WORD PTR [ecx+esi*8+0x3f],es
  404643:	dec    ecx
  404644:	(bad)  [esi+0x47]
  404647:	stos   BYTE PTR es:[edi],al
  404648:	call   0x75f7:0xb3b6b2d5
  40464f:	ss push ds
  404651:	jl     0x4046cf
  404653:	xor    al,0x7f
  404655:	jl     0x4046d3
  404657:	imul   esi,DWORD PTR gs:[edx+0x24a5a9fa],0xffffffeb
  40465f:	add    al,0x1a
  404661:	inc    ebp
  404662:	dec    ecx
  404663:	mov    eax,0x1f7f26e2
  404668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404669:	out    dx,ax
  40466b:	int3   
  40466c:	jmp    0xb9b8:0x9355b957
  404673:	cmp    ah,BYTE PTR [ebp+eiz*8-0x4a]
  404677:	mov    ah,0xf8
  404679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40467a:	in     al,dx
  40467b:	mov    esp,0x11384e33
  404680:	mov    esi,0xbd015df3
  404685:	daa    
  404686:	mov    esi,0xca241042
  40468b:	mov    fs:0xc2862c61,al
  404691:	rol    DWORD PTR [edx],0x11
  404694:	jbe    0x404690
  404696:	mov    ecx,edi
  404698:	push   0xedd65650
  40469d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40469e:	inc    DWORD PTR [esi+ebp*4]
  4046a1:	cmc    
  4046a2:	ja     0x404695
  4046a4:	add    DWORD PTR [ecx+0x43b2a690],ecx
  4046aa:	aad    0x65
  4046ac:	into   
  4046ad:	inc    ebx
  4046ae:	iret   
  4046af:	popw   es
  4046b1:	xchg   esp,eax
  4046b2:	dec    ebx
  4046b3:	fbstp  TBYTE PTR [ebp-0x74524c39]
  4046b9:	stos   DWORD PTR es:[edi],eax
  4046ba:	sar    DWORD PTR [ebx*8+0x265c52b6],0xcf
  4046c2:	out    0x58,al
  4046c4:	inc    esi
  4046c5:	push   ds
  4046c6:	cs (bad) 
  4046c8:	dec    BYTE PTR [ecx]
  4046ca:	push   0x7a8f37bf
  4046cf:	hlt    
  4046d0:	push   eax
  4046d1:	sti    
  4046d2:	popf   
  4046d3:	popf   
  4046d4:	scas   al,BYTE PTR es:[edi]
  4046d5:	cmp    bh,ah
  4046d7:	leave  
  4046d8:	outs   dx,DWORD PTR ds:[esi]
  4046d9:	dec    edi
  4046da:	mov    ch,0xfb
  4046dc:	push   edi
  4046dd:	cmp    ah,BYTE PTR [esi+0x30578f]
  4046e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046e4:	test   DWORD PTR [ebx],esp
  4046e6:	sub    al,0x6e
  4046e8:	dec    esi
  4046e9:	sbb    BYTE PTR [ecx-0x56],ch
  4046ec:	mov    edx,0x24ebf03c
  4046f1:	jb     0x404766
  4046f3:	xchg   esi,eax
  4046f4:	pusha  
  4046f5:	pusha  
  4046f6:	(bad)  
  4046f7:	rcr    al,0x75
  4046fa:	and    DWORD PTR [edi+eiz*8],esi
  4046fd:	sbb    BYTE PTR [eax],0x9a
  404700:	enter  0x16bb,0x76
  404704:	test   DWORD PTR [edx+0x31cc8282],esp
  40470a:	pop    ds
  40470b:	dec    edx
  40470c:	leave  
  40470d:	sub    BYTE PTR [edx+0xa],0x76
  404711:	push   eax
  404712:	out    dx,eax
  404713:	scas   al,BYTE PTR es:[edi]
  404714:	and    eax,0x4d5508a6
  404719:	outs   dx,BYTE PTR ds:[esi]
  40471a:	int    0xc0
  40471c:	ss sub ah,0x93
  404720:	popf   
  404721:	retf   0x2658
  404724:	mov    ah,BYTE PTR [edi+0xe]
  404727:	mov    ss,WORD PTR [edi-0x62]
  40472a:	jne    0x4046cf
  40472c:	mov    eax,0x8dc3b3a2
  404731:	xor    esp,DWORD PTR [esi-0x27]
  404734:	cmp    eax,0xe5d363d8
  404739:	cmp    ebx,DWORD PTR [edx]
  40473b:	xor    eax,ecx
  40473d:	and    DWORD PTR [ebx],edx
  40473f:	addr16 mov dl,0x2e
  404742:	inc    esi
  404743:	and    ch,BYTE PTR [esp+edx*8-0x7]
  404747:	inc    ebp
  404748:	int3   
  404749:	cld    
  40474a:	das    
  40474b:	bound  edx,QWORD PTR [edi]
  40474d:	inc    esi
  40474e:	inc    esp
  40474f:	mov    bl,0x30
  404751:	push   ecx
  404752:	or     ah,ah
  404754:	pop    esi
  404755:	mov    eax,ds:0x82c13648
  40475a:	(bad)  
  40475b:	mov    ah,0x61
  40475d:	sbb    dl,BYTE PTR [ecx+0x52]
  404760:	inc    esp
  404761:	bound  ebp,QWORD PTR [ebp+0x4f]
  404764:	(bad)  
  404765:	je     0x404783
  404767:	push   es
  404768:	out    dx,eax
  404769:	imul   edi,DWORD PTR [eax+esi*1-0x57],0xda143135
  404771:	mov    esp,0x8b010bfd
  404776:	sub    DWORD PTR [ebx],edx
  404778:	mov    dl,0x20
  40477a:	xchg   ebp,eax
  40477b:	cmp    eax,0x6be5e98a
  404780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404781:	imul   ebx,DWORD PTR [edx],0x6a1ab435
  404787:	or     eax,0xc1453178
  40478c:	push   ds
  40478d:	inc    ecx
  40478e:	mov    esi,0xb9e96c47
  404793:	call   0x300b76da
  404798:	lods   eax,DWORD PTR ds:[esi]
  404799:	push   edx
  40479a:	scas   eax,DWORD PTR es:[edi]
  40479b:	push   ebx
  40479c:	add    esp,ecx
  40479e:	pop    eax
  40479f:	imul   edx,edi
  4047a2:	mov    DWORD PTR [ebp+0xc],edx
  4047a5:	mov    edx,DWORD PTR [ebp+0xc]
  4047a8:	mov    DWORD PTR [ebp-0x24],edx
  4047ab:	mov    edx,DWORD PTR [ebp-0x8]
  4047ae:	add    edx,DWORD PTR [ebp-0x40]
  4047b1:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  4047b8:	mov    DWORD PTR [ebp-0x1c],edx
  4047bb:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  4047c2:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4047c9:	mov    edx,DWORD PTR [ebp-0x18]
  4047cc:	xor    edx,eax
  4047ce:	add    edx,ecx
  4047d0:	jmp    0x404c6c
  4047d5:	mov    edx,DWORD PTR [ebp-0x18]
  4047d8:	xor    edx,eax
  4047da:	add    edx,DWORD PTR [ebp-0x14]
  4047dd:	mov    edi,DWORD PTR [ebp-0x1c]
  4047e0:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  4047e7:	mov    BYTE PTR [ebp+0xf],dl
  4047ea:	jmp    0x40494f
  4047ef:	int    0xf4
  4047f1:	mov    esi,0xfd66b566
  4047f6:	mov    ebx,0x8fce1da9
  4047fb:	inc    esp
  4047fc:	lea    edi,[edx+esi*8]
  4047ff:	mov    ss,WORD PTR [ecx]
  404801:	jl     0x40487f
  404803:	xor    al,0x7f
  404805:	jl     0x404883
  404807:	fld    TBYTE PTR [edx]
  404809:	xchg   ebp,eax
  40480a:	mov    BYTE PTR [esi+0x1d],cl
  40480d:	jb     0x404798
  40480f:	push   ds
  404810:	repnz sub DWORD PTR [eax+0x43],ecx
  404814:	fwait
  404815:	cmp    eax,DWORD PTR [ebp+0x71638cd6]
  40481b:	lock cwde 
  40481d:	dec    edi
  40481e:	ja     0x4047ca
  404820:	call   0x7799:0xcd6508f2
  404827:	mov    ecx,0x3c5772e0
  40482c:	sar    DWORD PTR [edx],0x90
  40482f:	(bad)  
  404830:	fld    DWORD PTR [ecx-0xae71647]
  404836:	emms   
  404838:	imul   ecx,DWORD PTR [edi+0x2],0xffffff8e
  40483c:	(bad)  
  40483e:	add    al,0xfd
  404840:	mov    ebp,0x1aa6504f
  404845:	test   al,0x57
  404847:	icebp  
  404848:	in     al,0x70
  40484a:	out    dx,eax
  40484b:	cmp    al,0x35
  40484d:	jmp    0x422e:0x583c996a
  404854:	js     0x4047f3
  404856:	pop    esi
  404857:	adc    esp,ecx
  404859:	fs loopne 0x40480e
  40485c:	fwait
  40485d:	sahf   
  40485e:	dec    ecx
  40485f:	test   ah,dh
  404861:	call   0x70c3731
  404866:	pop    ecx
  404867:	(bad)  
  404868:	leave  
  404869:	jg     0x404856
  40486b:	loopne 0x404800
  40486d:	out    0x50,al
  40486f:	mov    eax,ds:0xec7e5c58
  404874:	clc    
  404875:	xlat   BYTE PTR ds:[ebx]
  404876:	ud2    
  404878:	inc    edi
  404879:	cdq    
  40487a:	mov    ah,0xb
  40487c:	pop    ds
  40487d:	loop   0x404882
  40487f:	lods   al,BYTE PTR ds:[esi]
  404880:	inc    edx
  404881:	or     ch,BYTE PTR [ebx+0x75de6faf]
  404887:	xchg   ebp,esp
  404889:	dec    edx
  40488a:	frstor [eax]
  40488c:	push   es
  40488d:	es xchg esi,eax
  40488f:	lds    edi,FWORD PTR [ebp-0x15]
  404892:	inc    esp
  404893:	sbb    ch,BYTE PTR [ecx+0x4e21b0d4]
  404899:	ja     0x404851
  40489b:	sub    eax,0x54e9238a
  4048a0:	sub    DWORD PTR [ecx-0x2dc8a041],ebx
  4048a6:	or     dl,BYTE PTR [edi+0x55d3ad38]
  4048ac:	pop    eax
  4048ad:	mov    cs,WORD PTR [eax+edx*1-0x6]
  4048b1:	sub    al,0xef
  4048b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048b4:	daa    
  4048b5:	shr    DWORD PTR [edi-0x5754b132],1
  4048bb:	adc    BYTE PTR [ebp-0x11],dh
  4048be:	push   ebx
  4048bf:	adc    dl,BYTE PTR [ebx-0x47f41bdb]
  4048c5:	or     eax,0xd6d571f4
  4048ca:	push   edx
  4048cb:	jmp    0x404928
  4048cd:	push   es
  4048ce:	retf   
  4048cf:	push   es
  4048d0:	lods   al,BYTE PTR ds:[esi]
  4048d1:	mov    dl,0x34
  4048d3:	punpckhwd mm1,mm4
  4048d6:	jmp    0xe4847b9b
  4048db:	enter  0xa27a,0x6c
  4048df:	inc    ecx
  4048e0:	mov    eax,ds:0xa61d20ad
  4048e5:	xor    ch,BYTE PTR [ecx]
  4048e7:	dec    edi
  4048e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ea:	ja     0x4048a2
  4048ec:	es push cs
  4048ee:	fimul  WORD PTR [eax+0x1cb3133]
  4048f4:	push   edx
  4048f5:	add    DWORD PTR [ecx],esp
  4048f7:	enter  0x1915,0x1d
  4048fb:	dec    esi
  4048fc:	call   DWORD PTR [edx+0x5bb81de5]
  404902:	or     BYTE PTR [ebx+0x3a],dl
  404905:	push   edi
  404906:	adc    edx,DWORD PTR ds:0x4ce41446
  40490c:	fld    DWORD PTR [ecx]
  40490e:	adc    al,BYTE PTR [eax]
  404910:	cmp    eax,ecx
  404912:	ss sbb al,0xc5
  404915:	cmc    
  404916:	mov    ebx,0x631fb472
  40491b:	aas    
  40491c:	pop    esi
  40491d:	sub    ecx,eax
  40491f:	pop    ebx
  404920:	mov    ah,0xf
  404922:	or     DWORD PTR [ebp+0x45],edi
  404925:	es push ecx
  404927:	jg     0x4048fa
  404929:	pushf  
  40492a:	or     BYTE PTR ds:0xb1fd508a,al
  404930:	call   0x55fd3878
  404935:	int3   
  404936:	loope  0x4049a7
  404938:	cs retf 
  40493a:	enter  0xd048,0xbe
  40493e:	add    DWORD PTR [esi-0x53dd5cb2],esp
  404944:	dec    esi
  404945:	es fwait
  404947:	lods   al,BYTE PTR ds:[esi]
  404948:	xchg   edx,eax
  404949:	push   esi
  40494a:	rcr    BYTE PTR [ecx+edi*4],0xf6
  40494e:	adc    eax,0x33f4558b
  404953:	rol    BYTE PTR [ebx],1
  404955:	push   ebp
  404956:	in     al,dx
  404957:	mov    edi,DWORD PTR [ebp-0x1c]
  40495a:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  404961:	mov    BYTE PTR [ebp+0xb],dl
  404964:	mov    dl,BYTE PTR [ebp+0xf]
  404967:	mov    edi,DWORD PTR [ebp-0xc]
  40496a:	xor    edi,eax
  40496c:	add    edi,DWORD PTR [ebp-0x14]
  40496f:	mov    ebx,DWORD PTR [ebp-0x1c]
  404972:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404979:	jmp    0x404ade
  40497e:	adc    ebx,DWORD PTR cs:[ecx]
  404981:	iret   
  404982:	sbb    eax,0xb1d5e6fd
  404987:	and    edi,DWORD PTR ss:[ebx-0x7fb9e4a7]
  40498e:	inc    esi
  40498f:	adc    BYTE PTR [esp+edi*2+0x34],bh
  404993:	jg     0x404a11
  404995:	jl     0x4049b8
  404997:	pop    esp
  404998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404999:	call   0x97ecee45
  40499e:	aaa    
  40499f:	inc    esp
  4049a0:	ss inc ebx
  4049a2:	(bad)  
  4049a3:	clc    
  4049a4:	jecxz  0x404973
  4049a6:	(bad)  
  4049a7:	mov    ch,0x2f
  4049a9:	out    dx,al
  4049aa:	popf   
  4049ab:	in     al,0x86
  4049ad:	scas   al,BYTE PTR es:[edi]
  4049ae:	push   esp
  4049af:	imul   ebp
  4049b1:	dec    edi
  4049b2:	xor    ch,BYTE PTR [edx+eax*4]
  4049b5:	or     ch,BYTE PTR [esi+edx*1+0x4]
  4049b9:	xchg   ecx,eax
  4049ba:	inc    ecx
  4049bb:	cli    
  4049bc:	ret    
  4049bd:	mov    BYTE PTR [edx],0xa4
  4049c0:	(bad)  [esi+eax*4+0x4b]
  4049c4:	fnsave [edi-0x75]
  4049c7:	adc    edi,DWORD PTR [ebp+eax*8-0x6b3c26fa]
  4049ce:	stos   BYTE PTR es:[edi],al
  4049cf:	jp     0x404a50
  4049d1:	scas   al,BYTE PTR es:[edi]
  4049d2:	mov    ch,0xc9
  4049d4:	xor    BYTE PTR [ebx-0x2b20e4f8],al
  4049da:	hlt    
  4049db:	mov    bh,0x6a
  4049dd:	ret    
  4049de:	mov    ah,0xe2
  4049e1:	jnp    0x404987
  4049e3:	mov    bl,0xaa
  4049e5:	add    eax,DWORD PTR [ecx-0x520dc86b]
  4049eb:	enter  0xa1d3,0xd3
  4049ef:	cdq    
  4049f0:	xor    cl,bl
  4049f2:	lods   al,BYTE PTR ds:[esi]
  4049f3:	ja     0x40498f
  4049f5:	rcl    BYTE PTR [esi+0x3043aca1],cl
  4049fb:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4049fd:	mov    edx,0xb5ffce36
  404a02:	dec    esp
  404a03:	loope  0x40498f
  404a05:	dec    edi
  404a06:	rol    ebp,0x6d
  404a09:	xchg   edx,eax
  404a0a:	dec    esp
  404a0b:	mov    al,ds:0x3ccc086f
  404a10:	stos   DWORD PTR es:[edi],eax
  404a11:	mov    edx,0x9873d6ff
  404a16:	es mov ah,0x7e
  404a19:	inc    ebp
  404a1a:	sub    DWORD PTR [eax],ecx
  404a1c:	lock in al,dx
  404a1e:	push   0x68903b48
  404a23:	mov    al,ds:0xee9ae0ad
  404a28:	gs ss xor eax,edx
  404a2c:	cwde   
  404a2d:	lds    ebx,FWORD PTR ds:0x7ec6bba4
  404a33:	jmp    0xeac8:0x3e2eb710
  404a3a:	(bad)  
  404a3b:	rcr    BYTE PTR [ebp+0xb],0xf7
  404a3f:	inc    ecx
  404a40:	mov    edx,0xf0f1576
  404a45:	mov    bh,0x41
  404a47:	pop    edi
  404a48:	add    eax,0x173e71b3
  404a4d:	gs fadd st(0),st
  404a50:	mov    ah,0xd3
  404a52:	xor    BYTE PTR [eax-0x45],dh
  404a55:	mov    dh,0x3c
  404a57:	fwait
  404a58:	or     eax,0x2546f7f2
  404a5d:	and    eax,0x29261ec0
  404a62:	adc    eax,0x6d639876
  404a67:	dec    edi
  404a68:	fwait
  404a69:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  404a6b:	mov    eax,ds:0x20d14e9e
  404a70:	fidivr DWORD PTR ds:0x1e541018
  404a76:	pop    edx
  404a77:	xchg   DWORD PTR [edx-0x2fb96b41],esp
  404a7d:	dec    eax
  404a7e:	xchg   esi,eax
  404a7f:	cmc    
  404a80:	jb     0x404a13
  404a82:	pusha  
  404a83:	or     eax,0x1236a75b
  404a88:	out    dx,al
  404a89:	call   0xbd23:0xaa01d3c1
  404a90:	sbb    bl,BYTE PTR [edi-0x3c]
  404a93:	push   eax
  404a94:	add    dh,0x44
  404a97:	xchg   esi,eax
  404a98:	xchg   al,ah
  404a9a:	xchg   BYTE PTR [ecx+0x5adc224e],al
  404aa0:	sar    ah,1
  404aa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aa3:	cmp    al,0x48
  404aa5:	xor    al,bl
  404aa7:	xchg   ebx,eax
  404aa8:	in     al,dx
  404aa9:	pop    esi
  404aaa:	or     edx,DWORD PTR [ecx-0x6b62646c]
  404ab0:	jmp    0x4857:0x574d3fee
  404ab7:	push   ss
  404ab8:	inc    ebp
  404ab9:	je     0x404ab9
  404abb:	jbe    0x404a71
  404abd:	dec    ebx
  404abe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404abf:	and    BYTE PTR [ecx],bh
  404ac1:	loop   0x404b1d
  404ac3:	sbb    al,0x11
  404ac5:	imul   edx,DWORD PTR [esi],0x397ab052
  404acb:	dec    ebp
  404acc:	jge    0x404a84
  404ace:	jmp    0x33f7:0xa731390d
  404ad5:	mov    ah,0xc
  404ad7:	jno    0x404b0e
  404ad9:	dec    ebx
  404ada:	pop    ecx
  404adb:	add    ebx,DWORD PTR [eax+0xb558a63]
  404ae1:	mov    edi,DWORD PTR [ebp-0x18]
  404ae4:	xor    edi,eax
  404ae6:	add    edi,DWORD PTR [ebp-0x14]
  404ae9:	mov    ebx,DWORD PTR [ebp-0x1c]
  404aec:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404af3:	mov    edx,DWORD PTR [ebp-0x44]
  404af6:	mov    edi,DWORD PTR [ebp-0xc]
  404af9:	xor    edx,eax
  404afb:	xor    edi,eax
  404afd:	add    edx,ecx
  404aff:	add    edi,ecx
  404b01:	imul   edx,edi
  404b04:	add    edx,DWORD PTR [ebp-0x14]
  404b07:	jmp    0x404c6c
  404b0c:	stos   DWORD PTR es:[edi],eax
  404b0d:	outs   dx,BYTE PTR ds:[esi]
  404b0e:	cmp    al,0x3d
  404b10:	fnstsw WORD PTR [ebp+0x313d6e7d]
  404b16:	lods   eax,DWORD PTR ds:[esi]
  404b17:	sbb    eax,0xdef599da
  404b1c:	push   ds
  404b1d:	adc    bh,BYTE PTR [esp+edi*2+0x34]
  404b21:	jg     0x404b9f
  404b23:	jl     0x404b98
  404b25:	adc    eax,0xaa4a5a65
  404b2a:	shl    esp,cl
  404b2c:	(bad)  
  404b2d:	and    al,0xc6
  404b2f:	add    al,0x4d
  404b31:	addr16 push esp
  404b33:	jmp    0xfa0a:0x8b3b0420
  404b3a:	push   ss
  404b3b:	fwait
  404b3c:	xchg   edx,eax
  404b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b3e:	popa   
  404b3f:	push   es
  404b40:	inc    ecx
  404b41:	lea    ebx,[esi+0x64]
  404b44:	xchg   ecx,eax
  404b45:	(bad)  
  404b46:	cmp    al,0x79
  404b48:	or     eax,0x4a812879
  404b4d:	push   esp
  404b4e:	(bad)  
  404b4f:	fs fadd st(5),st
  404b52:	mov    ecx,0x4ac66306
  404b57:	sbb    ah,ch
  404b59:	and    ebp,DWORD PTR [ebx-0x641a8c5b]
  404b5f:	pusha  
  404b60:	sbb    BYTE PTR [eax-0x49],dl
  404b63:	adc    ch,BYTE PTR [esi+0x4a4261f4]
  404b69:	mov    ch,0x26
  404b6b:	outs   dx,DWORD PTR ds:[esi]
  404b6c:	inc    edi
  404b6d:	pop    es
  404b6e:	(bad)  
  404b6f:	mov    edi,0x446b4322
  404b74:	shl    BYTE PTR [ecx+0x355d051a],cl
  404b7a:	inc    esp
  404b7b:	jns    0x404b28
  404b7d:	xor    bl,BYTE PTR es:[ebp+0x74]
  404b81:	xchg   edx,eax
  404b82:	outs   dx,DWORD PTR ds:[esi]
  404b83:	mov    esp,0xf645b13f
  404b88:	mov    DWORD PTR [edx+edx*8],edi
  404b8b:	push   es
  404b8c:	or     eax,0xacb9e1dc
  404b91:	push   ss
  404b92:	cdq    
  404b93:	dec    ebx
  404b94:	xor    ch,bh
  404b96:	xor    al,0xa9
  404b98:	test   edi,edx
  404b9a:	sub    al,BYTE PTR [edi-0x41]
  404b9d:	rcr    DWORD PTR [edx],cl
  404b9f:	div    DWORD PTR [edi]
  404ba1:	enter  0xedb3,0xe3
  404ba5:	clc    
  404ba6:	xor    al,0x33
  404ba8:	jmp    0xf319:0xab3c8ecc
  404baf:	popa   
  404bb0:	dec    edx
  404bb1:	mov    al,0xbd
  404bb3:	xchg   ebp,eax
  404bb4:	fwait
  404bb5:	scas   al,BYTE PTR es:[edi]
  404bb6:	mul    DWORD PTR [edx+0x7abba80]
  404bbc:	jne    0x404bf2
  404bbe:	mov    al,ds:0xfb227b02
  404bc3:	or     BYTE PTR [edi+0x54],bh
  404bc6:	jle    0x404c0e
  404bc8:	add    eax,0x56fcbffc
  404bcd:	cmc    
  404bce:	adc    ah,BYTE PTR [edx-0x4f]
  404bd1:	aad    0x1
  404bd3:	mov    cl,0x93
  404bd5:	xchg   esp,eax
  404bd6:	adc    al,0x2
  404bd8:	ret    0x101c
  404bdb:	jg     0x404ba5
  404bdd:	iret   
  404bde:	scas   eax,DWORD PTR es:[edi]
  404bdf:	into   
  404be0:	repnz adc BYTE PTR [ebp+0x1f520c8a],bl
  404be7:	mov    ecx,0x283337d1
  404bec:	xor    bl,BYTE PTR [edi]
  404bee:	fist   DWORD PTR [edx-0x62]
  404bf1:	xor    DWORD PTR [ebp-0x983133a],0xffffff9a
  404bf8:	ja     0x404c4b
  404bfa:	and    DWORD PTR [eax-0x31],ebp
  404bfd:	cld    
  404bfe:	add    eax,0xf89a1260
  404c03:	retf   
  404c04:	test   eax,edx
  404c06:	push   ds
  404c07:	cmc    
  404c08:	or     al,0x98
  404c0a:	sub    eax,0x26661d2b
  404c0f:	cwde   
  404c10:	repnz imul eax,DWORD PTR [edi+0x340b37ce],0x50dd701a
  404c1b:	pop    edi
  404c1c:	mov    DWORD PTR [edi+0x5aa2112c],eax
  404c22:	or     al,0x24
  404c24:	sub    esi,DWORD PTR [ebp-0x38b846d3]
  404c2a:	daa    
  404c2b:	sub    eax,0x1c6be62
  404c30:	mov    ch,0x6b
  404c32:	sub    esp,esi
  404c34:	jmp    0x80019b56
  404c39:	outs   dx,DWORD PTR ds:[esi]
  404c3a:	or     eax,0x1186815c
  404c3f:	xchg   DWORD PTR [ecx-0x9],ebp
  404c42:	xchg   ebx,eax
  404c43:	pop    edx
  404c44:	fcom   QWORD PTR [edx-0x59]
  404c47:	push   ebx
  404c48:	ins    BYTE PTR es:[edi],dx
  404c49:	ja     0x404c82
  404c4b:	(bad)  
  404c4c:	(bad)  
  404c4d:	sub    eax,0x4d97b9c0
  404c52:	arpl   WORD PTR [ebx-0x42cdf8a7],si
  404c58:	pop    esi
  404c59:	clc    
  404c5a:	popf   
  404c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c5c:	cwde   
  404c5d:	sub    ecx,edi
  404c5f:	mov    esp,0x637826cc
  404c64:	and    DWORD PTR [ebx-0x51e98c79],ebp
  404c6a:	mov    ebx,0xec5589ae
  404c6f:	mov    edx,DWORD PTR [ebp-0xc]
  404c72:	mov    edi,DWORD PTR [ebp-0x24]
  404c75:	jmp    0x404dda
  404c7a:	or     al,BYTE PTR [ecx-0x1aa2d1be]
  404c80:	push   0xffffffbd
  404c82:	cmp    eax,ecx
  404c84:	dec    esi
  404c85:	sar    DWORD PTR [esi],0x36
  404c88:	aaa    
  404c89:	hlt    
  404c8a:	(bad)  
  404c8b:	adc    eax,0x7f347c7c
  404c90:	jl     0x404d0e
  404c92:	push   0xfffffffd
  404c94:	cmp    al,0xcf
  404c96:	hlt    
  404c97:	in     eax,0x8
  404c99:	dec    ebp
  404c9a:	test   esp,esi
  404c9c:	xchg   edi,eax
  404c9d:	and    edx,DWORD PTR [edi-0x3]
  404ca0:	call   0xf7e7:0x91f80abc
  404ca7:	jl     0x404c6c
  404ca9:	dec    ecx
  404caa:	ss popa 
  404cac:	adc    DWORD PTR [esp+ebp*1],edx
  404caf:	ins    BYTE PTR es:[edi],dx
  404cb0:	and    dl,BYTE PTR [esi-0x27]
  404cb3:	stc    
  404cb4:	stos   BYTE PTR es:[edi],al
  404cb5:	clc    
  404cb6:	int    0x7c
  404cb8:	icebp  
  404cb9:	push   ss
  404cba:	clc    
  404cbb:	das    
  404cbc:	repz add DWORD PTR [edi+0x51a51216],esi
  404cc3:	xchg   BYTE PTR [edx+0x1e],dh
  404cc6:	(bad)  
  404cc7:	add    eax,0xb87e1851
  404ccc:	pop    eax
  404ccd:	iret   
  404cce:	or     edi,esp
  404cd0:	pop    esi
  404cd1:	daa    
  404cd2:	and    eax,0xc4247f2
  404cd7:	sbb    ebp,DWORD PTR [eax+ebp*8]
  404cda:	xchg   ebp,eax
  404cdb:	les    edx,FWORD PTR [ebx+0x7665dcce]
  404ce1:	xchg   BYTE PTR [edi-0x33bb208],cl
  404ce7:	and    ebx,DWORD PTR [edx+0x22107500]
  404ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cee:	lock int3 
  404cf0:	and    DWORD PTR [ebx],0x8dc3c43c
  404cf6:	add    BYTE PTR [edi+ebp*2+0x10b7ad1f],ch
  404cfd:	addr16 mov eax,0x7c0289ef
  404d03:	push   esp
  404d04:	mov    eax,0xbc7771ed
  404d09:	jecxz  0x404d29
  404d0b:	shl    ebp,1
  404d0d:	sbb    ecx,DWORD PTR [ebx+0x48c0b63e]
  404d13:	jno    0x404d5d
  404d15:	pop    ds
  404d16:	cmc    
  404d17:	aaa    
  404d18:	pop    ss
  404d19:	in     al,dx
  404d1a:	pop    es
  404d1b:	bsf    ecx,DWORD PTR es:[ecx+0x67]
  404d20:	sub    bl,BYTE PTR gs:[edi+esi*1-0x268dae5f]
  404d28:	pushf  
  404d29:	push   ebx
  404d2a:	mov    ebp,0x868e8998
  404d2f:	aas    
  404d30:	mov    BYTE PTR ds:0x49356bff,ch
  404d36:	test   DWORD PTR [edx+0x7e],ebp
  404d39:	cld    
  404d3a:	mov    eax,0x893e8bae
  404d3f:	int3   
  404d40:	scas   eax,DWORD PTR es:[edi]
  404d41:	jecxz  0x404daf
  404d43:	mov    ecx,0xe4c648d5
  404d48:	ror    DWORD PTR [eax+edi*4-0xa],cl
  404d4c:	and    al,0xd
  404d4e:	mov    esi,0x542cfca0
  404d53:	inc    eax
  404d54:	xor    al,BYTE PTR [ebx]
  404d56:	(bad)  
  404d57:	nop
  404d58:	not    cl
  404d5a:	push   ebx
  404d5b:	in     eax,dx
  404d5c:	push   edx
  404d5d:	push   ebx
  404d5e:	rcr    DWORD PTR [ebp-0x6596412d],1
  404d64:	xor    BYTE PTR [edx-0x22eef20d],dh
  404d6a:	nop
  404d6b:	mov    BYTE PTR [esi-0x65875f6e],al
  404d71:	sbb    BYTE PTR [edi],dh
  404d73:	add    BYTE PTR [edi+0x26],cl
  404d76:	pop    edx
  404d77:	jb     0x404d42
  404d79:	jl     0x404d67
  404d7b:	and    ebp,ecx
  404d7d:	xchg   ecx,eax
  404d7e:	push   ecx
  404d7f:	rcr    BYTE PTR [edi],1
  404d81:	jbe    0x404d42
  404d83:	into   
  404d84:	loop   0x404d7c
  404d86:	popa   
  404d87:	repz mov esi,0x12f2d88d
  404d8d:	cdq    
  404d8e:	outs   dx,BYTE PTR ds:[esi]
  404d8f:	cld    
  404d90:	cli    
  404d91:	cmp    al,0x76
  404d93:	fisttp QWORD PTR [ebx-0x2a80eccd]
  404d99:	pusha  
  404d9a:	call   0xa5274ee1
  404d9f:	lods   eax,DWORD PTR ds:[esi]
  404da0:	push   ss
  404da1:	jb     0x404d52
  404da3:	das    
  404da4:	push   ebx
  404da5:	mov    eax,0xd3a3a9f4
  404daa:	je     0x404d60
  404dac:	(bad)  
  404dad:	push   ss
  404dae:	mov    bh,0x43
  404db0:	shr    DWORD PTR [eax-0x55],1
  404db3:	je     0x404d64
  404db5:	lahf   
  404db6:	daa    
  404db7:	add    DWORD PTR [esi],edx
  404db9:	loopne 0x404df9
  404dbb:	mov    edi,0x683e552d
  404dc0:	jmp    0x5cb14f0a
  404dc5:	xor    DWORD PTR [esi-0x5b],0x70
  404dc9:	dec    esp
  404dca:	adc    esp,DWORD PTR [edi+0x125604c3]
  404dd0:	pop    edx
  404dd1:	pop    eax
  404dd2:	aad    0x82
  404dd4:	cmp    BYTE PTR [ebp-0x38850ea9],al
  404dda:	xor    edx,eax
  404ddc:	add    edx,ecx
  404dde:	imul   edx,edi
  404de1:	mov    edi,DWORD PTR [ebp-0xc]
  404de4:	xor    edi,eax
  404de6:	sub    edx,edi
  404de8:	mov    edi,DWORD PTR [ebp-0xc]
  404deb:	mov    ebx,DWORD PTR [ebp-0x14]
  404dee:	jmp    0x404f53
  404df3:	push   ebx
  404df4:	pop    ebx
  404df5:	inc    edx
  404df6:	cmp    DWORD PTR [edx-0x67],0x31957d53
  404dfd:	jb     0x404e2d
  404dff:	push   0xaeac3a6e
  404e04:	adc    al,0x7c
  404e06:	jl     0x404e3c
  404e08:	jg     0x404e86
  404e0a:	jl     0x404e30
  404e0c:	mov    WORD PTR [edi-0x7086ab6e],cs
  404e12:	(bad)  
  404e13:	sahf   
  404e14:	enter  0x3da0,0xeb
  404e18:	(bad)  
  404e19:	cmp    eax,0x50070312
  404e1e:	push   esp
  404e1f:	int3   
  404e20:	add    cl,dl
  404e22:	aas    
  404e23:	lds    eax,FWORD PTR [esi]
  404e25:	pop    ecx
  404e26:	leave  
  404e27:	loope  0x404e19
  404e29:	mov    ecx,edi
  404e2b:	out    0x77,eax
  404e2d:	imul   ebp,DWORD PTR [esi],0xffffffa5
  404e30:	jnp    0x404dce
  404e32:	dec    esp
  404e33:	sbb    edi,DWORD PTR [ebx+0x66]
  404e36:	push   edx
  404e37:	repnz mov eax,ds:0x6aaa97f0
  404e3d:	cmp    dh,BYTE PTR [ebp-0x26bf1c38]
  404e43:	inc    DWORD PTR [eax+eax*4]
  404e46:	pop    esi
  404e47:	pop    ebp
  404e48:	push   edi
  404e49:	int3   
  404e4a:	pop    edi
  404e4b:	sub    al,0x8
  404e4d:	push   ecx
  404e4e:	das    
  404e4f:	std    
  404e50:	das    
  404e51:	pop    esp
  404e52:	popf   
  404e53:	ins    BYTE PTR es:[edi],dx
  404e54:	int    0xe4
  404e56:	inc    ecx
  404e57:	mov    dh,0x88
  404e59:	mov    al,ds:0xd1270137
  404e5e:	test   eax,0x156ac84b
  404e63:	fstp   QWORD PTR [ebx+eax*2-0x18]
  404e67:	or     dl,dh
  404e69:	or     al,0xad
  404e6b:	jmp    0xa4b0:0x48baf10c
  404e72:	leave  
  404e73:	xor    eax,DWORD PTR [ecx+0x5fbdddc4]
  404e79:	sub    ah,dh
  404e7b:	mov    dh,0x55
  404e7d:	inc    edi
  404e7e:	mov    edi,0xae409f46
  404e83:	add    al,0xa5
  404e85:	imul   ebx,DWORD PTR [ebx],0x10400bdc
  404e8b:	xchg   ebp,eax
  404e8c:	shl    BYTE PTR [esi+0x14],0xfc
  404e90:	mov    WORD PTR [edx-0x2d9a007c],ds
  404e96:	aam    0xad
  404e98:	sub    eax,0x6df00a2
  404e9d:	mov    BYTE PTR [ebx+esi*4],0xe5
  404ea1:	lods   al,BYTE PTR es:[esi]
  404ea3:	(bad)  
  404ea4:	and    DWORD PTR [ecx-0x5f34db9e],esi
  404eaa:	retf   0xdb00
  404ead:	push   edx
  404eae:	or     eax,ebx
  404eb0:	pop    ds
  404eb1:	dec    edx
  404eb2:	sub    al,0x8f
  404eb4:	es jbe 0x404e51
  404eb7:	mov    edi,0x4f824c01
  404ebc:	(bad)  
  404ebe:	jbe    0x404ef9
  404ec0:	pop    ss
  404ec1:	inc    cl
  404ec3:	or     al,BYTE PTR [ebp+0x1a]
  404ec6:	xor    cl,0x6
  404ec9:	(bad)  
  404eca:	pop    esi
  404ecb:	and    dh,ch
  404ecd:	xchg   ebx,eax
  404ece:	sbb    DWORD PTR cs:[ebx],ecx
  404ed1:	cmp    BYTE PTR [edi-0x47],0x75
  404ed5:	test   dl,al
  404ed7:	(bad)  
  404ed8:	ret    0xc0b3
  404edb:	xor    BYTE PTR [edx+eiz*4+0x54929175],ah
  404ee2:	popf   
  404ee3:	rol    ecx,0x62
  404ee6:	or     eax,0x26164190
  404eeb:	fadd   st,st(3)
  404eed:	add    al,0xf6
  404eef:	sub    al,0xe5
  404ef1:	jne    0x404f5f
  404ef3:	loope  0x404f3c
  404ef5:	add    ecx,DWORD PTR [esi+eax*8]
  404ef8:	push   edx
  404ef9:	into   
  404efa:	and    BYTE PTR [eax+0x410fe907],ah
  404f00:	jle    0x404ee4
  404f02:	push   esi
  404f03:	mov    bx,0xfd74
  404f07:	pusha  
  404f08:	fldenv [ecx+esi*8+0x4ecd239b]
  404f0f:	mov    dh,0x2c
  404f11:	push   eax
  404f12:	and    al,0xa5
  404f14:	adc    al,0x86
  404f16:	or     eax,0x1cb05410
  404f1b:	nop
  404f1c:	ret    0xb467
  404f1f:	cdq    
  404f20:	and    DWORD PTR [eax],0xf66244cf
  404f26:	mov    eax,ds:0x1869c9c1
  404f2b:	mov    ch,0x3e
  404f2d:	in     eax,0x60
  404f2f:	pop    es
  404f30:	ficomp WORD PTR [ebx-0x2001aa13]
  404f36:	pop    ebp
  404f37:	xchg   ebx,eax
  404f38:	cmp    BYTE PTR [ebp-0x7b],0x4c
  404f3c:	mul    al
  404f3e:	pop    ecx
  404f3f:	push   ds
  404f40:	push   ds
  404f41:	dec    ecx
  404f42:	test   esp,eax
  404f44:	dec    eax
  404f45:	aad    0xa4
  404f47:	repnz or DWORD PTR [esi],esp
  404f4a:	inc    ebx
  404f4c:	out    dx,al
  404f4d:	aaa    
  404f4e:	test   ecx,ebp
  404f50:	data16 aas 
  404f52:	mov    ecx,0xf903f833
  404f57:	imul   edi,ebx
  404f5a:	mov    ebx,DWORD PTR [ebp-0x18]
  404f5d:	xor    ebx,eax
  404f5f:	sub    edx,ecx
  404f61:	lea    edi,[edi+ebx*1+0x32729e]
  404f68:	cmp    edi,edx
  404f6a:	jbe    0x4047d5
  404f70:	mov    edx,DWORD PTR [ebp-0xc]
  404f73:	mov    edi,DWORD PTR [ebp-0x24]
  404f76:	xor    edx,eax
  404f78:	add    edx,ecx
  404f7a:	imul   edx,edi
  404f7d:	mov    edi,DWORD PTR [ebp-0x18]
  404f80:	xor    edi,eax
  404f82:	add    edx,edi
  404f84:	mov    edi,DWORD PTR [ebp-0x8]
  404f87:	lea    edx,[edx+edi*1+0x32729e]
  404f8e:	mov    DWORD PTR [ebp-0x8],edx
  404f91:	jmp    0x4050f6
  404f96:	jecxz  0x404f49
  404f98:	out    0xe3,eax
  404f9a:	jge    0x405019
  404f9c:	sti    
  404f9d:	mov    cl,0x66
  404f9f:	pop    edx
  404fa0:	cmp    BYTE PTR ds:0x84f34ad1,cl
  404fa6:	popw   ss
  404fa8:	jl     0x405026
  404faa:	xor    al,0x7f
  404fac:	jl     0x40502a
  404fae:	cld    
  404faf:	lock dec ebx
  404fb1:	inc    ecx
  404fb2:	shl    DWORD PTR [edx+0x5a],0xeb
  404fb6:	jne    0x404f88
  404fb8:	mov    dh,0x51
  404fba:	ss dec ebx
  404fbc:	mov    eax,0x9d73341a
  404fc1:	xchg   ebx,eax
  404fc2:	cdq    
  404fc3:	add    BYTE PTR [ebx-0x56],al
  404fc6:	retf   
  404fc7:	lock test bl,ah
  404fca:	(bad)  
  404fcb:	(bad)  
  404fce:	pushf  
  404fcf:	retf   0xb62a
  404fd2:	ret    
  404fd3:	fdivr  st(4),st
  404fd5:	into   
  404fd6:	add    al,0x77
  404fd8:	(bad)  
  404fd9:	fst    QWORD PTR [edx+0x29056629]
  404fdf:	mov    esp,?
  404fe1:	mov    dh,0x25
  404fe3:	loopne 0x404ff5
  404fe5:	fld    DWORD PTR [eax+0x61ceb0e9]
  404feb:	dec    edi
  404fec:	data16 (bad) 
  404fee:	push   0x2db1d042
  404ff3:	mov    edx,0x4dc4c40f
  404ff8:	scas   eax,DWORD PTR es:[edi]
  404ff9:	out    dx,al
  404ffa:	ja     0x405048
  404ffc:	push   esi
  404ffd:	sub    BYTE PTR [eax-0xb],ch
  405000:	ss in  al,0xe8
  405003:	mov    bl,0x90
  405005:	in     al,0x4e
  405007:	and    eax,0xff893f5c
  40500c:	test   eax,0xdad20392
  405011:	out    0x6f,eax
  405013:	or     ebx,DWORD PTR [ebp+0x313e545c]
  405019:	test   eax,0x53291bb6
  40501e:	fdiv   QWORD PTR [edi]
  405020:	jle    0x405062
  405022:	cwde   
  405023:	repnz sbb al,0xe5
  405026:	pop    ds
  405027:	mov    esp,0xee82948c
  40502c:	not    ebx
  40502e:	add    BYTE PTR [ebx+0x66262848],al
  405034:	in     eax,0xa0
  405036:	scas   al,BYTE PTR es:[edi]
  405037:	sbb    BYTE PTR [eax-0x1b],bh
  40503a:	mov    edi,0x6954b53b
  40503f:	int3   
  405040:	mov    al,0x96
  405042:	jbe    0x405005
  405044:	pop    eax
  405045:	stos   DWORD PTR es:[edi],eax
  405046:	cmp    eax,0xa2c57d0
  40504b:	inc    eax
  40504c:	in     eax,dx
  40504d:	(bad)  
  40504e:	cmp    ecx,DWORD PTR [esi+0x3]
  405051:	cmp    eax,DWORD PTR [edx]
  405053:	push   esp
  405054:	int    0x95
  405056:	sahf   
  405057:	out    dx,eax
  405058:	or     al,0x3d
  40505a:	sbb    al,0xc
  40505c:	sub    BYTE PTR ds:0x45b50a86,0xe5
  405063:	adc    BYTE PTR [bp+di-0x36],bl
  405067:	mov    ebp,0x5ad77847
  40506c:	cs jmp 0x40500d
  40506f:	pop    eax
  405070:	mov    dh,0xe7
  405072:	pop    ss
  405073:	test   eax,0x67c31e31
  405078:	jg     0x404ffa
  40507a:	dec    edi
  40507b:	mov    edx,eax
  40507d:	ins    DWORD PTR es:[edi],dx
  40507e:	cmc    
  40507f:	xchg   esi,eax
  405080:	icebp  
  405081:	inc    edx
  405082:	and    cl,BYTE PTR [ecx+0x42]
  405085:	fsub   DWORD PTR [esi+0x7f3ea25f]
  40508b:	arpl   WORD PTR [ebx+edi*1],dx
  40508e:	push   edi
  40508f:	ins    DWORD PTR es:[di],dx
  405091:	inc    esp
  405092:	ja     0x405104
  405094:	loop   0x4050cd
  405096:	pop    esp
  405097:	cli    
  405098:	fwait
  405099:	lahf   
  40509a:	sub    eax,0x263464c0
  40509f:	xchg   edi,eax
  4050a0:	mov    dh,0x22
  4050a2:	rcr    edx,cl
  4050a4:	cmp    esp,DWORD PTR [ecx]
  4050a6:	push   edx
  4050a7:	imul   eax,DWORD PTR [ebp+0x5ea41f2d],0xffffffd5
  4050ae:	cli    
  4050af:	retf   0x5da4
  4050b2:	out    0x1d,eax
  4050b4:	iret   
  4050b5:	popf   
  4050b6:	jecxz  0x4050fc
  4050b8:	push   cs
  4050b9:	adc    al,0xb0
  4050bb:	ror    BYTE PTR [eax+0x2f],cl
  4050be:	xchg   edx,eax
  4050bf:	retf   
  4050c0:	and    BYTE PTR fs:[eax+eax*2],dh
  4050c4:	sbb    DWORD PTR [esi-0x75],0x11033af6
  4050cb:	lock add BYTE PTR [ebx-0x21],al
  4050cf:	js     0x40510b
  4050d1:	pop    si
  4050d3:	adc    bh,BYTE PTR [eax+eax*1]
  4050d6:	jnp    0x40510f
  4050d8:	je     0x405142
  4050da:	push   cs
  4050db:	or     al,0x42
  4050dd:	aam    0x35
  4050df:	dec    ebx
  4050e0:	pop    eax
  4050e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050e2:	arpl   WORD PTR [esi+0x1a],dx
  4050e5:	pop    ds
  4050e6:	jg     0x40511f
  4050e8:	fst    st(0)
  4050ea:	mov    eax,0x1dbb4977
  4050ef:	aas    
  4050f0:	jns    0x405118
  4050f2:	mov    dh,0x29
  4050f4:	shr    DWORD PTR [eax+0x33e0558b],1
  4050fa:	sar    BYTE PTR [edi-0x32729e],1
  405100:	sub    edi,edx
  405102:	add    edi,DWORD PTR [ebp-0x10]
  405105:	mov    edx,DWORD PTR [ebp-0x20]
  405108:	mov    ebx,DWORD PTR [ebp-0x8]
  40510b:	xor    edx,eax
  40510d:	add    edx,ecx
  40510f:	imul   edx,ebx
  405112:	cmp    edx,edi
  405114:	jbe    0x4038c9
  40511a:	pop    ebx
  40511b:	pop    edi
  40511c:	leave  
  40511d:	ret    0x8
  405120:	push   ebp
  405121:	mov    ebp,esp
  405123:	push   ecx
  405124:	adc    DWORD PTR ds:0x4105cf,ebx
  40512a:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  405131:	and    DWORD PTR ds:0x43fbf8,0x0
  40513b:	jmp    0x40514d
  405140:	mov    edx,DWORD PTR ds:0x43fbf8
  405146:	inc    edx
  405147:	mov    DWORD PTR ds:0x43fbf8,edx
  40514d:	cmp    DWORD PTR ds:0x43fbf8,0x10
  405154:	jae    0x40518d
  40515a:	cmp    DWORD PTR ds:0x43fbf8,0x18
  405161:	jne    0x40517b
  405167:	push   DWORD PTR [ebp-0x10]
  40516a:	push   DWORD PTR [ebp-0x14]
  40516d:	push   0x4107b9
  405172:	push   DWORD PTR [ebp-0x10]
  405175:	call   DWORD PTR ds:0x43c4f0
  40517b:	jmp    0x405140
  405180:	movzx  edx,BYTE PTR ds:0x4427bc
  405187:	adc    DWORD PTR ds:0x413b42,edx
  40518d:	mov    eax,DWORD PTR [ebp-0x4]
  405190:	adc    edx,ecx
  405192:	jmp    0x4052a5
  405197:	shr    DWORD PTR [ebp+0x4e7dfe7d],cl
  40519d:	sti    
  40519e:	ins    DWORD PTR es:[edi],dx
  40519f:	fs jne 0x40519a
  4051a2:	push   edi
  4051a3:	aam    0x76
  4051a5:	pop    ds
  4051a6:	ret    0x293e
  4051a9:	jl     0x405227
  4051ab:	bound  edi,QWORD PTR [esp+edi*2+0x7c]
  4051af:	inc    esp
  4051b0:	mov    ch,0xce
  4051b2:	leave  
  4051b3:	sub    ebp,edx
  4051b5:	dec    edi
  4051b6:	cmp    BYTE PTR [esi+0x663c377e],0x6e
  4051bd:	add    eax,0xeeec785c
  4051c2:	cmp    BYTE PTR [ecx],0xfc
  4051c5:	dec    ecx
  4051c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c7:	pop    ss
  4051c8:	cdq    
  4051c9:	dec    ecx
  4051ca:	call   0x292:0x82793758
  4051d1:	cmp    eax,DWORD PTR [ecx+0x5]
  4051d4:	fwait
  4051d5:	mov    edi,0x4b2c2077
  4051da:	sub    eax,DWORD PTR [ecx-0x36]
  4051dd:	sbb    ebp,ebx
  4051df:	(bad)  
  4051e0:	popf   
  4051e1:	leave  
  4051e2:	sahf   
  4051e3:	dec    ebx
  4051e4:	xchg   esi,eax
  4051e5:	mov    BYTE PTR [ebx-0x3c137dc9],ch
  4051eb:	sub    eax,0x71748e3d
  4051f0:	jg     0x4051e2
  4051f2:	adc    edi,edi
  4051f4:	nop
  4051f5:	adc    ch,BYTE PTR [eax-0x782426bc]
  4051fb:	pop    ss
  4051fc:	out    dx,al
  4051fd:	aam    0x28
  4051ff:	jmp    0x271:0xfe13b3bf
  405206:	jmp    0xff81:0xe965fe43
  40520d:	addr16 inc esp
  40520f:	mov    BYTE PTR [eax-0x4dc98e2d],ch
  405215:	and    cl,BYTE PTR [ebx-0x171876c4]
  40521b:	rcl    bh,cl
  40521d:	push   eax
  40521e:	in     eax,0x12
  405220:	dec    esi
  405221:	xor    al,0xca
  405223:	mov    dh,0x91
  405225:	add    DWORD PTR [bx],esp
  405228:	or     dl,BYTE PTR [esi+0xf253f85]
  40522e:	add    dh,BYTE PTR [ecx-0x1b]
  405231:	into   
  405232:	stc    
  405233:	mov    edi,0x6b0e8b3a
  405238:	xor    eax,0xd57ef012
  40523d:	enter  0xd42,0xb3
  405241:	adc    al,0xc8
  405243:	xchg   edi,eax
  405244:	cdq    
  405245:	pop    eax
  405246:	dec    ebp
  405247:	int    0x3f
  405249:	scas   al,BYTE PTR es:[edi]
  40524a:	aad    0xff
  40524c:	jecxz  0x4051f9
  40524e:	cmp    ch,dl
  405250:	fucom  st(4)
  405252:	popa   
  405253:	data16 jae 0x4052d0
  405256:	cdq    
  405257:	xchg   ebp,eax
  405258:	and    ebx,ecx
  40525a:	mov    eax,0xe7fcad3
  40525f:	sub    BYTE PTR [ebx+edi*2],0x1c
  405263:	fdivr  DWORD PTR [edx-0x12]
  405266:	shl    ch,0xd
  405269:	aam    0xb1
  40526b:	scas   eax,DWORD PTR es:[edi]
  40526c:	xor    bh,BYTE PTR [ebp-0x19]
  40526f:	out    0xd5,eax
  405271:	pusha  
  405272:	push   cs
  405273:	dec    ecx
  405274:	retf   0x4e43
  405277:	jns    0x405234
  405279:	push   esi
  40527a:	fld    QWORD PTR [ebp+ecx*4+0x40]
  40527e:	adc    DWORD PTR [ecx],eax
  405280:	das    
  405281:	repnz out dx,al
  405283:	inc    esi
  405284:	mov    esp,0x3f523b49
  405289:	dec    ebp
  40528a:	xor    cl,BYTE PTR ss:[esi-0xdd2c079]
  405291:	sbb    al,0x43
  405293:	adc    BYTE PTR [edx-0x32],ah
  405296:	mov    edi,0x75c4a4b0
  40529b:	lahf   
  40529c:	adc    eax,0x1d59d5
  4052a1:	out    dx,al
  4052a2:	xchg   DWORD PTR [esi+0x10558b69],ecx
  4052a8:	jmp    0x4053bb
  4052ad:	shl    ecx,0xe4
  4052b0:	xchg   edi,eax
  4052b1:	fs jns 0x4052f5
  4052b4:	jns    0x4052eb
  4052b6:	adc    al,0x56
  4052b8:	jne    0x405273
  4052ba:	stos   BYTE PTR es:[edi],al
  4052bb:	in     al,0xa9
  4052bd:	and    al,0x28
  4052bf:	jl     0x40533d
  4052c1:	bound  edi,QWORD PTR [esp+edi*2+0x7c]
  4052c5:	and    DWORD PTR [ebx+0x33623796],ebx
  4052cb:	jecxz  0x40532f
  4052cd:	add    al,0x87
  4052cf:	and    eax,esi
  4052d1:	pop    edx
  4052d2:	xor    al,0xcd
  4052d4:	push   es
  4052d5:	clc    
  4052d6:	neg    BYTE PTR [eax+0x6a]
  4052d9:	cmp    bl,BYTE PTR [eax]
  4052db:	mov    ebx,0x3fe7f50f
  4052e0:	pop    esp
  4052e1:	jae    0x4052d7
  4052e3:	(bad)  
  4052e5:	jecxz  0x4052c5
  4052e7:	mov    dl,0xa6
  4052e9:	pop    eax
  4052ea:	cmp    bh,BYTE PTR [esi-0x60]
  4052ed:	sub    cl,BYTE PTR [ecx]
  4052ef:	scas   al,BYTE PTR es:[edi]
  4052f0:	jge    0x405277
  4052f2:	adc    al,0x3e
  4052f4:	repz push 0xffffffbd
  4052f7:	adc    BYTE PTR [edx],bl
  4052f9:	jl     0x4052bd
  4052fb:	mov    ch,0x6a
  4052fd:	fld    DWORD PTR [esp+edi*2]
  405300:	in     eax,dx
  405301:	call   0xf58c211a
  405306:	inc    edi
  405307:	add    BYTE PTR [ebp-0x616edc5c],dl
  40530d:	sub    al,0x6
  40530f:	aaa    
  405310:	pop    ebp
  405311:	jecxz  0x405352
  405313:	lods   al,BYTE PTR ds:[esi]
  405314:	shr    edx,cl
  405316:	cwde   
  405317:	imul   esi,DWORD PTR [edx-0x2],0x2a
  40531b:	scas   eax,DWORD PTR es:[edi]
  40531c:	pop    esi
  40531d:	cdq    
  40531e:	inc    esi
  40531f:	scas   eax,DWORD PTR es:[edi]
  405320:	pushf  
  405321:	ss pop edx
  405323:	push   ss
  405324:	aad    0xf8
  405326:	ret    
  405327:	and    ebx,ebx
  405329:	dec    esp
  40532a:	and    eax,DWORD PTR [ebp+0x2c5977f3]
  405330:	int    0x47
  405332:	mov    al,ds:0xaa47e9f2
  405337:	cmp    bh,cl
  405339:	dec    esi
  40533a:	imul   DWORD PTR [ebx]
  40533c:	dec    edx
  40533d:	(bad)  
  40533e:	cld    
  40533f:	ss popf 
  405341:	xor    ebp,edi
  405343:	ss popa 
  405345:	fistp  DWORD PTR [edi+eax*1]
  405348:	push   eax
  405349:	xor    al,0xed
  40534b:	pop    eax
  40534c:	fsubr  DWORD PTR [ecx-0x4166cd4e]
  405352:	add    edx,DWORD PTR [edi+0x75]
  405355:	add    BYTE PTR [esp+ebx*1],cl
  405358:	and    bl,0xa5
  40535b:	call   DWORD PTR [ebx+edx*2-0x4]
  40535f:	into   
  405360:	lods   eax,DWORD PTR ds:[esi]
  405361:	aad    0xb2
  405363:	push   ebp
  405364:	scas   al,BYTE PTR es:[edi]
  405365:	loopne 0x4053d7
  405367:	fmul   DWORD PTR [esi+0x740a334b]
  40536d:	pop    ss
  40536e:	push   ecx
  40536f:	cli    
  405370:	and    BYTE PTR [edx],dh
  405372:	sbb    DWORD PTR [ebx-0x76],ebp
  405375:	jmp    0x4053ef
  405377:	iret   
  405378:	in     al,0x93
  40537a:	cmp    eax,0x8fc858ac
  40537f:	stos   DWORD PTR es:[edi],eax
  405380:	iret   
  405381:	fcmovb st,st(2)
  405383:	ret    
  405384:	or     esi,eax
  405386:	mov    edi,0xa91d372e
  40538b:	es cdq 
  40538d:	xchg   esi,eax
  40538e:	repnz add eax,DWORD PTR [eax-0x31]
  405392:	test   al,0x73
  405394:	das    
  405395:	push   cs
  405396:	(bad)  
  405397:	test   al,0xf7
  405399:	adc    eax,DWORD PTR [eax-0x63]
  40539c:	popa   
  40539d:	sbb    ch,0xc3
  4053a0:	or     al,0x83
  4053a2:	xchg   ecx,eax
  4053a3:	jmp    0x40540c
  4053a5:	fisub  WORD PTR ds:0xb5e73731
  4053ab:	out    0x34,eax
  4053ad:	jns    0x4053ef
  4053af:	lods   al,BYTE PTR ds:[esi]
  4053b0:	dec    eax
  4053b1:	outs   dx,DWORD PTR ds:[esi]
  4053b2:	mov    eax,0x2d3bedfc
  4053b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053b8:	(bad)  
  4053b9:	fidiv  DWORD PTR [ebx+0x510857b9]
  4053bf:	pop    es
  4053c0:	xor    DWORD PTR ds:0x413b4a,0x5c99
  4053ca:	xor    eax,ecx
  4053cc:	add    eax,0x32729e
  4053d1:	sub    DWORD PTR ds:0x413b56,0x4105cb
  4053db:	mov    DWORD PTR [edx],eax
  4053dd:	mov    eax,DWORD PTR [ebp+0xc]
  4053e0:	xor    eax,ecx
  4053e2:	push   esi
  4053e3:	add    DWORD PTR ds:0x4427bc,0x2efc
  4053ed:	mov    esi,DWORD PTR [ebp+0x10]
  4053f0:	mov    edx,0x32729e
  4053f5:	sub    DWORD PTR ds:0x445380,0x7c97
  4053ff:	add    eax,edx
  405401:	xor    DWORD PTR ds:0x445380,0x4427b4
  40540b:	mov    DWORD PTR [esi+0x4],eax
  40540e:	mov    DWORD PTR ds:0x44537c,0x1d
  405418:	cmp    DWORD PTR ds:0x44537c,0x0
  40541f:	je     0x405452
  405425:	cmp    DWORD PTR ds:0x44537c,0x21
  40542c:	jne    0x405442
  405432:	push   0x410650
  405437:	push   0x400000
  40543c:	call   DWORD PTR ds:0x43c5bc
  405442:	mov    eax,ds:0x44537c
  405447:	dec    eax
  405448:	mov    ds:0x44537c,eax
  40544d:	jmp    0x405418
  405452:	mov    eax,DWORD PTR [ebp+0x14]
  405455:	mov    esi,DWORD PTR [ebp+0x10]
  405458:	mov    DWORD PTR [esi+0x8],eax
  40545b:	mov    eax,DWORD PTR [ebp+0x18]
  40545e:	mov    esi,DWORD PTR [ebp+0x10]
  405461:	mov    DWORD PTR [esi+0xc],eax
  405464:	mov    eax,DWORD PTR [ebp+0x1c]
  405467:	mov    esi,DWORD PTR [ebp+0x10]
  40546a:	mov    DWORD PTR [esi+0x10],eax
  40546d:	mov    eax,eax
  40546f:	mov    eax,DWORD PTR [ebp+0x8]
  405472:	xor    eax,ecx
  405474:	add    eax,edx
  405476:	pop    esi
  405477:	leave  
  405478:	ret    0x18
  40547b:	push   ebp
  40547c:	mov    ebp,esp
  40547e:	mov    eax,DWORD PTR [ebp+0xc]
  405481:	xor    edx,edx
  405483:	mov    ecx,0x7264fcad
  405488:	jmp    0x40559b
  40548d:	enter  0x8006,0xb
  405491:	inc    edx
  405492:	lea    ebx,[ebx-0x27]
  405495:	mov    dl,0x23
  405497:	sub    dh,BYTE PTR [eax]
  405499:	pushf  
  40549a:	mov    bl,0x11
  40549c:	lods   al,BYTE PTR ds:[esi]
  40549d:	sub    ch,BYTE PTR [ebx]
  40549f:	jl     0x40551d
  4054a1:	bound  edi,QWORD PTR [esp+edi*2+0x7c]
  4054a5:	test   BYTE PTR [esi+0x14],al
  4054a8:	or     DWORD PTR [eax],esi
  4054aa:	ffreep st(7)
  4054ac:	inc    ebx
  4054ad:	dec    eax
  4054ae:	sub    eax,DWORD PTR [ebx]
  4054b0:	jno    0x4054fc
  4054b2:	pop    eax
  4054b3:	push   es
  4054b4:	nop
  4054b5:	mov    ch,0xe4
  4054b7:	loopne 0x405466
  4054b9:	sub    edi,DWORD PTR [eax+0x26]
  4054bc:	mov    al,ds:0xc2932532
  4054c1:	inc    edx
  4054c2:	mov    eax,ds:0xb0df2a71
  4054c7:	test   BYTE PTR ds:0xabbe7d0e,cl
  4054cd:	pop    eax
  4054ce:	sub    DWORD PTR [ecx+0x55ab9eef],ebx
  4054d4:	fbld   TBYTE PTR [edx-0x7a]
  4054d7:	ja     0x40546e
  4054d9:	mov    al,ds:0x97e2fe85
  4054de:	icebp  
  4054df:	lods   eax,DWORD PTR ds:[esi]
  4054e0:	mov    WORD PTR [ecx],?
  4054e2:	dec    eax
  4054e3:	ror    DWORD PTR [edi],1
  4054e5:	rcr    DWORD PTR [edx-0x55],cl
  4054e8:	pop    esi
  4054e9:	mov    eax,0x7de9d74
  4054ee:	test   al,0x17
  4054f0:	les    edi,FWORD PTR [ecx-0x371a0967]
  4054f6:	les    ecx,FWORD PTR [esp+edi*1]
  4054f9:	in     eax,dx
  4054fa:	xor    eax,DWORD PTR [ecx-0x65]
  4054fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054fe:	xchg   ebp,eax
  4054ff:	std    
  405500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405501:	sti    
  405502:	pop    edi
  405503:	loopne 0x405569
  405505:	jmp    0x49a6:0x3fc14366
  40550c:	dec    esi
  40550d:	retf   0xb6cf
  405510:	xchg   edi,eax
  405511:	int3   
  405512:	das    
  405513:	mov    al,ds:0xae07fc21
  405518:	int    0xad
  40551a:	popa   
  40551b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40551c:	dec    ebx
  40551d:	lea    esp,[ebp+0x7536874d]
  405523:	inc    esp
  405524:	mov    ah,BYTE PTR [edx]
  405526:	inc    eax
  405527:	mov    dl,0xe
  405529:	xchg   DWORD PTR [ebx],esi
  40552b:	xor    eax,DWORD PTR [ebp-0xd5c6cc]
  405531:	mov    BYTE PTR [edi-0x4e0d0374],dh
  405537:	imul   esp,DWORD PTR [esi+0x7d],0x86b07f22
  40553e:	xor    DWORD PTR [edx+0x7c7d5b63],eax
  405544:	mov    al,BYTE PTR [ecx]
  405546:	outs   dx,BYTE PTR ds:[esi]
  405547:	retf   
  405548:	pop    ds
  405549:	(bad)  
  40554a:	jmp    0xbdcb:0x4e703496
  405551:	push   ebx
  405552:	sub    al,0x14
  405554:	arpl   WORD PTR [eax-0xf],sp
  405557:	jo     0x40553b
  405559:	or     bh,0xf2
  40555c:	pop    eax
  40555d:	fst    DWORD PTR [edi-0x7a]
  405560:	ins    DWORD PTR es:[edi],dx
  405561:	inc    eax
  405562:	adc    ebp,DWORD PTR [ebp-0x7f61b56a]
  405568:	inc    esp
  405569:	addr16 test al,0x8
  40556c:	inc    esi
  40556d:	pop    esp
  40556e:	lods   al,BYTE PTR ds:[esi]
  40556f:	sub    al,0xed
  405571:	add    DWORD PTR [esp+ebp*4-0x598c11ec],eax
  405578:	xchg   DWORD PTR [ebx],edx
  40557a:	pop    es
  40557b:	dec    ebx
  40557c:	loopne 0x405521
  40557e:	mov    gs,WORD PTR [ebx+0x6b192aa4]
  405584:	and    al,BYTE PTR [ecx+0x1c]
  405587:	shl    edi,1
  405589:	(bad)  
  40558b:	push   0x4b
  40558d:	dec    esp
  40558e:	cmp    BYTE PTR [esi-0x729bd844],al
  405594:	and    dl,BYTE PTR [ebx+ebx*8]
  405597:	leave  
  405598:	sub    dh,BYTE PTR [ebx-0x45]
  40559b:	div    ecx
  40559d:	mov    ecx,DWORD PTR [ebp+0x10]
  4055a0:	and    ecx,eax
  4055a2:	or     ecx,0x81161d8f
  4055a8:	mov    eax,ecx
  4055aa:	pop    ebp
  4055ab:	ret    0x18
  4055ae:	push   ebp
  4055af:	mov    ebp,esp
  4055b1:	push   ecx
  4055b2:	xor    edx,edx
  4055b4:	xor    edx,DWORD PTR ds:0x43c8ec
  4055ba:	xor    ecx,ecx
  4055bc:	or     ecx,DWORD PTR ds:0x4427d8
  4055c2:	sub    edx,ecx
  4055c4:	sub    edx,DWORD PTR [edx+ecx*1]
  4055c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4055ce:	movzx  eax,WORD PTR ds:0x44537c
  4055d5:	adc    DWORD PTR ds:0x413b42,eax
  4055db:	jmp    0x405714
  4055e0:	ins    DWORD PTR es:[edi],dx
  4055e1:	je     0x40559f
  4055e3:	xchg   DWORD PTR [ebp+0x47],edx
  4055e6:	jge    0x4055e2
  4055e8:	fs pop ebp
  4055ea:	mov    eax,0x515aa777
  4055ef:	jmp    0x405601
  4055f1:	sub    bh,BYTE PTR [esp+edi*2+0x18]
  4055f5:	jg     0x405673
  4055f7:	jl     0x4055d4
  4055f9:	sti    
  4055fa:	xchg   edx,eax
  4055fb:	call   0x405aa882
  405600:	pop    esi
  405601:	cmp    al,0x74
  405603:	dec    ebx
  405604:	xor    eax,0x7b22a0f9
  405609:	xchg   esp,eax
  40560a:	neg    BYTE PTR [edx+0x23]
  40560d:	clc    
  40560e:	aam    0x6d
  405610:	fcomi  st,st(6)
  405612:	jb     0x40559a
  405614:	nop
  405615:	es sub al,0x5b
  405618:	scas   al,BYTE PTR es:[edi]
  405619:	mov    ah,0x79
  40561b:	out    dx,eax
  40561c:	test   BYTE PTR [edx+ecx*4],ah
  40561f:	sahf   
  405620:	(bad)  
  405621:	loop   0x405673
  405623:	scas   al,BYTE PTR es:[edi]
  405624:	xchg   ebx,eax
  405625:	fistp  DWORD PTR [edx]
  405627:	loopne 0x40564b
  405629:	bound  esp,QWORD PTR [esi]
  40562b:	xchg   edx,eax
  40562c:	imul   eax,DWORD PTR [eax+0x7ccefabb],0x3935f67e
  405636:	lds    ebx,FWORD PTR [edx-0x4a59c9c5]
  40563c:	ja     0x40566c
  40563e:	adc    BYTE PTR ds:0x51c45e02,ah
  405644:	lds    edx,FWORD PTR [esi]
  405646:	in     eax,dx
  405647:	cmp    edx,DWORD PTR [edx+0xd]
  40564a:	out    0x9e,eax
  40564c:	hlt    
  40564d:	js     0x405627
  40564f:	popf   
  405650:	test   DWORD PTR [esi+0x4a06ae61],ebx
  405656:	adc    al,0x3b
  405658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405659:	dec    ebx
  40565a:	fdivp  st(0),st
  40565c:	rcr    BYTE PTR [edx],cl
  40565e:	cmc    
  40565f:	sti    
  405660:	inc    ebx
  405661:	mov    dh,BYTE PTR [esi+0x75089e8b]
  405667:	call   0x954a:0xc02747e2
  40566e:	mov    eax,ds:0xeb2c2bd8
  405673:	mov    cl,0x33
  405675:	fsubr  st(4),st
  405677:	adc    al,0x3c
  405679:	arpl   bp,dx
  40567b:	mov    ebp,0x6a3195d1
  405680:	mov    BYTE PTR [ecx-0x71],ah
  405683:	fcomip st,st(0)
  405685:	push   ds
  405686:	push   esp
  405687:	std    
  405688:	ds lahf 
  40568a:	(bad)  
  40568c:	loop   0x405684
  40568e:	mov    edi,0xbd021ccc
  405693:	xor    al,0xf0
  405695:	cmp    ecx,0xffffffe1
  405698:	xor    DWORD PTR [edi*2-0x29ea9fdb],0x836b63ce
  4056a3:	sbb    DWORD PTR ds:0x7063b501,edx
  4056a9:	mov    dh,0x9d
  4056ab:	rol    bl,cl
  4056ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056ae:	push   esp
  4056af:	fidivr WORD PTR [ebp+edx*8-0x22fb9ccf]
  4056b6:	and    esi,DWORD PTR [ebx-0x29]
  4056b9:	fiadd  WORD PTR [ecx+0x48]
  4056bc:	cmp    eax,0x72359e04
  4056c1:	out    dx,eax
  4056c2:	fisub  DWORD PTR [edx-0x34]
  4056c5:	fsubr  DWORD PTR [esi+0x2960b51b]
  4056cb:	push   ds
  4056cc:	in     al,dx
  4056cd:	loop   0x4056ba
  4056cf:	ficomp WORD PTR [esi-0x36]
  4056d2:	repz mov bh,0xd0
  4056d5:	or     DWORD PTR [esi+0x3ff07b5e],0xffffffc1
  4056dc:	icebp  
  4056dd:	mov    esi,0x37f8008e
  4056e2:	jne    0x405682
  4056e4:	test   eax,0x95dce98
  4056e9:	inc    ecx
  4056ea:	cdq    
  4056eb:	test   DWORD PTR [edx-0x182c096e],0xd57c6639
  4056f5:	gs dec ebx
  4056f7:	ja     0x405683
  4056f9:	jb     0x40569e
  4056fb:	mov    cl,0x7f
  4056fd:	stos   BYTE PTR es:[edi],al
  4056fe:	mov    ch,0x84
  405700:	and    eax,0x79155a53
  405705:	fsubr  QWORD PTR ds:0xb93033e2
  40570b:	ins    DWORD PTR es:[edi],dx
  40570c:	push   edi
  40570d:	adc    eax,0x9c3028f8
  405712:	ret    0x8b93
  405715:	inc    ebp
  405716:	cld    
  405717:	mov    edx,DWORD PTR [ebp+0x10]
  40571a:	or     ecx,0x2821
  405720:	mov    ecx,0x7510857
  405725:	not    DWORD PTR ds:0x413b5e
  40572b:	jmp    0x405864
  405730:	xor    al,dh
  405732:	push   0x65
  405734:	jp     0x40579b
  405736:	fnstsw WORD PTR [ecx-0x7c]
  405739:	mov    ebp,0xcc4e0b79
  40573e:	arpl   WORD PTR [edi+0x3c],dx
  405741:	sub    eax,0x7f187c7c
  405746:	jl     0x4057c4
  405748:	call   0x9d4e:0xdd24ab53
  40574f:	loope  0x4057a3
  405751:	push   ebx
  405752:	cmc    
  405753:	adc    dl,BYTE PTR [ebp+0xc4ed73a]
  405759:	inc    edi
  40575a:	cmp    al,0x8f
  40575c:	mul    BYTE PTR [edx]
  40575e:	push   esp
  40575f:	scas   al,BYTE PTR es:[edi]
  405760:	rcr    DWORD PTR [edi+ebx*1],0xe5
  405764:	outs   dx,DWORD PTR ds:[esi]
  405765:	stc    
  405766:	fprem  
  405768:	inc    esp
  405769:	jge    0x405789
  40576b:	ror    esp,1
  40576d:	add    edx,DWORD PTR [edi]
  40576f:	cmp    al,0xf5
  405771:	sub    eax,0x80e53a83
  405776:	ror    BYTE PTR [ecx-0x45730f],1
  40577c:	aas    
  40577d:	lea    esi,[ecx-0x2c5ad5cf]
  405783:	call   0x4b323da5
  405788:	fbld   TBYTE PTR [ecx]
  40578a:	fild   DWORD PTR es:[ecx]
  40578d:	jp     0x405728
  40578f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405790:	sbb    ebp,ebp
  405792:	sbb    eax,0x3ca82693
  405797:	mov    esp,0x5a8a361
  40579c:	adc    BYTE PTR [ecx-0x20],al
  40579f:	dec    ecx
  4057a0:	jmp    0xa4da8e9d
  4057a5:	cmc    
  4057a6:	rol    BYTE PTR [eax+0x345dca63],1
  4057ac:	fwait
  4057ad:	push   0x78f9ae6a
  4057b2:	(bad)  
  4057b3:	mov    edi,0x684555fb
  4057b8:	test   ecx,0xf126b01
  4057be:	cmp    eax,0x85449cc
  4057c3:	mov    esi,gs
  4057c5:	jg     0x405757
  4057c7:	inc    ebx
  4057c8:	jge    0x405824
  4057ca:	ret    0xcd3f
  4057cd:	pusha  
  4057ce:	inc    esi
  4057cf:	pop    edi
  4057d0:	cmp    esp,ecx
  4057d2:	sbb    al,0xba
  4057d4:	pop    ds
  4057d5:	jae    0x405808
  4057d7:	aas    
  4057d8:	sbb    dh,BYTE PTR [esi+0x6e]
  4057db:	jmp    0xde15:0x4e26ba3f
  4057e2:	arpl   WORD PTR [ebx],cx
  4057e4:	(bad)  
  4057e5:	nop
  4057e6:	and    al,0x3d
  4057e8:	call   0xaf4cb150
  4057ed:	sub    al,0x78
  4057ef:	xchg   ebp,eax
  4057f0:	xchg   esi,eax
  4057f1:	arpl   WORD PTR [ebx+0x3584f954],bp
  4057f7:	mov    al,0xdb
  4057f9:	cmp    BYTE PTR [eax+0x33],bl
  4057fc:	pop    ss
  4057fd:	xor    dl,cl
  4057ff:	sub    BYTE PTR [ebp-0x7f],ah
  405802:	ret    
  405803:	adc    DWORD PTR [edx-0x5a126b3c],edx
  405809:	add    dl,bl
  40580b:	push   ebx
  40580c:	add    ebx,ebp
  40580e:	or     BYTE PTR [ebx-0x7c07c946],dh
  405814:	call   0x36ee:0xd7c07f61
  40581b:	xor    al,0x95
  40581d:	pop    esp
  40581e:	inc    ebp
  40581f:	sar    BYTE PTR [ebx],1
  405821:	out    0x6d,al
  405823:	inc    eax
  405824:	and    DWORD PTR [ecx+0x4e9891dc],ecx
  40582a:	pop    edi
  40582b:	push   ebp
  40582c:	cli    
  40582d:	or     BYTE PTR [edi],dh
  40582f:	cmc    
  405830:	jle    0x4057d1
  405832:	cmp    ecx,DWORD PTR [edx]
  405834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405835:	xchg   ebp,eax
  405836:	adc    al,0x65
  405838:	aam    0x39
  40583a:	std    
  40583b:	gs je  0x405820
  40583e:	dec    edi
  40583f:	in     al,0xe2
  405841:	sti    
  405842:	pop    ebx
  405843:	jnp    0x40585d
  405845:	(bad)  
  405846:	mov    esi,0xb38c9480
  40584b:	ss adc al,0x67
  40584e:	mov    ds:0x8d13a559,eax
  405853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405854:	frstor [esi+0x3cf21a4d]
  40585a:	add    al,0xf7
  40585c:	jns    0x405855
  40585e:	outs   dx,DWORD PTR ds:[esi]
  40585f:	jbe    0x4058cf
  405861:	fnstenv [edi+0x24]
  405864:	xor    eax,ecx
  405866:	add    eax,0x32729e
  40586b:	or     DWORD PTR ds:0x413b56,0x43fbdc
  405875:	mov    DWORD PTR [edx],eax
  405877:	neg    edx
  405879:	mov    eax,DWORD PTR [ebp+0x14]
  40587c:	and    DWORD PTR ds:0x43fbec,0x0
  405886:	xor    edx,edx
  405888:	add    edx,DWORD PTR ds:0x43fbec
  40588e:	inc    edx
  40588f:	mov    DWORD PTR ds:0x43fbec,edx
  405895:	cmp    DWORD PTR ds:0x43fbec,0x14
  40589c:	jne    0x4058b0
  4058a2:	push   DWORD PTR [ebp-0x28]
  4058a5:	push   0x43fbfc
  4058aa:	call   DWORD PTR ds:0x43c840
  4058b0:	cmp    DWORD PTR ds:0x43fbec,0x13
  4058b7:	jb     0x405886
  4058bd:	mov    edx,DWORD PTR [ebp+0x10]
  4058c0:	mov    DWORD PTR [edx+0x4],eax
  4058c3:	mov    eax,DWORD PTR [ebp+0x18]
  4058c6:	mov    edx,DWORD PTR [ebp+0x10]
  4058c9:	mov    DWORD PTR [edx+0x8],eax
  4058cc:	mov    eax,DWORD PTR [ebp+0x1c]
  4058cf:	mov    edx,DWORD PTR [ebp+0x10]
  4058d2:	jmp    0x405a0b
  4058d7:	in     eax,0xab
  4058d9:	ins    DWORD PTR es:[edi],dx
  4058da:	push   es
  4058db:	jge    0x4058a3
  4058dd:	imul   edi,DWORD PTR gs:[ecx],0x49
  4058e1:	mov    al,ds:0x5a7c19b9
  4058e6:	mov    ecx,0x7c7c2cd8
  4058eb:	sbb    BYTE PTR [edi+0x7c],bh
  4058ee:	jl     0x4058b3
  4058f0:	lods   eax,DWORD PTR ds:[esi]
  4058f1:	in     eax,dx
  4058f2:	cmp    eax,0xafd3ec9b
  4058f7:	leave  
  4058f8:	aaa    
  4058f9:	xchg   ebx,eax
  4058fa:	loope  0x4058a2
  4058fc:	pop    ecx
  4058fd:	sahf   
  4058fe:	(bad)  
  405900:	cmp    eax,0x1c4199bb
  405905:	loop   0x40591a
  405907:	inc    esp
  405908:	add    eax,0xf8950a9b
  40590d:	enter  0x2afd,0x58
  405911:	iret   
  405912:	xchg   ebp,eax
  405913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405914:	dec    esi
  405915:	imul   edx,ecx,0x6a26ec2
  40591b:	daa    
  40591c:	mov    esi,0x55abfc8f
  405921:	ror    BYTE PTR [ebx+0x3dea4073],1
  405927:	repnz cmp edi,DWORD PTR [ebx]
  40592a:	xchg   ebx,eax
  40592b:	sbb    edx,esi
  40592d:	adc    DWORD PTR [edi],edi
  40592f:	shl    bl,cl
  405931:	scas   eax,DWORD PTR es:[edi]
  405932:	xor    al,0x54
  405934:	jg     0x4059a0
  405936:	jns    0x4058ff
  405938:	adc    edx,esi
  40593a:	repnz lods eax,DWORD PTR ds:[esi]
  40593c:	xor    eax,0xdfb97b4
  405941:	sbb    eax,0x76f4a3c9
  405946:	mov    ecx,0x44160afe
  40594b:	ins    DWORD PTR es:[edi],dx
  40594c:	dec    ebx
  40594d:	sub    eax,0x49fd4706
  405952:	mov    ch,0xc8
  405954:	addr16 dec ebx
  405956:	(bad)  
  405957:	das    
  405958:	popa   
  405959:	dec    esp
  40595a:	xlat   BYTE PTR ds:[ebx]
  40595b:	div    BYTE PTR [edx-0x2f]
  40595e:	or     al,0x16
  405960:	scas   eax,DWORD PTR es:[edi]
  405961:	xchg   ecx,eax
  405962:	jne    0x4058f1
  405964:	sbb    ebx,edi
  405966:	xor    bl,BYTE PTR [eax+0x72]
  405969:	in     al,dx
  40596a:	clc    
  40596b:	stos   BYTE PTR es:[edi],al
  40596c:	pop    es
  40596d:	jbe    0x40598f
  40596f:	mov    edi,0xb488a289
  405974:	sbb    al,0x1b
  405976:	add    BYTE PTR [eax+0x4d],0x57
  40597a:	repz ret 
  40597c:	cdq    
  40597d:	leave  
  40597e:	mov    ch,BYTE PTR [edx]
  405980:	icebp  
  405981:	mov    al,0xdf
  405983:	fmul   QWORD PTR [ebp-0x18]
  405986:	test   al,0x3d
  405988:	mov    bl,0xef
  40598a:	adc    DWORD PTR [eax+0x5939967],eax
  405990:	or     BYTE PTR [eax],dl
  405992:	xchg   esp,eax
  405993:	mov    eax,gs:0xc4a685c9
  405999:	jae    0x4059cf
  40599b:	das    
  40599c:	dec    ebp
  40599d:	imul   dl
  40599f:	jo     0x405a1d
  4059a1:	jo     0x4059a7
  4059a3:	jle    0x4059b8
  4059a5:	and    ch,BYTE PTR [edi-0x157ea0e]
  4059ab:	adc    eax,0x83dacdbb
  4059b0:	sub    ch,BYTE PTR [edx-0x5c6c90d6]
  4059b6:	sar    BYTE PTR [edi+ecx*4],1
  4059b9:	jns    0x4059c9
  4059bb:	xor    dl,BYTE PTR [esi+edi*4]
  4059be:	sar    DWORD PTR [ecx],1
  4059c0:	sti    
  4059c1:	inc    eax
  4059c2:	inc    esp
  4059c3:	or     DWORD PTR [eax-0x7b5c9134],ebp
  4059c9:	mov    edx,gs
  4059cb:	aas    
  4059cc:	outs   dx,DWORD PTR ds:[esi]
  4059cd:	(bad)  
  4059cf:	int3   
  4059d0:	xchg   edx,eax
  4059d1:	dec    esi
  4059d2:	push   0x4662dc6a
  4059d7:	outs   dx,BYTE PTR ds:[esi]
  4059d8:	mov    eax,edx
  4059da:	and    eax,0x84c515c
  4059df:	sub    eax,0xd92dc419
  4059e4:	add    DWORD PTR [eax-0x78],0xffffffbc
  4059e8:	xchg   ecx,eax
  4059e9:	hlt    
  4059ea:	jo     0x405a1c
  4059ec:	aad    0x5e
  4059ee:	xor    BYTE PTR [edi],cl
  4059f0:	outs   dx,DWORD PTR ds:[esi]
  4059f1:	mov    esp,0x76b3e924
  4059f6:	imul   ebp,DWORD PTR [ebp+0x28],0x7efbc053
  4059fd:	xchg   DWORD PTR [ecx+0x75c67218],ecx
  405a03:	xchg   ebx,eax
  405a04:	adc    DWORD PTR ds:0x9b3d5fa7,ebx
  405a0a:	xchg   esp,eax
  405a0b:	mov    DWORD PTR [edx+0xc],eax
  405a0e:	mov    eax,DWORD PTR [ebp+0x20]
  405a11:	mov    edx,DWORD PTR [ebp+0x10]
  405a14:	mov    DWORD PTR [edx+0x10],eax
  405a17:	mov    eax,eax
  405a19:	mov    eax,DWORD PTR [ebp+0x14]
  405a1c:	test   eax,eax
  405a1e:	jmp    0x405b57
  405a23:	pop    edx
  405a24:	loope  0x405a4a
  405a26:	sbb    bh,BYTE PTR [ebx+0x5f617add]
  405a2c:	retf   
  405a2d:	mov    cl,0x6b
  405a2f:	push   ss
  405a30:	in     al,0xed
  405a32:	mov    ds:0x7c7c2fe4,al
  405a37:	sbb    BYTE PTR [edi+0x7c],bh
  405a3a:	jl     0x4059f4
  405a3c:	jecxz  0x4059e6
  405a3e:	lock push 0x2e
  405a41:	sub    BYTE PTR [edx+0x15],cl
  405a44:	das    
  405a45:	adc    dl,0x23
  405a48:	(bad)  
  405a49:	imul   ebx,DWORD PTR [edi+0x5c],0x6b6f0c04
  405a50:	inc    esi
  405a51:	adc    ebp,ecx
  405a53:	bts    DWORD PTR [ebx+0x77],0xf4
  405a58:	fdivr  QWORD PTR [edi]
  405a5a:	arpl   di,cx
  405a5c:	jns    0x405a99
  405a5e:	xor    eax,0x3f822f89
  405a63:	push   esp
  405a64:	mov    cl,0x8c
  405a66:	jecxz  0x405abc
  405a68:	repz adc ecx,DWORD PTR [edx-0x4c]
  405a6c:	idiv   DWORD PTR [esi+0x16b108ad]
  405a72:	mov    ah,0x85
  405a74:	mov    al,0xb7
  405a76:	pushf  
  405a77:	sub    dx,bx
  405a7a:	fimul  DWORD PTR [ebp-0x1]
  405a7d:	rcl    BYTE PTR [edi+ebx*1+0x46e731b0],cl
  405a84:	mov    eax,0xff1fa117
  405a89:	xchg   ebp,eax
  405a8a:	dec    eax
  405a8b:	push   cs
  405a8c:	repnz adc BYTE PTR [edi+0xa82ce88],dl
  405a93:	loop   0x405a90
  405a95:	dec    edx
  405a96:	add    ecx,DWORD PTR [ecx+0x1d]
  405a99:	loop   0x405ac8
  405a9b:	mov    ah,0x6
  405a9d:	push   edi
  405a9e:	pop    ss
  405a9f:	je     0x405a54
  405aa1:	and    eax,0x9997a22d
  405aa6:	lds    esi,FWORD PTR [ecx]
  405aa8:	clc    
  405aa9:	iret   
  405aaa:	jl     0x405ab3
  405aac:	scas   al,BYTE PTR es:[edi]
  405aad:	sub    al,0xc6
  405aaf:	lods   eax,DWORD PTR ds:[esi]
  405ab0:	out    dx,al
  405ab1:	pop    esi
  405ab2:	(bad)  
  405ab3:	icebp  
  405ab4:	lahf   
  405ab5:	mov    esi,0xd06c17f9
  405aba:	out    0xf0,al
  405abc:	sbb    eax,0xfd28eab0
  405ac1:	rol    ebp,1
  405ac3:	adc    DWORD PTR [esi+ebx*2+0x2],ebx
  405ac7:	add    ah,ch
  405ac9:	clc    
  405aca:	xchg   eax,esi
  405acc:	(bad)  
  405acd:	loope  0x405aef
  405acf:	int3   
  405ad0:	jg     0x405a9f
  405ad2:	jecxz  0x405b49
  405ad4:	call   ebp
  405ad6:	imul   ebx,DWORD PTR [edx],0x63fa8de8
  405adc:	cld    
  405add:	mov    ch,0x21
  405adf:	mov    eax,edx
  405ae1:	loope  0x405b40
  405ae3:	ins    BYTE PTR es:[edi],dx
  405ae4:	cmp    BYTE PTR [ecx+0x32ec3b51],al
  405aea:	(bad)  
  405aeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aec:	or     al,0x57
  405aee:	cmp    BYTE PTR [ebx+0x4a],ch
  405af1:	mov    BYTE PTR [edi-0x773b179e],al
  405af7:	jmp    0x2f169d28
  405afc:	pushf  
  405afd:	mov    esp,0x6e31b891
  405b02:	mov    dh,0x8b
  405b04:	inc    DWORD PTR [eax+ebx*2]
  405b07:	repnz push cs
  405b09:	push   ebx
  405b0a:	xchg   BYTE PTR [edi+0x804b4ce],dh
  405b10:	scas   al,BYTE PTR es:[edi]
  405b11:	rcl    al,1
  405b13:	imul   ebp,DWORD PTR [ebp-0x44],0xffffffa3
  405b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b18:	adc    al,al
  405b1a:	pop    ds
  405b1b:	lock test al,0x38
  405b1e:	loope  0x405aad
  405b20:	push   ebx
  405b21:	inc    ebx
  405b22:	add    DWORD PTR [esi-0x12],ebx
  405b25:	xchg   ecx,eax
  405b26:	mov    dl,BYTE PTR [esi]
  405b28:	ret    
  405b29:	shl    BYTE PTR [ebp-0x7],1
  405b2c:	fld    TBYTE PTR [ecx-0x277a2c0d]
  405b32:	sub    eax,DWORD PTR [ecx]
  405b34:	sub    ch,BYTE PTR [edi-0x1a]
  405b37:	inc    esp
  405b38:	pusha  
  405b39:	shr    BYTE PTR [esi+ecx*4-0x44],0xa3
  405b3e:	pop    ebp
  405b3f:	xchg   ecx,eax
  405b40:	add    al,0xfa
  405b42:	pop    ds
  405b43:	sbb    esp,ebx
  405b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b46:	xchg   ecx,eax
  405b47:	mov    DWORD PTR [edi+esi*4+0x2],ecx
  405b4b:	xor    eax,0x9b524f6c
  405b50:	mov    al,BYTE PTR [ebp+0x35807a6]
  405b56:	xlat   BYTE PTR ds:[ebx]
  405b57:	mov    eax,DWORD PTR [ebp+0x8]
  405b5a:	jne    0x405b63
  405b60:	mov    eax,DWORD PTR [ebp+0xc]
  405b63:	xor    eax,ecx
  405b65:	add    eax,0x32729e
  405b6a:	leave  
  405b6b:	ret    0x1c
  405b6e:	push   ebp
  405b6f:	mov    ebp,esp
  405b71:	sub    esp,0x78
  405b74:	adc    DWORD PTR ds:0x43fbe0,0x7d94
  405b7e:	jmp    0x405caa
  405b83:	or     esp,ebx
  405b85:	dec    ecx
  405b86:	or     BYTE PTR [ecx-0x53],ch
  405b89:	dec    ebp
  405b8a:	aad    0x48
  405b8c:	aas    
  405b8d:	adc    esi,esp
  405b8f:	aad    0x74
  405b91:	outs   dx,DWORD PTR ds:[esi]
  405b92:	push   esi
  405b93:	sub    BYTE PTR [esi],0x7c
  405b96:	jl     0x405ba5
  405b98:	jg     0x405c16
  405b9a:	jl     0x405bcf
  405b9c:	sub    dh,BYTE PTR [edi+0x27]
  405b9f:	pop    ebp
  405ba0:	cs hlt 
  405ba2:	fcomp  st(6)
  405ba4:	sbb    eax,0x21575116
  405ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405baa:	xchg   ecx,eax
  405bab:	mov    dl,0x6a
  405bad:	dec    ecx
  405bae:	pop    edi
  405baf:	dec    edi
  405bb0:	jbe    0x405c03
  405bb2:	sbb    ebp,DWORD PTR [ebp-0x34]
  405bb5:	cmp    ebx,ebp
  405bb7:	add    eax,0x55cacc3e
  405bbc:	jl     0x405b74
  405bbe:	hlt    
  405bbf:	push   ecx
  405bc0:	and    BYTE PTR [eax-0x546edfd1],dl
  405bc6:	nop
  405bc7:	test   al,0xf3
  405bc9:	clc    
  405bca:	xor    DWORD PTR [esi+0x7837625a],ebx
  405bd0:	jl     0x405c37
  405bd2:	mov    ss,WORD PTR [edx+0x61b4ff24]
  405bd8:	adc    al,0x28
  405bda:	dec    ebx
  405bdb:	iret   
  405bdc:	inc    eax
  405bdd:	mov    ebp,0x3bc98813
  405be2:	popf   
  405be3:	int3   
  405be4:	ins    DWORD PTR es:[edi],dx
  405be5:	mov    al,0x84
  405be7:	dec    edx
  405be8:	dec    ebp
  405be9:	(bad)  
  405bea:	fbld   TBYTE PTR [edx]
  405bec:	shl    DWORD PTR [esi-0x6f88f902],0x3
  405bf3:	inc    eax
  405bf4:	cdq    
  405bf5:	push   eax
  405bf6:	mov    dh,0x42
  405bf8:	stc    
  405bf9:	es inc edx
  405bfb:	aas    
  405bfc:	lods   eax,DWORD PTR ds:[esi]
  405bfd:	jae    0x405b96
  405bff:	mov    ah,0xdf
  405c01:	cli    
  405c02:	mov    ebx,0x13ecac03
  405c07:	push   esi
  405c08:	popf   
  405c09:	adc    al,0xcd
  405c0b:	test   BYTE PTR [ebx+0x67],bl
  405c0e:	fwait
  405c0f:	ins    DWORD PTR es:[edi],dx
  405c10:	adc    DWORD PTR [ecx+0x1f],esp
  405c13:	popa   
  405c14:	add    BYTE PTR [edx+eax*1+0x1e7a20a],ah
  405c1b:	inc    edi
  405c1c:	cmp    edi,ebx
  405c1e:	jno    0x405c85
  405c20:	adc    dl,ah
  405c22:	fld    DWORD PTR ds:0x3afac136
  405c28:	sahf   
  405c29:	jmp    0xa47d476f
  405c2e:	in     eax,0xb0
  405c30:	xlat   BYTE PTR ds:[ebx]
  405c31:	ss xchg ebx,eax
  405c33:	jp     0x405c85
  405c35:	inc    esi
  405c36:	inc    eax
  405c37:	lahf   
  405c38:	pop    edi
  405c39:	jmp    0xe715:0x1f24883
  405c40:	or     BYTE PTR [ecx+0x4d],bl
  405c43:	push   ebp
  405c44:	shl    DWORD PTR [ecx+0x1b0aab64],cl
  405c4a:	xor    al,BYTE PTR [edx+0xd]
  405c4d:	in     eax,dx
  405c4e:	hlt    
  405c4f:	xlat   BYTE PTR ds:[ebx]
  405c50:	shr    DWORD PTR [ecx],cl
  405c52:	enter  0xd008,0xdb
  405c56:	lock nop
  405c58:	sub    dl,BYTE PTR ds:0x6a9631b7
  405c5e:	adc    DWORD PTR [edi+eiz*1],edi
  405c61:	pop    esp
  405c62:	lock pop edi
  405c64:	lahf   
  405c65:	xor    DWORD PTR [edi],edi
  405c67:	mov    esi,0x29c9e0c4
  405c6c:	adc    al,0xd8
  405c6e:	or     eax,0x3090bb00
  405c73:	cmovne esi,DWORD PTR [ecx+ebx*8+0x2a]
  405c78:	mov    bh,0x8c
  405c7a:	sub    al,0xce
  405c7c:	dec    eax
  405c7d:	jp     0x405ce4
  405c7f:	rcr    DWORD PTR [ebp-0x46d50f56],cl
  405c85:	iret   
  405c86:	push   eax
  405c87:	lds    ebx,FWORD PTR [eax+0x2deb40f9]
  405c8d:	inc    edx
  405c8e:	call   0x3a2b:0x51cfad86
  405c95:	pop    DWORD PTR [esi+ecx*1+0x3e919be2]
  405c9c:	mov    bl,BYTE PTR [ebp+ebp*4-0x69]
  405ca0:	add    BYTE PTR [ecx],bl
  405ca2:	pop    ebx
  405ca3:	push   DWORD PTR [edi-0x62]
  405ca6:	daa    
  405ca7:	add    edi,DWORD PTR [esp+edi*2]
  405caa:	mov    eax,ds:0x43c1a0
  405caf:	mov    DWORD PTR [ebp-0x10],eax
  405cb2:	mov    eax,ds:0x43c2ac
  405cb7:	sub    DWORD PTR ds:0x445368,0x4427a4
  405cc1:	mov    DWORD PTR [ebp-0x30],eax
  405cc4:	neg    eax
  405cc6:	mov    DWORD PTR [ebp-0xc],0xf89c8535
  405ccd:	adc    eax,DWORD PTR ds:0x413b4e
  405cd3:	mov    DWORD PTR [ebp-0x14],0xf89c8534
  405cda:	mov    eax,DWORD PTR [ebp-0xc]
  405cdd:	xor    DWORD PTR ds:0x4427b8,0x59fc
  405ce7:	push   ebx
  405ce8:	or     DWORD PTR ds:0x413b5e,0x413b56
  405cf2:	push   esi
  405cf3:	adc    DWORD PTR ds:0x413b56,edi
  405cf9:	push   edi
  405cfa:	mov    DWORD PTR ds:0x4427ac,0x13
  405d04:	cmp    DWORD PTR ds:0x4427ac,0x0
  405d0b:	je     0x405e95
  405d11:	cmp    DWORD PTR ds:0x4427ac,0x3
  405d18:	jne    0x405d31
  405d1e:	push   0x141c
  405d23:	push   0x6005
  405d28:	push   DWORD PTR [ebp-0xc]
  405d2b:	call   DWORD PTR ds:0x43c5c0
  405d31:	cmp    DWORD PTR ds:0x4427ac,0x4
  405d38:	jne    0x405d4d
  405d3e:	xor    edi,edi
  405d40:	xor    edi,DWORD PTR ds:0x4427ac
  405d46:	dec    edi
  405d47:	mov    DWORD PTR ds:0x4427ac,edi
  405d4d:	mov    edi,DWORD PTR ds:0x4427ac
  405d53:	dec    edi
  405d54:	mov    DWORD PTR ds:0x4427ac,edi
  405d5a:	jmp    0x405d04
  405d5f:	and    DWORD PTR ds:0x43fbe0,0x5029
  405d69:	jmp    0x405e95
  405d6e:	out    0xd6,eax
  405d70:	(bad)  
  405d71:	sub    al,0xf9
  405d73:	sub    al,0xf9
  405d75:	jmp    0x592bcf2a
  405d7a:	push   es
  405d7b:	xor    BYTE PTR [ecx],dh
  405d7d:	inc    esi
  405d7e:	xchg   ecx,eax
  405d7f:	and    DWORD PTR [esp+edi*2+0xd],edi
  405d83:	jg     0x405e01
  405d85:	jl     0x405d9f
  405d87:	inc    ebx
  405d88:	adc    dl,BYTE PTR ds:0x15baa372
  405d8e:	rcl    DWORD PTR [ebx+0x7d],cl
  405d91:	dec    ecx
  405d92:	pop    ds
  405d93:	push   eax
  405d94:	sub    al,0x7e
  405d96:	mov    ch,ah
  405d98:	sub    ebx,DWORD PTR [ecx+edi*8]
  405d9b:	and    al,0x94
  405d9d:	(bad)  
  405d9e:	xchg   ebp,eax
  405d9f:	mov    cl,0x70
  405da1:	lea    edx,[eax-0x30602092]
  405da7:	int    0x4c
  405da9:	sete   BYTE PTR [esi]
  405dac:	sbb    dl,al
  405dae:	test   BYTE PTR [edx+0x569320ba],dl
  405db4:	sti    
  405db5:	in     al,dx
  405db6:	sub    eax,0xb9856e12
  405dbb:	in     al,0x67
  405dbd:	mov    edi,0x4c0e3471
  405dc2:	cdq    
  405dc3:	xchg   edx,eax
  405dc4:	sbb    edx,ebx
  405dc6:	adc    al,0x95
  405dc8:	xor    dh,BYTE PTR [eax-0x12a010a1]
  405dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dcf:	mov    bh,0xad
  405dd1:	stos   DWORD PTR es:[edi],eax
  405dd2:	xor    edx,DWORD PTR [edx]
  405dd4:	pop    edi
  405dd5:	out    0x57,al
  405dd7:	pop    ebx
  405dd8:	mov    al,0xf7
  405dda:	jge    0x405e56
  405ddc:	sub    BYTE PTR [edi+0x1745e198],ah
  405de2:	les    eax,FWORD PTR [ebx+ecx*1-0x19]
  405de6:	clc    
  405de7:	lods   al,BYTE PTR ds:[esi]
  405de8:	inc    ecx
  405de9:	jo     0x405dde
  405deb:	jg     0x405d93
  405ded:	int    0x1c
  405def:	jne    0x405dee
  405df1:	cmp    al,0xb5
  405df3:	sub    cl,ah
  405df5:	or     eax,0xb56bdda0
  405dfa:	jp     0x405d9b
  405dfc:	cmovl  edx,DWORD PTR [ecx+ebx*1+0x446d7e2f]
  405e04:	(bad)  
  405e05:	cmp    dh,BYTE PTR [esi+eax*4]
  405e08:	dec    eax
  405e09:	imul   esi,DWORD PTR [ebx-0x16],0x6d5d358
  405e10:	aas    
  405e11:	and    DWORD PTR [eax+0xa],0x3910a090
  405e18:	cmp    al,0xf2
  405e1a:	js     0x405dd3
  405e1c:	add    al,0xaa
  405e1e:	push   ebp
  405e1f:	sub    DWORD PTR [ebx],esi
  405e21:	and    BYTE PTR [esi+0x4],ah
  405e24:	and    DWORD PTR [ecx],esp
  405e26:	ret    0x90b8
  405e29:	in     eax,0x8b
  405e2b:	add    esi,edx
  405e2d:	sub    al,0x7e
  405e2f:	push   ebp
  405e30:	xor    BYTE PTR [ecx+0x7ae3b447],ah
  405e36:	pop    esi
  405e37:	jp     0x405e77
  405e39:	mov    esi,0x87b73c88
  405e3e:	push   ecx
  405e3f:	jl     0x405ddc
  405e41:	push   0x6f
  405e43:	xchg   ebx,eax
  405e44:	sbb    al,ch
  405e46:	jge    0x405ea6
  405e48:	xchg   DWORD PTR [edi],edx
  405e4a:	ret    
  405e4b:	sub    eax,0x85feba79
  405e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e51:	sbb    BYTE PTR [ecx+edx*2+0x32],0xb5
  405e56:	lea    ebp,[eax-0x99e1f93]
  405e5c:	addr16 je 0x405e94
  405e5f:	pop    ebx
  405e60:	inc    eax
  405e61:	mov    BYTE PTR [esi],cl
  405e63:	jne    0x405edf
  405e65:	(bad)  
  405e66:	out    0xd2,eax
  405e68:	mov    WORD PTR [edx],?
  405e6a:	fwait
  405e6b:	sub    esp,DWORD PTR [ebx-0x60]
  405e6e:	retf   0x6a11
  405e71:	jo     0x405e01
  405e73:	xor    eax,0x8f06cb09
  405e78:	mov    fs,WORD PTR [eax]
  405e7a:	mov    eax,ds:0x2c06e974
  405e7f:	and    bl,BYTE PTR [edi-0x424d46e4]
  405e85:	mov    BYTE PTR [ebx-0x76],dh
  405e88:	xor    dl,BYTE PTR [edi]
  405e8a:	and    ecx,DWORD PTR [ebp-0x6f]
  405e8d:	and    al,0xd8
  405e90:	js     0x405eb3
  405e92:	outs   dx,DWORD PTR ds:[esi]
  405e93:	sti    
  405e94:	sar    BYTE PTR [esi+0x7510857],1
  405e9a:	xor    eax,esi
  405e9c:	movzx  edi,WORD PTR ds:0x4105d3
  405ea3:	xor    DWORD PTR ds:0x43fbd8,edi
  405ea9:	mov    edi,0x32729e
  405eae:	jmp    0x405fda
  405eb3:	icebp  
  405eb4:	popa   
  405eb5:	jno    0x405f2b
  405eb7:	loope  0x405f1d
  405eb9:	mov    DWORD PTR [ecx-0x35],edi
  405ebc:	add    esi,DWORD PTR [esi+0x2d]
  405ebf:	mov    ds:0x20ae4418,eax
  405ec5:	jl     0x405f43
  405ec7:	or     eax,0xd57c7c7f
  405ecc:	and    DWORD PTR [edi-0x524065d1],edx
  405ed2:	lahf   
  405ed3:	or     DWORD PTR [ebp+ebx*8+0x58],esi
  405ed7:	mov    dh,0x3f
  405ed9:	retf   
  405eda:	sub    BYTE PTR ds:0x7021b9a9,al
  405ee0:	stos   DWORD PTR es:[edi],eax
  405ee1:	popf   
  405ee2:	mov    dh,0x76
  405ee4:	sub    BYTE PTR ds:0x9d3c7b8,bl
  405eea:	out    dx,al
  405eeb:	xchg   edx,eax
  405eec:	mov    bl,0x3b
  405eee:	fistp  DWORD PTR [ebx]
  405ef0:	dec    esi
  405ef1:	adc    DWORD PTR [ecx+0x1065a0f1],eax
  405ef7:	push   esp
  405ef8:	stos   DWORD PTR es:[edi],eax
  405ef9:	ret    
  405efa:	mov    bl,BYTE PTR [esi+eax*2-0x30a94336]
  405f01:	push   es
  405f02:	fidiv  DWORD PTR [edi-0x701f9e3b]
  405f08:	or     DWORD PTR [eax-0x248cbc67],esi
  405f0e:	xor    edi,ebx
  405f10:	test   BYTE PTR [ecx*1-0xfb680b7],bh
  405f17:	cld    
  405f18:	test   eax,0x98a469ee
  405f1d:	out    dx,al
  405f1e:	std    
  405f1f:	shr    DWORD PTR [ebx+0x48],0x4a
  405f23:	mov    eax,0xd9a98b47
  405f28:	push   ecx
  405f29:	dec    ebx
  405f2a:	scas   al,BYTE PTR es:[edi]
  405f2b:	pop    esp
  405f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f2d:	xor    ah,0x78
  405f30:	gs ret 
  405f32:	rol    BYTE PTR [esi],cl
  405f34:	xchg   esp,eax
  405f35:	and    al,0xb3
  405f37:	sub    BYTE PTR [edx+esi*8-0x699720ee],bl
  405f3e:	loop   0x405eca
  405f40:	inc    esp
  405f41:	xchg   BYTE PTR ds:0x8417534e,al
  405f47:	push   ss
  405f48:	pop    ebp
  405f49:	stos   DWORD PTR es:[edi],eax
  405f4a:	xchg   ecx,eax
  405f4b:	data16 mov dh,0xcc
  405f4e:	arpl   WORD PTR [edi+0x67],di
  405f51:	vmovhpd xmm1,xmm5,QWORD PTR [edx+ebp*2+0x70]
  405f57:	push   esi
  405f58:	out    dx,eax
  405f59:	dec    esi
  405f5a:	mov    ds:0x5a50cc16,eax
  405f5f:	cmp    DWORD PTR [eax],0x50637cd
  405f65:	dec    eax
  405f66:	cmp    BYTE PTR ds:0xd5ebd3e4,ch
  405f6c:	add    DWORD PTR [edx-0x27],ecx
  405f6f:	jns    0x405f7d
  405f71:	shr    BYTE PTR [ecx-0x295726b7],0x2e
  405f78:	jbe    0x405f42
  405f7a:	mov    ch,0x7b
  405f7c:	mov    esp,0x9cb4ec7a
  405f81:	jl     0x405f3b
  405f83:	mov    cs,esp
  405f85:	pop    edi
  405f86:	sahf   
  405f87:	add    esp,DWORD PTR [eax]
  405f89:	jmp    0x14b9b3c
  405f8e:	aad    0x13
  405f90:	jne    0x405f42
  405f92:	cli    
  405f93:	xor    BYTE PTR [ebp+0x65],bh
  405f96:	push   esp
  405f97:	fmulp  st(6),st
  405f99:	int3   
  405f9a:	jns    0x405fe6
  405f9c:	jnp    0x405f94
  405f9e:	bound  ebp,QWORD PTR [ebx+0x41]
  405fa1:	in     eax,0xb5
  405fa3:	rcl    DWORD PTR [ebx-0x6f],0x83
  405fa7:	inc    edx
  405fa8:	bound  ecx,QWORD PTR [eax-0x33b546dd]
  405fae:	pop    edx
  405faf:	add    al,0x3f
  405fb1:	or     dh,BYTE PTR [eax]
  405fb3:	sar    DWORD PTR [edi-0xe],1
  405fb6:	jne    0x405fb4
  405fb8:	and    dl,bl
  405fba:	stc    
  405fbb:	sub    ch,BYTE PTR [edi+ebp*1]
  405fbe:	in     eax,dx
  405fbf:	cwde   
  405fc0:	dec    edx
  405fc1:	mov    ah,0xa9
  405fc3:	rcr    DWORD PTR [esi+0x7f4e01a2],1
  405fc9:	sub    eax,0x9555b801
  405fce:	jo     0x406018
  405fd0:	jge    0x406020
  405fd2:	loop   0x405f6c
  405fd4:	inc    eax
  405fd5:	xor    eax,DWORD PTR [esi]
  405fd7:	cmp    ch,0xa2
  405fda:	add    eax,edi
  405fdc:	mov    DWORD PTR [ebp-0x20],eax
  405fdf:	mov    DWORD PTR ds:0x413b52,0x15
  405fe9:	cmp    DWORD PTR ds:0x413b52,0x0
  405ff0:	je     0x406021
  405ff6:	cmp    DWORD PTR ds:0x413b52,0x23
  405ffd:	jne    0x40600e
  406003:	push   0x4107a7
  406008:	call   DWORD PTR ds:0x43c5c4
  40600e:	xor    eax,eax
  406010:	or     eax,DWORD PTR ds:0x413b52
  406016:	dec    eax
  406017:	mov    ds:0x413b52,eax
  40601c:	jmp    0x405fe9
  406021:	mov    DWORD PTR [ebp-0x28],0xf89cb535
  406028:	mov    DWORD PTR [ebp-0x34],0xf89f0535
  40602f:	mov    DWORD PTR ds:0x43fbec,0x1696
  406039:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  406040:	or     DWORD PTR ds:0x4427b8,edx
  406046:	mov    DWORD PTR [ebp-0x24],0xf89c85d5
  40604d:	and    DWORD PTR ds:0x4105c3,0x0
  406057:	jmp    0x40606a
  40605c:	xor    eax,eax
  40605e:	xor    eax,DWORD PTR ds:0x4105c3
  406064:	inc    eax
  406065:	mov    ds:0x4105c3,eax
  40606a:	cmp    DWORD PTR ds:0x4105c3,0x1c
  406071:	jae    0x4060ad
  406077:	cmp    DWORD PTR ds:0x4105c3,0x2b
  40607e:	jne    0x4060a3
  406084:	push   0x78a8
  406089:	push   0x4427b8
  40608e:	push   0x8180
  406093:	push   0x6239
  406098:	push   0x1782
  40609d:	call   DWORD PTR ds:0x43c844
  4060a3:	jmp    0x40605c
  4060a8:	xor    eax,0x3639
  4060ad:	mov    eax,DWORD PTR [ebp-0xc]
  4060b0:	add    DWORD PTR ds:0x43fbfc,0x2d0a
  4060ba:	xor    eax,esi
  4060bc:	sbb    DWORD PTR ds:0x413b42,0x6315
  4060c6:	add    eax,edi
  4060c8:	mov    DWORD PTR [ebp-0x18],eax
  4060cb:	or     DWORD PTR ds:0x44536c,0x658e
  4060d5:	mov    DWORD PTR [ebp-0x1c],0xf89c8530
  4060dc:	mov    BYTE PTR [ebp-0x1],0x57
  4060e0:	or     DWORD PTR ds:0x43fbec,edi
  4060e6:	mov    eax,DWORD PTR [ebp-0xc]
  4060e9:	xor    eax,esi
  4060eb:	add    eax,edi
  4060ed:	sbb    DWORD PTR ds:0x4105d3,0x34b4
  4060f7:	mov    DWORD PTR [ebp-0x18],eax
  4060fa:	dec    DWORD PTR ds:0x43fbf0
  406100:	mov    eax,DWORD PTR [ebp-0x24]
  406103:	xor    eax,esi
  406105:	adc    DWORD PTR ds:0x4105cb,0x43fbe4
  40610f:	add    eax,edi
  406111:	xor    DWORD PTR ds:0x43fbec,0x445378
  40611b:	push   eax
  40611c:	mov    eax,DWORD PTR [ebp-0x28]
  40611f:	xor    eax,esi
  406121:	sbb    DWORD PTR ds:0x43fbf4,0x1e41
  40612b:	add    eax,edi
  40612d:	xor    DWORD PTR ds:0x43fbec,0x44537c
  406137:	push   eax
  406138:	and    DWORD PTR ds:0x4105bf,0x0
  406142:	mov    eax,ds:0x4105bf
  406147:	inc    eax
  406148:	mov    ds:0x4105bf,eax
  40614d:	cmp    DWORD PTR ds:0x4105bf,0xc
  406154:	jne    0x406170
  40615a:	push   0x8a0b
  40615f:	push   0x4427a8
  406164:	push   DWORD PTR [ebp-0x28]
  406167:	push   DWORD PTR [ebp-0x20]
  40616a:	call   DWORD PTR ds:0x43c5c8
  406170:	cmp    DWORD PTR ds:0x4105bf,0xb
  406177:	jne    0x40618b
  40617d:	xor    eax,eax
  40617f:	add    eax,DWORD PTR ds:0x4105bf
  406185:	inc    eax
  406186:	mov    ds:0x4105bf,eax
  40618b:	cmp    DWORD PTR ds:0x4105bf,0x17
  406192:	jb     0x406142
  406198:	movzx  eax,BYTE PTR ds:0x413b4a
  40619f:	xor    DWORD PTR ds:0x4427b0,eax
  4061a5:	mov    eax,DWORD PTR [ebp-0x1c]
  4061a8:	neg    DWORD PTR ds:0x413b52
  4061ae:	xor    eax,esi
  4061b0:	add    eax,edi
  4061b2:	or     DWORD PTR ds:0x4427b0,0x4105bf
  4061bc:	jmp    0x4062e8
  4061c1:	sar    DWORD PTR [ebp+0x7d793df9],cl
  4061c7:	sar    DWORD PTR [ebp+0x7a],cl
  4061ca:	sub    eax,0x77cbf1da
  4061cf:	in     al,dx
  4061d0:	fnstsw WORD PTR [edi+0xd7c7c23]
  4061d6:	jg     0x406254
  4061d8:	jl     0x40616e
  4061da:	out    dx,eax
  4061db:	xchg   esi,eax
  4061dc:	adc    eax,esi
  4061de:	pop    edx
  4061df:	aaa    
  4061e0:	mov    ch,0x84
  4061e2:	ret    
  4061e3:	(bad)  
  4061e4:	mov    edx,?
  4061e6:	shl    BYTE PTR ds:0x6cd72e4e,cl
  4061ec:	mov    WORD PTR [eax+0x45dbfed3],?
  4061f2:	ds dec edi
  4061f4:	cwde   
  4061f5:	mov    edx,0x707f31a1
  4061fa:	lods   al,BYTE PTR ds:[esi]
  4061fb:	hlt    
  4061fc:	repz int 0xc3
  4061ff:	add    esi,DWORD PTR [ebp-0xe8ff9c6]
  406205:	xor    eax,0xe8e1d821
  40620a:	mov    bl,0x7c
  40620c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40620d:	cmc    
  40620e:	add    ebx,0xffffffb4
  406211:	pop    edi
  406212:	sti    
  406213:	into   
  406214:	xchg   BYTE PTR [ebx],bh
  406216:	adc    al,0xa2
  406218:	dec    ecx
  406219:	clc    
  40621a:	imul   ebx,DWORD PTR [edi+0x68],0xa1a67aab
  406221:	int    0x3b
  406223:	mul    DWORD PTR [esp+edx*8]
  406226:	call   0x30a5:0xdeb6bac2
  40622d:	aaa    
  40622e:	in     eax,0x6e
  406230:	adc    eax,0xd558c8e4
  406235:	daa    
  406236:	rcr    dh,1
  406238:	test   cl,0xb
  40623b:	lahf   
  40623c:	and    ah,BYTE PTR [eax]
  40623e:	in     al,dx
  40623f:	jo     0x40629d
  406241:	xchg   DWORD PTR [ecx+0x72],ebp
  406244:	jb     0x40621b
  406246:	jno    0x406286
  406248:	retf   0x8994
  40624b:	mov    WORD PTR [ecx+0x52],es
  40624e:	or     eax,0xd07e9f11
  406253:	test   al,0xbc
  406255:	cmp    al,0x4c
  406258:	push   esp
  406259:	sahf   
  40625a:	(bad)  
  40625b:	adc    eax,0xe9a4c90f
  406260:	sti    
  406261:	pusha  
  406262:	xor    eax,0xb62510cd
  406267:	cdq    
  406268:	out    0x9a,al
  40626a:	sbb    eax,0x23e76b26
  40626f:	cmp    al,0x3c
  406271:	push   0xffffffba
  406273:	adc    al,0x55
  406275:	js     0x40627f
  406277:	inc    ebx
  406278:	leave  
  406279:	pop    ss
  40627a:	ss cli 
  40627c:	sahf   
  40627d:	pop    ebx
  40627e:	ja     0x406221
  406280:	adc    al,0xd8
  406282:	dec    esp
  406283:	mov    edx,0x3ede51ce
  406288:	mov    ebx,0x4bb1fc55
  40628d:	xchg   esi,eax
  40628e:	xor    BYTE PTR [eax+0xd],0x2e
  406292:	xor    al,0xf0
  406294:	lahf   
  406295:	retf   
  406296:	and    BYTE PTR [esi-0x7f],0x3f
  40629a:	mov    bh,0xea
  40629c:	jecxz  0x406220
  40629e:	xchg   ebx,eax
  40629f:	das    
  4062a0:	popa   
  4062a1:	cmp    eax,0x720bec03
  4062a6:	scas   al,BYTE PTR es:[edi]
  4062a7:	mov    WORD PTR [ecx+ebp*8+0x78],ds
  4062ab:	out    dx,al
  4062ac:	cli    
  4062ad:	ds ret 0xbfe0
  4062b1:	pop    eax
  4062b2:	sbb    eax,0x6d478104
  4062b7:	pop    edx
  4062b8:	cmp    dh,BYTE PTR [edx-0x7de3ac8a]
  4062be:	xor    BYTE PTR [edx-0x43d0f60],dl
  4062c4:	or     esi,DWORD PTR ds:0x19715249
  4062ca:	add    eax,0xfce9ed83
  4062cf:	dec    ecx
  4062d0:	nop
  4062d1:	mov    ah,0x2f
  4062d3:	ins    DWORD PTR es:[edi],dx
  4062d4:	sbb    ecx,DWORD PTR [edx]
  4062d6:	xchg   BYTE PTR [ecx],ch
  4062d8:	mov    cs,WORD PTR [esi-0x1]
  4062db:	out    dx,al
  4062dc:	cwde   
  4062dd:	jnp    0x406326
  4062df:	inc    ebp
  4062e0:	imul   edx,DWORD PTR [esi],0x6a21f22
  4062e6:	sub    ah,BYTE PTR [ebx]
  4062e8:	push   eax
  4062e9:	lea    eax,[ebp-0x78]
  4062ec:	add    DWORD PTR ds:0x445368,0x445370
  4062f6:	push   eax
  4062f7:	or     DWORD PTR ds:0x43fbfc,0x413b4e
  406301:	push   DWORD PTR [ebp-0xc]
  406304:	add    DWORD PTR ds:0x4427a4,0x413b56
  40630e:	jmp    0x40643a
  406313:	push   edx
  406314:	repz fist WORD PTR [ebp-0x4cadaa2f]
  40631b:	adc    DWORD PTR [esi+0x113730af],esp
  406321:	mov    ?,WORD PTR [ecx+0x4c]
  406324:	and    bh,BYTE PTR [esp+edi*2+0xd]
  406328:	jg     0x4063a6
  40632a:	jl     0x406361
  40632c:	sbb    eax,0x667c1669
  406331:	and    eax,0x53354a64
  406336:	jmp    0x844b:0x8d220bad
  40633d:	sbb    al,0x89
  40633f:	add    edi,DWORD PTR [ecx+0x56]
  406342:	ret    
  406343:	sub    edi,DWORD PTR [esi]
  406345:	daa    
  406346:	loop   0x406347
  406348:	inc    esi
  406349:	mov    dl,0xb7
  40634b:	jo     0x40630c
  40634d:	cld    
  40634e:	mov    ds:0x76cb61fb,al
  406353:	jae    0x4062da
  406355:	cli    
  406356:	dec    eax
  406357:	ja     0x406366
  406359:	mov    BYTE PTR [edx],dl
  40635b:	test   DWORD PTR gs:[eax],esi
  40635e:	mov    ebp,0xcc6eebd0
  406363:	xchg   esi,eax
  406364:	inc    ebp
  406365:	jnp    0x406393
  406367:	mov    eax,0x8e1956c6
  40636c:	out    dx,eax
  40636d:	sub    esi,edx
  40636f:	lods   eax,DWORD PTR ds:[esi]
  406370:	inc    eax
  406371:	fisubr WORD PTR [edi+ebp*8+0xc]
  406375:	mov    ah,0x9e
  406377:	and    eax,0xaa16ec24
  40637c:	cmp    ah,dl
  40637e:	in     al,0x3c
  406380:	dec    edi
  406381:	or     eax,0x83025427
  406386:	jle    0x4063f6
  406388:	dec    ebp
  406389:	add    al,0xf0
  40638b:	popa   
  40638c:	dec    ebp
  40638d:	cmp    eax,0xe2651003
  406392:	jecxz  0x4063c4
  406394:	daa    
  406395:	cdq    
  406396:	in     al,dx
  406397:	cs pop ecx
  406399:	out    dx,al
  40639a:	popa   
  40639b:	es mov al,0x15
  40639e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40639f:	inc    ecx
  4063a0:	pop    eax
  4063a1:	out    0x3e,al
  4063a3:	sahf   
  4063a4:	enter  0x1535,0x59
  4063a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063a9:	and    ah,BYTE PTR [ecx-0x12]
  4063ac:	rcl    BYTE PTR [edx+eax*1-0x68],0x59
  4063b1:	pop    ss
  4063b2:	sti    
  4063b3:	mov    eax,0x3c57bfde
  4063b8:	cdq    
  4063b9:	xor    DWORD PTR [ebx],edx
  4063bb:	fsubr  st(1),st
  4063bd:	lahf   
  4063be:	add    dh,ah
  4063c0:	test   BYTE PTR [esp+eax*4],cl
  4063c3:	fcom   DWORD PTR [ecx+0x661859e2]
  4063c9:	mov    ebp,0xc303b42c
  4063ce:	inc    ecx
  4063cf:	and    ecx,esp
  4063d1:	repz xchg ebp,eax
  4063d3:	jo     0x406449
  4063d5:	add    eax,0x664eafeb
  4063da:	xor    al,0xb7
  4063dc:	cmp    DWORD PTR [ebp+ebp*2-0x409f80b0],edx
  4063e3:	xlat   BYTE PTR ds:[ebx]
  4063e4:	or     esp,DWORD PTR [edi-0x4db5e990]
  4063ea:	dec    ebp
  4063eb:	xor    BYTE PTR ds:0x637b5b84,ch
  4063f1:	push   es
  4063f2:	bnd je 0x406426
  4063f5:	loopne 0x40641d
  4063f7:	arpl   dx,sp
  4063f9:	sti    
  4063fa:	inc    ebx
  4063fb:	xor    esi,DWORD PTR [edx-0x860cbf6]
  406401:	jmp    0x9375e609
  406406:	mov    eax,ds:0x42676849
  40640b:	sbb    ecx,DWORD PTR [ebx+ebx*4-0x64557ff]
  406412:	in     eax,dx
  406413:	lods   eax,DWORD PTR ds:[esi]
  406414:	in     eax,0x6b
  406416:	mov    ecx,0xb8e04c
  40641b:	mov    ebp,0x39f764b5
  406420:	test   eax,0x89b12ec1
  406425:	push   ebp
  406426:	mov    bh,0x8e
  406428:	mov    fs,WORD PTR [ebx+esi*1+0xb]
  40642c:	nop
  40642d:	mov    ch,0x77
  40642f:	mov    cl,0x96
  406431:	shl    BYTE PTR gs:[ecx+0x3e7e982c],0xc7
  406439:	pop    es
  40643a:	push   DWORD PTR [ebp-0x14]
  40643d:	jmp    0x406569
  406442:	xchg   BYTE PTR [edi-0x29ad99e],ah
  406448:	pop    edx
  406449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40644a:	inc    eax
  40644b:	adc    al,0x79
  40644d:	sub    al,0x5f
  40644f:	jnp    0x406436
  406451:	test   BYTE PTR [ebp+0x25],bl
  406454:	jl     0x4064d2
  406456:	or     eax,0xa67c7c7f
  40645b:	mov    esp,0x59a74244
  406460:	loopne 0x40644e
  406462:	outs   dx,BYTE PTR ds:[esi]
  406463:	push   0xb16865cb
  406468:	adc    ecx,esp
  40646a:	sbb    eax,0x4d499884
  40646f:	mov    esi,0x6e78b27f
  406474:	inc    edi
  406475:	sub    bh,BYTE PTR [ebx+0x5]
  406478:	or     ebx,ebp
  40647a:	or     eax,0x9c0839e4
  40647f:	mov    bh,dl
  406481:	stos   DWORD PTR es:[edi],eax
  406482:	stos   DWORD PTR es:[edi],eax
  406483:	xor    eax,edi
  406485:	rcr    DWORD PTR [ecx-0x348a13f5],0xe6
  40648c:	xchg   BYTE PTR [ecx-0x52],cl
  40648f:	ret    
  406490:	fwait
  406491:	pop    es
  406492:	adc    BYTE PTR [ebp+edi*4-0x542cfddf],0xc6
  40649a:	xor    eax,0xf5636cb7
  40649f:	xchg   ebx,eax
  4064a0:	(bad)  
  4064a2:	xchg   ebp,eax
  4064a3:	mov    eax,ds:0xfdb3a191
  4064a8:	mov    ebp,DWORD PTR [esi]
  4064aa:	mov    edi,0xd12e4a73
  4064af:	add    ah,cl
  4064b1:	aad    0x1
  4064b3:	stos   DWORD PTR es:[edi],eax
  4064b4:	inc    BYTE PTR [eax+esi*4+0x68c3b4b1]
  4064bb:	cmp    al,0xf6
  4064bd:	mov    bl,0x32
  4064bf:	add    BYTE PTR [esi],cl
  4064c1:	mov    cl,0x10
  4064c3:	cmp    edi,DWORD PTR [ebx-0x51c8a0f2]
  4064c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064ca:	or     eax,0x51015df7
  4064cf:	jno    0x406519
  4064d1:	add    BYTE PTR [edi],al
  4064d3:	scas   ax,WORD PTR es:[edi]
  4064d5:	inc    esp
  4064d6:	push   ecx
  4064d7:	call   0xea2f1560
  4064dc:	pop    ss
  4064dd:	xchg   ecx,eax
  4064de:	dec    esi
  4064df:	lods   al,BYTE PTR ds:[esi]
  4064e0:	adc    al,BYTE PTR [edx]
  4064e2:	jno    0x4064ab
  4064e4:	inc    eax
  4064e5:	pop    edx
  4064e6:	out    0x8b,al
  4064e8:	adc    al,0x1a
  4064ea:	gs aam 0x9
  4064ed:	retf   0x1eff
  4064f0:	inc    ebp
  4064f1:	inc    esi
  4064f2:	mov    bh,BYTE PTR [esi-0x5]
  4064f5:	neg    BYTE PTR [edx]
  4064f7:	sbb    al,0x79
  4064f9:	add    ebx,0x4a
  4064fc:	pop    ebp
  4064fd:	mov    cl,0x65
  4064ff:	rcr    esp,cl
  406501:	scas   eax,DWORD PTR es:[edi]
  406502:	jne    0x40656a
  406504:	xor    BYTE PTR [esi],dh
  406506:	repz test al,0x9d
  406509:	loop   0x406566
  40650b:	pop    es
  40650c:	xor    al,0x30
  40650e:	scas   eax,DWORD PTR es:[edi]
  40650f:	ins    BYTE PTR es:[edi],dx
  406510:	inc    eax
  406511:	adc    DWORD PTR [edi],ebx
  406513:	scas   al,BYTE PTR es:[edi]
  406514:	cli    
  406515:	jb     0x40652c
  406517:	(bad)  
  406519:	imul   esp,DWORD PTR [eax+0x16],0x1ea216b1
  406520:	repz in eax,0xd3
  406523:	ds inc edi
  406525:	and    ebp,DWORD PTR [ecx-0x2cd923d5]
  40652b:	mov    edx,0x53a59304
  406530:	adc    DWORD PTR [ecx-0x66],0x6b
  406534:	repz sub esi,DWORD PTR [esi-0x51]
  406538:	and    al,0x60
  40653a:	aaa    
  40653b:	scas   eax,DWORD PTR es:[edi]
  40653c:	or     eax,0x9037f988
  406541:	loope  0x40650b
  406543:	lds    ebp,FWORD PTR [edx+ecx*8+0x7961ae17]
  40654a:	dec    ebx
  40654b:	mov    cs,WORD PTR [ecx-0x2]
  40654e:	cmp    bh,dh
  406550:	scas   al,BYTE PTR es:[edi]
  406551:	pop    ebp
  406552:	add    dl,ah
  406554:	rcr    DWORD PTR [esi+0x7a],0xcc
  406558:	aas    
  406559:	xor    al,0x6f
  40655b:	inc    edx
  40655c:	aaa    
  40655d:	out    dx,al
  40655e:	mov    bh,0xb7
  406560:	fwait
  406561:	jno    0x406591
  406563:	jnp    0x406500
  406565:	and    eax,0xe8bb822c
  40656a:	mov    dl,0xeb
  40656c:	(bad)  
  40656d:	inc    DWORD PTR [ebp-0x497bf040]
  406573:	add    eax,DWORD PTR [eax]
  406575:	add    BYTE PTR [ecx+0x4105db1d],al
  40657b:	add    ah,dh
  40657d:	sti    
  40657e:	inc    ebx
  40657f:	add    BYTE PTR [ebp-0x74af77bb],cl
  406585:	inc    ebp
  406586:	in     al,dx
  406587:	xor    eax,esi
  406589:	add    eax,edi
  40658b:	push   eax
  40658c:	mov    eax,DWORD PTR [ebp-0x10]
  40658f:	jmp    0x4066bb
  406594:	dec    edx
  406595:	add    bh,BYTE PTR [ebx]
  406597:	cmp    DWORD PTR [ebx-0x43],0x6a
  40659b:	fnsave [eax]
  40659d:	xchg   ebx,eax
  40659e:	mov    al,0xc5
  4065a0:	fstp   DWORD PTR [ebx+0x246a5bed]
  4065a6:	jl     0x406624
  4065a8:	or     eax,0xb07c7c7f
  4065ad:	fcomp  st(3)
  4065af:	out    0x9d,al
  4065b1:	mov    edx,ebp
  4065b3:	aam    0xd5
  4065b5:	sub    edx,DWORD PTR [ebx+0x44]
  4065b8:	pop    esi
  4065b9:	popf   
  4065ba:	fmul   st(7),st
  4065bc:	mov    cs:0xef399ff1,al
  4065c2:	fidivr DWORD PTR ds:0x417962e
  4065c8:	mov    esp,0x26b8736b
  4065cd:	sub    DWORD PTR [ebp+0x4d],edx
  4065d0:	addr16 int3 
  4065d2:	fst    DWORD PTR [ecx-0x7eae56e2]
  4065d8:	xchg   edx,eax
  4065d9:	test   BYTE PTR [esi+0x2a60e1fb],bl
  4065df:	dec    edi
  4065e0:	sbb    DWORD PTR ds:0x4dfbaa66,edx
  4065e6:	xor    al,0xde
  4065e8:	cli    
  4065e9:	out    0x84,al
  4065eb:	push   0x42
  4065ed:	mov    al,ds:0x7d21e9a8
  4065f2:	in     eax,dx
  4065f3:	mov    ds:0x99f23489,al
  4065f8:	add    al,0xdc
  4065fa:	lods   al,BYTE PTR ds:[esi]
  4065fb:	in     eax,dx
  4065fc:	add    BYTE PTR [ebp+eiz*8+0x28],ch
  406600:	rcr    DWORD PTR [esi-0x137efa9e],1
  406606:	push   esp
  406607:	xor    al,0xf
  406609:	inc    ebp
  40660a:	(bad)  
  40660b:	pop    esp
  40660c:	sub    eax,0xd79aecf8
  406611:	out    0x8c,eax
  406613:	fprem  
  406615:	pop    ecx
  406616:	je     0x4065cf
  406618:	js     0x406631
  40661a:	dec    ebp
  40661b:	pop    ebx
  40661c:	(bad)  
  40661d:	cmc    
  40661e:	adc    DWORD PTR [eax-0x53f0811d],ecx
  406624:	loope  0x4065c3
  406626:	pop    eax
  406627:	sahf   
  406628:	dec    ebx
  406629:	aas    
  40662a:	mov    bl,0x70
  40662c:	imul   esi,DWORD PTR [edx+0x4a2ad0a5],0xffffff9e
  406633:	cs sbb ch,0x15
  406637:	and    BYTE PTR [edx-0x21309757],ah
  40663d:	dec    edi
  40663e:	imul   ecx,DWORD PTR [bx+di+0x122e],0x8949189b
  406647:	repnz mov ebp,0x5640cdba
  40664d:	cwde   
  40664e:	xor    BYTE PTR [edi-0x5f],bh
  406651:	xchg   BYTE PTR [eax],dl
  406653:	jl     0x406643
  406655:	fadd   QWORD PTR ds:[edx+0x98a3e44]
  40665c:	sub    esp,0xffffff99
  40665f:	xchg   cl,bl
  406661:	cs std 
  406663:	dec    eax
  406664:	dec    esp
  406665:	xchg   ecx,eax
  406666:	stos   DWORD PTR es:[edi],eax
  406667:	sub    dl,al
  406669:	mov    esi,0x7ab0e637
  40666e:	add    BYTE PTR [ebp+0x54a2fd3c],cl
  406674:	cwde   
  406675:	cmp    al,0x98
  406677:	sub    al,0x50
  406679:	fs jo  0x406630
  40667c:	dec    eax
  40667d:	mov    esi,0xbabe1db3
  406682:	cmp    cl,BYTE PTR [ebx-0x33ccd60b]
  406688:	inc    esp
  406689:	sub    al,0x43
  40668b:	loopne 0x406695
  40668d:	mov    al,0xb3
  40668f:	bnd call 0xe00c0d54
  406695:	stos   BYTE PTR es:[edi],al
  406696:	cmc    
  406697:	push   ebx
  406698:	repnz sar edi,cl
  40669b:	mov    ebx,0x2029761a
  4066a0:	add    esi,DWORD PTR [edx]
  4066a2:	out    dx,al
  4066a3:	jnp    0x4066ad
  4066a5:	scas   al,BYTE PTR es:[edi]
  4066a6:	cmc    
  4066a7:	mov    dl,BYTE PTR [ecx+ebx*8+0x1ff33188]
  4066ae:	push   0xffffffc8
  4066b0:	xchg   esp,eax
  4066b1:	imul   edi,DWORD PTR [edx+ebx*1],0xffffffbd
  4066b5:	dec    ebx
  4066b6:	adc    al,0x4e
  4066b8:	xchg   edx,eax
  4066b9:	dec    ebx
  4066ba:	in     eax,dx
  4066bb:	add    eax,0xaa
  4066c0:	push   eax
  4066c1:	jmp    0x4067ed
  4066c6:	sub    ecx,DWORD PTR [esi+ecx*8-0xc]
  4066ca:	jge    0x4066c2
  4066cc:	jge    0x406731
  4066ce:	fnstenv [edi-0x237bb590]
  4066d4:	jne    0x4066ae
  4066d6:	jnp    0x4066ff
  4066d8:	jl     0x406756
  4066da:	or     eax,0x2d7c7c7f
  4066df:	leave  
  4066e0:	loope  0x406676
  4066e2:	xchg   ecx,eax
  4066e3:	int3   
  4066e4:	push   eax
  4066e5:	fdiv   DWORD PTR [ecx]
  4066e7:	(bad)  
  4066e8:	arpl   WORD PTR [ecx-0x4f824a6a],dx
  4066ee:	jl     0x406726
  4066f0:	mov    cl,0xea
  4066f2:	jle    0x4066d3
  4066f4:	outs   dx,BYTE PTR ds:[esi]
  4066f5:	(bad)  
  4066f6:	popa   
  4066f7:	xchg   esp,eax
  4066f8:	mov    eax,ds:0xafcd1f09
  4066fd:	rcr    BYTE PTR [eax],0xa
  406700:	xchg   ebx,eax
  406701:	test   eax,0xe471f20c
  406706:	mul    dl
  406708:	xor    dh,BYTE PTR [ebx+0x6b]
  40670b:	xchg   eax,ecx
  40670d:	add    al,0x1e
  406710:	inc    ebx
  406711:	inc    edi
  406712:	ja     0x40674f
  406714:	or     al,0xa7
  406716:	ins    BYTE PTR es:[edi],dx
  406717:	mov    ch,0xf2
  406719:	or     ecx,DWORD PTR [eax*8-0x2cf7139a]
  406720:	cmp    DWORD PTR [ebp+0x32b3f2b2],ebx
  406726:	pop    ebx
  406727:	fs jo  0x40675d
  40672a:	into   
  40672b:	xor    ah,BYTE PTR [ebp-0x680d96b9]
  406731:	xchg   eax,ecx
  406733:	mov    cl,0xbe
  406735:	mov    ecx,0xb7fc0ac5
  40673a:	(bad)  
  40673b:	daa    
  40673c:	repz jns 0x40678a
  40673f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406740:	mov    bl,0xb2
  406742:	arpl   WORD PTR [edx],dx
  406744:	mov    ebx,0xb67650af
  406749:	jbe    0x406714
  40674b:	stc    
  40674c:	pop    es
  40674d:	test   BYTE PTR [ebx+0x321c344],0xd7
  406754:	mov    ch,0xa
  406756:	xchg   esp,eax
  406757:	dec    ebx
  406758:	add    DWORD PTR ds:0xa352b356,eax
  40675e:	add    ebp,DWORD PTR [edi]
  406760:	mov    ds:0x36490855,eax
  406765:	mov    esp,DWORD PTR [edi-0x3d15659]
  40676b:	enter  0x676,0xe6
  40676f:	sub    dl,BYTE PTR [ecx]
  406771:	lock mov esi,0xc81d1036
  406777:	mov    DWORD PTR [edi+0x52048572],ecx
  40677d:	push   es
  40677e:	xchg   bl,ah
  406780:	std    
  406781:	mov    eax,gs
  406783:	push   esp
  406784:	add    edx,ecx
  406786:	test   al,0xe0
  406788:	xchg   ebp,eax
  406789:	jb     0x40677d
  40678b:	es ins BYTE PTR es:[edi],dx
  40678d:	(bad)  
  40678e:	retf   0x72e4
  406791:	add    DWORD PTR [edx-0x737cf94b],esp
  406797:	nop
  406798:	idiv   BYTE PTR [esi]
  40679a:	or     DWORD PTR es:[edi],eax
  40679d:	sub    BYTE PTR es:[ebx],bh
  4067a0:	in     eax,0x78
  4067a2:	mov    DWORD PTR [ecx-0x2821839c],0x14f4bab5
  4067ac:	cmp    DWORD PTR [ebx],0xea8b9b46
  4067b2:	cmp    esi,DWORD PTR [ebx+eiz*1-0x7c]
  4067b6:	push   0xfc19cd5d
  4067bb:	scas   eax,DWORD PTR es:[edi]
  4067bc:	(bad)  
  4067bd:	leave  
  4067be:	out    dx,al
  4067bf:	addr16 push ss
  4067c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067c2:	dec    esi
  4067c3:	jb     0x4067c9
  4067c5:	xchg   ecx,eax
  4067c6:	sbb    BYTE PTR [ecx-0x4c4363],dl
  4067cc:	cdq    
  4067cd:	sbb    eax,0x49fd4583
  4067d2:	outs   dx,BYTE PTR ds:[esi]
  4067d3:	mov    al,ds:0x9d1051a0
  4067d8:	bound  esi,QWORD PTR [ecx-0x79]
  4067db:	scas   eax,DWORD PTR es:[edi]
  4067dc:	outs   dx,DWORD PTR ds:[esi]
  4067dd:	int3   
  4067de:	das    
  4067df:	push   cs
  4067e0:	jle    0x406829
  4067e2:	ins    DWORD PTR es:[edi],dx
  4067e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067e4:	icebp  
  4067e5:	pop    ebx
  4067e6:	jbe    0x406780
  4067e8:	mulps  xmm0,xmm4
  4067eb:	out    0x9f,eax
  4067ed:	mov    eax,DWORD PTR [ebp-0x10]
  4067f0:	mov    eax,DWORD PTR [eax+0x198]
  4067f6:	jmp    0x406922
  4067fb:	shr    ecx,cl
  4067fd:	dec    esp
  4067fe:	pop    esi
  4067ff:	pop    edx
  406800:	jns    0x4067e7
  406802:	ins    DWORD PTR es:[edi],dx
  406803:	adc    eax,0xa2a54fb4
  406808:	or     BYTE PTR [ebx+0x1e],ch
  40680b:	or     BYTE PTR [ecx],bh
  40680d:	jl     0x40688b
  40680f:	or     eax,0x827c7c7f
  406814:	mov    ebx,0x496c1196
  406819:	mov    ds:0xfd6a3913,al
  40681e:	push   0x2d5d263e
  406823:	and    al,0x5c
  406825:	std    
  406826:	jmp    0x93889504
  40682b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40682c:	daa    
  40682d:	mov    ebx,DWORD PTR cs:[edi+ebp*8+0x6c2c2c7e]
  406835:	loop   0x406800
  406837:	cdq    
  406838:	sbb    DWORD PTR [ebx-0x6dc311f2],eax
  40683e:	mov    WORD PTR [ebp-0x2b5c6eed],ss
  406844:	addr16 das 
  406846:	pop    es
  406847:	shl    ecx,cl
  406849:	xlat   BYTE PTR ds:[ebx]
  40684a:	pop    esi
  40684b:	in     al,dx
  40684c:	std    
  40684d:	pop    esi
  40684e:	xrelease xchg BYTE PTR [edi+0x66],dl
  406852:	popa   
  406853:	xor    dh,BYTE PTR [edi+0x15]
  406856:	pushf  
  406857:	cmp    DWORD PTR [edx],esp
  406859:	inc    ecx
  40685a:	inc    ebx
  40685b:	aaa    
  40685c:	sub    BYTE PTR [eax+0x2dea7262],dh
  406862:	mov    edx,DWORD PTR [edi-0x5e848af]
  406868:	out    0x46,al
  40686a:	xchg   esi,eax
  40686b:	stos   DWORD PTR es:[edi],eax
  40686c:	fcmove st,st(6)
  40686e:	pop    ss
  40686f:	xor    ebp,edi
  406871:	jns    0x406893
  406873:	dec    edx
  406874:	or     eax,edx
  406876:	pop    edi
  406877:	out    dx,eax
  406878:	xor    esi,edx
  40687a:	cwde   
  40687b:	mov    dl,0x1
  40687d:	mov    al,0xce
  40687f:	cs inc ecx
  406881:	mov    dl,0xe7
  406883:	repz cmp DWORD PTR [eax+0x3d],0xffffff86
  406888:	push   eax
  406889:	(bad)  
  40688b:	imul   esi,eax,0x51741c8c
  406891:	jl     0x4068cb
  406893:	and    eax,0xc863fd0a
  406898:	stc    
  406899:	pop    ecx
  40689a:	sbb    al,0x9d
  40689c:	(bad)  
  40689d:	jl     0x406840
  40689f:	xor    eax,0x9a69a213
  4068a4:	in     eax,dx
  4068a5:	xor    DWORD PTR [esi],ecx
  4068a7:	xchg   ebx,eax
  4068a8:	outs   dx,DWORD PTR ds:[esi]
  4068a9:	xchg   esp,eax
  4068aa:	or     BYTE PTR [edx+0x7d],ah
  4068ad:	and    DWORD PTR [ecx+0x2c],esi
  4068b0:	mov    ds:0xa035abea,al
  4068b5:	dec    ebx
  4068b6:	adc    edx,edi
  4068b8:	inc    edx
  4068b9:	xchg   esp,eax
  4068ba:	adc    eax,0x1ed01775
  4068bf:	js     0x406904
  4068c1:	inc    ebp
  4068c2:	in     al,0x2f
  4068c4:	nop
  4068c5:	xchg   ebp,eax
  4068c6:	nop
  4068c7:	pop    ebp
  4068c8:	(bad)  
  4068c9:	fisub  DWORD PTR [ebx-0x8]
  4068cc:	loop   0x40693b
  4068ce:	dec    ebp
  4068cf:	arpl   WORD PTR [eax-0x203564ed],ax
  4068d5:	xchg   ebx,eax
  4068d6:	jb     0x406951
  4068d8:	inc    edx
  4068d9:	add    dh,BYTE PTR [ebp-0x30e96030]
  4068df:	xchg   esp,eax
  4068e0:	cmp    BYTE PTR [edx+0x2d],al
  4068e3:	xchg   edi,eax
  4068e4:	stos   DWORD PTR es:[edi],eax
  4068e5:	mov    edx,0x3d2c2cb7
  4068ea:	loop   0x4068ed
  4068ec:	into   
  4068ed:	test   bh,cl
  4068ef:	inc    edi
  4068f0:	rol    ecx,1
  4068f2:	and    eax,0x25da9617
  4068f7:	enter  0xfe88,0x53
  4068fb:	inc    esi
  4068fc:	inc    edi
  4068fd:	repnz xlat BYTE PTR ds:[ebx]
  4068ff:	and    eax,0x10c85148
  406904:	inc    edx
  406905:	mov    ds:0xa80d7b72,al
  40690a:	xor    DWORD PTR [eax],edi
  40690c:	sbb    cl,BYTE PTR [ebx]
  40690e:	scas   eax,DWORD PTR es:[edi]
  40690f:	sub    ebx,DWORD PTR [esi-0x3528fc3]
  406915:	(bad)  
  406916:	(bad)  
  406917:	xor    DWORD PTR [ebx-0x47],edi
  40691a:	or     DWORD PTR [edi-0x63],0xf038000c
  406921:	in     eax,0xff
  406923:	xor    al,ch
  406925:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406927:	(bad)  
  406928:	dec    DWORD PTR [ecx+0x7d83f845]
  40692e:	clc    
  40692f:	add    BYTE PTR [ebp+0x45890445],cl
  406935:	loopne 0x406946
  406937:	test   BYTE PTR [edx-0x72fffffa],bl
  40693d:	inc    ebp
  40693e:	call   0xd485f493
  406943:	xor    eax,esi
  406945:	add    eax,edi
  406947:	push   eax
  406948:	mov    eax,DWORD PTR [ebp-0x1c]
  40694b:	xor    eax,esi
  40694d:	add    eax,edi
  40694f:	push   eax
  406950:	push   DWORD PTR [ebp-0x8]
  406953:	lea    eax,[ebp-0x78]
  406956:	push   eax
  406957:	push   DWORD PTR [ebp-0xc]
  40695a:	push   DWORD PTR [ebp-0x14]
  40695d:	call   0x4055ae
  406962:	test   eax,eax
  406964:	je     0x406abb
  40696a:	lea    eax,[ebp-0x78]
  40696d:	push   eax
  40696e:	mov    eax,DWORD PTR [ebp-0x14]
  406971:	xor    eax,esi
  406973:	add    eax,edi
  406975:	push   eax
  406976:	mov    eax,DWORD PTR [ebp-0x10]
  406979:	add    eax,0xee
  40697e:	push   eax
  40697f:	mov    eax,DWORD PTR [ebp-0x10]
  406982:	mov    eax,DWORD PTR [eax+0x198]
  406988:	push   DWORD PTR [eax]
  40698a:	jmp    0x406ab6
  40698f:	xor    BYTE PTR [ecx-0x12922c70],ch
  406995:	mov    bl,0xa9
  406997:	and    BYTE PTR [esi+eax*2-0x22],ch
  40699b:	push   ecx
  40699c:	repnz iret 
  40699e:	ja     0x4069b9
  4069a0:	cmp    BYTE PTR [esp+edi*2+0xd],bh
  4069a4:	jg     0x406a22
  4069a6:	jl     0x4069a4
  4069a8:	lock ds in al,0x8a
  4069ac:	shl    DWORD PTR [ecx],cl
  4069ae:	(bad)  
  4069af:	sub    al,0xfe
  4069b1:	adc    eax,0xa1fc165e
  4069b6:	add    BYTE PTR [ebx],0x55
  4069b9:	and    eax,0x3feef064
  4069be:	add    DWORD PTR [edx],eax
  4069c0:	jo     0x406972
  4069c2:	je     0x406a3a
  4069c4:	mov    bl,0x5b
  4069c6:	adc    edi,DWORD PTR [esi]
  4069c8:	cwde   
  4069c9:	mov    ebp,0x1137fd7f
  4069ce:	daa    
  4069cf:	add    BYTE PTR [edx+0x3],cl
  4069d2:	data16 cmp BYTE PTR [eax],0xce
  4069d6:	not    al
  4069d8:	push   esp
  4069d9:	mov    bh,0x98
  4069db:	(bad)  
  4069dc:	mov    ah,dh
  4069de:	push   ecx
  4069df:	fdiv   QWORD PTR [edx-0x7a39faf6]
  4069e5:	add    al,0x3a
  4069e7:	jnp    0x4069f1
  4069e9:	ins    BYTE PTR es:[edi],dx
  4069ea:	dec    ecx
  4069eb:	and    al,0x29
  4069ed:	cmp    edx,esi
  4069ef:	push   es
  4069f0:	sbb    DWORD PTR [ebp+0x6c053673],esp
  4069f6:	push   DWORD PTR [esi+edi*2-0x6c]
  4069fa:	stos   DWORD PTR es:[edi],eax
  4069fb:	outs   dx,DWORD PTR fs:[esi]
  4069fd:	mov    al,ds:0x533437af
  406a02:	or     DWORD PTR [ebp+edx*1+0x1d],ecx
  406a06:	sub    BYTE PTR [edx],dh
  406a08:	call   0x929c:0x9197551f
  406a0f:	aas    
  406a10:	dec    esi
  406a11:	lods   al,BYTE PTR ds:[esi]
  406a12:	inc    esp
  406a13:	cmc    
  406a14:	repz out dx,al
  406a16:	adc    bh,ch
  406a18:	imul   ebp,DWORD PTR [esi+0x47],0x76
  406a1c:	ret    0xf05f
  406a1f:	mov    dh,0xc0
  406a21:	loopne 0x406a5a
  406a23:	push   edx
  406a24:	inc    esi
  406a25:	sub    DWORD PTR [ebx-0x6c],ecx
  406a28:	(bad)  
  406a29:	or     DWORD PTR ds:[edx],0x14
  406a2d:	imul   esp,esp,0x40
  406a30:	sbb    BYTE PTR [ebp+0x8],cl
  406a33:	test   BYTE PTR [edi-0x6ae943c9],0x1
  406a3a:	ins    BYTE PTR es:[edi],dx
  406a3b:	mov    ecx,0xb39264ac
  406a40:	mov    al,ds:0x800e9477
  406a45:	fisttp DWORD PTR [ecx+0x1f8bd652]
  406a4b:	fsub   DWORD PTR [ebx-0x3f]
  406a4e:	lods   eax,DWORD PTR ds:[esi]
  406a4f:	lock outs dx,BYTE PTR ds:[esi]
  406a51:	ja     0x406a89
  406a53:	ficom  WORD PTR [edi]
  406a55:	test   edi,0xca85a25b
  406a5b:	inc    ecx
  406a5c:	loopne 0x4069f8
  406a5e:	push   ss
  406a5f:	add    ah,bl
  406a61:	jg     0x406ab9
  406a63:	lods   al,BYTE PTR ds:[esi]
  406a64:	dec    esi
  406a65:	dec    ebp
  406a66:	test   dl,ah
  406a68:	jge    0x406a8b
  406a6a:	dec    ecx
  406a6b:	or     ecx,DWORD PTR [ebx]
  406a6d:	je     0x406aa2
  406a6f:	mov    esp,0x4a9ed64
  406a74:	cwde   
  406a75:	jmp    0x406a93
  406a77:	fucom  st(4)
  406a79:	or     cl,BYTE PTR [esi]
  406a7b:	ret    0x6484
  406a7e:	(bad)  
  406a7f:	jg     0x406ae7
  406a81:	lds    ebx,FWORD PTR ds:0x87f5284a
  406a87:	push   ds
  406a88:	aaa    
  406a89:	xchg   esp,eax
  406a8a:	mov    BYTE PTR [esi*1+0x4f60cc84],ch
  406a91:	sbb    eax,0xc10d5325
  406a96:	and    al,0xc8
  406a98:	cld    
  406a99:	dec    esi
  406a9a:	data16 fsub DWORD PTR [ebp+0x40]
  406a9e:	push   es
  406a9f:	xor    DWORD PTR [eax],edi
  406aa1:	ja     0x406a32
  406aa3:	sub    eax,0x7f37348b
  406aa8:	add    ch,cl
  406aaa:	cmp    BYTE PTR [ebp+0x65],cl
  406aad:	fdiv   QWORD PTR [ecx-0x728d9e09]
  406ab3:	jl     0x406ac0
  406ab5:	mov    ch,al
  406ab7:	popa   
  406ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ab9:	(bad)  
  406aba:	dec    DWORD PTR [ebx-0x31cc1bb3]
  406ac0:	mov    eax,0xffcd8d62
  406ac5:	sub    eax,ecx
  406ac7:	jmp    0x406bf3
  406acc:	or     al,0x53
  406ace:	and    al,0x43
  406ad0:	jnp    0x406b2d
  406ad2:	jnp    0x406b27
  406ad4:	gs ins DWORD PTR es:[edi],dx
  406ad6:	push   esp
  406ad7:	and    al,ch
  406ad9:	add    bh,0x19
  406adc:	push   ss
  406add:	cmp    edi,DWORD PTR [esp+edi*2+0xd]
  406ae1:	jg     0x406b5f
  406ae3:	jl     0x406b56
  406ae5:	scas   eax,DWORD PTR es:[edi]
  406ae6:	mov    ebp,0x808a9359
  406aeb:	out    dx,eax
  406aec:	lock mov ds:0x24dd0023,eax
  406af2:	xor    DWORD PTR [edx+edi*4+0x734ea7d9],ebp
  406af9:	sub    al,0xe8
  406afb:	mov    dh,0x7c
  406afd:	loope  0x406b30
  406aff:	(bad)  
  406b00:	out    dx,al
  406b01:	cmc    
  406b02:	in     al,0x32
  406b04:	jmp    0x94e83bd3
  406b09:	cmp    BYTE PTR [ebp-0x3b],0xa1
  406b0d:	pop    esp
  406b0e:	call   0x562357
  406b13:	and    edi,DWORD PTR [edi+ebx*2+0x7a]
  406b17:	mov    WORD PTR [ecx],gs
  406b19:	aad    0xfc
  406b1b:	or     BYTE PTR [edx+0x7b],ch
  406b1e:	jo     0x406b6b
  406b20:	sahf   
  406b21:	stc    
  406b22:	xor    al,0x4e
  406b24:	adc    ch,BYTE PTR [esi+0x63]
  406b27:	push   ss
  406b28:	int3   
  406b29:	pop    es
  406b2a:	imul   eax,DWORD PTR [ebx+0x5940ba3f],0xab5f6faf
  406b34:	jge    0x406ac9
  406b36:	(bad)  
  406b37:	and    DWORD PTR [ebp-0x2f149806],esp
  406b3d:	aam    0xb6
  406b3f:	pop    edx
  406b40:	inc    ebp
  406b41:	int    0x1c
  406b43:	mul    dl
  406b45:	inc    ebx
  406b46:	loopne 0x406b2f
  406b48:	test   DWORD PTR [esi],edi
  406b4a:	jecxz  0x406ba8
  406b4c:	pop    ecx
  406b4d:	push   eax
  406b4e:	je     0x406b91
  406b50:	or     BYTE PTR [eax+0x287071ac],al
  406b56:	ret    
  406b57:	inc    esp
  406b58:	cs jno 0x406b81
  406b5b:	xor    DWORD PTR [eax-0x7deb9286],ebp
  406b61:	jnp    0x406b1a
  406b63:	push   eax
  406b64:	xor    BYTE PTR [eax+0x5b],al
  406b67:	dec    edi
  406b68:	aas    
  406b69:	lods   al,BYTE PTR ds:[esi]
  406b6a:	lods   eax,DWORD PTR ds:[esi]
  406b6b:	dec    edi
  406b6c:	loopne 0x406bc3
  406b6e:	cs test eax,0xb4badece
  406b74:	jno    0x406bac
  406b76:	rcl    DWORD PTR [esi+edi*4+0x71],0x33
  406b7b:	out    dx,eax
  406b7c:	mov    dh,0x39
  406b7e:	out    0x1d,al
  406b80:	push   ebx
  406b81:	and    DWORD PTR [eax-0x40],edx
  406b84:	(bad)  [ebp-0x2e60fd8e]
  406b8a:	pop    esi
  406b8b:	or     edx,0xafd59be4
  406b91:	add    al,0xb7
  406b93:	(bad)  
  406b95:	shl    DWORD PTR [edi],1
  406b97:	stc    
  406b98:	retf   
  406b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b9a:	pop    ds
  406b9b:	mov    esp,0xc1e9e86a
  406ba0:	cwde   
  406ba1:	add    DWORD PTR [esi-0x5f],ecx
  406ba4:	cmp    BYTE PTR [ecx+0x7d7025bb],0xc
  406bab:	stc    
  406bac:	push   0x66ab30d8
  406bb1:	mov    ?,WORD PTR [edx+0x4c9c816b]
  406bb7:	sub    BYTE PTR [ebx+edx*1],ah
  406bba:	retf   
  406bbb:	pop    edx
  406bbc:	adc    BYTE PTR [eax+0x2c0c7fdd],bl
  406bc2:	(bad)  
  406bc3:	(bad)  
  406bc4:	ror    esi,1
  406bc6:	inc    esi
  406bc7:	push   0x36e974d4
  406bcc:	add    bh,BYTE PTR [edx-0x16b08ad3]
  406bd2:	loop   0x406b56
  406bd4:	outs   dx,DWORD PTR ds:[esi]
  406bd5:	mov    cs,WORD PTR [eax-0x218e1795]
  406bdb:	fmul   st,st(7)
  406bdd:	int3   
  406bde:	stos   BYTE PTR es:[edi],al
  406bdf:	int    0x7e
  406be1:	jp     0x406c01
  406be3:	sbb    BYTE PTR [ebp+0xc],al
  406be6:	in     al,0x6d
  406be8:	jmp    0x406c01
  406bea:	ds jmp 0x406ba6
  406bed:	shl    BYTE PTR [ebx],0x6b
  406bf0:	ret    
  406bf1:	into   
  406bf2:	imul   BYTE PTR [ebx]
  406bf4:	inc    ebp
  406bf5:	clc    
  406bf6:	mov    ecx,DWORD PTR [ebp-0x30]
  406bf9:	add    ecx,eax
  406bfb:	jmp    0x406d27
  406c00:	xchg   ebp,eax
  406c01:	(bad)  
  406c02:	out    0x14,eax
  406c04:	std    
  406c05:	push   esp
  406c06:	gs popf 
  406c08:	repz mov al,ds:0x5d419e75
  406c0e:	cmp    eax,0x7c3a27dd
  406c13:	jl     0x406c22
  406c15:	jg     0x406c93
  406c17:	jl     0x406c7d
  406c19:	or     al,0xee
  406c1b:	into   
  406c1c:	sbb    eax,0x1c5749a1
  406c21:	std    
  406c22:	mov    eax,ds:0x3583e90a
  406c27:	mov    bl,0xdb
  406c29:	or     eax,0xa856273b
  406c2e:	xlat   BYTE PTR ds:[ebx]
  406c2f:	or     eax,0xdaf84cbf
  406c34:	push   ss
  406c35:	idiv   DWORD PTR [edi-0x4e]
  406c38:	push   esi
  406c39:	mov    eax,0xc6ce8fa
  406c3e:	and    eax,0xfc723087
  406c43:	js     0x406c41
  406c45:	mov    BYTE PTR [edx+0x7b976826],ch
  406c4b:	mov    es,WORD PTR [edi+0x342c89ca]
  406c51:	call   0xebb:0xa69c8334
  406c58:	ss cmp eax,0x4414165d
  406c5e:	sahf   
  406c5f:	pop    ss
  406c60:	dec    ebx
  406c61:	stos   DWORD PTR es:[edi],eax
  406c62:	cwde   
  406c63:	dec    ebx
  406c64:	jbe    0x406c91
  406c66:	js     0x406c81
  406c68:	dec    ecx
  406c69:	jns    0x406cd4
  406c6b:	adc    cl,bl
  406c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c6e:	inc    ebx
  406c6f:	add    eax,0x68cc8218
  406c74:	add    ecx,DWORD PTR [edi]
  406c76:	push   ds
  406c77:	jo     0x406c6e
  406c79:	xchg   ebx,eax
  406c7a:	dec    eax
  406c7b:	sbb    dl,al
  406c7d:	dec    ebp
  406c7e:	adc    al,0xff
  406c80:	xchg   ecx,eax
  406c81:	nop
  406c82:	add    BYTE PTR [ebp+0x3f361c17],0x2a
  406c89:	fcmovu st,st(2)
  406c8b:	pop    ebx
  406c8c:	and    esi,esp
  406c8e:	jnp    0x406c94
  406c90:	mov    cl,0x53
  406c92:	dec    ebx
  406c93:	outs   dx,BYTE PTR ds:[esi]
  406c94:	inc    esi
  406c95:	xchg   ebp,eax
  406c96:	fdivr  DWORD PTR [eax+0x71]
  406c99:	je     0x406d11
  406c9b:	pop    edx
  406c9c:	cmp    eax,DWORD PTR [edi]
  406c9e:	cwde   
  406c9f:	(bad)  
  406ca0:	mov    ss,WORD PTR [esi-0x57]
  406ca3:	sahf   
  406ca4:	bound  esp,QWORD PTR [edx+0x4cf63e43]
  406caa:	jl     0x406c3f
  406cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cad:	xchg   edi,eax
  406cae:	repnz mov bh,0xf1
  406cb1:	addr16 test eax,0xad41d546
  406cb7:	jl     0x406d0f
  406cb9:	fstp   DWORD PTR [ebx]
  406cbb:	mov    edi,0xe9a1cb1
  406cc0:	add    BYTE PTR [ebx+0x2809824b],dh
  406cc6:	pop    edi
  406cc7:	xchg   ebx,eax
  406cc8:	mov    cl,0xd4
  406cca:	icebp  
  406ccb:	jecxz  0x406d47
  406ccd:	lds    eax,FWORD PTR [eax+eax*4-0x76]
  406cd1:	xor    eax,0xeabc9bb0
  406cd6:	xor    esp,ecx
  406cd8:	call   0x5495568a
  406cdd:	dec    eax
  406cde:	dec    ebp
  406cdf:	jg     0x406d1a
  406ce1:	imul   ebp,DWORD PTR [edi+ebx*2-0x4e94bb2a],0xffffffd1
  406ce9:	test   DWORD PTR [edi],esp
  406ceb:	daa    
  406cec:	aam    0x4c
  406cee:	gs pushf 
  406cf0:	adc    ecx,0xd
  406cf3:	dec    ebp
  406cf4:	(bad)  
  406cf5:	mov    esp,edi
  406cf7:	cmc    
  406cf8:	and    DWORD PTR [edi-0x1895f895],esp
  406cfe:	ja     0x406cec
  406d00:	lods   al,BYTE PTR ds:[esi]
  406d01:	sbb    esi,edx
  406d03:	js     0x406cd4
  406d05:	bound  ecx,QWORD PTR [ebx-0x34dca9c0]
  406d0b:	popa   
  406d0c:	enter  0x9504,0x20
  406d10:	outs   dx,DWORD PTR ds:[esi]
  406d11:	push   0x14
  406d13:	cmp    DWORD PTR [edi-0x40],eax
  406d16:	or     al,0xfe
  406d18:	ins    BYTE PTR es:[edi],dx
  406d19:	lds    ebp,FWORD PTR [edi+0x5b]
  406d1c:	mov    edi,0x7a58d416
  406d21:	sub    al,0x6c
  406d23:	repnz int3 
  406d25:	add    ebp,ebp
  406d27:	mov    eax,DWORD PTR [ebp-0x8]
  406d2a:	mov    DWORD PTR [eax+0x1],ecx
  406d2d:	mov    al,BYTE PTR [ebp-0x1]
  406d30:	mov    ecx,DWORD PTR [ebp-0x8]
  406d33:	xor    al,0x49
  406d35:	sub    al,0x35
  406d37:	mov    BYTE PTR [ecx],al
  406d39:	lea    eax,[ebp-0x8]
  406d3c:	inc    BYTE PTR [eax]
  406d3e:	inc    eax
  406d3f:	push   eax
  406d40:	pop    ecx
  406d41:	dec    ecx
  406d42:	xchg   ecx,edx
  406d44:	dec    BYTE PTR [edx]
  406d46:	push   DWORD PTR [ebp-0x10]
  406d49:	mov    eax,ds:0x43c25c
  406d4e:	mov    eax,DWORD PTR [eax]
  406d50:	push   DWORD PTR [eax]
  406d52:	lea    eax,ds:0x43c278
  406d58:	jmp    0x406e84
  406d5d:	scas   eax,DWORD PTR es:[edi]
  406d5e:	stos   DWORD PTR es:[edi],eax
  406d5f:	fs pop ds
  406d61:	js     0x406d46
  406d63:	addr16 mov ebx,0xcd1c5374
  406d69:	jmp    0x7c3d:0x3415d98a
  406d70:	jl     0x406d7f
  406d72:	jg     0x406df0
  406d74:	jl     0x406dbf
  406d76:	retf   0x9500
  406d79:	push   ebx
  406d7a:	lock and al,0x92
  406d7d:	fisub  WORD PTR [ecx]
  406d7f:	in     eax,0x53
  406d81:	pop    edi
  406d82:	cmp    eax,0xd2050cc9
  406d87:	push   ds
  406d88:	xor    DWORD PTR [ecx+eax*1+0x66],eax
  406d8c:	pop    es
  406d8d:	jle    0x406d5a
  406d8f:	add    ecx,DWORD PTR [ecx+eax*8+0xc2a034b]
  406d96:	es std 
  406d98:	and    al,0x25
  406d9a:	mov    esi,0x781fe37
  406d9f:	test   edi,esp
  406da1:	mov    edx,0x3209f7f2
  406da6:	sbb    al,0xa6
  406da8:	lahf   
  406da9:	or     DWORD PTR [ebx+edx*2+0x10],0x4f
  406dae:	pop    ebx
  406daf:	cmp    al,0xc6
  406db1:	int3   
  406db2:	lods   al,BYTE PTR cs:[esi]
  406db4:	(bad)  
  406db6:	lds    edi,FWORD PTR [ebx+eax*4-0x65f86173]
  406dbd:	mov    edi,0x3e9f5e08
  406dc2:	cmp    al,0xa6
  406dc4:	xchg   ebp,eax
  406dc5:	mov    ebx,0x715d70f1
  406dca:	lds    esp,FWORD PTR [ebx]
  406dcc:	push   ebp
  406dcd:	sub    ah,al
  406dcf:	inc    edi
  406dd0:	test   DWORD PTR [eax],edi
  406dd2:	jmp    0xed3f:0xa9f7d765
  406dd9:	sbb    edi,DWORD PTR ds:0x106ea07d
  406ddf:	lods   eax,DWORD PTR ds:[esi]
  406de0:	jns    0x406da0
  406de2:	ja     0x406df9
  406de4:	dec    esp
  406de5:	cmp    eax,0x6bbd191c
  406dea:	(bad)  
  406deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dec:	out    0x94,eax
  406dee:	and    BYTE PTR [eax-0x2a],al
  406df1:	dec    edx
  406df2:	or     DWORD PTR [ebp+0x1d5c2ff8],ebx
  406df8:	loopne 0x406e4f
  406dfa:	push   eax
  406dfb:	mov    ebx,0x20debb6c
  406e00:	lock ja 0x406de5
  406e03:	fstp   QWORD PTR [edi+0x1385123e]
  406e09:	ret    
  406e0a:	fadd   DWORD PTR [edx-0x30]
  406e0d:	aas    
  406e0e:	mov    bl,ch
  406e10:	ds pop eax
  406e12:	arpl   WORD PTR [ecx+0x75],ax
  406e15:	dec    edi
  406e16:	dec    ebp
  406e17:	push   0xf03168df
  406e1c:	xor    esi,DWORD PTR [edx+0x59]
  406e1f:	sbb    ebp,0x6f
  406e22:	mov    dl,0xd4
  406e24:	mov    ch,0x39
  406e26:	stc    
  406e27:	mov    edx,0x5a37d896
  406e2c:	xchg   edx,eax
  406e2d:	jbe    0x406dfc
  406e2f:	int    0x74
  406e31:	or     BYTE PTR [ebx+edx*8+0x49fbeeb],ch
  406e38:	push   ss
  406e39:	das    
  406e3a:	sbb    ebx,DWORD PTR [edi]
  406e3c:	push   0xff7f0fdd
  406e41:	xchg   esi,eax
  406e42:	rdtsc  
  406e44:	ins    BYTE PTR es:[edi],dx
  406e45:	daa    
  406e46:	push   esp
  406e47:	and    al,BYTE PTR [edi-0x4173e6e7]
  406e4d:	xchg   esp,eax
  406e4e:	in     eax,0xb6
  406e50:	ja     0x406e9d
  406e52:	mov    ebx,0x3d3c7094
  406e57:	push   ebp
  406e58:	sbb    ebx,DWORD PTR ds:0x5911ab50
  406e5e:	popf   
  406e5f:	(bad)  
  406e60:	fldlg2 
  406e62:	pop    es
  406e63:	fnstcw WORD PTR [esi+0x19]
  406e66:	int    0x1a
  406e68:	rcr    edi,1
  406e6a:	int3   
  406e6b:	loope  0x406ed2
  406e6d:	(bad)  
  406e6e:	jge    0x406e57
  406e70:	mov    esp,0xcbc6c40c
  406e75:	mov    ebp,0xbab8bc92
  406e7a:	iret   
  406e7b:	xlat   BYTE PTR ds:[ebx]
  406e7c:	ret    0x872e
  406e7f:	pop    esp
  406e80:	pop    eax
  406e81:	cdq    
  406e82:	jp     0x406e28
  406e84:	push   DWORD PTR [eax]
  406e86:	lea    eax,ds:0x43c024
  406e8c:	push   DWORD PTR [eax]
  406e8e:	lea    eax,ds:0x43c258
  406e94:	push   DWORD PTR [eax]
  406e96:	lea    eax,ds:0x43c348
  406e9c:	push   DWORD PTR [eax]
  406e9e:	xchg   ebx,edx
  406ea0:	inc    ebx
  406ea1:	inc    ebx
  406ea2:	jmp    0x406fce
  406ea7:	sbb    ebx,ecx
  406ea9:	mov    ecx,0xd9627d6c
  406eae:	ins    DWORD PTR es:[edi],dx
  406eaf:	lods   al,BYTE PTR ds:[esi]
  406eb0:	test   eax,0xc2807590
  406eb5:	gs sti 
  406eb7:	lds    edi,FWORD PTR [esp+edi*2]
  406eba:	jl     0x406ec9
  406ebc:	jg     0x406f3a
  406ebe:	jl     0x406f3e
  406ec0:	or     eax,0x833b7aaf
  406ec5:	les    esi,FWORD PTR [edx+0x5e7a697e]
  406ecb:	adc    ebx,ebx
  406ecd:	push   ds
  406ece:	mov    ah,0x4c
  406ed0:	in     eax,0x64
  406ed2:	cld    
  406ed3:	add    esp,DWORD PTR [ebp+0x6b]
  406ed6:	mov    ds:0xfd0e8c9c,eax
  406edb:	ins    BYTE PTR es:[edi],dx
  406edc:	xchg   edx,eax
  406edd:	inc    esp
  406ede:	xor    ch,bh
  406ee0:	out    dx,eax
  406ee1:	sahf   
  406ee2:	xor    al,BYTE PTR [ebx+0x3d]
  406ee5:	hlt    
  406ee6:	jmp    0xfd2836f9
  406eeb:	loopne 0x406f00
  406eed:	das    
  406eee:	inc    esi
  406eef:	call   0x5edf:0xc7d9f650
  406ef6:	jo     0x406e8f
  406ef8:	cmp    eax,0xe207b1d6
  406efd:	inc    ebx
  406efe:	add    eax,0xf182f360
  406f03:	out    dx,al
  406f04:	jnp    0x406ea9
  406f06:	scas   al,BYTE PTR es:[edi]
  406f07:	sub    al,0x12
  406f09:	scas   eax,DWORD PTR es:[edi]
  406f0a:	sub    edi,DWORD PTR [edx]
  406f0c:	imul   esp,edx,0xffffffc9
  406f0f:	xchg   BYTE PTR [ebp+0x10],bh
  406f12:	into   
  406f13:	sbb    BYTE PTR [ecx+eax*1+0x55355994],0xf6
  406f1b:	jecxz  0x406f4a
  406f1d:	loope  0x406f80
  406f1f:	(bad)  
  406f20:	and    DWORD PTR [edi-0x35d5ba2a],edx
  406f26:	xchg   edx,eax
  406f27:	in     eax,dx
  406f28:	test   eax,0xbca21161
  406f2d:	inc    edx
  406f2e:	push   0x3a166df1
  406f33:	and    bh,bl
  406f35:	xchg   ecx,eax
  406f36:	or     al,0xfd
  406f38:	cld    
  406f39:	aad    0x43
  406f3b:	push   ebx
  406f3c:	cmc    
  406f3d:	pop    ss
  406f3e:	push   cs
  406f3f:	std    
  406f40:	mov    ds:0x8fd464ff,eax
  406f45:	int3   
  406f46:	div    BYTE PTR [esi]
  406f48:	xchg   edx,eax
  406f49:	aad    0x37
  406f4b:	je     0x406eef
  406f4d:	sbb    ebp,DWORD PTR [ecx-0x24]
  406f50:	cmp    eax,0x886ebcf0
  406f55:	ret    0x557
  406f58:	xlat   BYTE PTR ds:[ebx]
  406f59:	(bad)  [ecx+0x11d25758]
  406f5f:	sub    BYTE PTR [ecx+eax*2-0x7a],0xae
  406f64:	dec    ebx
  406f65:	cdq    
  406f66:	dec    ebp
  406f67:	fsincos 
  406f69:	and    BYTE PTR [ecx-0x79],dh
  406f6c:	inc    eax
  406f6d:	inc    esp
  406f6e:	mov    esi,DWORD PTR [ebp-0x473391d1]
  406f74:	stc    
  406f75:	push   ss
  406f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f77:	or     al,0xf0
  406f79:	test   eax,0x767b323b
  406f7e:	adc    eax,0x4b5b2091
  406f83:	fst    st(5)
  406f85:	imul   ebx,DWORD PTR [esi+0x43],0x1c128966
  406f8c:	sub    BYTE PTR [edi+0x51],bh
  406f8f:	lock mov ds:0xaf8b4bb3,eax
  406f95:	(bad)  
  406f97:	xchg   ecx,eax
  406f98:	out    0xe5,eax
  406f9a:	cmp    eax,0xfa5fc0f
  406f9f:	sbb    eax,0x5a086e94
  406fa4:	push   ss
  406fa5:	mov    esp,0x98b51852
  406faa:	and    al,0x25
  406fac:	jg     0x407013
  406fae:	xor    dl,dl
  406fb0:	test   BYTE PTR cs:[ebx],0x0
  406fb4:	outs   dx,BYTE PTR ds:[esi]
  406fb5:	bound  edx,QWORD PTR [edx]
  406fb7:	or     eax,0x95d1885e
  406fbc:	inc    ebp
  406fbd:	or     ah,BYTE PTR [ebx-0x3b]
  406fc0:	fld    DWORD PTR [ebx-0x3b6c85e0]
  406fc6:	adc    ebx,ebx
  406fc8:	push   es
  406fc9:	add    bh,BYTE PTR [ebp-0x7c3f5204]
  406fcf:	jmp    0x406fd4
  406fd1:	push   ebx
  406fd2:	pop    eax
  406fd3:	call   DWORD PTR [eax+0x1]
  406fd6:	mov    eax,DWORD PTR [ebp-0x20]
  406fd9:	mov    ecx,DWORD PTR ds:0x43c21c
  406fdf:	jmp    0x40710b
  406fe4:	gs jg  0x406fc0
  406fe7:	add    DWORD PTR [ebp-0x27],edi
  406fea:	jge    0x40703f
  406fec:	jecxz  0x406fd1
  406fee:	stos   DWORD PTR es:[edi],eax
  406fef:	ins    BYTE PTR es:[edi],dx
  406ff0:	or     BYTE PTR [ebp+eiz*1+0x7c3fd2c4],0x7c
  406ff8:	or     eax,0x597c7c7f
  406ffd:	lock xor ah,BYTE PTR [eax-0x3cc4b95b]
  407004:	lds    eax,FWORD PTR [esi]
  407006:	adc    al,0x7f
  407008:	inc    edi
  407009:	sbb    eax,0x49b40ba7
  40700e:	lock dec ecx
  407010:	enter  0xa563,0xfb
  407014:	popa   
  407015:	outs   dx,DWORD PTR ds:[esi]
  407016:	sbb    dl,BYTE PTR [esi-0x5466cb91]
  40701c:	cmp    dl,dl
  40701e:	adc    BYTE PTR [esi+0x5ac5a5ec],cl
  407024:	jne    0x406fe5
  407026:	fisubr DWORD PTR [ebx-0x2a46c2de]
  40702c:	xchg   DWORD PTR [edi+edx*8-0x5c244900],edi
  407033:	xchg   esi,eax
  407034:	pop    ss
  407035:	ret    
  407036:	mov    ecx,0xe78fc565
  40703b:	les    eax,FWORD PTR [edi+0x2]
  40703e:	and    ah,cl
  407040:	cs enter 0x6e92,0x74
  407045:	pusha  
  407046:	mov    ds:0x883e70bb,al
  40704b:	push   ss
  40704c:	xchg   ebp,eax
  40704d:	mov    al,0xeb
  40704f:	loopne 0x4070a2
  407051:	inc    edx
  407052:	or     DWORD PTR [eax-0x6e6b8189],ebx
  407058:	out    0x6,eax
  40705a:	jb     0x40706d
  40705c:	push   ebp
  40705d:	mov    cl,0xbb
  40705f:	fcom   DWORD PTR [edx+0x12]
  407062:	stc    
  407063:	pop    ebp
  407064:	scas   eax,DWORD PTR es:[edi]
  407065:	xchg   BYTE PTR [edi+0x62],bl
  407068:	jecxz  0x40705c
  40706a:	or     al,0x81
  40706c:	inc    ebx
  40706d:	jne    0x40704b
  40706f:	mov    cs,WORD PTR [edx+0x3b]
  407072:	int    0x71
  407074:	jnp    0x40700d
  407076:	cmp    BYTE PTR [edx],ah
  407078:	dec    ebx
  407079:	shr    DWORD PTR [esi+esi*2-0x79e20be2],cl
  407080:	adc    BYTE PTR [ebp+0x8],cl
  407083:	sub    al,0x73
  407085:	stc    
  407086:	(bad)  
  407087:	jge    0x4070d7
  407089:	pop    ebp
  40708a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40708b:	lahf   
  40708c:	rol    DWORD PTR [edx+edi*2-0x40],1
  407090:	mov    ds:0xf2e9350,al
  407095:	pop    esp
  407096:	jl     0x407116
  407098:	pop    ebp
  407099:	xchg   edi,eax
  40709a:	int    0xdf
  40709c:	cmp    al,0xec
  40709e:	lock pop edi
  4070a0:	stos   DWORD PTR es:[edi],eax
  4070a1:	jg     0x407122
  4070a3:	push   ds
  4070a4:	cmp    al,0xf3
  4070a6:	jge    0x407118
  4070a8:	stos   BYTE PTR es:[edi],al
  4070a9:	or     ecx,DWORD PTR [ebx]
  4070ab:	jmp    0x407045
  4070ad:	test   DWORD PTR [ebx-0x51],eax
  4070b0:	mov    ecx,0x6c2112e7
  4070b5:	mov    ebp,0x1a6a5446
  4070ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070bc:	sub    edx,ecx
  4070be:	ds pop ebx
  4070c0:	idiv   edi
  4070c2:	lahf   
  4070c3:	daa    
  4070c4:	xor    BYTE PTR [edi+0xcca8b48],ah
  4070ca:	lahf   
  4070cb:	out    0xc2,al
  4070cd:	dec    eax
  4070ce:	(bad)  
  4070d0:	jbe    0x407092
  4070d2:	mov    bl,0xf0
  4070d4:	scas   al,BYTE PTR es:[edi]
  4070d5:	(bad)  
  4070d6:	call   0x4d79d065
  4070db:	dec    edx
  4070dc:	adc    BYTE PTR ds:0xe193a1a1,dh
  4070e2:	push   esi
  4070e3:	push   cs
  4070e4:	pop    ss
  4070e5:	xor    eax,0x10f3e40
  4070ea:	repz pusha 
  4070ec:	xchg   esi,eax
  4070ed:	cmp    ebp,DWORD PTR [esi+0x4f8bb21]
  4070f3:	lea    esi,[ebx+edx*1]
  4070f6:	dec    ebp
  4070f7:	inc    ebx
  4070f8:	cmp    BYTE PTR [eax+ebx*8],bh
  4070fb:	or     eax,0xe9d36a7d
  407100:	fdivr  st(7),st
  407102:	mov    al,ch
  407104:	adc    eax,0x1aafedb1
  407109:	jno    0x407168
  40710b:	add    DWORD PTR [eax],ecx
  40710d:	pop    edi
  40710e:	pop    esi
  40710f:	pop    ebx
  407110:	leave  
  407111:	ret    
  407112:	push   ebp
  407113:	mov    ebp,esp
  407115:	sub    esp,0x2c
  407118:	xor    eax,0x6ce
  40711d:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  407124:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40712b:	or     DWORD PTR ds:0x44536c,0x5a5
  407135:	jmp    0x40726c
  40713a:	push   ds
  40713b:	repz lock adc al,0x95
  40713f:	pop    ss
  407140:	stos   BYTE PTR es:[edi],al
  407141:	lea    edi,[esi+0x16]
  407144:	nop
  407145:	push   ebx
  407146:	(bad)  
  407147:	stos   DWORD PTR es:[edi],eax
  407148:	(bad)  
  407149:	dec    ebx
  40714a:	jecxz  0x40718a
  40714c:	jl     0x4071ca
  40714e:	push   es
  40714f:	jg     0x4071cd
  407151:	jl     0x407109
  407153:	sbb    al,0x75
  407155:	xlat   BYTE PTR ds:[ebx]
  407156:	clc    
  407157:	fsub   st,st(1)
  407159:	sub    al,0x80
  40715b:	fsubr  QWORD PTR [eax-0x13]
  40715e:	xor    eax,0xed06ea32
  407163:	or     al,0xe5
  407165:	cmp    BYTE PTR [ebx-0x6d38bdad],0xba
  40716c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40716d:	sahf   
  40716e:	or     dl,dl
  407170:	nop
  407171:	mov    ch,0xd8
  407173:	adc    dl,al
  407175:	add    DWORD PTR ds:0x44b08c33,ecx
  40717b:	adc    eax,DWORD PTR [ecx+0x4f6af2bf]
  407181:	xchg   esi,eax
  407182:	sti    
  407183:	aas    
  407184:	xchg   ebx,eax
  407185:	sub    BYTE PTR [ecx-0x24],al
  407188:	mov    ebp,ds
  40718a:	addr16 popf 
  40718c:	add    DWORD PTR [edi+0x44],eax
  40718f:	cdq    
  407190:	jg     0x4071c3
  407192:	sbb    al,0x21
  407194:	pop    edi
  407195:	(bad)  
  407196:	sbb    ah,BYTE PTR [ebp+0x65]
  407199:	cwde   
  40719a:	push   ds
  40719b:	sub    edx,0x75
  40719e:	sbb    ah,ch
  4071a0:	(bad)  
  4071a1:	in     eax,0x27
  4071a3:	mov    cl,0xa1
  4071a5:	aam    0x12
  4071a7:	pushf  
  4071a8:	sub    DWORD PTR [esp+ebp*1],ecx
  4071ab:	sbb    eax,0xf88b0fbd
  4071b0:	aam    0xaa
  4071b2:	jmp    0x40715e
  4071b4:	cdq    
  4071b5:	ret    0xad3a
  4071b8:	push   eax
  4071b9:	out    dx,al
  4071ba:	pusha  
  4071bb:	addr16 mov eax,0xc6161ee0
  4071c1:	shr    al,0xe8
  4071c4:	mov    edi,0x4a85dfb3
  4071c9:	out    dx,al
  4071ca:	xor    BYTE PTR [ecx],al
  4071cc:	add    eax,0x8a43afb7
  4071d1:	popf   
  4071d2:	push   0xffffffc0
  4071d4:	stc    
  4071d5:	or     ah,ah
  4071d7:	call   0x4cdc:0x3ed62bc4
  4071de:	mov    edi,0x13b3fc06
  4071e3:	or     BYTE PTR [eax+0x4f],cl
  4071e6:	fwait
  4071e7:	(bad)  
  4071e8:	test   BYTE PTR [eax-0x7bb69876],0xd0
  4071ef:	or     edi,DWORD PTR ds:0x1d1c848e
  4071f5:	xchg   ebp,eax
  4071f6:	retf   0x2c5a
  4071f9:	jae    0x40719c
  4071fb:	add    eax,0x3629806d
  407200:	inc    ecx
  407201:	leave  
  407202:	sub    cl,BYTE PTR [ebx]
  407204:	jne    0x4071a8
  407206:	repz and al,0xf0
  407209:	dec    ecx
  40720a:	mov    al,ds:0xc0e42147
  40720f:	es push esp
  407211:	sub    eax,0x637abd74
  407216:	pop    ebp
  407217:	push   esi
  407218:	push   esp
  407219:	stc    
  40721a:	test   al,0x2c
  40721c:	dec    ebp
  40721d:	call   0x95a3037b
  407222:	sub    BYTE PTR [edi],ch
  407224:	push   ecx
  407225:	rcl    dl,0x62
  407228:	xchg   esi,eax
  407229:	mov    al,0xfa
  40722b:	and    al,0xe2
  40722d:	jmp    0x4071eb
  40722f:	mov    bh,0x64
  407231:	mov    esi,0xa0b1cd5
  407236:	dec    edx
  407237:	xchg   esp,eax
  407238:	adc    eax,0xe91a9a27
  40723d:	xchg   esi,eax
  40723e:	call   0x867a503c
  407243:	cmc    
  407244:	sbb    bl,BYTE PTR [esi+0x66892cd9]
  40724a:	cdq    
  40724b:	adc    ah,BYTE PTR [eax]
  40724d:	cli    
  40724e:	out    0xad,eax
  407250:	(bad)  
  407251:	loopne 0x407232
  407253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407254:	mov    eax,0xea59e634
  407259:	not    DWORD PTR [eax+0x156cf1ba]
  40725f:	stos   BYTE PTR es:[edi],al
  407260:	out    0xd3,eax
  407262:	arpl   si,dx
  407264:	mov    ds:0x9556aefb,eax
  407269:	xchg   esi,eax
  40726a:	into   
  40726b:	push   esp
  40726c:	mov    eax,0x9507
  407271:	and    DWORD PTR ds:0x4105cf,0x0
  40727b:	mov    ecx,DWORD PTR ds:0x4105cf
  407281:	inc    ecx
  407282:	mov    DWORD PTR ds:0x4105cf,ecx
  407288:	cmp    DWORD PTR ds:0x4105cf,0x20
  40728f:	jne    0x4072a0
  407295:	push   0x413b52
  40729a:	call   DWORD PTR ds:0x43c84c
  4072a0:	cmp    DWORD PTR ds:0x4105cf,0x10
  4072a7:	jb     0x40727b
  4072ad:	or     DWORD PTR ds:0x4427b4,0x61e1
  4072b7:	mov    WORD PTR [ebp-0x4],ax
  4072bb:	xor    DWORD PTR ds:0x4427b8,0xdd9
  4072c5:	lea    eax,[ebp-0x24]
  4072c8:	and    ecx,DWORD PTR ds:0x4427b0
  4072ce:	jmp    0x407405
  4072d3:	div    DWORD PTR [eax]
  4072d5:	test   BYTE PTR [ebx],ah
  4072d7:	pop    ebx
  4072d8:	jnp    0x407285
  4072da:	js     0x407349
  4072dc:	ds xchg ebx,eax
  4072de:	mov    esp,0xe554d854
  4072e3:	lea    esi,[ecx]
  4072e5:	jl     0x407363
  4072e7:	push   es
  4072e8:	jg     0x407366
  4072ea:	jl     0x407367
  4072ec:	and    eax,0x57526a34
  4072f1:	inc    esp
  4072f2:	pushf  
  4072f3:	dec    esi
  4072f4:	inc    ebx
  4072f5:	push   ds
  4072f6:	jg     0x4072a7
  4072f8:	or     al,0x5b
  4072fa:	xchg   esi,eax
  4072fb:	add    BYTE PTR [ecx],ah
  4072fd:	call   0x69231339
  407302:	cmp    BYTE PTR [esi+0x6058c9da],bh
  407308:	dec    ebx
  407309:	out    dx,eax
  40730a:	addr16 das 
  40730c:	fcomp  DWORD PTR [edi+0x76]
  40730f:	addr16 mov al,0x97
  407312:	bound  eax,QWORD PTR [esi-0x755a9d98]
  407318:	dec    ebp
  407319:	(bad)  
  40731a:	jg     0x407316
  40731c:	sbb    bl,BYTE PTR [ecx+0x72]
  40731f:	fcom   QWORD PTR [ebx]
  407321:	call   0xdfb5cb0f
  407326:	mov    ch,0x4d
  407328:	ficom  DWORD PTR ds:0x3625bb88
  40732e:	repnz dec esi
  407330:	cli    
  407331:	shl    edx,0x60
  407334:	fisttp QWORD PTR [ebp+0x1ccf8730]
  40733a:	adc    al,0xb0
  40733c:	ins    BYTE PTR es:[edi],dx
  40733d:	xor    DWORD PTR [edx+ebx*8+0x3f],edx
  407341:	or     eax,0x2f655ffb
  407346:	cmp    BYTE PTR [ecx],0x34
  407349:	cmp    dh,dh
  40734b:	push   ebp
  40734c:	shr    DWORD PTR [ebx+0x2b6d4617],1
  407352:	or     DWORD PTR [ecx-0x1181a99e],edi
  407358:	div    edx
  40735a:	ds pop edi
  40735c:	xchg   edx,eax
  40735d:	mov    ecx,0x732f6dfd
  407362:	les    ebp,FWORD PTR [esi-0x14]
  407365:	sbb    al,bh
  407367:	pop    edi
  407368:	jle    0x4073e4
  40736a:	sub    eax,0xebf9d711
  40736f:	jnp    0x4073c0
  407371:	or     al,0x69
  407373:	icebp  
  407374:	outs   dx,DWORD PTR ds:[esi]
  407375:	mov    esi,0x9193e123
  40737a:	repz out dx,al
  40737c:	idiv   BYTE PTR [eax]
  40737e:	les    edi,FWORD PTR [ebx+0x1758676]
  407384:	out    dx,eax
  407385:	mov    al,ds:0xb794c9b7
  40738a:	mov    ecx,0x4a17dc8d
  40738f:	push   0xffffff9f
  407391:	inc    BYTE PTR ds:[eax-0x51ff1acc]
  407398:	push   ss
  407399:	sub    al,0xaf
  40739b:	sub    cl,BYTE PTR [ebx-0x6778d4e6]
  4073a1:	sbb    al,0x34
  4073a3:	cmp    DWORD PTR [eax],edx
  4073a5:	out    dx,eax
  4073a6:	and    eax,DWORD PTR [ecx]
  4073a8:	pushf  
  4073a9:	dec    edx
  4073aa:	int    0x6e
  4073ac:	cdq    
  4073ad:	xchg   ah,ah
  4073af:	addr16 ret 0xeea2
  4073b3:	retf   
  4073b4:	fwait
  4073b5:	sti    
  4073b6:	push   ds
  4073b7:	pushf  
  4073b8:	inc    edi
  4073b9:	push   esi
  4073ba:	push   edi
  4073bb:	mov    esi,0xe516a5ad
  4073c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073c1:	push   ds
  4073c2:	jmp    0x78c90c0f
  4073c7:	neg    DWORD PTR [edx]
  4073c9:	cs mov edi,0xb8e6cb8c
  4073cf:	mov    eax,ds:0x1763e68e
  4073d4:	retf   
  4073d5:	jp     0x407439
  4073d7:	rol    esp,cl
  4073d9:	and    bh,bh
  4073db:	cmp    dl,0x66
  4073de:	or     edx,DWORD PTR [ecx-0x3afcc33e]
  4073e4:	xor    DWORD PTR [eax-0xd],0xffffffec
  4073e8:	xor    al,0x2
  4073ea:	nop
  4073eb:	pop    eax
  4073ec:	xchg   ebp,eax
  4073ed:	sti    
  4073ee:	cmc    
  4073ef:	dec    edx
  4073f0:	mov    bl,0x78
  4073f2:	pop    ds
  4073f3:	jle    0x4073ef
  4073f5:	jnp    0x407408
  4073f7:	pop    es
  4073f8:	jo     0x4073ba
  4073fa:	test   BYTE PTR [ecx],bh
  4073fc:	nop
  4073fd:	sahf   
  4073fe:	cmc    
  4073ff:	shl    DWORD PTR [edi-0x2739e543],0x89
  407406:	inc    ebp
  407407:	fsubr  st,st(1)
  407409:	xor    al,BYTE PTR [ecx]
  40740b:	add    BYTE PTR [eax],al
  40740d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40740e:	(bad)  [ecx+0x67666966]
  407414:	fld    DWORD PTR [edx]
  407416:	xor    eax,0x22fcc56
  40741b:	jge    0x407442
  40741d:	xchg   edi,eax
  40741e:	xor    BYTE PTR [esp+edi*2+0x6],bh
  407422:	jg     0x4074a0
  407424:	jl     0x407484
  407426:	add    eax,0x5b972742
  40742b:	imul   edi,DWORD PTR [edi+0x7f],0xee7d5071
  407432:	jb     0x407492
  407434:	jmp    0x407426
  407436:	aad    0xaf
  407438:	sub    DWORD PTR [esi],ebx
  40743a:	aaa    
  40743b:	xchg   ecx,ecx
  40743d:	js     0x407499
  40743f:	adc    al,ah
  407441:	inc    ebp
  407442:	push   0x9
  407444:	xchg   BYTE PTR [ecx],bl
  407446:	pop    ds
  407447:	push   0xfffffff9
  407449:	jne    0x4073dd
  40744b:	jns    0x40743e
  40744d:	xor    esp,DWORD PTR ds:[ecx+0x4]
  407451:	mov    al,0x20
  407453:	cwde   
  407454:	test   eax,0x8194cbae
  407459:	pop    ebp
  40745a:	pop    edi
  40745b:	rol    DWORD PTR [ecx+ecx*8],0x55
  40745f:	add    esp,DWORD PTR [ebx+0x6dec0075]
  407465:	jb     0x4074aa
  407467:	gs (bad) 
  407469:	icebp  
  40746a:	shrd   DWORD PTR [esi-0x107ea120],edx,cl
  407471:	dec    ebp
  407472:	ins    DWORD PTR es:[edi],dx
  407473:	lea    eax,[ebx+0x18ccc292]
  407479:	fwait
  40747a:	cmp    al,dh
  40747c:	std    
  40747d:	sub    eax,0xa4f8df8e
  407482:	adc    ecx,DWORD PTR [eax+eiz*2-0x24]
  407486:	add    al,0xea
  407488:	adc    eax,0xfb717a72
  40748d:	test   BYTE PTR [edx-0x29],bh
  407490:	pop    edx
  407491:	ffreep st(4)
  407493:	add    eax,0xce692242
  407498:	fsubr  QWORD PTR [ecx+0x13]
  40749b:	push   eax
  40749c:	jmp    0xa8eb0e05
  4074a1:	mov    dl,0x97
  4074a3:	sbb    DWORD PTR [edi-0x7229889f],eax
  4074a9:	sbb    BYTE PTR [esi],ch
  4074ab:	hlt    
  4074ac:	call   0x607c394a
  4074b1:	stos   DWORD PTR es:[edi],eax
  4074b2:	sti    
  4074b3:	add    eax,0x2295df53
  4074b8:	lods   al,BYTE PTR ds:[esi]
  4074b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074ba:	out    0x4d,eax
  4074bc:	jge    0x407466
  4074be:	jmp    0x40748a
  4074c0:	fisub  WORD PTR [edi-0x6]
  4074c3:	add    DWORD PTR [ecx-0x59],0x2f521395
  4074ca:	xlat   BYTE PTR ds:[ebx]
  4074cb:	add    al,0xcb
  4074cd:	inc    esp
  4074ce:	mov    ebp,edi
  4074d0:	jl     0x407516
  4074d2:	out    0xd8,al
  4074d4:	nop
  4074d5:	add    eax,0x6d509555
  4074da:	addr16 inc ebp
  4074dc:	cdq    
  4074dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074de:	add    DWORD PTR [ecx-0x6e],edi
  4074e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074e2:	pop    eax
  4074e3:	or     eax,0x80ef0df3
  4074e8:	aam    0xb6
  4074ea:	scas   eax,DWORD PTR es:[edi]
  4074eb:	outs   dx,DWORD PTR ds:[esi]
  4074ec:	push   ss
  4074ed:	call   0x6c482f72
  4074f2:	cmp    eax,0x400c8ed5
  4074f7:	aas    
  4074f8:	xchg   ebp,eax
  4074f9:	and    DWORD PTR [esp+eiz*8],0xffffff99
  4074fd:	cmp    cl,BYTE PTR [ecx-0x11]
  407500:	(bad)  
  407501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407502:	fistp  DWORD PTR [edi-0x741904d0]
  407508:	and    ebp,ecx
  40750a:	(bad)  
  40750b:	adc    esp,DWORD PTR [ebx]
  40750d:	retf   
  40750e:	loop   0x40758c
  407510:	into   
  407511:	ss jl  0x407517
  407514:	jns    0x40758a
  407516:	inc    ebx
  407517:	sub    ecx,DWORD PTR ds:0xa31028c5
  40751d:	add    eax,0x358bee58
  407522:	dec    eax
  407523:	add    eax,0x45179f11
  407528:	out    dx,al
  407529:	ins    DWORD PTR es:[edi],dx
  40752a:	sahf   
  40752b:	push   edi
  40752c:	pusha  
  40752d:	scas   al,BYTE PTR es:[edi]
  40752e:	or     al,0xee
  407530:	fsub   st,st(7)
  407532:	fadd   DWORD PTR [ecx+0x53]
  407535:	mov    bh,ch
  407537:	sbb    ecx,0x7f
  40753a:	and    eax,0x2d8259a
  40753f:	mov    eax,DWORD PTR [ebp+0x8]
  407542:	add    ecx,DWORD PTR ds:0x4427b8
  407548:	mov    DWORD PTR [ebp-0x20],eax
  40754b:	sbb    ecx,0x41ef
  407551:	push   ebx
  407552:	lea    eax,[ebp-0x18]
  407555:	mov    DWORD PTR [ebp-0x1c],eax
  407558:	mov    eax,DWORD PTR [ebp-0x1c]
  40755b:	adc    DWORD PTR ds:0x445368,ecx
  407561:	push   esi
  407562:	push   edi
  407563:	mov    edi,0xf89f2dad
  407568:	or     DWORD PTR ds:0x4427b0,0x25a
  407572:	mov    DWORD PTR [eax],edi
  407574:	mov    eax,DWORD PTR [ebp-0x14]
  407577:	mov    ebx,DWORD PTR [ebp-0x8]
  40757a:	and    esi,0x501d
  407580:	mov    ecx,0x7510857
  407585:	xor    eax,ecx
  407587:	and    DWORD PTR ds:0x413b5e,0x0
  407591:	xor    esi,esi
  407593:	or     esi,DWORD PTR ds:0x413b5e
  407599:	inc    esi
  40759a:	mov    DWORD PTR ds:0x413b5e,esi
  4075a0:	cmp    DWORD PTR ds:0x413b5e,0x24
  4075a7:	jne    0x4075b8
  4075ad:	push   0x41070a
  4075b2:	call   DWORD PTR ds:0x43c854
  4075b8:	cmp    DWORD PTR ds:0x413b5e,0x18
  4075bf:	jb     0x407591
  4075c5:	mov    esi,0x32729e
  4075ca:	adc    DWORD PTR ds:0x445370,0x445364
  4075d4:	jmp    0x40770b
  4075d9:	adc    dh,al
  4075db:	in     al,0x9d
  4075dd:	data16 jge 0x407635
  4075e0:	mov    ebx,0x5b1ba91b
  4075e5:	dec    edi
  4075e6:	dec    BYTE PTR [ebp+0x7c33b1e5]
  4075ec:	jl     0x4075f4
  4075ee:	jg     0x40766c
  4075f0:	jl     0x407635
  4075f2:	retf   
  4075f3:	fadd   QWORD PTR [ebx+eiz*8]
  4075f6:	aas    
  4075f7:	dec    ebx
  4075f8:	ins    DWORD PTR es:[edi],dx
  4075f9:	mov    WORD PTR [esp+ecx*8],es
  4075fc:	cld    
  4075fd:	popa   
  4075fe:	ror    ecx,cl
  407600:	mov    ds:0x6e523101,al
  407605:	pop    esp
  407606:	rcr    DWORD PTR [ecx+0x4bd6dcb5],0xfa
  40760d:	inc    edx
  40760e:	pop    ebx
  40760f:	add    cl,ch
  407611:	or     esp,DWORD PTR [edx-0x76]
  407614:	mov    eax,ds
  407616:	xchg   esi,eax
  407617:	pop    es
  407618:	fsubr  QWORD PTR ds:0x2aa39c07
  40761e:	rcr    DWORD PTR [ebp+0x77378e3a],1
  407624:	int    0x8a
  407626:	xor    DWORD PTR ds:[edi+ebx*1],ebx
  40762a:	jge    0x4075b8
  40762c:	fwait
  40762d:	push   0xffffffa4
  40762f:	inc    edx
  407630:	xchg   DWORD PTR [ecx],ebp
  407632:	adc    eax,0x9887a4ae
  407637:	jmp    0xe65b3ed3
  40763c:	popf   
  40763d:	lods   eax,DWORD PTR ds:[esi]
  40763e:	xchg   esp,eax
  40763f:	lock xor BYTE PTR ds:0x4d0b9bad,cl
  407646:	add    ebp,DWORD PTR ds:[edx]
  407649:	(bad)  
  40764a:	jecxz  0x40764f
  40764c:	iret   
  40764d:	outs   dx,DWORD PTR ds:[esi]
  40764e:	idiv   BYTE PTR [edi+0x2f7cc882]
  407654:	jo     0x407627
  407656:	xchg   BYTE PTR [esi+eax*8-0x594643e4],bh
  40765d:	or     BYTE PTR [ebx],dl
  40765f:	leave  
  407660:	fsubr  DWORD PTR ds:0x5132de34
  407666:	in     eax,0xa2
  407668:	dec    eax
  407669:	inc    edx
  40766a:	jb     0x40769e
  40766c:	out    0x6e,eax
  40766e:	jle    0x407605
  407670:	rcr    DWORD PTR ds:0x2815c033,1
  407676:	lds    esi,FWORD PTR [ebp+0x6f264d29]
  40767c:	jle    0x4076fd
  40767e:	xor    BYTE PTR [edx+0x7d],bh
  407681:	mov    ah,0xfb
  407683:	xor    eax,0x65b0e153
  407688:	sbb    DWORD PTR [ecx+0x10734207],esp
  40768e:	pop    es
  40768f:	(bad)  
  407690:	shl    DWORD PTR [edx+0x35ee8b9e],cl
  407696:	je     0x407703
  407698:	push   edi
  407699:	fsub   DWORD PTR [esi+edx*1-0x2b97a549]
  4076a0:	sbb    BYTE PTR [ebx+0x3f],bl
  4076a3:	fmul   st,st(4)
  4076a5:	cli    
  4076a6:	les    ebp,FWORD PTR [ebx]
  4076a8:	addr16 faddp st(6),st
  4076ab:	xchg   esp,eax
  4076ac:	gs in  eax,dx
  4076ae:	xor    eax,DWORD PTR [ebx]
  4076b0:	adc    BYTE PTR ds:0x7f07164f,bl
  4076b6:	out    0x7b,eax
  4076b8:	adc    DWORD PTR [eax],esp
  4076ba:	dec    eax
  4076bb:	dec    edx
  4076bc:	aad    0xfd
  4076be:	int3   
  4076bf:	gs in  eax,0xe9
  4076c2:	pop    edx
  4076c3:	dec    edx
  4076c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076c5:	dec    edi
  4076c6:	sbb    ah,BYTE PTR [eax-0x7bcac148]
  4076cc:	cdq    
  4076cd:	stc    
  4076ce:	hlt    
  4076cf:	in     eax,0xc4
  4076d1:	push   ss
  4076d2:	sub    BYTE PTR [esp+eax*2+0x68],al
  4076d6:	pop    ebx
  4076d7:	jne    0x40774e
  4076d9:	inc    edx
  4076da:	or     DWORD PTR [esi],esi
  4076dc:	sub    ch,BYTE PTR [ebx]
  4076de:	repz mov ah,0x4f
  4076e1:	jbe    0x40773e
  4076e3:	and    DWORD PTR [ebx+0x1b99b64e],eax
  4076e9:	into   
  4076ea:	mov    edx,0xfa663229
  4076ef:	dec    ecx
  4076f0:	push   ecx
  4076f1:	mov    ebp,DWORD PTR [ebp+0x5b]
  4076f4:	adc    al,0xd7
  4076f6:	mul    DWORD PTR [edx+0x30]
  4076f9:	loope  0x407769
  4076fb:	mov    eax,ds:0xf93b7f97
  407700:	cmp    al,0x79
  407702:	sub    eax,0x59aa0621
  407707:	fild   QWORD PTR [edi+0x46]
  40770a:	jns    0x40773f
  40770c:	fld    st(7)
  40770e:	add    eax,0x4105db
  407713:	sbb    eax,0x33000075
  407718:	rol    BYTE PTR [ecx+0x43fbd805],cl
  40771e:	add    dl,bl
  407720:	push   cs
  407721:	add    BYTE PTR [eax],al
  407723:	add    eax,esi
  407725:	and    DWORD PTR ds:0x43fbd8,0x413b5a
  40772f:	add    ebx,esi
  407731:	mov    DWORD PTR ds:0x43fbe0,0x5df4
  40773b:	jmp    0x407872
  407740:	ss push 0x77
  407743:	call   0x6b2de4f3
  407748:	pop    ecx
  407749:	fcom   st(3)
  40774b:	xor    al,0x4e
  40774d:	adc    al,0xdd
  40774f:	fwait
  407750:	pop    ebx
  407751:	xor    bh,BYTE PTR [esp+edi*2+0x6]
  407755:	jg     0x4077d3
  407757:	jl     0x40778c
  407759:	mov    ebx,0x80a87290
  40775e:	xchg   ebx,eax
  40775f:	dec    esp
  407760:	test   al,0x11
  407762:	mov    eax,0x6db12efc
  407767:	js     0x40779a
  407769:	aam    0x57
  40776b:	jnp    0x407725
  40776d:	xchg   BYTE PTR [ebx+0x3435ac76],bh
  407773:	ins    DWORD PTR es:[edi],dx
  407774:	loop   0x40771b
  407776:	xchg   ebx,eax
  407777:	xchg   al,dh
  407779:	mov    eax,0xb22baa7e
  40777e:	inc    ebp
  40777f:	cld    
  407780:	fidiv  WORD PTR [esi-0x68]
  407783:	jmp    0xb7fd668c
  407788:	push   0x71
  40778a:	and    al,bl
  40778c:	push   eax
  40778d:	shr    DWORD PTR [ebp+0x70],1
  407790:	xchg   ebx,esp
  407792:	cwde   
  407793:	mov    eax,0x69ba708b
  407798:	aas    
  407799:	jmp    0xf289:0x249f2427
  4077a0:	and    DWORD PTR [edi],eax
  4077a2:	ffree  st(3)
  4077a4:	neg    DWORD PTR [esi-0x61]
  4077a7:	push   esp
  4077a8:	mov    ebx,0xea14fa94
  4077ad:	cdq    
  4077ae:	push   ecx
  4077af:	repnz cmp BYTE PTR [esp+esi*8-0x66309f8d],dh
  4077b7:	mov    ch,0xdc
  4077b9:	mov    bl,0xd0
  4077bb:	sbb    al,BYTE PTR [ecx]
  4077bd:	push   cs
  4077be:	and    al,0x42
  4077c0:	shr    edi,1
  4077c2:	mov    eax,ds:0x63703d73
  4077c7:	fdiv   QWORD PTR [eax+0x16673b33]
  4077cd:	rcr    DWORD PTR [edi-0x7b],0x81
  4077d1:	dec    ebx
  4077d2:	jnp    0x40784d
  4077d4:	xchg   ecx,eax
  4077d5:	test   DWORD PTR [esi],esp
  4077d7:	lods   al,BYTE PTR ds:[esi]
  4077d8:	xchg   ebx,eax
  4077d9:	pop    esp
  4077da:	shr    bl,0x85
  4077dd:	xor    al,0x46
  4077df:	add    eax,0x17a25f98
  4077e4:	mov    ebx,0xeebf47d1
  4077e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077ea:	test   eax,0x54164108
  4077ef:	jp     0x407863
  4077f1:	js     0x407783
  4077f3:	mov    edx,0x79b36405
  4077f8:	push   ebp
  4077f9:	pop    es
  4077fa:	and    edi,esp
  4077fc:	inc    ecx
  4077fd:	xlat   BYTE PTR ds:[ebx]
  4077fe:	dec    ebp
  4077ff:	shl    DWORD PTR [ebx-0x7a2cf973],1
  407805:	mov    BYTE PTR [eax],ah
  407807:	and    bl,BYTE PTR [edx]
  407809:	jb     0x407835
  40780b:	jns    0x4077b2
  40780d:	out    0x94,al
  40780f:	sub    esi,0x49
  407812:	pop    edi
  407813:	mov    eax,0xb900efca
  407818:	in     eax,dx
  407819:	cmc    
  40781a:	xor    eax,DWORD PTR [eax]
  40781c:	and    esp,DWORD PTR [ebx+0x7d]
  40781f:	mov    al,ds:0x1d6d5901
  407824:	cwde   
  407825:	add    al,0x4e
  407827:	xor    dh,bh
  407829:	not    BYTE PTR [edx]
  40782b:	shl    DWORD PTR [esi+0x440c30b6],1
  407831:	ds and al,0x90
  407834:	fst    QWORD PTR [ebp-0x162714e9]
  40783a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40783b:	adc    BYTE PTR [ebx-0x123ed33d],0xe8
  407842:	and    BYTE PTR [esi-0x53],bh
  407845:	xor    DWORD PTR [ebp+0xe],ecx
  407848:	repz retf 0x2899
  40784c:	ret    
  40784d:	pop    eax
  40784e:	inc    eax
  40784f:	push   esp
  407850:	cld    
  407851:	pop    edx
  407852:	push   cs
  407853:	xchg   ebp,ebp
  407855:	retf   
  407856:	ret    
  407857:	mov    ebx,DWORD PTR [ecx+0x736ea44d]
  40785d:	cdq    
  40785e:	rol    DWORD PTR [esi-0x50],0x9
  407862:	in     eax,dx
  407863:	popf   
  407864:	dec    edx
  407865:	push   es
  407866:	inc    edx
  407867:	push   edx
  407868:	ret    
  407869:	call   DWORD PTR [ebx-0xaf11256]
  40786f:	push   cs
  407870:	cld    
  407871:	sub    edi,esi
  407873:	repz mov edx,DWORD PTR ds:0x413b4a
  40787a:	mov    edx,DWORD PTR [ebp-0x20]
  40787d:	mov    DWORD PTR [ebp-0x2c],0x4eb5
  407884:	mov    DWORD PTR ds:0x4427c0,0x3c9f
  40788e:	cmp    eax,DWORD PTR [edx]
  407890:	je     0x408082
  407896:	mov    edx,DWORD PTR ds:0x4105c3
  40789c:	and    DWORD PTR ds:0x445370,edx
  4078a2:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4078a9:	and    DWORD PTR ds:0x413b4e,0x0
  4078b3:	mov    edx,DWORD PTR ds:0x413b4e
  4078b9:	inc    edx
  4078ba:	mov    DWORD PTR ds:0x413b4e,edx
  4078c0:	cmp    DWORD PTR ds:0x413b4e,0x16
  4078c7:	jne    0x4078f0
  4078cd:	push   DWORD PTR [ebp-0x20]
  4078d0:	push   0x3477
  4078d5:	push   0x43fbf8
  4078da:	push   DWORD PTR [ebp-0x10]
  4078dd:	push   0x7aad
  4078e2:	push   0x3f84
  4078e7:	push   DWORD PTR [ebp-0x1c]
  4078ea:	call   DWORD PTR ds:0x43c4f4
  4078f0:	cmp    DWORD PTR ds:0x413b4e,0x13
  4078f7:	jb     0x4078b3
  4078fd:	lea    eax,[ebp-0xc]
  407900:	mov    DWORD PTR [ebp-0x10],eax
  407903:	xor    edx,edx
  407905:	xor    edx,DWORD PTR ds:0x43c8fc
  40790b:	mov    eax,ds:0x43fc10
  407910:	sub    edx,eax
  407912:	xor    edx,DWORD PTR [edx+eax*1]
  407915:	jmp    0x407a4c
  40791a:	lea    eax,[eax+ebx*1]
  40791d:	mov    WORD PTR [ebp+0x1d8d80],ds
  407923:	std    
  407924:	inc    esi
  407925:	nop
  407926:	leave  
  407927:	cmp    BYTE PTR ds:0x7c3565d8,0x7c
  40792e:	push   es
  40792f:	jg     0x4079ad
  407931:	jl     0x4078c6
  407933:	sti    
  407934:	xchg   ecx,eax
  407935:	sub    BYTE PTR [edi-0x2fd8f345],bl
  40793b:	mov    ah,0x49
  40793d:	jns    0x4079a6
  40793f:	pop    ss
  407940:	daa    
  407941:	std    
  407942:	jmp    0x3c5f23c8
  407947:	call   0x5881:0x259aaeb9
  40794e:	loop   0x407983
  407950:	mov    al,ds:0xecb62e47
  407955:	stos   DWORD PTR es:[edi],eax
  407956:	xchg   DWORD PTR [ebx-0x39],edi
  407959:	pop    ecx
  40795a:	lahf   
  40795b:	push   ds
  40795c:	loop   0x407983
  40795e:	jmp    0x68a46094
  407963:	sbb    BYTE PTR ds:0xf0e515dc,bh
  407969:	icebp  
  40796a:	call   0xf718:0x9132ffd5
  407971:	out    dx,eax
  407972:	push   ss
  407973:	sub    DWORD PTR [ecx+esi*2+0x543cf8d1],0xffffff9a
  40797b:	pop    ebp
  40797c:	rol    edx,0xfa
  40797f:	jne    0x407977
  407981:	stos   BYTE PTR es:[edi],al
  407982:	push   0x4ea286
  407987:	test   BYTE PTR [esp+edx*4-0x70],bh
  40798b:	cs ret 
  40798d:	sbb    bh,al
  40798f:	adc    BYTE PTR [esi-0x24afd296],0xc0
  407996:	repz pop edi
  407998:	fnstsw WORD PTR [edx]
  40799a:	dec    eax
  40799b:	and    BYTE PTR [edx-0x2b88e89e],dh
  4079a1:	lods   al,BYTE PTR ds:[esi]
  4079a2:	leave  
  4079a3:	xor    BYTE PTR [ecx+ebp*8-0x66],cl
  4079a7:	pop    ds
  4079a8:	add    ch,BYTE PTR [eax]
  4079aa:	cmp    esi,DWORD PTR [edx-0x2b]
  4079ad:	into   
  4079ae:	sbb    edx,esi
  4079b0:	and    al,0x5d
  4079b2:	sbb    DWORD PTR [ebx+0x65],edi
  4079b5:	fwait
  4079b6:	add    bh,dh
  4079b8:	mov    cl,0xcc
  4079ba:	jg     0x407947
  4079bc:	jmp    0xb2fc6fdc
  4079c1:	dec    ecx
  4079c2:	adc    eax,0x680b2b40
  4079c7:	js     0x40798f
  4079c9:	iret   
  4079ca:	jns    0x407963
  4079cc:	das    
  4079cd:	push   esi
  4079ce:	and    cl,dl
  4079d0:	xchg   edi,eax
  4079d1:	(bad)  
  4079d2:	cmp    eax,0x65776f14
  4079d7:	mov    eax,0x7a6c608a
  4079dc:	test   BYTE PTR [eax],cl
  4079de:	sbb    eax,0x8d81f0ab
  4079e3:	push   ss
  4079e4:	add    eax,0x8899f1b7
  4079e9:	mov    eax,ds:0x4e0e399e
  4079ee:	cmp    al,0xf6
  4079f0:	dec    esi
  4079f1:	sbb    al,al
  4079f3:	pop    ebx
  4079f4:	out    0x56,eax
  4079f6:	mov    ebp,0xd3f95cbf
  4079fb:	push   eax
  4079fc:	sub    dl,0xbb
  4079ff:	in     al,0x73
  407a01:	xor    eax,0x5ba1dacb
  407a06:	push   esp
  407a07:	cmc    
  407a08:	xor    esi,DWORD PTR [esi-0xc8c7ca9]
  407a0e:	loopne 0x407a60
  407a10:	mov    esi,0xd050a353
  407a15:	rcl    BYTE PTR [eax+ecx*8],1
  407a18:	stos   BYTE PTR es:[edi],al
  407a19:	cmp    bl,BYTE PTR [eax]
  407a1b:	cbw    
  407a1d:	das    
  407a1e:	cmp    DWORD PTR [edx],eax
  407a20:	pop    ecx
  407a21:	repnz fidivr DWORD PTR [ebx+0x74]
  407a25:	(bad)  
  407a26:	mov    ah,0x20
  407a28:	add    ebx,DWORD PTR [esi-0x68]
  407a2b:	or     ch,0xcf
  407a2e:	dec    ecx
  407a2f:	adc    eax,0x5ec0591e
  407a34:	inc    edi
  407a35:	scas   eax,DWORD PTR es:[edi]
  407a36:	imul   ecx,DWORD PTR [ecx+0x76b78967],0x31
  407a3d:	add    bl,BYTE PTR [edx]
  407a3f:	mov    BYTE PTR [ebx],cl
  407a41:	xlat   BYTE PTR ds:[ebx]
  407a42:	mov    ds:0xa5d6cc8,al
  407a47:	sub    DWORD PTR [ecx-0x74539bde],ebx
  407a4d:	inc    ebp
  407a4e:	lock mov DWORD PTR ds:0x43fbec,0x1e
  407a59:	cmp    DWORD PTR ds:0x43fbec,0x0
  407a60:	je     0x407aad
  407a66:	cmp    DWORD PTR ds:0x43fbec,0x10
  407a6d:	jne    0x407a7f
  407a73:	push   DWORD PTR [ebp-0x1c]
  407a76:	push   DWORD PTR [ebp-0x18]
  407a79:	call   DWORD PTR ds:0x43c4f8
  407a7f:	cmp    DWORD PTR ds:0x43fbec,0x11
  407a86:	jne    0x407a99
  407a8c:	mov    edx,DWORD PTR ds:0x43fbec
  407a92:	dec    edx
  407a93:	mov    DWORD PTR ds:0x43fbec,edx
  407a99:	xor    edx,edx
  407a9b:	add    edx,DWORD PTR ds:0x43fbec
  407aa1:	dec    edx
  407aa2:	mov    DWORD PTR ds:0x43fbec,edx
  407aa8:	jmp    0x407a59
  407aad:	mov    edx,DWORD PTR [eax]
  407aaf:	imul   edx,edx,0xf89ea9e0
  407ab5:	mov    DWORD PTR [eax],edx
  407ab7:	mov    eax,DWORD PTR [ebp-0xc]
  407aba:	cmp    eax,0x1fe34420
  407abf:	je     0x407c13
  407ac5:	mov    eax,DWORD PTR [ebp-0x1c]
  407ac8:	jmp    0x407bff
  407acd:	(bad)  
  407ace:	fsub   DWORD PTR [edx+0x76]
  407ad1:	jp     0x407a69
  407ad3:	jp     0x407b2d
  407ad5:	mov    ch,0xbf
  407ad7:	xchg   ebp,eax
  407ad8:	fistp  WORD PTR [edi]
  407ada:	pop    esp
  407adb:	jns    0x407ade
  407add:	getsec 
  407adf:	jl     0x407b5d
  407ae1:	push   es
  407ae2:	jg     0x407b60
  407ae4:	jl     0x407a76
  407ae6:	ds aad 0x60
  407ae9:	sub    eax,0xfe4debc9
  407aee:	sbb    eax,0x646939ec
  407af3:	fild   QWORD PTR [esi]
  407af5:	add    BYTE PTR [edi],cl
  407af7:	aam    0xb
  407af9:	adc    edx,0x2a
  407afc:	jp     0x407b37
  407afe:	sbb    DWORD PTR [esp+ebp*4],ebx
  407b01:	inc    edi
  407b02:	xlat   BYTE PTR ds:[ebx]
  407b03:	sbb    eax,eax
  407b05:	inc    edx
  407b06:	mov    al,ds:0x8b9f5193
  407b0b:	lds    edx,FWORD PTR [ebx]
  407b0d:	sbb    cl,BYTE PTR [ebp+0x4cbbf7a8]
  407b13:	push   esp
  407b14:	lock push eax
  407b17:	inc    DWORD PTR [ebp+0x45]
  407b1a:	xchg   ecx,eax
  407b1b:	rol    BYTE PTR [ecx+eax*8-0x50],0xff
  407b20:	pop    ebp
  407b21:	in     eax,0x29
  407b23:	push   cs
  407b24:	cli    
  407b25:	shl    BYTE PTR [ebx],0x5f
  407b28:	push   ds
  407b29:	xor    BYTE PTR [ebx+0x671a214e],bh
  407b2f:	fwait
  407b30:	scas   al,BYTE PTR es:[edi]
  407b31:	mov    edx,0xee5ce4a3
  407b36:	loope  0x407b7e
  407b38:	idiv   DWORD PTR [edx]
  407b3a:	outs   dx,BYTE PTR ds:[esi]
  407b3b:	rcl    DWORD PTR [esi-0x5a],0xf
  407b3f:	(bad)  
  407b40:	aad    0xa4
  407b42:	mov    ds:0xc4af8c5f,eax
  407b47:	push   ss
  407b48:	jmp    0x407b24
  407b4a:	fimul  DWORD PTR fs:[esi]
  407b4d:	sysenter 
  407b4f:	fst    DWORD PTR [ecx]
  407b51:	jne    0x407b37
  407b53:	add    BYTE PTR [ecx-0x3e],al
  407b56:	adc    DWORD PTR [edx+ecx*1],esp
  407b59:	ins    BYTE PTR es:[edi],dx
  407b5a:	inc    edi
  407b5b:	scas   eax,DWORD PTR es:[edi]
  407b5c:	add    bl,dh
  407b5e:	mov    eax,0x37100bbb
  407b63:	dec    esi
  407b64:	xchg   BYTE PTR [eax+0x60],cl
  407b67:	adc    edi,DWORD PTR [ebx+eiz*4]
  407b6a:	pop    ds
  407b6b:	aaa    
  407b6c:	ds add edx,eax
  407b6f:	ret    
  407b70:	push   ebx
  407b71:	jo     0x407bd1
  407b73:	dec    eax
  407b74:	and    DWORD PTR [ebx+0x37],eax
  407b77:	enter  0x45dd,0xa
  407b7b:	xlat   BYTE PTR ds:[ebx]
  407b7c:	mov    esi,0x62e4a718
  407b81:	jmp    0x82ea:0x92a2aa7f
  407b88:	adc    esp,ebx
  407b8a:	dec    eax
  407b8b:	cmp    DWORD PTR [ecx],eax
  407b8d:	repnz mov ebp,0xeb2a52a3
  407b93:	xor    edi,DWORD PTR [eax+0x4d]
  407b96:	stos   DWORD PTR es:[edi],eax
  407b97:	popa   
  407b98:	and    cl,al
  407b9a:	mov    BYTE PTR ds:0x41ee7c4a,bh
  407ba0:	mov    edi,0x4780a66d
  407ba5:	and    al,ch
  407ba7:	dec    esi
  407ba8:	outs   dx,BYTE PTR ds:[esi]
  407ba9:	dec    ebx
  407baa:	pusha  
  407bab:	sub    edx,0x48
  407bae:	clc    
  407baf:	jnp    0x407c22
  407bb1:	mov    esi,0x6462dc11
  407bb6:	mov    bl,0xf1
  407bb8:	sar    BYTE PTR [eax+0x5865ed36],0xcc
  407bbf:	fwait
  407bc0:	imul   ebx,DWORD PTR [edi],0xffffffbc
  407bc3:	cmp    al,0x5a
  407bc5:	pop    esi
  407bc6:	retf   
  407bc7:	or     ebx,DWORD PTR [edi+edi*2-0x66]
  407bcb:	jno    0x407c01
  407bcd:	xchg   esi,eax
  407bce:	and    al,BYTE PTR [edi+0x3bb7d4e9]
  407bd4:	pop    ecx
  407bd5:	jno    0x407c36
  407bd7:	push   cs
  407bd8:	aam    0x16
  407bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bdb:	xchg   BYTE PTR [edi-0x68e7f9ee],ah
  407be1:	lds    ecx,FWORD PTR [ecx]
  407be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407be4:	leave  
  407be5:	push   eax
  407be6:	push   ebp
  407be7:	stos   BYTE PTR es:[edi],al
  407be8:	not    BYTE PTR [ecx]
  407bea:	retf   
  407beb:	jae    0x407c26
  407bed:	jge    0x407b98
  407bef:	xor    eax,0x66f92fc8
  407bf4:	cdq    
  407bf5:	sub    BYTE PTR [ebp*8+0x202f4a8a],dh
  407bfc:	daa    
  407bfd:	es in  eax,dx
  407bff:	or     DWORD PTR [eax],0x60751c90
  407c05:	mov    eax,DWORD PTR [ebp-0x8]
  407c08:	xor    eax,ecx
  407c0a:	add    eax,esi
  407c0c:	pop    edi
  407c0d:	pop    esi
  407c0e:	pop    ebx
  407c0f:	leave  
  407c10:	ret    0x4
  407c13:	mov    eax,DWORD PTR [ebp-0xc]
  407c16:	add    eax,DWORD PTR [ebp-0x18]
  407c19:	cmp    eax,0x188271cd
  407c1e:	je     0x407d69
  407c24:	mov    eax,DWORD PTR [ebp-0x10]
  407c27:	and    DWORD PTR [eax],0x751c9d
  407c2d:	jmp    0x407c05
  407c32:	jmp    0x407d69
  407c37:	jnp    0x407be9
  407c39:	lds    edx,FWORD PTR [eax+0x5b7da5fd]
  407c3f:	cmp    ah,BYTE PTR [ebp+0x70]
  407c42:	adc    eax,0x7ae26f6a
  407c47:	sub    DWORD PTR [esi],esi
  407c49:	jl     0x407cc7
  407c4b:	push   es
  407c4c:	jg     0x407cca
  407c4e:	jl     0x407bdf
  407c50:	std    
  407c51:	push   esp
  407c52:	fldcw  WORD PTR [ebp+0x36]
  407c55:	cwde   
  407c56:	gs pop ebx
  407c58:	add    BYTE PTR ds:0x2487bc0e,bh
  407c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c5f:	out    0x5d,al
  407c61:	into   
  407c62:	icebp  
  407c63:	jae    0x407c0b
  407c65:	push   ecx
  407c66:	lahf   
  407c67:	sbb    al,0x2c
  407c69:	push   ebx
  407c6a:	lods   al,BYTE PTR ds:[esi]
  407c6c:	or     eax,0x1e2d8199
  407c71:	inc    ecx
  407c72:	es sub al,0xc2
  407c75:	sbb    bh,ah
  407c77:	push   ecx
  407c78:	dec    esp
  407c79:	inc    ecx
  407c7a:	xor    eax,0x1cd93427
  407c7f:	cmp    DWORD PTR [ebx],edx
  407c81:	mov    BYTE PTR [ecx-0x385e61a6],al
  407c87:	cmp    ebp,DWORD PTR [ebx-0xae56991]
  407c8d:	repnz pop esp
  407c8f:	test   eax,0x27295317
  407c94:	cs jl  0x407cd5
  407c97:	add    al,0xce
  407c99:	adc    dl,dh
  407c9b:	retf   0x10ef
  407c9e:	or     esp,eax
  407ca0:	add    eax,0x844faa5
  407ca5:	cmp    BYTE PTR [ebp+0xac96165],ch
  407cab:	clc    
  407cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cad:	xchg   esi,eax
  407cae:	push   edi
  407caf:	cmp    DWORD PTR [eax+0x442676dc],ecx
  407cb5:	(bad)  
  407cb6:	jmp    FWORD PTR [eax-0x17c8103d]
  407cbc:	(bad)  
  407cbd:	aaa    
  407cbe:	mov    eax,0xe3845cdc
  407cc3:	jne    0x407cf2
  407cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cc6:	lods   eax,DWORD PTR ds:[esi]
  407cc7:	mov    bl,0x67
  407cc9:	call   0x78de444e
  407cce:	sub    bl,0x74
  407cd1:	ja     0x407cd4
  407cd3:	mov    al,0x6d
  407cd5:	fist   WORD PTR [ecx+0x3ab69d9]
  407cdb:	adc    al,0xcf
  407cdd:	fist   DWORD PTR [edi]
  407cdf:	xor    al,0xd5
  407ce1:	loope  0x407ce9
  407ce3:	mov    bh,0xdd
  407ce5:	fisubr DWORD PTR [bp+si]
  407ce8:	test   BYTE PTR [esi+0x2a],ch
  407ceb:	add    al,0x61
  407ced:	repz rcr ecx,0x97
  407cf1:	test   al,0x95
  407cf3:	push   0x693ec6b6
  407cf8:	mov    eax,DWORD PTR [ebx-0x6a031698]
  407cfe:	xor    BYTE PTR [ebx-0x14e79d0b],ch
  407d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d05:	xchg   esi,eax
  407d06:	pop    ecx
  407d07:	jp     0x407d09
  407d09:	jmp    0xf759:0xcc3ba4f7
  407d10:	test   al,0xfe
  407d12:	arpl   WORD PTR ds:0xdccf9dc4,si
  407d18:	fst    QWORD PTR [esp+esi*8-0xe]
  407d1c:	xchg   DWORD PTR [edx+0x48],esp
  407d1f:	pushf  
  407d20:	mov    dl,0x3c
  407d22:	jg     0x407d3e
  407d24:	pop    edi
  407d25:	std    
  407d26:	dec    esi
  407d27:	adc    dh,al
  407d29:	xor    bl,BYTE PTR [ebx-0x65]
  407d2c:	rcr    ebp,1
  407d2e:	dec    edi
  407d2f:	or     ecx,eax
  407d31:	or     ecx,ebx
  407d33:	push   es
  407d34:	sti    
  407d35:	pop    ss
  407d36:	mov    ebp,0xac7f870b
  407d3b:	add    eax,0x81bea35b
  407d40:	(bad)  
  407d41:	push   0x2a
  407d43:	jmp    0x8cae2ba5
  407d48:	in     al,0x66
  407d4a:	in     eax,0x9
  407d4c:	je     0x407ced
  407d4e:	or     ebx,DWORD PTR [ebp-0x8642869]
  407d54:	xchg   ebp,eax
  407d55:	ror    DWORD PTR ds:0x39c4605,0x48
  407d5c:	cmp    al,0xa6
  407d5e:	mov    ah,0x26
  407d60:	xor    al,BYTE PTR [ebp+0x458e7576]
  407d66:	(bad)  
  407d68:	sahf   
  407d69:	mov    eax,DWORD PTR [ebp-0xc]
  407d6c:	mov    edx,DWORD PTR [ebp-0x18]
  407d6f:	or     eax,edx
  407d71:	cmp    eax,0xffff6dad
  407d76:	je     0x407ec1
  407d7c:	mov    eax,DWORD PTR [ebp-0x10]
  407d7f:	jmp    0x407eb6
  407d84:	push   edi
  407d85:	add    BYTE PTR [esi-0x1b],bh
  407d88:	jge    0x407d6f
  407d8a:	jnp    0x407d26
  407d8c:	and    al,BYTE PTR [ebx-0x2b538a9c]
  407d92:	inc    edi
  407d93:	xlat   BYTE PTR ds:[ebx]
  407d94:	xor    ecx,ecx
  407d96:	jl     0x407e14
  407d98:	push   es
  407d99:	jg     0x407e17
  407d9b:	jl     0x407dc0
  407d9d:	pusha  
  407d9e:	fs sahf 
  407da0:	retf   
  407da1:	mov    dh,0x86
  407da3:	mov    ch,0xea
  407da5:	sbb    BYTE PTR [ebx+0x27],ch
  407da8:	test   ebp,esp
  407daa:	ret    0x4fe3
  407dad:	and    eax,0x645d6fb
  407db2:	repz enter 0x101b,0x7d
  407db7:	mov    ds:0x4b2311ad,eax
  407dbc:	mov    ds:0x398286af,eax
  407dc1:	pushf  
  407dc2:	std    
  407dc3:	loope  0x407e17
  407dc5:	jg     0x407df6
  407dc7:	(bad)  
  407dc8:	jae    0x407ddc
  407dca:	jnp    0x407d66
  407dcc:	mov    DWORD PTR [edx+0x4c2e4af0],esp
  407dd2:	int3   
  407dd3:	aaa    
  407dd4:	or     edi,DWORD PTR [ecx-0x4686abca]
  407dda:	pop    ds
  407ddb:	xchg   edi,eax
  407ddc:	mov    esi,0xcc6c7d3f
  407de1:	add    al,dh
  407de3:	sar    BYTE PTR [eax+edi*4],1
  407de6:	inc    eax
  407de7:	xchg   ebx,eax
  407de8:	mov    esi,0x753bd638
  407ded:	lahf   
  407dee:	gs enter 0x8746,0xbf
  407df3:	adc    ebp,DWORD PTR [esi]
  407df5:	sahf   
  407df6:	inc    ebp
  407df7:	cdq    
  407df8:	mov    dl,0xf6
  407dfa:	push   esi
  407dfb:	mov    edx,0xcd6120b4
  407e00:	xchg   edi,eax
  407e01:	(bad)
  407e04:	xor    BYTE PTR [ebp+0x6b81bedc],dh
  407e0a:	dec    edi
  407e0b:	pop    esp
  407e0c:	or     DWORD PTR [edx],ebx
  407e0e:	jnp    0x407dd3
  407e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e11:	shr    BYTE PTR [ebx],1
  407e13:	sub    ebx,ebp
  407e15:	cmp    cl,bl
  407e17:	or     al,0x27
  407e19:	shl    DWORD PTR [edx-0x10d390e9],0x56
  407e20:	dec    esp
  407e21:	dec    esi
  407e22:	and    DWORD PTR [esp+ebp*4+0x9],edi
  407e26:	and    ah,0x88
  407e29:	sbb    eax,0x745a0c7
  407e2e:	es pop esi
  407e30:	adc    eax,0x782b6982
  407e35:	stos   BYTE PTR es:[edi],al
  407e36:	adc    eax,0x3779b841
  407e3b:	lea    eax,ds:0xef9de1fd
  407e41:	cld    
  407e42:	pop    DWORD PTR ss:[ebx]
  407e45:	gs aas 
  407e47:	stos   BYTE PTR es:[edi],al
  407e48:	cmp    al,BYTE PTR [ecx]
  407e4a:	mov    bh,al
  407e4c:	ss add edx,DWORD PTR cs:0x1c4c62fa
  407e54:	xchg   ebp,ebx
  407e56:	(bad)  
  407e57:	xchg   ebp,eax
  407e58:	and    BYTE PTR [ecx],dl
  407e5a:	add    eax,0x2dfae052
  407e5f:	and    eax,0xc6f518f8
  407e64:	mov    al,ds:0x66b72558
  407e69:	inc    ebp
  407e6a:	ret    
  407e6b:	test   BYTE PTR [esp+edx*8-0x5ca7d054],bl
  407e72:	enter  0xcc48,0x2a
  407e76:	scas   al,BYTE PTR es:[edi]
  407e77:	dec    edi
  407e78:	(bad)  
  407e7a:	jne    0x407e8e
  407e7c:	aas    
  407e7d:	cdq    
  407e7e:	jecxz  0x407ee3
  407e80:	xor    esp,0x78
  407e83:	(bad)  
  407e84:	xlat   BYTE PTR ds:[ebx]
  407e85:	xchg   esi,eax
  407e86:	(bad)  
  407e87:	push   ebp
  407e88:	je     0x407ed3
  407e8a:	cmp    al,0x55
  407e8c:	outs   dx,DWORD PTR ds:[esi]
  407e8d:	xor    al,0x9f
  407e8f:	ins    BYTE PTR es:[edi],dx
  407e90:	mov    ch,0x9a
  407e92:	lock ja 0x407e5d
  407e95:	lock adc eax,0xa258dc6c
  407e9b:	ins    DWORD PTR es:[edi],dx
  407e9c:	fbstp  TBYTE PTR [ecx]
  407e9e:	mov    ch,0x63
  407ea0:	je     0x407e8c
  407ea2:	jecxz  0x407f01
  407ea4:	mov    BYTE PTR [edi-0x54],ch
  407ea7:	pop    ebp
  407ea8:	push   cs
  407ea9:	call   0x3e9c8d3d
  407eae:	cs cli 
  407eb0:	push   edx
  407eb1:	jne    0x407ee9
  407eb3:	ins    BYTE PTR es:[edi],dx
  407eb4:	mov    dl,0x27
  407eb6:	xor    DWORD PTR [eax],0x2650fa8f
  407ebc:	jmp    0x407c05
  407ec1:	mov    ax,WORD PTR [ebp-0x4]
  407ec5:	mov    edi,DWORD PTR [ebp+0x8]
  407ec8:	mov    edi,DWORD PTR [edi]
  407eca:	mov    edx,0x8a42
  407ecf:	xor    ax,dx
  407ed2:	mov    edx,0x3b08
  407ed7:	add    ax,dx
  407eda:	cmp    ax,WORD PTR [edi]
  407edd:	je     0x408061
  407ee3:	mov    eax,DWORD PTR [ebp-0x14]
  407ee6:	xor    eax,ecx
  407ee8:	jmp    0x40801f
  407eed:	(bad)  
  407eee:	pop    edx
  407eef:	fst    st(3)
  407ef1:	jge    0x407f46
  407ef3:	out    0x5d,al
  407ef5:	jnp    0x407ee7
  407ef7:	inc    esi
  407ef8:	sub    DWORD PTR [edi-0xd],ebx
  407efb:	mov    al,BYTE PTR [ebx+0x7c7cc8dd]
  407f01:	push   es
  407f02:	jg     0x407f80
  407f04:	jl     0x407f5e
  407f06:	sbb    dl,bl
  407f08:	out    dx,al
  407f09:	(bad)  
  407f0a:	(bad)  
  407f0c:	sub    al,0xa
  407f0e:	jg     0x407eb0
  407f10:	adc    ebx,edx
  407f12:	stos   DWORD PTR es:[edi],eax
  407f13:	aad    0x38
  407f15:	bound  ebx,QWORD PTR [edi-0x58]
  407f18:	fsincos 
  407f1a:	add    al,0x12
  407f1c:	push   esp
  407f1d:	in     al,0xcd
  407f1f:	inc    ebx
  407f20:	xchg   ecx,eax
  407f21:	cmp    ebp,eax
  407f23:	fdivp  st(7),st
  407f25:	jmp    0x85bd5e0e
  407f2a:	(bad)  
  407f2b:	fwait
  407f2c:	jb     0x407f0f
  407f2e:	cmp    DWORD PTR [edi+ebx*2],0xb2a13b8e
  407f35:	aam    0x57
  407f37:	push   ss
  407f38:	cwde   
  407f39:	add    al,bh
  407f3b:	xchg   edx,eax
  407f3c:	push   ecx
  407f3d:	jmp    0x9196:0x9144442f
  407f44:	add    bh,bl
  407f46:	jne    0x407f6c
  407f48:	dec    eax
  407f49:	in     al,0xcb
  407f4b:	lea    ebx,[ebx]
  407f4d:	in     al,dx
  407f4e:	xor    eax,0xf3c55e8f
  407f53:	out    dx,al
  407f54:	xor    DWORD PTR [eax],eax
  407f56:	push   ebp
  407f57:	xchg   esi,eax
  407f58:	dec    edx
  407f59:	cmp    eax,esi
  407f5b:	jb     0x407eff
  407f5d:	dec    edi
  407f5e:	and    edi,ecx
  407f60:	aas    
  407f61:	adc    al,BYTE PTR [esi+0x29851593]
  407f67:	xor    eax,0x94410cf7
  407f6c:	jecxz  0x407f68
  407f6e:	push   ebp
  407f6f:	dec    bx
  407f71:	aad    0xda
  407f73:	lahf   
  407f74:	inc    ebx
  407f75:	cmp    DWORD PTR ds:0x8805b201,esp
  407f7b:	xchg   ebp,eax
  407f7c:	loopne 0x407f39
  407f7e:	cmp    DWORD PTR [esi-0x3e4e7007],ecx
  407f84:	sbb    BYTE PTR [edx+ebp*1+0x46],dl
  407f88:	cmp    eax,0x4be633d0
  407f8d:	test   al,0x17
  407f8f:	inc    eax
  407f90:	inc    ebp
  407f91:	imul   ecx,DWORD PTR cs:[ecx+ebp*8-0x27],0x1
  407f97:	dec    eax
  407f98:	enter  0x7163,0xf1
  407f9c:	fldpi  
  407f9e:	and    al,0xb7
  407fa0:	mov    ds:0xab83cff2,al
  407fa5:	ja     0x407fb2
  407fa7:	icebp  
  407fa8:	ds in  eax,dx
  407faa:	inc    eax
  407fab:	cmp    al,0xf1
  407fad:	jge    0x407f34
  407faf:	imul   ecx,DWORD PTR [edx-0x78],0xe78cc7c0
  407fb6:	xor    BYTE PTR [esi+0x445eb375],bh
  407fbc:	sbb    BYTE PTR [ebp+0x3674e68d],cl
  407fc2:	or     eax,0x984a0346
  407fc7:	mov    BYTE PTR [eax+0x619339e5],cl
  407fcd:	xor    al,0x1e
  407fcf:	xchg   edi,eax
  407fd0:	(bad)  
  407fd1:	js     0x407f9d
  407fd3:	jl     0x407f6a
  407fd5:	sbb    cl,BYTE PTR [esi]
  407fd7:	loop   0x407ff9
  407fd9:	ror    BYTE PTR [edx-0x5],0x2e
  407fdd:	imul   ebx,DWORD PTR [eax],0xffffff80
  407fe0:	retf   0x4457
  407fe3:	dec    edi
  407fe4:	mov    WORD PTR [esi],es
  407fe6:	push   0xc
  407fe8:	cld    
  407fe9:	mov    BYTE PTR [eax-0x48d3f51c],0xa8
  407ff0:	dec    ebx
  407ff1:	es xor eax,0xc2d05c78
  407ff7:	xchg   ecx,eax
  407ff8:	jns    0x407fc4
  407ffa:	mov    bl,0xdc
  407ffc:	dec    ebp
  407ffd:	mov    al,ds:0xb3bbf00e
  408002:	inc    ecx
  408003:	xor    BYTE PTR [edx+0x53b18be],ah
  408009:	sub    DWORD PTR [esi+0x67],edi
  40800c:	inc    esi
  40800d:	adc    eax,0xc6405aef
  408012:	popf   
  408013:	shl    DWORD PTR [esi+0x53],1
  408016:	mov    ebx,0x523b8a9f
  40801b:	mov    DWORD PTR [edi-0x53],0x89c60315
  408022:	inc    ebp
  408023:	fmul   QWORD PTR [ebx-0x749927bb]
  408029:	jge    0x407fff
  40802b:	mov    ebx,0x8a42
  408030:	xor    di,bx
  408033:	add    di,dx
  408036:	movzx  edx,di
  408039:	mov    edi,DWORD PTR [ebp-0x8]
  40803c:	xor    edi,ecx
  40803e:	lea    edx,[edx+edi*1+0x32729e]
  408045:	add    DWORD PTR [eax],edx
  408047:	mov    eax,DWORD PTR [ebp-0x20]
  40804a:	mov    edx,DWORD PTR [ebp-0x8]
  40804d:	mov    edi,DWORD PTR [ebp-0x24]
  408050:	xor    edx,ecx
  408052:	add    edx,esi
  408054:	imul   edx,edi
  408057:	sub    DWORD PTR [eax],edx
  408059:	mov    eax,DWORD PTR [ebp-0x14]
  40805c:	jmp    0x407c08
  408061:	mov    eax,DWORD PTR [ebp-0xc]
  408064:	mov    edx,DWORD PTR [ebp-0x18]
  408067:	xor    eax,edx
  408069:	cmp    eax,0xe77c698d
  40806e:	je     0x407c05
  408074:	mov    eax,DWORD PTR [ebp-0x10]
  408077:	add    DWORD PTR [eax],0x7403501
  40807d:	jmp    0x407c05
  408082:	mov    eax,DWORD PTR [ebp-0x1c]
  408085:	cmp    DWORD PTR [eax],edi
  408087:	je     0x407c05
  40808d:	mov    eax,0x800f1c9c
  408092:	jmp    0x407c0c
  408097:	push   ebp
  408098:	mov    ebp,esp
  40809a:	push   ecx
  40809b:	xor    eax,eax
  40809d:	push   ecx
  40809e:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4080a5:	sub    edx,0x2ef1
  4080ab:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  4080b2:	xor    ecx,ecx
  4080b4:	or     ecx,DWORD PTR ds:0x445378
  4080ba:	sbb    ecx,DWORD PTR ds:0x4105d3
  4080c0:	mov    DWORD PTR ds:0x445378,ecx
  4080c6:	mov    eax,DWORD PTR [ebp-0x4]
  4080c9:	dec    DWORD PTR ds:0x4105d3
  4080cf:	push   esi
  4080d0:	add    DWORD PTR ds:0x4427a4,0x9cd
  4080da:	mov    esi,DWORD PTR [ebp-0x8]
  4080dd:	xor    ecx,0x7d4d
  4080e3:	mov    edx,0x7510857
  4080e8:	xor    eax,edx
  4080ea:	adc    DWORD PTR ds:0x413b52,0x7d5d
  4080f4:	xor    esi,edx
  4080f6:	and    DWORD PTR ds:0x445368,0x0
  408100:	mov    ecx,DWORD PTR ds:0x445368
  408106:	inc    ecx
  408107:	mov    DWORD PTR ds:0x445368,ecx
  40810d:	cmp    DWORD PTR ds:0x445368,0x1b
  408114:	jne    0x408125
  40811a:	push   0x4106c5
  40811f:	call   DWORD PTR ds:0x43c858
  408125:	cmp    DWORD PTR ds:0x445368,0x13
  40812c:	jb     0x408100
  408132:	mov    ecx,0x32729e
  408137:	add    esi,ecx
  408139:	jmp    0x4081e2
  40813e:	xchg   esp,eax
  40813f:	and    al,ch
  408141:	and    al,0x5d
  408143:	out    0x6d,eax
  408145:	mov    ds:0x3d17a190,al
  40814a:	cmp    DWORD PTR [edi],ebp
  40814c:	xchg   ecx,eax
  40814d:	out    0xe7,eax
  40814f:	retf   
  408150:	jl     0x4081ce
  408152:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  408156:	je     0x408148
  408158:	inc    esp
  408159:	pop    ss
  40815a:	idiv   cl
  40815c:	es jp  0x4081bb
  40815f:	mov    cl,0xf5
  408161:	in     eax,0xf3
  408163:	in     eax,0x1e
  408165:	sbb    BYTE PTR [bp+di-0x1a],al
  408169:	push   edx
  40816a:	push   eax
  40816b:	(bad)  
  40816c:	aaa    
  40816d:	scas   eax,DWORD PTR es:[edi]
  40816e:	fnstenv [eax+0x6f]
  408171:	fs dec ecx
  408173:	and    eax,0x5f479e08
  408178:	call   FWORD PTR [ebx-0x71]
  40817b:	retf   
  40817c:	out    dx,al
  40817d:	repnz push eax
  40817f:	push   edi
  408180:	shl    DWORD PTR [ecx+0xc],1
  408183:	mov    ah,BYTE PTR [eax+0x67]
  408186:	jmp    0x408201
  408188:	jne    0x408124
  40818a:	popa   
  40818b:	scas   eax,DWORD PTR es:[edi]
  40818c:	inc    ebp
  40818d:	push   ds
  40818e:	mov    eax,0xe4dccebd
  408193:	cwde   
  408194:	in     al,0xe3
  408196:	nop
  408197:	shr    BYTE PTR [eax+0x99330b1],cl
  40819d:	in     eax,0xba
  40819f:	pop    ebx
  4081a0:	and    ah,bl
  4081a2:	add    BYTE PTR [edx-0x7b0fec1c],bh
  4081a8:	xor    dh,dh
  4081aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081ab:	xlat   BYTE PTR ds:[ebx]
  4081ac:	sbb    esp,0xc5b26f5b
  4081b2:	sub    al,0x83
  4081b4:	call   0xcae7:0x883ab804
  4081bb:	(bad)  [ebp+0x591c0ebb]
  4081c1:	ins    BYTE PTR es:[edi],dx
  4081c2:	jge    0x4081b9
  4081c4:	dec    esp
  4081c5:	cmp    edx,DWORD PTR [ecx+0x737ff1c3]
  4081cb:	ins    BYTE PTR es:[edi],dx
  4081cc:	inc    ebx
  4081cd:	xor    eax,0x65f99576
  4081d2:	dec    esp
  4081d3:	sar    BYTE PTR [eax-0x5c51c17a],1
  4081d9:	stos   BYTE PTR es:[edi],al
  4081da:	sbb    bh,dh
  4081dc:	push   es
  4081dd:	sub    al,BYTE PTR [esi]
  4081df:	mov    esi,DWORD PTR [esi-0x6a]
  4081e2:	add    eax,ecx
  4081e4:	imul   eax,esi
  4081e7:	mov    esi,DWORD PTR [ebp+0xc]
  4081ea:	mov    DWORD PTR ds:0x4427a8,0x538a
  4081f4:	cmp    esi,eax
  4081f6:	jne    0x40826b
  4081fc:	mov    DWORD PTR ds:0x4427ac,0x1c
  408206:	cmp    DWORD PTR ds:0x4427ac,0x0
  40820d:	je     0x408255
  408213:	cmp    DWORD PTR ds:0x4427ac,0xe
  40821a:	jne    0x408229
  408220:	push   DWORD PTR [ebp-0x14]
  408223:	call   DWORD PTR ds:0x43c4fc
  408229:	cmp    DWORD PTR ds:0x4427ac,0xf
  408230:	jne    0x408243
  408236:	mov    esi,DWORD PTR ds:0x4427ac
  40823c:	dec    esi
  40823d:	mov    DWORD PTR ds:0x4427ac,esi
  408243:	mov    esi,DWORD PTR ds:0x4427ac
  408249:	dec    esi
  40824a:	mov    DWORD PTR ds:0x4427ac,esi
  408250:	jmp    0x408206
  408255:	mov    eax,DWORD PTR [ebp-0x4]
  408258:	mov    esi,DWORD PTR [ebp-0x8]
  40825b:	xor    eax,edx
  40825d:	xor    esi,edx
  40825f:	add    eax,ecx
  408261:	add    esi,ecx
  408263:	imul   eax,esi
  408266:	jmp    0x40834f
  40826b:	mov    eax,DWORD PTR [ebp+0xc]
  40826e:	mov    eax,DWORD PTR [eax+0x78]
  408271:	mov    DWORD PTR [ebp+0xc],eax
  408274:	mov    eax,DWORD PTR [ebp-0x4]
  408277:	mov    esi,DWORD PTR [ebp-0x8]
  40827a:	xor    eax,edx
  40827c:	xor    esi,edx
  40827e:	jmp    0x408327
  408283:	mov    edi,0x6a6fd0cd
  408288:	jns    0x4082cd
  40828a:	std    
  40828b:	ficomp WORD PTR [ebx+0x10]
  40828e:	jo     0x408215
  408290:	psubb  mm0,QWORD PTR [ebp+0x73]
  408294:	retf   0x7c7c
  408297:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  40829b:	xor    eax,0x807ea7a1
  4082a0:	pop    esp
  4082a1:	and    ecx,DWORD PTR [eax+0x27]
  4082a4:	adc    al,0xe2
  4082a6:	inc    esp
  4082a7:	mov    ecx,0xa6305ce8
  4082ac:	push   0x55d6183c
  4082b1:	out    dx,eax
  4082b2:	call   0x7236599
  4082b7:	jle    0x4082ce
  4082b9:	dec    edx
  4082ba:	and    ebp,DWORD PTR [esi-0x2f]
  4082bd:	call   0x1f5328fd
  4082c2:	into   
  4082c3:	call   DWORD PTR [esi+0x333c51ce]
  4082c9:	pop    ebp
  4082ca:	pop    ebp
  4082cb:	push   ss
  4082cc:	jecxz  0x408282
  4082ce:	leave  
  4082cf:	mov    ch,0x97
  4082d1:	mov    eax,ds:0x3f138002
  4082d6:	mov    eax,ds:0xdda903b8
  4082db:	xchg   ebp,eax
  4082dc:	push   eax
  4082dd:	xchg   BYTE PTR [edx+0x5b9fcd79],dl
  4082e3:	push   edi
  4082e4:	bound  eax,QWORD PTR [edi+0x64bb2c3d]
  4082ea:	out    dx,eax
  4082eb:	fistp  WORD PTR [edx+0x15c86afb]
  4082f1:	mul    bl
  4082f3:	sti    
  4082f4:	data16 jmp 0x408341
  4082f7:	daa    
  4082f8:	add    eax,0xa3d2e1b1
  4082fd:	adc    BYTE PTR [ebp-0x1c1f6649],ah
  408303:	cdq    
  408304:	and    eax,0x22c2bb58
  408309:	dec    edi
  40830a:	inc    esi
  40830b:	and    DWORD PTR [ebp-0x8],eax
  40830e:	lahf   
  40830f:	xchg   ecx,eax
  408310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408311:	(bad)  
  408312:	mov    ebx,0x8db54d39
  408317:	iret   
  408318:	cmp    BYTE PTR [edx+edi*1],dl
  40831b:	in     eax,dx
  40831c:	mov    ebp,0xc9dede50
  408321:	jmp    0x408326
  408323:	xchg   ecx,eax
  408324:	push   ds
  408325:	xchg   edx,eax
  408326:	ins    BYTE PTR es:[edi],dx
  408327:	add    eax,ecx
  408329:	add    esi,ecx
  40832b:	imul   eax,esi
  40832e:	mov    esi,DWORD PTR [ebp+0xc]
  408331:	cmp    esi,eax
  408333:	mov    eax,DWORD PTR [ebp-0x4]
  408336:	je     0x408258
  40833c:	xor    eax,edx
  40833e:	add    eax,ecx
  408340:	mov    ecx,DWORD PTR [ebp+0xc]
  408343:	imul   eax,ecx
  408346:	add    eax,DWORD PTR [ebp+0x8]
  408349:	mov    DWORD PTR [ebp+0xc],eax
  40834c:	mov    eax,DWORD PTR [ebp+0xc]
  40834f:	pop    esi
  408350:	leave  
  408351:	ret    0x8
  408354:	push   ebp
  408355:	mov    ebp,esp
  408357:	sub    esp,0xa0
  40835d:	push   0x43c2b8
  408362:	xor    DWORD PTR ds:0x445370,0x56f9
  40836c:	call   DWORD PTR ds:0x43c580
  408372:	adc    DWORD PTR ds:0x43fbd8,0x413b5e
  40837c:	test   eax,eax
  40837e:	mov    DWORD PTR ds:0x43fbdc,0xdf5
  408388:	je     0x40839f
  40838e:	or     DWORD PTR ds:0x4427bc,0x43fbe8
  408398:	xor    eax,eax
  40839a:	jmp    0x409294
  40839f:	sub    DWORD PTR ds:0x4427b4,0x43fbf4
  4083a9:	push   esi
  4083aa:	and    DWORD PTR ds:0x413b5e,0x0
  4083b4:	jmp    0x4083c6
  4083b9:	mov    esi,DWORD PTR ds:0x413b5e
  4083bf:	inc    esi
  4083c0:	mov    DWORD PTR ds:0x413b5e,esi
  4083c6:	cmp    DWORD PTR ds:0x413b5e,0x1f
  4083cd:	jae    0x408414
  4083d3:	cmp    DWORD PTR ds:0x413b5e,0x9
  4083da:	jne    0x4083eb
  4083e0:	push   0x3309
  4083e5:	call   DWORD PTR ds:0x43c85c
  4083eb:	cmp    DWORD PTR ds:0x413b5e,0x8
  4083f2:	jne    0x408405
  4083f8:	mov    esi,DWORD PTR ds:0x413b5e
  4083fe:	inc    esi
  4083ff:	mov    DWORD PTR ds:0x413b5e,esi
  408405:	jmp    0x4083b9
  40840a:	or     DWORD PTR ds:0x4427b8,0x7a7b
  408414:	mov    esi,0x876987
  408419:	mov    DWORD PTR ds:0x43fbe8,0x1efc
  408423:	push   esi
  408424:	push   0x43c2fc
  408429:	push   0x43c324
  40842e:	call   DWORD PTR ds:0x43c850
  408434:	mov    DWORD PTR ds:0x44537c,0x50e
  40843e:	cmp    eax,esi
  408440:	je     0x4084a1
  408446:	or     DWORD PTR ds:0x43fbd8,0x78e6
  408450:	push   0x98786856
  408455:	add    DWORD PTR ds:0x413b56,0x6d32
  40845f:	push   0x344
  408464:	adc    DWORD PTR ds:0x4105cf,0x5b99
  40846e:	push   0x545
  408473:	adc    DWORD PTR ds:0x43fbf4,0x2d37
  40847d:	push   0x675765
  408482:	sbb    DWORD PTR ds:0x4105c3,0x413b5e
  40848c:	push   0x67576
  408491:	push   0x86789768
  408496:	call   DWORD PTR ds:0x43c848
  40849c:	jmp    0x409293
  4084a1:	or     edx,0x6156
  4084a7:	mov    ecx,0xf89c8535
  4084ac:	and    esi,0x7fd
  4084b2:	mov    DWORD PTR [ebp-0x20],ecx
  4084b5:	sub    esi,0x48f6
  4084bb:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  4084c2:	lea    eax,[ebp-0x4c]
  4084c5:	adc    DWORD PTR ds:0x44537c,ebx
  4084cb:	mov    DWORD PTR [ebp-0x30],eax
  4084ce:	add    esi,DWORD PTR ds:0x43fbf8
  4084d4:	lea    eax,[ebp-0x54]
  4084d7:	mov    DWORD PTR [ebp-0x14],eax
  4084da:	mov    DWORD PTR ds:0x43fbfc,0x12
  4084e4:	cmp    DWORD PTR ds:0x43fbfc,0x0
  4084eb:	je     0x40853a
  4084f1:	cmp    DWORD PTR ds:0x43fbfc,0x6
  4084f8:	jne    0x408509
  4084fe:	push   0x8a27
  408503:	call   DWORD PTR ds:0x43c860
  408509:	cmp    DWORD PTR ds:0x43fbfc,0x7
  408510:	jne    0x408521
  408516:	mov    eax,ds:0x43fbfc
  40851b:	dec    eax
  40851c:	mov    ds:0x43fbfc,eax
  408521:	xor    eax,eax
  408523:	xor    eax,DWORD PTR ds:0x43fbfc
  408529:	dec    eax
  40852a:	mov    ds:0x43fbfc,eax
  40852f:	jmp    0x4084e4
  408534:	sbb    esi,DWORD PTR ds:0x445370
  40853a:	mov    eax,ds:0x43c1a0
  40853f:	and    DWORD PTR ds:0x44536c,0x0
  408549:	jmp    0x40855b
  40854e:	mov    esi,DWORD PTR ds:0x44536c
  408554:	inc    esi
  408555:	mov    DWORD PTR ds:0x44536c,esi
  40855b:	cmp    DWORD PTR ds:0x44536c,0x16
  408562:	jae    0x4085a2
  408568:	cmp    DWORD PTR ds:0x44536c,0x1d
  40856f:	jne    0x40858a
  408575:	push   0x61c5
  40857a:	push   0x7b2c
  40857f:	push   0x2e55
  408584:	call   DWORD PTR ds:0x43c864
  40858a:	jmp    0x40854e
  40858f:	movzx  edx,WORD PTR ds:0x4427b8
  408596:	sbb    edx,DWORD PTR ds:0x413b5a
  40859c:	mov    DWORD PTR ds:0x4427b8,edx
  4085a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4085a8:	xor    edx,edx
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR ds:0x445380,0x299a
  4085b6:	mov    edx,DWORD PTR [ebp-0x14]
  4085b9:	and    DWORD PTR ds:0x44536c,0x0
  4085c3:	xor    esi,esi
  4085c5:	add    esi,DWORD PTR ds:0x44536c
  4085cb:	inc    esi
  4085cc:	mov    DWORD PTR ds:0x44536c,esi
  4085d2:	cmp    DWORD PTR ds:0x44536c,0x27
  4085d9:	jne    0x4085f1
  4085df:	push   0x7f38
  4085e4:	push   0x1
  4085e6:	push   0x41080d
  4085eb:	call   DWORD PTR ds:0x43c868
  4085f1:	cmp    DWORD PTR ds:0x44536c,0x1d
  4085f8:	jb     0x4085c3
  4085fe:	and    DWORD PTR ds:0x4427ac,0x0
  408608:	xor    esi,esi
  40860a:	add    esi,DWORD PTR ds:0x4427ac
  408610:	inc    esi
  408611:	mov    DWORD PTR ds:0x4427ac,esi
  408617:	cmp    DWORD PTR ds:0x4427ac,0xa
  40861e:	jne    0x40862f
  408624:	push   0x40b4
  408629:	call   DWORD PTR ds:0x43c5cc
  40862f:	cmp    DWORD PTR ds:0x4427ac,0x9
  408636:	jne    0x408649
  40863c:	mov    esi,DWORD PTR ds:0x4427ac
  408642:	inc    esi
  408643:	mov    DWORD PTR ds:0x4427ac,esi
  408649:	cmp    DWORD PTR ds:0x4427ac,0x1b
  408650:	jb     0x408608
  408656:	or     DWORD PTR ds:0x43fbf8,0x1250
  408660:	push   ebx
  408661:	movzx  esi,BYTE PTR ds:0x43fbe8
  408668:	sub    esi,DWORD PTR ds:0x413b56
  40866e:	mov    DWORD PTR ds:0x43fbe8,esi
  408674:	mov    esi,0x7510857
  408679:	mov    DWORD PTR ds:0x413b56,0x4f36
  408683:	xor    eax,esi
  408685:	sub    DWORD PTR ds:0x445364,0x4427c0
  40868f:	push   edi
  408690:	mov    DWORD PTR ds:0x43fbe8,0x1b
  40869a:	cmp    DWORD PTR ds:0x43fbe8,0x0
  4086a1:	je     0x408750
  4086a7:	cmp    DWORD PTR ds:0x43fbe8,0xd
  4086ae:	jne    0x4086c9
  4086b4:	push   0x7f5c
  4086b9:	push   0x1
  4086bb:	push   DWORD PTR [ebp-0x18]
  4086be:	push   0x52f7
  4086c3:	call   DWORD PTR ds:0x43c5d0
  4086c9:	cmp    DWORD PTR ds:0x43fbe8,0xe
  4086d0:	jne    0x4086e3
  4086d6:	mov    edi,DWORD PTR ds:0x43fbe8
  4086dc:	dec    edi
  4086dd:	mov    DWORD PTR ds:0x43fbe8,edi
  4086e3:	mov    edi,DWORD PTR ds:0x43fbe8
  4086e9:	dec    edi
  4086ea:	mov    DWORD PTR ds:0x43fbe8,edi
  4086f0:	jmp    0x40869a
  4086f5:	and    DWORD PTR ds:0x445380,0x0
  4086ff:	mov    edi,DWORD PTR ds:0x445380
  408705:	inc    edi
  408706:	mov    DWORD PTR ds:0x445380,edi
  40870c:	cmp    DWORD PTR ds:0x445380,0x9
  408713:	jne    0x408729
  408719:	push   0x3065
  40871e:	push   0x34da
  408723:	call   DWORD PTR ds:0x43c86c
  408729:	cmp    DWORD PTR ds:0x445380,0x8
  408730:	jne    0x408743
  408736:	mov    edi,DWORD PTR ds:0x445380
  40873c:	inc    edi
  40873d:	mov    DWORD PTR ds:0x445380,edi
  408743:	cmp    DWORD PTR ds:0x445380,0x12
  40874a:	jb     0x4086ff
  408750:	mov    edi,0x32729e
  408755:	sbb    DWORD PTR ds:0x44537c,0x4105d3
  40875f:	add    eax,edi
  408761:	mov    DWORD PTR [edx],eax
  408763:	movzx  eax,BYTE PTR ds:0x4427a4
  40876a:	mov    eax,ds:0x43c41c
  40876f:	cmp    eax,0x23d14057
  408774:	mov    DWORD PTR ds:0x413b4e,0x37ed
  40877e:	mov    eax,DWORD PTR [ebp-0x18]
  408781:	mov    DWORD PTR ds:0x4427bc,0x441f
  40878b:	je     0x4087a5
  408791:	neg    ecx
  408793:	mov    ecx,DWORD PTR [ebp-0x20]
  408796:	xor    eax,esi
  408798:	add    eax,edi
  40879a:	imul   eax,ecx
  40879d:	mov    DWORD PTR [ebp-0x20],eax
  4087a0:	jmp    0x40903b
  4087a5:	xor    edx,DWORD PTR ds:0x4427a4
  4087ab:	xor    eax,esi
  4087ad:	add    eax,edi
  4087af:	and    DWORD PTR ds:0x43fbec,0x0
  4087b9:	mov    edx,DWORD PTR ds:0x43fbec
  4087bf:	inc    edx
  4087c0:	mov    DWORD PTR ds:0x43fbec,edx
  4087c6:	cmp    DWORD PTR ds:0x43fbec,0x1c
  4087cd:	jne    0x4087eb
  4087d3:	push   0x41080d
  4087d8:	push   0x5d39
  4087dd:	push   DWORD PTR [ebp-0x18]
  4087e0:	push   0x7a56
  4087e5:	call   DWORD PTR ds:0x43c870
  4087eb:	cmp    DWORD PTR ds:0x43fbec,0x11
  4087f2:	jb     0x4087b9
  4087f8:	mov    ds:0x43c2b0,eax
  4087fd:	mov    eax,DWORD PTR [ebp-0x20]
  408800:	xor    eax,esi
  408802:	inc    edx
  408803:	add    eax,edi
  408805:	movzx  edx,BYTE PTR ds:0x4427bc
  40880c:	sub    edx,DWORD PTR ds:0x43fbe4
  408812:	mov    DWORD PTR ds:0x4427bc,edx
  408818:	mov    ds:0x43c41c,eax
  40881d:	mov    eax,DWORD PTR [ebp-0x18]
  408820:	or     DWORD PTR ds:0x4105cb,0x6341
  40882a:	mov    edx,DWORD PTR ds:0x43c2b0
  408830:	sbb    DWORD PTR ds:0x43fbf4,0x4427c0
  40883a:	xor    eax,esi
  40883c:	sbb    DWORD PTR ds:0x4427ac,0x68
  408846:	add    eax,edi
  408848:	mov    DWORD PTR ds:0x4427b8,0x7dde
  408852:	cmp    edx,eax
  408854:	jne    0x40903b
  40885a:	mov    eax,DWORD PTR [ebp-0x18]
  40885d:	sbb    ebx,edx
  40885f:	mov    DWORD PTR [ebp-0x28],eax
  408862:	xor    eax,eax
  408864:	add    eax,DWORD PTR ds:0x43c8f8
  40886a:	mov    ebx,DWORD PTR ds:0x43c904
  408870:	sub    eax,ebx
  408872:	add    eax,DWORD PTR [eax+ebx*1]
  408875:	mov    eax,DWORD PTR [ebp-0x20]
  408878:	mov    DWORD PTR [ebp-0x1c],eax
  40887b:	mov    eax,ds:0x43c1a0
  408880:	and    DWORD PTR ds:0x43fbfc,0x0
  40888a:	mov    ebx,DWORD PTR ds:0x43fbfc
  408890:	inc    ebx
  408891:	mov    DWORD PTR ds:0x43fbfc,ebx
  408897:	cmp    DWORD PTR ds:0x43fbfc,0x21
  40889e:	jne    0x4088b5
  4088a4:	push   0x32f9
  4088a9:	push   DWORD PTR [ebp-0x20]
  4088ac:	push   DWORD PTR [ebp-0x18]
  4088af:	call   DWORD PTR ds:0x43c5d4
  4088b5:	cmp    DWORD PTR ds:0x43fbfc,0x13
  4088bc:	jb     0x40888a
  4088c2:	mov    DWORD PTR ds:0x4427c0,0x1c
  4088cc:	cmp    DWORD PTR ds:0x4427c0,0x0
  4088d3:	je     0x408985
  4088d9:	cmp    DWORD PTR ds:0x4427c0,0xe
  4088e0:	jne    0x4088ef
  4088e6:	push   DWORD PTR [ebp-0x24]
  4088e9:	call   DWORD PTR ds:0x43c5d8
  4088ef:	cmp    DWORD PTR ds:0x4427c0,0xf
  4088f6:	jne    0x40890b
  4088fc:	xor    edx,edx
  4088fe:	xor    edx,DWORD PTR ds:0x4427c0
  408904:	dec    edx
  408905:	mov    DWORD PTR ds:0x4427c0,edx
  40890b:	mov    edx,DWORD PTR ds:0x4427c0
  408911:	dec    edx
  408912:	mov    DWORD PTR ds:0x4427c0,edx
  408918:	jmp    0x4088cc
  40891d:	and    DWORD PTR ds:0x4105bf,0x0
  408927:	jmp    0x40893b
  40892c:	xor    edx,edx
  40892e:	xor    edx,DWORD PTR ds:0x4105bf
  408934:	inc    edx
  408935:	mov    DWORD PTR ds:0x4105bf,edx
  40893b:	cmp    DWORD PTR ds:0x4105bf,0x11
  408942:	jae    0x408985
  408948:	cmp    DWORD PTR ds:0x4105bf,0x7
  40894f:	jne    0x40895e
  408955:	push   DWORD PTR [ebp-0xc]
  408958:	call   DWORD PTR ds:0x43c874
  40895e:	cmp    DWORD PTR ds:0x4105bf,0x6
  408965:	jne    0x40897a
  40896b:	xor    edx,edx
  40896d:	or     edx,DWORD PTR ds:0x4105bf
  408973:	inc    edx
  408974:	mov    DWORD PTR ds:0x4105bf,edx
  40897a:	jmp    0x40892c
  40897f:	xor    DWORD PTR ds:0x43fc00,ebx
  408985:	mov    eax,DWORD PTR [eax+0x198]
  40898b:	mov    DWORD PTR [ebp-0x8],eax
  40898e:	or     DWORD PTR ds:0x43fbfc,0xc15
  408998:	mov    eax,DWORD PTR [ebp-0x1c]
  40899b:	mov    edx,DWORD PTR [ebp-0x8]
  40899e:	xor    ebx,0x1805
  4089a4:	xor    eax,esi
  4089a6:	dec    ebx
  4089a7:	add    eax,edi
  4089a9:	sbb    ebx,DWORD PTR ds:0x4105cf
  4089af:	mov    DWORD PTR [edx],eax
  4089b1:	add    ebx,DWORD PTR ds:0x4427ac
  4089b7:	lea    eax,[ebp-0x10]
  4089ba:	dec    ebx
  4089bb:	mov    DWORD PTR [ebp-0x34],eax
  4089be:	and    DWORD PTR ds:0x4105d7,0x0
  4089c8:	jmp    0x4089db
  4089cd:	xor    eax,eax
  4089cf:	or     eax,DWORD PTR ds:0x4105d7
  4089d5:	inc    eax
  4089d6:	mov    ds:0x4105d7,eax
  4089db:	cmp    DWORD PTR ds:0x4105d7,0x13
  4089e2:	jae    0x408a35
  4089e8:	cmp    DWORD PTR ds:0x4105d7,0x6
  4089ef:	jne    0x408a0d
  4089f5:	push   0x1b4e
  4089fa:	push   0x76a9
  4089ff:	push   DWORD PTR [ebp-0x1c]
  408a02:	push   0x886b
  408a07:	call   DWORD PTR ds:0x43c878
  408a0d:	cmp    DWORD PTR ds:0x4105d7,0x5
  408a14:	jne    0x408a25
  408a1a:	mov    eax,ds:0x4105d7
  408a1f:	inc    eax
  408a20:	mov    ds:0x4105d7,eax
  408a25:	jmp    0x4089cd
  408a2a:	mov    eax,ds:0x4427b4
  408a2f:	and    DWORD PTR ds:0x413b4e,eax
  408a35:	mov    eax,DWORD PTR [ebp-0x1c]
  408a38:	adc    edx,0x330f
  408a3e:	mov    edx,DWORD PTR [ebp-0x34]
  408a41:	sub    DWORD PTR ds:0x4105cb,ebx
  408a47:	xor    eax,esi
  408a49:	mov    DWORD PTR ds:0x43fbd8,0x18
  408a53:	cmp    DWORD PTR ds:0x43fbd8,0x0
  408a5a:	je     0x408b05
  408a60:	cmp    DWORD PTR ds:0x43fbd8,0x2
  408a67:	jne    0x408a82
  408a6d:	push   DWORD PTR [ebp-0x28]
  408a70:	push   DWORD PTR [ebp-0x20]
  408a73:	push   DWORD PTR [ebp-0x10]
  408a76:	push   DWORD PTR [ebp-0x1c]
  408a79:	push   DWORD PTR [ebp-0x28]
  408a7c:	call   DWORD PTR ds:0x43c5dc
  408a82:	cmp    DWORD PTR ds:0x43fbd8,0x3
  408a89:	jne    0x408a9e
  408a8f:	xor    ebx,ebx
  408a91:	xor    ebx,DWORD PTR ds:0x43fbd8
  408a97:	dec    ebx
  408a98:	mov    DWORD PTR ds:0x43fbd8,ebx
  408a9e:	xor    ebx,ebx
  408aa0:	add    ebx,DWORD PTR ds:0x43fbd8
  408aa6:	dec    ebx
  408aa7:	mov    DWORD PTR ds:0x43fbd8,ebx
  408aad:	jmp    0x408a53
  408ab2:	and    DWORD PTR ds:0x413b4a,0x0
  408abc:	jmp    0x408ace
  408ac1:	mov    ebx,DWORD PTR ds:0x413b4a
  408ac7:	inc    ebx
  408ac8:	mov    DWORD PTR ds:0x413b4a,ebx
  408ace:	cmp    DWORD PTR ds:0x413b4a,0x10
  408ad5:	jae    0x408b05
  408adb:	cmp    DWORD PTR ds:0x413b4a,0x19
  408ae2:	jne    0x408af3
  408ae8:	push   0x82d5
  408aed:	call   DWORD PTR ds:0x43c5e0
  408af3:	jmp    0x408ac1
  408af8:	movzx  ebx,WORD PTR ds:0x4105d7
  408aff:	and    DWORD PTR ds:0x43fc00,ebx
  408b05:	add    eax,edi
  408b07:	adc    DWORD PTR ds:0x413b56,0x6c9f
  408b11:	mov    DWORD PTR [edx],eax
  408b13:	mov    DWORD PTR [ebp-0x2c],ecx
  408b16:	lea    eax,[ebp-0x2c]
  408b19:	or     ebx,ebx
  408b1b:	mov    DWORD PTR [ebp-0x14],eax
  408b1e:	add    ebx,eax
  408b20:	mov    eax,DWORD PTR [ebp-0x2c]
  408b23:	sub    ebx,0x4e67
  408b29:	mov    ecx,DWORD PTR [ebp-0x14]
  408b2c:	xor    eax,esi
  408b2e:	adc    ebx,0x2698
  408b34:	add    eax,0x32729e
  408b39:	and    DWORD PTR ds:0x413b5e,0x0
  408b43:	mov    ebx,DWORD PTR ds:0x413b5e
  408b49:	inc    ebx
  408b4a:	mov    DWORD PTR ds:0x413b5e,ebx
  408b50:	cmp    DWORD PTR ds:0x413b5e,0xb
  408b57:	jne    0x408b68
  408b5d:	push   0x4106f0
  408b62:	call   DWORD PTR ds:0x43c5e4
  408b68:	cmp    DWORD PTR ds:0x413b5e,0xa
  408b6f:	jne    0x408b82
  408b75:	mov    ebx,DWORD PTR ds:0x413b5e
  408b7b:	inc    ebx
  408b7c:	mov    DWORD PTR ds:0x413b5e,ebx
  408b82:	cmp    DWORD PTR ds:0x413b5e,0x19
  408b89:	jb     0x408b43
  408b8f:	adc    ebx,DWORD PTR ds:0x4105cb
  408b95:	mov    DWORD PTR [ecx],eax
  408b97:	sub    DWORD PTR ds:0x4427b4,0x6b19
  408ba1:	mov    eax,ds:0x43c274
  408ba6:	sbb    ebx,0x4548
  408bac:	mov    DWORD PTR [ebp-0x24],0x8e12febe
  408bb3:	xor    DWORD PTR ds:0x43fbf0,edx
  408bb9:	mov    eax,DWORD PTR [eax]
  408bbb:	xor    DWORD PTR ds:0x4427a8,ebx
  408bc1:	mov    cx,WORD PTR [ebp-0x10]
  408bc5:	movzx  ecx,cx
  408bc8:	xor    ebx,DWORD PTR ds:0x4105d7
  408bce:	add    ecx,DWORD PTR [eax]
  408bd0:	mov    DWORD PTR [ebp-0x40],0xf89c8531
  408bd7:	mov    ebx,DWORD PTR ds:0x43fbec
  408bdd:	sub    DWORD PTR ds:0x4427b8,ebx
  408be3:	mov    DWORD PTR [ebp-0x14],ecx
  408be6:	xor    ebx,ebx
  408be8:	mov    ebx,0x5a3fc9e
  408bed:	and    DWORD PTR ds:0x43fbe4,0x0
  408bf7:	mov    ecx,DWORD PTR ds:0x43fbe4
  408bfd:	inc    ecx
  408bfe:	mov    DWORD PTR ds:0x43fbe4,ecx
  408c04:	cmp    DWORD PTR ds:0x43fbe4,0x7
  408c0b:	jne    0x408c36
  408c11:	push   0x7083
  408c16:	push   0x1db3
  408c1b:	push   0x7eea
  408c20:	push   0x43fbdc
  408c25:	push   DWORD PTR [ebp-0x14]
  408c28:	push   DWORD PTR [ebp-0x24]
  408c2b:	push   0x41071f
  408c30:	call   DWORD PTR ds:0x43c87c
  408c36:	cmp    DWORD PTR ds:0x43fbe4,0x6
  408c3d:	jne    0x408c50
  408c43:	mov    ecx,DWORD PTR ds:0x43fbe4
  408c49:	inc    ecx
  408c4a:	mov    DWORD PTR ds:0x43fbe4,ecx
  408c50:	cmp    DWORD PTR ds:0x43fbe4,0x10
  408c57:	jb     0x408bf7
  408c5d:	mov    eax,DWORD PTR [ebp-0x1c]
  408c60:	mov    ecx,DWORD PTR [ebp-0x8]
  408c63:	xor    eax,esi
  408c65:	add    eax,edi
  408c67:	mov    DWORD PTR ds:0x4105d7,0x128d
  408c71:	cmp    DWORD PTR [ecx],eax
  408c73:	mov    DWORD PTR ds:0x413b5a,0x2c74
  408c7d:	jne    0x408de6
  408c83:	movzx  eax,BYTE PTR ds:0x4105c7
  408c8a:	adc    eax,DWORD PTR ds:0x4105d3
  408c90:	mov    ds:0x4105c7,eax
  408c95:	mov    eax,DWORD PTR [ebp-0x1c]
  408c98:	mov    ecx,DWORD PTR [ebp-0x14]
  408c9b:	or     DWORD PTR ds:0x44537c,0x445378
  408ca5:	xor    eax,esi
  408ca7:	or     DWORD PTR ds:0x43fbe0,0x445380
  408cb1:	add    eax,edi
  408cb3:	mov    DWORD PTR ds:0x43fbf4,0x2417
  408cbd:	cmp    DWORD PTR [ecx],eax
  408cbf:	jne    0x408d21
  408cc5:	dec    edx
  408cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  408cc9:	sbb    DWORD PTR ds:0x44537c,0x7bb6
  408cd3:	mov    ecx,DWORD PTR [ebp-0x34]
  408cd6:	adc    DWORD PTR ds:0x43fbe8,ecx
  408cdc:	xor    eax,esi
  408cde:	xor    DWORD PTR ds:0x445378,0x6611
  408ce8:	add    eax,edi
  408cea:	movzx  edx,WORD PTR ds:0x413b46
  408cf1:	sbb    DWORD PTR ds:0x413b4e,edx
  408cf7:	mov    DWORD PTR [ecx],eax
  408cf9:	dec    ecx
  408cfa:	mov    eax,DWORD PTR [ebp-0x34]
  408cfd:	mov    ecx,DWORD PTR [ebp-0x40]
  408d00:	sbb    edx,DWORD PTR ds:0x445378
  408d06:	xor    ecx,esi
  408d08:	adc    edx,DWORD PTR ds:0x43fc00
  408d0e:	mov    edx,0xffcd8d62
  408d13:	sbb    DWORD PTR ds:0x43fbdc,0x43fbd8
  408d1d:	sub    edx,ecx
  408d1f:	add    DWORD PTR [eax],edx
  408d21:	mov    DWORD PTR ds:0x4105c7,0x19
  408d2b:	cmp    DWORD PTR ds:0x4105c7,0x0
  408d32:	je     0x408d8e
  408d38:	cmp    DWORD PTR ds:0x4105c7,0x5
  408d3f:	jne    0x408d63
  408d45:	push   DWORD PTR [ebp-0x1c]
  408d48:	push   0x2684
  408d4d:	push   DWORD PTR [ebp-0x18]
  408d50:	push   DWORD PTR [ebp-0x28]
  408d53:	push   0x71f6
  408d58:	push   0x2f24
  408d5d:	call   DWORD PTR ds:0x43c880
  408d63:	cmp    DWORD PTR ds:0x4105c7,0x6
  408d6a:	jne    0x408d7b
  408d70:	mov    eax,ds:0x4105c7
  408d75:	dec    eax
  408d76:	mov    ds:0x4105c7,eax
  408d7b:	xor    eax,eax
  408d7d:	or     eax,DWORD PTR ds:0x4105c7
  408d83:	dec    eax
  408d84:	mov    ds:0x4105c7,eax
  408d89:	jmp    0x408d2b
  408d8e:	mov    eax,ds:0x43c274
  408d93:	mov    eax,DWORD PTR [eax]
  408d95:	mov    cx,WORD PTR [ebp-0x10]
  408d99:	movzx  ecx,cx
  408d9c:	add    ecx,DWORD PTR [eax]
  408d9e:	mov    DWORD PTR [ebp-0x14],ecx
  408da1:	mov    eax,DWORD PTR [ebp-0x28]
  408da4:	mov    ecx,DWORD PTR [ebp-0x28]
  408da7:	xor    eax,esi
  408da9:	lea    eax,[eax+eax*1+0x32729e]
  408db0:	xor    ecx,esi
  408db2:	sub    ecx,eax
  408db4:	mov    ax,WORD PTR [ebp-0x10]
  408db8:	movzx  eax,ax
  408dbb:	cmp    eax,ecx
  408dbd:	mov    eax,DWORD PTR [ebp-0x40]
  408dc0:	movzx  ecx,WORD PTR [ebp-0x10]
  408dc4:	jg     0x408dd9
  408dca:	xor    eax,esi
  408dcc:	sub    ecx,eax
  408dce:	sub    ecx,edi
  408dd0:	mov    WORD PTR [ebp-0x10],cx
  408dd4:	jmp    0x408de6
  408dd9:	xor    eax,esi
  408ddb:	lea    eax,[eax+ecx*1+0x32729e]
  408de2:	mov    WORD PTR [ebp-0x10],ax
  408de6:	mov    ecx,DWORD PTR [ebp-0x24]
  408de9:	mov    eax,0x8e12febe
  408dee:	cmp    ecx,eax
  408df0:	je     0x408e04
  408df6:	mov    eax,DWORD PTR [ebp-0x8]
  408df9:	mov    DWORD PTR [eax],0x60341e8d
  408dff:	jmp    0x40902a
  408e04:	mov    ecx,DWORD PTR [ebp-0x24]
  408e07:	cmp    ecx,0x5142ddbc
  408e0d:	jne    0x408e85
  408e13:	mov    eax,DWORD PTR [ebp-0x8]
  408e16:	mov    DWORD PTR [eax],0x4214febc
  408e1c:	mov    eax,DWORD PTR [ebp-0x8]
  408e1f:	mov    DWORD PTR [ebp-0xc],eax
  408e22:	mov    eax,DWORD PTR [ebp-0x28]
  408e25:	mov    eax,DWORD PTR [ebp-0x1c]
  408e28:	mov    DWORD PTR [ebp-0x3c],ebx
  408e2b:	mov    eax,DWORD PTR [ebp-0x3c]
  408e2e:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408e35:	cmp    eax,ebx
  408e37:	jne    0x40902a
  408e3d:	mov    ax,WORD PTR [ebp-0x4]
  408e41:	mov    ecx,0x8a42
  408e46:	xor    ax,cx
  408e49:	mov    ecx,0x3b08
  408e4e:	add    ax,cx
  408e51:	mov    ecx,DWORD PTR [ebp-0xc]
  408e54:	movzx  eax,ax
  408e57:	not    eax
  408e59:	and    eax,DWORD PTR [ecx]
  408e5b:	mov    ecx,DWORD PTR [ebp-0xc]
  408e5e:	mov    DWORD PTR [ecx],eax
  408e60:	jmp    0x408e6c
  408e65:	xor    DWORD PTR [ebp-0x3c],0xe149ebe
  408e6c:	mov    ax,WORD PTR [ebp-0x4]
  408e70:	push   DWORD PTR [ebp-0xc]
  408e73:	call   0x407112
  408e78:	test   eax,eax
  408e7a:	je     0x408e65
  408e80:	jmp    0x40902a
  408e85:	mov    ecx,DWORD PTR [ebp-0x24]
  408e88:	cmp    ecx,0x1443fcbd
  408e8e:	jne    0x408ea2
  408e94:	mov    eax,DWORD PTR [ebp-0x8]
  408e97:	mov    DWORD PTR [eax],0x60062d8f
  408e9d:	jmp    0x40902a
  408ea2:	mov    ecx,DWORD PTR [ebp-0x24]
  408ea5:	cmp    ecx,eax
  408ea7:	jne    0x408faf
  408ead:	mov    eax,DWORD PTR [ebp-0x1c]
  408eb0:	mov    ecx,DWORD PTR [ebp-0x8]
  408eb3:	xor    eax,esi
  408eb5:	add    eax,edi
  408eb7:	cmp    DWORD PTR [ecx],eax
  408eb9:	je     0x408f3c
  408ebf:	mov    ecx,DWORD PTR [ebp-0x2c]
  408ec2:	mov    eax,DWORD PTR [ebp-0x8]
  408ec5:	mov    eax,DWORD PTR [eax]
  408ec7:	mov    eax,DWORD PTR [eax+0x3c]
  408eca:	lea    ecx,[ecx*8+0x78]
  408ed1:	add    eax,ecx
  408ed3:	mov    ecx,DWORD PTR [ebp-0x8]
  408ed6:	mov    ecx,DWORD PTR [ecx]
  408ed8:	mov    eax,DWORD PTR [eax+ecx*1]
  408edb:	mov    DWORD PTR [ebp-0x4],eax
  408ede:	mov    eax,DWORD PTR [ebp-0x1c]
  408ee1:	xor    eax,esi
  408ee3:	add    eax,edi
  408ee5:	mov    DWORD PTR [ebp-0xc],eax
  408ee8:	mov    eax,DWORD PTR [ebp-0x1c]
  408eeb:	mov    ecx,DWORD PTR [ebp-0x4]
  408eee:	xor    eax,esi
  408ef0:	add    eax,edi
  408ef2:	cmp    ecx,eax
  408ef4:	je     0x40902a
  408efa:	mov    eax,DWORD PTR [ebp-0x8]
  408efd:	mov    ecx,DWORD PTR [ebp-0x4]
  408f00:	add    ecx,DWORD PTR [eax]
  408f02:	mov    DWORD PTR [ebp-0xc],ecx
  408f05:	mov    eax,DWORD PTR [ebp-0xc]
  408f08:	mov    ecx,DWORD PTR [ebp-0x8]
  408f0b:	mov    eax,DWORD PTR [eax+0xc]
  408f0e:	mov    ecx,DWORD PTR [ecx]
  408f10:	mov    al,BYTE PTR [eax+ecx*1]
  408f13:	add    al,0x35
  408f15:	xor    al,0x49
  408f17:	cmp    al,0xc9
  408f19:	je     0x408f30
  408f1f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f22:	mov    ecx,DWORD PTR [ebp-0x8]
  408f25:	xor    eax,esi
  408f27:	add    eax,edi
  408f29:	mov    DWORD PTR [ecx],eax
  408f2b:	jmp    0x40902a
  408f30:	xor    DWORD PTR [ebp-0x24],0x5fd8f
  408f37:	jmp    0x40902a
  408f3c:	mov    eax,DWORD PTR [ebp-0x8]
  408f3f:	mov    ecx,DWORD PTR [ebp-0x14]
  408f42:	mov    ecx,DWORD PTR [ecx]
  408f44:	mov    DWORD PTR [eax],ecx
  408f46:	mov    eax,DWORD PTR [ebp-0x8]
  408f49:	mov    DWORD PTR [ebp-0xc],eax
  408f4c:	mov    eax,DWORD PTR [ebp-0x28]
  408f4f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f52:	mov    DWORD PTR [ebp-0x44],ebx
  408f55:	mov    eax,DWORD PTR [ebp-0x44]
  408f58:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408f5f:	cmp    eax,ebx
  408f61:	jne    0x40902a
  408f67:	mov    ax,WORD PTR [ebp-0x4]
  408f6b:	mov    ecx,0x8a42
  408f70:	xor    ax,cx
  408f73:	mov    ecx,0x3b08
  408f78:	add    ax,cx
  408f7b:	mov    ecx,DWORD PTR [ebp-0xc]
  408f7e:	movzx  eax,ax
  408f81:	not    eax
  408f83:	and    eax,DWORD PTR [ecx]
  408f85:	mov    ecx,DWORD PTR [ebp-0xc]
  408f88:	mov    DWORD PTR [ecx],eax
  408f8a:	jmp    0x408f96
  408f8f:	xor    DWORD PTR [ebp-0x44],0xe149ebe
  408f96:	mov    ax,WORD PTR [ebp-0x4]
  408f9a:	push   DWORD PTR [ebp-0xc]
  408f9d:	call   0x407112
  408fa2:	test   eax,eax
  408fa4:	je     0x408f8f
  408faa:	jmp    0x40902a
  408faf:	mov    eax,DWORD PTR [ebp-0x24]
  408fb2:	cmp    eax,0x33450cad
  408fb7:	jne    0x40902a
  408fbd:	mov    eax,DWORD PTR [ebp-0x8]
  408fc0:	mov    DWORD PTR [eax],0x443dc9d
  408fc6:	mov    eax,DWORD PTR [ebp-0x8]
  408fc9:	mov    DWORD PTR [ebp-0xc],eax
  408fcc:	mov    eax,DWORD PTR [ebp-0x28]
  408fcf:	mov    eax,DWORD PTR [ebp-0x1c]
  408fd2:	mov    DWORD PTR [ebp-0x38],ebx
  408fd5:	mov    eax,DWORD PTR [ebp-0x38]
  408fd8:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408fdf:	cmp    eax,ebx
  408fe1:	jne    0x40902a
  408fe7:	mov    ax,WORD PTR [ebp-0x4]
  408feb:	mov    ecx,0x8a42
  408ff0:	xor    ax,cx
  408ff3:	mov    ecx,0x3b08
  408ff8:	add    ax,cx
  408ffb:	mov    ecx,DWORD PTR [ebp-0xc]
  408ffe:	movzx  eax,ax
  409001:	not    eax
  409003:	and    eax,DWORD PTR [ecx]
  409005:	mov    ecx,DWORD PTR [ebp-0xc]
  409008:	mov    DWORD PTR [ecx],eax
  40900a:	jmp    0x409016
  40900f:	xor    DWORD PTR [ebp-0x38],0xe149ebe
  409016:	mov    ax,WORD PTR [ebp-0x4]
  40901a:	push   DWORD PTR [ebp-0xc]
  40901d:	call   0x407112
  409022:	test   eax,eax
  409024:	je     0x40900f
  40902a:	mov    eax,DWORD PTR [ebp-0x24]
  40902d:	cmp    eax,0x8e12febe
  409032:	je     0x408bed
  409038:	mov    eax,DWORD PTR [ebp-0x8]
  40903b:	mov    eax,ds:0x43c1a0
  409040:	mov    eax,DWORD PTR [eax+0x18c]
  409046:	mov    eax,DWORD PTR [eax]
  409048:	mov    DWORD PTR [ebp-0x58],eax
  40904b:	mov    eax,0xf89c8531
  409050:	mov    DWORD PTR [ebp-0x14],eax
  409053:	mov    DWORD PTR [ebp-0x14],eax
  409056:	mov    DWORD PTR [ebp-0x14],eax
  409059:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  409060:	mov    DWORD PTR [ebp-0x4],eax
  409063:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  40906a:	mov    ebx,DWORD PTR [ebp-0x20]
  40906d:	xor    ebx,esi
  40906f:	add    ebx,edi
  409071:	jmp    0x4090ac
  409076:	mov    eax,DWORD PTR [ebp-0x18]
  409079:	xor    eax,esi
  40907b:	lea    eax,[eax+ebx*1+0x32729e]
  409082:	push   eax
  409083:	mov    eax,DWORD PTR [ebp-0x14]
  409086:	xor    eax,esi
  409088:	lea    eax,[ebp+eax*1+0x3272a6]
  40908f:	push   eax
  409090:	mov    eax,ds:0x43c1a0
  409095:	push   DWORD PTR [eax+0x1bc]
  40909b:	call   0x402c35
  4090a0:	mov    eax,DWORD PTR [ebp-0x18]
  4090a3:	xor    eax,esi
  4090a5:	lea    ebx,[ebx+eax*1+0x32729e]
  4090ac:	mov    eax,DWORD PTR [ebp-0x18]
  4090af:	mov    ecx,DWORD PTR [ebp-0x18]
  4090b2:	xor    ecx,esi
  4090b4:	xor    eax,esi
  4090b6:	add    eax,ecx
  4090b8:	mov    ecx,DWORD PTR [ebp-0x18]
  4090bb:	xor    ecx,esi
  4090bd:	lea    eax,[eax+ecx*1+0x9757da]
  4090c4:	cmp    ebx,eax
  4090c6:	jbe    0x409076
  4090cc:	mov    eax,DWORD PTR [ebp+0xc]
  4090cf:	mov    ds:0x43c024,eax
  4090d4:	mov    eax,DWORD PTR [ebp+0x10]
  4090d7:	mov    ds:0x43c278,eax
  4090dc:	mov    eax,ds:0x43c024
  4090e1:	mov    ecx,DWORD PTR [ebp-0x30]
  4090e4:	sub    eax,edi
  4090e6:	xor    eax,esi
  4090e8:	mov    DWORD PTR [ecx],eax
  4090ea:	mov    eax,DWORD PTR [ebp-0x4c]
  4090ed:	cmp    eax,0xf89c8534
  4090f2:	je     0x40914f
  4090f8:	mov    eax,DWORD PTR [ebp-0x20]
  4090fb:	mov    ecx,DWORD PTR [ebp-0x54]
  4090fe:	xor    eax,esi
  409100:	add    eax,edi
  409102:	cmp    eax,ecx
  409104:	je     0x40914f
  40910a:	mov    eax,ds:0x43c1a0
  40910f:	mov    eax,DWORD PTR [eax+0x194]
  409115:	mov    ecx,DWORD PTR [eax]
  409117:	mov    eax,DWORD PTR [ecx+0x3c]
  40911a:	push   DWORD PTR ds:0x43c278
  409120:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409124:	push   DWORD PTR ds:0x43c024
  40912a:	add    eax,ecx
  40912c:	mov    ecx,DWORD PTR ds:0x43c1a0
  409132:	mov    ecx,DWORD PTR [ecx+0x194]
  409138:	push   DWORD PTR [ecx]
  40913a:	call   eax
  40913c:	mov    ecx,DWORD PTR ds:0x43c1a0
  409142:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409148:	mov    DWORD PTR [ecx],eax
  40914a:	jmp    0x409276
  40914f:	mov    eax,DWORD PTR [ebp-0x20]
  409152:	mov    ecx,DWORD PTR [ebp-0x58]
  409155:	xor    eax,esi
  409157:	add    eax,edi
  409159:	cmp    eax,ecx
  40915b:	jne    0x409259
  409161:	mov    eax,DWORD PTR [ebp-0x20]
  409164:	xor    eax,esi
  409166:	add    eax,edi
  409168:	mov    ds:0x43c224,eax
  40916d:	mov    eax,DWORD PTR [ebp-0x20]
  409170:	xor    eax,esi
  409172:	add    eax,edi
  409174:	mov    ds:0x43c21c,eax
  409179:	mov    eax,DWORD PTR [ebp-0x18]
  40917c:	mov    DWORD PTR [ebp-0x14],eax
  40917f:	mov    eax,DWORD PTR [ebp-0x20]
  409182:	mov    DWORD PTR [ebp+0xc],eax
  409185:	mov    eax,DWORD PTR [ebp+0xc]
  409188:	xor    eax,esi
  40918a:	add    eax,edi
  40918c:	mov    DWORD PTR [ebp+0xc],eax
  40918f:	mov    eax,ds:0x43c020
  409194:	mov    eax,DWORD PTR [eax]
  409196:	mov    DWORD PTR [ebp+0xc],eax
  409199:	mov    eax,ds:0x43c228
  40919e:	mov    eax,DWORD PTR [eax]
  4091a0:	mov    DWORD PTR [ebp-0x30],eax
  4091a3:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  4091aa:	mov    eax,DWORD PTR [ebp+0x10]
  4091ad:	xor    eax,esi
  4091af:	add    eax,edi
  4091b1:	mov    DWORD PTR [ebp+0x10],eax
  4091b4:	mov    eax,ds:0x43c1a0
  4091b9:	mov    DWORD PTR [ebp+0x10],eax
  4091bc:	mov    eax,DWORD PTR [ebp+0xc]
  4091bf:	mov    DWORD PTR [ebp+0xc],eax
  4091c2:	mov    eax,DWORD PTR [ebp+0xc]
  4091c5:	push   0x4
  4091c7:	pop    ecx
  4091c8:	sub    ecx,eax
  4091ca:	add    ecx,DWORD PTR [ebp-0x30]
  4091cd:	mov    DWORD PTR [ebp-0x4],0xf89c85f5
  4091d4:	mov    DWORD PTR [ebp+0x10],ecx
  4091d7:	mov    DWORD PTR [ebp-0xa0],0xf89c8531
  4091e1:	mov    eax,DWORD PTR [ebp+0xc]
  4091e4:	mov    DWORD PTR [ebp-0x9c],eax
  4091ea:	mov    eax,DWORD PTR [ebp+0x10]
  4091ed:	mov    DWORD PTR [ebp-0x98],eax
  4091f3:	mov    eax,DWORD PTR [ebp-0x4]
  4091f6:	xor    eax,esi
  4091f8:	add    eax,edi
  4091fa:	mov    DWORD PTR [ebp-0x94],eax
  409200:	lea    eax,[ebp-0x5c]
  409203:	mov    DWORD PTR [ebp-0x90],eax
  409209:	mov    eax,DWORD PTR [ebp-0xa0]
  40920f:	xor    eax,esi
  409211:	add    eax,edi
  409213:	mov    DWORD PTR [ebp-0xa0],eax
  409219:	lea    eax,[ebp-0xa0]
  40921f:	push   eax
  409220:	mov    eax,DWORD PTR [ebp-0x14]
  409223:	xor    eax,esi
  409225:	add    eax,edi
  409227:	push   eax
  409228:	mov    eax,ds:0x43c1c0
  40922d:	push   0x43c116
  409232:	push   DWORD PTR [eax]
  409234:	call   0x40101c
  409239:	xor    esi,esi
  40923b:	mov    eax,DWORD PTR [ebp+0x10]
  40923e:	sub    eax,esi
  409240:	push   eax
  409241:	mov    eax,DWORD PTR [ebp+0xc]
  409244:	add    eax,esi
  409246:	push   eax
  409247:	call   0x40354e
  40924c:	inc    esi
  40924d:	cmp    esi,0x52
  409250:	jb     0x40923b
  409256:	mov    eax,DWORD PTR [ebp-0x14]
  409259:	call   0x405b6e
  40925e:	lea    eax,[ebp+0x4]
  409261:	mov    DWORD PTR [ebp-0x50],eax
  409264:	mov    eax,DWORD PTR [ebp-0x48]
  409267:	mov    eax,DWORD PTR [ebp-0x18]
  40926a:	push   DWORD PTR [ebp-0x20]
  40926d:	lea    eax,[ebp-0x50]
  409270:	push   eax
  409271:	call   0x40324f
  409276:	mov    eax,ds:0x43c1a0
  40927b:	push   0x4
  40927d:	add    eax,0x1cc
  409282:	push   eax
  409283:	lea    eax,[ebp-0x48]
  409286:	push   eax
  409287:	call   0x402c35
  40928c:	mov    eax,DWORD PTR [ebp-0x48]
  40928f:	mov    eax,DWORD PTR [eax]
  409291:	pop    edi
  409292:	pop    ebx
  409293:	pop    esi
  409294:	leave  
  409295:	ret    0xc
  409298:	push   ebp
  409299:	mov    ebp,esp
  40929b:	sub    esp,0x58
  40929e:	add    eax,ecx
  4092a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4092a3:	sub    eax,DWORD PTR ds:0x43fbe0
  4092a9:	mov    eax,0x8a42
  4092ae:	add    DWORD PTR ds:0x4105d3,0x413b4e
  4092b8:	xor    ax,WORD PTR [ecx+0x20]
  4092bc:	and    DWORD PTR ds:0x43fbe8,0x0
  4092c6:	mov    ecx,DWORD PTR ds:0x43fbe8
  4092cc:	inc    ecx
  4092cd:	mov    DWORD PTR ds:0x43fbe8,ecx
  4092d3:	cmp    DWORD PTR ds:0x43fbe8,0x9
  4092da:	jne    0x4092f3
  4092e0:	push   DWORD PTR [ebp-0x28]
  4092e3:	push   0x43fbf4
  4092e8:	push   0x55d9
  4092ed:	call   DWORD PTR ds:0x43c884
  4092f3:	cmp    DWORD PTR ds:0x43fbe8,0x8
  4092fa:	jne    0x40930d
  409300:	mov    ecx,DWORD PTR ds:0x43fbe8
  409306:	inc    ecx
  409307:	mov    DWORD PTR ds:0x43fbe8,ecx
  40930d:	cmp    DWORD PTR ds:0x43fbe8,0x14
  409314:	jb     0x4092c6
  40931a:	mov    ecx,0x3b08
  40931f:	add    ax,cx
  409322:	movzx  eax,ax
  409325:	sub    ecx,0x7afe
  40932b:	mov    DWORD PTR [ebp-0xc],eax
  40932e:	mov    BYTE PTR [ebp-0x1],0x7f
  409332:	lea    eax,[ebp-0x1]
  409335:	mov    DWORD PTR [ebp-0x10],eax
  409338:	and    ecx,0x503
  40933e:	jmp    0x409494
  409343:	mov    ?,ebx
  409345:	icebp  
  409346:	test   al,0x85
  409348:	stos   BYTE PTR es:[edi],al
  409349:	mov    ebp,0xef32abd
  40934e:	cmp    eax,0x8870a4f3
  409353:	(bad)  
  409357:	daa    
  409358:	jg     0x4093d6
  40935a:	jl     0x4093cb
  40935c:	jge    0x4092e7
  40935e:	repz repnz sbb al,0xb7
  409362:	mov    edx,0x8b375afa
  409367:	cmp    DWORD PTR [eax],ebp
  409369:	or     eax,0x64ffe3d6
  40936e:	(bad)  
  409370:	fst    DWORD PTR [ebx-0x49b8ddab]
  409376:	sbb    ah,BYTE PTR [ecx+0x2a]
  409379:	dec    ebp
  40937a:	mov    ebp,edi
  40937c:	out    dx,al
  40937d:	inc    ebp
  40937e:	mov    edi,0xcda3942b
  409383:	cs cdq 
  409385:	in     eax,dx
  409386:	iret   
  409387:	clc    
  409388:	pop    ds
  409389:	psubb  mm1,QWORD PTR [ecx+0x55d5419f]
  409390:	nop
  409391:	mov    ds:0x4fca1e29,eax
  409396:	sahf   
  409397:	sti    
  409398:	lods   al,BYTE PTR ds:[esi]
  409399:	mov    ebx,0xe91bcd3a
  40939e:	cdq    
  40939f:	dec    edi
  4093a0:	xchg   ebp,eax
  4093a1:	cdq    
  4093a2:	pop    edx
  4093a3:	jns    0x40941b
  4093a5:	shr    BYTE PTR [ebx-0x25f7825f],0x2e
  4093ac:	data16 or al,0x60
  4093af:	and    eax,DWORD PTR [ebx]
  4093b1:	adc    BYTE PTR [ebp+0x25],ch
  4093b4:	pop    edi
  4093b5:	test   ch,cl
  4093b7:	pop    ebp
  4093b8:	jne    0x4093d4
  4093ba:	icebp  
  4093bb:	sbb    ch,bl
  4093bd:	or     DWORD PTR [ecx],0x6435b3a6
  4093c3:	dec    edx
  4093c4:	cld    
  4093c5:	push   0x338e8f0a
  4093ca:	es jnp 0x409439
  4093cd:	scas   al,BYTE PTR es:[edi]
  4093ce:	repz aam 0x71
  4093d1:	or     al,0x2a
  4093d3:	push   edi
  4093d4:	or     eax,ebp
  4093d6:	shr    DWORD PTR [ebp-0x73],cl
  4093d9:	mov    edx,cs
  4093db:	pop    ecx
  4093dc:	outs   dx,BYTE PTR ds:[esi]
  4093dd:	pop    ecx
  4093de:	stos   BYTE PTR es:[edi],al
  4093df:	jge    0x4093eb
  4093e1:	or     ebx,0xdde7c2bd
  4093e7:	and    ch,BYTE PTR [ecx]
  4093e9:	out    0x6b,eax
  4093eb:	push   edi
  4093ec:	pop    edi
  4093ed:	sbb    dl,BYTE PTR [ebx+0xa]
  4093f0:	out    dx,al
  4093f1:	mov    ecx,0xa1d416fe
  4093f6:	xchg   edx,eax
  4093f7:	push   0xffffff89
  4093f9:	jle    0x409406
  4093fb:	xchg   ebx,eax
  4093fc:	mov    al,ds:0x1976fa73
  409401:	mov    al,0xce
  409403:	sbb    al,BYTE PTR [eax]
  409405:	mov    ds:0x221de268,eax
  40940a:	fwait
  40940b:	das    
  40940c:	sbb    BYTE PTR cs:[eax-0x3d95e3b6],bh
  409413:	push   ss
  409414:	cmp    DWORD PTR [edi],edx
  409416:	pop    eax
  409417:	test   eax,0x8306989d
  40941c:	inc    edi
  40941d:	xor    DWORD PTR [edi+ecx*2],edx
  409420:	into   
  409421:	nop
  409422:	jle    0x4093de
  409424:	call   edi
  409426:	nop
  409427:	stos   DWORD PTR es:[edi],eax
  409428:	cwde   
  409429:	loop   0x409424
  40942b:	mov    edx,0xee8cebdb
  409430:	pop    ds
  409431:	in     eax,dx
  409432:	xor    DWORD PTR [edi-0x1d],ecx
  409435:	xchg   ebp,eax
  409436:	cmp    ebp,esi
  409438:	dec    ecx
  409439:	sar    DWORD PTR [ecx-0x65f0bb69],0xed
  409440:	outs   dx,BYTE PTR es:[esi]
  409442:	sub    DWORD PTR [edi-0x5a2e9d50],edi
  409448:	xor    eax,0x3c6d0bc5
  40944d:	repz push 0x1c
  409450:	dec    eax
  409451:	mov    ds:0x98ac560d,al
  409456:	push   ebp
  409457:	xor    eax,0x3cda9258
  40945c:	sbb    eax,0x6ab5e639
  409461:	sahf   
  409462:	das    
  409463:	jo     0x4093fe
  409465:	sbb    dh,BYTE PTR [esi+0x152c71d7]
  40946b:	or     BYTE PTR [ecx],bh
  40946d:	pop    ebp
  40946e:	ficom  WORD PTR [edx-0x5f]
  409471:	mov    eax,0xcc3ccd9
  409476:	aas    
  409477:	xlat   BYTE PTR ds:[ebx]
  409478:	sti    
  409479:	and    eax,DWORD PTR [edx-0x42]
  40947c:	(bad)  
  40947d:	shl    DWORD PTR [ecx-0x2],cl
  409480:	fs imul esi,edi,0x31
  409484:	in     eax,0x9b
  409486:	pmulhuw mm7,mm7
  409489:	xchg   edx,eax
  40948a:	aam    0xff
  40948c:	sahf   
  40948d:	lds    ebx,FWORD PTR [esi-0x23f6d422]
  409493:	push   ss
  409494:	mov    al,BYTE PTR [ebp-0x1]
  409497:	xor    DWORD PTR ds:0x413b5a,0x9c1
  4094a1:	mov    ecx,DWORD PTR [ebp-0x10]
  4094a4:	and    DWORD PTR ds:0x4427bc,0x7bc2
  4094ae:	xor    al,0x49
  4094b0:	sub    al,0x35
  4094b2:	mov    DWORD PTR ds:0x4105cf,0x4e04
  4094bc:	mov    BYTE PTR [ecx],al
  4094be:	sbb    DWORD PTR ds:0x43fbe8,0x3d76
  4094c8:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4094cf:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  4094d6:	or     ecx,0x8aa
  4094dc:	mov    eax,DWORD PTR [ebp-0x8]
  4094df:	and    DWORD PTR ds:0x445368,0x0
  4094e9:	mov    ecx,DWORD PTR ds:0x445368
  4094ef:	inc    ecx
  4094f0:	mov    DWORD PTR ds:0x445368,ecx
  4094f6:	cmp    DWORD PTR ds:0x445368,0x1e
  4094fd:	jne    0x40951b
  409503:	push   DWORD PTR [ebp-0x10]
  409506:	push   0x4107b9
  40950b:	push   0x41080d
  409510:	push   0x4107b9
  409515:	call   DWORD PTR ds:0x43c520
  40951b:	cmp    DWORD PTR ds:0x445368,0x11
  409522:	jb     0x4094e9
  409528:	xor    DWORD PTR ds:0x413b46,ebx
  40952e:	mov    ecx,0x7510857
  409533:	push   esi
  409534:	and    DWORD PTR ds:0x4427ac,0x0
  40953e:	jmp    0x409550
  409543:	mov    esi,DWORD PTR ds:0x4427ac
  409549:	inc    esi
  40954a:	mov    DWORD PTR ds:0x4427ac,esi
  409550:	cmp    DWORD PTR ds:0x4427ac,0x17
  409557:	jae    0x409585
  40955d:	cmp    DWORD PTR ds:0x4427ac,0x1e
  409564:	jne    0x409580
  40956a:	push   0x410629
  40956f:	push   DWORD PTR [ebp-0x20]
  409572:	push   DWORD PTR [ebp-0x20]
  409575:	push   0x7787
  40957a:	call   DWORD PTR ds:0x43c888
  409580:	jmp    0x409543
  409585:	xor    eax,ecx
  409587:	mov    esi,0x32729e
  40958c:	add    eax,esi
  40958e:	jmp    0x4095af
  409593:	mov    DWORD PTR ds:0x4427b8,0x1147
  40959d:	mov    dl,BYTE PTR [ebp-0x1]
  4095a0:	mov    DWORD PTR ds:0x43fbfc,0x2700
  4095aa:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  4095ae:	inc    eax
  4095af:	mov    DWORD PTR ds:0x4427b4,0x2e0e
  4095b9:	cmp    eax,0x40
  4095bc:	jb     0x409593
  4095c2:	mov    edx,DWORD PTR [ebp-0x8]
  4095c5:	xor    DWORD PTR ds:0x4105bf,0x7536
  4095cf:	mov    eax,DWORD PTR [ebp-0xc]
  4095d2:	add    DWORD PTR ds:0x43fbf8,0x445374
  4095dc:	jmp    0x409732
  4095e1:	cmp    eax,ebx
  4095e3:	bound  edx,QWORD PTR [edx+0x65]
  4095e6:	push   0x39
  4095e8:	pop    ebx
  4095e9:	jmp    0x4095e6
  4095eb:	adc    al,0xc5
  4095ed:	jmp    0x409582
  4095ef:	jno    0x4095cc
  4095f1:	mov    dh,0xcd
  4095f3:	jl     0x409671
  4095f5:	daa    
  4095f6:	jg     0x409674
  4095f8:	jl     0x40957f
  4095fa:	test   BYTE PTR [edi+esi*2+0x31aeb59b],ah
  409601:	push   ss
  409602:	scas   eax,DWORD PTR es:[edi]
  409603:	aaa    
  409604:	fbstp  TBYTE PTR [ebx+eax*1-0x7f]
  409608:	push   eax
  409609:	ficom  WORD PTR [eax+0x32b28982]
  40960f:	mov    edi,0x975120
  409614:	(bad)  
  409615:	in     al,0x10
  409617:	addr16 mov ebx,0x99e90c56
  40961d:	sub    esi,DWORD PTR [eax-0x6f]
  409620:	fldenv [eax+0xe1b64a]
  409626:	adc    eax,0xddae10fe
  40962b:	pop    ecx
  40962c:	in     eax,0xf7
  40962e:	mov    cl,0x5d
  409630:	inc    esp
  409631:	inc    esi
  409632:	and    ebx,DWORD PTR [edx+eax*2]
  409635:	mov    ds:0xb6ce5bfd,eax
  40963a:	or     eax,0x5a715e09
  40963f:	pop    ds
  409640:	mov    al,0xa0
  409642:	pop    edi
  409643:	inc    edx
  409644:	sub    ebp,DWORD PTR [edi-0x192825d8]
  40964a:	imul   ecx,DWORD PTR [ebx-0x478da17a],0x794ffaef
  409654:	inc    edi
  409655:	mov    ebx,0x6ace8560
  40965a:	mov    esp,0x5ee421ef
  40965f:	add    eax,0x9eabf8f3
  409664:	inc    esp
  409665:	popf   
  409666:	mov    edx,edx
  409668:	add    edx,DWORD PTR [eax+edi*2+0x23]
  40966c:	mov    dh,0x3d
  40966e:	test   al,0x9f
  409670:	sub    DWORD PTR [esi+0x449f874],0x78
  409677:	gs cld 
  409679:	dec    edi
  40967a:	rcr    BYTE PTR [edx+ebp*1-0x777e7df1],cl
  409681:	retf   0xe674
  409684:	xor    eax,0xf873d52
  409689:	popf   
  40968a:	pop    ebp
  40968b:	mov    esi,0xcad79e34
  409690:	out    0x71,al
  409692:	test   eax,0x7c6b57d9
  409697:	pusha  
  409698:	lds    esi,FWORD PTR [ebp-0x9]
  40969b:	std    
  40969c:	dec    ebx
  40969d:	stos   BYTE PTR es:[edi],al
  40969e:	retf   0xfc20
  4096a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096a2:	mov    esp,0x93a63f97
  4096a7:	dec    ebp
  4096a8:	psllq  mm7,mm2
  4096ab:	(bad)  
  4096ac:	int    0x4f
  4096ae:	xchg   esp,eax
  4096af:	int    0x17
  4096b1:	jne    0x40966e
  4096b3:	cwde   
  4096b4:	(bad)  
  4096b5:	outs   dx,DWORD PTR ds:[esi]
  4096b6:	hlt    
  4096b7:	(bad)  
  4096b8:	push   0x3d
  4096ba:	and    edi,DWORD PTR [edx+0x25a387a7]
  4096c0:	pop    ecx
  4096c1:	fwait
  4096c2:	cld    
  4096c3:	imul   DWORD PTR [ebx]
  4096c5:	mov    BYTE PTR [esi+0x4c],0x91
  4096c9:	stos   DWORD PTR es:[edi],eax
  4096ca:	mov    dl,0x4
  4096cc:	sub    eax,esp
  4096ce:	xchg   edi,eax
  4096cf:	xchg   DWORD PTR [esi+0x39],eax
  4096d2:	rcl    esi,0x88
  4096d5:	data16 sub al,0xcf
  4096d8:	push   ss
  4096d9:	call   DWORD PTR [ebx]
  4096db:	jno    0x4096d3
  4096dd:	(bad)  
  4096e0:	fwait
  4096e1:	int    0xf8
  4096e3:	test   BYTE PTR [esi+0x4ff0e044],dl
  4096e9:	mov    ch,bh
  4096eb:	scas   al,BYTE PTR es:[edi]
  4096ec:	jg     0x48f3ab37
  4096f2:	xchg   esi,ebx
  4096f4:	xchg   edi,eax
  4096f5:	aas    
  4096f6:	inc    esi
  4096f7:	cmp    dl,BYTE PTR [edi+0x38]
  4096fa:	pop    ss
  4096fb:	push   ebp
  4096fc:	in     al,0x86
  4096fe:	xchg   edx,eax
  4096ff:	(bad)  
  409700:	aad    0xe3
  409702:	ror    BYTE PTR [ebx-0x69],cl
  409705:	sub    eax,DWORD PTR [ebx+0x60]
  409708:	js     0x409707
  40970a:	inc    ebp
  40970b:	dec    eax
  40970c:	lods   al,BYTE PTR ds:[esi]
  40970d:	or     esp,DWORD PTR [esi+0x3ea0facc]
  409713:	xchg   esi,edx
  409715:	pop    esp
  409716:	push   esi
  409717:	inc    ebx
  409718:	(bad)  
  409719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40971a:	push   ss
  40971b:	dec    esp
  40971c:	pop    es
  40971d:	popa   
  40971e:	push   ds
  40971f:	scas   al,BYTE PTR es:[edi]
  409720:	hlt    
  409721:	jle    0x409797
  409723:	jmp    0xc200:0xb8bf6e90
  40972a:	xor    ah,BYTE PTR [ecx+0x55]
  40972d:	jp     0x409723
  40972f:	fistp  WORD PTR [edi+0x3d133fc]
  409735:	(bad)  
  409736:	mov    DWORD PTR ds:0x43fbf4,0x4464
  409740:	cmp    edx,eax
  409742:	mov    DWORD PTR ds:0x413b56,0xc14
  40974c:	je     0x40993f
  409752:	add    DWORD PTR ds:0x43fbf0,0x1465
  40975c:	push   ebx
  40975d:	and    DWORD PTR ds:0x4427b0,0x0
  409767:	mov    eax,ds:0x4427b0
  40976c:	inc    eax
  40976d:	mov    ds:0x4427b0,eax
  409772:	cmp    DWORD PTR ds:0x4427b0,0x10
  409779:	jne    0x409785
  40977f:	call   DWORD PTR ds:0x43c88c
  409785:	cmp    DWORD PTR ds:0x4427b0,0xf
  40978c:	jne    0x40979d
  409792:	mov    eax,ds:0x4427b0
  409797:	inc    eax
  409798:	mov    ds:0x4427b0,eax
  40979d:	cmp    DWORD PTR ds:0x4427b0,0x1d
  4097a4:	jb     0x409767
  4097aa:	push   edi
  4097ab:	jmp    0x409901
  4097b0:	push   esp
  4097b1:	ss push edx
  4097b3:	std    
  4097b4:	push   edx
  4097b5:	jge    0x40981e
  4097b7:	pop    ebp
  4097b8:	add    al,0xa1
  4097ba:	or     eax,0xdc2ff00d
  4097bf:	bound  esi,QWORD PTR [ecx-0x31]
  4097c2:	jl     0x409840
  4097c4:	daa    
  4097c5:	jg     0x409843
  4097c7:	jl     0x409831
  4097c9:	pop    esi
  4097ca:	push   eax
  4097cb:	adc    al,0xed
  4097cd:	mov    ebx,0x86778c9d
  4097d2:	mov    esi,0xa131cd9
  4097d7:	adc    esp,DWORD PTR [ecx-0x36be756]
  4097dd:	or     dh,BYTE PTR [ecx-0x71]
  4097e0:	or     dh,BYTE PTR [esi]
  4097e2:	mov    DWORD PTR [edi-0x123a9fbd],ebx
  4097e8:	ins    DWORD PTR es:[edi],dx
  4097e9:	call   0xe9cf698a
  4097ee:	mov    esp,gs
  4097f0:	hlt    
  4097f1:	(bad)  
  4097f2:	fiadd  DWORD PTR [ebx-0x40]
  4097f5:	loope  0x40983c
  4097f7:	int3   
  4097f8:	xchg   DWORD PTR [edx+0x3e],edx
  4097fb:	xor    eax,0x93174d87
  409800:	jg     0x409860
  409802:	push   ebx
  409803:	push   0x36d486b0
  409808:	xchg   esp,eax
  409809:	repnz rol eax,0x13
  40980d:	cmp    eax,0x368c52a1
  409812:	xor    eax,0xd40260e0
  409817:	lds    esi,FWORD PTR [esi]
  409819:	jmp    0x409820
  40981b:	rcl    BYTE PTR [eax],1
  40981d:	push   ebp
  40981e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40981f:	mov    DWORD PTR [edi],esp
  409821:	js     0x4097fd
  409823:	sub    al,dl
  409825:	popf   
  409826:	ins    DWORD PTR es:[edi],dx
  409827:	ins    BYTE PTR es:[edi],dx
  409828:	add    al,0x60
  40982a:	popa   
  40982b:	lahf   
  40982c:	dec    esp
  40982d:	call   0xf3a87f7a
  409832:	jmp    0x4097f1
  409834:	retf   0x524
  409837:	mov    edi,0x21b3e886
  40983c:	and    bl,BYTE PTR [eax]
  40983e:	adc    al,0xee
  409840:	push   ebp
  409841:	sahf   
  409842:	cwde   
  409843:	and    ebx,DWORD PTR [ebp-0x5d]
  409846:	fwait
  409847:	dec    ecx
  409848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409849:	pop    edx
  40984a:	sahf   
  40984b:	in     eax,0x90
  40984d:	loopne 0x4098a9
  40984f:	pop    esp
  409850:	xor    dl,BYTE PTR ds:0x4e53f601
  409856:	dec    ecx
  409857:	xchg   DWORD PTR [edi+0x78bf3db7],edi
  40985d:	jmp    0x51cf2d80
  409862:	sbb    edx,DWORD PTR gs:[ebx-0x28ecd5c7]
  409869:	das    
  40986a:	inc    ebx
  40986b:	pop    edx
  40986c:	add    eax,0x94ffd720
  409871:	mov    ecx,0xe40e61c6
  409876:	je     0x409808
  409878:	mov    edi,DWORD PTR [esi-0x58]
  40987b:	xor    edi,ecx
  40987d:	cmp    cl,BYTE PTR [ebp+ebp*4+0x457ba232]
  409884:	fmul   QWORD PTR [ecx+0x7fac4c32]
  40988a:	cli    
  40988b:	icebp  
  40988c:	and    eax,0x9e8a09b3
  409891:	jbe    0x409908
  409893:	or     bh,BYTE PTR [ebp+0x52]
  409896:	aam    0xad
  409898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409899:	lahf   
  40989a:	jecxz  0x4098e9
  40989c:	sbb    eax,0x68a14667
  4098a1:	jg     0x4098cf
  4098a3:	jb     0x409893
  4098a5:	xor    eax,0x196b6f2f
  4098aa:	lods   eax,DWORD PTR ds:[esi]
  4098ab:	sub    eax,0xad946ed8
  4098b0:	or     DWORD PTR [ebx-0x7a2dc3fb],edi
  4098b6:	mov    eax,ds:0xcde36a5f
  4098bb:	mov    WORD PTR [esi-0x5f],fs
  4098be:	add    al,BYTE PTR [ecx-0x4]
  4098c1:	push   ebx
  4098c2:	xchg   ecx,edi
  4098c4:	outs   dx,BYTE PTR ds:[esi]
  4098c5:	mov    ecx,0x698dad2b
  4098ca:	xor    ch,BYTE PTR [eax+esi*2]
  4098cd:	pop    ebp
  4098ce:	es aam 0x37
  4098d1:	ds mov al,0x14
  4098d4:	rcl    ebx,1
  4098d6:	dec    ebp
  4098d7:	mov    ds,ebp
  4098d9:	mov    fs,ecx
  4098db:	aam    0xcc
  4098dd:	cmp    ch,ah
  4098df:	fwait
  4098e0:	xor    al,0x51
  4098e2:	xor    al,BYTE PTR [esi-0x24]
  4098e5:	imul   edx,DWORD PTR [eax+edx*8+0x14],0x1b
  4098ea:	mov    ah,0x18
  4098ec:	inc    edi
  4098ed:	inc    ebx
  4098ee:	mov    dh,0xdc
  4098f0:	mov    al,ss:0x8c84e404
  4098f6:	pop    es
  4098f7:	dec    ebx
  4098f8:	test   al,0x56
  4098fa:	popf   
  4098fb:	jmp    0x154782c5
  409900:	test   DWORD PTR [ebx+0x42b8087d],0x6600008a
  40990a:	xor    eax,DWORD PTR [edi+edx*4+0x2]
  40990e:	mov    edi,0x3b08
  409913:	add    ax,di
  409916:	movzx  eax,ax
  409919:	mov    DWORD PTR [ebp-0x14],eax
  40991c:	mov    eax,DWORD PTR [ebp+0x8]
  40991f:	movzx  eax,WORD PTR [eax+edx*4]
  409923:	xor    eax,0x8a42
  409928:	add    eax,edi
  40992a:	mov    edi,DWORD PTR [ebp-0x14]
  40992d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  409931:	mov    eax,DWORD PTR [ebp-0xc]
  409934:	inc    edx
  409935:	cmp    edx,eax
  409937:	jne    0x409901
  40993d:	pop    edi
  40993e:	pop    ebx
  40993f:	mov    eax,DWORD PTR [ebp-0x8]
  409942:	mov    edx,DWORD PTR [ebp+0x10]
  409945:	xor    eax,ecx
  409947:	add    eax,esi
  409949:	mov    DWORD PTR [edx],eax
  40994b:	mov    eax,DWORD PTR [ebp-0x8]
  40994e:	xor    eax,ecx
  409950:	add    eax,esi
  409952:	mov    DWORD PTR [ebp+0x8],eax
  409955:	mov    eax,DWORD PTR [ebp+0x8]
  409958:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40995c:	mov    dl,BYTE PTR [ebp-0x1]
  40995f:	cmp    al,dl
  409961:	je     0x409afa
  409967:	mov    eax,DWORD PTR [ebp+0x8]
  40996a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40996e:	mov    edx,DWORD PTR [ebp+0xc]
  409971:	cmp    al,BYTE PTR [edx]
  409973:	jne    0x409b20
  409979:	mov    eax,DWORD PTR [ebp-0x8]
  40997c:	mov    edx,DWORD PTR [ebp+0xc]
  40997f:	movsx  edx,BYTE PTR [edx]
  409982:	xor    eax,ecx
  409984:	add    eax,esi
  409986:	cmp    edx,eax
  409988:	je     0x409b14
  40998e:	jmp    0x409ae4
  409993:	add    ah,ah
  409995:	clc    
  409996:	pop    es
  409997:	clc    
  409998:	sbb    esp,ebx
  40999a:	sti    
  40999b:	ins    DWORD PTR es:[edi],dx
  40999c:	sbb    BYTE PTR [esp+ebp*8],ch
  40999f:	neg    dl
  4099a1:	stos   DWORD PTR es:[edi],eax
  4099a2:	retf   0xce38
  4099a5:	jl     0x409a23
  4099a7:	daa    
  4099a8:	jg     0x409a26
  4099aa:	jl     0x409a0f
  4099ac:	add    al,BYTE PTR [edi]
  4099ae:	mov    ch,0xed
  4099b0:	push   0x7f
  4099b2:	out    0x9b,eax
  4099b4:	fsubr  QWORD PTR [eax]
  4099b6:	ds dec edx
  4099b8:	icebp  
  4099b9:	dec    eax
  4099ba:	(bad)
  4099be:	sbb    edi,DWORD PTR [ecx]
  4099c0:	aaa    
  4099c1:	inc    esi
  4099c2:	jns    0x40997f
  4099c4:	xlat   BYTE PTR ds:[ebx]
  4099c5:	test   DWORD PTR ds:0x483b3649,ebx
  4099cb:	sub    BYTE PTR [eax+0x18],ah
  4099ce:	sar    DWORD PTR [ecx+ecx*1-0x1a42198e],0x8
  4099d6:	and    bh,dh
  4099d8:	rcr    ah,1
  4099da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099db:	xor    al,0x7b
  4099dd:	push   ecx
  4099de:	ds push es
  4099e0:	(bad)  
  4099e2:	ja     0x409980
  4099e4:	aas    
  4099e5:	xor    al,0x4c
  4099e7:	outs   dx,DWORD PTR ds:[esi]
  4099e8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099ea:	xor    dh,BYTE PTR [ecx-0x13b1fba7]
  4099f0:	sti    
  4099f1:	pusha  
  4099f2:	shr    edi,0x7c
  4099f5:	add    esp,DWORD PTR es:[eax-0x1e]
  4099f9:	or     dl,BYTE PTR [ecx+0x1d]
  4099fc:	aam    0x5e
  4099fe:	xor    al,0x1e
  409a00:	scas   eax,DWORD PTR es:[edi]
  409a01:	sbb    BYTE PTR [ebp+0x14e0c33e],dl
  409a07:	ror    bl,cl
  409a09:	scas   al,BYTE PTR es:[edi]
  409a0a:	fst    DWORD PTR [edi+esi*8+0x73]
  409a0e:	dec    ecx
  409a0f:	das    
  409a10:	sub    al,0x7e
  409a12:	(bad)  
  409a13:	push   DWORD PTR [ebx+0x4a26cb1f]
  409a19:	fldcw  WORD PTR [esi+0x1de69578]
  409a1f:	adc    eax,0x6c5681dd
  409a24:	push   ebp
  409a25:	cmp    ebp,DWORD PTR [eax-0x75]
  409a28:	mov    dl,0x5d
  409a2a:	pop    ecx
  409a2b:	fmul   QWORD PTR [edx+0x7de7f4a]
  409a31:	xor    DWORD PTR [edi+0x20],esi
  409a34:	rcr    DWORD PTR [edx+0x50],0x7a
  409a38:	(bad)
  409a3c:	cmp    DWORD PTR [edx+ebp*8+0x73dec822],0xffffffd7
  409a44:	test   eax,0xdaa74ccb
  409a49:	xor    DWORD PTR ds:0xf0374a8c,ecx
  409a4f:	and    BYTE PTR [esi+0x7b],al
  409a52:	cdq    
  409a53:	addr16 dec edx
  409a55:	clc    
  409a56:	mov    ecx,0x1da95024
  409a5b:	mov    eax,ds:0x5625a5e5
  409a60:	mov    dl,0xca
  409a62:	dec    ebp
  409a63:	cmp    dh,dl
  409a65:	je     0x409a67
  409a67:	pop    ebp
  409a68:	(bad)  
  409a69:	sub    eax,0x713186dd
  409a6e:	sbb    esi,0xffffffa6
  409a71:	repnz mov ch,ah
  409a74:	add    edx,DWORD PTR ds:0x7f32f90b
  409a7a:	and    al,0x33
  409a7c:	dec    eax
  409a7d:	inc    esp
  409a7e:	sub    ebp,DWORD PTR [ecx]
  409a80:	or     dh,BYTE PTR [edx+edx*1]
  409a83:	push   edi
  409a84:	push   es
  409a85:	into   
  409a86:	sbb    eax,0xe41b940b
  409a8b:	out    dx,eax
  409a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a8d:	in     eax,0x86
  409a8f:	mov    dh,0x1a
  409a91:	xor    BYTE PTR [esi+0x5e61a373],0x26
  409a98:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a9a:	pop    edi
  409a9b:	imul   edi,DWORD PTR [edx],0x476e5312
  409aa1:	mov    al,ds:0x2eedec38
  409aa6:	pushf  
  409aa7:	sub    ah,BYTE PTR [esi+0x44]
  409aaa:	jecxz  0x409a3f
  409aac:	fistp  DWORD PTR [edi+0x2e9ae653]
  409ab2:	nop
  409ab3:	fadd   QWORD PTR [ebp+0x37]
  409ab6:	popa   
  409ab7:	push   0x3a
  409ab9:	les    edx,FWORD PTR [esi+0x7f]
  409abc:	into   
  409abd:	jecxz  0x409aee
  409abf:	and    DWORD PTR [ecx-0x1e35b713],edi
  409ac5:	cmp    BYTE PTR [ebx+ecx*2+0x69],ch
  409ac9:	call   0x72e1:0x6ffd7e83
  409ad0:	sbb    bl,BYTE PTR [esi-0x3b]
  409ad3:	push   eax
  409ad4:	jo     0x409af3
  409ad6:	push   ecx
  409ad7:	mov    ?,WORD PTR [edx-0x33685ca2]
  409add:	cs jno 0x409b33
  409ae0:	adc    BYTE PTR [esi+ebx*1],dh
  409ae3:	ja     0x409aac
  409ae5:	inc    ebp
  409ae6:	call   0x746987a
  409aeb:	lea    eax,[ebp-0x18]
  409aee:	mov    DWORD PTR [ebp-0x14],eax
  409af1:	mov    eax,DWORD PTR [ebp-0x14]
  409af4:	add    DWORD PTR [eax],0x705fa8f
  409afa:	mov    eax,DWORD PTR [ebp-0x10]
  409afd:	mov    edx,DWORD PTR [ebp+0x8]
  409b00:	xor    eax,ecx
  409b02:	lea    eax,[eax+edx*1+0x32729e]
  409b09:	mov    DWORD PTR [ebp+0x8],eax
  409b0c:	inc    DWORD PTR [ebp+0xc]
  409b0f:	jmp    0x409955
  409b14:	mov    eax,DWORD PTR [ebp-0x10]
  409b17:	xor    eax,ecx
  409b19:	mov    ecx,DWORD PTR [ebp+0x10]
  409b1c:	add    eax,esi
  409b1e:	mov    DWORD PTR [ecx],eax
  409b20:	pop    esi
  409b21:	leave  
  409b22:	ret    0xc
  409b25:	push   ebp
  409b26:	mov    ebp,esp
  409b28:	push   ecx
  409b29:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  409b30:	sub    DWORD PTR ds:0x4105cb,edx
  409b36:	mov    eax,DWORD PTR [ebp+0x8]
  409b39:	jmp    0x409ca4
  409b3e:	push   cs
  409b3f:	xchg   BYTE PTR [esi],dl
  409b41:	fs xchg esi,eax
  409b43:	fs dec esi
  409b45:	data16 jg 0x409bb3
  409b48:	pop    esp
  409b49:	lds    eax,FWORD PTR [edx-0x1c0a238d]
  409b4f:	sar    DWORD PTR [esp+edi*2-0x36],0x7f
  409b54:	jl     0x409bd2
  409b56:	test   eax,0x58bd8eb3
  409b5b:	aaa    
  409b5c:	imul   ebp,DWORD PTR [edi-0x5aefaa95],0x67
  409b63:	mov    es,WORD PTR [esi]
  409b65:	repz mov edi,0x9c4c5844
  409b6b:	push   ebp
  409b6c:	iret   
  409b6d:	stc    
  409b6e:	cmp    ebp,DWORD PTR [edi-0x71]
  409b71:	popa   
  409b72:	sbb    edi,DWORD PTR [esi-0x4c75e22]
  409b78:	mov    ds:0xe4371bbb,al
  409b7d:	les    edx,FWORD PTR es:[ebx+0x4a6647cb]
  409b84:	in     al,dx
  409b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b86:	cdq    
  409b87:	xchg   edi,eax
  409b88:	repnz lea esi,ds:0xc67c37e6
  409b8f:	fs add cl,bl
  409b92:	and    BYTE PTR [edx+0x64],dl
  409b95:	jl     0x409bac
  409b97:	cmp    al,0x45
  409b99:	icebp  
  409b9a:	mov    bl,0x7a
  409b9c:	adc    eax,0xabdaecc
  409ba1:	dec    esi
  409ba2:	mov    BYTE PTR ds:[ebx-0x18e82ac3],cl
  409ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409baa:	pop    ds
  409bab:	dec    ecx
  409bac:	cwde   
  409bad:	(bad)
  409bb0:	xchg   edx,eax
  409bb1:	es pop edx
  409bb3:	test   al,0xef
  409bb5:	rcl    DWORD PTR [ecx-0x55],1
  409bb8:	xor    BYTE PTR [ecx+edx*1],ah
  409bbb:	inc    ebp
  409bbc:	mov    dh,0x22
  409bbe:	mov    WORD PTR [ecx+0x7490962a],es
  409bc4:	mov    BYTE PTR [ecx],dh
  409bc6:	arpl   WORD PTR [esi],cx
  409bc8:	pop    edi
  409bc9:	cmp    eax,0xeeb0b84e
  409bce:	test   DWORD PTR [ebx],0x258690d8
  409bd4:	jo     0x409c49
  409bd6:	pusha  
  409bd7:	clc    
  409bd8:	stos   DWORD PTR es:[edi],eax
  409bd9:	mov    esi,0x7f8dbe79
  409bde:	les    edx,FWORD PTR [ebp-0x4a21739f]
  409be4:	stc    
  409be5:	pop    edx
  409be6:	aas    
  409be7:	jg     0x409c3d
  409be9:	fsub   DWORD PTR [ebp+0x5d5d0992]
  409bef:	addr16 inc esp
  409bf1:	or     al,0x9d
  409bf3:	test   DWORD PTR [esi],eax
  409bf5:	stos   BYTE PTR es:[edi],al
  409bf6:	dec    ebp
  409bf7:	rcr    DWORD PTR ds:0x619a2af8,1
  409bfd:	nop
  409bfe:	shl    edi,cl
  409c00:	les    esi,FWORD PTR [eax+ebx*1+0x5d]
  409c04:	push   esp
  409c05:	dec    ebp
  409c06:	inc    ebx
  409c07:	es scas al,BYTE PTR es:[edi]
  409c09:	sbb    esp,edx
  409c0b:	push   cs
  409c0c:	mov    dh,0xff
  409c0e:	ins    DWORD PTR es:[edi],dx
  409c0f:	push   ss
  409c10:	push   ecx
  409c11:	cmp    al,0xf
  409c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c14:	mov    ecx,0x1b867b0a
  409c19:	dec    ecx
  409c1a:	jne    0x409c2a
  409c1c:	cmp    esi,DWORD PTR [ebp+0x41c22325]
  409c22:	jo     0x409bc6
  409c24:	sub    al,BYTE PTR [edx]
  409c26:	fidivr WORD PTR [esi]
  409c28:	mov    ds:0x9426cecf,al
  409c2d:	xchg   esp,eax
  409c2e:	jo     0x409bec
  409c30:	xchg   DWORD PTR [ebp-0x3b],esi
  409c33:	clc    
  409c34:	int    0x90
  409c36:	xor    BYTE PTR [edi+esi*8+0x2f36ed6],dl
  409c3d:	movd   mm4,DWORD PTR [esp+edx*2]
  409c41:	lods   al,BYTE PTR ds:[esi]
  409c42:	(bad)  
  409c43:	xor    bh,dl
  409c45:	cli    
  409c46:	jg     0x409be6
  409c48:	adc    ch,BYTE PTR [edx+0x2d]
  409c4b:	das    
  409c4c:	inc    eax
  409c4d:	clc    
  409c4e:	jp     0x409caa
  409c50:	push   0xfffffffe
  409c52:	mov    ds,WORD PTR [edx+0x2f]
  409c55:	ds inc edi
  409c57:	imul   esi,DWORD PTR [ebx],0xffffffbc
  409c5a:	adc    dh,bl
  409c5c:	shr    DWORD PTR [eax+0x2229518d],0x5a
  409c63:	and    al,0x23
  409c65:	cmp    eax,0xf156ebb2
  409c6b:	clc    
  409c6c:	adc    BYTE PTR [ecx],dh
  409c6e:	cwde   
  409c6f:	cmp    DWORD PTR [esi+0x4880d0bd],esi
  409c75:	pop    ebp
  409c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c77:	rcr    BYTE PTR [ecx+0x7e571acb],1
  409c7d:	jo     0x409c95
  409c7f:	je     0x409c78
  409c81:	add    cl,BYTE PTR [ebp+edi*2+0x78f3d6d0]
  409c88:	pop    esp
  409c89:	jb     0x409c47
  409c8b:	(bad)  [ebp+edx*8+0x3c]
  409c8f:	push   ds
  409c90:	push   0xffffff9c
  409c92:	inc    edi
  409c93:	outs   dx,DWORD PTR ds:[esi]
  409c94:	sti    
  409c95:	inc    eax
  409c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c97:	add    eax,0x3c9c6b10
  409c9c:	and    eax,0x289ae9c8
  409ca1:	cmp    esi,DWORD PTR [ebp-0x7eff75a2]
  409ca7:	adc    eax,0x413b5a
  409cac:	mov    eax,0x4004427
  409cb1:	xor    eax,0x66e94934
  409cb6:	add    DWORD PTR [eax],eax
  409cb8:	add    BYTE PTR [ecx],al
  409cba:	bound  esp,QWORD PTR [eax-0x13]
  409cbd:	arpl   bp,bp
  409cbf:	cdq    
  409cc0:	jp     0x409c53
  409cc2:	fldenv [esi+ebx*2-0x4dbaaad8]
  409cc9:	mov    cl,0xc0
  409ccb:	jl     0x409d49
  409ccd:	retf   0x7c7f
  409cd0:	jl     0x409c68
  409cd2:	aas    
  409cd3:	jns    0x409ce2
  409cd5:	adc    eax,0x9681d3a5
  409cda:	div    DWORD PTR [esi+0x5a]
  409cdd:	aam    0xaa
  409cdf:	lods   al,BYTE PTR ds:[esi]
  409ce0:	aas    
  409ce1:	stos   DWORD PTR es:[edi],eax
  409ce2:	mov    ebp,0x8ad47df6
  409ce7:	cli    
  409ce8:	fist   WORD PTR [eax]
  409cea:	inc    ebx
  409ceb:	dec    esp
  409cec:	mov    ds:0xcebb1249,al
  409cf1:	push   edx
  409cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cf3:	sbb    eax,0x9478c9f5
  409cf8:	fisttp DWORD PTR [edx]
  409cfa:	pop    edx
  409cfb:	lahf   
  409cfc:	inc    eax
  409cfd:	test   eax,0x31a0f4b
  409d02:	call   0xf84dd329
  409d07:	pop    ecx
  409d08:	jmp    0xfbf2:0x11fea6aa
  409d0f:	arpl   WORD PTR [edi+0x380a9197],sp
  409d15:	aas    
  409d16:	push   ss
  409d17:	arpl   WORD PTR [edx+eiz*2-0x62e1481a],bp
  409d1e:	(bad)
  409d21:	out    dx,eax
  409d22:	fwait
  409d23:	push   esp
  409d24:	inc    BYTE PTR [esp+ebx*1-0x3c]
  409d28:	sahf   
  409d29:	inc    eax
  409d2a:	adc    ch,bh
  409d2c:	add    edi,DWORD PTR [eax-0x672d5b9b]
  409d32:	je     0x409d2a
  409d34:	js     0x409d08
  409d36:	out    dx,eax
  409d37:	jmp    0x409d99
  409d39:	shld   edx,edx,0xce
  409d3d:	add    DWORD PTR [esp+ebp*8],0x24
  409d41:	into   
  409d42:	rol    DWORD PTR [edx+0x2949430b],cl
  409d48:	lock sbb al,BYTE PTR [ebx-0x11]
  409d4c:	mov    eax,ds:0x8bc34f52
  409d51:	hlt    
  409d52:	imul   ecx,DWORD PTR [ebx+eax*4+0x19],0xa
  409d57:	sti    
  409d58:	sub    BYTE PTR [ebp+0x29],dh
  409d5b:	cmp    eax,0x2402cb69
  409d60:	cdq    
  409d61:	xchg   dh,bh
  409d63:	push   esi
  409d64:	pop    es
  409d65:	xor    dh,BYTE PTR [edx+0x25]
  409d68:	jge    0x409ced
  409d6a:	fld1   
  409d6c:	adc    al,0x31
  409d6e:	inc    eax
  409d6f:	cmp    BYTE PTR [esi+0x53],dl
  409d72:	hlt    
  409d73:	call   ecx
  409d75:	(bad)  
  409d77:	lods   al,BYTE PTR ds:[esi]
  409d78:	or     eax,0x25541ff0
  409d7d:	lods   al,BYTE PTR ds:[esi]
  409d7e:	data16 cmp al,0x40
  409d81:	cmp    eax,0xe1d96b7
  409d86:	mov    ch,0xdf
  409d88:	jmp    0xad4b:0xba8e4ee4
  409d8f:	loop   0x409d9f
  409d91:	xchg   edx,eax
  409d92:	and    ecx,eax
  409d94:	sbb    ah,BYTE PTR [ebx+0x5ae59135]
  409d9a:	(bad)  
  409d9b:	ss xchg ebx,eax
  409d9d:	js     0x409de8
  409d9f:	call   0xcfeaa434
  409da4:	iret   
  409da5:	shl    BYTE PTR [eax-0x1a],cl
  409da8:	push   ss
  409da9:	sbb    edi,ecx
  409dab:	push   esi
  409dac:	data16 mov bl,0x33
  409daf:	(bad)  
  409db0:	clc    
  409db1:	mov    eax,ds:0x33cf209a
  409db6:	jns    0x409d51
  409db8:	adc    bh,BYTE PTR [ecx-0x80]
  409dbb:	pop    esi
  409dbc:	mov    BYTE PTR [ebx-0x25],ch
  409dbf:	sub    DWORD PTR [ebp-0x1f],ebp
  409dc2:	sbb    al,BYTE PTR [edx+0x75baed74]
  409dc8:	push   eax
  409dc9:	lods   eax,DWORD PTR ds:[esi]
  409dca:	dec    edx
  409dcb:	scas   al,BYTE PTR es:[edi]
  409dcc:	sub    al,BYTE PTR [edi+0x54d53101]
  409dd2:	add    edi,DWORD PTR [ebp+0x589d2ac4]
  409dd8:	sub    bl,BYTE PTR [ecx]
  409dda:	pop    ss
  409ddb:	outs   dx,BYTE PTR ds:[esi]
  409ddc:	cs ds dec eax
  409ddf:	popa   
  409de0:	xchg   BYTE PTR [ecx+0x6d6febc3],bh
  409de6:	pushf  
  409de7:	xor    dh,BYTE PTR [ecx+0x3d]
  409dea:	nop
  409deb:	and    al,0x80
  409ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dee:	mov    cl,0x9a
  409df0:	pop    ecx
  409df1:	dec    edi
  409df2:	call   0x72cdd47
  409df7:	out    dx,eax
  409df8:	(bad)  
  409df9:	clc    
  409dfa:	hlt    
  409dfb:	push   0x97e3d57f
  409e00:	xor    eax,0x91dc6335
  409e05:	mov    esp,0x2cdd5d4
  409e0a:	jns    0x409e3d
  409e0c:	sub    ecx,DWORD PTR [ebx+0x2a]
  409e0f:	sbb    BYTE PTR [ecx-0x3428eefe],cl
  409e15:	or     eax,DWORD PTR [esi-0x6108842b]
  409e1b:	dec    ebx
  409e1c:	lds    edi,FWORD PTR [esi-0x18]
  409e1f:	cmp    al,0xcb
  409e21:	mov    DWORD PTR ds:0x413b42,0x71b7
  409e2b:	jne    0x40a324
  409e31:	or     DWORD PTR ds:0x4105d7,edx
  409e37:	mov    eax,DWORD PTR [ebp+0x8]
  409e3a:	mov    ecx,DWORD PTR [ebp+0x8]
  409e3d:	adc    DWORD PTR ds:0x43fbe0,0x48d6
  409e47:	add    ecx,DWORD PTR [eax+0x3c]
  409e4a:	mov    edx,DWORD PTR ds:0x43c8f4
  409e50:	xor    eax,eax
  409e52:	or     eax,DWORD PTR ds:0x43c900
  409e58:	sub    eax,edx
  409e5a:	and    edx,DWORD PTR [edx+eax*1]
  409e5d:	mov    edx,0x7510857
  409e62:	mov    DWORD PTR ds:0x4105c3,0x1d
  409e6c:	cmp    DWORD PTR ds:0x4105c3,0x0
  409e73:	je     0x409eb2
  409e79:	cmp    DWORD PTR ds:0x4105c3,0x2c
  409e80:	jne    0x409ea2
  409e86:	push   DWORD PTR [ebp-0x1c]
  409e89:	push   DWORD PTR [ebp-0x28]
  409e8c:	push   DWORD PTR [ebp-0x10]
  409e8f:	push   0x1f6d
  409e94:	push   0x61b1
  409e99:	push   DWORD PTR [ebp-0x14]
  409e9c:	call   DWORD PTR ds:0x43c524
  409ea2:	mov    eax,ds:0x4105c3
  409ea7:	dec    eax
  409ea8:	mov    ds:0x4105c3,eax
  409ead:	jmp    0x409e6c
  409eb2:	mov    DWORD PTR [ebp+0x8],ecx
  409eb5:	mov    eax,DWORD PTR [ebp-0x4]
  409eb8:	xor    eax,edx
  409eba:	push   esi
  409ebb:	mov    esi,DWORD PTR [ebp+0x8]
  409ebe:	mov    ecx,0x32729e
  409ec3:	add    eax,ecx
  409ec5:	cmp    DWORD PTR [esi+0x54],eax
  409ec8:	jmp    0x40a033
  409ecd:	mov    esi,0x45a9bf40
  409ed2:	mov    ebp,0xfb297b56
  409ed7:	test   BYTE PTR [esi-0x632574b8],bl
  409edd:	cmpps  xmm7,XMMWORD PTR [esp+edi*2-0x36],0x7f
  409ee3:	jl     0x409f61
  409ee5:	cld    
  409ee6:	mov    bl,0xd8
  409ee8:	dec    esp
  409ee9:	pop    es
  409eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eeb:	dec    esp
  409eec:	sti    
  409eed:	fimul  DWORD PTR [ebp+0x6d]
  409ef0:	lea    ebx,[eax+ebp*2]
  409ef3:	xor    DWORD PTR [ebp+0x18806765],esp
  409ef9:	xor    edi,edi
  409efb:	lods   eax,DWORD PTR cs:[esi]
  409efd:	test   BYTE PTR [ecx+0x40],bl
  409f00:	xchg   ebx,eax
  409f01:	add    dh,BYTE PTR [edi]
  409f03:	shl    BYTE PTR [esi-0x14],0xa7
  409f07:	inc    edx
  409f08:	outs   dx,DWORD PTR ds:[esi]
  409f09:	mov    esp,0xeea37110
  409f0e:	xchg   esi,eax
  409f0f:	push   cs
  409f10:	mov    ecx,0x7c6f70dd
  409f15:	push   0x48
  409f17:	mov    bl,0xed
  409f19:	(bad)  
  409f1a:	mov    ebx,0xe2b7b8b0
  409f20:	xlat   BYTE PTR gs:[ebx]
  409f22:	jbe    0x409ec1
  409f24:	inc    ecx
  409f25:	jmp    0x409f2f
  409f27:	pop    eax
  409f28:	mov    bh,0xca
  409f2a:	sub    dh,BYTE PTR [eax-0x64bab9ef]
  409f30:	retf   0x6e08
  409f33:	aad    0x3
  409f35:	cdq    
  409f36:	adc    eax,0x69824989
  409f3b:	inc    ebx
  409f3c:	xchg   ebp,eax
  409f3d:	jle    0x409fb7
  409f3f:	and    esi,DWORD PTR [ebp+0x7c]
  409f42:	iret   
  409f43:	gs enter 0xe0bb,0x64
  409f48:	leave  
  409f49:	outs   dx,DWORD PTR ds:[esi]
  409f4a:	out    0x83,al
  409f4c:	cs call 0x9b19:0xc0855c36
  409f54:	adc    eax,0x9484d01
  409f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f5a:	rcl    BYTE PTR [edx-0x52938da6],cl
  409f60:	mov    DWORD PTR [esi+0x55466db4],esp
  409f66:	cli    
  409f67:	dec    ebp
  409f68:	sbb    eax,0x55ae388b
  409f6d:	jge    0x409f42
  409f6f:	(bad)  
  409f70:	call   0x904ae01d
  409f75:	adc    DWORD PTR [ebx-0x79],0xffffff84
  409f79:	jl     0x409f52
  409f7b:	enter  0x1b3e,0xfa
  409f7f:	mov    cl,0x6a
  409f81:	adc    BYTE PTR [ebx+0x78],ah
  409f84:	inc    ecx
  409f85:	sub    ah,BYTE PTR [ecx-0x54]
  409f88:	shl    DWORD PTR [ebp-0x390aaf56],cl
  409f8e:	in     al,0xd4
  409f90:	push   ecx
  409f91:	ret    
  409f92:	aas    
  409f93:	jne    0x409f62
  409f95:	jb     0x409fcc
  409f97:	int    0x4b
  409f99:	pop    ds
  409f9a:	sub    BYTE PTR [ebx],bh
  409f9c:	cmc    
  409f9d:	mov    ds:0x54f1c8ec,al
  409fa2:	lods   eax,DWORD PTR ds:[esi]
  409fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fa4:	idiv   al
  409fa6:	sti    
  409fa7:	fld    DWORD PTR [edx+edx*2]
  409faa:	cmp    bh,BYTE PTR [ebp+0x1]
  409fad:	mov    al,ds:0x8b776ee8
  409fb2:	or     al,BYTE PTR [edx]
  409fb4:	inc    edx
  409fb5:	cmc    
  409fb6:	aas    
  409fb7:	outs   dx,BYTE PTR ds:[esi]
  409fb8:	ror    edx,0xcb
  409fbb:	retf   
  409fbc:	xor    BYTE PTR [ecx-0x72936efe],al
  409fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fc3:	push   ds
  409fc4:	test   eax,0xf4971c86
  409fc9:	test   DWORD PTR [edi],ebx
  409fcb:	add    DWORD PTR ds:0x1e56faa3,0x2a5260a5
  409fd5:	add    eax,0xbfeee0f5
  409fda:	shr    DWORD PTR [ebp-0x30587972],1
  409fe0:	sar    BYTE PTR [ecx+0x34],cl
  409fe3:	call   0xf63ad773
  409fe8:	mov    eax,ds:0x5d0a3e3
  409fed:	mov    al,0x24
  409fef:	cmp    eax,0x5b166f52
  409ff4:	cmp    DWORD PTR [ecx+0x55bd975b],ebx
  409ffa:	aaa    
  409ffb:	inc    ebx
  409ffc:	ret    0x5773
  409fff:	mov    BYTE PTR [edi+0x41443ac1],dl
  40a005:	mov    ah,0x92
  40a007:	sbb    eax,0x377b48a4
  40a00c:	inc    ebp
  40a00d:	and    DWORD PTR [esi],ebx
  40a00f:	cmp    dl,BYTE PTR [ebx]
  40a011:	mov    ?,WORD PTR [edx-0x4a680468]
  40a017:	out    0x13,al
  40a019:	sti    
  40a01a:	loopne 0x409fd6
  40a01c:	shl    ebp,1
  40a01e:	aas    
  40a01f:	mov    eax,0xd8cca5e
  40a024:	mov    esi,0x4845ef1e
  40a029:	inc    ebx
  40a02a:	fnsave [ebx-0xb1b74]
  40a030:	push   ss
  40a031:	test   eax,eax
  40a033:	pop    esi
  40a034:	je     0x40a1ad
  40a03a:	mov    eax,DWORD PTR [ebp+0x8]
  40a03d:	jmp    0x40a331
  40a042:	jmp    0x40a1ad
  40a047:	xchg   ecx,eax
  40a048:	test   dh,dl
  40a04a:	loopne 0x40a045
  40a04c:	bound  edi,QWORD PTR [ebp+0x7db7845d]
  40a052:	add    DWORD PTR [ebp-0x227959b6],ebp
  40a058:	lds    edi,FWORD PTR [esp+edi*2-0x36]
  40a05c:	jg     0x40a0da
  40a05e:	jl     0x40a08d
  40a060:	inc    ecx
  40a061:	fidiv  DWORD PTR [edi-0x180296fa]
  40a067:	pop    esi
  40a068:	sbb    al,al
  40a06a:	clc    
  40a06b:	or     bh,cl
  40a06d:	rcr    DWORD PTR [edi],0x9f
  40a070:	ins    BYTE PTR es:[edi],dx
  40a071:	fisttp WORD PTR [edi+0x6a]
  40a074:	ja     0x40a043
  40a076:	outs   dx,BYTE PTR ds:[esi]
  40a077:	cwde   
  40a078:	dec    ebx
  40a079:	sub    eax,0xffd85e67
  40a07e:	lea    edi,[esp+edx*1+0x3f]
  40a082:	mov    ecx,0xd05f38a1
  40a087:	popf   
  40a088:	cmc    
  40a089:	jb     0x40a00f
  40a08b:	daa    
  40a08c:	or     BYTE PTR [ebp+0x54],cl
  40a08f:	stos   BYTE PTR es:[edi],al
  40a090:	sbb    cl,BYTE PTR [edx-0x6b]
  40a093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a094:	xchg   esi,eax
  40a095:	std    
  40a096:	mov    edi,0xe9b98281
  40a09b:	jge    0x40a0cd
  40a09d:	stos   BYTE PTR es:[edi],al
  40a09e:	shr    BYTE PTR [eax-0x9703ad2],cl
  40a0a4:	cmp    DWORD PTR ds:[ebx-0x5d],0x6a59e6cd
  40a0ac:	std    
  40a0ad:	or     al,0xea
  40a0af:	adc    ch,BYTE PTR [ecx]
  40a0b1:	pop    edi
  40a0b2:	jecxz  0x40a0ff
  40a0b4:	sbb    bl,BYTE PTR [ebp-0x59]
  40a0b7:	xor    BYTE PTR [ecx+0x6d],dh
  40a0ba:	adc    eax,0xf5385e33
  40a0bf:	cmp    al,BYTE PTR [ebx+edx*4]
  40a0c2:	jb     0x40a131
  40a0c4:	fisttp WORD PTR [ebp+0x42c87d81]
  40a0ca:	fcom   st(4)
  40a0cc:	(bad)  
  40a0cd:	xlat   BYTE PTR ds:[ebx]
  40a0ce:	stos   BYTE PTR es:[edi],al
  40a0cf:	sti    
  40a0d0:	mov    edi,edx
  40a0d2:	add    al,0x45
  40a0d4:	mov    eax,ds:0x7cdb6803
  40a0d9:	imul   esi,DWORD PTR [esi+0x7f],0xffffffa5
  40a0dd:	jno    0xbe376582
  40a0e3:	jecxz  0x40a072
  40a0e5:	aaa    
  40a0e6:	pop    ebx
  40a0e7:	mov    esp,0x57e2e2bc
  40a0ec:	gs push es
  40a0ee:	je     0x40a0a3
  40a0f0:	mov    edi,0x5d795ac6
  40a0f5:	pop    ecx
  40a0f6:	call   FWORD PTR [esi+0x55757acf]
  40a0fc:	jmp    0x40a0b2
  40a0fe:	hlt    
  40a0ff:	xor    BYTE PTR [ebp-0x53],ah
  40a102:	mov    al,ds:0x24c71259
  40a107:	sub    dl,BYTE PTR [ecx]
  40a109:	cli    
  40a10a:	into   
  40a10b:	ins    BYTE PTR es:[edi],dx
  40a10c:	std    
  40a10d:	test   DWORD PTR [ebx+0x6e],eax
  40a110:	add    al,0x48
  40a112:	scas   al,BYTE PTR es:[edi]
  40a113:	cmp    DWORD PTR [ebx+0x639e78f0],ebx
  40a119:	out    dx,eax
  40a11a:	retf   0x64a6
  40a11d:	dec    ecx
  40a11e:	js     0x40a139
  40a120:	mov    ebp,0xba1c8d00
  40a125:	and    cl,cl
  40a127:	cmp    edx,DWORD PTR [edi]
  40a129:	mov    esi,0x865d1915
  40a12e:	xor    ebx,eax
  40a130:	pop    esp
  40a131:	xor    DWORD PTR [edx],ebx
  40a133:	idiv   DWORD PTR [ebx+0x6d]
  40a136:	pop    ss
  40a137:	inc    eax
  40a138:	sub    esp,ebx
  40a13a:	inc    ecx
  40a13b:	sub    al,0x99
  40a13d:	sub    BYTE PTR [eax+0x4b581d35],al
  40a143:	mov    eax,0x89ad3f6d
  40a148:	pop    ecx
  40a149:	xor    al,0x2f
  40a14b:	mov    eax,0xc513ab14
  40a150:	dec    eax
  40a151:	out    0xe1,eax
  40a153:	pop    ebx
  40a154:	aaa    
  40a155:	test   esp,eax
  40a157:	mov    dh,0x26
  40a159:	repnz data16 in al,0x9b
  40a15d:	mov    esp,0xb1a6b66d
  40a162:	pop    ss
  40a163:	mov    ds:0xf2d661dc,al
  40a168:	aas    
  40a169:	fsubp  st(4),st
  40a16b:	inc    esi
  40a16c:	xchg   ebx,eax
  40a16d:	inc    edx
  40a16e:	jp     0x40a1a3
  40a170:	dec    ebp
  40a171:	rcr    BYTE PTR [edx+ebp*1-0x52],0xfc
  40a176:	(bad)  [ecx]
  40a178:	imul   ebx,DWORD PTR [ecx+0x2c3f2a40],0xffffff90
  40a17f:	mov    ebx,0x290dd152
  40a184:	mov    dh,0xf8
  40a186:	mov    ecx,0x78ee8bb
  40a18b:	sbb    eax,0x50ab2f01
  40a190:	jg     0x40a11c
  40a192:	lods   al,BYTE PTR ds:[esi]
  40a193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a194:	push   ss
  40a195:	xchg   edx,eax
  40a196:	cmp    ebx,DWORD PTR [eax]
  40a198:	test   eax,0x9d2fc9d2
  40a19d:	retf   0x30f2
  40a1a0:	scas   eax,DWORD PTR es:[edi]
  40a1a1:	inc    ebp
  40a1a2:	dec    edx
  40a1a3:	bound  ebp,QWORD PTR [eax]
  40a1a5:	inc    ebp
  40a1a6:	not    edx
  40a1a8:	lock mov cs,WORD PTR [ebp-0x19]
  40a1ac:	cmp    eax,0xe9fc458b
  40a1b1:	add    WORD PTR [eax],ax
  40a1b4:	add    ah,dl
  40a1b6:	push   0x585040d0
  40a1bb:	fs js  0x40a15e
  40a1be:	jge    0x40a14e
  40a1c0:	(bad)  
  40a1c2:	sbb    eax,0xc4ab6434
  40a1c7:	jl     0x40a245
  40a1c9:	retf   0x7c7f
  40a1cc:	jl     0x40a1b5
  40a1ce:	test   DWORD PTR [edi+0x4a],ebp
  40a1d1:	mov    cl,0x4
  40a1d3:	(bad)  
  40a1d4:	iret   
  40a1d5:	cmp    ecx,edx
  40a1d7:	ja     0x40a18c
  40a1d9:	idiv   BYTE PTR [eax]
  40a1db:	(bad)  
  40a1dd:	xchg   edi,eax
  40a1de:	les    esi,FWORD PTR [edi+0x5fb5fd3a]
  40a1e4:	push   esp
  40a1e5:	xor    edi,ebp
  40a1e7:	dec    edi
  40a1e8:	push   eax
  40a1e9:	pop    ebx
  40a1ea:	jl     0x40a16d
  40a1ec:	test   BYTE PTR [eax],bl
  40a1ee:	lahf   
  40a1ef:	je     0x40a1f5
  40a1f1:	sti    
  40a1f2:	push   esi
  40a1f3:	hlt    
  40a1f4:	add    bl,BYTE PTR [edi+0x6a]
  40a1f7:	push   esi
  40a1f8:	mov    fs,WORD PTR [edi-0x6d]
  40a1fb:	dec    esi
  40a1fc:	call   0xbe34:0x110a69a2
  40a203:	jmp    0x13f8:0x88cb37a2
  40a20a:	call   0xdf64d401
  40a20f:	in     eax,dx
  40a210:	mov    cl,0xde
  40a212:	xor    dh,0xe7
  40a215:	les    ebp,FWORD PTR [ebx+0x63dc08b0]
  40a21b:	cmp    ebp,DWORD PTR [ecx+0x47]
  40a21e:	loop   0x40a26b
  40a220:	cmp    al,0xfa
  40a222:	cmc    
  40a223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a224:	das    
  40a225:	pop    edx
  40a226:	push   edx
  40a227:	mov    dh,0x35
  40a229:	jmp    DWORD PTR [edi]
  40a22b:	sub    BYTE PTR [edi-0x7c],dl
  40a22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a22f:	adc    BYTE PTR [ebx-0x18],dh
  40a232:	push   ebx
  40a233:	and    dl,BYTE PTR [ebp+ebx*1-0x4b6ff096]
  40a23a:	imul   ebx,esi,0xe92bb912
  40a240:	xor    edi,DWORD PTR [ebx+edi*4-0x4a]
  40a244:	mov    es:0x96a5783a,eax
  40a24a:	pop    esp
  40a24b:	pop    DWORD PTR [ebp+edi*1-0x5fce2ea7]
  40a252:	test   eax,0x7a1e5483
  40a257:	stos   DWORD PTR es:[edi],eax
  40a258:	(bad)  
  40a25a:	mov    ds:0x444323c6,eax
  40a25f:	repz pusha 
  40a261:	rcr    esp,1
  40a263:	test   DWORD PTR [edi+eiz*4],0x6b4d7868
  40a26a:	pop    edi
  40a26b:	add    bh,BYTE PTR [edx+0x305a724f]
  40a271:	or     eax,0x5da21d43
  40a276:	mov    bl,0x19
  40a278:	xchg   DWORD PTR [ebp-0x3b],edx
  40a27b:	mov    BYTE PTR [eax+0x2a],cl
  40a27e:	adc    dl,BYTE PTR [esi+0x588f6fda]
  40a284:	xchg   esp,eax
  40a285:	mov    esp,0xeab3e22
  40a28a:	mov    edx,0x132a2b01
  40a28f:	mov    ebx,ecx
  40a291:	mov    cs,WORD PTR [ebp+0x69]
  40a294:	mov    ds:0x3e5e898b,eax
  40a299:	pop    bp
  40a29b:	xchg   BYTE PTR [edx+0x6d],ah
  40a29e:	arpl   WORD PTR [edx],dx
  40a2a0:	popa   
  40a2a1:	mov    eax,ds:0x4cc5c167
  40a2a6:	xor    ebx,esp
  40a2a8:	jbe    0x40a2da
  40a2aa:	push   es
  40a2ab:	scas   eax,DWORD PTR es:[edi]
  40a2ac:	mov    ss,WORD PTR [esi-0x5e]
  40a2af:	xchg   ebp,eax
  40a2b0:	push   cs
  40a2b1:	clc    
  40a2b2:	sub    ch,BYTE PTR [ecx-0x44]
  40a2b5:	inc    ebx
  40a2b6:	lods   eax,DWORD PTR ds:[esi]
  40a2b7:	ins    BYTE PTR es:[edi],dx
  40a2b8:	cmp    edx,DWORD PTR [ebx]
  40a2ba:	aad    0x51
  40a2bc:	sbb    DWORD PTR [eax],edi
  40a2be:	fsub   DWORD PTR [edi]
  40a2c0:	and    BYTE PTR [edx],cl
  40a2c2:	mov    dl,0x14
  40a2c4:	push   edx
  40a2c5:	or     cl,0x71
  40a2c8:	xchg   DWORD PTR [edx+0x70],ebx
  40a2cb:	fnstsw WORD PTR [ebx-0x12]
  40a2ce:	ins    BYTE PTR es:[edi],dx
  40a2cf:	in     eax,dx
  40a2d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2d1:	and    edx,DWORD PTR [ebp+edi*1+0x56]
  40a2d5:	sbb    eax,0xa0ba81b6
  40a2da:	int    0x4f
  40a2dc:	pop    edx
  40a2dd:	push   edi
  40a2de:	cdq    
  40a2df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2e0:	lea    ebp,[ebp-0x2]
  40a2e3:	fidivr WORD PTR [edx-0x5726df12]
  40a2e9:	mov    ?,WORD PTR [edx-0x6ab23702]
  40a2ef:	out    0x99,al
  40a2f1:	cmp    BYTE PTR [ebx],dh
  40a2f3:	push   es
  40a2f4:	(bad)  
  40a2f5:	call   FWORD PTR [ecx-0xa990f4f]
  40a2fb:	test   eax,0xe2b2a6f5
  40a300:	cmp    BYTE PTR [edi-0x4eb6f83a],ah
  40a306:	mov    dl,0x38
  40a308:	push   edx
  40a309:	push   cs
  40a30a:	push   ebp
  40a30b:	dec    eax
  40a30c:	retf   0x8e1a
  40a30f:	cld    
  40a310:	es icebp 
  40a312:	les    esi,FWORD PTR [ecx+esi*8]
  40a315:	cmp    bl,BYTE PTR [edi+0x12]
  40a318:	pop    ds
  40a319:	cmp    DWORD PTR [eax-0x3efc3dcd],edx
  40a31f:	jmp    0x40a331
  40a324:	mov    eax,DWORD PTR [ebp-0x4]
  40a327:	xor    eax,0x7510857
  40a32c:	add    eax,0x32729e
  40a331:	leave  
  40a332:	ret    0x4
  40a335:	dec    ebp
  40a336:	push   ebp
  40a337:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40a33d:	mov    esp,ebp
  40a33f:	or     ah,dh
  40a341:	dec    ebp
  40a342:	add    bh,al
  40a344:	add    BYTE PTR [eax],cl
  40a346:	add    BYTE PTR [eax],al
  40a348:	mov    DWORD PTR [eax],0x40f44545
  40a34e:	xor    eax,0x9c8b8500
  40a353:	hlt    
  40a354:	clc    
  40a355:	retf   
  40a356:	(bad)  
  40a357:	enter  0x4d45,0xbc
  40a35b:	mov    esi,DWORD PTR [esp+esi*8]
  40a35e:	test   ebx,ecx
  40a360:	pushf  
  40a361:	enter  0x4df8,0x8b
  40a365:	mov    DWORD PTR [ebp-0x20],0x890208
  40a36c:	inc    ebp
  40a36d:	inc    ebp
  40a36e:	cld    
  40a36f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40a375:	or     BYTE PTR [ebx+0x0],dl
  40a378:	mov    ebx,0x8bd5700
  40a37d:	call   DWORD PTR [ecx-0x1]
  40a380:	pop    es
  40a381:	mov    ch,0x33
  40a383:	dec    ebx
  40a385:	(bad)  
  40a386:	mov    eax,0x72009ea4
  40a38b:	push   DWORD PTR [edx]
  40a38d:	or     BYTE PTR [eax],al
  40a38f:	jmp    0xff89:0x75c84d03
  40a396:	dec    ebp
  40a397:	loopne 0x40a369
  40a399:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40a39f:	add    BYTE PTR [ebx],dh
  40a3a1:	mov    ecx,ebx
  40a3a3:	hlt    
  40a3a4:	add    ecx,ebx
  40a3a6:	enter  0x899e,0x32
  40a3aa:	dec    ebp
  40a3ab:	add    ecx,eax
  40a3ad:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40a3b3:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40a3ba:	xor    ecx,ebx
  40a3bc:	retf   
  40a3bd:	enter  0x4d03,0xc8
  40a3c1:	mov    DWORD PTR fs:[eax],ebx
  40a3c4:	lea    eax,[eax]
  40a3c6:	push   esp
  40a3c7:	mov    edi,edi
  40a3c9:	fs (bad) 
  40a3cb:	(bad)  
  40a3cc:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40a3d2:	push   0xffffffff
  40a3d4:	and    bh,bh
  40a3d6:	pop    ecx
  40a3d7:	inc    eax
  40a3d8:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40a3de:	push   0xffffff8b
  40a3e0:	pop    ecx
  40a3e1:	cld    
  40a3e2:	dec    ebp
  40a3e3:	lea    ecx,[ecx+0x45ff08ff]
  40a3e9:	mov    BYTE PTR [edx+0x1],cl
  40a3ec:	add    BYTE PTR [eax],al
  40a3ee:	mov    DWORD PTR [ebp+0x8],0x58008d
  40a3f5:	dec    DWORD PTR [ebp-0x77]
  40a3f8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40a3ff:	cld    
  40a400:	dec    ebp
  40a401:	jne    0x40a436
  40a403:	lea    eax,[ebx]
  40a405:	push   eax
  40a406:	mov    edi,edi
  40a408:	or     BYTE PTR [ecx+0x54a845],cl
  40a40e:	add    al,ch
  40a410:	(bad)  
  40a411:	sub    ebp,esp
  40a413:	add    BYTE PTR [eax],al
  40a415:	rol    BYTE PTR [eax],0x84
  40a418:	inc    ebp
  40a419:	add    dh,BYTE PTR [esi+0x0]
  40a41c:	add    BYTE PTR [ebp-0x73],al
  40a41f:	mov    ebp,DWORD PTR [esp+edx*4]
  40a422:	inc    DWORD PTR [eax]
  40a424:	lea    ecx,[ebx-0x30074f4]
  40a42a:	call   0x41afaf
  40a42f:	add    BYTE PTR [ebp+0x0],cl
  40a432:	jne    0x40a475
  40a434:	dec    DWORD PTR [ebx-0x76210314]
  40a43a:	dec    ebp
  40a43b:	add    DWORD PTR [ebp+0x0],esi
  40a43e:	(bad)  
  40a43f:	xchg   ebp,eax
  40a440:	loopne 0x40a441
  40a442:	inc    eax
  40a443:	inc    DWORD PTR [eax]
  40a445:	mov    ecx,DWORD PTR [ebp-0x4]
  40a448:	xor    edx,DWORD PTR [edx+0x7201b8]
  40a44e:	add    BYTE PTR [edx],dl
  40a450:	enter  0x4d90,0x0
  40a454:	mov    eax,DWORD PTR [eax]
  40a456:	hlt    
  40a457:	add    al,0xa5
  40a459:	mov    al,0xff
  40a45b:	add    bh,bh
  40a45d:	add    BYTE PTR [ebx],dh
  40a45f:	inc    DWORD PTR [ebx]
  40a461:	sbb    al,0x89
  40a463:	jne    0x40a43d
  40a465:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40a46b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40a471:	mov    DWORD PTR [eax-0x70],0xee58e189
  40a478:	inc    DWORD PTR [ebp-0x75]
  40a47b:	ror    DWORD PTR [esp+ebp*8],1
  40a47e:	test   DWORD PTR [esi-0x1],esp
  40a481:	inc    ebp
  40a482:	(bad)  
  40a483:	aas    
  40a484:	inc    ebp
  40a485:	(bad)  
  40a486:	lea    edi,[esp+eiz*2-0x1]
  40a48a:	push   DWORD PTR [edi]
  40a48c:	mov    DWORD PTR [ecx],esi
  40a48e:	mov    al,ds:0x8b8000c7
  40a493:	out    dx,al
  40a494:	cld    
  40a495:	call   0xed3fea27
  40a49a:	(bad)  
  40a49b:	fisttp WORD PTR [eax+0x8801c7]
  40a4a1:	jmp    0x40a4e8
  40a4a3:	out    dx,al
  40a4a4:	inc    DWORD PTR [ebp-0x4]
  40a4a7:	xlat   BYTE PTR ds:[ebx]
  40a4a8:	lea    edi,[edi]
  40a4aa:	inc    edi
  40a4ac:	jmp    FWORD PTR [eax-0x78]
  40a4af:	inc    DWORD PTR [ecx]
  40a4b1:	aaa    
  40a4b2:	add    BYTE PTR [ecx],dh
  40a4b4:	pop    ecx
  40a4b5:	mov    DWORD PTR [eax],0xfff856c
  40a4bb:	ffreep st(5)
  40a4bd:	aas    
  40a4be:	add    bh,al
  40a4c0:	mov    esi,DWORD PTR [eax-0x4]
  40a4c3:	inc    DWORD PTR [eax+0xdf01ec]
  40a4c9:	(bad)  
  40a4ca:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40a4ce:	mov    esp,ebx
  40a4d0:	xchg   esp,eax
  40a4d1:	rol    DWORD PTR [eax],cl
  40a4d3:	(bad)  
  40a4d4:	mov    edi,DWORD PTR [eax+0x3]
  40a4d7:	(bad)  
  40a4d8:	cmp    al,0xd7
  40a4da:	dec    ebp
  40a4db:	lds    ecx,FWORD PTR [ebx+0x2ad8e8]
  40a4e1:	add    BYTE PTR [ebp-0x3b375],cl
  40a4e7:	adc    BYTE PTR [edx+0x1],0x55
  40a4eb:	add    BYTE PTR [ebx+0x6c8c30],cl
  40a4f1:	add    BYTE PTR [ebx-0x778afc7b],cl
  40a4f7:	mov    eax,DWORD PTR [eax]
  40a4f9:	cld    
  40a4fa:	push   0x7d
  40a4fc:	dec    DWORD PTR [ebx+0xd88c]
  40a502:	push   edx
  40a503:	mov    edx,DWORD PTR [ecx-0x4]
  40a506:	call   DWORD PTR [eax+0x7d01fc]
  40a50c:	mov    ecx,DWORD PTR [ebx+0x509000fc]
  40a512:	add    DWORD PTR [esi+0x0],edx
  40a515:	test   DWORD PTR [ebp+0x75],eax
  40a518:	call   0xc83d85a8
  40a51d:	jge    0x40a4b3
  40a51f:	mov    ebp,ebx
  40a521:	fcom   st(7)
  40a523:	add    bh,al
  40a525:	mov    ebx,DWORD PTR [eax-0x7a6f8304]
  40a52b:	add    edi,edi
  40a52d:	add    bh,bh
  40a52f:	imul   esp,ecx,0x4550d400
  40a535:	push   esi
  40a536:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40a53c:	test   BYTE PTR [ebx],dh
  40a53e:	aam    0x5
  40a540:	retf   0x4572
  40a543:	add    bl,ah
  40a545:	rcl    ebx,0x84
  40a548:	mov    DWORD PTR [ecx],0x46d1008c
  40a54e:	jl     0x40a550
  40a550:	test   edi,eax
  40a552:	jmp    esp
  40a554:	inc    DWORD PTR [eax]
  40a556:	loope  0x40a558
  40a558:	aam    0x75
  40a55a:	test   DWORD PTR [ebx+0x45fffcff],ecx
  40a560:	out    dx,al
  40a561:	mov    ebp,eax
  40a563:	mov    ah,0x85
  40a565:	add    bh,bh
  40a567:	call   0x114d06b
  40a56c:	retf   0x858b
  40a56f:	cld    
  40a570:	inc    DWORD PTR [eax+0xeb01ff]
  40a576:	out    dx,al
  40a577:	xor    BYTE PTR [ebp-0xff001e],al
  40a57d:	mov    edx,ecx
  40a57f:	cld    
  40a580:	jl     0x40a50b
  40a582:	mov    edx,0x50000001
  40a587:	add    DWORD PTR [ebp+0x45],eax
  40a58a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40a590:	dec    DWORD PTR [ebx-0x3fd80318]
  40a596:	add    BYTE PTR [ebp-0xbf0040],dl
  40a59c:	inc    ebp
  40a59d:	xor    DWORD PTR [ebx-0x4faf0400],ecx
  40a5a3:	inc    ebp
  40a5a4:	add    DWORD PTR [ebx+0x459c00],ecx
  40a5aa:	mov    edi,edi
  40a5ac:	mov    eax,0xe80800ff
  40a5b1:	inc    ebp
  40a5b2:	sub    cl,BYTE PTR [ebx-0x47000400]
  40a5b8:	add    al,0x1
  40a5ba:	rol    BYTE PTR [eax],0x1e
  40a5bd:	jne    0x40a604
  40a5bf:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40a5c5:	inc    DWORD PTR [ecx]
  40a5c7:	call   0x85cfcc
  40a5cc:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40a5d2:	call   0x40cfd8
  40a5d7:	xor    bh,bh
  40a5d9:	push   edi
  40a5da:	adc    BYTE PTR [ebx-0x747423bb],al
  40a5e0:	loopne 0x40a5be
  40a5e2:	ret    
  40a5e3:	loopne 0x40a583
  40a5e5:	xor    DWORD PTR [edx],0x31
  40a5e8:	cmp    edi,edi
  40a5ea:	bswap  esp
  40a5ec:	rol    BYTE PTR gs:[eax],0x5
  40a5f0:	jmp    0x12ba73a
  40a5f5:	mov    eax,DWORD PTR [ebp-0x4]
  40a5f8:	add    BYTE PTR [eax+0xff0100],bh
  40a5fe:	cld    
  40a5ff:	jne    0x40a67e
  40a601:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40a607:	mov    DWORD PTR [ecx],0x30500000
  40a60d:	inc    ebp
  40a60e:	add    BYTE PTR [ebx+0x459850],cl
  40a614:	mov    edi,edi
  40a616:	test   al,0xff
  40a618:	add    BYTE PTR [eax],cl
  40a61a:	inc    DWORD PTR [ebp-0x18]
  40a61d:	jmp    DWORD PTR [esi]
  40a61f:	fadd   QWORD PTR [eax]
  40a621:	jge    0x40a670
  40a623:	adc    BYTE PTR [ebx+0x459cb9],cl
  40a629:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40a62f:	sahf   
  40a630:	mov    eax,0x30132
  40a635:	lea    esi,[ebp+0x2c]
  40a638:	xor    edi,edi
  40a63a:	(bad)  
  40a63b:	call   0x13fcfa8
  40a640:	call   0x134d0d0
  40a645:	jne    0x40a5d2
  40a647:	xor    edi,esp
  40a649:	add    eax,DWORD PTR [eax+0xc018d]
  40a64f:	push   DWORD PTR [eax]
  40a651:	call   0xc9cfad
  40a656:	int3   
  40a657:	inc    DWORD PTR [ebp-0x14]
  40a65a:	mov    ecx,DWORD PTR [ebp-0x28]
  40a65d:	xor    eax,DWORD PTR [eax]
  40a65f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40a665:	(bad)  
  40a666:	xchg   ebp,eax
  40a667:	in     al,0xff
  40a669:	add    bh,bh
  40a66b:	add    BYTE PTR [esi],al
  40a66d:	inc    ebp
  40a66e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40a674:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff62]
  40a67b:	mov    edi,edi
  40a67d:	or     BYTE PTR [eax],cl
  40a67f:	inc    ebp
  40a680:	test   DWORD PTR gs:[eax],eax
  40a683:	je     0x40a6ca
  40a685:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40a68b:	xor    edx,DWORD PTR [eax-0x73]
  40a68e:	push   ebp
  40a68f:	or     BYTE PTR [ebp+0x21007572],al
  40a695:	inc    ebp
  40a696:	in     al,dx
  40a697:	mov    ebp,DWORD PTR [eax]
  40a699:	mov    esp,0x628bc345
  40a69e:	fmul   st,st(5)
  40a6a0:	add    BYTE PTR [ebx],ch
  40a6a2:	mov    eax,DWORD PTR [ebx]
  40a6a4:	cld    
  40a6a5:	loopne 0x40a667
  40a6a7:	inc    ebp
  40a6a8:	push   ebp
  40a6a9:	cmp    ebp,eax
  40a6ab:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  40a6b2:	cld    
  40a6b3:	fadd   DWORD PTR [eax+0x3b014d]
  40a6b9:	jne    0x40a6eb
  40a6bb:	push   0xf8898557
  40a6c0:	in     al,dx
  40a6c1:	jne    0x40a708
  40a6c3:	lea    eax,[ebx+0x72e8dcc8]
  40a6c9:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  40a6cf:	jmp    0x40a704
  40a6d1:	mov    edi,DWORD PTR [edi+0x4572bc]
  40a6d7:	xor    eax,edi
  40a6d9:	adc    DWORD PTR [ebp-0xcd0062],0x8b9231
  40a6e3:	rcl    BYTE PTR [eax-0x40],1
  40a6e6:	inc    ebp
  40a6e7:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40a6ef:	inc    ebp
  40a6f0:	xchg   ebp,eax
  40a6f1:	ud0    ebp,DWORD PTR [ebx]
  40a6f4:	inc    DWORD PTR [eax]
  40a6f6:	jl     0x40a76e
  40a6f8:	add    BYTE PTR [edx+0x1f558050],cl
  40a6fe:	mov    ecx,DWORD PTR [esp+esi*8]
  40a701:	inc    eax
  40a702:	retf   
  40a703:	inc    ebp
  40a704:	iret   
  40a705:	jb     0x40a6cf
  40a707:	mov    eax,DWORD PTR [edi]
  40a709:	enter  0x4545,0x1
  40a70d:	xor    eax,0x898b9c00
  40a712:	mov    esp,0x33344df0
  40a717:	pushf  
  40a718:	lea    ecx,[ecx+0x4d72e008]
  40a71e:	add    BYTE PTR [ebx],dh
  40a720:	inc    ebp
  40a721:	mov    DWORD PTR [ebx-0x3f611b4c],ecx
  40a727:	xor    dl,BYTE PTR [edx]
  40a729:	add    eax,DWORD PTR [ebp-0x77]
  40a72c:	mov    eax,esp
  40a72e:	fmul   DWORD PTR [ebp-0x3d]
  40a731:	xor    eax,DWORD PTR [ebx+eax*1+0x832899e]
  40a738:	mov    DWORD PTR [ebp-0x28],eax
  40a73b:	aad    0x45
  40a73d:	pushf  
  40a73e:	xor    eax,edi
  40a740:	mov    ecx,0xff858db0
  40a745:	clc    
  40a746:	enter  0x4d45,0x32
  40a74a:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40a751:	test   esi,edi
  40a753:	clc    
  40a754:	inc    DWORD PTR [ebp+0x45]
  40a757:	xor    BYTE PTR [ebx-0x3738f764],cl
  40a75d:	test   al,0x16
  40a75f:	test   DWORD PTR ds:0xff459cf8,esi
  40a765:	ds cld 
  40a767:	pushf  
  40a768:	inc    ebp
  40a769:	mov    edx,DWORD PTR [eax-0x28]
  40a76c:	outs   dx,DWORD PTR ds:[esi]
  40a76d:	push   ebp
  40a76e:	add    BYTE PTR [ebx],dh
  40a770:	mov    DWORD PTR [ebx],eax
  40a772:	sar    BYTE PTR [ebx],1
  40a774:	adc    BYTE PTR [edi],cl
  40a776:	dec    ebp
  40a777:	adc    al,0x8b
  40a779:	add    al,dl
  40a77b:	jmp    0x101a94b
  40a780:	jb     0x40a7cf
  40a782:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40a788:	xor    ecx,DWORD PTR [ebp+0x3b]
  40a78b:	xor    ecx,DWORD PTR [edi]
  40a78d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40a791:	(bad)  
  40a793:	clc    
  40a794:	enter  0x8400,0x8b
  40a798:	pop    es
  40a799:	mov    al,0x0
  40a79b:	push   ebp
  40a79c:	push   cs
  40a79d:	xor    ecx,eax
  40a79f:	xor    esp,ecx
  40a7a1:	add    ebp,DWORD PTR [eax]
  40a7a3:	add    esi,DWORD PTR [eax]
  40a7a5:	(bad)  
  40a7a7:	retf   0x55c8
  40a7aa:	repnz mov eax,DWORD PTR [ebp-0x10]
  40a7ae:	(bad)  
  40a7af:	cli    
  40a7b0:	fdivr  st,st(1)
  40a7b2:	test   DWORD PTR [eax+edi*8],ecx
  40a7b5:	dec    ebp
  40a7b6:	inc    ebp
  40a7b7:	xor    edi,DWORD PTR [eax-0x7167afd]
  40a7bd:	add    BYTE PTR [ebp+0x0],al
  40a7c0:	mov    ecx,DWORD PTR [ebp-0x28]
  40a7c3:	mov    ecx,ebx
  40a7c5:	clc    
  40a7c6:	jne    0x40a793
  40a7c8:	mov    esi,0xd672d3
  40a7cd:	into   
  40a7ce:	into   
  40a7cf:	scas   eax,DWORD PTR es:[edi]
  40a7d0:	dec    ebp
  40a7d1:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40a7d7:	sub    ecx,esi
  40a7d9:	cmp    ecx,DWORD PTR [ebp+0x77]
  40a7dc:	(bad)  
  40a7dd:	mov    edi,eax
  40a7df:	mov    al,0x85
  40a7e1:	mov    eax,edi
  40a7e3:	add    BYTE PTR [ebp-0x75],al
  40a7e6:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40a7ed:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40a7f3:	rdtsc  
  40a7f5:	retf   0x559c
  40a7f8:	(bad)  
  40a7f9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40a800:	inc    ebp
  40a801:	add    eax,0xeb9c4d3f
  40a806:	(bad)  
  40a807:	mov    ecx,esp
  40a809:	lods   al,BYTE PTR ds:[esi]
  40a80a:	test   DWORD PTR [ebp-0x8],edx
  40a80d:	xor    ecx,DWORD PTR [ebp+0x33]
  40a810:	mov    eax,DWORD PTR [ebx]
  40a812:	lock add ecx,ebx
  40a815:	bswap  esi
  40a817:	retf   0x55d1
  40a81a:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40a820:	jmp    0x40a81b
  40a822:	add    BYTE PTR ds:0xebc44d8b,al
  40a828:	push   ebp
  40a829:	mov    ebp,DWORD PTR [ebx]
  40a82b:	test   al,0x8b
  40a82d:	push   ebp
  40a82e:	clc    
  40a82f:	xor    ecx,ebx
  40a831:	xor    ecx,esi
  40a833:	add    edx,ecx
  40a835:	add    eax,DWORD PTR [edx+0xca010f]
  40a83b:	push   ebp
  40a83c:	dec    ebp
  40a83d:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40a843:	stc    
  40a844:	rol    DWORD PTR ds:0xebce4dd6,cl
  40a84a:	scas   eax,DWORD PTR es:[edi]
  40a84b:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40a851:	xor    ebp,DWORD PTR [ebx]
  40a853:	xor    edi,DWORD PTR [ebx]
  40a855:	add    esi,DWORD PTR [edi+0x3]
  40a858:	mov    ecx,DWORD PTR [edi]
  40a85a:	clc    
  40a85b:	retf   0x55cb
  40a85e:	into   
  40a85f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40a866:	mov    eax,0x3376554d
  40a86b:	mov    esi,DWORD PTR [ebx]
  40a86d:	int3   
  40a86e:	add    edx,DWORD PTR [ebp+0x3]
  40a871:	xor    ecx,DWORD PTR [edi]
  40a873:	xor    ecx,edx
  40a875:	add    edx,DWORD PTR [ebp+0x3]
  40a878:	mov    ecx,DWORD PTR [edi]
  40a87a:	lock retf 0x4dfa
  40a87e:	stc    
  40a87f:	mov    ecx,DWORD PTR [eax]
  40a881:	or     BYTE PTR [ebp+0x4d],cl
  40a884:	jmp    0x104a914
  40a889:	dec    ebp
  40a88a:	dec    ebp
  40a88b:	(bad)  
  40a88c:	mov    ebx,esp
  40a88e:	clc    
  40a88f:	test   ebx,ecx
  40a891:	clc    
  40a892:	ror    DWORD PTR [ebp-0x2a],cl
  40a895:	mov    esi,ecx
  40a897:	call   0x33cbee4b
  40a89c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40a8a3:	retf   
  40a8a4:	ja     0x40a874
  40a8a6:	mov    ebp,DWORD PTR [eax-0x48]
  40a8a9:	dec    ebp
  40a8aa:	xor    ecx,DWORD PTR [di+0x3]
  40a8ae:	mov    esp,esp
  40a8b0:	clc    
  40a8b1:	push   ebp
  40a8b2:	retf   
  40a8b3:	mov    dl,bl
  40a8b5:	adc    esi,edx
  40a8b7:	jb     0x40a887
  40a8b9:	add    BYTE PTR [edi-0x3b7474b3],ch
  40a8bf:	call   0x4d6c7441
  40a8c4:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40a8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8cb:	sahf   
  40a8cc:	inc    ebp
  40a8cd:	xor    cl,BYTE PTR [ebp-0x78]
  40a8d0:	mov    edx,edi
  40a8d2:	clc    
  40a8d3:	dec    ebp
  40a8d4:	retf   
  40a8d5:	mov    edx,ebx
  40a8d7:	call   0x560f7cb2
  40a8dc:	scas   eax,DWORD PTR es:[edi]
  40a8dd:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40a8e3:	sahf   
  40a8e4:	sub    esi,DWORD PTR [edx]
  40a8e6:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40a8ec:	lods   al,BYTE PTR ds:[esi]
  40a8ed:	xor    esp,DWORD PTR [ebx]
  40a8ef:	add    ecx,DWORD PTR [ebp-0x1c]
  40a8f2:	mov    edi,DWORD PTR [ebp-0x8]
  40a8f5:	mov    bl,cl
  40a8f7:	cmp    dl,bl
  40a8f9:	jb     0x40a8c9
  40a8fb:	add    dh,dl
  40a8fd:	dec    ebp
  40a8fe:	scas   eax,DWORD PTR es:[edi]
  40a8ff:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40a905:	shr    DWORD PTR [ebx],cl
  40a907:	into   
  40a908:	cmp    edx,esi
  40a90a:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40a910:	dec    ebp
  40a911:	dec    ebp
  40a912:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40a918:	retf   
  40a919:	xor    edx,esi
  40a91b:	add    ecx,esi
  40a91d:	imul   ecx,edx
  40a920:	mov    DWORD PTR [ebp+0x8],edx
  40a923:	xor    ecx,DWORD PTR [ebp+0x2b]
  40a926:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40a92c:	add    esi,DWORD PTR [ebx]
  40a92e:	mov    ah,0x3
  40a930:	inc    ebp
  40a931:	sysexit 
  40a933:	xlat   BYTE PTR ds:[ebx]
  40a934:	pushf  
  40a935:	jge    0x40a8c0
  40a937:	xor    ebx,eax
  40a939:	sub    eax,DWORD PTR [ebp-0x73]
  40a93c:	(bad)  
  40a93d:	cmp    al,al
  40a93f:	jb     0x40a8c6
  40a941:	add    al,bh
  40a943:	ror    DWORD PTR [ebp-0x7a],1
  40a946:	xor    edi,edi
  40a948:	add    edi,edi
  40a94a:	jmp    0x40a999
  40a94c:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40a952:	dec    ebp
  40a953:	into   
  40a954:	mov    ebp,DWORD PTR [edi-0x23737428]
  40a95a:	sahf   
  40a95b:	shl    DWORD PTR [edx],cl
  40a95d:	retf   0x5588
  40a960:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40a966:	add    eax,DWORD PTR [eax]
  40a968:	in     al,0x4d
  40a96a:	push   ebp
  40a96b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40a971:	bound  eax,QWORD PTR [eax]
  40a973:	int    0x4d
  40a975:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40a97b:	dec    ebp
  40a97c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40a982:	jge    0x40a952
  40a984:	mov    BYTE PTR [edi+0xf723b3a],ch
  40a98a:	add    cl,dh
  40a98c:	dec    ebp
  40a98d:	dec    DWORD PTR [ebx-0x2c032375]
  40a993:	adc    BYTE PTR [ebp+0x1],0x8b
  40a997:	add    al,bl
  40a999:	jge    0x40a927
  40a99b:	push   0xffffff9e
  40a99d:	push   0x8b3032
  40a9a2:	shl    BYTE PTR [ebp+0x55],0x6a
  40a9a6:	xor    edi,edi
  40a9a8:	xor    edx,DWORD PTR [ebx+eax*1]
  40a9ab:	inc    ebp
  40a9ac:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40a9b2:	dec    ebp
  40a9b3:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40a9b9:	jbe    0x40a946
  40a9bb:	mov    ebp,esp
  40a9bd:	ror    bl,1
  40a9bf:	enter  0x14ce,0xaf
  40a9c3:	dec    DWORD PTR [ebx-0x2cef17f8]
  40a9c9:	push   ebp
  40a9ca:	retf   0x5540
  40a9cd:	push   ebp
  40a9ce:	mov    esi,DWORD PTR [edx-0x1c]
  40a9d1:	mov    edx,ebx
  40a9d3:	cld    
  40a9d4:	(bad)  
  40a9d5:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40a9dc:	sti    
  40a9dd:	add    dh,cl
  40a9df:	push   0xffffff94
  40a9e1:	call   FWORD PTR [esi+0x3b5032d0]
  40a9e7:	mov    ecx,DWORD PTR [edi]
  40a9e9:	int3   
  40a9ea:	pop    esi
  40a9eb:	inc    ebp
  40a9ec:	dec    DWORD PTR [ecx+0x45e8c88b]
  40a9f2:	push   ebp
  40a9f3:	xor    esi,DWORD PTR [ebx]
  40a9f5:	mov    DWORD PTR [ebx],0xcacc0f9c
  40a9fb:	aas    
  40a9fc:	push   ebp
  40a9fd:	inc    ebp
  40a9fe:	xor    eax,esp
  40aa00:	add    eax,esp
  40aa02:	mov    eax,DWORD PTR [ebx]
  40aa04:	(bad)  
  40aa05:	jmp    0x40a993
  40aa07:	mov    bl,BYTE PTR [esi-0x7674cdfb]
  40aa0d:	rol    ah,1
  40aa0f:	mov    esi,0xf133104d
  40aa14:	mov    edx,0xff358d80
  40aa19:	mov    dh,0xd1
  40aa1b:	cmp    edx,DWORD PTR [ebp+0xf]
  40aa1e:	mov    eax,DWORD PTR [edx-0x20]
  40aa21:	add    BYTE PTR [ebp-0x75],bh
  40aa24:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40aa2b:	sahf   
  40aa2c:	retf   0x8632
  40aa2f:	cmp    ebp,0x8
  40aa32:	call   ebx
  40aa34:	inc    ebp
  40aa35:	inc    ebp
  40aa36:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40aa3c:	mov    esi,DWORD PTR ds:0xc7049cc8
  40aa42:	add    al,al
  40aa44:	add    bl,al
  40aa46:	(bad)  
  40aa47:	clc    
  40aa48:	enter  0x45,0x35
  40aa4c:	push   eax
  40aa4d:	pushf  
  40aa4e:	mov    edi,eax
  40aa50:	int3   
  40aa51:	or     al,al
  40aa53:	test   DWORD PTR [edi],edi
  40aa55:	clc    
  40aa56:	gs inc ebp
  40aa58:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40aa5e:	push   ss
  40aa5f:	xor    ecx,DWORD PTR [ebp+0x3]
  40aa62:	sub    edx,DWORD PTR [ecx-0x76]
  40aa65:	dec    ebp
  40aa66:	add    DWORD PTR [ebx+0x88d845],ecx
  40aa6c:	mov    esi,DWORD PTR [ebx]
  40aa6e:	or     BYTE PTR [ebx],al
  40aa70:	cmp    edx,DWORD PTR [ecx-0x38]
  40aa73:	dec    ebp
  40aa74:	out    dx,eax
  40aa75:	xor    eax,DWORD PTR [ebp+0x3]
  40aa78:	mov    edx,DWORD PTR [ecx-0x28]
  40aa7b:	dec    ebp
  40aa7c:	add    BYTE PTR [ebx],dh
  40aa7e:	push   0x518003
  40aa83:	push   eax
  40aa84:	add    BYTE PTR [ebx-0x300748b],cl
  40aa8a:	sbb    BYTE PTR [ebp+0x45],cl
  40aa8d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40aa93:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40aa99:	dec    ebp
  40aa9a:	inc    ebp
  40aa9b:	xor    eax,esp
  40aa9d:	add    eax,esp
  40aa9f:	push   ecx
  40aaa0:	(bad)  
  40aaa1:	dec    ebp
  40aaa2:	mov    al,ds:0xc9e031ff
  40aaa7:	retf   
  40aaa8:	(bad)  
  40aaa9:	into   
  40aaaa:	sub    bh,bh
  40aaac:	dec    esp
  40aaad:	adc    al,0x9c
  40aaaf:	inc    ebp
  40aab0:	push   ebp
  40aab1:	test   DWORD PTR [edi],ecx
  40aab3:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab6ff80]
  40aaba:	jmp    0xc9b9b9ce
  40aabf:	add    cl,dl
  40aac1:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40aacb:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40aad1:	rol    BYTE PTR [eax],0x57
  40aad4:	clc    
  40aad5:	bound  esi,QWORD PTR [edx+0x7]
  40aad8:	mov    eax,DWORD PTR [ebp-0x30]
  40aadb:	xor    al,0x40
  40aadd:	sub    al,0xc7
  40aadf:	mov    ah,ch
  40aae1:	add    DWORD PTR [ebp+0x4534f845],eax
  40aae7:	sub    al,0x86
  40aae9:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40aaf0:	mov    ch,0xff
  40aaf2:	clc    
  40aaf3:	add    DWORD PTR [ebp+0x60],0x31
  40aaf7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40aafe:	inc    ebp
  40aaff:	dec    DWORD PTR [ebx-0x341ff701]
  40ab05:	test   esi,ecx
  40ab07:	dec    DWORD PTR [ebx-0x7f8a3301]
  40ab0d:	push   eax
  40ab0e:	add    DWORD PTR [ebp+0x0],eax
  40ab11:	dec    ebx
  40ab13:	or     al,0xce
  40ab15:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40ab1c:	into   
  40ab1d:	add    BYTE PTR [ebx-0x34ff1400],cl
  40ab23:	mov    esi,ecx
  40ab25:	sar    bh,0x45
  40ab28:	adc    al,0x8b
  40ab2a:	clc    
  40ab2b:	fadd   DWORD PTR [ebp+0x0]
  40ab2e:	mov    ebp,DWORD PTR [edx+0x8]
  40ab31:	push   edi
  40ab32:	adc    BYTE PTR [eax+0x1],0x83
  40ab36:	add    al,al
  40ab38:	retf   
  40ab39:	mov    ecx,esi
  40ab3b:	cld    
  40ab3c:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40ab42:	into   
  40ab43:	add    BYTE PTR [ebx+0x756aec00],cl
  40ab49:	jne    0x40ab7e
  40ab4b:	inc    DWORD PTR [ebx]
  40ab4d:	rcl    BYTE PTR [ecx+0x50],1
  40ab50:	push   eax
  40ab51:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40ab57:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40ab5e:	sar    bh,0x84
  40ab61:	or     BYTE PTR [ebx],al
  40ab63:	push   eax
  40ab64:	add    BYTE PTR [ebx+0x4532c845],cl
  40ab6a:	pushf  
  40ab6b:	xor    eax,0x89b49cc7
  40ab70:	test   eax,ebp
  40ab72:	clc    
  40ab73:	inc    ebp
  40ab74:	inc    ebp
  40ab75:	mov    DWORD PTR [eax+eax*8],esi
  40ab78:	sub    al,0x34
  40ab7a:	mov    BYTE PTR [ebx+ecx*4+0x57d8ec89],bl
  40ab81:	dec    ebp
  40ab82:	bound  esi,QWORD PTR [ebx]
  40ab84:	inc    edi
  40ab85:	add    ecx,DWORD PTR [ebx+0x57f4b489]
  40ab8b:	dec    ebp
  40ab8c:	bound  esi,QWORD PTR [ebx]
  40ab8e:	inc    edi
  40ab8f:	add    eax,DWORD PTR [ebx-0xf7a377]
  40ab95:	inc    ebp
  40ab96:	add    ch,dl
  40ab98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab99:	pushf  
  40ab9a:	inc    edi
  40ab9c:	dec    esp
  40ab9e:	lea    eax,[ebp+0x45fff860]
  40aba4:	push   eax
  40aba5:	xor    dh,BYTE PTR [ebp-0x64]
  40aba8:	(bad)  
  40aba9:	(bad)  
  40abaa:	pop    esp
  40abab:	lods   al,BYTE PTR ds:[esi]
  40abac:	inc    DWORD PTR [ebp+0x4508f8ff]
  40abb2:	mov    esi,DWORD PTR [eax]
  40abb4:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40abbb:	test   DWORD PTR [edi-0x8],edx
  40abbe:	inc    esi
  40abbf:	inc    ebp
  40abc0:	add    BYTE PTR [esi],bh
  40abc2:	push   0x8b809c
  40abc7:	in     al,dx
  40abc8:	inc    ebp
  40abc9:	push   ebp
  40abca:	mov    esi,DWORD PTR [ebx]
  40abcc:	cld    
  40abcd:	add    eax,DWORD PTR [eax+0xf013b]
  40abd3:	adc    al,0x0
  40abd5:	add    bh,bh
  40abd7:	jmp    0xbdacf4
  40abdc:	add    BYTE PTR [ebp+0x45],cl
  40abdf:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40abe5:	dec    ebp
  40abe6:	push   0x38033
  40abeb:	cmp    eax,DWORD PTR [eax]
  40abed:	unpcklps xmm7,xmm0
  40abf0:	jne    0x40abf2
  40abf2:	dec    DWORD PTR [ebx+0x5545cc18]
  40abf8:	mov    DWORD PTR [ebx],esi
  40abfa:	shl    BYTE PTR [ebx],1
  40abfc:	inc    ebp
  40abfd:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40ac03:	retf   0x5575
  40ac06:	dec    DWORD PTR [ebx-0x5ba17e8]
  40ac0c:	(bad)  
  40ac0d:	stc    
  40ac0e:	in     al,dx
  40ac0f:	or     al,0x85
  40ac11:	dec    ebp
  40ac12:	clc    
  40ac13:	xor    eax,DWORD PTR [ebp+0x3]
  40ac16:	mov    ebp,ecx
  40ac18:	rol    BYTE PTR [eax],1
  40ac1a:	inc    ebp
  40ac1b:	add    BYTE PTR [eax-0x7747ab3],bh
  40ac21:	clc    
  40ac22:	inc    ebp
  40ac23:	retf   
  40ac24:	mov    edx,ebx
  40ac26:	in     al,dx
  40ac27:	(bad)  
  40ac28:	retf   
  40ac29:	into   
  40ac2a:	into   
  40ac2b:	scas   eax,DWORD PTR es:[edi]
  40ac2c:	dec    ebp
  40ac2d:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40ac33:	sub    ecx,esi
  40ac35:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ac38:	(bad)  
  40ac39:	mov    edi,eax
  40ac3b:	int3   
  40ac3c:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ac42:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ac49:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ac4f:	rdtsc  
  40ac51:	retf   0x559c
  40ac54:	(bad)  
  40ac55:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ac5c:	inc    ebp
  40ac5d:	add    eax,0xeb9c4d3f
  40ac62:	(bad)  
  40ac63:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ac69:	xor    ecx,DWORD PTR [ebp+0x33]
  40ac6c:	mov    eax,DWORD PTR [ebx]
  40ac6e:	call   0xce507776
  40ac73:	retf   0x55d1
  40ac76:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ac7c:	jmp    0x40ac77
  40ac7e:	add    BYTE PTR ds:0xebf44d8b,al
  40ac84:	push   ebp
  40ac85:	mov    ebp,DWORD PTR [ebx]
  40ac87:	mov    eax,0x33f8558b
  40ac8c:	retf   
  40ac8d:	xor    ecx,esi
  40ac8f:	add    edx,ecx
  40ac91:	add    eax,DWORD PTR [edx+0xca010f]
  40ac97:	push   ebp
  40ac98:	dec    ebp
  40ac99:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ac9f:	stc    
  40aca0:	rol    DWORD PTR ds:0xebce4dd6,cl
  40aca6:	scas   eax,DWORD PTR es:[edi]
  40aca7:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40acad:	xor    ebp,DWORD PTR [ebx]
  40acaf:	xor    edi,DWORD PTR [ebx]
  40acb1:	add    esi,DWORD PTR [edi+0x3]
  40acb4:	mov    ecx,DWORD PTR [edi]
  40acb6:	clc    
  40acb7:	retf   0x55cb
  40acba:	into   
  40acbb:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40acc2:	test   al,0x4d
  40acc4:	push   ebp
  40acc5:	jbe    0x40acfa
  40acc7:	mov    esi,DWORD PTR [ebx]
  40acc9:	mov    al,0x3
  40accb:	push   ebp
  40accc:	add    esi,DWORD PTR [ebx]
  40acce:	rdpmc  
  40acd0:	retf   0x5503
  40acd3:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40acd9:	dec    ebp
  40acda:	stc    
  40acdb:	mov    ecx,DWORD PTR [eax]
  40acdd:	or     BYTE PTR [ebp+0x4d],cl
  40ace0:	jmp    0x134ad70
  40ace5:	dec    ebp
  40ace6:	dec    ebp
  40ace7:	(bad)  
  40ace8:	mov    ebx,esp
  40acea:	clc    
  40aceb:	test   ebx,ecx
  40aced:	clc    
  40acee:	ror    DWORD PTR [ebp-0x2a],cl
  40acf1:	mov    esi,ecx
  40acf3:	lock scas eax,DWORD PTR es:[edi]
  40acf5:	inc    ebp
  40acf6:	mov    esi,DWORD PTR [ebx]
  40acf8:	hlt    
  40acf9:	pushf  
  40acfa:	jge    0x40ac87
  40acfc:	sub    ebx,esp
  40acfe:	cmp    ecx,ebx
  40ad00:	ja     0x40acd0
  40ad02:	mov    ebp,DWORD PTR [eax-0x58]
  40ad05:	dec    ebp
  40ad06:	xor    ecx,DWORD PTR [di+0x3]
  40ad0a:	mov    esp,esp
  40ad0c:	clc    
  40ad0d:	push   ebp
  40ad0e:	retf   
  40ad0f:	mov    dl,bl
  40ad11:	adc    esi,edx
  40ad13:	jb     0x40ace3
  40ad15:	add    BYTE PTR [edi-0xb7474b3],ch
  40ad1b:	lock jge 0x40ace9
  40ad1e:	sub    ecx,DWORD PTR [ebp+0x3b]
  40ad21:	mov    esi,DWORD PTR [edi-0x20]
  40ad24:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459e]
  40ad2b:	mov    BYTE PTR [ebx-0x34b20729],cl
  40ad31:	mov    edx,ebx
  40ad33:	lock (bad) 
  40ad35:	ror    esi,cl
  40ad37:	push   ebp
  40ad38:	scas   eax,DWORD PTR es:[edi]
  40ad39:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40ad3f:	sahf   
  40ad40:	sub    esi,DWORD PTR [edx]
  40ad42:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40ad48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad49:	xor    esp,DWORD PTR [ebx]
  40ad4b:	add    ecx,DWORD PTR [ebp-0x1c]
  40ad4e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad51:	mov    bl,cl
  40ad53:	cmp    dl,bl
  40ad55:	jb     0x40ad25
  40ad57:	add    dh,dl
  40ad59:	dec    ebp
  40ad5a:	scas   eax,DWORD PTR es:[edi]
  40ad5b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ad61:	shr    DWORD PTR [ebx],cl
  40ad63:	into   
  40ad64:	cmp    edx,esi
  40ad66:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ad6c:	dec    ebp
  40ad6d:	dec    ebp
  40ad6e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ad74:	retf   
  40ad75:	xor    edx,esi
  40ad77:	add    ecx,esi
  40ad79:	imul   ecx,edx
  40ad7c:	mov    DWORD PTR [ebp+0x8],edx
  40ad7f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ad82:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ad88:	add    esi,DWORD PTR [ebx]
  40ad8a:	rol    BYTE PTR [ebx],0x45
  40ad8d:	sysexit 
  40ad8f:	xlat   BYTE PTR ds:[ebx]
  40ad90:	pushf  
  40ad91:	jge    0x40ad1c
  40ad93:	xor    esp,eax
  40ad95:	sub    eax,DWORD PTR [ebp-0x73]
  40ad98:	(bad)  
  40ad99:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ada0:	dec    ebp
  40ada1:	xchg   BYTE PTR [ebx],dh
  40ada3:	inc    DWORD PTR [ebx]
  40ada5:	(bad)  
  40ada6:	jmp    0x40adf5
  40ada8:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40adae:	dec    ebp
  40adaf:	into   
  40adb0:	mov    ebp,DWORD PTR [edi-0x23737420]
  40adb6:	sahf   
  40adb7:	shl    DWORD PTR [edx],cl
  40adb9:	retf   0x5588
  40adbc:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40adc2:	add    eax,DWORD PTR [eax]
  40adc4:	in     al,0x4d
  40adc6:	push   ebp
  40adc7:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40adcd:	bound  eax,QWORD PTR [eax]
  40adcf:	int    0x4d
  40add1:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40add7:	dec    ebp
  40add8:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40adde:	jge    0x40adae
  40ade0:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ade6:	add    cl,dh
  40ade8:	dec    ebp
  40ade9:	dec    DWORD PTR [ebx-0x2c032301]
  40adef:	inc    ebp
  40adf0:	push   ebp
  40adf1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40adf7:	lea    ebx,[esi-0x7400cdac]
  40adfd:	push   eax
  40adfe:	mov    ah,0x45
  40ae00:	push   ebp
  40ae01:	mov    esi,DWORD PTR [ebx]
  40ae03:	les    esi,FWORD PTR [ebx]
  40ae05:	add    BYTE PTR [ebx],al
  40ae07:	inc    DWORD PTR [ebx]
  40ae09:	mov    ecx,DWORD PTR [edi]
  40ae0b:	cld    
  40ae0c:	retf   0x4d80
  40ae0f:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ae15:	jne    0x40ada2
  40ae17:	(bad)  
  40ae18:	in     al,dx
  40ae19:	ror    bl,1
  40ae1b:	pop    edi
  40ae1c:	into   
  40ae1d:	add    BYTE PTR [edi-0xf2f7475],ch
  40ae23:	not    bl
  40ae25:	adc    al,0xca
  40ae27:	inc    ebp
  40ae28:	push   ebp
  40ae29:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ae2f:	push   0xaf80d6
  40ae34:	mov    eax,DWORD PTR [eax]
  40ae36:	fdiv   st(7),st
  40ae38:	sti    
  40ae39:	sbb    dh,cl
  40ae3b:	pop    esi
  40ae3c:	xchg   esp,eax
  40ae3d:	leave  
  40ae3e:	sahf   
  40ae3f:	add    al,0x32
  40ae41:	push   ebp
  40ae42:	cmp    ebp,esp
  40ae44:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ae48:	dec    DWORD PTR [ecx-0x740f0375]
  40ae4e:	push   ebp
  40ae4f:	cld    
  40ae50:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ae56:	retf   0x558b
  40ae59:	clc    
  40ae5a:	xor    esi,eax
  40ae5c:	add    esi,DWORD PTR [ebp-0x75]
  40ae5f:	(bad)  
  40ae60:	hlt    
  40ae61:	or     cl,BYTE PTR [esi+eax*8-0x39cdf762]
  40ae68:	mov    DWORD PTR [edx],ecx
  40ae6a:	hlt    
  40ae6b:	(bad)  
  40ae6c:	dec    ebp
  40ae6d:	add    dh,BYTE PTR [ebx]
  40ae6f:	leave  
  40ae70:	mov    edx,0xffec8d55
  40ae75:	push   ecx
  40ae76:	rol    DWORD PTR [ebp+0x55],1
  40ae79:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ae7f:	mov    eax,0xf8030b33
  40ae84:	lar    ecx,di
  40ae87:	push   ebp
  40ae88:	retf   0x863b
  40ae8b:	jne    0x40ae8a
  40ae8d:	mov    edi,edi
  40ae8f:	or     BYTE PTR [ebp+0x41],dh
  40ae92:	mov    esp,eax
  40ae94:	cld    
  40ae95:	inc    eax
  40ae96:	mov    al,0x29
  40ae98:	add    DWORD PTR [ecx+0x0],eax
  40ae9b:	loope  0x40ae22
  40ae9d:	inc    ecx
  40ae9e:	call   eax
  40aea0:	inc    edx
  40aea2:	mov    eax,DWORD PTR [eax]
  40aea4:	cld    
  40aea5:	mov    eax,DWORD PTR [eax+0x8d0151]
  40aeab:	clc    
  40aeac:	xor    BYTE PTR [ebp+0x45],al
  40aeaf:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40aeb5:	loopne 0x40aeb6
  40aeb7:	mov    edi,edi
  40aeb9:	mov    ecx,eax
  40aebb:	clc    
  40aebc:	jne    0x40ae8e
  40aebe:	call   0x81c1c7
  40aec3:	sub    DWORD PTR [ebp+0x45],esi
  40aec6:	test   esi,eax
  40aec8:	je     0x40aecb
  40aeca:	mov    eax,esi
  40aecc:	cld    
  40aecd:	or     DWORD PTR [eax+0x401c9],eax
  40aed3:	push   ebp
  40aed4:	add    ah,ch
  40aed6:	add    BYTE PTR [ecx+0x6a],dl
  40aed9:	inc    ebp
  40aeda:	push   esi
  40aedb:	mov    DWORD PTR [eax-0x4],edx
  40aede:	pop    edi
  40aedf:	mov    ebx,DWORD PTR [ebx-0x4]
  40aee2:	ret    0xbe
  40aee5:	push   es
  40aee6:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40aeec:	clc    
  40aeed:	lock inc ebp
  40aeef:	jne    0x40af47
  40aef1:	(bad)  
  40aef2:	jne    0x40aef8
  40aef4:	mov    eax,0xf841ba66
  40aef9:	rol    BYTE PTR [esi],1
  40aefb:	(bad)  
  40aefc:	jne    0x40af2f
  40aefe:	cmp    eax,ebx
  40af00:	pop    esi
  40af01:	mov    ecx,DWORD PTR [eax]
  40af03:	push   ecx
  40af04:	inc    ecx
  40af05:	lea    edi,[eax+edi*8+0x42]
  40af09:	inc    ebp
  40af0a:	ror    DWORD PTR [ebx-0x408303be],0x41
  40af11:	xchg   edx,ebp
  40af13:	mov    ebx,eax
  40af15:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40af1b:	or     edi,eax
  40af1d:	inc    ebp
  40af1e:	inc    ebp
  40af1f:	(bad)  
  40af20:	mov    ecx,DWORD PTR [eax]
  40af22:	cld    
  40af23:	(bad)  
  40af24:	jmp    0x40af27
  40af26:	mov    eax,esi
  40af28:	mov    DWORD PTR ds:0x4f8c98b,eax
  40af2e:	rcl    BYTE PTR [esi+0xf],1
  40af31:	iret   
  40af32:	inc    ebp
  40af33:	leave  
  40af34:	(bad)  
  40af35:	dec    DWORD PTR [ecx]
  40af37:	mov    eax,esi
  40af39:	mov    eax,DWORD PTR [edi]
  40af3b:	mov    dh,0xd1
  40af3e:	push   es
  40af3f:	nop
  40af40:	(bad)  
  40af41:	inc    DWORD PTR [ebx]
  40af43:	push   esi
  40af44:	leave  
  40af45:	iret   
  40af46:	add    al,0x46
  40af48:	push   ebp
  40af49:	in     eax,0xec
  40af4b:	push   ebp
  40af4c:	push   ecx
  40af4d:	inc    DWORD PTR [ebp+0x56]
  40af50:	mov    DWORD PTR [esi-0x4],eax
  40af53:	loope  0x40afaa
  40af55:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40af5b:	add    al,BYTE PTR [edx]
  40af5d:	mov    edx,DWORD PTR [ebp-0x17]
  40af60:	cmp    edi,esi
  40af62:	jne    0x40af63
  40af64:	(bad)  
  40af65:	push   esi
  40af66:	pop    es
  40af67:	push   ebp
  40af68:	mov    ebp,esp
  40af6a:	or     BYTE PTR [ebp+0x41],al
  40af6d:	add    edi,edx
  40af6f:	sub    BYTE PTR [eax-0x4],al
  40af72:	shl    BYTE PTR [ebp-0x3e],0x1
  40af76:	add    BYTE PTR [ebx+ecx*4],bl
  40af79:	mov    edx,DWORD PTR [ecx+0x14]
  40af7c:	lea    edx,[edx-0x1ba7508]
  40af82:	push   esi
  40af83:	enter  0xd375,0xb8
  40af87:	test   DWORD PTR [esi],0x6ce0750
  40af8d:	enter  0xd375,0x3b
  40af91:	neg    DWORD PTR [esi+0x50]
  40af94:	or     cl,dl
  40af96:	inc    edx
  40af97:	(bad)  
  40af98:	in     eax,dx
  40af99:	in     al,dx
  40af9a:	(bad)  
  40af9b:	sub    eax,DWORD PTR [ebx]
  40af9d:	inc    eax
  40af9e:	in     eax,dx
  40af9f:	push   eax
  40afa0:	add    dl,BYTE PTR [eax-0x37]
  40afa3:	push   edi
  40afa4:	push   ebp
  40afa5:	imul   ah
  40afa7:	adc    DWORD PTR [ecx-0x1],0x45
  40afab:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40afb1:	lea    edi,[eax-0x7fff4ca]
  40afb7:	mov    eax,0x4550402
  40afbc:	cmp    ebp,ecx
  40afbe:	jne    0x40af6b
  40afc0:	mov    eax,DWORD PTR ds:0x241e808
  40afc6:	loope  0x40afc8
  40afc8:	inc    eax
  40afc9:	stc    
  40afca:	xlat   BYTE PTR ds:[ebx]
  40afcb:	ss inc ecx
  40afcd:	aas    
  40afce:	in     eax,0x7d
  40afd0:	ret    0x8b
  40afd3:	lock mov edi,DWORD PTR [ebp-0x18]
  40afd7:	and    edi,edi
  40afd9:	mov    edi,edi
  40afdb:	call   0xe40eb0b7
  40afe0:	push   es
  40afe1:	add    al,ch
  40afe3:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40afea:	(bad)  
  40afeb:	hlt    
  40afec:	add    eax,0xffd3e87d
  40aff1:	cmp    bh,0x8
  40aff4:	(bad)  
  40aff5:	fld    DWORD PTR [esi]
  40aff7:	out    dx,al
  40aff8:	call   0xff9faf00
  40affd:	cmp    al,0x46
  40afff:	shr    edx,0x8
  40b002:	(bad)  
  40b003:	pop    es
  40b004:	fisttp QWORD PTR [ebp+0xe577eff]
  40b00a:	push   ebx
  40b00b:	add    BYTE PTR [ebx+0x24008b56],cl
  40b011:	add    BYTE PTR [ebp+0x50],al
  40b014:	push   eax
  40b015:	add    DWORD PTR [ebx+0x757d1834],ecx
  40b01b:	sub    edx,DWORD PTR [esi-0x24]
  40b01e:	jne    0x40afd6
  40b020:	lods   eax,DWORD PTR ds:[esi]
  40b021:	mov    edx,DWORD PTR [edx-0x34]
  40b024:	dec    esi
  40b025:	out    0x83,eax
  40b027:	into   
  40b028:	push   edi
  40b02a:	loopne 0x40affa
  40b02c:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40b030:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40b037:	rol    DWORD PTR [edx],0x8
  40b03a:	mov    esp,ecx
  40b03c:	cmp    DWORD PTR [ebx],0xc
  40b03f:	mov    esi,0x5001c0
  40b044:	push   eax
  40b045:	push   cs
  40b046:	push   eax
  40b047:	(bad)  
  40b048:	sub    edx,edi
  40b04a:	push   esi
  40b04b:	adc    al,0xcb
  40b04d:	ins    DWORD PTR es:[edi],dx
  40b04e:	mov    eax,0x203e8
  40b053:	add    al,ah
  40b055:	inc    esi
  40b056:	mov    al,ch
  40b058:	pop    es
  40b059:	add    DWORD PTR [eax],0x1
  40b05c:	add    dh,al
  40b05e:	add    ah,ch
  40b060:	rol    DWORD PTR [edx-0xd],1
  40b063:	cli    
  40b064:	push   0x4a
  40b066:	pop    ecx
  40b067:	retf   0xfe6
  40b06a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40b070:	(bad)  
  40b071:	dec    BYTE PTR [ebx+0x45b1fc72]
  40b077:	(bad)  
  40b078:	sub    ebp,DWORD PTR [ebx]
  40b07a:	and    al,0x52
  40b07c:	(bad)  
  40b07d:	dec    edi
  40b07e:	inc    ebp
  40b07f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40b086:	add    BYTE PTR [ebp-0x7b],dh
  40b089:	pop    eax
  40b08a:	add    BYTE PTR [edx+0x0],bl
  40b08d:	pop    edx
  40b08e:	dec    ebp
  40b08f:	jmp    DWORD PTR [ebx]
  40b091:	and    al,0xec
  40b093:	push   edx
  40b094:	out    0x64,eax
  40b096:	jmp    0xd3f2a69b
  40b09b:	jmp    0x40b0f5
  40b09d:	mov    al,0xfe
  40b09f:	dec    BYTE PTR [ebp-0x18fd8018]
  40b0a5:	add    BYTE PTR [esi+ebp*1],bh
  40b0a8:	pop    edx
  40b0a9:	icebp  
  40b0aa:	mov    eax,cs
  40b0ac:	ins    BYTE PTR es:[edi],dx
  40b0ad:	adc    eax,0x75510000
  40b0b2:	mov    esi,0x70158
  40b0b7:	or     DWORD PTR [eax-0x74f48dfe],esi
  40b0bd:	mov    edi,esp
  40b0bf:	cld    
  40b0c0:	jge    0x40b137
  40b0c2:	(bad)  
  40b0c4:	aas    
  40b0c5:	and    al,0x6d
  40b0c7:	adc    cl,0x1
  40b0ca:	mov    eax,DWORD PTR [eax]
  40b0cc:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40b0d2:	dec    ebp
  40b0d3:	add    eax,ebp
  40b0d5:	add    BYTE PTR [edx],al
  40b0d7:	fadd   DWORD PTR [eax]
  40b0d9:	stc    
  40b0da:	enter  0xee00,0x8b
  40b0de:	sbb    eax,0x1
  40b0e1:	sbb    esi,ecx
  40b0e3:	in     al,0x0
  40b0e5:	in     eax,dx
  40b0e6:	add    BYTE PTR [eax],al
  40b0e8:	jne    0x40b075
  40b0ea:	cmp    edx,esp
  40b0ec:	jb     0x40b0f7
  40b0ee:	jmp    0x40b165
  40b0f0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40b0f6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40b0fc:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40b102:	jb     0x40b08d
  40b104:	pop    edx
  40b105:	fadd   QWORD PTR [ebx-0x7445faa1]
  40b10b:	or     dh,BYTE PTR [edx+0x0]
  40b10e:	inc    edx
  40b10f:	or     dl,bh
  40b111:	xlat   BYTE PTR ds:[ebx]
  40b112:	dec    edx
  40b113:	push   edi
  40b114:	add    al,0x7
  40b116:	leave  
  40b117:	rol    DWORD PTR [edx+eax*1],0x7
  40b11b:	add    ecx,ecx
  40b11d:	mov    edx,ecx
  40b11f:	int3   
  40b120:	jmp    0x40b0e0
  40b122:	mov    al,0x0
  40b124:	(bad)  
  40b125:	jne    0x40b10f
  40b127:	mov    eax,DWORD PTR [edx]
  40b129:	call   0xc1552e2e
  40b12e:	pop    edi
  40b12f:	add    ebx,DWORD PTR [ecx-0x37]
  40b132:	pop    ecx
  40b133:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40b13a:	push   es
  40b13b:	mov    eax,DWORD PTR [eax]
  40b13d:	int3   
  40b13e:	add    ch,al
  40b140:	jae    0x40b12a
  40b142:	int    0x1
  40b144:	enter  0x3000,0x18
  40b148:	add    BYTE PTR [ebp+0x75],al
  40b14b:	mov    esi,DWORD PTR [eax-0x171f0134]
  40b151:	push   0x2
  40b153:	pop    ecx
  40b154:	add    BYTE PTR [eax],cl
  40b156:	push   ebx
  40b157:	lea    edi,[edi+eax*2]
  40b15a:	mov    al,0x1
  40b15c:	jb     0x40b15e
  40b15e:	mov    al,0x10
  40b160:	push   eax
  40b161:	add    al,0x75
  40b163:	add    BYTE PTR [ebx],ch
  40b165:	add    ebx,esp
  40b167:	int3   
  40b168:	jne    0x40b17a
  40b16a:	movsx  edx,cl
  40b16d:	add    DWORD PTR [eax],eax
  40b16f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40b176:	mov    gs,edi
  40b178:	add    BYTE PTR [eax-0x50],ch
  40b17b:	add    al,ch
  40b17d:	mov    eax,DWORD PTR [ecx]
  40b17f:	sub    eax,DWORD PTR [eax]
  40b181:	jb     0x40b1f8
  40b183:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40b187:	jge    0x40b171
  40b189:	add    al,0x1
  40b18b:	add    DWORD PTR [eax],0x0
  40b18e:	jne    0x40b190
  40b190:	je     0x40b1d7
  40b192:	mov    eax,DWORD PTR [edi]
  40b194:	ror    BYTE PTR [ebp+0x4d],1
  40b197:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40b19e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40b1a4:	mov    DWORD PTR [ebx],ebp
  40b1a6:	fadd   DWORD PTR [eax+0x75]
  40b1a9:	inc    eax
  40b1aa:	pop    eax
  40b1ab:	lea    ebx,[ecx+0x4f]
  40b1ae:	push   0xb1000003
  40b1b3:	out    dx,eax
  40b1b4:	add    ebp,DWORD PTR [edx+edx*2]
  40b1b7:	add    BYTE PTR [ebx+ecx*4],bh
  40b1ba:	mov    ch,BYTE PTR [ebx]
  40b1bc:	jb     0x40b230
  40b1be:	add    al,0x89
  40b1c0:	push   eax
  40b1c1:	call   0x8428ff33
  40b1c6:	add    DWORD PTR [eax+eax*1],eax
  40b1c9:	jae    0x40b1df
  40b1cb:	icebp  
  40b1cc:	inc    ebp
  40b1cd:	mov    eax,DWORD PTR gs:[ecx]
  40b1d0:	int3   
  40b1d1:	out    dx,al
  40b1d2:	loopne 0x40b221
  40b1d4:	sub    eax,DWORD PTR [edx]
  40b1d6:	push   0xffffff83
  40b1d8:	pop    esi
  40b1d9:	push   cs
  40b1da:	jl     0x40b1f5
  40b1dc:	add    al,0xaf
  40b1de:	xor    eax,0x832b6d00
  40b1e3:	mov    eax,DWORD PTR [edx]
  40b1e5:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40b1eb:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40b1f1:	inc    ebp
  40b1f2:	shr    ebx,0x3
  40b1f5:	or     DWORD PTR [eax],0x4
  40b1f8:	push   0xffffffa5
  40b1fa:	pop    esi
  40b1fb:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40b202:	jmp    0x40b261
  40b204:	mov    edi,0xff0272
  40b209:	fdivr  QWORD PTR [ebp+0x5d]
  40b20c:	push   0x4e
  40b20e:	pop    ecx
  40b20f:	call   0x40f614
  40b214:	mov    DWORD PTR [ebx],eax
  40b216:	in     al,0xc8
  40b218:	rol    BYTE PTR [ebp-0x75],0xc1
  40b21c:	call   0xaab3fd
  40b221:	pop    esi
  40b222:	enter  0xceff,0x8b
  40b226:	repz mov ecx,DWORD PTR [ebp-0x34]
  40b22a:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40b231:	je     0x40b233
  40b233:	or     DWORD PTR [ebx-0x74183b24],eax
  40b239:	jne    0x40b21f
  40b23b:	jmp    0x40b236
  40b23d:	push   DWORD PTR [edx-0x24]
  40b240:	push   0x4d
  40b242:	pop    ecx
  40b243:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40b247:	jge    0x40b24f
  40b249:	mov    eax,eax
  40b24b:	sub    ebp,DWORD PTR [edx+0x24]
  40b24e:	pop    esi
  40b24f:	inc    ebp
  40b250:	mov    esp,0x8b6077
  40b255:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40b25b:	lods   al,BYTE PTR ds:[esi]
  40b25c:	add    BYTE PTR [ebx],bh
  40b25e:	enter  0xce73,0x49
  40b262:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40b26a:	stc    
  40b26b:	jge    0x40b2df
  40b26d:	jnp    0xdd4035ce
  40b273:	call   0xc3b349
  40b278:	fadd   st(0),st
  40b27a:	dec    esi
  40b27b:	ins    BYTE PTR es:[edi],dx
  40b27c:	stc    
  40b27d:	cmp    al,0x73
  40b27f:	push   ebp
  40b280:	mov    eax,0xf8028b
  40b285:	jne    0x40b248
  40b287:	mov    esi,ecx
  40b289:	mov    esp,DWORD PTR [ebp+0x2c]
  40b28c:	add    edi,DWORD PTR [ebp-0x24]
  40b28f:	sub    esp,eax
  40b291:	and    al,0x45
  40b293:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40b299:	sbb    al,0xee
  40b29b:	pop    esi
  40b29c:	call   0x80b2cc
  40b2a1:	fsubr  st,st(3)
  40b2a3:	sti    
  40b2a4:	add    BYTE PTR gs:[ecx],bh
  40b2a7:	add    eax,esp
  40b2a9:	add    DWORD PTR [esi],eax
  40b2ab:	rol    DWORD PTR [ebp+0x8],0x29
  40b2af:	mov    esp,eax
  40b2b1:	clc    
  40b2b2:	jne    0x40b329
  40b2b4:	mov    eax,0x8b0673
  40b2b9:	loopne 0x40b300
  40b2bb:	loopne 0x40b246
  40b2bd:	lods   al,BYTE PTR ds:[esi]
  40b2be:	int3   
  40b2bf:	inc    ebp
  40b2c0:	mov    DWORD PTR gs:[eax+edi*8],eax
  40b2c4:	add    al,0xc3
  40b2c6:	sub    ecx,DWORD PTR [ebp+0x47]
  40b2c9:	(bad)  
  40b2cb:	shr    BYTE PTR [ebp-0x1f],0xe8
  40b2cf:	add    eax,DWORD PTR [eax]
  40b2d1:	call   0x64273d6
  40b2d6:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40b2dc:	dec    esi
  40b2dd:	ins    DWORD PTR es:[edi],dx
  40b2de:	in     al,dx
  40b2df:	lea    eax,[eax]
  40b2e1:	inc    ebp
  40b2e2:	inc    ebp
  40b2e3:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40b2e9:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40b2f3:	and    al,0xdc
  40b2f5:	ror    DWORD PTR [edx+0x24],0xf7
  40b2f9:	or     BYTE PTR [ebp+0x4c],dh
  40b2fc:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40b300:	stos   BYTE PTR es:[edi],al
  40b301:	adc    edx,edi
  40b303:	inc    esp
  40b304:	add    edi,DWORD PTR [eax]
  40b306:	jne    0x40b2eb
  40b308:	mov    DWORD PTR [eax-0x7449db04],ecx
  40b30e:	cmp    ecx,DWORD PTR [edi]
  40b310:	sub    BYTE PTR [ebp-0x7e],dl
  40b313:	sar    ebp,0xb
  40b316:	jmp    FWORD PTR [edi+0x2400392a]
  40b31c:	sub    esi,DWORD PTR [ebx-0x73]
  40b31f:	mov    esp,DWORD PTR [ecx+edi*4]
  40b322:	mov    ecx,DWORD PTR [eax]
  40b324:	and    BYTE PTR [eax],al
  40b326:	jne    0x40b2f2
  40b328:	sub    ebp,ecx
  40b32a:	sbb    BYTE PTR [esi+0x32],ah
  40b32d:	dec    ebp
  40b32e:	push   ebp
  40b32f:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40b335:	ret    
  40b336:	mov    edx,ebp
  40b338:	leave  
  40b339:	sub    DWORD PTR [esi+0x24],ebx
  40b33c:	ret    0x2b
  40b33f:	pop    ax
  40b341:	push   ebp
  40b342:	rol    BYTE PTR [ebx],0xeb
  40b345:	add    DWORD PTR [ecx+0x6c0001],0x40
  40b34c:	jb     0x40b3a3
  40b34e:	ret    
  40b34f:	in     al,dx
  40b350:	jecxz  0x40b2dd
  40b352:	push   esi
  40b353:	xchg   esp,eax
  40b354:	jne    0x40b356
  40b356:	cmp    edx,DWORD PTR [esi+0x1c]
  40b359:	jne    0x40b33f
  40b35b:	mov    eax,DWORD PTR [ebp-0x77]
  40b35e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40b365:	mov    esi,DWORD PTR [ebp-0x75]
  40b368:	pop    esi
  40b369:	nop
  40b36a:	mov    eax,DWORD PTR [eax]
  40b36c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40b372:	add    al,0x0
  40b374:	inc    ebp
  40b375:	mov    eax,DWORD PTR [ebx]
  40b377:	mov    ebp,ebx
  40b379:	cmp    al,0xf
  40b37b:	or     al,al
  40b37d:	inc    ebp
  40b37e:	inc    ebp
  40b37f:	xor    eax,0x8bc89c8b
  40b384:	ins    BYTE PTR es:[edi],dx
  40b385:	cld    
  40b386:	add    BYTE PTR [edi+0x576c16c0],dh
  40b38c:	add    BYTE PTR [ecx-0x5],dl
  40b38f:	add    eax,0x17200
  40b394:	sbb    al,0x85
  40b396:	dec    esp
  40b397:	je     0x40b3d1
  40b399:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40b39d:	add    BYTE PTR [ebx],bh
  40b39f:	(bad)  
  40b3a0:	and    al,0x34
  40b3a2:	jae    0x40b340
  40b3a4:	mov    cl,cl
  40b3a6:	inc    DWORD PTR [esp]
  40b3a9:	push   ebp
  40b3aa:	shr    esp,0x8
  40b3ad:	in     al,dx
  40b3ae:	push   esp
  40b3af:	and    DWORD PTR [eax],0xffffffdc
  40b3b2:	retf   
  40b3b3:	(bad)  
  40b3b4:	mov    bh,0xe4
  40b3b6:	add    BYTE PTR [ebp+0x450ff8e9],dh
  40b3bc:	retf   0x4cf5
  40b3bf:	pushf  
  40b3c0:	and    bh,al
  40b3c2:	pop    ss
  40b3c3:	rcr    cl,1
  40b3c5:	test   DWORD PTR [eax],eax
  40b3c7:	clc    
  40b3c8:	add    BYTE PTR [ebp+0x2b],al
  40b3cb:	xor    eax,ecx
  40b3cd:	pushf  
  40b3ce:	add    eax,0xd001c7
  40b3d3:	add    eax,0x456cf8c0
  40b3d8:	inc    eax
  40b3d9:	push   ebx
  40b3da:	rcr    DWORD PTR [eax+0x4c0105],0x20
  40b3e1:	inc    ebp
  40b3e2:	fst    DWORD PTR [esi+0x29]
  40b3e5:	mov    eax,DWORD PTR [eax]
  40b3e7:	nop
  40b3e8:	rol    BYTE PTR [eax],0xc0
  40b3eb:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  40b3f1:	add    DWORD PTR [ebx-0x75f9af00],ecx
  40b3f7:	pop    ebp
  40b3f8:	add    DWORD PTR [ecx+0x758bf800],ecx
  40b3fe:	or     BYTE PTR [ebp-0xce8aca],al
  40b404:	mov    bl,BYTE PTR [eax]
  40b406:	add    DWORD PTR [ebp+0x0],edx
  40b409:	call   0xfff3b317
  40b40e:	add    DWORD PTR [edi],ecx
  40b410:	add    BYTE PTR [edi],al
  40b412:	push   cs
  40b413:	inc    ecx
  40b414:	or     BYTE PTR [ebx+0x18008901],0x8
  40b41b:	leave  
  40b41c:	dec    ecx
  40b41d:	dec    esi
  40b41e:	add    esi,DWORD PTR [ebp-0x39]
  40b421:	call   0xffe6a322
  40b426:	clc    
  40b427:	inc    ebp
  40b428:	inc    ebp
  40b429:	mov    ecx,DWORD PTR [edi]
  40b42b:	enter  0x49,0x35
  40b42f:	mov    ecx,DWORD PTR [eax]
  40b431:	xor    eax,0x79e0807
  40b436:	xor    bl,BYTE PTR [esi-0x743ecda2]
  40b43c:	or     al,0x1c
  40b43e:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40b445:	int3   
  40b446:	test   DWORD PTR [eax],eax
  40b448:	clc    
  40b449:	inc    edx
  40b44b:	mov    eax,DWORD PTR [eax]
  40b44d:	fmul   DWORD PTR [ebx+0x74ff8300]
  40b453:	sub    BYTE PTR [ebp-0x40],ah
  40b456:	add    BYTE PTR [esi+0x45],bl
  40b459:	leave  
  40b45a:	xor    eax,0xc78b9c18
  40b45f:	jl     0x40b441
  40b461:	add    BYTE PTR [ebp+0x458df88b],al
  40b467:	add    al,0x31
  40b469:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  40b470:	test   edx,esp
  40b472:	clc    
  40b473:	or     eax,DWORD PTR [ebp+0x40]
  40b476:	xor    eax,0x8b949f89
  40b47b:	inc    ebp
  40b47c:	sbb    al,0xbe
  40b47e:	mov    ecx,DWORD PTR [eax]
  40b480:	xchg   esp,eax
  40b481:	pop    es
  40b482:	add    dh,al
  40b484:	mov    esp,DWORD PTR [ebp+0x1c]
  40b487:	add    BYTE PTR [edi-0x62],dl
  40b48a:	mov    eax,0x30132
  40b48f:	mov    DWORD PTR [ebp-0x68],eax
  40b492:	mov    eax,DWORD PTR [ebp-0x74]
  40b495:	xor    eax,DWORD PTR [eax]
  40b497:	add    ecx,DWORD PTR [ebx-0xf637677]
  40b49d:	inc    ebp
  40b49e:	jge    0x40b4f0
  40b4a0:	mov    DWORD PTR [ebp-0xc],eax
  40b4a3:	xor    eax,eax
  40b4a5:	add    ecx,DWORD PTR [ebx]
  40b4a7:	push   eax
  40b4a8:	jne    0x40b4ef
  40b4aa:	mov    eax,DWORD PTR ds:0x3f001c
  40b4b0:	dec    DWORD PTR [ebx-0x7f74e375]
  40b4b6:	add    eax,DWORD PTR [ecx]
  40b4b8:	cmp    al,0x0
  40b4ba:	push   cs
  40b4bb:	inc    ebp
  40b4bc:	inc    ebp
  40b4bd:	add    al,0x85
  40b4bf:	add    BYTE PTR [edi+edi*8-0x1],dh
  40b4c3:	mov    ebx,DWORD PTR [esp+ecx*1]
  40b4c6:	mov    ebp,0x8bffff4d
  40b4cb:	mov    ebx,DWORD PTR [esp+esi*8]
  40b4ce:	sbb    al,0x1
  40b4d1:	inc    ebp
  40b4d2:	add    BYTE PTR [ebx-0x74a87700],cl
  40b4d8:	push   ecx
  40b4d9:	clc    
  40b4da:	add    eax,0x457218
  40b4df:	mov    eax,DWORD PTR [ebp+0x50]
  40b4e2:	jne    0x40b529
  40b4e4:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  40b4ea:	add    edi,eax
  40b4ec:	add    BYTE PTR [ebp+0x31],al
  40b4ef:	lea    eax,[eax+0x4501dc]
  40b4f5:	lea    edx,[eax-0x74]
  40b4f8:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  40b4fe:	ret    0xc7
  40b501:	mov    eax,DWORD PTR [eax+0xee011c]
  40b507:	add    BYTE PTR [eax],cl
  40b509:	push   eax
  40b50a:	inc    ebp
  40b50b:	inc    ebp
  40b50c:	add    DWORD PTR [ebx+0x8b98eb],ecx
  40b512:	test   edi,eax
  40b514:	jne    0x40b4a2
  40b516:	mov    eax,DWORD PTR [eax]
  40b518:	mov    eax,DWORD PTR [eax]
  40b51a:	push   eax
  40b51b:	pop    ebp
  40b51c:	inc    ebp
  40b51d:	dec    DWORD PTR [ebx+0x570ce48b]
  40b523:	rcl    BYTE PTR [ecx-0x40],1
  40b526:	xor    esi,DWORD PTR [eax]
  40b528:	add    DWORD PTR [ebp-0x70],0xffffff83
  40b52c:	mov    edi,0x8372fc
  40b531:	push   eax
  40b532:	(bad)  
  40b533:	jbe    0x40b57a
  40b535:	mov    ecx,DWORD PTR [ebx-0x39341714]
  40b53b:	ret    
  40b53c:	(bad)  
  40b53d:	dec    ebp
  40b53e:	inc    ebp
  40b53f:	jmp    0x40b4ce
  40b541:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40b548:	(bad)  
  40b549:	cld    
  40b54a:	(bad)  
  40b54b:	push   ebp
  40b54c:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  40b552:	add    BYTE PTR [ebx],bh
  40b554:	push   eax
  40b555:	push   eax
  40b556:	inc    ebp
  40b557:	jmp    0x3d900e7
  40b55c:	add    BYTE PTR [ebx+0x8ca0c7],cl
  40b562:	add    BYTE PTR [ebx-0x13cfd500],cl
  40b568:	inc    ebp
  40b569:	ret    
  40b56a:	mov    DWORD PTR [ebp-0x14],edx
  40b56d:	mov    edx,eax
  40b56f:	sub    BYTE PTR [ebp-0x2d],cl
  40b572:	mov    ecx,DWORD PTR [ebp-0x75]
  40b575:	mov    eax,esi
  40b577:	rol    BYTE PTR [eax],1
  40b579:	inc    ebp
  40b57a:	add    DWORD PTR [eax],eax
  40b57c:	inc    ebp
  40b57d:	add    BYTE PTR [ecx+0x18838beb],cl
  40b583:	clc    
  40b584:	inc    eax
  40b585:	jmp    0x8d45:0x74945589
  40b58c:	xor    ecx,DWORD PTR [eax]
  40b58e:	add    edx,DWORD PTR [ebp-0x77]
  40b591:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40b597:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  40b59e:	inc    ebp
  40b59f:	fdiv   DWORD PTR [ebx]
  40b5a1:	loop   0x40b5a6
  40b5a3:	(bad)  
  40b5a5:	add    BYTE PTR [ebp+0x55],al
  40b5a8:	add    eax,0xd8008b
  40b5ad:	jmp    0xcd80:0x621c818b
  40b5b4:	add    DWORD PTR [ebx],esi
  40b5b6:	add    BYTE PTR [ecx-0x63fbcdbb],al
  40b5bc:	add    BYTE PTR [ebp-0x77],dh
  40b5bf:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  40b5c5:	dec    ebp
  40b5c6:	inc    DWORD PTR [ebx]
  40b5c8:	test   DWORD PTR [ebx+0x108b0074],eax
  40b5ce:	sbb    BYTE PTR [ebp+0x65],dl
  40b5d1:	add    eax,DWORD PTR [eax]
  40b5d3:	mov    edi,DWORD PTR [eax-0x75]
  40b5d6:	add    ah,dl
  40b5d8:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  40b5df:	dec    ebp
  40b5e0:	mov    DWORD PTR [ebx-0xfc071c],eax
  40b5e6:	dec    ebp
  40b5e7:	call   0x55426376
  40b5ec:	inc    ebp
  40b5ed:	add    DWORD PTR [ebx+0x855fcf4],ecx
  40b5f3:	cmp    ecx,DWORD PTR [ebp-0x5c]
  40b5f6:	inc    eax
  40b5f7:	add    BYTE PTR [ecx+0x73],dl
  40b5fa:	jb     0x40b5ff
  40b5fc:	mov    esi,eax
  40b5fe:	cmp    al,0x50
  40b600:	retf   
  40b601:	mov    DWORD PTR [ecx+0x4500f0],eax
  40b607:	test   ebx,edx
  40b609:	andnps xmm6,XMMWORD PTR [edx+0x3]
  40b60d:	dec    DWORD PTR [ecx+0x51ecfc8b]
  40b613:	inc    ebp
  40b614:	add    eax,edi
  40b616:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  40b61d:	inc    ecx
  40b61e:	hlt    
  40b61f:	mov    DWORD PTR [eax],eax
  40b621:	xchg   esp,eax
  40b622:	add    BYTE PTR [ebp+0x7d],al
  40b625:	xor    eax,edx
  40b627:	add    edx,ecx
  40b629:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  40b62f:	mov    DWORD PTR [eax-0x64],edx
  40b632:	mov    DWORD PTR [ebp-0x8],eax
  40b635:	push   eax
  40b636:	push   ebp
  40b637:	inc    ebp
  40b638:	mov    DWORD PTR [ebx],esi
  40b63a:	call   0xf910b42
  40b63f:	inc    ebp
  40b640:	adc    al,BYTE PTR ds:0x810055
  40b646:	dec    DWORD PTR [ebx-0x7f76e400]
  40b64c:	aam    0x1
  40b64e:	push   ebp
  40b64f:	add    cl,al
  40b651:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40b658:	call   FWORD PTR [esi+edx*8]
  40b65b:	cmp    dl,0x1
  40b65e:	test   DWORD PTR [eax],eax
  40b660:	clc    
  40b661:	inc    ebp
  40b662:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40b668:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  40b66e:	cmp    edi,edi
  40b670:	je     0x40b642
  40b672:	mov    eax,DWORD PTR [ebp-0x4]
  40b675:	add    edx,DWORD PTR [ecx]
  40b677:	sbb    al,0x0
  40b679:	dec    ebp
  40b67a:	dec    ebp
  40b67b:	mov    DWORD PTR [ecx+0x4545011c],ecx
  40b681:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40b687:	add    DWORD PTR [edx],eax
  40b689:	add    BYTE PTR [ebp+0x45],cl
  40b68c:	jne    0x40b619
  40b68e:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40b695:	cmp    esp,esi
  40b697:	jb     0x40b62a
  40b699:	mov    eax,DWORD PTR [eax]
  40b69b:	mov    eax,DWORD PTR [eax]
  40b69d:	mov    edx,DWORD PTR [esp+edi*1]
  40b6a0:	inc    ebp
  40b6a1:	je     0x40b62e
  40b6a3:	push   eax
  40b6a4:	add    al,0x38
  40b6a6:	push   ebp
  40b6a7:	mov    DWORD PTR ds:[ecx],edi
  40b6aa:	in     al,0xc
  40b6ac:	shl    BYTE PTR [eax],cl
  40b6ae:	test   DWORD PTR [ecx],eax
  40b6b0:	call   DWORD PTR [edx]
  40b6b2:	inc    esi
  40b6b4:	inc    ebp
  40b6b5:	ror    BYTE PTR [ecx+0x45459011],1
  40b6bb:	jmp    0xff41b3c4
  40b6c0:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	loopne 0x40b655
  40b6ca:	(bad)  
  40b6cb:	sbb    al,0xc7
  40b6cd:	inc    ebp
  40b6ce:	inc    ebp
  40b6cf:	push   ebx
  40b6d0:	lea    edi,[eax+0x454fdc]
  40b6d6:	lea    ecx,[ecx-0x74a774]
  40b6dc:	or     BYTE PTR [edi-0x3a],dl
  40b6df:	js     0x40b6a8
  40b6e1:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  40b6e7:	inc    DWORD PTR [eax]
  40b6e9:	call   DWORD PTR [eax+0x79]
  40b6ec:	inc    ebp
  40b6ed:	add    BYTE PTR [ebx+0x859866],cl
  40b6f3:	(bad)  
  40b6f4:	(bad)  
  40b6f5:	dec    DWORD PTR [ebx-0x2f99f3b9]
  40b6fb:	test   DWORD PTR [ebp-0x1],eax
  40b6fe:	mov    edi,edi
  40b700:	add    al,0x0
  40b703:	add    ax,WORD PTR [ebp-0xb20004]
  40b70a:	inc    DWORD PTR [edx+0x14]
  40b70d:	add    BYTE PTR [eax],cl
  40b70f:	data16 jne 0x40b697
  40b712:	push   ebx
  40b713:	call   DWORD PTR [ebp-0x1]
  40b716:	mov    eax,eax
  40b718:	cld    
  40b719:	inc    bp
  40b71b:	test   DWORD PTR [ebp+0x45ff04ff],ecx
  40b721:	inc    eax
  40b722:	mov    eax,DWORD PTR [eax]
  40b724:	sbb    al,0x66
  40b726:	inc    ebp
  40b727:	test   DWORD PTR [ebx+0xff90ff],ecx
  40b72d:	ror    BYTE PTR [ebx-0x7f7ae39a],0xff
  40b734:	add    edi,edi
  40b736:	add    BYTE PTR [ebp+0x30],al
  40b739:	add    BYTE PTR [ecx],dh
  40b73b:	popw   ds
  40b73d:	test   DWORD PTR [edx],esi
  40b73f:	(bad)  
  40b740:	cmp    bh,bh
  40b742:	jbe    0x40b70b
  40b744:	lea    ecx,[ecx-0x7493c9]
  40b74a:	add    edi,DWORD PTR [eax+0x734f39]
  40b750:	mov    ecx,DWORD PTR [ecx-0x749175]
  40b756:	sub    edi,DWORD PTR [eax+0x89d003]
  40b75c:	mov    ecx,DWORD PTR [ecx-0x698f04]
  40b762:	(bad)  
  40b763:	mov    eax,0xecd755
  40b768:	in     al,dx
  40b769:	mov    DWORD PTR [eax],eax
  40b76b:	jb     0x40b76d
  40b76d:	inc    DWORD PTR [ebp-0x48]
  40b770:	mov    ecx,esp
  40b772:	sbb    al,0x0
  40b774:	push   esi
  40b775:	mov    DWORD PTR ds:0x66ff0074,ecx
  40b77b:	mov    DWORD PTR [ebp-0x7a0014],0xad7d8df8
  40b785:	add    bh,al
  40b787:	mov    WORD PTR [ebp-0xa6],ax
  40b78e:	mov    eax,0x354f45
  40b793:	pushf  
  40b794:	mov    DWORD PTR [ebp-0x7600fda4],ecx
  40b79a:	lea    edi,[eax+0x4]
  40b79d:	dec    DWORD PTR [ecx-0x1ba13a]
  40b7a3:	mov    BYTE PTR [ebx-0x7639af1b],0xe6
  40b7aa:	pusha  
  40b7ab:	(bad)  
  40b7ac:	jmp    edi
  40b7ae:	mov    eax,0xe84fc6
  40b7b3:	xor    ecx,DWORD PTR [ecx-0x169d3a]
  40b7b9:	xor    eax,DWORD PTR [ebx-0x76ff3a42]
  40b7bf:	add    BYTE PTR [esp+eax*2-0x1],ah
  40b7c3:	in     al,0xb8
  40b7c5:	mov    dh,0x4f
  40b7c7:	add    DWORD PTR [eax],0x49
  40b7ca:	mov    esi,ebx
  40b7cc:	data16 mov bh,bh
  40b7cf:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  40b7d6:	push   0xb845ffe3
  40b7db:	loope  0x40b82c
  40b7dd:	inc    ebp
  40b7de:	add    bl,dl
  40b7e0:	mov    DWORD PTR [ebp+0x6a],eax
  40b7e3:	out    dx,al
  40b7e4:	inc    DWORD PTR [ebp-0x75]
  40b7e7:	and    DWORD PTR [esi+0x45],esp
  40b7ea:	test   DWORD PTR [esi],ebp
  40b7ec:	inc    DWORD PTR [ebp-0x1]
  40b7ef:	jl     0x40b83a
  40b7f1:	leave  
  40b7f2:	add    BYTE PTR [esi+eiz*2-0x24],al
  40b7f6:	test   DWORD PTR [esi+0x49ff83ff],esi
  40b7fc:	outs   dx,DWORD PTR ds:[esi]
  40b7fd:	fiadd  WORD PTR [eax]
  40b7ff:	mov    BYTE PTR [esi-0x7d],ah
  40b802:	test   DWORD PTR [edi],eax
  40b804:	(bad)  
  40b805:	in     al,dx
  40b806:	inc    DWORD PTR [ebp+0x6c]
  40b809:	loope  0x40b80b
  40b80b:	inc    ebp
  40b80c:	data16 aam 0x85
  40b80f:	inc    ebp
  40b810:	(bad)  
  40b811:	call   0xe5bcfe15
  40b816:	add    BYTE PTR [ebp+0x66],al
  40b819:	fild   WORD PTR [ebp-0x1300bb]
  40b81f:	inc    ebp
  40b820:	inc    ebp
  40b821:	xlat   BYTE PTR ds:[ebx]
  40b822:	xor    al,0x45
  40b824:	pushf  
  40b825:	jl     0x40b7df
  40b827:	leave  
  40b828:	icebp  
  40b829:	inc    esp
  40b82a:	add    ah,dl
  40b82c:	mov    DWORD PTR [esi+0x49ff8376],esi
  40b832:	(bad)  
  40b833:	fdivrp st(0),st
  40b835:	mov    BYTE PTR [ebp+0x4708f883],al
  40b83b:	in     al,dx
  40b83c:	test   WORD PTR [ebp-0x1],ax
  40b843:	inc    ebp
  40b844:	inc    ebp
  40b845:	mov    edx,ebp
  40b847:	cld    
  40b848:	inc    ebp
  40b849:	out    dx,eax
  40b84a:	rcl    BYTE PTR [ebx],1
  40b84c:	inc    ebp
  40b84d:	mov    edi,edx
  40b84f:	mov    eax,DWORD PTR [ebp+0x54]
  40b852:	and    edi,edi
  40b854:	inc    ebp
  40b855:	cmp    ebp,DWORD PTR [esi]
  40b857:	jne    0x40b82b
  40b859:	mov    DWORD PTR [ebp-0x44],0xf8c9857c
  40b860:	retf   
  40b861:	inc    ebp
  40b862:	add    dl,ah
  40b864:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  40b86b:	xor    bl,0x1
  40b86e:	add    eax,DWORD PTR [eax]
  40b870:	inc    ecx
  40b871:	adc    BYTE PTR [eax],bl
  40b873:	test   ecx,edi
  40b875:	add    dh,BYTE PTR [edx+0x0]
  40b878:	mov    BYTE PTR [ebp-0x24],0x8b
  40b87c:	(bad)  
  40b87d:	jl     0x40b85c
  40b87f:	add    dh,al
  40b881:	mov    esi,ebx
  40b883:	mov    eax,esi
  40b885:	sbb    al,0xdf
  40b887:	add    dh,0x1
  40b88a:	loopne 0x40b88c
  40b88c:	(bad)  
  40b88d:	adc    cl,ah
  40b88f:	or     dh,al
  40b891:	inc    ebp
  40b892:	loop   0x40b875
  40b894:	xor    ebp,eax
  40b896:	(bad)  
  40b897:	(bad)  
  40b898:	or     eax,0x18ec0ff8
  40b89d:	jl     0x40b892
  40b89f:	inc    ebp
  40b8a0:	add    ebx,DWORD PTR [ecx+0x41]
  40b8a3:	adc    BYTE PTR [eax],bl
  40b8a5:	repnz stc 
  40b8a7:	xor    BYTE PTR [edx+0x35],0xc6
  40b8ab:	adc    ah,dl
  40b8ad:	dec    ecx
  40b8ae:	(bad)  
  40b8af:	repnz aad 0x45
  40b8b2:	(bad)  
  40b8b3:	mov    esi,edx
  40b8b5:	adc    al,0xc6
  40b8b7:	call   edi
  40b8b9:	(bad)  
  40b8ba:	(bad)  
  40b8bb:	adc    al,bl
  40b8bd:	inc    esi
  40b8bf:	push   eax
  40b8c0:	fld    DWORD PTR [ebp-0x3a]
  40b8c3:	mov    esi,0x7c608da
  40b8c8:	fcmovnb st,st(6)
  40b8ca:	xor    ebx,DWORD PTR [esi+0x30d328d]
  40b8d0:	(bad)  
  40b8d2:	sbb    BYTE PTR [ebp-0xd],al
  40b8d5:	add    DWORD PTR [ebx],0x66
  40b8d8:	inc    ecx
  40b8d9:	mov    ebx,DWORD PTR [eax]
  40b8db:	sbb    al,0xf9
  40b8dd:	xor    BYTE PTR [edx+0x1],0x8d
  40b8e1:	add    BYTE PTR [ebp+eax*4-0x1],dl
  40b8e5:	dec    DWORD PTR [ecx+0x4d00fcff]
  40b8eb:	add    BYTE PTR [eax+0x7145fc30],bh
  40b8f1:	inc    DWORD PTR [ecx]
  40b8f3:	mov    ecx,DWORD PTR [ebp-0x310010]
  40b8f9:	retf   
  40b8fa:	enter  0xe45,0x3b
  40b8fe:	inc    ebp
  40b8ff:	jne    0x40b936
  40b901:	mov    eax,ds:0x33c70b9c
  40b906:	mov    esp,0xf81585ef
  40b90b:	mov    ds:0x338b0b45,eax
  40b910:	mov    WORD PTR [edi-0x5cc68e00],cs
  40b916:	ud2    
  40b918:	xchg   ebp,eax
  40b919:	xor    eax,DWORD PTR [eax]
  40b91b:	dec    edx
  40b91c:	mov    eax,DWORD PTR [eax]
  40b91e:	sbb    al,0x83
  40b920:	cmp    ah,0x1
  40b923:	push   0x0
  40b925:	pop    eax
  40b926:	adc    BYTE PTR [ecx-0x7483bb],cl
  40b92c:	and    BYTE PTR [esi+0x0],0x85
  40b930:	mov    edi,edi
  40b932:	push   0xffffffff
  40b934:	(bad)  
  40b935:	mov    esp,esi
  40b937:	adc    ah,0x75
  40b93a:	in     eax,0x66
  40b93c:	inc    ebp
  40b93d:	inc    ebp
  40b93e:	fild   QWORD PTR [edx-0x29]
  40b941:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40b947:	inc    ebp
  40b948:	sub    BYTE PTR [edx+0x49],0x58
  40b94c:	jmp    0x752c:0x40868889
  40b953:	lea    ax,[ebp-0xc]
  40b957:	xor    eax,DWORD PTR [ebp-0x5f0078]
  40b95d:	mov    DWORD PTR [ebp-0x820076],eax
  40b963:	stos   DWORD PTR es:[edi],eax
  40b964:	mov    ebp,DWORD PTR [ebx-0x43a87414]
  40b96a:	push   ecx
  40b96b:	test   DWORD PTR [ebx],esi
  40b96d:	(bad)  
  40b96e:	mov    ebx,0xc072ff
  40b973:	push   ebp
  40b974:	ret    
  40b975:	(bad)  
  40b976:	mov    eax,eax
  40b978:	sbb    al,0xdf
  40b97a:	rcl    ah,0x50
  40b97d:	inc    ebp
  40b97e:	inc    ebp
  40b97f:	into   
  40b980:	mov    ebp,ebx
  40b982:	cwde   
  40b983:	mov    DWORD PTR [eax],0x10d3c7c8
  40b989:	call   0xdf41ff8d
  40b98e:	add    cl,ch
  40b990:	jmp    DWORD PTR [esi-0x75]
  40b993:	inc    ebp
  40b994:	or     BYTE PTR [edi],bh
  40b996:	rol    bh,1
  40b998:	dec    ebp
  40b999:	adc    BYTE PTR [ebx],dh
  40b99b:	inc    DWORD PTR [ebx]
  40b99d:	add    cl,BYTE PTR [ecx-0x3e174400]
  40b9a3:	push   ss
  40b9a4:	push   ds
  40b9a5:	add    dh,ch
  40b9a7:	test   DWORD PTR [ebx-0x1],esi
  40b9aa:	or     eax,0x22850bff
  40b9af:	(bad)  
  40b9b0:	out    dx,al
  40b9b1:	push   DWORD PTR [ebx-0x75]
  40b9b4:	add    eax,0x3357e9ec
  40b9b9:	push   ecx
  40b9ba:	out    dx,al
  40b9bb:	xor    esi,DWORD PTR [ebx+0x3]
  40b9be:	jmp    0x85bb13
  40b9c3:	and    DWORD PTR [ebp+0x44],0x0
  40b9c7:	mov    esp,DWORD PTR [eax]
  40b9c9:	sbb    al,0x66
  40b9cb:	add    BYTE PTR [ebp-0xff00ff],0x30
  40b9d2:	mov    DWORD PTR [ebp+0x7e],eax
  40b9d5:	(bad)  
  40b9d6:	inc    DWORD PTR [ebx-0xbadf9a]
  40b9dc:	push   0xffffffff
  40b9de:	pop    eax
  40b9df:	clc    
  40b9e0:	mov    DWORD PTR [eax],ecx
  40b9e2:	or     BYTE PTR [ecx-0x8aef8d],0x58
  40b9e9:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  40b9ef:	lea    esp,[esi+0x10]
  40b9f2:	inc    ebp
  40b9f3:	jmp    FWORD PTR [edx+0x50]
  40b9f6:	pop    eax
  40b9f7:	inc    ebp
  40b9f8:	mov    DWORD PTR [ebx],esi
  40b9fa:	mov    BYTE PTR [ebx],al
  40b9fc:	rcl    BYTE PTR [eax+0x45],0x85
  40ba00:	inc    WORD PTR [ebp-0x1]
  40ba04:	lea    ecx,[ebx-0x7f99e35f]
  40ba0a:	stos   BYTE PTR es:[edi],al
  40ba0b:	add    DWORD PTR [ebp+0x0],eax
  40ba0e:	mov    ecx,ecx
  40ba10:	adc    al,0x95
  40ba12:	(bad)  
  40ba13:	push   DWORD PTR [ebx]
  40ba15:	dec    DWORD PTR [ebp+0x45ffc095]
  40ba1b:	dec    esp
  40ba1d:	push   ebp
  40ba1e:	loopne 0x40b9a9
  40ba20:	(bad)  
  40ba21:	adc    al,0xc4
  40ba23:	call   ebx
  40ba25:	mov    ebp,ebp
  40ba27:	sbb    BYTE PTR [ebp-0x1],al
  40ba2a:	loop   0x40b9b5
  40ba2c:	ds and al,0xc7
  40ba2f:	dec    esp
  40ba31:	mov    edx,ebp
  40ba33:	sub    al,0xe1
  40ba35:	inc    edi
  40ba37:	mov    eax,edx
  40ba39:	xor    BYTE PTR [edi+edi*8-0x7b],bh
  40ba3d:	(bad)  
  40ba3e:	dec    DWORD PTR [ebx-0x2ffff701]
  40ba44:	add    BYTE PTR [ebp+0x2c],al
  40ba47:	push   eax
  40ba48:	add    bh,dl
  40ba4a:	mov    DWORD PTR [ebp+0x18],edi
  40ba4d:	jbe    0x40ba4e
  40ba4f:	test   DWORD PTR [ebp-0xffefff],ecx
  40ba55:	inc    ebp
  40ba56:	push   eax
  40ba57:	add    DWORD PTR [ebp-0x4],0x801be
  40ba5e:	pop    es
  40ba5f:	add    dh,0xfe
  40ba62:	ret    
  40ba63:	dec    DWORD PTR [ebx-0x3fffe346]
  40ba69:	mov    ecx,0x454f50
  40ba6e:	mov    eax,ecx
  40ba70:	cwde   
  40ba71:	mov    DWORD PTR [eax],eax
  40ba73:	test   al,0xff
  40ba75:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  40ba7c:	lea    ecx,[ebp-0x7600f201]
  40ba82:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40ba89:	push   ebp
  40ba8a:	dec    DWORD PTR [ebp-0x767aec01]
  40ba90:	push   DWORD PTR [eax+0x6685c2ff]
  40ba96:	call   DWORD PTR [ebp-0x1]
  40ba99:	lea    ecx,[ebx-0x397613df]
  40ba9f:	mov    ah,0xc3
  40baa1:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40baa7:	mov    DWORD PTR [eax-0x48],edx
  40baaa:	inc    ebp
  40baab:	dec    edx
  40baac:	mov    ecx,DWORD PTR [ebx+0x55006698]
  40bab2:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40bab8:	dec    DWORD PTR [ebp-0x76e3b277]
  40babe:	call   DWORD PTR [eax-0x6d5f7673]
  40bac4:	lea    eax,[ecx-0x1]
  40bac7:	inc    WORD PTR [ebp-0x73]
  40bacb:	cmp    edi,0x3
  40bace:	dec    DWORD PTR [ecx+0x41ff9695]
  40bad4:	jmp    DWORD PTR [esi-0x73]
  40bad7:	inc    ebp
  40bad8:	jmp    DWORD PTR [esi-0x1]
  40badb:	dec    ebp
  40badc:	lea    esp,[esi-0x1]
  40badf:	jge    0x40bae0
  40bae1:	mov    esi,DWORD PTR [eax]
  40bae3:	lock inc ebp
  40bae5:	mov    bh,0xff
  40bae7:	mov    WORD PTR [ebp-0x3c5f3a],cs
  40baed:	rol    DWORD PTR [eax+0xf8ca289],0x45
  40baf4:	push   cs
  40baf5:	str    WORD PTR [ebp-0x1]
  40baf9:	xor    edi,esp
  40bafb:	add    edi,DWORD PTR [ebp+0x33]
  40bafe:	add    BYTE PTR [esi+0x0],ah
  40bb01:	inc    ebp
  40bb02:	rdpmc  
  40bb04:	mov    edi,0xbf45ff66
  40bb09:	dec    si
  40bb0b:	inc    ebp
  40bb0c:	add    BYTE PTR [ebx+0x45000c12],cl
  40bb12:	mov    edi,edi
  40bb14:	data16 sbb al,0x45
  40bb17:	jne    0x40ba9c
  40bb19:	push   ebp
  40bb1b:	adc    al,0xd0
  40bb1d:	jne    0x40baa8
  40bb1f:	jmp    FWORD PTR [edx+0x66755108]
  40bb25:	call   0xffc4b37f
  40bb2a:	or     BYTE PTR [ebp-0x77],al
  40bb2d:	mov    ebp,DWORD PTR [esi+0x6645511c]
  40bb33:	mov    edx,DWORD PTR [ebp-0x70]
  40bb36:	add    DWORD PTR [eax],0x3
  40bb39:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  40bb3f:	add    DWORD PTR [esi+0x0],esp
  40bb42:	push   ebp
  40bb43:	xor    BYTE PTR [esi+0x4d],ah
  40bb46:	dec    ebp
  40bb47:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  40bb4d:	mov    ecx,DWORD PTR [ebp-0x2ec30075]
  40bb53:	jl     0x40bade
  40bb55:	push   eax
  40bb56:	mov    esi,?
  40bb58:	rcl    bh,1
  40bb5a:	mov    DWORD PTR [esi],eax
  40bb5c:	mov    es,esi
  40bb5e:	push   ecx
  40bb5f:	ret    0x166
  40bb62:	push   ebp
  40bb63:	pop    esi
  40bb64:	leavew 
  40bb66:	inc    ebp
  40bb67:	sbb    BYTE PTR [ebp-0x76132cab],cl
  40bb6d:	in     al,dx
  40bb6e:	xchg   esp,eax
  40bb6f:	push   esi
  40bb70:	shl    al,0x66
  40bb73:	add    DWORD PTR [ebp+0x1],0x38e1008d
  40bb7a:	mov    DWORD PTR [edi],ecx
  40bb7c:	cwde   
  40bb7d:	or     cl,BYTE PTR [ecx-0x767a6600]
  40bb83:	setl   BYTE PTR [edx]
  40bb86:	inc    ebp
  40bb87:	add    BYTE PTR [edi],cl
  40bb89:	test   DWORD PTR [ebp+0xf],ecx
  40bb8c:	xor    edi,edx
  40bb8e:	add    eax,DWORD PTR [eax]
  40bb90:	xor    ecx,DWORD PTR [ebx+0x458866]
  40bb96:	mov    eax,DWORD PTR [ebp-0x1848f010]
  40bb9c:	test   al,0x0
  40bb9e:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40bba5:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  40bbab:	add    BYTE PTR [eax-0x57f076aa],ch
  40bbb1:	rol    DWORD PTR [ebp+0x0],1
  40bbb4:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40bbba:	inc    DWORD PTR [ebx-0x748a0fe8]
  40bbc0:	jmp    FWORD PTR [ebx]
  40bbc2:	adc    BYTE PTR [ebx],al
  40bbc4:	jne    0x40bbd5
  40bbc6:	call   DWORD PTR [eax-0x14]
  40bbc9:	mov    DWORD PTR [edi-0x1c],edi
  40bbcc:	push   DWORD PTR [edi-0x35e3f1ff]
  40bbd2:	inc    ebp
  40bbd3:	test   BYTE PTR [ebx-0x47ffe400],cl
  40bbd9:	dec    eax
  40bbda:	add    DWORD PTR [ebx+0x0],edx
  40bbdd:	dec    ebp
  40bbde:	inc    ebp
  40bbdf:	mov    esi,0x7f8cff8b
  40bbe4:	add    BYTE PTR [ebp-0x74728b75],al
  40bbea:	add    al,0x83
  40bbec:	adc    esp,esi
  40bbee:	(bad)  
  40bbef:	and    edx,DWORD PTR ds:0x780f0703
  40bbf5:	jp     0x40bb82
  40bbf7:	sysret 
  40bbf9:	pop    edx
  40bbfa:	add    eax,DWORD PTR [ebx]
  40bbfc:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  40bc00:	sub    edx,DWORD PTR [ebx+eax*1]
  40bc03:	dec    ebp
  40bc04:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  40bc0a:	ret    0x83
  40bc0d:	clc    
  40bc0e:	mov    esp,DWORD PTR [ebx]
  40bc10:	add    DWORD PTR [ebx],0x1c
  40bc13:	jnp    0x90504792
  40bc19:	pop    ecx
  40bc1a:	add    BYTE PTR [ebx],al
  40bc1c:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  40bc21:	adc    al,0x1
  40bc23:	jge    0x40bc25
  40bc25:	mov    edx,edx
  40bc27:	cld    
  40bc28:	test   BYTE PTR [edi],bh
  40bc2a:	add    edi,edi
  40bc2c:	add    BYTE PTR [esi],al
  40bc2e:	neg    BYTE PTR [ebp-0x7c]
  40bc31:	add    DWORD PTR [eax],eax
  40bc33:	pop    es
  40bc34:	add    BYTE PTR [edi-0x48fff17a],dh
  40bc3a:	add    BYTE PTR [eax+eax*8],cl
  40bc3d:	inc    ebp
  40bc3e:	test   BYTE PTR [ebx+0x300fc00],al
  40bc44:	mov    esi,0xf80039
  40bc49:	fisttp DWORD PTR [edi]
  40bc4b:	mov    bh,0xda
  40bc4d:	push   cs
  40bc4e:	add    BYTE PTR [edi+0x4d340c39],dh
  40bc54:	test   bh,bh
  40bc56:	add    ah,dh
  40bc58:	add    cl,al
  40bc5a:	mov    cl,0x3
  40bc5c:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  40bc62:	add    BYTE PTR [edx-0x36],dh
  40bc65:	mov    ecx,DWORD PTR [esi]
  40bc67:	call   0xef8742e
  40bc6c:	or     al,0xb7
  40bc6e:	dec    ebp
  40bc6f:	or     al,0xf
  40bc71:	inc    ebp
  40bc72:	dec    eax
  40bc73:	add    DWORD PTR [ebx],0x8
  40bc76:	(bad)  
  40bc78:	scas   al,BYTE PTR es:[edi]
  40bc79:	dec    ebp
  40bc7a:	add    BYTE PTR [ecx],bh
  40bc7c:	(bad)  
  40bc7d:	lock adc al,0x82
  40bc80:	mov    edi,edi
  40bc82:	call   0xff9cbc86
  40bc87:	rcl    BYTE PTR [edi-0x15],0x31
  40bc8b:	xor    edi,DWORD PTR [edi+0x5e]
  40bc8e:	adc    ebx,eax
  40bc90:	mov    eax,DWORD PTR gs:[eax]
  40bc93:	mov    edx,esi
  40bc95:	nop
  40bc96:	rol    BYTE PTR [eax],1
  40bc98:	mov    bh,0x83
  40bc9a:	push   cs
  40bc9b:	or     al,0xb7
  40bc9d:	xor    ecx,DWORD PTR [esi+edx*2]
  40bca0:	sti    
  40bca1:	cmp    DWORD PTR [ecx+0xf],ebp
  40bca4:	dec    edx
  40bca5:	test   DWORD PTR [ecx+0x318bec00],ecx
  40bcab:	or     al,0x41
  40bcad:	ret    
  40bcae:	or     DWORD PTR [esi+0x65],edi
  40bcb1:	pop    eax
  40bcb2:	add    BYTE PTR [ebp-0x32],dh
  40bcb5:	xor    ecx,eax
  40bcb7:	inc    eax
  40bcb8:	mov    bh,0x76
  40bcba:	push   cs
  40bcbb:	inc    eax
  40bcbc:	mov    bh,0x3
  40bcbe:	or     al,0x8
  40bcc0:	sti    
  40bcc1:	dec    eax
  40bcc2:	sub    ecx,DWORD PTR [ebx+0x70892479]
  40bcc8:	cld    
  40bcc9:	mov    edi,DWORD PTR [ebp+0x18]
  40bccc:	mov    ecx,DWORD PTR [ebp-0x7b]
  40bccf:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  40bcd3:	jne    0x40bcb9
  40bcd5:	cmp    ebx,DWORD PTR [edi+esi*2]
  40bcd8:	jns    0xff50b957
  40bcde:	pop    ecx
  40bcdf:	jge    0x40bce0
  40bce1:	cmp    eax,edi
  40bce3:	cld    
  40bce4:	inc    ebp
  40bce5:	iret   
  40bce6:	or     BYTE PTR [eax-0x5],bh
  40bce9:	jae    0x40bd68
  40bceb:	(bad)  
  40bced:	xor    al,0xf
  40bcef:	jmp    0x40bd6b
  40bcf1:	mov    ecx,DWORD PTR [edi]
  40bcf3:	lea    ebx,[edx-0x4f]
  40bcf6:	mov    esi,DWORD PTR [ebx]
  40bcf8:	in     al,dx
  40bcf9:	test   BYTE PTR [ebp+0x27],0x83
  40bcfd:	jge    0x40bd07
  40bcff:	add    edi,ebx
  40bd01:	mov    DWORD PTR [ebp-0x8],ecx
  40bd04:	cmp    eax,edi
  40bd06:	hlt    
  40bd07:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  40bd0d:	jl     0x40bd5f
  40bd0f:	clc    
  40bd10:	(bad)  
  40bd12:	js     0x40bc9f
  40bd14:	push   DWORD PTR [edx-0x10]
  40bd17:	mov    eax,ecx
  40bd19:	clc    
  40bd1a:	add    edi,edi
  40bd1c:	mov    DWORD PTR [eax],edx
  40bd1e:	call   0xfbe125e
  40bd23:	inc    edi
  40bd24:	popa   
  40bd25:	jge    0x40bd26
  40bd27:	cmp    ebx,DWORD PTR [edi-0x4]
  40bd2a:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  40bd30:	rcr    BYTE PTR [esi-0x37],0xc9
  40bd34:	push   ebp
  40bd35:	or     ah,ch
  40bd37:	push   ebp
  40bd38:	sub    ah,0x1
  40bd3b:	in     al,dx
  40bd3c:	add    BYTE PTR [edx-0x7ac7a14],bh
  40bd42:	fist   DWORD PTR [ebp+0x57]
  40bd45:	(bad)  
  40bd46:	sbb    al,bh
  40bd48:	test   BYTE PTR [ebp+0x4500f800],al
  40bd4e:	inc    ebp
  40bd4f:	mov    edi,DWORD PTR [ebx]
  40bd51:	cld    
  40bd52:	je     0x40bda1
  40bd54:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  40bd5a:	ror    BYTE PTR [ebx-0x74740315],0x78
  40bd61:	adc    BYTE PTR [ebp-0x42],al
  40bd64:	mov    ecx,DWORD PTR [eax]
  40bd66:	sbb    al,0x7
  40bd68:	push   eax
  40bd69:	inc    ebp
  40bd6a:	mov    ecx,DWORD PTR [edi-0x7487adec]
  40bd70:	add    edi,esp
  40bd72:	or     BYTE PTR [ebx+0x890155],bl
  40bd78:	cld    
  40bd79:	mov    edi,0x372f7
  40bd7e:	jge    0x40bd4e
  40bd80:	xor    eax,esi
  40bd82:	mov    edi,eax
  40bd84:	hlt    
  40bd85:	iret   
  40bd86:	pop    ebp
  40bd87:	inc    ebp
  40bd88:	jbe    0x40bdc5
  40bd8a:	cmp    ecx,DWORD PTR [edi]
  40bd8c:	adc    al,0x7b
  40bd8e:	push   es
  40bd8f:	add    BYTE PTR [edi+0x2fc7a8b],dh
  40bd95:	dec    ebp
  40bd96:	div    DWORD PTR [ebx]
  40bd98:	sbb    al,0x3
  40bd9a:	mov    edi,DWORD PTR [ebx]
  40bd9c:	test   DWORD PTR [edi],ecx
  40bd9e:	je     0x40be09
  40bda0:	mov    eax,DWORD PTR [eax]
  40bda2:	or     BYTE PTR [ebx-0x76820302],cl
  40bda8:	cmp    eax,DWORD PTR [eax]
  40bdaa:	jbe    0x40bdac
  40bdac:	mov    ebx,esi
  40bdae:	or     al,0xdf
  40bdb0:	jg     0x40bd7d
  40bdb2:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  40bdb9:	dec    ebp
  40bdba:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  40bdc0:	je     0x40bda0
  40bdc2:	mov    edi,ebx
  40bdc4:	mov    ebx,DWORD PTR [ebp-0xc]
  40bdc7:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  40bdcd:	adc    dh,BYTE PTR [edx+0x55]
  40bdd0:	jmp    0x40bd5d
  40bdd2:	xor    edi,esp
  40bdd4:	pop    edi
  40bdd5:	rcr    BYTE PTR [ebx+0x33],cl
  40bdd8:	ret    0x3
  40bddb:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  40bde1:	push   ebp
  40bde2:	xor    eax,0x89fc9c8b
  40bde7:	sar    ah,cl
  40bde9:	xor    eax,DWORD PTR [ebp+0x3]
  40bdec:	xor    al,0x39
  40bdee:	pushf  
  40bdef:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  40bdf5:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  40bdfb:	pop    ebp
  40bdfc:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  40be02:	push   ebx
  40be03:	add    ebx,DWORD PTR [ebp-0x75]
  40be06:	push   esi
  40be07:	adc    BYTE PTR [edi+0x4d],dl
  40be0a:	push   ecx
  40be0b:	xor    eax,edi
  40be0d:	mov    eax,esi
  40be0f:	in     al,0xeb
  40be11:	dec    ebp
  40be12:	add    ecx,DWORD PTR [ebx-0x317403b3]
  40be18:	nop
  40be19:	iret   
  40be1a:	add    dh,dl
  40be1c:	push   edi
  40be1d:	dec    ebp
  40be1e:	sahf   
  40be1f:	mov    esi,DWORD PTR [edx]
  40be21:	add    esi,DWORD PTR [ebx]
  40be23:	add    esi,DWORD PTR [ebx]
  40be25:	cmp    eax,DWORD PTR [ebx]
  40be27:	je     0x40be2c
  40be29:	add    ecx,DWORD PTR [ecx+0xb4de808]
  40be2f:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  40be36:	pop    ebp
  40be37:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  40be3d:	sahf   
  40be3e:	fbstp  TBYTE PTR [edx]
  40be40:	(bad)  [ecx+0x45020c84]
  40be46:	add    BYTE PTR [eax],dh
  40be48:	pop    ebp
  40be49:	pushf  
  40be4a:	mov    ecx,DWORD PTR [ebx+0x75001080]
  40be50:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  40be56:	ud0    ecx,DWORD PTR [edi-0x75]
  40be5a:	add    ah,bh
  40be5c:	add    ecx,esi
  40be5e:	or     bh,cl
  40be60:	dec    ebp
  40be61:	inc    ebp
  40be62:	mov    edi,DWORD PTR [ebx]
  40be64:	xor    esi,DWORD PTR [ebp+0x3]
  40be67:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  40be6d:	mov    edi,DWORD PTR [ebx]
  40be6f:	fdiv   DWORD PTR [eax+eax*1-0x75]
  40be73:	push   eax
  40be75:	or     al,0x5d
  40be77:	inc    ebp
  40be78:	imul   eax,edi,0x14
  40be7b:	loopne 0x40be5b
  40be7d:	sbb    ebx,edi
  40be7f:	jg     0x40be9d
  40be81:	inc    ebp
  40be82:	jne    0x40bea0
  40be84:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  40be8b:	(bad)  
  40be8c:	adc    al,0xc7
  40be8e:	fiadd  WORD PTR [ebp-0x21]
  40be91:	jne    0x40beef
  40be93:	mov    edx,DWORD PTR [eax]
  40be95:	clc    
  40be96:	test   BYTE PTR [ebp+0x2],cl
  40be99:	xor    eax,DWORD PTR [eax]
  40be9b:	xor    eax,DWORD PTR [ebp-0x73]
  40be9e:	mov    eax,DWORD PTR [ebx]
  40bea0:	cld    
  40bea1:	jb     0x40bee8
  40bea3:	add    BYTE PTR [ebx+0x45],ch
  40bea6:	adc    al,0x8b
  40bea8:	rcr    eax,0x48
  40beab:	add    BYTE PTR [ebx],al
  40bead:	add    ecx,DWORD PTR [eax]
  40beaf:	pmaxub mm1,mm3
  40beb2:	dec    ebp
  40beb3:	dec    DWORD PTR [ebx+0x5545fc24]
  40beb9:	xor    esi,DWORD PTR [ebx]
  40bebb:	add    eax,DWORD PTR [ebx]
  40bebd:	cmp    esi,DWORD PTR [ebx]
  40bebf:	hlt    
  40bec0:	mov    DWORD PTR [edi],ecx
  40bec2:	fadd   QWORD PTR [ebp+0x8]
  40bec5:	xor    edx,edi
  40bec7:	add    ebx,edi
  40bec9:	cmp    ecx,edx
  40becb:	clts   
  40becd:	jp     0x40bf1c
  40becf:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  40bed5:	(bad)  
  40bed6:	xor    eax,edi
  40bed8:	add    eax,DWORD PTR [ebp+0xc]
  40bedb:	jne    0x40bf22
  40bedd:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  40bee3:	xor    eax,DWORD PTR [eax]
  40bee5:	lea    eax,[ebp+0x1]
  40bee8:	(bad)  
  40bee9:	jb     0x40bec3
  40beeb:	add    BYTE PTR [ebp+0x45e9f845],al
  40bef1:	add    bh,bh
  40bef3:	add    BYTE PTR [eax*2+0x12018d80],cl
  40befa:	add    bh,al
  40befc:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  40bf03:	pop    ebp
  40bf04:	mov    DWORD PTR [ebx],esi
  40bf06:	hlt    
  40bf07:	add    ecx,eax
  40bf09:	jmp    0x85bf20
  40bf0e:	inc    DWORD PTR [ebp+0xc]
  40bf11:	xor    eax,DWORD PTR [eax+0x890103]
  40bf17:	in     al,dx
  40bf18:	push   eax
  40bf19:	inc    ebp
  40bf1a:	mov    DWORD PTR [ebx],esi
  40bf1c:	hlt    
  40bf1d:	add    eax,DWORD PTR [ebp-0x77]
  40bf20:	mov    WORD PTR [esi+eiz*2],cs
  40bf23:	dec    ebp
  40bf24:	(bad)  
  40bf25:	mov    esp,eax
  40bf27:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  40bf2d:	enter  0x633,0x3
  40bf31:	add    al,0x3b
  40bf33:	mov    esp,esi
  40bf35:	in     al,dx
  40bf36:	and    eax,DWORD PTR [ebp+0x45]
  40bf39:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  40bf3f:	mov    ecx,esi
  40bf41:	cld    
  40bf42:	pushf  
  40bf43:	dec    ebp
  40bf44:	sahf   
  40bf45:	xor    esi,DWORD PTR [edx]
  40bf47:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  40bf4d:	mov    eax,DWORD PTR [ecx]
  40bf4f:	cld    
  40bf50:	add    BYTE PTR [ebp-0x31],cl
  40bf53:	xor    ebp,DWORD PTR [edi+0x50c15103]
  40bf59:	pop    ds
  40bf5a:	mov    eax,ecx
  40bf5c:	cld    
  40bf5d:	sbb    dh,al
  40bf5f:	dec    ebp
  40bf60:	(bad)  
  40bf61:	mov    eax,DWORD PTR [ebp+0x10]
  40bf64:	jne    0x40bee6
  40bf66:	mov    eax,DWORD PTR [ecx]
  40bf68:	fadd   DWORD PTR [eax]
  40bf6a:	(bad)  
  40bf6b:	mov    bh,0xc7
  40bf6d:	push   ecx
  40bf6e:	fdiv   DWORD PTR [ebp-0x7a]
  40bf71:	(bad)  
  40bf72:	dec    DWORD PTR [eax]
  40bf74:	call   FWORD PTR [ecx]
  40bf76:	inc    ebp
  40bf77:	inc    ebp
  40bf78:	xor    eax,DWORD PTR [ebx]
  40bf7a:	add    ecx,DWORD PTR [eax]
  40bf7c:	cmp    ecx,DWORD PTR [ebp-0xc]
  40bf7f:	mov    edx,DWORD PTR [edi]
  40bf81:	fadd   DWORD PTR [ebp+0x0]
  40bf84:	mov    eax,DWORD PTR [ebx-0x39fd18]
  40bf8a:	test   ah,dh
  40bf8c:	sahf   
  40bf8d:	push   ecx
  40bf8e:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  40bf94:	out    dx,eax
  40bf95:	mov    eax,DWORD PTR [eax]
  40bf97:	or     al,0xc7
  40bf99:	(bad)  
  40bf9a:	in     al,dx
  40bf9b:	(bad)  
  40bf9c:	sbb    eax,ecx
  40bf9e:	add    DWORD PTR [ebp+0x45],eax
  40bfa1:	jne    0x40bf32
  40bfa3:	mov    eax,DWORD PTR [eax+ebp*8]
  40bfa6:	mov    eax,esi
  40bfa8:	cld    
  40bfa9:	test   dh,bl
  40bfab:	sahf   
  40bfac:	fbstp  TBYTE PTR [edx]
  40bfae:	ret    0x89
  40bfb1:	call   0x4e3cd041
  40bfb6:	(bad)  
  40bfb7:	xor    eax,edi
  40bfb9:	add    eax,DWORD PTR [ebp+0xf]
  40bfbc:	mov    eax,ecx
  40bfbe:	cld    
  40bfbf:	dec    ebp
  40bfc0:	(bad)  
  40bfc1:	mov    edi,eax
  40bfc3:	cdq    
  40bfc4:	inc    ebp
  40bfc5:	inc    ebp
  40bfc6:	mov    esi,DWORD PTR [ebx]
  40bfc8:	cld    
  40bfc9:	lea    eax,[ebp+0x3]
  40bfcc:	xor    esi,DWORD PTR [edx+0x3]
  40bfcf:	add    BYTE PTR [ebx],bh
  40bfd1:	inc    ebp
  40bfd2:	je     0x40bf5f
  40bfd4:	mov    esp,esp
  40bfd6:	cwde   
  40bfd7:	mov    BYTE PTR [ebp-0x39],0x8b
  40bfdb:	add    al,0xe4
  40bfdd:	(bad)  
  40bfdf:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  40bfe5:	lock mov eax,DWORD PTR [ebp-0x14]
  40bfe9:	mov    eax,esi
  40bfeb:	aam    0xc7
  40bfed:	jmp    0xd645:0x2972c1
  40bff4:	mov    eax,ebp
  40bff6:	in     al,dx
  40bff7:	inc    esi
  40bff9:	mov    eax,edi
  40bffb:	cld    
  40bffc:	jmp    0x750ffbcf
  40c001:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  40c008:	mov    edi,eax
  40c00a:	fadd   DWORD PTR [ebx]
  40c00c:	add    BYTE PTR [ebp+0xf],al
  40c00f:	xor    ecx,ecx
  40c011:	add    edi,edi
  40c013:	pop    edi
  40c014:	hlt    
  40c015:	pop    ebx
  40c016:	push   eax
  40c017:	ret    0xeb
  40c01a:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  40c020:	mov    eax,DWORD PTR [ebp+0x10]
  40c023:	xor    eax,0xc7019c89
  40c028:	add    al,bl
  40c02a:	rol    BYTE PTR [ebp+0x4575f850],0xff
  40c031:	mov    DWORD PTR [eax],ecx
  40c033:	or     al,0x45
  40c035:	inc    ebp
  40c036:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  40c03c:	xor    eax,ecx
  40c03e:	add    ebx,DWORD PTR [esi+0x568b323b]
  40c044:	clc    
  40c045:	jne    0x40c058
  40c047:	add    ecx,DWORD PTR [ebp+0x3b]
  40c04a:	xor    ecx,DWORD PTR [edi]
  40c04c:	lea    esp,[ecx]
  40c04e:	add    DWORD PTR [eax],eax
  40c050:	jb     0x40bfdd
  40c052:	add    BYTE PTR [eax],cl
  40c054:	inc    ebp
  40c055:	jne    0x40c042
  40c057:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  40c05d:	or     al,0xc7
  40c05f:	inc    ebp
  40c060:	scas   eax,DWORD PTR es:[edi]
  40c061:	xor    BYTE PTR [ebx+0x48be49c],cl
  40c067:	in     al,0x8b
  40c069:	jne    0x40c063
  40c06b:	mov    eax,esi
  40c06d:	or     al,0x9c
  40c06f:	icebp  
  40c070:	sahf   
  40c071:	shl    DWORD PTR [edx],0xf2
  40c074:	mov    esi,DWORD PTR [esp+edi*8+0x33934d68]
  40c07b:	lsl    ebp,bx
  40c07e:	cmp    DWORD PTR [eax],eax
  40c080:	cdq    
  40c081:	mov    eax,DWORD PTR [ebp-0xba00f4]
  40c087:	add    edx,DWORD PTR [ebp-0x60]
  40c08a:	mov    eax,DWORD PTR [eax]
  40c08c:	call   0x81490e1c
  40c091:	jge    0x40c030
  40c093:	sub    esi,DWORD PTR [edx]
  40c095:	xor    al,0x33
  40c097:	jge    0x40c082
  40c099:	xor    edi,ebp
  40c09b:	add    edi,edi
  40c09d:	mov    DWORD PTR [ebp-0x24],ecx
  40c0a0:	xor    esi,edi
  40c0a2:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  40c0a9:	jne    0x40c0b3
  40c0ab:	xor    eax,DWORD PTR [ebp+0x3]
  40c0ae:	jmp    0x40c039
  40c0b0:	mov    edi,eax
  40c0b2:	cld    
  40c0b3:	mov    esi,0x5e85c7f0
  40c0b9:	clc    
  40c0ba:	leave  
  40c0bb:	xchg   edi,eax
  40c0bc:	or     al,0x0
  40c0be:	push   ebp
  40c0bf:	mov    ebp,esp
  40c0c1:	cld    
  40c0c2:	in     al,dx
  40c0c3:	icebp  
  40c0c4:	(bad)  
  40c0c5:	jnp    0x40c0c3
  40c0c7:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  40c0cd:	jae    0x40c103
  40c0cf:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  40c0d6:	inc    ebp
  40c0d7:	call   0x823d7867
  40c0dc:	push   edi
  40c0dd:	call   DWORD PTR [ecx+0x0]
  40c0e0:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  40c0e6:	add    BYTE PTR [ebx+0x3082b8b],cl
  40c0ec:	ret    0xf00f
  40c0ef:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  40c0f6:	inc    ebp
  40c0f7:	loopne 0x40c084
  40c0f9:	jne    0x40c103
  40c0fb:	mov    esi,DWORD PTR [eax-0x20]
  40c0fe:	push   edi
  40c0ff:	jge    0x40c176
  40c101:	xor    eax,edi
  40c103:	(bad)  
  40c104:	in     al,0x3e
  40c106:	test   DWORD PTR [edx-0x8],esi
  40c109:	add    BYTE PTR [ebp+0x75],al
  40c10c:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  40c112:	xor    esi,DWORD PTR [ebx]
  40c114:	xor    eax,DWORD PTR [ebx]
  40c116:	add    edi,DWORD PTR [ebx]
  40c118:	cmp    DWORD PTR [ebp-0x39],esi
  40c11b:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  40c121:	xor    eax,DWORD PTR [eax]
  40c123:	add    eax,DWORD PTR [eax]
  40c125:	cmp    esi,DWORD PTR [ebp+0x75]
  40c128:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  40c12e:	add    BYTE PTR [ecx],al
  40c130:	add    BYTE PTR [ebx+0x4d8b0275],al
  40c136:	or     al,0x75
  40c138:	ja     0x40c0c5
  40c13a:	mov    esi,esp
  40c13c:	cld    
  40c13d:	pop    ebp
  40c13e:	stc    
  40c13f:	mov    edi,edx
  40c141:	in     al,0x75
  40c143:	jge    0x40c180
  40c145:	mov    ecx,DWORD PTR [edi]
  40c147:	or     al,0xc4
  40c149:	icebp  
  40c14a:	add    BYTE PTR [ebx+ecx*4-0xe6c0394],bh
  40c151:	jae    0x40c145
  40c153:	add    esi,DWORD PTR [ebp-0xc]
  40c156:	push   ebx
  40c157:	jne    0x40c19e
  40c159:	mov    esi,DWORD PTR [edx]
  40c15b:	add    al,0x9c
  40c15d:	icebp  
  40c15e:	jmp    0x9dc255
  40c163:	cmp    esi,DWORD PTR [ebp+0xf]
  40c166:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  40c16a:	clc    
  40c16b:	pop    ebx
  40c16c:	repnz inc ebp
  40c16e:	out    dx,eax
  40c16f:	pop    edi
  40c170:	test   DWORD PTR [ebx],0x33fe456d
  40c176:	pop    esp
  40c177:	add    ecx,DWORD PTR [eax]
  40c179:	pop    esi
  40c17a:	jge    0x40c13e
  40c17c:	(bad)  
  40c17e:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  40c184:	add    BYTE PTR [ebp+0x75],al
  40c187:	xor    eax,0xc7ec9c8b
  40c18c:	xor    ah,bl
  40c18e:	repnz test esi,edi
  40c191:	clc    
  40c192:	mov    bh,0x45
  40c194:	rcl    DWORD PTR [ebx+0xc],0xbe
  40c198:	stc    
  40c199:	or     BYTE PTR [ebp+0x7],bh
  40c19c:	mov    esi,eax
  40c19e:	in     al,dx
  40c19f:	sahf   
  40c1a0:	jne    0x40c1d4
  40c1a2:	mov    eax,DWORD PTR [ebx]
  40c1a4:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  40c1aa:	sahf   
  40c1ab:	xor    esi,DWORD PTR [edx]
  40c1ad:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  40c1b3:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  40c1b9:	mov    esi,edx
  40c1bb:	lock inc cl
  40c1be:	push   ss
  40c1bf:	inc    ebp
  40c1c0:	jne    0x40c143
  40c1c2:	mov    esi,eax
  40c1c4:	in     al,dx
  40c1c5:	mov    ch,0xf1
  40c1c7:	clc    
  40c1c8:	repnz inc ebp
  40c1ca:	dec    BYTE PTR [ebx-0x3e8a07f8]
  40c1d0:	mov    eax,DWORD PTR [ebp-0x24]
  40c1d3:	cmp    DWORD PTR [esi],0xff85c3f8
  40c1d9:	clc    
  40c1da:	call   0x5dcc6124
  40c1df:	hlt    
  40c1e0:	add    ecx,eax
  40c1e2:	clc    
  40c1e3:	inc    ebp
  40c1e4:	jne    0x40c167
  40c1e6:	mov    esi,esp
  40c1e8:	clc    
  40c1e9:	test   DWORD PTR [ebp-0x8],ebx
  40c1ec:	xor    eax,DWORD PTR [ebp+0x3b]
  40c1ef:	mov    esi,ebx
  40c1f1:	in     al,dx
  40c1f2:	xchg   ebp,eax
  40c1f3:	rol    DWORD PTR [ecx],0x45
  40c1f6:	sbb    BYTE PTR [ecx+0x58bec45],al
  40c1fc:	cld    
  40c1fd:	clc    
  40c1fe:	pop    eax
  40c1ff:	pop    es
  40c200:	xor    eax,DWORD PTR [eax]
  40c202:	add    esp,DWORD PTR [esi-0x77]
  40c205:	inc    ebp
  40c206:	hlt    
  40c207:	mov    ebx,esi
  40c209:	or     BYTE PTR [ebp-0x7b0040],al
  40c20f:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  40c215:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  40c21b:	add    dl,al
  40c21d:	mov    ecx,ecx
  40c21f:	sbb    BYTE PTR [eax],cl
  40c221:	rcl    BYTE PTR [ebp-0x7c],0xec
  40c225:	add    ebp,esp
  40c227:	add    bh,al
  40c229:	mov    edi,esp
  40c22b:	and    BYTE PTR [ebp+0x4500f842],al
  40c231:	data16 xor al,0xc1
  40c234:	pushf  
  40c235:	or     BYTE PTR [ebx+0x5666fc00],cl
  40c23b:	rcl    DWORD PTR [edi+0x4d],0x51
  40c23f:	xor    ax,WORD PTR [ecx]
  40c242:	mov    ebx,0x37285
  40c247:	add    bl,al
  40c249:	inc    ebp
  40c24a:	inc    ebp
  40c24b:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  40c251:	add    eax,ebx
  40c253:	cmp    al,0x45
  40c255:	inc    ebp
  40c256:	push   edi
  40c257:	mov    edi,DWORD PTR [ebp+0x50]
  40c25a:	mov    eax,eax
  40c25c:	lock test BYTE PTR [ebp+0x3],cl
  40c260:	xor    eax,DWORD PTR [eax]
  40c262:	mov    DWORD PTR [ebp-0x10],eax
  40c265:	xor    eax,0x8b358c45
  40c26a:	pushf  
  40c26b:	aam    0x8b
  40c26d:	xabort 0xc3
  40c270:	dec    ebp
  40c271:	inc    ebp
  40c272:	xor    ecx,DWORD PTR [ebx-0x78070377]
  40c278:	inc    ebp
  40c279:	add    ebp,esi
  40c27b:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  40c282:	dec    ebp
  40c283:	mov    esi,DWORD PTR [ebx]
  40c285:	cld    
  40c286:	mov    DWORD PTR [edi+0x4501f4],eax
  40c28c:	xor    DWORD PTR [eax],edx
  40c28e:	pushf  
  40c28f:	dec    ebp
  40c290:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  40c296:	xor    esi,DWORD PTR [ebx]
  40c298:	mov    DWORD PTR [edi+0x4501ec],eax
  40c29e:	xor    eax,0xb8529f55
  40c2a3:	push   ebp
  40c2a4:	xchg   ebp,eax
  40c2a5:	xor    eax,DWORD PTR [eax]
  40c2a7:	add    ecx,DWORD PTR [ecx+0x45712052]
  40c2ad:	inc    DWORD PTR [ebp-0x20aff0e0]
  40c2b3:	mov    eax,DWORD PTR [eax]
  40c2b5:	in     al,0x8b
  40c2b7:	inc    ecx
  40c2b8:	or     al,0x8b
  40c2ba:	rcl    BYTE PTR [eax-0x7c],0xc8
  40c2be:	add    eax,DWORD PTR [ebp+0x0]
  40c2c1:	push   ecx
  40c2c2:	inc    ebp
  40c2c3:	call   0x4fcc4d
  40c2c8:	leave  
  40c2c9:	push   ebp
  40c2ca:	add    BYTE PTR [ebx+0x459466],cl
  40c2d0:	mov    ecx,0x8b8a89
  40c2d5:	or     al,0x33
  40c2d7:	jo     0x40c292
  40c2d9:	(bad)  
  40c2da:	cmp    ecx,DWORD PTR [eax]
  40c2dc:	add    al,ch
  40c2de:	add    eax,DWORD PTR [edi]
  40c2e0:	mov    eax,DWORD PTR [eax]
  40c2e2:	or     BYTE PTR [ebp+0x39],cl
  40c2e5:	mov    ecx,DWORD PTR [edi]
  40c2e7:	cmp    al,0xa9
  40c2e9:	rol    DWORD PTR [eax],0xb7
  40c2ec:	mov    edx,DWORD PTR [esp+edi*8]
  40c2ef:	dec    esp
  40c2f0:	dec    ebp
  40c2f1:	sbb    BYTE PTR [ebx+0x418b084d],cl
  40c2f7:	cld    
  40c2f8:	mov    DWORD PTR [edi-0x31bff9f4],esi
  40c2fe:	test   ebx,ecx
  40c300:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  40c307:	test   al,0xd4
  40c309:	add    BYTE PTR [ebp+0x45fcf88b],al
  40c30f:	into   
  40c310:	xor    ecx,ebx
  40c312:	add    ecx,DWORD PTR [ebp-0x77]
  40c315:	mov    edx,esp
  40c317:	fadd   QWORD PTR [ebp-0x49]
  40c31a:	mov    eax,DWORD PTR [esi]
  40c31c:	nop
  40c31d:	into   
  40c31e:	add    cl,dl
  40c320:	mov    edx,ebx
  40c322:	mov    edx,DWORD PTR [ebp+0x3c]
  40c325:	invd   
  40c327:	mov    BYTE PTR [ebp+0x0],al
  40c32a:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  40c330:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40c336:	push   ebp
  40c337:	push   ebp
  40c338:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  40c33e:	fmul   DWORD PTR [ecx+0x28dd000]
  40c344:	call   0xf8484f0a
  40c349:	rcl    esi,1
  40c34b:	rcl    ebx,0x45
  40c34e:	call   DWORD PTR [eax+0x50]
  40c351:	inc    edx
  40c352:	jne    0x40c357
  40c354:	jmp    DWORD PTR [eax]
  40c356:	sbb    al,0xe8
  40c358:	dec    ebp
  40c359:	or     BYTE PTR [ebx+0x49555400],cl
  40c35f:	mov    ebp,DWORD PTR [ebx]
  40c361:	sbb    BYTE PTR [ebx],al
  40c363:	dec    eax
  40c364:	and    BYTE PTR [ebx],dh
  40c366:	push   eax
  40c367:	add    edi,DWORD PTR [ebx]
  40c369:	cmp    eax,DWORD PTR [eax]
  40c36b:	je     0x40c2f8
  40c36d:	push   ecx
  40c36e:	and    BYTE PTR [ebp-0x79],cl
  40c371:	add    eax,DWORD PTR [ecx]
  40c373:	or     al,0x0
  40c375:	inc    eax
  40c376:	adc    BYTE PTR [ebx],al
  40c378:	inc    ebp
  40c379:	and    bh,bh
  40c37b:	push   eax
  40c37c:	push   esp
  40c37d:	sub    DWORD PTR [ebp+0x0],esi
  40c380:	push   edx
  40c381:	mov    ecx,eax
  40c383:	sbb    BYTE PTR [eax],al
  40c385:	dec    ebp
  40c386:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  40c38c:	add    esi,DWORD PTR [ebx]
  40c38e:	jge    0x72cdcddc
  40c394:	add    DWORD PTR [eax],eax
  40c396:	mov    DWORD PTR [ebp+0x18],edx
  40c399:	mov    DWORD PTR [ebp+0x18],ecx
  40c39c:	cmovne edx,DWORD PTR [eax+0xf]
  40c3a0:	xor    edx,DWORD PTR [edx+0x3]
  40c3a3:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40c3a9:	or     al,0x84
  40c3ab:	rol    DWORD PTR [eax],cl
  40c3ad:	dec    ebp
  40c3ae:	add    BYTE PTR [ebx],bh
  40c3b0:	dec    ebp
  40c3b1:	jbe    0x40c3e6
  40c3b3:	mov    eax,DWORD PTR [ebx]
  40c3b5:	cld    
  40c3b6:	mov    DWORD PTR [edi+0x4d01e0],edx
  40c3bc:	bswap  esi
  40c3be:	push   eax
  40c3bf:	retf   
  40c3c0:	xor    ecx,DWORD PTR [ebp+0x2b]
  40c3c3:	mov    ebp,DWORD PTR [ebx]
  40c3c5:	and    BYTE PTR [ecx],bh
  40c3c7:	or     ah,al
  40c3c9:	daa    
  40c3ca:	xchg   DWORD PTR [edi+0x100],eax
  40c3d0:	push   ebp
  40c3d1:	push   ebp
  40c3d2:	adc    DWORD PTR [edx+0x8],0x55
  40c3d6:	push   ebp
  40c3d7:	xor    ebp,ebx
  40c3d9:	add    ecx,DWORD PTR [ebx+0x40551852]
  40c3df:	dec    DWORD PTR [ebp+0x45ffff54]
  40c3e5:	sbb    al,0x8b
  40c3e7:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  40c3ee:	and    eax,DWORD PTR [ebp+0x3]
  40c3f1:	mov    edx,eax
  40c3f3:	enter  0x8b,0x4
  40c3f7:	mov    eax,DWORD PTR [ebp+0x33]
  40c3fa:	push   eax
  40c3fb:	add    esp,DWORD PTR [edi-0x74f5fff1]
  40c401:	add    ah,bh
  40c403:	add    DWORD PTR [ebp-0x28],0xffffff8b
  40c407:	mov    eax,0xd64f08
  40c40c:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  40c412:	mov    esp,DWORD PTR [esi+0x8]
  40c415:	inc    ebp
  40c416:	dec    eax
  40c417:	mov    eax,0x44f8b
  40c41c:	inc    ebp
  40c41d:	mov    DWORD PTR [ecx-0x38],edx
  40c420:	call   0xc3cbe5
  40c425:	or     BYTE PTR [ebp-0x75],al
  40c428:	mov    esp,DWORD PTR [esi-0x24]
  40c42b:	inc    ebp
  40c42c:	push   ebp
  40c42d:	mov    eax,0x284e83
  40c432:	into   
  40c433:	mov    DWORD PTR [edx+ecx*8-0x31cd7662],ecx
  40c43a:	mov    eax,DWORD PTR [ebp+0xc]
  40c43d:	lea    eax,[ebp+0x45]
  40c440:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40c446:	push   es
  40c447:	xor    eax,esi
  40c449:	mov    edx,0x453bd0
  40c44e:	sub    eax,DWORD PTR [ebx]
  40c450:	mov    edi,edi
  40c452:	loopne 0x40c45c
  40c454:	retf   0x837d
  40c457:	push   es
  40c458:	dec    ebp
  40c459:	mov    DWORD PTR [ebx+0xc78c72],ecx
  40c45f:	lods   al,BYTE PTR ds:[esi]
  40c460:	xor    edx,eax
  40c462:	add    esi,DWORD PTR [edx]
  40c464:	mov    DWORD PTR [ebp+0x18],eax
  40c467:	xlat   BYTE PTR ds:[ebx]
  40c468:	dec    ebp
  40c469:	sar    BYTE PTR [ebx],1
  40c46b:	(bad)  
  40c46c:	jne    0x40c422
  40c46e:	mov    esp,eax
  40c470:	fsub   st,st(7)
  40c472:	add    BYTE PTR [ebp-0x73],al
  40c475:	xor    ch,al
  40c477:	out    dx,al
  40c478:	mov    eax,edi
  40c47a:	hlt    
  40c47b:	mov    esp,0xd3d3d0d6
  40c480:	mov    eax,edi
  40c482:	in     al,0xc0
  40c484:	jb     0x40c467
  40c486:	push   ecx
  40c487:	inc    ebp
  40c488:	push   eax
  40c489:	jl     0x40c410
  40c48b:	leave  
  40c48c:	cmove  esi,esp
  40c48f:	lods   al,BYTE PTR ds:[esi]
  40c490:	add    BYTE PTR [eax],dl
  40c492:	mov    esi,edx
  40c494:	or     al,0x80
  40c496:	(bad)  
  40c497:	xor    eax,0x83008801
  40c49c:	or     DWORD PTR [edi],edx
  40c49e:	into   
  40c49f:	in     al,dx
  40c4a0:	retf   
  40c4a1:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40c4a8:	gs push ecx
  40c4aa:	add    BYTE PTR [eax+0x24],dl
  40c4ad:	mov    eax,DWORD PTR [eax]
  40c4af:	fsub   DWORD PTR [esi+0x0]
  40c4b2:	inc    ebp
  40c4b3:	lea    eax,[ebx-0x76aff554]
  40c4b9:	push   ecx
  40c4ba:	(bad)  
  40c4bb:	lea    ebx,[esi]
  40c4bd:	fadd   DWORD PTR [eax]
  40c4bf:	mov    esp,DWORD PTR [esi-0x74]
  40c4c2:	inc    ebp
  40c4c3:	add    BYTE PTR [ebx+0x65ff08ff],al
  40c4c9:	mov    eax,DWORD PTR [eax]
  40c4cb:	fmul   st,st(0)
  40c4cd:	ror    BYTE PTR [ecx-0x45ba33c6],0xeb
  40c4d4:	add    BYTE PTR [ebx-0x27b2769a],cl
  40c4da:	inc    bp
  40c4dc:	inc    ebp
  40c4dd:	je     0x40c46a
  40c4df:	mov    ecx,DWORD PTR [eax]
  40c4e1:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  40c4e5:	add    DWORD PTR [edx+0x0],eax
  40c4e8:	add    BYTE PTR [ecx],dl
  40c4ea:	jmpw   0x14f6
  40c4ee:	or     BYTE PTR [ebx+0x668c00],cl
  40c4f4:	retf   0x453b
  40c4f7:	jne    0x40c47c
  40c4f9:	mov    ecx,DWORD PTR [eax]
  40c4fb:	in     al,0x66
  40c4fd:	(bad)
  40c501:	add    BYTE PTR [ebp+0x52],al
  40c504:	enter  0xee03,0x89
  40c508:	(bad)  
  40c509:	sbb    al,0xb0
  40c50b:	inc    ebp
  40c50c:	jmp    0xea20:0x45ff3357
  40c513:	and    dh,ch
  40c515:	inc    edi
  40c517:	test   DWORD PTR [eax+0x3fc3ed0f],edi
  40c51d:	add    BYTE PTR [ebp-0x1],al
  40c520:	ror    BYTE PTR [esi+ebp*8],1
  40c523:	(bad)  
  40c524:	data16 jne 0x40c56c
  40c527:	call   0x7bd0d
  40c52c:	ret    0x33c0
  40c52f:	test   BYTE PTR [ebp-0x75fff300],cl
  40c535:	inc    ebp
  40c536:	or     BYTE PTR [ebx-0x3015dfb7],0x41
  40c53d:	sub    BYTE PTR [eax],dl
  40c53f:	(bad)  
  40c540:	stc    
  40c541:	test   DWORD PTR [edx+0xf],esi
  40c544:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40c54a:	lea    esi,[ebp-0x3c]
  40c54d:	call   0xff45c051
  40c552:	pop    eax
  40c554:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  40c55b:	xchg   edi,edi
  40c55d:	add    DWORD PTR [eax],ecx
  40c55f:	add    BYTE PTR [ebp+0x55],cl
  40c562:	push   ecx
  40c563:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40c569:	fdiv   DWORD PTR [ecx]
  40c56b:	add    al,dl
  40c56d:	lea    eax,[ebp-0x18]
  40c570:	test   edi,edi
  40c572:	je     0x40c55c
  40c574:	mov    DWORD PTR [ebp+0x8],ecx
  40c577:	dec    DWORD PTR [edx]
  40c579:	push   esp
  40c57a:	add    bh,bh
  40c57c:	inc    ebp
  40c57d:	sbb    al,0x3b
  40c57f:	push   ebp
  40c580:	or     BYTE PTR [ebx+0x50c80d],cl
  40c586:	mov    ecx,DWORD PTR [ebx+0x300338c]
  40c58c:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  40c590:	mov    ecx,DWORD PTR [eax+ebx*1]
  40c593:	inc    ecx
  40c594:	pop    edi
  40c596:	add    DWORD PTR [eax],ecx
  40c598:	add    BYTE PTR [ebp+0x7511f811],ah
  40c59e:	push   ebp
  40c59f:	dec    DWORD PTR [ebx+0xf69014]
  40c5a5:	or     BYTE PTR [ebx+0x11752800],cl
  40c5ab:	adc    DWORD PTR [eax-0x62],0x660c008b
  40c5b2:	push   eax
  40c5b3:	jno    0x40c62a
  40c5b5:	add    ebp,eax
  40c5b7:	push   edx
  40c5b8:	clc    
  40c5b9:	sar    bh,1
  40c5bb:	xchg   eax,eax
  40c5bd:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  40c5c4:	jne    0x40c5d0
  40c5c6:	mov    eax,DWORD PTR [ebp-0x1]
  40c5c9:	mov    esp,DWORD PTR [eax]
  40c5cb:	sub    BYTE PTR [edx+eax*8-0x1],ah
  40c5cf:	rol    BYTE PTR [ebp-0x5174f0bb],1
  40c5d5:	loopne 0x40c5d7
  40c5d7:	dec    ebp
  40c5d8:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  40c5de:	mov    eax,DWORD PTR [eax]
  40c5e0:	call   0xffbebbe5
  40c5e5:	add    al,al
  40c5e7:	add    al,0x84
  40c5e9:	add    BYTE PTR gs:[eax],al
  40c5ec:	add    BYTE PTR [ebp-0x1],al
  40c5ef:	jmp    0x40c611
  40c5f1:	xor    ecx,eax
  40c5f3:	pop    edi
  40c5f4:	call   FWORD PTR [ebx-0x7b]
  40c5f7:	ret    0xf
  40c5fa:	mov    BYTE PTR [ebx+0x518b0f00],cl
  40c600:	mov    WORD PTR [edi],cs
  40c602:	add    BYTE PTR [ecx-0x75],al
  40c605:	push   ebx
  40c606:	and    BYTE PTR [ebx],dh
  40c608:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  40c60e:	add    DWORD PTR [eax+eax*1-0x75],esi
  40c612:	dec    ebp
  40c613:	or     al,0x51
  40c615:	sbb    al,0x75
  40c617:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  40c61d:	pop    eax
  40c61e:	push   edx
  40c61f:	add    edx,DWORD PTR [eax+0x3]
  40c622:	mov    edi,DWORD PTR [ecx]
  40c624:	and    BYTE PTR [eax],cl
  40c626:	xchg   DWORD PTR [edx],ecx
  40c628:	add    eax,eax
  40c62a:	add    BYTE PTR [edi+0x0],al
  40c62d:	cli    
  40c62e:	(bad)  
  40c62f:	loope  0x40c5f4
  40c631:	shl    BYTE PTR [edi],0x5b
  40c634:	dec    ebp
  40c635:	ret    0x8b
  40c638:	sub    BYTE PTR [ebx+0x28358345],cl
  40c63e:	pushf  
  40c63f:	inc    ebp
  40c640:	mov    esi,DWORD PTR ds:0xc7759c08
  40c646:	and    esp,0xf8008557
  40c64c:	inc    DWORD PTR [ebp+0x10]
  40c64f:	xor    eax,esi
  40c651:	pushf  
  40c652:	jb     0x40c60c
  40c654:	add    BYTE PTR [edi+0x9],cl
  40c657:	add    BYTE PTR [esi],dl
  40c659:	mov    edx,eax
  40c65b:	hlt    
  40c65c:	inc    eax
  40c65e:	(bad)  
  40c65f:	data16 rol BYTE PTR [ebp+0x0],1
  40c663:	mov    eax,0x9c4f34
  40c668:	jmp    0x40c5f3
  40c66a:	mov    edi,eax
  40c66c:	or     al,0xc0
  40c66e:	inc    eax
  40c66f:	add    ax,WORD PTR [ebp-0x1]
  40c673:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40c679:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  40c67f:	mov    eax,DWORD PTR [ebp-0x10]
  40c682:	add    DWORD PTR [ecx+0x7830800],edi
  40c688:	sbb    cl,al
  40c68a:	jne    0x40c617
  40c68c:	sub    esp,0x20
  40c68f:	sahf   
  40c690:	mov    esi,DWORD PTR [edx]
  40c692:	and    BYTE PTR [ebx],al
  40c694:	add    dl,BYTE PTR [edi-0x40]
  40c697:	lock pop esi
  40c699:	test   cl,cl
  40c69b:	add    DWORD PTR [eax+eax*1],ebx
  40c69e:	push   ebp
  40c69f:	inc    ebp
  40c6a0:	in     al,dx
  40c6a1:	mov    esi,DWORD PTR [edi-0x483ef918]
  40c6a7:	ret    0xf014
  40c6aa:	push   edi
  40c6ab:	test   bh,bh
  40c6ad:	add    DWORD PTR [eax+eax*1+0x18],eax
  40c6b1:	inc    ebp
  40c6b2:	shl    BYTE PTR [ebx],cl
  40c6b4:	pop    ds
  40c6b5:	add    ecx,DWORD PTR [eax-0x77]
  40c6b8:	(bad)  
  40c6b9:	loopne 0x40c6ec
  40c6bb:	inc    ebp
  40c6bc:	pop    ebp
  40c6bd:	xor    esi,DWORD PTR [edx+0x3]
  40c6c0:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  40c6c6:	fdivp  st(4),st
  40c6c8:	pop    ebp
  40c6c9:	mov    bh,0x72
  40c6cb:	hlt    
  40c6cc:	add    DWORD PTR [edx+0x28],0x0
  40c6d0:	cmp    esp,DWORD PTR [esi+0x72]
  40c6d3:	lock xor eax,DWORD PTR [edx+0x5f]
  40c6d7:	add    BYTE PTR [ebp+0x66],bl
  40c6da:	add    al,0xfb
  40c6dc:	push   ebp
  40c6dd:	or     ah,ch
  40c6df:	add    ah,ch
  40c6e1:	data16 (bad) 
  40c6e3:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  40c6eb:	jge    0x40c721
  40c6ed:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  40c6f4:	test   DWORD PTR [eax+edi*8],esi
  40c6f7:	sbb    si,WORD PTR [ebp+0x0]
  40c6fb:	mov    esp,DWORD PTR [esi-0x24]
  40c6fe:	inc    ebp
  40c6ff:	jge    0x40c684
  40c701:	pushaw 
  40c703:	xor    al,0x89
  40c705:	data16 cld 
  40c707:	jne    0x40c739
  40c709:	mov    esi,0x667200
  40c70e:	inc    ebp
  40c70f:	or     BYTE PTR [ebx-0x76742000],al
  40c715:	lock clc 
  40c717:	mov    eax,DWORD PTR [ebp+0xc]
  40c71a:	mov    edi,esi
  40c71c:	in     al,dx
  40c71d:	or     BYTE PTR [ebp+0x0],al
  40c720:	mov    esi,edi
  40c722:	call   0x53500c62
  40c727:	sbb    dl,BYTE PTR [edi+0x0]
  40c72a:	push   ecx
  40c72b:	mov    esi,DWORD PTR [ebx]
  40c72d:	lock push esi
  40c72f:	pop    ebp
  40c730:	jne    0x40c765
  40c732:	mov    edx,0x3b7203
  40c737:	retw   0x3b7d
  40c73b:	minpd  xmm7,xmm0
  40c73f:	str    WORD PTR [ebp+0x66f0008b]
  40c746:	jne    0x40c727
  40c748:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  40c74f:	mov    esp,esi
  40c751:	cld    
  40c752:	add    BYTE PTR [edx-0x75],al
  40c755:	add    al,dh
  40c757:	sar    bx,0xc2
  40c75b:	mov    eax,DWORD PTR [ebp+0x8]
  40c75e:	mov    eax,DWORD PTR [ebx]
  40c760:	lock rcr di,0xc2
  40c765:	es inc ebp
  40c767:	mov    ecx,DWORD PTR [edi]
  40c769:	clc    
  40c76a:	jne    0x40c7ae
  40c76c:	(bad)  
  40c76e:	jge    0x40c7d6
  40c770:	mov    eax,0x8b8afb
  40c775:	or     BYTE PTR [ebx],dh
  40c777:	add    edi,DWORD PTR [ebx+0xdf8a66]
  40c77d:	push   cs
  40c77e:	xor    esi,DWORD PTR [edi-0x48c4f748]
  40c784:	add    ah,dh
  40c786:	add    edi,ebx
  40c788:	mov    ax,di
  40c78b:	or     dh,bh
  40c78d:	mov    ecx,DWORD PTR [ecx+0x7542f4fc]
  40c793:	add    BYTE PTR [ebx-0x7404139a],cl
  40c799:	mov    esi,DWORD PTR [edi+0xc]
  40c79c:	mov    DWORD PTR [ebx],eax
  40c79e:	or     BYTE PTR [esi+0x75],ah
  40c7a1:	fisttp WORD PTR [ebx-0x747417da]
  40c7a7:	clc    
  40c7a8:	ja     0x40c7ec
  40c7aa:	mov    DWORD PTR [eax],eax
  40c7ac:	or     al,0x66
  40c7ae:	sahf   
  40c7af:	sti    
  40c7b0:	add    BYTE PTR [ebx+0x3010ce9],cl
  40c7b6:	add    BYTE PTR [esi+0x7d],ah
  40c7b9:	fbld   TBYTE PTR [esi+0xe]
  40c7bc:	pop    ebp
  40c7bd:	mov    bh,0x81
  40c7bf:	or     al,0x57
  40c7c1:	mov    bh,0x0
  40c7c3:	hlt    
  40c7c4:	add    edi,ebx
  40c7c6:	mov    di,bx
  40c7c9:	or     al,0x84
  40c7cb:	mov    eax,DWORD PTR [ecx]
  40c7cd:	or     al,0x0
  40c7cf:	mov    edi,DWORD PTR [ebp+0x8]
  40c7d2:	mov    edi,DWORD PTR [ebx]
  40c7d4:	adc    BYTE PTR [edi],cl
  40c7d6:	stc    
  40c7d7:	mov    ebx,0x8bdf00fa
  40c7dc:	mov    ebx,eax
  40c7de:	or     al,0x5d
  40c7e0:	mov    esi,DWORD PTR [ebx]
  40c7e2:	or     BYTE PTR [ebp+0x72001f84],cl
  40c7e8:	add    BYTE PTR [eax],al
  40c7ea:	cmp    edi,DWORD PTR [ebp+0xf]
  40c7ed:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  40c7f3:	xor    edi,DWORD PTR [ebp-0x73]
  40c7f6:	mov    ebx,0x728a1f
  40c7fb:	add    BYTE PTR [ebx],dh
  40c7fd:	jge    0x40c865
  40c7ff:	mov    ebx,DWORD PTR [ebp-0x20]
  40c802:	pop    bp
  40c804:	clc    
  40c805:	cmp    di,WORD PTR [edx+esi*2]
  40c809:	data16 data16 jge 0x40c88a
  40c80d:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  40c813:	xor    di,WORD PTR [esi+eiz*2]
  40c817:	pop    bp
  40c819:	jge    0x40c881
  40c81b:	mov    edi,eax
  40c81d:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  40c824:	jge    0x40c82e
  40c826:	ltr    WORD PTR [ebp-0x2]
  40c82a:	add    edi,DWORD PTR [ebx]
  40c82c:	hsubpd xmm4,xmm0
  40c830:	data16 (bad) 
  40c832:	jge    0x40c7bf
  40c834:	mov    ebx,0xf18ae4
  40c839:	dec    ebp
  40c83a:	xor    eax,DWORD PTR [ebx]
  40c83c:	minpd  xmm6,xmm1
  40c840:	data16 jne 0x40c83b
  40c843:	jmp    0x40c880
  40c845:	mov    esi,DWORD PTR [edx-0x10]
  40c848:	sar    WORD PTR [ebp+0x4d],1
  40c84c:	mov    ebx,0xa8a8d
  40c851:	jb     0x40c886
  40c853:	add    BYTE PTR [esi+0x4d],ah
  40c856:	pop    ebp
  40c857:	mov    esp,DWORD PTR [esi-0x20]
  40c85a:	clc    
  40c85b:	jne    0x40c898
  40c85d:	data16 ja 0x40c894
  40c860:	jnp    0xf1502ee3
  40c866:	pop    ebp
  40c867:	inc    edx
  40c868:	add    eax,DWORD PTR [eax]
  40c86a:	data16 data16 jge 0x40c860
  40c86e:	mov    dx,0x7d
  40c872:	data16 pop bp
  40c875:	icebp  
  40c876:	sbb    di,bx
  40c879:	jne    0x40c800
  40c87b:	mov    eax,DWORD PTR [eax]
  40c87d:	call   0x77be5382
  40c882:	mov    ebp,DWORD PTR [ebx]
  40c884:	in     al,dx
  40c885:	data16 stc 
  40c887:	repnz mov esp,0x32759e3b
  40c88d:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  40c893:	inc    eax
  40c894:	mov    eax,DWORD PTR [edi]
  40c896:	call   0xbc74c1e0
  40c89b:	add    ebx,DWORD PTR [esi-0x76a4cda1]
  40c8a1:	ret    0xe8
  40c8a4:	jge    0x40c831
  40c8a6:	mov    edx,DWORD PTR [ecx-0x14]
  40c8a9:	mov    ecx,DWORD PTR [ebx-0x76f784aa]
  40c8af:	add    BYTE PTR [eax],cl
  40c8b1:	data16 jge 0x40c882
  40c8b4:	mov    eax,DWORD PTR [edx-0x18]
  40c8b7:	add    BYTE PTR [ebx-0x7631849a],cl
  40c8bd:	mov    edx,0xc77d000c
  40c8c2:	data16 cld 
  40c8c4:	pop    ebp
  40c8c5:	test   DWORD PTR [ecx+0x3557f8],eax
  40c8cb:	pushf  
  40c8cc:	add    esp,DWORD PTR [esi+0x66]
  40c8cf:	into   
  40c8d0:	fistp  WORD PTR [ebp-0x7b]
  40c8d3:	push   edi
  40c8d4:	(bad)  
  40c8d5:	mov    bh,0xff
  40c8d7:	mov    edi,0xff338d75
  40c8dc:	mov    edx,DWORD PTR [edi-0x10]
  40c8df:	push   ecx
  40c8e0:	repnz mov ebx,0x894faf
  40c8e6:	lock cmp edx,DWORD PTR [edx]
  40c8e9:	jne    0x40c940
  40c8eb:	mov    DWORD PTR [ebx],esi
  40c8ed:	cld    
  40c8ee:	mov    edx,DWORD PTR [edi-0x1c]
  40c8f1:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339e]
  40c8f8:	mov    DWORD PTR [esp+eiz*8-0x749baac4],ecx
  40c8ff:	mov    ebx,0x8b3bec
  40c904:	push   esi
  40c905:	sub    ecx,eax
  40c907:	mov    ebx,0xba8a2b
  40c90c:	mov    dh,BYTE PTR [ebx]
  40c90e:	add    BYTE PTR [ebx+0xb94e33],bh
  40c914:	dec    esi
  40c915:	cmp    eax,DWORD PTR [eax]
  40c917:	jne    0x40c954
  40c919:	mov    esi,DWORD PTR [ebp-0x4]
  40c91c:	mov    ebx,DWORD PTR [ebx-0x24]
  40c91f:	stc    
  40c920:	jge    0x40c8a7
  40c922:	data16 clc 
  40c924:	xor    al,0x9
  40c926:	data16 into 
  40c928:	lock test BYTE PTR [ebx],dh
  40c92b:	ds data16 fs icebp 
  40c92f:	pop    esi
  40c930:	add    al,0xc3
  40c932:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40c939:	inc    ebp
  40c93a:	mov    esi,DWORD PTR [esi]
  40c93c:	in     al,0x9c
  40c93e:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40c945:	pop    ebx
  40c946:	or     al,0xff
  40c948:	push   ebp
  40c949:	mov    ebp,esp
  40c94b:	mov    ah,BYTE PTR [esi+0x4]
  40c94e:	or     BYTE PTR [esi+edi*4],dh
  40c951:	cmp    al,0x3b
  40c953:	je     0x40c955
  40c955:	mov    ebp,DWORD PTR [ebx]
  40c957:	mov    edx,0xff8a8dbe
  40c95c:	add    BYTE PTR [edi+0x33],dl
  40c95f:	push   ecx
  40c960:	mov    esi,0x8b4e53
  40c965:	mov    ebx,0x363b45
  40c96a:	pushf  
  40c96b:	sub    edi,DWORD PTR [edx-0x7757a45]
  40c971:	add    BYTE PTR [ebx],bh
  40c973:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40c977:	dec    edi
  40c978:	str    ecx
  40c97b:	cmp    esp,DWORD PTR [edx+0x75]
  40c97e:	int    0x89
  40c980:	mov    esi,0x77208fc
  40c985:	xor    edx,DWORD PTR [esi]
  40c987:	mov    eax,DWORD PTR [eax]
  40c989:	xor    esp,DWORD PTR [esi-0x73]
  40c98c:	retf   
  40c98d:	push   edi
  40c98e:	add    esp,ebp
  40c990:	push   ebp
  40c991:	add    BYTE PTR [ebp-0x293cfee8],cl
  40c997:	cmp    dl,0x49
  40c99a:	(bad)  
  40c99b:	sti    
  40c99c:	mov    esi,DWORD PTR [ebp+0x78]
  40c99f:	mov    esp,ebp
  40c9a1:	cld    
  40c9a2:	add    BYTE PTR ds:0xf8008508,bh
  40c9a8:	data16 or al,0xcb
  40c9ab:	rol    DWORD PTR [edx-0x37],0x0
  40c9af:	mov    DWORD PTR [esi+0x47],esp
  40c9b2:	retf   
  40c9b3:	in     eax,0xba
  40c9b5:	add    BYTE PTR [eax],al
  40c9b7:	(bad)  
  40c9b8:	pop    si
  40c9ba:	retf   
  40c9bb:	ret    
  40c9bc:	enter  0x4d8b,0x51
  40c9c0:	pop    edi
  40c9c1:	mov    DWORD PTR [ecx-0x637ac904],0x333574f8
  40c9cb:	pushf  
  40c9cc:	(bad)  
  40c9cd:	call   0x26c81a
  40c9d2:	add    BYTE PTR [ebx+0x3b55bac9],cl
  40c9d8:	in     al,dx
  40c9d9:	add    BYTE PTR [esi+0x2b],dl
  40c9dc:	(bad)  
  40c9dd:	mov    edx,0x858afc
  40c9e2:	clc    
  40c9e3:	xor    esi,DWORD PTR ds:0xe84e9cba
  40c9e9:	add    bh,bh
  40c9eb:	cmp    edi,edi
  40c9ed:	je     0x40c9e7
  40c9ef:	push   ebx
  40c9f0:	pop    es
  40c9f1:	sysexit 
  40c9f3:	leave  
  40c9f4:	dec    ecx
  40c9f5:	bound  edi,QWORD PTR [ebp+ecx*8+0x61]
  40c9f9:	mov    edi,0x76208c7
  40c9fe:	int    0x64
  40ca00:	mov    ecx,0x7660800
  40ca05:	retf   
  40ca06:	add    ax,WORD PTR [eax]
  40ca09:	jne    0x40ca13
  40ca0b:	lea    eax,[eax]
  40ca0d:	add    DWORD PTR [esi-0x9],esp
  40ca10:	ret    
  40ca11:	(bad)  
  40ca12:	inc    edx
  40ca13:	xlat   BYTE PTR ds:[ebx]
  40ca14:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  40ca1a:	add    BYTE PTR fs:[eax],al
  40ca1d:	or     BYTE PTR [esi+0x0],ah
  40ca20:	ret    
  40ca21:	add    cx,bx
  40ca24:	jne    0x40ca68
  40ca26:	lea    eax,[eax]
  40ca28:	add    DWORD PTR [esi-0xf],esp
  40ca2b:	retf   
  40ca2c:	(bad)  
  40ca2d:	mov    edx,0x668400d1
  40ca32:	cmp    al,0xcb
  40ca34:	fs enter 0x7d8a,0x80
  40ca39:	ss xor eax,0x805ff39c
  40ca3f:	je     0x40cabd
  40ca41:	xor    eax,ebx
  40ca43:	inc    eax
  40ca44:	inc    ebp
  40ca45:	add    bl,BYTE PTR [ebx-0x40]
  40ca48:	ss leave 
  40ca4a:	pushf  
  40ca4b:	push   ebp
  40ca4c:	je     0x40ca3a
  40ca4e:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  40ca54:	mov    WORD PTR [esi+0x3c],ss
  40ca57:	and    DWORD PTR [esp+eax*8-0x75],0xc9425fff
  40ca5f:	add    BYTE PTR [ebp+0x57],dl
  40ca62:	in     al,dx
  40ca63:	(bad)  
  40ca64:	push   esi
  40ca65:	mov    edx,0x89360045
  40ca6a:	pushf  
  40ca6b:	cld    
  40ca6c:	mov    esi,0xf874853b
  40ca71:	mov    edx,edx
  40ca73:	or     bh,bh
  40ca75:	ret    0x4566
  40ca78:	or     bl,ch
  40ca7a:	or     BYTE PTR [ebx-0x7699f800],cl
  40ca80:	retf   0x4283
  40ca83:	add    al,BYTE PTR [eax]
  40ca85:	mov    bh,0x66
  40ca87:	adc    dl,cl
  40ca89:	iret   
  40ca8a:	mov    edx,0x66c400c7
  40ca8f:	dec    edx
  40ca91:	(bad)  
  40ca92:	push   edi
  40ca93:	mov    edx,0x66b70057
  40ca98:	mov    edx,0xffdf8df8
  40ca9d:	rcl    BYTE PTR [edi+0x66],0x51
  40caa1:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40caa7:	ret    0x3b
  40caaa:	jne    0x40ca37
  40caac:	mov    DWORD PTR [ebx+0x457218fc],eax
  40cab2:	xor    esi,DWORD PTR ds:0xc7339c8b
  40cab8:	callw  0x5048
  40cabc:	cmp    al,0xf8
  40cabe:	fs inc ebp
  40cac0:	mov    ebx,0x83b35
  40cac5:	pop    es
  40cac6:	sub    ebx,DWORD PTR [esi-0x7675cd45]
  40cacc:	add    al,bh
  40cace:	xor    eax,DWORD PTR [ebp-0x45]
  40cad1:	cmp    eax,0xc7009c4e
  40cad6:	cmp    esi,esp
  40cad8:	jne    0x40ca5f
  40cada:	cmp    eax,0x338545fc
  40cae0:	clc    
  40cae1:	pushf  
  40cae2:	pop    ebx
  40cae3:	mov    eax,DWORD PTR ds:0xeb57c0ec
  40cae9:	push   ecx
  40caea:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  40caf0:	mov    ebx,DWORD PTR [esi-0x74bacdaf]
  40caf6:	psubsb mm1,QWORD PTR [eax]
  40caf9:	icebp  
  40cafa:	lea    ecx,[eax]
  40cafc:	clc    
  40cafd:	pop    es
  40cafe:	inc    ecx
  40cb00:	mov    esi,0x8a72
  40cb05:	push   ebp
  40cb06:	xor    ecx,DWORD PTR [edi]
  40cb08:	mov    edi,0xc24ed1
  40cb0d:	adc    DWORD PTR [ebp+0x0],0x66
  40cb11:	add    bh,al
  40cb13:	inc    ebp
  40cb14:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  40cb1a:	mov    DWORD PTR [ebp+0x8],ecx
  40cb1d:	add    DWORD PTR [ebx],0x66514557
  40cb23:	or     DWORD PTR [edx],0xf32c29e
  40cb29:	cmp    edi,DWORD PTR [esi+esi*2]
  40cb2c:	mov    ecx,DWORD PTR [ebx+0x45f80881]
  40cb32:	dec    DWORD PTR [ebx+0x4db80c33]
  40cb38:	dec    esi
  40cb39:	mov    eax,DWORD PTR [eax]
  40cb3b:	mov    DWORD PTR [ebx],edi
  40cb3d:	mov    esi,DWORD PTR [ebp+0x4]
  40cb40:	xor    ecx,DWORD PTR [eax+0x5f]
  40cb43:	mov    ecx,DWORD PTR [ecx-0x3a87410]
  40cb49:	push   ecx
  40cb4a:	leave  
  40cb4b:	mov    eax,DWORD PTR [eax+edi*8]
  40cb4e:	push   ebp
  40cb4f:	test   ah,ch
  40cb51:	sahf   
  40cb52:	in     al,dx
  40cb53:	xor    al,bh
  40cb55:	mov    esp,ebp
  40cb57:	clc    
  40cb58:	test   DWORD PTR [ebp-0x74baff08],ebx
  40cb5e:	xor    al,0x10
  40cb60:	pushf  
  40cb61:	dec    ebp
  40cb62:	mov    ebp,DWORD PTR [ebx]
  40cb64:	in     al,dx
  40cb65:	mov    edx,DWORD PTR [edi-0xc]
  40cb68:	push   ecx
  40cb69:	icebp  
  40cb6a:	add    eax,0x77208
  40cb6f:	rol    DWORD PTR [ebp+0x72],0xc7
  40cb73:	add    al,dh
  40cb75:	rol    DWORD PTR [ebp+0x4545f827],0x3
  40cb7c:	xor    eax,edi
  40cb7e:	pushf  
  40cb7f:	dec    ebp
  40cb80:	mov    DWORD PTR [ebx],0x985f8fc
  40cb86:	clc    
  40cb87:	or     BYTE PTR [ebp+0x45],al
  40cb8a:	xor    eax,0x7080835
  40cb8f:	pop    es
  40cb90:	dec    ebp
  40cb91:	dec    ebp
  40cb92:	lea    ecx,[ebp+0x72720101]
  40cb98:	add    BYTE PTR [eax],al
  40cb9a:	dec    ebp
  40cb9b:	inc    ebp
  40cb9c:	sub    ebx,0x10518b57
  40cba2:	or     DWORD PTR [ebp-0x62],0x8b8b322b
  40cba9:	cld    
  40cbaa:	adc    cl,dh
  40cbac:	scas   eax,DWORD PTR es:[edi]
  40cbad:	or     BYTE PTR [ebx],bh
  40cbaf:	pop    es
  40cbb0:	xadd   ebp,ebp
  40cbb3:	jb     0x40cbb5
  40cbb5:	add    BYTE PTR [ebx+0x4d2910c1],cl
  40cbbb:	inc    ebp
  40cbbc:	sub    eax,DWORD PTR [ebx]
  40cbbe:	mov    edi,eax
  40cbc0:	lock dec ebp
  40cbc2:	icebp  
  40cbc3:	add    ecx,DWORD PTR [eax]
  40cbc5:	clc    
  40cbc6:	pop    es
  40cbc7:	mov    eax,ecx
  40cbc9:	data16 jb 0x40cbd4
  40cbcc:	add    BYTE PTR [ebp-0x3f],al
  40cbcf:	xor    eax,0x7450830
  40cbd4:	add    ecx,DWORD PTR [ebp-0x8]
  40cbd7:	lea    ecx,[ebp+0x1]
  40cbda:	add    esi,DWORD PTR [edx-0x8]
  40cbdd:	add    BYTE PTR [ecx],dl
  40cbdf:	inc    ebp
  40cbe0:	adc    bl,ch
  40cbe2:	dec    ecx
  40cbe3:	mov    ecx,DWORD PTR [ecx+0x45450408]
  40cbe9:	mov    esi,DWORD PTR ds:0x74d080c
  40cbef:	mov    cl,BYTE PTR [ebp-0x78]
  40cbf2:	lea    ecx,[ebx-0x768d07ff]
  40cbf8:	add    al,bh
  40cbfa:	inc    ebp
  40cbfb:	in     al,0xe9
  40cbfd:	inc    DWORD PTR [eax]
  40cbff:	leave  
  40cc00:	add    BYTE PTR [eax*2-0x71374ab],cl
  40cc07:	push   ecx
  40cc08:	rol    DWORD PTR [ebp+0x4d],0x35
  40cc0c:	sbb    DWORD PTR [edi+edx*2-0x7e07ae39],0x32f89e85
  40cc17:	sar    BYTE PTR [ebx],0x74
  40cc1a:	jbe    0x40cba7
  40cc1c:	mov    edi,esp
  40cc1e:	or     BYTE PTR [edi+0x45],dl
  40cc21:	push   ecx
  40cc22:	mov    eax,DWORD PTR ds:0x4d720c
  40cc28:	mov    eax,DWORD PTR [ebp-0x77]
  40cc2b:	jne    0x40cbb8
  40cc2d:	jmp    0x40cc23
  40cc2f:	mov    edx,DWORD PTR [edi-0x8]
  40cc32:	push   ecx
  40cc33:	push   edi
  40cc34:	mov    edx,DWORD PTR [ecx-0x8]
  40cc37:	add    eax,0x9e7284
  40cc3c:	xor    cl,BYTE PTR [ebp-0x77]
  40cc3f:	sub    edi,eax
  40cc41:	mov    DWORD PTR [ebx+0xc],ebx
  40cc44:	inc    ebp
  40cc45:	inc    ebp
  40cc46:	mov    esi,DWORD PTR ds:0x7c108f8
  40cc4c:	dec    ebp
  40cc4d:	sahf   
  40cc4e:	xor    DWORD PTR [edx],0x8518b57
  40cc54:	or     DWORD PTR [ebp-0x62],0x3beb3288
  40cc5b:	leave  
  40cc5c:	jbe    0x40cc66
  40cc5e:	mov    edx,DWORD PTR [ebp+0x8]
  40cc61:	in     al,dx
  40cc62:	inc    ebp
  40cc63:	in     al,dx
  40cc64:	mov    eax,DWORD PTR [edx]
  40cc66:	or     al,0x0
  40cc68:	dec    ebp
  40cc69:	inc    ebp
  40cc6a:	xor    ax,0x9c09
  40cc6e:	mov    edi,eax
  40cc70:	mov    esi,eax
  40cc72:	cld    
  40cc73:	test   DWORD PTR [edi-0x8],edx
  40cc76:	push   ecx
  40cc77:	inc    ebp
  40cc78:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  40cc7e:	sahf   
  40cc7f:	pop    es
  40cc80:	xor    al,al
  40cc82:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40cc88:	inc    ebp
  40cc89:	or     al,0x3
  40cc8b:	sar    al,0xf2
  40cc8e:	dec    ebp
  40cc8f:	lea    eax,[ebx]
  40cc91:	in     al,0xf8
  40cc93:	dec    DWORD PTR [ecx]
  40cc95:	mov    DWORD PTR [eax],ecx
  40cc97:	cld    
  40cc98:	inc    ebp
  40cc99:	inc    ebp
  40cc9a:	inc    eax
  40cc9b:	mov    DWORD PTR [ebp-0x14],eax
  40cc9e:	jmp    0xff97cae8
  40cca3:	mov    edi,0x70008c2
  40cca8:	mov    eax,edi
  40ccaa:	push   ecx
  40ccab:	sahf   
  40ccac:	(bad)  
  40ccad:	xor    bh,ah
  40ccaf:	add    eax,DWORD PTR [ebp+0x4510f889]
  40ccb5:	inc    ebp
  40ccb6:	xor    al,0xe8
  40ccb8:	pushf  
  40ccb9:	std    
  40ccba:	xor    edi,edi
  40ccbc:	inc    eax
  40ccbd:	fadd   DWORD PTR [eax+0x45]
  40ccc0:	inc    ebp
  40ccc1:	mov    esi,DWORD PTR ds:0x7510814
  40ccc7:	inc    ebp
  40ccc8:	sahf   
  40ccc9:	xor    DWORD PTR [edx],0x8
  40cccc:	cmp    DWORD PTR [ebp+0xc],eax
  40cccf:	mov    eax,DWORD PTR [edx]
  40ccd1:	clc    
  40ccd2:	sub    al,0x40
  40ccd4:	inc    ebp
  40ccd5:	call   0xff49c80f
  40ccda:	pop    es
  40ccdb:	inc    ebp
  40ccdc:	sahf   
  40ccdd:	push   DWORD PTR [edx]
  40ccdf:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  40cce5:	std    
  40cce6:	dec    ebp
  40cce7:	dec    DWORD PTR [ebx+0x5708fcdb]
  40cced:	inc    ebp
  40ccee:	push   ecx
  40ccef:	call   0xffb3c8f9
  40ccf4:	add    BYTE PTR [ebp+0x4d],al
  40ccf7:	xor    eax,DWORD PTR [ebx]
  40ccf9:	add    ecx,DWORD PTR [eax+edx*2]
  40ccfc:	add    DWORD PTR [ebp-0x45],esi
  40ccff:	inc    edx
  40cd01:	cld    
  40cd02:	add    BYTE PTR [ecx],dh
  40cd04:	mov    edi,edi
  40cd06:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  40cd10:	test   DWORD PTR [esi],ebx
  40cd12:	clc    
  40cd13:	inc    ebp
  40cd14:	inc    ebp
  40cd15:	mov    esi,DWORD PTR [ecx+ecx*4]
  40cd18:	pushf  
  40cd19:	or     al,0x8b
  40cd1b:	inc    ebp
  40cd1c:	adc    BYTE PTR [ebx-0x3f7af3bb],cl
  40cd22:	jne    0x40cd5f
  40cd24:	xor    esi,DWORD PTR [ebp-0x17]
  40cd27:	xor    eax,DWORD PTR [eax]
  40cd29:	pop    edi
  40cd2a:	add    BYTE PTR [ebx+0x45],bl
  40cd2d:	ret    0x85
  40cd30:	je     0x40cd77
  40cd32:	push   ebx
  40cd33:	mov    eax,DWORD PTR [ebp-0xe02e8]
  40cd39:	mov    eax,DWORD PTR [ebp-0x75]
  40cd3c:	mov    ecx,DWORD PTR [esp+ecx*1]
  40cd3f:	in     al,dx
  40cd40:	inc    ebp
  40cd41:	or     DWORD PTR [ebx+0x5753f408],0x57
  40cd48:	push   edi
  40cd49:	test   BYTE PTR [ecx+0x0],dl
  40cd4c:	xor    eax,DWORD PTR [eax]
  40cd4e:	mov    esi,0x8472c0
  40cd53:	add    dh,al
  40cd55:	add    BYTE PTR [ebp-0x49],al
  40cd58:	mov    esp,DWORD PTR [eax]
  40cd5a:	or     al,0xc8
  40cd5c:	add    BYTE PTR [ebp-0x1],al
  40cd5f:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  40cd65:	inc    edx
  40cd66:	inc    eax
  40cd67:	add    bl,ch
  40cd69:	xor    ecx,DWORD PTR [ebx-0x17f7f37f]
  40cd6f:	add    BYTE PTR [ecx+0x45f4f889],cl
  40cd75:	mov    eax,DWORD PTR gs:[eax]
  40cd78:	sub    cl,cl
  40cd7a:	retf   0xff7e
  40cd7d:	mov    WORD PTR [ebp+0x10],cx
  40cd81:	jae    0x40cdf8
  40cd83:	lea    ecx,[ebx+0x63fffcf8]
  40cd89:	xor    edi,edi
  40cd8b:	jne    0x8bcc42de
  40cd91:	or     al,0xfc
  40cd93:	or     al,0x3e
  40cd95:	push   WORD PTR [ecx-0x75]
  40cd99:	jne    0x40cd8b
  40cd9b:	cmpxchg8b QWORD PTR [ecx]
  40cd9e:	(bad)  
  40cd9f:	mov    edx,0x66ec00ff
  40cda4:	jne    0x40cd75
  40cda6:	call   0xff9ec6b7
  40cdab:	cmovge edi,edx
  40cdae:	xor    edi,DWORD PTR [ebx+eax*1]
  40cdb1:	add    BYTE PTR [ebx],bh
  40cdb3:	sub    eax,0xf8b5d74
  40cdb8:	or     al,0xfa
  40cdba:	add    BYTE PTR [edi],cl
  40cdbc:	inc    ebp
  40cdbd:	cmp    al,0x8b
  40cdbf:	mov    ebx,0x4d3b08
  40cdc4:	sub    DWORD PTR [ebx],0x14
  40cdc7:	enterw 0x9ff8,0x3b
  40cdcc:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  40cdd1:	pop    edi
  40cdd2:	or     al,0x45
  40cdd4:	mov    esp,DWORD PTR [esi-0x8]
  40cdd7:	dec    ebp
  40cdd8:	inc    eax
  40cdd9:	data16 jmp 0x40ce29
  40cddc:	push   ebp
  40cddd:	jb     0x40cdcb
  40cddf:	jmp    0x40ce26
  40cde1:	inc    DWORD PTR [ebx+0x7d7f10f8]
  40cde7:	mov    eax,DWORD PTR [eax]
  40cde9:	or     BYTE PTR [esi-0x49],dl
  40cdec:	jo     0x7440ffa1
  40cdf2:	test   DWORD PTR [edx+0xf],eax
  40cdf5:	jmp    DWORD PTR [edi+0xf77000f]
  40cdfb:	inc    DWORD PTR [eax+0x33]
  40cdfe:	mov    ebx,DWORD PTR [edi-0x77]
  40ce01:	pop    ebx
  40ce02:	lock ret 0xd2
  40ce06:	push   ebp
  40ce07:	dec    ebp
  40ce08:	mov    eax,0xf88a81
  40ce0d:	dec    eax
  40ce0f:	ror    ax,0x3b
  40ce13:	rol    BYTE PTR [eax],0x3b
  40ce16:	dec    ebp
  40ce17:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  40ce20:	pop    edi
  40ce21:	in     al,dx
  40ce22:	cmp    edx,DWORD PTR [edi-0xc]
  40ce25:	clc    
  40ce26:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  40ce2d:	cmp    al,dh
  40ce2f:	jne    0x40cde8
  40ce31:	xor    edi,esp
  40ce33:	jmp    0xcdcf95
  40ce38:	mov    ebp,DWORD PTR [ecx+edi*1]
  40ce3b:	jne    0x40ce3f
  40ce3d:	call   0xfff8cb79
  40ce42:	mov    edi,0x14e97
  40ce47:	add    BYTE PTR [ebx],bh
  40ce49:	inc    edi
  40ce4a:	jne    0x40cdd5
  40ce4c:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  40ce53:	mov    eax,0x8974471f
  40ce58:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  40ce5f:	add    BYTE PTR [esi+0x88d1f45],bh
  40ce65:	stos   BYTE PTR es:[edi],al
  40ce66:	add    BYTE PTR [eax],al
  40ce68:	mov    bx,di
  40ce6b:	les    esi,FWORD PTR [ebx]
  40ce6d:	xchg   DWORD PTR [esi+0x0],esp
  40ce70:	iret   
  40ce71:	add    BYTE PTR [edx],dl
  40ce73:	inc    ebp
  40ce74:	jl     0x40ce03
  40ce76:	(bad)  
  40ce77:	out    dx,al
  40ce78:	cld    
  40ce79:	add    BYTE PTR [ebx+0x39ccf489],cl
  40ce7f:	xchg   esp,edi
  40ce81:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  40ce88:	push   0x32
  40ce8a:	pop    edi
  40ce8b:	add    BYTE PTR [ebp-0x77],dh
  40ce8e:	paddq  mm1,mm2
  40ce91:	xchg   DWORD PTR [ecx+eax*1],edi
  40ce94:	add    BYTE PTR [eax],al
  40ce96:	adc    ecx,DWORD PTR [ecx+0x457cb083]
  40ce9c:	test   eax,ebp
  40ce9e:	inc    DWORD PTR [eax]
  40cea0:	inc    DWORD PTR [eax]
  40cea2:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  40cea9:	dec    DWORD PTR [ebx-0x3e020718]
  40ceaf:	inc    esp
  40ceb1:	inc    ebp
  40ceb2:	inc    DWORD PTR [ebp-0x52ccf0cd]
  40ceb8:	data16 add BYTE PTR [ebp-0x75],cl
  40cebc:	(bad)  
  40cebe:	rcl    BYTE PTR [esi-0x1e],0x74
  40cec2:	mov    edi,DWORD PTR [eax-0x7d]
  40cec5:	lock push eax
  40cec7:	jle    0x40ce54
  40cec9:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  40cecf:	mov    eax,DWORD PTR [ebx+0x7f80018]
  40ced5:	jge    0x40ce97
  40ced7:	mov    esi,DWORD PTR [eax]
  40ced9:	adc    al,0x0
  40cedb:	enter  0xd06a,0xff
  40cedf:	dec    ebp
  40cee0:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  40cee6:	mov    edi,DWORD PTR [ebx]
  40cee8:	lods   al,BYTE PTR ds:[esi]
  40cee9:	ja     0x40ceeb
  40ceeb:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  40cef1:	pop    ebp
  40cef2:	lea    edi,[ecx]
  40cef4:	inc    esp
  40cef5:	clc    
  40cef6:	inc    ebp
  40cef7:	outs   dx,BYTE PTR ds:[esi]
  40cef8:	lea    eax,[ebx]
  40cefa:	push   bp
  40cefc:	inc    ebp
  40cefd:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  40cf03:	pop    edi
  40cf04:	mov    DWORD PTR [esi-0x40],ebx
  40cf07:	jae    0x40ce90
  40cf09:	cmp    eax,DWORD PTR [eax]
  40cf0b:	adc    al,0x0
  40cf0d:	pop    eax
  40cf0e:	inc    ebp
  40cf0f:	sbb    al,0x8d
  40cf11:	mov    ecx,esp
  40cf13:	or     BYTE PTR [eax],al
  40cf15:	cmp    al,0x89
  40cf17:	mov    eax,ecx
  40cf19:	cld    
  40cf1a:	xchg   DWORD PTR [ebp+0x0],edx
  40cf1d:	add    eax,DWORD PTR [eax]
  40cf1f:	add    eax,DWORD PTR [ebp+0x2b]
  40cf22:	lea    ecx,[eax]
  40cf24:	adc    BYTE PTR [ebp+0x0],al
  40cf27:	or     ecx,DWORD PTR [ecx-0x78763000]
  40cf2d:	fadd   QWORD PTR [ecx]
  40cf2f:	push   ebp
  40cf30:	add    BYTE PTR [ebx+0x1b8d0045],al
  40cf36:	push   esp
  40cf37:	inc    ebp
  40cf38:	add    bh,bh
  40cf3a:	push   edi
  40cf3b:	adc    BYTE PTR [ebp-0x18],bh
  40cf3e:	mov    ebp,edi
  40cf40:	fdivr  st,st(7)
  40cf42:	cli    
  40cf43:	dec    ebp
  40cf44:	add    BYTE PTR [ebp-0x74788bb0],al
  40cf4a:	add    esp,edi
  40cf4c:	add    BYTE PTR [eax],bh
  40cf4e:	xor    BYTE PTR [ebp-0x51],al
  40cf51:	cmp    edi,0xfffffffc
  40cf54:	mov    edi,edi
  40cf56:	lock in al,dx
  40cf58:	rcl    ah,0x84
  40cf5b:	pop    ebp
  40cf5c:	add    BYTE PTR [ebx+0x0],al
  40cf5f:	pop    ebp
  40cf60:	dec    eax
  40cf61:	cmp    edx,DWORD PTR [ebx-0x8]
  40cf64:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  40cf6b:	add    al,0x24
  40cf6d:	push   ebp
  40cf6e:	dec    esi
  40cf6f:	in     al,dx
  40cf70:	mov    eax,DWORD PTR [ebp+0x20]
  40cf73:	push   esi
  40cf74:	pop    esi
  40cf75:	mov    al,0x3
  40cf77:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  40cf7d:	add    DWORD PTR [ebx],eax
  40cf7f:	add    BYTE PTR [ebx],al
  40cf81:	inc    ebp
  40cf82:	mov    eax,ebp
  40cf84:	hlt    
  40cf85:	(bad)  
  40cf86:	push   ebp
  40cf87:	dec    DWORD PTR [ecx-0x4fe07f2]
  40cf8d:	push   es
  40cf8e:	add    ecx,ecx
  40cf90:	pop    ebp
  40cf91:	or     BYTE PTR [ebx],dh
  40cf93:	jns    0x5e02b85a
  40cf99:	ret    0x76
  40cf9c:	jmp    0x40cf2d
  40cf9e:	mov    eax,DWORD PTR [ecx]
  40cfa0:	in     al,0x0
  40cfa2:	jge    0x40cf8f
  40cfa4:	sysexit 
  40cfa6:	cmp    al,0x8a
  40cfa8:	cmp    eax,DWORD PTR [eax]
  40cfaa:	sbb    BYTE PTR [eax],cl
  40cfac:	pop    ebp
  40cfad:	add    BYTE PTR [esi+0x66],bh
  40cfb0:	jae    0x40cfb3
  40cfb2:	mov    eax,ecx
  40cfb4:	call   0xb9b7:0x8b025583
  40cfbb:	mov    ebx,0x8d4e55
  40cfc0:	mov    al,0x3b
  40cfc2:	fdiv   DWORD PTR [ebp-0x8]
  40cfc5:	xor    edx,DWORD PTR [ebp+0x66]
  40cfc8:	mov    DWORD PTR [ecx],0x10087ec
  40cfce:	add    BYTE PTR [eax],al
  40cfd0:	push   ebp
  40cfd1:	ret    
  40cfd2:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  40cfd8:	jne    0x40cfda
  40cfda:	mov    eax,ecx
  40cfdc:	fadd   QWORD PTR [esi]
  40cfde:	xor    al,0xc7
  40cfe0:	push   ebx
  40cfe1:	or     dh,dh
  40cfe3:	icebp  
  40cfe4:	inc    DWORD PTR [eax+0x8f4358b]
  40cfea:	rol    BYTE PTR [edx+0x5],0xa
  40cfee:	inc    ebp
  40cfef:	stc    
  40cff0:	mov    DWORD PTR [ebp-0x75],esi
  40cff3:	(bad)  
  40cff4:	lock add BYTE PTR [ebp-0x7a],al
  40cff8:	add    al,0x1
  40cffa:	dec    ebp
  40cffb:	add    BYTE PTR [ebp-0x39],dh
  40cffe:	mov    eax,ebx
  40d000:	call   0xe8c45990
  40d005:	sbb    al,0x5d
  40d007:	mov    edi,0xf85e8572
  40d00c:	pop    edi
  40d00d:	jge    0x40cfd1
  40d00f:	lea    eax,[eax]
  40d011:	dec    DWORD PTR [ebx+0x88b8b45]
  40d017:	or     bh,bh
  40d019:	leave  
  40d01a:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  40d021:	dec    ebp
  40d022:	add    BYTE PTR [ebp-0xff7f075],al
  40d028:	xchg   ebp,eax
  40d029:	add    bh,bh
  40d02b:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  40d031:	mov    esi,DWORD PTR [ebx]
  40d033:	or     al,0x39
  40d035:	dec    ebp
  40d036:	pop    esi
  40d037:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  40d03d:	in     al,0x4
  40d03f:	pushf  
  40d040:	mov    ecx,DWORD PTR [ecx-0x76ff1378]
  40d046:	push   ebx
  40d047:	call   0xc83595f
  40d04c:	add    BYTE PTR [ebp+0x5],cl
  40d04f:	(bad)  
  40d050:	cmp    edx,DWORD PTR [eax]
  40d052:	add    BYTE PTR [ebp+0x5783f889],al
  40d058:	add    dl,BYTE PTR [ecx-0x3e]
  40d05b:	mov    ebx,0xff028d0f
  40d060:	mov    edx,0x66330045
  40d065:	mov    eax,ebx
  40d067:	sub    esp,eax
  40d069:	add    eax,eax
  40d06b:	clc    
  40d06c:	mov    DWORD PTR [ebx-0x7477ff75],edx
  40d072:	add    BYTE PTR [ebx+ebx*2],cl
  40d075:	dec    ebp
  40d076:	push   edi
  40d077:	xor    edi,eax
  40d079:	xor    eax,DWORD PTR [esi+0x8018d]
  40d07f:	in     eax,0xe7
  40d081:	add    BYTE PTR [ebx],al
  40d083:	inc    ebp
  40d084:	jmp    0x40d0b9
  40d086:	xor    bh,0x49
  40d089:	mov    ebp,ecx
  40d08b:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  40d091:	xor    eax,DWORD PTR [eax-0x10c483d5]
  40d097:	jne    0x40d099
  40d099:	mov    ecx,DWORD PTR [ebx+0x458808]
  40d09f:	mov    eax,DWORD PTR [ebx]
  40d0a1:	hlt    
  40d0a2:	pop    edi
  40d0a3:	add    BYTE PTR [ebp-0x37],dl
  40d0a6:	in     al,dx
  40d0a7:	push   es
  40d0a8:	in     al,dx
  40d0a9:	dec    ecx
  40d0aa:	push   edi
  40d0ab:	xor    eax,0x4d9c1735
  40d0b0:	mov    DWORD PTR [eax+0x624757e8],eax
  40d0b6:	mov    ecx,edx
  40d0b8:	in     al,0x4d
  40d0ba:	dec    ebp
  40d0bb:	add    BYTE PTR [ebp-0x43df0a9],0xe9
  40d0c2:	add    dl,dl
  40d0c4:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  40d0ca:	test   BYTE PTR [eax+0x8008b00],cl
  40d0d0:	dec    ebp
  40d0d1:	push   ebp
  40d0d2:	mov    DWORD PTR [eax+0x4d72f4],edi
  40d0d8:	mov    eax,ecx
  40d0da:	clc    
  40d0db:	into   
  40d0dc:	dec    ebp
  40d0dd:	retf   0x18c7
  40d0e0:	lock dec ebp
  40d0e2:	test   DWORD PTR [ebx-0x31baf308],ecx
  40d0e8:	push   ebx
  40d0e9:	(bad)  
  40d0ea:	jge    0x40d0b6
  40d0ec:	push   esi
  40d0ed:	enter  0xce45,0x89
  40d0f1:	dec    ebp
  40d0f2:	cld    
  40d0f3:	jmp    0xff74d03d
  40d0f8:	pushf  
  40d0f9:	inc    ebp
  40d0fa:	mov    esi,0x78b0833
  40d0ff:	sub    esp,DWORD PTR [edx+0x3]
  40d102:	int    0x8
  40d104:	mov    ecx,DWORD PTR [ebp+0xc]
  40d107:	mov    eax,esi
  40d109:	adc    bl,cl
  40d10b:	(bad)  
  40d10c:	enter  0x4d85,0xff
  40d110:	jmp    0x85d214
  40d115:	xor    eax,DWORD PTR [ebp+0x5e]
  40d118:	mov    ebp,ebx
  40d11a:	or     al,0x8b
  40d11c:	(bad)  
  40d11d:	call   0x51cd28f0
  40d122:	cmp    al,0x5
  40d124:	fs jb  0x40d0b2
  40d127:	add    BYTE PTR [eax],cl
  40d129:	leave  
  40d12a:	ror    BYTE PTR [ecx+esi*8],cl
  40d12d:	push   ebp
  40d12e:	inc    ebp
  40d12f:	in     al,dx
  40d130:	mov    ebp,esp
  40d132:	or     al,0xc7
  40d134:	(bad)  
  40d135:	lock into 
  40d137:	test   ecx,eax
  40d139:	clc    
  40d13a:	rol    BYTE PTR [ebp+0x34],1
  40d13d:	xor    al,0x45
  40d13f:	pushf  
  40d140:	add    ecx,DWORD PTR [ebx-0x7b27604]
  40d146:	mov    al,BYTE PTR [ebp-0x7b]
  40d149:	cmp    eax,0x56349c75
  40d14e:	sub    al,0xc7
  40d150:	jmp    0x40d13e
  40d152:	mov    ebx,DWORD PTR [eax]
  40d154:	lock jmp 0xf02a:0x8bb27df1
  40d15c:	mov    edx,DWORD PTR [edi-0x14]
  40d15f:	push   ecx
  40d160:	icebp  
  40d161:	xor    eax,DWORD PTR [edx]
  40d163:	mov    edx,0x627280
  40d168:	enter  0x4dc8,0xfa
  40d16c:	add    ecx,edx
  40d16e:	cld    
  40d16f:	scas   eax,DWORD PTR es:[edi]
  40d170:	add    ebx,ebp
  40d172:	dec    ebp
  40d173:	mov    ecx,DWORD PTR [ebx-0x618a1708]
  40d179:	xor    esi,DWORD PTR [edx]
  40d17b:	xor    ebp,DWORD PTR [ebx]
  40d17d:	add    esi,DWORD PTR [ebx]
  40d17f:	add    edi,DWORD PTR [ebx]
  40d181:	test   DWORD PTR [ebp-0x75],esi
  40d184:	mov    edi,eax
  40d186:	adc    BYTE PTR [ebp+0x55],cl
  40d189:	je     0x40d1be
  40d18b:	xor    esi,DWORD PTR [ebx]
  40d18d:	xor    ebp,DWORD PTR [ebx]
  40d18f:	add    ebp,DWORD PTR [ebx]
  40d191:	add    esi,DWORD PTR [ebx]
  40d193:	ror    DWORD PTR [ecx+0x68ec108b],cl
  40d199:	enter  0xcaff,0x8b
  40d19d:	icebp  
  40d19e:	or     al,0xa
  40d1a0:	(bad)  
  40d1a1:	lock retf 
  40d1a3:	enter  0xf2c8,0x4d
  40d1a7:	retf   0xee89
  40d1aa:	or     BYTE PTR [ebp+0x45],dh
  40d1ad:	mov    edi,DWORD PTR [ebx]
  40d1af:	cld    
  40d1b0:	bswap  eax
  40d1b2:	pop    edi
  40d1b3:	mov    esp,0x328b9eff
  40d1b8:	in     al,0x8b
  40d1ba:	(bad)  
  40d1bb:	hlt    
  40d1bc:	pop    ebx
  40d1bd:	jne    0x40d1c7
  40d1bf:	xor    eax,DWORD PTR [ebp+0x33]
  40d1c2:	xor    eax,0x73b082b
  40d1c7:	jbe    0x40d167
  40d1c9:	mov    esi,DWORD PTR [edx]
  40d1cb:	clc    
  40d1cc:	pop    edi
  40d1cd:	mov    edx,eax
  40d1cf:	mov    eax,DWORD PTR [eax]
  40d1d1:	clc    
  40d1d2:	mov    ecx,ecx
  40d1d4:	adc    DWORD PTR [ebp+0x14],0xffffffec
  40d1d8:	inc    ebp
  40d1d9:	in     al,dx
  40d1da:	xor    eax,0xc7009c04
  40d1df:	inc    ebp
  40d1e0:	cld    
  40d1e1:	xor    eax,0xc7f89c85
  40d1e6:	add    esi,esp
  40d1e8:	inc    ebp
  40d1e9:	test   edi,eax
  40d1eb:	clc    
  40d1ec:	hlt    
  40d1ed:	inc    ebp
  40d1ee:	test   DWORD PTR ds:0x53579cf8,esi
  40d1f4:	inc    ebp
  40d1f5:	inc    ebp
  40d1f6:	aad    0x36
  40d1f8:	xlat   BYTE PTR ds:[ebx]
  40d1f9:	pushf  
  40d1fa:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  40d200:	mov    eax,0x7070808
  40d205:	xor    edi,eax
  40d207:	mov    edi,0x32729e
  40d20c:	xor    eax,edi
  40d20e:	add    eax,DWORD PTR [ebp+0x3]
  40d211:	(bad)  
  40d212:	pavgb  mm7,mm1
  40d215:	test   DWORD PTR [esi-0x8],eax
  40d218:	dec    ebp
  40d219:	inc    ebp
  40d21a:	mov    edx,ebp
  40d21c:	cld    
  40d21d:	xlat   BYTE PTR ds:[ebx]
  40d21e:	enter  0xf0c7,0xf0
  40d222:	retf   0xf200
  40d225:	add    dh,cl
  40d227:	leave  
  40d228:	jne    0x40d26f
  40d22a:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  40d230:	enter  0xf0ce,0xc7
  40d234:	retf   0xf2cf
  40d237:	scas   eax,DWORD PTR es:[edi]
  40d238:	out    dx,al
  40d239:	jmp    0x40d288
  40d23b:	mov    esi,DWORD PTR [ebx]
  40d23d:	cld    
  40d23e:	add    eax,edi
  40d240:	xor    eax,esi
  40d242:	jmp    0x40d289
  40d244:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  40d24a:	add    edi,edi
  40d24c:	ror    DWORD PTR [ecx+0x45f8f889],cl
  40d252:	dec    ebp
  40d253:	mov    esi,DWORD PTR [ebx]
  40d255:	cld    
  40d256:	lea    eax,[edi+ecx*1+0xff72e0]
  40d25d:	mov    ecx,DWORD PTR [ebp-0xc]
  40d260:	mov    ecx,DWORD PTR [ebp-0x4]
  40d263:	xor    esi,eax
  40d265:	(bad)  
  40d266:	enter  0xce08,0x72
  40d26a:	stc    
  40d26b:	add    BYTE PTR [edx+0x5f8b4545],ch
  40d271:	call   0x33861f79
  40d276:	pop    esi
  40d277:	xor    eax,ebx
  40d279:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  40d27f:	enter  0xb900,0xc7
  40d283:	inc    ebp
  40d284:	in     al,dx
  40d285:	xor    eax,DWORD PTR [ebp+0x4589f803]
  40d28b:	clc    
  40d28c:	xor    al,0x45
  40d28e:	pushf  
  40d28f:	ss (bad) 
  40d291:	pushf  
  40d292:	call   0xf92c5922
  40d297:	mov    eax,edi
  40d299:	loopne 0x40d27f
  40d29b:	inc    ebp
  40d29c:	test   DWORD PTR [ebx],esi
  40d29e:	clc    
  40d29f:	add    eax,DWORD PTR [ebp-0x2d]
  40d2a2:	push   esi
  40d2a3:	mov    DWORD PTR [edi-0x4],edx
  40d2a6:	push   ecx
  40d2a7:	inc    ebp
  40d2a8:	push   edi
  40d2a9:	mov    al,dh
  40d2ab:	mov    BYTE PTR [esi+0x34d320b],bl
  40d2b1:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  40d2b7:	xor    edi,DWORD PTR ds:0xc7089c89
  40d2bd:	dec    ebp
  40d2be:	cld    
  40d2bf:	mov    ebx,DWORD PTR [eax]
  40d2c1:	or     dl,ch
  40d2c3:	into   
  40d2c4:	inc    ebp
  40d2c5:	iret   
  40d2c6:	or     dl,cl
  40d2c8:	add    BYTE PTR [ebx+ecx*4-0xb007420],cl
  40d2cf:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2d2:	xor    ecx,edx
  40d2d4:	xor    ecx,DWORD PTR [ebp+0x3]
  40d2d7:	mov    eax,DWORD PTR [ebx]
  40d2d9:	hlt    
  40d2da:	bswap  esi
  40d2dc:	rol    DWORD PTR [ecx+esi*1+0x2b32459e],0x89
  40d2e4:	xor    ecx,DWORD PTR [eax]
  40d2e6:	mov    DWORD PTR [ebp-0x8],eax
  40d2e9:	xor    ebx,DWORD PTR [ebp-0x47]
  40d2ec:	call   0x40d17e
  40d2f1:	enter  0x4d45,0x8b
  40d2f5:	mov    eax,edi
  40d2f7:	lock dec ebp
  40d2f9:	inc    ebp
  40d2fa:	mov    DWORD PTR [ebx-0x39040f73],ecx
  40d300:	inc    edi
  40d302:	inc    ebp
  40d303:	enter  0x918b,0xfc
  40d307:	inc    ebp
  40d308:	(bad)  
  40d309:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3962]
  40d310:	mov    DWORD PTR [esi-0x4],ebx
  40d313:	rol    DWORD PTR [ebp-0x37],0x8b
  40d317:	add    al,0xf4
  40d319:	push   ebp
  40d31a:	into   
  40d31b:	in     al,dx
  40d31c:	mov    BYTE PTR [ebp-0x3f],0x8b
  40d320:	dec    ebp
  40d321:	or     BYTE PTR [ebx],bh
  40d323:	xor    BYTE PTR [esi+0x1],0x8b
  40d327:	add    ah,ah
  40d329:	add    dh,al
  40d32b:	in     al,dx
  40d32c:	(bad)  
  40d32d:	push   ebx
  40d32e:	inc    ebp
  40d32f:	mov    eax,edi
  40d331:	adc    al,ch
  40d333:	push   ss
  40d334:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40d33a:	popa   
  40d33b:	iret   
  40d33c:	dec    ebp
  40d33d:	sahf   
  40d33e:	mov    esi,DWORD PTR [edx]
  40d340:	clc    
  40d341:	add    ecx,esi
  40d343:	cmp    ecx,edi
  40d345:	jne    0x40d32f
  40d347:	add    DWORD PTR [ebp-0x62],0x4208648b
  40d34e:	or     BYTE PTR [ebx+0x48ae94d],bl
  40d354:	or     eax,DWORD PTR [eax]
  40d356:	push   ebp
  40d357:	dec    ebp
  40d358:	jnp    0xd00ae027
  40d35e:	dec    ebp
  40d35f:	xlat   BYTE PTR ds:[ebx]
  40d360:	mov    ecx,ebx
  40d362:	call   0x340b293a
  40d367:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  40d36e:	(bad)  
  40d36f:	cld    
  40d370:	sti    
  40d371:	lahf   
  40d372:	(bad)  
  40d373:	mov    ebp,0x8b330055
  40d378:	mov    DWORD PTR [eax],ecx
  40d37a:	clc    
  40d37b:	iret   
  40d37c:	dec    ebp
  40d37d:	retf   
  40d37e:	xor    eax,ecx
  40d380:	lea    eax,[eax+ecx*1+0x7204]
  40d387:	dec    ebp
  40d388:	inc    ebp
  40d389:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  40d38f:	mov    esp,DWORD PTR [edx+0x14]
  40d392:	int    0x6
  40d394:	sub    eax,DWORD PTR [ebp+0x3]
  40d397:	(bad)  
  40d398:	lock or BYTE PTR [ebp-0x7b],cl
  40d39c:	mov    edi,eax
  40d39e:	in     al,dx
  40d39f:	xor    al,0x4d
  40d3a1:	pushf  
  40d3a2:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40d3a8:	jne    0x40d333
  40d3aa:	mov    ebx,DWORD PTR [eax]
  40d3ac:	in     al,0x45
  40d3ae:	dec    ebp
  40d3af:	mov    esi,DWORD PTR [ebx]
  40d3b1:	nop
  40d3b2:	add    eax,DWORD PTR [eax]
  40d3b4:	pop    edi
  40d3b5:	mov    esi,DWORD PTR [ebx]
  40d3b7:	mov    DWORD PTR [ebx-0x2c],ebx
  40d3ba:	ret    0x4d
  40d3bd:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  40d3c3:	mov    ecx,DWORD PTR [ebp+0x3]
  40d3c6:	mov    edi,DWORD PTR [eax+edx*4]
  40d3c9:	dec    ebp
  40d3ca:	add    BYTE PTR [ebx-0x387cf775],cl
  40d3d0:	jo     0x40d395
  40d3d2:	push   esi
  40d3d3:	inc    ebp
  40d3d4:	jne    0x40d361
  40d3d6:	mov    ecx,DWORD PTR [eax]
  40d3d8:	push   edi
  40d3d9:	(bad)  
  40d3da:	push   edi
  40d3db:	ret    
  40d3dc:	push   ecx
  40d3dd:	inc    ebp
  40d3de:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  40d3e4:	add    BYTE PTR [ebx+0x45d10ccb],al
  40d3ea:	jnp    0x406de01d
  40d3f0:	jg     0x40d37d
  40d3f2:	jmp    0x54:0xde85700c
  40d3f9:	inc    ebp
  40d3fa:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  40d3fe:	push   ebp
  40d3ff:	cmp    BYTE PTR [ebx],dh
  40d401:	dec    ebp
  40d402:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  40d408:	cmp    esp,DWORD PTR [ebx]
  40d40a:	jne    0x40d397
  40d40c:	or     DWORD PTR [esi+ebx*4],0xef036440
  40d413:	jmp    0x40d42a
  40d415:	mov    ebp,ecx
  40d417:	push   esp
  40d418:	add    al,0x45
  40d41a:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  40d420:	add    eax,ebx
  40d422:	cmp    eax,DWORD PTR [ebp+0xf]
  40d425:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  40d42c:	sbb    BYTE PTR [ebp+0x45],al
  40d42f:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40d435:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  40d43b:	mov    DWORD PTR [ebp+0x14],eax
  40d43e:	xor    eax,0xba339c45
  40d443:	pushf  
  40d444:	test   edi,eax
  40d446:	clc    
  40d447:	adc    al,0x55
  40d449:	test   DWORD PTR [ebx+0x454518f8],ecx
  40d44f:	xor    DWORD PTR [ebx-0x7f74e764],ecx
  40d455:	lock add DWORD PTR [ebp+0x0],ecx
  40d459:	xor    eax,DWORD PTR [eax]
  40d45b:	add    ecx,DWORD PTR [ebp+0xf]
  40d45e:	mov    eax,ecx
  40d460:	sbb    BYTE PTR [ebp-0x77],cl
  40d463:	mov    eax,DWORD PTR [ecx]
  40d465:	rol    BYTE PTR [eax],1
  40d467:	iret   
  40d468:	or     DWORD PTR [eax+ecx*2+0xc32899e],ecx
  40d46f:	cmp    eax,DWORD PTR [ebp+0xf]
  40d472:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40d479:	or     BYTE PTR [ebp-0x39],al
  40d47c:	xor    eax,ebx
  40d47e:	add    eax,DWORD PTR [ebp-0x77]
  40d481:	mov    edx,DWORD PTR [eax+ebx*1]
  40d484:	inc    ebp
  40d485:	inc    ebp
  40d486:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  40d48c:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  40d492:	mov    ebp,eax
  40d494:	cmp    cl,dh
  40d496:	dec    ebp
  40d497:	dec    DWORD PTR [eax+0x45]
  40d49a:	inc    ecx
  40d49b:	(bad)  
  40d49c:	mov    esp,eax
  40d49e:	or     al,0x85
  40d4a0:	sbb    al,bh
  40d4a2:	inc    eax
  40d4a3:	inc    ebp
  40d4a4:	mov    esi,DWORD PTR [ebx]
  40d4a6:	or     al,0x3
  40d4a8:	dec    ecx
  40d4a9:	push   eax
  40d4aa:	dec    eax
  40d4ab:	inc    ebp
  40d4ac:	rcl    BYTE PTR [eax-0x38],1
  40d4af:	push   eax
  40d4b0:	inc    ebp
  40d4b1:	dec    DWORD PTR [ebx-0x3e07c775]
  40d4b7:	rol    BYTE PTR [ebx],0x4e
  40d4ba:	inc    eax
  40d4bb:	inc    ebp
  40d4bc:	mov    DWORD PTR [ebx],esi
  40d4be:	sbb    BYTE PTR [ebx],al
  40d4c0:	inc    ebp
  40d4c1:	push   eax
  40d4c2:	xor    esi,DWORD PTR [ebp+0x3]
  40d4c5:	lea    ecx,[ecx+0x45e814b8]
  40d4cb:	cmc    
  40d4cc:	xor    edi,edi
  40d4ce:	add    eax,DWORD PTR [ebp-0x77]
  40d4d1:	mov    DWORD PTR [eax+eiz*8],edx
  40d4d4:	inc    ebp
  40d4d5:	inc    ebp
  40d4d6:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  40d4dc:	ret    
  40d4dd:	inc    ebp
  40d4de:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  40d4e4:	adc    al,0x8b
  40d4e6:	test   DWORD PTR [eax],edx
  40d4e8:	clc    
  40d4e9:	inc    ecx
  40d4ea:	inc    ebp
  40d4eb:	mov    esi,DWORD PTR [edx]
  40d4ed:	loopne 0x40d48b
  40d4ef:	enter  0x16c7,0x14
  40d4f3:	inc    ebp
  40d4f4:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  40d4fa:	mov    eax,DWORD PTR [ebx]
  40d4fc:	sbb    BYTE PTR [eax],cl
  40d4fe:	(bad)  
  40d4ff:	dec    ebp
  40d500:	ret    
  40d501:	sub    ebp,DWORD PTR [edi+0x8028be9]
  40d507:	add    BYTE PTR [ebp+0xc],dl
  40d50a:	xor    esi,DWORD PTR [ebp-0x73]
  40d50d:	lea    edx,[ecx]
  40d50f:	lods   al,BYTE PTR ds:[esi]
  40d510:	jb     0x40d4fa
  40d512:	add    ch,dh
  40d514:	sar    edi,0x83
  40d517:	xor    eax,0x89009c03
  40d51c:	inc    ebp
  40d51d:	int3   
  40d51e:	xor    eax,DWORD PTR [ebp+0x3]
  40d521:	xor    al,0x89
  40d523:	pushf  
  40d524:	adc    al,0xc7
  40d526:	inc    ebp
  40d527:	les    eax,FWORD PTR [ebx]
  40d529:	test   esp,ebx
  40d52b:	clc    
  40d52c:	inc    ebp
  40d52d:	inc    ebp
  40d52e:	push   DWORD PTR [edx]
  40d530:	hlt    
  40d531:	pushf  
  40d532:	jne    0x40d4c1
  40d534:	mov    ecx,esp
  40d536:	or     al,0x4d
  40d538:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  40d53e:	clc    
  40d53f:	lea    eax,[ebp-0x3c]
  40d542:	cmp    eax,0x8b8d9c4d
  40d547:	shl    al,0x4d
  40d54a:	(bad)  
  40d54b:	mov    eax,ebx
  40d54d:	or     BYTE PTR [ebp-0x17344731],cl
  40d553:	dec    ebp
  40d554:	imul   ecx
  40d556:	inc    DWORD PTR [ecx]
  40d558:	inc    ebp
  40d559:	add    BYTE PTR [ebp-0x74638bcd],al
  40d55f:	pavgb  mm7,mm6
  40d562:	mov    DWORD PTR [eax],0xf0ff8bc3
  40d568:	clc    
  40d569:	iret   
  40d56a:	inc    ebp
  40d56b:	lock push eax
  40d56d:	retf   
  40d56e:	fmul   QWORD PTR [ebp-0x1]
  40d571:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40d577:	test   BYTE PTR [ebx+0x4d32e09e],cl
  40d57d:	mov    DWORD PTR [ebx],ebp
  40d57f:	loopne 0x40d50a
  40d581:	inc    ebp
  40d582:	loopne 0x40d50f
  40d584:	inc    ebp
  40d585:	loopne 0x40d512
  40d587:	xbegin 0x4091650
  40d58d:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  40d594:	jb     0x40d5e6
  40d596:	mov    ecx,DWORD PTR [eax+edi*8]
  40d599:	inc    ebp
  40d59a:	inc    eax
  40d59b:	push   eax
  40d59c:	mov    ebx,DWORD PTR [edi-0x8]
  40d59f:	inc    DWORD PTR [ecx-0x75]
  40d5a2:	mov    ebp,esp
  40d5a4:	loopne 0x40d5a6
  40d5a6:	rol    edi,0xee
  40d5a9:	test   BYTE PTR [eax],al
  40d5ab:	dec    edx
  40d5ac:	push   0x32
  40d5ae:	dec    DWORD PTR [ebx-0x30baf70c]
  40d5b4:	push   eax
  40d5b5:	mov    dh,0x94
  40d5b7:	add    edi,edi
  40d5b9:	cmp    edi,DWORD PTR [eax-0x7877af1]
  40d5bf:	add    BYTE PTR [ebp-0x75],al
  40d5c2:	(bad)  
  40d5c3:	call   0xc7c5d690
  40d5c8:	clc    
  40d5c9:	test   BYTE PTR [ebp+0x4a],al
  40d5cc:	xor    esi,DWORD PTR [edx]
  40d5ce:	pushf  
  40d5cf:	mov    eax,edi
  40d5d1:	or     al,al
  40d5d3:	iret   
  40d5d4:	test   DWORD PTR [esi+0x3b4d03f8],esi
  40d5da:	mov    DWORD PTR [edi],ecx
  40d5dc:	in     al,dx
  40d5dd:	pop    eax
  40d5de:	dec    ebp
  40d5df:	add    BYTE PTR [ecx+0x4df8e88b],cl
  40d5e5:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  40d5eb:	dec    edx
  40d5ec:	mov    DWORD PTR [edx],esi
  40d5ee:	in     al,0x8b
  40d5f0:	dec    ebp
  40d5f1:	or     BYTE PTR [ebx],dh
  40d5f3:	iret   
  40d5f4:	add    esi,DWORD PTR [esi+0x3be00389]
  40d5fa:	test   DWORD PTR [edi],0x3d3800
  40d600:	test   DWORD PTR [ebx+0x84e4f8],ecx
  40d606:	add    edi,eax
  40d608:	add    BYTE PTR [ebp+ecx*2-0x74cdccb6],al
  40d60f:	mov    eax,DWORD PTR [ebx]
  40d611:	or     BYTE PTR [ecx+0x45b614cf],cl
  40d617:	add    esi,DWORD PTR [ebx]
  40d619:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  40d61f:	add    BYTE PTR [eax],al
  40d621:	mov    eax,DWORD PTR [ebp-0x18]
  40d624:	mov    eax,DWORD PTR [eax]
  40d626:	lock (bad) 
  40d628:	dec    ebp
  40d629:	test   BYTE PTR [ebx],dh
  40d62b:	dec    edx
  40d62c:	add    esi,DWORD PTR [edx]
  40d62e:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  40d634:	or     bh,cl
  40d636:	(bad)  
  40d637:	mov    ebx,es
  40d639:	dec    edx
  40d63a:	push   0x32
  40d63c:	lea    esi,[edx]
  40d63e:	lods   al,BYTE PTR ds:[esi]
  40d63f:	mov    ebp,eax
  40d641:	clc    
  40d642:	cli    
  40d643:	or     edi,edi
  40d645:	iret   
  40d646:	inc    ebp
  40d647:	mov    WORD PTR [ebx-0x75cdccb6],cs
  40d64d:	or     al,BYTE PTR ds:0xec728b
  40d653:	or     DWORD PTR [ebp-0x31],ecx
  40d656:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb2]
  40d65d:	cmp    al,cl
  40d65f:	je     0x40d839
  40d665:	mov    eax,DWORD PTR [ebp-0x8]
  40d668:	mov    eax,DWORD PTR [eax]
  40d66a:	xor    eax,edi
  40d66c:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  40d673:	mov    ecx,DWORD PTR [ebp-0x18]
  40d676:	xor    ecx,DWORD PTR [ecx]
  40d678:	bswap  edi
  40d67a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb6],0x32
  40d682:	add    DWORD PTR [ebx+0x945e400],ecx
  40d688:	mov    ecx,edi
  40d68a:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d691:	or     al,BYTE PTR [eax]
  40d693:	mov    ecx,DWORD PTR [ebp-0x18]
  40d696:	xor    ecx,DWORD PTR [ecx]
  40d698:	bswap  edi
  40d69a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb2],0x3a
  40d6a2:	add    DWORD PTR [edi],ecx
  40d6a4:	add    BYTE PTR [eax-0x7474ffbb],dl
  40d6aa:	xor    esp,esp
  40d6ac:	mov    al,BYTE PTR [eax]
  40d6ae:	add    eax,0x8472c7
  40d6b3:	dec    edx
  40d6b4:	dec    ebp
  40d6b5:	xor    dh,BYTE PTR [ebx]
  40d6b7:	mov    ecx,DWORD PTR [edi]
  40d6b9:	clc    
  40d6ba:	ror    BYTE PTR [ecx],0xcb
  40d6bd:	iret   
  40d6be:	ror    DWORD PTR [esp+eax*4+0x32014a],0x32
  40d6c6:	inc    ebp
  40d6c7:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  40d6cd:	iret   
  40d6ce:	add    eax,0x4a728c
  40d6d3:	xor    cl,BYTE PTR [ebp+0xa]
  40d6d6:	mov    ecx,DWORD PTR [ebx+0x98af833]
  40d6dc:	or     eax,0x8c72cf
  40d6e1:	dec    esi
  40d6e2:	shl    DWORD PTR [edx],0x4d
  40d6e5:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  40d6eb:	in     al,0xd
  40d6ed:	add    BYTE PTR [edx-0x39],dh
  40d6f0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  40d6f7:	mov    esi,DWORD PTR [ebx]
  40d6f9:	in     al,dx
  40d6fa:	mov    cl,BYTE PTR [ecx]
  40d6fc:	or     eax,0x8c72cf
  40d701:	dec    edx
  40d702:	enter  0x8532,0x32
  40d706:	add    BYTE PTR [ebx+0x945e800],cl
  40d70c:	mov    ecx,edi
  40d70e:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d715:	or     al,BYTE PTR [eax]
  40d717:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d71a:	mov    ecx,DWORD PTR [ecx]
  40d71c:	xor    ecx,edi
  40d71e:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724e]
  40d725:	cmp    al,cl
  40d727:	jne    0x40d776
  40d729:	lea    ecx,[ebx-0x7517cc54]
  40d72f:	cli    
  40d730:	or     eax,0x4d72ff
  40d735:	cmp    eax,ecx
  40d737:	je     0x40d786
  40d739:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  40d73f:	ret    
  40d740:	or     eax,0x8b7245
  40d745:	lock enter 0x85c7,0x84
  40d74a:	add    BYTE PTR [esi+0x33453200],bl
  40d750:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40d756:	add    eax,0x37233
  40d75b:	cmp    ecx,DWORD PTR [ebp+0xf]
  40d75e:	mov    esi,edi
  40d760:	xor    edi,edi
  40d762:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40d768:	add    BYTE PTR [ebx],dh
  40d76a:	rol    DWORD PTR [ebx],0x4d
  40d76d:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  40d773:	lock or eax,0x33724d
  40d779:	(bad)  
  40d77a:	ror    DWORD PTR [eax],0x4d
  40d77d:	jb     0x40d70a
  40d77f:	add    BYTE PTR [ebx],dh
  40d781:	ja     0x40d70d
  40d783:	sbb    BYTE PTR ds:0x8d7275,cl
  40d789:	xchg   esp,eax
  40d78a:	enter  0x50e8,0xf3
  40d78e:	inc    ebp
  40d78f:	dec    DWORD PTR [ebx-0x7574ccbb]
  40d795:	loopne 0x40d79c
  40d797:	(bad)  
  40d798:	jb     0x40d75d
  40d79a:	add    cl,al
  40d79c:	dec    ebp
  40d79d:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  40d7a3:	add    ecx,DWORD PTR ds:0x187250
  40d7a9:	inc    ebp
  40d7aa:	rcl    DWORD PTR [eax+0x4d],0x4f
  40d7ae:	mov    edi,edi
  40d7b0:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40d7b6:	jb     0x40d741
  40d7b8:	add    BYTE PTR [ecx+eax*8],dl
  40d7bb:	jne    0x40d80a
  40d7bd:	dec    DWORD PTR [ebx-0x75baccec]
  40d7c3:	add    ecx,DWORD PTR ds:0xe872d8
  40d7c9:	repnz enter 0x10ff,0x45
  40d7ce:	inc    ebp
  40d7cf:	mov    edx,DWORD PTR [eax-0x20]
  40d7d2:	mov    ds:0x8bc3ffc7,eax
  40d7d7:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  40d7df:	mov    esi,DWORD PTR [ebx]
  40d7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e2:	add    eax,DWORD PTR [ebp-0x77]
  40d7e5:	push   eax
  40d7e6:	adc    al,0x15
  40d7e8:	inc    ebp
  40d7e9:	push   DWORD PTR [ebx]
  40d7eb:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  40d7f1:	add    DWORD PTR [eax],eax
  40d7f3:	mov    eax,edi
  40d7f5:	test   al,0x4d
  40d7f7:	inc    ebp
  40d7f8:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  40d7fe:	retf   
  40d7ff:	mov    edx,ecx
  40d801:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  40d808:	inc    ebp
  40d809:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  40d80f:	xor    eax,ebx
  40d811:	(bad)  
  40d812:	enter  0x1111,0x72
  40d816:	inc    ebp
  40d817:	add    BYTE PTR [ebx-0x387de73f],cl
  40d81d:	cld    
  40d81e:	test   bh,bh
  40d820:	sahf   
  40d821:	jne    0x40d855
  40d823:	mov    ebp,ebx
  40d825:	fsubr  DWORD PTR [edx+0x6]
  40d828:	dec    DWORD PTR [edx]
  40d82a:	hlt    
  40d82b:	xor    eax,0x7f502d45
  40d830:	sbb    ch,ah
  40d832:	call   DWORD PTR [edx-0x75]
  40d835:	pop    esi
  40d836:	or     cl,cl
  40d838:	dec    ebp
  40d839:	adc    al,0x33
  40d83b:	push   ebp
  40d83c:	add    ebp,esp
  40d83e:	cmp    esp,esp
  40d840:	je     0x40d7c5
  40d842:	mov    esp,DWORD PTR [eax]
  40d844:	or     BYTE PTR ds:0x89c39cc7,dh
  40d84a:	push   0x24
  40d84c:	lea    ecx,[ebp+0x44e8ff94]
  40d852:	clc    
  40d853:	or     al,0xff
  40d855:	push   esp
  40d856:	inc    ebp
  40d857:	or     BYTE PTR [ebx+0x450818be],al
  40d85d:	pop    es
  40d85e:	call   esi
  40d860:	test   al,0xbf
  40d862:	jne    0x40d8d6
  40d864:	mov    eax,DWORD PTR [eax]
  40d866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d867:	xlat   BYTE PTR ds:[ebx]
  40d868:	inc    ebp
  40d869:	push   esp
  40d86a:	push   eax
  40d86b:	or     al,0xde
  40d86d:	push   ebp
  40d86e:	dec    DWORD PTR [ecx-0x74f7db75]
  40d874:	dec    ebp
  40d875:	adc    BYTE PTR [ebx],dh
  40d877:	rol    DWORD PTR [ebx],1
  40d879:	sbb    BYTE PTR [ebx],bh
  40d87b:	dec    esp
  40d87c:	je     0x40d892
  40d87e:	push   0x54
  40d880:	call   DWORD PTR [eax]
  40d882:	test   al,0xce
  40d884:	inc    ebp
  40d885:	iret   
  40d886:	add    ebp,DWORD PTR [edi+0x24e889d8]
  40d88c:	clc    
  40d88d:	jmp    0x85da91
  40d892:	mov    edx,eax
  40d894:	test   al,0x1f
  40d896:	or     BYTE PTR [ebp+eax*2+0x10],al
  40d89a:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  40d89e:	inc    ebp
  40d89f:	(bad)  
  40d8a0:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9e]
  40d8a7:	mov    DWORD PTR [ebx],eax
  40d8a9:	and    al,0xf
  40d8ab:	push   0xf84d85c1
  40d8b0:	mov    edi,ebp
  40d8b2:	rol    BYTE PTR [eax],1
  40d8b4:	iret   
  40d8b5:	or     DWORD PTR [ebx+esi*1+0x75329c9e],0x850f683b
  40d8c0:	push   edi
  40d8c1:	clc    
  40d8c2:	(bad)  
  40d8c3:	jmp    0x40d850
  40d8c5:	add    BYTE PTR [eax],dl
  40d8c7:	mov    eax,0xf8898545
  40d8cc:	jmp    0x40d89e
  40d8ce:	add    DWORD PTR [ebp+0x64009e],0x206544bf
  40d8d8:	pop    edi
  40d8d9:	inc    esp
  40d8da:	pop    ebx
  40d8db:	sbb    dl,al
  40d8dd:	inc    ebp
  40d8de:	add    BYTE PTR [ecx-0x747cdb75],cl
  40d8e4:	clc    
  40d8e5:	and    al,0xec
  40d8e7:	mov    DWORD PTR [ecx-0x7747adc],edi
  40d8ed:	and    al,0x4c
  40d8ef:	mov    DWORD PTR [eax],ecx
  40d8f1:	and    al,0x41
  40d8f3:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  40d8f9:	and    al,0x24
  40d8fb:	xor    edx,DWORD PTR [esi+0x3]
  40d8fe:	push   edi
  40d8ff:	mov    DWORD PTR [ecx-0x75],edx
  40d902:	xor    esp,DWORD PTR [edi+edx*2]
  40d905:	mov    ebx,DWORD PTR [esi+0x3003294]
  40d90b:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  40d911:	mov    ecx,DWORD PTR [esp+edx*4]
  40d914:	push   esp
  40d915:	add    BYTE PTR [eax],ah
  40d917:	mov    edx,DWORD PTR [ebp+0x3]
  40d91a:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  40d921:	mov    DWORD PTR [ebx+0x33002401],ecx
  40d927:	dec    ecx
  40d928:	add    ebp,DWORD PTR [edx+0xf]
  40d92b:	push   0x4c30ca
  40d930:	adc    BYTE PTR [eax+0x1f],dh
  40d933:	push   0x0
  40d935:	(bad)  
  40d936:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  40d93c:	and    al,0x24
  40d93e:	mov    esi,DWORD PTR [ebx]
  40d940:	and    al,0x3
  40d942:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40d948:	jb     0x40d96e
  40d94a:	add    bh,bh
  40d94c:	inc    esp
  40d94d:	and    al,0x14
  40d94f:	lea    esi,[ebx]
  40d951:	and    al,0x9c
  40d953:	push   eax
  40d954:	jmp    0x54d99d
  40d959:	(bad)  
  40d95a:	cli    
  40d95b:	and    al,0x85
  40d95d:	(bad)  
  40d95e:	clc    
  40d95f:	and    al,0xa
  40d961:	call   0xffddd298
  40d966:	jmp    0x54d9af
  40d96b:	dec    esp
  40d96c:	aas    
  40d96d:	or     al,0x9c
  40d96f:	(bad)  
  40d970:	cmp    eax,edi
  40d972:	bswap  eax
  40d974:	mov    bh,0x4b
  40d976:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40d97a:	and    al,0x4c
  40d97c:	mov    DWORD PTR [esp],ebx
  40d97f:	(bad)  
  40d980:	mov    eax,edi
  40d982:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40d988:	inc    esp
  40d989:	jmp    0x40d99f
  40d98b:	add    DWORD PTR [edx+esi*1+0x20],0x1075449c
  40d993:	push   0xf8148544
  40d998:	inc    esp
  40d999:	sbb    BYTE PTR [edx+edi*8],dl
  40d99c:	dec    esp
  40d99d:	test   DWORD PTR [eax+edi*8],ebx
  40d9a0:	mov    BYTE PTR [edi],0xc7
  40d9a3:	xor    BYTE PTR [ecx],al
  40d9a5:	pushf  
  40d9a6:	inc    esp
  40d9a7:	jmp    0x40d9c1
  40d9a9:	add    DWORD PTR [eax+0x9c0130],0x44500875
  40d9b3:	jne    0x40d9cd
  40d9b5:	or     DWORD PTR [eax+0x100185],eax
  40d9bb:	or     al,0x0
  40d9bd:	jne    0x40da00
  40d9bf:	call   0xff65d84f
  40d9c4:	mov    eax,DWORD PTR [eax+ebx*8+0xc]
  40d9c8:	add    BYTE PTR [ebx+ecx*4+0xc],al
  40d9cc:	adc    al,0x5e
  40d9ce:	add    al,0xe5
  40d9d0:	add    dl,al
  40d9d2:	add    BYTE PTR [eax],al
  40d9d4:	inc    DWORD PTR [ecx]
  40d9d6:	push   eax
  40d9d7:	cli    
  40d9d8:	add    al,bh
  40d9da:	shl    DWORD PTR [ecx],1
  40d9dc:	inc    esp
  40d9dd:	jmp    0x40d9eb
  40d9df:	xor    DWORD PTR [ebp+esi*2+0x14],eax
  40d9e3:	test   esi,eax
  40d9e5:	cli    
  40d9e6:	(bad)  
  40d9e7:	inc    DWORD PTR [eax+ecx*1+0x24]
  40d9eb:	inc    DWORD PTR [esp+0x1c]
  40d9ef:	and    al,0x74
  40d9f1:	mov    ebx,DWORD PTR [eax]
  40d9f3:	or     al,0x44
  40d9f5:	and    al,0x28
  40d9f7:	and    al,0x8d
  40d9f9:	add    esp,DWORD PTR [esp+esi*2]
  40d9fc:	push   eax
  40d9fd:	and    al,0x74
  40d9ff:	and    al,0x2c
  40da01:	add    esi,DWORD PTR [esp+eax*2+0x24]
  40da05:	ss mov bl,0x7
  40da08:	inc    DWORD PTR [ecx-0x7749775]
  40da0e:	xor    edi,DWORD PTR [esi+0x3b]
  40da11:	mov    ecx,DWORD PTR [ebx+0xf338b5d]
  40da17:	and    al,0x85
  40da19:	pushf  
  40da1a:	pushf  
  40da1b:	clc    
  40da1c:	dec    DWORD PTR [ecx+0x4105bf5f]
  40da22:	add    bl,al
  40da24:	add    eax,0x5c70041
  40da29:	inc    ecx
  40da2a:	add    bl,cl
  40da2c:	add    eax,0x5cf0041
  40da31:	inc    ecx
  40da32:	add    bl,dl
  40da34:	add    eax,0x5d70041
  40da39:	inc    ecx
  40da3a:	add    bl,bl
  40da3c:	add    eax,0xffd40041
  40da41:	in     eax,dx
  40da42:	jp     0x40da33
  40da44:	jp     0x40da1d
  40da46:	(bad)  
  40da47:	jnp    0x40da85
  40da49:	adc    ecx,DWORD PTR [esi+0x4e]
  40da4c:	mov    eax,ds:0xe15bd6ce
  40da51:	add    BYTE PTR [eax],al
  40da53:	and    BYTE PTR [edi],al
  40da55:	add    BYTE PTR [eax],al
  40da57:	(bad)  
  40da58:	mov    cl,0x6e
  40da5a:	jno    0x40dada
  40da5c:	sub    DWORD PTR [esi],edi
  40da5e:	idiv   BYTE PTR [edx+0x7d]
  40da61:	in     eax,0x31
  40da63:	lea    edx,[ebx]
  40da65:	push   esp
  40da66:	inc    esp
  40da67:	cmp    DWORD PTR [esi+esi*4-0x44],edx
  40da6b:	cld    
  40da6c:	cmp    edx,ebp
  40da6e:	je     0x40daec
  40da70:	test   al,0xe3
  40da72:	or     eax,0x6bb48a5f
  40da77:	jns    0x40daeb
  40da79:	test   DWORD PTR [ecx-0x2fee4a26],0x62bfd6b3
  40da83:	popf   
  40da84:	mul    ebp
  40da86:	cmc    
  40da87:	(bad)  
  40da88:	jnp    0x40daa8
  40da8a:	ficom  DWORD PTR [eax+0x4cba02ce]
  40da90:	sbb    eax,0x2c42bad4
  40da95:	mov    eax,DWORD PTR [ebx]
  40da97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da98:	and    DWORD PTR [esi+eiz*8+0x4e8fa193],edx
  40da9f:	(bad)  
  40daa1:	test   eax,0x5cb945d6
  40daa6:	inc    edx
  40daa7:	es and eax,0x57246d9f
  40daad:	aam    0x1c
  40daaf:	cmp    DWORD PTR [ecx+0xd],esi
  40dab2:	cmp    al,cl
  40dab4:	lock adc edi,DWORD PTR [ebp-0x48]
  40dab8:	xchg   ebp,eax
  40dab9:	frstor ds:0x4fec7168
  40dabf:	mov    BYTE PTR [edi],bl
  40dac1:	sar    BYTE PTR [ebx],0x2c
  40dac4:	les    eax,FWORD PTR [esp+edx*1-0x4f]
  40dac8:	add    BYTE PTR [ebp+0x0],al
  40dacb:	pop    esi
  40dacc:	in     eax,dx
  40dacd:	loope  0x40dadc
  40dacf:	inc    ecx
  40dad0:	push   ebp
  40dad1:	mov    bh,BYTE PTR [ebp+0x3efd00f5]
  40dad7:	stos   BYTE PTR es:[edi],al
  40dad8:	out    0x31,al
  40dada:	mov    esp,0xde014aa0
  40dadf:	ret    0xbdb
  40dae2:	dec    ecx
  40dae3:	out    0x57,eax
  40dae5:	cdq    
  40dae6:	jmp    0x4ad6:0xb84c5d6d
  40daed:	push   ds
  40daee:	adc    eax,0xaf906cb7
  40daf3:	xchg   DWORD PTR [edi+0x69],ebp
  40daf6:	mov    eax,DWORD PTR [esi+0x441c15da]
  40dafc:	nop
  40dafd:	sbb    eax,0x2101c579
  40db02:	sahf   
  40db03:	in     eax,dx
  40db04:	push   es
  40db05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db06:	pop    ebp
  40db07:	fild   WORD PTR [eax]
  40db09:	add    BYTE PTR [edx-0x79],dh
  40db0c:	nop
  40db0d:	pop    edx
  40db0e:	out    dx,eax
  40db0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db10:	shl    esp,cl
  40db12:	scas   al,BYTE PTR es:[edi]
  40db13:	int    0x5
  40db15:	test   al,0xb9
  40db17:	fscale 
  40db19:	mov    edx,0xf2ea57e4
  40db1e:	jmp    0x40db02
  40db20:	std    
  40db21:	xchg   esp,eax
  40db22:	js     0x40dae9
  40db24:	mov    al,0xa3
  40db26:	enter  0xb03a,0x5d
  40db2a:	leave  
  40db2b:	cmp    ecx,DWORD PTR ds:0x1bc82641
  40db31:	sub    dh,bl
  40db33:	sub    ah,BYTE PTR [eax+0x13338968]
  40db39:	mov    BYTE PTR [edx],al
  40db3b:	sbb    ch,ah
  40db3d:	pop    edx
  40db3e:	rcr    DWORD PTR [edi-0x58],cl
  40db41:	mov    bl,0xec
  40db43:	pop    ds
  40db44:	cwde   
  40db45:	xchg   BYTE PTR [ecx-0x48e24e5d],bh
  40db4b:	xchg   edi,eax
  40db4c:	mov    al,0x62
  40db4e:	adc    eax,0x26b6e13d
  40db53:	rcr    DWORD PTR [edx+0x49],0xaa
  40db57:	push   0x8390e589
  40db5c:	bound  ecx,QWORD PTR [esi-0x747b2f13]
  40db62:	test   DWORD PTR [eax-0x19],esp
  40db65:	or     cl,BYTE PTR [ebx]
  40db67:	mov    edx,esi
  40db69:	test   dl,al
  40db6b:	mov    edi,0xad058c6f
  40db70:	sbb    DWORD PTR ds:0x2be7c4dc,ecx
  40db76:	inc    eax
  40db77:	xor    esi,esi
  40db79:	mov    ch,0xf7
  40db7b:	hlt    
  40db7c:	sbb    DWORD PTR [ecx],esp
  40db7e:	adc    eax,0x9dfbc510
  40db83:	call   0x4eca:0x99135b21
  40db8a:	cmp    eax,0xbc93aa49
  40db8f:	mov    ch,0x4b
  40db91:	mov    ah,al
  40db93:	adc    al,0xdf
  40db95:	scas   al,BYTE PTR es:[edi]
  40db96:	jecxz  0x40dbb3
  40db98:	pop    esp
  40db99:	sub    BYTE PTR [edx+eiz*2-0x4f],al
  40db9d:	(bad)  
  40db9e:	js     0x40dbdc
  40dba0:	mov    al,0x95
  40dba2:	mov    ch,0x86
  40dba4:	jp     0x40db49
  40dba6:	xchg   ebp,eax
  40dba7:	loop   0x40db59
  40dba9:	ret    0x4ada
  40dbac:	xadd   DWORD PTR [edi-0x27],ebx
  40dbb0:	xlat   BYTE PTR ds:[ebx]
  40dbb1:	out    dx,al
  40dbb2:	mov    ebp,0xe85c8a29
  40dbb7:	(bad)  
  40dbb8:	into   
  40dbb9:	test   eax,0x4ab3e714
  40dbbe:	data16 ins BYTE PTR es:[edi],dx
  40dbc0:	push   es
  40dbc1:	and    ch,BYTE PTR [edi]
  40dbc3:	jnp    0x40dbb3
  40dbc5:	mov    ecx,0xc4286430
  40dbca:	je     0x40db60
  40dbcc:	cmp    al,0xab
  40dbce:	xor    eax,0x46b44ca6
  40dbd3:	push   ebx
  40dbd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbd5:	jmp    0x86b3:0x8d16a5a
  40dbdc:	loopne 0x40dbd4
  40dbde:	stc    
  40dbdf:	cmp    ah,ah
  40dbe1:	mov    ss,edi
  40dbe3:	inc    ebp
  40dbe4:	ret    0x4293
  40dbe7:	push   ds
  40dbe8:	or     eax,eax
  40dbea:	popf   
  40dbeb:	xor    ebp,0x3e0d9fc5
  40dbf1:	mov    al,0x5a
  40dbf3:	inc    esi
  40dbf4:	aaa    
  40dbf5:	cmp    BYTE PTR [eax],ah
  40dbf7:	xchg   DWORD PTR [esi+0x164f1978],esp
  40dbfd:	jnp    0x40dbbb
  40dbff:	fistp  DWORD PTR [edi+edx*1-0x59822bd5]
  40dc06:	adc    esp,DWORD PTR [edi]
  40dc08:	pop    ebp
  40dc09:	add    dh,BYTE PTR [edx+ebp*8]
  40dc0c:	inc    edx
  40dc0d:	sbb    eax,0x9a5619dd
  40dc12:	cmc    
  40dc13:	scas   al,BYTE PTR es:[edi]
  40dc14:	sub    eax,eax
  40dc16:	mov    bl,0x91
  40dc18:	or     dl,BYTE PTR ds:0x73e74548
  40dc1e:	fwait
  40dc1f:	jne    0x40dba2
  40dc21:	adc    bl,BYTE PTR [edi+0x68]
  40dc24:	xchg   ebx,eax
  40dc25:	data16 sti 
  40dc27:	xchg   esi,eax
  40dc28:	adc    BYTE PTR [ecx+ecx*4],ah
  40dc2b:	push   edi
  40dc2c:	xchg   edx,eax
  40dc2d:	mov    bh,BYTE PTR [ecx-0x2a]
  40dc30:	fbstp  TBYTE PTR [edx+0x16580848]
  40dc36:	adc    DWORD PTR [esi-0xe26b707],edi
  40dc3c:	fwait
  40dc3d:	push   ss
  40dc3e:	(bad)  
  40dc3f:	sti    
  40dc40:	and    ah,BYTE PTR [edx]
  40dc42:	mov    BYTE PTR [edi+0x5],ah
  40dc45:	mov    bh,0x77
  40dc47:	fldcw  WORD PTR [ecx+edx*8-0x7bf706bf]
  40dc4e:	mov    BYTE PTR [ebx],ch
  40dc50:	popf   
  40dc51:	(bad)  [esi+0x31]
  40dc54:	mov    dh,0x77
  40dc56:	lds    esi,FWORD PTR [ecx+0x4a8b894c]
  40dc5c:	in     al,dx
  40dc5d:	sbb    BYTE PTR [ecx],0x59
  40dc60:	leave  
  40dc61:	(bad)  
  40dc62:	fidiv  DWORD PTR [eax]
  40dc64:	fcomi  st,st(3)
  40dc66:	cmp    WORD PTR [edx],dx
  40dc69:	jmp    0x2409:0x4b42c307
  40dc70:	stos   BYTE PTR es:[edi],al
  40dc71:	inc    edx
  40dc72:	xor    dh,BYTE PTR fs:[eax]
  40dc75:	pop    ecx
  40dc76:	jle    0x40dc4a
  40dc78:	add    DWORD PTR [ebp+0x7082978b],eax
  40dc7e:	cdq    
  40dc7f:	repnz rol BYTE PTR fs:0x6382c66f,0xfa
  40dc88:	pop    esi
  40dc89:	pusha  
  40dc8a:	inc    ecx
  40dc8b:	sub    al,0xc6
  40dc8d:	jne    0x40dc95
  40dc8f:	gs pop esp
  40dc91:	out    dx,eax
  40dc92:	dec    edi
  40dc93:	aaa    
  40dc94:	fs dec edx
  40dc96:	sub    al,0xc1
  40dc98:	les    edi,FWORD PTR [ebp+0x47]
  40dc9b:	dec    ebx
  40dc9c:	repnz out dx,al
  40dc9e:	jb     0x40dc6a
  40dca0:	xlat   BYTE PTR ds:[ebx]
  40dca1:	lea    ecx,[eax+ebx*8+0x41]
  40dca5:	push   esp
  40dca6:	mov    edi,0x1d0f3b44
  40dcab:	pop    ecx
  40dcac:	stos   BYTE PTR es:[edi],al
  40dcad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcae:	ror    DWORD PTR [edx-0xffba4e5],0xb6
  40dcb5:	scas   al,BYTE PTR es:[edi]
  40dcb6:	add    eax,0x6c693f4f
  40dcbb:	out    0x97,eax
  40dcbd:	mov    DWORD PTR [eax-0x6a],0xae771ea2
  40dcc4:	or     al,0x22
  40dcc6:	out    0x63,al
  40dcc8:	fcomp  QWORD PTR [edx+0x4c]
  40dccb:	xor    al,0x5d
  40dccd:	int3   
  40dcce:	imul   edi,DWORD PTR [ecx],0x5dfdae8c
  40dcd4:	jl     0x40dca5
  40dcd6:	dec    eax
  40dcd7:	test   al,0x84
  40dcd9:	lods   eax,DWORD PTR ds:[esi]
  40dcda:	icebp  
  40dcdb:	fnstenv [ecx]
  40dcdd:	fisub  WORD PTR [esi-0x51]
  40dce0:	cwde   
  40dce1:	jb     0x40dcdb
  40dce3:	or     BYTE PTR [ecx+ecx*8-0xb05dd8b],ah
  40dcea:	aaa    
  40dceb:	xlat   BYTE PTR ds:[ebx]
  40dcec:	and    ebx,DWORD PTR [eax-0x59]
  40dcef:	leave  
  40dcf0:	addr16 cwde 
  40dcf2:	mov    bl,0xbe
  40dcf4:	inc    eax
  40dcf5:	dec    ebx
  40dcf6:	or     BYTE PTR [edi+0x2fe2938b],dh
  40dcfc:	and    al,0x50
  40dcfe:	int3   
  40dcff:	daa    
  40dd00:	sub    BYTE PTR [ecx+0x38],al
  40dd03:	mov    esi,0xcbec0dc8
  40dd08:	xchg   edi,eax
  40dd09:	pop    eax
  40dd0a:	add    BYTE PTR [ecx],al
  40dd0c:	sub    al,0x58
  40dd0e:	mov    ah,al
  40dd10:	bound  edi,QWORD PTR [ecx]
  40dd12:	pop    ds
  40dd13:	mov    edi,0xa438e485
  40dd18:	aaa    
  40dd19:	or     al,0x4a
  40dd1b:	rcl    eax,1
  40dd1d:	cmp    BYTE PTR [esp+esi*1],bl
  40dd20:	jo     0x40dca8
  40dd22:	iret   
  40dd23:	pop    ss
  40dd24:	mov    esi,0x7eeec17b
  40dd29:	call   0xdabfb470
  40dd2e:	nop
  40dd2f:	mov    bl,BYTE PTR [ecx+0x5baae59c]
  40dd35:	ror    BYTE PTR [esi],1
  40dd37:	in     al,0x10
  40dd39:	stos   DWORD PTR es:[edi],eax
  40dd3a:	mov    ds:0x2638ab42,al
  40dd3f:	inc    esp
  40dd40:	inc    esi
  40dd41:	rcr    DWORD PTR [ebp-0x5e580757],0x45
  40dd48:	pop    eax
  40dd49:	loop   0x40dd0d
  40dd4b:	inc    ecx
  40dd4c:	(bad)  
  40dd4d:	test   al,0x7b
  40dd4f:	add    eax,0xbce787ab
  40dd54:	out    dx,al
  40dd55:	push   esp
  40dd56:	popf   
  40dd57:	les    edx,FWORD PTR [ecx]
  40dd59:	popaw  
  40dd5b:	sub    BYTE PTR [edx+0xe],ch
  40dd5e:	sbb    BYTE PTR [eax],ch
  40dd60:	ss or  al,0xc4
  40dd63:	mov    cl,0xa1
  40dd65:	call   0xcffb:0xf6271ea6
  40dd6c:	add    DWORD PTR [ecx-0x2129510b],edi
  40dd72:	push   edx
  40dd73:	push   ebp
  40dd74:	and    ah,BYTE PTR [edx-0xc210da4]
  40dd7a:	push   ds
  40dd7b:	or     eax,0xac04df37
  40dd80:	sbb    bl,BYTE PTR [eax+0x53]
  40dd83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd84:	and    bl,BYTE PTR [ecx]
  40dd86:	lods   al,BYTE PTR ds:[esi]
  40dd87:	cmp    BYTE PTR [edi],0xf
  40dd8a:	(bad)  
  40dd8b:	stc    
  40dd8c:	adc    ebp,esi
  40dd8e:	jno    0x40dd44
  40dd90:	adc    dh,BYTE PTR [eax]
  40dd92:	xor    al,0x48
  40dd94:	mov    dl,0x2f
  40dd96:	push   edx
  40dd97:	loopne 0x40dd87
  40dd99:	not    ch
  40dd9b:	push   esi
  40dd9c:	jno    0x40dd52
  40dd9e:	sub    bl,bh
  40dda0:	not    edx
  40dda2:	pusha  
  40dda3:	mov    al,0x25
  40dda5:	jb     0x40dded
  40dda7:	retf   0x367f
  40ddaa:	mov    eax,0xed964fd5
  40ddaf:	push   ss
  40ddb0:	mov    esp,0x9bc8b2cb
  40ddb5:	enter  0x41e7,0x8c
  40ddb9:	push   ss
  40ddba:	push   es
  40ddbb:	dec    eax
  40ddbc:	pushf  
  40ddbd:	push   0x814ae09b
  40ddc2:	xchg   BYTE PTR [eax+esi*4+0x487295f5],dl
  40ddc9:	int3   
  40ddca:	adc    eax,0xa1e25e70
  40ddcf:	mov    ?,WORD PTR [edx+0x47]
  40ddd2:	hlt    
  40ddd3:	pop    ds
  40ddd4:	sub    al,0x60
  40ddd6:	and    al,0xcb
  40ddd8:	rcr    DWORD PTR [ebx-0x3dec4091],0xfa
  40dddf:	lock sbb DWORD PTR [edx-0x55615509],edx
  40dde6:	cmp    al,0xa2
  40dde8:	inc    esi
  40dde9:	popa   
  40ddea:	ret    0x3976
  40dded:	es pop ebx
  40ddef:	retf   0xac5d
  40ddf2:	bound  esi,QWORD PTR [ecx-0x7b]
  40ddf5:	and    al,0xb7
  40ddf7:	popa   
  40ddf8:	sub    eax,0xe18d0509
  40ddfd:	es mov ebp,0xff8b2c0
  40de03:	inc    ebx
  40de04:	test   BYTE PTR [esi-0x34],ch
  40de07:	daa    
  40de08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de09:	lahf   
  40de0a:	outs   dx,DWORD PTR ds:[esi]
  40de0b:	ret    
  40de0c:	mov    ebx,0x4d1df6ed
  40de11:	jp     0x40de00
  40de13:	mov    al,bh
  40de15:	bound  ebp,QWORD PTR ds:[esi]
  40de18:	add    DWORD PTR [edx+0x6],ecx
  40de1b:	inc    esp
  40de1c:	clc    
  40de1d:	(bad)  
  40de1e:	lods   eax,DWORD PTR ds:[esi]
  40de1f:	and    al,ch
  40de21:	sub    al,0x6a
  40de23:	lods   al,BYTE PTR ds:[esi]
  40de24:	out    dx,eax
  40de25:	sub    BYTE PTR [ecx+0x15e228cb],bh
  40de2b:	lea    ecx,[ecx-0x47a18daa]
  40de31:	mov    ebp,0x96532e4d
  40de36:	push   0x40056a85
  40de3b:	push   es
  40de3c:	or     BYTE PTR [esi+0x60],0x8a
  40de40:	mov    ecx,DWORD PTR [edx]
  40de42:	push   esi
  40de43:	mov    eax,0x30ab53ff
  40de48:	imul   ebx,DWORD PTR [edi-0x61],0xffffffbb
  40de4c:	jg     0x40de6f
  40de4e:	jns    0x40de88
  40de50:	lds    ebx,FWORD PTR [edx-0x6ffb2b16]
  40de56:	and    DWORD PTR [edx-0x24],0xb86640a6
  40de5d:	aaa    
  40de5e:	push   esi
  40de5f:	xor    al,0x3
  40de61:	push   edi
  40de62:	sub    BYTE PTR [ecx-0x7146902a],ah
  40de68:	cmp    eax,0x33667c96
  40de6d:	arpl   WORD PTR [ebp+edi*1-0x7d],ax
  40de71:	dec    ebx
  40de72:	mov    ch,0x2
  40de74:	dec    ebp
  40de75:	jp     0x40de74
  40de77:	xchg   esi,eax
  40de78:	(bad)
  40de7b:	hlt    
  40de7c:	add    ecx,ebp
  40de7e:	jge    0x40deae
  40de80:	(bad)  
  40de81:	xor    DWORD PTR [ebx],ebp
  40de83:	xchg   ebx,eax
  40de84:	push   ebp
  40de85:	mov    ah,0xef
  40de87:	dec    esp
  40de88:	arpl   WORD PTR [edi],dx
  40de8a:	adc    bl,BYTE PTR [ebx-0x64]
  40de8d:	ja     0x80ed013e
  40de93:	out    0x60,eax
  40de95:	pop    es
  40de96:	mov    ah,0xd3
  40de98:	out    dx,al
  40de99:	xchg   ebp,eax
  40de9a:	inc    edx
  40de9b:	jae    0x40df16
  40de9d:	pop    es
  40de9e:	xlat   BYTE PTR ds:[ebx]
  40de9f:	rcl    BYTE PTR [esi+0x42539a58],1
  40dea5:	mov    eax,ds:0xf5412e7
  40deaa:	pop    esp
  40deab:	push   ebp
  40deac:	add    eax,0x1de59e19
  40deb1:	cmp    BYTE PTR [ebx],dh
  40deb3:	repz sbb ah,cl
  40deb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deb7:	scas   eax,DWORD PTR es:[edi]
  40deb8:	fwait
  40deb9:	dec    ebp
  40deba:	int    0x84
  40debc:	dec    edi
  40debd:	jbe    0x40dee8
  40debf:	cmp    dl,cl
  40dec1:	sub    BYTE PTR [ebp-0x6cc517b4],al
  40dec7:	pop    edx
  40dec8:	scas   al,BYTE PTR es:[edi]
  40dec9:	call   0xa4d:0xb8638a15
  40ded0:	mov    ds:0x296b3d4c,al
  40ded5:	xor    edx,edx
  40ded7:	adc    DWORD PTR ds:0x34e50b71,edx
  40dedd:	clc    
  40dede:	inc    ecx
  40dedf:	dec    edi
  40dee0:	(bad)  
  40dee2:	out    dx,eax
  40dee3:	lods   al,BYTE PTR ds:[esi]
  40dee4:	ret    
  40dee5:	ins    BYTE PTR es:[edi],dx
  40dee6:	jbe    0x40de8c
  40dee8:	hlt    
  40dee9:	pop    esi
  40deea:	dec    edx
  40deeb:	sbb    DWORD PTR [ebp-0x3],esi
  40deee:	push   ebx
  40deef:	mov    ah,0x23
  40def1:	inc    edi
  40def2:	inc    ebx
  40def3:	or     dh,0x18
  40def6:	rcl    BYTE PTR [ebx-0x7e],cl
  40def9:	call   0x9ff914f6
  40defe:	dec    esp
  40deff:	mov    WORD PTR [ecx],fs
  40df01:	mov    ch,0xe5
  40df03:	dec    eax
  40df04:	sbb    al,0xe1
  40df06:	into   
  40df07:	out    0x31,eax
  40df09:	dec    eax
  40df0a:	hlt    
  40df0b:	fbld   TBYTE PTR [esi]
  40df0d:	test   al,0xc3
  40df10:	pop    edi
  40df11:	and    esi,DWORD PTR [edi+ecx*2]
  40df14:	and    esi,DWORD PTR [esi+0x59927eaa]
  40df1a:	imul   eax,DWORD PTR [edx-0x198c7f2d],0x6b
  40df21:	mov    ebx,0xa9a80e31
  40df26:	adc    BYTE PTR [edi+0x256b447a],ch
  40df2c:	pushf  
  40df2d:	icebp  
  40df2e:	loopne 0x40df27
  40df30:	iret   
  40df31:	xchg   esi,eax
  40df32:	sub    al,0xc0
  40df34:	push   ebx
  40df35:	aas    
  40df36:	or     DWORD PTR [ecx+0xd],esi
  40df39:	ds ins DWORD PTR es:[edi],dx
  40df3b:	jl     0x40df52
  40df3d:	lods   eax,DWORD PTR ds:[esi]
  40df3e:	lock add eax,0x1b1c0989
  40df44:	call   0x95b2:0x313daeaa
  40df4b:	adc    al,0x71
  40df4e:	ret    
  40df4f:	fnstenv ds:[ebx]
  40df52:	lds    esi,FWORD PTR [esi+ebp*8+0x3e0cebb7]
  40df59:	mov    ebp,DWORD PTR [ecx-0x7d]
  40df5c:	retf   0x196e
  40df5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df60:	xor    BYTE PTR [edx+0x34fa0960],al
  40df66:	adc    DWORD PTR [eax],ebx
  40df68:	sbb    DWORD PTR [eax+0x0],esp
  40df6b:	ret    0x2813
  40df6e:	push   ebp
  40df6f:	mov    cs,WORD PTR [esi+0x62]
  40df72:	jmp    0x7213:0x5a21a2d8
  40df79:	xor    eax,DWORD PTR [ebx+0x3e3a190c]
  40df7f:	pop    edi
  40df80:	repz iret 
  40df82:	retf   0x87da
  40df85:	xchg   edi,eax
  40df86:	xchg   edi,eax
  40df87:	hlt    
  40df88:	sub    esp,0xfffffffb
  40df8b:	gs and eax,0xf2b5dc0d
  40df91:	aad    0xe3
  40df93:	jp     0x40df75
  40df95:	pop    edi
  40df96:	shl    DWORD PTR [eax-0x7db8057f],1
  40df9c:	pop    edi
  40df9d:	dec    ebx
  40df9e:	xor    esi,esp
  40dfa0:	mov    esp,gs
  40dfa2:	into   
  40dfa3:	dec    ebx
  40dfa4:	sbb    ecx,DWORD PTR [edi+0x2b27bacb]
  40dfaa:	outs   dx,BYTE PTR ds:[esi]
  40dfab:	or     al,0x4d
  40dfad:	outs   dx,BYTE PTR ds:[esi]
  40dfae:	adc    ch,BYTE PTR [eax]
  40dfb0:	jnp    0x40dfbf
  40dfb2:	ins    DWORD PTR es:[edi],dx
  40dfb3:	arpl   WORD PTR [eax-0x36],dx
  40dfb6:	pop    esi
  40dfb7:	sub    DWORD PTR [esi],esp
  40dfb9:	adc    edi,ebx
  40dfbb:	xchg   DWORD PTR [ecx-0x6e],ebp
  40dfbe:	pop    edi
  40dfbf:	shl    ch,cl
  40dfc1:	(bad)  
  40dfc2:	cld    
  40dfc3:	fistp  WORD PTR [ebx+0x36]
  40dfc6:	dec    ecx
  40dfc7:	fdiv   DWORD PTR ds:0x76982151
  40dfcd:	fcomp  DWORD PTR [eax-0x78]
  40dfd0:	mov    ds:0x2d3943d5,eax
  40dfd5:	xchg   esp,eax
  40dfd6:	jmp    0x191be860
  40dfdb:	retf   
  40dfdc:	jmp    0x1d5d:0x899250bf
  40dfe3:	xor    al,0x82
  40dfe5:	adc    BYTE PTR [edi+0x67404bd2],dl
  40dfeb:	push   ebx
  40dfec:	imul   edi,DWORD PTR [edi],0x91b1206
  40dff2:	or     DWORD PTR [eax],ebp
  40dff4:	mov    eax,ds:0xb00c946b
  40dff9:	mov    eax,0x3c9cb768
  40dffe:	add    edi,edi
  40e000:	lods   al,BYTE PTR ds:[esi]
  40e001:	rcr    DWORD PTR [esi-0x3c],cl
  40e004:	jmp    0x40e030
  40e006:	cmp    DWORD PTR [edx],esp
  40e008:	push   0x7f28adf2
  40e00d:	stc    
  40e00e:	xchg   BYTE PTR ds:0xd49b6f82,bl
  40e014:	outs   dx,BYTE PTR ds:[esi]
  40e015:	pavgw  mm5,QWORD PTR [esi+edx*4]
  40e019:	mov    edx,DWORD PTR [ecx+0x14]
  40e01c:	(bad)  
  40e01d:	pop    ss
  40e01e:	cmp    WORD PTR [ebp+0x3],0xacfb
  40e024:	cmp    BYTE PTR [edx-0x3f2329db],0xbc
  40e02b:	add    al,0xbe
  40e02d:	pop    es
  40e02e:	mov    ebp,0x70bd6ca2
  40e033:	jbe    0x40e046
  40e035:	stos   DWORD PTR es:[edi],eax
  40e036:	sbb    al,0x10
  40e038:	mov    edi,0x3c8623d1
  40e03d:	push   edx
  40e03e:	add    DWORD PTR gs:[esi+0x6],esp
  40e042:	clc    
  40e043:	mov    eax,0x3b7e4bff
  40e048:	add    edx,ebx
  40e04a:	hlt    
  40e04b:	fsubr  st(7),st
  40e04d:	mov    ebx,0x63c33b5b
  40e052:	push   es
  40e053:	sti    
  40e054:	dec    edi
  40e055:	pop    eax
  40e056:	push   edx
  40e057:	mov    esi,ecx
  40e059:	test   al,0x55
  40e05b:	call   0xcb36:0xf3a709f7
  40e062:	add    edx,edi
  40e064:	inc    eax
  40e065:	xchg   DWORD PTR [ecx],esi
  40e067:	(bad)  
  40e068:	imul   ebx,DWORD PTR [ecx-0x70],0x2d
  40e06c:	xchg   ecx,eax
  40e06d:	pusha  
  40e06e:	jg     0x40dff2
  40e070:	mov    ecx,0x2fc9b782
  40e075:	loope  0x40e074
  40e077:	pop    esi
  40e078:	adc    ch,BYTE PTR [ecx+0x37]
  40e07b:	dec    eax
  40e07c:	ret    0x7f44
  40e07f:	sti    
  40e080:	scas   eax,DWORD PTR es:[edi]
  40e081:	call   0x948:0x7795aab5
  40e088:	mov    edi,0x5163c7ac
  40e08d:	mov    edi,eax
  40e08f:	jmp    0x36d33153
  40e094:	push   ss
  40e095:	das    
  40e096:	cmp    BYTE PTR [esi-0x22545df1],dh
  40e09c:	mov    ?,WORD PTR [edi]
  40e09e:	inc    ebx
  40e09f:	stos   DWORD PTR es:[edi],eax
  40e0a0:	fs jnp 0x40e043
  40e0a3:	lock jmp 0x40e02a
  40e0a6:	push   ebp
  40e0a7:	int    0xa4
  40e0a9:	sub    BYTE PTR ds:0x32391298,cl
  40e0af:	int    0xc6
  40e0b1:	loopne 0x40e128
  40e0b3:	lods   eax,DWORD PTR ds:[esi]
  40e0b4:	retf   
  40e0b5:	ret    0x5d14
  40e0b8:	int3   
  40e0b9:	idiv   BYTE PTR [eax+0x4d]
  40e0bc:	js     0x40e059
  40e0be:	scas   eax,DWORD PTR es:[edi]
  40e0bf:	inc    edi
  40e0c0:	ret    
  40e0c1:	cdq    
  40e0c2:	cwde   
  40e0c3:	ja     0x40e0f2
  40e0c5:	xor    eax,edx
  40e0c7:	xchg   edi,eax
  40e0c8:	mov    esi,0x7fa429e1
  40e0cd:	mov    dl,ch
  40e0cf:	test   eax,0xa29fcf0d
  40e0d4:	scas   eax,DWORD PTR es:[edi]
  40e0d5:	div    BYTE PTR [eax]
  40e0d7:	enter  0x923,0xcb
  40e0db:	xchg   edx,eax
  40e0dc:	iret   
  40e0dd:	jg     0x40e0a3
  40e0df:	pop    eax
  40e0e0:	stos   BYTE PTR es:[edi],al
  40e0e1:	cmc    
  40e0e2:	repnz fisttp DWORD PTR [edi-0x22]
  40e0e6:	pop    ss
  40e0e7:	call   0x4639536a
  40e0ec:	mov    dh,0x2e
  40e0ee:	add    eax,0x3f4823c8
  40e0f3:	call   0x845221f2
  40e0f8:	pop    edx
  40e0f9:	repnz outs dx,DWORD PTR ds:[esi]
  40e0fb:	push   ebx
  40e0fc:	push   ebx
  40e0fd:	cmp    eax,0xe0b8b30d
  40e102:	retf   
  40e103:	xchg   edx,eax
  40e104:	jb     0x40e12f
  40e106:	xor    al,0xb7
  40e108:	sub    edi,esp
  40e10a:	or     DWORD PTR [edi-0x3987fd1b],edi
  40e110:	call   0x16b7:0xfb283fe9
  40e117:	adc    al,0x9a
  40e119:	cmc    
  40e11a:	cmp    BYTE PTR [esi-0x56],ah
  40e11d:	inc    ebx
  40e11e:	jg     0x40e10f
  40e120:	out    0xcc,eax
  40e122:	(bad)  
  40e123:	or     al,0x21
  40e125:	in     eax,0x4b
  40e127:	int3   
  40e128:	sub    ecx,DWORD PTR [eax-0x13]
  40e12b:	jp     0x40e102
  40e12d:	add    al,0x7b
  40e12f:	sar    dl,1
  40e131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e132:	cmc    
  40e133:	retf   0x4d5a
  40e136:	add    al,BYTE PTR [ebx-0x7472ce0d]
  40e13c:	mov    es,WORD PTR [ecx+0x4ee34790]
  40e142:	adc    eax,0x43ae66d5
  40e147:	pop    esp
  40e148:	out    dx,eax
  40e149:	push   ebx
  40e14a:	ss call 0xa62a:0xab6a80cc
  40e152:	jb     0x40e1b4
  40e154:	dec    edi
  40e155:	cmp    ebp,DWORD PTR [ecx-0x7d4e5589]
  40e15b:	push   0xdd32993e
  40e160:	loopne 0x40e140
  40e162:	jb     0x40e16b
  40e164:	call   0x8429695b
  40e169:	mov    esp,0x1f8641f4
  40e16e:	xchg   BYTE PTR [edx+ebx*8],dl
  40e171:	les    edx,FWORD PTR [eax-0x7cad2a6c]
	...
  40e17f:	call   0xbb94:0xbf94b5b1
  40e186:	mov    edi,0x1b5d8b00
  40e18b:	adc    BYTE PTR [ebp-0x1784f3f8],0x0
  40e192:	add    BYTE PTR [eax],ah
  40e194:	pop    es
  40e195:	add    BYTE PTR [eax],al
  40e197:	ins    DWORD PTR es:[edi],dx
  40e198:	pop    ebx
  40e199:	inc    ebp
  40e19a:	lods   al,BYTE PTR ds:[esi]
  40e19b:	std    
  40e19c:	and    eax,0x6417b5b8
  40e1a1:	push   ecx
  40e1a2:	stos   DWORD PTR es:[edi],eax
  40e1a3:	xchg   ebx,eax
  40e1a4:	(bad)  
  40e1a5:	cmp    edx,DWORD PTR [ecx+0x2b]
  40e1a8:	dec    eax
  40e1a9:	arpl   WORD PTR [ecx+0x6d861c32],bx
  40e1af:	dec    eax
  40e1b0:	xchg   ebx,eax
  40e1b1:	das    
  40e1b2:	push   ss
  40e1b3:	test   DWORD PTR [eax],ebp
  40e1b5:	jmp    0x40e184
  40e1b7:	daa    
  40e1b8:	jne    0x40e1ea
  40e1ba:	xlat   BYTE PTR ds:[ebx]
  40e1bb:	pop    ebp
  40e1bc:	sub    al,0x81
  40e1be:	mov    ?,WORD PTR [ecx-0x2cb21a21]
  40e1c4:	fst    DWORD PTR [ebp-0x3d]
  40e1c7:	inc    edx
  40e1c8:	add    BYTE PTR [ecx+0x4cd5436],ch
  40e1ce:	mov    al,BYTE PTR [ecx+0x5c]
  40e1d1:	dec    ecx
  40e1d2:	shr    bl,1
  40e1d4:	pop    ss
  40e1d5:	pop    ss
  40e1d6:	inc    edi
  40e1d7:	inc    ebp
  40e1d8:	adc    ch,BYTE PTR [ebp-0x2c]
  40e1db:	std    
  40e1dc:	xchg   esp,eax
  40e1dd:	push   DWORD PTR [edx+0x2c409c89]
  40e1e3:	scas   eax,DWORD PTR es:[edi]
  40e1e4:	pop    eax
  40e1e5:	dec    esp
  40e1e6:	sbb    bl,BYTE PTR [esi]
  40e1e8:	pop    edx
  40e1e9:	pop    ds
  40e1ea:	std    
  40e1eb:	cmp    BYTE PTR [edi-0x59],bl
  40e1ee:	mov    dh,0x19
  40e1f0:	adc    eax,0x3843e8ea
  40e1f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1f6:	out    0x95,al
  40e1f8:	xor    eax,0xc3bef617
  40e1fd:	pop    esi
  40e1fe:	mov    esi,0x5a9adee
  40e203:	and    edi,ebp
  40e205:	enter  0xde8e,0x48
  40e209:	add    al,0x2d
  40e20b:	push   0xffffffd7
  40e20d:	mov    esp,0x1e166fa4
  40e212:	fimul  WORD PTR [esi+0x15]
  40e215:	(bad)  
  40e216:	jl     0x40e277
  40e218:	test   eax,0xfbe05766
  40e21d:	arpl   WORD PTR [edx-0x38],ax
  40e220:	dec    ebx
  40e221:	mov    edi,0x9615b9b7
  40e226:	pop    esp
  40e227:	and    DWORD PTR [ebp-0x7b],0xfb24e4f6
  40e22e:	je     0x40e2a2
  40e230:	jbe    0x40e1e7
  40e232:	test   DWORD PTR [ecx-0x686905e7],eax
  40e238:	cmp    DWORD PTR [ebp+eax*4-0x25],eax
  40e23c:	jbe    0x40e1d9
  40e23e:	add    eax,0x7c4fb1ce
  40e243:	or     BYTE PTR [eax-0x7469f110],0xb
  40e24a:	psrlq  mm7,QWORD PTR [ebx-0x31]
  40e24e:	lds    edx,FWORD PTR [edi+0x5e40e064]
  40e254:	(bad)  
  40e256:	inc    eax
  40e257:	scas   eax,DWORD PTR es:[edi]
  40e258:	fld    QWORD PTR [ebp+esi*8+0x17afac36]
  40e25f:	jb     0x40e22c
  40e261:	sahf   
  40e262:	pusha  
  40e263:	icebp  
  40e264:	outs   dx,DWORD PTR ds:[esi]
  40e265:	add    BYTE PTR [ecx+0x59],dh
  40e268:	cmp    DWORD PTR [esi],ecx
  40e26a:	fwait
  40e26b:	mov    ebx,0xcf4248ff
  40e270:	dec    esi
  40e271:	lods   eax,DWORD PTR ds:[esi]
  40e272:	outs   dx,DWORD PTR ds:[esi]
  40e273:	int3   
  40e274:	iret   
  40e275:	pop    esp
  40e276:	mov    BYTE PTR [ebp-0x49],cl
  40e279:	dec    edx
  40e27a:	repnz cwde 
  40e27c:	cmc    
  40e27d:	aam    0x8d
  40e27f:	stos   BYTE PTR es:[edi],al
  40e280:	xor    DWORD PTR [eax+0x7a6322e4],0x4
  40e287:	mov    ds:0xdb370fd4,al
  40e28c:	mov    dh,0x17
  40e28e:	sahf   
  40e28f:	(bad)  
  40e290:	jge    0x40e2cc
  40e292:	frstor [edi-0x105d009e]
  40e298:	test   eax,0x5970ae3a
  40e29d:	or     dh,bl
  40e29f:	sti    
  40e2a0:	fsubr  DWORD PTR [esi+eiz*2]
  40e2a3:	popa   
  40e2a4:	gs ret 0x75ce
  40e2a8:	inc    ebp
  40e2a9:	imul   edx,DWORD PTR [eax+edx*8],0x23
  40e2ad:	xor    eax,0xf0f08d9e
  40e2b2:	inc    ebp
  40e2b3:	add    edi,DWORD PTR [edi]
  40e2b5:	pop    es
  40e2b6:	or     DWORD PTR [eax+edi*8+0x5f],edi
  40e2ba:	jmp    0x40e2b1
  40e2bc:	cmp    al,ch
  40e2be:	adc    dh,BYTE PTR [ebx+0x45e60300]
  40e2c4:	(bad)  [edi+edx*1+0x5e]
  40e2c8:	adc    DWORD PTR [eax-0x46],edi
  40e2cb:	add    DWORD PTR [eax+eax*4],ebp
  40e2ce:	dec    esp
  40e2cf:	mov    BYTE PTR [ecx+0x267ef113],cl
  40e2d5:	inc    ebx
  40e2d6:	push   cs
  40e2d7:	gs loope 0x40e2ef
  40e2da:	jge    0x40e321
  40e2dc:	inc    edx
  40e2dd:	ror    BYTE PTR [esi+0x28],1
  40e2e0:	ja     0x40e271
  40e2e2:	repnz ins DWORD PTR es:[edi],dx
  40e2e4:	scas   eax,DWORD PTR es:[edi]
  40e2e5:	push   esp
  40e2e6:	loop   0x40e2e6
  40e2e8:	sbb    bh,BYTE PTR [edx-0x6f]
  40e2eb:	test   BYTE PTR [ebp+edi*1-0x13],dl
  40e2ef:	aaa    
  40e2f0:	test   DWORD PTR [esi],0x363b6691
  40e2f6:	out    dx,eax
  40e2f7:	fisttp DWORD PTR [edx]
  40e2f9:	bound  edi,QWORD PTR [eax+0x24]
  40e2fc:	add    ch,BYTE PTR [esi+0x24]
  40e2ff:	(bad)  
  40e301:	sbb    al,0x67
  40e303:	shl    DWORD PTR [esp+ebx*2],0xb6
  40e307:	popf   
  40e308:	fimul  DWORD PTR ds:0x81842da4
  40e30e:	mov    ds:0x41000bc1,al
  40e313:	sub    al,BYTE PTR [esi-0x6dd5da29]
  40e319:	mov    ecx,0x857ea0f9
  40e31e:	and    eax,DWORD PTR [ecx]
  40e320:	pusha  
  40e321:	adc    BYTE PTR [edx+0x1e],bh
  40e324:	sub    eax,0xc3d7c953
  40e329:	mov    cl,0x9
  40e32b:	leave  
  40e32c:	paddb  mm1,QWORD PTR [edx-0x6fcffa86]
  40e333:	xchg   edi,eax
  40e334:	and    esp,DWORD PTR [edx]
  40e336:	icebp  
  40e337:	xchg   ecx,eax
  40e338:	xchg   esi,eax
  40e339:	xor    bl,BYTE PTR [edx]
  40e33b:	call   0xa082:0x37d34798
  40e342:	jbe    0x40e2f0
  40e344:	inc    edi
  40e345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e346:	adc    DWORD PTR [edi],edi
  40e348:	dec    ecx
  40e349:	inc    eax
  40e34a:	dec    ecx
  40e34b:	mov    bl,0x7a
  40e34d:	sub    ecx,ecx
  40e34f:	cli    
  40e350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e351:	xchg   ebp,eax
  40e352:	out    dx,eax
  40e353:	and    dl,cl
  40e355:	out    dx,al
  40e356:	dec    ecx
  40e357:	inc    DWORD PTR [edx-0x4a]
  40e35a:	enter  0xb4fc,0x4
  40e35e:	dec    edx
  40e35f:	out    0xb2,al
  40e361:	ja     0x40e398
  40e363:	outs   dx,BYTE PTR ds:[esi]
  40e364:	dec    eax
  40e365:	loope  0x40e340
  40e367:	aas    
  40e368:	sub    ah,BYTE PTR [esi-0x3a349572]
  40e36e:	push   ebx
  40e36f:	jb     0x40e3bb
  40e371:	xchg   esp,eax
  40e372:	scas   eax,DWORD PTR es:[edi]
  40e373:	jns    0x40e3ae
  40e375:	int3   
  40e376:	cmp    ch,BYTE PTR [edi-0x335e8c49]
  40e37c:	std    
  40e37d:	sbb    eax,0x2f1e362b
  40e382:	jae    0x40e3fd
  40e384:	aaa    
  40e385:	lock mov edx,0xe3868d9b
  40e38b:	stos   DWORD PTR es:[edi],eax
  40e38c:	jmp    0x40e313
  40e38e:	ds mov ecx,0xf559c51e
  40e394:	mov    al,0xde
  40e396:	or     al,0xf9
  40e398:	popa   
  40e399:	ror    DWORD PTR [esi+0x1f7373df],0x39
  40e3a0:	xor    al,0x5b
  40e3a2:	stos   DWORD PTR es:[edi],eax
  40e3a3:	mov    cs,WORD PTR [ecx*1-0x478ed268]
  40e3aa:	and    DWORD PTR [ebp-0x5],ecx
  40e3ad:	add    cl,bl
  40e3af:	adc    al,0x8f
  40e3b1:	mov    WORD PTR [edx-0x651beae9],cs
  40e3b7:	sub    eax,DWORD PTR [ecx]
  40e3b9:	hlt    
  40e3ba:	stc    
  40e3bb:	jge    0x40e392
  40e3bd:	mov    dl,0xc3
  40e3bf:	out    0x2e,al
  40e3c1:	cmp    al,0xa
  40e3c3:	adc    al,0x5d
  40e3c5:	jb     0x40e435
  40e3c7:	cli    
  40e3c8:	push   ds
  40e3c9:	adc    eax,0xcca9b185
  40e3ce:	jmp    0x4326dc25
  40e3d3:	pop    edx
  40e3d4:	inc    ebx
  40e3d5:	ss sub edx,ebp
  40e3d8:	mov    ecx,edx
  40e3da:	xchg   ebx,eax
  40e3db:	lods   al,BYTE PTR ds:[esi]
  40e3dc:	pushf  
  40e3dd:	add    ecx,DWORD PTR [ebx+ebx*1-0x6a]
  40e3e1:	inc    ecx
  40e3e2:	sbb    DWORD PTR [ecx-0x15f5b95d],ebp
  40e3e8:	retf   0x2bce
  40e3eb:	or     BYTE PTR [ebx+0x4c],ah
  40e3ee:	stos   BYTE PTR es:[edi],al
  40e3ef:	(bad)  
  40e3f0:	jae    0x40e421
  40e3f2:	fidiv  WORD PTR [eiz*2-0x4a6c3a70]
  40e3f9:	mov    ch,0x41
  40e3fb:	jp     0x40e3ab
  40e3fd:	push   eax
  40e3fe:	mov    bh,0xb3
  40e400:	pop    edx
  40e401:	sti    
  40e402:	cmp    eax,0x327a6a9
  40e407:	xor    al,0x26
  40e409:	push   0x4653057e
  40e40e:	inc    esp
  40e40f:	mov    DWORD PTR gs:[ebx-0x12bf119e],ebp
  40e416:	in     al,dx
  40e417:	clts   
  40e419:	loopne 0x40e3ff
  40e41b:	sub    al,0x3a
  40e41d:	test   BYTE PTR [eax],ah
  40e41f:	outs   dx,BYTE PTR ds:[esi]
  40e420:	stc    
  40e421:	leave  
  40e422:	(bad)  
  40e423:	and    ebx,edx
  40e425:	push   0x6
  40e427:	mov    WORD PTR [eax-0x45f9cb9],ss
  40e42d:	fcmovne st,st(2)
  40e42f:	int3   
  40e430:	push   esp
  40e431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e432:	aas    
  40e433:	imul   DWORD PTR [ecx+ebx*4-0x4f]
  40e437:	scas   al,BYTE PTR es:[edi]
  40e438:	xor    eax,0x8074ee6c
  40e43d:	mov    bl,0x43
  40e43f:	jno    0x40e3d6
  40e441:	fwait
  40e442:	lods   al,BYTE PTR ds:[esi]
  40e443:	mov    dl,0x97
  40e445:	fild   WORD PTR [ecx-0x321f06e1]
  40e44b:	jg     0x40e3ff
  40e44d:	push   ebx
  40e44e:	xor    ecx,DWORD PTR [ebx]
  40e450:	cmp    eax,DWORD PTR [ecx+eax*4-0x2a7264c9]
  40e457:	inc    ebx
  40e458:	fabs   
  40e45a:	hlt    
  40e45b:	inc    edx
  40e45c:	loope  0x40e498
  40e45e:	iret   
  40e45f:	pop    ebx
  40e460:	mov    ebp,0x4d4fd166
  40e465:	pop    esp
  40e466:	sub    BYTE PTR [ebx+0x12],0x54
  40e46a:	sar    BYTE PTR [eax],cl
  40e46c:	sub    DWORD PTR [ebp-0x4457b36c],0x1312c10c
  40e476:	and    cl,BYTE PTR [ebx]
  40e478:	push   ebp
  40e479:	test   BYTE PTR [ebx+0x15783dbb],al
  40e47f:	xor    cl,BYTE PTR ds:0x3673169b
  40e485:	in     al,dx
  40e486:	jmp    0x40e42c
  40e488:	mov    dl,0xf8
  40e48a:	inc    ecx
  40e48b:	inc    edx
  40e48c:	les    esi,FWORD PTR [ebp-0x93380e]
  40e492:	lods   al,BYTE PTR ds:[esi]
  40e493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e494:	pop    edx
  40e495:	mov    dh,0x1a
  40e497:	retf   0x8106
  40e49a:	xchg   edx,eax
  40e49b:	iret   
  40e49c:	jmp    0x8573:0x778d3218
  40e4a3:	rdtsc  
  40e4a5:	jle    0x40e471
  40e4a7:	lahf   
  40e4a8:	add    BYTE PTR [edi+0x1422be4c],cl
  40e4ae:	push   es
  40e4af:	cli    
  40e4b0:	into   
  40e4b1:	test   ah,al
  40e4b3:	cwde   
  40e4b4:	xchg   esp,eax
  40e4b5:	or     BYTE PTR [ecx+ebp*1],0xeb
  40e4b9:	mov    ebp,ecx
  40e4bb:	out    0x15,al
  40e4bd:	xor    DWORD PTR [ecx-0x22ec0d65],edi
  40e4c3:	add    edx,DWORD PTR [ebp-0x956ca01]
  40e4c9:	mov    ah,0xa5
  40e4cb:	xor    esi,DWORD PTR [esp+ebx*1+0x5c424d48]
  40e4d2:	adc    al,0x5c
  40e4d4:	pop    esi
  40e4d5:	int    0x1c
  40e4d7:	ins    BYTE PTR es:[edi],dx
  40e4d8:	mov    dh,0x71
  40e4da:	add    eax,0x17f295ba
  40e4df:	push   ss
  40e4e0:	xor    al,0xc5
  40e4e2:	fmul   DWORD PTR [edi-0x4c75bab3]
  40e4e8:	xor    esi,0x25f34cc8
  40e4ee:	and    BYTE PTR [ebx+0x76267a3c],bl
  40e4f4:	daa    
  40e4f5:	mov    ds:0x6793d6a6,eax
  40e4fa:	or     al,0xe4
  40e4fc:	into   
  40e4fd:	xor    BYTE PTR [edi*1-0x3bbcc002],cl
  40e504:	xchg   esp,eax
  40e505:	push   esi
  40e506:	pushf  
  40e507:	mov    bh,0x65
  40e509:	jnp    0x40e513
  40e50b:	jb     0x40e4b9
  40e50d:	jnp    0x40e4e4
  40e50f:	(bad)  
  40e510:	(bad)  
  40e512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e513:	test   eax,0x5b1cd16a
  40e518:	int    0x2c
  40e51a:	adc    BYTE PTR [esi-0x4b],ch
  40e51d:	xor    BYTE PTR [esi+eax*8],cl
  40e520:	aaa    
  40e521:	scas   al,BYTE PTR es:[edi]
  40e522:	inc    edi
  40e523:	xor    ah,BYTE PTR [esi+0x58]
  40e526:	sbb    ch,ch
  40e528:	adc    edx,ebp
  40e52a:	bound  ecx,QWORD PTR [ebp-0x6c]
  40e52d:	push   ecx
  40e52e:	(bad)
  40e531:	mov    eax,ds:0xeb76b52c
  40e536:	mov    WORD PTR [ecx+0x705e2d2b],fs
  40e53c:	std    
  40e53d:	jle    0x40e525
  40e53f:	scas   eax,DWORD PTR es:[edi]
  40e540:	inc    DWORD PTR [ebp-0x71]
  40e543:	mov    bh,0x7c
  40e545:	sub    eax,0xb5b79e65
  40e54a:	add    bh,BYTE PTR [ebp+ebp*1-0x4f]
  40e54e:	fwait
  40e54f:	cmp    ebp,edx
  40e551:	mov    ds:0x1284bbfb,eax
  40e556:	je     0x40e52c
  40e558:	ss dec ebx
  40e55a:	jmp    esi
  40e55c:	pushf  
  40e55d:	retf   0xc82e
  40e560:	or     BYTE PTR [edi-0x10],0x92
  40e564:	sbb    ecx,DWORD PTR [edx+ebx*8-0x64]
  40e568:	add    eax,0xb59cef79
  40e56d:	fild   DWORD PTR [esi+0xe]
  40e570:	cwde   
  40e571:	jg     0x40e503
  40e573:	ret    
  40e574:	test   eax,0xfd1c3940
  40e579:	pushf  
  40e57a:	daa    
  40e57b:	int    0xf3
  40e57d:	arpl   WORD PTR [esp+edi*4+0x902cc50],sp
  40e584:	jge    0x40e5d5
  40e586:	stos   BYTE PTR es:[edi],al
  40e587:	cmp    al,0xcd
  40e589:	sub    DWORD PTR [edx],edi
  40e58b:	jl     0x40e51a
  40e58d:	xchg   ecx,eax
  40e58e:	test   DWORD PTR [ecx-0x3d],edi
  40e591:	push   esp
  40e592:	mov    esp,0x80ee2486
  40e597:	(bad)  
  40e598:	cs (bad) 
  40e59a:	push   edx
  40e59b:	sub    DWORD PTR [edx-0x53],esi
  40e59e:	xor    al,ah
  40e5a0:	ins    BYTE PTR es:[edi],dx
  40e5a1:	mov    esp,0xaff1d196
  40e5a6:	int3   
  40e5a7:	fadd   st(2),st
  40e5a9:	jmp    0x23d9:0x1d1fea33
  40e5b0:	loopne 0x40e5d9
  40e5b2:	inc    esp
  40e5b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5b4:	out    0x90,al
  40e5b6:	sub    DWORD PTR [edi+ecx*1-0x4c528bd4],ebp
  40e5bd:	cli    
  40e5be:	pop    ds
  40e5bf:	dec    eax
  40e5c0:	jle    0x40e5ec
  40e5c2:	enter  0x972,0xd6
  40e5c6:	clc    
  40e5c7:	push   ebp
  40e5c8:	aaa    
  40e5c9:	or     al,0xed
  40e5cb:	idiv   al
  40e5cd:	mov    edi,DWORD PTR [esi-0x4c]
  40e5d0:	cwde   
  40e5d1:	jmp    0x33e023da
  40e5d6:	ret    0x45e8
  40e5d9:	stos   BYTE PTR es:[edi],al
  40e5da:	xchg   ebx,eax
  40e5db:	shl    DWORD PTR [eax-0x44830862],1
  40e5e1:	je     0x40e58d
  40e5e3:	mov    bh,BYTE PTR [edx]
  40e5e5:	mov    bl,0x3f
  40e5e7:	mov    esi,0x6773aea3
  40e5ec:	push   ds
  40e5ed:	adc    bh,ah
  40e5ef:	and    al,0x47
  40e5f1:	jg     0x40e613
  40e5f3:	cwde   
  40e5f4:	out    0x61,al
  40e5f6:	enter  0xa9d1,0xc5
  40e5fa:	data16 mov bl,0xa8
  40e5fd:	sub    eax,0xf72d10c8
  40e602:	in     al,dx
  40e603:	(bad)  
  40e604:	adc    BYTE PTR [edi+0x56130b61],ch
  40e60a:	xchg   edx,eax
  40e60b:	push   edi
  40e60c:	(bad)  
  40e60d:	sbb    eax,0x8192cd68
  40e612:	jp     0x40e633
  40e614:	or     al,BYTE PTR [ecx-0x1c]
  40e617:	add    edi,DWORD PTR [eax]
  40e619:	cmp    DWORD PTR [esi],esp
  40e61b:	aam    0x9f
  40e61d:	lds    ebx,FWORD PTR [ebx-0x1a]
  40e620:	ror    DWORD PTR [edx+0x2c4bce10],1
  40e626:	fdivr  DWORD PTR [ecx]
  40e628:	outs   dx,DWORD PTR ds:[esi]
  40e629:	ja     0x40e65b
  40e62b:	sar    DWORD PTR [ebx],0x10
  40e62e:	sbb    DWORD PTR [edx],0x5f
  40e631:	icebp  
  40e632:	or     esp,esp
  40e634:	mov    DWORD PTR [ebx-0x74fe2091],ebp
  40e63a:	jg     0x40e685
  40e63c:	fwait
  40e63d:	test   al,0x65
  40e63f:	pop    es
  40e640:	add    al,0xf5
  40e642:	in     al,0xf5
  40e644:	cs jns 0x40e6b8
  40e647:	inc    ebx
  40e648:	jmp    0x849450e4
  40e64d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e64e:	add    BYTE PTR [esi-0x5f11343d],bh
  40e654:	call   0xbd83:0x6604509e
  40e65b:	(bad)  
  40e65c:	jmp    0xc16e5406
  40e661:	repz sahf 
  40e663:	push   0xffffff99
  40e665:	inc    ebp
  40e666:	fmul   st(6),st
  40e668:	call   0x59d0:0xac1e33be
  40e66f:	adc    eax,0xedce54b1
  40e674:	aam    0x9e
  40e676:	or     eax,0x8538f66e
  40e67b:	and    ebp,DWORD PTR [edx]
  40e67d:	imul   esi,edi,0xffffffbd
  40e680:	addr16 fldz 
  40e683:	adc    DWORD PTR [ebx],esi
  40e685:	fs jnp 0x40e6c5
  40e688:	sbb    al,0xcc
  40e68a:	sbb    ebp,DWORD PTR [ebp-0x52]
  40e68d:	das    
  40e68e:	mov    al,0x7b
  40e690:	xor    BYTE PTR [edx-0xcebce94],dh
  40e696:	sbb    BYTE PTR [edx],bh
  40e698:	rol    al,1
  40e69a:	dec    esi
  40e69b:	ss push esp
  40e69d:	cmp    ecx,DWORD PTR [esi+0x13]
  40e6a0:	dec    esi
  40e6a1:	push   eax
  40e6a2:	inc    ecx
  40e6a3:	loopne 0x40e70a
  40e6a5:	dec    edi
  40e6a6:	mov    eax,ds:0xe5c0162e
  40e6ab:	scas   eax,DWORD PTR es:[edi]
  40e6ac:	dec    DWORD PTR [eax-0x5a]
  40e6af:	das    
  40e6b0:	clc    
  40e6b1:	mov    ch,0xb5
  40e6b3:	xor    al,0x3f
  40e6b5:	xchg   DWORD PTR [ebx-0x71ffa4de],ebx
  40e6bb:	mov    bl,0x72
  40e6bd:	mov    dh,0xb2
  40e6bf:	or     esp,ecx
  40e6c1:	out    dx,eax
  40e6c2:	repz daa 
  40e6c4:	ret    
  40e6c5:	add    ecx,DWORD PTR [edi-0x6787a2a]
  40e6cb:	jecxz  0x40e679
  40e6cd:	scas   eax,DWORD PTR es:[edi]
  40e6ce:	(bad)  
  40e6d0:	loopne 0x40e6b2
  40e6d2:	dec    edx
  40e6d3:	ror    DWORD PTR [ebx+0x40bf89ce],0xe6
  40e6da:	outs   dx,BYTE PTR ds:[esi]
  40e6db:	mov    eax,?
  40e6dd:	scas   al,BYTE PTR es:[edi]
  40e6de:	jp     0x40e672
  40e6e0:	in     al,dx
  40e6e1:	sbb    bh,bh
  40e6e3:	jae    0x40e70a
  40e6e5:	aad    0xd4
  40e6e7:	test   ch,al
  40e6e9:	sub    al,0x8b
  40e6eb:	and    ebp,DWORD PTR [ebx]
  40e6ed:	push   eax
  40e6ee:	mov    eax,0xc2b81429
  40e6f3:	push   ecx
  40e6f4:	sbb    bl,al
  40e6f6:	cmp    ch,bl
  40e6f8:	cs adc dl,cl
  40e6fb:	xchg   edx,eax
  40e6fc:	arpl   WORD PTR [ecx-0x5e8c1b0b],ax
  40e702:	sbb    eax,0x67a0e1d5
  40e707:	push   esi
  40e708:	mov    ch,0x4
  40e70a:	scas   eax,DWORD PTR es:[edi]
  40e70b:	and    BYTE PTR [edi],0x70
  40e70e:	popa   
  40e70f:	call   0xf44cd73f
  40e714:	pop    esi
  40e715:	pop    edi
  40e716:	dec    esi
  40e717:	adc    eax,edx
  40e719:	mov    dh,0x34
  40e71b:	jnp    0x40e793
  40e71d:	stos   DWORD PTR es:[edi],eax
  40e71e:	fsubp  st(3),st
  40e720:	int3   
  40e721:	scas   eax,DWORD PTR es:[edi]
  40e722:	jb     0x40e763
  40e724:	mov    ebx,0xddbe50c3
  40e729:	push   ebx
  40e72a:	jmp    0x40e782
  40e72c:	js     0x40e7ac
  40e72e:	add    DWORD PTR ss:[eax+0x65],edx
  40e732:	adc    BYTE PTR [ebx-0x67],al
  40e735:	out    dx,eax
  40e736:	mov    ebx,0xb975b0e8
  40e73b:	mov    eax,0xd3bb9e04
  40e740:	pop    ss
  40e741:	sub    eax,0xf58f2dd9
  40e746:	and    DWORD PTR [edx],eax
  40e748:	cmp    DWORD PTR [edi-0x26977a24],0xf03f24ea
  40e752:	push   ss
  40e753:	fwait
  40e754:	ja     0x40e795
  40e756:	mov    dh,0x76
  40e758:	mov    ah,BYTE PTR [edx]
  40e75a:	and    ebx,DWORD PTR [ebx]
  40e75c:	ret    0x8639
  40e75f:	out    0x39,al
  40e761:	std    
  40e762:	sar    DWORD PTR [edi+0xd0de164],1
  40e768:	enter  0x2908,0x38
  40e76c:	sbb    eax,DWORD PTR [edi+eiz*2]
  40e76f:	inc    edi
  40e770:	sbb    esp,eax
  40e772:	jecxz  0x40e74e
  40e774:	adc    DWORD PTR [edi+0x57],ebp
  40e777:	loope  0x40e71f
  40e779:	out    dx,eax
  40e77a:	adc    DWORD PTR [ecx-0x49c82f2d],edx
  40e780:	push   edx
  40e781:	fld    DWORD PTR [edx-0x26f7611]
  40e787:	cld    
  40e788:	test   eax,0x51b9191a
  40e78d:	stos   DWORD PTR es:[edi],eax
  40e78e:	push   ecx
  40e78f:	and    esi,DWORD PTR [esi+0x48]
  40e792:	xor    edx,ebx
  40e794:	lods   al,BYTE PTR ds:[esi]
  40e795:	shl    edx,0xf5
  40e798:	pop    esi
  40e799:	(bad)  [eax+0x7093cc77]
  40e79f:	sbb    ecx,DWORD PTR [esi-0x32b599f8]
  40e7a5:	psrlw  mm4,QWORD PTR [ebx]
  40e7a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7a9:	test   al,0x38
  40e7ab:	sub    ebx,DWORD PTR [ebp*1-0x58e54ba8]
  40e7b2:	pop    esp
  40e7b3:	std    
  40e7b4:	cli    
  40e7b5:	div    DWORD PTR [esi]
  40e7b7:	or     al,0xea
  40e7b9:	inc    ebx
  40e7ba:	subps  xmm3,XMMWORD PTR [ebx-0x6255676f]
  40e7c1:	out    dx,eax
  40e7c2:	shl    DWORD PTR ds:0x6ccf7079,0xb1
  40e7c9:	mov    cl,0x13
  40e7cb:	push   ss
  40e7cc:	sahf   
  40e7cd:	pop    edi
  40e7ce:	xchg   esi,eax
  40e7cf:	push   ecx
  40e7d0:	cdq    
  40e7d1:	mov    ebp,0x61ec8d49
  40e7d6:	mov    ds:0xb0bfec89,al
  40e7db:	(bad)  
  40e7dc:	int3   
  40e7dd:	jmp    DWORD PTR [eax-0x35]
  40e7e0:	mul    DWORD PTR [edx-0x34c09861]
  40e7e6:	shl    DWORD PTR [eax],0xbf
  40e7e9:	sbb    ch,cl
  40e7eb:	inc    esp
  40e7ec:	jmp    0x40e819
  40e7ee:	cmp    BYTE PTR [esi+0x19],dh
  40e7f1:	xor    ecx,DWORD PTR [esi-0x61]
  40e7f4:	lods   al,BYTE PTR ds:[esi]
  40e7f5:	inc    esp
  40e7f6:	repz aad 0xdf
  40e7f9:	(bad)  
  40e7fa:	xor    al,BYTE PTR [ebx+0x2c01082c]
  40e800:	ins    BYTE PTR es:[edi],dx
  40e801:	std    
  40e802:	push   es
  40e803:	or     ecx,ecx
  40e805:	or     DWORD PTR [eax-0x345b4981],eax
  40e80b:	cwde   
  40e80c:	add    DWORD PTR [edi+0x61b89610],ecx
  40e812:	push   ebp
  40e813:	jecxz  0x40e7cf
  40e815:	sub    ebx,DWORD PTR [ecx-0x52]
  40e818:	pop    ss
  40e819:	out    dx,eax
  40e81a:	xor    DWORD PTR [edi],esp
  40e81c:	jmp    0x40e860
  40e81e:	mov    edx,0xcb4b6abd
  40e823:	je     0x40e827
  40e825:	sbb    eax,0x7d198656
  40e82a:	es dec eax
  40e82c:	push   cs
  40e82d:	xchg   edi,ecx
  40e82f:	sbb    bl,BYTE PTR [ecx]
  40e831:	inc    ebp
  40e832:	sbb    eax,DWORD PTR [ebx+0x44]
  40e835:	dec    edi
  40e836:	daa    
  40e837:	mov    ebp,0xb587fbad
  40e83c:	push   edi
  40e83d:	xor    dl,BYTE PTR [edi+0x13ef9fff]
  40e843:	push   0xae4a2871
  40e848:	fcomp  DWORD PTR [ebp+ebx*8-0x27d47665]
  40e84f:	dec    eax
  40e850:	push   0x59
  40e852:	or     BYTE PTR [ecx-0x44],0x5f
  40e856:	fwait
  40e857:	call   0xab44:0xec979f24
  40e85e:	icebp  
  40e85f:	push   0x1e7e064f
  40e864:	mov    ebx,0x38c2eb77
  40e869:	and    ecx,eax
  40e86b:	mov    ebx,0x8af5ae8d
  40e870:	sub    cl,BYTE PTR [ebx-0x5e7d048b]
  40e876:	add    al,BYTE PTR fs:[edx+0x3]
  40e87a:	mov    ebx,0x64c509bf
  40e87f:	call   0x506d17e1
  40e884:	dec    ebp
  40e885:	bound  edi,QWORD PTR [edx+ecx*4-0x72]
  40e889:	push   ss
  40e88a:	xchg   BYTE PTR [edx],ah
  40e88c:	fisub  WORD PTR [ebp-0x23]
  40e88f:	push   ecx
  40e890:	xchg   esi,eax
  40e891:	imul   eax,DWORD PTR [esi-0x45cdcdfc],0x9
  40e898:	mov    ds:0x8d9c7384,al
  40e89d:	cmp    al,ah
  40e89f:	mov    BYTE PTR [edx-0x46],0x63
  40e8a3:	shl    bl,1
  40e8a5:	jae    0x40e926
  40e8a7:	popf   
  40e8a8:	push   esi
  40e8a9:	sbb    al,0xef
  40e8ab:	cld    
  40e8ac:	hlt    
  40e8ad:	data16 jo 0x40e83f
  40e8b0:	stos   BYTE PTR es:[edi],al
  40e8b1:	xchg   edi,eax
  40e8b2:	out    dx,al
  40e8b3:	cmp    DWORD PTR [ecx],0x53
  40e8b6:	inc    edx
	...
  40e8bf:	push   0x7cbe6434
  40e8c4:	(bad)  
  40e8c5:	cli    
  40e8c6:	div    BYTE PTR [ebx+0x5bd4d49d]
  40e8cc:	shl    DWORD PTR ds:0xef9bef,cl
  40e8d2:	add    BYTE PTR [eax],ah
  40e8d4:	pop    es
  40e8d5:	add    BYTE PTR [eax],al
  40e8d7:	xchg   ebp,eax
  40e8d8:	push   0xd22209e7
  40e8dd:	sbb    edi,0xd3bb255c
  40e8e3:	rol    bh,cl
  40e8e5:	dec    edx
  40e8e6:	cmp    ebp,DWORD PTR [eax+ecx*1-0x6d]
  40e8ea:	sub    BYTE PTR [ebx+0x4c],ah
  40e8ed:	ret    
  40e8ee:	xchg   ebp,eax
  40e8ef:	push   ebx
  40e8f0:	add    eax,0xbc431a8b
  40e8f5:	rcl    BYTE PTR ds:0xe7bda1f4,0xd8
  40e8fc:	mov    eax,0x8695fbf3
  40e901:	dec    esp
  40e902:	inc    ecx
  40e903:	xor    al,BYTE PTR ss:[edx]
  40e906:	inc    edx
  40e907:	xor    ch,BYTE PTR [edi-0x21]
  40e90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e90b:	dec    ebx
  40e90c:	add    ebp,DWORD PTR [edx]
  40e90e:	push   ebp
  40e90f:	mov    ds:0x935f3da0,eax
  40e914:	int3   
  40e915:	jmp    0x3e5d:0xa27c314a
  40e91c:	cmp    BYTE PTR [edi],ah
  40e91e:	jnp    0x40e92f
  40e920:	or     al,0x4
  40e922:	jecxz  0x40e927
  40e924:	xchg   edx,eax
  40e925:	(bad)  
  40e926:	pusha  
  40e927:	ret    
  40e928:	push   eax
  40e929:	sti    
  40e92a:	xlat   BYTE PTR ds:[ebx]
  40e92b:	nop
  40e92c:	inc    edx
  40e92d:	loopne 0x40e942
  40e92f:	sub    BYTE PTR [ecx],0x1
  40e932:	iret   
  40e933:	(bad)  
  40e935:	les    esp,FWORD PTR [edx+0x7c]
  40e938:	push   ecx
  40e939:	cmp    BYTE PTR [ebx+0x56],al
  40e93c:	pop    ds
  40e93d:	lea    eax,[esi+esi*1-0x74dfa712]
  40e944:	aam    0x4c
  40e946:	push   edx
  40e947:	retf   
  40e948:	sub    BYTE PTR [ebp-0x32],dl
  40e94b:	out    dx,al
  40e94c:	sbb    al,0xb1
  40e94e:	imul   ebp,DWORD PTR [edi+0x78],0xf0e4d64f
  40e955:	dec    edi
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	xor    ebx,DWORD PTR [ebp+edi*4-0x37]
  40e95b:	mov    ch,0x52
  40e95d:	jle    0x40e8f2
  40e95f:	xchg   edx,eax
  40e960:	in     eax,0x7d
  40e962:	jp     0x40e9d5
  40e964:	ins    DWORD PTR es:[edi],dx
  40e965:	std    
  40e966:	pop    ss
  40e967:	dec    esp
  40e968:	iret   
  40e969:	fld    DWORD PTR [ebx+0x66]
  40e96c:	dec    ebp
  40e96d:	inc    ebp
  40e96e:	xchg   edi,eax
  40e96f:	in     eax,dx
  40e970:	pop    ebx
  40e971:	loope  0x40e9ee
  40e973:	sub    al,0xcc
  40e975:	mov    bl,0xba
  40e977:	add    edx,DWORD PTR [edx+0xc8250c5]
  40e97d:	mov    ah,0xe0
  40e97f:	nop
  40e980:	loope  0x40e9ee
  40e982:	or     DWORD PTR [esp+edx*4],edx
  40e985:	loop   0x40e9b8
  40e987:	test   DWORD PTR [edi],0x3cded5d4
  40e98d:	pop    ds
  40e98e:	popa   
  40e98f:	xchg   ecx,eax
  40e990:	and    dh,BYTE PTR [edx-0x2928d4ec]
  40e996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e997:	dec    esi
  40e998:	sar    BYTE PTR [ecx+0x51],cl
  40e99b:	or     DWORD PTR [edi-0x12],ecx
  40e99e:	adc    al,0xa1
  40e9a0:	xor    ebp,DWORD PTR ds:0xe8d91dc0
  40e9a6:	sub    esi,ecx
  40e9a8:	or     esp,edi
  40e9aa:	push   edx
  40e9ab:	xchg   BYTE PTR [ecx+0x0],al
  40e9ae:	jo     0x40e9dc
  40e9b0:	mov    bl,0x65
  40e9b2:	loope  0x40e965
  40e9b4:	xchg   edi,eax
  40e9b5:	out    0xc6,al
  40e9b7:	test   BYTE PTR [eax+ebp*4-0x446d3360],bh
  40e9be:	imul   ecx,DWORD PTR [ebx-0xd2319a5],0xe20833a2
  40e9c8:	or     dh,bh
  40e9ca:	popw   es
  40e9cc:	xchg   esp,eax
  40e9cd:	ffree  st(3)
  40e9cf:	push   0x1c1cd5b7
  40e9d4:	pop    edx
  40e9d5:	pop    ds
  40e9d6:	xchg   edx,eax
  40e9d7:	loopne 0x40ea08
  40e9d9:	ret    0x2f3f
  40e9dc:	jle    0x40e9ca
  40e9de:	push   es
  40e9df:	(bad)  
  40e9e0:	repnz in eax,dx
  40e9e2:	fadd   QWORD PTR [ebx+0x3e]
  40e9e5:	in     eax,dx
  40e9e6:	into   
  40e9e7:	add    dh,BYTE PTR [eax+0x16fc7176]
  40e9ed:	xor    eax,0x9f39c341
  40e9f2:	xlat   BYTE PTR ds:[ebx]
  40e9f3:	sbb    BYTE PTR [ebp-0x1872ea2f],ch
  40e9f9:	sbb    eax,0x1e392bde
  40e9fe:	mov    cl,0xb4
  40ea00:	or     eax,0x539f8180
  40ea05:	fdivr  DWORD PTR [edx]
  40ea07:	cmp    esi,edi
  40ea09:	pop    es
  40ea0a:	inc    ebx
  40ea0b:	and    DWORD PTR [ebx+edx*4-0x1b],ebx
  40ea0f:	into   
  40ea10:	mov    DWORD PTR ds:0xcfd040fe,edi
  40ea16:	mov    esp,0x1a097955
  40ea1b:	push   esi
  40ea1c:	mov    ebx,0x4abb836a
  40ea21:	xor    ebx,DWORD PTR [ebp-0x2a]
  40ea24:	dec    ecx
  40ea25:	jo     0x40ea9f
  40ea27:	shr    ch,0x45
  40ea2a:	loope  0x40ea62
  40ea2c:	cwde   
  40ea2d:	nop
  40ea2e:	and    DWORD PTR ds:0xe9bd33ec,esp
  40ea34:	mov    ebx,eax
  40ea36:	jo     0x40eaa6
  40ea38:	test   eax,0x9e091fe7
  40ea3d:	(bad)  [ecx-0x62]
  40ea40:	out    0x8d,al
  40ea42:	data16 sbb al,0x2f
  40ea45:	(bad)  
  40ea46:	daa    
  40ea47:	add    eax,0xea55c306
  40ea4c:	xchg   DWORD PTR [edi+0x21],eax
  40ea4f:	fwait
  40ea50:	iret   
  40ea51:	stc    
  40ea52:	lods   eax,DWORD PTR ds:[esi]
  40ea53:	pop    es
  40ea54:	mov    esi,0x46b23921
  40ea59:	cmp    DWORD PTR [edx+eiz*1-0x6e27500],esp
  40ea60:	cmp    dl,BYTE PTR [ebx]
  40ea62:	xchg   DWORD PTR [edi+edi*2+0x0],ebp
  40ea66:	iret   
  40ea67:	add    eax,0xdcdf9ade
  40ea6c:	data16 aad 0x3d
  40ea6f:	adc    al,0xa9
  40ea71:	(bad)  
  40ea72:	test   DWORD PTR [ecx+0x339ebaf6],0x93026713
  40ea7c:	push   cs
  40ea7d:	jo     0x40eaab
  40ea7f:	ins    DWORD PTR es:[edi],dx
  40ea80:	aad    0xf1
  40ea82:	je     0x40ea24
  40ea84:	sbb    ch,bh
  40ea86:	xchg   ebx,eax
  40ea87:	scas   eax,DWORD PTR es:[edi]
  40ea88:	idiv   DWORD PTR [edx]
  40ea8a:	push   cs
  40ea8b:	pop    edi
  40ea8c:	in     al,dx
  40ea8d:	arpl   WORD PTR [eax-0x2d115a3],si
  40ea93:	and    esp,edi
  40ea95:	cli    
  40ea96:	jmp    0xe2e5:0xdd7728b3
  40ea9d:	in     al,dx
  40ea9e:	jl     0x40ea47
  40eaa0:	push   ss
  40eaa1:	(bad)  
  40eaa2:	hlt    
  40eaa3:	(bad)  
  40eaa4:	sbb    eax,DWORD PTR [edx+0x5fba593c]
  40eaaa:	or     al,0x9e
  40eaac:	in     al,0x56
  40eaae:	vpaddsw ymm1,ymm1,YMMWORD PTR [esi+esi*2+0x668e3b80]
  40eab7:	mov    ds:0xd3c9debc,al
  40eabc:	jbe    0x40ea91
  40eabe:	sbb    al,0xa8
  40eac0:	loopne 0x40eac8
  40eac2:	test   eax,0xe842944b
  40eac7:	inc    edi
  40eac8:	loopne 0x40eaca
  40eaca:	mov    cl,0xe8
  40eacc:	cdq    
  40eacd:	push   ebp
  40eace:	cmp    cl,BYTE PTR [edi]
  40ead0:	mov    ebx,0x3ec199ba
  40ead5:	adc    bl,BYTE PTR [eax]
  40ead7:	jbe    0x40eaf7
  40ead9:	push   0x1a
  40eadb:	pop    ss
  40eadc:	call   0x36d7:0xd1f4d0df
  40eae3:	push   edx
  40eae4:	mov    al,0x42
  40eae6:	out    0xa7,eax
  40eae8:	js     0x40ea70
  40eaea:	mov    ebp,0x60c76b17
  40eaef:	ds cmp dx,0xffc4
  40eaf4:	jmp    DWORD PTR [ecx]
  40eaf6:	xchg   esp,eax
  40eaf7:	mov    esp,0xc2d25fdf
  40eafc:	aas    
  40eafd:	fisubr WORD PTR [eax+0x64d6692c]
  40eb03:	sti    
  40eb04:	fst    st(6)
  40eb06:	popa   
  40eb07:	add    ebp,DWORD PTR [ebp-0x39]
  40eb0a:	cmp    dh,BYTE PTR [ecx]
  40eb0c:	or     eax,0x1ad20bcd
  40eb11:	jge    0x40eb10
  40eb13:	jo     0x40eb3c
  40eb15:	hlt    
  40eb16:	jp     0x40eb16
  40eb18:	pop    eax
  40eb19:	(bad)  
  40eb1a:	push   edi
  40eb1b:	out    0x39,eax
  40eb1d:	outs   dx,WORD PTR ds:[esi]
  40eb1f:	ss jns 0x40eb91
  40eb22:	or     bl,BYTE PTR [ecx-0x3c7f903]
  40eb28:	(bad)  
  40eb29:	rcl    ebx,0x9a
  40eb2c:	mov    ds:0x439b4e0d,al
  40eb31:	mov    edi,0x28403bc9
  40eb36:	fcom   DWORD PTR [eax+ebx*1+0x4f38537e]
  40eb3d:	and    al,BYTE PTR [edx+0x6a62cc03]
  40eb43:	lock daa 
  40eb45:	add    eax,0x9731f8f4
  40eb4a:	out    dx,eax
  40eb4b:	test   BYTE PTR [ebx],dl
  40eb4d:	jbe    0x40ebb4
  40eb4f:	out    dx,eax
  40eb50:	mov    al,0xd4
  40eb52:	cwde   
  40eb53:	and    ecx,DWORD PTR [ecx]
  40eb55:	pusha  
  40eb56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb57:	jge    0x40ebd4
  40eb59:	add    eax,0x8fc5465a
  40eb5e:	scas   al,BYTE PTR es:[edi]
  40eb5f:	sbb    eax,0x5cdec3c9
  40eb64:	sbb    dh,BYTE PTR [edx+0x5b]
  40eb67:	mov    bl,0xe1
  40eb69:	sub    ebp,DWORD PTR [edi+0x40]
  40eb6c:	mov    edx,0xd525c8bf
  40eb71:	mov    ah,BYTE PTR [ecx-0x80]
  40eb74:	ds popa 
  40eb76:	pop    ss
  40eb77:	rol    DWORD PTR [ebx+0x4f],cl
  40eb7a:	jecxz  0x40eb13
  40eb7c:	sbb    eax,0x9ae80e44
  40eb81:	lods   al,BYTE PTR ds:[esi]
  40eb82:	and    bh,BYTE PTR [eax+0x3454707c]
  40eb88:	inc    eax
  40eb89:	adc    BYTE PTR [ebx+0x55],dl
  40eb8c:	(bad)  
  40eb8d:	pop    ebx
  40eb8e:	das    
  40eb8f:	dec    edi
  40eb90:	arpl   WORD PTR [ecx],bx
  40eb92:	mov    edx,0xcc09e2e
  40eb97:	int    0xe0
  40eb99:	sti    
  40eb9a:	out    dx,al
  40eb9b:	pop    ebp
  40eb9c:	fiadd  DWORD PTR [ecx+edi*4-0x7db5439f]
  40eba3:	sbb    BYTE PTR [edi],0xa4
  40eba6:	loope  0x40eb51
  40eba8:	aad    0xca
  40ebaa:	add    esi,DWORD PTR [eax]
  40ebac:	jnp    0x40eb68
  40ebae:	aaa    
  40ebaf:	ret    
  40ebb0:	mov    bl,0x5e
  40ebb2:	cli    
  40ebb3:	push   esp
  40ebb4:	mov    ah,0x4c
  40ebb6:	aas    
  40ebb7:	lds    edi,FWORD PTR [edx+0x7c2de041]
  40ebbd:	push   esp
  40ebbe:	push   esp
  40ebbf:	aam    0x43
  40ebc1:	xchg   esi,eax
  40ebc3:	ret    0xbe97
  40ebc6:	imul   ebp,DWORD PTR ds:0x87727a72,0xc560bd53
  40ebd0:	xor    eax,0x420251c3
  40ebd5:	mov    WORD PTR [ebp-0x1840e348],cs
  40ebdb:	adc    DWORD PTR [eax-0x4703b3ee],esi
  40ebe1:	(bad)  
  40ebe2:	addr16 sti 
  40ebe4:	test   WORD PTR [ecx],0x503b
  40ebe9:	test   al,0x88
  40ebeb:	cmp    DWORD PTR [ebx],0xffffff9e
  40ebee:	inc    esi
  40ebef:	js     0x40ec28
  40ebf1:	xor    bh,dl
  40ebf3:	xchg   edx,eax
  40ebf4:	xchg   esi,eax
  40ebf5:	and    BYTE PTR [esi],dl
  40ebf7:	sbb    dl,dh
  40ebf9:	mov    edi,0xad27cb57
  40ebfe:	xchg   esi,eax
  40ebff:	mov    dl,0x42
  40ec01:	xor    edx,DWORD PTR [esi]
  40ec03:	mov    edx,0x8977cb70
  40ec08:	mov    edi,DWORD PTR [edx]
  40ec0a:	push   esp
  40ec0b:	push   ebp
  40ec0c:	dec    ebx
  40ec0d:	xchg   DWORD PTR [esp+edi*8+0x343376a9],ecx
  40ec14:	inc    esp
  40ec15:	push   ebx
  40ec16:	adc    esp,DWORD PTR [ebx+ebx*1+0x65]
  40ec1a:	outs   dx,DWORD PTR ds:[esi]
  40ec1b:	mov    ebp,0x7846a400
  40ec20:	aad    0xa7
  40ec22:	cli    
  40ec23:	and    esi,edx
  40ec25:	add    al,0x62
  40ec27:	adc    DWORD PTR [ecx],eax
  40ec29:	sahf   
  40ec2a:	jnp    0x40eca3
  40ec2c:	scas   al,BYTE PTR es:[edi]
  40ec2d:	in     al,0x40
  40ec2f:	or     dh,al
  40ec31:	das    
  40ec32:	push   ss
  40ec33:	cwde   
  40ec34:	ja     0x40ebd9
  40ec36:	pop    ebp
  40ec37:	shr    cl,cl
  40ec39:	sbb    esi,DWORD PTR [ecx+ebp*8]
  40ec3c:	int    0xec
  40ec3e:	sub    al,0xa0
  40ec40:	in     al,dx
  40ec41:	out    dx,eax
  40ec42:	nop
  40ec43:	int    0x5e
  40ec45:	dec    ebp
  40ec46:	mov    al,ds:0xa14c9267
  40ec4b:	imul   ecx,edi,0x18
  40ec4e:	retf   0x79ca
  40ec51:	mov    DWORD PTR [ebp+0x3c],edx
  40ec54:	dec    edi
  40ec55:	std    
  40ec56:	sbb    DWORD PTR [edi],0xac06fbeb
  40ec5c:	push   eax
  40ec5d:	loop   0x40ec4e
  40ec5f:	push   es
  40ec60:	ins    BYTE PTR es:[edi],dx
  40ec61:	loopne 0x40ec98
  40ec63:	retf   0x5b00
  40ec66:	sub    ah,ch
  40ec68:	in     eax,0xb6
  40ec6a:	mov    eax,ds:0x57554714
  40ec6f:	mov    eax,ds:0xb135434c
  40ec74:	outs   dx,DWORD PTR ds:[esi]
  40ec75:	neg    DWORD PTR [edi+0x60cb4afa]
  40ec7b:	nop
  40ec7c:	leave  
  40ec7d:	pop    edi
  40ec7e:	div    BYTE PTR [eax+0x7c]
  40ec81:	ret    
  40ec82:	inc    ebx
  40ec83:	dec    esp
  40ec84:	xchg   ebp,eax
  40ec85:	pop    es
  40ec86:	mov    dh,0xba
  40ec88:	push   ds
  40ec89:	push   ss
  40ec8a:	mov    ah,0x4f
  40ec8c:	ret    
  40ec8d:	(bad)  
  40ec8e:	sbb    dl,al
  40ec90:	push   cs
  40ec91:	push   edi
  40ec92:	mov    esp,0x80cbd540
  40ec97:	ja     0x40ec24
  40ec99:	addr16 je 0x40ec73
  40ec9c:	aad    0xc9
  40ec9e:	sub    BYTE PTR [edi],0xc9
  40eca1:	test   eax,0xb7eab63a
  40eca6:	(bad)  
  40eca7:	xchg   ebp,eax
  40eca8:	popf   
  40eca9:	pop    ss
  40ecaa:	sub    ebp,esp
  40ecac:	rcr    BYTE PTR [edx-0x151d07eb],1
  40ecb2:	enter  0x6e64,0x80
  40ecb6:	fdiv   st(4),st
  40ecb8:	inc    esp
  40ecb9:	dec    ecx
  40ecba:	mul    DWORD PTR [eax-0x7f604874]
  40ecc0:	cmp    DWORD PTR [esi],ebp
  40ecc2:	push   ds
  40ecc3:	mov    dl,0x5b
  40ecc5:	or     al,0x97
  40ecc7:	and    ah,dl
  40ecc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecca:	jmp    0xae9a:0xe0af820f
  40ecd1:	add    al,0x2
  40ecd3:	je     0x40eccf
  40ecd5:	ja     0x40ece4
  40ecd7:	ins    DWORD PTR es:[edi],dx
  40ecd8:	add    BYTE PTR [eax],ah
  40ecda:	xchg   ebp,eax
  40ecdb:	fcomp  DWORD PTR [ecx]
  40ecdd:	loop   0x40ec8a
  40ecdf:	pop    esi
  40ece0:	call   0x2ce6cf12
  40ece5:	and    eax,0x822280b6
  40ecea:	inc    edx
  40eceb:	jp     0x40eca5
  40eced:	jno    0x40ecb3
  40ecef:	jno    0x6cfd0db3
  40ecf5:	popa   
  40ecf6:	lock jle 0x40ed10
  40ecf9:	lock add ebx,ecx
  40ecfc:	ins    DWORD PTR es:[edi],dx
  40ecfd:	div    DWORD PTR [edi+0x18]
  40ed00:	add    al,0x36
  40ed02:	lock xchg esi,eax
  40ed04:	pop    ss
  40ed05:	xor    DWORD PTR [edx+0x38],ebp
  40ed08:	xchg   esi,eax
  40ed09:	xor    eax,0xfe0a98df
  40ed0e:	imul   ecx,DWORD PTR [ecx+0x9],0x27
  40ed12:	sahf   
  40ed13:	jg     0x40ecf9
  40ed15:	call   0x4fe2:0x77cc4210
  40ed1c:	sub    dl,BYTE PTR [edi-0x54]
  40ed1f:	nop
  40ed20:	dec    ecx
  40ed21:	add    ch,BYTE PTR [eax]
  40ed23:	stos   BYTE PTR es:[edi],al
  40ed24:	cmp    ebx,esp
  40ed26:	jp     0x40ed18
  40ed28:	cmp    BYTE PTR [ebx-0x3386bfc6],al
  40ed2e:	popf   
  40ed2f:	mov    al,ds:0xa4a2a6b9
  40ed34:	push   ebx
  40ed35:	fcmovnbe st,st(7)
  40ed37:	imul   ebx,DWORD PTR [ecx-0x7f5d30ec],0xffffff85
  40ed3e:	xchg   ebp,eax
  40ed3f:	jnp    0x40ed2e
  40ed41:	add    DWORD PTR ds:[esi+edi*2-0x2d17762d],edi
  40ed49:	add    eax,0x1fa8fd2c
  40ed4e:	jg     0x40ecdb
  40ed50:	nop
  40ed51:	lods   eax,DWORD PTR ds:[esi]
  40ed52:	jo     0x40ed27
  40ed54:	sbb    dl,BYTE PTR [edx+0x4c00edf2]
  40ed5a:	xchg   edx,eax
  40ed5b:	lea    edi,[edi-0x26]
  40ed5e:	mov    cl,0x12
  40ed60:	mov    ebp,DWORD PTR [esi]
  40ed62:	jmp    0x40ed81
  40ed64:	add    ebp,DWORD PTR [edi+0x72ba2645]
  40ed6a:	push   eax
  40ed6b:	test   BYTE PTR [edi-0x50],dl
  40ed6e:	push   esp
  40ed6f:	mov    al,ds:0xb0f48547
  40ed74:	adc    bl,cl
  40ed76:	push   0xa6ecd36b
  40ed7b:	adc    edx,DWORD PTR [edi+0x483b143d]
  40ed81:	sahf   
  40ed82:	(bad)  
  40ed84:	ins    BYTE PTR es:[edi],dx
  40ed85:	enter  0xde41,0xcd
  40ed89:	push   ds
  40ed8a:	popa   
  40ed8b:	push   esi
  40ed8c:	into   
  40ed8d:	in     al,0x1b
  40ed8f:	and    al,0x6d
  40ed91:	push   0x32
  40ed93:	lods   eax,DWORD PTR ds:[esi]
  40ed94:	(bad)  
  40ed95:	mov    ah,0x8b
  40ed97:	inc    esi
  40ed98:	pop    es
  40ed99:	test   al,cl
  40ed9b:	repz daa 
  40ed9d:	add    al,0x18
  40ed9f:	outs   dx,DWORD PTR ds:[esi]
  40eda0:	mov    bl,0x86
  40eda2:	push   0xf3892f66
  40eda7:	mov    eax,ds:0x706e9b41
  40edac:	mov    dl,0x9d
  40edae:	push   eax
  40edaf:	and    al,0x5a
  40edb1:	mov    BYTE PTR [ecx-0x532419e9],dl
  40edb7:	xchg   edi,eax
  40edb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edb9:	popa   
  40edba:	xchg   BYTE PTR [ebx+0x14],dl
  40edbd:	cdq    
  40edbe:	sbb    ah,BYTE PTR [esi]
  40edc0:	pop    esp
  40edc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edc2:	push   0xffffff80
  40edc4:	inc    edx
  40edc5:	test   BYTE PTR ss:[ebx+0x77f0548e],bh
  40edcc:	in     eax,0xe1
  40edce:	add    dh,BYTE PTR [edi+0x4e]
  40edd1:	daa    
  40edd2:	xchg   edi,eax
  40edd3:	inc    ebp
  40edd4:	pop    ds
  40edd5:	stos   DWORD PTR es:[edi],eax
  40edd6:	inc    edi
  40edd7:	sub    eax,0xbd7740d7
  40eddc:	lock lock ins BYTE PTR es:[edi],dx
  40eddf:	pop    edx
  40ede0:	jp     0x40ee5b
  40ede2:	std    
  40ede3:	sahf   
  40ede4:	dec    ebp
  40ede5:	in     al,dx
  40ede6:	inc    ebp
  40ede7:	sub    al,0xd3
  40ede9:	arpl   WORD PTR [ebp+0x5f],cx
  40edec:	xchg   edx,eax
  40eded:	or     ebx,edi
  40edef:	cwde   
  40edf0:	and    DWORD PTR [eax+0x71],0x4b7c2c9d
  40edf7:	adc    esp,eax
  40edf9:	jb     0x40ede9
  40edfb:	loop   0x40ee2f
  40edfd:	sub    eax,eax
  40edff:	jo     0x40eda0
  40ee01:	(bad)  
  40ee02:	lock test DWORD PTR [edi+esi*1-0x38],edi
  40ee07:	loope  0x40ee09
  40ee09:	retf   0xbbe3
  40ee0c:	pop    esp
  40ee0d:	dec    eax
  40ee0e:	or     cl,BYTE PTR [esi-0x33]
  40ee11:	sub    esp,DWORD PTR [edi-0x7e4d2594]
  40ee17:	imul   esp,DWORD PTR [esi],0x21
  40ee1a:	pop    ss
  40ee1b:	xor    al,0x6a
  40ee1d:	int    0xc6
  40ee1f:	(bad)  
  40ee20:	hlt    
  40ee21:	cmp    edx,DWORD PTR [edi-0xd]
  40ee24:	repz cmp dh,0xc1
  40ee28:	sbb    BYTE PTR [ebp+0x65198a0e],dh
  40ee2e:	lods   al,BYTE PTR ds:[esi]
  40ee2f:	mov    esp,DWORD PTR [eax]
  40ee31:	icebp  
  40ee32:	aad    0x10
  40ee34:	mov    ch,0xac
  40ee36:	loop   0x40ee1e
  40ee38:	sar    DWORD PTR [ebx],cl
  40ee3a:	push   ecx
  40ee3b:	cmp    DWORD PTR [ebx-0x5e],0xffffffa3
  40ee3f:	pop    cx
  40ee41:	push   ecx
  40ee42:	jmp    0x40ee3a
  40ee44:	es or  ah,bh
  40ee47:	outs   dx,DWORD PTR ds:[esi]
  40ee48:	mov    ds:0x927b4ede,eax
  40ee4d:	test   BYTE PTR [ecx],dl
  40ee4f:	(bad)  
  40ee50:	fwait
  40ee51:	jbe    0x40ee81
  40ee53:	dec    edi
  40ee54:	add    dl,ah
  40ee56:	into   
  40ee57:	ror    DWORD PTR [ebx-0x32],1
  40ee5a:	mov    eax,ds:0x6d08336e
  40ee5f:	ret    
  40ee60:	dec    esi
  40ee61:	(bad)  
  40ee62:	pop    ebx
  40ee63:	call   0xfa2e:0xb1f08a93
  40ee6a:	fwait
  40ee6b:	mov    ebp,0x42561c0f
  40ee70:	dec    ecx
  40ee71:	test   al,0xd5
  40ee73:	js     0x40eeec
  40ee75:	lods   al,BYTE PTR ds:[esi]
  40ee76:	nop
  40ee77:	popf   
  40ee78:	pushf  
  40ee79:	push   ebp
  40ee7a:	ss inc ecx
  40ee7c:	cmc    
  40ee7d:	fst    DWORD PTR [ecx]
  40ee7f:	outs   dx,BYTE PTR ds:[esi]
  40ee80:	shl    BYTE PTR [edx],1
  40ee82:	mov    edx,0x9305bc3
  40ee87:	(bad)  
  40ee88:	lock jmp 0xc3cff4a5
  40ee8e:	push   esp
  40ee8f:	mov    cl,0x8e
  40ee91:	loop   0x40eea9
  40ee93:	mov    bl,0xc7
  40ee95:	mov    ebp,0xaf5d0be9
  40ee9a:	add    bh,dh
  40ee9c:	outs   dx,BYTE PTR ds:[esi]
  40ee9d:	mov    ebx,0x40179206
  40eea2:	mov    ds:0x373b2651,al
  40eea7:	test   DWORD PTR [ebp+0x1c],0xba62facc
  40eeae:	aam    0xa
  40eeb0:	mov    ds:0xf1eb4e61,al
  40eeb5:	rcr    BYTE PTR [edx-0x393fd32a],cl
  40eebb:	bound  eax,QWORD PTR [esi-0x1f]
  40eebe:	pop    esi
  40eebf:	jno    0x40ee4e
  40eec1:	rcl    DWORD PTR [esi-0x7332ccaa],cl
  40eec7:	dec    ebp
  40eec8:	sbb    BYTE PTR [ecx+0x72027e4a],dh
  40eece:	push   ds
  40eecf:	mov    ecx,0x6c06786e
  40eed4:	lods   al,BYTE PTR ds:[esi]
  40eed5:	push   ecx
  40eed6:	mov    bh,0xd7
  40eed8:	mov    ds:0xa5a20f78,eax
  40eedd:	xchg   ebx,eax
  40eede:	fldenv [ebx-0x52bf2e8a]
  40eee4:	in     al,dx
  40eee5:	test   eax,0xf410538e
  40eeea:	mov    ebx,0xebe7d198
  40eeef:	dec    esi
  40eef0:	icebp  
  40eef1:	popf   
  40eef2:	and    ecx,0x5c
  40eef5:	xor    al,0x25
  40eef7:	push   esp
  40eef8:	scas   al,BYTE PTR es:[edi]
  40eef9:	jo     0x40ee93
  40eefb:	mov    ah,0x48
  40eefd:	xor    al,0x3d
  40eeff:	lods   eax,DWORD PTR ds:[esi]
  40ef00:	das    
  40ef01:	icebp  
  40ef02:	dec    eax
  40ef03:	adc    eax,0x68f16be2
  40ef08:	(bad)  [ebx-0x58]
  40ef0b:	hlt    
  40ef0c:	sar    BYTE PTR [esi],0x92
  40ef0f:	mov    fs,WORD PTR [ebx+0x42]
  40ef12:	dec    edx
  40ef13:	bound  ebx,QWORD PTR [edi+0x2b]
  40ef16:	xchg   esi,eax
  40ef17:	call   0x15fe2d09
  40ef1c:	xor    eax,0x209f9f70
  40ef21:	fcmovbe st,st(6)
  40ef23:	jecxz  0x40eec8
  40ef25:	pop    es
  40ef26:	cdq    
  40ef27:	test   BYTE PTR [edi-0xa],0x5f
  40ef2b:	sub    ebx,DWORD PTR [edx-0x28]
  40ef2e:	mov    ah,0xec
  40ef30:	xchg   DWORD PTR [edi+ebp*2+0x6767a0e5],edi
  40ef37:	jl     0x40eef7
  40ef39:	mov    ecx,0x85ded149
  40ef3e:	fadd   QWORD PTR [ebp-0x20]
  40ef41:	int3   
  40ef42:	xchg   ebx,eax
  40ef43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef44:	xchg   esp,eax
  40ef45:	out    dx,eax
  40ef46:	loope  0x40eecf
  40ef48:	sub    BYTE PTR ds:0xb5e837c6,bh
  40ef4e:	sub    esp,eax
  40ef50:	sbb    al,0x8b
  40ef52:	mov    ebp,DWORD PTR [ecx+0x65]
  40ef55:	call   0xfd43:0xacac8fa0
  40ef5c:	or     BYTE PTR [ebx+0x336687b2],bh
  40ef62:	jp     0x40ef2a
  40ef64:	out    dx,eax
  40ef65:	pop    edx
  40ef66:	repz leave 
  40ef68:	push   cs
  40ef69:	pusha  
  40ef6a:	cmp    DWORD PTR [ecx+0x7e],esi
  40ef6d:	and    al,0x1c
  40ef6f:	jecxz  0x40efb5
  40ef71:	or     eax,0xb9e1243f
  40ef76:	ret    
  40ef77:	cmp    al,BYTE PTR [esi-0x48]
  40ef7a:	or     eax,0xb735d946
  40ef7f:	(bad)  
  40ef80:	xor    BYTE PTR [ebx-0x6bc3c33e],bh
  40ef86:	inc    eax
  40ef87:	ficom  DWORD PTR ds:0x167d5a5c
  40ef8d:	and    BYTE PTR [edi],bh
  40ef8f:	inc    esi
  40ef90:	mov    esi,0xe14e7ee5
  40ef95:	xor    al,0xdb
  40ef97:	arpl   WORD PTR [eax+0x1d],di
  40ef9a:	popf   
  40ef9b:	stos   DWORD PTR es:[edi],eax
  40ef9c:	aam    0x1e
  40ef9e:	lods   al,BYTE PTR ds:[esi]
  40ef9f:	mov    eax,ds:0xec89fe7d
  40efa4:	or     BYTE PTR [esi],bl
  40efa6:	lock ficomp DWORD PTR [edi+0x37]
  40efaa:	mov    ah,0x56
  40efac:	dec    edx
  40efad:	xchg   ecx,eax
  40efae:	inc    eax
  40efaf:	mov    cl,0xae
  40efb1:	add    eax,0xeab5e056
  40efb6:	pop    ebp
  40efb7:	and    cl,bh
  40efb9:	jle    0x40ef7d
  40efbb:	add    DWORD PTR [esi+0x73afca88],esi
  40efc1:	(bad)  
  40efc3:	sbb    eax,0xd52e965d
  40efc8:	(bad)  
  40efc9:	adc    eax,0x73058389
  40efce:	dec    edi
  40efcf:	and    eax,0x990b9bba
  40efd4:	or     eax,0xc2075534
  40efd9:	cs dec esi
  40efdb:	jecxz  0x40eff3
  40efdd:	and    al,0xd8
  40efdf:	(bad)  
  40efe0:	adc    eax,0xd5a93081
  40efe5:	inc    ecx
  40efe6:	jae    0x40eff3
  40efe8:	arpl   WORD PTR [ebp-0x3b],cx
  40efeb:	repz xlat BYTE PTR ds:[ebx]
  40efed:	inc    esp
  40efee:	gs pop ebp
  40eff0:	inc    esp
  40eff1:	pop    edx
  40eff2:	cmp    ch,BYTE PTR [eax+0x57]
  40eff5:	rcl    bl,cl
	...
  40efff:	in     al,dx
  40f000:	ss ins BYTE PTR es:[edi],dx
  40f002:	or     esi,edi
  40f004:	pop    ebx
  40f005:	in     eax,dx
  40f006:	test   DWORD PTR [edi-0x26],0xb2659ed2
  40f00d:	and    bh,ah
  40f00f:	mov    ebx,0x200000f6
  40f014:	pop    es
  40f015:	add    BYTE PTR [eax],al
  40f017:	adc    al,BYTE PTR [esi+0x197f4d6b]
  40f01d:	pop    ecx
  40f01e:	push   cs
  40f01f:	adc    al,0x81
  40f021:	scas   eax,DWORD PTR es:[edi]
  40f022:	imul   esp,DWORD PTR [esi-0x2f12f30b],0x6b
  40f029:	adc    ch,dh
  40f02b:	sub    al,0xc3
  40f02d:	inc    esp
  40f02e:	repz aam 0x60
  40f031:	inc    edi
  40f032:	mov    bl,0x25
  40f034:	inc    eax
  40f035:	or     eax,eax
  40f037:	jmp    0x61813d9b
  40f03c:	test   eax,0x7db6e88f
  40f041:	call   0x37950af7
  40f046:	je     0x40f0bd
  40f048:	popf   
  40f049:	mov    esi,0xe18ba120
  40f04e:	mov    al,BYTE PTR [ebp-0x42]
  40f051:	retf   
  40f052:	ins    BYTE PTR es:[edi],dx
  40f053:	jb     0x40effa
  40f055:	push   ss
  40f056:	rol    ah,1
  40f058:	ror    eax,cl
  40f05a:	jnp    0x40f095
  40f05c:	repnz pop ds
  40f05e:	repz adc al,0x17
  40f061:	xor    DWORD PTR [edi+0x57b9df74],edi
  40f067:	sbb    BYTE PTR [ebx-0x70da3000],0xb9
  40f06e:	(bad)  
  40f06f:	fs icebp 
  40f071:	xchg   ebx,eax
  40f072:	addr16 sub eax,ebx
  40f075:	cmp    eax,0xddb71b0c
  40f07a:	leave  
  40f07b:	dec    di
  40f07d:	sub    edi,0xa268779f
  40f083:	mov    ?,WORD PTR [esi+0x74]
  40f086:	out    dx,eax
  40f087:	adc    al,0x80
  40f089:	ja     0x40f06b
  40f08b:	pushf  
  40f08c:	data16 fs loopne 0x40f0a2
  40f090:	fs or  eax,0x585e6dee
  40f096:	or     eax,0x93c5d03f
  40f09b:	mov    DWORD PTR [edi+0x18d1433c],edx
  40f0a1:	mov    ebx,0x88c497df
  40f0a6:	dec    esi
  40f0a7:	and    eax,0x6d0b2f9a
  40f0ac:	mov    ds:0x5b3d15ce,eax
  40f0b1:	mov    DWORD PTR [eax-0x1a0d7fd7],esp
  40f0b7:	mov    bh,0x5d
  40f0b9:	fidivr DWORD PTR [ecx-0x3b]
  40f0bc:	fcmove st,st(5)
  40f0be:	hlt    
  40f0bf:	mov    bh,0xb4
  40f0c1:	mov    al,0xa6
  40f0c3:	add    al,0xea
  40f0c5:	push   cs
  40f0c6:	into   
  40f0c7:	mov    BYTE PTR [ecx-0xd],dh
  40f0ca:	imul   BYTE PTR [eax-0x4c90c084]
  40f0d0:	push   ebx
  40f0d1:	loope  0x40f11c
  40f0d3:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0d5:	(bad)  
  40f0d6:	mov    eax,0x35ec9f21
  40f0db:	imul   edi,DWORD PTR [esi-0x2a],0xffffffe5
  40f0df:	gs test ch,dl
  40f0e2:	mov    ebp,DWORD PTR [edx-0x4484832d]
  40f0e8:	adc    dh,BYTE PTR [eax-0x4f]
  40f0eb:	push   esi
  40f0ec:	fld    DWORD PTR [ecx]
  40f0ee:	lods   al,BYTE PTR ds:[esi]
  40f0ef:	and    edi,DWORD PTR [edi+0x6c]
  40f0f2:	adc    eax,0x8a83fbf2
  40f0f7:	jb     0x40f0b6
  40f0f9:	js     0x40f12e
  40f0fb:	or     DWORD PTR ss:[ecx*1-0x4c4f5b66],0x5b
  40f104:	stos   BYTE PTR es:[edi],al
  40f105:	int3   
  40f106:	dec    edi
  40f107:	loop   0x40f163
  40f109:	mov    cr5,esp
  40f10c:	inc    esp
  40f10d:	pop    ebx
  40f10e:	call   0xcc1f:0x7936f7e
  40f115:	xchg   edi,eax
  40f116:	xor    al,0x7b
  40f118:	div    BYTE PTR [ecx-0x4a965f87]
  40f11e:	pop    esp
  40f11f:	jecxz  0x40f185
  40f121:	mov    bl,0xdc
  40f123:	or     BYTE PTR [edi],dl
  40f125:	inc    ebx
  40f126:	(bad)  
  40f127:	cli    
  40f128:	shr    BYTE PTR [edx],0x86
  40f12b:	loopne 0x40f13e
  40f12d:	repnz mov ah,0xed
  40f130:	repz add ch,BYTE PTR ds:0x7a3e5bec
  40f137:	mov    eax,ds:0xb078141b
  40f13c:	push   ebp
  40f13d:	adc    eax,0xaae27ce6
  40f142:	mov    bl,0x2c
  40f144:	fcmovnu st,st(3)
  40f146:	mov    ch,0xe4
  40f148:	aad    0x83
  40f14a:	mov    ds:0x6dd90a2d,eax
  40f14f:	cli    
  40f150:	push   es
  40f151:	imul   esp,DWORD PTR [ecx],0x43d2de63
  40f157:	bound  ebp,QWORD PTR [edi+0x12]
  40f15a:	adc    eax,0x1bb01317
  40f15f:	jle    0x40f0eb
  40f161:	test   BYTE PTR [ecx-0x174feae4],ch
  40f167:	and    al,0xb4
  40f169:	mov    ebp,0xcaffedab
  40f16e:	jb     0x40f1b2
  40f170:	sbb    dh,dh
  40f172:	fidiv  WORD PTR [eax-0xac83cc]
  40f178:	cmp    eax,DWORD PTR [edx-0x31d634c2]
  40f17e:	sub    eax,0xc330391
  40f183:	iret   
  40f184:	sub    esi,DWORD PTR [ebx+eax*1-0x24]
  40f188:	pop    ecx
  40f189:	mov    al,0x5d
  40f18b:	xor    eax,0xe45be08a
  40f190:	stos   DWORD PTR es:[edi],eax
  40f191:	xlat   BYTE PTR ds:[ebx]
  40f192:	call   0x5a67:0x230b44f1
  40f199:	aaa    
  40f19a:	ja     0x40f219
  40f19c:	adc    al,BYTE PTR [ebp-0x31432118]
  40f1a2:	cs mul BYTE PTR ds:0x1c35bec7
  40f1aa:	call   0xfb09f710
  40f1af:	and    al,0x9a
  40f1b1:	test   dl,dl
  40f1b3:	das    
  40f1b4:	xor    esp,DWORD PTR [edx-0x7c]
  40f1b7:	rol    DWORD PTR [edx-0x7f213b12],cl
  40f1bd:	outs   dx,DWORD PTR ds:[esi]
  40f1be:	outs   dx,DWORD PTR ds:[esi]
  40f1bf:	cld    
  40f1c0:	in     al,0x66
  40f1c2:	mov    cl,0xab
  40f1c4:	add    DWORD PTR [ebx-0x5d5f4ef2],0xfffffff2
  40f1cb:	(bad)  
  40f1cc:	aam    0x4d
  40f1ce:	scas   al,BYTE PTR es:[edi]
  40f1cf:	mov    ebx,0x360cc8f8
  40f1d4:	adc    al,0xba
  40f1d6:	sbb    BYTE PTR [esi-0x37],bl
  40f1d9:	and    ecx,DWORD PTR [eax-0xfe47876]
  40f1df:	mov    eax,ds:0xf6552bfe
  40f1e4:	xlat   BYTE PTR ds:[ebx]
  40f1e5:	xor    BYTE PTR [ecx-0x5c1be6a8],cl
  40f1eb:	adc    DWORD PTR [esi+0x6d3f1bb0],edx
  40f1f1:	cmp    cl,cl
  40f1f3:	xchg   edx,eax
  40f1f4:	jae    0x40f266
  40f1f6:	shl    cl,0x9e
  40f1f9:	push   0x81ed41a0
  40f1fe:	es or  ebx,esp
  40f201:	dec    ebp
  40f202:	out    dx,eax
  40f203:	out    dx,al
  40f204:	fcom   DWORD PTR [eiz*8-0x7b44e01e]
  40f20b:	dec    edi
  40f20c:	fcomp  DWORD PTR [edx]
  40f20e:	mov    eax,0xad00587
  40f213:	in     eax,dx
  40f214:	popa   
  40f215:	fiadd  WORD PTR [ebx]
  40f217:	js     0x40f225
  40f219:	mov    BYTE PTR [esi],cl
  40f21b:	inc    eax
  40f21c:	xchg   edx,eax
  40f21d:	sub    cl,BYTE PTR [esp+eax*1+0x24e032d6]
  40f224:	fadd   DWORD PTR [ebp+0xdaaa72f]
  40f22a:	(bad)  
  40f22d:	xchg   BYTE PTR [edx+0x2c4c79ee],ch
  40f233:	sbb    edx,DWORD PTR [ebp-0xa]
  40f236:	retf   0xcfbb
  40f239:	into   
  40f23a:	jecxz  0x40f20f
  40f23c:	bswap  edx
  40f23e:	call   0x1586:0xa13eb0bc
  40f245:	sbb    DWORD PTR [eax-0x2970765c],edx
  40f24b:	int3   
  40f24c:	stos   DWORD PTR es:[edi],eax
  40f24d:	adc    bl,dh
  40f24f:	ror    BYTE PTR [edx-0x9],1
  40f252:	sub    ch,dl
  40f254:	or     al,0x15
  40f256:	gs mov esp,0x213d6e3d
  40f25c:	hlt    
  40f25d:	mov    al,0x29
  40f25f:	fcmovnb st,st(7)
  40f261:	dec    edi
  40f262:	jnp    0x40f28a
  40f264:	sahf   
  40f265:	or     DWORD PTR [ebp+ebp*8-0x21f6d19],edi
  40f26c:	mov    esp,0xa55aecda
  40f271:	dec    esi
  40f272:	adc    esp,DWORD PTR [ecx+0x31bf2692]
  40f278:	inc    esp
  40f279:	dec    esi
  40f27a:	pop    ebx
  40f27b:	adc    al,0xc7
  40f27d:	lods   al,BYTE PTR ds:[esi]
  40f27e:	mov    bh,0x12
  40f280:	mov    eax,0x8f97e752
  40f285:	(bad)
  40f288:	ins    DWORD PTR es:[edi],dx
  40f289:	mov    bh,0x65
  40f28b:	and    dl,bh
  40f28d:	pop    ecx
  40f28e:	push   ebx
  40f28f:	repnz pusha 
  40f291:	mov    dl,BYTE PTR [ebx+0x571a096a]
  40f297:	inc    ecx
  40f298:	pop    ebp
  40f299:	mov    ds:0xbcb13bdb,eax
  40f29e:	mov    eax,ds:0x6c2a67c0
  40f2a3:	(bad)  
  40f2a4:	xchg   esi,eax
  40f2a5:	cmp    bh,BYTE PTR [eax-0x13]
  40f2a8:	mov    bh,0xde
  40f2aa:	xchg   edi,eax
  40f2ab:	aad    0x2b
  40f2ad:	std    
  40f2ae:	mov    eax,0xf6ac7925
  40f2b3:	dec    esi
  40f2b4:	imul   eax,eax,0xa73f56e
  40f2ba:	mov    BYTE PTR [edi+0x4c5c3666],ch
  40f2c0:	xor    ch,BYTE PTR [ebx-0x65]
  40f2c3:	imul   edx,DWORD PTR [ebx-0x64a4790e],0xffffffa5
  40f2ca:	cli    
  40f2cb:	data16 sub dh,BYTE PTR [ebp+esi*1-0x2c307852]
  40f2d3:	pop    ebx
  40f2d4:	mov    ch,ah
  40f2d6:	sbb    eax,0x1b676123
  40f2db:	les    eax,FWORD PTR [edx+0x5dd87ac2]
  40f2e1:	jle    0x40f2c7
  40f2e3:	or     edx,DWORD PTR [ebp+eiz*1+0x7d]
  40f2e7:	jns    0x40f358
  40f2e9:	lods   al,BYTE PTR ds:[esi]
  40f2ea:	lds    edx,FWORD PTR [eax+0xdd5cb33]
  40f2f0:	cli    
  40f2f1:	ret    0x9a0a
  40f2f4:	cli    
  40f2f5:	icebp  
  40f2f6:	adc    dl,BYTE PTR [edx]
  40f2f8:	in     eax,0xec
  40f2fa:	bound  edi,QWORD PTR [edx-0x2]
  40f2fd:	xor    DWORD PTR [eax+0x2c9eaefe],eax
  40f303:	dec    edi
  40f304:	adc    DWORD PTR [edx-0x78],edi
  40f307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f308:	sbb    dl,BYTE PTR [esi]
  40f30a:	call   0x339eb596
  40f30f:	loopne 0x40f30e
  40f311:	data16 jge 0x40f333
  40f314:	or     cl,BYTE PTR [ebx+ecx*4+0x52]
  40f318:	sar    DWORD PTR [eax+0x7],0xe3
  40f31c:	retf   
  40f31d:	and    DWORD PTR [eax+0x1a821784],0x5
  40f324:	and    BYTE PTR [edi],bh
  40f326:	xor    DWORD PTR [edx-0x4f],ebp
  40f329:	pop    ebx
  40f32a:	in     eax,0x81
  40f32c:	jge    0x40f2d9
  40f32e:	dec    ebp
  40f32f:	call   0x35ff:0xfb11aa50
  40f336:	xor    ecx,edx
  40f338:	and    dh,dh
  40f33a:	inc    esi
  40f33b:	stos   BYTE PTR es:[edi],al
  40f33c:	push   esi
  40f33d:	xchg   ebx,eax
  40f33e:	fidiv  DWORD PTR [edi+ebx*8+0x4d6a33b]
  40f345:	mov    al,ds:0x6baea82f
  40f34a:	aad    0x82
  40f34c:	scas   al,BYTE PTR es:[edi]
  40f34d:	add    DWORD PTR [esi-0x7],0x2957b62a
  40f354:	(bad)  
  40f355:	xor    DWORD PTR [edx+eax*2-0x6f],eax
  40f359:	shl    BYTE PTR [ebx],1
  40f35b:	and    ch,ah
  40f35d:	dec    ecx
  40f35e:	std    
  40f35f:	shl    DWORD PTR [edx+0x3763b669],1
  40f365:	xchg   esp,eax
  40f366:	mov    eax,ds:0xb8090640
  40f36b:	or     eax,0xb47e303a
  40f370:	addr16 icebp 
  40f372:	(bad)  
  40f374:	cld    
  40f375:	and    ah,BYTE PTR [esi-0x16]
  40f378:	cdq    
  40f379:	inc    ebx
  40f37a:	retf   
  40f37b:	mov    al,ds:0x8d99f105
  40f380:	mov    dl,0xd8
  40f382:	ds popf 
  40f384:	test   ecx,ebp
  40f386:	xor    BYTE PTR [ecx],bh
  40f388:	mov    eax,ds:0x62d0ee84
  40f38d:	arpl   di,bx
  40f38f:	or     bh,ch
  40f391:	inc    edi
  40f392:	mov    ch,0x4e
  40f394:	imul   ebp,edx,0xd932f394
  40f39a:	jmp    0x26e6:0xbe4cdff3
  40f3a1:	xor    bl,BYTE PTR [ebx+0x43]
  40f3a4:	adc    esi,DWORD PTR [eax+0x39]
  40f3a7:	loop   0x40f344
  40f3a9:	in     al,0xf6
  40f3ab:	pop    esi
  40f3ac:	sub    eax,0x4d42f2b
  40f3b1:	mov    ecx,0x65e0de6e
  40f3b6:	push   ebp
  40f3b7:	cmp    BYTE PTR [ebp-0x56],0x37
  40f3bb:	sub    al,0xbd
  40f3bd:	mov    esp,0xdf46a730
  40f3c2:	popa   
  40f3c3:	xchg   BYTE PTR [ecx-0x20387c7],ah
  40f3c9:	mov    bl,0x61
  40f3cb:	xchg   ch,ah
  40f3cd:	and    ch,BYTE PTR [eax-0x1c9b0ae5]
  40f3d3:	push   eax
  40f3d4:	add    BYTE PTR [eax+0x72],bh
  40f3d7:	or     cl,bh
  40f3d9:	mov    bh,BYTE PTR ds:0x3474e263
  40f3df:	stos   BYTE PTR es:[edi],al
  40f3e0:	(bad)  
  40f3e1:	call   0x779b3f79
  40f3e6:	inc    eax
  40f3e7:	data16 int3 
  40f3e9:	sbb    DWORD PTR [ebx],esp
  40f3eb:	lds    esi,FWORD PTR [ecx]
  40f3ed:	ins    BYTE PTR es:[edi],dx
  40f3ee:	or     ebp,DWORD PTR [edi+0x69]
  40f3f1:	(bad)  
  40f3f2:	mov    WORD PTR [ecx+0x51],fs
  40f3f5:	cmp    BYTE PTR [eax+0x4ad7d102],0xdb
  40f3fc:	inc    esi
  40f3fd:	adc    al,0xb8
  40f3ff:	pop    es
  40f400:	and    cl,ah
  40f402:	cs jne 0x40f392
  40f405:	jg     0x40f466
  40f407:	cmp    BYTE PTR [edi-0x24fe7be6],0x23
  40f40e:	or     eax,0x95253dd4
  40f413:	(bad)  
  40f414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f415:	mov    edi,0x75967d93
  40f41a:	sub    eax,0x8973de63
  40f41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f420:	mov    eax,ds:0x276bc0e9
  40f425:	jmp    0x4f0e:0x8b1592ec
  40f42c:	jbe    0x40f3f7
  40f42e:	in     al,dx
  40f42f:	dec    ebp
  40f430:	cwde   
  40f431:	mov    ch,0x45
  40f433:	mov    ds:0xdaf86914,al
  40f438:	aas    
  40f439:	xor    dl,0xf7
  40f43c:	jecxz  0x40f41b
  40f43e:	sbb    DWORD PTR [eax-0x27],0x971b6199
  40f445:	scas   eax,DWORD PTR es:[edi]
  40f446:	lds    esp,FWORD PTR [edx]
  40f448:	call   0xaf7cb61e
  40f44d:	lahf   
  40f44e:	stc    
  40f44f:	or     eax,0x5ac072af
  40f454:	inc    esp
  40f455:	inc    ebx
  40f456:	xchg   WORD PTR [edi],di
  40f459:	sbb    dl,BYTE PTR [eax+0x30]
  40f45c:	and    ch,BYTE PTR [eax+0xb]
  40f45f:	fsubr  DWORD PTR [eax]
  40f461:	sti    
  40f462:	cmp    al,0xdf
  40f464:	push   esp
  40f465:	adc    bh,BYTE PTR [ecx]
  40f467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f468:	(bad)  
  40f469:	in     eax,0x84
  40f46b:	mov    al,0x58
  40f46d:	jb     0x40f4c1
  40f46f:	stos   BYTE PTR es:[edi],al
  40f470:	mov    bl,0x3
  40f472:	outs   dx,BYTE PTR ds:[esi]
  40f473:	jae    0x40f436
  40f475:	xor    edx,DWORD PTR [edi]
  40f477:	fxch   st(2)
  40f479:	mov    al,0x6d
  40f47b:	xchg   ebp,eax
  40f47c:	std    
  40f47d:	mov    ch,BYTE PTR [edx]
  40f47f:	or     BYTE PTR [eax+0x3a],bh
  40f482:	leave  
  40f483:	outs   dx,DWORD PTR ds:[esi]
  40f484:	xchg   BYTE PTR [edx-0x6d],bl
  40f487:	call   0xf3ce:0x88d2d89f
  40f48e:	dec    edx
  40f48f:	dec    eax
  40f490:	xchg   cl,al
  40f492:	jns    0x40f4c0
  40f494:	lods   al,BYTE PTR ds:[esi]
  40f495:	aaa    
  40f496:	je     0x40f4af
  40f498:	push   ebp
  40f499:	ins    BYTE PTR es:[edi],dx
  40f49a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f49b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f49c:	scas   al,BYTE PTR es:[edi]
  40f49d:	(bad)  
  40f49e:	mov    eax,ds:0xd5f34d22
  40f4a3:	test   DWORD PTR [eax],esi
  40f4a5:	pop    edi
  40f4a6:	ror    DWORD PTR [ecx+ebp*4],0xd9
  40f4aa:	js     0x40f471
  40f4ac:	jo     0x40f450
  40f4ae:	pusha  
  40f4af:	shl    ah,cl
  40f4b1:	or     ebx,DWORD PTR [eax+ecx*8+0x53]
  40f4b5:	jno    0x40f4e9
  40f4b7:	push   cs
  40f4b8:	xor    al,0x7e
  40f4ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4bb:	js     0x40f536
  40f4bd:	mov    ebp,0x86ed6e4f
  40f4c2:	das    
  40f4c3:	lock shl BYTE PTR [esp+esi*4],cl
  40f4c7:	inc    edx
  40f4c8:	pop    edx
  40f4c9:	sub    ebx,DWORD PTR [ebx+0x41fe4e22]
  40f4cf:	dec    edx
  40f4d0:	xchg   DWORD PTR [ecx],ebx
  40f4d2:	clc    
  40f4d3:	xchg   esp,eax
  40f4d4:	jmp    0x9c11:0x6c630ebf
  40f4db:	cmp    eax,0x26be99eb
  40f4e0:	xor    edx,DWORD PTR [esi-0x48]
  40f4e3:	mov    esi,0xadbbf5fc
  40f4e8:	add    BYTE PTR [edx-0x231cc818],al
  40f4ee:	es ss cwde 
  40f4f1:	cmp    DWORD PTR [edx],esi
  40f4f3:	sub    cl,al
  40f4f5:	popf   
  40f4f6:	fidivr WORD PTR [esi-0x7d0a9910]
  40f4fc:	mov    WORD PTR [edi-0x4d],es
  40f4ff:	nop
  40f500:	(bad)  
  40f501:	bound  ebx,QWORD PTR [edi]
  40f503:	rcr    edi,cl
  40f505:	lds    edi,FWORD PTR [eax-0xf]
  40f508:	sahf   
  40f509:	sbb    DWORD PTR [esi-0x15],edi
  40f50c:	mov    bl,0xaf
  40f50e:	stos   DWORD PTR es:[edi],eax
  40f50f:	jecxz  0x40f4f4
  40f511:	sbb    ebx,DWORD PTR [esi]
  40f513:	fnstenv [esi+0x17]
  40f516:	push   cs
  40f517:	and    al,0xb2
  40f519:	lahf   
  40f51a:	pop    esp
  40f51b:	add    eax,0xc60e85d7
  40f520:	sahf   
  40f521:	jl     0x40f590
  40f523:	cmp    edi,esp
  40f525:	lea    ebp,[edi+0x43]
  40f528:	out    dx,eax
  40f529:	clc    
  40f52a:	cmp    eax,0xec00c296
  40f52f:	arpl   di,dx
  40f531:	lods   al,BYTE PTR ds:[esi]
  40f532:	push   esp
  40f533:	jecxz  0x40f4ec
  40f535:	(bad)  
  40f536:	jle    0x40f4e0
  40f538:	or     bh,bh
  40f53a:	pop    ecx
  40f53b:	mov    bh,0x2a
  40f53d:	jmp    0x40f52f
  40f53f:	std    
  40f540:	(bad)  
  40f541:	out    dx,eax
  40f542:	repz pushf 
  40f544:	xor    al,0x7d
  40f546:	xor    eax,0x7f509b8e
  40f54b:	xchg   esi,eax
  40f54c:	repz xchg edi,eax
  40f54e:	adc    BYTE PTR [ecx],al
  40f550:	lahf   
  40f551:	adc    cl,BYTE PTR [edi]
  40f553:	mov    ecx,0xcd871327
  40f558:	mov    ecx,0xb9bb84f6
  40f55d:	pop    edi
  40f55e:	sar    ah,cl
  40f560:	cmp    eax,0xdc8503d0
  40f565:	or     dh,BYTE PTR [eax-0x7ad0008b]
  40f56b:	add    al,0x82
  40f56d:	sub    BYTE PTR [esi-0x38],ch
  40f570:	cmp    eax,DWORD PTR [ebx+eiz*2-0x3b]
  40f574:	dec    esi
  40f575:	sbb    DWORD PTR [ecx-0x306a585c],ebx
  40f57b:	jp     0x40f57c
  40f57d:	cmc    
  40f57e:	jmp    0x80d57ed3
  40f583:	mov    cl,0x6f
  40f585:	add    edx,DWORD PTR [ebp+0x65e509f7]
  40f58b:	stos   DWORD PTR es:[edi],eax
  40f58c:	je     0x40f56c
  40f58e:	or     BYTE PTR [eax-0xe483eb],dl
  40f594:	jne    0x40f584
  40f596:	dec    DWORD PTR [ebx-0x6d]
  40f599:	les    eax,FWORD PTR [ebp+0x1a]
  40f59c:	and    BYTE PTR [edx-0x73],al
  40f59f:	scas   eax,DWORD PTR es:[edi]
  40f5a0:	add    DWORD PTR [esi],0xffffffef
  40f5a3:	xchg   edx,eax
  40f5a4:	jbe    0x40f5fd
  40f5a6:	jg     0x40f5e7
  40f5a8:	dec    esi
  40f5a9:	adc    esi,ecx
  40f5ab:	dec    esi
  40f5ac:	idiv   BYTE PTR [esi]
  40f5ae:	mov    ds:0xf3a0164b,al
  40f5b3:	(bad)  
  40f5b4:	cmc    
  40f5b5:	pop    esp
  40f5b6:	(bad)  
  40f5b7:	pop    edx
  40f5b8:	outs   dx,BYTE PTR ds:[esi]
  40f5b9:	in     al,dx
  40f5ba:	xchg   esi,eax
  40f5bb:	jge    0x40f55a
  40f5bd:	inc    edi
  40f5be:	sbb    edi,DWORD PTR [ecx]
  40f5c0:	mov    dl,0xb1
  40f5c2:	mov    fs,eax
  40f5c4:	pop    eax
  40f5c5:	das    
  40f5c6:	(bad)
  40f5c9:	xchg   edi,eax
  40f5ca:	stos   BYTE PTR es:[edi],al
  40f5cb:	pop    edi
  40f5cc:	cld    
  40f5cd:	retf   
  40f5ce:	push   0xc96350b5
  40f5d3:	and    eax,0x4979ad71
  40f5d8:	push   di
  40f5da:	gs leave 
  40f5dc:	push   ebp
  40f5dd:	in     eax,dx
  40f5de:	dec    ebp
  40f5df:	mov    eax,ds:0xf2091007
  40f5e4:	sahf   
  40f5e5:	adc    BYTE PTR [esi+0x4],0xed
  40f5e9:	pop    esp
  40f5ea:	adc    cl,BYTE PTR es:[ebp+0x61a7101c]
  40f5f1:	or     ch,dh
  40f5f3:	jmp    0x1cb5:0xe010a7
  40f5fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5fb:	fld    QWORD PTR [esi-0x26]
  40f5fe:	scas   al,BYTE PTR es:[edi]
  40f5ff:	push   edi
  40f600:	jg     0x40f60b
  40f602:	push   ss
  40f603:	adc    DWORD PTR [edi-0x21],0x6f6ec39b
  40f60a:	pop    eax
  40f60b:	sub    BYTE PTR [esi],ah
  40f60d:	or     BYTE PTR [ecx],bh
  40f60f:	imul   esi,DWORD PTR [eax-0x2],0x46ee9b07
  40f616:	inc    ebx
  40f617:	xor    eax,0xd2322cd7
  40f61c:	clc    
  40f61d:	xor    ebp,ecx
  40f61f:	sbb    ebx,edx
  40f621:	rcr    BYTE PTR [ecx+eax*8],cl
  40f624:	and    ecx,ebx
  40f626:	push   es
  40f627:	fisub  WORD PTR [edx+0x49]
  40f62a:	add    eax,0xabef1f1f
  40f62f:	int    0x42
  40f631:	adc    eax,0xe39a47cf
  40f636:	stos   DWORD PTR es:[edi],eax
  40f637:	sbb    al,0xa4
  40f639:	ins    DWORD PTR es:[edi],dx
  40f63a:	rcr    DWORD PTR [edx],1
  40f63c:	sub    eax,DWORD PTR [ebx-0x69]
  40f63f:	jne    0x40f62b
  40f641:	jmp    FWORD PTR fs:[eax+0xe8274fb]
  40f648:	lea    ecx,[edx-0x66]
  40f64b:	sbb    al,0x38
  40f64d:	fdivp  st(3),st
  40f64f:	sub    ah,BYTE PTR [ecx+0x24]
  40f652:	lods   al,BYTE PTR ds:[esi]
  40f653:	pop    edx
  40f654:	sti    
  40f655:	mov    ds:0x9da8d4c9,al
  40f65a:	ficom  DWORD PTR [ecx+eax*1-0x1f]
  40f65e:	xchg   ebp,eax
  40f65f:	sahf   
  40f660:	std    
  40f661:	(bad)  
  40f662:	add    al,0x7a
  40f664:	adc    DWORD PTR [esi-0x2ec996b3],edx
  40f66a:	imul   esi,DWORD PTR [ebp+0x4f547b53],0xf862bd7d
  40f674:	test   eax,esi
  40f676:	mov    ebp,0xad15eacf
  40f67b:	rcl    BYTE PTR [eax],1
  40f67d:	leave  
  40f67e:	xchg   esi,eax
  40f67f:	repnz syscall 
  40f682:	dec    ebp
  40f683:	scas   al,BYTE PTR es:[edi]
  40f684:	and    DWORD PTR [ebp-0x4dc8264d],esp
  40f68a:	jno    0x40f691
  40f68c:	ret    0x1b61
  40f68f:	jmp    0xf41a:0xf9c2725d
  40f696:	jbe    0x40f666
  40f698:	outs   dx,DWORD PTR ds:[esi]
  40f699:	aam    0x7d
  40f69b:	lods   eax,DWORD PTR ds:[esi]
  40f69c:	jl     0x40f63f
  40f69e:	pop    es
  40f69f:	call   0xe658f8c3
  40f6a4:	and    al,0x5b
  40f6a6:	inc    eax
  40f6a7:	cmc    
  40f6a8:	and    cl,cl
  40f6aa:	fld    TBYTE PTR [ebx+0x624c6195]
  40f6b0:	mov    edx,0x6fbd99c0
  40f6b5:	js     0x40f65c
  40f6b7:	fisttp DWORD PTR [esi+0x54]
  40f6ba:	mov    bl,0xab
  40f6bc:	pop    esi
  40f6bd:	pop    ss
  40f6be:	dec    eax
  40f6bf:	add    eax,0x730b0f53
  40f6c4:	push   es
  40f6c5:	shl    ebp,1
  40f6c7:	adc    al,0x74
  40f6c9:	mov    al,0xee
  40f6cb:	xchg   ebp,eax
  40f6cc:	jp     0x40f6f5
  40f6ce:	add    eax,0xa4d66ede
  40f6d3:	or     bh,ah
  40f6d5:	scas   al,BYTE PTR es:[edi]
  40f6d6:	clc    
  40f6d7:	neg    BYTE PTR [edi]
  40f6d9:	leave  
  40f6da:	jbe    0x40f712
  40f6dc:	and    al,0x66
  40f6de:	sbb    eax,0xc2b8a78d
  40f6e3:	pop    ss
  40f6e4:	test   eax,0xfcd58288
  40f6e9:	sahf   
  40f6ea:	pop    esp
  40f6eb:	inc    esi
  40f6ec:	xor    DWORD PTR [esi+0x56],0x11
  40f6f0:	mov    ds:0x12b35d4e,al
  40f6f5:	xchg   ebx,eax
  40f6f6:	adc    bl,BYTE PTR [edx-0x4aa1a8db]
  40f6fc:	xchg   ecx,eax
  40f6fd:	loopne 0x40f74e
  40f6ff:	xlat   BYTE PTR ds:[ebx]
  40f700:	scas   eax,DWORD PTR es:[edi]
  40f701:	shl    ah,cl
  40f703:	sub    cl,cl
  40f705:	add    DWORD PTR [ebp-0x3bfba72b],ecx
  40f70b:	cdq    
  40f70c:	inc    ebx
  40f70d:	cmp    eax,0xd6e6fb7b
  40f712:	sahf   
  40f713:	mov    esp,0xf44edeed
  40f718:	mov    ah,0x1b
  40f71a:	xchg   edx,eax
  40f71b:	and    BYTE PTR [edi+0x58],al
  40f71e:	push   eax
  40f71f:	cmp    BYTE PTR [edx+0x1f],bl
  40f722:	shr    DWORD PTR [esi],1
  40f724:	adc    bh,BYTE PTR [esp+ebp*8+0x61066c58]
  40f72b:	imul   edx,DWORD PTR ds:0x6989408b,0xffffffc0
  40f732:	lock int 0x2c
  40f735:	clc    
  40f736:	fadd   DWORD PTR [eax]
  40f738:	add    BYTE PTR [eax],al
  40f73a:	add    BYTE PTR [eax],al
  40f73c:	add    BYTE PTR [eax],al
  40f73e:	add    BYTE PTR [ecx],dl
  40f740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f741:	pop    esi
  40f742:	xor    eax,0xa57bfffe
  40f747:	int    0xa1
  40f749:	ficom  WORD PTR [eax+edx*4+0x7d]
  40f74d:	cld    
  40f74e:	xchg   edx,eax
  40f74f:	(bad)  
  40f751:	add    BYTE PTR [eax],al
  40f753:	and    BYTE PTR [edi],al
  40f755:	add    BYTE PTR [eax],al
  40f757:	xor    al,0x87
  40f759:	popa   
  40f75a:	or     eax,0xd747b0f3
  40f75f:	pop    ebx
  40f760:	xchg   esi,eax
  40f761:	xchg   edx,eax
  40f762:	xor    ebx,esp
  40f764:	and    dh,BYTE PTR [eax+0x17218bde]
  40f76a:	stos   BYTE PTR es:[edi],al
  40f76b:	in     al,dx
  40f76c:	xor    al,0xff
  40f76e:	push   edi
  40f76f:	loopne 0x40f7dc
  40f771:	jnp    0x40f74a
  40f773:	push   esp
  40f774:	pop    ds
  40f775:	add    eax,0x2457cb08
  40f77a:	add    esi,eax
  40f77c:	clc    
  40f77d:	clc    
  40f77e:	add    ch,BYTE PTR [eax+0x62]
  40f781:	(bad)  
  40f782:	sub    al,0xff
  40f784:	je     0x40f7db
  40f786:	mov    ebx,0xaf4e6acd
  40f78b:	pop    ds
  40f78c:	sub    ah,BYTE PTR [ebx-0x5385e5c4]
  40f792:	stos   BYTE PTR es:[edi],al
  40f793:	mov    ch,0xb1
  40f795:	mov    ecx,esp
  40f797:	loop   0x40f724
  40f799:	or     eax,0x497db922
  40f79e:	sbb    ah,BYTE PTR [ebx+eax*1-0x19]
  40f7a2:	popf   
  40f7a3:	out    dx,al
  40f7a4:	mov    bh,0xd2
  40f7a6:	call   0xefa75721
  40f7ab:	adc    DWORD PTR [esp+ebx*2-0x24],esp
  40f7af:	dec    ebx
  40f7b0:	xchg   ch,bh
  40f7b2:	jge    0x40f76c
  40f7b4:	dec    edx
  40f7b5:	cs inc ecx
  40f7b7:	stc    
  40f7b8:	(bad)  
  40f7b9:	pushf  
  40f7ba:	push   0xef13919a
  40f7bf:	pushf  
  40f7c0:	dec    ebx
  40f7c1:	mov    cl,bl
  40f7c3:	xchg   BYTE PTR [ebx+0x4841ef24],cl
  40f7c9:	repnz xchg ebp,eax
  40f7cb:	jb     0x40f795
  40f7cd:	bound  esi,QWORD PTR [esi+0x3bd01172]
  40f7d3:	sbb    BYTE PTR [eax+0x4a],bl
  40f7d6:	cmp    eax,0x4bf18a10
  40f7db:	fisub  WORD PTR [ebx+edi*8-0x45]
  40f7df:	pop    ss
  40f7e0:	jge    0x40f77a
  40f7e2:	push   eax
  40f7e3:	cmp    eax,0xb5be8cb8
  40f7e8:	mov    edx,0x40cc65a3
  40f7ed:	xchg   DWORD PTR fs:[ebx],edx
  40f7f0:	aas    
  40f7f1:	sbb    esi,DWORD PTR [edx]
  40f7f3:	pop    es
  40f7f4:	clc    
  40f7f5:	int    0xce
  40f7f7:	push   ebx
  40f7f8:	ret    0xc3c9
  40f7fb:	(bad)  
  40f7fc:	ins    BYTE PTR es:[edi],dx
  40f7fd:	and    eax,0xa15e8a21
  40f802:	sub    eax,0x7abe6677
  40f807:	addr16 inc esi
  40f809:	into   
  40f80a:	rcr    dl,0x98
  40f80d:	pop    eax
  40f80e:	jge    0x40f871
  40f810:	rcr    ebp,0xc0
  40f813:	sbb    edi,DWORD PTR [eax]
  40f815:	fistp  QWORD PTR [esi-0x70]
  40f818:	pop    ds
  40f819:	mov    BYTE PTR [ecx],bl
  40f81b:	cdq    
  40f81c:	cmp    ebx,ecx
  40f81e:	pop    es
  40f81f:	push   esp
  40f820:	out    0x2f,eax
  40f822:	fdiv   QWORD PTR [ebp-0x757f3840]
  40f828:	pop    es
  40f829:	les    eax,FWORD PTR [ebp+0x74fccf09]
  40f82f:	jne    0x40f7d0
  40f831:	mov    ecx,0xd2ba7596
  40f836:	xlat   BYTE PTR ds:[ebx]
  40f837:	sbb    BYTE PTR [edx],0xed
  40f83a:	jb     0x40f7ca
  40f83c:	mov    ds:0x9440c334,eax
  40f841:	fdiv   st(6),st
  40f843:	sbb    esi,DWORD PTR [esi]
  40f845:	jo     0x40f7de
  40f847:	add    BYTE PTR [eax+0x7c771990],0xa3
  40f84e:	in     al,0xa6
  40f850:	mov    edx,0x801a0a6e
  40f855:	sub    dh,BYTE PTR [edx+0x49]
  40f858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f859:	mov    eax,ds:0xa12051fc
  40f85e:	imul   BYTE PTR [edi-0x27604f59]
  40f864:	xchg   DWORD PTR [eax+0x69637534],edx
  40f86a:	push   edx
  40f86b:	pop    es
  40f86c:	int3   
  40f86d:	cmp    eax,0x24fc3e7f
  40f873:	frstor [edx]
  40f875:	sub    eax,0x3e45a850
  40f87a:	mov    ecx,0xcc83ebfa
  40f87f:	repz jg 0x40f895
  40f882:	push   ebx
  40f883:	fistp  DWORD PTR [eax-0x7]
  40f886:	clc    
  40f887:	imul   ebx,DWORD PTR [edx+edi*2-0x5f4aa052],0x313f1c8
  40f892:	stos   BYTE PTR es:[edi],al
  40f893:	mov    edx,0xbd155e2f
  40f898:	and    dl,bh
  40f89a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f89b:	repz in al,0xea
  40f89e:	mov    bh,0xcd
  40f8a0:	mov    ebx,esp
  40f8a2:	cmp    al,0x19
  40f8a4:	pop    ss
  40f8a5:	xchg   ebp,eax
  40f8a6:	push   0xbc48b39f
  40f8ab:	mov    dl,0x3a
  40f8ad:	test   BYTE PTR [esi],dh
  40f8af:	xchg   esi,eax
  40f8b0:	cmp    ah,BYTE PTR [ebp+edi*2+0x2b6d00c8]
  40f8b7:	jmp    0xc27092cb
  40f8bc:	sbb    BYTE PTR [eax+0x72ac03d7],bl
  40f8c2:	push   gs
  40f8c4:	add    DWORD PTR [edx+esi*4+0x73],ebx
  40f8c8:	adc    DWORD PTR ds:0x7b0276a7,0xffffffce
  40f8cf:	sbb    edx,ecx
  40f8d1:	adc    eax,DWORD PTR [ebx-0x44a82997]
  40f8d7:	retf   0xd24
  40f8da:	outs   dx,DWORD PTR ds:[esi]
  40f8db:	or     BYTE PTR [esi-0x53],dl
  40f8de:	scas   al,BYTE PTR es:[edi]
  40f8df:	js     0x40f891
  40f8e1:	or     DWORD PTR [ecx-0x5525a19f],eax
  40f8e7:	add    esi,DWORD PTR [esi+0x163b4361]
  40f8ed:	ins    BYTE PTR es:[edi],dx
  40f8ee:	pop    ecx
  40f8ef:	jg     0x40f966
  40f8f1:	add    eax,0x7213bde7
  40f8f6:	and    al,0xcf
  40f8f8:	xor    dh,BYTE PTR [eax+ecx*4+0x4e]
  40f8fc:	lods   al,BYTE PTR ds:[esi]
  40f8fd:	sbb    eax,0x16c32e80
  40f902:	ret    0xe6aa
  40f905:	jnp    0x40f916
  40f907:	jns    0x40f8cb
  40f909:	jecxz  0x40f91c
  40f90b:	inc    ebp
  40f90c:	push   ebx
  40f90d:	outs   dx,BYTE PTR ds:[esi]
  40f90e:	add    bh,bh
  40f910:	pop    edi
  40f911:	idiv   BYTE PTR [edi+0x12]
  40f914:	in     al,dx
  40f915:	push   ss
  40f916:	push   ds
  40f917:	ror    BYTE PTR [eax+0x38],0xad
  40f91b:	call   0xe3ae:0x1920f4dc
  40f922:	jle    0x40f8f0
  40f924:	not    BYTE PTR [edi+0x46]
  40f927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f928:	retf   
  40f929:	std    
  40f92a:	je     0x40f948
  40f92c:	aaa    
  40f92d:	sub    eax,ecx
  40f92f:	pop    es
  40f930:	pop    ecx
  40f931:	clc    
  40f932:	not    DWORD PTR [edx]
  40f934:	or     DWORD PTR [eax],0x7f
  40f937:	xchg   al,ch
  40f939:	iret   
  40f93a:	test   DWORD PTR [esi+0x10],0xbac7a581
  40f941:	sbb    BYTE PTR [edi+0x69],dl
  40f944:	iret   
  40f945:	sub    BYTE PTR es:[edx+0x33a807b2],al
  40f94c:	sbb    al,0x42
  40f94e:	pop    edx
  40f94f:	inc    edx
  40f950:	outs   dx,DWORD PTR ds:[esi]
  40f951:	xchg   esp,eax
  40f952:	adc    DWORD PTR [edi-0x36],ebp
  40f955:	fnstenv [ecx]
  40f957:	mov    cl,al
  40f959:	mov    bl,0x42
  40f95b:	pop    esi
  40f95c:	mov    edx,0x87238b99
  40f961:	xor    dl,ah
  40f963:	fwait
  40f964:	mov    BYTE PTR [ebx],cl
  40f966:	mov    ch,0x55
  40f968:	jmp    0x1340:0x6dc74c69
  40f96f:	loop   0x40f9c3
  40f971:	int    0xb5
  40f973:	adc    al,0xc1
  40f975:	ss mov ecx,0x83078295
  40f97b:	push   ecx
  40f97c:	pop    edx
  40f97d:	fldenv [edi]
  40f97f:	pop    eax
  40f980:	cmc    
  40f981:	lods   eax,DWORD PTR ds:[esi]
  40f982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f983:	inc    esp
  40f984:	fdiv   QWORD PTR [ebp+0x4637973b]
  40f98a:	pop    ecx
  40f98b:	fcom   st(3)
  40f98d:	xchg   ebp,eax
  40f98e:	jmp    0x4cb0fbc9
  40f993:	fimul  WORD PTR [edx+0x4a]
  40f996:	pop    esp
  40f997:	jmp    0x31d8:0x568e4317
  40f99e:	cmc    
  40f99f:	std    
  40f9a0:	fcmovnbe st,st(1)
  40f9a2:	jg     0x40f9c8
  40f9a4:	stos   DWORD PTR es:[edi],eax
  40f9a5:	imul   eax,DWORD PTR [ebx+eax*4-0xc],0xffffffac
  40f9aa:	jnp    0x40f969
  40f9ac:	out    0x67,eax
  40f9ae:	jno    0x40f9d1
  40f9b0:	repz mov al,ds:0x3a9ed484
  40f9b6:	outs   dx,BYTE PTR ds:[esi]
  40f9b7:	xor    bh,BYTE PTR [edx-0x7057aa3a]
  40f9bd:	test   eax,0x21482f2b
  40f9c2:	pop    es
  40f9c3:	jle    0x40fa43
  40f9c5:	(bad)  
  40f9c6:	mov    al,ds:0xf88c9236
  40f9cb:	push   0xffffffa9
  40f9cd:	sub    bl,BYTE PTR [ebp-0x434569d]
  40f9d3:	call   DWORD PTR [edi-0x66]
  40f9d6:	xlat   BYTE PTR ds:[ebx]
  40f9d7:	mov    edi,0x1d02f338
  40f9dc:	xchg   edx,eax
  40f9dd:	xor    al,0x96
  40f9df:	add    al,0x23
  40f9e1:	dec    eax
  40f9e2:	sbb    al,0x3
  40f9e4:	pop    ebp
  40f9e5:	mov    dl,0x58
  40f9e7:	leave  
  40f9e8:	lds    ecx,FWORD PTR [ecx-0x7da184eb]
  40f9ee:	cmp    edi,DWORD PTR [ebx+ebx*1+0x728ab3bb]
  40f9f5:	add    al,0xcc
  40f9f7:	hlt    
  40f9f8:	pusha  
  40f9f9:	jecxz  0x40f9c2
  40f9fb:	retf   0xf458
  40f9fe:	inc    ebp
  40f9ff:	jge    0x40fa09
  40fa01:	icebp  
  40fa02:	add    BYTE PTR [edi],bh
  40fa04:	pop    es
  40fa05:	xor    edi,DWORD PTR [ebp+0x73]
  40fa08:	aas    
  40fa09:	imul   edx,DWORD PTR gs:[eax-0x1a],0x2a
  40fa0e:	psrlq  mm4,QWORD PTR [esi]
  40fa11:	retf   
  40fa12:	mov    ecx,0xc10ef889
  40fa17:	mov    ecx,0x990d1569
  40fa1c:	mov    ds:0xa4ab0ce6,eax
  40fa21:	cmp    bh,BYTE PTR [esi-0x2d79eb3c]
  40fa27:	jmp    0xf08d:0x67192274
  40fa2e:	inc    ebp
  40fa2f:	xor    ebx,ebp
  40fa31:	mov    dh,0xa0
  40fa33:	sbb    edi,ebx
  40fa35:	stos   DWORD PTR es:[edi],eax
  40fa36:	arpl   WORD PTR [ecx+0x13],bx
  40fa39:	pop    ds
  40fa3a:	call   0x660cb955
  40fa3f:	dec    edx
  40fa40:	mov    ah,0xa7
  40fa42:	push   edi
  40fa43:	scas   al,BYTE PTR es:[edi]
  40fa44:	or     al,0x78
  40fa46:	mov    ebp,DWORD PTR [eax+0x534006fa]
  40fa4c:	push   cs
  40fa4d:	adc    DWORD PTR [edi],esp
  40fa4f:	jecxz  0x40facb
  40fa51:	aaa    
  40fa52:	cld    
  40fa53:	lds    edi,FWORD PTR [esp+ecx*2+0x4b]
  40fa57:	push   ecx
  40fa58:	pop    eax
  40fa59:	lahf   
  40fa5a:	in     eax,0x13
  40fa5c:	xlat   BYTE PTR ds:[ebx]
  40fa5d:	inc    edi
  40fa5e:	mov    ah,BYTE PTR es:[edx+0x333c377b]
  40fa65:	add    DWORD PTR [ebx-0x5d],0xffffffe8
  40fa69:	lea    ebp,[edx+0x2064540f]
  40fa6f:	ss cmc 
  40fa71:	push   ds
  40fa72:	or     edx,0xffffffff
  40fa75:	xchg   esi,eax
  40fa76:	(bad)  
  40fa77:	xchg   esi,eax
  40fa78:	jb     0x40fa30
  40fa7a:	mov    al,ds:0x53d6b944
  40fa7f:	cli    
  40fa80:	adc    eax,0x274b4b32
  40fa85:	inc    ecx
  40fa86:	stos   DWORD PTR es:[edi],eax
  40fa87:	stos   BYTE PTR es:[edi],al
  40fa88:	ret    
  40fa89:	pop    ebx
  40fa8a:	jno    0x40fac4
  40fa8c:	mov    al,0xc6
  40fa8e:	xchg   esi,eax
  40fa8f:	and    ebp,DWORD PTR [ebp-0x4b]
  40fa92:	aaa    
  40fa93:	mov    bh,0xdf
  40fa95:	push   esi
  40fa96:	popa   
  40fa97:	or     eax,0xe7d8b50f
  40fa9c:	mov    edi,0x27b02d4e
  40faa1:	mov    al,0x72
  40faa3:	fidivr WORD PTR ds:0xad7c6d41
  40faa9:	jns    0x40fa4c
  40faab:	inc    esi
  40faac:	jl     0x40fa60
  40faae:	(bad)
  40fab1:	(bad)  
  40fab2:	lods   eax,DWORD PTR ds:[esi]
  40fab3:	add    BYTE PTR [eax-0x1],0x26
  40fab7:	fnstenv [ecx]
  40fab9:	dec    ebx
  40faba:	clc    
  40fabb:	sbb    al,0xc8
  40fabd:	sub    eax,0xc8f87a7f
  40fac2:	xchg   edx,eax
  40fac3:	fadd   st,st(4)
  40fac5:	aam    0xcc
  40fac7:	arpl   bx,si
  40fac9:	sbb    al,0x72
  40facb:	xchg   esp,eax
  40facc:	mov    ecx,es
  40face:	jae    0x40fa94
  40fad0:	mov    edx,0x9b571d33
  40fad5:	out    dx,eax
  40fad6:	outs   dx,DWORD PTR ds:[esi]
  40fad7:	les    esp,FWORD PTR [eax+0x11872922]
  40fadd:	mov    edi,0x236482e4
  40fae2:	mov    esp,0xf3b26c3b
  40fae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fae8:	out    0x53,al
  40faea:	jmp    0x40fa97
  40faec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faed:	test   eax,0x5da63653
  40faf2:	and    DWORD PTR [eax],ecx
  40faf4:	sub    BYTE PTR [edx+ecx*2+0x3d],ah
  40faf8:	inc    ecx
  40faf9:	or     al,0x25
  40fafb:	or     BYTE PTR [edx+0x56],0x5
  40faff:	push   es
  40fb00:	lock call FWORD PTR [ecx-0xcefeabd]
  40fb07:	jno    0x40fb55
  40fb09:	popf   
  40fb0a:	out    dx,al
  40fb0b:	in     eax,0x3c
  40fb0d:	xchg   ebp,eax
  40fb0e:	jns    0x40faf7
  40fb10:	int3   
  40fb11:	in     al,dx
  40fb12:	mov    edx,0x73efa728
  40fb17:	aad    0x3e
  40fb19:	add    eax,DWORD PTR ds:0x739f4a80
  40fb1f:	(bad)  
  40fb20:	dec    ebx
  40fb21:	xor    bh,bl
  40fb23:	retf   
  40fb24:	xor    al,0x6b
  40fb26:	xchg   edi,eax
  40fb27:	xor    eax,0x1ea41307
  40fb2c:	fs mov ebx,0xbaf17418
  40fb32:	dec    ecx
  40fb33:	imul   BYTE PTR [edi+0x11]
  40fb36:	in     eax,0xe7
  40fb38:	hlt    
  40fb39:	test   al,0x6b
  40fb3b:	shr    BYTE PTR [ecx-0x408c54d6],1
  40fb41:	aas    
  40fb42:	loope  0x40facc
  40fb44:	sbb    bh,BYTE PTR [edi-0x25]
  40fb47:	adc    DWORD PTR [ebx+eiz*2+0x2efcf2f9],ecx
  40fb4e:	push   cs
  40fb4f:	sub    edi,DWORD PTR [ebp-0x6a0973f0]
  40fb55:	pop    ds
  40fb56:	sbb    eax,0x9ed41a27
  40fb5b:	hlt    
  40fb5c:	xchg   ebp,eax
  40fb5d:	(bad)  [ecx]
  40fb5f:	add    edi,ecx
  40fb61:	fsubr  DWORD PTR [edi]
  40fb63:	inc    edi
  40fb64:	(bad)  
  40fb65:	mov    ds:0x1775d2c7,eax
  40fb6a:	and    ah,BYTE PTR [eax]
  40fb6c:	ja     0x40fbd1
  40fb6e:	iret   
  40fb6f:	mov    bl,0x46
  40fb71:	jmp    0x40fb68
  40fb73:	adc    eax,0xbbc5f9bb
  40fb78:	nop
  40fb79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb7a:	push   ebp
  40fb7b:	clc    
  40fb7c:	test   DWORD PTR [ebx+eiz*1],esi
  40fb7f:	adc    edx,DWORD PTR [edi+0x4c]
  40fb82:	das    
  40fb83:	data16 jp 0x40fb95
  40fb86:	ins    BYTE PTR es:[edi],dx
  40fb87:	(bad)  
  40fb88:	pop    edi
  40fb89:	in     al,0x21
  40fb8b:	xchg   ebx,eax
  40fb8c:	sbb    DWORD PTR [eax],esi
  40fb8e:	test   al,0x1a
  40fb90:	icebp  
  40fb91:	cmp    eax,DWORD PTR [eax+0x3503af84]
  40fb97:	inc    ebx
  40fb98:	inc    ebx
  40fb99:	xchg   DWORD PTR [eax-0x42],ebx
  40fb9c:	ror    DWORD PTR [edx-0x64c7f549],0xc6
  40fba3:	dec    edx
  40fba4:	sub    ah,bl
  40fba6:	adc    bh,BYTE PTR [ecx-0x42e11dc0]
  40fbac:	leave  
  40fbad:	pop    edi
  40fbae:	sub    BYTE PTR [ebx],cl
  40fbb0:	inc    eax
  40fbb1:	test   ch,bh
  40fbb3:	lahf   
  40fbb4:	jge    0x40fb86
  40fbb6:	push   edx
  40fbb7:	loopne 0x40fb3c
  40fbb9:	mov    al,ds:0xc90e3cd3
  40fbbe:	retf   0x5ec6
  40fbc1:	bound  esi,QWORD PTR [edx]
  40fbc3:	mov    eax,ds:0xb3a09bab
  40fbc8:	stc    
  40fbc9:	cmp    esi,DWORD PTR [esi+0x15]
  40fbcc:	or     BYTE PTR [esi+0x47c56ef5],dl
  40fbd2:	push   esi
  40fbd3:	dec    ecx
  40fbd4:	push   esi
  40fbd5:	jl     0x40fc36
  40fbd7:	mov    esi,0x6fa15f1a
  40fbdc:	out    dx,eax
  40fbdd:	xor    edx,DWORD PTR [edx+0x14]
  40fbe0:	adc    ch,BYTE PTR [ecx+edx*8]
  40fbe3:	fs mov cl,0xb9
  40fbe6:	mov    ds:0x71153c3e,eax
  40fbeb:	fs mov bl,0x4d
  40fbee:	ds in  al,0xb1
  40fbf1:	mov    BYTE PTR ds:0x218fa8e1,ah
  40fbf7:	inc    eax
  40fbf8:	test   eax,0x2a96f616
  40fbfd:	lods   al,BYTE PTR ds:[esi]
  40fbfe:	shl    BYTE PTR [ebx+0x2930e500],0xab
  40fc05:	or     eax,edi
  40fc07:	xchg   edx,eax
  40fc08:	add    al,0x1a
  40fc0a:	(bad)  [ebx-0x37]
  40fc0d:	add    DWORD PTR [ebx-0x6c],0x8089e78d
  40fc14:	nop
  40fc15:	(bad)  
  40fc16:	ins    BYTE PTR es:[edi],dx
  40fc17:	xchg   ecx,eax
  40fc18:	mov    dl,0x3
  40fc1a:	aad    0x55
  40fc1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc1d:	test   ebx,eax
  40fc1f:	xor    edi,ebp
  40fc21:	adc    bh,BYTE PTR ds:0x657cd26
  40fc27:	jno    0x40fbf4
  40fc29:	mov    al,BYTE PTR [eax-0xb4e5e36]
  40fc2f:	in     eax,dx
  40fc30:	cwde   
  40fc31:	mov    ecx,0x4432def1
  40fc36:	add    BYTE PTR ds:0x59005a0a,dl
  40fc3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc3d:	rcr    ah,1
  40fc3f:	sti    
  40fc40:	call   0xb9176a75
  40fc45:	sahf   
  40fc46:	add    bl,0xf3
  40fc49:	mov    eax,0xce4d68e9
  40fc4e:	mov    ecx,0x9d5626a0
  40fc53:	icebp  
  40fc54:	inc    esi
  40fc55:	xchg   edi,eax
  40fc56:	xchg   ebx,eax
  40fc57:	into   
  40fc58:	mov    ds:0x70629ac8,eax
  40fc5d:	sbb    bh,bl
  40fc5f:	mov    cl,0xfe
  40fc61:	retf   0x68bf
  40fc64:	retf   0x7286
  40fc67:	fwait
  40fc68:	add    al,0x95
  40fc6a:	mov    eax,ds:0xd8e59970
  40fc6f:	xor    BYTE PTR [ecx],ch
  40fc71:	std    
  40fc72:	push   cs
  40fc73:	inc    esi
  40fc74:	inc    esp
  40fc75:	jp     0x40fcbb
  40fc77:	pop    ebp
  40fc78:	adc    al,0x46
  40fc7a:	(bad)  
  40fc7c:	mov    ebx,0xc5687f8c
  40fc81:	dec    esi
  40fc82:	and    BYTE PTR [edx-0x6d],al
  40fc85:	in     al,0x2e
  40fc87:	sar    bh,0xb8
  40fc8a:	loop   0x40fc4a
  40fc8c:	jns    0x40fc82
  40fc8e:	mov    ebx,0xfa62422d
  40fc93:	fidivr DWORD PTR [ecx]
  40fc95:	pop    ss
  40fc96:	icebp  
  40fc97:	jo     0x40fcc6
  40fc99:	rcr    esi,1
  40fc9b:	xchg   esi,eax
  40fc9c:	push   cs
  40fc9d:	lahf   
  40fc9e:	inc    eax
  40fc9f:	push   ebx
  40fca0:	in     eax,dx
  40fca1:	mov    esi,0xe38500e4
  40fca6:	xor    bh,BYTE PTR [ebx]
  40fca8:	pop    ecx
  40fca9:	push   edx
  40fcaa:	aas    
  40fcab:	ss mov cl,0x94
  40fcae:	pop    ss
  40fcaf:	sub    al,0x10
  40fcb1:	lahf   
  40fcb2:	add    DWORD PTR [ebp-0x6dab8e6b],ecx
  40fcb8:	repz fdiv QWORD PTR [edx]
  40fcbb:	cld    
  40fcbc:	dec    eax
  40fcbd:	sub    edi,DWORD PTR [eax+0x60]
  40fcc0:	jnp    0x40fc46
  40fcc2:	in     eax,dx
  40fcc3:	mov    ecx,0xaeb0b162
  40fcc8:	je     0x40fd33
  40fcca:	or     eax,0xb160a25d
  40fccf:	cdq    
  40fcd0:	push   ss
  40fcd1:	(bad)  
  40fcd3:	jo     0x40fcdb
  40fcd5:	jne    0x40fc5d
  40fcd7:	outs   dx,DWORD PTR ds:[esi]
  40fcd8:	ins    DWORD PTR es:[edi],dx
  40fcd9:	leave  
  40fcda:	sbb    edx,DWORD PTR [edi+0x66b1a7e]
  40fce0:	push   ss
  40fce1:	mov    ecx,0xd836d5a7
  40fce6:	mov    ecx,0x3f48104b
  40fceb:	add    al,BYTE PTR [ecx+0x4b]
  40fcee:	sbb    DWORD PTR [ebx+0x423da6ac],ecx
  40fcf4:	xchg   ebp,eax
  40fcf5:	sbb    dl,cl
  40fcf7:	out    0x5d,al
  40fcf9:	xchg   esp,eax
  40fcfb:	les    ecx,FWORD PTR [ebx-0x2d5251fa]
  40fd01:	mov    ecx,0xef38cea
  40fd06:	es jmp 0x11d8:0x594bb601
  40fd0e:	fwait
  40fd0f:	popa   
  40fd10:	dec    ebx
  40fd11:	and    ebx,DWORD PTR es:[ebp+edx*1+0x6ace2e55]
  40fd19:	aas    
  40fd1a:	test   DWORD PTR [edx],ebx
  40fd1c:	and    eax,DWORD PTR [ebx]
  40fd1e:	iret   
  40fd1f:	or     DWORD PTR [ecx+0x3b160828],ebp
  40fd25:	mov    cl,0x5
  40fd27:	add    bl,bl
  40fd29:	imul   edi,DWORD PTR [ecx+0xa820ec9],0xffffffcb
  40fd30:	out    0xb,al
  40fd32:	mov    gs,WORD PTR ds:0xab8240aa
  40fd38:	nop
  40fd39:	mov    cl,0x81
  40fd3b:	dec    esp
  40fd3c:	test   al,0xda
  40fd3e:	jmp    0x40fd1a
  40fd40:	gs ja  0x40fcd7
  40fd43:	pop    esi
  40fd44:	mov    bl,0xd9
  40fd46:	popf   
  40fd47:	jmp    0x28f4c9f7
  40fd4c:	and    BYTE PTR [edi+0x619fb937],dh
  40fd52:	sbb    eax,DWORD PTR [edi]
  40fd54:	out    dx,eax
  40fd55:	pop    edx
  40fd56:	xchg   BYTE PTR [esi],ah
  40fd58:	call   0xd1948d73
  40fd5d:	push   eax
  40fd5e:	mov    dl,0xb4
  40fd60:	xlat   BYTE PTR ds:[ebx]
  40fd61:	out    dx,eax
  40fd62:	(bad)  
  40fd63:	inc    ebp
  40fd64:	repnz test eax,0x1fa999fe
  40fd6a:	ja     0x40fd34
  40fd6c:	dec    ebp
  40fd6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd6e:	(bad)  
  40fd6f:	push   esp
  40fd70:	lea    esp,[ecx-0x4348c8ca]
  40fd76:	fld    DWORD PTR [esp+edi*2]
  40fd79:	xor    eax,0x2798500e
  40fd7e:	mov    ecx,edx
  40fd80:	aas    
  40fd81:	dec    ecx
  40fd82:	out    0xaf,eax
  40fd84:	sub    edi,DWORD PTR [ebx-0x1f3579f8]
  40fd8a:	cdq    
  40fd8b:	fld    TBYTE PTR [esi-0x12ac8dde]
  40fd91:	mov    cl,0xc3
  40fd93:	xor    BYTE PTR [edi+0x337b1c19],cl
  40fd99:	clc    
  40fd9a:	jae    0x40fdb9
  40fd9c:	push   eax
  40fd9d:	xor    BYTE PTR [ebp-0x65],ch
  40fda0:	out    dx,al
  40fda1:	push   edi
  40fda3:	cmp    ebx,DWORD PTR [esi+0x4f4f3a80]
  40fda9:	shl    DWORD PTR [eax+0x4103cb75],1
  40fdaf:	jno    0x40fd45
  40fdb1:	ror    BYTE PTR [ebp+0x68],0x4c
  40fdb5:	sub    BYTE PTR [ebp-0x28],bl
  40fdb8:	pop    edi
  40fdb9:	imul   ebp,DWORD PTR [ebx-0x7],0xbe1405b0
  40fdc0:	cmc    
  40fdc1:	call   0xc29cc254
  40fdc6:	pop    edi
  40fdc7:	ret    
  40fdc8:	push   esp
  40fdc9:	fimul  WORD PTR [ecx]
  40fdcb:	jge    0x40fe19
  40fdcd:	pushf  
  40fdce:	repnz xor ebx,DWORD PTR [edx-0x63]
  40fdd2:	inc    eax
  40fdd3:	cmp    al,0x7a
  40fdd5:	ins    DWORD PTR es:[edi],dx
  40fdd6:	adc    edx,eax
  40fdd8:	xor    eax,0xf6596b1d
  40fddd:	hlt    
  40fdde:	mov    ah,0xfd
  40fde0:	addr16 xchg ecx,eax
  40fde2:	test   DWORD PTR [ebx],edx
  40fde4:	fimul  DWORD PTR [edi+0x5a9f27b5]
  40fdea:	fst    DWORD PTR [esi+ebp*4]
  40fded:	sbb    ebx,edx
  40fdef:	jle    0x40fe28
  40fdf1:	jb     0x40fe0d
  40fdf3:	push   0xe7b66e2d
  40fdf8:	add    dl,0x11
  40fdfb:	xchg   ecx,eax
  40fdfc:	dec    edx
  40fdfd:	rcl    ecx,0x6e
  40fe00:	mov    edx,0x9d5ba4c4
  40fe05:	xor    BYTE PTR [esi+0x12],0x31
  40fe09:	(bad)  
  40fe0a:	push   0xfc689215
  40fe0f:	mov    ebp,0xed755625
  40fe14:	sub    ch,BYTE PTR [ebx]
  40fe16:	seto   BYTE PTR [ebp-0x479e30de]
  40fe1d:	fs or  eax,0x9c88f31f
  40fe23:	ins    BYTE PTR es:[edi],dx
  40fe24:	and    al,0xa5
  40fe26:	xor    eax,0xfc129e27
  40fe2b:	cmp    edi,DWORD PTR [ebx+0x21890c34]
  40fe31:	mov    dh,0x9b
  40fe33:	pop    ecx
  40fe34:	mov    fs,WORD PTR [ebx+0x44]
  40fe37:	adc    al,0x82
  40fe39:	jno    0x40fe0f
  40fe3b:	imul   edi,DWORD PTR [ebp-0x1c23cb5e],0x4a
  40fe42:	push   cs
  40fe43:	cmp    BYTE PTR [ecx+0x35],cl
  40fe46:	or     dh,BYTE PTR [edx-0xb]
  40fe49:	imul   eax,DWORD PTR [ecx+0x62],0xffffff9c
  40fe4d:	push   ecx
  40fe4e:	jnp    0x40feb7
  40fe50:	or     ecx,ebx
  40fe52:	cs popa 
  40fe54:	pop    es
  40fe55:	aas    
  40fe56:	cli    
  40fe57:	xor    BYTE PTR [eax-0x26],0x63
  40fe5b:	mov    al,ds:0x9ed375d6
  40fe60:	add    al,0x8e
  40fe62:	or     edi,eax
  40fe64:	aad    0x77
  40fe66:	xlat   BYTE PTR ds:[ebx]
  40fe67:	jb     0x40fe1c
  40fe69:	and    BYTE PTR [ebp+0x3c],ch
  40fe6c:	jp     0x40fe95
  40fe6e:	jg     0x40fe16
  40fe70:	bound  ecx,QWORD PTR [edx]
  40fe72:	add    DWORD PTR [ecx],ecx
  40fe74:	xlat   BYTE PTR ds:[ebx]
  40fe75:	(bad)  
  40fe76:	cmc    
	...
  40fe7f:	outs   dx,DWORD PTR ds:[esi]
  40fe80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe81:	daa    
  40fe82:	jbe    0x40fe73
  40fe84:	idiv   DWORD PTR [edi-0x43]
  40fe87:	mov    ecx,0x3516f8af
  40fe8c:	cdq    
  40fe8d:	(bad)  
  40fe8e:	(bad)  
  40fe8f:	sti    
  40fe90:	add    al,0x1
  40fe92:	add    BYTE PTR [eax],ah
  40fe94:	pop    es
  40fe95:	add    BYTE PTR [eax],al
  40fe97:	fcom   DWORD PTR [esp+edi*2+0x7268bde6]
  40fe9e:	dec    ebp
  40fe9f:	mov    es,edx
  40fea1:	cmp    eax,0x5e19e4c5
  40fea6:	pop    ebp
  40fea7:	and    DWORD PTR [edx],ecx
  40fea9:	add    edi,DWORD PTR [edi+0x1e0ed7c6]
  40feaf:	jb     0x40fec1
  40feb1:	ds or  ch,bh
  40feb4:	outs   dx,DWORD PTR ds:[esi]
  40feb5:	iret   
  40feb6:	add    BYTE PTR [ebx+edi*2],bl
  40feb9:	push   esp
  40feba:	add    bh,BYTE PTR [edi]
  40febc:	sub    al,0x58
  40febe:	mov    al,0xd9
  40fec0:	out    0x46,eax
  40fec2:	xchg   ecx,eax
  40fec3:	adc    BYTE PTR [ebp+esi*8-0xa],0x3b
  40fec8:	jmp    0x8641e09d
  40fecd:	pop    eax
  40fece:	cmp    dh,BYTE PTR [ebx]
  40fed0:	pop    ecx
  40fed1:	add    dl,al
  40fed3:	out    dx,eax
  40fed4:	cld    
  40fed5:	cwde   
  40fed6:	jmp    0x443a8324
  40fedb:	xor    ebx,ebp
  40fedd:	sbb    eax,0x73c9a1f9
  40fee2:	bound  esp,QWORD PTR [eax]
  40fee4:	pop    edi
  40fee5:	scas   eax,DWORD PTR es:[edi]
  40fee6:	nop
  40fee7:	clc    
  40fee8:	sub    eax,0xfd32036
  40feed:	dec    esi
  40feee:	mov    edi,0x88f1994b
  40fef3:	dec    edi
  40fef4:	cmp    eax,0x195b7fbf
  40fef9:	pop    es
  40fefa:	stc    
  40fefb:	pop    ebp
  40fefc:	cld    
  40fefd:	dec    edx
  40fefe:	mov    esi,0xb73b0e7
  40ff03:	imul   ecx,DWORD PTR [esi+0x14b3209b],0x1bf5da45
  40ff0d:	popf   
  40ff0e:	in     al,0xf8
  40ff10:	xor    eax,0xed895130
  40ff15:	or     al,0x56
  40ff17:	dec    edx
  40ff18:	xor    BYTE PTR [ebx],dh
  40ff1a:	hlt    
  40ff1b:	pop    ecx
  40ff1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff1d:	add    cl,bl
  40ff1f:	pop    edi
  40ff20:	ror    BYTE PTR [ebx],cl
  40ff22:	imul   ebx,DWORD PTR [ebx-0x9],0x40
  40ff26:	mov    bh,0xb4
  40ff28:	mov    ch,0x34
  40ff2a:	ja     0x40fefd
  40ff2c:	cmp    ah,BYTE PTR [eax+0x75]
  40ff2f:	push   0xca05944
  40ff34:	hlt    
  40ff35:	(bad)
  40ff38:	inc    eax
  40ff39:	nop
  40ff3a:	inc    eax
  40ff3b:	pop    ebx
  40ff3c:	hlt    
  40ff3d:	jns    0x40fee7
  40ff3f:	jp     0xb33cf756
  40ff45:	ds dec ecx
  40ff47:	sub    DWORD PTR [ebx],eax
  40ff49:	rcl    DWORD PTR [ebx+esi*4+0x2a92273d],1
  40ff50:	jo     0x40feea
  40ff52:	jbe    0x40ff11
  40ff54:	dec    eax
  40ff55:	mov    esp,0x664bcfdc
  40ff5a:	ror    DWORD PTR [esi],1
  40ff5c:	and    al,0xc1
  40ff5e:	mov    dh,0x58
  40ff60:	push   ebx
  40ff61:	ds hlt 
  40ff63:	xchg   edi,eax
  40ff64:	dec    edx
  40ff65:	or     ebp,DWORD PTR [eax-0x29677c81]
  40ff6b:	mul    BYTE PTR [edx+0x296f4e10]
  40ff71:	add    DWORD PTR [edx],0x1e
  40ff74:	sub    eax,0x25d97b92
  40ff79:	(bad)  [edx-0x19]
  40ff7c:	pop    ds
  40ff7d:	mov    dl,0x64
  40ff7f:	inc    DWORD PTR [eax]
  40ff81:	enter  0x901c,0xb6
  40ff85:	pop    ebx
  40ff86:	xchg   ebx,eax
  40ff87:	mov    ecx,0xac1c5343
  40ff8c:	test   al,0xf4
  40ff8e:	xchg   edi,eax
  40ff8f:	add    ecx,ebx
  40ff91:	mov    ch,0xbc
  40ff93:	(bad)  
  40ff95:	mov    DWORD PTR [eax-0x78b1e1f7],ebp
  40ff9b:	xor    DWORD PTR [ecx-0x51],0x6a6169fe
  40ffa2:	pop    eax
  40ffa3:	sti    
  40ffa4:	scas   al,BYTE PTR es:[edi]
  40ffa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffa6:	push   ds
  40ffa7:	inc    esi
  40ffa8:	sbb    DWORD PTR [edx+0x233b3c21],esi
  40ffae:	add    al,0xe9
  40ffb0:	mov    al,ds:0x91a688b9
  40ffb5:	repnz sbb BYTE PTR [edi+0x4],bh
  40ffb9:	es pusha 
  40ffbb:	sbb    eax,0xba33b2e4
  40ffc0:	fwait
  40ffc1:	lock popa 
  40ffc3:	popa   
  40ffc4:	jo     0x41001b
  40ffc6:	jp     0x40ffb5
  40ffc8:	and    bh,bl
  40ffca:	addr16 nop
  40ffcc:	mov    cl,BYTE PTR [edx]
  40ffce:	popf   
  40ffcf:	adc    ah,bl
  40ffd1:	dec    ebx
  40ffd2:	pusha  
  40ffd3:	stos   BYTE PTR es:[edi],al
  40ffd4:	js     0x40ffbd
  40ffd6:	(bad)  
  40ffd7:	mov    bl,0x71
  40ffd9:	rcl    BYTE PTR [ebx],1
  40ffdb:	fsubr  st(7),st
  40ffdd:	cmp    edx,edi
  40ffdf:	out    0x2d,al
  40ffe1:	cmp    BYTE PTR [esp+eiz*8],0xec
  40ffe5:	scas   al,BYTE PTR es:[edi]
  40ffe6:	rcl    BYTE PTR [ebp-0x618750e8],1
  40ffec:	in     al,0x5d
  40ffee:	imul   esp,DWORD PTR [edx],0xcc1c2f6a
  40fff4:	jae    0x40ffa7
  40fff6:	pop    esp
  40fff7:	loopne 0x410060
  40fff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fffa:	icebp  
  40fffb:	adc    al,0xd8
  40fffd:	dec    esp
  40fffe:	jae    0x40fff1
  410000:	repnz stc 
  410002:	imul   ebx,ecx,0x52d21dc7
  410008:	mov    ds:0x7c001e80,eax
  41000d:	sub    eax,0x95fea803
  410012:	cld    
  410013:	sub    ecx,DWORD PTR [edi]
  410015:	sbb    BYTE PTR [esi+0x72],al
  410018:	div    BYTE PTR [edx]
  41001a:	pop    ebp
  41001b:	fimul  WORD PTR [edi-0x1ded7f60]
  410021:	das    
  410022:	dec    ecx
  410023:	gs inc eax
  410025:	sub    eax,0x93b4e3c0
  41002a:	jne    0x40ffb3
  41002c:	jp     0x41004e
  41002e:	dec    ebx
  41002f:	sub    ah,BYTE PTR [ecx+0x51]
  410032:	sbb    al,0x93
  410034:	mov    al,ds:0xb6e03ef
  410039:	or     BYTE PTR [eax+0x5630cfdf],dl
  41003f:	ret    0x7948
  410042:	fwait
  410043:	rol    BYTE PTR [edx-0x80],0x59
  410047:	ret    0x2c89
  41004a:	mov    ecx,0xefe09b1b
  41004f:	stc    
  410050:	jne    0x40ffee
  410052:	add    ebp,DWORD PTR [eax+0x88861c8]
  410058:	and    esp,DWORD PTR [eax-0x616ea680]
  41005e:	nop
  41005f:	stc    
  410060:	jne    0x41001f
  410062:	mov    ebp,DWORD PTR [edi+0x66ff6671]
  410068:	xor    al,0x51
  41006a:	cmp    BYTE PTR [edi-0x2],cl
  41006d:	xor    bl,BYTE PTR [edx]
  41006f:	jl     0x4100b7
  410071:	cmp    edx,eax
  410073:	mov    ah,0x10
  410075:	xchg   edi,eax
  410076:	cmp    al,0x75
  410078:	jmp    0x410065
  41007a:	jnp    0x410070
  41007c:	pop    eax
  41007d:	sti    
  41007e:	mov    ds:0x94f180c6,eax
  410083:	pop    ebx
  410084:	lock jle 0x410102
  410087:	imul   eax,DWORD PTR [esi-0xbf486da],0x1adcfd4c
  410091:	jmp    DWORD PTR [esi+0x34f82547]
  410097:	xor    eax,0xfa4d7297
  41009c:	or     edx,ecx
  41009e:	aas    
  41009f:	jmp    0xd322fe4f
  4100a4:	hlt    
  4100a5:	mov    eax,0xef3007cd
  4100aa:	setle  BYTE PTR [ecx+0xb]
  4100ae:	jno    0x41010c
  4100b0:	xchg   DWORD PTR [ecx+esi*4],ecx
  4100b3:	mov    eax,ds:0x3c1c21f0
  4100b8:	in     al,dx
  4100b9:	enter  0xaa67,0xde
  4100bd:	call   0x86a62867
  4100c2:	mov    esp,0xfa15ef37
  4100c7:	clc    
  4100c8:	ins    DWORD PTR es:[edi],dx
  4100c9:	enter  0xf2e3,0x17
  4100cd:	mov    cl,0xd6
  4100cf:	pop    esi
  4100d0:	dec    ecx
  4100d1:	out    dx,eax
  4100d2:	(bad)  
  4100d3:	int    0x3a
  4100d5:	cmp    al,0x39
  4100d7:	pop    ecx
  4100d8:	adc    DWORD PTR [esi+0x5c5d5a4a],eax
  4100de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100df:	dec    eax
  4100e0:	mov    edx,0x453bcf6c
  4100e5:	jg     0x410121
  4100e7:	retf   0x20da
  4100ea:	jp     0x4100e1
  4100ec:	inc    ecx
  4100ed:	in     al,dx
  4100ee:	inc    edi
  4100ef:	pop    ebx
  4100f0:	sbb    edi,eax
  4100f2:	mov    bl,0x3b
  4100f4:	xchg   ebp,eax
  4100f5:	rol    BYTE PTR [edx+0x437accf9],cl
  4100fb:	jmp    0xc19840c2
  410100:	loopne 0x41008b
  410102:	sbb    eax,0x67fb9721
  410107:	xchg   DWORD PTR [edx-0x203cb78d],ecx
  41010d:	ss mov dl,0xe
  410110:	adc    DWORD PTR [ebx-0x13],eax
  410113:	data16 es gs aam 0xd7
  410118:	mov    edx,DWORD PTR [esi]
  41011a:	jb     0x4100c3
  41011c:	fld    TBYTE PTR [ebx-0x52]
  41011f:	into   
  410120:	mov    ch,0x9c
  410122:	cmp    BYTE PTR [ebp-0x1e38a23e],0xe5
  410129:	aad    0x55
  41012b:	shl    BYTE PTR [esi],1
  41012d:	pop    edi
  41012e:	or     al,BYTE PTR [ebx-0x50]
  410131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410132:	into   
  410133:	add    DWORD PTR [edi],ebx
  410135:	loopne 0x410180
  410137:	outs   dx,DWORD PTR ds:[esi]
  410138:	(bad)
  41013b:	sbb    ebx,DWORD PTR [edi]
  41013d:	imul   ebp,DWORD PTR [esi],0xffffffdd
  410140:	inc    eax
  410141:	mov    edx,DWORD PTR [edx-0x69]
  410144:	mov    DWORD PTR [edi],eax
  410146:	shr    cl,1
  410148:	push   ss
  410149:	not    BYTE PTR [ebx+ebx*4+0x5f046268]
  410150:	mov    ds:0x2a6ab61c,eax
  410155:	jne    0x410158
  410157:	aas    
  410158:	sbb    al,BYTE PTR [ebp-0x4a]
  41015b:	sub    eax,0xdb602834
  410160:	mov    esi,0x4509c6c7
  410165:	xchg   edx,eax
  410166:	dec    eax
  410167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410168:	cmp    BYTE PTR [ecx*4+0x2b79318f],0x63
  410170:	jns    0x4101b2
  410172:	or     BYTE PTR [esi],0x4
  410175:	call   0xd2ce4764
  41017a:	push   0xc0bbb77f
  41017f:	bound  esp,QWORD PTR [esi]
  410181:	xchg   edx,eax
  410182:	sub    DWORD PTR [ebp-0x35cdca08],0x7d
  410189:	popf   
  41018a:	and    DWORD PTR [esi+0x6eb52789],edi
  410190:	xchg   edi,eax
  410191:	push   eax
  410192:	icebp  
  410193:	inc    edi
  410194:	jae    0x4101a2
  410196:	bound  ecx,QWORD PTR [edx-0x6c]
  410199:	pop    DWORD PTR [ebp+0xa]
  41019c:	in     al,dx
  41019d:	(bad)  
  41019e:	mov    esi,0x5ed54c3e
  4101a3:	mov    ah,0x18
  4101a5:	loopne 0x4101ef
  4101a7:	arpl   di,ax
  4101a9:	ret    
  4101aa:	icebp  
  4101ab:	sti    
  4101ac:	ins    DWORD PTR es:[edi],dx
  4101ad:	or     BYTE PTR [ebx-0x18],dl
  4101b0:	popa   
  4101b1:	pop    DWORD PTR [edi+0x2b]
  4101b4:	lods   al,BYTE PTR ds:[esi]
  4101b5:	xchg   edi,eax
  4101b6:	sar    dl,cl
  4101b8:	pushf  
  4101b9:	cli    
  4101ba:	lock jl 0x4101b2
  4101bd:	cld    
  4101be:	push   0xba8789ca
  4101c3:	outs   dx,BYTE PTR ds:[esi]
  4101c4:	ret    
  4101c5:	cld    
  4101c6:	pop    es
  4101c7:	push   cs
  4101c8:	jl     0x410156
  4101ca:	mov    ah,0x87
  4101cc:	xlat   BYTE PTR ds:[ebx]
  4101cd:	imul   esi,esi,0xffffff9a
  4101d0:	cmp    eax,0x268420ea
  4101d5:	mov    dh,0x4c
  4101d7:	test   eax,0xb67fcec4
  4101dc:	push   cs
  4101dd:	mov    ch,0xb2
  4101df:	or     al,0xdf
  4101e1:	out    dx,al
  4101e2:	or     al,0xa1
  4101e4:	xchg   ebx,eax
  4101e5:	in     eax,dx
  4101e6:	in     eax,0xb9
  4101e8:	add    edi,esp
  4101ea:	es (bad) 
  4101ec:	sti    
  4101ed:	sub    al,0x93
  4101ef:	mov    ds:0x99b11f44,al
  4101f4:	sar    DWORD PTR [ecx],0xb
  4101f7:	xchg   ecx,eax
  4101f8:	outs   dx,DWORD PTR ds:[esi]
  4101f9:	adc    ah,bl
  4101fb:	add    BYTE PTR [ecx+0x8dfbd23],0xc1
  410202:	pop    ss
  410203:	ret    0xca6b
  410206:	mov    dh,0x6d
  410208:	fsubr  QWORD PTR [edx]
  41020a:	mov    edx,0xe0d079d7
  41020f:	xchg   ebx,eax
  410210:	inc    ebx
  410211:	outs   dx,BYTE PTR ds:[esi]
  410212:	sub    ebp,DWORD PTR [ebp+0x61]
  410215:	out    0xf9,eax
  410217:	cmc    
  410218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410219:	test   eax,0xe8a342fe
  41021e:	or     dl,BYTE PTR [ebx]
  410220:	call   0xfdcfcb98
  410225:	pushf  
  410226:	popa   
  410227:	cmp    eax,0xde38a0a8
  41022c:	lds    esi,FWORD PTR [esi]
  41022e:	sbb    ebx,0xffffffa8
  410231:	xchg   edi,ebp
  410233:	mov    al,0x62
  410235:	iret   
  410236:	ror    BYTE PTR [ebp+0x76],cl
  410239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41023a:	ret    0x1985
  41023d:	inc    esp
  41023e:	sub    al,0x3e
  410240:	jnp    0x410286
  410242:	dec    ecx
  410243:	mov    bh,0x1f
  410245:	cdq    
  410246:	fsubrp st(5),st
  410248:	pusha  
  410249:	push   cs
  41024a:	shr    BYTE PTR [ecx-0x29a6b728],cl
  410250:	sbb    bh,bh
  410252:	cdq    
  410253:	lods   al,BYTE PTR ds:[esi]
  410254:	retf   0x7838
  410257:	add    eax,0x103c2597
  41025c:	adc    ecx,DWORD PTR [ebp+0x54becefa]
  410262:	clc    
  410263:	sub    ebx,ebp
  410265:	bound  ebx,QWORD PTR [ebx+0x648aab3f]
  41026b:	out    0x45,eax
  41026d:	sti    
  41026e:	(bad)  
  410270:	mov    dh,0xe5
  410272:	addr16 sub esp,edx
  410275:	ret    
  410276:	sub    BYTE PTR [ecx-0x7d],bh
  410279:	aam    0x2b
  41027b:	xor    BYTE PTR [ebx],0xc9
  41027e:	ds and esi,ebx
  410281:	jno    0x410207
  410283:	(bad)  
  410284:	div    DWORD PTR [ecx+0x71]
  410287:	arpl   WORD PTR [edx-0x5f7e4fab],dx
  41028d:	popa   
  41028e:	repz mov esi,0xb7e5f7aa
  410294:	std    
  410295:	out    dx,eax
  410296:	mov    ebp,0x3b64b004
  41029b:	sbb    DWORD PTR [edx-0x5c],edx
  41029e:	ja     0x410258
  4102a0:	sbb    al,0x94
  4102a2:	sub    eax,0x918c6683
  4102a7:	pusha  
  4102a8:	mov    edi,0xccd4a2b6
  4102ad:	dec    ecx
  4102ae:	or     BYTE PTR ds:0x512ba33a,cl
  4102b4:	daa    
  4102b5:	pop    esp
  4102b6:	rol    BYTE PTR [eax],cl
  4102b8:	dec    esp
  4102b9:	aam    0x80
  4102bb:	xchg   DWORD PTR [ebp-0x6a],esi
  4102be:	ja     0x410255
  4102c0:	dec    ebx
  4102c2:	mov    ds:0xfb3f1443,eax
  4102c7:	pop    ebx
  4102c8:	aas    
  4102c9:	test   DWORD PTR [eax+0x34],0xbaf5cb27
  4102d0:	js     0x410309
  4102d2:	scas   al,BYTE PTR es:[edi]
  4102d3:	iret   
  4102d4:	ret    0x9797
  4102d7:	dec    esp
  4102d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102d9:	outs   dx,DWORD PTR ds:[esi]
  4102da:	mov    eax,edi
  4102dc:	jmp    0x3da89696
  4102e1:	jne    0x41034d
  4102e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102e4:	xchg   ecx,eax
  4102e5:	out    dx,eax
  4102e6:	push   edx
  4102e7:	push   edx
  4102e8:	outs   dx,BYTE PTR ds:[esi]
  4102e9:	push   eax
  4102ea:	push   ss
  4102eb:	jecxz  0x41032a
  4102ed:	test   eax,0xe415b17a
  4102f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102f3:	gs add eax,0xaf0b601e
  4102f9:	lods   eax,DWORD PTR ds:[esi]
  4102fa:	jmp    0x410316
  4102fc:	jno    0x4102e8
  4102fe:	pop    ebp
  4102ff:	xlat   BYTE PTR ds:[ebx]
  410300:	push   ecx
  410301:	inc    ecx
  410302:	inc    edi
  410303:	popa   
  410304:	pop    eax
  410305:	sub    al,BYTE PTR [ebx]
  410307:	dec    edi
  410308:	addr16 add ebp,ebx
  41030b:	pop    ecx
  41030c:	inc    ebx
  41030d:	stos   BYTE PTR es:[edi],al
  41030e:	daa    
  41030f:	shl    DWORD PTR [ebp-0x11eb8535],0x45
  410316:	sahf   
  410317:	cmp    bh,ah
  410319:	add    DWORD PTR [edx+ebx*8+0x8],ecx
  41031d:	and    ebp,ebp
  41031f:	xchg   DWORD PTR [edx-0x7fc49964],edx
  410325:	ret    0xa99d
  410328:	mov    ch,0x12
  41032a:	icebp  
  41032b:	mov    edx,0x112d144c
  410330:	xor    al,0xaa
  410332:	arpl   bx,ax
  410334:	adc    eax,0xba96b77c
  410339:	and    eax,0x427282ce
  41033e:	mov    dl,0x91
  410340:	and    eax,DWORD PTR [edx-0x6f]
  410343:	out    dx,eax
  410344:	jmp    0x299d5ae7
  410349:	(bad)  
  41034a:	rcl    DWORD PTR [edi],0xe3
  41034d:	mov    dh,0xc5
  41034f:	clc    
  410350:	push   ebp
  410351:	or     al,0xc5
  410353:	adc    DWORD PTR [ebp+edi*1-0x5e],0x58158564
  41035b:	xchg   esp,eax
  41035c:	jmp    0x4103ae
  41035e:	pop    es
  41035f:	pusha  
  410360:	adc    WORD PTR [esi-0xd],ax
  410364:	jo     0x41039b
  410366:	fwait
  410367:	out    0x37,eax
  410369:	inc    eax
  41036a:	mov    cl,BYTE PTR [ebp-0x72]
  41036d:	pop    ebx
  41036e:	mov    eax,ds:0x7e497681
  410373:	(bad)  
  410374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410375:	fild   WORD PTR [ebx+ebp*4-0x50741982]
  41037c:	xor    eax,0xaa5b4462
  410381:	add    eax,0xe151a2c2
  410386:	add    al,BYTE PTR [esi]
  410388:	fldpi  
  41038a:	(bad)  
  41038b:	adc    dh,cl
  41038d:	inc    ebx
  41038f:	das    
  410390:	xchg   ebx,eax
  410391:	arpl   WORD PTR [ecx],cx
  410393:	xor    eax,esi
  410395:	sbb    eax,0xc33f8eab
  41039a:	popf   
  41039b:	pusha  
  41039c:	dec    edi
  41039d:	pop    edx
  41039e:	and    cl,dh
  4103a0:	or     BYTE PTR [ecx-0x6f],dl
  4103a3:	push   ecx
  4103a4:	xchg   ecx,ecx
  4103a6:	or     cl,BYTE PTR [esi+ebx*8]
  4103a9:	xchg   esi,eax
  4103aa:	jb     0x4103ef
  4103ac:	sbb    al,0x2b
  4103ae:	add    DWORD PTR [ebx+0x6d29af10],edi
  4103b4:	add    al,0x9e
  4103b6:	cvtpi2ps xmm6,QWORD PTR [edx]
  4103b9:	sbb    dh,ah
  4103bb:	mov    dl,0x87
  4103bd:	in     eax,0x9a
  4103bf:	lahf   
  4103c0:	xchg   esp,eax
  4103c1:	aas    
  4103c2:	mov    eax,0x3c526339
  4103c7:	jno    0x41034d
  4103c9:	mov    ebx,0x39e200c0
  4103ce:	inc    ebx
  4103cf:	test   eax,0xcf3ba134
  4103d4:	mov    dh,0x1a
  4103d6:	retf   0xd369
  4103d9:	repnz add DWORD PTR [esi-0x62],eax
  4103dd:	mov    eax,0x8133a6dd
  4103e2:	es sbb esp,ebp
  4103e5:	sub    al,0x93
  4103e7:	mov    edi,0x9c821911
  4103ec:	jo     0x410397
  4103ee:	(bad)  
  4103f0:	repz fiadd DWORD PTR [esi+0x672a5c08]
  4103f7:	jns    0x4103bd
  4103f9:	loopne 0x410397
  4103fb:	push   ecx
  4103fc:	and    DWORD PTR [ebx],0xffffffcc
  4103ff:	sub    DWORD PTR [ebp-0x3d],esi
  410402:	or     ebp,ebp
  410404:	popa   
  410405:	fistp  WORD PTR [ebx-0x4018983e]
  41040b:	rol    DWORD PTR [edx-0x35],0xa1
  41040f:	ds out 0xde,al
  410412:	pushf  
  410413:	push   ebx
  410414:	dec    esp
  410415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410416:	or     edx,DWORD PTR [esi-0x1b8e4dae]
  41041c:	or     al,0xd1
  41041e:	or     edi,DWORD PTR [ebp-0x1274cfaa]
  410424:	push   edi
  410425:	les    esi,FWORD PTR [ebp-0x6b9ba57c]
  41042b:	push   ebp
  41042c:	iret   
  41042d:	adc    ch,BYTE PTR [ebx]
  41042f:	into   
  410430:	sbb    DWORD PTR [edx+0x9],edx
  410433:	sub    bh,0xd
  410436:	arpl   WORD PTR [ecx+ebx*4+0x1a],di
  41043a:	xchg   DWORD PTR [edx+esi*1-0x6013644f],esi
  410441:	imul   esp,DWORD PTR [ecx+0x61],0x7e152986
  410448:	xor    eax,edi
  41044a:	or     edi,DWORD PTR [edi-0x6b]
  41044d:	stos   DWORD PTR es:[edi],eax
  41044e:	lods   al,BYTE PTR ds:[esi]
  41044f:	mov    edi,0xa2d683c6
  410454:	cmc    
  410455:	(bad)  
  410456:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410458:	aad    0x2a
  41045a:	xor    al,BYTE PTR ds:0x864ecc27
  410460:	add    ah,al
  410462:	bnd ja 0x41044a
  410465:	(bad)  
  410467:	lods   al,BYTE PTR ds:[esi]
  410468:	sbb    ah,BYTE PTR [edi+0x49b19bcb]
  41046e:	mov    ds:0x720d4bc,al
  410473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410474:	mov    ah,0xbc
  410476:	cmp    BYTE PTR [edx],bh
  410478:	cli    
  410479:	mov    ds:0x6d84a346,eax
  41047e:	icebp  
  41047f:	imul   ebp,ecx,0x1363de97
  410485:	mov    cl,0xd
  410487:	inc    edi
  410488:	popf   
  410489:	lock xchg ecx,eax
  41048b:	push   esp
  41048c:	int    0x8a
  41048e:	loop   0x410441
  410490:	(bad)  
  410491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410492:	pop    ecx
  410493:	xchg   BYTE PTR [edi+eax*1],bh
  410496:	das    
  410497:	cmp    DWORD PTR [ecx-0x75a2f7d8],esi
  41049d:	cmp    bl,bh
  41049f:	test   al,0x9
  4104a1:	cdq    
  4104a2:	cld    
  4104a3:	sub    al,0x4a
  4104a5:	add    bh,dl
  4104a7:	repz mov edi,0x1689b18
  4104ad:	scas   eax,DWORD PTR es:[edi]
  4104ae:	mov    esp,0x39498013
  4104b3:	push   esi
  4104b4:	mov    ebp,0x1ccf9f81
  4104b9:	inc    edi
  4104ba:	dec    esp
  4104bb:	sub    BYTE PTR [edx+0x6d],0x93
  4104bf:	mov    ebp,edi
  4104c1:	test   al,0xc7
  4104c3:	lds    ebx,FWORD PTR [esi+ebp*1+0x657aa7a8]
  4104ca:	gs or  dh,dl
  4104cd:	pop    ebp
  4104ce:	mov    ah,0x77
  4104d0:	dec    edi
  4104d2:	sbb    al,0xa4
  4104d4:	and    eax,0xc73806ae
  4104d9:	sub    DWORD PTR [edi-0x5a],0x89bfc895
  4104e0:	mov    eax,ds:0x89678b2a
  4104e5:	test   eax,0xcbfa41c4
  4104ea:	add    BYTE PTR [esi+ecx*4-0x4060f45f],bh
  4104f1:	call   0xe1f2:0x19840256
  4104f8:	cwde   
  4104f9:	and    bh,ch
  4104fb:	dec    eax
  4104fc:	sbb    al,0x7
  4104fe:	lea    eax,[esi+0x47f5f01e]
  410504:	rcr    ebp,1
  410506:	fdivr  DWORD PTR [ebx-0x1a]
  410509:	add    DWORD PTR [ecx+edi*8-0x53dd68f7],esp
  410510:	jl     0x4104f5
  410512:	dec    ecx
  410513:	ret    
  410514:	adc    BYTE PTR [eax],0x8
  410517:	scas   eax,DWORD PTR es:[edi]
  410518:	loope  0x41051b
  41051a:	jecxz  0x4104fe
  41051c:	pop    esp
  41051d:	clc    
  41051e:	xor    edi,ebp
  410520:	in     eax,0x97
  410522:	adc    BYTE PTR [ecx+esi*2],cl
  410525:	jb     0x410573
  410527:	jg     0x4104ae
  410529:	adc    ebx,edx
  41052b:	jge    0x4104ec
  41052d:	and    DWORD PTR [esi+ebx*2-0x49],esi
  410531:	or     edx,DWORD PTR [ebx-0x4339611]
  410537:	jb     0x410546
  410539:	jbe    0x410590
  41053b:	xor    edi,DWORD PTR [ecx+0x4f92a9f1]
  410541:	cmc    
  410542:	sub    eax,0x44225870
  410547:	sub    dh,dl
  410549:	jbe    0x410509
  41054b:	sbb    BYTE PTR ds:0xbc934aaf,ch
  410551:	mov    esi,0xf91b6967
  410556:	mov    edx,0x575d46c0
  41055b:	mov    bl,0x4
  41055d:	jmp    0x54d84c2b
  410562:	inc    ebp
  410563:	mov    eax,0x8a6f63b8
  410568:	cs mov esi,0x48039362
  41056e:	inc    ebx
  41056f:	mov    eax,0x889beef
  410574:	xor    al,0x5c
  410576:	arpl   WORD PTR [ebx],cx
  410578:	adc    BYTE PTR ds:0x9007a84b,cl
  41057e:	or     dh,BYTE PTR [edi-0x2d]
  410581:	dec    eax
  410582:	aad    0x65
  410584:	fs popa 
  410586:	xlat   BYTE PTR ds:[ebx]
  410587:	loopne 0x4105ce
  410589:	cwde   
  41058a:	or     BYTE PTR [ebx+0x17],ch
  41058d:	ss pop edi
  41058f:	pushf  
  410590:	mov    bh,0x95
  410592:	xor    DWORD PTR [esi+0x9],0xb53c79a9
  410599:	ins    BYTE PTR es:[edi],dx
  41059a:	(bad)  
  41059b:	ror    BYTE PTR ds:0xd60d13d5,1
  4105a1:	adc    eax,0xb3778bf0
  4105a6:	sbb    al,0x58
  4105a8:	inc    ebx
  4105a9:	push   ebp
  4105aa:	cmp    ebp,edx
  4105ac:	(bad)  
  4105ad:	out    dx,al
  4105ae:	dec    esi
  4105af:	add    eax,0x768a0a26
  4105b4:	cpuid  
  4105b6:	fadd   QWORD PTR [eax]
  4105b8:	add    BYTE PTR [eax],al
  4105ba:	add    BYTE PTR [eax],al
  4105bc:	add    BYTE PTR [eax],al
  4105be:	add    BYTE PTR [ebx+0x1b],bh
  4105c1:	adc    BYTE PTR [eax],al
  4105c3:	lods   al,BYTE PTR ds:[esi]
  4105c4:	push   ebp
  4105c5:	adc    BYTE PTR [eax],al
  4105c7:	punpcklwd mm2,DWORD PTR [eax]
  4105ca:	add    BYTE PTR [edi+0x6300100d],ch
  4105d0:	adc    BYTE PTR gs:[eax],al
  4105d3:	shl    BYTE PTR [edi],0x10
  4105d6:	add    BYTE PTR [ecx+0x7300101d],dh
  4105dc:	js     0x4105ee
  4105de:	add    BYTE PTR [ebp+0x38],al
  4105e1:	xor    eax,0x565f3235
  4105e6:	aaa    
  4105e7:	add    BYTE PTR [eax+0x30],dl
  4105ea:	push   esp
  4105eb:	pop    edi
  4105ec:	inc    edi
  4105ed:	dec    ebp
  4105ee:	xor    bl,BYTE PTR [edx+0x5f]
  4105f1:	inc    esp
  4105f2:	ss xor BYTE PTR ss:0x4f494c00,dh
  4105fa:	xor    BYTE PTR [edi],dh
  4105fc:	pop    edi
  4105fd:	dec    edx
  4105fe:	inc    ecx
  4105ff:	add    BYTE PTR [ecx+0x47],bl
  410602:	pop    edx
  410603:	xor    eax,0x4442595f
  410608:	dec    esi
  410609:	inc    ebx
  41060a:	pop    edi
  41060b:	xor    eax,0x334a0048
  410610:	push   ecx
  410611:	pop    edi
  410612:	xor    al,BYTE PTR [esi+0x35]
  410615:	push   eax
  410616:	cmp    DWORD PTR [eax],edi
  410618:	add    BYTE PTR [ebp+0x32],dl
  41061b:	push   edi
  41061c:	xor    BYTE PTR [edi+0x42],bl
  41061f:	dec    eax
  410620:	inc    ebp
  410621:	pop    edi
  410622:	xor    ebx,DWORD PTR [eax+0x46]
  410625:	dec    ebx
  410626:	inc    esp
  410627:	aaa    
  410628:	add    BYTE PTR [edi+0x46],cl
  41062b:	push   esi
  41062c:	xor    al,0x34
  41062e:	pop    edi
  41062f:	inc    edi
  410630:	inc    edi
  410631:	push   esp
  410632:	pop    edx
  410633:	inc    edx
  410634:	pop    edi
  410635:	push   ebp
  410636:	add    BYTE PTR [edi+0x41],al
  410639:	xor    al,0x39
  41063b:	xor    BYTE PTR [edi+0x39],bl
  41063e:	inc    edx
  41063f:	add    BYTE PTR [esi+0x36],cl
  410642:	xor    bl,BYTE PTR [edi+0x41]
  410645:	xor    ebx,DWORD PTR ss:[edi+0x38]
  410649:	xor    eax,DWORD PTR [ecx+0x52]
  41064c:	push   ebx
  41064d:	pop    edi
  41064e:	inc    esi
  41064f:	add    BYTE PTR [ecx+0x57],al
  410652:	push   ebp
  410653:	pop    edi
  410654:	inc    esi
  410655:	pop    edx
  410656:	push   ebp
  410657:	xor    dh,BYTE PTR [esi]
  410659:	add    BYTE PTR [edi+0x48],al
  41065c:	xor    BYTE PTR [edi+0x33],bl
  41065f:	inc    ebp
  410660:	cmp    DWORD PTR [edi+0x5f],ecx
  410663:	push   ebx
  410664:	cmp    DWORD PTR [eax],eax
  410666:	push   esp
  410667:	xor    al,0x51
  410669:	cmp    BYTE PTR [esi],dh
  41066b:	pop    edi
  41066c:	push   esp
  41066d:	dec    ecx
  41066e:	dec    edi
  41066f:	add    BYTE PTR [esp+ecx*2+0x5a],al
  410673:	pop    edi
  410674:	pop    edx
  410675:	dec    edx
  410676:	cmp    BYTE PTR [ebx+eax*2+0x5f],dl
  41067a:	cmp    DWORD PTR [ecx],edi
  41067c:	add    BYTE PTR [eax+0x4e],dl
  41067f:	xor    al,0x5f
  410681:	dec    esi
  410682:	inc    esp
  410683:	xor    DWORD PTR [edi],esi
  410685:	pop    edi
  410686:	cmp    DWORD PTR [ecx+0x41],edx
  410689:	add    BYTE PTR [edx+0x54],cl
  41068c:	xor    bl,BYTE PTR [edi+0x50]
  41068f:	push   ebx
  410690:	push   esi
  410691:	inc    esp
  410692:	pop    edi
  410693:	push   edx
  410694:	xor    BYTE PTR [ecx+0x0],bl
  410697:	push   esi
  410698:	inc    esp
  410699:	push   esp
  41069a:	pop    edi
  41069b:	dec    esp
  41069c:	xor    al,0x33
  41069e:	cmp    DWORD PTR [eax+eax*1+0x59],edx
  4106a2:	inc    edi
  4106a3:	inc    ebp
  4106a4:	pop    edi
  4106a5:	push   ebp
  4106a6:	pop    edx
  4106a7:	push   eax
  4106a8:	dec    edi
  4106a9:	pop    edi
  4106aa:	push   esi
  4106ab:	xor    BYTE PTR [eax],al
  4106ad:	pop    eax
  4106ae:	push   edi
  4106af:	push   esi
  4106b0:	cmp    BYTE PTR [edi+0x47],bl
  4106b3:	dec    ecx
  4106b4:	push   esp
  4106b5:	push   edx
  4106b6:	dec    ebx
  4106b7:	xor    BYTE PTR [edi+0x0],cl
  4106ba:	dec    ecx
  4106bb:	dec    esi
  4106bc:	xor    eax,0x33345f30
  4106c1:	push   eax
  4106c2:	dec    edx
  4106c3:	cmp    BYTE PTR [eax],al
  4106c5:	pop    eax
  4106c6:	inc    ecx
  4106c7:	dec    esi
  4106c8:	pop    edi
  4106c9:	inc    edx
  4106ca:	push   ebp
  4106cb:	push   ecx
  4106cc:	pop    edi
  4106cd:	inc    ecx
  4106ce:	add    BYTE PTR [edi+0x58],al
  4106d1:	xor    BYTE PTR [edi+0x4c],bl
  4106d4:	dec    ebp
  4106d5:	cmp    DWORD PTR [ebp+0x5f],edx
  4106d8:	push   esp
  4106d9:	push   edx
  4106da:	add    BYTE PTR [eax+0x38],cl
  4106dd:	dec    edi
  4106de:	xor    eax,0x594b535f
  4106e3:	xor    BYTE PTR [ebp+0x0],cl
  4106e6:	inc    ecx
  4106e7:	dec    eax
  4106e8:	xor    DWORD PTR [edi+0x4e],ebx
  4106eb:	ss inc esp
  4106ed:	dec    eax
  4106ee:	cmp    DWORD PTR [eax],eax
  4106f0:	push   esi
  4106f1:	push   esp
  4106f2:	aaa    
  4106f3:	xor    bh,BYTE PTR [ecx]
  4106f5:	xor    al,0x31
  4106f7:	pop    edi
  4106f8:	push   edx
  4106f9:	push   edi
  4106fa:	push   edx
  4106fb:	dec    ecx
  4106fc:	pop    edi
  4106fd:	inc    esp
  4106fe:	add    BYTE PTR [edi+0x52],dl
  410701:	pop    ecx
  410702:	xor    eax,0x5045395f
  410707:	pop    edi
  410708:	xor    eax,DWORD PTR [eax]
  41070a:	inc    ebp
  41070b:	xor    dl,BYTE PTR [ebx+0x39]
  41070e:	xor    dh,BYTE PTR [esi]
  410710:	xor    eax,0x4900525f
  410715:	push   esp
  410716:	xor    bl,BYTE PTR [edi+0x41]
  410719:	dec    edx
  41071a:	xor    eax,0x4c3737
  41071f:	push   ecx
  410720:	add    BYTE PTR [edi+0x0],al
  410723:	pop    ecx
  410724:	add    BYTE PTR [edi+0x0],bl
  410727:	push   ebx
  410728:	add    BYTE PTR [ebx+0x0],al
  41072b:	xor    al,BYTE PTR [eax]
  41072d:	pop    edx
  41072e:	add    BYTE PTR [edi+0x0],dl
  410731:	add    BYTE PTR [eax],al
  410733:	push   edx
  410734:	add    BYTE PTR [eax+eax*1+0x4d],dl
  410738:	add    BYTE PTR [edi+0x0],bl
  41073b:	dec    eax
  41073c:	add    BYTE PTR [ebx+0x0],cl
  41073f:	xor    DWORD PTR [eax],eax
  410741:	pop    edi
  410742:	add    BYTE PTR [ecx+0x0],al
  410745:	push   ebp
  410746:	add    BYTE PTR [ecx],bh
  410748:	add    BYTE PTR [esi+0x0],dl
  41074b:	xor    al,BYTE PTR [eax]
  41074d:	pop    edi
  41074e:	add    BYTE PTR [edx],dh
  410750:	add    BYTE PTR [eax],al
  410752:	add    BYTE PTR [ecx+0x0],dl
  410755:	xor    al,0x0
  410757:	inc    edx
  410758:	add    BYTE PTR [edi+0x0],bl
  41075b:	inc    esp
  41075c:	add    BYTE PTR [esi+0x0],dl
  41075f:	xor    eax,0x5f005500
  410764:	add    BYTE PTR [ebx+0x0],al
  410767:	inc    ebx
  410768:	add    BYTE PTR [eax],al
  41076a:	add    BYTE PTR [eax+0x0],cl
  41076d:	inc    edx
  41076e:	add    BYTE PTR [ecx+0x0],dl
  410771:	pop    edi
  410772:	add    BYTE PTR [eax+eax*1+0x38],dl
  410776:	add    BYTE PTR [eax+0x0],dl
  410779:	push   edx
  41077a:	add    BYTE PTR [ecx+0x0],cl
  41077d:	pop    edi
  41077e:	add    BYTE PTR [ebp+0x0],al
  410781:	dec    ebp
  410782:	add    BYTE PTR [ebp+0x0],dl
  410785:	add    BYTE PTR [eax],al
  410787:	inc    edi
  410788:	add    BYTE PTR [edi+0x0],cl
  41078b:	xor    eax,0x32005f00
  410790:	add    BYTE PTR [ebx+0x0],dl
  410793:	inc    ebp
  410794:	add    BYTE PTR [ecx],bh
  410796:	add    BYTE PTR [esi],dh
  410798:	add    BYTE PTR [edi+0x0],bl
  41079b:	pop    eax
  41079c:	add    BYTE PTR [edx+0x0],bl
  41079f:	xor    al,0x0
  4107a1:	pop    edi
  4107a2:	add    BYTE PTR [edi+0x0],cl
  4107a5:	add    BYTE PTR [eax],al
  4107a7:	push   ebx
  4107a8:	add    BYTE PTR [eax],dh
  4107aa:	add    BYTE PTR [ecx+0x0],dl
  4107ad:	pop    edi
  4107ae:	add    BYTE PTR [ebp+0x0],dl
  4107b1:	dec    ecx
  4107b2:	add    BYTE PTR [ecx+0x0],bl
  4107b5:	xor    al,BYTE PTR [eax]
  4107b7:	add    BYTE PTR [eax],al
  4107b9:	dec    eax
  4107ba:	add    BYTE PTR [edi],dh
  4107bc:	add    BYTE PTR [ecx+0x0],bl
  4107bf:	aaa    
  4107c0:	add    BYTE PTR [edi+0x0],bl
  4107c3:	inc    esi
  4107c4:	add    BYTE PTR [edi],dh
  4107c6:	add    BYTE PTR [ecx+0x0],bl
  4107c9:	inc    esp
  4107ca:	add    BYTE PTR [edi+0x0],bl
  4107cd:	xor    eax,0x52000000
  4107d2:	add    BYTE PTR [eax+0x0],dl
  4107d5:	inc    esi
  4107d6:	add    BYTE PTR [edi+0x0],bl
  4107d9:	dec    esp
  4107da:	add    BYTE PTR [ecx+0x0],al
  4107dd:	push   eax
  4107de:	add    BYTE PTR [edi+0x0],bl
  4107e1:	inc    ecx
  4107e2:	add    BYTE PTR [edi],dh
  4107e4:	add    BYTE PTR [eax+eax*1+0x4a],al
  4107e8:	add    BYTE PTR [ebp+0x0],al
  4107eb:	pop    edi
  4107ec:	add    BYTE PTR [eax+eax*1],dh
  4107ef:	add    BYTE PTR [eax],al
  4107f1:	dec    esp
  4107f2:	add    BYTE PTR [edi],dh
  4107f4:	add    BYTE PTR [ebp+0x0],cl
  4107f7:	cmp    BYTE PTR [eax],al
  4107f9:	xor    al,BYTE PTR [eax]
  4107fb:	pop    edi
  4107fc:	add    BYTE PTR [eax],bh
  4107fe:	add    BYTE PTR [ecx+0x0],al
  410801:	pop    edx
  410802:	add    BYTE PTR [edx+0x0],bl
  410805:	pop    edi
  410806:	add    BYTE PTR [ebx],dh
  410808:	add    BYTE PTR [ebx+0x0],dl
  41080b:	add    BYTE PTR [eax],al
  41080d:	push   esi
  41080e:	add    BYTE PTR [eax],bh
  410810:	add    BYTE PTR [esi+0x0],dl
  410813:	xor    al,BYTE PTR [eax]
  410815:	pop    edi
  410816:	add    BYTE PTR [esi+0x0],al
  410819:	inc    ebx
  41081a:	add    BYTE PTR [edi+0x0],al
  41081d:	push   edi
  41081e:	add    BYTE PTR [edi+0x0],bl
  410821:	dec    eax
  410822:	add    BYTE PTR [edx+0x0],cl
  410825:	cmp    DWORD PTR [eax],eax
  410827:	aaa    
  410828:	add    BYTE PTR [eax],al
  41082a:	add    BYTE PTR [ecx+0x0],cl
  41082d:	dec    edx
  41082e:	add    BYTE PTR [ecx+0x0],al
  410831:	pop    edi
  410832:	add    BYTE PTR [edx+0x0],cl
  410835:	inc    esi
  410836:	add    BYTE PTR [edi+0x0],dl
  410839:	xor    eax,DWORD PTR [eax]
  41083b:	dec    ebp
  41083c:	add    BYTE PTR [edi+0x0],bl
  41083f:	push   eax
  410840:	add    BYTE PTR [ecx+0x0],al
  410843:	add    BYTE PTR [eax],al
  410845:	dec    edi
  410846:	add    BYTE PTR [ecx+0x0],bl
  410849:	dec    eax
  41084a:	add    BYTE PTR [edi+0x0],bl
  41084d:	xor    eax,0x0
	...
  41085a:	add    al,0x0
  41085c:	add    BYTE PTR [eax],al
  41085e:	add    BYTE PTR [eax],al
  410860:	add    BYTE PTR [eax],al
  410862:	inc    edx
  410863:	cmp    eax,DWORD PTR [ecx+0x0]
  410866:	inc    esi
  410867:	cmp    eax,DWORD PTR [ecx+0x0]
  41086a:	dec    edx
  41086b:	cmp    eax,DWORD PTR [ecx+0x0]
  41086e:	dec    esi
  41086f:	cmp    eax,DWORD PTR [ecx+0x0]
  410872:	push   edx
  410873:	cmp    eax,DWORD PTR [ecx+0x0]
  410876:	push   esi
  410877:	cmp    eax,DWORD PTR [ecx+0x0]
  41087a:	pop    edx
  41087b:	cmp    eax,DWORD PTR [ecx+0x0]
  41087e:	pop    esi
  41087f:	cmp    eax,DWORD PTR [ecx+0x0]
  410882:	push   ebp
  410883:	xlat   BYTE PTR ds:[ebx]
  410884:	mov    edx,0x7defba87
  410889:	xlat   BYTE PTR ds:[ebx]
  41088a:	lea    esp,[esi+edx*4+0x6a]
  41088e:	xor    BYTE PTR [edi],0x3b
  410891:	pop    es
  410892:	sbb    ecx,DWORD PTR [ecx+eax*1]
  410895:	add    BYTE PTR [eax],ah
  410897:	pop    es
  410898:	add    BYTE PTR [eax],al
  41089a:	jecxz  0x41083b
  41089c:	loope  0x410824
  41089e:	adc    al,0x3c
  4108a0:	inc    ecx
  4108a1:	add    eax,0xf795f683
  4108a6:	adc    DWORD PTR [edx+0x419eaab4],ebp
  4108ac:	loope  0x410854
  4108ae:	out    0x33,al
  4108b0:	fwait
  4108b1:	js     0x410835
  4108b3:	mov    edi,0xf4cbfa0a
  4108b8:	in     al,dx
  4108b9:	loope  0x410938
  4108bb:	stos   DWORD PTR es:[edi],eax
  4108bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108bd:	fld    DWORD PTR [ebx+0x46]
  4108c0:	fimul  DWORD PTR [edi+0x6cd75eb8]
  4108c6:	pop    edx
  4108c7:	mov    ebp,0x51379720
  4108cc:	es adc al,0x6a
  4108cf:	cli    
  4108d0:	aam    0x4e
  4108d2:	adc    al,0xda
  4108d4:	cmp    dh,BYTE PTR [ebx]
  4108d6:	push   edx
  4108d7:	sbb    al,0xc0
  4108d9:	(bad)  
  4108da:	dec    ebp
  4108db:	imul   esi,DWORD PTR [ebp+0x31],0xb35a4bb0
  4108e2:	cmc    
  4108e3:	pusha  
  4108e4:	push   ecx
  4108e5:	mov    edi,0x7dd34bcf
  4108ea:	arpl   WORD PTR [eax+eiz*4-0x70],di
  4108ee:	cmp    eax,edi
  4108f0:	shl    BYTE PTR [ecx+0x182717d7],1
  4108f6:	jmp    0x7df80979
  4108fb:	and    ebp,DWORD PTR [ebp+ebp*4+0x22]
  4108ff:	icebp  
  410900:	scas   eax,DWORD PTR es:[edi]
  410901:	bound  esp,QWORD PTR [esi-0xb6b04d]
  410907:	mov    dh,0x57
  410909:	pop    eax
  41090a:	mov    eax,ds:0xae3af757
  41090f:	fdiv   DWORD PTR [edi]
  410911:	mov    edx,DWORD PTR [ecx+0x1e]
  410914:	pop    es
  410915:	loope  0x410897
  410917:	add    eax,0x868e2996
  41091c:	and    edx,DWORD PTR [eax+0x42]
  41091f:	jne    0x41092f
  410921:	adc    eax,0x34b7c3cd
  410926:	push   esi
  410927:	scas   eax,DWORD PTR es:[edi]
  410928:	sub    DWORD PTR [ebx],esp
  41092a:	std    
  41092b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41092c:	add    edx,DWORD PTR [edx+0x485779ac]
  410932:	sahf   
  410933:	push   ecx
  410934:	mov    dl,0x1c
  410936:	sub    al,0x25
  410938:	in     eax,dx
  410939:	push   eax
  41093a:	xchg   BYTE PTR [ebx],bh
  41093c:	jb     0x4108ca
  41093e:	or     eax,0x2080eead
  410943:	cli    
  410944:	lods   eax,DWORD PTR ds:[esi]
  410945:	jge    0x41091c
  410947:	jge    0x410996
  410949:	hlt    
  41094a:	push   cs
  41094b:	sahf   
  41094c:	fist   DWORD PTR [eax]
  41094e:	jo     0x410904
  410950:	mov    ch,ch
  410952:	sbb    ah,BYTE PTR [eax+0x37c0fee6]
  410958:	popf   
  410959:	mov    eax,ds:0xa82083f5
  41095e:	repnz xlat BYTE PTR ds:[ebx]
  410960:	gs push ebx
  410962:	push   ebx
  410963:	jecxz  0x4109dc
  410965:	fcmovu st,st(5)
  410967:	cmc    
  410968:	leave  
  410969:	popf   
  41096a:	ret    
  41096b:	lods   al,BYTE PTR ds:[esi]
  41096c:	ret    0xe609
  41096f:	dec    eax
  410970:	add    al,BYTE PTR [ebp+0x3b]
  410973:	inc    esp
  410974:	push   edi
  410975:	adc    esi,DWORD PTR ds:0x56a23f45
  41097b:	xchg   DWORD PTR [edx],eax
  41097d:	repz test eax,0x6402cd77
  410983:	mov    ebx,0x6ebbf1be
  410988:	adc    ch,ch
  41098a:	jle    0x41099d
  41098c:	add    eax,0x6188edc
  410991:	sahf   
  410992:	inc    ecx
  410993:	fwait
  410994:	nop
  410995:	or     DWORD PTR [esi+0x15],ebp
  410998:	hlt    
  410999:	push   edi
  41099a:	xchg   ch,al
  41099c:	and    cl,BYTE PTR [ebp-0x5d2518b5]
  4109a2:	jecxz  0x410951
  4109a4:	lea    ebp,[ebx+0x29]
  4109a7:	xchg   edx,eax
  4109a8:	pop    ecx
  4109a9:	or     BYTE PTR [ebp+0x73],bh
  4109ac:	dec    edx
  4109ad:	pop    ss
  4109ae:	enter  0xa351,0x69
  4109b2:	stc    
  4109b3:	xor    eax,0x794c86e4
  4109b8:	test   eax,0x35fcca72
  4109bd:	mov    edi,0xbef23e48
  4109c2:	cs loop 0x410950
  4109c5:	mov    ch,0x84
  4109c7:	std    
  4109c8:	jmp    0xbc1d:0xccad5478
  4109cf:	test   eax,0x655e6a90
  4109d4:	mov    eax,0x5294a1c9
  4109d9:	popf   
  4109da:	dec    edi
  4109db:	dec    ebp
  4109dc:	jnp    0x4109ea
  4109de:	pusha  
  4109df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109e0:	mov    WORD PTR ds:0x132688d7,es
  4109e6:	mov    WORD PTR ds:0x3e5e68f4,cs
  4109ec:	hlt    
  4109ed:	cld    
  4109ee:	repnz fucomip st,st(4)
  4109f1:	scas   eax,DWORD PTR es:[edi]
  4109f2:	cmp    eax,0x81044557
  4109f7:	rcl    DWORD PTR [ebp-0x60],0xf3
  4109fb:	jg     0x4109a9
  4109fd:	call   0xa696:0xa28fc8d9
  410a04:	aad    0x14
  410a06:	pop    edx
  410a07:	adc    BYTE PTR [ecx],dl
  410a09:	adc    al,0xdb
  410a0b:	test   eax,0x87a3f35e
  410a10:	push   0x39
  410a12:	hlt    
  410a13:	fld    QWORD PTR ds:0xb108006a
  410a19:	dec    ecx
  410a1a:	(bad)  
  410a1b:	fistp  DWORD PTR [ebp+0x543f749e]
  410a21:	jle    0x410a03
  410a23:	out    0xfa,al
  410a25:	in     al,dx
  410a26:	push   ds
  410a27:	add    BYTE PTR [ebx+0x59],ch
  410a2a:	aad    0x33
  410a2c:	jno    0x410a4d
  410a2e:	jmp    0x5a3d:0x42c94344
  410a35:	aad    0xe3
  410a37:	retf   0x2244
  410a3a:	ins    DWORD PTR es:[edi],dx
  410a3b:	scas   al,BYTE PTR es:[edi]
  410a3c:	outs   dx,BYTE PTR ds:[esi]
  410a3d:	cli    
  410a3e:	xlat   BYTE PTR ds:[ebx]
  410a3f:	std    
  410a40:	mov    edx,gs
  410a42:	dec    edx
  410a43:	into   
  410a44:	(bad)  
  410a45:	mov    bh,BYTE PTR [eax+0x71ac519d]
  410a4b:	int3   
  410a4c:	repz jecxz 0x4109f0
  410a4f:	add    DWORD PTR [eax-0xa],esp
  410a52:	ret    0xe75b
  410a55:	fiadd  DWORD PTR [esi+0x227541db]
  410a5b:	pop    esp
  410a5c:	data16 std 
  410a5e:	out    dx,eax
  410a5f:	scas   al,BYTE PTR es:[edi]
  410a60:	add    ch,bl
  410a62:	loope  0x410ad7
  410a64:	or     eax,0x361adf52
  410a69:	jbe    0x410abe
  410a6b:	jge    0x410a1e
  410a6d:	out    0x9b,al
  410a6f:	mul    al
  410a71:	js     0x410ae3
  410a73:	jne    0x410a05
  410a75:	mov    esp,0xe80e0e6b
  410a7a:	das    
  410a7b:	xor    DWORD PTR [edi+0x47],edi
  410a7e:	leave  
  410a7f:	mov    edi,DWORD PTR [edx+0x7a06c98a]
  410a85:	add    ebx,DWORD PTR ds:0x923a595c
  410a8b:	mov    bl,0x8d
  410a8d:	call   0x8d7a:0xe63da1df
  410a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a95:	adc    al,0xd4
  410a97:	inc    edi
  410a98:	ins    DWORD PTR es:[edi],dx
  410a99:	scas   eax,DWORD PTR es:[edi]
  410a9a:	cmp    ah,BYTE PTR [edx-0x70f0f0a5]
  410aa0:	sti    
  410aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410aa2:	jb     0x410a8f
  410aa4:	leave  
  410aa5:	into   
  410aa6:	adc    ch,BYTE PTR [esi-0x1ae3b210]
  410aac:	sub    BYTE PTR [esp+ecx*4+0x5d],0xd
  410ab1:	sbb    DWORD PTR [esi+0xf],0xffffff92
  410ab5:	int3   
  410ab6:	enter  0x75bc,0x96
  410aba:	int    0xc7
  410abc:	call   0x18cac003
  410ac1:	dec    ecx
  410ac2:	call   0x2ab79ede
  410ac7:	mov    bl,0xda
  410ac9:	adc    ebx,DWORD PTR [edx]
  410acb:	clc    
  410acc:	cmp    BYTE PTR [ebx],bl
  410ace:	fimul  WORD PTR [ebp+0x2e60afb7]
  410ad4:	xchg   ecx,eax
  410ad5:	jne    0x410aed
  410ad7:	popa   
  410ad8:	jns    0x410aec
  410ada:	cmc    
  410adb:	imul   ebx,DWORD PTR [esp+ebp*2],0xab8309a
  410ae2:	lea    eax,[esi-0x4391690f]
  410ae8:	retf   
  410ae9:	lea    edx,es:[ebx+eax*1]
  410aed:	enter  0xf17b,0xf2
  410af1:	addr16 push ss
  410af3:	ja     0x410a82
  410af5:	adc    al,BYTE PTR [edi+0x54]
  410af8:	sub    edx,DWORD PTR [ebp+0xb]
  410afb:	dec    edi
  410afc:	jo     0x410b6a
  410afe:	pop    eax
  410b00:	push   eax
  410b01:	xlat   BYTE PTR ds:[ebx]
  410b02:	rol    BYTE PTR [esi-0xba53301],0x4
  410b09:	adc    DWORD PTR [edx+0x21],esp
  410b0c:	clc    
  410b0d:	shl    DWORD PTR [ecx+0x576f559d],1
  410b13:	adc    eax,DWORD PTR [ebp+esi*4+0x4]
  410b17:	lds    esp,FWORD PTR [ebx-0x3e1e610d]
  410b1d:	arpl   cx,cx
  410b1f:	rcr    BYTE PTR [edi],0x45
  410b22:	retf   
  410b23:	shr    BYTE PTR [eax],cl
  410b25:	xchg   edi,eax
  410b26:	xor    eax,0xf473fc45
  410b2b:	imul   BYTE PTR [esi+eiz*1]
  410b2e:	(bad)  
  410b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b30:	outs   dx,BYTE PTR ds:[esi]
  410b31:	xlat   BYTE PTR ds:[ebx]
  410b32:	jno    0x410ad5
  410b34:	mov    dl,BYTE PTR [esp+ecx*4+0x5e]
  410b38:	add    eax,0x5d66ac97
  410b3d:	das    
  410b3e:	adc    edx,0x3f7a5122
  410b44:	sbb    eax,eax
  410b46:	mov    WORD PTR [ecx+0x45],es
  410b49:	push   0xffffffba
  410b4b:	xor    BYTE PTR [esp+ecx*8-0x4093f45b],0xd0
  410b53:	ror    eax,1
  410b55:	lods   eax,DWORD PTR ds:[esi]
  410b56:	or     BYTE PTR [ebx+0x75],0x3
  410b5a:	ds fdiv st,st(7)
  410b5d:	lea    ebx,[eax-0x78]
  410b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b61:	es sti 
  410b63:	in     al,dx
  410b64:	sar    cl,cl
  410b66:	mov    bl,0xdc
  410b68:	outs   dx,BYTE PTR ds:[esi]
  410b69:	bound  edi,QWORD PTR [esi]
  410b6b:	push   ebx
  410b6c:	dec    esi
  410b6d:	inc    edi
  410b6e:	not    BYTE PTR [edi+0x6b0677ed]
  410b74:	cmp    dh,cl
  410b76:	rcl    BYTE PTR [eax],cl
  410b78:	xchg   esi,eax
  410b79:	sbb    BYTE PTR [ecx-0x5c],dl
  410b7c:	push   0xaa4b959e
  410b81:	test   eax,0x5cabac43
  410b86:	xchg   ebp,eax
  410b87:	inc    edx
  410b88:	and    eax,0x5645724b
  410b8d:	xor    WORD PTR [ebx+eiz*1-0x11953c9b],0xffa1
  410b96:	add    cl,BYTE PTR [esp+edx*2-0x29]
  410b9a:	mov    cl,0xdf
  410b9c:	mov    cl,0x86
  410b9e:	or     DWORD PTR [edx-0x71],edi
  410ba1:	hlt    
  410ba2:	jmp    0x2178:0xf2128efa
  410ba9:	lods   al,BYTE PTR ds:[esi]
  410baa:	pop    es
  410bab:	sti    
  410bac:	popa   
  410bad:	mul    BYTE PTR [edi-0x6d]
  410bb0:	mov    bh,0xb1
  410bb2:	retf   
  410bb3:	and    BYTE PTR ds:0x394dde4e,bh
  410bb9:	shl    bh,0x7e
  410bbc:	(bad)  
  410bbe:	jge    0x410b79
  410bc0:	and    dl,BYTE PTR [ebx]
  410bc2:	rcr    BYTE PTR [ecx],1
  410bc4:	dec    esp
  410bc5:	ret    
  410bc6:	dec    ecx
  410bc7:	scas   al,BYTE PTR es:[edi]
  410bc8:	jmp    0x410bc2
  410bca:	imul   esi,DWORD PTR [edx+0x45d710c7],0xde7651a4
  410bd4:	ficomp DWORD PTR [eax-0x40]
  410bd7:	mov    al,ds:0x5ceb0385
  410bdc:	pop    ebp
  410bdd:	jmp    eax
  410bdf:	mov    edi,ebp
  410be1:	nop
  410be2:	push   esi
  410be3:	popa   
  410be4:	push   ss
  410be5:	jns    0x410c09
  410be7:	dec    eax
  410be8:	jno    0x410bf3
  410bea:	push   ecx
  410beb:	inc    eax
  410bec:	lea    edi,[ebx+0x45]
  410bef:	mov    DWORD PTR [ebp+0x37],0xf2e3cff1
  410bf6:	mov    ebx,0x21853631
  410bfb:	cmp    ecx,esp
  410bfd:	pop    eax
  410bfe:	xor    ecx,0x76
  410c01:	aaa    
  410c02:	push   edx
  410c03:	dec    esp
  410c05:	(bad)  
  410c06:	jp     0x410be6
  410c08:	ds retf 
  410c0a:	jbe    0x410c16
  410c0c:	mov    edx,?
  410c0e:	rol    DWORD PTR [ecx-0x1d],cl
  410c11:	dec    ebx
  410c12:	mov    edi,0x84448e42
  410c17:	dec    ebx
  410c18:	mov    edi,0xc231caf4
  410c1d:	fst    QWORD PTR [ebp-0x721ca105]
  410c23:	or     al,0xe9
  410c25:	inc    edx
  410c26:	dec    ebx
  410c27:	xchg   BYTE PTR [ebx+ebp*8],bh
  410c2a:	pop    eax
  410c2b:	in     al,0x29
  410c2d:	jno    0x410bcb
  410c2f:	inc    eax
  410c30:	fstp   QWORD PTR [edi-0x4c]
  410c33:	je     0x410c2a
  410c35:	div    dl
  410c37:	jns    0x410c1b
  410c39:	dec    esp
  410c3a:	int    0xae
  410c3c:	xchg   DWORD PTR [ebx+0x28],ecx
  410c3f:	lahf   
  410c40:	cmp    DWORD PTR es:[edx-0x58cf6897],0x6e0b266c
  410c4b:	jb     0x410bd3
  410c4d:	pop    ebp
  410c4e:	imul   esi,esp,0x5c64bd0a
  410c54:	push   0xcbc2a227
  410c59:	xor    BYTE PTR [eax+0x72],ch
  410c5c:	xor    al,0xc4
  410c5e:	or     BYTE PTR [edi],bh
  410c60:	cmp    eax,0x5182d787
  410c65:	xor    cl,BYTE PTR [edi+0x3e8164dd]
  410c6b:	(bad)  
  410c6c:	leave  
  410c6d:	jns    0x410c25
  410c6f:	inc    edx
  410c70:	mov    ds:0xc6a4d31d,eax
  410c75:	dec    ebp
  410c76:	dec    ecx
  410c77:	neg    BYTE PTR [ebx+0x6]
  410c7a:	mov    ds:0xf4fa15ff,al
  410c7f:	mov    eax,ds:0xfa84a781
  410c84:	jns    0x410c96
  410c86:	test   DWORD PTR cs:[ecx+ebx*4-0x1a93f6a2],esp
  410c8e:	test   eax,0xc2d11ad9
  410c93:	sbb    cl,cl
  410c95:	aas    
  410c96:	lods   eax,DWORD PTR ds:[esi]
  410c97:	jne    0x410d05
  410c99:	(bad)  
  410c9a:	cmp    dh,BYTE PTR [ecx+0x70bfc74b]
  410ca0:	fld    DWORD PTR [eax+eiz*2-0x1f]
  410ca4:	les    edx,FWORD PTR [eax+0x69467c28]
  410caa:	retf   
  410cab:	ficom  DWORD PTR ds:0xd739a068
  410cb1:	ss mov bl,bh
  410cb4:	push   ecx
  410cb5:	shl    cl,0x86
  410cb8:	pop    ebp
  410cb9:	xchg   ebp,eax
  410cba:	(bad)  
  410cbb:	push   esp
  410cbc:	outs   dx,BYTE PTR ds:[esi]
  410cbd:	jg     0x410d22
  410cbf:	fisub  DWORD PTR [esi]
  410cc1:	pop    ss
  410cc2:	mov    ds:0xfb3630b3,eax
  410cc7:	dec    esi
  410cc8:	add    DWORD PTR [ebp+0x38],esi
  410ccb:	test   DWORD PTR [ebx+0x63],edx
  410cce:	icebp  
  410ccf:	jg     0x410cca
  410cd1:	test   ecx,esi
  410cd3:	jbe    0x410d1d
  410cd5:	loope  0x410d39
  410cd7:	cwde   
  410cd8:	call   0xf7e7:0x207b1880
  410cdf:	jmp    0x5a9fb99d
  410ce4:	int3   
  410ce5:	adc    DWORD PTR [edx+0x6e],eax
  410ce8:	fidiv  DWORD PTR [edi]
  410cea:	mov    ebp,0xe83ef982
  410cef:	adc    eax,0xc340139f
  410cf4:	ror    ecx,cl
  410cf6:	daa    
  410cf7:	outs   dx,DWORD PTR ds:[esi]
  410cf8:	and    DWORD PTR [ebp-0x5e],0xd7d9b2e4
  410cff:	xor    eax,DWORD PTR [esp+edx*1]
  410d02:	dec    esp
  410d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d04:	dec    eax
  410d05:	push   ss
  410d06:	mov    WORD PTR [ecx],gs
  410d08:	or     DWORD PTR [esi+0x12],ecx
  410d0b:	mov    eax,0xd8be5e13
  410d10:	sbb    ch,BYTE PTR [esi+0x5a9bc378]
  410d16:	icebp  
  410d17:	out    0x31,al
  410d19:	test   DWORD PTR [edi-0x435ffa69],ebx
  410d1f:	xor    al,0xea
  410d21:	xchg   ebp,eax
  410d22:	cmc    
  410d23:	aam    0x77
  410d25:	cmp    ebp,DWORD PTR [edi+ecx*4-0x4d]
  410d29:	js     0x410d47
  410d2b:	xor    al,0x5c
  410d2d:	dec    ebx
  410d2e:	push   edx
  410d2f:	jns    0x410d8f
  410d31:	pop    esp
  410d32:	or     eax,0xaa8aa3f2
  410d37:	sbb    cl,ah
  410d39:	and    edi,edi
  410d3b:	and    ah,dh
  410d3d:	jg     0x410d07
  410d3f:	add    BYTE PTR [esi-0x1e],cl
  410d42:	push   ebp
  410d43:	dec    eax
  410d44:	test   eax,0xcb0f7310
  410d49:	jno    0x410d4e
  410d4b:	mov    WORD PTR [edx-0x59],fs
  410d4e:	lds    esi,FWORD PTR [esi]
  410d50:	dec    ecx
  410d51:	sbb    al,0xc
  410d53:	mulps  xmm0,XMMWORD PTR [eax+ecx*1-0x59e63870]
  410d5b:	jge    0x410db0
  410d5d:	fbstp  TBYTE PTR [ebx+ebx*8-0x4b]
  410d61:	jo     0x410d2c
  410d63:	jbe    0x410d00
  410d65:	in     al,0xab
  410d67:	or     al,0x48
  410d69:	dec    edi
  410d6a:	and    BYTE PTR [ebp-0x79164b77],bl
  410d70:	sahf   
  410d71:	rcl    DWORD PTR [edx+ebp*4+0x7f],cl
  410d75:	jns    0x410d19
  410d77:	inc    ebp
  410d78:	rcr    BYTE PTR [ebp+0x3b],cl
  410d7b:	mov    bl,0x77
  410d7d:	dec    ebx
  410d7e:	and    al,0x20
  410d80:	cmp    BYTE PTR [ebp+0x18],al
  410d83:	sahf   
  410d84:	jg     0x410d96
  410d86:	sub    eax,0x2e28f316
  410d8b:	mov    BYTE PTR [eax+0x15a4d3c6],bh
  410d91:	jp     0x410d5a
  410d93:	jnp    0x410dfd
  410d95:	lock adc ah,BYTE PTR ds:[esi-0x2f2d4aed]
  410d9d:	loop   0x410d89
  410d9f:	jne    0x410dcb
  410da1:	(bad)  
  410da2:	pop    ss
  410da3:	jbe    0x410d27
  410da5:	jb     0x410db4
  410da7:	cmp    BYTE PTR [ecx-0x4d],0x42
  410dab:	sbb    DWORD PTR [ebp+edx*8+0x24651f29],esi
  410db2:	sbb    dh,BYTE PTR [ebx+ebx*1+0x4c]
  410db6:	xor    DWORD PTR [edx+0x64b88fdc],eax
  410dbc:	add    BYTE PTR [ebx],dl
  410dbe:	mov    BYTE PTR [ebp-0x7379e835],bl
  410dc4:	xchg   ebx,esi
  410dc6:	cld    
  410dc7:	jl     0x410dad
  410dc9:	mov    edi,0xccb45a5f
  410dce:	jle    0x410ded
  410dd0:	int3   
  410dd1:	xchg   esp,eax
  410dd2:	cmp    al,0x70
  410dd4:	and    al,0xb
  410dd6:	xchg   esp,eax
  410dd7:	mov    dh,0x4b
  410dd9:	shr    DWORD PTR [esi-0x5b2c944a],cl
  410ddf:	and    eax,DWORD PTR [esi-0x4582b375]
  410de5:	jo     0x410e22
  410de7:	or     ebp,DWORD PTR [ecx-0xf928e08]
  410ded:	add    edx,DWORD PTR [ecx+0x32]
  410df0:	test   al,0xaf
  410df2:	mov    ds:0x840a9e80,al
  410df7:	sub    al,0x77
  410df9:	repz enter 0x2285,0xa
  410dfe:	loope  0x410dc2
  410e00:	sar    ebp,0x7e
  410e03:	sub    eax,0xebbd147c
  410e08:	lds    ecx,FWORD PTR [ebp-0x2d41b81c]
  410e0e:	fidivr WORD PTR [edx]
  410e10:	aam    0x89
  410e12:	fstp   TBYTE PTR [ebx]
  410e14:	and    DWORD PTR [ebx],esp
  410e16:	mov    al,ds:0x85de2f23
  410e1b:	jmp    0x410e1d
  410e1d:	mov    ah,0xce
  410e1f:	adc    DWORD PTR [edx],0x59
  410e22:	addr16 loop 0x410e85
  410e25:	pop    esp
  410e26:	imul   eax,DWORD PTR [ecx-0x13],0x6667b628
  410e2d:	inc    ebp
  410e2e:	bnd jg 0x410e79
  410e31:	lods   al,BYTE PTR ds:[esi]
  410e32:	data16 xor dl,BYTE PTR [esi+eax*1-0x6bd7a2d2]
  410e3a:	mov    bh,BYTE PTR [eax]
  410e3c:	sub    ah,BYTE PTR [eax+ebp*4+0x6ca86ce6]
  410e43:	cmp    BYTE PTR [edx+0x13],bl
  410e46:	adc    BYTE PTR [esi-0x7c81cd17],cl
  410e4c:	inc    esi
  410e4d:	repz loop 0x410e05
  410e50:	cld    
  410e51:	or     al,0xd6
  410e53:	sub    DWORD PTR [ecx],ecx
  410e55:	push   eax
  410e56:	ins    BYTE PTR es:[edi],dx
  410e57:	inc    ebp
  410e58:	xchg   ebx,eax
  410e59:	jae    0x410ebd
  410e5b:	out    dx,eax
  410e5c:	(bad)  
  410e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e5e:	pusha  
  410e5f:	outs   dx,BYTE PTR ds:[esi]
  410e60:	fdivr  DWORD PTR [ebx+eiz*8+0x2aa177f9]
  410e67:	xchg   BYTE PTR [eax+0x2e9b5b4a],dl
  410e6d:	dec    ebx
  410e6e:	sbb    esi,0x23
  410e71:	push   ebx
  410e72:	add    dh,BYTE PTR [ecx+0x19]
  410e75:	inc    esi
  410e76:	in     al,dx
  410e77:	cld    
  410e78:	nop
  410e79:	pop    eax
  410e7a:	inc    edi
  410e7b:	pushf  
  410e7c:	pop    ecx
  410e7d:	and    BYTE PTR [ebx],ch
  410e7f:	mov    edx,esp
  410e81:	adc    bh,dh
  410e83:	inc    ebx
  410e84:	in     al,0x8e
  410e86:	push   ss
  410e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e88:	jo     0x410ed2
  410e8a:	out    dx,eax
  410e8b:	push   edx
  410e8d:	adc    al,BYTE PTR [ecx-0x5dc75020]
  410e93:	(bad)  
  410e94:	and    al,0xaa
  410e96:	rcr    BYTE PTR [edi-0x190d291e],1
  410e9c:	mov    eax,ds:0xe7af153e
  410ea1:	js     0x410e90
  410ea3:	frstor [ecx+0x5654d258]
  410ea9:	leave  
  410eaa:	retf   0xd5cb
  410ead:	inc    eax
  410eae:	push   edi
  410eaf:	push   ds
  410eb0:	dec    edi
  410eb1:	inc    esi
  410eb2:	mov    ch,0x81
  410eb4:	sbb    ch,dh
  410eb6:	stos   DWORD PTR es:[edi],eax
  410eb7:	push   ss
  410eb8:	dec    eax
  410eb9:	mov    ch,0x9a
  410ebb:	imul   ebx,DWORD PTR [edi-0x453e45ab],0x8fdb07ad
  410ec5:	dec    eax
  410ec6:	mov    dh,0xcd
  410ec8:	ins    DWORD PTR es:[edi],dx
  410ec9:	call   0xd8b1:0xdb1de345
  410ed0:	add    DWORD PTR [ebx],edi
  410ed2:	mov    eax,ds:0x6c814796
  410ed7:	xchg   ebp,eax
  410ed8:	mov    BYTE PTR [edx+0xe3ec8a7],cl
  410ede:	adc    ebp,DWORD PTR [esi+ebp*4-0x1f]
  410ee2:	dec    edx
  410ee3:	repz mov esi,0xd9467450
  410ee9:	dec    ecx
  410eea:	loop   0x410ec6
  410eec:	adc    eax,0x58ad9cdc
  410ef1:	add    BYTE PTR [edi+0x34],bh
  410ef4:	aas    
  410ef5:	lods   eax,DWORD PTR ds:[si]
  410ef7:	dec    ecx
  410ef8:	sub    DWORD PTR [esi+ebp*4+0x27ac1fdd],ecx
  410eff:	pop    edi
  410f00:	mov    edi,0xc7234315
  410f05:	pop    esi
  410f06:	push   es
  410f07:	test   DWORD PTR [esi+0x2b337902],ebx
  410f0d:	cli    
  410f0e:	fmulp  st(6),st
  410f10:	xchg   esi,eax
  410f11:	cmp    ecx,DWORD PTR [ebx-0x1bfb1b5d]
  410f17:	pop    ds
  410f18:	cmp    edi,ecx
  410f1a:	and    eax,0xb1b6a9d0
  410f1f:	inc    ebx
  410f20:	ror    BYTE PTR [eax],1
  410f22:	mov    eax,0x62d2ca8c
  410f27:	sbb    ah,dl
  410f29:	sbb    eax,0x1a2f58f3
  410f2e:	dec    ebp
  410f2f:	jg     0x410f96
  410f31:	pop    esp
  410f33:	jmp    0x53a428e0
  410f38:	inc    ecx
  410f39:	sub    eax,0x5937c278
  410f3e:	inc    edx
  410f3f:	xchg   ebx,eax
  410f40:	fiadd  WORD PTR [edi]
  410f42:	inc    ebp
  410f43:	jmp    0x6c22a1f8
  410f48:	sbb    edx,DWORD PTR [esi-0x370abfd2]
  410f4e:	iret   
  410f4f:	ins    BYTE PTR es:[edi],dx
  410f50:	loop   0x410ef9
  410f52:	xor    esi,esp
  410f54:	scas   eax,DWORD PTR es:[edi]
  410f55:	xor    ecx,ebx
  410f57:	or     al,bh
  410f59:	movzx  edi,BYTE PTR [edi+0x1833af9a]
  410f60:	jbe    0x410f53
  410f62:	mov    ebp,0x96b73d06
  410f67:	jge    0x410faf
  410f69:	jne    0x410fc4
  410f6b:	sbb    al,0x33
  410f6d:	and    dh,ah
  410f6f:	mov    ecx,0xe649b994
  410f74:	sbb    ecx,0xffffffc3
  410f77:	stos   DWORD PTR es:[edi],eax
  410f78:	fnstenv [edx+0x5c50b997]
  410f7e:	std    
  410f7f:	idiv   BYTE PTR [edx]
  410f81:	mov    ah,0x59
  410f83:	xor    eax,0x3ff41f42
  410f88:	jns    0x410f38
  410f8a:	or     eax,edx
  410f8c:	leave  
  410f8d:	and    DWORD PTR [ebx],ecx
  410f8f:	dec    edx
  410f90:	adc    al,0xf9
  410f92:	clc    
  410f93:	push   0xffffff98
  410f95:	xlat   BYTE PTR ds:[ebx]
  410f96:	fisttp WORD PTR [ecx-0x6d]
  410f99:	dec    ecx
  410f9a:	shl    DWORD PTR [ebp+0x3aaf491c],cl
  410fa0:	les    ecx,FWORD PTR [ecx+0x2d4e5582]
  410fa6:	pop    ebx
  410fa7:	jle    0x410ff7
  410fa9:	les    ebp,FWORD PTR [edi-0x6a5fadf4]
  410faf:	sub    dh,BYTE PTR [esi+ecx*4+0x179ad246]
  410fb6:	or     dh,BYTE PTR [ecx+0x53]
  410fb9:	xor    al,0x0
  410fbb:	add    BYTE PTR [eax],al
  410fbd:	add    BYTE PTR [eax],al
  410fbf:	add    BYTE PTR [eax],al
  410fc1:	add    BYTE PTR ds:0xfe3de0ab,dl
  410fc7:	jg     0x410fa6
  410fc9:	stos   DWORD PTR es:[edi],eax
  410fca:	mov    esi,DWORD PTR [edi-0x251f2fe5]
  410fd0:	dec    eax
  410fd1:	mov    ebp,0x1133b
  410fd6:	and    BYTE PTR [edi],al
  410fd8:	add    BYTE PTR [eax],al
  410fda:	dec    esi
  410fdb:	or     al,0xd
  410fdd:	ins    DWORD PTR es:[edi],dx
  410fde:	retf   0x5669
  410fe1:	repz mov esp,0x6a613a9f
  410fe7:	dec    eax
  410fe8:	daa    
  410fe9:	into   
  410fea:	test   eax,0x8bd3a60
  410fef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ff0:	or     eax,0x17be7678
  410ff5:	icebp  
  410ff6:	sti    
  410ff7:	xchg   edi,eax
  410ff8:	ret    
  410ff9:	push   0xec1ebe3d
  410ffe:	bound  ecx,QWORD PTR [edi-0xf]
  411001:	sbb    BYTE PTR [edi],dh
  411003:	and    eax,0x4e37dc4f
  411008:	xor    ebp,esi
  41100a:	jmp    0x411009
  41100c:	(bad)  
  41100d:	xlat   BYTE PTR ds:[ebx]
  41100e:	adc    al,BYTE PTR [ecx+0x32e45443]
  411014:	fbstp  TBYTE PTR [ebx-0x44dc75c4]
  41101a:	aad    0xd0
  41101c:	sub    al,0x73
  41101f:	bound  eax,QWORD PTR [edi+0x42]
  411022:	mov    ah,0xac
  411024:	iret   
  411025:	inc    ebp
  411026:	fs ja  0x411059
  411029:	cwde   
  41102a:	outs   dx,BYTE PTR ds:[esi]
  41102b:	mov    ds:0x8eee09b2,al
  411030:	cdq    
  411031:	adc    al,0xd5
  411033:	xchg   esp,eax
  411034:	dec    edi
  411035:	or     al,0x53
  411037:	jg     0x410fd9
  411039:	push   esp
  41103a:	ficom  DWORD PTR [eax+edx*1+0x462904df]
  411041:	lods   al,BYTE PTR ds:[esi]
  411042:	push   esp
  411043:	cmc    
  411044:	aad    0xc3
  411046:	or     edi,DWORD PTR [edx+0x3a]
  411049:	xor    ah,cl
  41104b:	adc    al,0x93
  41104d:	push   esp
  41104e:	adc    ebx,esi
  411050:	add    DWORD PTR [esi],eax
  411052:	in     al,0x53
  411054:	loop   0x411008
  411056:	fwait
  411057:	out    0xfe,al
  411059:	push   0x3c29fba7
  41105e:	fs sub al,0xd6
  411061:	cmp    eax,0x9a09d204
  411066:	mov    BYTE PTR [ebx],bh
  411068:	sbb    ch,BYTE PTR [eax+0x7d19a0b7]
  41106e:	mov    cl,0x87
  411070:	ret    
  411071:	das    
  411072:	nop
  411073:	mov    ch,ah
  411075:	popa   
  411076:	add    BYTE PTR [ebp-0x1a],dl
  411079:	out    dx,eax
  41107a:	inc    eax
  41107b:	jbe    0x411036
  41107d:	std    
  41107e:	and    BYTE PTR [esi+0x445b482f],ah
  411084:	sub    al,0x8c
  411086:	test   al,0x45
  411088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411089:	into   
  41108a:	lea    ecx,[edx-0x15412023]
  411090:	jb     0x4110d2
  411092:	(bad)
  411096:	out    0x18,eax
  411098:	stos   DWORD PTR es:[edi],eax
  411099:	popa   
  41109a:	sub    eax,0xc8d8853
  41109f:	sbb    eax,DWORD PTR [ecx-0x34]
  4110a2:	cmp    BYTE PTR [edx-0x29],ch
  4110a5:	clc    
  4110a6:	mov    eax,ebp
  4110a8:	mov    dl,0x5f
  4110aa:	xor    eax,0x9f3c00e9
  4110af:	xchg   ecx,eax
  4110b0:	or     ah,BYTE PTR [edi+0x23]
  4110b3:	mov    ds:0x5d77b593,al
  4110b8:	mov    eax,ds:0x32602f54
  4110bd:	and    DWORD PTR ds:0x6be12178,esi
  4110c3:	xor    eax,0xcb06322
  4110c8:	mov    ebp,0xb8c1456c
  4110cd:	(bad)  
  4110ce:	call   0x32a0:0xb41c4788
  4110d5:	dec    edi
  4110d6:	lahf   
  4110d7:	jle    0x41112f
  4110d9:	gs repz xchg ebx,eax
  4110dc:	(bad)  
  4110dd:	int    0xc1
  4110df:	sti    
  4110e0:	out    0x60,al
  4110e2:	nop
  4110e3:	sub    ebp,DWORD PTR [esi-0x54e3dce7]
  4110e9:	xchg   ecx,eax
  4110ea:	mov    BYTE PTR [ebp+0x6967b9fc],al
  4110f0:	pop    ss
  4110f1:	and    BYTE PTR [ecx+0x240f6be1],0xd9
  4110f8:	popa   
  4110f9:	bound  ebx,QWORD PTR [esi+esi*8+0x50]
  4110fd:	fst    QWORD PTR [ebp+ecx*1-0x1519a3e8]
  411104:	scas   al,BYTE PTR es:[edi]
  411105:	xchg   ecx,eax
  411106:	int3   
  411107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411108:	mov    esi,DWORD PTR [esp+edi*4-0x243e7216]
  41110f:	arpl   WORD PTR [ebx],bx
  411111:	loop   0x411101
  411113:	push   ebx
  411114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411115:	shr    DWORD PTR [esi],cl
  411117:	and    bl,BYTE PTR [eax+0x52]
  41111a:	std    
  41111b:	(bad)  
  41111c:	jle    0x411111
  41111e:	xchg   ebx,eax
  41111f:	jg     0x411160
  411121:	lods   eax,DWORD PTR ds:[esi]
  411122:	push   esp
  411123:	xchg   BYTE PTR [edx+0x6e],ah
  411126:	popf   
  411127:	inc    eax
  411128:	mov    dh,0xd
  41112a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41112b:	cwde   
  41112c:	sbb    dl,BYTE PTR [eax+0x73]
  41112f:	popa   
  411130:	fidivr WORD PTR [ecx]
  411132:	or     ch,0x59
  411135:	sbb    BYTE PTR [ecx],bh
  411137:	sbb    BYTE PTR [ecx],al
  411139:	clc    
  41113a:	stc    
  41113b:	mov    ebp,0x72eb4359
  411140:	xchg   edi,eax
  411141:	out    dx,eax
  411142:	pop    esp
  411143:	mov    esi,0x67fe1c2c
  411148:	js     0x4111a8
  41114a:	add    DWORD PTR [edx],0x7d
  41114d:	test   DWORD PTR [eax+0x48],ecx
  411150:	mov    esi,0xab90d42b
  411155:	mov    bl,0xc6
  411157:	in     eax,dx
  411158:	mov    ds:0xa8bebc8a,eax
  41115d:	pop    esp
  41115e:	ins    DWORD PTR es:[edi],dx
  41115f:	xor    DWORD PTR [ebp-0x7ef11a6b],edi
  411165:	into   
  411166:	shl    eax,1
  411168:	dec    ebp
  411169:	sub    eax,DWORD PTR [esi]
  41116b:	in     al,0x44
  41116d:	add    eax,0x8404b359
  411172:	ins    BYTE PTR es:[edi],dx
  411173:	jmp    DWORD PTR [edi]
  411175:	cmc    
  411176:	in     eax,0xd4
  411178:	adc    eax,0xf4b7bb3e
  41117d:	pop    es
  41117e:	mov    ah,0x4f
  411180:	xor    eax,0x1fe44d5d
  411185:	adc    cl,BYTE PTR [ecx-0x6aef7894]
  41118b:	in     al,0xe1
  41118d:	adc    ebp,eax
  41118f:	pop    DWORD PTR [ebx]
  411191:	and    esi,DWORD PTR [ecx]
  411193:	loopne 0x411160
  411195:	leave  
  411196:	mov    ebx,0xf80450a4
  41119b:	fmul   DWORD PTR [ebx+0x1f81e44f]
  4111a1:	cmp    ebp,DWORD PTR [ebp-0x58d0b9d7]
  4111a7:	leave  
  4111a8:	xor    ecx,DWORD PTR [edi-0x33]
  4111ab:	mov    eax,0xc3bb5a6c
  4111b0:	getsec 
  4111b2:	ss mov bh,0x5c
  4111b5:	push   esi
  4111b6:	dec    edx
  4111b7:	in     eax,dx
  4111b8:	popf   
  4111b9:	mov    dl,BYTE PTR [ebp-0x36]
  4111bc:	add    al,0xb
  4111be:	mov    ebx,0xf6d4dd4a
  4111c3:	sub    ah,BYTE PTR [esi-0x2a]
  4111c6:	cmp    BYTE PTR [edx+edi*1-0x42],cl
  4111ca:	into   
  4111cb:	mov    ebp,0xa47c0693
  4111d0:	jge    0x4111ee
  4111d2:	xchg   edx,eax
  4111d3:	mov    ch,0x45
  4111d5:	or     bh,BYTE PTR [eax]
  4111d7:	adc    ebx,DWORD PTR [edx]
  4111d9:	push   cs
  4111da:	mov    esi,0xebd130f8
  4111df:	dec    eax
  4111e0:	retf   0xdd86
  4111e3:	dec    esp
  4111e4:	lods   al,BYTE PTR ds:[esi]
  4111e5:	loopne 0x4111ec
  4111e7:	loopne 0x411247
  4111e9:	pop    ss
  4111ea:	mov    ebp,0x84f9ceb
  4111ef:	shr    DWORD PTR [ebx+ecx*1+0x29],1
  4111f3:	mov    cl,0xfa
  4111f5:	rol    DWORD PTR [edi],cl
  4111f7:	sub    eax,0xf0086bd0
  4111fc:	jmp    0x41125a
  4111fe:	iret   
  4111ff:	or     cl,BYTE PTR [ebp-0x7e]
  411202:	ins    DWORD PTR es:[edi],dx
  411203:	je     0x41123c
  411205:	fnstsw WORD PTR [ebp+0xd1270d9]
  41120b:	pop    ebp
  41120c:	das    
  41120d:	xor    eax,0xddbc020d
  411212:	call   0x81fdbf28
  411217:	jg     0x4111d1
  411219:	sbb    edi,DWORD PTR [eax-0x1c]
  41121c:	leave  
  41121d:	not    ebp
  41121f:	pop    eax
  411220:	pop    esp
  411221:	int    0x53
  411223:	ins    DWORD PTR es:[edi],dx
  411224:	pop    ebp
  411225:	dec    edi
  411226:	dec    esp
  411227:	inc    ebp
  411228:	sub    al,0x72
  41122a:	out    0x97,al
  41122c:	mov    esp,0xf20424eb
  411231:	ja     0x411277
  411233:	repz mov ebx,0xa1d1cce3
  411239:	xor    edx,DWORD PTR [ebx-0x5acd4157]
  41123f:	sbb    BYTE PTR [ebp-0x220270df],ah
  411245:	dec    edi
  411246:	mov    ebp,0x23db9eb8
  41124b:	mov    al,ds:0xd24f6839
  411250:	jno    0x41122e
  411252:	cdq    
  411253:	mov    BYTE PTR [eax],dl
  411255:	xor    DWORD PTR [ecx],ecx
  411257:	mov    edi,0x13c6c0c4
  41125c:	aam    0xcd
  41125e:	out    dx,al
  41125f:	data16 js 0x4112e1
  411262:	fmul   DWORD PTR [ecx]
  411264:	repz xor DWORD PTR [esp+eax*1],eax
  411268:	adc    dh,al
  41126a:	push   ebp
  41126b:	shl    BYTE PTR [esi-0x473fbaff],cl
  411271:	pop    ss
  411272:	push   es
  411273:	lock push es
  411275:	push   ds
  411276:	cmp    BYTE PTR [edi],ch
  411278:	arpl   bx,cx
  41127a:	push   ebx
  41127b:	xchg   edi,eax
  41127c:	int    0xb9
  41127e:	mov    al,0x43
  411280:	add    edx,DWORD PTR [ebp+eiz*8+0x6063664f]
  411287:	call   0xdd9b:0x899bab9d
  41128e:	and    al,0xb5
  411290:	and    cl,al
  411292:	or     cl,BYTE PTR [ecx]
  411294:	or     edi,DWORD PTR [esi]
  411296:	adc    BYTE PTR [edi],bh
  411298:	mov    dl,BYTE PTR [esi]
  41129a:	push   0xffffffa9
  41129c:	ja     0x4112d9
  41129e:	or     eax,0x1534f0be
  4112a3:	sbb    bh,BYTE PTR [ecx+0x16d01473]
  4112a9:	push   esi
  4112aa:	mov    al,ds:0xe9daa3ee
  4112af:	dec    eax
  4112b0:	iret   
  4112b1:	dec    BYTE PTR [ecx-0xc]
  4112b4:	xlat   BYTE PTR ds:[ebx]
  4112b5:	(bad)  
  4112b6:	(bad)  
  4112b7:	mov    ecx,0x10e9c329
  4112bc:	ins    BYTE PTR es:[edi],dx
  4112bd:	and    al,0xdb
  4112bf:	jge    0x411245
  4112c1:	in     eax,dx
  4112c2:	and    DWORD PTR [edi-0x13ed583c],edx
  4112c8:	push   cs
  4112c9:	add    eax,0x7c42ff64
  4112ce:	das    
  4112cf:	inc    DWORD PTR [eax-0x124020b4]
  4112d5:	cmp    bh,BYTE PTR [ecx]
  4112d7:	push   esi
  4112d8:	int    0xd2
  4112da:	leave  
  4112db:	push   edi
  4112dc:	cwde   
  4112dd:	mov    cl,0xe2
  4112df:	ficomp DWORD PTR [esi+0x75]
  4112e2:	sbb    esp,edx
  4112e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112e5:	pop    ds
  4112e6:	popf   
  4112e7:	mov    edi,ds
  4112e9:	mov    edi,0x7084dfe4
  4112ee:	gs inc eax
  4112f0:	mov    ds:0xc523530c,al
  4112f5:	mov    cl,0xae
  4112f7:	mov    ds:0x1302748c,eax
  4112fc:	sbb    eax,0x11699853
  411301:	stos   DWORD PTR es:[edi],eax
  411302:	pop    eax
  411303:	push   cs
  411304:	pcmpeqw mm1,QWORD PTR [edi]
  411307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411308:	add    eax,0xe7ec154e
  41130d:	or     ah,bh
  41130f:	popa   
  411310:	leave  
  411311:	sbb    DWORD PTR [edx-0x36bffb07],eax
  411317:	clc    
  411318:	arpl   cx,sp
  41131a:	or     bh,BYTE PTR [ebx]
  41131c:	jge    0x41133b
  41131e:	push   ebp
  41131f:	pop    esi
  411320:	dec    ecx
  411321:	mov    gs,ebx
  411323:	ja     0x411362
  411325:	data16 lods al,BYTE PTR ds:[esi]
  411327:	out    0x45,eax
  411329:	jnp    0x411329
  41132b:	mov    ds:0x6fa16536,al
  411330:	fst    QWORD PTR [ecx-0x5afd5a4f]
  411336:	add    dh,bh
  411338:	test   eax,0x305c5263
  41133d:	lock retf 0xf5c6
  411341:	arpl   WORD PTR [ecx+0x1],ax
  411344:	adc    dl,BYTE PTR [ebx-0x3b]
  411347:	jecxz  0x411388
  411349:	jp     0x411312
  41134b:	inc    ebx
  41134c:	dec    ebp
  41134d:	repnz sar BYTE PTR [eax+0x34],1
  411351:	call   0x23b93e57
  411356:	and    esi,DWORD PTR [esi+0x47]
  411359:	and    BYTE PTR [ecx+0x15f27667],ah
  41135f:	dec    ebx
  411360:	xchg   DWORD PTR [ecx+0x40],ebp
  411363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411364:	xchg   ebp,eax
  411365:	and    BYTE PTR [eax+0x1ef356a1],cl
  41136b:	cld    
  41136c:	xchg   ebx,esi
  41136e:	sub    al,0x24
  411370:	and    dl,BYTE PTR ds:0x99cfb4f9
  411376:	jbe    0x41130e
  411378:	and    esp,DWORD PTR [edi-0x105d33ec]
  41137e:	arpl   WORD PTR [eax-0x2d3b0d7],ax
  411384:	leave  
  411385:	pop    ss
  411386:	ror    DWORD PTR [esi-0x6b],cl
  411389:	dec    edi
  41138a:	pop    ds
  41138b:	add    bh,0x48
  41138e:	adc    BYTE PTR [ebx],al
  411390:	mov    ah,BYTE PTR [edi+0x6dc6d69c]
  411396:	stos   BYTE PTR es:[edi],al
  411397:	inc    esp
  411398:	push   esi
  411399:	and    dl,BYTE PTR [edi-0x18]
  41139c:	aad    0xc6
  41139e:	cdq    
  41139f:	lahf   
  4113a0:	jp     0x411414
  4113a2:	test   DWORD PTR [eax+edx*4],esp
  4113a5:	aas    
  4113a6:	clc    
  4113a7:	in     al,0xc1
  4113a9:	lea    edx,[edi+0xbe65a62]
  4113af:	pop    esi
  4113b0:	and    al,0x76
  4113b2:	arpl   WORD PTR [edi+0x53],si
  4113b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113b7:	inc    bl
  4113b9:	mov    eax,0x56147a6b
  4113be:	cwde   
  4113bf:	repz inc ebx
  4113c1:	rol    BYTE PTR [edi+eiz*1-0x7d3ab8bc],1
  4113c8:	inc    ecx
  4113c9:	fcomp  QWORD PTR [edi-0x2cfec7b5]
  4113cf:	pop    ecx
  4113d0:	or     esi,edx
  4113d2:	les    esi,FWORD PTR [eax+ecx*8+0x4bab8835]
  4113d9:	pop    ss
  4113da:	cmp    dl,BYTE PTR [ebx-0x26]
  4113dd:	xor    BYTE PTR [esi-0x7ff983dc],cl
  4113e3:	clc    
  4113e4:	and    dh,ch
  4113e6:	jmp    0x4113af
  4113e8:	lock pop esp
  4113ea:	xlat   BYTE PTR ds:[ebx]
  4113eb:	std    
  4113ec:	gs ja  0x411429
  4113ef:	fdiv   QWORD PTR [edx]
  4113f1:	mov    ebp,0xfe73c6e4
  4113f6:	inc    esi
  4113f7:	test   al,0x7b
  4113f9:	outs   dx,DWORD PTR ds:[esi]
  4113fa:	jl     0x411460
  4113fc:	scas   al,BYTE PTR es:[edi]
  4113fd:	loop   0x4113b2
  4113ff:	sub    BYTE PTR [ebp+0x1d],cl
  411402:	je     0x41145f
  411404:	sbb    BYTE PTR [ebp-0x1eb2308a],bl
  41140a:	jl     0x4113a7
  41140c:	jns    0x411454
  41140e:	or     ebp,edi
  411410:	or     BYTE PTR [ecx+0x76],0x6c
  411414:	test   BYTE PTR [edx],ah
  411416:	push   ds
  411417:	dec    ebx
  411418:	outs   dx,DWORD PTR ds:[esi]
  411419:	scas   al,BYTE PTR es:[edi]
  41141a:	and    al,0xa6
  41141c:	in     eax,0xc0
  41141e:	adc    al,BYTE PTR [ebp-0x2d]
  411421:	xor    DWORD PTR [ecx-0x39],esp
  411424:	adc    al,0x52
  411426:	pop    edx
  411427:	jnp    0x411471
  411429:	xchg   esi,eax
  41142a:	jp     0x4113e9
  41142c:	and    ah,BYTE PTR [eax+0x3]
  41142f:	sub    ch,dl
  411431:	jle    0x4113c1
  411433:	add    al,0xd5
  411435:	inc    edx
  411436:	add    eax,0x4f0c6c36
  41143b:	cmp    dl,BYTE PTR [edi]
  41143d:	xor    esi,DWORD PTR [esi+0x1f]
  411440:	sub    ecx,ebp
  411442:	jp     0x41141d
  411444:	xchg   edi,eax
  411445:	cmp    edx,edx
  411447:	lahf   
  411448:	mov    eax,ds:0xd1cd8442
  41144d:	mov    esp,0x5aad1077
  411452:	in     al,0x3e
  411454:	and    ch,bh
  411456:	imul   esi,DWORD PTR [edx+0x52],0x38fe071b
  41145d:	and    BYTE PTR [ecx+0x52],al
  411460:	sub    eax,0xb2be01ce
  411465:	xchg   esi,eax
  411466:	sbb    dh,al
  411468:	push   esp
  411469:	push   ecx
  41146a:	mov    WORD PTR [ebx+0x16fa5454],ss
  411470:	sub    esi,DWORD PTR [edx-0x4f]
  411473:	rcr    DWORD PTR [edi-0x75],1
  411476:	adc    BYTE PTR [edx-0x39],0x80
  41147a:	add    DWORD PTR [ecx],ebp
  41147c:	gs jbe 0x411435
  41147f:	mov    al,ds:0x3cddbca
  411484:	sbb    esp,esp
  411486:	cmp    eax,DWORD PTR [edi-0x67]
  411489:	lock jmp 0xc058:0x3285c9cb
  411491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411492:	xchg   DWORD PTR [esi*2+0x6cbe60e2],ebp
  411499:	cmp    edx,DWORD PTR [eax-0x690ab875]
  41149f:	dec    ebp
  4114a0:	stc    
  4114a1:	fst    DWORD PTR [ecx-0x2c]
  4114a4:	pop    es
  4114a5:	pop    edx
  4114a6:	stc    
  4114a7:	adc    al,0x8
  4114a9:	add    BYTE PTR [esi+ebx*8+0x5382927],bh
  4114b0:	jle    0x41144e
  4114b2:	mov    WORD PTR [ecx],?
  4114b4:	sub    ecx,ecx
  4114b6:	mov    ch,0x40
  4114b8:	inc    esi
  4114b9:	xlat   BYTE PTR ds:[ebx]
  4114ba:	loopne 0x411473
  4114bc:	sub    eax,DWORD PTR [ecx+0x21509422]
  4114c2:	jmp    0x45f26e47
  4114c7:	dec    eax
  4114c8:	and    DWORD PTR [edi-0x2a083003],eax
  4114ce:	push   edi
  4114cf:	mov    edi,0x43107721
  4114d4:	xchg   ebp,eax
  4114d5:	pop    edx
  4114d6:	(bad)  
  4114d7:	and    dh,BYTE PTR [edx-0x4f19c9a8]
  4114dd:	sub    BYTE PTR [edi+esi*1+0xb],cl
  4114e1:	mov    esp,0x8e6d0761
  4114e6:	je     0x4114f5
  4114e8:	and    dl,BYTE PTR [ebx]
  4114ea:	jb     0x411544
  4114ec:	arpl   di,di
  4114ee:	fmul   QWORD PTR [edi+ecx*1]
  4114f1:	sbb    esp,DWORD PTR [edx-0x28]
  4114f4:	out    dx,al
  4114f5:	cli    
  4114f6:	xchg   ebx,eax
  4114f7:	loope  0x411498
  4114f9:	in     al,dx
  4114fa:	fsubr  QWORD PTR [ebx+0x766f1421]
  411500:	aam    0x42
  411502:	or     bh,BYTE PTR fs:0x7159d841
  411509:	pop    esp
  41150a:	int3   
  41150b:	fdiv   QWORD PTR [ebp-0x6c]
  41150e:	add    DWORD PTR [esi+0x7f],esp
  411511:	stc    
  411512:	jae    0x4114dd
  411514:	jl     0x41158d
  411516:	inc    edx
  411517:	test   al,0xfd
  411519:	test   al,0x56
  41151b:	mov    esp,0xa9bfb881
  411520:	rcl    BYTE PTR [edx+ebp*4+0x6410cee],cl
  411527:	jmp    0x411520
  411529:	adc    BYTE PTR [edi+0x8],0x6
  41152d:	or     ebp,DWORD PTR [esi+0x51]
  411530:	out    dx,al
  411531:	pop    esi
  411532:	jmp    0x4115a8
  411534:	fnstenv [edi-0x53]
  411537:	mov    edx,0x9725b7d
  41153c:	dec    eax
  41153d:	out    dx,eax
  41153e:	add    eax,0xc8d3a775
  411543:	popa   
  411544:	cwde   
  411545:	jne    0x411534
  411547:	or     al,0x55
  411549:	loope  0x411509
  41154b:	je     0x411539
  41154d:	loopne 0x4114fe
  41154f:	pop    ecx
  411550:	mov    dh,0x42
  411552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411553:	mov    esi,0x81f77c24
  411558:	push   edi
  411559:	test   eax,0xd6507dd6
  41155e:	dec    esp
  41155f:	out    0x5e,eax
  411561:	add    al,0xbf
  411563:	(bad)  
  411564:	and    al,0xec
  411566:	dec    edi
  411567:	nop
  411568:	lods   eax,DWORD PTR ds:[esi]
  411569:	ins    DWORD PTR es:[edi],dx
  41156a:	adc    edi,DWORD PTR [edx]
  41156c:	cwde   
  41156d:	imul   ecx,edi,0xc8191f5b
  411573:	daa    
  411574:	scas   eax,DWORD PTR es:[edi]
  411575:	xchg   DWORD PTR [eax+0x2e],ebp
  411578:	sub    eax,0xe409a89e
  41157d:	or     al,0xae
  41157f:	scas   eax,DWORD PTR es:[edi]
  411580:	inc    ebx
  411581:	fcmove st,st(1)
  411583:	pop    ebp
  411584:	dec    eax
  411585:	ja     0x41156c
  411587:	jl     0x4115ba
  411589:	mov    eax,gs
  41158b:	add    DWORD PTR [eax+0x4],0xd0ed799c
  411592:	sub    BYTE PTR [ebx+0x321a606b],bl
  411598:	cdq    
  411599:	inc    ebp
  41159a:	mov    ah,BYTE PTR [esi-0x7]
  41159d:	test   DWORD PTR [ebx-0x188f3303],esp
  4115a3:	cmp    dh,0xc9
  4115a6:	or     BYTE PTR [eax-0x4230102e],0x75
  4115ad:	jge    0x41154f
  4115af:	xor    DWORD PTR [edx+edi*2],edx
  4115b2:	push   cs
  4115b3:	and    al,0xc9
  4115b5:	xchg   ch,dl
  4115b7:	lods   al,BYTE PTR ds:[esi]
  4115b8:	fcomi  st,st(4)
  4115ba:	lds    ebx,FWORD PTR [edx]
  4115bc:	inc    edi
  4115bd:	je     0x4115a3
  4115bf:	gs pop eax
  4115c1:	test   ecx,0x9846bb4
  4115c7:	mov    al,0xd7
  4115c9:	jno    0x41157e
  4115cb:	popa   
  4115cc:	push   eax
  4115cd:	and    DWORD PTR ds:0x1109bc3,0x34bdfbeb
  4115d7:	in     al,0x2e
  4115d9:	stc    
  4115da:	ins    BYTE PTR es:[edi],dx
  4115db:	cwde   
  4115dc:	out    dx,al
  4115dd:	jmp    FWORD PTR [eax-0x686a8637]
  4115e3:	fdivr  QWORD PTR [esi]
  4115e5:	xor    DWORD PTR [edi+eiz*4-0x10],ebp
  4115e9:	or     DWORD PTR [eax],ebx
  4115eb:	pcmpgtb mm2,QWORD PTR [ebp-0x3b]
  4115ef:	cmp    ebx,edi
  4115f1:	loop   0x411601
  4115f3:	addr16 jbe 0x4115ae
  4115f6:	aad    0x2b
  4115f8:	adc    DWORD PTR [eax],eax
  4115fa:	fisttp WORD PTR [ebp+0x1dfd7b53]
  411600:	mov    edi,0xf8e07991
  411605:	(bad)  
  411607:	push   esi
  411608:	ss inc ebx
  41160a:	mov    al,0x41
  41160c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41160d:	arpl   WORD PTR [edx+0x6b],di
  411610:	push   ebp
  411611:	je     0x4115cd
  411613:	cdq    
  411614:	dec    DWORD PTR [eax]
  411616:	sub    DWORD PTR [ebx+ecx*4-0x3c776fb9],ebp
  41161d:	and    DWORD PTR [ebp*1-0x489a9cea],ecx
  411624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411625:	inc    ebx
  411626:	cdq    
  411627:	(bad)  
  411628:	cld    
  411629:	imul   ebp,DWORD PTR [ebx+0x7c],0x29
  41162d:	in     al,0x97
  41162f:	and    esi,DWORD PTR [esi]
  411631:	cmp    ch,BYTE PTR [ecx-0x15]
  411634:	sub    DWORD PTR [ebx-0x6f943996],esi
  41163a:	lods   eax,DWORD PTR ds:[esi]
  41163b:	cmp    eax,0xe8e3a221
  411640:	pushaw 
  411642:	out    0xb6,al
  411644:	stos   BYTE PTR es:[edi],al
  411645:	inc    ecx
  411646:	ja     0x41162e
  411648:	les    edi,FWORD PTR ds:0x770a71c2
  41164e:	fst    DWORD PTR [ecx-0xb4ff9bb]
  411654:	add    al,0xce
  411656:	adc    al,0x2b
  411658:	(bad)  
  411659:	sub    eax,0x5439085f
  41165e:	jnp    0x411671
  411660:	int    0xd4
  411662:	addr16 iret 
  411664:	adc    DWORD PTR [edi+0x42],edi
  411667:	mov    al,ds:0x6fdb9a23
  41166c:	aas    
  41166d:	and    cl,BYTE PTR [eax+0x3f]
  411670:	pop    edx
  411671:	retf   
  411672:	pop    ebp
  411673:	sub    edx,DWORD PTR [eax+0x6a]
  411676:	out    0x3b,al
  411678:	dec    esp
  411679:	jae    0x4116ab
  41167b:	lahf   
  41167c:	push   esi
  41167d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41167e:	xchg   ebx,eax
  41167f:	dec    edi
  411680:	mov    ebx,0xf5115587
  411685:	and    DWORD PTR [esi+0x7522c8f4],eax
  41168b:	adc    BYTE PTR [edi+ebp*2],0x94
  41168f:	mov    ?,WORD PTR [esi]
  411691:	mov    ds:0xc3107857,eax
  411696:	jecxz  0x411670
  411698:	jl     0x4116fe
  41169a:	mov    ecx,0xe6cff7ff
  41169f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a1:	(bad)  
  4116a2:	adc    eax,0xb03f7c35
  4116a7:	in     eax,dx
  4116a8:	push   eax
  4116a9:	xchg   edi,eax
  4116aa:	xor    eax,DWORD PTR [edi+0x57]
  4116ad:	sbb    BYTE PTR ds:0x1b474fdf,cl
  4116b3:	pusha  
  4116b4:	ss dec ebx
  4116b6:	jbe    0x411704
  4116b8:	(bad)  
  4116b9:	je     0x41169e
  4116bb:	inc    esi
  4116bc:	(bad)  
  4116bd:	dec    edx
  4116be:	mov    ch,0x42
  4116c0:	mov    DWORD PTR [edx+0x2c],edi
  4116c3:	adc    dh,BYTE PTR [eax+ebx*1+0x78ca45a7]
  4116ca:	mov    al,0x95
  4116cc:	lock jmp 0x5639:0x75773d83
  4116d4:	push   0x61704877
  4116d9:	(bad)  
  4116da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116db:	mov    WORD PTR [eax+0x1f7a0d82],es
  4116e1:	pop    es
  4116e2:	call   0x68d340c5
  4116e7:	and    dh,BYTE PTR [ecx]
  4116e9:	pop    esp
  4116ea:	inc    edi
  4116eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ec:	enter  0x5d30,0x8f
  4116f0:	enter  0x4c3e,0xec
  4116f4:	xorps  xmm5,XMMWORD PTR [ebx+0x284d05]
  4116fb:	add    BYTE PTR [eax],al
  4116fd:	add    BYTE PTR [eax],al
  4116ff:	add    BYTE PTR [eax],al
  411701:	add    BYTE PTR [ecx],bl
  411703:	je     0x4116d4
  411705:	(bad)  
  411706:	out    dx,eax
  411707:	(bad)  
  411708:	cmp    esi,esi
  41170a:	repnz sahf 
  41170c:	mov    ebx,0x70a43323
  411711:	mov    al,0x5b
  411713:	sbb    al,BYTE PTR [ecx]
  411715:	add    BYTE PTR [eax],ah
  411717:	pop    es
  411718:	add    BYTE PTR [eax],al
  41171a:	dec    ebp
  41171b:	out    0x4a,al
  41171d:	data16 mov WORD PTR cs:[eax-0x73],ds
  411722:	aad    0x68
  411724:	adc    eax,0x5824f3c5
  411729:	scas   eax,DWORD PTR es:[edi]
  41172a:	shl    cl,cl
  41172c:	cmp    eax,0xd5350d1d
  411731:	mov    dl,0x66
  411733:	jecxz  0x411711
  411735:	jno    0x4116c6
  411737:	dec    edx
  411738:	in     eax,0xa4
  41173a:	inc    ebp
  41173b:	fscale 
  41173d:	jmp    0x5cdd:0x51486ff7
  411744:	dec    edx
  411745:	push   edx
  411746:	gs inc ebx
  411748:	pop    eax
  411749:	jno    0x411781
  41174b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41174c:	cmp    esi,DWORD PTR [eax+0x6e]
  41174f:	scas   eax,DWORD PTR es:[edi]
  411750:	iret   
  411751:	icebp  
  411752:	adc    bl,BYTE PTR [ebx]
  411754:	pop    eax
  411755:	imul   esp,DWORD PTR [edx-0x2f],0x46
  411759:	add    eax,0xbcc079cd
  41175e:	xchg   ebp,eax
  41175f:	mov    bh,0x87
  411761:	pop    ecx
  411762:	icebp  
  411763:	adc    ah,bh
  411765:	or     al,0x7a
  411767:	(bad)  
  411768:	cmc    
  411769:	adc    BYTE PTR [esi+0x20],dh
  41176c:	or     al,0x7
  41176e:	in     eax,0xf0
  411770:	cmp    eax,0x22ae6f54
  411775:	xor    dh,bl
  411777:	adc    DWORD PTR [eax],edi
  411779:	sti    
  41177a:	mov    ah,0xb9
  41177c:	add    bh,BYTE PTR [ebx+ebx*1-0x35]
  411780:	cwde   
  411781:	xchg   ebx,eax
  411782:	sti    
  411783:	jne    0x41173a
  411785:	and    eax,0x843d73c7
  41178a:	dec    esi
  41178b:	push   ebx
  41178c:	xchg   edi,eax
  41178d:	pop    edi
  41178e:	test   DWORD PTR [edi],ecx
  411790:	stc    
  411791:	imul   eax,edx,0x56cd29a5
  411797:	jb     0x411728
  411799:	jmp    0x41171c
  41179b:	xlat   BYTE PTR ds:[ebx]
  41179c:	fbstp  TBYTE PTR [edx]
  41179e:	not    DWORD PTR [esi-0x5c2b9bb4]
  4117a4:	daa    
  4117a5:	adc    eax,0x8eeda553
  4117aa:	callw  0x2f76
  4117ae:	imul   edi,DWORD PTR [ecx],0xe337efbd
  4117b4:	aaa    
  4117b5:	aad    0xca
  4117b7:	jb     0x411838
  4117b9:	jmp    DWORD PTR [edx+0x57]
  4117bc:	(bad)  
  4117bd:	rcr    cl,cl
  4117bf:	sub    DWORD PTR [edi+0x62],ecx
  4117c2:	mov    ch,0xd2
  4117c4:	sbb    eax,0x1c725a32
  4117c9:	cmp    BYTE PTR [ecx+0x69],ah
  4117cc:	cmp    DWORD PTR [eax+edx*8],ebp
  4117cf:	push   0xbc8d8d4a
  4117d4:	xchg   ch,ah
  4117d6:	imul   ebp,DWORD PTR [esi-0x5167fd17],0x24178cab
  4117e0:	pop    ss
  4117e1:	or     eax,0xb89e5ae5
  4117e6:	(bad)  
  4117e7:	iret   
  4117e8:	push   es
  4117e9:	idiv   esi
  4117eb:	xchg   edx,eax
  4117ec:	out    dx,al
  4117ed:	jmp    0x42c96f16
  4117f2:	pop    ss
  4117f3:	into   
  4117f4:	dec    esp
  4117f5:	cmp    BYTE PTR [ebx+eax*2],al
  4117f8:	jae    0x4117c7
  4117fa:	push   edx
  4117fb:	mov    al,ds:0x6761937c
  411800:	sbb    ch,cl
  411802:	xchg   edx,eax
  411804:	(bad)  
  411805:	stc    
  411806:	pop    ebp
  411807:	fwait
  411808:	add    dh,ah
  41180a:	ss jb  0x4117b5
  41180d:	out    dx,al
  41180e:	cmp    al,0xae
  411810:	sar    DWORD PTR [ebx+eax*8-0x648821e4],0x7a
  411818:	scas   al,BYTE PTR es:[edi]
  411819:	push   ebx
  41181a:	dec    esi
  41181b:	inc    ebx
  41181c:	shr    DWORD PTR [esi+0x31],cl
  41181f:	rol    BYTE PTR [ebp+ebx*1+0xe],1
  411823:	les    edi,FWORD PTR [edx+0x855b873]
  411829:	xchg   BYTE PTR [eax-0x33b85e19],dl
  41182f:	aaa    
  411830:	cmc    
  411831:	cwde   
  411832:	mov    ebx,0x2a677483
  411837:	jb     0x411805
  411839:	jns    0x4117f0
  41183b:	shl    esi,1
  41183d:	pop    ecx
  41183e:	sub    DWORD PTR [esi+0x25],edi
  411841:	in     al,0x34
  411843:	jbe    0x4117fa
  411845:	xor    eax,0x856e911e
  41184a:	addr16 and eax,0xa4400292
  411850:	xchg   edx,eax
  411851:	test   BYTE PTR ds:0xc764d3b9,0xe1
  411858:	mov    esp,0xbf491217
  41185d:	or     eax,0x6270ecf6
  411862:	in     al,0xe9
  411864:	pop    edi
  411865:	scas   al,BYTE PTR es:[edi]
  411866:	cmp    dl,cl
  411868:	push   ss
  411869:	xchg   esp,eax
  41186a:	sbb    al,dh
  41186c:	out    dx,eax
  41186d:	mov    DWORD PTR [ecx+0x6d],0x1f088329
  411874:	scas   eax,DWORD PTR es:[edi]
  411875:	repnz fstp TBYTE PTR [edi+0x10]
  411879:	push   ecx
  41187a:	in     al,dx
  41187b:	sbb    al,0xe1
  41187d:	dec    ebp
  41187e:	mov    al,ds:0x308bd776
  411883:	lds    eax,FWORD PTR [edx-0x59c72afa]
  411889:	xor    al,0xf4
  41188b:	(bad)  
  41188c:	sbb    eax,0xe9b8b968
  411891:	mov    al,0x4f
  411893:	xor    BYTE PTR [ebp-0x2261f1f3],bh
  411899:	add    eax,0xf061436e
  41189e:	fidiv  WORD PTR [edi+ebx*2]
  4118a1:	dec    edi
  4118a2:	test   DWORD PTR [esi+0x77],esp
  4118a5:	fs cdq 
  4118a7:	cmp    edx,ecx
  4118a9:	aam    0x21
  4118ab:	xor    eax,0xd8c712d8
  4118b0:	xchg   ebx,eax
  4118b1:	std    
  4118b2:	clc    
  4118b3:	(bad)  
  4118b4:	out    dx,eax
  4118b5:	mov    ss,edx
  4118b7:	loop   0x4118f3
  4118b9:	pop    ds
  4118ba:	call   0xf5d4a2a3
  4118bf:	es out dx,eax
  4118c1:	pop    ebp
  4118c2:	push   eax
  4118c3:	fsubp  st(6),st
  4118c5:	stos   BYTE PTR es:[edi],al
  4118c6:	pop    edx
  4118c7:	mov    ds:0x15fecc17,al
  4118cc:	mov    ecx,eax
  4118ce:	out    0x1a,al
  4118d0:	inc    edx
  4118d1:	push   cs
  4118d2:	outs   dx,DWORD PTR ds:[esi]
  4118d3:	push   edx
  4118d4:	iret   
  4118d5:	inc    esp
  4118d6:	add    al,0xce
  4118d8:	push   ebx
  4118d9:	in     al,dx
  4118da:	int3   
  4118db:	mov    ebp,0x4786968c
  4118e0:	cdq    
  4118e1:	xchg   ebp,eax
  4118e2:	aas    
  4118e3:	fcom   QWORD PTR [eax+0x21]
  4118e6:	cdq    
  4118e7:	ins    BYTE PTR es:[edi],dx
  4118e8:	mov    eax,ds:0xee06180e
  4118ed:	bound  si,DWORD PTR [esi+0x49]
  4118f1:	mov    cl,0x66
  4118f3:	push   ecx
  4118f4:	or     bl,0xde
  4118f7:	mov    ebx,0x39f9418d
  4118fc:	mov    es,WORD PTR fs:[esi+0xf]
  411900:	mov    ds:0x33bbc1fd,al
  411905:	mov    edi,0xbac1b559
  41190a:	xchg   DWORD PTR ds:0x103382e,edx
  411910:	push   ecx
  411911:	ret    0x72b4
  411914:	psrad  mm6,QWORD PTR [eax-0x38]
  411918:	call   0x5129:0x9130335a
  41191f:	push   esp
  411920:	jmp    0xa86c:0x3eeef39d
  411927:	dec    esi
  411928:	sar    edx,1
  41192a:	inc    eax
  41192b:	mov    ebp,0x802fc88a
  411930:	xor    BYTE PTR [edi],ah
  411932:	xchg   ebp,eax
  411933:	xchg   esi,eax
  411934:	pusha  
  411935:	(bad)  
  411936:	adc    esi,DWORD PTR [ecx+0xa]
  411939:	(bad)  
  41193a:	or     edi,DWORD PTR [esp+edx*4-0x1dd62d15]
  411941:	nop
  411942:	fnstsw WORD PTR [bx]
  411945:	inc    esp
  411946:	cli    
  411947:	test   al,0x54
  411949:	mov    al,0xe8
  41194b:	mov    ebp,0x1758b379
  411950:	mov    ecx,0xfa1a7cd8
  411955:	mov    bh,BYTE PTR [ebp-0x29]
  411958:	or     BYTE PTR [edx],ch
  41195a:	rol    DWORD PTR [esp+ebp*8],1
  41195d:	pop    esp
  41195e:	ret    
  41195f:	sub    ah,dl
  411961:	mov    esp,0x782b98bf
  411966:	sar    DWORD PTR ds:0x418914af,0x93
  41196d:	pushf  
  41196e:	mov    BYTE PTR [ebx],bl
  411970:	xchg   esp,eax
  411971:	std    
  411972:	mov    ecx,0xb05fcbd4
  411977:	repz fimul WORD PTR [si-0x1635]
  41197d:	test   bl,al
  41197f:	pop    edi
  411980:	push   ss
  411981:	in     al,dx
  411982:	pop    ss
  411983:	rcl    esp,1
  411985:	jge    0x41196f
  411987:	in     al,0xac
  411989:	and    DWORD PTR [ebx-0x31],0x69
  41198d:	or     esi,DWORD PTR [edi-0x3fe667e]
  411993:	stc    
  411994:	loope  0x411950
  411996:	push   esp
  411997:	or     al,0x4b
  411999:	ret    
  41199a:	repz repz and ebx,DWORD PTR [edi-0x1856df23]
  4119a2:	jnp    0x41195f
  4119a4:	sub    DWORD PTR [eax],esi
  4119a6:	(bad)  
  4119a7:	js     0x411953
  4119a9:	mov    BYTE PTR [eax-0x21ade18],dh
  4119af:	cmp    DWORD PTR [esp+eiz*8+0x5a],ebx
  4119b3:	adc    DWORD PTR [edx+0x3ad862e8],edi
  4119b9:	push   edi
  4119ba:	dec    ebx
  4119bb:	push   edx
  4119bc:	inc    eax
  4119bd:	mov    edx,0x44403a19
  4119c2:	addr16 jb 0x411a2a
  4119c5:	pop    eax
  4119c6:	clc    
  4119c7:	fcomp  DWORD PTR [ebp+0x24]
  4119ca:	jbe    0x411990
  4119cc:	mov    ebp,0xe3fa3373
  4119d1:	lods   al,BYTE PTR ds:[esi]
  4119d2:	les    ebx,FWORD PTR [ebp-0x21]
  4119d5:	pushf  
  4119d6:	xor    edi,ebp
  4119d8:	test   BYTE PTR [esi+0x73],dl
  4119db:	or     eax,0x9604536e
  4119e0:	and    edi,DWORD PTR [ecx]
  4119e2:	loope  0x4119d9
  4119e4:	fidivr DWORD PTR ds:0x9fdf5848
  4119ea:	pushf  
  4119eb:	xchg   BYTE PTR [ebp-0x9748b7a],ch
  4119f1:	cs pop ebp
  4119f3:	lock push ss
  4119f5:	loop   0x411987
  4119f7:	test   al,0x4d
  4119f9:	(bad)  
  4119fa:	inc    esp
  4119fb:	mov    dl,0xf8
  4119fd:	push   eax
  4119fe:	ins    DWORD PTR es:[edi],dx
  4119ff:	cmp    ah,ch
  411a01:	inc    edi
  411a02:	mov    ebp,0x1a782a85
  411a07:	ds jb  0x411a80
  411a0a:	dec    ebx
  411a0b:	sahf   
  411a0c:	lods   al,BYTE PTR ds:[esi]
  411a0d:	xchg   esi,eax
  411a0e:	ins    BYTE PTR es:[edi],dx
  411a0f:	faddp  st(0),st
  411a11:	das    
  411a12:	xchg   ebx,eax
  411a13:	or     dh,dl
  411a15:	adc    eax,0xbfdcc1e7
  411a1a:	mov    cl,BYTE PTR [ebx-0xaba750c]
  411a20:	dec    ecx
  411a21:	push   cs
  411a22:	js     0x4119f8
  411a24:	cmp    ch,BYTE PTR [esi+0x38df7c7]
  411a2a:	add    DWORD PTR [edx+ebp*8+0x58bde95d],ebp
  411a31:	mov    eax,0x96fa1fbb
  411a36:	xor    eax,0x65f020f5
  411a3b:	outs   dx,DWORD PTR ds:[esi]
  411a3c:	push   es
  411a3d:	mov    ss,WORD PTR [ebx]
  411a3f:	inc    edi
  411a40:	jg     0x411a9c
  411a42:	inc    esp
  411a43:	test   esi,0xf318062e
  411a49:	out    dx,eax
  411a4a:	outs   dx,BYTE PTR ds:[esi]
  411a4b:	push   0x863b698a
  411a50:	outs   dx,BYTE PTR ds:[esi]
  411a51:	stc    
  411a52:	mov    bh,0xf2
  411a54:	jp     0x411aa9
  411a56:	add    al,0x95
  411a58:	call   0x55489fdd
  411a5d:	push   ebp
  411a5e:	je     0x411a60
  411a60:	js     0x411a8d
  411a62:	sbb    BYTE PTR [edi+0x5b],bh
  411a65:	push   ecx
  411a66:	inc    edx
  411a67:	inc    ebp
  411a68:	xor    ah,ah
  411a6a:	sub    edi,DWORD PTR [esi+0xd]
  411a6d:	mov    ds:0xedd1df5,al
  411a72:	xchg   esi,eax
  411a73:	pusha  
  411a74:	mov    eax,ds:0x2265f46c
  411a79:	adc    DWORD PTR [ebx-0x6e622726],ebp
  411a7f:	or     BYTE PTR [edx-0x229e21e3],bl
  411a85:	leave  
  411a86:	aas    
  411a87:	int3   
  411a88:	xchg   ecx,eax
  411a89:	mov    ah,0xa6
  411a8b:	xlat   BYTE PTR ds:[ebx]
  411a8c:	mov    eax,ds:0x7ab28ee8
  411a91:	in     eax,0x9b
  411a93:	pop    esp
  411a94:	test   DWORD PTR [edi+0x31713faf],0x32985c34
  411a9e:	pop    eax
  411a9f:	mov    eax,0x2c54b75f
  411aa4:	aad    0x4a
  411aa6:	sbb    al,0x67
  411aa8:	loope  0x411a9d
  411aaa:	inc    esp
  411aab:	push   0xffffff9c
  411aad:	dec    eax
  411aae:	mov    ah,0x69
  411ab0:	sub    DWORD PTR [edx],ebx
  411ab2:	out    dx,al
  411ab3:	cli    
  411ab4:	mov    edi,DWORD PTR [ecx+0x3c]
  411ab7:	neg    DWORD PTR [edi+eiz*4]
  411aba:	or     al,0x48
  411abc:	jecxz  0x411a8d
  411abe:	adc    bh,BYTE PTR [esi+0x70]
  411ac1:	fisttp QWORD PTR [edi+0x38b930bc]
  411ac7:	cmp    edx,DWORD PTR [ebx-0x5a875c6b]
  411acd:	je     0x411b14
  411acf:	mov    ecx,edi
  411ad1:	imul   esi,DWORD PTR [esi-0x7f],0xffffffc8
  411ad5:	xor    eax,0x98bf2c9d
  411ada:	pop    es
  411adb:	pop    edx
  411adc:	mov    dh,0xfb
  411ade:	aam    0x85
  411ae0:	mov    ds:0xfe8f4b8f,al
  411ae5:	lea    edi,[esi-0x7a]
  411ae8:	loop   0x411a96
  411aea:	jae    0x411b33
  411aec:	adc    edx,DWORD PTR [ebp+eiz*1-0xac1b1fd]
  411af3:	mov    gs,WORD PTR es:[edi-0x66]
  411af7:	xor    edi,DWORD PTR [edx+0x466246e4]
  411afd:	dec    edx
  411afe:	pop    esp
  411aff:	pop    ds
  411b00:	out    dx,al
  411b01:	cld    
  411b02:	dec    edx
  411b03:	mov    bl,0x7d
  411b05:	and    ecx,edx
  411b07:	adc    bl,BYTE PTR [ebp-0x42f97d14]
  411b0d:	mov    dl,0x44
  411b0f:	nop
  411b10:	adc    eax,0x54985ed5
  411b15:	add    DWORD PTR [edi],esp
  411b17:	fcomp  QWORD PTR [edx+0x24]
  411b1a:	dec    edx
  411b1b:	popa   
  411b1c:	test   eax,0x9d82efdc
  411b21:	pusha  
  411b22:	and    bh,0x72
  411b25:	adc    BYTE PTR [ebx-0x67510b25],cl
  411b2b:	mov    BYTE PTR [edi],al
  411b2d:	fwait
  411b2e:	xchg   ebp,eax
  411b2f:	jmp    FWORD PTR [ebx+ebp*4-0xf]
  411b33:	push   esi
  411b34:	shl    edi,cl
  411b36:	sbb    edx,DWORD PTR [esi]
  411b38:	mov    ch,BYTE PTR [ebp+0x26]
  411b3b:	out    dx,eax
  411b3c:	and    esi,edi
  411b3e:	outs   dx,BYTE PTR ds:[esi]
  411b3f:	jle    0x411b66
  411b41:	pmuludq mm5,QWORD PTR [ebx+0x162a0174]
  411b48:	inc    ebx
  411b49:	pop    es
  411b4a:	iret   
  411b4b:	and    bl,bl
  411b4d:	push   ds
  411b4e:	mov    eax,ds:0x5e5decad
  411b53:	sbb    edi,ebp
  411b55:	mov    ecx,0x2c64a3f2
  411b5a:	ficom  WORD PTR [edi-0x4bfb873a]
  411b60:	pop    esp
  411b61:	std    
  411b62:	jne    0x411b25
  411b64:	add    BYTE PTR [edi-0x2d],bh
  411b67:	rcl    BYTE PTR [edx+0x59],0x7c
  411b6b:	mov    cl,BYTE PTR [esi+0x31]
  411b6e:	imul   edx,DWORD PTR [edi-0x1725b9c8],0x866546e6
  411b78:	into   
  411b79:	push   esi
  411b7a:	dec    esp
  411b7b:	in     al,dx
  411b7c:	fsubp  st(0),st
  411b7e:	xlat   BYTE PTR ds:[ebx]
  411b7f:	(bad)  
  411b80:	pop    ebx
  411b81:	retf   0xa82
  411b84:	in     al,0x61
  411b86:	iret   
  411b87:	xchg   esi,eax
  411b88:	add    DWORD PTR [ecx-0x7a],edx
  411b8b:	pop    edx
  411b8c:	add    dh,bh
  411b8e:	rcl    BYTE PTR [esi-0xe18d941],0xf0
  411b95:	fdiv   QWORD PTR [ebp+0x45]
  411b98:	xor    eax,0x5b4c4385
  411b9d:	or     bh,bl
  411b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ba0:	fld    TBYTE PTR [ebp-0x43]
  411ba3:	in     eax,0xe4
  411ba5:	test   BYTE PTR [ecx+edx*1-0x34],ah
  411ba9:	popa   
  411baa:	and    eax,0xd9be308a
  411baf:	pop    esp
  411bb0:	mov    ecx,DWORD PTR [eax-0x3e14254c]
  411bb6:	dec    esp
  411bb7:	xchg   ecx,eax
  411bb8:	or     DWORD PTR [ebx+0x53],edi
  411bbb:	and    eax,0xc56647df
  411bc0:	jb     0x411c21
  411bc2:	dec    esp
  411bc3:	rcl    DWORD PTR ds:0x6f510c8f,cl
  411bc9:	jg     0x411ba8
  411bcb:	inc    ebx
  411bcc:	push   edi
  411bcd:	loope  0x411c17
  411bcf:	cmp    cl,BYTE PTR [ecx+edi*4+0x53]
  411bd3:	push   ds
  411bd4:	xchg   BYTE PTR ds:0x4d80aec8,ch
  411bda:	ret    0x5fab
  411bdd:	into   
  411bde:	in     al,0x4e
  411be0:	out    dx,al
  411be1:	push   edi
  411be2:	push   0x3
  411be4:	lods   al,BYTE PTR ds:[esi]
  411be5:	jecxz  0x411b8e
  411be7:	das    
  411be8:	or     bh,BYTE PTR [edi-0x1c]
  411beb:	xor    bh,BYTE PTR [ecx]
  411bed:	or     eax,DWORD PTR [edx+0x55]
  411bf0:	sbb    eax,0x34c025bd
  411bf5:	push   edi
  411bf6:	lods   eax,DWORD PTR ds:[esi]
  411bf7:	nop
  411bf8:	mov    ds:0xaf92f399,al
  411bfd:	data16 ja 0x411bb7
  411c00:	inc    edi
  411c01:	push   edx
  411c02:	push   esp
  411c03:	mov    cl,0xc7
  411c05:	mov    dl,0xcf
  411c07:	shl    BYTE PTR [ebx],cl
  411c09:	lds    ebp,FWORD PTR [eax]
  411c0b:	popa   
  411c0c:	fs mov dh,0x5b
  411c0f:	iret   
  411c10:	cdq    
  411c11:	hlt    
  411c12:	data16 cld 
  411c14:	xor    al,0xbe
  411c16:	cmp    ebx,edx
  411c18:	aam    0xe6
  411c1a:	test   DWORD PTR [ebx+0x2f],eax
  411c1d:	out    dx,al
  411c1e:	ins    DWORD PTR es:[edi],dx
  411c1f:	jecxz  0x411c60
  411c21:	imul   edi,DWORD PTR [eax-0x46367c05],0x6a
  411c28:	fbld   TBYTE PTR [edi]
  411c2a:	push   eax
  411c2b:	popf   
  411c2c:	mov    DWORD PTR [eax-0x2f82f29e],edi
  411c32:	mov    cl,0xd
  411c34:	repnz scas eax,DWORD PTR es:[edi]
  411c36:	mov    ebx,0x27ae8f4
  411c3b:	test   eax,0x51f9ba01
  411c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c41:	jle    0x411bf6
  411c43:	into   
  411c44:	faddp  st(1),st
  411c46:	in     al,dx
  411c47:	jmp    0x37769b66
  411c4c:	outs   dx,DWORD PTR ds:[esi]
  411c4d:	(bad)  [esi+0x4f13f34f]
  411c53:	imul   edi,DWORD PTR [ecx+edx*8],0xffffffde
  411c57:	mov    gs,ecx
  411c59:	mov    cs,WORD PTR [ebp+0x1eb16629]
  411c5f:	jl     0x411c86
  411c61:	xchg   DWORD PTR [edi+0x2],ecx
  411c64:	fisub  DWORD PTR [ebp-0x79]
  411c67:	fwait
  411c68:	mov    ebp,ebx
  411c6a:	aas    
  411c6b:	(bad)  
  411c6c:	dec    esp
  411c6d:	mov    dl,0xea
  411c6f:	iretw  
  411c71:	je     0x411c55
  411c73:	mov    ebp,0xdeffdd2a
  411c78:	cmp    ecx,ebp
  411c7a:	ss (bad) 
  411c7d:	mov    edi,0x246c8f4b
  411c82:	xchg   esi,eax
  411c83:	adc    al,0xe6
  411c85:	nop
  411c86:	sub    esp,0xce5a8ad8
  411c8c:	pop    ebx
  411c8d:	mov    dl,cl
  411c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c90:	pop    es
  411c91:	xlat   BYTE PTR ds:[ebx]
  411c92:	inc    eax
  411c93:	lea    esi,[edx+0x322547b1]
  411c99:	jnp    0x411c4b
  411c9b:	retf   0x51f6
  411c9e:	pop    esi
  411c9f:	ss xchg esi,eax
  411ca1:	pop    ecx
  411ca2:	stos   DWORD PTR es:[edi],eax
  411ca3:	push   ecx
  411ca4:	mov    ebx,0x1992ca14
  411ca9:	xor    eax,0x70dfdba
  411cae:	jne    0x411c6e
  411cb0:	repnz mov eax,ds:0xfe760da4
  411cb6:	add    esp,edi
  411cb8:	inc    edi
  411cb9:	mov    eax,ds:0xf590c512
  411cbe:	jg     0x411d2c
  411cc0:	sbb    BYTE PTR [esi],ah
  411cc2:	fwait
  411cc3:	test   eax,0xe7bf26c2
  411cc8:	sub    BYTE PTR [ebp+edx*2-0x3c],0x3d
  411ccd:	jmp    0xb45a0753
  411cd2:	sub    eax,0xcde6c5a0
  411cd7:	mov    eax,0x8275b750
  411cdc:	mov    esp,0x37d9310b
  411ce1:	mov    edx,0x178eb3d1
  411ce6:	xor    eax,0xe6463d4d
  411ceb:	inc    esi
  411cec:	add    cl,BYTE PTR [edx]
  411cee:	xchg   DWORD PTR [ecx],eax
  411cf0:	or     eax,0xc72cf2c7
  411cf5:	shl    edx,1
  411cf7:	or     esi,DWORD PTR [ecx-0x2fb3f29c]
  411cfd:	or     al,0xfa
  411cff:	mov    ebp,0xd48d56cb
  411d04:	cli    
  411d05:	test   eax,0x72f73b66
  411d0a:	xor    eax,0xb548dae3
  411d0f:	dec    esp
  411d10:	or     al,0xf2
  411d12:	rcr    BYTE PTR cs:[ecx+0x6328aa45],cl
  411d19:	mov    ah,0xbc
  411d1b:	fcomp  DWORD PTR [eax-0x74]
  411d1e:	xchg   ebx,eax
  411d1f:	push   ebp
  411d20:	ja     0x411d69
  411d22:	les    ebx,FWORD PTR [eax-0x2a68bff]
  411d28:	enter  0xfc90,0x6e
  411d2c:	push   ds
  411d2d:	aad    0xbe
  411d2f:	inc    esi
  411d30:	add    eax,ecx
  411d32:	xor    bh,al
  411d34:	sbb    BYTE PTR [esi+0x77d90a54],al
  411d3a:	push   ss
  411d3b:	sub    al,0x2a
  411d3d:	cmp    esi,DWORD PTR [ecx+0x58]
  411d40:	cmp    DWORD PTR [eax+0x5986dd09],eax
  411d46:	cmp    DWORD PTR [ebx-0xc],esp
  411d49:	pop    ebx
  411d4a:	mov    dh,BYTE PTR [esi+0x27]
  411d4d:	mov    ecx,0x278a1d68
  411d52:	xchg   BYTE PTR [esi+0x3dce8759],bh
  411d58:	cmp    dh,0xf9
  411d5b:	xchg   ecx,eax
  411d5c:	in     al,dx
  411d5d:	xchg   edi,eax
  411d5e:	sar    DWORD PTR [ebx+edi*1],cl
  411d61:	cmp    edx,eax
  411d63:	cmp    edx,DWORD PTR [ecx+edi*8+0x1339a30f]
  411d6a:	dec    ecx
  411d6b:	dec    esi
  411d6c:	lea    ebx,[edx]
  411d6e:	dec    BYTE PTR [ecx+0x7]
  411d71:	pop    edi
  411d72:	push   ecx
  411d73:	jmp    0x411d32
  411d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d76:	cmp    dl,dl
  411d78:	(bad)  
  411d79:	lods   eax,DWORD PTR ds:[esi]
  411d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d7c:	loop   0x411d40
  411d7e:	jecxz  0x411d6a
  411d80:	mov    edi,0x47fa8f08
  411d85:	or     eax,0x7dbc8c33
  411d8a:	dec    esi
  411d8b:	lods   eax,DWORD PTR ds:[esi]
  411d8c:	mov    DWORD PTR [ebx+0x30],0x48827c54
  411d93:	stc    
  411d94:	jecxz  0x411d76
  411d96:	inc    eax
  411d97:	mov    bh,0x51
  411d99:	xchg   dh,bl
  411d9b:	jne    0x411d20
  411d9d:	std    
  411d9e:	dec    ebp
  411d9f:	jb     0x411d81
  411da1:	ja     0x411e18
  411da3:	dec    ebx
  411da4:	mov    al,0xb6
  411da6:	xchg   esi,eax
  411da7:	lea    esi,[edi-0x14]
  411daa:	sbb    ch,BYTE PTR [edi]
  411dac:	enter  0x796f,0x93
  411db0:	not    BYTE PTR [esp+eax*4-0x398d3de9]
  411db7:	add    al,BYTE PTR [edi+0x5316e328]
  411dbd:	jnp    0x411d9d
  411dbf:	push   ecx
  411dc0:	out    dx,al
  411dc1:	fld    QWORD PTR [edi+ebp*4]
  411dc4:	cld    
  411dc5:	cmp    al,0x1a
  411dc7:	push   ebp
  411dc8:	sbb    DWORD PTR [ecx],edx
  411dca:	add    BYTE PTR [ecx+0x1097f111],cl
  411dd0:	sub    dh,ch
  411dd2:	lock cli 
  411dd4:	mov    esi,0xe8e8ae1b
  411dd9:	sub    DWORD PTR [ebp-0x72],ecx
  411ddc:	and    al,0xce
  411dde:	cld    
  411ddf:	adc    BYTE PTR [ebp-0x7b],ah
  411de2:	jbe    0x411e60
  411de4:	aas    
  411de5:	cdq    
  411de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411de7:	js     0x411dbc
  411de9:	mov    ch,0xce
  411deb:	mov    ebp,0xb6c907ad
  411df0:	dec    edx
  411df1:	(bad)  
  411df2:	mov    esp,0x80e17796
  411df7:	sub    eax,0xd1dc58c6
  411dfc:	and    DWORD PTR [edx],eax
  411dfe:	sbb    al,0x21
  411e00:	jecxz  0x411e74
  411e02:	out    0xcf,eax
  411e04:	enter  0x5f0c,0x56
  411e08:	test   ebx,ebx
  411e0a:	and    DWORD PTR [ebx+edx*1-0x45],ecx
  411e0e:	add    ebx,DWORD PTR [ecx-0x386f32d5]
  411e14:	rcl    BYTE PTR [ebx],cl
  411e16:	jb     0x411e1d
  411e18:	push   ds
  411e19:	adc    ecx,ebx
  411e1b:	mov    al,ds:0x6009af1f
  411e20:	retf   
  411e21:	jno    0x411e0c
  411e23:	or     BYTE PTR [esi+0x1a],ah
  411e26:	jmp    0x411dd6
  411e28:	and    al,0x41
  411e2a:	or     dl,bh
  411e2c:	mov    dh,0x5f
  411e2e:	adc    ebx,ebx
  411e30:	pusha  
  411e31:	dec    ebp
  411e32:	and    ecx,DWORD PTR [edi+ecx*2]
  411e35:	mov    ds:0x42caec33,al
	...
  411e42:	aad    0x80
  411e44:	pusha  
  411e45:	cld    
  411e46:	jne    0x411e44
  411e48:	(bad)  [ecx+0x32bc8e94]
  411e4e:	pop    esi
  411e4f:	pop    ebp
  411e50:	xchg   edx,eax
  411e51:	push   esp
  411e52:	jnp    0x411e75
  411e54:	add    DWORD PTR [eax],eax
  411e56:	and    BYTE PTR [edi],al
  411e58:	add    BYTE PTR [eax],al
  411e5a:	call   0x67e5eeef
  411e5f:	inc    ebp
  411e60:	add    DWORD PTR [ebp+0x49480c49],edx
  411e66:	adc    BYTE PTR [eax],cl
  411e68:	inc    edi
  411e69:	shr    BYTE PTR [esi],1
  411e6b:	icebp  
  411e6c:	jbe    0x411e55
  411e6e:	push   ds
  411e6f:	scas   eax,DWORD PTR es:[edi]
  411e70:	or     BYTE PTR [edx+0x692853ee],dh
  411e76:	xchg   esp,eax
  411e77:	push   ss
  411e78:	(bad)  
  411e7a:	inc    ecx
  411e7b:	sbb    cl,BYTE PTR [ebx+0x1e]
  411e7e:	adc    dh,BYTE PTR [edi-0x6]
  411e81:	pop    esi
  411e82:	daa    
  411e83:	adc    DWORD PTR [eax+0x579956f],edi
  411e89:	sub    eax,ecx
  411e8b:	and    bh,BYTE PTR [edx+eax*2-0x46e27fa8]
  411e92:	jo     0x411e29
  411e94:	sub    al,0xbd
  411e96:	int    0x30
  411e98:	mov    ebp,eax
  411e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e9b:	fwait
  411e9c:	clc    
  411e9d:	xor    BYTE PTR [ecx-0x572dc09d],bl
  411ea3:	std    
  411ea4:	lds    esp,FWORD PTR ds:0x32cbc5d4
  411eaa:	cli    
  411eab:	pop    esi
  411eac:	btc    DWORD PTR [ebp-0x4605904a],ebx
  411eb3:	push   ebp
  411eb4:	int3   
  411eb5:	xchg   esi,eax
  411eb6:	inc    ebx
  411eb7:	adc    edi,DWORD PTR [ebp+0x7c]
  411eba:	loope  0x411e66
  411ebc:	test   DWORD PTR [ebx+eax*4+0xb],0x766c2b82
  411ec4:	dec    esi
  411ec5:	stos   DWORD PTR es:[edi],eax
  411ec6:	sbb    al,0x2b
  411ec8:	test   eax,0x55d85b27
  411ecd:	retf   
  411ece:	imul   esp,ecx,0x6f613611
  411ed4:	xor    eax,0xf31e96cf
  411ed9:	adc    eax,DWORD PTR [eax-0x3f]
  411edc:	pop    es
  411edd:	inc    esp
  411ede:	mov    ecx,0x2c11a1a4
  411ee3:	sbb    bl,cl
  411ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ee6:	or     al,BYTE PTR [edi-0x14]
  411ee9:	adc    al,ch
  411eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eec:	je     0x411e9d
  411eee:	mov    edx,0x4af37ff8
  411ef3:	imul   BYTE PTR [ebx]
  411ef5:	(bad)  
  411ef6:	jmp    0x411ec3
  411ef8:	adc    eax,0x25232d26
  411efd:	inc    edx
  411efe:	cli    
  411eff:	jno    0x411e90
  411f01:	adc    eax,0xc4d45d3c
  411f06:	mov    BYTE PTR [esi+0x14],0x12
  411f0a:	stos   DWORD PTR es:[edi],eax
  411f0b:	cld    
  411f0c:	les    ecx,FWORD PTR [ecx-0x57d52afb]
  411f12:	mov    dl,0xc1
  411f14:	push   cs
  411f15:	outs   dx,DWORD PTR ds:[esi]
  411f16:	shr    BYTE PTR [eax-0x36],0xd9
  411f1a:	xor    eax,0x452ad8e6
  411f20:	bound  eax,QWORD PTR [ecx+0x25]
  411f23:	jb     0x411f54
  411f25:	xchg   BYTE PTR [ebx],dh
  411f27:	into   
  411f28:	sti    
  411f29:	push   ebp
  411f2a:	data16 (bad) 
  411f2c:	inc    edx
  411f2d:	ret    0x4a95
  411f30:	ficom  DWORD PTR [edi]
  411f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f33:	call   0x431647c7
  411f38:	dec    esp
  411f39:	mov    ecx,0xa7ed8fc0
  411f3e:	fidiv  WORD PTR [edi-0x15ed90a1]
  411f44:	(bad)  
  411f45:	adc    eax,DWORD PTR [ecx+0x38]
  411f48:	icebp  
  411f49:	jmp    0xdd05c518
  411f4e:	cmp    al,0x6c
  411f50:	and    BYTE PTR [ebx],dh
  411f52:	mov    esp,0xca63f5b5
  411f57:	jmp    FWORD PTR [edi-0x55]
  411f5a:	retf   
  411f5b:	in     al,0x99
  411f5d:	mov    ah,0x4c
  411f5f:	sub    BYTE PTR ds:0x68461168,bh
  411f65:	add    al,0x78
  411f67:	push   0xfffffffa
  411f69:	(bad)  
  411f6a:	xchg   esi,eax
  411f6b:	mov    al,ds:0xcb234a60
  411f70:	test   DWORD PTR [ebx-0x2715c795],ebx
  411f76:	sub    DWORD PTR [ebx-0x5689d401],0xff5bb579
  411f80:	pushf  
  411f81:	clc    
  411f82:	and    ebp,esi
  411f84:	pause  
  411f86:	jno    0x40263c3b
  411f8c:	ins    BYTE PTR es:[edi],dx
  411f8d:	and    ebx,DWORD PTR [eax+edx*4]
  411f90:	sbb    ch,bh
  411f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f93:	leave  
  411f94:	jbe    0x411fce
  411f96:	shl    BYTE PTR [edi],1
  411f98:	pop    es
  411f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f9a:	sti    
  411f9b:	loopne 0x411fe1
  411f9d:	jmp    0x411ffd
  411f9f:	xchg   esi,edx
  411fa1:	adc    bh,BYTE PTR [ecx-0x3f7b62b1]
  411fa7:	mov    bh,0x42
  411fa9:	scas   eax,DWORD PTR es:[edi]
  411faa:	or     DWORD PTR [esi],edx
  411fac:	sti    
  411fad:	sbb    cl,BYTE PTR ss:[esi+0x1c273]
  411fb4:	out    dx,eax
  411fb5:	mov    edx,0x42758989
  411fba:	std    
  411fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fbc:	add    cl,bl
  411fbe:	adc    eax,0x63acc064
  411fc3:	test   al,0x68
  411fc5:	cmp    DWORD PTR [esi-0x157ef61f],esi
  411fcb:	inc    esi
  411fcc:	test   DWORD PTR [ecx-0x6c],0x2a5137ec
  411fd3:	inc    esp
  411fd4:	inc    edi
  411fd5:	rol    DWORD PTR [ebp-0x6f],cl
  411fd8:	mov    dh,0x1f
  411fda:	inc    ebp
  411fdb:	aam    0xf0
  411fdd:	ret    
  411fde:	add    BYTE PTR [edx+0x55],ah
  411fe1:	dec    ebp
  411fe2:	enter  0x6f11,0x63
  411fe6:	add    ebp,DWORD PTR [esi-0x4d7f3d2d]
  411fec:	outs   dx,DWORD PTR ds:[esi]
  411fed:	jge    0x411f7c
  411fef:	push   edx
  411ff0:	fdivr  st,st(1)
  411ff2:	(bad)  
  411ff3:	mov    eax,ds:0x67e05d5
  411ff8:	mov    ecx,0xb00498cf
  411ffe:	cdq    
  411fff:	mov    eax,0x85603a49
  412004:	jmp    0x8683245d
  412009:	jnp    0x411fcb
  41200b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41200c:	xlat   BYTE PTR ds:[ebx]
  41200d:	mov    ch,0x31
  41200f:	add    eax,0x96cda586
  412014:	pop    ecx
  412015:	jns    0x412002
  412017:	jmp    0xfbb67e85
  41201c:	jae    0x411fbc
  41201e:	sqrtps xmm2,XMMWORD PTR [ecx+edi*2-0x3f913cf9]
  412026:	fwait
  412027:	loop   0x412065
  412029:	dec    ebx
  41202a:	ss jmp 0x641a10ed
  412030:	push   ds
  412031:	xor    DWORD PTR [edi-0x20c98f51],edx
  412037:	mov    gs,WORD PTR [ebp+0x54]
  41203a:	loop   0x4120ba
  41203c:	sbb    dh,0x4a
  41203f:	shr    al,0x27
  412042:	push   0xffffffd1
  412044:	stos   DWORD PTR es:[edi],eax
  412045:	dec    esp
  412046:	ror    DWORD PTR [ebx],1
  412048:	xor    al,0x1
  41204a:	adc    eax,0x9bbe6012
  41204f:	jnp    0x412048
  412051:	inc    ecx
  412052:	(bad)  
  412053:	frstor [ebx+eiz*1+0x3639b3f4]
  41205a:	(bad)  
  41205c:	bound  edx,QWORD PTR [edx+ecx*8]
  41205f:	xlat   BYTE PTR ds:[ebx]
  412060:	mov    ds:0x3d604a7,eax
  412065:	inc    edi
  412066:	add    al,0xaa
  412068:	es out 0xb3,eax
  41206b:	adc    ebx,esi
  41206d:	cdq    
  41206e:	inc    edi
  41206f:	and    esp,ebx
  412071:	gs fwait
  412073:	push   ss
  412074:	out    0x6a,al
  412076:	mov    BYTE PTR ds:0xc981bc7d,al
  41207c:	outs   dx,DWORD PTR ds:[esi]
  41207d:	cmp    DWORD PTR [edi+0x10],ebp
  412080:	leave  
  412081:	in     eax,0xb3
  412083:	shl    BYTE PTR [ecx+edx*8+0x4f57b17f],1
  41208a:	xchg   esi,eax
  41208b:	adc    BYTE PTR [esi+0x34],bl
  41208e:	sbb    BYTE PTR [edi+0x59],al
  412091:	xchg   esp,eax
  412092:	test   BYTE PTR [ebp-0x241523b7],ch
  412098:	push   ss
  412099:	(bad)  
  41209a:	jl     0x412049
  41209c:	fist   WORD PTR [edx+edi*4+0x2f]
  4120a0:	out    0x74,al
  4120a2:	fwait
  4120a3:	mul    DWORD PTR [edi-0x515ad16]
  4120a9:	xchg   DWORD PTR [eax+edi*1+0x65],esi
  4120ad:	fild   QWORD PTR [ebx+0x7c]
  4120b0:	jb     0x412053
  4120b2:	and    DWORD PTR [esi-0xc9f6bdb],esi
  4120b8:	mov    ah,0xda
  4120ba:	xor    edi,DWORD PTR [ebp-0x65]
  4120bd:	and    al,0x86
  4120bf:	inc    ebx
  4120c0:	mov    dl,0xad
  4120c2:	rcr    bl,1
  4120c4:	push   cs
  4120c5:	sub    eax,0xa7394429
  4120ca:	call   0xd3808818
  4120cf:	xchg   esp,eax
  4120d0:	mov    DWORD PTR [eax-0x5d],eax
  4120d3:	sbb    ah,cl
  4120d5:	jne    0x4120a0
  4120d7:	leave  
  4120d8:	push   es
  4120d9:	xchg   esp,eax
  4120da:	lds    eax,FWORD PTR [edx+0x52]
  4120dd:	push   cs
  4120de:	test   bl,cl
  4120e0:	ja     0x41211d
  4120e2:	dec    ecx
  4120e3:	outs   dx,DWORD PTR ds:[esi]
  4120e4:	mov    al,ds:0x275f847b
  4120e9:	fnstsw WORD PTR [edi+0x70ea6d7e]
  4120ef:	ja     0x41214a
  4120f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120f2:	popa   
  4120f3:	test   dl,al
  4120f5:	xchg   al,ah
  4120f7:	push   ss
  4120f8:	and    DWORD PTR [ebp+0x71],esp
  4120fb:	ins    BYTE PTR es:[edi],dx
  4120fc:	(bad)
  4120ff:	mov    dl,0x9b
  412101:	(bad)  
  412102:	sbb    al,0x83
  412104:	and    BYTE PTR [eax+0x4fa6f58f],al
  41210a:	popa   
  41210b:	inc    edi
  41210c:	xor    BYTE PTR [edx],0xfb
  41210f:	mov    ebp,0x552856eb
  412114:	xchg   edx,eax
  412115:	mov    ds:0x1ca4f461,al
  41211a:	call   0xb8db:0xc75010c5
  412121:	test   eax,ebp
  412123:	aaa    
  412124:	and    eax,0x2f47b567
  412129:	dec    cl
  41212b:	pop    ds
  41212c:	out    dx,eax
  41212d:	mov    eax,0xbad6c271
  412132:	mov    eax,ds:0xc80bd191
  412137:	pop    ecx
  412138:	adc    DWORD PTR [edx-0x1572bafe],esp
  41213e:	xor    esi,DWORD PTR [esi]
  412140:	pop    ds
  412141:	lods   eax,DWORD PTR ds:[esi]
  412142:	mov    BYTE PTR [ecx-0x61],bl
  412145:	cmc    
  412146:	push   esp
  412147:	nop
  412148:	pop    ebx
  412149:	jb     0x4120e1
  41214b:	sub    ebp,DWORD PTR [edx]
  41214d:	(bad)  
  41214e:	jo     0x412103
  412150:	leave  
  412151:	mov    al,ds:0xcd080627
  412156:	cmp    eax,DWORD PTR [ebp-0x41]
  412159:	push   esp
  41215a:	shl    DWORD PTR [esi+eax*2-0x30e84f02],1
  412161:	pop    ebx
  412162:	call   0xb17:0x988fb235
  412169:	cmp    eax,0x41e02c24
  41216e:	inc    eax
  41216f:	imul   ebp,DWORD PTR [eax-0x22],0xffffffe7
  412173:	push   edx
  412174:	lea    ebp,[esi+0x14004913]
  41217a:	add    ecx,ebx
  41217c:	push   0xffffffa5
  41217e:	mov    esi,DWORD PTR [edi]
  412180:	fnsave [edi-0x740e2d2]
  412186:	jno    0x4121da
  412188:	push   eax
  412189:	pop    esp
  41218a:	sbb    ecx,DWORD PTR [ebx]
  41218c:	mov    ecx,0x932e1bcf
  412191:	out    dx,eax
  412192:	or     DWORD PTR [esi],edx
  412194:	lds    edx,FWORD PTR [ebp-0x6f]
  412197:	sbb    edx,DWORD PTR [ebp-0x12c80154]
  41219d:	and    edi,ebp
  41219f:	scas   eax,DWORD PTR es:[edi]
  4121a0:	push   ss
  4121a1:	jns    0x4121d2
  4121a3:	idiv   BYTE PTR [eax]
  4121a5:	(bad)  
  4121a6:	popw   es
  4121a8:	dec    ebx
  4121a9:	mov    esi,0xa56d422f
  4121ae:	pusha  
  4121af:	sbb    eax,0xdc241698
  4121b4:	out    0x79,eax
  4121b6:	sbb    al,BYTE PTR [eax+0x18]
  4121b9:	pop    edi
  4121ba:	sbb    bh,BYTE PTR [edi]
  4121bc:	cmp    al,0xe9
  4121be:	sub    edx,esp
  4121c0:	pop    edx
  4121c1:	imul   esp,esp,0x7
  4121c4:	lock sbb al,0xf7
  4121c7:	jle    0x41221f
  4121c9:	neg    BYTE PTR [ecx-0x55]
  4121cc:	pop    ds
  4121cd:	stos   BYTE PTR es:[edi],al
  4121ce:	dec    ebx
  4121cf:	mov    ebx,0xdacf3fee
  4121d4:	lds    eax,FWORD PTR [eax+edi*8+0x49]
  4121d8:	xchg   ecx,eax
  4121d9:	scas   al,BYTE PTR es:[edi]
  4121da:	mov    dh,0xa0
  4121dc:	xchg   ebp,eax
  4121dd:	mov    edx,0x6dc59a55
  4121e2:	xchg   esp,eax
  4121e3:	xor    eax,esi
  4121e5:	add    al,0x12
  4121e7:	push   ds
  4121e8:	xchg   ecx,eax
  4121e9:	push   ecx
  4121ea:	dec    ebp
  4121eb:	inc    ecx
  4121ec:	aam    0x80
  4121ee:	push   ebp
  4121ef:	ror    al,0xf7
  4121f2:	push   ecx
  4121f3:	add    edi,DWORD PTR [ecx+esi*1-0x4c]
  4121f7:	sbb    DWORD PTR [esi-0x67a51e2d],esi
  4121fd:	xchg   ecx,eax
  4121fe:	inc    ebx
  4121ff:	pop    edi
  412200:	ds adc eax,0xd04766f4
  412206:	hlt    
  412207:	das    
  412208:	jl     0x41221e
  41220a:	push   ebx
  41220b:	jbe    0x41220f
  41220d:	(bad)  
  41220e:	xchg   edx,eax
  41220f:	pop    ebx
  412210:	mov    al,ds:0xa96cd127
  412215:	pop    ds
  412216:	add    BYTE PTR [esi-0x789efaba],bh
  41221c:	dec    edx
  41221d:	inc    edi
  41221e:	repz loopne 0x412295
  412221:	xchg   ebp,eax
  412222:	mov    ah,cl
  412224:	addr16 sub dh,bh
  412227:	and    ebp,edx
  412229:	pop    esi
  41222a:	jg     0x41225f
  41222c:	pop    eax
  41222d:	sub    al,0x63
  41222f:	or     eax,0x5717ca8
  412234:	push   es
  412235:	push   esp
  412236:	and    BYTE PTR [ecx+eax*4],dh
  412239:	stos   DWORD PTR es:[edi],eax
  41223a:	add    BYTE PTR [edx+0x7610cbab],ch
  412240:	sub    al,0x36
  412242:	xor    eax,0x8b746f0e
  412247:	scas   al,BYTE PTR es:[edi]
  412248:	push   ss
  412249:	(bad)  
  41224a:	shl    bh,1
  41224c:	push   eax
  41224d:	les    ecx,FWORD PTR [ebx+0x9]
  412250:	in     eax,dx
  412251:	out    0x8c,eax
  412253:	rol    BYTE PTR [edx+eax*1+0x72],0xcf
  412258:	fwait
  412259:	add    edi,DWORD PTR [ecx-0x59990d6c]
  41225f:	cmp    BYTE PTR [edx],0xa9
  412262:	add    DWORD PTR [ecx+0x63],esi
  412265:	sbb    cl,BYTE PTR [esi-0x7f992290]
  41226b:	pop    esp
  41226c:	xor    esp,edx
  41226e:	add    ecx,esp
  412270:	punpckhwd mm3,QWORD PTR [edx+0x7b6a2741]
  412277:	arpl   WORD PTR [edi+0x5b],si
  41227a:	outs   dx,BYTE PTR ds:[esi]
  41227b:	and    BYTE PTR [ebp+0x4e],bl
  41227e:	and    eax,esi
  412280:	sub    al,0x41
  412282:	fld    DWORD PTR [eax+0x1c7e6a93]
  412288:	imul   ecx,DWORD PTR [eax],0x3
  41228b:	or     eax,0x3aad32b6
  412290:	jbe    0x412257
  412292:	xor    bl,BYTE PTR [eax]
  412294:	test   DWORD PTR [eax+edi*8],esi
  412297:	lock hlt 
  412299:	into   
  41229a:	inc    ecx
  41229b:	xchg   esp,eax
  41229c:	sub    edx,edi
  41229e:	out    dx,al
  41229f:	arpl   WORD PTR [ebx+0x797c9445],dx
  4122a5:	inc    ebx
  4122a6:	pop    ds
  4122a7:	lods   al,BYTE PTR ds:[esi]
  4122a8:	xor    BYTE PTR [edi],dl
  4122aa:	(bad)  
  4122ab:	pop    ecx
  4122ac:	mov    bl,0x63
  4122ae:	out    0xd3,al
  4122b0:	pop    ebp
  4122b1:	push   cs
  4122b2:	mov    dl,0x1c
  4122b4:	pop    ds
  4122b5:	pop    esp
  4122b6:	jle    0x41223a
  4122b8:	cld    
  4122b9:	sub    eax,0x90114415
  4122be:	inc    ebx
  4122bf:	cwde   
  4122c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122c1:	(bad)  
  4122c2:	lods   al,BYTE PTR ds:[esi]
  4122c3:	sbb    al,BYTE PTR [esi-0x66]
  4122c6:	fs push 0xd38b444c
  4122cc:	popa   
  4122cd:	push   eax
  4122ce:	or     al,0x7b
  4122d0:	dec    esi
  4122d1:	pop    ss
  4122d2:	push   edx
  4122d3:	aam    0xd8
  4122d5:	jmp    0x4b34:0xd13e6bf5
  4122dc:	fbld   TBYTE PTR [ebx+0x2f]
  4122df:	mov    ch,0xa0
  4122e1:	jae    0x6c565fec
  4122e7:	cli    
  4122e8:	pop    ebp
  4122e9:	xor    eax,0xd3fcc76e
  4122ee:	xchg   esi,eax
  4122ef:	jno    0x4122e2
  4122f1:	dec    ebx
  4122f2:	push   0x24
  4122f4:	sbb    DWORD PTR [ebx+0x15],ecx
  4122f7:	outs   dx,DWORD PTR ds:[esi]
  4122f8:	mov    ds:0x2fe30d51,al
  4122fd:	shl    BYTE PTR [esi+eax*8-0xb],0x65
  412302:	lahf   
  412303:	out    dx,al
  412304:	xor    BYTE PTR [esp+eax*4],0xd4
  412308:	mov    dl,0x67
  41230a:	fild   WORD PTR [edx+0x6d17512c]
  412310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412311:	in     eax,dx
  412312:	cmp    al,bh
  412314:	cli    
  412315:	out    dx,al
  412316:	adc    cl,BYTE PTR [ebp-0x2c]
  412319:	into   
  41231a:	pextrw eax,(bad),0xc5
  41231c:	inc    edi
  41231d:	jge    0x4122f2
  41231f:	into   
  412320:	pop    esp
  412321:	lahf   
  412322:	xchg   edi,eax
  412323:	inc    ebp
  412324:	push   ebx
  412325:	inc    ebx
  412326:	loope  0x412330
  412328:	imul   esi,DWORD PTR [ebx-0x6e],0xffffff97
  41232c:	mov    dl,0x67
  41232e:	push   eax
  41232f:	pop    esp
  412330:	out    0xb5,eax
  412332:	lods   al,BYTE PTR ds:[esi]
  412333:	pop    esi
  412334:	retf   0xeb2d
  412337:	adc    ebp,DWORD PTR [eax+0x24]
  41233a:	(bad)  [ecx+esi*4+0x5ff52b57]
  412341:	in     al,dx
  412342:	adc    BYTE PTR [edi*1+0x141238ae],dl
  412349:	pop    ebp
  41234a:	les    edx,FWORD PTR ss:[ecx+0x7f610b98]
  412351:	mov    ah,0x31
  412353:	outs   dx,DWORD PTR ds:[esi]
  412354:	push   ebx
  412355:	push   esp
  412356:	mov    eax,ds:0x19440fc2
  41235b:	pop    ss
  41235c:	es or  al,ch
  41235f:	loope  0x4123d0
  412361:	push   cs
  412362:	pop    edi
  412363:	pop    edx
  412364:	cmc    
  412365:	sub    eax,0x4e407ee1
  41236a:	repz dec eax
  41236c:	inc    ebx
  41236e:	mov    ds:0x105fdf2,al
  412373:	dec    edi
  412374:	mov    edx,DWORD PTR [ecx]
  412376:	adc    al,0x78
  412378:	push   ds
  412379:	repnz mov ecx,0xf2059712
  41237f:	dec    ebp
  412380:	push   ebx
  412381:	shl    BYTE PTR [eax-0x3dbbc163],0xfb
  412388:	cld    
  412389:	sub    esi,ebp
  41238b:	in     eax,0x7
  41238d:	push   edi
  41238e:	call   0x67bd8414
  412393:	xchg   edx,eax
  412394:	aam    0xe2
  412396:	shl    bl,cl
  412398:	push   ds
  412399:	into   
  41239a:	mov    edi,0x6b1b955e
  41239f:	fwait
  4123a0:	dec    edx
  4123a1:	jle    0x4123ac
  4123a3:	into   
  4123a4:	popa   
  4123a5:	gs pop ebp
  4123a7:	stos   BYTE PTR es:[edi],al
  4123a8:	outs   dx,DWORD PTR ds:[esi]
  4123aa:	jne    0x412387
  4123ac:	outs   dx,DWORD PTR ds:[esi]
  4123ad:	mov    bh,BYTE PTR [edx+0x5d]
  4123b0:	(bad)  
  4123b1:	adc    DWORD PTR [esp+eax*4],esp
  4123b4:	sub    eax,0xaf4e3c2a
  4123b9:	pop    ecx
  4123ba:	and    al,0x7e
  4123bc:	inc    esp
  4123bd:	and    eax,0x24598343
  4123c2:	sub    dh,bl
  4123c4:	das    
  4123c5:	das    
  4123c6:	js     0x4123c6
  4123c8:	daa    
  4123c9:	mov    ebx,0xec78a344
  4123ce:	call   FWORD PTR [edi+0x5e]
  4123d1:	pop    edx
  4123d2:	loope  0x412448
  4123d4:	jecxz  0x412445
  4123d6:	mov    edi,0xa97748e1
  4123db:	jp     0x412452
  4123dd:	enter  0xf851,0x6a
  4123e1:	ret    
  4123e2:	(bad)  
  4123e3:	stos   BYTE PTR es:[edi],al
  4123e4:	in     eax,dx
  4123e5:	dec    ebx
  4123e6:	rol    DWORD PTR [edx+ecx*1-0x63],0xd5
  4123eb:	mov    esp,0x5ad3879f
  4123f0:	enter  0xe519,0x3b
  4123f4:	xor    al,0x21
  4123f6:	mov    DWORD PTR [edi],ecx
  4123f8:	daa    
  4123f9:	sbb    BYTE PTR ds:0x90796eb3,0x8b
  412400:	push   0xffffffd7
  412402:	jbe    0x4123b1
  412404:	std    
  412405:	and    al,0x9d
  412407:	in     eax,dx
  412408:	mov    ebx,0x1193f3fc
  41240d:	jp     0x4123d5
  41240f:	mov    ds:0xd94674d7,eax
  412414:	mov    BYTE PTR [edx+0x55c65a4e],bh
  41241a:	mov    ah,0xe9
  41241c:	retf   0x7ae0
  41241f:	push   ebp
  412420:	cmp    DWORD PTR [ebx],edi
  412422:	imul   ecx,DWORD PTR [esi-0x5],0x1bdb77eb
  412429:	sbb    BYTE PTR ds:0x92e39a2f,ch
  41242f:	jmp    0x9960:0x707053c6
  412436:	push   ebp
  412437:	xchg   ebx,eax
  412438:	mov    ds:0xb6be5fb2,eax
  41243d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41243e:	xchg   ebx,eax
  41243f:	mov    eax,ds:0xa81e7e23
  412444:	cmp    al,0x10
  412446:	or     cl,BYTE PTR [edi+ecx*4-0x79]
  41244a:	xor    dl,dl
  41244c:	loopne 0x412464
  41244e:	push   ds
  41244f:	jmp    0x4380:0x44e699
  412456:	int3   
  412457:	pushf  
  412458:	push   ds
  412459:	jnp    0x41241b
  41245b:	xchg   ebx,eax
  41245c:	dec    ecx
  41245d:	mov    edi,0x22c069a2
  412462:	inc    ebp
  412463:	pop    ebp
  412464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412465:	aas    
  412466:	das    
  412467:	push   ebp
  412468:	sbb    bl,0xc0
  41246b:	cmp    edi,esp
  41246d:	xchg   edi,eax
  41246e:	aas    
  41246f:	repz (bad)
  412472:	outs   dx,BYTE PTR ds:[esi]
  412473:	cli    
  412474:	sbb    DWORD PTR [edi],ebx
  412476:	xor    BYTE PTR [eax+ebx*1+0x26],cl
  41247a:	xor    al,0xd1
  41247c:	add    al,0x90
  41247e:	mov    bl,0xe5
  412480:	pop    ds
  412481:	adc    DWORD PTR [edi],eax
  412483:	test   al,0xe
  412485:	push   eax
  412486:	jnp    0x41243e
  412488:	gs cmp eax,0x5c64820c
  41248e:	inc    esp
  41248f:	cmp    cl,0xc4
  412492:	mov    ds:0xd450cf78,eax
  412497:	cmp    al,0xc0
  412499:	out    0x12,eax
  41249b:	(bad)  
  41249c:	in     eax,dx
  41249d:	mov    DWORD PTR [eax-0x4fc6ff0d],esi
  4124a3:	jo     0x4124f3
  4124a5:	in     eax,0xff
  4124a7:	sbb    dl,BYTE PTR [eax+0x33f899cc]
  4124ad:	in     al,dx
  4124ae:	fiadd  WORD PTR [eax-0x1d6ea5d2]
  4124b4:	sub    eax,DWORD PTR [ecx+ebp*2-0x2c]
  4124b8:	mov    ch,0x14
  4124ba:	stos   DWORD PTR es:[edi],eax
  4124bb:	cmp    DWORD PTR [edi-0x33],esp
  4124be:	in     eax,0x3e
  4124c0:	jnp    0x4124f7
  4124c2:	mov    fs,WORD PTR [edi-0x10]
  4124c5:	out    0x38,al
  4124c7:	pcmpeqb mm4,mm1
  4124ca:	fwait
  4124cb:	call   0xb3b211ff
  4124d0:	pop    esp
  4124d1:	ror    BYTE PTR [eax+0x8],cl
  4124d4:	sbb    ch,al
  4124d6:	out    0x69,al
  4124d8:	jp     0x412481
  4124da:	pop    esp
  4124db:	test   eax,0xd1a748b
  4124e0:	mov    WORD PTR [ecx-0x7787670a],ss
  4124e6:	stos   BYTE PTR es:[edi],al
  4124e7:	je     0x4124c7
  4124e9:	jle    0x41255a
  4124eb:	dec    esi
  4124ec:	add    esp,eax
  4124ee:	jg     0x412509
  4124f0:	jbe    0x41252b
  4124f2:	push   cs
  4124f3:	inc    ecx
  4124f4:	retf   
  4124f5:	ret    
  4124f6:	and    cl,al
  4124f8:	jno    0x4124ae
  4124fa:	mov    ch,0xf4
  4124fc:	(bad)  
  4124fd:	mov    ebx,0xeb942d7f
  412502:	sbb    bl,BYTE PTR [ebx+0x1d]
  412505:	repz or eax,0x9935f683
  41250b:	or     BYTE PTR [esp+edi*4-0x10],ah
  41250f:	cmp    ecx,DWORD PTR [esi-0x28a5ae88]
  412515:	inc    edx
  412516:	(bad)  
  412519:	stos   DWORD PTR es:[edi],eax
  41251a:	out    dx,eax
  41251b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41251c:	dec    ebp
  41251d:	xchg   ebx,eax
  41251e:	dec    edi
  41251f:	sbb    edx,DWORD PTR [eax]
  412521:	jnp    0x41259a
  412523:	rcr    DWORD PTR [ebx+0x57973b5b],1
  412529:	jge    0x41255f
  41252b:	push   ss
  41252c:	cmp    BYTE PTR [esi],0x5f
  41252f:	not    BYTE PTR [ebx+0x10b3b9f3]
  412535:	in     al,dx
  412536:	cmp    eax,0x828c6524
  41253b:	out    dx,al
  41253c:	and    BYTE PTR [eax+0x47],ch
  41253f:	cld    
  412540:	adc    ecx,esi
  412542:	pop    ecx
  412543:	lds    edi,FWORD PTR [ecx-0x62]
  412546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412547:	out    0xc,al
  412549:	adc    eax,0x6bf215f5
  41254e:	dec    ebp
  41254f:	sub    ah,bl
  412551:	ret    0xaa6e
  412554:	mov    edi,0x9941865f
  412559:	sbb    edx,DWORD PTR [edi]
  41255b:	pusha  
  41255c:	nop
  41255d:	xor    ch,bl
  41255f:	cli    
  412560:	add    eax,0xf8a08d28
  412565:	pop    ds
  412566:	push   ecx
  412567:	test   BYTE PTR [edi-0x75],dh
  41256a:	cmp    ebx,ecx
  41256c:	lahf   
  41256d:	data16 out dx,al
  41256f:	cmp    eax,0x29573534
  412574:	pop    ebp
  412575:	dec    ebx
  412576:	mov    BYTE PTR [edi+0x7b],cl
  412579:	inc    DWORD PTR [eax]
  41257b:	add    BYTE PTR [eax],al
  41257d:	add    BYTE PTR [eax],al
  41257f:	add    BYTE PTR [eax],al
  412581:	add    BYTE PTR [edi+ecx*4+0x7ff767f6],bh
  412588:	mov    ebp,0x792d96df
  41258d:	mov    edx,0x65b0383c
  412592:	fwait
  412593:	sub    BYTE PTR [ecx],al
  412595:	add    BYTE PTR [eax],ah
  412597:	pop    es
  412598:	add    BYTE PTR [eax],al
  41259a:	inc    eax
  41259b:	pop    ebx
  41259c:	scas   eax,DWORD PTR es:[edi]
  41259d:	lock ret 0xc5bf
  4125a1:	les    esi,FWORD PTR [ebx+0x58152dbe]
  4125a7:	jae    0x412628
  4125a9:	sbb    DWORD PTR [edx],esi
  4125ab:	push   ebp
  4125ac:	(bad)  
  4125ad:	cmp    eax,0x19ceaa7
  4125b2:	cmc    
  4125b3:	jg     0x4125e5
  4125b5:	pop    eax
  4125b6:	add    edi,ebp
  4125b8:	(bad)  
  4125ba:	lock fadd DWORD PTR [ebx]
  4125bd:	xchg   bl,bl
  4125bf:	(bad)  
  4125c0:	(bad)  
  4125c1:	fnstcw WORD PTR es:[esi-0x4b]
  4125c5:	pop    eax
  4125c6:	and    BYTE PTR [edi],dl
  4125c8:	fcom   QWORD PTR [eax-0x19]
  4125cb:	js     0x4125ca
  4125cd:	repz inc ebx
  4125cf:	jl     0x412607
  4125d1:	fsub   DWORD PTR [esi-0x3dc8da2c]
  4125d7:	imul   eax,DWORD PTR [edi-0x1],0x24b6654d
  4125de:	push   ss
  4125df:	mov    ds:0x43430a0b,eax
  4125e4:	xchg   edi,eax
  4125e5:	mov    ch,0x42
  4125e7:	xchg   ebx,eax
  4125e8:	daa    
  4125e9:	repz cmp bh,BYTE PTR [ebx+0x18999cc3]
  4125f0:	daa    
  4125f1:	xchg   ebx,eax
  4125f2:	in     eax,dx
  4125f3:	rol    DWORD PTR [ecx+0x72f4913d],cl
  4125f9:	jb     0x412604
  4125fb:	sub    al,0x56
  4125fd:	pop    ebx
  4125fe:	pop    ecx
  4125ff:	or     DWORD PTR [ebx+0x4a],edx
  412602:	mov    bh,0xb6
  412604:	dec    edi
  412605:	jp     0x412681
  412607:	sbb    DWORD PTR [ebx+0x30a9bbf9],edx
  41260d:	nop
  41260e:	cmp    BYTE PTR [edx+0x21c0cd9b],bh
  412614:	ds int3 
  412616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412617:	cs inc edi
  412619:	lahf   
  41261a:	cs mov al,0x31
  41261d:	cmp    eax,0xb1db4f09
  412622:	ss in  al,0x3b
  412625:	cld    
  412626:	in     eax,dx
  412627:	push   edi
  412628:	mov    WORD PTR [edx],gs
  41262a:	cmp    dl,bh
  41262c:	or     al,0xaf
  41262e:	idiv   DWORD PTR [edx]
  412630:	dec    edi
  412631:	pop    ds
  412632:	cmp    eax,0x84809d24
  412637:	pop    edx
  412638:	and    DWORD PTR [ebx],ebp
  41263a:	dec    ebx
  41263b:	ds inc edx
  41263d:	add    BYTE PTR [ebx+0x2de4cdc9],bl
  412643:	dec    edi
  412644:	xchg   esp,eax
  412645:	lahf   
  412646:	pushf  
  412647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412648:	popa   
  412649:	popa   
  41264a:	xor    bl,0x7e
  41264d:	mov    eax,0x35e1605c
  412652:	jg     0x4126a9
  412654:	ja     0x412617
  412656:	stos   BYTE PTR es:[edi],al
  412657:	cmp    DWORD PTR [edx+ebp*8],eax
  41265a:	ja     0x412680
  41265c:	lds    edx,FWORD PTR [edi-0x19510bb2]
  412662:	les    ebx,FWORD PTR [ebx-0x5b08949e]
  412668:	retf   
  412669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41266a:	repnz mov ss,WORD PTR [ebx+0xf]
  41266e:	adc    al,0xf2
  412670:	push   esi
  412671:	xchg   esp,eax
  412672:	push   0xffffffbd
  412674:	cmp    BYTE PTR fs:[esi+0x39],cl
  412678:	out    0xa7,eax
  41267a:	pop    edi
  41267b:	mov    bl,0x96
  41267d:	cdq    
  41267e:	sbb    ebp,DWORD PTR [ecx+0x3d0252f0]
  412684:	icebp  
  412685:	in     eax,dx
  412686:	cmp    DWORD PTR [edi+edx*1],edi
  412689:	iret   
  41268a:	xor    DWORD PTR [edx-0x2b],ecx
  41268d:	popf   
  41268e:	out    dx,al
  41268f:	or     esp,DWORD PTR [edx]
  412691:	mov    ecx,0xe3e981fb
  412696:	sbb    al,0x88
  412698:	pushf  
  412699:	sub    eax,0xda9965f
  41269e:	fucomip st,st(2)
  4126a0:	dec    eax
  4126a1:	or     al,0xbc
  4126a3:	outs   dx,DWORD PTR ds:[esi]
  4126a4:	fsub   DWORD PTR ds:0x3b1ad1f1
  4126aa:	(bad)  
  4126ab:	jmp    0xfc3c:0x8b124bfc
  4126b2:	cmp    al,0x55
  4126b4:	ja     0x2c6f88ca
  4126ba:	hlt    
  4126bb:	in     eax,0x3e
  4126bd:	fiadd  DWORD PTR [eax+0x70]
  4126c0:	cmp    ebx,0xa8fd08f1
  4126c6:	fidiv  DWORD PTR [esp+ebp*1]
  4126c9:	(bad)  
  4126ca:	mov    bl,0xc1
  4126cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126cd:	xchg   ebp,eax
  4126ce:	ins    DWORD PTR es:[edi],dx
  4126cf:	add    edi,ebp
  4126d1:	std    
  4126d2:	cld    
  4126d3:	sub    dh,BYTE PTR [ebp-0x3ffbcd0f]
  4126d9:	in     al,dx
  4126da:	pop    esi
  4126db:	fidiv  DWORD PTR [edi-0x85d6b4]
  4126e1:	pushf  
  4126e2:	cmp    DWORD PTR [edx+esi*2-0x1081f5cf],esp
  4126e9:	adc    BYTE PTR [esi],0xb6
  4126ec:	add    DWORD PTR [edi],ecx
  4126ee:	sbb    bh,BYTE PTR [ebp+0x29fc7ba8]
  4126f4:	or     DWORD PTR [edx+0x44a59f14],ecx
  4126fa:	dec    eax
  4126fb:	mov    ebp,0x2ffa3bdb
  412700:	sar    BYTE PTR [ecx+0x402ce631],0x8c
  412707:	xor    eax,0xa55a36d1
  41270c:	rcr    BYTE PTR [edx],cl
  41270e:	cli    
  41270f:	pop    ss
  412710:	popa   
  412711:	cwde   
  412712:	xor    eax,ebp
  412714:	dec    ecx
  412715:	jp     0x4126c0
  412717:	popa   
  412718:	dec    eax
  412719:	hlt    
  41271a:	and    dl,BYTE PTR [ebx+0x5d]
  41271d:	clc    
  41271e:	inc    edx
  41271f:	cmp    cl,dh
  412721:	push   0xffffff8d
  412723:	ror    DWORD PTR [ebx-0xe],0xd4
  412727:	pushf  
  412728:	into   
  412729:	xchg   esi,eax
  41272a:	and    BYTE PTR [ebp-0x6d6e11ce],ah
  412730:	icebp  
  412731:	cmp    eax,0xd9d46ff6
  412736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412737:	retf   0xd7cc
  41273a:	lods   eax,DWORD PTR ds:[esi]
  41273b:	adc    al,0x14
  41273d:	test   eax,0x3ef1968e
  412742:	loope  0x4127c2
  412744:	scas   al,BYTE PTR es:[edi]
  412745:	mov    eax,edx
  412747:	pop    ebx
  412748:	xchg   edi,eax
  412749:	and    al,BYTE PTR [esi]
  41274b:	lods   al,BYTE PTR ds:[esi]
  41274c:	mov    ebp,0x3a0a3210
  412751:	lods   al,BYTE PTR ds:[esi]
  412752:	icebp  
  412753:	or     ebp,DWORD PTR [edi+edx*1]
  412756:	fwait
  412757:	pop    edi
  412758:	mov    cl,0x2f
  41275a:	jmp    0x41279f
  41275c:	fwait
  41275d:	repnz sub BYTE PTR cs:[ecx],dl
  412761:	aas    
  412762:	adc    al,BYTE PTR [edi+0x557bcaaf]
  412768:	or     DWORD PTR [eax+0x96d9f7b],edx
  41276e:	jp     0x412763
  412770:	jge    0x4127da
  412772:	xor    al,0x58
  412774:	push   esp
  412775:	pusha  
  412776:	mov    DWORD PTR [eax+ebp*2-0x7f],esi
  41277a:	push   ebp
  41277b:	adc    BYTE PTR [eax+0x45fd2af4],bh
  412781:	sbb    BYTE PTR [ecx-0x7b16cebe],ch
  412787:	sbb    BYTE PTR [esi+eiz*2],bl
  41278a:	cmp    DWORD PTR [eax+0x1a],ebx
  41278d:	retf   
  41278e:	lea    edi,[ebx]
  412790:	and    bh,BYTE PTR [ebx+0xa]
  412793:	adc    BYTE PTR [ebp-0xa20e7ee],dl
  412799:	mov    dh,0xf5
  41279b:	cwde   
  41279c:	sbb    bh,dh
  41279e:	lahf   
  41279f:	pop    ecx
  4127a0:	rcl    BYTE PTR ds:0x247883f1,cl
  4127a6:	jns    0x412818
  4127a8:	bound  ecx,QWORD PTR [edx+0x766d42e0]
  4127ae:	mov    dh,0xc3
  4127b0:	js     0x41277e
  4127b2:	mov    dl,BYTE PTR [esi]
  4127b4:	inc    edi
  4127b5:	jns    0x412820
  4127b7:	mov    eax,0xd43fae7d
  4127bc:	push   0xb1373910
  4127c1:	fidivr WORD PTR [edx]
  4127c3:	or     BYTE PTR [eax+0x71],bl
  4127c6:	sub    edx,esp
  4127c8:	sahf   
  4127c9:	lea    ebp,[esi+0x29]
  4127cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127cd:	ficomp WORD PTR [eax]
  4127cf:	push   ds
  4127d0:	(bad)  
  4127d1:	ins    BYTE PTR es:[edi],dx
  4127d2:	sti    
  4127d3:	dec    ecx
  4127d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d5:	jo     0x4127dc
  4127d7:	adc    al,0x35
  4127d9:	mov    es,WORD PTR [ebx]
  4127db:	in     al,dx
  4127dc:	ins    DWORD PTR es:[edi],dx
  4127dd:	lea    eax,[ebp-0x69]
  4127e0:	jns    0x41276c
  4127e2:	or     eax,0xb079d43d
  4127e7:	imul   ebx,DWORD PTR [ecx-0x512bdcc9],0xa53da175
  4127f1:	and    dl,0x21
  4127f4:	pushf  
  4127f5:	push   cs
  4127f6:	add    edi,edi
  4127f8:	imul   esi,DWORD PTR [eax-0x52d5b9c],0xfffffffd
  4127ff:	jae    0x4127e4
  412801:	inc    edi
  412802:	push   edx
  412803:	call   0x32f6df35
  412808:	es ja  0x41287c
  41280b:	inc    ebx
  41280c:	pop    ebp
  41280d:	inc    ebp
  41280e:	outs   dx,DWORD PTR ds:[esi]
  41280f:	test   al,0x48
  412811:	in     al,0x84
  412813:	mov    ch,0x1
  412815:	pop    es
  412816:	sbb    esi,DWORD PTR [edi-0x58153379]
  41281c:	mov    bl,0xf3
  41281e:	mov    ds:0x8d41295f,al
  412823:	mov    BYTE PTR [ebx-0x49],ah
  412826:	dec    edi
  412827:	or     BYTE PTR [ebx-0x40549df7],bh
  41282d:	test   dl,0x40
  412830:	mov    cl,0xbf
  412832:	sbb    dl,BYTE PTR [edx-0x2a]
  412835:	xchg   BYTE PTR [ecx-0x101029c8],al
  41283b:	pop    es
  41283c:	inc    edi
  41283d:	clc    
  41283e:	pop    edi
  41283f:	aaa    
  412840:	test   BYTE PTR [edi+edi*8-0x32],bl
  412844:	jne    0x412889
  412846:	xlat   BYTE PTR ds:[ebx]
  412847:	xor    DWORD PTR [eax+0x344372cd],0xd974ad86
  412851:	fsub   DWORD PTR [edi+0x7a]
  412854:	xchg   ebx,eax
  412855:	and    edi,DWORD PTR ds:0x196ecb7f
  41285b:	pop    ebx
  41285c:	mov    eax,?
  41285e:	mov    ds:0xd2410831,al
  412863:	adc    ebp,ebx
  412865:	lahf   
  412866:	outs   dx,BYTE PTR ds:[esi]
  412867:	sahf   
  412868:	aas    
  412869:	scas   eax,DWORD PTR es:[edi]
  41286a:	mov    cl,0xc
  41286c:	jmp    0x94cf:0x49e7bdf3
  412873:	in     al,dx
  412874:	jne    0x412845
  412876:	xchg   ecx,eax
  412877:	inc    edi
  412878:	shl    DWORD PTR [ecx+edx*1+0x32183fd],1
  41287f:	(bad)  
  412880:	call   0x4625f8ef
  412885:	xchg   edi,eax
  412886:	sbb    edi,ecx
  412888:	xchg   esi,eax
  412889:	popa   
  41288a:	retf   
  41288b:	daa    
  41288c:	xor    BYTE PTR [edi-0x460cd3af],cl
  412892:	cmc    
  412893:	fist   WORD PTR [esi-0x53ec94a5]
  412899:	jnp    0x41289b
  41289b:	les    edx,FWORD PTR [esi-0x21]
  41289e:	ja     0x4128b3
  4128a0:	sahf   
  4128a1:	jmp    0x4128fe
  4128a3:	mov    es,WORD PTR [esi-0x25]
  4128a6:	mov    WORD PTR [ecx-0x37],?
  4128a9:	mov    dl,0xca
  4128ab:	xchg   edx,eax
  4128ac:	push   ebp
  4128ad:	push   edi
  4128ae:	sbb    ebp,DWORD PTR [eax+0x5b]
  4128b1:	and    esi,DWORD PTR [edi+0x66437607]
  4128b7:	mov    eax,ds:0xd8757e03
  4128bc:	shr    DWORD PTR [edi-0x5a],1
  4128bf:	lods   al,BYTE PTR ds:[esi]
  4128c0:	(bad)  
  4128c1:	fnsave [edx+0x24]
  4128c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128c5:	and    DWORD PTR [ebx],ebx
  4128c7:	dec    edi
  4128c8:	into   
  4128c9:	sub    al,cl
  4128cb:	(bad)  
  4128cc:	sub    eax,0x15d50f89
  4128d1:	aas    
  4128d2:	les    ecx,FWORD PTR [ecx]
  4128d4:	adc    BYTE PTR [edx],dl
  4128d6:	mov    ebx,0x36f23483
  4128db:	lds    edx,FWORD PTR [ebp+edi*2-0x5d]
  4128df:	in     eax,0x8c
  4128e1:	jmp    0xc6eb:0x58d7b4f8
  4128e8:	fsubr  QWORD PTR [edi+0x2eef7794]
  4128ee:	fucomip st,st(2)
  4128f0:	mov    BYTE PTR [esi+0x30],dl
  4128f3:	push   esp
  4128f4:	jno    0x4128a6
  4128f6:	and    dl,al
  4128f8:	push   cs
  4128f9:	cli    
  4128fa:	fiadd  WORD PTR [ecx]
  4128fc:	mov    bl,0x7a
  4128fe:	pop    eax
  4128ff:	or     DWORD PTR [edi],edi
  412901:	and    DWORD PTR [ecx-0x1b8bf788],edi
  412907:	dec    edx
  412908:	sub    DWORD PTR [ebp+edi*2+0x530a27b],edx
  41290f:	jmp    0xdfe6:0x6ee849b4
  412916:	add    dh,ch
  412918:	sbb    ebx,DWORD PTR [eax+0x61]
  41291b:	mov    al,BYTE PTR [ebx+0x1a0821e1]
  412921:	cmp    edi,DWORD PTR [ebp+0xb]
  412924:	cmp    eax,0x6751c091
  412929:	popa   
  41292a:	ds int 0xf9
  41292d:	xchg   ebp,eax
  41292e:	adc    BYTE PTR [ebx+0x12],bh
  412931:	arpl   WORD PTR [ecx-0x64],sp
  412934:	es aaa 
  412936:	cdq    
  412937:	or     BYTE PTR [edx],0xa0
  41293a:	pushf  
  41293b:	add    DWORD PTR [ebx+0x62],esi
  41293e:	hlt    
  41293f:	sahf   
  412940:	popa   
  412941:	neg    DWORD PTR [ecx+0x7e8da690]
  412947:	dec    ebp
  412948:	adc    ah,dh
  41294a:	xor    DWORD PTR [ecx],0x592f5825
  412950:	lahf   
  412951:	jl     0x41294d
  412953:	dec    edi
  412954:	or     al,0x92
  412956:	mov    ebx,0xb23aaa94
  41295b:	aad    0x82
  41295d:	or     dh,0x62
  412960:	sub    DWORD PTR [edi],esi
  412962:	cwde   
  412963:	cs mov edx,0x73ac3b22
  412969:	leave  
  41296a:	or     eax,0x53d46d8d
  41296f:	mov    ebp,0xcf97cbe6
  412974:	cmc    
  412975:	lods   eax,DWORD PTR ds:[esi]
  412976:	inc    edi
  412977:	sub    eax,0x23605f4c
  41297c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41297d:	loope  0x41293a
  41297f:	add    DWORD PTR [edi-0x46],ebp
  412982:	daa    
  412983:	fwait
  412984:	mov    WORD PTR [edx+0x14902adb],ds
  41298a:	out    dx,al
  41298b:	shr    bh,0x75
  41298e:	mov    eax,0x8af6f145
  412993:	adc    al,0x1f
  412995:	xor    BYTE PTR [esi+0x51],cl
  412998:	adc    DWORD PTR [ebx+0x2b],ecx
  41299b:	and    eax,0x41e9161e
  4129a0:	(bad)  
  4129a1:	out    dx,eax
  4129a2:	sub    al,0x73
  4129a4:	call   0xc8d1:0xe8490df1
  4129ab:	jae    0x412a12
  4129ad:	xor    BYTE PTR [ebp-0x1038371b],dh
  4129b3:	out    dx,eax
  4129b4:	mov    ebx,0x751df415
  4129b9:	loope  0x4129a7
  4129bb:	rep stos BYTE PTR es:[edi],al
  4129bd:	clc    
  4129be:	stos   DWORD PTR es:[edi],eax
  4129bf:	inc    ebx
  4129c0:	les    eax,FWORD PTR [eax+0x67]
  4129c3:	inc    ebp
  4129c4:	cmp    cl,BYTE PTR [edi+ecx*4+0x361a3a4e]
  4129cb:	inc    ebp
  4129cc:	jb     0x4129f4
  4129ce:	ins    BYTE PTR es:[edi],dx
  4129cf:	xchg   esi,eax
  4129d0:	mov    ch,0xb9
  4129d2:	loop   0x412a11
  4129d4:	pop    ebp
  4129d5:	jo     0x412a53
  4129d7:	dec    esi
  4129d8:	test   eax,0x7278526c
  4129dd:	adc    DWORD PTR [eax+0x1cea3c3b],edx
  4129e3:	push   cs
  4129e4:	push   0x75117de0
  4129e9:	xchg   ebp,eax
  4129ea:	sub    ch,BYTE PTR [eax]
  4129ec:	jg     0x412a4b
  4129ee:	fistp  DWORD PTR [edi]
  4129f0:	dec    edx
  4129f1:	add    ecx,esi
  4129f3:	dec    ebp
  4129f4:	pop    eax
  4129f5:	lods   eax,DWORD PTR ds:[esi]
  4129f6:	mov    edx,0x46c62aa0
  4129fb:	xlat   BYTE PTR ds:[ebx]
  4129fc:	stos   DWORD PTR es:[edi],eax
  4129fd:	lds    esi,FWORD PTR [ebx]
  4129ff:	les    ecx,FWORD PTR [esi-0x4e]
  412a02:	cwde   
  412a03:	inc    eax
  412a04:	jmp    0x412a19
  412a06:	mov    ebx,0x2d551f58
  412a0b:	or     eax,0x1df1c295
  412a10:	(bad)  
  412a11:	call   FWORD PTR [edx+0x5860c807]
  412a17:	jecxz  0x412a1f
  412a19:	xor    bl,BYTE PTR [ecx]
  412a1b:	mov    ds:0x2623ccb8,al
  412a20:	and    edx,DWORD PTR [edi+0x227ff789]
  412a26:	xchg   DWORD PTR [esi+0x44],esp
  412a29:	psubb  mm7,mm2
  412a2c:	scas   eax,DWORD PTR es:[edi]
  412a2d:	pop    ecx
  412a2e:	xor    eax,0xadfb8a5d
  412a33:	shl    DWORD PTR [edi+0x3fc5e0c7],0x17
  412a3a:	cld    
  412a3b:	mov    al,0x9f
  412a3d:	xor    eax,0xdfdff2d
  412a42:	pop    ds
  412a43:	pop    ecx
  412a44:	jnp    0x412a23
  412a46:	mov    ds:0xd52093f,al
  412a4b:	outs   dx,BYTE PTR ds:[esi]
  412a4c:	cmp    DWORD PTR [edi-0x42],esp
  412a4f:	pop    eax
  412a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a51:	loop   0x412a8e
  412a53:	or     al,0x40
  412a55:	fwait
  412a56:	js     0x4129ec
  412a58:	inc    esp
  412a59:	sbb    eax,0x15d4cbf3
  412a5e:	fld    st(2)
  412a60:	jne    0x4129f9
  412a62:	test   BYTE PTR [ebx+0x19],ch
  412a65:	pusha  
  412a66:	imul   esi,DWORD PTR [edx],0xffffffe2
  412a69:	pop    ebx
  412a6a:	dec    ebx
  412a6b:	stc    
  412a6c:	jne    0x412a8f
  412a6e:	mov    dl,0xf4
  412a70:	ror    DWORD PTR [esi],0x95
  412a73:	cmp    BYTE PTR [ecx-0x16231153],dh
  412a79:	pop    esp
  412a7a:	repnz out 0x68,al
  412a7d:	loop   0x412ae2
  412a7f:	imul   sp,WORD PTR [ebx-0x4cb355b3],0x5c0b
  412a88:	and    al,0x1c
  412a8a:	push   ss
  412a8b:	popf   
  412a8c:	loope  0x412ae6
  412a8e:	addr16 aaa 
  412a90:	pop    ebp
  412a91:	mov    bl,0x0
  412a93:	cmc    
  412a94:	ss add eax,0xba01d67
  412a9a:	sub    dl,ah
  412a9c:	idiv   BYTE PTR [ebp-0x764168e4]
  412aa2:	outs   dx,BYTE PTR ds:[esi]
  412aa3:	push   ds
  412aa4:	fsubr  DWORD PTR [edx-0x24]
  412aa7:	sbb    ch,BYTE PTR [ebx+0x22c001b7]
  412aad:	outs   dx,BYTE PTR ds:[esi]
  412aae:	dec    ecx
  412aaf:	add    DWORD PTR [ebx+0x660c53a8],ebp
  412ab5:	push   ebx
  412ab6:	mov    esi,0x4d7fc7f9
  412abb:	jmp    0x412a57
  412abd:	mov    WORD PTR [eax-0x714ba4e7],ds
  412ac3:	or     cl,0x84
  412ac6:	cmc    
  412ac7:	out    0xc7,al
  412ac9:	cmc    
  412aca:	fdivr  QWORD PTR [esi]
  412acc:	xor    eax,0x397caeb9
  412ad1:	xchg   DWORD PTR [ebx-0xf],ebx
  412ad4:	popa   
  412ad5:	shl    BYTE PTR ds:0x49f5033c,0x4f
  412adc:	cmp    DWORD PTR [esi+0xc],0xa89136ac
  412ae3:	mov    eax,ds:0xcc8a111c
  412ae8:	jecxz  0x412b12
  412aea:	sub    DWORD PTR [esi+0x33c1a170],0x79
  412af1:	mov    esp,0x24a33f21
  412af6:	or     dh,0xa6
  412af9:	fs xor eax,0x2fe042e0
  412aff:	and    al,0x71
  412b01:	stos   DWORD PTR es:[edi],eax
  412b02:	fisttp WORD PTR [esp+eiz*2-0x7f44e228]
  412b09:	outs   dx,DWORD PTR ds:[esi]
  412b0a:	add    BYTE PTR [esi-0x1c],bh
  412b0d:	jge    0x412ae4
  412b0f:	ror    DWORD PTR [esp+edx*2],1
  412b12:	test   al,0xad
  412b14:	xor    al,0xe9
  412b16:	push   eax
  412b17:	popf   
  412b18:	retf   0xfc75
  412b1b:	pop    ss
  412b1c:	fmul   st,st(2)
  412b1e:	ret    0x260
  412b21:	xor    DWORD PTR [eax],ecx
  412b23:	pop    edx
  412b24:	stc    
  412b25:	push   ebp
  412b26:	loop   0x412abd
  412b28:	inc    esi
  412b29:	add    BYTE PTR [ebp-0x77],ah
  412b2c:	mov    BYTE PTR [edi+0x35c49498],dl
  412b32:	cld    
  412b33:	jo     0x412aef
  412b35:	in     eax,dx
  412b36:	and    ebx,ebx
  412b38:	fcomp  QWORD PTR [edx+0x6d]
  412b3b:	sahf   
  412b3c:	stos   DWORD PTR es:[edi],eax
  412b3d:	es call 0x9b51dfcf
  412b43:	adc    DWORD PTR [edx+0x6e77c6f],esi
  412b49:	cwde   
  412b4a:	pop    eax
  412b4b:	adc    eax,0xfc703bc9
  412b50:	lods   al,BYTE PTR ds:[esi]
  412b51:	push   ds
  412b52:	mov    al,ds:0xb5b04e92
  412b57:	loope  0x412b94
  412b59:	push   0xd9b9de22
  412b5e:	cmc    
  412b5f:	aaa    
  412b60:	jns    0x412b74
  412b62:	pop    ebp
  412b63:	mov    al,ds:0xde248fde
  412b68:	adc    BYTE PTR [ebp+edx*2-0x6f],dl
  412b6c:	shl    WORD PTR ds:0x8b3bce8f,1
  412b73:	js     0x412be5
  412b75:	cdq    
  412b76:	push   0x7731a95d
  412b7b:	ret    
  412b7c:	jbe    0x412b8d
  412b7e:	cwde   
  412b7f:	mov    WORD PTR [ebx-0x4481be4d],es
  412b85:	imul   esp,edx,0xffffffb9
  412b88:	xor    cl,bh
  412b8a:	shl    BYTE PTR [ebp+0x9],1
  412b8d:	(bad)  
  412b8f:	imul   BYTE PTR [ebp-0x5b34dc12]
  412b95:	scas   al,BYTE PTR es:[edi]
  412b96:	retf   0x1c0f
  412b99:	outs   dx,DWORD PTR ds:[esi]
  412b9a:	pushf  
  412b9b:	pop    edx
  412b9c:	mov    ecx,0x1a33e042
  412ba1:	and    eax,0x63edeb02
  412ba6:	ret    
  412ba7:	addr16 (bad) 
  412ba9:	xor    bl,BYTE PTR [edi-0x15b283bd]
  412baf:	repnz add BYTE PTR [edx+0x2d8bb1ab],bl
  412bb6:	std    
  412bb7:	mov    ebx,0xe60c4d67
  412bbc:	retf   
  412bbd:	dec    edi
  412bbe:	sbb    ecx,DWORD PTR [ebx+0x31456cbf]
  412bc4:	pop    ss
  412bc5:	out    0x24,al
  412bc7:	in     eax,dx
  412bc8:	(bad)  
  412bc9:	loopne 0x412be3
  412bcb:	push   ds
  412bcc:	pop    ebx
  412bcd:	in     eax,dx
  412bce:	xchg   ebx,eax
  412bcf:	xor    edx,DWORD PTR [ebp+0x79934a2d]
  412bd5:	and    eax,0xb286a78e
  412bda:	and    eax,0x28b6d69a
  412bdf:	pusha  
  412be0:	iret   
  412be1:	cdq    
  412be2:	lds    ebx,FWORD PTR [ecx+0x35d268e]
  412be8:	lock int 0x4a
  412beb:	retf   
  412bec:	mov    ah,0x8b
  412bee:	mov    edi,ecx
  412bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf1:	mov    ebp,ebx
  412bf3:	mov    WORD PTR [esi-0x29],es
  412bf6:	xor    BYTE PTR [ebx],al
  412bf8:	hlt    
  412bf9:	jecxz  0x412c01
  412bfb:	pop    esp
  412bfc:	mov    ecx,DWORD PTR [ecx]
  412bfe:	jg     0x412c1c
  412c00:	mul    BYTE PTR [edx]
  412c02:	mov    cl,0x8f
  412c04:	add    al,0x59
  412c06:	sub    eax,0x47d6b70
  412c0b:	rcl    DWORD PTR [eax],0x9e
  412c0e:	mov    dl,0x61
  412c10:	or     eax,0x46e35b41
  412c15:	jns    0x412b9c
  412c17:	or     al,0x2c
  412c19:	jno    0x412c19
  412c1b:	pop    ebx
  412c1c:	adc    eax,0x8a70e693
  412c21:	pop    ebx
  412c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c23:	shld   DWORD PTR [ebp-0x5660a9c3],esp,cl
  412c2a:	mov    ss,WORD PTR [edi-0x6]
  412c2d:	sub    bh,ch
  412c2f:	inc    esp
  412c30:	test   DWORD PTR [ebp+eax*4+0x20253063],edx
  412c37:	loope  0x412c4e
  412c39:	pop    edi
  412c3a:	cmp    bh,BYTE PTR [esi-0x7f9a22a9]
  412c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c41:	sub    ebp,DWORD PTR [edx-0x68]
  412c44:	test   DWORD PTR [edx-0x5f],eax
  412c47:	inc    ebp
  412c48:	hlt    
  412c49:	(bad)  
  412c4a:	mov    ch,0xe8
  412c4c:	mov    ah,BYTE PTR [eax+0x77]
  412c4f:	push   esi
  412c50:	jno    0x412c0d
  412c52:	xchg   ecx,eax
  412c53:	call   0x7ceeae8d
  412c58:	xor    BYTE PTR [eax-0x19],al
  412c5b:	(bad)  
  412c5c:	cmp    esp,DWORD PTR [eax+0x1f]
  412c5f:	test   eax,0x380185a6
  412c64:	cmp    ch,dl
  412c66:	daa    
  412c67:	mov    gs,WORD PTR [edx-0x5c]
  412c6a:	jmp    0xef4e4b01
  412c6f:	loop   0x412ccd
  412c71:	mov    ds:0x1873d7c4,al
  412c76:	add    BYTE PTR [esi+0x34],dl
  412c79:	leave  
  412c7a:	adc    esp,DWORD PTR [ebp+0x11]
  412c7d:	mov    eax,ds:0x7b812a4d
  412c82:	aas    
  412c83:	add    bh,ch
  412c85:	mov    dh,0xdd
  412c87:	xchg   esi,eax
  412c88:	add    BYTE PTR [eax+0x7f],0x34
  412c8c:	push   ebx
  412c8d:	repnz test eax,0xf77046c8
  412c93:	dec    ebp
  412c94:	xchg   ebp,eax
  412c95:	mov    edi,DWORD PTR ss:[ecx]
  412c98:	int    0x44
  412c9a:	in     al,dx
  412c9b:	sbb    DWORD PTR [edi-0x329dd750],ecx
  412ca1:	(bad)  
  412ca2:	lock jb 0x412c4a
  412ca5:	out    0x2f,eax
  412ca7:	frstor [ecx]
  412ca9:	scas   eax,DWORD PTR es:[edi]
  412caa:	push   edx
  412cab:	and    eax,0xdcaf4859
  412cb0:	mov    ebx,DWORD PTR [ecx-0x2f]
  412cb3:	sbb    DWORD PTR [esi+0x58],esi
  412cb6:	mov    eax,0xb7b72d
  412cbb:	add    BYTE PTR [eax],al
  412cbd:	add    BYTE PTR [eax],al
  412cbf:	add    BYTE PTR [eax],al
  412cc1:	add    BYTE PTR [edi-0x73],dl
  412cc4:	popa   
  412cc5:	jle    0x412cc2
  412cc7:	(bad)  
  412cc8:	pop    edi
  412cc9:	lods   eax,DWORD PTR ds:[esi]
  412cca:	into   
  412ccb:	fisttp DWORD PTR [edx+0x58]
  412cce:	fwait
  412ccf:	jp     0x412d41
  412cd1:	popa   
  412cd2:	mov    ebx,0x2000012f
  412cd7:	pop    es
  412cd8:	add    BYTE PTR [eax],al
  412cda:	add    eax,0xce469391
  412cdf:	sbb    DWORD PTR [eax+ebx*2-0x3451f3b8],ecx
  412ce6:	call   0x8ff4:0xbf558135
  412ced:	fbld   TBYTE PTR [edi+0x5b]
  412cf0:	jo     0x412d6b
  412cf2:	mov    esp,0x5f4437e2
  412cf7:	mov    bl,0xe9
  412cf9:	or     esi,esp
  412cfb:	in     al,0xe1
  412cfd:	push   edx
  412cfe:	cs push ds
  412d00:	pushf  
  412d01:	in     eax,dx
  412d02:	dec    eax
  412d03:	xchg   esp,eax
  412d04:	mov    ebx,cs
  412d06:	shl    BYTE PTR [esi+eiz*4],0xc0
  412d0a:	push   ds
  412d0b:	aam    0x69
  412d0d:	dec    edi
  412d0e:	cli    
  412d0f:	aas    
  412d10:	js     0x412d4f
  412d12:	push   es
  412d13:	inc    ebx
  412d14:	retf   0xcaa4
  412d17:	into   
  412d18:	cli    
  412d19:	in     al,dx
  412d1a:	push   ecx
  412d1b:	scas   eax,DWORD PTR es:[edi]
  412d1c:	loope  0x412d19
  412d1e:	xlat   BYTE PTR ds:[ebx]
  412d1f:	ret    
  412d20:	in     al,0xe3
  412d22:	mov    eax,ds:0x19d2709
  412d27:	add    eax,0xa0dd92b7
  412d2c:	ins    DWORD PTR es:[edi],dx
  412d2d:	jp     0x412cbe
  412d2f:	inc    esp
  412d30:	jge    0x412d6d
  412d32:	dec    esi
  412d33:	pusha  
  412d34:	jmp    0xb193:0x9f2de47
  412d3b:	jne    0x412d10
  412d3d:	and    eax,0xfb932cb4
  412d42:	pop    eax
  412d43:	add    bh,BYTE PTR [eax-0x51af2fd]
  412d49:	int3   
  412d4a:	stos   DWORD PTR es:[edi],eax
  412d4b:	dec    ebx
  412d4c:	test   dh,bl
  412d4e:	dec    esp
  412d4f:	int3   
  412d50:	shr    ecx,0xa9
  412d53:	push   0x4a
  412d55:	pushf  
  412d56:	mov    eax,DWORD PTR [edx]
  412d58:	pop    ecx
  412d59:	cmp    al,0xff
  412d5b:	sbb    DWORD PTR [ebx+ecx*2+0x54],edi
  412d5f:	pop    ebx
  412d60:	test   al,0xae
  412d62:	xor    eax,0x48b8353e
  412d67:	xor    BYTE PTR [edx],bl
  412d69:	sub    edx,edi
  412d6b:	imul   eax
  412d6d:	in     al,0xbd
  412d6f:	aaa    
  412d70:	sub    DWORD PTR [esi],ebp
  412d72:	add    al,BYTE PTR [ebx+0x59e15ccf]
  412d78:	adc    dh,BYTE PTR [ebx]
  412d7a:	mov    bl,0x24
  412d7c:	clc    
  412d7d:	push   0xffffffa3
  412d7f:	adc    BYTE PTR [esi-0x66d066df],0xd
  412d86:	inc    ebp
  412d87:	mov    ah,0xbd
  412d89:	inc    esi
  412d8a:	sub    eax,0xa40a63d4
  412d8f:	xchg   esp,eax
  412d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d91:	retf   0x9939
  412d94:	(bad)  
  412d95:	mov    ebx,0xd1b07677
  412d9a:	test   BYTE PTR [edx+0xb],0x3f
  412d9e:	or     al,0x60
  412da0:	ret    
  412da1:	jbe    0x412dc9
  412da3:	ins    BYTE PTR es:[edi],dx
  412da4:	rcr    BYTE PTR [ebx-0x59],0x25
  412da8:	xor    dh,BYTE PTR [ebp-0x11]
  412dab:	ins    DWORD PTR es:[edi],dx
  412dac:	out    0xef,eax
  412dae:	xor    ebp,DWORD PTR [edx-0x1e]
  412db1:	or     BYTE PTR [eax],al
  412db3:	lods   eax,DWORD PTR ds:[esi]
  412db4:	mov    ebx,0xfef5a838
  412db9:	and    al,0x3f
  412dbb:	fsubr  DWORD PTR [ecx+0x60]
  412dbe:	leave  
  412dbf:	dec    esp
  412dc0:	jns    0x412da9
  412dc2:	jae    0x412e32
  412dc4:	mov    dh,0x2f
  412dc6:	xchg   esp,eax
  412dc7:	jl     0x412d6b
  412dc9:	pop    edx
  412dca:	sbb    edx,DWORD PTR [ebp+0x6b]
  412dcd:	mov    cl,0xc7
  412dcf:	cmp    DWORD PTR [ebp+edx*1-0x5a008f51],eax
  412dd6:	ret    0x1226
  412dd9:	retf   0x8a8b
  412ddc:	add    DWORD PTR [edi],edx
  412dde:	in     al,dx
  412ddf:	jae    0x412d9c
  412de1:	pop    ebx
  412de2:	mov    ebp,0xc5fb599e
  412de7:	rcl    DWORD PTR [ebx+esi*4],cl
  412dea:	(bad)  
  412deb:	fs aaa 
  412ded:	push   ds
  412dee:	(bad)  
  412df0:	dec    ebx
  412df1:	lahf   
  412df2:	int3   
  412df3:	jb     0x412e20
  412df5:	xchg   esp,eax
  412df6:	outs   dx,BYTE PTR ds:[esi]
  412df7:	std    
  412df8:	shr    BYTE PTR [ebx+0x1c533f75],cl
  412dfe:	loopne 0x412e4d
  412e00:	and    ecx,DWORD PTR [ebx-0x59]
  412e03:	push   cs
  412e04:	mov    ds:0x5f645df1,eax
  412e09:	sbb    eax,0x4c3c11c1
  412e0e:	into   
  412e0f:	fild   QWORD PTR [esi+0x70585e99]
  412e15:	adc    ebx,DWORD PTR [edx-0x3e7f2703]
  412e1b:	xor    eax,0xae427929
  412e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e21:	and    BYTE PTR [ecx+ebx*4-0x49c626db],cl
  412e28:	jecxz  0x412ddc
  412e2a:	das    
  412e2b:	ds out 0x91,al
  412e2e:	jb     0x412de5
  412e30:	rol    BYTE PTR [eax-0x64],0x24
  412e34:	sub    al,0x33
  412e36:	sar    eax,cl
  412e38:	and    DWORD PTR [ebp-0x72bcf9],esi
  412e3e:	idiv   DWORD PTR [ebx+0x3a]
  412e41:	push   0x14
  412e43:	call   0x7c56cc5b
  412e48:	hlt    
  412e49:	mov    eax,DWORD PTR ds:0xb1ad10b8
  412e4f:	bound  ecx,QWORD PTR ds:0x5108
  412e54:	xor    al,0x35
  412e56:	or     BYTE PTR [edx+edi*4+0x72e0f212],0xad
  412e5e:	aaa    
  412e5f:	or     al,0xb3
  412e61:	cs push ecx
  412e63:	push   cs
  412e64:	pop    ss
  412e65:	jmp    0x412e0c
  412e67:	fmul   QWORD PTR [ecx]
  412e69:	scas   al,BYTE PTR es:[edi]
  412e6a:	xor    dl,BYTE PTR [eax-0xadb03d0]
  412e70:	jecxz  0x412ec0
  412e72:	stos   DWORD PTR es:[edi],eax
  412e73:	mov    ebx,0x259b7c62
  412e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e7a:	adc    dh,cl
  412e7c:	pop    ds
  412e7d:	sub    DWORD PTR [ebp-0x3b4f784],edx
  412e83:	into   
  412e84:	jb     0x412e27
  412e86:	mov    esp,0x55a309e8
  412e8b:	jns    0x412e61
  412e8d:	data16 xchg ah,bh
  412e90:	sar    ebp,0x23
  412e93:	retf   
  412e94:	lds    eax,FWORD PTR [edx]
  412e96:	jl     0x412ef2
  412e98:	das    
  412e99:	push   0x9e4e5ace
  412e9e:	(bad)  
  412e9f:	aaa    
  412ea0:	in     eax,dx
  412ea1:	jb     0x412f14
  412ea3:	cdq    
  412ea4:	push   ds
  412ea5:	aas    
  412ea6:	add    DWORD PTR [ecx],esi
  412ea8:	adc    BYTE PTR [edi-0x3c50ff9c],cl
  412eae:	inc    DWORD PTR [edi-0x2ebd936b]
  412eb4:	jo     0x412f1a
  412eb6:	je     0x412e69
  412eb8:	xchg   ebp,eax
  412eb9:	cdq    
  412eba:	inc    ebx
  412ebb:	stos   DWORD PTR es:[edi],eax
  412ebc:	test   esi,esp
  412ebe:	addr16 int 0x1b
  412ec1:	adc    DWORD PTR [eax-0x3955510d],esp
  412ec7:	dec    esp
  412ec8:	xchg   ecx,eax
  412ec9:	stos   BYTE PTR es:[edi],al
  412eca:	mov    cl,0x44
  412ecc:	ja     0x412e56
  412ece:	popf   
  412ecf:	scas   eax,DWORD PTR es:[edi]
  412ed0:	pop    ebx
  412ed1:	ins    DWORD PTR es:[edi],dx
  412ed2:	mov    dh,0xfb
  412ed4:	std    
  412ed5:	dec    ebx
  412ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ed7:	sahf   
  412ed8:	jmp    0xe0ea0b6c
  412edd:	jbe    0x412f50
  412edf:	sbb    al,0x1c
  412ee1:	push   esp
  412ee2:	imul   ebp,DWORD PTR [esi],0xb12dc9b9
  412ee8:	or     DWORD PTR [ebp+ebx*8+0x5c],ebx
  412eec:	inc    edx
  412eed:	jo     0x412f61
  412eef:	xor    ebp,DWORD PTR [ebx+0x7f]
  412ef2:	pop    ss
  412ef3:	shr    DWORD PTR [eax+0x72d0a57c],0x57
  412efa:	(bad)  
  412efb:	mov    eax,0x1a9687b3
  412f00:	push   cs
  412f01:	inc    esi
  412f02:	mov    edx,0xdaaa7d7
  412f07:	sbb    al,0xcd
  412f09:	sahf   
  412f0a:	pusha  
  412f0b:	jge    0x412e99
  412f0d:	xchg   ecx,eax
  412f0e:	mov    DWORD PTR [eax],eax
  412f10:	dec    edx
  412f11:	jg     0x412ea0
  412f13:	mov    ecx,0xa7f4262a
  412f18:	test   eax,0xb960f9d7
  412f1d:	std    
  412f1e:	outs   dx,BYTE PTR ds:[esi]
  412f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f20:	xlat   BYTE PTR ds:[ebx]
  412f21:	mov    bh,0x6c
  412f23:	je     0x412f96
  412f25:	shr    DWORD PTR ds:[esi+0x14],1
  412f29:	ja     0x412f68
  412f2b:	or     BYTE PTR [edi],ch
  412f2d:	inc    edx
  412f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f2f:	in     eax,dx
  412f30:	xchg   edi,eax
  412f31:	dec    ebp
  412f32:	aam    0xb6
  412f34:	jnp    0x412fb4
  412f36:	mov    esi,esi
  412f38:	pushf  
  412f39:	sub    dh,BYTE PTR [edx+0x54d9c9e]
  412f3f:	and    bl,BYTE PTR [edi]
  412f41:	stos   BYTE PTR es:[edi],al
  412f42:	(bad)  
  412f43:	mov    ah,0x39
  412f45:	ds inc esp
  412f47:	cmp    BYTE PTR [eax+0xc],bh
  412f4a:	jmp    0x4fb9:0xe03aa11
  412f51:	and    cl,BYTE PTR [esi-0x232d3908]
  412f57:	adc    DWORD PTR [ebx-0x22],ebx
  412f5a:	sti    
  412f5b:	and    edi,ebx
  412f5d:	xor    eax,0x5db21b19
  412f62:	pop    eax
  412f63:	shr    cl,cl
  412f65:	out    dx,eax
  412f66:	dec    ebp
  412f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f68:	sbb    esp,DWORD PTR [ebx+0x66436f9e]
  412f6e:	inc    edx
  412f6f:	hlt    
  412f70:	inc    eax
  412f71:	mov    fs,WORD PTR [esi-0x76]
  412f74:	fnstsw WORD PTR ds:0x40181164
  412f7a:	dec    esi
  412f7b:	push   eax
  412f7c:	sub    dl,BYTE PTR [esi+ebx*2]
  412f7f:	push   ss
  412f80:	push   ebp
  412f81:	(bad)  
  412f82:	(bad)  
  412f83:	js     0x412f64
  412f85:	push   ecx
  412f86:	or     DWORD PTR [ebx-0x748aebd9],esp
  412f8c:	xchg   edi,eax
  412f8d:	jmp    0x412f15
  412f8f:	imul   ebx,DWORD PTR [eax],0xa98b55
  412f95:	out    dx,eax
  412f96:	adc    ebp,DWORD PTR [edx-0x61]
  412f99:	test   DWORD PTR [edi+0x51],eax
  412f9c:	popa   
  412f9d:	popa   
  412f9e:	dec    ecx
  412f9f:	or     ah,BYTE PTR [edx]
  412fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fa2:	(bad)  
  412fa4:	sub    BYTE PTR es:[esi+0x6823283d],0x8c
  412fac:	(bad)  
  412fad:	(bad)  
  412fae:	jbe    0x412ffa
  412fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fb1:	mov    ecx,DWORD PTR [eax]
  412fb3:	fcomp  QWORD PTR [edx+0x40]
  412fb6:	not    BYTE PTR [ecx+0x84dff3a]
  412fbc:	add    DWORD PTR [ebp+0x69],edi
  412fbf:	jno    0x412f48
  412fc1:	mov    bh,0xb9
  412fc3:	or     esi,esp
  412fc5:	(bad)  
  412fc6:	idiv   ch
  412fc8:	or     ebp,eax
  412fca:	sub    al,0x82
  412fcc:	(bad)  
  412fcd:	jg     0x412fb8
  412fcf:	and    al,0x48
  412fd1:	xor    DWORD PTR [edx+0x4616bf9f],ecx
  412fd7:	cs adc eax,0x991ede90
  412fdd:	and    esi,DWORD PTR [ebx]
  412fdf:	xor    ecx,DWORD PTR [eax-0x376ad74a]
  412fe5:	fdivrp st(6),st
  412fe7:	dec    esp
  412fe8:	fsub   DWORD PTR [edi-0x41]
  412feb:	(bad)  ds:0x7618bef6
  412ff1:	mov    ebx,0x81851964
  412ff6:	add    ebp,esp
  412ff8:	js     0x412fda
  412ffa:	jb     0x412fd8
  412ffc:	std    
  412ffd:	dec    edi
  412ffe:	int    0x43
  413000:	into   
  413001:	inc    eax
  413002:	mov    ch,0xb5
  413004:	xchg   esi,eax
  413005:	pop    ds
  413006:	cmp    dl,bl
  413008:	pop    ss
  413009:	stc    
  41300a:	xchg   ebp,eax
  41300b:	push   ebp
  41300c:	mov    eax,ds:0xa9f5709f
  413011:	fst    DWORD PTR [esi]
  413013:	lods   al,BYTE PTR ds:[esi]
  413014:	sti    
  413015:	mov    bl,BYTE PTR [ecx+edx*4+0x76adb05c]
  41301c:	popa   
  41301d:	lods   eax,DWORD PTR ds:[esi]
  41301e:	xchg   ebp,eax
  41301f:	xchg   edi,eax
  413020:	jo     0x412fc0
  413022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413023:	mov    DWORD PTR ds:0xa8eac675,edx
  413029:	js     0x412fac
  41302b:	sahf   
  41302c:	das    
  41302d:	jge    0x413071
  41302f:	retf   
  413030:	dec    ebx
  413031:	push   eax
  413032:	mov    WORD PTR [ebp-0x26d6e69c],gs
  413038:	pop    ebp
  413039:	adc    al,0x6
  41303b:	xchg   ebp,eax
  41303c:	and    esi,edi
  41303e:	lods   eax,DWORD PTR ds:[esi]
  41303f:	pop    ecx
  413040:	xor    bh,ch
  413042:	xchg   edx,eax
  413043:	or     ebx,edi
  413045:	clc    
  413046:	push   es
  413047:	shl    DWORD PTR [eax],0xc0
  41304a:	mov    bh,0xbb
  41304c:	and    bl,al
  41304e:	mov    bl,0x43
  413050:	fmul   DWORD PTR [ebp+eax*2-0x7c]
  413054:	adc    esp,esi
  413056:	pop    esp
  413057:	shl    BYTE PTR [ebx-0x29eb2e67],cl
  41305d:	in     eax,0x53
  41305f:	xchg   esp,eax
  413060:	dec    edi
  413061:	out    dx,eax
  413062:	xchg   ebp,eax
  413063:	call   0x5171:0x8400aaf
  41306a:	or     cl,BYTE PTR [ebx-0x73516e2d]
  413070:	cmp    eax,0x5d1314a7
  413075:	jne    0x413046
  413077:	stos   BYTE PTR es:[edi],al
  413078:	loop   0x4130ce
  41307a:	pop    ss
  41307b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41307c:	cli    
  41307d:	adc    ch,dl
  41307f:	xchg   esi,eax
  413080:	data16 (bad) 
  413082:	push   esp
  413083:	cmp    eax,DWORD PTR [edi-0x27]
  413086:	(bad)  
  413087:	xchg   esp,eax
  413088:	pop    ecx
  413089:	pop    edx
  41308a:	xlat   BYTE PTR ds:[ebx]
  41308b:	out    dx,al
  41308c:	aam    0x8c
  41308e:	dec    ebp
  41308f:	mov    ebp,0x19459b96
  413094:	mov    cl,0x8e
  413096:	dec    edi
  413097:	add    DWORD PTR [edx+0x2b],esp
  41309a:	rcl    BYTE PTR [esi],cl
  41309c:	and    eax,0x8a00fb39
  4130a1:	xlat   BYTE PTR ds:[ebx]
  4130a2:	lods   eax,DWORD PTR ds:[esi]
  4130a3:	bound  ebp,QWORD PTR [ebx+0x54a78267]
  4130a9:	cmp    eax,0xe1e0a766
  4130ae:	jnp    0x413125
  4130b0:	jns    0x413091
  4130b2:	lods   eax,DWORD PTR cs:[esi]
  4130b4:	jbe    0x41312d
  4130b6:	cwde   
  4130b7:	fwait
  4130b8:	xchg   di,ax
  4130ba:	ja     0x413097
  4130bc:	ds stos BYTE PTR es:[edi],al
  4130be:	mov    ?,WORD PTR [eax]
  4130c0:	or     cl,BYTE PTR [edx+ecx*1]
  4130c3:	pop    esi
  4130c4:	(bad)  
  4130c5:	fwait
  4130c6:	rcr    edx,cl
  4130c8:	clc    
  4130c9:	cmp    al,0xb5
  4130cb:	gs inc edi
  4130cd:	xchg   esi,eax
  4130ce:	inc    eax
  4130cf:	int    0xc4
  4130d1:	cmp    edi,DWORD PTR [ebx]
  4130d3:	sbb    ch,BYTE PTR [eax-0x8911fbe]
  4130d9:	mov    al,0x4d
  4130db:	push   esp
  4130dc:	fwait
  4130dd:	into   
  4130de:	dec    ebx
  4130df:	out    0x78,al
  4130e1:	mov    esi,0x7152bad6
  4130e6:	jg     0x4130a7
  4130e8:	push   eax
  4130e9:	test   dl,ch
  4130eb:	sti    
  4130ec:	pop    ds
  4130ed:	xchg   BYTE PTR [edx+0x1e],bh
  4130f0:	jb     0x4130af
  4130f2:	mov    dh,0xb1
  4130f4:	cwde   
  4130f5:	sbb    eax,0x3cb77625
  4130fa:	inc    eax
  4130fb:	imul   ecx,DWORD PTR [edx+0x4c],0x59
  4130ff:	cmp    DWORD PTR ds:0x810ced5b,ecx
  413105:	sbb    DWORD PTR [edx+0x5c],esi
  413108:	mov    esp,0xb8a9ca77
  41310d:	and    al,0xf8
  41310f:	mov    gs,edx
  413111:	ds repz lock pop edi
  413115:	pop    esp
  413116:	int    0xe
  413118:	(bad)  
  413119:	scas   eax,DWORD PTR es:[edi]
  41311a:	fsubrp st(3),st
  41311c:	pop    ds
  41311d:	rol    BYTE PTR [esi-0x74ef7d24],1
  413123:	add    al,0x56
  413125:	fwait
  413126:	sub    ch,BYTE PTR [ebx+esi*1+0x35]
  41312a:	and    esp,eax
  41312c:	push   0xe41f61e0
  413131:	dec    esi
  413132:	add    eax,0x9de5abd0
  413137:	in     al,dx
  413138:	stos   BYTE PTR es:[edi],al
  413139:	data16 das 
  41313b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41313c:	bound  edi,QWORD PTR [edx]
  41313e:	dec    edx
  41313f:	xchg   BYTE PTR [ebp+0x72],ch
  413142:	loop   0x4131bd
  413144:	fld    QWORD PTR [eax]
  413146:	push   edx
  413147:	scas   eax,DWORD PTR es:[edi]
  413148:	jp     0x41310e
  41314a:	push   eax
  41314b:	cli    
  41314c:	pop    ebx
  41314d:	jmp    0x4e00ac0b
  413152:	sub    eax,0xd9eddffc
  413157:	lods   al,BYTE PTR es:[esi]
  413159:	repz inc ebx
  41315b:	int3   
  41315c:	loope  0x41316c
  41315e:	test   eax,0xf1cd21ef
  413163:	cmp    BYTE PTR [edi],0xa4
  413166:	or     eax,0xebd54d21
  41316b:	mov    al,ds:0xb3045b04
  413170:	outs   dx,DWORD PTR ds:[esi]
  413171:	sar    DWORD PTR [ebp+0x13],1
  413174:	pop    ecx
  413175:	or     al,0xd6
  413177:	imul   BYTE PTR [edx]
  413179:	dec    ecx
  41317a:	sbb    eax,0xe3a2edad
  41317f:	inc    ecx
  413180:	pop    edx
  413181:	out    0x23,al
  413183:	or     al,0xb8
  413185:	arpl   WORD PTR [ebx-0x5b],dx
  413188:	out    0x17,al
  41318a:	add    DWORD PTR [ebp+0x7],edx
  41318d:	inc    esi
  41318e:	data16 mov dl,0x18
  413191:	out    0xd7,eax
  413193:	ret    
  413194:	xor    DWORD PTR [esi-0x1d],edx
  413197:	fwait
  413198:	dec    edx
  413199:	jl     0x413216
  41319b:	dec    eax
  41319c:	sbb    ebx,DWORD PTR [ecx-0x368e6e87]
  4131a2:	ins    DWORD PTR es:[edi],dx
  4131a3:	sbb    al,BYTE PTR ds:0x4ba14547
  4131a9:	popf   
  4131aa:	jmp    0x41315f
  4131ac:	sub    DWORD PTR [edi-0x54],eax
  4131af:	std    
  4131b0:	sbb    DWORD PTR [edx-0x34a4c3df],ebx
  4131b6:	test   eax,0x3f47decc
  4131bb:	nop
  4131bc:	shr    DWORD PTR [ecx-0x26ca1856],1
  4131c2:	and    BYTE PTR [esi+0x62],0xc1
  4131c6:	sbb    eax,0xade74950
  4131cb:	je     0x4131ba
  4131cd:	jl     0x41315a
  4131cf:	jae    0x4131d0
  4131d1:	add    eax,0x68f0b67b
  4131d6:	(bad)
  4131da:	jmp    FWORD PTR [edi]
  4131dc:	xor    al,0x1a
  4131de:	cmc    
  4131df:	jns    0x4131ce
  4131e1:	mov    edx,0xf213d14e
  4131e6:	xor    BYTE PTR [eax-0x23bf3d42],ah
  4131ec:	rep ins DWORD PTR es:[edi],dx
  4131ee:	out    dx,al
  4131ef:	jmp    0xd009a32b
  4131f4:	push   ds
  4131f5:	ja     0x41319d
  4131f7:	mov    eax,ds:0x1d6894a9
  4131fc:	sub    eax,0xda69ff7c
  413201:	pop    eax
  413202:	jb     0x413253
  413204:	cld    
  413205:	xchg   DWORD PTR [ecx],esi
  413207:	hlt    
  413208:	xchg   ecx,eax
  413209:	fisub  WORD PTR [edi]
  41320b:	adc    al,0x47
  41320d:	jbe    0x413271
  41320f:	jnp    0x41323a
  413211:	inc    edi
  413212:	or     esi,esp
  413214:	ja     0x413256
  413216:	out    0x32,al
  413218:	popf   
  413219:	mov    ch,BYTE PTR [ecx+eax*4-0x7c]
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	fisubr DWORD PTR [edx-0x602e5251]
  413224:	add    al,0xf8
  413226:	xchg   ah,dh
  413228:	jmp    0x45c9de98
  41322d:	push   esp
  41322e:	dec    esp
  41322f:	dec    DWORD PTR [edi+0x5e]
  413232:	rcr    ebx,cl
  413234:	(bad)  
  413235:	leave  
  413236:	push   0x4fb39676
  41323b:	push   0xfffffff7
  41323d:	aas    
  41323e:	ins    BYTE PTR es:[edi],dx
  41323f:	lds    ecx,FWORD PTR [ebx]
  413241:	mul    BYTE PTR [edi-0x16]
  413244:	dec    ebx
  413245:	jmp    0x4131f4
  413247:	test   eax,0x799d933
  41324c:	sub    eax,DWORD PTR [esi-0x5]
  41324f:	ja     0x4131e6
  413251:	cmp    eax,0xc28a23f5
  413256:	jl     0x413287
  413258:	iret   
  413259:	stos   DWORD PTR es:[edi],eax
  41325a:	stos   BYTE PTR es:[edi],al
  41325b:	pushf  
  41325c:	lahf   
  41325d:	retf   0x3080
  413260:	xchg   BYTE PTR [ecx],dh
  413262:	mov    eax,0xb175c1b
  413267:	xor    BYTE PTR [esi],cl
  413269:	cwde   
  41326a:	mov    dh,0x22
  41326c:	mov    es,WORD PTR ds:[edx+0x1d9f560a]
  413273:	pop    es
  413274:	cmp    DWORD PTR [edx],ebp
  413276:	and    eax,esi
  413278:	js     0x4131fb
  41327a:	mov    eax,esp
  41327c:	aad    0x85
  41327e:	and    eax,0xba421f7c
  413283:	repz ds cld 
  413286:	pop    esi
  413287:	iret   
  413288:	das    
  413289:	sub    ebx,edx
  41328b:	mov    ecx,0x3b2f4864
  413290:	shr    BYTE PTR [edi+0x7a],cl
  413293:	or     esi,ebp
  413295:	add    eax,0x1815b993
  41329a:	jmp    0x413311
  41329c:	in     eax,dx
  41329d:	jno    0x4132dd
  41329f:	adc    eax,0x567fdd89
  4132a4:	fwait
  4132a5:	push   ds
  4132a6:	adc    BYTE PTR [edi+0x4c0dbaa9],bl
  4132ac:	cdq    
  4132ad:	mov    esi,0xf37ae7e7
  4132b2:	mul    DWORD PTR [eax-0x21b086a2]
  4132b8:	loop   0x413277
  4132ba:	mov    esp,DWORD PTR [ecx]
  4132bc:	fisubr WORD PTR [ebx]
  4132be:	or     ecx,ebx
  4132c0:	enter  0xfefb,0x28
  4132c4:	xor    eax,0xa510e353
  4132c9:	push   ss
  4132ca:	sbb    bl,BYTE PTR [edx+0x62d0b727]
  4132d0:	or     al,0xfb
  4132d2:	add    eax,0x59b173f3
  4132d7:	mov    ebp,eax
  4132d9:	div    DWORD PTR [esp+eax*1]
  4132dc:	jp     0x4132f3
  4132de:	mov    ebp,0x87683bcd
  4132e3:	pusha  
  4132e4:	or     eax,0x3421535f
  4132e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ea:	popa   
  4132eb:	mov    edx,0x9225e658
  4132f0:	sbb    eax,0xb1795f91
  4132f5:	mov    ecx,0x34dbd22b
  4132fa:	lea    edx,[edx-0x23]
  4132fd:	or     eax,0xfae47e7f
  413302:	jb     0x41335a
  413304:	shl    BYTE PTR [eax-0x5913db2d],0x3a
  41330b:	pop    esi
  41330c:	imul   esp,DWORD PTR [ecx],0xa27a9373
  413312:	shl    BYTE PTR [esi-0x7291ded4],1
  413318:	push   ds
  413319:	or     al,0xb1
  41331b:	cmc    
  41331c:	int3   
  41331d:	adc    al,0x38
  41331f:	push   ebx
  413320:	ss mov edi,0x68341b24
  413326:	cld    
  413327:	cmp    ecx,DWORD PTR [eax]
  413329:	mov    bl,0x59
  41332b:	pop    es
  41332c:	lea    ebx,[ebx]
  41332e:	jne    0x413396
  413330:	ja     0x4132d2
  413332:	cdq    
  413333:	sbb    eax,0x9293a355
  413338:	out    0x63,eax
  41333a:	xor    bl,ch
  41333c:	cli    
  41333d:	lock push ebp
  41333f:	jnp    0x4132ee
  413341:	jae    0x413339
  413343:	sbb    dl,BYTE PTR [edx]
  413345:	push   ebx
  413346:	icebp  
  413347:	daa    
  413348:	hlt    
  413349:	push   cs
  41334a:	lods   al,BYTE PTR ds:[esi]
  41334b:	sub    DWORD PTR [ebx+0x670bd0aa],eax
  413351:	in     al,0x8
  413353:	mov    ds:0xe4030ad0,al
  413358:	in     eax,dx
  413359:	aad    0xf3
  41335b:	int3   
  41335c:	jbe    0x41339c
  41335e:	into   
  41335f:	dec    eax
  413361:	fucomp st(5)
  413363:	hlt    
  413364:	sti    
  413365:	(bad)  
  413366:	mov    dh,0xdf
  413368:	pop    esi
  413369:	cmp    edx,eax
  41336b:	lahf   
  41336c:	inc    esp
  41336d:	mov    bl,0x4b
  41336f:	mov    cl,0x35
  413371:	mov    eax,ds:0x38164bf6
  413376:	push   ss
  413377:	aad    0x3f
  413379:	sbb    BYTE PTR [edx+0x7f8d8b16],ah
  41337f:	gs push edx
  413381:	jmp    0x8933:0xa9ccb856
  413388:	or     BYTE PTR [edx-0x61d5d9d4],al
  41338e:	mov    bl,al
  413390:	sub    al,0x50
  413392:	adc    BYTE PTR [edx+0x66],al
  413395:	retf   0x4f56
  413398:	mov    BYTE PTR [bp+si],bl
  41339b:	jnp    0x41333c
  41339d:	push   edx
  41339e:	pop    ss
  41339f:	push   ebx
  4133a0:	pop    esp
  4133a1:	sahf   
  4133a2:	and    esi,DWORD PTR [ecx-0x3d0ce2a6]
  4133a8:	push   ds
  4133a9:	jnp    0x413406
  4133ab:	adc    al,0xaf
  4133ad:	rcl    DWORD PTR ds:0x10bcf39f,cl
  4133b3:	inc    edi
  4133b4:	ja     0x4133b3
  4133b6:	(bad)  
  4133b7:	mov    ecx,0xcbfa4297
  4133bc:	jl     0x4133fc
  4133be:	int    0xf7
  4133c0:	fldenv [eax]
  4133c2:	iret   
  4133c3:	scas   al,BYTE PTR es:[edi]
  4133c4:	mov    bl,0x8c
  4133c6:	push   DWORD PTR [edx-0x311c19a2]
  4133cc:	aam    0x6d
  4133ce:	bound  ecx,QWORD PTR [edx-0x19]
  4133d1:	fmul   st(0),st
  4133d3:	and    eax,0x3c75b084
  4133d8:	pop    ds
  4133d9:	add    DWORD PTR [ebx-0x50],0xffffff81
  4133dd:	call   0x3cc1:0x598ee06
  4133e4:	ffreep st(2)
  4133e6:	jmp    0xa2b0:0xc15a4b76
  4133ed:	test   al,0x59
  4133ef:	(bad)  
  4133f1:	push   eax
  4133f2:	das    
  4133f3:	mov    esp,0x28917ed2
  4133f8:	push   cs
  4133f9:	mov    bl,0x0
  4133fb:	add    BYTE PTR [eax],al
  4133fd:	add    BYTE PTR [eax],al
  4133ff:	add    BYTE PTR [eax],al
  413401:	add    bl,ah
  413403:	pop    ds
  413404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413405:	adc    al,0xfe
  413407:	mov    ebp,0x9faffff3
  41340c:	test   ah,0xd1
  41340f:	clc    
  413410:	jecxz  0x4133d4
  413412:	(bad)  [esi]
  413414:	add    DWORD PTR [eax],eax
  413416:	and    BYTE PTR [edi],al
  413418:	add    BYTE PTR [eax],al
  41341a:	mov    al,ds:0x8b7b185c
  41341f:	add    BYTE PTR [ebx+0x52268146],0xce
  413426:	ficom  WORD PTR [esi]
  413428:	jg     0x41346b
  41342a:	xlat   BYTE PTR ds:[ebx]
  41342b:	enter  0x35b5,0xaa
  41342f:	or     al,BYTE PTR [eax-0x4dbbfcb2]
  413435:	mov    eax,0x8bfc995e
  41343a:	loopne 0x4133c5
  41343c:	sub    esp,DWORD PTR [edx+0x73758c5]
  413442:	add    esi,DWORD PTR [ecx]
  413444:	push   edi
  413445:	add    eax,0x9f6603fd
  41344a:	cdq    
  41344b:	fcom   st(0)
  41344d:	std    
  41344e:	out    dx,eax
  41344f:	shr    BYTE PTR [edi-0x12],1
  413452:	lds    ebx,FWORD PTR [ebp+0x60fd0436]
  413458:	mov    dh,0xac
  41345a:	jnp    0x413499
  41345c:	enter  0xe114,0x0
  413460:	jne    0x41348b
  413462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413463:	pop    edi
  413464:	pmulhw mm2,QWORD PTR [edx-0x2fd6033a]
  41346b:	sbb    BYTE PTR [edi],ch
  41346d:	mov    edx,0x217426d8
  413472:	popf   
  413473:	dec    ebx
  413474:	sub    DWORD PTR [esi-0x11214c44],ebp
  41347a:	or     DWORD PTR [esi],0x93bbdcd6
  413480:	cli    
  413481:	lahf   
  413482:	ins    BYTE PTR es:[edi],dx
  413483:	xchg   ebx,eax
  413484:	ja     0x413419
  413486:	sbb    eax,0xe34353c7
  41348b:	dec    ecx
  41348c:	push   edx
  41348d:	sbb    al,0x8
  41348f:	adc    al,bh
  413491:	call   0x253e8b8f
  413496:	mov    eax,ds:0xc75d3848
  41349b:	outs   dx,BYTE PTR ds:[esi]
  41349c:	mov    ah,0x47
  41349e:	mov    ecx,0x6b0748ed
  4134a3:	and    DWORD PTR [eax-0x4c],edx
  4134a6:	mov    esp,0xcb7b8727
  4134ab:	popa   
  4134ac:	cmp    ecx,DWORD PTR [ebx+0x3b959043]
  4134b2:	mov    ds:0x33dbbd40,al
  4134b7:	adc    eax,0x84e18df
  4134bc:	loope  0x413462
  4134be:	inc    edx
  4134bf:	js     0x413494
  4134c1:	test   al,0x82
  4134c3:	dec    ebp
  4134c4:	daa    
  4134c5:	outs   dx,DWORD PTR ds:[esi]
  4134c6:	sub    bl,bh
  4134c8:	dec    esp
  4134c9:	adc    DWORD PTR [esi],edi
  4134cb:	(bad)  [ebx-0x75]
  4134ce:	xor    dl,0xe6
  4134d1:	in     eax,dx
  4134d2:	repnz mov al,ds:0xb7ca3c18
  4134d8:	arpl   si,bp
  4134da:	inc    edx
  4134db:	jb     0x413539
  4134dd:	push   0x3910ae77
  4134e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134e3:	mov    esi,0xa0b85358
  4134e8:	mov    DWORD PTR [edx+0x660b8376],ebp
  4134ee:	mov    bh,0x7f
  4134f0:	into   
  4134f1:	cmp    eax,0xf8017d1a
  4134f6:	or     ch,dh
  4134f8:	jb     0x41356b
  4134fa:	pop    esi
  4134fb:	lahf   
  4134fc:	push   edi
  4134fd:	or     BYTE PTR [edi+0x4],0xf
  413501:	std    
  413502:	dec    eax
  413503:	rcr    BYTE PTR gs:[ecx+0x6df4032f],1
  41350a:	and    eax,0x713bc2e9
  41350f:	adc    edx,DWORD PTR [ebx+0x2c7937b3]
  413515:	mov    BYTE PTR [eax+0x5d951ae1],ah
  41351b:	in     eax,0x83
  41351d:	test   eax,0xa39f3c40
  413522:	out    dx,eax
  413523:	dec    esp
  413524:	pop    ss
  413525:	call   0xe052f30c
  41352a:	pop    ecx
  41352b:	imul   edx
  41352d:	push   ds
  41352e:	(bad)  
  41352f:	ja     0x41357a
  413531:	mov    ecx,0xf187c9c4
  413536:	repz and BYTE PTR [edi+eiz*4],0x6f
  41353b:	push   edi
  41353c:	inc    edx
  41353d:	pop    esi
  41353e:	and    eax,0x79f120fb
  413543:	das    
  413544:	mov    ebp,0x92145760
  413549:	sbb    DWORD PTR [ecx+edx*8],0x50
  41354d:	xor    al,0x14
  41354f:	or     eax,0xb30328c6
  413554:	mov    edi,0x94b81655
  413559:	cmp    BYTE PTR [edi+ebp*1-0x55],ch
  41355d:	or     edi,DWORD PTR [edi-0x12]
  413560:	xchg   esp,eax
  413561:	fist   WORD PTR [ecx+0x67dff14b]
  413567:	cmp    al,0x2a
  413569:	and    BYTE PTR [ebx+ecx*4-0x70cb6858],al
  413570:	sub    BYTE PTR [ecx+0x78],ch
  413573:	inc    ebx
  413574:	mov    edx,0x87d98ab0
  413579:	cmc    
  41357a:	cwde   
  41357b:	adc    esp,DWORD PTR [ebx+0x8]
  41357e:	test   al,0x50
  413580:	and    esi,ebp
  413582:	mov    bh,0xa9
  413584:	mov    ds:0xb83e55b2,eax
  413589:	jl     0x413514
  41358b:	leave  
  41358c:	mov    bh,0xcd
  41358e:	adc    eax,0xf35a845a
  413593:	cmp    bh,BYTE PTR [edi]
  413595:	cmp    DWORD PTR [ecx+esi*8-0x1a],eax
  413599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41359a:	jo     0x41356a
  41359c:	push   es
  41359d:	pop    esi
  41359e:	adc    al,0x6c
  4135a0:	cli    
  4135a1:	xchg   edx,eax
  4135a2:	and    BYTE PTR [ebx],bl
  4135a4:	(bad)  
  4135a5:	pop    eax
  4135a6:	mov    al,ds:0xaaaef931
  4135ab:	mov    ah,0xf7
  4135ad:	mov    al,ds:0xafa79792
  4135b2:	es inc edx
  4135b4:	stos   DWORD PTR es:[edi],eax
  4135b5:	sbb    eax,0x2fc4ea87
  4135ba:	pop    esp
  4135bb:	add    BYTE PTR [esi+0x6b],cl
  4135be:	sub    BYTE PTR [ebx-0x696e2dae],0x4e
  4135c5:	jae    0x4135ff
  4135c7:	popf   
  4135c8:	gs stos BYTE PTR es:[edi],al
  4135ca:	dec    edx
  4135cb:	xlat   BYTE PTR ds:[ebx]
  4135cc:	ffreep st(4)
  4135ce:	add    al,0x35
  4135d0:	les    ebp,FWORD PTR [eax]
  4135d2:	mov    ebp,DWORD PTR [edx]
  4135d4:	ror    DWORD PTR [eax],cl
  4135d6:	test   BYTE PTR [ecx+eax*4+0x7fc6094f],cl
  4135dd:	or     al,0xc0
  4135df:	pusha  
  4135e0:	(bad)  
  4135e1:	ds aam 0x78
  4135e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135e5:	xchg   ebx,eax
  4135e6:	fld    st(1)
  4135e9:	mov    ch,0x4b
  4135eb:	dec    ebx
  4135ec:	or     eax,0x8043806a
  4135f1:	xchg   edi,ebp
  4135f3:	mov    ds:0x4e1792fc,eax
  4135f8:	fdiv   QWORD PTR [eax+0x8]
  4135fb:	dec    esi
  4135fc:	and    DWORD PTR [edi],eax
  4135fe:	out    dx,al
  4135ff:	cld    
  413600:	jle    0x413594
  413602:	(bad)  
  413604:	out    dx,eax
  413605:	mov    ebp,0xd61fd1c7
  41360a:	push   cs
  41360b:	int3   
  41360c:	xor    DWORD PTR [ecx+esi*4-0x72],esi
  413610:	pop    es
  413611:	(bad)
  413614:	push   ds
  413615:	icebp  
  413616:	jge    0x41362f
  413618:	aas    
  413619:	retf   0xb3f3
  41361c:	pop    eax
  41361d:	int    0xec
  41361f:	stc    
  413620:	rcl    DWORD PTR [ecx],0xbd
  413623:	or     eax,0x92cb9377
  413628:	and    ebp,esi
  41362a:	push   esi
  41362b:	bound  edi,QWORD PTR [esi+0x7ba05be7]
  413631:	loope  0x413620
  413633:	jae    0x4135bd
  413635:	fisub  WORD PTR [esi]
  413637:	lods   al,BYTE PTR ds:[esi]
  413638:	mov    esi,0xe51c740e
  41363d:	loope  0x41362d
  41363f:	repnz outs dx,DWORD PTR ds:[esi]
  413641:	or     ebp,eax
  413643:	add    eax,0x838bd466
  413648:	std    
  413649:	inc    ebx
  41364a:	fild   DWORD PTR [edi]
  41364c:	mov    dh,0x15
  41364e:	(bad)  
  413650:	jae    0x41362c
  413652:	daa    
  413653:	sub    esp,edx
  413655:	scas   al,BYTE PTR es:[edi]
  413656:	adc    DWORD PTR [edi-0x2ba3ca3f],esi
  41365c:	xchg   edi,eax
  41365d:	adc    DWORD PTR [esp+esi*4+0x60214879],ebp
  413664:	cmp    ah,BYTE PTR [edi+0x62]
  413667:	dec    eax
  413668:	sub    eax,DWORD PTR [edi]
  41366a:	into   
  41366b:	xlat   BYTE PTR ds:[ebx]
  41366c:	outs   dx,BYTE PTR ds:[esi]
  41366d:	sbb    DWORD PTR [ebp-0x36],edx
  413670:	dec    ecx
  413671:	(bad)  
  413672:	or     eax,DWORD PTR [ecx]
  413674:	ins    DWORD PTR es:[edi],dx
  413675:	ror    DWORD PTR [eax-0x23074198],1
  41367b:	out    dx,eax
  41367c:	or     bh,BYTE PTR [edx+esi*1]
  41367f:	jmp    0x116d:0x849d7c6d
  413686:	mov    cl,0xf7
  413688:	frstor [eax+0x3]
  41368b:	adc    DWORD PTR [ebx-0x41e01b95],ebp
  413691:	mov    cl,0xff
  413693:	fldenv [eax+0x14]
  413696:	sub    al,0x6b
  413698:	sbb    bl,bh
  41369a:	retf   
  41369b:	push   es
  41369c:	imul   ebx,DWORD PTR [ebx-0xe6958ee],0x13
  4136a3:	sub    al,0xd6
  4136a5:	inc    ebx
  4136a6:	mov    eax,ds:0x21e1023c
  4136ab:	inc    edx
  4136ac:	push   0x41
  4136ae:	enter  0xbb54,0xf2
  4136b2:	xor    cl,ah
  4136b4:	jmp    0xc475:0x394353e7
  4136bb:	push   eax
  4136bc:	daa    
  4136bd:	sbb    DWORD PTR [edi-0x5b93ce9b],ebx
  4136c3:	(bad)  
  4136c4:	pop    ds
  4136c5:	push   esp
  4136c6:	push   edi
  4136c7:	loopne 0x41366a
  4136c9:	jmp    0xc0ca0317
  4136ce:	cmp    BYTE PTR [eax],bl
  4136d0:	xchg   esi,eax
  4136d1:	fcomp  DWORD PTR ds:0x3efda024
  4136d7:	xchg   esp,eax
  4136d8:	push   esi
  4136d9:	sbb    eax,0x9635e735
  4136de:	clc    
  4136df:	add    eax,0xe141ead6
  4136e4:	daa    
  4136e5:	mov    esp,0xd6c74484
  4136ea:	xor    BYTE PTR [ecx+edx*4],bl
  4136ed:	push   ds
  4136ee:	jno    0x4136dc
  4136f0:	inc    ebp
  4136f1:	int3   
  4136f2:	adc    eax,0xd12e71ef
  4136f7:	aas    
  4136f8:	push   esp
  4136f9:	mov    esi,0x426ea8f1
  4136fe:	push   0xffffff84
  413700:	lds    esp,FWORD PTR [ebx-0x470397f5]
  413706:	or     DWORD PTR [ecx],ecx
  413708:	adc    eax,DWORD PTR [esi-0x3e606e03]
  41370e:	jne    0x4136f3
  413710:	dec    edi
  413711:	jbe    0x41374e
  413713:	sbb    al,BYTE PTR [ebp-0x47375221]
  413719:	push   esp
  41371a:	outs   dx,BYTE PTR ds:[esi]
  41371b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41371c:	push   ebx
  41371d:	jnp    0x4136f5
  41371f:	xchg   esp,eax
  413720:	add    al,dl
  413722:	repz jo 0x413774
  413725:	dec    edx
  413726:	xor    ch,cl
  413728:	sbb    al,0x9a
  41372a:	jg     0x413747
  41372c:	push   ss
  41372d:	(bad)  
  41372f:	add    al,0x51
  413731:	loopne 0x4137b2
  413733:	jg     0x4136f1
  413735:	in     al,dx
  413736:	jl     0x41376f
  413738:	mov    edi,0xa7263e37
  41373d:	mov    edx,DWORD PTR [ecx+0x60a25324]
  413743:	ret    0x9d49
  413746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413747:	adc    esp,DWORD PTR [eax+edi*4-0xd304f9]
  41374e:	sbb    BYTE PTR [esi],ah
  413750:	inc    ebx
  413751:	push   esi
  413752:	mov    WORD PTR [ebx],?
  413754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413755:	push   edx
  413756:	fisttp QWORD PTR [ebx+0x4]
  413759:	inc    ebx
  41375a:	scas   al,BYTE PTR es:[edi]
  41375b:	xor    al,0xee
  41375d:	xchg   esp,eax
  41375e:	repnz push edx
  413760:	xchg   edx,eax
  413761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413762:	je     0x4137b3
  413764:	mov    bl,0x22
  413766:	iret   
  413767:	push   ecx
  413768:	nop
  413769:	out    0x9,eax
  41376b:	cmp    eax,0x2be851bf
  413770:	push   edi
  413771:	push   esp
  413772:	and    al,0x1a
  413774:	neg    BYTE PTR [esi-0x7c]
  413777:	clc    
  413778:	mov    ebp,0x5e69b4d
  41377d:	mov    eax,ds:0x5fe49830
  413782:	mov    ch,0xb2
  413784:	push   es
  413785:	cli    
  413786:	loope  0x41373b
  413788:	int3   
  413789:	pop    ebx
  41378a:	mov    eax,0x97afc621
  41378f:	sahf   
  413790:	push   DWORD PTR ds:[ecx+eiz*1+0x25]
  413795:	stos   DWORD PTR es:[edi],eax
  413796:	call   0xb7ed:0xba6a4c12
  41379d:	cld    
  41379e:	mov    WORD PTR [ebx],cs
  4137a0:	add    cl,bl
  4137a2:	jg     0x41378e
  4137a4:	xchg   ebp,eax
  4137a5:	lea    ebp,[edx+0x260e1dd9]
  4137ab:	lea    ecx,[edi-0x54d4f868]
  4137b1:	pushf  
  4137b2:	inc    ebp
  4137b3:	add    al,0x77
  4137b5:	outs   dx,BYTE PTR ds:[esi]
  4137b6:	aam    0x85
  4137b8:	push   ebx
  4137b9:	mov    ecx,0xe213bb37
  4137be:	das    
  4137bf:	mov    esp,eax
  4137c1:	call   0x2c4c49d0
  4137c6:	(bad)
  4137c9:	sbb    eax,eax
  4137cb:	jl     0x413765
  4137cd:	popf   
  4137ce:	sub    al,0xc1
  4137d0:	fwait
  4137d1:	sbb    al,0xb8
  4137d3:	lods   eax,DWORD PTR ds:[esi]
  4137d4:	jae    0x41382d
  4137d6:	xchg   ebx,eax
  4137d7:	loop   0x4137b6
  4137d9:	push   ecx
  4137da:	inc    ecx
  4137db:	mov    dl,0x7e
  4137dd:	and    cl,BYTE PTR ds:0x1f7d8926
  4137e3:	pop    es
  4137e4:	or     al,0xf0
  4137e6:	test   eax,0xa2a86305
  4137eb:	add    al,0xb6
  4137ed:	mov    dh,0xe4
  4137ef:	mov    ah,0x9a
  4137f1:	inc    esp
  4137f2:	int3   
  4137f3:	pop    es
  4137f4:	loope  0x41377b
  4137f6:	jns    0x41382e
  4137f8:	push   0x422c7906
  4137fd:	rcr    BYTE PTR [ebx],0xea
  413800:	add    al,0xa5
  413802:	dec    ebx
  413803:	mov    edx,0x96b8c929
  413808:	fcomp  DWORD PTR [esi+0x46]
  41380b:	push   eax
  41380c:	or     al,BYTE PTR [ebp+0x56aaad12]
  413812:	xchg   esp,eax
  413813:	pop    es
  413814:	mov    bl,0x57
  413816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413817:	dec    ebx
  413818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41381a:	sbb    al,0x8f
  41381c:	sti    
  41381d:	je     0x413881
  41381f:	cli    
  413820:	sub    esp,ecx
  413822:	aad    0x4
  413824:	inc    esi
  413825:	in     eax,0x88
  413827:	not    DWORD PTR [edi+0x64]
  41382a:	test   al,0xd3
  41382c:	add    BYTE PTR [edi-0x464b5f6a],al
  413832:	push   eax
  413833:	into   
  413834:	sti    
  413835:	shl    DWORD PTR [ebp+0x12],cl
  413838:	mov    cl,BYTE PTR [eax+0x724f2295]
  41383e:	jb     0x41387f
  413840:	add    al,0xe4
  413842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413843:	out    0x3e,eax
  413845:	mov    bl,al
  413847:	in     eax,dx
  413848:	dec    ebx
  413849:	pop    edi
  41384a:	data16 aas 
  41384c:	sub    dh,BYTE PTR ds:0xd9a69733
  413852:	ja     0x413839
  413854:	dec    eax
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	mov    ds,WORD PTR [eax]
  413858:	or     ecx,DWORD PTR [ebx]
  41385a:	sbb    al,0x86
  41385c:	cmp    DWORD PTR [edx+0x1c8a893f],edx
  413862:	add    ah,BYTE PTR [edi]
  413864:	jp     0x413848
  413866:	and    DWORD PTR [edx+0x1],edi
  413869:	not    DWORD PTR [eax+edi*1-0x8d9f579]
  413870:	inc    esi
  413871:	mov    edi,0xff9ff9d4
  413876:	into   
  413877:	retf   0x1ad5
  41387a:	sbb    dl,BYTE PTR [eax+ebx*8]
  41387d:	lea    esp,[edi+ecx*4+0x3c]
  413881:	out    0xa0,al
  413883:	lahf   
  413884:	xchg   esi,eax
  413885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413886:	fidiv  DWORD PTR [ebx+0x3c]
  413889:	mul    BYTE PTR [esi]
  41388b:	mov    ds:0xa2937470,eax
  413890:	out    0x97,eax
  413892:	adc    DWORD PTR [eax-0x1e],0x3d
  413896:	adc    BYTE PTR [edi+0x65ed5e16],ch
  41389c:	xchg   edx,eax
  41389d:	lods   al,BYTE PTR ds:[esi]
  41389e:	test   BYTE PTR [edi+0x34008722],ch
  4138a4:	mov    fs,WORD PTR [edi]
  4138a6:	xchg   edi,eax
  4138a7:	fdiv   st(4),st
  4138a9:	dec    esi
  4138aa:	dec    ebx
  4138ab:	or     eax,0x5d4a3aa0
  4138b0:	inc    edi
  4138b1:	inc    eax
  4138b2:	(bad)  
  4138b3:	fiadd  WORD PTR [ebp+0x6d]
  4138b6:	ret    
  4138b7:	jge    0x413920
  4138b9:	cmp    al,0xce
  4138bb:	lahf   
  4138bc:	(bad)  
  4138bd:	repz jns 0x41393a
  4138c0:	mov    ebp,fs
  4138c2:	sbb    esi,ecx
  4138c4:	sbb    ebp,DWORD PTR [edi]
  4138c6:	test   ebp,edi
  4138c8:	cmp    cl,0xf1
  4138cb:	push   ds
  4138cc:	mov    cl,0x9e
  4138ce:	xor    DWORD PTR [edi+eiz*8-0x290ec4e7],esp
  4138d5:	mov    ebp,0x5a1cd05
  4138da:	retf   0x3a3b
  4138dd:	xlat   BYTE PTR ds:[ebx]
  4138de:	and    eax,0xfb428a6f
  4138e3:	xor    DWORD PTR [ecx],0xffffffbe
  4138e6:	ins    BYTE PTR es:[edi],dx
  4138e7:	(bad)  
  4138e8:	push   ss
  4138e9:	loop   0x4138c1
  4138eb:	and    BYTE PTR [esi+0x37b21ed6],0xb5
  4138f2:	pop    ebx
  4138f3:	hlt    
  4138f4:	stos   DWORD PTR es:[edi],eax
  4138f5:	mov    ax,0x33c8
  4138f9:	pop    edx
  4138fa:	int    0xaa
  4138fc:	test   BYTE PTR [edi],bl
  4138fe:	sub    esp,esp
  413900:	rol    ebp,0x5c
  413903:	sbb    BYTE PTR [esi],0x5c
  413906:	in     eax,0x27
  413908:	inc    ebx
  413909:	push   es
  41390a:	(bad)  
  41390b:	stc    
  41390c:	xor    esp,DWORD PTR [edx+0x73]
  41390f:	mov    ch,0xb4
  413911:	(bad)  
  413912:	(bad)  [esi]
  413914:	mov    edi,esi
  413916:	in     eax,0x7c
  413918:	neg    DWORD PTR ds:[ebx]
  41391b:	add    eax,0xb590e904
  413920:	fst    DWORD PTR [esi+ecx*8+0x7a]
  413924:	das    
  413925:	call   0x7e30:0x5ea0f98
  41392c:	es mov eax,0xa1428ab8
  413932:	push   esp
  413933:	push   ebp
  413934:	mov    edi,0xc4672cac
  413939:	popf   
  41393a:	mov    bh,0xc0
  41393c:	pop    esi
  41393d:	pop    es
  41393e:	push   edi
  41393f:	adc    al,0xd1
  413941:	jb     0x4139b1
  413943:	ror    edi,cl
  413945:	repz dec ebp
  413947:	pop    esp
  413948:	das    
  413949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41394a:	dec    eax
  41394b:	fidivr DWORD PTR [edx+0x6577502]
  413951:	sti    
  413952:	leave  
  413953:	stos   DWORD PTR es:[edi],eax
  413954:	rcl    bl,cl
  413956:	push   ebp
  413957:	and    al,dl
  413959:	and    DWORD PTR [edi-0x775feb10],ebx
  41395f:	xchg   esi,eax
  413960:	mov    eax,ds:0xbeb94403
  413965:	sub    al,0x52
  413967:	out    0x8d,al
  413969:	test   BYTE PTR [eax],bh
  41396b:	push   eax
  41396c:	test   eax,0x2a4f3b4e
  413971:	lods   eax,DWORD PTR gs:[esi]
  413973:	and    al,0x32
  413975:	mov    ds,WORD PTR [eax+0x75c22fb3]
  41397b:	adc    eax,0xbe89210a
  413980:	jb     0x41397a
  413982:	dec    ebp
  413983:	inc    ebp
  413984:	dec    eax
  413985:	in     eax,0x17
  413987:	inc    esi
  413988:	fs in  al,0x6d
  41398b:	mov    cl,0x5a
  41398d:	mov    ecx,0x55d37b4f
  413992:	icebp  
  413993:	dec    ebp
  413994:	cwde   
  413995:	and    al,0x72
  413997:	outs   dx,BYTE PTR ds:[esi]
  413998:	push   edx
  413999:	or     al,0x9f
  41399b:	aad    0xef
  41399d:	pop    edi
  41399e:	cmp    al,0x62
  4139a0:	add    dl,0x40
  4139a3:	popa   
  4139a4:	jge    0x41396c
  4139a6:	jle    0x413953
  4139a8:	lea    esi,[ebp-0x577e2bcb]
  4139ae:	sub    BYTE PTR [ebx+0x22cf85f4],dl
  4139b4:	mov    al,ds:0xd9cb5564
  4139b9:	popf   
  4139ba:	mov    dl,0xb8
  4139bc:	mov    ch,0x62
  4139be:	stos   BYTE PTR es:[edi],al
  4139bf:	(bad)  
  4139c0:	and    BYTE PTR [edi-0x78],bh
  4139c3:	push   ebx
  4139c4:	loope  0x413a17
  4139c6:	sbb    eax,0xb86edcb4
  4139cb:	mov    ds:0xaacd13a1,al
  4139d0:	mov    esi,0x186aaa8
  4139d5:	cmp    edx,ecx
  4139d7:	sbb    esp,DWORD PTR [edi-0x111241da]
  4139dd:	xchg   ecx,eax
  4139de:	iret   
  4139df:	pop    edi
  4139e0:	cs xchg ebx,eax
  4139e2:	ins    DWORD PTR es:[edi],dx
  4139e3:	(bad)  
  4139e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139e5:	sub    edi,esi
  4139e7:	mov    BYTE PTR [edx-0x70],dh
  4139ea:	cli    
  4139eb:	add    DWORD PTR [ebp-0x24],eax
  4139ee:	cs push esp
  4139f0:	int3   
  4139f1:	sub    ah,ch
  4139f3:	call   0xa990:0x252c578c
  4139fa:	pop    es
  4139fb:	inc    eax
  4139fc:	xchg   ebp,eax
  4139fd:	cmp    al,0x4e
  4139ff:	stos   DWORD PTR es:[edi],eax
  413a00:	sub    ch,bl
  413a02:	mov    ch,0xd9
  413a04:	and    edi,0x3010ca68
  413a0a:	sub    ebx,DWORD PTR [ebp+eiz*8-0x44]
  413a0e:	imul   esi,esi,0xffffffa4
  413a11:	outs   dx,DWORD PTR ds:[esi]
  413a12:	push   esi
  413a13:	repz jg 0x413a1a
  413a16:	test   al,0x14
  413a18:	scas   eax,DWORD PTR es:[edi]
  413a19:	and    ah,BYTE PTR [eax+esi*4+0x35]
  413a1d:	cmp    al,0x7e
  413a1f:	xor    edi,DWORD PTR [ebx-0x5ef05654]
  413a25:	xor    DWORD PTR [ebx+0x3e4dcce6],edi
  413a2b:	mov    al,0xd2
  413a2d:	or     eax,0x61df5733
  413a32:	sub    ebp,ebx
  413a34:	xor    edi,DWORD PTR ds:0xfabda262
  413a3a:	rcr    BYTE PTR [ebp-0x74eff1a],0x3a
  413a41:	xor    bl,BYTE PTR [ebx+eiz*1]
  413a44:	mov    ds:0xee6fb0bb,al
  413a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a4a:	add    al,0x6b
  413a4c:	adc    BYTE PTR [esi],bh
  413a4e:	push   0x5e445fa4
  413a53:	sahf   
  413a54:	mov    ebp,ebp
  413a56:	sti    
  413a57:	add    eax,0xd66681e2
  413a5c:	mov    BYTE PTR [ecx],ch
  413a5e:	sub    eax,DWORD PTR [edi+0x43]
  413a61:	jle    0x413a56
  413a63:	loope  0x413a0a
  413a65:	call   DWORD PTR [eax-0x6d08af79]
  413a6b:	jge    0x413a92
  413a6d:	or     ebp,DWORD PTR [esi-0x64ae3db7]
  413a73:	adc    BYTE PTR [ecx+0x57],cl
  413a76:	ss ds out dx,eax
  413a79:	mov    al,0x88
  413a7b:	sti    
  413a7c:	xchg   ecx,eax
  413a7d:	jnp    0x413a79
  413a7f:	pop    ebp
  413a80:	and    ebx,DWORD PTR [edx+0x30976de0]
  413a86:	fnstcw WORD PTR [ebx-0x4503dfdd]
  413a8c:	mov    esi,DWORD PTR [esi+0x43]
  413a8f:	pop    esi
  413a90:	push   0x8e66fcef
  413a95:	pusha  
  413a96:	scas   al,BYTE PTR es:[edi]
  413a97:	add    BYTE PTR [ecx-0x73813d08],cl
  413a9d:	loop   0x413b09
  413a9f:	hlt    
  413aa0:	adc    eax,DWORD PTR [edx]
  413aa2:	pop    edx
  413aa3:	(bad)  
  413aa4:	and    eax,0x65525a8a
  413aa9:	sub    ebx,DWORD PTR [eax+0x75]
  413aac:	mov    dh,BYTE PTR ss:[edx+ebp*2]
  413ab0:	ror    DWORD PTR [eax+0x3d4fd277],1
  413ab6:	jl     0x413adf
  413ab8:	xchg   esp,eax
  413ab9:	push   edx
  413aba:	push   ebp
  413abb:	lahf   
  413abc:	loop   0x413b21
  413abe:	mov    esi,0x53f84917
  413ac3:	int    0x1b
  413ac5:	adc    DWORD PTR [edi-0x2],edi
  413ac8:	xchg   esp,eax
  413ac9:	into   
  413aca:	sti    
  413acb:	test   DWORD PTR [ebx+0x2316ff76],0xfdd90abf
  413ad5:	sub    BYTE PTR [esi+0x28],dh
  413ad8:	popa   
  413ad9:	sti    
  413ada:	pop    esp
  413adb:	mov    bl,0xb6
  413add:	or     cl,BYTE PTR [esi-0x34b4c80d]
  413ae3:	aam    0x7d
  413ae5:	inc    bx
  413ae7:	fisubr DWORD PTR [edx-0x67]
  413aea:	mov    eax,0xfdd0335
  413aef:	xlat   BYTE PTR ds:[ebx]
  413af0:	push   esp
  413af1:	stc    
  413af2:	cmp    edi,esp
  413af4:	in     eax,dx
  413af5:	jae    0x413b41
  413af7:	fisttp DWORD PTR [ecx+0x28]
  413afa:	neg    esp
  413afc:	push   ebp
  413afd:	in     eax,dx
  413afe:	push   ebp
  413aff:	stos   BYTE PTR es:[edi],al
  413b00:	(bad)  
  413b01:	in     al,dx
  413b02:	ds dec esi
  413b04:	sti    
  413b05:	int    0xc6
  413b07:	mov    esp,0xc2c43484
  413b0c:	mov    eax,ds:0x3cd81ae7
  413b11:	icebp  
  413b12:	mov    ch,0xa3
  413b14:	js     0x413b80
  413b16:	ret    0xbfb9
  413b19:	lods   eax,DWORD PTR ds:[esi]
  413b1a:	dec    edx
  413b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b1c:	bound  ebx,QWORD PTR [ebx+0x17b185c0]
  413b22:	leave  
  413b23:	loope  0x413aa9
  413b25:	lock sub edi,edi
  413b28:	sbb    BYTE PTR ds:0x68297ac7,ch
  413b2e:	cmp    ch,ch
  413b30:	or     BYTE PTR [esi+esi*2-0x4e],cl
  413b34:	xor    DWORD PTR [eax+0x32],ecx
  413b37:	lea    ecx,[edi]
  413b39:	dec    ebx
	...
  413b42:	cwde   
  413b43:	and    BYTE PTR [eax],dl
  413b45:	add    BYTE PTR [eax+0x3],bh
  413b48:	adc    BYTE PTR [eax],al
  413b4a:	mov    ebp,0xf600105c
  413b4f:	push   ebp
  413b50:	adc    BYTE PTR [eax],al
  413b52:	and    eax,0x3800107b
  413b57:	cmp    DWORD PTR [eax],edx
  413b59:	add    BYTE PTR [ebp+edx*1+0x1e9b0010],cl
  413b60:	adc    BYTE PTR [eax],al
  413b62:	sbb    al,0x6c
  413b64:	ins    DWORD PTR es:[edi],dx
  413b65:	les    edi,FWORD PTR [ebp-0x3b]
  413b68:	mov    ebp,0x7e8bcdfc
  413b6d:	jae    0x413be8
  413b6f:	mov    dh,0xff
  413b71:	mov    ecx,0x13dfb
  413b76:	and    BYTE PTR [edi],al
  413b78:	add    BYTE PTR [eax],al
  413b7a:	push   0x4a15516c
  413b7f:	ficomp WORD PTR [esi+0x73dfd674]
  413b85:	gs sbb ecx,ebx
  413b88:	xchg   ebx,eax
  413b89:	fstp   QWORD PTR [ebx]
  413b8b:	ss and eax,0x47c2e9f
  413b91:	sti    
  413b92:	(bad)  [ebx]
  413b94:	and    dl,dh
  413b96:	fistp  DWORD PTR [edi]
  413b98:	add    al,0xbb
  413b9a:	imul   DWORD PTR [edx-0x778abc98]
  413ba0:	or     BYTE PTR [esi+esi*4+0x15e6ce30],dh
  413ba7:	(bad)  
  413ba8:	js     0x413bd4
  413baa:	mov    eax,ds:0x91e55759
  413baf:	aad    0x7d
  413bb1:	xor    al,0x9a
  413bb3:	inc    edx
  413bb4:	loop   0x413bfe
  413bb6:	push   ss
  413bb7:	lods   eax,DWORD PTR ds:[esi]
  413bb8:	scas   eax,DWORD PTR es:[edi]
  413bb9:	xchg   edx,eax
  413bba:	jo     0x413bdd
  413bbc:	pop    edi
  413bbd:	arpl   WORD PTR [ebx+eax*2-0x3dbd977b],cx
  413bc4:	push   ecx
  413bc5:	lods   al,BYTE PTR ds:[esi]
  413bc6:	int    0xa2
  413bc8:	mov    fs,WORD PTR [edx]
  413bca:	pop    ss
  413bcb:	outs   dx,DWORD PTR ds:[esi]
  413bcc:	inc    ebx
  413bcd:	inc    ebp
  413bce:	push   cs
  413bcf:	int    0x4d
  413bd1:	loop   0x413c3d
  413bd3:	jmp    0x968c:0xc2b07eec
  413bda:	mov    bl,0x3
  413bdc:	sar    BYTE PTR [eax+0x35bc20e4],1
  413be2:	push   cs
  413be3:	jmp    0xf82a:0xc7d39e54
  413bea:	jecxz  0x413bc2
  413bec:	rcl    DWORD PTR [ebp-0x5e],cl
  413bef:	lock sub eax,0xd54df62a
  413bf5:	mov    edi,0x954cc950
  413bfa:	jge    0x413c39
  413bfc:	and    ecx,DWORD PTR [ecx+0x28]
  413bff:	clc    
  413c00:	xor    eax,0x35f0eedd
  413c05:	ins    WORD PTR es:[edi],dx
  413c07:	test   eax,0xc281a1b0
  413c0c:	ss das 
  413c0e:	inc    ecx
  413c0f:	mov    dh,0xcb
  413c11:	fdivrp st(6),st
  413c13:	jae    0x413c35
  413c15:	push   es
  413c16:	jg     0x413bc6
  413c18:	mov    eax,0x1bfc3539
  413c1d:	push   edi
  413c1e:	cld    
  413c1f:	std    
  413c20:	xor    eax,0xacd63e31
  413c25:	xchg   ebp,eax
  413c26:	xor    al,0xab
  413c28:	repz adc BYTE PTR [edx+0x5f],0xae
  413c2d:	pushf  
  413c2e:	mov    WORD PTR [edi+0x7d7bc760],?
  413c34:	jmp    0x1acd7aee
  413c39:	pop    DWORD PTR [edi]
  413c3b:	push   edi
  413c3c:	jmp    0x413c93
  413c3e:	jno    0x413c57
  413c40:	and    al,0xef
  413c42:	mov    ebp,DWORD PTR [ecx+esi*4-0x463cd3fe]
  413c49:	push   ebx
  413c4a:	push   esp
  413c4b:	shl    DWORD PTR [ebp+0xf07701e],0x5d
  413c52:	retf   0x17f2
  413c55:	and    al,0x85
  413c57:	das    
  413c58:	lea    ecx,[ebx+0x2b]
  413c5b:	cmp    eax,DWORD PTR [edi+0x94af971]
  413c61:	call   0x4bd8:0x75f95e14
  413c68:	imul   ebp,DWORD PTR [ecx+ebp*1-0x550b5c88],0x15
  413c70:	scas   eax,DWORD PTR es:[edi]
  413c71:	jnp    0x413ce7
  413c73:	jle    0x413cc1
  413c75:	mov    esp,0xb3fa2490
  413c7a:	pop    ds
  413c7b:	(bad)  
  413c7c:	nop
  413c7d:	and    BYTE PTR [esi],bh
  413c7f:	mov    es,WORD PTR [ebx-0x36]
  413c82:	sub    DWORD PTR [eax-0x6c],esi
  413c85:	clc    
  413c86:	add    dl,BYTE PTR [edx+0x72]
  413c89:	outs   dx,DWORD PTR ds:[esi]
  413c8a:	cdq    
  413c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c8c:	dec    edx
  413c8d:	and    esp,ebx
  413c8f:	sahf   
  413c90:	or     edx,eax
  413c92:	xor    DWORD PTR fs:[esi-0x6a500078],ebp
  413c99:	repz sti 
  413c9b:	retf   0x39bb
  413c9e:	sbb    dh,BYTE PTR [edi-0x78]
  413ca1:	aad    0xda
  413ca3:	retf   0x7da2
  413ca6:	pop    es
  413ca7:	jns    0x413c55
  413ca9:	pop    ds
  413caa:	inc    ebp
  413cab:	jno    0x413c9f
  413cad:	clc    
  413cae:	mov    ah,0x31
  413cb0:	add    BYTE PTR [edi+eax*4-0x7e1052bf],ah
  413cb7:	mov    ds:0x437e3e2e,al
  413cbc:	(bad)  
  413cbd:	test   eax,0x2d6aba4f
  413cc2:	(bad)  
  413cc3:	pop    ds
  413cc4:	mov    ss,WORD PTR [ebx+ecx*8]
  413cc7:	stos   DWORD PTR es:[edi],eax
  413cc8:	loop   0x413cb4
  413cca:	xchg   edx,eax
  413ccb:	sub    bl,BYTE PTR [ebx]
  413ccd:	lea    ecx,[ecx-0x2bd0a1a9]
  413cd3:	mov    dl,0x90
  413cd5:	add    al,0x7d
  413cd7:	mov    es,WORD PTR [eax]
  413cd9:	jle    0x413cd2
  413cdb:	ins    BYTE PTR es:[edi],dx
  413cdc:	in     al,dx
  413cdd:	mov    ds:0x2b1af07f,al
  413ce2:	push   ds
  413ce3:	outs   dx,BYTE PTR ds:[esi]
  413ce4:	mov    al,0x1b
  413ce6:	cmc    
  413ce7:	in     eax,dx
  413ce8:	sbb    BYTE PTR [ebx-0x74a56837],dh
  413cee:	(bad)  
  413cf0:	es out 0xdb,al
  413cf3:	cmp    BYTE PTR [edi+edx*4+0x47],al
  413cf7:	frstor [esi-0x3a2d5d83]
  413cfd:	js     0x413ce0
  413cff:	inc    esp
  413d00:	mov    dl,0x65
  413d02:	and    esi,esp
  413d04:	fisub  WORD PTR [esi+edi*2]
  413d07:	jb     0x413d87
  413d09:	cmp    al,0x35
  413d0b:	mov    eax,ds:0xa33a26ec
  413d10:	aas    
  413d11:	or     eax,0x3bab478b
  413d16:	scas   al,BYTE PTR es:[edi]
  413d17:	(bad)  
  413d18:	inc    edi
  413d19:	or     cl,0xe9
  413d1c:	jno    0x413d7d
  413d1e:	push   edi
  413d1f:	(bad)  
  413d20:	or     bl,al
  413d22:	jmp    0x413cd7
  413d24:	ins    DWORD PTR es:[edi],dx
  413d25:	ror    DWORD PTR [ebp+0x4],0xf1
  413d29:	sar    BYTE PTR [eax],0x23
  413d2c:	sahf   
  413d2d:	or     edx,DWORD PTR [eax+0x41]
  413d30:	xchg   esp,eax
  413d31:	inc    DWORD PTR [ebx+0x202b0ffe]
  413d37:	into   
  413d38:	icebp  
  413d39:	test   eax,0x71655e9b
  413d3e:	mov    dl,0xb4
  413d40:	in     al,0x75
  413d42:	pop    ss
  413d43:	dec    esp
  413d44:	adc    BYTE PTR [ecx-0x4a],al
  413d47:	mov    ch,0xa4
  413d49:	jae    0x413d97
  413d4b:	das    
  413d4c:	rcl    ebx,cl
  413d4e:	or     ch,ah
  413d50:	outs   dx,BYTE PTR ds:[esi]
  413d51:	mov    eax,ds:0xeac52034
  413d56:	mov    ch,0xe9
  413d58:	adc    al,dl
  413d5a:	push   cs
  413d5b:	pop    edx
  413d5c:	cmc    
  413d5d:	call   FWORD PTR [ecx-0x5e]
  413d60:	mov    ch,0x83
  413d62:	mov    bl,0x4d
  413d64:	jmp    0x6649:0xa0009d82
  413d6b:	mov    al,ds:0x4050c974
  413d70:	repnz pop ebp
  413d72:	es stos BYTE PTR es:[edi],al
  413d74:	retf   
  413d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d76:	fldcw  WORD PTR [edx]
  413d78:	imul   esp,DWORD PTR [ebp+ebx*8+0x1f0e048e],0xd0566806
  413d83:	jmp    0xd5252e82
  413d88:	clc    
  413d89:	das    
  413d8a:	arpl   WORD PTR [edx],bx
  413d8c:	xor    cl,BYTE PTR [ecx+0x75]
  413d8f:	(bad)  
  413d91:	int3   
  413d92:	in     eax,0xc7
  413d94:	jp     0x413d97
  413d96:	pop    ss
  413d97:	push   esi
  413d98:	sub    eax,0xf6115913
  413d9d:	jne    0x413d23
  413d9f:	adc    edx,DWORD PTR [esi+0x55]
  413da2:	fcomp  DWORD PTR [esi-0x5d66da27]
  413da8:	add    BYTE PTR [ebp-0x69b96b84],dl
  413dae:	(bad)  
  413daf:	mov    edi,0xdc4f92aa
  413db4:	push   edi
  413db5:	lahf   
  413db6:	mov    edx,0x710e9011
  413dbb:	mov    cs:0x2ec4d604,al
  413dc1:	xlat   BYTE PTR es:[ebx]
  413dc3:	adc    DWORD PTR [ebp+0x7c79c522],esi
  413dc9:	ins    DWORD PTR es:[edi],dx
  413dca:	mov    ch,0xde
  413dcc:	fst    DWORD PTR [esi+ecx*8+0x3b281aec]
  413dd3:	mov    edi,esp
  413dd5:	daa    
  413dd6:	inc    edx
  413dd7:	ret    
  413dd8:	call   0xf2efba57
  413ddd:	test   al,dh
  413ddf:	xchg   esp,eax
  413de0:	fdiv   QWORD PTR ds:0xf30961e0
  413de6:	stos   DWORD PTR es:[edi],eax
  413de7:	sub    BYTE PTR [ebx+0x32],al
  413dea:	in     eax,0x69
  413dec:	sub    ebp,ebx
  413dee:	out    dx,eax
  413def:	test   eax,0xa4e336d7
  413df4:	mov    BYTE PTR [ebx-0x5b],bl
  413df7:	mov    ch,0xec
  413df9:	and    eax,DWORD PTR [esi-0x688552a9]
  413dff:	aad    0x60
  413e01:	fnstcw WORD PTR gs:[esi]
  413e04:	mov    edi,ebp
  413e06:	or     dh,al
  413e08:	mov    eax,DWORD PTR [eax+0x50]
  413e0b:	fistp  QWORD PTR [edi+0x72]
  413e0e:	int3   
  413e0f:	cdq    
  413e10:	lods   eax,DWORD PTR ds:[esi]
  413e11:	ret    
  413e12:	cli    
  413e13:	and    bh,ch
  413e15:	dec    esp
  413e16:	xor    ah,BYTE PTR [ebx]
  413e18:	popf   
  413e19:	cmc    
  413e1a:	aaa    
  413e1b:	or     BYTE PTR [edi+0x53],dh
  413e1e:	or     edi,DWORD PTR [esp+edi*1-0x6a374327]
  413e25:	enter  0xf87e,0xa3
  413e29:	ds xor ecx,edi
  413e2c:	mov    ebp,DWORD PTR [edx]
  413e2e:	popf   
  413e2f:	cld    
  413e30:	daa    
  413e31:	loope  0x413dc4
  413e33:	hlt    
  413e34:	fcmovne st,st(2)
  413e36:	into   
  413e37:	xor    DWORD PTR [esi-0x34],esp
  413e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e3b:	sbb    DWORD PTR [ebx+0x44],ebp
  413e3e:	out    0x6b,al
  413e40:	xor    bh,ah
  413e42:	leave  
  413e43:	add    al,0x7e
  413e45:	sub    al,0x50
  413e47:	(bad)  
  413e48:	cld    
  413e49:	hlt    
  413e4a:	repnz stos BYTE PTR es:[edi],al
  413e4c:	fwait
  413e4d:	and    al,0x7f
  413e4f:	jbe    0x413e6e
  413e51:	mov    BYTE PTR [edx-0x38b61058],al
  413e57:	xor    al,0x6a
  413e59:	xchg   ecx,eax
  413e5a:	clc    
  413e5b:	(bad)  
  413e5d:	xor    DWORD PTR [ecx],edi
  413e5f:	(bad)  
  413e60:	rcl    BYTE PTR [ebx+0x7],1
  413e63:	out    0xf7,al
  413e65:	xlat   BYTE PTR ds:[ebx]
  413e66:	pop    ecx
  413e67:	mov    esp,0xaf0be5a
  413e6c:	fwait
  413e6d:	sbb    DWORD PTR [eax+esi*4-0x6],ecx
  413e71:	jnp    0x413ebb
  413e73:	pop    eax
  413e74:	mov    WORD PTR [edi+edi*2-0x9071b1c],fs
  413e7b:	pop    ss
  413e7c:	xchg   esi,eax
  413e7d:	mov    cs,esp
  413e7f:	mov    dl,0x15
  413e81:	sbb    BYTE PTR [eax],0x37
  413e84:	jno    0x413ec7
  413e86:	mov    dl,0x38
  413e88:	jp     0x413e43
  413e8a:	jecxz  0x413e86
  413e8c:	and    esi,ebx
  413e8e:	jnp    0x413e21
  413e90:	pop    edx
  413e91:	sbb    BYTE PTR [edi+0x45b3e752],0xf2
  413e98:	dec    ebp
  413e99:	in     eax,0x40
  413e9b:	add    eax,0x11c6f066
  413ea0:	mov    dl,bh
  413ea2:	mov    ch,0x64
  413ea4:	aad    0xf7
  413ea6:	repnz sbb bl,BYTE PTR [esi+esi*4+0x2edbf362]
  413eae:	sub    bh,BYTE PTR [edx+0xeb6d151]
  413eb4:	outs   dx,DWORD PTR ds:[esi]
  413eb5:	cmp    dl,BYTE PTR [esi+0x6a7d197]
  413ebb:	cmp    al,0xbc
  413ebd:	jle    0x413ed4
  413ebf:	(bad)  [ebp-0x77]
  413ec2:	in     al,0xae
  413ec4:	xor    esp,DWORD PTR [ebx]
  413ec6:	mov    esp,0x974a1836
  413ecb:	fnstenv [ecx+0x1c]
  413ece:	mov    ds:0x91d247c7,al
  413ed3:	mov    ds,esi
  413ed5:	scas   eax,DWORD PTR es:[edi]
  413ed6:	jmp    0x235b:0x66e8c056
  413edd:	jmp    0x413e6f
  413edf:	dec    eax
  413ee0:	jne    0x413ef2
  413ee2:	xor    BYTE PTR [edx],bh
  413ee4:	pop    es
  413ee5:	shl    BYTE PTR [esi-0x71f78e11],0x3d
  413eec:	cmp    al,0x8c
  413eee:	repnz sub eax,0xda12a953
  413ef4:	or     eax,0xc703d5c4
  413ef9:	imul   esi,DWORD PTR [esi+esi*4+0x2197be7d],0x6e
  413f01:	ins    BYTE PTR es:[edi],dx
  413f02:	mov    dh,0x20
  413f04:	imul   esp,DWORD PTR [eax],0x6a
  413f07:	shl    BYTE PTR [eax+esi*4],cl
  413f0a:	mov    ecx,ecx
  413f0c:	mov    DWORD PTR [ebx],ebp
  413f0e:	jecxz  0x413f83
  413f10:	push   0x935c8a6
  413f15:	jecxz  0x413f4c
  413f17:	clc    
  413f18:	(bad)  
  413f19:	mov    esi,0xca2f0e19
  413f1e:	mov    ecx,0xcdc53628
  413f23:	adc    ch,BYTE PTR [edi+0x68d169f7]
  413f29:	and    al,BYTE PTR [eax]
  413f2b:	sub    DWORD PTR [ecx+0x76],ebp
  413f2e:	sti    
  413f2f:	add    BYTE PTR [ecx],bl
  413f31:	push   edx
  413f32:	mov    eax,ds:0x52c05d11
  413f37:	scas   eax,DWORD PTR es:[edi]
  413f38:	out    dx,eax
  413f39:	pop    ds
  413f3a:	jae    0x413f5b
  413f3c:	(bad)  
  413f3e:	stos   BYTE PTR es:[edi],al
  413f3f:	(bad)  
  413f40:	jp     0x413f98
  413f42:	cmp    al,0xdd
  413f44:	adc    al,0x3c
  413f46:	inc    ebp
  413f47:	shl    ebx,cl
  413f49:	xor    ebp,DWORD PTR [ebp+0x6abd2b9c]
  413f4f:	clc    
  413f50:	mov    dl,0x2d
  413f52:	jl     0x413f4c
  413f54:	push   esi
  413f55:	fbstp  TBYTE PTR ds:0x56d93fa2
  413f5b:	(bad)  
  413f5c:	fsub   QWORD PTR [ecx+0x2d6420d0]
  413f62:	fsub   st(1),st
  413f64:	icebp  
  413f65:	in     eax,dx
  413f66:	or     eax,0x989afbd3
  413f6b:	(bad)  
  413f6d:	iret   
  413f6e:	or     DWORD PTR [eax-0x7],0xfffffffd
  413f72:	sbb    al,0x48
  413f75:	fnstenv [eax-0x30]
  413f78:	push   esi
  413f79:	aam    0xe4
  413f7b:	mov    ds:0x1b2e9f22,eax
  413f80:	xchg   esi,eax
  413f81:	pushf  
  413f82:	push   esi
  413f83:	jecxz  0x413fd3
  413f85:	inc    ebx
  413f86:	sbb    al,0x13
  413f88:	or     al,0xe4
  413f8a:	and    BYTE PTR [edi-0x2f],0x2b
  413f8e:	add    al,0x25
  413f90:	adc    eax,0xe313d068
  413f95:	sub    esi,ecx
  413f97:	xchg   BYTE PTR [edi+0x525f8e3],ah
  413f9d:	dec    eax
  413f9e:	aad    0x9b
  413fa0:	clc    
  413fa1:	jecxz  0x41400b
  413fa3:	div    esi
  413fa5:	or     BYTE PTR [esi+0x33],ch
  413fa8:	push   ebx
  413fa9:	jmp    0x413fb1
  413fab:	jo     0x413fbc
  413fad:	add    eax,0x45640ea7
  413fb2:	in     al,dx
  413fb3:	ror    BYTE PTR [eax*1-0x52dba9e6],0xee
  413fbb:	mov    dl,BYTE PTR [ebp-0x4eae4350]
  413fc1:	adc    BYTE PTR [eax],dh
  413fc3:	cs cmp eax,0xe0b44936
  413fc9:	lods   eax,DWORD PTR ds:[esi]
  413fca:	mov    al,ds:0x4f4813d4
  413fcf:	rcr    BYTE PTR [esi+0x4b],cl
  413fd2:	or     bl,cl
  413fd4:	mov    bl,0x2d
  413fd6:	call   0xdea6767b
  413fdb:	jmp    0x520d:0x61a6b08e
  413fe2:	pop    ebp
  413fe3:	iret   
  413fe4:	xchg   edi,eax
  413fe5:	ds jmp 0x758b9f14
  413feb:	push   eax
  413fec:	int3   
  413fed:	xor    DWORD PTR [ecx-0x14],eax
  413ff0:	inc    ebp
  413ff1:	inc    esi
  413ff2:	outs   dx,BYTE PTR ds:[esi]
  413ff3:	dec    ecx
  413ff4:	out    dx,eax
  413ff5:	jmp    0xef51:0x7463d707
  413ffc:	and    eax,0xcccafb72
  414001:	xlat   BYTE PTR ds:[ebx]
  414002:	aad    0x5e
  414004:	mov    ds:0x268b6718,eax
  414009:	mov    ecx,eax
  41400b:	not    BYTE PTR [ebp+ecx*4-0x3e]
  41400f:	sub    BYTE PTR [ecx],bl
  414011:	inc    edi
  414012:	xor    dl,bh
  414014:	dec    esp
  414015:	sar    DWORD PTR [ebx],cl
  414017:	ficomp WORD PTR [ebp+0x3b600a43]
  41401d:	mov    dh,0x29
  41401f:	or     bh,bl
  414021:	pusha  
  414022:	arpl   WORD PTR [edi+eiz*4],bp
  414025:	push   ebx
  414026:	inc    edi
  414027:	ds pmaxub mm2,mm5
  41402b:	repnz fcom DWORD PTR [esi]
  41402e:	fs jmp 0xa4cb:0x27ebca67
  414036:	outs   dx,BYTE PTR ds:[esi]
  414037:	dec    edi
  414038:	inc    edx
  414039:	adc    BYTE PTR [ecx+0x3],ch
  41403c:	ret    
  41403d:	jecxz  0x414019
  41403f:	shl    DWORD PTR [esi-0x4b726ff7],cl
  414045:	jae    0x414096
  414047:	push   ebp
  414048:	out    dx,al
  414049:	cld    
  41404a:	ror    BYTE PTR [ebx+0x7a],0x7e
  41404e:	cmp    eax,0x1d0df3d
  414053:	mov    eax,esi
  414055:	rol    bh,0x60
  414058:	mov    edi,0xd5b7ffcd
  41405d:	test   al,0x77
  41405f:	xchg   BYTE PTR [esi-0x324b3184],cl
  414065:	xchg   ebp,eax
  414066:	mov    bl,0xb6
  414068:	(bad)  
  414069:	outs   dx,DWORD PTR ds:[esi]
  41406a:	jno    0x414001
  41406c:	arpl   WORD PTR [edx+0x344ce25e],bx
  414072:	pop    edx
  414073:	ss jp  0x414034
  414076:	fs retf 0x2a71
  41407a:	and    edi,DWORD PTR [edx+0x7b]
  41407d:	bound  ebp,QWORD PTR [eax]
  41407f:	in     eax,0xc6
  414081:	cmp    eax,0x455d20ef
  414086:	loop   0x414029
  414088:	ret    
  414089:	pop    edi
  41408a:	push   0xd907e506
  41408f:	push   ebx
  414090:	push   edx
  414091:	xchg   ah,bh
  414093:	sbb    BYTE PTR [edx+ecx*8+0x59],dl
  414097:	(bad)  
  414098:	addr16 pop eax
  41409a:	cmp    BYTE PTR fs:[ecx+edx*1],al
  41409e:	cmp    eax,0x3283f323
  4140a3:	imul   esp,DWORD PTR [edi],0xffffffc3
  4140a6:	rcr    eax,0x40
  4140a9:	sahf   
  4140aa:	pop    edi
  4140ab:	pop    ss
  4140ac:	mov    ah,bh
  4140ae:	push   cs
  4140af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140b0:	aaa    
  4140b1:	popf   
  4140b2:	aas    
  4140b3:	inc    eax
  4140b4:	retf   
  4140b5:	inc    ecx
  4140b6:	cmp    eax,0x3dbdc647
  4140bb:	cli    
  4140bc:	pop    es
  4140bd:	cmp    eax,0x10fa2bb6
  4140c2:	addr16 mov edx,0x210a705
  4140c8:	pop    edx
  4140c9:	sub    eax,0xd2cbb05d
  4140ce:	sbb    eax,0xcf3cb05f
  4140d3:	test   eax,0x8d9b90dc
  4140d8:	aas    
  4140d9:	xchg   edi,eax
  4140da:	cmc    
  4140db:	inc    ecx
  4140dc:	jne    0x4140ab
  4140de:	push   ebp
  4140df:	jo     0x4140a5
  4140e1:	cmp    ebp,DWORD PTR [edx-0x6cd9774f]
  4140e7:	(bad)  
  4140e8:	(bad)  
  4140e9:	rol    BYTE PTR [edi+0x3b],1
  4140ec:	jmp    0x7073:0x755595bb
  4140f3:	fs enter 0xbde9,0xc0
  4140f8:	inc    esi
  4140f9:	outs   dx,BYTE PTR ds:[esi]
  4140fa:	aaa    
  4140fb:	pop    eax
  4140fc:	jns    0x414151
  4140fe:	aad    0x9d
  414100:	call   0x72420dc
  414105:	outs   dx,BYTE PTR ds:[esi]
  414106:	int3   
  414107:	add    al,0xd7
  414109:	aad    0x39
  41410b:	add    DWORD PTR [ecx+0x4210edd0],edi
  414111:	push   ecx
  414112:	leave  
  414113:	shr    DWORD PTR [edi-0x5ef490e0],1
  414119:	mov    ah,0x57
  41411b:	imul   esi,DWORD PTR [ecx+0x186d643a],0x5bb1d8d8
  414125:	pop    eax
  414126:	jb     0x41412c
  414128:	out    dx,al
  414129:	call   0x4961d00e
  41412e:	xchg   ecx,eax
  41412f:	(bad)  [esi+0x3489e26d]
  414135:	or     al,0x52
  414137:	mov    esp,0x25f46479
  41413c:	fmul   QWORD PTR [edx-0x61146d78]
  414142:	(bad)  
  414143:	dec    ecx
  414144:	sahf   
  414145:	cmp    ebp,DWORD PTR [esi]
  414147:	out    dx,al
  414148:	call   0xd293f0b9
  41414d:	in     eax,dx
  41414e:	pop    edi
  41414f:	xor    eax,0x41196d39
  414154:	cli    
  414155:	sbb    al,0xcd
  414157:	pop    ebp
  414158:	sbb    eax,0xe7e9cc92
  41415d:	repnz cwde 
  41415f:	or     ebp,ebx
  414161:	ins    DWORD PTR es:[edi],dx
  414162:	aam    0xc3
  414164:	rol    DWORD PTR [ebx-0x17],1
  414167:	sub    DWORD PTR [edi+esi*2+0x100aae44],ebp
  41416e:	pop    ss
  41416f:	jmp    0x4951:0x6be07ba5
  414176:	push   es
  414177:	push   cs
  414178:	jmp    0x63fab96a
  41417d:	enter  0xde72,0xde
  414181:	sar    DWORD PTR [edx+0x6a],cl
  414184:	outs   dx,DWORD PTR ds:[esi]
  414185:	sbb    DWORD PTR [eax],0xffffffcc
  414188:	push   edi
  414189:	and    ebx,ecx
  41418b:	pushf  
  41418c:	jmp    0x580a:0xb3922ca
  414193:	inc    eax
  414194:	outs   dx,DWORD PTR ds:[esi]
  414195:	xor    eax,0x9c84511e
  41419a:	jnp    0x414186
  41419c:	sbb    BYTE PTR [ecx],al
  41419e:	mov    bh,0xe6
  4141a0:	shl    DWORD PTR [edx],cl
  4141a2:	mov    eax,ecx
  4141a4:	stos   BYTE PTR es:[edi],al
  4141a5:	aad    0x1f
  4141a7:	or     edi,esi
  4141a9:	hlt    
  4141aa:	rcr    BYTE PTR [esi+0x79d56c52],cl
  4141b0:	sbb    ebp,DWORD PTR [edx+edx*1+0x53dd4f38]
  4141b7:	(bad)  
  4141b8:	fistp  DWORD PTR [ebx]
  4141ba:	popa   
  4141bb:	loope  0x414204
  4141bd:	xlat   BYTE PTR ds:[ebx]
  4141be:	mov    DWORD PTR [ebp+0x5],esi
  4141c1:	dec    ebp
  4141c2:	pop    eax
  4141c3:	cld    
  4141c4:	push   ss
  4141c5:	and    ebx,DWORD PTR [ecx-0x32]
  4141c8:	xchg   esp,ebx
  4141ca:	or     ah,BYTE PTR [edi+0x7e]
  4141cd:	nop
  4141ce:	retf   
  4141cf:	imul   ebp,esp,0x5da1f5f
  4141d5:	jp     0x414164
  4141d7:	adc    edi,eax
  4141d9:	fneni(8087 only) 
  4141db:	add    ebx,esp
  4141dd:	push   ecx
  4141de:	pop    ds
  4141df:	pop    edi
  4141e0:	outs   dx,DWORD PTR ds:[esi]
  4141e1:	mov    WORD PTR [edx-0x4641e822],gs
  4141e7:	cmp    DWORD PTR [ebx],ebp
  4141e9:	or     ah,BYTE PTR [edx]
  4141eb:	cdq    
  4141ec:	add    bh,BYTE PTR [edi+eiz*8]
  4141ef:	je     0x414171
  4141f1:	arpl   WORD PTR [ecx],di
  4141f3:	stos   BYTE PTR es:[edi],al
  4141f4:	in     al,0x98
  4141f6:	sub    DWORD PTR [edx+0x11],ebp
  4141f9:	push   ecx
  4141fa:	fs ins DWORD PTR es:[edi],dx
  4141fc:	imul   esp,DWORD PTR [ebx-0x14],0xe2aed7e1
  414203:	push   edi
  414204:	sub    BYTE PTR [eax],cl
  414206:	or     cl,dh
  414208:	xchg   edi,eax
  414209:	stc    
  41420a:	sub    ebx,DWORD PTR [ebx+ebx*4-0x5a]
  41420e:	xchg   edi,eax
  41420f:	std    
  414210:	adc    dl,ch
  414212:	cdq    
  414213:	sbb    al,0x64
  414215:	xchg   DWORD PTR [esi-0x74d747b5],ecx
  41421b:	or     al,0x2d
  41421d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41421e:	xchg   bx,ax
  414220:	pop    ss
  414221:	xor    eax,0xc7d53aff
  414226:	xor    ebp,DWORD PTR [esi+0x32]
  414229:	jl     0x4142a4
  41422b:	adc    eax,0x7ea44cd8
  414230:	mov    esi,0xc039611c
  414235:	jno    0x4141ca
  414237:	push   edx
  414238:	push   cs
  414239:	adc    dh,dl
  41423b:	adc    eax,0x8dde65ba
  414240:	or     ecx,DWORD PTR [esi]
  414242:	inc    edi
  414243:	sub    BYTE PTR ds:0x368011c,dh
  414249:	popa   
  41424a:	push   ds
  41424b:	icebp  
  41424c:	cs cmp eax,0x3ce389ef
  414252:	ss push esp
  414254:	pushf  
  414255:	pop    edi
  414256:	dec    ebp
  414257:	dec    edi
  414258:	(bad)  
  414259:	shl    DWORD PTR [ecx],cl
  41425b:	retf   
  41425c:	test   ebp,ebx
  41425e:	leave  
  41425f:	xchg   edi,eax
  414260:	sub    BYTE PTR ss:[edi+eax*8],bl
  414264:	imul   ebp,DWORD PTR [edi-0x4],0xd54530d2
  41426b:	dec    edi
  41426d:	sbb    esp,edi
  41426f:	out    0x31,eax
  414271:	dec    esi
  414272:	arpl   WORD PTR [ecx+0x43a105],bx
  414278:	out    dx,al
  414279:	fdivr  DWORD PTR [esp+ecx*8]
  41427c:	mov    WORD PTR [esi+0x54f6af31],?
  414282:	push   edi
  414283:	in     al,0x9d
  414285:	push   edi
  414286:	test   DWORD PTR [esp+ebp*1-0x770af5cb],ebp
  41428d:	retf   
  41428e:	add    eax,DWORD PTR [edx-0x67c099af]
  414294:	pop    es
  414295:	(bad)  
  414296:	jns    0x414310
  414298:	retf   0x42
  41429b:	add    BYTE PTR [eax],al
  41429d:	add    BYTE PTR [eax],al
  41429f:	add    BYTE PTR [eax],al
  4142a1:	add    BYTE PTR [eax],ah
  4142a3:	lahf   
  4142a4:	arpl   WORD PTR [ebp-0x40110201],cx
  4142aa:	mov    gs,WORD PTR [ebx-0x1287bf00]
  4142b0:	xchg   bh,bl
  4142b2:	sbb    eax,DWORD PTR [ebp+0x1]
  4142b5:	add    BYTE PTR [eax],ah
  4142b7:	pop    es
  4142b8:	add    BYTE PTR [eax],al
  4142ba:	or     BYTE PTR [edi+edi*1],bl
  4142bd:	data16 (bad) 
  4142bf:	retf   
  4142c0:	dec    ecx
  4142c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142c2:	hlt    
  4142c3:	fadd   DWORD PTR [ebp-0x359e4584]
  4142c9:	xchg   esp,eax
  4142ca:	xchg   esi,eax
  4142cb:	xchg   edi,eax
  4142cc:	ret    
  4142cd:	sbb    BYTE PTR [esi-0x2c],ah
  4142d0:	xor    eax,0x2c7bed3f
  4142d5:	inc    ebp
  4142d6:	xlat   BYTE PTR ds:[ebx]
  4142d7:	dec    esi
  4142d8:	fisttp WORD PTR [ebx+0x3ee18b2f]
  4142de:	in     al,0x6b
  4142e0:	mov    edi,esi
  4142e2:	xor    esi,DWORD PTR [eax]
  4142e4:	mov    ebx,0xaf601a31
  4142e9:	sbb    esi,ebx
  4142eb:	fs pop edi
  4142ed:	fsub   QWORD PTR [ebp+0x718e825c]
  4142f3:	les    esp,FWORD PTR [ebp+edx*2-0x211a7037]
  4142fa:	pop    ds
  4142fb:	leave  
  4142fc:	mov    bh,0x1e
  4142fe:	add    ah,0xda
  414301:	mov    dl,0x14
  414303:	mov    al,0xdf
  414305:	inc    BYTE PTR ds:0xcfc91d4c
  41430b:	aam    0xf3
  41430d:	inc    ebx
  41430e:	inc    DWORD PTR [eax]
  414310:	mov    ecx,0x8b77c9ad
  414315:	ror    DWORD PTR [ecx-0x1bb2660],cl
  41431b:	xchg   ecx,eax
  41431c:	sbb    BYTE PTR [esi],0xa1
  41431f:	(bad)  
  414320:	lods   al,BYTE PTR ds:[esi]
  414321:	xor    BYTE PTR [ecx+esi*4-0x72],dl
  414325:	and    DWORD PTR [edx+ecx*4+0x6c],0x7e8b745d
  41432d:	or     ah,BYTE PTR [edx-0x57]
  414330:	ret    0xb6d7
  414333:	imul   eax,DWORD PTR [ebp+0x3e],0x1d
  414337:	xor    cl,dl
  414339:	leave  
  41433a:	data16 (bad) 
  41433c:	sbb    ah,BYTE PTR [edi]
  41433e:	sub    eax,0x2684d199
  414343:	(bad)  
  414344:	data16 test ch,bh
  414347:	mov    ebx,fs
  414349:	lea    ebp,[ecx-0xc]
  41434c:	adc    eax,DWORD PTR [eax+0xed47ede]
  414352:	add    al,0x8d
  414354:	push   0x55
  414356:	and    bl,BYTE PTR [ecx+0x4556e097]
  41435c:	scas   al,BYTE PTR es:[edi]
  41435d:	popa   
  41435e:	outs   dx,BYTE PTR ds:[esi]
  41435f:	xchg   ecx,eax
  414360:	ja     0x4143d6
  414362:	mov    ebp,0xd4ac2164
  414367:	loopne 0x41430b
  414369:	lds    si,DWORD PTR [esi+0x73]
  41436d:	adc    DWORD PTR [edi+0xb],eax
  414370:	aam    0xdb
  414372:	cmp    eax,0x3997ea74
  414377:	mov    ds:0xf2bafed3,al
  41437c:	sbb    dl,cl
  41437e:	xchg   ch,cl
  414380:	sbb    DWORD PTR [ebp+0x1d1d071f],0x31ecfc1a
  41438a:	es jbe 0x4143d2
  41438d:	inc    esp
  41438e:	xor    bl,BYTE PTR [ebp+0x17]
  414391:	mov    DWORD PTR [eax-0x68],esp
  414394:	xchg   DWORD PTR [edx],edx
  414396:	leave  
  414397:	ss pop ebp
  414399:	out    0x5a,eax
  41439b:	sbb    DWORD PTR [ebp-0x67],esp
  41439e:	(bad)  
  41439f:	push   ds
  4143a0:	xor    eax,0x274809a1
  4143a5:	das    
  4143a6:	aad    0xa5
  4143a8:	sti    
  4143a9:	push   edi
  4143aa:	data16 inc bp
  4143ad:	pusha  
  4143ae:	jp     0x414332
  4143b0:	xlat   BYTE PTR ds:[ebx]
  4143b1:	cmp    DWORD PTR [edx+0x14befa91],edx
  4143b7:	sub    eax,0xe21e1a33
  4143bc:	push   0x9bfad31c
  4143c1:	fld    st(1)
  4143c3:	mov    DWORD PTR [edi+0x3f],edx
  4143c6:	jne    0x414437
  4143c8:	sar    ebp,1
  4143ca:	retf   0x8de2
  4143cd:	and    bh,cl
  4143cf:	cmp    BYTE PTR [eax+0x74f26866],bh
  4143d5:	inc    eax
  4143d6:	in     eax,0xf3
  4143d8:	push   0x96762ebd
  4143dd:	cld    
  4143de:	dec    edi
  4143df:	dec    edx
  4143e0:	xor    al,0x3f
  4143e2:	or     bh,BYTE PTR [ebx+0x3ae89ee2]
  4143e8:	pop    edi
  4143e9:	jge    0x414426
  4143eb:	test   eax,0x6882acb
  4143f0:	adc    esp,eax
  4143f2:	or     eax,0xf39b3b1b
  4143f7:	add    DWORD PTR [ebp-0x7a],edx
  4143fa:	loope  0x4143e3
  4143fc:	push   edi
  4143fd:	mov    ah,0x3b
  4143ff:	(bad)
  414403:	xor    cl,dl
  414405:	jmp    DWORD PTR [ecx+0x3a]
  414408:	xor    al,0xcf
  41440a:	and    BYTE PTR [esi-0x25],cl
  41440d:	pop    ecx
  41440e:	rcl    DWORD PTR [edi+0x53],0xaa
  414412:	push   esp
  414413:	push   cs
  414414:	ja     0x41448f
  414416:	jne    0x414496
  414418:	in     eax,0xfa
  41441a:	mov    ecx,0x220c627d
  41441f:	xchg   ecx,eax
  414420:	jmp    0x4143d9
  414422:	inc    edx
  414423:	mov    dh,ch
  414425:	mov    ch,0xf7
  414427:	pop    ss
  414428:	inc    ebx
  414429:	sub    ecx,DWORD PTR [ecx]
  41442b:	jns    0x4143d5
  41442d:	mov    esp,DWORD PTR [edx-0x67]
  414430:	jp     0x4143d1
  414432:	or     edi,DWORD PTR [ebx-0x2b]
  414435:	ja     0x4143df
  414437:	rcl    BYTE PTR [edx+0x28b71c5d],1
  41443d:	(bad)  
  41443e:	fdivr  DWORD PTR [edi+0x0]
  414441:	jne    0x4143e3
  414443:	cdq    
  414444:	mov    edx,0x5e206485
  414449:	cmp    bl,BYTE PTR [ebx]
  41444b:	xor    DWORD PTR [ebp-0x17],ebx
  41444e:	xchg   DWORD PTR [eax+0x3887b42],edi
  414454:	adc    eax,0xf98e860a
  414459:	jg     0x41449f
  41445b:	sahf   
  41445c:	jno    0x4144ad
  41445e:	xor    al,0x5e
  414460:	xchg   DWORD PTR [esp+esi*2+0x11],esp
  414464:	cmp    al,0xdf
  414466:	out    0xc6,al
  414468:	in     al,0x4d
  41446a:	adc    DWORD PTR [eax],ecx
  41446c:	pop    eax
  41446d:	inc    esp
  41446e:	fsqrt  
  414470:	sbb    DWORD PTR [edi],eax
  414472:	pop    esi
  414473:	bound  ebp,QWORD PTR [ebx+0x4b9f1745]
  414479:	fwait
  41447a:	ror    DWORD PTR [eax],1
  41447c:	push   cs
  41447d:	in     al,dx
  41447e:	mov    eax,ds:0x34cd5874
  414483:	int3   
  414484:	out    dx,eax
  414485:	(bad)  [esp+edx*8-0x68a88061]
  41448c:	add    DWORD PTR ds:0x249eb59b,edi
  414492:	cmp    al,0xc
  414494:	add    eax,0x4c05dd14
  414499:	push   ebp
  41449a:	shl    BYTE PTR [eax-0x1c],cl
  41449d:	rol    dl,1
  41449f:	stc    
  4144a0:	sub    BYTE PTR [ecx+0x78],al
  4144a3:	test   al,0x55
  4144a5:	lods   al,BYTE PTR ds:[esi]
  4144a6:	fisub  WORD PTR [edx+0x7d7e72fd]
  4144ac:	fldenv [ebp-0x12bac47b]
  4144b2:	pusha  
  4144b3:	retf   
  4144b4:	inc    esi
  4144b5:	xchg   DWORD PTR [ebx-0x4],ebp
  4144b8:	test   eax,0xc468b7aa
  4144bd:	std    
  4144be:	pop    ss
  4144bf:	mov    dh,0x55
  4144c1:	loop   0x4144ab
  4144c3:	mov    ch,0x46
  4144c5:	sub    eax,0x5e98cc57
  4144ca:	jge    0x4144f2
  4144cc:	arpl   WORD PTR [ebp-0x43],sp
  4144cf:	mov    edx,0x3d91b650
  4144d4:	and    cl,BYTE PTR [edi-0x69808c59]
  4144da:	shl    DWORD PTR [ecx],0x89
  4144dd:	ins    DWORD PTR es:[edi],dx
  4144de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144df:	sub    eax,0x14502fc7
  4144e4:	out    dx,eax
  4144e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144e6:	outs   dx,BYTE PTR ds:[esi]
  4144e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144e8:	mov    ecx,0xc44a3f10
  4144ed:	sbb    BYTE PTR [ebx],ah
  4144ef:	adc    ecx,DWORD PTR [esi+0x7fe41fa6]
  4144f5:	dec    esp
  4144f6:	mov    dl,0xc7
  4144f8:	jle    0x414564
  4144fa:	ins    DWORD PTR es:[edi],dx
  4144fb:	push   eax
  4144fc:	arpl   WORD PTR [ecx-0x3e111928],sp
  414502:	fwait
  414503:	dec    eax
  414504:	data16 xor al,0x2
  414507:	dec    edi
  414508:	outs   dx,DWORD PTR ds:[esi]
  414509:	mov    ebx,0xb0e3f29d
  41450e:	aaa    
  41450f:	fadd   st,st(6)
  414511:	inc    ebp
  414512:	adc    edx,esi
  414514:	mov    edx,0xa12a6fc8
  414519:	mov    ecx,0xeb490af2
  41451e:	mov    esp,0x782cb553
  414523:	sub    ch,0xed
  414526:	jnp    0x4144bf
  414528:	xor    edx,edi
  41452a:	pop    edx
  41452b:	sahf   
  41452c:	xchg   edi,eax
  41452d:	sub    al,0xcb
  41452f:	sar    BYTE PTR ds:0x7448b83c,0x6e
  414536:	or     bh,cl
  414538:	pop    edx
  414539:	ss scas eax,DWORD PTR es:[edi]
  41453b:	fcom   DWORD PTR [eax]
  41453d:	ins    BYTE PTR es:[edi],dx
  41453e:	jge    0x414527
  414540:	sar    DWORD PTR [esp+eiz*4-0x6a03167d],1
  414547:	push   es
  414548:	cld    
  414549:	jne    0x4144ef
  41454b:	push   esp
  41454c:	stc    
  41454d:	lods   al,BYTE PTR ds:[esi]
  41454e:	js     0x4145ad
  414550:	xchg   edx,eax
  414551:	xor    ebp,esi
  414553:	adc    al,BYTE PTR [eax]
  414555:	les    esp,FWORD PTR [ebp-0x33266506]
  41455b:	ror    DWORD PTR [edi],cl
  41455d:	je     0x414508
  41455f:	aas    
  414560:	push   ecx
  414561:	xor    edi,edx
  414563:	out    0x6c,al
  414565:	sbb    al,0xa6
  414567:	cmp    WORD PTR [esi-0x69],si
  41456b:	std    
  41456c:	(bad)  
  41456d:	jmp    0xe46579d7
  414572:	jmp    0xbcdd:0xdb2e5aa6
  414579:	data16 mov ch,bl
  41457c:	sub    al,0xc
  41457e:	adc    BYTE PTR gs:[edi-0x32],0x73
  414583:	stc    
  414584:	cmp    al,ah
  414586:	fcom   QWORD PTR [ebx]
  414588:	jecxz  0x414588
  41458a:	dec    edi
  41458b:	test   DWORD PTR ds:0x82f36e2,ebx
  414591:	push   ebp
  414592:	pop    ss
  414593:	retf   0xef08
  414596:	jne    0x414617
  414598:	popa   
  414599:	stos   BYTE PTR es:[edi],al
  41459a:	sar    BYTE PTR [ecx],cl
  41459c:	push   0xfffffff0
  41459e:	pushf  
  41459f:	aaa    
  4145a0:	xchg   ecx,eax
  4145a1:	xor    ch,BYTE PTR [edx-0x14f7f087]
  4145a7:	mov    dl,bl
  4145a9:	pushf  
  4145aa:	xchg   edi,eax
  4145ab:	xchg   BYTE PTR [ebp+0x73],cl
  4145ae:	retf   0x4739
  4145b1:	out    dx,eax
  4145b2:	xor    al,0xef
  4145b4:	lods   al,BYTE PTR ds:[esi]
  4145b5:	push   esp
  4145b6:	call   0x7299:0x8b6d9368
  4145bd:	and    cl,BYTE PTR [edi+0x3d2ad020]
  4145c3:	aaa    
  4145c4:	fist   DWORD PTR [ebp+0x12313322]
  4145ca:	popf   
  4145cb:	jl     0x4145ab
  4145cd:	les    ecx,FWORD PTR [edx-0x71fdaab]
  4145d3:	fistp  QWORD PTR [eax+0x1edc6735]
  4145d9:	adc    edx,DWORD PTR [ebx+0x639016f8]
  4145df:	ins    BYTE PTR es:[edi],dx
  4145e0:	sub    eax,0x5a6d8260
  4145e5:	stos   BYTE PTR es:[edi],al
  4145e6:	dec    ecx
  4145e7:	adc    al,0xa3
  4145ea:	jge    0x414578
  4145ec:	dec    ebx
  4145ed:	add    eax,0xf9d9e0b7
  4145f2:	xchg   edi,eax
  4145f3:	mov    al,ds:0x5b3974c4
  4145f8:	or     BYTE PTR [esi-0x11ab2353],bl
  4145fe:	ja     0x4145fd
  414600:	xor    bl,BYTE PTR [esi-0x10]
  414603:	sbb    eax,0xebaffa1d
  414608:	out    dx,al
  414609:	stos   BYTE PTR es:[edi],al
  41460a:	mov    edi,0x85066106
  41460f:	ficom  DWORD PTR [eax-0xa]
  414612:	dec    ecx
  414613:	inc    edx
  414614:	fs push edi
  414616:	mov    ds,WORD PTR [edx-0x1e866114]
  41461c:	and    dh,dl
  41461e:	das    
  41461f:	das    
  414620:	dec    ecx
  414621:	clc    
  414622:	add    ecx,DWORD PTR [eax+0x4f]
  414625:	in     eax,0xd4
  414627:	sub    BYTE PTR [eax-0x76],ah
  41462a:	mul    DWORD PTR ds:0xe9890e54
  414630:	cld    
  414631:	push   ecx
  414632:	(bad)  
  414633:	jle    0x414670
  414635:	and    eax,0xc40ae2b1
  41463a:	daa    
  41463b:	push   esp
  41463c:	push   ds
  41463d:	inc    esp
  41463e:	sbb    esp,DWORD PTR [esi+0x4d]
  414641:	loop   0x4145ed
  414643:	loope  0x41464b
  414645:	cs cmc 
  414647:	mov    bl,BYTE PTR [ecx+0x2ee37412]
  41464d:	pop    esp
  41464e:	arpl   sp,bp
  414650:	data16 aas 
  414652:	pop    esi
  414653:	pop    eax
  414654:	mov    DWORD PTR [ecx+0x27555a54],ebx
  41465a:	mov    al,0x2a
  41465c:	inc    esp
  41465d:	pop    es
  41465e:	xchg   edx,eax
  41465f:	mov    bl,0xed
  414661:	jbe    0x41466e
  414663:	dec    ecx
  414664:	stc    
  414665:	inc    edi
  414666:	inc    eax
  414667:	dec    ebx
  414668:	out    0xc6,al
  41466a:	int    0x71
  41466c:	ret    
  41466d:	push   ss
  41466e:	je     0x41465d
  414670:	mov    eax,0x6466d4da
  414675:	shl    dh,1
  414677:	or     eax,0x93576d50
  41467c:	ds shr dl,cl
  41467f:	ret    
  414680:	push   0x34a6776d
  414685:	add    edx,ebp
  414687:	sub    al,0xa4
  414689:	es push cs
  41468b:	ds sub eax,0xc42e3b9e
  414691:	pop    esp
  414692:	mov    cl,0xef
  414694:	ja     0x414627
  414696:	sub    BYTE PTR [edi-0x7e],0x77
  41469a:	icebp  
  41469b:	js     0x41461e
  41469d:	shl    BYTE PTR [ebx-0x6],1
  4146a0:	adc    edi,ebp
  4146a2:	and    ecx,DWORD PTR [edx-0x179391f5]
  4146a8:	iret   
  4146a9:	enter  0x3ec6,0x10
  4146ad:	imul   eax,DWORD PTR [edx-0x1823eef4],0x452ca28d
  4146b7:	dec    edi
  4146b8:	js     0x4146c5
  4146ba:	ins    BYTE PTR es:[edi],dx
  4146bb:	(bad)  
  4146bc:	aam    0x6d
  4146be:	push   si
  4146c0:	jns    0x4146fc
  4146c2:	int3   
  4146c3:	mov    ah,0x5d
  4146c5:	sub    BYTE PTR [edi-0x7f0460e8],dh
  4146cb:	or     al,BYTE PTR [ebx-0x2a48ad72]
  4146d1:	cmp    DWORD PTR [ebx+0x749f18c7],0xffffff8c
  4146d8:	lahf   
  4146d9:	mov    bl,0xe3
  4146db:	xor    eax,0x88bbb5c0
  4146e0:	xchg   edx,eax
  4146e1:	xor    eax,0x13747b0
  4146e6:	lds    eax,FWORD PTR [ecx]
  4146e8:	test   al,0xd2
  4146ea:	mov    ebx,0x230773cd
  4146ef:	outs   dx,DWORD PTR ds:[esi]
  4146f0:	rcl    WORD PTR [edi],1
  4146f3:	push   0x1e4bb512
  4146f8:	xchg   ebp,eax
  4146f9:	inc    edx
  4146fa:	icebp  
  4146fb:	pop    ecx
  4146fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146fd:	popa   
  4146fe:	vpsignb ymm6,ymm7,YMMWORD PTR [eax]
  414703:	mov    ah,0xeb
  414705:	jecxz  0x4146de
  414707:	add    BYTE PTR [eax],ch
  414709:	add    eax,DWORD PTR [ebx+0x19]
  41470c:	cmp    eax,DWORD PTR ds:0xfa32810f
  414712:	in     eax,0x43
  414714:	cmp    ah,BYTE PTR [ecx]
  414716:	je     0x4146f7
  414718:	jle    0x414799
  41471a:	sub    DWORD PTR [eax-0x77b741],edx
  414720:	inc    ecx
  414721:	inc    esi
  414722:	mov    ds:0x2a106833,al
  414727:	and    esi,DWORD PTR [eax-0x52]
  41472a:	dec    esi
  41472b:	push   esp
  41472c:	(bad)  
  41472e:	pop    eax
  41472f:	lods   al,BYTE PTR ds:[esi]
  414730:	ror    BYTE PTR [esi-0x6e2c8f6],cl
  414736:	cmp    eax,0x51f6b4e2
  41473b:	add    eax,0x8c297bd5
  414740:	cdq    
  414741:	and    eax,0x722c98cf
  414746:	test   ebx,0x3df18306
  41474c:	sbb    eax,DWORD PTR [ebx-0x50]
  41474f:	jae    0x41476f
  414751:	daa    
  414752:	cli    
  414753:	mov    edi,0xb6659e5f
  414758:	(bad)  
  414759:	imul   BYTE PTR [edx]
  41475b:	mov    ch,0xb1
  41475d:	pop    esi
  41475e:	or     BYTE PTR [esi+0x68],bh
  414761:	popa   
  414762:	push   ecx
  414763:	enter  0x5459,0x3d
  414767:	scas   eax,DWORD PTR es:[edi]
  414768:	data16 das 
  41476a:	inc    esp
  41476b:	stc    
  41476c:	push   ecx
  41476d:	sbb    bl,BYTE PTR [eax+0x69]
  414770:	loopne 0x4146f6
  414772:	outs   dx,BYTE PTR ds:[esi]
  414773:	mov    bl,0x44
  414775:	add    edi,DWORD PTR [edx-0x48]
  414778:	imul   esi,DWORD PTR [eax+0x4f],0x535b7fe1
  41477f:	add    BYTE PTR [ebx+ecx*2],cl
  414782:	mov    eax,0xdd639ca0
  414787:	mov    esp,0xc26fb631
  41478c:	std    
  41478d:	into   
  41478e:	jle    0x4147d9
  414790:	test   eax,0x84dde1e2
  414795:	pop    ss
  414796:	mov    edi,esi
  414798:	adc    DWORD PTR [ebp+0x5678a64b],ebp
  41479e:	(bad)  
  4147a0:	push   es
  4147a1:	jno    0x41479a
  4147a3:	aam    0xf3
  4147a5:	inc    esp
  4147a6:	out    0x1b,eax
  4147a8:	mov    bl,BYTE PTR [esi]
  4147aa:	imul   esp,edx,0x16
  4147ad:	or     BYTE PTR [edx+ebp*2],ch
  4147b0:	mov    ds:0x31f10b41,eax
  4147b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147b6:	sub    al,0xcf
  4147b8:	sbb    esi,DWORD PTR [ecx-0x1e]
  4147bb:	rcl    al,1
  4147bd:	(bad)  
  4147be:	cmp    bh,BYTE PTR [esi+0x3a]
  4147c1:	push   ebp
  4147c2:	mov    cl,0x19
  4147c4:	icebp  
  4147c5:	jbe    0x4147de
  4147c7:	sub    edx,DWORD PTR [edi+0x61]
  4147ca:	repz mov eax,ebx
  4147cd:	mov    bh,0x57
  4147cf:	gs cmp eax,ebx
  4147d2:	dec    ebx
  4147d3:	ss (bad) 
  4147d5:	dec    ebx
  4147d6:	je     0x4147a8
  4147d8:	scas   al,BYTE PTR es:[edi]
  4147d9:	out    0x8a,al
  4147db:	pop    ebp
  4147dc:	outs   dx,BYTE PTR ds:[esi]
  4147dd:	scas   eax,DWORD PTR es:[edi]
  4147de:	imul   ebx,ebx,0xffffffe4
  4147e1:	scas   eax,DWORD PTR es:[edi]
  4147e2:	aaa    
  4147e3:	mov    dl,0xea
  4147e5:	pop    ecx
  4147e6:	out    0xa8,eax
  4147e8:	inc    ecx
  4147e9:	mov    edx,0xc1a5d9f5
  4147ee:	inc    ebp
  4147ef:	aad    0x0
  4147f1:	push   ecx
  4147f2:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147f4:	jne    0x414851
  4147f6:	mov    ebx,0x796baf56
  4147fb:	(bad)  
  4147fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147fe:	arpl   WORD PTR [ebp+0x23],ax
  414801:	jno    0x414837
  414803:	sub    esi,0xffffffb7
  414806:	test   BYTE PTR [ebx+0x32],dl
  414809:	pop    esi
  41480a:	ficom  WORD PTR [ebx+0x4c3935a3]
  414810:	out    dx,eax
  414811:	cmp    al,0x68
  414813:	sar    DWORD PTR [edi+0x63696847],cl
  414819:	loop   0x41485b
  41481b:	add    al,0x69
  41481d:	rcl    ah,1
  41481f:	jo     0x414831
  414821:	push   0xc4849e31
  414826:	xor    BYTE PTR [ecx+edi*1-0x42857317],ch
  41482d:	adc    al,0xa
  41482f:	mov    ds:0xc61b9517,eax
  414834:	push   esi
  414835:	(bad)  
  414837:	sub    BYTE PTR [ecx+ebx*4+0x36],bl
  41483b:	xor    ch,BYTE PTR [esi+0xfa35ba9]
  414841:	into   
  414842:	into   
  414843:	adc    dl,BYTE PTR ds:0x4891d5bb
  414849:	out    dx,eax
  41484a:	pushf  
  41484b:	in     eax,0x36
  41484d:	ror    BYTE PTR [eax],0x9c
  414850:	sub    BYTE PTR gs:[edx],dh
  414853:	jae    0x414896
  414855:	out    0x52,al
  414857:	xchg   esp,eax
  414858:	les    eax,FWORD PTR [ebp-0x34c5a830]
  41485e:	pusha  
  41485f:	sbb    dl,BYTE PTR [esi-0x45c9ab1]
  414865:	jae    0x4148ac
  414867:	int    0xb7
  414869:	retf   0x6a34
  41486c:	int    0xc6
  41486e:	pop    eax
  41486f:	test   DWORD PTR [ebp-0x72],ecx
  414872:	imul   ebp,DWORD PTR [eax-0x53b6002f],0xffffffcb
  414879:	pop    es
  41487a:	adc    bl,al
  41487c:	bound  edi,QWORD PTR [edi-0x7a]
  41487f:	mov    cl,0xdf
  414881:	fmul   QWORD PTR [ecx]
  414883:	cmc    
  414884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414885:	sar    BYTE PTR [ebp-0x2ef343ea],1
  41488b:	push   ss
  41488c:	add    DWORD PTR [eax-0x15],esp
  41488f:	cli    
  414890:	cld    
  414891:	push   edi
  414892:	adc    bh,al
  414894:	(bad)
  414898:	pop    edx
  414899:	imul   ebx,DWORD PTR [ecx+0x69599b6c],0x40
  4148a0:	dec    esi
  4148a1:	push   ebp
  4148a2:	scas   al,BYTE PTR es:[edi]
  4148a3:	repz jmp 0x62f8d871
  4148a9:	push   ss
  4148aa:	adc    al,0x75
  4148ac:	leave  
  4148ad:	rol    cl,0x11
  4148b0:	sub    ah,BYTE PTR [eax]
  4148b2:	cmp    BYTE PTR [edx+0x76],dl
  4148b5:	mov    cl,0xc7
  4148b7:	call   0xd2e9:0xbabf8ea4
  4148be:	aas    
  4148bf:	(bad)  [esi-0x69]
  4148c2:	aad    0x3b
  4148c4:	sbb    DWORD PTR [ebx-0x3b],ebp
  4148c7:	std    
  4148c8:	cmc    
  4148c9:	adc    BYTE PTR [eax+0x7472f427],ch
  4148cf:	lods   al,BYTE PTR ds:[esi]
  4148d0:	jmp    0x6a58:0xd6705429
  4148d7:	push   esi
  4148d8:	stos   BYTE PTR es:[edi],al
  4148d9:	jecxz  0x4148a0
  4148db:	cli    
  4148dc:	es enter 0x9a92,0xb5
  4148e1:	test   ebx,edi
  4148e3:	nop
  4148e4:	dec    ebx
  4148e5:	add    esp,ebx
  4148e7:	loope  0x4148f9
  4148e9:	not    ecx
  4148eb:	xchg   ebx,eax
  4148ec:	adc    al,0x93
  4148ee:	mov    ebx,0xdfa3d9c3
  4148f3:	sub    al,ch
  4148f5:	jns    0x41490c
  4148f7:	(bad)  
  4148f8:	lea    ecx,[edi-0x39]
  4148fb:	repz jnp 0x4148ed
  4148fe:	neg    BYTE PTR [edi-0x6]
  414901:	sub    bl,0x5f
  414904:	sub    eax,0xd3eee954
  414909:	jmp    0xac6e5783
  41490e:	pop    esp
  41490f:	mov    edx,DWORD PTR [esi+ebx*8]
  414912:	mov    esi,DWORD PTR [edx+0x686fc27a]
  414918:	dec    eax
  414919:	mov    edi,0x3a40aea5
  41491e:	dec    ebx
  41491f:	call   0xba4089a6
  414924:	inc    ebp
  414925:	push   0x82874242
  41492a:	mov    ecx,0x1d8bc801
  41492f:	jle    0x41494a
  414931:	pop    esi
  414932:	mov    dl,0x1d
  414934:	nop
  414935:	and    DWORD PTR [edi],edx
  414937:	and    esp,DWORD PTR [ebx-0x4640d6d7]
  41493d:	icebp  
  41493e:	and    al,0x43
  414940:	stos   DWORD PTR es:[edi],eax
  414941:	or     eax,DWORD PTR [esi]
  414943:	cmp    ch,BYTE PTR [edx-0x2f21a528]
  414949:	idiv   BYTE PTR [ecx-0xc]
  41494c:	mov    DWORD PTR [ebx+0x73],eax
  41494f:	mov    ecx,0x1b4f24da
  414954:	stc    
  414955:	sub    DWORD PTR [edx+0x7a93f155],esi
  41495b:	push   ecx
  41495c:	cmc    
  41495d:	popa   
  41495e:	dec    edi
  41495f:	and    eax,edi
  414961:	lock jae 0x414959
  414964:	in     eax,0xd9
  414966:	cmp    DWORD PTR ds:0x4b1c3f57,esp
  41496c:	loopne 0x414917
  41496e:	int    0xd3
  414970:	ret    0x4adb
  414973:	dec    ecx
  414974:	ja     0x4149cb
  414976:	icebp  
  414977:	out    0x3e,al
  414979:	std    
  41497a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41497b:	xor    DWORD PTR [esi],edi
  41497d:	xor    bl,BYTE PTR [edi-0x51293a64]
  414983:	retf   
  414984:	add    al,0x9
  414986:	pop    esi
  414987:	in     al,dx
  414988:	cmp    ebx,ebp
  41498a:	xor    ebx,DWORD PTR [ebp-0x3a]
  41498d:	arpl   WORD PTR [edx+0x1564672e],ax
  414993:	mov    eax,ds:0x22d939af
  414998:	and    ah,BYTE PTR [edx+edx*1+0x7e]
  41499c:	ins    DWORD PTR es:[edi],dx
  41499d:	pusha  
  41499e:	xor    al,0x7f
  4149a0:	adc    al,0x92
  4149a2:	fstp   TBYTE PTR [ecx]
  4149a4:	and    eax,0x5526485f
  4149a9:	inc    ebp
  4149aa:	mov    ebx,0xea960c00
  4149af:	add    BYTE PTR [esi-0x6d87e427],bh
  4149b5:	mov    ds:0xaa750a5f,eax
  4149ba:	adc    al,0x42
  4149bc:	ja     0x41499d
  4149be:	inc    esp
  4149bf:	lahf   
  4149c0:	call   0x989a3d1f
  4149c5:	dec    edx
  4149c6:	push   ebx
  4149c7:	loop   0x414a01
  4149c9:	xchg   ebp,eax
  4149ca:	sbb    ch,BYTE PTR [esi+eiz*4-0x1]
  4149ce:	into   
  4149cf:	jmp    0x2505:0x3868d039
  4149d6:	jmp    0x0:0xd1222
  4149dd:	add    BYTE PTR [eax],al
  4149df:	add    BYTE PTR [eax],al
  4149e1:	add    BYTE PTR [esi-0x77],bl
  4149e4:	add    eax,0x7feed766
  4149e9:	mov    ecx,0x4f6277d8
  4149ee:	gs loope 0x414a0a
  4149f1:	mov    ch,0x3b
  4149f3:	dec    esp
  4149f4:	add    DWORD PTR [eax],eax
  4149f6:	and    BYTE PTR [edi],al
  4149f8:	add    BYTE PTR [eax],al
  4149fa:	popf   
  4149fb:	jl     0x414987
  4149fd:	jl     0x414a75
  4149ff:	pop    edx
  414a00:	shl    edi,1
  414a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a03:	(bad)  
  414a04:	sbb    al,0xd1
  414a06:	fldl2e 
  414a08:	inc    ebp
  414a09:	push   0x6fafe248
  414a0e:	ret    0xe905
  414a11:	inc    ebp
  414a12:	aaa    
  414a13:	in     al,dx
  414a14:	daa    
  414a15:	xchg   edi,eax
  414a16:	clc    
  414a17:	jno    0x414a64
  414a19:	pushf  
  414a1a:	push   edx
  414a1b:	add    al,0x2a
  414a1d:	fldcw  WORD PTR [edx]
  414a1f:	mov    ss,WORD PTR fs:[edi+0x35eba072]
  414a26:	jecxz  0x414a5f
  414a28:	sbb    BYTE PTR [ebp-0x6b],al
  414a2b:	rcl    BYTE PTR [ebx+ecx*1],1
  414a2e:	fisub  DWORD PTR [edx-0x78]
  414a31:	daa    
  414a32:	fimul  WORD PTR [ebp+0x2427fa4c]
  414a38:	mov    bh,0xb3
  414a3a:	dec    esi
  414a3b:	pop    edi
  414a3c:	mov    ds:0xf3741f8a,al
  414a41:	int3   
  414a42:	and    eax,0x1a23d949
  414a47:	outs   dx,BYTE PTR ds:[esi]
  414a48:	in     eax,0x1c
  414a4a:	cmp    cl,BYTE PTR [ebp-0x5172eb7d]
  414a50:	fidiv  WORD PTR [esi-0x5d58766e]
  414a56:	sub    eax,DWORD PTR [edi+0x1f]
  414a59:	(bad)  
  414a5a:	popf   
  414a5b:	adc    eax,0xfa869436
  414a60:	call   0xe55b5274
  414a65:	or     eax,0x39246945
  414a6a:	mov    ebx,0xd32aaac4
  414a6f:	(bad)
  414a72:	add    eax,0xe58f4e4d
  414a77:	mov    edi,0x5f93bafd
  414a7c:	loop   0x414af9
  414a7e:	or     cl,BYTE PTR [ecx+edx*8-0x31]
  414a82:	out    0x1a,eax
  414a84:	mov    ds:0xf6f8fa77,al
  414a89:	ins    BYTE PTR es:[edi],dx
  414a8a:	into   
  414a8b:	into   
  414a8c:	adc    ebp,DWORD PTR [edx]
  414a8e:	out    dx,al
  414a8f:	xlat   BYTE PTR ss:[ebx]
  414a91:	mov    dh,0x98
  414a93:	imul   eax,DWORD PTR [eax-0x5940915d],0x2b
  414a9a:	data16 mov cl,0x68
  414a9d:	push   edx
  414a9e:	test   ebp,esi
  414aa0:	push   ebp
  414aa1:	lea    edi,[eax-0x9]
  414aa4:	pop    esi
  414aa5:	imul   ebx,DWORD PTR [ebp+0x4e],0xaa2672de
  414aac:	(bad)  
  414aad:	sti    
  414aae:	js     0x414ae8
  414ab0:	jne    0x414b0a
  414ab2:	adc    DWORD PTR ds:0x92767717,esi
  414ab8:	and    BYTE PTR [edi-0x5c],bh
  414abb:	adc    eax,edi
  414abd:	cmp    ebp,0x23948145
  414ac3:	into   
  414ac4:	sbb    eax,0x8b5892e3
  414ac9:	sahf   
  414aca:	stos   DWORD PTR es:[edi],eax
  414acb:	mov    eax,ds:0x6178b26a
  414ad0:	sbb    edi,0x1bf136c4
  414ad6:	lahf   
  414ad7:	jae    0x414afd
  414ad9:	out    0xe,eax
  414adb:	mov    BYTE PTR [ecx+edi*2+0x4ec6ad96],dh
  414ae2:	xor    al,0xc9
  414ae4:	add    edx,DWORD PTR [esi]
  414ae6:	jns    0x414a82
  414ae8:	mov    ds:0xe0674026,al
  414aed:	lea    ebp,[eax+0x6ed43e82]
  414af3:	fcomp  DWORD PTR [edx]
  414af5:	push   0xffffffa1
  414af7:	push   cs
  414af8:	pop    ecx
  414af9:	cli    
  414afa:	or     eax,0x1da551b6
  414aff:	pop    esp
  414b00:	adc    BYTE PTR [edi],bl
  414b02:	repnz or DWORD PTR [ebx-0x7d],0x72
  414b07:	mov    dl,0x2
  414b09:	je     0x414ab1
  414b0b:	mov    dh,0x39
  414b0d:	cmp    eax,0x69f4a934
  414b12:	or     eax,0x7c071704
  414b17:	or     ebx,ecx
  414b19:	in     eax,dx
  414b1a:	ret    0x4c88
  414b1d:	call   0x6dc:0xe2a0cde7
  414b24:	pop    esp
  414b25:	call   0x7f46:0x7087bece
  414b2c:	shl    BYTE PTR [ebx],0xd6
  414b2f:	std    
  414b30:	add    dh,BYTE PTR [edi-0x484c8935]
  414b36:	es mov ch,0x88
  414b39:	pop    ebp
  414b3a:	ins    DWORD PTR es:[edi],dx
  414b3b:	lea    ebx,[ebp-0x36]
  414b3e:	loopne 0x414b1f
  414b40:	(bad)  
  414b41:	(bad)  
  414b42:	mov    esi,0xfef87f25
  414b47:	jmp    0x6116157a
  414b4c:	adc    BYTE PTR [esi],bh
  414b4e:	into   
  414b4f:	xchg   ecx,eax
  414b50:	jle    0x414ba8
  414b52:	xchg   ebx,eax
  414b53:	test   esi,edi
  414b55:	add    eax,0xecf0b247
  414b5a:	sub    BYTE PTR [ecx-0x17eea574],0xf
  414b61:	push   es
  414b62:	and    eax,edx
  414b64:	aas    
  414b65:	int3   
  414b66:	fadd   DWORD PTR [ecx+0xe]
  414b69:	pop    es
  414b6a:	add    DWORD PTR [eax+0x4],edi
  414b6d:	xor    BYTE PTR [edx+0x34cbee12],ah
  414b73:	xchg   ebx,eax
  414b74:	es sbb eax,0x2473941b
  414b7a:	setne  ch
  414b7d:	jp     0x414be0
  414b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b80:	mov    esi,0x8fa22baa
  414b85:	sbb    eax,0x4d4163bb
  414b8a:	(bad)  
  414b8b:	shl    BYTE PTR [ebx+edi*2+0x49c742cb],0x7a
  414b93:	add    eax,0xaabbdd8a
  414b98:	inc    eax
  414b99:	mov    dl,0x43
  414b9b:	fdiv   DWORD PTR [ecx-0x11]
  414b9e:	mov    ch,BYTE PTR [edi]
  414ba0:	ins    BYTE PTR es:[edi],dx
  414ba1:	mov    eax,DWORD PTR [ecx+esi*2]
  414ba4:	xor    al,0x38
  414ba6:	sub    bh,BYTE PTR [edx-0x36e9f9cb]
  414bac:	add    BYTE PTR [esi+ecx*1-0x8],0x29
  414bb1:	mov    ch,0x20
  414bb3:	xor    eax,0x1b18779b
  414bb8:	loope  0x414b5c
  414bba:	add    dl,BYTE PTR [eax-0x36]
  414bbd:	test   BYTE PTR [ecx-0x15],al
  414bc0:	adc    eax,0x1c87a8ff
  414bc5:	mov    eax,ds:0x71acb534
  414bca:	pop    esp
  414bcb:	je     0x414c46
  414bcd:	mov    al,0x2
  414bcf:	sbb    ecx,DWORD PTR ds:0x75162407
  414bd5:	push   esi
  414bd6:	sti    
  414bd7:	sub    al,0x8f
  414bd9:	push   esi
  414bda:	jp     0x414bd6
  414bdc:	jmp    FWORD PTR [edx+0x65]
  414bdf:	cmp    ebx,DWORD PTR [edx-0x52]
  414be2:	imul   ecx,DWORD PTR [edx-0x70],0xd
  414be6:	add    eax,0xebcd4ed8
  414beb:	sbb    BYTE PTR [edi-0x6e],bl
  414bee:	in     al,dx
  414bef:	out    dx,eax
  414bf0:	adc    al,0xee
  414bf2:	popa   
  414bf3:	ja     0x414bd1
  414bf5:	mov    bh,BYTE PTR [eax+0x48]
  414bf8:	out    dx,eax
  414bf9:	mov    eax,ds:0x3dbf5417
  414bfe:	pop    ss
  414bff:	mov    ebp,0x2b163a6d
  414c04:	cmc    
  414c05:	mov    eax,0x46c9f651
  414c0a:	sub    ah,BYTE PTR [ebp+0x24eb196b]
  414c10:	cmc    
  414c11:	repnz xor BYTE PTR [esp+eax*2+0x7c97f7f4],0x7a
  414c1a:	inc    ecx
  414c1b:	sub    edi,DWORD PTR [edx]
  414c1d:	xchg   edi,eax
  414c1e:	xor    esp,DWORD PTR [esp+ebp*8]
  414c21:	fcomp  QWORD PTR [ebx+edi*8]
  414c24:	scas   al,BYTE PTR es:[edi]
  414c25:	sbb    ecx,ecx
  414c27:	js     0x414c9b
  414c29:	mov    ebp,0xbbf90be3
  414c2e:	push   eax
  414c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c30:	int3   
  414c31:	popf   
  414c32:	sbb    DWORD PTR [eax-0x1b2eacec],edx
  414c38:	cdq    
  414c39:	inc    ebx
  414c3a:	pop    ebp
  414c3b:	mov    ah,0x77
  414c3d:	shl    DWORD PTR [edx],1
  414c3f:	xchg   esp,eax
  414c40:	dec    edx
  414c41:	dec    esp
  414c42:	sub    al,0xc1
  414c44:	mov    eax,DWORD PTR [eax]
  414c46:	fs pop ss
  414c48:	stos   BYTE PTR es:[edi],al
  414c49:	cmp    eax,0xb11b7fc7
  414c4e:	add    ch,ch
  414c50:	call   0x7b72e2bd
  414c55:	jge    0x414c8d
  414c57:	adc    BYTE PTR [ebx+0x15],ah
  414c5a:	or     esp,DWORD PTR [ecx-0x6384ef9e]
  414c60:	adc    bl,BYTE PTR ds:0x3245f002
  414c66:	sar    DWORD PTR [eax+0x754b0d4],cl
  414c6c:	addr16 dec esp
  414c6e:	loop   0x414bf4
  414c70:	ins    BYTE PTR es:[edi],dx
  414c71:	pop    esi
  414c72:	cmp    dh,BYTE PTR ds:0xfbecda79
  414c78:	cli    
  414c79:	std    
  414c7a:	mov    edx,0x96263313
  414c7f:	inc    eax
  414c80:	inc    esp
  414c81:	cmp    eax,0xf1eab89b
  414c86:	aad    0x8c
  414c88:	xchg   esi,eax
  414c89:	xchg   DWORD PTR [di+0x43],esi
  414c8d:	fdiv   DWORD PTR [edx]
  414c8f:	ffreep st(1)
  414c91:	outs   dx,BYTE PTR ds:[esi]
  414c92:	push   ebx
  414c93:	lock push edi
  414c95:	sbb    eax,0x427ecf49
  414c9a:	cld    
  414c9b:	test   eax,ebp
  414c9d:	adc    DWORD PTR [eax+0x36],ebx
  414ca0:	jns    0x414c6c
  414ca2:	mov    ebp,0xa52e0571
  414ca7:	pop    eax
  414ca8:	inc    ebx
  414ca9:	jb     0x414c76
  414cab:	mov    WORD PTR [ecx+0x63e4a264],fs
  414cb1:	fimul  WORD PTR [eax]
  414cb3:	lds    esi,FWORD PTR [ecx]
  414cb5:	imul   edx,DWORD PTR [edi+ebp*4-0x3b],0x17
  414cba:	push   ecx
  414cbb:	add    DWORD PTR [ecx],0x5325c581
  414cc1:	out    0xfb,al
  414cc3:	imul   ebp,edi,0x64
  414cc6:	test   esp,0x1606b54d
  414ccc:	jb     0x414cef
  414cce:	push   0x893c0923
  414cd3:	pop    esp
  414cd4:	sub    BYTE PTR [edx-0xe72b239],bl
  414cda:	lock lds ebp,FWORD PTR cs:[eax]
  414cde:	jne    0x414d59
  414ce0:	pop    ss
  414ce1:	out    dx,al
  414ce2:	lods   al,BYTE PTR ds:[esi]
  414ce3:	int3   
  414ce4:	test   eax,0x794350dc
  414ce9:	out    dx,al
  414cea:	bound  ebx,QWORD PTR [edx+0x30]
  414ced:	out    0x70,al
  414cef:	pop    ds
  414cf0:	mov    ecx,0xe27aab9d
  414cf6:	mul    DWORD PTR [edx+eiz*8-0x37]
  414cfa:	(bad)  
  414cfb:	out    dx,al
  414cfc:	mov    ds:0x24856a8c,eax
  414d01:	xchg   esi,eax
  414d02:	in     al,0xb6
  414d04:	adc    eax,DWORD PTR [ebx+0x5]
  414d07:	loopne 0x414d54
  414d09:	xchg   BYTE PTR [ebx],ah
  414d0b:	and    BYTE PTR [edi-0x9],bh
  414d0e:	into   
  414d0f:	inc    esi
  414d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d11:	lods   eax,DWORD PTR ds:[esi]
  414d12:	iret   
  414d13:	aaa    
  414d14:	lods   eax,DWORD PTR ds:[esi]
  414d15:	sub    bh,BYTE PTR [eax+0x78]
  414d18:	sub    al,0x43
  414d1a:	push   edx
  414d1b:	ins    BYTE PTR es:[edi],dx
  414d1c:	pop    ds
  414d1d:	ja     0x414cc4
  414d1f:	push   eax
  414d20:	add    eax,0x2250143b
  414d25:	shr    BYTE PTR [eax+0x2f560ea3],0x15
  414d2c:	(bad)  
  414d2d:	out    dx,al
  414d2e:	mov    ah,0x7f
  414d30:	jp     0x414d4f
  414d32:	lods   al,BYTE PTR ds:[esi]
  414d33:	call   0xeada:0x6a88b139
  414d3a:	and    BYTE PTR [esp+eiz*4-0x5c3cd564],dl
  414d41:	jge    0x414db8
  414d43:	ja     0x414d08
  414d45:	dec    esi
  414d46:	popa   
  414d47:	dec    edx
  414d48:	idiv   dh
  414d4a:	div    DWORD PTR [eax]
  414d4c:	into   
  414d4d:	sub    DWORD PTR [edi+ebx*8-0x552aa749],0xf0c8a8d3
  414d58:	cmp    ebp,ecx
  414d5a:	stc    
  414d5b:	fistp  WORD PTR [edi]
  414d5d:	out    dx,eax
  414d5e:	mov    edi,0x737140d4
  414d63:	and    esp,DWORD PTR ds:0xc750c139
  414d69:	int    0xd
  414d6b:	lock loope 0x414dc7
  414d6e:	(bad)  
  414d6f:	sub    eax,0xf02e13a9
  414d74:	xor    edi,DWORD PTR [edx-0x3489d063]
  414d7a:	dec    esi
  414d7b:	cmp    DWORD PTR [eax+eax*8-0x2b],ebx
  414d7f:	ss loope 0x414df1
  414d82:	mov    ch,0xc
  414d84:	mov    ch,0xd6
  414d86:	pop    edx
  414d87:	dec    ebp
  414d88:	fxch   st(0)
  414d8a:	jg     0x414d1f
  414d8c:	sti    
  414d8d:	and    DWORD PTR [esi-0x108b2ccc],ebx
  414d93:	ja     0x414d3d
  414d95:	into   
  414d96:	cdq    
  414d97:	mov    ebp,0xcf077066
  414d9c:	fdivr  DWORD PTR [ebx+0x6a]
  414d9f:	in     eax,dx
  414da0:	add    esp,DWORD PTR [ebx-0x7995dc8d]
  414da6:	cdq    
  414da7:	xor    eax,0x705fd488
  414dac:	repz mov edx,esp
  414daf:	push   edi
  414db0:	cmc    
  414db1:	test   BYTE PTR [ecx+0x5b],cl
  414db4:	mov    dh,0xda
  414db6:	jle    0x414dde
  414db8:	test   al,0x38
  414dba:	lahf   
  414dbb:	sub    BYTE PTR [esi+ebp*2-0x2d],dl
  414dbf:	outs   dx,BYTE PTR ds:[esi]
  414dc0:	fcomp  DWORD PTR [esi-0x407d72cb]
  414dc7:	enter  0xa4f8,0xf5
  414dcb:	xchg   ebx,eax
  414dcc:	ret    
  414dcd:	int    0x22
  414dcf:	ret    0x8f99
  414dd2:	cmp    dh,BYTE PTR [eax+0x3c]
  414dd5:	jl     0x414dc9
  414dd7:	ror    BYTE PTR [ebx+0x63],cl
  414dda:	ret    
  414ddb:	cld    
  414ddc:	(bad)  
  414ddd:	imul   ebp,DWORD PTR [ebx-0x336f2bec],0x11
  414de4:	or     ah,BYTE PTR ds:0x8e42e954
  414dea:	jge    0x414e52
  414dec:	mov    dh,0xb8
  414dee:	(bad)  
  414def:	pop    ebx
  414df0:	inc    ebx
  414df1:	int    0x80
  414df3:	das    
  414df4:	xchg   BYTE PTR [edi],al
  414df6:	cwde   
  414df7:	cmp    edi,DWORD PTR [eax+0x22]
  414dfa:	fmul   DWORD PTR [eax-0x6a]
  414dfd:	pop    edi
  414dfe:	mov    ds:0x29043a5d,eax
  414e03:	jne    0x414e1c
  414e05:	xor    bl,BYTE PTR [esp+edi*2-0x18dd1d29]
  414e0c:	sub    ebx,ebx
  414e0e:	jns    0x414e71
  414e10:	jmp    0x414e8a
  414e12:	cmc    
  414e13:	jno    0x414dea
  414e15:	nop
  414e16:	inc    ecx
  414e17:	cmp    ch,BYTE PTR [ecx-0x6f]
  414e1a:	inc    ebx
  414e1b:	fdiv   st,st(6)
  414e1d:	and    BYTE PTR [ebp+0x43],dh
  414e20:	out    0x83,eax
  414e22:	mov    eax,0x508da8d8
  414e27:	jmp    0x35392133
  414e2c:	idiv   BYTE PTR [ebx]
  414e2e:	out    0xa8,al
  414e30:	xor    edx,DWORD PTR [ecx-0x4291b2ba]
  414e36:	test   al,0xa9
  414e38:	popa   
  414e39:	inc    edi
  414e3a:	pop    eax
  414e3b:	sti    
  414e3c:	inc    ebx
  414e3d:	fisubr DWORD PTR [edi+0x37acdab9]
  414e43:	in     al,dx
  414e44:	(bad)  
  414e45:	jo     0x414eb9
  414e47:	cmc    
  414e48:	xchg   ebp,eax
  414e49:	aam    0xf5
  414e4b:	sahf   
  414e4c:	inc    ebx
  414e4d:	sub    eax,DWORD PTR ds:0xd81c00d9
  414e53:	js     0x414e83
  414e55:	lock fcmove st,st(4)
  414e58:	rol    DWORD PTR [ebp+0x21],cl
  414e5b:	inc    ebx
  414e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e5d:	fsub   QWORD PTR [eax+0x38]
  414e60:	stos   DWORD PTR es:[edi],eax
  414e61:	add    al,0x35
  414e63:	scas   eax,DWORD PTR es:[edi]
  414e64:	mov    ecx,0xa7b535e
  414e69:	add    eax,0x48e67a06
  414e6e:	rcr    DWORD PTR [ecx],1
  414e70:	lds    ecx,FWORD PTR [edi]
  414e72:	sti    
  414e73:	sbb    BYTE PTR [eax+0x4020dbb0],dh
  414e79:	aam    0xc9
  414e7b:	data16 arpl WORD PTR [eax-0x1],di
  414e7f:	popa   
  414e80:	cmp    esi,0xffffff84
  414e83:	js     0x414e8e
  414e85:	mov    ebx,0x56e5d4ab
  414e8a:	push   eax
  414e8b:	out    dx,eax
  414e8c:	cmp    esi,edi
  414e8e:	push   ebp
  414e8f:	pop    esi
  414e90:	jns    0x414eea
  414e92:	inc    ebp
  414e93:	adc    ah,BYTE PTR [esi+0x19da1e15]
  414e99:	cmp    cl,BYTE PTR [eax-0x13f71fca]
  414e9f:	lods   eax,DWORD PTR ds:[esi]
  414ea0:	ror    DWORD PTR [ecx-0x2f],0x2e
  414ea4:	add    al,0x31
  414ea6:	es jns 0x414e74
  414ea9:	cmp    eax,0x8c93d457
  414eae:	xchg   DWORD PTR [ecx+0x76c5ffb9],esi
  414eb4:	mov    ds:0xef0b24d5,eax
  414eb9:	stos   BYTE PTR es:[edi],al
  414eba:	inc    ebp
  414ebb:	cwde   
  414ebc:	mov    edx,0xd110fb40
  414ec1:	div    edi
  414ec3:	inc    esp
  414ec4:	imul   dl
  414ec6:	inc    esp
  414ec7:	clc    
  414ec8:	dec    esp
  414ec9:	add    BYTE PTR [ecx-0x1c],0x42
  414ecd:	call   0x318c7b8a
  414ed2:	xor    eax,DWORD PTR [ebx+ebx*8+0x5b]
  414ed6:	jno    0x414f21
  414ed8:	dec    edx
  414ed9:	jg     0x414f37
  414edb:	(bad)  
  414edc:	adc    al,0xb5
  414ede:	hlt    
  414edf:	std    
  414ee0:	std    
  414ee1:	in     al,0x79
  414ee3:	cmp    eax,DWORD PTR [ecx+0x7a]
  414ee6:	sbb    esp,DWORD PTR [edx+0x3f]
  414ee9:	ret    0x45f2
  414eec:	lahf   
  414eed:	aam    0xe3
  414eef:	and    ebp,DWORD PTR [edi]
  414ef1:	pop    ecx
  414ef2:	mov    esp,eax
  414ef4:	jecxz  0x414e9c
  414ef6:	sub    dh,BYTE PTR [edx+0x23]
  414ef9:	loope  0x414e9a
  414efb:	rcr    BYTE PTR [edi-0x194df4e6],0x3b
  414f02:	xor    BYTE PTR [edi-0x3e766347],bl
  414f08:	cs clc 
  414f0a:	sub    edi,DWORD PTR [esi-0x49]
  414f0d:	cmp    eax,0x12b2b6b7
  414f12:	leave  
  414f13:	mov    cs,edi
  414f15:	aad    0x7
  414f17:	adc    DWORD PTR [eax+edx*2+0x509317a],ebp
  414f1e:	sbb    DWORD PTR [edi+0x36befaea],ebp
  414f24:	sub    eax,0x39adc0ad
  414f29:	pop    ebx
  414f2a:	dec    ecx
  414f2b:	fsub   QWORD PTR [edx-0x67076f8c]
  414f31:	cmc    
  414f32:	sub    al,0x77
  414f34:	inc    ecx
  414f35:	scas   eax,DWORD PTR es:[edi]
  414f36:	sar    edi,0xb3
  414f39:	and    al,0x1c
  414f3b:	data16 icebp 
  414f3d:	xchg   DWORD PTR [edx],ecx
  414f3f:	mov    DWORD PTR [ebp+0x2b],edi
  414f42:	jmp    0x7696a498
  414f47:	xchg   esp,eax
  414f48:	xchg   edi,eax
  414f49:	sub    BYTE PTR [edx],dl
  414f4b:	ja     0x414ed9
  414f4d:	(bad)  
  414f4f:	int    0x4a
  414f51:	jbe    0x414f83
  414f53:	mov    ch,0xf7
  414f55:	clc    
  414f56:	add    al,0x67
  414f58:	cmp    dh,bl
  414f5a:	add    bl,BYTE PTR [edi+0x29]
  414f5d:	add    eax,0xfbbc8aff
  414f62:	add    DWORD PTR [ebx],esp
  414f64:	jo     0x414f13
  414f66:	add    ch,BYTE PTR [ebp+esi*8-0x612bf56c]
  414f6d:	imul   ebx,DWORD PTR [edx],0xb376caa2
  414f73:	ret    0xc7f3
  414f76:	int    0x9a
  414f78:	retf   
  414f79:	shr    BYTE PTR [edx+edi*4],0x3
  414f7d:	xor    BYTE PTR [ecx+0xc],0x96
  414f81:	mov    esp,0xe2496afa
  414f86:	fdivr  QWORD PTR [edi-0x70]
  414f89:	mov    edx,0xacf6cc8e
  414f8e:	cli    
  414f8f:	xchg   ebx,eax
  414f90:	popa   
  414f91:	dec    ecx
  414f92:	aam    0x87
  414f94:	cli    
  414f95:	repz iret 
  414f97:	push   ebp
  414f98:	pop    edx
  414f99:	stc    
  414f9a:	cs push eax
  414f9c:	pusha  
  414f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f9e:	imul   ecx,DWORD PTR [edi-0x4df3042e],0xffffffa0
  414fa5:	sbb    esi,DWORD PTR [edi]
  414fa7:	nop
  414fa8:	mov    edi,0x266a72d7
  414fad:	mov    cl,BYTE PTR [edx]
  414faf:	and    al,0xf2
  414fb1:	dec    edi
  414fb2:	in     eax,0x16
  414fb4:	cmp    cl,ah
  414fb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fb7:	pop    ss
  414fb8:	pushf  
  414fb9:	stc    
  414fba:	mov    al,ds:0x603a3637
  414fbf:	push   0x3a
  414fc1:	mov    dh,0x79
  414fc3:	adc    ecx,eax
  414fc5:	shl    edx,1
  414fc7:	repz add eax,0xf834bd97
  414fcd:	repz push ebp
  414fcf:	ror    DWORD PTR [eax-0x31b2ce6c],1
  414fd5:	or     DWORD PTR [edi+0xf],esp
  414fd8:	cmp    DWORD PTR [edx-0x77099746],eax
  414fde:	dec    esi
  414fdf:	mov    ecx,esi
  414fe1:	retf   0x1abb
  414fe4:	fdiv   st(2),st
  414fe6:	xchg   edi,eax
  414fe7:	and    BYTE PTR [ecx+esi*4-0x45],ah
  414feb:	xor    DWORD PTR [ebx+ebp*8],edx
  414fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fef:	test   edx,edi
  414ff1:	outs   dx,BYTE PTR ds:[esi]
  414ff2:	xchg   edx,eax
  414ff3:	pushf  
  414ff4:	sub    BYTE PTR [eax+0xe],dl
  414ff7:	aad    0x71
  414ff9:	adc    DWORD PTR [edx+ebx*2-0x51],edx
  414ffd:	jge    0x414f96
  414fff:	les    eax,FWORD PTR [ebx+ebp*1]
  415002:	sbb    DWORD PTR [eax-0x32cd02b5],esi
  415008:	ret    0xba43
  41500b:	mov    gs,WORD PTR [edx+ebp*4+0x1f]
  41500f:	outs   dx,BYTE PTR ds:[esi]
  415010:	(bad)  
  415011:	sbb    esp,esp
  415013:	inc    ebx
  415014:	aam    0xf3
  415016:	sbb    eax,edx
  415018:	or     eax,0xf9b1215b
  41501d:	aam    0x35
  41501f:	pop    ss
  415020:	popf   
  415021:	inc    edx
  415022:	xchg   ebx,eax
  415023:	sbb    al,0x6b
  415025:	inc    esi
  415026:	gs popa 
  415028:	xor    edx,DWORD PTR [esi-0x6c]
  41502b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41502c:	nop
  41502d:	pop    ss
  41502e:	mov    esi,0xdcf2955e
  415033:	jecxz  0x415042
  415035:	inc    ebp
  415036:	into   
  415037:	jae    0x41505e
  415039:	fild   DWORD PTR [ebp+0x63ab2427]
  41503f:	gs ds clc 
  415042:	jl     0x415041
  415044:	mov    ecx,0x575ee501
  415049:	call   FWORD PTR [edi+0x65]
  41504c:	mov    ds:0x2797a7bc,al
  415051:	cmp    ecx,DWORD PTR [eax]
  415053:	fstp   QWORD PTR [edx-0x5f]
  415056:	rol    BYTE PTR [di-0x58f9],0x44
  41505c:	(bad)  
  41505d:	jmp    0xca25ca03
  415062:	repnz iret 
  415064:	push   edx
  415065:	icebp  
  415066:	push   esp
  415067:	arpl   ax,sp
  415069:	cdq    
  41506a:	sbb    BYTE PTR [edi],bh
  41506c:	cmp    dh,BYTE PTR [esi+0x53708805]
  415072:	mov    ch,0x15
  415074:	xchg   edi,eax
  415075:	jb     0x415068
  415077:	stos   DWORD PTR es:[edi],eax
  415078:	call   FWORD PTR [ebx-0x47]
  41507b:	sti    
  41507c:	and    esp,ebp
  41507e:	sub    WORD PTR [esi],di
  415081:	jae    0x4150e2
  415083:	sub    eax,DWORD PTR [esp+ebp*8-0x22]
  415087:	adc    ebx,ebx
  415089:	add    al,0xeb
  41508b:	iret   
  41508c:	jmp    0x5502231f
  415091:	add    BYTE PTR [bx+di],ah
  415094:	and    al,0x71
  415096:	je     0x415064
  415098:	sub    edi,DWORD PTR [eax+0x704042cf]
  41509e:	xor    esp,ebx
  4150a0:	jo     0x41508f
  4150a2:	inc    ebp
  4150a3:	bnd jmp 0xdd25463b
  4150a9:	stos   DWORD PTR es:[edi],eax
  4150aa:	(bad)  
  4150ab:	ret    0x9e5c
  4150ae:	dec    esi
  4150af:	pop    ds
  4150b0:	xchg   DWORD PTR [ecx],edi
  4150b2:	fmul   st(0),st
  4150b4:	add    BYTE PTR [ecx],0x2d
  4150b7:	add    al,0x65
  4150b9:	inc    ebx
  4150ba:	sub    dh,BYTE PTR [eax-0x4a]
  4150bd:	aam    0x5b
  4150bf:	cmp    al,0xfe
  4150c1:	sbb    BYTE PTR [eax],ah
  4150c3:	loop   0x4150a8
  4150c5:	das    
  4150c6:	and    BYTE PTR [ebx+ebp*4+0x23affc4f],dh
  4150cd:	xor    DWORD PTR [ecx+0x1f],0x2214ae71
  4150d4:	mov    eax,0xb03921f3
  4150d9:	(bad)  
  4150da:	rcr    eax,cl
  4150dc:	sub    eax,DWORD PTR [ebp-0x590498b7]
  4150e2:	push   0xb40cbdc1
  4150e7:	push   ebp
  4150e8:	sub    esi,esi
  4150ea:	fistp  WORD PTR [ecx+0x28]
  4150ed:	aad    0xb
  4150ef:	mov    fs,edi
  4150f1:	ins    DWORD PTR es:[edi],dx
  4150f2:	xlat   BYTE PTR ds:[ebx]
  4150f3:	or     eax,0x9c379a8
  4150f8:	pop    edx
  4150f9:	faddp  st(7),st
  4150fb:	cmp    BYTE PTR [edi+0x36efb656],al
  415101:	push   esi
  415102:	mov    ds:0x202cfce9,eax
  415107:	ins    BYTE PTR es:[edi],dx
  415108:	pop    ebp
  415109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41510a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41510b:	pop    ebp
  41510c:	lds    edx,FWORD PTR [eax+0x698305e0]
  415112:	add    eax,0x59ccbfa4
  415117:	xchg   esp,eax
  415118:	xchg   ecx,eax
  415119:	dec    eax
	...
  415122:	push   ebx
  415123:	inc    edx
  415124:	or     DWORD PTR [ecx+ebx*1-0x2a100801],edi
  41512b:	pop    eax
  41512c:	cdq    
  41512d:	shl    ebx,0xd9
  415130:	addr16 loop 0x41518e
  415133:	push   ebx
  415134:	add    DWORD PTR [eax],eax
  415136:	and    BYTE PTR [edi],al
  415138:	add    BYTE PTR [eax],al
  41513a:	stos   BYTE PTR es:[edi],al
  41513b:	mov    eax,ds:0xd981b2ac
  415140:	sub    BYTE PTR [ecx+0x31],bl
  415143:	cmc    
  415144:	int    0xd2
  415146:	xchg   dh,al
  415148:	mov    ah,0x2a
  41514a:	cmp    eax,0x87f5a2a2
  41514f:	dec    ebx
  415150:	retf   
  415151:	and    dl,BYTE PTR [edi+0x38]
  415154:	xchg   ebx,eax
  415155:	es mov ebx,0x6228ae4f
  41515b:	cmp    DWORD PTR [ecx-0x72],esp
  41515e:	lgs    ebx,FWORD PTR [esi]
  415161:	fsub   st(2),st
  415163:	je     0x415137
  415165:	ins    BYTE PTR es:[edi],dx
  415166:	pop    esp
  415167:	ds xor al,0xcb
  41516a:	xor    DWORD PTR [edx],ebx
  41516c:	jge    0x4151b4
  41516e:	mov    bh,0x35
  415170:	inc    edi
  415171:	sub    BYTE PTR [edi+0x7c552810],dl
  415177:	xchg   ecx,eax
  415178:	or     bl,BYTE PTR [ebp+0x6b]
  41517b:	(bad)  
  41517c:	repnz data16 sub dl,BYTE PTR [edx]
  415180:	out    0x90,eax
  415182:	fidivr WORD PTR [ebp+0x4f]
  415185:	mov    ecx,0x41d95468
  41518a:	jnp    0x41518f
  41518c:	popf   
  41518d:	fnstsw WORD PTR [edi+0x14]
  415190:	imul   eax,edi,0x15
  415193:	xor    eax,0xfe18db51
  415198:	icebp  
  415199:	xor    BYTE PTR [esi+0x1fb426cc],0x85
  4151a0:	push   esp
  4151a1:	sbb    al,0x6f
  4151a3:	lods   al,BYTE PTR ds:[esi]
  4151a4:	pop    esi
  4151a5:	add    bl,dh
  4151a7:	push   ecx
  4151a8:	cmp    eax,0xd7150c3b
  4151ad:	or     al,0xc7
  4151af:	fadd   DWORD PTR [ecx-0x72]
  4151b2:	shr    DWORD PTR [esi-0x7a],cl
  4151b5:	mov    ebp,0x2bc8a999
  4151ba:	pop    esi
  4151bb:	mov    edx,0x49d9882e
  4151c0:	(bad)  
  4151c1:	pop    ebp
  4151c2:	inc    edx
  4151c3:	inc    esi
  4151c4:	mov    eax,ds:0xb5b35e1c
  4151c9:	push   0x6d
  4151cb:	(bad)  
  4151cc:	imul   BYTE PTR [esi+0x0]
  4151cf:	pcmpgtd mm6,mm3
  4151d2:	ds jae 0x415182
  4151d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151d6:	push   ebp
  4151d7:	sbb    DWORD PTR [edx+0x6],ebx
  4151da:	cmp    BYTE PTR [edx],al
  4151dc:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151de:	out    dx,al
  4151df:	pushw  es
  4151e1:	(bad)  
  4151e2:	scas   al,BYTE PTR es:[edi]
  4151e3:	mov    bh,0x2f
  4151e5:	mul    DWORD PTR [esi-0x21]
  4151e8:	fmul   st(0),st
  4151ea:	fs pusha 
  4151ec:	xchg   esp,eax
  4151ed:	push   0x3c39cea1
  4151f2:	inc    ecx
  4151f3:	fninit 
  4151f5:	or     al,0x2
  4151f7:	ror    BYTE PTR [esi-0x3774c67],0x1f
  4151fe:	fdivr  DWORD PTR [edx-0x6]
  415201:	sub    esi,DWORD PTR [ecx-0x22e297ac]
  415207:	lods   eax,DWORD PTR ds:[esi]
  415208:	ror    BYTE PTR [ebp*1+0x20b112f3],0xc2
  415210:	xchg   esi,eax
  415211:	cdq    
  415212:	mov    ebp,0xc8b7a2c0
  415217:	and    ah,BYTE PTR [ebx-0x2a]
  41521a:	js     0x4151e0
  41521c:	stos   BYTE PTR es:[edi],al
  41521d:	jle    0x4151b4
  41521f:	jne    0x415283
  415221:	sbb    bh,bh
  415223:	lods   al,BYTE PTR ds:[esi]
  415224:	out    0x65,eax
  415226:	imul   edi,esp,0xcaa636ca
  41522c:	enter  0x6423,0xb8
  415230:	cwde   
  415231:	inc    edx
  415232:	sbb    eax,0xdffcb7b2
  415237:	mov    fs,edi
  415239:	add    BYTE PTR ds:0xa08b516,ch
  41523f:	inc    edi
  415240:	iret   
  415241:	fs push esp
  415243:	push   0xffffffd5
  415245:	inc    edx
  415246:	and    BYTE PTR ds:0xd8c3f913,bh
  41524c:	pop    es
  41524d:	and    BYTE PTR [eax],0x2e
  415250:	lahf   
  415251:	mov    cl,0x8e
  415253:	mov    dl,ah
  415255:	fsubr  st(2),st
  415257:	cld    
  415258:	sbb    bh,BYTE PTR [ebp-0x1ee7ed62]
  41525e:	in     al,0x3f
  415260:	inc    ecx
  415261:	fiadd  WORD PTR [eax]
  415263:	popf   
  415264:	mov    ch,0xe9
  415266:	mov    ch,0x11
  415268:	cmp    eax,0xb8a9ff55
  41526d:	aas    
  41526e:	pop    esp
  41526f:	cli    
  415270:	jne    0x41523d
  415272:	inc    esp
  415273:	add    cl,dl
  415275:	fs mov ch,0x3e
  415278:	and    al,0x6f
  41527a:	nop
  41527b:	addr16 dec ebx
  41527d:	ffreep st(3)
  41527f:	loopne 0x4152a2
  415281:	mov    ds:0xfbb21e56,eax
  415286:	shl    BYTE PTR [ecx-0x6d5a4a28],cl
  41528c:	adc    eax,0x277d6576
  415291:	fadd   DWORD PTR [esi+0x41]
  415294:	pop    esi
  415295:	js     0x41523b
  415297:	pop    es
  415298:	push   ebp
  415299:	out    dx,eax
  41529a:	bound  edi,QWORD PTR [eax+0x26892e9c]
  4152a0:	cmp    DWORD PTR [esp+edx*1+0x6323c55e],eax
  4152a7:	sub    DWORD PTR [edi-0x3cd77ec3],0x7aa453e9
  4152b1:	ds loope 0x415260
  4152b4:	pop    ss
  4152b5:	mov    WORD PTR [esp+eax*8-0x66],ds
  4152b9:	out    dx,al
  4152ba:	cmp    eax,DWORD PTR [eax-0x5]
  4152bd:	test   BYTE PTR [ebx],cl
  4152bf:	xor    BYTE PTR [ebx],dl
  4152c1:	sbb    BYTE PTR [ecx-0x60],dh
  4152c4:	or     DWORD PTR [ebx-0x3c],ebp
  4152c7:	mov    ch,0x96
  4152c9:	inc    eax
  4152ca:	mov    ebp,0x4d540750
  4152cf:	pop    eax
  4152d0:	add    DWORD PTR [ecx+0x5bca568],esp
  4152d6:	leave  
  4152d7:	xchg   edi,eax
  4152d8:	js     0x41529f
  4152da:	and    DWORD PTR [esi-0x33aed30d],esi
  4152e0:	pop    ebp
  4152e1:	xor    eax,0xb47f795e
  4152e6:	and    DWORD PTR [edi-0x38],ebx
  4152e9:	call   0x848:0x6d7b315b
  4152f0:	jg     0x41529d
  4152f2:	rol    bl,0xfd
  4152f5:	in     eax,0x18
  4152f7:	or     cl,BYTE PTR [ebx]
  4152f9:	pop    eax
  4152fa:	fwait
  4152fb:	popa   
  4152fc:	int3   
  4152fd:	icebp  
  4152fe:	mov    ah,al
  415300:	ret    0x3f43
  415303:	mov    DWORD PTR [esi+0x17],ecx
  415306:	out    dx,al
  415307:	push   edx
  415308:	cmp    ah,bh
  41530a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41530b:	xchg   ebp,eax
  41530c:	not    BYTE PTR [esi-0x58]
  41530f:	fild   DWORD PTR [eax]
  415311:	jp     0x415384
  415313:	add    ecx,DWORD PTR [ecx+0x34]
  415316:	xor    dh,BYTE PTR [ecx+0x51]
  415319:	inc    esp
  41531a:	shl    DWORD PTR [ebp+edx*4-0x6b],0x5d
  41531f:	test   ecx,esi
  415321:	jge    0x4152bc
  415323:	scas   eax,DWORD PTR es:[edi]
  415324:	cmp    edx,DWORD PTR [ebx+0x39]
  415327:	test   ecx,ebx
  415329:	nop
  41532a:	mov    edi,0x3b2cb5c3
  41532f:	jbe    0x4152bc
  415331:	and    eax,0xc06bc6c7
  415336:	cmp    al,0x45
  415338:	and    al,0xfd
  41533a:	ror    cl,0x9e
  41533d:	in     al,0x14
  41533f:	aad    0xf4
  415341:	loope  0x41532d
  415343:	dec    esi
  415344:	aas    
  415345:	adc    ebx,eax
  415347:	mov    DWORD PTR [eax-0x8469bf5],ebp
  41534d:	clc    
  41534e:	fimul  WORD PTR [ebx]
  415350:	cwde   
  415351:	jecxz  0x4152f6
  415353:	cmc    
  415354:	adc    dl,bl
  415356:	xchg   esi,eax
  415357:	shl    cl,0xae
  41535a:	cmp    DWORD PTR [ebp-0x46bf33ee],edx
  415360:	adc    eax,0xcb905939
  415365:	popf   
  415366:	(bad)  
  415367:	push   DWORD PTR [ebx+edx*2+0x54]
  41536b:	sbb    BYTE PTR [ebx-0x1497ff1a],dh
  415371:	cmp    eax,0x868743a4
  415376:	push   cs
  415377:	and    bh,BYTE PTR es:[ecx+0x6e]
  41537b:	jge    0x4153b5
  41537d:	retf   0x8dd5
  415380:	inc    ebp
  415381:	mov    esp,0x30cc9d1
  415386:	pop    ebx
  415387:	jp     0x4153ab
  415389:	dec    ecx
  41538a:	(bad)  
  41538b:	aaa    
  41538c:	fadd   QWORD PTR [esi]
  41538e:	push   eax
  41538f:	xchg   edi,eax
  415390:	and    al,0xa0
  415392:	rcr    edi,0x8f
  415395:	(bad)  [edi]
  415397:	fild   WORD PTR [ecx+0x344b2885]
  41539d:	inc    ebx
  41539e:	lock imul eax,DWORD PTR [edx+0x70aa4cbe],0x7682a990
  4153a9:	mov    DWORD PTR [ebp-0x67],ecx
  4153ac:	sub    DWORD PTR [ecx],eax
  4153ae:	sbb    edi,DWORD PTR [ecx-0x4da827b]
  4153b4:	adc    ah,0x3
  4153b7:	xor    eax,0x7cbd927a
  4153bc:	dec    ebp
  4153bd:	pop    eax
  4153be:	jae    0x41542b
  4153c0:	mov    bh,0x55
  4153c2:	xor    eax,0x58297fdf
  4153c7:	mov    eax,0xd00b0890
  4153cc:	adc    BYTE PTR [esi],ch
  4153ce:	jge    0x4153fc
  4153d0:	in     al,0x3c
  4153d2:	or     al,0xe9
  4153d4:	scas   al,BYTE PTR es:[edi]
  4153d5:	jb     0x415381
  4153d7:	sbb    esp,DWORD PTR ds:0xf0d86ea0
  4153dd:	cmp    cl,BYTE PTR [ecx-0xd17b5fa]
  4153e3:	xchg   esp,eax
  4153e4:	rol    DWORD PTR [edi-0x49],cl
  4153e7:	mov    bh,0xea
  4153e9:	outs   dx,BYTE PTR ds:[esi]
  4153ea:	inc    ebp
  4153eb:	hlt    
  4153ec:	jbe    0x415447
  4153ee:	push   ds
  4153ef:	cmp    eax,0xd5f77233
  4153f4:	aas    
  4153f5:	mov    al,ds:0xb9b11a67
  4153fa:	ds xchg edx,eax
  4153fc:	xor    BYTE PTR [eax],0x9c
  4153ff:	pop    es
  415400:	(bad)  
  415401:	fsubrp st(5),st
  415403:	inc    esp
  415404:	sahf   
  415405:	mov    ds:0x60392da3,eax
  41540a:	iret   
  41540b:	or     edx,DWORD PTR ds:0xdd59d611
  415411:	cmc    
  415412:	cdq    
  415413:	scas   al,BYTE PTR es:[edi]
  415414:	mov    al,0xa6
  415416:	mov    eax,ds:0x2712ecf3
  41541b:	shl    BYTE PTR ds:0x3df172f8,cl
  415421:	add    eax,0x6031070f
  415426:	adc    eax,0x893a7225
  41542b:	das    
  41542c:	test   eax,0xd58decfa
  415431:	rol    BYTE PTR [esi-0x4f662b14],0x8e
  415438:	xor    DWORD PTR [edx-0x53da3780],esi
  41543e:	mov    BYTE PTR [ebx+0x22],cl
  415441:	mov    dh,0xfe
  415443:	hlt    
  415444:	test   DWORD PTR [ecx+eax*4+0x2adc6423],0xeddb1dd4
  41544f:	sbb    BYTE PTR [edi],0x45
  415452:	adc    al,0xa1
  415454:	add    ecx,DWORD PTR [eax+ecx*4]
  415457:	or     cl,ah
  415459:	pushf  
  41545a:	jmp    0x4154a5
  41545c:	fist   WORD PTR ds:0x366689c7
  415462:	mov    eax,ds:0xb78b731a
  415467:	pop    esp
  415468:	and    DWORD PTR [esi],ebx
  41546a:	test   DWORD PTR [edi-0x14],0xeabc5fca
  415471:	mov    eax,ds:0x91ab7de0
  415476:	mov    edi,0x14209d6a
  41547b:	mov    ds:0xf6bc776b,al
  415480:	jmp    0xdbd41001
  415485:	es iret 
  415487:	sbb    DWORD PTR [esi+0x23dc0349],esi
  41548d:	pop    ds
  41548e:	out    dx,al
  41548f:	and    edi,edi
  415491:	aam    0x29
  415493:	bnd jbe 0x4154e3
  415496:	xlat   BYTE PTR ds:[ebx]
  415497:	aas    
  415498:	sti    
  415499:	jp     0x4154e9
  41549b:	pusha  
  41549c:	nop
  41549d:	lods   al,BYTE PTR ds:[esi]
  41549e:	mov    al,0x91
  4154a0:	pop    edx
  4154a1:	jp     0x41543b
  4154a3:	sbb    BYTE PTR [ecx],ah
  4154a5:	adc    DWORD PTR [ecx-0x42],eax
  4154a8:	push   0xf6a6783f
  4154ad:	xchg   edx,eax
  4154ae:	pop    edx
  4154af:	pop    ebx
  4154b0:	mov    edx,0xebf95dc0
  4154b5:	fs out dx,al
  4154b7:	idiv   BYTE PTR [edi+ebp*4]
  4154ba:	cdq    
  4154bb:	add    DWORD PTR [esi+0x7cad37ac],ebp
  4154c1:	mov    esp,0xa9112ffd
  4154c6:	xor    ebx,DWORD PTR [ebx-0x6c]
  4154c9:	mov    esp,0x8adc8a92
  4154ce:	out    0x78,al
  4154d0:	pop    esp
  4154d1:	out    0x41,al
  4154d3:	cmp    BYTE PTR [eax+esi*2],bl
  4154d6:	mov    dl,0x32
  4154d8:	je     0x415525
  4154da:	test   al,0x79
  4154dc:	push   edx
  4154dd:	imul   esi,DWORD PTR [ebp-0x215cb84a],0xa22237d8
  4154e7:	sub    ebx,edx
  4154e9:	data16 fdivr QWORD PTR [ebx+0x5c]
  4154ed:	and    al,0xf6
  4154ef:	adc    al,0xa7
  4154f1:	shl    BYTE PTR [esi-0x3334aa34],0x64
  4154f8:	xchg   edx,eax
  4154f9:	ja     0x4154d7
  4154fb:	mov    esi,0xee9c935d
  415500:	outs   dx,BYTE PTR ds:[esi]
  415501:	ret    0x90d0
  415504:	mov    bh,0xd3
  415506:	dec    ebx
  415507:	mov    dh,0xc6
  415509:	int3   
  41550a:	stos   BYTE PTR es:[edi],al
  41550b:	mov    ecx,0x8ab0c1a2
  415510:	jl     0x4154d6
  415512:	int3   
  415513:	cmc    
  415514:	adc    ah,BYTE PTR [esi-0x23]
  415517:	or     BYTE PTR [edi],dh
  415519:	inc    ebx
  41551a:	or     dl,BYTE PTR [eax-0x4e]
  41551d:	inc    ecx
  41551e:	inc    ecx
  41551f:	xchg   esp,eax
  415520:	je     0x415572
  415522:	(bad)  
  415523:	inc    DWORD PTR ds:0x747a5ae5
  415529:	daa    
  41552a:	mov    ds:0xc7bb2fea,eax
  41552f:	pop    ebp
  415530:	repnz inc esp
  415532:	add    al,0xa6
  415534:	push   ecx
  415535:	jb     0x4154de
  415537:	push   es
  415538:	inc    ecx
  415539:	lods   eax,DWORD PTR ds:[esi]
  41553a:	jle    0x4155aa
  41553c:	add    eax,0x2f5eadc5
  415541:	pop    ss
  415542:	xlat   BYTE PTR ds:[ebx]
  415543:	daa    
  415544:	jl     0x4155b9
  415546:	ficom  WORD PTR [edi+eiz*8+0x7e2481c5]
  41554d:	call   0x4a18:0x9d33368f
  415554:	pop    DWORD PTR [ebx]
  415556:	arpl   WORD PTR [ebx-0x33],bx
  415559:	mov    WORD PTR [esi],gs
  41555b:	pop    edi
  41555c:	mov    WORD PTR [ecx],gs
  41555e:	dec    edi
  41555f:	outs   dx,BYTE PTR fs:[esi]
  415561:	sub    BYTE PTR [edx+0x6dd8b8a6],al
  415567:	into   
  415568:	hlt    
  415569:	je     0x415589
  41556b:	jbe    0x415526
  41556d:	gs cmp bh,dl
  415570:	mov    esi,?
  415572:	mov    bl,0xe7
  415574:	and    DWORD PTR [ecx-0x3a],esp
  415577:	add    ecx,ebp
  415579:	mov    BYTE PTR [esi-0x4a29c1ea],bl
  41557f:	stos   BYTE PTR es:[edi],al
  415580:	adc    al,0x22
  415582:	sti    
  415583:	lahf   
  415584:	cli    
  415585:	mov    ebx,0x9105a763
  41558a:	xchg   BYTE PTR [edi],ch
  41558c:	push   edi
  41558d:	aas    
  41558e:	mov    eax,0x42548f08
  415593:	or     eax,DWORD PTR [edx+0x6f8981b1]
  415599:	push   ds
  41559a:	push   ecx
  41559b:	les    ebx,FWORD PTR [edi]
  41559d:	and    DWORD PTR [edi],esp
  41559f:	outs   dx,BYTE PTR es:[esi]
  4155a1:	jno    0x415602
  4155a3:	xor    ebx,DWORD PTR [eax+0x19]
  4155a6:	push   eax
  4155a7:	mov    dl,0x80
  4155a9:	xchg   esp,eax
  4155aa:	mov    bh,0xb
  4155ac:	sub    DWORD PTR [ecx-0x42],0xffffffc5
  4155b0:	retf   
  4155b1:	sbb    eax,0x38984af7
  4155b6:	sbb    BYTE PTR [eax+0x2b],ch
  4155b9:	movlps QWORD PTR [ebx+0x35],xmm5
  4155bd:	lods   al,BYTE PTR ds:[esi]
  4155be:	pop    ebx
  4155bf:	mov    bl,0x1
  4155c1:	mov    bh,0xde
  4155c3:	aaa    
  4155c4:	sub    BYTE PTR [esi],dl
  4155c6:	jnp    0x41562d
  4155c8:	int3   
  4155c9:	push   edx
  4155ca:	pop    eax
  4155cb:	fs mov al,0x7c
  4155ce:	mov    ah,BYTE PTR [ebx]
  4155d0:	mov    ds:0x29b02b70,al
  4155d5:	jle    0x4155b7
  4155d7:	sub    edi,esi
  4155d9:	inc    eax
  4155da:	arpl   WORD PTR [esi*4-0xc93696],di
  4155e1:	mov    al,ds:0x61173c96
  4155e6:	cdq    
  4155e7:	out    dx,eax
  4155e8:	scas   al,BYTE PTR es:[edi]
  4155e9:	lods   al,BYTE PTR ds:[esi]
  4155ea:	xor    esp,DWORD PTR [ebp+0x4]
  4155ed:	xchg   DWORD PTR [ebp-0x776b2f3a],edx
  4155f3:	inc    ebx
  4155f5:	fdiv   QWORD PTR gs:[esi]
  4155f8:	cmp    al,0x13
  4155fa:	and    DWORD PTR [esi-0x24],esp
  4155fd:	jp     0x415643
  4155ff:	loopne 0x4155c9
  415601:	mov    ch,0x61
  415603:	pop    ss
  415604:	or     al,0x32
  415606:	and    ecx,DWORD PTR [ecx-0x7e067bfc]
  41560c:	shl    DWORD PTR [esi-0x603d494b],1
  415612:	xchg   esi,eax
  415613:	loope  0x415625
  415615:	imul   edi,DWORD PTR [esi-0x71],0x3
  415619:	adc    BYTE PTR [ecx],dh
  41561b:	push   edi
  41561c:	retf   
  41561d:	sbb    BYTE PTR [ebx],cl
  41561f:	retf   0xd573
  415622:	fld    DWORD PTR ss:[ecx-0x2c]
  415626:	fstp   st(1)
  415628:	stos   DWORD PTR es:[edi],eax
  415629:	mov    esp,0xd8c636ea
  41562e:	daa    
  41562f:	xchg   ecx,eax
  415630:	aam    0xbb
  415632:	jl     0x4155fd
  415634:	sub    al,0xe3
  415636:	test   DWORD PTR [esi],edx
  415638:	jmp    0x923b:0x23e83503
  41563f:	dec    BYTE PTR [edi+0xe]
  415642:	xor    al,bh
  415644:	xchg   ecx,eax
  415645:	shl    DWORD PTR ds:0xa1093a63,0x73
  41564c:	loope  0x41567a
  41564e:	adc    ebx,eax
  415650:	fs add al,0x89
  415653:	sbb    ebx,eax
  415655:	dec    edi
  415656:	ret    0x6d1e
  415659:	ret    
  41565a:	adc    BYTE PTR [edi+edi*2],0xa9
  41565e:	test   DWORD PTR [edx],esp
  415660:	fiadd  WORD PTR [edi+0x5155ccf1]
  415666:	sbb    eax,0xbb24ca20
  41566b:	add    al,0xf1
  41566d:	fadd   QWORD PTR [esi+0x1172da18]
  415673:	push   ebp
  415674:	dec    ecx
  415675:	mov    al,0x8f
  415677:	mov    edx,0xf5f6583f
  41567c:	push   edi
  41567d:	xchg   BYTE PTR [edx+0x49],al
  415680:	aas    
  415681:	aas    
  415682:	sub    DWORD PTR [edx+edx*2-0x18],ebx
  415686:	adc    al,0x54
  415688:	cmp    DWORD PTR [eax-0x36],edx
  41568b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41568c:	in     al,dx
  41568d:	sbb    esi,DWORD PTR [ebx]
  41568f:	shr    BYTE PTR fs:[ebx+0x22],1
  415693:	mov    es,WORD PTR [ebx-0x6b6691d3]
  415699:	adc    DWORD PTR [edi+ecx*1-0x56],edx
  41569d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41569e:	mov    esp,0x78f977c3
  4156a3:	fs mov ebx,0x18827692
  4156a9:	push   esp
  4156aa:	or     eax,0x984b83e
  4156af:	stc    
  4156b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156b1:	shl    edx,0x5a
  4156b4:	push   cs
  4156b5:	in     eax,dx
  4156b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156b7:	mov    dh,BYTE PTR [ebx]
  4156b9:	mov    dh,bh
  4156bb:	push   cs
  4156bc:	in     eax,dx
  4156bd:	rol    BYTE PTR [ebx],cl
  4156bf:	call   DWORD PTR [ebp-0x22588bbc]
  4156c5:	imul   esp,DWORD PTR [esi+0xa8c8db3],0x7964fba7
  4156cf:	xor    ecx,DWORD PTR [eax+0x7ca5ac7f]
  4156d5:	pop    esi
  4156d6:	add    eax,0x6acdb8c4
  4156db:	push   0x46
  4156dd:	add    esp,eax
  4156df:	out    0x1e,eax
  4156e1:	(bad)  
  4156e2:	in     al,dx
  4156e3:	or     esi,DWORD PTR [eax-0x56]
  4156e6:	inc    ecx
  4156e7:	cmp    eax,0x5e5dea6d
  4156ec:	pop    esp
  4156ed:	repz and ah,al
  4156f0:	iret   
  4156f1:	xchg   esp,eax
  4156f2:	fstp   TBYTE PTR [edx]
  4156f4:	(bad)  
  4156f5:	dec    ebp
  4156f6:	push   0x2b79a55e
  4156fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156fc:	pop    edi
  4156fd:	je     0x41571e
  4156ff:	xor    eax,DWORD PTR [edx-0x76]
  415702:	out    0x28,al
  415704:	xor    DWORD PTR [eax-0x3c466d85],eax
  41570a:	movaps xmm5,xmm3
  41570d:	shl    dh,cl
  41570f:	rcr    BYTE PTR [esi-0xfb0b2f9],cl
  415715:	ret    0x7053
  415718:	ins    BYTE PTR es:[edi],dx
  415719:	mov    ds:0x5adccedc,al
  41571e:	jmp    0xc650:0xe73c703f
  415725:	rcl    BYTE PTR ds:0x78d14360,cl
  41572b:	jg     0x4157ab
  41572d:	sahf   
  41572e:	inc    esi
  41572f:	or     al,0x1b
  415731:	dec    esp
  415732:	lds    edi,FWORD PTR [edx-0x23dc9377]
  415738:	sbb    ebx,0xffffff9e
  41573b:	nop
  41573c:	int3   
  41573d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41573e:	and    bh,BYTE PTR [eax+0x9]
  415741:	or     eax,0x7a2afd4d
  415746:	jmp    DWORD PTR [eax*1-0x404dcfbe]
  41574d:	(bad)  
  41574e:	push   0x44544f33
  415753:	sub    BYTE PTR [edx-0x7a8f827e],0x3a
  41575a:	outs   dx,DWORD PTR ds:[esi]
  41575b:	sbb    al,0xf7
  41575d:	mov    es,WORD PTR [edx+0x10bae308]
  415763:	in     al,dx
  415764:	push   0x29
  415766:	jmp    FWORD PTR [eax+0x35521854]
  41576c:	and    al,0x90
  41576e:	popa   
  41576f:	mov    esp,0x562c4187
  415774:	mov    ah,0xff
  415776:	xor    edx,DWORD PTR ds:0xd16a8f62
  41577c:	jle    0x4157bb
  41577e:	mov    al,0x35
  415780:	cmp    DWORD PTR [esi+ebp*4],edx
  415783:	mov    ebp,0x47fca206
  415788:	jl     0x4157ff
  41578a:	into   
  41578b:	pop    esi
  41578c:	push   eax
  41578d:	xor    BYTE PTR [ecx],dh
  41578f:	inc    eax
  415790:	shl    ebp,0x9f
  415793:	and    ecx,ecx
  415795:	xor    al,0xfc
  415797:	jl     0x415810
  415799:	mov    ds:0x325b8844,al
  41579e:	stc    
  41579f:	xor    BYTE PTR [edi+0x33fbe7f8],bl
  4157a5:	sub    eax,0x716ff242
  4157aa:	mov    bh,0x67
  4157ac:	outs   dx,DWORD PTR ds:[esi]
  4157ad:	sbb    bl,dh
  4157af:	push   edx
  4157b0:	(bad)  
  4157b1:	adc    BYTE PTR [ebp-0x6b870399],dl
  4157b7:	pop    edx
  4157b8:	iret   
  4157b9:	mov    al,ds:0xf7a9d46f
  4157be:	xchg   edx,eax
  4157bf:	xor    esp,DWORD PTR [ecx]
  4157c1:	pop    edx
  4157c2:	jns    0x415820
  4157c4:	mov    esi,cs
  4157c6:	adc    dh,0x20
  4157c9:	cmp    ebp,ebx
  4157cb:	dec    esi
  4157cc:	add    bh,BYTE PTR [esi]
  4157ce:	test   BYTE PTR [edx+0x6cc58bb4],dh
  4157d4:	hlt    
  4157d5:	aas    
  4157d6:	mov    al,0x16
  4157d8:	out    dx,eax
  4157d9:	test   ebx,ebx
  4157db:	add    ah,cl
  4157dd:	int    0xb
  4157df:	push   eax
  4157e0:	adc    BYTE PTR [edi+0x77],0x71
  4157e4:	jno    0x415773
  4157e6:	ds into 
  4157e8:	inc    ebx
  4157e9:	xor    ecx,esp
  4157eb:	inc    ecx
  4157ec:	mov    edi,0x24978316
  4157f1:	(bad)  
  4157f2:	cs jmp 0x415797
  4157f5:	retf   0xd894
  4157f8:	and    eax,0x967761a1
  4157fd:	repnz int3 
  4157ff:	cmp    edx,edi
  415801:	(bad)  
  415802:	xchg   edx,eax
  415803:	test   DWORD PTR [ebp+0x73],ebx
  415806:	das    
  415807:	pop    ebx
  415808:	arpl   WORD PTR [esi-0x5560bfdc],dx
  41580e:	or     al,0x83
  415810:	and    DWORD PTR [edx],esi
  415812:	out    0xfc,eax
  415814:	xor    BYTE PTR [ecx+0x1d],dl
  415817:	mov    ds:0x901c556,al
  41581c:	jl     0x41586b
  41581e:	pop    ebx
  41581f:	stos   BYTE PTR es:[edi],al
  415820:	test   DWORD PTR [ebx+0x2204ccae],esi
  415826:	or     BYTE PTR [edi+ecx*1-0x76],dh
  41582a:	call   edx
  41582c:	push   ecx
  41582d:	outs   dx,DWORD PTR ds:[esi]
  41582e:	mov    eax,ds:0xc47dbd98
  415833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415834:	out    dx,eax
  415835:	or     edi,0xbe525c5c
  41583b:	xchg   DWORD PTR [esi],esp
  41583d:	xchg   edi,eax
  41583e:	mov    cl,0x6f
  415840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415841:	mov    ecx,0x916ec8f3
  415846:	pop    esp
  415847:	rcl    esp,0x61
  41584a:	inc    ebx
  41584b:	mov    edi,0xd9ac1eae
  415850:	stos   BYTE PTR es:[edi],al
  415851:	xchg   esi,eax
  415852:	sbb    DWORD PTR [ebp+0x64],ebx
  415855:	repnz pop ebp
  415857:	mov    ebp,0x952f
  41585c:	add    BYTE PTR [eax],al
  41585e:	add    BYTE PTR [eax],al
  415860:	add    BYTE PTR [eax],al
  415862:	pop    ebp
  415863:	add    DWORD PTR [edx+0x7debdeea],0x4880e6b7
  41586d:	rol    BYTE PTR ds:0x7bfe114d,cl
  415873:	pop    edx
  415874:	add    DWORD PTR [eax],eax
  415876:	and    BYTE PTR [edi],al
  415878:	add    BYTE PTR [eax],al
  41587a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41587b:	ret    
  41587c:	fdivr  DWORD PTR ds:0xe2166156
  415882:	mov    dl,0xb0
  415884:	stc    
  415885:	outs   dx,DWORD PTR ds:[esi]
  415886:	pop    edi
  415887:	neg    ch
  415889:	shl    DWORD PTR [edi],cl
  41588b:	add    BYTE PTR [edi+0x7e34e42],ch
  415891:	inc    ebp
  415892:	rol    DWORD PTR [edi+0x21],0xf8
  415896:	add    esp,DWORD PTR [edi-0x1bd9aa9d]
  41589c:	jno    0x41582e
  41589e:	ja     0x4158e9
  4158a0:	jo     0x4158e7
  4158a2:	inc    ecx
  4158a3:	xor    al,BYTE PTR [ebp-0x772c57d0]
  4158a9:	imul   ecx,DWORD PTR [edx],0xf772ad03
  4158af:	pusha  
  4158b0:	popf   
  4158b1:	mov    ah,0xf
  4158b3:	pop    edi
  4158b4:	mov    ah,0x52
  4158b6:	outs   dx,DWORD PTR ds:[esi]
  4158b7:	mov    al,0x42
  4158b9:	xlat   BYTE PTR ds:[ebx]
  4158ba:	scas   eax,DWORD PTR es:[edi]
  4158bb:	or     DWORD PTR [edx+edx*8],0xe21491a2
  4158c2:	iret   
  4158c3:	and    ebx,ebx
  4158c5:	inc    ebp
  4158c6:	ficom  WORD PTR [eax+0x79]
  4158c9:	mov    esp,0xb0e821ed
  4158ce:	shl    DWORD PTR [esi-0x2d6001ae],1
  4158d4:	inc    esi
  4158d5:	jge    0x4158d3
  4158d7:	cvtdq2ps xmm5,XMMWORD PTR [edi-0x63]
  4158db:	push   ebx
  4158dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158dd:	ss (bad) 
  4158df:	mov    eax,0x1abe7f58
  4158e4:	(bad)  
  4158e5:	jle    0x41589e
  4158e7:	fistp  DWORD PTR [esi+ebp*2+0x6c]
  4158eb:	cmp    bl,BYTE PTR [edx]
  4158ed:	xor    dl,BYTE PTR [ebx-0x20a03592]
  4158f3:	fs iret 
  4158f5:	retf   0x8fb1
  4158f8:	xchg   esi,eax
  4158f9:	jae    0x41596e
  4158fb:	xor    DWORD PTR [ebp-0x3d8a8e62],edx
  415901:	xor    DWORD PTR fs:[esi],edx
  415904:	push   ds
  415905:	mov    ecx,0x474e1a53
  41590a:	sub    esi,edx
  41590c:	sahf   
  41590d:	fistp  DWORD PTR [ecx]
  41590f:	fnstsw WORD PTR [ebp-0x5a]
  415912:	mov    eax,ds:0xeef7bbe4
  415917:	jnp    0x41594c
  415919:	cmp    DWORD PTR [edi-0x77d81d2],ebx
  41591f:	adc    dl,BYTE PTR [ebp-0x58]
  415922:	clc    
  415923:	int3   
  415924:	push   ebx
  415925:	jmp    0xbd56976c
  41592a:	je     0x415967
  41592c:	pusha  
  41592d:	retf   0x45fb
  415930:	sbb    al,0xd7
  415932:	pop    esp
  415933:	outs   dx,DWORD PTR ds:[esi]
  415934:	in     eax,dx
  415935:	pusha  
  415936:	imul   esi,DWORD PTR [esi+0x7b8aade1],0x5a5b22c6
  415940:	cwde   
  415941:	outs   dx,BYTE PTR ds:[esi]
  415942:	ror    DWORD PTR [eax-0x742ae96f],1
  415948:	inc    esp
  415949:	pop    esi
  41594a:	xchg   edx,eax
  41594b:	jbe    0x415994
  41594d:	cmp    eax,0x93919e72
  415952:	xor    BYTE PTR [ebp-0x30f3e80b],dl
  415958:	or     al,0x38
  41595a:	retf   
  41595b:	loope  0x415933
  41595d:	outs   dx,BYTE PTR ds:[esi]
  41595e:	sub    ah,cl
  415960:	mov    al,ds:0x1dac2ae5
  415965:	aad    0xdc
  415967:	pop    ecx
  415968:	cmc    
  415969:	xor    dh,BYTE PTR [edx+0x27]
  41596c:	xchg   edi,eax
  41596d:	jo     0x41590b
  41596f:	test   eax,0x32a01f07
  415974:	mov    eax,0x682d1716
  415979:	xchg   BYTE PTR [ebx],dl
  41597b:	adc    eax,0xd9b27ef2
  415980:	daa    
  415981:	cdq    
  415982:	loop   0x415917
  415984:	popf   
  415985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415986:	jg     0x41593a
  415988:	jl     0x4159a1
  41598a:	fwait
  41598b:	clc    
  41598c:	fsubrp st(1),st
  41598e:	xlat   BYTE PTR ds:[ebx]
  41598f:	fwait
  415990:	adc    BYTE PTR [esp+ecx*4],al
  415993:	fwait
  415994:	pop    eax
  415995:	adc    BYTE PTR [ebp-0x38ab8ea5],ah
  41599b:	daa    
  41599c:	adc    edx,eax
  41599e:	xor    DWORD PTR [edi-0x4c],ecx
  4159a1:	sbb    eax,DWORD PTR [ecx]
  4159a3:	bound  esp,QWORD PTR [edx]
  4159a5:	add    dh,ah
  4159a7:	sub    al,0x5b
  4159a9:	jne    0x415a22
  4159ab:	loope  0x415a26
  4159ad:	je     0x415936
  4159af:	pop    edx
  4159b0:	aad    0x8e
  4159b2:	jbe    0x415980
  4159b4:	push   ss
  4159b5:	(bad)  
  4159b6:	int    0x5c
  4159b8:	or     eax,0x6c16c690
  4159bd:	ja     0x4159cb
  4159bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159c0:	mov    ecx,0x64d4270d
  4159c5:	pop    esp
  4159c6:	test   eax,0xe787b15e
  4159cb:	outs   dx,BYTE PTR ds:[esi]
  4159cc:	sub    al,0xe4
  4159ce:	jns    0x415950
  4159d0:	fild   DWORD PTR [ebx+edx*2+0x30d2976d]
  4159d7:	cmp    DWORD PTR ds:0xd4082a0e,ecx
  4159dd:	iret   
  4159de:	dec    BYTE PTR [ecx+0x32]
  4159e1:	or     BYTE PTR [esi],dl
  4159e3:	(bad)  
  4159e4:	adc    BYTE PTR [ecx+0x70494d76],0x1b
  4159eb:	adc    BYTE PTR [edx-0x464972b8],0xc9
  4159f2:	sbb    al,0x7f
  4159f4:	fst    QWORD PTR [eax+0x24]
  4159f7:	mov    edx,0x94d2cfde
  4159fc:	ret    
  4159fd:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4159ff:	retf   
  415a00:	inc    edx
  415a01:	scas   eax,DWORD PTR es:[edi]
  415a02:	inc    esi
  415a03:	out    0x8,al
  415a05:	xchg   BYTE PTR [ebp+0x8],dh
  415a08:	inc    esi
  415a09:	add    BYTE PTR [ecx+0x2cba7a3d],0x6e
  415a10:	or     eax,0x1
  415a13:	mov    ah,0x69
  415a15:	xor    al,al
  415a17:	and    dh,BYTE PTR [eax-0x4e968e8a]
  415a1d:	int3   
  415a1e:	add    BYTE PTR [ebx+0x28],cl
  415a21:	push   es
  415a22:	inc    ebx
  415a23:	jecxz  0x4159af
  415a25:	scas   al,BYTE PTR es:[edi]
  415a26:	(bad)  
  415a27:	dec    ecx
  415a28:	jbe    0x415a5e
  415a2a:	jmp    0x415a2d
  415a2c:	fmul   DWORD PTR [ebx+0x73]
  415a2f:	neg    BYTE PTR [esi]
  415a31:	sbb    cl,cl
  415a33:	dec    edi
  415a34:	sub    eax,0x1e5af470
  415a39:	shl    ecx,1
  415a3b:	ins    BYTE PTR es:[edi],dx
  415a3c:	loop   0x415a05
  415a3e:	mov    al,BYTE PTR [ebp-0x30122173]
  415a44:	imul   ecx,DWORD PTR [edi+0x0],0xc4f80b46
  415a4b:	push   0xffffffa5
  415a4d:	pop    ebx
  415a4e:	data16 test cl,0xae
  415a52:	push   edi
  415a53:	clc    
  415a54:	pop    ebx
  415a55:	or     eax,0x4624ef9f
  415a5a:	jno    0x415aa4
  415a5c:	sbb    ah,ch
  415a5e:	cmp    bh,BYTE PTR [esp+esi*2-0x38]
  415a62:	push   edx
  415a63:	lock outs dx,DWORD PTR ds:[esi]
  415a65:	shr    BYTE PTR [edx-0x1cf4dd33],0xf0
  415a6c:	stc    
  415a6d:	outs   dx,DWORD PTR ds:[esi]
  415a6e:	mov    ebx,0x6a7dc8cd
  415a73:	dec    ecx
  415a74:	jg     0x415a70
  415a76:	ror    BYTE PTR [edi],1
  415a78:	xchg   esp,eax
  415a79:	jg     0x415a7e
  415a7b:	shl    BYTE PTR [edi+0x71],cl
  415a7e:	jmp    0x78508dd2
  415a83:	mov    dl,BYTE PTR [edi-0x4250de3f]
  415a89:	xor    DWORD PTR [ecx+0x766df33c],ecx
  415a8f:	push   es
  415a90:	mov    esp,0xf5b1f4aa
  415a95:	jecxz  0x415a78
  415a97:	hlt    
  415a98:	pop    ss
  415a99:	div    eax
  415a9b:	repnz ss ins DWORD PTR es:[edi],dx
  415a9e:	push   esp
  415a9f:	into   
  415aa0:	imul   ebx,DWORD PTR [ebx],0x47b9f8a7
  415aa6:	shl    BYTE PTR [edx],1
  415aa8:	or     DWORD PTR [ebx+0x9],ecx
  415aab:	xor    al,0x49
  415aad:	dec    esi
  415aae:	aaa    
  415aaf:	jmp    0x9c4f:0xa13306e1
  415ab6:	mov    ds:0xc410c2ec,eax
  415abb:	jae    0x415aac
  415abd:	xor    al,0xd7
  415abf:	xchg   BYTE PTR [ebx+0x60c4ebe4],al
  415ac5:	and    eax,0xd138b2fe
  415aca:	jmp    0x4efe:0xe05bbbc4
  415ad1:	(bad)  
  415ad3:	pop    es
  415ad4:	leave  
  415ad5:	mov    ebp,0x7a1822d4
  415ada:	jnp    0x415a6c
  415adc:	sub    DWORD PTR [eax+0x54],esi
  415adf:	fmul   DWORD PTR [eax]
  415ae1:	lods   eax,DWORD PTR ds:[esi]
  415ae2:	test   bh,0x81
  415ae5:	leave  
  415ae6:	inc    ebx
  415ae7:	xchg   edi,eax
  415ae8:	in     eax,dx
  415ae9:	outs   dx,BYTE PTR ds:[esi]
  415aea:	push   ebx
  415aeb:	sbb    edx,DWORD PTR [ebx+ebx*4+0xefad931]
  415af2:	mov    cl,ah
  415af4:	out    0xda,eax
  415af6:	pop    ss
  415af7:	das    
  415af8:	test   eax,0xd79f0bcb
  415afd:	aad    0x50
  415aff:	pop    ebx
  415b00:	clc    
  415b01:	cmc    
  415b02:	in     eax,dx
  415b03:	cmp    cl,BYTE PTR [ebp-0x6a]
  415b06:	outs   dx,DWORD PTR ds:[esi]
  415b07:	jmp    0xe53984fa
  415b0c:	mov    ah,0xd4
  415b0e:	adc    BYTE PTR [ebx],0xda
  415b11:	mov    cl,0x4a
  415b13:	inc    DWORD PTR [esi+esi*8-0xb060401]
  415b1a:	push   esp
  415b1b:	inc    edx
  415b1c:	ret    0xe19f
  415b1f:	xlat   BYTE PTR ds:[ebx]
  415b20:	nop
  415b21:	(bad)  
  415b22:	mov    ebp,0x9867b2ae
  415b27:	out    0xe,eax
  415b29:	mov    cl,0x26
  415b2b:	fdivp  st(1),st
  415b2d:	jmp    0x415b68
  415b2f:	mov    ds,WORD PTR [ecx]
  415b31:	ret    0x9959
  415b34:	mov    ch,0x6b
  415b36:	into   
  415b37:	ret    0xeb77
  415b3a:	jns    0x415b89
  415b3c:	mov    bh,0x5f
  415b3e:	(bad)  
  415b40:	sub    al,0x35
  415b42:	jp     0x415b42
  415b44:	adc    BYTE PTR [ecx],0x33
  415b47:	sbb    eax,0xb64bada8
  415b4c:	daa    
  415b4d:	std    
  415b4e:	pop    ebp
  415b4f:	lahf   
  415b50:	std    
  415b51:	sahf   
  415b52:	mov    ecx,0xdb0a5968
  415b57:	xor    BYTE PTR [ecx+0x21688dc],0x28
  415b5e:	fild   WORD PTR [esi]
  415b60:	in     eax,0xe3
  415b62:	cdq    
  415b63:	inc    ebp
  415b64:	mov    cl,0xcd
  415b66:	stos   DWORD PTR es:[edi],eax
  415b67:	add    BYTE PTR [eax+0x465d26ba],cl
  415b6d:	cmc    
  415b6e:	add    eax,0xf289824
  415b73:	test   DWORD PTR [edx],0x86c404c0
  415b79:	or     DWORD PTR [ecx-0x70],0xf410f853
  415b80:	pop    ebp
  415b81:	pop    ss
  415b82:	ret    
  415b83:	inc    esi
  415b84:	xchg   ecx,eax
  415b85:	arpl   sp,si
  415b87:	xor    eax,0xbc6cc16a
  415b8c:	aam    0xd
  415b8e:	inc    ebx
  415b8f:	add    eax,0xd51d77af
  415b94:	sbb    DWORD PTR [esi-0x7bc37ba5],edi
  415b9a:	sbb    edx,DWORD PTR [ebx]
  415b9c:	gs xor esi,ecx
  415b9f:	iret   
  415ba0:	call   0xff7c:0xe514162
  415ba7:	sbb    DWORD PTR ds:0x85b24bdd,edi
  415bad:	out    dx,al
  415bae:	mov    bl,0x97
  415bb0:	dec    edi
  415bb1:	sub    esi,DWORD PTR [eax-0x74]
  415bb4:	sbb    al,0x1e
  415bb6:	lods   al,BYTE PTR ds:[esi]
  415bb7:	(bad)  
  415bb8:	loop   0x415bd0
  415bba:	push   edi
  415bbb:	jle    0x415bd4
  415bbd:	or     BYTE PTR [esi+0x34],bh
  415bc0:	mov    eax,0x7e15548f
  415bc5:	mov    DWORD PTR [eax-0x22430d7],eax
  415bcb:	xchg   esp,eax
  415bcc:	sub    BYTE PTR [ecx-0x46],dl
  415bcf:	int    0x8c
  415bd1:	fdivr  QWORD PTR ss:[edi-0x463761e2]
  415bd8:	(bad)  
  415bd9:	push   esp
  415bda:	into   
  415bdb:	pusha  
  415bdc:	fmul   QWORD PTR [esi]
  415bde:	cld    
  415bdf:	test   BYTE PTR [ecx],ch
  415be1:	jecxz  0x415c29
  415be3:	xchg   DWORD PTR [ebx-0x3ace7412],eax
  415be9:	dec    edi
  415bea:	xor    al,0x59
  415bec:	mov    WORD PTR [ecx],?
  415bee:	mov    edi,0x5fb0b463
  415bf3:	cmp    eax,0xa0aac7b6
  415bf8:	shl    dh,0x64
  415bfb:	je     0x415b81
  415bfd:	mov    ?,edi
  415bff:	fld    TBYTE PTR [edx+eiz*8-0xc44d11c]
  415c06:	push   ebp
  415c07:	and    DWORD PTR [ecx-0x1907831b],ebp
  415c0d:	sbb    BYTE PTR [edx+0x55],ch
  415c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c11:	aad    0x4c
  415c13:	inc    ebx
  415c14:	push   es
  415c15:	fimul  WORD PTR [ebp+edx*8-0x37]
  415c19:	dec    ecx
  415c1a:	daa    
  415c1b:	scas   eax,DWORD PTR es:[edi]
  415c1c:	(bad)  
  415c1d:	loop   0x415c00
  415c1f:	sbb    BYTE PTR [ebp-0x3a],bh
  415c22:	ins    DWORD PTR es:[edi],dx
  415c23:	or     DWORD PTR [ebx+edi*4],ecx
  415c26:	mov    ds:0x9bb0745a,al
  415c2b:	mov    ch,0x77
  415c2d:	dec    eax
  415c2e:	and    edx,eax
  415c30:	fcmove st,st(4)
  415c32:	js     0x415bc2
  415c34:	pusha  
  415c35:	add    edx,DWORD PTR [eax]
  415c37:	sbb    DWORD PTR [esi-0x25],edi
  415c3a:	or     al,0x9f
  415c3c:	sub    bl,BYTE PTR [eax+eax*1+0x5a50d847]
  415c43:	aaa    
  415c44:	xchg   ebp,eax
  415c45:	pop    esp
  415c46:	cmp    ebp,eax
  415c48:	jb     0x415bee
  415c4a:	pop    eax
  415c4b:	cmp    BYTE PTR [ebp-0x3c7df11c],ch
  415c51:	mov    WORD PTR es:[edx-0x1f],cs
  415c55:	dec    ebx
  415c56:	inc    esp
  415c57:	xchg   ebp,eax
  415c58:	gs sti 
  415c5a:	test   BYTE PTR [ebx+0x27],bh
  415c5d:	pop    ebp
  415c5e:	jl     0x415c93
  415c60:	fdiv   DWORD PTR [eax+0x3a]
  415c63:	pop    ss
  415c64:	jo     0x415c26
  415c66:	(bad)  
  415c67:	das    
  415c68:	add    al,0xb9
  415c6a:	jmp    0x3dbec236
  415c6f:	mov    al,ds:0xc46506d3
  415c74:	in     eax,0x96
  415c76:	mov    esp,0x379d4a5c
  415c7b:	pop    edi
  415c7c:	adc    eax,0xc4e1b40e
  415c81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c82:	push   ss
  415c83:	lods   eax,DWORD PTR ds:[esi]
  415c84:	sub    ah,BYTE PTR [ebx+ecx*8]
  415c87:	cmp    eax,0x1fccd687
  415c8c:	enter  0x8b00,0xc9
  415c90:	push   0x104c7c11
  415c95:	(bad)
  415c98:	sti    
  415c99:	pusha  
  415c9a:	(bad)  
  415c9b:	pop    edi
  415c9c:	mov    cl,bh
  415c9e:	enter  0x8b,0x2d
  415ca2:	adc    al,bl
  415ca4:	ds cmp eax,0xf22a835f
  415caa:	lods   al,BYTE PTR ds:[esi]
  415cac:	cwde   
  415cad:	pop    edx
  415cae:	sbb    ebp,eax
  415cb0:	or     ebp,ebx
  415cb2:	outs   dx,BYTE PTR ds:[esi]
  415cb3:	xchg   ebx,eax
  415cb4:	pop    edx
  415cb5:	push   cs
  415cb6:	mov    esp,0xe080c1a5
  415cbb:	pop    esi
  415cbc:	fmul   st(6),st
  415cbe:	lahf   
  415cbf:	mov    ch,BYTE PTR [eax+0x39]
  415cc2:	cs pop ss
  415cc4:	mov    dl,0x7
  415cc6:	sbb    BYTE PTR [eax],al
  415cc8:	dec    BYTE PTR [ebx+0x15]
  415ccb:	lods   al,BYTE PTR ds:[esi]
  415ccc:	xlat   BYTE PTR ds:[ebx]
  415ccd:	fidivr WORD PTR [esi-0x23329875]
  415cd3:	or     eax,0x563456dd
  415cd8:	fxch   st(3)
  415cda:	or     BYTE PTR [ebp-0x584b1548],dh
  415ce0:	add    eax,0x6eee8d19
  415ce5:	addr16 jl 0x415cda
  415ce8:	jnp    0x415cf6
  415cea:	loope  0x415c89
  415cec:	leave  
  415ced:	and    eax,0xadd30086
  415cf2:	pop    ecx
  415cf3:	inc    eax
  415cf4:	and    BYTE PTR [edx-0x5],cl
  415cf7:	or     al,0x27
  415cf9:	xchg   edx,eax
  415cfa:	xor    BYTE PTR [esi+0x59],ah
  415cfd:	cld    
  415cfe:	xchg   ebx,eax
  415cff:	dec    edx
  415d00:	or     BYTE PTR [ecx+0x17],ch
  415d03:	out    0x3c,al
  415d05:	sbb    bh,BYTE PTR [edx]
  415d07:	inc    esp
  415d08:	and    ch,BYTE PTR [ebx-0x57]
  415d0b:	in     al,dx
  415d0c:	jle    0x415cfe
  415d0e:	mov    ecx,0xc0ebcd0c
  415d13:	sub    eax,0x3c5bb28
  415d18:	icebp  
  415d19:	clc    
  415d1a:	inc    esp
  415d1b:	sub    DWORD PTR [ebp-0x6ee8fd23],0xffffffe3
  415d22:	std    
  415d23:	cmp    BYTE PTR [ebp+0x57],ch
  415d26:	ret    0xe05b
  415d29:	inc    eax
  415d2a:	or     al,0xb0
  415d2c:	mov    eax,0xf77d1295
  415d31:	sbb    BYTE PTR [ebx-0x7d],bh
  415d34:	sbb    bh,BYTE PTR [ecx+0x52]
  415d37:	js     0x415d33
  415d39:	push   ds
  415d3a:	icebp  
  415d3b:	xchg   ebx,eax
  415d3c:	fcmovbe st,st(5)
  415d3e:	push   ss
  415d3f:	mov    dh,0x59
  415d41:	repnz nop
  415d43:	sbb    edi,DWORD PTR [edi-0x76f5210a]
  415d49:	mov    ebx,edx
  415d4b:	retf   
  415d4c:	ds nop
  415d4e:	and    dh,BYTE PTR [esi-0x2d]
  415d51:	cmp    DWORD PTR [edx],edi
  415d53:	mov    al,ds:0x7db6a094
  415d58:	pop    es
  415d59:	hlt    
  415d5a:	shr    ecx,0xe2
  415d5d:	pop    DWORD PTR [edx-0x14]
  415d60:	mov    cl,0x8d
  415d62:	dec    ecx
  415d63:	out    0x8d,al
  415d65:	dec    eax
  415d66:	pusha  
  415d67:	mov    edx,0x90a7c9d2
  415d6c:	bound  eax,QWORD PTR [edi]
  415d6e:	sub    BYTE PTR [ebx],0x30
  415d71:	jb     0x415d39
  415d73:	sub    dl,BYTE PTR [esi]
  415d75:	mov    esp,0x5c9f2b81
  415d7b:	inc    ebp
  415d7c:	mov    ds:0xbfbddde1,al
  415d81:	aam    0xcb
  415d83:	fwait
  415d84:	hlt    
  415d85:	inc    ebx
  415d86:	rcl    bl,cl
  415d88:	pushf  
  415d89:	mov    dh,0x16
  415d8b:	pop    DWORD PTR [eax+0xc]
  415d8e:	push   eax
  415d8f:	jnp    0x415de4
  415d91:	mov    cl,0xc2
  415d93:	or     edx,esi
  415d95:	(bad)  
  415d96:	rol    dh,0x24
  415d99:	inc    esi
  415d9a:	push   0x71
  415d9c:	mov    ah,0x2b
  415d9e:	mov    ecx,0xce05a8b5
  415da3:	adc    edx,eax
  415da5:	add    BYTE PTR [esi+0x34a1ba01],bl
  415dab:	ss cli 
  415dad:	mov    BYTE PTR [ecx+0x45],dl
  415db0:	mov    esp,0x602221a8
  415db5:	inc    ebx
  415db6:	xlat   BYTE PTR ds:[ebx]
  415db7:	bound  edi,QWORD PTR [ecx+0x7]
  415dba:	lock out dx,al
  415dbc:	xor    dl,BYTE PTR [esi+0x1]
  415dbf:	ins    BYTE PTR es:[edi],dx
  415dc0:	stc    
  415dc1:	adc    DWORD PTR ds:0xc92587a,0x8ffbadbe
  415dcb:	mov    esp,0xb55ca008
  415dd0:	cdq    
  415dd1:	add    BYTE PTR [ecx-0x1bd4e217],ch
  415dd7:	mov    ds:0xd34cb5d3,al
  415ddc:	loopne 0x415dba
  415dde:	xchg   DWORD PTR [edi],edx
  415de0:	stos   BYTE PTR es:[edi],al
  415de1:	pop    ebp
  415de2:	push   ecx
  415de3:	(bad)  
  415de4:	hlt    
  415de5:	pop    esi
  415de6:	in     eax,0x43
  415de8:	dec    ebx
  415de9:	(bad)  [eax+ecx*8+0x1cc754ef]
  415df0:	out    0xcc,eax
  415df2:	jne    0x415dbe
  415df4:	sub    al,0x95
  415df6:	push   cs
  415df7:	test   BYTE PTR ds:[ebx-0x5813562c],0x98
  415dff:	lods   al,BYTE PTR ds:[esi]
  415e00:	mov    ?,WORD PTR ds:0xfe6343a4
  415e06:	inc    ebp
  415e07:	xchg   esp,eax
  415e08:	dec    ebp
  415e09:	mov    dh,0xac
  415e0b:	pop    es
  415e0c:	mov    esi,0x1dc58988
  415e11:	int    0x46
  415e13:	cmp    BYTE PTR [ecx],dl
  415e15:	cmp    BYTE PTR [ebp+0x18],dl
  415e18:	mov    ebx,0x2316bd0
  415e1d:	xor    DWORD PTR [eax+0x2d75863],edi
  415e23:	pushf  
  415e24:	scas   eax,DWORD PTR es:[edi]
  415e25:	mov    ebp,0x2962cb01
  415e2a:	push   esi
  415e2b:	jge    0x415e46
  415e2d:	cmc    
  415e2e:	pop    ebp
  415e2f:	hlt    
  415e30:	sub    al,0x7
  415e32:	add    eax,0x747745c
  415e37:	ss fwait
  415e39:	pop    esp
  415e3b:	cmp    BYTE PTR [esi+0x6a],dl
  415e3e:	or     al,0xa0
  415e40:	cwde   
  415e41:	rcr    BYTE PTR [eax+0x44],cl
  415e44:	jne    0x415eb7
  415e46:	and    eax,0x82e4cad6
  415e4b:	add    DWORD PTR [edi],esp
  415e4d:	fnstenv [esi-0x5]
  415e50:	xchg   edi,eax
  415e51:	xlat   BYTE PTR ds:[ebx]
  415e52:	hlt    
  415e53:	cwde   
  415e54:	mov    esp,0x56046a1a
  415e59:	and    BYTE PTR [ecx+0x41],ah
  415e5c:	or     eax,0x9914b06a
  415e61:	mov    ebp,0x5a7b38a7
  415e66:	jb     0x415de8
  415e68:	xchg   ebp,edx
  415e6a:	mov    al,0x98
  415e6c:	scas   al,BYTE PTR es:[edi]
  415e6d:	sub    BYTE PTR [edx+0x6b97d075],cl
  415e73:	push   esi
  415e74:	inc    esi
  415e75:	fldcw  WORD PTR [eax+eax*4+0x7b97eec8]
  415e7c:	dec    edx
  415e7d:	mov    al,0x76
  415e7f:	test   eax,0x858dd96c
  415e84:	xchg   esp,eax
  415e85:	cmc    
  415e86:	xchg   edi,eax
  415e87:	add    ebx,DWORD PTR [ecx+0x404ba40c]
  415e8d:	xorps  xmm1,XMMWORD PTR [ebx+0x23]
  415e91:	inc    eax
  415e92:	adc    al,0xbb
  415e94:	test   BYTE PTR [ebp+0x4b],bl
  415e97:	or     BYTE PTR [eax+ebx*1-0x57],0xdd
  415e9c:	pop    edx
  415e9d:	es call 0x2f7f7a49
  415ea3:	loope  0x415e7e
  415ea5:	fwait
  415ea6:	cdq    
  415ea7:	xchg   BYTE PTR [ebx+0x2c],ch
  415eaa:	test   eax,0x1e286197
  415eaf:	mov    al,0x54
  415eb1:	ins    BYTE PTR es:[edi],dx
  415eb2:	xor    esp,DWORD PTR [ecx]
  415eb4:	pop    esp
  415eb5:	or     esp,ebp
  415eb7:	(bad)  [edx]
  415eb9:	or     al,BYTE PTR [edx+0x6d55bb72]
  415ebf:	mov    bh,0x2d
  415ec1:	sbb    edx,DWORD PTR [ebx]
  415ec3:	mov    eax,0xff211200
  415ec8:	repnz pop esp
  415eca:	in     al,0x95
  415ecc:	out    dx,al
  415ecd:	mov    gs:0x28bef5d9,al
  415ed3:	daa    
  415ed4:	test   DWORD PTR es:0x3d8b22c9,0xa1db7c2d
  415edf:	add    eax,0xc6a60e87
  415ee4:	mov    ch,0x47
  415ee6:	les    edx,FWORD PTR [edx]
  415ee8:	mov    eax,ds:0xe88986b6
  415eed:	icebp  
  415eee:	lock cld 
  415ef0:	pop    ebp
  415ef1:	std    
  415ef2:	sar    DWORD PTR [eax+0x17c889eb],1
  415ef8:	aaa    
  415ef9:	fisubr DWORD PTR [esi+0x2f]
  415efc:	sbb    eax,DWORD PTR [eax]
  415efe:	jl     0x415e8f
  415f00:	nop
  415f01:	and    ah,BYTE PTR [esi]
  415f03:	add    eax,0xfcd506cc
  415f08:	push   ss
  415f09:	push   ss
  415f0a:	scas   eax,DWORD PTR es:[edi]
  415f0b:	pop    es
  415f0c:	repz and DWORD PTR es:[esi+0x27f6ae34],ebx
  415f14:	jnp    0x415f6d
  415f16:	bound  esp,QWORD PTR [ebx-0xf74c31c]
  415f1c:	xchg   ebx,eax
  415f1d:	sub    ecx,DWORD PTR [edi]
  415f1f:	inc    ebx
  415f20:	pop    ebp
  415f21:	fdivr  QWORD PTR [edi+ebp*1+0x47]
  415f25:	setg   ah
  415f28:	adc    DWORD PTR [esi+edi*4],0xffffffee
  415f2c:	clc    
  415f2d:	jne    0x415edf
  415f2f:	mov    ah,0x3d
  415f31:	pushf  
  415f32:	in     eax,0x88
  415f34:	and    al,0xf8
  415f36:	pop    ds
  415f37:	nop
  415f38:	shr    BYTE PTR [esp+ecx*2-0x21fa2d0f],0xe0
  415f40:	push   0xc60b6cf0
  415f45:	cli    
  415f46:	mov    DWORD PTR [edi],edi
  415f48:	dec    edx
  415f49:	(bad)  
  415f4a:	cmc    
  415f4b:	xor    esi,DWORD PTR [edi-0x4bd628dc]
  415f51:	imul   ebp,DWORD PTR [esi],0x7cb2f9e5
  415f57:	outs   dx,DWORD PTR ds:[esi]
  415f58:	add    DWORD PTR [bx+di],ebp
  415f5b:	pushf  
  415f5c:	scas   al,BYTE PTR es:[edi]
  415f5d:	(bad)  [edi*2+0x6fd63101]
  415f64:	adc    edi,ecx
  415f66:	pop    ss
  415f67:	xchg   edi,eax
  415f68:	xor    eax,0x3b2c7789
  415f6d:	shl    DWORD PTR [edi+esi*4],1
  415f70:	sub    BYTE PTR ds:[edx-0x6f07ff47],al
  415f77:	or     BYTE PTR [ebx+0x280472cc],dh
  415f7d:	popa   
  415f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f7f:	lods   al,BYTE PTR ds:[esi]
  415f80:	and    al,BYTE PTR [ecx-0x30]
  415f83:	dec    ebp
  415f84:	dec    DWORD PTR [edi+0x6735a99d]
  415f8a:	pop    ebx
  415f8b:	jne    0x415ff2
  415f8d:	jnp    0x415f61
  415f8f:	mov    edx,0x5f53b84c
  415f94:	jb     0x415f2c
  415f96:	or     eax,0x991298
  415f9b:	add    BYTE PTR [eax],al
  415f9d:	add    BYTE PTR [eax],al
  415f9f:	add    BYTE PTR [eax],al
  415fa1:	add    ch,ch
  415fa3:	jle    0x415f97
  415fa5:	ret    
  415fa6:	repz iret 
  415fa8:	std    
  415fa9:	jle    0x415f8a
  415fab:	loope  0x415fef
  415fad:	mov    al,0x8e
  415faf:	sbb    esp,DWORD PTR [edi+0x1619bc2]
  415fb5:	add    BYTE PTR [eax],ah
  415fb7:	pop    es
  415fb8:	add    BYTE PTR [eax],al
  415fba:	fmul   st,st(6)
  415fbc:	stos   BYTE PTR es:[edi],al
  415fbd:	inc    edx
  415fbe:	repz scas eax,DWORD PTR es:[edi]
  415fc0:	test   al,0x1f
  415fc2:	lds    esp,FWORD PTR [ebx]
  415fc4:	popa   
  415fc5:	add    eax,0x35b0912d
  415fca:	pop    edx
  415fcb:	push   eax
  415fcc:	cmp    BYTE PTR [esi+0x5],dh
  415fcf:	shl    BYTE PTR ds:0x4522179d,0x68
  415fd6:	push   0x2911ce70
  415fdb:	int3   
  415fdc:	push   ecx
  415fdd:	ret    
  415fde:	or     BYTE PTR [ecx+0x3b],ah
  415fe1:	adc    bl,BYTE PTR [eax+ebx*2-0xe]
  415fe5:	mov    bl,0x3b
  415fe7:	(bad)  
  415fe8:	clc    
  415fe9:	inc    ebp
  415fea:	popa   
  415feb:	outs   dx,BYTE PTR ds:[esi]
  415fec:	loop   0x41602a
  415fee:	jmp    0x1be07ce6
  415ff3:	data16 lahf 
  415ff5:	add    eax,0x32b3f49e
  415ffa:	in     al,dx
  415ffb:	and    eax,0x506ea46e
  416000:	adc    DWORD PTR [eax+0x7a],0xffffffe6
  416004:	outs   dx,BYTE PTR ds:[esi]
  416005:	xor    BYTE PTR [ebx+0x3a],ch
  416008:	and    eax,ecx
  41600a:	into   
  41600b:	jp     0x41607f
  41600d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41600e:	pop    eax
  41600f:	or     dl,0xfc
  416012:	sbb    eax,0x4afc189f
  416017:	rcl    BYTE PTR [esp+ebp*2],cl
  41601a:	fldcw  WORD PTR [eax+0x36]
  41601d:	push   ss
  41601e:	lea    esi,[edi]
  416020:	scas   eax,DWORD PTR es:[edi]
  416021:	jbe    0x416038
  416023:	and    BYTE PTR [ebp+0x16],cl
  416026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416027:	adc    DWORD PTR [eax+0x3e7f9fa8],0xb2bc0637
  416031:	dec    esp
  416032:	inc    eax
  416033:	std    
  416034:	dec    ebx
  416035:	in     eax,0x7a
  416037:	je     0x416023
  416039:	stos   DWORD PTR es:[edi],eax
  41603a:	mov    eax,0xdbd3d712
  41603f:	push   esi
  416040:	loop   0x41605a
  416042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416043:	in     eax,0x87
  416045:	enter  0x3629,0x3c
  416049:	dec    ebp
  41604a:	add    BYTE PTR [edx],0xbf
  41604d:	jbe    0x415ff9
  41604f:	push   cs
  416050:	jmp    0x4160b1
  416052:	and    ch,al
  416054:	xchg   BYTE PTR ds:0xb9a03395,cl
  41605a:	mov    dl,0xef
  41605c:	and    BYTE PTR [eax+esi*4],bh
  41605f:	call   0x9700:0xb64ffc9
  416066:	ins    DWORD PTR es:[edi],dx
  416067:	pop    edx
  416068:	inc    eax
  416069:	ret    0xf1c4
  41606c:	or     eax,0x1f1761f8
  416071:	sbb    al,0x22
  416073:	mov    ebp,0x48b048fa
  416078:	xor    ebx,DWORD PTR [eax-0x2f]
  41607b:	pop    ebp
  41607c:	sub    dl,BYTE PTR [ebp+eiz*2+0xc]
  416080:	out    0xa1,eax
  416082:	xor    eax,0x94a8c590
  416087:	push   0xffffffc5
  416089:	out    dx,eax
  41608a:	lahf   
  41608b:	repz sub DWORD PTR [edi-0x1eb29681],eax
  416092:	push   ss
  416093:	add    ecx,DWORD PTR [esi+0x17]
  416096:	sub    BYTE PTR [ebx-0x2c004059],cl
  41609c:	cmp    eax,0x5b16bad9
  4160a1:	xor    edx,edx
  4160a3:	popa   
  4160a4:	in     al,0x10
  4160a6:	jmp    0x4160e0
  4160a8:	in     al,dx
  4160a9:	mov    edx,0x5a5e422
  4160ae:	jnp    0x416057
  4160b0:	ror    esi,cl
  4160b2:	fwait
  4160b3:	(bad)  
  4160b4:	out    0x7f,eax
  4160b6:	mov    fs,WORD PTR [edi-0x7e]
  4160b9:	retf   
  4160ba:	fsub   QWORD PTR [eax-0x364b3c2b]
  4160c0:	test   al,0x10
  4160c2:	and    eax,0xb3174d0
  4160c7:	leave  
  4160c8:	ins    BYTE PTR es:[edi],dx
  4160c9:	stc    
  4160ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160cb:	push   edx
  4160cc:	cmp    al,0xf5
  4160ce:	jge    0x416149
  4160d0:	ret    0x253c
  4160d3:	fmul   QWORD PTR [edi]
  4160d5:	hlt    
  4160d6:	adc    ebx,DWORD PTR [ecx+0x3f61b020]
  4160dc:	add    eax,0xf21b7388
  4160e1:	xchg   ch,bl
  4160e3:	or     ch,cl
  4160e5:	lock test al,0x2e
  4160e8:	cs scas al,BYTE PTR es:[edi]
  4160ea:	rcr    DWORD PTR [esi],cl
  4160ec:	jae    0x4160e4
  4160ee:	xlat   BYTE PTR ds:[ebx]
  4160ef:	pop    ds
  4160f0:	cdq    
  4160f1:	loop   0x416144
  4160f3:	aad    0x83
  4160f5:	fst    QWORD PTR [eax-0x63]
  4160f8:	sbb    al,0x1f
  4160fa:	and    BYTE PTR [esp+eiz*4+0x5a63e470],bl
  416101:	enter  0xa362,0x34
  416105:	and    ebx,ecx
  416107:	mov    ds:0xed886514,eax
  41610c:	jge    0x416142
  41610e:	and    DWORD PTR [esi+0x726647ac],edi
  416114:	mov    bl,0x5e
  416116:	add    BYTE PTR [edx-0x1f],dl
  416119:	sti    
  41611a:	leave  
  41611b:	mov    ebx,0x91e8bd8d
  416120:	sti    
  416121:	sub    al,0x66
  416123:	inc    ebx
  416124:	idiv   DWORD PTR [eiz*8+0x5317bd21]
  41612b:	add    BYTE PTR [ecx+eax*8],bl
  41612e:	mov    bl,0x6
  416130:	int3   
  416131:	test   eax,0x896edeb5
  416136:	fist   WORD PTR [ebx-0x3f]
  416139:	jge    0x4161a6
  41613b:	in     eax,0x1c
  41613d:	sbb    eax,0x74ea2476
  416142:	push   ebx
  416143:	fisttp WORD PTR [esi-0x2e]
  416146:	lahf   
  416147:	daa    
  416148:	cmp    eax,0xaa9ba6d8
  41614d:	fwait
  41614e:	mov    dl,0xae
  416150:	pop    es
  416151:	mov    edx,0xa63cf4a2
  416156:	pop    ecx
  416157:	lahf   
  416158:	sub    esi,DWORD PTR [ecx+ecx*1+0x2a]
  41615c:	pop    eax
  41615d:	sbb    edx,esi
  41615f:	daa    
  416160:	popa   
  416161:	mov    bh,0xbb
  416163:	cmp    eax,0xcb7419b6
  416168:	jmp    DWORD PTR [ebx-0x61]
  41616b:	int    0x7d
  41616d:	shl    BYTE PTR ds:0x30c3e435,1
  416173:	xchg   DWORD PTR [edi+0x2adb238f],esi
  416179:	fisub  WORD PTR [eax+eiz*2+0x63ac3135]
  416180:	les    ecx,FWORD PTR [esi]
  416182:	dec    ecx
  416183:	adc    cl,dl
  416185:	and    ebp,edi
  416187:	psllw  mm1,mm6
  41618a:	mov    ecx,0x3115cb85
  41618f:	fild   DWORD PTR [edi-0x6c7fa08b]
  416195:	loope  0x416143
  416197:	jbe    0x416164
  416199:	mov    esi,0x7dcdb350
  41619e:	sbb    bh,BYTE PTR [ecx-0x1adca225]
  4161a4:	jmp    0x416209
  4161a6:	push   edi
  4161a7:	inc    ebx
  4161a8:	push   edi
  4161a9:	ins    BYTE PTR es:[edi],dx
  4161aa:	add    DWORD PTR [eax+eiz*1-0x18],ecx
  4161ae:	in     al,dx
  4161af:	mov    ?,WORD PTR [ebp-0x735e4604]
  4161b5:	mov    cl,0x9e
  4161b7:	or     DWORD PTR ds:0xfc548f05,edx
  4161bd:	imul   ecx,DWORD PTR [ebx-0x1ec4b5ee],0xffffffc2
  4161c4:	lahf   
  4161c5:	in     eax,dx
  4161c6:	jmp    0x41622f
  4161c8:	mov    ebx,0x2eff0d0c
  4161cd:	or     DWORD PTR [eax],ebp
  4161cf:	mov    dl,0xff
  4161d1:	out    0xd5,eax
  4161d3:	lock addr16 ja 0x416188
  4161d7:	imul   ebx,DWORD PTR [edx-0xc],0xb
  4161db:	inc    esp
  4161dc:	sar    DWORD PTR [edi],cl
  4161de:	xchg   DWORD PTR [esi+0x61abcf19],ebx
  4161e4:	jmp    0xb511:0x271ccee5
  4161eb:	fucomip st,st(2)
  4161ed:	xchg   ebx,eax
  4161ee:	dec    esp
  4161ef:	imul   BYTE PTR [edi+0x487195c7]
  4161f5:	push   esp
  4161f6:	popf   
  4161f7:	xchg   esi,eax
  4161f8:	sub    eax,0x43b38e91
  4161fd:	sar    BYTE PTR [ecx],cl
  4161ff:	or     eax,0xcd27f4be
  416204:	pop    edi
  416205:	rol    DWORD PTR [ebp-0x3d],1
  416208:	pop    ecx
  416209:	cwde   
  41620a:	out    0x57,eax
  41620c:	jle    0x416265
  41620e:	cld    
  41620f:	in     al,dx
  416210:	adc    eax,0xf8bdaff8
  416215:	or     al,BYTE PTR [ebx+0x43]
  416218:	jecxz  0x4161f2
  41621a:	dec    edx
  41621b:	xchg   BYTE PTR [eax+0x66],al
  41621e:	jle    0x4161b9
  416220:	pop    es
  416221:	xchg   ebp,eax
  416222:	test   DWORD PTR [ebp-0x5e],eax
  416225:	sbb    eax,edi
  416227:	dec    esi
  416228:	int3   
  416229:	xchg   edx,eax
  41622a:	out    0x8a,al
  41622c:	inc    eax
  41622d:	sti    
  41622e:	aam    0xd3
  416230:	mov    ch,0xa5
  416232:	int3   
  416233:	scas   eax,DWORD PTR es:[edi]
  416234:	mov    dh,0x3f
  416236:	call   0xec9f:0xb5ecba4f
  41623d:	mov    ebp,0xbad9c8ef
  416242:	mov    dh,0x3c
  416244:	inc    eax
  416245:	fs pop esp
  416247:	retf   
  416248:	lods   eax,DWORD PTR ds:[esi]
  416249:	sbb    BYTE PTR [ebx+0x6d],bh
  41624c:	mov    ebp,0x870040cb
  416251:	dec    esp
  416252:	inc    ecx
  416253:	ds mov ebp,0xde037f6e
  416259:	mov    ebp,0x98a0cd94
  41625e:	mov    ecx,DWORD PTR [esi]
  416260:	popa   
  416261:	pop    ebx
  416262:	and    dl,BYTE PTR cs:[edi]
  416265:	outs   dx,BYTE PTR ds:[esi]
  416266:	jl     0x4162da
  416268:	jle    0x4162e8
  41626a:	fnstsw WORD PTR [edx-0x3069dd2c]
  416270:	test   BYTE PTR [edx+esi*4+0x22],ch
  416274:	adc    BYTE PTR [ebx],cl
  416276:	fiadd  DWORD PTR [ecx]
  416278:	test   DWORD PTR [ebx+0x18],ebx
  41627b:	cmp    DWORD PTR [eax+0x47b7cfa0],ecx
  416281:	jmp    0xedad:0xf88dc1a7
  416288:	sub    eax,0xca1842da
  41628d:	mov    bl,BYTE PTR [ebp-0x2d]
  416290:	test   eax,0x2edd3247
  416295:	add    cl,0x44
  416298:	int3   
  416299:	cmp    dh,dh
  41629b:	stos   BYTE PTR es:[edi],al
  41629c:	push   ds
  41629d:	dec    ebp
  41629e:	test   DWORD PTR [esi],0xd17abaa4
  4162a4:	pushf  
  4162a5:	repnz pop ss
  4162a7:	mov    eax,ecx
  4162a9:	fwait
  4162aa:	mov    BYTE PTR [esi-0x22a46e9],al
  4162b0:	lahf   
  4162b1:	jnp    0x416251
  4162b3:	fwait
  4162b4:	inc    edx
  4162b5:	hlt    
  4162b6:	jns    0x4162e5
  4162b8:	xlat   BYTE PTR ds:[ebx]
  4162b9:	xor    esi,DWORD PTR [eax+0xf]
  4162bc:	aaa    
  4162bd:	push   ecx
  4162be:	lahf   
  4162bf:	adc    eax,0x4d2bd378
  4162c4:	addr16 push edx
  4162c6:	mov    ebp,0xd8c88943
  4162cb:	sbb    ebp,DWORD PTR [ebx-0x36129151]
  4162d1:	xor    ecx,DWORD PTR [ecx+ebx*8-0x52]
  4162d5:	or     BYTE PTR [edx+ebp*2-0x77],al
  4162d9:	ins    DWORD PTR es:[edi],dx
  4162da:	push   ebp
  4162db:	pop    ds
  4162dc:	fnsave [esi-0xf5289e8]
  4162e2:	rol    DWORD PTR [edx-0x74],0xc7
  4162e6:	push   cs
  4162e7:	and    eax,0xb13fd1ce
  4162ec:	inc    esp
  4162ed:	mov    esp,0x746665d3
  4162f2:	mov    ah,0x38
  4162f4:	push   eax
  4162f5:	jmp    0x2a3aa37e
  4162fa:	aaa    
  4162fb:	jbe    0x4162dd
  4162fd:	cmc    
  4162fe:	xchg   edi,eax
  4162ff:	and    al,BYTE PTR [eax]
  416301:	mov    ah,0x5b
  416303:	pushf  
  416304:	jb     0x4162db
  416306:	fist   WORD PTR [eax+eiz*1-0x14]
  41630a:	(bad)  
  41630b:	sbb    al,0xf9
  41630d:	ja     0x416329
  41630f:	add    ebp,ecx
  416311:	jo     0x4162b5
  416313:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  416315:	(bad)
  416318:	ja     0x4162f4
  41631a:	addr16 js 0x4162ad
  41631d:	fdivr  st(2),st
  41631f:	cmp    bl,BYTE PTR [ebx+0x1f]
  416322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416323:	ins    DWORD PTR es:[edi],dx
  416324:	in     al,dx
  416325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416326:	adc    DWORD PTR [edx+0x6f],eax
  416329:	cmc    
  41632a:	or     esp,DWORD PTR [edi-0x6]
  41632d:	aam    0x86
  41632f:	call   0xfa0dcf1b
  416334:	ret    0xacea
  416337:	and    ebx,DWORD PTR [eax]
  416339:	sbb    ecx,edx
  41633b:	in     eax,dx
  41633c:	mov    esp,0xe5a7f9b3
  416341:	shr    DWORD PTR [ecx+0x40],0x46
  416345:	mov    ds:0xb68ae672,al
  41634a:	cmp    edi,edx
  41634c:	or     esp,edi
  41634e:	lahf   
  41634f:	mov    ebp,0x3a6f9fd1
  416354:	gs jbe 0x416313
  416357:	mov    esi,0xb750d840
  41635c:	jnp    0x41637d
  41635e:	and    al,0xf1
  416360:	mov    ch,0xe7
  416362:	int    0x44
  416364:	mov    ebp,0x24b2e259
  416369:	ins    DWORD PTR es:[edi],dx
  41636a:	xor    bh,dh
  41636c:	fbstp  TBYTE PTR [eax]
  41636e:	adc    eax,0xe01e9fb
  416373:	push   es
  416374:	xor    edi,esp
  416376:	hlt    
  416377:	arpl   WORD PTR [edi+0x13],di
  41637a:	xor    DWORD PTR [edi+0x3e06f6a],ecx
  416380:	jecxz  0x416384
  416382:	sub    DWORD PTR [edx],ebx
  416384:	push   0x4ef719e7
  416389:	pop    eax
  41638a:	cwde   
  41638b:	fwait
  41638c:	sbb    ebx,DWORD PTR ds:[eax+0x48467c50]
  416393:	jo     0x41638b
  416395:	sbb    al,0xd5
  416397:	mov    edx,0x7e8844d1
  41639c:	or     ch,dh
  41639e:	sahf   
  41639f:	push   eax
  4163a0:	mov    dl,0x4d
  4163a2:	jle    0x4163ff
  4163a4:	mov    dh,0xb4
  4163a6:	jne    0x41639a
  4163a8:	jmp    0xc551:0xac9968c1
  4163af:	pop    edx
  4163b0:	fcom   st(2)
  4163b2:	sti    
  4163b3:	ins    BYTE PTR es:[edi],dx
  4163b4:	or     ah,BYTE PTR [ebp+0x5e]
  4163b7:	jmp    0xaed7:0x3396e748
  4163be:	lods   eax,DWORD PTR ds:[esi]
  4163bf:	jmp    0x80d5:0x6a28c8e1
  4163c6:	mov    ds:0xecd15b19,eax
  4163cb:	(bad)  
  4163cc:	mov    dh,0xe1
  4163ce:	iret   
  4163cf:	loopne 0x4163a4
  4163d1:	mov    edx,0xf6023c06
  4163d6:	push   eax
  4163d7:	xchg   ebx,eax
  4163d8:	ret    
  4163d9:	mov    ah,0x28
  4163db:	cmp    BYTE PTR [ebp+ebp*4+0x4b],cl
  4163df:	fiadd  WORD PTR [edi]
  4163e1:	add    DWORD PTR [ebx+0x1f6118f],eax
  4163e7:	fs test al,0x5e
  4163ea:	pop    esi
  4163eb:	dec    eax
  4163ec:	pop    eax
  4163ed:	cld    
  4163ee:	mov    ds,WORD PTR [ecx+0x2586c29d]
  4163f4:	jo     0xd3685819
  4163fa:	shl    BYTE PTR [edi+0x43d88e35],1
  416400:	add    BYTE PTR [esi-0x5bab72e5],0xdb
  416407:	lock aam 0x2e
  41640a:	adc    BYTE PTR [esi-0x5c],ah
  41640d:	ja     0x4163e8
  41640f:	je     0x4163a3
  416411:	icebp  
  416412:	mov    eax,DWORD PTR [ebx+esi*2+0x47d0fee]
  416419:	push   cs
  41641a:	sub    edx,DWORD PTR [edx+edi*8]
  41641d:	xchg   ecx,eax
  41641e:	in     al,0x26
  416420:	xchg   edx,eax
  416421:	lahf   
  416422:	loopne 0x41649c
  416424:	mov    ch,0x7a
  416426:	call   0x83b4:0xd8bad0c2
  41642d:	cdq    
  41642e:	js     0x416477
  416430:	out    dx,al
  416431:	imul   edi,DWORD PTR [ebp-0x2a],0xffffffa0
  416435:	cmp    eax,0x7c50b1b
  41643a:	lods   eax,DWORD PTR ds:[esi]
  41643b:	push   ebx
  41643c:	add    eax,DWORD PTR [ebx+0x3e3c2aa7]
  416442:	mov    esi,0xff278bd2
  416447:	push   ebp
  416448:	pusha  
  416449:	xchg   bl,ah
  41644b:	mov    DWORD PTR ds:0xf7f89d36,eax
  416451:	fdivr  DWORD PTR [eax]
  416453:	jnp    0x4163ea
  416455:	jno    0x416412
  416457:	push   eax
  416458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416459:	and    edx,DWORD PTR [ebp+0x55eaff53]
  41645f:	rol    BYTE PTR [edi-0x4bd22147],cl
  416465:	sub    BYTE PTR [eax],al
  416467:	daa    
  416468:	inc    ebx
  416469:	sahf   
  41646a:	mov    DWORD PTR [ecx],ebp
  41646c:	rol    DWORD PTR [esi-0x307a68ee],cl
  416472:	adc    al,0x3e
  416474:	fisttp DWORD PTR [eax-0x51]
  416477:	mov    dh,0x3e
  416479:	pop    eax
  41647a:	rol    DWORD PTR [eax],0x42
  41647d:	jg     0x416426
  41647f:	js     0x4164c2
  416481:	call   0x13648fdf
  416486:	dec    edx
  416487:	out    0x18,al
  416489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41648a:	shr    BYTE PTR [esi-0x73429992],0xa8
  416491:	ror    BYTE PTR [eax+0x3e9ecc92],1
  416497:	(bad)  
  416498:	pushf  
  416499:	xchg   ecx,eax
  41649a:	loop   0x416426
  41649c:	aam    0x1
  41649e:	pushf  
  41649f:	in     al,0x1a
  4164a1:	jbe    0x4164d8
  4164a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164a4:	in     eax,0x53
  4164a6:	repz aad 0x2f
  4164a9:	(bad)  
  4164ab:	sbb    eax,0xd8f083a5
  4164b0:	ja     0x4164b5
  4164b2:	or     ebx,DWORD PTR [edx-0x72]
  4164b5:	dec    eax
  4164b6:	xor    BYTE PTR [edx],al
  4164b8:	hlt    
  4164b9:	out    0x9c,al
  4164bb:	sub    eax,0x739efe38
  4164c0:	lods   al,BYTE PTR ds:[esi]
  4164c1:	inc    edi
  4164c2:	or     ch,BYTE PTR [edx+0x53]
  4164c5:	sub    bh,BYTE PTR [edi+ecx*2]
  4164c8:	or     ecx,DWORD PTR [edx]
  4164ca:	imul   ebp,DWORD PTR [ebx],0xfffffff4
  4164cd:	mov    ss,WORD PTR [ebp+0x5211bfd3]
  4164d3:	add    BYTE PTR [edi+0x21],al
  4164d6:	mov    eax,0xa7688f30
  4164db:	jp     0x4164b6
  4164dd:	adc    BYTE PTR ds:0x448d2d9e,dl
  4164e3:	jbe    0x4164d9
  4164e5:	and    al,BYTE PTR [esi+0x2e]
  4164e8:	lods   eax,DWORD PTR ds:[esi]
  4164e9:	pop    esi
  4164ea:	pop    eax
  4164eb:	inc    esi
  4164ec:	fldenv [edi-0x2d]
  4164ef:	xchg   ecx,eax
  4164f0:	jg     0x4164cb
  4164f2:	pop    eax
  4164f3:	inc    ebx
  4164f4:	xor    edi,ebp
  4164f6:	or     eax,0xbb32ff6
  4164fb:	push   eax
  4164fc:	xor    DWORD PTR [ebp+0x4a],esi
  4164ff:	xlat   BYTE PTR ds:[ebx]
  416500:	cmp    esp,DWORD PTR [ecx-0x455edfe4]
  416506:	pop    eax
  416507:	aad    0x11
  416509:	jne    0x4164e9
  41650b:	mov    eax,DWORD PTR [eax]
  41650d:	stos   DWORD PTR es:[edi],eax
  41650e:	add    esp,edx
  416510:	pop    ebx
  416511:	sbb    eax,0x56c65ff3
  416516:	test   DWORD PTR [eax+eiz*2-0x63],esi
  41651a:	mov    bl,0xe7
  41651c:	dec    esi
  41651d:	add    edi,DWORD PTR [ecx+eax*2]
  416520:	fld    QWORD PTR [edx-0x4]
  416523:	sub    DWORD PTR [ecx-0x69bd8603],0x13
  41652a:	mov    al,0xe7
  41652c:	adc    edi,edx
  41652e:	dec    eax
  41652f:	repnz push ebp
  416531:	test   cl,ah
  416533:	(bad)  
  416534:	jmp    0x3fb:0x53f0bd70
  41653b:	icebp  
  41653c:	sub    al,0x5e
  41653e:	sbb    BYTE PTR [bx+di],ch
  416541:	and    DWORD PTR [edi-0x10e8973c],eax
  416547:	inc    ebx
  416548:	mov    bh,0x51
  41654a:	bound  edi,QWORD PTR [ebp+0x7a]
  41654d:	daa    
  41654e:	stos   BYTE PTR es:[edi],al
  41654f:	cli    
  416550:	fnsave ds:0x54d9ba5a
  416556:	and    ebp,DWORD PTR ds:0xb1326bce
  41655c:	xchg   DWORD PTR [eax+0x19],edx
  41655f:	add    eax,0x2af07efa
  416564:	lahf   
  416565:	cmp    DWORD PTR [ecx],esi
  416567:	xchg   ebx,eax
  416568:	cmp    al,0xf6
  41656a:	lods   al,BYTE PTR ds:[esi]
  41656b:	sbb    BYTE PTR [esi-0x6fdea2a7],cl
  416571:	and    DWORD PTR [edi],eax
  416573:	aad    0x89
  416575:	mov    ds:0xdbcdb809,eax
  41657a:	inc    ebp
  41657b:	mov    ds:0x48cac2a0,al
  416580:	icebp  
  416581:	inc    ebx
  416582:	add    al,dl
  416584:	sahf   
  416585:	sbb    BYTE PTR [ebx+ebx*4-0x39832e59],bl
  41658c:	or     eax,0xc4a48b51
  416591:	mov    bh,0xe3
  416593:	nop
  416594:	mov    WORD PTR [ebx-0x49c4461a],?
  41659a:	jne    0x41651e
  41659c:	adc    al,0x32
  41659e:	call   0xb4cd73e4
  4165a3:	dec    ebx
  4165a4:	inc    ebx
  4165a5:	cmp    eax,0x96f172c
  4165aa:	lahf   
  4165ab:	adc    BYTE PTR [ebx],al
  4165ad:	inc    edi
  4165ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165af:	jno    0x41654a
  4165b1:	out    0xd5,al
  4165b3:	in     eax,dx
  4165b4:	add    cl,BYTE PTR [ebx+0x54]
  4165b7:	fcom   DWORD PTR [eax+edi*8+0x28]
  4165bb:	or     DWORD PTR ds:0x758407c4,edi
  4165c1:	outs   dx,BYTE PTR ds:[esi]
  4165c2:	add    BYTE PTR [esi+0x7eaf0b0b],bl
  4165c8:	cmp    eax,0x1eb97928
  4165cd:	pop    ss
  4165ce:	or     eax,0x2f930e72
  4165d3:	sbb    dl,BYTE PTR [edx]
  4165d5:	mov    ds:0xc32aae8f,al
  4165da:	push   ds
  4165db:	push   ebp
  4165dc:	adc    cl,BYTE PTR [eax+eax*2]
  4165df:	test   ah,0xad
  4165e2:	sub    bh,BYTE PTR [ecx-0x7]
  4165e5:	call   0x34cdfd22
  4165ea:	mov    al,0xbb
  4165ec:	gs mov ebx,0xac7aed30
  4165f2:	repnz lock inc esp
  4165f5:	stos   DWORD PTR es:[edi],eax
  4165f6:	xor    al,0x37
  4165f8:	jo     0x416603
  4165fa:	push   ecx
  4165fb:	test   eax,esi
  4165fd:	xlat   BYTE PTR gs:[ebx]
  4165ff:	adc    eax,0xa29ad71c
  416604:	clc    
  416605:	icebp  
  416606:	lea    ebp,[ebx+eax*8]
  416609:	call   0x25c34a97
  41660e:	push   0x79
  416610:	and    eax,0xe7f335f6
  416615:	mov    dh,BYTE PTR [ecx+0x71]
  416618:	mov    ebx,0x8c47234e
  41661d:	pop    ds
  41661e:	push   ebp
  41661f:	test   eax,0x808b7bd7
  416624:	sbb    eax,0x8a255324
  416629:	hlt    
  41662a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41662b:	fwait
  41662c:	lea    ecx,ds:0x8155d215
  416632:	in     eax,0x75
  416634:	dec    ecx
  416635:	sahf   
  416636:	pop    edi
  416637:	into   
  416638:	aad    0x25
  41663a:	mov    edi,0xf49b4c77
  41663f:	mov    BYTE PTR [esi+0x6],cl
  416642:	push   esi
  416643:	add    BYTE PTR [ebx+0x21],cl
  416646:	inc    eax
  416647:	std    
  416648:	mov    esi,esp
  41664a:	pop    eax
  41664b:	jg     0x4166bc
  41664d:	adc    eax,0xdbc250e7
  416652:	enter  0x3d98,0xdb
  416656:	and    BYTE PTR [edx+ecx*4-0x56],al
  41665a:	out    dx,al
  41665b:	gs out dx,eax
  41665d:	fisttp QWORD PTR [eax]
  41665f:	xchg   BYTE PTR ds:0xfbf0997b,al
  416665:	pop    ds
  416666:	push   ebx
  416667:	mov    dh,0x9c
  416669:	lahf   
  41666a:	or     eax,0x791ccc9d
  41666f:	or     dl,BYTE PTR [edx+0x726ceced]
  416675:	aaa    
  416676:	ret    0x8ba8
  416679:	imul   ebx,esi,0xe6d1aa36
  41667f:	sub    ebx,DWORD PTR [eax-0x9236a2f]
  416685:	fnclex 
  416687:	push   ebp
  416688:	or     cl,cl
  41668a:	fcmovu st,st(3)
  41668c:	pusha  
  41668d:	scas   al,BYTE PTR es:[edi]
  41668e:	cmp    eax,DWORD PTR [ecx-0x7e769e6]
  416694:	les    eax,FWORD PTR [edi-0x6d45e7a2]
  41669a:	neg    BYTE PTR [ebp+0x3b5385ac]
  4166a0:	imul   eax,DWORD PTR [eax-0x15],0xffffff91
  4166a4:	popa   
  4166a5:	xor    eax,0x237bab4b
  4166aa:	imul   esp,DWORD PTR [ebx-0x7],0x1a6e69e4
  4166b1:	jle    0x416633
  4166b3:	jns    0x416662
  4166b5:	je     0x416662
  4166b7:	dec    esi
  4166b8:	cmp    al,0x23
  4166ba:	fldcw  WORD PTR [eax+0x8]
  4166bd:	mov    ds:0x720e9138,eax
  4166c2:	pusha  
  4166c3:	sbb    eax,esi
  4166c5:	aaa    
  4166c6:	jg     0x4166bd
  4166c8:	call   0x2df3:0xe8708ef4
  4166cf:	jae    0x4166b3
  4166d1:	loope  0x416678
  4166d3:	jge    0x4166d2
  4166d5:	push   cs
  4166d6:	xchg   esi,eax
  4166d7:	push   ds
  4166d8:	xor    al,0x8
	...
  4166e2:	add    BYTE PTR [eax],dl
  4166e4:	add    BYTE PTR [eax],al
  4166e6:	in     al,dx
  4166e7:	add    BYTE PTR [eax],al
  4166e9:	add    BYTE PTR [edx],ch
  4166eb:	xor    BYTE PTR [eax],dh
  4166ed:	xor    BYTE PTR ds:0x58304c30,dh
  4166f3:	xor    BYTE PTR [esi+0x30],bl
  4166f6:	xor    BYTE PTR fs:[eax-0x65cf71d0],cl
  4166fd:	xor    BYTE PTR [eax-0x4ccf59d0],ah
  416703:	xor    al,al
  416705:	xor    bh,cl
  416707:	xor    BYTE PTR [edx-0x48ce51cf],ch
  41670d:	xor    esp,eax
  41670f:	xor    eax,ecx
  416711:	xor    DWORD PTR [ebp-0x60cc6ece],esp
  416717:	xor    ebp,DWORD PTR [esi-0x3acc47cd]
  41671d:	xor    edx,ebp
  41671f:	xor    ebx,ebp
  416721:	xor    esp,esp
  416723:	xor    ebp,edi
  416725:	xor    edi,ebp
  416727:	xor    ecx,DWORD PTR [eax]
  416729:	xor    al,0xc
  41672b:	xor    al,0x14
  41672d:	xor    al,0x28
  41672f:	xor    al,0x2e
  416731:	xor    al,0x40
  416733:	xor    al,0x46
  416735:	xor    al,0xf8
  416737:	xor    eax,0x360435fc
  41673c:	push   cs
  41673d:	sbb    esi,DWORD PTR ss:[esi]
  416740:	sub    esi,DWORD PTR [esi]
  416742:	xor    DWORD PTR [esi],esi
  416744:	cmp    eax,0x48364336
  416749:	ss dec esi
  41674b:	ss pop esp
  41674d:	ss push 0x7f367b36
  416753:	ss pop edi
  416755:	aaa    
  416756:	imul   esi,DWORD PTR [edi],0x7e
  416759:	aaa    
  41675a:	xor    BYTE PTR [edi],0x8d
  41675d:	aaa    
  41675e:	call   0xb637:0xb037a937
  416765:	aaa    
  416766:	ret    
  416767:	aaa    
  416768:	shl    DWORD PTR [edi],cl
  41676a:	mov    ah,0x38
  41676c:	mov    ebp,0xce38ca38
  416771:	cmp    dh,dl
  416773:	cmp    dl,ah
  416775:	cmp    dl,dh
  416777:	cmp    dh,dh
  416779:	cmp    BYTE PTR [ebx-0x33c53fc6],dh
  41677f:	cmp    ah,dl
  416781:	cmp    ch,dh
  416783:	cmp    dh,ch
  416785:	cmp    bh,bl
  416787:	cmp    al,BYTE PTR [edi]
  416789:	cmp    ecx,DWORD PTR [ebx+edi*1]
  41678c:	adc    eax,0x2a3b1b3b
  416791:	cmp    esi,DWORD PTR [ecx]
  416793:	cmp    esi,DWORD PTR [edi]
  416795:	cmp    eax,DWORD PTR [ebx+edi*1+0x30]
  416799:	cmp    al,0x34
  41679b:	cmp    al,0x3e
  41679d:	cmp    al,0x44
  41679f:	cmp    al,0x49
  4167a1:	cmp    al,0x52
  4167a3:	cmp    al,0x5b
  4167a5:	cmp    al,0x6a
  4167a7:	cmp    al,0x71
  4167a9:	cmp    al,0x77
  4167ab:	cmp    al,0x84
  4167ad:	cmp    al,0x9d
  4167af:	cmp    al,0xa6
  4167b1:	cmp    al,0xac
  4167b3:	cmp    al,0xb9
  4167b5:	cmp    al,0xc0
  4167b7:	cmp    al,0xce
  4167b9:	cmp    al,0xd7
  4167bb:	cmp    al,0xba
  4167bd:	cmp    eax,0x3dd13dc4
  4167c2:	loope  0x416801
  4167c4:	out    0x3d,eax
  4167c6:	hlt    
  4167c7:	cmp    eax,0x3e013dfb
  4167cc:	or     BYTE PTR [esi],bh
  4167ce:	add    BYTE PTR [eax],ah
  4167d0:	add    BYTE PTR [eax],al
  4167d2:	dec    eax
  4167d3:	add    BYTE PTR [eax],al
  4167d5:	add    BYTE PTR [ebx],bh
  4167d7:	cmp    al,0x4c
  4167d9:	cmp    al,0x52
  4167db:	cmp    al,0x58
  4167dd:	cmp    al,0x65
  4167df:	cmp    al,0x73
  4167e1:	cmp    al,0x7f
  4167e3:	cmp    al,0x85
  4167e5:	cmp    al,0x94
  4167e7:	cmp    al,0x9a
  4167e9:	cmp    al,0xa5
  4167eb:	cmp    al,0xaf
  4167ed:	cmp    al,0xb6
  4167ef:	cmp    al,0xbc
  4167f1:	cmp    al,0xc8
  4167f3:	cmp    al,0xd6
  4167f5:	cmp    al,0xdc
  4167f7:	cmp    al,0xe9
  4167f9:	cmp    al,0xf0
  4167fb:	cmp    al,0xf6
  4167fd:	cmp    al,0x9
  4167ff:	cmp    eax,0x3d203d13
  416804:	sub    al,0x3d
  416806:	xor    DWORD PTR ds:0x3d403d3b,edi
  41680c:	inc    ebp
  41680d:	cmp    eax,0x3d513d4b
  416812:	pop    eax
  416813:	cmp    eax,0x30000000
  416818:	add    BYTE PTR [eax],al
  41681a:	or     al,0x1
  41681c:	add    BYTE PTR [eax],al
  41681e:	push   ebx
  41681f:	xor    bl,BYTE PTR [ecx+0x32]
  416822:	xor    ch,BYTE PTR gs:[ebx+0x32]
  416826:	jae    0x41685a
  416828:	jns    0x41685c
  41682a:	test   BYTE PTR [edx],dh
  41682c:	mov    BYTE PTR [edx],dh
  41682e:	(bad)  
  41682f:	xor    bl,BYTE PTR [esi-0x54cd5ace]
  416835:	xor    bh,BYTE PTR [eax-0x27cd36ce]
  41683b:	xor    ah,dh
  41683d:	xor    ch,dl
  41683f:	xor    bh,cl
  416841:	xor    bh,bh
  416843:	xor    ah,BYTE PTR [ecx+0x34]
  416846:	addr16 xor al,0x1d
  416849:	xor    eax,0x35333529
  41684e:	cmp    BYTE PTR ds:0x355a3543,dh
  416854:	arpl   WORD PTR ds:0x357a356d,si
  41685a:	xchg   BYTE PTR ds:0x3591358b,dh
  416860:	xchg   esi,eax
  416861:	xor    eax,0x35a7359c
  416866:	mov    ebx,0xce35c135
  41686b:	xor    eax,0x3758374f
  416870:	pop    esi
  416871:	aaa    
  416872:	jb     0x4168ab
  416874:	jnp    0x4168ad
  416876:	test   DWORD PTR [edi],esi
  416878:	mov    WORD PTR [edi],?
  41687a:	xchg   edx,eax
  41687b:	aaa    
  41687c:	sahf   
  41687d:	aaa    
  41687e:	lods   al,BYTE PTR ds:[esi]
  41687f:	aaa    
  416880:	mov    dl,0x37
  416882:	shl    DWORD PTR [edi],0xc8
  416885:	aaa    
  416886:	into   
  416887:	aaa    
  416888:	(bad)  [edi]
  41688a:	call   0x12796bc6
  41688f:	cmp    BYTE PTR [ecx],bl
  416891:	cmp    BYTE PTR [edi],bl
  416893:	cmp    BYTE PTR [eax+edi*1],ch
  416896:	cmp    eax,0x49384338
  41689b:	cmp    BYTE PTR [esi+0x38],dl
  41689e:	pop    ebp
  41689f:	cmp    BYTE PTR [eax+0x38],ch
  4168a2:	mov    BYTE PTR [eax],bh
  4168a4:	xchg   esp,eax
  4168a5:	cmp    BYTE PTR [ecx-0x43c74ec8],ah
  4168ab:	cmp    dh,cl
  4168ad:	cmp    ch,bl
  4168af:	cmp    ah,ah
  4168b1:	cmp    dl,ch
  4168b3:	cmp    bh,dh
  4168b5:	cmp    BYTE PTR [esi],cl
  4168b7:	cmp    DWORD PTR [ecx],ebx
  4168b9:	cmp    DWORD PTR [esi],esp
  4168bb:	cmp    DWORD PTR [edi-0x4fc55bc6],edx
  4168c1:	cmp    bh,BYTE PTR [edx+edi*1+0x3ae63ac8]
  4168c8:	idiv   DWORD PTR [edx]
  4168ca:	(bad)  
  4168cb:	cmp    al,BYTE PTR [ebx+edi*1]
  4168ce:	adc    DWORD PTR [ebx],edi
  4168d0:	and    DWORD PTR [ebx],edi
  4168d2:	daa    
  4168d3:	cmp    esi,DWORD PTR [esi]
  4168d5:	cmp    edi,DWORD PTR ds:0x593b483b
  4168db:	cmp    esp,DWORD PTR [eax+0x3b]
  4168de:	cmp    si,WORD PTR [ebx+0x3b]
  4168e2:	xchg   edx,eax
  4168e3:	cmp    ebx,DWORD PTR [edi+0x163ba73b]
  4168e9:	cmp    eax,0x3d273d20
  4168ee:	sub    eax,0x433d3d3d
  4168f3:	cmp    eax,0x3d5f3d50
  4168f8:	jae    0x416937
  4168fa:	jle    0x416939
  4168fc:	xchg   BYTE PTR ds:0x3d9c3d96,bh
  416902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416903:	cmp    eax,0x3dbc3daf
  416908:	retf   
  416909:	cmp    eax,0x3dd73dd1
  41690e:	fidivr WORD PTR ds:0x3df83de9
  416914:	(bad)  
  416915:	cmp    eax,0x3e123e05
  41691a:	dec    ebx
  41691b:	ds push ecx
  41691d:	ds pop esi
  41691f:	ds gs add BYTE PTR ds:[eax+0x0],dl
  416925:	add    BYTE PTR [eax+0x26000000],cl
  41692b:	xor    DWORD PTR [ebx],esi
  41692d:	xor    DWORD PTR [edx+0x31],eax
  416930:	dec    ecx
  416931:	xor    DWORD PTR [edi+0x31],ecx
  416934:	pop    esp
  416935:	xor    DWORD PTR [esi+0x31],ebp
  416938:	ja     0x41696b
  41693a:	xor    DWORD PTR [ecx],0xffffff89
  41693d:	xor    edx,eax
  41693f:	xor    edx,ebx
  416941:	xor    edx,edi
  416943:	xor    esp,ebp
  416945:	xor    esi,edi
  416947:	xor    eax,DWORD PTR [ebx]
  416949:	xor    al,0x7
  41694b:	xor    al,0x10
  41694d:	xor    al,0x1a
  41694f:	xor    al,0x27
  416951:	xor    al,0x33
  416953:	xor    al,0x38
  416955:	xor    al,0x3e
  416957:	xor    al,0x43
  416959:	xor    al,0x49
  41695b:	xor    al,0xb6
  41695d:	xor    eax,0x35d135be
  416962:	xlat   BYTE PTR ds:[ebx]
  416963:	xor    eax,0x386d3727
  416968:	jno    0x4169a2
  41696a:	jle    0x4169a4
  41696c:	mov    bh,BYTE PTR [eax]
  41696e:	xchg   ecx,eax
  41696f:	cmp    BYTE PTR [edi-0x53c759c8],dl
  416975:	cmp    BYTE PTR [edx-0x54c489c8],dh
  41697b:	cmp    al,0xb3
  41697d:	cmp    al,0xb9
  41697f:	cmp    al,0xbd
  416981:	cmp    al,0xcf
  416983:	cmp    al,0xdf
  416985:	cmp    al,0xea
  416987:	cmp    al,0xee
  416989:	cmp    al,0xf5
  41698b:	cmp    al,0xfc
  41698d:	cmp    al,0x6
  41698f:	cmp    eax,0x3d2d3d13
  416994:	xor    edi,DWORD PTR ds:0x3d493d42
  41699a:	dec    edi
  41699b:	cmp    eax,0x3d613d56
  4169a0:	lahf   
  4169a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169a3:	ds loope 0x4169e5
  4169a6:	jmp    0x4169e7
  4169a8:	clc    
  4169a9:	aas    
  4169aa:	add    BYTE PTR [eax+0x0],ah
  4169ad:	add    BYTE PTR [eax+0x0],bh
  4169b0:	add    BYTE PTR [eax],al
  4169b2:	add    al,0x30
  4169b4:	or     dh,BYTE PTR [eax]
  4169b6:	adc    dh,BYTE PTR [eax]
  4169b8:	sbb    BYTE PTR [eax],dh
  4169ba:	xor    DWORD PTR [eax],esi
  4169bc:	inc    edx
  4169bd:	xor    BYTE PTR [edi+0x30],cl
  4169c0:	pusha  
  4169c1:	xor    BYTE PTR [esi+0x30],ah
  4169c4:	ins    BYTE PTR es:[edi],dx
  4169c5:	xor    BYTE PTR [ecx+0x30],bh
  4169c8:	mov    dh,BYTE PTR [eax]
  4169ca:	lahf   
  4169cb:	xor    BYTE PTR [edx-0x32cf41d0],dh
  4169d1:	xor    dl,ah
  4169d3:	xor    bh,ch
  4169d5:	xor    ah,bh
  4169d7:	xor    BYTE PTR [edi],al
  4169d9:	xor    DWORD PTR [ebx],ecx
  4169db:	xor    DWORD PTR [ebx],edx
  4169dd:	xor    DWORD PTR [edi],edx
  4169df:	xor    DWORD PTR [ebx],esp
  4169e1:	xor    DWORD PTR [edi],ebp
  4169e3:	xor    DWORD PTR [ebx],esi
  4169e5:	xor    DWORD PTR [edx],edi
  4169e7:	xor    DWORD PTR [ebx+0x31],eax
  4169ea:	dec    ecx
  4169eb:	xor    DWORD PTR [edi+0x31],ecx
  4169ee:	pusha  
  4169ef:	xor    DWORD PTR [ecx+esi*1+0x72],ebp
  4169f3:	xor    DWORD PTR [ecx-0x72ce78cf],eax
  4169f9:	xor    DWORD PTR [ebx-0x55ce5ecf],ebx
  4169ff:	xor    DWORD PTR [ecx+esi*1+0x32ee31b8],esi
  416a06:	repnz xor bh,cl
  416a09:	xor    bh,ch
  416a0b:	xor    al,BYTE PTR [esi]
  416a0d:	xor    ecx,DWORD PTR [edx]
  416a0f:	xor    edi,DWORD PTR [eax+0x35]
  416a12:	jl     0x416a49
  416a14:	dec    edx
  416a15:	cmp    eax,0x3e883d54
  416a1a:	nop
  416a1b:	ds cwde 
  416a1d:	fstp   TBYTE PTR ds:[edi]
  416a20:	add    BYTE PTR [eax],al
  416a22:	add    BYTE PTR [eax+0x0],dh
  416a25:	add    BYTE PTR [eax+eax*1+0x0],ch
  416a29:	add    BYTE PTR ds:0x7d327331,ch
  416a2f:	xor    al,BYTE PTR [edx+esi*1+0x3296328a]
  416a36:	pushf  
  416a37:	xor    ah,BYTE PTR [edx-0x42cd50ce]
  416a3d:	xor    cl,dl
  416a3f:	xor    al,BYTE PTR [ebp+esi*1+0x5d]
  416a43:	xor    eax,0x3589356a
  416a48:	xchg   ebp,eax
  416a49:	xor    eax,0x35a2359c
  416a4e:	scas   al,BYTE PTR es:[edi]
  416a4f:	xor    eax,0x35ba35b4
  416a54:	int3   
  416a55:	xor    eax,0x370f35d0
  416a5a:	sbb    esi,DWORD PTR [edi]
  416a5c:	daa    
  416a5d:	aaa    
  416a5e:	sub    esi,DWORD PTR [edi]
  416a60:	xor    esi,DWORD PTR [edi]
  416a62:	jbe    0x416a9c
  416a64:	xchg   BYTE PTR [eax],bh
  416a66:	cwde   
  416a67:	cmp    BYTE PTR [esi-0x4ac754c8],bl
  416a6d:	cmp    BYTE PTR [eax+edi*1+0x38d638c2],bh
  416a74:	in     al,dx
  416a75:	cmp    dl,dh
  416a77:	cmp    BYTE PTR [edi],al
  416a79:	cmp    DWORD PTR [ecx+edi*1],ecx
  416a7c:	push   ecx
  416a7d:	cmp    bl,BYTE PTR [ebx+0x3a]
  416a80:	push   0x813a7b3a
  416a85:	cmp    cl,BYTE PTR [esi-0x62c56ac6]
  416a8b:	cmp    ah,BYTE PTR [edx+edi*1+0x8000]
  416a92:	sbb    BYTE PTR [edx],al
  416a94:	add    BYTE PTR [eax],al
  416a96:	mov    dh,0x30
  416a98:	mov    esp,0xcb30c230
  416a9d:	xor    dl,dl
  416a9f:	xor    ah,ch
  416aa1:	xor    al,bh
  416aa3:	xor    BYTE PTR [edx],al
  416aa5:	xor    DWORD PTR [ecx],ecx
  416aa7:	xor    DWORD PTR [edi],ecx
  416aa9:	xor    DWORD PTR [ebx],ebx
  416aab:	xor    DWORD PTR [ecx],esp
  416aad:	xor    DWORD PTR [edi],esp
  416aaf:	xor    esp,ebp
  416ab1:	xor    esi,edi
  416ab3:	xor    DWORD PTR [eax],ecx
  416ab5:	xor    dl,BYTE PTR ds:0x2b322532
  416abb:	xor    bh,BYTE PTR [eax]
  416abd:	xor    bh,BYTE PTR [edi]
  416abf:	xor    al,BYTE PTR [ebp+0x32]
  416ac2:	dec    esp
  416ac3:	xor    bl,BYTE PTR [esi+0x33]
  416ac6:	xor    ebp,DWORD PTR fs:[esi+0x33]
  416aca:	je     0x416aff
  416acc:	js     0x416b01
  416ace:	xor    BYTE PTR [ebx],0x90
  416ad1:	xor    edx,DWORD PTR [ebx+esi*1+0x33a533a1]
  416ad8:	lods   al,BYTE PTR ds:[esi]
  416ad9:	xor    edi,DWORD PTR [ebx-0x37cc3dcd]
  416adf:	xor    edx,ebp
  416ae1:	xor    esp,edi
  416ae3:	xor    ebp,ebp
  416ae5:	xor    edi,edx
  416ae7:	xor    eax,DWORD PTR [ecx]
  416ae9:	xor    al,0xc
  416aeb:	xor    al,0x1b
  416aed:	xor    al,0x25
  416aef:	xor    al,0x2a
  416af1:	xor    al,0x30
  416af3:	xor    al,0x36
  416af5:	xor    al,0x48
  416af7:	xor    al,0x57
  416af9:	xor    al,0x66
  416afb:	xor    al,0x75
  416afd:	xor    al,0x84
  416aff:	xor    al,0x88
  416b01:	xor    al,0x98
  416b03:	xor    al,0xc7
  416b05:	xor    al,0xd0
  416b07:	xor    al,0xdc
  416b09:	xor    al,0xe6
  416b0b:	xor    al,0xf3
  416b0d:	xor    al,0x5
  416b0f:	xor    eax,0x3517350b
  416b14:	sbb    eax,0x2b352535
  416b19:	xor    eax,0x353b3536
  416b1e:	inc    ecx
  416b1f:	xor    eax,0x35573550
  416b24:	pop    ebp
  416b25:	xor    eax,0x3586356a
  416b2a:	xchg   edx,eax
  416b2b:	xor    eax,0x359e3598
  416b30:	scas   al,BYTE PTR es:[edi]
  416b31:	xor    eax,0x35c735bb
  416b36:	into   
  416b37:	xor    eax,0x35e735d4
  416b3c:	in     eax,dx
  416b3d:	xor    eax,0x360035f3
  416b42:	or     al,0x36
  416b44:	adc    esi,DWORD PTR [esi]
  416b46:	sbb    DWORD PTR [esi],esi
  416b48:	sub    esi,DWORD PTR [esi]
  416b4a:	xor    DWORD PTR [esi],esi
  416b4c:	ds ss inc ebp
  416b4f:	ss dec ebx
  416b51:	ss pop eax
  416b53:	ss fs ss push 0x36
  416b58:	jo     0x416b90
  416b5a:	jnp    0x416b92
  416b5c:	xchg   DWORD PTR [esi],esi
  416b5e:	mov    esi,DWORD PTR [esi]
  416b60:	xchg   edx,eax
  416b61:	ss pushf 
  416b63:	ss test eax,0xcb36c536
  416b69:	fdiv   DWORD PTR ss:[esi]
  416b6c:	fbstp  TBYTE PTR [esi]
  416b6e:	in     eax,0x36
  416b70:	in     al,dx
  416b71:	div    DWORD PTR ss:[esi]
  416b74:	add    DWORD PTR [edi],esi
  416b76:	or     BYTE PTR [edi],dh
  416b78:	push   cs
  416b79:	aaa    
  416b7a:	and    eax,0x38372b37
  416b7f:	aaa    
  416b80:	aas    
  416b81:	aaa    
  416b82:	inc    ebp
  416b83:	aaa    
  416b84:	push   edi
  416b85:	aaa    
  416b86:	pop    ebx
  416b87:	aaa    
  416b88:	data16 aaa 
  416b8a:	imul   esi,DWORD PTR [edi],0x76
  416b8d:	aaa    
  416b8e:	xor    DWORD PTR [edi],0xffffffa7
  416b91:	aaa    
  416b92:	mov    cl,0x37
  416b94:	mov    ebx,0xc837c237
  416b99:	aaa    
  416b9a:	aam    0x37
  416b9c:	out    0x37,eax
  416b9e:	in     eax,dx
  416b9f:	aaa    
  416ba0:	stc    
  416ba1:	aaa    
  416ba2:	or     BYTE PTR [eax],bh
  416ba4:	push   cs
  416ba5:	cmp    BYTE PTR [eax+edi*1],dl
  416ba8:	sbb    DWORD PTR [eax],edi
  416baa:	and    bh,BYTE PTR [eax]
  416bac:	sub    al,0x38
  416bae:	xor    bh,BYTE PTR [eax]
  416bb0:	cmp    BYTE PTR ss:[esi],bh
  416bb3:	cmp    BYTE PTR [edx+0x38],cl
  416bb6:	data16 cmp BYTE PTR [eax+edi*1+0x7c],ch
  416bbb:	cmp    BYTE PTR [edx-0x6cc773c8],al
  416bc1:	cmp    BYTE PTR [ecx-0x48c74ec8],bl
  416bc7:	cmp    ah,al
  416bc9:	cmp    dh,cl
  416bcb:	cmp    bl,bl
  416bcd:	cmp    bl,ch
  416bcf:	cmp    cl,dh
  416bd1:	cmp    BYTE PTR [eax],al
  416bd3:	cmp    DWORD PTR [edi],eax
  416bd5:	cmp    DWORD PTR ds:0x1f391439,ecx
  416bdb:	cmp    DWORD PTR [eax],esi
  416bdd:	cmp    DWORD PTR [edi],esi
  416bdf:	cmp    DWORD PTR ds:0x5a394a39,edi
  416be5:	cmp    DWORD PTR [eax+0x39],esp
  416be8:	outs   dx,DWORD PTR ds:[esi]
  416be9:	cmp    DWORD PTR [esi+0x39],esi
  416bec:	cmp    DWORD PTR [ecx],0x39ab3990
  416bf2:	mov    bl,0x39
  416bf4:	sar    BYTE PTR [ecx],0xd1
  416bf7:	cmp    edi,edx
  416bf9:	cmp    ebp,ebx
  416bfb:	cmp    edx,ebp
  416bfd:	cmp    DWORD PTR [ecx],ecx
  416bff:	cmp    cl,BYTE PTR [edi]
  416c01:	cmp    bl,BYTE PTR [ebx]
  416c03:	cmp    ah,BYTE PTR [ecx]
  416c05:	cmp    ch,BYTE PTR [ebx]
  416c07:	cmp    dh,BYTE PTR [ecx]
  416c09:	cmp    al,BYTE PTR [ebx+0x3a]
  416c0c:	dec    ebx
  416c0d:	cmp    dl,BYTE PTR [ebp+0x3a]
  416c10:	bound  edi,QWORD PTR [edx]
  416c12:	jle    0x416c4e
  416c14:	test   BYTE PTR [edx],bh
  416c16:	xchg   ebx,eax
  416c17:	cmp    bl,BYTE PTR [edx-0x56c55dc6]
  416c1d:	cmp    dh,BYTE PTR [edx+edi*1+0x3aca3ac3]
  416c24:	sar    BYTE PTR [edx],1
  416c26:	fnstsw WORD PTR [edx]
  416c28:	out    dx,eax
  416c29:	cmp    bh,bl
  416c2b:	cmp    al,BYTE PTR [ecx]
  416c2d:	cmp    ecx,DWORD PTR [ecx]
  416c2f:	cmp    edi,DWORD PTR [ebx]
  416c31:	cmp    eax,DWORD PTR [ebp+0x3b]
  416c34:	dec    esp
  416c35:	cmp    edx,DWORD PTR [edx+0x3b]
  416c38:	pop    esi
  416c39:	cmp    esp,DWORD PTR [ebx+edi*1+0x6a]
  416c3d:	cmp    esi,DWORD PTR [edi+0x3b]
  416c40:	jle    0x416c7d
  416c42:	test   BYTE PTR [ebx],bh
  416c44:	xchg   ecx,eax
  416c45:	cmp    ebx,DWORD PTR [ecx-0x4ac45dc5]
  416c4b:	cmp    edi,DWORD PTR [ebp-0x26c435c5]
  416c51:	cmp    ebx,edi
  416c53:	cmp    ebp,edi
  416c55:	cmp    edi,ecx
  416c57:	cmp    eax,DWORD PTR [eax]
  416c59:	cmp    al,0x6
  416c5b:	cmp    al,0x21
  416c5d:	cmp    al,0x2c
  416c5f:	cmp    al,0x32
  416c61:	cmp    al,0x38
  416c63:	cmp    al,0x45
  416c65:	cmp    al,0x4c
  416c67:	cmp    al,0x52
  416c69:	cmp    al,0x69
  416c6b:	cmp    al,0x75
  416c6d:	cmp    al,0x86
  416c6f:	cmp    al,0x8c
  416c71:	cmp    al,0x91
  416c73:	cmp    al,0x9d
  416c75:	cmp    al,0xa1
  416c77:	cmp    al,0xa9
  416c79:	cmp    al,0xad
  416c7b:	cmp    al,0xb5
  416c7d:	cmp    al,0xcb
  416c7f:	cmp    al,0xd8
  416c81:	cmp    al,0xe0
  416c83:	cmp    al,0xed
  416c85:	cmp    al,0xf3
  416c87:	cmp    al,0x2
  416c89:	cmp    eax,0x3d153d0a
  416c8e:	sbb    DWORD PTR ds:0x3d2d3d23,edi
  416c94:	cmp    bh,BYTE PTR ds:0x3d653d5f
  416c9a:	jno    0x416cd9
  416c9c:	ja     0x416cdb
  416c9e:	jg     0x416cdd
  416ca0:	test   DWORD PTR ds:0x3d8f,edi
  416ca6:	add    BYTE PTR [eax+0xb00000],dl
  416cac:	add    BYTE PTR [eax],al
  416cae:	cmp    al,0x30
  416cb0:	xchg   ecx,eax
  416cb1:	xor    al,dl
  416cb3:	xor    al,bl
  416cb5:	xor    ch,bl
  416cb7:	xor    BYTE PTR [ebx],cl
  416cb9:	xor    DWORD PTR [ecx+esi*1],ebx
  416cbc:	xor    DWORD PTR es:[esi],ebp
  416cbf:	xor    DWORD PTR [esi],edi
  416cc1:	xor    DWORD PTR [ecx+0x31],ebp
  416cc4:	jne    0x416cf7
  416cc6:	nop
  416cc7:	xor    DWORD PTR [edx+0x2931b531],ebx
  416ccd:	xor    ch,BYTE PTR [esi]
  416ccf:	xor    dh,BYTE PTR [edi+0x32]
  416cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cd3:	xor    dh,BYTE PTR [eax-0x41cd4bce]
  416cd9:	xor    cl,al
  416cdb:	xor    cl,bh
  416cdd:	xor    dl,ch
  416cdf:	xor    ah,ah
  416ce1:	xor    ch,bh
  416ce3:	xor    dh,ch
  416ce5:	xor    al,BYTE PTR [edx]
  416ce7:	xor    ecx,DWORD PTR [ecx]
  416ce9:	xor    ecx,DWORD PTR [edi]
  416ceb:	xor    ebx,DWORD PTR [ecx-0x4bcb59cc]
  416cf1:	xor    al,0xc0
  416cf3:	xor    al,0xe1
  416cf5:	xor    al,0xeb
  416cf7:	xor    al,0xf2
  416cf9:	xor    al,0xf8
  416cfb:	xor    al,0x7
  416cfd:	xor    eax,0x3511350c
  416d02:	pop    ss
  416d03:	xor    eax,0x352a351d
  416d08:	ss xor eax,0x354c3545
  416d0e:	push   edx
  416d0f:	xor    eax,0x356b355f
  416d14:	jl     0x416d4b
  416d16:	xchg   ebp,eax
  416d17:	xor    eax,0x35b135a2
  416d1c:	(bad)  
  416d1d:	xor    eax,0x35d835d4
  416d22:	cmp    BYTE PTR [edi],dh
  416d24:	inc    esp
  416d25:	aaa    
  416d26:	push   esp
  416d27:	aaa    
  416d28:	pop    edi
  416d29:	aaa    
  416d2a:	push   0x74376e37
  416d2f:	aaa    
  416d30:	xor    DWORD PTR [edi],0x37933787
  416d36:	cdq    
  416d37:	aaa    
  416d38:	lahf   
  416d39:	aaa    
  416d3a:	xor    bh,BYTE PTR [ebx]
  416d3c:	test   al,0x3c
  416d3e:	lods   al,BYTE PTR ds:[esi]
  416d3f:	cmp    al,0x23
  416d41:	xor    edi,DWORD PTR ds:[esi]
  416d44:	aas    
  416d45:	ds dec esp
  416d47:	ds push esp
  416d49:	ds fs outs dx,BYTE PTR ds:[esi]
  416d4d:	ds jnp 0x416d8e
  416d50:	sahf   
  416d51:	mov    ds:0x3ea93e,eax
  416d57:	rol    BYTE PTR [eax],1
  416d59:	add    BYTE PTR [eax],bl
  416d5b:	add    BYTE PTR [eax],al
  416d5d:	add    BYTE PTR [edi],bl
  416d5f:	cmp    ah,BYTE PTR [ebx]
  416d61:	cmp    ah,BYTE PTR [edi]
  416d63:	cmp    ch,BYTE PTR [ebx]
  416d65:	cmp    ch,BYTE PTR [edi]
  416d67:	cmp    dh,BYTE PTR [ebx]
  416d69:	cmp    dh,BYTE PTR [edi]
  416d6b:	cmp    bh,BYTE PTR [ebx]
  416d6d:	cmp    al,BYTE PTR [eax]
  416d6f:	add    BYTE PTR [ecx],al
  416d71:	add    BYTE PTR [eax],bl
  416d73:	add    BYTE PTR [eax],al
  416d75:	add    BYTE PTR [edx+0x38],ah
  416d78:	data16 cmp BYTE PTR [edx+0x38],ch
  416d7c:	outs   dx,BYTE PTR ds:[esi]
  416d7d:	cmp    BYTE PTR [edx+0x38],dh
  416d80:	jbe    0x416dba
  416d82:	jp     0x416dbc
  416d84:	jle    0x416dbe
  416d86:	add    al,al
  416d88:	add    eax,DWORD PTR [eax]
  416d8a:	push   0x18000000
  416d8f:	xor    BYTE PTR [eax+esi*1],bl
  416d92:	and    BYTE PTR [eax],dh
  416d94:	mov    al,ds:0xa831a431
  416d99:	xor    DWORD PTR [ecx+esi*1+0x31b431b0],ebp
  416da0:	mov    eax,0xc031bc31
  416da5:	xor    esp,eax
  416da7:	xor    eax,edx
  416da9:	xor    esp,edx
  416dab:	xor    eax,ebx
  416dad:	xor    esp,ebx
  416daf:	xor    eax,esp
  416db1:	xor    esp,esp
  416db3:	xor    eax,ebp
  416db5:	xor    esp,ebp
  416db7:	xor    eax,esi
  416db9:	xor    esp,esi
  416dbb:	xor    DWORD PTR [eax],eax
  416dbd:	xor    cl,BYTE PTR [edx+esi*1]
  416dc0:	adc    al,0x32
  416dc2:	sub    BYTE PTR [edx],dh
  416dc4:	pop    esp
  416dc5:	xor    ah,BYTE PTR [eax+0x32]
  416dc8:	je     0x416dfc
  416dca:	lods   al,BYTE PTR ds:[esi]
  416dcb:	xor    cl,BYTE PTR [eax+0x33]
  416dce:	sbb    BYTE PTR [eax+eiz*1],dh
  416dd1:	xor    al,0x28
  416dd3:	xor    al,0x2c
  416dd5:	xor    al,0xec
  416dd7:	cmp    al,dh
  416dd9:	cmp    ah,dh
  416ddb:	cmp    al,bh
  416ddd:	cmp    ah,bh
  416ddf:	cmp    BYTE PTR [eax],al
  416de1:	cmp    DWORD PTR [ecx+edi*1],eax
  416de4:	or     BYTE PTR [ecx],bh
  416de6:	or     al,0x39
  416de8:	adc    BYTE PTR [ecx],bh
  416dea:	adc    al,0x39
  416dec:	add    BYTE PTR [eax],al
  416dee:	add    al,dh
  416df0:	add    eax,DWORD PTR [eax]
  416df2:	sbb    BYTE PTR [eax],al
  416df4:	add    BYTE PTR [eax],al
  416df6:	add    al,0x3c
  416df8:	or     BYTE PTR [esp+ecx*1],bh
  416dfb:	cmp    al,0x10
  416dfd:	cmp    al,0x14
  416dff:	cmp    al,0x18
  416e01:	cmp    al,0x1c
  416e03:	cmp    al,0x20
  416e05:	cmp    al,0x0
  416e07:	and    BYTE PTR [eax+eax*1],al
  416e0a:	sbb    BYTE PTR [eax],al
  416e0c:	add    BYTE PTR [eax],al
  416e0e:	les    esi,FWORD PTR [edi]
  416e10:	enter  0xcc37,0x37
  416e14:	shl    BYTE PTR [edi],1
  416e16:	aam    0x37
  416e18:	fdiv   DWORD PTR [edi]
  416e1a:	fdiv   QWORD PTR [edi]
  416e1c:	loopne 0x416e55
	...
  416e26:	xchg   BYTE PTR [eax-0x30],ah
  416e29:	dec    eax
  416e2a:	idiv   al
  416e2c:	sahf   
  416e2d:	out    dx,al
  416e2e:	or     eax,0x32b0d536
  416e33:	xor    esp,DWORD PTR [esi+0x22]
  416e36:	mov    ebx,0x20000168
  416e3b:	pop    es
  416e3c:	add    BYTE PTR [eax],al
  416e3e:	inc    edx
  416e3f:	retf   
  416e40:	pop    edi
  416e41:	nop
  416e42:	pop    ebx
  416e43:	cmp    BYTE PTR [edx-0xec855e2],al
  416e49:	(bad)  
  416e4b:	adc    DWORD PTR [edx+0x5a],0x74
  416e4f:	push   esi
  416e50:	int    0xb2
  416e52:	sbb    al,BYTE PTR [edi+0x4cc919ea]
  416e58:	test   BYTE PTR [edi],dl
  416e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e5b:	push   ebp
  416e5c:	jl     0x416e9c
  416e5e:	jmp    0x7944d1d0
  416e63:	jmp    0x2c87:0x9772079a
  416e6a:	mov    edx,0x7d59c997
  416e6f:	mov    dh,0xb7
  416e71:	sti    
  416e72:	add    BYTE PTR [ecx],bl
  416e74:	cmp    bl,cl
  416e76:	xchg   edx,eax
  416e77:	les    esi,FWORD PTR [ebx+edx*1]
  416e7a:	in     eax,0x60
  416e7c:	mov    edx,0x19f3d755
  416e81:	xchg   esp,eax
  416e82:	sbb    edi,DWORD PTR [ebx+edi*4-0x46]
  416e86:	in     eax,0xd9
  416e88:	xor    eax,0xb9a75c3a
  416e8d:	fcom   DWORD PTR [ecx+0x7]
  416e90:	adc    DWORD PTR [edi],0x40
  416e93:	mov    cl,0x49
  416e95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e96:	inc    ebx
  416e97:	dec    edi
  416e98:	pop    edi
  416e99:	test   al,0xc2
  416e9b:	jbe    0x416eb4
  416e9d:	jmp    0x3da8:0x5d79
  416ea3:	lods   al,BYTE PTR ds:[esi]
  416ea4:	sbb    bh,BYTE PTR [ebx+0x49b348bd]
  416eaa:	jle    0x416ec3
  416eac:	push   es
  416ead:	mov    eax,0xecf8b622
  416eb2:	enter  0x237f,0x2
  416eb6:	in     al,dx
  416eb7:	mov    esi,0xff7ee093
  416ebc:	test   eax,0x289b11e
  416ec1:	xor    BYTE PTR [ecx],0xe1
  416ec4:	ret    
  416ec5:	add    esp,DWORD PTR gs:[ebx+edi*4+0x10]
  416eca:	pop    es
  416ecb:	add    eax,0x7933aed1
  416ed0:	push   ecx
  416ed1:	mov    al,0xff
  416ed3:	mov    edi,0x7cb96b2b
  416ed8:	xor    eax,DWORD PTR [edi]
  416eda:	xchg   BYTE PTR ds:[ecx],dl
  416edd:	inc    edx
  416ede:	ds jne 0x416ea8
  416ee1:	fwait
  416ee2:	and    esp,DWORD PTR [esi+0x157e5e18]
  416ee8:	jae    0x416f32
  416eea:	outs   dx,BYTE PTR ds:[esi]
  416eeb:	enter  0xa6dd,0x68
  416eef:	cmp    ebx,DWORD PTR [esi+ebp*2]
  416ef2:	outs   dx,BYTE PTR ds:[esi]
  416ef3:	and    ah,ah
  416ef5:	loope  0x416e7f
  416ef7:	or     DWORD PTR [ebx-0x3a],ebp
  416efa:	or     al,0x2f
  416efc:	mov    ebx,0xd70737d8
  416f01:	popf   
  416f02:	pop    edi
  416f03:	jle    0x416f73
  416f05:	lods   al,BYTE PTR ds:[esi]
  416f06:	cwde   
  416f07:	sti    
  416f08:	neg    BYTE PTR [edi-0x7184700b]
  416f0e:	andnps xmm6,XMMWORD PTR [ecx+ebx*8]
  416f12:	push   ds
  416f13:	stc    
  416f14:	pushf  
  416f15:	and    al,0xfa
  416f17:	enter  0x34cc,0x31
  416f1b:	call   0xb32432e
  416f20:	ins    BYTE PTR es:[edi],dx
  416f21:	mov    dl,0xb4
  416f23:	add    ecx,DWORD PTR [ecx+0x66]
  416f26:	xchg   ebp,eax
  416f27:	retf   0x3887
  416f2a:	xchg   esi,eax
  416f2b:	in     eax,dx
  416f2c:	(bad)  
  416f2d:	cmp    al,0xb4
  416f2f:	(bad)  
  416f30:	inc    esp
  416f31:	push   ds
  416f32:	leave  
  416f33:	mov    eax,0x1703fffd
  416f38:	add    al,0x60
  416f3a:	scas   eax,DWORD PTR es:[edi]
  416f3b:	sbb    BYTE PTR [eax+eax*2-0x20bd2d6b],bh
  416f42:	lods   eax,DWORD PTR ds:[esi]
  416f43:	daa    
  416f44:	inc    ecx
  416f45:	or     ecx,DWORD PTR [ecx-0x61]
  416f48:	call   0xe7b:0x1c89b69d
  416f4f:	aas    
  416f50:	mov    esp,0x281a04e5
  416f55:	dec    edi
  416f56:	mov    cl,0xc5
  416f58:	test   edi,edx
  416f5a:	push   eax
  416f5b:	push   cs
  416f5c:	xor    esi,esp
  416f5e:	xor    DWORD PTR [ebp-0x31],ecx
  416f61:	fs hlt 
  416f63:	fldcw  WORD PTR [ebx+0x5e587f21]
  416f69:	push   0xffffff86
  416f6b:	popa   
  416f6c:	pop    esp
  416f6d:	clc    
  416f6e:	imul   ebp,DWORD PTR [edi+eiz*1],0x45b653da
  416f75:	loopne 0x416fbc
  416f77:	cli    
  416f78:	sahf   
  416f79:	and    DWORD PTR [ebx+0x41375459],0x166c421c
  416f83:	inc    edi
  416f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f85:	out    dx,al
  416f86:	mov    edi,DWORD PTR [eax-0x5b]
  416f89:	cmp    al,0xfd
  416f8b:	mov    bl,0xdf
  416f8d:	enter  0xef1c,0x77
  416f91:	cld    
  416f92:	inc    ebp
  416f93:	rcl    DWORD PTR [ecx-0x18],0x56
  416f97:	pop    ebp
  416f98:	pop    ecx
  416f99:	push   ss
  416f9a:	add    eax,0x807664ce
  416f9f:	sub    BYTE PTR [ecx+0xb1669b9],dl
  416fa5:	cmp    bh,BYTE PTR [edx+0x9]
  416fa8:	jl     0x417006
  416faa:	retf   
  416fab:	jo     0x416f32
  416fad:	daa    
  416fae:	jbe    0x416fcb
  416fb0:	cvtdq2ps xmm5,XMMWORD PTR [edx]
  416fb3:	mov    bl,0xed
  416fb5:	push   ss
  416fb6:	xor    esi,edx
  416fb8:	mov    ecx,0xf3f0594a
  416fbd:	fisub  DWORD PTR [esi+0x7d1a655]
  416fc3:	xchg   edx,eax
  416fc4:	jecxz  0x41700d
  416fc6:	sub    eax,0xf36a8bf6
  416fcb:	mov    ds:0xe6b2a173,eax
  416fd0:	mov    ch,0xb1
  416fd2:	popa   
  416fd3:	fs and al,0x4
  416fd6:	add    dh,BYTE PTR [eax]
  416fd8:	sub    eax,0x9bb46057
  416fdd:	out    dx,al
  416fde:	add    BYTE PTR [ebx+0x46],cl
  416fe1:	cmp    DWORD PTR [ecx-0x5641941a],ebp
  416fe7:	nop
  416fe8:	xchg   edx,eax
  416fe9:	add    BYTE PTR [esi],dl
  416feb:	int3   
  416fec:	push   ds
  416fed:	push   ss
  416fee:	test   eax,0x8ed6cf9a
  416ff3:	repz in eax,dx
  416ff5:	and    esi,DWORD PTR [edx+0x53]
  416ff8:	cmp    ebp,DWORD PTR [ecx-0xf]
  416ffb:	push   ecx
  416ffc:	(bad)  
  416ffe:	add    DWORD PTR [esp+ebx*4],0xe8e343eb
  417005:	xlat   BYTE PTR ds:[ebx]
  417006:	outs   dx,BYTE PTR ds:[esi]
  417007:	mov    edi,0xbeda3235
  41700c:	fyl2x  
  41700e:	mov    ah,0x0
  417010:	xor    BYTE PTR [edx],ch
  417012:	adc    ecx,DWORD PTR [ebp-0x791cd699]
  417018:	aaa    
  417019:	cmp    esp,DWORD PTR [ecx-0x4d]
  41701c:	push   0x30
  41701e:	mov    eax,ds:0x44d39d74
  417023:	ins    DWORD PTR es:[edi],dx
  417024:	or     DWORD PTR [ecx],edx
  417026:	mov    bl,0xb1
  417028:	in     eax,dx
  417029:	adc    BYTE PTR [eax+0x5b0e5ea2],ch
  41702f:	pop    ebp
  417030:	shr    BYTE PTR es:[ebp+ecx*4+0x76f3c2c7],cl
  417038:	pop    esi
  417039:	cmp    al,BYTE PTR [edx-0x51f8f53d]
  41703f:	std    
  417040:	clc    
  417041:	add    al,0x60
  417043:	ror    DWORD PTR [edx],0x3c
  417046:	xchg   esi,eax
  417047:	dec    edi
  417048:	pop    edx
  417049:	cmp    DWORD PTR [edi+0x1163dde4],0x67
  417050:	mov    bl,0xd8
  417052:	outs   dx,BYTE PTR ds:[esi]
  417053:	aad    0x1f
  417055:	addr16 push eax
  417057:	loop   0x417087
  417059:	mov    dl,0x3
  41705b:	stc    
  41705c:	scas   eax,DWORD PTR es:[edi]
  41705d:	test   al,0xa9
  41705f:	mov    eax,0xa6b28dd7
  417064:	mov    eax,ds:0xf4345141
  417069:	mov    ebp,0x660f8400
  41706e:	jb     0x417018
  417070:	pop    ebx
  417071:	dec    ebx
  417072:	mov    bl,0xeb
  417074:	je     0x417026
  417076:	sbb    BYTE PTR ds:0xcc8d5220,dl
  41707c:	and    esp,DWORD PTR [eax]
  41707e:	cmp    ebp,esi
  417080:	adc    al,0x45
  417082:	or     eax,0xbd0c805c
  417087:	call   0x7193:0x560aa65b
  41708e:	pop    eax
  41708f:	mov    ebp,0x9203a9c1
  417094:	inc    ebp
  417095:	dec    esi
  417096:	test   DWORD PTR [ecx+edi*2+0x7e],edi
  41709a:	ins    BYTE PTR es:[edi],dx
  41709b:	lds    esi,FWORD PTR [ebp-0x66cc474f]
  4170a1:	ret    
  4170a2:	and    eax,0x4a76f4ca
  4170a7:	sub    eax,0x97c98353
  4170ac:	or     dl,ah
  4170ae:	dec    ebp
  4170af:	jle    0x4170df
  4170b1:	jns    0x417124
  4170b3:	fdivrp st(4),st
  4170b5:	pop    ecx
  4170b6:	dec    ebp
  4170b7:	sub    bh,0xb4
  4170ba:	aad    0x25
  4170bc:	jno    0x417121
  4170be:	into   
  4170bf:	fisubr WORD PTR [edx]
  4170c1:	(bad)  
  4170c2:	dec    esp
  4170c3:	scas   eax,DWORD PTR es:[edi]
  4170c4:	and    BYTE PTR [eax-0x2d75444e],dh
  4170ca:	inc    edx
  4170cb:	loop   0x417051
  4170cd:	push   ss
  4170ce:	xor    al,0x34
  4170d0:	pop    eax
  4170d1:	aam    0x7f
  4170d3:	sar    BYTE PTR [ebx-0x7704806d],0xc9
  4170da:	jne    0x4170fe
  4170dc:	pop    ds
  4170dd:	dec    edi
  4170de:	clc    
  4170df:	pop    ds
  4170e0:	loope  0x417128
  4170e2:	(bad)  
  4170e3:	aad    0xc4
  4170e5:	jns    0x4170a5
  4170e7:	jo     0x4170db
  4170e9:	test   al,0x56
  4170eb:	stos   BYTE PTR es:[edi],al
  4170ec:	adc    al,0x6
  4170ee:	inc    eax
  4170ef:	iret   
  4170f0:	std    
  4170f1:	pusha  
  4170f2:	and    dh,0x95
  4170f5:	mov    edx,0x7c1a7194
  4170fa:	leave  
  4170fb:	push   ebx
  4170fc:	cmp    eax,0x81093db4
  417101:	push   ebp
  417102:	out    dx,al
  417103:	sar    DWORD PTR [edi+0x1],1
  417106:	jle    0x417116
  417108:	(bad)  
  417109:	dec    esi
  41710a:	arpl   WORD PTR [edx],di
  41710c:	sahf   
  41710d:	push   0x7a
  41710f:	jecxz  0x417146
  417111:	xor    al,0x6c
  417113:	das    
  417114:	jle    0x417127
  417116:	pop    DWORD PTR [edx]
  417118:	es loope 0x4170ed
  41711b:	jno    0x417169
  41711d:	inc    eax
  41711e:	or     bh,bh
  417120:	adc    dh,BYTE PTR [edi]
  417122:	mov    BYTE PTR [esi+esi*2+0x3a],cl
  417126:	rol    DWORD PTR [edx+0x4b],1
  417129:	lea    esi,[edx]
  41712b:	mov    ebx,DWORD PTR [edx+0x373980ce]
  417131:	rcl    DWORD PTR [ebp-0x61],0x35
  417135:	not    BYTE PTR [esi]
  417137:	push   es
  417138:	lahf   
  417139:	or     DWORD PTR gs:[esi+ebp*2-0x39],edx
  41713e:	or     bh,BYTE PTR ds:0x548e1cc6
  417144:	cmp    bh,BYTE PTR [edi+ebx*2+0x35a19c9e]
  41714b:	inc    edx
  41714c:	lds    ebx,FWORD PTR [edx+edi*4+0x43]
  417150:	pop    ebp
  417151:	xor    DWORD PTR [edx],eax
  417153:	cmp    bl,BYTE PTR [edi]
  417155:	je     0x417110
  417157:	das    
  417158:	dec    ebp
  417159:	and    eax,0x2c2c1359
  41715e:	push   ebx
  41715f:	dec    ebp
  417160:	jno    0x41719c
  417162:	sbb    eax,DWORD PTR [eax]
  417164:	pand   mm0,mm4
  417167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417168:	pop    ecx
  417169:	ss bnd jne 0x41719c
  41716d:	retf   0xef6f
  417170:	sub    al,BYTE PTR [esi+0x1c]
  417173:	inc    ebx
  417174:	add    al,0x18
  417176:	int    0x73
  417178:	aam    0xfb
  41717a:	iret   
  41717b:	mov    ecx,0xdc13fa4f
  417180:	sar    DWORD PTR [ecx+0x76],0x92
  417184:	aad    0xa6
  417186:	sub    esp,DWORD PTR [esi+0x39c26a01]
  41718c:	mov    DWORD PTR [edi],0xafe1425e
  417192:	inc    eax
  417193:	pop    ecx
  417194:	pop    esp
  417195:	xchg   BYTE PTR [ebx],bl
  417197:	pop    ebx
  417198:	sbb    eax,0xdcaed613
  41719d:	inc    edi
  41719e:	cmp    esi,esp
  4171a0:	mov    ds:0x48373696,al
  4171a5:	fwait
  4171a6:	out    0xf8,eax
  4171a8:	inc    edi
  4171a9:	mov    bh,0x42
  4171ab:	xchg   BYTE PTR ds:0x3f0a2059,dh
  4171b1:	test   al,0x8a
  4171b3:	inc    ebx
  4171b4:	or     bl,ah
  4171b6:	sbb    BYTE PTR [eax+0x5b],ah
  4171b9:	es int 0xea
  4171bc:	mov    ah,0xc8
  4171be:	xchg   BYTE PTR [esp+esi*4],bh
  4171c1:	xchg   edi,eax
  4171c2:	mov    dl,BYTE PTR [ebx-0x7]
  4171c5:	loopne 0x4171ca
  4171c7:	js     0x417161
  4171c9:	sahf   
  4171ca:	jmp    DWORD PTR [edx]
  4171cc:	push   esp
  4171cd:	jne    0x4171fb
  4171cf:	adc    al,0x7e
  4171d1:	add    BYTE PTR [eax-0x32],bh
  4171d4:	sbb    eax,0xc35bfc0e
  4171d9:	out    0xb6,al
  4171db:	and    DWORD PTR ds:0x5d815a96,0xffffff9f
  4171e2:	xchg   edx,eax
  4171e3:	out    0xfd,al
  4171e5:	out    0x83,eax
  4171e7:	sbb    al,0xb
  4171e9:	pop    es
  4171ea:	sub    DWORD PTR [edi],esi
  4171ec:	mov    esi,0x7db9230e
  4171f1:	push   ds
  4171f2:	nop
  4171f3:	ds push 0xffffff94
  4171f6:	std    
  4171f7:	push   ss
  4171f8:	fs push 0x9767f767
  4171fe:	ficom  DWORD PTR [ebx-0x1]
  417201:	sub    eax,0x4f559417
  417206:	inc    ebp
  417207:	xor    DWORD PTR [eax+eax*8-0x5eaa859d],esi
  41720e:	in     al,0x42
  417210:	fcom   DWORD PTR [edi-0xd7d6022]
  417216:	movhps QWORD PTR [edx-0x573550d6],xmm6
  41721d:	xchg   ebp,eax
  41721e:	or     BYTE PTR [edi+0x20ad1de5],bl
  417224:	mov    dl,0x77
  417226:	mov    edi,0x4f61be0e
  41722b:	pop    esp
  41722c:	and    eax,0xdf4a1d44
  417231:	dec    edi
  417232:	jecxz  0x417289
  417234:	adc    esi,eax
  417236:	cmp    al,0x5a
  417238:	and    BYTE PTR [edx+0x70],cl
  41723b:	nop
  41723c:	sub    eax,0xf72c26f
  417241:	aam    0x36
  417243:	push   es
  417244:	call   FWORD PTR [eax+0x77dd8266]
  41724a:	jmp    0x531d:0xdf9b2b11
  417251:	jb     0x4171f5
  417253:	repz btc DWORD PTR [esi+0x2eb70d7b],edx
  41725b:	lahf   
  41725c:	inc    eax
  41725e:	dec    ebp
  41725f:	int3   
  417260:	jecxz  0x41722f
  417262:	jg     0x417291
  417264:	sub    eax,0xb531443a
  417269:	test   ecx,esp
  41726b:	sbb    dh,al
  41726d:	(bad)  
  41726f:	push   ss
  417270:	sti    
  417271:	and    DWORD PTR ds:0x4bb1e306,edi
  417277:	push   cs
  417278:	iret   
  417279:	jns    0x417215
  41727b:	cld    
  41727c:	data16 test al,0x32
  41727f:	imul   esp,esp,0xffffffaa
  417282:	dec    edx
  417283:	xor    al,0x7a
  417285:	adc    eax,0x6af933f3
  41728a:	xchg   edx,eax
  41728b:	mov    ds:0xaba21d56,eax
  417290:	or     eax,0xf6c778ab
  417295:	js     0x41724b
  417297:	lds    eax,FWORD PTR [ebp+0x62]
  41729a:	cli    
  41729b:	cmp    eax,0xa03ead66
  4172a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172a1:	cmp    ebp,ecx
  4172a3:	stos   DWORD PTR es:[edi],eax
  4172a4:	(bad)  
  4172a5:	pop    eax
  4172a6:	sbb    DWORD PTR [edi],eax
  4172a8:	mov    bl,0xca
  4172aa:	inc    ebp
  4172ab:	pop    ss
  4172ac:	or     al,0x67
  4172ae:	xchg   esi,eax
  4172af:	push   esi
  4172b0:	fdivr  st(3),st
  4172b2:	outs   dx,DWORD PTR ds:[esi]
  4172b3:	push   ds
  4172b4:	setp   BYTE PTR [esp+eiz*8]
  4172b8:	push   0xfffffff7
  4172ba:	nop
  4172bb:	int    0x45
  4172bd:	dec    edi
  4172be:	add    BYTE PTR [eax+0x14d45c64],dh
  4172c4:	sub    al,0x1f
  4172c6:	ins    DWORD PTR es:[edi],dx
  4172c7:	mov    ch,ch
  4172c9:	jno    0x417344
  4172cb:	push   0xffffffae
  4172cd:	fbld   TBYTE PTR [ebx+edi*8+0x1d]
  4172d1:	push   esp
  4172d2:	adc    bh,BYTE PTR [edi-0xe]
  4172d5:	xor    dl,BYTE PTR [eax+eiz*2-0x717881c2]
  4172dc:	xor    al,0x39
  4172de:	pop    edx
  4172df:	mov    ds:0x1b0c56bb,al
  4172e4:	sub    edi,DWORD PTR [esi]
  4172e6:	jg     0x41734d
  4172e8:	pop    ecx
  4172e9:	sub    al,BYTE PTR [edx+0x79924f18]
  4172ef:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4172f1:	adc    eax,esp
  4172f3:	cmp    ebp,edx
  4172f5:	fild   DWORD PTR [esp+edx*4]
  4172f8:	sbb    bh,BYTE PTR [edx-0x2897da3e]
  4172fe:	iret   
  4172ff:	sbb    DWORD PTR [edi],0xffffff92
  417302:	(bad)  
  417303:	cwde   
  417304:	push   ebx
  417305:	or     edx,DWORD PTR [ecx-0x114e2a3a]
  41730b:	iret   
  41730c:	rol    DWORD PTR [esi+0x3c],1
  41730f:	sti    
  417310:	sbb    DWORD PTR [edx-0xe619cee],ebx
  417316:	mov    ecx,0x414370e4
  41731b:	(bad)  
  41731c:	adc    eax,DWORD PTR [ebp-0x372720b]
  417322:	outs   dx,DWORD PTR ds:[esi]
  417323:	or     BYTE PTR [ebp-0xa],0xcf
  417327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417328:	div    BYTE PTR [ebx]
  41732a:	hlt    
  41732b:	push   esi
  41732c:	dec    eax
  41732d:	pop    ss
  41732e:	mov    ah,0x46
  417330:	sub    DWORD PTR [edx],esp
  417332:	push   ebx
  417333:	mov    edx,0x266bf3a
  417338:	fild   DWORD PTR [esi-0x2c]
  41733b:	xchg   esp,eax
  41733c:	add    ebp,ecx
  41733e:	inc    ebx
  41733f:	cdq    
  417340:	xor    eax,0x386af34f
  417345:	and    DWORD PTR [edi-0x6b],edx
  417348:	scas   eax,DWORD PTR es:[edi]
  417349:	aad    0xac
  41734b:	dec    edx
  41734c:	mov    eax,ds:0x3d5241f0
  417351:	leave  
  417352:	sar    edi,1
  417354:	mov    al,ds:0x4bae3faa
  417359:	or     BYTE PTR [edi+edx*2-0x17385230],dh
  417360:	xchg   esi,eax
  417361:	jp     0x4173c7
  417363:	push   ebx
  417364:	xlat   BYTE PTR ds:[ebx]
  417365:	cld    
  417366:	and    eax,0x6078b3e8
  41736b:	jne    0x4173e0
  41736d:	or     al,0xff
  41736f:	fcomp  st(2)
  417371:	mov    ah,0x10
  417373:	cld    
  417374:	mov    DWORD PTR [esi+0x2b],eax
  417377:	aas    
  417378:	or     al,BYTE PTR [ebx]
  41737a:	push   ds
  41737b:	es stos BYTE PTR es:[edi],al
  41737d:	lahf   
  41737e:	nop
  41737f:	call   0xab98:0x916aef47
  417386:	das    
  417387:	or     edx,DWORD PTR cs:0x26ef53
  41738e:	dec    edx
  41738f:	adc    al,cl
  417391:	popf   
  417392:	mov    bh,0x41
  417394:	xor    BYTE PTR [ecx+0x78df86fd],0xa4
  41739b:	scas   al,BYTE PTR es:[edi]
  41739c:	jmp    0x417387
  41739e:	and    bl,BYTE PTR [ecx+0x51]
  4173a1:	test   al,0x9a
  4173a3:	jmp    0x5e82d075
  4173a8:	mov    bh,0x92
  4173aa:	add    al,0xda
  4173ac:	inc    ecx
  4173ad:	xor    edi,DWORD PTR [eax]
  4173af:	fdiv   DWORD PTR [esi]
  4173b1:	and    eax,0x972ef5c1
  4173b6:	xchg   BYTE PTR [ebp+0x8bf82bc],dl
  4173bc:	fadd   QWORD PTR [ebx+0x4ee984f3]
  4173c2:	jmp    0x8503:0x50f90b09
  4173c9:	in     eax,dx
  4173ca:	scas   al,BYTE PTR es:[edi]
  4173cb:	adc    esp,DWORD PTR [eax+esi*1+0x5308d1cb]
  4173d2:	loop   0x417362
  4173d4:	cld    
  4173d5:	fld    st(6)
  4173d7:	mov    edi,0x8021cb90
  4173dc:	push   0x5c7bef07
  4173e1:	fld    st(5)
  4173e3:	inc    edi
  4173e4:	dec    ebp
  4173e5:	mov    al,gs:0xbed24e6e
  4173eb:	mov    cl,0x93
  4173ed:	adc    al,0x97
  4173ef:	cdq    
  4173f0:	data16 loopne 0x417404
  4173f3:	and    esi,DWORD PTR [ecx-0x3bfda2e1]
  4173f9:	add    ch,BYTE PTR [ebx+esi*4-0x80]
  4173fd:	clc    
  4173fe:	dec    ebp
  4173ff:	mov    eax,0x206056f4
  417404:	int    0x89
  417406:	adc    al,0x4d
  417408:	pop    esi
  417409:	xchg   ebp,eax
  41740a:	aas    
  41740b:	mov    edx,0x44ea7110
  417410:	sbb    BYTE PTR [ecx-0x3a],dl
  417413:	mov    eax,ebp
  417415:	xor    eax,0x5d1bfe9c
  41741a:	lds    ecx,FWORD PTR ds:0x3ae93167
  417420:	fisubr WORD PTR [ebx-0x44]
  417423:	lea    ebp,[ecx-0x25ddda54]
  417429:	xor    esp,DWORD PTR [ebx-0x5e]
  41742c:	fmul   st(7),st
  41742e:	xchg   ebp,eax
  41742f:	int3   
  417430:	pusha  
  417431:	or     al,0x4e
  417433:	sahf   
  417434:	adc    esi,edi
  417436:	xchg   ebx,eax
  417437:	inc    edx
  417438:	cmp    al,0x21
  41743a:	mov    ds:0xd50e48b6,al
  41743f:	push   ecx
  417440:	int    0xe1
  417442:	pop    ebx
  417443:	cmc    
  417444:	pop    ebp
  417445:	scas   al,BYTE PTR es:[edi]
  417446:	sub    eax,eax
  417448:	sub    eax,0x1a1c48ed
  41744d:	sub    al,0x27
  41744f:	add    BYTE PTR ds:0x536cb4c7,bl
  417455:	xlat   BYTE PTR ds:[ebx]
  417456:	rcl    BYTE PTR [esi-0x393197ba],cl
  41745c:	sbb    eax,0xb99b2a1d
  417461:	aaa    
  417462:	nop
  417463:	jp     0x417467
  417465:	mov    eax,ds:0x765d4bea
  41746a:	xchg   esp,eax
  41746b:	jbe    0x417479
  41746d:	push   esi
  41746e:	ret    0xce63
  417471:	or     dl,BYTE PTR [eax]
  417473:	iret   
  417474:	rcr    DWORD PTR [ecx-0x7e92c58b],cl
  41747a:	clc    
  41747b:	les    edx,FWORD PTR [edi+0x63c5fd0d]
  417481:	push   edi
  417482:	add    al,0xdc
  417484:	mov    ecx,0xf1fdc6b
  417489:	sub    BYTE PTR [ebx+0x18],bh
  41748c:	push   esi
  41748d:	sub    al,0xd
  41748f:	and    al,0x51
  417491:	mov    cl,dl
  417493:	jo     0x4174b7
  417495:	outs   dx,DWORD PTR ds:[esi]
  417496:	xlat   BYTE PTR ds:[ebx]
  417497:	ss xchg esi,eax
  417499:	addr16 sub al,0xf7
  41749c:	or     DWORD PTR [ebp+0x2280ed8d],edi
  4174a2:	dec    edi
  4174a3:	aad    0xb6
  4174a5:	fld    DWORD PTR [esi]
  4174a7:	out    dx,eax
  4174a8:	fs push ebp
  4174aa:	mov    esi,0x5e2b98c3
  4174af:	data16 or al,dl
  4174b2:	xchg   esi,eax
  4174b3:	out    0xc2,al
  4174b5:	ret    
  4174b6:	(bad)  
  4174b7:	mov    DWORD PTR [ecx*4+0x6aa46586],edx
  4174be:	inc    ebx
  4174bf:	sub    esp,DWORD PTR [edi-0x5a]
  4174c2:	sti    
  4174c3:	call   0xc95a:0x4650db5e
  4174ca:	mov    BYTE PTR ds:[ebx+0x6c],dh
  4174ce:	xor    eax,0x1ce6c826
  4174d3:	adc    esp,DWORD PTR [esi]
  4174d5:	test   eax,0x53f84bd8
  4174da:	rol    esp,cl
  4174dc:	fisttp QWORD PTR [eax+0x43d425d0]
  4174e2:	loop   0x4174ca
  4174e4:	cwde   
  4174e5:	call   0xfc50ee34
  4174ea:	(bad)  
  4174eb:	mov    dl,0x3a
  4174ed:	and    eax,0xf2423af1
  4174f2:	bound  ebp,QWORD PTR [ebp+eiz*8-0x53]
  4174f6:	je     0x4174ee
  4174f8:	sbb    al,0xb6
  4174fa:	retf   
  4174fb:	mov    edi,0x1d25be77
  417500:	dec    edi
  417501:	je     0x4174b9
  417503:	mov    edi,0xb4c3da76
  417508:	xor    esp,ebp
  41750a:	iret   
  41750b:	cmp    eax,esi
  41750d:	mov    ch,BYTE PTR ds:0x6d71f811
  417513:	(bad)  
  417515:	cdq    
  417516:	inc    edx
  417517:	jl     0x417579
  417519:	xor    DWORD PTR [edi-0x6b5f9527],ebx
  41751f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417520:	jmp    DWORD PTR [edi]
  417522:	test   bh,cl
  417524:	xchg   esi,eax
  417525:	jp     0x417585
  417527:	aaa    
  417528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417529:	out    0x37,al
  41752b:	aam    0xa4
  41752d:	inc    edi
  41752e:	xor    BYTE PTR [edi-0x57],dh
  417531:	in     al,dx
  417532:	fcom   QWORD PTR [ecx]
  417534:	jecxz  0x41757c
  417536:	jbe    0x417572
  417538:	jle    0x41751f
  41753a:	iret   
  41753b:	popf   
  41753c:	cmp    BYTE PTR [edx-0x69],bh
  41753f:	ret    0x641
  417542:	(bad)
  417547:	stc    
  417548:	jl     0x4174f5
  41754a:	fiadd  DWORD PTR [ecx]
  41754c:	inc    esi
  41754d:	mov    al,ds:0x2822b30
  417552:	sbb    ah,BYTE PTR [esi-0x27]
  417555:	lods   eax,DWORD PTR ds:[esi]
  417556:	dec    ecx
  417557:	jmp    0x49a7:0xdfc922b8
	...
  417566:	call   0x7fb7dd3b
  41756b:	idiv   ecx
  41756d:	ficom  WORD PTR [ebp+0x2e]
  417570:	inc    esp
  417571:	and    al,0x3e
  417573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417574:	pusha  
  417575:	out    0xdb,eax
  417577:	outs   dx,DWORD PTR ds:[esi]
  417578:	add    DWORD PTR [eax],eax
  41757a:	and    BYTE PTR [edi],al
  41757c:	add    BYTE PTR [eax],al
  41757e:	or     BYTE PTR [edx+0x5af8bfa0],bl
  417584:	pop    ds
  417585:	inc    edi
  417586:	jecxz  0x417607
  417588:	sbb    eax,ebx
  41758a:	inc    edi
  41758b:	out    dx,eax
  41758c:	ss icebp 
  41758e:	scas   al,BYTE PTR es:[edi]
  41758f:	push   ss
  417590:	jle    0x4175f0
  417592:	(bad)  
  417593:	add    esi,DWORD PTR [ebp+0x1915db35]
  417599:	gs aad 0x53
  41759c:	or     BYTE PTR [ebp-0x3d],al
  41759f:	push   ecx
  4175a0:	gs mov ah,0x5f
  4175a3:	cs xchg ecx,eax
  4175a5:	push   ebp
  4175a6:	pusha  
  4175a7:	fisub  WORD PTR [edx]
  4175a9:	mov    cl,0xcb
  4175ab:	mov    dh,0xde
  4175ad:	add    BYTE PTR [edx],bl
  4175af:	test   eax,0x2483d518
  4175b4:	xchg   edx,eax
  4175b5:	inc    ecx
  4175b6:	nop
  4175b7:	shl    BYTE PTR [ebx+0x28],cl
  4175ba:	mov    bh,0x3
  4175bc:	(bad)  
  4175bd:	mov    ds:0x509b67f1,al
  4175c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175c3:	retf   0x6d7d
  4175c6:	fcom   QWORD PTR ds:0xf9a85ae2
  4175cc:	jb     0x417647
  4175ce:	adc    al,0x36
  4175d0:	mov    esi,0x23ff21f6
  4175d5:	rcr    esi,cl
  4175d7:	add    eax,0xa977aeb7
  4175dc:	cmp    al,BYTE PTR [ecx+edi*4+0x56]
  4175e0:	mov    ds:0xc5da6ea6,eax
  4175e5:	or     cl,BYTE PTR [eax*8+0x39046692]
  4175ec:	out    dx,eax
  4175ed:	sub    BYTE PTR [esi+edx*1],ah
  4175f0:	in     eax,dx
  4175f1:	adc    bh,BYTE PTR [ebx-0x37304ee]
  4175f7:	jne    0x417673
  4175f9:	ins    BYTE PTR es:[edi],dx
  4175fa:	ror    BYTE PTR ds:0xf8fa4acc,cl
  417600:	adc    DWORD PTR [ecx-0x1],0x1a03f953
  417607:	push   ebp
  417608:	mov    ?,WORD PTR [edi]
  41760a:	dec    ecx
  41760b:	retf   
  41760c:	xchg   edi,eax
  41760d:	push   ebx
  41760e:	bndstx [edi+edi*8+0x637ead2c],(bad)
  417616:	gs pop edi
  417618:	cdq    
  417619:	xchg   edi,eax
  41761a:	aas    
  41761b:	pop    edi
  41761c:	cld    
  41761d:	sbb    BYTE PTR [ecx-0x4358dad0],0xc7
  417624:	sub    eax,DWORD PTR [edx]
  417626:	xor    ch,0x9c
  417629:	ins    DWORD PTR es:[edi],dx
  41762a:	dec    edx
  41762b:	out    0x8,eax
  41762d:	mov    ebx,0xaca0ac1c
  417632:	jno    0x41766f
  417634:	adc    edi,ecx
  417636:	std    
  417637:	in     eax,dx
  417638:	mov    ebp,0xa71c4ce8
  41763d:	out    dx,eax
  41763e:	idiv   DWORD PTR [edx+0x36]
  417641:	fist   DWORD PTR [eax+0x66]
  417644:	call   0x43db:0xe29b9f01
  41764b:	adc    dl,ch
  41764d:	jmp    0x41761f
  41764f:	fistp  WORD PTR [eax]
  417651:	push   edx
  417652:	in     eax,dx
  417653:	test   eax,0xb5d1abe5
  417658:	or     DWORD PTR [edx+0x3],ebx
  41765b:	fs je  0x417679
  41765e:	pushf  
  41765f:	mov    al,ds:0x1d127e61
  417664:	int3   
  417665:	mov    esp,0xae38989c
  41766a:	jo     0x417611
  41766c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41766d:	push   esp
  41766e:	mov    dh,dh
  417670:	mov    ebp,eax
  417672:	out    dx,al
  417673:	std    
  417674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417675:	jmp    0x5786:0xe31a8be6
  41767c:	push   ebx
  41767d:	pop    edi
  41767e:	leave  
  41767f:	dec    eax
  417680:	in     eax,dx
  417681:	(bad)  
  417682:	out    dx,eax
  417683:	jmp    0x1bea:0xc6485550
  41768a:	inc    eax
  41768b:	cmp    DWORD PTR [esi+0x7],0x7c
  41768f:	scas   al,BYTE PTR es:[edi]
  417690:	pusha  
  417691:	nop
  417692:	mov    ss,WORD PTR [ebp+0x3f]
  417695:	pop    edi
  417696:	lods   al,BYTE PTR ds:[esi]
  417697:	xchg   ecx,eax
  417698:	hlt    
  417699:	xchg   edi,eax
  41769a:	arpl   WORD PTR [ecx-0x4c],sp
  41769d:	add    ah,bl
  41769f:	call   0xb6c:0xc029bc50
  4176a6:	les    esi,FWORD PTR ds:0x4deb7516
  4176ac:	popf   
  4176ad:	std    
  4176ae:	imul   ecx,esi,0x1e0894e3
  4176b4:	mov    ds:0xe886087f,eax
  4176b9:	and    eax,0xfd17fff4
  4176be:	test   eax,0x9c1e8ccf
  4176c3:	lds    esi,FWORD PTR [ebx+0x4b]
  4176c6:	cmp    al,0xcd
  4176c8:	xor    al,0xf5
  4176ca:	outs   dx,DWORD PTR ds:[esi]
  4176cb:	cmp    DWORD PTR [edx+0x21],esp
  4176ce:	int    0xd0
  4176d0:	jb     0x417689
  4176d2:	jae    0x417670
  4176d4:	cmp    DWORD PTR [edi],eax
  4176d6:	jl     0x417721
  4176d8:	sti    
  4176d9:	mov    ah,0xf6
  4176db:	dec    eax
  4176dc:	sub    eax,0x79755dc0
  4176e1:	je     0x41775d
  4176e3:	fild   QWORD PTR [eax-0x7408af07]
  4176e9:	mov    al,0xbf
  4176eb:	(bad)  
  4176ec:	(bad)  
  4176ed:	in     eax,0xd1
  4176ef:	sub    ebp,DWORD PTR [ebx]
  4176f1:	mov    cl,0x33
  4176f3:	mov    ebx,0x3ce037b3
  4176f8:	sub    eax,DWORD PTR [ebp-0x30]
  4176fb:	mov    edi,0x4b111393
  417700:	add    bh,bl
  417702:	das    
  417703:	sbb    eax,0x21ca967c
  417708:	ret    0x8dc0
  41770b:	jle    0x417781
  41770d:	dec    eax
  41770e:	js     0x417758
  417710:	cs lock mov eax,0x5231399c
  417717:	out    dx,eax
  417718:	push   esp
  417719:	int    0x69
  41771b:	adc    edi,DWORD PTR [ebp-0x4f1cc7f0]
  417721:	dec    DWORD PTR [edi]
  417723:	push   ss
  417724:	stos   DWORD PTR es:[edi],eax
  417725:	sub    ecx,DWORD PTR [edi+0x16]
  417728:	stc    
  417729:	lods   al,BYTE PTR ds:[esi]
  41772a:	fcom   st(6)
  41772c:	inc    ecx
  41772d:	out    0x4b,al
  41772f:	push   ebx
  417730:	sbb    edx,DWORD PTR [esp+esi*8+0x0]
  417734:	dec    edi
  417735:	push   ebx
  417736:	cmp    eax,0x666f9162
  41773b:	push   0xbe33db4c
  417740:	xchg   edi,eax
  417741:	(bad)  
  417742:	push   edi
  417743:	ficomp DWORD PTR [edx+0x67]
  417746:	repnz out dx,eax
  417748:	inc    ebx
  417749:	jl     0x41778a
  41774b:	inc    esp
  41774c:	push   ebx
  41774d:	test   al,0x87
  41774f:	(bad)  
  417750:	inc    DWORD PTR [edi+0x769199a3]
  417756:	out    0x66,al
  417758:	dec    ebp
  417759:	mov    bh,0x1c
  41775b:	cmp    edx,DWORD PTR [ebx]
  41775d:	cmp    DWORD PTR [edi+esi*8-0x7447c7e6],esi
  417764:	bound  edi,QWORD PTR [ecx+edx*2-0x7c]
  417768:	inc    esp
  417769:	mov    ch,0xf
  41776b:	adc    BYTE PTR [ecx-0x50a1e12],bh
  417771:	jae    0x4177dc
  417773:	test   al,0xa4
  417775:	pusha  
  417776:	or     DWORD PTR [ebx+0x7d1748d5],eax
  41777c:	push   ebx
  41777d:	xchg   ebp,eax
  41777e:	aas    
  41777f:	mov    ebx,0xa70a7354
  417784:	mov    edx,0xdd2a4465
  417789:	mov    dl,0xd6
  41778b:	pop    es
  41778c:	or     al,0x8
  41778e:	in     eax,dx
  41778f:	sub    al,BYTE PTR [ebp-0x13]
  417792:	push   edx
  417793:	in     eax,dx
  417794:	(bad)  
  417795:	rol    al,1
  417797:	jb     0x4177d3
  417799:	sbb    al,0xc1
  41779b:	(bad)  
  41779c:	and    cl,BYTE PTR [ebp+ebp*4-0x6e58af95]
  4177a3:	push   cs
  4177a4:	adc    BYTE PTR [edi+0x7],bh
  4177a7:	xchg   esi,eax
  4177a8:	add    al,0x5
  4177aa:	or     al,0x5e
  4177ac:	jbe    0x417743
  4177ae:	aaa    
  4177af:	mov    ah,0xd4
  4177b1:	sub    ch,BYTE PTR [ebp-0x626de7d8]
  4177b7:	imul   esi,DWORD PTR [esi],0x79
  4177ba:	pusha  
  4177bb:	gs jl  0x417768
  4177be:	jmp    0x334c6683
  4177c3:	sti    
  4177c4:	xchg   edx,eax
  4177c5:	icebp  
  4177c6:	es dec edi
  4177c8:	xchg   ebx,eax
  4177c9:	sub    al,0x4d
  4177cb:	out    0x6a,al
  4177cd:	sbb    ecx,0xaa43cbbe
  4177d3:	mul    DWORD PTR [esi]
  4177d5:	repz jmp 0xf710e1a5
  4177db:	mov    eax,ds:0xf464d93a
  4177e0:	dec    esp
  4177e1:	push   esp
  4177e2:	aaa    
  4177e3:	push   DWORD PTR [ebx+0x7a53123a]
  4177e9:	push   esi
  4177ea:	push   edi
  4177eb:	mov    DWORD PTR [esp+eax*8-0x3ff13a84],eax
  4177f2:	stc    
  4177f3:	jb     0x4177a4
  4177f5:	imul   BYTE PTR [ebx+0x1c]
  4177f8:	and    DWORD PTR [edi+0x6e],0xa9139b5b
  4177ff:	scas   al,BYTE PTR es:[edi]
  417800:	sbb    edx,DWORD PTR [ebp+0x72]
  417803:	loopne 0x417799
  417805:	add    ecx,DWORD PTR [ecx-0x65]
  417808:	xchg   edx,eax
  417809:	and    DWORD PTR [edi-0x280563fc],0xffffffee
  417810:	sub    eax,edi
  417812:	sub    al,al
  417814:	or     DWORD PTR [ebx-0x7d],esi
  417817:	jns    0x41780b
  417819:	mov    ebp,0xee603749
  41781e:	mov    ds:0x610fdb60,al
  417823:	inc    edx
  417824:	mov    WORD PTR [esi-0x3b],fs
  417827:	imul   ebp,DWORD PTR [edx-0x3f],0xffffffdd
  41782b:	pop    eax
  41782c:	rol    bh,cl
  41782e:	sbb    ah,BYTE PTR [esi]
  417830:	xor    eax,0x89747b91
  417835:	cli    
  417836:	jp     0x41782b
  417838:	pop    ecx
  417839:	mov    ebp,0x2b92ef17
  41783e:	stos   DWORD PTR es:[edi],eax
  41783f:	(bad)  [ebp+esi*4+0x54ceda16]
  417846:	xor    al,0xf7
  417848:	out    0x2d,al
  41784a:	xor    bh,dh
  41784c:	gs xchg esi,eax
  41784e:	ins    BYTE PTR es:[edi],dx
  41784f:	adc    ch,BYTE PTR [ecx-0x27f21d25]
  417855:	pusha  
  417856:	stos   BYTE PTR es:[edi],al
  417857:	enter  0x19e1,0x76
  41785b:	sahf   
  41785c:	gs pop ecx
  41785e:	lods   eax,DWORD PTR ds:[esi]
  41785f:	xchg   edi,eax
  417860:	push   es
  417861:	(bad)  
  417862:	call   FWORD PTR [eax-0x78]
  417865:	stos   BYTE PTR es:[edi],al
  417866:	ins    BYTE PTR es:[edi],dx
  417867:	(bad)  
  417868:	das    
  417869:	adc    dh,BYTE PTR [eax+0x40]
  41786c:	loop   0x417817
  41786e:	adc    DWORD PTR [eax-0xa562ee4],ebx
  417874:	mov    esp,0xf1ad21dd
  417879:	inc    eax
  41787a:	outs   dx,BYTE PTR ds:[esi]
  41787b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41787c:	packsswb mm0,mm1
  41787f:	les    ebx,FWORD PTR [ebp-0x1c297bb9]
  417885:	jmp    0xc5a729f0
  41788a:	and    ebp,esi
  41788c:	shl    cl,0x5b
  41788f:	push   esp
  417890:	je     0x4178f4
  417892:	sar    al,1
  417894:	aas    
  417895:	scas   al,BYTE PTR es:[edi]
  417896:	js     0x4178a9
  417898:	xor    DWORD PTR [esi+0x45259648],ecx
  41789e:	test   al,0xa4
  4178a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178a1:	add    BYTE PTR [ebp+0x48f52785],ch
  4178a7:	test   BYTE PTR [eax+0x5c],ah
  4178aa:	adc    BYTE PTR [ecx],ah
  4178ac:	stos   BYTE PTR es:[edi],al
  4178ad:	fdivp  st(5),st
  4178af:	ins    BYTE PTR es:[edi],dx
  4178b0:	xor    BYTE PTR [esi+0xd271013],dh
  4178b6:	aad    0x75
  4178b8:	js     0x41790b
  4178ba:	lods   eax,DWORD PTR ds:[esi]
  4178bb:	mov    cl,0x70
  4178bd:	scas   eax,DWORD PTR es:[edi]
  4178be:	xor    ecx,DWORD PTR fs:[esi-0x5c]
  4178c2:	out    0x78,al
  4178c4:	(bad)  
  4178c5:	aad    0xc
  4178c7:	jne    0x41787b
  4178c9:	and    eax,0x58088efb
  4178ce:	call   0xca147e1a
  4178d3:	sbb    eax,0xa7b21c31
  4178d8:	sbb    bl,cl
  4178da:	or     edx,DWORD PTR [ebx-0x47]
  4178dd:	push   ds
  4178de:	inc    ebx
  4178df:	push   edx
  4178e0:	sar    BYTE PTR [edi-0x2f],cl
  4178e3:	call   0x4a3e:0xc0155b45
  4178ea:	inc    esi
  4178eb:	scas   eax,DWORD PTR es:[edi]
  4178ec:	clc    
  4178ed:	push   ecx
  4178ee:	ins    BYTE PTR es:[edi],dx
  4178ef:	or     al,0x4c
  4178f1:	leave  
  4178f2:	cs mov eax,0x8132a4e7
  4178f8:	xor    eax,0xf5d022e2
  4178fd:	dec    edi
  4178fe:	push   0x3fcd4e07
  417903:	add    bl,BYTE PTR [edi]
  417905:	hlt    
  417906:	int    0xa5
  417908:	call   0x9f29:0x8d339b70
  41790f:	fadd   QWORD PTR cs:[eax+edi*8]
  417913:	aaa    
  417914:	push   es
  417915:	or     BYTE PTR [ebx+0x15a1d8da],dh
  41791b:	inc    esi
  41791c:	out    dx,al
  41791d:	fwait
  41791e:	scas   eax,DWORD PTR es:[edi]
  41791f:	inc    esi
  417920:	out    dx,eax
  417921:	cmp    ebp,DWORD PTR fs:[eax+0x5948b3e3]
  417928:	adc    bh,0x61
  41792b:	pop    ebp
  41792c:	ds fwait
  41792e:	and    BYTE PTR [ebp-0x49718a7f],bl
  417934:	mov    esi,es
  417936:	sbb    cl,BYTE PTR [edx+0x5a]
  417939:	out    dx,eax
  41793a:	shr    BYTE PTR [edx+0x58],cl
  41793d:	mov    edx,0x5d9de91a
  417942:	xchg   ecx,eax
  417943:	lods   al,BYTE PTR ds:[esi]
  417944:	xor    DWORD PTR [esp+ecx*1+0x6a],esi
  417948:	loop   0x417926
  41794a:	push   ss
  41794b:	dec    esi
  41794c:	xchg   ebx,eax
  41794d:	inc    eax
  41794e:	jb     0x41791d
  417950:	jge    0x4178d7
  417952:	sub    BYTE PTR [esi+0x51fbbd10],0xa5
  417959:	pop    ss
  41795a:	(bad)  
  41795b:	mov    esi,0xd71d8668
  417960:	ret    
  417961:	ds sub eax,0x7ab7af2c
  417967:	push   ds
  417968:	sub    DWORD PTR [edi-0x57992d6a],ebx
  41796e:	push   ebx
  41796f:	mov    eax,0x440d54f7
  417974:	idiv   ecx
  417976:	aas    
  417977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417978:	cmc    
  417979:	sbb    al,0x90
  41797b:	sbb    DWORD PTR [edx+0x725a3209],0xffffffba
  417982:	test   BYTE PTR [eax],dl
  417984:	jge    0x4179d3
  417986:	adc    BYTE PTR [edi-0x5d],bh
  417989:	repnz nop
  41798b:	cmp    DWORD PTR [esi+0x3b],0xb55d302
  417992:	scas   eax,DWORD PTR es:[edi]
  417993:	pop    edx
  417994:	int3   
  417995:	xchg   edx,eax
  417996:	jge    0x417992
  417998:	xor    al,0x32
  41799a:	fwait
  41799b:	arpl   WORD PTR [ecx],cx
  41799d:	pushf  
  41799e:	clc    
  41799f:	es loopne 0x417978
  4179a2:	xor    eax,0x60a37769
  4179a7:	adc    DWORD PTR [ecx],ebp
  4179a9:	push   0xffffffe9
  4179ab:	push   ebp
  4179ac:	std    
  4179ad:	or     esp,DWORD PTR [esi-0x7db31de7]
  4179b3:	inc    ebx
  4179b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179b5:	dec    esi
  4179b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179b7:	pop    ecx
  4179b8:	cld    
  4179b9:	leave  
  4179ba:	add    eax,0x8b0320ae
  4179bf:	imul   DWORD PTR [ecx]
  4179c1:	pop    ds
  4179c2:	in     eax,0xc8
  4179c4:	fdivr  QWORD PTR [edi]
  4179c6:	sbb    DWORD PTR [ebp-0x76958d93],ebp
  4179cc:	pop    edx
  4179cd:	pop    ds
  4179ce:	nop
  4179cf:	ror    DWORD PTR [edi],1
  4179d1:	sub    eax,0xcbec87d9
  4179d6:	push   edx
  4179d7:	les    esi,FWORD PTR [edi-0x79]
  4179da:	inc    eax
  4179db:	ror    DWORD PTR [eax],1
  4179dd:	cwde   
  4179de:	(bad)  
  4179df:	(bad)  
  4179e0:	jo     0x4179fb
  4179e2:	dec    esi
  4179e3:	sub    al,0x32
  4179e5:	xor    ebx,0x8e64ad7f
  4179eb:	adc    BYTE PTR [ebx+0x536a8cfa],ah
  4179f1:	ret    0x8fb5
  4179f4:	not    BYTE PTR [esp+ebx*8]
  4179f7:	pop    eax
  4179f8:	ins    DWORD PTR es:[edi],dx
  4179f9:	mov    ch,0xa8
  4179fb:	inc    ebp
  4179fc:	and    ecx,DWORD PTR [ebx-0x69f2f95c]
  417a02:	sbb    al,0xdc
  417a04:	jmp    0x417a4f
  417a06:	xor    eax,0x15703e01
  417a0b:	in     al,dx
  417a0c:	dec    edx
  417a0d:	push   0x64
  417a0f:	xchg   ebp,eax
  417a10:	jmp    0x3ebc:0x73ffb3dc
  417a17:	sbb    al,dh
  417a19:	or     edx,0xfffffffc
  417a1c:	pop    es
  417a1d:	push   ds
  417a1e:	inc    ebx
  417a1f:	retf   
  417a20:	mov    ecx,0x59478879
  417a25:	jmp    0x99fedb40
  417a2a:	jnp    0x417a45
  417a2c:	jnp    0x417a95
  417a2e:	mov    bh,0xe0
  417a30:	loopne 0x417a0e
  417a32:	mov    al,ds:0xa73c0e0c
  417a37:	jp     0x4179da
  417a39:	mov    WORD PTR [edi],?
  417a3b:	shl    DWORD PTR [ebp+0x65ab2f5f],cl
  417a41:	jmp    0x417a4e
  417a43:	xchg   DWORD PTR [ebx-0x535fa558],ebx
  417a49:	ret    0x919a
  417a4c:	mov    esp,0xcc9121bc
  417a51:	sub    BYTE PTR ds:0x2646c5a8,dh
  417a57:	add    esp,eax
  417a59:	mov    eax,0xa5f9bb70
  417a5e:	sub    dh,al
  417a60:	out    dx,al
  417a61:	int3   
  417a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a63:	push   0x74
  417a65:	push   es
  417a66:	hlt    
  417a67:	xchg   esp,eax
  417a68:	(bad)  
  417a69:	pushf  
  417a6a:	pop    ecx
  417a6b:	xchg   ebp,eax
  417a6c:	inc    ebx
  417a6d:	push   edx
  417a6e:	das    
  417a6f:	jmp    0x306c:0x20ae7c38
  417a76:	stos   DWORD PTR es:[edi],eax
  417a77:	shr    DWORD PTR [bp+di-0x16],1
  417a7b:	push   edx
  417a7c:	fcomp  QWORD PTR [eax+0x3b]
  417a7f:	or     eax,0x212a257f
  417a84:	add    esp,edx
  417a86:	sbb    ebx,DWORD PTR [edi+0x20]
  417a89:	and    eax,0x13b78d06
  417a8e:	inc    ebp
  417a8f:	shl    ebp,0xe5
  417a92:	xchg   esp,eax
  417a93:	sbb    cl,BYTE PTR [ecx-0x4482293b]
  417a99:	add    BYTE PTR [ecx],cl
  417a9b:	or     DWORD PTR ds:0x3fd60075,ebx
  417aa1:	mov    ch,0x1a
  417aa3:	mov    ecx,0xfb0b01dd
  417aa8:	cmp    ebp,eax
  417aaa:	in     al,dx
  417aab:	cmp    eax,0x468f37bc
  417ab0:	outs   dx,DWORD PTR ds:[esi]
  417ab1:	fstp   TBYTE PTR ds:0xa83ff0f0
  417ab7:	add    al,0x6c
  417ab9:	ret    
  417aba:	pop    ecx
  417abb:	int3   
  417abc:	ins    DWORD PTR es:[edi],dx
  417abd:	ret    0xd426
  417ac0:	aad    0x2c
  417ac2:	(bad)  
  417ac3:	sub    BYTE PTR [ecx+0x30b18c54],bl
  417ac9:	mov    es,edx
  417acb:	fsub   st,st(5)
  417acd:	jmp    0xb4f08634
  417ad2:	adc    bh,BYTE PTR [ebx-0x5f]
  417ad5:	lock (bad) 
  417ad7:	aad    0xf1
  417ad9:	std    
  417ada:	das    
  417adb:	mov    cl,0x94
  417add:	mov    esi,0x7b2c4919
  417ae2:	ins    BYTE PTR es:[edi],dx
  417ae3:	jg     0x417a75
  417ae5:	xchg   ebp,eax
  417ae6:	or     BYTE PTR [ecx],bh
  417ae8:	mov    DWORD PTR [eax-0x5e],0xd1005920
  417aef:	aaa    
  417af0:	dec    esp
  417af1:	or     eax,0x6f77c031
  417af6:	icebp  
  417af7:	out    0xa8,eax
  417af9:	nop
  417afa:	hlt    
  417afb:	mov    eax,ds:0x2a83420
  417b00:	inc    edx
  417b01:	mov    ecx,0xaa11d64d
  417b06:	adc    DWORD PTR [ebp+ebp*1+0x64487ba5],esi
  417b0d:	ja     0x417b2a
  417b0f:	mov    cs,esp
  417b11:	push   ebx
  417b12:	push   0x5a
  417b14:	xor    al,0xd9
  417b16:	pop    ecx
  417b17:	rcl    esp,cl
  417b19:	pop    ebp
  417b1a:	pop    esi
  417b1b:	popf   
  417b1c:	out    0x9c,al
  417b1e:	add    ebp,DWORD PTR [eax+eax*8+0x16]
  417b22:	das    
  417b23:	add    eax,DWORD PTR [edx]
  417b25:	ja     0x417b66
  417b27:	dec    esi
  417b28:	jb     0x417b4d
  417b2a:	and    esp,ebx
  417b2c:	push   ebp
  417b2d:	jbe    0x417b86
  417b2f:	dec    ecx
  417b30:	pop    edi
  417b31:	aam    0xd7
  417b33:	dec    esi
  417b34:	addr16 dec edi
  417b36:	inc    esi
  417b37:	idiv   BYTE PTR [ecx]
  417b39:	cwde   
  417b3a:	mov    DWORD PTR [esi],ebx
  417b3c:	push   ebx
  417b3d:	mov    dl,cl
  417b3f:	loop   0x417b6a
  417b41:	inc    eax
  417b42:	xchg   edi,eax
  417b43:	sub    BYTE PTR ds:[ebx],bh
  417b46:	cli    
  417b47:	repz jb 0x417b8e
  417b4a:	sbb    al,0x5c
  417b4c:	inc    esp
  417b4d:	mov    DWORD PTR [eax+ebx*2-0x31671c93],ecx
  417b54:	xchg   ebp,eax
  417b55:	push   ecx
  417b56:	ret    
  417b57:	cmp    BYTE PTR [ecx],bl
  417b59:	push   ecx
  417b5a:	lahf   
  417b5b:	ins    BYTE PTR es:[edi],dx
  417b5c:	sbb    al,0x48
  417b5e:	out    dx,eax
  417b5f:	call   0xcc0b1aeb
  417b64:	je     0x417b66
  417b66:	test   DWORD PTR [ebx+0x7acf2bd9],0xbe4c23d9
  417b70:	fstp   QWORD PTR [esi-0x2de3f2b7]
  417b76:	xchg   edx,eax
  417b77:	shr    DWORD PTR [edi],0x48
  417b7a:	sub    eax,0x7ca02733
  417b7f:	pop    edx
  417b80:	or     BYTE PTR [esi-0x67305ff4],bh
  417b86:	push   ebx
  417b88:	adc    DWORD PTR [eax],0x60fb893f
  417b8e:	push   edx
  417b8f:	aaa    
  417b90:	mov    al,0x24
  417b92:	(bad)  
  417b93:	fs test al,0x62
  417b96:	xlat   BYTE PTR ds:[ebx]
  417b97:	fisubr DWORD PTR [ecx+ebx*1+0x75ad392e]
  417b9e:	and    eax,0xbdc2c68a
  417ba3:	stc    
  417ba4:	mov    bl,0xfc
  417ba6:	in     eax,dx
  417ba7:	(bad)  
  417ba8:	push   eax
  417ba9:	dec    esi
  417baa:	pop    edi
  417bab:	mov    bl,BYTE PTR [eax]
  417bad:	push   ecx
  417bae:	dec    eax
  417baf:	sub    esi,DWORD PTR [ebx]
  417bb1:	ja     0x417b9f
  417bb3:	jl     0x417bfd
  417bb5:	xchg   ecx,eax
  417bb6:	out    dx,eax
  417bb7:	adc    dl,dh
  417bb9:	push   edi
  417bba:	stc    
  417bbb:	sbb    eax,0x774f66ce
  417bc0:	bound  ebp,QWORD PTR [ecx+0x50]
  417bc3:	mov    bh,BYTE PTR [edi-0xd842bcb]
  417bc9:	or     bl,dh
  417bcb:	sub    esi,DWORD PTR [ebp+eax*4-0x4a]
  417bcf:	je     0x417c12
  417bd1:	xor    cl,BYTE PTR [ecx-0x55ab1a46]
  417bd7:	push   0x54
  417bd9:	std    
  417bda:	jo     0x417b97
  417bdc:	sbb    eax,DWORD PTR [edi]
  417bde:	dec    esi
  417bdf:	mov    al,ds:0xdef3884e
  417be4:	jbe    0x417bb7
  417be6:	das    
  417be7:	push   edx
  417be8:	mov    bl,0x8e
  417bea:	dec    edx
  417beb:	adc    esp,DWORD PTR [ebx-0x3c7fb9cb]
  417bf1:	push   ds
  417bf2:	jne    0x417bc8
  417bf4:	inc    ebx
  417bf5:	(bad)  
  417bf6:	push   ebp
  417bf7:	mov    eax,ds:0xc54129b4
  417bfc:	aad    0x28
  417bfe:	xchg   ecx,eax
  417bff:	xchg   esp,eax
  417c00:	push   edx
  417c01:	arpl   WORD PTR [eax],cx
  417c03:	mov    edi,0x9f2c06a8
  417c08:	nop
  417c09:	push   cs
  417c0a:	ja     0x417bbc
  417c0c:	xor    cl,BYTE PTR [ecx-0x72]
  417c0f:	jnp    0x417c7a
  417c11:	pop    ds
  417c12:	cmp    DWORD PTR [ecx+0x5],esp
  417c15:	je     0x417c24
  417c17:	mov    dl,0x69
  417c19:	and    ah,dh
  417c1b:	and    dl,BYTE PTR [edx+ebx*2-0x60]
  417c1f:	dec    edi
  417c20:	(bad)  
  417c21:	jne    0x417bfe
  417c23:	outs   dx,BYTE PTR ds:[esi]
  417c24:	fwait
  417c25:	iret   
  417c26:	(bad)  
  417c27:	fidiv  DWORD PTR [ebx+ebp*4]
  417c2a:	and    BYTE PTR [ebp+0x3d],al
  417c2d:	mov    edi,0xa9814e62
  417c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c33:	pop    ecx
  417c34:	pop    ecx
  417c35:	test   cl,cl
  417c37:	push   ebp
  417c38:	sbb    BYTE PTR [ebx],0x52
  417c3b:	call   0x1b8f0a5e
  417c40:	mov    eax,0xd3ea5326
  417c45:	sbb    al,0xf6
  417c47:	mov    esi,0x77bd5e46
  417c4c:	pop    ds
  417c4d:	ret    0xd450
  417c50:	cmp    BYTE PTR ds:0xd015e6df,bh
  417c56:	mov    DWORD PTR cs:[esi+eax*8-0x6f65ba4c],0x507d36a2
  417c62:	int3   
  417c63:	fld    DWORD PTR [edi]
  417c65:	pop    esi
  417c66:	mov    bl,0xd0
  417c68:	push   0x12
  417c6a:	jb     0x417cbb
  417c6c:	mov    dh,0x71
  417c6e:	(bad)  [edx+0x463ebe28]
  417c74:	dec    ecx
  417c75:	rcr    BYTE PTR [edi-0x19],1
  417c78:	sbb    dl,BYTE PTR [ebp+0x22dee2c3]
  417c7e:	xchg   BYTE PTR es:[esi-0x237c5ff8],cl
  417c85:	lods   eax,DWORD PTR ds:[esi]
  417c86:	(bad)  
  417c87:	(bad)  
  417c88:	stc    
  417c89:	mov    esp,0x8be2f81e
  417c8e:	pop    esi
  417c8f:	pushf  
  417c90:	das    
  417c91:	enter  0x7b6e,0xd7
  417c95:	sahf   
  417c96:	or     ch,BYTE PTR [esi]
  417c98:	clc    
  417c99:	cdq    
  417c9a:	in     al,dx
  417c9b:	inc    ebx
  417c9c:	mov    al,bh
	...
  417ca6:	daa    
  417ca7:	and    eax,0xbb873b85
  417cac:	mov    edi,0xe22d13d
  417cb1:	pusha  
  417cb2:	es cld 
  417cb4:	shl    ebx,0xfb
  417cb7:	jbe    0x417cba
  417cb9:	add    BYTE PTR [eax],ah
  417cbb:	pop    es
  417cbc:	add    BYTE PTR [eax],al
  417cbe:	or     al,0x1f
  417cc0:	call   0x5e3:0x378553b9
  417cc7:	xchg   ebx,eax
  417cc8:	adc    edi,DWORD PTR [esp+edx*2+0x49]
  417ccc:	cli    
  417ccd:	add    DWORD PTR [eax-0x553a32cb],ecx
  417cd3:	aas    
  417cd4:	pop    es
  417cd5:	repnz mov al,ds:0x6c1e790d
  417cdb:	adc    edx,DWORD PTR [ecx-0x75d84ff1]
  417ce1:	daa    
  417ce2:	jb     0x417cca
  417ce4:	aam    0xb4
  417ce6:	mov    edx,DWORD PTR [ebx]
  417ce8:	aas    
  417ce9:	dec    ebp
  417cea:	sub    BYTE PTR [ecx],ch
  417cec:	xor    ebx,DWORD PTR [edx+0x28]
  417cef:	and    esp,ebx
  417cf1:	test   esi,edi
  417cf3:	ins    DWORD PTR es:[edi],dx
  417cf4:	jae    0x417cc7
  417cf6:	xchg   ebx,eax
  417cf7:	push   ds
  417cf8:	inc    edx
  417cf9:	fwait
  417cfa:	jns    0x417c80
  417cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cfd:	mov    bh,0xe4
  417cff:	mov    ds:0x60003f7b,eax
  417d04:	cs inc ebx
  417d06:	push   edx
  417d07:	xor    al,0xca
  417d09:	jecxz  0x417d65
  417d0b:	lods   al,BYTE PTR ds:[esi]
  417d0c:	xchg   DWORD PTR [ebx],esi
  417d0e:	or     eax,0x1913dff2
  417d13:	push   ebx
  417d14:	cli    
  417d15:	pop    eax
  417d16:	mov    ah,0xe
  417d18:	mov    ecx,0x850ce9e4
  417d1d:	mov    eax,0x59811390
  417d22:	bswap  ecx
  417d24:	out    dx,al
  417d25:	fsub   QWORD PTR [ebx]
  417d27:	cs mov bl,0x77
  417d2a:	fstp   QWORD PTR [ecx]
  417d2c:	imul   DWORD PTR [eax]
  417d2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d2f:	lods   eax,DWORD PTR ds:[esi]
  417d30:	add    al,0x8d
  417d32:	sbb    esi,DWORD PTR [esi]
  417d34:	or     dh,bh
  417d36:	xchg   esi,eax
  417d37:	pop    es
  417d38:	push   eax
  417d39:	jecxz  0x417d83
  417d3b:	mov    ecx,0x1775ca6e
  417d40:	push   cs
  417d41:	mov    ds:0xfa97789f,eax
  417d46:	pop    edx
  417d47:	xchg   eax,ebp
  417d49:	jge    0x417da8
  417d4b:	mov    edi,0x2e9bd8b1
  417d50:	mov    ch,0x24
  417d52:	dec    edi
  417d53:	popa   
  417d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d55:	push   DWORD PTR [eax+esi*4]
  417d58:	inc    ebp
  417d59:	jle    0x417d54
  417d5b:	nop
  417d5c:	std    
  417d5d:	rcr    BYTE PTR [esi],0x2f
  417d60:	sub    eax,0x8c641aee
  417d65:	loope  0x417d3f
  417d67:	mov    esp,0x57f28e46
  417d6c:	xor    BYTE PTR [eax-0x3c2841f2],0x2f
  417d73:	das    
  417d74:	out    0xb7,al
  417d76:	cdq    
  417d77:	push   ds
  417d78:	lock xchg edx,eax
  417d7a:	mov    ds:0xa8a0d007,eax
  417d7f:	cwde   
  417d80:	push   ss
  417d81:	cdq    
  417d82:	push   cs
  417d83:	mov    dh,0x62
  417d85:	push   esi
  417d86:	mov    esp,0xc8d7a548
  417d8b:	xor    al,ch
  417d8d:	add    al,0x51
  417d8f:	out    dx,al
  417d90:	jno    0x417ddc
  417d92:	inc    ecx
  417d93:	cmp    DWORD PTR [ecx],edi
  417d95:	jnp    0x417dac
  417d97:	mov    ecx,0xe4923cfa
  417d9c:	mov    ch,0xf4
  417d9e:	xor    ch,BYTE PTR [ecx+0x5b]
  417da1:	clc    
  417da2:	mov    ah,0x91
  417da4:	ins    BYTE PTR es:[edi],dx
  417da5:	cpuid  
  417da7:	nop
  417da8:	sbb    BYTE PTR [eax+0x6],0x32
  417dac:	jns    0x417d5f
  417dae:	dec    esp
  417daf:	scas   al,BYTE PTR es:[edi]
  417db0:	rcl    ebx,0xdc
  417db3:	sub    edi,DWORD PTR [eax-0x1dd025c7]
  417db9:	test   al,0xd9
  417dbb:	cmp    eax,0xfac13f59
  417dc0:	je     0x417d4a
  417dc2:	mov    edi,0x627540e9
  417dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dc8:	rcl    DWORD PTR [ecx-0x103e64bd],cl
  417dce:	jp     0x417daa
  417dd0:	jb     0x417e0b
  417dd2:	imul   DWORD PTR [esi]
  417dd4:	hlt    
  417dd5:	in     eax,0xdf
  417dd7:	xchg   esp,eax
  417dd8:	fmul   QWORD PTR [ebx]
  417dda:	nop
  417ddb:	mov    dh,0x2d
  417ddd:	inc    esi
  417dde:	dec    esi
  417ddf:	jg     0x417d7a
  417de1:	sbb    DWORD PTR [ebx+0x1c],edi
  417de4:	js     0x417e1d
  417de6:	mov    cl,0x3
  417de8:	pushf  
  417de9:	push   ebx
  417dea:	push   ebx
  417deb:	push   ebp
  417dec:	jae    0x417e19
  417dee:	out    dx,al
  417def:	das    
  417df0:	or     edi,DWORD PTR [edx+0x2fc2b403]
  417df6:	xchg   BYTE PTR [esi+0x0],dh
  417df9:	sbb    al,0x61
  417dfb:	jmp    0x67c8:0xa42aa615
  417e02:	push   ebp
  417e03:	(bad)  
  417e04:	iret   
  417e05:	jo     0x417db5
  417e07:	mov    edx,0x4c09ebbd
  417e0c:	inc    edx
  417e0d:	and    eax,0x6a682d54
  417e12:	mov    ah,BYTE PTR [ebx]
  417e14:	mov    ah,0xd5
  417e16:	mul    BYTE PTR [esi]
  417e18:	stos   BYTE PTR es:[edi],al
  417e19:	xor    ebx,DWORD PTR [edx]
  417e1b:	inc    esp
  417e1c:	popa   
  417e1d:	mov    al,ds:0xd43647e6
  417e22:	ins    DWORD PTR es:[edi],dx
  417e23:	pop    edi
  417e24:	fwait
  417e25:	call   0x6090fc93
  417e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e2b:	jge    0x417dec
  417e2d:	push   eax
  417e2e:	sbb    BYTE PTR [edx],ah
  417e30:	je     0x417e37
  417e32:	mov    ah,0x61
  417e34:	data16 mov dh,0x91
  417e37:	clc    
  417e38:	jg     0x417e15
  417e3a:	push   ebx
  417e3b:	mov    edi,0x813599f4
  417e40:	dec    ecx
  417e41:	lds    esi,FWORD PTR [ebx+0x51]
  417e44:	inc    esi
  417e45:	cmp    edi,ebx
  417e47:	mov    esp,0x4520885e
  417e4c:	dec    edi
  417e4d:	cmc    
  417e4e:	dec    esi
  417e4f:	fnstsw WORD PTR [edx-0x7d]
  417e52:	dec    esp
  417e53:	cwde   
  417e54:	jg     0x417eca
  417e56:	jb     0x417e4a
  417e58:	nop
  417e59:	pop    eax
  417e5a:	add    DWORD PTR [edi-0x5cb19019],ecx
  417e60:	scas   eax,DWORD PTR es:[edi]
  417e61:	ins    BYTE PTR es:[edi],dx
  417e62:	sbb    eax,0x19072f85
  417e67:	in     eax,0x5b
  417e69:	pop    edi
  417e6a:	jns    0x417e66
  417e6c:	ins    BYTE PTR es:[edi],dx
  417e6d:	lods   al,BYTE PTR ds:[esi]
  417e6e:	cmp    DWORD PTR [ecx-0x12db1fb3],0xffffffce
  417e75:	mov    al,ds:0x56d65819
  417e7a:	jo     0x417e42
  417e7c:	lods   eax,DWORD PTR ds:[esi]
  417e7d:	dec    esi
  417e7e:	push   cs
  417e7f:	mov    BYTE PTR [ebx+0x5d807af3],0x91
  417e86:	mov    bl,0x41
  417e88:	sar    BYTE PTR [esi-0x63b5cba7],1
  417e8e:	(bad)  
  417e8f:	retf   
  417e90:	sbb    dl,BYTE PTR [eax-0x331896f2]
  417e96:	jmp    0x6cf2f79e
  417e9b:	or     BYTE PTR [esi+0x7a],bl
  417e9e:	vpsubsw ymm0,ymm5,YMMWORD PTR [esi]
  417ea2:	sub    al,0x21
  417ea4:	mov    DWORD PTR [ecx],0x52d9140c
  417eaa:	js     0x417ec2
  417eac:	aas    
  417ead:	ds pop ss
  417eaf:	out    0x19,al
  417eb1:	aas    
  417eb2:	pop    ds
  417eb3:	push   es
  417eb4:	jb     0x417f11
  417eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eb7:	push   cs
  417eb8:	dec    edx
  417eb9:	add    al,cl
  417ebb:	cmp    eax,0xde751a68
  417ec0:	push   esp
  417ec1:	mov    eax,ds:0x67651593
  417ec6:	push   esp
  417ec7:	mov    al,ds:0x5d48862b
  417ecc:	ret    0xc9f0
  417ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ed0:	in     al,0xb7
  417ed2:	xor    DWORD PTR [ecx+0x1a],edx
  417ed5:	inc    ecx
  417ed6:	loopne 0x417e63
  417ed8:	pop    ecx
  417ed9:	cmp    BYTE PTR [ebp+0x5],ch
  417edc:	adc    edi,DWORD PTR [ecx-0x160d2e50]
  417ee2:	lahf   
  417ee3:	inc    ecx
  417ee4:	mov    ah,0x56
  417ee6:	std    
  417ee7:	fidivr DWORD PTR [edi+0x7f031e4f]
  417eed:	push   ecx
  417eee:	int    0x10
  417ef0:	rol    DWORD PTR [edi-0x7f22a54b],1
  417ef6:	jae    0x417f46
  417ef8:	dec    edi
  417ef9:	rcr    BYTE PTR [ebx],cl
  417efb:	push   es
  417efc:	cmc    
  417efd:	mov    dh,0x6a
  417eff:	xchg   ebp,eax
  417f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f01:	popf   
  417f02:	btc    ebx,edi
  417f05:	les    edi,FWORD PTR [ecx-0x7a]
  417f08:	mov    dl,0x16
  417f0a:	mov    ds:0x4187901e,eax
  417f0f:	dec    ebp
  417f10:	addr16 (bad) 
  417f13:	or     esi,DWORD PTR [ecx]
  417f15:	mov    bh,BYTE PTR ds:0xcb0b30b1
  417f1b:	fnstsw WORD PTR [ebx-0x1163f4dd]
  417f21:	in     eax,dx
  417f22:	adc    dl,ah
  417f24:	sbb    DWORD PTR ds:0xa285100d,eax
  417f2a:	inc    ebx
  417f2b:	pop    ds
  417f2c:	fnsave fs:[eax+0x5991aec6]
  417f33:	(bad)  
  417f34:	clc    
  417f35:	and    al,BYTE PTR [ecx]
  417f37:	(bad)  
  417f39:	retf   0x250
  417f3c:	adc    DWORD PTR [edi+edi*4],ebx
  417f3f:	in     eax,dx
  417f40:	shr    esi,0xf0
  417f43:	gs cdq 
  417f45:	ins    BYTE PTR es:[edi],dx
  417f46:	loope  0x417f45
  417f48:	test   ebp,esi
  417f4a:	call   0xa3f9:0x709e4f3c
  417f51:	cwde   
  417f52:	xchg   ecx,eax
  417f53:	inc    edi
  417f54:	jo     0x417f51
  417f56:	push   ds
  417f57:	xor    eax,0xb5136439
  417f5c:	mov    ebx,DWORD PTR [edi]
  417f5e:	pusha  
  417f5f:	shr    DWORD PTR [ebx-0x3f],1
  417f62:	inc    ebx
  417f63:	lahf   
  417f64:	push   edi
  417f65:	sbb    ecx,ebx
  417f67:	dec    esp
  417f68:	or     eax,0xb5880058
  417f6d:	fwait
  417f6e:	push   edi
  417f6f:	xor    al,0xf9
  417f71:	js     0x417fe8
  417f73:	sub    eax,0x8e2016fd
  417f78:	ins    BYTE PTR es:[edi],dx
  417f79:	inc    esp
  417f7a:	adc    dh,BYTE PTR ds:0xd9a55470
  417f80:	sbb    al,0x1
  417f82:	outs   dx,DWORD PTR ds:[esi]
  417f83:	inc    esp
  417f84:	fwait
  417f85:	outs   dx,DWORD PTR ds:[esi]
  417f86:	fsub   DWORD PTR [ecx]
  417f88:	sbb    BYTE PTR [ecx],bh
  417f8a:	sbb    dl,dh
  417f8c:	push   es
  417f8d:	jge    0x417f52
  417f8f:	jmp    0x417ff6
  417f91:	(bad)  
  417f92:	dec    ecx
  417f93:	addr16 loope 0x41800d
  417f96:	lods   eax,DWORD PTR ds:[esi]
  417f97:	imul   DWORD PTR [ebx+0x6]
  417f9a:	jg     0x417f77
  417f9c:	mov    ah,0xd1
  417f9e:	cmc    
  417f9f:	fs lea ebp,fs:[ecx+esi*1-0x48]
  417fa5:	mov    gs,WORD PTR [esi-0x46]
  417fa8:	je     0x417fbc
  417faa:	mov    ebx,0xd59d8495
  417faf:	cdq    
  417fb0:	pop    eax
  417fb1:	test   al,0x72
  417fb3:	jo     0x417f98
  417fb5:	ret    0x1501
  417fb8:	dec    ebx
  417fb9:	sub    al,BYTE PTR [ecx+0xd395148]
  417fbf:	out    dx,al
  417fc0:	mov    fs,WORD PTR [ebx-0x1bc832ba]
  417fc6:	imul   esp,DWORD PTR [edx-0x7a],0x33
  417fca:	xchg   edi,eax
  417fcb:	or     eax,DWORD PTR [ecx-0x4aefa67c]
  417fd1:	mov    ah,0xc8
  417fd3:	dec    edi
  417fd4:	int    0xd
  417fd6:	add    eax,DWORD PTR [ebp-0x1538f110]
  417fdc:	sbb    al,0xee
  417fde:	popw   ds
  417fe0:	adc    al,0xc1
  417fe2:	or     ecx,DWORD PTR [ebx]
  417fe4:	pushf  
  417fe5:	leave  
  417fe6:	icebp  
  417fe7:	jecxz  0x417f95
  417fe9:	sub    dl,BYTE PTR [esi+0x1b]
  417fec:	push   edx
  417fed:	ins    BYTE PTR es:[edi],dx
  417fee:	repnz pop ss
  417ff0:	push   ebx
  417ff1:	test   BYTE PTR [esi+0x1e],dl
  417ff4:	inc    ecx
  417ff5:	in     eax,0x76
  417ff7:	sub    BYTE PTR [ebp-0x2f],ah
  417ffa:	jp     0x41805c
  417ffc:	xchg   ebp,eax
  417ffd:	outs   dx,BYTE PTR ds:[esi]
  417ffe:	mov    ds:0xd7dfe486,al
  418003:	mov    al,BYTE PTR [ebx+ecx*2]
  418006:	inc    ebx
  418007:	mov    edi,0x6d50327c
  41800c:	fwait
  41800d:	inc    edx
  41800e:	jl     0x417fd3
  418010:	cld    
  418011:	sub    DWORD PTR [edx+0x770f4fc3],ebx
  418017:	xchg   ebp,eax
  418018:	cmp    esp,edx
  41801a:	dec    edi
  41801b:	pushf  
  41801c:	and    dh,dh
  41801e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41801f:	mov    BYTE PTR [ebp-0xa],bh
  418022:	inc    edi
  418023:	xor    bl,BYTE PTR [esi+0x5e]
  418026:	fidiv  WORD PTR [esi]
  418028:	add    al,0xc4
  41802a:	push   ebx
  41802b:	mov    dl,0xd0
  41802d:	sub    ch,BYTE PTR ds:0x71d81967
  418033:	jle    0x417feb
  418035:	je     0x41800e
  418037:	jno    0x41802c
  418039:	mov    ecx,0x22912685
  41803e:	inc    ebp
  41803f:	adc    BYTE PTR [esp-0x14],bl
  418043:	mov    edi,0x2986acf5
  418048:	stos   DWORD PTR es:[edi],eax
  418049:	lods   eax,DWORD PTR ds:[esi]
  41804a:	iret   
  41804b:	std    
  41804c:	fs ret 
  41804e:	sti    
  41804f:	loope  0x4180a3
  418051:	xchg   edx,eax
  418052:	ds pop es
  418054:	xchg   esi,eax
  418055:	inc    ebp
  418056:	(bad)  
  418057:	push   0xada91540
  41805c:	iret   
  41805d:	repz aas 
  41805f:	in     al,dx
  418060:	shr    DWORD PTR [edx-0x2e5f54b8],0x14
  418067:	std    
  418068:	mov    ds:0x674cf260,eax
  41806d:	cmp    BYTE PTR [eax+eiz*8],dl
  418070:	fidiv  WORD PTR [edx+0x225d90a]
  418076:	(bad)  
  418077:	out    dx,al
  418078:	je     0x4180d3
  41807a:	push   ebp
  41807b:	and    dl,BYTE PTR [eax+ebp*8]
  41807e:	pcmpeqb mm6,QWORD PTR [edx+0x0]
  418082:	inc    ecx
  418083:	outs   dx,BYTE PTR ds:[esi]
  418084:	cld    
  418085:	add    BYTE PTR [esi+0x1],0x27
  418089:	or     eax,0x68e02d07
  41808e:	lods   eax,DWORD PTR ss:[esi]
  418090:	js     0x41807c
  418092:	dec    ebp
  418093:	dec    esi
  418094:	icebp  
  418095:	push   ebp
  418096:	lods   eax,DWORD PTR ds:[esi]
  418097:	js     0x41808f
  418099:	and    BYTE PTR [esi-0x2f],bl
  41809c:	dec    edx
  41809d:	cwde   
  41809e:	fcmovbe st,st(4)
  4180a0:	ins    DWORD PTR es:[edi],dx
  4180a1:	and    BYTE PTR [ecx+0x3],ah
  4180a4:	nop
  4180a5:	outs   dx,BYTE PTR ds:[esi]
  4180a6:	push   0x36
  4180a8:	ss jnp 0x418030
  4180ab:	out    dx,al
  4180ac:	xlat   BYTE PTR ds:[ebx]
  4180ad:	ret    0x7768
  4180b0:	push   DWORD PTR [edi]
  4180b2:	add    esi,ecx
  4180b4:	mov    esp,DWORD PTR [edx]
  4180b6:	fcmovbe st,st(3)
  4180b8:	out    dx,al
  4180b9:	clc    
  4180ba:	sbb    BYTE PTR [ebp-0x7b],cl
  4180bd:	sar    ch,0xf1
  4180c0:	or     al,BYTE PTR [ebx+0x3708fb2d]
  4180c6:	outs   dx,BYTE PTR ds:[esi]
  4180c7:	jmp    WORD PTR [ebp-0x12cf91fa]
  4180ce:	jnp    0x418088
  4180d0:	stc    
  4180d1:	imul   ecx,DWORD PTR [eax-0x75],0xe7edea14
  4180d8:	pop    ebx
  4180d9:	out    0x7b,eax
  4180db:	mov    ch,0x52
  4180dd:	lock or bh,BYTE PTR [edi-0x15]
  4180e1:	mov    al,0x4e
  4180e3:	pop    ds
  4180e4:	pop    esi
  4180e5:	jno    0x4180f7
  4180e7:	mov    al,0xcf
  4180e9:	xchg   edi,eax
  4180ea:	fist   WORD PTR [edi]
  4180ec:	and    BYTE PTR [eax+0xe],ah
  4180ef:	pop    ebp
  4180f0:	jge    0x4180eb
  4180f2:	pop    esi
  4180f3:	push   cs
  4180f4:	stc    
  4180f5:	mov    bl,BYTE PTR ds:0x19704ea4
  4180fb:	cli    
  4180fc:	pop    ebx
  4180fd:	retf   0xa5c4
  418100:	stos   DWORD PTR es:[edi],eax
  418101:	inc    ebp
  418102:	sub    eax,0x2ccb9d4c
  418107:	adc    cl,BYTE PTR ds:[ebp-0x536b2798]
  41810e:	cmp    al,0x47
  418110:	inc    eax
  418111:	pop    ecx
  418112:	dec    ebx
  418113:	and    ebx,DWORD PTR [edi+edx*1]
  418116:	daa    
  418117:	or     al,0xde
  418119:	mov    ds:0xa28a053e,al
  41811e:	mov    ds:0x77cb6050,al
  418123:	sub    BYTE PTR [ebx-0x7a],dl
  418126:	popa   
  418127:	leave  
  418128:	test   eax,0xd6838570
  41812d:	pop    ss
  41812e:	dec    ecx
  41812f:	add    eax,0x8ea5ab24
  418134:	(bad)  
  418136:	nop
  418137:	gs loop 0x41816b
  41813a:	xor    dh,ah
  41813c:	ds and al,0xc4
  41813f:	push   edi
  418140:	mov    ds:0x40323739,al
  418145:	push   ss
  418146:	cmp    eax,0xc7edf33b
  41814b:	inc    esp
  41814c:	push   ebp
  41814d:	(bad)  
  41814e:	jne    0x4181a5
  418150:	mov    al,ds:0x76e9f317
  418155:	(bad)  
  418157:	loope  0x418115
  418159:	imul   ebp,DWORD PTR [edi+0x14],0xffffffba
  41815d:	outs   dx,BYTE PTR ds:[esi]
  41815e:	jb     0x41814e
  418160:	jp     0x4181b6
  418162:	add    BYTE PTR [ecx+0x10],ah
  418165:	adc    DWORD PTR [ebx+0xb],edi
  418168:	cmp    dl,BYTE PTR [esi-0x3906c58]
  41816e:	jmp    0x2b8c3bb0
  418173:	and    BYTE PTR [edi],0x18
  418176:	ds in  eax,dx
  418178:	adc    eax,0xbb9ce7bb
  41817d:	(bad)  [ebp-0x22]
  418180:	ret    
  418181:	add    edx,DWORD PTR [ebp-0x5c]
  418184:	mov    ecx,gs
  418186:	pusha  
  418187:	add    eax,0x4124e52b
  41818c:	mov    eax,ds:0x5e01a434
  418191:	ror    BYTE PTR [eax-0xb4bdff9],1
  418197:	mov    ch,0xe6
  418199:	nop
  41819a:	and    bh,BYTE PTR [edx+0x418f88c8]
  4181a0:	enter  0xec04,0xc9
  4181a4:	mov    al,0x53
  4181a6:	fwait
  4181a7:	mov    ebx,0xba6b1b6e
  4181ac:	(bad)  
  4181ad:	xlat   BYTE PTR ds:[ebx]
  4181ae:	dec    ecx
  4181af:	aad    0x8a
  4181b1:	cmp    esp,ebp
  4181b3:	xchg   esi,eax
  4181b4:	mov    edi,0x93de8437
  4181b9:	xlat   BYTE PTR ds:[ebx]
  4181ba:	popa   
  4181bb:	xor    cl,BYTE PTR [esi+eiz*1-0x13]
  4181bf:	xchg   esp,eax
  4181c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181c1:	(bad)  
  4181c3:	or     DWORD PTR [eax-0x2f3e2b31],edi
  4181c9:	sahf   
  4181ca:	shr    BYTE PTR [ebx+0x1a220de4],0x3c
  4181d1:	cmovle esp,DWORD PTR [edi-0x28]
  4181d5:	sbb    ah,BYTE PTR [esi+0x57]
  4181d8:	fist   WORD PTR [eax]
  4181da:	mov    ah,0x48
  4181dc:	retf   0xf7d2
  4181df:	push   0x36
  4181e1:	je     0x41816b
  4181e3:	(bad)  
  4181e4:	rcl    BYTE PTR [esi],1
  4181e6:	aad    0xd0
  4181e8:	add    al,0xc7
  4181ea:	and    al,bl
  4181ec:	pop    esp
  4181ed:	and    DWORD PTR [eax+ebp*4],0xffffffa6
  4181f1:	cmc    
  4181f2:	repz push ss
  4181f4:	out    0xa1,al
  4181f6:	mov    ds:0xac89d6f8,eax
  4181fb:	mov    ds:0x6ca0da24,eax
  418200:	(bad)  
  418201:	rol    BYTE PTR [esi+0x26dd36ab],cl
  418207:	mov    ch,0xc0
  418209:	jecxz  0x418199
  41820b:	bound  edx,QWORD PTR [eax]
  41820d:	or     DWORD PTR [ebx],eax
  41820f:	mov    ecx,esp
  418211:	iret   
  418212:	mov    ebp,0xf2fa4209
  418217:	cmp    BYTE PTR [esi-0x72efa6e9],dh
  41821d:	jns    0x418206
  41821f:	ins    DWORD PTR es:[edi],dx
  418220:	into   
  418221:	fild   WORD PTR [edx+0x6]
  418224:	enter  0xecfc,0x9f
  418228:	pop    edi
  418229:	gs pop ss
  41822b:	ror    eax,0x67
  41822e:	cmp    al,0x6c
  418230:	outs   dx,BYTE PTR ds:[esi]
  418231:	fidiv  DWORD PTR [edx-0x2e]
  418234:	xchg   esi,eax
  418235:	mov    dl,0x5b
  418237:	push   edx
  418238:	mov    ebp,0xa3820d47
  41823d:	(bad)  
  41823e:	or     BYTE PTR [ebp+0x4e421c2b],ch
  418244:	and    eax,0x29b4054a
  418249:	inc    ebp
  41824a:	mov    bl,bl
  41824c:	cmp    eax,0x268d4786
  418251:	call   0xb51e:0xf8618cb9
  418258:	dec    edx
  418259:	mov    esi,0xa558e94b
  41825e:	dec    edi
  41825f:	inc    esp
  418260:	mov    cl,0x99
  418262:	push   edi
  418263:	add    eax,0x2c58d7c
  418268:	cmp    dh,BYTE PTR [eax]
  41826a:	add    BYTE PTR [esi-0x1edbaf94],dl
  418270:	js     0x41829b
  418272:	mov    DWORD PTR [edi-0x18f5c5d6],esp
  418278:	and    eax,0x316f3927
  41827d:	mov    eax,0xc9d117be
  418282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418283:	(bad)  
  418284:	stc    
  418285:	je     0x418224
  418287:	jbe    0x418216
  418289:	ds in  al,0x2c
  41828c:	outs   dx,DWORD PTR ds:[esi]
  41828d:	pop    es
  41828e:	popf   
  41828f:	test   al,0x1b
  418291:	jno    0x4182e2
  418293:	das    
  418294:	pop    ecx
  418295:	int    0x2e
  418297:	sbb    cl,BYTE PTR [ecx-0x64]
  41829a:	cdq    
  41829b:	jbe    0x41821d
  41829d:	xor    bl,BYTE PTR [ebx+0x25515ff5]
  4182a3:	cwde   
  4182a4:	inc    ebp
  4182a5:	mov    eax,ds:0x4bcac85
  4182aa:	jae    0x418302
  4182ac:	push   edi
  4182ad:	push   ecx
  4182ae:	in     eax,dx
  4182af:	leave  
  4182b0:	out    0xa4,eax
  4182b2:	pop    ss
  4182b3:	sahf   
  4182b4:	sahf   
  4182b5:	mov    bh,0x33
  4182b7:	daa    
  4182b8:	or     ecx,DWORD PTR ds:0xd54be79
  4182be:	sbb    al,bl
  4182c0:	cmp    DWORD PTR [esi+0x5e94de01],eax
  4182c6:	cmp    al,0xff
  4182c8:	adc    DWORD PTR [edi],esi
  4182ca:	cmc    
  4182cb:	dec    edx
  4182cc:	sub    BYTE PTR [ecx+0x3a],dh
  4182cf:	sub    edi,ecx
  4182d1:	sahf   
  4182d2:	jp     0x418333
  4182d4:	mov    dh,0xdf
  4182d6:	cmp    al,BYTE PTR [ecx+0x2e0d1b77]
  4182dc:	mov    dh,0x8d
  4182de:	inc    edi
  4182df:	clc    
  4182e0:	fwait
  4182e1:	loope  0x418274
  4182e3:	cld    
  4182e4:	inc    BYTE PTR [edx-0x76b2a2c0]
  4182ea:	xchg   edi,eax
  4182eb:	mov    cl,0x28
  4182ed:	ret    0xd974
  4182f0:	shr    BYTE PTR [esp+edi*2],cl
  4182f3:	les    esi,FWORD PTR [ebx+0x57]
  4182f6:	mov    edx,ebx
  4182f8:	inc    edi
  4182f9:	cdq    
  4182fa:	and    BYTE PTR [eax-0x15571c9b],ch
  418300:	ds mov edx,0x3660768c
  418306:	add    al,cl
  418308:	sub    esi,DWORD PTR [edx+0x7eb8158c]
  41830e:	xchg   DWORD PTR [ebp-0x4],esp
  418311:	cmp    eax,0x689581c8
  418316:	cmp    ecx,ecx
  418318:	repnz mov ah,0xed
  41831c:	loop   0x418329
  41831e:	sub    ecx,DWORD PTR [edx-0x1a378514]
  418324:	and    al,0x9a
  418326:	ret    
  418327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418328:	js     0x4182e8
  41832a:	out    0xb1,eax
  41832c:	outs   dx,DWORD PTR ds:[esi]
  41832d:	pop    ecx
  41832e:	sub    al,0x9e
  418330:	in     eax,dx
  418331:	(bad)  
  418332:	xchg   ebp,eax
  418333:	cdq    
  418334:	cmp    dl,BYTE PTR [ecx]
  418336:	clc    
  418337:	xchg   esp,eax
  418338:	ret    0xf7bf
  41833b:	lods   eax,DWORD PTR ds:[esi]
  41833c:	push   ebp
  41833d:	aam    0x4d
  41833f:	loop   0x4182e5
  418341:	mov    ah,0x9a
  418343:	and    al,0x71
  418345:	cmp    edx,edx
  418347:	sbb    ecx,DWORD PTR [edi-0x3f]
  41834a:	ja     0x41836f
  41834c:	cmp    edx,ebx
  41834e:	(bad)  
  41834f:	xlat   BYTE PTR ds:[ebx]
  418350:	mov    ecx,0xec0cdb1a
  418355:	(bad)  
  418356:	pop    ss
  418357:	adc    ecx,DWORD PTR [edi+0x727d6361]
  41835d:	pop    esi
  41835e:	into   
  41835f:	jno    0x41831b
  418361:	test   DWORD PTR [ebp-0x173045cc],edx
  418367:	push   ss
  418368:	inc    esi
  418369:	into   
  41836a:	hlt    
  41836b:	push   esp
  41836c:	inc    ecx
  41836d:	xor    edx,DWORD PTR [ecx+0x2e03fd67]
  418373:	jbe    0x41836d
  418375:	or     ebp,DWORD PTR [edx-0x65]
  418378:	ins    BYTE PTR es:[edi],dx
  418379:	lds    eax,FWORD PTR [edi+0x5f2a16f8]
  41837f:	ror    BYTE PTR [esi],1
  418381:	les    esp,FWORD PTR [ebx-0x56]
  418384:	repnz hlt 
  418386:	sbb    al,0x8a
  418388:	add    ecx,DWORD PTR [edi-0x6f]
  41838b:	add    ah,bh
  41838d:	jecxz  0x4183de
  41838f:	mov    bl,0xf1
  418391:	test   BYTE PTR [edx],bl
  418393:	ins    BYTE PTR es:[edi],dx
  418394:	out    0xf9,eax
  418396:	pop    eax
  418397:	inc    ebp
  418398:	and    BYTE PTR [ebx-0x56],bl
  41839b:	ss lahf 
  41839d:	jle    0x418415
  41839f:	dec    ebx
  4183a0:	lock pusha 
  4183a2:	lods   al,BYTE PTR ds:[esi]
  4183a3:	aaa    
  4183a4:	or     ebx,ebx
  4183a6:	add    al,0x98
  4183a8:	ds pop edi
  4183aa:	dec    edi
  4183ab:	xchg   ecx,eax
  4183ac:	fild   WORD PTR [esp+edx*1]
  4183af:	xchg   bl,bl
  4183b1:	ja     0x41834a
  4183b3:	mov    ch,0x16
  4183b5:	mov    ds:0xf093c169,al
  4183ba:	xlat   BYTE PTR ds:[ebx]
  4183bb:	or     DWORD PTR [ebp+0x31],ebp
  4183be:	in     eax,0xba
  4183c0:	outs   dx,BYTE PTR ds:[esi]
  4183c1:	mov    ch,cl
  4183c3:	mov    WORD PTR [esi],?
  4183c5:	cmp    esp,DWORD PTR [esi+ecx*2+0x8]
  4183c9:	mov    dl,0xa9
  4183cb:	fstp   DWORD PTR [esi-0x6542cde8]
  4183d1:	sub    DWORD PTR [ebp+ebx*8-0x35],0xf8aec46a
  4183d9:	pop    edi
  4183da:	rcr    BYTE PTR [edi+0xf17e],1
  4183e0:	add    BYTE PTR [eax],al
  4183e2:	add    BYTE PTR [eax],al
  4183e4:	add    BYTE PTR [eax],al
  4183e6:	popa   
  4183e7:	push   0xffffffe9
  4183e9:	pop    ss
  4183ea:	jmp    0x418383
  4183ec:	(bad)  
  4183ed:	jle    0x4183f5
  4183ef:	js     0x41839e
  4183f1:	aam    0x94
  4183f3:	or     BYTE PTR [ebp+0x17e1b55],ah
  4183f9:	add    BYTE PTR [eax],ah
  4183fb:	pop    es
  4183fc:	add    BYTE PTR [eax],al
  4183fe:	ss out 0x20,al
  418401:	lods   eax,DWORD PTR ds:[esi]
  418402:	(bad)  
  418403:	cdq    
  418404:	xchg   ebp,eax
  418405:	mov    edx,0xe3f87054
  41840a:	test   DWORD PTR ds:0x515fca95,edi
  418410:	lahf   
  418411:	out    0xee,al
  418413:	mov    al,ds:0x979fcd03
  418418:	push   cs
  418419:	(bad)  
  41841a:	push   0x23
  41841c:	and    eax,DWORD PTR [edx-0x46]
  41841f:	fstp   TBYTE PTR [ebx-0x1cf913b3]
  418425:	mov    ah,0xbf
  418427:	add    al,0xdd
  418429:	imul   ebx,DWORD PTR ds:0xa6133343,0x6eb71abe
  418433:	push   ebx
  418434:	sub    ah,BYTE PTR [ebp+0x3ce2d84d]
  41843a:	fsubp  st(2),st
  41843c:	ret    
  41843d:	enter  0x90f5,0xc7
  418441:	push   eax
  418442:	or     DWORD PTR [ebp+ebp*8-0x46e7a7fb],edi
  418449:	fnstsw WORD PTR [eax]
  41844b:	push   ecx
  41844c:	(bad)  
  41844d:	pop    ds
  41844e:	bound  ebp,QWORD PTR [ecx]
  418450:	cwde   
  418451:	imul   edi,DWORD PTR [eax+0x10],0x1a
  418455:	hlt    
  418456:	push   ds
  418457:	jge    0x418458
  418459:	mov    edi,0xf42fd9c7
  41845e:	in     eax,dx
  41845f:	(bad)  
  418460:	push   0x7c
  418462:	int    0xd8
  418464:	fdivr  DWORD PTR [esi]
  418466:	out    0x20,eax
  418468:	jecxz  0x418499
  41846a:	adc    eax,0xdfc09994
  41846f:	sub    bl,BYTE PTR [eax]
  418471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418472:	adc    ah,BYTE PTR [edx]
  418474:	pusha  
  418475:	adc    esp,DWORD PTR [ecx]
  418477:	sub    DWORD PTR [ebx],ebx
  418479:	out    dx,al
  41847a:	scas   eax,DWORD PTR es:[edi]
  41847b:	adc    BYTE PTR [ecx+0x1b],0xb3
  41847f:	enter  0xc51,0xa
  418483:	mov    bh,0x82
  418485:	int3   
  418486:	ret    0x5348
  418489:	mov    ah,0x59
  41848b:	repz in al,0xc7
  41848e:	and    BYTE PTR [ebp+0x191ffe0b],bh
  418494:	jno    0x418458
  418496:	cmp    ecx,DWORD PTR [ebx+0x44]
  418499:	jle    0x418436
  41849b:	sbb    al,0xd5
  41849d:	or     bh,BYTE PTR [ebx]
  41849f:	or     ah,bl
  4184a1:	pop    ebp
  4184a2:	repnz mov ecx,0x6fc90507
  4184a8:	sub    ch,BYTE PTR [ecx-0x2ecd0e08]
  4184ae:	push   esi
  4184af:	mov    esp,DWORD PTR [ebp+0x20]
  4184b2:	mov    edi,0xf1893be3
  4184b7:	sub    dh,BYTE PTR [eax]
  4184b9:	push   esp
  4184ba:	scas   al,BYTE PTR es:[edi]
  4184bb:	xor    ecx,DWORD PTR [ebp-0x27]
  4184be:	mov    eax,0x5ab4359e
  4184c3:	lahf   
  4184c4:	inc    eax
  4184c5:	mov    ebp,DWORD PTR [ebx]
  4184c7:	adc    BYTE PTR [edx-0x108322df],bh
  4184cd:	sbb    DWORD PTR [esi],ecx
  4184cf:	mov    ch,BYTE PTR [ebp+0x5729600d]
  4184d5:	in     al,dx
  4184d6:	sub    eax,DWORD PTR [eax]
  4184d8:	xor    DWORD PTR [ebx-0x48],ecx
  4184db:	std    
  4184dc:	mov    ebp,0xfe9bd5e7
  4184e1:	push   esp
  4184e2:	add    DWORD PTR [eax+0x7986f817],esi
  4184e8:	in     al,dx
  4184e9:	scas   eax,DWORD PTR es:[edi]
  4184ea:	lods   eax,DWORD PTR ds:[esi]
  4184eb:	pop    ebx
  4184ec:	or     al,0x5b
  4184ee:	pop    ss
  4184ef:	retf   
  4184f0:	mov    ecx,0x43b7e479
  4184f5:	inc    eax
  4184f6:	fs mov cl,0xf9
  4184f9:	pop    ecx
  4184fa:	xor    BYTE PTR [esi+0x40ab2917],bh
  418500:	je     0x4184e4
  418502:	jne    0x41848a
  418504:	inc    edx
  418505:	mov    BYTE PTR [edx+0x77],0x6e
  418509:	std    
  41850a:	out    dx,al
  41850b:	xchg   ebp,eax
  41850c:	push   edx
  41850d:	mov    al,ds:0x4ba0e374
  418512:	mov    BYTE PTR [ecx+eiz*8],ch
  418515:	adc    al,0xfb
  418517:	es mov esp,0xd5293da
  41851d:	add    DWORD PTR [eax],eax
  41851f:	loopne 0x418582
  418521:	cdq    
  418522:	jnp    0x41850f
  418524:	cmp    al,0x3d
  418526:	or     bl,BYTE PTR [edi+0xc3040d5]
  41852c:	nop
  41852d:	cld    
  41852e:	cmp    DWORD PTR [eax-0x72],esi
  418531:	in     al,0x7a
  418533:	outs   dx,BYTE PTR ds:[esi]
  418534:	out    0x3b,al
  418536:	out    0x76,eax
  418538:	loope  0x418590
  41853a:	pop    ebp
  41853b:	xor    bh,BYTE PTR [ebx-0xa]
  41853e:	xor    DWORD PTR [ecx-0x12],ebp
  418541:	iret   
  418542:	sahf   
  418543:	cmp    edi,DWORD PTR [edx+0x6d1c02f8]
  418549:	cmp    eax,0x2cc569e6
  41854e:	inc    eax
  41854f:	and    BYTE PTR [ecx],cl
  418551:	and    DWORD PTR [ebp-0x70],edx
  418554:	xor    ch,bh
  418556:	and    eax,0x2a7dfd04
  41855b:	enter  0x7d4f,0xe4
  41855f:	and    ah,0x39
  418562:	shr    BYTE PTR ds:0x5568907e,0xe6
  418569:	das    
  41856a:	cmc    
  41856b:	xchg   esp,eax
  41856c:	stc    
  41856d:	retf   
  41856e:	cmp    BYTE PTR [ecx+0x1],0xd1
  418572:	cmp    DWORD PTR ds:0xe2d2edcb,esp
  418578:	mov    ds:0x24c0fd69,al
  41857d:	aaa    
  41857e:	pop    ss
  41857f:	sub    eax,0xb2d95e85
  418584:	(bad)  
  418586:	int3   
  418587:	mov    esp,0x376320b1
  41858c:	ret    0xb801
  41858f:	and    al,BYTE PTR [ebx-0x17922995]
  418595:	and    bl,0x22
  418598:	cwde   
  418599:	mov    ebp,0x9c65698c
  41859e:	jge    0x4185ec
  4185a0:	clc    
  4185a1:	sub    bh,ch
  4185a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185a4:	inc    ecx
  4185a5:	jecxz  0x418608
  4185a7:	dec    esp
  4185a8:	ss jns 0x4185c0
  4185ab:	js     0x418611
  4185ad:	and    al,ch
  4185af:	mov    ecx,0xeb4369ba
  4185b4:	les    edi,FWORD PTR [esi]
  4185b6:	popa   
  4185b7:	mov    eax,ds:0xd3277c25
  4185bc:	mov    ch,0xf3
  4185be:	inc    edx
  4185bf:	sub    DWORD PTR [edx+eiz*1-0x25],0x6450aebc
  4185c7:	hlt    
  4185c8:	bound  esp,QWORD PTR [edx+0x6a142bb0]
  4185ce:	aas    
  4185cf:	mov    ebx,0x9b653647
  4185d4:	add    DWORD PTR [ebx+esi*8-0x7df54ca9],0x64b0db44
  4185df:	test   eax,0xb9c8387a
  4185e4:	mov    eax,0x85e367f0
  4185e9:	lahf   
  4185ea:	push   ebx
  4185eb:	pop    ebp
  4185ec:	push   ecx
  4185ed:	in     al,0x9b
  4185ef:	out    0x24,al
  4185f1:	xchg   esp,eax
  4185f2:	adc    al,BYTE PTR [edx]
  4185f4:	hlt    
  4185f5:	push   ecx
  4185f6:	add    dl,BYTE PTR [ebx]
  4185f8:	test   BYTE PTR [edx+0x3abadaf6],al
  4185fe:	outs   dx,BYTE PTR ds:[esi]
  4185ff:	push   eax
  418600:	ror    BYTE PTR [ebx],1
  418602:	xchg   DWORD PTR [esi+0xd95eca3],esp
  418608:	lahf   
  418609:	test   al,0x54
  41860b:	sub    DWORD PTR [ecx+edx*2-0x64],0x15
  418610:	push   ebp
  418611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418612:	and    eax,DWORD PTR [edi+0x0]
  418615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418616:	hlt    
  418617:	cmp    edx,esi
  418619:	cwde   
  41861a:	call   0x818a:0x1dfa5717
  418621:	cs add eax,0x8ff438a3
  418627:	(bad)  
  418628:	popf   
  418629:	arpl   WORD PTR [esp+ebx*1],bp
  41862c:	xchg   edi,eax
  41862d:	or     al,0x51
  41862f:	jle    0x4185d1
  418631:	sub    DWORD PTR [eax-0x6ac7b922],esp
  418637:	loope  0x4186b1
  418639:	lds    ebx,FWORD PTR [ebx+esi*1+0x5f7da05e]
  418640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418641:	ins    DWORD PTR es:[edi],dx
  418642:	mov    cl,0xed
  418644:	jecxz  0x4185ce
  418646:	call   0xd8676430
  41864b:	mov    ebx,esp
  41864d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41864e:	in     eax,0x79
  418650:	xor    esi,esi
  418652:	add    eax,0xfa5b9d31
  418657:	pop    ebx
  418658:	xor    eax,0xbc68e669
  41865d:	pop    ss
  41865e:	retf   0x8e9f
  418661:	mov    ecx,0xc201426d
  418666:	sub    esi,esp
  418668:	out    0x41,al
  41866a:	sub    edx,DWORD PTR [ebx+0x56]
  41866d:	fs xor eax,0x6cc97528
  418673:	add    edi,esp
  418675:	add    eax,0x35408775
  41867a:	add    al,0x87
  41867c:	pusha  
  41867d:	mov    eax,0xc6a4fe4f
  418682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418683:	cmp    al,0x48
  418685:	mov    ds:0x434d160,eax
  41868a:	repz sar BYTE PTR [ecx],0xb5
  41868e:	pop    eax
  41868f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418690:	arpl   WORD PTR [ebp-0x5393a52],sp
  418696:	mov    WORD PTR [edx+0x399ad7e9],?
  41869c:	xchg   ecx,eax
  41869d:	dec    eax
  41869e:	xor    BYTE PTR [eax+edx*8-0x6e09aa7],0x4e
  4186a6:	add    cl,dh
  4186a8:	adc    eax,0xa85f072c
  4186ad:	mov    dh,0xab
  4186af:	jecxz  0x418638
  4186b1:	or     dl,0x4a
  4186b4:	out    dx,eax
  4186b5:	(bad)  
  4186b6:	push   esp
  4186b7:	or     edx,DWORD PTR ds:0x3a693410
  4186bd:	int3   
  4186be:	adc    al,0xe1
  4186c0:	jns    0x4186a8
  4186c2:	lock jo 0x418668
  4186c5:	jnp    0x418693
  4186c7:	adc    al,dh
  4186c9:	xchg   BYTE PTR [ebx+edi*1-0x33],dl
  4186cd:	sbb    ecx,eax
  4186cf:	jne    0x4186df
  4186d1:	(bad)  
  4186d2:	lock jecxz 0x4186f8
  4186d5:	hlt    
  4186d6:	inc    ecx
  4186d7:	sbb    eax,0x3b05b00b
  4186dc:	cmc    
  4186dd:	and    eax,ebp
  4186df:	(bad)  
  4186e0:	test   eax,0xd68761cf
  4186e5:	outs   dx,BYTE PTR ds:[esi]
  4186e6:	cmp    ecx,DWORD PTR [edx-0x2b442e2d]
  4186ec:	stc    
  4186ed:	retf   
  4186ee:	scas   eax,DWORD PTR es:[edi]
  4186ef:	mov    dl,0x1e
  4186f1:	jnp    0x4186ff
  4186f3:	jle    0x41876a
  4186f5:	sbb    dl,BYTE PTR [ebx-0x5f]
  4186f8:	fldcw  WORD PTR [eax-0x6c]
  4186fb:	jbe    0x41870a
  4186fd:	dec    edx
  4186fe:	lds    ebx,FWORD PTR [ecx-0x32]
  418701:	dec    ecx
  418702:	sbb    al,0x79
  418704:	not    BYTE PTR [esp+eax*4-0x44]
  418708:	retf   
  418709:	jmp    0xce9315a
  41870e:	mov    ah,0xee
  418710:	lods   al,BYTE PTR ds:[esi]
  418711:	add    al,0xb5
  418713:	pusha  
  418714:	xchg   BYTE PTR [ecx],cl
  418716:	fld    DWORD PTR [eax]
  418718:	dec    ebx
  418719:	pop    edi
  41871a:	push   0xfdade52d
  41871f:	out    0xf4,eax
  418721:	jmp    0x3031:0xc0ab2bdb
  418728:	add    edi,esi
  41872a:	stc    
  41872b:	popa   
  41872c:	into   
  41872d:	xor    al,0x7b
  41872f:	mov    DWORD PTR cs:[edx],0x5c437169
  418736:	das    
  418737:	dec    esp
  418738:	sbb    al,0x79
  41873a:	imul   ebp
  41873c:	out    0x5b,al
  41873e:	xchg   ebp,eax
  41873f:	rcr    BYTE PTR [eax-0x26],0xc6
  418743:	pop    ecx
  418744:	xchg   esi,eax
  418746:	adc    eax,0x1db4c9cc
  41874b:	int    0xbe
  41874d:	xor    ah,ch
  41874f:	sbb    BYTE PTR [edx+eax*8-0x6505637c],al
  418756:	jbe    0x4187b1
  418758:	dec    ecx
  418759:	mov    edi,0x9815aa35
  41875e:	xor    edi,DWORD PTR [ecx+0x121a9096]
  418764:	dec    eax
  418765:	dec    eax
  418766:	(bad)  
  418767:	mov    esp,0x3278464c
  41876c:	in     al,dx
  41876d:	cli    
  41876e:	inc    edi
  41876f:	jo     0x41877d
  418771:	jmp    0x418718
  418773:	loope  0x418787
  418775:	inc    ecx
  418776:	and    cl,BYTE PTR [edi]
  418778:	(bad)  
  418779:	xor    al,0xd2
  41877b:	add    edx,DWORD PTR [edx+ebp*8-0x49]
  41877f:	jle    0x4187ae
  418781:	loope  0x4187c0
  418783:	xlat   BYTE PTR ds:[ebx]
  418784:	xchg   esp,eax
  418785:	add    esp,DWORD PTR [ecx-0x169b4349]
  41878b:	or     ah,BYTE PTR [esi+0x5e623aab]
  418791:	loop   0x418799
  418793:	cwde   
  418794:	sub    bl,BYTE PTR [esi+eax*1]
  418797:	jge    0x41880f
  418799:	clc    
  41879a:	(bad)  
  41879b:	sbb    al,0xad
  41879d:	test   DWORD PTR [esi],eax
  41879f:	popf   
  4187a0:	icebp  
  4187a1:	adc    ecx,DWORD PTR ds:0x99edd824
  4187a7:	sub    edi,0x373bdca5
  4187ad:	push   esi
  4187ae:	and    eax,0x7c0d756e
  4187b3:	stos   DWORD PTR es:[edi],eax
  4187b4:	out    0x89,eax
  4187b6:	sub    eax,0x220a39de
  4187bb:	inc    edx
  4187bc:	mov    ch,0xef
  4187be:	mov    dh,BYTE PTR [edx+ecx*8-0x1a6ea94]
  4187c5:	jmp    FWORD PTR [esi]
  4187c7:	(bad)  
  4187c8:	push   edi
  4187c9:	jl     0x4187bd
  4187cb:	out    0xd,eax
  4187cd:	xchg   BYTE PTR [edx],cl
  4187cf:	sbb    bh,BYTE PTR [esi-0x3c]
  4187d2:	lods   al,BYTE PTR ds:[esi]
  4187d3:	clc    
  4187d4:	pop    ecx
  4187d5:	or     edx,ecx
  4187d7:	add    DWORD PTR [edi],esi
  4187d9:	ret    0x1e7a
  4187dc:	ja     0x41879c
  4187de:	test   eax,0xe77ec9a4
  4187e3:	xchg   esi,eax
  4187e4:	aas    
  4187e5:	adc    eax,0x706ea699
  4187ea:	adc    ah,bh
  4187ec:	sbb    al,0x6c
  4187ee:	lds    esi,FWORD PTR [eax-0x59df5fa7]
  4187f4:	jbe    0x4187be
  4187f6:	xor    esi,DWORD PTR ds:0x5b5d17bb
  4187fc:	sbb    bl,ah
  4187fe:	pop    ds
  4187ff:	push   eax
  418800:	or     BYTE PTR [ebp+0x20e15644],al
  418806:	push   eax
  418807:	sbb    dl,ah
  418809:	mov    esp,0x80c99870
  41880e:	push   edi
  41880f:	push   0xfa936383
  418814:	add    ebx,eax
  418816:	xor    ah,BYTE PTR [ebx-0x11]
  418819:	dec    ecx
  41881a:	inc    ecx
  41881b:	pop    es
  41881c:	sbb    BYTE PTR [eax],ah
  41881e:	adc    ebx,edi
  418820:	mov    ah,0xf4
  418822:	sub    DWORD PTR [ebp+0x1c],edi
  418825:	retf   0xa13b
  418828:	dec    BYTE PTR [ebx-0x3a]
  41882b:	mov    al,ds:0xfedd044f
  418830:	fwait
  418831:	dec    edx
  418832:	scas   eax,DWORD PTR es:[edi]
  418833:	add    DWORD PTR [edi-0x751789a8],esp
  418839:	stc    
  41883a:	sub    ch,dl
  41883c:	xchg   ebp,eax
  41883d:	out    dx,eax
  41883e:	mov    BYTE PTR [esi+0x1afa61eb],bl
  418844:	in     al,0x2c
  418846:	fdiv   st,st(5)
  418848:	cmp    BYTE PTR [ecx-0x18],bl
  41884b:	or     edx,edi
  41884d:	into   
  41884e:	mov    DWORD PTR [ebx+0x562a3c22],edi
  418854:	aad    0xf5
  418856:	addr16 mov ah,0x89
  418859:	push   esi
  41885a:	inc    ecx
  41885b:	ins    DWORD PTR es:[edi],dx
  41885c:	popf   
  41885d:	and    esp,DWORD PTR [ecx+0x755c45b0]
  418863:	ja     0x41881c
  418865:	outs   dx,BYTE PTR ds:[esi]
  418866:	and    cl,bh
  418868:	das    
  418869:	outs   dx,BYTE PTR ds:[esi]
  41886a:	mov    ah,0x43
  41886c:	mov    DWORD PTR [ecx+ecx*8+0x47],esp
  418870:	cmp    edi,DWORD PTR [esi]
  418872:	scas   al,BYTE PTR es:[edi]
  418873:	dec    ebp
  418874:	push   eax
  418875:	sbb    BYTE PTR [eax+edi*8],dh
  418878:	and    bl,0x23
  41887b:	mov    eax,ds:0x7cae0941
  418880:	xor    esi,DWORD PTR [ebp-0x25]
  418883:	dec    edx
  418884:	fld    TBYTE PTR [ebx-0x15]
  418887:	push   ds
  418888:	fadd   DWORD PTR [esi]
  41888a:	outs   dx,BYTE PTR ds:[esi]
  41888b:	dec    esi
  41888c:	mov    edx,0x65e0661
  418891:	stos   BYTE PTR es:[edi],al
  418892:	retf   0xe498
  418895:	inc    edi
  418896:	push   ecx
  418897:	pop    edi
  418898:	xor    al,0xe6
  41889a:	ss push cs
  41889c:	dec    edi
  41889d:	jae    0x418828
  41889f:	jmp    0xe338:0xee0ca769
  4188a6:	adc    DWORD PTR ds:0xb90d6e1b,ebp
  4188ac:	mov    ah,0xbf
  4188ae:	(bad)  
  4188af:	out    dx,eax
  4188b0:	mov    edx,0xbef371f4
  4188b5:	repz out 0x76,eax
  4188b8:	repnz loop 0x418904
  4188bb:	retf   0xfc31
  4188be:	out    0x4d,eax
  4188c0:	sbb    DWORD PTR [ebp-0x38],edi
  4188c3:	inc    ecx
  4188c4:	stos   DWORD PTR es:[di],eax
  4188c6:	shr    DWORD PTR [ecx-0x34],1
  4188c9:	je     0x418901
  4188cb:	sti    
  4188cc:	mov    ebp,0x5e591f10
  4188d1:	dec    eax
  4188d2:	jg     0x418876
  4188d4:	add    esi,edx
  4188d6:	hlt    
  4188d7:	sar    BYTE PTR [ebx-0x57721e86],0xd9
  4188de:	cmp    al,0x3d
  4188e0:	jecxz  0x4188d4
  4188e2:	dec    esi
  4188e3:	stos   DWORD PTR es:[edi],eax
  4188e4:	in     al,dx
  4188e5:	or     eax,0x429e385e
  4188ea:	out    dx,eax
  4188eb:	icebp  
  4188ec:	jne    0x418891
  4188ee:	or     al,0x3e
  4188f0:	xchg   ebp,eax
  4188f1:	mov    dl,0xf6
  4188f3:	mov    WORD PTR [ebx+0x2395a5d3],fs
  4188f9:	mov    al,ds:0x90d7e0d6
  4188fe:	ds in  al,dx
  418900:	push   eax
  418901:	(bad)  
  418902:	sti    
  418903:	mov    bl,0x7f
  418905:	daa    
  418906:	outs   dx,DWORD PTR ds:[esi]
  418907:	sbb    BYTE PTR [ebx+0xa],bl
  41890a:	mov    al,ds:0x87a477f0
  41890f:	and    eax,DWORD PTR [edi]
  418911:	mov    esi,0xf437d537
  418916:	pop    ebp
  418917:	mov    WORD PTR [esi+0x34183af9],es
  41891d:	mov    dh,cl
  41891f:	addr16 nop
  418921:	fpatan 
  418923:	or     eax,0x525a0878
  418928:	test   edx,edx
  41892a:	add    al,0x5c
  41892c:	jo     0x4188b4
  41892e:	jmp    0x52a65480
  418933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418934:	aaa    
  418935:	push   ebp
  418936:	rol    BYTE PTR [esi+0x6e8f5ce7],cl
  41893c:	adc    eax,0x1e895184
  418941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418942:	std    
  418943:	and    al,0x8d
  418945:	stos   BYTE PTR es:[edi],al
  418946:	iret   
  418947:	jmp    0x15d:0xa875db8e
  41894e:	mov    dl,0xfa
  418950:	outs   dx,DWORD PTR ds:[esi]
  418951:	mov    esi,0xf8b4e10a
  418956:	xchg   esp,eax
  418957:	stos   BYTE PTR es:[edi],al
  418958:	out    dx,al
  418959:	sub    ebx,DWORD PTR ds:0xd143e57a
  41895f:	push   ecx
  418960:	call   0x637a:0x727ba0da
  418967:	push   edi
  418968:	js     0x41890a
  41896a:	push   eax
  41896b:	or     esp,DWORD PTR [edi]
  41896d:	in     al,0xee
  41896f:	inc    esp
  418970:	test   BYTE PTR [eax+ebx*2+0x27],0xe0
  418975:	sbb    eax,ebp
  418977:	cdq    
  418978:	retf   0x97b3
  41897b:	or     al,0xa1
  41897d:	sbb    al,0x6d
  41897f:	int    0x55
  418981:	(bad)  
  418982:	mov    BYTE PTR [esi-0x32],al
  418985:	add    eax,0x92ace7e1
  41898a:	pop    edx
  41898b:	adc    bl,BYTE PTR [edi+eiz*4+0x7d]
  41898f:	stos   DWORD PTR es:[edi],eax
  418990:	aam    0x49
  418992:	aad    0x2e
  418994:	fs push ebp
  418996:	and    eax,0x8622f4b0
  41899b:	addr16 sahf 
  41899d:	sbb    BYTE PTR [ebp+0xa],ah
  4189a0:	les    esp,FWORD PTR [edi+0x44]
  4189a3:	dec    esi
  4189a4:	sti    
  4189a5:	cwde   
  4189a6:	sub    eax,0xd0e3fc8b
  4189ab:	xchg   ecx,eax
  4189ac:	loop   0x41899a
  4189ae:	clc    
  4189af:	(bad)  
  4189b0:	cmp    esi,ebx
  4189b2:	bound  edx,QWORD PTR [eax-0x5d18b2a]
  4189b8:	mov    ebp,0x582f4615
  4189bd:	xchg   ebp,eax
  4189be:	push   esi
  4189bf:	pushf  
  4189c0:	mov    esp,0xd036139a
  4189c5:	loope  0x418985
  4189c7:	xor    eax,0xe3c32052
  4189cc:	xchg   esp,eax
  4189cd:	mov    BYTE PTR [eax+0x7ecebb92],ah
  4189d3:	sahf   
  4189d4:	dec    ebp
  4189d5:	inc    esi
  4189d6:	add    DWORD PTR [edi+eax*8],esp
  4189d9:	dec    esp
  4189da:	mov    ah,0xe2
  4189dc:	leave  
  4189dd:	jmp    0x8a3410d6
  4189e2:	pop    ss
  4189e3:	adc    eax,DWORD PTR [esp+edi*4]
  4189e6:	push   ss
  4189e7:	xor    BYTE PTR [edi+0x6533add9],0x34
  4189ee:	add    eax,0x7d67f60b
  4189f3:	or     eax,edi
  4189f5:	ds cmp ch,ah
  4189f8:	pop    ds
  4189f9:	outs   dx,DWORD PTR ds:[esi]
  4189fa:	push   DWORD PTR [edx+0x1d2a145b]
  418a00:	fnsave [edi-0x3914d8a2]
  418a06:	sub    al,ch
  418a08:	(bad)  
  418a09:	cmp    dh,BYTE PTR [esi-0x2f418619]
  418a0f:	test   al,0xef
  418a11:	clc    
  418a12:	(bad)  
  418a13:	imul   edi,DWORD PTR [ebx-0x54],0xffffffdc
  418a17:	push   0xffffffa0
  418a19:	(bad)  
  418a1a:	jl     0x4189f7
  418a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a1d:	mov    ah,0xcc
  418a1f:	pop    eax
  418a20:	dec    esp
  418a21:	fwait
  418a22:	out    dx,eax
  418a23:	mov    eax,0x529ab1d
  418a28:	test   eax,0x5b1d3eba
  418a2d:	fstp   QWORD PTR [ecx]
  418a2f:	leave  
  418a30:	add    al,0xcb
  418a32:	pushf  
  418a33:	fld    TBYTE PTR [ebp+0x34]
  418a36:	mov    ebx,DWORD PTR [edi-0x183298e6]
  418a3c:	mov    ah,0xc3
  418a3e:	sbb    DWORD PTR [esi],eax
  418a40:	loopne 0x418a48
  418a42:	fs sbb si,bp
  418a46:	test   eax,0x9928ffe0
  418a4b:	imul   edi
  418a4d:	push   esi
  418a4e:	mov    dl,0x93
  418a50:	mov    edi,0x267fd624
  418a55:	mov    cl,0x13
  418a57:	dec    ebp
  418a58:	inc    ebx
  418a59:	mov    ebp,0xd018f6a7
  418a5e:	xor    al,0x95
  418a60:	jl     0x418ac9
  418a62:	outs   dx,DWORD PTR ds:[esi]
  418a63:	or     DWORD PTR [edx-0x57],ecx
  418a66:	cmp    cl,ah
  418a68:	xlat   BYTE PTR ds:[ebx]
  418a69:	mov    ah,0x37
  418a6b:	test   BYTE PTR [ecx+0x18],ch
  418a6e:	stc    
  418a6f:	in     al,0xfd
  418a71:	test   DWORD PTR [ecx-0x542341af],ecx
  418a77:	push   eax
  418a78:	(bad)  
  418a79:	loope  0x418ad3
  418a7b:	xor    bh,BYTE PTR [eax+0x5f3278b]
  418a81:	lods   eax,DWORD PTR ds:[esi]
  418a82:	sub    esi,DWORD PTR [edi-0x19]
  418a85:	sbb    ebx,ecx
  418a87:	mov    ebp,0x7aad9d98
  418a8c:	stc    
  418a8d:	push   esi
  418a8e:	push   edx
  418a8f:	in     al,dx
  418a90:	mov    ch,0x64
  418a92:	sub    bl,al
  418a94:	mov    ecx,0x49f7b98d
  418a99:	mov    edx,?
  418a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a9c:	fiadd  WORD PTR [edx-0x5]
  418a9f:	xor    al,0xed
  418aa1:	dec    ebp
  418aa2:	int    0x82
  418aa4:	pusha  
  418aa5:	arpl   WORD PTR [ebp+eax*2-0x7ae50682],bx
  418aac:	xor    ecx,DWORD PTR [esi]
  418aae:	push   0x52
  418ab0:	and    BYTE PTR [ecx],bl
  418ab2:	in     al,0x72
  418ab4:	and    BYTE PTR [eax],bh
  418ab6:	in     al,dx
  418ab7:	icebp  
  418ab8:	or     edi,esi
  418aba:	pop    esp
  418abb:	(bad)  
  418abc:	cdq    
  418abd:	mov    esi,0xd3d96ce3
  418ac2:	mov    ch,0x26
  418ac4:	pop    edx
  418ac5:	inc    esi
  418ac6:	fild   DWORD PTR [ebx]
  418ac8:	jnp    0x418a5b
  418aca:	push   edx
  418acb:	dec    ebx
  418acc:	mov    esi,0x59ff9eb7
  418ad1:	pop    ebp
  418ad2:	xor    DWORD PTR [ecx+0x17],esp
  418ad5:	and    DWORD PTR [edx+0x31d1d27a],edx
  418adb:	sbb    ah,BYTE PTR [eax+0x4a]
  418ade:	jg     0x418b32
  418ae0:	jecxz  0x418a8a
  418ae2:	and    DWORD PTR [eax+ebx*2-0x3e],ebx
  418ae6:	mov    al,0xf2
  418ae8:	add    ebx,DWORD PTR [edx-0x70aa5a5c]
  418aee:	sub    al,0x16
  418af0:	cdq    
  418af1:	test   BYTE PTR [edi],dh
  418af3:	push   ss
  418af4:	es inc ecx
  418af6:	daa    
  418af7:	sbb    DWORD PTR [ecx+eax*8],ecx
  418afa:	sub    eax,0x5bc5b0eb
  418aff:	cmp    ah,BYTE PTR [edi+0x6b78a9ad]
  418b05:	sub    al,0x45
  418b07:	mov    ch,0xb4
  418b09:	sar    BYTE PTR [ebx],0x4f
  418b0c:	push   cs
  418b0d:	loope  0x418aae
  418b0f:	and    edx,DWORD PTR [ebx]
  418b11:	sbb    edx,DWORD PTR [eax+0x6aab4e40]
  418b17:	cwde   
  418b18:	adc    eax,0x5d94ca68
  418b1d:	ret    
	...
  418b26:	inc    ecx
  418b27:	inc    BYTE PTR [ebx+eiz*1-0x1188441]
  418b2e:	push   ecx
  418b2f:	jecxz  0x418b56
  418b31:	arpl   WORD PTR [ebx+0x3bc2d100],dx
  418b37:	test   DWORD PTR [ecx],eax
  418b39:	add    BYTE PTR [eax],ah
  418b3b:	pop    es
  418b3c:	add    BYTE PTR [eax],al
  418b3e:	sub    ebx,esi
  418b40:	push   edi
  418b41:	int3   
  418b42:	jnp    0x418b85
  418b44:	int    0x3f
  418b46:	xchg   ebx,eax
  418b47:	retf   
  418b48:	mov    dl,0x6f
  418b4a:	ins    BYTE PTR es:[edi],dx
  418b4b:	adc    BYTE PTR [ebp+eiz*8-0x22],dl
  418b4f:	cmc    
  418b50:	jle    0x418b88
  418b52:	mov    ecx,0xb1b4f2c7
  418b57:	sbb    DWORD PTR [edx+0x20db4c5],eax
  418b5d:	dec    ebx
  418b5e:	daa    
  418b5f:	cdq    
  418b60:	cmp    cl,dh
  418b62:	xchg   esp,eax
  418b63:	int    0x31
  418b65:	sbb    BYTE PTR [esi+ecx*4],cl
  418b68:	adc    BYTE PTR [eax],dl
  418b6a:	or     BYTE PTR [edx],cl
  418b6c:	push   eax
  418b6d:	ret    
  418b6e:	jns    0x418bef
  418b70:	jecxz  0x418afd
  418b72:	add    eax,ebp
  418b74:	rcr    BYTE PTR [edx+0x5e],0xb5
  418b78:	sub    BYTE PTR [edi+eiz*8],al
  418b7b:	mov    esp,0x1fe2922c
  418b80:	and    al,0x1d
  418b82:	dec    eax
  418b83:	jns    0x418ba7
  418b85:	mov    al,0xc8
  418b87:	test   ah,bh
  418b89:	push   edx
  418b8a:	jmp    0x8eda35a7
  418b8f:	mov    dh,0x9a
  418b91:	enter  0x59f8,0x3a
  418b95:	mov    al,ds:0xa4c47414
  418b9a:	ja     0x418c1a
  418b9c:	ins    BYTE PTR es:[edi],dx
  418b9d:	or     eax,0xe0790ae1
  418ba2:	std    
  418ba3:	and    cl,BYTE PTR [edx+0x5d]
  418ba6:	ins    BYTE PTR es:[edi],dx
  418ba7:	outs   dx,DWORD PTR ds:[esi]
  418ba8:	call   0x4b616564
  418bad:	jl     0x418c2d
  418baf:	dec    eax
  418bb0:	jecxz  0x418b5d
  418bb2:	push   es
  418bb3:	(bad)  
  418bb4:	call   0xa49fbf50
  418bb9:	add    al,0xc4
  418bbb:	dec    edx
  418bbc:	mul    BYTE PTR es:[ebp+0x52b511bd]
  418bc3:	pop    es
  418bc4:	or     eax,0xa9938719
  418bc9:	ret    0x6425
  418bcc:	jmp    0x418b95
  418bce:	repnz dec ecx
  418bd0:	mov    DWORD PTR [ebx-0x1eae7ecb],ecx
  418bd6:	xchg   BYTE PTR [edx-0x26],ah
  418bd9:	xor    BYTE PTR [edi+0x43],bh
  418bdc:	jne    0x418bfb
  418bde:	sbb    al,0x1c
  418be0:	and    ah,ah
  418be2:	call   0xd5b0cbcc
  418be7:	jo     0x418b6d
  418be9:	or     DWORD PTR [edi+eiz*4],0x3e6743a3
  418bf0:	aad    0x8a
  418bf2:	inc    edx
  418bf3:	xor    ebp,ebp
  418bf5:	loopne 0x418c32
  418bf7:	loope  0x418be6
  418bf9:	ja     0x418b83
  418bfb:	cmp    al,0x92
  418bfd:	scas   al,BYTE PTR es:[edi]
  418bfe:	jno    0x418bee
  418c00:	dec    ecx
  418c01:	or     eax,eax
  418c03:	outs   dx,BYTE PTR ds:[esi]
  418c04:	jl     0x418b97
  418c06:	rol    DWORD PTR gs:[eax],1
  418c09:	int    0x93
  418c0b:	pop    ebp
  418c0c:	iret   
  418c0d:	or     DWORD PTR [eax+0x70934a68],ebx
  418c13:	int    0x6a
  418c15:	shl    BYTE PTR [ecx],cl
  418c17:	ss sbb al,0x4e
  418c1a:	enter  0xbbd0,0x39
  418c1e:	xor    DWORD PTR [ebx-0x635350b4],eax
  418c24:	xchg   ebx,eax
  418c25:	test   DWORD PTR [ebp+0x4b0b32dc],esp
  418c2b:	add    dl,0xc1
  418c2e:	adc    BYTE PTR [esi],dh
  418c30:	push   ebp
  418c31:	push   0xffffffc3
  418c33:	pop    edi
  418c34:	jae    0x418c1e
  418c36:	mov    DWORD PTR [esi+0x21],esi
  418c39:	add    BYTE PTR [edi+0x63],bh
  418c3c:	dec    esi
  418c3d:	mov    ebx,0x9bd06d84
  418c42:	dec    edx
  418c43:	xchg   edx,eax
  418c44:	test   eax,0xc3c45ad0
  418c49:	pop    esp
  418c4a:	gs fs sbb ch,dh
  418c4e:	cmp    eax,DWORD PTR [ebx]
  418c50:	int    0xea
  418c52:	pop    ecx
  418c53:	push   ss
  418c54:	inc    eax
  418c55:	sbb    edi,DWORD PTR [edi-0x78]
  418c58:	(bad)  
  418c59:	push   DWORD PTR [eax]
  418c5b:	jmp    0x4981753f
  418c60:	cmp    DWORD PTR [edx+ecx*4],0x19584d18
  418c67:	push   eax
  418c68:	popf   
  418c69:	mov    bl,0x1d
  418c6b:	adc    ah,BYTE PTR [esi+ebx*1-0x14bfd072]
  418c72:	adc    bh,BYTE PTR [ebx]
  418c74:	mov    DWORD PTR [eax+0x1464d2e9],esp
  418c7a:	int3   
  418c7b:	mov    dl,0x15
  418c7d:	popa   
  418c7e:	mov    ch,0x9b
  418c80:	outs   dx,BYTE PTR ds:[esi]
  418c81:	dec    ebx
  418c82:	retf   
  418c83:	xor    eax,0x6521c49b
  418c88:	add    ah,BYTE PTR [esp+ecx*2+0x3e1896a4]
  418c8f:	add    eax,0x8b2987dd
  418c94:	mov    ah,0x59
  418c96:	sbb    ah,dl
  418c98:	push   0x9cdc2732
  418c9d:	and    BYTE PTR [edi+0xbf1f625],dl
  418ca3:	call   0x9d26f878
  418ca8:	sub    BYTE PTR [ecx+0x62],cl
  418cab:	ins    BYTE PTR es:[edi],dx
  418cac:	int    0x56
  418cae:	jns    0x418c56
  418cb0:	adc    ebp,DWORD PTR [edi]
  418cb2:	add    BYTE PTR [esi+0x11949c93],bl
  418cb8:	rcr    BYTE PTR ds:0xf6a55f00,1
  418cbe:	add    BYTE PTR [ebx-0x5c85f9be],cl
  418cc4:	daa    
  418cc5:	lahf   
  418cc6:	xor    DWORD PTR [esi-0x54],ecx
  418cc9:	lods   al,BYTE PTR ds:[esi]
  418cca:	mov    esi,0x5f2f822d
  418ccf:	outs   dx,BYTE PTR ds:[esi]
  418cd0:	cdq    
  418cd1:	xor    BYTE PTR [edi],0x54
  418cd4:	pop    ebp
  418cd5:	sbb    BYTE PTR [edx+0x19a29772],dh
  418cdb:	adc    dh,BYTE PTR [ebx]
  418cdd:	xchg   ebx,eax
  418cde:	or     BYTE PTR [eax+0x53],bl
  418ce1:	mov    ecx,0x28d36dac
  418ce6:	mov    al,0x17
  418ce8:	fmul   st,st(0)
  418cea:	and    eax,0x963f213a
  418cef:	sub    bl,dh
  418cf1:	out    0x34,eax
  418cf3:	xor    al,0x1
  418cf5:	js     0x418cf7
  418cf7:	aad    0xd1
  418cf9:	sbb    ebx,esp
  418cfb:	call   0xd4c4:0x9213e01
  418d02:	sub    cl,bl
  418d04:	lock push ecx
  418d06:	es stc 
  418d08:	cwde   
  418d09:	jp     0x418d3e
  418d0b:	rol    BYTE PTR [edx-0xfb10ae1],1
  418d11:	gs jg  0x418d0c
  418d14:	pop    eax
  418d15:	mov    dh,0x7f
  418d17:	jae    0x418cea
  418d19:	adc    DWORD PTR [ebp+0x22],ebp
  418d1c:	cmp    BYTE PTR [ebx+0x19],cl
  418d1f:	retf   0x55c
  418d22:	mov    ebp,0x16983468
  418d27:	ret    
  418d28:	push   ebp
  418d29:	in     eax,0x15
  418d2b:	gs mov bh,0x2a
  418d2e:	pop    ds
  418d2f:	(bad)
  418d32:	mov    BYTE PTR [ebx+0x1c],bh
  418d35:	adc    bl,BYTE PTR [ebp-0x28a2f193]
  418d3b:	ss jnp 0x418cce
  418d3e:	sbb    al,0x89
  418d40:	cld    
  418d41:	and    eax,0x55e7a47f
  418d46:	xchg   esp,eax
  418d47:	div    DWORD PTR [edi+0x68fbbabd]
  418d4d:	aam    0x81
  418d4f:	fs (bad) 
  418d51:	jge    0x418da7
  418d53:	inc    edx
  418d54:	inc    esi
  418d55:	out    0x3,al
  418d57:	inc    ecx
  418d58:	jmp    0xe2c7b22a
  418d5d:	ja     0x418d07
  418d5f:	xor    BYTE PTR [ebp+0x51],al
  418d62:	xchg   edi,eax
  418d63:	repnz stos DWORD PTR es:[edi],eax
  418d65:	push   ds
  418d66:	call   0xa98e3522
  418d6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d6c:	xchg   ebp,eax
  418d6d:	xchg   edx,eax
  418d6e:	aas    
  418d6f:	add    ecx,DWORD PTR [ebp+edx*8+0x4bd7a5ef]
  418d76:	ret    
  418d77:	or     DWORD PTR [ecx+ebx*2+0x3d],eax
  418d7b:	outs   dx,BYTE PTR ds:[esi]
  418d7c:	icebp  
  418d7d:	sti    
  418d7e:	mov    edi,0x459cf4d9
  418d83:	daa    
  418d84:	es rcl bl,cl
  418d87:	fisttp DWORD PTR [eax]
  418d89:	js     0x418dce
  418d8b:	sub    al,0x9b
  418d8d:	inc    esp
  418d8e:	or     dh,BYTE PTR [edx-0x5613fb83]
  418d94:	xor    ch,cl
  418d96:	mov    al,0xcc
  418d98:	xchg   cl,al
  418d9a:	mov    eax,0x35f034d1
  418d9f:	and    esi,edi
  418da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da2:	jae    0x418d94
  418da4:	(bad)  
  418da6:	pop    ebp
  418da7:	xlat   BYTE PTR ds:[ebx]
  418da8:	add    BYTE PTR [esi+esi*8-0x22],0xe0
  418dad:	cdq    
  418dae:	pusha  
  418daf:	jnp    0x418d5f
  418db1:	xchg   ebp,eax
  418db2:	call   0x7477:0x66655bc
  418db9:	pop    eax
  418dba:	dec    eax
  418dbb:	dec    ecx
  418dbc:	mov    esi,0x31b4dae2
  418dc1:	jecxz  0x418e23
  418dc3:	push   ebp
  418dc4:	cmp    DWORD PTR [eax-0x1],0x4c2e9ef5
  418dcb:	xchg   BYTE PTR [edx-0x46b47d0e],ch
  418dd1:	pop    edi
  418dd2:	or     BYTE PTR [edx],dl
  418dd4:	push   0xd80fc439
  418dd9:	aas    
  418dda:	pop    ebx
  418ddb:	mov    eax,ds:0xbb2a7112
  418de0:	aaa    
  418de1:	fwait
  418de2:	mov    al,BYTE PTR [eax+0x76c9805]
  418de8:	es pop eax
  418dea:	ins    DWORD PTR es:[edi],dx
  418deb:	push   ds
  418dec:	dec    esp
  418ded:	inc    BYTE PTR [ecx+0xb]
  418df0:	out    dx,eax
  418df1:	add    bl,ah
  418df3:	imul   ebp,DWORD PTR [eax+eiz*1-0x8],0x65
  418df8:	sub    BYTE PTR [esi],al
  418dfa:	inc    ebp
  418dfb:	cmp    esp,DWORD PTR [esi-0x19e4063f]
  418e01:	sahf   
  418e02:	mov    edi,0x7c6d0d1f
  418e07:	pop    eax
  418e08:	repz mov ds:0x570195f1,al
  418e0e:	xchg   edx,eax
  418e0f:	push   ebx
  418e10:	cmp    al,0x1a
  418e12:	mov    ah,BYTE PTR [eax-0x6f05bda2]
  418e18:	mov    al,al
  418e1a:	retf   0x658
  418e1d:	iret   
  418e1e:	jne    0x418dd6
  418e20:	mov    ah,0x94
  418e22:	mov    ch,0xb2
  418e24:	jp     0x418e7c
  418e26:	lods   eax,DWORD PTR ds:[esi]
  418e28:	jp     0x418def
  418e2a:	loop   0x418e59
  418e2c:	js     0x418ea6
  418e2e:	test   eax,0xda74090a
  418e33:	or     esp,ebx
  418e35:	inc    esp
  418e36:	add    BYTE PTR [edi+0x621ed66a],ch
  418e3c:	mov    ecx,0xf1f61137
  418e41:	jae    0x418e7e
  418e43:	xchg   esi,eax
  418e44:	pop    esp
  418e45:	cdq    
  418e46:	jle    0x418e12
  418e48:	jecxz  0x418e72
  418e4a:	scas   eax,DWORD PTR es:[edi]
  418e4b:	fbld   TBYTE PTR [esi-0x64c30443]
  418e51:	loope  0x418e63
  418e53:	jl     0x418e5f
  418e55:	sub    DWORD PTR [ebp+0x2e433f8d],eax
  418e5b:	lods   al,BYTE PTR ss:[esi]
  418e5d:	mov    ebp,0x8a7ade91
  418e62:	jmp    0xdb35:0xf70b5cc0
  418e69:	mul    dl
  418e6b:	dec    eax
  418e6c:	cmp    eax,DWORD PTR [esi+esi*4+0x46]
  418e70:	fwait
  418e71:	sub    DWORD PTR [ecx+ecx*1-0x79],0x9eeefbe1
  418e79:	ret    
  418e7a:	pop    ecx
  418e7b:	inc    ebx
  418e7c:	pop    edx
  418e7d:	dec    esp
  418e7e:	iret   
  418e7f:	sahf   
  418e80:	in     al,0x48
  418e82:	ins    BYTE PTR es:[edi],dx
  418e83:	mov    al,0xa1
  418e85:	cwde   
  418e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e87:	shr    BYTE PTR [edi],1
  418e89:	xchg   BYTE PTR [edx+ebp*8+0x20],bh
  418e8d:	or     ebp,DWORD PTR [esi]
  418e8f:	and    bl,BYTE PTR [edx]
  418e91:	sbb    DWORD PTR [edx-0x11978b2e],ecx
  418e97:	add    BYTE PTR [edi],dh
  418e99:	mov    ebx,0x8a23628b
  418e9e:	cmp    BYTE PTR [esi-0x4b],ah
  418ea1:	inc    edx
  418ea2:	pop    esi
  418ea3:	inc    esi
  418ea4:	add    BYTE PTR [ebp+eax*4+0x2e],dl
  418ea8:	and    BYTE PTR [esi],bl
  418eaa:	scas   al,BYTE PTR es:[edi]
  418eab:	fsub   DWORD PTR [ebx-0x67]
  418eae:	sub    BYTE PTR [edi+0x2a],bl
  418eb1:	stos   DWORD PTR es:[edi],eax
  418eb2:	inc    edx
  418eb3:	and    BYTE PTR [ecx+edi*1-0x75],ah
  418eb7:	(bad)  
  418eb8:	jmp    0x418ed2
  418eba:	les    edi,FWORD PTR [ebx+0x55]
  418ebd:	mov    ch,0xea
  418ebf:	mov    al,ds:0xc813dcec
  418ec4:	inc    ebp
  418ec5:	cmp    DWORD PTR [ebp+0x31e25272],edx
  418ecb:	cdq    
  418ecc:	sti    
  418ecd:	cs xchg ecx,eax
  418ecf:	pusha  
  418ed0:	dec    eax
  418ed1:	xlat   BYTE PTR ds:[ebx]
  418ed2:	fst    QWORD PTR [edi]
  418ed4:	sahf   
  418ed5:	mov    bh,0x61
  418ed7:	mov    DWORD PTR ds:[ebp-0x45da7d6c],edi
  418ede:	imul   edx,DWORD PTR [esi-0x432e5978],0xdbce2a0d
  418ee8:	aas    
  418ee9:	dec    edi
  418eea:	sbb    DWORD PTR [esi],0xcb78c949
  418ef0:	adc    al,0xbb
  418ef2:	cmp    ch,BYTE PTR [ebx]
  418ef4:	pop    ds
  418ef5:	outs   dx,BYTE PTR ds:[esi]
  418ef6:	sbb    esi,DWORD PTR [eax-0x5e]
  418ef9:	xchg   edx,eax
  418efa:	in     al,dx
  418efb:	pop    ecx
  418efc:	or     BYTE PTR [edi],cl
  418efe:	jle    0x418f5c
  418f00:	cwde   
  418f01:	cli    
  418f02:	loopne 0x418ee2
  418f04:	sbb    BYTE PTR [ebp-0x3e],bl
  418f07:	lods   eax,DWORD PTR ds:[esi]
  418f08:	pop    esi
  418f09:	jb     0x418f70
  418f0b:	adc    DWORD PTR fs:[edi-0x5a],esp
  418f0f:	sub    DWORD PTR [ecx],edx
  418f11:	mov    dl,0x80
  418f13:	dec    edx
  418f14:	cli    
  418f15:	cmp    al,0x4a
  418f17:	push   edx
  418f18:	and    edi,DWORD PTR [esi]
  418f1a:	fbstp  TBYTE PTR [ecx+0x2ef04ed0]
  418f20:	(bad)  
  418f21:	add    ebp,DWORD PTR [edi+edi*1]
  418f24:	sub    ch,BYTE PTR cs:[ecx-0x7f]
  418f28:	and    BYTE PTR [edx-0x3c],dh
  418f2b:	jbe    0x418f16
  418f2d:	std    
  418f2e:	jbe    0x418ef3
  418f30:	shl    DWORD PTR [esi],cl
  418f32:	jp     0x418ee9
  418f34:	sub    BYTE PTR [eax+0x1012d19d],dh
  418f3a:	mov    edi,0x6223746b
  418f3f:	pushf  
  418f40:	xchg   BYTE PTR [edx-0x21],bh
  418f43:	xor    al,0x82
  418f45:	outs   dx,DWORD PTR ds:[esi]
  418f46:	push   cs
  418f47:	mov    ebx,gs
  418f49:	cmc    
  418f4a:	or     BYTE PTR [ebp+0x4626711a],0x13
  418f51:	or     DWORD PTR [ebp-0x14],ebx
  418f54:	add    eax,0x728823a8
  418f59:	or     edi,0xfc7ef7d1
  418f5f:	std    
  418f60:	mov    BYTE PTR [ebx-0x6a],bl
  418f63:	nop
  418f64:	dec    esi
  418f65:	daa    
  418f66:	pop    ebx
  418f67:	aaa    
  418f68:	sub    cl,BYTE PTR [ecx+0x72c4f7e1]
  418f6e:	int3   
  418f6f:	xor    dl,BYTE PTR [ecx-0x2f]
  418f72:	idiv   bl
  418f74:	ins    BYTE PTR es:[edi],dx
  418f75:	inc    esi
  418f76:	shr    BYTE PTR [edi+0x7d221272],cl
  418f7c:	push   ebx
  418f7d:	clc    
  418f7e:	pop    ds
  418f7f:	fsub   QWORD PTR [esi]
  418f81:	repz sbb ecx,DWORD PTR [edx-0x69]
  418f85:	in     al,0xaa
  418f87:	adc    DWORD PTR [ebx+eiz*1-0x78],0x27953c1f
  418f8f:	cdq    
  418f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f91:	and    dl,BYTE PTR [esi]
  418f93:	test   BYTE PTR [eax+0x31],ch
  418f96:	mov    ebx,0xe286f9e4
  418f9b:	inc    edi
  418f9c:	je     0x418fa5
  418f9e:	jbe    0x418f60
  418fa0:	pop    ecx
  418fa1:	sub    BYTE PTR [esi],bh
  418fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fa4:	lea    eax,[edi+0x79]
  418fa7:	xor    eax,0x588ef194
  418fac:	scas   eax,DWORD PTR es:[edi]
  418fad:	sbb    ebp,DWORD PTR [eax]
  418faf:	rcr    BYTE PTR [edx+eax*1-0x17e126ff],1
  418fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fb7:	or     ebx,ebp
  418fb9:	xchg   ebp,eax
  418fba:	test   eax,0xfa681b70
  418fbf:	popf   
  418fc0:	pop    ds
  418fc1:	aaa    
  418fc2:	jnp    0x418fa1
  418fc4:	lds    ebp,FWORD PTR [ecx+ebx*1]
  418fc7:	mov    ecx,0x3d96bf5a
  418fcc:	smsw   WORD PTR [ecx-0x6e]
  418fd0:	cmp    esp,ecx
  418fd2:	cmc    
  418fd3:	inc    ecx
  418fd4:	pop    edi
  418fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fd6:	push   ecx
  418fd7:	arpl   WORD PTR [ecx],si
  418fd9:	aaa    
  418fda:	addr16 out dx,eax
  418fdc:	mov    ds:0xab405f4a,al
  418fe1:	or     DWORD PTR [ecx-0x64],ebx
  418fe4:	mov    ds:0x2797ace3,al
  418fe9:	pop    eax
  418fea:	imul   edi,DWORD PTR [ebx+edi*1+0x7f058b82],0x9440f649
  418ff5:	iret   
  418ff6:	out    dx,al
  418ff7:	xor    al,0x30
  418ffa:	stos   DWORD PTR es:[edi],eax
  418ffb:	daa    
  418ffc:	mov    ebp,0xe337348f
  419001:	push   esp
  419002:	xor    eax,0xd047dd4d
  419007:	add    eax,0xf7440b15
  41900c:	pop    ecx
  41900d:	(bad)  
  41900e:	fnstenv [ebx]
  419010:	xchg   ebx,eax
  419011:	nop
  419012:	jge    0x418fa9
  419014:	out    dx,al
  419015:	inc    edi
  419016:	dec    edi
  419017:	icebp  
  419018:	mov    dl,0xf0
  41901a:	push   ss
  41901b:	and    al,0x11
  41901d:	cmp    al,0xb4
  41901f:	in     eax,dx
  419020:	and    bl,BYTE PTR [eax-0x5339ec3a]
  419026:	fnstsw WORD PTR [edi]
  419028:	sbb    al,0xbd
  41902a:	push   0x1ed84d2c
  41902f:	test   DWORD PTR [edi+0x54],esp
  419032:	jo     0x418fdb
  419034:	stos   BYTE PTR es:[edi],al
  419035:	pop    ebp
  419036:	and    BYTE PTR [edx-0x280414cf],dh
  41903c:	cmp    eax,0x121d1c2e
  419041:	and    eax,0x7609c7b1
  419046:	pop    ds
  419047:	rol    ecx,1
  419049:	mov    ds:0x60916855,eax
  41904e:	aam    0x83
  419050:	jecxz  0x419083
  419052:	out    0xa2,al
  419054:	push   ecx
  419055:	(bad)  
  419056:	in     al,dx
  419057:	or     dl,BYTE PTR [eax-0x3d]
  41905a:	xor    dh,dl
  41905c:	and    BYTE PTR [edi-0x56],bl
  41905f:	adc    eax,0x800f08ac
  419064:	mov    bl,0x48
  419066:	adc    DWORD PTR [ebx],0xc0708b12
  41906c:	jl     0x419066
  41906e:	imul   esi,DWORD PTR [edi+0x49b73df2],0x326c66bd
  419078:	scas   al,BYTE PTR es:[edi]
  419079:	(bad)  
  41907a:	gs jnp 0x419051
  41907d:	xchg   esp,eax
  41907e:	dec    ebx
  41907f:	xchg   ebp,eax
  419080:	jno    0x419006
  419082:	push   0xddc5dce3
  419087:	popf   
  419088:	in     al,dx
  419089:	dec    ecx
  41908a:	pop    es
  41908b:	out    dx,al
  41908c:	push   ebx
  41908d:	loop   0x41901c
  41908f:	cld    
  419090:	(bad)  
  419091:	and    al,0x48
  419093:	xor    al,0x75
  419095:	add    al,0xd
  419097:	push   0xbf4553ca
  41909c:	in     eax,0xc1
  41909e:	inc    edi
  41909f:	xor    DWORD PTR [edx+0x38c6de4b],edx
  4190a5:	mov    ebx,0x386d9c21
  4190aa:	cmp    bh,BYTE PTR [esi]
  4190ac:	(bad)  
  4190ad:	adc    esi,DWORD PTR [eax+0x45f0844e]
  4190b3:	lahf   
  4190b4:	je     0x41909e
  4190b6:	addr16 call 0x1a39:0x983f9b1a
  4190be:	jb     0x419112
  4190c0:	mov    ecx,0x2a9517df
  4190c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190c6:	out    dx,al
  4190c7:	pop    edi
  4190c8:	jecxz  0x4190e6
  4190ca:	adc    ebx,DWORD PTR [eax+ebx*1]
  4190cd:	push   ecx
  4190ce:	ins    DWORD PTR es:[edi],dx
  4190cf:	add    DWORD PTR [edx+0x4c],ebp
  4190d2:	retf   
  4190d3:	dec    ebp
  4190d4:	pop    eax
  4190d5:	mov    esp,0xbd278ebe
  4190da:	arpl   WORD PTR [edi-0x15],dx
  4190dd:	sbb    BYTE PTR [edi],ah
  4190df:	mov    dh,0x4e
  4190e1:	aaa    
  4190e2:	rcr    BYTE PTR [eax],1
  4190e4:	push   ds
  4190e5:	xchg   ebx,eax
  4190e6:	jle    0x4190ce
  4190e8:	ret    0x8666
  4190eb:	mov    ecx,0x3b265dad
  4190f0:	inc    edi
  4190f1:	mov    al,ds:0x4699efba
  4190f6:	shr    BYTE PTR [edi],1
  4190f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190f9:	push   ds
  4190fa:	dec    ecx
  4190fb:	test   BYTE PTR [ebx],dh
  4190fd:	call   0x76cd:0x727dae70
  419104:	cdq    
  419105:	pusha  
  419106:	int    0x71
  419108:	fnstcw WORD PTR [ebx-0x154b454a]
  41910e:	xchg   BYTE PTR [ecx-0x24219e87],bh
  419114:	xor    dl,BYTE PTR [ecx-0x9]
  419117:	dec    edi
  419118:	inc    edx
  419119:	stos   DWORD PTR es:[edi],eax
  41911a:	and    BYTE PTR [eax+ebp*2],cl
  41911d:	sub    al,0x3
  41911f:	(bad)
  419122:	sti    
  419123:	fst    QWORD PTR [ecx]
  419125:	jge    0x419101
  419127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419128:	add    DWORD PTR [edi],esp
  41912a:	push   eax
  41912b:	inc    ecx
  41912c:	mov    ch,0x25
  41912e:	mov    DWORD PTR [esi],edi
  419130:	mov    DWORD PTR [ecx+esi*1],edi
  419133:	out    0xdc,al
  419135:	and    esi,DWORD PTR [esi]
  419137:	or     DWORD PTR [ecx-0x509f2211],0xffffffc4
  41913e:	ins    BYTE PTR es:[edi],dx
  41913f:	push   cs
  419140:	add    cl,ah
  419142:	adc    eax,0x63d8c77d
  419147:	fistp  QWORD PTR [esi+esi*1]
  41914a:	inc    esi
  41914b:	jp     0x41912e
  41914d:	pop    esp
  41914e:	xor    bl,BYTE PTR [esi]
  419150:	jp     0x419165
  419152:	outs   dx,BYTE PTR ds:[esi]
  419153:	xchg   edi,eax
  419154:	xchg   BYTE PTR [edx-0x2c262eab],dh
  41915a:	cmp    al,0x5e
  41915c:	imul   ecx,DWORD PTR [edx+ebx*1],0x5e27eb6c
  419163:	les    ebp,FWORD PTR [edi]
  419165:	mov    DWORD PTR [ebx+0x3e03aa82],eax
  41916b:	inc    esi
  41916c:	jle    0x4191c7
  41916e:	arpl   WORD PTR [esi+0x7bd3e269],ax
  419174:	lahf   
  419175:	jecxz  0x4191d5
  419177:	cmp    BYTE PTR gs:[ebx-0x36a168a7],ah
  41917e:	daa    
  41917f:	sbb    edx,esp
  419181:	fs add eax,0xc1d6f53e
  419187:	inc    edx
  419188:	ret    
  419189:	rcl    BYTE PTR [esi-0x1f],1
  41918c:	lods   al,BYTE PTR ds:[esi]
  41918d:	add    DWORD PTR [eax-0x63fb575b],0x23d2030e
  419197:	push   ss
  419198:	lahf   
  419199:	sub    eax,0x9259fdf6
  41919e:	adc    eax,0x6803b290
  4191a3:	sub    BYTE PTR [esi-0x10e21223],al
  4191a9:	nop
  4191aa:	ret    0xec0b
  4191ad:	cmp    al,0x31
  4191af:	fcomp  DWORD PTR [eax-0x72c28dd4]
  4191b5:	pop    ebx
  4191b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191b7:	test   dl,bh
  4191b9:	repz mov cl,0x7c
  4191bc:	iret   
  4191bd:	test   BYTE PTR [edx+0x28],al
  4191c0:	dec    ebp
  4191c1:	pop    edx
  4191c2:	mov    al,ds:0xe65ffc0b
  4191c7:	lods   al,BYTE PTR ds:[esi]
  4191c8:	push   cs
  4191c9:	hlt    
  4191ca:	sub    DWORD PTR [edx+0x72],esi
  4191cd:	adc    esp,DWORD PTR [ebx-0x57]
  4191d0:	pop    ss
  4191d1:	jno    0x4191b6
  4191d3:	add    eax,edx
  4191d5:	dec    esi
  4191d6:	call   0xffb9c5e0
  4191db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191dc:	ret    0x23b5
  4191df:	xor    al,0xa5
  4191e1:	(bad)  
  4191e2:	pop    ds
  4191e3:	cdq    
  4191e4:	cmp    eax,DWORD PTR [edx+0x52757e5b]
  4191ea:	lock retf 
  4191ec:	std    
  4191ed:	cmc    
  4191ee:	enter  0xa88f,0x15
  4191f2:	into   
  4191f3:	popa   
  4191f4:	inc    esp
  4191f5:	push   edi
  4191f6:	loopne 0x41926e
  4191f8:	mov    esi,0x77f7f7f9
  4191fd:	xchg   esi,eax
  4191fe:	fcmovb st,st(1)
  419200:	push   ebx
  419201:	les    ecx,FWORD PTR [ecx+0x55d00a17]
  419207:	int    0x87
  419209:	cmp    al,0x46
  41920b:	(bad)  
  41920d:	out    dx,al
  41920e:	pop    es
  41920f:	into   
  419210:	jnp    0x4191f4
  419212:	cmp    al,0xa9
  419214:	jl     0x419286
  419216:	rcr    DWORD PTR [ebx],0xbd
  419219:	mov    ds,WORD PTR [ebx+esi*1]
  41921c:	inc    edx
  41921d:	cs push esi
  41921f:	adc    edi,DWORD PTR [ebp-0x6b6f9d4b]
  419225:	test   DWORD PTR ds:0xf7b15341,ecx
  41922b:	add    al,0xca
  41922d:	aam    0x66
  41922f:	out    dx,eax
  419230:	sub    dh,BYTE PTR [ebx]
  419232:	push   ecx
  419233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419234:	push   ss
  419235:	sub    al,0xbf
  419237:	pop    esi
  419238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419239:	loopne 0x419297
  41923b:	loope  0x4191ed
  41923d:	sbb    al,0x56
  41923f:	jmp    0xeecb3224
  419244:	xchg   ah,ah
  419246:	cs loopne 0x419230
  419249:	mov    eax,ds:0xd0a240ab
  41924e:	adc    al,0xcd
  419250:	inc    ebx
  419251:	mov    eax,0xc28f33a2
  419256:	pop    esp
  419257:	out    dx,eax
  419258:	pushf  
  419259:	dec    eax
  41925a:	loopne 0x419288
  41925c:	repz loopne 0x41925f
  41925f:	add    BYTE PTR [eax],al
  419261:	add    BYTE PTR [eax],al
  419263:	add    BYTE PTR [eax],al
  419265:	add    BYTE PTR ds:0x773f6240,dl
  41926b:	aas    
  41926c:	pop    ebp
  41926d:	push   0xffffff86
  41926f:	jb     0x4192d3
  419271:	stc    
  419272:	call   0x5bf7aae5
  419277:	mov    WORD PTR [ecx],es
  419279:	add    BYTE PTR [eax],ah
  41927b:	pop    es
  41927c:	add    BYTE PTR [eax],al
  41927e:	lods   al,BYTE PTR ds:[esi]
  41927f:	inc    eax
  419280:	xchg   ebp,eax
  419281:	push   esi
  419282:	mov    dl,bh
  419284:	inc    ebp
  419285:	jns    0x4192d5
  419287:	adc    al,0x7c
  419289:	dec    edx
  41928a:	push   edx
  41928b:	mov    ah,0xb2
  41928d:	int    0x68
  41928f:	jae    0x4192e1
  419291:	mov    ah,BYTE PTR [ecx+0x5e]
  419294:	out    dx,al
  419295:	adc    bl,BYTE PTR [ebx+0x1ba8855b]
  41929b:	pop    es
  41929c:	(bad)  
  41929d:	push   cs
  41929e:	jo     0x419316
  4192a0:	xchg   ecx,eax
  4192a1:	aam    0x84
  4192a3:	push   edx
  4192a4:	nop
  4192a5:	pusha  
  4192a6:	mov    WORD PTR [eax-0x7],fs
  4192a9:	sbb    al,dl
  4192ab:	mov    edi,0xbb26929c
  4192b0:	(bad)  
  4192b1:	xchg   esp,eax
  4192b2:	push   edi
  4192b3:	and    eax,0xeac23fb6
  4192b8:	inc    ebp
  4192b9:	jo     0x4192cf
  4192bb:	dec    edx
  4192bc:	or     ebp,edi
  4192be:	aaa    
  4192bf:	inc    ebx
  4192c0:	call   0xfa481af7
  4192c5:	iret   
  4192c6:	(bad)  
  4192c8:	mov    eax,0xe9b9f636
  4192cd:	fimul  WORD PTR [eax]
  4192cf:	test   dh,0x3
  4192d2:	sbb    al,0x32
  4192d4:	xchg   ebp,eax
  4192d5:	iret   
  4192d6:	and    BYTE PTR [ecx],ah
  4192d8:	shl    BYTE PTR [esi],0x8b
  4192db:	int3   
  4192dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192dd:	test   BYTE PTR [ebx-0x6ba9865d],bl
  4192e3:	inc    ebp
  4192e4:	mov    ebp,0x66b45cb3
  4192e9:	xchg   esp,eax
  4192ea:	in     eax,0x95
  4192ec:	sub    DWORD PTR [ecx+0x57],ebp
  4192ef:	mov    cl,0xe0
  4192f1:	ss inc ebp
  4192f3:	sbb    BYTE PTR [ebp+0x1f],dh
  4192f6:	ror    DWORD PTR [esi+0x35],cl
  4192f9:	lods   al,BYTE PTR ds:[esi]
  4192fa:	ficomp DWORD PTR [ebx-0x2e335601]
  419300:	rol    esi,1
  419302:	pushf  
  419303:	pop    esp
  419304:	xor    ebx,DWORD PTR [ebx]
  419306:	dec    ebp
  419307:	add    DWORD PTR [ebx+0x158f0c73],0x219bce3a
  419311:	scas   eax,DWORD PTR es:[edi]
  419312:	aaa    
  419313:	mov    eax,0xcb7eeee3
  419318:	mov    dh,0xd9
  41931a:	add    DWORD PTR [ecx],edx
  41931c:	fsub   QWORD PTR [edi+0x4c]
  41931f:	xchg   esi,eax
  419320:	sbb    BYTE PTR [eax+esi*4-0x5838165d],dl
  419327:	shr    DWORD PTR [eax+0x58e00f21],1
  41932d:	mov    esp,ss
  41932f:	leave  
  419330:	mov    bl,0x55
  419332:	inc    esp
  419333:	xor    ah,ch
  419335:	xchg   edi,eax
  419336:	jbe    0x41933e
  419338:	retf   
  419339:	sub    DWORD PTR [eax-0x44],ebx
  41933c:	sbb    DWORD PTR [esp+ebx*1+0x47be76c4],0xc006f3f0
  419347:	jb     0x4193bb
  419349:	xchg   ebx,eax
  41934a:	je     0x4193c7
  41934c:	push   edi
  41934d:	and    DWORD PTR [edi+0x68],esp
  419350:	out    0x46,al
  419352:	mov    al,ds:0x1eacd6c7
  419357:	jbe    0x41933d
  419359:	push   eax
  41935a:	arpl   WORD PTR [eax-0x68],di
  41935d:	int    0x94
  41935f:	je     0x4192ea
  419361:	(bad)  
  419362:	cmp    DWORD PTR [esi-0x1f8f130a],ebx
  419368:	rcl    DWORD PTR ds:0x5eeed38,1
  41936e:	neg    BYTE PTR [ecx+0x13b649e9]
  419374:	icebp  
  419375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419376:	arpl   cx,dx
  419378:	int3   
  419379:	das    
  41937a:	aaa    
  41937b:	mov    edx,ss
  41937d:	call   0xde87f9f0
  419382:	mov    ebx,0x697801c4
  419387:	mov    WORD PTR [ebp-0x292a389e],gs
  41938d:	pop    ebx
  41938e:	xchg   ebx,eax
  41938f:	dec    ebp
  419390:	(bad)  
  419391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419392:	xor    ebx,DWORD PTR [ebx-0x1]
  419395:	xlat   BYTE PTR ds:[ebx]
  419396:	aad    0xcd
  419398:	iret   
  419399:	sbb    ebx,DWORD PTR [ecx+edi*1]
  41939c:	push   esi
  41939d:	(bad)  
  41939e:	jge    0x41935e
  4193a0:	adc    BYTE PTR [ecx+0x78],ch
  4193a3:	sahf   
  4193a4:	(bad)  
  4193a5:	mov    dl,0xd6
  4193a7:	leave  
  4193a8:	cmp    DWORD PTR [ebx+eax*1+0x27],ebx
  4193ac:	popf   
  4193ad:	pop    eax
  4193ae:	xlat   BYTE PTR fs:[ebx]
  4193b0:	(bad)  
  4193b2:	and    al,0xfb
  4193b5:	out    dx,al
  4193b6:	and    BYTE PTR [ecx+0x208f02],ah
  4193bc:	ss jmp 0xe8b0ab08
  4193c2:	and    dl,ch
  4193c4:	fimul  WORD PTR [ecx+0x3c]
  4193c7:	mov    bh,0xde
  4193c9:	out    0xc2,eax
  4193cb:	inc    eax
  4193cc:	jne    0x41941f
  4193ce:	and    al,0x2a
  4193d0:	mov    ds:0x111afb89,eax
  4193d5:	or     eax,DWORD PTR [esi+edx*2-0x75a0d308]
  4193dc:	jmp    0x4193fb
  4193de:	push   ebp
  4193df:	xor    bl,BYTE PTR [ecx]
  4193e1:	sahf   
  4193e2:	(bad)  
  4193e3:	add    esp,DWORD PTR [edi+0x6eeeaf91]
  4193e9:	hlt    
  4193ea:	push   0x4b26f505
  4193ef:	push   ss
  4193f0:	(bad)  [edi]
  4193f2:	iret   
  4193f3:	sti    
  4193f4:	neg    BYTE PTR [eax-0x73]
  4193f7:	sub    eax,0xc0a25c08
  4193fc:	mov    esp,ebx
  4193fe:	cmp    ecx,ecx
  419400:	call   0x50dd:0x5c291479
  419407:	inc    eax
  419408:	push   esi
  419409:	(bad)  
  41940b:	adc    al,0x25
  41940d:	add    eax,0x3533c5c4
  419412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419413:	rcl    edx,1
  419415:	aad    0xa
  419417:	jb     0x4193a2
  419419:	cwde   
  41941a:	mov    dh,0xd4
  41941c:	xor    BYTE PTR gs:[ebx],dh
  41941f:	and    dl,BYTE PTR [esi+eax*1]
  419422:	or     al,0x8c
  419424:	pushf  
  419425:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  419427:	std    
  419428:	out    0xd9,al
  41942a:	(bad)  
  41942b:	sbb    ah,BYTE PTR [ebp+eiz*8+0x52]
  41942f:	aas    
  419430:	in     eax,0x39
  419432:	jno    0x4193cd
  419434:	fld    TBYTE PTR [ebx-0x2e]
  419437:	arpl   WORD PTR [edx],bp
  419439:	push   0x347c6db3
  41943e:	pop    esp
  41943f:	pop    es
  419440:	lahf   
  419441:	fld    QWORD PTR [esi-0x7266107e]
  419447:	jmp    DWORD PTR [eax-0x7da949ae]
  41944d:	inc    ecx
  41944e:	adc    BYTE PTR [ebx],dl
  419450:	stos   BYTE PTR es:[edi],al
  419451:	aaa    
  419452:	jg     0x419403
  419454:	mov    ecx,0x4e886145
  419459:	ins    DWORD PTR es:[edi],dx
  41945a:	and    ax,0x948e
  41945e:	or     DWORD PTR [edx-0x34fdce09],0x98fd1e1e
  419468:	xor    edi,ecx
  41946a:	cmp    eax,0xc4144d8c
  41946f:	xchg   edx,eax
  419470:	cwde   
  419471:	(bad)  
  419472:	adc    DWORD PTR [ebx],ecx
  419474:	mov    ds:0x7f07c15e,eax
  419479:	cld    
  41947a:	cmp    eax,0x3502e449
  41947f:	mov    ds:0x665bf421,al
  419484:	pop    esp
  419485:	jae    0x419482
  419487:	pop    esi
  419488:	fwait
  419489:	jo     0x419444
  41948b:	adc    al,0x1a
  41948d:	inc    edx
  41948e:	mov    DWORD PTR [edx+0x491bfae],eax
  419494:	and    cl,BYTE PTR fs:[esp+edi*4-0x79]
  419499:	lahf   
  41949a:	dec    ebx
  41949b:	cdq    
  41949c:	dec    esp
  41949d:	stos   BYTE PTR es:[edi],al
  41949e:	push   es
  41949f:	xchg   DWORD PTR [edx-0x2d],ebp
  4194a2:	xchg   esp,eax
  4194a3:	push   ebx
  4194a4:	inc    edx
  4194a5:	fst    DWORD PTR [ebp+0x59]
  4194a8:	push   ebx
  4194a9:	xchg   DWORD PTR [ebx],eax
  4194ab:	and    BYTE PTR [eax+0x7b5ea259],bl
  4194b1:	lea    ebp,[esi]
  4194b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194b5:	sub    BYTE PTR [ebx],dh
  4194b7:	scas   al,BYTE PTR es:[edi]
  4194b8:	lock shl DWORD PTR [esi-0x7f51e345],cl
  4194bf:	dec    DWORD PTR [ebx-0x54]
  4194c2:	and    al,0x18
  4194c4:	call   0xaf39:0x97db6dca
  4194cb:	icebp  
  4194cc:	icebp  
  4194cd:	(bad)  
  4194ce:	out    0x1b,eax
  4194d0:	adc    eax,ebp
  4194d2:	out    dx,al
  4194d3:	es xchg edi,eax
  4194d5:	mov    ?,WORD PTR [ebx-0x35]
  4194d8:	cmp    ch,BYTE PTR [eax+0x2d]
  4194db:	cmc    
  4194dc:	add    dh,cl
  4194de:	mov    ds:0xaeaf24cc,eax
  4194e3:	add    esi,DWORD PTR [edx+0x6af5e3fb]
  4194e9:	xchg   ebp,eax
  4194ea:	add    DWORD PTR [eax+edx*8-0xc],eax
  4194ee:	mov    ecx,0x21b81425
  4194f3:	cld    
  4194f4:	xor    al,0x91
  4194f6:	add    bh,BYTE PTR [edi-0x64d8fd35]
  4194fc:	ret    0xd38a
  4194ff:	mov    ds:0xe92f277f,eax
  419504:	xlat   BYTE PTR ds:[ebx]
  419505:	enter  0x4b04,0xdc
  419509:	(bad)  
  41950b:	aam    0xf
  41950d:	aad    0xb1
  41950f:	int3   
  419510:	je     0x419575
  419512:	jg     0x419572
  419514:	sbb    BYTE PTR [ebx-0x4147b033],dh
  41951a:	mov    edx,esi
  41951c:	xchg   ebp,eax
  41951d:	(bad)  
  41951e:	cdq    
  41951f:	pop    ecx
  419520:	int    0xb2
  419522:	xor    edx,DWORD PTR [ebx-0x38]
  419525:	imul   ecx,DWORD PTR [edx],0x4c
  419528:	inc    ebx
  419529:	sbb    bl,BYTE PTR [edx+0x39]
  41952c:	(bad)  
  41952d:	push   ebp
  41952e:	pop    edi
  41952f:	stc    
  419530:	stc    
  419531:	pop    esp
  419532:	gs je  0x41951a
  419535:	or     al,0x4b
  419537:	sub    esi,DWORD PTR [edi+0x63c8ef37]
  41953d:	pushf  
  41953e:	xor    al,BYTE PTR [ecx+0x3f5bc8c]
  419544:	imul   esp,DWORD PTR [esp-0x1d7d618f],0xca3cd89b
  41954f:	lods   eax,DWORD PTR ds:[esi]
  419550:	fwait
  419551:	lds    esi,FWORD PTR [ebx+ebp*8-0x15775892]
  419558:	or     dh,dl
  41955a:	cmc    
  41955b:	in     al,dx
  41955c:	sti    
  41955d:	xor    ah,ch
  41955f:	or     BYTE PTR [ebx+ecx*8+0x37d075e0],ch
  419566:	rol    DWORD PTR [edx-0x46],1
  419569:	loope  0x419528
  41956b:	sar    DWORD PTR [edx+0x2f],0x8e
  41956f:	test   DWORD PTR [esi+0x3c],ecx
  419572:	aas    
  419573:	stos   BYTE PTR es:[edi],al
  419574:	or     ah,cl
  419576:	jnp    0x4195c7
  419578:	add    DWORD PTR [edi],ebx
  41957a:	push   ebx
  41957b:	into   
  41957c:	and    edi,ebx
  41957e:	leave  
  41957f:	enter  0xca9d,0xf1
  419583:	jecxz  0x419532
  419585:	mov    ebx,0x5adeeeda
  41958a:	shl    eax,0xf9
  41958d:	mov    esi,0xd8514036
  419592:	imul   edi,DWORD PTR [edi+0x37],0x1ce828a9
  419599:	mov    ds,ebp
  41959b:	xchg   esp,eax
  41959c:	lahf   
  41959d:	retf   
  41959e:	cmp    al,0xa7
  4195a0:	fucom  st(6)
  4195a2:	push   edi
  4195a3:	jmp    0xb08d429
  4195a8:	(bad)  
  4195aa:	xlat   BYTE PTR ds:[ebx]
  4195ab:	adc    ebx,DWORD PTR [eax-0x35]
  4195ae:	aaa    
  4195af:	pop    edx
  4195b0:	push   es
  4195b1:	xor    eax,DWORD PTR [ebx+ebp*1+0x71ccc3f0]
  4195b8:	mov    bl,0x6
  4195ba:	inc    edi
  4195bb:	rcl    BYTE PTR [edx+0x26f35322],cl
  4195c1:	stc    
  4195c2:	(bad)  
  4195c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195c4:	dec    edi
  4195c5:	inc    esi
  4195c6:	inc    ecx
  4195c7:	and    BYTE PTR [edx-0x2fc204e2],ah
  4195cd:	cdq    
  4195ce:	(bad)  
  4195cf:	xor    BYTE PTR [ebx],dh
  4195d1:	lock jg 0x4195ad
  4195d4:	jo     0x4195b9
  4195d6:	jae    0x4195f6
  4195d8:	cs mov al,0x9a
  4195db:	fwait
  4195dc:	iret   
  4195dd:	mov    esp,0xf03cbe67
  4195e2:	into   
  4195e3:	iret   
  4195e4:	inc    esp
  4195e5:	jnp    0x419583
  4195e7:	aam    0x62
  4195e9:	sbb    ch,BYTE PTR [ebx-0x29051649]
  4195ef:	pop    ebx
  4195f0:	(bad)  
  4195f1:	cmp    ah,BYTE PTR [ecx-0x6d]
  4195f4:	xchg   edx,eax
  4195f5:	jo     0x419617
  4195f7:	dec    eax
  4195f8:	mov    al,0xff
  4195fa:	mov    esi,0x51b49c72
  4195ff:	pop    edx
  419600:	adc    al,0x6c
  419602:	jne    0x419605
  419604:	cwde   
  419605:	lock or eax,0x94ea13e3
  41960c:	out    dx,eax
  41960d:	jmp    0x4195b5
  41960f:	call   0x21e28a56
  419614:	outs   dx,BYTE PTR ds:[esi]
  419615:	sub    esi,DWORD PTR [edi]
  419617:	mov    bl,0xd9
  419619:	inc    DWORD PTR [edx+0xe2e52d3]
  41961f:	and    al,0x35
  419621:	inc    ecx
  419622:	pop    ss
  419623:	(bad)  
  419624:	cli    
  419625:	daa    
  419626:	cmp    al,0x12
  419628:	adc    edx,DWORD PTR [esp+edi*8-0x38ed5723]
  41962f:	lods   eax,DWORD PTR es:[esi]
  419631:	jle    0x4195c3
  419633:	or     al,0x41
  419635:	push   esp
  419636:	fisttp DWORD PTR [ebx+0x43]
  419639:	or     bl,BYTE PTR [edx+0x4aff4f8]
  41963f:	cdq    
  419640:	sbb    al,0xe1
  419642:	mov    edi,0xc6c0000c
  419647:	neg    DWORD PTR [edi+edx*2+0x37fde642]
  41964e:	int    0x92
  419650:	push   ecx
  419651:	lods   eax,DWORD PTR ds:[esi]
  419652:	sbb    al,BYTE PTR [esi]
  419654:	inc    edi
  419655:	jg     0x4196c4
  419657:	xchg   ecx,eax
  419658:	inc    ebp
  419659:	test   eax,0x146e94b2
  41965e:	sub    al,al
  419660:	cdq    
  419661:	mov    DWORD PTR [ebx+ecx*8-0x47caf612],ebx
  419668:	dec    edi
  419669:	into   
  41966a:	adc    eax,eax
  41966c:	test   BYTE PTR ds:0x232b9690,al
  419672:	iret   
  419673:	retf   0xbf2f
  419676:	mov    DWORD PTR [ebp+0x5],ebx
  419679:	mov    edx,0x30cd8be4
  41967e:	leave  
  41967f:	mov    bl,bh
  419681:	pusha  
  419682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419683:	pop    es
  419684:	push   ds
  419685:	leave  
  419686:	dec    ebx
  419687:	ins    DWORD PTR es:[edi],dx
  419688:	cmc    
  419689:	xchg   esi,eax
  41968a:	and    DWORD PTR [ebx+0x12],edx
  41968d:	inc    edi
  41968e:	pop    es
  41968f:	in     al,dx
  419690:	xchg   DWORD PTR [edi],edi
  419692:	hlt    
  419693:	inc    ebp
  419694:	and    al,0x72
  419696:	(bad)  fs:[esi]
  419699:	mov    dl,0xa4
  41969b:	adc    dl,BYTE PTR [edi]
  41969d:	push   ss
  41969e:	test   DWORD PTR [eax],ebp
  4196a0:	pop    eax
  4196a1:	sbb    al,0x17
  4196a3:	mov    edx,0x8ebc1643
  4196a8:	aad    0x46
  4196aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196ab:	mov    BYTE PTR ds:0xd86c6939,ch
  4196b1:	aas    
  4196b2:	(bad)  
  4196b4:	pop    edx
  4196b5:	scas   eax,DWORD PTR es:[edi]
  4196b6:	xchg   edx,eax
  4196b7:	jb     0x4196b3
  4196b9:	jne    0x4196fa
  4196bb:	mov    ebx,0xfef33a6a
  4196c0:	test   DWORD PTR [edi-0x63],ebp
  4196c3:	mov    bl,0xec
  4196c5:	sbb    DWORD PTR [edx*4+0x7da3d69e],0xc53faec9
  4196d0:	fdivr  st(3),st
  4196d2:	repz mov esi,0xc8ebe69a
  4196d8:	push   esi
  4196d9:	mov    WORD PTR [esi-0x33dd0dbb],ss
  4196df:	push   ss
  4196e0:	sbb    DWORD PTR [edi+0x4],esp
  4196e3:	adc    ah,al
  4196e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196e6:	pop    ss
  4196e7:	mov    dh,0x3f
  4196e9:	(bad)  
  4196ea:	mov    eax,0xd05f3852
  4196ef:	mov    dh,0x3b
  4196f1:	or     eax,DWORD PTR [edi-0x7b]
  4196f4:	sbb    eax,0x64f0ae09
  4196f9:	pop    es
  4196fa:	repnz fsubr QWORD PTR [ecx-0x524a76d]
  419701:	aad    0xff
  419703:	jbe    0x41977e
  419705:	mov    bl,0xa3
  419707:	(bad)  
  419708:	fadd   QWORD PTR [edi+ebp*8+0x6adcdaf6]
  41970f:	rcr    ebp,0xf0
  419712:	jnp    0x4196cf
  419714:	fadd   QWORD PTR [ecx-0x33566020]
  41971a:	aad    0x3
  41971c:	test   al,0x43
  41971e:	mov    esi,0x8913c34e
  419723:	jl     0x4196f2
  419725:	ds loop 0x41972a
  419728:	div    BYTE PTR ss:[ebp+0x611187ff]
  41972f:	add    esp,esp
  419731:	comiss xmm2,DWORD PTR [edi-0x439d2318]
  419738:	les    ecx,FWORD PTR [esi-0x61]
  41973b:	lods   eax,DWORD PTR ds:[esi]
  41973c:	nop
  41973d:	sbb    BYTE PTR [eax-0x73a99e7d],cl
  419743:	sbb    eax,0x27a666b3
  419748:	es sbb edx,0x8e4bb073
  41974f:	int3   
  419750:	mov    ah,0x99
  419752:	pop    ebp
  419753:	xor    DWORD PTR [esi+0x60],ebx
  419756:	aam    0x70
  419758:	retf   
  419759:	rol    DWORD PTR [ecx],0x80
  41975c:	ret    
  41975d:	scas   eax,DWORD PTR es:[edi]
  41975e:	mov    ebx,0xbdf03c34
  419763:	mov    DWORD PTR ds:0x426abc1f,esi
  419769:	xchg   edi,eax
  41976a:	stos   DWORD PTR es:[edi],eax
  41976b:	fsubp  st(0),st
  41976d:	xchg   ebp,eax
  41976e:	mov    ch,ch
  419770:	xor    BYTE PTR [ecx+0x4078df2d],bl
  419776:	shr    al,cl
  419778:	cmp    DWORD PTR [edx+0x4275cf82],edi
  41977e:	out    0x82,eax
  419780:	xchg   edi,eax
  419781:	fisttp DWORD PTR [ebp+0x1889395f]
  419787:	mov    eax,0x1be72acc
  41978c:	stc    
  41978d:	call   0xa9b993a0
  419792:	int3   
  419793:	(bad)  
  419795:	or     eax,0x2129fc05
  41979a:	add    dl,BYTE PTR [edi-0xe]
  41979d:	sbb    eax,0x823b8059
  4197a2:	popf   
  4197a3:	and    eax,0x2c8a737b
  4197a8:	push   ebx
  4197a9:	cmp    al,0x1c
  4197ab:	mov    ebp,0x7297d8ed
  4197b1:	xchg   ecx,eax
  4197b2:	and    al,0x93
  4197b4:	out    dx,eax
  4197b5:	mov    eax,0x5a156280
  4197bb:	shr    BYTE PTR [edi+0x5b],cl
  4197be:	jmp    0x419790
  4197c0:	lods   al,BYTE PTR ds:[esi]
  4197c1:	push   ecx
  4197c2:	mov    cl,0xd6
  4197c4:	cli    
  4197c5:	neg    BYTE PTR [edx+0x5e60d9df]
  4197cb:	shl    al,cl
  4197cd:	or     eax,0x883927b1
  4197d2:	xor    eax,DWORD PTR [eax-0x54]
  4197d5:	push   esp
  4197d6:	call   0x87bf:0xd08dd811
  4197dd:	call   0xe6a6d232
  4197e2:	adc    eax,0x490f4d61
  4197e7:	imul   eax,esi,0xffffff98
  4197ea:	aaa    
  4197eb:	shr    DWORD PTR [edi+0x1d],cl
  4197ee:	xchg   DWORD PTR [eax+eiz*8+0x2],esp
  4197f2:	jmp    0xd2509da0
  4197f7:	ror    BYTE PTR [ecx+0x56],0xbb
  4197fb:	out    0x90,al
  4197fd:	jge    0x4197f3
  4197ff:	push   ebp
  419800:	mov    edx,0xffc73ed3
  419805:	mov    al,0xb1
  419807:	jne    0x419857
  419809:	idiv   ebx
  41980b:	mov    ecx,0x55e5dd26
  419810:	mov    bl,0x12
  419812:	sub    DWORD PTR [esi],ebp
  419814:	sub    eax,0x19628986
  419819:	add    BYTE PTR [esi+0x2aafe993],cl
  41981f:	ret    
  419820:	pop    es
  419821:	or     esp,DWORD PTR [esp+eax*1]
  419824:	lods   al,BYTE PTR ds:[esi]
  419825:	out    0x58,al
  419827:	stos   BYTE PTR es:[edi],al
  419828:	mov    ebp,0xa7108f50
  41982d:	into   
  41982e:	dec    ebx
  41982f:	sbb    DWORD PTR [edx-0x58],ebp
  419832:	mov    edi,DWORD PTR [edi]
  419834:	ds shl bh,cl
  419837:	retf   
  419838:	mul    cl
  41983a:	jbe    0x419843
  41983c:	xor    edi,DWORD PTR [edx+0x31fbedd7]
  419842:	hlt    
  419843:	test   BYTE PTR [eax-0x4d],0x68
  419847:	cmp    BYTE PTR [edx],dl
  419849:	adc    ebp,DWORD PTR [ecx-0x7273bcd1]
  41984f:	aaa    
  419850:	aaa    
  419851:	ds scas eax,DWORD PTR es:[edi]
  419853:	push   edi
  419854:	mov    bl,0x41
  419856:	gs in  al,dx
  419858:	popa   
  419859:	hlt    
  41985a:	(bad)  
  41985b:	pop    esi
  41985c:	repz inc esp
  41985e:	rdpmc  
  419860:	aam    0x2f
  419862:	fwait
  419863:	xchg   ebx,eax
  419864:	cwde   
  419865:	inc    edx
  419866:	push   0xea7c74f5
  41986b:	popw   ss
  41986d:	adc    BYTE PTR [edi],0x78
  419870:	ret    
  419871:	jmp    0x41984b
  419873:	(bad)  
  419876:	sbb    esp,DWORD PTR ds:0xdedb3279
  41987c:	call   0xe8f2:0xa5603ee
  419883:	and    eax,0x3fb22940
  419888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419889:	dec    ebx
  41988a:	inc    edi
  41988b:	adc    al,0x24
  41988d:	fild   QWORD PTR [edx+ebp*2]
  419890:	mov    al,ds:0x5cdedce9
  419895:	ja     0x4198e9
  419897:	inc    ecx
  419898:	mov    bl,0x1b
  41989a:	push   0xd9a579d2
  41989f:	adc    BYTE PTR [ecx-0x4a],0xe3
  4198a3:	inc    ebp
  4198a4:	sub    DWORD PTR [ecx],ecx
  4198a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198a7:	or     DWORD PTR [ecx*8+0x797cf2a5],0xffffffea
  4198af:	pusha  
  4198b0:	ss cmp bh,bh
  4198b3:	ret    0xfabf
  4198b6:	fimul  DWORD PTR [ecx+0x37]
  4198b9:	inc    esi
  4198ba:	and    esp,esp
  4198bc:	fisub  DWORD PTR [ebp-0x4a9f5f75]
  4198c2:	jecxz  0x419882
  4198c4:	scas   al,BYTE PTR es:[edi]
  4198c5:	addr16 mov ds:0x3d3e,eax
  4198c9:	retf   
  4198ca:	aam    0xa8
  4198cc:	fiadd  DWORD PTR [edi+0x317b1c90]
  4198d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d3:	stos   DWORD PTR es:[edi],eax
  4198d4:	pop    esi
  4198d5:	push   eax
  4198d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198d7:	pushf  
  4198d8:	aas    
  4198d9:	arpl   ax,sp
  4198db:	pushf  
  4198dc:	std    
  4198dd:	fild   QWORD PTR [edx]
  4198df:	jmp    0x419942
  4198e1:	cmp    bh,ah
  4198e3:	out    0xf9,al
  4198e5:	mov    edx,0x8915dec
  4198ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198eb:	mov    ds:0xcb596753,al
  4198f0:	xchg   ecx,eax
  4198f1:	push   0x215368af
  4198f6:	pushf  
  4198f7:	xor    al,0x98
  4198f9:	inc    ebx
  4198fa:	ja     0x419889
  4198fc:	mov    DWORD PTR [eax-0xa],ebx
  4198ff:	lea    edi,[edx]
  419901:	or     eax,0x27ef50b1
  419906:	sub    al,0xb8
  419908:	outs   dx,BYTE PTR ds:[esi]
  419909:	repnz xchg esi,eax
  41990b:	ret    0xb17c
  41990e:	in     eax,0x47
  419910:	int3   
  419911:	jle    0x41998d
  419913:	push   WORD PTR [edx+0x40cc3d9b]
  41991a:	sub    ah,BYTE PTR [ecx-0x1f064090]
  419920:	and    DWORD PTR [ebx+edx*2+0x6714b6fd],eax
  419927:	pop    edx
  419928:	imul   edi,esp,0xfc2bf2d3
  41992e:	xor    bh,bl
  419930:	ret    0xd10b
  419933:	pop    edi
  419934:	inc    edi
  419935:	xor    BYTE PTR ds:0xf36c693c,ah
  41993b:	stc    
  41993c:	or     bh,BYTE PTR [ecx-0x6f8229d6]
  419942:	xchg   edx,eax
  419943:	inc    eax
  419944:	pop    esi
  419945:	push   es
  419946:	pusha  
  419947:	dec    ecx
  419948:	lds    esp,FWORD PTR [ecx+0x36e8bcde]
  41994e:	inc    edx
  41994f:	(bad)  
  419950:	or     eax,0xbefc8290
  419955:	xor    esp,DWORD PTR [esi]
  419957:	push   ecx
  419958:	out    0xb3,eax
  41995a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41995b:	xor    al,BYTE PTR [esi+0x6dfb8540]
  419961:	sbb    DWORD PTR ds:0xb6a28a5,edx
  419967:	add    esi,DWORD PTR ss:[ebp-0x14]
  41996b:	test   eax,0xb66cb4d0
  419970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419971:	dec    ecx
  419972:	cdq    
  419973:	push   esp
  419974:	sti    
  419975:	fdivp  st(0),st
  419977:	cmp    DWORD PTR [edx],0xffffffa4
  41997a:	xor    ch,al
  41997c:	repnz aas 
  41997e:	std    
  41997f:	fcmovb st,st(7)
  419981:	and    al,0x54
  419983:	mov    esi,0x95465b33
  419988:	aad    0x19
  41998a:	jbe    0x419935
  41998c:	inc    DWORD PTR [ecx+edi*8+0x5d]
  419990:	cmp    ch,dh
  419992:	daa    
  419993:	xchg   ebp,eax
  419994:	cwde   
  419995:	sub    BYTE PTR [ebx+0x11],0x79
  419999:	pop    edx
  41999a:	(bad)  
  41999b:	and    esi,esp
  41999d:	mov    eax,DWORD PTR [eax]
  41999f:	add    BYTE PTR [eax],al
  4199a1:	add    BYTE PTR [eax],al
  4199a3:	add    BYTE PTR [eax],al
  4199a5:	add    BYTE PTR [edx+0xc],ch
  4199a8:	lea    ebx,[eax-0x1806611]
  4199ae:	into   
  4199af:	out    dx,al
  4199b0:	popf   
  4199b1:	adc    edx,DWORD PTR [ebx+ebp*1]
  4199b4:	stos   BYTE PTR es:[edi],al
  4199b5:	pop    es
  4199b6:	jnp    0x41994b
  4199b8:	add    DWORD PTR [eax],eax
  4199ba:	and    BYTE PTR [edi],al
  4199bc:	add    BYTE PTR [eax],al
  4199be:	(bad)  
  4199bf:	cwde   
  4199c0:	pop    es
  4199c1:	(bad)  
  4199c2:	retf   
  4199c3:	adc    ch,BYTE PTR [edx-0x44]
  4199c6:	cmp    eax,0xa9b72f71
  4199cb:	push   cs
  4199cc:	mov    al,0xbe
  4199ce:	pop    ebx
  4199cf:	push   edi
  4199d0:	lahf   
  4199d1:	test   DWORD PTR [edi+0x53d4ecf4],ebp
  4199d7:	lods   eax,DWORD PTR ds:[esi]
  4199d8:	fwait
  4199d9:	cmp    eax,0xb1dc24dd
  4199de:	mov    ebx,0xb784649f
  4199e3:	and    BYTE PTR [ebx],al
  4199e5:	jg     0x419981
  4199e7:	jne    0x4199af
  4199e9:	adc    eax,0xffffffdc
  4199ec:	fsub   st(6),st
  4199ee:	add    DWORD PTR [eax+0x2738a923],ebx
  4199f4:	enter  0xab51,0x98
  4199f8:	loope  0x419a28
  4199fa:	stos   DWORD PTR es:[edi],eax
  4199fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199fc:	gs into 
  4199fe:	mov    ebx,0xba85d6f1
  419a03:	scas   eax,DWORD PTR es:[edi]
  419a04:	mov    ebx,esp
  419a06:	push   ds
  419a07:	stos   BYTE PTR es:[edi],al
  419a08:	bound  eax,QWORD PTR [edx]
  419a0a:	dec    edx
  419a0b:	pop    ebx
  419a0c:	cmp    al,0xb7
  419a0e:	shr    BYTE PTR [edx+eiz*1],0xc8
  419a12:	sbb    DWORD PTR [esi],ebp
  419a14:	jl     0x419998
  419a16:	add    ah,al
  419a18:	jae    0x419a37
  419a1a:	lods   eax,DWORD PTR ds:[esi]
  419a1b:	les    edi,FWORD PTR [esi]
  419a1d:	inc    edx
  419a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a1f:	rol    BYTE PTR [edi+0xa],0xab
  419a23:	cmp    esp,DWORD PTR [ebx+0xf4f0908]
  419a29:	outs   dx,BYTE PTR ds:[esi]
  419a2a:	pushf  
  419a2b:	cld    
  419a2c:	adc    bl,BYTE PTR [edx+eax*8+0x3d]
  419a30:	js     0x419a36
  419a32:	push   esi
  419a33:	aaa    
  419a34:	pop    ecx
  419a35:	les    esi,FWORD PTR [edi]
  419a37:	mov    edi,0x5109c97c
  419a3c:	daa    
  419a3d:	push   esp
  419a3e:	dec    ecx
  419a3f:	xchg   edx,eax
  419a40:	shl    DWORD PTR [ebp+0x5b41934e],cl
  419a46:	scas   al,BYTE PTR es:[edi]
  419a47:	test   al,0xf
  419a49:	mov    ds:0xfc445fd6,eax
  419a4e:	sbb    BYTE PTR [edx],dl
  419a50:	jns    0x419ab6
  419a52:	imul   ebp,DWORD PTR [ecx],0x3b299d26
  419a58:	int    0x9a
  419a5a:	adc    DWORD PTR [esi+0x2f],esp
  419a5d:	stos   DWORD PTR es:[edi],eax
  419a5e:	sti    
  419a5f:	frstor [edx-0x48103345]
  419a65:	shl    BYTE PTR [esi*8+0x22f5eae1],1
  419a6c:	xchg   ebp,eax
  419a6d:	mov    ebx,0x2933ba01
  419a72:	jnp    0x419a6a
  419a74:	push   cs
  419a75:	adc    BYTE PTR [esi+ebp*8],bl
  419a78:	imul   BYTE PTR [esi+0x35]
  419a7b:	xor    BYTE PTR [ecx+0x7],dh
  419a7e:	jle    0x419a7a
  419a80:	mov    ch,0x4f
  419a82:	dec    esi
  419a83:	fnstsw WORD PTR [ecx+0x26]
  419a86:	mov    BYTE PTR [edi-0x2c],dl
  419a89:	das    
  419a8a:	and    al,0x86
  419a8c:	push   ss
  419a8d:	lods   eax,DWORD PTR ds:[esi]
  419a8e:	in     eax,dx
  419a8f:	out    dx,eax
  419a90:	ss retf 
  419a92:	mov    cl,0xc7
  419a94:	adc    eax,0x2b5f26cd
  419a99:	mov    ebx,0x5d3fc324
  419a9e:	push   es
  419a9f:	adc    eax,0x5d6b0b51
  419aa4:	ror    DWORD PTR [edi+0x23c22063],0x0
  419aab:	jno    0x419a2f
  419aad:	jge    0x419a8c
  419aaf:	xchg   edi,eax
  419ab0:	hlt    
  419ab1:	pop    ss
  419ab2:	mov    WORD PTR [ecx+edx*8-0x46ec92fc],fs
  419ab9:	fadd   QWORD PTR [ecx-0x775e73ec]
  419abf:	enter  0xa4e2,0xf2
  419ac3:	loop   0x419b34
  419ac5:	outs   dx,DWORD PTR ds:[esi]
  419ac6:	adc    DWORD PTR [ebp+eiz*8+0x5c],esp
  419aca:	mov    ch,0x85
  419acc:	inc    esp
  419acd:	cmp    DWORD PTR [ecx-0x1a],ecx
  419ad0:	scas   al,BYTE PTR es:[edi]
  419ad1:	jnp    0x419af0
  419ad3:	dec    ebp
  419ad4:	std    
  419ad5:	xor    DWORD PTR [ecx],edi
  419ad7:	or     al,0x32
  419ad9:	sub    DWORD PTR [eax+0x36],esp
  419adc:	pop    edx
  419add:	and    eax,0x2de03757
  419ae2:	push   0x1e
  419ae4:	ja     0x419b48
  419ae6:	(bad)  
  419ae7:	xchg   ecx,eax
  419ae8:	nop
  419ae9:	push   esp
  419aea:	sti    
  419aeb:	add    DWORD PTR [edx-0x5c],0x64
  419aef:	lods   al,BYTE PTR ds:[esi]
  419af0:	sub    dl,al
  419af2:	jno    0x419ae7
  419af4:	push   ds
  419af5:	aaa    
  419af6:	xchg   esp,eax
  419af7:	add    eax,0x899546f8
  419afc:	inc    DWORD PTR [ebp-0x1a]
  419aff:	fist   DWORD PTR ds:[ebx+0x2dd0c802]
  419b06:	mov    bh,0x85
  419b08:	je     0x419b87
  419b0a:	hlt    
  419b0b:	pop    edx
  419b0c:	push   es
  419b0d:	(bad)  
  419b0e:	pushf  
  419b0f:	lods   eax,DWORD PTR ds:[esi]
  419b10:	retf   0x66fe
  419b13:	xor    DWORD PTR [edi],esp
  419b15:	add    dl,dl
  419b17:	mov    ds:0x2bd97c22,eax
  419b1c:	ins    DWORD PTR es:[edi],dx
  419b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b1e:	xor    eax,ebp
  419b20:	mov    BYTE PTR [ecx-0x36245ab0],ch
  419b26:	test   DWORD PTR [edx],eax
  419b28:	mov    ebx,0x77ea3546
  419b2d:	mov    DWORD PTR [eax],ebx
  419b2f:	dec    esi
  419b30:	pop    edx
  419b31:	(bad)  
  419b32:	cmp    eax,0x7bfb868d
  419b37:	adc    esp,DWORD PTR [eax-0x8]
  419b3a:	retf   0xf927
  419b3d:	or     BYTE PTR [edx-0x48],bl
  419b40:	in     eax,0x44
  419b42:	cli    
  419b43:	jmp    0x2e84:0x1efb
  419b49:	into   
  419b4a:	mov    dh,BYTE PTR [edx]
  419b4c:	lods   eax,DWORD PTR ds:[esi]
  419b4d:	dec    esp
  419b4e:	sbb    al,0xba
  419b50:	add    al,0x44
  419b52:	pop    edi
  419b53:	call   0xc7bb7790
  419b58:	es or  eax,0xf78132b6
  419b5e:	add    edi,DWORD PTR [edx+0x5e2c17d8]
  419b64:	push   edi
  419b65:	adc    DWORD PTR [ebp-0x70a68ab7],0x33
  419b6c:	cdq    
  419b6d:	in     eax,0xb4
  419b6f:	sub    eax,DWORD PTR [edx+0x27]
  419b72:	dec    ebp
  419b73:	in     eax,0x3f
  419b75:	or     BYTE PTR [edx+edx*2-0x16306ed4],cl
  419b7c:	aam    0xe0
  419b7e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b80:	mov    edi,0x8044ca48
  419b85:	cwde   
  419b86:	aad    0x3b
  419b88:	arpl   WORD PTR [eax-0x4873ed5f],di
  419b8e:	fwait
  419b8f:	jl     0x419bcd
  419b91:	mov    bl,0x11
  419b93:	dec    edi
  419b94:	(bad)  
  419b95:	pop    ebp
  419b96:	pop    eax
  419b97:	sub    BYTE PTR [esi-0x3b],cl
  419b9a:	xchg   edx,eax
  419b9b:	jnp    0x419b88
  419b9d:	sbb    al,0x9a
  419b9f:	lea    esi,[edx]
  419ba1:	aam    0xa6
  419ba3:	hlt    
  419ba4:	pop    ebp
  419ba5:	outs   dx,BYTE PTR ds:[esi]
  419ba6:	mov    bl,0x36
  419ba8:	shl    bh,cl
  419baa:	mov    dh,0xf9
  419bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bad:	mov    cl,0x93
  419baf:	idiv   DWORD PTR [edx+0x20273527]
  419bb5:	mov    eax,ds:0xe141af4a
  419bba:	clc    
  419bbb:	inc    ebx
  419bbc:	cmc    
  419bbd:	stc    
  419bbe:	out    dx,al
  419bbf:	xchg   BYTE PTR [edi],ch
  419bc1:	enter  0xb5cb,0x84
  419bc5:	stc    
  419bc6:	pop    esp
  419bc7:	and    eax,0x70dc8866
  419bcc:	xchg   esi,eax
  419bcd:	fidivr DWORD PTR [esi]
  419bcf:	xor    ecx,ebp
  419bd1:	xchg   esp,eax
  419bd2:	and    DWORD PTR [ecx+0x56],edi
  419bd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bd6:	in     eax,0x83
  419bd8:	xor    eax,DWORD PTR [ebx+ecx*1]
  419bdb:	xor    edx,DWORD PTR [ebp+0x799fa695]
  419be1:	add    ebx,esp
  419be3:	test   al,0x1b
  419be5:	and    eax,0x19921924
  419bea:	fisttp WORD PTR [edi]
  419bec:	sahf   
  419bed:	mov    dh,0x50
  419bef:	push   0xd99c26aa
  419bf4:	and    edx,esp
  419bf6:	out    dx,al
  419bf7:	push   esi
  419bf8:	cwde   
  419bf9:	fidivr DWORD PTR [ebp-0x47]
  419bfc:	mov    eax,ds:0x12f41c1b
  419c01:	inc    esp
  419c02:	test   DWORD PTR [ecx-0x1599e1ce],ecx
  419c08:	pushf  
  419c09:	out    dx,al
  419c0a:	xor    eax,0xc9fd0f53
  419c0f:	in     eax,0x27
  419c11:	or     bh,BYTE PTR [esi]
  419c13:	std    
  419c14:	imul   edx,DWORD PTR [ebx-0x10],0xa35678e0
  419c1b:	call   0xb4bc:0x6b679c9e
  419c22:	daa    
  419c23:	lds    eax,FWORD PTR [eax+0x3a]
  419c26:	push   esi
  419c27:	jbe    0x419be7
  419c29:	inc    ebp
  419c2b:	xchg   ecx,eax
  419c2c:	outs   dx,BYTE PTR ds:[esi]
  419c2d:	arpl   WORD PTR [esp+ebp*1],ax
  419c30:	aaa    
  419c31:	pushf  
  419c32:	sub    ebp,DWORD PTR [eax-0x7e82f523]
  419c38:	xor    cl,BYTE PTR [ebx-0x6e0c0e75]
  419c3e:	lahf   
  419c3f:	enter  0x9232,0x18
  419c43:	dec    esp
  419c44:	(bad)  
  419c45:	loop   0x419c1f
  419c47:	loop   0x419be2
  419c49:	pop    es
  419c4a:	dec    esi
  419c4b:	adc    eax,0x7768e92
  419c50:	cs out dx,eax
  419c52:	outs   dx,DWORD PTR ds:[esi]
  419c53:	mov    al,0xf8
  419c55:	sub    BYTE PTR cs:[esi],ah
  419c58:	mov    DWORD PTR [ebp+0x7c],edi
  419c5b:	jb     0x419caf
  419c5d:	inc    ecx
  419c5e:	in     al,0xfe
  419c60:	xor    BYTE PTR [ecx+eiz*1+0x1e],al
  419c64:	idiv   dl
  419c66:	nop
  419c67:	shl    ebp,1
  419c69:	stos   DWORD PTR es:[edi],eax
  419c6a:	and    al,0xc0
  419c6c:	nop
  419c6d:	and    DWORD PTR [ebp-0x41],esi
  419c70:	in     al,0x1c
  419c72:	cld    
  419c73:	ins    BYTE PTR es:[edi],dx
  419c74:	popa   
  419c75:	stc    
  419c76:	mov    al,ds:0x7e774368
  419c7b:	mov    eax,ds:0xf15643ce
  419c80:	sti    
  419c81:	fld    DWORD PTR [edi]
  419c83:	mov    esp,0x88c84a95
  419c88:	xchg   ebx,eax
  419c89:	(bad)  
  419c8b:	xchg   BYTE PTR [ebx-0x45b1c526],dl
  419c91:	mov    al,0xca
  419c93:	jecxz  0x419cef
  419c95:	ret    0x8e2b
  419c98:	outs   dx,BYTE PTR ds:[esi]
  419c99:	mov    eax,ds:0xdb54c137
  419c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c9f:	xlat   BYTE PTR ds:[ebx]
  419ca0:	jge    0x419cbc
  419ca2:	mov    BYTE PTR [ecx+0x5b],ah
  419ca5:	jbe    0x419cc8
  419ca7:	inc    ebp
  419ca8:	sbb    DWORD PTR [edi-0x29165666],edi
  419cae:	fild   QWORD PTR [ebx+ebx*8-0x2207817b]
  419cb5:	imul   BYTE PTR [ebp+0x1e503e0]
  419cbb:	std    
  419cbc:	frstor [eax+edi*2-0x4196788a]
  419cc3:	call   DWORD PTR [edi]
  419cc5:	mov    DWORD PTR [ecx+ebp*2],ebx
  419cc8:	dec    edi
  419cc9:	mov    ecx,0xa5f11174
  419cce:	push   0x111a7eba
  419cd3:	out    0xa4,al
  419cd5:	cmp    dl,BYTE PTR [ecx+0x9]
  419cd8:	retf   
  419cd9:	mov    eax,DWORD PTR [edx+eax*8]
  419cdc:	imul   BYTE PTR [eax+0x0]
  419cdf:	or     cl,cl
  419ce1:	pop    ecx
  419ce2:	das    
  419ce3:	pop    edi
  419ce4:	in     eax,0x69
  419ce6:	mul    BYTE PTR [edx]
  419ce8:	jge    0x419d12
  419cea:	fdiv   DWORD PTR [ebx+0x4e]
  419ced:	inc    ebp
  419cee:	cdq    
  419cef:	daa    
  419cf0:	ret    
  419cf1:	fs jp  0x419c80
  419cf4:	repz cs call 0xd9213bb0
  419cfb:	mov    esp,0xdca6a6ed
  419d00:	jp     0x419ce6
  419d02:	cmp    al,0x6f
  419d04:	mov    dh,0x26
  419d06:	push   0xffffffcd
  419d08:	mov    cl,0x0
  419d0a:	push   cs
  419d0b:	cmp    eax,0x92b4e10a
  419d10:	inc    ecx
  419d11:	std    
  419d12:	cmp    eax,0xc3c7bc0f
  419d17:	xchg   ebp,eax
  419d18:	sbb    al,0x98
  419d1a:	(bad)  
  419d1b:	mov    dh,0x88
  419d1d:	adc    eax,0xa70c09c8
  419d22:	call   0xd6649d62
  419d27:	mov    ch,0xb6
  419d29:	mov    ah,0x8a
  419d2b:	loop   0x419d7c
  419d2d:	xchg   DWORD PTR [esi+0x42],edx
  419d30:	sub    ebx,DWORD PTR [edi]
  419d32:	sar    DWORD PTR [esi],0xad
  419d35:	sub    DWORD PTR [eax-0x3c],esp
  419d38:	cmp    BYTE PTR [edi-0x5d962d08],dl
  419d3e:	mov    cs:0x6e78936c,al
  419d44:	push   ss
  419d45:	iret   
  419d46:	aad    0x17
  419d48:	sbb    cl,BYTE PTR ds:0x6c5eb48
  419d4e:	ror    BYTE PTR [ecx],1
  419d50:	fsubr  st(5),st
  419d52:	leave  
  419d53:	inc    ebp
  419d54:	and    al,0x37
  419d56:	int    0x2d
  419d58:	cmp    eax,0x228b69ba
  419d5d:	push   cs
  419d5e:	cld    
  419d5f:	jle    0x419dae
  419d61:	stos   BYTE PTR es:[edi],al
  419d62:	js     0x419d5e
  419d64:	cmp    ch,dh
  419d66:	sub    BYTE PTR [edi-0x19],dl
  419d69:	in     al,0xd2
  419d6b:	xor    DWORD PTR [ebx],ecx
  419d6d:	xor    cl,BYTE PTR [esi+0x4a]
  419d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d71:	loope  0x419d66
  419d73:	xchg   ebx,eax
  419d74:	bound  eax,QWORD PTR cs:[ebp+0x3f]
  419d78:	jne    0x419df3
  419d7a:	loope  0x419dcb
  419d7c:	imul   ecx,DWORD PTR [ebx],0x4
  419d7f:	out    dx,eax
  419d80:	mov    DWORD PTR [edi-0x19],0x1fff3904
  419d87:	mov    edx,0x87302e5
  419d8c:	mov    edx,0x2380810d
  419d91:	pop    ds
  419d92:	retf   
  419d93:	fnsave ds:0x9ab4fbb7
  419d99:	cli    
  419d9a:	(bad)  
  419d9b:	cmp    esp,edi
  419d9d:	adc    DWORD PTR [ecx+0x75b3be23],ecx
  419da3:	daa    
  419da4:	(bad)  
  419da5:	aas    
  419da6:	mov    dh,dl
  419da8:	sbb    al,BYTE PTR [edx]
  419daa:	dec    edx
  419dab:	mov    esi,0x6ba68fad
  419db0:	push   0xffffffc1
  419db2:	test   eax,0x8ac9b5cc
  419db7:	popf   
  419db8:	sti    
  419db9:	and    al,0x12
  419dbb:	mov    BYTE PTR [ecx+ebp*4],ah
  419dbe:	fnsave [ebp-0x2f]
  419dc1:	or     BYTE PTR [esi-0x38cb7d5f],al
  419dc7:	ins    DWORD PTR es:[edi],dx
  419dc8:	xchg   ebx,eax
  419dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dca:	sbb    ch,ah
  419dcc:	(bad)
  419dd0:	lock cs pop ds
  419dd3:	inc    ebp
  419dd4:	mov    dh,0xbc
  419dd6:	retf   
  419dd7:	pushf  
  419dd8:	rcl    BYTE PTR [ebx+0x9],cl
  419ddb:	push   edx
  419ddc:	xchg   ebx,eax
  419ddd:	ds sub eax,0xe72e688
  419de3:	fwait
  419de4:	mov    al,0xff
  419de6:	push   eax
  419de7:	hlt    
  419de8:	adc    esp,DWORD PTR [edi-0x133b2c6c]
  419dee:	pop    esp
  419def:	cs pop esi
  419df1:	push   edx
  419df2:	adc    al,0xd0
  419df4:	jb     0x419ded
  419df6:	fiadd  DWORD PTR ds:0x25399701
  419dfc:	mov    ebp,0x845d8afb
  419e01:	mov    eax,ds:0xeaa3f624
  419e06:	mov    eax,ss
  419e08:	imul   DWORD PTR [eax-0x3d807e6d]
  419e0e:	or     eax,0x23cbcae9
  419e13:	push   ds
  419e14:	fild   QWORD PTR [edi-0x7c]
  419e17:	mov    edi,0x8698ac31
  419e1c:	push   esi
  419e1d:	or     dh,BYTE PTR [eax]
  419e1f:	mov    edx,0x17db2fbd
  419e24:	sub    eax,0x12b26b9c
  419e29:	jg     0x419e7d
  419e2b:	js     0x419dae
  419e2d:	pop    esp
  419e2e:	dec    ecx
  419e2f:	mov    dl,ah
  419e31:	mov    cl,0xf3
  419e33:	ja     0x419e0b
  419e35:	push   0x37
  419e37:	add    eax,0x6da8336e
  419e3c:	mov    WORD PTR cs:[edx],ds
  419e3f:	inc    eax
  419e40:	clc    
  419e41:	cmp    eax,0x5d59001c
  419e46:	call   0xb1588675
  419e4b:	ja     0x419e18
  419e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e4e:	xchg   ebx,eax
  419e4f:	fild   DWORD PTR [edx]
  419e51:	or     ch,al
  419e53:	cmc    
  419e54:	jae    0x419eb6
  419e56:	test   bh,bl
  419e58:	sti    
  419e59:	es cmp dl,ch
  419e5c:	test   edi,edi
  419e5e:	shl    DWORD PTR [edi-0x6d],1
  419e61:	mov    ecx,es
  419e63:	cmp    ebp,DWORD PTR [ebp-0x3ec767eb]
  419e69:	mov    bh,BYTE PTR [ecx-0x20]
  419e6c:	xor    ecx,ebx
  419e6e:	ror    bh,0xae
  419e71:	ret    
  419e72:	xor    DWORD PTR [ebp+eiz*1+0xaa9e379],ebx
  419e79:	xor    DWORD PTR [edx+eax*4-0x1a],esi
  419e7d:	imul   eax,edi,0xb9404cad
  419e83:	dec    DWORD PTR [edi+eax*1]
  419e86:	push   eax
  419e87:	and    ecx,ebx
  419e89:	cmp    dh,BYTE PTR [edx]
  419e8b:	outs   dx,BYTE PTR ds:[esi]
  419e8c:	test   BYTE PTR [ecx+ebp*4],ah
  419e8f:	sbb    bl,cl
  419e91:	mov    ah,0xb4
  419e93:	cmp    dl,BYTE PTR [eax]
  419e95:	sub    BYTE PTR [edi],0x18
  419e98:	das    
  419e99:	push   edx
  419e9a:	cmp    BYTE PTR [esi],cl
  419e9c:	int    0x3
  419e9e:	push   edi
  419e9f:	mov    BYTE PTR [ecx-0x38774704],cl
  419ea5:	ror    BYTE PTR [esi-0x3a820409],1
  419eab:	mov    dl,0x8e
  419ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eae:	add    al,0xb6
  419eb0:	and    al,0x32
  419eb2:	adc    DWORD PTR [ecx],esp
  419eb4:	stos   DWORD PTR es:[edi],eax
  419eb5:	xor    BYTE PTR [ebx+eiz*2+0x718634dd],bh
  419ebc:	jne    0x419f19
  419ebe:	sub    DWORD PTR [ebx-0x426d0a40],esp
  419ec4:	adc    al,0xfd
  419ec6:	push   ds
  419ec7:	jae    0x419f06
  419ec9:	inc    ebp
  419eca:	inc    edi
  419ecb:	adc    bh,BYTE PTR [esi-0x270d1757]
  419ed1:	cmp    BYTE PTR [edx-0x28e86cc3],cl
  419ed7:	mov    edi,0x93f8323d
  419edc:	mov    DWORD PTR [ecx+0x7d0c8f9a],esp
  419ee2:	repz mov cl,BYTE PTR [ecx]
  419ee5:	shl    DWORD PTR [esi-0x1f17734d],0x5e
  419eec:	adc    BYTE PTR [edi+esi*4-0x72],bl
  419ef0:	jg     0x419ea6
  419ef2:	in     eax,0xac
  419ef4:	xor    al,0x14
  419ef6:	sbb    al,0x60
  419ef8:	loop   0x419f0c
  419efa:	imul   eax,DWORD PTR [ebx+edx*8+0x71],0xaadcb460
  419f02:	rcl    dl,1
  419f04:	fiadd  DWORD PTR [ecx]
  419f06:	mov    ch,0x6a
  419f08:	in     eax,0xdf
  419f0a:	es xchg edx,eax
  419f0c:	or     dh,0xfc
  419f0f:	test   BYTE PTR [eax],0x69
  419f12:	sub    ebx,DWORD PTR [eax]
  419f14:	mul    DWORD PTR [ebp-0x2c442d61]
  419f1a:	push   esp
  419f1b:	jg     0x419ea4
  419f1d:	mov    edx,edx
  419f1f:	and    al,0x2
  419f21:	arpl   WORD PTR [ebp-0x2a],cx
  419f24:	das    
  419f25:	div    BYTE PTR [edi-0x47781c5e]
  419f2b:	pop    esp
  419f2c:	xchg   DWORD PTR [edx+eax*8+0x5e],ecx
  419f30:	jo     0x419f2c
  419f32:	cmp    esp,ecx
  419f34:	xchg   DWORD PTR ds:0x8752783,ebx
  419f3a:	xchg   DWORD PTR [esi],edi
  419f3c:	mov    edx,0x395e8b38
  419f41:	test   DWORD PTR [esi-0x1f],esi
  419f44:	inc    esp
  419f45:	gs push 0xa05e1616
  419f4b:	lea    ebx,[ebp-0x7976ee8d]
  419f51:	or     edi,edx
  419f53:	xchg   BYTE PTR [esi+0x2a],dh
  419f56:	jmp    FWORD PTR [esi]
  419f58:	pop    edx
  419f59:	push   edx
  419f5a:	sbb    DWORD PTR [ecx],edx
  419f5c:	(bad)  
  419f5d:	cli    
  419f5e:	xchg   ecx,eax
  419f5f:	mov    esp,0xa6c90c1c
  419f64:	lds    esi,FWORD PTR gs:[ebx-0x1082e092]
  419f6b:	icebp  
  419f6c:	push   eax
  419f6d:	fwait
  419f6e:	xchg   ebx,eax
  419f6f:	jmp    0x419f82
  419f71:	test   DWORD PTR [ecx-0x34],ebp
  419f74:	and    eax,0xd8e1f889
  419f79:	push   ebp
  419f7a:	or     dh,BYTE PTR [ebp-0x7de01107]
  419f80:	mov    edx,0x35d705c3
  419f85:	and    BYTE PTR [esi-0x69],bh
  419f88:	mov    bh,0x61
  419f8a:	ror    ebp,1
  419f8c:	push   ebp
  419f8d:	sbb    bh,0xd2
  419f90:	or     DWORD PTR [edi],0xddd43586
  419f96:	test   al,0xbf
  419f98:	iret   
  419f99:	sub    ebx,ebx
  419f9b:	sbb    dl,0x2c
  419f9e:	adc    DWORD PTR [ecx-0x74],ecx
  419fa1:	lods   eax,DWORD PTR ds:[esi]
  419fa2:	add    DWORD PTR [ecx-0x3a59c060],ebx
  419fa8:	gs retf 
  419faa:	xlat   BYTE PTR ds:[ebx]
  419fab:	fdivr  st,st(2)
  419fad:	lock mov cl,0x7f
  419fb0:	mov    al,0x5a
  419fb2:	sbb    BYTE PTR [ecx],cl
  419fb4:	test   DWORD PTR [edx-0x25c3beec],ebp
  419fba:	and    BYTE PTR [ebp+0x9],dh
  419fbd:	push   0x6
  419fbf:	or     eax,0x297e4474
  419fc5:	dec    ebp
  419fc6:	fisttp DWORD PTR [ecx+eax*2-0x42]
  419fca:	cli    
  419fcb:	mov    esi,0x404ecd96
  419fd0:	push   ds
  419fd1:	ret    
  419fd2:	push   ebp
  419fd3:	xchg   ebp,eax
  419fd4:	push   es
  419fd5:	(bad)  
  419fd7:	(bad)  
  419fd8:	fwait
  419fd9:	mov    WORD PTR [edi-0x6a],ss
  419fdc:	add    BYTE PTR [edi-0x48],cl
  419fdf:	dec    ebx
  419fe0:	mov    DWORD PTR [ecx+0x34196e99],esi
  419fe6:	sti    
  419fe7:	out    0x8f,eax
  419fe9:	call   0xb00e:0x71d407a0
  419ff0:	dec    ebp
  419ff1:	xchg   edx,eax
  419ff2:	ret    0x6df7
  419ff5:	inc    edi
  419ff6:	adc    esi,edx
  419ff8:	stc    
  419ff9:	xchg   edi,eax
  419ffa:	mov    ecx,0xb022e6c1
  419fff:	aam    0xcc
  41a001:	rol    DWORD PTR gs:[eax],1
  41a004:	iret   
  41a005:	lods   al,BYTE PTR ds:[esi]
  41a006:	mov    ah,0x69
  41a008:	lahf   
  41a009:	mov    bh,0xd6
  41a00b:	pop    esp
  41a00c:	aaa    
  41a00d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a00e:	mov    bl,0xf3
  41a010:	mov    ebp,0xf327c0b1
  41a015:	fild   WORD PTR [ebp-0x55]
  41a018:	dec    esi
  41a019:	add    eax,0x8174552
  41a01e:	adc    ebp,DWORD PTR [edi]
  41a020:	add    dl,BYTE PTR [ecx]
  41a022:	and    edx,DWORD PTR [edx]
  41a024:	mov    dh,0x74
  41a026:	mov    eax,ds:0x303f267
  41a02b:	jae    0x41a03f
  41a02d:	jmp    0x761f369c
  41a032:	inc    ecx
  41a033:	fwait
  41a034:	jl     0x41a040
  41a036:	imul   esi,DWORD PTR [ebx],0xffffff99
  41a039:	js     0x41a025
  41a03b:	sahf   
  41a03c:	adc    bh,ch
  41a03e:	xlat   BYTE PTR ds:[ebx]
  41a03f:	sub    BYTE PTR [ebp-0x35],al
  41a042:	jnp    0x41a03f
  41a044:	xor    al,0x5a
  41a046:	push   ebp
  41a047:	mov    edx,0x86cb5229
  41a04c:	aas    
  41a04d:	cmc    
  41a04e:	pop    esi
  41a04f:	out    0x6b,al
  41a051:	test   esi,esp
  41a053:	cmp    DWORD PTR [ebx+0x1864c51f],0x625d1376
  41a05d:	xchg   esp,eax
  41a05e:	leave  
  41a05f:	fstp   DWORD PTR [edi]
  41a061:	imul   ecx,DWORD PTR [ebp-0x2f],0x24
  41a065:	stos   DWORD PTR es:[edi],eax
  41a066:	fisubr WORD PTR [eax+eiz*4]
  41a069:	loope  0x419fff
  41a06b:	loop   0x41a0e6
  41a06d:	push   0x619b925c
  41a072:	xor    bl,BYTE PTR [ecx+0x5]
  41a075:	loopne 0x41a031
  41a077:	(bad)  
  41a078:	aam    0xdb
  41a07a:	push   cs
  41a07b:	jge    0x41a085
  41a07d:	jnp    0x41a0cd
  41a07f:	imul   ecx,DWORD PTR [ebx],0xffffffc9
  41a082:	sub    al,0x56
  41a084:	data16 jo 0x41a0fb
  41a087:	fldl2e 
  41a089:	inc    ecx
  41a08a:	cmp    DWORD PTR [ebp+0x6],eax
  41a08d:	test   BYTE PTR [esi],ch
  41a08f:	xlat   BYTE PTR ds:[ebx]
  41a090:	iret   
  41a091:	push   edx
  41a092:	mov    al,BYTE PTR [esi+0x30c02ef9]
  41a098:	in     eax,dx
  41a099:	arpl   si,sp
  41a09b:	cmc    
  41a09c:	pushf  
  41a09d:	outs   dx,BYTE PTR ds:[esi]
  41a09e:	mov    bx,0x37a0
  41a0a2:	(bad)  
  41a0a3:	add    eax,DWORD PTR [ecx]
  41a0a5:	mov    bl,0xa1
  41a0a7:	dec    edx
  41a0a8:	ret    
  41a0a9:	sbb    esi,DWORD PTR [edx+0x165906af]
  41a0af:	pop    esi
  41a0b0:	leave  
  41a0b1:	sbb    BYTE PTR [ecx-0x275b4075],ch
  41a0b7:	retf   
  41a0b8:	ins    BYTE PTR es:[edi],dx
  41a0b9:	jecxz  0x41a08a
  41a0bb:	sub    bh,0x18
  41a0be:	rcl    BYTE PTR ds:0x9b86965,1
  41a0c4:	and    cl,BYTE PTR [esi-0xe]
  41a0c7:	xor    ebp,DWORD PTR [edi]
  41a0c9:	out    dx,al
  41a0ca:	bound  ecx,QWORD PTR [ebx+0x32]
  41a0cd:	jl     0x41a0ff
  41a0cf:	xor    dl,BYTE PTR gs:[ecx+0x605b4738]
  41a0d6:	pusha  
  41a0d7:	addr16 pop ds
  41a0d9:	xchg   edx,eax
  41a0da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0db:	rol    BYTE PTR [ebx],0xed
	...
  41a0e6:	xchg   edi,edx
  41a0e8:	dec    ebp
  41a0e9:	jnp    0x41a148
  41a0eb:	sti    
  41a0ec:	mov    bh,0xff
  41a0ee:	ds aad 0x54
  41a0f1:	ret    0xfc10
  41a0f4:	push   edx
  41a0f5:	dec    ebp
  41a0f6:	fwait
  41a0f7:	call   0x0:0x7200001
  41a0fe:	push   ecx
  41a0ff:	(bad)  
  41a100:	fisub  WORD PTR [esi+ecx*2-0x6c]
  41a104:	nop
  41a105:	(bad)  
  41a106:	jmp    FWORD PTR [ebx-0x75]
  41a109:	inc    ebp
  41a10a:	(bad)  
  41a10b:	not    DWORD PTR [ebp+0x31]
  41a10e:	dec    eax
  41a10f:	jp     0x41a0e9
  41a111:	mov    al,ds:0x6eeb1e43
  41a116:	mov    al,ds:0x7b21c019
  41a11b:	pop    es
  41a11c:	test   edi,esp
  41a11e:	dec    ecx
  41a11f:	cmp    al,0xff
  41a121:	leave  
  41a122:	repz pop ebx
  41a124:	sar    BYTE PTR [edi+0x40],cl
  41a127:	(bad)  
  41a128:	adc    BYTE PTR [edi-0x41],bl
  41a12b:	mov    al,0x83
  41a12d:	xor    eax,0xb3750730
  41a132:	stc    
  41a133:	es iret 
  41a135:	lods   al,BYTE PTR ds:[esi]
  41a136:	dec    esi
  41a137:	sbb    esp,DWORD PTR [ebp+0x3be9b28d]
  41a13d:	dec    edi
  41a13e:	xor    eax,0x80205f5f
  41a143:	(bad)  
  41a144:	xor    DWORD PTR [ecx-0x394f245e],edi
  41a14a:	jp     0x41a16e
  41a14c:	or     esp,DWORD PTR [edx+0x0]
  41a14f:	gs push esp
  41a151:	bound  edx,QWORD PTR [ebx]
  41a153:	mov    al,0xa0
  41a155:	add    al,0x4f
  41a157:	pop    esp
  41a158:	cwde   
  41a159:	pop    edx
  41a15a:	inc    ecx
  41a15b:	push   edx
  41a15c:	jnp    0x41a150
  41a15e:	adc    al,bh
  41a160:	jg     0x41a15f
  41a162:	inc    ebp
  41a163:	fidivr DWORD PTR [esi+ebp*8]
  41a166:	fnstsw WORD PTR [edx+ebx*1]
  41a169:	cmp    eax,0xf63d9c51
  41a16e:	lahf   
  41a16f:	mov    WORD PTR [edx-0x6a],?
  41a172:	sub    DWORD PTR [esi],eax
  41a174:	ja     0x41a0fa
  41a176:	jno    0x41a116
  41a178:	fcomp  QWORD PTR [edi+0x4c]
  41a17b:	and    eax,0x394b7d8d
  41a180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a181:	xchg   ebx,eax
  41a182:	mov    bl,0x5f
  41a184:	jbe    0x41a18a
  41a186:	mov    ah,0xc1
  41a188:	xor    bl,dh
  41a18a:	or     ch,BYTE PTR [esi+0x3dc881ae]
  41a190:	nop
  41a191:	je     0x41a210
  41a193:	icebp  
  41a194:	sti    
  41a195:	shl    DWORD PTR [edx],1
  41a197:	jmp    0xb441:0xc3907328
  41a19e:	(bad)  
  41a19f:	mov    ds:0xa201d25d,eax
  41a1a4:	(bad)  
  41a1a5:	int    0xf7
  41a1a7:	out    0x47,al
  41a1a9:	and    DWORD PTR [eax+ecx*1-0x4],ebp
  41a1ad:	xchg   ebp,eax
  41a1ae:	loopne 0x41a1e8
  41a1b0:	sbb    edx,DWORD PTR [eax]
  41a1b2:	add    eax,0x86470fd
  41a1b7:	fsubr  QWORD PTR [eax+0x7e7d5017]
  41a1bd:	sbb    dl,ah
  41a1bf:	inc    esi
  41a1c0:	(bad)  
  41a1c1:	std    
  41a1c2:	mov    edx,ds
  41a1c4:	popa   
  41a1c5:	out    0xeb,al
  41a1c7:	cmp    BYTE PTR [edi],bl
  41a1c9:	jo     0x41a1cc
  41a1cb:	rol    DWORD PTR [edx],1
  41a1cd:	push   es
  41a1ce:	fld    TBYTE PTR [ebp-0x7c]
  41a1d1:	push   0xffffff9c
  41a1d3:	out    0xe3,eax
  41a1d5:	fwait
  41a1d6:	push   0x54225a0d
  41a1db:	sbb    BYTE PTR [ebx+edx*2+0x2d],0xdf
  41a1e0:	gs push 0xfffffff8
  41a1e3:	dec    ecx
  41a1e4:	jecxz  0x41a22a
  41a1e6:	in     al,0xd0
  41a1e8:	outs   dx,WORD PTR ds:[esi]
  41a1ea:	std    
  41a1eb:	pop    eax
  41a1ec:	adc    al,0x5b
  41a1ee:	retf   0xa14e
  41a1f1:	shr    BYTE PTR [eax+0x77],0x6b
  41a1f5:	pop    ebx
  41a1f6:	aas    
  41a1f7:	sahf   
  41a1f8:	xchg   ecx,eax
  41a1f9:	push   cs
  41a1fa:	les    esp,FWORD PTR [edi]
  41a1fc:	mov    esi,0xfe58d3bf
  41a201:	jecxz  0x41a257
  41a203:	jecxz  0x41a225
  41a205:	push   cs
  41a206:	pcmpeqb mm1,QWORD PTR [edx]
  41a209:	xchg   dl,ch
  41a20b:	jg     0x41a25b
  41a20d:	ret    0x7a30
  41a210:	push   es
  41a211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a212:	xor    eax,0x994f28f9
  41a217:	cld    
  41a218:	jl     0x41a233
  41a21a:	or     esp,DWORD PTR [eax+0x6b36508a]
  41a220:	xor    cl,BYTE PTR [eax+0xc0a9fb7]
  41a226:	(bad)  
  41a227:	pop    edi
  41a228:	stos   DWORD PTR es:[edi],eax
  41a229:	cld    
  41a22a:	jle    0x41a256
  41a22c:	sbb    ebp,DWORD PTR [eax-0x70]
  41a22f:	in     eax,dx
  41a230:	int    0xcb
  41a232:	push   ds
  41a233:	inc    BYTE PTR [edi]
  41a235:	pop    ss
  41a236:	xor    eax,0xa17041b
  41a23b:	lds    ecx,FWORD PTR gs:[ebp+0x457c0207]
  41a242:	dec    eax
  41a243:	jae    0x41a201
  41a245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a246:	(bad)  
  41a247:	sti    
  41a248:	add    eax,0xa3ffbacf
  41a24d:	adc    eax,0xe476e0a3
  41a252:	xchg   edx,eax
  41a253:	lock add edx,ebx
  41a256:	push   ds
  41a257:	shl    DWORD PTR ds:0xb7eaee75,0xe
  41a25e:	mov    esp,ecx
  41a260:	icebp  
  41a261:	outs   dx,DWORD PTR ds:[esi]
  41a262:	js     0x41a217
  41a264:	pop    eax
  41a265:	pop    es
  41a266:	xchg   esi,eax
  41a267:	ds inc esp
  41a269:	xchg   edi,eax
  41a26a:	xchg   ebp,eax
  41a26b:	jmp    0xc10:0x261f002a
  41a272:	div    BYTE PTR [edi]
  41a274:	push   edi
  41a275:	mov    al,0x90
  41a277:	jmp    0x5e47:0x8e7a8c0f
  41a27e:	add    eax,0x9ae26ff1
  41a283:	add    ch,bl
  41a285:	hlt    
  41a286:	cld    
  41a287:	mov    cs,WORD PTR [ecx-0x7a32a012]
  41a28d:	mov    cl,0x33
  41a28f:	fdiv   QWORD PTR [ebx+0x71f2efd0]
  41a295:	and    ch,dh
  41a297:	xor    BYTE PTR [esi+ebx*8+0x7e],bl
  41a29b:	push   ss
  41a29c:	xchg   ecx,eax
  41a29d:	ds inc bx
  41a2a0:	sub    ebp,DWORD PTR [esi-0x3d99121a]
  41a2a6:	imul   esp,DWORD PTR [edx+0x4af3aba6],0x16
  41a2ad:	loop   0x41a258
  41a2af:	imul   edi,DWORD PTR [esi],0xba17ee1e
  41a2b5:	aad    0x80
  41a2b7:	imul   DWORD PTR [esi]
  41a2b9:	ret    
  41a2ba:	sbb    dh,BYTE PTR [esi]
  41a2bc:	(bad)
  41a2bf:	int3   
  41a2c0:	and    DWORD PTR [edi-0x5a875e9c],eax
  41a2c6:	pushf  
  41a2c7:	mov    ds:0x166c3297,eax
  41a2cc:	or     al,0xd
  41a2ce:	sub    al,0xdc
  41a2d0:	movd   DWORD PTR [esi],mm4
  41a2d3:	std    
  41a2d4:	adc    al,0xdf
  41a2d6:	(bad)  
  41a2d7:	mov    fs,WORD PTR [ebx]
  41a2d9:	inc    edi
  41a2da:	out    dx,eax
  41a2db:	jg     0x41a2c0
  41a2dd:	fisubr DWORD PTR [edi+0xa]
  41a2e0:	mov    esp,0xa499c176
  41a2e5:	mov    bh,0x14
  41a2e7:	mov    WORD PTR [ebx],fs
  41a2e9:	push   ebx
  41a2ea:	pop    esp
  41a2eb:	adc    BYTE PTR [edx],ah
  41a2ed:	xchg   edi,eax
  41a2ee:	int    0xb1
  41a2f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2f1:	fadd   st(3),st
  41a2f3:	inc    ecx
  41a2f4:	pop    edx
  41a2f5:	out    0x8a,eax
  41a2f7:	mov    BYTE PTR [ebp+0xb62ef9e],cl
  41a2fd:	lods   al,BYTE PTR ds:[esi]
  41a2fe:	repnz leave 
  41a300:	jp     0x41a31f
  41a302:	btc    DWORD PTR [ebp+0x15],ecx
  41a306:	fdecstp 
  41a308:	stos   BYTE PTR es:[edi],al
  41a309:	daa    
  41a30a:	and    ch,BYTE PTR [ecx]
  41a30c:	sub    al,0x93
  41a30e:	mov    cl,0xc4
  41a310:	rcr    BYTE PTR [eax+0x44cb6483],0x9c
  41a317:	lods   eax,DWORD PTR ds:[esi]
  41a318:	je     0x41a32c
  41a31a:	jmp    0x16c7:0x7b2ecd49
  41a321:	out    0x3e,al
  41a323:	stc    
  41a324:	rcr    DWORD PTR [ecx+esi*2],cl
  41a327:	mov    al,0x9a
  41a329:	adc    BYTE PTR [eax-0x6dbddc21],0x74
  41a330:	jo     0x41a374
  41a332:	das    
  41a333:	mov    WORD PTR ds:0x6fc92f26,ds
  41a339:	mov    ecx,0x216d0505
  41a33e:	xor    esi,eax
  41a340:	cmp    al,0xed
  41a342:	bound  eax,QWORD PTR [ecx]
  41a344:	bound  ecx,QWORD PTR [ebx-0x320ee18c]
  41a34a:	out    0xb1,eax
  41a34c:	sbb    al,0x16
  41a34e:	je     0x41a35c
  41a350:	das    
  41a351:	inc    ebp
  41a352:	ret    0xf1d8
  41a355:	lock mov eax,0x75cfdbf6
  41a35b:	xchg   ebp,eax
  41a35c:	mov    eax,ds:0x56f763e2
  41a361:	aas    
  41a362:	and    ebp,DWORD PTR ds:0x2053de74
  41a368:	pusha  
  41a369:	lock push eax
  41a36b:	cli    
  41a36c:	(bad)  
  41a36d:	aam    0x97
  41a36f:	lods   eax,DWORD PTR ds:[esi]
  41a370:	mov    DWORD PTR [eax],edx
  41a372:	dec    BYTE PTR [edx]
  41a374:	leave  
  41a375:	cmp    BYTE PTR [edx],ah
  41a377:	push   ebp
  41a378:	cmp    BYTE PTR [edx],0xa4
  41a37b:	hlt    
  41a37c:	mov    ebx,DWORD PTR [ebp+0xe]
  41a37f:	idiv   dl
  41a381:	inc    ebp
  41a382:	dec    edi
  41a383:	in     eax,dx
  41a384:	jg     0x41a317
  41a386:	sar    DWORD PTR [esi-0x10],0x6e
  41a38a:	call   0xb8a:0x5280dac5
  41a391:	add    al,0xad
  41a393:	sbb    ecx,esp
  41a395:	out    dx,al
  41a396:	scas   eax,DWORD PTR es:[edi]
  41a397:	add    al,0x7e
  41a399:	cdq    
  41a39a:	push   ebx
  41a39b:	jnp    0x41a3db
  41a39d:	dec    ebx
  41a39e:	cs clc 
  41a3a0:	push   ds
  41a3a1:	xchg   edi,eax
  41a3a2:	in     eax,dx
  41a3a3:	call   0x970c:0xace89c9a
  41a3aa:	mov    ah,0xd5
  41a3ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3ae:	adc    al,0x1f
  41a3b0:	adc    eax,0x44b8ef80
  41a3b5:	cs push 0x5034e2ff
  41a3bb:	fwait
  41a3bc:	sbb    al,0x31
  41a3be:	push   es
  41a3bf:	inc    eax
  41a3c0:	aas    
  41a3c1:	(bad)  
  41a3c2:	int3   
  41a3c3:	adc    ebx,ebp
  41a3c5:	add    DWORD PTR [edi+0x5c1beb37],edx
  41a3cb:	repnz lea ebp,[edx-0x4d]
  41a3cf:	div    DWORD PTR [esp+eax*4]
  41a3d2:	out    0x15,eax
  41a3d4:	add    al,BYTE PTR ds:0x1acd49df
  41a3da:	jmp    0x41a3e8
  41a3dc:	pop    esi
  41a3dd:	call   0x732901c4
  41a3e2:	and    al,0xce
  41a3e4:	sub    ecx,esi
  41a3e6:	inc    ebx
  41a3e7:	sub    dl,BYTE PTR [ebp+0x25]
  41a3ea:	rcr    DWORD PTR [ebx-0x61],0xea
  41a3ee:	ins    BYTE PTR es:[edi],dx
  41a3ef:	push   0xee1bc1f1
  41a3f4:	jns    0x41a3a6
  41a3f6:	sub    eax,0x9f9c9d98
  41a3fb:	sbb    cl,cl
  41a3fd:	sar    DWORD PTR [edi-0x27683322],cl
  41a403:	adc    eax,0x1250bc2a
  41a408:	enter  0x43c2,0xd9
  41a40c:	inc    ecx
  41a40d:	mov    eax,ds:0xf285859
  41a412:	jl     0x41a438
  41a414:	mov    bl,0x1f
  41a416:	push   edi
  41a417:	dec    esi
  41a418:	or     BYTE PTR [edx-0x44],al
  41a41b:	in     al,0x3a
  41a41d:	(bad)  
  41a41f:	xchg   ecx,eax
  41a420:	mov    ebp,0xedd48c73
  41a425:	and    ebp,esp
  41a427:	add    eax,0x68ead56c
  41a42c:	inc    ecx
  41a42d:	nop
  41a42e:	scas   eax,DWORD PTR es:[edi]
  41a42f:	mov    ds:0xed4a58ad,al
  41a434:	popa   
  41a435:	sbb    bl,ah
  41a437:	xchg   ecx,eax
  41a438:	es (bad) 
  41a43a:	(bad)  
  41a43b:	fdivr  DWORD PTR [ebx]
  41a43d:	jg     0x41a407
  41a43f:	(bad)  
  41a440:	jmp    0x41a3e3
  41a442:	mov    dh,0x79
  41a444:	jb     0x41a480
  41a446:	pop    ecx
  41a447:	sti    
  41a448:	xlat   BYTE PTR ds:[ebx]
  41a449:	or     al,0xd5
  41a44b:	pop    edi
  41a44c:	cmp    BYTE PTR [esp+ecx*4],ah
  41a44f:	inc    edi
  41a450:	daa    
  41a451:	sar    BYTE PTR [ebx-0x20],1
  41a454:	std    
  41a455:	lahf   
  41a456:	not    DWORD PTR [eax+eiz*4-0x2e]
  41a45a:	cmp    ah,BYTE PTR [edx-0x202e6167]
  41a460:	stc    
  41a461:	mov    al,0x1a
  41a463:	(bad)  
  41a465:	inc    eax
  41a466:	xor    DWORD PTR [edx],eax
  41a468:	inc    edx
  41a469:	stos   DWORD PTR es:[edi],eax
  41a46a:	and    eax,0xeff4523a
  41a46f:	(bad)  
  41a470:	mov    ch,0x2c
  41a472:	jnp    0x41a4d4
  41a474:	(bad)  
  41a475:	lods   al,BYTE PTR ds:[esi]
  41a476:	seta   BYTE PTR [edi-0x34a996fa]
  41a47d:	icebp  
  41a47e:	pop    es
  41a47f:	mov    WORD PTR [edi-0x2a],es
  41a482:	push   esp
  41a483:	fstp   TBYTE PTR [eax+0x22]
  41a486:	cmp    BYTE PTR [edi+0x31],cl
  41a489:	inc    edi
  41a48a:	ret    0xd7e4
  41a48d:	cld    
  41a48e:	mov    bl,0x61
  41a490:	inc    ebx
  41a491:	scas   al,BYTE PTR es:[edi]
  41a492:	jmp    0xe29c148c
  41a497:	pushf  
  41a498:	or     BYTE PTR [esi],dl
  41a49a:	stos   DWORD PTR es:[edi],eax
  41a49b:	ret    
  41a49c:	adc    eax,0x6f86ddee
  41a4a1:	test   BYTE PTR [eax-0x5d9abb8c],cl
  41a4a7:	inc    ecx
  41a4a8:	or     ebx,DWORD PTR [ebx-0x6fc654e0]
  41a4ae:	retf   0x6876
  41a4b1:	jle    0x41a525
  41a4b3:	into   
  41a4b4:	mov    edx,0xb8317706
  41a4b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4ba:	pop    edi
  41a4bb:	and    cl,BYTE PTR [esi+ebx*2-0x4018195f]
  41a4c2:	and    BYTE PTR [esp+eax*2-0x2c],ch
  41a4c6:	ror    bh,1
  41a4c8:	out    0xed,al
  41a4ca:	lds    esp,FWORD PTR ds:0xf93114ac
  41a4d0:	mov    edx,DWORD PTR [ebx-0x62ccb68e]
  41a4d6:	jle    0x41a4bb
  41a4d8:	sub    eax,0xc47bf7d7
  41a4dd:	gs mov esp,0x6d60119d
  41a4e3:	mov    BYTE PTR [esi],ch
  41a4e5:	in     eax,dx
  41a4e6:	and    eax,0x31bce344
  41a4eb:	or     cl,BYTE PTR [edi-0x57]
  41a4ee:	cmp    eax,0xe81cc564
  41a4f3:	fistp  DWORD PTR ds:0x7ae45ed8
  41a4f9:	and    bh,BYTE PTR [esi+eax*2+0x76]
  41a4fd:	pop    edi
  41a4fe:	jbe    0x41a574
  41a500:	test   BYTE PTR ds:0xa12bbc0b,0x1b
  41a507:	aas    
  41a508:	in     eax,0x86
  41a50a:	adc    BYTE PTR [ebp+0x2d9b1023],ah
  41a510:	jp     0x41a537
  41a512:	in     al,dx
  41a513:	xchg   esi,edi
  41a515:	addr16 int3 
  41a517:	gs sbb al,0xbd
  41a51a:	mov    edx,edi
  41a51c:	addr16 dec ecx
  41a51e:	lock stos BYTE PTR es:[edi],al
  41a520:	mov    al,0x8
  41a522:	(bad)  
  41a523:	cdq    
  41a524:	or     BYTE PTR [esi],al
  41a526:	ss dec ebp
  41a528:	shl    esi,cl
  41a52a:	stos   DWORD PTR es:[edi],eax
  41a52b:	push   edi
  41a52c:	sub    al,0x34
  41a52e:	stos   BYTE PTR es:[edi],al
  41a52f:	mov    eax,0xbc2032ae
  41a534:	pushf  
  41a535:	popa   
  41a536:	inc    esp
  41a537:	bound  esp,QWORD PTR [edi]
  41a539:	popa   
  41a53a:	xor    ah,bh
  41a53c:	mov    bl,0x62
  41a53e:	xor    BYTE PTR [esi-0x23575c8],ch
  41a544:	ss inc ebp
  41a546:	mov    al,0x8d
  41a548:	push   es
  41a549:	inc    esi
  41a54a:	xchg   DWORD PTR [ecx],edx
  41a54c:	int    0xf9
  41a54e:	fwait
  41a54f:	mov    BYTE PTR [esi-0x42],bl
  41a552:	ins    DWORD PTR es:[edi],dx
  41a553:	fldcw  WORD PTR [ebx-0x47a5d114]
  41a559:	lods   eax,DWORD PTR ds:[esi]
  41a55a:	mov    ebx,0xf8dda8fe
  41a55f:	cwde   
  41a560:	popf   
  41a561:	jne    0x41a5d0
  41a563:	popf   
  41a564:	push   edi
  41a565:	retf   
  41a566:	push   edi
  41a567:	lahf   
  41a568:	dec    edx
  41a569:	(bad)  
  41a56a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a56b:	out    dx,eax
  41a56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a56d:	cmp    BYTE PTR [eax+0x36],ah
  41a570:	adc    ebx,DWORD PTR [edx+ebp*2]
  41a573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a574:	add    eax,0x7c19cc30
  41a579:	sbb    bl,0xaa
  41a57c:	xor    DWORD PTR [ebp-0x7a],0x1810da3b
  41a583:	and    al,BYTE PTR ss:[ecx+0x13086eef]
  41a58a:	jo     0x41a550
  41a58c:	mov    esi,0xdca36e02
  41a591:	scas   al,BYTE PTR es:[edi]
  41a592:	xchg   esi,eax
  41a593:	or     edi,ecx
  41a595:	cmp    BYTE PTR [esi+0x5323aba4],cl
  41a59b:	mul    BYTE PTR [edi+0x16]
  41a59e:	addr16 xchg bl,cl
  41a5a1:	aam    0x6a
  41a5a3:	cmp    al,ah
  41a5a5:	xchg   DWORD PTR [edx+eax*2-0x75],ecx
  41a5a9:	js     0x41a573
  41a5ab:	cmp    DWORD PTR [edx-0x44f2e824],esp
  41a5b1:	dec    esi
  41a5b2:	inc    eax
  41a5b3:	test   al,0x8a
  41a5b5:	push   es
  41a5b6:	sbb    DWORD PTR [ecx+0x42],ecx
  41a5b9:	add    eax,0x32b55c02
  41a5be:	xor    al,0x5a
  41a5c0:	sar    BYTE PTR [eax+edi*8],cl
  41a5c3:	jmp    0x41a5e2
  41a5c5:	mov    es,edx
  41a5c7:	lods   al,BYTE PTR ds:[esi]
  41a5c8:	jnp    0x41a5a6
  41a5ca:	fld    QWORD PTR [ecx-0x75]
  41a5cd:	cli    
  41a5ce:	loope  0x41a642
  41a5d0:	mov    al,0xdb
  41a5d2:	inc    edx
  41a5d3:	or     DWORD PTR [ecx],esi
  41a5d5:	cmp    DWORD PTR [ecx+0x63ad13ee],eax
  41a5db:	adc    bh,BYTE PTR [esi+0x2d5e4b08]
  41a5e1:	mov    eax,ds:0xd8486f06
  41a5e6:	shr    ah,cl
  41a5e8:	push   cs
  41a5e9:	xor    al,0xf7
  41a5eb:	dec    ecx
  41a5ec:	pop    eax
  41a5ed:	push   ebp
  41a5ee:	into   
  41a5ef:	enter  0x7ed0,0x7e
  41a5f3:	dec    ebp
  41a5f4:	xchg   edi,eax
  41a5f5:	jmp    0x41a58f
  41a5f7:	out    dx,eax
  41a5f8:	add    BYTE PTR [ebx-0x6d2c02f9],cl
  41a5fe:	fld    QWORD PTR [edx+0x75]
  41a601:	in     al,0x4b
  41a603:	jmp    0xe887:0x5c5e6390
  41a60a:	mov    bl,dh
  41a60c:	ins    DWORD PTR es:[edi],dx
  41a60d:	scas   eax,DWORD PTR es:[edi]
  41a60e:	cmp    dl,BYTE PTR [esi]
  41a610:	addr16 push ecx
  41a612:	mov    eax,ds:0xcbfbc747
  41a617:	inc    ebp
  41a618:	cmp    DWORD PTR [ebx+ebx*8],esp
  41a61b:	mov    dl,0x23
  41a61d:	push   eax
  41a61e:	lods   eax,DWORD PTR ds:[esi]
  41a61f:	jmp    0x41a5cc
  41a621:	sbb    al,0x79
  41a623:	retf   
  41a624:	ins    DWORD PTR es:[edi],dx
  41a625:	sbb    al,0xd9
  41a627:	icebp  
  41a628:	hlt    
  41a629:	push   eax
  41a62a:	repnz push ss
  41a62c:	or     ebp,DWORD PTR [esi]
  41a62e:	rcl    DWORD PTR [edx+0x6],cl
  41a631:	bound  ebx,QWORD PTR [ebx+0xebf8a20]
  41a637:	jbe    0x41a6ad
  41a639:	push   esi
  41a63a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a63b:	fsubr  DWORD PTR [ebx]
  41a63d:	div    DWORD PTR ds:0xec359c18
  41a643:	loop   0x41a66c
  41a645:	jae    0x41a643
  41a647:	mov    bh,0x70
  41a649:	jmp    0x41a676
  41a64b:	push   esi
  41a64c:	fild   WORD PTR [ebp+0x7f]
  41a64f:	in     al,dx
  41a650:	popf   
  41a651:	mov    dh,0x80
  41a653:	xor    cl,al
  41a655:	or     bh,cl
  41a657:	pop    gs
  41a659:	mov    dh,0x4e
  41a65b:	pop    ds
  41a65c:	and    eax,0xe3a16ead
  41a661:	add    DWORD PTR [ebx],esp
  41a663:	mov    bl,0x13
  41a665:	mul    BYTE PTR [ecx]
  41a667:	dec    eax
  41a668:	mov    al,ds:0x68f119d8
  41a66d:	jno    0x41a667
  41a66f:	pop    es
  41a670:	dec    edx
  41a671:	leave  
  41a672:	dec    BYTE PTR [ecx-0x37ac986b]
  41a678:	push   0x31
  41a67a:	adc    cl,BYTE PTR [eax]
  41a67c:	mov    bl,0x6c
  41a67e:	add    ch,BYTE PTR [ebx-0xfb6bef3]
  41a684:	sbb    al,0xb4
  41a686:	stc    
  41a687:	jl     0x41a6ae
  41a689:	xchg   ebp,eax
  41a68a:	cmp    dl,0x67
  41a68d:	push   esi
  41a68e:	test   ebp,esi
  41a690:	adc    ch,BYTE PTR [ebx]
  41a692:	jmp    0x709d:0xa02dd507
  41a699:	sbb    DWORD PTR [ecx],esi
  41a69b:	inc    esi
  41a69c:	mov    esp,0xe9ddec7
  41a6a1:	xor    bh,dh
  41a6a3:	jmp    0x5978:0x2118471e
  41a6aa:	sahf   
  41a6ab:	push   es
  41a6ac:	das    
  41a6ad:	mov    ch,BYTE PTR ds:0x3241920
  41a6b3:	and    al,0x41
  41a6b5:	mov    al,0x5d
  41a6b7:	add    ecx,DWORD PTR [edx+0x51]
  41a6ba:	mov    ds:0x513521f3,eax
  41a6bf:	int    0x2f
  41a6c1:	inc    esi
  41a6c2:	pop    eax
  41a6c3:	and    DWORD PTR [eax-0x45e66dcb],ebp
  41a6c9:	loop   0x41a6e5
  41a6cb:	clc    
  41a6cc:	sbb    DWORD PTR [ebx-0x328baa7c],ebx
  41a6d2:	mov    bh,0x3a
  41a6d4:	add    BYTE PTR ds:0x1abf1d60,al
  41a6da:	add    BYTE PTR [ebx-0x35],ch
  41a6dd:	shr    BYTE PTR [ecx-0x26],1
  41a6e0:	outs   dx,BYTE PTR ds:[esi]
  41a6e1:	sub    ah,BYTE PTR [edi]
  41a6e3:	xor    BYTE PTR [edx+edi*2],ch
  41a6e6:	jmp    0xdab3ffe
  41a6eb:	push   cx
  41a6ed:	les    ebp,FWORD PTR [ebx+0x41]
  41a6f0:	dec    edx
  41a6f1:	loope  0x41a688
  41a6f3:	pushf  
  41a6f4:	mov    cl,0x44
  41a6f6:	sbb    eax,0x708b5da7
  41a6fb:	das    
  41a6fc:	aaa    
  41a6fd:	and    cl,BYTE PTR [ecx-0x7e]
  41a700:	pop    ecx
  41a701:	in     al,0xd1
  41a703:	bound  ecx,QWORD PTR [edx+0x68]
  41a706:	dec    esi
  41a707:	ret    0x1af2
  41a70a:	daa    
  41a70b:	scas   eax,DWORD PTR es:[edi]
  41a70c:	aas    
  41a70d:	arpl   WORD PTR [ebp-0x53],si
  41a710:	bound  esp,QWORD PTR [ecx]
  41a712:	pop    ebp
  41a713:	mov    al,0xc7
  41a715:	adc    esp,DWORD PTR [edi-0x2d]
  41a718:	mov    es,esp
  41a71a:	jns    0x41a6f0
  41a71c:	mov    edi,0x95c50ce0
  41a721:	(bad)  
  41a722:	test   eax,0x386f7661
  41a727:	jecxz  0x41a767
  41a729:	out    dx,eax
  41a72a:	dec    BYTE PTR [esp+eax*4+0x74e56782]
  41a731:	(bad)  
  41a732:	sbb    DWORD PTR [ecx-0x1f],ebp
  41a735:	dec    esp
  41a736:	popf   
  41a737:	sbb    BYTE PTR [edi],bl
  41a739:	jns    0x41a6cc
  41a73b:	enter  0x6a0a,0xc8
  41a73f:	and    esp,DWORD PTR [edx+0x799af3dc]
  41a745:	xchg   esi,eax
  41a746:	shr    BYTE PTR [esi+0x3f6966cd],1
  41a74c:	pop    esi
  41a74d:	jno    0x41a701
  41a74f:	mov    ds:0x7ff9e6eb,eax
  41a754:	hlt    
  41a755:	in     al,0xb
  41a757:	xchg   esp,eax
  41a759:	fsub   st,st(7)
  41a75b:	dec    edx
  41a75c:	ror    BYTE PTR [edi-0x52fba524],0x62
  41a763:	imul   edx,DWORD PTR [eax+ebp*1+0x7f2ebb9b],0xffffffea
  41a76b:	pushf  
  41a76c:	jge    0x41a6ef
  41a76e:	fistp  DWORD PTR [ebp+ebx*8+0x499e6bbf]
  41a775:	pop    ebp
  41a776:	lock and BYTE PTR ds:0xd47d,ah
  41a77c:	shr    DWORD PTR [esi+0x71b61693],cl
  41a782:	outs   dx,BYTE PTR ds:[esi]
  41a783:	popf   
  41a784:	cmc    
  41a785:	gs das 
  41a787:	fldenv [esi+0x1f]
  41a78a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a78b:	xor    al,BYTE PTR [esi-0x5ca9b47a]
  41a791:	add    edx,ebx
  41a793:	in     eax,0xbf
  41a795:	fst    QWORD PTR [edi]
  41a797:	arpl   si,di
  41a799:	push   es
  41a79a:	mov    eax,0x5820e489
  41a79f:	xor    al,0xe1
  41a7a1:	fisubr DWORD PTR [edi-0x732dde00]
  41a7a7:	xor    DWORD PTR [ebp-0x35],0x56
  41a7ab:	mov    ?,WORD PTR [edx+0x65116af9]
  41a7b1:	mov    cs,WORD PTR [ebx]
  41a7b3:	stc    
  41a7b4:	mov    eax,0x868cae10
  41a7b9:	jecxz  0x41a796
  41a7bb:	mov    al,0xd3
  41a7bd:	in     al,0x1c
  41a7bf:	pop    ss
  41a7c0:	jle    0x41a814
  41a7c2:	xchg   edx,eax
  41a7c3:	mov    BYTE PTR [ebx+edx*1],bh
  41a7c6:	push   es
  41a7c7:	adc    DWORD PTR [eax],edi
  41a7c9:	adc    DWORD PTR [ecx],ebx
  41a7cb:	adc    BYTE PTR [eax-0x4],ah
  41a7ce:	adc    eax,0x8f253164
  41a7d3:	stos   DWORD PTR es:[edi],eax
  41a7d4:	xchg   esi,eax
  41a7d5:	mov    ecx,0xd041dc65
  41a7da:	pushf  
  41a7db:	cmp    BYTE PTR ds:0x861fcd1b,cl
  41a7e1:	out    dx,eax
  41a7e2:	jmp    0xd462:0xf746924b
  41a7e9:	ficom  DWORD PTR [ebx+0x7f]
  41a7ec:	inc    BYTE PTR ds:0xe8235eb4
  41a7f2:	popf   
  41a7f3:	push   0x26ed0395
  41a7f8:	into   
  41a7f9:	push   edi
  41a7fb:	mov    ebp,0xb46818ab
  41a800:	adc    bh,ch
  41a802:	ins    DWORD PTR es:[edi],dx
  41a803:	out    dx,eax
  41a804:	dec    edx
  41a805:	test   dl,ah
  41a807:	sbb    al,0xd7
  41a809:	(bad)  
  41a80a:	icebp  
  41a80b:	or     DWORD PTR [esi-0x18],esp
  41a80e:	call   0xeec2:0x8a2b7e46
  41a815:	mov    BYTE PTR ds:0xa737943a,dl
  41a81b:	rcl    DWORD PTR [edx],0x12
	...
  41a826:	adc    al,0xcb
  41a828:	mov    bl,0x9a
  41a82a:	(bad)  
  41a82b:	cli    
  41a82c:	cmp    eax,0x190968cf
  41a831:	mov    esp,DWORD PTR [ebp-0x44877d51]
  41a837:	mov    eax,ds:0x7200001
  41a83c:	add    BYTE PTR [eax],al
  41a83e:	das    
  41a83f:	aaa    
  41a840:	dec    esp
  41a841:	(bad)  
  41a842:	(bad)  
  41a843:	jg     0x41a860
  41a845:	mov    ebx,0x41f86d78
  41a84a:	inc    ebx
  41a84b:	fstp   TBYTE PTR [ecx]
  41a84d:	jno    0x41a8b7
  41a84f:	xchg   ecx,eax
  41a850:	pop    ecx
  41a851:	or     eax,0xabe81728
  41a856:	pusha  
  41a857:	mov    edx,0x742f38df
  41a85c:	lds    edi,FWORD PTR [esi]
  41a85e:	mov    edx,0x19494052
  41a863:	fsubr  DWORD PTR [ecx+0x3c]
  41a866:	fnstcw WORD PTR [ebp+0x3]
  41a869:	cmp    eax,esi
  41a86b:	jle    0x41a86c
  41a86d:	gs mov ebx,0xe7c77737
  41a873:	inc    esi
  41a874:	mul    DWORD PTR [ebx]
  41a876:	call   0xf6d9:0xb5fabec5
  41a87d:	xor    BYTE PTR [esi-0x7c29eba5],dh
  41a883:	pop    ebx
  41a884:	mov    ebx,0xbf6b0fb9
  41a889:	sbb    DWORD PTR ds:0x56ae292e,0x62
  41a890:	adc    al,0x78
  41a892:	into   
  41a893:	or     BYTE PTR [ebp+0x75],ch
  41a896:	and    al,0xbd
  41a898:	mov    ch,0x9a
  41a89a:	sbb    al,BYTE PTR [edi]
  41a89c:	fist   DWORD PTR cs:[esi+0x63]
  41a8a0:	jmp    0x6e80:0xf9846268
  41a8a7:	jno    0x41a854
  41a8a9:	and    BYTE PTR [edi],0x6c
  41a8ac:	mov    ds:0x285e35be,al
  41a8b1:	outs   dx,DWORD PTR ds:[esi]
  41a8b2:	xchg   ebx,eax
  41a8b3:	ins    DWORD PTR es:[edi],dx
  41a8b4:	mov    edx,ecx
  41a8b6:	mov    WORD PTR [ebx+edx*2-0x5f430a26],?
  41a8bd:	loop   0x41a88f
  41a8bf:	inc    ebx
  41a8c0:	jl     0x41a90f
  41a8c2:	adc    al,0xa8
  41a8c4:	cmp    al,0x53
  41a8c6:	imul   ecx,DWORD PTR [esi],0x4c259e6b
  41a8cc:	cmc    
  41a8cd:	sub    BYTE PTR [esi+0x47],cl
  41a8d0:	pop    esi
  41a8d1:	das    
  41a8d2:	mov    eax,ds:0xec54e1c8
  41a8d7:	xchg   esp,eax
  41a8d8:	pop    edi
  41a8d9:	or     dl,BYTE PTR [ecx+eax*4+0x52]
  41a8dd:	imul   edi,DWORD PTR [edx-0x1b38089a],0xb61d01ae
  41a8e7:	adc    eax,0xe22ec328
  41a8ec:	sub    esp,DWORD PTR [esi-0x35]
  41a8ef:	jne    0x41a8a2
  41a8f1:	aas    
  41a8f2:	jg     0x41a876
  41a8f4:	mov    bl,BYTE PTR [edx]
  41a8f6:	jns    0x41a94b
  41a8f8:	and    bh,BYTE PTR [edx+0x48]
  41a8fb:	std    
  41a8fc:	or     dl,BYTE PTR [esi]
  41a8fe:	imul   eax,DWORD PTR [ebx],0xdadf048b
  41a904:	xor    ebp,ebx
  41a906:	fcom   QWORD PTR [edi-0x5e]
  41a909:	rcr    ebp,1
  41a90b:	fcomp  QWORD PTR [ecx+0x61]
  41a90e:	and    BYTE PTR [eax],dl
  41a910:	sahf   
  41a911:	call   0x1ccb9f95
  41a916:	push   0x0
  41a918:	adc    al,0xbc
  41a91a:	mov    dl,0x7d
  41a91c:	cmp    eax,0x8c12adc3
  41a921:	sub    DWORD PTR [edx],edi
  41a923:	lea    edi,[ecx+0x57b0dbfb]
  41a929:	xor    eax,0x8b6722e0
  41a92e:	or     edx,ebp
  41a930:	addr16 xchg esp,eax
  41a932:	mov    gs,esp
  41a934:	stos   DWORD PTR es:[edi],eax
  41a935:	add    al,0x51
  41a937:	in     al,0x10
  41a939:	sub    eax,0x41cabf24
  41a93e:	cdq    
  41a93f:	out    0x86,al
  41a941:	dec    ebx
  41a942:	xor    DWORD PTR [edi],esi
  41a944:	add    eax,0xbc0d3878
  41a949:	retf   0xda9
  41a94c:	jge    0x41a99b
  41a94e:	call   0x8ec1f7c5
  41a953:	in     eax,0x88
  41a955:	stos   BYTE PTR es:[edi],al
  41a956:	fbld   TBYTE PTR [eax]
  41a958:	push   ss
  41a959:	pop    ecx
  41a95a:	out    dx,eax
  41a95b:	and    al,0xa0
  41a95d:	xchg   DWORD PTR [ebx-0x19],edi
  41a960:	jbe    0x41a904
  41a962:	cmp    bl,ah
  41a964:	arpl   di,bp
  41a966:	mov    ds,WORD PTR [eax-0x42b36054]
  41a96c:	rol    edi,1
  41a96e:	repz loopne 0x41a8fc
  41a971:	xchg   DWORD PTR [edi],ebx
  41a973:	push   ds
  41a974:	adc    dl,BYTE PTR [eax-0x4b]
  41a977:	jl     0x41a991
  41a979:	shr    DWORD PTR [edi],0x90
  41a97c:	in     al,0x64
  41a97e:	jbe    0x41a9cc
  41a980:	sub    al,BYTE PTR [ecx+0x6d]
  41a983:	(bad)  
  41a984:	je     0x41a9be
  41a986:	outs   dx,BYTE PTR ds:[esi]
  41a987:	mov    ch,0xcb
  41a989:	das    
  41a98a:	push   esp
  41a98b:	xchg   esp,eax
  41a98c:	inc    eax
  41a98d:	jg     0x41a9d9
  41a98f:	mov    bh,0xe9
  41a991:	xchg   bh,bl
  41a993:	popa   
  41a994:	adc    BYTE PTR [ebp-0x325e6d15],cl
  41a99a:	add    DWORD PTR [eax-0x20],0xa88c7cd6
  41a9a1:	xchg   edi,eax
  41a9a2:	inc    ebp
  41a9a3:	loope  0x41a979
  41a9a5:	mov    eax,0x9fd8544e
  41a9aa:	call   0x8d28:0x22e292e2
  41a9b1:	into   
  41a9b2:	into   
  41a9b3:	inc    eax
  41a9b4:	jp     0x41a9e6
  41a9b6:	cdq    
  41a9b7:	retf   
  41a9b8:	aas    
  41a9b9:	and    edi,DWORD PTR [edx+0x5f0a514b]
  41a9bf:	sbb    BYTE PTR [eax-0x56],0x16
  41a9c3:	jg     0x41a9d5
  41a9c5:	mov    dl,0xd7
  41a9c7:	lahf   
  41a9c8:	(bad)  
  41a9c9:	addr16 dec eax
  41a9cb:	test   eax,0x7c43b004
  41a9d0:	dec    ecx
  41a9d1:	xor    eax,0x9f17c76
  41a9d6:	pop    ebx
  41a9d7:	pop    edx
  41a9d8:	inc    esi
  41a9d9:	scas   al,BYTE PTR es:[edi]
  41a9da:	cmp    eax,0xad876abb
  41a9df:	jl     0x41aa4d
  41a9e1:	mov    dh,0xc1
  41a9e3:	rcl    BYTE PTR [esi-0x52b24f3d],cl
  41a9e9:	std    
  41a9ea:	repnz add BYTE PTR [ebp+0x36],ch
  41a9ee:	in     al,0x5c
  41a9f0:	pop    edx
  41a9f1:	retf   0x369e
  41a9f4:	sub    ebx,DWORD PTR [eax-0x7b]
  41a9f7:	sub    eax,0x82730769
  41a9fc:	std    
  41a9fd:	mov    edx,0x1977da0a
  41aa02:	cmp    eax,0x65b073d7
  41aa07:	retf   0x5283
  41aa0a:	and    ch,BYTE PTR [ebp+0x38]
  41aa0d:	je     0x41a9db
  41aa0f:	and    ah,ah
  41aa11:	push   ecx
  41aa12:	push   ebx
  41aa13:	mov    edx,0xd4c96fac
  41aa18:	inc    ebp
  41aa19:	pushf  
  41aa1a:	test   BYTE PTR [ebx+0xfff2749],dl
  41aa20:	shl    DWORD PTR [edx+0x56],1
  41aa23:	rep lods al,BYTE PTR ds:[esi]
  41aa25:	lods   al,BYTE PTR ds:[esi]
  41aa26:	mov    eax,0xdce18d5d
  41aa2b:	sbb    eax,0x2e544f29
  41aa30:	ds repz jbe 0x41aa95
  41aa34:	cmp    al,0x41
  41aa36:	les    edi,FWORD PTR [ebx]
  41aa38:	enter  0x8bab,0xaa
  41aa3c:	or     eax,0x24c261e6
  41aa41:	imul   eax,DWORD PTR [ebp-0x10],0xaefd5d4b
  41aa48:	jmp    0x59f7:0x8ce
  41aa4e:	dec    ebp
  41aa4f:	xor    ah,al
  41aa51:	xchg   DWORD PTR [esi+0x2c],ebx
  41aa54:	pop    DWORD PTR [edi-0x12097909]
  41aa5a:	pop    eax
  41aa5b:	out    0x69,eax
  41aa5d:	test   bl,ch
  41aa5f:	sbb    BYTE PTR fs:[esi],dl
  41aa62:	inc    esi
  41aa63:	enter  0xc9e1,0x84
  41aa67:	cld    
  41aa68:	push   esi
  41aa69:	pop    ebp
  41aa6a:	sub    DWORD PTR [ebx-0x72eeb414],edi
  41aa70:	in     eax,dx
  41aa71:	cmp    ebx,DWORD PTR [ecx-0x57a5a77c]
  41aa77:	fwait
  41aa78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa79:	adc    BYTE PTR [ecx-0x47],cl
  41aa7c:	mov    eax,ds:0xd33df002
  41aa81:	and    BYTE PTR [ebx+0xd],dh
  41aa84:	and    edi,DWORD PTR [ebx+0x30]
  41aa87:	ss and eax,0x48cf64b6
  41aa8d:	mov    edx,0xa4d71501
  41aa92:	xchg   DWORD PTR [esi+0x5cdd65],ebx
  41aa98:	push   esi
  41aa99:	dec    eax
  41aa9a:	adc    cl,bl
  41aa9c:	frstor [ebx+0x3a38cc19]
  41aaa2:	dec    ecx
  41aaa3:	sar    DWORD PTR [edx-0x33cdbaa3],cl
  41aaa9:	jecxz  0x41aaa3
  41aaab:	out    dx,al
  41aaac:	mov    ebx,0x7da9dd15
  41aab1:	dec    esp
  41aab2:	mov    BYTE PTR [eax+0x6c],ah
  41aab5:	ins    DWORD PTR es:[edi],dx
  41aab6:	sub    eax,DWORD PTR [ebx+0x3]
  41aab9:	push   ecx
  41aaba:	ret    
  41aabb:	add    al,0x49
  41aabd:	ss xchg ebp,eax
  41aabf:	arpl   dx,cx
  41aac1:	mov    eax,ds:0xe52b18f0
  41aac6:	test   al,0xf
  41aac8:	cli    
  41aac9:	js     0x41ab3d
  41aacb:	adc    eax,0xc0148c57
  41aad0:	sbb    al,0x97
  41aad2:	jl     0x41aaa7
  41aad4:	ret    0xd192
  41aad7:	icebp  
  41aad8:	dec    eax
  41aad9:	mov    ds:0xf65a8fab,eax
  41aade:	dec    edi
  41aadf:	dec    edi
  41aae0:	data16 cmp BYTE PTR [edx-0x3d],ah
  41aae4:	dec    BYTE PTR [esi]
  41aae6:	pop    es
  41aae7:	shl    dh,1
  41aae9:	mov    ch,0x48
  41aaeb:	icebp  
  41aaec:	(bad)  
  41aaed:	in     eax,dx
  41aaee:	bound  esp,QWORD PTR [edi]
  41aaf0:	xchg   edx,eax
  41aaf1:	or     al,0xd3
  41aaf3:	mov    bl,0x22
  41aaf5:	jns    0x41ab53
  41aaf7:	mov    ah,0xed
  41aaf9:	jge    0x41aa8b
  41aafb:	jmp    0x41aac5
  41aafd:	xor    al,0xd0
  41aaff:	imul   ebx,esp,0x2c96c861
  41ab05:	xchg   BYTE PTR [edi+ecx*2+0x79],bh
  41ab09:	(bad)
  41ab0c:	add    al,0x71
  41ab0e:	and    BYTE PTR [edx],0x96
  41ab11:	fs jmp 0x41ab26
  41ab14:	loop   0x41ab8c
  41ab16:	inc    ecx
  41ab17:	test   BYTE PTR [eax],cl
  41ab19:	jbe    0x41aac9
  41ab1b:	cld    
  41ab1c:	or     eax,0x15b8f9ed
  41ab21:	scas   eax,DWORD PTR es:[edi]
  41ab22:	mov    ebx,0x4f3c2f18
  41ab27:	jp     0x41aaab
  41ab29:	stos   BYTE PTR es:[edi],al
  41ab2a:	push   eax
  41ab2b:	xlat   BYTE PTR ds:[ebx]
  41ab2c:	dec    esp
  41ab2d:	(bad)  
  41ab2e:	pop    eax
  41ab2f:	lock jns 0x41aad6
  41ab32:	dec    eax
  41ab33:	push   es
  41ab34:	push   ecx
  41ab35:	jb     0x41ab65
  41ab37:	jo     0x41ab39
  41ab39:	push   es
  41ab3a:	cwde   
  41ab3b:	call   0x899d:0x5f917a63
  41ab42:	cmp    eax,0x439e92f5
  41ab47:	jecxz  0x41ab5b
  41ab49:	add    eax,0xfe76ebe4
  41ab4e:	inc    esp
  41ab4f:	xchg   edx,eax
  41ab50:	dec    esi
  41ab51:	lods   eax,DWORD PTR ds:[esi]
  41ab52:	loope  0x41ab37
  41ab54:	mov    fs,ecx
  41ab56:	mov    ah,BYTE PTR [ebx+0x2b]
  41ab59:	push   edx
  41ab5a:	repz push eax
  41ab5c:	pop    edi
  41ab5d:	adc    eax,0xc9cdcea1
  41ab62:	add    ch,BYTE PTR [esi]
  41ab64:	in     eax,0xd4
  41ab66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab67:	nop
  41ab68:	mov    ch,0x33
  41ab6a:	gs loop 0x41ab39
  41ab6d:	mov    al,ds:0xdd59f60a
  41ab72:	push   edx
  41ab73:	push   ecx
  41ab74:	loop   0x41ab07
  41ab76:	cmp    esi,edi
  41ab78:	test   al,0xde
  41ab7a:	shl    BYTE PTR [ebp-0x41815a5],0x30
  41ab81:	cmp    al,0x6a
  41ab83:	pop    eax
  41ab84:	mov    BYTE PTR [ecx+0x76b2bb41],bl
  41ab8a:	jno    0x41abe6
  41ab8c:	fsubr  st,st(0)
  41ab8e:	nop
  41ab8f:	or     al,0x4b
  41ab91:	or     bh,BYTE PTR [edx+edi*2-0x904d50]
  41ab98:	push   ss
  41ab99:	nop
  41ab9a:	dec    ecx
  41ab9b:	jnp    0x41ab2a
  41ab9d:	out    dx,eax
  41ab9e:	(bad)  
  41ab9f:	cmp    BYTE PTR [ebp+0x5],cl
  41aba2:	inc    esi
  41aba3:	dec    eax
  41aba4:	cld    
  41aba5:	inc    ebp
  41aba6:	sbb    al,0x29
  41aba8:	pop    esi
  41aba9:	or     eax,0x21854c96
  41abae:	(bad)  
  41abaf:	mov    cl,0xb2
  41abb1:	(bad)  
  41abb2:	sub    bh,bh
  41abb4:	push   edi
  41abb5:	adc    DWORD PTR [ebx-0xe],ebp
  41abb8:	ret    
  41abb9:	mov    ds:0x16fa3dd9,eax
  41abbe:	mov    dh,0xce
  41abc0:	repnz mov edi,edx
  41abc3:	cmp    ch,BYTE PTR [ebx-0x24]
  41abc6:	rcr    BYTE PTR [eax],cl
  41abc8:	sub    al,0x8d
  41abca:	cwde   
  41abcb:	mov    esp,0x787ae8c0
  41abd0:	jg     0x41ab57
  41abd2:	adc    al,0x7
  41abd4:	ins    DWORD PTR es:[edi],dx
  41abd5:	mov    dh,0x7e
  41abd7:	push   cs
  41abd8:	out    0xcc,eax
  41abda:	mov    cl,0xa6
  41abdc:	pop    eax
  41abdd:	imul   ebp,DWORD PTR [edx+0x3183461d],0xa2f0012b
  41abe7:	jbe    0x41ab69
  41abe9:	xchg   edi,eax
  41abea:	adc    eax,DWORD PTR [ecx]
  41abec:	lock sbb al,0x12
  41abef:	inc    ebx
  41abf0:	xor    al,0x26
  41abf2:	enter  0xa850,0x9f
  41abf6:	sbb    al,0x9e
  41abf8:	mov    dh,0x72
  41abfa:	call   0xb515:0x9e28ce8
  41ac01:	sahf   
  41ac02:	lds    edi,FWORD PTR [ecx-0x3b]
  41ac05:	mov    edi,ebp
  41ac07:	nop
  41ac08:	and    ch,BYTE PTR ds:0xbd8c4293
  41ac0e:	adc    DWORD PTR [edi-0x4ff54d6e],eax
  41ac14:	pushf  
  41ac15:	pop    ds
  41ac16:	pop    ss
  41ac17:	sub    DWORD PTR [ecx+0x6e50e446],ebx
  41ac1d:	fucom  st(0)
  41ac1f:	mov    DWORD PTR [ecx*4-0x637db4c6],edi
  41ac26:	loope  0x41ac74
  41ac28:	inc    edx
  41ac29:	mov    esp,0x7a1ce8f5
  41ac2e:	ret    0xc66b
  41ac31:	dec    esi
  41ac32:	sbb    DWORD PTR [edi-0x4cb3031],ecx
  41ac38:	push   ds
  41ac39:	mov    fs,WORD PTR [ecx]
  41ac3b:	inc    esi
  41ac3c:	inc    ecx
  41ac3d:	push   ss
  41ac3e:	loope  0x41abd9
  41ac40:	mov    ebx,0x4c4d814e
  41ac45:	sub    DWORD PTR [eax+edi*8+0x64f42fd0],0xffffff89
  41ac4d:	pop    esp
  41ac4e:	test   eax,0x472ce38d
  41ac53:	dec    edi
  41ac54:	pop    esp
  41ac55:	lahf   
  41ac56:	scas   eax,DWORD PTR es:[edi]
  41ac57:	add    BYTE PTR [ecx-0x5e],0xe3
  41ac5b:	jmp    0x41acbd
  41ac5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac5e:	push   ss
  41ac5f:	mov    ecx,0x851e1750
  41ac64:	dec    edx
  41ac65:	xor    BYTE PTR [edi-0x9],bl
  41ac68:	ins    DWORD PTR es:[edi],dx
  41ac69:	mov    ch,0x90
  41ac6b:	pop    ds
  41ac6c:	loopne 0x41ac05
  41ac6e:	cs shr ebx,1
  41ac71:	in     eax,dx
  41ac72:	stos   DWORD PTR es:[edi],eax
  41ac73:	or     al,0x83
  41ac75:	popf   
  41ac76:	mov    si,0xc725
  41ac7a:	test   edx,esp
  41ac7c:	dec    eax
  41ac7d:	sbb    dl,al
  41ac7f:	xchg   eax,eax
  41ac81:	add    BYTE PTR [edi],0x4d
  41ac84:	in     al,dx
  41ac85:	cmp    DWORD PTR [ebx+0x659300cc],esi
  41ac8b:	adc    DWORD PTR [ecx],ebx
  41ac8d:	retf   0xbcdd
  41ac90:	jo     0x41aca6
  41ac92:	and    eax,DWORD PTR [eax*4-0x3014a6d2]
  41ac99:	leave  
  41ac9a:	sbb    eax,0xf1ed8975
  41ac9f:	gs pop ss
  41aca1:	nop
  41aca2:	sub    al,0xe4
  41aca4:	mov    ds:0x7c6f72fd,al
  41aca9:	jae    0x41acb1
  41acab:	mov    ecx,0x76462551
  41acb0:	and    ebx,DWORD PTR [eax-0x5c]
  41acb3:	xchg   ebx,eax
  41acb4:	inc    eax
  41acb5:	popf   
  41acb6:	or     DWORD PTR [ecx-0x78],0x19f6887e
  41acbd:	cwde   
  41acbe:	aam    0x32
  41acc0:	call   0x9585ed80
  41acc5:	lock xor eax,0x8bd2bc8f
  41accb:	js     0x41ace7
  41accd:	or     dh,dh
  41accf:	xchg   ebp,eax
  41acd0:	fst    DWORD PTR [ebx+0x14d71c43]
  41acd6:	ss cmp eax,0x43096b64
  41acdc:	inc    ecx
  41acdd:	in     eax,dx
  41acde:	mov    ds:0xade28711,al
  41ace3:	jle    0x41ac90
  41ace5:	out    0x9,al
  41ace7:	inc    ecx
  41ace8:	push   0x79
  41acea:	les    eax,FWORD PTR [eax+eiz*2]
  41aced:	(bad)  
  41acee:	push   0xa2cb1da
  41acf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acf4:	popa   
  41acf5:	scas   al,BYTE PTR es:[edi]
  41acf6:	neg    BYTE PTR [edi+0x2ea53a42]
  41acfc:	inc    ecx
  41acfd:	dec    esi
  41acfe:	or     ebp,DWORD PTR [eax+ebx*2]
  41ad01:	lods   al,BYTE PTR ds:[esi]
  41ad02:	add    al,0x35
  41ad04:	sbb    DWORD PTR ds:0xf974eef,0xffffffc0
  41ad0b:	add    eax,0x89f2086c
  41ad10:	shl    DWORD PTR [ecx+0x6a],cl
  41ad13:	adc    eax,0xf4f67a2a
  41ad18:	sub    BYTE PTR [ecx],bh
  41ad1a:	sahf   
  41ad1b:	mov    cl,0xac
  41ad1d:	cs mov bl,0x36
  41ad20:	sbb    eax,0xb6982ea2
  41ad25:	jmp    0x82f1:0xbb4a0d85
  41ad2c:	dec    esi
  41ad2d:	outs   dx,BYTE PTR ds:[esi]
  41ad2e:	ins    DWORD PTR es:[edi],dx
  41ad2f:	xchg   dl,bh
  41ad31:	xlat   BYTE PTR ds:[ebx]
  41ad32:	clc    
  41ad33:	(bad)  
  41ad34:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41ad36:	(bad)  
  41ad37:	xchg   ecx,eax
  41ad38:	jno    0x41ad92
  41ad3a:	fxch   st(3)
  41ad3c:	stos   DWORD PTR es:[edi],eax
  41ad3d:	jl     0x41ada4
  41ad3f:	or     ebp,edx
  41ad41:	and    al,0xca
  41ad43:	loope  0x41ad04
  41ad45:	xor    eax,0x6cbbdfc
  41ad4a:	sub    ah,BYTE PTR [edi+0x309d0428]
  41ad50:	jnp    0x41ad26
  41ad52:	dec    ecx
  41ad53:	xchg   ebx,esp
  41ad55:	mov    dl,0xf1
  41ad57:	pop    edx
  41ad58:	add    DWORD PTR ds:0xc7044fc4,edi
  41ad5e:	outs   dx,BYTE PTR ds:[esi]
  41ad5f:	push   0x748c1e38
  41ad64:	cs scas eax,DWORD PTR es:[edi]
  41ad66:	rcl    DWORD PTR [eax-0x7f],cl
  41ad69:	das    
  41ad6a:	test   al,0x4f
  41ad6c:	cmc    
  41ad6d:	in     al,dx
  41ad6e:	dec    ebx
  41ad6f:	cmp    cl,bh
  41ad71:	dec    eax
  41ad72:	(bad)  
  41ad73:	in     al,0x6e
  41ad75:	popa   
  41ad76:	pop    edx
  41ad77:	dec    esi
  41ad78:	out    dx,al
  41ad79:	push   ds
  41ad7a:	ror    DWORD PTR [edi],1
  41ad7c:	ins    DWORD PTR es:[edi],dx
  41ad7d:	inc    ebx
  41ad7e:	pop    ebx
  41ad7f:	lock push 0x1051decd
  41ad85:	and    esp,esp
  41ad87:	cmp    bl,ch
  41ad89:	dec    esp
  41ad8a:	(bad)  
  41ad8b:	mov    ebp,0xf8515b93
  41ad90:	ror    DWORD PTR ds:0x39c19e73,cl
  41ad96:	xor    cl,BYTE PTR [ebx]
  41ad98:	sahf   
  41ad99:	neg    DWORD PTR [ebx+0x48]
  41ad9c:	pop    ecx
  41ad9d:	pop    ss
  41ad9e:	adc    eax,0x161dd472
  41ada3:	xor    eax,0xcd887c60
  41ada8:	mov    ch,0xb1
  41adaa:	(bad)  
  41adab:	pop    ebp
  41adac:	push   ecx
  41adad:	push   edx
  41adae:	or     eax,0xd00bcaf9
  41adb3:	push   ss
  41adb4:	dec    esp
  41adb5:	scas   eax,DWORD PTR es:[edi]
  41adb6:	int3   
  41adb7:	(bad)  
  41adb8:	loopne 0x41add6
  41adba:	fistp  WORD PTR [esi-0x6f393ef2]
  41adc0:	inc    ecx
  41adc1:	bound  ecx,QWORD PTR [edi+eax*4-0x36d5a25d]
  41adc8:	lea    esi,[edi+0x1b]
  41adcb:	push   0xffffffef
  41adcd:	cmp    al,0x98
  41adcf:	das    
  41add0:	retf   0x6faf
  41add3:	xor    al,0x84
  41add5:	add    al,0x24
  41add7:	sub    esi,ebp
  41add9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adda:	pusha  
  41addb:	mov    al,bh
  41addd:	sub    al,0xa1
  41addf:	xor    DWORD PTR [eax-0x7f009faa],ebx
  41ade5:	dec    ecx
  41ade6:	loope  0x41ae45
  41ade8:	push   ss
  41ade9:	xchg   esi,eax
  41adea:	sub    BYTE PTR [edx-0x781fbd1d],cl
  41adf0:	nop
  41adf1:	leave  
  41adf2:	iret   
  41adf3:	pushw  ds
  41adf5:	push   ss
  41adf6:	shl    DWORD PTR [edx+0x0],0xcf
  41adfa:	addr16 ss push ecx
  41adfd:	out    dx,al
  41adfe:	test   al,0x5b
  41ae00:	mov    dh,0xc9
  41ae02:	add    al,0x29
  41ae04:	mov    ds:0x96c202c,eax
  41ae09:	bound  ecx,QWORD PTR [ebx+0x7a]
  41ae0c:	ds jg  0x41ae5f
  41ae0f:	jb     0x41ada1
  41ae11:	and    al,0x64
  41ae13:	gs in  eax,dx
  41ae15:	sbb    edx,ecx
  41ae17:	outs   dx,DWORD PTR ds:[esi]
  41ae18:	xchg   esp,eax
  41ae19:	out    dx,eax
  41ae1a:	adc    ah,bh
  41ae1c:	retf   
  41ae1d:	loopne 0x41ae53
  41ae1f:	cmp    dl,BYTE PTR [ecx-0x74dcba4d]
  41ae25:	mov    BYTE PTR [esi+ebp*2-0x20],dl
  41ae29:	push   ebx
  41ae2a:	out    dx,al
  41ae2b:	jmp    0xde19:0xb748ecb5
  41ae32:	mov    ch,ch
  41ae34:	pusha  
  41ae35:	jle    0x41ae04
  41ae37:	jno    0x41aea3
  41ae39:	sub    cl,BYTE PTR [edi+0x5df851af]
  41ae3f:	adc    DWORD PTR [ebp+0x5af6fb7],esp
  41ae45:	lock inc ecx
  41ae47:	mov    bh,0x5f
  41ae49:	jle    0x41ae87
  41ae4b:	push   eax
  41ae4c:	pop    ebx
  41ae4d:	ss jmp 0x6b2685e6
  41ae53:	xor    al,0x2e
  41ae55:	or     bl,BYTE PTR [ebx+0x63]
  41ae58:	pop    ecx
  41ae59:	jb     0x41ae07
  41ae5b:	std    
  41ae5c:	sub    DWORD PTR [esi],ebp
  41ae5e:	ins    BYTE PTR es:[edi],dx
  41ae5f:	pop    esp
  41ae60:	in     eax,dx
  41ae61:	sbb    al,0xc5
  41ae63:	int    0x75
  41ae65:	dec    ebp
  41ae66:	sub    al,0x76
  41ae68:	in     eax,dx
  41ae69:	push   ebp
  41ae6a:	or     DWORD PTR [eax-0x54],0xffffffd0
  41ae6e:	nop
  41ae6f:	push   0xf482a377
  41ae74:	mov    ebp,0xc5f338e4
  41ae79:	sbb    dh,BYTE PTR [edx]
  41ae7b:	mov    esi,0xa5c4b9ae
  41ae80:	ins    BYTE PTR es:[edi],dx
  41ae81:	xor    ah,cl
  41ae83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae84:	mov    edi,0xd47fec4f
  41ae89:	sbb    BYTE PTR [ecx-0xf1f47da],dh
  41ae8f:	jno    0x41aef0
  41ae91:	or     ch,al
  41ae93:	add    ecx,ebx
  41ae95:	sar    DWORD PTR [edi],0x12
  41ae98:	fdiv   st,st(4)
  41ae9a:	inc    ecx
  41ae9b:	(bad)  [ecx-0x6e2d6f58]
  41aea1:	lods   eax,DWORD PTR ds:[esi]
  41aea2:	sub    DWORD PTR [edi],ebp
  41aea4:	mov    esi,DWORD PTR [eax+0x18966219]
  41aeaa:	out    0x3d,al
  41aeac:	lahf   
  41aead:	scas   al,BYTE PTR es:[edi]
  41aeae:	cmp    esp,DWORD PTR [edi-0x27]
  41aeb1:	jns    0x41aea6
  41aeb3:	mov    al,0xfc
  41aeb5:	fwait
  41aeb6:	mov    dl,0xab
  41aeb8:	gs jb  0x41af31
  41aebb:	fs xchg ecx,eax
  41aebd:	fidivr DWORD PTR [ecx-0x70]
  41aec0:	jecxz  0x41ae83
  41aec2:	fcomp  QWORD PTR [ebx+0x5a]
  41aec5:	add    eax,0x587b7dc2
  41aeca:	ds stos BYTE PTR es:[edi],al
  41aecc:	dec    edi
  41aecd:	ficomp DWORD PTR [ebx-0x71]
  41aed0:	cld    
  41aed1:	dec    ecx
  41aed2:	push   esp
  41aed3:	push   eax
  41aed4:	bound  ebx,QWORD PTR [edx-0x79]
  41aed7:	out    0x7a,al
  41aed9:	in     al,dx
  41aeda:	jns    0x41af23
  41aedc:	dec    edx
  41aedd:	inc    ecx
  41aede:	daa    
  41aedf:	test   DWORD PTR [ebp-0x5c],esp
  41aee2:	je     0x41af23
  41aee4:	shl    cl,1
  41aee6:	hlt    
  41aee7:	popf   
  41aee8:	mov    cs,WORD PTR [ebp-0x4083c604]
  41aeee:	or     BYTE PTR [ebp+0x140d8fa3],cl
  41aef4:	pusha  
  41aef5:	dec    ecx
  41aef6:	ins    BYTE PTR es:[edi],dx
  41aef7:	push   ds
  41aef8:	imul   ecx,DWORD PTR [edx+ebx*1-0x26],0xffffff97
  41aefd:	rcl    ebp,1
  41aeff:	in     eax,0xa7
  41af01:	(bad)  
  41af02:	int    0x7a
  41af04:	sar    BYTE PTR [ebp+0x7c],cl
  41af07:	push   ebp
  41af08:	lock cmp cl,BYTE PTR [ecx-0x1deb8072]
  41af0f:	or     ecx,DWORD PTR [edx+0x2c]
  41af12:	or     DWORD PTR [edi-0x2e],esi
  41af15:	push   edi
  41af16:	fcmove st,st(6)
  41af18:	jb     0x41aedf
  41af1a:	jo     0x41aeb3
  41af1c:	dec    edx
  41af1d:	mov    esp,0x8ac9cf7
  41af22:	add    al,0x15
  41af24:	jbe    0x41af8e
  41af26:	adc    BYTE PTR [esi],bh
  41af28:	scas   eax,DWORD PTR es:[edi]
  41af29:	pusha  
  41af2a:	xor    ebx,edi
  41af2c:	push   es
  41af2d:	push   edx
  41af2e:	sub    eax,0x3e042651
  41af33:	jbe    0x41af57
  41af35:	(bad)  [edx]
  41af37:	test   BYTE PTR [esi],dh
  41af39:	sbb    ecx,edx
  41af3b:	clc    
  41af3c:	xchg   ebx,eax
  41af3d:	(bad)  
  41af3e:	mov    ecx,0x48b3d933
  41af43:	mov    al,0xe4
  41af45:	and    eax,0x8d823e16
  41af4a:	ror    DWORD PTR [eax+edx*2+0x67d81610],1
  41af51:	test   DWORD PTR [ecx],ecx
  41af53:	pop    ebx
  41af54:	mov    edx,0x7479b399
  41af59:	ret    
  41af5a:	inc    edi
  41af5b:	ss xchg esp,eax
  41af5d:	adc    eax,0x0
  41af62:	add    BYTE PTR [eax],al
  41af64:	add    BYTE PTR [eax],al
  41af66:	jecxz  0x41af6e
  41af68:	add    DWORD PTR [edi-0x1b],esi
  41af6b:	ja     0x41af64
  41af6d:	xchg   esi,eax
  41af6e:	popf   
  41af6f:	mov    edx,0x7e2c648
  41af74:	ret    
  41af75:	(bad)  
  41af76:	fld    TBYTE PTR [eax+0x7200001]
  41af7c:	add    BYTE PTR [eax],al
  41af7e:	push   esi
  41af7f:	push   ss
  41af80:	ret    0xb0ee
  41af83:	rcl    BYTE PTR [ebx+esi*2+0x52],1
  41af87:	shl    BYTE PTR [ecx],0xe6
  41af8a:	dec    eax
  41af8b:	pop    ebx
  41af8c:	jecxz  0x41af4f
  41af8e:	mov    dl,0xba
  41af90:	call   0x49aa4850
  41af95:	mov    bh,0x39
  41af97:	test   BYTE PTR [eax+0x4817e05b],cl
  41af9d:	pop    ebp
  41af9e:	jp     0x41af65
  41afa0:	pmulhw mm5,QWORD PTR [eax]
  41afa3:	and    al,0x8b
  41afa5:	push   ecx
  41afa6:	push   eax
  41afa7:	cmp    esi,edi
  41afa9:	aam    0x44
  41afab:	popf   
  41afac:	sub    BYTE PTR [edx],bh
  41afae:	adc    al,bh
  41afb0:	mov    esi,0xcb68fe4f
  41afb5:	or     DWORD PTR [edi+0x60],ecx
  41afb8:	jne    0x41b00b
  41afba:	dec    esp
  41afbb:	sar    eax,0xf5
  41afbe:	pusha  
  41afbf:	cmp    eax,0x3b9b5ceb
  41afc4:	fist   DWORD PTR [eax+0x2f]
  41afc7:	out    dx,al
  41afc8:	mov    dl,0xe6
  41afca:	jb     0x41aff3
  41afcc:	test   DWORD PTR [ebx],edx
  41afce:	mov    WORD PTR [eax-0xdd1d579],ds
  41afd4:	add    eax,0xc1dafce5
  41afd9:	js     0x41aff2
  41afdb:	imul   eax,DWORD PTR [ebp-0x36],0x5d
  41afdf:	inc    ecx
  41afe0:	push   esp
  41afe1:	sub    bh,BYTE PTR [esi]
  41afe3:	xchg   esi,eax
  41afe4:	ins    DWORD PTR es:[edi],dx
  41afe5:	enter  0x2cf4,0xda
  41afe9:	inc    edi
  41afea:	push   edi
  41afeb:	pop    es
  41afec:	(bad)  
  41afed:	mov    esp,0x3c385969
  41aff2:	sub    edi,DWORD PTR [ebx]
  41aff4:	dec    ebx
  41aff5:	cwde   
  41aff6:	mov    ecx,0x54854e3c
  41affb:	pop    ds
  41affc:	adc    DWORD PTR [edi+0x30cfab80],esp
  41b002:	ins    BYTE PTR es:[edi],dx
  41b003:	dec    edx
  41b004:	cld    
  41b005:	jmp    0x41b018
  41b007:	outs   dx,BYTE PTR ds:[esi]
  41b008:	add    esp,DWORD PTR [ebx+0x220611a7]
  41b00e:	ins    BYTE PTR es:[edi],dx
  41b00f:	xor    dl,BYTE PTR [ebx+0x1f2114de]
  41b015:	xlat   BYTE PTR ds:[ebx]
  41b016:	aas    
  41b017:	mov    ebp,0x5ac096f
  41b01c:	push   esi
  41b01d:	xchg   esp,eax
  41b01e:	adc    BYTE PTR [ebx],ah
  41b020:	in     eax,dx
  41b021:	cmp    ebx,edx
  41b023:	push   0x2772fa01
  41b028:	xlat   BYTE PTR ds:[ebx]
  41b029:	jg     0x41b053
  41b02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b02c:	fidivr DWORD PTR [edi]
  41b02e:	inc    ebx
  41b02f:	call   0x21f0:0xa4d529c4
  41b036:	inc    eax
  41b037:	repnz imul edi,DWORD PTR [ebp+0x6d],0xffffffdf
  41b03c:	jb     0x41b028
  41b03e:	add    edi,DWORD PTR [ecx+0x5c]
  41b041:	cmp    cl,al
  41b043:	into   
  41b044:	iret   
  41b045:	pop    esp
  41b046:	lds    esp,FWORD PTR [edi+0x4c]
  41b049:	dec    esi
  41b04a:	push   ebp
  41b04b:	pop    edx
  41b04c:	mov    ebx,0x99db9e69
  41b051:	mov    ecx,0xf7f5689a
  41b056:	or     bl,BYTE PTR [edi+0x5b0d92b8]
  41b05c:	mov    al,ds:0x95c497b8
  41b061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b062:	test   DWORD PTR [ebp-0x4dfda999],eax
  41b068:	mov    ds:0x32e22507,al
  41b06d:	xor    al,ah
  41b06f:	or     DWORD PTR [ebx-0x9],eax
  41b072:	jp     0x41b076
  41b074:	xor    edi,edx
  41b076:	xchg   ecx,eax
  41b077:	add    ecx,DWORD PTR [esi-0x20]
  41b07a:	sahf   
  41b07b:	adc    eax,0xb06fa543
  41b080:	shl    DWORD PTR [ebx+0x5a649c4d],1
  41b086:	ror    DWORD PTR [ecx-0x6eed4e42],cl
  41b08c:	xor    DWORD PTR [ebx],0x795a8d69
  41b092:	call   0x247f10a4
  41b097:	push   es
  41b098:	stos   BYTE PTR es:[edi],al
  41b099:	clc    
  41b09a:	in     eax,0xc5
  41b09c:	enter  0x83e8,0x12
  41b0a0:	lea    ebx,[ecx]
  41b0a2:	loopne 0x41b0f7
  41b0a4:	or     eax,0xc5ac4c45
  41b0a9:	imul   ecx,ecx,0x43
  41b0ac:	add    dh,al
  41b0ae:	xchg   ecx,eax
  41b0af:	les    edi,FWORD PTR [eax]
  41b0b1:	jae    0x41b0cf
  41b0b3:	mov    gs,WORD PTR [ebx]
  41b0b5:	sbb    DWORD PTR [eax],ebp
  41b0b7:	test   eax,0x5f234c91
  41b0bc:	sub    ecx,DWORD PTR [ebp+0x4291fd60]
  41b0c2:	add    eax,0x4e37a305
  41b0c7:	adc    DWORD PTR [edi+0x6b4ffeff],ebx
  41b0cd:	jb     0x41b0a2
  41b0cf:	add    BYTE PTR [ecx+eiz*8-0x7d609488],bl
  41b0d6:	cmp    edx,DWORD PTR [edx+0x637eb2dd]
  41b0dc:	jnp    0x41b146
  41b0de:	out    0x15,eax
  41b0e0:	stos   BYTE PTR es:[edi],al
  41b0e1:	rol    DWORD PTR [edx+edx*1-0x360787ca],1
  41b0e8:	arpl   WORD PTR [ebx+0x2f],dx
  41b0eb:	inc    ebx
  41b0ec:	call   0x65ecb16d
  41b0f1:	jmp    0x7f5886d4
  41b0f6:	lahf   
  41b0f7:	jle    0x41b11e
  41b0f9:	fmul   st(0),st
  41b0fb:	pop    es
  41b0fc:	sub    dh,BYTE PTR [edx+esi*8+0xd3fb2ba]
  41b103:	test   bh,ch
  41b105:	jae    0x41b136
  41b107:	test   BYTE PTR [edx+ecx*1+0x1ee6ad83],dl
  41b10e:	pop    ds
  41b10f:	inc    esi
  41b110:	mov    ?,WORD PTR [ebx-0x79]
  41b113:	dec    esi
  41b114:	arpl   WORD PTR [ebp+0x3e],ax
  41b117:	add    BYTE PTR [esi],bl
  41b119:	call   0x1869:0xd65ecd54
  41b120:	mov    ebx,0xf6158a66
  41b125:	push   ds
  41b126:	mov    BYTE PTR [esi],0x2e
  41b129:	add    ebx,DWORD PTR [ebx+ebx*4-0x59]
  41b12d:	div    DWORD PTR [ebp+0x3726c208]
  41b133:	sahf   
  41b134:	adc    ecx,ecx
  41b136:	push   0x3aa03542
  41b13b:	aaa    
  41b13c:	call   edi
  41b13e:	into   
  41b13f:	das    
  41b140:	(bad)  
  41b141:	out    0xae,al
  41b143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b144:	dec    ebp
  41b145:	rcl    DWORD PTR ds:0x1928417,1
  41b14b:	push   0xfc8527dd
  41b150:	push   es
  41b151:	and    eax,0xc621fbf9
  41b156:	nop
  41b157:	inc    esp
  41b158:	fs push ds
  41b15a:	cld    
  41b15b:	push   eax
  41b15c:	push   eax
  41b15d:	sub    BYTE PTR [ebx+0x5],ah
  41b160:	pop    ecx
  41b161:	call   FWORD PTR [edx+eax*4]
  41b164:	shl    BYTE PTR [eax*1-0x30c687c4],cl
  41b16b:	mov    edi,0xeada6545
  41b170:	into   
  41b171:	cmp    al,0x34
  41b173:	outs   dx,BYTE PTR ds:[esi]
  41b174:	cmp    al,0xbd
  41b176:	mov    esi,ebx
  41b178:	(bad)  
  41b179:	jno    0x41b0fd
  41b17b:	pop    dx
  41b17d:	push   ecx
  41b17e:	test   eax,0x79340a64
  41b183:	lea    esi,[ecx+0x16]
  41b186:	enter  0x9b6a,0xf4
  41b18a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b18b:	call   0xdfd43825
  41b190:	jmp    0xaa6:0x430628aa
  41b197:	sub    al,0x3d
  41b199:	iret   
  41b19a:	pop    edi
  41b19b:	sbb    eax,0xc40be728
  41b1a0:	jle    0x41b177
  41b1a2:	inc    edi
  41b1a3:	les    ecx,FWORD PTR [edi-0x2f]
  41b1a6:	stc    
  41b1a7:	mov    ss,WORD PTR fs:[edi-0x14]
  41b1ab:	retf   
  41b1ac:	aam    0x82
  41b1ae:	sub    DWORD PTR [eax-0x78],esp
  41b1b1:	xor    edi,edx
  41b1b3:	push   ebp
  41b1b4:	ss pushw ss
  41b1b7:	add    al,0xfe
  41b1b9:	or     DWORD PTR ss:[ecx],ebp
  41b1bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1bd:	cmp    eax,0xe0755c3d
  41b1c2:	lods   al,BYTE PTR ds:[esi]
  41b1c3:	call   0x163:0xe539c0e3
  41b1ca:	(bad)  
  41b1cb:	mov    esi,0x8dac2d2e
  41b1d0:	push   DWORD PTR [ebx-0x53]
  41b1d3:	lea    esp,[ebp-0x12]
  41b1d6:	dec    edx
  41b1d7:	cmp    eax,0x8a29f496
  41b1dc:	ja     0x41b235
  41b1de:	out    dx,al
  41b1df:	dec    edi
  41b1e0:	lds    edx,FWORD PTR [ecx+0x1146ab1b]
  41b1e6:	shr    edi,cl
  41b1e8:	push   edi
  41b1e9:	test   BYTE PTR [edi+0x75],bh
  41b1ec:	outs   dx,BYTE PTR ds:[esi]
  41b1ed:	push   0xff97895
  41b1f2:	pop    ss
  41b1f3:	push   es
  41b1f4:	gs cld 
  41b1f6:	iret   
  41b1f7:	sti    
  41b1f8:	fwait
  41b1f9:	iret   
  41b1fa:	xor    ecx,esp
  41b1fc:	mov    ecx,0xa88c43fa
  41b201:	jmp    0x41b18a
  41b203:	lds    edi,FWORD PTR [ebp-0x3]
  41b206:	mov    WORD PTR [edx],?
  41b208:	aas    
  41b209:	pop    ebp
  41b20a:	mov    ds:0xee72d0a7,al
  41b20f:	lds    esi,FWORD PTR [ecx-0x7ae04d7d]
  41b215:	imul   eax,DWORD PTR [eax+0x56],0x17e6b3ce
  41b21c:	dec    esp
  41b21d:	adc    BYTE PTR [ebx],0x1f
  41b220:	popa   
  41b221:	jno    0x41b2a1
  41b223:	repnz sbb ecx,DWORD PTR [ecx-0x6e]
  41b227:	dec    eax
  41b228:	inc    ecx
  41b229:	cmp    eax,0xedc9ece
  41b22e:	xchg   esp,eax
  41b22f:	sub    eax,0xf2e0caf8
  41b234:	loopne 0x41b28b
  41b236:	mov    eax,0xaaa81571
  41b23b:	xchg   DWORD PTR [eax-0x4f],esi
  41b23e:	pop    ecx
  41b23f:	mov    esp,0xbe758faf
  41b244:	out    0xdb,eax
  41b246:	scas   al,BYTE PTR es:[edi]
  41b247:	inc    edx
  41b248:	ja     0x41b262
  41b24a:	push   0x56
  41b24c:	hlt    
  41b24d:	inc    edx
  41b24e:	test   eax,0xaf6bd9e5
  41b253:	sbb    eax,0xe0b2dbe9
  41b258:	jo     0x41b2c8
  41b25a:	cmp    eax,0xa84b2a81
  41b25f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b260:	mov    eax,0x1b93b1a1
  41b265:	cmp    al,0x79
  41b267:	pop    ebx
  41b268:	fld    QWORD PTR [esi-0x5d]
  41b26b:	push   edx
  41b26c:	leave  
  41b26d:	lods   eax,DWORD PTR ds:[esi]
  41b26e:	jecxz  0x41b228
  41b270:	or     dh,dh
  41b272:	xor    dh,cl
  41b274:	mov    esi,0x48876674
  41b279:	xor    DWORD PTR [eax-0x18],edx
  41b27c:	dec    esp
  41b27d:	bound  ebx,QWORD PTR [edx-0xe4c7d2c]
  41b283:	cli    
  41b284:	push   esi
  41b285:	test   ch,dh
  41b287:	push   esi
  41b288:	cmc    
  41b289:	xchg   esp,eax
  41b28a:	or     DWORD PTR [esi-0x3f7ae6ec],0xb663960b
  41b294:	shr    BYTE PTR [ecx+ebp*2-0x51],1
  41b298:	cmp    DWORD PTR [edx],ecx
  41b29a:	out    0x54,eax
  41b29c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b29d:	push   ebx
  41b29e:	cld    
  41b29f:	call   0x1d948f3
  41b2a4:	iret   
  41b2a5:	dec    edx
  41b2a6:	loop   0x41b311
  41b2a8:	inc    esp
  41b2a9:	xor    eax,0xec467eab
  41b2ae:	and    eax,DWORD PTR [edx]
  41b2b0:	fsub   DWORD PTR [eax-0x774de347]
  41b2b6:	popa   
  41b2b7:	inc    ebx
  41b2b8:	icebp  
  41b2b9:	and    al,0xca
  41b2bb:	mov    ebx,0xe2234448
  41b2c0:	shr    DWORD PTR [edi],1
  41b2c2:	jg     0x41b244
  41b2c4:	shr    BYTE PTR [ebx],1
  41b2c6:	retf   0xec02
  41b2c9:	push   ecx
  41b2ca:	imul   esp,ecx,0xf09c022b
  41b2d0:	fild   QWORD PTR [edx+0x68d790c0]
  41b2d6:	jnp    0x41b31d
  41b2d8:	jo     0x41b338
  41b2da:	shl    BYTE PTR [esi],cl
  41b2dc:	in     eax,dx
  41b2dd:	pushf  
  41b2de:	out    0x13,eax
  41b2e0:	fnsave [eax+ebx*1+0x3a6ae3]
  41b2e7:	in     al,0x45
  41b2e9:	push   esi
  41b2ea:	cld    
  41b2eb:	(bad)  
  41b2ed:	daa    
  41b2ee:	in     al,dx
  41b2ef:	or     edx,DWORD PTR [eax]
  41b2f1:	sahf   
  41b2f2:	outs   dx,DWORD PTR ds:[esi]
  41b2f3:	jl     0x41b348
  41b2f5:	or     ecx,ebx
  41b2f7:	retf   0xe375
  41b2fa:	xor    BYTE PTR [edi-0x1915f54c],0xf1
  41b301:	mov    ds:0x5d04ae34,eax
  41b306:	pop    ss
  41b307:	arpl   WORD PTR [ebx],di
  41b309:	and    DWORD PTR [ecx+0x1a17488c],eax
  41b30f:	cdq    
  41b310:	sbb    BYTE PTR [eax+0x287b38b9],0xc6
  41b317:	push   ecx
  41b318:	mov    bh,0xb8
  41b31a:	mov    ebx,DWORD PTR [eax+0x514d76d4]
  41b320:	xchg   dh,ch
  41b322:	cmp    BYTE PTR ds:[ecx+0x2a],cl
  41b326:	iret   
  41b327:	rol    BYTE PTR [ebx+0x7fba1475],cl
  41b32d:	(bad)  
  41b32e:	push   0x1ccb08ea
  41b333:	dec    ecx
  41b334:	dec    esi
  41b335:	or     ebp,DWORD PTR [ebp+0x22]
  41b338:	jge    0x41b3b6
  41b33a:	add    eax,0x2998f9ca
  41b33f:	adc    DWORD PTR [edx+0x59],ebp
  41b342:	or     DWORD PTR [edx],0xfffffffc
  41b345:	jp     0x41b36a
  41b347:	add    ch,BYTE PTR [edx-0x4272b2ef]
  41b34d:	push   esi
  41b34e:	in     al,dx
  41b34f:	lock in al,dx
  41b351:	scas   al,BYTE PTR es:[edi]
  41b352:	push   esp
  41b353:	push   edx
  41b354:	ror    DWORD PTR ds:0xa874a085,0x2e
  41b35b:	aam    0x6b
  41b35d:	stc    
  41b35e:	sti    
  41b35f:	mov    ds:0xf887f198,al
  41b364:	scas   eax,DWORD PTR es:[edi]
  41b365:	sahf   
  41b366:	repz sub DWORD PTR [ebx-0x4ba4bd22],ecx
  41b36d:	xor    edi,DWORD PTR [edi]
  41b36f:	popa   
  41b370:	test   al,0x84
  41b372:	stos   BYTE PTR es:[edi],al
  41b373:	ss jne 0x41b331
  41b376:	imul   ecx,DWORD PTR [edx],0xf2b23c84
  41b37c:	shl    BYTE PTR [esi+0x3705fbe4],cl
  41b382:	sbb    eax,0x7055018
  41b387:	ret    
  41b388:	cwde   
  41b389:	and    esi,edi
  41b38b:	ror    DWORD PTR [edx],cl
  41b38d:	mov    ebx,edi
  41b38f:	push   0x37
  41b391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b392:	xchg   esi,eax
  41b393:	push   cs
  41b394:	nop
  41b395:	pop    ebx
  41b396:	rcr    BYTE PTR ds:0xd792ab44,cl
  41b39c:	mov    DWORD PTR [esi],edx
  41b39e:	xchg   ecx,eax
  41b39f:	push   es
  41b3a0:	rol    DWORD PTR [eax+0x43de7469],cl
  41b3a6:	inc    ebp
  41b3a7:	stos   DWORD PTR es:[edi],eax
  41b3a8:	out    dx,al
  41b3a9:	mov    dl,0xa5
  41b3ab:	and    edi,DWORD PTR [ecx-0x71]
  41b3ae:	pop    edx
  41b3af:	rcl    ah,0xb3
  41b3b2:	fistp  QWORD PTR [esi+0x2f]
  41b3b5:	cmp    BYTE PTR [ebx],ah
  41b3b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3b8:	rol    esi,cl
  41b3ba:	sbb    BYTE PTR [edx+0x63ababc0],bl
  41b3c0:	xor    DWORD PTR ds:0xf988b24c,eax
  41b3c6:	dec    esi
  41b3c7:	(bad)  
  41b3c8:	push   ds
  41b3c9:	rcl    DWORD PTR [esi-0x4624510],cl
  41b3cf:	call   0xd639:0xe725ec8e
  41b3d6:	clc    
  41b3d7:	mov    ds:0x5027411e,al
  41b3dc:	test   edi,ecx
  41b3de:	jmp    0x41b3d9
  41b3e0:	xor    al,0x38
  41b3e2:	jecxz  0x41b40e
  41b3e4:	ins    BYTE PTR es:[edi],dx
  41b3e5:	mov    dh,0x45
  41b3e7:	sahf   
  41b3e8:	mov    ebp,0xf3ebff18
  41b3ed:	sbb    BYTE PTR [esp+edx*4-0x30179224],cl
  41b3f4:	mov    ecx,0xb0f265cb
  41b3f9:	sahf   
  41b3fa:	xchg   esp,eax
  41b3fb:	and    ebp,DWORD PTR ds:0xbfb93201
  41b401:	repz in eax,dx
  41b403:	push   ss
  41b404:	adc    edi,eax
  41b406:	xor    BYTE PTR [ecx-0x5a],dh
  41b409:	sbb    DWORD PTR [eax+0x2d860ab2],esp
  41b40f:	sub    esi,DWORD PTR [ebx-0x26]
  41b412:	dec    eax
  41b413:	cli    
  41b414:	or     esi,DWORD PTR [edi]
  41b416:	dec    edi
  41b417:	rcr    BYTE PTR [ebx],cl
  41b419:	xor    al,0x25
  41b41b:	nop
  41b41c:	xchg   edx,eax
  41b41d:	fnstsw WORD PTR [esi-0x429b4e9f]
  41b423:	xchg   DWORD PTR [eax],ebp
  41b425:	cs inc edi
  41b427:	lock outs dx,DWORD PTR ds:[esi]
  41b429:	sub    eax,0xd18d50f4
  41b42e:	repnz mov ds,WORD PTR [ebx-0x25f97f7b]
  41b435:	mov    dh,0x5
  41b437:	pushf  
  41b438:	inc    esi
  41b439:	cmp    cl,BYTE PTR [ebp+0x32]
  41b43c:	inc    esp
  41b43d:	jns    0x41b45e
  41b43f:	fwait
  41b440:	sbb    eax,0xc47d22b2
  41b445:	popf   
  41b446:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b448:	bound  esi,QWORD PTR [eax]
  41b44a:	ror    BYTE PTR [eax-0x60d89aa],cl
  41b450:	push   0xffffffde
  41b452:	jmp    0x581e8567
  41b457:	pop    es
  41b458:	pusha  
  41b459:	retf   
  41b45a:	jno    0x41b47c
  41b45c:	inc    esp
  41b45d:	pop    ecx
  41b45e:	mov    cl,0x73
  41b460:	cmc    
  41b461:	cdq    
  41b462:	fdivrp st(3),st
  41b464:	rcl    DWORD PTR [ecx],1
  41b466:	sbb    ebx,DWORD PTR [esi-0x4d]
  41b469:	test   DWORD PTR [edi+edx*8-0x2a],0x980fc93c
  41b471:	jnp    0x41b43b
  41b473:	std    
  41b474:	mov    eax,0x4b90974c
  41b479:	hlt    
  41b47a:	pop    ebp
  41b47b:	jecxz  0x41b416
  41b47d:	je     0x41b40f
  41b47f:	loopne 0x41b4b4
  41b481:	in     eax,0x86
  41b483:	inc    edi
  41b484:	inc    ebp
  41b485:	imul   edi,DWORD PTR [ecx-0x78],0xf6abd612
  41b48c:	in     eax,0xa6
  41b48e:	mov    al,0x9e
  41b490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b491:	fdivr  st,st(6)
  41b493:	stc    
  41b494:	loope  0x41b4bd
  41b496:	adc    BYTE PTR [edx-0xc],dl
  41b499:	das    
  41b49a:	rcl    BYTE PTR [eax+edi*1],1
  41b49d:	and    edi,DWORD PTR [ebp+0x9fa7064]
  41b4a3:	mov    bl,0x4
  41b4a5:	mov    ch,0xb2
  41b4a7:	fcomi  st,st(7)
  41b4a9:	adc    BYTE PTR [ebx+0x40],ah
  41b4ac:	fwait
  41b4ad:	cmp    al,0xc4
  41b4af:	or     al,0x13
  41b4b1:	shl    BYTE PTR [edx-0x34],0xe1
  41b4b5:	xor    al,0x95
  41b4b7:	les    ebx,FWORD PTR [ecx]
  41b4b9:	rcl    BYTE PTR [ebx-0x7379c4c7],cl
  41b4bf:	dec    edx
  41b4c0:	inc    ecx
  41b4c1:	ret    0x520b
  41b4c4:	sub    DWORD PTR [edx+0x5723a1e5],eax
  41b4ca:	mov    cl,0xc3
  41b4cc:	inc    ebp
  41b4cd:	add    BYTE PTR [edx+0x2b],dl
  41b4d0:	popf   
  41b4d1:	adc    DWORD PTR ds:0xbfc98507,ebx
  41b4d7:	push   0xffffffb3
  41b4d9:	push   ebx
  41b4da:	test   dh,bh
  41b4dc:	js     0x41b4b2
  41b4de:	mov    dl,0x6e
  41b4e0:	xchg   esi,eax
  41b4e1:	xor    eax,0xc098ec0c
  41b4e6:	mov    bl,0x51
  41b4e8:	sbb    dl,BYTE PTR [edx-0x43a4e659]
  41b4ee:	push   edi
  41b4ef:	ss cmp al,0xde
  41b4f2:	mov    dh,0xb4
  41b4f4:	lods   eax,DWORD PTR ds:[esi]
  41b4f5:	dec    ecx
  41b4f6:	bound  edx,QWORD PTR [ebx]
  41b4f8:	in     al,0x1e
  41b4fa:	test   BYTE PTR ds:0xb6162dc9,ch
  41b500:	mov    ah,0x84
  41b502:	push   edx
  41b503:	cs jmp 0x8770:0x223780f1
  41b50b:	std    
  41b50c:	btc    DWORD PTR [esi+0x4e],ebp
  41b510:	scas   al,BYTE PTR es:[edi]
  41b511:	enter  0x3bdd,0xe7
  41b515:	repz fcomp QWORD PTR [esi+0x909e1f5]
  41b51c:	mov    eax,ds:0x20112e43
  41b521:	fisub  WORD PTR [ebp-0x6f693bf]
  41b527:	pop    ds
  41b528:	pusha  
  41b529:	mov    ds:0x6cf97780,eax
  41b52e:	(bad)  
  41b52f:	jecxz  0x41b504
  41b531:	pop    esi
  41b532:	xor    al,0x6e
  41b534:	sahf   
  41b535:	inc    eax
  41b536:	mov    ebx,0x911817fa
  41b53b:	popa   
  41b53c:	or     BYTE PTR [edx+0x28],bl
  41b53f:	xchg   esp,eax
  41b540:	jle    0x41b512
  41b542:	in     eax,dx
  41b543:	mov    dh,0x52
  41b545:	dec    esp
  41b546:	jl     0x41b56c
  41b548:	or     ch,cl
  41b54a:	xor    eax,0xab64f532
  41b54f:	xchg   edx,eax
  41b550:	dec    eax
  41b551:	fstp   QWORD PTR ds:0xd715f2da
  41b557:	int3   
  41b558:	jecxz  0x41b57e
  41b55a:	fcmovu st,st(6)
  41b55c:	repnz nop
  41b55e:	(bad)  
  41b55f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b560:	mov    WORD PTR [edx+0x614a4031],es
  41b566:	loopne 0x41b535
  41b568:	sub    edi,DWORD PTR [edi]
  41b56a:	daa    
  41b56b:	sbb    BYTE PTR [eax+0x67],cl
  41b56e:	jnp    0x41b5ea
  41b570:	retf   
  41b571:	cmp    esp,DWORD PTR [esi+ebx*2+0x71e8e7df]
  41b578:	aas    
  41b579:	mov    eax,ds:0x4df8455c
  41b57e:	push   ebx
  41b57f:	in     al,0xa2
  41b581:	dec    DWORD PTR [esi-0x563dbff1]
  41b587:	sub    DWORD PTR [ebp+0x51491daa],ebx
  41b58d:	xchg   BYTE PTR [esi+edx*1+0x56814bc0],bl
  41b594:	mov    WORD PTR [eax+0x5f5c1201],es
  41b59a:	std    
  41b59b:	sbb    ch,BYTE PTR [edi]
  41b59d:	push   edx
  41b59e:	and    BYTE PTR [esi+ecx*4-0x9],0x3d
  41b5a3:	sti    
  41b5a4:	cmp    DWORD PTR [edx],edi
  41b5a6:	jno    0x41b5c5
  41b5a8:	pop    ss
  41b5a9:	push   0x48c21d57
  41b5ae:	mov    edx,0xb81c4e80
  41b5b3:	sbb    cl,BYTE PTR ds:0xd8362428
  41b5b9:	jp     0x41b608
  41b5bb:	dec    ecx
  41b5bc:	mov    ebp,DWORD PTR [esi]
  41b5be:	push   ebp
  41b5bf:	(bad)  
  41b5c0:	xlat   BYTE PTR ds:[ebx]
  41b5c1:	xchg   esp,eax
  41b5c2:	mov    cl,0x14
  41b5c4:	imul   edi,DWORD PTR [ebx],0x9852f14c
  41b5ca:	jl     0x41b604
  41b5cc:	shr    DWORD PTR [eax-0x79cedfef],0x64
  41b5d3:	dec    edi
  41b5d4:	aad    0xb
  41b5d6:	inc    esi
  41b5d7:	cli    
  41b5d8:	add    dl,dl
  41b5da:	cmp    DWORD PTR [ebp+ecx*2-0x61],ebp
  41b5de:	xchg   edx,eax
  41b5df:	test   al,0xd7
  41b5e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5e2:	pop    edx
  41b5e3:	adc    eax,edi
  41b5e5:	dec    edx
  41b5e6:	and    DWORD PTR ds:0x6ccbfac5,ebp
  41b5ec:	ds ins DWORD PTR es:[edi],dx
  41b5ee:	or     BYTE PTR [eax+esi*8+0x63906d06],0x2f
  41b5f6:	test   BYTE PTR [edx],ah
  41b5f8:	jecxz  0x41b5fc
  41b5fa:	neg    ebx
  41b5fc:	cli    
  41b5fd:	std    
  41b5fe:	fimul  WORD PTR [ebx+0x14078fec]
  41b604:	sti    
  41b605:	mov    ah,0xc4
  41b607:	mov    ah,0x54
  41b609:	mov    dh,0xd0
  41b60b:	shl    BYTE PTR [ebx+0x4ae0ee5a],0x3f
  41b612:	or     eax,0x992ada61
  41b617:	inc    edi
  41b618:	jecxz  0x41b5f4
  41b61a:	add    bh,BYTE PTR [ebp+0x2e]
  41b61d:	scas   eax,DWORD PTR es:[edi]
  41b61e:	cdq    
  41b61f:	enter  0x7471,0x72
  41b623:	in     eax,0xf5
  41b625:	clc    
  41b626:	and    dh,dh
  41b628:	in     al,dx
  41b629:	add    al,0xca
  41b62b:	jnp    0x41b648
  41b62d:	xor    DWORD PTR [edi-0x24bd667c],0xffffffbd
  41b634:	stos   BYTE PTR es:[edi],al
  41b635:	std    
  41b636:	leave  
  41b637:	xchg   edx,eax
  41b638:	aam    0x2f
  41b63a:	repnz inc ecx
  41b63c:	(bad)  
  41b63d:	xor    eax,0x272871ca
  41b642:	(bad)  
  41b643:	sbb    esi,DWORD PTR [edx]
  41b645:	fwait
  41b646:	sti    
  41b647:	inc    ebp
  41b648:	imul   esi,ebx,0xc84e7441
  41b64e:	(bad)  
  41b650:	cmc    
  41b651:	in     eax,dx
  41b652:	sti    
  41b653:	jb     0x41b5e3
  41b655:	or     edx,eax
  41b657:	sti    
  41b658:	shl    BYTE PTR [eax+ecx*4-0x55],1
  41b65c:	out    0xd5,eax
  41b65e:	jmp    0x627e6fae
  41b663:	out    dx,al
  41b664:	mov    eax,0xfcc079f4
  41b669:	dec    esp
  41b66a:	mov    edi,0x29a6ac3d
  41b66f:	xchg   ebp,eax
  41b670:	pop    ebp
  41b671:	in     al,dx
  41b672:	sub    ah,al
  41b674:	in     al,dx
  41b675:	add    bh,0x90
  41b678:	lea    edx,[ecx]
  41b67a:	pushf  
  41b67b:	mov    dl,0xf6
  41b67d:	mov    eax,0x532406a5
  41b682:	pop    ebx
  41b683:	lahf   
  41b684:	push   esp
  41b685:	dec    edi
  41b686:	mov    eax,ds:0xdf0674ed
  41b68b:	sbb    dl,BYTE PTR [ebp-0x3d]
  41b68e:	cmp    eax,0xd5dab3b6
  41b693:	mov    dl,0x8
  41b695:	pop    edx
  41b696:	xchg   ecx,eax
  41b697:	cmp    ecx,DWORD PTR [ecx+0x20]
  41b69a:	shl    bh,0x5e
  41b69d:	dec    eax
	...
  41b6a6:	pushf  
  41b6a7:	sbb    al,bl
  41b6a9:	push   esi
  41b6aa:	(bad)  
  41b6ac:	sahf   
  41b6ad:	fidivr DWORD PTR [esi-0x64]
  41b6b0:	add    al,ah
  41b6b2:	sub    BYTE PTR [ebp-0x5],cl
  41b6b5:	loop   0x41b6b2
  41b6b7:	scas   eax,DWORD PTR es:[edi]
  41b6b8:	add    DWORD PTR [eax],eax
  41b6ba:	and    BYTE PTR [edi],al
  41b6bc:	add    BYTE PTR [eax],al
  41b6be:	shr    DWORD PTR [eax-0x6626e719],cl
  41b6c4:	push   es
  41b6c5:	adc    BYTE PTR [ebx+edi*2-0x2e94d8],ah
  41b6cc:	add    eax,0x532c8e7
  41b6d1:	add    bh,BYTE PTR [edi]
  41b6d3:	add    al,0xc5
  41b6d5:	cmp    cl,bh
  41b6d7:	call   0xf709:0x7b0a3b58
  41b6de:	sub    DWORD PTR [bp+si-0x73],ebx
  41b6e2:	popa   
  41b6e3:	fild   DWORD PTR [esi-0x54]
  41b6e6:	sub    dl,cl
  41b6e8:	push   ebx
  41b6e9:	outs   dx,DWORD PTR ds:[esi]
  41b6ea:	jae    0x41b750
  41b6ec:	and    cl,al
  41b6ee:	dec    ebp
  41b6ef:	fs pushf 
  41b6f1:	fstp   TBYTE PTR [ebx+0x30d246d5]
  41b6f7:	rol    DWORD PTR [ebx-0x79839145],cl
  41b6fd:	call   FWORD PTR ss:[edx-0x32fc81a2]
  41b704:	add    dh,bl
  41b706:	shl    DWORD PTR [ecx-0x34],cl
  41b709:	je     0x41b69f
  41b70b:	adc    ah,BYTE PTR [eax]
  41b70d:	push   eax
  41b70e:	mov    ch,0xe3
  41b710:	pop    esi
  41b711:	(bad)  
  41b712:	fwait
  41b713:	dec    ebx
  41b714:	lods   eax,DWORD PTR ds:[esi]
  41b715:	mov    edx,0x54ed9248
  41b71a:	mov    ecx,0x91dd1f5d
  41b720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b721:	sbb    dh,BYTE PTR [edx+0x4b]
  41b724:	call   0x6a73b90b
  41b729:	into   
  41b72a:	cmp    DWORD PTR [ebx],0xffa280f2
  41b730:	mov    ds:0x53f54570,al
  41b735:	shl    DWORD PTR [eax+esi*8],0x3d
  41b739:	(bad)  
  41b73a:	sbb    eax,DWORD PTR [ecx-0xf1cd2e6]
  41b740:	lock jg 0x41b7af
  41b743:	in     al,dx
  41b744:	outs   dx,DWORD PTR ds:[esi]
  41b745:	push   cs
  41b746:	xchg   edx,eax
  41b747:	ds xchg ebp,eax
  41b749:	push   esp
  41b74a:	arpl   WORD PTR [eax-0x6cd961a8],bx
  41b750:	xor    al,0xcf
  41b752:	inc    ebx
  41b753:	adc    ah,al
  41b755:	mov    bh,0x4e
  41b757:	(bad)  
  41b758:	pop    es
  41b759:	cmp    bh,cl
  41b75b:	fmul   DWORD PTR [esi-0x29]
  41b75e:	mov    ds,WORD PTR [ecx+eax*2+0x780e0f54]
  41b765:	sbb    ah,al
  41b767:	xchg   esi,eax
  41b768:	(bad)  
  41b769:	bound  ecx,QWORD PTR [ebx-0x9314ebd]
  41b76f:	js     0x41b70f
  41b771:	call   0x81bee55d
  41b776:	aad    0x2e
  41b778:	aam    0xf7
  41b77a:	cmc    
  41b77b:	lahf   
  41b77c:	addr16 cmc 
  41b77e:	sbb    DWORD PTR [edi+0x36f1a5f6],0xffffffdf
  41b785:	lods   eax,DWORD PTR ds:[esi]
  41b786:	sub    BYTE PTR [eax],al
  41b788:	sub    ah,bl
  41b78a:	fbld   TBYTE PTR [ecx+0x37]
  41b78d:	clc    
  41b78e:	jb     0x41b7a4
  41b790:	xchg   edx,eax
  41b791:	cld    
  41b792:	jge    0x41b730
  41b794:	sar    BYTE PTR [esi+0x26],1
  41b797:	in     eax,0x18
  41b799:	and    DWORD PTR [edx],esi
  41b79b:	or     al,0xe3
  41b79d:	hlt    
  41b79e:	iret   
  41b79f:	outs   dx,BYTE PTR ds:[esi]
  41b7a0:	or     eax,0xc2367f10
  41b7a5:	add    bh,BYTE PTR [ebx-0x7d]
  41b7a8:	retf   
  41b7a9:	je     0x41b7f2
  41b7ab:	fmul   st(4),st
  41b7ad:	ds fsub st(5),st
  41b7b0:	popa   
  41b7b1:	out    0xbf,eax
  41b7b3:	xlat   BYTE PTR ds:[ebx]
  41b7b4:	ins    DWORD PTR es:[edi],dx
  41b7b5:	pop    es
  41b7b6:	sub    BYTE PTR [ebx+esi*2+0x56],ch
  41b7ba:	pop    ecx
  41b7bb:	cmc    
  41b7bc:	ja     0x41b75b
  41b7be:	jecxz  0x41b7eb
  41b7c0:	lods   al,BYTE PTR ds:[esi]
  41b7c1:	cmp    DWORD PTR es:[eax-0x42155eaf],esp
  41b7c8:	sbb    BYTE PTR [ecx],cl
  41b7ca:	and    ebx,ebx
  41b7cc:	pop    esp
  41b7cd:	call   0x8d5ff981
  41b7d2:	sbb    eax,0x4ed8c1b6
  41b7d7:	mov    esi,0x416a0aac
  41b7dc:	sbb    eax,0x5a16cdab
  41b7e1:	add    DWORD PTR [ecx-0x5d],0x1a
  41b7e5:	and    cl,bh
  41b7e7:	test   eax,0x369635f8
  41b7ec:	mov    ds:0x615ec6cc,al
  41b7f1:	addr16 (bad) 
  41b7f3:	pop    ecx
  41b7f4:	in     eax,dx
  41b7f5:	xchg   ecx,eax
  41b7f6:	mov    ecx,0x1be96a67
  41b7fb:	imul   edi,DWORD PTR [edi+0x314a7bee],0x41
  41b802:	sub    eax,DWORD PTR [edx-0x5c]
  41b805:	add    eax,0xcd75af12
  41b80a:	test   DWORD PTR [edi-0x79],ecx
  41b80d:	(bad)  
  41b80e:	xor    DWORD PTR [edx+eax*4+0xc],esp
  41b812:	dec    ebx
  41b813:	iret   
  41b814:	push   edi
  41b815:	mov    WORD PTR [ebx-0x1e],?
  41b818:	ins    DWORD PTR es:[edi],dx
  41b819:	jae    0x41b875
  41b81b:	and    eax,0xef6e256f
  41b820:	dec    ebp
  41b821:	dec    esi
  41b822:	cld    
  41b823:	pop    ebp
  41b824:	fnstsw WORD PTR [eax+0x22]
  41b827:	pop    ebx
  41b828:	or     BYTE PTR [ebx-0x34],bh
  41b82b:	jne    0x41b87e
  41b82d:	and    eax,0x59cf2100
  41b832:	(bad)  
  41b833:	jo     0x41b881
  41b835:	jmp    0xd1fd:0x829d1e89
  41b83c:	add    eax,DWORD PTR [ebx-0x41aeb084]
  41b842:	lds    ecx,FWORD PTR [ebp-0x5d]
  41b845:	adc    DWORD PTR [esi+0x14],0x2e
  41b849:	not    BYTE PTR [edi]
  41b84b:	sahf   
  41b84c:	xchg   ecx,eax
  41b84d:	sahf   
  41b84e:	call   DWORD PTR [ebp-0x58]
  41b851:	mov    ds:0x64f5f710,eax
  41b856:	out    dx,eax
  41b857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b858:	dec    ebx
  41b859:	adc    BYTE PTR [ebx+0x3fe1f434],al
  41b85f:	popa   
  41b860:	ficomp DWORD PTR [ebx+0x10]
  41b863:	mov    bh,0x70
  41b865:	pop    edi
  41b866:	add    DWORD PTR [edi-0x54701548],edi
  41b86c:	fmul   DWORD PTR [ecx-0x6fc5623d]
  41b872:	ret    
  41b873:	inc    esp
  41b874:	bnd jmp 0xe4275877
  41b87a:	repnz in eax,dx
  41b87c:	and    BYTE PTR [esi],0xd0
  41b87f:	ins    BYTE PTR es:[edi],dx
  41b880:	test   al,0x6d
  41b882:	sub    ebx,ebx
  41b884:	push   0x31e1ba46
  41b889:	xchg   edi,eax
  41b88a:	ret    0xab74
  41b88d:	jecxz  0x41b864
  41b88f:	sahf   
  41b890:	int    0xca
  41b892:	xchg   edx,eax
  41b893:	sub    al,0xd6
  41b895:	xchg   ecx,eax
  41b896:	sub    eax,0x6ec7cf1f
  41b89b:	sbb    ch,BYTE PTR [edi]
  41b89d:	jl     0x41b86b
  41b89f:	jnp    0x41b8e9
  41b8a1:	jb     0x41b90f
  41b8a3:	outs   dx,DWORD PTR ds:[esi]
  41b8a4:	loope  0x41b890
  41b8a6:	hlt    
  41b8a7:	lock mov eax,ds:0x8b4627b6
  41b8ad:	jg     0x41b88a
  41b8af:	sbb    esp,edx
  41b8b1:	jo     0x41b844
  41b8b3:	jmp    0x41b896
  41b8b5:	lock test DWORD PTR [esi],ebx
  41b8b8:	imul   ecx,ebp,0x3358e039
  41b8be:	pop    ebx
  41b8bf:	mov    ds:0x30ed1e8,eax
  41b8c4:	mov    BYTE PTR [ebx],dh
  41b8c6:	ror    BYTE PTR [esi-0x192eabc6],0x7b
  41b8cd:	shl    ch,cl
  41b8cf:	jb     0x41b85d
  41b8d1:	aad    0xa4
  41b8d3:	jb     0x41b88e
  41b8d5:	test   BYTE PTR [ecx-0x4e044415],al
  41b8db:	clc    
  41b8dc:	les    ebp,FWORD PTR [eax-0x68]
  41b8df:	imul   ebx,DWORD PTR [edx+ebx*4-0x487d759f],0x9bdaaec6
  41b8ea:	mov    edi,0x8433a74b
  41b8ef:	test   BYTE PTR [eax+0x62],bh
  41b8f2:	lds    eax,FWORD PTR [esi-0x26]
  41b8f5:	push   ecx
  41b8f6:	loop   0x41b8fe
  41b8f8:	push   ecx
  41b8f9:	jmp    0x948:0xe43aa0a2
  41b900:	or     ch,BYTE PTR [ecx]
  41b902:	inc    edi
  41b903:	push   0x67
  41b905:	inc    esp
  41b906:	jmp    0x41b926
  41b908:	sub    DWORD PTR [eax],ebx
  41b90a:	(bad)  
  41b90b:	shl    DWORD PTR [edi+0x19],1
  41b90e:	push   es
  41b90f:	ins    BYTE PTR es:[edi],dx
  41b910:	pop    ss
  41b911:	push   esi
  41b912:	sbb    esp,DWORD PTR [edi]
  41b914:	and    DWORD PTR [ebx],ecx
  41b916:	or     eax,0x2e477c37
  41b91b:	ds (bad) 
  41b91e:	sub    al,0xa7
  41b920:	rcl    bl,cl
  41b922:	(bad)  
  41b924:	add    dh,al
  41b926:	out    0x9c,eax
  41b928:	loop   0x41b8fc
  41b92a:	mov    WORD PTR [eax-0x37],ss
  41b92d:	int    0x3a
  41b92f:	out    dx,al
  41b930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b931:	mov    DWORD PTR [ecx],edi
  41b933:	adc    ch,BYTE PTR [ecx]
  41b935:	mov    dl,0x23
  41b937:	push   ebx
  41b938:	stos   BYTE PTR es:[edi],al
  41b939:	or     DWORD PTR [edi+0x408817b],0xc9cc974e
  41b943:	out    dx,al
  41b944:	push   ss
  41b945:	or     eax,0xbef63b90
  41b94a:	jae    0x41b9cb
  41b94c:	mov    dh,0x13
  41b94e:	outs   dx,DWORD PTR ds:[esi]
  41b94f:	mov    ch,0xef
  41b951:	loop   0x41b970
  41b953:	ja     0x41b900
  41b955:	cs pop esi
  41b957:	fwait
  41b958:	stc    
  41b959:	jmp    0x41b918
  41b95b:	pop    ebp
  41b95c:	loope  0x41b9a1
  41b95e:	add    esi,DWORD PTR [edx-0x3]
  41b961:	push   edi
  41b962:	ret    
  41b963:	mov    edx,0x39e9811b
  41b968:	push   ecx
  41b969:	dec    eax
  41b96a:	sub    ebx,ebp
  41b96c:	mov    edi,0x9ea11ba1
  41b971:	mov    ecx,0x915e4e18
  41b976:	test   DWORD PTR [ecx-0x79fd0d95],0x1ccf9afa
  41b980:	in     eax,0xdb
  41b982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b983:	retf   0x695e
  41b986:	es ret 0xab5e
  41b98a:	sub    al,0xac
  41b98c:	sub    bl,BYTE PTR ds:0x2c78ae30
  41b992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b993:	adc    eax,0x9eddb4f5
  41b998:	test   BYTE PTR [ebx+0x23],al
  41b99b:	hlt    
  41b99c:	adc    DWORD PTR [ecx+0x54],ecx
  41b99f:	lea    edi,[eax]
  41b9a1:	adc    DWORD PTR [edi],ebx
  41b9a3:	das    
  41b9a4:	repz cmp BYTE PTR [edi-0x33],bl
  41b9a8:	popa   
  41b9a9:	mov    ds:0x5a838e12,eax
  41b9ae:	xor    ecx,esp
  41b9b0:	jg     0x41b966
  41b9b2:	pushf  
  41b9b3:	retf   
  41b9b4:	(bad)  
  41b9b5:	sbb    al,0x62
  41b9b7:	push   esi
  41b9b8:	test   al,0x90
  41b9ba:	cmp    ecx,ecx
  41b9bc:	test   BYTE PTR [ebx+0x2241296b],ah
  41b9c2:	ds jl  0x41ba01
  41b9c5:	in     al,0xa0
  41b9c7:	mov    ch,0x27
  41b9c9:	std    
  41b9ca:	xchg   esp,eax
  41b9cb:	mov    edx,0xc4b9075c
  41b9d0:	outs   dx,BYTE PTR ds:[esi]
  41b9d1:	ja     0x41b999
  41b9d3:	and    BYTE PTR [eax+0x55ff8e7d],dl
  41b9d9:	cmp    BYTE PTR [ebx+0x2cf94ddb],dl
  41b9df:	sub    DWORD PTR [ebx],edx
  41b9e1:	enter  0xc6b6,0x14
  41b9e5:	and    eax,DWORD PTR [ebx-0x7fd95a0d]
  41b9eb:	ret    
  41b9ec:	xor    bl,dl
  41b9ee:	adc    al,0x11
  41b9f0:	push   ds
  41b9f1:	shr    BYTE PTR [eax-0x74b0603c],0xf4
  41b9f8:	pop    edi
  41b9f9:	cmp    DWORD PTR [ecx-0x27],esp
  41b9fc:	mov    edx,0x9c082c8f
  41ba01:	adc    al,0xe9
  41ba03:	add    eax,0x2d446bb7
  41ba08:	dec    ecx
  41ba09:	and    al,0x1d
  41ba0b:	fs xchg esi,eax
  41ba0d:	imul   ecx,DWORD PTR [ebx*2+0x8c8d615],0xb7cbdaf4
  41ba18:	or     eax,0x387587da
  41ba1d:	(bad)  
  41ba1e:	dec    esi
  41ba1f:	ins    DWORD PTR es:[edi],dx
  41ba20:	popa   
  41ba21:	daa    
  41ba22:	(bad)  
  41ba23:	fwait
  41ba24:	ss push 0x1d7874d1
  41ba2a:	dec    esi
  41ba2b:	or     DWORD PTR [ebx-0x4d373706],edx
  41ba31:	jecxz  0x41ba2b
  41ba33:	in     al,0xc8
  41ba35:	xor    esi,ebp
  41ba37:	or     eax,0x5d8edca7
  41ba3c:	sub    BYTE PTR [ecx],ah
  41ba3e:	popa   
  41ba3f:	in     eax,dx
  41ba40:	les    ecx,FWORD PTR [edi+0x1e4befc6]
  41ba46:	ins    BYTE PTR es:[edi],dx
  41ba47:	dec    DWORD PTR [esi]
  41ba49:	rcr    DWORD PTR [eax+0x78aac45d],1
  41ba4f:	mov    ch,0xf5
  41ba51:	retf   0x1bf9
  41ba54:	mov    ebx,0xbc70d5cb
  41ba59:	xchg   ecx,eax
  41ba5a:	into   
  41ba5b:	sahf   
  41ba5c:	or     esp,edi
  41ba5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba5f:	fidiv  WORD PTR [ecx+0x52]
  41ba62:	pop    ecx
  41ba63:	cmp    al,0xa8
  41ba65:	inc    eax
  41ba66:	mov    eax,DWORD PTR [ebx]
  41ba68:	lea    edx,[edx+0x19]
  41ba6b:	pextrw ebx,mm1,0xa0
  41ba6f:	pop    eax
  41ba70:	inc    edx
  41ba71:	sbb    DWORD PTR [edx-0x284cfd9e],ecx
  41ba77:	jl     0x41ba5f
  41ba79:	shl    DWORD PTR [ebx],cl
  41ba7b:	retf   0x9f60
  41ba7e:	add    al,bl
  41ba80:	clc    
  41ba81:	es out 0x24,al
  41ba84:	retf   
  41ba85:	jmp    0x232bfef4
  41ba8a:	test   al,0xd8
  41ba8c:	rcl    DWORD PTR [esi+eiz*4],1
  41ba8f:	xchg   ebx,eax
  41ba90:	add    eax,0x9783b393
  41ba95:	fild   WORD PTR [edx]
  41ba97:	ror    BYTE PTR [edi+0x57d874d4],cl
  41ba9d:	sbb    BYTE PTR [esi-0x56],bl
  41baa0:	xchg   DWORD PTR [edx-0x1ece9fe0],esi
  41baa6:	push   ecx
  41baa7:	ret    
  41baa8:	push   0xae556c8f
  41baad:	cli    
  41baae:	or     al,0xc1
  41bab0:	mov    edi,0x636ee341
  41bab5:	or     eax,DWORD PTR ds:0xe91add0e
  41babb:	bound  ebp,QWORD PTR [ebp+0x66d61d6e]
  41bac1:	push   ebp
  41bac2:	mov    esp,0x836bf8c9
  41bac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bac8:	dec    esi
  41bac9:	pop    esp
  41baca:	cmp    ebx,DWORD PTR [esi]
  41bacc:	test   eax,0x4337da9a
  41bad1:	addr16 ret 0x27cd
  41bad5:	sti    
  41bad6:	movzx  edx,si
  41bad9:	popf   
  41bada:	mov    edx,0x9a83b78d
  41badf:	jecxz  0x41ba67
  41bae1:	push   ss
  41bae2:	push   0x26e404af
  41bae7:	ret    0x19d0
  41baea:	cdq    
  41baeb:	jmp    0xb5255b85
  41baf0:	xor    DWORD PTR ds:0xd291ba90,edi
  41baf6:	sbb    al,0x14
  41baf8:	jnp    0x41baac
  41bafa:	mov    esi,0xfefb0208
  41baff:	inc    edi
  41bb00:	jns    0x41bafc
  41bb02:	int3   
  41bb03:	push   0xffffffc0
  41bb05:	xor    eax,esp
  41bb07:	je     0x41baf3
  41bb09:	mov    DWORD PTR [edi-0xef267ac],esp
  41bb0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb10:	dec    esi
  41bb11:	bound  ebp,QWORD PTR [edi]
  41bb13:	xchg   esi,eax
  41bb14:	out    dx,eax
  41bb15:	jo     0x41bb0f
  41bb17:	scas   eax,DWORD PTR es:[edi]
  41bb18:	inc    eax
  41bb19:	les    edi,FWORD PTR [ecx]
  41bb1b:	mov    BYTE PTR [edx+0x426a6942],bl
  41bb21:	and    eax,0x23d260b9
  41bb26:	pop    edx
  41bb27:	stc    
  41bb28:	mov    cs,edi
  41bb2a:	fsubr  DWORD PTR ds:0xbdb7a464
  41bb30:	in     eax,0x55
  41bb32:	sbb    BYTE PTR [eax+edi*1],ch
  41bb35:	stos   BYTE PTR es:[edi],al
  41bb36:	sub    al,0x5
  41bb38:	repz pop ebp
  41bb3a:	xlat   BYTE PTR ds:[ebx]
  41bb3b:	cmp    eax,0x9671db05
  41bb40:	xor    dl,BYTE PTR [edx]
  41bb42:	cdq    
  41bb43:	dec    eax
  41bb44:	and    DWORD PTR [ebp+0x10882836],ecx
  41bb4a:	scas   al,BYTE PTR es:[edi]
  41bb4b:	jge    0x41bb99
  41bb4d:	out    0x19,al
  41bb4f:	scas   eax,DWORD PTR es:[edi]
  41bb50:	and    al,0x88
  41bb52:	pop    edx
  41bb53:	fisttp DWORD PTR [ebx]
  41bb55:	mov    eax,0x82a9b65a
  41bb5a:	fild   WORD PTR [ecx+0x262fd3c7]
  41bb60:	pop    edx
  41bb61:	inc    ebp
  41bb62:	mov    dh,0x85
  41bb64:	push   0xec7d4a6
  41bb69:	iret   
  41bb6a:	jnp    0x41baf8
  41bb6c:	and    ch,dl
  41bb6e:	sub    ch,BYTE PTR [esi+edx*8+0x29add4b2]
  41bb75:	adc    al,0x6d
  41bb77:	sub    eax,0xe833bffb
  41bb7c:	adc    eax,DWORD PTR [edi]
  41bb7e:	cmp    DWORD PTR [edi+0x24],esi
  41bb81:	daa    
  41bb82:	jle    0x41bb76
  41bb84:	jnp    0x41bba9
  41bb86:	push   0x34b1b4b1
  41bb8b:	and    al,0x31
  41bb8d:	push   edi
  41bb8e:	add    al,0x23
  41bb90:	xchg   DWORD PTR [edi*8+0x304cf43e],ebp
  41bb97:	movhlps xmm1,xmm3
  41bb9a:	shr    DWORD PTR [edi+0x3a],cl
  41bb9d:	fadd   st,st(1)
  41bb9f:	xchg   ebp,eax
  41bba0:	into   
  41bba1:	add    BYTE PTR [esp+edx*2+0x3c],0x84
  41bba6:	dec    eax
  41bba7:	and    esi,DWORD PTR [esi-0x47ddfab6]
  41bbad:	loop   0x41bb79
  41bbaf:	outs   dx,DWORD PTR ds:[esi]
  41bbb0:	jp     0x41bb5b
  41bbb2:	adc    eax,0xa8973ac2
  41bbb7:	popf   
  41bbb8:	ror    DWORD PTR [esi+ebx*2+0x788932c2],0x49
  41bbc0:	xchg   edi,eax
  41bbc1:	(bad)  
  41bbc2:	rcl    DWORD PTR [ecx-0x42],1
  41bbc5:	add    eax,0xb280da37
  41bbca:	fst    DWORD PTR [ecx-0x2f8a7873]
  41bbd0:	pop    edx
  41bbd1:	pop    ecx
  41bbd2:	inc    ecx
  41bbd3:	xchg   ebx,eax
  41bbd4:	pop    edi
  41bbd5:	ds aaa 
  41bbd7:	adc    ah,bh
  41bbd9:	jb     0x41bc16
  41bbdb:	jmp    0x41bbe3
  41bbdd:	lea    ebp,[ebx]
  41bbdf:	dec    edx
  41bbe0:	or     eax,0x7cbb1da5
  41bbe5:	xor    al,0xa0
  41bbe7:	mov    dh,0xb5
  41bbe9:	add    eax,0x9f8546c1
  41bbee:	and    edx,DWORD PTR [eax+ebx*1-0x9]
  41bbf2:	sub    eax,0xdbdab6d0
  41bbf7:	in     al,0xa2
  41bbf9:	call   0xa273:0xcefddfc4
  41bc00:	xchg   ecx,eax
  41bc01:	or     eax,0xc03fd3f7
  41bc06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc07:	and    DWORD PTR [eax-0x6d00cc54],eax
  41bc0d:	jo     0x41bc33
  41bc0f:	pushf  
  41bc10:	jo     0x41bc04
  41bc12:	xor    al,BYTE PTR [esi]
  41bc14:	and    al,0xfd
  41bc16:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41bc18:	retf   
  41bc19:	and    esi,esp
  41bc1b:	jnp    0x41bbfe
  41bc1d:	stos   DWORD PTR es:[edi],eax
  41bc1e:	and    al,BYTE PTR [edx+esi*8+0x33]
  41bc22:	mov    eax,ds:0x5f5dc76d
  41bc27:	xor    edx,esp
  41bc29:	mov    edi,0x83149683
  41bc2e:	(bad)  
  41bc2f:	lds    esp,FWORD PTR [esi+0x7edf1c05]
  41bc35:	xor    eax,0x80b111e5
  41bc3a:	mov    eax,0xa981213e
  41bc3f:	lahf   
  41bc40:	sbb    DWORD PTR [ebx+0x40],ecx
  41bc43:	dec    ecx
  41bc44:	lods   al,BYTE PTR ds:[esi]
  41bc45:	cmp    ebx,DWORD PTR [eax]
  41bc47:	cmp    dh,BYTE PTR [ebp-0x62]
  41bc4a:	in     eax,dx
  41bc4b:	push   edi
  41bc4c:	xor    eax,0x3179f826
  41bc51:	mov    eax,0x45086a41
  41bc56:	sub    al,0x96
  41bc58:	fisttp WORD PTR [esi]
  41bc5a:	dec    ecx
  41bc5b:	pop    esp
  41bc5c:	ss dec esi
  41bc5e:	sub    ecx,DWORD PTR [eax+0x5b7e05c2]
  41bc64:	push   ecx
  41bc65:	call   FWORD PTR [ebx]
  41bc67:	jmp    0xf86bdf8a
  41bc6c:	mov    al,BYTE PTR [eax-0x68]
  41bc6f:	push   esi
  41bc70:	imul   DWORD PTR ds:0x82e7a3d1
  41bc76:	test   eax,0xafc2b818
  41bc7b:	push   esi
  41bc7c:	rol    DWORD PTR [ecx-0x34c4cf0a],1
  41bc82:	test   bl,ch
  41bc84:	sub    al,ch
  41bc86:	loop   0x41bc55
  41bc88:	sub    BYTE PTR [eax+0x56c761ff],bl
  41bc8e:	ret    
  41bc8f:	test   eax,0xc5317670
  41bc94:	ss jmp 0xf18c:0x7e300ee0
  41bc9c:	ds sbb al,0x5
  41bc9f:	push   cs
  41bca0:	fwait
  41bca1:	jle    0x41bc66
  41bca3:	jl     0x41bcf9
  41bca5:	test   DWORD PTR [esi-0x1ecd2f76],edi
  41bcab:	popa   
  41bcac:	mov    ah,0xca
  41bcae:	cli    
  41bcaf:	sub    eax,0xe499b6b4
  41bcb4:	dec    edx
  41bcb5:	mov    al,ds:0xa54e067b
  41bcba:	xchg   esi,eax
  41bcbb:	inc    edx
  41bcbc:	lods   eax,DWORD PTR ds:[esi]
  41bcbd:	add    al,0xb1
  41bcbf:	jno    0x41bd04
  41bcc1:	push   ebx
  41bcc2:	jo     0x41bc74
  41bcc4:	dec    ebp
  41bcc5:	adc    BYTE PTR [ebp+0x7],0xc0
  41bcc9:	xor    edi,0x4d42585e
  41bccf:	std    
  41bcd0:	loopne 0x41bc78
  41bcd2:	mov    ecx,0x5d80001f
  41bcd7:	pop    ss
  41bcd8:	cdq    
  41bcd9:	or     edx,DWORD PTR [esi+edi*8-0x59d6a5ae]
  41bce0:	xor    ebp,DWORD PTR [ebp+0x78a5c92e]
  41bce6:	push   edx
  41bce7:	push   edx
  41bce8:	mov    dh,0x68
  41bcea:	xor    DWORD PTR [ebx+ebx*4+0x773263cb],0xffffffc4
  41bcf2:	retf   
  41bcf3:	leave  
  41bcf4:	lods   eax,DWORD PTR ds:[esi]
  41bcf5:	daa    
  41bcf6:	call   0xfea9:0xe757965a
  41bcfd:	inc    esp
  41bcfe:	stos   DWORD PTR es:[edi],eax
  41bcff:	and    BYTE PTR [edx+0x474ef0dd],0xb1
  41bd06:	lods   al,BYTE PTR ds:[esi]
  41bd07:	retf   
  41bd08:	cmc    
  41bd09:	aas    
  41bd0a:	lods   eax,DWORD PTR ds:[esi]
  41bd0b:	sti    
  41bd0c:	aad    0x1c
  41bd0e:	loopne 0x41bd66
  41bd10:	xor    al,0x77
  41bd12:	ins    BYTE PTR es:[edi],dx
  41bd13:	xchg   DWORD PTR [edi],esp
  41bd15:	pop    es
  41bd16:	cmc    
  41bd17:	mov    ah,BYTE PTR [eax+0xfe22459]
  41bd1d:	lods   al,BYTE PTR ds:[esi]
  41bd1e:	ret    0x5238
  41bd21:	aas    
  41bd22:	cmp    ebp,ebx
  41bd24:	mov    WORD PTR [esi-0x53e01e64],?
  41bd2a:	std    
  41bd2b:	sub    edi,ebp
  41bd2d:	push   esi
  41bd2e:	pop    ebx
  41bd2f:	data16 aad 0xd3
  41bd32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd33:	mov    bh,BYTE PTR [esi+0x49]
  41bd36:	mov    eax,0x3655aa7f
  41bd3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd3c:	loope  0x41bd92
  41bd3e:	dec    edi
  41bd3f:	fisub  WORD PTR [ebx+0x40]
  41bd42:	fcomp  DWORD PTR [ebx+edx*4]
  41bd45:	lea    edx,[bx+si]
  41bd48:	cld    
  41bd49:	jp     0x41bd1e
  41bd4b:	mov    ch,0xd0
  41bd4d:	sbb    bl,ah
  41bd4f:	sub    al,0x32
  41bd51:	rcr    BYTE PTR [ebx+0x5491812b],cl
  41bd57:	inc    ebx
  41bd58:	es mov esi,0x956394fe
  41bd5e:	arpl   dx,ax
  41bd60:	or     esp,DWORD PTR [esi+esi*1]
  41bd63:	daa    
  41bd64:	ss jo  0x41bd09
  41bd67:	fwait
  41bd68:	in     eax,0x39
  41bd6a:	sub    esi,0xa16e63d1
  41bd70:	imul   DWORD PTR [eax]
  41bd72:	retf   
  41bd73:	test   al,0x5d
  41bd75:	push   edx
  41bd76:	mov    bl,0xe5
  41bd78:	and    cl,al
  41bd7a:	fldcw  WORD PTR [edx]
  41bd7c:	push   es
  41bd7d:	add    BYTE PTR [ebx-0x6596bd8b],0xd2
  41bd84:	or     ah,0x96
  41bd87:	das    
  41bd88:	lea    edi,[eax+eiz*8]
  41bd8b:	jbe    0x41bd40
  41bd8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd8e:	and    DWORD PTR [eax+0x2921bb3c],ebx
  41bd94:	in     eax,dx
  41bd95:	mov    bl,0x38
  41bd97:	sub    DWORD PTR [esi+0x18e62ab8],esi
  41bd9d:	sahf   
  41bd9e:	jmp    0xd4b3:0x67531114
  41bda5:	fcmovnu st,st(0)
  41bda7:	pop    edi
  41bda8:	es call 0xb5b6:0xca3717b8
  41bdb0:	add    eax,0x224aaac4
  41bdb5:	test   BYTE PTR [ecx+0x1c],dh
  41bdb8:	int    0x3d
  41bdba:	inc    esp
  41bdbb:	ds jb  0x41bdd5
  41bdbe:	jp     0x41be11
  41bdc0:	ins    DWORD PTR es:[edi],dx
  41bdc1:	cld    
  41bdc2:	adc    DWORD PTR [ebx-0x22],esp
  41bdc5:	sbb    ebp,ecx
  41bdc7:	ja     0x41bd93
  41bdc9:	test   ah,dl
  41bdcb:	fs dec ecx
  41bdcd:	xor    al,al
  41bdcf:	dec    edi
  41bdd0:	fldenv [eax+0xc]
  41bdd3:	ss mov edi,0x595fa7c6
  41bdd9:	mov    esp,0xd70d4d99
	...
  41bde6:	arpl   WORD PTR [esi+0x63ff63be],bx
  41bdec:	call   FWORD PTR [esi-0x676d79db]
  41bdf2:	pop    ecx
  41bdf3:	push   cs
  41bdf4:	ficomp DWORD PTR gs:[ebx]
  41bdf7:	mov    bh,0x1
  41bdf9:	add    BYTE PTR [eax],ah
  41bdfb:	pop    es
  41bdfc:	add    BYTE PTR [eax],al
  41bdfe:	sub    bl,BYTE PTR [eax]
  41be00:	xor    ecx,DWORD PTR [ecx+0x62]
  41be03:	sbb    BYTE PTR [eax-0x5a],cl
  41be06:	cmc    
  41be07:	or     eax,0xb5b2756e
  41be0c:	mov    WORD PTR [esi+0x42e3d59b],ds
  41be12:	jae    0x41be5d
  41be14:	push   ebx
  41be15:	push   edi
  41be16:	call   DWORD PTR [ebp-0x64]
  41be19:	or     DWORD PTR [edx+0x1a],esi
  41be1c:	fs xchg esi,eax
  41be1e:	add    bh,bl
  41be20:	test   eax,0xefea1af3
  41be25:	ror    bh,cl
  41be27:	cmp    al,BYTE PTR [eax-0x1e]
  41be2a:	loopne 0x41bde6
  41be2c:	pop    gs
  41be2e:	test   DWORD PTR [eax],eax
  41be30:	(bad)  
  41be31:	xchg   edi,eax
  41be32:	jg     0x41be41
  41be34:	aaa    
  41be35:	pop    ds
  41be36:	lds    ebx,FWORD PTR [ebx]
  41be38:	icebp  
  41be39:	sub    eax,0x50772b86
  41be3e:	sbb    al,0x3e
  41be40:	int    0xba
  41be42:	out    dx,al
  41be43:	push   edi
  41be44:	out    dx,eax
  41be45:	(bad)  
  41be49:	adc    BYTE PTR [ebx-0x57cd6869],0xe6
  41be50:	push   es
  41be51:	aaa    
  41be52:	push   edx
  41be53:	jle    0x41be79
  41be55:	push   0x423b0e38
  41be5a:	(bad)  
  41be5b:	call   0x1bb:0x9e3bc55d
  41be62:	(bad)  
  41be63:	pop    esp
  41be64:	xchg   BYTE PTR [edi-0xf],dh
  41be67:	and    edi,DWORD PTR [ecx+0x7c]
  41be6a:	(bad)  
  41be6b:	mov    edx,0xa6746c33
  41be70:	ret    
  41be71:	loope  0x41be86
  41be73:	jbe    0x41be24
  41be75:	repnz push edi
  41be77:	int    0xc3
  41be79:	dec    ebx
  41be7a:	(bad)  
  41be7c:	or     eax,0xe901b79c
  41be81:	xlat   BYTE PTR ds:[ebx]
  41be82:	test   eax,0x4ec3f99e
  41be87:	adc    edx,DWORD PTR [eax+0x4090e8bd]
  41be8d:	div    BYTE PTR [ebx]
  41be8f:	sti    
  41be90:	xor    al,0x6a
  41be92:	test   al,0xee
  41be94:	mov    al,0x60
  41be96:	mov    esi,0xaf16c9b9
  41be9b:	scas   eax,DWORD PTR es:[edi]
  41be9c:	xchg   BYTE PTR [eax-0x65782917],dh
  41bea2:	(bad)  ds:0xd185edfc
  41bea8:	adc    al,0x11
  41beaa:	dec    ebx
  41beab:	adc    eax,0xdd0123d5
  41beb0:	mov    al,ds:0x53444472
  41beb5:	ins    BYTE PTR es:[edi],dx
  41beb6:	add    eax,0x77d41e
  41bebb:	xchg   DWORD PTR [esi+0x44ef59c0],ebp
  41bec1:	lods   eax,DWORD PTR ds:[esi]
  41bec2:	adc    al,0xc5
  41bec4:	add    esi,DWORD PTR [ebx+0x49]
  41bec7:	xchg   esp,eax
  41bec8:	fs aas 
  41beca:	mov    ebx,0xbf7942aa
  41becf:	xchg   esp,eax
  41bed0:	mov    ebp,0x28484d32
  41bed5:	stos   BYTE PTR es:[edi],al
  41bed6:	adc    al,0x9f
  41bed8:	or     ebx,DWORD PTR ds:0xf7c22ab
  41bede:	retf   0x84f3
  41bee1:	mov    dl,0x3a
  41bee3:	push   ecx
  41bee4:	mov    WORD PTR [ebp+0x2f],ds
  41bee7:	aam    0xa2
  41bee9:	sbb    al,bh
  41beeb:	out    dx,eax
  41beec:	aam    0xa7
  41beee:	sbb    ecx,DWORD PTR [esi-0x4a]
  41bef1:	and    BYTE PTR [eax+0x25],ch
  41bef4:	pop    esi
  41bef5:	(bad)  
  41bef6:	out    dx,eax
  41bef7:	loopne 0x41bf4b
  41bef9:	jmp    0xe9e7:0xd27295dc
  41bf00:	ins    BYTE PTR es:[edi],dx
  41bf01:	inc    esp
  41bf02:	(bad)  
  41bf03:	ds add dl,ch
  41bf06:	fstp   DWORD PTR [edi-0x57]
  41bf09:	and    ecx,DWORD PTR ds:0xc1f6c650
  41bf0f:	ss mov ch,0x53
  41bf12:	mov    ebp,0xbcc0da30
  41bf17:	mov    ah,0xde
  41bf19:	xor    DWORD PTR [eax],ecx
  41bf1b:	aam    0x8a
  41bf1d:	pop    ebp
  41bf1f:	(bad)  
  41bf20:	cli    
  41bf21:	sub    BYTE PTR [ebp+0x14e2175e],ah
  41bf27:	addr16 (bad) 
  41bf29:	shl    bh,1
  41bf2b:	push   ss
  41bf2c:	test   DWORD PTR [eax],eax
  41bf2e:	jle    0x41bf56
  41bf30:	mov    edx,cs
  41bf32:	jle    0x41beee
  41bf34:	pop    ss
  41bf35:	adc    DWORD PTR ds:0xe0c7edeb,esi
  41bf3b:	pushf  
  41bf3c:	jmp    0xeedd:0xac347d27
  41bf43:	mov    bl,0xb3
  41bf45:	or     BYTE PTR [ecx-0x27],ah
  41bf48:	lahf   
  41bf49:	dec    esi
  41bf4a:	cld    
  41bf4b:	or     BYTE PTR [edi-0x3d7ef6fa],dh
  41bf51:	push   ds
  41bf52:	int    0x9f
  41bf54:	or     esp,DWORD PTR [edi+eiz*2+0x5bdd5a5c]
  41bf5b:	xor    al,0x6d
  41bf5d:	ds retf 0x386a
  41bf61:	mov    ds:0x22aa3aed,eax
  41bf66:	add    esi,DWORD PTR ds:0xb5418919
  41bf6c:	adc    eax,0x2e5f7c36
  41bf71:	mov    ?,WORD PTR [edx+0x4c]
  41bf74:	adc    al,0x97
  41bf76:	pop    ss
  41bf77:	gs pop edx
  41bf79:	clc    
  41bf7a:	cmp    eax,0x75f8f51
  41bf7f:	in     eax,0x2c
  41bf81:	pusha  
  41bf82:	cmc    
  41bf83:	mov    dh,0x29
  41bf85:	jge    0x41c005
  41bf87:	mov    eax,ds:0xa993d88c
  41bf8c:	jge    0x41bfda
  41bf8e:	sub    ch,BYTE PTR [ebp-0x67]
  41bf91:	sub    al,0xcb
  41bf93:	dec    ebp
  41bf94:	adc    DWORD PTR [ebx],edi
  41bf96:	pop    esi
  41bf97:	xchg   esi,eax
  41bf98:	xchg   ebx,eax
  41bf99:	les    eax,FWORD PTR [edx]
  41bf9b:	or     BYTE PTR [eax+eiz*2-0x36fc6214],al
  41bfa2:	fdivr  st(4),st
  41bfa4:	pushf  
  41bfa5:	loope  0x41bf2f
  41bfa7:	or     al,BYTE PTR [eax]
  41bfa9:	shr    BYTE PTR [edx+0x1c37a4f2],cl
  41bfaf:	lods   al,BYTE PTR ds:[esi]
  41bfb0:	sub    DWORD PTR [eax-0xd6bbaae],ebx
  41bfb6:	adc    dh,BYTE PTR [edi-0x4b]
  41bfb9:	mov    edx,DWORD PTR [ebx+0xfd0d129]
  41bfbf:	and    eax,0x5286dee2
  41bfc4:	je     0x41bfa7
  41bfc6:	mov    cl,0x98
  41bfc8:	fsub   QWORD PTR [eax-0x2c7cad4e]
  41bfce:	add    al,0x62
  41bfd0:	(bad)  
  41bfd1:	dec    edx
  41bfd2:	sub    al,0xe8
  41bfd4:	(bad)  
  41bfd5:	and    al,0xd8
  41bfd7:	inc    edx
  41bfd8:	dec    ecx
  41bfd9:	shl    DWORD PTR [ecx-0x4f7b287e],1
  41bfdf:	inc    ebp
  41bfe0:	rcl    esi,1
  41bfe2:	in     al,dx
  41bfe3:	xlat   BYTE PTR ds:[ebx]
  41bfe4:	jns    0x41bf6e
  41bfe6:	scas   eax,DWORD PTR es:[edi]
  41bfe7:	mov    esp,0x49fd69b
  41bfec:	xor    ah,BYTE PTR [eax+0x53]
  41bfef:	push   ebx
  41bff0:	jge    0x41bfdb
  41bff2:	lahf   
  41bff3:	rol    BYTE PTR [eax],1
  41bff5:	xchg   edi,eax
  41bff6:	or     bh,BYTE PTR [ecx]
  41bff8:	jne    0x41bf93
  41bffa:	in     al,0x3f
  41bffc:	fnsave [esi+0x761a4df0]
  41c002:	cmc    
  41c003:	in     al,dx
  41c004:	std    
  41c005:	pop    ds
  41c006:	cmc    
  41c007:	mov    DWORD PTR [edi+0x7c78f103],esp
  41c00d:	ds int 0x21
  41c010:	inc    esp
  41c011:	cld    
  41c012:	mov    bl,0x72
  41c014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c015:	sub    DWORD PTR [ecx],edi
  41c017:	pop    edi
  41c018:	ret    0x8c3
  41c01b:	enter  0x946d,0x1a
  41c01f:	sbb    al,0x57
  41c021:	je     0x41c046
  41c023:	retf   
  41c024:	repnz pop esp
  41c026:	sbb    esp,DWORD PTR [eax-0x2648c0b8]
  41c02c:	inc    eax
  41c02d:	pop    edi
  41c02e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c02f:	test   cl,ch
  41c031:	into   
  41c032:	arpl   WORD PTR [ecx-0x700bd2a1],si
  41c038:	gs dec edx
  41c03a:	pop    es
  41c03b:	lahf   
  41c03c:	popf   
  41c03d:	ret    
  41c03e:	mov    ah,0x7a
  41c040:	push   ss
  41c041:	mov    edx,0xfa183367
  41c046:	outs   dx,DWORD PTR ds:[esi]
  41c047:	retf   
  41c048:	push   eax
  41c049:	mov    ebp,0x86b2dba7
  41c04e:	and    BYTE PTR [ecx],al
  41c050:	loopne 0x41c0d1
  41c052:	dec    ebx
  41c053:	or     ebp,DWORD PTR [ebx-0x72]
  41c056:	data16 sub BYTE PTR [edx+edi*8+0x2c],al
  41c05b:	fwait
  41c05c:	jnp    0x41bfe0
  41c05e:	in     eax,dx
  41c05f:	lds    ebx,FWORD PTR [ebx-0x20]
  41c062:	cmp    DWORD PTR [eax+edi*2],ebp
  41c065:	imul   ebx,DWORD PTR [eax],0xa5c3fd86
  41c06b:	test   DWORD PTR [esi+ebx*8+0x7c],edi
  41c06f:	sub    BYTE PTR [ebp-0x70d2023e],0x17
  41c076:	(bad)  
  41c077:	cwde   
  41c078:	dec    edx
  41c079:	and    eax,0xcd2d4875
  41c07e:	imul   edi,ecx,0xffffffce
  41c081:	cmp    dx,WORD PTR [esi]
  41c084:	xor    bh,dh
  41c086:	add    BYTE PTR [ebx+0x7c],bl
  41c089:	mov    bh,0x60
  41c08b:	cld    
  41c08c:	out    0x78,eax
  41c08e:	or     esi,ebx
  41c090:	cmp    BYTE PTR [edx-0x51debc0b],0xed
  41c097:	mov    cl,0xa9
  41c099:	ror    DWORD PTR [edi+ebp*2-0x353374a2],cl
  41c0a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0a1:	cld    
  41c0a2:	dec    eax
  41c0a3:	arpl   WORD PTR [ecx+0x6f],ax
  41c0a6:	stc    
  41c0a7:	fs retf 
  41c0a9:	xchg   DWORD PTR [ebx+ebx*2],ebp
  41c0ac:	add    ch,BYTE PTR [edi+0x1b]
  41c0af:	in     eax,0xf0
  41c0b1:	or     eax,0x3986656f
  41c0b6:	jmp    0xd4b9:0xc5d2e656
  41c0bd:	inc    ebx
  41c0be:	not    esp
  41c0c0:	div    DWORD PTR [esi-0xa92ef43]
  41c0c6:	mov    ds:0x786e07f0,al
  41c0cb:	or     ecx,DWORD PTR [ebx+0x3f3becb0]
  41c0d1:	ret    
  41c0d2:	cmp    DWORD PTR [esi+0xe],0x33
  41c0d6:	fldenv [edx-0x58e2f9f1]
  41c0dc:	mov    bh,0x10
  41c0de:	xchg   edi,eax
  41c0df:	(bad)
  41c0e4:	jle    0x41c096
  41c0e6:	out    dx,eax
  41c0e7:	fnstcw WORD PTR [esi-0x3b]
  41c0ea:	enter  0x60,0x31
  41c0ee:	in     al,0xa0
  41c0f0:	inc    DWORD PTR [ecx]
  41c0f2:	mov    dh,0x23
  41c0f4:	ja     0x41c09b
  41c0f6:	pop    es
  41c0f7:	aaa    
  41c0f8:	and    al,0x6a
  41c0fa:	dec    eax
  41c0fb:	rcr    BYTE PTR ss:[ecx],1
  41c0fe:	das    
  41c0ff:	xchg   ecx,eax
  41c100:	clc    
  41c101:	push   0x5
  41c103:	sbb    al,0x61
  41c105:	jl     0x41c17e
  41c107:	inc    esi
  41c108:	and    BYTE PTR [edx-0x4addfe45],ch
  41c10e:	imul   ebp,DWORD PTR [ecx+0x1d722fc6],0x7e
  41c115:	mov    dh,0x1c
  41c117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c118:	or     BYTE PTR [edi-0x6c217166],ch
  41c11e:	ficom  WORD PTR [esi]
  41c120:	repz xchg ecx,eax
  41c122:	gs loop 0x41c13c
  41c125:	aaa    
  41c126:	push   0xffffffe9
  41c128:	dec    ebx
  41c129:	add    eax,0x6052608b
  41c12e:	cdq    
  41c12f:	mov    esi,0x35fc98db
  41c134:	aam    0x65
  41c136:	outs   dx,BYTE PTR ds:[esi]
  41c137:	sti    
  41c138:	cwde   
  41c139:	int    0x46
  41c13b:	mov    ah,BYTE PTR [edi]
  41c13d:	pop    edi
  41c13e:	ins    DWORD PTR es:[edi],dx
  41c13f:	cmp    cl,cl
  41c141:	ja     0x41c1c1
  41c143:	sub    al,0xf6
  41c145:	jae    0x41c0f7
  41c147:	pop    es
  41c148:	aas    
  41c149:	xor    BYTE PTR [ecx],al
  41c14b:	stc    
  41c14c:	popf   
  41c14d:	xor    ecx,DWORD PTR [ebx-0x2c]
  41c150:	mov    ds:0xc8957b14,eax
  41c155:	not    BYTE PTR [ebp+esi*4-0x21]
  41c159:	mov    ch,0xa
  41c15b:	loopne 0x41c1c0
  41c15d:	les    esi,FWORD PTR [esi]
  41c15f:	lods   eax,DWORD PTR ds:[esi]
  41c160:	mov    ebp,0x305dfea5
  41c165:	mov    al,BYTE PTR [ebp-0xd]
  41c168:	sbb    ebp,DWORD PTR [eax+0x27]
  41c16b:	cs pop edx
  41c16d:	inc    ebx
  41c16e:	ins    BYTE PTR es:[edi],dx
  41c16f:	pop    esi
  41c170:	push   0xffffffab
  41c172:	dec    ax
  41c174:	mov    esp,DWORD PTR [edi+ebp*1]
  41c177:	ror    BYTE PTR [edi-0x3896d715],0x90
  41c17e:	cmc    
  41c17f:	mov    edx,0x474f88aa
  41c184:	lahf   
  41c185:	pop    es
  41c186:	sar    DWORD PTR [edx+0x5f615b71],1
  41c18c:	ret    
  41c18d:	std    
  41c18e:	push   0x0
  41c190:	xchg   edx,eax
  41c191:	adc    ch,BYTE PTR [ebp+edx*4-0x15]
  41c195:	mov    dh,0xe8
  41c197:	mul    DWORD PTR [ecx-0x45e5eb08]
  41c19d:	js     0x41c1a3
  41c19f:	jp     0x41c21a
  41c1a1:	pop    ebp
  41c1a2:	add    eax,0x338ef4ea
  41c1a7:	mov    eax,0xf90a06f2
  41c1ac:	fadd   st(5),st
  41c1ae:	loopne 0x41c141
  41c1b0:	xor    eax,0x686485da
  41c1b5:	mov    eax,ds:0x4c788c6c
  41c1ba:	aad    0x9d
  41c1bc:	loopne 0x41c218
  41c1be:	mov    ds:0x498d9cb8,eax
  41c1c3:	lea    edx,[ebp+0xd801dd9]
  41c1c9:	jecxz  0x41c170
  41c1cb:	xor    BYTE PTR [ebx+0xe],bl
  41c1ce:	jmp    0x41c1cd
  41c1d0:	mov    al,BYTE PTR [eax-0x2fffc144]
  41c1d6:	sub    eax,0xfcfb9172
  41c1db:	(bad)  
  41c1dc:	pushf  
  41c1dd:	add    al,0xa5
  41c1df:	add    eax,0x7d2577d3
  41c1e4:	xchg   ecx,eax
  41c1e5:	jp     0x41c1b7
  41c1e7:	mov    ah,0xdc
  41c1e9:	mov    ebp,0xc4285ae0
  41c1ee:	loopne 0x41c1cb
  41c1f0:	inc    ebx
  41c1f1:	mov    bh,0x53
  41c1f3:	cmp    edi,DWORD PTR [ecx+0x2b]
  41c1f6:	mov    bl,0x5d
  41c1f8:	or     al,BYTE PTR [edi+ebp*8-0x56d0167f]
  41c1ff:	aad    0x7a
  41c201:	xor    DWORD PTR [esi],esi
  41c203:	or     esp,esp
  41c205:	jp     0x41c19d
  41c207:	or     BYTE PTR [eax-0xc],ah
  41c20a:	push   eax
  41c20b:	or     bh,al
  41c20d:	xchg   BYTE PTR ss:[edx],bh
  41c210:	arpl   WORD PTR [ebx-0x384e37e4],si
  41c216:	scas   al,BYTE PTR es:[edi]
  41c217:	aaa    
  41c218:	mov    ch,0x7a
  41c21a:	sbb    ch,BYTE PTR [ebp-0x9]
  41c21d:	mov    ah,bl
  41c21f:	das    
  41c220:	(bad)  [eax-0x2]
  41c223:	mov    ebp,0x1c549d60
  41c228:	push   esi
  41c229:	mov    esp,0xfd3d52e8
  41c22e:	addr16 imul ecx,edi,0x4cf3b09
  41c235:	fisubr DWORD PTR [ebx-0x74]
  41c238:	aaa    
  41c239:	xchg   ebp,eax
  41c23a:	sbb    DWORD PTR [esi-0x48],ebp
  41c23d:	aam    0xc0
  41c23f:	sub    esp,DWORD PTR [ecx]
  41c241:	adc    al,0xe1
  41c243:	jge    0x41c25b
  41c245:	enter  0x8e56,0xe6
  41c249:	lea    edx,[eax*2+0x61b46aa6]
  41c250:	mov    ebx,0xed5b5377
  41c255:	in     eax,0xcf
  41c257:	sti    
  41c258:	popf   
  41c259:	fld    QWORD PTR [ecx-0x58e8dafd]
  41c25f:	xchg   ebx,eax
  41c260:	clc    
  41c261:	jbe    0x41c2cc
  41c263:	pushf  
  41c264:	sbb    DWORD PTR [ebx],ebx
  41c266:	adc    DWORD PTR [eax-0x29253b24],edx
  41c26c:	inc    ebp
  41c26d:	add    ecx,DWORD PTR [edx+0x4eb2406c]
  41c273:	(bad)  
  41c276:	xchg   ebx,eax
  41c277:	mov    esi,0x64d9216a
  41c27c:	loop   0x41c292
  41c27e:	shr    BYTE PTR [ebx+0x2f],0x62
  41c282:	(bad)  
  41c285:	inc    edi
  41c286:	xlat   BYTE PTR ds:[ebx]
  41c287:	imul   eax,DWORD PTR [ebx],0x8ac01641
  41c28d:	in     al,0xbd
  41c28f:	hlt    
  41c290:	mov    ds:0xa62954a3,al
  41c295:	cs or  esp,eax
  41c298:	mov    ch,0xf8
  41c29a:	adc    ch,dh
  41c29c:	jo     0x41c2a3
  41c29e:	arpl   WORD PTR [edi+0x13],cx
  41c2a1:	jecxz  0x41c25e
  41c2a3:	xchg   DWORD PTR [eax-0x30be244d],ebx
  41c2a9:	pushf  
  41c2aa:	iret   
  41c2ab:	inc    ebx
  41c2ac:	and    eax,0x92b3ffd5
  41c2b1:	sub    esi,ebp
  41c2b3:	rcr    DWORD PTR [ebx-0x50296a10],1
  41c2b9:	jp     0x41c303
  41c2bb:	test   eax,0x9da9f9bc
  41c2c0:	sbb    al,bl
  41c2c2:	dec    esi
  41c2c3:	shl    BYTE PTR [ebx+0x72],cl
  41c2c6:	cmp    eax,ebx
  41c2c8:	push   ss
  41c2c9:	out    0x3f,al
  41c2cb:	ins    BYTE PTR es:[edi],dx
  41c2cc:	frstor [ecx]
  41c2ce:	in     al,dx
  41c2cf:	inc    eax
  41c2d0:	ficomp WORD PTR [edi+ebp*4-0x8]
  41c2d4:	and    eax,0xfea7f892
  41c2d9:	frstor [edx+0x5c]
  41c2dc:	jmp    0x80f3fb53
  41c2e1:	jmp    0x41c2cb
  41c2e3:	ret    
  41c2e4:	scas   al,BYTE PTR es:[edi]
  41c2e5:	out    0x8,al
  41c2e7:	xchg   esp,eax
  41c2e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2e9:	jp     0x41c2ce
  41c2eb:	and    eax,0xc88f7cd0
  41c2f0:	xor    ebp,DWORD PTR [edx-0x35]
  41c2f3:	icebp  
  41c2f4:	and    edx,DWORD PTR [esi-0x54ee03af]
  41c2fa:	add    DWORD PTR [ebx+0x69072846],edx
  41c300:	jmp    0x6f3:0x8dae1a61
  41c307:	cmp    al,0xb5
  41c309:	das    
  41c30a:	lock dec ecx
  41c30c:	in     al,dx
  41c30d:	sbb    DWORD PTR [edx+0x6],eax
  41c310:	or     DWORD PTR [edi-0x62148c31],edi
  41c316:	in     al,0xf8
  41c318:	mov    gs,WORD PTR [eax+ecx*1]
  41c31b:	(bad)  
  41c31c:	repz and BYTE PTR [edi],dl
  41c31f:	int    0x1f
  41c321:	push   es
  41c322:	cmp    al,0x3d
  41c324:	or     eax,0x4b2723d4
  41c329:	sbb    eax,0x39a0aaf9
  41c32e:	ror    cl,1
  41c330:	cmp    BYTE PTR [ecx],bh
  41c332:	xchg   DWORD PTR [ebx-0x10],edx
  41c335:	push   ebx
  41c336:	adc    BYTE PTR ds:0x59bb64e,al
  41c33c:	ret    0x41e0
  41c33f:	push   edx
  41c340:	mov    bl,0x4c
  41c342:	aas    
  41c343:	jnp    0x41c31b
  41c345:	xor    al,BYTE PTR [esi]
  41c347:	(bad)  
  41c349:	pusha  
  41c34a:	push   esp
  41c34b:	repnz dec esp
  41c34d:	xor    eax,edi
  41c34f:	iret   
  41c350:	cwde   
  41c351:	and    BYTE PTR [edi+0x55451f60],dh
  41c357:	jmp    0x41c370
  41c359:	fstp   TBYTE PTR [ebp+0x55]
  41c35c:	shr    DWORD PTR [ecx-0x52],1
  41c35f:	xor    al,0x63
  41c361:	inc    ebx
  41c362:	mov    al,ds:0xa510a766
  41c367:	pop    eax
  41c369:	ret    0x4a8
  41c36c:	aam    0x52
  41c36e:	pop    ebx
  41c36f:	loope  0x41c3ae
  41c371:	inc    ebp
  41c372:	fnstenv [esi-0x764bb637]
  41c378:	lods   eax,DWORD PTR ds:[esi]
  41c379:	jmp    0xffd0:0x8547a22e
  41c380:	adc    eax,0x2316291c
  41c385:	pushf  
  41c386:	outs   dx,BYTE PTR ds:[esi]
  41c387:	int3   
  41c388:	dec    ebx
  41c389:	xor    DWORD PTR ds:0xe826fc17,eax
  41c38f:	js     0x41c357
  41c391:	daa    
  41c392:	sbb    al,dl
  41c394:	lock pop esp
  41c396:	aam    0x11
  41c398:	push   0x71
  41c39a:	(bad)  
  41c39b:	sub    eax,0xd2b971e9
  41c3a0:	or     DWORD PTR [ebp+0x28bb27fd],0xffffffee
  41c3a7:	sbb    bl,BYTE PTR [edi]
  41c3a9:	(bad)  
  41c3aa:	ja     0x41c3c7
  41c3ac:	inc    ebx
  41c3ad:	int3   
  41c3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3af:	xor    eax,0x82726d86
  41c3b4:	xor    dl,BYTE PTR fs:[edx+0x422ec0cd]
  41c3bb:	pop    ebx
  41c3bc:	cdq    
  41c3bd:	cmp    al,0xcb
  41c3bf:	nop
  41c3c0:	cmc    
  41c3c1:	jmp    0xe1507682
  41c3c6:	ror    DWORD PTR [ebx-0xbc9a9d6],0xbf
  41c3cd:	pop    ds
  41c3ce:	add    al,0x10
  41c3d0:	sbb    DWORD PTR [ecx+0x7dd7ec6c],esi
  41c3d6:	fcomp  DWORD PTR [edx+0x72]
  41c3d9:	or     eax,DWORD PTR ds:0x56e43c4b
  41c3df:	add    edi,DWORD PTR [eax]
  41c3e1:	stc    
  41c3e2:	aam    0x49
  41c3e4:	aad    0x10
  41c3e6:	inc    esp
  41c3e7:	pop    es
  41c3e8:	mov    cl,BYTE PTR [ebp-0x4b]
  41c3eb:	xor    eax,0x4ad8f174
  41c3f0:	xor    al,0x9f
  41c3f2:	ins    BYTE PTR es:[edi],dx
  41c3f3:	cld    
  41c3f4:	sub    dh,BYTE PTR [ecx+eiz*1+0x33]
  41c3f8:	outs   dx,BYTE PTR ds:[esi]
  41c3f9:	add    eax,esi
  41c3fb:	repnz push DWORD PTR [eax]
  41c3fe:	sbb    DWORD PTR [eax-0x5065b126],0x2d
  41c405:	mov    ecx,DWORD PTR [edi]
  41c407:	xchg   ebp,eax
  41c408:	xchg   esp,eax
  41c409:	mov    WORD PTR [esi],ds
  41c40b:	and    DWORD PTR [esi],0xffffff95
  41c40e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c40f:	mov    ah,0xea
  41c411:	jmp    0x9f845738
  41c416:	sub    al,0x53
  41c418:	loope  0x41c489
  41c41a:	adc    eax,0xf1386b6b
  41c41f:	inc    esi
  41c420:	xor    BYTE PTR [ebp-0x6b2ffadd],dl
  41c426:	icebp  
  41c427:	and    esp,edx
  41c429:	stc    
  41c42a:	fwait
  41c42b:	jne    0x41c3fa
  41c42d:	sbb    dh,BYTE PTR [ebx-0x49]
  41c430:	push   ds
  41c431:	loop   0x41c41b
  41c433:	lea    edx,[ebx+0x7b80e622]
  41c439:	push   ds
  41c43a:	test   eax,0x20d14944
  41c43f:	shl    dl,0x6d
  41c442:	int3   
  41c443:	loope  0x41c4b7
  41c445:	jmp    0xb0c7d932
  41c44a:	xchg   ecx,eax
  41c44b:	je     0x41c462
  41c44d:	cmp    al,0x5f
  41c44f:	inc    esi
  41c450:	mov    esp,0x2e8c1b76
  41c455:	push   ds
  41c456:	shl    al,0x96
  41c459:	js     0x41c4da
  41c45b:	nop
  41c45c:	call   0xcb70282f
  41c461:	mov    eax,ds:0xea0cccfb
  41c466:	adc    ebp,DWORD PTR [edi+0xf63e09]
  41c46c:	and    BYTE PTR [edx],cl
  41c46e:	lods   eax,DWORD PTR ds:[esi]
  41c46f:	ret    0xafbd
  41c472:	call   edx
  41c474:	cld    
  41c475:	and    ecx,DWORD PTR [edi-0x5b8c5f2b]
  41c47b:	inc    ecx
  41c47c:	xchg   esp,eax
  41c47d:	pop    ds
  41c47e:	add    eax,0x70060db3
  41c483:	test   al,0xdf
  41c485:	push   edi
  41c486:	dec    edi
  41c487:	dec    esi
  41c488:	popf   
  41c489:	mov    eax,ds:0x4abcde45
  41c48e:	scas   eax,DWORD PTR es:[edi]
  41c48f:	fistp  WORD PTR [esi-0x2ad72621]
  41c495:	cs adc eax,0xb988bcaa
  41c49b:	or     DWORD PTR [esi],0x42
  41c49e:	ds loopne 0x41c503
  41c4a1:	repnz cwde 
  41c4a3:	mov    edi,0xc4637a59
  41c4a8:	in     al,0x6d
  41c4aa:	push   esi
  41c4ab:	inc    ecx
  41c4ac:	jecxz  0x41c491
  41c4ae:	mov    ebx,0x828d4684
  41c4b3:	scas   eax,DWORD PTR es:[edi]
  41c4b4:	xchg   DWORD PTR [edx],ecx
  41c4b6:	jo     0x41c4cd
  41c4b8:	sbb    dh,BYTE PTR [ecx-0x76e75d81]
  41c4be:	and    dl,BYTE PTR [edi-0x68]
  41c4c1:	mov    al,ds:0x6c5a191f
  41c4c6:	jmp    0xa49ff5ea
  41c4cb:	es jecxz 0x41c4a0
  41c4ce:	cdq    
  41c4cf:	inc    DWORD PTR [ebp+0x7b]
  41c4d2:	(bad)  
  41c4d3:	xor    eax,0xc8776d47
  41c4d8:	inc    esp
  41c4d9:	dec    ebx
  41c4da:	mov    fs,WORD PTR [esp+ebp*1]
  41c4dd:	mov    esi,0x65d489bc
  41c4e2:	sbb    edi,eax
  41c4e4:	push   edi
  41c4e5:	dec    edx
  41c4e6:	imul   eax,DWORD PTR [eax+0xf8ef2b2],0x2bd06db2
  41c4f0:	bound  eax,QWORD PTR [edx+0x7f]
  41c4f3:	xor    edi,DWORD PTR [edi-0x14366eed]
  41c4f9:	iret   
  41c4fa:	sub    ecx,DWORD PTR [edi+esi*8-0x52e9df7c]
  41c501:	adc    eax,0x12e110dc
  41c506:	push   es
  41c507:	leave  
  41c508:	adc    dl,dl
  41c50a:	xchg   esi,eax
  41c50b:	data16 cli 
  41c50d:	int3   
  41c50e:	imul   edx,DWORD PTR [edi+0x45],0x1f
  41c512:	icebp  
  41c513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c514:	retf   0x60d7
  41c517:	dec    eax
  41c518:	mov    ecx,0x41c21abb
  41c51d:	xchg   esi,eax
	...
  41c526:	(bad)  
  41c527:	stc    
  41c528:	out    0xe3,eax
  41c52a:	(bad)  
  41c52b:	inc    edi
  41c52d:	std    
  41c52e:	fidivr WORD PTR [ebx]
  41c530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c531:	dec    esp
  41c532:	int    0x14
  41c534:	push   ebp
  41c535:	sar    BYTE PTR [ebx],1
  41c537:	mov    esi,0x7200001
  41c53c:	add    BYTE PTR [eax],al
  41c53e:	in     al,dx
  41c53f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c540:	in     eax,0xeb
  41c542:	jp     0x41c58b
  41c544:	xchg   ecx,eax
  41c545:	loope  0x41c53d
  41c547:	into   
  41c548:	(bad)  
  41c549:	cmp    al,0xbb
  41c54b:	mov    al,ds:0x1746db0a
  41c550:	fwait
  41c551:	xchg   edx,eax
  41c552:	dec    esp
  41c553:	xlat   BYTE PTR ds:[ebx]
  41c554:	push   edx
  41c555:	stc    
  41c556:	mov    dh,0xfb
  41c558:	jbe    0x41c54e
  41c55a:	jg     0x41c58a
  41c55c:	mov    ah,0xed
  41c55e:	jns    0x41c4fc
  41c560:	arpl   bx,si
  41c562:	addr16 int3 
  41c564:	lods   al,BYTE PTR ds:[esi]
  41c565:	retf   0xef7e
  41c568:	int    0x12
  41c56a:	aas    
  41c56b:	cmp    BYTE PTR [edi+0x1c],ah
  41c56e:	fdiv   st(6),st
  41c570:	repnz icebp 
  41c572:	fcomi  st,st(7)
  41c574:	retf   0x168
  41c577:	out    dx,eax
  41c578:	or     al,0x94
  41c57a:	jnp    0x41c582
  41c57c:	cmp    DWORD PTR [ebp+0x3a],esp
  41c57f:	cmc    
  41c580:	test   DWORD PTR [edi+0xa9c11dc],ecx
  41c586:	cmp    al,bh
  41c588:	sbb    dl,BYTE PTR [ecx-0x7f]
  41c58b:	push   esp
  41c58c:	add    ecx,eax
  41c58e:	and    eax,DWORD PTR [ebx-0x24]
  41c591:	(bad)  
  41c592:	xor    DWORD PTR [ebp+0x28],ebp
  41c595:	lds    ebp,FWORD PTR [ecx-0x39]
  41c598:	in     al,dx
  41c599:	(bad)  
  41c59a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c59b:	inc    ebp
  41c59c:	ja     0x41c522
  41c59e:	popa   
  41c59f:	or     ecx,DWORD PTR [ecx]
  41c5a1:	test   DWORD PTR [eax+edi*8-0x5e71c2a7],esi
  41c5a8:	push   ecx
  41c5a9:	ja     0x41c5f4
  41c5ab:	rol    BYTE PTR [edx],1
  41c5ad:	repz pop ebp
  41c5af:	xor    DWORD PTR [esi],ecx
  41c5b1:	out    0x3d,eax
  41c5b3:	sbb    edx,DWORD PTR [esi-0x60]
  41c5b6:	popf   
  41c5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b8:	cs cdq 
  41c5ba:	rol    BYTE PTR [ebp+0x4c609783],1
  41c5c0:	inc    esi
  41c5c1:	inc    edx
  41c5c2:	mov    al,ds:0x6bbdad99
  41c5c7:	sub    eax,0xe2e3c1e9
  41c5cc:	rol    BYTE PTR [esp+ebp*2-0x30],1
  41c5d0:	push   cs
  41c5d1:	push   edi
  41c5d2:	out    dx,eax
  41c5d3:	jo     0x41c572
  41c5d5:	adc    BYTE PTR [ebp+0x9],al
  41c5d8:	cdq    
  41c5d9:	mov    ecx,0x730540a1
  41c5de:	out    0xed,eax
  41c5e0:	pusha  
  41c5e1:	mov    edx,0x2accca1e
  41c5e6:	sbb    BYTE PTR [esi],bh
  41c5e8:	mov    eax,0xf8ff31b8
  41c5ed:	pop    ebp
  41c5ee:	jb     0x41c5fa
  41c5f0:	mov    edx,0xdaa7aa6d
  41c5f5:	inc    ebx
  41c5f6:	das    
  41c5f7:	gs xchg ebp,eax
  41c5f9:	in     eax,dx
  41c5fa:	cdq    
  41c5fb:	popa   
  41c5fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5fd:	in     eax,dx
  41c5fe:	lds    ebx,FWORD PTR [eax]
  41c600:	lock rol DWORD PTR [esi],1
  41c603:	cdq    
  41c604:	call   0x2cb8:0xfe48bbbb
  41c60b:	clc    
  41c60c:	cmp    eax,0x4b36289a
  41c611:	xor    eax,0x9f22d1d5
  41c616:	mov    ah,0x70
  41c618:	dec    esp
  41c619:	or     al,0x51
  41c61b:	push   0x78
  41c61d:	xchg   ebp,eax
  41c61e:	mov    ah,0x31
  41c620:	adc    al,0xb
  41c622:	jbe    0x41c615
  41c624:	dec    eax
  41c625:	dec    ecx
  41c626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c627:	add    BYTE PTR [ebx],0x7f
  41c62a:	mov    esi,0x8c35b643
  41c62f:	jle    0x41c67f
  41c631:	fwait
  41c632:	repnz lods al,BYTE PTR ds:[esi]
  41c634:	in     al,0x67
  41c636:	mov    al,0x9e
  41c638:	pop    esi
  41c639:	sub    BYTE PTR [eax-0x6e56aaaf],al
  41c63f:	inc    ebp
  41c640:	and    al,0xe6
  41c642:	mov    WORD PTR [esi-0x42dbf830],es
  41c648:	jbe    0x41c695
  41c64a:	jle    0x41c615
  41c64c:	inc    edx
  41c64d:	js     0x41c635
  41c64f:	lds    edi,FWORD PTR [eax]
  41c651:	js     0x41c66b
  41c653:	xchg   edi,eax
  41c654:	fwait
  41c655:	push   0xa5f7dd09
  41c65a:	mul    BYTE PTR [eax-0x63]
  41c65d:	loope  0x41c5ed
  41c65f:	mov    esp,DWORD PTR [ecx-0x14]
  41c662:	mov    ds:0x7c5da168,al
  41c667:	dec    esp
  41c668:	test   DWORD PTR [edi],edx
  41c66a:	sbb    cl,BYTE PTR [ebx+0x25edaf8c]
  41c670:	xchg   edx,eax
  41c671:	popf   
  41c672:	dec    ebp
  41c673:	add    cl,dh
  41c675:	les    edi,FWORD PTR [edx-0x7f6662b4]
  41c67b:	push   es
  41c67c:	xor    eax,0xd8f9f9bb
  41c681:	fisub  WORD PTR [ebp+0x14]
  41c684:	inc    ebp
  41c685:	imul   ebp,DWORD PTR [edi+eiz*8+0x43c36022],0x281e66b2
  41c690:	fnsave ds:0xdf1604cb
  41c696:	push   cs
  41c697:	ret    0x4ace
  41c69a:	inc    ecx
  41c69b:	push   esi
  41c69c:	in     al,0xbd
  41c69e:	fsub   QWORD PTR [ebx-0x27d89adc]
  41c6a4:	clc    
  41c6a5:	js     0x41c651
  41c6a7:	imul   esp,DWORD PTR [eax-0x728d9bba],0xffffffc5
  41c6ae:	shl    DWORD PTR [edx],cl
  41c6b0:	xor    ah,ah
  41c6b2:	std    
  41c6b3:	mov    ebp,DWORD PTR [edx+eiz*8+0x62bd8366]
  41c6ba:	ins    BYTE PTR es:[edi],dx
  41c6bb:	dec    edi
  41c6bc:	mov    ebx,0xcc84df82
  41c6c1:	call   0x7e84:0x9717b490
  41c6c8:	adc    eax,0x2c47e4fd
  41c6cd:	jmp    0x50f0:0x322edeb1
  41c6d4:	xor    al,0x14
  41c6d6:	sub    al,0xf
  41c6d8:	or     ebx,DWORD PTR [ebp+edx*4+0x27]
  41c6dc:	dec    esp
  41c6dd:	out    0xb7,al
  41c6df:	jecxz  0x41c6b8
  41c6e1:	pop    ds
  41c6e2:	jo     0x41c69c
  41c6e4:	jp     0x41c75b
  41c6e6:	cmp    DWORD PTR [eax],ecx
  41c6e8:	icebp  
  41c6e9:	xor    bl,al
  41c6eb:	addr16 mov ds:0xeb48,eax
  41c6ef:	jae    0x41c758
  41c6f1:	pop    es
  41c6f2:	pop    ebx
  41c6f3:	lock and ebx,edi
  41c6f6:	into   
  41c6f7:	es cmc 
  41c6f9:	mov    edi,?
  41c6fb:	stos   DWORD PTR es:[edi],eax
  41c6fc:	pushf  
  41c6fd:	icebp  
  41c6fe:	mov    ebx,0xc57d2913
  41c703:	jecxz  0x41c6c0
  41c705:	cs ss scas eax,DWORD PTR es:[edi]
  41c708:	push   cs
  41c709:	ins    BYTE PTR es:[edi],dx
  41c70a:	xor    ebp,edx
  41c70c:	cmp    bl,BYTE PTR [edi+0x13]
  41c70f:	jle    0x41c6bb
  41c711:	jp     0x41c6ff
  41c713:	mov    ds:0x6fed4ed8,eax
  41c718:	push   0xffffffba
  41c71a:	gs ss add esi,esi
  41c71e:	shl    BYTE PTR [ebx],cl
  41c720:	neg    BYTE PTR [eax-0x65]
  41c723:	fisub  DWORD PTR [edx+eiz*4+0x22]
  41c727:	ss (bad) 
  41c729:	pop    edi
  41c72a:	push   ecx
  41c72b:	ror    BYTE PTR [ebp+0x4d],cl
  41c72e:	iret   
  41c72f:	jns    0x41c6b7
  41c731:	out    dx,eax
  41c732:	sub    BYTE PTR [edi+0x74],0x67
  41c736:	push   ds
  41c737:	cmp    ah,BYTE PTR [eax+0x5f]
  41c73a:	xor    eax,0x174b452d
  41c73f:	mul    dl
  41c741:	push   ss
  41c742:	lahf   
  41c743:	test   eax,0x7008b70c
  41c748:	pop    ebp
  41c749:	push   ebx
  41c74a:	sub    bl,BYTE PTR [eax-0x59efb43c]
  41c750:	xchg   esp,eax
  41c751:	mov    ds:0xdd80fcc8,eax
  41c756:	jmp    0x8ec1edbd
  41c75b:	or     DWORD PTR [edx],edi
  41c75d:	push   ecx
  41c75e:	jl     0x41c74d
  41c760:	adc    eax,0x923d94b7
  41c765:	cld    
  41c766:	pop    esp
  41c767:	sub    eax,0x46f0de08
  41c76c:	mov    ebx,0x9b5a4cae
  41c771:	rcr    BYTE PTR [eax+0x26d7ea51],cl
  41c777:	fst    QWORD PTR [ebp-0x4d]
  41c77a:	mov    dl,BYTE PTR [esi+0x5b473773]
  41c780:	imul   edi,edx,0xffffffc9
  41c783:	cwde   
  41c784:	push   ebp
  41c785:	ret    
  41c786:	in     al,0xd0
  41c788:	jae    0x41c7b8
  41c78a:	or     dl,BYTE PTR [esi]
  41c78c:	mov    ebx,0xf8683022
  41c791:	(bad)  
  41c792:	cmp    dh,al
  41c794:	adc    bl,BYTE PTR [eax+ecx*4]
  41c797:	jmp    0x5ba9:0xd5da3427
  41c79e:	stos   BYTE PTR es:[edi],al
  41c79f:	out    0x86,al
  41c7a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7a2:	mov    bh,0x1b
  41c7a4:	and    eax,0x64a7200
  41c7a9:	inc    esp
  41c7aa:	shl    cl,cl
  41c7ac:	or     al,0xbe
  41c7ae:	int    0xc3
  41c7b0:	push   ebx
  41c7b1:	jo     0x3c64819d
  41c7b7:	cmp    DWORD PTR [ecx+0x2e],eax
  41c7ba:	fidivr WORD PTR [esi]
  41c7bc:	fdiv   QWORD PTR ds:0x668aef69
  41c7c2:	jb     0x41c7b3
  41c7c4:	mov    DWORD PTR [esi+0x487e5d1d],esp
  41c7ca:	xor    al,0xd3
  41c7cc:	arpl   WORD PTR [ebp+0x2],dx
  41c7cf:	jbe    0x41c77d
  41c7d1:	xchg   ecx,eax
  41c7d2:	das    
  41c7d3:	cmp    eax,0x64041127
  41c7d8:	sub    ebp,DWORD PTR [edi]
  41c7da:	test   eax,0x7e5f38b4
  41c7df:	cmp    ecx,DWORD PTR [eax+edi*4-0x17]
  41c7e3:	mov    ds:0x63ae877d,al
  41c7e8:	rcl    DWORD PTR [ecx],cl
  41c7ea:	sub    al,0x33
  41c7ec:	(bad)  
  41c7ed:	push   DWORD PTR [edx]
  41c7ef:	paddw  mm6,mm3
  41c7f2:	sbb    ebx,DWORD PTR [ebp-0x7e]
  41c7f5:	sbb    ecx,ecx
  41c7f7:	outs   dx,BYTE PTR ds:[esi]
  41c7f8:	xchg   ecx,eax
  41c7f9:	shr    BYTE PTR [esi-0x8],0x22
  41c7fd:	jbe    0x41c783
  41c7ff:	das    
  41c800:	and    al,BYTE PTR [ebx]
  41c802:	lahf   
  41c803:	mov    dl,0xf3
  41c805:	jnp    0x41c80d
  41c807:	ret    0xa580
  41c80a:	push   ecx
  41c80b:	sbb    eax,0xa7e40bf2
  41c810:	and    eax,0xc46755ab
  41c815:	pop    edx
  41c816:	addr16 xchg edx,eax
  41c818:	or     esp,DWORD PTR [ecx-0x19b08258]
  41c81e:	cmp    ebx,DWORD PTR [eax-0x2ebbc682]
  41c824:	stos   DWORD PTR es:[edi],eax
  41c825:	(bad)  
  41c827:	sub    DWORD PTR [esp+esi*1+0x10906d4],ebx
  41c82e:	xchg   BYTE PTR [ecx],ah
  41c830:	jle    0x41c7b3
  41c832:	icebp  
  41c833:	ins    DWORD PTR es:[edi],dx
  41c834:	sar    DWORD PTR [ebx],cl
  41c836:	xchg   ebp,eax
  41c837:	js     0x41c80f
  41c839:	rcl    BYTE PTR [esi-0x7c],0x88
  41c83d:	cwde   
  41c83e:	jns    0x41c80f
  41c840:	dec    ebx
  41c841:	inc    DWORD PTR [edi+0x2f]
  41c844:	pop    ebp
  41c845:	pusha  
  41c846:	jmp    0x57f8:0xd3a41230
  41c84d:	jae    0x41c88e
  41c84f:	adc    esi,eax
  41c851:	jp     0x41c7df
  41c853:	arpl   WORD PTR [edx],bp
  41c855:	mov    bh,0x88
  41c857:	push   ds
  41c858:	sbb    eax,0x7282a04
  41c85d:	push   ebx
  41c85e:	mov    al,0x90
  41c860:	and    eax,edi
  41c862:	adc    DWORD PTR [edi-0x72],0xffffffbd
  41c866:	ret    0xd3f1
  41c869:	inc    eax
  41c86a:	in     al,dx
  41c86b:	pop    eax
  41c86c:	xor    ebx,DWORD PTR [edx+0x68d39610]
  41c872:	jne    0x41c87c
  41c874:	scas   eax,DWORD PTR es:[edi]
  41c875:	mov    dh,0x17
  41c877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c878:	cmp    BYTE PTR ds:0x69e4de38,ah
  41c87e:	jmp    0x90d1:0xab28ca52
  41c885:	mov    al,0x14
  41c887:	fild   WORD PTR [esi]
  41c889:	je     0x41c850
  41c88b:	bswap  esp
  41c88d:	mov    ds:0x1764b055,eax
  41c892:	dec    esi
  41c893:	mov    eax,ds:0xebaaf652
  41c898:	(bad)  
  41c899:	push   eax
  41c89a:	jge    0x41c834
  41c89c:	ds js  0x41c8cb
  41c89f:	fld    TBYTE PTR [ebp-0x170d2a87]
  41c8a5:	jmp    0xad6e:0x45886329
  41c8ac:	sti    
  41c8ad:	mov    ecx,0x985e04ef
  41c8b2:	(bad)  
  41c8b3:	idiv   DWORD PTR [eax]
  41c8b5:	ins    BYTE PTR es:[edi],dx
  41c8b6:	ja     0x41c858
  41c8b8:	test   al,0x4
  41c8ba:	jb     0x41c8db
  41c8bc:	dec    edx
  41c8bd:	xchg   ebp,eax
  41c8be:	jmp    0x41c851
  41c8c0:	jle    0x41c8d6
  41c8c2:	dec    edi
  41c8c3:	iret   
  41c8c4:	and    eax,esp
  41c8c6:	push   ss
  41c8c7:	pop    esp
  41c8c8:	fdivr  DWORD PTR [eax+ebx*1-0x1e6c99e0]
  41c8cf:	les    ebx,FWORD PTR ss:[ecx-0x2810838a]
  41c8d6:	sbb    eax,0x470f34b9
  41c8db:	int3   
  41c8dc:	cmp    al,0xd4
  41c8de:	xchg   ebx,eax
  41c8df:	pop    ebp
  41c8e0:	aam    0x60
  41c8e2:	das    
  41c8e3:	lds    esi,FWORD PTR [edx]
  41c8e5:	cmp    al,0x72
  41c8e7:	lds    esi,FWORD PTR [eax+0x624104ff]
  41c8ed:	push   edi
  41c8ee:	stc    
  41c8ef:	lods   eax,DWORD PTR ds:[esi]
  41c8f0:	adc    ch,BYTE PTR [edx]
  41c8f2:	gs (bad) 
  41c8f5:	mov    esi,0xdd566531
  41c8fa:	outs   dx,DWORD PTR ds:[esi]
  41c8fb:	or     eax,DWORD PTR [ecx-0x585f9e73]
  41c901:	retf   0xbc50
  41c904:	xor    al,0x43
  41c906:	xor    al,0x45
  41c908:	cmp    dh,BYTE PTR [edi+eiz*4+0x21]
  41c90c:	lahf   
  41c90d:	fs cdq 
  41c90f:	ins    DWORD PTR es:[edi],dx
  41c910:	dec    esi
  41c911:	cld    
  41c912:	ret    
  41c913:	mov    cl,0x34
  41c915:	les    esi,FWORD PTR [ebp-0x16]
  41c918:	push   0x73
  41c91a:	les    edi,FWORD PTR [esi-0xbaf9ea2]
  41c920:	call   0xc9e4:0x161d3590
  41c927:	mov    bh,0x86
  41c929:	pop    ds
  41c92a:	ret    0x308
  41c92d:	jp     0x41c8f8
  41c92f:	xor    al,0xb6
  41c931:	ficom  WORD PTR [eax]
  41c933:	add    ah,BYTE PTR [ecx-0x6]
  41c936:	retf   
  41c937:	jne    0x41c933
  41c939:	xor    BYTE PTR [ebp-0x6557a6e1],0x35
  41c940:	cmp    eax,0xb81f330e
  41c945:	es icebp 
  41c947:	jno    0x41c940
  41c949:	dec    ebx
  41c94a:	adc    al,0x13
  41c94c:	mov    cs,WORD PTR [edx]
  41c94e:	popa   
  41c94f:	adc    al,0xd3
  41c951:	hlt    
  41c952:	xchg   DWORD PTR [esi],esi
  41c954:	sub    eax,0xdb27145
  41c959:	in     al,0x26
  41c95b:	pusha  
  41c95c:	mov    dl,0xda
  41c95e:	push   cs
  41c95f:	push   0x1b
  41c961:	add    al,0xca
  41c963:	jge    0x41c8f2
  41c965:	pop    eax
  41c966:	dec    esp
  41c967:	mov    dl,0x48
  41c969:	es stos BYTE PTR es:[edi],al
  41c96b:	(bad)  
  41c96c:	jecxz  0x41c941
  41c96e:	cmp    al,0x65
  41c970:	shr    ecx,0xc8
  41c973:	int3   
  41c974:	outs   dx,DWORD PTR ds:[esi]
  41c975:	xor    eax,0xa2d8d07
  41c97a:	jb     0x41c94e
  41c97c:	mov    ah,0x70
  41c97e:	push   esp
  41c97f:	les    ebx,FWORD PTR [ebp+0x11]
  41c982:	pusha  
  41c983:	and    edx,DWORD PTR [edx]
  41c985:	push   es
  41c986:	imul   ebp,DWORD PTR [ecx+0x6ab9e858],0xffffff83
  41c98d:	xchg   ebx,edx
  41c98f:	imul   ebp,esi,0xe94fb79b
  41c995:	cmc    
  41c996:	call   FWORD PTR ds:0xba4ef4b
  41c99c:	adc    BYTE PTR [ebp+0x272c0a9d],dl
  41c9a2:	cmc    
  41c9a3:	test   DWORD PTR [ecx],0x9168292d
  41c9a9:	mov    dh,0xc6
  41c9ab:	pop    ds
  41c9ac:	(bad)  
  41c9ad:	call   0x6207a241
  41c9b2:	clc    
  41c9b3:	mov    ecx,0xf8c4e97c
  41c9b8:	pop    ss
  41c9b9:	cmp    DWORD PTR [ebx+0xa],edx
  41c9bc:	mov    eax,ds:0x4a98ad39
  41c9c1:	adc    ch,BYTE PTR [edi]
  41c9c3:	gs enter 0xfd77,0x42
  41c9c8:	dec    edx
  41c9c9:	xor    DWORD PTR [eax-0x1c],ecx
  41c9cc:	scas   eax,DWORD PTR es:[edi]
  41c9cd:	aam    0x3e
  41c9cf:	xor    ah,BYTE PTR [eax+edi*2]
  41c9d2:	cwde   
  41c9d3:	neg    DWORD PTR ds:0xea166b9
  41c9d9:	shr    BYTE PTR [ebx],0x97
  41c9dc:	imul   esi,DWORD PTR [edx+0x31],0xafbdb421
  41c9e3:	test   BYTE PTR [esi-0x4f],0x5d
  41c9e7:	push   es
  41c9e8:	mov    es:0xe07a958b,al
  41c9ee:	aam    0xe3
  41c9f0:	aad    0x4b
  41c9f2:	mov    ds:0x38aac0a,al
  41c9f7:	xchg   esp,eax
  41c9f8:	or     al,0x69
  41c9fa:	pop    edx
  41c9fb:	sub    dh,BYTE PTR [ebx-0x47ac41b4]
  41ca01:	xchg   edi,eax
  41ca02:	lods   eax,DWORD PTR ds:[esi]
  41ca03:	sub    esp,DWORD PTR [ecx]
  41ca05:	inc    ebp
  41ca06:	pusha  
  41ca07:	mov    al,ds:0xe8b1cd61
  41ca0c:	fisubr WORD PTR [edx-0x1ac095ba]
  41ca12:	sub    eax,0x96d4f271
  41ca17:	aaa    
  41ca18:	aas    
  41ca19:	mov    DWORD PTR [ebp+0x52211dbd],edi
  41ca1f:	pop    ebp
  41ca20:	mov    ebp,0x2ea23dc4
  41ca25:	ins    BYTE PTR es:[edi],dx
  41ca26:	ja     0x41ca6a
  41ca28:	or     ebp,DWORD PTR [ecx]
  41ca2a:	test   eax,0xf0b6e1a3
  41ca2f:	inc    ebp
  41ca30:	repz jle 0x41c9c8
  41ca33:	fadd   st,st(2)
  41ca35:	dec    ebp
  41ca36:	retf   
  41ca37:	jmp    0x41ca1b
  41ca39:	icebp  
  41ca3a:	addr16 sub bl,dl
  41ca3d:	pop    edx
  41ca3e:	aam    0x61
  41ca40:	aas    
  41ca41:	fsub   QWORD PTR [ebp+0x4829e476]
  41ca47:	(bad)  
  41ca48:	xor    al,ah
  41ca4a:	icebp  
  41ca4b:	sub    al,0x65
  41ca4d:	fmul   st,st(4)
  41ca4f:	jnp    0x41ca20
  41ca51:	int    0xa4
  41ca53:	aaa    
  41ca54:	lock stos DWORD PTR es:[edi],eax
  41ca56:	test   eax,0xb3224d7b
  41ca5b:	mov    ecx,0x4cf294f6
  41ca60:	jecxz  0x41c9ef
  41ca62:	sub    DWORD PTR [ecx+0x15],ecx
  41ca65:	mov    edx,0x8ef51f39
  41ca6a:	(bad)  
  41ca6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca6c:	aam    0x81
  41ca6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca6f:	add    eax,0xa70748d4
  41ca74:	mov    ah,0x6e
  41ca76:	mov    edx,0xa1d42813
  41ca7b:	and    al,0xce
  41ca7d:	sub    BYTE PTR [eax+0x62],bh
  41ca80:	ret    0x43b9
  41ca83:	iret   
  41ca84:	mov    eax,0x34ddd255
  41ca89:	mov    esp,0x1c5530c
  41ca8e:	inc    esp
  41ca8f:	mov    ah,0x71
  41ca91:	jmp    0x1c9eade1
  41ca96:	sub    eax,0xbd0c67a
  41ca9b:	cmp    BYTE PTR ds:0xfc9aa3c2,dl
  41caa1:	ins    DWORD PTR es:[edi],dx
  41caa2:	push   esp
  41caa3:	dec    ebx
  41caa4:	arpl   WORD PTR [eax+esi*8],cx
  41caa7:	nop
  41caa8:	or     DWORD PTR [edx],edi
  41caaa:	inc    ebp
  41caab:	ins    BYTE PTR es:[edi],dx
  41caac:	adc    DWORD PTR [edi+0x4e],ebp
  41caaf:	mov    ebx,0xd097c317
  41cab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cab5:	retf   0x295
  41cab8:	pop    ss
  41cab9:	mov    edx,0xca4a5cee
  41cabe:	cmp    al,0x7f
  41cac0:	pop    esi
  41cac1:	push   cs
  41cac2:	ins    DWORD PTR es:[edi],dx
  41cac3:	scas   eax,DWORD PTR es:[edi]
  41cac4:	in     eax,0x58
  41cac6:	call   0x33fd:0x31eccc07
  41cacd:	fs cwde 
  41cacf:	cmp    DWORD PTR cs:[ebp+0x36],0x357e8e10
  41cad7:	cmp    edx,DWORD PTR [edi]
  41cad9:	ret    
  41cada:	test   eax,0xdbefb888
  41cadf:	loopne 0x41cb24
  41cae1:	addr16 jno 0x41cb61
  41cae4:	hlt    
  41cae5:	rcr    ebx,0xb9
  41cae8:	pop    esp
  41cae9:	pop    ebp
  41caea:	or     eax,0x8ba19c56
  41caef:	xchg   esi,eax
  41caf0:	daa    
  41caf1:	or     al,BYTE PTR [ebx]
  41caf3:	and    dh,bh
  41caf5:	mov    ah,BYTE PTR [ecx+eax*8+0x4f]
  41caf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cafa:	int    0x90
  41cafc:	out    dx,eax
  41cafd:	iret   
  41cafe:	icebp  
  41caff:	std    
  41cb00:	mov    DWORD PTR [ebx],ebx
  41cb02:	je     0x41cb42
  41cb04:	push   edi
  41cb05:	or     BYTE PTR [eax-0x4],ch
  41cb08:	mov    esi,0x17da8f45
  41cb0d:	push   ebp
  41cb0f:	sub    al,0xab
  41cb11:	dec    edi
  41cb12:	test   DWORD PTR [edi-0x36173c1b],0xee74657f
  41cb1c:	fimul  WORD PTR [ebp-0xb]
  41cb1f:	adc    al,0x35
  41cb21:	add    eax,0xa8d0485a
  41cb26:	sbb    edx,ecx
  41cb28:	aam    0xb1
  41cb2a:	daa    
  41cb2b:	xchg   ecx,eax
  41cb2c:	sbb    dh,cl
  41cb2e:	mov    ch,0xb3
  41cb30:	fisttp QWORD PTR [eax+0x15]
  41cb33:	mov    ebx,0x36096e5a
  41cb38:	and    eax,esp
  41cb3a:	jge    0x41caca
  41cb3c:	adc    BYTE PTR [ebp-0x4e1c9a02],0x99
  41cb43:	inc    eax
  41cb44:	repnz fmul QWORD PTR [esi]
  41cb47:	jecxz  0x41cbb4
  41cb49:	ss jge 0x41cb97
  41cb4c:	adc    BYTE PTR [ecx+0x380e4c6e],al
  41cb52:	std    
  41cb53:	lods   eax,DWORD PTR ds:[esi]
  41cb54:	push   edx
  41cb55:	punpckhdq mm5,mm4
  41cb58:	sub    DWORD PTR [ecx+eiz*1],0xd76a367
  41cb5f:	push   ds
  41cb60:	shl    BYTE PTR [edx+0x75ba9287],0xcb
  41cb67:	mov    dl,0xda
  41cb69:	fsub   QWORD PTR [edi-0x536aae1a]
  41cb6f:	div    DWORD PTR [ecx-0x54ec6a87]
  41cb75:	push   ebp
  41cb76:	outs   dx,BYTE PTR ds:[esi]
  41cb77:	xchg   esi,eax
  41cb78:	into   
  41cb79:	adc    dh,BYTE PTR [esp+ebp*2-0x1c794e40]
  41cb80:	(bad)  
  41cb81:	fs (bad) 
  41cb83:	sub    eax,0x52a99c03
  41cb88:	or     bl,BYTE PTR [esi]
  41cb8a:	or     al,0xce
  41cb8c:	jb     0x41cba9
  41cb8e:	call   0x4d1f878
  41cb93:	aam    0x4b
  41cb95:	cli    
  41cb96:	int3   
  41cb97:	fiadd  DWORD PTR [ecx-0x63]
  41cb9a:	je     0x41cb93
  41cb9c:	sub    al,0xca
  41cb9e:	stos   DWORD PTR es:[edi],eax
  41cb9f:	daa    
  41cba0:	fist   DWORD PTR [edx+eiz*8+0x11]
  41cba4:	mov    ds:0xc1cd0922,eax
  41cba9:	pusha  
  41cbaa:	xchg   ebx,eax
  41cbab:	mov    ah,0xd
  41cbad:	sbb    ah,BYTE PTR [ecx+eax*8+0xc]
  41cbb1:	mov    al,0x5a
  41cbb3:	pop    esi
  41cbb4:	and    BYTE PTR [edx],bh
  41cbb6:	add    eax,DWORD PTR [edi+ebx*1-0x64fe28a5]
  41cbbd:	adc    eax,0x6b31ce15
  41cbc2:	inc    ebx
  41cbc3:	inc    esi
  41cbc4:	clc    
  41cbc5:	mov    ah,0x86
  41cbc7:	mov    edx,0xa427f3fa
  41cbcc:	xchg   ebx,eax
  41cbcd:	cli    
  41cbce:	xchg   ecx,eax
  41cbcf:	xchg   edi,eax
  41cbd0:	or     DWORD PTR [eax-0x6a],esp
  41cbd3:	and    ebx,DWORD PTR es:[ebx+0x3b]
  41cbd7:	cmp    al,0x5a
  41cbd9:	or     DWORD PTR [ebx+eiz*2-0x59d53b07],ebx
  41cbe0:	jle    0x41cc29
  41cbe2:	inc    esp
  41cbe3:	pop    edi
  41cbe4:	or     eax,0x3ca68785
  41cbe9:	aam    0x13
  41cbeb:	mov    esi,0xf2b01e03
  41cbf0:	inc    ebp
  41cbf1:	call   0x3542d475
  41cbf6:	dec    esp
  41cbf7:	pop    ds
  41cbf8:	call   0x26b:0xd076695
  41cbff:	jae    0x41cc07
  41cc01:	movsx  ecx,WORD PTR [edx+0x4308efa2]
  41cc08:	push   ss
  41cc09:	out    dx,eax
  41cc0a:	sub    eax,0x906330ad
  41cc0f:	or     esi,DWORD PTR [ecx-0x7d]
  41cc12:	jno    0x41cc8e
  41cc14:	test   BYTE PTR [edi],dl
  41cc16:	scas   al,BYTE PTR es:[edi]
  41cc17:	mov    esi,0x61563987
  41cc1c:	jb     0x41cbcb
  41cc1e:	dec    DWORD PTR [eax-0xc4b0633]
  41cc24:	sbb    bh,ch
  41cc26:	mov    dh,0x43
  41cc28:	and    eax,0xfffffff6
  41cc2b:	pop    edi
  41cc2c:	(bad)  
  41cc2d:	mov    ebx,DWORD PTR [edx]
  41cc2f:	inc    edi
  41cc30:	sub    cl,BYTE PTR [ecx+0x8]
  41cc33:	mov    edx,0xac586b20
  41cc38:	fstp   TBYTE PTR [ecx+edx*2]
  41cc3b:	js     0x41cc0a
  41cc3d:	mov    esi,0xe2ee1f60
  41cc42:	xchg   ebx,eax
  41cc43:	mov    cl,0xbe
  41cc45:	lods   eax,DWORD PTR ds:[esi]
  41cc46:	xor    eax,DWORD PTR [edx-0x9]
  41cc49:	jbe    0x41cbd6
  41cc4b:	mov    edi,0x6f6b0cd0
  41cc50:	(bad)  
  41cc51:	jmp    eax
  41cc53:	push   edx
  41cc54:	dec    ecx
  41cc55:	or     esp,DWORD PTR [bx+0xc]
  41cc59:	mov    ebx,0x716243d4
	...
  41cc66:	mov    ?,WORD PTR [ebp-0x1b]
  41cc69:	in     al,dx
  41cc6a:	idiv   esp
  41cc6c:	(bad)  
  41cc6d:	jg     0x41cce1
  41cc6f:	and    eax,0x819c1474
  41cc74:	jl     0x41ccd3
  41cc76:	pop    ebx
  41cc77:	lds    eax,FWORD PTR [ecx]
  41cc79:	add    BYTE PTR [eax],ah
  41cc7b:	pop    es
  41cc7c:	add    BYTE PTR [eax],al
  41cc7e:	loope  0x41cc3c
  41cc80:	xor    BYTE PTR [edx+0x4a5686ef],0x6d
  41cc87:	mov    ecx,0x97d4cee5
  41cc8c:	das    
  41cc8d:	jecxz  0x41cc4d
  41cc8f:	cld    
  41cc90:	(bad)  
  41cc91:	jmp    0x8494:0xd1f67d09
  41cc98:	les    edx,FWORD PTR [eax-0x74]
  41cc9b:	fucom  st(1)
  41cc9d:	cmp    al,0x23
  41cc9f:	adc    BYTE PTR es:[ebx],cl
  41cca2:	enter  0x26b5,0xd7
  41cca6:	daa    
  41cca7:	rcr    BYTE PTR [eax],cl
  41cca9:	sub    DWORD PTR [eax+0x53470b15],0xe35d39b2
  41ccb3:	jbe    0x41cc8b
  41ccb5:	ret    
  41ccb6:	add    al,0x3e
  41ccb8:	(bad)  
  41ccb9:	fmul   QWORD PTR [edx*2+0x3f802071]
  41ccc0:	pop    edi
  41ccc1:	lods   eax,DWORD PTR ds:[esi]
  41ccc2:	push   esp
  41ccc3:	push   0x43
  41ccc5:	sbb    ah,cl
  41ccc7:	repz inc edx
  41ccc9:	lods   al,BYTE PTR ds:[esi]
  41ccca:	sub    eax,ecx
  41cccc:	aaa    
  41cccd:	jg     0x41cd0a
  41cccf:	addr16 aam 0x37
  41ccd2:	sub    BYTE PTR [ebx+edx*4-0x1d65825e],dh
  41ccd9:	inc    ebp
  41ccda:	in     al,0x4a
  41ccdc:	fcomp  DWORD PTR [edx+0x62530bea]
  41cce2:	ja     0x41cd2e
  41cce4:	xor    al,0xd6
  41cce6:	mov    edx,0xb5ed1771
  41cceb:	lahf   
  41ccec:	pop    ecx
  41cced:	loop   0x41ccf6
  41ccef:	cli    
  41ccf0:	fstp   QWORD PTR [ecx]
  41ccf2:	push   esi
  41ccf3:	les    eax,FWORD PTR [edx+0x5d]
  41ccf6:	std    
  41ccf7:	pop    esi
  41ccf8:	sbb    al,0x68
  41ccfa:	call   0xbe6c:0x89353995
  41cd01:	push   0x2f30d223
  41cd06:	sub    ch,bl
  41cd08:	ror    DWORD PTR [edx],0xed
  41cd0b:	sbb    bh,ch
  41cd0d:	mov    dl,0xa8
  41cd0f:	adc    DWORD PTR [esi+0x32],edi
  41cd12:	clc    
  41cd13:	retf   0xebd
  41cd16:	jmp    0x41cce9
  41cd18:	xchg   esi,eax
  41cd19:	enter  0x8082,0xdd
  41cd1d:	jle    0x41ccc9
  41cd1f:	mov    esp,0xfe345bb4
  41cd24:	imul   edi,DWORD PTR [ecx-0x6d930b12],0xe8833d5c
  41cd2e:	int3   
  41cd2f:	xchg   BYTE PTR [ebp+ecx*2-0x3b447465],ah
  41cd36:	fwait
  41cd37:	mov    gs,edi
  41cd39:	jns    0x41cdaa
  41cd3b:	inc    DWORD PTR [edx-0x4be0d7de]
  41cd41:	scas   eax,DWORD PTR es:[edi]
  41cd42:	xor    BYTE PTR [esi+0x18],cl
  41cd45:	jle    0x41cd51
  41cd47:	xchg   edi,eax
  41cd48:	test   eax,0xd28a99dd
  41cd4d:	into   
  41cd4e:	fdiv   DWORD PTR [ecx]
  41cd50:	pop    DWORD PTR [ebx-0x5dd1d5f]
  41cd56:	les    ebp,FWORD PTR [esi]
  41cd58:	dec    esp
  41cd59:	inc    edx
  41cd5a:	(bad)
  41cd5d:	mov    WORD PTR [edi+0x78],fs
  41cd60:	xor    DWORD PTR [esi+0x2a1d1e8c],ebp
  41cd66:	and    DWORD PTR [edx-0x25a7c521],ebp
  41cd6c:	xchg   BYTE PTR [ebx-0x339c30c1],ah
  41cd72:	neg    DWORD PTR [ecx]
  41cd74:	cmp    DWORD PTR [ebx],edx
  41cd76:	cmc    
  41cd77:	gs xchg BYTE PTR cs:[edx+0x2c12bc37],al
  41cd7f:	sti    
  41cd80:	in     al,0xe
  41cd82:	mov    ds,WORD PTR [edi-0x35]
  41cd85:	xchg   edx,eax
  41cd86:	push   ecx
  41cd87:	call   0x2e00c128
  41cd8c:	es ins DWORD PTR es:[edi],dx
  41cd8e:	sbb    eax,0x46ec1ccc
  41cd93:	addr16 mov ebp,0xa40a7e9c
  41cd99:	adc    BYTE PTR [eax+eiz*4],bh
  41cd9c:	pop    ds
  41cd9d:	cmp    BYTE PTR [ebp+0x23b582b9],ch
  41cda3:	adc    dh,ah
  41cda5:	out    dx,eax
  41cda6:	adc    BYTE PTR [ebp-0x2],ah
  41cda9:	clc    
  41cdaa:	imul   edx,DWORD PTR [ebx+eax*8],0x2
  41cdae:	mov    edx,0x7086db98
  41cdb3:	mov    cl,0x15
  41cdb5:	xor    ah,cl
  41cdb7:	retf   0xf354
  41cdba:	nop
  41cdbb:	outs   dx,BYTE PTR ds:[esi]
  41cdbc:	jne    0x41cdf2
  41cdbe:	cmp    esp,DWORD PTR [edx+eax*1-0x43b6e9bd]
  41cdc5:	aas    
  41cdc6:	adc    esp,ebp
  41cdc8:	adc    al,0xbc
  41cdca:	push   0xe5464599
  41cdcf:	js     0x41cdf8
  41cdd1:	sti    
  41cdd2:	cdq    
  41cdd3:	inc    eax
  41cdd4:	in     al,dx
  41cdd5:	imul   ebp,DWORD PTR [ebx],0xffffffb0
  41cdd8:	add    BYTE PTR [edi-0x2e],cl
  41cddb:	retf   0x9f8f
  41cdde:	push   edx
  41cddf:	push   edx
  41cde0:	mov    ds:0x2a2e7082,eax
  41cde5:	daa    
  41cde6:	jnp    0x41cd7f
  41cde8:	les    ecx,FWORD PTR [edi+0x1550919f]
  41cdee:	push   esp
  41cdef:	test   DWORD PTR [edi+0x6c2d373e],ecx
  41cdf5:	sbb    eax,0x45e2f1ef
  41cdfa:	leave  
  41cdfb:	fdivr  DWORD PTR [eax-0x44]
  41cdfe:	imul   esi,ebx,0xffffffc1
  41ce01:	cmc    
  41ce02:	cmp    dh,BYTE PTR [ecx-0x25]
  41ce05:	mov    ds:0x54fce074,al
  41ce0a:	mov    WORD PTR [edx+0x49],?
  41ce0d:	xchg   edi,eax
  41ce0e:	ficomp DWORD PTR [ebp-0x694dbdd5]
  41ce14:	outs   dx,BYTE PTR ds:[esi]
  41ce15:	pushf  
  41ce16:	shr    BYTE PTR [ebx+eax*8],0xee
  41ce1a:	ror    DWORD PTR [esi+0x66],1
  41ce1d:	lds    eax,FWORD PTR [ebx+0x2033f6ca]
  41ce23:	arpl   WORD PTR [esp+ebx*8+0x3],bx
  41ce27:	mov    al,gs:0x842701d6
  41ce2d:	fwait
  41ce2e:	call   0xe057:0x7e51064e
  41ce35:	aaa    
  41ce36:	ins    BYTE PTR es:[edi],dx
  41ce37:	cmp    dh,BYTE PTR [eax]
  41ce39:	or     eax,0x6f52fd2b
  41ce3e:	xchg   bl,dl
  41ce40:	xor    ecx,DWORD PTR [ecx+0x2f]
  41ce43:	retf   
  41ce44:	mov    esi,0x697cd121
  41ce49:	sub    BYTE PTR [edx],ch
  41ce4b:	inc    ebp
  41ce4c:	mov    ch,0x5e
  41ce4e:	sti    
  41ce4f:	mov    edx,0x2d822756
  41ce54:	mov    cl,dh
  41ce56:	dec    edx
  41ce57:	shr    esi,1
  41ce59:	pop    ss
  41ce5a:	fnsave [eax+0x12]
  41ce5d:	bnd jmp 0x484ff783
  41ce63:	addr16 pop ebx
  41ce65:	sub    al,0x21
  41ce67:	fild   WORD PTR [ebx+0x33602776]
  41ce6d:	ins    BYTE PTR es:[edi],dx
  41ce6e:	enter  0x87f0,0x9
  41ce72:	je     0x41cee9
  41ce74:	push   ecx
  41ce75:	dec    edx
  41ce76:	out    dx,eax
  41ce77:	mov    cl,0x6b
  41ce79:	fcomp  DWORD PTR ds:0x98081304
  41ce7f:	out    0x4d,al
  41ce81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce82:	(bad)  
  41ce83:	fisttp QWORD PTR [ecx]
  41ce85:	fidiv  DWORD PTR [eax]
  41ce87:	fiadd  DWORD PTR [ebx+ebx*1+0x125e8b47]
  41ce8e:	fld    QWORD PTR [esi]
  41ce90:	test   DWORD PTR [edi-0x87acf9b],ecx
  41ce96:	cmp    ebp,DWORD PTR [esi]
  41ce98:	mov    cl,0x8c
  41ce9a:	sbb    al,0x5c
  41ce9c:	enter  0x424,0x98
  41cea0:	push   cs
  41cea1:	shr    ebp,0x65
  41cea4:	or     DWORD PTR [ebp+0x49],eax
  41cea7:	bswap  edi
  41cea9:	mov    BYTE PTR [ecx-0x25],ch
  41ceac:	push   edx
  41cead:	mov    dh,0x4d
  41ceaf:	xchg   ebx,eax
  41ceb0:	mov    dl,0x99
  41ceb2:	ds dec eax
  41ceb4:	das    
  41ceb5:	pop    edx
  41ceb6:	movlps xmm2,QWORD PTR [ebx+ecx*2+0x10bd0e92]
  41cebe:	iret   
  41cebf:	push   edx
  41cec0:	lea    esi,[esi-0x204fe812]
  41cec6:	mov    bh,0x84
  41cec8:	fimul  WORD PTR ds:0xf41eb9de
  41cece:	inc    esp
  41cecf:	push   esi
  41ced0:	sti    
  41ced1:	add    BYTE PTR [eax],al
  41ced3:	adc    esp,DWORD PTR [edx]
  41ced5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ced6:	inc    edx
  41ced7:	adc    BYTE PTR [ebx],dl
  41ced9:	or     esp,DWORD PTR [edx+0x7d2b9cea]
  41cedf:	cmp    ax,0x6c4a
  41cee3:	mov    al,0x76
  41cee5:	xchg   esp,eax
  41cee6:	xchg   ebp,eax
  41cee7:	xchg   esp,eax
  41cee8:	mov    cl,0xb9
  41ceea:	push   ebx
  41ceeb:	or     BYTE PTR [ebp-0x49fb795b],0x48
  41cef2:	scas   eax,DWORD PTR es:[edi]
  41cef3:	dec    edx
  41cef4:	rcl    BYTE PTR [ebp+0x11],cl
  41cef7:	pop    eax
  41cef8:	push   ebx
  41cef9:	inc    ebx
  41cefa:	pop    es
  41cefb:	ja     0x41cf44
  41cefd:	(bad)  
  41cefe:	push   edi
  41ceff:	and    esp,DWORD PTR [eax+0x51449268]
  41cf05:	cmp    esp,DWORD PTR [eax-0x73]
  41cf08:	xchg   BYTE PTR [ecx],ch
  41cf0a:	icebp  
  41cf0b:	xchg   ebp,eax
  41cf0c:	mov    al,BYTE PTR [ebx]
  41cf0e:	stos   DWORD PTR es:[edi],eax
  41cf0f:	in     eax,dx
  41cf10:	dec    ebp
  41cf11:	sub    dl,bl
  41cf13:	mov    esp,0x1c9c1fb5
  41cf18:	add    eax,0xf3142e51
  41cf1d:	sbb    dl,bl
  41cf1f:	int    0xb7
  41cf21:	shr    DWORD PTR [edi-0x7dca5a85],1
  41cf27:	dec    ebx
  41cf28:	lods   al,BYTE PTR ds:[esi]
  41cf29:	mov    ah,0x2b
  41cf2b:	loop   0x41cf0a
  41cf2d:	pop    ss
  41cf2e:	clc    
  41cf2f:	push   ebp
  41cf30:	sub    dl,BYTE PTR [edi+ecx*2]
  41cf33:	jmp    0x45b8:0x2987d4d5
  41cf3a:	mov    ch,0x90
  41cf3c:	test   eax,0x6749a84c
  41cf41:	mov    dl,0x22
  41cf43:	neg    WORD PTR [ecx]
  41cf46:	and    esi,DWORD PTR ds:0xe0a36c7f
  41cf4c:	or     eax,0x622e857d
  41cf51:	clc    
  41cf52:	xchg   esp,eax
  41cf53:	pop    ds
  41cf54:	mov    edx,0xd7560883
  41cf59:	xchg   ebx,eax
  41cf5a:	cld    
  41cf5b:	jmp    0x41cf89
  41cf5d:	jo     0x41cf02
  41cf5f:	test   DWORD PTR [ebp+edi*4-0x12ac4338],esp
  41cf66:	jbe    0x41cfa8
  41cf68:	fisub  WORD PTR [eax-0x19c53e2]
  41cf6e:	cmp    ebp,DWORD PTR ds:0x32afe24d
  41cf74:	call   0x4b1e:0x357ea20a
  41cf7b:	cli    
  41cf7c:	xchg   ebp,eax
  41cf7d:	pop    edi
  41cf7e:	xor    al,0x7e
  41cf80:	ins    BYTE PTR es:[edi],dx
  41cf81:	inc    eax
  41cf82:	mov    ebp,0xd4518e96
  41cf87:	sub    al,0x7
  41cf89:	cs in  al,dx
  41cf8b:	sar    BYTE PTR [ecx-0x7d],0xfe
  41cf8f:	add    eax,0x96a4b682
  41cf94:	das    
  41cf95:	inc    esp
  41cf96:	jg     0x41cf1e
  41cf98:	jmp    0x41cfd4
  41cf9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf9b:	inc    DWORD PTR ds:0x5822f394
  41cfa1:	push   ecx
  41cfa2:	fbld   TBYTE PTR [edx-0xbf12f58]
  41cfa8:	or     bl,bh
  41cfaa:	dec    eax
  41cfab:	lods   al,BYTE PTR ds:[esi]
  41cfac:	je     0x41cf78
  41cfae:	dec    eax
  41cfaf:	mov    eax,0xc3396457
  41cfb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfb5:	pusha  
  41cfb6:	outs   dx,BYTE PTR ds:[esi]
  41cfb7:	mov    dl,0xc5
  41cfb9:	fbstp  TBYTE PTR [esi]
  41cfbb:	adc    DWORD PTR [esi],esp
  41cfbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfbe:	jns    0x41cf80
  41cfc0:	icebp  
  41cfc1:	mov    eax,0xfd8e9b30
  41cfc6:	add    edi,DWORD PTR [ecx-0x69a2288]
  41cfcc:	imul   edi,DWORD PTR [esi+0x2c],0x7656d2f0
  41cfd3:	mov    bh,0xee
  41cfd5:	jb     0x41d00f
  41cfd7:	in     al,0xfc
  41cfd9:	shr    al,cl
  41cfdb:	ficom  WORD PTR [eax]
  41cfdd:	je     0x41cff5
  41cfdf:	iret   
  41cfe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfe1:	xchg   esi,eax
  41cfe2:	mov    ds:0xa932527c,eax
  41cfe7:	pushf  
  41cfe8:	mov    ds:0xd247b743,eax
  41cfed:	fs in  al,0x15
  41cff0:	xchg   bl,bl
  41cff2:	dec    ebx
  41cff3:	cdq    
  41cff4:	cmp    DWORD PTR [ecx+edx*2+0x7185a259],0x38
  41cffc:	adc    eax,0x831e5dfc
  41d001:	iret   
  41d002:	or     BYTE PTR [ebx-0x65943a2],ah
  41d008:	cmp    bl,BYTE PTR ds:0x745fd801
  41d00e:	xor    ah,BYTE PTR [bp+si+0x2be6]
  41d013:	sti    
  41d014:	leave  
  41d015:	inc    ebx
  41d016:	jle    0x41d042
  41d018:	fst    DWORD PTR [edx+0x7f8e8b10]
  41d01e:	int    0xbb
  41d020:	addr16 (bad) 
  41d022:	loopne 0x41d092
  41d024:	add    dl,al
  41d026:	ds mov ebx,0x788c6d11
  41d02c:	iret   
  41d02d:	std    
  41d02e:	jae    0x41d007
  41d030:	and    edx,DWORD PTR [esi]
  41d032:	dec    esp
  41d033:	into   
  41d034:	(bad)  
  41d035:	pop    ds
  41d036:	cmp    dh,BYTE PTR [ecx-0x6f9d61c]
  41d03c:	or     dl,dh
  41d03e:	popa   
  41d03f:	add    al,0x4f
  41d041:	sbb    BYTE PTR [ebx+0x1f],al
  41d044:	dec    edi
  41d045:	nop
  41d046:	dec    esi
  41d047:	adc    ch,BYTE PTR [edi+0x1f]
  41d04a:	dec    DWORD PTR [esi+0x59]
  41d04d:	push   ebx
  41d04e:	push   eax
  41d04f:	leave  
  41d050:	xchg   ecx,eax
  41d051:	test   eax,0xb2c90290
  41d056:	jmp    0x41d0cf
  41d058:	fs dec esi
  41d05a:	dec    edi
  41d05b:	sub    BYTE PTR [ecx+0x2a],bl
  41d05e:	xor    esi,DWORD PTR [ebp+0x68]
  41d061:	aad    0x85
  41d063:	xchg   ebx,eax
  41d064:	cmp    al,0xbf
  41d066:	push   edx
  41d067:	jecxz  0x41d0da
  41d069:	mov    esi,0x74dc2c5f
  41d06e:	shr    DWORD PTR [ecx+0x2da3947a],0x4a
  41d075:	je     0x41d083
  41d077:	stos   BYTE PTR es:[edi],al
  41d078:	mov    al,0x1d
  41d07a:	test   eax,0xbb5f0240
  41d07f:	jp     0x41d0bf
  41d081:	jl     0x41d02d
  41d083:	inc    ebp
  41d084:	cld    
  41d085:	cmc    
  41d086:	xchg   esi,eax
  41d087:	scas   eax,DWORD PTR es:[edi]
  41d088:	xlat   BYTE PTR ds:[ebx]
  41d089:	(bad)  
  41d08a:	jno    0x41d05f
  41d08c:	nop
  41d08d:	jae    0x41d09e
  41d08f:	pushaw 
  41d091:	cld    
  41d092:	and    BYTE PTR [edi-0x62ae3a36],dl
  41d098:	outs   dx,DWORD PTR ds:[esi]
  41d099:	xchg   ecx,eax
  41d09a:	aaa    
  41d09b:	xchg   DWORD PTR [ebx-0x5f3c9e4f],edi
  41d0a1:	mov    esp,0xc9aa474f
  41d0a6:	sub    al,cl
  41d0a8:	dec    ebx
  41d0a9:	xor    edi,edx
  41d0ab:	and    eax,0x8abc9640
  41d0b0:	je     0x41d05f
  41d0b2:	hlt    
  41d0b3:	xor    esp,DWORD PTR [edi-0x38]
  41d0b6:	scas   al,BYTE PTR es:[edi]
  41d0b7:	mov    edi,0x40cd2987
  41d0bc:	out    0x51,al
  41d0be:	cmp    eax,0x7980c98
  41d0c3:	jbe    0x41d11b
  41d0c5:	icebp  
  41d0c6:	bound  esi,QWORD PTR [ebx+0x5b]
  41d0c9:	idiv   BYTE PTR [ecx-0x36]
  41d0cc:	and    DWORD PTR [edx+0x1e63c1bf],eax
  41d0d2:	sbb    dh,bl
  41d0d4:	lock and BYTE PTR [eax-0xa056ab7],ah
  41d0db:	loop   0x41d118
  41d0dd:	clc    
  41d0de:	mov    ecx,fs
  41d0e0:	mov    al,ds:0x64fd8f9c
  41d0e5:	xor    al,0xb1
  41d0e7:	cmp    eax,0x55b961e4
  41d0ec:	mov    cl,0x23
  41d0ee:	daa    
  41d0ef:	mov    DWORD PTR [eax-0x4],ebp
  41d0f2:	hlt    
  41d0f3:	lahf   
  41d0f4:	loope  0x41d0d2
  41d0f6:	lods   eax,DWORD PTR ds:[esi]
  41d0f7:	xor    bl,al
  41d0f9:	fs stos BYTE PTR es:[edi],al
  41d0fb:	dec    eax
  41d0fc:	iret   
  41d0fd:	ror    DWORD PTR [ecx],cl
  41d0ff:	rcr    BYTE PTR [edx],1
  41d101:	jo     0x41d0f8
  41d103:	out    dx,al
  41d104:	adc    al,0x97
  41d106:	mov    BYTE PTR [edx+0x2edf3bb5],ch
  41d10c:	cdq    
  41d10d:	and    BYTE PTR [edx+0x287f5d76],al
  41d113:	mov    eax,ds:0xa190bcce
  41d118:	clc    
  41d119:	test   dh,bl
  41d11b:	aad    0x4f
  41d11d:	enter  0x679a,0xa7
  41d121:	cdq    
  41d122:	inc    eax
  41d123:	in     al,dx
  41d124:	mov    edx,0x1d4d34f6
  41d129:	stos   DWORD PTR es:[edi],eax
  41d12a:	leave  
  41d12b:	xlat   BYTE PTR ds:[ebx]
  41d12c:	out    dx,al
  41d12d:	sahf   
  41d12e:	mov    esp,0x95c0c8de
  41d133:	push   ecx
  41d134:	popw   es
  41d136:	lods   al,BYTE PTR ds:[esi]
  41d137:	ja     0x41d16e
  41d139:	shl    ah,1
  41d13b:	sahf   
  41d13c:	ja     0x41d0ca
  41d13e:	outs   dx,DWORD PTR ds:[esi]
  41d13f:	js     0x41d138
  41d141:	ins    DWORD PTR es:[edi],dx
  41d142:	add    BYTE PTR [eax],al
  41d144:	in     al,0x9
  41d146:	fwait
  41d147:	xor    bl,BYTE PTR [ecx+0x46]
  41d14a:	jbe    0x41d1ca
  41d14c:	mov    al,0x25
  41d14e:	cli    
  41d14f:	fiadd  WORD PTR [edi+0x248420b9]
  41d155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d156:	fcomp  DWORD PTR [ecx+0x3d]
  41d159:	add    al,0xcc
  41d15b:	pop    ds
  41d15c:	cli    
  41d15d:	dec    edi
  41d15e:	xor    al,0xa2
  41d160:	mov    bl,0x2f
  41d162:	aam    0x6c
  41d164:	jno    0x41d11e
  41d166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d167:	bound  eax,QWORD PTR [esi]
  41d169:	call   0x185c:0xd7c06f70
  41d170:	out    dx,al
  41d171:	dec    edi
  41d172:	aam    0xb1
  41d174:	pop    ecx
  41d175:	ret    0x6f9c
  41d178:	adc    BYTE PTR [ecx],ch
  41d17a:	int3   
  41d17b:	ret    0xe7ae
  41d17e:	es imul ebx,edi,0xb
  41d182:	and    BYTE PTR [esi+esi*4],bl
  41d185:	aam    0x4b
  41d187:	je     0x41d19f
  41d189:	push   es
  41d18a:	jl     0x41d15b
  41d18c:	retf   0xdbcc
  41d18f:	add    cl,BYTE PTR [esi+0x57473188]
  41d195:	or     bl,BYTE PTR ss:[eax+ebp*8]
  41d199:	out    0xed,al
  41d19b:	or     dl,BYTE PTR [ebp-0x3c77d957]
  41d1a1:	mov    esi,0xce53760f
  41d1a6:	inc    esp
  41d1a7:	in     eax,dx
  41d1a8:	sbb    DWORD PTR [ebp-0x1b],eax
  41d1ab:	sbb    bh,0x7d
  41d1ae:	lods   eax,DWORD PTR ds:[esi]
  41d1af:	add    eax,0xc22a3519
  41d1b4:	push   0xc609841e
  41d1b9:	mov    dh,0x32
  41d1bb:	out    dx,eax
  41d1bc:	ror    DWORD PTR [esi],cl
  41d1be:	lahf   
  41d1bf:	ror    BYTE PTR [ebx-0x33527319],0xd8
  41d1c6:	(bad)  
  41d1c8:	pop    esi
  41d1c9:	fisttp WORD PTR [edx+0x5]
  41d1cc:	in     eax,dx
  41d1cd:	mov    DWORD PTR [ebp+0x23a1cc7c],ebp
  41d1d3:	pop    esi
  41d1d4:	inc    edx
  41d1d5:	jb     0x41d174
  41d1d7:	add    ebx,DWORD PTR [ebp+0x1e]
  41d1da:	mov    eax,DWORD PTR [edi+0x159c77c1]
  41d1e0:	push   ds
  41d1e1:	jnp    0x41d22d
  41d1e3:	test   DWORD PTR [eax],eax
  41d1e5:	mov    ds:0xe5084552,eax
  41d1ea:	stc    
  41d1eb:	cmp    cl,BYTE PTR [edi-0x4c8caf6c]
  41d1f1:	adc    ebx,DWORD PTR [edi]
  41d1f3:	arpl   WORD PTR [ebx-0x6e696799],sp
  41d1f9:	inc    eax
  41d1fa:	xchg   ecx,ecx
  41d1fc:	sahf   
  41d1fd:	inc    ebp
  41d1fe:	mov    edx,0x7eeefb43
  41d203:	mov    al,ds:0xe50b9550
  41d208:	sub    cl,BYTE PTR [ebx+0x0]
  41d20b:	jbe    0x41d276
  41d20d:	fnstcw WORD PTR [ecx+0x2aa095d2]
  41d213:	ret    
  41d214:	bound  edi,QWORD PTR [edi+eiz*2]
  41d217:	xchg   ebx,eax
  41d218:	ins    BYTE PTR es:[edi],dx
  41d219:	je     0x41d26d
  41d21b:	inc    ebp
  41d21c:	loop   0x41d1ee
  41d21e:	(bad)  
  41d21f:	aaa    
  41d220:	imul   eax,DWORD PTR [ebx],0xffffffe7
  41d223:	lds    eax,FWORD PTR [eax]
  41d225:	pop    ecx
  41d226:	int3   
  41d227:	cmp    BYTE PTR [ebp+edx*1-0x15],cl
  41d22b:	pop    ebp
  41d22c:	ret    
  41d22d:	xchg   DWORD PTR [ebx],ecx
  41d22f:	sub    edx,DWORD PTR [ebx+ebx*8-0x515de80f]
  41d236:	clc    
  41d237:	dec    ecx
  41d238:	push   es
  41d239:	repz xchg esi,eax
  41d23b:	fadd   st(0),st
  41d23d:	sbb    ebx,DWORD PTR [eax+ecx*4-0x2f]
  41d241:	int    0x96
  41d243:	pop    eax
  41d244:	neg    eax
  41d246:	xchg   esp,eax
  41d247:	mov    eax,0xf69b3ab3
  41d24c:	(bad)  
  41d24d:	xchg   ebp,eax
  41d24e:	and    eax,esi
  41d250:	fiadd  DWORD PTR [ebp+0x34]
  41d253:	sub    al,0xa3
  41d255:	mov    ecx,0xf11ce7dd
  41d25a:	test   eax,0x2c40d2ee
  41d25f:	test   DWORD PTR [edi-0x74830070],ecx
  41d265:	push   ebx
  41d266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d267:	cmp    al,0xd6
  41d269:	fidiv  DWORD PTR [edi]
  41d26b:	(bad)  [esi-0x318537dc]
  41d271:	cs sbb al,0x59
  41d274:	jge    0x41d2c8
  41d276:	clc    
  41d277:	sbb    eax,0x3cecfa83
  41d27c:	cmp    BYTE PTR [edi],ah
  41d27e:	stc    
  41d27f:	cmp    DWORD PTR [edx+0x5c],esi
  41d282:	test   BYTE PTR [esi-0x64],0x1f
  41d286:	sahf   
  41d287:	jp     0x41d2d6
  41d289:	fimul  WORD PTR [ebp+0x45]
  41d28c:	scas   al,BYTE PTR es:[edi]
  41d28d:	rcl    BYTE PTR [ebp+0x46],1
  41d290:	mov    al,0xe0
  41d292:	xlat   BYTE PTR ds:[ebx]
  41d293:	lods   eax,DWORD PTR ds:[esi]
  41d294:	dec    esi
  41d295:	call   0xbad9:0xf1929502
  41d29c:	test   DWORD PTR [ebx-0x766a7ccd],edi
  41d2a2:	pushf  
  41d2a3:	mov    fs,WORD PTR [esi+0x0]
  41d2a6:	mov    ds,WORD PTR [edx+0x44df896a]
  41d2ac:	sbb    DWORD PTR [ecx],0xb8d0fb8a
  41d2b2:	test   BYTE PTR [edi+0x27],dl
  41d2b5:	push   ss
  41d2b6:	ss out 0x6f,eax
  41d2b9:	aaa    
  41d2ba:	loopne 0x41d31f
  41d2bc:	adc    ah,BYTE PTR [ecx]
  41d2be:	fild   DWORD PTR [esi+eax*8-0x2a]
  41d2c2:	nop
  41d2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2c4:	and    al,0x42
  41d2c6:	mov    esi,0x8fa4c8d
  41d2cb:	xchg   ebx,eax
  41d2cc:	mov    ds:0xface17df,eax
  41d2d1:	xor    BYTE PTR [eax+edi*4],ch
  41d2d4:	inc    ebp
  41d2d5:	dec    eax
  41d2d6:	xor    BYTE PTR [eax],0x8a
  41d2d9:	es inc eax
  41d2db:	jo     0x41d261
  41d2dd:	stos   DWORD PTR es:[edi],eax
  41d2de:	loop   0x41d27d
  41d2e0:	cs out 0x79,eax
  41d2e3:	test   eax,0xde1d7784
  41d2e8:	(bad)
  41d2eb:	out    dx,al
  41d2ec:	fld    TBYTE PTR [ebp+0x753ff095]
  41d2f2:	xor    DWORD PTR [eax+eiz*2],eax
  41d2f5:	or     esi,DWORD PTR [ebp+0x7e]
  41d2f8:	inc    edi
  41d2f9:	outs   dx,BYTE PTR ds:[esi]
  41d2fa:	pop    ebx
  41d2fb:	adc    bh,bl
  41d2fd:	into   
  41d2fe:	ins    DWORD PTR es:[edi],dx
  41d2ff:	mov    WORD PTR [ebp-0x41],ds
  41d302:	jle    0x41d362
  41d304:	popa   
  41d305:	leave  
  41d306:	push   ebp
  41d307:	or     eax,0x434f2ea6
  41d30c:	push   esi
  41d30d:	inc    edi
  41d30e:	cmp    eax,0xef8b09c3
  41d313:	(bad)  
  41d315:	cwde   
  41d316:	and    BYTE PTR [esi+0x636f914a],ch
  41d31c:	adc    BYTE PTR [edi],dl
  41d31e:	and    ebp,eax
  41d320:	nop
  41d321:	mov    ah,0x18
  41d323:	ds push edi
  41d325:	mov    ah,0x7f
  41d327:	sar    DWORD PTR [eax],1
  41d329:	sbb    al,0xad
  41d32b:	pop    ebp
  41d32c:	ror    BYTE PTR [ebx-0x4348e1f0],1
  41d332:	jmp    0x41d3ab
  41d334:	and    BYTE PTR [ebp-0x1e6d7a2a],cl
  41d33a:	push   es
  41d33b:	push   eax
  41d33c:	mov    al,ds:0xd58e03f8
  41d341:	ret    0xfc6b
  41d344:	shl    ecx,1
  41d346:	and    al,0x69
  41d348:	fisubr WORD PTR [edx-0x3ee3e348]
  41d34e:	popf   
  41d34f:	rcr    DWORD PTR [ecx],cl
  41d351:	adc    cl,BYTE PTR [edx-0x48aa6e0c]
  41d357:	cmp    al,0xac
  41d359:	test   ax,0xb9d2
  41d35d:	div    BYTE PTR [ebp+0x5863af9]
  41d363:	mov    ds,WORD PTR [esi-0x3e4c2f3c]
  41d369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d36a:	aas    
  41d36b:	and    al,BYTE PTR [edi]
  41d36d:	adc    al,0x25
  41d36f:	xchg   esi,eax
  41d370:	xchg   ebx,eax
  41d371:	push   es
  41d372:	fwait
  41d373:	jp     0x41d38b
  41d375:	mov    ecx,0x1f5e55bf
  41d37a:	jnp    0x41d372
  41d37c:	test   DWORD PTR [edx],ebp
  41d37e:	add    al,0xf3
  41d380:	(bad)  
  41d382:	mov    BYTE PTR [eax-0x67885233],ah
  41d388:	out    0x66,al
  41d38a:	test   al,0x63
  41d38c:	in     al,dx
  41d38d:	xchg   ebp,eax
  41d38e:	mov    ch,0xd8
  41d390:	or     eax,0x5c907161
  41d395:	mov    eax,ds:0x5f130168
  41d39a:	push   ebp
  41d39b:	sahf   
  41d39c:	(bad)  
  41d39d:	cmc    
	...
  41d3a6:	shr    ah,cl
  41d3a8:	and    edx,DWORD PTR [ecx]
  41d3aa:	aas    
  41d3ab:	fcomip st,st(2)
  41d3ad:	out    dx,eax
  41d3ae:	or     DWORD PTR [esi+0x1adceacd],ebp
  41d3b4:	(bad)  
  41d3b5:	idiv   BYTE PTR [ebx-0x34]
  41d3b8:	add    DWORD PTR [eax],eax
  41d3ba:	and    BYTE PTR [edi],al
  41d3bc:	add    BYTE PTR [eax],al
  41d3be:	sbb    ebp,edx
  41d3c0:	xchg   BYTE PTR [ebp+0x20],bh
  41d3c3:	(bad)  
  41d3c4:	ficomp WORD PTR [edx]
  41d3c6:	nop
  41d3c7:	lds    esi,FWORD PTR [edx-0x4db9faff]
  41d3cd:	xor    ch,BYTE PTR [eax]
  41d3cf:	jl     0x41d3a7
  41d3d1:	and    al,0x51
  41d3d3:	je     0x41d3ac
  41d3d5:	inc    ebp
  41d3d6:	test   BYTE PTR [edi-0x584123c4],0x1b
  41d3dd:	popa   
  41d3de:	mov    esi,0x27e4017f
  41d3e3:	leave  
  41d3e4:	jb     0x41d389
  41d3e6:	mov    ah,0x35
  41d3e8:	inc    esi
  41d3e9:	mov    ss,WORD PTR [esi+0x37ae1c1f]
  41d3ef:	dec    edx
  41d3f0:	out    0x82,eax
  41d3f2:	add    ch,al
  41d3f4:	in     al,0x32
  41d3f6:	pop    ds
  41d3f7:	xor    al,0xe7
  41d3f9:	out    dx,al
  41d3fa:	inc    esp
  41d3fb:	xor    BYTE PTR ds:0xf4d3580d,0xba
  41d402:	(bad)  [ecx]
  41d404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d405:	(bad)  
  41d407:	xchg   edi,eax
  41d408:	out    dx,eax
  41d409:	add    BYTE PTR [ecx+0x38],bh
  41d40c:	mov    dl,0xfe
  41d40e:	stc    
  41d40f:	(bad)
  41d412:	clc    
  41d413:	test   BYTE PTR [ebp-0x540b8e21],0xa9
  41d41a:	xchg   ebx,ebp
  41d41c:	lods   eax,DWORD PTR ds:[esi]
  41d41d:	xchg   ebx,eax
  41d41e:	inc    esp
  41d41f:	and    eax,0xc718b8cf
  41d424:	mov    cl,0x7a
  41d426:	jbe    0x41d410
  41d428:	rcr    ah,0xe6
  41d42b:	cmp    ebx,DWORD PTR [ecx+ebp*4+0x78]
  41d42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d430:	add    DWORD PTR [edx],eax
  41d432:	(bad)  
  41d433:	xchg   ebp,eax
  41d434:	ins    DWORD PTR es:[edi],dx
  41d435:	sub    dl,BYTE PTR [ebx]
  41d437:	rcl    dh,cl
  41d439:	or     cl,0x48
  41d43c:	pop    ss
  41d43d:	jmp    0x8ec0:0x5233724c
  41d444:	retf   0xf292
  41d447:	(bad)  
  41d448:	sti    
  41d449:	and    esi,edx
  41d44b:	shl    DWORD PTR [esi+edi*4],1
  41d44e:	fdiv   DWORD PTR [edi+0x68]
  41d451:	sbb    DWORD PTR [ecx],ebp
  41d453:	xchg   ebx,eax
  41d454:	cmp    BYTE PTR [ebp-0x149bf87],al
  41d45a:	fwait
  41d45b:	popa   
  41d45c:	dec    edi
  41d45d:	jae    0x41d48e
  41d45f:	stos   BYTE PTR es:[edi],al
  41d460:	inc    edi
  41d461:	xchg   esi,eax
  41d462:	mov    WORD PTR [esp+edi*8-0x2ab414fb],?
  41d469:	retf   0xbe33
  41d46c:	mov    dl,0xb6
  41d46e:	push   ebx
  41d46f:	and    DWORD PTR [eax+0x545ab95e],ebp
  41d475:	dec    ebp
  41d476:	inc    edi
  41d477:	aad    0xdf
  41d479:	nop
  41d47a:	xchg   ebp,eax
  41d47b:	jge    0x41d4df
  41d47d:	mov    dl,0xb9
  41d47f:	mov    bl,0x2d
  41d481:	popf   
  41d482:	mov    ds:0x3370c306,eax
  41d487:	dec    esp
  41d488:	mov    bl,0x48
  41d48a:	or     eax,0x94ba1992
  41d48f:	mov    esp,0x12861d4c
  41d494:	es sub eax,0x273469b6
  41d49a:	clc    
  41d49b:	fistp  QWORD PTR [bx+si-0x7b]
  41d49f:	gs retf 
  41d4a1:	fldcw  WORD PTR ds:0x1226501b
  41d4a7:	dec    ebx
  41d4a8:	mov    dh,0xd9
  41d4aa:	jle    0x41d4a8
  41d4ac:	lock dec ecx
  41d4ae:	adc    al,dh
  41d4b0:	mov    al,0xc8
  41d4b2:	mov    dl,0xcc
  41d4b4:	cs into 
  41d4b6:	(bad)  [edx+0x3c]
  41d4b9:	fdiv   DWORD PTR [esi]
  41d4bb:	xchg   edi,eax
  41d4bc:	jae    0x41d458
  41d4be:	cwde   
  41d4bf:	loope  0x41d49b
  41d4c1:	jmp    0x969acce5
  41d4c6:	push   esp
  41d4c7:	pusha  
  41d4c8:	add    al,0xc4
  41d4ca:	mov    ebx,0x8f1acbd1
  41d4cf:	inc    esi
  41d4d0:	rol    BYTE PTR [eax-0x245c9775],1
  41d4d6:	neg    DWORD PTR ds:0xddc0e25f
  41d4dc:	(bad)  
  41d4dd:	into   
  41d4de:	mov    edx,0x7589c77e
  41d4e3:	lods   eax,DWORD PTR ds:[esi]
  41d4e4:	sub    al,0x50
  41d4e7:	mov    ds:0x52703daf,al
  41d4ec:	ret    
  41d4ed:	xchg   edx,eax
  41d4ee:	loope  0x41d51e
  41d4f0:	cmp    eax,0xf0bc3b1c
  41d4f5:	pusha  
  41d4f6:	push   eax
  41d4f7:	xchg   edi,eax
  41d4f8:	mov    al,0x4e
  41d4fa:	and    edx,DWORD PTR [ebx]
  41d4fc:	arpl   WORD PTR [ecx-0x26],bp
  41d4ff:	mov    ds:0xeebc99ce,eax
  41d504:	jmp    0xd73bc243
  41d509:	mov    DWORD PTR [edi+0x5],ecx
  41d50c:	ss mov esi,0x26047f73
  41d512:	out    dx,al
  41d513:	arpl   WORD PTR [edi+0x32],dx
  41d516:	mov    al,0x88
  41d518:	push   ebp
  41d519:	jmp    0x41d51e
  41d51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d51c:	xor    BYTE PTR gs:[ecx+0x2d],al
  41d520:	sar    DWORD PTR [ebp+0x5c],0x2f
  41d524:	sbb    eax,0xe2cd1986
  41d529:	add    eax,0x7f672236
  41d52e:	out    0x3d,eax
  41d530:	inc    ebp
  41d531:	mov    ecx,0xef1b7ea4
  41d536:	adc    ch,bl
  41d538:	mov    eax,ds:0xa4cccecf
  41d53d:	ror    BYTE PTR [eax-0xa40f748],1
  41d543:	ins    BYTE PTR es:[edi],dx
  41d544:	sub    BYTE PTR [esi],dl
  41d546:	ins    BYTE PTR es:[edi],dx
  41d547:	dec    esp
  41d548:	push   0x2f1cf43b
  41d54d:	lock retf 
  41d54f:	xlat   BYTE PTR ds:[ebx]
  41d550:	mov    edx,?
  41d552:	push   eax
  41d553:	lea    eax,[eax-0x4ad0062f]
  41d559:	and    ah,cl
  41d55b:	jne    0x41d5c4
  41d55d:	or     al,0x10
  41d55f:	cli    
  41d560:	(bad)  
  41d561:	jmp    0x41d548
  41d563:	int3   
  41d564:	adc    dh,BYTE PTR ds:0xa4d26fe6
  41d56a:	cmp    ch,ch
  41d56c:	mov    ch,0xfa
  41d56e:	cmc    
  41d56f:	leave  
  41d570:	xchg   edi,eax
  41d571:	mov    ds:0xe1dcbcb6,al
  41d576:	repz sbb DWORD PTR [ebx+0x32635db],esi
  41d57d:	out    dx,al
  41d57e:	in     eax,dx
  41d57f:	sbb    al,0x8d
  41d581:	adc    ebp,esp
  41d583:	mov    esp,0xf91431e9
  41d588:	scas   al,BYTE PTR es:[edi]
  41d589:	lds    eax,FWORD PTR [edx-0x1f]
  41d58c:	lods   eax,DWORD PTR ds:[esi]
  41d58d:	lods   al,BYTE PTR ds:[esi]
  41d58e:	popf   
  41d58f:	jae    0x41d514
  41d591:	pop    esp
  41d592:	imul   edx,DWORD PTR [eax-0x4e],0xeb4723b2
  41d599:	mov    ebp,DWORD PTR [edi]
  41d59b:	mov    ds:0xef0fa8dd,eax
  41d5a0:	pop    esp
  41d5a1:	out    0xa1,al
  41d5a3:	add    DWORD PTR ds:0x68393020,esp
  41d5a9:	shl    ah,1
  41d5ab:	sbb    BYTE PTR ss:[edx+eiz*8-0x61],bh
  41d5b0:	mov    ds:0xceb79232,al
  41d5b5:	in     al,0x46
  41d5b7:	jae    0x41d581
  41d5b9:	add    eax,0x838218bb
  41d5be:	sbb    BYTE PTR [edx+eax*2+0x48],ch
  41d5c2:	iret   
  41d5c3:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41d5c5:	mov    edx,0xe8b3294b
  41d5ca:	and    ch,BYTE PTR [edi+0x499669ce]
  41d5d0:	push   cs
  41d5d1:	shr    DWORD PTR [edx+0x74],0x53
  41d5d5:	icebp  
  41d5d6:	xchg   edi,eax
  41d5d7:	and    bh,BYTE PTR [edx+0x6b35c064]
  41d5dd:	in     eax,0x61
  41d5df:	adc    BYTE PTR [edx+0x42],0x1c
  41d5e3:	jno    0x41d56d
  41d5e5:	jg     0x41d64b
  41d5e7:	and    DWORD PTR [ebx+0x5e628ccf],esi
  41d5ed:	sahf   
  41d5ee:	dec    edx
  41d5ef:	loop   0x41d5aa
  41d5f1:	call   FWORD PTR [esi-0x262853cc]
  41d5f7:	cmp    al,0xfb
  41d5f9:	or     bl,BYTE PTR [edx+0x5e]
  41d5fc:	mov    ecx,0x110b4f4a
  41d601:	or     esp,DWORD PTR [edi]
  41d603:	xchg   DWORD PTR [edi],ebx
  41d605:	and    eax,0x970d6696
  41d60a:	sbb    al,al
  41d60c:	jmp    0x8edc5939
  41d611:	int    0xc6
  41d613:	jae    0x41d632
  41d615:	cmp    ch,BYTE PTR [edi]
  41d617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d618:	mov    al,0xc6
  41d61a:	xchg   esi,eax
  41d61b:	data16 or cl,BYTE PTR [edx+0x5c]
  41d61f:	mov    cl,0xaf
  41d621:	mov    ebp,0x5b4723ec
  41d626:	xor    DWORD PTR [eax],0x5
  41d629:	mov    eax,ds:0xf3258ded
  41d62e:	jmp    0x64d5:0xd04ddd08
  41d635:	gs pushf 
  41d637:	fsub   QWORD PTR [edi+0x7feef37b]
  41d63d:	dec    eax
  41d63e:	mov    ?,esi
  41d640:	ins    DWORD PTR es:[edi],dx
  41d641:	data16 or cl,BYTE PTR [ecx+ebp*8+0x79]
  41d646:	aam    0xa4
  41d648:	inc    ebp
  41d649:	pop    eax
  41d64a:	xor    DWORD PTR [ecx+ebp*1+0xfdb4d7b],esp
  41d651:	push   0x25b2d069
  41d656:	xor    eax,0xec7e2406
  41d65b:	clc    
  41d65c:	and    al,0xa1
  41d65e:	out    dx,al
  41d65f:	push   eax
  41d660:	push   edx
  41d661:	ss push esp
  41d663:	or     BYTE PTR ds:0x7bd8048f,bl
  41d669:	add    al,0xc9
  41d66c:	lock or dl,dl
  41d66f:	std    
  41d670:	outs   dx,BYTE PTR ds:[esi]
  41d671:	aaa    
  41d672:	jnp    0x41d620
  41d674:	mov    ecx,0xf79401d
  41d679:	and    ebx,DWORD PTR [edx]
  41d67b:	in     eax,0x60
  41d67d:	mov    bh,0xd5
  41d67f:	das    
  41d680:	cmp    BYTE PTR [ecx+0x1ca1bdb3],dl
  41d686:	xor    edi,ebp
  41d688:	pop    eax
  41d689:	pusha  
  41d68a:	pusha  
  41d68b:	push   ecx
  41d68c:	mov    edx,0x7ab69386
  41d691:	fadd   QWORD PTR [esi+ebp*8-0x67]
  41d695:	fucomi st,st(0)
  41d697:	push   eax
  41d698:	jle    0x41d6ec
  41d69a:	dec    edi
  41d69b:	(bad)  
  41d69c:	cld    
  41d69d:	jge    0x41d6d8
  41d69f:	leave  
  41d6a0:	test   DWORD PTR [edx+0x11b2b87f],ebp
  41d6a6:	ret    
  41d6a7:	repz inc edi
  41d6a9:	outs   dx,DWORD PTR ds:[esi]
  41d6aa:	mov    eax,ds:0x1ee96dfe
  41d6af:	addr16 popa 
  41d6b1:	sbb    bl,BYTE PTR ds:0x103754eb
  41d6b7:	loope  0x41d659
  41d6b9:	or     BYTE PTR [ebp+eiz*2+0x1708fbf5],0x0
  41d6c1:	out    0x50,eax
  41d6c3:	out    0xd8,al
  41d6c5:	adc    DWORD PTR [esi],0x5f
  41d6c8:	test   eax,0xb7f55a83
  41d6cd:	mov    ebp,0xb32680ff
  41d6d2:	mov    DWORD PTR [esi],esi
  41d6d4:	cli    
  41d6d5:	mov    cl,0x9f
  41d6d7:	add    BYTE PTR [edi+0x7f],bh
  41d6da:	cmp    eax,0x2ba734c8
  41d6df:	fsub   st(4),st
  41d6e1:	inc    esi
  41d6e2:	repnz popf 
  41d6e4:	sbb    esi,ecx
  41d6e6:	push   ebp
  41d6e7:	nop
  41d6e8:	es xor al,0xe4
  41d6eb:	imul   BYTE PTR [edi+0x30c1d68d]
  41d6f1:	pop    esp
  41d6f2:	mov    esi,edi
  41d6f4:	fwait
  41d6f5:	neg    BYTE PTR [ebx+0x48]
  41d6f8:	fnstenv ds:0x7ae883f0
  41d6fe:	ins    DWORD PTR es:[edi],dx
  41d6ff:	hlt    
  41d700:	pusha  
  41d701:	push   ds
  41d702:	out    0x7e,al
  41d704:	mov    al,ds:0xf6cdb3ef
  41d709:	mov    dl,0x43
  41d70b:	popf   
  41d70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d70d:	fstp   TBYTE PTR [esi-0x39]
  41d710:	sbb    ah,BYTE PTR ds:0x20c16759
  41d716:	aas    
  41d717:	adc    al,0x86
  41d719:	mov    ds:0xe5680d00,eax
  41d71e:	adc    BYTE PTR ds:0xa02b3fc9,bh
  41d724:	ficomp WORD PTR [eax]
  41d726:	dec    eax
  41d727:	add    DWORD PTR [ebp+ebx*8-0x2d1f69e8],esp
  41d72e:	leave  
  41d72f:	and    eax,0x135f5342
  41d734:	stc    
  41d735:	xchg   ebp,eax
  41d736:	mov    bh,0xfc
  41d738:	sar    DWORD PTR [ebp+0x453b138e],cl
  41d73e:	into   
  41d73f:	cwde   
  41d740:	inc    al
  41d742:	or     al,0xe0
  41d744:	xchg   dh,al
  41d746:	dec    ebp
  41d747:	pop    ecx
  41d748:	mov    ecx,0x26760317
  41d74d:	add    eax,DWORD PTR [ebx]
  41d74f:	inc    esi
  41d750:	sub    BYTE PTR [eax],ah
  41d752:	call   0x7305:0xa8f96863
  41d759:	cli    
  41d75a:	push   esi
  41d75b:	inc    eax
  41d75c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41d75e:	ja     0x41d784
  41d760:	mov    al,ds:0x5d4e6df7
  41d765:	xchg   ebx,eax
  41d766:	inc    esi
  41d767:	adc    al,0xdd
  41d769:	mov    ch,0x76
  41d76b:	xor    edx,DWORD PTR [esi]
  41d76d:	jmp    0xb60e2c27
  41d772:	pop    ss
  41d773:	sub    eax,0xeef88c63
  41d778:	pop    esp
  41d779:	xor    al,0x70
  41d77b:	int3   
  41d77c:	ja     0x41d74c
  41d77e:	cmp    BYTE PTR [ecx+0x595b3f4d],0xa1
  41d785:	pop    eax
  41d786:	cmp    al,0x45
  41d788:	addr16 cmp eax,0xdb11f46a
  41d78e:	and    BYTE PTR [ebx+0x669f5809],dl
  41d794:	jb     0x41d7f1
  41d796:	sbb    ecx,DWORD PTR [ebx-0x4d]
  41d799:	repz jge 0x41d802
  41d79c:	ret    
  41d79d:	ror    BYTE PTR ds:0x413cdd8f,1
  41d7a3:	jo     0x41d7ef
  41d7a5:	sbb    ch,dh
  41d7a7:	je     0x41d762
  41d7a9:	cmp    edi,esp
  41d7ab:	add    eax,0x4c5bfee3
  41d7b0:	dec    BYTE PTR [ebp-0x22]
  41d7b3:	push   esi
  41d7b4:	jp     0x41d82b
  41d7b6:	sbb    eax,0xfdfa95b1
  41d7bb:	inc    eax
  41d7bc:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41d7be:	mov    edi,0xccf8f7b4
  41d7c3:	pop    ss
  41d7c4:	mov    cl,0x22
  41d7c6:	cmc    
  41d7c7:	and    eax,0xa437bd61
  41d7cc:	xchg   BYTE PTR ds:0x81009c3b,cl
  41d7d2:	aam    0xf1
  41d7d4:	loopne 0x41d7b1
  41d7d6:	lods   al,BYTE PTR ds:[esi]
  41d7d7:	mov    al,BYTE PTR [esi]
  41d7d9:	mov    edi,0x5b561c8
  41d7de:	push   ebp
  41d7df:	xlat   BYTE PTR ds:[ebx]
  41d7e0:	mov    ecx,0x9f2889d1
  41d7e5:	les    ecx,FWORD PTR [edi]
  41d7e7:	inc    eax
  41d7e8:	test   DWORD PTR [ebx],ebp
  41d7ea:	scas   al,BYTE PTR es:[edi]
  41d7eb:	and    esp,ecx
  41d7ed:	addr16 xchg esi,eax
  41d7ef:	inc    edi
  41d7f0:	cs add edx,edx
  41d7f3:	pop    esp
  41d7f4:	or     ebx,eax
  41d7f6:	sub    DWORD PTR [esi],ebp
  41d7f8:	inc    edx
  41d7f9:	fmul   st,st(7)
  41d7fb:	fmul   QWORD PTR [edi+0x6af79831]
  41d801:	aad    0xa2
  41d803:	xor    al,0x6a
  41d805:	sahf   
  41d806:	and    eax,DWORD PTR [edx-0xe1108df]
  41d80c:	out    0x9,al
  41d80e:	xor    cl,ch
  41d810:	mov    cl,0x7a
  41d812:	out    0xe6,al
  41d814:	shl    BYTE PTR ds:0x48a6ba2a,cl
  41d81a:	dec    edi
  41d81b:	or     al,BYTE PTR [ebp+0x4e]
  41d81e:	dec    ecx
  41d81f:	ret    0x9c8d
  41d822:	and    DWORD PTR es:[edi+0x796a4a61],0x758c8661
  41d82d:	cmp    esi,ebp
  41d82f:	inc    edi
  41d830:	push   edi
  41d831:	lods   eax,DWORD PTR ds:[esi]
  41d832:	sub    al,0x70
  41d834:	xchg   DWORD PTR ds:0x61da6e9c,eax
  41d83a:	mov    ds:0x4825c74d,eax
  41d83f:	sub    eax,0xf9a44c6a
  41d844:	out    0x43,eax
  41d846:	fs loop 0x41d7cd
  41d849:	or     BYTE PTR [esi-0x59],cl
  41d84c:	pop    edx
  41d84d:	sbb    edx,edi
  41d84f:	or     BYTE PTR [edi+0x7d1c33a5],cl
  41d855:	in     eax,0x50
  41d857:	leave  
  41d858:	push   esi
  41d859:	mov    bh,dl
  41d85b:	xchg   edx,eax
  41d85c:	push   ebp
  41d85d:	push   DWORD PTR [ebp+0x55]
  41d860:	cmp    al,0x57
  41d862:	pop    ebx
  41d863:	enter  0x336f,0x8
  41d867:	daa    
  41d868:	pop    ds
  41d869:	or     BYTE PTR [eax-0x7243e509],0x72
  41d870:	sub    dh,BYTE PTR [esp+esi*8+0x2f]
  41d874:	adc    ebx,DWORD PTR [ebx]
  41d876:	rcl    DWORD PTR [ebx+0x4b],0xc2
  41d87a:	adc    esp,esi
  41d87c:	gs pop es
  41d87e:	icebp  
  41d87f:	xor    al,0x78
  41d881:	(bad)  
  41d883:	push   0x23
  41d885:	mov    esp,es
  41d887:	push   cs
  41d888:	in     eax,0x2d
  41d88a:	mov    ecx,DWORD PTR [edi]
  41d88c:	popa   
  41d88d:	push   ds
  41d88e:	cmp    esi,esp
  41d890:	pushf  
  41d891:	mov    edi,0x501f36fa
  41d896:	cld    
  41d897:	rol    DWORD PTR [ecx+0x6],0x46
  41d89b:	mov    al,ds:0x70211d1f
  41d8a0:	(bad)
  41d8a4:	or     DWORD PTR [edi+0x332c2fdb],edi
  41d8aa:	inc    eax
  41d8ab:	or     BYTE PTR [ebx+0x7f],0x9f
  41d8af:	ror    dl,1
  41d8b1:	nop
  41d8b2:	jg     0x41d8bf
  41d8b4:	out    dx,eax
  41d8b5:	mov    dl,0x5b
  41d8b7:	loopne 0x41d92a
  41d8b9:	dec    esi
  41d8ba:	mov    cl,0x52
  41d8bc:	jae    0x41d86f
  41d8be:	jae    0x41d8a8
  41d8c0:	mov    edx,0x83218e48
  41d8c5:	or     BYTE PTR [edi-0x40],bl
  41d8c8:	loope  0x41d8db
  41d8ca:	fimul  WORD PTR [ebx+0x4d]
  41d8cd:	add    edi,DWORD PTR [ebx+0x31]
  41d8d0:	mov    ch,0x4f
  41d8d2:	push   ecx
  41d8d3:	sub    edx,DWORD PTR [edx-0x7e67f91c]
  41d8d9:	push   es
  41d8da:	fs sbb al,0x9f
  41d8dd:	stos   DWORD PTR es:[edi],eax
  41d8de:	out    dx,eax
  41d8df:	fimul  DWORD PTR [ebx]
  41d8e1:	mov    ?,WORD PTR [ebp+0x3b3190ac]
  41d8e7:	lods   eax,DWORD PTR ds:[esi]
  41d8e8:	pop    ecx
  41d8e9:	jle    0x41d93d
  41d8eb:	and    edx,DWORD PTR [ecx]
  41d8ed:	jns    0x41d966
  41d8ef:	cmp    al,0xa
  41d8f1:	hlt    
  41d8f2:	fisub  DWORD PTR [esi+esi*2-0x7751aee0]
  41d8f9:	lds    edi,FWORD PTR [ecx-0x61146bbe]
  41d8ff:	dec    esp
  41d900:	sbb    BYTE PTR es:[edx-0x11],bh
  41d904:	(bad)  
  41d906:	fxch   st(5)
  41d908:	dec    edi
  41d909:	inc    esi
  41d90a:	and    ah,dl
  41d90c:	jle    0x41d8dd
  41d90e:	mov    dl,0x5e
  41d910:	cmc    
  41d911:	jmp    0x1a1a8162
  41d916:	jae    0x41d988
  41d918:	pop    esp
  41d919:	ins    DWORD PTR es:[edi],dx
  41d91a:	enter  0xc85a,0xe8
  41d91e:	push   0xc7259021
  41d923:	in     al,dx
  41d924:	mov    ds:0xae0298a7,eax
  41d929:	(bad)  
  41d92a:	popa   
  41d92b:	mov    edi,0x8639a801
  41d930:	mov    eax,ds:0x699f2521
  41d935:	out    dx,al
  41d936:	push   esi
  41d937:	xchg   ebp,eax
  41d938:	pop    edx
  41d939:	outs   dx,BYTE PTR ds:[esi]
  41d93a:	xchg   ebp,eax
  41d93b:	push   esp
  41d93c:	(bad)  
  41d93d:	dec    esp
  41d93e:	cmp    eax,0x10f392ad
  41d943:	clc    
  41d944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d945:	pop    es
  41d946:	out    dx,al
  41d947:	aaa    
  41d948:	mov    ds:0x818a6d7b,eax
  41d94d:	out    0x2c,al
  41d94f:	not    BYTE PTR [edx]
  41d951:	addr16 sbb eax,0x2402ed61
  41d957:	inc    DWORD PTR [esi+eax*2-0x139935b4]
  41d95e:	cwde   
  41d95f:	xchg   esp,eax
  41d960:	rcr    DWORD PTR [eax+0x2f],1
  41d963:	jmp    0x891e:0x1d928a8
  41d96a:	pop    ss
  41d96b:	(bad)  
  41d96c:	adc    eax,0xeb1beb7d
  41d971:	inc    edi
  41d972:	fcom   QWORD PTR ds:0x492f4baf
  41d978:	ins    BYTE PTR es:[edi],dx
  41d979:	and    DWORD PTR [ebx-0x69],ebp
  41d97c:	mov    ecx,0xacd3c789
  41d981:	xor    bh,BYTE PTR [edx-0x589dcd16]
  41d987:	cld    
  41d988:	add    esi,ebx
  41d98a:	cmp    ebx,edi
  41d98c:	xor    eax,0xf8bd2329
  41d991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d992:	jle    0x41d947
  41d994:	jno    0x41d92c
  41d996:	cmp    eax,0xe4467872
  41d99b:	push   0xdfd1ae2a
  41d9a0:	sbb    BYTE PTR [edx+0x49191627],bl
  41d9a6:	das    
  41d9a7:	push   ds
  41d9a8:	pop    es
  41d9a9:	gs pop eax
  41d9ab:	dec    eax
  41d9ac:	lds    edx,FWORD PTR [ebx-0x4]
  41d9af:	xchg   edi,eax
  41d9b0:	jnp    0x41d95e
  41d9b2:	addr16 ret 0x6a5b
  41d9b6:	getsec 
  41d9b8:	cwde   
  41d9b9:	dec    ecx
  41d9ba:	pop    esi
  41d9bb:	repz pop ss
  41d9bd:	xor    BYTE PTR [ecx-0x7b],0xc2
  41d9c1:	jp     0x41d97b
  41d9c3:	popa   
  41d9c4:	outs   dx,DWORD PTR ds:[esi]
  41d9c5:	or     BYTE PTR [ecx],0x5
  41d9c8:	arpl   di,si
  41d9ca:	jecxz  0x41d9d9
  41d9cc:	xor    eax,0x84e86c15
  41d9d1:	int    0xa6
  41d9d3:	sbb    al,0x78
  41d9d5:	adc    DWORD PTR [edx-0x35bc9763],ecx
  41d9db:	dec    edi
  41d9dc:	sub    al,0xcf
  41d9de:	nop
  41d9df:	xchg   esp,eax
  41d9e0:	es aam 0x87
  41d9e3:	sbb    DWORD PTR [esi+ecx*4+0x26],esi
  41d9e7:	popf   
  41d9e8:	add    DWORD PTR [ecx],0xffffffea
  41d9eb:	test   BYTE PTR [ebp-0x52f5d7a4],al
  41d9f1:	inc    edi
  41d9f2:	lds    ebx,FWORD PTR ds:0x9d586090
  41d9f8:	dec    edx
  41d9f9:	cmp    esi,ebp
  41d9fb:	sbb    edx,DWORD PTR [eax-0x34]
  41d9fe:	je     0x41da01
  41da00:	in     eax,0x74
  41da02:	dec    esp
  41da03:	pop    edx
  41da04:	mov    DWORD PTR [ecx+0x5314b097],0x6fa6e28e
  41da0e:	cmp    DWORD PTR [ebp-0x4a],ebp
  41da11:	repz cwde 
  41da13:	xor    DWORD PTR [edi-0x6c],esp
  41da16:	or     dh,BYTE PTR [ecx-0x1e]
  41da19:	push   cs
  41da1a:	cmp    al,BYTE PTR [ebx-0x1114479b]
  41da20:	into   
  41da21:	stos   BYTE PTR es:[edi],al
  41da22:	mov    dh,0x4c
  41da24:	and    esi,esi
  41da26:	mov    cl,0x93
  41da28:	xchg   esp,eax
  41da29:	sub    esp,eax
  41da2b:	jp     0x41da07
  41da2d:	add    esp,ecx
  41da2f:	add    eax,DWORD PTR [ecx-0xffa7c9c]
  41da35:	add    al,0x35
  41da37:	jae    0x41da07
  41da39:	jnp    0x41d9fd
  41da3b:	or     eax,0x2a96d1df
  41da40:	popa   
  41da41:	test   eax,0x1ccc2a43
  41da46:	jp     0x41da34
  41da48:	and    eax,0x180f2155
  41da4d:	mov    edx,cs
  41da4f:	cmp    ah,BYTE PTR [edx+ecx*4+0x29]
  41da53:	mov    DWORD PTR [edx],ebp
  41da55:	adc    al,0x1a
  41da57:	icebp  
  41da58:	mov    WORD PTR [esp+edi*8+0x49c3a884],?
  41da5f:	popa   
  41da60:	sbb    dl,al
  41da62:	lea    esi,[ebx+0x356748e]
  41da68:	mov    ebp,0x6bfa4415
  41da6d:	sub    eax,0x184da1d3
  41da72:	and    DWORD PTR [ebx],edi
  41da74:	test   BYTE PTR [ebp+edi*8-0x2],cl
  41da78:	and    dh,ah
  41da7a:	ror    BYTE PTR [ecx-0x52],cl
  41da7d:	jbe    0x41daf4
  41da7f:	dec    edi
  41da80:	pop    ss
  41da81:	dec    BYTE PTR [ebp-0x6f104be0]
  41da87:	inc    ecx
  41da88:	lock loop 0x41dabb
  41da8b:	aaa    
  41da8c:	fldcw  WORD PTR [eax]
  41da8e:	sbb    ebx,esp
  41da90:	(bad)  [esp+edx*2]
  41da93:	adc    al,0x92
  41da95:	inc    ebp
  41da96:	dec    ebx
  41da97:	mov    ebp,0x5ad1c1d7
  41da9c:	jb     0x41dad2
  41da9e:	sub    eax,0x66339aa
  41daa3:	call   0x28122cfd
  41daa8:	test   BYTE PTR [esi+0xcdf1553],0x8e
  41daaf:	outs   dx,DWORD PTR ds:[esi]
  41dab0:	add    ah,dl
  41dab2:	add    al,0xdc
  41dab4:	mov    ebp,0x4b3f523c
  41dab9:	push   es
  41daba:	ins    DWORD PTR es:[edi],dx
  41dabb:	cli    
  41dabc:	dec    ebp
  41dabd:	xchg   edx,eax
  41dabe:	cmc    
  41dabf:	repz cmp al,0x6b
  41dac2:	mov    edi,0x7fd1ca5c
  41dac7:	sahf   
  41dac8:	aaa    
  41dac9:	xchg   esp,edi
  41dacb:	pop    ss
  41dacc:	hlt    
  41dacd:	in     eax,0x82
  41dacf:	inc    eax
  41dad0:	mov    dh,0xc1
  41dad2:	scas   al,BYTE PTR es:[edi]
  41dad3:	imul   eax,DWORD PTR [ebx-0x7e],0x5667139a
  41dada:	lea    eax,[edi]
  41dadc:	loop   0x41da8e
	...
  41dae6:	retf   0xe76a
  41dae9:	ja     0x41dad2
  41daeb:	(bad)  
  41daec:	(bad)  
  41daee:	daa    
  41daef:	inc    ebx
  41daf0:	call   0xcb47876f
  41daf5:	jae    0x41da92
  41daf7:	rol    DWORD PTR [ecx],cl
  41daf9:	add    BYTE PTR [eax],ah
  41dafb:	pop    es
  41dafc:	add    BYTE PTR [eax],al
  41dafe:	lock cli 
  41db00:	pop    ecx
  41db01:	sbb    al,0x21
  41db03:	fdivp  st(6),st
  41db05:	mov    esi,0x80d42d90
  41db0a:	mov    esi,0xabd87bbb
  41db0f:	nop
  41db10:	scas   eax,DWORD PTR es:[edi]
  41db11:	stos   BYTE PTR es:[edi],al
  41db12:	into   
  41db13:	test   al,dh
  41db15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db16:	pop    esp
  41db17:	repnz clc 
  41db19:	xchg   DWORD PTR [edx+0x7b],esi
  41db1c:	xchg   ebx,eax
  41db1d:	mov    ?,WORD PTR [ebp-0x18fe64cc]
  41db23:	jge    0x41dba0
  41db25:	fmul   QWORD PTR [ebp-0x3e]
  41db28:	pop    eax
  41db29:	hlt    
  41db2a:	pop    esp
  41db2b:	inc    ebx
  41db2c:	mov    edi,edx
  41db2e:	dec    eax
  41db2f:	inc    esp
  41db30:	mov    ah,0x3
  41db32:	mov    ah,0x11
  41db34:	scas   eax,DWORD PTR es:[edi]
  41db35:	inc    edx
  41db36:	test   al,0xb5
  41db38:	das    
  41db39:	mov    esi,0x9268e3c0
  41db3e:	std    
  41db3f:	fidiv  WORD PTR [esi-0x7ae64f53]
  41db45:	je     0x41dbae
  41db47:	mov    BYTE PTR [edi+eiz*2+0x45c8effe],cl
  41db4e:	or     BYTE PTR [ebx-0x3b],ah
  41db51:	xchg   edi,eax
  41db52:	jle    0x41db80
  41db54:	xor    eax,0x393127d1
  41db59:	pop    esp
  41db5a:	fcmovnb st,st(0)
  41db5c:	jmp    0x41dafb
  41db5e:	je     0x41dbdc
  41db60:	push   ebp
  41db61:	int    0x0
  41db63:	out    0xe,al
  41db65:	loopne 0x41dba2
  41db67:	retf   0xa0ab
  41db6a:	repz xchg ebx,eax
  41db6c:	imul   BYTE PTR [edi+0x73]
  41db6f:	retf   
  41db70:	push   0xccae8896
  41db75:	and    ebp,DWORD PTR [edi+0x64a48e08]
  41db7b:	pusha  
  41db7c:	push   ecx
  41db7d:	out    0xe1,al
  41db7f:	lahf   
  41db80:	mov    ebx,0xf2e86b8
  41db85:	push   ecx
  41db86:	jp     0x41db0a
  41db88:	pusha  
  41db89:	sub    eax,0x14984926
  41db8e:	dec    esi
  41db8f:	fcom   st(1)
  41db91:	push   cs
  41db92:	cdq    
  41db93:	mov    bh,0x9
  41db95:	out    0xfa,eax
  41db97:	in     eax,0x23
  41db99:	mul    BYTE PTR [ebx]
  41db9b:	or     ecx,edx
  41db9d:	sub    eax,0x293621aa
  41dba2:	mov    ds:0xd4a69101,al
  41dba7:	aaa    
  41dba8:	add    eax,0xc3464033
  41dbad:	lahf   
  41dbae:	and    dx,WORD PTR [edx+0x67514d0d]
  41dbb5:	dec    eax
  41dbb6:	dec    ebp
  41dbb7:	xor    edi,esp
  41dbb9:	sub    eax,0x34138c9d
  41dbbe:	out    0x52,eax
  41dbc0:	adc    DWORD PTR ds:0x84ac182b,0x6d
  41dbc7:	adc    BYTE PTR [edi+0x40d62026],bl
  41dbcd:	jmp    0x4af726ec
  41dbd2:	ds jno 0x41dc02
  41dbd5:	sub    ch,dh
  41dbd7:	cmp    ebx,DWORD PTR [edx]
  41dbd9:	mov    ah,0x11
  41dbdb:	jns    0x41dc10
  41dbdd:	or     ecx,DWORD PTR [esi]
  41dbdf:	gs mov edx,0x17b8987e
  41dbe5:	fisttp DWORD PTR [ecx+0x30149ae4]
  41dbeb:	dec    ecx
  41dbec:	mov    edi,0xc41f5d12
  41dbf1:	inc    ecx
  41dbf2:	push   eax
  41dbf3:	int    0x41
  41dbf5:	cmp    BYTE PTR [edi-0x36bb39f5],dh
  41dbfb:	mov    ds:0x99ced4e3,eax
  41dc00:	and    BYTE PTR [eax-0x55],ch
  41dc03:	jb     0x41dc40
  41dc05:	js     0x41dc13
  41dc07:	out    0xde,al
  41dc09:	or     esi,DWORD PTR [edi-0x6eb7a183]
  41dc0f:	pop    ebp
  41dc10:	sbb    ebx,DWORD PTR [esi+0x66a1064f]
  41dc16:	les    esp,FWORD PTR [eax+0x76]
  41dc19:	imul   eax,DWORD PTR [edx+0x38],0xd9fdbdbe
  41dc20:	mov    bh,0xfa
  41dc22:	mul    BYTE PTR [ebp-0x61]
  41dc25:	mov    ebp,0xc0394337
  41dc2a:	js     0x41dc24
  41dc2c:	or     al,0x8a
  41dc2e:	mov    al,0x65
  41dc30:	xchg   esp,esi
  41dc32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc33:	repnz add cl,BYTE PTR [edx-0x5d02fc49]
  41dc3a:	xor    eax,0x5436f33a
  41dc3f:	popa   
  41dc40:	mov    BYTE PTR [esp+eax*8-0x65],ah
  41dc44:	mov    esp,esi
  41dc46:	rol    BYTE PTR [ebp+0x6],cl
  41dc49:	sbb    DWORD PTR [ebx-0x37],ecx
  41dc4c:	inc    ecx
  41dc4d:	push   0x46
  41dc4f:	in     eax,0x3b
  41dc51:	retf   
  41dc52:	jmp    0x41dcba
  41dc54:	mov    cl,0x9d
  41dc56:	xchg   dh,ch
  41dc58:	fucomi st,st(7)
  41dc5a:	aad    0x10
  41dc5c:	lahf   
  41dc5d:	mov    ebx,0xd373ee9b
  41dc62:	bound  eax,QWORD PTR [esi]
  41dc64:	jp     0x41dc3f
  41dc66:	push   edi
  41dc67:	mov    cl,0xe0
  41dc69:	je     0x41dcdd
  41dc6b:	fidivr WORD PTR [edi]
  41dc6d:	and    al,0xb
  41dc6f:	pop    edx
  41dc70:	gs xchg esi,eax
  41dc72:	jp     0x41dc11
  41dc74:	aas    
  41dc75:	loopne 0x41dc35
  41dc77:	xor    bl,BYTE PTR [ecx+0x722782a9]
  41dc7d:	aaa    
  41dc7e:	sbb    BYTE PTR [ecx+0x7a37ed27],ch
  41dc84:	adc    BYTE PTR [ecx+0x10],dl
  41dc87:	jl     0x41dcf3
  41dc89:	push   esi
  41dc8a:	mov    al,ds:0xf7e59fbf
  41dc8f:	repz cmp eax,0xd0dbc4b7
  41dc95:	mov    ah,0x9d
  41dc97:	push   es
  41dc98:	outs   dx,BYTE PTR ds:[esi]
  41dc99:	mov    cl,0xf
  41dc9b:	pop    ebx
  41dc9c:	dec    esi
  41dc9d:	cmc    
  41dc9e:	outs   dx,BYTE PTR ds:[esi]
  41dc9f:	retf   
  41dca0:	dec    eax
  41dca1:	add    eax,0xfa7020a0
  41dca6:	retf   
  41dca7:	scas   al,BYTE PTR es:[edi]
  41dca8:	adc    eax,0xbb16ec74
  41dcad:	inc    esp
  41dcae:	out    dx,eax
  41dcaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcb0:	(bad)  
  41dcb1:	lds    edx,FWORD PTR [eax-0x37f9fd5e]
  41dcb7:	mov    cl,0x74
  41dcb9:	fidivr WORD PTR [edx+0x4479dc28]
  41dcbf:	xchg   esi,eax
  41dcc0:	and    ebp,DWORD PTR [ecx+edi*2-0x4]
  41dcc4:	push   esi
  41dcc5:	nop
  41dcc6:	mov    DWORD PTR [edi+ecx*2-0x36],0xc8032d16
  41dcce:	lock test eax,0xe1a8e888
  41dcd4:	dec    ecx
  41dcd5:	and    eax,0x9d0f8a12
  41dcda:	nop
  41dcdb:	xchg   BYTE PTR [edi+edx*1],bl
  41dcde:	xor    eax,0xcbe7e1a9
  41dce3:	sahf   
  41dce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dce5:	repnz imul edx,DWORD PTR [esi+ebp*2-0x603f2ccc],0x9d0ad9fd
  41dcf1:	push   edx
  41dcf2:	scas   al,BYTE PTR es:[edi]
  41dcf3:	jb     0x41dd5e
  41dcf5:	enter  0xc9ba,0x27
  41dcf9:	dec    edx
  41dcfa:	inc    ebx
  41dcfb:	jo     0x41dcce
  41dcfd:	imul   esp,DWORD PTR [edx+eiz*4-0x67b271c5],0xa8678a28
  41dd08:	add    eax,0x2f40c713
  41dd0d:	xchg   BYTE PTR [ebx],bl
  41dd0f:	shl    BYTE PTR ds:0x880fb86d,1
  41dd15:	out    dx,al
  41dd16:	adc    DWORD PTR [esi+0xa],eax
  41dd19:	aas    
  41dd1a:	dec    edx
  41dd1b:	jecxz  0x41dcbb
  41dd1d:	dec    ebx
  41dd1e:	and    eax,0xb4a28220
  41dd23:	xor    ebp,DWORD PTR [esi-0x11]
  41dd26:	pop    edx
  41dd27:	or     eax,edx
  41dd29:	or     ch,0xef
  41dd2c:	out    0xa5,al
  41dd2e:	test   eax,0x8c5582d9
  41dd33:	out    dx,eax
  41dd34:	lds    esp,FWORD PTR [ebp+ebx*2-0x6861160f]
  41dd3b:	xchg   edx,eax
  41dd3c:	xchg   BYTE PTR [eax-0x7c403e51],bh
  41dd42:	repnz inc esp
  41dd44:	xchg   edx,eax
  41dd45:	popa   
  41dd46:	adc    al,0x59
  41dd48:	test   eax,0xff648b
  41dd4d:	xchg   esi,eax
  41dd4e:	mov    eax,ds:0xe0d49dd2
  41dd53:	xor    eax,0xb0c5d789
  41dd58:	push   esi
  41dd59:	addr16 (bad) 
  41dd5b:	cld    
  41dd5c:	inc    esp
  41dd5d:	xlat   BYTE PTR ds:[ebx]
  41dd5e:	add    al,0xa
  41dd60:	aam    0x3a
  41dd62:	push   cs
  41dd63:	unpcklps xmm3,xmm5
  41dd66:	sub    dl,BYTE PTR [edi+0x55]
  41dd69:	(bad)  
  41dd6a:	sti    
  41dd6b:	ret    
  41dd6c:	pop    ecx
  41dd6d:	mov    gs,ebp
  41dd6f:	and    BYTE PTR [ebp-0x4d],bh
  41dd72:	mov    ah,BYTE PTR [esi+eax*4+0x18d46b70]
  41dd79:	dec    ecx
  41dd7a:	enter  0xee00,0x43
  41dd7e:	test   eax,0x7cb0faf0
  41dd83:	sub    DWORD PTR [esi+0x27],esp
  41dd86:	fxch   st(3)
  41dd88:	jecxz  0x41dd17
  41dd8a:	mov    bl,0x47
  41dd8c:	cdq    
  41dd8d:	or     DWORD PTR ds:0x4dae7004,ebp
  41dd93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd94:	jl     0x41dd34
  41dd96:	fisub  DWORD PTR [ebx-0x504b7cd5]
  41dd9c:	xchg   BYTE PTR [eax+0x74b888b2],ch
  41dda2:	hlt    
  41dda3:	test   al,0x38
  41dda5:	ret    
  41dda6:	iret   
  41dda7:	and    ebp,DWORD PTR [ebp+0x62]
  41ddaa:	xlat   BYTE PTR ds:[ebx]
  41ddab:	mov    cl,0x3e
  41ddad:	pushaw 
  41ddaf:	jp     0x41de1f
  41ddb1:	xchg   ecx,eax
  41ddb2:	add    eax,0xe1b6b53b
  41ddb7:	jmp    0x294e86a7
  41ddbc:	aaa    
  41ddbd:	fstp   QWORD PTR [edi]
  41ddbf:	or     edx,DWORD PTR [ecx]
  41ddc1:	out    0x8e,eax
  41ddc3:	(bad)  
  41ddc4:	cli    
  41ddc5:	mov    ds,WORD PTR [ecx]
  41ddc7:	outs   dx,DWORD PTR ds:[esi]
  41ddc8:	fistp  WORD PTR [ecx]
  41ddca:	sbb    DWORD PTR [ebx+0x4afd67b],eax
  41ddd0:	mov    bl,BYTE PTR [edi]
  41ddd2:	dec    esi
  41ddd3:	jecxz  0x41dd8d
  41ddd5:	mov    eax,0x9c31856b
  41ddda:	and    esi,DWORD PTR [eax]
  41dddc:	mov    WORD PTR [esp+edx*2+0x43],es
  41dde0:	mov    dh,0xde
  41dde2:	xchg   ebp,eax
  41dde3:	shr    BYTE PTR [ebx-0x79],1
  41dde6:	pop    edi
  41dde7:	add    al,0xf1
  41dde9:	sbb    al,0x1b
  41ddeb:	arpl   sp,dx
  41dded:	out    0xe5,eax
  41ddef:	xor    eax,0xa9a5724a
  41ddf4:	lock inc ebx
  41ddf6:	mov    ecx,0x79f9b79b
  41ddfb:	xor    ebx,DWORD PTR [ecx]
  41ddfd:	or     al,BYTE PTR [edx]
  41ddff:	daa    
  41de00:	inc    esp
  41de01:	adc    eax,0xab801217
  41de06:	cdq    
  41de07:	cmp    DWORD PTR [ecx+esi*2-0x8],esi
  41de0b:	ret    
  41de0c:	jp     0x41de1a
  41de0e:	xchg   esp,eax
  41de0f:	mov    eax,0x13417b90
  41de14:	scas   eax,DWORD PTR es:[edi]
  41de15:	hlt    
  41de16:	mov    esi,eax
  41de18:	jb     0x41ddfb
  41de1a:	jge    0x41ddc1
  41de1c:	sbb    DWORD PTR [edx-0x43],edx
  41de1f:	push   0x9dbb7784
  41de24:	add    BYTE PTR [eax],ah
  41de26:	std    
  41de27:	out    0x9f,al
  41de29:	loopne 0x41de95
  41de2b:	xchg   ebp,eax
  41de2c:	cmp    ch,BYTE PTR [ebp+0x38]
  41de2f:	xor    DWORD PTR [ebx+0x92abbf7],ecx
  41de35:	jb     0x41de63
  41de37:	pushf  
  41de38:	push   eax
  41de39:	shl    DWORD PTR [esi+0x484d0907],1
  41de3f:	push   ecx
  41de40:	sub    DWORD PTR [ecx],edi
  41de42:	mov    edx,0x3b183675
  41de47:	imul   ebx,ecx,0x29
  41de4a:	push   es
  41de4b:	dec    eax
  41de4c:	sar    DWORD PTR [edx],0xe9
  41de4f:	lock imul ecx,DWORD PTR [eax+eiz*8-0x54],0x63
  41de55:	mov    eax,ds:0x12b40e5a
  41de5a:	cmp    dh,ah
  41de5c:	sahf   
  41de5d:	cs inc esp
  41de5f:	push   edi
  41de60:	xlat   BYTE PTR ds:[ebx]
  41de61:	sub    ah,BYTE PTR [edx]
  41de63:	push   cs
  41de64:	cdq    
  41de65:	loopne 0x41de53
  41de67:	aaa    
  41de68:	out    dx,eax
  41de69:	cmp    ch,al
  41de6b:	inc    edi
  41de6c:	mov    dh,BYTE PTR [edx]
  41de6e:	das    
  41de6f:	dec    ecx
  41de70:	rol    DWORD PTR [edi],cl
  41de72:	shr    BYTE PTR [edx],1
  41de74:	retf   0xb31e
  41de77:	outs   dx,BYTE PTR ds:[esi]
  41de78:	ret    
  41de79:	xor    eax,0xefe396ab
  41de7e:	shl    BYTE PTR [eax+0x69],cl
  41de81:	fsin   
  41de83:	nop
  41de84:	aad    0x6b
  41de86:	mov    ?,WORD PTR [ecx-0x2c]
  41de89:	test   BYTE PTR [eax+eiz*1],al
  41de8c:	(bad)  
  41de8d:	fsub   DWORD PTR [eax]
  41de8f:	push   0x77
  41de91:	xchg   dl,cl
  41de93:	(bad)  
  41de94:	fld    QWORD PTR [edi-0x4ce6a423]
  41de9a:	popf   
  41de9b:	stc    
  41de9c:	out    0xb9,eax
  41de9e:	shl    BYTE PTR [edi+0x43bc2493],1
  41dea4:	aam    0xf5
  41dea6:	cmp    DWORD PTR [ebx+0x32a50bb4],edi
  41deac:	inc    eax
  41dead:	and    esp,ebp
  41deaf:	push   esi
  41deb0:	into   
  41deb1:	mov    esi,0x8eda980f
  41deb6:	aad    0xc3
  41deb8:	xor    eax,0xaa4c578c
  41debd:	add    DWORD PTR [ecx],esp
  41debf:	nop
  41dec0:	in     al,dx
  41dec1:	imul   edx,DWORD PTR [ebp-0x6a],0xbf4c1c9d
  41dec8:	pop    ebp
  41dec9:	fmul   QWORD PTR [edi+0x9]
  41decc:	jge    0x41df01
  41dece:	cmc    
  41decf:	inc    ebp
  41ded0:	in     eax,dx
  41ded1:	loop   0x41de94
  41ded3:	loopne 0x41df1f
  41ded5:	xor    dh,BYTE PTR [edi]
  41ded7:	es jns 0x41df24
  41deda:	inc    edi
  41dedb:	add    ebx,DWORD PTR [ebp-0x58]
  41dede:	(bad)  
  41dedf:	xor    DWORD PTR [esi+ecx*4+0x719cafb3],eax
  41dee6:	shl    cl,1
  41dee8:	push   esp
  41dee9:	call   0x954a0957
  41deee:	or     eax,0x30b28487
  41def3:	pop    ds
  41def4:	pop    edx
  41def5:	cdq    
  41def6:	(bad)  
  41def8:	dec    edi
  41def9:	and    dh,ch
  41defb:	inc    ebp
  41defc:	dec    esi
  41defd:	scas   al,BYTE PTR es:[edi]
  41defe:	(bad)  
  41deff:	push   edx
  41df00:	xchg   esp,eax
  41df01:	lods   al,BYTE PTR ds:[esi]
  41df02:	int    0xe7
  41df04:	add    BYTE PTR [edx+0x1ade09f8],cl
  41df0a:	cmp    DWORD PTR [eax+ecx*2+0x20],0xbfa993e1
  41df12:	adc    esp,esi
  41df14:	cmp    ah,bl
  41df16:	sub    edi,DWORD PTR [eax-0x73]
  41df19:	xchg   esp,eax
  41df1a:	or     DWORD PTR ds:0x1a0d55d5,edi
  41df20:	xor    eax,0xb5f47f07
  41df25:	adc    edi,edx
  41df27:	push   ebx
  41df28:	dec    edx
  41df29:	std    
  41df2a:	xchg   ebp,eax
  41df2b:	sub    eax,0x6e29cc28
  41df30:	fsub   QWORD PTR [ecx+0x44e5b41b]
  41df38:	jmp    0x41df8a
  41df3a:	stc    
  41df3b:	mov    ebp,0x8ffd0698
  41df40:	iret   
  41df41:	pusha  
  41df42:	dec    eax
  41df43:	add    cl,BYTE PTR [edx+0x6eb29259]
  41df49:	fs or  eax,0x38b912f3
  41df4f:	mov    ebp,0x7b9b40d6
  41df54:	popf   
  41df55:	out    0x60,eax
  41df57:	cdq    
  41df58:	ret    0xc312
  41df5b:	ins    BYTE PTR es:[edi],dx
  41df5c:	sbb    DWORD PTR [esi],0xffffffab
  41df5f:	xchg   DWORD PTR [ecx+0x56b9db58],ebp
  41df65:	loop   0x41df98
  41df67:	lods   al,BYTE PTR ds:[esi]
  41df68:	adc    al,BYTE PTR [ecx+0x22]
  41df6b:	mov    dl,0x8a
  41df6d:	cli    
  41df6e:	mov    dl,0x1e
  41df70:	inc    esi
  41df71:	dec    esp
  41df72:	fidiv  WORD PTR [eax]
  41df74:	inc    esi
  41df75:	and    edi,DWORD PTR ds:0x9dd1ad1d
  41df7b:	jp     0x41defe
  41df7d:	lds    eax,FWORD PTR [ebx-0x4728b06c]
  41df83:	iret   
  41df84:	(bad)  
  41df85:	bound  esi,QWORD PTR [edx+0x54]
  41df88:	retf   0x28c7
  41df8b:	jmp    0x3b9d9013
  41df90:	adc    BYTE PTR [esi+ecx*2-0x3],al
  41df94:	fistp  WORD PTR [eax+0x1841c99d]
  41df9a:	scas   al,BYTE PTR es:[edi]
  41df9b:	mov    ah,0x49
  41df9d:	adc    BYTE PTR [ebp+0x3aacd7f0],0xf9
  41dfa4:	sbb    eax,0x56b011dd
  41dfa9:	or     ch,bl
  41dfab:	mov    dl,0x85
  41dfad:	push   ebx
  41dfae:	test   al,0x64
  41dfb0:	test   eax,0x938502c4
  41dfb5:	push   cs
  41dfb6:	cdq    
  41dfb7:	and    ecx,DWORD PTR [esi+0x7858094f]
  41dfbd:	adc    DWORD PTR [edi],0x66
  41dfc0:	fsubr  DWORD PTR [ebp*4-0x352d467e]
  41dfc7:	cld    
  41dfc8:	retf   0x2006
  41dfcb:	inc    edx
  41dfcc:	dec    edx
  41dfcd:	(bad)  
  41dfce:	cwde   
  41dfcf:	imul   ebx,DWORD PTR [ebx-0x29119de],0xff5549b8
  41dfd9:	mov    cl,BYTE PTR [edx-0x18]
  41dfdc:	ret    
  41dfdd:	shl    BYTE PTR [eax],0x5e
  41dfe0:	sbb    DWORD PTR [edi-0x53c3ec23],esp
  41dfe6:	xchg   ah,dh
  41dfe8:	cwde   
  41dfe9:	or     al,0x48
  41dfeb:	mov    ds:0xc0395dc2,al
  41dff0:	arpl   WORD PTR fs:[ecx+0x21438051],ax
  41dff7:	js     0x41e06e
  41dff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dffa:	jo     0x41dfb6
  41dffc:	inc    eax
  41dffd:	sbb    bl,BYTE PTR [eax]
  41dfff:	(bad)  
  41e000:	test   DWORD PTR [esp+edx*8+0x19],0xcfae1b1a
  41e008:	push   0xffffffe1
  41e00a:	dec    ecx
  41e00b:	and    ecx,edi
  41e00d:	or     BYTE PTR [edi+0x3f52dde],dl
  41e013:	xor    DWORD PTR [esp+eiz*2+0x0],esi
  41e017:	pop    edi
  41e018:	push   esi
  41e019:	ja     0x41e072
  41e01b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e01c:	add    al,0xe0
  41e01e:	pushf  
  41e01f:	push   ebx
  41e020:	inc    edi
  41e021:	sub    eax,0xcc6f163a
  41e026:	sub    BYTE PTR [ebp+0x472994a1],bh
  41e02c:	(bad)  
  41e02d:	cmp    DWORD PTR [edx],edx
  41e02f:	jb     0x41dfca
  41e031:	jo     0x41dfcb
  41e033:	leave  
  41e034:	outs   dx,BYTE PTR ds:[esi]
  41e035:	mov    dh,0x4c
  41e037:	xchg   ecx,eax
  41e038:	imul   edi,eax,0xffffff87
  41e03b:	jge    0x41e01b
  41e03d:	jmp    FWORD PTR [edx-0x11aad024]
  41e043:	lds    edi,FWORD PTR [edi+0x110853b9]
  41e049:	sub    DWORD PTR [edi-0x69e0e094],0x9
  41e050:	add    BYTE PTR [edi+0x67],cl
  41e053:	pop    edx
  41e054:	push   0x4a
  41e056:	xor    DWORD PTR [edi+esi*8-0x2cc3fe8a],ebp
  41e05d:	xchg   esp,eax
  41e05e:	das    
  41e05f:	push   0x1214e597
  41e064:	mov    bh,0xdc
  41e066:	les    ecx,FWORD PTR cs:[ebx-0x7cecf787]
  41e06d:	dec    ax
  41e06f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e070:	mov    WORD PTR [edi],ds
  41e072:	and    ecx,0x24
  41e075:	add    cl,cl
  41e077:	jmp    0xf814223e
  41e07c:	adc    DWORD PTR [edx-0x36a2e57c],edi
  41e082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e083:	fisub  DWORD PTR [ebp+0xeb06e55]
  41e089:	or     eax,0x7c118be3
  41e08e:	xchg   edi,eax
  41e08f:	es stc 
  41e091:	mov    ds:0xcfc8be9f,eax
  41e096:	dec    esp
  41e097:	js     0x41e01c
  41e099:	and    eax,0xe68dace6
  41e09e:	cmp    bl,BYTE PTR [eax-0x4b]
  41e0a1:	fild   QWORD PTR [edi+0x3109a9f9]
  41e0a7:	mov    bh,0xc3
  41e0a9:	adc    al,0xfe
  41e0ab:	sbb    esi,edx
  41e0ad:	push   es
  41e0ae:	shr    BYTE PTR [edi],0x4
  41e0b1:	popf   
  41e0b2:	fucomip st,st(3)
  41e0b4:	xor    al,0x58
  41e0b6:	imul   dl
  41e0b8:	xor    al,0x88
  41e0ba:	(bad)  
  41e0bc:	scas   eax,DWORD PTR es:[edi]
  41e0bd:	push   esp
  41e0be:	call   0xd6a3:0xf6ebc072
  41e0c5:	mov    bh,0x5c
  41e0c7:	or     dh,BYTE PTR [edx+edx*1+0x3b]
  41e0cb:	mov    cl,dl
  41e0cd:	dec    ecx
  41e0ce:	jbe    0x41e122
  41e0d0:	pop    eax
  41e0d1:	push   ebp
  41e0d2:	scas   eax,DWORD PTR es:[edi]
  41e0d3:	cmc    
  41e0d4:	dec    edi
  41e0d5:	(bad)  
  41e0d8:	ds pop edi
  41e0da:	mov    WORD PTR [edi],gs
  41e0dc:	mov    DWORD PTR [ebp+0x4b],ebx
  41e0df:	xchg   esp,eax
  41e0e0:	popa   
  41e0e1:	std    
  41e0e2:	(bad)  
  41e0e3:	jmp    0x41e06a
  41e0e5:	pop    edi
  41e0e6:	pop    ebp
  41e0e7:	call   0x7ae3a33e
  41e0ec:	or     al,0x75
  41e0ee:	dec    edx
  41e0ef:	stc    
  41e0f0:	(bad)  
  41e0f1:	cld    
  41e0f2:	mov    bl,0x38
  41e0f4:	int    0x13
  41e0f6:	adc    bh,cl
  41e0f8:	inc    esi
  41e0f9:	pop    edx
  41e0fa:	btr    DWORD PTR [esi+ebp*2],0xe0
  41e0ff:	ds mov ebx,0x80cf667b
  41e105:	bound  eax,QWORD PTR [edx+eiz*8-0x41635a98]
  41e10c:	stc    
  41e10d:	xor    DWORD PTR [eax+0x299d0cbe],esp
  41e113:	inc    ebx
  41e114:	sbb    BYTE PTR [edi+ecx*2-0x66a72e8],0xff
  41e11c:	mov    al,ds:0x7cbb2533
  41e121:	mov    DWORD PTR [edi-0x3412c507],ebp
  41e127:	rcr    bl,1
  41e129:	inc    ebp
  41e12a:	mov    ebx,DWORD PTR [esi]
  41e12c:	mov    ds:0xbec86a94,eax
  41e131:	repnz pop ss
  41e133:	cli    
  41e134:	js     0x41e12b
  41e136:	mov    ch,0xe3
  41e138:	push   ebp
  41e139:	pop    ecx
  41e13a:	mov    bh,0xe
  41e13c:	pop    es
  41e13d:	sbb    BYTE PTR [edx*1-0x4a8aa2b4],ah
  41e144:	in     al,dx
  41e145:	jmp    0x41e0f5
  41e147:	mov    edi,0xcc6e7d7c
  41e14c:	and    BYTE PTR [edi-0x2ecb3aed],cl
  41e152:	out    dx,al
  41e153:	not    BYTE PTR [ebp+eiz*4-0x63917d30]
  41e15a:	xchg   ecx,eax
  41e15b:	xchg   edi,eax
  41e15c:	jbe    0x41e1c8
  41e15e:	sub    DWORD PTR [edx+0x4bef7ca1],eax
  41e164:	out    dx,al
  41e165:	pop    ebp
  41e166:	xchg   edi,eax
  41e167:	and    al,0x49
  41e169:	stos   BYTE PTR es:[edi],al
  41e16a:	lahf   
  41e16b:	xor    dl,dl
  41e16d:	xchg   edx,eax
  41e16e:	xor    DWORD PTR [eax],0xf322f407
  41e174:	jg     0x41e1f2
  41e176:	inc    ebp
  41e177:	cmp    al,0xd8
  41e179:	mov    ebp,0xe370c54b
  41e17e:	stos   DWORD PTR es:[edi],eax
  41e17f:	test   al,0xbe
  41e181:	push   esi
  41e182:	mov    ds:0xf57be72,eax
  41e187:	jae    0x41e1fc
  41e189:	bound  eax,QWORD PTR [edi+0x44]
  41e18c:	push   ds
  41e18d:	sbb    ah,BYTE PTR [eax-0x7e]
  41e190:	cld    
  41e191:	push   ebp
  41e192:	xor    edi,DWORD PTR [ebp-0x5e]
  41e195:	sar    edx,1
  41e197:	scas   al,BYTE PTR es:[edi]
  41e198:	inc    edx
  41e199:	add    BYTE PTR [eax],dl
  41e19b:	push   esi
  41e19c:	xchg   ebx,eax
  41e19d:	outs   dx,BYTE PTR ds:[esi]
  41e19e:	xchg   edi,eax
  41e19f:	jno    0x41e209
  41e1a1:	aad    0x21
  41e1a3:	bound  edx,QWORD PTR [ecx+0x4d]
  41e1a6:	enter  0xf3f2,0xa
  41e1aa:	xor    BYTE PTR [ebx-0x145f6036],ch
  41e1b0:	push   ds
  41e1b1:	out    0x94,al
  41e1b3:	and    BYTE PTR [esi+0x12c109f5],dh
  41e1b9:	and    eax,ebx
  41e1bb:	ss mov bl,0x46
  41e1be:	jp     0x41e179
  41e1c0:	ret    
  41e1c1:	mov    ecx,0xec8e04ea
  41e1c6:	iret   
  41e1c7:	mov    ch,0xdf
  41e1c9:	cmp    ebp,0x1a
  41e1cc:	repz xchg esp,eax
  41e1ce:	inc    edi
  41e1cf:	add    BYTE PTR [edi-0x21796142],ch
  41e1d5:	mov    esp,0xc6b9f2fd
  41e1da:	and    DWORD PTR [ebx],0xe577839f
  41e1e0:	xor    al,0xd0
  41e1e2:	or     eax,0x1592bb8
  41e1e7:	pop    edi
  41e1e8:	xchg   ebp,eax
  41e1e9:	push   edx
  41e1ea:	mov    ah,0x57
  41e1ec:	enter  0x4919,0x1b
  41e1f0:	cwde   
  41e1f1:	jae    0x41e20f
  41e1f3:	ret    0x86f4
  41e1f6:	and    ch,dh
  41e1f8:	cmp    BYTE PTR [ecx],bl
  41e1fa:	stos   DWORD PTR es:[edi],eax
  41e1fb:	lods   al,BYTE PTR ds:[esi]
  41e1fc:	mov    al,bl
  41e1fe:	test   al,0xaa
  41e200:	pop    edx
  41e201:	add    al,ch
  41e203:	stos   BYTE PTR es:[edi],al
  41e204:	pop    ss
  41e205:	jnp    0x41e1fc
  41e207:	xlat   BYTE PTR ds:[ebx]
  41e208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e209:	mov    ecx,0x85a485c1
  41e20e:	mov    edi,0x7d6c1ffd
  41e213:	fst    QWORD PTR [ebx-0x45]
  41e216:	repz sub DWORD PTR es:[ebx],0xec9db50
	...
  41e226:	push   cs
  41e227:	pop    esp
  41e228:	mov    esp,0xffe7fe47
  41e22d:	pop    ebp
  41e22e:	es mov eax,0xcfe9fe17
  41e234:	jmp    0x2000:0x1dabb14
  41e23b:	pop    es
  41e23c:	add    BYTE PTR [eax],al
  41e23e:	aas    
  41e23f:	loopne 0x41e1d8
  41e241:	lods   al,BYTE PTR ds:[esi]
  41e242:	mov    DWORD PTR [ebx-0x7a],eax
  41e245:	out    0x3b,al
  41e247:	push   edi
  41e248:	push   es
  41e249:	loopne 0x41e2a0
  41e24b:	ss jne 0x41e2b0
  41e24e:	adc    al,0xa7
  41e250:	xchg   ebp,eax
  41e251:	jge    0x41e2ad
  41e253:	and    BYTE PTR [eax],ch
  41e255:	jnp    0x41e25d
  41e257:	cs (bad) 
  41e259:	mov    ch,0xa8
  41e25b:	repnz xchg esi,eax
  41e25d:	mov    eax,ds:0x3f7f063b
  41e262:	(bad)  
  41e263:	cld    
  41e264:	aas    
  41e265:	mov    DWORD PTR [ebx],esp
  41e267:	mov    bl,0xc
  41e269:	imul   ecx,DWORD PTR [edi*2+0x6cd7ec99],0xffffffb4
  41e271:	jns    0x41e272
  41e273:	xchg   ebx,eax
  41e274:	push   ss
  41e275:	xchg   esp,eax
  41e276:	push   ebx
  41e277:	push   edx
  41e278:	inc    ebx
  41e279:	jmp    0xac22d512
  41e27e:	mov    edi,0xf65f9297
  41e283:	mov    bh,0x2
  41e285:	cmp    DWORD PTR [ebx-0xa],edi
  41e288:	aad    0x35
  41e28a:	push   esi
  41e28b:	mov    ebx,0x194bde7f
  41e290:	jmp    0x41e29c
  41e292:	out    0x1e,eax
  41e294:	repnz ds pop ds
  41e297:	in     eax,0x35
  41e299:	cmp    al,0x67
  41e29b:	les    ecx,FWORD PTR [eax]
  41e29d:	lea    edx,[edi-0x26d4297b]
  41e2a3:	enter  0x194e,0x9
  41e2a7:	es sbb ah,al
  41e2aa:	add    al,0xf0
  41e2ac:	inc    esi
  41e2ad:	out    dx,al
  41e2ae:	repnz lahf 
  41e2b0:	pusha  
  41e2b1:	xchg   edx,eax
  41e2b2:	mov    edx,0x29ca5024
  41e2b7:	das    
  41e2b8:	pop    edi
  41e2b9:	mov    DWORD PTR ds:0x11ccbf4c,ebx
  41e2bf:	lahf   
  41e2c0:	xor    eax,0x5b04e6e3
  41e2c5:	mul    eax
  41e2c7:	and    DWORD PTR [esi+0x5d],ecx
  41e2ca:	scas   eax,DWORD PTR es:[edi]
  41e2cb:	sbb    eax,0x5b1cbc65
  41e2d0:	inc    edx
  41e2d1:	push   esi
  41e2d2:	shl    cl,0xe9
  41e2d5:	in     al,dx
  41e2d6:	call   0x2f82a5b2
  41e2db:	loopne 0x41e347
  41e2dd:	and    bl,BYTE PTR [edx+0x3]
  41e2e0:	mov    ?,eax
  41e2e2:	xchg   edi,eax
  41e2e3:	inc    ebp
  41e2e4:	jge    0x41e289
  41e2e6:	and    DWORD PTR [edi+0x10],esi
  41e2e9:	loope  0x41e28d
  41e2eb:	aad    0xe9
  41e2ed:	(bad)  
  41e2ef:	sub    BYTE PTR [ecx],dl
  41e2f1:	scas   al,BYTE PTR es:[edi]
  41e2f2:	push   esp
  41e2f3:	dec    eax
  41e2f4:	scas   al,BYTE PTR es:[edi]
  41e2f5:	ins    DWORD PTR es:[edi],dx
  41e2f6:	sub    esi,ebx
  41e2f8:	jns    0x41e348
  41e2fa:	in     eax,dx
  41e2fb:	jae    0x41e37b
  41e2fd:	sti    
  41e2fe:	xor    ecx,ecx
  41e300:	not    BYTE PTR [esi+0x20423a2c]
  41e306:	cmp    BYTE PTR [edx+0x6a],al
  41e309:	cmp    dh,BYTE PTR [ecx+eax*2]
  41e30c:	fsub   QWORD PTR ds:0xf93680d9
  41e312:	aad    0x29
  41e314:	push   ebx
  41e315:	pop    ebp
  41e316:	(bad)  
  41e317:	sub    edx,DWORD PTR [eax-0x50d38cb1]
  41e31d:	ins    DWORD PTR es:[edi],dx
  41e31e:	cmp    al,BYTE PTR [ecx]
  41e320:	mov    ebx,0x7ee0e542
  41e325:	gs ret 
  41e327:	retf   
  41e328:	imul   DWORD PTR [ecx+eiz*8-0x24599f83]
  41e32f:	(bad)  
  41e330:	cmp    ebx,DWORD PTR [esi+0x11b936aa]
  41e336:	fdiv   QWORD PTR [ecx-0x3632fcc7]
  41e33c:	cmp    DWORD PTR [ecx+ecx*8+0xa],0xffffff82
  41e341:	not    BYTE PTR [edi+0x40]
  41e344:	aam    0x9a
  41e346:	dec    ecx
  41e347:	push   esp
  41e348:	sub    ecx,DWORD PTR [ecx]
  41e34a:	mov    eax,ds:0xde1893b7
  41e34f:	pop    ds
  41e350:	fwait
  41e351:	lods   al,BYTE PTR ds:[esi]
  41e352:	loop   0x41e318
  41e354:	cli    
  41e355:	fild   WORD PTR [edx]
  41e357:	nop
  41e358:	out    dx,eax
  41e359:	repz fidivr DWORD PTR ds:0x2b5b852d
  41e360:	xchg   esp,eax
  41e361:	out    0x4b,al
  41e363:	ds push 0x40d12599
  41e369:	clc    
  41e36a:	stc    
  41e36b:	lods   eax,DWORD PTR ds:[esi]
  41e36c:	or     ch,bh
  41e36e:	std    
  41e36f:	xor    cl,0xb1
  41e372:	shl    DWORD PTR [ecx+eiz*8],cl
  41e375:	(bad)  
  41e376:	retf   
  41e377:	jmp    0x41e3f4
  41e379:	das    
  41e37a:	add    dl,BYTE PTR [edi]
  41e37c:	das    
  41e37d:	inc    ecx
  41e37e:	mov    bh,0x67
  41e380:	fnsave [edx]
  41e382:	xor    al,0xbb
  41e384:	adc    dh,BYTE PTR [ebx+ebx*2+0x34]
  41e388:	call   0x9680:0xad50f17
  41e38f:	jp     0x41e3b9
  41e391:	inc    esp
  41e392:	jne    0x41e37f
  41e394:	sbb    eax,0x5d7743f0
  41e399:	cdq    
  41e39a:	jne    0x41e369
  41e39c:	cwde   
  41e39d:	mov    cl,0x46
  41e3a0:	adc    al,0xa2
  41e3a2:	ja     0x41e39a
  41e3a4:	outs   dx,DWORD PTR ds:[esi]
  41e3a5:	out    0xd0,eax
  41e3a7:	inc    ecx
  41e3a8:	in     al,dx
  41e3a9:	xor    bh,BYTE PTR [edx]
  41e3ab:	lea    esp,[edi-0x3a]
  41e3ae:	pop    ds
  41e3af:	pop    esp
  41e3b0:	pop    ebx
  41e3b1:	dec    ebp
  41e3b2:	sbb    al,0xd
  41e3b4:	add    DWORD PTR [esi-0x6cf713b8],ebp
  41e3ba:	mov    ds:0xdf68426c,eax
  41e3bf:	jl     0x41e3be
  41e3c1:	mov    dh,0xc2
  41e3c3:	cs nop
  41e3c5:	add    al,0xd3
  41e3c7:	or     DWORD PTR [eax+eiz*4+0x1a],ebx
  41e3cb:	pop    edx
  41e3cc:	sti    
  41e3cd:	imul   eax,ebp,0x383fa9e4
  41e3d3:	xchg   esp,eax
  41e3d4:	ins    DWORD PTR es:[edi],dx
  41e3d5:	out    0x3e,eax
  41e3d7:	push   0x62
  41e3d9:	js     0x41e3c8
  41e3db:	mov    esi,0x18227506
  41e3e0:	mov    ebx,0xe5a5786a
  41e3e5:	pop    esi
  41e3e6:	or     ebx,esp
  41e3e8:	shl    BYTE PTR [ebx],0x68
  41e3eb:	bts    DWORD PTR [edi+0x61],ebx
  41e3ef:	mov    BYTE PTR [ebx-0x4db84273],bl
  41e3f5:	in     eax,0x44
  41e3f7:	ss ins BYTE PTR es:[edi],dx
  41e3f9:	adc    eax,0x80e38142
  41e3fe:	jno    0x41e43d
  41e400:	dec    edx
  41e401:	or     BYTE PTR [esp+edx*1+0x7b],bh
  41e405:	mov    al,ds:0xfc86b00d
  41e40a:	xchg   ebp,eax
  41e40b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e40c:	or     eax,0xf6eba150
  41e411:	hlt    
  41e412:	jl     0x41e42d
  41e414:	test   al,0x6b
  41e416:	sar    BYTE PTR [ebx-0x4],cl
  41e419:	mov    ah,0xe
  41e41b:	call   0xe2b99172
  41e420:	pop    ebx
  41e421:	aas    
  41e422:	cmp    ah,BYTE PTR [eax+0x6010890f]
  41e428:	sub    bl,0x46
  41e42b:	retf   0x89a2
  41e42e:	pop    edi
  41e42f:	mov    DWORD PTR [edi+0x2e],edi
  41e432:	jno    0x41e408
  41e434:	fiadd  WORD PTR [edx+ecx*2+0x60]
  41e438:	mov    edx,esp
  41e43a:	adc    BYTE PTR [ebp+0x264b7bd8],ch
  41e440:	fistp  DWORD PTR [edx+eax*2-0x78281f0f]
  41e447:	enter  0x302d,0xee
  41e44b:	xor    DWORD PTR [ecx-0x4d],esp
  41e44e:	aas    
  41e44f:	test   DWORD PTR [eax-0x79cbc18a],0x3db99d69
  41e459:	cmp    DWORD PTR [esi+0x33],esp
  41e45c:	adc    BYTE PTR [esi-0x19],bl
  41e45f:	xor    al,0x47
  41e461:	pop    edi
  41e462:	cmovg  ebp,DWORD PTR cs:[ecx+0x7d]
  41e467:	(bad)  
  41e468:	mov    esp,0x590aae0
  41e46d:	cmp    esi,DWORD PTR [edi-0x67b0f8ad]
  41e473:	sahf   
  41e474:	pop    ecx
  41e475:	int3   
  41e476:	fs loopne 0x41e471
  41e479:	sub    DWORD PTR [esp+esi*1+0x48],eax
  41e47d:	xchg   edi,eax
  41e47e:	outs   dx,DWORD PTR ds:[esi]
  41e47f:	inc    edx
  41e480:	cld    
  41e481:	les    ebp,FWORD PTR [ebp+esi*8-0x6ba533e3]
  41e488:	push   ebp
  41e489:	push   esi
  41e48a:	dec    esi
  41e48b:	xor    esi,DWORD PTR [esi-0x433f5f2a]
  41e491:	aaa    
  41e492:	popf   
  41e493:	cmc    
  41e494:	sbb    BYTE PTR [edx-0x47728ee1],dl
  41e49a:	inc    esi
  41e49b:	scas   eax,DWORD PTR es:[edi]
  41e49c:	mov    ebp,0xe071713b
  41e4a1:	dec    eax
  41e4a2:	push   0xffffffb8
  41e4a4:	jmp    0xcd91c27c
  41e4a9:	add    al,0x8
  41e4ab:	imul   esi,DWORD PTR [edi],0x7a
  41e4ae:	out    dx,eax
  41e4af:	in     al,dx
  41e4b0:	push   ecx
  41e4b1:	inc    esp
  41e4b2:	jae    0x41e434
  41e4b4:	pop    ds
  41e4b5:	push   edi
  41e4b6:	lods   al,BYTE PTR ds:[esi]
  41e4b7:	add    al,0xfd
  41e4b9:	fbld   TBYTE PTR [ecx-0x67]
  41e4bc:	sar    ecx,0xc
  41e4bf:	ror    bh,cl
  41e4c1:	dec    ecx
  41e4c2:	loop   0x41e4b0
  41e4c4:	jae    0x41e4e2
  41e4c6:	imul   edx,DWORD PTR [edi-0xa],0x22
  41e4ca:	push   ds
  41e4cb:	mul    BYTE PTR [edx]
  41e4cd:	pop    edi
  41e4ce:	lods   al,BYTE PTR ds:[esi]
  41e4cf:	jp     0x41e48b
  41e4d1:	pop    edx
  41e4d2:	aad    0x1c
  41e4d4:	push   ds
  41e4d5:	dec    edi
  41e4d6:	sar    DWORD PTR [edx],1
  41e4d8:	mov    ebx,0x1a5952e2
  41e4dd:	call   0x666c:0xb1cf97b1
  41e4e4:	retf   0x5bca
  41e4e7:	mov    ch,0xb7
  41e4e9:	dec    ecx
  41e4ea:	(bad)  
  41e4eb:	test   al,0x1b
  41e4ed:	cmp    eax,DWORD PTR [ebx+0x1a]
  41e4f0:	push   ebp
  41e4f1:	stos   DWORD PTR es:[edi],eax
  41e4f2:	mov    bl,0x26
  41e4f4:	and    DWORD PTR [ebx-0x44],esi
  41e4f7:	fwait
  41e4f8:	push   esi
  41e4f9:	out    0x1e,al
  41e4fb:	inc    esp
  41e4fc:	mov    ah,0x24
  41e4fe:	aaa    
  41e4ff:	mov    bl,0xc9
  41e501:	daa    
  41e502:	pop    ecx
  41e503:	and    BYTE PTR [eax+0x2d14650b],dh
  41e509:	mov    dl,0xaa
  41e50b:	inc    ecx
  41e50c:	test   al,ch
  41e50e:	cs daa 
  41e510:	retf   
  41e511:	dec    edi
  41e512:	frstor [edx+edx*8+0x22]
  41e516:	addr16 cmp eax,0x172b2d17
  41e51c:	sub    BYTE PTR [ecx-0x28474ff1],bl
  41e522:	or     cl,BYTE PTR [ebx]
  41e524:	cmp    BYTE PTR [esi],cl
  41e526:	out    0x4d,eax
  41e528:	push   esi
  41e529:	das    
  41e52a:	sub    dh,dh
  41e52c:	push   ecx
  41e52d:	inc    eax
  41e52e:	jmp    0xb7f7:0x91482c13
  41e535:	push   ss
  41e536:	test   eax,0x1155b74a
  41e53b:	adc    al,0x58
  41e53d:	jmp    0x901273b4
  41e542:	(bad)  
  41e543:	cmc    
  41e544:	bound  ecx,QWORD PTR [ebx-0x57]
  41e547:	cld    
  41e548:	cmp    BYTE PTR [ebx-0x1b],cl
  41e54b:	or     al,0x6
  41e54d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e54e:	ret    0x8fb3
  41e551:	jmp    0x2bc216a3
  41e556:	ficomp DWORD PTR [esi]
  41e558:	add    al,0xc5
  41e55a:	imul   ecx,DWORD PTR [edi],0xffffffb3
  41e55d:	pop    esp
  41e55e:	mov    bl,0x5d
  41e560:	push   ebx
  41e561:	ret    0x17bc
  41e564:	inc    edx
  41e565:	mov    WORD PTR ds:0xa3f0741d,gs
  41e56b:	lahf   
  41e56c:	jmp    0xec7cfe8b
  41e571:	jo     0x41e52f
  41e573:	in     al,0xa5
  41e575:	sbb    edi,ebx
  41e577:	mov    ecx,0xb85d7984
  41e57c:	pop    ecx
  41e57d:	xor    eax,esi
  41e57f:	outs   dx,DWORD PTR ds:[esi]
  41e580:	xchg   BYTE PTR [esi-0x71],al
  41e583:	mov    eax,0x6e4b0c6b
  41e588:	mov    ch,0x61
  41e58a:	xor    eax,DWORD PTR [esi+ebp*8+0x49]
  41e58e:	mov    ds,WORD PTR [edi-0x3d]
  41e591:	scas   al,BYTE PTR es:[edi]
  41e592:	dec    esp
  41e593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e594:	bound  esi,QWORD PTR [edx+0x45]
  41e597:	das    
  41e598:	scas   al,BYTE PTR es:[edi]
  41e599:	inc    ecx
  41e59a:	scas   eax,DWORD PTR es:[edi]
  41e59b:	(bad)  
  41e59c:	cmp    ah,BYTE PTR [esp+ebx*8+0x44]
  41e5a0:	out    0xf4,eax
  41e5a2:	inc    edi
  41e5a3:	js     0x41e5ea
  41e5a5:	or     DWORD PTR [esi],eax
  41e5a7:	icebp  
  41e5a8:	mov    ah,bl
  41e5aa:	daa    
  41e5ab:	cmp    DWORD PTR [ebp+0x60ff6532],ebx
  41e5b1:	xchg   BYTE PTR [ecx],bh
  41e5b3:	sub    BYTE PTR [edx+0x5e],bh
  41e5b6:	jbe    0x41e59a
  41e5b8:	adc    DWORD PTR [edi-0x49],edx
  41e5bb:	sbb    al,0xea
  41e5bd:	pop    eax
  41e5be:	xor    bl,cl
  41e5c0:	fld    QWORD PTR [edi+ebp*4-0x469c6ad0]
  41e5c7:	sub    ebx,ecx
  41e5c9:	aaa    
  41e5ca:	pop    ebx
  41e5cb:	cwde   
  41e5cc:	jno    0x41e599
  41e5ce:	in     al,0x1e
  41e5d0:	retf   
  41e5d1:	repnz pop eax
  41e5d3:	add    eax,0xe74388bd
  41e5d8:	popf   
  41e5d9:	mov    ds:0x94d3d024,eax
  41e5de:	or     esp,DWORD PTR [eax]
  41e5e0:	and    eax,0xc01960ad
  41e5e5:	fisttp DWORD PTR [eax+eiz*8+0x10]
  41e5e9:	xchg   edi,eax
  41e5ea:	out    dx,eax
  41e5eb:	push   esp
  41e5ec:	aam    0x59
  41e5ee:	retf   
  41e5ef:	and    ch,BYTE PTR [esi-0x1f]
  41e5f2:	out    dx,al
  41e5f3:	sbb    esp,DWORD PTR [esi-0x15]
  41e5f6:	push   0x76
  41e5f8:	xor    al,0xee
  41e5fa:	dec    ebx
  41e5fb:	jne    0x41e5e1
  41e5fd:	ror    DWORD PTR [ecx-0x4c505aa5],1
  41e603:	fild   DWORD PTR [edi]
  41e605:	in     al,dx
  41e606:	xchg   ebx,eax
  41e607:	inc    ecx
  41e608:	mov    cl,0x52
  41e60a:	push   ds
  41e60b:	jp     0x41e5c0
  41e60d:	dec    ebp
  41e60e:	mov    cl,0xa
  41e610:	cs pop ecx
  41e612:	inc    ebp
  41e613:	dec    edi
  41e614:	les    edi,FWORD PTR [ecx-0x1]
  41e617:	int    0xb
  41e619:	mov    bh,0xa6
  41e61b:	mov    ecx,0xa39172d8
  41e620:	inc    ebx
  41e621:	ret    
  41e622:	clc    
  41e623:	lahf   
  41e624:	dec    ebp
  41e625:	mov    ebx,0x8547385
  41e62a:	pushf  
  41e62b:	and    BYTE PTR [ebx],ch
  41e62d:	in     eax,dx
  41e62e:	shl    BYTE PTR [esi+0x12],1
  41e631:	mov    edi,0x8d695ee7
  41e636:	push   edx
  41e637:	nop
  41e638:	out    0x54,al
  41e63a:	je     0x41e654
  41e63c:	xor    BYTE PTR [edx-0x6ebeeaa8],0xff
  41e643:	call   0x4ae3:0x69317737
  41e64a:	int    0x8
  41e64c:	mov    edx,0x16be9fdf
  41e651:	je     0x41e5e2
  41e653:	xor    eax,0xd72b68fa
  41e658:	pop    edx
  41e659:	cmc    
  41e65a:	(bad)  
  41e65b:	repnz xor BYTE PTR [ecx],bl
  41e65e:	cmp    al,0xc8
  41e660:	dec    esp
  41e661:	jecxz  0x41e681
  41e663:	cs mov edx,0x58ad14a4
  41e669:	mov    esp,0x2976c816
  41e66e:	les    ecx,FWORD PTR ds:0x921ef654
  41e674:	mov    esi,0x10be610f
  41e679:	inc    eax
  41e67a:	pop    ecx
  41e67b:	add    al,0x96
  41e67d:	jbe    0x41e66b
  41e67f:	cli    
  41e680:	inc    ebx
  41e681:	sbb    ecx,esi
  41e683:	xchg   cl,cl
  41e685:	sub    eax,0xdd4b7cd4
  41e68a:	stos   DWORD PTR es:[edi],eax
  41e68b:	jp     0x41e68d
  41e68d:	iret   
  41e68e:	xor    al,0x8a
  41e690:	into   
  41e691:	rol    DWORD PTR [edx],cl
  41e693:	imul   BYTE PTR [edi]
  41e695:	mov    dl,bl
  41e697:	add    BYTE PTR [eax+0x3e],ch
  41e69a:	enter  0xc7ae,0x4f
  41e69e:	ficomp WORD PTR [ebp-0x54eed9c1]
  41e6a4:	add    esp,esp
  41e6a6:	sbb    BYTE PTR [ecx+ebp*4],ah
  41e6a9:	dec    edi
  41e6aa:	(bad)  
  41e6ab:	sbb    DWORD PTR [esp+ecx*8-0x51],esp
  41e6af:	gs pushf 
  41e6b1:	(bad)  
  41e6b2:	jmp    0x517805d7
  41e6b7:	and    BYTE PTR [ecx-0x4703568f],ah
  41e6bd:	das    
  41e6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6bf:	xor    BYTE PTR [edx-0x8f24529],ah
  41e6c5:	mov    dh,0x47
  41e6c7:	mov    ch,0xce
  41e6c9:	jb     0x41e73a
  41e6cb:	cmp    ch,ch
  41e6cd:	sti    
  41e6ce:	pop    ebp
  41e6cf:	add    al,0xec
  41e6d1:	jg     0x41e6af
  41e6d3:	fisttp DWORD PTR [ebx+0x42]
  41e6d6:	mov    eax,0x35f3a4e0
  41e6db:	and    bl,BYTE PTR [edi+0x5b3040bf]
  41e6e1:	fs (bad) 
  41e6e3:	pop    esi
  41e6e4:	fisubr DWORD PTR [esi+ecx*2+0x52b1cc89]
  41e6eb:	add    esi,ebx
  41e6ed:	into   
  41e6ee:	sub    al,0x94
  41e6f0:	(bad)  
  41e6f1:	clc    
  41e6f2:	loop   0x41e678
  41e6f4:	std    
  41e6f5:	imul   ecx,DWORD PTR [edi],0x8449c5a1
  41e6fb:	aas    
  41e6fc:	(bad)  [edi+0x2f]
  41e6ff:	pop    ss
  41e700:	jecxz  0x41e75b
  41e702:	or     ah,BYTE PTR [eax]
  41e704:	das    
  41e705:	mov    ebp,0x9c6da540
  41e70a:	mov    dl,0x90
  41e70c:	aad    0x29
  41e70e:	sub    dh,BYTE PTR [eax+edi*8+0x6bca158b]
  41e715:	xchg   DWORD PTR [ebx-0x61],esp
  41e718:	xchg   edi,eax
  41e719:	shr    bh,1
  41e71b:	popf   
  41e71c:	hlt    
  41e71d:	push   eax
  41e71e:	sar    DWORD PTR [ebx],1
  41e720:	adc    eax,0x8aab60e0
  41e725:	push   edx
  41e726:	dec    edi
  41e727:	mov    ecx,0xbb151f03
  41e72c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e72d:	stc    
  41e72e:	sub    bh,BYTE PTR [ebx]
  41e730:	xor    eax,0x3fa13f1
  41e735:	jge    0x41e70c
  41e737:	(bad)  
  41e739:	test   eax,0x2f47f7a8
  41e73f:	push   0x65
  41e741:	repz mov esi,0xd3b2c6aa
  41e747:	call   0x913d:0x4efd6eba
  41e74e:	aaa    
  41e74f:	pop    es
  41e750:	xchg   ecx,ebp
  41e752:	jbe    0x41e7ba
  41e754:	pusha  
  41e755:	stos   DWORD PTR es:[edi],eax
  41e756:	in     eax,dx
  41e757:	iret   
  41e758:	mov    eax,0xb1f39aa8
  41e75d:	int    0x3
  41e75f:	lds    ebx,FWORD PTR [ebx-0x3206bfea]
  41e765:	or     BYTE PTR [ecx-0x32d64c56],0x0
  41e76c:	pop    ss
  41e76d:	daa    
  41e76e:	popa   
  41e76f:	cmp    ecx,DWORD PTR [eax+eiz*2]
  41e772:	shl    BYTE PTR [edx-0x3f],cl
  41e775:	push   edx
  41e776:	lods   eax,DWORD PTR ds:[esi]
  41e777:	jmp    0x3123753e
  41e77c:	or     BYTE PTR [edi],cl
  41e77e:	cmp    eax,0x4609d1e2
  41e783:	pop    edx
  41e784:	(bad)  
  41e785:	into   
  41e786:	scas   al,BYTE PTR es:[edi]
  41e787:	mov    BYTE PTR [esi],0xf2
  41e78a:	daa    
  41e78b:	xchg   BYTE PTR [edx+ecx*8+0x792ad61f],al
  41e792:	jns    0x41e7b3
  41e794:	pop    DWORD PTR [ecx+0x11]
  41e797:	jg     0x41e7dd
  41e799:	push   0x61f171de
  41e79e:	mov    al,ds:0x20c35cc9
  41e7a3:	add    ebp,edx
  41e7a5:	int    0x4e
  41e7a7:	jp     0x41e752
  41e7a9:	dec    ecx
  41e7aa:	add    dh,BYTE PTR ds:0xf2554cb
  41e7b0:	sbb    ebx,eax
  41e7b2:	gs mov dl,0xc4
  41e7b5:	cwde   
  41e7b6:	pop    es
  41e7b7:	out    dx,al
  41e7b8:	cld    
  41e7b9:	inc    eax
  41e7ba:	xchg   esi,eax
  41e7bb:	mov    cl,0xc5
  41e7bd:	xor    eax,0x4f5784b6
  41e7c2:	mov    ebx,0x2cee2051
  41e7c7:	or     al,0x75
  41e7c9:	xchg   DWORD PTR [ebx],ebp
  41e7cb:	dec    esi
  41e7cc:	popf   
  41e7cd:	test   al,0xa5
  41e7cf:	out    dx,al
  41e7d0:	or     eax,0x1c1ee3ce
  41e7d5:	cmp    eax,0xccbc7637
  41e7da:	xchg   edx,eax
  41e7db:	out    0x75,al
  41e7dd:	jmp    0x1caf:0x51f7b37f
  41e7e4:	mov    BYTE PTR [ecx+0xa8320fa],cl
  41e7ea:	imul   esp,DWORD PTR [ebx],0x19a8f5bd
  41e7f0:	inc    esi
  41e7f1:	mov    fs,ebx
  41e7f3:	adc    DWORD PTR [ebx-0x2decaede],eax
  41e7f9:	sbb    cl,bl
  41e7fb:	adc    al,0xa2
  41e7fd:	scas   al,BYTE PTR es:[edi]
  41e7fe:	js     0x41e814
  41e800:	imul   ebx,DWORD PTR [esp+ecx*2],0xb169ca0
  41e807:	sub    ah,ah
  41e809:	pop    es
  41e80a:	inc    edi
  41e80b:	int    0xfc
  41e80d:	inc    edx
  41e80e:	add    ebx,ecx
  41e810:	sub    ebp,ebp
  41e812:	push   eax
  41e813:	pop    eax
  41e814:	int    0x4f
  41e816:	mov    ds:0xff1b8d43,eax
  41e81b:	jl     0x41e85e
  41e81d:	mov    edi,0x850200aa
  41e822:	sbb    cl,BYTE PTR [eax]
  41e824:	cmp    bl,bl
  41e826:	fld    TBYTE PTR [esi+0xef3aa5c]
  41e82c:	fs mov esi,0x6087c9cf
  41e832:	dec    esp
  41e833:	ds mov dh,0x21
  41e836:	scas   al,BYTE PTR es:[edi]
  41e837:	sahf   
  41e838:	mov    cl,0x13
  41e83a:	hlt    
  41e83b:	clc    
  41e83c:	lods   al,BYTE PTR ds:[esi]
  41e83d:	cld    
  41e83e:	xchg   edx,eax
  41e83f:	jne    0x41e867
  41e841:	sub    DWORD PTR [esi],ebp
  41e843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e844:	xchg   ebx,eax
  41e845:	push   esi
  41e846:	pop    edi
  41e847:	pop    eax
  41e848:	jae    0x41e860
  41e84a:	dec    esi
  41e84b:	fild   QWORD PTR [ecx]
  41e84d:	dec    edi
  41e84e:	(bad)
  41e852:	lods   al,BYTE PTR ds:[esi]
  41e853:	jp     0x41e896
  41e855:	mov    esi,db7
  41e858:	shl    ebp,cl
  41e85a:	std    
  41e85b:	call   0x1734:0x9d9d275f
  41e862:	xor    ebp,edx
  41e864:	jbe    0x41e828
  41e866:	pop    edx
  41e867:	scas   eax,DWORD PTR es:[edi]
  41e868:	xor    BYTE PTR [edx+0x65],ah
  41e86b:	ja     0x41e860
  41e86d:	loope  0x41e8af
  41e86f:	out    dx,eax
  41e870:	fs mov dh,0x13
  41e873:	out    0x71,al
  41e875:	neg    BYTE PTR [esi+0x2faa1f34]
  41e87b:	mul    DWORD PTR [eax-0x7]
  41e87e:	pop    esi
  41e87f:	pop    ecx
  41e880:	mov    bh,0x3a
  41e882:	jae    0x41e863
  41e884:	mov    ebp,DWORD PTR [eax]
  41e886:	push   eax
  41e887:	or     bh,BYTE PTR [ecx+ebx*1-0x2d]
  41e88b:	cmp    al,BYTE PTR [edx+0x38]
  41e88e:	aam    0x70
  41e890:	jp     0x41e8b8
  41e892:	mov    BYTE PTR [ecx-0x1344b420],al
  41e898:	mov    ebp,0x182b6cef
  41e89d:	fidivr DWORD PTR [ebx+0x5d]
  41e8a0:	cmove  eax,ebx
  41e8a3:	sbb    dh,BYTE PTR [edx-0x1450bef8]
  41e8a9:	jg     0x41e90c
  41e8ab:	adc    ch,ch
  41e8ad:	popa   
  41e8ae:	or     al,0x8
  41e8b0:	fcom   QWORD PTR [ebx+0x71fa2d25]
  41e8b6:	pop    ds
  41e8b7:	mov    edi,0xb703f6a1
  41e8bc:	lods   al,BYTE PTR ds:[esi]
  41e8bd:	inc    ebx
  41e8be:	xor    ebx,DWORD PTR [ecx+0x11]
  41e8c1:	ins    DWORD PTR es:[edi],dx
  41e8c2:	psubw  mm5,QWORD PTR ds:0x384429d2
  41e8c9:	rol    cl,cl
  41e8cb:	and    cl,BYTE PTR ss:[ebp-0x1f]
  41e8cf:	jmp    0x32c8:0xa6ad48d2
  41e8d6:	mov    BYTE PTR [ebp+0x21f1b038],al
  41e8dc:	inc    DWORD PTR [edx-0x13ffcd4a]
  41e8e2:	iret   
  41e8e3:	mov    ss,WORD PTR [ecx]
  41e8e5:	cmp    bl,bh
  41e8e7:	mov    ds:0xd9f0902f,al
  41e8ec:	mov    edx,0x4c09b921
  41e8f1:	mov    esi,0x38bbd2d6
  41e8f6:	pushf  
  41e8f7:	in     al,dx
  41e8f8:	xor    eax,0xe16e087a
  41e8fd:	inc    edi
  41e8fe:	push   0x27
  41e900:	pop    ecx
  41e901:	mov    ds:0x11fba583,al
  41e906:	and    ch,BYTE PTR [edx-0xfd42f12]
  41e90c:	sub    ecx,edi
  41e90e:	push   edx
  41e90f:	xchg   ebp,eax
  41e910:	push   0x6b4abb38
  41e915:	(bad)  [ecx+0x5c5bd38]
  41e91b:	out    dx,al
  41e91c:	push   esi
  41e91d:	jnp    0x41e93f
  41e91f:	and    ch,BYTE PTR [ecx]
  41e921:	and    DWORD PTR [esi],eax
  41e923:	and    al,0x1f
  41e925:	clc    
  41e926:	test   BYTE PTR [edi+0x1dd3a226],dh
  41e92c:	sub    bh,BYTE PTR [esi]
  41e92e:	jle    0x41e974
  41e930:	mov    edx,0x174698a
  41e935:	mov    edi,0x942158f5
  41e93a:	pop    ecx
  41e93b:	push   ebp
  41e93c:	aas    
  41e93d:	cmp    BYTE PTR [edi+ebx*1-0x24380f81],bh
  41e944:	std    
  41e945:	xor    ah,BYTE PTR [edx]
  41e947:	sbb    al,0x6a
  41e949:	in     al,0x3a
  41e94b:	jmp    0x41e963
  41e94d:	sahf   
  41e94e:	xchg   ecx,eax
  41e94f:	sub    dl,BYTE PTR [eax+0x22]
  41e952:	mov    bh,0xc2
  41e954:	in     al,0xe9
  41e956:	sti    
  41e957:	mov    eax,DWORD PTR [ecx-0x470b8156]
  41e95d:	mov    bh,0x0
  41e95f:	add    BYTE PTR [eax],al
  41e961:	add    BYTE PTR [eax],al
  41e963:	add    BYTE PTR [eax],al
  41e965:	add    BYTE PTR [edi-0x1ab332f],ch
  41e96b:	pop    ebp
  41e96c:	mov    edi,0x5e13fbfb
  41e971:	cmp    DWORD PTR [eax-0x2487eee5],edx
  41e977:	loope  0x41e97a
  41e979:	add    BYTE PTR [eax],ah
  41e97b:	pop    es
  41e97c:	add    BYTE PTR [eax],al
  41e97e:	mov    esi,0x9cf2146f
  41e983:	or     cl,bl
  41e985:	pop    ds
  41e986:	call   0xaf7a:0x2fda3cf8
  41e98d:	jecxz  0x41e9af
  41e98f:	(bad)
  41e992:	mov    WORD PTR [edx+0x66062982],ss
  41e998:	mov    dl,0xae
  41e99a:	pop    ds
  41e99b:	jns    0x41e927
  41e99d:	test   DWORD PTR [esi-0x2e],edi
  41e9a0:	dec    esi
  41e9a1:	xchg   edi,eax
  41e9a2:	cvtdq2ps xmm4,XMMWORD PTR [ecx+0x3ad09673]
  41e9a9:	(bad)  
  41e9aa:	fistp  QWORD PTR [edx]
  41e9ac:	iret   
  41e9ad:	into   
  41e9ae:	imul   esi,DWORD PTR [ebp-0x7b0989e6],0xf6c046dc
  41e9b8:	aam    0x44
  41e9ba:	mov    esi,0x88b8ccf
  41e9bf:	mov    al,0x9
  41e9c1:	imul   BYTE PTR [edx+0x3fe4378e]
  41e9c7:	cbw    
  41e9c9:	and    eax,0xe2c91324
  41e9ce:	adc    al,0xcf
  41e9d0:	push   cs
  41e9d1:	(bad)  
  41e9d2:	imul   ecx,DWORD PTR [esi+0x7b],0x7f
  41e9d6:	dec    eax
  41e9d7:	xchg   BYTE PTR [edx],dh
  41e9d9:	sbb    eax,0xa8bb6c5e
  41e9de:	scas   al,BYTE PTR es:[edi]
  41e9df:	ins    BYTE PTR es:[edi],dx
  41e9e0:	int3   
  41e9e1:	pop    edx
  41e9e2:	sbb    bl,BYTE PTR cs:[esi]
  41e9e5:	mov    ds:0x8b367d49,al
  41e9ea:	shl    BYTE PTR [ecx+0x35f03c1f],1
  41e9f0:	(bad)  
  41e9f1:	pop    ebp
  41e9f2:	mov    esp,0x556c65c2
  41e9f7:	jae    0x41ea76
  41e9f9:	jo     0x41ea3d
  41e9fb:	push   edx
  41e9fc:	mov    eax,ds:0xcc77ca47
  41ea01:	push   esi
  41ea02:	dec    eax
  41ea03:	mov    esp,0x4d15231
  41ea08:	or     eax,ecx
  41ea0a:	jle    0x41e9df
  41ea0c:	xor    bh,BYTE PTR [edx+eax*8]
  41ea0f:	cmp    edx,ebx
  41ea11:	cld    
  41ea12:	pop    ds
  41ea13:	cmp    bl,BYTE PTR [esp+ebx*2-0x4d4e241]
  41ea1a:	sti    
  41ea1b:	push   ss
  41ea1c:	sub    bh,BYTE PTR [edx]
  41ea1e:	retf   
  41ea1f:	push   ss
  41ea20:	lds    ebp,FWORD PTR [ecx]
  41ea22:	pop    edi
  41ea23:	lds    edx,FWORD PTR [ebx+0x7a]
  41ea26:	stos   DWORD PTR es:[edi],eax
  41ea27:	or     dh,BYTE PTR [edi+edx*4-0x237e50c4]
  41ea2e:	push   0x15
  41ea30:	xlat   BYTE PTR ds:[ebx]
  41ea31:	in     eax,0x4b
  41ea33:	xchg   edx,eax
  41ea34:	sbb    DWORD PTR [ebp-0x63],eax
  41ea37:	cmp    eax,DWORD PTR [edi+0x3a]
  41ea3a:	(bad)  
  41ea3b:	jecxz  0x41e9ff
  41ea3d:	int    0xc2
  41ea3f:	jnp    0x41e9cb
  41ea41:	cmp    bl,BYTE PTR [edx]
  41ea43:	fild   WORD PTR [edi-0x60]
  41ea46:	(bad)  
  41ea47:	aad    0x4
  41ea49:	ret    0x24cd
  41ea4c:	pop    ecx
  41ea4d:	stos   BYTE PTR es:[edi],al
  41ea4e:	pop    esi
  41ea4f:	(bad)  
  41ea50:	call   0xceca:0x9e3a430e
  41ea57:	bnd jp 0x41ea0c
  41ea5a:	pop    ebx
  41ea5b:	test   DWORD PTR [edx],0xc044db9c
  41ea61:	dec    eax
  41ea62:	fwait
  41ea63:	mul    DWORD PTR [edx-0x54cf6343]
  41ea69:	aad    0x10
  41ea6b:	repz ja 0x41ea9a
  41ea6e:	scas   eax,DWORD PTR es:[edi]
  41ea6f:	xchg   ebx,eax
  41ea70:	adc    ah,BYTE PTR [eax]
  41ea72:	or     ebp,DWORD PTR [ebx]
  41ea74:	sub    BYTE PTR [ebx+0x5b],ah
  41ea77:	mov    ebp,0x64ddd6a4
  41ea7c:	mov    ecx,0x8156f69d
  41ea81:	rol    DWORD PTR [eax+edi*1+0x38],1
  41ea85:	es lock jg 0x41eae7
  41ea89:	icebp  
  41ea8a:	adc    DWORD PTR [edi-0x552f01f5],esi
  41ea90:	xor    ebx,DWORD PTR [ebp-0x47]
  41ea93:	push   esi
  41ea94:	sahf   
  41ea95:	das    
  41ea96:	or     esp,0x5064fbf0
  41ea9c:	ret    0x514b
  41ea9f:	inc    esi
  41eaa0:	adc    ah,ah
  41eaa2:	sar    DWORD PTR [ebx+0x58],cl
  41eaa5:	and    dl,ch
  41eaa7:	sub    cl,BYTE PTR [edi-0x65]
  41eaaa:	xor    bl,ah
  41eaac:	shl    bl,cl
  41eaae:	mov    ah,0x70
  41eab0:	(bad)  [edx]
  41eab2:	xchg   DWORD PTR [edx],edx
  41eab4:	(bad)  
  41eab5:	fbld   TBYTE PTR [edx-0x2bc18029]
  41eabb:	fs gs icebp 
  41eabe:	inc    ebx
  41eabf:	adc    ebp,DWORD PTR [edi+0x48e04fb6]
  41eac5:	mov    bh,0x7f
  41eac7:	adc    DWORD PTR [esi],ebp
  41eac9:	daa    
  41eaca:	xchg   DWORD PTR [ebx],esp
  41eacc:	or     dh,BYTE PTR [eax+esi*2+0x40da8298]
  41ead3:	jo     0x41eac7
  41ead5:	fidivr DWORD PTR [eax-0x58]
  41ead8:	adc    cl,dh
  41eada:	push   esi
  41eadb:	mov    cl,0xb0
  41eadd:	icebp  
  41eade:	mov    al,0x47
  41eae0:	popf   
  41eae1:	cli    
  41eae2:	sbb    ch,BYTE PTR [ecx-0x2e]
  41eae5:	lds    edi,FWORD PTR [eax]
  41eae7:	cmp    cl,ah
  41eae9:	lock adc eax,edx
  41eaec:	mov    esp,0xa2990df0
  41eaf1:	cmp    BYTE PTR [ebx-0x4],bl
  41eaf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaf5:	and    ch,BYTE PTR [edi+0x1feba647]
  41eafb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eafc:	out    dx,eax
  41eafd:	ds inc ebx
  41eaff:	jno    0x41eb03
  41eb01:	out    dx,al
  41eb02:	into   
  41eb03:	mov    ah,0x13
  41eb05:	inc    esi
  41eb06:	iret   
  41eb07:	adc    eax,0x1dcabefb
  41eb0c:	loope  0x41eb19
  41eb0e:	push   cs
  41eb0f:	lea    edx,[edx+0x41661157]
  41eb15:	mov    edx,db4
  41eb18:	push   edi
  41eb19:	cmp    DWORD PTR ds:0x80eeb1e8,edi
  41eb1f:	push   0x26
  41eb21:	mov    esi,0x5fc06e7d
  41eb26:	(bad)  
  41eb27:	iret   
  41eb28:	fcom   st(1)
  41eb2a:	mov    esi,edx
  41eb2c:	jp     0x41eab8
  41eb2e:	std    
  41eb2f:	outs   dx,BYTE PTR ds:[esi]
  41eb30:	leave  
  41eb31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb32:	jmp    0xf7198ac1
  41eb37:	mov    ds:0xca9600ce,eax
  41eb3c:	xchg   edx,eax
  41eb3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb3e:	ja     0x41eb6f
  41eb40:	inc    esp
  41eb41:	inc    esi
  41eb42:	aas    
  41eb43:	fidiv  WORD PTR [edi+eax*4-0x7d]
  41eb47:	xor    DWORD PTR ds:0x9bbf393f,esi
  41eb4d:	shr    bl,cl
  41eb4f:	cmp    ebx,esi
  41eb51:	add    al,0x81
  41eb53:	cli    
  41eb54:	sub    DWORD PTR [eax-0x413679de],edi
  41eb5a:	pop    esi
  41eb5b:	mov    esi,0xf2c7aad9
  41eb60:	mov    ch,0x48
  41eb62:	cli    
  41eb63:	test   BYTE PTR [edx-0x73ba42fd],bh
  41eb69:	hlt    
  41eb6a:	xor    eax,0x187c532c
  41eb6f:	outs   dx,BYTE PTR ds:[esi]
  41eb70:	fnstcw WORD PTR [edx-0x4c862f98]
  41eb76:	out    0x98,al
  41eb78:	sub    DWORD PTR [ebp+0x66],ebx
  41eb7b:	(bad)  
  41eb7c:	cld    
  41eb7d:	add    al,0xd5
  41eb7f:	icebp  
  41eb80:	out    0xad,al
  41eb82:	lahf   
  41eb83:	push   esi
  41eb84:	scas   al,BYTE PTR es:[edi]
  41eb85:	shl    esp,cl
  41eb87:	add    al,0x4e
  41eb89:	out    0x3c,eax
  41eb8b:	mov    esp,0x214f9048
  41eb90:	sbb    al,0xf4
  41eb92:	out    dx,eax
  41eb93:	push   ebx
  41eb94:	sub    BYTE PTR [esi-0x6acb1e5b],0x98
  41eb9b:	jmp    0x479e:0x358786cb
  41eba2:	sbb    BYTE PTR [eax-0x8b6a6fe],cl
  41eba8:	sub    esi,DWORD PTR [edx]
  41ebaa:	ins    DWORD PTR es:[edi],dx
  41ebab:	mov    bh,0xc8
  41ebad:	loopne 0x41ebc5
  41ebaf:	repnz inc esi
  41ebb1:	mov    bh,0x93
  41ebb3:	xchg   DWORD PTR [ecx+ebp*2+0x1f],eax
  41ebb7:	inc    edi
  41ebb8:	inc    edx
  41ebb9:	push   ss
  41ebba:	scas   eax,DWORD PTR es:[edi]
  41ebbb:	imul   ebx,DWORD PTR [esp+eax*8-0x26484b06],0x59b403ba
  41ebc6:	aas    
  41ebc7:	daa    
  41ebc8:	daa    
  41ebc9:	jno    0x41eb93
  41ebcb:	fadd   QWORD PTR [ebx+ebx*4]
  41ebce:	add    DWORD PTR [eax+ebx*8-0x80],0xffffffe3
  41ebd3:	cmp    eax,DWORD PTR [esi+0x5c]
  41ebd6:	jo     0x41eba5
  41ebd8:	call   DWORD PTR [eax-0x207b0200]
  41ebde:	sti    
  41ebdf:	retf   
  41ebe0:	adc    eax,0x7e02e31f
  41ebe5:	je     0x41eb95
  41ebe7:	mov    BYTE PTR [edi-0x33141e61],bl
  41ebed:	sbb    DWORD PTR [edx-0x79f9b16],ebp
  41ebf3:	int3   
  41ebf4:	stos   BYTE PTR es:[edi],al
  41ebf5:	dec    edx
  41ebf6:	pop    es
  41ebf7:	mov    ecx,0x4e04cde3
  41ebfc:	cwde   
  41ebfd:	clc    
  41ebfe:	sub    ah,dh
  41ec00:	addr16 cdq 
  41ec02:	push   ds
  41ec03:	adc    dh,al
  41ec05:	jge    0x41eb8f
  41ec07:	jno    0x41ebbf
  41ec09:	mov    edi,ecx
  41ec0b:	test   eax,0x7aa769c8
  41ec10:	loope  0x41ec1b
  41ec12:	inc    eax
  41ec13:	sbb    BYTE PTR [ebp+0x69],dl
  41ec16:	dec    esi
  41ec17:	and    DWORD PTR [edx+0x3a],esi
  41ec1a:	mov    esp,DWORD PTR [ebx]
  41ec1c:	cmc    
  41ec1d:	jmp    0x41ebea
  41ec1f:	in     eax,dx
  41ec20:	jecxz  0x41ec1c
  41ec22:	in     eax,0x20
  41ec24:	out    dx,al
  41ec25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec26:	outs   dx,DWORD PTR ds:[esi]
  41ec27:	bound  esp,QWORD PTR [esi+0x64cbbc80]
  41ec2d:	and    DWORD PTR [edi-0x5ffe80f0],ebx
  41ec33:	scas   eax,DWORD PTR es:[edi]
  41ec34:	pop    esi
  41ec35:	sbb    ebp,DWORD PTR [esi-0x252c8ab6]
  41ec3b:	xor    bl,ah
  41ec3d:	xor    al,0x73
  41ec3f:	lock (bad) 
  41ec41:	mov    BYTE PTR [esi+edx*8],bh
  41ec44:	(bad)  
  41ec45:	jle    0x41ebf5
  41ec47:	inc    esi
  41ec48:	stos   DWORD PTR es:[edi],eax
  41ec49:	lock xor eax,0xa96eaf5a
  41ec4f:	xor    BYTE PTR [esi],dh
  41ec51:	mov    ah,0x1f
  41ec53:	out    0xe4,eax
  41ec55:	fsubr  QWORD PTR [eax-0xc]
  41ec58:	neg    BYTE PTR [edx+0x15fadf64]
  41ec5e:	xor    dh,BYTE PTR [eax]
  41ec60:	scas   eax,DWORD PTR es:[edi]
  41ec61:	cmp    al,0x99
  41ec63:	frstor [eax+0x163e88d0]
  41ec69:	nop
  41ec6a:	dec    ebx
  41ec6b:	inc    ecx
  41ec6c:	in     eax,0x75
  41ec6e:	loope  0x41ecb2
  41ec70:	sub    ecx,DWORD PTR [ecx+0x57f9590c]
  41ec76:	aam    0xa8
  41ec78:	push   ds
  41ec79:	push   es
  41ec7a:	push   0xffffffc2
  41ec7c:	ja     0x41ec73
  41ec7e:	aad    0x3d
  41ec80:	jbe    0x41ec18
  41ec82:	lahf   
  41ec83:	push   edx
  41ec84:	jmp    0x662c:0x62f72e4d
  41ec8b:	add    eax,0x58d4b3d1
  41ec90:	(bad)  
  41ec91:	fsincos 
  41ec93:	pusha  
  41ec94:	inc    edx
  41ec95:	mov    bh,ch
  41ec97:	xchg   esp,eax
  41ec98:	lds    eax,FWORD PTR [edi+0x39ef91c0]
  41ec9e:	sub    BYTE PTR [eax+edx*4+0x77e2b596],0x87
  41eca6:	mov    es,ebp
  41eca8:	xor    DWORD PTR [ebp+0x18],ecx
  41ecab:	pop    ecx
  41ecac:	fdivr  st(0),st
  41ecae:	jl     0x41ecb4
  41ecb0:	mov    ebx,ss
  41ecb2:	call   0x2f1e5ae1
  41ecb7:	pop    eax
  41ecb8:	sbb    edi,DWORD PTR [edx+0x501a394b]
  41ecbe:	cmp    dh,dh
  41ecc0:	mov    dl,0x12
  41ecc2:	loope  0x41ed23
  41ecc4:	ss int 0x7c
  41ecc7:	push   ss
  41ecc8:	ss dec ecx
  41ecca:	imul   BYTE PTR [ecx+0x13f69e5e]
  41ecd0:	ror    dh,0x78
  41ecd3:	push   esp
  41ecd4:	sbb    edi,DWORD PTR [esi+0x3f]
  41ecd7:	xchg   ebx,eax
  41ecd8:	les    edi,FWORD PTR [eax]
  41ecda:	jbe    0x41ed4e
  41ecdc:	jle    0x41ecac
  41ecde:	pushf  
  41ecdf:	and    al,BYTE PTR [ebx-0x50]
  41ece2:	stos   DWORD PTR es:[edi],eax
  41ece3:	scas   eax,DWORD PTR es:[edi]
  41ece4:	popf   
  41ece5:	int3   
  41ece6:	push   0xffffff8c
  41ece8:	add    ecx,ebx
  41ecea:	mov    ah,0xd3
  41ecec:	retf   
  41eced:	dec    ebx
  41ecee:	cmp    al,0x7f
  41ecf0:	mov    al,0xc2
  41ecf2:	push   es
  41ecf3:	pop    es
  41ecf4:	pushf  
  41ecf5:	unpckhps xmm2,XMMWORD PTR [edx-0x45]
  41ecf9:	outs   dx,BYTE PTR ds:[esi]
  41ecfa:	sbb    al,0x93
  41ecfc:	xor    BYTE PTR ds:0x7ee4ad87,dh
  41ed02:	inc    ebx
  41ed03:	lock neg BYTE PTR [esi-0x4c84f10b]
  41ed0a:	cmp    BYTE PTR [edx],0x31
  41ed0d:	fist   DWORD PTR [edi+eax*2]
  41ed10:	mov    WORD PTR [edx+0x4d1dfb03],ss
  41ed16:	adc    BYTE PTR [edx+0x5a],bh
  41ed19:	jnp    0x41ed18
  41ed1b:	xchg   DWORD PTR [edi+0x27],ecx
  41ed1e:	cmp    al,0xd2
  41ed20:	jo     0x41eca2
  41ed22:	int    0x97
  41ed24:	mov    cl,0x9f
  41ed26:	call   0x507ad038
  41ed2b:	stc    
  41ed2c:	int    0x2d
  41ed2e:	and    ebx,DWORD PTR [eax+ebx*2]
  41ed31:	mov    edi,0x23c554a5
  41ed36:	or     ebx,DWORD PTR [edi]
  41ed38:	mov    esi,0xbd70e916
  41ed3d:	add    ch,ch
  41ed3f:	cmp    DWORD PTR [ebp+0x5726884],edi
  41ed45:	jmp    0x2569:0x7c6da5d8
  41ed4c:	test   eax,0x8d6e4b9a
  41ed51:	jno    0x41ed93
  41ed53:	imul   esi,DWORD PTR [edi],0x9484e9a8
  41ed59:	mov    ch,0xc1
  41ed5b:	push   ss
  41ed5c:	mov    esi,0xe0ebd9b0
  41ed61:	fsub   DWORD PTR [ebp-0x6f85921e]
  41ed67:	push   ebp
  41ed68:	jl     0x41edc8
  41ed6a:	and    eax,0x7c353e58
  41ed6f:	push   cs
  41ed70:	inc    edi
  41ed71:	fst    st(1)
  41ed73:	pop    edi
  41ed74:	das    
  41ed75:	arpl   WORD PTR [eax-0x6e512749],dx
  41ed7b:	(bad)  
  41ed7c:	add    edi,edi
  41ed7e:	dec    esi
  41ed7f:	or     DWORD PTR [ecx],eax
  41ed81:	inc    edx
  41ed82:	test   BYTE PTR [edx-0x2eb3f8ef],al
  41ed88:	imul   eax,DWORD PTR [ecx],0xa005f9b9
  41ed8e:	sub    DWORD PTR [ecx],esi
  41ed90:	fnstcw WORD PTR [esi-0x3b]
  41ed93:	repz cwde 
  41ed95:	out    0xf7,al
  41ed97:	push   0xaf8bcb7b
  41ed9c:	xchg   edi,eax
  41ed9d:	mov    bh,0x9
  41ed9f:	inc    edx
  41eda0:	stos   BYTE PTR es:[edi],al
  41eda1:	loopne 0x41ed82
  41eda3:	and    cl,ch
  41eda5:	sub    ebp,ecx
  41eda7:	gs jb  0x41ed64
  41edaa:	xchg   esp,eax
  41edab:	test   DWORD PTR [esp],0x96eb2dca
  41edb2:	fsub   DWORD PTR [edx+ebp*2+0x23]
  41edb6:	imul   eax,DWORD PTR [ebp-0x49],0x3dd656fe
  41edbd:	cmp    dl,al
  41edbf:	and    BYTE PTR [edi+0x56],ch
  41edc2:	dec    esp
  41edc3:	lea    eax,[esp+edx*8+0x23]
  41edc7:	inc    edx
  41edc8:	sbb    eax,0xd033e47d
  41edcd:	push   es
  41edce:	push   cs
  41edcf:	mov    eax,0xe9841f36
  41edd4:	das    
  41edd5:	pop    esp
  41edd6:	aas    
  41edd7:	in     eax,0x75
  41edd9:	sbb    edx,ecx
  41eddb:	sub    al,0x6c
  41eddd:	mov    ds:0xd62c32f2,al
  41ede2:	pusha  
  41ede3:	add    BYTE PTR [ebx],al
  41ede5:	scas   al,BYTE PTR es:[edi]
  41ede6:	adc    DWORD PTR [ecx-0x42],eax
  41ede9:	mov    WORD PTR [edi+edx*2-0x80],ds
  41eded:	setae  BYTE PTR [ecx]
  41edf0:	(bad)  
  41edf1:	popa   
  41edf2:	mov    WORD PTR [ebx-0x45afb166],?
  41edf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edfa:	mov    BYTE PTR [esi],bl
  41edfc:	xor    cl,BYTE PTR [esi]
  41edfe:	jmp    0x4568e5ff
  41ee03:	(bad)  
  41ee04:	test   eax,0xe24e954a
  41ee09:	xor    DWORD PTR [eax-0x6e],0xfffffff5
  41ee0d:	lea    esp,[ecx+0x13333d4b]
  41ee13:	sub    cl,BYTE PTR [edx+0x2632be86]
  41ee19:	dec    ecx
  41ee1a:	sub    bh,0x59
  41ee1d:	imul   eax,ecx,0xffffffcf
  41ee20:	ins    BYTE PTR es:[edi],dx
  41ee21:	and    bh,BYTE PTR [edi+0x116bef52]
  41ee27:	push   es
  41ee28:	out    0xf8,eax
  41ee2a:	fist   DWORD PTR [eax+esi*1+0x1c]
  41ee2e:	into   
  41ee2f:	pop    esp
  41ee30:	mov    ch,0xc2
  41ee32:	sub    BYTE PTR cs:[eax],bh
  41ee35:	(bad)  
  41ee37:	cdq    
  41ee38:	fisubr WORD PTR [ebx+0x5e93d86e]
  41ee3e:	sbb    eax,0x6349032c
  41ee43:	inc    esi
  41ee44:	sbb    edx,ebx
  41ee46:	loope  0x41eeb5
  41ee48:	push   ds
  41ee49:	and    eax,0x1540cea5
  41ee4e:	in     eax,dx
  41ee4f:	in     eax,0x2b
  41ee51:	(bad)
  41ee55:	push   ebx
  41ee56:	and    BYTE PTR [edx],bh
  41ee58:	mov    DWORD PTR [ebx+0x5b381be6],ebp
  41ee5e:	jne    0x41ee5a
  41ee60:	mov    eax,0x99f13c94
  41ee65:	add    BYTE PTR [edi],bl
  41ee67:	int3   
  41ee68:	test   eax,0x1fa042ad
  41ee6d:	fs jge 0x41ee5a
  41ee70:	nop
  41ee71:	adc    BYTE PTR [esi],al
  41ee73:	or     ecx,DWORD PTR ds:0xa5e2f191
  41ee79:	or     DWORD PTR [edi*4-0x1e6e7378],0x7e
  41ee81:	ret    0x630b
  41ee84:	scas   al,BYTE PTR es:[edi]
  41ee85:	loope  0x41eedc
  41ee87:	jp     0x41ee6a
  41ee89:	rol    BYTE PTR [ebx+edx*2+0xe],0xb6
  41ee8e:	cwde   
  41ee8f:	in     eax,0xcd
  41ee91:	ins    DWORD PTR es:[edi],dx
  41ee92:	fistp  QWORD PTR [ecx+edi*4]
  41ee95:	push   esp
  41ee96:	in     eax,dx
  41ee97:	and    BYTE PTR [ebx],dh
  41ee99:	std    
  41ee9a:	jae    0x41eebb
  41ee9c:	clc    
  41ee9d:	push   eax
  41ee9e:	xchg   edi,eax
  41ee9f:	sahf   
  41eea0:	mov    ch,0x6a
  41eea2:	cwde   
  41eea3:	add    BYTE PTR [eax-0x2b],cl
  41eea6:	mov    ebp,DWORD PTR [edx+0x13]
  41eea9:	fs inc edi
  41eeab:	fsin   
  41eead:	jne    0x41ef1e
  41eeaf:	out    dx,al
  41eeb0:	retf   
  41eeb1:	sbb    al,0x40
  41eeb3:	repnz popf 
  41eeb5:	(bad)  
  41eeb6:	xor    BYTE PTR [edx],bh
  41eeb8:	or     DWORD PTR [edx-0x53cbbbe1],0xf093b5f1
  41eec2:	sub    al,0x9
  41eec4:	xchg   ebp,eax
  41eec5:	gs retf 0x492a
  41eec9:	sbb    eax,0xeae88420
  41eece:	dec    ebp
  41eecf:	jle    0x41ef09
  41eed1:	dec    edi
  41eed2:	(bad)  
  41eed4:	fdivr  st,st(3)
  41eed6:	pop    es
  41eed7:	sbb    DWORD PTR [ebx+0x4b],edi
  41eeda:	adc    al,0x3c
  41eedc:	adc    DWORD PTR [edi-0x5],ebx
  41eedf:	jle    0x41eee9
  41eee1:	mov    bh,0x9a
  41eee3:	xchg   esi,eax
  41eee4:	jno    0x41ef24
  41eee6:	jmp    0x41ef4c
  41eee8:	pop    ebx
  41eee9:	mov    eax,ds:0x7bf99164
  41eeee:	pop    ebp
  41eeef:	adc    DWORD PTR [eax],0x7cc1d69e
  41eef5:	jo     0x41eeae
  41eef7:	inc    ecx
  41eef8:	push   esp
  41eef9:	push   ss
  41eefa:	ds mov dh,0xdf
  41eefd:	sub    esp,DWORD PTR [edi+0x38d07d40]
  41ef03:	lea    ebx,[ebp+0x5067baba]
  41ef09:	or     DWORD PTR [ebx],esi
  41ef0b:	out    0xf6,al
  41ef0d:	call   DWORD PTR [edx+0x2132decc]
  41ef13:	mov    bh,0xf8
  41ef15:	pop    ebx
  41ef16:	push   esp
  41ef17:	push   0xc4e75fb9
  41ef1c:	int    0x62
  41ef1e:	imul   ebp,DWORD PTR [ebp+0x2],0xffffffa2
  41ef22:	add    BYTE PTR [ecx+0x7c3987b0],al
  41ef28:	dec    eax
  41ef29:	xor    bh,BYTE PTR [ecx-0x70911426]
  41ef2f:	enter  0x7d35,0x6e
  41ef33:	pusha  
  41ef34:	loope  0x41ef90
  41ef36:	cmp    bl,BYTE PTR [edi]
  41ef38:	xor    al,0x8f
  41ef3a:	retf   0x6f67
  41ef3d:	fs ins BYTE PTR es:[edi],dx
  41ef3f:	mov    ah,0xb3
  41ef41:	stos   DWORD PTR es:[edi],eax
  41ef42:	scas   eax,DWORD PTR es:[edi]
  41ef43:	add    al,0x34
  41ef45:	push   eax
  41ef46:	fwait
  41ef47:	leave  
  41ef48:	rol    BYTE PTR [esi],cl
  41ef4a:	call   DWORD PTR [edi-0x14ccfe5d]
  41ef50:	add    al,0x92
  41ef52:	hlt    
  41ef53:	call   0x7842:0xf219baee
  41ef5a:	jbe    0x41ef6e
  41ef5c:	int3   
  41ef5d:	fimul  WORD PTR [esi-0x66412fd8]
  41ef63:	in     eax,dx
  41ef64:	mov    al,0x99
  41ef66:	push   esi
  41ef67:	out    dx,eax
  41ef68:	loop   0x41ef8c
  41ef6a:	mov    al,0x2e
  41ef6c:	dec    ebp
  41ef6d:	push   0xcf23166d
  41ef72:	push   edi
  41ef73:	data16 outs dx,BYTE PTR ds:[esi]
  41ef75:	pushf  
  41ef76:	jo     0x41efc4
  41ef78:	retf   
  41ef79:	lea    ebx,[eax-0xc]
  41ef7c:	dec    edi
  41ef7d:	cmp    cl,BYTE PTR [eax]
  41ef7f:	out    0x35,eax
  41ef81:	sub    eax,0x72bef091
  41ef86:	push   ds
  41ef87:	pop    es
  41ef88:	std    
  41ef89:	jmp    0xf7d5750f
  41ef8e:	xchg   ecx,eax
  41ef8f:	hlt    
  41ef90:	inc    esi
  41ef91:	pushf  
  41ef92:	mov    dh,0x70
  41ef94:	jb     0x41f002
  41ef96:	lea    ebx,[ecx+ebx*4+0x5dc9b318]
  41ef9d:	and    BYTE PTR [ebx],dl
  41ef9f:	add    DWORD PTR [edi],eax
  41efa1:	test   al,0x60
  41efa3:	js     0x41efa5
  41efa5:	shr    bl,cl
  41efa7:	retf   
  41efa8:	lods   al,BYTE PTR ds:[esi]
  41efa9:	pop    ss
  41efaa:	cdq    
  41efab:	add    eax,0xb010bdc4
  41efb0:	repnz fldcw WORD PTR [eax]
  41efb3:	jge    0x41efb1
  41efb5:	not    BYTE PTR [edi+0x5719980b]
  41efbb:	(bad)  
  41efbc:	aam    0x58
  41efbe:	jne    0x41efdd
  41efc0:	retf   
  41efc1:	ss mov al,0x46
  41efc4:	sub    edi,DWORD PTR [edi]
  41efc6:	rcr    esi,0xd0
  41efc9:	and    ecx,DWORD PTR [ebx-0x6147e453]
  41efcf:	fidiv  DWORD PTR [ebp-0x52]
  41efd2:	dec    edx
  41efd3:	add    ebx,DWORD PTR [edx]
  41efd5:	mov    ebx,0xf9f00c1e
  41efdb:	add    ecx,DWORD PTR [edi]
  41efdd:	stos   DWORD PTR es:[edi],eax
  41efde:	sbb    DWORD PTR [ebx-0x6d6fc56e],esp
  41efe4:	cmp    dh,ah
  41efe6:	pop    esi
  41efe7:	push   ds
  41efe8:	push   es
  41efe9:	pop    esi
  41efea:	push   eax
  41efeb:	jle    0x41ef72
  41efed:	imul   ebx,ebp,0xeee1282a
  41eff3:	sbb    DWORD PTR [ebx-0x33],edx
  41eff6:	push   eax
  41eff7:	mov    ecx,0x204db1e0
  41effc:	dec    ebx
  41effd:	and    al,0x23
  41efff:	out    dx,eax
  41f000:	or     eax,0x17e7116f
  41f005:	ficom  DWORD PTR [eax+0x41]
  41f008:	lock inc eax
  41f00a:	(bad)  
  41f00b:	mov    bl,0x88
  41f00d:	add    dh,dh
  41f00f:	jg     0x41f076
  41f011:	inc    edx
  41f012:	mov    al,0x40
  41f014:	les    ecx,FWORD PTR [edx]
  41f016:	sbb    bh,dl
  41f018:	mov    bh,0x5
  41f01a:	punpckldq mm3,mm7
  41f01d:	jnp    0x41f01b
  41f01f:	and    eax,edi
  41f021:	xchg   edi,eax
  41f022:	inc    eax
  41f023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f024:	push   eax
  41f025:	jl     0x41f036
  41f027:	(bad)  
  41f028:	jmp    0x41f02b
  41f02a:	js     0x41f008
  41f02c:	(bad)  
  41f02d:	loopne 0x41f084
  41f02f:	outs   dx,DWORD PTR ds:[esi]
  41f030:	or     DWORD PTR [esi+0x19c8e04e],esi
  41f036:	sbb    ch,al
  41f038:	es mov esp,0x3d5d3bb9
  41f03e:	sbb    edx,edi
  41f040:	inc    ebx
  41f041:	test   BYTE PTR [edi],al
  41f043:	pop    esi
  41f044:	mov    esi,DWORD PTR [ecx-0x3a]
  41f047:	xchg   edi,eax
  41f048:	mov    eax,ds:0x1620f8b9
  41f04d:	jl     0x41f06d
  41f04f:	mov    bl,0x25
  41f051:	and    edx,DWORD PTR cs:0x6357f7ff
  41f058:	rcl    DWORD PTR [edi],0xdc
  41f05b:	mov    ebp,0x7648d43a
  41f060:	ret    0xcb93
  41f063:	inc    ecx
  41f064:	or     bh,BYTE PTR [edi+ebp*2-0x3]
  41f068:	inc    ebp
  41f069:	and    WORD PTR [edx],ax
  41f06c:	fwait
  41f06d:	cmp    ch,BYTE PTR [ebx]
  41f06f:	mov    cl,0x76
  41f071:	add    ah,BYTE PTR [eax-0x67420443]
  41f077:	test   al,0xc4
  41f079:	xchg   esi,eax
  41f07a:	mov    ss,WORD PTR [ecx-0xb986cf6]
  41f080:	pop    ss
  41f081:	pop    ebp
  41f082:	xor    bl,BYTE PTR [eax-0x1196fe19]
  41f088:	inc    eax
  41f089:	inc    eax
  41f08a:	jns    0x41f03c
  41f08c:	lds    eax,FWORD PTR [ebx-0x59d245c9]
  41f092:	mov    bl,0xb0
  41f095:	push   ebp
  41f096:	mov    ds:0x5c71fe15,al
  41f09b:	mov    cl,BYTE PTR ds:0xbf
  41f0a1:	add    BYTE PTR [eax],al
  41f0a3:	add    BYTE PTR [eax],al
  41f0a5:	add    BYTE PTR [ecx],dh
  41f0a7:	loopne 0x41f08a
  41f0a9:	mov    ecx,0xe879b9f1
  41f0ae:	aas    
  41f0af:	stos   DWORD PTR es:[edi],eax
  41f0b0:	in     al,0x3
  41f0b2:	jg     0x41f0c8
  41f0b4:	pop    ecx
  41f0b5:	cmp    eax,0x1e8fb
  41f0ba:	and    BYTE PTR [edi],al
  41f0bc:	add    BYTE PTR [eax],al
  41f0be:	pop    ecx
  41f0bf:	aam    0x91
  41f0c1:	repz in eax,0xfd
  41f0c4:	and    ah,dh
  41f0c6:	(bad)  
  41f0c8:	fs pop ebp
  41f0ca:	in     al,0x9d
  41f0cc:	jg     0x41f062
  41f0ce:	loopne 0x41f054
  41f0d0:	das    
  41f0d1:	imul   esp,DWORD PTR [ecx+0x59ce055c],0x805dd681
  41f0db:	adc    bh,bh
  41f0dd:	xor    ch,0xf5
  41f0e0:	data16 sub ch,BYTE PTR [edx+ebx*1]
  41f0e4:	in     eax,dx
  41f0e5:	cmp    BYTE PTR [ebp+0x5b],dl
  41f0e8:	sbb    ecx,edx
  41f0ea:	les    ebx,FWORD PTR [esi-0x25d688df]
  41f0f0:	pushf  
  41f0f1:	fidiv  WORD PTR [edx+0x4fef63c7]
  41f0f7:	popa   
  41f0f8:	sbb    al,0x5b
  41f0fa:	jmp    0x47bd:0xe6f80a31
  41f101:	mov    DWORD PTR [eax],esi
  41f103:	xchg   edi,eax
  41f104:	aad    0xe4
  41f106:	xor    BYTE PTR [edi+eax*8-0x48],0xf1
  41f10b:	out    dx,eax
  41f10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f10d:	xchg   esp,eax
  41f10e:	cs icebp 
  41f110:	add    eax,DWORD PTR [ebx-0x5b]
  41f113:	mov    gs,bx
  41f116:	xchg   edx,eax
  41f117:	jp     0x41f190
  41f119:	add    eax,DWORD PTR [ebp+0x6d]
  41f11c:	inc    ebx
  41f11d:	bound  edx,QWORD PTR ds:0x29f53688
  41f123:	jnp    0x41f14b
  41f125:	int3   
  41f126:	mov    eax,0xf8267aa8
  41f12b:	dec    eax
  41f12c:	xchg   esi,eax
  41f12d:	punpckhdq mm6,QWORD PTR [esi]
  41f130:	(bad)  
  41f131:	xor    cl,BYTE PTR [edx+0x17]
  41f134:	dec    esp
  41f135:	xchg   esp,eax
  41f136:	aas    
  41f137:	xchg   ebp,eax
  41f138:	aad    0xb3
  41f13a:	jge    0x41f151
  41f13c:	push   esi
  41f13d:	or     eax,0x539f2ee2
  41f142:	std    
  41f143:	fisttp DWORD PTR [eax]
  41f145:	adc    DWORD PTR [ebx],ebx
  41f147:	push   esp
  41f148:	sbb    eax,0x9a4a81f4
  41f14d:	arpl   WORD PTR [edx],di
  41f14f:	add    BYTE PTR [esi+0x61],ah
  41f152:	addr16 dec esi
  41f154:	pminub mm1,mm4
  41f157:	xchg   ecx,eax
  41f158:	pop    ss
  41f159:	in     al,dx
  41f15a:	add    BYTE PTR [ebp-0x27],0xd0
  41f15e:	pop    edi
  41f15f:	push   ecx
  41f160:	arpl   WORD PTR [ebx],bx
  41f162:	bound  esp,QWORD PTR [ebx+0x12]
  41f165:	xor    ebp,esi
  41f167:	ror    DWORD PTR [ecx+0x4ca09730],1
  41f16d:	retf   
  41f16e:	add    eax,0xae0704c1
  41f173:	mov    BYTE PTR [esi],ah
  41f175:	retf   
  41f176:	jne    0x41f1f2
  41f178:	jle    0x41f188
  41f17a:	or     al,0xb
  41f17c:	es jle 0x41f188
  41f17f:	in     al,dx
  41f180:	jb     0x41f17f
  41f182:	ins    DWORD PTR es:[edi],dx
  41f183:	mov    ds:0x7e5a5023,eax
  41f188:	hlt    
  41f189:	dec    edi
  41f18a:	or     edi,DWORD PTR [eax+0x50]
  41f18d:	lods   eax,DWORD PTR ds:[esi]
  41f18e:	aam    0xe
  41f190:	rol    DWORD PTR [esi-0x5a1f1467],1
  41f196:	xor    edi,DWORD PTR [esi+0x70]
  41f199:	(bad)  
  41f19a:	mul    BYTE PTR [esi-0x143d0dd1]
  41f1a0:	jle    0x41f188
  41f1a2:	push   ebx
  41f1a3:	fisttp WORD PTR [edi+0x202c6555]
  41f1a9:	loop   0x41f1d3
  41f1ab:	add    dl,BYTE PTR [ecx-0x6c1b43f2]
  41f1b1:	fnstenv ds:0xe77b0530
  41f1b7:	in     al,0x40
  41f1b9:	xchg   edi,eax
  41f1ba:	fs aam 0xa1
  41f1bd:	mov    ah,0xd4
  41f1bf:	push   esi
  41f1c0:	sbb    DWORD PTR [edx-0x65],ebx
  41f1c3:	push   esi
  41f1c4:	fsubp  st(3),st
  41f1c6:	cmp    eax,esp
  41f1c8:	pop    es
  41f1c9:	mov    ds:0xb80307d3,al
  41f1ce:	mov    esi,0xbe94233f
  41f1d3:	in     eax,dx
  41f1d4:	inc    esi
  41f1d5:	ret    
  41f1d6:	es test eax,0x2f76c76a
  41f1dc:	push   eax
  41f1dd:	les    esi,FWORD PTR fs:0x2f78f4ed
  41f1e4:	int    0xc8
  41f1e6:	test   eax,0x64540bd3
  41f1eb:	out    0x7d,eax
  41f1ed:	mov    ch,0x66
  41f1ef:	mov    cl,0xb5
  41f1f1:	pop    esp
  41f1f2:	pusha  
  41f1f3:	pop    es
  41f1f4:	ins    DWORD PTR es:[edi],dx
  41f1f5:	call   0xa95e:0xc47fb45e
  41f1fc:	push   0x163de2a6
  41f201:	clc    
  41f202:	cs dec ebp
  41f204:	pop    ebx
  41f205:	(bad)  
  41f206:	push   esp
  41f207:	pusha  
  41f208:	add    bh,ch
  41f20a:	cs icebp 
  41f20c:	bound  esi,QWORD PTR [edx+0x1e]
  41f20f:	ror    BYTE PTR [eax],cl
  41f211:	mov    bl,0xd1
  41f213:	push   ebx
  41f214:	ret    0xcc76
  41f217:	imul   ecx,ebx,0x67
  41f21a:	push   ss
  41f21b:	dec    esi
  41f21c:	push   ebp
  41f21d:	jmp    0x3ab5:0x91b6d14d
  41f224:	add    eax,0xdd695cac
  41f229:	pop    ds
  41f22a:	sahf   
  41f22b:	sahf   
  41f22c:	mov    eax,ds:0x13dfb9e7
  41f231:	fwait
  41f232:	shl    DWORD PTR [ecx-0x5],cl
  41f235:	fidivr WORD PTR [eax-0x44eb8cd2]
  41f23b:	push   ss
  41f23c:	inc    eax
  41f23d:	xchg   dl,bh
  41f23f:	sbb    bl,BYTE PTR [edi-0x60a33286]
  41f245:	pop    es
  41f246:	shl    BYTE PTR [eax+ecx*8+0x69c6d2eb],1
  41f24d:	dec    edx
  41f24e:	sub    al,0x36
  41f250:	cdq    
  41f251:	pop    si
  41f253:	pop    esi
  41f254:	in     al,dx
  41f255:	mov    eax,ds:0x514293ed
  41f25a:	sahf   
  41f25b:	jnp    0x41f1ed
  41f25d:	loope  0x41f25a
  41f25f:	mov    BYTE PTR [eax+0x10b080c6],al
  41f265:	adc    eax,0xb00f1478
  41f26a:	stos   DWORD PTR es:[edi],eax
  41f26b:	add    eax,0xbb39aa92
  41f270:	jb     0x41f204
  41f272:	sbb    ch,BYTE PTR [esi+ebp*4]
  41f275:	cmp    esi,0x34
  41f278:	mov    eax,ds:0x2319a147
  41f27d:	xor    BYTE PTR [esi-0x71],ch
  41f280:	mov    ds:0xee586dc8,eax
  41f285:	push   cs
  41f286:	and    BYTE PTR [esi-0x25],0x10
  41f28a:	push   0xfcb0d55
  41f28f:	into   
  41f290:	sbb    eax,0x62d9fec3
  41f295:	imul   esi,DWORD PTR [ecx-0x23],0xd9098448
  41f29c:	jbe    0x41f2cc
  41f29e:	cvttps2pi mm1,QWORD PTR [esi-0x3e77f8]
  41f2a5:	inc    esi
  41f2a6:	mov    ah,0x86
  41f2a8:	imul   edi,DWORD PTR [ebx],0xf0d3890a
  41f2ae:	stos   BYTE PTR es:[edi],al
  41f2af:	jl     0x41f2de
  41f2b1:	and    BYTE PTR [ecx-0x48],dl
  41f2b4:	add    ecx,DWORD PTR [ecx+edx*4+0x777e5b1]
  41f2bb:	jnp    0x41f28b
  41f2bd:	lods   al,BYTE PTR ds:[esi]
  41f2be:	jns    0x41f274
  41f2c0:	ins    DWORD PTR es:[edi],dx
  41f2c1:	jle    0x41f314
  41f2c3:	stos   DWORD PTR es:[edi],eax
  41f2c4:	dec    al
  41f2c6:	adc    eax,0xece573b4
  41f2cb:	xor    eax,0x8565ef10
  41f2d0:	xchg   esi,eax
  41f2d1:	jle    0x41f34f
  41f2d3:	sar    BYTE PTR [edx+ecx*1],cl
  41f2d6:	test   BYTE PTR [ecx+esi*8+0x48cace19],bh
  41f2dd:	jb     0x41f2fd
  41f2df:	ins    DWORD PTR es:[edi],dx
  41f2e0:	pop    edx
  41f2e1:	cmp    eax,0xb34a3b57
  41f2e6:	and    DWORD PTR [esi+esi*8-0x69],eax
  41f2ea:	pop    DWORD PTR [ebp-0x1a582fc4]
  41f2f0:	aad    0x9c
  41f2f2:	jne    0x41f354
  41f2f4:	hlt    
  41f2f5:	retf   
  41f2f6:	das    
  41f2f7:	inc    esp
  41f2f8:	adc    ebx,DWORD PTR [ebp+0xf]
  41f2fb:	xchg   edx,eax
  41f2fc:	cli    
  41f2fd:	xchg   ebx,eax
  41f2fe:	mov    al,ds:0x1252222b
  41f303:	addr16 (bad) 
  41f305:	pop    ds
  41f306:	aam    0x77
  41f308:	nop
  41f309:	mov    dl,0x5e
  41f30b:	inc    esp
  41f30c:	aas    
  41f30d:	pop    ecx
  41f30e:	xchg   edi,eax
  41f30f:	hlt    
  41f310:	xchg   ebx,eax
  41f311:	mov    dh,0xa4
  41f313:	aad    0x7d
  41f315:	push   edx
  41f316:	xchg   ecx,eax
  41f317:	mov    ebx,0xb652d339
  41f31c:	xor    dl,BYTE PTR [ebx-0x2c137155]
  41f322:	sbb    dh,BYTE PTR [edx]
  41f324:	out    0x51,al
  41f326:	jmp    0xce4f:0x4ff34776
  41f32d:	pop    ss
  41f32e:	inc    ebp
  41f32f:	sbb    al,0x49
  41f331:	mov    ebx,edx
  41f333:	push   0xffffffab
  41f335:	adc    DWORD PTR ds:0x496ceb5a,edi
  41f33b:	js     0x41f3a2
  41f33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f33e:	nop
  41f33f:	fcmovb st,st(1)
  41f341:	pop    ss
  41f342:	lgs    ebp,FWORD PTR [ebp-0x20]
  41f346:	mov    DWORD PTR ds:0xa2483045,edx
  41f34c:	pop    esi
  41f34d:	enter  0xa3ca,0xbb
  41f351:	inc    esp
  41f352:	cmp    al,0xc7
  41f354:	addr16 xor ch,bh
  41f357:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f359:	fdecstp 
  41f35b:	outs   dx,DWORD PTR ds:[esi]
  41f35c:	div    DWORD PTR [esi-0x13]
  41f35f:	sub    DWORD PTR [eax-0x15],0x7796265d
  41f366:	push   cs
  41f367:	mov    ebx,DWORD PTR [esp+ebx*1]
  41f36a:	cmp    al,0xc4
  41f36c:	shl    BYTE PTR [ebp-0x63],1
  41f36f:	ja     0x41f390
  41f371:	push   esp
  41f372:	in     eax,dx
  41f373:	inc    edi
  41f374:	sbb    al,0x21
  41f376:	mov    DWORD PTR [eax-0xea0e7af],eax
  41f37c:	shl    ebx,1
  41f37e:	imul   esp,edx,0x4a
  41f381:	enter  0xb087,0x23
  41f385:	cmp    DWORD PTR [ebp+0x1d],eax
  41f388:	sub    eax,0xd51beef8
  41f38d:	mov    ebx,0x7617dad1
  41f392:	addr16 out 0xb7,eax
  41f395:	mov    bh,BYTE PTR [ebx-0x5b372b73]
  41f39b:	lods   al,BYTE PTR ds:[esi]
  41f39c:	les    ebp,FWORD PTR [edx]
  41f39e:	or     eax,0x1abedf1e
  41f3a3:	aad    0x1f
  41f3a5:	jbe    0x41f34b
  41f3a7:	add    eax,0x2b8790cd
  41f3ac:	push   ecx
  41f3ad:	popf   
  41f3ae:	sbb    DWORD PTR [eax],edx
  41f3b0:	lods   al,BYTE PTR ds:[esi]
  41f3b1:	out    dx,eax
  41f3b2:	dec    esp
  41f3b3:	mov    WORD PTR [eax+0x1fa47427],gs
  41f3b9:	push   ds
  41f3ba:	in     al,0x9f
  41f3bc:	pop    edx
  41f3bd:	test   BYTE PTR [esi+ebp*4],ch
  41f3c0:	mov    dl,0x17
  41f3c2:	add    edi,DWORD PTR [eax-0x650357d4]
  41f3c8:	jbe    0x41f351
  41f3ca:	imul   BYTE PTR [edi+0x72167ad]
  41f3d0:	mov    ah,0xfa
  41f3d2:	cmp    BYTE PTR [eax],bl
  41f3d4:	push   ss
  41f3d5:	rol    DWORD PTR [edx],0x63
  41f3d8:	jmp    0x41f394
  41f3da:	lds    edx,FWORD PTR [edi+0x3]
  41f3dd:	and    bh,BYTE PTR [edx+ebp*2+0x79]
  41f3e1:	into   
  41f3e2:	push   eax
  41f3e3:	ror    BYTE PTR [esi-0x4f2126f6],cl
  41f3e9:	adc    ebx,ebp
  41f3eb:	add    bl,BYTE PTR [ecx+edi*2]
  41f3ee:	push   edi
  41f3ef:	ror    DWORD PTR [eax+0x29],0x34
  41f3f3:	leave  
  41f3f4:	ins    BYTE PTR es:[edi],dx
  41f3f5:	mov    edx,0x49fa4170
  41f3fa:	dec    ebx
  41f3fb:	xor    al,0x74
  41f3fd:	jecxz  0x41f43b
  41f3ff:	jno    0x41f3a5
  41f401:	xchg   DWORD PTR [eax],ecx
  41f403:	call   0x90e4e798
  41f408:	scas   eax,DWORD PTR es:[edi]
  41f409:	retf   
  41f40a:	mov    WORD PTR [ebx+0x3e],es
  41f40d:	dec    BYTE PTR [esi+0x380ba154]
  41f413:	and    DWORD PTR [eax],eax
  41f415:	fs dec edi
  41f417:	jmp    0x73c549cf
  41f41c:	outs   dx,DWORD PTR ds:[esi]
  41f41d:	push   es
  41f41e:	add    BYTE PTR [eax-0x4a3a31e],0x27
  41f425:	(bad)  
  41f426:	dec    esp
  41f427:	pop    ebp
  41f428:	repz pop esi
  41f42a:	mov    dh,0x29
  41f42c:	into   
  41f42d:	adc    eax,0x7db53bf6
  41f432:	dec    ebx
  41f433:	test   BYTE PTR ds:0x930f9cae,ch
  41f439:	je     0x41f403
  41f43b:	lahf   
  41f43c:	jmp    0x41f407
  41f43e:	ss in  eax,dx
  41f440:	lods   al,BYTE PTR ds:[esi]
  41f441:	push   ebx
  41f442:	and    DWORD PTR [ebp-0x57e4b050],esi
  41f448:	push   ebp
  41f449:	push   ecx
  41f44a:	mov    ecx,0x8a548fa3
  41f44f:	imul   edi,esi,0xc6512fe8
  41f455:	cdq    
  41f456:	pop    esi
  41f457:	in     al,0x73
  41f459:	and    cl,BYTE PTR [edi+0x5f]
  41f45c:	fwait
  41f45d:	mov    BYTE PTR ds:[edx*1+0x183d536b],dl
  41f465:	ds and BYTE PTR cs:[esi],ah
  41f469:	imul   eax,DWORD PTR [eax-0x8738ac],0xffffff9c
  41f470:	add    ah,dl
  41f472:	inc    edx
  41f473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f474:	ins    DWORD PTR es:[edi],dx
  41f475:	out    dx,eax
  41f476:	pop    ebx
  41f477:	xchg   ebx,eax
  41f478:	dec    edi
  41f479:	cli    
  41f47a:	mov    dl,0xfa
  41f47c:	sbb    ecx,DWORD PTR [ecx]
  41f47e:	dec    ecx
  41f47f:	rcl    bl,cl
  41f481:	adc    dl,BYTE PTR [edx-0x2d65e580]
  41f487:	mov    eax,ds:0xcefee44b
  41f48c:	jo     0x41f442
  41f48e:	hlt    
  41f48f:	addr16 jle 0x41f4f8
  41f492:	int3   
  41f493:	mov    ebp,0x6f0b61b3
  41f498:	scas   eax,DWORD PTR es:[edi]
  41f499:	mov    bh,0x81
  41f49b:	dec    edx
  41f49c:	(bad)  
  41f49d:	push   edi
  41f49e:	(bad)  
  41f49f:	add    DWORD PTR [eax-0x7a88d107],esi
  41f4a5:	xchg   ebx,eax
  41f4a6:	inc    ebx
  41f4a7:	daa    
  41f4a8:	pop    ebx
  41f4a9:	nop
  41f4aa:	loop   0x41f525
  41f4ac:	cmc    
  41f4ad:	mov    ebx,0x9d35c4e9
  41f4b2:	loope  0x41f4f2
  41f4b4:	pop    esp
  41f4b5:	test   al,0x23
  41f4b7:	jle    0x41f44b
  41f4b9:	and    ebx,eax
  41f4bb:	mov    dl,0x44
  41f4bd:	push   0xffffff87
  41f4bf:	mov    bl,0xd3
  41f4c1:	test   DWORD PTR [ebp+eax*1-0x2a],edi
  41f4c5:	data16 mov al,0x30
  41f4c8:	mov    ecx,edx
  41f4ca:	sbb    eax,0x9535b1c8
  41f4cf:	mov    bh,0x74
  41f4d1:	or     BYTE PTR [ebx-0x19],0x3f
  41f4d5:	setno  BYTE PTR [esi+0x5cc1f7dc]
  41f4dc:	std    
  41f4dd:	dec    eax
  41f4de:	fiadd  DWORD PTR [eax+0x6]
  41f4e1:	pop    eax
  41f4e2:	shl    BYTE PTR [eax+ecx*2],0x44
  41f4e6:	mov    cl,0x78
  41f4e8:	fwait
  41f4e9:	cwde   
  41f4ea:	add    dh,BYTE PTR [eax-0x3a]
  41f4ed:	loopne 0x41f470
  41f4ef:	mov    al,ds:0xda577d79
  41f4f4:	jg     0x41f534
  41f4f6:	mov    ss:0x9afa688b,eax
  41f4fc:	mov    esp,0x643a4f4b
  41f501:	imul   ecx,DWORD PTR [edx+eiz*8-0x35847454],0x47
  41f509:	in     eax,dx
  41f50a:	std    
  41f50b:	add    DWORD PTR [ebx+0x522564cc],edi
  41f511:	sbb    al,0xdb
  41f513:	call   0xaaf539ce
  41f518:	jno    0x41f561
  41f51a:	or     eax,0xe0b7eb6
  41f51f:	fsub   QWORD PTR [ebp-0x25]
  41f522:	dec    esp
  41f523:	xor    bl,ch
  41f525:	mov    edx,0xff5cefdc
  41f52a:	mov    ss,WORD PTR [ebx]
  41f52c:	jecxz  0x41f54a
  41f52e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f52f:	jmp    0x41f5a7
  41f531:	add    DWORD PTR [edx],0xffffff86
  41f534:	add    ah,bl
  41f536:	faddp  st(1),st
  41f538:	inc    edi
  41f539:	mov    edi,0x5be06303
  41f53e:	fdivr  DWORD PTR [ecx-0x4e]
  41f541:	aam    0x10
  41f543:	pop    esp
  41f544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f545:	lods   al,BYTE PTR ds:[esi]
  41f546:	mov    ecx,0x86e0785d
  41f54b:	aaa    
  41f54c:	les    ebp,FWORD PTR [ebx+0x29dc4ac4]
  41f552:	shr    DWORD PTR [edx+0x32c9d91f],0x33
  41f559:	cmc    
  41f55a:	fimul  DWORD PTR [edi+eiz*4+0x5f]
  41f55e:	add    eax,0x678bbeb5
  41f563:	stc    
  41f564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f565:	cmp    ebx,DWORD PTR [esi+0x1e9ddecf]
  41f56b:	lahf   
  41f56c:	fcomp  DWORD PTR [ebx-0x76]
  41f56f:	fcmovnb st,st(0)
  41f571:	mov    edx,0x1c22d404
  41f576:	fcomp  QWORD PTR [edx+0x11]
  41f579:	add    eax,0xa0c9e51
  41f57e:	(bad)  
  41f580:	cli    
  41f581:	in     eax,dx
  41f582:	mov    ah,0xfb
  41f584:	ss xchg esi,eax
  41f586:	dec    ecx
  41f587:	mov    eax,es:0x7041f288
  41f58d:	sub    edx,DWORD PTR [eax-0x78]
  41f590:	sar    DWORD PTR [ebp-0xc2cb173],0xbe
  41f597:	ror    DWORD PTR [ecx],1
  41f599:	lahf   
  41f59a:	add    esp,esp
  41f59c:	mov    dl,0xe4
  41f59e:	mov    DWORD PTR [edx],0xfa5ec643
  41f5a4:	adc    al,0x19
  41f5a6:	ds push 0x83e38bbd
  41f5ac:	xchg   esi,eax
  41f5ad:	xchg   esp,eax
  41f5ae:	dec    edx
  41f5af:	push   esi
  41f5b0:	mov    dl,0x9d
  41f5b2:	ror    DWORD PTR [ecx],cl
  41f5b4:	push   es
  41f5b5:	xchg   DWORD PTR [ebx+0x4f61e7e5],eax
  41f5bb:	cmp    BYTE PTR [esi],bh
  41f5bd:	loop   0x41f61c
  41f5bf:	int    0x40
  41f5c1:	std    
  41f5c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5c3:	jo     0x41f5ab
  41f5c5:	cmp    BYTE PTR [ebx],ah
  41f5c7:	or     bh,bh
  41f5c9:	inc    eax
  41f5ca:	mov    bl,0xd1
  41f5cc:	pop    ds
  41f5cd:	int3   
  41f5ce:	je     0x41f5f6
  41f5d0:	push   ecx
  41f5d1:	mov    edi,0x9966dde6
  41f5d6:	shr    cl,0x50
  41f5d9:	mov    ebx,0x6587fa79
  41f5de:	cdq    
  41f5df:	xchg   edx,eax
  41f5e0:	inc    ebp
  41f5e1:	jge    0x41f62d
  41f5e3:	ins    BYTE PTR es:[edi],dx
  41f5e4:	jae    0x41f5f1
  41f5e6:	bound  edx,QWORD PTR [ebx-0x786a7b7c]
  41f5ec:	call   0xef1e5e9c
  41f5f1:	daa    
  41f5f2:	add    ebx,DWORD PTR [esi+edx*8]
  41f5f5:	aas    
  41f5f6:	int3   
  41f5f7:	and    eax,DWORD PTR [ecx-0x7c]
  41f5fa:	pop    eax
  41f5fb:	or     dl,BYTE PTR [ecx+0x74]
  41f5fe:	inc    edi
  41f5ff:	fdiv   st,st(6)
  41f601:	push   0xffffffc8
  41f603:	idiv   DWORD PTR [edi]
  41f605:	xchg   ecx,eax
  41f606:	in     al,dx
  41f607:	add    ch,dl
  41f609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f60a:	sbb    ebx,DWORD PTR [eax+0x8]
  41f60d:	in     al,dx
  41f60e:	mov    eax,ds:0x9e535e9a
  41f613:	std    
  41f614:	mov    bh,0xc2
  41f616:	pop    ds
  41f617:	jg     0x41f644
  41f619:	sbb    eax,0xdcc6a6e7
  41f61e:	cmp    bl,ch
  41f620:	add    DWORD PTR [edi-0x199448b5],0x3c
  41f627:	jnp    0x41f668
  41f629:	popa   
  41f62a:	xor    DWORD PTR [edi+0x46],esi
  41f62d:	add    dh,BYTE PTR [eax+ecx*2-0x4f79391e]
  41f634:	shl    DWORD PTR [ebx+ebx*8],cl
  41f637:	mov    bh,0xfc
  41f639:	xchg   DWORD PTR [eax-0x22398a9a],ecx
  41f63f:	std    
  41f640:	mov    ds:0x5c290445,eax
  41f645:	dec    ecx
  41f646:	pop    edi
  41f647:	cdq    
  41f648:	fnsave [edi-0x4cdf0299]
  41f64e:	mov    esp,0xa3a510d2
  41f653:	and    bh,BYTE PTR [edx]
  41f655:	ror    ecx,1
  41f657:	push   edx
  41f658:	call   0xe664:0xbe4b425f
  41f65f:	xchg   esi,eax
  41f660:	(bad)  
  41f661:	in     eax,0x3d
  41f663:	sbb    al,0x37
  41f665:	dec    esi
  41f666:	fisttp DWORD PTR [ecx]
  41f668:	or     eax,0xf854a1b8
  41f66d:	rcl    ah,1
  41f66f:	mov    cl,BYTE PTR [esi-0x4]
  41f672:	fiadd  WORD PTR [ebx]
  41f674:	sub    DWORD PTR [ecx+0x29],edx
  41f677:	loope  0x41f6b7
  41f679:	and    DWORD PTR [edx+0x600145e6],edi
  41f67f:	mov    ecx,0xab938b46
  41f684:	cli    
  41f685:	into   
  41f686:	ret    0x2c3d
  41f689:	sahf   
  41f68a:	xchg   esp,eax
  41f68b:	cld    
  41f68c:	sub    DWORD PTR [esi+0x6e82393b],esi
  41f692:	nop
  41f693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f694:	push   ds
  41f695:	jp     0x41f668
  41f697:	std    
  41f698:	mov    ds:0x8bde44a0,eax
  41f69d:	(bad)  
  41f69e:	and    BYTE PTR [edi],ah
  41f6a0:	cmp    eax,0x1b6d018f
  41f6a5:	mov    ebp,0xa05a45fc
  41f6aa:	push   0x3bef0edb
  41f6af:	int3   
  41f6b0:	aas    
  41f6b1:	cli    
  41f6b2:	bound  edx,QWORD PTR [edx+eiz*2-0x69]
  41f6b6:	mov    al,0x3d
  41f6b8:	fadd   DWORD PTR [ebx]
  41f6ba:	pop    esi
  41f6bb:	mov    ebp,0xc693f97a
  41f6c0:	in     al,dx
  41f6c1:	sub    eax,0xd887fc98
  41f6c6:	dec    eax
  41f6c7:	pop    ds
  41f6c8:	pusha  
  41f6c9:	and    ecx,ebp
  41f6cb:	in     eax,dx
  41f6cc:	and    DWORD PTR [ecx-0x51288045],0xffffff90
  41f6d3:	fcom   QWORD PTR [esi-0x367bf504]
  41f6d9:	mov    dh,0xc
  41f6db:	rep stos BYTE PTR es:[edi],al
  41f6dd:	call   0xe83f64cf
  41f6e2:	mov    ds:0x9fb453d,eax
  41f6e7:	jl     0x41f72a
  41f6e9:	cmp    esi,esi
  41f6eb:	aam    0x63
  41f6ed:	jno    0x41f714
  41f6ef:	jns    0x41f68a
  41f6f1:	dec    ebp
  41f6f2:	shl    DWORD PTR [esi],1
  41f6f4:	or     esi,esi
  41f6f6:	mov    al,0xa8
  41f6f8:	and    ch,dh
  41f6fa:	mov    DWORD PTR [ecx-0x7933cfd7],edi
  41f700:	and    DWORD PTR [edi+edx*2-0x359fb590],esp
  41f707:	xchg   BYTE PTR [edi],bh
  41f709:	aas    
  41f70a:	xchg   edi,eax
  41f70b:	sub    al,cl
  41f70d:	jnp    0x41f77b
  41f70f:	xchg   ebp,eax
  41f710:	fisubr WORD PTR [ecx-0x32]
  41f713:	mov    ah,dh
  41f715:	sbb    eax,0xc8a9f46d
  41f71a:	xor    BYTE PTR [esi],0x7a
  41f71d:	inc    ebx
  41f71e:	adc    ch,bl
  41f720:	dec    edi
  41f721:	pop    ecx
  41f722:	fidiv  WORD PTR [ecx+0x17]
  41f725:	mov    bh,BYTE PTR [eax+0x158172af]
  41f72b:	and    BYTE PTR [ecx+0x5129db4c],dl
  41f731:	jno    0x41f6e5
  41f733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f734:	mov    edi,0xfa831fbe
  41f739:	cmp    esp,ebx
  41f73b:	inc    edi
  41f73c:	out    0x4b,al
  41f73e:	test   DWORD PTR [ebx+0x5ee24472],eax
  41f744:	cwde   
  41f745:	mov    esi,ecx
  41f747:	fnstenv [ecx+eax*8+0x47776145]
  41f74e:	xchg   ebp,eax
  41f74f:	mov    ah,0xb4
  41f751:	jbe    0x41f72d
  41f753:	mov    edx,0xb65fa3da
  41f758:	arpl   WORD PTR [ebx-0x5b],si
  41f75b:	icebp  
  41f75c:	je     0x41f75b
  41f75e:	sbb    al,ch
  41f760:	cmp    eax,0x48a6b0bd
  41f765:	cmp    DWORD PTR [ebp-0x28bc3128],ebp
  41f76b:	sbb    ebx,ebp
  41f76d:	mov    ch,0xe9
  41f76f:	(bad)  
  41f770:	test   eax,0xc29d2df4
  41f775:	jmp    0x2cc6:0xf2d98b42
  41f77c:	jmp    0x477f:0xc8fc1aa8
  41f783:	iret   
  41f784:	push   cs
  41f785:	stc    
  41f786:	adc    ch,BYTE PTR [edx]
  41f788:	sbb    eax,0x7b342ebc
  41f78d:	adc    BYTE PTR [ecx-0xed56d7d],0x54
  41f794:	clc    
  41f795:	push   ebx
  41f796:	(bad)  
  41f797:	and    bh,bh
  41f799:	mov    bl,0xa3
  41f79b:	sub    DWORD PTR [edx],0x748432f3
  41f7a1:	int3   
  41f7a2:	shr    BYTE PTR [edx],1
  41f7a4:	sub    BYTE PTR [edi],dl
  41f7a6:	and    ebp,DWORD PTR [esi-0x2ced495c]
  41f7ac:	sbb    BYTE PTR [edx+0x427b2bdd],dl
  41f7b2:	mov    ecx,DWORD PTR [ecx]
  41f7b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7b5:	dec    edi
  41f7b6:	mov    dl,0xbb
  41f7b8:	(bad)  
  41f7b9:	pop    edx
  41f7ba:	dec    di
  41f7bc:	fnstenv [ebp+0x60]
  41f7bf:	call   0xf0121004
  41f7c4:	xchg   BYTE PTR [esi],dh
  41f7c6:	sub    BYTE PTR [esi],ch
  41f7c8:	mov    ecx,0xe680aab6
  41f7cd:	scas   eax,DWORD PTR es:[edi]
  41f7ce:	inc    ebx
  41f7cf:	lock adc dh,bl
  41f7d2:	rcr    ecx,1
  41f7d4:	inc    esi
  41f7d5:	push   ss
  41f7d6:	fld    DWORD PTR [eax]
  41f7d8:	sbb    BYTE PTR ds:0x93240c8d,0x0
  41f7df:	add    BYTE PTR [eax],al
  41f7e1:	add    BYTE PTR [eax],al
  41f7e3:	add    BYTE PTR [eax],al
  41f7e5:	add    dh,ah
  41f7e7:	rcl    BYTE PTR [ecx+esi*8-0x2818084c],cl
  41f7ee:	aad    0x75
  41f7f0:	(bad)  
  41f7f1:	adc    ebx,edi
  41f7f3:	jmp    0x41f868
  41f7f5:	test   DWORD PTR [ebx],ebx
  41f7f7:	lock add DWORD PTR [eax],eax
  41f7fa:	and    BYTE PTR [edi],al
  41f7fc:	add    BYTE PTR [eax],al
  41f7fe:	imul   ecx,ebp,0xffffffc3
  41f801:	sbb    BYTE PTR [esp+ecx*8-0x5ca8ea1c],dh
  41f808:	cwde   
  41f809:	cs scas eax,DWORD PTR es:[edi]
  41f80b:	inc    ebp
  41f80c:	and    bp,WORD PTR [edi]
  41f80f:	jbe    0x41f81d
  41f811:	adc    dl,BYTE PTR [esi+0x36]
  41f814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f815:	jnp    0x41f850
  41f817:	push   eax
  41f818:	push   cs
  41f819:	xchg   esp,eax
  41f81a:	fst    QWORD PTR [esi+edi*4-0x6ebd1dc8]
  41f821:	xor    al,BYTE PTR [edi]
  41f823:	rcr    edi,1
  41f825:	fld    TBYTE PTR [esi+ebx*4+0x5b895221]
  41f82c:	mov    cs,edi
  41f82e:	enter  0x3a0d,0x68
  41f832:	inc    edx
  41f833:	mov    DWORD PTR [esi+0x53d80c1e],eax
  41f839:	(bad)  
  41f83a:	inc    esi
  41f83b:	mov    al,0xf8
  41f83d:	mov    eax,0xf7784370
  41f842:	pop    esp
  41f843:	sub    BYTE PTR [eax],0xd4
  41f846:	popa   
  41f847:	xor    eax,DWORD PTR [ecx+0x621e4446]
  41f84d:	push   0xe62201c3
  41f852:	mov    ch,bl
  41f854:	(bad)  
  41f856:	or     DWORD PTR [ecx],edx
  41f858:	mov    ecx,0xba9d6fcf
  41f85d:	pop    edi
  41f85e:	test   DWORD PTR [ecx+ebp*2+0x0],esp
  41f862:	add    edx,DWORD PTR [ebp+0x4d]
  41f865:	int3   
  41f866:	inc    edx
  41f867:	and    al,BYTE PTR [ecx-0x153530fe]
  41f86d:	add    eax,0xa2326dd5
  41f872:	inc    esi
  41f873:	pop    es
  41f874:	push   eax
  41f875:	pop    ecx
  41f876:	xchg   ebx,eax
  41f877:	mov    esi,0x326455a9
  41f87c:	push   ss
  41f87d:	dec    ebx
  41f87e:	xor    al,0xf9
  41f880:	cmp    al,0x6e
  41f882:	fwait
  41f883:	imul   eax,DWORD PTR [ebx+0x1ab017ad],0xffffffd5
  41f88a:	imul   ebx,DWORD PTR [eax],0x4
  41f88d:	idiv   DWORD PTR [esi+0x4c5759c1]
  41f893:	push   eax
  41f894:	sbb    BYTE PTR [edi-0x73],bl
  41f897:	and    esi,DWORD PTR [edx-0x125b7ad1]
  41f89d:	xchg   ebx,eax
  41f89e:	fdivrp st(2),st
  41f8a0:	clc    
  41f8a1:	test   BYTE PTR [edx-0x7f9a7fdc],cl
  41f8a7:	retf   0x619a
  41f8aa:	test   eax,0xe481dd8b
  41f8af:	ja     0x41f8bd
  41f8b1:	mov    ecx,0xc77c70be
  41f8b6:	jge    0x41f86e
  41f8b8:	or     ebx,DWORD PTR [ebp-0x4ded950d]
  41f8be:	pop    ss
  41f8bf:	jo     0x41f877
  41f8c1:	fisub  WORD PTR [eax+0x3b]
  41f8c4:	bound  esi,QWORD PTR [edi-0x4d393801]
  41f8ca:	jecxz  0x41f88a
  41f8cc:	lods   eax,DWORD PTR ds:[esi]
  41f8cd:	in     al,dx
  41f8ce:	icebp  
  41f8cf:	dec    edx
  41f8d0:	push   ds
  41f8d1:	aaa    
  41f8d2:	scas   al,BYTE PTR es:[edi]
  41f8d3:	jno    0x41f8f8
  41f8d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8d6:	inc    eax
  41f8d7:	or     edi,DWORD PTR [edx]
  41f8d9:	or     BYTE PTR ds:0x1f879dd8,cl
  41f8df:	std    
  41f8e0:	fwait
  41f8e1:	add    BYTE PTR [esi-0x47],bh
  41f8e4:	xchg   edx,eax
  41f8e5:	mov    edi,0x54d114f7
  41f8ea:	xchg   ebx,eax
  41f8eb:	sub    eax,0xa2a21df7
  41f8f0:	xchg   edx,eax
  41f8f1:	sub    BYTE PTR ds:0x26a4443a,bh
  41f8f7:	push   eax
  41f8f8:	js     0x41f94c
  41f8fa:	cmp    DWORD PTR [edi],esp
  41f8fc:	sahf   
  41f8fd:	mov    edx,0xc468a2ab
  41f902:	jmp    0x41f8b4
  41f904:	add    bl,BYTE PTR [eax]
  41f906:	cmp    ebp,DWORD PTR [eax+0x55d1945f]
  41f90c:	inc    esi
  41f90d:	fs push esp
  41f90f:	or     BYTE PTR [ebx],bl
  41f911:	pop    esi
  41f912:	inc    ebx
  41f913:	xor    al,0x35
  41f915:	adc    BYTE PTR [edi-0x7],bl
  41f918:	aad    0xb
  41f91a:	mov    BYTE PTR [eax+0x15b81123],ah
  41f920:	fldcw  WORD PTR [edi+0x2b]
  41f923:	pcmpgtd mm7,mm0
  41f926:	add    eax,0x5872b626
  41f92b:	xor    ah,ch
  41f92d:	sub    bl,BYTE PTR [edi]
  41f92f:	cdq    
  41f930:	out    0xdb,eax
  41f932:	fwait
  41f933:	jnp    0x41f8dc
  41f935:	pushf  
  41f936:	data16 icebp 
  41f938:	push   0xffffffb4
  41f93a:	cwde   
  41f93b:	push   ebp
  41f93c:	imul   esp,DWORD PTR [ebp-0x6b],0xc7717420
  41f943:	rcl    ah,0x61
  41f946:	inc    edx
  41f947:	addr16 icebp 
  41f949:	or     DWORD PTR [edi+0x1f9af7a2],ecx
  41f94f:	inc    edi
  41f950:	into   
  41f951:	mov    ebp,0x80f8f1f0
  41f956:	adc    BYTE PTR [ebx-0x4a],ah
  41f959:	pop    ecx
  41f95a:	sbb    al,0x85
  41f95c:	xchg   esp,eax
  41f95d:	shl    DWORD PTR [ebx],0xb9
  41f960:	adc    bh,BYTE PTR [ebp+0x34]
  41f963:	cmp    eax,0xa1c4058e
  41f968:	cmp    eax,0x727496e6
  41f96d:	push   ebx
  41f96e:	outs   dx,DWORD PTR ds:[esi]
  41f96f:	ror    DWORD PTR [eax],0xc0
  41f972:	mov    esi,0x30257a59
  41f977:	repnz cld 
  41f979:	jmp    0xd27f:0x859323ba
  41f980:	cmp    edi,ecx
  41f982:	sbb    al,0xd4
  41f984:	(bad)  
  41f986:	xchg   edi,eax
  41f987:	ja     0x41f94e
  41f989:	dec    edx
  41f98a:	xor    DWORD PTR fs:[esi],0x50
  41f98e:	ja     0x41f979
  41f990:	sbb    esp,DWORD PTR [esi+0x5430113]
  41f996:	int    0xbb
  41f998:	lahf   
  41f999:	xchg   BYTE PTR [edx+edi*4],ch
  41f99c:	ds pop edx
  41f99e:	push   ebp
  41f99f:	mov    al,ds:0x80de3a0b
  41f9a4:	inc    esi
  41f9a5:	jmp    0x41f987
  41f9a7:	pop    es
  41f9a8:	dec    eax
  41f9a9:	xor    edi,esi
  41f9ab:	je     0x41f9d6
  41f9ad:	xchg   ebx,eax
  41f9ae:	test   BYTE PTR [edi-0x50],0x5a
  41f9b2:	outs   dx,BYTE PTR ds:[esi]
  41f9b3:	(bad)  
  41f9b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9b5:	inc    ebx
  41f9b6:	ja     0x41fa32
  41f9b8:	sahf   
  41f9b9:	xchg   esp,eax
  41f9ba:	pop    es
  41f9bb:	mov    ebp,0xfa00c79e
  41f9c0:	mov    DWORD PTR [ebx],edx
  41f9c2:	and    ecx,DWORD PTR [esi]
  41f9c4:	sahf   
  41f9c5:	dec    ebp
  41f9c6:	shl    DWORD PTR [ebp-0x736386d3],cl
  41f9cc:	pushf  
  41f9cd:	(bad)  
  41f9ce:	pop    ecx
  41f9cf:	rcl    ebp,cl
  41f9d1:	lock sub al,0x10
  41f9d4:	pushf  
  41f9d5:	imul   edx,DWORD PTR [esi+0x3c],0xf490a6af
  41f9dc:	and    eax,0xf117d9e2
  41f9e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9e2:	pop    es
  41f9e3:	(bad)  
  41f9e4:	dec    esi
  41f9e5:	jge    0x5cbc79e7
  41f9eb:	pop    ss
  41f9ec:	xchg   ecx,eax
  41f9ed:	out    dx,eax
  41f9ee:	jns    0x41f970
  41f9f0:	mov    cl,0x1a
  41f9f2:	mov    ch,BYTE PTR [esi-0x168a546]
  41f9f8:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9fa:	(bad)  [esi]
  41f9fc:	nop
  41f9fd:	daa    
  41f9fe:	nop
  41f9ff:	xor    ecx,eax
  41fa01:	aam    0x15
  41fa03:	mov    edx,0xfddb8d3c
  41fa08:	bound  ecx,QWORD PTR [edx-0x16]
  41fa0b:	or     BYTE PTR [edx],cl
  41fa0d:	inc    ecx
  41fa0e:	xchg   ebx,eax
  41fa0f:	mov    esp,0xd38f8e23
  41fa14:	mov    bl,BYTE PTR [edi]
  41fa16:	mov    WORD PTR [ebp-0x19da9ea6],gs
  41fa1c:	ret    0x485
  41fa1f:	xlat   BYTE PTR ds:[ebx]
  41fa20:	sar    esi,0x1a
  41fa23:	cli    
  41fa24:	dec    eax
  41fa25:	dec    ecx
  41fa26:	cli    
  41fa27:	xor    eax,0x1ffe3087
  41fa2c:	mov    eax,ds:0x7f3647bb
  41fa31:	xchg   BYTE PTR [ecx+0x17ad6ecf],ch
  41fa37:	pop    ebx
  41fa38:	pop    ss
  41fa39:	sub    al,0xc
  41fa3b:	repz mov edi,0xfbabe51a
  41fa41:	stos   BYTE PTR es:[edi],al
  41fa42:	(bad)  
  41fa43:	popf   
  41fa44:	adc    cl,BYTE PTR [ecx+0x10]
  41fa47:	call   0x1f40:0xd5bb9842
  41fa4e:	loop   0x41fa53
  41fa50:	shr    BYTE PTR ds:0x3ed72797,cl
  41fa56:	add    DWORD PTR [ebx-0x159de71c],0xd9d0e4d6
  41fa60:	mov    ds:0xb809b2bd,al
  41fa65:	retf   0x1847
  41fa68:	mov    edx,0x9e13fb36
  41fa6d:	cmp    BYTE PTR [eax],0xfa
  41fa70:	retf   
  41fa71:	jns    0x41fa29
  41fa73:	rcr    BYTE PTR [eax],cl
  41fa75:	ins    BYTE PTR es:[edi],dx
  41fa76:	stc    
  41fa77:	xchg   DWORD PTR ss:[esi],ebp
  41fa7a:	jmp    0x41fa91
  41fa7c:	and    ch,BYTE PTR [ebx]
  41fa7e:	push   es
  41fa7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa80:	dec    esi
  41fa81:	fmul   QWORD PTR [esi]
  41fa83:	inc    edi
  41fa84:	(bad)  
  41fa85:	icebp  
  41fa86:	dec    edx
  41fa87:	aam    0xb3
  41fa89:	inc    edi
  41fa8a:	jbe    0x41fa62
  41fa8c:	fs nop
  41fa8e:	xchg   ecx,eax
  41fa8f:	scas   eax,DWORD PTR es:[edi]
  41fa90:	call   0x7095:0x810e4b2f
  41fa97:	xchg   ecx,eax
  41fa98:	adc    ch,BYTE PTR [edi]
  41fa9a:	mov    esp,0x944132ec
  41fa9f:	fbld   TBYTE PTR [ecx+ebp*1]
  41faa2:	mov    edx,0x1f865abf
  41faa7:	cwde   
  41faa8:	imul   BYTE PTR [edi]
  41faaa:	sahf   
  41faab:	inc    eax
  41faac:	jle    0x41fa30
  41faae:	push   ebp
  41faaf:	or     eax,0xe51f388a
  41fab4:	and    ecx,DWORD PTR [ecx]
  41fab6:	adc    al,0x96
  41fab8:	mov    edi,0x13094247
  41fabd:	cmp    al,0x74
  41fabf:	clc    
  41fac0:	outs   dx,DWORD PTR ds:[esi]
  41fac1:	inc    ebx
  41fac2:	mov    bh,0x14
  41fac4:	dec    eax
  41fac5:	(bad)  
  41fac6:	xchg   esi,eax
  41fac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fac8:	or     bl,BYTE PTR [edi+edx*8+0x7fab152a]
  41facf:	or     al,0x9b
  41fad1:	loop   0x41fb24
  41fad3:	mov    ch,0x48
  41fad5:	gs pop es
  41fad7:	es leave 
  41fad9:	pop    ebp
  41fada:	(bad)  
  41fadb:	ja     0x41fb58
  41fadd:	jo     0x41fa82
  41fadf:	pop    edx
  41fae0:	scas   al,BYTE PTR es:[edi]
  41fae1:	xor    bh,BYTE PTR [edx]
  41fae3:	jmp    0x41fa6a
  41fae5:	push   ds
  41fae6:	sbb    dh,BYTE PTR [esi+0x2eebd389]
  41faec:	add    DWORD PTR [esi+eiz*2+0x30],esi
  41faf0:	sbb    edx,edi
  41faf2:	mov    edi,DWORD PTR [edx]
  41faf4:	loopne 0x41fad5
  41faf6:	arpl   WORD PTR cs:[edi-0x34c6aa2b],si
  41fafd:	mov    bh,BYTE PTR [ecx-0x6c]
  41fb00:	imul   esi,DWORD PTR [ebp+0x34445e2],0x19
  41fb07:	mov    WORD PTR [edi-0x13bbbd96],cs
  41fb0d:	fnstsw WORD PTR [eax+0x3a]
  41fb10:	cwde   
  41fb11:	arpl   WORD PTR [esi+0x4a],cx
  41fb14:	lahf   
  41fb15:	xor    BYTE PTR [eax+0x4673e006],dh
  41fb1b:	outs   dx,DWORD PTR ds:[esi]
  41fb1c:	mov    cl,0xa1
  41fb1e:	retf   
  41fb1f:	xor    BYTE PTR [ebp+0x62],cl
  41fb22:	mov    cl,BYTE PTR [ecx+0x6b]
  41fb25:	inc    ebp
  41fb26:	call   0xb317:0x39ca2a09
  41fb2d:	push   es
  41fb2e:	adc    ebx,edi
  41fb30:	mov    bl,0x47
  41fb32:	lods   eax,DWORD PTR ds:[esi]
  41fb33:	fild   DWORD PTR [ebx+0x6d1f6093]
  41fb39:	jne    0x41fb90
  41fb3b:	das    
  41fb3c:	out    0x96,al
  41fb3e:	pop    esi
  41fb3f:	cmp    eax,0xfc71febe
  41fb44:	cmp    al,0xc1
  41fb46:	call   0x502f4259
  41fb4b:	aas    
  41fb4c:	sahf   
  41fb4d:	(bad)
  41fb50:	xchg   esp,eax
  41fb51:	push   esp
  41fb52:	push   0xffffff8a
  41fb54:	scas   eax,DWORD PTR es:[edi]
  41fb55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb56:	shld   WORD PTR [edx],bx,cl
  41fb5a:	shl    BYTE PTR [edi+ebx*8],1
  41fb5d:	mov    esp,0x85c9064a
  41fb62:	push   0xffffffb9
  41fb64:	inc    edx
  41fb65:	push   eax
  41fb66:	and    ebp,DWORD PTR [ebx]
  41fb68:	xchg   BYTE PTR [ebx+0x2072980d],dl
  41fb6e:	push   eax
  41fb6f:	pop    edx
  41fb70:	stos   BYTE PTR es:[edi],al
  41fb71:	jae    0x41fb37
  41fb73:	inc    ebx
  41fb74:	popf   
  41fb75:	mov    al,ch
  41fb77:	jl     0x41fb54
  41fb79:	icebp  
  41fb7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb7b:	mov    esp,0xb9273d66
  41fb80:	dec    esi
  41fb81:	fild   DWORD PTR [ecx]
  41fb83:	in     eax,0x5c
  41fb85:	mul    al
  41fb87:	adc    BYTE PTR [edx],0xe7
  41fb8a:	shr    al,0x6f
  41fb8d:	cs mov eax,0xf3f01dcb
  41fb93:	pop    edx
  41fb94:	scas   eax,DWORD PTR es:[edi]
  41fb95:	fsubr  DWORD PTR [ebx+edi*1-0x27]
  41fb99:	xchg   edx,eax
  41fb9a:	adc    BYTE PTR [edx-0x50],dl
  41fb9d:	cmp    al,0x82
  41fb9f:	pop    ss
  41fba0:	and    BYTE PTR [ecx-0x530d08e8],bl
  41fba6:	pop    eax
  41fba7:	jnp    0x41fb48
  41fba9:	mov    BYTE PTR es:[ebx],ch
  41fbac:	push   ebx
  41fbad:	ja     0x41fc0b
  41fbaf:	cli    
  41fbb0:	int3   
  41fbb1:	fnsave [ebx]
  41fbb3:	sbb    BYTE PTR [edi-0x5ce6b158],ch
  41fbb9:	mov    esp,0x109ee67e
  41fbbe:	scas   al,BYTE PTR es:[edi]
  41fbbf:	inc    edi
  41fbc0:	mov    ebx,0xe4a13510
  41fbc5:	mov    eax,DWORD PTR [eax-0x18b31d05]
  41fbcb:	push   ebx
  41fbcc:	xor    eax,0xdf57b59d
  41fbd1:	or     eax,0xc76bbf7a
  41fbd6:	scas   eax,DWORD PTR es:[edi]
  41fbd7:	in     eax,0xfe
  41fbd9:	jl     0x41fc43
  41fbdb:	adc    ecx,DWORD PTR [ebx+eiz*1]
  41fbde:	in     al,dx
  41fbdf:	enter  0x96b7,0x6d
  41fbe3:	push   esp
  41fbe4:	enter  0x9454,0x39
  41fbe8:	stc    
  41fbe9:	fs jne 0x41fbfe
  41fbec:	retf   0x8b6f
  41fbef:	icebp  
  41fbf0:	outs   dx,BYTE PTR ds:[esi]
  41fbf1:	add    eax,0xd1a9463a
  41fbf6:	call   0xbb22aea4
  41fbfb:	out    dx,eax
  41fbfc:	aas    
  41fbfd:	fimul  WORD PTR [edi]
  41fbff:	scas   eax,DWORD PTR es:[edi]
  41fc00:	cmp    eax,0x3c551fe8
  41fc05:	push   0xdd0f961d
  41fc0a:	xrelease mov BYTE PTR [esp+esi*8-0x20a7a94c],dl
  41fc12:	repz in al,0x0
  41fc15:	or     al,0x5d
  41fc17:	shl    ecx,cl
  41fc19:	mov    ah,0xbb
  41fc1b:	enter  0xc44a,0x5f
  41fc1f:	mov    al,ds:0x74037a92
  41fc24:	out    dx,eax
  41fc25:	push   esi
  41fc26:	mov    edi,0xb3481b04
  41fc2b:	popf   
  41fc2c:	loopne 0x41fc17
  41fc2e:	xlat   BYTE PTR ds:[ebx]
  41fc2f:	mov    bh,0x3f
  41fc31:	pop    ss
  41fc32:	jmp    0x81dac894
  41fc37:	xor    BYTE PTR [ebx+0x7b6dc951],ah
  41fc3d:	inc    esi
  41fc3e:	mov    dh,0xe9
  41fc40:	adc    BYTE PTR [eax-0x53a05dbb],dh
  41fc46:	sbb    eax,0xea4c5410
  41fc4b:	adc    DWORD PTR [ebx+esi*1],esi
  41fc4e:	in     al,dx
  41fc4f:	jge    0x41fbd8
  41fc51:	dec    esi
  41fc52:	pop    ebx
  41fc53:	jnp    0x41fc4d
  41fc55:	add    dl,BYTE PTR [ebp-0x38abc291]
  41fc5b:	and    BYTE PTR [edi+0x4d1def28],ch
  41fc61:	dec    edi
  41fc62:	ret    
  41fc63:	dec    ebx
  41fc64:	push   ecx
  41fc65:	sbb    BYTE PTR ds:0x26c3d944,bh
  41fc6b:	pushf  
  41fc6c:	xacquire xchg DWORD PTR [ebx],esi
  41fc6f:	lods   eax,DWORD PTR ds:[esi]
  41fc70:	pop    di
  41fc72:	call   0xc99a9671
  41fc77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc78:	pop    ebp
  41fc79:	xchg   edx,eax
  41fc7a:	jnp    0x41fc5a
  41fc7c:	jmp    0x6a44:0x9533fe
  41fc83:	ss or  eax,0xd1c83e3f
  41fc89:	aas    
  41fc8a:	pop    ds
  41fc8b:	(bad)  
  41fc8c:	retf   0x84a9
  41fc8f:	xor    DWORD PTR [ebp+esi*2-0x1b9f18f5],ebx
  41fc96:	fldenv [eax-0xcff0e4c]
  41fc9c:	pushf  
  41fc9d:	mov    eax,0xd16a1594
  41fca2:	gs das 
  41fca4:	outs   dx,DWORD PTR ds:[esi]
  41fca5:	pop    eax
  41fca6:	mov    ebp,0x1b88dedd
  41fcab:	and    DWORD PTR [ebp-0x4c],0x71d29faa
  41fcb2:	push   es
  41fcb3:	int    0x98
  41fcb5:	pop    ecx
  41fcb6:	dec    ebp
  41fcb7:	mov    ebp,0x40eaf949
  41fcbc:	push   es
  41fcbd:	jnp    0x41fc4d
  41fcbf:	(bad)  [eax]
  41fcc1:	cmp    BYTE PTR [ecx],dl
  41fcc3:	xor    DWORD PTR [ecx-0x66],ecx
  41fcc6:	icebp  
  41fcc7:	or     ebx,eax
  41fcc9:	jge    0x41fd0c
  41fccb:	xor    al,0x6d
  41fccd:	cli    
  41fcce:	cmp    ebp,DWORD PTR [edi+esi*1]
  41fcd1:	inc    ecx
  41fcd2:	jne    0x41fca6
  41fcd4:	lock fdiv st,st(7)
  41fcd7:	jmp    0x13310afc
  41fcdc:	jo     0x41fd09
  41fcde:	inc    edi
  41fcdf:	push   edi
  41fce0:	push   cs
  41fce1:	retf   
  41fce2:	xchg   DWORD PTR [esi-0x330d85fb],edi
  41fce8:	sub    dh,bh
  41fcea:	or     ah,ch
  41fcec:	addr16 mov edx,0x81852821
  41fcf2:	dec    ecx
  41fcf3:	xchg   esp,eax
  41fcf4:	mov    dl,0x87
  41fcf6:	add    ebx,DWORD PTR [edi+eax*2+0x2dacfcce]
  41fcfd:	pushf  
  41fcfe:	sub    ah,BYTE PTR [esp+ebp*2-0x630ad38a]
  41fd05:	scas   eax,DWORD PTR es:[edi]
  41fd06:	add    ebx,DWORD PTR [ebp+0x67e521a6]
  41fd0c:	ffreep st(3)
  41fd0e:	sahf   
  41fd0f:	xchg   DWORD PTR [ebx],edx
  41fd11:	retf   
  41fd12:	bound  esi,QWORD PTR [edi]
  41fd14:	int    0x80
  41fd16:	and    eax,0x4525eb05
  41fd1b:	retf   
  41fd1c:	dec    ecx
  41fd1d:	add    BYTE PTR [edi],dh
  41fd1f:	cmp    DWORD PTR [edi+0x4f9ed9b7],edx
  41fd25:	xchg   ebp,eax
  41fd26:	jg     0x41fd6c
  41fd28:	cmc    
  41fd29:	mov    eax,?
  41fd2b:	(bad)  
  41fd2c:	fwait
  41fd2d:	rcr    BYTE PTR [eax-0x32],cl
  41fd30:	sbb    DWORD PTR [edi-0x76469902],esi
  41fd36:	inc    edi
  41fd37:	daa    
  41fd38:	mov    edx,0xd9f905b3
  41fd3d:	mov    eax,0x652feafe
  41fd42:	(bad)  
  41fd43:	fidivr WORD PTR [edx+0x629c474]
  41fd49:	in     al,0xdb
  41fd4b:	and    DWORD PTR ds:0xe32d1798,0x8
  41fd52:	sub    edi,esi
  41fd54:	push   cs
  41fd55:	enter  0x9d6b,0x3f
  41fd59:	test   al,0xbd
  41fd5b:	rol    BYTE PTR [esi+0x14],cl
  41fd5e:	int    0x16
  41fd60:	sbb    edi,DWORD PTR [ebx+eax*1]
  41fd63:	mov    bh,0x9
  41fd65:	mov    eax,0x2de34f27
  41fd6a:	js     0x41fd8b
  41fd6c:	add    BYTE PTR [ebp+edx*4+0x58],cl
  41fd70:	test   DWORD PTR [edx],0x9b45b17a
  41fd76:	lahf   
  41fd77:	sub    al,0x40
  41fd79:	dec    ecx
  41fd7a:	sahf   
  41fd7b:	sbb    esi,DWORD PTR [edx]
  41fd7d:	inc    DWORD PTR [ebx-0x7e]
  41fd80:	xor    DWORD PTR [edi+0x3],0xe393c61
  41fd87:	add    DWORD PTR [esi-0x12],ebp
  41fd8a:	push   edx
  41fd8b:	dec    edx
  41fd8c:	jns    0x41fd74
  41fd8e:	jge    0x41fd64
  41fd90:	mov    dh,0xae
  41fd92:	bsf    ebx,DWORD PTR [ecx+0x5602fcbe]
  41fd99:	mov    ebp,esp
  41fd9b:	inc    esp
  41fd9c:	cs dec edx
  41fd9e:	repnz fldcw WORD PTR [esi-0x4c]
  41fda2:	repz mov al,ds:0x936ad8e0
  41fda8:	(bad)  
  41fdaa:	(bad)  
  41fdab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdac:	cmp    al,0xfc
  41fdae:	sub    ah,cl
  41fdb0:	and    dl,BYTE PTR ds:0xe3def57a
  41fdb6:	xor    al,0x46
  41fdb8:	jbe    0x41fde4
  41fdba:	jmp    0x41fe39
  41fdbc:	mov    bh,0x95
  41fdbe:	lods   al,BYTE PTR ds:[esi]
  41fdbf:	movaps xmm0,xmm6
  41fdc2:	sub    ebx,eax
  41fdc4:	xchg   edx,eax
  41fdc5:	cld    
  41fdc6:	mov    ebp,0xc250fc62
  41fdcb:	pop    es
  41fdcc:	mov    es,ebp
  41fdce:	xor    eax,0xa4340664
  41fdd3:	aad    0x32
  41fdd5:	inc    ebp
  41fdd6:	cli    
  41fdd7:	add    BYTE PTR [ebp+0x430f09c5],ch
  41fddd:	sar    DWORD PTR [esi],1
  41fddf:	xor    eax,ebx
  41fde1:	(bad)  
  41fde2:	(bad)  
  41fde3:	out    0x35,al
  41fde5:	lods   eax,DWORD PTR ds:[esi]
  41fde6:	fisttp WORD PTR [esi-0x5d]
  41fde9:	outs   dx,DWORD PTR ds:[esi]
  41fdea:	cmp    al,0x4a
  41fdec:	lds    esp,FWORD PTR [eax+0xad1773e]
  41fdf2:	cs push ecx
  41fdf4:	int3   
  41fdf5:	push   esi
  41fdf6:	sub    DWORD PTR [edx],ebp
  41fdf8:	push   es
  41fdf9:	adc    ebx,esi
  41fdfb:	mov    al,ds:0xd1e38ce7
  41fe00:	inc    esi
  41fe01:	and    BYTE PTR [edx+0x45],dl
  41fe04:	push   ebx
  41fe05:	push   ds
  41fe06:	stc    
  41fe07:	fcmovu st,st(3)
  41fe09:	mov    WORD PTR [ebp-0x6],fs
  41fe0c:	xor    al,0xcb
  41fe0e:	scas   al,BYTE PTR es:[edi]
  41fe0f:	inc    ebx
  41fe10:	mov    ds:0xe6feceec,eax
  41fe15:	jmp    0x1eb1:0x54a0a588
  41fe1c:	inc    eax
  41fe1d:	jmp    0x41fe12
  41fe1f:	(bad)  
  41fe20:	mov    ecx,DWORD PTR [edx]
  41fe22:	xchg   esi,eax
  41fe23:	aaa    
  41fe24:	shr    BYTE PTR [edi+0x4e57b106],0xe7
  41fe2b:	adc    eax,0x8668b279
  41fe30:	jb     0x41fe0e
  41fe32:	xor    BYTE PTR [edi+0x2b2d03d6],al
  41fe38:	mov    bl,0x60
  41fe3a:	imul   edi,DWORD PTR [ebp+0x59],0x36d7e49b
  41fe41:	mov    ebp,0xf92ec7f1
  41fe46:	pop    eax
  41fe47:	dec    ebx
  41fe48:	mov    ebp,0xd4c2ac9c
  41fe4d:	aas    
  41fe4e:	ret    0xdd73
  41fe51:	jne    0x41fe80
  41fe53:	add    eax,0x832ead89
  41fe58:	sub    ebp,edx
  41fe5a:	push   ebp
  41fe5b:	lds    eax,FWORD PTR [edi+0x1eda166c]
  41fe61:	out    0xd1,eax
  41fe63:	hlt    
  41fe64:	push   edi
  41fe65:	mov    bl,BYTE PTR [ebx+0x2931753b]
  41fe6b:	jl     0x41feba
  41fe6d:	les    eax,FWORD PTR [ebx]
  41fe6f:	rol    esp,0xba
  41fe72:	fmul   st,st(7)
  41fe74:	mov    al,0xeb
  41fe76:	push   cs
  41fe77:	sub    DWORD PTR [esi+0x73],ecx
  41fe7a:	adc    ch,BYTE PTR [ebx+0x7a5efe18]
  41fe80:	sbb    eax,0x12e1d161
  41fe85:	and    ebp,DWORD PTR [eax]
  41fe87:	mov    ds:0xa79a1e91,eax
  41fe8c:	test   al,0x48
  41fe8e:	mov    ebx,0x15bcaa7b
  41fe93:	xor    DWORD PTR [edx],ecx
  41fe95:	ficom  WORD PTR [esi]
  41fe97:	nop
  41fe98:	pop    DWORD PTR [eax+0x9da02c4]
  41fe9e:	pusha  
  41fe9f:	fist   DWORD PTR [edi+0x176d860b]
  41fea5:	in     eax,dx
  41fea6:	shl    edx,1
  41fea8:	jmp    0x20786503
  41fead:	das    
  41feae:	sbb    cl,ch
  41feb0:	sbb    esi,eax
  41feb2:	outs   dx,BYTE PTR ds:[esi]
  41feb3:	jnp    0x41fe38
  41feb5:	or     bl,BYTE PTR [esp+edx*4+0x25796301]
  41febc:	imul   esp,edx,0x94c13d72
  41fec2:	retf   0x3425
  41fec5:	sub    al,0xb2
  41fec7:	popa   
  41fec8:	push   eax
  41fec9:	pop    eax
  41feca:	retf   0xea98
  41fecd:	out    dx,eax
  41fece:	add    eax,0x7ecff00d
  41fed3:	dec    ebp
  41fed4:	jne    0x41ff2c
  41fed6:	xor    eax,edi
  41fed8:	retf   
  41fed9:	push   0xffffffcd
  41fedb:	mov    es,esp
  41fedd:	sub    cl,BYTE PTR [edi-0x1d]
  41fee0:	push   0xffffff8b
  41fee2:	fistp  DWORD PTR [esi-0x50]
  41fee5:	ror    al,cl
  41fee7:	xchg   ebp,eax
  41fee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fee9:	pop    esi
  41feea:	pop    esi
  41feeb:	ret    
  41feec:	das    
  41feed:	sub    cl,bl
  41feef:	xor    eax,0x29bfbbad
  41fef4:	lods   eax,DWORD PTR ds:[esi]
  41fef5:	bound  ebx,QWORD PTR gs:[ebp-0x5e1001de]
  41fefc:	inc    esi
  41fefd:	inc    esp
  41fefe:	mov    BYTE PTR [ecx],ah
  41ff00:	or     eax,0xf7c3d2cb
  41ff05:	je     0x41feda
  41ff07:	mov    WORD PTR [eax-0x30],ss
  41ff0a:	inc    ecx
  41ff0b:	std    
  41ff0c:	or     al,BYTE PTR [ebx-0x744b0566]
  41ff12:	in     al,dx
  41ff13:	sbb    al,0xcb
  41ff15:	ss call 0x48907476
  41ff1b:	pop    ebp
  41ff1c:	outs   dx,DWORD PTR ds:[esi]
  41ff1d:	xor    al,0x0
  41ff1f:	add    BYTE PTR [eax],al
  41ff21:	add    BYTE PTR [eax],al
  41ff23:	add    BYTE PTR [eax],al
  41ff25:	add    BYTE PTR [edi-0x126a5a8a],bh
  41ff2b:	xlat   BYTE PTR ds:[ebx]
  41ff2c:	mov    edi,0xa0a36c7e
  41ff31:	ror    BYTE PTR [edx-0x4e],0xd5
  41ff35:	cmp    BYTE PTR [ebx],0xf7
  41ff38:	add    DWORD PTR [eax],eax
  41ff3a:	and    BYTE PTR [edi],al
  41ff3c:	add    BYTE PTR [eax],al
  41ff3e:	lock jo 0x41fec6
  41ff41:	(bad)  
  41ff43:	cdq    
  41ff44:	fild   DWORD PTR [ecx-0x62539234]
  41ff4a:	adc    cl,bl
  41ff4c:	rcr    DWORD PTR [edi-0x146c12b4],0x67
  41ff53:	cmc    
  41ff54:	pop    eax
  41ff55:	mov    ecx,0x8865c253
  41ff5a:	and    DWORD PTR [ebx+ebx*1-0x74eb4b4b],esp
  41ff61:	call   0xec87ceeb
  41ff66:	or     DWORD PTR [edx-0x14],0x5179bd84
  41ff6d:	cld    
  41ff6e:	(bad)  
  41ff6f:	jge    0x41ffad
  41ff71:	test   eax,0xee736823
  41ff76:	sbb    eax,0x6c5f84c5
  41ff7b:	mov    bh,0x8
  41ff7d:	enter  0x9987,0x17
  41ff81:	out    dx,al
  41ff82:	mov    dl,BYTE PTR [ebx-0x1c3cf766]
  41ff88:	and    eax,0x3764b9ae
  41ff8d:	fwait
  41ff8e:	adc    BYTE PTR [esi+0x161cea1b],al
  41ff94:	sub    DWORD PTR [esi],ebx
  41ff96:	jg     0x420002
  41ff98:	ret    
  41ff99:	push   0x67
  41ff9b:	inc    edi
  41ff9c:	cdq    
  41ff9d:	jbe    0x41ff2b
  41ff9f:	and    BYTE PTR [edx],dl
  41ffa1:	dec    esi
  41ffa2:	cmp    BYTE PTR [eax+eax*2-0x2e147a6b],ch
  41ffa9:	jne    0x41ff3a
  41ffab:	xchg   edi,eax
  41ffac:	imul   ecx,DWORD PTR [esi-0x56bb301b],0x5
  41ffb3:	pop    ebp
  41ffb4:	retf   0xe99a
  41ffb7:	mov    esi,0x59dfbf7b
  41ffbc:	icebp  
  41ffbd:	in     al,dx
  41ffbe:	and    esp,DWORD PTR [edi]
  41ffc0:	(bad)  
  41ffc1:	or     eax,0xb4f9c5fa
  41ffc6:	mov    ds:0x1b132ef2,al
  41ffcb:	aas    
  41ffcc:	pop    esi
  41ffcd:	add    cl,cl
  41ffcf:	cld    
  41ffd0:	sub    al,bl
  41ffd2:	jmp    0xbaa9:0xee2674ea
  41ffd9:	mov    ds:0xe18202e6,eax
  41ffde:	outs   dx,DWORD PTR ds:[esi]
  41ffdf:	dec    eax
  41ffe0:	rcr    DWORD PTR [edi+0x1f],0x94
  41ffe4:	mov    eax,ds:0x5df8f5e
  41ffe9:	(bad)  
  41ffeb:	dec    edi
  41ffec:	sbb    al,0x37
  41ffee:	cmp    ah,BYTE PTR [eax-0x3fd333ed]
  41fff4:	out    dx,al
  41fff5:	jne    0x42006b
  41fff7:	dec    esp
  41fff8:	ret    0x2b36
  41fffb:	sub    ecx,DWORD PTR [ebp-0x40]
  41fffe:	(bad)  
  41ffff:	call   0xdd4d4285
  420004:	xchg   DWORD PTR [edi-0x14],ebx
  420007:	clc    
  420008:	mov    dl,0x64
  42000a:	out    dx,al
  42000b:	push   edx
  42000c:	out    dx,al
  42000d:	rcl    DWORD PTR [ebx+0x5eff88c6],0x19
  420014:	or     eax,0x7a9bb4e1
  420019:	in     eax,0xe8
  42001b:	into   
  42001c:	adc    BYTE PTR [ebx+0x2b],bl
  42001f:	sbb    al,0xaf
  420021:	mov    edx,ebp
  420023:	std    
  420024:	mov    al,0xd2
  420026:	(bad)  
  420027:	sbb    al,0x32
  420029:	cli    
  42002a:	xor    al,BYTE PTR [edx+0x59]
  42002d:	fcom   QWORD PTR [edx+0x5b69c575]
  420033:	inc    DWORD PTR [ebp+0x553e4ea8]
  420039:	cmp    ebp,DWORD PTR [edi+0x3e]
  42003c:	jecxz  0x4200a4
  42003e:	mov    ecx,0xc36daba6
  420043:	mov    ch,0x4
  420045:	or     DWORD PTR [edx],edi
  420047:	std    
  420048:	ins    DWORD PTR es:[edi],dx
  420049:	xor    esp,DWORD PTR [eax]
  42004b:	(bad)  
  42004d:	lea    edx,[ebp-0x5916301]
  420053:	fsubr  st(7),st
  420055:	retf   0xeb32
  420058:	xor    ecx,ebp
  42005a:	dec    ebx
  42005b:	mov    gs,WORD PTR [ecx-0x1c5d31e5]
  420061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420062:	xor    al,BYTE PTR [ebp-0x2a]
  420065:	rcl    DWORD PTR [edx],cl
  420067:	bound  edx,QWORD PTR [edi-0x7c5c4f96]
  42006d:	data16 sbb al,0xb9
  420070:	dec    ecx
  420071:	and    esi,eax
  420073:	dec    edi
  420074:	dec    ebp
  420075:	pop    edi
  420076:	call   0x193:0xaf63e52
  42007d:	enter  0x8173,0xe
  420081:	loopne 0x420010
  420083:	dec    edi
  420084:	mov    al,0xdc
  420086:	hlt    
  420087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420088:	xchg   edi,eax
  420089:	or     edx,DWORD PTR [edx-0x3]
  42008c:	and    ch,dl
  42008e:	sbb    eax,0x84582767
  420093:	or     DWORD PTR [eax],ecx
  420095:	into   
  420096:	push   ecx
  420097:	mov    dl,0x31
  420099:	xor    eax,0xf2aea9a0
  42009e:	nop
  42009f:	(bad)  
  4200a0:	fidiv  DWORD PTR ds:0xfc03aaf3
  4200a6:	or     ecx,DWORD PTR [eax]
  4200a8:	call   0x3498:0xb8c46213
  4200af:	adc    al,0x94
  4200b1:	jnp    0x420097
  4200b3:	mov    cl,0xe3
  4200b5:	jb     0x420093
  4200b7:	lods   eax,DWORD PTR ds:[esi]
  4200b8:	scas   eax,DWORD PTR es:[edi]
  4200b9:	imul   BYTE PTR [esi+esi*2]
  4200bc:	mov    ebp,0x968a2c9d
  4200c1:	xchg   DWORD PTR [eax+0x5a],edi
  4200c4:	(bad)  
  4200c6:	repz sti 
  4200c8:	pusha  
  4200c9:	inc    edi
  4200ca:	jbe    0x420099
  4200cc:	push   edx
  4200cd:	lds    ebp,FWORD PTR [edx-0x6b]
  4200d0:	pop    ebp
  4200d1:	inc    esi
  4200d2:	ficomp DWORD PTR [edi-0x33988dd6]
  4200d8:	jnp    0x42009f
  4200da:	outs   dx,DWORD PTR ds:[esi]
  4200db:	arpl   WORD PTR [esi-0xb],di
  4200de:	arpl   WORD PTR [eax+0x69],sp
  4200e1:	mov    ds:0x8a1423f2,al
  4200e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200e7:	call   0x364e:0xdc40a07c
  4200ee:	(bad)  
  4200ef:	jmp    0xfc0e:0xfa42bb7
  4200f6:	in     al,0x8d
  4200f8:	mov    gs,eax
  4200fa:	or     BYTE PTR [ebx],al
  4200fc:	cmp    al,0x51
  4200fe:	pusha  
  4200ff:	mov    ebp,0x86c392d7
  420104:	out    dx,al
  420105:	ret    
  420106:	xor    eax,0xaec111f0
  42010b:	cwde   
  42010c:	sub    eax,0x45619dfe
  420111:	cmp    al,0x31
  420113:	loop   0x42009f
  420115:	int    0xb
  420117:	bound  esp,QWORD PTR [eax]
  420119:	xchg   DWORD PTR [esp+edi*8],ebx
  42011c:	xlat   BYTE PTR ds:[ebx]
  42011d:	adc    ah,al
  42011f:	popa   
  420120:	pop    edi
  420121:	inc    esp
  420122:	xor    BYTE PTR [ecx-0x595a9349],ch
  420128:	xchg   ecx,eax
  420129:	js     0x4201a1
  42012b:	dec    ecx
  42012c:	aad    0xee
  42012e:	xor    ebp,edx
  420130:	dec    esp
  420131:	cwde   
  420132:	lock and eax,0x1adc16dc
  420138:	in     eax,dx
  420139:	ins    BYTE PTR es:[edi],dx
  42013a:	mov    bl,0xa0
  42013c:	in     eax,dx
  42013d:	adc    edi,DWORD PTR [esi+0x1e1fea33]
  420143:	fnstenv [ebx]
  420145:	test   BYTE PTR [ecx-0x7c],bh
  420148:	stos   BYTE PTR es:[edi],al
  420149:	out    0x2,al
  42014b:	js     0x420155
  42014d:	loope  0x42010c
  42014f:	gs (bad) 
  420152:	icebp  
  420153:	gs inc eax
  420155:	aad    0xab
  420157:	pop    ebx
  420158:	sub    DWORD PTR [eax+0x32],esi
  42015b:	sti    
  42015c:	jp     0x4201b6
  42015e:	push   esp
  42015f:	mov    ds:0xed229d98,al
  420164:	js     0x4200e7
  420166:	xchg   ebp,eax
  420167:	data16 add BYTE PTR [eax-0x62f935ef],bl
  42016e:	sub    BYTE PTR [ecx*2+0x5f6fb7cb],ch
  420175:	adc    ecx,DWORD PTR [esi-0x5]
  420178:	mov    al,ds:0x90e6bd5e
  42017d:	jae    0x420170
  42017f:	mov    esi,0x6a39b640
  420184:	push   ss
  420185:	fnstsw WORD PTR [ebx+edx*1+0x33]
  420189:	pop    edi
  42018a:	xchg   esp,eax
  42018b:	inc    eax
  42018c:	retf   
  42018d:	fcmove st,st(3)
  42018f:	cmp    ebx,DWORD PTR [edi+0xa]
  420192:	leave  
  420193:	shr    DWORD PTR [edi+ebp*2-0x7b783d8f],cl
  42019a:	ret    0x2e83
  42019d:	aas    
  42019e:	mov    al,ds:0x716418ca
  4201a3:	imul   DWORD PTR [edi-0x54f728cd]
  4201a9:	sbb    DWORD PTR [ebx+edx*1],eax
  4201ac:	xchg   BYTE PTR [ebx+edx*4],bl
  4201af:	sahf   
  4201b0:	and    dh,ch
  4201b2:	and    al,0x97
  4201b4:	cbw    
  4201b6:	xchg   esp,eax
  4201b7:	xor    al,0xfd
  4201b9:	cmp    esi,DWORD PTR [esi+0x5dded7f]
  4201bf:	in     eax,dx
  4201c0:	inc    edi
  4201c1:	push   0x33b11c0f
  4201c6:	inc    ebp
  4201c7:	jmp    0xfd1093fa
  4201cc:	iret   
  4201cd:	push   0xffffff9a
  4201cf:	sti    
  4201d0:	test   DWORD PTR [edx+ecx*2+0x35],0x196de050
  4201d8:	xchg   BYTE PTR ds:0xdb87be45,dh
  4201de:	gs aaa 
  4201e0:	outs   dx,DWORD PTR ds:[esi]
  4201e1:	addr16 aam 0x2d
  4201e4:	loopne 0x4201cf
  4201e6:	popa   
  4201e7:	scas   eax,DWORD PTR es:[edi]
  4201e8:	retf   0xf9db
  4201eb:	jo     0x4201ba
  4201ed:	sbb    edi,esp
  4201ef:	dec    ebx
  4201f0:	and    bh,bl
  4201f2:	ss ret 0xe691
  4201f6:	cs dec esp
  4201f8:	and    esi,DWORD PTR ds:0x726d7955
  4201fe:	jge    0x42020f
  420200:	ffree  st(6)
  420202:	out    dx,eax
  420203:	inc    ebx
  420204:	fs ja  0x420223
  420207:	jmp    0x4201d0
  420209:	lods   al,BYTE PTR ds:[esi]
  42020a:	addr16 out dx,eax
  42020c:	cmc    
  42020d:	outs   dx,BYTE PTR es:[esi]
  42020f:	mov    BYTE PTR fs:[esi+0xcc9928c],0xc9
  420217:	inc    ebx
  420218:	(bad)  
  420219:	push   ds
  42021a:	inc    esi
  42021b:	lods   eax,DWORD PTR ds:[esi]
  42021c:	mov    ebx,gs
  42021e:	xchg   esi,eax
  42021f:	push   eax
  420220:	cmp    eax,0xee7a7b6d
  420225:	adc    eax,0xa7b3b861
  42022a:	push   0xfffffffe
  42022c:	ret    
  42022d:	push   edi
  42022e:	jl     0x42020b
  420230:	xlat   BYTE PTR ds:[ebx]
  420231:	cmp    DWORD PTR [ebp-0x5568d173],esp
  420237:	pop    ds
  420238:	dec    eax
  420239:	fs inc ebx
  42023b:	cmp    esp,DWORD PTR [edi+eax*4]
  42023e:	cmp    al,0x1b
  420240:	ret    0x17fd
  420243:	adc    BYTE PTR [ebp-0x2a],dl
  420246:	or     BYTE PTR [ebx-0x44],0x41
  42024a:	fisub  DWORD PTR [ecx+ebp*2+0x44]
  42024e:	mov    ebx,DWORD PTR [esp+ecx*8]
  420251:	arpl   WORD PTR [ebx-0x594465bc],di
  420257:	xchg   edi,eax
  420258:	pop    DWORD PTR [ecx]
  42025a:	sti    
  42025b:	retf   0x8d2
  42025e:	mov    dl,0x4e
  420260:	das    
  420261:	call   FWORD PTR [eax]
  420263:	mov    edi,0x8273b6a
  420268:	lock pushf 
  42026a:	sub    ebx,DWORD PTR [edx-0x4a]
  42026d:	jb     0x26e6cd85
  420273:	xchg   esi,eax
  420274:	jae    0x4202b9
  420276:	mov    WORD PTR [ebp+0x5d],gs
  420279:	add    esi,DWORD PTR cs:[ecx]
  42027c:	shl    DWORD PTR [edx+0x2],cl
  42027f:	mov    bl,0x32
  420281:	sub    al,0x58
  420283:	fild   WORD PTR [ebx+0x58]
  420286:	out    0xe5,eax
  420288:	(bad)  
  42028a:	push   edi
  42028b:	das    
  42028c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42028d:	imul   edx,DWORD PTR [edi-0x515ee54a],0x380f5a5b
  420297:	shl    DWORD PTR [ebp+0x3187184e],cl
  42029d:	shl    DWORD PTR [ecx-0x748c88f7],1
  4202a3:	cmc    
  4202a4:	ss add eax,0xeb793fe1
  4202aa:	dec    esp
  4202ab:	outs   dx,BYTE PTR ds:[esi]
  4202ac:	pop    ss
  4202ad:	xlat   BYTE PTR ds:[ebx]
  4202ae:	mov    edx,0x3a3be343
  4202b3:	and    BYTE PTR [ecx],0xd8
  4202b6:	sub    ebp,DWORD PTR [edi+ebp*2+0x2]
  4202ba:	outs   dx,BYTE PTR ds:[esi]
  4202bb:	outs   dx,DWORD PTR ds:[esi]
  4202bc:	mov    eax,0x54b96719
  4202c1:	fcmovb st,st(7)
  4202c3:	fwait
  4202c4:	push   ecx
  4202c5:	sub    al,BYTE PTR [ebp-0x4a]
  4202c8:	pop    ebx
  4202c9:	xchg   edx,eax
  4202ca:	push   cs
  4202cb:	push   ebx
  4202cc:	xchg   edi,eax
  4202cd:	xchg   ecx,eax
  4202ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202cf:	hlt    
  4202d0:	fdivr  QWORD PTR [ebx+0x21207fda]
  4202d6:	pop    edx
  4202d7:	jb     0x420331
  4202d9:	inc    ebp
  4202da:	out    0xa6,al
  4202dc:	xor    ah,0x26
  4202df:	mov    edx,0x24b985a1
  4202e4:	mov    edx,0xf02330a2
  4202e9:	xchg   DWORD PTR [edx-0x5bb3b8db],esi
  4202ef:	pop    edx
  4202f0:	sub    bl,ch
  4202f2:	xor    DWORD PTR ds:0xa1ff7a58,ebp
  4202f8:	clc    
  4202f9:	(bad)  
  4202fa:	xor    dl,BYTE PTR [edi]
  4202fc:	xor    dh,al
  4202fe:	or     bh,BYTE PTR [edi-0x6]
  420301:	jbe    0x420339
  420303:	rcr    DWORD PTR [ecx+eax*1-0x39],0x97
  420308:	pop    esp
  420309:	jmp    0xa9062b88
  42030e:	and    eax,0x618a15a5
  420313:	mov    ah,dh
  420315:	test   BYTE PTR [ebx],bl
  420317:	or     eax,eax
  420319:	repnz add al,0x34
  42031c:	mov    edi,0x13a18905
  420321:	mov    ?,edi
  420323:	pop    ebp
  420324:	icebp  
  420325:	lods   eax,DWORD PTR ds:[esi]
  420326:	leave  
  420327:	test   al,0x43
  420329:	xor    dh,BYTE PTR [edx+ebx*2]
  42032c:	ret    
  42032d:	mov    bl,0x41
  42032f:	out    0xae,eax
  420331:	test   DWORD PTR [ebx-0x18c85dea],eax
  420337:	dec    di
  420339:	out    0x32,al
  42033b:	xchg   BYTE PTR [ebx-0x71],bh
  42033e:	jno    0x42037e
  420340:	icebp  
  420341:	dec    esi
  420342:	popf   
  420343:	retf   
  420344:	retf   
  420345:	addr16 inc ecx
  420347:	fldcw  WORD PTR [ecx+0x69]
  42034a:	xchg   esi,eax
  42034b:	enter  0x857c,0x47
  42034f:	mov    al,0x8d
  420351:	and    bh,BYTE PTR [ebx]
  420353:	enter  0x4f1b,0xe8
  420357:	jle    0x420354
  420359:	dec    esp
  42035a:	dec    ecx
  42035b:	(bad)  
  42035c:	fstp   TBYTE PTR [ebp+0x36]
  42035f:	mov    edi,DWORD PTR [edi+0x8b0c799]
  420365:	lea    ecx,[ebx+0x6c]
  420368:	sub    ch,ch
  42036a:	daa    
  42036b:	dec    edx
  42036c:	ds sub bh,al
  42036f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420370:	out    0x64,al
  420372:	js     0x4203b6
  420374:	dec    ebp
  420375:	int    0xcc
  420377:	cmc    
  420378:	or     BYTE PTR [ebp-0x61696bd4],0xfa
  42037f:	fcomp  DWORD PTR [edx]
  420381:	or     edi,eax
  420383:	shl    eax,0xfd
  420386:	jp     0x4203af
  420388:	imul   ebp,ebp,0x99409ead
  42038e:	rsm    
  420390:	push   ecx
  420391:	imul   eax,esp,0xf8c79d3f
  420397:	push   ebp
  420398:	mov    bh,0x18
  42039a:	stc    
  42039b:	mov    ds:0xb543bb30,eax
  4203a0:	mov    ds:0xcac44703,eax
  4203a5:	call   0x9cb00975
  4203aa:	lahf   
  4203ab:	jo     0x420358
  4203ad:	jle    0x4203f9
  4203af:	aaa    
  4203b0:	pop    ebx
  4203b1:	mov    ds:0x94835618,al
  4203b6:	and    dh,BYTE PTR [edx-0x4a]
  4203b9:	hlt    
  4203ba:	mov    DWORD PTR [edx-0x1a],esi
  4203bd:	xor    ah,BYTE PTR gs:[ebp-0x1e4365ba]
  4203c4:	test   eax,0xa6c6ad5e
  4203c9:	adc    al,0x22
  4203cb:	dec    ebx
  4203cc:	push   esi
  4203cd:	xchg   BYTE PTR [edi+edi*4+0x582d098d],ch
  4203d4:	inc    ebx
  4203d5:	shr    BYTE PTR ds:0x484a2a77,cl
  4203db:	fimul  WORD PTR [eax+0x6b]
  4203de:	adc    eax,edx
  4203e0:	repz jns 0x42038c
  4203e3:	ret    
  4203e4:	popf   
  4203e5:	loope  0x4203c9
  4203e7:	pop    ss
  4203e8:	daa    
  4203e9:	jno    0x420395
  4203eb:	in     eax,dx
  4203ec:	cli    
  4203ed:	sbb    eax,0xaed46af0
  4203f2:	and    edi,DWORD PTR [edx+ebp*2-0xaef705e]
  4203f9:	stos   BYTE PTR es:[edi],al
  4203fa:	adc    al,BYTE PTR [esi+0x2f835a55]
  420400:	xor    al,0xa3
  420402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420403:	xchg   ebx,eax
  420404:	xchg   BYTE PTR [edi+0x6b61f768],dh
  42040a:	mov    ds:0x8925919c,eax
  42040f:	xor    esi,edi
  420411:	mov    al,0x78
  420413:	mov    bh,0x5f
  420415:	aam    0xf8
  420417:	ret    
  420418:	das    
  420419:	sub    BYTE PTR [esi],bl
  42041b:	int    0xd9
  42041d:	int    0x2b
  42041f:	mov    dl,0xea
  420421:	pop    es
  420422:	push   ecx
  420423:	pop    esi
  420424:	mov    BYTE PTR [ecx+edx*2+0x4ebf9795],ch
  42042b:	sub    ebp,DWORD PTR [edi]
  42042d:	in     al,0xef
  42042f:	mov    cl,0xe5
  420431:	scas   eax,DWORD PTR es:[edi]
  420432:	(bad)  
  420433:	mov    bh,0x2d
  420435:	jnp    0x4203ce
  420437:	jno    0x4203ed
  420439:	jg     0x42043a
  42043b:	sbb    al,0x35
  42043d:	inc    eax
  42043e:	dec    ecx
  42043f:	jp     0x42041f
  420441:	or     eax,0xd67dad2c
  420446:	into   
  420447:	jns    0x42045d
  420449:	fst    QWORD PTR [eax]
  42044b:	mov    ch,0x47
  42044d:	push   esi
  42044e:	inc    eax
  42044f:	lods   al,BYTE PTR ds:[esi]
  420450:	inc    edx
  420451:	mov    eax,0x6b99c635
  420456:	mov    ecx,0xc1ab6187
  42045b:	xor    BYTE PTR [eax-0x23a73a7f],0x94
  420462:	arpl   WORD PTR [eax-0x10],di
  420465:	cmp    ebp,DWORD PTR [eax+0x68d65bc6]
  42046b:	mov    edi,?
  42046d:	jae    0x42046f
  42046f:	inc    eax
  420470:	push   edi
  420471:	lock xchg esp,eax
  420473:	pop    ds
  420474:	aaa    
  420475:	call   0x9dbc6ae3
  42047a:	inc    edi
  42047b:	mov    esi,0xfde1df57
  420480:	mov    ch,0xbf
  420482:	mov    bh,0xe4
  420484:	mov    ah,0x3b
  420486:	push   esi
  420487:	arpl   WORD PTR [ebp+0x49],cx
  42048a:	(bad)  
  42048b:	jb     0x420445
  42048d:	cs xor ebx,ebx
  420490:	mov    ebp,DWORD PTR [eax]
  420492:	(bad)  
  420493:	push   ds
  420494:	xchg   ebx,eax
  420495:	push   0xb7fa3b38
  42049a:	mov    ss,WORD PTR [edi]
  42049c:	xor    ecx,DWORD PTR [ebx+0xd689b34]
  4204a2:	jns    0x420461
  4204a4:	mov    eax,ds:0x475456d9
  4204a9:	jns    0x4204e9
  4204ab:	ret    0xdddb
  4204ae:	push   0x5d
  4204b0:	inc    ecx
  4204b1:	imul   edi,ebx,0x74bf5c6
  4204b7:	mov    ebp,0x7af0df26
  4204bd:	pop    edi
  4204be:	js     0x4204df
  4204c0:	xchg   esi,eax
  4204c1:	bound  eax,QWORD PTR [esi]
  4204c3:	xchg   edi,eax
  4204c4:	push   ebx
  4204c5:	test   al,0x0
  4204c7:	mov    al,0x47
  4204c9:	jg     0x420492
  4204cb:	in     al,0xb4
  4204cd:	sub    dh,al
  4204cf:	aam    0x19
  4204d1:	arpl   WORD PTR [ecx+0x24],si
  4204d4:	rcr    BYTE PTR [esi],cl
  4204d6:	jns    0x4204d2
  4204d8:	mov    ecx,0x17be7076
  4204dd:	ins    BYTE PTR es:[edi],dx
  4204de:	push   esp
  4204df:	inc    edx
  4204e0:	bndstx [ebp-0x5d],(bad)
  4204e4:	add    al,0x78
  4204e6:	mov    ss,WORD PTR [eax]
  4204e8:	mov    ds:0xbbcb3b1b,eax
  4204ed:	push   ss
  4204ee:	into   
  4204ef:	adc    DWORD PTR [eax-0x32],edx
  4204f2:	mov    eax,0xbcd719e5
  4204f7:	pop    es
  4204f8:	mov    bh,0x44
  4204fa:	and    DWORD PTR [ecx+0x52f51476],esp
  420500:	xchg   ebx,eax
  420501:	ins    DWORD PTR es:[edi],dx
  420502:	fcmovbe st,st(3)
  420504:	pop    ds
  420505:	test   eax,0x84d027e5
  42050a:	mov    bl,0x57
  42050c:	retf   
  42050d:	push   esi
  42050e:	into   
  42050f:	stos   DWORD PTR es:[edi],eax
  420510:	icebp  
  420511:	xor    eax,0x1ff0075e
  420516:	jbe    0x420499
  420518:	aad    0x7e
  42051a:	cmp    DWORD PTR [edi],ebp
  42051c:	cli    
  42051d:	inc    ebp
  42051e:	mov    cl,0xb3
  420520:	pushf  
  420521:	jle    0x4204d3
  420523:	and    BYTE PTR [edx+ecx*4-0x4d9c556],ah
  42052a:	sahf   
  42052b:	and    DWORD PTR [ebx+0x17],esi
  42052e:	(bad)  
  42052f:	inc    edx
  420530:	jns    0x42054e
  420532:	xor    eax,0x67efcc3e
  420537:	leave  
  420538:	test   al,0x79
  42053a:	out    dx,al
  42053b:	pop    ds
  42053c:	mov    esi,0x49960e15
  420541:	pop    ss
  420542:	outs   dx,BYTE PTR ds:[esi]
  420543:	data16 sar BYTE PTR [eax+ecx*1],cl
  420547:	push   ecx
  420548:	push   0x48c7dacd
  42054d:	repnz in eax,0x5f
  420550:	pop    ebx
  420551:	add    ebx,DWORD PTR [esi-0x18]
  420554:	jne    0x420540
  420556:	mov    esi,0xc7ae47c9
  42055b:	jne    0x4205cc
  42055d:	icebp  
  42055e:	jb     0x4205dc
  420560:	sbb    cl,BYTE PTR [esi]
  420562:	addr16 push ebx
  420564:	lea    cx,ds:0xe695380b
  42056b:	scas   eax,DWORD PTR es:[edi]
  42056c:	inc    edi
  42056d:	lds    edx,FWORD PTR [ecx+0x36]
  420570:	mov    ah,0x8e
  420572:	jp     0x42056e
  420574:	xor    BYTE PTR [ecx],cl
  420576:	add    bh,BYTE PTR [esi+esi*4+0x55e814b8]
  42057d:	mov    DWORD PTR [edi+0x5c],ecx
  420580:	mov    eax,ds:0x16822b53
  420585:	jl     0x420552
  420587:	mov    esp,DWORD PTR [edx+ebp*4+0xc]
  42058b:	add    eax,0xdf047284
  420590:	call   0xfe57bdfc
  420595:	sub    DWORD PTR [ebp-0x52],ecx
  420598:	jb     0x420546
  42059a:	adc    ebx,DWORD PTR [eax-0x69]
  42059d:	lds    ebx,FWORD PTR [ebp+0x45d3f7cf]
  4205a3:	push   ecx
  4205a4:	je     0x420591
  4205a6:	sahf   
  4205a7:	fs dec ebx
  4205a9:	icebp  
  4205aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205ab:	xor    DWORD PTR [edi-0x3c13dcfb],edx
  4205b1:	mov    al,ds:0x42b2b9f0
  4205b6:	xchg   esi,eax
  4205b7:	rcl    BYTE PTR [ecx],cl
  4205b9:	jle    0x4205e4
  4205bb:	shl    BYTE PTR [ecx-0x8be695d],cl
  4205c1:	and    BYTE PTR [esi],bl
  4205c3:	clc    
  4205c4:	idiv   BYTE PTR [ebp-0x51]
  4205c7:	dec    edx
  4205c8:	aad    0x3b
  4205ca:	or     eax,0x26f7add
  4205cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205d0:	pop    edi
  4205d1:	jb     0x4205ec
  4205d3:	fwait
  4205d4:	add    eax,0x72763a3f
  4205d9:	xchg   esp,esi
  4205db:	xchg   BYTE PTR gs:[ebp+0x6f0a3e04],dl
  4205e2:	cmp    bl,BYTE PTR [eax+edx*4+0x6fe6903d]
  4205e9:	or     cl,BYTE PTR [ebp-0x26ba9486]
  4205ef:	and    al,0x6
  4205f1:	pop    ds
  4205f2:	ins    DWORD PTR es:[edi],dx
  4205f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205f4:	or     eax,0x5385d2a8
  4205f9:	inc    ebx
  4205fa:	sbb    edx,DWORD PTR [esi]
  4205fc:	mov    cl,0x11
  4205fe:	pusha  
  4205ff:	xor    edx,DWORD PTR [edi]
  420601:	or     DWORD PTR [edi+ebx*2+0x496861ee],edi
  420608:	add    edi,DWORD PTR [edx+0x32]
  42060b:	shl    DWORD PTR [ecx+0x6b],1
  42060e:	shl    ecx,cl
  420610:	icebp  
  420611:	(bad)  
  420612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420613:	aad    0x9c
  420615:	out    dx,eax
  420616:	enter  0x5650,0x5
  42061a:	mov    bh,dh
  42061c:	add    bh,bl
  42061e:	jns    0x4205bd
  420620:	jns    0x4205e9
  420622:	js     0x420670
  420624:	pop    edi
  420625:	and    eax,0x57779431
  42062a:	loopne 0x42067d
  42062c:	xchg   esp,eax
  42062d:	xchg   esi,eax
  42062e:	and    ah,bl
  420630:	push   eax
  420631:	ret    0xf3b
  420634:	repz jmp DWORD PTR [ecx+ecx*1+0x5]
  420639:	fcom   st(4)
  42063b:	or     bh,BYTE PTR [edx-0x2ebfc73b]
  420641:	mov    cl,0x5d
  420643:	pop    ss
  420644:	xor    cl,dh
  420646:	ja     0x4205cb
  420648:	mov    edi,0xddbea45f
  42064d:	(bad)  
  42064e:	mov    edx,0x1f7b4d91
  420653:	cmp    eax,0xd17b6430
  420658:	imul   edi,esp,0x1cb4885b
	...
  420666:	and    eax,0x55d31474
  42066b:	repz out 0xf6,eax
  42066e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42066f:	adc    bh,BYTE PTR [esi]
  420671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420672:	mov    bh,0x5
  420674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420675:	dec    edi
  420676:	pop    ebx
  420677:	inc    BYTE PTR [ecx]
  420679:	add    BYTE PTR [eax],ah
  42067b:	pop    es
  42067c:	add    BYTE PTR [eax],al
  42067e:	cmp    dh,BYTE PTR [edx+eax*8+0x2ce4137e]
  420685:	mov    esi,0x46ae5613
  42068a:	mov    bh,ah
  42068c:	shl    DWORD PTR ds:0x32d4bbdc,1
  420692:	push   0x17
  420694:	mov    ah,BYTE PTR [eax-0x79353ce9]
  42069a:	pop    edi
  42069b:	fcmovnbe st,st(7)
  42069d:	shl    DWORD PTR [ebp-0x65],cl
  4206a0:	pop    edx
  4206a1:	xchg   ecx,eax
  4206a2:	bnd jbe 0x420691
  4206a5:	push   edx
  4206a6:	das    
  4206a7:	or     DWORD PTR [edx],ecx
  4206a9:	sub    ecx,0x28
  4206ac:	jge    0x42070d
  4206ae:	loopne 0x420651
  4206b0:	leave  
  4206b1:	ins    DWORD PTR es:[edi],dx
  4206b2:	jmp    0x48cf:0x1fdd0374
  4206b9:	retf   0xeb0c
  4206bc:	popf   
  4206bd:	hlt    
  4206be:	stc    
  4206bf:	adc    al,0xeb
  4206c1:	mov    ecx,0x96204f98
  4206c6:	neg    DWORD PTR [eax+0x49]
  4206c9:	mov    cl,dh
  4206cb:	mov    WORD PTR [eax+edi*1],cs
  4206ce:	retf   0x2631
  4206d1:	(bad)  
  4206d3:	pop    edx
  4206d4:	retf   
  4206d5:	(bad)  
  4206d6:	jno    0x4206c8
  4206d8:	outs   dx,DWORD PTR ds:[esi]
  4206d9:	mov    dh,0xf6
  4206db:	inc    esi
  4206dc:	push   ecx
  4206dd:	inc    ebp
  4206de:	jmp    0x4206f6
  4206e0:	jl     0x4206df
  4206e2:	cmp    BYTE PTR [esi+0x34fa458e],bh
  4206e8:	stos   BYTE PTR es:[edi],al
  4206e9:	or     bl,BYTE PTR [edi]
  4206eb:	jg     0x4206b8
  4206ed:	lods   eax,DWORD PTR ds:[esi]
  4206ee:	mov    al,0xe7
  4206f0:	adc    edx,DWORD PTR ds:0x35741f1a
  4206f6:	xchg   esi,eax
  4206f7:	mov    ah,0xf
  4206f9:	push   cs
  4206fa:	xor    eax,0x9f95a81c
  4206ff:	xor    DWORD PTR [ebp+0x1a27de02],esi
  420705:	mov    ecx,0x10efcec6
  42070a:	cmp    eax,0x579fc57f
  42070f:	push   esp
  420710:	mov    ebp,ds
  420712:	cld    
  420713:	pop    edi
  420714:	(bad)  
  420715:	fwait
  420716:	(bad)  
  420717:	(bad)  
  420718:	loopne 0x4206eb
  42071a:	(bad)  [esi-0x1865cbae]
  420720:	icebp  
  420721:	xchg   ecx,eax
  420722:	mov    ch,0xda
  420724:	mov    cl,0x82
  420726:	xchg   esi,eax
  420727:	xor    DWORD PTR [edi-0x2f],esp
  42072a:	adc    BYTE PTR [edi+0x6b48263d],bh
  420730:	mov    ah,0xfe
  420732:	dec    esi
  420733:	push   ds
  420734:	sbb    al,0xb8
  420736:	repnz push DWORD PTR [edi+esi*2]
  42073a:	pop    ecx
  42073b:	sbb    DWORD PTR [ecx],edi
  42073d:	mov    al,al
  42073f:	jp     0x42078c
  420741:	(bad)  
  420742:	mov    ebp,0xc3a20f8
  420747:	inc    esp
  420748:	mov    ds:0x7128f4ab,al
  42074d:	adc    dh,bl
  42074f:	sub    DWORD PTR ds:0xba406289,edx
  420755:	sbb    al,0xcc
  420757:	sbb    al,0x88
  420759:	retf   
  42075a:	shl    ch,cl
  42075c:	pop    ecx
  42075d:	push   ecx
  42075e:	dec    edx
  42075f:	dec    esi
  420760:	adc    edi,eax
  420762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420763:	push   edi
  420764:	push   esp
  420765:	lds    esi,FWORD PTR [edx+0x16]
  420768:	xlat   BYTE PTR ds:[ebx]
  420769:	out    0xcc,eax
  42076b:	mov    edi,fs
  42076d:	cmp    eax,DWORD PTR [esi-0x5b]
  420770:	adc    eax,0x505b94f5
  420775:	xor    ch,BYTE PTR [ebx+0xd267817]
  42077b:	add    al,0xb6
  42077e:	xchg   esi,eax
  42077f:	and    eax,0x8c1ea352
  420784:	sbb    dl,bl
  420786:	mov    al,0x2b
  420788:	or     BYTE PTR [eax+0x77],0xea
  42078c:	int    0x56
  42078e:	push   cs
  42078f:	sbb    DWORD PTR [eax],ebp
  420791:	mov    ds:0x8591c874,al
  420796:	jmp    0x4207cd
  420798:	into   
  420799:	not    DWORD PTR [edx+0x40]
  42079c:	xchg   DWORD PTR [esi+0x66],edi
  42079f:	sar    BYTE PTR [ecx-0xe],0x82
  4207a3:	and    eax,0x90908d9b
  4207a8:	or     eax,0x527505cd
  4207ad:	mov    edi,0xd524c0c3
  4207b2:	pop    edx
  4207b3:	shl    BYTE PTR [edi+0x991e630],0xe8
  4207ba:	shl    DWORD PTR [eax],1
  4207bc:	add    eax,0xee7714e6
  4207c1:	pop    edx
  4207c2:	xchg   edx,eax
  4207c3:	jmp    0xa1447c93
  4207c8:	outs   dx,DWORD PTR ds:[esi]
  4207c9:	ret    
  4207ca:	jle    0x4207de
  4207cc:	cld    
  4207cd:	jae    0x420846
  4207cf:	mov    dh,0xd1
  4207d1:	push   ds
  4207d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207d3:	lods   eax,DWORD PTR ds:[esi]
  4207d4:	adc    ebp,DWORD PTR [ecx]
  4207d6:	je     0x4207a8
  4207d8:	add    BYTE PTR [ebp-0x31dc3628],ah
  4207de:	shl    al,1
  4207e0:	jg     0x42083f
  4207e2:	scas   al,BYTE PTR es:[edi]
  4207e3:	pop    edi
  4207e4:	mov    esi,0xcf22e6a2
  4207e9:	sub    dh,al
  4207eb:	leave  
  4207ec:	push   esp
  4207ed:	sbb    BYTE PTR [ebx],dl
  4207ef:	mov    ch,0x15
  4207f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207f2:	es pusha 
  4207f4:	xchg   ebp,eax
  4207f5:	ins    BYTE PTR es:[edi],dx
  4207f6:	shr    dh,cl
  4207f8:	xor    eax,DWORD PTR [edx-0x6aa4d4a4]
  4207fe:	mov    dl,0xb4
  420800:	mov    esi,ebp
  420802:	out    dx,al
  420803:	sbb    DWORD PTR [eax+0x5c],edx
  420806:	stc    
  420807:	cmc    
  420808:	jmp    0x420792
  42080a:	clc    
  42080b:	nop
  42080c:	fiadd  DWORD PTR [eax+0xfb5f35f]
  420812:	imul   eax,DWORD PTR [ebx+ecx*8-0x1fc53e89],0xba4d5e2d
  42081d:	inc    ebp
  42081e:	test   al,0x4c
  420820:	adc    edx,esp
  420822:	inc    ebp
  420823:	lods   ax,WORD PTR ds:[esi]
  420825:	cdq    
  420826:	mov    ds:0x80f90605,eax
  42082b:	cdq    
  42082c:	mov    WORD PTR [ebp+0x36],?
  42082f:	mov    dh,0x8c
  420831:	mov    bl,0x89
  420833:	rol    BYTE PTR [ebx-0x7b],1
  420836:	pop    edi
  420837:	jl     0x420832
  420839:	enter  0xba52,0xa3
  42083d:	ds mov al,0x19
  420840:	loopne 0x420811
  420842:	xor    al,0xfe
  420844:	nop
  420845:	push   ecx
  420846:	hlt    
  420847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420848:	stc    
  420849:	enter  0x8a1a,0xd
  42084d:	add    eax,0xbf2ac197
  420852:	js     0x4207fb
  420854:	mov    edx,0xfb37e88e
  420859:	add    ecx,DWORD PTR [edi-0x2d]
  42085c:	xor    BYTE PTR [ebp-0x63232d58],0x51
  420863:	push   esi
  420864:	inc    ebx
  420865:	lods   al,BYTE PTR ds:[esi]
  420866:	and    al,0xa5
  420868:	rcr    DWORD PTR [edx+edi*2+0x9058670],0xe8
  420870:	and    DWORD PTR [ebx-0x7133601c],esi
  420876:	inc    ecx
  420877:	das    
  420878:	loope  0x420860
  42087a:	stc    
  42087b:	push   eax
  42087c:	adc    BYTE PTR [eax+ecx*1+0x62f76656],bh
  420883:	xor    edi,ecx
  420885:	sbb    DWORD PTR [edx],0x3c
  420888:	xor    eax,0xffddce74
  42088d:	jns    0x4208f6
  42088f:	cmp    al,0xac
  420891:	mov    ecx,0x2fd1351d
  420896:	cmp    eax,DWORD PTR [eax]
  420898:	sub    esp,DWORD PTR [ecx-0x45bc35f1]
  42089e:	call   0x9ae6912c
  4208a3:	xchg   edx,eax
  4208a4:	dec    esi
  4208a5:	mov    ah,0x7d
  4208a7:	ins    DWORD PTR es:[edi],dx
  4208a8:	inc    edx
  4208a9:	fist   WORD PTR [ebx+ecx*2-0x18916abe]
  4208b0:	cdq    
  4208b1:	mov    eax,ds:0x65e296ed
  4208b6:	imul   esi,DWORD PTR [eax+0x12],0x8976443c
  4208bd:	and    bl,BYTE PTR [edx-0x3e]
  4208c0:	xor    ah,cl
  4208c2:	(bad)  
  4208c3:	lea    edi,[ebp+0x469ae1ee]
  4208c9:	adc    esi,DWORD PTR [ebx-0x27]
  4208cc:	jmp    0x42090e
  4208ce:	pushf  
  4208cf:	sti    
  4208d0:	push   0x7a3b1765
  4208d5:	and    eax,0x3ec042ac
  4208da:	mov    al,ds:0x5a6cbffb
  4208df:	xor    eax,0x360da7e1
  4208e4:	ret    
  4208e5:	or     bh,BYTE PTR [esi+0x4693df8f]
  4208eb:	(bad)  
  4208ec:	pushf  
  4208ed:	inc    edi
  4208ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208ef:	in     al,dx
  4208f0:	out    dx,al
  4208f1:	fistp  WORD PTR [ebx-0x523ada07]
  4208f7:	cmc    
  4208f8:	inc    esp
  4208f9:	clc    
  4208fa:	int3   
  4208fb:	out    0x53,eax
  4208fd:	or     al,0x40
  4208ff:	adc    BYTE PTR [esp+edx*1-0x55514713],0xa
  420907:	dec    edi
  420908:	cmp    DWORD PTR [ebx-0xb],edi
  42090b:	mov    eax,ds:0xc63897a3
  420911:	(bad)  
  420912:	pop    edi
  420913:	pop    ebp
  420914:	adc    DWORD PTR [eax+ebx*2-0x90f527b],0xffffff81
  42091c:	sbb    esp,esp
  42091e:	adc    DWORD PTR [edx+0x38d98162],ecx
  420924:	jmp    0x3d78425b
  420929:	scas   eax,DWORD PTR es:[edi]
  42092a:	push   ss
  42092b:	push   ss
  42092c:	les    esp,FWORD PTR [edi-0x3b]
  42092f:	out    dx,al
  420930:	aad    0xa2
  420932:	icebp  
  420933:	mov    ah,0x27
  420935:	or     bl,ah
  420937:	sub    DWORD PTR [edi-0x6a],0x32
  42093b:	jle    0x4209b3
  42093d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42093e:	addr16 (bad) 
  420940:	cwde   
  420941:	fisttp DWORD PTR [ecx+0x4c08b4e9]
  420947:	imul   edi,DWORD PTR [ebp+0x35],0x4
  42094b:	cmp    DWORD PTR ds:0x26ad45e,esp
  420951:	dec    edi
  420952:	and    DWORD PTR [esi-0x6b],esp
  420955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420956:	idiv   DWORD PTR [edx]
  420958:	(bad)  
  42095a:	xchg   ebp,eax
  42095b:	pop    ss
  42095c:	in     eax,0x5e
  42095e:	jns    0x4208e3
  420960:	cdq    
  420961:	adc    dl,BYTE PTR [ebp-0x4231ac8a]
  420967:	ror    esi,cl
  420969:	stc    
  42096a:	pop    ecx
  42096b:	test   BYTE PTR [eax+0x786ba9],0xb7
  420972:	xchg   esi,eax
  420973:	leave  
  420974:	cmp    DWORD PTR [edi+0xfb73dee],ecx
  42097a:	mov    al,ds:0xaff63758
  42097f:	xchg   ecx,eax
  420980:	mov    ds:0x59eee851,al
  420985:	jo     0x420944
  420987:	cmp    al,0x40
  420989:	stc    
  42098a:	imul   esp,DWORD PTR gs:[edi+0x1b],0xffffffdd
  42098f:	std    
  420990:	repnz lds ebp,FWORD PTR [edi]
  420993:	dec    ecx
  420994:	jo     0x4209cd
  420996:	iret   
  420997:	mov    al,ds:0xca370ccc
  42099c:	shl    BYTE PTR [edx],0xc6
  42099f:	ins    BYTE PTR es:[edi],dx
  4209a0:	adc    ebp,DWORD PTR [ebp+0x34]
  4209a3:	leave  
  4209a4:	and    BYTE PTR [edx+ebx*2],bl
  4209a7:	(bad)  
  4209a9:	adc    BYTE PTR ds:0xdfb5e5b2,cl
  4209af:	pusha  
  4209b0:	out    dx,eax
  4209b1:	jb     0x420a0c
  4209b3:	fdivr  DWORD PTR [edi-0x4d227abd]
  4209b9:	(bad)
  4209bc:	sbb    al,0x81
  4209be:	mov    al,ds:0xdf882d47
  4209c3:	adc    DWORD PTR [esi],ebp
  4209c5:	in     al,0xb1
  4209c7:	sub    al,0x49
  4209c9:	mov    eax,0xfef443a5
  4209ce:	int    0x37
  4209d0:	mov    edi,0x3050d45e
  4209d5:	arpl   WORD PTR [edx-0x31e12d62],ax
  4209db:	dec    ecx
  4209dc:	mov    ds:0xf094d855,al
  4209e1:	rol    DWORD PTR [ebp+0x27],0xab
  4209e5:	std    
  4209e6:	jmp    0x23b:0x655330e0
  4209ed:	pop    ss
  4209ee:	jle    0x4209e7
  4209f0:	scas   eax,DWORD PTR es:[edi]
  4209f1:	push   0x73d37c19
  4209f6:	cmp    ah,BYTE PTR [edx-0x1b67f09c]
  4209fc:	dec    edi
  4209fd:	outs   dx,DWORD PTR ds:[esi]
  4209fe:	ret    
  4209ff:	mov    eax,ds:0xc6fd9378
  420a04:	dec    eax
  420a05:	jp     0x420a05
  420a07:	loop   0x4209f6
  420a09:	xchg   edi,eax
  420a0a:	xchg   DWORD PTR [ecx],ecx
  420a0c:	jmp    0x1846f125
  420a11:	and    esi,DWORD PTR ds:0x443ea251
  420a17:	push   ss
  420a18:	pop    eax
  420a19:	mov    edx,0x1819e5e3
  420a1e:	push   es
  420a1f:	inc    edx
  420a20:	int3   
  420a21:	add    BYTE PTR [ecx+0x343c50dd],0x2
  420a28:	jb     0x420a9b
  420a2a:	out    dx,al
  420a2b:	add    eax,DWORD PTR [esi-0x3d]
  420a2e:	ds jmp 0x420a66
  420a31:	fnstsw WORD PTR [esi-0x61]
  420a34:	adc    eax,0xedbb85a1
  420a39:	sub    ch,bl
  420a3b:	inc    edx
  420a3c:	out    dx,eax
  420a3d:	scas   al,BYTE PTR es:[edi]
  420a3e:	mov    bl,0x3d
  420a40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a41:	cld    
  420a42:	xchg   ebx,eax
  420a43:	mov    edi,0x976e5a3b
  420a48:	call   0x934582b5
  420a4d:	test   DWORD PTR [eax-0xd],esi
  420a50:	inc    bh
  420a52:	fmul   DWORD PTR [ecx-0x17]
  420a55:	mov    edx,0xffe08c51
  420a5a:	jne    0x420ab6
  420a5c:	pcmpgtb mm1,mm2
  420a5f:	icebp  
  420a60:	clc    
  420a61:	mov    al,0x17
  420a63:	fstp   QWORD PTR [esi-0xf]
  420a66:	(bad)  
  420a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a68:	fcmovne st,st(3)
  420a6a:	pop    DWORD PTR [esi-0x4]
  420a6d:	popa   
  420a6e:	leave  
  420a6f:	js     0x420acc
  420a71:	mov    ds:0xa4bc743c,al
  420a76:	and    BYTE PTR [esi],dl
  420a78:	inc    edx
  420a79:	fisttp WORD PTR [ecx+ebp*4+0x54]
  420a7d:	out    dx,eax
  420a7e:	push   ss
  420a7f:	das    
  420a80:	rcl    al,cl
  420a82:	mov    edi,0x71ae43a3
  420a87:	push   edi
  420a88:	sub    DWORD PTR [esi+0x680ee518],ecx
  420a8e:	add    eax,0xa78d7aa1
  420a93:	xchg   ebx,eax
  420a94:	pop    ecx
  420a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a96:	dec    ebp
  420a97:	adc    al,0x58
  420a99:	push   ebx
  420a9a:	dec    esp
  420a9b:	jmp    0x71905247
  420aa0:	lock scas al,BYTE PTR es:[edi]
  420aa2:	xor    edi,DWORD PTR [eax-0x11]
  420aa5:	jo     0x420af5
  420aa7:	jb     0x420a9b
  420aa9:	jg     0x420b1f
  420aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420aac:	idiv   BYTE PTR [ebx*4+0x637c53b1]
  420ab3:	adc    ch,BYTE PTR ds:[esi]
  420ab6:	xor    BYTE PTR [edi],ch
  420ab8:	loope  0x420ae9
  420aba:	shr    DWORD PTR [ebx-0x30ff1784],1
  420ac0:	and    al,0x54
  420ac2:	lods   eax,DWORD PTR ds:[esi]
  420ac3:	pop    eax
  420ac4:	push   edi
  420ac5:	adc    esi,DWORD PTR [esi-0x41]
  420ac8:	add    al,BYTE PTR [ebx]
  420aca:	stos   DWORD PTR es:[edi],eax
  420acb:	adc    eax,0xc0af08b6
  420ad0:	nop
  420ad1:	cmp    BYTE PTR ds:0xa18314cf,ch
  420ad7:	cmp    al,0x98
  420ad9:	inc    ecx
  420ada:	pop    eax
  420adb:	clc    
  420adc:	mov    dh,0xe8
  420ade:	jl     0x420aed
  420ae0:	jb     0x420a9f
  420ae2:	jle    0x420ad5
  420ae4:	push   ecx
  420ae5:	test   al,0x80
  420ae7:	or     ch,bl
  420ae9:	sbb    ax,0x9102
  420aed:	and    eax,0x9f27382f
  420af2:	and    BYTE PTR [edx+0x1c],0x99
  420af6:	pop    es
  420af7:	ss or  cl,bl
  420afa:	mov    eax,0x3aadffe4
  420aff:	adc    dh,BYTE PTR [ebx+0x1d9df6ad]
  420b05:	ret    
  420b06:	push   ebx
  420b07:	dec    ebp
  420b08:	jne    0x420b14
  420b0a:	icebp  
  420b0b:	pop    ss
  420b0c:	lods   eax,DWORD PTR ds:[esi]
  420b0d:	xchg   ebx,eax
  420b0e:	in     eax,dx
  420b0f:	mov    ch,0x40
  420b11:	adc    eax,DWORD PTR [eax*1+0x5df374d5]
  420b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b19:	xor    edi,DWORD PTR [ecx-0x7315109c]
  420b1f:	or     ebp,edi
  420b21:	pop    ecx
  420b22:	add    eax,0xdd7a7c4b
  420b27:	add    DWORD PTR [edx+0x6a496a35],esp
  420b2d:	mov    edx,0xa07d817a
  420b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b34:	mov    ah,0xab
  420b36:	adc    BYTE PTR [esi-0x78],dl
  420b39:	ret    
  420b3a:	jb     0x420adb
  420b3c:	push   0xdc6d7002
  420b41:	cmp    BYTE PTR [ecx+0x40],cl
  420b44:	je     0x420b30
  420b46:	ja     0x420ae7
  420b48:	outs   dx,DWORD PTR ds:[esi]
  420b49:	jmp    0x420b2c
  420b4b:	push   ecx
  420b4c:	hlt    
  420b4d:	xor    ebp,DWORD PTR [ebx-0x59]
  420b50:	sahf   
  420b51:	loope  0x420b05
  420b53:	scas   eax,DWORD PTR es:[edi]
  420b54:	dec    eax
  420b55:	jmp    FWORD PTR [ebx-0x3f41062b]
  420b5b:	cld    
  420b5c:	add    eax,0x858b77a1
  420b61:	in     eax,dx
  420b62:	xor    edi,DWORD PTR [edi]
  420b64:	in     al,dx
  420b65:	xor    esi,DWORD PTR [ebx]
  420b67:	sub    BYTE PTR [eax],dl
  420b69:	mov    ecx,0x418b3197
  420b6e:	ret    
  420b6f:	push   cs
  420b70:	outs   dx,BYTE PTR ds:[esi]
  420b71:	mov    al,0x5
  420b73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b74:	out    dx,al
  420b75:	dec    esi
  420b76:	imul   ecx,ebx,0xcb8883e
  420b7c:	mov    eax,DWORD PTR [eax]
  420b7e:	mov    al,ds:0x3b0dd534
  420b83:	mov    edx,DWORD PTR [ecx]
  420b85:	sbb    edi,DWORD PTR [edi+0x56de2d1d]
  420b8b:	into   
  420b8c:	pop    ebp
  420b8d:	mov    bh,0xbb
  420b8f:	and    ebx,DWORD PTR [edi]
  420b91:	dec    ebp
  420b92:	mov    cl,0xd6
  420b94:	mov    cl,ch
  420b96:	or     DWORD PTR [ebp-0x77],ebp
  420b99:	jae    0x420b8e
  420b9b:	mov    bh,0x51
  420b9d:	xchg   esi,eax
  420b9e:	xchg   edi,eax
  420b9f:	mov    ecx,0x21acf1c0
  420ba4:	push   edi
  420ba5:	cmp    eax,0x80cd50f3
  420baa:	add    al,0x83
  420bac:	mov    bl,BYTE PTR [ebp-0x38]
  420baf:	sub    DWORD PTR [edx],0xffffff83
  420bb2:	call   0xe0abffa6
  420bb7:	pop    eax
  420bb8:	cmc    
  420bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bba:	aad    0x7c
  420bbc:	jns    0x420c1f
  420bbe:	js     0x420b99
  420bc0:	jecxz  0x420c2f
  420bc2:	and    DWORD PTR [esi+0x6d],esp
  420bc5:	jl     0x420b58
  420bc7:	int    0x6
  420bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bca:	outs   dx,BYTE PTR ds:[esi]
  420bcb:	mov    DWORD PTR [ebx+0x1c],eax
  420bce:	sub    DWORD PTR [ecx+0x14],esi
  420bd1:	sub    BYTE PTR [eax+ecx*4+0x2e66e1f5],dl
  420bd8:	in     al,dx
  420bd9:	and    DWORD PTR [ebx+0x3945c53c],0x3b234f9b
  420be3:	sbb    eax,0x21db07bf
  420be8:	sbb    esp,DWORD PTR [ebx-0x72]
  420beb:	fnstcw WORD PTR [esi]
  420bed:	sbb    bh,BYTE PTR [edx]
  420bef:	inc    edi
  420bf0:	es loope 0x420b7b
  420bf3:	arpl   WORD PTR [edx+edi*4-0x4f],sp
  420bf7:	cmp    BYTE PTR [esi+0x59],bh
  420bfa:	and    ebp,ecx
  420bfc:	xchg   edi,eax
  420bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bfe:	jmp    0x420bbd
  420c00:	inc    ecx
  420c01:	fcomp  DWORD PTR [edx+0x4a]
  420c04:	imul   ecx,edx,0xa83803f4
  420c0a:	es gs pop es
  420c0d:	and    DWORD PTR ds:0xdfb11f4a,edi
  420c13:	test   DWORD PTR [edi-0x68],0x421b0667
  420c1a:	push   0x55
  420c1c:	fmulp  st(6),st
  420c1e:	pop    ebp
  420c1f:	push   edi
  420c20:	sbb    al,0xa8
  420c22:	ret    
  420c23:	jb     0x420be1
  420c25:	jb     0x420c31
  420c27:	xchg   ebp,eax
  420c28:	cld    
  420c29:	mov    ds:0xa8981c9,al
  420c2e:	inc    eax
  420c2f:	push   ebp
  420c30:	xor    eax,0x564b640a
  420c35:	in     eax,0xd5
  420c37:	mov    bh,BYTE PTR [eax+0x36]
  420c3a:	cmp    BYTE PTR [edx-0x3b3ed3a],ch
  420c40:	cmp    ecx,DWORD PTR [ebx-0x2f]
  420c43:	cmp    eax,0xce52a4d4
  420c48:	sbb    al,0x67
  420c4a:	stc    
  420c4b:	mov    esp,0x3ef5e771
  420c50:	sahf   
  420c51:	fcmovnbe st,st(0)
  420c53:	aad    0x8e
  420c55:	push   ds
  420c56:	shl    DWORD PTR [ecx-0x61a070ac],cl
  420c5c:	pop    esi
  420c5d:	test   al,0x51
  420c5f:	and    al,0xe4
  420c61:	aad    0xe3
  420c63:	jmp    0x420c28
  420c65:	pop    ebx
  420c66:	or     DWORD PTR [ebx-0xb1fb530],esp
  420c6c:	aaa    
  420c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c6e:	jge    0x420cec
  420c70:	jns    0x420c5a
  420c72:	test   DWORD PTR [ecx],esi
  420c74:	mov    al,ds:0x2cb936b7
  420c79:	xchg   ebx,eax
  420c7a:	dec    ecx
  420c7b:	cmp    BYTE PTR [edx],cl
  420c7d:	aad    0x37
  420c7f:	mov    dl,0x87
  420c81:	fld    DWORD PTR [eax+0x52]
  420c84:	jmp    0x4a695de3
  420c89:	ins    BYTE PTR es:[edi],dx
  420c8a:	jbe    0x420c27
  420c8c:	and    DWORD PTR [eax],ebx
  420c8e:	mov    DWORD PTR ds:0xaea55b0e,0x794546c4
  420c98:	(bad)  
  420c99:	test   al,0xdd
  420c9b:	(bad)
  420c9e:	jle    0x420c93
  420ca0:	or     dh,BYTE PTR [esi+0x4f39f4b3]
  420ca6:	pop    ebx
  420ca7:	out    dx,eax
  420ca8:	jmp    0xdace6ed4
  420cad:	jg     0x420c68
  420caf:	repnz (bad) 
  420cb1:	mov    ebp,0xf265f70a
  420cb6:	(bad)  
  420cb7:	rcl    DWORD PTR [esi+0x443c273a],cl
  420cbd:	fadd   st(7),st
  420cbf:	or     DWORD PTR [ebx+0x52d529f3],esi
  420cc5:	jl     0x420c8c
  420cc7:	lods   al,BYTE PTR ds:[esi]
  420cc8:	add    al,0x11
  420cca:	jmp    0xd303:0xbdd703c7
  420cd1:	es xchg esp,eax
  420cd3:	adc    eax,0xbb5272dc
  420cd8:	or     DWORD PTR [ebp+0x4682035c],esp
  420cde:	mov    DWORD PTR [edx-0x70b8935a],esp
  420ce4:	mov    al,0x39
  420ce6:	dec    ecx
  420ce7:	out    dx,eax
  420ce8:	xor    dh,bh
  420cea:	push   edx
  420ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cec:	sub    ebp,ebx
  420cee:	rcl    ah,cl
  420cf0:	popf   
  420cf1:	scas   eax,DWORD PTR es:[edi]
  420cf2:	(bad)  
  420cf4:	lea    ebx,[ebx]
  420cf6:	push   ebp
  420cf7:	fcom   QWORD PTR [edx]
  420cf9:	xor    al,0x13
  420cfb:	mov    bl,0xdb
  420cfd:	adc    eax,0xf38f8eb1
  420d02:	jmp    FWORD PTR [ebp-0x3d]
  420d05:	sbb    BYTE PTR [edx-0x5d],0x69
  420d09:	das    
  420d0a:	cli    
  420d0b:	in     eax,dx
  420d0c:	aas    
  420d0d:	sahf   
  420d0e:	and    dl,BYTE PTR [ecx*2+0x4ea90c89]
  420d15:	lods   al,BYTE PTR ds:[esi]
  420d16:	retf   
  420d17:	inc    edi
  420d18:	call   esi
  420d1a:	or     bh,BYTE PTR [edx-0x1c]
  420d1d:	fdivr  QWORD PTR [esi]
  420d1f:	sbb    eax,0xecf22029
  420d24:	jae    0x420d73
  420d26:	add    DWORD PTR [ebp+0x7b51fa70],eax
  420d2c:	sub    BYTE PTR [ecx+ebx*2],dl
  420d2f:	xchg   ebp,eax
  420d30:	es cmp eax,0x4631cda7
  420d36:	push   esp
  420d37:	adc    ecx,DWORD PTR [ebp-0x20dfbf10]
  420d3d:	and    al,0x4e
  420d3f:	dec    esp
  420d40:	mov    edx,DWORD PTR [eax]
  420d42:	lea    esi,cs:[edx+0x1b]
  420d46:	clc    
  420d47:	add    dh,BYTE PTR [eax+0x4f]
  420d4a:	mov    esp,0xbf883e57
  420d4f:	ja     0x420da8
  420d51:	ins    BYTE PTR es:[edi],dx
  420d52:	in     al,0x63
  420d54:	and    BYTE PTR [ebp-0x11],0x62
  420d58:	mov    WORD PTR [ecx+ecx*8+0x4],ss
  420d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d5d:	scas   eax,DWORD PTR es:[edi]
  420d5e:	imul   esi,DWORD PTR [edi-0x10ee3d83],0xf9f5e8c1
  420d68:	adc    BYTE PTR [ecx+ebx*1+0x5b134fe2],dl
  420d6f:	arpl   di,dx
  420d71:	push   edi
  420d72:	mov    edi,0xc7f98fd1
  420d77:	mov    esp,0x4bcbe1b9
  420d7c:	jecxz  0x420dd6
  420d7e:	hlt    
  420d7f:	jmp    0x420df6
  420d81:	xchg   ebp,eax
  420d82:	adc    BYTE PTR [edx+0x58516a9d],dl
  420d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d89:	jo     0x420d42
  420d8b:	inc    edi
  420d8c:	mov    esp,0xf2dcab9f
  420d91:	mov    eax,0x5eb3e6c0
  420d96:	out    dx,al
  420d97:	pop    ebp
  420d98:	in     eax,dx
  420d99:	pop    ss
  420d9a:	jmp    0x0:0xa8d471
  420da1:	add    BYTE PTR [eax],al
  420da3:	add    BYTE PTR [eax],al
  420da5:	add    BYTE PTR [esi+0x2b],dh
  420da8:	dec    eax
  420da9:	jbe    0x420e08
  420dab:	ja     0x420e2b
  420dad:	sub    esi,DWORD PTR [ebp-0x4b]
  420db0:	(bad)  
  420db1:	retf   0x55ae
  420db4:	ds enter 0x57b,0x2
  420db9:	add    BYTE PTR [eax],bl
  420dbb:	add    BYTE PTR [eax],al
  420dbd:	add    bh,dl
  420dbf:	lock lea eax,[edi+0x7d8e775d]
  420dc6:	sti    
  420dc7:	jb     0x420dd4
  420dc9:	pop    eax
  420dca:	mov    edx,0x56045cbb
  420dcf:	cmc    
  420dd0:	inc    edx
  420dd1:	add    edi,DWORD PTR [ebx+0x12162a]
	...
